{"version":3,"file":"TextPrompt.test.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/TextPrompt.test.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,oBAAoB,EAAC,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAC,kBAAkB,EAAC,MAAM,qCAAqC,CAAC;AACvE,OAAO,KAAK,GAAG,MAAM,eAAe,CAAC;AAErC,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAElC,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAEnB,kBAAkB,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAC3C,IAAI,SAAyB,CAAC;IAC9B,UAAU,CAAC,GAAG,EAAE;QACd,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,oBAAoB,CAAC,SAAS,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,SAAS,YAAY,CAAC,QAAyB;QAC7C,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAChC,MAAM,OAAO,GAAG,SAAS,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACvB,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,MAAM,GAAG,YAAY,CAAC,IAAI,CAAA,oDAAoD,CAAC,CAAC;QACtF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;QAC7D,MAAM,MAAM,GAAG,YAAY,CAAC,IAAI,CAAA,oDAAoD,CAAC,CAAC;QACtF,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAEvC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QACzC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,iBAAiB,CAAC,CAAC;QAE9D,MAAM,WAAW,GAAG,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,mBAAmB,CAAC,CAAC;QAC1E,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC3B,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;QAC/D,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,QAAQ,EAAE,EAAE,iBAAiB,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE;QAC7B,MAAM,MAAM,GAAG,YAAY,CAAC,IAAI,CAAA,oDAAoD,CAAC,CAAC;QACtF,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAEvC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,EAAW,CAAC;QACvC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAE5C,MAAM,WAAW,GAAG,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,mBAAmB,CAAC,CAAC;QAC1E,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC3B,WAAW,CAAC,WAAW,GAAG,aAAa,CAAC;QACxC,WAAW,CAAC,aAAa,CAAC,IAAI,aAAa,CAAC,SAAS,EAAE,EAAC,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;QACvF,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAClC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QACpF,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE;QAC7B,MAAM,MAAM,GAAG,YAAY,CAAC,IAAI,CAAA,oDAAoD,CAAC,CAAC;QACtF,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAEvC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,EAAW,CAAC;QACvC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAE5C,MAAM,WAAW,GAAG,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,mBAAmB,CAAC,CAAC;QAC1E,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC3B,WAAW,CAAC,WAAW,GAAG,aAAa,CAAC;QACxC,WAAW,CAAC,aAAa,CAAC,IAAI,aAAa,CAAC,SAAS,EAAE,EAAC,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;QACxF,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAoC,CAAC;QAC5F,MAAM,CAAC,WAAW,GAAG,iBAAiB,CAAC;QACvC,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAEvC,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAE9B,MAAM,WAAW,GAAG,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,mBAAmB,CAAC,CAAC;QAC1E,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC3B,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,SAAS,cAAc;QACrB,MAAM,EAAC,OAAO,EAAE,OAAO,EAAC,GAAG,OAAO,CAAC,aAAa,EAA8B,CAAC;QAC/E,MAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;QAC3F,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE;YAC1C,cAAc,CAAC,OAAO,EAAE,CAAC;YACzB,OAAO,CAAC,WAAW,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,MAAM,GAAG,YAAY,CAAC,IAAI,CAAA;;;;;kBAKlB,CAAC,CAAC;QAChB,MAAM,iBAAiB,GAAG,cAAc,EAAE,CAAC;QAC3C,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAEnC,MAAM,WAAW,GAAG,MAAM,iBAAiB,CAAC;QAC5C,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,EAAC,IAAI,EAAE,YAAY,EAAC,EAAE,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;QACpE,iBAAiB;QACjB,YAAY,CAAC,IAAI,CAAA;;;;;kBAKH,CAAC,CAAC;QAEhB,uFAAuF;QACvF,MAAM,cAAc,GAAG,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAA;;;;;;;;oBAQ9B,CAAC,CAAC;QAElB,MAAM,cAAc,GAAG,cAAc,EAAE,CAAC;QACxC,2CAA2C;QAC3C,YAAY,CAAC,IAAI,CAAA;;;gCAGW,cAAc;;;;;;oBAM1B,CAAC,CAAC;QAClB,MAAM,WAAW,GAAG,MAAM,cAAc,CAAC;QACzC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,EAAC,IAAI,EAAE,YAAY,EAAC,EAAE,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAChE,iBAAiB;QACjB,YAAY,CAAC,IAAI,CAAA;;;;;kBAKH,CAAC,CAAC;QAEhB,mEAAmE;QACnE,MAAM,cAAc,GAAG,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAA;;;;;;;kBAOhC,CAAC,CAAC;QAEhB,MAAM,cAAc,GAAG,cAAc,EAAE,CAAC;QACxC,2CAA2C;QAC3C,YAAY,CAAC,IAAI,CAAA;;;;gCAIW,cAAc;;;;;;oBAM1B,CAAC,CAAC;QAClB,MAAM,WAAW,GAAG,MAAM,cAAc,CAAC;QACzC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,EAAC,IAAI,EAAE,sBAAsB,EAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithLocale} from '../../testing/EnvironmentHelpers.js';\nimport * as Lit from '../lit/lit.js';\n\nimport * as UI from './legacy.js';\n\nconst {html} = Lit;\n\ndescribeWithLocale('TextPromptElement', () => {\n  let container: HTMLDivElement;\n  beforeEach(() => {\n    container = document.createElement('div');\n    renderElementIntoDOM(container);\n  });\n\n  function renderPrompt(template: Lit.LitTemplate): UI.TextPrompt.TextPromptElement {\n    Lit.render(template, container);\n    const element = container.querySelector('devtools-prompt');\n    assert.exists(element);\n    return element;\n  }\n\n  it('renders its contents', async () => {\n    const prompt = renderPrompt(html`<devtools-prompt>Initial content</devtools-prompt>`);\n    assert.strictEqual(prompt.innerText, 'Initial content');\n  });\n\n  it('turns into a text input when starting to edit', async () => {\n    const prompt = renderPrompt(html`<devtools-prompt>Initial content</devtools-prompt>`);\n    prompt.setAttribute('editing', 'true');\n\n    assert.strictEqual(prompt.innerText, '');\n    assert.strictEqual(prompt.deepInnerText(), 'Initial content');\n\n    const placeholder = prompt.shadowRoot?.querySelector('[contenteditable]');\n    assert.exists(placeholder);\n    assert.strictEqual(placeholder.textContent, 'Initial content');\n    assert.strictEqual(window.getSelection()?.toString(), 'Initial content');\n  });\n\n  it('sends commit events', () => {\n    const prompt = renderPrompt(html`<devtools-prompt>Initial content</devtools-prompt>`);\n    prompt.setAttribute('editing', 'true');\n\n    const listener = sinon.stub<[Event]>();\n    prompt.addEventListener('commit', listener);\n\n    const placeholder = prompt.shadowRoot?.querySelector('[contenteditable]');\n    assert.exists(placeholder);\n    placeholder.textContent = 'New content';\n    placeholder.dispatchEvent(new KeyboardEvent('keydown', {key: 'Enter', bubbles: true}));\n    sinon.assert.calledOnce(listener);\n    assert.instanceOf(listener.args[0][0], UI.TextPrompt.TextPromptElement.CommitEvent);\n    assert.strictEqual(listener.args[0][0].detail, 'New content');\n  });\n\n  it('sends cancel events', () => {\n    const prompt = renderPrompt(html`<devtools-prompt>Initial content</devtools-prompt>`);\n    prompt.setAttribute('editing', 'true');\n\n    const listener = sinon.stub<[Event]>();\n    prompt.addEventListener('cancel', listener);\n\n    const placeholder = prompt.shadowRoot?.querySelector('[contenteditable]');\n    assert.exists(placeholder);\n    placeholder.textContent = 'New content';\n    placeholder.dispatchEvent(new KeyboardEvent('keydown', {key: 'Escape', bubbles: true}));\n    sinon.assert.calledOnce(listener);\n  });\n\n  it('enters editing mode when connected to the DOM', () => {\n    const prompt = document.createElement('devtools-prompt') as UI.TextPrompt.TextPromptElement;\n    prompt.textContent = 'Initial content';\n    prompt.setAttribute('editing', 'true');\n\n    container.appendChild(prompt);\n\n    const placeholder = prompt.shadowRoot?.querySelector('[contenteditable]');\n    assert.exists(placeholder);\n    assert.strictEqual(placeholder.textContent, 'Initial content');\n  });\n\n  function stubSuggestBox() {\n    const {resolve, promise} = Promise.withResolvers<UI.SuggestBox.Suggestion[]>();\n    const suggestBoxStub = sinon.stub(UI.SuggestBox.SuggestBox.prototype, 'updateSuggestions');\n    suggestBoxStub.callsFake((_, suggestions) => {\n      suggestBoxStub.restore();\n      resolve(suggestions);\n    });\n    return promise;\n  }\n\n  it('shows completions', async () => {\n    const prompt = renderPrompt(html`\n      <devtools-prompt completions=completion-id></devtools-prompt>\n      <datalist id=completion-id>\n        <option>suggestion</option>\n        <option>another</option>\n      </datalist>`);\n    const suggestBoxPromise = stubSuggestBox();\n    prompt.setAttribute('editing', '');\n\n    const suggestions = await suggestBoxPromise;\n    assert.deepEqual(suggestions, [{text: 'suggestion'}, {text: 'another'}]);\n  });\n\n  it('allows attaching a completions datalist just-in-time', async () => {\n    // Initial render\n    renderPrompt(html`\n      <devtools-prompt></devtools-prompt>\n      <datalist id=completion-id>\n        <option>suggestion</option>\n        <option>another</option>\n      </datalist>`);\n\n    // Event handler to attch the completions datalist by setting the completions attribute\n    const setCompletions = () => renderPrompt(html`\n        <devtools-prompt\n          editing\n          completions=completion-id\n          ></devtools-prompt>\n        <datalist id=completion-id>\n          <option>suggestion</option>\n          <option>another</option>\n        </datalist>`);\n\n    const suggestBoxStub = stubSuggestBox();\n    // Start editing to trigger the suggest box\n    renderPrompt(html`\n        <devtools-prompt\n          editing\n          @beforeautocomplete=${setCompletions}\n          ></devtools-prompt>\n        ></devtools-prompt>\n        <datalist id=completion-id>\n          <option>suggestion</option>\n          <option>another</option>\n        </datalist>`);\n    const suggestions = await suggestBoxStub;\n    assert.deepEqual(suggestions, [{text: 'suggestion'}, {text: 'another'}]);\n  });\n\n  it('allows updating completions content just-in-time', async () => {\n    // Initial render\n    renderPrompt(html`\n      <devtools-prompt></devtools-prompt>\n      <datalist id=completion-id>\n        <option>suggestion</option>\n        <option>another</option>\n      </datalist>`);\n\n    // Event handler to update the contents of the completions datalist\n    const setCompletions = () => renderPrompt(html`\n        <devtools-prompt\n          editing\n          completions=completion-id\n          ></devtools-prompt>\n      <datalist id=completion-id>\n        <option>modified and removed</option>\n      </datalist>`);\n\n    const suggestBoxStub = stubSuggestBox();\n    // Start editing to trigger the suggest box\n    renderPrompt(html`\n        <devtools-prompt\n          editing\n          completions=completion-id\n          @beforeautocomplete=${setCompletions}\n          ></devtools-prompt>\n        ></devtools-prompt>\n        <datalist id=completion-id>\n          <option>suggestion</option>\n          <option>another</option>\n        </datalist>`);\n    const suggestions = await suggestBoxStub;\n    assert.deepEqual(suggestions, [{text: 'modified and removed'}]);\n  });\n});\n"]}