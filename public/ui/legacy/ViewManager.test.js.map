{"version":3,"file":"ViewManager.test.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/ViewManager.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type {EventTargetEvent} from '../../core/common/EventTarget.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\n\nimport * as UI from './legacy.js';\n\ninterface MockedLocation {\n  location: UI.View.TabbedViewLocation;\n  isShown: boolean;\n}\n\ndescribeWithEnvironment('ViewManager', () => {\n  let viewManager: UI.ViewManager.ViewManager;\n  let locationResolver: MockLocationResolver;\n\n  class MockLocationResolver implements UI.View.ViewLocationResolver {\n    locations = new Map<string|undefined, MockedLocation>();\n\n    resolveLocation(locationName?: string) {\n      return this.locations.get(locationName)?.location ?? null;\n    }\n\n    createLocation(panelName: string, initialVisibility: boolean, defaultTab: string|undefined) {\n      const location = viewManager.createTabbedLocation(() => {\n        this.locations.get(panelName)!.isShown = initialVisibility;\n      }, panelName, false, true, defaultTab);\n      this.locations.set(panelName, {location, isShown: initialVisibility});\n      sinon.stub(location.tabbedPane(), 'isShowing').callsFake(() => this.locations.get(panelName)?.isShown ?? false);\n    }\n\n    setPanelVisibility(panelName: string, isShown: boolean) {\n      const mock = this.locations.get(panelName);\n      if (!mock) {\n        return;\n      }\n      mock.isShown = isShown;\n      mock.location.tabbedPane().dispatchEventToListeners(\n          UI.TabbedPane.Events.PaneVisibilityChanged, {isVisible: isShown});\n    }\n  }\n\n  function startListeningForViewVisibilityUpdates() {\n    const events: Array<EventTargetEvent<UI.ViewManager.ViewVisibilityEventData>> = [];\n    const listener =\n        viewManager.addEventListener(UI.ViewManager.Events.VIEW_VISIBILITY_CHANGED, event => events.push(event));\n    return {\n      finishAndGetEvents() {\n        viewManager.removeEventListener(UI.ViewManager.Events.VIEW_VISIBILITY_CHANGED, listener.listener);\n        return events;\n      },\n    };\n  }\n\n  beforeEach(() => {\n    UI.ViewManager.resetViewRegistration();\n    locationResolver = new MockLocationResolver();\n\n    UI.ViewManager.registerLocationResolver({\n      name: UI.ViewManager.ViewLocationValues.PANEL,\n      category: UI.ViewManager.ViewLocationCategory.PANEL,\n      async loadResolver() {\n        return locationResolver;\n      },\n    });\n\n    UI.ViewManager.registerLocationResolver({\n      name: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n      category: UI.ViewManager.ViewLocationCategory.DRAWER,\n      async loadResolver() {\n        return locationResolver;\n      },\n    });\n\n    const testViews: Array<{id: Lowercase<string>, location: UI.ViewManager.ViewLocationValues}> = [\n      {id: 'view-1', location: UI.ViewManager.ViewLocationValues.PANEL},\n      {id: 'view-2', location: UI.ViewManager.ViewLocationValues.PANEL},\n      {id: 'view-3', location: UI.ViewManager.ViewLocationValues.PANEL},\n      {id: 'drawer-view-1', location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW}\n    ];\n    for (const {id, location} of testViews) {\n      UI.ViewManager.registerViewExtension({\n        id,\n        location,\n        commandPrompt: () => i18n.i18n.lockedString(id),\n        title: () => i18n.i18n.lockedString(id),\n        async loadView() {\n          return new UI.Widget.Widget();\n        },\n      });\n    }\n\n    viewManager = UI.ViewManager.ViewManager.instance({forceNew: true});\n    locationResolver.createLocation(UI.ViewManager.ViewLocationValues.PANEL, true, 'view-1');\n    locationResolver.createLocation(UI.ViewManager.ViewLocationValues.DRAWER_VIEW, false, undefined);\n  });\n\n  it('correctly reports initial visibility', async () => {\n    assert.isTrue(viewManager.isViewVisible('view-1'), 'view-1 should be visible');\n    assert.isFalse(viewManager.isViewVisible('view-2'), 'view-2 should not be visible');\n    assert.isFalse(viewManager.isViewVisible('drawer-view-1'), 'drawer-view should not be visible');\n  });\n\n  it('correctly reports visibility after switching view', async () => {\n    await viewManager.showView('view-2');\n    assert.isFalse(viewManager.isViewVisible('view-1'), 'view-1 should not be visible after switching');\n    assert.isTrue(viewManager.isViewVisible('view-2'), 'view-2 should be visible after switching');\n  });\n\n  it('returns false for a non-existent view', () => {\n    assert.isFalse(viewManager.isViewVisible('non-existent-view'));\n  });\n\n  it('emits single event when a view is shown', async () => {\n    const eventListener = startListeningForViewVisibilityUpdates();\n    await viewManager.showView('drawer-view-1');\n    const events = eventListener.finishAndGetEvents();\n    assert.lengthOf(events, 1);\n    const eventData = events[0].data;\n    assert.strictEqual(eventData.location, UI.ViewManager.ViewLocationValues.DRAWER_VIEW);\n    assert.strictEqual(eventData.revealedViewId, 'drawer-view-1');\n    assert.isUndefined(eventData.hiddenViewId);\n  });\n\n  it('emits single event when switching between views', async () => {\n    const eventListener = startListeningForViewVisibilityUpdates();\n    await viewManager.showView('view-2');\n    const events = eventListener.finishAndGetEvents();\n    assert.lengthOf(events, 1);\n    const eventData = events[0].data;\n    assert.strictEqual(eventData.location, UI.ViewManager.ViewLocationValues.PANEL);\n    assert.strictEqual(eventData.revealedViewId, 'view-2');\n    assert.strictEqual(eventData.hiddenViewId, 'view-1');\n  });\n\n  it('correctly dispatches events to multiple listeners', async () => {\n    const promise1 = viewManager.once(UI.ViewManager.Events.VIEW_VISIBILITY_CHANGED);\n    const promise2 = viewManager.once(UI.ViewManager.Events.VIEW_VISIBILITY_CHANGED);\n    await viewManager.showView('view-2');\n    const eventsData = await Promise.all([promise1, promise2]);\n\n    for (const eventData of eventsData) {\n      assert.strictEqual(eventData.location, UI.ViewManager.ViewLocationValues.PANEL);\n      assert.strictEqual(eventData.revealedViewId, 'view-2');\n      assert.strictEqual(eventData.hiddenViewId, 'view-1');\n    }\n  });\n\n  it('correctly reports visibility when panel is hidden', async () => {\n    await viewManager.showView('drawer-view-1');\n    locationResolver.setPanelVisibility(UI.ViewManager.ViewLocationValues.DRAWER_VIEW, false);\n    assert.isFalse(viewManager.isViewVisible('drawer-view-1'), 'drawer-view-1 should not be visible');\n  });\n\n  it('correctly dispatches event when panel is hidden', async () => {\n    const eventListener = startListeningForViewVisibilityUpdates();\n    locationResolver.setPanelVisibility(UI.ViewManager.ViewLocationValues.PANEL, false);\n    const events = eventListener.finishAndGetEvents();\n    assert.lengthOf(events, 1);\n    assert.strictEqual(events[0].data.location, UI.ViewManager.ViewLocationValues.PANEL);\n    assert.isUndefined(events[0].data.revealedViewId);\n    assert.strictEqual(events[0].data.hiddenViewId, 'view-1');\n  });\n\n  it('correctly dispatches event when panel is shown again', async () => {\n    locationResolver.setPanelVisibility(UI.ViewManager.ViewLocationValues.PANEL, false);\n    const eventListener = startListeningForViewVisibilityUpdates();\n    locationResolver.setPanelVisibility(UI.ViewManager.ViewLocationValues.PANEL, true);\n    const events = eventListener.finishAndGetEvents();\n    assert.lengthOf(events, 1);\n    assert.strictEqual(events[0].data.location, UI.ViewManager.ViewLocationValues.PANEL);\n    assert.strictEqual(events[0].data.revealedViewId, 'view-1');\n    assert.isUndefined(events[0].data.hiddenViewId);\n  });\n\n  describe('createTabbedLocation', () => {\n    it('remembers closeable views in the `closeable-tabs` setting', async () => {\n      const tabbedLocation = viewManager.createTabbedLocation(() => {}, '');\n\n      const closeableView = new UI.View.SimpleView({\n        title: i18n.i18n.lockedString('Closable view'),\n        viewId: 'closeable-view',\n      });\n      sinon.stub(closeableView, 'isCloseable').returns(true);\n      await tabbedLocation.showView(closeableView);\n\n      assert.propertyVal(\n          Common.Settings.Settings.instance().settingForTest('closeable-tabs').get(),\n          'closeable-view',\n          true,\n          'Closeable views must be recorded in `closeable-tabs` while they are shown',\n      );\n    });\n\n    it('removes closeable views from the `closeable-tabs` setting when they are closed', async () => {\n      const tabbedLocation = viewManager.createTabbedLocation(() => {}, '');\n\n      const closeableView = new UI.View.SimpleView({\n        title: i18n.i18n.lockedString('Closable view'),\n        viewId: 'closeable-view',\n      });\n      sinon.stub(closeableView, 'isCloseable').returns(true);\n      await tabbedLocation.showView(closeableView);\n      tabbedLocation.removeView(closeableView);\n\n      assert.notPropertyVal(\n          Common.Settings.Settings.instance().settingForTest('closeable-tabs').get(),\n          'closeable-view',\n          true,\n          'Closeable views must be removed from `closeable-tabs` when they are closed',\n      );\n    });\n\n    it('does not include transient views in the `closeable-tabs` setting', async () => {\n      const tabbedLocation = viewManager.createTabbedLocation(() => {}, '');\n\n      const closeableView = new UI.View.SimpleView({\n        title: i18n.i18n.lockedString('Transient view'),\n        viewId: 'transient-view',\n      });\n      sinon.stub(closeableView, 'isTransient').returns(true);\n      await tabbedLocation.showView(closeableView);\n\n      assert.notProperty(\n          Common.Settings.Settings.instance().settingForTest('closeable-tabs').get(),\n          'transient-view',\n          'Transient views must never be included in `closeable-tabs`',\n      );\n    });\n  });\n});\n"]}