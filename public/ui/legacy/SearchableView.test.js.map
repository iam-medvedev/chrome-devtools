{"version":3,"file":"SearchableView.test.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/SearchableView.test.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAElC,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,MAAM,EAAC,YAAY,EAAC,GAAG,EAAE,CAAC,cAAc,CAAC;QAEzC,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;YAC3B,EAAE,CAAC,wEAAwE,EAAE,GAAG,EAAE;gBAChF,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,mBAAmB,CAAC,IAAI,EAAE,eAAe,CAAC,IAAI,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;gBAE5G,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACpC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAChC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;YAC7B,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;gBACzC,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,mBAAmB,CAAC,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;gBAE7G,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;gBAEvC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACpC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;gBAC3C,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,mBAAmB,CAAC,KAAK,EAAE,eAAe,CAAC,KAAK,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;gBAE9G,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;gBAEvC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBACrC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;gBACrC,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,mBAAmB,CAAC,IAAI,EAAE,eAAe,CAAC,IAAI,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;gBAE5G,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;gBAEvC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;gBAC9D,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,EAAE,mBAAmB,CAAC,IAAI,EAAE,eAAe,CAAC,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC;gBAE9G,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;gBAEvC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as UI from './legacy.js';\n\ndescribe('SearchableView', () => {\n  describe('SearchConfig', () => {\n    const {SearchConfig} = UI.SearchableView;\n\n    describe('constructor', () => {\n      it('supports matching by case or whole word, and using regular expressions', () => {\n        const config = new SearchConfig('foo', /* caseSensitive=*/ true, /* wholeWord=*/ true, /* isRegex=*/ false);\n\n        assert.isTrue(config.caseSensitive);\n        assert.isTrue(config.wholeWord);\n        assert.isFalse(config.isRegex);\n      });\n    });\n\n    describe('toSearchRegex', () => {\n      it('supports case sensitive matches', () => {\n        const config = new SearchConfig('foo', /* caseSensitive=*/ true, /* wholeWord=*/ false, /* isRegex=*/ false);\n\n        const {regex} = config.toSearchRegex();\n\n        assert.strictEqual(regex.flags, '');\n        assert.strictEqual(regex.source, 'foo');\n      });\n\n      it('supports case insensitive matches', () => {\n        const config = new SearchConfig('foo', /* caseSensitive=*/ false, /* wholeWord=*/ false, /* isRegex=*/ false);\n\n        const {regex} = config.toSearchRegex();\n\n        assert.strictEqual(regex.flags, 'i');\n        assert.strictEqual(regex.source, 'foo');\n      });\n\n      it('supports whole word matches', () => {\n        const config = new SearchConfig('foo', /* caseSensitive=*/ true, /* wholeWord=*/ true, /* isRegex=*/ false);\n\n        const {regex} = config.toSearchRegex();\n\n        assert.strictEqual(regex.source, '\\\\bfoo\\\\b');\n      });\n\n      it('supports whole word matches with regular expressions', () => {\n        const config = new SearchConfig('ba[rz]', /* caseSensitive=*/ true, /* wholeWord=*/ true, /* isRegex=*/ true);\n\n        const {regex} = config.toSearchRegex();\n\n        assert.strictEqual(regex.source, '\\\\bba[rz]\\\\b');\n      });\n    });\n  });\n});\n"]}