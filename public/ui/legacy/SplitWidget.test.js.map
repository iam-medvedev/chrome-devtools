{"version":3,"file":"SplitWidget.test.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/SplitWidget.test.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,oBAAoB,EAAC,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAC,uBAAuB,EAAC,MAAM,qCAAqC,CAAC;AAC5E,OAAO,EAAC,IAAI,EAAE,MAAM,EAAC,MAAM,qBAAqB,CAAC;AAEjD,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAElC,MAAM,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC;AACtC,MAAM,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC;AAE/C,uBAAuB,CAAC,aAAa,EAAE,GAAG,EAAE;IAC1C,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QACxB,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;YACrD,MAAM,MAAM,GAAG,IAAI,WAAW,CAC1B,IAAI,EAAI,aAAa;YACrB,KAAK,CACR,CAAC;YACF,MAAM,CAAC,QAAQ,EAAE,CAAC;YAElB,+CAA+C;YAC/C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;YAEvC,0CAA0C;YAC1C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;QACzC,MAAM,MAAM,GAAG,IAAI,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;QACnC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChC,IAAI,MAAmC,CAAC;QAExC,mBAAmB;QACnB,MAAM,CACF,IAAI,CAAA;;+BAEmB,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,GAAE,MAAM,GAAG,CAAC,CAAC,CAAA,CAAC,CAAC;;;6BAG5C,EACrB,SAAS,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAC7B,kBAAkB;QAElB,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QAErD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;QACnC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAG,CAAC,cAAc,CAAC,WAAY,CAAC,IAAI,EAAE,EAAE,cAAc,CAAC,CAAC;QAC5F,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAG,CAAC,cAAc,CAAC,WAAY,CAAC,IAAI,EAAE,EAAE,iBAAiB,CAAC,CAAC;IACpG,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {html, render} from '../../ui/lit/lit.js';\n\nimport * as UI from './legacy.js';\n\nconst widgetRef = UI.Widget.widgetRef;\nconst SplitWidget = UI.SplitWidget.SplitWidget;\n\ndescribeWithEnvironment('SplitWidget', () => {\n  describe('toggling', () => {\n    it('returns the open state of the sidebar', async () => {\n      const widget = new SplitWidget(\n          true,   // isVertical\n          false,  // secondIsSidebar\n      );\n      widget.showBoth();\n\n      // Sidebar is showing, so toggling it hides it.\n      assert.isFalse(widget.toggleSidebar());\n\n      // Now it toggles to make it visible again\n      assert.isTrue(widget.toggleSidebar());\n    });\n  });\n\n  it('can be set to vertical and back', () => {\n    const widget = new SplitWidget(false, false);\n    widget.setVertical(true);\n    assert.isTrue(widget.isVertical());\n    widget.setVertical(false);\n    assert.isFalse(widget.isVertical());\n  });\n\n  it('can be instantiated from the template', async () => {\n    const container = document.createElement('div');\n    renderElementIntoDOM(container);\n    let widget!: UI.SplitWidget.SplitWidget;\n\n    // clang-format off\n    render(\n        html`\n      <devtools-split-view direction=\"column\" sidebar-initial-size=\"100\"\n                             ${widgetRef(SplitWidget, e => {widget = e;})}>\n        <div slot=\"main\">Main content</div>\n        <div slot=\"sidebar\">Sidebar content</div>\n      </devtools-split-view>`,\n        container, {host: this});\n    // clang-format on\n\n    await new Promise(resolve => setTimeout(resolve, 0));\n\n    assert.exists(widget);\n    assert.exists(widget.mainWidget());\n    assert.strictEqual(widget.mainWidget()!.contentElement.textContent!.trim(), 'Main content');\n    assert.strictEqual(widget.sidebarWidget()!.contentElement.textContent!.trim(), 'Sidebar content');\n  });\n});\n"]}