{"version":3,"file":"FilterBar.test.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/FilterBar.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,oBAAoB,EAAC,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAC,uBAAuB,EAAC,MAAM,qCAAqC,CAAC;AAC5E,OAAO,KAAK,GAAG,MAAM,qBAAqB,CAAC;AAE3C,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAElC,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,GAAG,GAAG,CAAC;AAE3B,uBAAuB,CAAC,qBAAqB,EAAE,GAAG,EAAE;IAClD,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAEhC,IAAI,mBAAsD,CAAC;QAE3D,MAAM,WAAW,GAAwB;YACvC;gBACE,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,GAAG,EAAE,CAAC,QAAQ;gBACrB,KAAK,EAAE,QAAQ;gBACf,YAAY,EAAE,QAAQ;aACvB;SACF,CAAC;QAEF,mBAAmB;QACf,MAAM,CACF,IAAI,CAAA;;yBAES,EAAC,KAAK,EAAE,WAAW,EAAC;gBAC7B,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAqB,EAAE,EAAE;YAC3C,IAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,SAAS,CAAC,0BAA0B,CAAC,EAAC,CAAC;gBAChE,OAAO;YACX,CAAC;YACD,mBAAmB,GAAG,EAAE,CAAC,8BAA8B,EAAE,CAAC;QAC9D,CAAC,CAAC;;SAEP,EACD,SAAS,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAC7B,kBAAkB;QAElB,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAElD,MAAM,MAAM,GAAG,mBAAmB,CAAC,OAAO,EAAE,CAAC,aAAa,CAAC,SAAS,CAAgB,CAAC;QACrF,MAAM,CAAC,KAAK,EAAE,CAAC;QAEf,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport * as Lit from '../../ui/lit/lit.js';\n\nimport * as UI from './legacy.js';\n\nconst {render, html} = Lit;\n\ndescribeWithEnvironment('NamedBitSetFilterUI', () => {\n  it('is functional from template', async () => {\n    const container = document.createElement('div');\n    renderElementIntoDOM(container);\n\n    let namedBitSetFilterUI!: UI.FilterBar.NamedBitSetFilterUI;\n\n    const filterItems: UI.FilterBar.Item[] = [\n      {\n        name: 'filter',\n        label: () => 'filter',\n        title: 'filter',\n        jslogContext: 'filter',\n      },\n    ];\n\n    // clang-format off\n        render(\n            html`\n            <devtools-named-bit-set-filter\n              .options=${{items: filterItems}}\n              ${Lit.Directives.ref((el: Element|undefined) => {\n                  if(!el || !(el instanceof UI.FilterBar.NamedBitSetFilterUIElement)){\n                      return;\n                  }\n                  namedBitSetFilterUI = el.getOrCreateNamedBitSetFilterUI();\n              })}\n            ></devtools-named-bit-set-filter>\n        `,\n        container, {host: this});\n    // clang-format on\n\n    assert.isTrue(namedBitSetFilterUI.accept('test'));\n\n    const filter = namedBitSetFilterUI.element().querySelector('.filter') as HTMLElement;\n    filter.click();\n\n    assert.isFalse(namedBitSetFilterUI.accept('test'));\n  });\n});\n"]}