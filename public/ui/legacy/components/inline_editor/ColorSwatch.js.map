{"version":3,"file":"ColorSwatch.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/inline_editor/ColorSwatch.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as ColorPicker from '../../../legacy/components/color_picker/color_picker.js';\nimport * as LitHtml from '../../../lit-html/lit-html.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\n\nimport colorSwatchStyles from './colorSwatch.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Icon element title in Color Swatch of the inline editor in the Styles tab\n   */\n  shiftclickToChangeColorFormat: 'Shift-click to change color format',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/inline_editor/ColorSwatch.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ColorChangedEvent extends Event {\n  static readonly eventName = 'colorchanged';\n\n  data: {color: Common.Color.Color};\n\n  constructor(color: Common.Color.Color) {\n    super(ColorChangedEvent.eventName, {});\n    this.data = {color};\n  }\n}\n\nexport class ClickEvent extends Event {\n  static readonly eventName = 'swatchclick';\n\n  constructor() {\n    super(ClickEvent.eventName, {});\n  }\n}\n\nexport class ColorSwatch extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-color-swatch`;\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private tooltip: string = i18nString(UIStrings.shiftclickToChangeColorFormat);\n  private color: Common.Color.Color|null = null;\n  private readonly: boolean = false;\n\n  constructor(tooltip?: string) {\n    super();\n    this.shadow.adoptedStyleSheets = [\n      colorSwatchStyles,\n    ];\n    if (tooltip) {\n      this.tooltip = tooltip;\n    }\n  }\n\n  static isColorSwatch(element: Element): element is ColorSwatch {\n    return element.localName === 'devtools-color-swatch';\n  }\n\n  getReadonly(): boolean {\n    return this.readonly;\n  }\n\n  setReadonly(readonly: boolean): void {\n    if (this.readonly === readonly) {\n      return;\n    }\n\n    this.readonly = readonly;\n    if (this.color) {\n      this.renderColor(this.color);\n    }\n  }\n\n  getColor(): Common.Color.Color|null {\n    return this.color;\n  }\n\n  get anchorBox(): AnchorBox|null {\n    const swatch = this.shadow.querySelector('.color-swatch');\n    return swatch ? swatch.boxInWindow() : null;\n  }\n\n  getText(): string|undefined {\n    return this.color?.getAuthoredText() ?? this.color?.asString();\n  }\n\n  /**\n   * Render this swatch given a color object or text to be parsed as a color.\n   * @param color The color object or string to use for this swatch.\n   */\n  renderColor(color: Common.Color.Color): void {\n    this.color = color;\n\n    const colorSwatchClasses = LitHtml.Directives.classMap({\n      'color-swatch': true,\n      'readonly': this.readonly,\n    });\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    // Note that we use a <slot> with a default value here to display the color text. Consumers of this component are\n    // free to append any content to replace what is being shown here.\n    // Note also that whitespace between nodes is removed on purpose to avoid pushing these elements apart. Do not\n    // re-format the HTML code.\n    LitHtml.render(\n      LitHtml.html`<span class=${colorSwatchClasses} title=${this.tooltip}><span class=\"color-swatch-inner\"\n        style=\"background-color: ${this.getText()};\"\n        jslog=${VisualLogging.showStyleEditor('color').track({click: true})}\n        @click=${this.onClick}\n        @mousedown=${this.consume}\n        @dblclick=${this.consume}></span></span><slot><span>${this.getText()}</span></slot>`,\n      this.shadow, {host: this});\n    // clang-format on\n  }\n\n  private onClick(e: KeyboardEvent): void {\n    if (this.readonly) {\n      return;\n    }\n\n    if (e.shiftKey) {\n      e.stopPropagation();\n      this.showFormatPicker(e);\n      return;\n    }\n\n    this.dispatchEvent(new ClickEvent());\n  }\n\n  private consume(e: Event): void {\n    e.stopPropagation();\n  }\n\n  setColor(color: Common.Color.Color): void {\n    this.renderColor(color);\n    this.dispatchEvent(new ColorChangedEvent(color));\n  }\n\n  setColorText(color: Common.Color.Color): void {\n    this.firstElementChild?.remove();\n    this.renderColor(color);\n    const span = this.appendChild(document.createElement('span'));\n    span.appendChild(document.createTextNode(color.getAuthoredText() ?? color.asString()));\n    this.dispatchEvent(new ColorChangedEvent(color));\n  }\n\n  private showFormatPicker(e: Event): void {\n    if (!this.color) {\n      return;\n    }\n\n    const contextMenu = new ColorPicker.FormatPickerContextMenu.FormatPickerContextMenu(this.color);\n    void contextMenu.show(e, color => {\n      this.setColorText(color);\n      Host.userMetrics.colorConvertedFrom(Host.UserMetrics.ColorConvertedFrom.ColorSwatch);\n    });\n  }\n}\n\ncustomElements.define('devtools-color-swatch', ColorSwatch);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-color-swatch': ColorSwatch;\n  }\n\n  interface HTMLElementEventMap {\n    [ColorChangedEvent.eventName]: ColorChangedEvent;\n    [ClickEvent.eventName]: Event;\n  }\n}\n"]}