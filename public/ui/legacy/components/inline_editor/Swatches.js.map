{"version":3,"file":"Swatches.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/inline_editor/Swatches.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAC7B,2DAA2D;AAE3D,OAAO,gDAAgD,CAAC;AAGxD,OAAO,EAAC,IAAI,EAAE,MAAM,EAAC,MAAM,qBAAqB,CAAC;AAGjD,OAAO,qBAAqB,MAAM,0BAA0B,CAAC;AAE7D,MAAM,OAAO,eAAgB,SAAQ,WAAW;IACrC,KAAK,CAAuB;IAC5B,MAAM,CAAiB;IAEhC,YAAY,KAAqB;QAC/B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,mBAAmB;QACnB,MAAM,CAAC,IAAI,CAAA;iBACE,qBAAqB;6FACuD,EACrF,IAAI,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QACxB,kBAAkB;QAElB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAyB,CAAC;IAC3E,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,eAAe,CAAC,CAAC","sourcesContent":["// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../components/icon_button/icon_button.js';\n\nimport type * as IconButton from '../../../components/icon_button/icon_button.js';\nimport {html, render} from '../../../lit/lit.js';\n\nimport type {CSSShadowModel} from './CSSShadowEditor.js';\nimport cssShadowSwatchStyles from './cssShadowSwatch.css.js';\n\nexport class CSSShadowSwatch extends HTMLElement {\n  readonly #icon: IconButton.Icon.Icon;\n  readonly #model: CSSShadowModel;\n\n  constructor(model: CSSShadowModel) {\n    super();\n    this.#model = model;\n\n    // clang-format off\n    render(html`\n        <style>${cssShadowSwatchStyles}</style>\n        <devtools-icon tabindex=-1 name=\"shadow\" class=\"shadow-swatch-icon\"></devtools-icon>`,\n        this, {host: this});\n    // clang-format on\n\n    this.#icon = this.querySelector('devtools-icon') as IconButton.Icon.Icon;\n  }\n\n  model(): CSSShadowModel {\n    return this.#model;\n  }\n\n  iconElement(): IconButton.Icon.Icon {\n    return this.#icon;\n  }\n}\n\ncustomElements.define('css-shadow-swatch', CSSShadowSwatch);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'css-shadow-swatch': CSSShadowSwatch;\n  }\n}\n"]}