{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/cookie_table/CookiesTable.ts", "cookiesTable.css.js"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\n/*\n * Copyright (C) 2009 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n * Copyright (C) 2010 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport '../data_grid/data_grid.js';\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Root from '../../../../core/root/root.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as IssuesManager from '../../../../models/issues_manager/issues_manager.js';\nimport * as NetworkForward from '../../../../panels/network/forward/forward.js';\nimport * as IconButton from '../../../components/icon_button/icon_button.js';\nimport {Directives, html, render} from '../../../lit/lit.js';\nimport * as UI from '../../legacy.js';\n\nimport cookiesTableStyles from './cookiesTable.css.js';\n\ninterface ViewInput {\n  data: CookieData[];\n  selectedKey?: string;\n  editable?: boolean;\n  renderInline?: boolean;\n  portBindingEnabled?: boolean;\n  schemeBindingEnabled?: boolean;\n  onEdit:\n      (event: CustomEvent<{node: HTMLElement, columnId: string, valueBeforeEditing: string, newText: string}>) => void;\n  onCreate: (event: CustomEvent<CookieData>) => void;\n  onRefresh: () => void;\n  onDelete: (event: CustomEvent<HTMLElement>) => void;\n  onContextMenu: (event: CustomEvent<{menu: UI.ContextMenu.ContextMenu, element: HTMLElement}>) => void;\n  onSelect: (event: CustomEvent<HTMLElement|null>) => void;\n}\ntype ViewFunction = (input: ViewInput, output: object, target: HTMLElement) => void;\ntype AttributeWithIcon = SDK.Cookie.Attribute.NAME|SDK.Cookie.Attribute.VALUE|SDK.Cookie.Attribute.DOMAIN|\n                         SDK.Cookie.Attribute.PATH|SDK.Cookie.Attribute.SECURE|SDK.Cookie.Attribute.SAME_SITE;\n\ntype CookieData = Partial<Record<SDK.Cookie.Attribute, string>>&{\n  name: string,\n  value: string,\n}&{\n  key?: string,\n  flagged?: boolean,\n  icons?: Partial<Record<AttributeWithIcon, IconButton.Icon.Icon>>,\n  priorityValue?: number,\n  expiresTooltip?: string,\n  dirty?: boolean,\n  inactive?: boolean,\n};\n\nconst {repeat, ifDefined} = Directives;\n\nconst UIStrings = {\n  /**\n   * @description Cookie table cookies table expires session value in Cookies Table of the Cookies table in the Application panel\n   */\n  session: 'Session',\n  /**\n   * @description Text for the name of something\n   */\n  name: 'Name',\n  /**\n   * @description Text for the value of something\n   */\n  value: 'Value',\n  /**\n   * @description Text for the size of something\n   */\n  size: 'Size',\n  /**\n   * @description Data grid name for Editable Cookies data grid\n   */\n  editableCookies: 'Editable Cookies',\n  /**\n   * @description Text for web cookies\n   */\n  cookies: 'Cookies',\n  /**\n   * @description Text for something not available\n   */\n  na: 'N/A',\n  /**\n   * @description Text for Context Menu entry\n   */\n  showRequestsWithThisCookie: 'Show requests with this cookie',\n  /**\n   * @description Text for Context Menu entry\n   */\n  showIssueAssociatedWithThis: 'Show issue associated with this cookie',\n  /**\n   * @description Tooltip for the cell that shows the sourcePort property of a cookie in the cookie table. The source port is numberic attribute of a cookie.\n   */\n  sourcePortTooltip:\n      'Shows the source port (range 1-65535) the cookie was set on. If the port is unknown, this shows -1.',\n  /**\n   * @description Tooltip for the cell that shows the sourceScheme property of a cookie in the cookie table. The source scheme is a trinary attribute of a cookie.\n   */\n  sourceSchemeTooltip:\n      'Shows the source scheme (`Secure`, `NonSecure`) the cookie was set on. If the scheme is unknown, this shows `Unset`.',\n  /**\n   * @description Text for the date column displayed if the expiration time of the cookie is extremely far out in the future.\n   * @example {+275760-09-13T00:00:00.000Z} date\n   */\n  timeAfter: 'after {date}',\n  /**\n   * @description Tooltip for the date column displayed if the expiration time of the cookie is extremely far out in the future.\n   * @example {+275760-09-13T00:00:00.000Z} date\n   * @example {9001628746521180} seconds\n   */\n  timeAfterTooltip: 'The expiration timestamp is {seconds}, which corresponds to a date after {date}',\n  /**\n   * @description Text to be show in the Partition Key column in case it is an opaque origin.\n   */\n  opaquePartitionKey: '(opaque)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/cookie_table/CookiesTable.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nconst expiresSessionValue = i18nLazyString(UIStrings.session);\n\nexport class CookiesTable extends UI.Widget.VBox {\n  private saveCallback?: ((arg0: SDK.Cookie.Cookie, arg1: SDK.Cookie.Cookie|null) => Promise<boolean>);\n  private readonly refreshCallback?: (() => void);\n  private readonly selectedCallback?: (() => void);\n  private readonly deleteCallback?: ((arg0: SDK.Cookie.Cookie, arg1: () => void) => void);\n  private lastEditedColumnId: string|null;\n  private data: CookieData[] = [];\n  private cookies: SDK.Cookie.Cookie[] = [];\n  private cookieDomain: string;\n  private cookieToBlockedReasons: ReadonlyMap<SDK.Cookie.Cookie, SDK.CookieModel.BlockedReason[]>|null;\n  private cookieToExemptionReason: ReadonlyMap<SDK.Cookie.Cookie, SDK.CookieModel.ExemptionReason>|null;\n  private readonly view: ViewFunction;\n  private selectedKey?: string;\n  private readonly editable: boolean;\n  private readonly renderInline: boolean;\n  private readonly schemeBindingEnabled: boolean;\n  private readonly portBindingEnabled: boolean;\n  constructor(\n      renderInline?: boolean,\n      saveCallback?: ((arg0: SDK.Cookie.Cookie, arg1: SDK.Cookie.Cookie|null) => Promise<boolean>),\n      refreshCallback?: (() => void), selectedCallback?: (() => void),\n      deleteCallback?: ((arg0: SDK.Cookie.Cookie, arg1: () => void) => void), view?: ViewFunction) {\n    super();\n    if (!view) {\n      view = (input, _, target) => {\n        // clang-format off\n        render(html`\n          <devtools-data-grid\n               name=${input.editable ? i18nString(UIStrings.editableCookies) : i18nString(UIStrings.cookies)}\n               id=\"cookies-table\"\n               striped\n               ?inline=${input.renderInline}\n               @edit=${input.onEdit}\n               @create=${input.onCreate}\n               @refresh=${input.onRefresh}\n               @delete=${input.onDelete}\n               @contextmenu=${input.onContextMenu}\n               @select=${input.onSelect}\n          >\n            <table>\n               <tr>\n                 <th id=${SDK.Cookie.Attribute.NAME} sortable ?disclosure=${input.editable} ?editable=${input.editable} long weight=\"24\">\n                   ${i18nString(UIStrings.name)}\n                 </th>\n                 <th id=${SDK.Cookie.Attribute.VALUE} sortable ?editable=${input.editable} long weight=\"34\">\n                   ${i18nString(UIStrings.value)}\n                 </th>\n                 <th id=${SDK.Cookie.Attribute.DOMAIN} sortable weight=\"7\" ?editable=${input.editable}>\n                   Domain\n                 </th>\n                 <th id=${SDK.Cookie.Attribute.PATH} sortable weight=\"7\" ?editable=${input.editable}>\n                   Path\n                 </th>\n                 <th id=${SDK.Cookie.Attribute.EXPIRES} sortable weight=\"7\" ?editable=${input.editable}>\n                   Expires / Max-Age\n                 </th>\n                 <th id=${SDK.Cookie.Attribute.SIZE} sortable align=\"right\" weight=\"7\">\n                   ${i18nString(UIStrings.size)}\n                 </th>\n                 <th id=${SDK.Cookie.Attribute.HTTP_ONLY} sortable align=\"center\" weight=\"7\" ?editable=${input.editable} type=\"boolean\">\n                   HttpOnly\n                 </th>\n                 <th id=${SDK.Cookie.Attribute.SECURE} sortable align=\"center\" weight=\"7\" ?editable=${input.editable} type=\"boolean\">\n                   Secure\n                 </th>\n                 <th id=${SDK.Cookie.Attribute.SAME_SITE} sortable weight=\"7\" ?editable=${input.editable}>\n                   SameSite\n                 </th>\n                 <th id=${SDK.Cookie.Attribute.PARTITION_KEY_SITE} sortable weight=\"7\" ?editable=${input.editable}>\n                   Partition Key Site\n                 </th>\n                 <th id=${SDK.Cookie.Attribute.HAS_CROSS_SITE_ANCESTOR} sortable align=\"center\" weight=\"7\" ?editable=${input.editable} type=\"boolean\">\n                   Cross Site\n                 </th>\n                 <th id=${SDK.Cookie.Attribute.PRIORITY} sortable weight=\"7\" ?editable=${input.editable}>\n                   Priority\n                 </th>\n                 ${input.schemeBindingEnabled ?  html`\n                 <th id=${SDK.Cookie.Attribute.SOURCE_SCHEME} sortable align=\"center\" weight=\"7\" ?editable=${input.editable} type=\"string\">\n                   SourceScheme\n                 </th>` : ''}\n                 ${input.portBindingEnabled ? html`\n                <th id=${SDK.Cookie.Attribute.SOURCE_PORT} sortable align=\"center\" weight=\"7\" ?editable=${input.editable} type=\"number\">\n                   SourcePort\n                </th>` : ''}\n              </tr>\n              ${repeat(this.data,\n                        cookie => cookie.key, cookie => html`<tr data-key=${ifDefined(cookie.key)}\n                    ?selected=${cookie.key === input.selectedKey}\n                    ?inactive=${cookie.inactive}\n                    ?dirty=${cookie.dirty}\n                    ?highlighted=${cookie.flagged}>\n                  <td>${cookie.icons?.name}${cookie.name}</td>\n                  <td>${cookie.value}</td>\n                  <td>${cookie.icons?.domain}${cookie.domain}</td>\n                  <td>${cookie.icons?.path}${cookie.path}</td>\n                  <td title=${ifDefined(cookie.expiresTooltip)}>${cookie.expires}</td>\n                  <td>${cookie.size}</td>\n                  <td data-value=${Boolean(cookie['http-only'])}></td>\n                  <td data-value=${Boolean(cookie.secure)}>${cookie.icons?.secure}</td>\n                  <td>${cookie.icons?.['same-site']}${cookie['same-site']}</td>\n                  <td>${cookie['partition-key-site']}</td>\n                  <td data-value=${Boolean(cookie['has-cross-site-ancestor'])}></td>\n                  <td data-value=${ifDefined(cookie.priorityValue)}>${cookie.priority}</td>\n                  ${input.schemeBindingEnabled ? html`\n                    <td title=${i18nString(UIStrings.sourceSchemeTooltip)}>${cookie['source-scheme']}</td>` : ''}\n                  ${input.portBindingEnabled ? html`\n                    <td title=${i18nString(UIStrings.sourcePortTooltip)}>${cookie['source-port']}</td>` : ''}\n                </tr>`)}\n                ${input.editable ? html`<tr placeholder><tr>` : ''}\n              </table>\n            </devtools-data-grid>`, target, {host: target});\n        // clang-format on\n      };\n    }\n    this.registerRequiredCSS(cookiesTableStyles);\n\n    this.element.classList.add('cookies-table');\n\n    this.saveCallback = saveCallback;\n    this.refreshCallback = refreshCallback;\n    this.deleteCallback = deleteCallback;\n\n    this.editable = Boolean(saveCallback);\n    const {devToolsEnableOriginBoundCookies} = Root.Runtime.hostConfig;\n\n    this.schemeBindingEnabled = Boolean(devToolsEnableOriginBoundCookies?.schemeBindingEnabled);\n    this.portBindingEnabled = Boolean(devToolsEnableOriginBoundCookies?.portBindingEnabled);\n\n    this.view = view;\n\n    this.renderInline = Boolean(renderInline);\n\n    this.selectedCallback = selectedCallback;\n\n    this.lastEditedColumnId = null;\n\n    this.data = [];\n\n    this.cookieDomain = '';\n\n    this.cookieToBlockedReasons = null;\n\n    this.cookieToExemptionReason = null;\n\n    this.requestUpdate();\n  }\n\n  setCookies(\n      cookies: SDK.Cookie.Cookie[],\n      cookieToBlockedReasons?: ReadonlyMap<SDK.Cookie.Cookie, SDK.CookieModel.BlockedReason[]>,\n      cookieToExemptionReason?: ReadonlyMap<SDK.Cookie.Cookie, SDK.CookieModel.ExemptionReason>): void {\n    this.cookieToBlockedReasons = cookieToBlockedReasons || null;\n    this.cookieToExemptionReason = cookieToExemptionReason || null;\n    this.cookies = cookies;\n    const selectedData = this.data.find(data => data.key === this.selectedKey);\n    const selectedCookie = this.cookies.find(cookie => cookie.key() === this.selectedKey);\n    this.data = cookies.sort((c1, c2) => c1.name().localeCompare(c2.name())).map(this.createCookieData.bind(this));\n    if (selectedData && this.lastEditedColumnId && !selectedCookie) {\n      selectedData.inactive = true;\n      this.data.push(selectedData);\n    }\n    this.requestUpdate();\n  }\n\n  setCookieDomain(cookieDomain: string): void {\n    this.cookieDomain = cookieDomain;\n  }\n\n  selectedCookie(): SDK.Cookie.Cookie|null {\n    return this.cookies.find(cookie => cookie.key() === this.selectedKey) || null;\n  }\n\n  override willHide(): void {\n    this.lastEditedColumnId = null;\n  }\n\n  override performUpdate(): void {\n    const input: ViewInput = {\n      data: this.data,\n      selectedKey: this.selectedKey,\n      editable: this.editable,\n      renderInline: this.renderInline,\n      schemeBindingEnabled: this.schemeBindingEnabled,\n      portBindingEnabled: this.portBindingEnabled,\n      onEdit: event => this.onUpdateCookie(\n          event.detail.node, event.detail.columnId, event.detail.valueBeforeEditing, event.detail.newText),\n      onCreate: event => this.onCreateCookie(event.detail),\n      onRefresh: () => this.refresh(),\n      onDelete: event => this.onDeleteCookie(event.detail),\n      onSelect: event => this.onSelect(event.detail),\n      onContextMenu: event => this.populateContextMenu(event.detail.menu, event.detail.element),\n    };\n    const output = {};\n    this.view(input, output, this.element);\n  }\n\n  private onSelect(node: HTMLElement|null): void {\n    this.selectedKey = node?.dataset?.key;\n    this.selectedCallback?.();\n  }\n\n  private onDeleteCookie(node: HTMLElement): void {\n    const cookie = this.cookies.find(cookie => cookie.key() === node.dataset.key);\n    if (cookie && this.deleteCallback) {\n      this.deleteCallback(cookie, () => this.refresh());\n    }\n  }\n\n  private onUpdateCookie(editingNode: HTMLElement, columnIdentifier: string, _oldText: string, newText: string): void {\n    const oldCookie = this.cookies.find(cookie => cookie.key() === editingNode.dataset.key);\n    const oldData = this.data.find(data => data.key === editingNode.dataset.key);\n    if (!oldData || !oldCookie) {\n      return;\n    }\n    const newCookieData = {...oldData, [columnIdentifier]: newText};  // as CookieData;\n    if (!this.isValidCookieData(newCookieData)) {\n      newCookieData.dirty = true;\n      this.requestUpdate();\n      return;\n    }\n    this.lastEditedColumnId = columnIdentifier;\n    this.saveCookie(newCookieData, oldCookie);\n  }\n\n  private onCreateCookie(data: CookieData): void {\n    this.setDefaults(data);\n    if (this.isValidCookieData(data)) {\n      this.saveCookie(data);\n    } else {\n      data.dirty = true;\n      this.requestUpdate();\n    }\n  }\n\n  private setDefaults(data: CookieData): void {\n    if (data[SDK.Cookie.Attribute.NAME] === undefined) {\n      data[SDK.Cookie.Attribute.NAME] = '';\n    }\n    if (data[SDK.Cookie.Attribute.VALUE] === undefined) {\n      data[SDK.Cookie.Attribute.VALUE] = '';\n    }\n    if (data[SDK.Cookie.Attribute.DOMAIN] === undefined) {\n      data[SDK.Cookie.Attribute.DOMAIN] = this.cookieDomain;\n    }\n    if (data[SDK.Cookie.Attribute.PATH] === undefined) {\n      data[SDK.Cookie.Attribute.PATH] = '/';\n    }\n    if (data[SDK.Cookie.Attribute.EXPIRES] === undefined) {\n      data[SDK.Cookie.Attribute.EXPIRES] = expiresSessionValue();\n    }\n    if (data[SDK.Cookie.Attribute.PARTITION_KEY] === undefined) {\n      data[SDK.Cookie.Attribute.PARTITION_KEY] = '';\n    }\n  }\n\n  private saveCookie(newCookieData: CookieData, oldCookie?: SDK.Cookie.Cookie): void {\n    if (!this.saveCallback) {\n      return;\n    }\n    const newCookie = this.createCookieFromData(newCookieData);\n    void this.saveCallback(newCookie, oldCookie ?? null).then(success => {\n      if (!success) {\n        newCookieData.dirty = true;\n      }\n      this.refresh();\n    });\n  }\n\n  private createCookieFromData(data: CookieData): SDK.Cookie.Cookie {\n    const cookie = new SDK.Cookie.Cookie(\n        data[SDK.Cookie.Attribute.NAME] || '', data[SDK.Cookie.Attribute.VALUE] || '', null,\n        data[SDK.Cookie.Attribute.PRIORITY] as Protocol.Network.CookiePriority);\n\n    for (const attribute\n             of [SDK.Cookie.Attribute.DOMAIN, SDK.Cookie.Attribute.PATH, SDK.Cookie.Attribute.HTTP_ONLY,\n                 SDK.Cookie.Attribute.SECURE, SDK.Cookie.Attribute.SAME_SITE, SDK.Cookie.Attribute.SOURCE_SCHEME]) {\n      if (attribute in data) {\n        cookie.addAttribute(attribute, data[attribute]);\n      }\n    }\n    if (data.expires && data.expires !== expiresSessionValue()) {\n      cookie.addAttribute(SDK.Cookie.Attribute.EXPIRES, (new Date(data[SDK.Cookie.Attribute.EXPIRES])).toUTCString());\n    }\n    if (SDK.Cookie.Attribute.SOURCE_PORT in data) {\n      cookie.addAttribute(\n          SDK.Cookie.Attribute.SOURCE_PORT,\n          Number.parseInt(data[SDK.Cookie.Attribute.SOURCE_PORT] || '', 10) || undefined);\n    }\n    if (data[SDK.Cookie.Attribute.PARTITION_KEY_SITE]) {\n      cookie.setPartitionKey(\n          data[SDK.Cookie.Attribute.PARTITION_KEY_SITE],\n          Boolean(\n              data[SDK.Cookie.Attribute.HAS_CROSS_SITE_ANCESTOR] ? data[SDK.Cookie.Attribute.HAS_CROSS_SITE_ANCESTOR] :\n                                                                   false));\n    }\n    cookie.setSize(data[SDK.Cookie.Attribute.NAME].length + data[SDK.Cookie.Attribute.VALUE].length);\n    return cookie;\n  }\n\n  private createCookieData(cookie: SDK.Cookie.Cookie): CookieData {\n    // See https://tc39.es/ecma262/#sec-time-values-and-time-range\n    const maxTime = 8640000000000000;\n    const isRequest = cookie.type() === SDK.Cookie.Type.REQUEST;\n    const data: CookieData = {name: cookie.name(), value: cookie.value()};\n    for (const attribute\n             of [SDK.Cookie.Attribute.HTTP_ONLY, SDK.Cookie.Attribute.SECURE, SDK.Cookie.Attribute.SAME_SITE,\n                 SDK.Cookie.Attribute.SOURCE_SCHEME, SDK.Cookie.Attribute.SOURCE_PORT]) {\n      if (cookie.hasAttribute(attribute)) {\n        data[attribute] = String(cookie.getAttribute(attribute) ?? true);\n      }\n    }\n    data[SDK.Cookie.Attribute.DOMAIN] = cookie.domain() || (isRequest ? i18nString(UIStrings.na) : '');\n    data[SDK.Cookie.Attribute.PATH] = cookie.path() || (isRequest ? i18nString(UIStrings.na) : '');\n    data[SDK.Cookie.Attribute.EXPIRES] =  //\n        cookie.maxAge()            ? i18n.TimeUtilities.secondsToString(Math.floor(cookie.maxAge())) :\n        cookie.expires() < 0       ? expiresSessionValue() :\n        cookie.expires() > maxTime ? i18nString(UIStrings.timeAfter, {date: new Date(maxTime).toISOString()}) :\n        cookie.expires() > 0       ? new Date(cookie.expires()).toISOString() :\n        isRequest                  ? i18nString(UIStrings.na) :\n                                     expiresSessionValue();\n    if (cookie.expires() > maxTime) {\n      data.expiresTooltip =\n          i18nString(UIStrings.timeAfterTooltip, {seconds: cookie.expires(), date: new Date(maxTime).toISOString()});\n    }\n    data[SDK.Cookie.Attribute.PARTITION_KEY_SITE] =\n        cookie.partitionKeyOpaque() ? i18nString(UIStrings.opaquePartitionKey).toString() : cookie.topLevelSite();\n    data[SDK.Cookie.Attribute.HAS_CROSS_SITE_ANCESTOR] = cookie.hasCrossSiteAncestor() ? 'true' : '';\n    data[SDK.Cookie.Attribute.SIZE] = String(cookie.size());\n    data[SDK.Cookie.Attribute.PRIORITY] = cookie.priority();\n    data.priorityValue = ['Low', 'Medium', 'High'].indexOf(cookie.priority());\n    const blockedReasons = this.cookieToBlockedReasons?.get(cookie) || [];\n    for (const blockedReason of blockedReasons) {\n      data.flagged = true;\n      const attribute = (blockedReason.attribute || SDK.Cookie.Attribute.NAME) as AttributeWithIcon;\n      data.icons = data.icons || {};\n      if (!(attribute in data.icons)) {\n        data.icons[attribute] = new IconButton.Icon.Icon();\n        if (attribute === SDK.Cookie.Attribute.NAME &&\n            IssuesManager.RelatedIssue.hasThirdPartyPhaseoutCookieIssue(cookie)) {\n          data.icons[attribute].name = 'warning-filled';\n          data.icons[attribute].onclick = () => IssuesManager.RelatedIssue.reveal(cookie);\n          data.icons[attribute].style.cursor = 'pointer';\n        } else {\n          data.icons[attribute].name = 'info';\n        }\n        data.icons[attribute].classList.add('small');\n        data.icons[attribute].title = blockedReason.uiString;\n      } else if (data.icons[attribute]) {\n        data.icons[attribute].title += '\\n' + blockedReason.uiString;\n      }\n    }\n    const exemptionReason = this.cookieToExemptionReason?.get(cookie)?.uiString;\n    if (exemptionReason) {\n      data.icons = data.icons || {};\n      data.flagged = true;\n      data.icons.name = new IconButton.Icon.Icon();\n      data.icons.name.name = 'info';\n      data.icons.name.classList.add('small');\n      data.icons.name.title = exemptionReason;\n    }\n    data.key = cookie.key();\n    return data;\n  }\n\n  private isValidCookieData(data: CookieData): boolean {\n    return (Boolean(data.name) || Boolean(data.value)) && this.isValidDomain(data.domain) &&\n        this.isValidPath(data.path) && this.isValidDate(data.expires) &&\n        this.isValidPartitionKey(data[SDK.Cookie.Attribute.PARTITION_KEY_SITE]);\n  }\n\n  private isValidDomain(domain: string|undefined): boolean {\n    if (!domain) {\n      return true;\n    }\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString('http://' + domain);\n    return parsedURL !== null && parsedURL.domain() === domain;\n  }\n\n  private isValidPath(path: string|undefined): boolean {\n    if (!path) {\n      return true;\n    }\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString('http://example.com' + path);\n    return parsedURL !== null && parsedURL.path === path;\n  }\n\n  private isValidDate(date: string|undefined): boolean {\n    return !date || date === expiresSessionValue() || !isNaN(Date.parse(date));\n  }\n\n  private isValidPartitionKey(partitionKey: string|undefined): boolean {\n    if (!partitionKey) {\n      return true;\n    }\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(partitionKey);\n    return parsedURL !== null;\n  }\n\n  private refresh(): void {\n    if (this.refreshCallback) {\n      this.refreshCallback();\n    }\n  }\n\n  private populateContextMenu(contextMenu: UI.ContextMenu.ContextMenu, gridNode: HTMLElement): void {\n    const maybeCookie = this.cookies.find(cookie => cookie.key() === gridNode.dataset.key);\n    if (!maybeCookie) {\n      return;\n    }\n    const cookie = maybeCookie;\n\n    contextMenu.revealSection().appendItem(i18nString(UIStrings.showRequestsWithThisCookie), () => {\n      const requestFilter = NetworkForward.UIFilter.UIRequestFilter.filters([\n        {\n          filterType: NetworkForward.UIFilter.FilterType.CookieDomain,\n          filterValue: cookie.domain(),\n        },\n        {\n          filterType: NetworkForward.UIFilter.FilterType.CookieName,\n          filterValue: cookie.name(),\n        },\n      ]);\n      void Common.Revealer.reveal(requestFilter);\n    }, {jslogContext: 'show-requests-with-this-cookie'});\n    if (IssuesManager.RelatedIssue.hasIssues(cookie)) {\n      contextMenu.revealSection().appendItem(i18nString(UIStrings.showIssueAssociatedWithThis), () => {\n        // TODO(chromium:1077719): Just filter for the cookie instead of revealing one of the associated issues.\n        void IssuesManager.RelatedIssue.reveal(cookie);\n      }, {jslogContext: 'show-issue-associated-with-this'});\n    }\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2019 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n devtools-data-grid {\n  flex: auto;\n}\n\n.cookies-table devtools-icon {\n  margin-right: 4px;\n}\n\n/*# sourceURL=${import.meta.resolve('./cookiesTable.css')} */`;"],
  "mappings": "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",
  "names": ["cookie"]
}
