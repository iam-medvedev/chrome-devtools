{"version":3,"file":"DataGrid.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/data_grid/DataGrid.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,oBAAoB,EAAC,MAAM,mCAAmC,CAAC;AACvE,OAAO,EAAC,uBAAuB,EAAC,MAAM,2CAA2C,CAAC;AAClF,OAAO,KAAK,OAAO,MAAM,qCAAqC,CAAC;AAC/D,OAAO,KAAK,EAAE,MAAM,iBAAiB,CAAC;AAEtC,OAAO,KAAK,QAAQ,MAAM,gBAAgB,CAAC;AAE3C,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,GAAG,OAAO,CAAC;AAC/B,MAAM,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC;AAEtC,uBAAuB,CAAC,UAAU,EAAE,GAAG,EAAE;IACvC,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAEhC,IAAI,MAAkD,CAAC;QAEvD,MAAM,eAAe,GAAqD;YACxE,WAAW,EAAE,UAAU;YACvB,OAAO,EAAE,CAAC;oBACR,EAAE,EAAE,MAAM;oBACV,QAAQ,EAAE,KAAK;iBAChB,CAAC;YACF,KAAK,EAAE,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;YAC/D,UAAU,EAAE,IAAI;SACjB,CAAC;QAEF,mBAAmB;QACf,MAAM,CACF,IAAI,CAAA;;;uBAGO,eAAe;cACxB,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;SAEtE,EACD,SAAS,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAC7B,kBAAkB;QAElB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtB,6BAA6B;QAC7B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../../testing/EnvironmentHelpers.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport * as UI from '../../legacy.js';\n\nimport * as DataGrid from './data_grid.js';\n\nconst {render, html} = LitHtml;\nconst widgetRef = UI.Widget.widgetRef;\n\ndescribeWithEnvironment('DataGrid', () => {\n  it('can be instantiated from template', async () => {\n    const container = document.createElement('div');\n    renderElementIntoDOM(container);\n\n    let widget!: DataGrid.DataGrid.DataGridWidget<unknown>;\n\n    const dataGridOptions: DataGrid.DataGrid.DataGridWidgetOptions<unknown> = {\n      displayName: 'testGrid',\n      columns: [{\n        id: 'test',\n        sortable: false,\n      }],\n      nodes: [new DataGrid.DataGrid.DataGridNode({test: 'testNode'})],\n      markAsRoot: true,\n    };\n\n    // clang-format off\n        render(\n            html`\n        <!-- @ts-ignore -->\n        <devtools-data-grid-widget\n            .options=${dataGridOptions}\n            ${widgetRef(DataGrid.DataGrid.DataGridWidget, e => { widget = e; })}\n        ></devtools-data-grid-widget>\n        `,\n        container, {host: this});\n    // clang-format on\n\n    assert.exists(widget);\n    // There is a single test row\n    assert.lengthOf(widget.dataGrid.rootNode().children, 1);\n  });\n});\n"]}