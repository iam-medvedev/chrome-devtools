{"version":3,"file":"DataGridElement.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/data_grid/DataGridElement.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport type * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport inspectorCommonStyles from '../../inspectorCommon.css.js';\n\nimport dataGridStyles from './dataGrid.css.js';\nimport {Align, type ColumnDescriptor, DataType, Events as DataGridEvents} from './DataGrid.js';\nimport {SortableDataGrid, SortableDataGridNode} from './SortableDataGrid.js';\n\nconst DUMMY_COLUMN_ID = 'dummy';  // SortableDataGrid.create requires at least one column.\n\n/**\n * A data grid (table) element that can be used as progressive enhancement over a <table> element.\n *\n * It can be used as\n * ```\n * <devtools-data-grid striped name=${'Display Name'}>\n *   <table>\n *     <tr>\n *       <th id=\"column-1\">Column 1</th>\n *       <th id=\"column-2\">Column 2</th>\n *     </tr>\n *     <tr>\n *       <td>Value 1</td>\n *       <td>Value 2</td>\n *     </tr>\n *   </table>\n * </devtools-data-grid>\n * ```\n * where a row with <th> configures the columns and rows with <td> provide the data.\n *\n * Under the hood it uses SortableDataGrid, which extends ViewportDataGrid so only\n * visible rows are layed out and sorting is provided out of the box.\n *\n * @attr striped\n * @attr displayName\n * @prop filters\n */\nclass DataGridElement extends HTMLElement {\n  static readonly observedAttributes = ['striped', 'name', 'inline'];\n\n  #dataGrid = SortableDataGrid.create([DUMMY_COLUMN_ID], [], '') as SortableDataGrid<DataGridElementNode>;\n  #mutationObserver = new MutationObserver(this.#onChange.bind(this));\n  #resizeObserver = new ResizeObserver(() => {\n    if (!this.inline) {\n      this.#dataGrid.onResize();\n    }\n  });\n  #shadowRoot: ShadowRoot;\n  #columns: ColumnDescriptor[] = [];\n  #hideableColumns = new Set<string>();\n  #hiddenColumns = new Set<string>();\n  #usedCreationNode: DataGridElementNode|null = null;\n\n  constructor() {\n    super();\n    // TODO(dsv): Move this to the data_grid.css once all the data grid usage is migrated to this web component.\n    this.style.display = 'flex';\n    this.#dataGrid.element.style.flex = 'auto';\n\n    this.#shadowRoot = this.attachShadow({mode: 'open', delegatesFocus: true});\n    this.#shadowRoot.createChild('style').textContent = dataGridStyles.cssContent;\n    this.#shadowRoot.createChild('style').textContent = inspectorCommonStyles.cssContent;\n    this.#shadowRoot.appendChild(this.#dataGrid.element);\n\n    this.#dataGrid.addEventListener(\n        DataGridEvents.SELECTED_NODE,\n        e => this.dispatchEvent(new CustomEvent('select', {detail: (e.data as DataGridElementNode).configElement})));\n    this.#dataGrid.addEventListener(\n        DataGridEvents.DESELECTED_NODE, () => this.dispatchEvent(new CustomEvent('select', {detail: null})));\n    this.#dataGrid.addEventListener(DataGridEvents.SORTING_CHANGED, () => this.dispatchEvent(new CustomEvent('sort', {\n      detail: {columnId: this.#dataGrid.sortColumnId(), ascending: this.#dataGrid.isSortOrderAscending()}\n    })));\n    this.#dataGrid.setRowContextMenuCallback((menu, node) => {\n      this.dispatchEvent(\n          new CustomEvent('contextmenu', {detail: {menu, element: (node as DataGridElementNode).configElement}}));\n    });\n    this.#dataGrid.setHeaderContextMenuCallback(menu => {\n      for (const column of this.#columns) {\n        if (this.#hideableColumns.has(column.id)) {\n          menu.defaultSection().appendCheckboxItem(\n              this.#dataGrid.columns[column.id].title as Platform.UIString.LocalizedString, () => {\n                if (this.#hiddenColumns.has(column.id)) {\n                  this.#hiddenColumns.delete(column.id);\n                } else {\n                  this.#hiddenColumns.add(column.id);\n                }\n                this.#dataGrid.setColumnsVisibility(\n                    new Set(this.#columns.map(({id}) => id).filter(column => !this.#hiddenColumns.has(column))));\n              }, {checked: !this.#hiddenColumns.has(column.id)});\n        }\n      }\n    });\n\n    this.#mutationObserver.observe(this, {childList: true, attributes: true, subtree: true, characterData: true});\n    this.#resizeObserver.observe(this);\n    this.#updateColumns();\n    this.#addNodes(this.querySelectorAll('tr'));\n  }\n\n  attributeChangedCallback(name: string, oldValue: string|null, newValue: string|null): void {\n    if (oldValue === newValue) {\n      return;\n    }\n    switch (name) {\n      case 'striped':\n        this.#dataGrid.setStriped(newValue !== 'true');\n        break;\n      case 'name':\n        this.#dataGrid.displayName = newValue ?? '';\n        break;\n      case 'inline':\n        this.#dataGrid.renderInline();\n        break;\n    }\n  }\n\n  set striped(striped: boolean) {\n    this.toggleAttribute('striped', striped);\n  }\n\n  get striped(): boolean {\n    return hasBooleanAttribute(this, 'striped');\n  }\n\n  set inline(striped: boolean) {\n    this.toggleAttribute('inline', striped);\n  }\n\n  get inline(): boolean {\n    return hasBooleanAttribute(this, 'inline');\n  }\n\n  set displayName(displayName: string) {\n    this.setAttribute('name', displayName);\n  }\n\n  get displayName(): string|null {\n    return this.getAttribute('name');\n  }\n\n  set filters(filters: TextUtils.TextUtils.ParsedFilter[]) {\n    this.#dataGrid.setFilters(filters);\n    this.#dataGrid.element.setAttribute('aria-rowcount', String(this.#dataGrid.getNumberOfRows()));\n  }\n\n  get columns(): ColumnDescriptor[] {\n    return this.#columns;\n  }\n\n  #updateColumns(): void {\n    for (const column of Object.keys(this.#dataGrid.columns)) {\n      this.#dataGrid.removeColumn(column);\n    }\n    this.#hideableColumns.clear();\n    this.#columns = [];\n    let hasEditableColumn = false;\n    for (const column of this.querySelectorAll('th[id]') || []) {\n      const id = column.id as Lowercase<string>;\n      let title = column.textContent?.trim() || '';\n      const titleDOMFragment = column.firstElementChild ? document.createDocumentFragment() : undefined;\n      if (titleDOMFragment) {\n        title = '';\n        for (const child of column.children) {\n          titleDOMFragment.appendChild(child.cloneNode(true));\n          title += child.shadowRoot ? child.shadowRoot.textContent : child.textContent;\n        }\n      }\n      const sortable = hasBooleanAttribute(column, 'sortable');\n      const width = column.getAttribute('width') ?? undefined;\n      const fixedWidth = column.hasAttribute('fixed');\n      let align = column.getAttribute('align') ?? undefined;\n      if (align !== Align.CENTER && align !== Align.RIGHT) {\n        align = undefined;\n      }\n      const dataType = column.getAttribute('type') === 'boolean' ? DataType.BOOLEAN : DataType.STRING;\n      const weight = parseFloat(column.getAttribute('weight') || '') ?? undefined;\n      const editable = column.hasAttribute('editable');\n      if (editable) {\n        hasEditableColumn = true;\n      }\n      const columnDescriptor = {\n        id,\n        title: title as Platform.UIString.LocalizedString,\n        titleDOMFragment,\n        sortable,\n        fixedWidth,\n        width,\n        align,\n        weight,\n        editable,\n        dataType,\n      };\n      this.#dataGrid.addColumn(columnDescriptor);\n      this.#columns.push(columnDescriptor);\n      if (hasBooleanAttribute(column, 'hideable')) {\n        this.#hideableColumns.add(id);\n      }\n    }\n    const visibleColumns = new Set(this.#columns.map(({id}) => id).filter(id => !this.#hiddenColumns.has(id)));\n    if (visibleColumns.size) {\n      this.#dataGrid.setColumnsVisibility(visibleColumns);\n    }\n    this.#dataGrid.setEditCallback(hasEditableColumn ? this.#editCallback.bind(this) : undefined, INTERNAL_TOKEN);\n    this.#dataGrid.deleteCallback = hasEditableColumn ? this.#deleteCallback.bind(this) : undefined;\n  }\n\n  #needUpdateColumns(mutationList: MutationRecord[]): boolean {\n    for (const mutation of mutationList) {\n      for (const element of [...mutation.removedNodes, ...mutation.addedNodes]) {\n        if (!(element instanceof HTMLElement)) {\n          continue;\n        }\n        if (element.nodeName === 'TH' || element.querySelector('th')) {\n          return true;\n        }\n      }\n      if (mutation.target instanceof HTMLElement && mutation.target.closest('th')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  #getDataRows(nodes: NodeList): HTMLElement[] {\n    return [...nodes]\n        .flatMap(node => {\n          if (node instanceof HTMLTableRowElement) {\n            return [node];\n          }\n          if (node instanceof HTMLElement) {\n            return [...node.querySelectorAll('tr')];\n          }\n          return [] as HTMLElement[];\n        })\n        .filter(node => node.querySelector('td') && !hasBooleanAttribute(node, 'placeholder'));\n  }\n\n  #findNextExistingNode(element: Element): DataGridElementNode|null {\n    for (let e = element.nextElementSibling; e; e = e.nextElementSibling) {\n      const nextNode = DataGridElementNode.get(e);\n      if (nextNode) {\n        return nextNode;\n      }\n    }\n    return null;\n  }\n\n  #addNodes(nodes: NodeList): void {\n    for (const element of this.#getDataRows(nodes)) {\n      const parentNode = this.#dataGrid.rootNode();  // TODO(dsv): support nested nodes\n      const nextNode = this.#findNextExistingNode(element);\n      const index = nextNode ? parentNode.children.indexOf(nextNode) : parentNode.children.length;\n      const node = new DataGridElementNode(element, this);\n      parentNode.insertChild(node, index);\n      if (hasBooleanAttribute(element, 'selected')) {\n        node.select();\n      }\n      if (hasBooleanAttribute(element, 'dirty')) {\n        node.setDirty(true);\n      }\n      if (hasBooleanAttribute(element, 'inactive')) {\n        node.setInactive(true);\n      }\n      if (hasBooleanAttribute(element, 'highlighted')) {\n        node.setHighlighted(true);\n      }\n    }\n  }\n\n  #removeNodes(nodes: NodeList): void {\n    for (const element of this.#getDataRows(nodes)) {\n      const node = DataGridElementNode.get(element);\n      if (node) {\n        node.remove();\n      }\n    }\n  }\n\n  #updateNode(node: Node, attributeName: string|null): void {\n    const dataRow = node instanceof HTMLElement ? node.closest('tr') : null;\n    const dataGridNode = dataRow ? DataGridElementNode.get(dataRow) : null;\n    if (dataGridNode && dataRow) {\n      if (attributeName === 'selected') {\n        if (hasBooleanAttribute(dataRow, 'selected')) {\n          dataGridNode.select();\n        } else {\n          dataGridNode.deselect();\n        }\n      } else if (attributeName === 'dirty') {\n        dataGridNode.setDirty(hasBooleanAttribute(dataRow, 'dirty'));\n      } else if (attributeName === 'inactive') {\n        dataGridNode.setInactive(hasBooleanAttribute(dataRow, 'inactive'));\n      } else if (attributeName === 'highlighted') {\n        dataGridNode.setHighlighted(hasBooleanAttribute(dataRow, 'highlighted'));\n      } else {\n        dataGridNode.refresh();\n      }\n    }\n  }\n\n  #updateCreationNode(): void {\n    if (this.#usedCreationNode) {\n      DataGridElementNode.remove(this.#usedCreationNode);\n      this.#usedCreationNode = null;\n      this.#dataGrid.creationNode = undefined;\n    }\n    const placeholder = this.querySelector('tr[placeholder]');\n    if (!placeholder) {\n      this.#dataGrid.creationNode?.remove();\n      this.#dataGrid.creationNode = undefined;\n    } else if (!DataGridElementNode.get(placeholder)) {\n      this.#dataGrid.creationNode?.remove();\n      const node = new DataGridElementNode(placeholder, this);\n      this.#dataGrid.creationNode = node;\n      this.#dataGrid.rootNode().appendChild(node);\n    }\n  }\n\n  #onChange(mutationList: MutationRecord[]): void {\n    if (this.#needUpdateColumns(mutationList)) {\n      this.#updateColumns();\n    }\n    this.#updateCreationNode();\n\n    for (const mutation of mutationList) {\n      this.#removeNodes(mutation.removedNodes);\n      this.#addNodes(mutation.addedNodes);\n      this.#updateNode(mutation.target, mutation.attributeName);\n    }\n  }\n\n  #editCallback(\n      node: DataGridElementNode, columnId: string, valueBeforeEditing: string, newText: string,\n      moveDirection?: string): void {\n    if (node.isCreationNode) {\n      this.#usedCreationNode = node;\n      if (moveDirection === 'forward') {\n        const hasNextEditableColumn =\n            this.#columns.slice(this.#columns.findIndex(({id}) => id === columnId) + 1).some(({editable}) => editable);\n        if (!hasNextEditableColumn) {\n          node.deselect();\n        }\n      }\n      return;\n    }\n\n    this.dispatchEvent(\n        new CustomEvent('edit', {detail: {node: node.configElement, columnId, valueBeforeEditing, newText}}));\n  }\n\n  #deleteCallback(node: DataGridElementNode): void {\n    this.dispatchEvent(new CustomEvent('delete', {detail: node.configElement}));\n  }\n\n  override addEventListener<K extends keyof HTMLElementEventMap>(\n      type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => void,\n      options?: boolean|AddEventListenerOptions|undefined): void;\n  override addEventListener(\n      type: string, listener: EventListenerOrEventListenerObject,\n      options?: boolean|AddEventListenerOptions|undefined): void;\n  override addEventListener(...args: Parameters<HTMLElement['addEventListener']>): void {\n    super.addEventListener(...args);\n    if (args[0] === 'refresh') {\n      this.#dataGrid.refreshCallback = this.#refreshCallback.bind(this);\n    }\n  }\n\n  #refreshCallback(): void {\n    this.dispatchEvent(new CustomEvent('refresh'));\n  }\n}\n\nclass DataGridElementNode extends SortableDataGridNode<DataGridElementNode> {\n  static #elementToNode = new WeakMap<Element, DataGridElementNode>();\n  #configElement: Element;\n  #dataGridElement: DataGridElement;\n  #addedClasses = new Set<string>();\n  constructor(configElement: Element, dataGridElement: DataGridElement) {\n    super();\n    this.#configElement = configElement;\n    DataGridElementNode.#elementToNode.set(configElement, this);\n    this.#dataGridElement = dataGridElement;\n    this.#updateData();\n    this.isCreationNode = hasBooleanAttribute(this.#configElement, 'placeholder');\n  }\n\n  static get(configElement: Element|undefined): DataGridElementNode|undefined {\n    return configElement && DataGridElementNode.#elementToNode.get(configElement);\n  }\n\n  get configElement(): Element {\n    return this.#configElement;\n  }\n\n  #updateData(): void {\n    const cells = this.#configElement.querySelectorAll('td');\n    for (let i = 0; i < cells.length; ++i) {\n      const cell = cells[i];\n      const column = this.#dataGridElement.columns[i];\n      if (column.dataType === DataType.BOOLEAN) {\n        this.data[column.id] = hasBooleanAttribute(cell, 'data-value');\n      } else {\n        this.data[column.id] = cell.dataset.value ?? cell.textContent ?? '';\n      }\n    }\n  }\n\n  override createElement(): HTMLElement {\n    const element = super.createElement();\n    element.addEventListener('click', this.#onRowMouseEvent.bind(this));\n    element.addEventListener('mouseenter', this.#onRowMouseEvent.bind(this));\n    element.addEventListener('mouseleave', this.#onRowMouseEvent.bind(this));\n    if (this.#configElement.hasAttribute('style')) {\n      element.setAttribute('style', this.#configElement.getAttribute('style') || '');\n    }\n    for (const classToAdd of this.#configElement.classList) {\n      element.classList.add(classToAdd);\n    }\n    return element;\n  }\n\n  override refresh(): void {\n    this.#updateData();\n    super.refresh();\n    const existingElement = this.existingElement();\n    if (!existingElement) {\n      return;\n    }\n    if (this.#configElement.hasAttribute('style')) {\n      existingElement.setAttribute('style', this.#configElement.getAttribute('style') || '');\n    }\n    for (const addedClass of this.#addedClasses) {\n      existingElement.classList.remove(addedClass);\n    }\n    for (const classToAdd of this.#configElement.classList) {\n      existingElement.classList.add(classToAdd);\n    }\n  }\n\n  #onRowMouseEvent(event: MouseEvent): void {\n    let currentElement = event.target as HTMLElement;\n    const childIndexesOnPathToRoot: number[] = [];\n    while (currentElement?.parentElement && currentElement !== event.currentTarget) {\n      childIndexesOnPathToRoot.push([...currentElement.parentElement.children].indexOf(currentElement));\n      currentElement = currentElement.parentElement;\n    }\n    if (!currentElement) {\n      throw new Error('Cell click event target not found in the data grid');\n    }\n    let targetInConfigRow = this.#configElement;\n    for (const index of childIndexesOnPathToRoot.reverse()) {\n      targetInConfigRow = targetInConfigRow.children[index];\n    }\n    if (targetInConfigRow instanceof HTMLElement) {\n      targetInConfigRow?.dispatchEvent(new MouseEvent(event.type, {bubbles: true, composed: true}));\n    }\n  }\n\n  override createCell(columnId: string): HTMLElement {\n    const index = this.#dataGridElement.columns.findIndex(({id}) => id === columnId);\n    if (this.#dataGridElement.columns[index].dataType === DataType.BOOLEAN) {\n      return super.createCell(columnId);\n    }\n    const cell = this.createTD(columnId);\n    if (this.isCreationNode) {\n      return cell;\n    }\n    const configCell = this.#configElement.querySelectorAll('td')[index];\n    if (!configCell) {\n      throw new Error(`Column ${columnId} not found in the data grid`);\n    }\n    for (const child of configCell.childNodes) {\n      cell.appendChild(child.cloneNode(true));\n    }\n    for (const cssClass of configCell.classList) {\n      cell.classList.add(cssClass);\n    }\n    cell.title = configCell.title;\n    if (configCell.hasAttribute('aria-label')) {\n      this.setCellAccessibleName(configCell.getAttribute('aria-label') || '', cell, columnId);\n    }\n\n    return cell;\n  }\n\n  static remove(node: DataGridElementNode): void {\n    DataGridElementNode.#elementToNode.delete(node.#configElement);\n    node.remove();\n  }\n\n  override deselect(): void {\n    super.deselect();\n    if (this.isCreationNode) {\n      this.#dataGridElement.dispatchEvent(new CustomEvent('create', {detail: this.data}));\n    }\n  }\n}\n\ncustomElements.define('devtools-data-grid', DataGridElement);\n\nfunction hasBooleanAttribute(element: Element, name: string): boolean {\n  return element.hasAttribute(name) && element.getAttribute(name) !== 'false';\n}\n\nexport interface DataGridInternalToken {\n  token: 'DataGridInternalToken';\n}\n\nconst INTERNAL_TOKEN: DataGridInternalToken = {\n  token: 'DataGridInternalToken'\n};\n"]}