{"version":3,"file":"DataGridElement.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/data_grid/DataGridElement.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './data_grid.js';\n\nimport {raf, renderElementIntoDOM} from '../../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../../testing/EnvironmentHelpers.js';\nimport * as RenderCoordinator from '../../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport * as UI from '../../legacy.js';\n\nconst {render, html} = Lit;\n\nfunction getFocusedElement(): HTMLElement {\n  let root: Document|ShadowRoot = document;\n  while (root.activeElement?.shadowRoot?.activeElement) {\n    root = root.activeElement.shadowRoot;\n  }\n  return root.activeElement as HTMLElement;\n}\n\nfunction sendKeydown(element: HTMLElement, key: string): void {\n  element.focus();\n  getFocusedElement().dispatchEvent(\n      new KeyboardEvent('keydown', {\n        key,\n        bubbles: true,\n        composed: true,\n      }),\n  );\n}\n\ndescribeWithEnvironment('DataGrid', () => {\n  let container!: HTMLElement;\n  let liveAnnouncerAlertStub: sinon.SinonStub;\n\n  function getAlertAnnouncement(element: HTMLElement): string {\n    element.blur();\n    element.focus();\n    assert.isTrue(liveAnnouncerAlertStub.called, 'Expected UI.ARIAUtils.LiveAnnouncer.alert to be called');\n    return liveAnnouncerAlertStub.lastCall.args[0];\n  }\n\n  beforeEach(() => {\n    liveAnnouncerAlertStub = sinon.stub(UI.ARIAUtils.LiveAnnouncer, 'alert').returns();\n\n    container = document.createElement('div');\n    container.style.display = 'flex';\n    container.style.width = '640px';\n    container.style.height = '480px';\n    renderElementIntoDOM(container);\n  });\n\n  async function renderDataGrid(template: Lit.TemplateResult): Promise<HTMLElement> {\n    render(template, container, {host: {}});\n    await RenderCoordinator.done({waitForWork: true});\n    return container.querySelector('devtools-data-grid')!;\n  }\n\n  async function renderDataGridContent(template: Lit.TemplateResult): Promise<HTMLElement> {\n    return await renderDataGrid(\n        html`<devtools-data-grid striped name=\"Display Name\" .template=${template}></devtools-data-grid>`);\n  }\n\n  async function renderDataGridWithData(columns: Lit.TemplateResult, rows: Lit.TemplateResult): Promise<HTMLElement> {\n    return await renderDataGridContent(html`<table>${columns}${rows}</table>`);\n  }\n\n  it('can be configured from template', async () => {\n    const element = await renderDataGrid(html`\n        <devtools-data-grid .striped=${true} .displayName=${'Display Name'}>\n        </devtools-data-grid>`);\n    assert.isTrue(getAlertAnnouncement(element).startsWith('Display Name Rows: 0'));\n  });\n\n  it('can initialize data from template', async () => {\n    const element = await renderDataGrid(html`\n        <devtools-data-grid striped name=${'Display Name'}>\n          <table>\n            <tr>\n              <th id=\"column-1\">Column 1</th>\n              <th id=\"column-2\">Column 2</th>\n            </tr>\n            <tr>\n              <td>Value 1</td>\n              <td>Value 2</td>\n            </tr>\n          </table>\n        </devtools-data-grid>`);\n    sendKeydown(element, 'ArrowDown');\n    assert.strictEqual(getAlertAnnouncement(element), 'Display Name Row  Column 1: Value 1, Column 2: Value 2');\n  });\n\n  it('can update data from template', async () => {\n    await renderDataGridWithData(\n        html`\n            <tr>\n              <th id=\"column-1\">Column 1</th>\n              <th id=\"column-2\">Column 2</th>\n            </tr>`,\n        html`\n            <tr>\n              <td>Value 1</td>\n              <td>Value 2</td>\n            </tr>\n          </table>\n        </devtools-data-grid>`);\n    const element = await renderDataGridWithData(\n        html`\n            <tr>\n              <th id=\"column-3\">Column 3</th>\n              <th id=\"column-4\">Column 4</th>\n            </tr>`,\n        html`\n            <tr>\n              <td>Value 3</td>\n              <td>Value 4</td>\n            </tr>\n          </table>\n        </devtools-data-grid>`);\n    sendKeydown(element, 'ArrowDown');\n    assert.strictEqual(getAlertAnnouncement(element), 'Display Name Row  Column 3: Value 3, Column 4: Value 4');\n  });\n\n  it('can filter data', async () => {\n    await renderDataGrid(html`\n        <devtools-data-grid striped name=${'Display Name'}>\n          <table>\n            <tr>\n              <th id=\"column-1\">Column 1</th>\n              <th id=\"column-2\">Column 2</th>\n            </tr>\n            <tr>\n              <td>Value 1</td>\n              <td>Value 2</td>\n            </tr>\n            <tr>\n              <td>Value 3</td>\n              <td>Value 4</td>\n            </tr>\n          </table>\n        </devtools-data-grid>`);\n    // clang-format off\n    const element = await renderDataGrid(html`\n        <devtools-data-grid\n            striped name=${'Display Name'}\n            .filters=${[{key: 'column-1', text: '3',  negative: false}]}>\n          <table>\n            <tr>\n              <th id=\"column-1\">Column 1</th>\n              <th id=\"column-2\">Column 2</th>\n            </tr>\n            <tr>\n              <td>Value 1</td>\n              <td>Value 2</td>\n            </tr>\n            <tr>\n              <td>Value 3</td>\n              <td>Value 4</td>\n            </tr>\n          </table>\n        </devtools-data-grid>`);\n    // clang-format on\n    assert.isTrue(getAlertAnnouncement(element).startsWith('Display Name Rows: 1'));\n    sendKeydown(element, 'ArrowDown');\n    assert.strictEqual(getAlertAnnouncement(element), 'Display Name Row  Column 1: Value 3, Column 2: Value 4');\n  });\n\n  it('can set selection from template', async () => {\n    let element = await renderDataGrid(html`\n        <devtools-data-grid striped name=${'Display Name'}>\n          <table>\n            <tr>\n              <th id=\"column-1\">Column 1</th>\n              <th id=\"column-2\">Column 2</th>\n            </tr>\n            <tr>\n              <td>Value 1</td>\n              <td>Value 2</td>\n            </tr>\n            <tr selected>\n              <td>Value 3</td>\n              <td>Value 4</td>\n            </tr>\n          </table>\n        </devtools-data-grid>`);\n    // clang-format off\n    assert.strictEqual(getAlertAnnouncement(element), 'Display Name Row  Column 1: Value 3, Column 2: Value 4');\n\n    element = await renderDataGrid(html`\n        <devtools-data-grid striped name=${'Display Name'}>\n          <table>\n            <tr>\n              <th id=\"column-1\">Column 1</th>\n              <th id=\"column-2\">Column 2</th>\n            </tr>\n            <tr>\n              <td>Value 1</td>\n              <td>Value 2</td>\n            </tr>\n            <tr selected=\"false\">\n              <td>Value 3</td>\n              <td>Value 4</td>\n            </tr>\n          </table>\n        </devtools-data-grid>`);\n    // clang-format off\n    assert.isTrue(getAlertAnnouncement(element).startsWith('Display Name Rows: 2'));\n  });\n\n  it('supports editable columns', async () => {\n    const editCallback = sinon.stub();\n    const element = await renderDataGrid(html`\n        <devtools-data-grid striped name=${'Display Name'}>\n          <table>\n            <tr>\n              <th id=\"column-1\" editable>Column 1</th>\n              <th id=\"column-2\">Column 2</th>\n            </tr>\n            <tr @edit=${editCallback as () => void}>\n              <td>Value 1</td>\n              <td>Value 2</td>\n            </tr>\n          </table>\n        </devtools-data-grid>`);\n    sendKeydown(element, 'ArrowDown');\n    sendKeydown(element, 'Enter');\n    getFocusedElement().textContent = 'New Value';\n    sendKeydown(element, 'Enter');\n    sinon.assert.calledOnce(editCallback);\n    assert.isTrue(editCallback.firstCall.args[0].target.textContent.includes('Value 1'));\n    assert.isTrue(editCallback.firstCall.args[0].target.textContent.includes('Value 2'));\n    assert.strictEqual(editCallback.firstCall.args[0].detail.columnId, 'column-1');\n    assert.strictEqual(editCallback.firstCall.args[0].detail.valueBeforeEditing, 'Value 1');\n    assert.strictEqual(editCallback.firstCall.args[0].detail.newText, 'New Value');\n  });\n\n  it('supports creation node', async () => {\n    const createCallback = sinon.stub();\n    const editCallback = sinon.stub();\n    const element = await renderDataGrid(html`\n        <devtools-data-grid striped name=${'Display Name'}\n                            @create=${createCallback as () => void}>\n          <table>\n            <tr>\n              <th id=\"column-1\" editable>Column 1</th>\n              <th id=\"column-2\" editable>Column 2</th>\n            </tr>\n            <tr @edit=${editCallback as () => void}>\n              <td>Value 1</td>\n              <td>Value 2</td>\n            </tr>\n            <tr placeholder @edit=${editCallback as () => void}>\n            </tr>\n          </table>\n        </devtools-data-grid>`);\n    sendKeydown(element, 'ArrowDown');\n    sendKeydown(element, 'ArrowDown');\n    sendKeydown(element, 'Enter');\n    getFocusedElement().textContent = 'New Value 1';\n    sendKeydown(element, 'Tab');\n    sinon.assert.notCalled(editCallback);\n    sinon.assert.notCalled(createCallback);\n    getFocusedElement().textContent = 'New Value 2';\n    sendKeydown(element, 'Tab');\n    sinon.assert.notCalled(editCallback);\n    sinon.assert.calledOnce(createCallback);\n    assert.deepEqual(\n        createCallback.firstCall.args[0].detail, {'column-1': 'New Value 1', 'column-2': 'New Value 2'});\n  });\n\n  it('can display nested nodes', async () => {\n    const element = await renderDataGrid(html`\n        <devtools-data-grid striped name=${'Display Name'}>\n          <table>\n            <tr>\n              <th id=\"column-1\">Column 1</th>\n              <th id=\"column-2\">Column 2</th>\n            </tr>\n            <tr>\n              <td>Parent Value 1</td>\n              <td>Parent Value 2</td>\n              <td>\n                <table>\n                  <tr>\n                    <td>Child Value 1</td>\n                    <td>Child Value 2</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </table>\n        </devtools-data-grid>`);\n\n    // Navigate to parent row.\n    sendKeydown(element, 'ArrowDown');\n    // It should identify it as a parent and collapsed.\n    assert.strictEqual(\n        getAlertAnnouncement(element),\n        'Display Name Row collapsed level 1, Column 1: Parent Value 1, Column 2: Parent Value 2');\n\n    // Expand parent row.\n    sendKeydown(element, 'ArrowRight');\n    assert.strictEqual(\n        getAlertAnnouncement(element),\n        'Display Name Row expanded level 1, Column 1: Parent Value 1, Column 2: Parent Value 2');\n\n    await raf();\n\n    // Navigate to child row.\n    sendKeydown(element, 'ArrowDown');\n    assert.strictEqual(\n        getAlertAnnouncement(element),\n        'Display Name Row  level 2, Column 1: Child Value 1, Column 2: Child Value 2');\n  });\n});\n"]}