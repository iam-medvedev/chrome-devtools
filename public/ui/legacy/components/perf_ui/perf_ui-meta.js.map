{
  "version": 3,
  "sources": ["perf_ui-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Root from '../../../../core/root/root.js';\nimport * as UI from '../../legacy.js';\n\nimport type * as PerfUI from './perf_ui.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of a setting under the Performance category in Settings.\n   * Selected navigation allows switching between 2 different sets of shortcuts\n   * and actions (like zoom on scroll or crtl/cmd + scroll) for navigating the performance panel.\n   */\n  flamechartSelectedNavigation: 'Flamechart navigation:',\n  /**\n   * @description Modern navigation option in the Performance Panel.\n   */\n  modern: 'Modern',\n  /**\n   * @description Classic navigation option in the Performance Panel.\n   */\n  classic: 'Classic',\n  /**\n   * @description Title of a setting under the Memory category in Settings. Live memory is memory\n   * that is still in-use by the program (not dead). Allocation of live memory is when the program\n   * creates new memory. This is a setting that turns on extra annotations in the UI to mark these\n   * allocations.\n   */\n  liveMemoryAllocationAnnotations: 'Live memory allocation annotations',\n  /**\n   * @description Title of a setting under the Memory category that can be invoked through the Command Menu\n   */\n  showLiveMemoryAllocation: 'Show live memory allocation annotations',\n  /**\n   * @description Title of a setting under the Memory category that can be invoked through the Command Menu\n   */\n  hideLiveMemoryAllocation: 'Hide live memory allocation annotations',\n  /**\n   * @description Title of an action in the components tool to collect garbage\n   */\n  collectGarbage: 'Collect garbage',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/perf_ui/perf_ui-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedPerfUIModule: (typeof PerfUI|undefined);\n\nasync function loadPerfUIModule(): Promise<typeof PerfUI> {\n  if (!loadedPerfUIModule) {\n    loadedPerfUIModule = await import('./perf_ui.js');\n  }\n  return loadedPerfUIModule;\n}\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'components.collect-garbage',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.collectGarbage),\n  iconClass: UI.ActionRegistration.IconClass.MOP,\n  async loadActionDelegate() {\n    const PerfUI = await loadPerfUIModule();\n    return new PerfUI.GCActionDelegate.GCActionDelegate();\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERFORMANCE,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.flamechartSelectedNavigation),\n  settingName: 'flamechart-selected-navigation',\n  settingType: Common.Settings.SettingType.ENUM,\n  defaultValue: 'classic',\n  options: [\n    {\n      title: i18nLazyString(UIStrings.modern),\n      text: i18nLazyString(UIStrings.modern),\n      value: 'modern',\n    },\n    {\n      title: i18nLazyString(UIStrings.classic),\n      text: i18nLazyString(UIStrings.classic),\n      value: 'classic',\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.MEMORY,\n  experiment: Root.Runtime.ExperimentName.LIVE_HEAP_PROFILE,\n  title: i18nLazyString(UIStrings.liveMemoryAllocationAnnotations),\n  settingName: 'memory-live-heap-profile',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.showLiveMemoryAllocation),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.hideLiveMemoryAllocation),\n    },\n  ],\n});\n"],
  "mappings": ";AAIA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,QAAQ;AAIpB,IAAM,YAAY;;;;;;EAMhB,8BAA8B;;;;EAI9B,QAAQ;;;;EAIR,SAAS;;;;;;;EAOT,iCAAiC;;;;EAIjC,0BAA0B;;;;EAI1B,0BAA0B;;;;EAI1B,gBAAgB;;AAGlB,IAAM,OAAY,UAAK,kBAAkB,gDAAgD,SAAS;AAClG,IAAM,iBAAsB,UAAK,iCAAiC,KAAK,QAAW,IAAI;AAEtF,IAAI;AAEJ,eAAe,mBAAgB;AAC7B,MAAI,CAAC,oBAAoB;AACvB,yBAAqB,MAAM,OAAO,cAAc;EAClD;AACA,SAAO;AACT;AAEG,sBAAmB,wBAAwB;EAC5C,UAAU;EACV,UAAQ;EACR,OAAO,eAAe,UAAU,cAAc;EAC9C,WAAS;EACT,MAAM,qBAAkB;AACtB,UAAM,SAAS,MAAM,iBAAgB;AACrC,WAAO,IAAI,OAAO,iBAAiB,iBAAgB;EACrD;CACD;AAEM,gBAAS,yBAAyB;EACvC,UAAQ;EACR,aAAW;EACX,OAAO,eAAe,UAAU,4BAA4B;EAC5D,aAAa;EACb,aAAW;EACX,cAAc;EACd,SAAS;IACP;MACE,OAAO,eAAe,UAAU,MAAM;MACtC,MAAM,eAAe,UAAU,MAAM;MACrC,OAAO;;IAET;MACE,OAAO,eAAe,UAAU,OAAO;MACvC,MAAM,eAAe,UAAU,OAAO;MACtC,OAAO;;;CAGZ;AAEM,gBAAS,yBAAyB;EACvC,UAAQ;EACR,YAAU;EACV,OAAO,eAAe,UAAU,+BAA+B;EAC/D,aAAa;EACb,aAAW;EACX,cAAc;EACd,SAAS;IACP;MACE,OAAO;MACP,OAAO,eAAe,UAAU,wBAAwB;;IAE1D;MACE,OAAO;MACP,OAAO,eAAe,UAAU,wBAAwB;;;CAG7D;",
  "names": []
}
