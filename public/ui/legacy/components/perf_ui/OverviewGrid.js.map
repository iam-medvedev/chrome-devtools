{"version":3,"file":"OverviewGrid.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/perf_ui/OverviewGrid.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as IconButton from '../../../components/icon_button/icon_button.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\nimport * as ThemeSupport from '../../theme_support/theme_support.js';\n\nimport overviewGridStyles from './overviewGrid.css.js';\nimport {type Calculator, TimelineGrid} from './TimelineGrid.js';\n\nconst UIStrings = {\n  /**\n   *@description Label for the window for Overview grids\n   */\n  overviewGridWindow: 'Overview grid window',\n  /**\n   *@description Label for left window resizer for Overview grids\n   */\n  leftResizer: 'Left Resizer',\n  /**\n   *@description Label for right window resizer for Overview grids\n   */\n  rightResizer: 'Right Resizer',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/perf_ui/OverviewGrid.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class OverviewGrid {\n  element: HTMLDivElement;\n  private readonly grid: TimelineGrid;\n  // The |window| will manage the html element of resizers, the left/right blue-colour curtain, and handle the resizing,\n  // zooming, and breadcrumb creation.\n  private readonly window: Window;\n  constructor(prefix: string, calculator?: Calculator) {\n    this.element = document.createElement('div');\n    this.element.id = prefix + '-overview-container';\n\n    this.grid = new TimelineGrid();\n    this.grid.element.id = prefix + '-overview-grid';\n    this.grid.setScrollTop(0);\n\n    this.element.appendChild(this.grid.element);\n\n    this.window = new Window(this.element, this.grid.dividersLabelBarElement, calculator);\n  }\n\n  enableCreateBreadcrumbsButton(): HTMLElement {\n    return this.window.enableCreateBreadcrumbsButton();\n  }\n\n  set showingScreenshots(isShowing: boolean) {\n    this.window.showingScreenshots = isShowing;\n  }\n\n  clientWidth(): number {\n    return this.element.clientWidth;\n  }\n\n  updateDividers(calculator: Calculator): void {\n    this.grid.updateDividers(calculator);\n  }\n\n  addEventDividers(dividers: Element[]): void {\n    this.grid.addEventDividers(dividers);\n  }\n\n  removeEventDividers(): void {\n    this.grid.removeEventDividers();\n  }\n\n  reset(): void {\n    this.window.reset();\n  }\n\n  // The ratio of the left slider position compare to the whole overview grid.\n  // It should be a number between 0 and 1.\n  windowLeftRatio(): number {\n    return this.window.windowLeftRatio || 0;\n  }\n\n  // The ratio of the right slider position compare to the whole overview grid.\n  // It should be a number between 0 and 1.\n  windowRightRatio(): number {\n    return this.window.windowRightRatio || 0;\n  }\n\n  /**\n   * This function will return the raw value of the slider window.\n   * Since the OverviewGrid is used in Performance panel or Memory panel, the raw value can be in milliseconds or bytes.\n   *\n   * @returns the pair of start/end value of the slider window in milliseconds or bytes\n   */\n  calculateWindowValue(): {rawStartValue: number, rawEndValue: number} {\n    return this.window.calculateWindowValue();\n  }\n\n  setWindowRatio(leftRatio: number, rightRatio: number): void {\n    this.window.setWindowRatio(leftRatio, rightRatio);\n  }\n\n  addEventListener<T extends keyof EventTypes>(\n      eventType: T, listener: Common.EventTarget.EventListener<EventTypes, T>,\n      thisObject?: Object): Common.EventTarget.EventDescriptor {\n    return this.window.addEventListener(eventType, listener, thisObject);\n  }\n\n  setClickHandler(clickHandler: ((arg0: Event) => boolean)|null): void {\n    this.window.setClickHandler(clickHandler);\n  }\n\n  zoom(zoomFactor: number, referencePoint: number): void {\n    this.window.zoom(zoomFactor, referencePoint);\n  }\n\n  setResizeEnabled(enabled: boolean): void {\n    this.window.setResizeEnabled(enabled);\n  }\n}\n\nconst MinSelectableSize = 14;\nconst WindowScrollSpeedFactor = .3;\nconst ResizerOffset = 5;\nconst OffsetFromWindowEnds = 10;\n\nexport class Window extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private parentElement: Element;\n  private calculator: Calculator|undefined;\n  private leftResizeElement: HTMLElement;\n  private rightResizeElement: HTMLElement;\n  private leftCurtainElement: HTMLElement;\n  private rightCurtainElement: HTMLElement;\n  private breadcrumbButtonContainerElement: HTMLElement;\n  private createBreadcrumbButton: HTMLElement;\n  private curtainsRange?: HTMLElement;\n  private breadcrumbZoomIcon?: IconButton.Icon.Icon;\n\n  private overviewWindowSelector!: WindowSelector|undefined;\n  private offsetLeft!: number;\n  private dragStartPointPixel!: number;\n  private dragStartLeftRatio!: number;\n  private dragStartRightRatio!: number;\n\n  // The ratio of the left/right resizer position compare to the whole overview grid.\n  // They should be a number between 0 and 1.\n  windowLeftRatio = 0;\n  windowRightRatio = 1;\n\n  private resizeEnabled?: boolean;\n  private clickHandler?: ((arg0: Event) => boolean)|null;\n  private resizerParentOffsetLeft?: number;\n  #breadcrumbsEnabled = false;\n  #mouseOverGridOverview = false;\n  constructor(parentElement: HTMLElement, dividersLabelBarElement?: Element, calculator?: Calculator) {\n    super();\n    this.parentElement = parentElement;\n    this.parentElement.classList.add('parent-element');\n    UI.ARIAUtils.markAsGroup(this.parentElement);\n    this.calculator = calculator;\n\n    UI.ARIAUtils.setLabel(this.parentElement, i18nString(UIStrings.overviewGridWindow));\n\n    UI.UIUtils.installDragHandle(\n        this.parentElement, this.startWindowSelectorDragging.bind(this), this.windowSelectorDragging.bind(this),\n        this.endWindowSelectorDragging.bind(this), 'text', null);\n    if (dividersLabelBarElement) {\n      UI.UIUtils.installDragHandle(\n          dividersLabelBarElement, this.startWindowDragging.bind(this), this.windowDragging.bind(this), null,\n          '-webkit-grabbing', '-webkit-grab');\n    }\n\n    this.parentElement.addEventListener('wheel', this.onMouseWheel.bind(this), true);\n    this.parentElement.addEventListener('dblclick', this.resizeWindowMaximum.bind(this), true);\n    ThemeSupport.ThemeSupport.instance().appendStyle(this.parentElement, overviewGridStyles);\n\n    this.leftResizeElement = parentElement.createChild('div', 'overview-grid-window-resizer');\n    UI.UIUtils.installDragHandle(\n        this.leftResizeElement, this.resizerElementStartDragging.bind(this), this.leftResizeElementDragging.bind(this),\n        null, 'ew-resize');\n    this.rightResizeElement = parentElement.createChild('div', 'overview-grid-window-resizer');\n    UI.UIUtils.installDragHandle(\n        this.rightResizeElement, this.resizerElementStartDragging.bind(this),\n        this.rightResizeElementDragging.bind(this), null, 'ew-resize');\n\n    UI.ARIAUtils.setLabel(this.leftResizeElement, i18nString(UIStrings.leftResizer));\n    UI.ARIAUtils.markAsSlider(this.leftResizeElement);\n    const leftKeyDown = (event: Event): void => this.handleKeyboardResizing(event, false);\n    this.leftResizeElement.addEventListener('keydown', leftKeyDown);\n    this.leftResizeElement.addEventListener('click', this.onResizerClicked);\n\n    UI.ARIAUtils.setLabel(this.rightResizeElement, i18nString(UIStrings.rightResizer));\n    UI.ARIAUtils.markAsSlider(this.rightResizeElement);\n\n    const rightKeyDown = (event: Event): void => this.handleKeyboardResizing(event, true);\n    this.rightResizeElement.addEventListener('keydown', rightKeyDown);\n    this.rightResizeElement.addEventListener('focus', this.onRightResizeElementFocused.bind(this));\n    this.rightResizeElement.addEventListener('click', this.onResizerClicked);\n\n    this.leftCurtainElement = parentElement.createChild('div', 'window-curtain-left');\n    this.rightCurtainElement = parentElement.createChild('div', 'window-curtain-right');\n\n    this.breadcrumbButtonContainerElement = parentElement.createChild('div', 'create-breadcrumb-button-container');\n    this.createBreadcrumbButton = this.breadcrumbButtonContainerElement.createChild('div', 'create-breadcrumb-button');\n    this.createBreadcrumbButton.setAttribute(\n        'jslog', `${VisualLogging.action('timeline.create-breadcrumb').track({click: true})}`);\n    this.reset();\n  }\n\n  enableCreateBreadcrumbsButton(): HTMLElement {\n    this.curtainsRange = this.createBreadcrumbButton.createChild('div');\n    this.breadcrumbZoomIcon = IconButton.Icon.create('zoom-in');\n    this.createBreadcrumbButton.appendChild(this.breadcrumbZoomIcon);\n    this.createBreadcrumbButton.addEventListener('click', () => {\n      this.#createBreadcrumb();\n    });\n\n    this.#breadcrumbsEnabled = true;\n\n    this.#changeBreadcrumbButtonVisibilityOnInteraction(this.parentElement);\n    this.#changeBreadcrumbButtonVisibilityOnInteraction(this.rightResizeElement);\n    this.#changeBreadcrumbButtonVisibilityOnInteraction(this.leftResizeElement);\n\n    return this.breadcrumbButtonContainerElement;\n  }\n\n  set showingScreenshots(isShowing: boolean) {\n    this.breadcrumbButtonContainerElement.classList.toggle('with-screenshots', isShowing);\n  }\n\n  #changeBreadcrumbButtonVisibilityOnInteraction(element: Element): void {\n    if (!this.#breadcrumbsEnabled) {\n      return;\n    }\n    element.addEventListener('mouseover', () => {\n      if (this.windowLeftRatio <= 0 && this.windowRightRatio >= 1) {\n        this.breadcrumbButtonContainerElement.classList.toggle('is-breadcrumb-button-visible', false);\n        this.#mouseOverGridOverview = false;\n      } else {\n        this.breadcrumbButtonContainerElement.classList.toggle('is-breadcrumb-button-visible', true);\n        this.#mouseOverGridOverview = true;\n      }\n    });\n\n    element.addEventListener('mouseout', () => {\n      this.breadcrumbButtonContainerElement.classList.toggle('is-breadcrumb-button-visible', false);\n      this.#mouseOverGridOverview = false;\n    });\n  }\n\n  private onResizerClicked(event: Event): void {\n    if (event.target) {\n      (event.target as HTMLElement).focus();\n    }\n  }\n\n  private onRightResizeElementFocused(): void {\n    // To prevent browser focus from scrolling the element into view and shifting the contents of the strip\n    this.parentElement.scrollLeft = 0;\n  }\n\n  reset(): void {\n    this.windowLeftRatio = 0;\n    this.windowRightRatio = 1;\n    this.setResizeEnabled(true);\n    this.updateCurtains();\n  }\n\n  setResizeEnabled(resizeEnabled: boolean): void {\n    this.resizeEnabled = resizeEnabled;\n    this.rightResizeElement.tabIndex = resizeEnabled ? 0 : -1;\n    this.leftResizeElement.tabIndex = resizeEnabled ? 0 : -1;\n  }\n\n  setClickHandler(clickHandler: ((arg0: Event) => boolean)|null): void {\n    this.clickHandler = clickHandler;\n  }\n\n  private resizerElementStartDragging(event: Event): boolean {\n    const mouseEvent = (event as MouseEvent);\n    const target = (event.target as HTMLElement);\n    if (!this.resizeEnabled) {\n      return false;\n    }\n    this.resizerParentOffsetLeft = mouseEvent.pageX - mouseEvent.offsetX - target.offsetLeft;\n    event.stopPropagation();\n    return true;\n  }\n\n  private leftResizeElementDragging(event: Event): void {\n    const mouseEvent = (event as MouseEvent);\n    this.resizeWindowLeft(mouseEvent.pageX - (this.resizerParentOffsetLeft || 0));\n    event.preventDefault();\n  }\n\n  private rightResizeElementDragging(event: Event): void {\n    const mouseEvent = (event as MouseEvent);\n    this.resizeWindowRight(mouseEvent.pageX - (this.resizerParentOffsetLeft || 0));\n    event.preventDefault();\n  }\n\n  private handleKeyboardResizing(event: Event, moveRightResizer?: boolean): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    const target = (event.target as HTMLElement);\n    let increment = false;\n    if (keyboardEvent.key === 'ArrowLeft' || keyboardEvent.key === 'ArrowRight') {\n      if (keyboardEvent.key === 'ArrowRight') {\n        increment = true;\n      }\n      const newPos = this.getNewResizerPosition(target.offsetLeft, increment, keyboardEvent.ctrlKey);\n      if (moveRightResizer) {\n        this.resizeWindowRight(newPos);\n      } else {\n        this.resizeWindowLeft(newPos);\n      }\n      event.consume(true);\n    }\n  }\n\n  private getNewResizerPosition(offset: number, increment?: boolean, ctrlPressed?: boolean): number {\n    let newPos;\n    // We shift by 10px if the ctrlKey is pressed and 2 otherwise.  1px shifts result in noOp due to rounding in updateCurtains\n    let pixelsToShift: number|(2 | 10) = ctrlPressed ? 10 : 2;\n    pixelsToShift = increment ? pixelsToShift : -Math.abs(pixelsToShift);\n    const offsetLeft = offset + ResizerOffset;\n    newPos = offsetLeft + pixelsToShift;\n    if (increment && newPos < OffsetFromWindowEnds) {\n      // When incrementing, snap to the window offset value (10px) if the new position is between 0px and 10px\n      newPos = OffsetFromWindowEnds;\n    } else if (!increment && newPos > this.parentElement.clientWidth - OffsetFromWindowEnds) {\n      // When decrementing, snap to the window offset value (10px) from the rightmost side if the new position is within 10px from the end.\n      newPos = this.parentElement.clientWidth - OffsetFromWindowEnds;\n    }\n\n    return newPos;\n  }\n\n  private startWindowSelectorDragging(event: Event): boolean {\n    if (!this.resizeEnabled) {\n      return false;\n    }\n    const mouseEvent = (event as MouseEvent);\n    this.offsetLeft = this.parentElement.getBoundingClientRect().left;\n    const position = mouseEvent.x - this.offsetLeft;\n    this.overviewWindowSelector = new WindowSelector(this.parentElement, position);\n    return true;\n  }\n\n  private windowSelectorDragging(event: Event): void {\n    this.#mouseOverGridOverview = true;\n    if (!this.overviewWindowSelector) {\n      return;\n    }\n    const mouseEvent = (event as MouseEvent);\n    this.overviewWindowSelector.updatePosition(mouseEvent.x - this.offsetLeft);\n    event.preventDefault();\n  }\n\n  private endWindowSelectorDragging(event: Event): void {\n    if (!this.overviewWindowSelector) {\n      return;\n    }\n    const mouseEvent = (event as MouseEvent);\n    const window = this.overviewWindowSelector.close(mouseEvent.x - this.offsetLeft);\n\n    // prevent selecting a window on clicking the minimap if breadcrumbs are enabled\n    if (this.#breadcrumbsEnabled && window.start === window.end) {\n      return;\n    }\n\n    delete this.overviewWindowSelector;\n    const clickThreshold = 3;\n    if (window.end - window.start < clickThreshold) {\n      if (this.clickHandler?.call(null, event)) {\n        return;\n      }\n      const middle = window.end;\n      window.start = Math.max(0, middle - MinSelectableSize / 2);\n      window.end = Math.min(this.parentElement.clientWidth, middle + MinSelectableSize / 2);\n    } else if (window.end - window.start < MinSelectableSize) {\n      if (this.parentElement.clientWidth - window.end > MinSelectableSize) {\n        window.end = window.start + MinSelectableSize;\n      } else {\n        window.start = window.end - MinSelectableSize;\n      }\n    }\n    this.setWindowPosition(window.start, window.end);\n  }\n\n  private startWindowDragging(event: Event): boolean {\n    const mouseEvent = (event as MouseEvent);\n    this.dragStartPointPixel = mouseEvent.pageX;\n    this.dragStartLeftRatio = this.windowLeftRatio;\n    this.dragStartRightRatio = this.windowRightRatio;\n    event.stopPropagation();\n    return true;\n  }\n\n  private windowDragging(event: Event): void {\n    this.#mouseOverGridOverview = true;\n    if (this.#breadcrumbsEnabled) {\n      this.breadcrumbButtonContainerElement.classList.toggle('is-breadcrumb-button-visible', true);\n    }\n    const mouseEvent = (event as MouseEvent);\n    mouseEvent.preventDefault();\n    let delta: number = (mouseEvent.pageX - this.dragStartPointPixel) / this.parentElement.clientWidth;\n    if (this.dragStartLeftRatio + delta < 0) {\n      delta = -this.dragStartLeftRatio;\n    }\n\n    if (this.dragStartRightRatio + delta > 1) {\n      delta = 1 - this.dragStartRightRatio;\n    }\n\n    this.setWindowRatio(this.dragStartLeftRatio + delta, this.dragStartRightRatio + delta);\n  }\n\n  private resizeWindowLeft(start: number): void {\n    this.#mouseOverGridOverview = true;\n    // Glue to edge.\n    if (start < OffsetFromWindowEnds) {\n      start = 0;\n    } else if (start > this.rightResizeElement.offsetLeft - 4) {\n      start = this.rightResizeElement.offsetLeft - 4;\n    }\n    this.setWindowPosition(start, null);\n  }\n\n  private resizeWindowRight(end: number): void {\n    this.#mouseOverGridOverview = true;\n    // Glue to edge.\n    if (end > this.parentElement.clientWidth - OffsetFromWindowEnds) {\n      end = this.parentElement.clientWidth;\n    } else if (end < this.leftResizeElement.offsetLeft + MinSelectableSize) {\n      end = this.leftResizeElement.offsetLeft + MinSelectableSize;\n    }\n    this.setWindowPosition(null, end);\n  }\n\n  private resizeWindowMaximum(): void {\n    this.setWindowPosition(0, this.parentElement.clientWidth);\n  }\n\n  /**\n   * This function will return the raw value of the give slider.\n   * Since the OverviewGrid is used in Performance panel or Memory panel, the raw value can be in milliseconds or bytes.\n   * @param leftSlider if this slider is the left one\n   * @returns the value in milliseconds or bytes\n   */\n  private getRawSliderValue(leftSlider?: boolean): number {\n    if (!this.calculator) {\n      throw new Error('No calculator to calculate boundaries');\n    }\n\n    const minimumValue = this.calculator.minimumBoundary();\n    const valueSpan = this.calculator.maximumBoundary() - minimumValue;\n    if (leftSlider) {\n      return minimumValue + valueSpan * this.windowLeftRatio;\n    }\n    return minimumValue + valueSpan * this.windowRightRatio;\n  }\n\n  private updateResizeElementAriaValue(leftPercentValue: number, rightPercentValue: number): void {\n    const roundedLeftValue = leftPercentValue.toFixed(2);\n    const roundedRightValue = rightPercentValue.toFixed(2);\n    UI.ARIAUtils.setAriaValueNow(this.leftResizeElement, roundedLeftValue);\n    UI.ARIAUtils.setAriaValueNow(this.rightResizeElement, roundedRightValue);\n\n    // Left and right sliders cannot be within 0.5% of each other (Range of AriaValueMin/Max/Now is from 0-100).\n    const leftResizeCeiling = Number(roundedRightValue) - 0.5;\n    const rightResizeFloor = Number(roundedLeftValue) + 0.5;\n    UI.ARIAUtils.setAriaValueMinMax(this.leftResizeElement, '0', leftResizeCeiling.toString());\n    UI.ARIAUtils.setAriaValueMinMax(this.rightResizeElement, rightResizeFloor.toString(), '100');\n  }\n\n  private updateResizeElementPositionLabels(): void {\n    if (!this.calculator) {\n      return;\n    }\n    const startValue = this.calculator.formatValue(this.getRawSliderValue(/* leftSlider */ true));\n    const endValue = this.calculator.formatValue(this.getRawSliderValue(/* leftSlider */ false));\n    UI.ARIAUtils.setAriaValueText(this.leftResizeElement, String(startValue));\n    UI.ARIAUtils.setAriaValueText(this.rightResizeElement, String(endValue));\n  }\n\n  private updateResizeElementPercentageLabels(leftValue: string, rightValue: string): void {\n    UI.ARIAUtils.setAriaValueText(this.leftResizeElement, leftValue);\n    UI.ARIAUtils.setAriaValueText(this.rightResizeElement, rightValue);\n  }\n\n  /**\n   * This function will return the raw value of the slider window.\n   * Since the OverviewGrid is used in Performance panel or Memory panel, the raw value can be in milliseconds or bytes.\n   *\n   * @returns the pair of start/end value of the slider window in milliseconds or bytes\n   */\n  calculateWindowValue(): {\n    rawStartValue: number,\n    rawEndValue: number,\n  } {\n    return {\n      rawStartValue: this.getRawSliderValue(/* leftSlider */ true),\n      rawEndValue: this.getRawSliderValue(/* leftSlider */ false),\n    };\n  }\n\n  setWindowRatio(windowLeftRatio: number, windowRightRatio: number): void {\n    this.windowLeftRatio = windowLeftRatio;\n    this.windowRightRatio = windowRightRatio;\n    this.updateCurtains();\n    if (this.calculator) {\n      this.dispatchEventToListeners(Events.WINDOW_CHANGED_WITH_POSITION, this.calculateWindowValue());\n    }\n    this.dispatchEventToListeners(Events.WINDOW_CHANGED);\n    this.#changeBreadcrumbButtonVisibility(windowLeftRatio, windowRightRatio);\n  }\n\n  // \"Create breadcrumb\" button is only visible when the window is set to\n  // something other than the full range and mouse is hovering over the MiniMap\n  #changeBreadcrumbButtonVisibility(windowLeftRatio: number, windowRightRatio: number): void {\n    if (!this.#breadcrumbsEnabled) {\n      return;\n    }\n    if ((windowRightRatio >= 1 && windowLeftRatio <= 0) || !this.#mouseOverGridOverview) {\n      this.breadcrumbButtonContainerElement.classList.toggle('is-breadcrumb-button-visible', false);\n    } else {\n      this.breadcrumbButtonContainerElement.classList.toggle('is-breadcrumb-button-visible', true);\n    }\n  }\n\n  #createBreadcrumb(): void {\n    this.dispatchEventToListeners(Events.BREADCRUMB_ADDED, this.calculateWindowValue());\n  }\n\n  private updateCurtains(): void {\n    const windowLeftRatio = this.windowLeftRatio;\n    const windowRightRatio = this.windowRightRatio;\n    let leftRatio = windowLeftRatio;\n    let rightRatio = windowRightRatio;\n    const widthRatio = rightRatio - leftRatio;\n\n    // OverviewGrids that are instantiated before the parentElement is shown will have a parent element client width of 0 which throws off the 'factor' calculation\n    if (this.parentElement.clientWidth !== 0) {\n      // We allow actual time window to be arbitrarily small but don't want the UI window to be too small.\n      const widthInPixels = widthRatio * this.parentElement.clientWidth;\n      const minWidthInPixels = MinSelectableSize / 2;\n      if (widthInPixels < minWidthInPixels) {\n        const factor = minWidthInPixels / widthInPixels;\n        leftRatio = ((windowRightRatio + windowLeftRatio) - widthRatio * factor) / 2;\n        rightRatio = ((windowRightRatio + windowLeftRatio) + widthRatio * factor) / 2;\n      }\n    }\n    const leftResizerPercLeftOffset = (100 * leftRatio);\n    const rightResizerPercLeftOffset = (100 * rightRatio);\n    const rightResizerPercRightOffset = (100 - (100 * rightRatio));\n\n    const leftResizerPercLeftOffsetString = leftResizerPercLeftOffset + '%';\n    const rightResizerPercLeftOffsetString = rightResizerPercLeftOffset + '%';\n\n    this.leftResizeElement.style.left = leftResizerPercLeftOffsetString;\n    this.rightResizeElement.style.left = rightResizerPercLeftOffsetString;\n\n    this.leftCurtainElement.style.width = leftResizerPercLeftOffsetString;\n    this.rightCurtainElement.style.width = rightResizerPercRightOffset + '%';\n\n    this.breadcrumbButtonContainerElement.style.marginLeft =\n        (leftResizerPercLeftOffset > 0) ? leftResizerPercLeftOffset + '%' : '0%';\n    this.breadcrumbButtonContainerElement.style.marginRight =\n        (rightResizerPercRightOffset > 0) ? rightResizerPercRightOffset + '%' : '0%';\n\n    if (this.curtainsRange) {\n      this.curtainsRange.textContent = this.getWindowRange().toFixed(0) + ' ms';\n    }\n\n    this.updateResizeElementAriaValue(leftResizerPercLeftOffset, rightResizerPercLeftOffset);\n    if (this.calculator) {\n      this.updateResizeElementPositionLabels();\n    } else {\n      this.updateResizeElementPercentageLabels(leftResizerPercLeftOffsetString, rightResizerPercLeftOffsetString);\n    }\n\n    this.toggleBreadcrumbZoomButtonDisplay();\n  }\n\n  private toggleBreadcrumbZoomButtonDisplay(): void {\n    if (this.breadcrumbZoomIcon) {\n      // disable button that creates breadcrumbs and hide the zoom icon\n      // when the selected window is smaller than 4.5 ms\n      // 4.5 is rounded to 5 in the UI\n      if (this.getWindowRange() < 4.5) {\n        this.breadcrumbZoomIcon.style.display = 'none';\n        this.breadcrumbButtonContainerElement.style.pointerEvents = 'none';\n      } else {\n        this.breadcrumbZoomIcon.style.display = 'flex';\n        this.breadcrumbButtonContainerElement.style.pointerEvents = 'auto';\n      }\n    }\n  }\n\n  private getWindowRange(): number {\n    if (!this.calculator) {\n      throw new Error('No calculator to calculate window range');\n    }\n\n    const leftRatio = this.windowLeftRatio > 0 ? this.windowLeftRatio : 0;\n    const rightRatio = this.windowRightRatio < 1 ? this.windowRightRatio : 1;\n    return (this.calculator.boundarySpan() * (rightRatio - leftRatio));\n  }\n\n  private setWindowPosition(startPixel: number|null, endPixel: number|null): void {\n    const clientWidth = this.parentElement.clientWidth;\n    const windowLeft = typeof startPixel === 'number' ? startPixel / clientWidth : this.windowLeftRatio;\n    const windowRight = typeof endPixel === 'number' ? endPixel / clientWidth : this.windowRightRatio;\n    this.setWindowRatio(windowLeft || 0, windowRight || 0);\n  }\n\n  private onMouseWheel(event: Event): void {\n    const wheelEvent = (event as WheelEvent);\n    if (!this.resizeEnabled) {\n      return;\n    }\n    if (wheelEvent.deltaY) {\n      const zoomFactor = 1.1;\n      const wheelZoomSpeed = 1 / 53;\n\n      const reference = wheelEvent.offsetX / this.parentElement.clientWidth;\n      this.zoom(Math.pow(zoomFactor, wheelEvent.deltaY * wheelZoomSpeed), reference);\n    }\n    if (wheelEvent.deltaX) {\n      let offset = Math.round(wheelEvent.deltaX * WindowScrollSpeedFactor);\n      const windowLeftPixel = this.leftResizeElement.offsetLeft + ResizerOffset;\n      const windowRightPixel = this.rightResizeElement.offsetLeft + ResizerOffset;\n\n      if (windowLeftPixel - offset < 0) {\n        offset = windowLeftPixel;\n      }\n\n      if (windowRightPixel - offset > this.parentElement.clientWidth) {\n        offset = windowRightPixel - this.parentElement.clientWidth;\n      }\n\n      this.setWindowPosition(windowLeftPixel - offset, windowRightPixel - offset);\n\n      wheelEvent.preventDefault();\n    }\n  }\n\n  zoom(factor: number, reference: number): void {\n    let leftRatio: number = this.windowLeftRatio || 0;\n    let rightRatio: number = this.windowRightRatio || 0;\n    const windowSizeRatio = rightRatio - leftRatio;\n    let newWindowSizeRatio: 1|number = factor * windowSizeRatio;\n    if (newWindowSizeRatio > 1) {\n      newWindowSizeRatio = 1;\n      factor = newWindowSizeRatio / windowSizeRatio;\n    }\n    leftRatio = reference + (leftRatio - reference) * factor;\n    leftRatio = Platform.NumberUtilities.clamp(leftRatio, 0, 1 - newWindowSizeRatio);\n\n    rightRatio = reference + (rightRatio - reference) * factor;\n    rightRatio = Platform.NumberUtilities.clamp(rightRatio, newWindowSizeRatio, 1);\n    this.setWindowRatio(leftRatio, rightRatio);\n  }\n}\n\nexport const enum Events {\n  WINDOW_CHANGED = 'WindowChanged',\n  WINDOW_CHANGED_WITH_POSITION = 'WindowChangedWithPosition',\n  BREADCRUMB_ADDED = 'BreadcrumbAdded',\n}\n\nexport interface WindowChangedWithPositionEvent {\n  rawStartValue: number;\n  rawEndValue: number;\n}\n\nexport interface EventTypes {\n  [Events.WINDOW_CHANGED]: void;\n  [Events.BREADCRUMB_ADDED]: WindowChangedWithPositionEvent;\n  [Events.WINDOW_CHANGED_WITH_POSITION]: WindowChangedWithPositionEvent;\n}\n\nexport class WindowSelector {\n  private startPosition: number;\n  private width: number;\n  private windowSelector: HTMLDivElement;\n\n  constructor(parent: Element, position: number) {\n    this.startPosition = position;\n    this.width = (parent as HTMLElement).offsetWidth;\n    this.windowSelector = document.createElement('div');\n    this.windowSelector.className = 'overview-grid-window-selector';\n    this.windowSelector.style.left = this.startPosition + 'px';\n    this.windowSelector.style.right = this.width - this.startPosition + 'px';\n    parent.appendChild(this.windowSelector);\n  }\n\n  close(position: number): {\n    start: number,\n    end: number,\n  } {\n    position = Math.max(0, Math.min(position, this.width));\n    this.windowSelector.remove();\n    return this.startPosition < position ? {start: this.startPosition, end: position} :\n                                           {start: position, end: this.startPosition};\n  }\n\n  updatePosition(position: number): void {\n    position = Math.max(0, Math.min(position, this.width));\n    if (position < this.startPosition) {\n      this.windowSelector.style.left = position + 'px';\n      this.windowSelector.style.right = this.width - this.startPosition + 'px';\n    } else {\n      this.windowSelector.style.left = this.startPosition + 'px';\n      this.windowSelector.style.right = this.width - position + 'px';\n    }\n  }\n}\n"]}