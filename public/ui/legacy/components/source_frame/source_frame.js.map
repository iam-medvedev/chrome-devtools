{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/source_frame/BinaryResourceViewFactory.ts", "../../../../../../../../front_end/ui/legacy/components/source_frame/ResourceSourceFrame.ts", "../../../../entrypoints/formatter_worker/FormatterActions.prebundle.ts", "resourceSourceFrame.css.js", "../../../../../../../../front_end/ui/legacy/components/source_frame/SourceFrame.ts", "../../../../../../../../front_end/ui/legacy/components/source_frame/StreamingContentHexView.ts", "../../../../../../../../front_end/ui/legacy/components/source_frame/FontView.ts", "fontView.css.js", "../../../../../../../../front_end/ui/legacy/components/source_frame/ImageView.ts", "imageView.css.js", "../../../../../../../../front_end/ui/legacy/components/source_frame/JSONView.ts", "jsonView.css.js", "../../../../../../../../front_end/ui/legacy/components/source_frame/PreviewFactory.ts", "../../../../../../../../front_end/ui/legacy/components/source_frame/XMLView.ts", "xmlTree.css.js", "xmlView.css.js"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../../../core/common/common.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\n\nimport {ResourceSourceFrame} from './ResourceSourceFrame.js';\nimport {StreamingContentHexView} from './StreamingContentHexView.js';\n\nexport class BinaryResourceViewFactory {\n  private streamingContent: TextUtils.StreamingContentData.StreamingContentData;\n  private readonly contentUrl: Platform.DevToolsPath.UrlString;\n  private readonly resourceType: Common.ResourceType.ResourceType;\n\n  constructor(\n      content: TextUtils.StreamingContentData.StreamingContentData, contentUrl: Platform.DevToolsPath.UrlString,\n      resourceType: Common.ResourceType.ResourceType) {\n    this.streamingContent = content;\n    this.contentUrl = contentUrl;\n    this.resourceType = resourceType;\n  }\n\n  hex(): string {\n    const binaryString = window.atob(this.base64());\n    const array = Uint8Array.from(binaryString, m => m.codePointAt(0) as number);\n    return BinaryResourceViewFactory.#uint8ArrayToHexString(array);\n  }\n\n  base64(): string {\n    return this.streamingContent.content().base64;\n  }\n\n  utf8(): string {\n    return new TextUtils.ContentData.ContentData(this.base64(), /* isBase64 */ true, 'text/plain', 'utf-8').text;\n  }\n\n  createBase64View(): ResourceSourceFrame {\n    const resourceFrame = new ResourceSourceFrame(\n        TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n            this.contentUrl, this.resourceType, this.streamingContent.content().base64),\n        this.resourceType.canonicalMimeType(), {lineNumbers: false, lineWrapping: true});\n    this.streamingContent.addEventListener(TextUtils.StreamingContentData.Events.CHUNK_ADDED, () => {\n      void resourceFrame.setContent(this.base64());\n    });\n    return resourceFrame;\n  }\n\n  createHexView(): StreamingContentHexView {\n    return new StreamingContentHexView(this.streamingContent);\n  }\n\n  createUtf8View(): ResourceSourceFrame {\n    const resourceFrame = new ResourceSourceFrame(\n        TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n            this.contentUrl, this.resourceType, this.utf8()),\n        this.resourceType.canonicalMimeType(), {lineNumbers: true, lineWrapping: true});\n    this.streamingContent.addEventListener(TextUtils.StreamingContentData.Events.CHUNK_ADDED, () => {\n      void resourceFrame.setContent(this.utf8());\n    });\n    return resourceFrame;\n  }\n\n  static #uint8ArrayToHexString(uint8Array: Uint8Array): string {\n    let output = '';\n    for (let i = 0; i < uint8Array.length; i++) {\n      output += BinaryResourceViewFactory.#numberToHex(uint8Array[i], 2);\n    }\n    return output;\n  }\n\n  static #numberToHex(number: number, padding: number): string {\n    let hex = number.toString(16);\n    while (hex.length < padding) {\n      hex = '0' + hex;\n    }\n    return hex;\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) IBM Corp. 2009  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport '../../legacy.js';\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as FormatterActions from '../../../../entrypoints/formatter_worker/FormatterActions.js';  // eslint-disable-line rulesdir/es-modules-import\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\n\nimport resourceSourceFrameStyles from './resourceSourceFrame.css.js';\nimport {type RevealPosition, SourceFrameImpl, type SourceFrameOptions} from './SourceFrame.js';\n\nconst UIStrings = {\n  /**\n   * @description Text to find an item\n   */\n  find: 'Find',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/ResourceSourceFrame.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ResourceSourceFrame extends SourceFrameImpl {\n  readonly #resource: TextUtils.ContentProvider.ContentProvider;\n  readonly #givenContentType: string;\n\n  constructor(\n      resource: TextUtils.ContentProvider.ContentProvider, givenContentType: string, options?: SourceFrameOptions) {\n    const isStreamingProvider = TextUtils.ContentProvider.isStreamingContentProvider(resource);\n\n    const lazyContent = isStreamingProvider ?\n        () => resource.requestStreamingContent().then(TextUtils.StreamingContentData.asContentDataOrError) :\n        () => resource.requestContentData();\n    super(lazyContent, options);\n\n    this.#givenContentType = givenContentType;\n    this.#resource = resource;\n    if (isStreamingProvider) {\n      void resource.requestStreamingContent().then(streamingContent => {\n        if (!TextUtils.StreamingContentData.isError(streamingContent)) {\n          streamingContent.addEventListener(TextUtils.StreamingContentData.Events.CHUNK_ADDED, () => {\n            void this.setContentDataOrError(Promise.resolve(streamingContent.content()));\n          });\n        }\n      });\n    }\n  }\n\n  static createSearchableView(resource: TextUtils.ContentProvider.ContentProvider, contentType: string):\n      UI.Widget.Widget {\n    return new SearchableContainer(resource, contentType);\n  }\n\n  protected override getContentType(): string {\n    return this.#givenContentType;\n  }\n\n  get resource(): TextUtils.ContentProvider.ContentProvider {\n    return this.#resource;\n  }\n\n  protected override populateTextAreaContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu, lineNumber: number, columnNumber: number): void {\n    super.populateTextAreaContextMenu(contextMenu, lineNumber, columnNumber);\n    contextMenu.appendApplicableItems(this.#resource);\n  }\n}\n\nexport class SearchableContainer extends UI.Widget.VBox {\n  private readonly sourceFrame: ResourceSourceFrame;\n\n  constructor(resource: TextUtils.ContentProvider.ContentProvider, contentType: string, element?: HTMLElement) {\n    super(element, {useShadowDom: true});\n    this.registerRequiredCSS(resourceSourceFrameStyles);\n    const simpleContentType = Common.ResourceType.ResourceType.simplifyContentType(contentType);\n    const sourceFrame = new ResourceSourceFrame(resource, simpleContentType);\n    this.sourceFrame = sourceFrame;\n    const canPrettyPrint = FormatterActions.FORMATTABLE_MEDIA_TYPES.includes(simpleContentType);\n    sourceFrame.setCanPrettyPrint(canPrettyPrint, true /* autoPrettyPrint */);\n    const searchableView = new UI.SearchableView.SearchableView(sourceFrame, sourceFrame);\n    searchableView.element.classList.add('searchable-view');\n    searchableView.setPlaceholder(i18nString(UIStrings.find));\n    sourceFrame.show(searchableView.element);\n    sourceFrame.setSearchableView(searchableView);\n    searchableView.show(this.contentElement);\n\n    const toolbar = this.contentElement.createChild('devtools-toolbar', 'toolbar');\n    void sourceFrame.toolbarItems().then(items => {\n      items.map(item => toolbar.appendToolbarItem(item));\n    });\n  }\n\n  async revealPosition(position: RevealPosition): Promise<void> {\n    this.sourceFrame.revealPosition(position, true);\n  }\n}\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport const enum FormatterActions {\n  FORMAT = 'format',\n  PARSE_CSS = 'parseCSS',\n  JAVASCRIPT_SUBSTITUTE = 'javaScriptSubstitute',\n  JAVASCRIPT_SCOPE_TREE = 'javaScriptScopeTree',\n}\n\nexport const enum FormattableMediaTypes {\n  APPLICATION_JAVASCRIPT = 'application/javascript',\n  APPLICATION_JSON = 'application/json',\n  APPLICATION_MANIFEST_JSON = 'application/manifest+json',\n  TEXT_CSS = 'text/css',\n  TEXT_HTML = 'text/html',\n  TEXT_JAVASCRIPT = 'text/javascript',\n}\n\nexport const FORMATTABLE_MEDIA_TYPES: string[] = [\n  FormattableMediaTypes.APPLICATION_JAVASCRIPT,\n  FormattableMediaTypes.APPLICATION_JSON,\n  FormattableMediaTypes.APPLICATION_MANIFEST_JSON,\n  FormattableMediaTypes.TEXT_CSS,\n  FormattableMediaTypes.TEXT_HTML,\n  FormattableMediaTypes.TEXT_JAVASCRIPT,\n];\n\nexport interface FormatMapping {\n  original: number[];\n  formatted: number[];\n}\n\nexport interface FormatResult {\n  content: string;\n  mapping: FormatMapping;\n}\n\nexport const enum DefinitionKind {\n  NONE = 0,\n  LET = 1,\n  VAR = 2,\n  FIXED = 3,\n}\n\nexport interface ScopeTreeNode {\n  variables: Array<{name: string, kind: DefinitionKind, offsets: number[]}>;\n  start: number;\n  end: number;\n  children: ScopeTreeNode[];\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2017 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.searchable-view {\n  flex: 1;\n}\n\ndevtools-toolbar {\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n}\n\n/*# sourceURL=${import.meta.resolve('./resourceSourceFrame.css')} */`;", "// Copyright 2011 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Root from '../../../../core/root/root.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Formatter from '../../../../models/formatter/formatter.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as PanelCommon from '../../../../panels/common/common.js';\nimport * as CodeMirror from '../../../../third_party/codemirror.next/codemirror.next.js';\nimport * as CodeHighlighter from '../../../components/code_highlighter/code_highlighter.js';\nimport * as TextEditor from '../../../components/text_editor/text_editor.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\n\nconst UIStrings = {\n  /**\n   * @description Text for the source of something\n   */\n  source: 'Source',\n  /**\n   * @description Text to pretty print a file\n   */\n  prettyPrint: 'Pretty print',\n  /**\n   * @description Text when something is loading\n   */\n  loading: 'Loading…',\n  /**\n   * @description Shown at the bottom of the Sources panel when the user has made multiple\n   * simultaneous text selections in the text editor.\n   * @example {2} PH1\n   */\n  dSelectionRegions: '{PH1} selection regions',\n  /**\n   * @description Position indicator in Source Frame of the Sources panel. The placeholder is a\n   * hexadecimal number value, which is why it is prefixed with '0x'.\n   * @example {abc} PH1\n   */\n  bytecodePositionXs: 'Bytecode position `0x`{PH1}',\n  /**\n   * @description Text in Source Frame of the Sources panel\n   * @example {2} PH1\n   * @example {2} PH2\n   */\n  lineSColumnS: 'Line {PH1}, Column {PH2}',\n  /**\n   * @description Text in Source Frame of the Sources panel\n   * @example {2} PH1\n   */\n  dCharactersSelected: '{PH1} characters selected',\n  /**\n   * @description Text in Source Frame of the Sources panel\n   * @example {2} PH1\n   * @example {2} PH2\n   */\n  dLinesDCharactersSelected: '{PH1} lines, {PH2} characters selected',\n  /**\n   * @description Headline of warning shown to users when pasting text/code into DevTools.\n   */\n  doYouTrustThisCode: 'Do you trust this code?',\n  /**\n   * @description Warning shown to users when pasting text/code into DevTools.\n   * @example {allow pasting} PH1\n   */\n  doNotPaste:\n      'Don\\'t paste code you do not understand or have not reviewed yourself into DevTools. This could allow attackers to steal your identity or take control of your computer. Please type \\'\\'{PH1}\\'\\' below to allow pasting.',\n  /**\n   * @description Text a user needs to type in order to confirm that they are aware of the danger of pasting code into the DevTools console.\n   */\n  allowPasting: 'allow pasting',\n  /**\n   * @description Input box placeholder which instructs the user to type 'allow pasting' into the input box.\n   * @example {allow pasting} PH1\n   */\n  typeAllowPasting: 'Type \\'\\'{PH1}\\'\\'',\n  /**\n   * @description Error message shown when the user tries to open a file that contains non-readable data. \"Editor\" refers to\n   * a text editor.\n   */\n  binaryContentError:\n      'Editor can\\'t show binary data. Use the \"Response\" tab in the \"Network\" panel to inspect this resource.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/SourceFrame.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface SourceFrameOptions {\n  // Whether to show line numbers. Defaults to true.\n  lineNumbers?: boolean;\n  // Whether to wrap lines. Defaults to false.\n  lineWrapping?: boolean;\n}\n\nexport const enum Events {\n  EDITOR_UPDATE = 'EditorUpdate',\n  EDITOR_SCROLL = 'EditorScroll',\n}\n\nexport interface EventTypes {\n  [Events.EDITOR_UPDATE]: CodeMirror.ViewUpdate;\n  [Events.EDITOR_SCROLL]: void;\n}\n\ntype FormatFn = (lineNo: number, state: CodeMirror.EditorState) => string;\nexport const LINE_NUMBER_FORMATTER = CodeMirror.Facet.define<FormatFn, FormatFn>({\n  combine(value): FormatFn {\n    if (value.length === 0) {\n      return (lineNo: number) => lineNo.toString();\n    }\n    return value[0];\n  },\n});\n\nexport class SourceFrameImpl extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.View.SimpleView>(\n    UI.View.SimpleView) implements UI.SearchableView.Searchable, UI.SearchableView.Replaceable, Transformer {\n  private readonly lazyContent: () => Promise<TextUtils.ContentData.ContentDataOrError>;\n  private prettyInternal: boolean;\n  private rawContent: string|CodeMirror.Text|null;\n  private formattedMap: Formatter.ScriptFormatter.FormatterSourceMapping|null;\n  private readonly prettyToggle: UI.Toolbar.ToolbarToggle;\n  private shouldAutoPrettyPrint: boolean;\n  private readonly progressToolbarItem: UI.Toolbar.ToolbarItem;\n  private textEditorInternal: TextEditor.TextEditor.TextEditor;\n  // The 'clean' document, before editing\n  private baseDoc: CodeMirror.Text;\n  private prettyBaseDoc: CodeMirror.Text|null = null;\n  private displayedSelection: CodeMirror.EditorSelection|null = null;\n  private searchConfig: UI.SearchableView.SearchConfig|null;\n  private delayedFindSearchMatches: (() => void)|null;\n  private currentSearchResultIndex: number;\n  private searchResults: SearchMatch[];\n  private searchRegex: UI.SearchableView.SearchRegexResult|null;\n  private loadError: boolean;\n  private readonly sourcePosition: UI.Toolbar.ToolbarText;\n  private searchableView: UI.SearchableView.SearchableView|null;\n  private editable: boolean;\n  private positionToReveal: {\n    to: {lineNumber: number, columnNumber: number},\n    from?: {lineNumber: number, columnNumber: number},\n    shouldHighlight?: boolean,\n  }|null;\n  private lineToScrollTo: number|null;\n  private selectionToSet: TextUtils.TextRange.TextRange|null;\n  private loadedInternal: boolean;\n  private contentRequested: boolean;\n  private wasmDisassemblyInternal: TextUtils.WasmDisassembly.WasmDisassembly|null;\n  contentSet: boolean;\n  private selfXssWarningDisabledSetting: Common.Settings.Setting<boolean>;\n\n  constructor(\n      lazyContent: () => Promise<TextUtils.ContentData.ContentDataOrError>,\n      private readonly options: SourceFrameOptions = {}) {\n    super({\n      title: i18nString(UIStrings.source),\n      viewId: 'source',\n    });\n\n    this.lazyContent = lazyContent;\n\n    this.prettyInternal = false;\n    this.rawContent = null;\n    this.formattedMap = null;\n    this.prettyToggle =\n        new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.prettyPrint), 'brackets', undefined, 'pretty-print');\n    this.prettyToggle.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      void this.setPretty(this.prettyToggle.isToggled());\n    });\n    this.shouldAutoPrettyPrint = false;\n    this.prettyToggle.setVisible(false);\n\n    this.progressToolbarItem = new UI.Toolbar.ToolbarItem(document.createElement('div'));\n\n    this.textEditorInternal = new TextEditor.TextEditor.TextEditor(this.placeholderEditorState(''));\n    this.textEditorInternal.style.flexGrow = '1';\n\n    this.element.appendChild(this.textEditorInternal);\n    this.element.addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.defaultPrevented) {\n        event.stopPropagation();\n      }\n    });\n\n    this.baseDoc = this.textEditorInternal.state.doc;\n\n    this.searchConfig = null;\n    this.delayedFindSearchMatches = null;\n    this.currentSearchResultIndex = -1;\n    this.searchResults = [];\n    this.searchRegex = null;\n    this.loadError = false;\n\n    this.sourcePosition = new UI.Toolbar.ToolbarText();\n\n    this.searchableView = null;\n    this.editable = false;\n\n    this.positionToReveal = null;\n    this.lineToScrollTo = null;\n    this.selectionToSet = null;\n    this.loadedInternal = false;\n    this.contentRequested = false;\n\n    this.wasmDisassemblyInternal = null;\n    this.contentSet = false;\n\n    this.selfXssWarningDisabledSetting = Common.Settings.Settings.instance().createSetting(\n        'disable-self-xss-warning', false, Common.Settings.SettingStorageType.SYNCED);\n    Common.Settings.Settings.instance()\n        .moduleSetting('text-editor-indent')\n        .addChangeListener(this.#textEditorIndentChanged, this);\n  }\n\n  override disposeView(): void {\n    Common.Settings.Settings.instance()\n        .moduleSetting('text-editor-indent')\n        .removeChangeListener(this.#textEditorIndentChanged, this);\n  }\n\n  async #textEditorIndentChanged(): Promise<void> {\n    if (this.prettyInternal) {\n      // Indentation settings changed, which are used for pretty printing as well,\n      // so if the editor is currently pretty printed, just toggle the state here\n      // to apply the new indentation settings.\n      await this.setPretty(false);\n      await this.setPretty(true);\n    }\n  }\n\n  private placeholderEditorState(content: string): CodeMirror.EditorState {\n    return CodeMirror.EditorState.create({\n      doc: content,\n      extensions: [\n        CodeMirror.EditorState.readOnly.of(true),\n        this.options.lineNumbers !== false ? CodeMirror.lineNumbers() : [],\n        TextEditor.Config.theme(),\n      ],\n    });\n  }\n\n  protected editorConfiguration(doc: string|CodeMirror.Text): CodeMirror.Extension {\n    return [\n      CodeMirror.EditorView.updateListener.of(update => this.dispatchEventToListeners(Events.EDITOR_UPDATE, update)),\n      TextEditor.Config.baseConfiguration(doc),\n      TextEditor.Config.closeBrackets.instance(),\n      TextEditor.Config.autocompletion.instance(),\n      TextEditor.Config.showWhitespace.instance(),\n      TextEditor.Config.allowScrollPastEof.instance(),\n      CodeMirror.Prec.lowest(TextEditor.Config.codeFolding.instance()),\n      TextEditor.Config.autoDetectIndent.instance(),\n      sourceFrameTheme,\n      CodeMirror.EditorView.domEventHandlers({\n        focus: () => this.onFocus(),\n        blur: () => this.onBlur(),\n        paste: () => this.onPaste(),\n        scroll: () => this.dispatchEventToListeners(Events.EDITOR_SCROLL),\n        contextmenu: event => this.onContextMenu(event),\n      }),\n      CodeMirror.lineNumbers({\n        domEventHandlers:\n            {contextmenu: (_view, block, event) => this.onLineGutterContextMenu(block.from, event as MouseEvent)},\n      }),\n      CodeMirror.EditorView.updateListener.of(\n          (update):\n              void => {\n                if (update.selectionSet || update.docChanged) {\n                  this.updateSourcePosition();\n                }\n                if (update.docChanged) {\n                  this.onTextChanged();\n                }\n              }),\n      activeSearchState,\n      CodeMirror.Prec.lowest(searchHighlighter),\n      config.language.of([]),\n      this.wasmDisassemblyInternal ? markNonBreakableLines(this.wasmDisassemblyInternal) : nonBreakableLines,\n      this.options.lineWrapping ? CodeMirror.EditorView.lineWrapping : [],\n      this.options.lineNumbers !== false ? CodeMirror.lineNumbers() : [],\n      CodeMirror.indentationMarkers({\n        colors: {\n          light: 'var(--sys-color-divider)',\n          activeLight: 'var(--sys-color-divider-prominent)',\n          dark: 'var(--sys-color-divider)',\n          activeDark: 'var(--sys-color-divider-prominent)',\n        },\n      }),\n      sourceFrameInfobarState,\n    ];\n  }\n\n  protected onBlur(): void {\n  }\n\n  protected onFocus(): void {\n  }\n\n  protected onPaste(): boolean {\n    if (Root.Runtime.Runtime.queryParam('isChromeForTesting') ||\n        Root.Runtime.Runtime.queryParam('disableSelfXssWarnings') || this.selfXssWarningDisabledSetting.get()) {\n      return false;\n    }\n    void this.showSelfXssWarning();\n    return true;\n  }\n\n  async showSelfXssWarning(): Promise<void> {\n    // Hack to circumvent Chrome issue which would show a tooltip for the newly opened\n    // dialog if pasting via keyboard.\n    await new Promise(resolve => setTimeout(resolve, 0));\n\n    const allowPasting = await PanelCommon.TypeToAllowDialog.show({\n      jslogContext: {\n        dialog: 'self-xss-warning',\n        input: 'allow-pasting',\n      },\n      header: i18nString(UIStrings.doYouTrustThisCode),\n      message: i18nString(UIStrings.doNotPaste, {PH1: i18nString(UIStrings.allowPasting)}),\n      typePhrase: i18nString(UIStrings.allowPasting),\n      inputPlaceholder: i18nString(UIStrings.typeAllowPasting, {PH1: i18nString(UIStrings.allowPasting)})\n    });\n    if (allowPasting) {\n      this.selfXssWarningDisabledSetting.set(true);\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelfXssAllowPastingInDialog);\n    }\n  }\n\n  get wasmDisassembly(): TextUtils.WasmDisassembly.WasmDisassembly|null {\n    return this.wasmDisassemblyInternal;\n  }\n\n  editorLocationToUILocation(lineNumber: number, columnNumber: number): {\n    lineNumber: number,\n    columnNumber: number,\n  };\n  editorLocationToUILocation(lineNumber: number): {\n    lineNumber: number,\n    columnNumber: number|undefined,\n  };\n  editorLocationToUILocation(lineNumber: number, columnNumber?: number): {\n    lineNumber: number,\n    columnNumber?: number|undefined,\n  } {\n    if (this.wasmDisassemblyInternal) {\n      columnNumber = this.wasmDisassemblyInternal.lineNumberToBytecodeOffset(lineNumber);\n      lineNumber = 0;\n    } else if (this.prettyInternal) {\n      [lineNumber, columnNumber] = this.prettyToRawLocation(lineNumber, columnNumber);\n    }\n    return {lineNumber, columnNumber};\n  }\n\n  uiLocationToEditorLocation(lineNumber: number, columnNumber: number|undefined = 0): {\n    lineNumber: number,\n    columnNumber: number,\n  } {\n    if (this.wasmDisassemblyInternal) {\n      lineNumber = this.wasmDisassemblyInternal.bytecodeOffsetToLineNumber(columnNumber);\n      columnNumber = 0;\n    } else if (this.prettyInternal) {\n      [lineNumber, columnNumber] = this.rawToPrettyLocation(lineNumber, columnNumber);\n    }\n    return {lineNumber, columnNumber};\n  }\n\n  setCanPrettyPrint(canPrettyPrint: boolean, autoPrettyPrint?: boolean): void {\n    this.shouldAutoPrettyPrint = autoPrettyPrint === true &&\n        Common.Settings.Settings.instance().moduleSetting('auto-pretty-print-minified').get();\n    this.prettyToggle.setVisible(canPrettyPrint);\n  }\n\n  setEditable(editable: boolean): void {\n    this.editable = editable;\n    if (this.loaded && editable !== !this.textEditor.state.readOnly) {\n      this.textEditor.dispatch({effects: config.editable.reconfigure(CodeMirror.EditorState.readOnly.of(!editable))});\n    }\n  }\n\n  private async setPretty(value: boolean): Promise<void> {\n    this.prettyInternal = value;\n    this.prettyToggle.setEnabled(false);\n\n    const wasLoaded = this.loaded;\n    const {textEditor} = this;\n    const selection = textEditor.state.selection.main;\n    const startPos = textEditor.toLineColumn(selection.from), endPos = textEditor.toLineColumn(selection.to);\n    let newSelection;\n    if (this.prettyInternal) {\n      const content =\n          this.rawContent instanceof CodeMirror.Text ? this.rawContent.sliceString(0) : this.rawContent || '';\n      const formatInfo = await Formatter.ScriptFormatter.formatScriptContent(this.contentType, content);\n      this.formattedMap = formatInfo.formattedMapping;\n      await this.setContent(formatInfo.formattedContent);\n      this.prettyBaseDoc = textEditor.state.doc;\n      const start = this.rawToPrettyLocation(startPos.lineNumber, startPos.columnNumber);\n      const end = this.rawToPrettyLocation(endPos.lineNumber, endPos.columnNumber);\n      newSelection = textEditor.createSelection(\n          {lineNumber: start[0], columnNumber: start[1]}, {lineNumber: end[0], columnNumber: end[1]});\n    } else {\n      await this.setContent(this.rawContent || '');\n      this.baseDoc = textEditor.state.doc;\n      const start = this.prettyToRawLocation(startPos.lineNumber, startPos.columnNumber);\n      const end = this.prettyToRawLocation(endPos.lineNumber, endPos.columnNumber);\n      newSelection = textEditor.createSelection(\n          {lineNumber: start[0], columnNumber: start[1]}, {lineNumber: end[0], columnNumber: end[1]});\n    }\n    if (wasLoaded) {\n      textEditor.revealPosition(newSelection, false);\n    }\n    this.prettyToggle.setEnabled(true);\n    this.updatePrettyPrintState();\n  }\n\n  // If this is a disassembled WASM file or a pretty-printed file,\n  // wire in a line number formatter that shows binary offsets or line\n  // numbers in the original source.\n  private getLineNumberFormatter(): CodeMirror.Extension {\n    if (this.options.lineNumbers === false) {\n      return [];\n    }\n    let formatNumber = undefined;\n    if (this.wasmDisassemblyInternal) {\n      const disassembly = this.wasmDisassemblyInternal;\n      const lastBytecodeOffset = disassembly.lineNumberToBytecodeOffset(disassembly.lineNumbers - 1);\n      const bytecodeOffsetDigits = lastBytecodeOffset.toString(16).length + 1;\n      formatNumber = (lineNumber: number) => {\n        const bytecodeOffset =\n            disassembly.lineNumberToBytecodeOffset(Math.min(disassembly.lineNumbers, lineNumber) - 1);\n        return `0x${bytecodeOffset.toString(16).padStart(bytecodeOffsetDigits, '0')}`;\n      };\n    } else if (this.prettyInternal) {\n      formatNumber = (lineNumber: number, state: CodeMirror.EditorState) => {\n        // @codemirror/view passes a high number here to estimate the\n        // maximum width to allocate for the line number gutter.\n        if (lineNumber < 2 || lineNumber > state.doc.lines) {\n          return String(lineNumber);\n        }\n        const [currLine] = this.prettyToRawLocation(lineNumber - 1);\n        const [prevLine] = this.prettyToRawLocation(lineNumber - 2);\n        if (currLine !== prevLine) {\n          return String(currLine + 1);\n        }\n        return '-';\n      };\n    }\n    return formatNumber ? [CodeMirror.lineNumbers({formatNumber}), LINE_NUMBER_FORMATTER.of(formatNumber)] : [];\n  }\n\n  private updateLineNumberFormatter(): void {\n    this.textEditor.dispatch({effects: config.lineNumbers.reconfigure(this.getLineNumberFormatter())});\n    this.textEditor.shadowRoot?.querySelector('.cm-lineNumbers')\n        ?.setAttribute('jslog', `${VisualLogging.gutter('line-numbers').track({click: true})}`);\n  }\n\n  private updatePrettyPrintState(): void {\n    this.prettyToggle.setToggled(this.prettyInternal);\n    this.textEditorInternal.classList.toggle('pretty-printed', this.prettyInternal);\n    this.updateLineNumberFormatter();\n  }\n\n  private prettyToRawLocation(line: number, column: number|undefined = 0): number[] {\n    if (!this.formattedMap) {\n      return [line, column];\n    }\n    return this.formattedMap.formattedToOriginal(line, column);\n  }\n\n  private rawToPrettyLocation(line: number, column: number): number[] {\n    if (!this.formattedMap) {\n      return [line, column];\n    }\n    return this.formattedMap.originalToFormatted(line, column);\n  }\n\n  hasLoadError(): boolean {\n    return this.loadError;\n  }\n\n  override wasShown(): void {\n    void this.ensureContentLoaded();\n    this.wasShownOrLoaded();\n  }\n\n  override willHide(): void {\n    super.willHide();\n\n    this.clearPositionToReveal();\n  }\n\n  override async toolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    return [this.prettyToggle, this.sourcePosition, this.progressToolbarItem];\n  }\n\n  get loaded(): boolean {\n    return this.loadedInternal;\n  }\n\n  get textEditor(): TextEditor.TextEditor.TextEditor {\n    return this.textEditorInternal;\n  }\n\n  get pretty(): boolean {\n    return this.prettyInternal;\n  }\n\n  get contentType(): string {\n    return this.loadError ? '' : this.getContentType();\n  }\n\n  protected getContentType(): string {\n    return '';\n  }\n\n  private async ensureContentLoaded(): Promise<void> {\n    if (!this.contentRequested) {\n      this.contentRequested = true;\n      await this.setContentDataOrError(this.lazyContent());\n\n      this.contentSet = true;\n    }\n  }\n\n  protected async setContentDataOrError(contentDataPromise: Promise<TextUtils.ContentData.ContentDataOrError>):\n      Promise<void> {\n    const progressIndicator = document.createElement('devtools-progress');\n    progressIndicator.title = i18nString(UIStrings.loading);\n    progressIndicator.totalWork = 100;\n    this.progressToolbarItem.element.appendChild(progressIndicator);\n\n    progressIndicator.worked = 1;\n    const contentData = await contentDataPromise;\n\n    let error: string|undefined;\n    let content: CodeMirror.Text|string|null;\n    let isMinified = false;\n    if (TextUtils.ContentData.ContentData.isError(contentData)) {\n      error = contentData.error;\n      content = contentData.error;\n    } else if (contentData instanceof TextUtils.WasmDisassembly.WasmDisassembly) {\n      content = CodeMirror.Text.of(contentData.lines);\n      this.wasmDisassemblyInternal = contentData;\n    } else if (contentData.isTextContent) {\n      content = contentData.text;\n      isMinified = TextUtils.TextUtils.isMinified(contentData.text);\n      this.wasmDisassemblyInternal = null;\n    } else if (contentData.mimeType === 'application/wasm') {\n      // The network panel produces ContentData with raw WASM inside. We have to manually disassemble that\n      // as V8 might not know about it.\n      this.wasmDisassemblyInternal = await SDK.Script.disassembleWasm(contentData.base64);\n      content = CodeMirror.Text.of(this.wasmDisassemblyInternal.lines);\n    } else {\n      error = i18nString(UIStrings.binaryContentError);\n      content = null;\n      this.wasmDisassemblyInternal = null;\n    }\n\n    progressIndicator.worked = 100;\n    progressIndicator.done = true;\n\n    if (this.rawContent === content && error === undefined) {\n      return;\n    }\n    this.rawContent = content;\n\n    this.formattedMap = null;\n    this.prettyToggle.setEnabled(true);\n\n    if (error) {\n      this.loadError = true;\n      this.textEditor.state = this.placeholderEditorState(error);\n      this.prettyToggle.setEnabled(false);\n    } else if (this.shouldAutoPrettyPrint && isMinified) {\n      await this.setPretty(true);\n    } else {\n      await this.setContent(this.rawContent || '');\n    }\n  }\n\n  revealPosition(position: RevealPosition, shouldHighlight?: boolean): void {\n    this.lineToScrollTo = null;\n    this.selectionToSet = null;\n    if (typeof position === 'number') {\n      let line = 0, column = 0;\n      const {doc} = this.textEditor.state;\n      if (position > doc.length) {\n        line = doc.lines - 1;\n      } else if (position >= 0) {\n        const lineObj = doc.lineAt(position);\n        line = lineObj.number - 1;\n        column = position - lineObj.from;\n      }\n      this.positionToReveal = {to: {lineNumber: line, columnNumber: column}, shouldHighlight};\n    } else if ('lineNumber' in position) {\n      const {lineNumber, columnNumber} = position;\n      this.positionToReveal = {to: {lineNumber, columnNumber: columnNumber ?? 0}, shouldHighlight};\n    } else {\n      this.positionToReveal = {...position, shouldHighlight};\n    }\n    this.#revealPositionIfNeeded();\n  }\n\n  #revealPositionIfNeeded(): void {\n    if (!this.positionToReveal) {\n      return;\n    }\n\n    if (!this.loaded || !this.isShowing()) {\n      return;\n    }\n\n    const {from, to, shouldHighlight} = this.positionToReveal;\n    const toLocation = this.uiLocationToEditorLocation(to.lineNumber, to.columnNumber);\n    const fromLocation = from ? this.uiLocationToEditorLocation(from.lineNumber, from.columnNumber) : undefined;\n\n    const {textEditor} = this;\n    textEditor.revealPosition(textEditor.createSelection(toLocation, fromLocation), shouldHighlight);\n    this.positionToReveal = null;\n  }\n\n  private clearPositionToReveal(): void {\n    this.positionToReveal = null;\n  }\n\n  scrollToLine(line: number): void {\n    this.clearPositionToReveal();\n    this.lineToScrollTo = line;\n    this.#scrollToLineIfNeeded();\n  }\n\n  #scrollToLineIfNeeded(): void {\n    if (this.lineToScrollTo !== null) {\n      if (this.loaded && this.isShowing()) {\n        const {textEditor} = this;\n        const position = textEditor.toOffset({lineNumber: this.lineToScrollTo, columnNumber: 0});\n        textEditor.dispatch({effects: CodeMirror.EditorView.scrollIntoView(position, {y: 'start', yMargin: 0})});\n        this.lineToScrollTo = null;\n      }\n    }\n  }\n\n  setSelection(textRange: TextUtils.TextRange.TextRange): void {\n    this.selectionToSet = textRange;\n    this.#setSelectionIfNeeded();\n  }\n\n  #setSelectionIfNeeded(): void {\n    const sel = this.selectionToSet;\n    if (sel && this.loaded && this.isShowing()) {\n      const {textEditor} = this;\n      textEditor.dispatch({\n        selection: textEditor.createSelection(\n            {lineNumber: sel.startLine, columnNumber: sel.startColumn},\n            {lineNumber: sel.endLine, columnNumber: sel.endColumn}),\n      });\n      this.selectionToSet = null;\n    }\n  }\n\n  private wasShownOrLoaded(): void {\n    this.#revealPositionIfNeeded();\n    this.#setSelectionIfNeeded();\n    this.#scrollToLineIfNeeded();\n    this.textEditor.shadowRoot?.querySelector('.cm-lineNumbers')\n        ?.setAttribute('jslog', `${VisualLogging.gutter('line-numbers').track({click: true})}`);\n    this.textEditor.shadowRoot?.querySelector('.cm-foldGutter')\n        ?.setAttribute('jslog', `${VisualLogging.gutter('fold')}`);\n    this.textEditor.setAttribute('jslog', `${VisualLogging.textField().track({change: true})}`);\n  }\n\n  onTextChanged(): void {\n    const wasPretty = this.pretty;\n    this.prettyInternal = Boolean(this.prettyBaseDoc && this.textEditor.state.doc.eq(this.prettyBaseDoc));\n    if (this.prettyInternal !== wasPretty) {\n      this.updatePrettyPrintState();\n    }\n    this.prettyToggle.setEnabled(this.isClean());\n\n    if (this.searchConfig && this.searchableView) {\n      this.performSearch(this.searchConfig, false, false);\n    }\n  }\n\n  isClean(): boolean {\n    return this.textEditor.state.doc.eq(this.baseDoc) ||\n        (this.prettyBaseDoc !== null && this.textEditor.state.doc.eq(this.prettyBaseDoc));\n  }\n\n  contentCommitted(): void {\n    this.baseDoc = this.textEditorInternal.state.doc;\n    this.prettyBaseDoc = null;\n    this.rawContent = this.textEditor.state.doc.toString();\n    this.formattedMap = null;\n    if (this.prettyInternal) {\n      this.prettyInternal = false;\n      this.updatePrettyPrintState();\n    }\n    this.prettyToggle.setEnabled(true);\n  }\n\n  protected async getLanguageSupport(content: string|CodeMirror.Text): Promise<CodeMirror.Extension> {\n    // This is a pretty horrible work-around for webpack-based Vue2 setups. See\n    // https://crbug.com/1416562 for the full story behind this.\n    let {contentType} = this;\n    if (contentType === 'text/x.vue') {\n      content = typeof content === 'string' ? content : content.sliceString(0);\n      if (!content.trimStart().startsWith('<')) {\n        contentType = 'text/javascript';\n      }\n    }\n    const languageDesc = await CodeHighlighter.CodeHighlighter.languageFromMIME(contentType);\n    if (!languageDesc) {\n      return [];\n    }\n    return [\n      languageDesc,\n      CodeMirror.javascript.javascriptLanguage.data.of({autocomplete: CodeMirror.completeAnyWord}),\n    ];\n  }\n\n  async updateLanguageMode(content: string): Promise<void> {\n    const langExtension = await this.getLanguageSupport(content);\n    this.textEditor.dispatch({effects: config.language.reconfigure(langExtension)});\n  }\n\n  async setContent(content: string|CodeMirror.Text): Promise<void> {\n    const {textEditor} = this;\n    const wasLoaded = this.loadedInternal;\n    const scrollTop = textEditor.editor.scrollDOM.scrollTop;\n    this.loadedInternal = true;\n\n    const languageSupport = await this.getLanguageSupport(content);\n    const editorState = CodeMirror.EditorState.create({\n      doc: content,\n      extensions: [\n        this.editorConfiguration(content),\n        languageSupport,\n        config.lineNumbers.of(this.getLineNumberFormatter()),\n        config.editable.of(this.editable ? [] : CodeMirror.EditorState.readOnly.of(true)),\n      ],\n    });\n    this.baseDoc = editorState.doc;\n    textEditor.state = editorState;\n    if (wasLoaded) {\n      textEditor.editor.scrollDOM.scrollTop = scrollTop;\n    }\n    this.wasShownOrLoaded();\n\n    if (this.delayedFindSearchMatches) {\n      this.delayedFindSearchMatches();\n      this.delayedFindSearchMatches = null;\n    }\n  }\n\n  setSearchableView(view: UI.SearchableView.SearchableView|null): void {\n    this.searchableView = view;\n  }\n\n  private doFindSearchMatches(\n      searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards: boolean): void {\n    this.currentSearchResultIndex = -1;\n\n    this.searchRegex = searchConfig.toSearchRegex(true);\n    this.searchResults = this.collectRegexMatches(this.searchRegex);\n\n    if (this.searchableView) {\n      this.searchableView.updateSearchMatchesCount(this.searchResults.length);\n    }\n\n    const editor = this.textEditor;\n    if (!this.searchResults.length) {\n      if (editor.state.field(activeSearchState)) {\n        editor.dispatch({effects: setActiveSearch.of(null)});\n      }\n    } else if (shouldJump && jumpBackwards) {\n      this.jumpToPreviousSearchResult();\n    } else if (shouldJump) {\n      this.jumpToNextSearchResult();\n    } else {\n      editor.dispatch({effects: setActiveSearch.of(new ActiveSearch(this.searchRegex, null))});\n    }\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void {\n    if (this.searchableView) {\n      this.searchableView.updateSearchMatchesCount(0);\n    }\n\n    this.resetSearch();\n    this.searchConfig = searchConfig;\n    if (this.loaded) {\n      this.doFindSearchMatches(searchConfig, shouldJump, Boolean(jumpBackwards));\n    } else {\n      this.delayedFindSearchMatches =\n          this.doFindSearchMatches.bind(this, searchConfig, shouldJump, Boolean(jumpBackwards));\n    }\n\n    void this.ensureContentLoaded();\n  }\n\n  private resetCurrentSearchResultIndex(): void {\n    if (!this.searchResults.length) {\n      return;\n    }\n    this.currentSearchResultIndex = -1;\n    if (this.searchableView) {\n      this.searchableView.updateCurrentMatchIndex(this.currentSearchResultIndex);\n    }\n    const editor = this.textEditor;\n    const currentActiveSearch = editor.state.field(activeSearchState);\n    if (currentActiveSearch?.currentRange) {\n      editor.dispatch({effects: setActiveSearch.of(new ActiveSearch(currentActiveSearch.regexp, null))});\n    }\n  }\n\n  private resetSearch(): void {\n    this.searchConfig = null;\n    this.delayedFindSearchMatches = null;\n    this.currentSearchResultIndex = -1;\n    this.searchResults = [];\n    this.searchRegex = null;\n  }\n\n  onSearchCanceled(): void {\n    const range = this.currentSearchResultIndex !== -1 ? this.searchResults[this.currentSearchResultIndex] : null;\n    this.resetSearch();\n    if (!this.loaded) {\n      return;\n    }\n    const editor = this.textEditor;\n    editor.dispatch({\n      effects: setActiveSearch.of(null),\n      selection: range ? {anchor: range.from, head: range.to} : undefined,\n      scrollIntoView: true,\n      userEvent: 'select.search.cancel',\n    });\n  }\n\n  jumpToLastSearchResult(): void {\n    this.jumpToSearchResult(this.searchResults.length - 1);\n  }\n\n  private searchResultIndexForCurrentSelection(): number {\n    return Platform.ArrayUtilities.lowerBound(\n        this.searchResults, this.textEditor.state.selection.main, (a, b) => a.to - b.to);\n  }\n\n  jumpToNextSearchResult(): void {\n    const currentIndex = this.searchResultIndexForCurrentSelection();\n    const nextIndex = this.currentSearchResultIndex === -1 ? currentIndex : currentIndex + 1;\n    this.jumpToSearchResult(nextIndex);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    const currentIndex = this.searchResultIndexForCurrentSelection();\n    this.jumpToSearchResult(currentIndex - 1);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsWholeWordSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return true;\n  }\n\n  jumpToSearchResult(index: number): void {\n    if (!this.loaded || !this.searchResults.length || !this.searchRegex) {\n      return;\n    }\n    this.currentSearchResultIndex = (index + this.searchResults.length) % this.searchResults.length;\n    if (this.searchableView) {\n      this.searchableView.updateCurrentMatchIndex(this.currentSearchResultIndex);\n    }\n    const editor = this.textEditor;\n    const range = this.searchResults[this.currentSearchResultIndex];\n    editor.dispatch({\n      effects: setActiveSearch.of(new ActiveSearch(this.searchRegex, range)),\n      selection: {anchor: range.from, head: range.to},\n      scrollIntoView: true,\n      userEvent: 'select.search',\n    });\n  }\n\n  replaceSelectionWith(_searchConfig: UI.SearchableView.SearchConfig, replacement: string): void {\n    const range = this.searchResults[this.currentSearchResultIndex];\n    if (!range) {\n      return;\n    }\n\n    const insert = this.searchRegex?.fromQuery ? range.insertPlaceholders(replacement) : replacement;\n    const editor = this.textEditor;\n    const changes = editor.state.changes({from: range.from, to: range.to, insert});\n    editor.dispatch(\n        {changes, selection: {anchor: changes.mapPos(editor.state.selection.main.to, 1)}, userEvent: 'input.replace'});\n  }\n\n  replaceAllWith(searchConfig: UI.SearchableView.SearchConfig, replacement: string): void {\n    this.resetCurrentSearchResultIndex();\n\n    const regex = searchConfig.toSearchRegex(true);\n    const ranges = this.collectRegexMatches(regex);\n    if (!ranges.length) {\n      return;\n    }\n\n    const isRegExp = regex.fromQuery;\n    const changes = ranges.map(\n        match =>\n            ({from: match.from, to: match.to, insert: isRegExp ? match.insertPlaceholders(replacement) : replacement}));\n\n    this.textEditor.dispatch({changes, scrollIntoView: true, userEvent: 'input.replace.all'});\n  }\n\n  private collectRegexMatches({regex}: UI.SearchableView.SearchRegexResult): SearchMatch[] {\n    const ranges = [];\n    let pos = 0;\n    for (const line of this.textEditor.state.doc.iterLines()) {\n      regex.lastIndex = 0;\n      for (;;) {\n        const match = regex.exec(line);\n        if (!match) {\n          break;\n        }\n        if (match[0].length) {\n          const from = pos + match.index;\n          ranges.push(new SearchMatch(from, from + match[0].length, match));\n        } else {\n          regex.lastIndex = match.index + 1;\n        }\n      }\n      pos += line.length + 1;\n    }\n    return ranges;\n  }\n\n  canEditSource(): boolean {\n    return this.editable;\n  }\n\n  private updateSourcePosition(): void {\n    const {textEditor} = this, {state} = textEditor, {selection} = state;\n    if (this.displayedSelection?.eq(selection)) {\n      return;\n    }\n    this.displayedSelection = selection;\n\n    if (selection.ranges.length > 1) {\n      this.sourcePosition.setText(i18nString(UIStrings.dSelectionRegions, {PH1: selection.ranges.length}));\n      return;\n    }\n    const {main} = state.selection;\n    if (main.empty) {\n      const {lineNumber, columnNumber} = textEditor.toLineColumn(main.head);\n      const location = this.prettyToRawLocation(lineNumber, columnNumber);\n      if (this.wasmDisassemblyInternal) {\n        const disassembly = this.wasmDisassemblyInternal;\n        const lastBytecodeOffset = disassembly.lineNumberToBytecodeOffset(disassembly.lineNumbers - 1);\n        const bytecodeOffsetDigits = lastBytecodeOffset.toString(16).length;\n        const bytecodeOffset = disassembly.lineNumberToBytecodeOffset(location[0]);\n        this.sourcePosition.setText(i18nString(\n            UIStrings.bytecodePositionXs, {PH1: bytecodeOffset.toString(16).padStart(bytecodeOffsetDigits, '0')}));\n      } else {\n        this.sourcePosition.setText(i18nString(UIStrings.lineSColumnS, {PH1: location[0] + 1, PH2: location[1] + 1}));\n      }\n    } else {\n      const startLine = state.doc.lineAt(main.from), endLine = state.doc.lineAt(main.to);\n      if (startLine.number === endLine.number) {\n        this.sourcePosition.setText(i18nString(UIStrings.dCharactersSelected, {PH1: main.to - main.from}));\n      } else {\n        this.sourcePosition.setText(i18nString(\n            UIStrings.dLinesDCharactersSelected,\n            {PH1: endLine.number - startLine.number + 1, PH2: main.to - main.from}));\n      }\n    }\n  }\n\n  onContextMenu(event: MouseEvent): boolean {\n    event.consume(true);  // Consume event now to prevent document from handling the async menu\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const {state} = this.textEditor;\n    const pos = state.selection.main.from, line = state.doc.lineAt(pos);\n    this.populateTextAreaContextMenu(contextMenu, line.number - 1, pos - line.from);\n    contextMenu.appendApplicableItems(this);\n    void contextMenu.show();\n    return true;\n  }\n\n  protected populateTextAreaContextMenu(_menu: UI.ContextMenu.ContextMenu, _lineNumber: number, _columnNumber: number):\n      void {\n  }\n\n  onLineGutterContextMenu(position: number, event: MouseEvent): boolean {\n    event.consume(true);  // Consume event now to prevent document from handling the async menu\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const lineNumber = this.textEditor.state.doc.lineAt(position).number - 1;\n    this.populateLineGutterContextMenu(contextMenu, lineNumber);\n    contextMenu.appendApplicableItems(this);\n    void contextMenu.show();\n    return true;\n  }\n\n  protected populateLineGutterContextMenu(_menu: UI.ContextMenu.ContextMenu, _lineNumber: number): void {\n  }\n\n  override focus(): void {\n    this.textEditor.focus();\n  }\n}\n\nclass SearchMatch {\n  constructor(readonly from: number, readonly to: number, readonly match: RegExpMatchArray) {\n  }\n\n  insertPlaceholders(replacement: string): string {\n    return replacement.replace(/\\$(\\$|&|\\d+|<[^>]+>)/g, (_, selector) => {\n      if (selector === '$') {\n        return '$';\n      }\n      if (selector === '&') {\n        return this.match[0];\n      }\n      if (selector[0] === '<') {\n        return (this.match.groups?.[selector.slice(1, selector.length - 1)]) || '';\n      }\n      return this.match[Number.parseInt(selector, 10)] || '';\n    });\n  }\n}\n\nexport interface Transformer {\n  editorLocationToUILocation(lineNumber: number, columnNumber: number): {\n    lineNumber: number,\n    columnNumber: number,\n  };\n  editorLocationToUILocation(lineNumber: number): {\n    lineNumber: number,\n    columnNumber: number|undefined,\n  };\n\n  uiLocationToEditorLocation(lineNumber: number, columnNumber?: number): {\n    lineNumber: number,\n    columnNumber: number,\n  };\n}\n\nexport const enum DecoratorType {\n  PERFORMANCE = 'performance',\n  MEMORY = 'memory',\n  COVERAGE = 'coverage',\n}\n\nconst config = {\n  editable: new CodeMirror.Compartment(),\n  language: new CodeMirror.Compartment(),\n  lineNumbers: new CodeMirror.Compartment(),\n};\n\nclass ActiveSearch {\n  constructor(\n      readonly regexp: UI.SearchableView.SearchRegexResult, readonly currentRange: {from: number, to: number}|null) {\n  }\n\n  map(change: CodeMirror.ChangeDesc): ActiveSearch {\n    return change.empty || !this.currentRange ?\n        this :\n        new ActiveSearch(\n            this.regexp, {from: change.mapPos(this.currentRange.from), to: change.mapPos(this.currentRange.to)});\n  }\n\n  static eq(a: ActiveSearch|null, b: ActiveSearch|null): boolean {\n    return Boolean(\n        a === b ||\n        a && b && a.currentRange?.from === b.currentRange?.from && a.currentRange?.to === b.currentRange?.to &&\n            a.regexp.regex.source === b.regexp.regex.source && a.regexp.regex.flags === b.regexp.regex.flags);\n  }\n}\n\nconst setActiveSearch =\n    CodeMirror.StateEffect.define<ActiveSearch|null>({map: (value, mapping) => value?.map(mapping)});\n\nconst activeSearchState = CodeMirror.StateField.define<ActiveSearch|null>({\n  create(): null {\n    return null;\n  },\n  update(state, tr): ActiveSearch |\n      null {\n        return tr.effects.reduce(\n            (state, effect) => effect.is(setActiveSearch) ? effect.value : state, state?.map(tr.changes) ?? null);\n      },\n});\n\nconst searchMatchDeco = CodeMirror.Decoration.mark({class: 'cm-searchMatch'});\nconst currentSearchMatchDeco = CodeMirror.Decoration.mark({class: 'cm-searchMatch cm-searchMatch-selected'});\n\nconst searchHighlighter = CodeMirror.ViewPlugin.fromClass(class {\n  decorations: CodeMirror.DecorationSet;\n\n  constructor(view: CodeMirror.EditorView) {\n    this.decorations = this.computeDecorations(view);\n  }\n\n  update(update: CodeMirror.ViewUpdate): void {\n    const active = update.state.field(activeSearchState);\n    if (!ActiveSearch.eq(active, update.startState.field(activeSearchState)) ||\n        (active && (update.viewportChanged || update.docChanged))) {\n      this.decorations = this.computeDecorations(update.view);\n    }\n  }\n\n  private computeDecorations(view: CodeMirror.EditorView): CodeMirror.DecorationSet {\n    const active = view.state.field(activeSearchState);\n    if (!active) {\n      return CodeMirror.Decoration.none;\n    }\n\n    const builder = new CodeMirror.RangeSetBuilder<CodeMirror.Decoration>();\n    const {doc} = view.state;\n    for (const {from, to} of view.visibleRanges) {\n      let pos = from;\n      for (const part of doc.iterRange(from, to)) {\n        if (part !== '\\n') {\n          active.regexp.regex.lastIndex = 0;\n          for (;;) {\n            const match = active.regexp.regex.exec(part);\n            if (!match) {\n              break;\n            }\n            if (match[0].length) {\n              const start = pos + match.index, end = start + match[0].length;\n              const current =\n                  active.currentRange && active.currentRange.from === start && active.currentRange.to === end;\n              builder.add(start, end, current ? currentSearchMatchDeco : searchMatchDeco);\n            } else {\n              active.regexp.regex.lastIndex = match.index + 1;\n            }\n          }\n        }\n        pos += part.length;\n      }\n    }\n    return builder.finish();\n  }\n}, {decorations: value => value.decorations});\n\nconst nonBreakableLineMark = new (class extends CodeMirror.GutterMarker {\n  override elementClass = 'cm-nonBreakableLine';\n})();\n\n// Effect to add lines (by position) to the set of non-breakable lines.\nexport const addNonBreakableLines = CodeMirror.StateEffect.define<readonly number[]>();\n\nconst nonBreakableLines = CodeMirror.StateField.define<CodeMirror.RangeSet<CodeMirror.GutterMarker>>({\n  create(): CodeMirror.RangeSet<CodeMirror.GutterMarker> {\n    return CodeMirror.RangeSet.empty;\n  },\n  update(deco, tr): CodeMirror.RangeSet<CodeMirror.GutterMarker> {\n    return tr.effects.reduce((deco, effect) => {\n      return !effect.is(addNonBreakableLines) ?\n          deco :\n          deco.update({add: effect.value.map(pos => nonBreakableLineMark.range(pos))});\n    }, deco.map(tr.changes));\n  },\n  provide: field => CodeMirror.lineNumberMarkers.from(field),\n});\n\nexport function isBreakableLine(state: CodeMirror.EditorState, line: CodeMirror.Line): boolean {\n  const nonBreakable = state.field(nonBreakableLines);\n  if (!nonBreakable.size) {\n    return true;\n  }\n  let found = false;\n  nonBreakable.between(line.from, line.from, () => {\n    found = true;\n  });\n  return !found;\n}\n\nfunction markNonBreakableLines(disassembly: TextUtils.WasmDisassembly.WasmDisassembly): CodeMirror.Extension {\n  // Mark non-breakable lines in the Wasm disassembly after setting\n  // up the content for the text editor (which creates the gutter).\n  return nonBreakableLines.init(state => {\n    const marks = [];\n    for (const lineNumber of disassembly.nonBreakableLineNumbers()) {\n      if (lineNumber < state.doc.lines) {\n        marks.push(nonBreakableLineMark.range(state.doc.line(lineNumber + 1).from));\n      }\n    }\n    return CodeMirror.RangeSet.of(marks);\n  });\n}\n\nconst sourceFrameTheme = CodeMirror.EditorView.theme({\n  '&.cm-editor': {height: '100%'},\n  '.cm-scroller': {overflow: 'auto'},\n  '.cm-lineNumbers .cm-gutterElement.cm-nonBreakableLine': {color: 'var(--sys-color-state-disabled) !important'},\n  '.cm-searchMatch': {\n    border: '1px solid var(--sys-color-outline)',\n    borderRadius: '3px',\n    margin: '0 -1px',\n    '&.cm-searchMatch-selected': {\n      borderRadius: '1px',\n      backgroundColor: 'var(--sys-color-yellow-container)',\n      borderColor: 'var(--sys-color-yellow-outline)',\n      '&, & *': {\n        color: 'var(--sys-color-on-surface) !important',\n      },\n    },\n  },\n  ':host-context(.pretty-printed) & .cm-lineNumbers .cm-gutterElement': {\n    color: 'var(--sys-color-primary)',\n  },\n});\n\n/**\n * Reveal position can either be a single point or a range.\n *\n * A single point can either be specified as a line/column combo or as an absolute\n * editor offset.\n */\nexport type RevealPosition = number|{lineNumber: number, columnNumber?: number}|\n    {from: {lineNumber: number, columnNumber: number}, to: {lineNumber: number, columnNumber: number}};\n\n// This is usually an Infobar but is also used for AiCodeCompletionSummaryToolbar\nexport interface SourceFrameInfobar {\n  element: HTMLElement;\n  order?: number;\n}\n\n// Infobar panel state, used to show additional panels below the editor.\nexport const addSourceFrameInfobar = CodeMirror.StateEffect.define<SourceFrameInfobar>();\nexport const removeSourceFrameInfobar = CodeMirror.StateEffect.define<SourceFrameInfobar>();\n\nconst sourceFrameInfobarState = CodeMirror.StateField.define<SourceFrameInfobar[]>({\n  create(): SourceFrameInfobar[] {\n    return [];\n  },\n  update(current, tr): SourceFrameInfobar[] {\n    for (const effect of tr.effects) {\n      if (effect.is(addSourceFrameInfobar)) {\n        current = current.concat(effect.value);\n      } else if (effect.is(removeSourceFrameInfobar)) {\n        current = current.filter(b => b.element !== effect.value.element);\n      }\n    }\n    return current;\n  },\n  provide: (field): CodeMirror.Extension => CodeMirror.showPanel.computeN(\n      [field],\n      (state): Array<() => CodeMirror.Panel> =>\n          state.field(field)\n              .sort((a, b) => (a.order ?? 0) - (b.order ?? 0))\n              .map((bar): (() => CodeMirror.Panel) => (): CodeMirror.Panel => ({dom: bar.element}))),\n});\n", "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as LinearMemoryInspectorComponents from '../../../../panels/linear_memory_inspector/components/components.js';\nimport * as UI from '../../legacy.js';\n\nconst MEMORY_TRANSFER_MIN_CHUNK_SIZE = 1000;\n\n/**\n * This is a slightly reduced version of `panels/LinearMemoryInspectorPane.LinearMemoryInspectorView.\n *\n * It's not hooked up to the LinearMemoryInspectorController and it operates on a fixed memory array thats\n * known upfront.\n */\nclass LinearMemoryInspectorView extends UI.Widget.VBox {\n  #memory = new Uint8Array([0]);\n  #address = 0;\n  #inspector = new LinearMemoryInspectorComponents.LinearMemoryInspector.LinearMemoryInspector();\n\n  constructor() {\n    super();\n    this.#inspector.addEventListener(\n        LinearMemoryInspectorComponents.LinearMemoryInspector.MemoryRequestEvent.eventName,\n        this.#memoryRequested.bind(this));\n    this.#inspector.addEventListener(\n        LinearMemoryInspectorComponents.LinearMemoryInspector.AddressChangedEvent.eventName, event => {\n          this.#address = event.data;\n        });\n    this.contentElement.appendChild(this.#inspector);\n  }\n\n  override wasShown(): void {\n    this.refreshData();\n  }\n\n  setMemory(memory: Uint8Array<ArrayBuffer>): void {\n    this.#memory = memory;\n    this.refreshData();\n  }\n\n  refreshData(): void {\n    // TODO(szuend): The following lines are copied from `LinearMemoryInspectorController`. We can't reuse them\n    // as depending on a module in `panels/` from a component is a layering violation.\n\n    // Provide a chunk of memory that covers the address to show and some before and after\n    // as 1. the address shown is not necessarily at the beginning of a page and\n    // 2. to allow for fewer memory requests.\n    const memoryChunkStart = Math.max(0, this.#address - MEMORY_TRANSFER_MIN_CHUNK_SIZE / 2);\n    const memoryChunkEnd = memoryChunkStart + MEMORY_TRANSFER_MIN_CHUNK_SIZE;\n    const memory = this.#memory.slice(memoryChunkStart, memoryChunkEnd);\n    this.#inspector.data = {\n      memory,\n      address: this.#address,\n      memoryOffset: memoryChunkStart,\n      outerMemoryLength: this.#memory.length,\n      hideValueInspector: true,\n    };\n  }\n\n  #memoryRequested(event: LinearMemoryInspectorComponents.LinearMemoryInspector.MemoryRequestEvent): void {\n    // TODO(szuend): The following lines are copied from `LinearMemoryInspectorController`. We can't reuse them\n    // as depending on a module in `panels/` from a component is a layering violation.\n\n    const {start, end, address} = event.data;\n    if (address < start || address >= end) {\n      throw new Error('Requested address is out of bounds.');\n    }\n\n    // Check that the requested start is within bounds.\n    // If the requested end is larger than the actual\n    // memory, it will be automatically capped when\n    // requesting the range.\n    if (start < 0 || start > end || start >= this.#memory.length) {\n      throw new Error('Requested range is out of bounds.');\n    }\n\n    const chunkEnd = Math.max(end, start + MEMORY_TRANSFER_MIN_CHUNK_SIZE);\n    const memory = this.#memory.slice(start, chunkEnd);\n\n    this.#inspector.data = {\n      memory,\n      address,\n      memoryOffset: start,\n      outerMemoryLength: this.#memory.length,\n      hideValueInspector: true,\n    };\n  }\n}\n\n/**\n * Adapter for the linear memory inspector that can show a {@link StreamingContentData}.\n */\nexport class StreamingContentHexView extends LinearMemoryInspectorView {\n  readonly #streamingContentData: TextUtils.StreamingContentData.StreamingContentData;\n\n  constructor(streamingContentData: TextUtils.StreamingContentData.StreamingContentData) {\n    super();\n    this.#streamingContentData = streamingContentData;\n  }\n\n  override wasShown(): void {\n    this.#updateMemoryFromContentData();\n    this.#streamingContentData.addEventListener(\n        TextUtils.StreamingContentData.Events.CHUNK_ADDED, this.#updateMemoryFromContentData, this);\n\n    // No need to call super.wasShown() as we call super.refreshData() ourselves.\n  }\n\n  override willHide(): void {\n    super.willHide();\n    this.#streamingContentData.removeEventListener(\n        TextUtils.StreamingContentData.Events.CHUNK_ADDED, this.#updateMemoryFromContentData, this);\n  }\n\n  #updateMemoryFromContentData(): void {\n    const binaryString = window.atob(this.#streamingContentData.content().base64);\n    const memory = Uint8Array.from(binaryString, m => m.codePointAt(0) as number);\n    this.setMemory(memory);\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\n\nimport fontViewStyles from './fontView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text that appears on a button for the font resource type filter.\n   */\n  font: 'Font',\n  /**\n   * @description Aria accessible name in Font View of the Sources panel\n   * @example {https://example.com} PH1\n   */\n  previewOfFontFromS: 'Preview of font from {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/FontView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class FontView extends UI.View.SimpleView {\n  private readonly url: Platform.DevToolsPath.UrlString;\n  private readonly contentProvider: TextUtils.ContentProvider.ContentProvider;\n  private readonly mimeTypeLabel: UI.Toolbar.ToolbarText;\n  fontPreviewElement!: HTMLElement|null;\n  private dummyElement!: HTMLElement|null;\n  fontStyleElement!: HTMLStyleElement|null;\n  private inResize!: boolean|null;\n  constructor(mimeType: string, contentProvider: TextUtils.ContentProvider.ContentProvider) {\n    super({\n      title: i18nString(UIStrings.font),\n      viewId: 'font',\n      jslog: `${VisualLogging.pane('font-view')}`,\n    });\n    this.registerRequiredCSS(fontViewStyles);\n    this.element.classList.add('font-view');\n    this.url = contentProvider.contentURL();\n    UI.ARIAUtils.setLabel(this.element, i18nString(UIStrings.previewOfFontFromS, {PH1: this.url}));\n    this.contentProvider = contentProvider;\n    this.mimeTypeLabel = new UI.Toolbar.ToolbarText(mimeType);\n  }\n\n  override async toolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    return [this.mimeTypeLabel];\n  }\n\n  private onFontContentLoaded(uniqueFontName: string, contentData: TextUtils.ContentData.ContentDataOrError): void {\n    const url = TextUtils.ContentData.ContentData.isError(contentData) ? this.url : contentData.asDataUrl();\n    if (!this.fontStyleElement) {\n      return;\n    }\n    this.fontStyleElement.textContent =\n        Platform.StringUtilities.sprintf('@font-face { font-family: \"%s\"; src: url(%s); }', uniqueFontName, url);\n    this.updateFontPreviewSize();\n  }\n\n  private createContentIfNeeded(): void {\n    if (this.fontPreviewElement) {\n      return;\n    }\n\n    const uniqueFontName = `WebInspectorFontPreview${++fontId}`;\n    this.fontStyleElement = document.createElement('style');\n    void this.contentProvider.requestContentData().then(contentData => {\n      this.onFontContentLoaded(uniqueFontName, contentData);\n    });\n    this.element.appendChild(this.fontStyleElement);\n\n    const fontPreview = document.createElement('div');\n    for (let i = 0; i < FONT_PREVIEW_LINES.length; ++i) {\n      if (i > 0) {\n        fontPreview.createChild('br');\n      }\n      UI.UIUtils.createTextChild(fontPreview, FONT_PREVIEW_LINES[i]);\n    }\n    this.fontPreviewElement = (fontPreview.cloneNode(true) as HTMLDivElement);\n    if (!this.fontPreviewElement) {\n      return;\n    }\n    UI.ARIAUtils.setHidden(this.fontPreviewElement, true);\n    this.fontPreviewElement.style.overflow = 'hidden';\n    this.fontPreviewElement.style.setProperty('font-family', uniqueFontName);\n    this.fontPreviewElement.style.setProperty('visibility', 'hidden');\n\n    this.dummyElement = fontPreview;\n    this.dummyElement.style.visibility = 'hidden';\n    this.dummyElement.style.zIndex = '-1';\n    this.dummyElement.style.display = 'inline';\n    this.dummyElement.style.position = 'absolute';\n    this.dummyElement.style.setProperty('font-family', uniqueFontName);\n    this.dummyElement.style.setProperty('font-size', MEASUURE_FONT_SIZE + 'px');\n\n    this.element.appendChild(this.fontPreviewElement);\n  }\n\n  override wasShown(): void {\n    this.createContentIfNeeded();\n\n    this.updateFontPreviewSize();\n  }\n\n  override onResize(): void {\n    if (this.inResize) {\n      return;\n    }\n\n    this.inResize = true;\n    try {\n      this.updateFontPreviewSize();\n    } finally {\n      this.inResize = null;\n    }\n  }\n\n  private measureElement(): {\n    width: number,\n    height: number,\n  } {\n    if (!this.dummyElement) {\n      throw new Error('No font preview loaded');\n    }\n    this.element.appendChild(this.dummyElement);\n    const result = {width: this.dummyElement.offsetWidth, height: this.dummyElement.offsetHeight};\n    this.element.removeChild(this.dummyElement);\n\n    return result;\n  }\n\n  updateFontPreviewSize(): void {\n    if (!this.fontPreviewElement || !this.isShowing()) {\n      return;\n    }\n\n    this.fontPreviewElement.style.removeProperty('visibility');\n    const dimension = this.measureElement();\n\n    const height = dimension.height;\n    const width = dimension.width;\n\n    // Subtract some padding. This should match the paddings in the CSS plus room for the scrollbar.\n    const containerWidth = this.element.offsetWidth - 50;\n    const containerHeight = this.element.offsetHeight - 30;\n\n    if (!height || !width || !containerWidth || !containerHeight) {\n      this.fontPreviewElement.style.removeProperty('font-size');\n      return;\n    }\n\n    const widthRatio = containerWidth / width;\n    const heightRatio = containerHeight / height;\n    const finalFontSize = Math.floor(MEASUURE_FONT_SIZE * Math.min(widthRatio, heightRatio)) - 2;\n\n    this.fontPreviewElement.style.setProperty('font-size', finalFontSize + 'px', undefined);\n  }\n}\n\nlet fontId = 0;\nconst FONT_PREVIEW_LINES = ['ABCDEFGHIJKLM', 'NOPQRSTUVWXYZ', 'abcdefghijklm', 'nopqrstuvwxyz', '1234567890'];\nconst MEASUURE_FONT_SIZE = 50;\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2014 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.font-view {\n  font-size: 60px;\n  white-space: pre-wrap;\n  overflow-wrap: break-word;\n  text-align: center;\n  padding: 15px;\n}\n\n/*# sourceURL=${import.meta.resolve('./fontView.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../../../models/workspace/workspace.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\n\nimport imageViewStyles from './imageView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Image View of the Sources panel\n   */\n  image: 'Image',\n  /**\n   * @description Text that appears when user drag and drop something (for example, a file) in Image View of the Sources panel\n   */\n  dropImageFileHere: 'Drop image file here',\n  /**\n   * @description Text to indicate the source of an image\n   * @example {example.com} PH1\n   */\n  imageFromS: 'Image from {PH1}',\n  /**\n   * @description Text in Image View of the Sources panel\n   * @example {2} PH1\n   * @example {2} PH2\n   */\n  dD: '{PH1} × {PH2}',\n  /**\n   * @description A context menu item in the Image View of the Sources panel\n   */\n  copyImageUrl: 'Copy image URL',\n  /**\n   * @description A context menu item in the Image View of the Sources panel\n   */\n  copyImageAsDataUri: 'Copy image as data URI',\n  /**\n   * @description A context menu item in the Image View of the Sources panel\n   */\n  openImageInNewTab: 'Open image in new tab',\n  /**\n   * @description A context menu item in the Image Preview\n   */\n  saveImageAs: 'Save image as…',\n  /**\n   * @description The default file name when downloading a file\n   */\n  download: 'download',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/ImageView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ImageView extends UI.View.SimpleView {\n  private url: Platform.DevToolsPath.UrlString;\n  private parsedURL: Common.ParsedURL.ParsedURL;\n\n  private readonly contentProvider: TextUtils.ContentProvider.ContentProvider;\n  private uiSourceCode: Workspace.UISourceCode.UISourceCode|null;\n  private readonly sizeLabel: UI.Toolbar.ToolbarText;\n  private readonly dimensionsLabel: UI.Toolbar.ToolbarText;\n  private readonly aspectRatioLabel: UI.Toolbar.ToolbarText;\n  private readonly mimeTypeLabel: UI.Toolbar.ToolbarText;\n  private readonly container: HTMLElement;\n  private imagePreviewElement: HTMLImageElement;\n  private cachedContent?: TextUtils.ContentData.ContentData;\n  constructor(mimeType: string, contentProvider: TextUtils.ContentProvider.ContentProvider) {\n    super({\n      title: i18nString(UIStrings.image),\n      viewId: 'image',\n      jslog: `${VisualLogging.pane('image-view')}}`,\n    });\n    this.registerRequiredCSS(imageViewStyles);\n    this.element.tabIndex = -1;\n    this.element.classList.add('image-view');\n    this.url = contentProvider.contentURL();\n    this.parsedURL = new Common.ParsedURL.ParsedURL(this.url);\n    this.contentProvider = contentProvider;\n    this.uiSourceCode = contentProvider instanceof Workspace.UISourceCode.UISourceCode ? contentProvider : null;\n    if (this.uiSourceCode) {\n      this.uiSourceCode.addEventListener(\n          Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this);\n      new UI.DropTarget.DropTarget(\n          this.element, [UI.DropTarget.Type.ImageFile, UI.DropTarget.Type.URI], i18nString(UIStrings.dropImageFileHere),\n          this.handleDrop.bind(this));\n    }\n    this.sizeLabel = new UI.Toolbar.ToolbarText();\n    this.dimensionsLabel = new UI.Toolbar.ToolbarText();\n    this.aspectRatioLabel = new UI.Toolbar.ToolbarText();\n    this.mimeTypeLabel = new UI.Toolbar.ToolbarText(mimeType);\n    this.container = this.element.createChild('div', 'image');\n    this.imagePreviewElement = this.container.createChild('img', 'resource-image-view');\n    this.imagePreviewElement.addEventListener('contextmenu', this.contextMenu.bind(this), true);\n  }\n\n  override async toolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    await this.updateContentIfNeeded();\n    return [\n      this.sizeLabel,\n      new UI.Toolbar.ToolbarSeparator(),\n      this.dimensionsLabel,\n      new UI.Toolbar.ToolbarSeparator(),\n      this.aspectRatioLabel,\n      new UI.Toolbar.ToolbarSeparator(),\n      this.mimeTypeLabel,\n    ];\n  }\n\n  override wasShown(): void {\n    void this.updateContentIfNeeded();\n  }\n\n  override disposeView(): void {\n    if (this.uiSourceCode) {\n      this.uiSourceCode.removeEventListener(\n          Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this);\n    }\n  }\n\n  private workingCopyCommitted(): void {\n    void this.updateContentIfNeeded();\n  }\n\n  private async updateContentIfNeeded(): Promise<void> {\n    const content = await this.contentProvider.requestContentData();\n    if (TextUtils.ContentData.ContentData.isError(content) || this.cachedContent?.contentEqualTo(content)) {\n      return;\n    }\n\n    this.cachedContent = content;\n    const imageSrc = content.asDataUrl() ?? this.url;\n    const loadPromise = new Promise(x => {\n      this.imagePreviewElement.onload = x;\n    });\n    this.imagePreviewElement.src = imageSrc;\n    this.imagePreviewElement.alt = i18nString(UIStrings.imageFromS, {PH1: this.url});\n    const size = content.isTextContent ? content.text.length : Platform.StringUtilities.base64ToSize(content.base64);\n    this.sizeLabel.setText(i18n.ByteUtilities.bytesToString(size));\n    await loadPromise;\n    this.dimensionsLabel.setText(i18nString(\n        UIStrings.dD, {PH1: this.imagePreviewElement.naturalWidth, PH2: this.imagePreviewElement.naturalHeight}));\n    this.aspectRatioLabel.setText(Platform.NumberUtilities.aspectRatio(\n        this.imagePreviewElement.naturalWidth, this.imagePreviewElement.naturalHeight));\n  }\n\n  private contextMenu(event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const parsedSrc = new Common.ParsedURL.ParsedURL(this.imagePreviewElement.src);\n    if (!this.parsedURL.isDataURL()) {\n      contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyImageUrl), this.copyImageURL.bind(this), {\n        jslogContext: 'image-view.copy-image-url',\n      });\n    }\n    if (parsedSrc.isDataURL()) {\n      contextMenu.clipboardSection().appendItem(\n          i18nString(UIStrings.copyImageAsDataUri), this.copyImageAsDataURL.bind(this), {\n            jslogContext: 'image-view.copy-image-as-data-url',\n          });\n    }\n\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.openImageInNewTab), this.openInNewTab.bind(this), {\n      jslogContext: 'image-view.open-in-new-tab',\n    });\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.saveImageAs), this.saveImage.bind(this), {\n      jslogContext: 'image-view.save-image',\n    });\n\n    void contextMenu.show();\n  }\n\n  private copyImageAsDataURL(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.imagePreviewElement.src);\n  }\n\n  private copyImageURL(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.url);\n  }\n\n  private async saveImage(): Promise<void> {\n    const imageDataURL = this.cachedContent?.asDataUrl();\n    if (!imageDataURL) {\n      return;\n    }\n\n    let suggestedName = '';\n    if (this.parsedURL.isDataURL()) {\n      suggestedName = i18nString(UIStrings.download);\n      const {type, subtype} = this.parsedURL.extractDataUrlMimeType();\n      if (type === 'image' && subtype) {\n        suggestedName += '.' + subtype;\n      }\n    } else {\n      suggestedName = decodeURIComponent(this.parsedURL.displayName);\n    }\n\n    const blob = await fetch(imageDataURL).then(r => r.blob());\n    try {\n      const handle = await window.showSaveFilePicker({suggestedName});\n      const writable = await handle.createWritable();\n      await writable.write(blob);\n      await writable.close();\n    } catch (error) {\n      // If the user aborts the action no need to report it, otherwise do.\n      if (error.name === 'AbortError') {\n        return;\n      }\n      throw error;\n    }\n  }\n\n  private openInNewTab(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(this.url);\n  }\n\n  private async handleDrop(dataTransfer: DataTransfer): Promise<void> {\n    const items = dataTransfer.items;\n    if (!items.length || items[0].kind !== 'file') {\n      return;\n    }\n\n    const file = items[0].getAsFile();\n    if (!file) {\n      return;\n    }\n    const encoded = !file.name.endsWith('.svg');\n    const fileCallback = (file: Blob): void => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        let result;\n        try {\n          result = (reader.result as string | null);\n        } catch (e) {\n          result = null;\n          console.error('Can\\'t read file: ' + e);\n        }\n        if (typeof result !== 'string' || !this.uiSourceCode) {\n          return;\n        }\n        this.uiSourceCode.setContent(encoded ? btoa(result) : result, encoded);\n      };\n      if (encoded) {\n        reader.readAsBinaryString(file);\n      } else {\n        reader.readAsText(file);\n      }\n    };\n    fileCallback(file);\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2014 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.image-view {\n  overflow: auto;\n}\n\n.image-view > .image {\n  padding: 20px 20px 10px;\n  text-align: center;\n}\n\n.image-view img.resource-image-view {\n  max-width: 100%;\n  max-height: 1000px;\n  background-image: var(--image-file-checker);\n  box-shadow: 0 5px 10px var(--sys-color-outline);\n  user-select: text;\n  -webkit-user-drag: auto;\n}\n\n/*# sourceURL=${import.meta.resolve('./imageView.css')} */`;", "// Copyright 2011 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\nimport * as ObjectUI from '../object_ui/object_ui.js';\n\nimport jsonViewStyles from './jsonView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text to find an item\n   */\n  find: 'Find',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/JSONView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class JSONView extends UI.Widget.VBox implements UI.SearchableView.Searchable {\n  private initialized: boolean;\n  private readonly parsedJSON: ParsedJSON;\n  private startCollapsed: boolean;\n  private searchableView!: UI.SearchableView.SearchableView|null;\n  private treeOutline!: ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection;\n  private currentSearchFocusIndex: number;\n  private currentSearchTreeElements: ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement[];\n  private searchRegex: RegExp|null;\n  constructor(parsedJSON: ParsedJSON, startCollapsed?: boolean) {\n    super();\n    this.initialized = false;\n    this.registerRequiredCSS(jsonViewStyles);\n    this.parsedJSON = parsedJSON;\n    this.startCollapsed = Boolean(startCollapsed);\n    this.element.classList.add('json-view');\n    this.element.setAttribute('jslog', `${VisualLogging.section('json-view')}`);\n    this.currentSearchFocusIndex = 0;\n    this.currentSearchTreeElements = [];\n    this.searchRegex = null;\n  }\n\n  static async createView(content: string): Promise<UI.SearchableView.SearchableView|null> {\n    // We support non-strict JSON parsing by parsing an AST tree which is why we offload it to a worker.\n    const parsedJSON = await JSONView.parseJSON(content);\n    if (!parsedJSON || typeof parsedJSON.data !== 'object') {\n      return null;\n    }\n\n    const jsonView = new JSONView(parsedJSON);\n    const searchableView = new UI.SearchableView.SearchableView(jsonView, null);\n    searchableView.setPlaceholder(i18nString(UIStrings.find));\n    jsonView.searchableView = searchableView;\n    jsonView.show(searchableView.element);\n    return searchableView;\n  }\n\n  static createViewSync(obj: Object|null, element?: HTMLElement): UI.SearchableView.SearchableView {\n    const jsonView = new JSONView(new ParsedJSON(obj, '', ''));\n    const searchableView = new UI.SearchableView.SearchableView(jsonView, null, undefined, element);\n    searchableView.setPlaceholder(i18nString(UIStrings.find));\n    jsonView.searchableView = searchableView;\n    jsonView.show(searchableView.element);\n    jsonView.element.tabIndex = 0;\n    return searchableView;\n  }\n\n  private static parseJSON(text: string|null): Promise<ParsedJSON|null> {\n    let returnObj: ParsedJSON<string>|null = null;\n    if (text) {\n      returnObj = JSONView.extractJSON(text);\n    }\n    if (!returnObj) {\n      return Promise.resolve(null);\n    }\n    try {\n      const json = JSON.parse(returnObj.data);\n      if (!json) {\n        return Promise.resolve(null);\n      }\n      returnObj.data = json;\n    } catch {\n      returnObj = null;\n    }\n\n    return Promise.resolve(returnObj);\n  }\n\n  private static extractJSON(text: string): ParsedJSON<string>|null {\n    // Do not treat HTML as JSON.\n    if (text.startsWith('<')) {\n      return null;\n    }\n    let inner = JSONView.findBrackets(text, '{', '}');\n    const inner2 = JSONView.findBrackets(text, '[', ']');\n    inner = inner2.length > inner.length ? inner2 : inner;\n\n    // Return on blank payloads or on payloads significantly smaller than original text.\n    if (inner.length === -1 || text.length - inner.length > 80) {\n      return null;\n    }\n\n    const prefix = text.substring(0, inner.start);\n    const suffix = text.substring(inner.end + 1);\n    text = text.substring(inner.start, inner.end + 1);\n\n    // Only process valid JSONP.\n    if (suffix.trim().length && !(suffix.trim().startsWith(')') && prefix.trim().endsWith('('))) {\n      return null;\n    }\n\n    return new ParsedJSON(text, prefix, suffix);\n  }\n\n  private static findBrackets(text: string, open: string, close: string): {\n    start: number,\n    end: number,\n    length: number,\n  } {\n    const start = text.indexOf(open);\n    const end = text.lastIndexOf(close);\n    let length: -1|number = end - start - 1;\n    if (start === -1 || end === -1 || end < start) {\n      length = -1;\n    }\n    return {start, end, length};\n  }\n\n  override wasShown(): void {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    if (this.initialized) {\n      return;\n    }\n    this.initialized = true;\n\n    const obj = SDK.RemoteObject.RemoteObject.fromLocalObject(this.parsedJSON.data);\n    const title = this.parsedJSON.prefix + obj.description + this.parsedJSON.suffix;\n    this.treeOutline =\n        new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection(obj, title, undefined, true /* showOverflow */);\n    this.treeOutline.enableContextMenu();\n    this.treeOutline.setEditable(false);\n    if (!this.startCollapsed) {\n      this.treeOutline.expand();\n    }\n    this.element.appendChild(this.treeOutline.element);\n    const firstChild = this.treeOutline.firstChild();\n    if (firstChild) {\n      firstChild.select(true /* omitFocus */, false /* selectedByUser */);\n    }\n  }\n\n  private jumpToMatch(index: number): void {\n    if (!this.searchRegex) {\n      return;\n    }\n    const previousFocusElement = this.currentSearchTreeElements[this.currentSearchFocusIndex];\n    if (previousFocusElement) {\n      previousFocusElement.setSearchRegex(this.searchRegex);\n    }\n\n    const newFocusElement = this.currentSearchTreeElements[index];\n    if (newFocusElement) {\n      this.updateSearchIndex(index);\n      newFocusElement.setSearchRegex(this.searchRegex, UI.UIUtils.highlightedCurrentSearchResultClassName);\n      newFocusElement.reveal();\n    } else {\n      this.updateSearchIndex(0);\n    }\n  }\n\n  private updateSearchCount(count: number): void {\n    if (!this.searchableView) {\n      return;\n    }\n    this.searchableView.updateSearchMatchesCount(count);\n  }\n\n  private updateSearchIndex(index: number): void {\n    this.currentSearchFocusIndex = index;\n    if (!this.searchableView) {\n      return;\n    }\n    this.searchableView.updateCurrentMatchIndex(index);\n  }\n\n  onSearchCanceled(): void {\n    this.searchRegex = null;\n    this.currentSearchTreeElements = [];\n\n    let element: UI.TreeOutline.TreeElement|null;\n    for (element = this.treeOutline.rootElement(); element; element = element.traverseNextTreeElement(false)) {\n      if (!(element instanceof ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement)) {\n        continue;\n      }\n      element.revertHighlightChanges();\n    }\n    this.updateSearchCount(0);\n    this.updateSearchIndex(0);\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, _shouldJump: boolean, jumpBackwards?: boolean): void {\n    let newIndex: number = this.currentSearchFocusIndex;\n    const previousSearchFocusElement = this.currentSearchTreeElements[newIndex];\n    this.onSearchCanceled();\n    this.searchRegex = searchConfig.toSearchRegex(true).regex;\n\n    let element: UI.TreeOutline.TreeElement|null;\n    for (element = this.treeOutline.rootElement(); element; element = element.traverseNextTreeElement(false)) {\n      if (!(element instanceof ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement)) {\n        continue;\n      }\n      const hasMatch = element.setSearchRegex(this.searchRegex);\n      if (hasMatch) {\n        this.currentSearchTreeElements.push(element);\n      }\n      if (previousSearchFocusElement === element) {\n        const currentIndex = this.currentSearchTreeElements.length - 1;\n        if (hasMatch || jumpBackwards) {\n          newIndex = currentIndex;\n        } else {\n          newIndex = currentIndex + 1;\n        }\n      }\n    }\n    this.updateSearchCount(this.currentSearchTreeElements.length);\n\n    if (!this.currentSearchTreeElements.length) {\n      this.updateSearchIndex(-1);\n      return;\n    }\n    newIndex = Platform.NumberUtilities.mod(newIndex, this.currentSearchTreeElements.length);\n\n    this.jumpToMatch(newIndex);\n  }\n\n  jumpToNextSearchResult(): void {\n    if (!this.currentSearchTreeElements.length) {\n      return;\n    }\n    const newIndex =\n        Platform.NumberUtilities.mod(this.currentSearchFocusIndex + 1, this.currentSearchTreeElements.length);\n    this.jumpToMatch(newIndex);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    if (!this.currentSearchTreeElements.length) {\n      return;\n    }\n    const newIndex =\n        Platform.NumberUtilities.mod(this.currentSearchFocusIndex - 1, this.currentSearchTreeElements.length);\n    this.jumpToMatch(newIndex);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsWholeWordSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return true;\n  }\n}\n\nexport class ParsedJSON<T extends unknown = unknown> {\n  data: T;\n  prefix: string;\n  suffix: string;\n\n  constructor(data: T, prefix: string, suffix: string) {\n    this.data = data;\n    this.prefix = prefix;\n    this.suffix = suffix;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.json-view {\n  padding: 2px 6px;\n  overflow: auto;\n}\n\n/*# sourceURL=${import.meta.resolve('./jsonView.css')} */`;", "// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\n\nimport {FontView} from './FontView.js';\nimport {ImageView} from './ImageView.js';\nimport {JSONView} from './JSONView.js';\nimport {ResourceSourceFrame} from './ResourceSourceFrame.js';\nimport {XMLView} from './XMLView.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Preview Factory of the Sources panel if the data to preview can't be shown due to an error\n   */\n  failedToLoadData: 'Failed to load data',\n  /**\n   * @description Text in Preview Factory of the Sources panel if there's no data to preview\n   */\n  nothingToPreview: 'Nothing to preview',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/PreviewFactory.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class PreviewFactory {\n  static async createPreview(provider: TextUtils.ContentProvider.ContentProvider, mimeType: string):\n      Promise<UI.Widget.Widget|null> {\n    let resourceType = Common.ResourceType.ResourceType.fromMimeType(mimeType);\n    if (resourceType === Common.ResourceType.resourceTypes.Other) {\n      resourceType = provider.contentType();\n    }\n\n    switch (resourceType) {\n      case Common.ResourceType.resourceTypes.Image:\n        return new ImageView(mimeType, provider);\n      case Common.ResourceType.resourceTypes.Font:\n        return new FontView(mimeType, provider);\n    }\n\n    const contentData = await provider.requestContentData();\n    if (TextUtils.ContentData.ContentData.isError(contentData)) {\n      return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.failedToLoadData), contentData.error);\n    }\n    if (!contentData.isTextContent) {\n      return null;\n    }\n\n    if (!contentData.text) {\n      return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.nothingToPreview), '');\n    }\n\n    const parsedXML = XMLView.parseXML(contentData.text, contentData.mimeType);\n    if (parsedXML) {\n      return XMLView.createSearchableView(parsedXML);\n    }\n\n    const jsonView = await JSONView.createView(contentData.text);\n    if (jsonView) {\n      return jsonView;\n    }\n\n    const highlighterType =\n        mimeType.replace(/;.*/, '') /* remove charset */ || provider.contentType().canonicalMimeType();\n    return ResourceSourceFrame.createSearchableView(provider, highlighterType);\n  }\n}\n", "// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as Lit from '../../../lit/lit.js';\nimport * as UI from '../../legacy.js';\n\nimport xmlTreeStyles from './xmlTree.css.js';\nimport xmlViewStyles from './xmlView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text to find an item\n   */\n  find: 'Find',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/XMLView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst {render, html} = Lit;\nfunction* attributes(element: Element): Generator<Attr> {\n  for (let i = 0; i < element.attributes.length; ++i) {\n    const attributeNode = element.attributes.item(i);\n    if (attributeNode) {\n      yield attributeNode;\n    }\n  }\n}\n\nfunction hasNonTextChildren(node: Node): boolean {\n  return node.childNodes.length !== node.childTextNodes.length;\n}\n\nfunction textView(treeNode: XMLTreeViewNode, closeTag: boolean): string {\n  const {node} = treeNode;\n\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE:\n      if (node instanceof Element) {\n        const tag = node.tagName;\n        return closeTag ?\n            hasNonTextChildren(node) || node.textContent ? '</' + tag + '>' : '' :\n            `${'<' + tag}${\n                attributes(node)\n                    .map(attributeNode => `${'\\xA0'}${attributeNode.name}${'=\"'}${attributeNode.value}${'\"'}`)\n                    .toArray()\n                    .join('')}${\n                hasNonTextChildren(node) ? '' :\n                    node.textContent     ? `${'>'}${node.textContent}${'</' + tag}` :\n                                           `${' /'}`}${'>'}`;\n      }\n      return '';\n    case Node.TEXT_NODE:\n      return node.nodeValue && !closeTag ? `${node.nodeValue}` : '';\n    case Node.CDATA_SECTION_NODE:\n      return node.nodeValue && !closeTag ? `${'<![CDATA['}${node.nodeValue}${']]>'}` : '';\n    case Node.PROCESSING_INSTRUCTION_NODE:\n      return node.nodeValue && !closeTag ? `${'<?' + node.nodeName + ' ' + node.nodeValue + '?>'}` : '';\n    case Node.COMMENT_NODE:\n      return !closeTag ? `${'<!--' + node.nodeValue + '-->'}` : '';\n  }\n  return '';\n}\n\nfunction htmlView(treeNode: XMLTreeViewNode): Lit.LitTemplate {\n  const {node} = treeNode;\n\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE:\n      if (node instanceof Element) {\n        const tag = node.tagName;\n        return html`<span part='shadow-xml-view-tag'>${'<' + tag}</span>${\n            attributes(node).map(attributeNode => html`<span part='shadow-xml-view-tag'>${'\\xA0'}</span>\n                <span part='shadow-xml-view-attribute-name'>${attributeNode.name}</span>\n                <span part='shadow-xml-view-tag'>${'=\"'}</span>\n                <span part='shadow-xml-view-attribute-value'>${attributeNode.value}</span>\n                <span part='shadow-xml-view-tag'>${'\"'}</span>`)}\n                <span ?hidden=${treeNode.expanded}>${\n            hasNonTextChildren(node) ? html`<span part='shadow-xml-view-tag'>${'>'}</span>\n                  <span part='shadow-xml-view-comment'>${'…'}</span>\n                  <span part='shadow-xml-view-tag'>${'</' + tag}</span>` :\n                node.textContent ? html`<span part='shadow-xml-view-tag'>${'>'}</span>\n                  <span part='shadow-xml-view-text'>${node.textContent}</span>\n                  <span part='shadow-xml-view-tag'>${'</' + tag}</span>` :\n                                   html`<span part='shadow-xml-view-tag'>${' /'}</span>`}</span>\n                <span part='shadow-xml-view-tag'>${'>'}</span>`;\n      }\n      return Lit.nothing;\n    case Node.TEXT_NODE:\n      return node.nodeValue ? html`<span part='shadow-xml-view-text'>${node.nodeValue}</span>` : Lit.nothing;\n    case Node.CDATA_SECTION_NODE:\n      return node.nodeValue ? html`<span part='shadow-xml-view-cdata'>${'<![CDATA['}</span>\n          <span part='shadow-xml-view-text'>${node.nodeValue}</span>\n          <span part='shadow-xml-view-cdata'>${']]>'}</span>` :\n                              Lit.nothing;\n    case Node.PROCESSING_INSTRUCTION_NODE:\n      return node.nodeValue ? html`<span part='shadow-xml-view-processing-instruction'>${\n                                  '<?' + node.nodeName + ' ' + node.nodeValue + '?>'}</span>` :\n                              Lit.nothing;\n    case Node.COMMENT_NODE:\n      return html`<span part='shadow-xml-view-comment'>${'<!--' + node.nodeValue + '-->'}</span>`;\n  }\n  return Lit.nothing;\n}\n\ninterface ViewInput {\n  onExpand(node: XMLTreeViewNode, expanded: boolean): void;\n  xml: XMLTreeViewNode;\n  search: UI.TreeOutline.TreeSearch<XMLTreeViewNode, SearchResult>|undefined;\n  jumpToNextSearchResult: SearchResult|undefined;\n}\nexport type View = (input: ViewInput, output: object, target: HTMLElement) => void;\nexport const DEFAULT_VIEW: View = (input, output, target) => {\n  function highlight(node: XMLTreeViewNode, closeTag: boolean): ReturnType<typeof Lit.Directives.ref> {\n    if (!input.search) {\n      return Lit.nothing;\n    }\n    const entries = input.search.getResults(node);\n    const highlights = [];\n    let selected = undefined;\n    for (const entry of entries ?? []) {\n      if (entry.isPostOrderMatch === closeTag) {\n        const range = new TextUtils.TextRange.SourceRange(entry.match.index, entry.match[0].length);\n        if (entry === input.jumpToNextSearchResult) {\n          selected = range;\n        } else {\n          highlights.push(range);\n        }\n      }\n    }\n    return UI.TreeOutline.TreeSearch.highlight(highlights, selected);\n  }\n\n  function layOutNode(node: XMLTreeViewNode, populateSubtrees = false): Lit.LitTemplate {\n    const onExpand = (event: UI.TreeOutline.TreeViewElement.ExpandEvent): void =>\n        input.onExpand(node, event.detail.expanded);\n\n    // clang-format off\n    return html`\n      <li ${highlight(node, /* closeTag=*/ false)} role=\"treeitem\"\n          ?selected=${input.jumpToNextSearchResult?.node === node}\n          @expand=${onExpand}>\n        ${htmlView(node)}\n        ${node.children().length ? html`\n          <ul role=\"group\" ?hidden=${!node.expanded}>\n            ${populateSubtrees || input.search ? subtree(node) : Lit.nothing}\n          </ul>` : Lit.nothing}\n      </li>`;\n    // clang-format on\n  }\n\n  function subtree(treeNode: XMLTreeViewNode): Lit.LitTemplate {\n    const children = treeNode.children();\n    if (children.length === 0) {\n      return Lit.nothing;\n    }\n    // clang-format off\n    return html`\n      ${children.map(child => layOutNode(child, treeNode.expanded))}\n      ${treeNode.node instanceof Element\n          ? html`<li\n                  ${highlight(treeNode, /* closeTag=*/ true)}\n                  role=\"treeitem\"><span part='shadow-xml-view-close-tag'>${'</' + treeNode.node.tagName + '>'}</span\n                 ></li>`\n          : Lit.nothing}`;\n    // clang-format on\n  }\n\n  // clang-format off\n  render(\n      html`\n    <style>${xmlViewStyles}</style>\n    <style>${xmlTreeStyles}</style>\n    <devtools-tree\n      class=\"shadow-xml-view source-code\"\n      .template=${html`\n        <ul role=\"tree\">\n          ${input.xml.children().map(node => layOutNode(node, /* populateSubtrees=*/ true))}\n        </ul>`}\n      ></devtools-tree>`,\n      // clang-format on\n      target);\n};\n\nfunction* children(xmlNode: Node|ParentNode|undefined): Generator<Node> {\n  if (!xmlNode || !hasNonTextChildren(xmlNode)) {\n    return;\n  }\n  let node: (ChildNode|null) = xmlNode?.firstChild;\n  while (node) {\n    const currentNode = node;\n    node = node.nextSibling;\n    const nodeType = currentNode.nodeType;\n    // ignore empty TEXT\n    if (nodeType === Node.TEXT_NODE && currentNode.nodeValue?.match(/\\s+/)) {\n      continue;\n    }\n    // ignore ATTRIBUTE, ENTITY_REFERENCE, ENTITY, DOCUMENT, DOCUMENT_TYPE, DOCUMENT_FRAGMENT, NOTATION\n    if ((nodeType !== Node.ELEMENT_NODE) && (nodeType !== Node.TEXT_NODE) && (nodeType !== Node.CDATA_SECTION_NODE) &&\n        (nodeType !== Node.PROCESSING_INSTRUCTION_NODE) && (nodeType !== Node.COMMENT_NODE)) {\n      continue;\n    }\n    yield currentNode;\n  }\n}\n\nexport class XMLTreeViewNode {\n  readonly node: Node|ParentNode;\n  expanded = false;\n  #children?: XMLTreeViewNode[];\n\n  constructor(node: Node|ParentNode) {\n    this.node = node;\n  }\n\n  children(): XMLTreeViewNode[] {\n    if (!this.#children) {\n      this.#children = children(this.node).map(node => new XMLTreeViewNode(node)).toArray();\n    }\n    return this.#children;\n  }\n\n  match(regex: RegExp, closeTag: boolean): RegExpStringIterator<RegExpExecArray> {\n    return textView(this, closeTag).matchAll(regex);\n  }\n}\n\nexport class XMLTreeViewModel {\n  readonly xmlDocument: Document;\n  readonly root: XMLTreeViewNode;\n\n  constructor(parsedXML: Document) {\n    this.xmlDocument = parsedXML;\n    this.root = new XMLTreeViewNode(parsedXML);\n    this.root.expanded = true;\n  }\n}\n\ninterface SearchResult extends UI.TreeOutline.TreeSearchResult<XMLTreeViewNode> {\n  match: RegExpExecArray;\n}\n\nexport class XMLView extends UI.Widget.Widget implements UI.SearchableView.Searchable {\n  private searchableView: UI.SearchableView.SearchableView|null = null;\n  #search: UI.TreeOutline.TreeSearch<XMLTreeViewNode, SearchResult>|undefined;\n  #treeViewModel: XMLTreeViewModel|undefined;\n  readonly #view: View;\n  #nextJump: SearchResult|undefined;\n\n  constructor(target?: HTMLElement, view: View = DEFAULT_VIEW) {\n    super(target, {jslog: 'xml-view', classes: ['shadow-xml-view', 'source-code']});\n    this.#view = view;\n  }\n\n  set parsedXML(parsedXML: Document) {\n    if (this.#treeViewModel?.xmlDocument !== parsedXML) {\n      this.#treeViewModel = new XMLTreeViewModel(parsedXML);\n      this.requestUpdate();\n    }\n  }\n\n  override performUpdate(): void {\n    if (this.#treeViewModel) {\n      const onExpand = (node: XMLTreeViewNode, expanded: boolean): void => {\n        node.expanded = expanded;\n        this.requestUpdate();\n      };\n      this.#view(\n          {xml: this.#treeViewModel.root, onExpand, search: this.#search, jumpToNextSearchResult: this.#nextJump}, {},\n          this.contentElement);\n    }\n  }\n\n  static createSearchableView(parsedXML: Document): UI.SearchableView.SearchableView {\n    const xmlView = new XMLView();\n    xmlView.parsedXML = parsedXML;\n    const searchableView = new UI.SearchableView.SearchableView(xmlView, null);\n    searchableView.setPlaceholder(i18nString(UIStrings.find));\n    xmlView.searchableView = searchableView;\n    xmlView.show(searchableView.element);\n    return searchableView;\n  }\n\n  static parseXML(text: string, mimeType: string): Document|null {\n    let parsedXML;\n    try {\n      switch (mimeType) {\n        case 'application/xhtml+xml':\n        case 'application/xml':\n        case 'image/svg+xml':\n        case 'text/html':\n        case 'text/xml':\n          parsedXML = (new DOMParser()).parseFromString(text, mimeType);\n      }\n    } catch {\n      return null;\n    }\n    if (!parsedXML || parsedXML.body) {\n      return null;\n    }\n    return parsedXML;\n  }\n\n  onSearchCanceled(): void {\n    this.#search = undefined;\n    this.searchableView?.updateSearchMatchesCount(0);\n    this.searchableView?.updateCurrentMatchIndex(0);\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void {\n    if (!this.#treeViewModel || !this.searchableView) {\n      return;\n    }\n    const {regex} = searchConfig.toSearchRegex(true);\n    if (!this.#search) {\n      this.#search = new UI.TreeOutline.TreeSearch();\n    }\n    this.#search.search(\n        this.#treeViewModel.root, jumpBackwards ?? false,\n        (node, closeTag) =>\n            node.match(regex, closeTag)\n                .map((match, matchIndexInNode) => ({node, matchIndexInNode, isPostOrderMatch: closeTag, match}))\n                .toArray());\n    this.#nextJump = shouldJump ? this.#search.currentMatch() : undefined;\n    this.#search.updateSearchableView(this.searchableView);\n    this.requestUpdate();\n  }\n\n  jumpToNextSearchResult(): void {\n    this.#nextJump = this.#search?.next();\n    this.searchableView && this.#search?.updateSearchableView(this.searchableView);\n    this.requestUpdate();\n  }\n\n  jumpToPreviousSearchResult(): void {\n    this.#nextJump = this.#search?.prev();\n    this.searchableView && this.#search?.updateSearchableView(this.searchableView);\n    this.requestUpdate();\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsWholeWordSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return true;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n.tree-outline ol {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  padding-inline-start: 16px;\n}\n\nol.tree-outline {\n  padding-inline-start: 0;\n}\n\n.tree-outline li {\n  min-height: 12px;\n}\n\n::part(shadow-xml-view-close-tag) {\n  margin-left: -16px;\n}\n\n::part(shadow-xml-view-close-tag),::part(shadow-xml-view-tag) {\n  color: var(--sys-color-purple);\n}\n\n::part(shadow-xml-view-comment) {\n  color: var(--sys-color-green);\n}\n\n::part(shadow-xml-view-processing-instruction) {\n  color: var(--sys-color-green);\n}\n\n::part(shadow-xml-view-attribute-name) {\n  color: var(--sys-color-orange);\n}\n\n::part(shadow-xml-view-attribute-value) {\n  color: var(--sys-color-blue);\n}\n\n::part(shadow-xml-view-text) {\n  color: var(--sys-color-on-surface);\n  white-space: pre;\n}\n\n::part(shadow-xml-view-cdata) {\n  color: var(--sys-color-on-surface);\n}\n}\n\n/*# sourceURL=${import.meta.resolve('./xmlTree.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2014 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n.shadow-xml-view {\n  user-select: text;\n  overflow: auto;\n  padding: 0;\n}\n}\n\n/*# sourceURL=${import.meta.resolve('./xmlView.css')} */`;"],
  "mappings": "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",
  "names": ["TextUtils", "Common", "i18n", "TextUtils", "UI", "state", "deco", "UIStrings", "str_", "i18nString", "TextUtils", "UI", "i18n", "Platform", "TextUtils", "VisualLogging", "UI", "UIStrings", "str_", "i18nString", "Common", "Host", "i18n", "Platform", "TextUtils", "VisualLogging", "UI", "UIStrings", "str_", "i18nString", "file", "i18n", "Platform", "SDK", "VisualLogging", "UI", "UIStrings", "str_", "i18nString", "Common", "i18n", "TextUtils", "UI", "i18n", "TextUtils", "UI", "UIStrings", "str_", "i18nString", "children", "UIStrings", "str_", "i18nString"]
}
