{"version":3,"file":"BinaryResourceViewFactory.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/source_frame/BinaryResourceViewFactory.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport {raf} from '../../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../../testing/EnvironmentHelpers.js';\n\nimport * as SourceFrame from './source_frame.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\ndescribeWithEnvironment('BinaryResourceViewFactory', () => {\n  it('interprets base64 content correctly', async () => {\n    const base64content = new TextUtils.ContentData.ContentData(\n        'c2VuZGluZyB0aGlzIHV0Zi04IHN0cmluZyBhcyBhIGJpbmFyeSBtZXNzYWdlLi4u', true, '');\n    const factory = new SourceFrame.BinaryResourceViewFactory.BinaryResourceViewFactory(\n        TextUtils.StreamingContentData.StreamingContentData.from(base64content), urlString`http://example.com`,\n        Common.ResourceType.resourceTypes.WebSocket);\n\n    async function getResourceText(view: SourceFrame.ResourceSourceFrame.ResourceSourceFrame): Promise<string> {\n      const contentData =\n          TextUtils.ContentData.ContentData.contentDataOrEmpty(await view.resource.requestContentData());\n      return contentData.text;\n    }\n\n    assert.strictEqual(\n        await getResourceText(factory.createBase64View()),\n        'c2VuZGluZyB0aGlzIHV0Zi04IHN0cmluZyBhcyBhIGJpbmFyeSBtZXNzYWdlLi4u');\n    assert.instanceOf(factory.createHexView(), SourceFrame.StreamingContentHexView.StreamingContentHexView);\n    assert.strictEqual(\n        await getResourceText(factory.createUtf8View()), 'sending this utf-8 string as a binary message...');\n  });\n\n  it('returns the right content for the \"copy-to-clipboard\" getters', async () => {\n    const base64content = new TextUtils.ContentData.ContentData(\n        'c2VuZGluZyB0aGlzIHV0Zi04IHN0cmluZyBhcyBhIGJpbmFyeSBtZXNzYWdlLi4u', true, '');\n    const factory = new SourceFrame.BinaryResourceViewFactory.BinaryResourceViewFactory(\n        TextUtils.StreamingContentData.StreamingContentData.from(base64content), urlString`http://example.com`,\n        Common.ResourceType.resourceTypes.WebSocket);\n\n    assert.strictEqual(factory.base64(), 'c2VuZGluZyB0aGlzIHV0Zi04IHN0cmluZyBhcyBhIGJpbmFyeSBtZXNzYWdlLi4u');\n    assert.strictEqual(\n        factory.hex(),\n        '73656e64696e672074686973207574662d3820737472696e6720617320612062696e617279206d6573736167652e2e2e');\n    assert.strictEqual(factory.utf8(), 'sending this utf-8 string as a binary message...');\n  });\n\n  it('produces views for utf8/base64 that update when the StreamingContentData changes', async () => {\n    const base64content = new TextUtils.ContentData.ContentData(\n        'c2VuZGluZyB0aGlzIHV0Zi04IHN0cmluZyBhcyBhIGJpbmFyeSBtZXNzYWdlLi4u', true, '');\n    const streamingContent = TextUtils.StreamingContentData.StreamingContentData.from(base64content);\n    const factory = new SourceFrame.BinaryResourceViewFactory.BinaryResourceViewFactory(\n        streamingContent, urlString`http://example.com`, Common.ResourceType.resourceTypes.WebSocket);\n\n    const utf8View = factory.createUtf8View();\n    utf8View.markAsRoot();\n    utf8View.show(document.body);\n    const base64View = factory.createBase64View();\n    base64View.markAsRoot();\n    base64View.show(document.body);\n\n    await raf();\n    assert.strictEqual(utf8View.textEditor.state.doc.toString(), 'sending this utf-8 string as a binary message...');\n    assert.strictEqual(\n        base64View.textEditor.state.doc.toString(), 'c2VuZGluZyB0aGlzIHV0Zi04IHN0cmluZyBhcyBhIGJpbmFyeSBtZXNzYWdlLi4u');\n\n    streamingContent.addChunk(window.btoa('\\nadded another line'));\n\n    await raf();\n    assert.strictEqual(\n        utf8View.textEditor.state.doc.toString(),\n        'sending this utf-8 string as a binary message...\\nadded another line');\n    assert.strictEqual(\n        base64View.textEditor.state.doc.toString(),\n        'c2VuZGluZyB0aGlzIHV0Zi04IHN0cmluZyBhcyBhIGJpbmFyeSBtZXNzYWdlLi4uCmFkZGVkIGFub3RoZXIgbGluZQ==');\n\n    utf8View.detach();\n    base64View.detach();\n  });\n});\n"]}