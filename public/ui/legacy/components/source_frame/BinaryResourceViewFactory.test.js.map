{"version":3,"file":"BinaryResourceViewFactory.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/source_frame/BinaryResourceViewFactory.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,mCAAmC,CAAC;AAE5D,OAAO,KAAK,SAAS,MAAM,6CAA6C,CAAC;AACzE,OAAO,EAAC,uBAAuB,EAAC,MAAM,2CAA2C,CAAC;AAElF,OAAO,KAAK,WAAW,MAAM,mBAAmB,CAAC;AAEjD,uBAAuB,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACxD,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;QACnD,MAAM,aAAa,GAAG,kEAAkE,CAAC;QACzF,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC,yBAAyB,CAAC,yBAAyB,CAC/E,aAAa,EAAE,oBAAuD,EACtE,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAEjD,KAAK,UAAU,eAAe,CAAC,IAAyD;YACtF,MAAM,WAAW,GACb,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC;YACnG,OAAO,WAAW,CAAC,IAAI,CAAC;QAC1B,CAAC;QAED,MAAM,CAAC,WAAW,CACd,MAAM,eAAe,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,EACjD,kEAAkE,CAAC,CAAC;QACxE,MAAM,CAAC,WAAW,CACd,MAAM,eAAe,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,EAC9C;;;CAGP,CAAC,CAAC;QACC,MAAM,CAAC,WAAW,CACd,MAAM,eAAe,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,EAAE,kDAAkD,CAAC,CAAC;IAC3G,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport {describeWithEnvironment} from '../../../../testing/EnvironmentHelpers.js';\n\nimport * as SourceFrame from './source_frame.js';\n\ndescribeWithEnvironment('BinaryResourceViewFactory', () => {\n  it('interprets base64 content correctly', async () => {\n    const base64content = 'c2VuZGluZyB0aGlzIHV0Zi04IHN0cmluZyBhcyBhIGJpbmFyeSBtZXNzYWdlLi4u';\n    const factory = new SourceFrame.BinaryResourceViewFactory.BinaryResourceViewFactory(\n        base64content, 'http://example.com' as Platform.DevToolsPath.UrlString,\n        Common.ResourceType.resourceTypes.WebSocket);\n\n    async function getResourceText(view: SourceFrame.ResourceSourceFrame.ResourceSourceFrame): Promise<string> {\n      const contentData =\n          TextUtils.ContentData.ContentData.contentDataOrEmpty(await view.resource.requestContentData());\n      return contentData.text;\n    }\n\n    assert.strictEqual(\n        await getResourceText(factory.createBase64View()),\n        'c2VuZGluZyB0aGlzIHV0Zi04IHN0cmluZyBhcyBhIGJpbmFyeSBtZXNzYWdlLi4u');\n    assert.strictEqual(\n        await getResourceText(factory.createHexView()),\n        `00000000: 7365 6e64 696e 6720 7468 6973 2075 7466  sending this utf\n00000001: 2d38 2073 7472 696e 6720 6173 2061 2062  -8 string as a b\n00000002: 696e 6172 7920 6d65 7373 6167 652e 2e2e  inary message...\n`);\n    assert.strictEqual(\n        await getResourceText(factory.createUtf8View()), 'sending this utf-8 string as a binary message...');\n  });\n});\n"]}