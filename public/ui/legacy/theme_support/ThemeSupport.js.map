{"version":3,"file":"ThemeSupport.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/legacy/theme_support/ThemeSupport.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2011 Google Inc.  All rights reserved.\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2007 Matt Lilek (pewtermoose@gmail.com).\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport inspectorSyntaxHighlightStyles from '../inspectorSyntaxHighlight.css.legacy.js';\n\nlet themeSupportInstance: ThemeSupport;\n\nconst themeValueByTargetByName = new Map<Element|null, Map<string, string>>();\n\nexport class ThemeSupport extends EventTarget {\n  private themeNameInternal = 'default';\n  private customSheets: Set<string> = new Set();\n  private computedStyleOfHTML = Common.Lazy.lazy(() => window.getComputedStyle(document.documentElement));\n\n  private constructor(private setting: Common.Settings.Setting<string>) {\n    super();\n  }\n\n  static hasInstance(): boolean {\n    return typeof themeSupportInstance !== 'undefined';\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    setting: Common.Settings.Setting<string>|null,\n  } = {forceNew: null, setting: null}): ThemeSupport {\n    const {forceNew, setting} = opts;\n    if (!themeSupportInstance || forceNew) {\n      if (!setting) {\n        throw new Error(`Unable to create theme support: setting must be provided: ${new Error().stack}`);\n      }\n\n      themeSupportInstance = new ThemeSupport(setting);\n    }\n\n    return themeSupportInstance;\n  }\n\n  getComputedValue(propertyName: string, target: Element|null = null): string {\n    // Since we might query the same property name from various targets we need to support\n    // per-target caching of computed values. Here we attempt to locate the particular computed\n    // value cache for the target element. If no target was specified we use the default computed root,\n    // which belongs to the documentElement.\n    let themeValueByName = themeValueByTargetByName.get(target);\n    if (!themeValueByName) {\n      themeValueByName = new Map<string, string>();\n      themeValueByTargetByName.set(target, themeValueByName);\n    }\n\n    // Since theme changes trigger a reload, we can avoid repeatedly looking up color values\n    // dynamically. Instead we can look up the first time and cache them for future use,\n    // knowing that the cache will be invalidated by virtue of a reload when the theme changes.\n    let themeValue = themeValueByName.get(propertyName);\n    if (!themeValue) {\n      const styleDeclaration = target ? window.getComputedStyle(target) : this.computedStyleOfHTML();\n      if (typeof styleDeclaration === 'symbol') {\n        throw new Error(`Computed value for property (${propertyName}) could not be found on documentElement.`);\n      }\n      themeValue = styleDeclaration.getPropertyValue(propertyName).trim();\n\n      // If we receive back an empty value (nothing has been set) we don't store it for the future.\n      // This means that subsequent requests will continue to query the styles in case the value\n      // has been set.\n      if (themeValue) {\n        themeValueByName.set(propertyName, themeValue);\n      }\n    }\n\n    return themeValue;\n  }\n\n  hasTheme(): boolean {\n    return this.themeNameInternal !== 'default';\n  }\n\n  themeName(): string {\n    return this.themeNameInternal;\n  }\n\n  injectHighlightStyleSheets(element: Element|ShadowRoot): void {\n    this.appendStyle(element, inspectorSyntaxHighlightStyles);\n  }\n\n  appendStyle(node: Node, {cssContent}: {cssContent: string}): void {\n    const styleElement = document.createElement('style');\n    styleElement.textContent = cssContent;\n    node.appendChild(styleElement);\n  }\n\n  injectCustomStyleSheets(element: Element|ShadowRoot): void {\n    for (const sheet of this.customSheets) {\n      const styleElement = document.createElement('style');\n      styleElement.textContent = sheet;\n      element.appendChild(styleElement);\n    }\n  }\n\n  addCustomStylesheet(sheetText: string): void {\n    this.customSheets.add(sheetText);\n  }\n\n  applyTheme(document: Document): void {\n    const isForcedColorsMode = window.matchMedia('(forced-colors: active)').matches;\n    const systemPreferredTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default';\n\n    const useSystemPreferred = this.setting.get() === 'systemPreferred' || isForcedColorsMode;\n    this.themeNameInternal = useSystemPreferred ? systemPreferredTheme : this.setting.get();\n\n    const wasDarkThemed = document.documentElement.classList.contains('-theme-with-dark-background');\n    document.documentElement.classList.toggle('-theme-with-dark-background', this.themeNameInternal === 'dark');\n\n    const isDarkThemed = document.documentElement.classList.contains('-theme-with-dark-background');\n\n    // In the event the theme changes we need to clear caches and notify subscribers.\n    if (wasDarkThemed !== isDarkThemed) {\n      themeValueByTargetByName.clear();\n      this.customSheets.clear();\n      this.dispatchEvent(new ThemeChangeEvent());\n    }\n\n    // Baseline is the name of Chrome's default color theme and there are two of these: default and grayscale.\n    // The collective name for the rest of the color themes is dynamic.\n    // In the baseline themes Chrome uses custom values for surface colors, whereas for dynamic themes these are color-mixed.\n    // To match Chrome we need to know if any of the baseline themes is currently active and assign specific values to surface colors.\n    const selectedTheme = getComputedStyle(document.body).getPropertyValue('--user-color-source');\n    document.documentElement.classList.toggle('baseline-default', selectedTheme === 'baseline-default');\n    document.documentElement.classList.toggle('baseline-grayscale', selectedTheme === 'baseline-grayscale');\n  }\n  static clearThemeCache(): void {\n    themeValueByTargetByName.clear();\n  }\n\n  static async fetchColors(document: Document|undefined): Promise<void> {\n    if (Host.InspectorFrontendHost.InspectorFrontendHostInstance.isHostedMode()) {\n      return;\n    }\n    if (!document) {\n      return;\n    }\n    const newColorsCssLink = document.createElement('link');\n    newColorsCssLink.setAttribute(\n        'href', `devtools://theme/colors.css?sets=ui,chrome&version=${(new Date()).getTime().toString()}`);\n    newColorsCssLink.setAttribute('rel', 'stylesheet');\n    newColorsCssLink.setAttribute('type', 'text/css');\n    const newColorsLoaded = new Promise<boolean>(resolve => {\n      newColorsCssLink.onload = resolve.bind(this, true);\n      newColorsCssLink.onerror = resolve.bind(this, false);\n    });\n    const COLORS_CSS_SELECTOR = 'link[href*=\\'//theme/colors.css\\']';\n    const colorCssNode = document.querySelector(COLORS_CSS_SELECTOR);\n    document.body.appendChild(newColorsCssLink);\n    if (await newColorsLoaded) {\n      if (colorCssNode) {\n        colorCssNode.remove();\n      }\n      ThemeSupport.instance().applyTheme(document);\n    }\n  }\n}\n\nexport class ThemeChangeEvent extends Event {\n  static readonly eventName = 'themechange';\n\n  constructor() {\n    super(ThemeChangeEvent.eventName, {bubbles: true, composed: true});\n  }\n}\n"]}