{"version":3,"file":"ProgressIndicator.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/ProgressIndicator.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAIH,OAAO,uBAAuB,MAAM,4BAA4B,CAAC;AACjE,OAAO,EAAC,8BAA8B,EAAC,MAAM,cAAc,CAAC;AAE5D,MAAM,OAAO,iBAAkB,SAAQ,WAAW;IACvC,WAAW,CAAa;IACxB,eAAe,CAAU;IAClC,aAAa,CAAU;IACvB,gBAAgB,CAAsB;IAC7B,WAAW,CAAW;IAC/B,WAAW,GAAG,KAAK,CAAC;IACpB,OAAO,GAAG,CAAC,CAAC;IACZ,OAAO,GAAG,KAAK,CAAC;IAEhB;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,8BAA8B,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,uBAAuB,EAAC,CAAC,CAAC;QAC5F,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,EAAE,qCAAqC,CAAC,CAAC;QAElG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACtE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACrE,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,CAAC,CAAC;QAEhC,oEAAoE;QACpE,uDAAuD;QACvD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,CAAC;YACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,EAAE,uCAAuC,CAAC,CAAC;YACvG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI;QACF,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,OAAO;QACT,CAAC;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,KAAK,CAAC;IACzC,CAAC;IAED,YAAY,CAAC,SAAiB;QAC5B,IAAI,CAAC,gBAAgB,CAAC,GAAG,GAAG,SAAS,CAAC;IACxC,CAAC;IAED,SAAS,CAAC,MAAc,EAAE,KAAc;QACtC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,MAAM,CAAC;QACrC,IAAI,KAAK,EAAE,CAAC;YACV,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC;IACH,CAAC;IAED,eAAe,CAAC,MAAe;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\n\nimport progressIndicatorStyles from './progressIndicator.css.js';\nimport {createShadowRootWithCoreStyles} from './UIUtils.js';\n\nexport class ProgressIndicator extends HTMLElement implements Common.Progress.Progress {\n  readonly #shadowRoot: ShadowRoot;\n  readonly #contentElement: Element;\n  #labelElement: Element;\n  #progressElement: HTMLProgressElement;\n  readonly #stopButton?: Element;\n  #isCanceled = false;\n  #worked = 0;\n  #isDone = false;\n\n  constructor() {\n    super();\n    this.#shadowRoot = createShadowRootWithCoreStyles(this, {cssFile: progressIndicatorStyles});\n    this.#contentElement = this.#shadowRoot.createChild('div', 'progress-indicator-shadow-container');\n\n    this.#labelElement = this.#contentElement.createChild('div', 'title');\n    this.#progressElement = this.#contentElement.createChild('progress');\n    this.#progressElement.value = 0;\n\n    // By default we show the stop button, but this can be controlled by\n    // using the 'no-stop-button' attribute on the element.\n    if (!this.hasAttribute('no-stop-button')) {\n      this.#stopButton = this.#contentElement.createChild('button', 'progress-indicator-shadow-stop-button');\n      this.#stopButton.addEventListener('click', this.cancel.bind(this));\n    }\n  }\n\n  connectedCallback(): void {\n    this.classList.add('progress-indicator');\n  }\n\n  done(): void {\n    if (this.#isDone) {\n      return;\n    }\n    this.#isDone = true;\n    this.remove();\n  }\n\n  cancel(): void {\n    this.#isCanceled = true;\n  }\n\n  isCanceled(): boolean {\n    return this.#isCanceled;\n  }\n\n  setTitle(title: string): void {\n    this.#labelElement.textContent = title;\n  }\n\n  setTotalWork(totalWork: number): void {\n    this.#progressElement.max = totalWork;\n  }\n\n  setWorked(worked: number, title?: string): void {\n    this.#worked = worked;\n    this.#progressElement.value = worked;\n    if (title) {\n      this.setTitle(title);\n    }\n  }\n\n  incrementWorked(worked?: number): void {\n    this.setWorked(this.#worked + (worked || 1));\n  }\n}\n\ncustomElements.define('devtools-progress', ProgressIndicator);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-progress': ProgressIndicator;\n  }\n}\n"]}