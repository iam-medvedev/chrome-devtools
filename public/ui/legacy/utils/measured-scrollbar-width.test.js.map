{"version":3,"file":"measured-scrollbar-width.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/legacy/utils/measured-scrollbar-width.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,OAAO,KAAK,EAAE,MAAM,cAAc,CAAC;AAEnC,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,IAAI,KAAuB,CAAC;IAC5B,MAAM,CAAC,GAAG,EAAE;QACV,EAAE,CAAC,KAAK,CAAC,kCAAkC,EAAE,CAAC;IAChD,CAAC,CAAC,CAAC;IACH,KAAK,CAAC,GAAG,EAAE;QACT,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAClC,MAAM,oBAAoB,GAAG,EAAE,CAAC;QAChC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,sBAAsB,EAAE,EAAE,oBAAoB,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,KAAK,GAAG,EAAE,CAAC;QAEjB,8CAA8C;QAC9C,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACxC,KAAK,CAAC,WAAW,GAAG;;eAET,KAAK;MACd,CAAC;QACH,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACjC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,sBAAsB,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;QAErE,yEAAyE;QACzE,KAAK,CAAC,MAAM,EAAE,CAAC;QACf,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,sBAAsB,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as UI from '../legacy.js';\n\ndescribe('measuredScrollbarWidth', () => {\n  let style: HTMLStyleElement;\n  before(() => {\n    UI.Utils.resetMeasuredScrollbarWidthForTest();\n  });\n  after(() => {\n    style.remove();\n  });\n\n  it('provides a default value', () => {\n    const expectedDefaultWidth = 16;\n    assert.strictEqual(UI.Utils.measuredScrollbarWidth(), expectedDefaultWidth);\n  });\n\n  it('calculates specific widths correctly', () => {\n    const width = 20;\n\n    // Enforce custom width on scrollbars to test.\n    style = document.createElement('style');\n    style.textContent = `::-webkit-scrollbar {\n      appearance: none;\n      width: ${width}px;\n    }`;\n    document.head.appendChild(style);\n    assert.strictEqual(UI.Utils.measuredScrollbarWidth(document), width);\n\n    // Remove the styles and try again to detect that cached values are used.\n    style.remove();\n    assert.strictEqual(UI.Utils.measuredScrollbarWidth(document), width);\n  });\n});\n"]}