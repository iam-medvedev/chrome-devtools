{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/issue_counter/IssueCounter.ts", "issueCounter.css.js", "../../../../../../../front_end/ui/components/issue_counter/IssueLinkIcon.ts", "issueLinkIcon.css.js"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../icon_button/icon_button.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as IssuesManager from '../../../models/issues_manager/issues_manager.js';\nimport {html, render} from '../../lit/lit.js';\nimport type * as IconButton from '../icon_button/icon_button.js';\n\nimport issueCounterStyles from './issueCounter.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Label for link to Issues tab, specifying how many issues there are.\n   */\n  pageErrors: '{issueCount, plural, =1 {# page error} other {# page errors}}',\n  /**\n   * @description Label for link to Issues tab, specifying how many issues there are.\n   */\n  breakingChanges: '{issueCount, plural, =1 {# breaking change} other {# breaking changes}}',\n  /**\n   * @description Label for link to Issues tab, specifying how many issues there are.\n   */\n  possibleImprovements: '{issueCount, plural, =1 {# possible improvement} other {# possible improvements}}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/components/issue_counter/IssueCounter.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport function getIssueKindIconData(issueKind: IssuesManager.Issue.IssueKind): IconButton.Icon.IconWithName {\n  switch (issueKind) {\n    case IssuesManager.Issue.IssueKind.PAGE_ERROR:\n      return {iconName: 'issue-cross-filled', color: 'var(--icon-error)', width: '20px', height: '20px'};\n    case IssuesManager.Issue.IssueKind.BREAKING_CHANGE:\n      return {iconName: 'issue-exclamation-filled', color: 'var(--icon-warning)', width: '20px', height: '20px'};\n    case IssuesManager.Issue.IssueKind.IMPROVEMENT:\n      return {iconName: 'issue-text-filled', color: 'var(--icon-info)', width: '20px', height: '20px'};\n  }\n}\n\nfunction toIconGroup({iconName, color, width, height}: IconButton.Icon.IconWithName, sizeOverride?: string):\n    IconButton.IconButton.IconWithTextData {\n  if (sizeOverride) {\n    return {iconName, iconColor: color, iconWidth: sizeOverride, iconHeight: sizeOverride};\n  }\n  return {iconName, iconColor: color, iconWidth: width, iconHeight: height};\n}\n\nexport const enum DisplayMode {\n  OMIT_EMPTY = 'OmitEmpty',\n  SHOW_ALWAYS = 'ShowAlways',\n  ONLY_MOST_IMPORTANT = 'OnlyMostImportant',\n}\n\nexport interface IssueCounterData {\n  clickHandler?: () => void;\n  tooltipCallback?: () => void;\n  leadingText?: string;\n  displayMode?: DisplayMode;\n  issuesManager: IssuesManager.IssuesManager.IssuesManager;\n  throttlerTimeout?: number;\n  accessibleName?: string;\n  compact?: boolean;\n}\n\n// Lazily instantiate the formatter as the constructor takes 50ms+\n// TODO: move me and others like me to i18n module\nconst listFormatter = (function defineFormatter() {\n  let intlListFormat: Intl.ListFormat;\n  return {\n    format(...args: Parameters<Intl.ListFormat['format']>): ReturnType<Intl.ListFormat['format']> {\n      if (!intlListFormat) {\n        const opts: Intl.ListFormatOptions = {type: 'unit', style: 'short'};\n        intlListFormat = new Intl.ListFormat(i18n.DevToolsLocale.DevToolsLocale.instance().locale, opts);\n      }\n      return intlListFormat.format(...args);\n    },\n  };\n})();\n\nexport function getIssueCountsEnumeration(\n    issuesManager: IssuesManager.IssuesManager.IssuesManager, omitEmpty = true): string {\n  const counts: [number, number, number] = [\n    issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.PAGE_ERROR),\n    issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.BREAKING_CHANGE),\n    issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.IMPROVEMENT),\n  ];\n  const phrases = [\n    i18nString(UIStrings.pageErrors, {issueCount: counts[0]}),\n    i18nString(UIStrings.breakingChanges, {issueCount: counts[1]}),\n    i18nString(UIStrings.possibleImprovements, {issueCount: counts[2]}),\n  ];\n  return listFormatter.format(phrases.filter((_, i) => omitEmpty ? counts[i] > 0 : true));\n}\n\nexport class IssueCounter extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #clickHandler: undefined|(() => void) = undefined;\n  #tooltipCallback: undefined|(() => void) = undefined;\n  #leadingText = '';\n  #throttler: undefined|Common.Throttler.Throttler;\n  #counts: [number, number, number] = [0, 0, 0];\n  #displayMode: DisplayMode = DisplayMode.OMIT_EMPTY;\n  #issuesManager: IssuesManager.IssuesManager.IssuesManager|undefined = undefined;\n  #accessibleName: string|undefined = undefined;\n  #throttlerTimeout: number|undefined;\n  #compact = false;\n\n  scheduleUpdate(): void {\n    if (this.#throttler) {\n      void this.#throttler.schedule(async () => this.#render());\n    } else {\n      this.#render();\n    }\n  }\n\n  set data(data: IssueCounterData) {\n    this.#clickHandler = data.clickHandler;\n    this.#leadingText = data.leadingText ?? '';\n    this.#tooltipCallback = data.tooltipCallback;\n    this.#displayMode = data.displayMode ?? DisplayMode.OMIT_EMPTY;\n    this.#accessibleName = data.accessibleName;\n    this.#throttlerTimeout = data.throttlerTimeout;\n    this.#compact = Boolean(data.compact);\n    if (this.#issuesManager !== data.issuesManager) {\n      this.#issuesManager?.removeEventListener(\n          IssuesManager.IssuesManager.Events.ISSUES_COUNT_UPDATED, this.scheduleUpdate, this);\n      this.#issuesManager = data.issuesManager;\n      this.#issuesManager.addEventListener(\n          IssuesManager.IssuesManager.Events.ISSUES_COUNT_UPDATED, this.scheduleUpdate, this);\n    }\n    if (data.throttlerTimeout !== 0) {\n      this.#throttler = new Common.Throttler.Throttler(data.throttlerTimeout ?? 100);\n    } else {\n      this.#throttler = undefined;\n    }\n    this.scheduleUpdate();\n  }\n\n  get data(): IssueCounterData {\n    return {\n      clickHandler: this.#clickHandler,\n      leadingText: this.#leadingText,\n      tooltipCallback: this.#tooltipCallback,\n      displayMode: this.#displayMode,\n      accessibleName: this.#accessibleName,\n      throttlerTimeout: this.#throttlerTimeout,\n      compact: this.#compact,\n      issuesManager: this.#issuesManager as IssuesManager.IssuesManager.IssuesManager,\n    };\n  }\n\n  #render(): void {\n    if (!this.#issuesManager) {\n      return;\n    }\n    this.#counts = [\n      this.#issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.PAGE_ERROR),\n      this.#issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.BREAKING_CHANGE),\n      this.#issuesManager.numberOfIssues(IssuesManager.Issue.IssueKind.IMPROVEMENT),\n    ];\n    const importance = [\n      IssuesManager.Issue.IssueKind.PAGE_ERROR,\n      IssuesManager.Issue.IssueKind.BREAKING_CHANGE,\n      IssuesManager.Issue.IssueKind.IMPROVEMENT,\n    ];\n    const mostImportant = importance[this.#counts.findIndex(x => x > 0) ?? 2];\n\n    const countToString = (kind: IssuesManager.Issue.IssueKind, count: number): string|undefined => {\n      switch (this.#displayMode) {\n        case DisplayMode.OMIT_EMPTY:\n          return count > 0 ? `${count}` : undefined;\n        case DisplayMode.SHOW_ALWAYS:\n          return `${count}`;\n        case DisplayMode.ONLY_MOST_IMPORTANT:\n          return kind === mostImportant ? `${count}` : undefined;\n      }\n    };\n    const iconSize = '2ex';\n    const data: IconButton.IconButton.IconButtonData = {\n      groups: [\n        {\n          ...toIconGroup(getIssueKindIconData(IssuesManager.Issue.IssueKind.PAGE_ERROR), iconSize),\n          text: countToString(IssuesManager.Issue.IssueKind.PAGE_ERROR, this.#counts[0]),\n        },\n        {\n          ...toIconGroup(getIssueKindIconData(IssuesManager.Issue.IssueKind.BREAKING_CHANGE), iconSize),\n          text: countToString(IssuesManager.Issue.IssueKind.BREAKING_CHANGE, this.#counts[1]),\n        },\n        {\n          ...toIconGroup(getIssueKindIconData(IssuesManager.Issue.IssueKind.IMPROVEMENT), iconSize),\n          text: countToString(IssuesManager.Issue.IssueKind.IMPROVEMENT, this.#counts[2]),\n        },\n      ],\n      clickHandler: this.#clickHandler,\n      leadingText: this.#leadingText,\n      accessibleName: this.#accessibleName,\n      compact: this.#compact,\n    };\n    render(\n        html`\n        <style>${issueCounterStyles}</style>\n        <icon-button .data=${data} .accessibleName=${this.#accessibleName}></icon-button>\n        `,\n        this.#shadow, {host: this});\n    this.#tooltipCallback?.();\n  }\n}\n\ncustomElements.define('devtools-issue-counter', IssueCounter);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-issue-counter': IssueCounter;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  white-space: normal;\n  display: inline-block;\n}\n\n/*# sourceURL=${import.meta.resolve('./issueCounter.css')} */`;", "// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/icon_button/icon_button.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as IssuesManager from '../../../models/issues_manager/issues_manager.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport {getIssueKindIconData} from './IssueCounter.js';\nimport IssueLinkIconStyles from './issueLinkIcon.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Title for a link to show an issue in the issues tab\n   */\n  clickToShowIssue: 'Click to show issue in the issues tab',\n  /**\n   * @description Title for a link to show an issue in the issues tab\n   * @example {A title of an Issue} title\n   */\n  clickToShowIssueWithTitle: 'Click to open the issue tab and show issue: {title}',\n  /**\n   * @description Title for an link to show an issue that is unavailable because the issue couldn't be resolved\n   */\n  issueUnavailable: 'Issue unavailable at this time',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/components/issue_counter/IssueLinkIcon.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface IssueLinkIconData {\n  issue?: IssuesManager.Issue.Issue|null;\n  issueId?: Protocol.Audits.IssueId;\n  issueResolver?: IssuesManager.IssueResolver.IssueResolver;\n  additionalOnClickAction?: () => void;\n  revealOverride?: (revealable: unknown, omitFocus?: boolean) => Promise<void>;\n}\n\nexport const extractShortPath = (path: string): string => {\n  // 1st regex matches everything after last '/'\n  // if path ends with '/', 2nd regex returns everything between the last two '/'\n  return (/[^/]+$/.exec(path) || /[^/]+\\/$/.exec(path) || [''])[0];\n};\n\nexport class IssueLinkIcon extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  // The value `null` indicates that the issue is not available,\n  // `undefined` that it is still being resolved.\n  #issue?: IssuesManager.Issue.Issue|null;\n  #issueTitle: string|null = null;\n  #issueId?: Protocol.Audits.IssueId;\n  #issueResolver?: IssuesManager.IssueResolver.IssueResolver;\n  #additionalOnClickAction?: () => void;\n  #reveal = Common.Revealer.reveal;\n\n  set data(data: IssueLinkIconData) {\n    this.#issue = data.issue;\n    this.#issueId = data.issueId;\n    this.#issueResolver = data.issueResolver;\n    if (!this.#issue) {\n      if (!this.#issueId) {\n        throw new Error('Either `issue` or `issueId` must be provided');\n      } else if (!this.#issueResolver) {\n        throw new Error('An `IssueResolver` must be provided if an `issueId` is provided.');\n      }\n    }\n    this.#additionalOnClickAction = data.additionalOnClickAction;\n    if (data.revealOverride) {\n      this.#reveal = data.revealOverride;\n    }\n    void this.#fetchIssueData();\n    void this.#render();\n  }\n\n  async #fetchIssueData(): Promise<void> {\n    if (!this.#issue && this.#issueId) {\n      try {\n        this.#issue = await this.#issueResolver?.waitFor(this.#issueId);\n      } catch {\n        this.#issue = null;\n      }\n    }\n    const description = this.#issue?.getDescription();\n    if (description) {\n      const title = await IssuesManager.MarkdownIssueDescription.getIssueTitleFromMarkdownDescription(description);\n      if (title) {\n        this.#issueTitle = title;\n      }\n    }\n    await this.#render();\n  }\n\n  get data(): IssueLinkIconData {\n    return {\n      issue: this.#issue,\n      issueId: this.#issueId,\n      issueResolver: this.#issueResolver,\n      additionalOnClickAction: this.#additionalOnClickAction,\n      revealOverride: this.#reveal !== Common.Revealer.reveal ? this.#reveal : undefined,\n    };\n  }\n\n  handleClick(event: MouseEvent): void {\n    if (event.button !== 0) {\n      return;  // Only handle left-click for now.\n    }\n    if (this.#issue) {\n      void this.#reveal(this.#issue);\n    }\n    this.#additionalOnClickAction?.();\n    event.consume();\n  }\n\n  #getTooltip(): Platform.UIString.LocalizedString {\n    if (this.#issueTitle) {\n      return i18nString(UIStrings.clickToShowIssueWithTitle, {title: this.#issueTitle});\n    }\n    if (this.#issue) {\n      return i18nString(UIStrings.clickToShowIssue);\n    }\n    return i18nString(UIStrings.issueUnavailable);\n  }\n\n  #getIconName(): string {\n    if (!this.#issue) {\n      return 'issue-questionmark-filled';\n    }\n    const {iconName} = getIssueKindIconData(this.#issue.getKind());\n    return iconName;\n  }\n\n  #render(): Promise<void> {\n    return RenderCoordinator.write(() => {\n      // clang-format off\n      Lit.render(html`\n      <style>${IssueLinkIconStyles}</style>\n      <button class=${Lit.Directives.classMap({link: Boolean(this.#issue)})}\n              title=${this.#getTooltip()}\n              jslog=${VisualLogging.link('issue').track({click: true})}\n              @click=${this.handleClick}>\n        <devtools-icon name=${this.#getIconName()}></devtools-icon>\n      </button>`,\n      this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n}\n\ncustomElements.define('devtools-issue-link-icon', IssueLinkIcon);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-issue-link-icon': IssueLinkIcon;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: inline-block;\n  white-space: nowrap;\n  color: inherit;\n  font-size: inherit;\n  font-family: inherit;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\nbutton {\n  border: none;\n  background: transparent;\n  margin: 0;\n  padding: 0;\n\n  &.link {\n    cursor: pointer;\n\n    & > span {\n      color: var(--sys-color-primary);\n    }\n  }\n}\n\ndevtools-icon {\n  width: 16px;\n  height: 16px;\n  vertical-align: middle;\n\n  &[name=\"issue-cross-filled\"] {\n    color: var(--icon-error);\n  }\n\n  &[name=\"issue-exclamation-filled\"] {\n    color: var(--icon-warning);\n  }\n\n  &[name=\"issue-text-filled\"] {\n    color: var(--icon-info);\n  }\n}\n\n@media (forced-colors: active) {\n  devtools-icon {\n    color: ButtonText;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./issueLinkIcon.css')} */`;"],
  "mappings": "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",
  "names": ["Common", "i18n", "IssuesManager", "html", "UIStrings", "str_", "i18nString"]
}
