{"version":3,"file":"PanelIntroductionSteps.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/panel_introduction_steps/PanelIntroductionSteps.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,gBAAgB,MAAM,qCAAqC,CAAC;AACxE,OAAO,EAAC,IAAI,EAAE,MAAM,EAAC,MAAM,kBAAkB,CAAC;AAE9C,OAAO,+BAA+B,MAAM,iCAAiC,CAAC;AAE9E,4EAA4E;AAC5E,MAAM,4BAA4B,GAAG,IAAI,aAAa,EAAE,CAAC;AACzD,4BAA4B,CAAC,WAAW,CAAC,+BAA+B,CAAC,UAAU,CAAC,CAAC;AAErF,MAAM,OAAO,sBAAuB,SAAQ,WAAW;IAC5C,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAC5C,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEhD,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,4BAA4B,CAAC,CAAC;QACjE,KAAK,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAChF,CAAC;IAED,OAAO;QACL,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC;YAC9D,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;QAC7D,CAAC;QAED,mBAAmB;QACnB,MAAM,CAAC,IAAI,CAAA;;;;;;;;KAQV,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAC/B,kBAAkB;IACpB,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,mCAAmC,EAAE,sBAAsB,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../components/helpers/helpers.js';\nimport {html, render} from '../../lit/lit.js';\n\nimport panelIntroductionStepsStylesRaw from './panelIntroductionSteps.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst panelIntroductionStepsStyles = new CSSStyleSheet();\npanelIntroductionStepsStyles.replaceSync(panelIntroductionStepsStylesRaw.cssContent);\n\nexport class PanelIntroductionSteps extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [panelIntroductionStepsStyles];\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('FeedbackButton render was not scheduled');\n    }\n\n    // clang-format off\n    render(html`\n      <h1><slot name=\"title\">slot: title</slot></h1>\n\n      <ol class=\"intro-steps\">\n        <li><slot name=\"step-1\">slot: step-1</slot></li>\n        <li><slot name=\"step-2\">slot: step-2</slot></li>\n        <li><slot name=\"step-3\">slot: step-3</slot></li>\n      </ol>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-panel-introduction-steps', PanelIntroductionSteps);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-panel-introduction-steps': PanelIntroductionSteps;\n  }\n}\n"]}