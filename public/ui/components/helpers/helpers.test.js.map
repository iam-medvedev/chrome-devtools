{"version":3,"file":"helpers.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/helpers/helpers.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {html, render} from '../../lit/lit.js';\nimport * as RenderCoordinator from '../render_coordinator/render_coordinator.js';\n\nimport * as ComponentHelpers from './helpers.js';\n\nconst TestElement = class extends HTMLElement {\n  renderCount = 0;\n  renderAsyncCount = 0;\n  readonly renderBound = this.#render.bind(this);\n  readonly renderAsyncBound = this.#renderAsync.bind(this);\n  #render() {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('Render is not scheduled');\n    }\n\n    this.renderCount++;\n  }\n  #renderAsync() {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('Render is not scheduled');\n    }\n\n    return new Promise<void>(resolve => {\n      setTimeout(() => {\n        this.renderAsyncCount++;\n        resolve();\n      }, 40);\n    });\n  }\n};\ncustomElements.define('x-devtools-test-element', TestElement);\n\ndescribe('ComponentHelpers', () => {\n  describe('Directives', () => {\n    describe('nodeRenderedCallback', () => {\n      it('runs when any node is rendered', () => {\n        const targetDiv = document.createElement('div');\n        const callback = sinon.spy();\n        function fakeComponentRender(this: HTMLDivElement) {\n          render(\n              // clang-format off\n              html`\n              <span on-render=${ComponentHelpers.Directives.nodeRenderedCallback(callback)}>\n               hello world\n              </span>`,\n              // clang-format on\n              targetDiv, {host: this});\n        }\n        fakeComponentRender.call(targetDiv);\n        assert.isNotEmpty(targetDiv.innerHTML);\n        assert.strictEqual(callback.callCount, 1);\n      });\n\n      it('runs again when Lit re-renders', () => {\n        const targetDiv = document.createElement('div');\n        const callback = sinon.spy();\n        function fakeComponentRender(this: HTMLDivElement, output: string) {\n          render(\n              // clang-format off\n              html`\n              <span on-render=${ComponentHelpers.Directives.nodeRenderedCallback(callback)}>\n               ${output}\n              </span>`,\n              // clang-format on\n              targetDiv, {host: this});\n        }\n        fakeComponentRender.call(targetDiv, 'render one');\n        assert.strictEqual(callback.callCount, 1);\n        fakeComponentRender.call(targetDiv, 'render two');\n        assert.strictEqual(callback.callCount, 2);\n      });\n    });\n  });\n\n  describe('scheduleRender', () => {\n    it('throws if renders are unscheduled', () => {\n      const element = new TestElement();\n      assert.throws(() => {\n        element.renderBound();\n      }, 'Render is not scheduled');\n    });\n\n    it('only renders once if second render call is made before the first has been handled', async () => {\n      const element = new TestElement();\n      void ComponentHelpers.ScheduledRender.scheduleRender(element, element.renderBound);\n      void ComponentHelpers.ScheduledRender.scheduleRender(element, element.renderBound);\n\n      await RenderCoordinator.done();\n      assert.strictEqual(element.renderCount, 1);\n    });\n\n    it('handles async callbacks', async () => {\n      const element = new TestElement();\n      void ComponentHelpers.ScheduledRender.scheduleRender(element, async () => {\n        void ComponentHelpers.ScheduledRender.scheduleRender(element, element.renderAsyncBound);\n\n        await element.renderAsyncBound();\n      });\n\n      await RenderCoordinator.done();\n      assert.strictEqual(element.renderAsyncCount, 2);\n    });\n\n    it('re-renders if second render call is made during the first', async () => {\n      const element = new TestElement();\n      void ComponentHelpers.ScheduledRender.scheduleRender(element, () => {\n        void ComponentHelpers.ScheduledRender.scheduleRender(element, element.renderBound);\n\n        element.renderBound();\n      });\n\n      await RenderCoordinator.done();\n      assert.strictEqual(element.renderCount, 2);\n    });\n  });\n});\n"]}