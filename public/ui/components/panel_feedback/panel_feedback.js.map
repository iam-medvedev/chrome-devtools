{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/panel_feedback/FeedbackButton.ts", "../../../../../../../front_end/ui/components/panel_feedback/PanelFeedback.ts", "panelFeedback.css.js", "../../../../../../../front_end/ui/components/panel_feedback/PreviewToggle.ts", "previewToggle.css.js"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as ComponentHelpers from '../../components/helpers/helpers.js';\nimport {html, render} from '../../lit/lit.js';\nimport * as Buttons from '../buttons/buttons.js';\n\nconst UIStrings = {\n  /**\n   * @description The title of the button that leads to the feedback form.\n   */\n  feedback: 'Feedback',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('ui/components/panel_feedback/FeedbackButton.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface FeedbackButtonData {\n  feedbackUrl: Platform.DevToolsPath.UrlString;\n}\nexport class FeedbackButton extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #props: FeedbackButtonData = {\n    feedbackUrl: Platform.DevToolsPath.EmptyUrlString,\n  };\n\n  set data(data: FeedbackButtonData) {\n    this.#props = data;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onFeedbackClick(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(this.#props.feedbackUrl);\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('FeedbackButton render was not scheduled');\n    }\n\n    // clang-format off\n    render(html`\n      <devtools-button\n          @click=${this.#onFeedbackClick}\n          .iconName=${'review'}\n          .variant=${Buttons.Button.Variant.OUTLINED}\n          .jslogContext=${'feedback'}\n      >${i18nString(UIStrings.feedback)}</devtools-button>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-feedback-button', FeedbackButton);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-feedback-button': FeedbackButton;\n  }\n}\n", "// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../legacy/legacy.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as ComponentHelpers from '../../components/helpers/helpers.js';\nimport {html, render} from '../../lit/lit.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\n\nimport panelFeedbackStyles from './panelFeedback.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Introduction sentence to convey the feature is being actively worked on and we are looking for feedback.\n   */\n  previewText: 'Our team is actively working on this feature and we would love to know what you think.',\n  /**\n   * @description Link text the user can click to provide feedback to the team.\n   */\n  previewTextFeedbackLink: 'Send us your feedback.',\n  /**\n   * @description Title of the UI section that shows the user that this feature is in preview. Used as the main heading. Not a verb.\n   */\n  previewFeature: 'Preview feature',\n  /**\n   * @description Title of the section to the quick start video and documentation on experimental panels.\n   */\n  videoAndDocumentation: 'Video and documentation',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('ui/components/panel_feedback/PanelFeedback.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst previewFeatureUrl = new URL('../../../Images/experiment.svg', import.meta.url).toString();\nconst videoThumbnailUrl = new URL('../../../Images/preview_feature_video_thumbnail.svg', import.meta.url).toString();\n\nexport interface PanelFeedbackData {\n  feedbackUrl: Platform.DevToolsPath.UrlString;\n  quickStartUrl: Platform.DevToolsPath.UrlString;\n  quickStartLinkText: string;\n}\nexport class PanelFeedback extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #props: PanelFeedbackData = {\n    feedbackUrl: Platform.DevToolsPath.EmptyUrlString,\n    quickStartUrl: Platform.DevToolsPath.EmptyUrlString,\n    quickStartLinkText: '',\n  };\n\n  set data(data: PanelFeedbackData) {\n    this.#props = data;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('PanelFeedback render was not scheduled');\n    }\n\n    // clang-format off\n    render(html`\n      <style>${panelFeedbackStyles}</style>\n      <div class=\"preview\">\n        <h2 class=\"flex\">\n          <devtools-icon .data=${{\n            iconPath: previewFeatureUrl,\n            width: '20px',\n            height: '20px',\n            color: 'var(--icon-primary)',\n          }}></devtools-icon> ${i18nString(UIStrings.previewFeature)}\n        </h2>\n        <p>${i18nString(UIStrings.previewText)} <x-link href=${this.#props.feedbackUrl} jslog=${VisualLogging.link('feedback').track({click: true})}>${i18nString(UIStrings.previewTextFeedbackLink)}</x-link></p>\n        <div class=\"video\">\n          <div class=\"thumbnail\">\n            <img src=${videoThumbnailUrl} role=\"presentation\" />\n          </div>\n          <div class=\"video-description\">\n            <h3>${i18nString(UIStrings.videoAndDocumentation)}</h3>\n            <x-link class=\"quick-start-link\" href=${this.#props.quickStartUrl} jslog=${VisualLogging.link('css-overview.quick-start').track({click: true})}>${this.#props.quickStartLinkText}</x-link>\n          </div>\n        </div>\n      </div>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-panel-feedback', PanelFeedback);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-panel-feedback': PanelFeedback;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n/**\n * Copyright 2021 Google LLC. All rights reserved.\n */\n\n:host {\n  display: block;\n}\n\n.preview {\n  padding: 12px 16px;\n  border: 1px solid var(--sys-color-divider);\n  color: var(--sys-color-on-surface);\n  font-size: 13px;\n  line-height: 20px;\n  border-radius: 12px;\n  margin: 42px 0;\n  letter-spacing: 0.01em;\n}\n\nh2 {\n  color: var(--sys-color-primary);\n  font-size: 13px;\n  line-height: 20px;\n  letter-spacing: 0.01em;\n  margin: 9px 0 14px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-weight: normal;\n}\n\nh3 {\n  font-size: 13px;\n  line-height: 20px;\n  letter-spacing: 0.04em;\n  color: var(--sys-color-on-surface);\n  margin-bottom: 2px;\n  font-weight: normal;\n}\n\n.preview p {\n  margin-bottom: 24px;\n}\n\n.thumbnail {\n  height: 92px;\n}\n\n.video {\n  display: flex;\n  flex-flow: row wrap;\n  gap: 20px;\n}\n\nx-link {\n  color: var(--sys-color-primary);\n  text-decoration-line: underline;\n}\n\nx-link.quick-start-link {\n  font-size: 14px;\n  line-height: 22px;\n  letter-spacing: 0.04em;\n}\n\n.video-description {\n  min-width: min-content;\n  flex-basis: min-content;\n  flex-grow: 1;\n}\n\n@media (forced-colors: active) {\n  x-link {\n    color: linktext;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./panelFeedback.css')} */`;", "// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/legacy/legacy.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Root from '../../../core/root/root.js';\nimport {html, nothing, render} from '../../../ui/lit/lit.js';\n\nimport previewToggleStyles from './previewToggle.css.js';\n\nexport interface PreviewToggleData {\n  name: string;\n  helperText: string|null;\n  feedbackURL: string|null;\n  experiment: Root.Runtime.ExperimentName;\n  learnMoreURL?: string;\n  onChangeCallback?: (checked: boolean) => void;\n}\n\nconst UIStrings = {\n  /**\n   * @description Link text the user can click to provide feedback to the team.\n   */\n  previewTextFeedbackLink: 'Send us your feedback.',\n  /**\n   * @description Link text the user can click to provide feedback to the team.\n   */\n  shortFeedbackLink: 'Send feedback',\n  /**\n   * @description Link text the user can click to see documentation.\n   */\n  learnMoreLink: 'Learn More',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('ui/components/panel_feedback/PreviewToggle.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class PreviewToggle extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #name = '';\n  #helperText: string|null = null;\n  #feedbackURL: string|null = null;\n  #learnMoreURL: string|undefined;\n  #experiment = '';\n  #onChangeCallback?: (checked: boolean) => void;\n\n  set data(data: PreviewToggleData) {\n    this.#name = data.name;\n    this.#helperText = data.helperText;\n    this.#feedbackURL = data.feedbackURL;\n    this.#learnMoreURL = data.learnMoreURL;\n    this.#experiment = data.experiment;\n    this.#onChangeCallback = data.onChangeCallback;\n    this.#render();\n  }\n\n  #render(): void {\n    const checked = Root.Runtime.experiments.isEnabled(this.#experiment);\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(\n      html`\n      <style>${previewToggleStyles}</style>\n      <div class=\"container\">\n          <devtools-checkbox\n            ?checked=${checked}\n            @change=${this.#checkboxChanged}\n            aria-label=${this.#name} />\n            <devtools-icon .data=${{\n              iconName: 'experiment',\n              width: '16px',\n              height: '16px',\n              color: 'var(--icon-default)',\n            }}>\n          </devtools-icon>${this.#name}\n          </devtools-checkbox>\n        <div class=\"spacer\"></div>\n        ${this.#feedbackURL && !this.#helperText\n          ? html`<div class=\"feedback\"><x-link class=\"x-link\" href=${this.#feedbackURL}>${i18nString(UIStrings.shortFeedbackLink)}</x-link></div>`\n          : nothing}\n        ${this.#learnMoreURL\n          ? html`<div class=\"learn-more\"><x-link class=\"x-link\" href=${this.#learnMoreURL}>${i18nString(UIStrings.learnMoreLink)}</x-link></div>`\n          : nothing}\n        <div class=\"helper\">\n          ${this.#helperText && this.#feedbackURL\n            ? html`<p>${this.#helperText} <x-link class=\"x-link\" href=${this.#feedbackURL}>${i18nString(UIStrings.previewTextFeedbackLink)}</x-link></p>`\n            : nothing}\n        </div>\n      </div>`,\n      this.#shadow,\n      {\n        host: this,\n      });\n    // clang-format on\n  }\n\n  #checkboxChanged(event: Event): void {\n    const checked = (event.target as HTMLInputElement).checked;\n    Root.Runtime.experiments.setEnabled(this.#experiment, checked);\n    this.#onChangeCallback?.(checked);\n  }\n}\n\ncustomElements.define('devtools-preview-toggle', PreviewToggle);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-preview-toggle': PreviewToggle;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n}\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 4px;\n}\n\n.feedback,\n.learn-more {\n  display: flex;\n  align-items: center;\n}\n\n.helper {\n  flex-basis: 100%;\n  text-align: center;\n  font-style: italic;\n}\n\n.spacer {\n  flex: 1;\n}\n\n.x-link {\n  color: var(--sys-color-primary);\n  text-decoration-line: underline;\n  margin: 0 4px;\n}\n\n.feedback .x-link {\n  color: var(--sys-color-token-subtle);\n}\n\n/*# sourceURL=${import.meta.resolve('./previewToggle.css')} */`;"],
  "mappings": "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",
  "names": ["i18n", "Platform", "ComponentHelpers", "html", "render", "UIStrings", "str_", "i18nString", "render", "html", "i18n", "html", "render", "UIStrings", "str_", "i18nString", "render", "html"]
}
