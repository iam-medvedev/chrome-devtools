{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/survey_link/SurveyLink.ts", "surveyLink.css.js"],
  "sourcesContent": ["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../icon_button/icon_button.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport type * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport {html, render} from '../../lit/lit.js';\n\nimport surveyLinkStyles from './surveyLink.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text shown when the link to open a survey is clicked but the survey has not yet appeared\n   */\n  openingSurvey: 'Opening survey â€¦',\n  /**\n   * @description Text displayed instead of the survey link after the survey link is clicked, if the survey was shown successfully\n   */\n  thankYouForYourFeedback: 'Thank you for your feedback',\n  /**\n   * @description Text displayed instead of the survey link after the survey link is clicked, if the survey was not shown successfully\n   */\n  anErrorOccurredWithTheSurvey: 'An error occurred with the survey',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/components/survey_link/SurveyLink.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type CanShowSurveyCallback = (result: Host.InspectorFrontendHostAPI.CanShowSurveyResult) => void;\nexport type ShowSurveyCallback = (result: Host.InspectorFrontendHostAPI.ShowSurveyResult) => void;\n\nexport interface SurveyLinkData {\n  trigger: string;\n  promptText: Common.UIString.LocalizedString;\n  canShowSurvey: (trigger: string, callback: CanShowSurveyCallback) => void;\n  showSurvey: (trigger: string, callback: ShowSurveyCallback) => void;\n}\n\nconst enum State {\n  CHECKING = 'Checking',   // (begin state) -> SHOW_LINK | DONT_SHOW_LINK\n  SHOW_LINK = 'ShowLink',  // -> SENDING\n  SENDING = 'Sending',     // -> SURVEY_SHOWN | FAILED\n  SURVEY_SHOWN = 'SurveyShown',\n  FAILED = 'Failed',\n  DONT_SHOW_LINK = 'DontShowLink',\n}\n\n// A link to a survey. The link is rendered aysnchronously because we need to first check if\n// canShowSurvey succeeds.\nexport class SurveyLink extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #trigger = '';\n  #promptText = Common.UIString.LocalizedEmptyString;\n  #canShowSurvey: (trigger: string, callback: CanShowSurveyCallback) => void = () => {};\n  #showSurvey: (trigger: string, callback: ShowSurveyCallback) => void = () => {};\n  #state: State = State.CHECKING;\n\n  // Re-setting data will cause the state to go back to 'Checking' which hides the link.\n  set data(data: SurveyLinkData) {\n    this.#trigger = data.trigger;\n    this.#promptText = data.promptText;\n    this.#canShowSurvey = data.canShowSurvey;\n    this.#showSurvey = data.showSurvey;\n\n    this.#checkSurvey();\n  }\n\n  #checkSurvey(): void {\n    this.#state = State.CHECKING;\n    this.#canShowSurvey(this.#trigger, ({canShowSurvey}) => {\n      if (!canShowSurvey) {\n        this.#state = State.DONT_SHOW_LINK;\n      } else {\n        this.#state = State.SHOW_LINK;\n      }\n      this.#render();\n    });\n  }\n\n  #sendSurvey(): void {\n    this.#state = State.SENDING;\n    this.#render();\n    this.#showSurvey(this.#trigger, ({surveyShown}) => {\n      if (!surveyShown) {\n        this.#state = State.FAILED;\n      } else {\n        this.#state = State.SURVEY_SHOWN;\n      }\n      this.#render();\n    });\n  }\n\n  #render(): void {\n    if (this.#state === State.CHECKING || this.#state === State.DONT_SHOW_LINK) {\n      return;\n    }\n\n    let linkText = this.#promptText;\n    if (this.#state === State.SENDING) {\n      linkText = i18nString(UIStrings.openingSurvey);\n    } else if (this.#state === State.SURVEY_SHOWN) {\n      linkText = i18nString(UIStrings.thankYouForYourFeedback);\n    } else if (this.#state === State.FAILED) {\n      linkText = i18nString(UIStrings.anErrorOccurredWithTheSurvey);\n    }\n\n    let linkState = '';\n    if (this.#state === State.SENDING) {\n      linkState = 'pending-link';\n    } else if (this.#state === State.FAILED || this.#state === State.SURVEY_SHOWN) {\n      linkState = 'disabled-link';\n    }\n\n    const ariaDisabled = this.#state !== State.SHOW_LINK;\n\n    // clang-format off\n    const output = html`\n      <style>${surveyLinkStyles}</style>\n      <button\n          class=\"link ${linkState}\" tabindex=${ariaDisabled ? '-1' : '0'}\n          .disabled=${ariaDisabled} aria-disabled=${ariaDisabled} @click=${this.#sendSurvey}>\n        <devtools-icon class=\"link-icon\" name=\"review\" style=\"color: var(--sys-color-primary); width: var(--issue-link-icon-size, 16px); height: var(--issue-link-icon-size, 16px)\">\n        </devtools-icon>\n        ${linkText}\n      </button>`;\n    // clang-format on\n    render(output, this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-survey-link', SurveyLink);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-survey-link': SurveyLink;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.link-icon {\n  vertical-align: sub;\n  margin-right: 0.5ch;\n}\n\n.link {\n  padding: var(--issue-link-padding, 4px 0 0 0);\n  text-decoration: var(--issue-link-text-decoration, underline);\n  cursor: pointer;\n  font-size: var(--issue-link-font-size, 14px);\n  color: var(--sys-color-primary);\n  outline-offset: 2px;\n  border: none;\n  background: none;\n  font-family: inherit;\n}\n\n.link:focus:not(:focus-visible) {\n  outline: none;\n}\n\n.pending-link {\n  opacity: 75%;\n  pointer-events: none;\n  cursor: default;\n  text-decoration: none;\n}\n\n.disabled-link {\n  pointer-events: none;\n  cursor: default;\n  text-decoration: none;\n}\n\n/*# sourceURL=${import.meta.resolve('./surveyLink.css')} */`;"],
  "mappings": ";;;;;;;AAAA;;;;AAKA,OAAO;AAEP,YAAY,YAAY;AAExB,YAAY,UAAU;AACtB,SAAQ,MAAM,cAAa;;;ACL3B,IAAO,yBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAwCC,YAAY,QAAQ,kBAAkB,CAAC;;;AD/BvD,IAAM,YAAY;;;;EAIhB,eAAe;;;;EAIf,yBAAyB;;;;EAIzB,8BAA8B;;AAEhC,IAAM,OAAY,UAAK,kBAAkB,2CAA2C,SAAS;AAC7F,IAAM,aAAkB,UAAK,mBAAmB,KAAK,QAAW,IAAI;AAuB9D,IAAO,aAAP,cAA0B,YAAW;EAChC,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;EACnD,WAAW;EACX,cAAqB,gBAAS;EAC9B,iBAA6E,MAAK;EAAE;EACpF,cAAuE,MAAK;EAAE;EAC9E,SAAM;;EAGN,IAAI,KAAK,MAAoB;AAC3B,SAAK,WAAW,KAAK;AACrB,SAAK,cAAc,KAAK;AACxB,SAAK,iBAAiB,KAAK;AAC3B,SAAK,cAAc,KAAK;AAExB,SAAK,aAAY;EACnB;EAEA,eAAY;AACV,SAAK,SAAM;AACX,SAAK,eAAe,KAAK,UAAU,CAAC,EAAC,cAAa,MAAK;AACrD,UAAI,CAAC,eAAe;AAClB,aAAK,SAAM;MACb,OAAO;AACL,aAAK,SAAM;MACb;AACA,WAAK,QAAO;IACd,CAAC;EACH;EAEA,cAAW;AACT,SAAK,SAAM;AACX,SAAK,QAAO;AACZ,SAAK,YAAY,KAAK,UAAU,CAAC,EAAC,YAAW,MAAK;AAChD,UAAI,CAAC,aAAa;AAChB,aAAK,SAAM;MACb,OAAO;AACL,aAAK,SAAM;MACb;AACA,WAAK,QAAO;IACd,CAAC;EACH;EAEA,UAAO;AACL,QAAI,KAAK,WAAM,cAAuB,KAAK,WAAM,gBAA2B;AAC1E;IACF;AAEA,QAAI,WAAW,KAAK;AACpB,QAAI,KAAK,WAAM,WAAoB;AACjC,iBAAW,WAAW,UAAU,aAAa;IAC/C,WAAW,KAAK,WAAM,eAAyB;AAC7C,iBAAW,WAAW,UAAU,uBAAuB;IACzD,WAAW,KAAK,WAAM,UAAmB;AACvC,iBAAW,WAAW,UAAU,4BAA4B;IAC9D;AAEA,QAAI,YAAY;AAChB,QAAI,KAAK,WAAM,WAAoB;AACjC,kBAAY;IACd,WAAW,KAAK,WAAM,YAAqB,KAAK,WAAM,eAAyB;AAC7E,kBAAY;IACd;AAEA,UAAM,eAAe,KAAK,WAAM;AAGhC,UAAM,SAAS;eACJ,sBAAgB;;wBAEP,SAAS,cAAc,eAAe,OAAO,GAAG;sBAClD,YAAY,kBAAkB,YAAY,WAAW,KAAK,WAAW;;;UAGjF,QAAQ;;AAGd,WAAO,QAAQ,KAAK,SAAS,EAAC,MAAM,KAAI,CAAC;EAC3C;;AAGF,eAAe,OAAO,wBAAwB,UAAU;",
  "names": []
}
