{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/text_prompt/TextPrompt.ts", "textPrompt.css.js"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Platform from '../../../core/platform/platform.js';\nimport {html, render} from '../../lit/lit.js';\n\nimport textPromptStyles from './textPrompt.css.js';\n\nexport interface TextPromptData {\n  ariaLabel: string;\n  prefix: string;\n  suggestion: string;\n}\n\nexport class PromptInputEvent extends Event {\n  static readonly eventName = 'promptinputchanged';\n  data: string;\n\n  constructor(value: string) {\n    super(PromptInputEvent.eventName);\n    this.data = value;\n  }\n}\n\nexport class TextPrompt extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #ariaLabelText = '';\n  #prefixText = '';\n  #suggestionText = '';\n\n  set data(data: TextPromptData) {\n    this.#ariaLabelText = data.ariaLabel;\n    this.#prefixText = data.prefix;\n    this.#suggestionText = data.suggestion;\n    this.#render();\n  }\n\n  get data(): TextPromptData {\n    return {\n      ariaLabel: this.#ariaLabelText,\n      prefix: this.#prefixText,\n      suggestion: this.#suggestionText,\n    };\n  }\n\n  override focus(): void {\n    this.#input().focus();\n  }\n\n  #input(): HTMLInputElement {\n    const inputElement = this.#shadow.querySelector<HTMLInputElement>('.input');\n    if (!inputElement) {\n      throw new Error('Expected an input element!');\n    }\n    return inputElement;\n  }\n\n  moveCaretToEndOfInput(): void {\n    this.setSelectedRange(this.#text().length, this.#text().length);\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    if (event.key === Platform.KeyboardUtilities.ENTER_KEY) {\n      event.preventDefault();\n    }\n  }\n\n  setSelectedRange(startIndex: number, endIndex: number): void {\n    if (startIndex < 0) {\n      throw new RangeError('Selected range start must be a nonnegative integer');\n    }\n    const textContentLength = this.#text().length;\n    if (endIndex > textContentLength) {\n      endIndex = textContentLength;\n    }\n    if (endIndex < startIndex) {\n      endIndex = startIndex;\n    }\n    this.#input().setSelectionRange(startIndex, endIndex);\n  }\n\n  setPrefix(prefix: string): void {\n    this.#prefixText = prefix;\n    this.#render();\n  }\n\n  setSuggestion(suggestion: string): void {\n    this.#suggestionText = suggestion;\n    this.#suggestion().value = this.#suggestionText;\n    this.#render();\n  }\n\n  setText(text: string): void {\n    this.#input().value = text;\n\n    if (this.#input().hasFocus()) {\n      this.moveCaretToEndOfInput();\n      this.#input().scrollIntoView();\n    }\n  }\n\n  #suggestion(): HTMLInputElement {\n    const suggestionElement = this.#shadow.querySelector<HTMLInputElement>('.suggestion');\n    if (!suggestionElement) {\n      throw new Error('Expected an suggestion element!');\n    }\n    return suggestionElement;\n  }\n\n  #text(): string {\n    return this.#input().value || '';\n  }\n\n  connectedCallback(): void {\n    const observer = new MutationObserver(mutations => {\n      for (const mutation of mutations) {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'dir') {\n          const writingDirection = this.#input().getAttribute('dir');\n          if (!writingDirection) {\n            this.#suggestion().removeAttribute('dir');\n            return;\n          }\n          this.#suggestion().setAttribute('dir', writingDirection);\n        }\n      }\n    });\n    observer.observe(this.#input(), {attributeFilter: ['dir']});\n  }\n\n  #render(): void {\n    // clang-format off\n    const output = html`\n      <style>${textPromptStyles}</style>\n      <span class=\"prefix\">${this.#prefixText} </span>\n      <span class=\"text-prompt-input\">\n        <input\n            class=\"input\" aria-label=${this.#ariaLabelText} spellcheck=\"false\"\n            @input=${() => this.dispatchEvent(new PromptInputEvent(this.#text()))}\n            @keydown=${this.onKeyDown}>\n        <input class=\"suggestion\" tabindex=-1 aria-label=${this.#ariaLabelText + ' Suggestion'}>\n      </span>`;\n    // clang-format on\n    render(output, this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-text-prompt', TextPrompt);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-text-prompt': TextPrompt;\n  }\n\n  interface HTMLElementEventMap {\n    promptinputchanged: PromptInputEvent;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  white-space: pre;\n  overflow: hidden;\n  display: flex;\n}\n\ninput {\n  font-size: var(--sys-typescale-body3-size);\n}\n\n.prefix {\n  flex: none;\n  font-weight: var(--ref-typeface-weight-medium);\n  font-size: var(--sys-typescale-body3-size);\n  color: var(--sys-color-primary);\n}\n\n.text-prompt-input {\n  flex: auto;\n  position: relative;\n}\n\n.text-prompt-input input {\n  width: 100%;\n  border: none;\n  outline: none;\n  position: absolute;\n  left: 0;\n  padding: 0;\n  z-index: 2;\n  color: var(--sys-color-on-surface);\n  background-color: transparent;\n  line-height: var(--sys-typescale-body3-line-height);\n}\n\n.text-prompt-input .suggestion {\n  color: var(--sys-color-on-surface-subtle);\n  line-height: var(--sys-typescale-body3-line-height);\n  position: absolute;\n  left: 0;\n  z-index: 1;\n}\n\n/*# sourceURL=${import.meta.resolve('./textPrompt.css')} */`;"],
  "mappings": "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",
  "names": []
}
