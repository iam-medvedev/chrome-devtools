{"version":3,"file":"AiCodeCompletionTeaserPlaceholder.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/text_editor/AiCodeCompletionTeaserPlaceholder.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as PanelCommon from '../../../panels/common/common.js';\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {createViewFunctionStub} from '../../../testing/ViewFunctionHelpers.js';\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\n\nimport * as TextEditor from './text_editor.js';\n\nconst {aiCodeCompletionTeaserPlaceholder} = TextEditor.AiCodeCompletionTeaserPlaceholder;\n\ndescribeWithEnvironment('AiCodeCompletionTeaserPlaceholder', () => {\n  async function createTeaser() {\n    const view = createViewFunctionStub(PanelCommon.AiCodeCompletionTeaser);\n    const teaser = new PanelCommon.AiCodeCompletionTeaser({onDetach: sinon.stub()}, view);\n    return teaser;\n  }\n\n  beforeEach(async () => {\n    sinon.stub(Host.AidaClient.AidaClient, 'checkAccessPreconditions')\n        .resolves(Host.AidaClient.AidaAccessPreconditions.AVAILABLE);\n  });\n\n  function createEditor(doc: string, teaser: PanelCommon.AiCodeCompletionTeaser): TextEditor.TextEditor.TextEditor {\n    const editor = new TextEditor.TextEditor.TextEditor(\n        CodeMirror.EditorState.create({\n          doc,\n          extensions: [\n            aiCodeCompletionTeaserPlaceholder(teaser),\n          ],\n        }),\n    );\n    renderElementIntoDOM(editor);\n    return editor;\n  }\n\n  it('shows the placeholder for an empty document', async () => {\n    const teaser = await createTeaser();\n    const editor = createEditor('', teaser);\n    assert.exists(editor.editor.dom.querySelector('.cm-placeholder'));\n    editor.remove();\n  });\n\n  it('does not show the placeholder for a non-empty document', async () => {\n    const teaser = await createTeaser();\n    const editor = createEditor('not empty', teaser);\n    assert.isNull(editor.editor.dom.querySelector('.cm-placeholder'));\n    editor.remove();\n  });\n\n  it('hides the placeholder when text is inserted', async () => {\n    const teaser = await createTeaser();\n    const editor = createEditor('', teaser);\n    assert.exists(editor.editor.dom.querySelector('.cm-placeholder'));\n\n    editor.dispatch({\n      changes: {from: 0, insert: 'a'},\n    });\n\n    assert.isNull(editor.editor.dom.querySelector('.cm-placeholder'));\n    editor.remove();\n  });\n\n  it('shows the placeholder when text is deleted', async () => {\n    const teaser = await createTeaser();\n    const editor = createEditor('not empty', teaser);\n    assert.isNull(editor.editor.dom.querySelector('.cm-placeholder'));\n\n    editor.dispatch({\n      changes: {from: 0, to: editor.state.doc.length},\n    });\n\n    assert.exists(editor.editor.dom.querySelector('.cm-placeholder'));\n    editor.remove();\n  });\n});\n"]}