{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/text_editor/AiCodeCompletionTeaserPlaceholder.ts", "../../../../../../../front_end/ui/components/text_editor/AutocompleteHistory.ts", "../../../../../../../front_end/ui/components/text_editor/config.ts", "../../../../../../../front_end/ui/components/text_editor/theme.ts", "../../../../../../../front_end/ui/components/text_editor/ExecutionPositionHighlighter.ts", "../../../../../../../front_end/ui/components/text_editor/javascript.ts", "../../../../../../../front_end/ui/components/text_editor/cursor_tooltip.ts", "../../../../../../../front_end/ui/components/text_editor/position.ts", "../../../../../../../front_end/ui/components/text_editor/TextEditor.ts", "textEditor.css.js", "../../../../../../../front_end/ui/components/text_editor/TextEditorHistory.ts"],
  "sourcesContent": ["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport type * as PanelCommon from '../../../panels/common/common.js';\nimport * as CM from '../../../third_party/codemirror.next/codemirror.next.js';\n\nexport function flattenRect(rect: DOMRect, left: boolean): {\n  left: number,\n  right: number,\n  top: number,\n  bottom: number,\n} {\n  const x = left ? rect.left : rect.right;\n  return {left: x, right: x, top: rect.top, bottom: rect.bottom};\n}\n\nexport class AiCodeCompletionTeaserPlaceholder extends CM.WidgetType {\n  constructor(readonly teaser: PanelCommon.AiCodeCompletionTeaser) {\n    super();\n  }\n\n  toDOM(): HTMLElement {\n    const wrap = document.createElement('span');\n    wrap.classList.add('cm-placeholder');\n    wrap.style.pointerEvents = 'none';\n    wrap.tabIndex = 0;\n    this.teaser.show(wrap, undefined, true);\n    return wrap;\n  }\n\n  /**\n   * Controls the cursor's height by reporting this widget's bounds as a\n   * single line. This prevents the cursor from expanding vertically when the\n   * placeholder content wraps across multiple lines.\n   */\n  override coordsAt(dom: HTMLElement): {\n    left: number,\n    right: number,\n    top: number,\n    bottom: number,\n  }|null {\n    const boundingClientRect = dom.firstElementChild?.getBoundingClientRect();\n    if (!boundingClientRect) {\n      return null;\n    }\n    const style = window.getComputedStyle(dom.parentNode as HTMLElement);\n    const rect = flattenRect(boundingClientRect, style.direction !== 'rtl');\n    const lineHeight = parseInt(style.lineHeight, 10);\n    if (rect.bottom - rect.top > lineHeight * 1.5) {\n      return {left: rect.left, right: rect.right, top: rect.top, bottom: rect.top + lineHeight};\n    }\n    return rect;\n  }\n\n  override ignoreEvent(_: Event): boolean {\n    return false;\n  }\n\n  override destroy(dom: HTMLElement): void {\n    super.destroy(dom);\n    this.teaser?.hideWidget();\n  }\n}\n\nexport function aiCodeCompletionTeaserPlaceholder(teaser: PanelCommon.AiCodeCompletionTeaser): CM.Extension {\n  const plugin = CM.ViewPlugin.fromClass(class {\n    placeholder: CM.DecorationSet;\n\n    constructor(readonly view: CM.EditorView) {\n      this.placeholder = CM.Decoration.set(\n          [CM.Decoration.widget({widget: new AiCodeCompletionTeaserPlaceholder(teaser), side: 1}).range(0)]);\n    }\n\n    declare update: () => void;\n\n    get decorations(): CM.DecorationSet {\n      return this.view.state.doc.length ? CM.Decoration.none : this.placeholder;\n    }\n  }, {decorations: v => v.decorations});\n  return plugin;\n}\n", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../../core/common/common.js';\n\nexport class AutocompleteHistory {\n  static #historySize = 300;\n\n  #setting: Common.Settings.Setting<string[]>;\n\n  /**\n   * The data mirrors the setting. We have the mirror for 2 reasons:\n   *   1) The setting is size limited\n   *   2) We track the user's current input, even though it's not committed yet.\n   */\n  #data: string[] = [];\n\n  /** 1-based entry in the history stack. */\n  #historyOffset = 1;\n  #uncommittedIsTop = false;\n\n  /**\n   * Creates a new settings-backed history. The class assumes it has sole\n   * ownership of the setting.\n   */\n  constructor(setting: Common.Settings.Setting<string[]>) {\n    this.#setting = setting;\n    this.#data = this.#setting.get();\n  }\n\n  clear(): void {\n    this.#data = [];\n    this.#setting.set([]);\n    this.#historyOffset = 1;\n  }\n\n  length(): number {\n    return this.#data.length;\n  }\n\n  /**\n   * Pushes a committed text into the history.\n   */\n  pushHistoryItem(text: string): void {\n    if (this.#uncommittedIsTop) {\n      this.#data.pop();\n      this.#uncommittedIsTop = false;\n    }\n\n    this.#historyOffset = 1;\n    if (text !== this.#currentHistoryItem()) {\n      this.#data.push(text);\n    }\n    this.#store();\n  }\n\n  /**\n   * Pushes the current (uncommitted) text into the history.\n   */\n  #pushCurrentText(currentText: string): void {\n    if (this.#uncommittedIsTop) {\n      this.#data.pop();\n    }  // Throw away obsolete uncommitted text.\n    this.#uncommittedIsTop = true;\n    this.#data.push(currentText);\n  }\n\n  previous(currentText: string): string|undefined {\n    if (this.#historyOffset > this.#data.length) {\n      return undefined;\n    }\n    if (this.#historyOffset === 1) {\n      this.#pushCurrentText(currentText);\n    }\n    ++this.#historyOffset;\n    return this.#currentHistoryItem();\n  }\n\n  next(): string|undefined {\n    if (this.#historyOffset === 1) {\n      return undefined;\n    }\n    --this.#historyOffset;\n    return this.#currentHistoryItem();\n  }\n\n  /** Returns a de-duplicated list of history entries that start with the specified prefix */\n  matchingEntries(prefix: string, limit = 50): Set<string> {\n    const result = new Set<string>();\n    for (let i = this.#data.length - 1; i >= 0 && result.size < limit; --i) {\n      const entry = this.#data[i];\n      if (entry.startsWith(prefix)) {\n        result.add(entry);\n      }\n    }\n    return result;\n  }\n\n  #currentHistoryItem(): string|undefined {\n    return this.#data[this.#data.length - this.#historyOffset];\n  }\n\n  #store(): void {\n    this.#setting.set(this.#data.slice(-AutocompleteHistory.#historySize));\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../../core/common/common.js';\nimport type * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as TextUtils from '../../../models/text_utils/text_utils.js';\nimport * as WindowBoundsService from '../../../services/window_bounds/window_bounds.js';\nimport * as CM from '../../../third_party/codemirror.next/codemirror.next.js';\nimport * as UI from '../../legacy/legacy.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\nimport * as CodeHighlighter from '../code_highlighter/code_highlighter.js';\nimport * as Icon from '../icon_button/icon_button.js';\n\nimport {editorTheme} from './theme.js';\n\nconst LINES_TO_SCAN_FOR_INDENTATION_GUESSING = 1000;\nconst RECOMPUTE_INDENT_MAX_SIZE = 200;\n\nconst UIStrings = {\n  /**\n   * @description Label text for the editor\n   */\n  codeEditor: 'Code editor',\n  /**\n   * @description Aria alert to read the suggestion for the suggestion box when typing in text editor\n   * @example {name} PH1\n   * @example {2} PH2\n   * @example {5} PH3\n   */\n  sSuggestionSOfS: '{PH1}, suggestion {PH2} of {PH3}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/components/text_editor/config.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst empty: CM.Extension = [];\n\nexport const dynamicSetting = CM.Facet.define<DynamicSetting<unknown>>();\n\n// The code below is used to wire up dynamic settings to editors. When\n// you include the result of calling `instance()` in an editor\n// configuration, the TextEditor class will take care of listening to\n// changes in the setting, and updating the configuration as\n// appropriate.\n\nexport class DynamicSetting<T> {\n  compartment = new CM.Compartment();\n\n  constructor(\n      readonly settingName: string,\n      private readonly getExtension: (value: T) => CM.Extension,\n  ) {\n  }\n\n  settingValue(): T {\n    return Common.Settings.Settings.instance().moduleSetting(this.settingName).get() as T;\n  }\n\n  instance(): CM.Extension {\n    return [\n      this.compartment.of(this.getExtension(this.settingValue())),\n      dynamicSetting.of(this as DynamicSetting<unknown>),\n    ];\n  }\n\n  sync(state: CM.EditorState, value: T): CM.StateEffect<unknown>|null {\n    const cur = this.compartment.get(state);\n    const needed = this.getExtension(value);\n    return cur === needed ? null : this.compartment.reconfigure(needed);\n  }\n\n  static bool(name: string, enabled: CM.Extension, disabled: CM.Extension = empty): DynamicSetting<boolean> {\n    return new DynamicSetting<boolean>(name, val => val ? enabled : disabled);\n  }\n\n  static none: ReadonlyArray<DynamicSetting<unknown>> = [];\n}\n\nexport const tabMovesFocus = DynamicSetting.bool('text-editor-tab-moves-focus', [], CM.keymap.of([{\n  key: 'Tab',\n  run: (view: CM.EditorView) => view.state.doc.length ? CM.indentMore(view) : false,\n  shift: (view: CM.EditorView) => view.state.doc.length ? CM.indentLess(view) : false,\n}]));\n\nconst disableConservativeCompletion = CM.StateEffect.define();\n\n/**\n * When enabled, this suppresses the behavior of showCompletionHint\n * and accepting of completions with Enter until the user selects a\n * completion beyond the initially selected one. Used in the console.\n **/\nexport const conservativeCompletion = CM.StateField.define<boolean>({\n  create() {\n    return true;\n  },\n  update(value, tr) {\n    if (CM.completionStatus(tr.state) !== 'active') {\n      return true;\n    }\n    if ((CM.selectedCompletionIndex(tr.startState) ?? 0) !== (CM.selectedCompletionIndex(tr.state) ?? 0) ||\n        tr.effects.some(e => e.is(disableConservativeCompletion))) {\n      return false;\n    }\n    return value;\n  },\n});\n\nfunction acceptCompletionIfNotConservative(view: CM.EditorView): boolean {\n  return !view.state.field(conservativeCompletion, false) && CM.acceptCompletion(view);\n}\n\nfunction acceptCompletionIfAtEndOfLine(view: CM.EditorView): boolean {\n  const cursorPosition = view.state.selection.main.head;\n  const line = view.state.doc.lineAt(cursorPosition);\n  const column = cursorPosition - line.from;\n  const isCursorAtEndOfLine = column >= line.length;\n  if (isCursorAtEndOfLine) {\n    return CM.acceptCompletion(view);\n  }\n\n  // We didn't handle this key press\n  // so it will be handled by default behavior.\n  return false;\n}\n\n/**\n * This is a wrapper around CodeMirror's own moveCompletionSelection command, which\n * selects the first selection if the state of the selection is conservative, and\n * otherwise behaves as normal.\n **/\nfunction moveCompletionSelectionIfNotConservative(\n    forward: boolean, by: 'option'|'page' = 'option'): ((view: CM.EditorView) => boolean) {\n  return view => {\n    if (CM.completionStatus(view.state) !== 'active') {\n      return false;\n    }\n    if (view.state.field(conservativeCompletion, false)) {\n      view.dispatch({effects: disableConservativeCompletion.of(null)});\n      announceSelectedCompletionInfo(view);\n      return true;\n    }\n    const moveSelectionResult = CM.moveCompletionSelection(forward, by)(view);\n    announceSelectedCompletionInfo(view);\n    return moveSelectionResult;\n  };\n}\n\nfunction moveCompletionSelectionBackwardWrapper(): ((view: CM.EditorView) => boolean) {\n  return view => {\n    if (CM.completionStatus(view.state) !== 'active') {\n      return false;\n    }\n    CM.moveCompletionSelection(false)(view);\n    announceSelectedCompletionInfo(view);\n    return true;\n  };\n}\n\nfunction announceSelectedCompletionInfo(view: CM.EditorView): void {\n  const ariaMessage = i18nString(UIStrings.sSuggestionSOfS, {\n    PH1: CM.selectedCompletion(view.state)?.label || '',\n    PH2: (CM.selectedCompletionIndex(view.state) || 0) + 1,\n    PH3: CM.currentCompletions(view.state).length,\n  });\n\n  UI.ARIAUtils.LiveAnnouncer.alert(ariaMessage);\n}\n\nexport const autocompletion = new DynamicSetting<boolean>(\n    'text-editor-autocompletion',\n    (activateOnTyping: boolean) =>\n        [CM.autocompletion({\n          activateOnTyping,\n          icons: false,\n          optionClass: (option: CM.Completion) => option.type === 'secondary' ? 'cm-secondaryCompletion' : '',\n          tooltipClass: (state: CM.EditorState) => {\n            return state.field(conservativeCompletion, false) ? 'cm-conservativeCompletion' : '';\n          },\n          defaultKeymap: false,\n          updateSyncTime: 100,\n        }),\n         CM.Prec.highest(CM.keymap.of([\n           {key: 'End', run: acceptCompletionIfAtEndOfLine},\n           {key: 'ArrowRight', run: acceptCompletionIfAtEndOfLine},\n           {key: 'Ctrl-Space', run: CM.startCompletion},\n           {key: 'Escape', run: CM.closeCompletion},\n           {key: 'ArrowDown', run: moveCompletionSelectionIfNotConservative(true)},\n           {key: 'ArrowUp', run: moveCompletionSelectionBackwardWrapper()},\n           {mac: 'Ctrl-n', run: moveCompletionSelectionIfNotConservative(true)},\n           {mac: 'Ctrl-p', run: moveCompletionSelectionBackwardWrapper()},\n           {key: 'PageDown', run: CM.moveCompletionSelection(true, 'page')},\n           {key: 'PageUp', run: CM.moveCompletionSelection(false, 'page')},\n           {key: 'Enter', run: acceptCompletionIfNotConservative},\n         ]))]);\n\nexport const bracketMatching = DynamicSetting.bool('text-editor-bracket-matching', CM.bracketMatching());\n\nexport const codeFolding = DynamicSetting.bool('text-editor-code-folding', [\n  CM.foldGutter({\n    markerDOM(open: boolean): HTMLElement {\n      const iconName = open ? 'triangle-down' : 'triangle-right';\n      const icon = new Icon.Icon.Icon();\n      icon.setAttribute('class', open ? 'cm-foldGutterElement' : 'cm-foldGutterElement cm-foldGutterElement-folded');\n      icon.setAttribute('jslog', `${VisualLogging.expand().track({click: true})}`);\n      icon.name = iconName;\n      icon.classList.add('small');\n      return icon;\n    },\n  }),\n  CM.keymap.of(CM.foldKeymap),\n]);\n\nconst AutoDetectIndent = CM.StateField.define<string>({\n  create: state => detectIndentation(state.doc),\n  update: (indent, tr) => {\n    return tr.docChanged && preservedLength(tr.changes) <= RECOMPUTE_INDENT_MAX_SIZE ? detectIndentation(tr.state.doc) :\n                                                                                       indent;\n  },\n  provide: f => CM.Prec.highest(CM.indentUnit.from(f)),\n});\n\nfunction preservedLength(ch: CM.ChangeDesc): number {\n  let len = 0;\n  ch.iterGaps((_from, _to, l) => {\n    len += l;\n  });\n  return len;\n}\n\nfunction detectIndentation(doc: CM.Text): string {\n  const lines = doc.iterLines(1, Math.min(doc.lines + 1, LINES_TO_SCAN_FOR_INDENTATION_GUESSING));\n  const indentUnit = TextUtils.TextUtils.detectIndentation(lines);\n  return indentUnit ?? Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n}\n\nexport const autoDetectIndent = DynamicSetting.bool('text-editor-auto-detect-indent', AutoDetectIndent);\n\nfunction matcher(decorator: CM.MatchDecorator): CM.Extension {\n  return CM.ViewPlugin.define(\n      view => ({\n        decorations: decorator.createDeco(view),\n        update(u): void {\n          this.decorations = decorator.updateDeco(u, this.decorations);\n        },\n      }),\n      {\n        decorations: v => v.decorations,\n      });\n}\n\nconst WhitespaceDeco = new Map<string, CM.Decoration>();\n\nfunction getWhitespaceDeco(space: string): CM.Decoration {\n  const cached = WhitespaceDeco.get(space);\n  if (cached) {\n    return cached;\n  }\n  const result = CM.Decoration.mark({\n    attributes: space === '\\t' ? {\n      class: 'cm-highlightedTab',\n    } :\n                                 {class: 'cm-highlightedSpaces', 'data-display': '·'.repeat(space.length)},\n  });\n  WhitespaceDeco.set(space, result);\n  return result;\n}\n\nconst showAllWhitespace = matcher(new CM.MatchDecorator({\n  regexp: /\\t| +/g,\n  decoration: (match: RegExpExecArray) => getWhitespaceDeco(match[0]),\n  boundary: /\\S/,\n}));\n\nconst showTrailingWhitespace = matcher(new CM.MatchDecorator({\n  regexp: /\\s+$/g,\n  decoration: CM.Decoration.mark({class: 'cm-trailingWhitespace'}),\n  boundary: /\\S/,\n}));\n\nexport const showWhitespace = new DynamicSetting<string>('show-whitespaces-in-editor', value => {\n  if (value === 'all') {\n    return showAllWhitespace;\n  }\n  if (value === 'trailing') {\n    return showTrailingWhitespace;\n  }\n  return empty;\n});\n\nexport const allowScrollPastEof = DynamicSetting.bool('allow-scroll-past-eof', CM.scrollPastEnd());\n\nconst cachedIndentUnit: Record<string, CM.Extension> = Object.create(null);\n\nfunction getIndentUnit(indent: string): CM.Extension {\n  let value = cachedIndentUnit[indent];\n  if (!value) {\n    value = cachedIndentUnit[indent] = CM.indentUnit.of(indent);\n  }\n  return value;\n}\n\nexport const indentUnit = new DynamicSetting<string>('text-editor-indent', getIndentUnit);\n\nexport const domWordWrap = DynamicSetting.bool('dom-word-wrap', CM.EditorView.lineWrapping);\n\nexport const sourcesWordWrap = DynamicSetting.bool('sources.word-wrap', CM.EditorView.lineWrapping);\n\nfunction detectLineSeparator(text: string): CM.Extension {\n  if (/\\r\\n/.test(text) && !/(^|[^\\r])\\n/.test(text)) {\n    return CM.EditorState.lineSeparator.of('\\r\\n');\n  }\n  return [];\n}\n\nconst baseKeymap = CM.keymap.of([\n  {key: 'Tab', run: CM.acceptCompletion},\n  {key: 'Ctrl-m', run: CM.cursorMatchingBracket, shift: CM.selectMatchingBracket},\n  {key: 'Mod-/', run: CM.toggleComment},\n  {key: 'Mod-d', run: CM.selectNextOccurrence},\n  {key: 'Alt-ArrowLeft', mac: 'Ctrl-ArrowLeft', run: CM.cursorSyntaxLeft, shift: CM.selectSyntaxLeft},\n  {key: 'Alt-ArrowRight', mac: 'Ctrl-ArrowRight', run: CM.cursorSyntaxRight, shift: CM.selectSyntaxRight},\n  {key: 'Ctrl-ArrowLeft', mac: 'Alt-ArrowLeft', run: CM.cursorGroupLeft, shift: CM.selectGroupLeft},\n  {key: 'Ctrl-ArrowRight', mac: 'Alt-ArrowRight', run: CM.cursorGroupRight, shift: CM.selectGroupRight},\n  ...CM.standardKeymap,\n  ...CM.historyKeymap,\n]);\n\nfunction themeIsDark(): boolean {\n  const setting = Common.Settings.Settings.instance().moduleSetting('ui-theme').get();\n  return setting === 'systemPreferred' ? window.matchMedia('(prefers-color-scheme: dark)').matches : setting === 'dark';\n}\n\nexport const dummyDarkTheme = CM.EditorView.theme({}, {dark: true});\nexport const themeSelection = new CM.Compartment();\n\nexport function theme(): CM.Extension {\n  return [editorTheme, themeIsDark() ? themeSelection.of(dummyDarkTheme) : themeSelection.of([])];\n}\n\nlet sideBarElement: HTMLElement|null = null;\n\nfunction getTooltipSpace(): DOMRect {\n  if (!sideBarElement) {\n    sideBarElement =\n        WindowBoundsService.WindowBoundsService.WindowBoundsServiceImpl.instance().getDevToolsBoundingElement();\n  }\n  return sideBarElement.getBoundingClientRect();\n}\n\nexport function baseConfiguration(text: string|CM.Text): CM.Extension {\n  return [\n    theme(),\n    CM.highlightSpecialChars(),\n    CM.highlightSelectionMatches(),\n    CM.history(),\n    CM.drawSelection(),\n    CM.EditorState.allowMultipleSelections.of(true),\n    CM.indentOnInput(),\n    CM.syntaxHighlighting(CodeHighlighter.CodeHighlighter.highlightStyle),\n    baseKeymap,\n    CM.EditorView.clickAddsSelectionRange.of(mouseEvent => mouseEvent.altKey || mouseEvent.ctrlKey),\n    tabMovesFocus.instance(),\n    bracketMatching.instance(),\n    indentUnit.instance(),\n    CM.Prec.lowest(CM.EditorView.contentAttributes.of({'aria-label': i18nString(UIStrings.codeEditor)})),\n    text instanceof CM.Text ? [] : detectLineSeparator(text),\n    CM.tooltips({\n      parent: getTooltipHost() as unknown as HTMLElement,\n      tooltipSpace: getTooltipSpace,\n    }),\n    CM.bidiIsolates(),\n  ];\n}\n\nexport const closeBrackets = DynamicSetting.bool('text-editor-bracket-closing', [\n  CM.html.autoCloseTags,\n  CM.closeBrackets(),\n  CM.keymap.of(CM.closeBracketsKeymap),\n]);\n\n// Root editor tooltips at the top of the document, creating a special\n// element with the editor styles mounted in it for them. This is\n// annoying, but necessary because a scrollable parent node clips them\n// otherwise, `position: fixed` doesn't work due to `contain` styles,\n// and appending them directly to `document.body` doesn't work because\n// the necessary style sheets aren't available there.\nlet tooltipHost: ShadowRoot|null = null;\n\nfunction getTooltipHost(): ShadowRoot {\n  if (!tooltipHost) {\n    const styleModules = CM.EditorState\n                             .create({\n                               extensions: [\n                                 editorTheme,\n                                 themeIsDark() ? dummyDarkTheme : [],\n                                 CM.syntaxHighlighting(CodeHighlighter.CodeHighlighter.highlightStyle),\n                                 CM.showTooltip.of({\n                                   pos: 0,\n                                   create() {\n                                     return {dom: document.createElement('div')};\n                                   },\n                                 }),\n                               ],\n                             })\n                             .facet<readonly CM.StyleModule[]>(CM.EditorView.styleModule);\n    const host = document.body.appendChild(document.createElement('div'));\n    host.className = 'editor-tooltip-host';\n    tooltipHost = host.attachShadow({mode: 'open'});\n    CM.StyleModule.mount(tooltipHost, styleModules);\n  }\n  return tooltipHost;\n}\n\nclass CompletionHint extends CM.WidgetType {\n  constructor(readonly text: string) {\n    super();\n  }\n\n  override eq(other: CompletionHint): boolean {\n    return this.text === other.text;\n  }\n\n  toDOM(): HTMLElement {\n    const span = document.createElement('span');\n    span.className = 'cm-completionHint';\n    span.textContent = this.text;\n    return span;\n  }\n}\n\nexport const showCompletionHint = CM.ViewPlugin.fromClass(class {\n  decorations: CM.DecorationSet = CM.Decoration.none;\n  currentHint: string|null = null;\n\n  update(update: CM.ViewUpdate): void {\n    const top = this.currentHint = this.topCompletion(update.state);\n    if (!top || update.state.field(conservativeCompletion, false)) {\n      this.decorations = CM.Decoration.none;\n    } else {\n      this.decorations = CM.Decoration.set(\n          [CM.Decoration.widget({widget: new CompletionHint(top), side: 1}).range(update.state.selection.main.head)]);\n    }\n  }\n\n  topCompletion(state: CM.EditorState): string|null {\n    const completion = CM.selectedCompletion(state);\n    if (!completion) {\n      return null;\n    }\n    let {label, apply} = completion;\n    if (typeof apply === 'string') {\n      label = apply;\n      apply = undefined;\n    }\n    if (apply || label.length > 100 || label.indexOf('\\n') > -1 || completion.type === 'secondary') {\n      return null;\n    }\n    const pos = state.selection.main.head;\n    const lineBefore = state.doc.lineAt(pos);\n    if (pos !== lineBefore.to) {\n      return null;\n    }\n    const partBefore = (label[0] === '\\''    ? /'(\\\\.|[^'\\\\])*$/ :\n                            label[0] === '\"' ? /\"(\\\\.|[^\"\\\\])*$/ :\n                                               /#?[\\w$]+$/)\n                           .exec(lineBefore.text);\n    if (partBefore && !label.startsWith(partBefore[0])) {\n      return null;\n    }\n    return label.slice(partBefore ? partBefore[0].length : 0);\n  }\n}, {decorations: p => p.decorations});\n\nexport function contentIncludingHint(view: CM.EditorView): string {\n  const plugin = view.plugin(showCompletionHint);\n  let content = view.state.doc.toString();\n  if (plugin?.currentHint) {\n    const {head} = view.state.selection.main;\n    content = content.slice(0, head) + plugin.currentHint + content.slice(head);\n  }\n  return content;\n}\n\nexport const setAiAutoCompleteSuggestion = CM.StateEffect.define<ActiveSuggestion|null>();\n\ninterface ActiveSuggestion {\n  text: string;\n  from: number;\n  sampleId: number;\n  rpcGlobalId?: Host.AidaClient.RpcGlobalId;\n  startTime: number;\n  onImpression: (rpcGlobalId: Host.AidaClient.RpcGlobalId, sampleId: number, latency: number) => void;\n  clearCachedRequest: () => void;\n}\n\nexport const aiAutoCompleteSuggestionState = CM.StateField.define<ActiveSuggestion|null>({\n  create: () => null,\n  update(value, tr) {\n    for (const effect of tr.effects) {\n      if (effect.is(setAiAutoCompleteSuggestion)) {\n        if (effect.value) {\n          return effect.value;\n        }\n        value?.clearCachedRequest();\n        return null;\n      }\n    }\n\n    if (!value) {\n      return value;\n    }\n\n    // A suggestion from an effect can be stale if the document was changed\n    // between when the request was sent and the response was received.\n    // We check if the position is still valid before trying to map it.\n    if (value.from > tr.state.doc.length) {\n      value.clearCachedRequest();\n      return null;\n    }\n\n    // If deletion occurs, set to null. Otherwise, the mapping might fail if\n    // the position is inside the deleted range.\n    if (tr.docChanged && tr.state.doc.length < tr.startState.doc.length) {\n      value.clearCachedRequest();\n      return null;\n    }\n\n    const from = tr.changes.mapPos(value.from);\n    const {head} = tr.state.selection.main;\n\n    // If a change happened before the position from which suggestion was generated, set to null.\n    if (tr.docChanged && head < from) {\n      value.clearCachedRequest();\n      return null;\n    }\n\n    // Check if what's typed after the AI suggestion is a prefix of the AI suggestion.\n    const typedText = tr.state.doc.sliceString(from, head);\n    return value.text.startsWith(typedText) ? value : null;\n  },\n});\n\nexport function hasActiveAiSuggestion(state: CM.EditorState): boolean {\n  return state.field(aiAutoCompleteSuggestionState) !== null;\n}\n\nexport function acceptAiAutoCompleteSuggestion(view: CM.EditorView):\n    {accepted: boolean, suggestion?: ActiveSuggestion} {\n  const selectedCompletion = CM.selectedCompletion(view.state);\n  if (selectedCompletion) {\n    return {accepted: false};\n  }\n\n  const suggestion = view.state.field(aiAutoCompleteSuggestionState);\n  if (!suggestion) {\n    return {accepted: false};\n  }\n\n  const {text, from} = suggestion;\n  const {head} = view.state.selection.main;\n  const typedText = view.state.doc.sliceString(from, head);\n  if (!text.startsWith(typedText)) {\n    return {accepted: false};\n  }\n\n  const remainingText = text.slice(typedText.length);\n  view.dispatch({\n    changes: {from: head, insert: remainingText},\n    selection: {anchor: head + remainingText.length},\n    effects: setAiAutoCompleteSuggestion.of(null),\n    userEvent: 'input.complete',\n  });\n\n  suggestion.clearCachedRequest();\n  return {accepted: true, suggestion};\n}\n\nexport const aiAutoCompleteSuggestion: CM.Extension = [\n  aiAutoCompleteSuggestionState,\n  CM.ViewPlugin.fromClass(\n      class {\n        decorations: CM.DecorationSet = CM.Decoration.none;\n        #lastLoggedSuggestion: ActiveSuggestion|null = null;\n\n        update(update: CM.ViewUpdate): void {\n          // If there is no text on the document, we don't want to show the AI suggestion.\n          if (update.state.doc.length === 0) {\n            this.decorations = CM.Decoration.none;\n            return;\n          }\n\n          // Hide decorations if there is no active AI suggestion.\n          const activeSuggestion = update.state.field(aiAutoCompleteSuggestionState);\n          if (!activeSuggestion) {\n            this.decorations = CM.Decoration.none;\n            return;\n          }\n\n          // Hide AI suggestion while the user is interacting with the traditional\n          // autocomplete menu to avoid conflicting suggestions.\n          if (CM.completionStatus(update.view.state) === 'pending') {\n            this.decorations = CM.Decoration.none;\n            return;\n          }\n\n          // Hide AI suggestion if the user has selected an item from the\n          // traditional autocomplete menu that is not the first one.\n          const selectedCompletionIndex = CM.selectedCompletionIndex(update.state);\n          if (selectedCompletionIndex && selectedCompletionIndex > 0) {\n            this.decorations = CM.Decoration.none;\n            return;\n          }\n\n          const {head} = update.state.selection.main;\n          // Hide AI suggestion if the user moves the cursor to a location\n          // before the position from which suggestion was generated.\n          if (head < activeSuggestion.from) {\n            this.decorations = CM.Decoration.none;\n            return;\n          }\n\n          const selectedCompletion = CM.selectedCompletion(update.state);\n          const additionallyTypedText = update.state.doc.sliceString(activeSuggestion.from, head);\n          // The user might have typed text after the suggestion is triggered.\n          // If the suggestion no longer starts with the typed text, hide it.\n          if (!activeSuggestion.text.startsWith(additionallyTypedText)) {\n            this.decorations = CM.Decoration.none;\n            return;\n          }\n\n          let ghostText = activeSuggestion.text.slice(additionallyTypedText.length);\n          if (selectedCompletion) {\n            // Do not show AI generated suggestion if top traditional suggestion is of type\n            // 'keyword' - `do`, `while` etc.\n            if (selectedCompletion.type?.includes('keyword')) {\n              this.decorations = CM.Decoration.none;\n              return;\n            }\n            // If a traditional autocomplete menu is shown, the AI suggestion is only\n            // shown if it builds upon the currently selected item. If there is no\n            // overlap, we hide the AI suggestion. For example, for the text `console`\n            // if the traditional autocomplete suggests `log` and the AI\n            // suggests `warn`, there is no overlap and the AI suggestion is hidden.\n            const overlappingText = TextUtils.TextUtils.getOverlap(selectedCompletion.label, ghostText) ?? '';\n            const lineAtAiSuggestion = update.state.doc.lineAt(activeSuggestion.from).text;\n            const overlapsWithSelectedCompletion =\n                (lineAtAiSuggestion + overlappingText).endsWith(selectedCompletion.label);\n            if (!overlapsWithSelectedCompletion) {\n              this.decorations = CM.Decoration.none;\n              return;\n            }\n          }\n\n          // When `conservativeCompletion` is disabled in Console, the editor shows a ghost\n          // text for the first item in the traditional autocomplete menu and this ghost text\n          // is reflected in `currentHint`. In this case, we need to remove\n          // the overlapping part from our AI suggestion's ghost text to avoid\n          // showing a double suggestion.\n          const currentMenuHint = update.view.plugin(showCompletionHint)?.currentHint;\n          const conservativeCompletionEnabled = update.state.field(conservativeCompletion, false);\n          if (!conservativeCompletionEnabled && currentMenuHint) {\n            ghostText = ghostText.slice(currentMenuHint.length);\n          }\n\n          this.decorations =\n              CM.Decoration.set([CM.Decoration.widget({widget: new CompletionHint(ghostText), side: 1}).range(head)]);\n          this.#registerImpressionIfNeeded(activeSuggestion);\n        }\n\n        #registerImpressionIfNeeded(activeSuggestion: ActiveSuggestion): void {\n          if (!activeSuggestion.rpcGlobalId) {\n            return;\n          }\n          if (this.#lastLoggedSuggestion?.rpcGlobalId === activeSuggestion?.rpcGlobalId &&\n              this.#lastLoggedSuggestion?.sampleId === activeSuggestion?.sampleId) {\n            return;\n          }\n          const latency = performance.now() - activeSuggestion.startTime;\n          // only register impression for the first time AI generated suggestion is shown to the user.\n          activeSuggestion.onImpression(activeSuggestion.rpcGlobalId, activeSuggestion.sampleId, latency);\n          this.#lastLoggedSuggestion = activeSuggestion;\n        }\n      },\n      {decorations: p => p.decorations}),\n];\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CM from '../../../third_party/codemirror.next/codemirror.next.js';\n\nexport const editorTheme = CM.EditorView.theme({\n  '&.cm-editor': {\n    color: 'color: var(--sys-color-on-subtle)',\n    cursor: 'auto',\n    '&.cm-focused': {\n      outline: 'none',\n    },\n  },\n\n  '.cm-scroller': {\n    lineHeight: '1.4em',\n    fontFamily: 'var(--source-code-font-family)',\n    fontSize: 'var(--source-code-font-size)',\n  },\n\n  '.cm-content': {\n    lineHeight: '1.4em',\n  },\n\n  '.cm-panels': {\n    backgroundColor: 'var(--sys-color-cdt-base-container)',\n  },\n\n  '.cm-panels-bottom': {\n    borderTop: '1px solid var(--sys-color-divider)',\n  },\n\n  '.cm-selectionMatch': {\n    backgroundColor: 'var(--sys-color-yellow-container)',\n  },\n\n  '.cm-cursor': {\n    borderLeft: '1px solid var(--sys-color-inverse-surface)',\n  },\n\n  '&.cm-readonly .cm-cursor': {\n    display: 'none',\n  },\n\n  '.cm-cursor-secondary': {\n    borderLeft: '1px solid var(--sys-color-neutral-outline)',\n  },\n\n  '&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground': {\n    background: 'var(--sys-color-tonal-container)',\n  },\n\n  '.cm-line::selection': {\n    color: 'currentColor',\n  },\n\n  '.cm-selectionBackground': {\n    background: 'var(--sys-color-neutral-container)',\n  },\n\n  '.cm-gutters': {\n    borderRight: 'none',\n    whiteSpace: 'nowrap',\n    backgroundColor: 'var(--sys-color-cdt-base-container)',\n  },\n\n  '.cm-gutters .cm-foldGutterElement': {\n    cursor: 'pointer',\n    opacity: '0%',\n    transition: 'opacity 0.2s',\n  },\n\n  '.cm-gutters .cm-foldGutterElement-folded, .cm-gutters:hover .cm-foldGutterElement': {\n    opacity: '100%',\n  },\n\n  '.cm-lineNumbers': {\n    overflow: 'visible',\n    minWidth: '40px',\n  },\n  '.cm-lineNumbers .cm-gutterElement': {\n    color: 'var(--sys-color-outline)',\n    padding: '0 3px 0 9px',\n  },\n\n  '.cm-foldPlaceholder': {\n    background: 'transparent',\n    border: 'none',\n    color: 'var(--sys-color-token-subtle)',\n  },\n\n  '.cm-matchingBracket, .cm-nonmatchingBracket': {\n    background: 'transparent',\n    borderBottom: 'none',\n  },\n\n  '&:focus-within .cm-matchingBracket': {\n    color: 'inherit',\n    backgroundColor: 'var(--sys-color-surface-variant)',\n    borderBottom: '1px solid var(--sys-color-outline)',\n  },\n\n  '&:focus-within .cm-nonmatchingBracket': {\n    backgroundColor: 'var(--sys-color-error-container)',\n    borderBottom: '1px solid var(--sys-color-error)',\n  },\n\n  '.cm-trailingWhitespace': {\n    backgroundColor: 'var(--sys-color-error-container)',\n  },\n\n  '.cm-highlightedTab': {\n    display: 'inline-block',\n    position: 'relative',\n    '&:before': {\n      content: '\"\"',\n      borderBottom: '1px solid var(--sys-color-token-subtle)',\n      position: 'absolute',\n      left: '5%',\n      bottom: '50%',\n      width: '90%',\n      pointerEvents: 'none',\n    },\n  },\n\n  '.cm-highlightedSpaces:before': {\n    color: 'var(--sys-color-token-subtle)',\n    content: 'attr(data-display)',\n    position: 'absolute',\n    pointerEvents: 'none',\n  },\n\n  '.cm-placeholder': {\n    color: 'var(--sys-color-token-subtle)',\n  },\n\n  '.cm-completionHint': {\n    color: 'var(--sys-color-token-subtle)',\n  },\n\n  '.cm-tooltip': {\n    boxShadow: 'var(--drop-shadow)',\n    backgroundColor: 'var(--sys-color-neutral-container)',\n  },\n\n  '.cm-argumentHints': {\n    pointerEvents: 'none',\n    padding: '0 4px',\n    whiteSpace: 'nowrap',\n    lineHeight: '20px',\n    marginBottom: '4px',\n    width: 'fit-content',\n  },\n\n  '.cm-tooltip.cm-tooltip-autocomplete > ul': {\n    backgroundColor: 'var(--sys-color-cdt-base-container)',\n    maxHeight: '25em',\n    minWidth: '16em',\n    '& > li': {\n      display: 'flex',\n      justifyContent: 'space-between',\n      border: '1px solid var(--sys-color-cdt-base-container)',\n    },\n    '& > li.cm-secondaryCompletion': {\n      display: 'flex',\n      backgroundColor: 'var(--sys-color-neutral-container)',\n      borderColor: 'var(--sys-color-neutral-container)',\n      justifyContent: 'space-between',\n      '&::before': {\n        content: '\">\"',\n        fontWeight: 'bold',\n        color: 'var(--sys-color-primary-bright)',\n        marginRight: '5px',\n      },\n    },\n    '& > li:hover': {\n      backgroundColor: 'var(--sys-color-state-hover-on-subtle)',\n    },\n    '& > li[aria-selected]': {\n      backgroundColor: 'var(--sys-color-tonal-container)',\n      borderColor: 'var(--sys-color-tonal-container)',\n      '&, &.cm-secondaryCompletion::before': {\n        color: 'var(--sys-color-on-tonal-container)',\n      },\n      '&::after': {\n        content: '\"tab\"',\n        color: 'var(--sys-color-primary-bright)',\n        border: '1px solid var(--sys-color-primary-bright)',\n        borderRadius: '2px',\n        marginLeft: '5px',\n        padding: '1px 3px',\n        fontSize: '10px',\n        lineHeight: '10px',\n      },\n    },\n  },\n\n  '.cm-tooltip.cm-tooltip-autocomplete.cm-conservativeCompletion > ul > li[aria-selected]': {\n    backgroundColor: 'var(--sys-color-cdt-base-container)',\n    border: '1px dotted var(--sys-color-on-surface)',\n    '&, &.cm-secondaryCompletion::before': {\n      color: 'var(--sys-color-on-surface)',\n    },\n    '&::after': {\n      border: '1px solid var(--sys-color-neutral-outline)',\n      color: 'var(--sys-color-token-subtle)',\n    },\n  },\n\n  '.cm-completionMatchedText': {\n    textDecoration: 'none',\n    fontWeight: 'bold',\n  },\n\n  '.cm-highlightedLine': {\n    animation: 'cm-fading-highlight 2s 0s',\n  },\n\n  '@keyframes cm-fading-highlight': {\n    from: {\n      backgroundColor: 'var(--sys-color-yellow-container)',\n    },\n    to: {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n", "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\n\n/**\n * The CodeMirror effect used to change the highlighted execution position.\n *\n * Usage:\n * ```js\n * view.dispatch({effects: setHighlightedPosition.of(position)});\n * ```\n */\nexport const setHighlightedPosition = CodeMirror.StateEffect.define<number>();\n\n/**\n * The CodeMirror effect used to clear the highlighted execution position.\n *\n * Usage:\n * ```js\n * view.dispatch({effects: clearHighlightedPosition.of()});\n * ```\n */\nexport const clearHighlightedPosition = CodeMirror.StateEffect.define<void>();\n\n/**\n * Constructs a CodeMirror extension that can be used to decorate the current execution\n * line (and token), for example when the debugger is paused, with specific CSS classes.\n *\n * @param executionLineClassName The CSS class name to use for decorating the execution line (e.g. `'cm-executionLine'`).\n * @param executionTokenClassName The CSS class name to use for decorating the execution token (e.g. `'cm-executionToken'`).\n * @returns a CodeMirror extension that highlights the current execution line and token when set.\n */\nexport function positionHighlighter(\n    executionLineClassName: string,\n    executionTokenClassName: string,\n    ): CodeMirror.Extension {\n  const executionLine = CodeMirror.Decoration.line({attributes: {class: executionLineClassName}});\n  const executionToken = CodeMirror.Decoration.mark({attributes: {class: executionTokenClassName}});\n\n  const positionHighlightedState = CodeMirror.StateField.define<null|number>({\n    create() {\n      return null;\n    },\n\n    update(pos, tr) {\n      if (pos) {\n        pos = tr.changes.mapPos(pos, -1, CodeMirror.MapMode.TrackDel);\n      }\n      for (const effect of tr.effects) {\n        if (effect.is(clearHighlightedPosition)) {\n          pos = null;\n        } else if (effect.is(setHighlightedPosition)) {\n          pos = Math.max(0, Math.min(effect.value, tr.newDoc.length - 1));\n        }\n      }\n      return pos;\n    },\n  });\n\n  function getHighlightedPosition(state: CodeMirror.EditorState): null|number {\n    return state.field(positionHighlightedState);\n  }\n\n  class PositionHighlighter {\n    tree: CodeMirror.Tree;\n    decorations: CodeMirror.DecorationSet;\n\n    constructor({state}: CodeMirror.EditorView) {\n      this.tree = CodeMirror.syntaxTree(state);\n      this.decorations = this.#computeDecorations(state, getHighlightedPosition(state));\n    }\n\n    update(update: CodeMirror.ViewUpdate): void {\n      const tree = CodeMirror.syntaxTree(update.state);\n      const position = getHighlightedPosition(update.state);\n      const positionChanged = position !== getHighlightedPosition(update.startState);\n      if (tree.length !== this.tree.length || positionChanged) {\n        this.tree = tree;\n        this.decorations = this.#computeDecorations(update.state, position);\n      } else {\n        this.decorations = this.decorations.map(update.changes);\n      }\n    }\n\n    #computeDecorations(state: CodeMirror.EditorState, position: null|number): CodeMirror.DecorationSet {\n      const builder = new CodeMirror.RangeSetBuilder<CodeMirror.Decoration>();\n      if (position !== null) {\n        const {doc} = state;\n        const line = doc.lineAt(position);\n        builder.add(line.from, line.from, executionLine);\n        const syntaxTree = CodeMirror.syntaxTree(state);\n        const syntaxNode = syntaxTree.resolveInner(position, 1);\n        const tokenEnd = Math.min(line.to, syntaxNode.to);\n        if (tokenEnd > position) {\n          builder.add(position, tokenEnd, executionToken);\n        }\n      }\n      return builder.finish();\n    }\n  }\n\n  const positionHighlighterSpec = {\n    decorations: ({decorations}: PositionHighlighter) => decorations,\n  };\n\n  return [\n    positionHighlightedState,\n    CodeMirror.ViewPlugin.fromClass(PositionHighlighter, positionHighlighterSpec),\n  ];\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Bindings from '../../../models/bindings/bindings.js';\nimport * as JavaScriptMetaData from '../../../models/javascript_metadata/javascript_metadata.js';\nimport * as SourceMapScopes from '../../../models/source_map_scopes/source_map_scopes.js';\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\nimport * as UI from '../../legacy/legacy.js';\n\nimport {type ArgumentHintsTooltip, closeTooltip, cursorTooltip} from './cursor_tooltip.js';\n\nexport function completion(): CodeMirror.Extension {\n  return CodeMirror.javascript.javascriptLanguage.data.of({\n    autocomplete: javascriptCompletionSource,\n  });\n}\n\nexport async function completeInContext(\n    textBefore: string, query: string, force = false): Promise<UI.SuggestBox.Suggestions> {\n  const state = CodeMirror.EditorState.create({\n    doc: textBefore + query,\n    selection: {anchor: textBefore.length},\n    extensions: CodeMirror.javascript.javascriptLanguage,\n  });\n  const result = await javascriptCompletionSource(new CodeMirror.CompletionContext(state, state.doc.length, force));\n  return result ? result.options.filter(o => o.label.startsWith(query)).map(o => ({\n                                                                              text: o.label,\n                                                                              priority: 100 + (o.boost || 0),\n                                                                              isSecondary: o.type === 'secondary',\n                                                                            })) :\n                  [];\n}\n\nclass CompletionSet {\n  constructor(\n      readonly completions: CodeMirror.Completion[] = [],\n      readonly seen: Set<string> = new Set(),\n  ) {\n  }\n\n  add(completion: CodeMirror.Completion): void {\n    if (!this.seen.has(completion.label)) {\n      this.seen.add(completion.label);\n      this.completions.push(completion);\n    }\n  }\n\n  copy(): CompletionSet {\n    return new CompletionSet(this.completions.slice(), new Set(this.seen));\n  }\n}\n\nconst javascriptKeywords = [\n  'async',      'await', 'break',  'case',    'catch', 'class',   'const',  'continue', 'debugger', 'default', 'delete',\n  'do',         'else',  'export', 'extends', 'false', 'finally', 'for',    'function', 'if',       'import',  'in',\n  'instanceof', 'let',   'new',    'null',    'of',    'return',  'static', 'super',    'switch',   'this',    'throw',\n  'true',       'try',   'typeof', 'var',     'void',  'while',   'with',   'yield',\n];\nconst consoleBuiltinFunctions = [\n  'clear',\n  'copy',\n  'debug',\n  'dir',\n  'dirxml',\n  'getEventListeners',\n  'inspect',\n  'keys',\n  'monitor',\n  'monitorEvents',\n  'profile',\n  'profileEnd',\n  'queryObjects',\n  'table',\n  'undebug',\n  'unmonitor',\n  'unmonitorEvents',\n  'values',\n];\nconst consoleBuiltinVariables = ['$', '$$', '$x', '$0', '$_'];\n\nconst baseCompletions = new CompletionSet();\nfor (const kw of javascriptKeywords) {\n  baseCompletions.add({label: kw, type: 'keyword'});\n}\nfor (const builtin of consoleBuiltinFunctions) {\n  baseCompletions.add({label: builtin, type: 'function'});\n}\nfor (const varName of consoleBuiltinVariables) {\n  baseCompletions.add({label: varName, type: 'variable'});\n}\n\nconst dontCompleteIn = new Set([\n  'TemplateString',\n  'LineComment',\n  'BlockComment',\n  'TypeDefinition',\n  'VariableDefinition',\n  'PropertyDefinition',\n  'TypeName',\n]);\n\nexport const enum QueryType {\n  EXPRESSION = 0,\n  PROPERTY_NAME = 1,\n  PROPERTY_EXPRESSION = 2,\n  POTENTIALLY_RETRIEVING_FROM_MAP = 3,\n}\n\nexport function getQueryType(tree: CodeMirror.Tree, pos: number, doc: CodeMirror.Text): {\n  type: QueryType,\n  from?: number,\n  relatedNode?: CodeMirror.SyntaxNode,\n}|null {\n  let node = tree.resolveInner(pos, -1);\n  const parent = node.parent;\n  if (dontCompleteIn.has(node.name)) {\n    return null;\n  }\n\n  if (node.name === 'PropertyName' || node.name === 'PrivatePropertyName') {\n    return parent?.name !== 'MemberExpression' ? null :\n                                                 {type: QueryType.PROPERTY_NAME, from: node.from, relatedNode: parent};\n  }\n  if (node.name === 'VariableName' ||\n      // Treat alphabetic keywords as variables\n      !node.firstChild && node.to - node.from < 20 && !/[^a-z]/.test(doc.sliceString(node.from, node.to))) {\n    return {type: QueryType.EXPRESSION, from: node.from};\n  }\n  if (node.name === 'String') {\n    const parent = node.parent;\n    return parent?.name === 'MemberExpression' && parent.childBefore(node.from)?.name === '[' ?\n        {type: QueryType.PROPERTY_EXPRESSION, from: node.from, relatedNode: parent} :\n        null;\n  }\n  // Enter unfinished nodes before the position.\n  node = node.enterUnfinishedNodesBefore(pos);\n  // Normalize to parent node when pointing after a child of a member expr.\n  if (node.to === pos && node.parent?.name === 'MemberExpression') {\n    node = node.parent;\n  }\n  if (node.name === 'MemberExpression') {\n    const before = node.childBefore(Math.min(pos, node.to));\n    if (before?.name === '[') {\n      return {type: QueryType.PROPERTY_EXPRESSION, relatedNode: node};\n    }\n    if (before?.name === '.' || before?.name === '?.') {\n      return {type: QueryType.PROPERTY_NAME, relatedNode: node};\n    }\n  }\n  if (node.name === '(') {\n    // map.get(<auto-complete>\n    if (parent?.name === 'ArgList' && parent?.parent?.name === 'CallExpression') {\n      // map.get\n      const callReceiver = parent?.parent?.firstChild;\n      if (callReceiver?.name === 'MemberExpression') {\n        // get\n        const propertyExpression = callReceiver?.lastChild;\n        if (propertyExpression && doc.sliceString(propertyExpression.from, propertyExpression.to) === 'get') {\n          // map\n          const potentiallyMapObject = callReceiver?.firstChild;\n          return {type: QueryType.POTENTIALLY_RETRIEVING_FROM_MAP, relatedNode: potentiallyMapObject || undefined};\n        }\n      }\n    }\n  }\n  return {type: QueryType.EXPRESSION};\n}\n\nexport async function javascriptCompletionSource(cx: CodeMirror.CompletionContext):\n    Promise<CodeMirror.CompletionResult|null> {\n  const query = getQueryType(CodeMirror.syntaxTree(cx.state), cx.pos, cx.state.doc);\n  if (!query || query.from === undefined && !cx.explicit && query.type === QueryType.EXPRESSION) {\n    return null;\n  }\n\n  const script = getExecutionContext()?.debuggerModel.selectedCallFrame()?.script;\n  if (script &&\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().pluginManager.hasPluginForScript(script)) {\n    return null;\n  }\n\n  let result: CompletionSet;\n  let quote: string|undefined = undefined;\n  if (query.type === QueryType.EXPRESSION) {\n    const [scope, global] = await Promise.all([\n      completeExpressionInScope(),\n      completeExpressionGlobal(),\n    ]);\n    if (scope.completions.length) {\n      result = scope;\n      for (const r of global.completions) {\n        result.add(r);\n      }\n    } else {\n      result = global;\n    }\n  } else if (query.type === QueryType.PROPERTY_NAME || query.type === QueryType.PROPERTY_EXPRESSION) {\n    const objectExpr = (query.relatedNode as CodeMirror.SyntaxNode).getChild('Expression');\n    if (query.type === QueryType.PROPERTY_EXPRESSION) {\n      quote = query.from === undefined ? '\\'' : cx.state.sliceDoc(query.from, query.from + 1);\n    }\n    if (!objectExpr) {\n      return null;\n    }\n    result = await completeProperties(\n        cx.state.sliceDoc(objectExpr.from, objectExpr.to), quote, cx.state.sliceDoc(cx.pos, cx.pos + 1) === ']');\n  } else if (query.type === QueryType.POTENTIALLY_RETRIEVING_FROM_MAP) {\n    const potentialMapObject = query.relatedNode;\n    if (!potentialMapObject) {\n      return null;\n    }\n    result = await maybeCompleteKeysFromMap(cx.state.sliceDoc(potentialMapObject.from, potentialMapObject.to));\n  } else {\n    return null;\n  }\n  return {\n    from: query.from ?? cx.pos,\n    options: result.completions,\n    validFor: !quote   ? SPAN_IDENT :\n        quote === '\\'' ? SPAN_SINGLE_QUOTE :\n                         SPAN_DOUBLE_QUOTE,\n  };\n}\n\nconst SPAN_IDENT = /^#?(?:[$_\\p{ID_Start}])(?:[$_\\u200C\\u200D\\p{ID_Continue}])*$/u,\n      SPAN_SINGLE_QUOTE = /^\\'(\\\\.|[^\\\\'\\n])*'?$/, SPAN_DOUBLE_QUOTE = /^\"(\\\\.|[^\\\\\"\\n])*\"?$/;\n\nfunction getExecutionContext(): SDK.RuntimeModel.ExecutionContext|null {\n  return UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n}\n\nasync function evaluateExpression(\n    context: SDK.RuntimeModel.ExecutionContext,\n    expression: string,\n    group: string,\n    ): Promise<SDK.RemoteObject.RemoteObject|null> {\n  const result = await context.evaluate(\n      {\n        expression,\n        objectGroup: group,\n        includeCommandLineAPI: true,\n        silent: true,\n        returnByValue: false,\n        generatePreview: false,\n        throwOnSideEffect: true,\n        timeout: 500,\n        replMode: true,\n      },\n      false, false);\n  if ('error' in result || result.exceptionDetails || !result.object) {\n    return null;\n  }\n  return result.object;\n}\n\nconst primitivePrototypes = new Map<string, string>([\n  ['string', 'String'],\n  ['symbol', 'Symbol'],\n  ['number', 'Number'],\n  ['boolean', 'Boolean'],\n  ['bigint', 'BigInt'],\n]);\n\nconst maxCacheAge = 30_000;\n\nlet cacheInstance: PropertyCache|null = null;\n\n/**\n * Store recent collections of property completions. The empty string\n * is used to store the set of global bindings.\n **/\nclass PropertyCache {\n  readonly #cache = new Map<string, Promise<CompletionSet>>();\n\n  constructor() {\n    const clear = (): void => this.#cache.clear();\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.CommandEvaluated, clear);\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.RuntimeModel.ExecutionContext, clear);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerResumed, clear);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerPaused, clear);\n  }\n\n  get(expression: string): Promise<CompletionSet>|undefined {\n    return this.#cache.get(expression);\n  }\n\n  set(expression: string, value: Promise<CompletionSet>): void {\n    this.#cache.set(expression, value);\n    window.setTimeout(() => {\n      if (this.#cache.get(expression) === value) {\n        this.#cache.delete(expression);\n      }\n    }, maxCacheAge);\n  }\n\n  static instance(): PropertyCache {\n    if (!cacheInstance) {\n      cacheInstance = new PropertyCache();\n    }\n    return cacheInstance;\n  }\n}\n\nasync function maybeCompleteKeysFromMap(objectVariable: string): Promise<CompletionSet> {\n  const result = new CompletionSet();\n  const context = getExecutionContext();\n  if (!context) {\n    return result;\n  }\n  const maybeRetrieveKeys =\n      await evaluateExpression(context, `[...Map.prototype.keys.call(${objectVariable})]`, 'completion');\n  if (!maybeRetrieveKeys) {\n    return result;\n  }\n  const properties = SDK.RemoteObject.RemoteArray.objectAsArray(maybeRetrieveKeys);\n  const numProperties = properties.length();\n  for (let i = 0; i < numProperties; i++) {\n    result.add({\n      label: `\"${(await properties.at(i)).value}\")`,\n      type: 'constant',\n      boost: i * -1,\n    });\n  }\n  return result;\n}\n\nasync function completeProperties(\n    expression: string,\n    quoted?: string,\n    hasBracket = false,\n    ): Promise<CompletionSet> {\n  const cache = PropertyCache.instance();\n  if (!quoted) {\n    const cached = cache.get(expression);\n    if (cached) {\n      return await cached;\n    }\n  }\n  const context = getExecutionContext();\n  if (!context) {\n    return new CompletionSet();\n  }\n  const result = completePropertiesInner(expression, context, quoted, hasBracket);\n  if (!quoted) {\n    cache.set(expression, result);\n  }\n  return await result;\n}\n\nasync function completePropertiesInner(\n    expression: string,\n    context: SDK.RuntimeModel.ExecutionContext,\n    quoted?: string,\n    hasBracket = false,\n    ): Promise<CompletionSet> {\n  const result = new CompletionSet();\n  if (!context) {\n    return result;\n  }\n  let object = await evaluateExpression(context, expression, 'completion');\n  if (!object) {\n    return result;\n  }\n\n  while (object.type === 'object' && object.subtype === 'proxy') {\n    const properties = await object.getOwnProperties(false);\n    const innerObject = properties.internalProperties?.find(p => p.name === '[[Target]]')?.value;\n    if (!innerObject) {\n      break;\n    }\n    object = innerObject as SDK.RemoteObject.RemoteObject;\n  }\n\n  const toPrototype = primitivePrototypes.get(object.type);\n  if (toPrototype) {\n    object = await evaluateExpression(context, toPrototype + '.prototype', 'completion');\n  }\n\n  const functionType = expression === 'globalThis' ? 'function' : 'method';\n  const otherType = expression === 'globalThis' ? 'variable' : 'property';\n  if (object && (object.type === 'object' || object.type === 'function')) {\n    const properties = await object.getAllProperties(\n        /* accessorPropertiesOnly */ false, /* generatePreview */ false, /* nonIndexedPropertiesOnly */ true);\n    const isFunction = object.type === 'function';\n    for (const prop of properties.properties || []) {\n      if (!prop.symbol && !(isFunction && (prop.name === 'arguments' || prop.name === 'caller')) &&\n          (quoted || SPAN_IDENT.test(prop.name))) {\n        const label =\n            quoted ? quoted + prop.name.replaceAll('\\\\', '\\\\\\\\').replaceAll(quoted, '\\\\' + quoted) + quoted : prop.name;\n        const apply = (quoted && !hasBracket) ? `${label}]` : undefined;\n        const boost = 2 * Number(prop.isOwn) + 1 * Number(prop.enumerable);\n        const type = prop.value?.type === 'function' ? functionType : otherType;\n        result.add({apply, label, type, boost});\n      }\n    }\n  }\n  context.runtimeModel.releaseObjectGroup('completion');\n  return result;\n}\n\nasync function completeExpressionInScope(): Promise<CompletionSet> {\n  const result = new CompletionSet();\n  const selectedFrame = getExecutionContext()?.debuggerModel.selectedCallFrame();\n  if (!selectedFrame) {\n    return result;\n  }\n\n  const scopes = await Promise.all(selectedFrame.scopeChain().map(\n      scope => SourceMapScopes.NamesResolver.resolveScopeInObject(scope).getAllProperties(false, false)));\n  for (const scope of scopes) {\n    for (const property of scope.properties || []) {\n      result.add({\n        label: property.name,\n        type: property.value?.type === 'function' ? 'function' : 'variable',\n      });\n    }\n  }\n  return result;\n}\n\nasync function completeExpressionGlobal(): Promise<CompletionSet> {\n  const cache = PropertyCache.instance();\n  const cached = cache.get('');\n  if (cached) {\n    return await cached;\n  }\n\n  const context = getExecutionContext();\n  if (!context) {\n    return baseCompletions;\n  }\n  const result = baseCompletions.copy();\n\n  const fetchNames = completePropertiesInner('globalThis', context).then(fromWindow => {\n    return context.globalLexicalScopeNames().then(globals => {\n      for (const option of fromWindow.completions) {\n        result.add(option);\n      }\n      for (const name of globals || []) {\n        result.add({label: name, type: 'variable'});\n      }\n      return result;\n    });\n  });\n  cache.set('', fetchNames);\n  return await fetchNames;\n}\n\nexport async function isExpressionComplete(expression: string): Promise<boolean> {\n  const currentExecutionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n  if (!currentExecutionContext) {\n    return true;\n  }\n  const result =\n      await currentExecutionContext.runtimeModel.compileScript(expression, '', false, currentExecutionContext.id);\n  if (!result?.exceptionDetails?.exception) {\n    return true;\n  }\n  const description = result.exceptionDetails.exception.description;\n  if (description) {\n    return !description.startsWith('SyntaxError: Unexpected end of input') &&\n        !description.startsWith('SyntaxError: Unterminated template literal');\n  }\n  return false;\n}\n\nexport function argumentHints(): ArgumentHintsTooltip {\n  return cursorTooltip(getArgumentHints);\n}\n\nexport function closeArgumentsHintsTooltip(\n    view: CodeMirror.EditorView, tooltip: CodeMirror.StateField<CodeMirror.Tooltip|null>): boolean {\n  // If the tooltip is currently showing, the state will reflect its properties.\n  // If it isn't showing, the state is explicitly set to `null`.\n  if (view.state.field(tooltip) === null) {\n    return false;\n  }\n  view.dispatch({effects: closeTooltip.of(null)});\n  return true;\n}\n\nasync function getArgumentHints(\n    state: CodeMirror.EditorState, pos: number): Promise<(() => CodeMirror.TooltipView)|null> {\n  const node = CodeMirror.syntaxTree(state).resolveInner(pos).enterUnfinishedNodesBefore(pos);\n\n  if (node.name !== 'ArgList') {\n    return null;\n  }\n  const callee = node.parent?.getChild('Expression');\n  if (!callee) {\n    return null;\n  }\n  const argumentList = await getArgumentsForExpression(callee, state.doc);\n  if (!argumentList) {\n    return null;\n  }\n\n  let argumentIndex = 0;\n  for (let scanPos = pos;;) {\n    const before = node.childBefore(scanPos);\n    if (!before) {\n      break;\n    }\n    if (before.type.is('Expression')) {\n      argumentIndex++;\n    }\n    scanPos = before.from;\n  }\n  return () => tooltipBuilder(argumentList, argumentIndex);\n}\n\nasync function getArgumentsForExpression(\n    callee: CodeMirror.SyntaxNode, doc: CodeMirror.Text): Promise<string[][]|null> {\n  const context = getExecutionContext();\n  if (!context) {\n    return null;\n  }\n  const expression = doc.sliceString(callee.from, callee.to);\n  const result = await evaluateExpression(context, expression, 'argumentsHint');\n  if (!result || result.type !== 'function') {\n    return null;\n  }\n  const objGetter = async(): Promise<SDK.RemoteObject.RemoteObject|null> => {\n    const first = callee.firstChild;\n    if (!first || callee.name !== 'MemberExpression') {\n      return null;\n    }\n    return await evaluateExpression(context, doc.sliceString(first.from, first.to), 'argumentsHint');\n  };\n  return await getArgumentsForFunctionValue(result, objGetter, expression)\n      .finally(() => context.runtimeModel.releaseObjectGroup('argumentsHint'));\n}\n\nexport function argumentsList(input: string): string[] {\n  function parseParamList(cursor: CodeMirror.TreeCursor): string[] {\n    while (cursor.name !== 'ParamList') {\n      cursor.nextSibling();\n    }\n    const parameters = [];\n    if (cursor.name === 'ParamList' && cursor.firstChild()) {\n      let prefix = '';\n      do {\n        switch (cursor.name as string) {\n          case 'ArrayPattern':\n            parameters.push(prefix + 'arr');\n            prefix = '';\n            break;\n          case 'ObjectPattern':\n            parameters.push(prefix + 'obj');\n            prefix = '';\n            break;\n          case 'VariableDefinition':\n            parameters.push(prefix + input.slice(cursor.from, cursor.to));\n            prefix = '';\n            break;\n          case 'Spread':\n            prefix = '...';\n            break;\n        }\n      } while (cursor.nextSibling());\n    }\n    return parameters;\n  }\n  try {\n    try {\n      // First check if the |input| can be parsed as a method definition.\n      const {parser} = CodeMirror.javascript.javascriptLanguage.configure({strict: true, top: 'SingleClassItem'});\n      const cursor = parser.parse(input).cursor();\n      if (cursor.firstChild() && cursor.name === 'MethodDeclaration' && cursor.firstChild()) {\n        return parseParamList(cursor);\n      }\n      throw new Error('SingleClassItem rule is expected to have exactly one MethodDeclaration child');\n    } catch {\n      // Otherwise fall back to parsing as an expression.\n      const {parser} = CodeMirror.javascript.javascriptLanguage.configure({strict: true, top: 'SingleExpression'});\n      const cursor = parser.parse(input).cursor();\n      if (!cursor.firstChild()) {\n        throw new Error('SingleExpression rule is expected to have children');\n      }\n      switch (cursor.name) {\n        case 'ArrowFunction':\n        case 'FunctionExpression': {\n          if (!cursor.firstChild()) {\n            throw new Error(`${cursor.name} rule is expected to have children`);\n          }\n          return parseParamList(cursor);\n        }\n        case 'ClassExpression': {\n          if (!cursor.firstChild()) {\n            throw new Error(`${cursor.name} rule is expected to have children`);\n          }\n          do {\n            cursor.nextSibling();\n          } while (cursor.name as string !== 'ClassBody');\n          if (cursor.name as string === 'ClassBody' && cursor.firstChild()) {\n            do {\n              if (cursor.name as string === 'MethodDeclaration' && cursor.firstChild()) {\n                if (cursor.name as string === 'PropertyDefinition' &&\n                    input.slice(cursor.from, cursor.to) === 'constructor') {\n                  return parseParamList(cursor);\n                }\n                cursor.parent();\n              }\n            } while (cursor.nextSibling());\n          }\n          return [];\n        }\n      }\n      throw new Error('Unexpected expression');\n    }\n  } catch (cause) {\n    throw new Error(`Failed to parse for arguments list: ${input}`, {cause});\n  }\n}\n\nasync function getArgumentsForFunctionValue(\n    object: SDK.RemoteObject.RemoteObject,\n    receiverObjGetter: () => Promise<SDK.RemoteObject.RemoteObject|null>,\n    functionName?: string,\n    ): Promise<string[][]|null> {\n  const description = object.description;\n  if (!description) {\n    return null;\n  }\n  if (!description.endsWith('{ [native code] }')) {\n    return [argumentsList(description)];\n  }\n\n  // Check if this is a bound function.\n  if (description === 'function () { [native code] }') {\n    const fromBound = await getArgumentsForBoundFunction(object);\n    if (fromBound) {\n      return fromBound;\n    }\n  }\n\n  const javaScriptMetadata = JavaScriptMetaData.JavaScriptMetadata.JavaScriptMetadataImpl.instance();\n\n  const descriptionRegexResult = /^function ([^(]*)\\(/.exec(description);\n  const name = descriptionRegexResult?.[1] || functionName;\n  if (!name) {\n    return null;\n  }\n  const uniqueSignatures = javaScriptMetadata.signaturesForNativeFunction(name);\n  if (uniqueSignatures) {\n    return uniqueSignatures;\n  }\n  const receiverObj = await receiverObjGetter();\n  if (!receiverObj) {\n    return null;\n  }\n  const className = receiverObj.className;\n  if (className) {\n    const instanceMethods = javaScriptMetadata.signaturesForInstanceMethod(name, className);\n    if (instanceMethods) {\n      return instanceMethods;\n    }\n  }\n\n  // Check for static methods on a constructor.\n  if (receiverObj.description && receiverObj.type === 'function' &&\n      receiverObj.description.endsWith('{ [native code] }')) {\n    const receiverDescriptionRegexResult = /^function ([^(]*)\\(/.exec(receiverObj.description);\n    if (receiverDescriptionRegexResult) {\n      const receiverName = receiverDescriptionRegexResult[1];\n      const staticSignatures = javaScriptMetadata.signaturesForStaticMethod(name, receiverName);\n      if (staticSignatures) {\n        return staticSignatures;\n      }\n    }\n  }\n\n  for (const proto of await prototypesFromObject(receiverObj)) {\n    const instanceSignatures = javaScriptMetadata.signaturesForInstanceMethod(name, proto);\n    if (instanceSignatures) {\n      return instanceSignatures;\n    }\n  }\n  return null;\n}\n\nasync function prototypesFromObject(object: SDK.RemoteObject.RemoteObject): Promise<string[]> {\n  if (object.type === 'number') {\n    return ['Number', 'Object'];\n  }\n  if (object.type === 'string') {\n    return ['String', 'Object'];\n  }\n  if (object.type === 'symbol') {\n    return ['Symbol', 'Object'];\n  }\n  if (object.type === 'bigint') {\n    return ['BigInt', 'Object'];\n  }\n  if (object.type === 'boolean') {\n    return ['Boolean', 'Object'];\n  }\n  if (object.type === 'undefined' || object.subtype === 'null') {\n    return [];\n  }\n  return await object.callFunctionJSON(function(this: Object) {\n    const result = [];\n    for (let object = this; object; object = Object.getPrototypeOf(object)) {\n      if (typeof object === 'object' && object.constructor?.name) {\n        result[result.length] = object.constructor.name;\n      }\n    }\n    return result;\n  }, []) ?? [];\n}\n\n/**\n * Given a function object that is probably a bound function, try to\n * retrieve the argument list from its target function.\n **/\nasync function getArgumentsForBoundFunction(object: SDK.RemoteObject.RemoteObject): Promise<string[][]|null> {\n  const {internalProperties} = await object.getOwnProperties(false);\n  if (!internalProperties) {\n    return null;\n  }\n  const target = internalProperties.find(p => p.name === '[[TargetFunction]]')?.value;\n  const args = internalProperties.find(p => p.name === '[[BoundArgs]]')?.value;\n  const thisValue = internalProperties.find(p => p.name === '[[BoundThis]]')?.value;\n  if (!thisValue || !target || !args) {\n    return null;\n  }\n  const originalSignatures = await getArgumentsForFunctionValue(target, () => Promise.resolve(thisValue));\n  const boundArgsLength = SDK.RemoteObject.RemoteObject.arrayLength(args);\n  if (!originalSignatures) {\n    return null;\n  }\n  return originalSignatures.map(signature => {\n    const restIndex = signature.findIndex(arg => arg.startsWith('...'));\n    return restIndex > -1 && restIndex < boundArgsLength ? signature.slice(restIndex) :\n                                                           signature.slice(boundArgsLength);\n  });\n}\n\nfunction tooltipBuilder(signatures: string[][], currentIndex: number): {dom: HTMLElement} {\n  const tooltip = document.createElement('div');\n  tooltip.className = 'cm-argumentHints';\n  for (const args of signatures) {\n    const argumentsElement = document.createElement('span');\n    for (let i = 0; i < args.length; i++) {\n      if (i === currentIndex || (i < currentIndex && args[i].startsWith('...'))) {\n        const argElement = argumentsElement.appendChild(document.createElement('b'));\n        argElement.appendChild(document.createTextNode(args[i]));\n      } else {\n        argumentsElement.appendChild(document.createTextNode(args[i]));\n      }\n      if (i < args.length - 1) {\n        argumentsElement.appendChild(document.createTextNode(', '));\n      }\n    }\n    const signatureElement = tooltip.appendChild(document.createElement('div'));\n    signatureElement.className = 'source-code';\n    signatureElement.appendChild(document.createTextNode('\\u0192('));\n    signatureElement.appendChild(argumentsElement);\n    signatureElement.appendChild(document.createTextNode(')'));\n  }\n  return {dom: tooltip};\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\n\nexport type ArgumentHintsTooltip = [CodeMirror.StateField<CodeMirror.Tooltip|null>, CodeMirror.ViewPlugin<object>];\nexport const closeTooltip = CodeMirror.StateEffect.define<null>();\n\nexport function cursorTooltip(\n    source: (state: CodeMirror.EditorState, pos: number) => Promise<(() => CodeMirror.TooltipView)|null>,\n    ): ArgumentHintsTooltip {\n  const openTooltip = CodeMirror.StateEffect.define<() => CodeMirror.TooltipView>();\n\n  const state = CodeMirror.StateField.define<null|CodeMirror.Tooltip>({\n    create() {\n      return null;\n    },\n    update(val, tr) {\n      if (tr.selection) {\n        val = null;\n      }\n      if (val && !tr.changes.empty) {\n        const newPos = tr.changes.mapPos(val.pos, -1, CodeMirror.MapMode.TrackDel);\n        val = newPos === null ? null : {pos: newPos, create: val.create, above: true};\n      }\n      for (const effect of tr.effects) {\n        if (effect.is(openTooltip)) {\n          val = {pos: tr.state.selection.main.from, create: effect.value, above: true};\n        } else if (effect.is(closeTooltip)) {\n          val = null;\n        }\n      }\n      return val;\n    },\n    provide: field => CodeMirror.showTooltip.from(field),\n  });\n\n  const plugin = CodeMirror.ViewPlugin.fromClass(class {\n    pending = -1;\n    updateID = 0;\n\n    update(update: CodeMirror.ViewUpdate): void {\n      this.updateID++;\n      if (update.transactions.some(tr => tr.selection) && update.state.selection.main.empty) {\n        this.#scheduleUpdate(update.view);\n      }\n    }\n\n    #scheduleUpdate(view: CodeMirror.EditorView): void {\n      if (this.pending > -1) {\n        clearTimeout(this.pending);\n      }\n      this.pending = window.setTimeout(() => this.#startUpdate(view), 50) as unknown as number;\n    }\n\n    #startUpdate(view: CodeMirror.EditorView): void {\n      this.pending = -1;\n      const {main} = view.state.selection;\n      if (main.empty) {\n        const {updateID} = this;\n        void source(view.state, main.from).then(tooltip => {\n          if (this.updateID !== updateID) {\n            if (this.pending < 0) {\n              this.#scheduleUpdate(view);\n            }\n          } else if (tooltip) {\n            view.dispatch({effects: openTooltip.of(tooltip)});\n          } else {\n            view.dispatch({effects: closeTooltip.of(null)});\n          }\n        });\n      }\n    }\n  });\n\n  return [state, plugin];\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\n\nexport function toOffset(\n    doc: CodeMirror.Text, {lineNumber, columnNumber}: {lineNumber: number, columnNumber: number}): number {\n  // DevTools history items are 0-based, but CodeMirror is 1-based, so we have to increment the\n  // line we want to scroll to by 1.\n  const line = doc.line(Math.max(1, Math.min(doc.lines, lineNumber + 1)));\n  return Math.max(line.from, Math.min(line.to, line.from + columnNumber));\n}\n\nexport function toLineColumn(doc: CodeMirror.Text, offset: number): {lineNumber: number, columnNumber: number} {\n  offset = Math.max(0, Math.min(offset, doc.length));\n  const line = doc.lineAt(offset);\n  return {lineNumber: line.number - 1, columnNumber: offset - line.from};\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as WindowBoundsService from '../../../services/window_bounds/window_bounds.js';\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\nimport * as ThemeSupport from '../../legacy/theme_support/theme_support.js';\nimport * as CodeHighlighter from '../code_highlighter/code_highlighter.js';\n\nimport {baseConfiguration, dummyDarkTheme, dynamicSetting, DynamicSetting, themeSelection} from './config.js';\nimport {toLineColumn, toOffset} from './position.js';\nimport textEditorStyles from './textEditor.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-text-editor': TextEditor;\n  }\n}\n\nexport class TextEditor extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #activeEditor: CodeMirror.EditorView|undefined = undefined;\n  #dynamicSettings: ReadonlyArray<DynamicSetting<unknown>> = DynamicSetting.none;\n  #activeSettingListeners: Array<[Common.Settings.Setting<unknown>, (event: {data: unknown}) => void]> = [];\n  #pendingState: CodeMirror.EditorState|undefined;\n  #lastScrollSnapshot: CodeMirror.StateEffect<unknown>|undefined;\n  #resizeTimeout = -1;\n  #resizeListener = (): void => {\n    if (this.#resizeTimeout < 0) {\n      this.#resizeTimeout = window.setTimeout(() => {\n        this.#resizeTimeout = -1;\n        if (this.#activeEditor) {\n          CodeMirror.repositionTooltips(this.#activeEditor);\n        }\n      }, 50);\n    }\n  };\n  #devtoolsResizeObserver = new ResizeObserver(this.#resizeListener);\n\n  constructor(pendingState?: CodeMirror.EditorState) {\n    super();\n    this.#pendingState = pendingState;\n    this.#shadow.createChild('style').textContent = CodeHighlighter.codeHighlighterStyles;\n    this.#shadow.createChild('style').textContent = textEditorStyles;\n  }\n\n  #createEditor(): CodeMirror.EditorView {\n    this.#activeEditor = new CodeMirror.EditorView({\n      state: this.state,\n      parent: this.#shadow,\n      root: this.#shadow,\n      dispatch: (tr: CodeMirror.Transaction, view: CodeMirror.EditorView) => {\n        view.update([tr]);\n        this.#maybeDispatchInput(tr);\n        if (tr.reconfigured) {\n          this.#ensureSettingListeners();\n        }\n      },\n      scrollTo: this.#lastScrollSnapshot,\n    });\n\n    this.#activeEditor.scrollDOM.addEventListener('scroll', () => {\n      if (!this.#activeEditor) {\n        return;\n      }\n\n      this.#lastScrollSnapshot = this.#activeEditor.scrollSnapshot();\n      this.scrollEventHandledToSaveScrollPositionForTest();\n    });\n\n    this.#ensureSettingListeners();\n    this.#startObservingResize();\n    ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, () => {\n      const currentTheme = ThemeSupport.ThemeSupport.instance().themeName() === 'dark' ? dummyDarkTheme : [];\n      this.editor.dispatch({\n        effects: themeSelection.reconfigure(currentTheme),\n      });\n    });\n    return this.#activeEditor;\n  }\n\n  get editor(): CodeMirror.EditorView {\n    return this.#activeEditor || this.#createEditor();\n  }\n\n  dispatch(spec: CodeMirror.TransactionSpec): void {\n    return this.editor.dispatch(spec);\n  }\n\n  get state(): CodeMirror.EditorState {\n    if (this.#activeEditor) {\n      return this.#activeEditor.state;\n    }\n    if (!this.#pendingState) {\n      this.#pendingState = CodeMirror.EditorState.create({extensions: baseConfiguration('')});\n    }\n    return this.#pendingState;\n  }\n\n  set state(state: CodeMirror.EditorState) {\n    if (this.#pendingState === state) {\n      return;\n    }\n\n    this.#pendingState = state;\n\n    if (this.#activeEditor) {\n      this.#activeEditor.setState(state);\n      this.#ensureSettingListeners();\n    }\n  }\n\n  scrollEventHandledToSaveScrollPositionForTest(): void {\n  }\n\n  connectedCallback(): void {\n    if (!this.#activeEditor) {\n      this.#createEditor();\n    } else {\n      this.#activeEditor.dispatch({effects: this.#lastScrollSnapshot});\n    }\n  }\n\n  disconnectedCallback(): void {\n    if (this.#activeEditor) {\n      this.#activeEditor.dispatch({effects: clearHighlightedLine.of(null)});\n      this.#pendingState = this.#activeEditor.state;\n      this.#devtoolsResizeObserver.disconnect();\n      window.removeEventListener('resize', this.#resizeListener);\n      this.#activeEditor.destroy();\n      this.#activeEditor = undefined;\n      this.#ensureSettingListeners();\n    }\n  }\n\n  override focus(): void {\n    if (this.#activeEditor) {\n      this.#activeEditor.focus();\n    }\n  }\n\n  #ensureSettingListeners(): void {\n    const dynamicSettings = this.#activeEditor ?\n        this.#activeEditor.state.facet<ReadonlyArray<DynamicSetting<unknown>>>(dynamicSetting) :\n        DynamicSetting.none;\n    if (dynamicSettings === this.#dynamicSettings) {\n      return;\n    }\n    this.#dynamicSettings = dynamicSettings;\n\n    for (const [setting, listener] of this.#activeSettingListeners) {\n      setting.removeChangeListener(listener);\n    }\n    this.#activeSettingListeners = [];\n\n    for (const dynamicSetting of dynamicSettings) {\n      const handler = ({data}: {data: unknown}): void => {\n        const change = dynamicSetting.sync(this.state, data);\n        if (change && this.#activeEditor) {\n          this.#activeEditor.dispatch({effects: change});\n        }\n      };\n      const setting = Common.Settings.Settings.instance().moduleSetting(dynamicSetting.settingName);\n      setting.addChangeListener(handler);\n      this.#activeSettingListeners.push([setting, handler]);\n    }\n  }\n\n  #startObservingResize(): void {\n    const devtoolsElement =\n        WindowBoundsService.WindowBoundsService.WindowBoundsServiceImpl.instance().getDevToolsBoundingElement();\n    if (devtoolsElement) {\n      this.#devtoolsResizeObserver.observe(devtoolsElement);\n    }\n    window.addEventListener('resize', this.#resizeListener);\n  }\n\n  #maybeDispatchInput(transaction: CodeMirror.Transaction): void {\n    const userEvent = transaction.annotation(CodeMirror.Transaction.userEvent);\n    const inputType = userEvent ? CODE_MIRROR_USER_EVENT_TO_INPUT_EVENT_TYPE.get(userEvent) : null;\n    if (inputType) {\n      this.dispatchEvent(new InputEvent('input', {inputType}));\n    }\n  }\n\n  revealPosition(selection: CodeMirror.EditorSelection, highlight = true): void {\n    const view = this.#activeEditor;\n    if (!view) {\n      return;\n    }\n\n    const line = view.state.doc.lineAt(selection.main.head);\n    const effects: Array<CodeMirror.StateEffect<unknown>> = [];\n    if (highlight) {\n      // Lazily register the highlight line state.\n      if (!view.state.field(highlightedLineState, false)) {\n        view.dispatch({effects: CodeMirror.StateEffect.appendConfig.of(highlightedLineState)});\n      } else {\n        // Always clear the previous highlight line first. This cannot be done\n        // in combination with the other effects, as it wouldn't restart the CSS\n        // highlight line animation.\n        view.dispatch({effects: clearHighlightedLine.of(null)});\n      }\n\n      // Here we finally start the actual highlight line effects.\n      effects.push(setHighlightedLine.of(line.from));\n    }\n\n    const editorRect = view.scrollDOM.getBoundingClientRect();\n    const targetPos = view.coordsAtPos(selection.main.head);\n    if (!selection.main.empty) {\n      // If the caller provided an actual range, we use the default 'nearest' on both axis.\n      // Otherwise we 'center' on an axis to provide more context around the single point.\n      effects.push(CodeMirror.EditorView.scrollIntoView(selection.main));\n    } else if (!targetPos || targetPos.top < editorRect.top || targetPos.bottom > editorRect.bottom) {\n      effects.push(CodeMirror.EditorView.scrollIntoView(selection.main, {y: 'center'}));\n    } else if (targetPos.left < editorRect.left || targetPos.right > editorRect.right) {\n      effects.push(CodeMirror.EditorView.scrollIntoView(selection.main, {x: 'center'}));\n    }\n\n    view.dispatch({\n      selection,\n      effects,\n      userEvent: 'select.reveal',\n    });\n  }\n\n  createSelection(head: {lineNumber: number, columnNumber: number}, anchor?: {\n    lineNumber: number,\n    columnNumber: number,\n  }): CodeMirror.EditorSelection {\n    const {doc} = this.state;\n    const headPos = toOffset(doc, head);\n    return CodeMirror.EditorSelection.single(anchor ? toOffset(doc, anchor) : headPos, headPos);\n  }\n\n  toLineColumn(pos: number): {lineNumber: number, columnNumber: number} {\n    return toLineColumn(this.state.doc, pos);\n  }\n\n  toOffset(pos: {lineNumber: number, columnNumber: number}): number {\n    return toOffset(this.state.doc, pos);\n  }\n}\n\ncustomElements.define('devtools-text-editor', TextEditor);\n\n// Line highlighting\n\nconst clearHighlightedLine = CodeMirror.StateEffect.define<null>();\nconst setHighlightedLine = CodeMirror.StateEffect.define<number>();\n\nconst highlightedLineState = CodeMirror.StateField.define<CodeMirror.DecorationSet>({\n  create: () => CodeMirror.Decoration.none,\n  update(value, tr) {\n    if (!tr.changes.empty && value.size) {\n      value = value.map(tr.changes);\n    }\n    for (const effect of tr.effects) {\n      if (effect.is(clearHighlightedLine)) {\n        value = CodeMirror.Decoration.none;\n      } else if (effect.is(setHighlightedLine)) {\n        value = CodeMirror.Decoration.set([\n          CodeMirror.Decoration.line({attributes: {class: 'cm-highlightedLine'}}).range(effect.value),\n        ]);\n      }\n    }\n    return value;\n  },\n  provide: field => CodeMirror.EditorView.decorations.from(field, value => value),\n});\n\nconst CODE_MIRROR_USER_EVENT_TO_INPUT_EVENT_TYPE = new Map([\n  ['input.type', 'insertText'],\n  ['input.type.compose', 'insertCompositionText'],\n  ['input.paste', 'insertFromPaste'],\n  ['input.drop', 'insertFromDrop'],\n  ['input.complete', 'insertReplacementText'],\n  ['delete.selection', 'deleteContent'],\n  ['delete.forward', 'deleteContentForward'],\n  ['delete.backward', 'deleteContentBackward'],\n  ['delete.cut', 'deleteByCut'],\n  ['move.drop', 'deleteByDrag'],\n  ['undo', 'historyUndo'],\n  ['redo', 'historyRedo'],\n]);\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\ndevtools-icon.bezier-swatch-icon {\n  position: relative;\n  transform: scale(0.7);\n  margin: -5px -2px -3px -4px;\n  user-select: none;\n  color: var(--icon-css);\n  cursor: default;\n\n  &:hover {\n    color: var(--icon-css-hover);\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./textEditor.css')} */`;", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\n\nimport type {AutocompleteHistory} from './AutocompleteHistory.js';\nimport type {TextEditor} from './TextEditor.js';\n\nexport const enum Direction {\n  FORWARD = 1,\n  BACKWARD = -1,\n}\n\n/**\n * Small helper class that connects a `TextEditor` and an `AutocompleteHistory`\n * instance.\n */\nexport class TextEditorHistory {\n  #editor: TextEditor;\n  #history: AutocompleteHistory;\n\n  constructor(editor: TextEditor, history: AutocompleteHistory) {\n    this.#editor = editor;\n    this.#history = history;\n  }\n\n  /**\n   * Replaces the text editor content with entries from the history. Does nothing\n   * if the cursor is not positioned correctly (unless `force` is `true`).\n   */\n  moveHistory(dir: Direction, force = false): boolean {\n    const {editor} = this.#editor, {main} = editor.state.selection;\n    const isBackward = dir === Direction.BACKWARD;\n    if (!force) {\n      if (!main.empty) {\n        return false;\n      }\n      const cursorCoords = editor.coordsAtPos(main.head);\n      const endCoords = editor.coordsAtPos(isBackward ? 0 : editor.state.doc.length);\n      // Check if there are wrapped lines in this direction, and let\n      // the cursor move normally if there are.\n      if (cursorCoords && endCoords &&\n          (isBackward ? cursorCoords.top > endCoords.top + 5 : cursorCoords.bottom < endCoords.bottom - 5)) {\n        return false;\n      }\n    }\n\n    const text = editor.state.doc.toString();\n    const history = this.#history;\n    const newText = isBackward ? history.previous(text) : history.next();\n    if (newText === undefined) {\n      return false;\n    }\n\n    // Change the prompt input to the history content, and scroll to the end to\n    // bring the full content (potentially multiple lines) into view.\n    const cursorPos = newText.length;\n    editor.dispatch({\n      changes: {from: 0, to: editor.state.doc.length, insert: newText},\n      selection: CodeMirror.EditorSelection.cursor(cursorPos),\n      scrollIntoView: true,\n    });\n    if (isBackward) {\n      // If we are going back in history, put the cursor to the end of the first line\n      // so that the user can quickly go further back in history.\n      const firstLineBreak = newText.search(/\\n|$/);\n      editor.dispatch({\n        selection: CodeMirror.EditorSelection.cursor(firstLineBreak),\n      });\n    }\n    return true;\n  }\n\n  historyCompletions(context: CodeMirror.CompletionContext): CodeMirror.CompletionResult|null {\n    const {explicit, pos, state} = context;\n    const text = state.doc.toString();\n    const caretIsAtEndOfPrompt = pos === text.length;\n    if (!caretIsAtEndOfPrompt || (!text.length && !explicit)) {\n      return null;\n    }\n\n    const matchingEntries = this.#history.matchingEntries(text);\n    if (!matchingEntries.size) {\n      return null;\n    }\n    const options = [...matchingEntries].map(label => ({label, type: 'secondary', boost: -1e5}));\n    return {from: 0, to: text.length, options};\n  }\n}\n"],
  "mappings": "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",
  "names": ["autocompletion", "bracketMatching", "closeBrackets", "indentUnit", "CM", "CM", "autocompletion", "bracketMatching", "indentUnit", "closeBrackets", "completion", "selectedCompletion", "selectedCompletionIndex", "syntaxTree", "CodeMirror", "UI", "CodeMirror", "completion", "parent", "object", "Common", "WindowBoundsService", "CodeMirror", "CodeHighlighter", "dynamicSetting", "CodeMirror", "history"]
}
