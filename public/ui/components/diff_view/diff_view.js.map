{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/diff_view/DiffView.ts", "diffView.css.js"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Diff from '../../../third_party/diff/diff.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Lit from '../../lit/lit.js';\nimport * as CodeHighlighter from '../code_highlighter/code_highlighter.js';\n\nimport diffViewStyles from './diffView.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description Text prepended to a removed line in a diff in the Changes tool, viewable only by screen reader.\n   */\n  deletions: 'Deletion:',\n  /**\n   *@description Text prepended to a new line in a diff in the Changes tool, viewable only by screen reader.\n   */\n  additions: 'Addition:',\n  /**\n   *@description Screen-reader accessible name for the code editor in the Changes tool showing the user's changes.\n   */\n  changesDiffViewer: 'Changes diff viewer',\n  /**\n   *@description Text in Changes View of the Changes tab\n   *@example {2} PH1\n   */\n  SkippingDMatchingLines: '( … Skipping {PH1} matching lines … )',\n  /**\n   *@description Text in Changes View for the case where the modified file contents are the same with its unmodified state\n   * e.g. the file contents changed from A -> B then B -> A and not saved yet.\n   */\n  noDiff: 'File is identical to its unmodified state',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/components/diff_view/DiffView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface Token {\n  text: string;\n  className: string;\n}\n\ninterface Row {\n  originalLineNumber: number;\n  currentLineNumber: number;\n  tokens: Token[];\n  type: RowType;\n}\n\nexport const enum RowType {\n  DELETION = 'deletion',\n  ADDITION = 'addition',\n  EQUAL = 'equal',\n  SPACER = 'spacer',\n}\n\nexport function buildDiffRows(diff: Diff.Diff.DiffArray): {\n  originalLines: readonly string[],\n  currentLines: readonly string[],\n  rows: readonly Row[],\n} {\n  let currentLineNumber = 0;\n  let originalLineNumber = 0;\n  const paddingLines = 3;\n\n  const originalLines: string[] = [];\n  const currentLines: string[] = [];\n  const rows: Row[] = [];\n\n  for (let i = 0; i < diff.length; ++i) {\n    const token = diff[i];\n    switch (token[0]) {\n      case Diff.Diff.Operation.Equal:\n        rows.push(...createEqualRows(token[1], i === 0, i === diff.length - 1));\n        originalLines.push(...token[1]);\n        currentLines.push(...token[1]);\n        break;\n      case Diff.Diff.Operation.Insert:\n        for (const line of token[1]) {\n          rows.push(createRow(line, RowType.ADDITION));\n        }\n        currentLines.push(...token[1]);\n        break;\n      case Diff.Diff.Operation.Delete:\n        originalLines.push(...token[1]);\n        if (diff[i + 1] && diff[i + 1][0] === Diff.Diff.Operation.Insert) {\n          i++;\n          rows.push(...createModifyRows(token[1].join('\\n'), diff[i][1].join('\\n')));\n          currentLines.push(...diff[i][1]);\n        } else {\n          for (const line of token[1]) {\n            rows.push(createRow(line, RowType.DELETION));\n          }\n        }\n        break;\n    }\n  }\n\n  return {originalLines, currentLines, rows};\n\n  function createEqualRows(lines: string[], atStart: boolean, atEnd: boolean): Row[] {\n    const equalRows = [];\n    if (!atStart) {\n      for (let i = 0; i < paddingLines && i < lines.length; i++) {\n        equalRows.push(createRow(lines[i], RowType.EQUAL));\n      }\n      if (lines.length > paddingLines * 2 + 1 && !atEnd) {\n        equalRows.push(createRow(\n            i18nString(UIStrings.SkippingDMatchingLines, {PH1: (lines.length - paddingLines * 2)}), RowType.SPACER));\n      }\n    }\n    if (!atEnd) {\n      const start = Math.max(lines.length - paddingLines - 1, atStart ? 0 : paddingLines);\n      let skip = lines.length - paddingLines - 1;\n      if (!atStart) {\n        skip -= paddingLines;\n      }\n      if (skip > 0) {\n        originalLineNumber += skip;\n        currentLineNumber += skip;\n      }\n\n      for (let i = start; i < lines.length; i++) {\n        equalRows.push(createRow(lines[i], RowType.EQUAL));\n      }\n    }\n    return equalRows;\n  }\n\n  function createModifyRows(before: string, after: string): Row[] {\n    const internalDiff = Diff.Diff.DiffWrapper.charDiff(before, after, true /* cleanup diff */);\n    const deletionRows = [createRow('', RowType.DELETION)];\n    const insertionRows = [createRow('', RowType.ADDITION)];\n\n    for (const token of internalDiff) {\n      const text = token[1];\n      const type = token[0];\n      const className = type === Diff.Diff.Operation.Equal ? '' : 'inner-diff';\n      const lines = text.split('\\n');\n      for (let i = 0; i < lines.length; i++) {\n        if (i > 0 && type !== Diff.Diff.Operation.Insert) {\n          deletionRows.push(createRow('', RowType.DELETION));\n        }\n        if (i > 0 && type !== Diff.Diff.Operation.Delete) {\n          insertionRows.push(createRow('', RowType.ADDITION));\n        }\n        if (!lines[i]) {\n          continue;\n        }\n        if (type !== Diff.Diff.Operation.Insert) {\n          deletionRows[deletionRows.length - 1].tokens.push({text: lines[i], className});\n        }\n        if (type !== Diff.Diff.Operation.Delete) {\n          insertionRows[insertionRows.length - 1].tokens.push({text: lines[i], className});\n        }\n      }\n    }\n    return deletionRows.concat(insertionRows);\n  }\n\n  function createRow(text: string, type: RowType): Row {\n    if (type === RowType.ADDITION) {\n      currentLineNumber++;\n    }\n    if (type === RowType.DELETION) {\n      originalLineNumber++;\n    }\n    if (type === RowType.EQUAL) {\n      originalLineNumber++;\n      currentLineNumber++;\n    }\n\n    return {originalLineNumber, currentLineNumber, tokens: text ? [{text, className: 'inner-diff'}] : [], type};\n  }\n}\n\nfunction documentMap(lines: readonly string[]): Map<number, number> {\n  const map = new Map<number, number>();\n  for (let pos = 0, lineNo = 0; lineNo < lines.length; lineNo++) {\n    map.set(lineNo + 1, pos);\n    pos += lines[lineNo].length + 1;\n  }\n  return map;\n}\n\nclass DiffRenderer {\n  private constructor(\n      readonly originalHighlighter: CodeHighlighter.CodeHighlighter.CodeHighlighter,\n      readonly originalMap: Map<number, number>,\n      readonly currentHighlighter: CodeHighlighter.CodeHighlighter.CodeHighlighter,\n      readonly currentMap: Map<number, number>,\n  ) {\n  }\n\n  #render(rows: readonly Row[]): Lit.TemplateResult {\n    return html`\n      <style>${diffViewStyles}</style>\n      <style>${CodeHighlighter.codeHighlighterStyles}</style>\n      <div class=\"diff-listing\" aria-label=${i18nString(UIStrings.changesDiffViewer)}>\n        ${rows.map(row => this.#renderRow(row))}\n      </div>`;\n  }\n\n  #renderRow(row: Row): Lit.TemplateResult {\n    const baseNumber =\n        row.type === RowType.EQUAL || row.type === RowType.DELETION ? String(row.originalLineNumber) : '';\n    const curNumber = row.type === RowType.EQUAL || row.type === RowType.ADDITION ? String(row.currentLineNumber) : '';\n    let marker = '', markerClass = 'diff-line-marker', screenReaderText = null;\n    if (row.type === RowType.ADDITION) {\n      marker = '+';\n      markerClass += ' diff-line-addition';\n      screenReaderText = html`<span class=\"diff-hidden-text\">${i18nString(UIStrings.additions)}</span>`;\n    } else if (row.type === RowType.DELETION) {\n      marker = '-';\n      markerClass += ' diff-line-deletion';\n      screenReaderText = html`<span class=\"diff-hidden-text\">${i18nString(UIStrings.deletions)}</span>`;\n    }\n    return html`\n      <div class=\"diff-line-number\" aria-hidden=\"true\">${baseNumber}</div>\n      <div class=\"diff-line-number\" aria-hidden=\"true\">${curNumber}</div>\n      <div class=${markerClass} aria-hidden=\"true\">${marker}</div>\n      <div class=\"diff-line-content diff-line-${row.type}\" data-line-number=${curNumber} jslog=${\n        VisualLogging.link('changes.reveal-source').track({click: true})}>${screenReaderText}${\n        this.#renderRowContent(row)}</div>`;\n  }\n\n  #renderRowContent(row: Row): Lit.TemplateResult[] {\n    if (row.type === RowType.SPACER) {\n      return row.tokens.map(tok => html`${tok.text}`);\n    }\n    const [doc, startPos] = row.type === RowType.DELETION ?\n        [this.originalHighlighter, this.originalMap.get(row.originalLineNumber) as number] :\n        [this.currentHighlighter, this.currentMap.get(row.currentLineNumber) as number];\n    const content: Lit.TemplateResult[] = [];\n    let pos = startPos;\n    for (const token of row.tokens) {\n      const tokenContent: Array<Lit.TemplateResult|string> = [];\n      doc.highlightRange(pos, pos + token.text.length, (text, style) => {\n        tokenContent.push(style ? html`<span class=${style}>${text}</span>` : text);\n      });\n      content.push(\n          token.className ? html`<span class=${token.className}>${tokenContent}</span>` : html`${tokenContent}`);\n      pos += token.text.length;\n    }\n    return content;\n  }\n\n  static async render(diff: Diff.Diff.DiffArray, mimeType: string, parent: HTMLElement|DocumentFragment):\n      Promise<void> {\n    const {originalLines, currentLines, rows} = buildDiffRows(diff);\n    const renderer = new DiffRenderer(\n        await CodeHighlighter.CodeHighlighter.create(originalLines.join('\\n'), mimeType),\n        documentMap(originalLines),\n        await CodeHighlighter.CodeHighlighter.create(currentLines.join('\\n'), mimeType),\n        documentMap(currentLines),\n    );\n    Lit.render(renderer.#render(rows), parent, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-diff-view': DiffView;\n  }\n}\n\nexport interface DiffViewData {\n  diff: Diff.Diff.DiffArray;\n  mimeType: string;\n}\n\nfunction renderNoDiffState(container: HTMLElement|DocumentFragment): void {\n  // clang-format off\n  Lit.render(html`\n    <style>${diffViewStyles}</style>\n    <p class=\"diff-listing-no-diff\" data-testid=\"no-diff\">${i18nString(UIStrings.noDiff)}</p>`,\n  container, {host: container});\n  // clang-format on\n}\n\nexport class DiffView extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  loaded: Promise<void>;\n\n  constructor(data?: DiffViewData) {\n    super();\n\n    this.loaded = this.#render(data);\n  }\n\n  set data(data: DiffViewData) {\n    this.loaded = this.#render(data);\n  }\n\n  async #render(data?: DiffViewData): Promise<void> {\n    if (!data || data.diff.length === 0) {\n      renderNoDiffState(this.#shadow);\n      return;\n    }\n\n    await DiffRenderer.render(data.diff, data.mimeType, this.#shadow);\n  }\n}\n\ncustomElements.define('devtools-diff-view', DiffView);\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.diff-listing {\n  display: grid;\n  grid-template-columns: max-content max-content max-content auto;\n  font-family: var(--source-code-font-family);\n  font-size: var(--source-code-font-size);\n  white-space: pre;\n  line-height: 1.2em;\n  user-select: text;\n}\n\n.diff-line-number {\n  color: var(--sys-color-token-subtle);\n  padding: 0 3px 0 9px;\n  text-align: right;\n  user-select: none;\n}\n\n.diff-line-marker {\n  user-select: none;\n  border-right: 1px solid var(--sys-color-divider);\n  width: 20px;\n  text-align: center;\n}\n\n.diff-line-content {\n  padding: 0 4px;\n}\n\n.diff-line-marker-addition,\n.diff-line-addition {\n  background-color: var(--sys-color-surface-green);\n}\n\n.diff-line-marker-deletion,\n.diff-line-deletion {\n  background-color: var(--sys-color-surface-error);\n}\n\n.diff-line-addition .inner-diff {\n  background-color: color-mix(\n    in srgb,\n    var(--ref-palette-green70) 40%,\n    transparent\n  );\n}\n\n.diff-line-deletion .inner-diff {\n  background-color: color-mix(\n    in srgb,\n    var(--ref-palette-error60) 40%,\n    transparent\n  );\n}\n\n.diff-hidden-text {\n  display: inline-block;\n  width: 0;\n  overflow: hidden;\n}\n\n.diff-line-equal {\n  opacity: 50%;\n}\n\n.diff-line-spacer {\n  text-align: center;\n  background-color: var(--sys-color-surface5);\n}\n\n.diff-listing-no-diff {\n  user-select: auto;\n  font-family: var(--source-code-font-family);\n  font-size: var(--source-code-font-size);\n  margin: 0;\n  padding: var(--sys-size-5) 9px;\n}\n\n/*# sourceURL=${import.meta.resolve('./diffView.css')} */`;"],
  "mappings": "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",
  "names": []
}
