{"version":3,"file":"FileSourceIcon.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/icon_button/FileSourceIcon.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './IconButton.js';\n\nimport {Directives, html, render} from '../../lit/lit.js';\n\nimport fileSourceIconStyles from './fileSourceIcon.css.js';\n\nconst {classMap, styleMap} = Directives;\n\nexport interface FileSourceIconData {\n  contentType?: string;\n  hasDotBadge?: boolean;\n  isDotPurple?: boolean;\n  width?: number;\n  height?: number;\n}\n\nexport class FileSourceIcon extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #iconType: string;\n  #contentType?: string;\n  #hasDotBadge?: boolean;\n  #isDotPurple?: boolean;\n  #width?: number;\n  #height?: number;\n\n  constructor(iconType: string) {\n    super();\n    this.#iconType = iconType;\n  }\n\n  set data(data: FileSourceIconData) {\n    this.#contentType = data.contentType;\n    this.#hasDotBadge = data.hasDotBadge;\n    this.#isDotPurple = data.isDotPurple;\n    this.#width = data.width;\n    this.#height = data.height;\n\n    if (this.#width !== undefined) {\n      this.style.width = `${this.#width}px`;\n    }\n\n    if (this.#height !== undefined) {\n      this.style.height = `${this.#height}px`;\n    }\n\n    this.#render();\n  }\n\n  get data(): FileSourceIconData {\n    return {\n      contentType: this.#contentType,\n      hasDotBadge: this.#hasDotBadge,\n      isDotPurple: this.#isDotPurple,\n      width: this.#width,\n      height: this.#height,\n    };\n  }\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  #render(): void {\n    const iconClasses = classMap({\n      dot: Boolean(this.#hasDotBadge),\n      purple: Boolean(this.#hasDotBadge && this.#isDotPurple),\n      green: Boolean(this.#hasDotBadge && !this.#isDotPurple),\n      ...(this.#contentType ? {[this.#contentType]: this.#contentType} : null)\n    });\n\n    const iconStyles = styleMap({\n      width: this.#width ? `${this.#width}px` : undefined,\n      height: this.#height ? `${this.#height}px` : undefined,\n    });\n\n    // clang-format off\n    render(\n      html`<style>${fileSourceIconStyles.cssContent}</style><devtools-icon .name=${this.#iconType} class=${iconClasses} style=${iconStyles}></devtools-icon>`,\n      this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-file-source-icon', FileSourceIcon);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-file-source-icon': FileSourceIcon;\n  }\n}\n"]}