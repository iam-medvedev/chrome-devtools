{"version":3,"file":"FileSourceIcon.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/icon_button/FileSourceIcon.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,OAAO,MAAM,4BAA4B,CAAC;AAEtD,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAC7C,OAAO,EAAC,MAAM,EAAC,MAAM,WAAW,CAAC;AAEjC,MAAM,EAAC,IAAI,EAAC,GAAG,OAAO,CAAC;AAQvB,MAAM,OAAO,cAAe,SAAQ,WAAW;IACpC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAErD,SAAS,CAAS;IAClB,YAAY,CAAU;IACtB,YAAY,CAAW;IACvB,YAAY,CAAW;IAEvB,YAAY,QAAgB;QAC1B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,IAAI,IAAI,CAAC,IAAwB;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,IAAI;QACN,OAAO;YACL,WAAW,EAAE,IAAI,CAAC,YAAY;YAC9B,WAAW,EAAE,IAAI,CAAC,YAAY;YAC9B,WAAW,EAAE,IAAI,CAAC,YAAY;SAC/B,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,UAAU,GAAa,EAAE,CAAC;QAC9B,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACxE,CAAC;QACD,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACrC,CAAC;QACD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAE1D,mBAAmB;QACnB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAA,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;YAC1C,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QACH,kBAAkB;IACpB,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,2BAA2B,EAAE,cAAc,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../lit-html/lit-html.js';\n\nimport styles from './fileSourceIcon.css.js';\nimport {create} from './Icon.js';\n\nconst {html} = LitHtml;\n\nexport interface FileSourceIconData {\n  contentType?: string;\n  hasDotBadge?: boolean;\n  isDotPurple?: boolean;\n}\n\nexport class FileSourceIcon extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #iconType: string;\n  #contentType?: string;\n  #hasDotBadge?: boolean;\n  #isDotPurple?: boolean;\n\n  constructor(iconType: string) {\n    super();\n    this.#iconType = iconType;\n  }\n\n  set data(data: FileSourceIconData) {\n    this.#contentType = data.contentType;\n    this.#hasDotBadge = data.hasDotBadge;\n    this.#isDotPurple = data.isDotPurple;\n    this.#render();\n  }\n\n  get data(): FileSourceIconData {\n    return {\n      contentType: this.#contentType,\n      hasDotBadge: this.#hasDotBadge,\n      isDotPurple: this.#isDotPurple,\n    };\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [styles];\n    this.#render();\n  }\n\n  #render(): void {\n    let iconStyles: string[] = [];\n    if (this.#hasDotBadge) {\n      iconStyles = this.#isDotPurple ? ['dot', 'purple'] : ['dot', 'green'];\n    }\n    if (this.#contentType) {\n      iconStyles.push(this.#contentType);\n    }\n    const icon = create(this.#iconType, iconStyles.join(' '));\n\n    // clang-format off\n    LitHtml.render(html`${icon}`, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-file-source-icon', FileSourceIcon);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-file-source-icon': FileSourceIcon;\n  }\n}\n"]}