{"version":3,"file":"CodeBlock.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/markdown_view/CodeBlock.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/legacy/legacy.js'; // for x-link\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as TextEditor from '../../../ui/components/text_editor/text_editor.js';\nimport * as Lit from '../../lit/lit.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\n\nimport stylesRaw from './codeBlock.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(stylesRaw.cssContent);\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description The header text if not present and language is not set.\n   */\n  code: 'Code',\n  /**\n   * @description The title of the button to copy the codeblock from a Markdown view.\n   */\n  copy: 'Copy code',\n  /**\n   * @description The title of the button after it was pressed and the text was copied to clipboard.\n   */\n  copied: 'Copied to clipboard',\n  /**\n   * @description Disclaimer shown in the code blocks.\n   */\n  disclaimer: 'Use code snippets with caution',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/components/markdown_view/CodeBlock.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class CodeBlock extends HTMLElement {\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #code = '';\n  #codeLang = '';\n  #copyTimeout = 1000;\n  #timer?: ReturnType<typeof setTimeout>;\n  #copied = false;\n  #editorState?: CodeMirror.EditorState;\n  #languageConf = new CodeMirror.Compartment();\n  /**\n   * Whether to display a notice \"​​Use code snippets with caution\" in code\n   * blocks.\n   */\n  #displayNotice = false;\n  #header?: string;\n  #showCopyButton = true;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [styles];\n    this.#render();\n  }\n\n  set code(value: string) {\n    this.#code = value;\n    this.#editorState = CodeMirror.EditorState.create({\n      doc: this.#code,\n      extensions: [\n        TextEditor.Config.baseConfiguration(this.#code),\n        CodeMirror.EditorState.readOnly.of(true),\n        CodeMirror.EditorView.lineWrapping,\n        this.#languageConf.of(CodeMirror.javascript.javascript()),\n      ],\n    });\n    this.#render();\n  }\n\n  get code(): string {\n    return this.#code;\n  }\n\n  set codeLang(value: string) {\n    this.#codeLang = value;\n    this.#render();\n  }\n\n  set timeout(value: number) {\n    this.#copyTimeout = value;\n    this.#render();\n  }\n\n  set displayNotice(value: boolean) {\n    this.#displayNotice = value;\n    this.#render();\n  }\n\n  set header(header: string) {\n    this.#header = header;\n    this.#render();\n  }\n\n  set showCopyButton(show: boolean) {\n    this.#showCopyButton = show;\n    this.#render();\n  }\n\n  #onCopy(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.#code);\n    this.#copied = true;\n    this.#render();\n    clearTimeout(this.#timer);\n    this.#timer = setTimeout(() => {\n      this.#copied = false;\n      this.#render();\n    }, this.#copyTimeout);\n  }\n\n  #renderNotice(): Lit.TemplateResult {\n    // clang-format off\n    return html`<p class=\"notice\">\n      <x-link class=\"link\" href=\"https://support.google.com/legal/answer/13505487\" jslog=${\n        VisualLogging.link('code-disclaimer').track({\n          click: true,\n        })}>\n        ${i18nString(UIStrings.disclaimer)}\n      </x-link>\n    </p>`;\n    // clang-format on\n  }\n\n  #renderCopyButton(): Lit.LitTemplate {\n    // clang-format off\n    return html`\n      <div class=\"copy-button-container\">\n        <devtools-button\n          .data=${\n            {\n              variant: Buttons.Button.Variant.ICON,\n              size: Buttons.Button.Size.SMALL,\n              jslogContext: 'copy',\n              iconName: 'copy',\n              title: i18nString(UIStrings.copy),\n            } as Buttons.Button.ButtonData\n          }\n          @click=${this.#onCopy}\n        ></devtools-button>\n        ${this.#copied ? html`<span>${i18nString(UIStrings.copied)}</span>` : Lit.nothing}\n      </div>`;\n    // clang-format on\n  }\n\n  #renderTextEditor(): Lit.TemplateResult {\n    if (!this.#editorState) {\n      throw new Error('Unexpected: trying to render the text editor without editorState');\n    }\n    // clang-format off\n    return html`\n      <div class=\"code\">\n        <devtools-text-editor .state=${this.#editorState}></devtools-text-editor>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #render(): void {\n    const header = (this.#header ?? this.#codeLang) || i18nString(UIStrings.code);\n\n    // clang-format off\n    Lit.render(\n      html`<div class='codeblock' jslog=${VisualLogging.section('code')}>\n      <div class=\"editor-wrapper\">\n        <div class=\"heading\">\n          <h4 class=\"heading-text\">${header}</h4>\n          ${this.#showCopyButton ? this.#renderCopyButton() : Lit.nothing}\n        </div>\n        ${this.#renderTextEditor()}\n      </div>\n      ${this.#displayNotice ? this.#renderNotice() : Lit.nothing}\n    </div>`,\n      this.#shadow,\n      {\n        host: this,\n      },\n    );\n    // clang-format on\n\n    const editor = this.#shadow?.querySelector('devtools-text-editor')?.editor;\n\n    if (!editor) {\n      return;\n    }\n    let language = CodeMirror.html.html({autoCloseTags: false, selfClosingTags: true});\n    switch (this.#codeLang) {\n      case 'js':\n        language = CodeMirror.javascript.javascript();\n        break;\n      case 'ts':\n        language = CodeMirror.javascript.javascript({typescript: true});\n        break;\n      case 'jsx':\n        language = CodeMirror.javascript.javascript({jsx: true});\n        break;\n      case 'css':\n        language = CodeMirror.css.css();\n        break;\n    }\n    editor.dispatch({\n      effects: this.#languageConf.reconfigure(language),\n    });\n  }\n}\n\ncustomElements.define('devtools-code-block', CodeBlock);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-code-block': CodeBlock;\n  }\n}\n"]}