{"version":3,"file":"CodeBlock.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/markdown_view/CodeBlock.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EACL,kBAAkB,EAClB,oBAAoB,EACpB,YAAY,GACb,MAAM,4DAA4D,CAAC;AACpE,OAAO,EAAC,uBAAuB,EAAC,MAAM,oEAAoE,CAAC;AAC3G,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AACnD,OAAO,EAAC,wBAAwB,EAAC,MAAM,oCAAoC,CAAC;AAE5E,OAAO,KAAK,YAAY,MAAM,oBAAoB,CAAC;AAEnD,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,uBAAuB,CAAC,WAAW,EAAE,GAAG,EAAE;IACxC,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;QACtC,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QACzD,SAAS,CAAC,IAAI,GAAG,MAAM,CAAC;QACxB,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,SAAS,CAAC,UAAW,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACnE,wBAAwB,CAAC,MAAM,CAAC,CAAC;QACjC,MAAM,KAAK,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI;YACF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;YACzE,MAAM,QAAQ,GAAG,KAAK;iBACA,IAAI,CACD,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,EACxD,UAAU,CACT;iBACJ,OAAO,EAAE,CAAC;YAChC,kBAAkB,CAAC,MAAM,EAAE;gBACzB,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3C,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAChB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAE,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;YACnF,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAE,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;SAC1E;gBAAS;YACR,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,YAAY,EAAE,CAAC;SAChB;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  dispatchClickEvent,\n  renderElementIntoDOM,\n  resetTestDOM,\n} from '../../../../test/unittests/front_end/helpers/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../../test/unittests/front_end/helpers/EnvironmentHelpers.js';\nimport * as Host from '../../../core/host/host.js';\nimport {assertNotNullOrUndefined} from '../../../core/platform/platform.js';\n\nimport * as MarkdownView from './markdown_view.js';\n\nconst {assert} = chai;\n\ndescribeWithEnvironment('CodeBlock', () => {\n  it('copies the code to clipboard', () => {\n    const component = new MarkdownView.CodeBlock.CodeBlock();\n    component.code = 'test';\n    renderElementIntoDOM(component);\n    const button = component.shadowRoot!.querySelector('.copy-button');\n    assertNotNullOrUndefined(button);\n    const clock = sinon.useFakeTimers();\n    try {\n      assert.strictEqual(button.querySelector('span')?.innerText, 'Copy code');\n      const copyText = sinon\n                           .stub(\n                               Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n                               'copyText',\n                               )\n                           .returns();\n      dispatchClickEvent(button, {\n        bubbles: true,\n        composed: true,\n      });\n      assert.isTrue(copyText.calledWith('test'));\n      clock.tick(100);\n      assert.strictEqual(button.querySelector('span')!.innerText, 'Copied to clipboard');\n      clock.tick(1100);\n      assert.strictEqual(button.querySelector('span')!.innerText, 'Copy code');\n    } finally {\n      clock.restore();\n      resetTestDOM();\n    }\n  });\n});\n"]}