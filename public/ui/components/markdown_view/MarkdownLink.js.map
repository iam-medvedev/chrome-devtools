{"version":3,"file":"MarkdownLink.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/markdown_view/MarkdownLink.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,wBAAwB,CAAC,CAAC,yBAAyB;AAE1D,OAAO,EAAC,IAAI,EAAE,MAAM,EAAC,MAAM,kBAAkB,CAAC;AAC9C,OAAO,KAAK,aAAa,MAAM,wCAAwC,CAAC;AAExE,OAAO,qBAAqB,MAAM,uBAAuB,CAAC;AAC1D,OAAO,EAAC,eAAe,EAAC,MAAM,uBAAuB,CAAC;AAEtD,4EAA4E;AAC5E,MAAM,kBAAkB,GAAG,IAAI,aAAa,EAAE,CAAC;AAC/C,kBAAkB,CAAC,WAAW,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;AAOjE;;;;GAIG;AACH,MAAM,OAAO,YAAa,SAAQ,WAAW;IAElC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IACrD,SAAS,GAAG,EAAE,CAAC;IACf,QAAQ,GAAG,EAAE,CAAC;IAEd,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,kBAAkB,CAAC,CAAC;IACzD,CAAC;IAED,IAAI,IAAI,CAAC,IAAsB;QAC7B,MAAM,EAAC,GAAG,EAAE,KAAK,EAAC,GAAG,IAAI,CAAC;QAC1B,MAAM,YAAY,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,mBAAmB;QACnB,MAAM,MAAM,GAAG,IAAI,CAAA,sCAAsC,IAAI,CAAC,QAAQ,UAAU,aAAa,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;OACtH,IAAI,CAAC,SAAS,WAAW,CAAC;QAC7B,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAC3C,kBAAkB;IACpB,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,wBAAwB,EAAE,YAAY,CAAC,CAAC","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../legacy/legacy.js'; // Required for <x-link>.\n\nimport {html, render} from '../../lit/lit.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\n\nimport markdownLinkStylesRaw from './markdownLink.css.js';\nimport {getMarkdownLink} from './MarkdownLinksMap.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst markdownLinkStyles = new CSSStyleSheet();\nmarkdownLinkStyles.replaceSync(markdownLinkStylesRaw.cssContent);\n\nexport interface MarkdownLinkData {\n  key: string;\n  title: string;\n}\n\n/**\n * Component to render link from parsed markdown.\n * Parsed links from markdown are not directly rendered, instead they have to be added to the <key, link> map in MarkdownLinksMap.ts.\n * This makes sure that all links are accounted for and no bad links are introduced to devtools via markdown.\n */\nexport class MarkdownLink extends HTMLElement {\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #linkText = '';\n  #linkUrl = '';\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [markdownLinkStyles];\n  }\n\n  set data(data: MarkdownLinkData) {\n    const {key, title} = data;\n    const markdownLink = getMarkdownLink(key);\n    this.#linkText = title;\n    this.#linkUrl = markdownLink;\n    this.#render();\n  }\n\n  #render(): void {\n    // clang-format off\n    const output = html`<x-link class=\"devtools-link\" href=${this.#linkUrl} jslog=${VisualLogging.link().track({click: true})}\n    >${this.#linkText}</x-link>`;\n    render(output, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-markdown-link', MarkdownLink);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-markdown-link': MarkdownLink;\n  }\n}\n"]}