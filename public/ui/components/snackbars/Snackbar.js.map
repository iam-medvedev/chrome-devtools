{"version":3,"file":"Snackbar.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/snackbars/Snackbar.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as UI from '../../legacy/legacy.js';\nimport * as Lit from '../../lit/lit.js';\nimport * as Buttons from '../buttons/buttons.js';\n\nimport snackbarStyles from './snackbar.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Title for close button\n   */\n  dismiss: 'Dismiss',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('ui/components/snackbars/Snackbar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface ActionProperties {\n  label: string;\n  title?: string;\n  onClick: () => void;\n}\n\nexport interface SnackbarProperties {\n  message: string;\n  closable?: boolean;\n  actionProperties?: ActionProperties;\n}\n\nexport const DEFAULT_AUTO_DISMISS_MS = 5000;\nconst LONG_ACTION_THRESHOLD = 15;\n\n/**\n * @property actionButtonClickHandler - Function to be triggered when action button is clicked.\n * @property dismissTimeout - reflects the `\"dismiss-timeout\"` attribute.\n * @property message - reflects the `\"message\"` attribute.\n * @property closable - reflects the `\"closable\"` attribute.\n * @property actionButtonLabel - reflects the `\"action-button-label\"` attribute.\n * @property actionButtonTitle - reflects the `\"action-button-title\"` attribute.\n * @attribute dismiss-timeout - Timeout in ms after which the snackbar is dismissed (if closable is false).\n * @attribute message - The message to display in the snackbar.\n * @attribute closable - If true, the snackbar will have a dismiss button. This cancels the auto dismiss behavior.\n * @attribute action-button-label - The text for the action button.\n * @attribute action-button-title - The title for the action button.\n *\n */\nexport class Snackbar extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #timeout: number|null = null;\n  #isLongAction = false;\n  #actionButtonClickHandler?: () => void;\n\n  static snackbarQueue: Snackbar[] = [];\n\n  /**\n   * Returns the timeout (in ms) after which the snackbar is dismissed.\n   */\n  get dismissTimeout(): number {\n    return this.hasAttribute('dismiss-timeout') ? Number(this.getAttribute('dismiss-timeout')) :\n                                                  DEFAULT_AUTO_DISMISS_MS;\n  }\n\n  /**\n   * Sets the value of the `\"dismiss-timeout\"` attribute for the snackbar.\n   */\n  set dismissTimeout(dismissMs: number) {\n    this.setAttribute('dismiss-timeout', dismissMs.toString());\n  }\n\n  /**\n   * Returns the message displayed in the snackbar.\n   */\n  get message(): string|null {\n    return this.getAttribute('message');\n  }\n\n  /**\n   * Sets the `\"message\"` attribute for the snackbar.\n   */\n  set message(message: string) {\n    this.setAttribute('message', message);\n  }\n\n  /**\n   * Returns whether the snackbar is closable. If true, the snackbar will have a dismiss button.\n   * @default false\n   */\n  get closable(): boolean {\n    return this.hasAttribute('closable');\n  }\n\n  /**\n   * Sets the `\"closable\"` attribute for the snackbar.\n   */\n  set closable(closable: boolean) {\n    this.toggleAttribute('closable', closable);\n  }\n\n  /**\n   * Returns the text for the action button.\n   */\n  get actionButtonLabel(): string|null {\n    return this.getAttribute('action-button-label');\n  }\n\n  /**\n   * Sets the `\"action-button-label\"` attribute for the snackbar.\n   */\n  set actionButtonLabel(actionButtonLabel: string) {\n    this.setAttribute('action-button-label', actionButtonLabel);\n  }\n\n  /**\n   * Returns the title for the action button.\n   */\n  get actionButtonTitle(): string|null {\n    return this.getAttribute('action-button-title');\n  }\n\n  /**\n   * Sets the `\"action-button-title\"` attribute for the snackbar.\n   */\n  set actionButtonTitle(actionButtonTitle: string) {\n    this.setAttribute('action-button-title', actionButtonTitle);\n  }\n\n  /**\n   * Sets the function to be triggered when the action button is clicked.\n   * @param actionButtonClickHandler\n   */\n  set actionButtonClickHandler(actionButtonClickHandler: () => void) {\n    this.#actionButtonClickHandler = actionButtonClickHandler;\n  }\n\n  constructor(properties: SnackbarProperties) {\n    super();\n    this.message = properties.message;\n    if (properties.closable) {\n      this.closable = properties.closable;\n    }\n    if (properties.actionProperties) {\n      this.actionButtonLabel = properties.actionProperties.label;\n      this.#actionButtonClickHandler = properties.actionProperties.onClick;\n      if (properties.actionProperties.title) {\n        this.actionButtonTitle = properties.actionProperties.title;\n      }\n    }\n  }\n\n  static show(properties: SnackbarProperties): Snackbar {\n    const snackbar = new Snackbar(properties);\n    Snackbar.snackbarQueue.push(snackbar);\n    if (Snackbar.snackbarQueue.length === 1) {\n      snackbar.#show();\n    }\n    return snackbar;\n  }\n\n  #show(): void {\n    UI.InspectorView.InspectorView.instance().element.appendChild(this);\n    if (this.#timeout) {\n      window.clearTimeout(this.#timeout);\n    }\n    if (!this.closable) {\n      this.#timeout = window.setTimeout(() => {\n        this.#close();\n      }, this.dismissTimeout);\n    }\n  }\n\n  #close(): void {\n    if (this.#timeout) {\n      window.clearTimeout(this.#timeout);\n    }\n    this.remove();\n\n    Snackbar.snackbarQueue.shift();\n    if (Snackbar.snackbarQueue.length > 0) {\n      const nextSnackbar = Snackbar.snackbarQueue[0];\n      if (nextSnackbar) {\n        nextSnackbar.#show();\n      }\n    }\n  }\n\n  #onActionButtonClickHandler(event: Event): void {\n    if (this.#actionButtonClickHandler) {\n      event.preventDefault();\n      this.#actionButtonClickHandler();\n      this.#close();\n    }\n  }\n\n  connectedCallback(): void {\n    if (this.actionButtonLabel) {\n      this.#isLongAction = this.actionButtonLabel.length > LONG_ACTION_THRESHOLD;\n    }\n    this.role = 'alert';\n    const containerCls = Lit.Directives.classMap({\n      container: true,\n      'long-action': Boolean(this.#isLongAction),\n      closable: Boolean(this.closable),\n    });\n\n    // clang-format off\n    const actionButton = this.actionButtonLabel ? html`<devtools-button\n        class=\"snackbar-button\"\n        @click=${this.#onActionButtonClickHandler}\n        jslog=${VisualLogging.action('snackbar.action').track({click: true})}\n        .variant=${Buttons.Button.Variant.TEXT}\n        .title=${this.actionButtonTitle ?? ''}\n        .inverseColorTheme=${true}\n    >${this.actionButtonLabel}</devtools-button>`:Lit.nothing;\n    const crossButton = this.closable ? html`<devtools-button\n        class=\"dismiss snackbar-button\"\n        @click=${this.#close}\n        jslog=${VisualLogging.action('snackbar.dismiss').track({click: true})}\n        aria-label=${i18nString(UIStrings.dismiss)}\n        .iconName=${'cross'}\n        .variant=${Buttons.Button.Variant.ICON}\n        .title=${i18nString(UIStrings.dismiss)}\n        .inverseColorTheme=${true}\n    ></devtools-button>`:Lit.nothing;\n\n    Lit.render(html`\n        <style>${snackbarStyles}</style>\n        <div class=${containerCls}>\n            <div class=\"label-container\">\n                <div class=\"message\">${this.message}</div>\n                ${!this.#isLongAction ? actionButton : Lit.nothing}\n                ${crossButton}\n            </div>\n            ${this.#isLongAction ? html`<div class=\"long-action-container\">${actionButton}</div>` : Lit.nothing}\n        </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-snackbar', Snackbar);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-snackbar': Snackbar;\n  }\n}\n"]}