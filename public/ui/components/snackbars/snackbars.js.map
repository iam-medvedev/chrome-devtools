{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/snackbars/Snackbar.ts", "snackbar.css.js"],
  "sourcesContent": ["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as UI from '../../legacy/legacy.js';\nimport * as Lit from '../../lit/lit.js';\nimport * as Buttons from '../buttons/buttons.js';\n\nimport snackbarStyles from './snackbar.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Title for close button\n   */\n  dismiss: 'Dismiss',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('ui/components/snackbars/Snackbar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface ActionProperties {\n  label: string;\n  title?: string;\n  onClick: () => void;\n}\n\nexport interface SnackbarProperties {\n  message: string;\n  closable?: boolean;\n  actionProperties?: ActionProperties;\n}\n\nexport const DEFAULT_AUTO_DISMISS_MS = 5000;\nconst LONG_ACTION_THRESHOLD = 15;\n\n/**\n * @property actionButtonClickHandler - Function to be triggered when action button is clicked.\n * @property dismissTimeout - reflects the `\"dismiss-timeout\"` attribute.\n * @property message - reflects the `\"message\"` attribute.\n * @property closable - reflects the `\"closable\"` attribute.\n * @property actionButtonLabel - reflects the `\"action-button-label\"` attribute.\n * @property actionButtonTitle - reflects the `\"action-button-title\"` attribute.\n * @attribute dismiss-timeout - Timeout in ms after which the snackbar is dismissed (if closable is false).\n * @attribute message - The message to display in the snackbar.\n * @attribute closable - If true, the snackbar will have a dismiss button. This cancels the auto dismiss behavior.\n * @attribute action-button-label - The text for the action button.\n * @attribute action-button-title - The title for the action button.\n *\n */\nexport class Snackbar extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #container: HTMLElement;\n  #timeout: number|null = null;\n  #isLongAction = false;\n  #actionButtonClickHandler?: () => void;\n\n  static snackbarQueue: Snackbar[] = [];\n\n  /**\n   * Returns the timeout (in ms) after which the snackbar is dismissed.\n   */\n  get dismissTimeout(): number {\n    return this.hasAttribute('dismiss-timeout') ? Number(this.getAttribute('dismiss-timeout')) :\n                                                  DEFAULT_AUTO_DISMISS_MS;\n  }\n\n  /**\n   * Sets the value of the `\"dismiss-timeout\"` attribute for the snackbar.\n   */\n  set dismissTimeout(dismissMs: number) {\n    this.setAttribute('dismiss-timeout', dismissMs.toString());\n  }\n\n  /**\n   * Returns the message displayed in the snackbar.\n   */\n  get message(): string|null {\n    return this.getAttribute('message');\n  }\n\n  /**\n   * Sets the `\"message\"` attribute for the snackbar.\n   */\n  set message(message: string) {\n    this.setAttribute('message', message);\n  }\n\n  /**\n   * Returns whether the snackbar is closable. If true, the snackbar will have a dismiss button.\n   * @default false\n   */\n  get closable(): boolean {\n    return this.hasAttribute('closable');\n  }\n\n  /**\n   * Sets the `\"closable\"` attribute for the snackbar.\n   */\n  set closable(closable: boolean) {\n    this.toggleAttribute('closable', closable);\n  }\n\n  /**\n   * Returns the text for the action button.\n   */\n  get actionButtonLabel(): string|null {\n    return this.getAttribute('action-button-label');\n  }\n\n  /**\n   * Sets the `\"action-button-label\"` attribute for the snackbar.\n   */\n  set actionButtonLabel(actionButtonLabel: string) {\n    this.setAttribute('action-button-label', actionButtonLabel);\n  }\n\n  /**\n   * Returns the title for the action button.\n   */\n  get actionButtonTitle(): string|null {\n    return this.getAttribute('action-button-title');\n  }\n\n  /**\n   * Sets the `\"action-button-title\"` attribute for the snackbar.\n   */\n  set actionButtonTitle(actionButtonTitle: string) {\n    this.setAttribute('action-button-title', actionButtonTitle);\n  }\n\n  /**\n   * Sets the function to be triggered when the action button is clicked.\n   * @param actionButtonClickHandler\n   */\n  set actionButtonClickHandler(actionButtonClickHandler: () => void) {\n    this.#actionButtonClickHandler = actionButtonClickHandler;\n  }\n\n  constructor(properties: SnackbarProperties, container?: HTMLElement) {\n    super();\n    this.message = properties.message;\n    this.#container = container || UI.InspectorView.InspectorView.instance().element;\n    if (properties.closable) {\n      this.closable = properties.closable;\n    }\n    if (properties.actionProperties) {\n      this.actionButtonLabel = properties.actionProperties.label;\n      this.#actionButtonClickHandler = properties.actionProperties.onClick;\n      if (properties.actionProperties.title) {\n        this.actionButtonTitle = properties.actionProperties.title;\n      }\n    }\n  }\n\n  static show(properties: SnackbarProperties, container?: HTMLElement): Snackbar {\n    const snackbar = new Snackbar(properties, container);\n    Snackbar.snackbarQueue.push(snackbar);\n    if (Snackbar.snackbarQueue.length === 1) {\n      snackbar.#show();\n    }\n    return snackbar;\n  }\n\n  #show(): void {\n    this.#container.appendChild(this);\n    if (this.#timeout) {\n      window.clearTimeout(this.#timeout);\n    }\n    if (!this.closable) {\n      this.#timeout = window.setTimeout(() => {\n        this.#close();\n      }, this.dismissTimeout);\n    }\n  }\n\n  #close(): void {\n    if (this.#timeout) {\n      window.clearTimeout(this.#timeout);\n    }\n    this.remove();\n\n    Snackbar.snackbarQueue.shift();\n    if (Snackbar.snackbarQueue.length > 0) {\n      const nextSnackbar = Snackbar.snackbarQueue[0];\n      if (nextSnackbar) {\n        nextSnackbar.#show();\n      }\n    }\n  }\n\n  #onActionButtonClickHandler(event: Event): void {\n    if (this.#actionButtonClickHandler) {\n      event.preventDefault();\n      this.#actionButtonClickHandler();\n      this.#close();\n    }\n  }\n\n  connectedCallback(): void {\n    if (this.actionButtonLabel) {\n      this.#isLongAction = this.actionButtonLabel.length > LONG_ACTION_THRESHOLD;\n    }\n    this.role = 'alert';\n    const containerCls = Lit.Directives.classMap({\n      container: true,\n      'long-action': Boolean(this.#isLongAction),\n      closable: Boolean(this.closable),\n    });\n\n    // clang-format off\n    const actionButton = this.actionButtonLabel ? html`<devtools-button\n        class=\"snackbar-button\"\n        @click=${this.#onActionButtonClickHandler}\n        jslog=${VisualLogging.action('snackbar.action').track({click: true})}\n        .variant=${Buttons.Button.Variant.TEXT}\n        .title=${this.actionButtonTitle ?? ''}\n        .inverseColorTheme=${true}\n    >${this.actionButtonLabel}</devtools-button>`:Lit.nothing;\n    const crossButton = this.closable ? html`<devtools-button\n        class=\"dismiss snackbar-button\"\n        @click=${this.#close}\n        jslog=${VisualLogging.action('snackbar.dismiss').track({click: true})}\n        aria-label=${i18nString(UIStrings.dismiss)}\n        .iconName=${'cross'}\n        .variant=${Buttons.Button.Variant.ICON}\n        .title=${i18nString(UIStrings.dismiss)}\n        .inverseColorTheme=${true}\n    ></devtools-button>`:Lit.nothing;\n\n    Lit.render(html`\n        <style>${snackbarStyles}</style>\n        <div class=${containerCls}>\n            <div class=\"label-container\">\n                <div class=\"message\">${this.message}</div>\n                ${!this.#isLongAction ? actionButton : Lit.nothing}\n                ${crossButton}\n            </div>\n            ${this.#isLongAction ? html`<div class=\"long-action-container\">${actionButton}</div>` : Lit.nothing}\n        </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-snackbar', Snackbar);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-snackbar': Snackbar;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n    position: fixed;\n    bottom: var(--sys-size-5);\n    left: var(--sys-size-5);\n    z-index: 9999;\n    /* subtract var(--sys-size-5) * 2 so that there is equal space on the left and on the right in small screens */\n    max-width: calc(100% - 2 * var(--sys-size-5));\n\n    .container {\n        display: flex;\n        align-items: center;\n        overflow: hidden;\n        width: var(--sys-size-31);\n        padding: var(--sys-size-6);\n        background: var(--sys-color-inverse-surface);\n        box-shadow: var(--sys-elevation-level3);\n        border-radius: var(--sys-shape-corner-small);\n        font: var(--sys-typescale-body4-medium);\n        animation: slideIn 100ms cubic-bezier(0, 0, 0.3, 1);\n        box-sizing: border-box;\n        max-width: 100%;\n\n        &.closable {\n            padding: var(--sys-size-5) var(--sys-size-5) var(--sys-size-5) var(--sys-size-6);\n\n            &.long-action {\n                padding: var(--sys-size-5) var(--sys-size-6) var(--sys-size-6) var(--sys-size-6);\n            }\n        }\n\n        &.long-action {\n            flex-direction: column;\n            align-items: flex-start;\n\n            .long-action-container {\n                margin-left: auto;\n            }\n        }\n\n        .label-container {\n            display: flex;\n            width: 100%;\n            align-items: center;\n            gap: var(--sys-size-5);\n\n            .message {\n                width: 100%;\n                color: var(--sys-color-inverse-on-surface);\n                flex: 1 0 0;\n                text-wrap: pretty;\n                user-select: text;\n            }\n        }\n\n        devtools-button.dismiss {\n            padding: 3px;\n        }\n    }\n}\n\n @keyframes slideIn {\n    from {\n        transform: translateY(var(--sys-size-5));\n        opacity: 0%;\n    }\n\n    to {\n        opacity: 100%;\n    }\n}\n\n/*# sourceURL=${import.meta.resolve('./snackbar.css')} */`;"],
  "mappings": "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",
  "names": []
}
