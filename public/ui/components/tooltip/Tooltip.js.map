{"version":3,"file":"Tooltip.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/tooltip/Tooltip.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,kBAAkB,CAAC;AAExC,OAAO,aAAa,MAAM,kBAAkB,CAAC;AAE7C,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAInB;;;;;;;;GAQG;AACH,MAAM,OAAO,OAAQ,SAAQ,WAAW;IACtC,MAAM,CAAU,kBAAkB,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAE9C,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IACrD,OAAO,GAAqB,IAAI,CAAC;IACjC,QAAQ,GAAgB,IAAI,CAAC;IAE7B,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IAC3F,CAAC;IACD,IAAI,UAAU,CAAC,KAAa;QAC1B,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;IACrE,CAAC;IACD,IAAI,OAAO,CAAC,OAAuB;QACjC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC;IAED,wBAAwB,CAAC,IAAY;QACnC,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;YAClB,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACvC,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAEvC,mBAAmB;QACnB,GAAG,CAAC,MAAM,CAAC,IAAI,CAAA;eACJ,aAAa,CAAC,UAAU;;;;;KAKlC,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAC/B,kBAAkB;IACpB,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW,GAAG,GAAS,EAAE;QACvB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;YACrC,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtB,CAAC,CAAC;IAEF,WAAW,GAAG,CAAC,KAAiB,EAAQ,EAAE;QACxC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC;QACD,mEAAmE;QACnE,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,IAAI,KAAK,CAAC,aAAa,KAAK,IAAI,EAAE,CAAC;YAC5D,OAAO;QACT,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;YACrC,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtB,CAAC,CAAC;IAEF,eAAe,CAAC,KAAY;QAC1B,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAED,qBAAqB;QACnB,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACjE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACjE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YAChE,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAED,eAAe;QACb,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,EAAE,EAAE,CAAC;YACR,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QACzD,CAAC;QACD,MAAM,MAAM,GAAI,IAAI,CAAC,WAAW,EAAc,CAAC,aAAa,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;QAC3F,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,IAAI,KAAK,CAAC,iCAAiC,EAAE,SAAS,CAAC,CAAC;QAChE,CAAC;QACD,IAAI,CAAC,CAAC,MAAM,YAAY,WAAW,CAAC,EAAE,CAAC;YACrC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QAED,MAAM,UAAU,GAAG,KAAK,EAAE,SAAS,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;QACrC,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,UAAU,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9D,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9D,gFAAgF;QAChF,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAC7D,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACxD,CAAC;;AAGH,cAAc,CAAC,MAAM,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Lit from '../../lit/lit.js';\n\nimport tooltipStyles from './tooltip.css.js';\n\nconst {html} = Lit;\n\nexport type TooltipVariant = 'simple'|'rich';\n\n/**\n * @attr id - Id of the tooltip. Used for searching an anchor element with aria-describedby.\n * @attr hover-delay - Hover length in ms before the tooltip is shown and hidden.\n * @attr variant - Variant of the tooltip, `\"simple\"` for strings only, inverted background,\n *                 `\"rich\"` for interactive content, background according to theme's surface.\n * @prop {String} id - reflects the `\"id\"` attribute.\n * @prop {Number} hoverDelay - reflects the `\"hover-delay\"` attribute.\n * @prop {String} variant - reflects the `\"variant\"` attribute.\n */\nexport class Tooltip extends HTMLElement {\n  static readonly observedAttributes = ['id', 'variant'];\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #anchor: HTMLElement|null = null;\n  #timeout: number|null = null;\n\n  get hoverDelay(): number {\n    return this.hasAttribute('hover-delay') ? Number(this.getAttribute('hover-delay')) : 200;\n  }\n  set hoverDelay(delay: number) {\n    this.setAttribute('hover-delay', delay.toString());\n  }\n\n  get variant(): TooltipVariant {\n    return this.getAttribute('variant') === 'rich' ? 'rich' : 'simple';\n  }\n  set variant(variant: TooltipVariant) {\n    this.setAttribute('variant', variant);\n  }\n\n  attributeChangedCallback(name: string): void {\n    if (name === 'id') {\n      this.#removeEventListeners();\n      this.#attachToAnchor();\n    }\n  }\n\n  connectedCallback(): void {\n    this.#attachToAnchor();\n\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'tooltip');\n    }\n    this.setAttribute('popover', 'manual');\n\n    // clang-format off\n    Lit.render(html`\n      <style>${tooltipStyles.cssContent}</style>\n      <!-- Wrapping it into a container, so that the tooltip doesn't disappear when the mouse moves from the anchor to the tooltip. -->\n      <div class=\"container\">\n        <slot></slot>\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  disconnectedCallback(): void {\n    this.#removeEventListeners();\n  }\n\n  showTooltip = (): void => {\n    if (this.#timeout) {\n      window.clearTimeout(this.#timeout);\n    }\n    this.#timeout = window.setTimeout(() => {\n      this.showPopover();\n    }, this.hoverDelay);\n  };\n\n  hideTooltip = (event: MouseEvent): void => {\n    if (this.#timeout) {\n      window.clearTimeout(this.#timeout);\n    }\n    // Don't hide a rich tooltip when hovering over the tooltip itself.\n    if (this.variant === 'rich' && event.relatedTarget === this) {\n      return;\n    }\n    this.#timeout = window.setTimeout(() => {\n      this.hidePopover();\n    }, this.hoverDelay);\n  };\n\n  #preventDefault(event: Event): void {\n    event.preventDefault();\n  }\n\n  #removeEventListeners(): void {\n    if (this.#anchor) {\n      this.#anchor.removeEventListener('mouseenter', this.showTooltip);\n      this.#anchor.removeEventListener('mouseleave', this.hideTooltip);\n      this.#anchor.removeEventListener('click', this.#preventDefault);\n      this.removeEventListener('mouseleave', this.hideTooltip);\n    }\n  }\n\n  #attachToAnchor(): void {\n    const id = this.getAttribute('id');\n    if (!id) {\n      throw new Error('<devtools-tooltip> must have an id.');\n    }\n    const anchor = (this.getRootNode() as Element).querySelector(`[aria-describedby=\"${id}\"]`);\n    if (!anchor) {\n      throw new Error(`No anchor for tooltip with id ${id} found.`);\n    }\n    if (!(anchor instanceof HTMLElement)) {\n      throw new Error('Anchor must be an HTMLElement.');\n    }\n\n    const anchorName = `--${id}-anchor`;\n    anchor.style.anchorName = anchorName;\n    anchor.setAttribute('popovertarget', id);\n    this.style.positionAnchor = anchorName;\n    this.#anchor = anchor;\n\n    this.#anchor.addEventListener('mouseenter', this.showTooltip);\n    this.#anchor.addEventListener('mouseleave', this.hideTooltip);\n    // By default the anchor with a popovertarget would toggle the popover on click.\n    this.#anchor.addEventListener('click', this.#preventDefault);\n    this.addEventListener('mouseleave', this.hideTooltip);\n  }\n}\n\ncustomElements.define('devtools-tooltip', Tooltip);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-tooltip': Tooltip;\n  }\n  // Remove this once the CSSStyleDeclaration interface is updated in the TypeScript standard library.\n  interface CSSStyleDeclaration {\n    anchorName: string;\n    positionAnchor: string;\n  }\n}\n"]}