{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/suggestion_input/SuggestionInput.ts", "../code_highlighter/codeHighlighter.css.js", "suggestionInput.css.js"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CodeHighlighter from '../../../ui/components/code_highlighter/code_highlighter.js';\nimport codeHighlighterStyles from '../../../ui/components/code_highlighter/codeHighlighter.css.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport contentEditableStyles from './suggestionInput.css.js';\n\nconst mod = (a: number, n: number): number => {\n  return ((a % n) + n) % n;\n};\n\nfunction assert<T>(\n    predicate: T,\n    message = 'Assertion failed!',\n    ): asserts predicate {\n  if (!predicate) {\n    throw new Error(message);\n  }\n}\n\nconst {html, Decorators, Directives, LitElement} = Lit;\nconst {customElement, property, state} = Decorators;\nconst {classMap} = Directives;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-suggestion-input': SuggestionInput;\n    'devtools-editable-content': EditableContent;\n    'devtools-suggestion-box': SuggestionBox;\n  }\n}\n\nconst jsonPropertyOptions = {\n  hasChanged(value: unknown, oldValue: unknown): boolean {\n    return JSON.stringify(value) !== JSON.stringify(oldValue);\n  },\n  attribute: false,\n};\n\n@customElement('devtools-editable-content')\nclass EditableContent extends HTMLElement {\n  static get observedAttributes(): string[] {\n    return ['disabled', 'placeholder'];\n  }\n\n  set disabled(disabled: boolean) {\n    this.contentEditable = String(!disabled);\n  }\n\n  get disabled(): boolean {\n    return this.contentEditable !== 'true';\n  }\n\n  set value(value: string) {\n    this.innerText = value;\n    this.#highlight();\n  }\n\n  get value(): string {\n    return this.innerText;\n  }\n\n  set mimeType(type: string) {\n    this.#mimeType = type;\n    this.#highlight();\n  }\n\n  get mimeType(): string {\n    return this.#mimeType;\n  }\n\n  #mimeType = '';\n\n  constructor() {\n    super();\n\n    this.contentEditable = 'true';\n    this.tabIndex = 0;\n\n    this.addEventListener('focus', () => {\n      this.innerHTML = this.innerText;\n    });\n    this.addEventListener('blur', this.#highlight.bind(this));\n  }\n\n  #highlight(): void {\n    if (this.#mimeType) {\n      void CodeHighlighter.CodeHighlighter.highlightNode(this, this.#mimeType);\n    }\n  }\n\n  attributeChangedCallback(name: string, _: string|null, value: string|null): void {\n    switch (name) {\n      case 'disabled':\n        this.disabled = value !== null;\n        break;\n    }\n  }\n}\n\n/**\n * Contains a suggestion emitted due to action by the user.\n */\nclass SuggestEvent extends Event {\n  static readonly eventName = 'suggest';\n  declare suggestion: string;\n  constructor(suggestion: string) {\n    super(SuggestEvent.eventName);\n    this.suggestion = suggestion;\n  }\n}\n\n/**\n * Parents should listen for this event and register the listeners provided by\n * this event.\n */\nclass SuggestionInitEvent extends Event {\n  static readonly eventName = 'suggestioninit';\n  listeners: Array<[string, (event: Event) => void]>;\n  constructor(listeners: Array<[string, (event: Event) => void]>) {\n    super(SuggestionInitEvent.eventName);\n    this.listeners = listeners;\n  }\n}\n\ntype SuggestionFilter = (option: string, query: string) => boolean;\n\nconst defaultSuggestionFilter = (option: string, query: string): boolean =>\n    option.toLowerCase().startsWith(query.toLowerCase());\n\n/**\n * @fires SuggestionInitEvent#suggestioninit\n * @fires SuggestEvent#suggest\n */\n@customElement('devtools-suggestion-box')\nclass SuggestionBox extends LitElement {\n  @property(jsonPropertyOptions) declare options: readonly string[];\n  @property() declare expression: string;\n  @property() declare suggestionFilter?: SuggestionFilter;\n\n  @state() private declare cursor: number;\n\n  #suggestions: string[] = [];\n\n  constructor() {\n    super();\n\n    this.options = [];\n    this.expression = '';\n\n    this.cursor = 0;\n  }\n\n  #handleKeyDownEvent = (event: Event): void => {\n    assert(event instanceof KeyboardEvent, 'Bound to the wrong event.');\n\n    if (this.#suggestions.length > 0) {\n      switch (event.key) {\n        case 'ArrowDown':\n          event.stopPropagation();\n          event.preventDefault();\n          this.#moveCursor(1);\n          break;\n        case 'ArrowUp':\n          event.stopPropagation();\n          event.preventDefault();\n          this.#moveCursor(-1);\n          break;\n      }\n    }\n\n    switch (event.key) {\n      case 'Enter':\n        if (this.#suggestions[this.cursor]) {\n          this.#dispatchSuggestEvent(this.#suggestions[this.cursor]);\n        }\n        event.preventDefault();\n        break;\n    }\n  };\n\n  #moveCursor(delta: number): void {\n    this.cursor = mod(this.cursor + delta, this.#suggestions.length);\n  }\n\n  #dispatchSuggestEvent(suggestion: string): void {\n    this.dispatchEvent(new SuggestEvent(suggestion));\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    this.dispatchEvent(\n        new SuggestionInitEvent([['keydown', this.#handleKeyDownEvent]]),\n    );\n  }\n\n  override willUpdate(changedProperties: Lit.PropertyValues<this>): void {\n    if (changedProperties.has('options')) {\n      this.options = Object.freeze([...this.options].sort());\n    }\n    if (changedProperties.has('expression') || changedProperties.has('options')) {\n      this.cursor = 0;\n      this.#suggestions = this.options.filter(\n          option => (this.suggestionFilter || defaultSuggestionFilter)(option, this.expression),\n      );\n    }\n  }\n\n  protected override render(): Lit.TemplateResult|undefined {\n    if (this.#suggestions.length === 0) {\n      return;\n    }\n\n    return html`<style>${contentEditableStyles}</style><ul class=\"suggestions\">\n      ${this.#suggestions.map((suggestion, index) => {\n      return html`<li\n          class=${classMap({\n        selected: index === this.cursor,\n      })}\n          @mousedown=${this.#dispatchSuggestEvent.bind(this, suggestion)}\n          jslog=${VisualLogging.item('suggestion').track({\n        click: true,\n      })}\n        >\n          ${suggestion}\n        </li>`;\n    })}\n    </ul>`;\n  }\n}\n\n@customElement('devtools-suggestion-input')\nexport class SuggestionInput extends LitElement {\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  } as const;\n\n  /**\n   * State passed to devtools-suggestion-box.\n   */\n  @property(jsonPropertyOptions) declare options: readonly string[];\n  @property({type: Boolean}) declare autocomplete?: boolean;\n  @property() declare suggestionFilter?: SuggestionFilter;\n  @state() declare expression: string;\n\n  /**\n   * State passed to devtools-editable-content.\n   */\n  @property() declare placeholder: string;\n  @property() declare value: string;\n  @property({type: Boolean}) declare disabled: boolean;\n  @property({type: Boolean}) declare strikethrough: boolean;\n  @property() declare mimeType: string;\n  @property() declare jslogContext?: string;\n\n  constructor() {\n    super();\n\n    this.options = [];\n    this.expression = '';\n\n    this.placeholder = '';\n    this.value = '';\n    this.disabled = false;\n    this.strikethrough = true;\n    this.mimeType = '';\n    this.autocomplete = true;\n    this.addEventListener('blur', this.#handleBlurEvent);\n    let jslog = VisualLogging.value().track({keydown: 'ArrowUp|ArrowDown|Enter', change: true, click: true});\n    if (this.jslogContext) {\n      jslog = jslog.context(this.jslogContext);\n    }\n    this.setAttribute('jslog', jslog.toString());\n  }\n\n  #cachedEditableContent?: EditableContent;\n  get #editableContent(): EditableContent {\n    if (this.#cachedEditableContent) {\n      return this.#cachedEditableContent;\n    }\n    const node = this.renderRoot.querySelector('devtools-editable-content');\n    if (!node) {\n      throw new Error('Attempted to query node before rendering.');\n    }\n    this.#cachedEditableContent = node;\n    return node;\n  }\n\n  #handleBlurEvent = (): void => {\n    window.getSelection()?.removeAllRanges();\n    this.value = this.#editableContent.value;\n    this.expression = this.#editableContent.value;\n  };\n\n  #handleFocusEvent = (event: FocusEvent): void => {\n    assert(event.target instanceof Node);\n    const range = document.createRange();\n    range.selectNodeContents(event.target);\n\n    const selection = window.getSelection() as Selection;\n    selection.removeAllRanges();\n    selection.addRange(range);\n  };\n\n  #handleKeyDownEvent = (event: KeyboardEvent): void => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n\n  #handleInputEvent = (event: {target: EditableContent}): void => {\n    this.expression = event.target.value;\n  };\n\n  #handleSuggestionInitEvent = (event: SuggestionInitEvent): void => {\n    for (const [name, listener] of event.listeners) {\n      this.addEventListener(name, listener);\n    }\n  };\n\n  #handleSuggestEvent = (event: SuggestEvent): void => {\n    this.#editableContent.value = event.suggestion;\n    // If actions result in a `focus` after this blur, then the blur won't\n    // happen. `setTimeout` guarantees `blur` will always come after `focus`.\n    setTimeout(this.blur.bind(this), 0);\n  };\n\n  protected override willUpdate(\n      properties: Lit.PropertyValues<this>,\n      ): void {\n    if (properties.has('value')) {\n      this.expression = this.value;\n    }\n  }\n\n  protected override render(): Lit.TemplateResult {\n    // clang-format off\n    return html`<style>${contentEditableStyles}</style>\n      <style>${codeHighlighterStyles}</style>\n      <devtools-editable-content\n        ?disabled=${this.disabled}\n        class=${classMap({\n          strikethrough: !this.strikethrough,\n        })}\n        .enterKeyHint=${'done'}\n        .value=${this.value}\n        .mimeType=${this.mimeType}\n        @focus=${this.#handleFocusEvent}\n        @input=${this.#handleInputEvent}\n        @keydown=${this.#handleKeyDownEvent}\n        autocapitalize=\"off\"\n        inputmode=\"text\"\n        placeholder=${this.placeholder}\n        spellcheck=\"false\"\n      ></devtools-editable-content>\n      <devtools-suggestion-box\n        @suggestioninit=${this.#handleSuggestionInitEvent}\n        @suggest=${this.#handleSuggestEvent}\n        .options=${this.options}\n        .suggestionFilter=${this.suggestionFilter}\n        .expression=${this.autocomplete ? this.expression : ''}\n      ></devtools-suggestion-box>`;\n    // clang-format on\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.token-variable {\n  color: var(--sys-color-token-variable);\n}\n\n.token-property {\n  color: var(--sys-color-token-property);\n}\n\n.token-type {\n  color: var(--sys-color-token-type);\n}\n\n.token-variable-special {\n  color: var(--sys-color-token-variable-special);\n}\n\n.token-definition {\n  color: var(--sys-color-token-definition);\n}\n\n.token-builtin {\n  color: var(--sys-color-token-builtin);\n}\n\n.token-number {\n  color: var(--sys-color-token-number);\n}\n\n.token-string {\n  color: var(--sys-color-token-string);\n}\n\n.token-string-special {\n  color: var(--sys-color-token-string-special);\n}\n\n.token-atom {\n  color: var(--sys-color-token-atom);\n}\n\n.token-keyword {\n  color: var(--sys-color-token-keyword);\n}\n\n.token-comment {\n  color: var(--sys-color-token-comment);\n}\n\n.token-meta {\n  color: var(--sys-color-token-meta);\n}\n\n.token-invalid {\n  color: var(--sys-color-error);\n}\n\n.token-tag {\n  color: var(--sys-color-token-tag);\n}\n\n.token-attribute {\n  color: var(--sys-color-token-attribute);\n}\n\n.token-attribute-value {\n  color: var(--sys-color-token-attribute-value);\n}\n\n.token-inserted {\n  color: var(--sys-color-token-inserted);\n}\n\n.token-deleted {\n  color: var(--sys-color-token-deleted);\n}\n\n.token-heading {\n  color: var(--sys-color-token-variable-special);\n  font-weight: bold;\n}\n\n.token-link {\n  color: var(--sys-color-token-variable-special);\n  text-decoration: underline;\n}\n\n.token-strikethrough {\n  text-decoration: line-through;\n}\n\n.token-strong {\n  font-weight: bold;\n}\n\n.token-emphasis {\n  font-style: italic;\n}\n\n/*# sourceURL=${import.meta.resolve('./codeHighlighter.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n* {\n  box-sizing: border-box;\n  font-size: inherit;\n  margin: 0;\n  padding: 0;\n}\n\n:host {\n  position: relative;\n}\n\ndevtools-editable-content {\n  background: transparent;\n  border: none;\n  color: var(--override-color-recorder-input, var(--sys-color-on-surface));\n  cursor: text;\n  display: inline-block;\n  line-height: 18px;\n  min-height: 18px;\n  min-width: 0.5em;\n  outline: none;\n  overflow-wrap: anywhere;\n}\n\ndevtools-editable-content:hover,\ndevtools-editable-content:focus {\n  box-shadow: 0 0 0 1px var(--sys-color-divider);\n  border-radius: 2px;\n}\n\ndevtools-editable-content[placeholder]:empty::before {\n  content: attr(placeholder);\n  color: var(--sys-color-on-surface);\n  opacity: 50%;\n}\n\ndevtools-editable-content[placeholder]:empty:focus::before {\n  content: \"\";\n}\n\ndevtools-suggestion-box {\n  position: absolute;\n  display: none;\n}\n\ndevtools-editable-content:focus ~ devtools-suggestion-box {\n  display: block;\n}\n\n.suggestions {\n  background-color: var(--sys-color-cdt-base-container);\n  box-shadow: var(--drop-shadow);\n  min-height: 1em;\n  min-width: 150px;\n  overflow: hidden auto;\n  position: relative;\n  z-index: 100;\n  max-height: 350px;\n}\n\n.suggestions > li {\n  padding: 1px;\n  border: 1px solid transparent;\n  white-space: nowrap;\n  font-family: var(--source-code-font-family);\n  font-size: var(--source-code-font-size);\n  color: var(--sys-color-on-surface);\n}\n\n.suggestions > li:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.suggestions > li.selected {\n  background-color: var(--sys-color-primary);\n  color: var(--sys-color-cdt-base-container);\n}\n\n.strikethrough {\n  text-decoration: line-through;\n}\n\n/*# sourceURL=${import.meta.resolve('./suggestionInput.css')} */`;"],
  "mappings": "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",
  "names": ["value", "EditableContent", "SuggestionBox", "SuggestionInput"]
}
