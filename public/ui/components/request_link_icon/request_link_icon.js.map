{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/request_link_icon/RequestLinkIcon.ts", "requestLinkIcon.css.js"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/icon_button/icon_button.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport type * as Logs from '../../../models/logs/logs.js';\nimport * as NetworkForward from '../../../panels/network/forward/forward.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport requestLinkIconStyles from './requestLinkIcon.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Title for a link to show a request in the network panel\n   * @example {https://example.org/index.html} url\n   */\n  clickToShowRequestInTheNetwork: 'Click to open the network panel and show request for URL: {url}',\n  /**\n   * @description Title for an link to show a request that is unavailable because the request couldn't be resolved\n   */\n  requestUnavailableInTheNetwork: 'Request unavailable in the network panel, try reloading the inspected page',\n  /**\n   * @description Label for the shortened URL displayed in a link to show a request in the network panel\n   */\n  shortenedURL: 'Shortened URL',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/components/request_link_icon/RequestLinkIcon.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface RequestLinkIconData {\n  linkToPreflight?: boolean;\n  request?: SDK.NetworkRequest.NetworkRequest|null;\n  affectedRequest?: {requestId?: Protocol.Network.RequestId, url?: string};\n  highlightHeader?: {section: NetworkForward.UIRequestLocation.UIHeaderSection, name: string};\n  networkTab?: NetworkForward.UIRequestLocation.UIRequestTabs;\n  requestResolver?: Logs.RequestResolver.RequestResolver;\n  displayURL?: boolean;\n  // If displayURL && urlToDisplay !== undefined, uses urlToDisplay for the text of the link.\n  // If displayURL only, uses filename of the URL.\n  urlToDisplay?: string;\n  additionalOnClickAction?: () => void;\n  revealOverride?: (revealable: unknown, omitFocus?: boolean) => Promise<void>;\n}\n\nexport const extractShortPath = (path: Platform.DevToolsPath.UrlString): string => {\n  // 1st regex matches everything after last '/'\n  // if path ends with '/', 2nd regex returns everything between the last two '/'\n  return (/[^/]+$/.exec(path) || /[^/]+\\/$/.exec(path) || [''])[0];\n};\n\nexport class RequestLinkIcon extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #linkToPreflight?: boolean;\n  // The value `null` indicates that the request is not available,\n  // `undefined` that it is still being resolved.\n  #request?: SDK.NetworkRequest.NetworkRequest|null;\n  #highlightHeader?: {section: NetworkForward.UIRequestLocation.UIHeaderSection, name: string};\n  #requestResolver?: Logs.RequestResolver.RequestResolver;\n  #displayURL = false;\n  #urlToDisplay?: string;\n  #networkTab?: NetworkForward.UIRequestLocation.UIRequestTabs;\n  #affectedRequest?: {requestId?: Protocol.Network.RequestId, url?: string};\n  #additionalOnClickAction?: () => void;\n  #reveal = Common.Revealer.reveal;\n\n  set data(data: RequestLinkIconData) {\n    this.#linkToPreflight = data.linkToPreflight;\n    this.#request = data.request;\n    if (data.affectedRequest) {\n      this.#affectedRequest = {...data.affectedRequest};\n    }\n    this.#highlightHeader = data.highlightHeader;\n    this.#networkTab = data.networkTab;\n    this.#requestResolver = data.requestResolver;\n    this.#displayURL = data.displayURL ?? false;\n    this.#urlToDisplay = data.urlToDisplay;\n    this.#additionalOnClickAction = data.additionalOnClickAction;\n    if (data.revealOverride) {\n      this.#reveal = data.revealOverride;\n    }\n    if (!this.#request && typeof data.affectedRequest?.requestId !== 'undefined') {\n      if (!this.#requestResolver) {\n        throw new Error('A `RequestResolver` must be provided if an `affectedRequest` is provided.');\n      }\n      this.#requestResolver.waitFor(data.affectedRequest.requestId)\n          .then(request => {\n            this.#request = request;\n            return this.#render();\n          })\n          .catch(() => {\n            this.#request = null;\n          });\n    }\n    void this.#render();\n  }\n\n  get data(): RequestLinkIconData {\n    return {\n      linkToPreflight: this.#linkToPreflight,\n      request: this.#request,\n      affectedRequest: this.#affectedRequest,\n      highlightHeader: this.#highlightHeader,\n      networkTab: this.#networkTab,\n      requestResolver: this.#requestResolver,\n      displayURL: this.#displayURL,\n      urlToDisplay: this.#urlToDisplay,\n      additionalOnClickAction: this.#additionalOnClickAction,\n      revealOverride: this.#reveal !== Common.Revealer.reveal ? this.#reveal : undefined,\n    };\n  }\n\n  handleClick(event: MouseEvent): void {\n    if (event.button !== 0) {\n      return;  // Only handle left-click for now.\n    }\n    const linkedRequest = this.#linkToPreflight ? this.#request?.preflightRequest() : this.#request;\n    if (!linkedRequest) {\n      return;\n    }\n    if (this.#highlightHeader) {\n      const requestLocation = NetworkForward.UIRequestLocation.UIRequestLocation.header(\n          linkedRequest, this.#highlightHeader.section, this.#highlightHeader.name);\n      void this.#reveal(requestLocation);\n    } else {\n      const requestLocation = NetworkForward.UIRequestLocation.UIRequestLocation.tab(\n          linkedRequest, this.#networkTab ?? NetworkForward.UIRequestLocation.UIRequestTabs.HEADERS_COMPONENT);\n      void this.#reveal(requestLocation);\n    }\n    this.#additionalOnClickAction?.();\n    event.consume();\n  }\n\n  #getTooltip(): Platform.UIString.LocalizedString {\n    if (this.#request) {\n      return i18nString(UIStrings.clickToShowRequestInTheNetwork, {url: this.#request.url()});\n    }\n    return i18nString(UIStrings.requestUnavailableInTheNetwork);\n  }\n\n  #getUrlForDisplaying(): string|undefined {\n    if (!this.#displayURL) {\n      return undefined;\n    }\n    if (this.#request) {\n      return this.#request.url();\n    }\n    return this.#affectedRequest?.url;\n  }\n\n  #maybeRenderURL(): Lit.LitTemplate {\n    const url = this.#getUrlForDisplaying();\n    if (!url) {\n      return Lit.nothing;\n    }\n\n    if (this.#urlToDisplay) {\n      return html`<span title=${url}>${this.#urlToDisplay}</span>`;\n    }\n\n    const filename = extractShortPath(url as Platform.DevToolsPath.UrlString);\n    return html`<span aria-label=${i18nString(UIStrings.shortenedURL)} title=${url}>${filename}</span>`;\n  }\n\n  async #render(): Promise<void> {\n    return await RenderCoordinator.write(() => {\n      // By default we render just the URL for the request link. If we also know\n      // the concrete network request, or at least its request ID, we surround\n      // the URL with a button, that opens the request in the Network panel.\n      let template = this.#maybeRenderURL();\n      if (this.#request || this.#affectedRequest?.requestId !== undefined) {\n        // clang-format off\n        template = html`\n          <button class=${Lit.Directives.classMap({link: Boolean(this.#request)})}\n                  title=${this.#getTooltip()}\n                  jslog=${VisualLogging.link('request').track({click: true})}\n                  @click=${this.handleClick}>\n            <devtools-icon name=\"arrow-up-down-circle\"></devtools-icon>\n            ${template}\n          </button>`;\n        // clang-format on\n      }\n      Lit.render(html`<style>${requestLinkIconStyles}</style>${template}`, this.#shadow, {host: this});\n    });\n  }\n}\n\ncustomElements.define('devtools-request-link-icon', RequestLinkIcon);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-request-link-icon': RequestLinkIcon;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: inline-block;\n  white-space: nowrap;\n  color: inherit;\n  font-size: inherit;\n  font-family: inherit;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\nbutton {\n  border: none;\n  background: transparent;\n  margin: 0;\n  padding: 0;\n  font-family: inherit;\n  font-size: inherit;\n  color: inherit;\n\n  &.link {\n    cursor: pointer;\n\n    & > span {\n      color: var(--sys-color-primary);\n    }\n  }\n}\n\ndevtools-icon {\n  width: 16px;\n  height: 16px;\n  vertical-align: middle;\n  color: var(--icon-no-request);\n\n  .link > & {\n    color: var(--icon-link);\n  }\n}\n\n@media (forced-colors: active) {\n  devtools-icon {\n    color: ButtonText;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./requestLinkIcon.css')} */`;"],
  "mappings": "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",
  "names": []
}
