{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/expandable_list/ExpandableList.ts", "expandableList.css.js"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Lit from '../../lit/lit.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\n\nimport expandableListStyles from './expandableList.css.js';\n\nconst {html, Directives: {ifDefined}} = Lit;\n\nexport interface ExpandableListData {\n  rows: Lit.TemplateResult[];\n  title?: string;\n}\n\nexport class ExpandableList extends HTMLElement {\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #expanded = false;\n  #rows: Lit.TemplateResult[] = [];\n  #title?: string;\n\n  set data(data: ExpandableListData) {\n    this.#rows = data.rows;\n    this.#title = data.title;\n    this.#render();\n  }\n\n  #onArrowClick(): void {\n    this.#expanded = !this.#expanded;\n    this.#render();\n  }\n\n  #render(): void {\n    if (this.#rows.length < 1) {\n      return;\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    Lit.render(\n        html`\n      <style>${expandableListStyles}</style>\n      <div class=\"expandable-list-container\">\n        <div>\n          ${this.#rows.length > 1 ?\n            html`\n              <button title='${ifDefined(this.#title)}' aria-label='${ifDefined(this.#title)}' aria-expanded=${this.#expanded ? 'true' : 'false'} @click=${() => this.#onArrowClick()} class=\"arrow-icon-button\">\n                <span class=\"arrow-icon ${this.#expanded ? 'expanded' : ''}\"\n                jslog=${VisualLogging.expand().track({click: true})}></span>\n              </button>\n            `\n          : Lit.nothing}\n        </div>\n        <div class=\"expandable-list-items\">\n          ${this.#rows.filter((_, index) => (this.#expanded || index === 0)).map(row => html`\n            ${row}\n          `)}\n        </div>\n      </div>\n    `,\n        this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-expandable-list', ExpandableList);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-expandable-list': ExpandableList;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: hidden;\n}\n\ndiv {\n  line-height: 1.7em;\n}\n\n.arrow-icon-button {\n  cursor: pointer;\n  padding: 1px 0;\n  border: none;\n  background: none;\n  margin-right: 2px;\n}\n\n.arrow-icon {\n  display: inline-block;\n  mask-image: var(--image-file-triangle-right);\n  background-color: var(--icon-default);\n  margin-top: 2px;\n  height: 14px;\n  width: 14px;\n  transition: transform 200ms;\n}\n\n.arrow-icon.expanded {\n  transform: rotate(90deg);\n}\n\n.expandable-list-container {\n  display: flex;\n  margin-top: 4px;\n}\n\n.expandable-list-items {\n  overflow: hidden;\n}\n\n.link,\n.devtools-link {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n  outline-offset: 2px;\n  border: none;\n  background: none;\n  font-family: inherit;\n  font-size: var(--sys-size-6);\n\n  &:focus-visible {\n    outline: 2px solid var(--sys-color-state-focus-ring);\n    outline-offset: 0;\n    border-radius: var(--sys-shape-corner-extra-small);\n  }\n}\n\nbutton.link {\n  border: none;\n  background: none;\n  font-family: inherit;\n  font-size: inherit;\n}\n\n.text-ellipsis {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/*# sourceURL=${import.meta.resolve('./expandableList.css')} */`;"],
  "mappings": ";;;;;;;AAAA;;;;AAKA,YAAY,SAAS;AACrB,YAAY,mBAAmB;;;ACD/B,IAAO,6BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA4EC,YAAY,QAAQ,sBAAsB,CAAC;;;ADvE3D,IAAM,EAAC,MAAM,YAAY,EAAC,UAAS,EAAC,IAAI;AAOlC,IAAO,iBAAP,cAA8B,YAAW;EAEpC,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;EACnD,YAAY;EACZ,QAA8B,CAAA;EAC9B;EAEA,IAAI,KAAK,MAAwB;AAC/B,SAAK,QAAQ,KAAK;AAClB,SAAK,SAAS,KAAK;AACnB,SAAK,QAAO;EACd;EAEA,gBAAa;AACX,SAAK,YAAY,CAAC,KAAK;AACvB,SAAK,QAAO;EACd;EAEA,UAAO;AACL,QAAI,KAAK,MAAM,SAAS,GAAG;AACzB;IACF;AAIA,IAAI,WACA;eACO,0BAAoB;;;YAGvB,KAAK,MAAM,SAAS,IACpB;+BACmB,UAAU,KAAK,MAAM,CAAC,iBAAiB,UAAU,KAAK,MAAM,CAAC,mBAAmB,KAAK,YAAY,SAAS,OAAO,WAAW,MAAM,KAAK,cAAa,CAAE;0CAC3I,KAAK,YAAY,aAAa,EAAE;wBACpC,qBAAM,EAAG,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC;;gBAGnD,WAAO;;;YAGX,KAAK,MAAM,OAAO,CAAC,GAAG,UAAW,KAAK,aAAa,UAAU,CAAE,EAAE,IAAI,SAAO;cAC1E,GAAG;WACN,CAAC;;;OAIJ,KAAK,SAAS,EAAC,MAAM,KAAI,CAAC;EAEhC;;AAGF,eAAe,OAAO,4BAA4B,cAAc;",
  "names": []
}
