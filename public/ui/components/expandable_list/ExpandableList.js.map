{"version":3,"file":"ExpandableList.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/expandable_list/ExpandableList.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,kBAAkB,CAAC;AACxC,OAAO,KAAK,aAAa,MAAM,wCAAwC,CAAC;AAExE,OAAO,uBAAuB,MAAM,yBAAyB,CAAC;AAE9D,4EAA4E;AAC5E,MAAM,oBAAoB,GAAG,IAAI,aAAa,EAAE,CAAC;AACjD,oBAAoB,CAAC,WAAW,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;AAErE,MAAM,EAAC,IAAI,EAAE,UAAU,EAAE,EAAC,SAAS,EAAC,EAAC,GAAG,GAAG,CAAC;AAO5C,MAAM,OAAO,cAAe,SAAQ,WAAW;IAEpC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IACrD,SAAS,GAAG,KAAK,CAAC;IAClB,KAAK,GAAyB,EAAE,CAAC;IACjC,MAAM,CAAU;IAEhB,IAAI,IAAI,CAAC,IAAwB;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAC3D,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC1B,OAAO;QACT,CAAC;QAED,qDAAqD;QACrD,mBAAmB;QACnB,GAAG,CAAC,MAAM,CACN,IAAI,CAAA;;;YAGA,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvB,IAAI,CAAA;+BACe,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE;0CAC3I,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;wBAClD,aAAa,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;;aAEtD;YACH,CAAC,CAAC,GAAG,CAAC,OAAO;;;YAGX,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAA;cAC9E,GAAG;WACN,CAAC;;;KAGP,EACG,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAChC,kBAAkB;IACpB,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,0BAA0B,EAAE,cAAc,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Lit from '../../lit/lit.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\n\nimport expandableListStylesRaw from './expandableList.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst expandableListStyles = new CSSStyleSheet();\nexpandableListStyles.replaceSync(expandableListStylesRaw.cssContent);\n\nconst {html, Directives: {ifDefined}} = Lit;\n\nexport interface ExpandableListData {\n  rows: Lit.TemplateResult[];\n  title?: string;\n}\n\nexport class ExpandableList extends HTMLElement {\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #expanded = false;\n  #rows: Lit.TemplateResult[] = [];\n  #title?: string;\n\n  set data(data: ExpandableListData) {\n    this.#rows = data.rows;\n    this.#title = data.title;\n    this.#render();\n  }\n\n  #onArrowClick(): void {\n    this.#expanded = !this.#expanded;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [expandableListStyles];\n  }\n\n  #render(): void {\n    if (this.#rows.length < 1) {\n      return;\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    Lit.render(\n        html`\n      <div class=\"expandable-list-container\">\n        <div>\n          ${this.#rows.length > 1 ?\n            html`\n              <button title='${ifDefined(this.#title)}' aria-label='${ifDefined(this.#title)}' aria-expanded=${this.#expanded ? 'true' : 'false'} @click=${() => this.#onArrowClick()} class=\"arrow-icon-button\">\n                <span class=\"arrow-icon ${this.#expanded ? 'expanded' : ''}\"\n                jslog=${VisualLogging.expand().track({click: true})}></span>\n              </button>\n            `\n          : Lit.nothing}\n        </div>\n        <div class=\"expandable-list-items\">\n          ${this.#rows.filter((_, index) => (this.#expanded || index === 0)).map(row => html`\n            ${row}\n          `)}\n        </div>\n      </div>\n    `,\n        this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-expandable-list', ExpandableList);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-expandable-list': ExpandableList;\n  }\n}\n"]}