{"version":3,"file":"ButtonDialog.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/dialogs/ButtonDialog.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport type * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport {html, render} from '../../../ui/lit/lit.js';\n\nimport buttonDialogStyles from './buttonDialog.css.js';\nimport {\n  type ClickOutsideDialogEvent,\n  type Dialog as DialogElement,\n  DialogHorizontalAlignment,\n  DialogState,\n  DialogVerticalPosition,\n} from './Dialog.js';\n\nexport type ButtonDialogState = DialogState;\n\nexport interface ButtonDialogData {\n  openOnRender?: boolean;\n  jslogContext?: string;\n  // The below are parts of ButtonData. See comments of ButtonData.\n  variant: Buttons.Button.Variant.PRIMARY_TOOLBAR|Buttons.Button.Variant.TOOLBAR|Buttons.Button.Variant.ICON;\n  iconName: string;\n  disabled?: boolean;\n  iconTitle?: string;\n  // The below are parts of DialogData. See comments of DialogData.\n  position?: DialogVerticalPosition;\n  horizontalAlignment?: DialogHorizontalAlignment;\n  closeOnESC?: boolean;\n  closeOnScroll?: boolean;\n  closeButton?: boolean;\n  state?: ButtonDialogState;\n  dialogTitle: string;\n}\n\nexport class ButtonDialog extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #dialog: DialogElement|null = null;\n  #showButton: Buttons.Button.Button|null = null;\n  #data: ButtonDialogData|null = null;\n\n  set data(data: ButtonDialogData) {\n    this.#data = data;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #showDialog(): void {\n    if (!this.#dialog) {\n      throw new Error('Dialog not found');\n    }\n\n    if (this.#data?.state === DialogState.DISABLED) {\n      // If dialog is disabled start teardown process to return\n      // focus to caller.\n      void this.#dialog.setDialogVisible(false);\n    } else {\n      void this.#dialog.setDialogVisible(true);\n    }\n\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #closeDialog(evt?: ClickOutsideDialogEvent): void {\n    if (!this.#dialog) {\n      throw new Error('Dialog not found');\n    }\n    void this.#dialog.setDialogVisible(false);\n    if (evt) {\n      evt.stopImmediatePropagation();\n    }\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  set state(state: ButtonDialogState) {\n    if (this.#data) {\n      this.#data.state = state;\n      void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n  }\n\n  #render(): void {\n    if (!this.#data) {\n      throw new Error('ButtonDialog.data is not set');\n    }\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('Button dialog render was not scheduled');\n    }\n\n    // clang-format off\n    render(\n      html`\n      <style>${buttonDialogStyles}</style>\n      <devtools-button\n        @click=${this.#showDialog}\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n          this.#showButton = node as Buttons.Button.Button;\n        })}\n        .data=${{\n          variant: this.#data.variant,\n          iconName: this.#data.iconName,\n          disabled: this.#data.disabled,\n          title: this.#data.iconTitle,\n          jslogContext: this.#data.jslogContext,\n        } as Buttons.Button.ButtonData}\n      ></devtools-button>\n      <devtools-dialog\n        @clickoutsidedialog=${this.#closeDialog}\n        .origin=${() => {\n          if (!this.#showButton) {\n            throw new Error('Button not found');\n          }\n          return this.#showButton;\n        }}\n        .position=${this.#data.position ?? DialogVerticalPosition.BOTTOM}\n        .horizontalAlignment=${this.#data.horizontalAlignment ?? DialogHorizontalAlignment.RIGHT}\n        .closeOnESC=${this.#data.closeOnESC ?? false}\n        .closeOnScroll=${this.#data.closeOnScroll ?? false}\n        .closeButton=${this.#data.closeButton ?? false}\n        .dialogTitle=${this.#data.dialogTitle}\n        .jslogContext=${this.#data.jslogContext ?? ''}\n        .state=${this.#data.state ?? DialogState.EXPANDED}\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n          this.#dialog = node as DialogElement;\n        })}\n      >\n        <slot></slot>\n      </devtools-dialog>\n      `,\n      this.#shadow, {host: this});\n    // clang-format on\n\n    if (this.#data.openOnRender) {\n      this.#showDialog();\n      this.#data.openOnRender = false;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-button-dialog': ButtonDialog;\n  }\n}\ncustomElements.define('devtools-button-dialog', ButtonDialog);\n"]}