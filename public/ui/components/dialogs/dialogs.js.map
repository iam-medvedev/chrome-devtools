{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/dialogs/ButtonDialog.ts", "buttonDialog.css.js", "../../../../../../../front_end/ui/components/dialogs/Dialog.ts", "dialog.css.js", "../../../../../../../front_end/ui/components/dialogs/ShortcutDialog.ts", "shortcutDialog.css.js"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport type * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport {html, render} from '../../../ui/lit/lit.js';\n\nimport buttonDialogStyles from './buttonDialog.css.js';\nimport {\n  type ClickOutsideDialogEvent,\n  type Dialog as DialogElement,\n  DialogHorizontalAlignment,\n  DialogVerticalPosition,\n} from './Dialog.js';\n\nexport interface ButtonDialogData {\n  openOnRender?: boolean;\n  jslogContext?: string;\n  // The below are parts of ButtonData. See comments of ButtonData.\n  variant: Buttons.Button.Variant.PRIMARY_TOOLBAR|Buttons.Button.Variant.TOOLBAR|Buttons.Button.Variant.ICON;\n  iconName: string;\n  disabled?: boolean;\n  iconTitle?: string;\n  // The below are parts of DialogData. See comments of DialogData.\n  position?: DialogVerticalPosition;\n  horizontalAlignment?: DialogHorizontalAlignment;\n  closeOnESC?: boolean;\n  closeOnScroll?: boolean;\n  closeButton?: boolean;\n  dialogTitle: string;\n}\n\nexport class ButtonDialog extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #dialog: DialogElement|null = null;\n  #showButton: Buttons.Button.Button|null = null;\n  #data: ButtonDialogData|null = null;\n\n  set data(data: ButtonDialogData) {\n    this.#data = data;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #showDialog(): void {\n    if (!this.#dialog) {\n      throw new Error('Dialog not found');\n    }\n    void this.#dialog.setDialogVisible(true);\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #closeDialog(evt?: ClickOutsideDialogEvent): void {\n    if (!this.#dialog) {\n      throw new Error('Dialog not found');\n    }\n    void this.#dialog.setDialogVisible(false);\n    if (evt) {\n      evt.stopImmediatePropagation();\n    }\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #render(): void {\n    if (!this.#data) {\n      throw new Error('ButtonDialog.data is not set');\n    }\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('Button dialog render was not scheduled');\n    }\n\n    // clang-format off\n    render(\n      html`\n      <style>${buttonDialogStyles}</style>\n      <devtools-button\n        @click=${this.#showDialog}\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n          this.#showButton = node as Buttons.Button.Button;\n        })}\n        .data=${{\n          variant: this.#data.variant,\n          iconName: this.#data.iconName,\n          disabled: this.#data.disabled,\n          title: this.#data.iconTitle,\n          jslogContext: this.#data.jslogContext,\n        } as Buttons.Button.ButtonData}\n      ></devtools-button>\n      <devtools-dialog\n        @clickoutsidedialog=${this.#closeDialog}\n        .origin=${() => {\n          if (!this.#showButton) {\n            throw new Error('Button not found');\n          }\n          return this.#showButton;\n        }}\n        .position=${this.#data.position ?? DialogVerticalPosition.BOTTOM}\n        .horizontalAlignment=${this.#data.horizontalAlignment ?? DialogHorizontalAlignment.RIGHT}\n        .closeOnESC=${this.#data.closeOnESC ?? false}\n        .closeOnScroll=${this.#data.closeOnScroll ?? false}\n        .closeButton=${this.#data.closeButton ?? false}\n        .dialogTitle=${this.#data.dialogTitle}\n        .jslogContext=${this.#data.jslogContext ?? ''}\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n          this.#dialog = node as DialogElement;\n        })}\n      >\n        <slot></slot>\n      </devtools-dialog>\n      `,\n      this.#shadow, {host: this});\n    // clang-format on\n\n    if (this.#data.openOnRender) {\n      this.#showDialog();\n      this.#data.openOnRender = false;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-button-dialog': ButtonDialog;\n  }\n}\ncustomElements.define('devtools-button-dialog', ButtonDialog);\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  white-space: normal;\n}\n\n/*# sourceURL=${import.meta.resolve('./buttonDialog.css')} */`;", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as WindowBoundsService from '../../../services/window_bounds/window_bounds.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Buttons from '../buttons/buttons.js';\n\nimport dialogStyles from './dialog.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n\n  /**\n   * @description Title of close button for the shortcuts dialog.\n   */\n  close: 'Close',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('ui/components/dialogs/Dialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst IS_DIALOG_SUPPORTED = 'HTMLDialogElement' in globalThis;\n\n// Height in pixels of the dialog's connector. The connector is represented as\n// as a diamond and the height corresponds to half the height of the diamond.\n// (the visible height is only half of the diamond).\nexport const CONNECTOR_HEIGHT = 10;\nconst CONNECTOR_WIDTH = 2 * CONNECTOR_HEIGHT;\n\n// The offset used by the dialog's animation as it slides in when opened.\nconst DIALOG_ANIMATION_OFFSET = 20;\n\nexport const DIALOG_SIDE_PADDING = 5;\nexport const DIALOG_VERTICAL_PADDING = 3;\n\n// If the content of the dialog cannot be completely shown because otherwise\n// the dialog would overflow the window, the dialog's max width and height are\n// set such that the dialog remains inside the visible bounds. In this cases\n// some extra, determined by this constant, is added so that the dialog's borders\n// remain clearly visible. This constant accounts for the padding of the dialog's\n// content (20 px) and a 5px gap left on each extreme of the dialog from the viewport.\nexport const DIALOG_PADDING_FROM_WINDOW = 3 * CONNECTOR_HEIGHT;\ninterface DialogData {\n  /**\n   * Position or point the dialog is shown relative to.\n   * If the dialog instance will be shown as a modal, set\n   * this property to MODAL.\n   */\n  origin: DialogOrigin;\n  position: DialogVerticalPosition;\n  /**\n   * Horizontal alignment of the dialog with respect to its origin.\n   * Center by default.\n   */\n  horizontalAlignment: DialogHorizontalAlignment;\n  /**\n   * Optional function used to the determine the x coordinate of the connector's\n   * end (tip of the triangle), relative to the viewport. If not defined, the x\n   * coordinate of the origin's center is used instead.\n   */\n  getConnectorCustomXPosition: (() => number)|null;\n\n  /**\n   * Optional function called when the dialog is shown.\n   */\n  dialogShownCallback: (() => unknown)|null;\n\n  /**\n   * Optional. Service that provides the window dimensions used for positioning the Dialog.\n   */\n  windowBoundsService: WindowBoundsService.WindowBoundsService.WindowBoundsService;\n  /**\n   * Whether the dialog is closed when the 'Escape' key is pressed. When true, the event is\n   * propagation is stopped.\n   */\n  closeOnESC: boolean;\n  /**\n   * Whether the dialog is closed when a scroll event is detected outside of the dialog's\n   * content. Defaults to true.\n   */\n  closeOnScroll: boolean;\n  /**\n   * Whether render a closed button, when it is clicked, close the dialog. Defaults to false.\n   */\n  closeButton: boolean;\n  /**\n   * The string used in the header row of the dialog.\n   */\n  dialogTitle: string;\n  /**\n   * Specifies a context for the visual element.\n   */\n  jslogContext: string;\n  /**\n   * By default the dialog will close if any mutations to the DOM outside of it\n   * are detected. By setting this selector, any mutations on elements that\n   * match the selector will not cause the dialog to close.\n   */\n  expectedMutationsSelector?: string;\n}\n\ntype DialogAnchor = HTMLElement|DOMRect|DOMPoint;\n\nexport const MODAL = 'MODAL';\n\nexport type DialogOrigin = DialogAnchor|null|(() => DialogAnchor)|typeof MODAL;\nexport class Dialog extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #forceDialogCloseInDevToolsBound = this.#forceDialogCloseInDevToolsMutation.bind(this);\n  readonly #handleScrollAttemptBound = this.#handleScrollAttempt.bind(this);\n  readonly #props: DialogData = {\n    origin: MODAL,\n    position: DialogVerticalPosition.BOTTOM,\n    horizontalAlignment: DialogHorizontalAlignment.CENTER,\n    getConnectorCustomXPosition: null,\n    dialogShownCallback: null,\n    windowBoundsService: WindowBoundsService.WindowBoundsService.WindowBoundsServiceImpl.instance(),\n    closeOnESC: true,\n    closeOnScroll: true,\n    closeButton: false,\n    dialogTitle: '',\n    jslogContext: '',\n  };\n\n  #dialog: HTMLDialogElement|null = null;\n  #isPendingShowDialog = false;\n  #isPendingCloseDialog = false;\n  #hitArea = new DOMRect(0, 0, 0, 0);\n  #dialogClientRect = new DOMRect(0, 0, 0, 0);\n  #bestVerticalPositionInternal: DialogVerticalPosition|null = null;\n  #bestHorizontalAlignment: DialogHorizontalAlignment|null = null;\n  readonly #devtoolsMutationObserver = new MutationObserver(mutations => {\n    if (this.#props.expectedMutationsSelector) {\n      const allExcluded = mutations.every(mutation => {\n        return mutation.target instanceof Element &&\n            mutation.target.matches(this.#props.expectedMutationsSelector ?? '');\n      });\n      if (allExcluded) {\n        return;\n      }\n    }\n    this.#forceDialogCloseInDevToolsBound();\n  });\n  readonly #dialogResizeObserver = new ResizeObserver(this.#updateDialogBounds.bind(this));\n  #devToolsBoundingElement = this.windowBoundsService.getDevToolsBoundingElement();\n\n  // We bind here because we have to listen to keydowns on the entire window,\n  // not on the Dialog element itself. This is because if the user has the\n  // dialog open, but their focus is elsewhere, and they hit ESC, we should\n  // still close the dialog.\n  #onKeyDownBound = this.#onKeyDown.bind(this);\n\n  get origin(): DialogOrigin {\n    return this.#props.origin;\n  }\n\n  set origin(origin: DialogOrigin) {\n    this.#props.origin = origin;\n    this.#onStateChange();\n  }\n\n  set expectedMutationsSelector(mutationSelector: string) {\n    this.#props.expectedMutationsSelector = mutationSelector;\n  }\n\n  get expectedMutationsSelector(): string|undefined {\n    return this.#props.expectedMutationsSelector;\n  }\n\n  get position(): DialogVerticalPosition {\n    return this.#props.position;\n  }\n\n  set position(position: DialogVerticalPosition) {\n    this.#props.position = position;\n    this.#onStateChange();\n  }\n\n  get horizontalAlignment(): DialogHorizontalAlignment {\n    return this.#props.horizontalAlignment;\n  }\n\n  set horizontalAlignment(alignment: DialogHorizontalAlignment) {\n    this.#props.horizontalAlignment = alignment;\n    this.#onStateChange();\n  }\n\n  get windowBoundsService(): WindowBoundsService.WindowBoundsService.WindowBoundsService {\n    return this.#props.windowBoundsService;\n  }\n\n  set windowBoundsService(windowBoundsService: WindowBoundsService.WindowBoundsService.WindowBoundsService) {\n    this.#props.windowBoundsService = windowBoundsService;\n    this.#devToolsBoundingElement = this.windowBoundsService.getDevToolsBoundingElement();\n    this.#onStateChange();\n  }\n\n  get bestVerticalPosition(): DialogVerticalPosition|null {\n    return this.#bestVerticalPositionInternal;\n  }\n\n  get bestHorizontalAlignment(): DialogHorizontalAlignment|null {\n    return this.#bestHorizontalAlignment;\n  }\n  get getConnectorCustomXPosition(): (() => number)|null {\n    return this.#props.getConnectorCustomXPosition;\n  }\n\n  set getConnectorCustomXPosition(connectorXPosition: (() => number)|null) {\n    this.#props.getConnectorCustomXPosition = connectorXPosition;\n    this.#onStateChange();\n  }\n\n  get dialogShownCallback(): (() => unknown)|null {\n    return this.#props.dialogShownCallback;\n  }\n\n  get jslogContext(): string {\n    return this.#props.jslogContext;\n  }\n\n  set dialogShownCallback(dialogShownCallback: (() => unknown)|null) {\n    this.#props.dialogShownCallback = dialogShownCallback;\n    this.#onStateChange();\n  }\n\n  set closeOnESC(closeOnESC: boolean) {\n    this.#props.closeOnESC = closeOnESC;\n    this.#onStateChange();\n  }\n\n  set closeOnScroll(closeOnScroll: boolean) {\n    this.#props.closeOnScroll = closeOnScroll;\n    this.#onStateChange();\n  }\n\n  set closeButton(closeButton: boolean) {\n    this.#props.closeButton = closeButton;\n    this.#onStateChange();\n  }\n\n  set dialogTitle(dialogTitle: string) {\n    this.#props.dialogTitle = dialogTitle;\n    this.#onStateChange();\n  }\n\n  set jslogContext(jslogContext: string) {\n    this.#props.jslogContext = jslogContext;\n    this.#onStateChange();\n  }\n\n  #updateDialogBounds(): void {\n    this.#dialogClientRect = this.#getDialog().getBoundingClientRect();\n  }\n\n  #onStateChange(): void {\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  connectedCallback(): void {\n    window.addEventListener('resize', this.#forceDialogCloseInDevToolsBound);\n    this.#devtoolsMutationObserver.observe(this.#devToolsBoundingElement, {childList: true, subtree: true});\n    this.#devToolsBoundingElement.addEventListener('wheel', this.#handleScrollAttemptBound);\n    this.style.setProperty('--dialog-padding', '0');\n    this.style.setProperty('--dialog-display', IS_DIALOG_SUPPORTED ? 'block' : 'none');\n    this.style.setProperty('--override-dialog-content-border', `${CONNECTOR_HEIGHT}px solid transparent`);\n    this.style.setProperty('--dialog-padding', `${DIALOG_VERTICAL_PADDING}px ${DIALOG_SIDE_PADDING}px`);\n  }\n\n  disconnectedCallback(): void {\n    window.removeEventListener('resize', this.#forceDialogCloseInDevToolsBound);\n\n    this.#devToolsBoundingElement.removeEventListener('wheel', this.#handleScrollAttemptBound);\n    this.#devtoolsMutationObserver.disconnect();\n    this.#dialogResizeObserver.disconnect();\n  }\n\n  #getDialog(): HTMLDialogElement {\n    if (!this.#dialog) {\n      this.#dialog = this.#shadow.querySelector('dialog');\n      if (!this.#dialog) {\n        throw new Error('Dialog not found');\n      }\n      this.#dialogResizeObserver.observe(this.#dialog);\n    }\n    return this.#dialog;\n  }\n\n  getHitArea(): DOMRect {\n    return this.#hitArea;\n  }\n\n  async setDialogVisible(show: boolean): Promise<void> {\n    if (show) {\n      await this.#showDialog();\n      return;\n    }\n    this.#closeDialog();\n  }\n\n  async #handlePointerEvent(evt: MouseEvent|PointerEvent): Promise<void> {\n    evt.stopPropagation();\n    // If the user uses the keyboard to interact with an element within the\n    // dialog, it will trigger a pointer event (for example, the user might use\n    // their spacebar to \"click\" on a form input element). In that case the\n    // pointerType will be an empty string, rather than `mouse`, `pen` or\n    // `touch`. In this instance, we early return, because we only need to\n    // worry about clicks outside of the dialog. Once the dialog is open, the\n    // user can only use the keyboard to navigate within the dialog; so we\n    // don't have to concern ourselves with keyboard events that occur outside\n    // the dialog's bounds.\n    if (evt instanceof PointerEvent && evt.pointerType === '') {\n      return;\n    }\n\n    const eventWasInDialogContent = this.#mouseEventWasInDialogContent(evt);\n    const eventWasInHitArea = this.#mouseEventWasInHitArea(evt);\n    if (eventWasInDialogContent) {\n      return;\n    }\n    if (evt.type === 'pointermove') {\n      if (eventWasInHitArea) {\n        return;\n      }\n      this.dispatchEvent(new PointerLeftDialogEvent());\n      return;\n    }\n    this.dispatchEvent(new ClickOutsideDialogEvent());\n  }\n\n  #animationEndedEvent(): void {\n    this.dispatchEvent(new AnimationEndedEvent());\n  }\n\n  #mouseEventWasInDialogContent(evt: MouseEvent): boolean {\n    const dialogBounds = this.#dialogClientRect;\n\n    let animationOffSetValue = this.bestVerticalPosition === DialogVerticalPosition.BOTTOM ?\n        DIALOG_ANIMATION_OFFSET :\n        -1 * DIALOG_ANIMATION_OFFSET;\n    if (this.#props.origin === MODAL) {\n      // When shown as a modal, the dialog is not animated\n      animationOffSetValue = 0;\n    }\n    const eventWasDialogContentX =\n        evt.pageX >= dialogBounds.left && evt.pageX <= dialogBounds.left + dialogBounds.width;\n    const eventWasDialogContentY = evt.pageY >= dialogBounds.top + animationOffSetValue &&\n        evt.pageY <= dialogBounds.top + dialogBounds.height + animationOffSetValue;\n\n    return eventWasDialogContentX && eventWasDialogContentY;\n  }\n\n  #mouseEventWasInHitArea(evt: MouseEvent): boolean {\n    const hitAreaBounds = this.#hitArea;\n    const eventWasInHitAreaX = evt.pageX >= hitAreaBounds.left && evt.pageX <= hitAreaBounds.left + hitAreaBounds.width;\n    const eventWasInHitAreaY = evt.pageY >= hitAreaBounds.top && evt.pageY <= hitAreaBounds.top + hitAreaBounds.height;\n\n    return eventWasInHitAreaX && eventWasInHitAreaY;\n  }\n\n  #getCoordinatesFromDialogOrigin(origin: DialogOrigin): AnchorBounds {\n    if (!origin || origin === MODAL) {\n      throw new Error('Dialog origin is null');\n    }\n    const anchor = origin instanceof Function ? origin() : origin;\n    if (anchor instanceof DOMPoint) {\n      return {top: anchor.y, bottom: anchor.y, left: anchor.x, right: anchor.x};\n    }\n    if (anchor instanceof HTMLElement) {\n      return anchor.getBoundingClientRect();\n    }\n    return anchor;\n  }\n\n  #getBestHorizontalAlignment(anchorBounds: AnchorBounds, devtoolsBounds: DOMRect): DialogHorizontalAlignment {\n    if (devtoolsBounds.right - anchorBounds.left > anchorBounds.right - devtoolsBounds.left) {\n      return DialogHorizontalAlignment.LEFT;\n    }\n    return DialogHorizontalAlignment.RIGHT;\n  }\n\n  #getBestVerticalPosition(originBounds: AnchorBounds, dialogHeight: number, devtoolsBounds: DOMRect):\n      DialogVerticalPosition {\n    // If the dialog's full height doesn't fit at the bottom attempt to\n    // position it at the top. If it doesn't fit at the top either\n    // position it at the bottom and make the overflow scrollable.\n    if (originBounds.bottom + dialogHeight > devtoolsBounds.height &&\n        originBounds.top - dialogHeight > devtoolsBounds.top) {\n      return DialogVerticalPosition.TOP;\n    }\n    return DialogVerticalPosition.BOTTOM;\n  }\n\n  #positionDialog(): void {\n    if (!this.#props.origin) {\n      return;\n    }\n\n    this.#isPendingShowDialog = true;\n    void RenderCoordinator.read(() => {\n      // Fixed elements are positioned relative to the window, regardless if\n      // DevTools is docked. As such, if DevTools is docked we must account for\n      // its offset relative to the window when positioning fixed elements.\n      // DevTools' effective offset can be determined using\n      // this.#devToolsBoundingElement.\n      const devtoolsBounds = this.#devToolsBoundingElement.getBoundingClientRect();\n      const devToolsWidth = devtoolsBounds.width;\n      const devToolsHeight = devtoolsBounds.height;\n      const devToolsLeft = devtoolsBounds.left;\n      const devToolsTop = devtoolsBounds.top;\n      const devToolsRight = devtoolsBounds.right;\n      if (this.#props.origin === MODAL) {\n        void RenderCoordinator.write(() => {\n          this.style.setProperty('--dialog-top', `${devToolsTop}px`);\n          this.style.setProperty('--dialog-left', `${devToolsLeft}px`);\n          this.style.setProperty('--dialog-margin', 'auto');\n          this.style.setProperty('--dialog-margin-left', 'auto');\n          this.style.setProperty('--dialog-margin-bottom', 'auto');\n          this.style.setProperty('--dialog-max-height', `${devToolsHeight - DIALOG_PADDING_FROM_WINDOW}px`);\n          this.style.setProperty('--dialog-max-width', `${devToolsWidth - DIALOG_PADDING_FROM_WINDOW}px`);\n          this.style.setProperty('--dialog-right', `${document.body.clientWidth - devToolsRight}px`);\n        });\n        return;\n      }\n      const anchor = this.#props.origin;\n      const absoluteAnchorBounds = this.#getCoordinatesFromDialogOrigin(anchor);\n      const {top: anchorTop, right: anchorRight, bottom: anchorBottom, left: anchorLeft} = absoluteAnchorBounds;\n      const originCenterX = (anchorLeft + anchorRight) / 2;\n      const hitAreaWidth = anchorRight - anchorLeft + CONNECTOR_HEIGHT;\n      const windowWidth = document.body.clientWidth;\n      const connectorFixedXValue =\n          this.#props.getConnectorCustomXPosition ? this.#props.getConnectorCustomXPosition() : originCenterX;\n      void RenderCoordinator.write(() => {\n        this.style.setProperty('--dialog-top', '0');\n\n        // Start by showing the dialog hidden to allow measuring its width.\n        const dialog = this.#getDialog();\n        dialog.style.visibility = 'hidden';\n        if (this.#isPendingShowDialog && !dialog.hasAttribute('open')) {\n          if (!dialog.isConnected) {\n            return;\n          }\n          dialog.showModal();\n          this.setAttribute('open', '');\n          this.#isPendingShowDialog = false;\n        }\n        const {width: dialogWidth, height: dialogHeight} = dialog.getBoundingClientRect();\n        this.#bestHorizontalAlignment = this.#props.horizontalAlignment === DialogHorizontalAlignment.AUTO ?\n            this.#getBestHorizontalAlignment(absoluteAnchorBounds, devtoolsBounds) :\n            this.#props.horizontalAlignment;\n\n        this.#bestVerticalPositionInternal = this.#props.position === DialogVerticalPosition.AUTO ?\n            this.#getBestVerticalPosition(absoluteAnchorBounds, dialogHeight, devtoolsBounds) :\n            this.#props.position;\n        if (this.#bestHorizontalAlignment === DialogHorizontalAlignment.AUTO ||\n            this.#bestVerticalPositionInternal === DialogVerticalPosition.AUTO) {\n          return;\n        }\n        this.#hitArea.height = anchorBottom - anchorTop + CONNECTOR_HEIGHT;\n        this.#hitArea.width = hitAreaWidth;\n        // If the connector is to be shown, the dialog needs a minimum width such that it covers\n        // the connector's width.\n        this.style.setProperty(\n            '--content-min-width',\n            `${connectorFixedXValue - anchorLeft + CONNECTOR_WIDTH + DIALOG_SIDE_PADDING * 2}px`);\n        this.style.setProperty('--dialog-left', 'auto');\n        this.style.setProperty('--dialog-right', 'auto');\n        this.style.setProperty('--dialog-margin', '0');\n        switch (this.#bestHorizontalAlignment) {\n          case DialogHorizontalAlignment.LEFT: {\n            // Position the dialog such that its left border is in line with that of its anchor.\n            // If this means the dialog's left border is out of DevTools bounds, move it to the right.\n            // Cap its width as needed so that the right border doesn't overflow.\n            const dialogLeft = Math.max(anchorLeft, devToolsLeft);\n            const devtoolsRightBorderToDialogLeft = devToolsRight - dialogLeft;\n            const dialogMaxWidth = devtoolsRightBorderToDialogLeft - DIALOG_PADDING_FROM_WINDOW;\n            this.style.setProperty('--dialog-left', `${dialogLeft}px`);\n            this.#hitArea.x = anchorLeft;\n            this.style.setProperty('--dialog-max-width', `${dialogMaxWidth}px`);\n            break;\n          }\n          case DialogHorizontalAlignment.RIGHT: {\n            // Position the dialog such that its right border is in line with that of its anchor.\n            // If this means the dialog's right border is out of DevTools bounds, move it to the left.\n            // Cap its width as needed so that the left border doesn't overflow.\n            const windowRightBorderToAnchorRight = windowWidth - anchorRight;\n            const windowRightBorderToDevToolsRight = windowWidth - devToolsRight;\n            const windowRightBorderToDialogRight =\n                Math.max(windowRightBorderToAnchorRight, windowRightBorderToDevToolsRight);\n\n            const dialogRight = windowWidth - windowRightBorderToDialogRight;\n            const devtoolsLeftBorderToDialogRight = dialogRight - devToolsLeft;\n            const dialogMaxWidth = devtoolsLeftBorderToDialogRight - DIALOG_PADDING_FROM_WINDOW;\n\n            this.#hitArea.x = windowWidth - windowRightBorderToDialogRight - hitAreaWidth;\n            this.style.setProperty('--dialog-right', `${windowRightBorderToDialogRight}px`);\n            this.style.setProperty('--dialog-max-width', `${dialogMaxWidth}px`);\n            break;\n          }\n          case DialogHorizontalAlignment.CENTER: {\n            // Position the dialog aligned with its anchor's center as long as its borders don't overlap\n            // with those of DevTools. In case one border overlaps, move the dialog to the opposite side.\n            // In case both borders overlap, reduce its width to that of DevTools.\n            const dialogCappedWidth = Math.min(devToolsWidth - DIALOG_PADDING_FROM_WINDOW, dialogWidth);\n\n            let dialogLeft = Math.max(originCenterX - dialogCappedWidth * 0.5, devToolsLeft);\n            dialogLeft = Math.min(dialogLeft, devToolsRight - dialogCappedWidth);\n            this.style.setProperty('--dialog-left', `${dialogLeft}px`);\n            this.#hitArea.x = originCenterX - hitAreaWidth * 0.5;\n            this.style.setProperty('--dialog-max-width', `${devToolsWidth - DIALOG_PADDING_FROM_WINDOW}px`);\n            break;\n          }\n          default:\n            Platform.assertNever(\n                this.#bestHorizontalAlignment, `Unknown alignment type: ${this.#bestHorizontalAlignment}`);\n        }\n\n        switch (this.#bestVerticalPositionInternal) {\n          case DialogVerticalPosition.TOP: {\n            this.style.setProperty('--dialog-top', '0');\n            this.style.setProperty('--dialog-margin', 'auto');\n            this.style.setProperty('--dialog-margin-bottom', `${innerHeight - anchorTop}px`);\n            this.#hitArea.y = anchorTop - CONNECTOR_HEIGHT;\n            this.style.setProperty('--dialog-offset-y', `${DIALOG_ANIMATION_OFFSET}px`);\n            this.style.setProperty(\n                '--dialog-max-height', `${devToolsHeight - (innerHeight - anchorTop) - DIALOG_PADDING_FROM_WINDOW}px`);\n            break;\n          }\n          case DialogVerticalPosition.BOTTOM: {\n            this.style.setProperty('--dialog-top', `${anchorBottom}px`);\n            this.#hitArea.y = anchorTop;\n            this.style.setProperty('--dialog-offset-y', `-${DIALOG_ANIMATION_OFFSET}px`);\n            this.style.setProperty(\n                '--dialog-max-height',\n                `${devToolsHeight - (anchorBottom - devToolsTop) - DIALOG_PADDING_FROM_WINDOW}px`);\n            break;\n          }\n          default:\n            Platform.assertNever(\n                this.#bestVerticalPositionInternal, `Unknown position type: ${this.#bestVerticalPositionInternal}`);\n        }\n\n        dialog.close();\n        dialog.style.visibility = '';\n      });\n    });\n  }\n\n  async #showDialog(): Promise<void> {\n    if (!IS_DIALOG_SUPPORTED) {\n      return;\n    }\n\n    if (this.#isPendingShowDialog || this.hasAttribute('open')) {\n      return;\n    }\n    this.#isPendingShowDialog = true;\n    this.#positionDialog();\n    // Allow the CSS variables to be set before showing.\n    await RenderCoordinator.done();\n    this.#isPendingShowDialog = false;\n    const dialog = this.#getDialog();\n    if (!dialog.isConnected) {\n      return;\n    }\n    // Make the dialog visible now.\n    if (!dialog.hasAttribute('open')) {\n      dialog.showModal();\n    }\n    if (this.#props.dialogShownCallback) {\n      await this.#props.dialogShownCallback();\n    }\n    this.#updateDialogBounds();\n    document.body.addEventListener('keydown', this.#onKeyDownBound);\n  }\n\n  #handleScrollAttempt(event: WheelEvent): void {\n    if (this.#mouseEventWasInDialogContent(event) || !this.#props.closeOnScroll ||\n        !this.#getDialog().hasAttribute('open')) {\n      return;\n    }\n    this.#closeDialog();\n    this.dispatchEvent(new ForcedDialogClose());\n  }\n\n  #onKeyDown(event: KeyboardEvent): void {\n    if (!this.#getDialog().hasAttribute('open') || !this.#props.closeOnESC) {\n      return;\n    }\n\n    if (event.key !== Platform.KeyboardUtilities.ESCAPE_KEY) {\n      return;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    this.#closeDialog();\n    this.dispatchEvent(new ForcedDialogClose());\n  }\n\n  #onCancel(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n    if (!this.#getDialog().hasAttribute('open') || !this.#props.closeOnESC) {\n      return;\n    }\n    this.dispatchEvent(new ForcedDialogClose());\n  }\n\n  #forceDialogCloseInDevToolsMutation(): void {\n    if (!this.#dialog?.hasAttribute('open')) {\n      return;\n    }\n    if (this.#devToolsBoundingElement === document.body) {\n      // Do not close if running in test environment.\n      return;\n    }\n    this.#closeDialog();\n    this.dispatchEvent(new ForcedDialogClose());\n  }\n\n  #closeDialog(): void {\n    if (this.#isPendingCloseDialog || !this.#getDialog().hasAttribute('open')) {\n      return;\n    }\n    this.#isPendingCloseDialog = true;\n    void RenderCoordinator.write(() => {\n      this.#hitArea.width = 0;\n      this.removeAttribute('open');\n      this.#getDialog().close();\n      this.#isPendingCloseDialog = false;\n      document.body.removeEventListener('keydown', this.#onKeyDownBound);\n    });\n  }\n\n  getDialogBounds(): DOMRect {\n    return this.#dialogClientRect;\n  }\n\n  #renderHeaderRow(): Lit.TemplateResult|null {\n    // If the title is empty and close button is false, let's skip the header row.\n    if (!this.#props.dialogTitle && !this.#props.closeButton) {\n      return null;\n    }\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n        <span class=\"dialog-header-text\">${this.#props.dialogTitle}</span>\n        ${this.#props.closeButton ? html`\n          <devtools-button\n            @click=${this.#closeDialog}\n            .data=${{\n              variant: Buttons.Button.Variant.TOOLBAR,\n              iconName: 'cross',\n              title: i18nString(UIStrings.close),\n              size: Buttons.Button.Size.SMALL,\n            } as Buttons.Button.ButtonData}\n            jslog=${VisualLogging.close().track({click: true})}\n          ></devtools-button>\n        ` : Lit.nothing}\n    `;\n    // clang-format on\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('Dialog render was not scheduled');\n    }\n\n    if (!IS_DIALOG_SUPPORTED) {\n      // To make sure that light dom content passed into this component doesn't show up,\n      // we have to explicitly render a slot and hide it with CSS.\n      Lit.render(\n          // clang-format off\n      html`\n        <slot></slot>\n      `,  this.#shadow, {host: this});\n      // clang-format on\n      return;\n    }\n\n    // clang-format off\n    Lit.render(html`\n      <style>${dialogStyles}</style>\n      <dialog @click=${this.#handlePointerEvent} @pointermove=${this.#handlePointerEvent} @cancel=${this.#onCancel} @animationend=${this.#animationEndedEvent}\n              jslog=${VisualLogging.dialog(this.#props.jslogContext).track({resize: true, keydown: 'Escape'}).parent('mapped')}>\n        <div id=\"content\">\n          <div class=\"dialog-header\">${this.#renderHeaderRow()}</div>\n          <div class='dialog-content'>\n            <slot></slot>\n          </div>\n        </div>\n      </dialog>\n    `, this.#shadow, { host: this });\n    VisualLogging.setMappedParent(this.#getDialog(), this.parentElementOrShadowHost() as HTMLElement);\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-dialog', Dialog);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-dialog': Dialog;\n  }\n}\n\nexport class PointerLeftDialogEvent extends Event {\n  static readonly eventName = 'pointerleftdialog';\n\n  constructor() {\n    super(PointerLeftDialogEvent.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class ClickOutsideDialogEvent extends Event {\n  static readonly eventName = 'clickoutsidedialog';\n\n  constructor() {\n    super(ClickOutsideDialogEvent.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class AnimationEndedEvent extends Event {\n  static readonly eventName = 'animationended';\n\n  constructor() {\n    super(AnimationEndedEvent.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class ForcedDialogClose extends Event {\n  static readonly eventName = 'forceddialogclose';\n  constructor() {\n    super(ForcedDialogClose.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport const enum DialogVerticalPosition {\n  TOP = 'top',\n  BOTTOM = 'bottom',\n  AUTO = 'auto',\n}\n\nexport const enum DialogHorizontalAlignment {\n  // Dialog and anchor are aligned on their left borders.\n  LEFT = 'left',\n  // Dialog and anchor are aligned on their right borders.\n  RIGHT = 'right',\n  CENTER = 'center',\n  // This option allows to set the alignment\n  // automatically to LEFT or RIGHT depending\n  // on whether the dialog overflows the\n  // viewport if it's aligned to the left.\n  AUTO = 'auto',\n}\n\ninterface AnchorBounds {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  --override-transparent: rgb(0 0 0 / 0%);\n\n  display: var(--dialog-display);\n}\n\ndialog::backdrop {\n  background: var(--override-transparent);\n}\n\ndialog {\n  background: transparent;\n  border: none;\n  top: var(--dialog-top);\n  padding: var(--dialog-padding);\n  left: var(--dialog-left);\n  right: var(--dialog-right);\n  margin: var(--dialog-margin);\n  margin-left: var(--dialog-margin-left, 0);\n  margin-bottom: var(--dialog-margin-bottom);\n  animation-name: slideIn;\n  animation-duration: 100ms;\n  animation-timing-function: cubic-bezier(0, 0, 0.3, 1);\n  overflow: hidden;\n  filter: drop-shadow(0 4px 8px rgb(0 0 0 / 15%)) drop-shadow(0 1px 3px rgb(0 0 0 / 30%));\n}\n\ndialog:focus,\ndialog:focus-visible {\n  outline: none;\n}\n\n#content {\n  min-width: var(--content-min-width);\n  background: var(--color-background-elevation-dark-only);\n  border-radius: var(--sys-size-5);\n  max-height: var(--dialog-max-height);\n  max-width: var(--dialog-max-width);\n  overflow: auto;\n  outline: none;\n}\n\n.dialog-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--sys-size-5) var(--sys-size-5) var(--sys-size-5) var(--sys-size-8);\n\n  &:empty {\n    padding: 0;\n    height: var(--sys-size-7);\n  }\n\n  .dialog-header-text {\n    font: var(--sys-typescale-body2-medium);\n    padding-top: var(--sys-size-3);\n  }\n\n  devtools-button {\n    margin: 3px;\n  }\n}\n\n.dialog-content {\n  padding: 0 var(--sys-size-8) var(--sys-size-7) var(--sys-size-8);\n  overflow: hidden;\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateY(var(--dialog-offset-y));\n    opacity: 0%;\n  }\n\n  to {\n    opacity: 100%;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./dialog.css')} */`;", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport './ButtonDialog.js';\n\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport {html, nothing, render, type TemplateResult} from '../../../ui/lit/lit.js';\n\nimport type {ButtonDialogData} from './ButtonDialog.js';\nimport shortcutDialogStyles from './shortcutDialog.css.js';\n\nconst UIStrings = {\n\n  /**\n   * @description Title of question mark button for the shortcuts dialog.\n   */\n  showShortcutTitle: 'Show shortcuts',\n  /**\n   * @description Title of the keyboard shortcuts help menu.\n   */\n  dialogTitle: 'Keyboard shortcuts',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('ui/components/dialogs/ShortcutDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-shortcut-dialog': ShortcutDialog;\n  }\n}\n\nexport type ShortcutPart = {\n  key: string,\n}|{joinText: string};\n\nexport type ShortcutRow = ShortcutPart[]|{footnote: string};\n\nexport interface Shortcut {\n  title: string|Platform.UIString.LocalizedString;\n  rows: readonly ShortcutRow[];\n}\nexport interface ShortcutDialogData {\n  shortcuts: Shortcut[];\n  open?: boolean;\n  customTitle?: Platform.UIString.LocalizedString;\n}\n\nexport class ShortcutDialog extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #shortcuts: Shortcut[] = [];\n  #openOnRender = false;\n  #customTitle?: Platform.UIString.LocalizedString;\n  #prependedElement: HTMLElement|null = null;\n\n  get data(): ShortcutDialogData {\n    return {\n      shortcuts: this.#shortcuts,\n      open: this.#openOnRender,\n      customTitle: this.#customTitle,\n    };\n  }\n\n  set data(data: ShortcutDialogData) {\n    this.#shortcuts = data.shortcuts;\n    if (data.open) {\n      this.#openOnRender = data.open;\n    }\n    if (data.customTitle) {\n      this.#customTitle = data.customTitle;\n    }\n\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  prependElement(element: HTMLElement): void {\n    this.#prependedElement = element;\n  }\n\n  #renderRow(row: ShortcutRow): TemplateResult {\n    if (!Array.isArray(row)) {\n      // If it's not an array it's a footnote, which is the easier case, so\n      // render that and return.\n      return html`<span class=\"footnote\">${row.footnote}</span>`;\n    }\n\n    return html`${row.map(part => {\n      if ('key' in part) {\n        return html`<span class=\"keybinds-key\">${part.key}</span>`;\n      }\n      return html`<span class=\"keybinds-join-text\">${part.joinText}</span>`;\n    })}\n    `;\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('Shortcut dialog render was not scheduled');\n    }\n\n    // clang-format off\n    render(\n      html`\n      <style>${shortcutDialogStyles}</style>\n      <devtools-button-dialog .data=${{\n          openOnRender: this.#openOnRender,\n          closeButton: true,\n          dialogTitle: this.#customTitle ?? i18nString(UIStrings.dialogTitle),\n          variant: Buttons.Button.Variant.TOOLBAR,\n          iconName: 'help',\n          iconTitle: i18nString(UIStrings.showShortcutTitle),\n        } as ButtonDialogData}>\n        <ul class=\"keybinds-list\">\n          ${(this.#prependedElement) ? html`${this.#prependedElement}` : nothing}\n          ${this.#shortcuts.map(shortcut =>\n            html`\n              <li class=\"keybinds-list-item\">\n                <div class=\"keybinds-list-title\">${shortcut.title}</div>\n                <div class=\"shortcuts-for-actions\">\n                  ${shortcut.rows.map(row => {\n                    return html`<div class=\"row-container\">${this.#renderRow(row)}</div>\n                  `;\n                  })}\n                </div>\n              </li>`,\n          )}\n        </ul>\n      </devtools-button-dialog>\n      `,\n      this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-shortcut-dialog', ShortcutDialog);\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.keybinds-list {\n  display: flex;\n  flex-direction: column;\n  /* overwrite default\\\\'margin\\\\' and \\\\'padding\\\\' for the <ul> element */\n  margin: 0;\n  padding: 0;\n}\n\n.keybinds-list-item {\n  display: block;\n  min-width: 315px;\n  align-items: baseline;\n  border-bottom: var(--sys-size-1) solid var(--sys-color-divider);\n  padding: var(--sys-size-4) 0;\n  position: relative;\n\n\n  &:last-of-type {\n    border-bottom: unset;\n  }\n\n  .keybinds-list-title {\n    /* Put the list title absolute so it is out the flow, this enables the\n     * shortcuts to sit on the same row as the title */\n    position: absolute;\n    top: var(--sys-size-4);\n    left: 0;\n    /* Put the text vertically central so it aligns with the shortcuts shown  */\n    display: flex;\n    align-items: center;\n    height: var(--sys-size-11); /* IMPORTANT: this has to be the same height as .keybinds-key to maintain text alignment */\n  }\n}\n\n.row-container {\n  display: flex;\n  gap: var(--sys-size-5);\n  align-items: center;\n\n  .keybinds-join-text, .footnote {\n    color: var(--sys-color-on-surface-subtle);\n  }\n\n  .footnote {\n    display: block;\n    height: 15px;\n  }\n}\n\n.shortcuts-for-actions {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: var(--sys-size-3);\n}\n\n.nav-radio-buttons {\n  display: flex;\n  flex-direction: column;\n  border-bottom: var(--sys-size-1) solid var(--sys-color-divider);\n  padding-bottom: var(--sys-size-5);\n\n  & label {\n    display: flex;\n    font: var(--sys-typescale-body3-regular);\n    gap: var(--sys-size-2);\n  }\n\n  input[type=\"radio\"] {\n    margin-left: 0;\n  }\n}\n\n.keybinds-key {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  padding: var(--sys-size-4);\n  min-width: var(--sys-size-11);\n  height: var(--sys-size-11);\n  font: var(--sys-typescale-body5-medium);\n  white-space: nowrap;\n  border-radius: var(--sys-shape-corner-small);\n  background: var(--sys-color-base-container);\n}\n\n/*# sourceURL=${import.meta.resolve('./shortcutDialog.css')} */`;"],
  "mappings": "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",
  "names": ["ComponentHelpers", "html", "dialog", "i18n", "Buttons", "ComponentHelpers", "html", "nothing", "render", "UIStrings", "str_", "i18nString", "html", "render", "nothing"]
}
