{"version":3,"file":"ShortcutDialog.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/dialogs/ShortcutDialog.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,OAAO,MAAM,gCAAgC,CAAC,CAAE,iDAAiD;AAC7G,OAAO,EACL,kBAAkB,GACnB,MAAM,wCAAwC,CAAC;AAChD,OAAO,KAAK,iBAAiB,MAAM,6CAA6C,CAAC;AAEjF,OAAO,KAAK,OAAO,MAAM,cAAc,CAAC;AAExC,kBAAkB,CAAC,gBAAgB,EAAE,GAAG,EAAE;IACxC,KAAK,UAAU,iBAAiB,CAAC,IAAc,EAAE,gBAA8B;QAC7E,MAAM,cAAc,GAAG,IAAI,OAAO,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACnE,IAAI,gBAAgB,EAAE,CAAC;YACrB,cAAc,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAClD,CAAC;QACD,cAAc,CAAC,IAAI,GAAG,EAAC,SAAS,EAAE,CAAC,EAAC,KAAK,EAAE,gBAAgB,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAE,IAAI,EAAC,CAAC;QAC7F,OAAO,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;QAC7C,MAAM,iBAAiB,CAAC,IAAI,EAAE,CAAC;QAE/B,OAAO,cAAc,CAAC;IACxB,CAAC;IAED,SAAS,2BAA2B,CAAC,cAAqD;QACxF,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAC5C,MAAM,MAAM,GAAG,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;QACjF,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;QAClD,CAAC;QACD,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACvC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,MAAM,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACvD,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAEpD,MAAM,cAAc,GAAG,MAAM,iBAAiB,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;QACvE,MAAM,MAAM,GAAG,2BAA2B,CAAC,cAAc,CAAC,CAAC;QAC3D,MAAM,gCAAgC,GAAG,MAAM,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;QAEvF,MAAM,CAAC,UAAU,CAAC,gCAAgC,EAAE,cAAc,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Helpers from '../../../testing/DOMHelpers.js';  // eslint-disable-line rulesdir/es-modules-import\nimport {\n  describeWithLocale,\n} from '../../../testing/EnvironmentHelpers.js';\nimport * as RenderCoordinator from '../render_coordinator/render_coordinator.js';\n\nimport * as Dialogs from './dialogs.js';\n\ndescribeWithLocale('ShortcutDialog', () => {\n  async function getShortcutDialog(open?: boolean, prependedElement?: HTMLElement) {\n    const shortcutDialog = new Dialogs.ShortcutDialog.ShortcutDialog();\n    if (prependedElement) {\n      shortcutDialog.prependElement(prependedElement);\n    }\n    shortcutDialog.data = {shortcuts: [{title: 'Shortcut Title', bindings: [['Ctrl+E']]}], open};\n    Helpers.renderElementIntoDOM(shortcutDialog);\n    await RenderCoordinator.done();\n\n    return shortcutDialog;\n  }\n\n  function getDialogFromShortcutDialog(shortcutDialog: Dialogs.ShortcutDialog.ShortcutDialog) {\n    assert.isNotNull(shortcutDialog.shadowRoot);\n    const dialog = shortcutDialog.shadowRoot.querySelector('devtools-button-dialog');\n    if (!dialog) {\n      assert.fail('devtools-button-dialog not found');\n    }\n    assert.instanceOf(dialog, HTMLElement);\n    return dialog;\n  }\n\n  it('prepends provided element to the dialog content', async () => {\n    const prependedElement = document.createElement('div');\n    prependedElement.classList.add('prepended-element');\n\n    const shortcutDialog = await getShortcutDialog(true, prependedElement);\n    const dialog = getDialogFromShortcutDialog(shortcutDialog);\n    const prependedElementInShortcutDialog = dialog.querySelector('div.prepended-element');\n\n    assert.instanceOf(prependedElementInShortcutDialog, HTMLDivElement);\n  });\n});\n"]}