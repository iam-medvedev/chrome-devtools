{"version":3,"file":"ButtonDialog.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/dialogs/ButtonDialog.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assertScreenshot, renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport * as Buttons from '../buttons/buttons.js';\nimport * as RenderCoordinator from '../render_coordinator/render_coordinator.js';\n\nimport * as Dialogs from './dialogs.js';\n\ndescribeWithEnvironment('ButtonDialog', () => {\n  const containerCss = `\n    width: 800px;\n    height: 400px;\n    margin: 0 auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `;\n\n  async function getButtonDialog(fieldToTest?: Partial<Dialogs.ButtonDialog.ButtonDialogData>) {\n    const defaultMinimumButtonDialogData: Dialogs.ButtonDialog.ButtonDialogData = {\n      openOnRender: false,\n      iconName: 'help',\n      variant: Buttons.Button.Variant.TOOLBAR,\n      dialogTitle: '',\n    };\n    const buttonDialog = new Dialogs.ButtonDialog.ButtonDialog();\n    buttonDialog.data = Object.assign(defaultMinimumButtonDialogData, fieldToTest);\n\n    return buttonDialog;\n  }\n\n  function getButtonFromButtonDialog(buttonDialog: Dialogs.ButtonDialog.ButtonDialog): Buttons.Button.Button {\n    assert.isNotNull(buttonDialog.shadowRoot);\n    const button = buttonDialog.shadowRoot.querySelector('devtools-button');\n    assert.isOk(button, 'devtools-button not found');\n    assert.instanceOf(button, HTMLElement);\n    return button;\n  }\n\n  function getDialogFromButtonDialog(buttonDialog: Dialogs.ButtonDialog.ButtonDialog): Dialogs.Dialog.Dialog {\n    assert.isNotNull(buttonDialog.shadowRoot);\n    const dialog = buttonDialog.shadowRoot.querySelector('devtools-dialog');\n    assert.isOk(dialog, 'devtools-dialog not found');\n    assert.instanceOf(dialog, HTMLElement);\n    return dialog;\n  }\n\n  it('should display dialog on initial render when provided prop', async () => {\n    const buttonDialog = await getButtonDialog({\n      openOnRender: true,\n    });\n    renderElementIntoDOM(buttonDialog);\n    await RenderCoordinator.done();\n    const dialog = getDialogFromButtonDialog(buttonDialog);\n\n    assert.isTrue(dialog.hasAttribute('open'));\n  });\n\n  it('should not display dialog on initial render by default', async () => {\n    const buttonDialog = await getButtonDialog({\n      openOnRender: false,\n    });\n    renderElementIntoDOM(buttonDialog);\n    await RenderCoordinator.done();\n    const dialog = getDialogFromButtonDialog(buttonDialog);\n\n    assert.isFalse(dialog.hasAttribute('open'));\n  });\n\n  it('Opens if button is clicked', async () => {\n    const buttonDialog = await getButtonDialog({});\n    renderElementIntoDOM(buttonDialog);\n    await RenderCoordinator.done();\n    const dialog = getDialogFromButtonDialog(buttonDialog);\n    assert.isFalse(dialog.hasAttribute('open'));\n\n    const button = getButtonFromButtonDialog(buttonDialog);\n    button.click();\n    await RenderCoordinator.done();\n    assert.isTrue(dialog.hasAttribute('open'));\n  });\n\n  function prepareButtonDialogForScreenshot(): {\n    buttonDialog: Dialogs.ButtonDialog.ButtonDialog,\n    container: HTMLDivElement,\n  } {\n    const buttonDialog = new Dialogs.ButtonDialog.ButtonDialog();\n    buttonDialog.data = {\n      openOnRender: false,\n      variant: Buttons.Button.Variant.TOOLBAR,\n      iconName: 'help',\n      position: Dialogs.Dialog.DialogVerticalPosition.AUTO,\n      horizontalAlignment: Dialogs.Dialog.DialogHorizontalAlignment.AUTO,\n      closeOnESC: true,\n      closeOnScroll: false,\n      closeButton: true,\n      dialogTitle: 'Button dialog example',\n    };\n\n    const div = document.createElement('div');\n    div.style.padding = '0 var(--sys-size-8)';\n    div.createChild('div').innerText = 'Hello, World';\n    div.createChild('div').innerText = 'This is a super long content. This is a super long content';\n    buttonDialog.appendChild(div);\n\n    const container = document.createElement('div');\n    container.style.cssText = containerCss;\n    container.appendChild(buttonDialog);\n\n    return {buttonDialog, container};\n  }\n\n  it('renders the dialog button (with the dialog closed)', async () => {\n    const {container} = prepareButtonDialogForScreenshot();\n\n    renderElementIntoDOM(container);\n    await RenderCoordinator.done();\n    await assertScreenshot('dialog/button_dialog_closed.png');\n  });\n\n  it('renders the button dialog', async () => {\n    const {buttonDialog, container} = prepareButtonDialogForScreenshot();\n\n    renderElementIntoDOM(container);\n    await RenderCoordinator.done();\n\n    const dialog = getDialogFromButtonDialog(buttonDialog);\n    const animated = new Promise(resolve => {\n      dialog.addEventListener(Dialogs.Dialog.AnimationEndedEvent.eventName, resolve, {\n        once: true,\n      });\n    });\n\n    const button = getButtonFromButtonDialog(buttonDialog);\n    button.click();\n    await animated;\n    await RenderCoordinator.done();\n\n    await assertScreenshot('dialog/button_dialog_open.png');\n  });\n\n  it('click the close button and close the button dialog', async () => {\n    const {buttonDialog, container} = prepareButtonDialogForScreenshot();\n\n    renderElementIntoDOM(container);\n    await RenderCoordinator.done();\n\n    const dialog = getDialogFromButtonDialog(buttonDialog);\n    const animated = new Promise(resolve => {\n      dialog.addEventListener(Dialogs.Dialog.AnimationEndedEvent.eventName, resolve, {\n        once: true,\n      });\n    });\n\n    const button = getButtonFromButtonDialog(buttonDialog);\n    button.click();\n    await animated;\n    await RenderCoordinator.done();\n\n    const closeButton = dialog.shadowRoot?.querySelector('devtools-button');\n    assert.isOk(closeButton);\n    closeButton.click();\n    await RenderCoordinator.done();\n\n    await assertScreenshot('dialog/button_dialog_closed_after_open.png');\n  });\n});\n"]}