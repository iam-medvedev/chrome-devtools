{"version":3,"file":"ButtonDialog.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/dialogs/ButtonDialog.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Helpers from '../../../testing/DOMHelpers.js';  // eslint-disable-line rulesdir/es-modules-import\nimport * as Buttons from '../buttons/buttons.js';\nimport * as RenderCoordinator from '../render_coordinator/render_coordinator.js';\n\nimport * as Dialogs from './dialogs.js';\n\ndescribe('ButtonDialog', () => {\n  async function getButtonDialog(fieldToTest?: Partial<Dialogs.ButtonDialog.ButtonDialogData>) {\n    const defaultMinimumButtonDialogData: Dialogs.ButtonDialog.ButtonDialogData = {\n      openOnRender: false,\n      iconName: 'help',\n      variant: Buttons.Button.Variant.TOOLBAR,\n      dialogTitle: '',\n    };\n    const buttonDialog = new Dialogs.ButtonDialog.ButtonDialog();\n    buttonDialog.data = Object.assign(defaultMinimumButtonDialogData, fieldToTest);\n\n    Helpers.renderElementIntoDOM(buttonDialog);\n    await RenderCoordinator.done();\n\n    return buttonDialog;\n  }\n\n  function getButtonFromButtonDialog(buttonDialog: Dialogs.ButtonDialog.ButtonDialog): Buttons.Button.Button {\n    assert.isNotNull(buttonDialog.shadowRoot);\n    const button = buttonDialog.shadowRoot.querySelector('devtools-button');\n    if (!button) {\n      assert.fail('devtools-button not found');\n    }\n    assert.instanceOf(button, HTMLElement);\n    return button;\n  }\n\n  function getDialogFromButtonDialog(buttonDialog: Dialogs.ButtonDialog.ButtonDialog): Dialogs.Dialog.Dialog {\n    assert.isNotNull(buttonDialog.shadowRoot);\n    const dialog = buttonDialog.shadowRoot.querySelector('devtools-dialog');\n    if (!dialog) {\n      assert.fail('devtools-dialog not found');\n    }\n    assert.instanceOf(dialog, HTMLElement);\n    return dialog;\n  }\n\n  it('should display dialog on initial render when provided prop', async () => {\n    const buttonDialog = await getButtonDialog({\n      openOnRender: true,\n    });\n    const dialog = getDialogFromButtonDialog(buttonDialog);\n\n    assert.isTrue(dialog.hasAttribute('open'));\n  });\n\n  it('should not display dialog on initial render by default', async () => {\n    const buttonDialog = await getButtonDialog({\n      openOnRender: false,\n    });\n    const dialog = getDialogFromButtonDialog(buttonDialog);\n\n    assert.isFalse(dialog.hasAttribute('open'));\n  });\n\n  it('Opens if button is clicked', async () => {\n    const buttonDialog = await getButtonDialog({});\n    const dialog = getDialogFromButtonDialog(buttonDialog);\n    assert.isFalse(dialog.hasAttribute('open'));\n\n    const button = getButtonFromButtonDialog(buttonDialog);\n    button.click();\n    await RenderCoordinator.done();\n    assert.isTrue(dialog.hasAttribute('open'));\n  });\n});\n"]}