{"version":3,"file":"Card.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/cards/Card.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,OAAO,MAAM,4BAA4B,CAAC;AAEtD,OAAO,UAAU,MAAM,eAAe,CAAC;AAEvC,MAAM,EAAC,IAAI,EAAC,GAAG,OAAO,CAAC;AAYvB,MAAM,OAAO,IAAK,SAAQ,WAAW;IACnC,QAAQ,CAAU;IAClB,QAAQ,GAAkB,EAAE,CAAC;IACpB,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAErD,IAAI,IAAI,CAAC,IAAc;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC7B,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,mBAAmB;QACnB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAA;;4CAEqB,IAAI,CAAC,QAAQ;;;KAGpD,EAAE,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QACD,kBAAkB;IACpB,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../../core/common/common.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\n\nimport cardStyles from './card.css.js';\n\nconst {html} = LitHtml;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-card': Card;\n  }\n}\n\nexport interface CardData {\n  heading?: Common.UIString.LocalizedString;\n  content: HTMLElement[];\n}\nexport class Card extends HTMLElement {\n  #heading?: string;\n  #content: HTMLElement[] = [];\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  set data(data: CardData) {\n    this.#heading = data.heading;\n    this.#content.forEach(content => content.remove());\n    data.content.forEach(content => {\n      content.slot = 'content';\n      this.append(content);\n    });\n    this.#content = data.content;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [cardStyles];\n    this.#render();\n  }\n\n  #render(): void {\n    // clang-format off\n    LitHtml.render(html`\n    <div class=\"card\">\n      <div role=\"heading\" class=\"heading\">${this.#heading}</div>\n      <slot name=\"content\" class='content-container'></slot>\n    </div>\n    `, this.#shadow, {\n    host: this,\n  });\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-card', Card);\n"]}