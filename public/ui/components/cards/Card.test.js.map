{"version":3,"file":"Card.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/cards/Card.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../../core/common/common.js';\nimport {\n  getElementWithinComponent,\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\n\nconst CONTENT_SLOT = 'content';\nconst HEADING_SUFFIX_SLOT = 'heading-suffix';\n\nimport * as Cards from './cards.js';\n\nfunction assertCardContent(card: Cards.Card.Card, slotName: string, expectedContent: string[]) {\n  const slot = getElementWithinComponent(card, `slot[name=\"${slotName}\"]`, HTMLSlotElement);\n  const textContents = Array.from(slot.assignedElements()).map(child => child.textContent);\n  assert.deepEqual(textContents, expectedContent);\n}\n\ndescribe('Card', () => {\n  it('contains slotted elements', async () => {\n    const content1 = document.createElement('span');\n    content1.textContent = 'content 1';\n\n    const content2 = document.createElement('div');\n    content2.textContent = 'content 2';\n\n    const card = new Cards.Card.Card();\n    card.data = {\n      content: [content1, content2],\n    };\n\n    assertCardContent(card, CONTENT_SLOT, ['content 1', 'content 2']);\n  });\n\n  it('order of slotted elements matter', () => {\n    const content1 = document.createElement('span');\n    content1.textContent = 'content 1';\n\n    const content2 = document.createElement('div');\n    content2.textContent = 'content 2';\n\n    const card = new Cards.Card.Card();\n    card.data = {\n      content: [content1, content2],\n    };\n    assertCardContent(card, CONTENT_SLOT, ['content 1', 'content 2']);\n\n    card.data = {\n      content: [content2, content1],\n    };\n    assertCardContent(card, CONTENT_SLOT, ['content 2', 'content 1']);\n  });\n\n  it('shows heading', () => {\n    const content1 = document.createElement('span');\n    const card = new Cards.Card.Card();\n    card.data = {\n      heading: 'This is my heading' as Common.UIString.LocalizedString,\n      content: [content1],\n    };\n    renderElementIntoDOM(card);\n    const heading = card.shadowRoot?.querySelector('[role=\"heading\"]');\n    assert.instanceOf(heading, HTMLElement);\n    assert.strictEqual(heading.textContent, 'This is my heading');\n  });\n\n  it('shows heading icon', async () => {\n    const card = new Cards.Card.Card();\n    card.data = {\n      headingIconName: 'folder',\n      content: [],\n    };\n    renderElementIntoDOM(card);\n    const icon = card.shadowRoot?.querySelector('devtools-icon');\n    assert.isNotNull(icon);\n  });\n\n  it('shows heading-suffix', () => {\n    const suffix = document.createElement('span');\n    suffix.textContent = 'hello';\n    const card = new Cards.Card.Card();\n    card.data = {\n      headingSuffix: suffix,\n      content: [],\n    };\n    renderElementIntoDOM(card);\n    assertCardContent(card, HEADING_SUFFIX_SLOT, ['hello']);\n  });\n});\n"]}