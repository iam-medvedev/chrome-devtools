{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/srgb_overlay/SrgbOverlay.ts", "srgbOverlay.css.js"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Common from '../../../core/common/common.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport {html, render} from '../../../ui/lit/lit.js';\n\nimport srgbOverlayStyles from './srgbOverlay.css.js';\n\ninterface SrgbOverlayProps {\n  // [0 - 1] corresponding to HSV hue\n  hue: number;\n  width: number;\n  height: number;\n}\n\nconst SRGB_LABEL_HEIGHT = 10;\nconst SRGB_LABEL_BOTTOM = 3;\nconst SRGB_TEXT_UPPER_POINT_FROM_BOTTOM = SRGB_LABEL_HEIGHT + SRGB_LABEL_BOTTOM;\n\nconst EPSILON = 0.001;\nfunction isColorInSrgbGamut(hsv: Common.ColorUtils.Color3D): boolean {\n  const rgba = Common.Color.hsva2rgba([...hsv, 1]);\n  const xyzd50 = Common.ColorConverter.ColorConverter.displayP3ToXyzd50(rgba[0], rgba[1], rgba[2]);\n  const srgb = Common.ColorConverter.ColorConverter.xyzd50ToSrgb(xyzd50[0], xyzd50[1], xyzd50[2]);\n  return srgb.every(val => val + EPSILON >= 0 && val - EPSILON <= 1);\n}\n\nexport class SrgbOverlay extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #getLinePoints({hue, width, height}: SrgbOverlayProps): Array<{x: number, y: number}>|null {\n    if (width === 0 || height === 0) {\n      return null;\n    }\n\n    const step = 1 / window.devicePixelRatio;\n    const linePoints = [];\n    let x = 0;\n    for (let y = 0; y < height; y += step) {\n      const value = 1 - (y / height);\n\n      for (; x < width; x += step) {\n        const saturation = x / width;\n        if (!isColorInSrgbGamut([hue, saturation, value])) {\n          linePoints.push({x, y});\n          break;\n        }\n      }\n    }\n\n    if (linePoints.length === 0) {\n      return null;\n    }\n\n    const lastPoint = linePoints[linePoints.length - 1];\n    if (lastPoint.x < width) {\n      linePoints.push({\n        y: lastPoint.y,\n        x: width,\n      });\n    }\n\n    return linePoints;\n  }\n\n  #closestPointAtHeight(points: Array<{x: number, y: number}>, atHeight: number): {x: number, y: number}|null {\n    let min = Infinity;\n    let closestPoint = null;\n    for (const point of points) {\n      if (Math.abs(atHeight - point.y) <= min) {\n        min = Math.abs(atHeight - point.y);\n        closestPoint = point;\n      }\n    }\n\n    return closestPoint;\n  }\n\n  render({hue, width, height}: SrgbOverlayProps): Promise<void> {\n    return RenderCoordinator.write('Srgb Overlay render', () => {\n      const points = this.#getLinePoints({hue, width, height});\n      if (!points || points.length === 0) {\n        return;\n      }\n\n      const closestPoint = this.#closestPointAtHeight(points, height - SRGB_TEXT_UPPER_POINT_FROM_BOTTOM);\n      if (!closestPoint) {\n        return;\n      }\n\n      render(\n          html`\n          <style>${srgbOverlayStyles}</style>\n          <span class=\"label\" style=\"right: ${width - closestPoint.x}px\">sRGB</span>\n          <svg>\n            <polyline points=${\n              points.map(point => `${point.x.toFixed(2)},${point.y.toFixed(2)}`).join(' ')} class=\"gamut-line\" />\n          </svg>\n        `,\n          this.#shadow, {host: this});\n    });\n  }\n}\n\ncustomElements.define('devtools-spectrum-srgb-overlay', SrgbOverlay);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-spectrum-srgb-overlay': SrgbOverlay;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.gamut-line {\n  /* We want to show 50% white color in all themes since this is drawn over a color rectangle */\n  stroke: color-mix(in srgb, var(--ref-palette-neutral100) 50%, transparent);\n  fill: none;\n}\n\n.label {\n  position: absolute;\n  bottom: 3px;\n  margin-right: 5px;\n  /* We want to show 50% white color in all themes since this is drawn over a color rectangle */\n  color: color-mix(in srgb, var(--ref-palette-neutral100) 50%, transparent);\n}\n\n/*# sourceURL=${import.meta.resolve('./srgbOverlay.css')} */`;"],
  "mappings": ";;;;;;;AAAA;;;;AAKA,YAAY,YAAY;AACxB,YAAY,uBAAuB;AACnC,SAAQ,MAAM,cAAa;;;ACF3B,IAAO,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA4BC,YAAY,QAAQ,mBAAmB,CAAC;;;ADfxD,IAAM,oBAAoB;AAC1B,IAAM,oBAAoB;AAC1B,IAAM,oCAAoC,oBAAoB;AAE9D,IAAM,UAAU;AAChB,SAAS,mBAAmB,KAA8B;AACxD,QAAM,OAAc,aAAM,UAAU,CAAC,GAAG,KAAK,CAAC,CAAC;AAC/C,QAAM,SAAgB,sBAAe,eAAe,kBAAkB,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAC/F,QAAM,OAAc,sBAAe,eAAe,aAAa,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC;AAC9F,SAAO,KAAK,MAAM,SAAO,MAAM,WAAW,KAAK,MAAM,WAAW,CAAC;AACnE;AAEM,IAAO,cAAP,cAA2B,YAAW;EACjC,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;EAEnD,eAAe,EAAC,KAAK,OAAO,OAAM,GAAmB;AACnD,QAAI,UAAU,KAAK,WAAW,GAAG;AAC/B,aAAO;IACT;AAEA,UAAM,OAAO,IAAI,OAAO;AACxB,UAAM,aAAa,CAAA;AACnB,QAAI,IAAI;AACR,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK,MAAM;AACrC,YAAM,QAAQ,IAAK,IAAI;AAEvB,aAAO,IAAI,OAAO,KAAK,MAAM;AAC3B,cAAM,aAAa,IAAI;AACvB,YAAI,CAAC,mBAAmB,CAAC,KAAK,YAAY,KAAK,CAAC,GAAG;AACjD,qBAAW,KAAK,EAAC,GAAG,EAAC,CAAC;AACtB;QACF;MACF;IACF;AAEA,QAAI,WAAW,WAAW,GAAG;AAC3B,aAAO;IACT;AAEA,UAAM,YAAY,WAAW,WAAW,SAAS,CAAC;AAClD,QAAI,UAAU,IAAI,OAAO;AACvB,iBAAW,KAAK;QACd,GAAG,UAAU;QACb,GAAG;OACJ;IACH;AAEA,WAAO;EACT;EAEA,sBAAsB,QAAuC,UAAgB;AAC3E,QAAI,MAAM;AACV,QAAI,eAAe;AACnB,eAAW,SAAS,QAAQ;AAC1B,UAAI,KAAK,IAAI,WAAW,MAAM,CAAC,KAAK,KAAK;AACvC,cAAM,KAAK,IAAI,WAAW,MAAM,CAAC;AACjC,uBAAe;MACjB;IACF;AAEA,WAAO;EACT;EAEA,OAAO,EAAC,KAAK,OAAO,OAAM,GAAmB;AAC3C,WAAyB,wBAAM,uBAAuB,MAAK;AACzD,YAAM,SAAS,KAAK,eAAe,EAAC,KAAK,OAAO,OAAM,CAAC;AACvD,UAAI,CAAC,UAAU,OAAO,WAAW,GAAG;AAClC;MACF;AAEA,YAAM,eAAe,KAAK,sBAAsB,QAAQ,SAAS,iCAAiC;AAClG,UAAI,CAAC,cAAc;AACjB;MACF;AAEA,aACI;mBACS,uBAAiB;8CACU,QAAQ,aAAa,CAAC;;+BAGtD,OAAO,IAAI,WAAS,GAAG,MAAM,EAAE,QAAQ,CAAC,CAAC,IAAI,MAAM,EAAE,QAAQ,CAAC,CAAC,EAAE,EAAE,KAAK,GAAG,CAAC;;WAGhF,KAAK,SAAS,EAAC,MAAM,KAAI,CAAC;IAChC,CAAC;EACH;;AAGF,eAAe,OAAO,kCAAkC,WAAW;",
  "names": []
}
