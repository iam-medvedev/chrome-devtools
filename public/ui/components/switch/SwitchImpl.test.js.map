{"version":3,"file":"SwitchImpl.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/switch/SwitchImpl.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,oBAAoB,EAAC,MAAM,gCAAgC,CAAC;AAEpE,OAAO,KAAK,MAAM,MAAM,aAAa,CAAC;AAEtC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACtB,EAAE,CAAC,4FAA4F,EAAE,GAAG,EAAE;QACpG,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QAC7C,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;QAC1B,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAEhC,MAAM,QAAQ,GAAG,SAAS,CAAC,UAAU,EAAE,aAAa,CAAC,OAAO,CAAE,CAAC;QAE/D,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACjC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;QACzB,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uEAAuE,EAAE,KAAK,IAAI,EAAE;QACrF,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QAC7C,MAAM,YAAY,GAAG,IAAI,OAAO,CAAkC,OAAO,CAAC,EAAE;YAC1E,SAAS,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE;gBACzE,OAAO,CAAC,EAAE,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAEhC,MAAM,QAAQ,GAAG,SAAS,CAAC,UAAU,EAAE,aAAa,CAAC,OAAO,CAAE,CAAC;QAC/D,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,QAAQ,CAAC,KAAK,EAAE,CAAC;QAEjB,MAAM,KAAK,GAAG,MAAM,YAAY,CAAC;QACjC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QAC7C,IAAI,eAAe,GAAG,CAAC,CAAC;QACxB,MAAM,YAAY,GAAG,IAAI,OAAO,CAAa,OAAO,CAAC,EAAE;YACrD,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;gBACvC,eAAe,EAAE,CAAC;gBAClB,OAAO,CAAC,EAAE,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,SAAS,CAAC,UAAU,EAAE,aAAa,CAAC,aAAa,CAAoB,CAAC;QACrF,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,YAAY,CAAC;QACnB,MAAM,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\n\nimport * as Switch from './switch.js';\n\ndescribe('Switch', () => {\n  it('should checked property reflect the current value for whether the Switch is checked or not', () => {\n    const component = new Switch.Switch.Switch();\n    component.checked = false;\n    renderElementIntoDOM(component);\n\n    const checkbox = component.shadowRoot?.querySelector('input')!;\n\n    assert.isFalse(checkbox.checked);\n    component.checked = true;\n    assert.isTrue(checkbox.checked);\n  });\n\n  it('should emit SwitchChangeEvent whenever the checkbox inside is changed', async () => {\n    const component = new Switch.Switch.Switch();\n    const eventPromise = new Promise<Switch.Switch.SwitchChangeEvent>(resolve => {\n      component.addEventListener(Switch.Switch.SwitchChangeEvent.eventName, ev => {\n        resolve(ev);\n      });\n    });\n    renderElementIntoDOM(component);\n\n    const checkbox = component.shadowRoot?.querySelector('input')!;\n    checkbox.checked = false;\n    checkbox.click();\n\n    const event = await eventPromise;\n    assert.isTrue(event.checked);\n  });\n\n  it('emits only 1 click event when clicked', async () => {\n    const component = new Switch.Switch.Switch();\n    let clickEventCount = 0;\n    const eventPromise = new Promise<MouseEvent>(resolve => {\n      component.addEventListener('click', ev => {\n        clickEventCount++;\n        resolve(ev);\n      });\n    });\n    renderElementIntoDOM(component);\n    const slider = component.shadowRoot?.querySelector('span.slider') as HTMLSpanElement;\n    slider.click();\n    await eventPromise;\n    assert.strictEqual(clickEventCount, 1);\n  });\n});\n"]}