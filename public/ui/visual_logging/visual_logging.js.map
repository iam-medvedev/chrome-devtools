{"version":3,"file":"visual_logging.js","sourceRoot":"","sources":["../../../../../../front_end/ui/visual_logging/visual_logging.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as LoggableModule from './Loggable.js';\nimport * as LoggingConfig from './LoggingConfig.js';\nimport * as LoggingState from './LoggingState.js';\n\nexport type Loggable = LoggableModule.Loggable;\nexport {startLogging, stopLogging} from './LoggingDriver.js';\nexport {logClick, logImpressions} from './LoggingEvents.js';\nexport {registerContextProvider, registerParentProvider} from './LoggingState.js';\n\nexport function registerLoggable(loggable: Loggable, config: string, parent: Loggable|null): void {\n  LoggingState.getOrCreateLoggingState(loggable, LoggingConfig.parseJsLog(config), parent || undefined);\n}\n\nexport const accessibilityComputedProperties =\n    LoggingConfig.makeConfigStringBuilder.bind(null, 'AccessibilityComputedProperties');\nexport const accessibilityPane = LoggingConfig.makeConfigStringBuilder.bind(null, 'AccessibilityPane');\nexport const accessibilitySourceOrder = LoggingConfig.makeConfigStringBuilder.bind(null, 'AccessibilitySourceOrder');\n\n/**\n * Action visual elements are either buttons or menu items that trigger a given action. Use the\n * context to differentiate between different actions, and make sure that buttons and menu items\n * that have the same effect use the same context.\n *\n * Ideally the `action`s context should match the ID of an `UI.ActionRegistration.Action`.\n */\nexport const action = LoggingConfig.makeConfigStringBuilder.bind(null, 'Action');\n\nexport const addElementClassPrompt = LoggingConfig.makeConfigStringBuilder.bind(null, 'AddElementClassPrompt');\nexport const ariaAttributes = LoggingConfig.makeConfigStringBuilder.bind(null, 'AriaAttributes');\nexport const bezierCurveEditor = LoggingConfig.makeConfigStringBuilder.bind(null, 'BezierCurveEditor');\nexport const bezierEditor = LoggingConfig.makeConfigStringBuilder.bind(null, 'BezierEditor');\nexport const bezierPresetCategory = LoggingConfig.makeConfigStringBuilder.bind(null, 'BezierPresetCategory');\nexport const colorCanvas = LoggingConfig.makeConfigStringBuilder.bind(null, 'ColorCanvas');\nexport const colorEyeDropper = LoggingConfig.makeConfigStringBuilder.bind(null, 'ColorEyeDropper');\nexport const colorPicker = LoggingConfig.makeConfigStringBuilder.bind(null, 'ColorPicker');\nexport const copyColor = LoggingConfig.makeConfigStringBuilder.bind(null, 'CopyColor');\nexport const cssAngleEditor = LoggingConfig.makeConfigStringBuilder.bind(null, 'CssAngleEditor');\nexport const cssColorMix = LoggingConfig.makeConfigStringBuilder.bind(null, 'CssColorMix');\nexport const cssFlexboxEditor = LoggingConfig.makeConfigStringBuilder.bind(null, 'CssFlexboxEditor');\nexport const cssGridEditor = LoggingConfig.makeConfigStringBuilder.bind(null, 'CssGridEditor');\nexport const cssLayersPane = LoggingConfig.makeConfigStringBuilder.bind(null, 'CssLayersPane');\nexport const cssShadowEditor = LoggingConfig.makeConfigStringBuilder.bind(null, 'CssShadowEditor');\nexport const domBreakpoint = LoggingConfig.makeConfigStringBuilder.bind(null, 'DOMBreakpoint');\nexport const dropDown = LoggingConfig.makeConfigStringBuilder.bind(null, 'DropDown');\nexport const elementsBreadcrumbs = LoggingConfig.makeConfigStringBuilder.bind(null, 'ElementsBreadcrumbs');\nexport const elementClassesPane = LoggingConfig.makeConfigStringBuilder.bind(null, 'ElementClassesPane');\nexport const elementPropertiesPane = LoggingConfig.makeConfigStringBuilder.bind(null, 'ElementPropertiesPane');\nexport const elementStatesPane = LoggingConfig.makeConfigStringBuilder.bind(null, 'ElementStatesPan');\nexport const elementsTreeOutline = LoggingConfig.makeConfigStringBuilder.bind(null, 'ElementsTreeOutline');\nexport const eventListenersPane = LoggingConfig.makeConfigStringBuilder.bind(null, 'EventListenersPane');\nexport const filterDropdown = LoggingConfig.makeConfigStringBuilder.bind(null, 'FilterDropdown');\nexport const flexboxOverlays = LoggingConfig.makeConfigStringBuilder.bind(null, 'FlexboxOverlays');\nexport const fullAccessibilityTree = LoggingConfig.makeConfigStringBuilder.bind(null, 'FullAccessibilityTree');\nexport const gridOverlays = LoggingConfig.makeConfigStringBuilder.bind(null, 'GridOverlays');\nexport const gridSettings = LoggingConfig.makeConfigStringBuilder.bind(null, 'GridSettings');\nexport const item = LoggingConfig.makeConfigStringBuilder.bind(null, 'Item');\nexport const jumpToElement = LoggingConfig.makeConfigStringBuilder.bind(null, 'JumpToElement');\nexport const jumpToSource = LoggingConfig.makeConfigStringBuilder.bind(null, 'JumpToSource');\nexport const key = LoggingConfig.makeConfigStringBuilder.bind(null, 'Key');\n\n/**\n * Visual element to denote a hyper link. Use the context to differentiate between various types\n * of hyperlinks.\n */\nexport const link = LoggingConfig.makeConfigStringBuilder.bind(null, 'Link');\n\nexport const menu = LoggingConfig.makeConfigStringBuilder.bind(null, 'Menu');\nexport const metricsBox = LoggingConfig.makeConfigStringBuilder.bind(null, 'MetricsBox');\nexport const next = LoggingConfig.makeConfigStringBuilder.bind(null, 'Next');\nexport const paletteColorShades = LoggingConfig.makeConfigStringBuilder.bind(null, 'PaletteColorShades');\nexport const pane = LoggingConfig.makeConfigStringBuilder.bind(null, 'Pane');\n\n/**\n * Visual element to denote a top level panel, no matter if that panel is shown in the main\n * view or in the drawer. Use the context to differentiate between different panels, but ensure\n * that the context used here matches the context used for its corresponding {@link panelTabHeader}.\n */\nexport const panel = LoggingConfig.makeConfigStringBuilder.bind(null, 'Panel');\n\nexport const panelTabHeader = LoggingConfig.makeConfigStringBuilder.bind(null, 'PanelTabHeader');\nexport const preview = LoggingConfig.makeConfigStringBuilder.bind(null, 'Preview');\nexport const previous = LoggingConfig.makeConfigStringBuilder.bind(null, 'Previous');\nexport const showAllStyleProperties = LoggingConfig.makeConfigStringBuilder.bind(null, 'ShowAllStyleProperties');\nexport const showStyleEditor = LoggingConfig.makeConfigStringBuilder.bind(null, 'ShowStyleEditor');\nexport const slider = LoggingConfig.makeConfigStringBuilder.bind(null, 'Slider');\nexport const stylesComputedPane = LoggingConfig.makeConfigStringBuilder.bind(null, 'StylesComputedPane');\nexport const section = LoggingConfig.makeConfigStringBuilder.bind(null, 'Section');\nexport const stylePropertiesSectionSeparator =\n    LoggingConfig.makeConfigStringBuilder.bind(null, 'StylePropertiesSectionSeparator');\nexport const stylesMetricsPane = LoggingConfig.makeConfigStringBuilder.bind(null, 'StylesMetricsPane');\nexport const stylesPane = LoggingConfig.makeConfigStringBuilder.bind(null, 'StylesPane');\nexport const stylesSelector = LoggingConfig.makeConfigStringBuilder.bind(null, 'StylesSelector');\nexport const tableCell = LoggingConfig.makeConfigStringBuilder.bind(null, 'TableCell');\nexport const tableHeader = LoggingConfig.makeConfigStringBuilder.bind(null, 'TableHeader');\n\n/**\n * Visual element to denote text input fields. Use the context to differentiate between various\n * inputs fields.\n *\n * For text fields that control `Common.Settings.Setting`s, make sure to use the name of the\n * setting as the visual elements' context.\n */\nexport const textField = LoggingConfig.makeConfigStringBuilder.bind(null, 'TextField');\n\n/**\n * Togglable visual elements are checkboxes, radio buttons, or (binary) combo boxes. Use the\n * context to differentiate between different toggles.\n *\n * For toggles that control `Common.Settings.Setting`s, make sure to use the name of the\n * setting as the toggle context.\n */\nexport const toggle = LoggingConfig.makeConfigStringBuilder.bind(null, 'Toggle');\n\nexport const toggleSubpane = LoggingConfig.makeConfigStringBuilder.bind(null, 'ToggleSubpane');\nexport const treeItem = LoggingConfig.makeConfigStringBuilder.bind(null, 'TreeItem');\nexport const treeItemExpand = LoggingConfig.makeConfigStringBuilder.bind(null, 'TreeItemExpand');\nexport const value = LoggingConfig.makeConfigStringBuilder.bind(null, 'Value');\n"]}