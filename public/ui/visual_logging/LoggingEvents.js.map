{"version":3,"file":"LoggingEvents.js","sourceRoot":"","sources":["../../../../../../front_end/ui/visual_logging/LoggingEvents.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\n\nimport {type Loggable} from './Loggable.js';\nimport {getLoggingState} from './LoggingState.js';\n\nexport async function logImpressions(loggables: Loggable[]): Promise<void> {\n  const impressions = await Promise.all(loggables.map(async loggable => {\n    const loggingState = getLoggingState(loggable);\n    assertNotNullOrUndefined(loggingState);\n    const impression:\n        Host.InspectorFrontendHostAPI.VisualElementImpression = {id: loggingState.veid, type: loggingState.config.ve};\n    if (loggingState.parent) {\n      impression.parent = loggingState.parent.veid;\n    }\n    const context = await loggingState.context(loggable);\n    if (context) {\n      impression.context = context;\n    }\n    if (loggingState.size) {\n      impression.width = loggingState.size.width;\n      impression.height = loggingState.size.height;\n    }\n    return impression;\n  }));\n  if (impressions.length) {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.recordImpression({impressions});\n  }\n}\n\nexport const logResize = (resizeLogThrottler: Common.Throttler.Throttler) => async (loggable: Loggable) => {\n  const loggingState = getLoggingState(loggable);\n  if (!loggingState || !loggingState.size) {\n    return;\n  }\n  const resizeEvent: Host.InspectorFrontendHostAPI\n      .ResizeEvent = {veid: loggingState.veid, width: loggingState.size.width, height: loggingState.size.height};\n  await resizeLogThrottler.schedule(async () => {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.recordResize(resizeEvent);\n  });\n};\n\nexport async function logClick(loggable: Loggable, event: Event, options?: {doubleClick?: boolean}): Promise<void> {\n  if (!(event instanceof MouseEvent)) {\n    return;\n  }\n  const loggingState = getLoggingState(loggable);\n  if (!loggingState) {\n    return;\n  }\n  const clickEvent: Host.InspectorFrontendHostAPI\n      .ClickEvent = {veid: loggingState.veid, mouseButton: event.button, doubleClick: Boolean(options?.doubleClick)};\n  const context = await loggingState.context(event);\n  if (context) {\n    clickEvent.context = context;\n  }\n  Host.InspectorFrontendHost.InspectorFrontendHostInstance.recordClick(clickEvent);\n}\n\nexport const logHover = (hoverLogThrottler: Common.Throttler.Throttler) => async (event: Event) => {\n  const loggingState = getLoggingState(event.currentTarget as Element);\n  assertNotNullOrUndefined(loggingState);\n  const hoverEvent: Host.InspectorFrontendHostAPI.HoverEvent = {veid: loggingState.veid};\n  const contextPromise = loggingState.context(event);\n  await hoverLogThrottler.schedule(async () => {\n    const context = await contextPromise;\n    if (context) {\n      hoverEvent.context = context;\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.recordHover(hoverEvent);\n  });\n};\n\nexport const logDrag = (dragLogThrottler: Common.Throttler.Throttler) => async (event: Event) => {\n  const loggingState = getLoggingState(event.currentTarget as Element);\n  assertNotNullOrUndefined(loggingState);\n  const dragEvent: Host.InspectorFrontendHostAPI.DragEvent = {veid: loggingState.veid};\n  const contextPromise = loggingState.context(event);\n  await dragLogThrottler.schedule(async () => {\n    const context = await contextPromise;\n    if (context) {\n      dragEvent.context = context;\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.recordDrag(dragEvent);\n  });\n};\n\nexport async function logChange(event: Event): Promise<void> {\n  const loggingState = getLoggingState(event.currentTarget as Element);\n  assertNotNullOrUndefined(loggingState);\n  const changeEvent: Host.InspectorFrontendHostAPI.ChangeEvent = {veid: loggingState.veid};\n  const context = await loggingState.context(event);\n  if (context) {\n    changeEvent.context = context;\n  }\n  Host.InspectorFrontendHost.InspectorFrontendHostInstance.recordChange(changeEvent);\n}\n\nexport const logKeyDown = (codes: string[], keyboardLogThrottler: Common.Throttler.Throttler) =>\n    async (event: Event) => {\n  if (!(event instanceof KeyboardEvent)) {\n    return;\n  }\n  if (codes.length && !codes.includes(event.code)) {\n    return;\n  }\n  const loggingState = getLoggingState(event.currentTarget as Element);\n  assertNotNullOrUndefined(loggingState);\n  const keyDownEvent: Host.InspectorFrontendHostAPI.KeyDownEvent = {veid: loggingState.veid};\n  const context = await loggingState.context(event);\n  if (context) {\n    keyDownEvent.context = context;\n  }\n  await keyboardLogThrottler.schedule(async () => {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.recordKeyDown(keyDownEvent);\n  });\n};\n"]}