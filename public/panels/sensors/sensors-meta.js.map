{
  "version": 3,
  "sources": ["sensors-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Sensors from './sensors.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of the Sensors tool. The sensors tool contains GPS, orientation sensors, touch\n   * settings, etc.\n   */\n  sensors: 'Sensors',\n  /**\n   * @description A tag of Sensors tool that can be searched in the command menu\n   */\n  geolocation: 'geolocation',\n  /**\n   * @description A tag of Sensors tool that can be searched in the command menu\n   */\n  timezones: 'timezones',\n  /**\n   * @description Text in Sensors View of the Device Toolbar\n   */\n  locale: 'locale',\n  /**\n   * @description A tag of Sensors tool that can be searched in the command menu\n   */\n  locales: 'locales',\n  /**\n   * @description A tag of Sensors tool that can be searched in the command menu\n   */\n  accelerometer: 'accelerometer',\n  /**\n   * @description A tag of Sensors tool that can be searched in the command menu. Refers to the\n   * orientation of a device (e.g. phone) in 3D space, e.g. tilted right/left.\n   */\n  deviceOrientation: 'device orientation',\n  /**\n   * @description Title of Locations settings. Refers to geographic locations for GPS.\n   */\n  locations: 'Locations',\n  /**\n   * @description Text for the touch type to simulate on a device. Refers to touch input as opposed to\n   * mouse input.\n   */\n  touch: 'Touch',\n  /**\n   * @description Text in Sensors View of the Device Toolbar. Refers to device-based touch input,\n   *which means the input type will be 'touch' only if the device normally has touch input e.g. a\n   *phone or tablet.\n   */\n  devicebased: 'Device-based',\n  /**\n   * @description Text in Sensors View of the Device Toolbar. Means that touch input will be forced\n   *on, even if the device type e.g. desktop computer does not normally have touch input.\n   */\n  forceEnabled: 'Force enabled',\n  /**\n   * @description Title of a section option in Sensors tab for idle emulation. This is a command, to\n   *emulate the state of the 'Idle Detector'.\n   */\n  emulateIdleDetectorState: 'Emulate Idle Detector state',\n  /**\n   * @description Title of an option in Sensors tab idle emulation drop-down. Turns off emulation of idle state.\n   */\n  noIdleEmulation: 'No idle emulation',\n  /**\n   * @description Title of an option in Sensors tab idle emulation drop-down.\n   */\n  userActiveScreenUnlocked: 'User active, screen unlocked',\n  /**\n   * @description Title of an option in Sensors tab idle emulation drop-down.\n   */\n  userActiveScreenLocked: 'User active, screen locked',\n  /**\n   * @description Title of an option in Sensors tab idle emulation drop-down.\n   */\n  userIdleScreenUnlocked: 'User idle, screen unlocked',\n  /**\n   * @description Title of an option in Sensors tab idle emulation drop-down.\n   */\n  userIdleScreenLocked: 'User idle, screen locked',\n  /**\n   * @description Command that opens the Sensors view/tool. The sensors tool contains GPS,\n   * orientation sensors, touch settings, etc.\n   */\n  showSensors: 'Show Sensors',\n  /**\n   * @description Command that shows geographic locations.\n   */\n  showLocations: 'Show Locations',\n  /**\n   * @description Text for the CPU Pressure type to simulate on a device.\n   */\n  cpuPressure: 'CPU Pressure',\n  /**\n   * @description Title of an option in Sensors tab cpu pressure emulation drop-down. Turns off emulation of cpu pressure state.\n   */\n  noPressureEmulation: 'No override',\n  /**\n   * @description An option that appears in a drop-down that represents the nominal state.\n   */\n  nominal: 'Nominal',\n  /**\n   * @description An option that appears in a drop-down that represents the fair state.\n   */\n  fair: 'Fair',\n  /**\n   * @description An option that appears in a drop-down that represents the serious state.\n   */\n  serious: 'Serious',\n  /**\n   * @description An option that appears in a drop-down that represents the critical state.\n   */\n  critical: 'Critical',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/sensors/sensors-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedSensorsModule: (typeof Sensors|undefined);\n\nasync function loadEmulationModule(): Promise<typeof Sensors> {\n  if (!loadedSensorsModule) {\n    loadedSensorsModule = await import('./sensors.js');\n  }\n  return loadedSensorsModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  commandPrompt: i18nLazyString(UIStrings.showSensors),\n  title: i18nLazyString(UIStrings.sensors),\n  id: 'sensors',\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 100,\n  async loadView() {\n    const Sensors = await loadEmulationModule();\n    return new Sensors.SensorsView.SensorsView();\n  },\n  tags: [\n    i18nLazyString(UIStrings.geolocation),\n    i18nLazyString(UIStrings.timezones),\n    i18nLazyString(UIStrings.locale),\n    i18nLazyString(UIStrings.locales),\n    i18nLazyString(UIStrings.accelerometer),\n    i18nLazyString(UIStrings.deviceOrientation),\n  ],\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'emulation-locations',\n  commandPrompt: i18nLazyString(UIStrings.showLocations),\n  title: i18nLazyString(UIStrings.locations),\n  order: 40,\n  async loadView() {\n    const Sensors = await loadEmulationModule();\n    return new Sensors.LocationsSettingsTab.LocationsSettingsTab();\n  },\n  settings: [\n    'emulation.locations',\n  ],\n  iconName: 'location-on',\n});\n\nCommon.Settings.registerSettingExtension({\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  settingName: 'emulation.locations',\n  settingType: Common.Settings.SettingType.ARRAY,\n  // TODO(crbug.com/1136655): http://crrev.com/c/2666426 regressed localization of city titles.\n  // These titles should be localized since they are displayed to users.\n  defaultValue: [\n    {\n      title: 'Berlin',\n      lat: 52.520007,\n      long: 13.404954,\n      timezoneId: 'Europe/Berlin',\n      locale: 'de-DE',\n      accuracy: 150,\n    },\n    {\n      title: 'London',\n      lat: 51.507351,\n      long: -0.127758,\n      timezoneId: 'Europe/London',\n      locale: 'en-GB',\n      accuracy: 150,\n    },\n    {\n      title: 'Moscow',\n      lat: 55.755826,\n      long: 37.6173,\n      timezoneId: 'Europe/Moscow',\n      locale: 'ru-RU',\n      accuracy: 150,\n    },\n    {\n      title: 'Mountain View',\n      lat: 37.386052,\n      long: -122.083851,\n      timezoneId: 'America/Los_Angeles',\n      locale: 'en-US',\n      accuracy: 150,\n    },\n    {\n      title: 'Mumbai',\n      lat: 19.075984,\n      long: 72.877656,\n      timezoneId: 'Asia/Kolkata',\n      locale: 'mr-IN',\n      accuracy: 150,\n    },\n    {\n      title: 'San Francisco',\n      lat: 37.774929,\n      long: -122.419416,\n      timezoneId: 'America/Los_Angeles',\n      locale: 'en-US',\n      accuracy: 150,\n    },\n    {\n      title: 'Shanghai',\n      lat: 31.230416,\n      long: 121.473701,\n      timezoneId: 'Asia/Shanghai',\n      locale: 'zh-Hans-CN',\n      accuracy: 150,\n    },\n    {\n      title: 'SÃ£o Paulo',\n      lat: -23.55052,\n      long: -46.633309,\n      timezoneId: 'America/Sao_Paulo',\n      locale: 'pt-BR',\n      accuracy: 150,\n    },\n    {\n      title: 'Tokyo',\n      lat: 35.689487,\n      long: 139.691706,\n      timezoneId: 'Asia/Tokyo',\n      locale: 'ja-JP',\n      accuracy: 150,\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  title: i18nLazyString(UIStrings.cpuPressure),\n  reloadRequired: true,\n  settingName: 'emulation.cpu-pressure',\n  settingType: Common.Settings.SettingType.ENUM,\n  defaultValue: 'none',\n  options: [\n    {\n      value: 'none',\n      title: i18nLazyString(UIStrings.noPressureEmulation),\n      text: i18nLazyString(UIStrings.noPressureEmulation),\n    },\n    {\n      value: 'nominal',\n      title: i18nLazyString(UIStrings.nominal),\n      text: i18nLazyString(UIStrings.nominal),\n    },\n    {\n      value: 'fair',\n      title: i18nLazyString(UIStrings.fair),\n      text: i18nLazyString(UIStrings.fair),\n    },\n    {\n      value: 'serious',\n      title: i18nLazyString(UIStrings.serious),\n      text: i18nLazyString(UIStrings.serious),\n    },\n    {\n      value: 'critical',\n      title: i18nLazyString(UIStrings.critical),\n      text: i18nLazyString(UIStrings.critical),\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  title: i18nLazyString(UIStrings.touch),\n  reloadRequired: true,\n  settingName: 'emulation.touch',\n  settingType: Common.Settings.SettingType.ENUM,\n  defaultValue: 'none',\n  options: [\n    {\n      value: 'none',\n      title: i18nLazyString(UIStrings.devicebased),\n      text: i18nLazyString(UIStrings.devicebased),\n    },\n    {\n      value: 'force',\n      title: i18nLazyString(UIStrings.forceEnabled),\n      text: i18nLazyString(UIStrings.forceEnabled),\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  title: i18nLazyString(UIStrings.emulateIdleDetectorState),\n  settingName: 'emulation.idle-detection',\n  settingType: Common.Settings.SettingType.ENUM,\n  defaultValue: 'none',\n  options: [\n    {\n      value: 'none',\n      title: i18nLazyString(UIStrings.noIdleEmulation),\n      text: i18nLazyString(UIStrings.noIdleEmulation),\n    },\n    {\n      value: '{\\\"isUserActive\\\":true,\\\"isScreenUnlocked\\\":true}',\n      title: i18nLazyString(UIStrings.userActiveScreenUnlocked),\n      text: i18nLazyString(UIStrings.userActiveScreenUnlocked),\n    },\n    {\n      value: '{\\\"isUserActive\\\":true,\\\"isScreenUnlocked\\\":false}',\n      title: i18nLazyString(UIStrings.userActiveScreenLocked),\n      text: i18nLazyString(UIStrings.userActiveScreenLocked),\n    },\n    {\n      value: '{\\\"isUserActive\\\":false,\\\"isScreenUnlocked\\\":true}',\n      title: i18nLazyString(UIStrings.userIdleScreenUnlocked),\n      text: i18nLazyString(UIStrings.userIdleScreenUnlocked),\n    },\n    {\n      value: '{\\\"isUserActive\\\":false,\\\"isScreenUnlocked\\\":false}',\n      title: i18nLazyString(UIStrings.userIdleScreenLocked),\n      text: i18nLazyString(UIStrings.userIdleScreenLocked),\n    },\n  ],\n});\n"],
  "mappings": "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",
  "names": []
}
