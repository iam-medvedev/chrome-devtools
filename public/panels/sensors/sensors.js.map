{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/sensors/LocationsSettingsTab.ts", "locationsSettingsTab.css.js", "../../../../../../front_end/panels/sensors/SensorsView.ts", "sensors.css.js"],
  "sourcesContent": ["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/components/cards/cards.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport locationsSettingsTabStyles from './locationsSettingsTab.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Title in the Locations Settings Tab, where custom geographic locations that the user\n   *has entered are stored.\n   */\n  locations: 'Locations',\n  /**\n   * @description Label for the name of a geographic location that the user has entered.\n   */\n  locationName: 'Location name',\n  /**\n   * @description Abbreviation of latitude in Locations Settings Tab of the Device Toolbar\n   */\n  lat: 'Lat',\n  /**\n   * @description Abbreviation of longitude in Locations Settings Tab of the Device Toolbar\n   */\n  long: 'Long',\n  /**\n   * @description Text in Sensors View of the Device Toolbar\n   */\n  timezoneId: 'Timezone ID',\n  /**\n   * @description Label for text input for the locale of a particular location.\n   */\n  locale: 'Locale',\n  /**\n   * @description Label for text input for the latitude of a GPS position.\n   */\n  latitude: 'Latitude',\n  /**\n   * @description Label for text input for the longitude of a GPS position.\n   */\n  longitude: 'Longitude',\n  /**\n   * @description Label for text input for the accuracy of a GPS position.\n   */\n  accuracy: 'Accuracy',\n  /**\n   * @description Error message in the Locations settings pane that declares the location name input must not be empty\n   */\n  locationNameCannotBeEmpty: 'Location name cannot be empty',\n  /**\n   * @description Error message in the Locations settings pane that declares the maximum length of the location name\n   * @example {50} PH1\n   */\n  locationNameMustBeLessThanS: 'Location name must be less than {PH1} characters',\n  /**\n   * @description Error message in the Locations settings pane that declares that the value for the latitude input must be a number\n   */\n  latitudeMustBeANumber: 'Latitude must be a number',\n  /**\n   * @description Error message in the Locations settings pane that declares the minimum value for the latitude input\n   * @example {-90} PH1\n   */\n  latitudeMustBeGreaterThanOrEqual: 'Latitude must be greater than or equal to {PH1}',\n  /**\n   * @description Error message in the Locations settings pane that declares the maximum value for the latitude input\n   * @example {90} PH1\n   */\n  latitudeMustBeLessThanOrEqualToS: 'Latitude must be less than or equal to {PH1}',\n  /**\n   * @description Error message in the Locations settings pane that declares that the value for the longitude input must be a number\n   */\n  longitudeMustBeANumber: 'Longitude must be a number',\n  /**\n   * @description Error message in the Locations settings pane that declares the minimum value for the longitude input\n   * @example {-180} PH1\n   */\n  longitudeMustBeGreaterThanOr: 'Longitude must be greater than or equal to {PH1}',\n  /**\n   * @description Error message in the Locations settings pane that declares the maximum value for the longitude input\n   * @example {180} PH1\n   */\n  longitudeMustBeLessThanOrEqualTo: 'Longitude must be less than or equal to {PH1}',\n  /**\n   * @description Error message in the Locations settings pane that declares timezone ID input invalid\n   */\n  timezoneIdMustContainAlphabetic: 'Timezone ID must contain alphabetic characters',\n  /**\n   * @description Error message in the Locations settings pane that declares locale input invalid\n   */\n  localeMustContainAlphabetic: 'Locale must contain alphabetic characters',\n  /**\n   * @description Error message in the Locations settings pane that declares that the value for the accuracy input must be a number\n   */\n  accuracyMustBeANumber: 'Accuracy must be a number',\n  /**\n   * @description Error message in the Locations settings pane that declares the minimum value for the accuracy input\n   * @example {0} PH1\n   */\n  accuracyMustBeGreaterThanOrEqual: 'Accuracy must be greater than or equal to {PH1}',\n  /**\n   * @description Text of add locations button in Locations Settings Tab of the Device Toolbar\n   */\n  addLocation: 'Add location',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/sensors/LocationsSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class LocationsSettingsTab extends UI.Widget.VBox implements UI.ListWidget.Delegate<LocationDescription> {\n  private readonly list: UI.ListWidget.ListWidget<LocationDescription>;\n  private readonly customSetting: Common.Settings.Setting<LocationDescription[]>;\n  private editor?: UI.ListWidget.Editor<LocationDescription>;\n\n  constructor() {\n    super({\n      jslog: `${VisualLogging.pane('emulation-locations')}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(locationsSettingsTabStyles);\n\n    const settingsContent =\n        this.contentElement.createChild('div', 'settings-card-container-wrapper').createChild('div');\n    settingsContent.classList.add('settings-card-container');\n\n    const locationsCard = settingsContent.createChild('devtools-card');\n    locationsCard.heading = i18nString(UIStrings.locations);\n\n    const listContainer = locationsCard.createChild('div');\n\n    this.list = new UI.ListWidget.ListWidget(this, undefined, true);\n    this.list.element.classList.add('locations-list');\n    this.list.registerRequiredCSS(locationsSettingsTabStyles);\n    this.list.show(listContainer);\n    this.customSetting =\n        Common.Settings.Settings.instance().moduleSetting<LocationDescription[]>('emulation.locations');\n    const list =\n        this.customSetting.get().map(location => replaceLocationTitles(location, this.customSetting.defaultValue));\n\n    function replaceLocationTitles(\n        location: LocationDescription, defaultValues: LocationDescription[]): LocationDescription {\n      // This check is done for locations that might had been cached wrongly due to crbug.com/1171670.\n      // Each of the default values would have been stored without a title if the user had added a new location\n      // while the bug was present in the application. This means that getting the setting's default value with the `get`\n      // method would return the default locations without a title. To cope with this, the setting values are\n      // preemptively checked and corrected so that any default value mistakenly stored without a title is replaced\n      // with the corresponding declared value in the pre-registered setting.\n      if (!location.title) {\n        const replacement = defaultValues.find(\n            defaultLocation => defaultLocation.lat === location.lat && defaultLocation.long === location.long &&\n                defaultLocation.timezoneId === location.timezoneId && defaultLocation.locale === location.locale);\n        if (!replacement) {\n          console.error('Could not determine a location setting title');\n        } else {\n          return replacement;\n        }\n      }\n      return location;\n    }\n\n    const addButton = new Buttons.Button.Button();\n    addButton.classList.add('add-locations-button');\n    addButton.data = {\n      variant: Buttons.Button.Variant.OUTLINED,\n      iconName: 'plus',\n      jslogContext: 'emulation.add-location',\n    };\n    addButton.textContent = i18nString(UIStrings.addLocation);\n    addButton.addEventListener('click', () => this.addButtonClicked());\n    locationsCard.append(addButton);\n\n    this.customSetting.set(list);\n    this.customSetting.addChangeListener(this.locationsUpdated, this);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.locationsUpdated();\n  }\n\n  private locationsUpdated(): void {\n    this.list.clear();\n\n    const conditions = this.customSetting.get();\n    for (const condition of conditions) {\n      this.list.appendItem(condition, true);\n    }\n\n    this.list.appendSeparator();\n  }\n\n  private addButtonClicked(): void {\n    this.list.addNewItem(this.customSetting.get().length, {\n      title: '',\n      lat: 0,\n      long: 0,\n      timezoneId: '',\n      locale: '',\n      accuracy: SDK.EmulationModel.Location.DEFAULT_ACCURACY\n    });\n  }\n\n  renderItem(location: LocationDescription, _editable: boolean): Element {\n    const element = document.createElement('div');\n    element.role = 'row';\n    element.classList.add('locations-list-item');\n    const title = element.createChild('div', 'locations-list-text locations-list-title');\n    title.role = 'cell';\n    const titleText = title.createChild('div', 'locations-list-title-text');\n    titleText.textContent = location.title;\n    UI.Tooltip.Tooltip.install(titleText, location.title);\n    element.createChild('div', 'locations-list-separator');\n    const lat = element.createChild('div', 'locations-list-text');\n    lat.textContent = String(location.lat);\n    lat.role = 'cell';\n    element.createChild('div', 'locations-list-separator');\n    const long = element.createChild('div', 'locations-list-text');\n    long.textContent = String(location.long);\n    long.role = 'cell';\n    element.createChild('div', 'locations-list-separator');\n    const timezoneId = element.createChild('div', 'locations-list-text');\n    timezoneId.textContent = location.timezoneId;\n    timezoneId.role = 'cell';\n    element.createChild('div', 'locations-list-separator');\n    const locale = element.createChild('div', 'locations-list-text');\n    locale.textContent = location.locale;\n    locale.role = 'cell';\n    element.createChild('div', 'locations-list-separator');\n    element.createChild('div', 'locations-list-text').textContent =\n        String(location.accuracy || SDK.EmulationModel.Location.DEFAULT_ACCURACY);\n    return element;\n  }\n\n  removeItemRequested(_item: LocationDescription, index: number): void {\n    const list = this.customSetting.get();\n    list.splice(index, 1);\n    this.customSetting.set(list);\n  }\n\n  commitEdit(location: LocationDescription, editor: UI.ListWidget.Editor<LocationDescription>, isNew: boolean): void {\n    location.title = editor.control('title').value.trim();\n    const lat = editor.control('lat').value.trim();\n    location.lat = lat ? parseFloat(lat) : 0;\n    const long = editor.control('long').value.trim();\n    location.long = long ? parseFloat(long) : 0;\n    const timezoneId = editor.control('timezone-id').value.trim();\n    location.timezoneId = timezoneId;\n    const locale = editor.control('locale').value.trim();\n    location.locale = locale;\n    const accuracy = editor.control('accuracy').value.trim();\n    location.accuracy = accuracy ? parseFloat(accuracy) : SDK.EmulationModel.Location.DEFAULT_ACCURACY;\n\n    const list = this.customSetting.get();\n    if (isNew) {\n      list.push(location);\n    }\n    this.customSetting.set(list);\n  }\n\n  beginEdit(location: LocationDescription): UI.ListWidget.Editor<LocationDescription> {\n    const editor = this.createEditor();\n    editor.control('title').value = location.title;\n    editor.control('lat').value = String(location.lat);\n    editor.control('long').value = String(location.long);\n    editor.control('timezone-id').value = location.timezoneId;\n    editor.control('locale').value = location.locale;\n    editor.control('accuracy').value = String(location.accuracy || SDK.EmulationModel.Location.DEFAULT_ACCURACY);\n    return editor;\n  }\n\n  private createEditor(): UI.ListWidget.Editor<LocationDescription> {\n    if (this.editor) {\n      return this.editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<LocationDescription>();\n    this.editor = editor;\n    const content = editor.contentElement();\n\n    const titles = content.createChild('div', 'locations-edit-row');\n    titles.createChild('div', 'locations-list-text locations-list-title').textContent =\n        i18nString(UIStrings.locationName);\n    titles.createChild('div', 'locations-list-separator locations-list-separator-invisible');\n    titles.createChild('div', 'locations-list-text').textContent = i18nString(UIStrings.lat);\n    titles.createChild('div', 'locations-list-separator locations-list-separator-invisible');\n    titles.createChild('div', 'locations-list-text').textContent = i18nString(UIStrings.long);\n    titles.createChild('div', 'locations-list-separator locations-list-separator-invisible');\n    titles.createChild('div', 'locations-list-text').textContent = i18nString(UIStrings.timezoneId);\n    titles.createChild('div', 'locations-list-separator locations-list-separator-invisible');\n    titles.createChild('div', 'locations-list-text').textContent = i18nString(UIStrings.locale);\n    titles.createChild('div', 'locations-list-separator locations-list-separator-invisible');\n    titles.createChild('div', 'locations-list-text').textContent = i18nString(UIStrings.accuracy);\n\n    const fields = content.createChild('div', 'locations-edit-row');\n    fields.createChild('div', 'locations-list-text locations-list-title locations-input-container')\n        .appendChild(editor.createInput('title', 'text', i18nString(UIStrings.locationName), titleValidator));\n    fields.createChild('div', 'locations-list-separator locations-list-separator-invisible');\n\n    let cell = fields.createChild('div', 'locations-list-text locations-input-container');\n    cell.appendChild(editor.createInput('lat', 'text', i18nString(UIStrings.latitude), latValidator));\n    fields.createChild('div', 'locations-list-separator locations-list-separator-invisible');\n\n    cell = fields.createChild('div', 'locations-list-text locations-list-text-longitude locations-input-container');\n    cell.appendChild(editor.createInput('long', 'text', i18nString(UIStrings.longitude), longValidator));\n    fields.createChild('div', 'locations-list-separator locations-list-separator-invisible');\n\n    cell = fields.createChild('div', 'locations-list-text locations-input-container');\n    cell.appendChild(editor.createInput('timezone-id', 'text', i18nString(UIStrings.timezoneId), timezoneIdValidator));\n    fields.createChild('div', 'locations-list-separator locations-list-separator-invisible');\n\n    cell = fields.createChild('div', 'locations-list-text locations-input-container');\n    cell.appendChild(editor.createInput('locale', 'text', i18nString(UIStrings.locale), localeValidator));\n    fields.createChild('div', 'locations-list-separator locations-list-separator-invisible');\n\n    cell = fields.createChild('div', 'locations-list-text locations-input-container');\n    cell.appendChild(editor.createInput('accuracy', 'text', i18nString(UIStrings.accuracy), accuracyValidator));\n\n    return editor;\n\n    function titleValidator(\n        _item: LocationDescription, _index: number, input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const maxLength = 50;\n      const value = input.value.trim();\n\n      let errorMessage;\n      if (!value.length) {\n        errorMessage = i18nString(UIStrings.locationNameCannotBeEmpty);\n      } else if (value.length > maxLength) {\n        errorMessage = i18nString(UIStrings.locationNameMustBeLessThanS, {PH1: maxLength});\n      }\n\n      if (errorMessage) {\n        return {valid: false, errorMessage};\n      }\n      return {valid: true, errorMessage: undefined};\n    }\n\n    function latValidator(\n        _item: LocationDescription, _index: number, input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const minLat = -90;\n      const maxLat = 90;\n      const value = input.value.trim();\n      const parsedValue = Number(value);\n\n      if (!value) {\n        return {valid: true, errorMessage: undefined};\n      }\n\n      let errorMessage;\n      if (Number.isNaN(parsedValue)) {\n        errorMessage = i18nString(UIStrings.latitudeMustBeANumber);\n      } else if (parseFloat(value) < minLat) {\n        errorMessage = i18nString(UIStrings.latitudeMustBeGreaterThanOrEqual, {PH1: minLat});\n      } else if (parseFloat(value) > maxLat) {\n        errorMessage = i18nString(UIStrings.latitudeMustBeLessThanOrEqualToS, {PH1: maxLat});\n      }\n\n      if (errorMessage) {\n        return {valid: false, errorMessage};\n      }\n      return {valid: true, errorMessage: undefined};\n    }\n\n    function longValidator(\n        _item: LocationDescription, _index: number, input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const minLong = -180;\n      const maxLong = 180;\n      const value = input.value.trim();\n      const parsedValue = Number(value);\n\n      if (!value) {\n        return {valid: true, errorMessage: undefined};\n      }\n\n      let errorMessage;\n      if (Number.isNaN(parsedValue)) {\n        errorMessage = i18nString(UIStrings.longitudeMustBeANumber);\n      } else if (parseFloat(value) < minLong) {\n        errorMessage = i18nString(UIStrings.longitudeMustBeGreaterThanOr, {PH1: minLong});\n      } else if (parseFloat(value) > maxLong) {\n        errorMessage = i18nString(UIStrings.longitudeMustBeLessThanOrEqualTo, {PH1: maxLong});\n      }\n\n      if (errorMessage) {\n        return {valid: false, errorMessage};\n      }\n      return {valid: true, errorMessage: undefined};\n    }\n\n    function timezoneIdValidator(\n        _item: LocationDescription, _index: number, input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const value = input.value.trim();\n      // Chromium uses ICU's timezone implementation, which is very\n      // liberal in what it accepts. ICU does not simply use an allowlist\n      // but instead tries to make sense of the input, even for\n      // weird-looking timezone IDs. There's not much point in validating\n      // the input other than checking if it contains at least one\n      // alphabetic character. The empty string resets the override,\n      // and is accepted as well.\n      if (value === '' || /[a-zA-Z]/.test(value)) {\n        return {valid: true, errorMessage: undefined};\n      }\n      const errorMessage = i18nString(UIStrings.timezoneIdMustContainAlphabetic);\n      return {valid: false, errorMessage};\n    }\n\n    function localeValidator(\n        _item: LocationDescription, _index: number, input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const value = input.value.trim();\n      // Similarly to timezone IDs, there's not much point in validating\n      // input locales other than checking if it contains at least two\n      // alphabetic characters.\n      // https://unicode.org/reports/tr35/#Unicode_language_identifier\n      // The empty string resets the override, and is accepted as\n      // well.\n      if (value === '' || /[a-zA-Z]{2}/.test(value)) {\n        return {valid: true, errorMessage: undefined};\n      }\n      const errorMessage = i18nString(UIStrings.localeMustContainAlphabetic);\n      return {valid: false, errorMessage};\n    }\n\n    function accuracyValidator(\n        _item: LocationDescription, _index: number, input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const minAccuracy = 0;\n      const value = input.value.trim();\n      const parsedValue = Number(value);\n\n      if (!value) {\n        return {valid: true, errorMessage: undefined};\n      }\n\n      let errorMessage;\n      if (Number.isNaN(parsedValue)) {\n        errorMessage = i18nString(UIStrings.accuracyMustBeANumber);\n      } else if (parseFloat(value) < minAccuracy) {\n        errorMessage = i18nString(UIStrings.accuracyMustBeGreaterThanOrEqual, {PH1: minAccuracy});\n      }\n\n      if (errorMessage) {\n        return {valid: false, errorMessage};\n      }\n      return {valid: true, errorMessage: undefined};\n    }\n  }\n}\nexport interface LocationDescription {\n  title: string;\n  lat: number;\n  long: number;\n  timezoneId: string;\n  locale: string;\n  accuracy?: number;\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2018 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.add-locations-button {\n  margin-bottom: var(--sys-size-5);\n  border: none;\n}\n\n.locations-list {\n  margin-top: var(--sys-size-3);\n  flex: auto;\n}\n\n.locations-list-item {\n  padding: 3px 6px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  flex: auto 1 1;\n}\n\n.locations-list-text {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  flex-basis: 170px;\n  user-select: none;\n  color: var(--sys-color-on-surface);\n  position: relative;\n  overflow: hidden;\n}\n\n.locations-list-title {\n  text-align: start;\n}\n\n.locations-list-title-text {\n  overflow: hidden;\n  flex: auto;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n.locations-list-separator {\n  flex: 0 0 1px;\n  background-color: var(--sys-color-divider);\n  height: 30px;\n  margin: 0 4px;\n}\n\n.locations-list-separator-invisible {\n  visibility: hidden;\n  height: 100% !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.locations-edit-row {\n  display: flex;\n  flex-direction: row;\n  margin: 6px 5px;\n}\n\n.locations-edit-row input {\n  width: 100%;\n  text-align: inherit;\n}\n\n.locations-input-container {\n  padding: 1px;\n}\n\n.settings-card-container-wrapper {\n  scrollbar-gutter: stable;\n  padding: var(--sys-size-8) 0;\n  overflow: auto;\n  position: absolute;\n  inset: var(--sys-size-8) 0 0;\n}\n\n.settings-card-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: var(--sys-size-9);\n}\n\n/*# sourceURL=${import.meta.resolve('./locationsSettingsTab.css')} */`;", "// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\n\nimport sensorsStyles from './sensors.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Title for a group of cities\n   */\n  location: 'Location',\n  /**\n   * @description An option that appears in a drop-down to prevent the GPS location of the user from being overridden.\n   */\n  noOverride: 'No override',\n  /**\n   * @description Title of a section that contains overrides for the user's GPS location.\n   */\n  overrides: 'Overrides',\n  /**\n   * @description Text of button in Sensors View, takes the user to the custom location setting screen\n   *where they can enter/edit custom locations.\n   */\n  manage: 'Manage',\n  /**\n   * @description Aria-label for location manage button in Sensors View\n   */\n  manageTheListOfLocations: 'Manage the list of locations',\n  /**\n   * @description Option in a drop-down input for selecting the GPS location of the user. As an\n   *alternative to selecting a location from the list, the user can select this option and they are\n   *prompted to enter the details for a new custom location.\n   */\n  other: 'Other…',\n  /**\n   * @description Title of a section in a drop-down input that contains error locations, e.g. to select\n   *a location override that says 'the location is not available'. A noun.\n   */\n  error: 'Error',\n  /**\n   * @description A type of override where the geographic location of the user is not available.\n   */\n  locationUnavailable: 'Location unavailable',\n  /**\n   * @description Tooltip text telling the user how to change the value of a latitude/longitude input\n   *text box. several shortcuts are provided for convenience. The placeholder can be different\n   *keyboard keys, depending on the user's settings.\n   * @example {Ctrl} PH1\n   */\n  adjustWithMousewheelOrUpdownKeys: 'Adjust with mousewheel or up/down keys. {PH1}: ±10, Shift: ±1, Alt: ±0.01',\n  /**\n   * @description Label for latitude of a GPS location.\n   */\n  latitude: 'Latitude',\n  /**\n   * @description Label for Longitude of a GPS location.\n   */\n  longitude: 'Longitude',\n  /**\n   * @description Label for the ID of a timezone for a particular location.\n   */\n  timezoneId: 'Timezone ID',\n  /**\n   * @description Label for the locale relevant to a custom location.\n   */\n  locale: 'Locale',\n  /**\n   * @description Label for Accuracy of a GPS location.\n   */\n  accuracy: 'Accuracy',\n  /**\n   * @description Label the orientation of a user's device e.g. tilt in 3D-space.\n   */\n  orientation: 'Orientation',\n  /**\n   * @description Option that when chosen, turns off device orientation override.\n   */\n  off: 'Off',\n  /**\n   * @description Option that when chosen, allows the user to enter a custom orientation for the device e.g. tilt in 3D-space.\n   */\n  customOrientation: 'Custom orientation',\n  /**\n   * @description Warning to the user they should enable the device orientation override, in order to\n   *enable this input which allows them to interactively select orientation by dragging a 3D phone\n   *model.\n   */\n  enableOrientationToRotate: 'Enable orientation to rotate',\n  /**\n   * @description Text telling the user how to use an input which allows them to interactively select\n   *orientation by dragging a 3D phone model.\n   */\n  shiftdragHorizontallyToRotate: 'Shift+drag horizontally to rotate around the y-axis',\n  /**\n   * @description Message in the Sensors tool that is alerted (for screen readers) when the device orientation setting is changed\n   * @example {180} PH1\n   * @example {-90} PH2\n   * @example {0} PH3\n   */\n  deviceOrientationSetToAlphaSBeta: 'Device orientation set to alpha: {PH1}, beta: {PH2}, gamma: {PH3}',\n  /**\n   * @description Text of orientation reset button in Sensors View of the Device Toolbar\n   */\n  reset: 'Reset',\n  /**\n   * @description Aria-label for orientation reset button in Sensors View. Command.\n   */\n  resetDeviceOrientation: 'Reset device orientation',\n  /**\n   * @description Description of the Touch select in Sensors tab\n   */\n  forcesTouchInsteadOfClick: 'Forces touch instead of click',\n  /**\n   * @description Description of the Emulate Idle State select in Sensors tab\n   */\n  forcesSelectedIdleStateEmulation: 'Forces selected idle state emulation',\n  /**\n   * @description Description of the Emulate CPU Pressure State select in Sensors tab\n   */\n  forcesSelectedPressureStateEmulation: 'Forces selected pressure state emulation',\n  /**\n   * @description Title for a group of configuration options in a drop-down input.\n   */\n  presets: 'Presets',\n  /**\n   * @description Drop-down input option for the orientation of a device in 3D space.\n   */\n  portrait: 'Portrait',\n  /**\n   * @description Drop-down input option for the orientation of a device in 3D space.\n   */\n  portraitUpsideDown: 'Portrait upside down',\n  /**\n   * @description Drop-down input option for the orientation of a device in 3D space.\n   */\n  landscapeLeft: 'Landscape left',\n  /**\n   * @description Drop-down input option for the orientation of a device in 3D space.\n   */\n  landscapeRight: 'Landscape right',\n  /**\n   * @description Drop-down input option for the orientation of a device in 3D space. Noun indicating\n   *the display of the device is pointing up.\n   */\n  displayUp: 'Display up',\n  /**\n   * @description Drop-down input option for the orientation of a device in 3D space. Noun indicating\n   *the display of the device is pointing down.\n   */\n  displayDown: 'Display down',\n  /**\n   * @description Label for one dimension of device orientation that the user can override.\n   */\n  alpha: '\\u03B1 (alpha)',\n  /**\n   * @description Label for one dimension of device orientation that the user can override.\n   */\n  beta: '\\u03B2 (beta)',\n  /**\n   * @description Label for one dimension of device orientation that the user can override.\n   */\n  gamma: '\\u03B3 (gamma)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/sensors/SensorsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SensorsView extends UI.Widget.VBox {\n  readonly #locationSetting: Common.Settings.Setting<string>;\n  #location: SDK.EmulationModel.Location;\n  #locationOverrideEnabled: boolean;\n  private fieldsetElement!: HTMLFieldSetElement;\n  private timezoneError!: HTMLElement;\n  private locationSelectElement!: HTMLSelectElement;\n  private latitudeInput!: HTMLInputElement;\n  private longitudeInput!: HTMLInputElement;\n  private timezoneInput!: HTMLInputElement;\n  private localeInput!: HTMLInputElement;\n  private accuracyInput!: HTMLInputElement;\n  private latitudeSetter!: (arg0: string) => void;\n  private longitudeSetter!: (arg0: string) => void;\n  private timezoneSetter!: (arg0: string) => void;\n  private localeSetter!: (arg0: string) => void;\n  private accuracySetter!: (arg0: string) => void;\n  private localeError!: HTMLElement;\n  private accuracyError!: HTMLElement;\n  private customLocationsGroup!: HTMLOptGroupElement;\n  private readonly deviceOrientationSetting: Common.Settings.Setting<string>;\n  private deviceOrientation: SDK.EmulationModel.DeviceOrientation;\n  private deviceOrientationOverrideEnabled: boolean;\n  private deviceOrientationFieldset!: HTMLFieldSetElement;\n  private stageElement!: HTMLElement;\n  private orientationSelectElement!: HTMLSelectElement;\n  private alphaElement!: HTMLInputElement;\n  private betaElement!: HTMLInputElement;\n  private gammaElement!: HTMLInputElement;\n  private alphaSetter!: (arg0: string) => void;\n  private betaSetter!: (arg0: string) => void;\n  private gammaSetter!: (arg0: string) => void;\n  private orientationLayer!: HTMLDivElement;\n  private boxElement?: HTMLElement;\n  private boxMatrix?: DOMMatrix;\n  private mouseDownVector?: UI.Geometry.Vector|null;\n  private originalBoxMatrix?: DOMMatrix;\n\n  constructor() {\n    super({\n      jslog: `${VisualLogging.panel('sensors').track({resize: true})}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(sensorsStyles);\n    this.contentElement.classList.add('sensors-view');\n\n    this.#locationSetting = Common.Settings.Settings.instance().createSetting('emulation.location-override', '');\n    this.#location = SDK.EmulationModel.Location.parseSetting(this.#locationSetting.get());\n    this.#locationOverrideEnabled = false;\n\n    this.createLocationSection(this.#location);\n\n    this.createPanelSeparator();\n\n    this.deviceOrientationSetting =\n        Common.Settings.Settings.instance().createSetting('emulation.device-orientation-override', '');\n    this.deviceOrientation = SDK.EmulationModel.DeviceOrientation.parseSetting(this.deviceOrientationSetting.get());\n    this.deviceOrientationOverrideEnabled = false;\n\n    this.createDeviceOrientationSection();\n\n    this.createPanelSeparator();\n\n    this.appendTouchControl();\n\n    this.createPanelSeparator();\n\n    this.appendIdleEmulator();\n\n    this.createPanelSeparator();\n\n    this.createHardwareConcurrencySection();\n\n    this.createPanelSeparator();\n\n    this.createPressureSection();\n\n    this.createPanelSeparator();\n  }\n\n  private createPanelSeparator(): void {\n    this.contentElement.createChild('div').classList.add('panel-section-separator');\n  }\n\n  private createLocationSection(location: SDK.EmulationModel.Location): void {\n    const geogroup = this.contentElement.createChild('section', 'sensors-group');\n    geogroup.setAttribute('jslog', `${VisualLogging.section('location')}`);\n    const geogroupTitle = UI.UIUtils.createLabel(i18nString(UIStrings.location), 'sensors-group-title');\n    geogroup.appendChild(geogroupTitle);\n    const fields = geogroup.createChild('div', 'geo-fields');\n    let selectedIndex = 0;\n\n    const noOverrideOption = {title: i18nString(UIStrings.noOverride), location: NonPresetOptions.NoOverride};\n    this.locationSelectElement = fields.createChild('select');\n    this.locationSelectElement.setAttribute('jslog', `${VisualLogging.dropDown().track({change: true})}`);\n    UI.ARIAUtils.bindLabelToControl(geogroupTitle, this.locationSelectElement);\n\n    // No override\n    this.locationSelectElement.appendChild(\n        UI.UIUtils.createOption(noOverrideOption.title, noOverrideOption.location, 'no-override'));\n    this.customLocationsGroup = this.locationSelectElement.createChild('optgroup');\n    this.customLocationsGroup.label = i18nString(UIStrings.overrides);\n    const customLocations = Common.Settings.Settings.instance().moduleSetting('emulation.locations');\n    const manageButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.manage), () => Common.Revealer.reveal(customLocations),\n        {className: 'manage-locations', jslogContext: 'sensors.manage-locations'});\n    UI.ARIAUtils.setLabel(manageButton, i18nString(UIStrings.manageTheListOfLocations));\n    fields.appendChild(manageButton);\n    const fillCustomSettings = (): void => {\n      if (!this.customLocationsGroup) {\n        return;\n      }\n      this.customLocationsGroup.removeChildren();\n      for (const [i, customLocation] of customLocations.get().entries()) {\n        this.customLocationsGroup.appendChild(\n            UI.UIUtils.createOption(customLocation.title, JSON.stringify(customLocation), 'custom'));\n        if (location.latitude === customLocation.lat && location.longitude === customLocation.long) {\n          // If the location coming from settings matches the custom location, use its index to select the option\n          selectedIndex = i + 1;\n        }\n      }\n    };\n    customLocations.addChangeListener(fillCustomSettings);\n    fillCustomSettings();\n\n    // Other location\n    const customLocationOption = {title: i18nString(UIStrings.other), location: NonPresetOptions.Custom};\n    this.locationSelectElement.appendChild(\n        UI.UIUtils.createOption(customLocationOption.title, customLocationOption.location, 'other'));\n\n    // Error location.\n    const group = this.locationSelectElement.createChild('optgroup');\n    group.label = i18nString(UIStrings.error);\n    group.appendChild(UI.UIUtils.createOption(\n        i18nString(UIStrings.locationUnavailable), NonPresetOptions.Unavailable, 'unavailable'));\n\n    this.locationSelectElement.selectedIndex = selectedIndex;\n    this.locationSelectElement.addEventListener('change', this.#locationSelectChanged.bind(this));\n    this.fieldsetElement = fields.createChild('fieldset');\n    this.fieldsetElement.disabled = !this.#locationOverrideEnabled;\n    this.fieldsetElement.id = 'location-override-section';\n\n    const latitudeGroup = this.fieldsetElement.createChild('div', 'latlong-group');\n    const longitudeGroup = this.fieldsetElement.createChild('div', 'latlong-group');\n    const timezoneGroup = this.fieldsetElement.createChild('div', 'latlong-group');\n    const localeGroup = this.fieldsetElement.createChild('div', 'latlong-group');\n    const accuracyGroup = this.fieldsetElement.createChild('div', 'latlong-group');\n\n    const cmdOrCtrl = Host.Platform.isMac() ? '\\u2318' : 'Ctrl';\n    const modifierKeyMessage = i18nString(UIStrings.adjustWithMousewheelOrUpdownKeys, {PH1: cmdOrCtrl});\n\n    this.latitudeInput = UI.UIUtils.createInput('', 'number', 'latitude');\n    latitudeGroup.appendChild(this.latitudeInput);\n    this.latitudeInput.setAttribute('step', 'any');\n    this.latitudeInput.value = '0';\n    this.latitudeSetter = UI.UIUtils.bindInput(\n        this.latitudeInput, this.applyLocationUserInput.bind(this), SDK.EmulationModel.Location.latitudeValidator, true,\n        0.1);\n    this.latitudeSetter(String(location.latitude));\n    UI.Tooltip.Tooltip.install(this.latitudeInput, modifierKeyMessage);\n    latitudeGroup.appendChild(\n        UI.UIUtils.createLabel(i18nString(UIStrings.latitude), 'latlong-title', this.latitudeInput));\n\n    this.longitudeInput = UI.UIUtils.createInput('', 'number', 'longitude');\n    longitudeGroup.appendChild(this.longitudeInput);\n    this.longitudeInput.setAttribute('step', 'any');\n    this.longitudeInput.value = '0';\n    this.longitudeSetter = UI.UIUtils.bindInput(\n        this.longitudeInput, this.applyLocationUserInput.bind(this), SDK.EmulationModel.Location.longitudeValidator,\n        true, 0.1);\n    this.longitudeSetter(String(location.longitude));\n    UI.Tooltip.Tooltip.install(this.longitudeInput, modifierKeyMessage);\n    longitudeGroup.appendChild(\n        UI.UIUtils.createLabel(i18nString(UIStrings.longitude), 'latlong-title', this.longitudeInput));\n\n    this.timezoneInput = UI.UIUtils.createInput('', 'text', 'timezone');\n    timezoneGroup.appendChild(this.timezoneInput);\n    this.timezoneInput.value = 'Europe/Berlin';\n    this.timezoneSetter = UI.UIUtils.bindInput(\n        this.timezoneInput, this.applyLocationUserInput.bind(this), SDK.EmulationModel.Location.timezoneIdValidator,\n        false);\n    this.timezoneSetter(location.timezoneId);\n    timezoneGroup.appendChild(\n        UI.UIUtils.createLabel(i18nString(UIStrings.timezoneId), 'timezone-title', this.timezoneInput));\n    this.timezoneError = timezoneGroup.createChild('div', 'timezone-error');\n\n    this.localeInput = UI.UIUtils.createInput('', 'text', 'locale');\n    localeGroup.appendChild(this.localeInput);\n    this.localeInput.value = 'en-US';\n    this.localeSetter = UI.UIUtils.bindInput(\n        this.localeInput, this.applyLocationUserInput.bind(this), SDK.EmulationModel.Location.localeValidator, false);\n    this.localeSetter(location.locale);\n    localeGroup.appendChild(UI.UIUtils.createLabel(i18nString(UIStrings.locale), 'locale-title', this.localeInput));\n    this.localeError = localeGroup.createChild('div', 'locale-error');\n\n    this.accuracyInput = UI.UIUtils.createInput('', 'number', 'accuracy');\n    accuracyGroup.appendChild(this.accuracyInput);\n    this.accuracyInput.step = 'any';\n    this.accuracyInput.value = SDK.EmulationModel.Location.DEFAULT_ACCURACY.toString();\n    this.accuracySetter = UI.UIUtils.bindInput(\n        this.accuracyInput, this.applyLocationUserInput.bind(this),\n        (value: string) => SDK.EmulationModel.Location.accuracyValidator(value).valid, true, 1);\n    this.accuracySetter(String(location.accuracy || SDK.EmulationModel.Location.DEFAULT_ACCURACY));\n    accuracyGroup.appendChild(\n        UI.UIUtils.createLabel(i18nString(UIStrings.accuracy), 'accuracy-title', this.accuracyInput));\n    this.accuracyError = accuracyGroup.createChild('div', 'accuracy-error');\n  }\n\n  #locationSelectChanged(): void {\n    this.fieldsetElement.disabled = false;\n    this.timezoneError.textContent = '';\n    this.accuracyError.textContent = '';\n    const value = this.locationSelectElement.options[this.locationSelectElement.selectedIndex].value;\n    if (value === NonPresetOptions.NoOverride) {\n      this.#locationOverrideEnabled = false;\n      this.clearFieldsetElementInputs();\n      this.fieldsetElement.disabled = true;\n    } else if (value === NonPresetOptions.Custom) {\n      this.#locationOverrideEnabled = true;\n      const location = SDK.EmulationModel.Location.parseUserInput(\n          this.latitudeInput.value.trim(), this.longitudeInput.value.trim(), this.timezoneInput.value.trim(),\n          this.localeInput.value.trim(), this.accuracyInput.value.trim());\n      if (!location) {\n        return;\n      }\n      this.#location = location;\n    } else if (value === NonPresetOptions.Unavailable) {\n      this.#locationOverrideEnabled = true;\n      this.#location =\n          new SDK.EmulationModel.Location(0, 0, '', '', SDK.EmulationModel.Location.DEFAULT_ACCURACY, true);\n    } else {\n      this.#locationOverrideEnabled = true;\n      const coordinates = JSON.parse(value);\n      this.#location = new SDK.EmulationModel.Location(\n          coordinates.lat, coordinates.long, coordinates.timezoneId, coordinates.locale,\n          coordinates.accuracy || SDK.EmulationModel.Location.DEFAULT_ACCURACY, false);\n      this.latitudeSetter(coordinates.lat);\n      this.longitudeSetter(coordinates.long);\n      this.timezoneSetter(coordinates.timezoneId);\n      this.localeSetter(coordinates.locale);\n      this.accuracySetter(String(coordinates.accuracy || SDK.EmulationModel.Location.DEFAULT_ACCURACY));\n    }\n\n    this.applyLocation();\n    if (value === NonPresetOptions.Custom) {\n      this.latitudeInput.focus();\n    }\n  }\n\n  private applyLocationUserInput(): void {\n    const location = SDK.EmulationModel.Location.parseUserInput(\n        this.latitudeInput.value.trim(), this.longitudeInput.value.trim(), this.timezoneInput.value.trim(),\n        this.localeInput.value.trim(), this.accuracyInput.value.trim());\n    if (!location) {\n      return;\n    }\n\n    this.timezoneError.textContent = '';\n    this.accuracyError.textContent = '';\n\n    this.setSelectElementLabel(this.locationSelectElement, NonPresetOptions.Custom);\n    this.#location = location;\n    this.applyLocation();\n  }\n\n  private applyLocation(): void {\n    if (this.#locationOverrideEnabled) {\n      this.#locationSetting.set(this.#location.toSetting());\n    } else {\n      this.#locationSetting.set('');\n    }\n    for (const emulationModel of SDK.TargetManager.TargetManager.instance().models(SDK.EmulationModel.EmulationModel)) {\n      emulationModel.emulateLocation(this.#locationOverrideEnabled ? this.#location : null).catch(err => {\n        switch (err.type) {\n          case 'emulation-set-timezone': {\n            this.timezoneError.textContent = err.message;\n            break;\n          }\n          case 'emulation-set-locale': {\n            this.localeError.textContent = err.message;\n            break;\n          }\n          case 'emulation-set-accuracy': {\n            this.accuracyError.textContent = err.message;\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  private clearFieldsetElementInputs(): void {\n    this.latitudeSetter('0');\n    this.longitudeSetter('0');\n    this.timezoneSetter('');\n    this.localeSetter('');\n    this.accuracySetter(SDK.EmulationModel.Location.DEFAULT_ACCURACY.toString());\n  }\n\n  private createDeviceOrientationSection(): void {\n    const orientationGroup = this.contentElement.createChild('section', 'sensors-group');\n    orientationGroup.setAttribute('jslog', `${VisualLogging.section('device-orientation')}`);\n    const orientationTitle = UI.UIUtils.createLabel(i18nString(UIStrings.orientation), 'sensors-group-title');\n    orientationGroup.appendChild(orientationTitle);\n    const orientationContent = orientationGroup.createChild('div', 'orientation-content');\n    const fields = orientationContent.createChild('div', 'orientation-fields');\n\n    const orientationOffOption = {\n      title: i18nString(UIStrings.off),\n      orientation: NonPresetOptions.NoOverride,\n      jslogContext: 'off',\n    };\n    const customOrientationOption = {\n      title: i18nString(UIStrings.customOrientation),\n      orientation: NonPresetOptions.Custom,\n    };\n    const orientationGroups = [{\n      title: i18nString(UIStrings.presets),\n      value: [\n        {title: i18nString(UIStrings.portrait), orientation: '[0, 90, 0]', jslogContext: 'portrait'},\n        {\n          title: i18nString(UIStrings.portraitUpsideDown),\n          orientation: '[180, -90, 0]',\n          jslogContext: 'portrait-upside-down',\n        },\n        {title: i18nString(UIStrings.landscapeLeft), orientation: '[90, 0, -90]', jslogContext: 'landscape-left'},\n        {title: i18nString(UIStrings.landscapeRight), orientation: '[90, -180, -90]', jslogContext: 'landscape-right'},\n        {title: i18nString(UIStrings.displayUp), orientation: '[0, 0, 0]', jslogContext: 'display-up'},\n        {title: i18nString(UIStrings.displayDown), orientation: '[0, -180, 0]', jslogContext: 'displayUp-down'},\n      ],\n    }];\n    this.orientationSelectElement = this.contentElement.createChild('select');\n    this.orientationSelectElement.setAttribute('jslog', `${VisualLogging.dropDown().track({change: true})}`);\n    UI.ARIAUtils.bindLabelToControl(orientationTitle, this.orientationSelectElement);\n    this.orientationSelectElement.appendChild(UI.UIUtils.createOption(\n        orientationOffOption.title, orientationOffOption.orientation, orientationOffOption.jslogContext));\n    this.orientationSelectElement.appendChild(\n        UI.UIUtils.createOption(customOrientationOption.title, customOrientationOption.orientation, 'custom'));\n\n    for (let i = 0; i < orientationGroups.length; ++i) {\n      const groupElement = this.orientationSelectElement.createChild('optgroup');\n      groupElement.label = orientationGroups[i].title;\n      const group = orientationGroups[i].value;\n      for (let j = 0; j < group.length; ++j) {\n        groupElement.appendChild(UI.UIUtils.createOption(group[j].title, group[j].orientation, group[j].jslogContext));\n      }\n    }\n    this.orientationSelectElement.selectedIndex = 0;\n    fields.appendChild(this.orientationSelectElement);\n    this.orientationSelectElement.addEventListener('change', this.orientationSelectChanged.bind(this));\n\n    this.deviceOrientationFieldset = this.createDeviceOrientationOverrideElement(this.deviceOrientation);\n    this.stageElement = orientationContent.createChild('div', 'orientation-stage');\n    this.stageElement.setAttribute('jslog', `${VisualLogging.preview().track({drag: true})}`);\n    this.orientationLayer = this.stageElement.createChild('div', 'orientation-layer');\n    this.boxElement = this.orientationLayer.createChild('section', 'orientation-box orientation-element');\n\n    this.boxElement.createChild('section', 'orientation-front orientation-element');\n    this.boxElement.createChild('section', 'orientation-top orientation-element');\n    this.boxElement.createChild('section', 'orientation-back orientation-element');\n    this.boxElement.createChild('section', 'orientation-left orientation-element');\n    this.boxElement.createChild('section', 'orientation-right orientation-element');\n    this.boxElement.createChild('section', 'orientation-bottom orientation-element');\n\n    UI.UIUtils.installDragHandle(this.stageElement, this.onBoxDragStart.bind(this), event => {\n      this.onBoxDrag(event);\n    }, null, '-webkit-grabbing', '-webkit-grab');\n\n    fields.appendChild(this.deviceOrientationFieldset);\n    this.enableOrientationFields(true);\n    this.setBoxOrientation(this.deviceOrientation, false);\n  }\n\n  private createPressureSection(): void {\n    const container = this.contentElement.createChild('div', 'pressure-section');\n    const control = UI.SettingsUI.createControlForSetting(\n        Common.Settings.Settings.instance().moduleSetting('emulation.cpu-pressure'),\n        i18nString(UIStrings.forcesSelectedPressureStateEmulation));\n\n    if (control) {\n      container.appendChild(control);\n    }\n  }\n\n  private enableOrientationFields(disable: boolean|null): void {\n    if (disable) {\n      this.deviceOrientationFieldset.disabled = true;\n      this.stageElement.classList.add('disabled');\n      UI.Tooltip.Tooltip.install(this.stageElement, i18nString(UIStrings.enableOrientationToRotate));\n    } else {\n      this.deviceOrientationFieldset.disabled = false;\n      this.stageElement.classList.remove('disabled');\n      UI.Tooltip.Tooltip.install(this.stageElement, i18nString(UIStrings.shiftdragHorizontallyToRotate));\n    }\n  }\n\n  private orientationSelectChanged(): void {\n    const value = this.orientationSelectElement.options[this.orientationSelectElement.selectedIndex].value;\n    this.enableOrientationFields(false);\n\n    if (value === NonPresetOptions.NoOverride) {\n      this.deviceOrientationOverrideEnabled = false;\n      this.enableOrientationFields(true);\n      this.applyDeviceOrientation();\n    } else if (value === NonPresetOptions.Custom) {\n      this.deviceOrientationOverrideEnabled = true;\n      this.resetDeviceOrientation();\n      this.alphaElement.focus();\n    } else {\n      const parsedValue = JSON.parse(value);\n      this.deviceOrientationOverrideEnabled = true;\n      this.deviceOrientation = new SDK.EmulationModel.DeviceOrientation(parsedValue[0], parsedValue[1], parsedValue[2]);\n      this.setDeviceOrientation(this.deviceOrientation, DeviceOrientationModificationSource.SELECT_PRESET);\n    }\n  }\n\n  private applyDeviceOrientation(): void {\n    if (this.deviceOrientationOverrideEnabled) {\n      this.deviceOrientationSetting.set(this.deviceOrientation.toSetting());\n    }\n    for (const emulationModel of SDK.TargetManager.TargetManager.instance().models(SDK.EmulationModel.EmulationModel)) {\n      void emulationModel.emulateDeviceOrientation(\n          this.deviceOrientationOverrideEnabled ? this.deviceOrientation : null);\n    }\n  }\n\n  private setSelectElementLabel(selectElement: HTMLSelectElement, labelValue: string): void {\n    const optionValues = Array.prototype.map.call(selectElement.options, x => x.value);\n    selectElement.selectedIndex = optionValues.indexOf(labelValue);\n  }\n\n  private applyDeviceOrientationUserInput(): void {\n    this.setDeviceOrientation(\n        SDK.EmulationModel.DeviceOrientation.parseUserInput(\n            this.alphaElement.value.trim(), this.betaElement.value.trim(), this.gammaElement.value.trim()),\n        DeviceOrientationModificationSource.USER_INPUT);\n    this.setSelectElementLabel(this.orientationSelectElement, NonPresetOptions.Custom);\n  }\n\n  private resetDeviceOrientation(): void {\n    this.setDeviceOrientation(\n        new SDK.EmulationModel.DeviceOrientation(0, 90, 0), DeviceOrientationModificationSource.RESET_BUTTON);\n    this.setSelectElementLabel(this.orientationSelectElement, '[0, 90, 0]');\n  }\n\n  private setDeviceOrientation(\n      deviceOrientation: SDK.EmulationModel.DeviceOrientation|null,\n      modificationSource: DeviceOrientationModificationSource): void {\n    if (!deviceOrientation) {\n      return;\n    }\n\n    function roundAngle(angle: number): number {\n      return Math.round(angle * 10000) / 10000;\n    }\n\n    if (modificationSource !== DeviceOrientationModificationSource.USER_INPUT) {\n      // Even though the angles in |deviceOrientation| will not be rounded\n      // here, their precision will be rounded by CSS when we change\n      // |this.orientationLayer.style| in setBoxOrientation().\n      this.alphaSetter(String(roundAngle(deviceOrientation.alpha)));\n      this.betaSetter(String(roundAngle(deviceOrientation.beta)));\n      this.gammaSetter(String(roundAngle(deviceOrientation.gamma)));\n    }\n\n    const animate = modificationSource !== DeviceOrientationModificationSource.USER_DRAG;\n    this.setBoxOrientation(deviceOrientation, animate);\n\n    this.deviceOrientation = deviceOrientation;\n    this.applyDeviceOrientation();\n\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(\n        UIStrings.deviceOrientationSetToAlphaSBeta,\n        {PH1: deviceOrientation.alpha, PH2: deviceOrientation.beta, PH3: deviceOrientation.gamma}));\n  }\n\n  private createAxisInput(\n      parentElement: Element, input: HTMLInputElement, label: string,\n      validator: (arg0: string) => boolean): (arg0: string) => void {\n    const div = parentElement.createChild('div', 'orientation-axis-input-container');\n    div.appendChild(input);\n    div.appendChild(UI.UIUtils.createLabel(label, /* className */ '', input));\n    return UI.UIUtils.bindInput(input, this.applyDeviceOrientationUserInput.bind(this), validator, true);\n  }\n\n  private createDeviceOrientationOverrideElement(deviceOrientation: SDK.EmulationModel.DeviceOrientation):\n      HTMLFieldSetElement {\n    const fieldsetElement = document.createElement('fieldset');\n    fieldsetElement.classList.add('device-orientation-override-section');\n    const cellElement = fieldsetElement.createChild('td', 'orientation-inputs-cell');\n\n    this.alphaElement = UI.UIUtils.createInput('', 'number', 'alpha');\n    this.alphaElement.setAttribute('step', 'any');\n    this.alphaSetter = this.createAxisInput(\n        cellElement, this.alphaElement, i18nString(UIStrings.alpha),\n        SDK.EmulationModel.DeviceOrientation.alphaAngleValidator);\n    this.alphaSetter(String(deviceOrientation.alpha));\n\n    this.betaElement = UI.UIUtils.createInput('', 'number', 'beta');\n    this.betaElement.setAttribute('step', 'any');\n    this.betaSetter = this.createAxisInput(\n        cellElement, this.betaElement, i18nString(UIStrings.beta),\n        SDK.EmulationModel.DeviceOrientation.betaAngleValidator);\n    this.betaSetter(String(deviceOrientation.beta));\n\n    this.gammaElement = UI.UIUtils.createInput('', 'number', 'gamma');\n    this.gammaElement.setAttribute('step', 'any');\n    this.gammaSetter = this.createAxisInput(\n        cellElement, this.gammaElement, i18nString(UIStrings.gamma),\n        SDK.EmulationModel.DeviceOrientation.gammaAngleValidator);\n    this.gammaSetter(String(deviceOrientation.gamma));\n\n    const resetButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.reset), this.resetDeviceOrientation.bind(this),\n        {className: 'orientation-reset-button', jslogContext: 'sensors.reset-device-orientiation'});\n    UI.ARIAUtils.setLabel(resetButton, i18nString(UIStrings.resetDeviceOrientation));\n    resetButton.setAttribute('type', 'reset');\n    cellElement.appendChild(resetButton);\n    return fieldsetElement;\n  }\n\n  private setBoxOrientation(deviceOrientation: SDK.EmulationModel.DeviceOrientation, animate: boolean): void {\n    if (animate) {\n      this.stageElement.classList.add('is-animating');\n    } else {\n      this.stageElement.classList.remove('is-animating');\n    }\n\n    // It is important to explain the multiple conversions happening here. A\n    // few notes on coordinate spaces first:\n    // 1. The CSS coordinate space is left-handed. X and Y are parallel to the\n    //    screen, and Z is perpendicular to the screen. X is positive to the\n    //    right, Y is positive downwards and Z increases towards the viewer.\n    //    See https://drafts.csswg.org/css-transforms-2/#transform-rendering\n    //    for more information.\n    // 2. The Device Orientation coordinate space is right-handed. X and Y are\n    //    parallel to the screen, and Z is perpenticular to the screen. X is\n    //    positive to the right, Y is positive upwards and Z increases towards\n    //    the viewer. See\n    //    https://w3c.github.io/deviceorientation/#deviceorientation for more\n    //    information.\n    // 3. Additionally, the phone model we display is rotated +90 degrees in\n    //    the X axis in the CSS coordinate space (i.e. when all angles are 0 we\n    //    cannot see its screen in DevTools).\n    //\n    // |this.boxMatrix| is set in the Device Orientation coordinate space\n    // because it represents the phone model we show users and also because the\n    // calculations in UI.Geometry.EulerAngles assume this coordinate space (so\n    // we apply the rotations in the Z-X'-Y'' order).\n    // The CSS transforms, on the other hand, are done in the CSS coordinate\n    // space, so we need to convert 2) to 1) while keeping 3) in mind. We can\n    // cover 3) by swapping the Y and Z axes, and 2) by inverting the X axis.\n    const {alpha, beta, gamma} = deviceOrientation;\n    this.boxMatrix = new DOMMatrixReadOnly().rotate(0, 0, alpha).rotate(beta, 0, 0).rotate(0, gamma, 0);\n    this.orientationLayer.style.transform = `rotateY(${alpha}deg) rotateX(${- beta}deg) rotateZ(${gamma}deg)`;\n  }\n\n  private onBoxDrag(event: MouseEvent): boolean {\n    const mouseMoveVector = this.calculateRadiusVector(event.x, event.y);\n    if (!mouseMoveVector) {\n      return true;\n    }\n\n    if (!this.mouseDownVector) {\n      return true;\n    }\n\n    event.consume(true);\n    let axis, angle;\n    if (event.shiftKey) {\n      axis = new UI.Geometry.Vector(0, 0, 1);\n      angle = (mouseMoveVector.x - this.mouseDownVector.x) * ShiftDragOrientationSpeed;\n    } else {\n      axis = UI.Geometry.crossProduct(this.mouseDownVector, mouseMoveVector);\n      angle = UI.Geometry.calculateAngle(this.mouseDownVector, mouseMoveVector);\n    }\n\n    // See the comment in setBoxOrientation() for a longer explanation about\n    // the CSS coordinate space, the Device Orientation coordinate space and\n    // the conversions we make. |axis| and |angle| are in the CSS coordinate\n    // space, while |this.originalBoxMatrix| is rotated and in the Device\n    // Orientation coordinate space, which is why we swap Y and Z and invert X.\n    const currentMatrix =\n        new DOMMatrixReadOnly().rotateAxisAngle(-axis.x, axis.z, axis.y, angle).multiply(this.originalBoxMatrix);\n\n    const eulerAngles = UI.Geometry.EulerAngles.fromDeviceOrientationRotationMatrix(currentMatrix);\n    const newOrientation =\n        new SDK.EmulationModel.DeviceOrientation(eulerAngles.alpha, eulerAngles.beta, eulerAngles.gamma);\n    this.setDeviceOrientation(newOrientation, DeviceOrientationModificationSource.USER_DRAG);\n    this.setSelectElementLabel(this.orientationSelectElement, NonPresetOptions.Custom);\n    return false;\n  }\n\n  private onBoxDragStart(event: MouseEvent): boolean {\n    if (!this.deviceOrientationOverrideEnabled) {\n      return false;\n    }\n\n    this.mouseDownVector = this.calculateRadiusVector(event.x, event.y);\n    this.originalBoxMatrix = this.boxMatrix;\n\n    if (!this.mouseDownVector) {\n      return false;\n    }\n\n    event.consume(true);\n    return true;\n  }\n\n  private calculateRadiusVector(x: number, y: number): UI.Geometry.Vector|null {\n    const rect = this.stageElement.getBoundingClientRect();\n    const radius = Math.max(rect.width, rect.height) / 2;\n    const sphereX = (x - rect.left - rect.width / 2) / radius;\n    const sphereY = (y - rect.top - rect.height / 2) / radius;\n    const sqrSum = sphereX * sphereX + sphereY * sphereY;\n    if (sqrSum > 0.5) {\n      return new UI.Geometry.Vector(sphereX, sphereY, 0.5 / Math.sqrt(sqrSum));\n    }\n\n    return new UI.Geometry.Vector(sphereX, sphereY, Math.sqrt(1 - sqrSum));\n  }\n\n  private appendTouchControl(): void {\n    const container = this.contentElement.createChild('div', 'touch-section');\n    const control = UI.SettingsUI.createControlForSetting(\n        Common.Settings.Settings.instance().moduleSetting('emulation.touch'),\n        i18nString(UIStrings.forcesTouchInsteadOfClick));\n\n    if (control) {\n      container.appendChild(control);\n    }\n  }\n\n  private appendIdleEmulator(): void {\n    const container = this.contentElement.createChild('div', 'idle-section');\n    const control = UI.SettingsUI.createControlForSetting(\n        Common.Settings.Settings.instance().moduleSetting('emulation.idle-detection'),\n        i18nString(UIStrings.forcesSelectedIdleStateEmulation));\n\n    if (control) {\n      container.appendChild(control);\n    }\n  }\n\n  private createHardwareConcurrencySection(): void {\n    const container = this.contentElement.createChild('div', 'concurrency-section');\n\n    const {checkbox, numericInput, reset, warning} =\n        MobileThrottling.ThrottlingManager.throttlingManager().createHardwareConcurrencySelector();\n    const div = document.createElement('div');\n    div.classList.add('concurrency-details');\n    div.append(numericInput.element, reset.element, warning.element);\n    container.append(checkbox, div);\n  }\n}\n\nexport const enum DeviceOrientationModificationSource {\n  USER_INPUT = 'userInput',\n  USER_DRAG = 'userDrag',\n  RESET_BUTTON = 'resetButton',\n  SELECT_PRESET = 'selectPreset',\n}\n\nexport const PressureOptions = {\n  NoOverride: 'no-override',\n  Nominal: 'nominal',\n  Fair: 'fair',\n  Serious: 'serious',\n  Critical: 'critical',\n};\n\nexport const NonPresetOptions = {\n  NoOverride: 'noOverride',\n  Custom: 'custom',\n  Unavailable: 'unavailable',\n};\n\nexport class ShowActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, _actionId: string): boolean {\n    void UI.ViewManager.ViewManager.instance().showView('sensors');\n    return true;\n  }\n}\n\nexport const ShiftDragOrientationSpeed = 16;\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.sensors-view {\n  padding: 12px;\n  display: block;\n}\n\n.sensors-view input {\n  width: 100%;\n  max-width: 120px;\n  margin: -5px 10px 0 0;\n  text-align: end;\n}\n\n.sensors-view input[readonly] {\n  background-color: var(--sys-color-neutral-container);\n}\n\n.sensors-view fieldset {\n  border: none;\n  padding: 10px 0;\n  flex: 0 0 auto;\n  margin: 0;\n}\n\n.sensors-view fieldset[disabled] {\n  opacity: 50%;\n}\n\n.orientation-axis-input-container input {\n  max-width: 120px;\n}\n\n.concurrency-details {\n  margin: var(--sys-size-5) var(--sys-size-10);\n  display: flex;\n  align-items: center;\n}\n\n.concurrency-details input {\n  width: 50px;\n  /* Clear out unexpected margin applied to \\\\'.sensors-view input\\\\' */\n  margin: 0;\n}\n\n.concurrency-hidden {\n  visibility: hidden;\n}\n\n.sensors-view input:focus::-webkit-input-placeholder {\n  color: transparent !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.sensors-view select {\n  width: 200px;\n}\n\n.sensors-group-title {\n  width: 80px;\n  line-height: 24px;\n}\n\n.sensors-group {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n}\n\n.manage-locations {\n  margin-left: var(--sys-size-4);\n}\n\n.geo-fields {\n  flex: 2 0 200px;\n}\n\n.latlong-group {\n  display: flex;\n  margin-bottom: 10px;\n}\n\n.latlong-title {\n  width: 70px;\n}\n\n.timezone-error,\n.locale-error {\n  margin-left: 10px;\n  color: var(--legacy-input-validation-error);\n}\n\n/* Device Orientation */\n\n.orientation-content {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.orientation-fields {\n  margin-right: 10px;\n}\n\n.orientation-stage {\n  --override-gradient-color-1: var(--ref-palette-cyan95);\n  --override-gradient-color-2: var(--ref-palette-cyan90);\n\n  perspective: 700px;\n  perspective-origin: 50% 50%;\n  width: 160px;\n  height: 150px;\n  background: linear-gradient(var(--override-gradient-color-1) 0%, var(--override-gradient-color-1) 64%, var(--override-gradient-color-2) 64%, var(--override-gradient-color-1) 100%);\n  transition: 0.2s ease opacity, 0.2s ease filter;\n  overflow: hidden;\n  margin-bottom: 10px;\n}\n\n.theme-with-dark-background .orientation-stage,\n:host-context(.theme-with-dark-background) .orientation-stage {\n  --override-gradient-color-1: var(--ref-palette-cyan10);\n  --override-gradient-color-2: var(--ref-palette-cyan30);\n}\n\n.orientation-stage.disabled {\n  filter: grayscale();\n  opacity: 50%;\n}\n\n.orientation-element,\n.orientation-element::before,\n.orientation-element::after {\n  position: absolute;\n  box-sizing: border-box;\n  transform-style: preserve-3d;\n  background: no-repeat;\n  background-size: cover;\n  backface-visibility: hidden;\n}\n\n.orientation-box {\n  width: 62px;\n  height: 122px;\n  inset: 0;\n  margin: auto;\n  transform: rotate3d(1, 0, 0, 90deg);\n}\n\n.orientation-layer {\n  width: 100%;\n  height: 100%;\n  transform-style: preserve-3d;\n}\n\n.orientation-box.is-animating,\n.is-animating .orientation-layer {\n  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n}\n\n.orientation-front,\n.orientation-back {\n  width: 62px;\n  height: 122px;\n  border-radius: 8px;\n}\n\n.orientation-front {\n  background-image: var(--image-file-accelerometer-front);\n}\n\n.orientation-back {\n  transform: rotateY(180deg) translateZ(8px);\n  background-image: var(--image-file-accelerometer-back);\n}\n\n.orientation-left,\n.orientation-right {\n  width: 8px;\n  height: 106px;\n  top: 8px;\n  background-position: center center;\n}\n\n.orientation-left {\n  left: -8px;\n  transform-origin: right center;\n  transform: rotateY(-90deg);\n  background-image: var(--image-file-accelerometer-left);\n}\n\n.orientation-right {\n  right: -8px;\n  transform-origin: left center;\n  transform: rotateY(90deg);\n  background-image: var(--image-file-accelerometer-right);\n}\n\n.orientation-left::before,\n.orientation-left::after,\n.orientation-right::before,\n.orientation-right::after {\n  content: \"\";\n  width: 8px;\n  height: 6px;\n}\n\n.orientation-left::before,\n.orientation-left::after {\n  background-image: var(--image-file-accelerometer-left);\n}\n\n.orientation-right::before,\n.orientation-right::after {\n  background-image: var(--image-file-accelerometer-right);\n}\n\n.orientation-left::before,\n.orientation-right::before {\n  top: -6px;\n  transform-origin: center bottom;\n  transform: rotateX(26deg);\n  background-position: center top;\n}\n\n.orientation-left::after,\n.orientation-right::after {\n  bottom: -6px;\n  transform-origin: center top;\n  transform: rotateX(-25deg);\n  background-position: center bottom;\n}\n\n.orientation-top,\n.orientation-bottom {\n  width: 50px;\n  height: 8px;\n  left: 8px;\n  background-position: center center;\n}\n\n.orientation-top {\n  top: -8px;\n  transform-origin: center bottom;\n  transform: rotateX(90deg);\n  background-image: var(--image-file-accelerometer-top);\n}\n\n.orientation-bottom {\n  bottom: -8px;\n  transform-origin: center top;\n  transform: rotateX(-90deg);\n  background-image: var(--image-file-accelerometer-bottom);\n}\n\n.orientation-top::before,\n.orientation-top::after,\n.orientation-bottom::before,\n.orientation-bottom::after {\n  content: \"\";\n  width: 8px;\n  height: 8px;\n}\n\n.orientation-top::before,\n.orientation-top::after {\n  background-image: var(--image-file-accelerometer-top);\n}\n\n.orientation-bottom::before,\n.orientation-bottom::after {\n  background-image: var(--image-file-accelerometer-bottom);\n}\n\n.orientation-top::before,\n.orientation-bottom::before {\n  left: -6px;\n  transform-origin: right center;\n  transform: rotateY(-26deg);\n  background-position: left center;\n}\n\n.orientation-top::after,\n.orientation-bottom::after {\n  right: -6px;\n  transform-origin: left center;\n  transform: rotateY(26deg);\n  background-position: right center;\n}\n\n.orientation-axis-input-container {\n  margin-bottom: 10px;\n}\n\n.orientation-reset-button {\n  min-width: 80px;\n}\n\nfieldset.device-orientation-override-section {\n  margin: 0;\n  display: flex;\n}\n\n.panel-section-separator {\n  height: 1px;\n  margin-bottom: 20px;\n  margin-left: -12px;\n  margin-right: -12px;\n  background: var(--sys-color-divider);\n}\n\nbutton.text-button {\n  margin: 4px 0 0 10px;\n}\n\n@media (forced-colors: active) {\n  .sensors-view fieldset[disabled] {\n    opacity: 100%;\n  }\n}\n\n.chrome-select-label {\n  margin-bottom: 16px;\n}\n\n/*# sourceURL=${import.meta.resolve('./sensors.css')} */`;"],
  "mappings": "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",
  "names": ["Common", "i18n", "SDK", "UI", "VisualLogging", "UIStrings", "str_", "i18nString"]
}
