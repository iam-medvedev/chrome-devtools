{"version":3,"file":"HiddenIssuesRow.js","sourceRoot":"","sources":["../../../../../../front_end/panels/issues/HiddenIssuesRow.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,0CAA0C,CAAC;AAElD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,aAAa,MAAM,+CAA+C,CAAC;AAC/E,OAAO,KAAK,OAAO,MAAM,wCAAwC,CAAC;AAClE,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,EAAC,IAAI,EAAE,MAAM,EAAC,MAAM,qBAAqB,CAAC;AACjD,OAAO,KAAK,aAAa,MAAM,2CAA2C,CAAC;AAE3E,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,YAAY,EAAE,eAAe;IAC7B;;OAEG;IACH,SAAS,EAAE,YAAY;CACf,CAAC;AAEX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,kCAAkC,EAAE,SAAS,CAAC,CAAC;AACxF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAWtE,MAAM,YAAY,GAAS,CAAC,KAAgB,EAAE,OAAmB,EAAE,MAAmB,EAAQ,EAAE;IAC9F,MAAM,uBAAuB,GAAG,CAAC,KAAoB,EAAQ,EAAE;QAC7D,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE,CAAC;YAC1B,8DAA8D;YAC9D,+DAA+D;YAC/D,8DAA8D;YAC9D,6DAA6D;YAC7D,+DAA+D;YAC/D,KAAK,CAAC,wBAAwB,EAAE,CAAC;QACnC,CAAC;IACH,CAAC,CAAC;IAEF,mBAAmB;IACnB,MAAM,CAAC,IAAI,CAAA;;;8BAGiB,EAAC,IAAI,EAAE,cAAc,EAAC;cACtC,KAAK,CAAC,KAAK;;yBAEA,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC;;6BAE9B,aAAa,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC,OAAO,CAAC,0BAA0B,CAAC;8BAC9E,KAAK,CAAC,iBAAiB;gCACrB,uBAAuB;gCACvB,gDAA+B,IAAI,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;SACzF,EAAE,MAAM,CAAC,CAAC;IACjB,kBAAkB;AACpB,CAAC,CAAC;AAEF,MAAM,OAAO,eAAgB,SAAQ,EAAE,CAAC,WAAW,CAAC,WAAW;IAC7D,KAAK,CAAO;IAEZ,YAAY,OAAa,YAAY;QACnC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;QACtE,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,MAAM,aAAa,GAAG,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAC3E,MAAM,iBAAiB,GAAG,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5E,MAAM,KAAK,GAAG;YACZ,KAAK;YACL,iBAAiB;SAClB,CAAC;QACF,MAAM,MAAM,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAClD,CAAC;CACF","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/adorners/adorners.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nconst UIStrings = {\n  /**\n   * @description Title for the hidden issues row\n   */\n  hiddenIssues: 'Hidden issues',\n  /**\n   * @description Label for the button to unhide all hidden issues\n   */\n  unhideAll: 'Unhide all',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/HiddenIssuesRow.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ViewInput {\n  count: number;\n  onUnhideAllIssues: () => void;\n}\n\ntype ViewOutput = unknown;\n\ntype View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nconst DEFAULT_VIEW: View = (input: ViewInput, _output: ViewOutput, target: HTMLElement): void => {\n  const stopPropagationForEnter = (event: KeyboardEvent): void => {\n    if (event.key === 'Enter') {\n      // Make sure we don't propagate 'Enter' key events to parents,\n      // so that these get turned into 'click' events properly. If we\n      // don't stop the propagation here, the 'Enter' key down event\n      // will be consumed by the tree element and it'll be expanded\n      // or collapsed instead of the \"Unhide all\" action being taken.\n      event.stopImmediatePropagation();\n    }\n  };\n\n  // clang-format off\n  render(html`\n  <div class=\"header\">\n    <devtools-adorner class=\"aggregated-issues-count\"\n                      .data=${{name: 'countWrapper'}}>\n      <span>${input.count}</span>\n    </devtools-adorner>\n    <div class=\"title\">${i18nString(UIStrings.hiddenIssues)}</div>\n    <devtools-button class=\"unhide-all-issues-button\"\n                     jslog=${VisualLogging.action().track({click: true}).context('issues.unhide-all-hiddes')}\n                     @click=${input.onUnhideAllIssues}\n                     @keydown=${stopPropagationForEnter}\n                     .variant=${Buttons.Button.Variant.OUTLINED}>${i18nString(UIStrings.unhideAll)}</devtools-button>\n  </div>`, target);\n  // clang-format on\n};\n\nexport class HiddenIssuesRow extends UI.TreeOutline.TreeElement {\n  #view: View;\n\n  constructor(view: View = DEFAULT_VIEW) {\n    super(undefined, true);\n    this.#view = view;\n    this.toggleOnClick = true;\n    this.listItemElement.classList.add('issue-category', 'hidden-issues');\n    this.childrenListElement.classList.add('hidden-issues-body');\n    this.update(0);\n  }\n\n  update(count: number): void {\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    const onUnhideAllIssues = issuesManager.unhideAllIssues.bind(issuesManager);\n    const input = {\n      count,\n      onUnhideAllIssues,\n    };\n    const output = undefined;\n    this.#view(input, output, this.listItemElement);\n  }\n}\n"]}