{"version":3,"file":"IssuesPane.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/issues/IssuesPane.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,aAAa,MAAM,+CAA+C,CAAC;AAC/E,OAAO,EAAC,uBAAuB,EAAC,MAAM,qCAAqC,CAAC;AAE5E,OAAO,KAAK,MAAM,MAAM,aAAa,CAAC;AAEtC,uBAAuB,CAAC,YAAY,EAAE,GAAG,EAAE;IACzC,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE;QACrE,MAAM,aAAa,GAAG,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAC3E,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,yBAAyB,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACjE,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QACtD,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;QACvE,MAAM,CAAC,SAAS,CACZ,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,qBAAqB,CAAC,EAAE,WAAW,EAC3E,yCAAyC,CAAC,CAAC;QAC/C,MAAM,CAAC,SAAS,CACZ,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,iCAAiC,CAAC,EAAE,WAAW,EACvF,sDAAsD,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QACtD,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;QACvE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,qBAAqB,CAAC,EAAE,WAAW,EAAE,oBAAoB,CAAC,CAAC;QACpH,MAAM,CAAC,SAAS,CACZ,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,iCAAiC,CAAC,EAAE,WAAW,EACvF,sDAAsD,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\n\nimport * as Issues from './issues.js';\n\ndescribeWithEnvironment('IssuesPane', () => {\n  it('shows placeholder if only non-relevant issues have appeared', () => {\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    sinon.stub(issuesManager, 'numberOfAllStoredIssues').returns(10);\n    const issuesPane = new Issues.IssuesPane.IssuesPane();\n    assert.exists(issuesPane.contentElement.querySelector('.empty-state'));\n    assert.deepEqual(\n        issuesPane.contentElement.querySelector('.empty-state-header')?.textContent,\n        'Only third-party cookie issues detected');\n    assert.deepEqual(\n        issuesPane.contentElement.querySelector('.empty-state-description > span')?.textContent,\n        'On this page you can find warnings from the browser.');\n  });\n\n  it('shows placeholder', () => {\n    const issuesPane = new Issues.IssuesPane.IssuesPane();\n    assert.exists(issuesPane.contentElement.querySelector('.empty-state'));\n    assert.deepEqual(issuesPane.contentElement.querySelector('.empty-state-header')?.textContent, 'No issues detected');\n    assert.deepEqual(\n        issuesPane.contentElement.querySelector('.empty-state-description > span')?.textContent,\n        'On this page you can find warnings from the browser.');\n  });\n});\n"]}