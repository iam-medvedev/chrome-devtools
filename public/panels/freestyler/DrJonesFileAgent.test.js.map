{"version":3,"file":"DrJonesFileAgent.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/freestyler/DrJonesFileAgent.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AAGtD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,KAAK,QAAQ,MAAM,mCAAmC,CAAC;AAC9D,OAAO,KAAK,SAAS,MAAM,qCAAqC,CAAC;AACjE,OAAO,EACL,YAAY,EACZ,oBAAoB,GACrB,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAC3E,OAAO,EAAC,yBAAyB,EAAC,MAAM,mCAAmC,CAAC;AAC5E,OAAO,EAAC,kCAAkC,EAAC,MAAM,sCAAsC,CAAC;AAExF,OAAO,EAAC,gBAAgB,EAAE,sBAAsB,EAAe,MAAM,iBAAiB,CAAC;AAEvF,0BAA0B,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAClD,SAAS,cAAc,CAAC,OAAgB,EAAE,WAAoB;QAC5D,oBAAoB,CAAC;YACnB,6BAA6B,EAAE;gBAC7B,OAAO;gBACP,WAAW;aACZ;SACF,CAAC,CAAC;IACL,CAAC;IAED,SAAS,cAAc,CACnB,KAAqE;QAEvE,OAAO;YACL,KAAK;YACL,mBAAmB,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;SAC/C,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAC/D,MAAM,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QACjE,MAAM,eAAe,GAAG,IAAI,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QAC/F,MAAM,wBAAwB,GAAG,QAAQ,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,QAAQ,CAAC;YACnG,QAAQ,EAAE,IAAI;YACd,eAAe;YACf,aAAa;SACd,CAAC,CAAC;QACH,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,wBAAwB,EAAC,CAAC,CAAC;IACpG,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,UAAU,CAAC,GAAG,EAAE;YACd,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;YAChD,cAAc,CAAC,YAAY,CAAC,CAAC;YAC7B,MAAM,KAAK,GAAG,IAAI,gBAAgB,CAAC;gBACjC,UAAU,EAAE,EAAgC;aAC7C,CAAC,CAAC;YACH,MAAM,CAAC,WAAW,CACd,KAAK,CAAC,YAAY,CAAC,EAAC,KAAK,EAAE,YAAY,EAAC,CAAC,CAAC,OAAO,EAAE,QAAQ,EAC3D,YAAY,CACf,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,KAAK,GAAG,IAAI,gBAAgB,CAAC;gBACjC,UAAU,EAAE,EAAgC;aAC7C,CAAC,CAAC;YACH,MAAM,CAAC,WAAW,CACd,KAAK,CAAC,YAAY,CAAC,EAAC,KAAK,EAAE,YAAY,EAAC,CAAC,CAAC,OAAO,EAAE,WAAW,EAC9D,CAAC,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;YACxC,cAAc,CAAC,YAAY,CAAC,CAAC;YAC7B,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,WAAkE,CAAC,CAAC;YAC7G,MAAM,KAAK,GAAG,IAAI,gBAAgB,CAAC;gBACjC,UAAU,EAAE,EAAgC;gBAC5C,wBAAwB,EAAE,IAAI;aAC/B,CAAC,CAAC;YACH,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAChD,KAAK,CAAC,wBAAwB,GAAG,IAAI,GAAG,CAAC;gBACvC;oBACE,CAAC;oBACD;wBACE;4BACE,IAAI,wCAAuB;4BAC3B,KAAK,EAAE,UAAU;yBAClB;wBACD;4BACE,IAAI,oCAAqB;4BACzB,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,CAAC,CAAC;YACH,MAAM,CAAC,eAAe,CAClB,KAAK,CAAC,YAAY,CAAC;gBACjB,KAAK,EAAE,YAAY;aACpB,CAAC,EACF;gBACE,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,iBAAiB;gBACzB,QAAQ,EAAE,UAAU;gBACpB,YAAY,EAAE;oBACZ;wBACE,MAAM,EAAE,CAAC;wBACT,IAAI,EAAE,UAAU;qBACjB;oBACD;wBACE,MAAM,EAAE,CAAC;wBACT,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,4BAA4B,EAAE,KAAK;oBACnC,iBAAiB,EAAE,WAAW;oBAC9B,SAAS,EAAE,CAAC;iBACb;gBACD,OAAO,EAAE;oBACP,QAAQ,EAAE,YAAY;oBACtB,WAAW,EAAE,SAAS;iBACvB;gBACD,cAAc,EAAE,CAAC;gBACjB,kBAAkB,EAAE,CAAC;aACtB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE;QACnB,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;YACnC,KAAK,SAAS,CAAC,CAAC,cAAc;gBAC5B,MAAM;oBACJ,WAAW,EAAE,oBAAoB;oBACjC,QAAQ,EAAE;wBACR,WAAW,EAAE,GAAG;qBACjB;oBACD,SAAS,EAAE,IAAI;iBAChB,CAAC;YACJ,CAAC;YAED,MAAM,KAAK,GAAG,IAAI,gBAAgB,CAAC;gBACjC,UAAU,EAAE,cAAc,CAAC,cAAc,CAAC;aAC3C,CAAC,CAAC;YAEH,MAAM,GAAG,GAAG,8BAAiE,CAAC;YAC9E,MAAM,EAAC,OAAO,EAAC,GAAG,kCAAkC,CAAC;gBACnD,KAAK,EAAE;oBACL;wBACE,GAAG;wBACH,QAAQ,EAAE,wBAAwB;wBAClC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM;qBACvD;iBACF;gBACD,MAAM,EAAE,YAAY,EAAE;aACvB,CAAC,CAAC;YAEH,MAAM,YAAY,GAAG,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YACrD,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,YAAY,EAAC,CAAC,CAAC,CAAC;YAErF,MAAM,CAAC,eAAe,CAAC,SAAS,EAAE;gBAChC;oBACE,IAAI,4CAAyB;oBAC7B,KAAK,EAAE,MAAM;iBACd;gBACD;oBACE,IAAI,sCAAsB;oBAC1B,KAAK,EAAE,gBAAgB;oBACvB,OAAO,EAAE;wBACP;4BACE,KAAK,EAAE,eAAe;4BACtB,IAAI,EAAE;;;OAGb;yBACM;qBACF;iBACF;gBACD;oBACE,IAAI,wCAAuB;oBAC3B,KAAK,EACD,qIAAqI;iBAC1I;gBACD;oBACE,IAAI,oCAAqB;oBACzB,IAAI,EAAE,oBAAoB;oBAC1B,WAAW,EAAE,SAAS;oBACtB,KAAK,EAAE,GAAG;iBACX;aACF,CAAC,CAAC;YAEH,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,qBAAqB,EAAE;gBAClD;oBACE,MAAM,EAAE,CAAC;oBACT,IAAI,EAAE;;wDAEwC;iBAC/C;gBACD;oBACE,MAAM,EAAE,CAAC;oBACT,IAAI,EAAE,oBAAoB;iBAC3B;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;YAClC,MAAM,MAAM,GAAG,YAAY,EAAE,CAAC;YAC9B,MAAM,wBAAwB,GAAG,QAAQ,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,QAAQ,EAAE,CAAC;YACvG,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YACpE,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YAE7B,MAAM,MAAM,GAAG,CAAC,MAAM,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;YAChE,MAAM,YAAY,GAAG,wBAAwB,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;YAC5E,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAE5B,MAAM,QAAQ,GAAG,sBAAsB,CAAC,YAAY,EAAE,wBAAwB,CAAC,CAAC;YAChF,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,+BAA+B,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Host from '../../core/host/host.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {\n  createTarget,\n  getGetHostConfigStub,\n} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {loadBasicSourceMapExample} from '../../testing/SourceMapHelpers.js';\nimport {createContentProviderUISourceCodes} from '../../testing/UISourceCodeHelpers.js';\n\nimport {DrJonesFileAgent, formatSourceMapDetails, ResponseType} from './freestyler.js';\n\ndescribeWithMockConnection('DrJonesFileAgent', () => {\n  function mockHostConfig(modelId?: string, temperature?: number) {\n    getGetHostConfigStub({\n      devToolsAiAssistanceFileAgent: {\n        modelId,\n        temperature,\n      },\n    });\n  }\n\n  function mockAidaClient(\n      fetch: () => AsyncGenerator<Host.AidaClient.AidaResponse, void, void>,\n      ): Host.AidaClient.AidaClient {\n    return {\n      fetch,\n      registerClientEvent: () => Promise.resolve({}),\n    };\n  }\n\n  beforeEach(() => {\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n    const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n      forceNew: true,\n      resourceMapping,\n      targetManager,\n    });\n    Bindings.IgnoreListManager.IgnoreListManager.instance({forceNew: true, debuggerWorkspaceBinding});\n  });\n\n  describe('buildRequest', () => {\n    beforeEach(() => {\n      sinon.restore();\n    });\n\n    it('builds a request with a model id', async () => {\n      mockHostConfig('test model');\n      const agent = new DrJonesFileAgent({\n        aidaClient: {} as Host.AidaClient.AidaClient,\n      });\n      assert.strictEqual(\n          agent.buildRequest({input: 'test input'}).options?.model_id,\n          'test model',\n      );\n    });\n\n    it('builds a request with a temperature', async () => {\n      mockHostConfig('test model', 1);\n      const agent = new DrJonesFileAgent({\n        aidaClient: {} as Host.AidaClient.AidaClient,\n      });\n      assert.strictEqual(\n          agent.buildRequest({input: 'test input'}).options?.temperature,\n          1,\n      );\n    });\n\n    it('structure matches the snapshot', () => {\n      mockHostConfig('test model');\n      sinon.stub(crypto, 'randomUUID').returns('sessionId' as `${string}-${string}-${string}-${string}-${string}`);\n      const agent = new DrJonesFileAgent({\n        aidaClient: {} as Host.AidaClient.AidaClient,\n        serverSideLoggingEnabled: true,\n      });\n      sinon.stub(agent, 'preamble').value('preamble');\n      agent.chatNewHistoryForTesting = new Map([\n        [\n          0,\n          [\n            {\n              type: ResponseType.QUERYING,\n              query: 'question',\n            },\n            {\n              type: ResponseType.ANSWER,\n              text: 'answer',\n            },\n          ],\n        ],\n      ]);\n      assert.deepStrictEqual(\n          agent.buildRequest({\n            input: 'test input',\n          }),\n          {\n            input: 'test input',\n            client: 'CHROME_DEVTOOLS',\n            preamble: 'preamble',\n            chat_history: [\n              {\n                entity: 1,\n                text: 'question',\n              },\n              {\n                entity: 2,\n                text: 'answer',\n              },\n            ],\n            metadata: {\n              disable_user_content_logging: false,\n              string_session_id: 'sessionId',\n              user_tier: 2,\n            },\n            options: {\n              model_id: 'test model',\n              temperature: undefined,\n            },\n            client_feature: 9,\n            functionality_type: 1,\n          },\n      );\n    });\n  });\n\n  describe('run', () => {\n    it('generates an answer', async () => {\n      async function* generateAnswer() {\n        yield {\n          explanation: 'This is the answer',\n          metadata: {\n            rpcGlobalId: 123,\n          },\n          completed: true,\n        };\n      }\n\n      const agent = new DrJonesFileAgent({\n        aidaClient: mockAidaClient(generateAnswer),\n      });\n\n      const url = 'http://example.com/script.js' as Platform.DevToolsPath.UrlString;\n      const {project} = createContentProviderUISourceCodes({\n        items: [\n          {\n            url,\n            mimeType: 'application/javascript',\n            resourceType: Common.ResourceType.resourceTypes.Script,\n          },\n        ],\n        target: createTarget(),\n      });\n\n      const uiSourceCode = project.uiSourceCodeForURL(url);\n      const responses = await Array.fromAsync(agent.run('test', {selected: uiSourceCode}));\n\n      assert.deepStrictEqual(responses, [\n        {\n          type: ResponseType.USER_QUERY,\n          query: 'test',\n        },\n        {\n          type: ResponseType.CONTEXT,\n          title: 'Analyzing file',\n          details: [\n            {\n              title: 'Selected file',\n              text: `File Name: script.js\nURL: http://example.com/script.js\\n\nFile Content:\\n\\`\\`\\`\n\\`\\`\\``,\n            },\n          ],\n        },\n        {\n          type: ResponseType.QUERYING,\n          query:\n              '# Selected file\\nFile Name: script.js\\nURL: http://example.com/script.js\\n\\nFile Content:\\n\\`\\`\\`\\n\\`\\`\\`\\n\\n# User request\\n\\ntest',\n        },\n        {\n          type: ResponseType.ANSWER,\n          text: 'This is the answer',\n          suggestions: undefined,\n          rpcId: 123,\n        },\n      ]);\n\n      assert.deepStrictEqual(agent.chatHistoryForTesting, [\n        {\n          entity: 1,\n          text: `# Selected file\\nFile Name: script.js\nURL: http://example.com/script.js\\n\nFile Content:\\n\\`\\`\\`\\n\\`\\`\\`\\n\\n# User request\\n\\ntest`,\n        },\n        {\n          entity: 2,\n          text: 'This is the answer',\n        },\n      ]);\n    });\n  });\n\n  describe('formatSourceMapDetails', () => {\n    it('returns source map', async () => {\n      const target = createTarget();\n      const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n      const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n      assert.exists(debuggerModel);\n\n      const script = (await loadBasicSourceMapExample(target)).script;\n      const uiSourceCode = debuggerWorkspaceBinding.uiSourceCodeForScript(script);\n      assert.exists(uiSourceCode);\n\n      const response = formatSourceMapDetails(uiSourceCode, debuggerWorkspaceBinding);\n      assert.strictEqual(response, 'Source map: file://gen.js.map');\n    });\n  });\n});\n"]}