{"version":3,"file":"freestyler-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/freestyler/freestyler-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAIhD,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,cAAc,EAAE,iBAAiB;IACjC;;OAEG;IACH,UAAU,EAAE,YAAY;CACzB,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,sCAAsC,EAAE,SAAS,CAAC,CAAC;AAC5F,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAExF,IAAI,sBAAqD,CAAC;AAE1D,KAAK,UAAU,oBAAoB;IACjC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC5B,sBAAsB,GAAG,MAAM,MAAM,CAAC,iBAAiB,CAAC,CAAC;IAC3D,CAAC;IACD,OAAO,sBAAsB,CAAC;AAChC,CAAC;AAED,SAAS,kBAAkB;IACzB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,oBAAoB,CAAC,KAAK,MAAM,CAAC;AAC1E,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,mEAA+C;IACvD,EAAE,EAAE,YAAY;IAChB,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,cAAc,CAAC;IACvD,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC;IAC3C,KAAK,EAAE,EAAE;IACT,WAAW,4DAA0C;IACrD,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE,kBAAkB;IAC7B,KAAK,CAAC,QAAQ;QACZ,MAAM,UAAU,GAAG,MAAM,oBAAoB,EAAE,CAAC;QAChD,OAAO,UAAU,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAC/C,CAAC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Freestyler from './freestyler.js';\n\nconst UIStrings = {\n  /**\n   * @description The title of the action for showing Freestyler panel.\n   */\n  showFreestyler: 'Show Freestyler',\n  /**\n   * @description The title of the Freestyler panel.\n   */\n  freestyler: 'Freestyler',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/freestyler/freestyler-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedFreestylerModule: (typeof Freestyler|undefined);\n\nasync function loadFreestylerModule(): Promise<typeof Freestyler> {\n  if (!loadedFreestylerModule) {\n    loadedFreestylerModule = await import('./freestyler.js');\n  }\n  return loadedFreestylerModule;\n}\n\nfunction isFeatureAvailable(): boolean {\n  return Root.Runtime.Runtime.queryParam('freestyler_dogfood') === 'true';\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'freestyler',\n  commandPrompt: i18nLazyString(UIStrings.showFreestyler),\n  title: i18nLazyString(UIStrings.freestyler),\n  order: 10,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  hasToolbar: false,\n  condition: isFeatureAvailable,\n  async loadView() {\n    const Freestyler = await loadFreestylerModule();\n    return Freestyler.FreestylerPanel.instance();\n  },\n});\n"]}