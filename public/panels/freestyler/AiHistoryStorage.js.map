{"version":3,"file":"AiHistoryStorage.js","sourceRoot":"","sources":["../../../../../../front_end/panels/freestyler/AiHistoryStorage.ts"],"names":[],"mappings":"AACA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AAItD,IAAI,QAAQ,GAA0B,IAAI,CAAC;AAC3C,MAAM,OAAO,gBAAgB;IAC3B,eAAe,CAA6C;IAC5D,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IAElC;QACE,oFAAoF;QACpF,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,+BAA+B,CAAC,CAAC;IAC5G,CAAC;IAED,YAAY;QACV,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,UAA2B;QAClD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QAC5C,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;YACtD,MAAM,iBAAiB,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,CAAC,CAAC;YACjF,IAAI,iBAAiB,KAAK,CAAC,CAAC,EAAE,CAAC;gBAC7B,OAAO,CAAC,iBAAiB,CAAC,GAAG,UAAU,CAAC;YAC1C,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC3B,CAAC;YACD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC;gBAAS,CAAC;YACT,OAAO,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,EAAU;QACjC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QAC5C,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;YACtD,IAAI,CAAC,eAAe,CAAC,GAAG,CACpB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,CAC3C,CAAC;QACJ,CAAC;gBAAS,CAAC;YACT,OAAO,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAED,KAAK,CAAC,SAAS;QACb,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QAC5C,IAAI,CAAC;YACH,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/B,CAAC;gBAAS,CAAC;YACT,OAAO,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;IACpC,CAAC;IAED,MAAM,CAAC,QAAQ;QACb,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,QAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAC;QACpC,CAAC;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF","sourcesContent":["\n// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\n\nimport type {SerializedAgent} from './AiAgent.js';\n\nlet instance: AiHistoryStorage|null = null;\nexport class AiHistoryStorage {\n  #historySetting: Common.Settings.Setting<SerializedAgent[]>;\n  #mutex = new Common.Mutex.Mutex();\n\n  constructor() {\n    // This should not throw as we should be creating the setting in the `-meta.ts` file\n    this.#historySetting = Common.Settings.Settings.instance().moduleSetting('ai-assistance-history-entries');\n  }\n\n  clearForTest(): void {\n    this.#historySetting.set([]);\n  }\n\n  async upsertHistoryEntry(agentEntry: SerializedAgent): Promise<void> {\n    const release = await this.#mutex.acquire();\n    try {\n      const history = await this.#historySetting.forceGet();\n      const historyEntryIndex = history.findIndex(entry => entry.id === agentEntry.id);\n      if (historyEntryIndex !== -1) {\n        history[historyEntryIndex] = agentEntry;\n      } else {\n        history.push(agentEntry);\n      }\n      this.#historySetting.set(history);\n    } finally {\n      release();\n    }\n  }\n\n  async deleteHistoryEntry(id: string): Promise<void> {\n    const release = await this.#mutex.acquire();\n    try {\n      const history = await this.#historySetting.forceGet();\n      this.#historySetting.set(\n          history.filter(entry => entry.id !== id),\n      );\n    } finally {\n      release();\n    }\n  }\n\n  async deleteAll(): Promise<void> {\n    const release = await this.#mutex.acquire();\n    try {\n      this.#historySetting.set([]);\n    } finally {\n      release();\n    }\n  }\n\n  getHistory(): SerializedAgent[] {\n    return this.#historySetting.get();\n  }\n\n  static instance(): AiHistoryStorage {\n    if (!instance) {\n      instance = new AiHistoryStorage();\n    }\n    return instance;\n  }\n}\n"]}