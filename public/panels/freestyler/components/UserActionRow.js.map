{"version":3,"file":"UserActionRow.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/freestyler/components/UserActionRow.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport userActionRowStyles from './userActionRow.css.js';\n\nconst {html} = LitHtml;\n\n/*\n* Strings that don't need to be translated at this time.\n*/\nconst UIStringsNotTranslate = {\n\n  /**\n   * @description The title of the button that allows submitting positive\n   * feedback about the response for AI assistance.\n   */\n  thumbsUp: 'Good response',\n  /**\n   * @description The title of the button that allows submitting negative\n   * feedback about the response for AI assistance.\n   */\n  thumbsDown: 'Bad response',\n  /**\n   * @description The placeholder text for the feedback input.\n   */\n  provideFeedbackPlaceholder: 'Provide additional feedback',\n  /**\n   * @description The disclaimer text that tells the user what will be shared\n   * and what will be stored.\n   */\n  disclaimer: 'Submitted feedback will also include your conversation',\n  /**\n   * @description The button text for the action of submitting feedback.\n   */\n  submit: 'Submit',\n  /**\n   * @description The header of the feedback form asking.\n   */\n  whyThisRating: 'Why did you choose this rating? (optional)',\n  /**\n   * @description The button text for the action that hides the feedback form.\n   */\n  close: 'Close',\n  /**\n   * @description The title of the button that opens a page to report a legal\n   * issue with the AI assistance message.\n   */\n  report: 'Report legal issue',\n  /**\n   * @description The title of the button for scrolling to see next suggestions\n   */\n  scrollToNext: 'Scroll to next suggestions',\n  /**\n   * @description The title of the button for scrolling to see previous suggestions\n   */\n  scrollToPrevious: 'Scroll to previous suggestions',\n};\n\nconst lockedString = i18n.i18n.lockedString;\n\nconst REPORT_URL = 'https://support.google.com/legal/troubleshooter/1114905?hl=en#ts=1115658%2C13380504' as\n    Platform.DevToolsPath.UrlString;\nconst SCROLL_ROUNDING_OFFSET = 1;\nexport interface UserActionRowProps {\n  showRateButtons: boolean;\n  onFeedbackSubmit: (rate: Host.AidaClient.Rating, feedback?: string) => void;\n  suggestions?: [string, ...string[]];\n  handleSuggestionClick: (suggestion: string) => void;\n  canShowFeedbackForm: boolean;\n}\n\nexport class UserActionRow extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #props: UserActionRowProps;\n  #isShowingFeedbackForm = false;\n  #currentRating?: Host.AidaClient.Rating;\n  #isSubmitButtonDisabled = true;\n  #suggestionsScrollContainerRef = LitHtml.Directives.createRef<HTMLElement>();\n  #suggestionsLeftScrollButtonContainerRef = LitHtml.Directives.createRef<HTMLElement>();\n  #suggestionsRightScrollButtonContainerRef = LitHtml.Directives.createRef<HTMLElement>();\n  #suggestionsResizeObserver = new ResizeObserver(() => this.#handleSuggestionsScrollOrResize());\n  #suggestionsEvaluateLayoutThrottler = new Common.Throttler.Throttler(50);\n\n  constructor(props: UserActionRowProps) {\n    super();\n    this.#props = props;\n  }\n\n  set props(props: UserActionRowProps) {\n    this.#props = props;\n    this.#render();\n    this.#evaluateSuggestionsLayout();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [userActionRowStyles, Input.textInputStyles];\n    this.#render();\n    this.#evaluateSuggestionsLayout();\n\n    if (this.#suggestionsScrollContainerRef.value) {\n      this.#suggestionsResizeObserver.observe(this.#suggestionsScrollContainerRef.value);\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.#suggestionsResizeObserver.disconnect();\n  }\n\n  #handleSuggestionsScrollOrResize = (): void => {\n    void this.#suggestionsEvaluateLayoutThrottler.schedule(() => {\n      this.#evaluateSuggestionsLayout();\n      return Promise.resolve();\n    });\n  };\n\n  #scrollSuggestionsScrollContainer = (direction: 'left'|'right'): void => {\n    const suggestionsScrollContainer = this.#suggestionsScrollContainerRef.value;\n    if (!suggestionsScrollContainer) {\n      return;\n    }\n\n    suggestionsScrollContainer.scroll({\n      top: 0,\n      left: direction === 'left' ? suggestionsScrollContainer.scrollLeft - suggestionsScrollContainer.clientWidth :\n                                   suggestionsScrollContainer.scrollLeft + suggestionsScrollContainer.clientWidth,\n      behavior: 'smooth',\n    });\n  };\n\n  #handleRateClick(rating: Host.AidaClient.Rating): void {\n    if (this.#currentRating === rating) {\n      this.#currentRating = undefined;\n      this.#isShowingFeedbackForm = false;\n      // This effectively reset the user rating\n      this.#props.onFeedbackSubmit(Host.AidaClient.Rating.SENTIMENT_UNSPECIFIED);\n      this.#render();\n      return;\n    }\n\n    this.#currentRating = rating;\n    this.#isShowingFeedbackForm = this.#props.canShowFeedbackForm;\n    this.#props.onFeedbackSubmit(this.#currentRating);\n    this.#render();\n  }\n\n  #handleClose = (): void => {\n    this.#isShowingFeedbackForm = false;\n    this.#render();\n  };\n\n  #handleSubmit = (ev: SubmitEvent): void => {\n    ev.preventDefault();\n    const input = this.#shadow.querySelector('.feedback-input') as HTMLInputElement;\n    if (!this.#currentRating || !input || !input.value) {\n      return;\n    }\n    this.#props.onFeedbackSubmit(this.#currentRating, input.value);\n    this.#isShowingFeedbackForm = false;\n    this.#render();\n  };\n\n  #handleReportClick = (): void => {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(REPORT_URL);\n  };\n\n  #renderButtons(): LitHtml.LitTemplate {\n    // clang-format off\n    const rateButtons = html`\n      <devtools-button\n          .data=${{\n            variant: Buttons.Button.Variant.ICON,\n            size: Buttons.Button.Size.SMALL,\n            iconName: 'thumb-up',\n            toggledIconName: 'thumb-up-filled',\n            toggled: this.#currentRating === Host.AidaClient.Rating.POSITIVE,\n            toggleType: Buttons.Button.ToggleType.PRIMARY,\n            title: lockedString(UIStringsNotTranslate.thumbsUp),\n            jslogContext: 'thumbs-up',\n          } as Buttons.Button.ButtonData}\n          @click=${() => this.#handleRateClick(Host.AidaClient.Rating.POSITIVE)}\n        ></devtools-button>\n        <devtools-button\n          .data=${{\n            variant: Buttons.Button.Variant.ICON,\n            size: Buttons.Button.Size.SMALL,\n            iconName: 'thumb-down',\n            toggledIconName: 'thumb-down-filled',\n            toggled: this.#currentRating === Host.AidaClient.Rating.NEGATIVE,\n            toggleType: Buttons.Button.ToggleType.PRIMARY,\n            title: lockedString(UIStringsNotTranslate.thumbsDown),\n            jslogContext: 'thumbs-down',\n          } as Buttons.Button.ButtonData}\n          @click=${() => this.#handleRateClick(Host.AidaClient.Rating.NEGATIVE)}\n        ></devtools-button>\n        <div class=\"vertical-separator\"></div>`;\n    // clang-format off\n\n    // clang-format off\n    return html`\n    <div class=\"rate-buttons\">\n      ${this.#props.showRateButtons ? rateButtons : LitHtml.nothing}\n      <devtools-button\n        .data=${\n          {\n            variant: Buttons.Button.Variant.ICON,\n            size: Buttons.Button.Size.SMALL,\n            title: lockedString(UIStringsNotTranslate.report),\n            iconName: 'report',\n            jslogContext: 'report',\n          } as Buttons.Button.ButtonData\n        }\n        @click=${this.#handleReportClick}\n      ></devtools-button>\n    </div>`;\n    // clang-format on\n  }\n\n  #handleInputChange = (event: KeyboardEvent): void => {\n    const value = (event.target as HTMLInputElement).value;\n    const disableSubmit = !value;\n    if (disableSubmit !== this.#isSubmitButtonDisabled) {\n      this.#isSubmitButtonDisabled = disableSubmit;\n      this.#render();\n    }\n  };\n\n  #evaluateSuggestionsLayout = (): void => {\n    const suggestionsScrollContainer = this.#suggestionsScrollContainerRef.value;\n    const leftScrollButtonContainer = this.#suggestionsLeftScrollButtonContainerRef.value;\n    const rightScrollButtonContainer = this.#suggestionsRightScrollButtonContainerRef.value;\n    if (!suggestionsScrollContainer || !leftScrollButtonContainer || !rightScrollButtonContainer) {\n      return;\n    }\n\n    const shouldShowLeftButton = suggestionsScrollContainer.scrollLeft > SCROLL_ROUNDING_OFFSET;\n    const shouldShowRightButton =\n        suggestionsScrollContainer.scrollLeft + suggestionsScrollContainer.offsetWidth + SCROLL_ROUNDING_OFFSET <\n        suggestionsScrollContainer.scrollWidth;\n    leftScrollButtonContainer.classList.toggle('hidden', !shouldShowLeftButton);\n    rightScrollButtonContainer.classList.toggle('hidden', !shouldShowRightButton);\n  };\n\n  #renderFeedbackForm(): LitHtml.LitTemplate {\n    if (!this.#isShowingFeedbackForm) {\n      return LitHtml.nothing;\n    }\n\n    // clang-format off\n    return html`\n      <form class=\"feedback-form\" @submit=${this.#handleSubmit}>\n        <div class=\"feedback-header\">\n          <h4 class=\"feedback-title\">${lockedString(\n              UIStringsNotTranslate.whyThisRating,\n          )}</h4>\n          <devtools-button\n            aria-label=${lockedString(UIStringsNotTranslate.close)}\n            @click=${this.#handleClose}\n            .data=${\n              {\n                variant: Buttons.Button.Variant.ICON,\n                iconName: 'cross',\n                size: Buttons.Button.Size.SMALL,\n                title: lockedString(UIStringsNotTranslate.close),\n                jslogContext: 'close',\n              } as Buttons.Button.ButtonData\n            }\n          ></devtools-button>\n        </div>\n        <input\n          type=\"text\"\n          class=\"devtools-text-input feedback-input\"\n          @input=${this.#handleInputChange}\n          placeholder=${lockedString(\n           UIStringsNotTranslate.provideFeedbackPlaceholder,\n          )}\n          jslog=${VisualLogging.textField('feedback').track({ keydown: 'Enter' })}\n        >\n        <span class=\"feedback-disclaimer\">${\n          lockedString(UIStringsNotTranslate.disclaimer)\n        }</span>\n        <devtools-button\n        aria-label=${lockedString(UIStringsNotTranslate.submit)}\n        .data=${\n          {\n              type: 'submit',\n              disabled: this.#isSubmitButtonDisabled,\n              variant: Buttons.Button.Variant.OUTLINED,\n              size: Buttons.Button.Size.SMALL,\n              title: lockedString(UIStringsNotTranslate.submit),\n              jslogContext: 'send',\n            } as Buttons.Button.ButtonData\n          }\n        >${\n          lockedString(UIStringsNotTranslate.submit)\n        }</devtools-button>\n      </div>\n    </form>\n    `;\n    // clang-format on\n  }\n\n  #renderSuggestions(): LitHtml.LitTemplate {\n    if (!this.#props.suggestions) {\n      return LitHtml.nothing;\n    }\n    // clang-format off\n    return html`<div class=\"suggestions-container\">\n      <div class=\"scroll-button-container left hidden\" ${LitHtml.Directives.ref(this.#suggestionsLeftScrollButtonContainerRef)}>\n        <devtools-button\n          class='scroll-button'\n          .data=${{\n            variant: Buttons.Button.Variant.ICON,\n            size: Buttons.Button.Size.SMALL,\n            iconName: 'chevron-left',\n            title: lockedString(UIStringsNotTranslate.scrollToPrevious),\n            jslogContext: 'chevron-left',\n          } as Buttons.Button.ButtonData}\n          @click=${() => this.#scrollSuggestionsScrollContainer('left')}\n        ></devtools-button>\n      </div>\n      <div class=\"suggestions-scroll-container\" @scroll=${this.#handleSuggestionsScrollOrResize} ${LitHtml.Directives.ref(this.#suggestionsScrollContainerRef)}>\n        ${this.#props.suggestions?.map(suggestion => html`<devtools-button\n          class='suggestion'\n          .data=${{\n            variant: Buttons.Button.Variant.OUTLINED,\n            title: suggestion,\n            jslogContext: 'suggestion',\n          } as Buttons.Button.ButtonData}\n          @click=${() => this.#props.handleSuggestionClick(suggestion)}\n        >${suggestion}</devtools-button>`)}\n      </div>\n      <div class=\"scroll-button-container right hidden\" ${LitHtml.Directives.ref(this.#suggestionsRightScrollButtonContainerRef)}>\n        <devtools-button\n          class='scroll-button'\n          .data=${{\n            variant: Buttons.Button.Variant.ICON,\n            size: Buttons.Button.Size.SMALL,\n            iconName: 'chevron-right',\n            title: lockedString(UIStringsNotTranslate.scrollToNext),\n            jslogContext: 'chevron-right',\n          } as Buttons.Button.ButtonData}\n          @click=${() => this.#scrollSuggestionsScrollContainer('right')}\n        ></devtools-button>\n      </div>\n    </div>`;\n    // clang-format on\n  }\n\n  #render(): void {\n    // clang-format off\n    LitHtml.render(\n      html`\n        <div class=\"feedback\">\n          ${this.#renderButtons()}\n          ${this.#renderSuggestions()}\n        </div>\n        ${this.#renderFeedbackForm()}\n      `,\n      this.#shadow,\n      {host: this},\n    );\n    // clang-format on\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-user-action-row': UserActionRow;\n  }\n}\n\ncustomElements.define('devtools-user-action-row', UserActionRow);\n"]}