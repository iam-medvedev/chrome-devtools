{"version":3,"file":"FreestylerChatUi.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/freestyler/components/FreestylerChatUi.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment, getGetHostConfigStub} from '../../../testing/EnvironmentHelpers.js';\nimport * as Marked from '../../../third_party/marked/marked.js';\nimport * as MarkdownView from '../../../ui/components/markdown_view/markdown_view.js';\nimport * as Freestyler from '../freestyler.js';\n\nconst {MarkdownRendererWithCodeBlock} = Freestyler.FOR_TEST;\n\ndescribeWithEnvironment('FreestylerChatUi', () => {\n  describe('MarkdownRendererWithCodeBlock', () => {\n    it('should transform code token for multiline code blocks with `css` language written in the first line', () => {\n      const renderer = new MarkdownRendererWithCodeBlock();\n      const templateForTokenStub =\n          sinon.stub(MarkdownView.MarkdownView.MarkdownInsightRenderer.prototype, 'templateForToken');\n      const codeBlock = `\\`\\`\\`\ncss\n* {\n  color: red;\n}\n\\`\\`\\``;\n      const codeToken = Marked.Marked.lexer(codeBlock)[0] as Marked.Marked.Tokens.Code;\n      assert.isEmpty(codeToken.lang);\n      renderer.renderToken(codeToken);\n\n      sinon.assert.calledWith(templateForTokenStub, sinon.match({\n        lang: 'css',\n        text: `* {\n  color: red;\n}`,\n      }));\n    });\n\n    describe('link/image stripping', () => {\n      const linkCases = [\n        '[link text](https://z.com)',\n        'A response with [link text](https://z.com).',\n        '[*link text*](https://z.com)',\n        '[**text** `with code`](https://z.com).',\n        'plain link https://z.com .',\n        'link in quotes \\'https://z.com\\' .',\n      ];\n\n      const renderToElem = (string: string, renderer: MarkdownView.MarkdownView.MarkdownLitRenderer): Element => {\n        const component = new MarkdownView.MarkdownView.MarkdownView();\n        renderElementIntoDOM(component, {allowMultipleChildren: true});\n        component.data = {tokens: Marked.Marked.lexer(string), renderer};\n        assert.exists(component.shadowRoot?.firstElementChild);\n        return component.shadowRoot.firstElementChild;\n      };\n\n      it('strips links if stripLinks true', () => {\n        const linklessRenderer = new MarkdownRendererWithCodeBlock({stripLinks: true});\n        for (const linkCase of linkCases) {\n          const elem = renderToElem(linkCase, linklessRenderer);\n          assert.strictEqual(elem.querySelectorAll('a, x-link, devtools-link').length, 0);\n          assert.strictEqual(\n              ['<a', '<x-link', '<devtools-link'].some(tagName => elem.outerHTML.includes(tagName)), false);\n          assert.ok(elem.textContent?.includes('( https://z.com )'), linkCase);\n        }\n      });\n\n      it('leaves links intact by default', () => {\n        const linkfulRenderer = new MarkdownRendererWithCodeBlock();\n        for (const linkCase of linkCases) {\n          const elem = renderToElem(linkCase, linkfulRenderer);\n          assert.strictEqual(elem.querySelectorAll('a, x-link, devtools-link').length, 1);\n          assert.strictEqual(\n              ['<a', '<x-link', '<devtools-link'].some(tagName => elem.outerHTML.includes(tagName)), true);\n          assert.strictEqual(elem.textContent?.includes('( https://z.com )'), false);\n        }\n      });\n\n      const imageCases = [\n        '![image alt](https://z.com/i.png)',\n        'A response with ![image alt](https://z.com/i.png).',\n        '![*image alt*](https://z.com/i.png)',\n        '![**text** `with code`](https://z.com/i.png).',\n        'plain image href https://z.com/i.png .',\n        'link in quotes \\'https://z.com/i.png\\' .',\n      ];\n\n      it('strips images if stripLinks true', () => {\n        const linklessRenderer = new MarkdownRendererWithCodeBlock({stripLinks: true});\n        for (const imageCase of imageCases) {\n          const elem = renderToElem(imageCase, linklessRenderer);\n          assert.strictEqual(elem.querySelectorAll('a, x-link, devtools-link, img, devtools-markdown-image').length, 0);\n          assert.strictEqual(\n              ['<a', '<x-link', '<devtools-link', '<img', '<devtools-markdown-image'].some(\n                  tagName => elem.outerHTML.includes(tagName)),\n              false);\n\n          assert.ok(elem.textContent?.includes('( https://z.com/i.png )'), imageCase);\n        }\n      });\n    });\n  });\n\n  function getProp(options: Partial<Freestyler.Props>): Freestyler.Props {\n    const noop = () => {};\n    const messages: Freestyler.ChatMessage[] = options.messages ?? [];\n    return {\n      onTextSubmit: noop,\n      onInspectElementClick: noop,\n      onFeedbackSubmit: noop,\n      onCancelClick: noop,\n      onContextClick: noop,\n      onNewConversation: noop,\n      inspectElementToggled: false,\n      state: Freestyler.State.CHAT_VIEW,\n      agentType: Freestyler.AgentType.FREESTYLER,\n      aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n      messages,\n      selectedContext: new Freestyler.NodeContext({} as unknown as SDK.DOMModel.DOMNode),\n      isLoading: false,\n      canShowFeedbackForm: false,\n      userInfo: {},\n      blockedByCrossOrigin: false,\n      stripLinks: false,\n      isReadOnly: false,\n      ...options,\n    };\n  }\n\n  describe('SideEffects', () => {\n    it('should show SideEffects when the step contains \"sideEffect\" object', async () => {\n      const props = getProp({\n        messages: [\n          {\n            entity: Freestyler.ChatMessageEntity.MODEL,\n            steps: [\n              {\n                isLoading: false,\n                title: 'Updating element styles',\n                thought: 'Updating element styles',\n                code: '$0.style.background = \"blue\";',\n                sideEffect: {\n                  onAnswer: () => {},\n                },\n              },\n            ],\n          },\n        ],\n      });\n      const chat = new Freestyler.FreestylerChatUi(props);\n      renderElementIntoDOM(chat);\n\n      const sideEffect = chat.shadowRoot!.querySelector('.side-effect-confirmation');\n      assert.exists(sideEffect);\n    });\n\n    it('shows the disabled view when the state is CONSENT_VIEW', async () => {\n      const props = getProp({\n        state: Freestyler.State.CONSENT_VIEW,\n      });\n      const chat = new Freestyler.FreestylerChatUi(props);\n      renderElementIntoDOM(chat);\n\n      const optIn = chat.shadowRoot?.querySelector('.disabled-view');\n      assert.strictEqual(\n          optIn?.textContent?.trim(), 'Turn on AI assistance in Settings to get help with understanding CSS styles');\n      const chatInput = chat.shadowRoot?.querySelector('.chat-input') as HTMLTextAreaElement;\n      assert.isTrue(chatInput.disabled);\n      assert.strictEqual(chatInput.placeholder, 'Follow the steps above to ask a question');\n    });\n\n    it('shows the disabled view when the AIDA is not available', async () => {\n      const props = getProp({\n        state: Freestyler.State.CHAT_VIEW,\n        aidaAvailability: Host.AidaClient.AidaAccessPreconditions.NO_INTERNET,\n      });\n      const chat = new Freestyler.FreestylerChatUi(props);\n      renderElementIntoDOM(chat);\n\n      const optIn = chat.shadowRoot?.querySelector('.disabled-view');\n      assert.strictEqual(optIn?.textContent?.trim(), 'Check your internet connection and try again');\n      const chatInput = chat.shadowRoot?.querySelector('.chat-input') as HTMLTextAreaElement;\n      assert.isTrue(chatInput.disabled);\n      assert.strictEqual(chatInput.placeholder, 'Ask a question about the selected element');\n    });\n\n    describe('no agent empty state', () => {\n      it('should show feature cards for enabled features', () => {\n        const stub = getGetHostConfigStub({\n          devToolsFreestyler: {\n            enabled: true,\n          },\n          devToolsAiAssistanceNetworkAgent: {\n            enabled: true,\n          },\n          devToolsAiAssistanceFileAgent: {\n            enabled: true,\n          },\n          devToolsAiAssistancePerformanceAgent: {\n            enabled: true,\n          },\n        });\n        const props = getProp({\n          agentType: undefined,\n        });\n        const chat = new Freestyler.FreestylerChatUi(props);\n        renderElementIntoDOM(chat);\n        const featureCards = chat.shadowRoot?.querySelectorAll('.feature-card');\n        assert.isDefined(featureCards);\n        assert.strictEqual(featureCards?.length, 4);\n        assert.strictEqual(featureCards[0].querySelector('.feature-card-content h3')?.textContent, 'CSS styles');\n        assert.strictEqual(featureCards[1].querySelector('.feature-card-content h3')?.textContent, 'Network');\n        assert.strictEqual(featureCards[2].querySelector('.feature-card-content h3')?.textContent, 'Files');\n        assert.strictEqual(featureCards[3].querySelector('.feature-card-content h3')?.textContent, 'Performance');\n\n        stub.restore();\n      });\n\n      it('should not show any feature cards if none of the entrypoints are available', () => {\n        const stub = getGetHostConfigStub({\n          devToolsFreestyler: {\n            enabled: false,\n          },\n          devToolsAiAssistanceNetworkAgent: {\n            enabled: false,\n          },\n          devToolsAiAssistanceFileAgent: {\n            enabled: false,\n          },\n          devToolsAiAssistancePerformanceAgent: {\n            enabled: false,\n          },\n        });\n        const props = getProp({\n          agentType: undefined,\n        });\n        const chat = new Freestyler.FreestylerChatUi(props);\n        renderElementIntoDOM(chat);\n        const featureCards = chat.shadowRoot?.querySelectorAll('.feature-card');\n        assert.isDefined(featureCards);\n        assert.strictEqual(featureCards?.length, 0);\n\n        stub.restore();\n      });\n    });\n  });\n});\n"]}