{"version":3,"file":"FreestylerChatUi.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/freestyler/components/FreestylerChatUi.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport * as Marked from '../../../third_party/marked/marked.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as MarkdownView from '../../../ui/components/markdown_view/markdown_view.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport {Step, type StepData} from '../FreestylerAgent.js';\n\nimport freestylerChatUiStyles from './freestylerChatUi.css.js';\n\n/*\n  * TODO(nvitkov): b/346933425\n  * Temporary string that should not be translated\n  * as they may change often during development.\n  */\nconst TempUIStrings = {\n  /**\n   *@description Placeholder text for the chat UI input.\n   */\n  inputPlaceholder: 'Ask a question about the selected element',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimer: 'Freestyler may display inaccurate information and may not get it right',\n  /**\n   *@description Title for the send icon button.\n   */\n  sendButtonTitle: 'Send',\n  /**\n   *@description Title for the cancel icon button.\n   */\n  cancelButtonTitle: 'Cancel',\n  /**\n   *@description Label for the \"select an element\" button.\n   */\n  selectAnElement: 'Select an element',\n  /**\n   *@description Text for the empty state of the Freestyler panel.\n   */\n  emptyStateText: 'How can I help you?',\n  /**\n   * @description The title of the button that allows submitting positive\n   * feedback about the response for freestyler.\n   */\n  thumbsUp: 'Thumbs up',\n  /**\n   * @description The title of the button that allows submitting negative\n   * feedback about the response for freestyler.\n   */\n  thumbsDown: 'Thumbs down',\n  /**\n   * @description The error message when the user is not logged in into Chrome.\n   */\n  notLoggedIn: 'This feature is only available when you sign into Chrome with your Google account.',\n  /**\n   * @description The error message when the user is not logged in into Chrome.\n   */\n  syncIsOff: 'This feature requires you to turn on Chrome sync.',\n  /**\n   * @description Message shown when the user is offline.\n   */\n  offline: 'Check your internet connection and try again.',\n  /**\n   *@description Heading for the consent view.\n   */\n  consentScreenHeading: 'Things to consider',\n  /**\n   *@description Title of the button for accepting in the consent screen.\n   */\n  acceptButtonTitle: 'Accept',\n  /**\n   *@description Consent view main text\n   */\n  consentTextAiDisclaimer: 'This feature uses AI and won\\'t always get it right.',\n  /**\n   *@description Consent view data collection text\n   */\n  consentTextDataDisclaimer:\n      'Your inputs and the information from the page you are using this feature for are sent to Google.',\n  /**\n   *@description Consent view data visibility text\n   */\n  consentTextVisibilityDisclaimer: 'Data may be seen by trained reviewers to improve this feature.',\n};\n// const str_ = i18n.i18n.registerUIStrings('panels/freestyler/components/FreestylerChatUi.ts', UIStrings);\n// const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/* eslint-disable  rulesdir/l10n_i18nString_call_only_with_uistrings */\nconst i18nString = i18n.i18n.lockedString;\n\nfunction getInputPlaceholderString(aidaAvailability: Host.AidaClient.AidaAvailability): string {\n  switch (aidaAvailability) {\n    case Host.AidaClient.AidaAvailability.AVAILABLE:\n      return i18nString(TempUIStrings.inputPlaceholder);\n    case Host.AidaClient.AidaAvailability.NO_ACCOUNT_EMAIL:\n      return i18nString(TempUIStrings.notLoggedIn);\n    case Host.AidaClient.AidaAvailability.NO_ACTIVE_SYNC:\n      return i18nString(TempUIStrings.syncIsOff);\n    case Host.AidaClient.AidaAvailability.NO_INTERNET:\n      return i18nString(TempUIStrings.offline);\n  }\n}\n\nexport enum ChatMessageEntity {\n  MODEL = 'model',\n  USER = 'user',\n}\n\nexport type ChatMessage = {\n  entity: ChatMessageEntity.USER,\n  text: string,\n}|{\n  entity: ChatMessageEntity.MODEL,\n  steps: StepData[],\n};\n\nexport const enum State {\n  CONSENT_VIEW = 'consent-view',\n  CHAT_VIEW = 'chat-view',\n}\n\nexport const enum Rating {\n  POSITIVE = 'positive',\n  NEGATIVE = 'negative',\n}\n\nexport type Props = {\n  onTextSubmit: (text: string) => void,\n  onInspectElementClick: () => void,\n  onRateClick: (rpcId: number, rate: Rating) => void,\n  onAcceptConsentClick: () => void,\n  onCancelClick: () => void,\n  inspectElementToggled: boolean,\n  state: State,\n  aidaAvailability: Host.AidaClient.AidaAvailability,\n  messages: ChatMessage[],\n  selectedNode: SDK.DOMModel.DOMNode|null,\n  isLoading: boolean,\n};\n\nexport class FreestylerChatUi extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-freestyler-chat-ui`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #markdownRenderer = new MarkdownView.MarkdownView.MarkdownInsightRenderer();\n  #props: Props;\n\n  constructor(props: Props) {\n    super();\n    this.#props = props;\n  }\n\n  set props(props: Props) {\n    this.#props = props;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [freestylerChatUiStyles];\n    this.#render();\n  }\n\n  focusTextInput(): void {\n    const input = this.#shadow.querySelector('.chat-input') as HTMLInputElement;\n    if (!input) {\n      return;\n    }\n\n    input.focus();\n  }\n\n  #handleSubmit = (ev: SubmitEvent): void => {\n    ev.preventDefault();\n    const input = this.#shadow.querySelector('.chat-input') as HTMLInputElement;\n    if (!input || !input.value) {\n      return;\n    }\n    this.#props.onTextSubmit(input.value);\n    input.value = '';\n  };\n\n  #handleCancel = (ev: SubmitEvent): void => {\n    ev.preventDefault();\n\n    if (!this.#props.isLoading) {\n      return;\n    }\n\n    this.#props.onCancelClick();\n  };\n\n  #renderRateButtons(rpcId: number): LitHtml.TemplateResult {\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"rate-buttons\">\n        <${Buttons.Button.Button.litTagName}\n          .data=${{\n            variant: Buttons.Button.Variant.ICON,\n            size: Buttons.Button.Size.SMALL,\n            iconName: 'thumb-up',\n            active: false,\n            title: i18nString(TempUIStrings.thumbsUp),\n            jslogContext: 'thumbs-up',\n          } as Buttons.Button.ButtonData}\n          @click=${() => this.#props.onRateClick(rpcId, Rating.POSITIVE)}\n        ></${Buttons.Button.Button.litTagName}>\n        <${Buttons.Button.Button.litTagName}\n          .data=${{\n            variant: Buttons.Button.Variant.ICON,\n            size: Buttons.Button.Size.SMALL,\n            iconName: 'thumb-down',\n            active: false,\n            title: i18nString(TempUIStrings.thumbsDown),\n            jslogContext: 'thumbs-down',\n          } as Buttons.Button.ButtonData}\n          @click=${() => this.#props.onRateClick(rpcId, Rating.NEGATIVE)}\n        ></${Buttons.Button.Button.litTagName}>\n      </div>`;\n    // clang-format on\n  }\n\n  #renderTextAsMarkdown(text: string): LitHtml.TemplateResult {\n    let tokens = [];\n    try {\n      tokens = Marked.Marked.lexer(text);\n      for (const token of tokens) {\n        // Try to render all the tokens to make sure that\n        // they all have a template defined for them. If there\n        // isn't any template defined for a token, we'll fallback\n        // to rendering the text as plain text instead of markdown.\n        this.#markdownRenderer.renderToken(token);\n      }\n    } catch (err) {\n      // The tokens were not parsed correctly or\n      // one of the tokens are not supported, so we\n      // continue to render this as text.\n      return LitHtml.html`${text}`;\n    }\n\n    // clang-format off\n    return LitHtml.html`<${MarkdownView.MarkdownView.MarkdownView.litTagName}\n      .data=${{tokens, renderer: this.#markdownRenderer} as MarkdownView.MarkdownView.MarkdownViewData}>\n    </${MarkdownView.MarkdownView.MarkdownView.litTagName}>`;\n    // clang-format on\n  }\n\n  #renderStep(step: StepData): LitHtml.TemplateResult {\n    if (step.step === Step.ACTION) {\n      // clang-format off\n      return LitHtml.html`\n        <div class=\"action-result\">\n          <${MarkdownView.CodeBlock.CodeBlock.litTagName}\n            .code=${step.code.trim()}\n            .codeLang=${'js'}\n            .displayToolbar=${false}\n          ></${MarkdownView.CodeBlock.CodeBlock.litTagName}>\n          <div class=\"js-code-output\">${step.output}</div>\n        </div>\n      `;\n      // clang-format on\n    }\n\n    if (step.step === Step.ERROR) {\n      return LitHtml.html`<p class=\"error-step\">${this.#renderTextAsMarkdown(step.text)}</p>`;\n    }\n\n    return LitHtml.html`<p>${this.#renderTextAsMarkdown(step.text)}</p>`;\n  }\n\n  #renderChatMessage = (message: ChatMessage, {isLast}: {isLast: boolean}): LitHtml.TemplateResult => {\n    if (message.entity === ChatMessageEntity.USER) {\n      return LitHtml.html`<div class=\"chat-message query\">${message.text}</div>`;\n    }\n\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"chat-message answer\">\n        ${message.steps.map(\n          step =>\n            LitHtml.html`${this.#renderStep(step)}${\n              step.rpcId !== undefined\n                ? this.#renderRateButtons(step.rpcId)\n                : LitHtml.nothing\n            }`,\n        )}\n        ${\n          this.#props.isLoading && isLast\n            ? LitHtml.html`<div class='chat-loading' >Loading...</div>`\n            : LitHtml.nothing\n        }\n      </div>\n    `;\n    // clang-format on\n  };\n\n  #renderSelectAnElement = (): LitHtml.TemplateResult => {\n    // clang-format off\n    return LitHtml.html`\n      <${Buttons.Button.Button.litTagName} .data=${{\n        variant: Buttons.Button.Variant.TEXT,\n        size: Buttons.Button.Size.SMALL,\n        iconName: 'select-element',\n        toggledIconName: 'select-element',\n        toggleType: Buttons.Button.ToggleType.PRIMARY,\n        toggled: this.#props.inspectElementToggled,\n        title: i18nString(TempUIStrings.sendButtonTitle),\n      } as Buttons.Button.ButtonData} @click=${this.#props.onInspectElementClick}>\n        <span class=\"select-an-element-text\">${i18nString(TempUIStrings.selectAnElement)}</span>\n      </${Buttons.Button.Button.litTagName}>\n    `;\n    // clang-format on\n  };\n\n  #renderMessages = (): LitHtml.TemplateResult => {\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"messages-container\">\n        ${this.#props.messages.map((message, _, array) =>\n          this.#renderChatMessage(message, {isLast: array.at(-1) === message}),\n        )}\n      </div>\n    `;\n    // clang-format on\n  };\n\n  #renderEmptyState = (): LitHtml.TemplateResult => {\n    // clang-format off\n    return LitHtml.html`<div class=\"empty-state-container\">\n      <${IconButton.Icon.Icon.litTagName} name=\"spark\" style=\"width: 36px; height: 36px;\"></${IconButton.Icon.Icon.litTagName}>\n      ${i18nString(TempUIStrings.emptyStateText)}\n    </div>`;\n    // clang-format on\n  };\n\n  #renderChatUi = (): LitHtml.TemplateResult => {\n    // TODO(ergunsh): Show a better UI for the states where Aida client is not available.\n    const isAidaAvailable = this.#props.aidaAvailability === Host.AidaClient.AidaAvailability.AVAILABLE;\n    const isTextInputDisabled = !Boolean(this.#props.selectedNode) || !isAidaAvailable;\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"chat-ui\">\n        ${\n          this.#props.messages.length > 0\n            ? this.#renderMessages()\n            : this.#renderEmptyState()\n        }\n        <form class=\"input-form\" @submit=${this.#handleSubmit}>\n          <div class=\"dom-node-link-container\">\n            ${\n              this.#props.selectedNode\n                ? LitHtml.Directives.until(\n                    Common.Linkifier.Linkifier.linkify(this.#props.selectedNode),\n                  )\n                : this.#renderSelectAnElement()\n            }\n          </div>\n          <div class=\"chat-input-container\">\n            <input type=\"text\" class=\"chat-input\" .disabled=${isTextInputDisabled}\n              placeholder=${getInputPlaceholderString(\n                this.#props.aidaAvailability,\n              )}>\n              ${\n                this.#props.isLoading\n                  ? LitHtml.html`\n                    <${Buttons.Button.Button.litTagName}\n                      class=\"step-actions\"\n                      type=\"button\"\n                      title=${i18nString(TempUIStrings.cancelButtonTitle)}\n                      aria-label=${i18nString(TempUIStrings.cancelButtonTitle)}\n                      jslog=${VisualLogging.action('stop').track({ click: true })}\n                      @click=${this.#handleCancel}\n                      .data=${\n                        {\n                          variant: Buttons.Button.Variant.ICON,\n                          size: Buttons.Button.Size.SMALL,\n                          iconName: 'stop',\n                          title: i18nString(TempUIStrings.cancelButtonTitle),\n                        } as Buttons.Button.ButtonData\n                      }\n                    ></${Buttons.Button.Button.litTagName}>`\n                  : LitHtml.html`\n                    <${Buttons.Button.Button.litTagName}\n                      class=\"step-actions\"\n                      type=\"submit\"\n                      title=${i18nString(TempUIStrings.sendButtonTitle)}\n                      aria-label=${i18nString(TempUIStrings.sendButtonTitle)}\n                      jslog=${VisualLogging.action('send').track({ click: true })}\n                      @click=${this.#handleSubmit}\n                      .data=${\n                        {\n                          variant: Buttons.Button.Variant.ICON,\n                          size: Buttons.Button.Size.SMALL,\n                          iconName: 'send',\n                          title: i18nString(TempUIStrings.sendButtonTitle),\n                        } as Buttons.Button.ButtonData\n                      }\n                    ></${Buttons.Button.Button.litTagName}>`\n              }\n          </div>\n          <span class=\"chat-input-disclaimer\">${i18nString(\n            TempUIStrings.inputDisclaimer,\n          )}</span>\n        </form>\n      </div>\n    `;\n    // clang-format on\n  };\n\n  #renderConsentView = (): LitHtml.TemplateResult => {\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"consent-view\">\n        <h2 tabindex=\"-1\">\n          ${i18nString(TempUIStrings.consentScreenHeading)}\n        </h2>\n        <main>\n          ${i18nString(TempUIStrings.consentTextAiDisclaimer)}\n          <ul>\n            <li>${i18nString(TempUIStrings.consentTextDataDisclaimer)}</li>\n            <li>${i18nString(TempUIStrings.consentTextVisibilityDisclaimer)}</li>\n          </ul>\n          <${Buttons.Button.Button.litTagName}\n            class=\"accept-button\"\n            @click=${this.#props.onAcceptConsentClick}\n            .data=${{\n              variant: Buttons.Button.Variant.PRIMARY,\n              jslogContext: 'accept',\n            } as Buttons.Button.ButtonData}>\n            ${i18nString(TempUIStrings.acceptButtonTitle)}\n          </${Buttons.Button.Button.litTagName}>\n        </main>\n      </div>\n    `;\n    // clang-format on\n  };\n\n  #render(): void {\n    switch (this.#props.state) {\n      case State.CHAT_VIEW:\n        LitHtml.render(this.#renderChatUi(), this.#shadow, {host: this});\n        break;\n      case State.CONSENT_VIEW:\n        LitHtml.render(this.#renderConsentView(), this.#shadow, {host: this});\n        break;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-freestyler-chat-ui': FreestylerChatUi;\n  }\n}\n\ncustomElements.define('devtools-freestyler-chat-ui', FreestylerChatUi);\n"]}