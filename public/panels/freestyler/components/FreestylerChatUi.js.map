{"version":3,"file":"FreestylerChatUi.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/freestyler/components/FreestylerChatUi.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as MarkdownView from '../../../ui/components/markdown_view/markdown_view.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport {Step, type StepData} from '../FreestylerAgent.js';\n\nimport freestylerChatUiStyles from './freestylerChatUi.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Placeholder text for the chat UI input.\n   */\n  inputPlaceholder: 'Ask Freestyler or type / for commands',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimer: 'Freestyler may display inaccurate information and may not get it right',\n  /**\n   *@description Title for the send icon button.\n   */\n  sendButtonTitle: 'Send',\n  /**\n   *@description Label for the \"select an element\" button.\n   */\n  selectAnElement: 'Select an element',\n  /**\n   *@description Text for the empty state of the Freestyler panel.\n   */\n  emptyStateText: 'How can I help you?',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/freestyler/components/FreestylerChatUi.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport enum ChatMessageEntity {\n  MODEL = 'model',\n  USER = 'user',\n}\n\nexport type ChatMessage = {\n  entity: ChatMessageEntity.USER,\n  text: string,\n}|{\n  entity: ChatMessageEntity.MODEL,\n  steps: StepData[],\n};\n\nexport const enum State {\n  CHAT_VIEW = 'chat-view',\n  CHAT_VIEW_LOADING = 'chat-view-loading',\n}\n\nexport type Props = {\n  onTextSubmit: (text: string) => void,\n  onInspectElementClick: () => void,\n  inspectElementToggled: boolean,\n  state: State,\n  messages: ChatMessage[],\n  selectedNode: SDK.DOMModel.DOMNode|null,\n};\n\nexport class FreestylerChatUi extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-freestyler-chat-ui`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #props: Props;\n\n  constructor(props: Props) {\n    super();\n    this.#props = props;\n  }\n\n  set props(props: Props) {\n    this.#props = props;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [freestylerChatUiStyles];\n    this.#render();\n  }\n\n  focusTextInput(): void {\n    const input = this.#shadow.querySelector('.chat-input') as HTMLInputElement;\n    if (!input) {\n      return;\n    }\n\n    input.focus();\n  }\n\n  #handleSubmit = (ev: SubmitEvent): void => {\n    ev.preventDefault();\n    const input = this.#shadow.querySelector('.chat-input') as HTMLInputElement;\n    if (!input) {\n      return;\n    }\n\n    this.#props.onTextSubmit(input.value);\n    input.value = '';\n  };\n\n  #renderActionResult = ({code, output}: {code: string, output: string}): LitHtml.TemplateResult => {\n    return LitHtml.html`\n      <div class=\"action-result\">\n        <${MarkdownView.CodeBlock.CodeBlock.litTagName} .code=${code.trim()} .codeLang=\"js\" .displayToolbar=${\n        false}></${MarkdownView.CodeBlock.CodeBlock.litTagName}>\n        <div class=\"js-code-output\">${output}</div>\n      </div>\n    `;\n  };\n\n  #renderChatMessage = (message: ChatMessage): LitHtml.TemplateResult => {\n    if (message.entity === ChatMessageEntity.USER) {\n      return LitHtml.html`<div class=\"chat-message query\">${message.text}</div>`;\n    }\n\n    const {steps} = message;\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"chat-message answer\">\n        ${steps.map(step => LitHtml.html`${step.step === Step.ACTION ? this.#renderActionResult(step) : LitHtml.html`<p>${step.text}</p>`}`)}\n      </div>\n    `;\n    // clang-format on\n  };\n\n  #renderSelectAnElement = (): LitHtml.TemplateResult => {\n    // clang-format off\n    return LitHtml.html`\n      <${Buttons.Button.Button.litTagName} .data=${{\n        variant: Buttons.Button.Variant.ICON_TOGGLE,\n        size: Buttons.Button.Size.SMALL,\n        iconName: 'select-element',\n        toggledIconName: 'select-element',\n        toggleType: Buttons.Button.ToggleType.PRIMARY,\n        toggled: this.#props.inspectElementToggled,\n        title: i18nString(UIStrings.sendButtonTitle),\n      } as Buttons.Button.ButtonData} @click=${this.#props.onInspectElementClick}></${Buttons.Button.Button.litTagName}>\n      <span class=\"select-an-element-text\">${i18nString(UIStrings.selectAnElement)}</span>\n    `;\n    // clang-format on\n  };\n\n  #renderMessages = (): LitHtml.TemplateResult => {\n    const isLoading = this.#props.state === State.CHAT_VIEW_LOADING;\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"messages-container\">\n        ${this.#props.messages.map(message => this.#renderChatMessage(message))}\n        ${isLoading ? 'Loading' : ''}\n      </div>\n    `;\n    // clang-format on\n  };\n\n  #renderEmptyState = (): LitHtml.TemplateResult => {\n    // clang-format off\n    return LitHtml.html`<div class=\"empty-state-container\">\n      <${IconButton.Icon.Icon.litTagName} name=\"spark\" style=\"width: 36px; height: 36px;\"></${IconButton.Icon.Icon.litTagName}>\n      ${i18nString(UIStrings.emptyStateText)}\n    </div>`;\n    // clang-format on\n  };\n\n  #renderChatUi = (): LitHtml.TemplateResult => {\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"chat-ui\">\n        ${this.#props.messages.length > 0 ? this.#renderMessages() : this.#renderEmptyState()}\n        <form class=\"input-form\" @submit=${this.#handleSubmit}>\n          <div class=\"dom-node-link-container\">\n            ${this.#props.selectedNode ? LitHtml.Directives.until(Common.Linkifier.Linkifier.linkify(this.#props.selectedNode)) : this.#renderSelectAnElement()}\n          </div>\n          <div class=\"chat-input-container\">\n            <input type=\"text\" class=\"chat-input\" .disabled=${!this.#props.selectedNode}\n              placeholder=${i18nString(UIStrings.inputPlaceholder)}>\n            <${Buttons.Button.Button.litTagName}\n              class=\"step-actions\"\n              type=\"submit\"\n              title=${i18nString(UIStrings.sendButtonTitle)}\n              aria-label=${i18nString(UIStrings.sendButtonTitle)}\n              jslog=${VisualLogging.action('send').track({click: true})}\n              .data=${{\n                variant: Buttons.Button.Variant.ICON,\n                size: Buttons.Button.Size.SMALL,\n                iconName: 'send',\n                title: i18nString(UIStrings.sendButtonTitle),\n              } as Buttons.Button.ButtonData}\n            ></${Buttons.Button.Button.litTagName}>\n          </div>\n          <span class=\"chat-input-disclaimer\">${i18nString(UIStrings.inputDisclaimer)}</span>\n        </form>\n      </div>\n    `;\n    // clang-format on\n  };\n\n  #render(): void {\n    switch (this.#props.state) {\n      case State.CHAT_VIEW:\n      case State.CHAT_VIEW_LOADING:\n        LitHtml.render(this.#renderChatUi(), this.#shadow, {host: this});\n        break;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-freestyler-chat-ui': FreestylerChatUi;\n  }\n}\n\ncustomElements.define('devtools-freestyler-chat-ui', FreestylerChatUi);\n"]}