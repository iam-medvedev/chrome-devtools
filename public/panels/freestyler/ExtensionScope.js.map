{"version":3,"file":"ExtensionScope.js","sourceRoot":"","sources":["../../../../../../front_end/panels/freestyler/ExtensionScope.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {AI_ASSISTANT_CSS_CLASS_NAME, type ChangeManager} from './ChangeManager.js';\n\nexport const FREESTYLER_WORLD_NAME = 'devtools_freestyler';\nexport const FREESTYLER_BINDING_NAME = '__freestyler';\n\n/**\n * Injects Freestyler extension functions in to the isolated world.\n */\nexport class ExtensionScope {\n  #listeners: Array<(event: {\n                      data: Protocol.Runtime.BindingCalledEvent,\n                    }) => Promise<void>> = [];\n  #changeManager: ChangeManager;\n  #frameId: Protocol.Page.FrameId;\n  #target: SDK.Target.Target;\n\n  constructor(changes: ChangeManager) {\n    this.#changeManager = changes;\n    const selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n\n    const frameId = selectedNode?.frameId();\n    const target = selectedNode?.domModel().target();\n\n    if (!frameId || !target) {\n      throw new Error('Frame is not found');\n    }\n    this.#target = target;\n    this.#frameId = frameId;\n  }\n\n  async install(): Promise<void> {\n    const target = this.#target;\n    const frameId = this.#frameId;\n    const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n    const pageAgent = target.pageAgent();\n\n    // This returns previously created world if it exists for the frame.\n    const {executionContextId} =\n        await pageAgent.invoke_createIsolatedWorld({frameId, worldName: FREESTYLER_WORLD_NAME});\n\n    const isolatedWorldContext = runtimeModel?.executionContext(executionContextId);\n    if (!isolatedWorldContext) {\n      throw new Error('Execution context is not found for executing code');\n    }\n\n    const handler = this.#bindingCalled.bind(this, isolatedWorldContext);\n    runtimeModel?.addEventListener(SDK.RuntimeModel.Events.BindingCalled, handler);\n    this.#listeners.push(handler);\n    await target.runtimeAgent().invoke_addBinding({\n      name: FREESTYLER_BINDING_NAME,\n      executionContextId: executionContextId,\n    });\n    await this.#simpleEval(isolatedWorldContext, freestylerBinding);\n    await this.#simpleEval(isolatedWorldContext, functions);\n  }\n\n  async uninstall(): Promise<void> {\n    const runtimeModel = this.#target.model(SDK.RuntimeModel.RuntimeModel);\n\n    for (const handler of this.#listeners) {\n      runtimeModel?.removeEventListener(SDK.RuntimeModel.Events.BindingCalled, handler);\n    }\n    this.#listeners = [];\n\n    await this.#target.runtimeAgent().invoke_removeBinding({\n      name: FREESTYLER_BINDING_NAME,\n    });\n  }\n\n  async #simpleEval(context: SDK.RuntimeModel.ExecutionContext, expression: string): Promise<{\n    object: SDK.RemoteObject.RemoteObject,\n    exceptionDetails?: Protocol.Runtime.ExceptionDetails,\n  }> {\n    const response = await context.evaluate(\n        {\n          expression,\n          replMode: true,\n          includeCommandLineAPI: false,\n          returnByValue: true,\n          silent: false,\n          generatePreview: false,\n          allowUnsafeEvalBlockedByCSP: true,\n          throwOnSideEffect: false,\n        },\n        /* userGesture */ false, /* awaitPromise */ true);\n\n    if (!response) {\n      throw new Error('Response is not found');\n    }\n    if ('error' in response) {\n      throw new Error(response.error);\n    }\n    if (response.exceptionDetails) {\n      const exceptionDescription = response.exceptionDetails.exception?.description;\n      throw new Error(exceptionDescription || 'JS exception');\n    }\n    return response;\n  }\n\n  async #bindingCalled(executionContext: SDK.RuntimeModel.ExecutionContext, event: {\n    data: Protocol.Runtime.BindingCalledEvent,\n  }): Promise<void> {\n    const {data} = event;\n    if (data.name !== FREESTYLER_BINDING_NAME) {\n      return;\n    }\n    const target = this.#target;\n    const id = data.payload;\n    const {object} = await this.#simpleEval(executionContext, `freestyler.getArgs(${id})`);\n    const arg = JSON.parse(object.value);\n    const selector = arg.selector;\n    const styles = Platform.StringUtilities.toKebabCaseKeys(arg.styles);\n\n    const lines = Object.entries(styles).map(([key, value]) => `${key}: ${value};`);\n\n    this.#changeManager.addChange({\n      selector,\n      styles: lines.join('\\n'),\n    });\n    const cssModel = target.model(SDK.CSSModel.CSSModel);\n    if (!cssModel) {\n      throw new Error('CSSModel is not found');\n    }\n    const styleSheetHeader = await cssModel.requestViaInspectorStylesheet(this.#frameId);\n    if (!styleSheetHeader) {\n      throw new Error('inspector-stylesheet is not found');\n    }\n    await cssModel.setStyleSheetText(styleSheetHeader.id, this.#changeManager.buildStyleSheet(), true);\n\n    await this.#simpleEval(executionContext, `freestyler.respond(${id})`);\n  }\n}\n\nconst freestylerBinding = `globalThis.freestyler = (args) => {\n  let resolver;\n  let rejecter;\n  const p = new Promise((resolve, reject) => {\n    resolver = resolve;\n    rejecter = reject;\n  });\n  freestyler.callbacks.set(freestyler.id , {\n    args: JSON.stringify(args),\n    callbackId: freestyler.id,\n    resolver,\n    rejecter\n  });\n  ${FREESTYLER_BINDING_NAME}(String(freestyler.id));\n  freestyler.id++;\n}\nfreestyler.id = 1;\nfreestyler.callbacks = new Map();\nfreestyler.getArgs = (callbackId) => {\n  return freestyler.callbacks.get(callbackId).args;\n}\nfreestyler.respond = (callbackId) => {\n  freestyler.callbacks.get(callbackId).resolver();\n  freestyler.callbacks.delete(callbackId);\n}`;\n\nconst functions = `async function setElementStyles(el, styles) {\n  el.classList.add('${AI_ASSISTANT_CSS_CLASS_NAME}');\n  await freestyler({\n    method: 'setElementStyles',\n    selector: el.tagName.toLowerCase(),\n    styles: styles\n  });\n}`;\n"]}