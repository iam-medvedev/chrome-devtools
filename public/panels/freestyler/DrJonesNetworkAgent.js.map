{"version":3,"file":"DrJonesNetworkAgent.js","sourceRoot":"","sources":["../../../../../../front_end/panels/freestyler/DrJonesNetworkAgent.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Network from '../../panels/network/network.js';\nimport * as PanelUtils from '../utils/utils.js';\n\nimport {\n  AgentType,\n  AiAgent,\n  type ContextDetail,\n  type ContextResponse,\n  ConversationContext,\n  type RequestOptions,\n  ResponseType,\n} from './AiAgent.js';\n\n/* clang-format off */\nconst preamble = `You are the most advanced network request debugging assistant integrated into Chrome DevTools.\nThe user selected a network request in the browser's DevTools Network Panel and sends a query to understand the request.\nProvide a comprehensive analysis of the network request, focusing on areas crucial for a software engineer. Your analysis should include:\n* Briefly explain the purpose of the request based on the URL, method, and any relevant headers or payload.\n* Analyze timing information to identify potential bottlenecks or areas for optimization.\n* Highlight potential issues indicated by the status code.\n\n# Considerations\n* If the response payload or request payload contains sensitive data, redact or generalize it in your analysis to ensure privacy.\n* Tailor your explanations and suggestions to the specific context of the request and the technologies involved (if discernible from the provided details).\n* Keep your analysis concise and focused, highlighting only the most critical aspects for a software engineer.\n* **CRITICAL** If the user asks a question about religion, race, politics, sexuality, gender, or other sensitive topics, answer with \"Sorry, I can't answer that. I'm best at questions about network requests.\"\n\n## Example session\n\nExplain this network request\nRequest: https://api.example.com/products/search?q=laptop&category=electronics\nResponse Headers:\n    Content-Type: application/json\n    Cache-Control: max-age=300\n...\nRequest Headers:\n    User-Agent: Mozilla/5.0\n...\nRequest Status: 200 OK\n\n\nThis request aims to retrieve a list of products matching the search query \"laptop\" within the \"electronics\" category. The successful 200 OK status confirms that the server fulfilled the request and returned the relevant data.\n`;\n/* clang-format on */\n\nconst MAX_HEADERS_SIZE = 1000;\n\n/*\n* Strings that don't need to be translated at this time.\n*/\nconst UIStringsNotTranslate = {\n  /**\n   *@description Title for thinking step of DrJones Network agent.\n   */\n  analyzingNetworkData: 'Analyzing network data',\n  /**\n   *@description Heading text for the block that shows the network request details.\n   */\n  request: 'Request',\n  /**\n   *@description Heading text for the block that shows the network response details.\n   */\n  response: 'Response',\n  /**\n   *@description Prefix text for request URL.\n   */\n  requestUrl: 'Request URL',\n  /**\n   *@description Title text for request headers.\n   */\n  requestHeaders: 'Request Headers',\n  /**\n   *@description Title text for request timing details.\n   */\n  timing: 'Timing',\n  /**\n   *@description Title text for response headers.\n   */\n  responseHeaders: 'Response Headers',\n  /**\n   *@description Prefix text for response status.\n   */\n  responseStatus: 'Response Status',\n  /**\n   *@description Title text for request initiator chain.\n   */\n  requestInitiatorChain: 'Request initiator chain',\n};\n\nconst lockedString = i18n.i18n.lockedString;\n\nexport class RequestContext extends ConversationContext<SDK.NetworkRequest.NetworkRequest> {\n  #request: SDK.NetworkRequest.NetworkRequest;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n    this.#request = request;\n  }\n\n  override getOrigin(): string {\n    return new URL(this.#request.url()).origin;\n  }\n\n  override getItem(): SDK.NetworkRequest.NetworkRequest {\n    return this.#request;\n  }\n\n  override getIcon(): HTMLElement {\n    return PanelUtils.PanelUtils.getIconForNetworkRequest(this.#request);\n  }\n\n  override getTitle(): string {\n    return this.#request.name();\n  }\n}\n\n/**\n * One agent instance handles one conversation. Create a new agent\n * instance for a new conversation.\n */\nexport class DrJonesNetworkAgent extends AiAgent<SDK.NetworkRequest.NetworkRequest> {\n  override readonly type = AgentType.DRJONES_NETWORK_REQUEST;\n  readonly preamble = preamble;\n  readonly clientFeature = Host.AidaClient.ClientFeature.CHROME_DRJONES_NETWORK_AGENT;\n  get userTier(): string|undefined {\n    const config = Common.Settings.Settings.instance().getHostConfig();\n    return config.devToolsAiAssistanceNetworkAgent?.userTier;\n  }\n  get options(): RequestOptions {\n    const config = Common.Settings.Settings.instance().getHostConfig();\n    const temperature = config.devToolsAiAssistanceNetworkAgent?.temperature;\n    const modelId = config.devToolsAiAssistanceNetworkAgent?.modelId;\n\n    return {\n      temperature,\n      modelId,\n    };\n  }\n\n  async *\n      handleContextDetails(selectedNetworkRequest: ConversationContext<SDK.NetworkRequest.NetworkRequest>|null):\n          AsyncGenerator<ContextResponse, void, void> {\n    if (!selectedNetworkRequest) {\n      return;\n    }\n\n    yield {\n      type: ResponseType.CONTEXT,\n      title: lockedString(UIStringsNotTranslate.analyzingNetworkData),\n      details: createContextDetailsForDrJonesNetworkAgent(selectedNetworkRequest.getItem()),\n    };\n  }\n\n  override async enhanceQuery(\n      query: string,\n      selectedNetworkRequest: ConversationContext<SDK.NetworkRequest.NetworkRequest>|null): Promise<string> {\n    const networkEnchantmentQuery = selectedNetworkRequest ?\n        `# Selected network request \\n${formatNetworkRequest(selectedNetworkRequest.getItem())}\\n\\n# User request\\n\\n` :\n        '';\n    return `${networkEnchantmentQuery}${query}`;\n  }\n}\n\nfunction formatLines(title: string, lines: string[], maxLength: number): string {\n  let result = '';\n  for (const line of lines) {\n    if (result.length + line.length > maxLength) {\n      break;\n    }\n    result += line;\n  }\n  result = result.trim();\n  return result && title ? title + '\\n' + result : result;\n}\n\n// Header names that could be included in the prompt, lowercase.\nconst allowedHeaders = new Set([\n  'a-im',\n  'accept-ch',\n  'accept-charset',\n  'accept-datetime',\n  'accept-encoding',\n  'accept-language',\n  'accept-patch',\n  'accept-ranges',\n  'accept',\n  'access-control-allow-credentials',\n  'access-control-allow-headers',\n  'access-control-allow-methods',\n  'access-control-allow-origin',\n  'access-control-expose-headers',\n  'access-control-max-age',\n  'access-control-request-headers',\n  'access-control-request-method',\n  'age',\n  'allow',\n  'alt-svc',\n  'cache-control',\n  'connection',\n  'content-disposition',\n  'content-encoding',\n  'content-language',\n  'content-location',\n  'content-range',\n  'content-security-policy',\n  'content-type',\n  'correlation-id',\n  'date',\n  'delta-base',\n  'dnt',\n  'expect-ct',\n  'expect',\n  'expires',\n  'forwarded',\n  'front-end-https',\n  'host',\n  'http2-settings',\n  'if-modified-since',\n  'if-range',\n  'if-unmodified-source',\n  'im',\n  'last-modified',\n  'link',\n  'location',\n  'max-forwards',\n  'nel',\n  'origin',\n  'permissions-policy',\n  'pragma',\n  'preference-applied',\n  'proxy-connection',\n  'public-key-pins',\n  'range',\n  'referer',\n  'refresh',\n  'report-to',\n  'retry-after',\n  'save-data',\n  'sec-gpc',\n  'server',\n  'status',\n  'strict-transport-security',\n  'te',\n  'timing-allow-origin',\n  'tk',\n  'trailer',\n  'transfer-encoding',\n  'upgrade-insecure-requests',\n  'upgrade',\n  'user-agent',\n  'vary',\n  'via',\n  'warning',\n  'www-authenticate',\n  'x-att-deviceid',\n  'x-content-duration',\n  'x-content-security-policy',\n  'x-content-type-options',\n  'x-correlation-id',\n  'x-forwarded-for',\n  'x-forwarded-host',\n  'x-forwarded-proto',\n  'x-frame-options',\n  'x-http-method-override',\n  'x-powered-by',\n  'x-redirected-by',\n  'x-request-id',\n  'x-requested-with',\n  'x-ua-compatible',\n  'x-wap-profile',\n  'x-webkit-csp',\n  'x-xss-protection',\n]);\n\nexport function allowHeader(header: SDK.NetworkRequest.NameValue): boolean {\n  return allowedHeaders.has(header.name.toLowerCase().trim());\n}\n\nexport function formatHeaders(title: string, headers: SDK.NetworkRequest.NameValue[]): string {\n  return formatLines(\n      title,\n      headers\n          .map(header => {\n            if (allowHeader(header)) {\n              return header;\n            }\n            return {\n              name: header.name,\n              value: '<redacted>',\n            };\n          })\n          .map(header => header.name + ': ' + header.value + '\\n'),\n      MAX_HEADERS_SIZE);\n}\n\nexport function formatNetworkRequestTiming(request: SDK.NetworkRequest.NetworkRequest): string {\n  const calculator = Network.NetworkPanel.NetworkPanel.instance().networkLogView.timeCalculator();\n  const results =\n      Network.RequestTimingView.RequestTimingView.calculateRequestTimeRanges(request, calculator.minimumBoundary());\n\n  function getDuration(name: string): string|undefined {\n    const result = results.find(r => r.name === name);\n    if (!result) {\n      return;\n    }\n    return i18n.TimeUtilities.secondsToString(result.end - result.start, true);\n  }\n\n  const labels = [\n    {\n      label: 'Queued at (timestamp)',\n      value: calculator.formatValue(request.issueTime(), 2),\n    },\n    {\n      label: 'Started at (timestamp)',\n      value: calculator.formatValue(request.startTime, 2),\n    },\n    {\n      label: 'Queueing (duration)',\n      value: getDuration('queueing'),\n    },\n    {\n      label: 'Connection start (stalled) (duration)',\n      value: getDuration('blocking'),\n    },\n    {\n      label: 'Request sent (duration)',\n      value: getDuration('sending'),\n    },\n    {\n      label: 'Waiting for server response (duration)',\n      value: getDuration('waiting'),\n    },\n    {\n      label: 'Content download (duration)',\n      value: getDuration('receiving'),\n    },\n    {\n      label: 'Duration (duration)',\n      value: getDuration('total'),\n    },\n  ];\n\n  return labels.filter(label => Boolean(label.value)).map(label => `${label.label}: ${label.value}`).join('\\n');\n}\n\nexport function formatInitiatorUrl(initiatorUrl: string, allowedOrigin: string): string {\n  const initiatorOrigin = new URL(initiatorUrl).origin;\n  if (initiatorOrigin === allowedOrigin) {\n    return initiatorUrl;\n  }\n  return '<redacted cross-origin initiator URL>';\n}\n\nfunction formatRequestInitiated(\n    request: SDK.NetworkRequest.NetworkRequest, initiatorChain: string, lineStart: string,\n    allowedOrigin: string): string {\n  const initiated = Logs.NetworkLog.NetworkLog.instance().initiatorGraphForRequest(request).initiated;\n  initiated.forEach((v, initiatedRequest) => {\n    if (request === v) {\n      initiatorChain = initiatorChain + lineStart + formatInitiatorUrl(initiatedRequest.url(), allowedOrigin) + '\\n';\n      initiatorChain = formatRequestInitiated(initiatedRequest, initiatorChain, '\\t' + lineStart, allowedOrigin);\n    }\n  });\n  return initiatorChain;\n}\n\n/**\n * Note: nothing here should include information from origins other than\n * the request's origin.\n */\nfunction formatRequestInitiatorChain(request: SDK.NetworkRequest.NetworkRequest): string {\n  const allowedOrigin = new URL(request.url()).origin;\n  let initiatorChain = '';\n  let lineStart = '- URL: ';\n  const initiators = Logs.NetworkLog.NetworkLog.instance().initiatorGraphForRequest(request).initiators;\n\n  for (const initator of Array.from(initiators).reverse()) {\n    initiatorChain = initiatorChain + lineStart + formatInitiatorUrl(initator.url(), allowedOrigin) + '\\n';\n    lineStart = '\\t' + lineStart;\n    if (initator === request) {\n      initiatorChain = formatRequestInitiated(initator, initiatorChain, lineStart, allowedOrigin);\n      break;\n    }\n  }\n\n  return initiatorChain.trim();\n}\n\n/**\n * Note: nothing here should include information from origins other than\n * the request's origin.\n */\nexport function formatNetworkRequest(request: SDK.NetworkRequest.NetworkRequest): string {\n  return `Request: ${request.url()}\n\n${formatHeaders('Request headers:', request.requestHeaders())}\n\n${formatHeaders('Response headers:', request.responseHeaders)}\n\nResponse status: ${request.statusCode} ${request.statusText}\n\nRequest timing:\\n${formatNetworkRequestTiming(request)}\n\nRequest initiator chain:\\n${formatRequestInitiatorChain(request)}`;\n}\n\nfunction createContextDetailsForDrJonesNetworkAgent(request: SDK.NetworkRequest.NetworkRequest):\n    [ContextDetail, ...ContextDetail[]] {\n  const requestContextDetail: ContextDetail = {\n    title: lockedString(UIStringsNotTranslate.request),\n    text: lockedString(UIStringsNotTranslate.requestUrl) + ': ' + request.url() + '\\n\\n' +\n        formatHeaders(lockedString(UIStringsNotTranslate.requestHeaders), request.requestHeaders()),\n  };\n  const responseContextDetail: ContextDetail = {\n    title: lockedString(UIStringsNotTranslate.response),\n    text: lockedString(UIStringsNotTranslate.responseStatus) + ': ' + request.statusCode + ' ' + request.statusText +\n        '\\n\\n' + formatHeaders(lockedString(UIStringsNotTranslate.responseHeaders), request.responseHeaders),\n  };\n  const timingContextDetail: ContextDetail = {\n    title: lockedString(UIStringsNotTranslate.timing),\n    text: formatNetworkRequestTiming(request),\n  };\n  const initiatorChainContextDetail: ContextDetail = {\n    title: lockedString(UIStringsNotTranslate.requestInitiatorChain),\n    text: formatRequestInitiatorChain(request),\n  };\n  return [\n    requestContextDetail,\n    responseContextDetail,\n    timingContextDetail,\n    initiatorChainContextDetail,\n  ];\n}\n"]}