{"version":3,"file":"FreestylerPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/freestyler/FreestylerPanel.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAC7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,KAAK,OAAO,MAAM,+BAA+B,CAAC;AAEzD,OAAO,EAEL,iBAAiB,EACjB,gBAAgB,GAGjB,MAAM,kCAAkC,CAAC;AAC1C,OAAO,qBAAqB,MAAM,0BAA0B,CAAC;AAE7D,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,aAAa,EAAE,gBAAgB;IAC/B;;OAEG;IACH,YAAY,EAAE,eAAe;CAC9B,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,sCAAsC,EAAE,SAAS,CAAC,CAAC;AAC5F,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAatE,mFAAmF;AACnF,SAAS,aAAa,CAAC,MAAmB,EAAE,EAAC,YAAY,EAA6B;IACpF,MAAM,gBAAgB,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,8BAA8B,CAAC,CAAC;IACnF,MAAM,WAAW,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC;IACjE,MAAM,YAAY,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,0BAA0B,EAAE,gBAAgB,CAAC,CAAC;IAE1F,MAAM,WAAW,GACb,IAAI,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC;IAC9G,WAAW,CAAC,gBAAgB,sDAAwC,YAAY,CAAC,CAAC;IAClF,WAAW,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;IAE3C,YAAY,CAAC,eAAe,EAAE,CAAC;IAC/B,MAAM,cAAc,GAChB,IAAI,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,qBAAqB,CAAC,CAAC;IAC9G,MAAM,UAAU,GACZ,IAAI,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;IAC3G,YAAY,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;IAC/C,YAAY,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;AAC7C,CAAC;AAED,SAAS,WAAW,CAAC,KAAgB,EAAE,MAAkB,EAAE,MAAmB;IAC5E,mBAAmB;IACnB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAA;OACtB,gBAAgB,CAAC,UAAU,WAAW;QACrC,YAAY,EAAE,KAAK,CAAC,YAAY;QAChC,qBAAqB,EAAE,KAAK,CAAC,qBAAqB;QAClD,KAAK,EAAE,KAAK,CAAC,KAAK;QAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ;KACA;QACxB,gBAAgB,CAAC,UAAU;GAChC,EAAE,MAAM,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC,kDAAkD;IAC7E,kBAAkB;AACpB,CAAC;AAED,IAAI,uBAAwC,CAAC;AAC7C,MAAM,OAAO,eAAgB,SAAQ,EAAE,CAAC,KAAK,CAAC,KAAK;IAKrB;IAJ5B,iBAAiB,CAAc;IAC/B,WAAW,CAA6B;IACxC,qBAAqB,GAAY,KAAK,CAAC;IACvC,UAAU,CAAwB;IAClC,YAA4B,OAAa,WAAW;QAClD,KAAK,CAAC,YAAY,CAAC,CAAC;QADM,SAAI,GAAJ,IAAI,CAAoB;QAGlD,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC;QACtF,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QACpD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,EAAE,8BAA8B,CAAC,CAAC;QAEhG,IAAI,CAAC,UAAU,GAAG;YAChB,KAAK,oDAAoC;YACzC,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,qBAAqB,EAAE,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC;SAClE,CAAC;QACF,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,OAEF,EAAC,QAAQ,EAAE,IAAI,EAAC;QAC5B,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,uBAAuB,IAAI,QAAQ,EAAE,CAAC;YACzC,uBAAuB,GAAG,IAAI,eAAe,EAAE,CAAC;QAClD,CAAC;QAED,OAAO,uBAAuB,CAAC;IACjC,CAAC;IAEQ,QAAQ;QACf,IAAI,CAAC,gBAAgB,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC3D,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,oDAAkC,CAAC;QACxD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,IAAY;QAClC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QAEnC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAE,iBAAiB,CAAC,IAAI;YAC9B,IAAI;SACL,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,KAAK,oEAA0C,CAAC;QAChE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,aAAa,GAA0B,SAAS,CAAC;QACrD,IAAI,KAAK,EAAE,MAAM,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;YAC1D,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC/B,OAAO;YACT,CAAC;YAED,IAAI,CAAC,aAAa,EAAE,CAAC;gBACnB,aAAa,GAAG;oBACd,MAAM,EAAE,iBAAiB,CAAC,KAAK;oBAC/B,IAAI,EAAE,QAAQ,CAAC,WAAW;iBAC3B,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,KAAK,oDAAkC,CAAC;gBACxD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC/C,CAAC;iBAAM,CAAC;gBACN,aAAa,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC;YAC5C,CAAC;YAED,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC;IACH,CAAC;IAED,0BAA0B;QACxB,IAAI,CAAC,UAAU,CAAC,KAAK,oDAAkC,CAAC;QACxD,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;CACF","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\n\nimport {\n  type ChatMessage,\n  ChatMessageEntity,\n  FreestylerChatUi,\n  type Props as FreestylerChatUiProps,\n  State as FreestylerChatUiState,\n} from './components/FreestylerChatUi.js';\nimport freestylerPanelStyles from './freestylerPanel.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Freestyler UI text for clearing messages.\n   */\n  clearMessages: 'Clear messages',\n  /**\n   *@description Freestyler UI text for sending feedback.\n   */\n  sendFeedback: 'Send feedback',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/freestyler/FreestylerPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ntype ViewInput = {\n  onTextSubmit: (text: string) => void,\n  onAcceptPrivacyNotice: () => void,\n  state: FreestylerChatUiState,\n  messages: ChatMessage[],\n};\n\ntype ViewOutput = {};\n\ntype View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\n// TODO(ergunsh): Use the WidgetElement instead of separately creating the toolbar.\nfunction createToolbar(target: HTMLElement, {onClearClick}: {onClearClick: () => void}): void {\n  const toolbarContainer = target.createChild('div', 'freestyler-toolbar-container');\n  const leftToolbar = new UI.Toolbar.Toolbar('', toolbarContainer);\n  const rightToolbar = new UI.Toolbar.Toolbar('freestyler-right-toolbar', toolbarContainer);\n\n  const clearButton =\n      new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearMessages), 'clear', undefined, 'freestyler.clear');\n  clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, onClearClick);\n  leftToolbar.appendToolbarItem(clearButton);\n\n  rightToolbar.appendSeparator();\n  const feedbackButton =\n      new UI.Toolbar.ToolbarButton(i18nString(UIStrings.sendFeedback), 'bug', undefined, 'freestyler.feedback');\n  const helpButton =\n      new UI.Toolbar.ToolbarButton(i18nString(UIStrings.sendFeedback), 'help', undefined, 'freestyler.help');\n  rightToolbar.appendToolbarItem(feedbackButton);\n  rightToolbar.appendToolbarItem(helpButton);\n}\n\nfunction defaultView(input: ViewInput, output: ViewOutput, target: HTMLElement): void {\n  // clang-format off\n  LitHtml.render(LitHtml.html`\n    <${FreestylerChatUi.litTagName} .props=${{\n        onTextSubmit: input.onTextSubmit,\n        onAcceptPrivacyNotice: input.onAcceptPrivacyNotice,\n        state: input.state,\n        messages: input.messages,\n      } as FreestylerChatUiProps} >\n    </${FreestylerChatUi.litTagName}>\n  `, target, {host: input}); // eslint-disable-line rulesdir/lit_html_host_this\n  // clang-format on\n}\n\nlet freestylerPanelInstance: FreestylerPanel;\nexport class FreestylerPanel extends UI.Panel.Panel {\n  #contentContainer: HTMLElement;\n  #aidaClient: Host.AidaClient.AidaClient;\n  #isAidaFetchCancelled: boolean = false;\n  #viewProps: FreestylerChatUiProps;\n  private constructor(private view: View = defaultView) {\n    super('freestyler');\n\n    createToolbar(this.contentElement, {onClearClick: this.#handleClearClick.bind(this)});\n    this.#aidaClient = new Host.AidaClient.AidaClient();\n    this.#contentContainer = this.contentElement.createChild('div', 'freestyler-chat-ui-container');\n\n    this.#viewProps = {\n      state: FreestylerChatUiState.CONSENT_VIEW,\n      messages: [],\n      onTextSubmit: this.#handleTextSubmit.bind(this),\n      onAcceptPrivacyNotice: this.#handleAcceptPrivacyNotice.bind(this),\n    };\n    this.doUpdate();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): FreestylerPanel {\n    const {forceNew} = opts;\n    if (!freestylerPanelInstance || forceNew) {\n      freestylerPanelInstance = new FreestylerPanel();\n    }\n\n    return freestylerPanelInstance;\n  }\n\n  override wasShown(): void {\n    this.registerCSSFiles([freestylerPanelStyles]);\n  }\n\n  doUpdate(): void {\n    this.view(this.#viewProps, this, this.#contentContainer);\n  }\n\n  #handleClearClick(): void {\n    this.#viewProps.messages = [];\n    this.#viewProps.state = FreestylerChatUiState.CHAT_VIEW;\n    this.#isAidaFetchCancelled = true;\n    this.doUpdate();\n  }\n\n  async #handleTextSubmit(text: string): Promise<void> {\n    this.#isAidaFetchCancelled = false;\n\n    this.#viewProps.messages.push({\n      entity: ChatMessageEntity.USER,\n      text,\n    });\n    this.#viewProps.state = FreestylerChatUiState.CHAT_VIEW_LOADING;\n    this.doUpdate();\n\n    let systemMessage: ChatMessage|undefined = undefined;\n    for await (const response of this.#aidaClient.fetch(text)) {\n      if (this.#isAidaFetchCancelled) {\n        return;\n      }\n\n      if (!systemMessage) {\n        systemMessage = {\n          entity: ChatMessageEntity.MODEL,\n          text: response.explanation,\n        };\n        this.#viewProps.state = FreestylerChatUiState.CHAT_VIEW;\n        this.#viewProps.messages.push(systemMessage);\n      } else {\n        systemMessage.text = response.explanation;\n      }\n\n      this.doUpdate();\n    }\n  }\n\n  #handleAcceptPrivacyNotice(): void {\n    this.#viewProps.state = FreestylerChatUiState.CHAT_VIEW;\n    this.doUpdate();\n  }\n}\n"]}