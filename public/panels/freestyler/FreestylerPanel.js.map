{"version":3,"file":"FreestylerPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/freestyler/FreestylerPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\n\nimport {\n  FreestylerChatUi,\n  type Props as FreestylerChatUiProps,\n  State as FreestylerChatUiState,\n} from './components/FreestylerChatUi.js';\nimport freestylerPanelStyles from './freestylerPanel.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Freestyler UI text for clearing messages.\n   */\n  clearMessages: 'Clear messages',\n  /**\n   *@description Freestyler UI text for creating a new chat messages.\n   */\n  createChat: 'Create chat',\n  /**\n   *@description Freestyler UI text for sending feedback.\n   */\n  sendFeedback: 'Send feedback',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/freestyler/FreestylerPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ntype ViewInput = {\n  onTextSubmit: (text: string) => void,\n  onAcceptPrivacyNotice: () => void,\n  state: FreestylerChatUiState,\n};\n\ntype ViewOutput = {};\n\ntype View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\n// TODO(ergunsh): Use the WidgetElement instead of separately creating the toolbar.\nfunction createToolbar(target: HTMLElement): void {\n  const toolbarContainer = target.createChild('div', 'freestyler-toolbar-container');\n  const leftToolbar = new UI.Toolbar.Toolbar('', toolbarContainer);\n  const rightToolbar = new UI.Toolbar.Toolbar('freestyler-right-toolbar', toolbarContainer);\n\n  const addButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.createChat), 'plus', undefined, 'freestyler.add');\n  const clearButton =\n      new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearMessages), 'clear', undefined, 'freestyler.clear');\n  leftToolbar.appendToolbarItem(addButton);\n  leftToolbar.appendSeparator();\n  leftToolbar.appendToolbarItem(clearButton);\n\n  rightToolbar.appendSeparator();\n  const feedbackButton =\n      new UI.Toolbar.ToolbarButton(i18nString(UIStrings.sendFeedback), 'bug', undefined, 'freestyler.feedback');\n  const helpButton =\n      new UI.Toolbar.ToolbarButton(i18nString(UIStrings.sendFeedback), 'help', undefined, 'freestyler.help');\n  rightToolbar.appendToolbarItem(feedbackButton);\n  rightToolbar.appendToolbarItem(helpButton);\n}\n\nfunction defaultView(input: ViewInput, output: ViewOutput, target: HTMLElement): void {\n  // clang-format off\n  LitHtml.render(LitHtml.html`\n    <${FreestylerChatUi.litTagName} .props=${{\n        onTextSubmit: input.onTextSubmit,\n        onAcceptPrivacyNotice: input.onAcceptPrivacyNotice,\n        state: input.state,\n      } as FreestylerChatUiProps} >\n    </${FreestylerChatUi.litTagName}>\n  `, target, {host: input}); // eslint-disable-line rulesdir/lit_html_host_this\n  // clang-format on\n}\n\nlet freestylerPanelInstance: FreestylerPanel;\nexport class FreestylerPanel extends UI.Panel.Panel {\n  #contentContainer: HTMLElement;\n  state = FreestylerChatUiState.CONSENT_VIEW;\n  private constructor(private view: View = defaultView) {\n    super('freestyler');\n\n    createToolbar(this.contentElement);\n    this.#contentContainer = this.contentElement.createChild('div', 'freestyler-chat-ui-container');\n    this.doUpdate();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): FreestylerPanel {\n    const {forceNew} = opts;\n    if (!freestylerPanelInstance || forceNew) {\n      freestylerPanelInstance = new FreestylerPanel();\n    }\n\n    return freestylerPanelInstance;\n  }\n\n  override wasShown(): void {\n    this.registerCSSFiles([freestylerPanelStyles]);\n  }\n\n  doUpdate(): void {\n    this.view(this, this, this.#contentContainer);\n  }\n\n  onTextSubmit = (): void => {\n    // TODO(ergunsh): Handle submit here.\n  };\n\n  onAcceptPrivacyNotice = (): void => {\n    this.state = FreestylerChatUiState.CHAT_VIEW;\n    this.doUpdate();\n  };\n}\n"]}