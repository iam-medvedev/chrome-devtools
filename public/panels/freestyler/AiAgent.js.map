{"version":3,"file":"AiAgent.js","sourceRoot":"","sources":["../../../../../../front_end/panels/freestyler/AiAgent.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAI7B,MAAM,CAAN,IAAY,YAQX;AARD,WAAY,YAAY;IACtB,+BAAe,CAAA;IACf,mCAAmB,CAAA;IACnB,iCAAiB,CAAA;IACjB,2CAA2B,CAAA;IAC3B,iCAAiB,CAAA;IACjB,+BAAe,CAAA;IACf,qCAAqB,CAAA;AACvB,CAAC,EARW,YAAY,KAAZ,YAAY,QAQvB","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Host from '../../core/host/host.js';\n\nexport enum ResponseType {\n  TITLE = 'title',\n  THOUGHT = 'thought',\n  ACTION = 'action',\n  SIDE_EFFECT = 'side-effect',\n  ANSWER = 'answer',\n  ERROR = 'error',\n  QUERYING = 'querying',\n}\n\nexport const enum ErrorType {\n  UNKNOWN = 'unknown',\n  ABORT = 'abort',\n  MAX_STEPS = 'max-steps',\n}\n\nexport interface AnswerResponse {\n  type: ResponseType.ANSWER;\n  text: string;\n  rpcId?: number;\n  suggestions: string[];\n}\n\nexport interface ErrorResponse {\n  type: ResponseType.ERROR;\n  error: ErrorType;\n  rpcId?: number;\n}\n\nexport interface TitleResponse {\n  type: ResponseType.TITLE;\n  title: string;\n  rpcId?: number;\n}\n\nexport interface ThoughtResponse {\n  type: ResponseType.THOUGHT;\n  thought: string;\n  contextDetails?: ContextDetail[];\n  rpcId?: number;\n}\n\nexport interface SideEffectResponse {\n  type: ResponseType.SIDE_EFFECT;\n  code: string;\n  confirm: (confirm: boolean) => void;\n  rpcId?: number;\n}\n\nexport interface ActionResponse {\n  type: ResponseType.ACTION;\n  code: string;\n  output: string;\n  canceled: boolean;\n  rpcId?: number;\n}\n\nexport interface QueryResponse {\n  type: ResponseType.QUERYING;\n}\n\nexport type ResponseData =\n    AnswerResponse|ErrorResponse|ActionResponse|SideEffectResponse|ThoughtResponse|TitleResponse|QueryResponse;\n\nexport interface ContextDetail {\n  title: string;\n  text: string;\n}\n\nexport interface AidaRequestOptions {\n  input: string;\n  preamble?: string;\n  chatHistory?: Host.AidaClient.Chunk[];\n  /**\n   * @default false\n   */\n  serverSideLoggingEnabled?: boolean;\n  sessionId?: string;\n}\n\nexport interface HistoryChunk {\n  text: string;\n  entity: Host.AidaClient.Entity;\n}\n"]}