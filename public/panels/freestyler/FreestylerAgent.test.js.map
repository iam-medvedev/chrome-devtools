{"version":3,"file":"FreestylerAgent.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/freestyler/FreestylerAgent.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport {\n  describeWithEnvironment,\n  getGetHostConfigStub,\n} from '../../testing/EnvironmentHelpers.js';\n\nimport * as Freestyler from './freestyler.js';\n\nconst {FreestylerAgent} = Freestyler;\n\ndescribeWithEnvironment('FreestylerAgent', () => {\n  function mockHostConfig(modelId?: string) {\n    getGetHostConfigStub({\n      devToolsFreestylerDogfood: {\n        aidaModelId: modelId,\n      },\n    });\n  }\n  describe('parseResponse', () => {\n    it('parses a thought', async () => {\n      const payload = 'some response';\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`THOUGHT: ${payload}`),\n          {\n            action: undefined,\n            thought: payload,\n            answer: undefined,\n          },\n      );\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`   THOUGHT: ${payload}`),\n          {\n            action: undefined,\n            thought: payload,\n            answer: undefined,\n          },\n      );\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`Something\\n   THOUGHT: ${payload}`),\n          {\n            action: undefined,\n            thought: payload,\n            answer: undefined,\n          },\n      );\n    });\n    it('parses a answer', async () => {\n      const payload = 'some response';\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`ANSWER: ${payload}`),\n          {\n            action: undefined,\n            thought: undefined,\n            answer: payload,\n          },\n      );\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`   ANSWER: ${payload}`),\n          {\n            action: undefined,\n            thought: undefined,\n            answer: payload,\n          },\n      );\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`Something\\n   ANSWER: ${payload}`),\n          {\n            action: undefined,\n            thought: undefined,\n            answer: payload,\n          },\n      );\n    });\n    it('parses a multiline answer', async () => {\n      const payload = `a\nb\nc`;\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`ANSWER: ${payload}`),\n          {\n            action: undefined,\n            thought: undefined,\n            answer: payload,\n          },\n      );\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`   ANSWER: ${payload}`),\n          {\n            action: undefined,\n            thought: undefined,\n            answer: payload,\n          },\n      );\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`Something\\n   ANSWER: ${payload}`),\n          {\n            action: undefined,\n            thought: undefined,\n            answer: payload,\n          },\n      );\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`ANSWER: ${payload}\\nTHOUGHT: thought`),\n          {\n            action: undefined,\n            thought: 'thought',\n            answer: payload,\n          },\n      );\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(\n              `ANSWER: ${payload}\\nOBSERVATION: observation`,\n              ),\n          {\n            action: undefined,\n            thought: undefined,\n            answer: payload,\n          },\n      );\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(\n              `ANSWER: ${payload}\\nACTION\\naction\\nSTOP`,\n              ),\n          {\n            action: 'action',\n            thought: undefined,\n            answer: payload,\n          },\n      );\n    });\n    it('parses an action', async () => {\n      const payload = `const data = {\n  someKey: \"value\",\n}`;\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`ACTION\\n${payload}\\nSTOP`),\n          {\n            action: payload,\n            thought: undefined,\n            answer: undefined,\n          },\n      );\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`ACTION\\n${payload}`),\n          {\n            action: payload,\n            thought: undefined,\n            answer: undefined,\n          },\n      );\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(`ACTION\\n\\n${payload}\\n\\nSTOP`),\n          {\n            action: payload,\n            thought: undefined,\n            answer: undefined,\n          },\n      );\n    });\n\n    it('parses an action with backticks in the code', async () => {\n      const payload = `const data = {\n  someKey: \"value\",\n}`;\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(\n              `ACTION\\n\\`\\`\\`\\n${payload}\\n\\`\\`\\`\\nSTOP`,\n              ),\n          {\n            action: payload,\n            thought: undefined,\n            answer: undefined,\n          },\n      );\n    });\n\n    it('parses an action with 5 backticks in the code and `js` text in the prelude', async () => {\n      const payload = `const data = {\n  someKey: \"value\",\n}`;\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(\n              `ACTION\\n\\`\\`\\`\\`\\`\\njs\\n${payload}\\n\\`\\`\\`\\`\\`\\nSTOP`,\n              ),\n          {\n            action: payload,\n            thought: undefined,\n            answer: undefined,\n          },\n      );\n    });\n\n    it('parses a thought and an action', async () => {\n      const actionPayload = `const data = {\n  someKey: \"value\",\n}`;\n      const thoughtPayload = 'thought';\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(\n              `THOUGHT:${thoughtPayload}\\nACTION\\n${actionPayload}\\nSTOP`,\n              ),\n          {\n            action: actionPayload,\n            thought: thoughtPayload,\n            answer: undefined,\n          },\n      );\n    });\n\n    it('parses a response as an answer', async () => {\n      assert.deepStrictEqual(\n          FreestylerAgent.parseResponse(\n              'This is also an answer',\n              ),\n          {\n            action: undefined,\n            thought: undefined,\n            answer: 'This is also an answer',\n          },\n      );\n    });\n  });\n\n  describe('buildRequest', () => {\n    beforeEach(() => {\n      sinon.restore();\n    });\n\n    it('builds a request with a model id', async () => {\n      mockHostConfig('test model');\n      assert.strictEqual(\n          FreestylerAgent.buildRequest({input: 'test input'}).options?.model_id,\n          'test model',\n      );\n    });\n\n    it('builds a request with logging', async () => {\n      mockHostConfig('test model');\n      assert.strictEqual(\n          FreestylerAgent.buildRequest({input: 'test input', serverSideLoggingEnabled: true})\n              .metadata?.disable_user_content_logging,\n          false,\n      );\n    });\n\n    it('builds a request without logging', async () => {\n      mockHostConfig('test model');\n      assert.strictEqual(\n          FreestylerAgent.buildRequest({input: 'test input', serverSideLoggingEnabled: false})\n              .metadata?.disable_user_content_logging,\n          true,\n      );\n    });\n\n    it('builds a request with input', async () => {\n      mockHostConfig();\n      const request = FreestylerAgent.buildRequest({input: 'test input'});\n      assert.strictEqual(request.input, 'test input');\n      assert.strictEqual(request.preamble, undefined);\n      assert.strictEqual(request.chat_history, undefined);\n    });\n\n    it('builds a request with a sessionId', async () => {\n      mockHostConfig();\n      const request = FreestylerAgent.buildRequest({input: 'test input', sessionId: 'sessionId'});\n      assert.strictEqual(request.metadata?.string_session_id, 'sessionId');\n    });\n\n    it('builds a request with preamble', async () => {\n      mockHostConfig();\n      const request = FreestylerAgent.buildRequest({input: 'test input', preamble: 'preamble'});\n      assert.strictEqual(request.input, 'test input');\n      assert.strictEqual(request.preamble, 'preamble');\n      assert.strictEqual(request.chat_history, undefined);\n    });\n\n    it('builds a request with chat history', async () => {\n      mockHostConfig();\n      const request = FreestylerAgent.buildRequest({\n        input: 'test input',\n        chatHistory: [\n          {\n            text: 'test',\n            entity: Host.AidaClient.Entity.USER,\n          },\n        ],\n      });\n      assert.strictEqual(request.input, 'test input');\n      assert.strictEqual(request.preamble, undefined);\n      assert.deepStrictEqual(request.chat_history, [\n        {\n          text: 'test',\n          entity: 1,\n        },\n      ]);\n    });\n\n    it('structure matches the snapshot', () => {\n      mockHostConfig('test model');\n      assert.deepStrictEqual(\n          FreestylerAgent.buildRequest({\n            input: 'test input',\n            preamble: 'preamble',\n            chatHistory: [\n              {\n                text: 'first',\n                entity: Host.AidaClient.Entity.UNKNOWN,\n              },\n              {\n                text: 'second',\n                entity: Host.AidaClient.Entity.SYSTEM,\n              },\n              {\n                text: 'third',\n                entity: Host.AidaClient.Entity.USER,\n              },\n            ],\n            serverSideLoggingEnabled: true,\n            sessionId: 'sessionId',\n          }),\n          {\n            input: 'test input',\n            client: 'CHROME_DEVTOOLS',\n            preamble: 'preamble',\n            chat_history: [\n              {\n                entity: 0,\n                text: 'first',\n              },\n              {\n                entity: 2,\n                text: 'second',\n              },\n              {\n                entity: 1,\n                text: 'third',\n              },\n            ],\n            metadata: {\n              disable_user_content_logging: false,\n              string_session_id: 'sessionId',\n            },\n            options: {\n              model_id: 'test model',\n              temperature: 0,\n            },\n            client_feature: 2,\n            functionality_type: 1,\n          },\n      );\n    });\n  });\n\n  describe('run', () => {\n    beforeEach(() => {\n      mockHostConfig();\n    });\n\n    function mockAidaClient(\n        fetch: () => AsyncGenerator<Host.AidaClient.AidaResponse, void, void>,\n        ): Host.AidaClient.AidaClient {\n      return {\n        fetch,\n        registerClientEvent: () => Promise.resolve({}),\n      };\n    }\n\n    describe('side effect handling', () => {\n      it('calls confirmSideEffect when the code execution contains a side effect', async () => {\n        let count = 0;\n        async function* generateActionAndAnswer() {\n          if (count === 0) {\n            yield {\n              explanation: `ACTION\n              $0.style.backgroundColor = 'red'\n              STOP`,\n              metadata: {},\n            };\n          } else {\n            yield {\n              explanation: 'ANSWER: This is the answer',\n              metadata: {},\n            };\n          }\n\n          count++;\n        }\n        const execJs =\n            sinon.mock().throws(new Freestyler.SideEffectError('EvalError: Possible side-effect in debug-evaluate'));\n        const confirmSideEffect = sinon.mock().resolves(false);\n        const agent = new FreestylerAgent({\n          aidaClient: mockAidaClient(generateActionAndAnswer),\n          confirmSideEffect,\n          execJs,\n        });\n\n        await Array.fromAsync(agent.run('test'));\n\n        sinon.assert.match(execJs.getCall(0).args[1], sinon.match({throwOnSideEffect: true}));\n        sinon.assert.calledOnce(confirmSideEffect);\n      });\n\n      it('calls execJs with allowing side effects when confirmSideEffect resolves to true', async () => {\n        let count = 0;\n        async function* generateActionAndAnswer() {\n          if (count === 0) {\n            yield {\n              explanation: `ACTION\n              $0.style.backgroundColor = 'red'\n              STOP`,\n              metadata: {},\n            };\n          } else {\n            yield {\n              explanation: 'ANSWER: This is the answer',\n              metadata: {},\n            };\n          }\n\n          count++;\n        }\n        const execJs = sinon.mock().twice();\n        execJs.onCall(0).throws(new Freestyler.SideEffectError('EvalError: Possible side-effect in debug-evaluate'));\n        execJs.onCall(1).resolves('value');\n        const confirmSideEffect = sinon.mock().resolves(true);\n        const agent = new FreestylerAgent({\n          aidaClient: mockAidaClient(generateActionAndAnswer),\n          confirmSideEffect,\n          execJs,\n        });\n        await Array.fromAsync(agent.run('test'));\n\n        sinon.assert.calledOnce(confirmSideEffect);\n        assert.strictEqual(execJs.getCalls().length, 2);\n        sinon.assert.match(execJs.getCall(1).args[1], sinon.match({throwOnSideEffect: false}));\n      });\n\n      it('returns side effect error when confirmSideEffect resolves to false', async () => {\n        let count = 0;\n        async function* generateActionAndAnswer() {\n          if (count === 0) {\n            yield {\n              explanation: `ACTION\n              $0.style.backgroundColor = 'red'\n              STOP`,\n              metadata: {},\n            };\n          } else {\n            yield {\n              explanation: 'ANSWER: This is the answer',\n              metadata: {},\n            };\n          }\n\n          count++;\n        }\n        const execJs = sinon.mock().twice();\n        execJs.onCall(0).throws(new Freestyler.SideEffectError('EvalError: Possible side-effect in debug-evaluate'));\n        const confirmSideEffect = sinon.mock().resolves(false);\n        const agent = new FreestylerAgent({\n          aidaClient: mockAidaClient(generateActionAndAnswer),\n          confirmSideEffect,\n          execJs,\n        });\n\n        const steps = await Array.fromAsync(agent.run('test'));\n\n        const actionStep = steps.find(step => step.step === Freestyler.Step.ACTION);\n        sinon.assert.calledOnce(confirmSideEffect);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        assert.strictEqual((actionStep as any).output, 'Error: EvalError: Possible side-effect in debug-evaluate');\n        assert.strictEqual(execJs.getCalls().length, 1);\n      });\n\n      it('calls execJs with allowing side effects when the query includes \"Fix this issue\" prompt', async () => {\n        let count = 0;\n        async function* generateActionAndAnswer() {\n          if (count === 0) {\n            yield {\n              explanation: `ACTION\n              $0.style.backgroundColor = 'red'\n              STOP`,\n              metadata: {},\n            };\n          } else {\n            yield {\n              explanation: 'ANSWER: This is the answer',\n              metadata: {},\n            };\n          }\n\n          count++;\n        }\n        const execJs = sinon.mock().once();\n        const confirmSideEffect = sinon.mock();\n        const agent = new FreestylerAgent({\n          aidaClient: mockAidaClient(generateActionAndAnswer),\n          confirmSideEffect,\n          execJs,\n        });\n\n        await Array.fromAsync(agent.run(Freestyler.FIX_THIS_ISSUE_PROMPT, {isFixQuery: true}));\n\n        const optionsArg = execJs.lastCall.args[1];\n        sinon.assert.notCalled(confirmSideEffect);\n        sinon.assert.match(optionsArg, sinon.match({throwOnSideEffect: false}));\n      });\n    });\n\n    describe('long `Observation` text handling', () => {\n      it('errors with too long input', async () => {\n        let count = 0;\n        async function* generateActionAndAnswer() {\n          if (count === 0) {\n            yield {\n              explanation: `ACTION\n              $0.style.backgroundColor = 'red'\n              STOP`,\n              metadata: {},\n            };\n          } else {\n            yield {\n              explanation: 'ANSWER: This is the answer',\n              metadata: {},\n            };\n          }\n          count++;\n        }\n        const execJs = sinon.mock().returns(new Array(10_000).fill('<div>...</div>').join());\n        const confirmSideEffect = sinon.mock().resolves(false);\n        const agent = new FreestylerAgent({\n          aidaClient: mockAidaClient(generateActionAndAnswer),\n          confirmSideEffect,\n          execJs,\n        });\n\n        const result = await Array.fromAsync(agent.run('test'));\n        const lastStepData = result.at(-3)!;\n        assert(lastStepData.step === Freestyler.Step.ACTION, 'Not an Action step');\n        assert(lastStepData.output.includes('Error: Output exceeded the maximum allowed length.'));\n      });\n    });\n\n    it('generates an answer immediately', async () => {\n      async function* generateAnswer() {\n        yield {\n          explanation: 'ANSWER: this is the answer',\n          metadata: {},\n        };\n      }\n\n      const execJs = sinon.spy();\n      const agent = new FreestylerAgent({\n        aidaClient: mockAidaClient(generateAnswer),\n        confirmSideEffect: () => Promise.resolve(true),\n        execJs,\n      });\n\n      const steps = await Array.fromAsync(agent.run('test'));\n      assert.deepStrictEqual(steps, [\n        {\n          step: Freestyler.Step.QUERYING,\n        },\n        {\n          step: Freestyler.Step.ANSWER,\n          text: 'this is the answer',\n          rpcId: undefined,\n        },\n      ]);\n      sinon.assert.notCalled(execJs);\n      assert.deepStrictEqual(agent.chatHistoryForTesting, [\n        {\n          entity: 1,\n          text: 'QUERY: test',\n        },\n        {\n          entity: 2,\n          text: 'ANSWER: this is the answer',\n        },\n      ]);\n    });\n\n    it('generates an rpcId for the answer', async () => {\n      async function* generateAnswer() {\n        yield {\n          explanation: 'ANSWER: this is the answer',\n          metadata: {\n            rpcGlobalId: 123,\n          },\n        };\n      }\n\n      const agent = new FreestylerAgent({\n        aidaClient: mockAidaClient(generateAnswer),\n        confirmSideEffect: () => Promise.resolve(true),\n        execJs: sinon.spy(),\n      });\n\n      const steps = await Array.fromAsync(agent.run('test'));\n      assert.deepStrictEqual(steps, [\n        {\n          step: Freestyler.Step.QUERYING,\n        },\n        {\n          step: Freestyler.Step.ANSWER,\n          text: 'this is the answer',\n          rpcId: 123,\n        },\n      ]);\n    });\n\n    it('throws an error based on the attribution metadata including RecitationAction.BLOCK', async () => {\n      async function* generateAnswer() {\n        yield {\n          explanation: 'ANSWER: this is the answer',\n          metadata: {\n            rpcGlobalId: 123,\n            attributionMetadata: [{\n              attributionAction: Host.AidaClient.RecitationAction.BLOCK,\n              citations: [],\n            }],\n          },\n        };\n      }\n\n      const agent = new FreestylerAgent({\n        aidaClient: mockAidaClient(generateAnswer),\n        confirmSideEffect: () => Promise.resolve(true),\n        execJs: sinon.spy(),\n      });\n\n      const steps = await Array.fromAsync(agent.run('test'));\n      assert.deepStrictEqual(steps, [\n        {\n          step: Freestyler.Step.QUERYING,\n        },\n        {\n          rpcId: undefined,\n          step: Freestyler.Step.ERROR,\n          text: 'Sorry, I could not help you with this query.',\n        },\n      ]);\n    });\n\n    it('does not throw an error based on attribution metadata not including RecitationAction.BLOCK', async () => {\n      async function* generateAnswer() {\n        yield {\n          explanation: 'ANSWER: this is the answer',\n          metadata: {\n            rpcGlobalId: 123,\n            attributionMetadata: [{\n              attributionAction: Host.AidaClient.RecitationAction.ACTION_UNSPECIFIED,\n              citations: [],\n            }],\n          },\n        };\n      }\n\n      const agent = new FreestylerAgent({\n        aidaClient: mockAidaClient(generateAnswer),\n        confirmSideEffect: () => Promise.resolve(true),\n        execJs: sinon.spy(),\n      });\n\n      const steps = await Array.fromAsync(agent.run('test'));\n      assert.deepStrictEqual(steps, [\n        {\n          step: Freestyler.Step.QUERYING,\n        },\n        {\n          step: Freestyler.Step.ANSWER,\n          text: 'this is the answer',\n          rpcId: 123,\n        },\n      ]);\n    });\n\n    it('generates a response if nothing is returned', async () => {\n      async function* generateNothing() {\n        yield {\n          explanation: '',\n          metadata: {},\n        };\n      }\n\n      const execJs = sinon.spy();\n      const agent = new FreestylerAgent({\n        aidaClient: mockAidaClient(generateNothing),\n        confirmSideEffect: () => Promise.resolve(true),\n        execJs,\n      });\n      const steps = await Array.fromAsync(agent.run('test'));\n      assert.deepStrictEqual(steps, [\n        {\n          step: Freestyler.Step.QUERYING,\n        },\n        {\n          step: Freestyler.Step.ANSWER,\n          text: 'Sorry, I could not help you with this query.',\n          rpcId: undefined,\n        },\n      ]);\n      sinon.assert.notCalled(execJs);\n      assert.deepStrictEqual(agent.chatHistoryForTesting, [\n        {\n          entity: 1,\n          text: 'QUERY: test',\n        },\n        {\n          entity: 2,\n          text: '',\n        },\n      ]);\n    });\n\n    it('generates an action response if action and answer both present', async () => {\n      let i = 0;\n      async function* generateNothing() {\n        if (i !== 0) {\n          yield {\n            explanation: 'ANSWER: this is the actual answer',\n            metadata: {},\n          };\n          return;\n        }\n        yield {\n          explanation: `THOUGHT: I am thinking.\n\nACTION\nconsole.log('hello');\nSTOP\n\nANSWER: this is the answer`,\n          metadata: {},\n        };\n        i++;\n      }\n\n      const execJs = sinon.mock().once();\n      execJs.onCall(0).returns('hello');\n      const agent = new FreestylerAgent({\n        aidaClient: mockAidaClient(generateNothing),\n        confirmSideEffect: () => Promise.resolve(true),\n        execJs,\n      });\n      const steps = await Array.fromAsync(agent.run('test'));\n      assert.deepStrictEqual(steps, [\n        {\n          step: Freestyler.Step.QUERYING,\n        },\n        {\n          step: Freestyler.Step.THOUGHT,\n          text: 'I am thinking.',\n          rpcId: undefined,\n        },\n        {\n          step: Freestyler.Step.ACTION,\n          code: 'console.log(\\'hello\\');',\n          output: 'hello',\n          rpcId: undefined,\n        },\n        {\n          step: Freestyler.Step.QUERYING,\n        },\n        {\n          step: Freestyler.Step.ANSWER,\n          text: 'this is the actual answer',\n          rpcId: undefined,\n        },\n      ]);\n      sinon.assert.calledOnce(execJs);\n    });\n\n    it('generates history for multiple actions', async () => {\n      let count = 0;\n      async function* generateMultipleTimes() {\n        if (count === 3) {\n          yield {\n            explanation: 'ANSWER: this is the answer',\n            metadata: {},\n          };\n          return;\n        }\n        count++;\n        yield {\n          explanation: `THOUGHT: thought ${count}\\nACTION\\nconsole.log('test')\\nSTOP\\n`,\n          metadata: {},\n        };\n      }\n\n      const execJs = sinon.spy(async () => 'undefined');\n      const agent = new FreestylerAgent({\n        aidaClient: mockAidaClient(generateMultipleTimes),\n        confirmSideEffect: () => Promise.resolve(true),\n        execJs,\n      });\n\n      await Array.fromAsync(agent.run('test'));\n\n      assert.deepStrictEqual(agent.chatHistoryForTesting, [\n        {\n          entity: 1,\n          text: 'QUERY: test',\n        },\n        {\n          entity: 2,\n          text: 'THOUGHT: thought 1\\nACTION\\nconsole.log(\\'test\\')\\nSTOP\\n',\n        },\n        {\n          entity: 1,\n          text: 'OBSERVATION: undefined',\n        },\n        {\n          entity: 2,\n          text: 'THOUGHT: thought 2\\nACTION\\nconsole.log(\\'test\\')\\nSTOP\\n',\n        },\n        {\n          entity: 1,\n          text: 'OBSERVATION: undefined',\n        },\n        {\n          entity: 2,\n          text: 'THOUGHT: thought 3\\nACTION\\nconsole.log(\\'test\\')\\nSTOP\\n',\n        },\n        {\n          entity: 1,\n          text: 'OBSERVATION: undefined',\n        },\n        {\n          entity: 2,\n          text: 'ANSWER: this is the answer',\n        },\n      ]);\n    });\n\n    it('stops when aborted', async () => {\n      let count = 0;\n      async function* generateMultipleTimes() {\n        if (count === 3) {\n          yield {\n            explanation: 'ANSWER: this is the answer',\n            metadata: {},\n          };\n          return;\n        }\n        count++;\n        yield {\n          explanation: `THOUGHT: thought ${count}\\nACTION\\nconsole.log('test')\\nSTOP\\n`,\n          metadata: {},\n        };\n      }\n\n      const execJs = sinon.spy();\n      const agent = new FreestylerAgent({\n        aidaClient: mockAidaClient(generateMultipleTimes),\n        confirmSideEffect: () => Promise.resolve(true),\n        execJs,\n      });\n\n      const controller = new AbortController();\n      controller.abort();\n      await Array.fromAsync(agent.run('test', {signal: controller.signal, isFixQuery: false}));\n\n      assert.deepStrictEqual(agent.chatHistoryForTesting, []);\n    });\n  });\n});\n"]}