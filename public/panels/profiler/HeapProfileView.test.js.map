{"version":3,"file":"HeapProfileView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/profiler/HeapProfileView.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,EAAC,YAAY,EAAC,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAC,UAAU,EAAC,MAAM,iCAAiC,CAAC;AAC3D,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAC3E,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,0BAA0B,CAAC,6BAA6B,EAAE,GAAG,EAAE;IAC7D,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,IAAI,wBAAyC,CAAC;QAC9C,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,MAAM,GAAG,YAAY,EAAE,CAAC;YAC9B,MAAM,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;YAChF,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;YAEpG,wBAAwB;gBACpB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,EAAE,sBAAsB,CAAC,CAAC,QAAQ,EAAE,CAAC;QACjG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;YACnE,mHAAmH;YACnH,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,eAAe,CAAC,CAAC;YAC/C,MAAM,iBAAiB,GACnB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,uBAAuB,EAAE,eAAe,CAAC,CAAC;YAC/F,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,uBAAuB,CAAC,aAAa,EAAE,CAAC;YAE9E,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,UAAU,EAAE,8CAA8C,CAAC,CAAC;YACnG,MAAM,UAAU,CAAC,iBAAiB,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {expectCall} from '../../testing/ExpectStubCall.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\ndescribeWithMockConnection('SamplingHeapProfileTypeBase', () => {\n  describe('buttonClicked', () => {\n    let releaseAllAnimationsStub: sinon.SinonStub;\n    beforeEach(() => {\n      const target = createTarget();\n      const heapProfilerModel = target.model(SDK.HeapProfilerModel.HeapProfilerModel);\n      UI.Context.Context.instance().setFlavor(SDK.HeapProfilerModel.HeapProfilerModel, heapProfilerModel);\n\n      releaseAllAnimationsStub =\n          sinon.stub(SDK.AnimationModel.AnimationModel.prototype, 'releaseAllAnimations').resolves();\n    });\n\n    it('releases all animations before `startSampling` call', async () => {\n      // We need dynamic import here because statically importing the module requires locale vars to be initialized vars.\n      const Profiler = await import('./profiler.js');\n      const startSamplingStub =\n          sinon.stub(Profiler.ProfileTypeRegistry.instance.samplingHeapProfileType, 'startSampling');\n      Profiler.ProfileTypeRegistry.instance.samplingHeapProfileType.buttonClicked();\n\n      assert.isTrue(releaseAllAnimationsStub.calledOnce, 'Expected release all animations to be called');\n      await expectCall(startSamplingStub);\n    });\n  });\n});\n"]}