{"version":3,"file":"HeapDetachedElementsView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/profiler/HeapDetachedElementsView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {HeapDetachedElementsDataGrid, HeapDetachedElementsDataGridNode} from './HeapDetachedElementsDataGrid.js';\nimport {\n  type DataDisplayDelegate,\n  ProfileEvents as ProfileTypeEvents,\n  type ProfileHeader,\n  ProfileType,\n} from './ProfileHeader.js';\nimport {WritableProfileHeader} from './ProfileView.js';\n\nconst UIStrings = {\n  /**\n   *@description Button text to obtain the detached elements retained by JS\n   */\n  startDetachedElements: 'Obtain detached elements',\n  /**\n   *@description The title for the collection of profiles that are gathered from various snapshots of the heap, using a sampling (e.g. every 1/100) technique.\n   */\n  detachedElementsTitle: 'Detached elements',\n  /**\n   *@description Description in Heap Profile View of a profiler tool\n   */\n  detachedElementsDescription: 'Detached elements shows objects that are retained by a JS reference.',\n  /**\n   *@description Name of a profile\n   *@example {2} PH1\n   */\n  detachedElementProfile: 'Detached elements {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/profiler/HeapDetachedElementsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class DetachedElementsProfileView extends UI.View.SimpleView implements DataDisplayDelegate {\n  readonly selectedSizeText: UI.Toolbar.ToolbarText;\n  dataGrid: DataGrid.DataGrid.DataGridImpl<unknown>;\n  profile: DetachedElementsProfileHeader;\n  readonly parentDataDisplayDelegate: DataDisplayDelegate;\n\n  constructor(dataDisplayDelegate: DataDisplayDelegate, profile: DetachedElementsProfileHeader) {\n    super(i18nString(UIStrings.detachedElementsTitle));\n    this.element.classList.add('detached-elements-view');\n    this.profile = profile;\n    this.parentDataDisplayDelegate = dataDisplayDelegate;\n    this.selectedSizeText = new UI.Toolbar.ToolbarText();\n    this.dataGrid = new HeapDetachedElementsDataGrid();\n    this.populateElementsGrid(profile.detachedElements);\n    this.dataGrid.asWidget().show(this.element);\n  }\n\n  showProfile(profile: ProfileHeader|null): UI.Widget.Widget|null {\n    return this.parentDataDisplayDelegate.showProfile(profile);\n  }\n\n  showObject(objectId: string, perspectiveName: string): void {\n    this.parentDataDisplayDelegate.showObject(objectId, perspectiveName);\n  }\n\n  async linkifyObject(): Promise<Element|null> {\n    return null;\n  }\n\n  populateElementsGrid(detachedElements: Protocol.DOM.DetachedElementInfo[]|null): void {\n    if (!detachedElements) {\n      return;\n    }\n\n    const heapProfilerModel = this.profile.heapProfilerModel();\n    const domModel = heapProfilerModel?.target().model(SDK.DOMModel.DOMModel);\n    if (!domModel) {\n      return;\n    }\n\n    for (const detachedElement of detachedElements) {\n      this.dataGrid.rootNode().appendChild(new HeapDetachedElementsDataGridNode(detachedElement, domModel));\n    }\n  }\n\n  override async toolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    return [...await super.toolbarItems(), this.selectedSizeText];\n  }\n}\n\nexport class DetachedElementsProfileType extends\n    Common.ObjectWrapper.eventMixin<DetachedElementsProfileType.EventTypes, typeof ProfileType>(ProfileType) {\n  constructor(typeId?: string, description?: string) {\n    super(\n        typeId || i18nString(UIStrings.detachedElementsTitle),\n        description || i18nString(UIStrings.detachedElementsTitle));\n  }\n\n  override profileBeingRecorded(): DetachedElementsProfileHeader|null {\n    return super.profileBeingRecorded() as DetachedElementsProfileHeader | null;\n  }\n\n  override get buttonTooltip(): Common.UIString.LocalizedString {\n    return i18nString(UIStrings.startDetachedElements);\n  }\n\n  override buttonClicked(): boolean {\n    void this.getDetachedElements();\n    return false;\n  }\n\n  async getDetachedElements(): Promise<void> {\n    if (this.profileBeingRecorded()) {\n      return;\n    }\n    const heapProfilerModel = UI.Context.Context.instance().flavor(SDK.HeapProfilerModel.HeapProfilerModel);\n    const target = heapProfilerModel?.target();\n    const domModel = target?.model(SDK.DOMModel.DOMModel);\n\n    if (!heapProfilerModel || !target || !domModel) {\n      return;\n    }\n    const data = await domModel.getDetachedDOMNodes();\n\n    const profile: DetachedElementsProfileHeader = new DetachedElementsProfileHeader(heapProfilerModel, this, data);\n    this.addProfile(profile);\n\n    this.dispatchEventToListeners(ProfileTypeEvents.PROFILE_COMPLETE, profile);\n  }\n\n  override get treeItemTitle(): Common.UIString.LocalizedString {\n    return i18nString(UIStrings.detachedElementsTitle);\n  }\n\n  override get description(): string {\n    return i18nString(UIStrings.detachedElementsDescription);\n  }\n\n  override isInstantProfile(): boolean {\n    return true;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly TypeId = 'DetachedElements';\n}\n\nexport namespace DetachedElementsProfileType {\n  export const enum Events {\n    RECORDING_STOPPED = 'RecordingStopped',\n    STATS_UPDATE = 'StatsUpdate',\n    DETACHED_ELEMENTS_OBTAINED = 'DetachedElementsObtained',\n  }\n\n  export interface EventTypes {\n    [Events.RECORDING_STOPPED]: void;\n    [Events.STATS_UPDATE]: Protocol.HeapProfiler.SamplingHeapProfile|null;\n    [Events.DETACHED_ELEMENTS_OBTAINED]: Protocol.DOM.DetachedElementInfo[]|null;\n  }\n}\n\nexport class DetachedElementsProfileHeader extends WritableProfileHeader {\n  readonly heapProfilerModelInternal: SDK.HeapProfilerModel.HeapProfilerModel|null;\n  readonly detachedElements: Protocol.DOM.DetachedElementInfo[]|null;\n  constructor(\n      heapProfilerModel: SDK.HeapProfilerModel.HeapProfilerModel|null, type: DetachedElementsProfileType,\n      detachedElements: Protocol.DOM.DetachedElementInfo[]|null, title?: string) {\n    super(\n        heapProfilerModel?.debuggerModel() ?? null, type,\n        title || i18nString(UIStrings.detachedElementProfile, {PH1: type.nextProfileUid()}));\n    this.detachedElements = detachedElements;\n    this.heapProfilerModelInternal = heapProfilerModel;\n  }\n\n  override createView(dataDisplayDelegate: DataDisplayDelegate): DetachedElementsProfileView {\n    return new DetachedElementsProfileView(dataDisplayDelegate, this);\n  }\n\n  heapProfilerModel(): SDK.HeapProfilerModel.HeapProfilerModel|null {\n    return this.heapProfilerModelInternal;\n  }\n\n  override profileType(): DetachedElementsProfileType {\n    return super.profileType() as DetachedElementsProfileType;\n  }\n}\n"]}