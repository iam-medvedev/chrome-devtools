{
  "version": 3,
  "sources": ["profiler-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Profiler from './profiler.js';\n\nlet loadedProfilerModule: (typeof Profiler|undefined);\n\nconst UIStrings = {\n  /**\n   *@description Title for the profiler tab\n   */\n  memory: 'Memory',\n  /**\n   *@description Title of the 'Live Heap Profile' tool in the bottom drawer\n   */\n  liveHeapProfile: 'Live Heap Profile',\n  /**\n   *@description Title of an action under the Performance category that can be invoked through the Command Menu\n   */\n  startRecordingHeapAllocations: 'Start recording heap allocations',\n  /**\n   *@description Title of an action under the Performance category that can be invoked through the Command Menu\n   */\n  stopRecordingHeapAllocations: 'Stop recording heap allocations',\n  /**\n   *@description Title of an action in the live heap profile tool to start with reload\n   */\n  startRecordingHeapAllocationsAndReload: 'Start recording heap allocations and reload the page',\n  /**\n   *@description Text in the Shortcuts page to explain a keyboard shortcut (start/stop recording performance)\n   */\n  startStopRecording: 'Start/stop recording',\n  /**\n   *@description Command for shwoing the profiler tab\n   */\n  showMemory: 'Show Memory',\n  /**\n   *@description Command for showing the 'Live Heap Profile' tool in the bottom drawer\n   */\n  showLiveHeapProfile: 'Show Live Heap Profile',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon clear button in the Profiles Panel of a profiler tool\n   */\n  clearAllProfiles: 'Clear all profiles',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon download button\n   */\n  saveProfile: 'Save profile…',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon load button\n   */\n  loadProfile: 'Load profile…',\n  /**\n   *@description Command for deleting a profile in the Profiler panel\n   */\n  deleteProfile: 'Delete profile',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/profiler/profiler-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nasync function loadProfilerModule(): Promise<typeof Profiler> {\n  if (!loadedProfilerModule) {\n    loadedProfilerModule = await import('./profiler.js');\n  }\n  return loadedProfilerModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (profilerModule: typeof Profiler) => T[]): T[] {\n  if (loadedProfilerModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedProfilerModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'heap-profiler',\n  commandPrompt: i18nLazyString(UIStrings.showMemory),\n  title: i18nLazyString(UIStrings.memory),\n  order: 60,\n  async loadView() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.HeapProfilerPanel.HeapProfilerPanel.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'live-heap-profile',\n  commandPrompt: i18nLazyString(UIStrings.showLiveHeapProfile),\n  title: i18nLazyString(UIStrings.liveHeapProfile),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 100,\n  async loadView() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.LiveHeapProfileView.LiveHeapProfileView.instance();\n  },\n  experiment: Root.Runtime.ExperimentName.LIVE_HEAP_PROFILE,\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'live-heap-profile.toggle-recording',\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return new Profiler.LiveHeapProfileView.ActionDelegate();\n  },\n  category: UI.ActionRegistration.ActionCategory.MEMORY,\n  experiment: Root.Runtime.ExperimentName.LIVE_HEAP_PROFILE,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.startRecordingHeapAllocations),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopRecordingHeapAllocations),\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'live-heap-profile.start-with-reload',\n  iconClass: UI.ActionRegistration.IconClass.REFRESH,\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return new Profiler.LiveHeapProfileView.ActionDelegate();\n  },\n  category: UI.ActionRegistration.ActionCategory.MEMORY,\n  experiment: Root.Runtime.ExperimentName.LIVE_HEAP_PROFILE,\n  title: i18nLazyString(UIStrings.startRecordingHeapAllocationsAndReload),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'profiler.heap-toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.MEMORY,\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  title: i18nLazyString(UIStrings.startStopRecording),\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Profiler => [Profiler.HeapProfilerPanel.HeapProfilerPanel]);\n  },\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.HeapProfilerPanel.HeapProfilerPanel.instance();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'profiler.clear-all',\n  category: UI.ActionRegistration.ActionCategory.MEMORY,\n  iconClass: UI.ActionRegistration.IconClass.CLEAR,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Profiler => [Profiler.ProfilesPanel.ProfilesPanel]);\n  },\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return new Profiler.ProfilesPanel.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.clearAllProfiles),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'profiler.load-from-file',\n  category: UI.ActionRegistration.ActionCategory.MEMORY,\n  iconClass: UI.ActionRegistration.IconClass.IMPORT,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Profiler => [Profiler.ProfilesPanel.ProfilesPanel]);\n  },\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return new Profiler.ProfilesPanel.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.loadProfile),\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+O',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+O',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'profiler.save-to-file',\n  category: UI.ActionRegistration.ActionCategory.MEMORY,\n  iconClass: UI.ActionRegistration.IconClass.DOWNLOAD,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Profiler => [Profiler.ProfileHeader.ProfileHeader]);\n  },\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return new Profiler.ProfilesPanel.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.saveProfile),\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+S',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+S',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'profiler.delete-profile',\n  category: UI.ActionRegistration.ActionCategory.MEMORY,\n  iconClass: UI.ActionRegistration.IconClass.DOWNLOAD,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Profiler => [Profiler.ProfileHeader.ProfileHeader]);\n  },\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return new Profiler.ProfilesPanel.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.deleteProfile),\n});\n\nUI.ContextMenu.registerProvider({\n  contextTypes() {\n    return [\n      SDK.RemoteObject.RemoteObject,\n    ];\n  },\n  async loadProvider() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.HeapProfilerPanel.HeapProfilerPanel.instance();\n  },\n  experiment: undefined,\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.PROFILER_MENU_DEFAULT,\n  actionId: 'profiler.save-to-file',\n  order: 10,\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.PROFILER_MENU_DEFAULT,\n  actionId: 'profiler.delete-profile',\n  order: 11,\n});\n"],
  "mappings": "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",
  "names": []
}
