{"version":3,"file":"PatchWidget.js","sourceRoot":"","sources":["../../../../../../front_end/panels/ai_assistance/PatchWidget.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/legacy.js';\nimport '../../ui/components/markdown_view/markdown_view.js';\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, nothing, render} from '../../ui/lit/lit.js';\n\nimport {type ResponseData, ResponseType} from './agents/AiAgent.js';\nimport {PatchAgent} from './agents/PatchAgent.js';\n\n/*\n* Strings that don't need to be translated at this time.\n*/\nconst UIStringsNotTranslate = {\n  /**\n   *@description Text displayed for showing change summary view.\n   */\n  changeSummary: 'Changes summary',\n  /**\n   *@description Button text for staging changes to workspace.\n   */\n  applyToWorkspace: 'Apply to workspace',\n  /*\n   *@description Button text to change the selected workspace\n   */\n  change: 'Change',\n  /**\n   *@description Button text while data is being loaded\n   */\n  loading: 'Loading...',\n  /**\n   *@description Label for the selected workspace/folder\n   */\n  selectedFolder: 'Selected folder:'\n} as const;\n\nconst lockedString = i18n.i18n.lockedString;\n\nexport interface ViewInput {\n  changeSummary?: string;\n  patchSuggestion?: string;\n  patchSuggestionLoading?: boolean;\n  projectName?: string;\n  onApplyToWorkspace?: () => void;\n}\n\ntype View = (input: ViewInput, output: undefined, target: HTMLElement) => void;\n\nasync function onChangeWorkspaceClick(): Promise<void> {\n  await UI.UIUtils.ConfirmDialog.show(\n      'Changing workspace is not implemented yet', 'Change workspace', undefined,\n      {jslogContext: 'change-workspace-dialog'});\n}\n\nexport class PatchWidget extends UI.Widget.Widget {\n  changeSummary = '';\n\n  #view: View;\n  #aidaClient: Host.AidaClient.AidaClient;\n  #project?: Workspace.Workspace.Project;\n  #patchSuggestion?: string;\n  #patchSuggestionLoading?: boolean;\n  #workspace = Workspace.Workspace.WorkspaceImpl.instance();\n\n  constructor(element?: HTMLElement, view?: View, opts?: {\n    aidaClient: Host.AidaClient.AidaClient,\n  }) {\n    super(false, false, element);\n    this.#aidaClient = opts?.aidaClient ?? new Host.AidaClient.AidaClient();\n    // clang-format off\n    this.#view = view ?? ((input, output, target) => {\n      if (!input.changeSummary) {\n        return;\n      }\n      render(\n        html`\n          <details class=\"change-summary\">\n            <summary>\n              <devtools-icon class=\"difference-icon\" .name=${'pen-spark'}\n              ></devtools-icon>\n              <span class=\"header-text\">\n                ${lockedString(UIStringsNotTranslate.changeSummary)}\n              </span>\n              <devtools-icon\n                class=\"arrow\"\n                .name=${'chevron-down'}\n              ></devtools-icon>\n            </summary>\n            <devtools-code-block\n              .code=${input.changeSummary}\n              .codeLang=${'css'}\n              .displayNotice=${true}\n            ></devtools-code-block>\n            <div class=\"workspace\">\n              <div class=\"change-workspace\">\n                <div class=\"selected-folder\">\n                  ${lockedString(UIStringsNotTranslate.selectedFolder)} ${input.projectName}\n                </div>\n                <devtools-button\n                  @click=${onChangeWorkspaceClick}\n                  .jslogContext=${'change-workspace'}\n                  .variant=${Buttons.Button.Variant.TEXT}>\n                    ${lockedString(UIStringsNotTranslate.change)}\n                </devtools-button>\n              </div>\n              <devtools-button\n                class='apply-to-workspace'\n                @click=${input.onApplyToWorkspace}\n                .jslogContext=${'stage-to-workspace'}\n                .variant=${Buttons.Button.Variant.OUTLINED}>\n                  ${!input.patchSuggestionLoading ? lockedString(UIStringsNotTranslate.applyToWorkspace) : lockedString(UIStringsNotTranslate.loading)}\n              </devtools-button>\n            </div>\n            ${input.patchSuggestion ? html`<div class=\"patch-tmp-message\">\n              ${input.patchSuggestion}\n            </div>` : nothing}\n          </details>\n        `,\n        target,\n        {host: target}\n      );\n    }) as View;\n    // clang-format on\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    const viewInput = {\n      changeSummary: this.changeSummary,\n      patchSuggestion: this.#patchSuggestion,\n      patchSuggestionLoading: this.#patchSuggestionLoading,\n      projectName: this.#project?.displayName(),\n      onApplyToWorkspace: this.#onApplyToWorkspace.bind(this),\n    };\n    this.#view(viewInput, undefined, this.contentElement);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.#selectProject();\n\n    if (isAiAssistancePatchingEnabled()) {\n      this.#workspace.addEventListener(Workspace.Workspace.Events.ProjectAdded, this.#onProjectAddedOrRemoved, this);\n      this.#workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved, this.#onProjectAddedOrRemoved, this);\n\n      // @ts-expect-error temporary global function for local testing.\n      window.aiAssistanceTestPatchPrompt = async (changeSummary: string) => {\n        return await this.#applyPatch(changeSummary);\n      };\n    }\n  }\n\n  override willHide(): void {\n    if (isAiAssistancePatchingEnabled()) {\n      this.#workspace.removeEventListener(Workspace.Workspace.Events.ProjectAdded, this.#onProjectAddedOrRemoved, this);\n      this.#workspace.removeEventListener(\n          Workspace.Workspace.Events.ProjectRemoved, this.#onProjectAddedOrRemoved, this);\n    }\n  }\n\n  #selectProject(): void {\n    if (isAiAssistancePatchingEnabled()) {\n      // TODO: this is temporary code that should be replaced with\n      // workflow selection flow. For now it picks the first Workspace\n      // project that is not Snippets.\n      const projects = this.#workspace.projectsForType(Workspace.Workspace.projectTypes.FileSystem);\n      this.#project = undefined;\n      for (const project of projects) {\n        // This is for TypeScript to narrow the types. projectsForType()\n        // probably only returns instances of\n        // Persistence.FileSystemWorkspaceBinding.FileSystem.\n        if (!(project instanceof Persistence.FileSystemWorkspaceBinding.FileSystem)) {\n          continue;\n        }\n        if (project.fileSystem().type() !== Persistence.PlatformFileSystem.PlatformFileSystemType.WORKSPACE_PROJECT) {\n          continue;\n        }\n        this.#project = project;\n        this.requestUpdate();\n        break;\n      }\n    }\n  }\n\n  #onProjectAddedOrRemoved(): void {\n    this.#selectProject();\n  }\n\n  async #onApplyToWorkspace(): Promise<void> {\n    if (!isAiAssistancePatchingEnabled()) {\n      return;\n    }\n    const changeSummary = this.changeSummary;\n    if (!changeSummary) {\n      throw new Error('Change summary does not exist');\n    }\n\n    this.#patchSuggestionLoading = true;\n    this.requestUpdate();\n    const response = await this.#applyPatch(changeSummary);\n    this.#patchSuggestion = response?.type === ResponseType.ANSWER ? response.text : 'Could not update files';\n    this.#patchSuggestionLoading = false;\n    this.requestUpdate();\n  }\n\n  async #applyPatch(changeSummary: string): Promise<ResponseData|undefined> {\n    if (!this.#project) {\n      throw new Error('Project does not exist');\n    }\n    const agent = new PatchAgent({\n      aidaClient: this.#aidaClient,\n      serverSideLoggingEnabled: false,\n      project: this.#project,\n    });\n    const responses = await Array.fromAsync(agent.applyChanges(changeSummary));\n    return responses.at(-1);\n  }\n}\n\nexport function isAiAssistancePatchingEnabled(): boolean {\n  const {hostConfig} = Root.Runtime;\n  return Boolean(hostConfig.devToolsFreestyler?.patching);\n}\n"]}