{"version":3,"file":"ChangeManager.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/ai_assistance/ChangeManager.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport * as AiAssistance from './ai_assistance.js';\n\ndescribe('ChangeManager', () => {\n  let styleSheetId = 0;\n  const frameId = '1' as Protocol.Page.FrameId;\n  const anotherFrameId = '2' as Protocol.Page.FrameId;\n  const agentId = '1';\n\n  beforeEach(() => {\n    styleSheetId = 0;\n  });\n\n  function createModel() {\n    const cssModel = sinon.createStubInstance(SDK.CSSModel.CSSModel, {\n      // @ts-expect-error stub types\n      createInspectorStylesheet: sinon.stub().callsFake(frameId => {\n        styleSheetId++;\n        return new SDK.CSSStyleSheetHeader.CSSStyleSheetHeader(cssModel, {\n          styleSheetId: String(styleSheetId) as Protocol.CSS.StyleSheetId,\n          frameId,\n          sourceURL: '',\n          origin: 'inspector' as Protocol.CSS.StyleSheetOrigin,\n          title: 'style.css',\n          disabled: false,\n          isInline: false,\n          isMutable: false,\n          isConstructed: false,\n          startLine: 0,\n          startColumn: 0,\n          length: 10,\n          endLine: 1,\n          endColumn: 8,\n        });\n      }),\n    });\n\n    return cssModel;\n  }\n\n  it('can register a change', async () => {\n    const changeManager = new AiAssistance.ChangeManager();\n    const cssModel = createModel();\n    await changeManager.addChange(cssModel, frameId, {\n      groupId: agentId,\n      selector: 'div',\n      className: 'ai-style-change-1',\n      styles: {\n        color: 'blue',\n      },\n    });\n    assert(cssModel.setStyleSheetText.calledOnce);\n    assert.deepEqual(\n        cssModel.setStyleSheetText.lastCall.args,\n        ['1', '.ai-style-change-1 {\\n  div& {\\n    color: blue;\\n  }\\n}', true],\n    );\n  });\n\n  it('can merge multiple changes with same className', async () => {\n    const changeManager = new AiAssistance.ChangeManager();\n    const cssModel = createModel();\n    await changeManager.addChange(cssModel, frameId, {\n      groupId: agentId,\n      selector: 'div',\n      className: 'ai-style-change-1',\n      styles: {\n        color: 'blue',\n      },\n    });\n    assert(cssModel.setStyleSheetText.calledOnce);\n    assert.deepEqual(\n        cssModel.setStyleSheetText.lastCall.args,\n        ['1', '.ai-style-change-1 {\\n  div& {\\n    color: blue;\\n  }\\n}', true]);\n    await changeManager.addChange(cssModel, frameId, {\n      groupId: agentId,\n      selector: 'span',\n      className: 'ai-style-change-1',\n      styles: {\n        color: 'green',\n      },\n    });\n    assert(cssModel.setStyleSheetText.calledTwice);\n    assert.deepEqual(\n        cssModel.setStyleSheetText.lastCall.args,\n        ['1', '.ai-style-change-1 {\\n  div& {\\n    color: green;\\n  }\\n}', true]);\n  });\n\n  it('can register multiple changes with the same selector', async () => {\n    const changeManager = new AiAssistance.ChangeManager();\n    const cssModel = createModel();\n    await changeManager.addChange(cssModel, frameId, {\n      groupId: agentId,\n      selector: 'div',\n      className: 'ai-style-change-1',\n      styles: {\n        color: 'blue',\n      },\n    });\n    await changeManager.addChange(cssModel, frameId, {\n      groupId: agentId,\n      selector: 'div',\n      className: 'ai-style-change-2',\n      styles: {\n        color: 'green',\n      },\n    });\n\n    assert(cssModel.setStyleSheetText.calledTwice);\n    assert.deepEqual(cssModel.setStyleSheetText.lastCall.args, [\n      '1',\n      '.ai-style-change-1 {\\n  div& {\\n    color: blue;\\n  }\\n}\\n.ai-style-change-2 {\\n  div& {\\n    color: green;\\n  }\\n}',\n      true\n    ]);\n  });\n\n  it('creates a stylesheet per frame', async () => {\n    const changeManager = new AiAssistance.ChangeManager();\n    const cssModel = createModel();\n    await changeManager.addChange(cssModel, frameId, {\n      groupId: agentId,\n      selector: 'div',\n      className: 'ai-style-change-1',\n      styles: {\n        color: 'blue',\n      },\n    });\n    assert(cssModel.setStyleSheetText.calledOnce);\n    assert.deepEqual(\n        cssModel.setStyleSheetText.lastCall.args,\n        ['1', '.ai-style-change-1 {\\n  div& {\\n    color: blue;\\n  }\\n}', true]);\n\n    await changeManager.addChange(cssModel, anotherFrameId, {\n      groupId: agentId,\n      selector: 'div',\n      className: 'ai-style-change-2',\n      styles: {\n        color: 'green',\n      },\n    });\n\n    assert(cssModel.setStyleSheetText.calledTwice);\n    assert.deepEqual(\n        cssModel.setStyleSheetText.lastCall.args,\n        ['2', '.ai-style-change-2 {\\n  div& {\\n    color: green;\\n  }\\n}', true]);\n  });\n\n  it('can clear changes', async () => {\n    const changeManager = new AiAssistance.ChangeManager();\n    let cssModel = createModel();\n    await changeManager.addChange(cssModel, frameId, {\n      groupId: agentId,\n      selector: 'div',\n      className: 'ai-style-change-1',\n      styles: {\n        color: 'blue',\n      },\n    });\n    assert(cssModel.setStyleSheetText.calledOnce);\n    assert.deepEqual(\n        cssModel.setStyleSheetText.lastCall.args,\n        ['1', '.ai-style-change-1 {\\n  div& {\\n    color: blue;\\n  }\\n}', true],\n    );\n    await changeManager.clear();\n    cssModel = createModel();\n    await changeManager.addChange(cssModel, frameId, {\n      groupId: agentId,\n      selector: 'body',\n      className: 'ai-style-change-1',\n      styles: {\n        color: 'green',\n      },\n    });\n    assert(cssModel.setStyleSheetText.calledOnce);\n    assert.deepEqual(\n        cssModel.setStyleSheetText.lastCall.args,\n        ['2', '.ai-style-change-1 {\\n  body& {\\n    color: green;\\n  }\\n}', true],\n    );\n  });\n\n  describe('format changes', () => {\n    it('returns empty string when there are no changes from the given agent', async () => {\n      const changeManager = new AiAssistance.ChangeManager();\n\n      assert.strictEqual(changeManager.formatChangesForPatching(agentId), '');\n    });\n\n    it('returns formatted changes for an agent without `.ai-style-change` classes', async () => {\n      const changeManager = new AiAssistance.ChangeManager();\n      const cssModel = createModel();\n\n      await changeManager.addChange(cssModel, frameId, {\n        groupId: agentId,\n        selector: 'div',\n        className: 'ai-style-change-1',\n        styles: {color: 'blue', 'background-color': 'green'},\n      });\n\n      assert.strictEqual(changeManager.formatChangesForPatching(agentId), `div {\n  color: blue;\n  background-color: green;\n}`);\n    });\n\n    it('formats source location', async () => {\n      const changeManager = new AiAssistance.ChangeManager();\n      const cssModel = createModel();\n      await changeManager.addChange(cssModel, frameId, {\n        groupId: agentId,\n        sourceLocation: 'button.scss:1:1',\n        selector: 'div',\n        className: 'ai-style-change-1',\n        styles: {color: 'blue', 'background-color': 'green'},\n      });\n\n      assert.strictEqual(\n          changeManager.formatChangesForPatching(agentId, /* includeSourceLocation=*/ true),\n          `/* related resource: button.scss:1:1 */\ndiv {\n  color: blue;\n  background-color: green;\n}`);\n    });\n  });\n});\n"]}