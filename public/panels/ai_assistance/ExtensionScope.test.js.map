{"version":3,"file":"ExtensionScope.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/ai_assistance/ExtensionScope.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {createResource, getMainFrame} from '../../testing/ResourceTreeHelpers.js';\nimport {createCSSStyle, getMatchedStyles, ruleMatch} from '../../testing/StyleHelpers.js';\n\nimport * as ExtensionScope from './ExtensionScope.js';\nimport * as Injected from './injected.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\nfunction createNode(options?: {getAttribute?: (attribute: string) => string | undefined}) {\n  const node = sinon.createStubInstance(SDK.DOMModel.DOMNode);\n  node.id = 1 as Protocol.DOM.NodeId;\n  // Needed to process the inline styles\n  node.nodeType.returns(Node.ELEMENT_NODE);\n  node.localName.returns('div');\n  node.simpleSelector.callThrough();\n  if (options?.getAttribute) {\n    node.getAttribute.callsFake(options.getAttribute);\n  }\n  return node;\n}\n\nasync function getSelector(\n    payload: Partial<SDK.CSSMatchedStyles.CSSMatchedStylesPayload>,\n    node?: SDK.DOMModel.DOMNode,\n) {\n  if (!node) {\n    node = createNode();\n  }\n\n  const matchedStyles = await getMatchedStyles({\n    node,\n    ...payload,\n  });\n\n  const styleRule = ExtensionScope.ExtensionScope.getStyleRuleFromMatchesStyles(matchedStyles);\n\n  if (!styleRule) {\n    return '';\n  }\n\n  return ExtensionScope.ExtensionScope.getSelectorsFromStyleRule(styleRule, matchedStyles);\n}\n\ndescribe('ExtensionScope', () => {\n  const MOCK_STYLE = [\n    {\n      name: 'color',\n      value: 'red',\n    },\n  ];\n\n  describe('getSimpleSelector', () => {\n    it('should work with node that has classes', () => {\n      const node = createNode({\n        getAttribute: attribute => {\n          if (attribute === 'class') {\n            return 'my-class-a my-class-b';\n          }\n\n          return undefined;\n        }\n      });\n      const selector = ExtensionScope.ExtensionScope.getSelectorForNode(node);\n      assert.strictEqual(selector, '.my-class-a.my-class-b');\n    });\n\n    it('should exclude ai generated class', () => {\n      const node = createNode({\n        getAttribute: attribute => {\n          if (attribute === 'class') {\n            return `my-class-a my-class-b ${Injected.AI_ASSISTANCE_CSS_CLASS_NAME}-2`;\n          }\n\n          return undefined;\n        }\n      });\n      const selector = ExtensionScope.ExtensionScope.getSelectorForNode(node);\n      assert.strictEqual(selector, '.my-class-a.my-class-b');\n    });\n\n    it('should work with node has classes that need escaping', () => {\n      const node = createNode({\n        getAttribute: attribute => {\n          if (attribute === 'class') {\n            return `my.special-class my-class-b ${Injected.AI_ASSISTANCE_CSS_CLASS_NAME}-2`;\n          }\n\n          return undefined;\n        }\n      });\n      const selector = ExtensionScope.ExtensionScope.getSelectorForNode(node);\n      assert.strictEqual(selector, '.my\\\\.special-class.my-class-b');\n    });\n  });\n\n  describe('getSelectorFromRules', () => {\n    it('should work with empty styles', async () => {\n      const selector = await getSelector({});\n      assert.strictEqual(selector, '');\n    });\n\n    it('should omit inline selectors', async () => {\n      const inlinePayload = createCSSStyle(MOCK_STYLE);\n      const selector = await getSelector({\n        inlinePayload,\n      });\n      assert.strictEqual(selector, '');\n    });\n\n    it('should work with id selector', async () => {\n      const matchedPayload = [\n        ruleMatch('#test', MOCK_STYLE),\n      ];\n      const selector = await getSelector({matchedPayload});\n      assert.strictEqual(selector, '#test');\n    });\n\n    it('should work with class selector', async () => {\n      const matchedPayload = [\n        ruleMatch('.test', MOCK_STYLE),\n      ];\n      const selector = await getSelector({matchedPayload});\n      assert.strictEqual(selector, '.test');\n    });\n\n    it('should work with tag selector', async () => {\n      const matchedPayload = [\n        ruleMatch('div', MOCK_STYLE),\n      ];\n      const selector = await getSelector({matchedPayload});\n      assert.strictEqual(selector, 'div');\n    });\n\n    it('should prefer id selectors', async () => {\n      const matchedPayload = [\n        ruleMatch(\n            {\n              selectors: [\n                {\n                  text: '#my-id',\n                  specificity: {a: 1, b: 0, c: 0},\n                },\n                {\n                  text: '.my-class',\n                  specificity: {a: 0, b: 1, c: 0},\n                },\n                {\n                  text: 'div',\n                  specificity: {a: 0, b: 0, c: 1},\n                },\n              ],\n              text: '#my-id, .my-class, div'\n            },\n            MOCK_STYLE,\n            ),\n      ];\n      const selector = await getSelector({matchedPayload});\n      assert.strictEqual(selector, '#my-id');\n    });\n\n    it('should prefer class selectors over tags', async () => {\n      const matchedPayload = [\n        ruleMatch(\n            {\n              selectors: [\n                {\n                  text: '.my-class',\n                  specificity: {a: 0, b: 1, c: 0},\n                },\n                {\n                  text: 'div',\n                  specificity: {a: 0, b: 0, c: 1},\n                },\n              ],\n              text: '.my-class, div'\n            },\n            MOCK_STYLE,\n            ),\n      ];\n      const selector = await getSelector({matchedPayload});\n      assert.strictEqual(selector, '.my-class');\n    });\n\n    it('should pick first rule from the cascade', async () => {\n      // Order is reversed we know that specificity order will\n      // be returned correctly\n      // front_end/core/sdk/CSSMatchedStyles.ts:373\n      const matchedPayload = [\n        ruleMatch('.test', MOCK_STYLE),\n        ruleMatch('.test-2', MOCK_STYLE),\n      ];\n      const selector = await getSelector({matchedPayload});\n      assert.strictEqual(selector, '.test-2');\n    });\n\n    it('should work with complex selector', async () => {\n      const matchedPayload = [\n        ruleMatch('div.container > .header', MOCK_STYLE),\n      ];\n      const selector = await getSelector({matchedPayload});\n      assert.strictEqual(selector, 'div.container > .header');\n    });\n\n    it('should return nested selector with ai assistance prefix', async () => {\n      // Order is reversed we know that specificity order will\n      // be returned correctly\n      // front_end/core/sdk/CSSMatchedStyles.ts:373\n      const matchedPayload = [\n        ruleMatch('.test', MOCK_STYLE),\n        ruleMatch(\n\n            {\n              selectors: [{text: 'div&'}],\n              text: 'div&',\n            },\n            MOCK_STYLE,\n            {\n              nestingSelectors: [`.${Injected.AI_ASSISTANCE_CSS_CLASS_NAME}-1`],\n            },\n            ),\n      ];\n      const selector = await getSelector({matchedPayload});\n      assert.strictEqual(selector, 'div');\n    });\n  });\n\n  describeWithMockConnection('getSourceLocation', () => {\n    async function setupMockedStyleRules() {\n      const target = createTarget();\n\n      const targetManager = target.targetManager();\n      targetManager.setScopeTarget(target);\n      const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n      const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n      Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance({forceNew: true, resourceMapping, targetManager});\n      const sourceURL = urlString`http://localhost/something/style.css`;\n      createResource(getMainFrame(target), sourceURL, 'text/html', '');\n      const uiSourceCode = workspace.uiSourceCodeForURL(sourceURL) as Workspace.UISourceCode.UISourceCode;\n      assert.isNotNull(uiSourceCode);\n      const cssModel = target.model(SDK.CSSModel.CSSModel)!;\n      const cssStyleSheetHeader = new SDK.CSSStyleSheetHeader.CSSStyleSheetHeader(cssModel, {\n        styleSheetId: 'test' as Protocol.CSS.StyleSheetId,\n        frameId: 'test' as Protocol.Page.FrameId,\n        sourceURL,\n        origin: Protocol.CSS.StyleSheetOrigin.Regular,\n        title: 'style.css',\n        disabled: false,\n        isInline: false,\n        isMutable: false,\n        isConstructed: false,\n        startLine: 0,\n        startColumn: 0,\n        length: 10,\n        endLine: 1,\n        endColumn: 8,\n      });\n      sinon.stub(cssModel, 'styleSheetHeaderForId').returns(cssStyleSheetHeader);\n      const node = createNode();\n      const matchedPayload = [\n        ruleMatch(\n            {\n              text: '.test',\n              selectors: [{\n                text: '.test',\n                range: {\n                  startLine: 0,\n                  startColumn: 0,\n                  endLine: 0,\n                  endColumn: 10,\n                }\n              }]\n            },\n            MOCK_STYLE, {\n              styleSheetId: cssStyleSheetHeader.id,\n            }),\n      ];\n\n      const matchedStyles = await getMatchedStyles({\n        node,\n        matchedPayload,\n        cssModel,\n      });\n\n      return ExtensionScope.ExtensionScope.getStyleRuleFromMatchesStyles(matchedStyles)!;\n    }\n\n    it('should compute a source location', async () => {\n      const styleRule = await setupMockedStyleRules();\n      assert.strictEqual(ExtensionScope.ExtensionScope.getSourceLocation(styleRule), 'style.css:1:1');\n    });\n  });\n});\n"]}