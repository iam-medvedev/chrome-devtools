{"version":3,"file":"ChatView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/ai_assistance/components/ChatView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/spinners/spinners.js';\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as AiAssistanceModel from '../../../models/ai_assistance/ai_assistance.js';\nimport * as Workspace from '../../../models/workspace/workspace.js';\nimport * as ElementsPanel from '../../../panels/elements/elements.js';\nimport * as TimelineUtils from '../../../panels/timeline/utils/utils.js';\nimport * as PanelUtils from '../../../panels/utils/utils.js';\nimport * as Marked from '../../../third_party/marked/marked.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport type * as MarkdownView from '../../../ui/components/markdown_view/markdown_view.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport {PatchWidget} from '../PatchWidget.js';\n\nimport chatViewStyles from './chatView.css.js';\nimport {MarkdownRendererWithCodeBlock} from './MarkdownRendererWithCodeBlock.js';\nimport {UserActionRow} from './UserActionRow.js';\n\nconst {html, Directives: {ifDefined, ref}} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description The error message when the user is not logged in into Chrome.\n   */\n  notLoggedIn: 'This feature is only available when you are signed into Chrome with your Google account',\n  /**\n   * @description Message shown when the user is offline.\n   */\n  offline: 'Check your internet connection and try again',\n  /**\n   * @description Text for a link to Chrome DevTools Settings.\n   */\n  settingsLink: 'AI assistance in Settings',\n  /**\n   * @description Text for asking the user to turn the AI assistance feature in settings first before they are able to use it.\n   * @example {AI assistance in Settings} PH1\n   */\n  turnOnForStyles: 'Turn on {PH1} to get help with understanding CSS styles',\n  /**\n   * @description Text for asking the user to turn the AI assistance feature in settings first before they are able to use it.\n   * @example {AI assistance in Settings} PH1\n   */\n  turnOnForStylesAndRequests: 'Turn on {PH1} to get help with styles and network requests',\n  /**\n   * @description Text for asking the user to turn the AI assistance feature in settings first before they are able to use it.\n   * @example {AI assistance in Settings} PH1\n   */\n  turnOnForStylesRequestsAndFiles: 'Turn on {PH1} to get help with styles, network requests, and files',\n  /**\n   * @description Text for asking the user to turn the AI assistance feature in settings first before they are able to use it.\n   * @example {AI assistance in Settings} PH1\n   */\n  turnOnForStylesRequestsPerformanceAndFiles:\n      'Turn on {PH1} to get help with styles, network requests, performance, and files',\n  /**\n   * @description The footer disclaimer that links to more information about the AI feature.\n   */\n  learnAbout: 'Learn about AI in DevTools',\n  /**\n   * @description Text informing the user that AI assistance is not available in Incognito mode or Guest mode.\n   */\n  notAvailableInIncognitoMode: 'AI assistance is not available in Incognito mode or Guest mode',\n\n  /**\n   * @description Label added to the text input to describe the context for screen readers. Not shown visibly on screen.\n   */\n  inputTextAriaDescription: 'You can also use one of the suggested prompts above to start your conversation',\n  /**\n   * @description Label added to the button that reveals the selected context item in DevTools\n   */\n  revealContextDescription: 'Reveal the selected context item in DevTools',\n} as const;\n\n/*\n* Strings that don't need to be translated at this time.\n*/\nconst UIStringsNotTranslate = {\n  /**\n   * @description Title for the send icon button.\n   */\n  sendButtonTitle: 'Send',\n  /**\n   * @description Title for the start new chat\n   */\n  startNewChat: 'Start new chat',\n  /**\n   * @description Title for the cancel icon button.\n   */\n  cancelButtonTitle: 'Cancel',\n  /**\n   * @description Label for the \"select an element\" button.\n   */\n  selectAnElement: 'Select an element',\n  /**\n   * @description Label for the \"select an element\" button.\n   */\n  noElementSelected: 'No element selected',\n  /**\n   * @description Text for the empty state of the AI assistance panel.\n   */\n  emptyStateText: 'How can I help you?',\n  /**\n   * @description The error message when the request to the LLM failed for some reason.\n   */\n  systemError:\n      'Something unforeseen happened and I can no longer continue. Try your request again and see if that resolves the issue. If this keeps happening, update Chrome to the latest version.',\n  /**\n   * @description The error message when the LLM gets stuck in a loop (max steps reached).\n   */\n  maxStepsError: 'Seems like I am stuck with the investigation. It would be better if you start over.',\n  /**\n   * @description Displayed when the user stop the response\n   */\n  stoppedResponse: 'You stopped this response',\n  /**\n   * @description Prompt for user to confirm code execution that may affect the page.\n   */\n  sideEffectConfirmationDescription: 'This code may modify page content. Continue?',\n  /**\n   * @description Button text that confirm code execution that may affect the page.\n   */\n  positiveSideEffectConfirmation: 'Continue',\n  /**\n   * @description Button text that cancels code execution that may affect the page.\n   */\n  negativeSideEffectConfirmation: 'Cancel',\n  /**\n   * @description The generic name of the AI agent (do not translate)\n   */\n  ai: 'AI',\n  /**\n   * @description The fallback text when we can't find the user full name\n   */\n  you: 'You',\n  /**\n   * @description The fallback text when a step has no title yet\n   */\n  investigating: 'Investigating',\n  /**\n   * @description Prefix to the title of each thinking step of a user action is required to continue\n   */\n  paused: 'Paused',\n  /**\n   * @description Heading text for the code block that shows the executed code.\n   */\n  codeExecuted: 'Code executed',\n  /**\n   * @description Heading text for the code block that shows the code to be executed after side effect confirmation.\n   */\n  codeToExecute: 'Code to execute',\n  /**\n   * @description Heading text for the code block that shows the returned data.\n   */\n  dataReturned: 'Data returned',\n  /**\n   * @description Aria label for the check mark icon to be read by screen reader\n   */\n  completed: 'Completed',\n  /**\n   * @description Aria label for the cancel icon to be read by screen reader\n   */\n  canceled: 'Canceled',\n  /**\n   * @description Text displayed when the chat input is disabled due to reading past conversation.\n   */\n  pastConversation: 'You\\'re viewing a past conversation.',\n  /**\n   * @description Title for the take screenshot button.\n   */\n  takeScreenshotButtonTitle: 'Take screenshot',\n  /**\n   * @description Title for the remove image input button.\n   */\n  removeImageInputButtonTitle: 'Remove image input',\n  /**\n   * @description Alt text for the image input (displayed in the chat messages) that has been sent to the model.\n   */\n  imageInputSentToTheModel: 'Image input sent to the model',\n  /**\n   * @description Alt text for the account avatar.\n   */\n  accountAvatar: 'Account avatar',\n  /**\n   * @description Title for the x-link which wraps the image input rendered in chat messages.\n   */\n  openImageInNewTab: 'Open image in a new tab',\n  /**\n   * @description Alt text for image when it is not available.\n   */\n  imageUnavailable: 'Image unavailable',\n  /**\n   * @description Title for the add image button.\n   */\n  addImageButtonTitle: 'Add image',\n  /**\n   * @description Disclaimer text right after the chat input.\n   */\n  inputDisclaimerForEmptyState: 'This is an experimental AI feature and won\\'t always get it right.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/ai_assistance/components/ChatView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst lockedString = i18n.i18n.lockedString;\n\nconst SCROLL_ROUNDING_OFFSET = 1;\nconst TOOLTIP_POPOVER_OFFSET = 4;\nconst RELEVANT_DATA_LINK_ID = 'relevant-data-link';\n\nexport interface Step {\n  isLoading: boolean;\n  thought?: string;\n  title?: string;\n  code?: string;\n  output?: string;\n  canceled?: boolean;\n  sideEffect?: ConfirmSideEffectDialog;\n  contextDetails?: [AiAssistanceModel.ContextDetail, ...AiAssistanceModel.ContextDetail[]];\n}\n\ninterface ConfirmSideEffectDialog {\n  onAnswer: (result: boolean) => void;\n}\n\nexport const enum ChatMessageEntity {\n  MODEL = 'model',\n  USER = 'user',\n}\n\nexport type ImageInputData = {\n  isLoading: true,\n}|{\n  isLoading: false,\n  data: string,\n  mimeType: string,\n  inputType: AiAssistanceModel.MultimodalInputType,\n};\n\nexport interface UserChatMessage {\n  entity: ChatMessageEntity.USER;\n  text: string;\n  imageInput?: Host.AidaClient.Part;\n}\nexport interface ModelChatMessage {\n  entity: ChatMessageEntity.MODEL;\n  steps: Step[];\n  suggestions?: [string, ...string[]];\n  answer?: string;\n  error?: AiAssistanceModel.ErrorType;\n  rpcId?: Host.AidaClient.RpcGlobalId;\n}\n\nexport type ChatMessage = UserChatMessage|ModelChatMessage;\n\nexport const enum State {\n  CONSENT_VIEW = 'consent-view',\n  CHAT_VIEW = 'chat-view',\n  EXPLORE_VIEW = 'explore-view'\n}\n\nexport interface Props {\n  onTextSubmit:\n      (text: string, imageInput?: Host.AidaClient.Part,\n       multimodalInputType?: AiAssistanceModel.MultimodalInputType) => void;\n  onInspectElementClick: () => void;\n  onFeedbackSubmit: (rpcId: Host.AidaClient.RpcGlobalId, rate: Host.AidaClient.Rating, feedback?: string) => void;\n  onCancelClick: () => void;\n  onContextClick: () => void;\n  onNewConversation: () => void;\n  onCopyResponseClick: (message: ModelChatMessage) => void;\n  onTakeScreenshot?: () => void;\n  onRemoveImageInput?: () => void;\n  onTextInputChange: (input: string) => void;\n  onLoadImage?: (file: File) => Promise<void>;\n  changeManager: AiAssistanceModel.ChangeManager;\n  inspectElementToggled: boolean;\n  state: State;\n  aidaAvailability: Host.AidaClient.AidaAccessPreconditions;\n  messages: ChatMessage[];\n  selectedContext: AiAssistanceModel.ConversationContext<unknown>|null;\n  isLoading: boolean;\n  canShowFeedbackForm: boolean;\n  userInfo: Pick<Host.InspectorFrontendHostAPI.SyncInformation, 'accountImage'|'accountFullName'>;\n  conversationType?: AiAssistanceModel.ConversationType;\n  isReadOnly: boolean;\n  blockedByCrossOrigin: boolean;\n  changeSummary?: string;\n  multimodalInputEnabled?: boolean;\n  imageInput?: ImageInputData;\n  isTextInputDisabled: boolean;\n  emptyStateSuggestions: AiAssistanceModel.ConversationSuggestion[];\n  inputPlaceholder: Platform.UIString.LocalizedString;\n  disclaimerText: Platform.UIString.LocalizedString;\n  isTextInputEmpty: boolean;\n  uploadImageInputEnabled?: boolean;\n}\n\nexport class ChatView extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #markdownRenderer = new MarkdownRendererWithCodeBlock();\n  #scrollTop?: number;\n  #props: Props;\n  #messagesContainerElement?: Element;\n  #mainElementRef?: Lit.Directives.Ref<Element> = Lit.Directives.createRef();\n  #messagesContainerResizeObserver = new ResizeObserver(() => this.#handleMessagesContainerResize());\n  #popoverHelper: UI.PopoverHelper.PopoverHelper|null = null;\n  /**\n   * Indicates whether the chat scroll position should be pinned to the bottom.\n   *\n   * This is true when:\n   *   - The scroll is at the very bottom, allowing new messages to push the scroll down automatically.\n   *   - The panel is initially rendered and the user hasn't scrolled yet.\n   *\n   * It is set to false when the user scrolls up to view previous messages.\n   */\n  #pinScrollToBottom = true;\n  /**\n   * Indicates whether the scroll event originated from code\n   * or a user action. When set to `true`, `handleScroll` will ignore the event,\n   * allowing it to only handle user-driven scrolls and correctly decide\n   * whether to pin the content to the bottom.\n   */\n  #isProgrammaticScroll = false;\n\n  constructor(props: Props) {\n    super();\n    this.#props = props;\n  }\n\n  set props(props: Props) {\n    this.#markdownRenderer = new MarkdownRendererWithCodeBlock();\n    this.#props = props;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#render();\n\n    if (this.#messagesContainerElement) {\n      this.#messagesContainerResizeObserver.observe(this.#messagesContainerElement);\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.#messagesContainerResizeObserver.disconnect();\n  }\n\n  clearTextInput(): void {\n    const textArea = this.#shadow.querySelector('.chat-input') as HTMLTextAreaElement;\n    if (!textArea) {\n      return;\n    }\n    textArea.value = '';\n  }\n\n  focusTextInput(): void {\n    const textArea = this.#shadow.querySelector('.chat-input') as HTMLTextAreaElement;\n    if (!textArea) {\n      return;\n    }\n\n    textArea.focus();\n  }\n\n  restoreScrollPosition(): void {\n    if (this.#scrollTop === undefined) {\n      return;\n    }\n\n    if (!this.#mainElementRef?.value) {\n      return;\n    }\n\n    this.#setMainElementScrollTop(this.#scrollTop);\n  }\n\n  scrollToBottom(): void {\n    if (!this.#mainElementRef?.value) {\n      return;\n    }\n\n    this.#setMainElementScrollTop(this.#mainElementRef.value.scrollHeight);\n  }\n\n  #handleChatUiRef(el: Element|undefined): void {\n    if (!el || this.#popoverHelper) {\n      return;\n    }\n\n    // TODO: Update here when b/409965560 is fixed.\n    this.#popoverHelper = new UI.PopoverHelper.PopoverHelper((el as HTMLElement), event => {\n      const popoverShownNode =\n          event.target instanceof HTMLElement && event.target.id === RELEVANT_DATA_LINK_ID ? event.target : null;\n      if (!popoverShownNode) {\n        return null;\n      }\n\n      // We move the glass pane to be a bit lower so\n      // that it does not disappear when moving the cursor\n      // over to link.\n      const nodeBox = popoverShownNode.boxInWindow();\n      nodeBox.y = nodeBox.y + TOOLTIP_POPOVER_OFFSET;\n      return {\n        box: nodeBox,\n        show: async (popover: UI.GlassPane.GlassPane) => {\n          // clang-format off\n          Lit.render(html`\n            <style>\n              .info-tooltip-container {\n                max-width: var(--sys-size-28);\n                padding: var(--sys-size-4) var(--sys-size-5);\n\n                .tooltip-link {\n                  display: block;\n                  margin-top: var(--sys-size-4);\n                  color: var(--sys-color-primary);\n                  padding-left: 0;\n                }\n              }\n            </style>\n            <div class=\"info-tooltip-container\">\n              ${this.#props.disclaimerText}\n              <button\n                class=\"link tooltip-link\"\n                role=\"link\"\n                jslog=${VisualLogging.link('open-ai-settings').track({\n                  click: true,\n                })}\n                @click=${() => {\n                  void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n                }}\n              >${i18nString(UIStrings.learnAbout)}</button>\n            </div>`, popover.contentElement, {host: this});\n          // clang-format on\n          return true;\n        },\n      };\n    });\n    this.#popoverHelper.setTimeout(0);\n  }\n\n  #handleMessagesContainerResize(): void {\n    if (!this.#pinScrollToBottom) {\n      return;\n    }\n\n    if (!this.#mainElementRef?.value) {\n      return;\n    }\n\n    if (this.#pinScrollToBottom) {\n      this.#setMainElementScrollTop(this.#mainElementRef.value.scrollHeight);\n    }\n  }\n\n  #setMainElementScrollTop(scrollTop: number): void {\n    if (!this.#mainElementRef?.value) {\n      return;\n    }\n\n    this.#scrollTop = scrollTop;\n    this.#isProgrammaticScroll = true;\n    this.#mainElementRef.value.scrollTop = scrollTop;\n  }\n\n  #setInputText(text: string): void {\n    const textArea = this.#shadow.querySelector('.chat-input') as HTMLTextAreaElement;\n    if (!textArea) {\n      return;\n    }\n\n    textArea.value = text;\n    this.#props.onTextInputChange(text);\n  }\n\n  #handleMessageContainerRef(el: Element|undefined): void {\n    this.#messagesContainerElement = el;\n\n    if (el) {\n      this.#messagesContainerResizeObserver.observe(el);\n    } else {\n      this.#pinScrollToBottom = true;\n      this.#messagesContainerResizeObserver.disconnect();\n    }\n  }\n\n  #handleScroll = (ev: Event): void => {\n    if (!ev.target || !(ev.target instanceof HTMLElement)) {\n      return;\n    }\n\n    // Do not handle scroll events caused by programmatically\n    // updating the scroll position. We want to know whether user\n    // did scroll the container from the user interface.\n    if (this.#isProgrammaticScroll) {\n      this.#isProgrammaticScroll = false;\n      return;\n    }\n\n    this.#scrollTop = ev.target.scrollTop;\n    this.#pinScrollToBottom =\n        ev.target.scrollTop + ev.target.clientHeight + SCROLL_ROUNDING_OFFSET > ev.target.scrollHeight;\n  };\n\n  #handleSubmit = (ev: SubmitEvent): void => {\n    ev.preventDefault();\n    if (this.#props.imageInput?.isLoading) {\n      return;\n    }\n\n    const textArea = this.#shadow.querySelector('.chat-input') as HTMLTextAreaElement;\n    if (!textArea?.value) {\n      return;\n    }\n    const imageInput = !this.#props.imageInput?.isLoading && this.#props.imageInput?.data ?\n        {inlineData: {data: this.#props.imageInput.data, mimeType: this.#props.imageInput.mimeType}} :\n        undefined;\n    void this.#props.onTextSubmit(textArea.value, imageInput, this.#props.imageInput?.inputType);\n    textArea.value = '';\n  };\n\n  #handleTextAreaKeyDown = (ev: KeyboardEvent): void => {\n    if (!ev.target || !(ev.target instanceof HTMLTextAreaElement)) {\n      return;\n    }\n\n    // Go to a new line on Shift+Enter. On Enter, submit unless the\n    // user is in IME composition.\n    if (ev.key === 'Enter' && !ev.shiftKey && !ev.isComposing) {\n      ev.preventDefault();\n      if (!ev.target?.value || this.#props.imageInput?.isLoading) {\n        return;\n      }\n      const imageInput = !this.#props.imageInput?.isLoading && this.#props.imageInput?.data ?\n          {inlineData: {data: this.#props.imageInput.data, mimeType: this.#props.imageInput.mimeType}} :\n          undefined;\n      void this.#props.onTextSubmit(ev.target.value, imageInput, this.#props.imageInput?.inputType);\n      ev.target.value = '';\n    }\n  };\n\n  #handleCancel = (ev: SubmitEvent): void => {\n    ev.preventDefault();\n\n    if (!this.#props.isLoading) {\n      return;\n    }\n\n    this.#props.onCancelClick();\n  };\n\n  #handleImageUpload = (ev: Event): void => {\n    ev.stopPropagation();\n    if (this.#props.onLoadImage) {\n      const fileSelector = UI.UIUtils.createFileSelectorElement(this.#props.onLoadImage.bind(this), '.jpeg,.jpg,.png');\n      fileSelector.click();\n    }\n  };\n\n  #handleSuggestionClick = (suggestion: string): void => {\n    this.#setInputText(suggestion);\n    this.focusTextInput();\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceDynamicSuggestionClicked);\n  };\n\n  #render(): void {\n    const renderFooter = (): Lit.LitTemplate => {\n      const classes = Lit.Directives.classMap({\n        'chat-view-footer': true,\n        'has-conversation': !!this.#props.conversationType,\n        'is-read-only': this.#props.isReadOnly,\n      });\n\n      // clang-format off\n      const footerContents = this.#props.conversationType\n        ? renderRelevantDataDisclaimer({\n            isLoading: this.#props.isLoading,\n            blockedByCrossOrigin: this.#props.blockedByCrossOrigin,\n          })\n        : html`<p>\n            ${lockedString(UIStringsNotTranslate.inputDisclaimerForEmptyState)}\n            <button\n              class=\"link\"\n              role=\"link\"\n              jslog=${VisualLogging.link('open-ai-settings').track({\n                click: true,\n              })}\n              @click=${() => {\n                void UI.ViewManager.ViewManager.instance().showView(\n                  'chrome-ai',\n                );\n              }}\n            >${i18nString(UIStrings.learnAbout)}</button>\n          </p>`;\n\n      return html`\n        <footer class=${classes} jslog=${VisualLogging.section('footer')}>\n          ${footerContents}\n        </footer>\n      `;\n    };\n    // clang-format off\n    Lit.render(html`\n      <style>${chatViewStyles}</style>\n      <div class=\"chat-ui\" ${Lit.Directives.ref(this.#handleChatUiRef)}>\n        <main @scroll=${this.#handleScroll} ${ref(this.#mainElementRef)}>\n          ${renderMainContents({\n            state: this.#props.state,\n            aidaAvailability: this.#props.aidaAvailability,\n            messages: this.#props.messages,\n            isLoading: this.#props.isLoading,\n            isReadOnly: this.#props.isReadOnly,\n            canShowFeedbackForm: this.#props.canShowFeedbackForm,\n            isTextInputDisabled: this.#props.isTextInputDisabled,\n            suggestions: this.#props.emptyStateSuggestions,\n            userInfo: this.#props.userInfo,\n            markdownRenderer: this.#markdownRenderer,\n            conversationType: this.#props.conversationType,\n            changeSummary: this.#props.changeSummary,\n            changeManager: this.#props.changeManager,\n            onSuggestionClick: this.#handleSuggestionClick,\n            onFeedbackSubmit: this.#props.onFeedbackSubmit,\n            onMessageContainerRef: this.#handleMessageContainerRef,\n            onCopyResponseClick: this.#props.onCopyResponseClick,\n          })}\n          ${this.#props.isReadOnly\n            ? renderReadOnlySection({\n                conversationType: this.#props.conversationType,\n                onNewConversation: this.#props.onNewConversation,\n              })\n            : renderChatInput({\n                isLoading: this.#props.isLoading,\n                blockedByCrossOrigin: this.#props.blockedByCrossOrigin,\n                isTextInputDisabled: this.#props.isTextInputDisabled,\n                inputPlaceholder: this.#props.inputPlaceholder,\n                state: this.#props.state,\n                selectedContext: this.#props.selectedContext,\n                inspectElementToggled: this.#props.inspectElementToggled,\n                multimodalInputEnabled: this.#props.multimodalInputEnabled,\n                conversationType: this.#props.conversationType,\n                imageInput: this.#props.imageInput,\n                isTextInputEmpty: this.#props.isTextInputEmpty,\n                aidaAvailability: this.#props.aidaAvailability,\n                uploadImageInputEnabled: this.#props.uploadImageInputEnabled,\n                onContextClick: this.#props.onContextClick,\n                onInspectElementClick: this.#props.onInspectElementClick,\n                onSubmit: this.#handleSubmit,\n                onTextAreaKeyDown: this.#handleTextAreaKeyDown,\n                onCancel: this.#handleCancel,\n                onNewConversation: this.#props.onNewConversation,\n                onTakeScreenshot: this.#props.onTakeScreenshot,\n                onRemoveImageInput: this.#props.onRemoveImageInput,\n                onTextInputChange: this.#props.onTextInputChange,\n                onImageUpload: this.#handleImageUpload,\n              })\n          }\n        </main>\n       ${renderFooter()}\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nfunction renderTextAsMarkdown(text: string, markdownRenderer: MarkdownRendererWithCodeBlock, {animate, ref: refFn}: {\n  animate?: boolean,\n  ref?: (element?: Element) => void,\n} = {}): Lit.TemplateResult {\n  let tokens = [];\n  try {\n    tokens = Marked.Marked.lexer(text);\n    for (const token of tokens) {\n      // Try to render all the tokens to make sure that\n      // they all have a template defined for them. If there\n      // isn't any template defined for a token, we'll fallback\n      // to rendering the text as plain text instead of markdown.\n      markdownRenderer.renderToken(token);\n    }\n  } catch {\n    // The tokens were not parsed correctly or\n    // one of the tokens are not supported, so we\n    // continue to render this as text.\n    return html`${text}`;\n  }\n\n  // clang-format off\n  return html`<devtools-markdown-view\n    .data=${{tokens, renderer: markdownRenderer, animationEnabled: animate} as MarkdownView.MarkdownView.MarkdownViewData}\n    ${refFn ? ref(refFn) : Lit.nothing}>\n  </devtools-markdown-view>`;\n  // clang-format on\n}\n\nfunction renderTitle(step: Step): Lit.LitTemplate {\n  const paused =\n      step.sideEffect ? html`<span class=\"paused\">${lockedString(UIStringsNotTranslate.paused)}: </span>` : Lit.nothing;\n  const actionTitle = step.title ?? `${lockedString(UIStringsNotTranslate.investigating)}…`;\n\n  return html`<span class=\"title\">${paused}${actionTitle}</span>`;\n}\n\nfunction renderStepCode(step: Step): Lit.LitTemplate {\n  if (!step.code && !step.output) {\n    return Lit.nothing;\n  }\n\n  // If there is no \"output\" yet, it means we didn't execute the code yet (e.g. maybe it is still waiting for confirmation from the user)\n  // thus we show \"Code to execute\" text rather than \"Code executed\" text on the heading of the code block.\n  const codeHeadingText = (step.output && !step.canceled) ? lockedString(UIStringsNotTranslate.codeExecuted) :\n                                                            lockedString(UIStringsNotTranslate.codeToExecute);\n\n  // If there is output, we don't show notice on this code block and instead show\n  // it in the data returned code block.\n  // clang-format off\n  const code = step.code ? html`<div class=\"action-result\">\n      <devtools-code-block\n        .code=${step.code.trim()}\n        .codeLang=${'js'}\n        .displayNotice=${!Boolean(step.output)}\n        .header=${codeHeadingText}\n        .showCopyButton=${true}\n      ></devtools-code-block>\n  </div>` :\n                           Lit.nothing;\n  const output = step.output ? html`<div class=\"js-code-output\">\n    <devtools-code-block\n      .code=${step.output}\n      .codeLang=${'js'}\n      .displayNotice=${true}\n      .header=${lockedString(UIStringsNotTranslate.dataReturned)}\n      .showCopyButton=${false}\n    ></devtools-code-block>\n  </div>` :\n                               Lit.nothing;\n\n  return html`<div class=\"step-code\">${code}${output}</div>`;\n  // clang-format on\n}\n\nfunction renderStepDetails({\n  step,\n  markdownRenderer,\n  isLast,\n}: {\n  step: Step,\n  markdownRenderer: MarkdownRendererWithCodeBlock,\n  isLast: boolean,\n}): Lit.LitTemplate {\n  const sideEffects = isLast && step.sideEffect ? renderSideEffectConfirmationUi(step) : Lit.nothing;\n  const thought = step.thought ? html`<p>${renderTextAsMarkdown(step.thought, markdownRenderer)}</p>` : Lit.nothing;\n\n  // clang-format off\n  const contextDetails = step.contextDetails ?\n  html`${Lit.Directives.repeat(\n    step.contextDetails,\n      contextDetail => {\n        return html`<div class=\"context-details\">\n      <devtools-code-block\n        .code=${contextDetail.text}\n        .codeLang=${contextDetail.codeLang || ''}\n        .displayNotice=${false}\n        .header=${contextDetail.title}\n        .showCopyButton=${true}\n      ></devtools-code-block>\n    </div>`;\n      },\n    )}` : Lit.nothing;\n\n  return html`<div class=\"step-details\">\n    ${thought}\n    ${renderStepCode(step)}\n    ${sideEffects}\n    ${contextDetails}\n  </div>`;\n  // clang-format on\n}\n\nfunction renderStepBadge({step, isLoading, isLast}: {\n  step: Step,\n  isLoading: boolean,\n  isLast: boolean,\n}): Lit.LitTemplate {\n  if (isLoading && isLast && !step.sideEffect) {\n    return html`<devtools-spinner></devtools-spinner>`;\n  }\n\n  let iconName = 'checkmark';\n  let ariaLabel: string|undefined = lockedString(UIStringsNotTranslate.completed);\n  let role: 'button'|undefined = 'button';\n  if (isLast && step.sideEffect) {\n    role = undefined;\n    ariaLabel = undefined;\n    iconName = 'pause-circle';\n  } else if (step.canceled) {\n    ariaLabel = lockedString(UIStringsNotTranslate.canceled);\n    iconName = 'cross';\n  }\n\n  return html`<devtools-icon\n      class=\"indicator\"\n      role=${ifDefined(role)}\n      aria-label=${ifDefined(ariaLabel)}\n      .name=${iconName}\n    ></devtools-icon>`;\n}\n\nfunction renderStep({step, isLoading, markdownRenderer, isLast}: {\n  step: Step,\n  isLoading: boolean,\n  markdownRenderer: MarkdownRendererWithCodeBlock,\n  isLast: boolean,\n}): Lit.LitTemplate {\n  const stepClasses = Lit.Directives.classMap({\n    step: true,\n    empty: !step.thought && !step.code && !step.contextDetails,\n    paused: Boolean(step.sideEffect),\n    canceled: Boolean(step.canceled),\n  });\n  // clang-format off\n  return html`\n    <details class=${stepClasses}\n      jslog=${VisualLogging.section('step')}\n      .open=${Boolean(step.sideEffect)}>\n      <summary>\n        <div class=\"summary\">\n          ${renderStepBadge({ step, isLoading, isLast })}\n          ${renderTitle(step)}\n          <devtools-icon\n            class=\"arrow\"\n            name=\"chevron-down\"\n          ></devtools-icon>\n        </div>\n      </summary>\n      ${renderStepDetails({step, markdownRenderer, isLast})}\n    </details>`;\n  // clang-format on\n}\n\nfunction renderSideEffectConfirmationUi(step: Step): Lit.LitTemplate {\n  if (!step.sideEffect) {\n    return Lit.nothing;\n  }\n\n  // clang-format off\n  return html`<div\n    class=\"side-effect-confirmation\"\n    jslog=${VisualLogging.section('side-effect-confirmation')}\n  >\n    <p>${lockedString(UIStringsNotTranslate.sideEffectConfirmationDescription)}</p>\n    <div class=\"side-effect-buttons-container\">\n      <devtools-button\n        .data=${\n          {\n            variant: Buttons.Button.Variant.OUTLINED,\n            jslogContext: 'decline-execute-code',\n          } as Buttons.Button.ButtonData\n        }\n        @click=${() => step.sideEffect?.onAnswer(false)}\n      >${lockedString(\n        UIStringsNotTranslate.negativeSideEffectConfirmation,\n      )}</devtools-button>\n      <devtools-button\n        .data=${\n          {\n            variant: Buttons.Button.Variant.PRIMARY,\n            jslogContext: 'accept-execute-code',\n            iconName: 'play',\n          } as Buttons.Button.ButtonData\n        }\n        @click=${() => step.sideEffect?.onAnswer(true)}\n      >${\n          lockedString(UIStringsNotTranslate.positiveSideEffectConfirmation)\n      }</devtools-button>\n    </div>\n  </div>`;\n  // clang-format on\n}\n\nfunction renderError(message: ModelChatMessage): Lit.LitTemplate {\n  if (message.error) {\n    let errorMessage;\n    switch (message.error) {\n      case AiAssistanceModel.ErrorType.UNKNOWN:\n      case AiAssistanceModel.ErrorType.BLOCK:\n        errorMessage = UIStringsNotTranslate.systemError;\n        break;\n      case AiAssistanceModel.ErrorType.MAX_STEPS:\n        errorMessage = UIStringsNotTranslate.maxStepsError;\n        break;\n      case AiAssistanceModel.ErrorType.ABORT:\n        return html`<p class=\"aborted\" jslog=${VisualLogging.section('aborted')}>${\n            lockedString(UIStringsNotTranslate.stoppedResponse)}</p>`;\n    }\n\n    return html`<p class=\"error\" jslog=${VisualLogging.section('error')}>${lockedString(errorMessage)}</p>`;\n  }\n\n  return Lit.nothing;\n}\n\nfunction renderChatMessage({\n  message,\n  isLoading,\n  isReadOnly,\n  canShowFeedbackForm,\n  isLast,\n  userInfo,\n  markdownRenderer,\n  onSuggestionClick,\n  onFeedbackSubmit,\n  onCopyResponseClick,\n}: {\n  message: ChatMessage,\n  isLoading: boolean,\n  isReadOnly: boolean,\n  canShowFeedbackForm: boolean,\n  isLast: boolean,\n  userInfo: Pick<Host.InspectorFrontendHostAPI.SyncInformation, 'accountImage'|'accountFullName'>,\n  markdownRenderer: MarkdownRendererWithCodeBlock,\n  onSuggestionClick: (suggestion: string) => void,\n  onFeedbackSubmit: (rpcId: Host.AidaClient.RpcGlobalId, rate: Host.AidaClient.Rating, feedback?: string) => void,\n  onCopyResponseClick: (message: ModelChatMessage) => void,\n}): Lit.TemplateResult {\n  if (message.entity === ChatMessageEntity.USER) {\n    const name = userInfo.accountFullName || lockedString(UIStringsNotTranslate.you);\n    const image = userInfo.accountImage ?\n        html`<img src=\"data:image/png;base64, ${userInfo.accountImage}\" alt=${UIStringsNotTranslate.accountAvatar} />` :\n        html`<devtools-icon\n          name=\"profile\"\n        ></devtools-icon>`;\n    const imageInput = message.imageInput && 'inlineData' in message.imageInput ?\n        renderImageChatMessage(message.imageInput.inlineData) :\n        Lit.nothing;\n    // clang-format off\n    return html`<section\n      class=\"chat-message query\"\n      jslog=${VisualLogging.section('question')}\n    >\n      <div class=\"message-info\">\n        ${image}\n        <div class=\"message-name\">\n          <h2>${name}</h2>\n        </div>\n      </div>\n      ${imageInput}\n      <div class=\"message-content\">${renderTextAsMarkdown(message.text, markdownRenderer)}</div>\n    </section>`;\n    // clang-format on\n  }\n\n  // clang-format off\n  return html`\n    <section\n      class=\"chat-message answer\"\n      jslog=${VisualLogging.section('answer')}\n    >\n      <div class=\"message-info\">\n        <devtools-icon name=\"smart-assistant\"></devtools-icon>\n        <div class=\"message-name\">\n          <h2>${lockedString(UIStringsNotTranslate.ai)}</h2>\n        </div>\n      </div>\n      ${Lit.Directives.repeat(\n        message.steps,\n        (_, index) => index,\n        step => {\n          return renderStep({\n            step,\n            isLoading,\n            markdownRenderer,\n            isLast: [...message.steps.values()].at(-1) === step && isLast,\n          });\n        },\n      )}\n      ${message.answer\n        ? html`<p>${renderTextAsMarkdown(message.answer, markdownRenderer, { animate: !isReadOnly && isLoading && isLast })}</p>`\n        : Lit.nothing}\n      ${renderError(message)}\n      ${isLast && isLoading\n        ? Lit.nothing\n        : html`<devtools-widget class=\"actions\" .widgetConfig=${UI.Widget.widgetConfig(UserActionRow, {\n            showRateButtons: message.rpcId !== undefined,\n            onFeedbackSubmit: (rating: Host.AidaClient.Rating, feedback?: string) => {\n              if (!message.rpcId) {\n                return;\n              }\n              onFeedbackSubmit(message.rpcId, rating, feedback);\n            },\n            suggestions: (isLast && !isReadOnly) ? message.suggestions : undefined,\n            onSuggestionClick,\n            onCopyResponseClick: () => onCopyResponseClick(message),\n            canShowFeedbackForm,\n          })}></devtools-widget>`\n      }\n    </section>\n  `;\n  // clang-format on\n}\n\nfunction renderImageChatMessage(inlineData: Host.AidaClient.MediaBlob): Lit.LitTemplate {\n  if (inlineData.data === AiAssistanceModel.NOT_FOUND_IMAGE_DATA) {\n    // clang-format off\n    return html`<div class=\"unavailable-image\" title=${UIStringsNotTranslate.imageUnavailable}>\n      <devtools-icon name='file-image'></devtools-icon>\n    </div>`;\n    // clang-format on\n  }\n  const imageUrl = `data:${inlineData.mimeType};base64,${inlineData.data}`;\n  // clang-format off\n    return html`<x-link\n      class=\"image-link\" title=${UIStringsNotTranslate.openImageInNewTab}\n      href=${imageUrl}\n    >\n      <img src=${imageUrl} alt=${UIStringsNotTranslate.imageInputSentToTheModel} />\n    </x-link>`;\n  // clang-format on\n}\n\nfunction renderContextIcon(context: AiAssistanceModel.ConversationContext<unknown>|null): Lit.LitTemplate {\n  if (!context) {\n    return Lit.nothing;\n  }\n  const item = context.getItem();\n  // FIXME: move this to presenter once PanelUtils are declarative. The instance\n  // checking should be in the presenter and the rendering in the view function.\n  if (item instanceof SDK.NetworkRequest.NetworkRequest) {\n    return PanelUtils.PanelUtils.getIconForNetworkRequest(item);\n  }\n  if (item instanceof Workspace.UISourceCode.UISourceCode) {\n    return PanelUtils.PanelUtils.getIconForSourceFile(item);\n  }\n  if (item instanceof TimelineUtils.AIContext.AgentFocus) {\n    return html`<devtools-icon name=\"performance\" title=\"Performance\"></devtools-icon>`;\n  }\n  if (item instanceof SDK.DOMModel.DOMNode) {\n    return Lit.nothing;\n  }\n  return Lit.nothing;\n}\n\nfunction renderContextTitle(\n    context: AiAssistanceModel.ConversationContext<unknown>, disabled: boolean): Lit.TemplateResult|string {\n  const item = context.getItem();\n  if (item instanceof SDK.DOMModel.DOMNode) {\n    // FIXME: move this to the model code.\n    const hiddenClassList =\n        item.classNames().filter(className => className.startsWith(AiAssistanceModel.AI_ASSISTANCE_CSS_CLASS_NAME));\n    return html`<devtools-widget .widgetConfig=${UI.Widget.widgetConfig(ElementsPanel.DOMLinkifier.DOMNodeLink, {\n      node: item,\n      options: {hiddenClassList, disabled}\n    })}></devtools-widget>`;\n  }\n  return context.getTitle();\n}\n\nfunction renderSelection({\n  selectedContext,\n  inspectElementToggled,\n  conversationType,\n  isTextInputDisabled,\n  onContextClick,\n  onInspectElementClick,\n}: {\n  selectedContext: AiAssistanceModel.ConversationContext<unknown>|null,\n  inspectElementToggled: boolean,\n  isTextInputDisabled: boolean,\n  onContextClick: () => void | Promise<void>,\n  onInspectElementClick: () => void,\n  conversationType?: AiAssistanceModel.ConversationType,\n}): Lit.LitTemplate {\n  if (!conversationType) {\n    return Lit.nothing;\n  }\n\n  // TODO: currently the picker behavior is SDKNode specific.\n  const hasPickerBehavior = conversationType === AiAssistanceModel.ConversationType.STYLING;\n\n  const resourceClass = Lit.Directives.classMap({\n    'not-selected': !selectedContext,\n    'resource-link': true,\n    'has-picker-behavior': hasPickerBehavior,\n    disabled: isTextInputDisabled,\n  });\n\n  if (!selectedContext && !hasPickerBehavior) {\n    return Lit.nothing;\n  }\n\n  const handleKeyDown = (ev: KeyboardEvent): void => {\n    if (ev.key === 'Enter' || ev.key === ' ') {\n      void onContextClick();\n    }\n  };\n\n  // clang-format off\n  return html`<div class=\"select-element\">\n    ${\n      hasPickerBehavior ? html`\n        <devtools-button\n          .data=${{\n              variant: Buttons.Button.Variant.ICON_TOGGLE,\n              size: Buttons.Button.Size.SMALL,\n              iconName: 'select-element',\n              toggledIconName: 'select-element',\n              toggleType: Buttons.Button.ToggleType.PRIMARY,\n              toggled: inspectElementToggled,\n              title: lockedString(UIStringsNotTranslate.selectAnElement),\n              jslogContext: 'select-element',\n              disabled: isTextInputDisabled,\n          } as Buttons.Button.ButtonData}\n          @click=${onInspectElementClick}\n        ></devtools-button>\n      ` : Lit.nothing\n    }\n    <div\n      role=button\n      class=${resourceClass}\n      tabindex=${(hasPickerBehavior || isTextInputDisabled) ? '-1' : '0'}\n      @click=${onContextClick}\n      @keydown=${handleKeyDown}\n      aria-description=${i18nString(UIStrings.revealContextDescription)}\n    >\n      ${renderContextIcon(selectedContext)}\n      <span class=\"title\">${selectedContext ? renderContextTitle(selectedContext, isTextInputDisabled) : lockedString(UIStringsNotTranslate.noElementSelected)}</span>\n    </div>\n  </div>`;\n  // clang-format on\n}\n\nfunction renderMessages({\n  messages,\n  isLoading,\n  isReadOnly,\n  canShowFeedbackForm,\n  userInfo,\n  markdownRenderer,\n  changeSummary,\n  changeManager,\n  onSuggestionClick,\n  onFeedbackSubmit,\n  onCopyResponseClick,\n  onMessageContainerRef,\n}: {\n  messages: ChatMessage[],\n  isLoading: boolean,\n  isReadOnly: boolean,\n  canShowFeedbackForm: boolean,\n  userInfo: Pick<Host.InspectorFrontendHostAPI.SyncInformation, 'accountImage'|'accountFullName'>,\n  markdownRenderer: MarkdownRendererWithCodeBlock,\n  onSuggestionClick: (suggestion: string) => void,\n  onFeedbackSubmit: (rpcId: Host.AidaClient.RpcGlobalId, rate: Host.AidaClient.Rating, feedback?: string) => void,\n  onCopyResponseClick: (message: ModelChatMessage) => void,\n  onMessageContainerRef: (el: Element|undefined) => void,\n  changeSummary?: string,\n  changeManager?: AiAssistanceModel.ChangeManager,\n}): Lit.TemplateResult {\n  function renderPatchWidget(): Lit.LitTemplate {\n    if (isLoading) {\n      return Lit.nothing;\n    }\n\n    // clang-format off\n    return html`<devtools-widget\n      .widgetConfig=${UI.Widget.widgetConfig(PatchWidget, {\n        changeSummary: changeSummary ?? '',\n        changeManager,\n      })}\n    ></devtools-widget>`;\n    // clang-format on\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"messages-container\" ${ref(onMessageContainerRef)}>\n      ${messages.map((message, _, array) =>\n        renderChatMessage({\n          message,\n          isLoading,\n          isReadOnly,\n          canShowFeedbackForm,\n          isLast: array.at(-1) === message,\n          userInfo,\n          markdownRenderer,\n          onSuggestionClick,\n          onFeedbackSubmit,\n          onCopyResponseClick,\n        }),\n      )}\n      ${renderPatchWidget()}\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderEmptyState({isTextInputDisabled, suggestions, onSuggestionClick}: {\n  isTextInputDisabled: boolean,\n  suggestions: AiAssistanceModel.ConversationSuggestion[],\n  onSuggestionClick: (suggestion: string) => void,\n}): Lit.TemplateResult {\n  // clang-format off\n  return html`<div class=\"empty-state-container\">\n    <div class=\"header\">\n      <div class=\"icon\">\n        <devtools-icon\n          name=\"smart-assistant\"\n        ></devtools-icon>\n      </div>\n      <h1>${lockedString(UIStringsNotTranslate.emptyStateText)}</h1>\n    </div>\n    <div class=\"empty-state-content\">\n      ${suggestions.map(({title, jslogContext}) => {\n        return html`<devtools-button\n          class=\"suggestion\"\n          @click=${() => onSuggestionClick(title)}\n          .data=${\n            {\n              variant: Buttons.Button.Variant.OUTLINED,\n              size: Buttons.Button.Size.REGULAR,\n              title,\n              jslogContext: jslogContext ?? 'suggestion',\n              disabled: isTextInputDisabled,\n            } as Buttons.Button.ButtonData\n          }\n        >${title}</devtools-button>`;\n      })}\n    </div>\n  </div>`;\n  // clang-format on\n}\n\nfunction renderReadOnlySection({onNewConversation, conversationType}: {\n  onNewConversation: () => void,\n  conversationType?: AiAssistanceModel.ConversationType,\n}): Lit.LitTemplate {\n  if (!conversationType) {\n    return Lit.nothing;\n  }\n\n  // clang-format off\n  return html`<div\n    class=\"chat-readonly-container\"\n    jslog=${VisualLogging.section('read-only')}\n  >\n    <span>${lockedString(UIStringsNotTranslate.pastConversation)}</span>\n    <devtools-button\n      aria-label=${lockedString(UIStringsNotTranslate.startNewChat)}\n      class=\"chat-inline-button\"\n      @click=${onNewConversation}\n      .data=${{\n        variant: Buttons.Button.Variant.TEXT,\n        title: lockedString(UIStringsNotTranslate.startNewChat),\n        jslogContext: 'start-new-chat',\n      } as Buttons.Button.ButtonData}\n    >${lockedString(UIStringsNotTranslate.startNewChat)}</devtools-button>\n  </div>`;\n  // clang-format on\n}\n\nfunction renderChatInputButtons(\n    {isLoading, blockedByCrossOrigin, isTextInputDisabled, isTextInputEmpty, imageInput, onCancel, onNewConversation}: {\n      isLoading: boolean,\n      blockedByCrossOrigin: boolean,\n      isTextInputDisabled: boolean,\n      isTextInputEmpty: boolean,\n      onCancel: (ev: SubmitEvent) => void,\n      onNewConversation: () => void,\n      imageInput?: ImageInputData,\n    }): Lit.TemplateResult {\n  if (isLoading) {\n    // clang-format off\n    return html`<devtools-button\n      class=\"chat-input-button\"\n      aria-label=${lockedString(UIStringsNotTranslate.cancelButtonTitle)}\n      @click=${onCancel}\n      .data=${\n        {\n          variant: Buttons.Button.Variant.ICON,\n          size: Buttons.Button.Size.REGULAR,\n          iconName: 'record-stop',\n          title: lockedString(UIStringsNotTranslate.cancelButtonTitle),\n          jslogContext: 'stop',\n        } as Buttons.Button.ButtonData\n      }\n    ></devtools-button>`;\n    // clang-format on\n  }\n  if (blockedByCrossOrigin) {\n    // clang-format off\n    return html`\n      <devtools-button\n        class=\"start-new-chat-button\"\n        aria-label=${lockedString(UIStringsNotTranslate.startNewChat)}\n        @click=${onNewConversation}\n        .data=${\n          {\n            variant: Buttons.Button.Variant.OUTLINED,\n            size: Buttons.Button.Size.SMALL,\n            title: lockedString(UIStringsNotTranslate.startNewChat),\n            jslogContext: 'start-new-chat',\n          } as Buttons.Button.ButtonData\n        }\n      >${lockedString(UIStringsNotTranslate.startNewChat)}</devtools-button>\n    `;\n    // clang-format on\n  }\n  // clang-format off\n  return html`<devtools-button\n    class=\"chat-input-button\"\n    aria-label=${lockedString(UIStringsNotTranslate.sendButtonTitle)}\n    .data=${\n      {\n        type: 'submit',\n        variant: Buttons.Button.Variant.ICON,\n        size: Buttons.Button.Size.REGULAR,\n        disabled: isTextInputDisabled || isTextInputEmpty || imageInput?.isLoading,\n        iconName: 'send',\n        title: lockedString(UIStringsNotTranslate.sendButtonTitle),\n        jslogContext: 'send',\n      } as Buttons.Button.ButtonData\n    }\n  ></devtools-button>`;\n}\n\nfunction renderMultimodalInputButtons({\n  multimodalInputEnabled,\n  blockedByCrossOrigin,\n  isTextInputDisabled,\n  imageInput,\n  uploadImageInputEnabled,\n  onTakeScreenshot,\n  onImageUpload,\n}: {\n  isTextInputDisabled: boolean,\n  blockedByCrossOrigin: boolean,\n  multimodalInputEnabled?: boolean,\n  imageInput?: ImageInputData,\n  uploadImageInputEnabled?: boolean,\n  onTakeScreenshot?: () => void,\n  onImageUpload?: (ev: Event) => void,\n}): Lit.LitTemplate {\n  if (!multimodalInputEnabled || blockedByCrossOrigin) {\n    return Lit.nothing;\n  }\n  // clang-format off\n  const addImageButton = uploadImageInputEnabled ? html`<devtools-button\n    class=\"chat-input-button\"\n    aria-label=${lockedString(UIStringsNotTranslate.addImageButtonTitle)}\n    @click=${onImageUpload}\n    .data=${\n      {\n        variant: Buttons.Button.Variant.ICON,\n        size: Buttons.Button.Size.REGULAR,\n        disabled: isTextInputDisabled || imageInput?.isLoading,\n        iconName: 'add-photo',\n        title: lockedString(UIStringsNotTranslate.addImageButtonTitle),\n        jslogContext: 'upload-image',\n      } as Buttons.Button.ButtonData\n    }\n  ></devtools-button>` : Lit.nothing;\n\n  return html`${addImageButton}<devtools-button\n    class=\"chat-input-button\"\n    aria-label=${lockedString(UIStringsNotTranslate.takeScreenshotButtonTitle)}\n    @click=${onTakeScreenshot}\n    .data=${\n      {\n        variant: Buttons.Button.Variant.ICON,\n        size: Buttons.Button.Size.REGULAR,\n        disabled: isTextInputDisabled || imageInput?.isLoading,\n        iconName: 'photo-camera',\n        title: lockedString(UIStringsNotTranslate.takeScreenshotButtonTitle),\n        jslogContext: 'take-screenshot',\n      } as Buttons.Button.ButtonData\n    }\n  ></devtools-button>`;\n  // clang-format on\n}\n\nfunction renderImageInput({\n  multimodalInputEnabled,\n  imageInput,\n  isTextInputDisabled,\n  onRemoveImageInput,\n}: {\n  multimodalInputEnabled?: boolean,\n  imageInput?: ImageInputData,\n  isTextInputDisabled?: boolean,\n  onRemoveImageInput?: () => void,\n}): Lit.LitTemplate {\n  if (!multimodalInputEnabled || !imageInput || isTextInputDisabled) {\n    return Lit.nothing;\n  }\n  // clang-format off\n    const crossButton = html`<devtools-button\n      aria-label=${lockedString(UIStringsNotTranslate.removeImageInputButtonTitle)}\n      @click=${onRemoveImageInput}\n      .data=${\n        {\n          variant: Buttons.Button.Variant.ICON,\n          size: Buttons.Button.Size.MICRO,\n          iconName: 'cross',\n          title: lockedString(UIStringsNotTranslate.removeImageInputButtonTitle),\n        } as Buttons.Button.ButtonData\n      }\n    ></devtools-button>`;\n  // clang-format on\n\n  if (imageInput.isLoading) {\n    // clang-format off\n      return html`<div class=\"image-input-container\">\n        ${crossButton}\n        <div class=\"loading\">\n          <devtools-spinner></devtools-spinner>\n        </div>\n      </div>`;\n    // clang-format on\n  }\n  // clang-format off\n    return  html`\n    <div class=\"image-input-container\">\n      ${crossButton}\n      <img src=\"data:${imageInput.mimeType};base64, ${imageInput.data}\" alt=\"Image input\" />\n    </div>`;\n  // clang-format on\n}\n\nfunction renderRelevantDataDisclaimer(\n    {isLoading, blockedByCrossOrigin}: {isLoading: boolean, blockedByCrossOrigin: boolean}): Lit.LitTemplate {\n  const classes =\n      Lit.Directives.classMap({'chat-input-disclaimer': true, 'hide-divider': !isLoading && blockedByCrossOrigin});\n  // clang-format off\n  return html`\n    <p class=${classes}>\n      <button\n        class=\"link\"\n        role=\"link\"\n        id=${RELEVANT_DATA_LINK_ID}\n        jslog=${VisualLogging.link('open-ai-settings').track({\n          click: true,\n        })}\n        @click=${() => {\n          void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n        }}\n      >${lockedString('Relevant data')}</button>&nbsp;${lockedString('is sent to Google')}\n    </p>\n  `;\n  // clang-format on\n}\n\nfunction renderChatInput({\n  isLoading,\n  blockedByCrossOrigin,\n  isTextInputDisabled,\n  inputPlaceholder,\n  state,\n  selectedContext,\n  inspectElementToggled,\n  multimodalInputEnabled,\n  conversationType,\n  imageInput,\n  isTextInputEmpty,\n  uploadImageInputEnabled,\n  aidaAvailability,\n  onContextClick,\n  onInspectElementClick,\n  onSubmit,\n  onTextAreaKeyDown,\n  onCancel,\n  onNewConversation,\n  onTakeScreenshot,\n  onRemoveImageInput,\n  onTextInputChange,\n  onImageUpload,\n}: {\n  isLoading: boolean,\n  blockedByCrossOrigin: boolean,\n  isTextInputDisabled: boolean,\n  inputPlaceholder: Platform.UIString.LocalizedString,\n  state: State,\n  selectedContext: AiAssistanceModel.ConversationContext<unknown>|null,\n  inspectElementToggled: boolean,\n  isTextInputEmpty: boolean,\n  aidaAvailability: Host.AidaClient.AidaAccessPreconditions,\n  onContextClick: () => void,\n  onInspectElementClick: () => void,\n  onSubmit: (ev: SubmitEvent) => void,\n  onTextAreaKeyDown: (ev: KeyboardEvent) => void,\n  onCancel: (ev: SubmitEvent) => void,\n  onNewConversation: () => void,\n  onTextInputChange: (input: string) => void,\n  multimodalInputEnabled?: boolean,\n  conversationType?: AiAssistanceModel.ConversationType,\n  imageInput?: ImageInputData,\n  uploadImageInputEnabled?: boolean,\n  onTakeScreenshot?: () => void,\n  onRemoveImageInput?: () => void,\n  onImageUpload?: (ev: Event) => void,\n}): Lit.LitTemplate {\n  if (!conversationType) {\n    return Lit.nothing;\n  }\n\n  const shouldShowMultiLine = state !== State.CONSENT_VIEW &&\n      aidaAvailability === Host.AidaClient.AidaAccessPreconditions.AVAILABLE && selectedContext;\n  const chatInputContainerCls = Lit.Directives.classMap({\n    'chat-input-container': true,\n    'single-line-layout': !shouldShowMultiLine,\n    disabled: isTextInputDisabled,\n  });\n\n  // clang-format off\n  return html`\n  <form class=\"input-form\" @submit=${onSubmit}>\n    <div class=${chatInputContainerCls}>\n      ${renderImageInput(\n        {multimodalInputEnabled, imageInput, isTextInputDisabled, onRemoveImageInput}\n      )}\n      <textarea class=\"chat-input\"\n        .disabled=${isTextInputDisabled}\n        wrap=\"hard\"\n        maxlength=\"10000\"\n        @keydown=${onTextAreaKeyDown}\n        @input=${(event: KeyboardEvent) => onTextInputChange((event.target as HTMLInputElement).value)}\n        placeholder=${inputPlaceholder}\n        jslog=${VisualLogging.textField('query').track({change: true, keydown: 'Enter'})}\n        aria-description=${i18nString(UIStrings.inputTextAriaDescription)}\n      ></textarea>\n      <div class=\"chat-input-actions\">\n        <div class=\"chat-input-actions-left\">\n          ${shouldShowMultiLine ? renderSelection({\n            selectedContext,\n            inspectElementToggled,\n            conversationType,\n            isTextInputDisabled,\n            onContextClick,\n            onInspectElementClick,\n          }) : Lit.nothing}\n        </div>\n        <div class=\"chat-input-actions-right\">\n          <div class=\"chat-input-disclaimer-container\">\n            ${renderRelevantDataDisclaimer({isLoading, blockedByCrossOrigin})}\n          </div>\n          ${renderMultimodalInputButtons({\n            multimodalInputEnabled, blockedByCrossOrigin, isTextInputDisabled, imageInput, uploadImageInputEnabled, onTakeScreenshot, onImageUpload\n          })}\n          ${renderChatInputButtons({\n            isLoading, blockedByCrossOrigin, isTextInputDisabled, isTextInputEmpty, imageInput, onCancel, onNewConversation\n          })}\n        </div>\n      </div>\n    </div>\n  </form>`;\n  // clang-format on\n}\n\nfunction renderAidaUnavailableContents(\n    aidaAvailability:\n        Exclude<Host.AidaClient.AidaAccessPreconditions, Host.AidaClient.AidaAccessPreconditions.AVAILABLE>):\n    Lit.TemplateResult {\n  switch (aidaAvailability) {\n    case Host.AidaClient.AidaAccessPreconditions.NO_ACCOUNT_EMAIL:\n    case Host.AidaClient.AidaAccessPreconditions.SYNC_IS_PAUSED: {\n      return html`${i18nString(UIStrings.notLoggedIn)}`;\n    }\n    case Host.AidaClient.AidaAccessPreconditions.NO_INTERNET: {\n      return html`${i18nString(UIStrings.offline)}`;\n    }\n  }\n}\n\nfunction renderConsentViewContents(): Lit.TemplateResult {\n  const settingsLink = document.createElement('button');\n  settingsLink.textContent = i18nString(UIStrings.settingsLink);\n  settingsLink.classList.add('link');\n  UI.ARIAUtils.markAsLink(settingsLink);\n  settingsLink.addEventListener('click', () => {\n    void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n  });\n  settingsLink.setAttribute('jslog', `${VisualLogging.action('open-ai-settings').track({click: true})}`);\n\n  let consentViewContents: HTMLSpanElement;\n  // TODO(ergunsh): Should this `view` access `hostConfig` at all?\n  const config = Root.Runtime.hostConfig;\n  if (config.isOffTheRecord) {\n    return html`${i18nString(UIStrings.notAvailableInIncognitoMode)}`;\n  }\n  if (config.devToolsAiAssistancePerformanceAgent?.enabled) {\n    consentViewContents = i18n.i18n.getFormatLocalizedString(\n        str_, UIStrings.turnOnForStylesRequestsPerformanceAndFiles, {PH1: settingsLink});\n  } else if (config.devToolsAiAssistanceFileAgent?.enabled) {\n    consentViewContents =\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.turnOnForStylesRequestsAndFiles, {PH1: settingsLink});\n  } else if (config.devToolsAiAssistanceNetworkAgent?.enabled) {\n    consentViewContents =\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.turnOnForStylesAndRequests, {PH1: settingsLink});\n  } else {\n    consentViewContents = i18n.i18n.getFormatLocalizedString(str_, UIStrings.turnOnForStyles, {PH1: settingsLink});\n  }\n\n  return html`${consentViewContents}`;\n}\n\nfunction renderDisabledState(contents: Lit.TemplateResult): Lit.TemplateResult {\n  // clang-format off\n  return html`\n    <div class=\"empty-state-container\">\n      <div class=\"disabled-view\">\n        <div class=\"disabled-view-icon-container\">\n          <devtools-icon\n            name=\"smart-assistant\"\n          ></devtools-icon>\n        </div>\n        <div>\n          ${contents}\n        </div>\n      </div>\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderMainContents({\n  state,\n  aidaAvailability,\n  messages,\n  isLoading,\n  isReadOnly,\n  canShowFeedbackForm,\n  isTextInputDisabled,\n  suggestions,\n  userInfo,\n  markdownRenderer,\n  conversationType,\n  changeSummary,\n  changeManager,\n  onSuggestionClick,\n  onFeedbackSubmit,\n  onCopyResponseClick,\n  onMessageContainerRef,\n}: {\n  state: State,\n  aidaAvailability: Host.AidaClient.AidaAccessPreconditions,\n  messages: ChatMessage[],\n  isLoading: boolean,\n  isReadOnly: boolean,\n  canShowFeedbackForm: boolean,\n  isTextInputDisabled: boolean,\n  suggestions: AiAssistanceModel.ConversationSuggestion[],\n  userInfo: Pick<Host.InspectorFrontendHostAPI.SyncInformation, 'accountImage'|'accountFullName'>,\n  markdownRenderer: MarkdownRendererWithCodeBlock,\n  changeManager: AiAssistanceModel.ChangeManager,\n  onSuggestionClick: (suggestion: string) => void,\n  onFeedbackSubmit: (rpcId: Host.AidaClient.RpcGlobalId, rate: Host.AidaClient.Rating, feedback?: string) => void,\n  onCopyResponseClick: (message: ModelChatMessage) => void,\n  onMessageContainerRef: (el: Element|undefined) => void,\n  conversationType?: AiAssistanceModel.ConversationType,\n  changeSummary?: string,\n}): Lit.LitTemplate {\n  if (state === State.CONSENT_VIEW) {\n    return renderDisabledState(renderConsentViewContents());\n  }\n\n  if (aidaAvailability !== Host.AidaClient.AidaAccessPreconditions.AVAILABLE) {\n    return renderDisabledState(renderAidaUnavailableContents(aidaAvailability));\n  }\n\n  if (!conversationType) {\n    return Lit.nothing;\n  }\n\n  if (messages.length > 0) {\n    return renderMessages({\n      messages,\n      isLoading,\n      isReadOnly,\n      canShowFeedbackForm,\n      userInfo,\n      markdownRenderer,\n      changeSummary,\n      changeManager,\n      onSuggestionClick,\n      onFeedbackSubmit,\n      onMessageContainerRef,\n      onCopyResponseClick\n    });\n  }\n\n  return renderEmptyState({isTextInputDisabled, suggestions, onSuggestionClick});\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-ai-chat-view': ChatView;\n  }\n}\n\ncustomElements.define('devtools-ai-chat-view', ChatView);\n"]}