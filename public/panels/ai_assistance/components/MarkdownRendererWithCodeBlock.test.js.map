{"version":3,"file":"MarkdownRendererWithCodeBlock.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/ai_assistance/components/MarkdownRendererWithCodeBlock.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport * as Marked from '../../../third_party/marked/marked.js';\nimport * as MarkdownView from '../../../ui/components/markdown_view/markdown_view.js';\nimport * as AiAssistance from '../ai_assistance.js';\n\ndescribeWithEnvironment('MarkdownRendererWithCodeBlock', () => {\n  it('should transform code token for multiline code blocks with `css` language written in the first line', () => {\n    const renderer = new AiAssistance.MarkdownRendererWithCodeBlock();\n    const templateForTokenStub =\n        sinon.stub(MarkdownView.MarkdownView.MarkdownInsightRenderer.prototype, 'templateForToken');\n    const codeBlock = `\\`\\`\\`\ncss\n* {\ncolor: red;\n}\n\\`\\`\\``;\n    const codeToken = Marked.Marked.lexer(codeBlock)[0] as Marked.Marked.Tokens.Code;\n    assert.isEmpty(codeToken.lang);\n    renderer.renderToken(codeToken);\n\n    sinon.assert.calledWith(templateForTokenStub, sinon.match({\n      lang: 'css',\n      text: `* {\ncolor: red;\n}`,\n    }));\n  });\n\n  describe('link/image stripping', () => {\n    const linkCases = [\n      '[link text](https://z.com)',\n      'A response with [link text](https://z.com).',\n      '[*link text*](https://z.com)',\n      '[**text** `with code`](https://z.com).',\n      'plain link https://z.com .',\n      'link in quotes \\'https://z.com\\' .',\n    ];\n\n    const renderToElem = (string: string, renderer: MarkdownView.MarkdownView.MarkdownLitRenderer): Element => {\n      const component = new MarkdownView.MarkdownView.MarkdownView();\n      renderElementIntoDOM(component, {allowMultipleChildren: true});\n      component.data = {tokens: Marked.Marked.lexer(string), renderer};\n      assert.exists(component.shadowRoot?.firstElementChild);\n      return component.shadowRoot.firstElementChild;\n    };\n\n    it('strips links', () => {\n      const linklessRenderer = new AiAssistance.MarkdownRendererWithCodeBlock();\n      for (const linkCase of linkCases) {\n        const elem = renderToElem(linkCase, linklessRenderer);\n        assert.lengthOf(elem.querySelectorAll('a, x-link, devtools-link'), 0);\n        assert.isFalse(['<a', '<x-link', '<devtools-link'].some(tagName => elem.outerHTML.includes(tagName)));\n      }\n    });\n\n    const imageCases = [\n      '![image alt](https://z.com/i.png)',\n      'A response with ![image alt](https://z.com/i.png).',\n      '![*image alt*](https://z.com/i.png)',\n      '![**text** `with code`](https://z.com/i.png).',\n      'plain image href https://z.com/i.png .',\n      'link in quotes \\'https://z.com/i.png\\' .',\n    ];\n\n    it('strips images', () => {\n      const linklessRenderer = new AiAssistance.MarkdownRendererWithCodeBlock();\n      for (const imageCase of imageCases) {\n        const elem = renderToElem(imageCase, linklessRenderer);\n        assert.lengthOf(elem.querySelectorAll('a, x-link, devtools-link, img, devtools-markdown-image'), 0);\n        assert.isFalse(['<a', '<x-link', '<devtools-link', '<img', '<devtools-markdown-image'].some(\n            tagName => elem.outerHTML.includes(tagName)));\n      }\n    });\n  });\n});\n"]}