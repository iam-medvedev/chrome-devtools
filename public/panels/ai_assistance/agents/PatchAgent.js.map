{"version":3,"file":"PatchAgent.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/ai_assistance/agents/PatchAgent.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as TextUtils from '../../../models/text_utils/text_utils.js';\nimport type * as Workspace from '../../../models/workspace/workspace.js';\nimport type * as Lit from '../../../ui/lit/lit.js';\n\nimport {\n  type AgentOptions as BaseAgentOptions,\n  AgentType,\n  AiAgent,\n  type ContextResponse,\n  ConversationContext,\n  type RequestOptions,\n  type ResponseData,\n} from './AiAgent.js';\n\nexport class ProjectContext extends ConversationContext<Workspace.Workspace.Project> {\n  readonly #project: Workspace.Workspace.Project;\n\n  constructor(project: Workspace.Workspace.Project) {\n    super();\n    this.#project = project;\n  }\n\n  getOrigin(): string {\n    // TODO\n    return 'test';\n  }\n\n  getItem(): Workspace.Workspace.Project {\n    return this.#project;\n  }\n\n  override getIcon(): HTMLElement {\n    return document.createElement('span');\n  }\n\n  override getTitle(): string|ReturnType<typeof Lit.Directives.until> {\n    return this.#project.displayName();\n  }\n}\n\nfunction getFiles(project: Workspace.Workspace.Project):\n    {files: string[], map: Map<string, Workspace.UISourceCode.UISourceCode>} {\n  const files = [];\n  const map = new Map();\n  for (const uiSourceCode of project.uiSourceCodes()) {\n    let path = uiSourceCode.fullDisplayName();\n    const idx = path.indexOf('/');\n    if (idx !== -1) {\n      path = path.substring(idx + 1);\n    }\n    files.push(path);\n    map.set(path, uiSourceCode);\n  }\n  return {files, map};\n}\n\nexport class PatchAgent extends AiAgent<Workspace.Workspace.Project> {\n  #project: ConversationContext<Workspace.Workspace.Project>|undefined;\n\n  override async *\n      // eslint-disable-next-line require-yield\n      handleContextDetails(_select: ConversationContext<Workspace.Workspace.Project>|null):\n          AsyncGenerator<ContextResponse, void, void> {\n    // TODO: Implement\n    return;\n  }\n\n  override readonly type = AgentType.PATCH;\n  readonly preamble = undefined;\n  readonly clientFeature = Host.AidaClient.ClientFeature.CHROME_PATCH_AGENT;\n\n  get userTier(): string|undefined {\n    return 'TESTERS';\n  }\n\n  get options(): RequestOptions {\n    return {\n      temperature: undefined,\n      modelId: undefined,\n    };\n  }\n\n  constructor(opts: BaseAgentOptions) {\n    super(opts);\n    this.declareFunction<Record<never, unknown>>('listFiles', {\n      description: 'Returns a list of all files in the project.',\n      parameters: {\n        type: Host.AidaClient.ParametersTypes.OBJECT,\n        description: '',\n        nullable: true,\n        properties: {},\n      },\n      handler: async () => {\n        if (!this.#project) {\n          return {\n            error: 'No project available',\n          };\n        }\n        const project = this.#project.getItem();\n        const {files} = getFiles(project);\n        return {\n          result: {\n            files,\n          }\n        };\n      },\n    });\n\n    this.declareFunction<{\n      query: string,\n      caseSensitive?: boolean,\n      isRegex?: boolean,\n    }>('searchInFiles', {\n      description:\n          'Searches for a text match in all files in the project. For each match it returns the positions of matches.',\n      parameters: {\n        type: Host.AidaClient.ParametersTypes.OBJECT,\n        description: '',\n        nullable: false,\n        properties: {\n          query: {\n            type: Host.AidaClient.ParametersTypes.STRING,\n            description: 'The query to search for matches in files',\n            nullable: false,\n          },\n          caseSensitive: {\n            type: Host.AidaClient.ParametersTypes.BOOLEAN,\n            description: 'Whether the query is case sensitive or not',\n            nullable: false,\n          },\n          isRegex: {\n            type: Host.AidaClient.ParametersTypes.BOOLEAN,\n            description: 'Whether the query is a regular expression or not',\n            nullable: true,\n          }\n        },\n      },\n      handler: async params => {\n        if (!this.#project) {\n          return {\n            error: 'No project available',\n          };\n        }\n        const project = this.#project.getItem();\n        const {map} = getFiles(project);\n        const matches = [];\n        for (const [filepath, file] of map.entries()) {\n          const results = TextUtils.TextUtils.performSearchInContentData(\n              file.workingCopyContentData(), params.query, params.caseSensitive ?? true, params.isRegex ?? false);\n          for (const result of results) {\n            matches.push({\n              filepath,\n              lineNumber: result.lineNumber,\n              columnNumber: result.columnNumber,\n              matchLength: result.matchLength\n            });\n          }\n        }\n        return {\n          result: {\n            matches,\n          }\n        };\n      },\n    });\n  }\n\n  override async * run(initialQuery: string, options: {\n    signal?: AbortSignal, selected: ConversationContext<Workspace.Workspace.Project>|null,\n  }): AsyncGenerator<ResponseData, void, void> {\n    this.#project = options.selected ?? undefined;\n\n    return yield* super.run(initialQuery, options);\n  }\n}\n"]}