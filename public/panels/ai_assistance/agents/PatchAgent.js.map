{"version":3,"file":"PatchAgent.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/ai_assistance/agents/PatchAgent.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as TextUtils from '../../../models/text_utils/text_utils.js';\nimport type * as Workspace from '../../../models/workspace/workspace.js';\nimport type * as Lit from '../../../ui/lit/lit.js';\n\nimport {\n  type ActionResponse,\n  type AgentOptions as BaseAgentOptions,\n  AgentType,\n  AiAgent,\n  type ContextResponse,\n  ConversationContext,\n  debugLog,\n  ErrorType,\n  type ParsedResponse,\n  type RequestOptions,\n  type ResponseData,\n  ResponseType,\n} from './AiAgent.js';\n\n/* clang-format off */\nconst preamble = `You are responsible for changing the source code on behalf of the user.\nThe user query defines what changes are to be made.\nYou have a number of functions to get information about source files in the project.\nUse those functions to fulfill the user query.\n\n## Step-by-step instructions\n\n- Think about what the user wants.\n- List all files in the project.\n- Identify the files that are likely to be modified.\n- Retrieve the content of those files.\n- Rewrite the files according to the user query.\n\n## General considerations\n\n- Avoid requesting too many files.\n- Always prefer changing the true source files and not the build output.\n- The build output is usually in dist/, out/, build/ folders.\n- *CRITICAL* never make the same function call twice.\n`;\n/* clang-format on */\n\nexport class ProjectContext extends ConversationContext<Workspace.Workspace.Project> {\n  readonly #project: Workspace.Workspace.Project;\n\n  constructor(project: Workspace.Workspace.Project) {\n    super();\n    this.#project = project;\n  }\n\n  getOrigin(): string {\n    // TODO\n    return 'test';\n  }\n\n  getItem(): Workspace.Workspace.Project {\n    return this.#project;\n  }\n\n  override getIcon(): HTMLElement {\n    return document.createElement('span');\n  }\n\n  override getTitle(): string|ReturnType<typeof Lit.Directives.until> {\n    return this.#project.displayName();\n  }\n}\n\nconst MAX_STEPS = 10;\n\nfunction getFiles(project: Workspace.Workspace.Project):\n    {files: string[], map: Map<string, Workspace.UISourceCode.UISourceCode>} {\n  const files = [];\n  const map = new Map();\n  for (const uiSourceCode of project.uiSourceCodes()) {\n    let path = uiSourceCode.fullDisplayName();\n    const idx = path.indexOf('/');\n    if (idx !== -1) {\n      path = path.substring(idx + 1);\n    }\n    files.push(path);\n    map.set(path, uiSourceCode);\n  }\n  return {files, map};\n}\n\nexport class PatchAgent extends AiAgent<Workspace.Workspace.Project> {\n  #aidaClient: Host.AidaClient.AidaClient;\n  #project: ConversationContext<Workspace.Workspace.Project>|undefined;\n\n  override handleContextDetails(_select: ConversationContext<Workspace.Workspace.Project>|\n                                null): AsyncGenerator<ContextResponse, void, void> {\n    throw new Error('Method not implemented.');\n  }\n\n  override readonly type = AgentType.PATCH;\n  readonly preamble = preamble;\n  readonly clientFeature = Host.AidaClient.ClientFeature.CHROME_PATCH_AGENT;\n\n  get userTier(): string|undefined {\n    return 'TESTERS';\n  }\n\n  get options(): RequestOptions {\n    return {\n      temperature: undefined,\n      modelId: undefined,\n    };\n  }\n\n  constructor(opts: BaseAgentOptions) {\n    super({\n      aidaClient: opts.aidaClient,\n      serverSideLoggingEnabled: false,\n    });\n    this.#aidaClient = opts.aidaClient;\n    this.declareFunction('listFiles', {\n      description: 'returns a list of all files in the project.',\n      parameters: {\n        type: Host.AidaClient.ParametersTypes.OBJECT,\n        description: '',\n        nullable: true,\n        properties: {},\n      },\n      handler: async () => {\n        if (!this.#project) {\n          return {\n            error: 'No project available',\n          };\n        }\n        const project = this.#project.getItem();\n        const {files} = getFiles(project);\n        return {\n          files,\n        };\n      },\n    });\n\n    this.declareFunction('readFile', {\n      description: 'returns the complement content of a file',\n      parameters: {\n        type: Host.AidaClient.ParametersTypes.OBJECT,\n        description: '',\n        properties: {\n          filepath: {\n            type: Host.AidaClient.ParametersTypes.STRING,\n            description: 'A file path that identifies the file to get the content for',\n            nullable: false,\n          },\n        },\n      },\n      handler: async (params: {filepath: string}) => {\n        if (!this.#project) {\n          return {\n            error: 'No project available',\n          };\n        }\n        const project = this.#project.getItem();\n        const {map} = getFiles(project);\n        const uiSourceCode = map.get(params.filepath);\n        if (!uiSourceCode) {\n          return {\n            error: `File ${params.filepath} not found`,\n          };\n        }\n        // TODO: clearly define what types of files we handle.\n        const content = await uiSourceCode.requestContentData();\n        if (TextUtils.ContentData.ContentData.isError(content)) {\n          return {\n            error: content.error,\n          };\n        }\n        if (!content.isTextContent) {\n          return {\n            error: 'Non-text files are not supported',\n          };\n        }\n        return {\n          content: content.text,\n        };\n      },\n    });\n\n    this.declareFunction('writeFile', {\n      description: '(over)writes the file with the provided content',\n      parameters: {\n        type: Host.AidaClient.ParametersTypes.OBJECT,\n        description: '',\n        properties: {\n          filepath: {\n            type: Host.AidaClient.ParametersTypes.STRING,\n            description: 'A file path that identifies the file',\n            nullable: false,\n          },\n          content: {\n            type: Host.AidaClient.ParametersTypes.STRING,\n            description: 'Full content of the file that will replace the current file content',\n            nullable: false,\n          },\n        },\n      },\n      handler: async (params: {filepath: string, content: string}) => {\n        if (!this.#project) {\n          return {\n            error: 'No project available',\n          };\n        }\n        const project = this.#project.getItem();\n        const {map} = getFiles(project);\n        const uiSourceCode = map.get(params.filepath);\n        if (!uiSourceCode) {\n          return {\n            error: `File ${params.filepath} not found`,\n          };\n        }\n        const content = params.content;\n        // TODO: we unescape some characters to restore the original\n        // content but this should be fixed upstream.\n        uiSourceCode.setContent(\n            content.replaceAll('\\\\n', '\\n').replaceAll('\\\\\"', '\"').replaceAll('\\\\\\'', '\\''),\n            false,\n        );\n        return {};\n      },\n    });\n  }\n\n  override async *\n      aidaFetch(\n          request: Host.AidaClient.AidaRequest,\n          options?: {signal?: AbortSignal},\n          ):\n          AsyncGenerator<\n              {\n                parsedResponse: ParsedResponse,\n                functionCall?: Host.AidaClient.AidaFunctionCallResponse, completed: boolean,\n                rpcId?: Host.AidaClient.RpcGlobalId,\n              },\n              void, void> {\n    let rawResponse: Host.AidaClient.AidaResponse|undefined = undefined;\n    let rpcId: Host.AidaClient.RpcGlobalId|undefined;\n    for await (rawResponse of this.#aidaClient.fetch(request, options)) {\n      rpcId = rawResponse.metadata.rpcGlobalId ?? rpcId;\n\n      if (rawResponse.functionCalls?.length) {\n        debugLog('functionCalls.length', rawResponse.functionCalls.length);\n        yield {\n          rpcId,\n          parsedResponse: {answer: ''},\n          functionCall: rawResponse.functionCalls[0],\n          completed: true,\n        };\n        return;\n      }\n\n      const parsedResponse = this.parseResponse(rawResponse);\n      yield {\n        rpcId,\n        parsedResponse,\n        completed: rawResponse.completed,\n      };\n    }\n\n    debugLog({\n      request,\n      response: rawResponse,\n    });\n  }\n\n  #history: Host.AidaClient.Content[] = [];\n  override buildChatHistoryForAida(): Host.AidaClient.Content[] {\n    return [...this.#history];\n  }\n\n  override async * run(initialQuery: string, options: {\n    signal?: AbortSignal, selected: ConversationContext<Workspace.Workspace.Project>|null,\n  }): AsyncGenerator<ResponseData, void, void> {\n    await options.selected?.refresh();\n\n    this.#project = options.selected ?? undefined;\n\n    let query: Host.AidaClient.Part = {text: initialQuery};\n\n    // Request is built here to capture history up to this point.\n    let request = this.buildRequest(query);\n\n    const response = {\n      type: ResponseType.USER_QUERY,\n      query: JSON.stringify(query),\n    } as const;\n    yield response;\n\n    for (let i = 0; i < MAX_STEPS; i++) {\n      const queryResponse = {\n        type: ResponseType.QUERYING,\n        query: JSON.stringify(query),\n      } as const;\n      yield queryResponse;\n      let rpcId: Host.AidaClient.RpcGlobalId|undefined;\n      let parsedResponse: ParsedResponse|undefined = undefined;\n      let functionCall: Host.AidaClient.AidaFunctionCallResponse|undefined = undefined;\n      try {\n        for await (const fetchResult of this.aidaFetch(request, {signal: options.signal})) {\n          rpcId = fetchResult.rpcId;\n          parsedResponse = fetchResult.parsedResponse;\n          functionCall = fetchResult.functionCall;\n        }\n      } catch (err) {\n        debugLog('Error calling the AIDA API', err);\n\n        if (err instanceof Host.AidaClient.AidaAbortError) {\n          const response = {\n            type: ResponseType.ERROR,\n            error: ErrorType.ABORT,\n          } as const;\n          yield response;\n          break;\n        }\n\n        const error = (err instanceof Host.AidaClient.AidaBlockError) ? ErrorType.BLOCK : ErrorType.UNKNOWN;\n        const response = {\n          type: ResponseType.ERROR,\n          error,\n        } as const;\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceError);\n        yield response;\n\n        break;\n      } finally {\n        if (i === 0) {\n          this.#history.push(request.current_message);\n        } else {\n          this.#history.push({\n            ...request.current_message,\n            role: Host.AidaClient.Role.ROLE_UNSPECIFIED,\n          });\n        }\n      }\n\n      if (parsedResponse && 'answer' in parsedResponse && Boolean(parsedResponse.answer)) {\n        const response = {\n          type: ResponseType.ANSWER,\n          text: parsedResponse.answer,\n          rpcId,\n          suggestions: undefined,\n        } as const;\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceAnswerReceived);\n        this.#history.push({\n          parts: [{\n            text: parsedResponse.answer,\n          }],\n          role: Host.AidaClient.Role.MODEL,\n        });\n        yield response;\n        break;\n      } else if (functionCall) {\n        const callResult = await this.callFunction(functionCall.name, functionCall.args);\n        // Capture history state for the next iteration query.\n        query = {\n          functionResponse: {\n            name: functionCall.name,\n            response: callResult,\n          },\n        };\n        this.#history.push({\n          parts: [{\n            functionCall,\n          }],\n          role: Host.AidaClient.Role.MODEL,\n        });\n        request = this.buildRequest(query);\n        const result: ActionResponse = {\n          type: ResponseType.ACTION,\n          code: JSON.stringify(functionCall),\n          output: JSON.stringify(callResult),\n          canceled: false,\n        };\n        yield result;\n      } else {\n        const response = {\n          type: ResponseType.ERROR,\n          error: ErrorType.UNKNOWN,\n        } as const;\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceError);\n        yield response;\n        break;\n      }\n\n      if (i === MAX_STEPS - 1) {\n        const response = {\n          type: ResponseType.ERROR,\n          error: ErrorType.MAX_STEPS,\n        } as const;\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceError);\n        yield response;\n        break;\n      }\n    }\n  }\n}\n"]}