{"version":3,"file":"StylingAgent.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/ai_assistance/agents/StylingAgent.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AACnD,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AACnD,OAAO,KAAK,GAAG,MAAM,0BAA0B,CAAC;AAChD,OAAO,EACL,uBAAuB,EACvB,oBAAoB,GACrB,MAAM,wCAAwC,CAAC;AAChD,OAAO,KAAK,YAAY,MAAM,qBAAqB,CAAC;AAEpD,MAAM,EAAC,YAAY,EAAE,SAAS,EAAC,GAAG,YAAY,CAAC;AAE/C,uBAAuB,CAAC,cAAc,EAAE,GAAG,EAAE;IAC3C,SAAS,cAAc,CACnB,OAAgB,EAAE,WAAoB,EAAE,QAAiB,EACzD,aAA8D;QAChE,oBAAoB,CAAC;YACnB,kBAAkB,EAAE;gBAClB,OAAO;gBACP,WAAW;gBACX,QAAQ;gBACR,aAAa;aACd;SACF,CAAC,CAAC;IACL,CAAC;IAED,SAAS,oBAAoB;QAC3B,OAAO;YACL,KAAK,CAAC,OAAO;YAEb,CAAC;YACD,KAAK,CAAC,SAAS;YAEf,CAAC;SACF,CAAC;IACJ,CAAC;IACD,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;YAC7B,UAAU,EAAE,EAAgC;SAC7C,CAAC,CAAC;QAEH,SAAS,qBAAqB,CAAC,WAAmB;YAChD,OAAO,KAAK,CAAC,aAAa,CAAC;gBACzB,WAAW;gBACX,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,KAAK;aACjB,CAAC,CAAC;QACL,CAAC;QAED,EAAE,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;YAChC,MAAM,OAAO,GAAG,eAAe,CAAC;YAChC,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,YAAY,OAAO,EAAE,CAAC,EAC5C;gBACE,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,OAAO;aACjB,CACJ,CAAC;YACF,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,eAAe,OAAO,EAAE,CAAC,EAC/C;gBACE,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,OAAO;aACjB,CACJ,CAAC;YACF,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,0BAA0B,OAAO,EAAE,CAAC,EAC1D;gBACE,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,OAAO;aACjB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;YAC/B,MAAM,OAAO,GAAG,eAAe,CAAC;YAChC,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,WAAW,OAAO,EAAE,CAAC,EAC3C;gBACE,MAAM,EAAE,OAAO;gBACf,WAAW,EAAE,SAAS;aACvB,CACJ,CAAC;YACF,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,cAAc,OAAO,EAAE,CAAC,EAC9C;gBACE,MAAM,EAAE,OAAO;gBACf,WAAW,EAAE,SAAS;aACvB,CACJ,CAAC;YACF,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,yBAAyB,OAAO,EAAE,CAAC,EACzD;gBACE,MAAM,EAAE,OAAO;gBACf,WAAW,EAAE,SAAS;aACvB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;YACzC,MAAM,OAAO,GAAG;;EAEpB,CAAC;YACG,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,WAAW,OAAO,EAAE,CAAC,EAC3C;gBACE,MAAM,EAAE,OAAO;gBACf,WAAW,EAAE,SAAS;aACvB,CACJ,CAAC;YACF,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,cAAc,OAAO,EAAE,CAAC,EAC9C;gBACE,MAAM,EAAE,OAAO;gBACf,WAAW,EAAE,SAAS;aACvB,CACJ,CAAC;YACF,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,yBAAyB,OAAO,EAAE,CAAC,EACzD;gBACE,MAAM,EAAE,OAAO;gBACf,WAAW,EAAE,SAAS;aACvB,CACJ,CAAC;YACF,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,WAAW,OAAO,oBAAoB,CAAC,EAC7D;gBACE,MAAM,EAAE,OAAO;gBACf,WAAW,EAAE,SAAS;aACvB,CACJ,CAAC;YACF,MAAM,CAAC,SAAS,CACZ,qBAAqB,CACjB,WAAW,OAAO,4BAA4B,CAC7C,EACL;gBACE,MAAM,EAAE,OAAO;gBACf,WAAW,EAAE,SAAS;aACvB,CACJ,CAAC;YACF,MAAM,CAAC,SAAS,CACZ,qBAAqB,CACjB,WAAW,OAAO,wBAAwB,CACzC,EACL;gBACE,MAAM,EAAE,QAAQ;gBAChB,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,SAAS;aACnB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;YAChC,MAAM,OAAO,GAAG;;EAEpB,CAAC;YACG,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,WAAW,OAAO,QAAQ,CAAC,EACjD;gBACE,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,SAAS;aACnB,CACJ,CAAC;YACF,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,WAAW,OAAO,EAAE,CAAC,EAC3C;gBACE,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,SAAS;aACnB,CACJ,CAAC;YACF,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,aAAa,OAAO,UAAU,CAAC,EACrD;gBACE,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,SAAS;aACnB,CACJ,CAAC;YAEF,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,aAAa,OAAO,oBAAoB,CAAC,EAC/D;gBACE,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,SAAS;aACnB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,+EAA+E,EAAE,KAAK,IAAI,EAAE;YAC7F,MAAM,OAAO,GAAG;;;WAGX,CAAC;YACN,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,WAAW,OAAO,MAAM,CAAC,EAC/C;gBACE,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,SAAS;aACnB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,MAAM,OAAO,GAAG,eAAe,CAAC;YAChC,MAAM,KAAK,GAAG,mBAAmB,CAAC;YAClC,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,YAAY,OAAO,YAAY,KAAK,EAAE,CAAC,EAC7D;gBACE,OAAO,EAAE,OAAO;gBAChB,KAAK;aACN,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,OAAO,GAAG;;EAEpB,CAAC;YACG,MAAM,CAAC,SAAS,CACZ,qBAAqB,CACjB,mBAAmB,OAAO,gBAAgB,CACzC,EACL;gBACE,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,SAAS;aACnB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4EAA4E,EAAE,KAAK,IAAI,EAAE;YAC1F,MAAM,OAAO,GAAG;;EAEpB,CAAC;YACG,MAAM,CAAC,SAAS,CACZ,qBAAqB,CACjB,2BAA2B,OAAO,oBAAoB,CACrD,EACL;gBACE,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,SAAS;aACnB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,aAAa,GAAG;;EAE1B,CAAC;YACG,MAAM,cAAc,GAAG,SAAS,CAAC;YACjC,MAAM,CAAC,SAAS,CACZ,qBAAqB,CACjB,WAAW,cAAc,aAAa,aAAa,QAAQ,CAC1D,EACL;gBACE,MAAM,EAAE,aAAa;gBACrB,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,cAAc;aACxB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,aAAa,GAAG,QAAQ,CAAC;YAC/B,MAAM,cAAc,GAAG,SAAS,CAAC;YACjC,MAAM,CAAC,SAAS,CACZ,qBAAqB,CACjB,WAAW,cAAc,YAAY,aAAa,EAAE,CACnD,EACL;gBACE,MAAM,EAAE,aAAa;gBACrB,WAAW,EAAE,SAAS;aACvB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;YAChD,MAAM,aAAa,GAAG,QAAQ,CAAC;YAC/B,MAAM,WAAW,GAAG,CAAC,YAAY,CAAa,CAAC;YAC/C,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACpD,MAAM,CAAC,SAAS,CACZ,qBAAqB,CACjB,UAAU,aAAa,kBAAkB,eAAe,EAAE,CACzD,EACL;gBACE,MAAM,EAAE,aAAa;gBACrB,WAAW;aACZ,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+DAA+D,EAAE,KAAK,IAAI,EAAE;YAC7E,MAAM,aAAa,GAAG,QAAQ,CAAC;YAC/B,MAAM,cAAc,GAAG,SAAS,CAAC;YACjC,MAAM,aAAa,GAAG;;EAE1B,CAAC;YACG,MAAM,KAAK,GAAG,OAAO,CAAC;YACtB,MAAM,CAAC,SAAS,CACZ,qBAAqB,CACjB,YAAY,cAAc,YAAY,KAAK,aAAa,aAAa,kBAAkB,aAAa,EAAE,CACrG,EACL;gBACE,OAAO,EAAE,cAAc;gBACvB,MAAM,EAAE,aAAa;gBACrB,KAAK;aACN,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iFAAiF,EAAE,KAAK,IAAI,EAAE;YAC/F,MAAM,aAAa,GAAG,QAAQ,CAAC;YAC/B,MAAM,WAAW,GAAG,CAAC,YAAY,CAAC,CAAC;YACnC,MAAM,OAAO,GAAG;;;WAGX,CAAC;YACN,MAAM,CAAC,SAAS,CACZ,qBAAqB,CACjB,WAAW,OAAO,gBAAgB,aAAa,kBAAkB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,EACnG;gBACE,MAAM,EAAE,OAAO;gBACf,OAAO,EAAE,SAAS;gBAClB,KAAK,EAAE,SAAS;aACjB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,sFAAsF,EAAE,KAAK,IAAI,EAAE;YACpG,MAAM,OAAO,GAAG;;;WAGX,CAAC;YACN,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,WAAW,OAAO,gCAAgC,CAAC,EACzE;gBACE,MAAM,EAAE,OAAO;gBACf,OAAO,EAAE,SAAS;gBAClB,KAAK,EAAE,SAAS;aACjB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,kFAAkF,EAAE,KAAK,IAAI,EAAE;YAChG,MAAM,OAAO,GAAG;;;WAGX,CAAC;YACN,MAAM,cAAc,GAAG,SAAS,CAAC;YACjC,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,WAAW,OAAO,iBAAiB,cAAc,EAAE,CAAC,EAC1E;gBACE,MAAM,EAAE,OAAO;gBACf,OAAO,EAAE,cAAc;gBACvB,KAAK,EAAE,SAAS;aACjB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,CAAC,SAAS,CACZ,qBAAqB,CACjB,wBAAwB,CACvB,EACL;gBACE,MAAM,EAAE,wBAAwB;gBAChC,WAAW,EAAE,SAAS;aACvB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0FAA0F,EAAE,KAAK,IAAI,EAAE;YACxG,MAAM,CAAC,SAAS,CACZ,qBAAqB,CACjB,uDAAuD,CACtD,EACL;gBACE,MAAM,EAAE,wBAAwB;gBAChC,WAAW,EAAE,CAAC,YAAY,CAAC;aAC5B,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;YACpC,MAAM,WAAW,GAAG,yBAAyB,CAAC;YAC9C,MAAM,CAAC,SAAS,CACZ,qBAAqB,CAAC,YAAY,WAAW,EAAE,CAAC,EAChD;gBACE,OAAO,EAAE,WAAW;gBACpB,KAAK,EAAE,SAAS;aACjB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,IAAI,OAAyD,CAAC;QAE9D,UAAU,CAAC,GAAG,EAAE;YACd,OAAO,GAAG,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,GAAG,EAAE;YACb,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kEAAkE,EAAE,KAAK,IAAI,EAAE;YAChF,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YAChD,OAAO,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAE5C,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAE3D,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,mCAAmC,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;YAC5E,MAAM,UAAU,GAAuD;gBACrE,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAC9C,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAC9C,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;aAC/C,CAAC;YACF,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAClD,UAAU,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YACpD,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/C,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAClD,UAAU,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YAEpD,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YACpD,OAAO,CAAC,oBAAoB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAClD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;YAC3B,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC;YAC/B,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;YAE1B,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAC3D,MAAM,cAAc,GAAG;;gCAEG,CAAC;YAE3B,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;YACrE,MAAM,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACnE,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAChD,MAAM,eAAe,GAAG,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACvE,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEjD,MAAM,UAAU,GAAG,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAClE,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;YAC5D,MAAM,gBAAgB,GAAuD;gBAC3E,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAC9C,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;aAC/C,CAAC;YACF,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACxD,gBAAgB,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YAC5D,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrD,UAAU,CAAC,oBAAoB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;YAE3D,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YACpD,OAAO,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC;YAClC,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC;YAC1C,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;YAEhC,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAC3D,MAAM,cAAc,GAAG;;;;;wCAKW,CAAC;YAEnC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,UAAU,CAAC,GAAG,EAAE;YACd,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,WAAkE,CAAC,CAAC;QAC/G,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,GAAG,EAAE;YACb,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;YAChD,cAAc,CAAC,YAAY,CAAC,CAAC;YAC7B,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,EAAgC;aAC7C,CAAC,CAAC;YACH,MAAM,CAAC,WAAW,CACd,KAAK,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC,CAAC,OAAO,EAAE,QAAQ,EAC1D,YAAY,CACf,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,EAAgC;aAC7C,CAAC,CAAC;YACH,MAAM,CAAC,WAAW,CACd,KAAK,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC,CAAC,OAAO,EAAE,WAAW,EAC7D,CAAC,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACjD,cAAc,CAAC,YAAY,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;YAC1C,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,EAAgC;aAC7C,CAAC,CAAC;YACH,MAAM,CAAC,WAAW,CACd,KAAK,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC,CAAC,QAAQ,EAAE,SAAS,EAC5D,CAAC,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;YACxC,cAAc,CAAC,YAAY,CAAC,CAAC;YAE7B,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,EAAgC;gBAC5C,wBAAwB,EAAE,IAAI;aAC/B,CAAC,CAAC;YACH,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAChD,KAAK,CAAC,wBAAwB,GAAG;gBAC/B;oBACE,IAAI,yDAAsC;oBAC1C,KAAK,EAAE,UAAU;iBAClB;gBACD;oBACE,IAAI,qDAAoC;oBACxC,KAAK,EAAE,UAAU;iBAClB;gBACD;oBACE,IAAI,iDAAkC;oBACtC,IAAI,EAAE,QAAQ;iBACf;aACF,CAAC;YACF,MAAM,CAAC,SAAS,CACZ,KAAK,CAAC,YAAY,CAAC;gBACjB,IAAI,EAAE,YAAY;aACnB,CAAC,EACF;gBACE,eAAe,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC,EAAC;gBACjF,MAAM,EAAE,iBAAiB;gBACzB,QAAQ,EAAE,UAAU;gBACpB,mBAAmB,EAAE;oBACnB;wBACE,IAAI,EAAE,CAAC;wBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC;qBAC5B;oBACD;wBACE,IAAI,EAAE,CAAC;wBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,gBAAgB,EAAC,CAAC;qBAClC;iBACF;gBACD,QAAQ,EAAE;oBACR,4BAA4B,EAAE,KAAK;oBACnC,iBAAiB,EAAE,WAAW;oBAC9B,SAAS,EAAE,CAAC;iBACb;gBACD,OAAO,EAAE;oBACP,QAAQ,EAAE,YAAY;oBACtB,WAAW,EAAE,SAAS;iBACvB;gBACD,cAAc,EAAE,CAAC;gBACjB,kBAAkB,EAAE,CAAC;aACtB,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,SAAS,cAAc,CACnB,KAC4D;QAE9D,OAAO;YACL,KAAK;YACL,mBAAmB,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;SAC/C,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE;QACnB,IAAI,OAAyD,CAAC;QAC9D,UAAU,CAAC,GAAG,EAAE;YACd,cAAc,EAAE,CAAC;YACjB,OAAO,GAAG,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;YACpC,EAAE,CAAC,wEAAwE,EAAE,KAAK,IAAI,EAAE;gBACtF,MAAM,OAAO,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAE3C,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,KAAK,SAAS,CAAC,CAAC,uBAAuB;oBACrC,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;wBAChB,MAAM;4BACJ,WAAW,EAAE;;mBAER;4BACL,QAAQ,EAAE,EAAE;4BACZ,SAAS,EAAE,IAAI;yBAChB,CAAC;oBACJ,CAAC;yBAAM,CAAC;wBACN,MAAM;4BACJ,WAAW,EAAE,4BAA4B;4BACzC,QAAQ,EAAE,EAAE;4BACZ,SAAS,EAAE,IAAI;yBAChB,CAAC;oBACJ,CAAC;oBAED,KAAK,EAAE,CAAC;gBACV,CAAC;gBACD,MAAM,MAAM,GACR,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,eAAe,CAAC,mDAAmD,CAAC,CAAC,CAAC;gBAC/G,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;oBAC7B,UAAU,EAAE,cAAc,CAAC,uBAAuB,CAAC;oBACnD,oBAAoB;oBACpB,wBAAwB,EAAE,IAAI;oBAC9B,MAAM;iBAEP,CAAC,CAAC;gBAEH,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACtB,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;gBAE5F,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,EAAC,iBAAiB,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;YACxF,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,iFAAiF,EAAE,KAAK,IAAI,EAAE;gBAC/F,MAAM,OAAO,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC3C,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,KAAK,SAAS,CAAC,CAAC,uBAAuB;oBACrC,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;wBAChB,MAAM;4BACJ,WAAW,EAAE;;mBAER;4BACL,QAAQ,EAAE,EAAE;4BACZ,SAAS,EAAE,IAAI;yBAChB,CAAC;oBACJ,CAAC;yBAAM,CAAC;wBACN,MAAM;4BACJ,WAAW,EAAE,4BAA4B;4BACzC,QAAQ,EAAE,EAAE;4BACZ,SAAS,EAAE,IAAI;yBAChB,CAAC;oBACJ,CAAC;oBAED,KAAK,EAAE,CAAC;gBACV,CAAC;gBACD,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;gBACpC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,eAAe,CAAC,mDAAmD,CAAC,CAAC,CAAC;gBAC/G,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACnC,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;oBAC7B,UAAU,EAAE,cAAc,CAAC,uBAAuB,CAAC;oBACnD,oBAAoB;oBACpB,wBAAwB,EAAE,IAAI;oBAC9B,MAAM;iBAEP,CAAC,CAAC;gBACH,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACtB,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;gBAE5F,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;gBACtC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,EAAC,iBAAiB,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;YACzF,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,oEAAoE,EAAE,KAAK,IAAI,EAAE;gBAClF,MAAM,OAAO,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC3C,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,KAAK,SAAS,CAAC,CAAC,uBAAuB;oBACrC,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;wBAChB,MAAM;4BACJ,WAAW,EAAE;;mBAER;4BACL,QAAQ,EAAE,EAAE;4BACZ,SAAS,EAAE,IAAI;yBAChB,CAAC;oBACJ,CAAC;yBAAM,CAAC;wBACN,MAAM;4BACJ,WAAW,EAAE,4BAA4B;4BACzC,QAAQ,EAAE,EAAE;4BACZ,SAAS,EAAE,IAAI;yBAChB,CAAC;oBACJ,CAAC;oBAED,KAAK,EAAE,CAAC;gBACV,CAAC;gBACD,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;gBACnC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,eAAe,CAAC,mDAAmD,CAAC,CAAC,CAAC;gBAC/G,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;oBAC7B,UAAU,EAAE,cAAc,CAAC,uBAAuB,CAAC;oBACnD,oBAAoB;oBACpB,wBAAwB,EAAE,IAAI;oBAC9B,MAAM;iBAEP,CAAC,CAAC;gBACH,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACvB,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;gBAE9G,MAAM,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,oDAAqC,CAAE,CAAC;gBAEnG,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,sDAAsD,CAAC,CAAC;gBAC9F,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;gBACzD,MAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACvD,KAAK,SAAS,CAAC,CAAC,cAAc;oBAC5B,MAAM;wBACJ,WAAW,EAAE;;iBAER;wBACL,QAAQ,EAAE,EAAE;wBACZ,SAAS,EAAE,IAAI;qBAChB,CAAC;gBACJ,CAAC;gBACD,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,CACrC,IAAI,YAAY,CAAC,eAAe,CAAC,mDAAmD,CAAC,CAAC,CAAC;gBAC3F,MAAM,6BAA6B,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9D,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;oBAC7B,UAAU,EAAE,cAAc,CAAC,cAAc,CAAC;oBAC1C,oBAAoB;oBACpB,wBAAwB,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,6BAA6B,CAAC;oBAC7E,MAAM;iBACP,CAAC,CAAC;gBAEH,MAAM,SAAS,GAAgC,EAAE,CAAC;gBAClD,MAAM,UAAU,GAAG,IAAI,eAAe,EAAE,CAAC;gBACzC,IAAI,KAAK,EAAE,MAAM,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAC,CAAC,EAAE,CAAC;oBACpF,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACvB,IAAI,MAAM,CAAC,IAAI,KAAK,aAAa,EAAE,CAAC;wBAClC,qDAAqD;wBACrD,YAAY;wBACZ,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;wBACjC,+DAA+D;wBAC/D,UAAU,CAAC,KAAK,EAAE,CAAC;oBACrB,CAAC;gBACH,CAAC;gBAED,MAAM,SAAS,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAA+B,CAAC;gBACjE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACzB,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,gCAAkB,CAAC;gBACrD,MAAM,CAAC,OAAO,CAAC,MAAM,6BAA6B,CAAC,OAAO,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;YAChD,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;gBAC1C,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,KAAK,SAAS,CAAC,CAAC,uBAAuB;oBACrC,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;wBAChB,MAAM;4BACJ,WAAW,EAAE;;mBAER;4BACL,QAAQ,EAAE,EAAE;4BACZ,SAAS,EAAE,IAAI;yBAChB,CAAC;oBACJ,CAAC;yBAAM,CAAC;wBACN,MAAM;4BACJ,WAAW,EAAE,4BAA4B;4BACzC,QAAQ,EAAE,EAAE;4BACZ,SAAS,EAAE,IAAI;yBAChB,CAAC;oBACJ,CAAC;oBACD,KAAK,EAAE,CAAC;gBACV,CAAC;gBACD,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;gBACrF,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;oBAC7B,UAAU,EAAE,cAAc,CAAC,uBAAuB,CAAC;oBACnD,oBAAoB;oBACpB,MAAM;iBAEP,CAAC,CAAC;gBAEH,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;gBAC3G,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;oBACvC,OAAO,IAAI,CAAC,IAAI,oDAAqC,CAAC;gBACxD,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE,oCAAoC,CAAC,CAAC;gBACvE,MAAM,UAAU,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;gBACtC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,oDAAoD,CAAC,CAAC,CAAC;YAC3F,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;YAC/C,KAAK,SAAS,CAAC,CAAC,cAAc;gBAC5B,MAAM;oBACJ,WAAW,EAAE,4BAA4B;oBACzC,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,IAAI;iBAChB,CAAC;YACJ,CAAC;YAED,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YAC3B,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,cAAc,CAAC,cAAc,CAAC;gBAC1C,MAAM;aACP,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;YAC9G,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE;gBAC1B;oBACE,IAAI,yDAAsC;oBAC1C,KAAK,EAAE,MAAM;iBACd;gBACD;oBACE,IAAI,mDAAmC;oBACvC,KAAK,EAAE,sBAAsB;oBAC7B,OAAO,EAAE;wBACP;4BACE,IAAI,EAAE,+BAA+B;4BACrC,KAAK,EAAE,WAAW;yBACnB;qBACF;iBACF;gBACD;oBACE,IAAI,qDAAoC;oBACxC,KAAK,EAAE,uFAAuF;iBAC/F;gBACD;oBACE,IAAI,iDAAkC;oBACtC,IAAI,EAAE,oBAAoB;oBAC1B,WAAW,EAAE,SAAS;oBACtB,KAAK,EAAE,SAAS;iBACjB;aACF,CAAC,CAAC;YACH,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC/B,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,qBAAqB,EAAE;gBAC5C;oBACE,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,uFAAuF,EAAC,CAAC;iBACzG;gBACD;oBACE,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,4BAA4B,EAAC,CAAC;iBAC9C;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;YACtE,MAAM,QAAQ,GAAkC,EAAE,CAAC;YAEnD,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,SAAS,CAAC,CAAC,cAAc,CAAC,OAAoC;gBACjE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACvB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;oBACZ,MAAM;wBACJ,WAAW,EAAE,mCAAmC;wBAChD,QAAQ,EAAE,EAAE;wBACZ,SAAS,EAAE,IAAI;qBAChB,CAAC;oBACF,OAAO;gBACT,CAAC;gBACD,MAAM;oBACJ,WAAW,EAAE;;;;KAIlB;oBACK,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,KAAK;iBACjB,CAAC;gBACF,CAAC,EAAE,CAAC;YACN,CAAC;YAED,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YACtC,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,cAAc,CAAC,cAAc,CAAC;gBAC1C,oBAAoB;gBACpB,MAAM;aACP,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;YAE5F,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,oCAAoC,CAAC,CAAC;YACnE,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,mBAAmB,EAAE,uDAAuD,CAAC,CAAC;YAC7G,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;YAC3C,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,SAAS,CACZ,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,EACpC,EAAC,IAAI,EAAE,uFAAuF,EAAC,EAC/F,8CAA8C,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChF,MAAM,CAAC,SAAS,CACZ,QAAQ,CAAC,CAAC,CAAC,CAAC,mBAAmB,EAC/B;gBACE;oBACE,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,uFAAuF,EAAC,CAAC;iBACzG;gBACD;oBACE,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC;4BACN,IAAI,EACA,mGAAmG;yBACxG,CAAC;iBACH;aACF,EACD,yDAAyD,CAAC,CAAC;YAC/D,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;YAC3C,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,SAAS,CACZ,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAC,IAAI,EAAE,wBAAwB,EAAC,EACtE,2CAA2C,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACjD,KAAK,SAAS,CAAC,CAAC,cAAc;gBAC5B,MAAM;oBACJ,WAAW,EAAE,4BAA4B;oBACzC,QAAQ,EAAE;wBACR,WAAW,EAAE,GAAG;qBACjB;oBACD,SAAS,EAAE,IAAI;iBAChB,CAAC;YACJ,CAAC;YAED,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,cAAc,CAAC,cAAc,CAAC;gBAC1C,MAAM,EAAE,KAAK,CAAC,GAAG,EAAE;aAEpB,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;YAC9G,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE;gBAC1B;oBACE,IAAI,yDAAsC;oBAC1C,KAAK,EAAE,MAAM;iBACd;gBACD;oBACE,IAAI,mDAAmC;oBACvC,KAAK,EAAE,sBAAsB;oBAC7B,OAAO,EAAE;wBACP;4BACE,IAAI,EAAE,+BAA+B;4BACrC,KAAK,EAAE,WAAW;yBACnB;qBACF;iBACF;gBACD;oBACE,IAAI,qDAAoC;oBACxC,KAAK,EAAE,uFAAuF;iBAC/F;gBACD;oBACE,IAAI,iDAAkC;oBACtC,IAAI,EAAE,oBAAoB;oBAC1B,WAAW,EAAE,SAAS;oBACtB,KAAK,EAAE,GAAG;iBACX;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oFAAoF,EAAE,KAAK,IAAI,EAAE;YAClG,KAAK,SAAS,CAAC,CAAC,cAAc;gBAC5B,MAAM;oBACJ,WAAW,EAAE,4BAA4B;oBACzC,QAAQ,EAAE;wBACR,WAAW,EAAE,GAAG;qBACjB;oBACD,SAAS,EAAE,KAAK;iBACjB,CAAC;gBACF,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;YAC7C,CAAC;YAED,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,cAAc,CAAC,cAAc,CAAC;gBAC1C,MAAM,EAAE,KAAK,CAAC,GAAG,EAAE;aACpB,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;YAC9G,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE;gBAC1B;oBACE,IAAI,yDAAsC;oBAC1C,KAAK,EAAE,MAAM;iBACd;gBACD;oBACE,IAAI,mDAAmC;oBACvC,KAAK,EAAE,sBAAsB;oBAC7B,OAAO,EAAE;wBACP;4BACE,IAAI,EAAE,+BAA+B;4BACrC,KAAK,EAAE,WAAW;yBACnB;qBACF;iBACF;gBACD;oBACE,IAAI,qDAAoC;oBACxC,KAAK,EAAE,uFAAuF;iBAC/F;gBACD;oBACE,IAAI,EAAE,oBAAoB;oBAC1B,IAAI,iDAAkC;iBACvC;gBACD;oBACE,IAAI,+CAAiC;oBACrC,KAAK,4CAA8B;iBACpC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4FAA4F,EAAE,KAAK,IAAI,EAAE;YAC1G,KAAK,SAAS,CAAC,CAAC,cAAc;gBAC5B,MAAM;oBACJ,WAAW,EAAE,4BAA4B;oBACzC,QAAQ,EAAE;wBACR,WAAW,EAAE,GAAG;wBAChB,mBAAmB,EAAE;4BACnB,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,kBAAkB;4BACtE,SAAS,EAAE,EAAE;yBACd;qBACF;oBACD,SAAS,EAAE,IAAI;iBAChB,CAAC;YACJ,CAAC;YAED,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,cAAc,CAAC,cAAc,CAAC;gBAC1C,MAAM,EAAE,KAAK,CAAC,GAAG,EAAE;aAEpB,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;YAC9G,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE;gBAC1B;oBACE,IAAI,yDAAsC;oBAC1C,KAAK,EAAE,MAAM;iBACd;gBACD;oBACE,IAAI,mDAAmC;oBACvC,KAAK,EAAE,sBAAsB;oBAC7B,OAAO,EAAE;wBACP;4BACE,IAAI,EAAE,+BAA+B;4BACrC,KAAK,EAAE,WAAW;yBACnB;qBACF;iBACF;gBACD;oBACE,IAAI,qDAAoC;oBACxC,KAAK,EAAE,uFAAuF;iBAC/F;gBACD;oBACE,IAAI,iDAAkC;oBACtC,IAAI,EAAE,oBAAoB;oBAC1B,WAAW,EAAE,SAAS;oBACtB,KAAK,EAAE,GAAG;iBACX;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sFAAsF,EAAE,KAAK,IAAI,EAAE;YACpG,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YAC3B,KAAK,SAAS,CAAC,CAAC,4BAA4B;gBAC1C,MAAM;oBACJ,WAAW,EAAE;;;;WAIZ;oBACD,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,KAAK;iBACjB,CAAC;gBAEF,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAC/B,MAAM;oBACJ,WAAW,EAAE;;;;;WAKZ;oBACD,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,IAAI;iBAChB,CAAC;YACJ,CAAC;YAED,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,cAAc,CAAC,4BAA4B,CAAC;gBACxD,oBAAoB;gBACpB,MAAM;aACP,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;YAE5F,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAChC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,yBAAyB,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;YAC3D,KAAK,SAAS,CAAC,CAAC,eAAe;gBAC7B,MAAM;oBACJ,WAAW,EAAE,EAAE;oBACf,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,IAAI;iBAChB,CAAC;YACJ,CAAC;YAED,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YAC3B,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,cAAc,CAAC,eAAe,CAAC;gBAC3C,MAAM;aACP,CAAC,CAAC;YACH,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;YAC9G,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE;gBAC1B;oBACE,IAAI,yDAAsC;oBAC1C,KAAK,EAAE,MAAM;iBACd;gBACD;oBACE,IAAI,mDAAmC;oBACvC,KAAK,EAAE,sBAAsB;oBAC7B,OAAO,EAAE;wBACP;4BACE,IAAI,EAAE,+BAA+B;4BACrC,KAAK,EAAE,WAAW;yBACnB;qBACF;iBACF;gBACD;oBACE,IAAI,qDAAoC;oBACxC,KAAK,EAAE,uFAAuF;iBAC/F;gBACD;oBACE,IAAI,+CAAiC;oBACrC,KAAK,gDAAgC;iBACtC;aACF,CAAC,CAAC;YACH,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC/B,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;YAC9E,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,SAAS,CAAC,CAAC,eAAe;gBAC7B,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;oBACZ,MAAM;wBACJ,WAAW,EAAE,mCAAmC;wBAChD,QAAQ,EAAE,EAAE;wBACZ,SAAS,EAAE,IAAI;qBAChB,CAAC;oBACF,OAAO;gBACT,CAAC;gBACD,MAAM;oBACJ,WAAW,EAAE;;;;;;2BAMI;oBACjB,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,KAAK;iBACjB,CAAC;gBACF,CAAC,EAAE,CAAC;YACN,CAAC;YAED,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAClC,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,cAAc,CAAC,eAAe,CAAC;gBAC3C,oBAAoB;gBACpB,MAAM;aAEP,CAAC,CAAC;YACH,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;YAC9G,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE;gBAC1B;oBACE,IAAI,yDAAsC;oBAC1C,KAAK,EAAE,MAAM;iBACd;gBACD;oBACE,IAAI,mDAAmC;oBACvC,KAAK,EAAE,sBAAsB;oBAC7B,OAAO,EAAE;wBACP;4BACE,IAAI,EAAE,+BAA+B;4BACrC,KAAK,EAAE,WAAW;yBACnB;qBACF;iBACF;gBACD;oBACE,IAAI,qDAAoC;oBACxC,KAAK,EAAE,uFAAuF;iBAC/F;gBACD;oBACE,IAAI,mDAAmC;oBACvC,OAAO,EAAE,gBAAgB;oBACzB,KAAK,EAAE,SAAS;iBACjB;gBACD;oBACE,IAAI,iDAAkC;oBACtC,IAAI,EAAE,yBAAyB;oBAC/B,MAAM,EAAE,OAAO;oBACf,QAAQ,EAAE,KAAK;iBAChB;gBACD;oBACE,IAAI,qDAAoC;oBACxC,KAAK,EAAE,oBAAoB;iBAC5B;gBACD;oBACE,IAAI,iDAAkC;oBACtC,IAAI,EAAE,2BAA2B;oBACjC,WAAW,EAAE,SAAS;oBACtB,KAAK,EAAE,SAAS;iBACjB;aACF,CAAC,CAAC;YACH,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACtD,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,SAAS,CAAC,CAAC,qBAAqB;gBACnC,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;oBAChB,MAAM;wBACJ,WAAW,EAAE,4BAA4B;wBACzC,QAAQ,EAAE,EAAE;wBACZ,SAAS,EAAE,IAAI;qBAChB,CAAC;oBACF,OAAO;gBACT,CAAC;gBACD,KAAK,EAAE,CAAC;gBACR,MAAM;oBACJ,WAAW,EAAE,oBAAoB,KAAK,mDAAmD;oBACzF,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,KAAK;iBACjB,CAAC;YACJ,CAAC;YAED,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,WAAW,CAAC,CAAC;YAClD,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,cAAc,CAAC,qBAAqB,CAAC;gBACjD,oBAAoB;gBACpB,MAAM;aAEP,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;YAE5F,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,qBAAqB,EAAE;gBAC5C;oBACE,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,uFAAuF,EAAC,CAAC;iBACzG;gBACD;oBACE,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,sEAAsE,EAAC,CAAC;iBACxF;gBACD;oBACE,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,wBAAwB,EAAC,CAAC;iBAC1C;gBACD;oBACE,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,sEAAsE,EAAC,CAAC;iBACxF;gBACD;oBACE,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,wBAAwB,EAAC,CAAC;iBAC1C;gBACD;oBACE,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,sEAAsE,EAAC,CAAC;iBACxF;gBACD;oBACE,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,wBAAwB,EAAC,CAAC;iBAC1C;gBACD;oBACE,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC,EAAC,IAAI,EAAE,4BAA4B,EAAC,CAAC;iBAC9C;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;YAClC,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,SAAS,CAAC,CAAC,gBAAgB,CAAC,CAAU,EAAE,OAA+B;gBAC1E,IAAI,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC;oBAC5B,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;gBAC7C,CAAC;gBACD,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;oBAChB,MAAM;wBACJ,WAAW,EAAE,4BAA4B;wBACzC,QAAQ,EAAE,EAAE;wBACZ,SAAS,EAAE,IAAI;qBAChB,CAAC;oBACF,OAAO;gBACT,CAAC;gBACD,KAAK,EAAE,CAAC;gBACR,MAAM;oBACJ,WAAW,EAAE,oBAAoB,KAAK,uCAAuC;oBAC7E,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,KAAK;iBACjB,CAAC;YACJ,CAAC;YAED,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YAC3B,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,cAAc,CAAC,gBAAgB,CAAC;gBAC5C,oBAAoB;gBACpB,MAAM;aACP,CAAC,CAAC;YAEH,MAAM,UAAU,GAAG,IAAI,eAAe,EAAE,CAAC;YACzC,UAAU,CAAC,KAAK,EAAE,CAAC;YACnB,MAAM,KAAK,CAAC,SAAS,CACjB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAC,CAAC,CAAC,CAAC;YAErG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,IAAI,OAAyD,CAAC;QAC9D,UAAU,CAAC,GAAG,EAAE;YACd,cAAc,EAAE,CAAC;YACjB,OAAO,GAAG,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,SAAS,CAAC,CAAC,qBAAqB;gBACnC,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;oBAChB,MAAM;wBACJ,WAAW,EAAE,4BAA4B;wBACzC,QAAQ,EAAE,EAAE;wBACZ,SAAS,EAAE,IAAI;qBAChB,CAAC;oBACF,OAAO;gBACT,CAAC;gBACD,KAAK,EAAE,CAAC;gBACR,MAAM;oBACJ,WAAW,EAAE,oBAAoB,KAAK,mDAAmD;oBACzF,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,KAAK;iBACjB,CAAC;YACJ,CAAC;YACD,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE,oBAAoB,CAAC,CAAC;YAC/F,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,WAAW,CAAC,CAAC;YAClD,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;gBAC7B,UAAU,EAAE,cAAc,CAAC,qBAAqB,CAAC;gBACjD,oBAAoB;gBACpB,MAAM;aACP,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;YAE5F,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;gBACrD;oBACE,IAAI,yDAAsC;oBAC1C,KAAK,EAAE,MAAM;iBACd;gBACD;oBACE,IAAI,mDAAmC;oBACvC,KAAK,EAAE,sBAAsB;oBAC7B,OAAO,EAAE,CAAC;4BACR,IAAI,EAAE,+BAA+B;4BACrC,KAAK,EAAE,WAAW;yBACnB,CAAC;iBACH;gBACD;oBACE,IAAI,qDAAoC;oBACxC,KAAK,EAAE,uFAAuF;iBAC/F;gBACD;oBACE,IAAI,+CAAiC;oBACrC,KAAK,EAAE,MAAM;oBACb,KAAK,EAAE,SAAS;iBACjB;gBACD;oBACE,IAAI,mDAAmC;oBACvC,OAAO,EAAE,WAAW;oBACpB,KAAK,EAAE,SAAS;iBACjB;gBACD;oBACE,IAAI,iDAAkC;oBACtC,IAAI,EAAE,uBAAuB;oBAC7B,MAAM,EAAE,WAAW;oBACnB,QAAQ,EAAE,KAAK;iBAChB;gBACD;oBACE,IAAI,qDAAoC;oBACxC,KAAK,EAAE,wBAAwB;iBAChC;gBACD;oBACE,IAAI,iDAAkC;oBACtC,IAAI,EAAE,oBAAoB;oBAC1B,WAAW,EAAE,SAAS;oBACtB,KAAK,EAAE,SAAS;iBACjB;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,mCAAmC,EAAE,GAAG,EAAE;QACjD,IAAI,OAAyD,CAAC;QAC9D,UAAU,CAAC,GAAG,EAAE;YACd,OAAO,GAAG,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,SAAS,aAAa;YACpB,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,SAAS,CAAC,CAAC,uBAAuB;gBACrC,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;oBAChB,MAAM;wBACJ,WAAW,EAAE;;iBAER;wBACL,QAAQ,EAAE,EAAE;wBACZ,SAAS,EAAE,IAAI;qBAChB,CAAC;gBACJ,CAAC;qBAAM,CAAC;oBACN,MAAM;wBACJ,WAAW,EAAE,4BAA4B;wBACzC,QAAQ,EAAE,EAAE;wBACZ,SAAS,EAAE,IAAI;qBAChB,CAAC;gBACJ,CAAC;gBAED,KAAK,EAAE,CAAC;YACV,CAAC;YACD,OAAO,cAAc,CAAC,uBAAuB,CAAC,CAAC;QACjD,CAAC;QAED,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;YAC1B,UAAU,CAAC,GAAG,EAAE;gBACd,cAAc,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,iCAAiC,CAAC,UAAU,CAAC,CAAC;YAC7G,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;gBACxD,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;gBAC5B,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;oBAC7B,UAAU,EAAE,aAAa,EAAE;oBAC3B,oBAAoB;oBACpB,MAAM;iBACP,CAAC,CAAC;gBACH,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;gBAC9G,MAAM,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,oDAAqC,CAAE,CAAC;gBACnG,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,oDAAoD,CAAC,CAAC;gBAC5F,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;YAC7C,UAAU,CAAC,GAAG,EAAE;gBACd,cAAc,CACV,SAAS,EAAE,SAAS,EAAE,SAAS,EAC/B,IAAI,CAAC,OAAO,CAAC,iCAAiC,CAAC,6BAA6B,CAAC,CAAC;YACpF,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;gBACjE,MAAM,MAAM,GACR,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,eAAe,CAAC,mDAAmD,CAAC,CAAC,CAAC;gBAC/G,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC;oBAC7B,UAAU,EAAE,aAAa,EAAE;oBAC3B,oBAAoB;oBACpB,MAAM;iBACP,CAAC,CAAC;gBACH,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;gBAC9G,MAAM,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,oDAAqC,CAAE,CAAC;gBACnG,MAAM,CAAC,WAAW,CACd,UAAU,CAAC,MAAM,EAAE,2EAA2E,CAAC,CAAC;gBACpG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport {\n  describeWithEnvironment,\n  getGetHostConfigStub,\n} from '../../../testing/EnvironmentHelpers.js';\nimport * as AiAssistance from '../ai_assistance.js';\n\nconst {StylingAgent, ErrorType} = AiAssistance;\n\ndescribeWithEnvironment('StylingAgent', () => {\n  function mockHostConfig(\n      modelId?: string, temperature?: number, userTier?: string,\n      executionMode?: Root.Runtime.HostConfigFreestylerExecutionMode) {\n    getGetHostConfigStub({\n      devToolsFreestyler: {\n        modelId,\n        temperature,\n        userTier,\n        executionMode,\n      },\n    });\n  }\n\n  function createExtensionScope() {\n    return {\n      async install() {\n\n      },\n      async uninstall() {\n\n      },\n    };\n  }\n  describe('parseResponse', () => {\n    const agent = new StylingAgent({\n      aidaClient: {} as Host.AidaClient.AidaClient,\n    });\n\n    function getParsedTextResponse(explanation: string): AiAssistance.ParsedResponse {\n      return agent.parseResponse({\n        explanation,\n        metadata: {},\n        completed: false,\n      });\n    }\n\n    it('parses a thought', async () => {\n      const payload = 'some response';\n      assert.deepEqual(\n          getParsedTextResponse(`THOUGHT: ${payload}`),\n          {\n            title: undefined,\n            thought: payload,\n          },\n      );\n      assert.deepEqual(\n          getParsedTextResponse(`   THOUGHT: ${payload}`),\n          {\n            title: undefined,\n            thought: payload,\n          },\n      );\n      assert.deepEqual(\n          getParsedTextResponse(`Something\\n   THOUGHT: ${payload}`),\n          {\n            title: undefined,\n            thought: payload,\n          },\n      );\n    });\n    it('parses a answer', async () => {\n      const payload = 'some response';\n      assert.deepEqual(\n          getParsedTextResponse(`ANSWER: ${payload}`),\n          {\n            answer: payload,\n            suggestions: undefined,\n          },\n      );\n      assert.deepEqual(\n          getParsedTextResponse(`   ANSWER: ${payload}`),\n          {\n            answer: payload,\n            suggestions: undefined,\n          },\n      );\n      assert.deepEqual(\n          getParsedTextResponse(`Something\\n   ANSWER: ${payload}`),\n          {\n            answer: payload,\n            suggestions: undefined,\n          },\n      );\n    });\n    it('parses a multiline answer', async () => {\n      const payload = `a\nb\nc`;\n      assert.deepEqual(\n          getParsedTextResponse(`ANSWER: ${payload}`),\n          {\n            answer: payload,\n            suggestions: undefined,\n          },\n      );\n      assert.deepEqual(\n          getParsedTextResponse(`   ANSWER: ${payload}`),\n          {\n            answer: payload,\n            suggestions: undefined,\n          },\n      );\n      assert.deepEqual(\n          getParsedTextResponse(`Something\\n   ANSWER: ${payload}`),\n          {\n            answer: payload,\n            suggestions: undefined,\n          },\n      );\n      assert.deepEqual(\n          getParsedTextResponse(`ANSWER: ${payload}\\nTHOUGHT: thought`),\n          {\n            answer: payload,\n            suggestions: undefined,\n          },\n      );\n      assert.deepEqual(\n          getParsedTextResponse(\n              `ANSWER: ${payload}\\nOBSERVATION: observation`,\n              ),\n          {\n            answer: payload,\n            suggestions: undefined,\n          },\n      );\n      assert.deepEqual(\n          getParsedTextResponse(\n              `ANSWER: ${payload}\\nACTION\\naction\\nSTOP`,\n              ),\n          {\n            action: 'action',\n            title: undefined,\n            thought: undefined,\n          },\n      );\n    });\n    it('parses an action', async () => {\n      const payload = `const data = {\n  someKey: \"value\",\n}`;\n      assert.deepEqual(\n          getParsedTextResponse(`ACTION\\n${payload}\\nSTOP`),\n          {\n            action: payload,\n            title: undefined,\n            thought: undefined,\n          },\n      );\n      assert.deepEqual(\n          getParsedTextResponse(`ACTION\\n${payload}`),\n          {\n            action: payload,\n            title: undefined,\n            thought: undefined,\n          },\n      );\n      assert.deepEqual(\n          getParsedTextResponse(`ACTION\\n\\n${payload}\\n\\nSTOP`),\n          {\n            action: payload,\n            title: undefined,\n            thought: undefined,\n          },\n      );\n\n      assert.deepEqual(\n          getParsedTextResponse(`ACTION\\n\\n${payload}\\n\\nANSWER: answer`),\n          {\n            action: payload,\n            title: undefined,\n            thought: undefined,\n          },\n      );\n    });\n    it('parses an action where the last line of the code block ends with STOP keyword', async () => {\n      const payload = `const styles = window.getComputedStyle($0);\n        const data = {\n          styles\n        };`;\n      assert.deepEqual(\n          getParsedTextResponse(`ACTION\\n${payload}STOP`),\n          {\n            action: payload,\n            title: undefined,\n            thought: undefined,\n          },\n      );\n    });\n    it('parses a thought and title', async () => {\n      const payload = 'some response';\n      const title = 'this is the title';\n      assert.deepEqual(\n          getParsedTextResponse(`THOUGHT: ${payload}\\nTITLE: ${title}`),\n          {\n            thought: payload,\n            title,\n          },\n      );\n    });\n\n    it('parses an action with backticks in the code', async () => {\n      const payload = `const data = {\n  someKey: \"value\",\n}`;\n      assert.deepEqual(\n          getParsedTextResponse(\n              `ACTION\\n\\`\\`\\`\\n${payload}\\n\\`\\`\\`\\nSTOP`,\n              ),\n          {\n            action: payload,\n            title: undefined,\n            thought: undefined,\n          },\n      );\n    });\n\n    it('parses an action with 5 backticks in the code and `js` text in the prelude', async () => {\n      const payload = `const data = {\n  someKey: \"value\",\n}`;\n      assert.deepEqual(\n          getParsedTextResponse(\n              `ACTION\\n\\`\\`\\`\\`\\`\\njs\\n${payload}\\n\\`\\`\\`\\`\\`\\nSTOP`,\n              ),\n          {\n            action: payload,\n            title: undefined,\n            thought: undefined,\n          },\n      );\n    });\n\n    it('parses a thought and an action', async () => {\n      const actionPayload = `const data = {\n  someKey: \"value\",\n}`;\n      const thoughtPayload = 'thought';\n      assert.deepEqual(\n          getParsedTextResponse(\n              `THOUGHT:${thoughtPayload}\\nACTION\\n${actionPayload}\\nSTOP`,\n              ),\n          {\n            action: actionPayload,\n            title: undefined,\n            thought: thoughtPayload,\n          },\n      );\n    });\n\n    it('parses a thought and an answer', async () => {\n      const answerPayload = 'answer';\n      const thoughtPayload = 'thought';\n      assert.deepEqual(\n          getParsedTextResponse(\n              `THOUGHT:${thoughtPayload}\\nANSWER:${answerPayload}`,\n              ),\n          {\n            answer: answerPayload,\n            suggestions: undefined,\n          },\n      );\n    });\n\n    it('parses an answer and suggestions', async () => {\n      const answerPayload = 'answer';\n      const suggestions = ['suggestion'] as [string];\n      const suggestionsText = JSON.stringify(suggestions);\n      assert.deepEqual(\n          getParsedTextResponse(\n              `ANSWER:${answerPayload}\\nSUGGESTIONS: ${suggestionsText}`,\n              ),\n          {\n            answer: answerPayload,\n            suggestions,\n          },\n      );\n    });\n\n    it('parses a thought, title, action and answer from same response', async () => {\n      const answerPayload = 'answer';\n      const thoughtPayload = 'thought';\n      const actionPayload = `const data = {\n  someKey: \"value\",\n}`;\n      const title = 'title';\n      assert.deepEqual(\n          getParsedTextResponse(\n              `THOUGHT: ${thoughtPayload}\\nTITLE: ${title}\\nACTION\\n${actionPayload}\\nSTOP\\nANSWER:${answerPayload}`,\n              ),\n          {\n            thought: thoughtPayload,\n            action: actionPayload,\n            title,\n          },\n      );\n    });\n    it('parses an action when STOP appearing in its last line and has ANSWER after that', async () => {\n      const answerPayload = 'answer';\n      const suggestions = ['suggestion'];\n      const payload = `const styles = window.getComputedStyle($0);\n        const data = {\n          styles\n        };`;\n      assert.deepEqual(\n          getParsedTextResponse(\n              `ACTION\\n${payload}STOP\\nANSWER:${answerPayload}\\nSUGGESTIONS: ${JSON.stringify(suggestions)}`),\n          {\n            action: payload,\n            thought: undefined,\n            title: undefined,\n          },\n      );\n    });\n    it('parses an action when STOP appearing in its last line and has OBSERVATION after that', async () => {\n      const payload = `const styles = window.getComputedStyle($0);\n        const data = {\n          styles\n        };`;\n      assert.deepEqual(\n          getParsedTextResponse(`ACTION\\n${payload}STOP\\nOBSERVATION:{styles: {}}`),\n          {\n            action: payload,\n            thought: undefined,\n            title: undefined,\n          },\n      );\n    });\n    it('parses an action when STOP appearing in its last line and has THOUGHT after that', async () => {\n      const payload = `const styles = window.getComputedStyle($0);\n        const data = {\n          styles\n        };`;\n      const thoughtPayload = 'thought';\n      assert.deepEqual(\n          getParsedTextResponse(`ACTION\\n${payload}STOP\\nTHOUGHT:${thoughtPayload}`),\n          {\n            action: payload,\n            thought: thoughtPayload,\n            title: undefined,\n          },\n      );\n    });\n\n    it('parses a response as an answer', async () => {\n      assert.deepEqual(\n          getParsedTextResponse(\n              'This is also an answer',\n              ),\n          {\n            answer: 'This is also an answer',\n            suggestions: undefined,\n          },\n      );\n    });\n\n    it('parses a response with no instruction tags as an answer and correctly parses suggestions', async () => {\n      assert.deepEqual(\n          getParsedTextResponse(\n              'This is also an answer\\nSUGGESTIONS: [\\\"suggestion\\\"]',\n              ),\n          {\n            answer: 'This is also an answer',\n            suggestions: ['suggestion'],\n          },\n      );\n    });\n\n    it('parses multi line thoughts', () => {\n      const thoughtText = 'first line\\nsecond line';\n      assert.deepEqual(\n          getParsedTextResponse(`THOUGHT: ${thoughtText}`),\n          {\n            thought: thoughtText,\n            title: undefined,\n          },\n      );\n    });\n  });\n\n  describe('describeElement', () => {\n    let element: sinon.SinonStubbedInstance<SDK.DOMModel.DOMNode>;\n\n    beforeEach(() => {\n      element = sinon.createStubInstance(SDK.DOMModel.DOMNode);\n    });\n\n    afterEach(() => {\n      sinon.restore();\n    });\n\n    it('should describe an element with no children, siblings, or parent', async () => {\n      element.simpleSelector.returns('div#myElement');\n      element.getChildNodesPromise.resolves(null);\n\n      const result = await StylingAgent.describeElement(element);\n\n      assert.strictEqual(result, '* Its selector is `div#myElement`');\n    });\n\n    it('should describe an element with child element and text nodes', async () => {\n      const childNodes: sinon.SinonStubbedInstance<SDK.DOMModel.DOMNode>[] = [\n        sinon.createStubInstance(SDK.DOMModel.DOMNode),\n        sinon.createStubInstance(SDK.DOMModel.DOMNode),\n        sinon.createStubInstance(SDK.DOMModel.DOMNode),\n      ];\n      childNodes[0].nodeType.returns(Node.ELEMENT_NODE);\n      childNodes[0].simpleSelector.returns('span.child1');\n      childNodes[1].nodeType.returns(Node.TEXT_NODE);\n      childNodes[2].nodeType.returns(Node.ELEMENT_NODE);\n      childNodes[2].simpleSelector.returns('span.child2');\n\n      element.simpleSelector.returns('div#parentElement');\n      element.getChildNodesPromise.resolves(childNodes);\n      element.nextSibling = null;\n      element.previousSibling = null;\n      element.parentNode = null;\n\n      const result = await StylingAgent.describeElement(element);\n      const expectedOutput = `* Its selector is \\`div#parentElement\\`\n* It has 2 child element nodes: \\`span.child1\\`, \\`span.child2\\`\n* It only has 1 child text node`;\n\n      assert.strictEqual(result, expectedOutput);\n    });\n\n    it('should describe an element with siblings and a parent', async () => {\n      const nextSibling = sinon.createStubInstance(SDK.DOMModel.DOMNode);\n      nextSibling.nodeType.returns(Node.ELEMENT_NODE);\n      const previousSibling = sinon.createStubInstance(SDK.DOMModel.DOMNode);\n      previousSibling.nodeType.returns(Node.TEXT_NODE);\n\n      const parentNode = sinon.createStubInstance(SDK.DOMModel.DOMNode);\n      parentNode.simpleSelector.returns('div#grandparentElement');\n      const parentChildNodes: sinon.SinonStubbedInstance<SDK.DOMModel.DOMNode>[] = [\n        sinon.createStubInstance(SDK.DOMModel.DOMNode),\n        sinon.createStubInstance(SDK.DOMModel.DOMNode),\n      ];\n      parentChildNodes[0].nodeType.returns(Node.ELEMENT_NODE);\n      parentChildNodes[0].simpleSelector.returns('span.sibling1');\n      parentChildNodes[1].nodeType.returns(Node.TEXT_NODE);\n      parentNode.getChildNodesPromise.resolves(parentChildNodes);\n\n      element.simpleSelector.returns('div#parentElement');\n      element.getChildNodesPromise.resolves(null);\n      element.nextSibling = nextSibling;\n      element.previousSibling = previousSibling;\n      element.parentNode = parentNode;\n\n      const result = await StylingAgent.describeElement(element);\n      const expectedOutput = `* Its selector is \\`div#parentElement\\`\n* It has a next sibling and it is an element node\n* It has a previous sibling and it is a non element node\n* Its parent's selector is \\`div#grandparentElement\\`\n* Its parent has only 1 child element node\n* Its parent has only 1 child text node`;\n\n      assert.strictEqual(result, expectedOutput);\n    });\n  });\n\n  describe('buildRequest', () => {\n    beforeEach(() => {\n      sinon.stub(crypto, 'randomUUID').returns('sessionId' as `${string}-${string}-${string}-${string}-${string}`);\n    });\n\n    afterEach(() => {\n      sinon.restore();\n    });\n\n    it('builds a request with a model id', async () => {\n      mockHostConfig('test model');\n      const agent = new StylingAgent({\n        aidaClient: {} as Host.AidaClient.AidaClient,\n      });\n      assert.strictEqual(\n          agent.buildRequest({text: 'test input'}).options?.model_id,\n          'test model',\n      );\n    });\n\n    it('builds a request with a temperature', async () => {\n      mockHostConfig('test model', 1);\n      const agent = new StylingAgent({\n        aidaClient: {} as Host.AidaClient.AidaClient,\n      });\n      assert.strictEqual(\n          agent.buildRequest({text: 'test input'}).options?.temperature,\n          1,\n      );\n    });\n\n    it('builds a request with a user tier', async () => {\n      mockHostConfig('test model', 1, 'PUBLIC');\n      const agent = new StylingAgent({\n        aidaClient: {} as Host.AidaClient.AidaClient,\n      });\n      assert.strictEqual(\n          agent.buildRequest({text: 'test input'}).metadata?.user_tier,\n          3,\n      );\n    });\n\n    it('structure matches the snapshot', () => {\n      mockHostConfig('test model');\n\n      const agent = new StylingAgent({\n        aidaClient: {} as Host.AidaClient.AidaClient,\n        serverSideLoggingEnabled: true,\n      });\n      sinon.stub(agent, 'preamble').value('preamble');\n      agent.chatNewHistoryForTesting = [\n        {\n          type: AiAssistance.ResponseType.USER_QUERY,\n          query: 'question',\n        },\n        {\n          type: AiAssistance.ResponseType.QUERYING,\n          query: 'question',\n        },\n        {\n          type: AiAssistance.ResponseType.ANSWER,\n          text: 'answer',\n        },\n      ];\n      assert.deepEqual(\n          agent.buildRequest({\n            text: 'test input',\n          }),\n          {\n            current_message: {role: Host.AidaClient.Role.USER, parts: [{text: 'test input'}]},\n            client: 'CHROME_DEVTOOLS',\n            preamble: 'preamble',\n            historical_contexts: [\n              {\n                role: 1,\n                parts: [{text: 'question'}],\n              },\n              {\n                role: 2,\n                parts: [{text: 'ANSWER: answer'}],\n              },\n            ],\n            metadata: {\n              disable_user_content_logging: false,\n              string_session_id: 'sessionId',\n              user_tier: 2,\n            },\n            options: {\n              model_id: 'test model',\n              temperature: undefined,\n            },\n            client_feature: 2,\n            functionality_type: 1,\n          },\n      );\n    });\n  });\n\n  function mockAidaClient(\n      fetch: (_: Host.AidaClient.AidaRequest, options?: {signal: AbortSignal}) =>\n          AsyncGenerator<Host.AidaClient.AidaResponse, void, void>,\n      ): Host.AidaClient.AidaClient {\n    return {\n      fetch,\n      registerClientEvent: () => Promise.resolve({}),\n    };\n  }\n\n  describe('run', () => {\n    let element: sinon.SinonStubbedInstance<SDK.DOMModel.DOMNode>;\n    beforeEach(() => {\n      mockHostConfig();\n      element = sinon.createStubInstance(SDK.DOMModel.DOMNode);\n    });\n\n    describe('side effect handling', () => {\n      it('calls confirmSideEffect when the code execution contains a side effect', async () => {\n        const promise = Promise.withResolvers();\n        const stub = sinon.stub().returns(promise);\n\n        let count = 0;\n        async function* generateActionAndAnswer() {\n          if (count === 0) {\n            yield {\n              explanation: `ACTION\n              $0.style.backgroundColor = 'red'\n              STOP`,\n              metadata: {},\n              completed: true,\n            };\n          } else {\n            yield {\n              explanation: 'ANSWER: This is the answer',\n              metadata: {},\n              completed: true,\n            };\n          }\n\n          count++;\n        }\n        const execJs =\n            sinon.mock().throws(new AiAssistance.SideEffectError('EvalError: Possible side-effect in debug-evaluate'));\n        const agent = new StylingAgent({\n          aidaClient: mockAidaClient(generateActionAndAnswer),\n          createExtensionScope,\n          confirmSideEffectForTest: stub,\n          execJs,\n\n        });\n\n        promise.resolve(true);\n        await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n\n        sinon.assert.match(execJs.getCall(0).args[1], sinon.match({throwOnSideEffect: true}));\n      });\n\n      it('calls execJs with allowing side effects when confirmSideEffect resolves to true', async () => {\n        const promise = Promise.withResolvers();\n        const stub = sinon.stub().returns(promise);\n        let count = 0;\n        async function* generateActionAndAnswer() {\n          if (count === 0) {\n            yield {\n              explanation: `ACTION\n              $0.style.backgroundColor = 'red'\n              STOP`,\n              metadata: {},\n              completed: true,\n            };\n          } else {\n            yield {\n              explanation: 'ANSWER: This is the answer',\n              metadata: {},\n              completed: true,\n            };\n          }\n\n          count++;\n        }\n        const execJs = sinon.mock().twice();\n        execJs.onCall(0).throws(new AiAssistance.SideEffectError('EvalError: Possible side-effect in debug-evaluate'));\n        execJs.onCall(1).resolves('value');\n        const agent = new StylingAgent({\n          aidaClient: mockAidaClient(generateActionAndAnswer),\n          createExtensionScope,\n          confirmSideEffectForTest: stub,\n          execJs,\n\n        });\n        promise.resolve(true);\n        await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n\n        assert.lengthOf(execJs.getCalls(), 2);\n        sinon.assert.match(execJs.getCall(1).args[1], sinon.match({throwOnSideEffect: false}));\n      });\n\n      it('returns side effect error when confirmSideEffect resolves to false', async () => {\n        const promise = Promise.withResolvers();\n        const stub = sinon.stub().returns(promise);\n        let count = 0;\n        async function* generateActionAndAnswer() {\n          if (count === 0) {\n            yield {\n              explanation: `ACTION\n              $0.style.backgroundColor = 'red'\n              STOP`,\n              metadata: {},\n              completed: true,\n            };\n          } else {\n            yield {\n              explanation: 'ANSWER: This is the answer',\n              metadata: {},\n              completed: true,\n            };\n          }\n\n          count++;\n        }\n        const execJs = sinon.mock().once();\n        execJs.onCall(0).throws(new AiAssistance.SideEffectError('EvalError: Possible side-effect in debug-evaluate'));\n        const agent = new StylingAgent({\n          aidaClient: mockAidaClient(generateActionAndAnswer),\n          createExtensionScope,\n          confirmSideEffectForTest: stub,\n          execJs,\n\n        });\n        promise.resolve(false);\n        const responses = await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n\n        const actionStep = responses.find(response => response.type === AiAssistance.ResponseType.ACTION)!;\n\n        assert.strictEqual(actionStep.output, 'Error: User denied code execution with side effects.');\n        assert.lengthOf(execJs.getCalls(), 1);\n      });\n\n      it('returns error when side effect is aborted', async () => {\n        const selected = new AiAssistance.NodeContext(element);\n        async function* generateAction() {\n          yield {\n            explanation: `ACTION\n            $0.style.backgroundColor = 'red'\n            STOP`,\n            metadata: {},\n            completed: true,\n          };\n        }\n        const execJs = sinon.mock().once().throws(\n            new AiAssistance.SideEffectError('EvalError: Possible side-effect in debug-evaluate'));\n        const sideEffectConfirmationPromise = Promise.withResolvers();\n        const agent = new StylingAgent({\n          aidaClient: mockAidaClient(generateAction),\n          createExtensionScope,\n          confirmSideEffectForTest: sinon.stub().returns(sideEffectConfirmationPromise),\n          execJs,\n        });\n\n        const responses: AiAssistance.ResponseData[] = [];\n        const controller = new AbortController();\n        for await (const result of agent.run('test', {selected, signal: controller.signal})) {\n          responses.push(result);\n          if (result.type === 'side-effect') {\n            // Initial code invocation resulting in a side-effect\n            // happened.\n            assert.isTrue(execJs.calledOnce);\n            // Emulate abort when waiting for the side-effect confirmation.\n            controller.abort();\n          }\n        }\n\n        const errorStep = responses.at(-1) as AiAssistance.ErrorResponse;\n        assert.exists(errorStep);\n        assert.strictEqual(errorStep.error, ErrorType.ABORT);\n        assert.isFalse(await sideEffectConfirmationPromise.promise);\n      });\n    });\n\n    describe('long `Observation` text handling', () => {\n      it('errors with too long input', async () => {\n        let count = 0;\n        async function* generateActionAndAnswer() {\n          if (count === 0) {\n            yield {\n              explanation: `ACTION\n              $0.style.backgroundColor = 'red'\n              STOP`,\n              metadata: {},\n              completed: true,\n            };\n          } else {\n            yield {\n              explanation: 'ANSWER: This is the answer',\n              metadata: {},\n              completed: true,\n            };\n          }\n          count++;\n        }\n        const execJs = sinon.mock().returns(new Array(10_000).fill('<div>...</div>').join());\n        const agent = new StylingAgent({\n          aidaClient: mockAidaClient(generateActionAndAnswer),\n          createExtensionScope,\n          execJs,\n\n        });\n\n        const result = await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n        const actionSteps = result.filter(step => {\n          return step.type === AiAssistance.ResponseType.ACTION;\n        });\n        assert(actionSteps.length === 1, 'Found non or multiple action steps');\n        const actionStep = actionSteps.at(0)!;\n        assert(actionStep.output.includes('Error: Output exceeded the maximum allowed length.'));\n      });\n    });\n\n    it('generates an answer immediately', async () => {\n      async function* generateAnswer() {\n        yield {\n          explanation: 'ANSWER: this is the answer',\n          metadata: {},\n          completed: true,\n        };\n      }\n\n      const execJs = sinon.spy();\n      const agent = new StylingAgent({\n        aidaClient: mockAidaClient(generateAnswer),\n        execJs,\n      });\n\n      const responses = await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n      assert.deepEqual(responses, [\n        {\n          type: AiAssistance.ResponseType.USER_QUERY,\n          query: 'test',\n        },\n        {\n          type: AiAssistance.ResponseType.CONTEXT,\n          title: 'Analyzing the prompt',\n          details: [\n            {\n              text: '* Its selector is `undefined`',\n              title: 'Data used',\n            },\n          ],\n        },\n        {\n          type: AiAssistance.ResponseType.QUERYING,\n          query: '# Inspected element\\n\\n* Its selector is `undefined`\\n\\n# User request\\n\\nQUERY: test',\n        },\n        {\n          type: AiAssistance.ResponseType.ANSWER,\n          text: 'this is the answer',\n          suggestions: undefined,\n          rpcId: undefined,\n        },\n      ]);\n      sinon.assert.notCalled(execJs);\n      assert.deepEqual(agent.chatHistoryForTesting, [\n        {\n          role: 1,\n          parts: [{text: '# Inspected element\\n\\n* Its selector is `undefined`\\n\\n# User request\\n\\nQUERY: test'}],\n        },\n        {\n          role: 2,\n          parts: [{text: 'ANSWER: this is the answer'}],\n        },\n      ]);\n    });\n\n    it('correctly handles historical_contexts in AIDA requests', async () => {\n      const requests: Host.AidaClient.AidaRequest[] = [];\n\n      let i = 0;\n      async function* generateAnswer(request: Host.AidaClient.AidaRequest) {\n        requests.push(request);\n        if (i !== 0) {\n          yield {\n            explanation: 'ANSWER: this is the actual answer',\n            metadata: {},\n            completed: true,\n          };\n          return;\n        }\n        yield {\n          explanation: `THOUGHT: I am thinking.\nTITLE: thinking\nACTION\nconst data = {\"test\": \"observation\"};\nSTOP`,\n          metadata: {},\n          completed: false,\n        };\n        i++;\n      }\n\n      const execJs = sinon.mock().once();\n      execJs.onCall(0).returns('test data');\n      const agent = new StylingAgent({\n        aidaClient: mockAidaClient(generateAnswer),\n        createExtensionScope,\n        execJs,\n      });\n\n      await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n\n      assert.lengthOf(requests, 2, 'Unexpected number of AIDA requests');\n      assert.isUndefined(requests[0].historical_contexts, 'Unexpected historical contexts in the initial request');\n      assert.exists(requests[0].current_message);\n      assert.lengthOf(requests[0].current_message.parts, 1);\n      assert.deepEqual(\n          requests[0].current_message.parts[0],\n          {text: '# Inspected element\\n\\n* Its selector is `undefined`\\n\\n# User request\\n\\nQUERY: test'},\n          'Unexpected input text in the initial request');\n      assert.strictEqual(requests[0].current_message.role, Host.AidaClient.Role.USER);\n      assert.deepEqual(\n          requests[1].historical_contexts,\n          [\n            {\n              role: 1,\n              parts: [{text: '# Inspected element\\n\\n* Its selector is `undefined`\\n\\n# User request\\n\\nQUERY: test'}],\n            },\n            {\n              role: 2,\n              parts: [{\n                text:\n                    'THOUGHT: I am thinking.\\nTITLE: thinking\\nACTION\\nconst data = {\\\"test\\\": \\\"observation\\\"};\\nSTOP',\n              }],\n            },\n          ],\n          'Unexpected historical contexts in the follow-up request');\n      assert.exists(requests[1].current_message);\n      assert.lengthOf(requests[1].current_message.parts, 1);\n      assert.deepEqual(\n          requests[1].current_message.parts[0], {text: 'OBSERVATION: test data'},\n          'Unexpected input in the follow-up request');\n    });\n\n    it('generates an rpcId for the answer', async () => {\n      async function* generateAnswer() {\n        yield {\n          explanation: 'ANSWER: this is the answer',\n          metadata: {\n            rpcGlobalId: 123,\n          },\n          completed: true,\n        };\n      }\n\n      const agent = new StylingAgent({\n        aidaClient: mockAidaClient(generateAnswer),\n        execJs: sinon.spy(),\n\n      });\n\n      const responses = await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n      assert.deepEqual(responses, [\n        {\n          type: AiAssistance.ResponseType.USER_QUERY,\n          query: 'test',\n        },\n        {\n          type: AiAssistance.ResponseType.CONTEXT,\n          title: 'Analyzing the prompt',\n          details: [\n            {\n              text: '* Its selector is `undefined`',\n              title: 'Data used',\n            },\n          ],\n        },\n        {\n          type: AiAssistance.ResponseType.QUERYING,\n          query: '# Inspected element\\n\\n* Its selector is `undefined`\\n\\n# User request\\n\\nQUERY: test',\n        },\n        {\n          type: AiAssistance.ResponseType.ANSWER,\n          text: 'this is the answer',\n          suggestions: undefined,\n          rpcId: 123,\n        },\n      ]);\n    });\n\n    it('throws an error based on the attribution metadata including RecitationAction.BLOCK', async () => {\n      async function* generateAnswer() {\n        yield {\n          explanation: 'ANSWER: this is the answer',\n          metadata: {\n            rpcGlobalId: 123,\n          },\n          completed: false,\n        };\n        throw new Host.AidaClient.AidaBlockError();\n      }\n\n      const agent = new StylingAgent({\n        aidaClient: mockAidaClient(generateAnswer),\n        execJs: sinon.spy(),\n      });\n\n      const responses = await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n      assert.deepEqual(responses, [\n        {\n          type: AiAssistance.ResponseType.USER_QUERY,\n          query: 'test',\n        },\n        {\n          type: AiAssistance.ResponseType.CONTEXT,\n          title: 'Analyzing the prompt',\n          details: [\n            {\n              text: '* Its selector is `undefined`',\n              title: 'Data used',\n            },\n          ],\n        },\n        {\n          type: AiAssistance.ResponseType.QUERYING,\n          query: '# Inspected element\\n\\n* Its selector is `undefined`\\n\\n# User request\\n\\nQUERY: test',\n        },\n        {\n          text: 'this is the answer',\n          type: AiAssistance.ResponseType.ANSWER,\n        },\n        {\n          type: AiAssistance.ResponseType.ERROR,\n          error: AiAssistance.ErrorType.BLOCK,\n        },\n      ]);\n    });\n\n    it('does not throw an error based on attribution metadata not including RecitationAction.BLOCK', async () => {\n      async function* generateAnswer() {\n        yield {\n          explanation: 'ANSWER: this is the answer',\n          metadata: {\n            rpcGlobalId: 123,\n            attributionMetadata: {\n              attributionAction: Host.AidaClient.RecitationAction.ACTION_UNSPECIFIED,\n              citations: [],\n            },\n          },\n          completed: true,\n        };\n      }\n\n      const agent = new StylingAgent({\n        aidaClient: mockAidaClient(generateAnswer),\n        execJs: sinon.spy(),\n\n      });\n\n      const responses = await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n      assert.deepEqual(responses, [\n        {\n          type: AiAssistance.ResponseType.USER_QUERY,\n          query: 'test',\n        },\n        {\n          type: AiAssistance.ResponseType.CONTEXT,\n          title: 'Analyzing the prompt',\n          details: [\n            {\n              text: '* Its selector is `undefined`',\n              title: 'Data used',\n            },\n          ],\n        },\n        {\n          type: AiAssistance.ResponseType.QUERYING,\n          query: '# Inspected element\\n\\n* Its selector is `undefined`\\n\\n# User request\\n\\nQUERY: test',\n        },\n        {\n          type: AiAssistance.ResponseType.ANSWER,\n          text: 'this is the answer',\n          suggestions: undefined,\n          rpcId: 123,\n        },\n      ]);\n    });\n\n    it('should execute an action only once even when the partial response contains an action', async () => {\n      const execJs = sinon.spy();\n      async function* generatePartialAndFullAction() {\n        yield {\n          explanation: `THOUGHT: I am thinking.\n\nACTION\nconsole.log('hel\n          `,\n          metadata: {},\n          completed: false,\n        };\n\n        sinon.assert.notCalled(execJs);\n        yield {\n          explanation: `THOUGHT: I am thinking.\n\nACTION\nconsole.log('hello');\nSTOP\n          `,\n          metadata: {},\n          completed: true,\n        };\n      }\n\n      const agent = new StylingAgent({\n        aidaClient: mockAidaClient(generatePartialAndFullAction),\n        createExtensionScope,\n        execJs,\n      });\n      await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n\n      sinon.assert.calledOnce(execJs);\n      assert.include(execJs.lastCall.args[0], 'console.log(\\'hello\\');');\n    });\n\n    it('generates a response if nothing is returned', async () => {\n      async function* generateNothing() {\n        yield {\n          explanation: '',\n          metadata: {},\n          completed: true,\n        };\n      }\n\n      const execJs = sinon.spy();\n      const agent = new StylingAgent({\n        aidaClient: mockAidaClient(generateNothing),\n        execJs,\n      });\n      const responses = await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n      assert.deepEqual(responses, [\n        {\n          type: AiAssistance.ResponseType.USER_QUERY,\n          query: 'test',\n        },\n        {\n          type: AiAssistance.ResponseType.CONTEXT,\n          title: 'Analyzing the prompt',\n          details: [\n            {\n              text: '* Its selector is `undefined`',\n              title: 'Data used',\n            },\n          ],\n        },\n        {\n          type: AiAssistance.ResponseType.QUERYING,\n          query: '# Inspected element\\n\\n* Its selector is `undefined`\\n\\n# User request\\n\\nQUERY: test',\n        },\n        {\n          type: AiAssistance.ResponseType.ERROR,\n          error: AiAssistance.ErrorType.UNKNOWN,\n        },\n      ]);\n      sinon.assert.notCalled(execJs);\n      assert.deepEqual(agent.chatHistoryForTesting, []);\n    });\n\n    it('generates an action response if action and answer both present', async () => {\n      let i = 0;\n      async function* generateNothing() {\n        if (i !== 0) {\n          yield {\n            explanation: 'ANSWER: this is the actual answer',\n            metadata: {},\n            completed: true,\n          };\n          return;\n        }\n        yield {\n          explanation: `THOUGHT: I am thinking.\n\nACTION\nconsole.log('hello');\nSTOP\n\nANSWER: this is the answer`,\n          metadata: {},\n          completed: false,\n        };\n        i++;\n      }\n\n      const execJs = sinon.mock().once();\n      execJs.onCall(0).returns('hello');\n      const agent = new StylingAgent({\n        aidaClient: mockAidaClient(generateNothing),\n        createExtensionScope,\n        execJs,\n\n      });\n      const responses = await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n      assert.deepEqual(responses, [\n        {\n          type: AiAssistance.ResponseType.USER_QUERY,\n          query: 'test',\n        },\n        {\n          type: AiAssistance.ResponseType.CONTEXT,\n          title: 'Analyzing the prompt',\n          details: [\n            {\n              text: '* Its selector is `undefined`',\n              title: 'Data used',\n            },\n          ],\n        },\n        {\n          type: AiAssistance.ResponseType.QUERYING,\n          query: '# Inspected element\\n\\n* Its selector is `undefined`\\n\\n# User request\\n\\nQUERY: test',\n        },\n        {\n          type: AiAssistance.ResponseType.THOUGHT,\n          thought: 'I am thinking.',\n          rpcId: undefined,\n        },\n        {\n          type: AiAssistance.ResponseType.ACTION,\n          code: 'console.log(\\'hello\\');',\n          output: 'hello',\n          canceled: false,\n        },\n        {\n          type: AiAssistance.ResponseType.QUERYING,\n          query: 'OBSERVATION: hello',\n        },\n        {\n          type: AiAssistance.ResponseType.ANSWER,\n          text: 'this is the actual answer',\n          suggestions: undefined,\n          rpcId: undefined,\n        },\n      ]);\n      sinon.assert.calledOnce(execJs);\n    });\n\n    it('generates history for multiple actions', async () => {\n      let count = 0;\n      async function* generateMultipleTimes() {\n        if (count === 3) {\n          yield {\n            explanation: 'ANSWER: this is the answer',\n            metadata: {},\n            completed: true,\n          };\n          return;\n        }\n        count++;\n        yield {\n          explanation: `THOUGHT: thought ${count}\\nTITLE:test\\nACTION\\nconsole.log('test')\\nSTOP\\n`,\n          metadata: {},\n          completed: false,\n        };\n      }\n\n      const execJs = sinon.spy(async () => 'undefined');\n      const agent = new StylingAgent({\n        aidaClient: mockAidaClient(generateMultipleTimes),\n        createExtensionScope,\n        execJs,\n\n      });\n\n      await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n\n      assert.deepEqual(agent.chatHistoryForTesting, [\n        {\n          role: 1,\n          parts: [{text: '# Inspected element\\n\\n* Its selector is `undefined`\\n\\n# User request\\n\\nQUERY: test'}],\n        },\n        {\n          role: 2,\n          parts: [{text: 'THOUGHT: thought 1\\nTITLE: test\\nACTION\\nconsole.log(\\'test\\')\\nSTOP'}],\n        },\n        {\n          role: 1,\n          parts: [{text: 'OBSERVATION: undefined'}],\n        },\n        {\n          role: 2,\n          parts: [{text: 'THOUGHT: thought 2\\nTITLE: test\\nACTION\\nconsole.log(\\'test\\')\\nSTOP'}],\n        },\n        {\n          role: 1,\n          parts: [{text: 'OBSERVATION: undefined'}],\n        },\n        {\n          role: 2,\n          parts: [{text: 'THOUGHT: thought 3\\nTITLE: test\\nACTION\\nconsole.log(\\'test\\')\\nSTOP'}],\n        },\n        {\n          role: 1,\n          parts: [{text: 'OBSERVATION: undefined'}],\n        },\n        {\n          role: 2,\n          parts: [{text: 'ANSWER: this is the answer'}],\n        },\n      ]);\n    });\n\n    it('stops when aborted', async () => {\n      let count = 0;\n      async function* generateAndAbort(_: unknown, options?: {signal: AbortSignal}) {\n        if (options?.signal.aborted) {\n          throw new Host.AidaClient.AidaAbortError();\n        }\n        if (count === 3) {\n          yield {\n            explanation: 'ANSWER: this is the answer',\n            metadata: {},\n            completed: true,\n          };\n          return;\n        }\n        count++;\n        yield {\n          explanation: `THOUGHT: thought ${count}\\nACTION\\nconsole.log('test')\\nSTOP\\n`,\n          metadata: {},\n          completed: false,\n        };\n      }\n\n      const execJs = sinon.spy();\n      const agent = new StylingAgent({\n        aidaClient: mockAidaClient(generateAndAbort),\n        createExtensionScope,\n        execJs,\n      });\n\n      const controller = new AbortController();\n      controller.abort();\n      await Array.fromAsync(\n          agent.run('test', {selected: new AiAssistance.NodeContext(element), signal: controller.signal}));\n\n      assert.deepEqual(agent.chatHistoryForTesting, []);\n    });\n  });\n\n  describe('history', () => {\n    let element: sinon.SinonStubbedInstance<SDK.DOMModel.DOMNode>;\n    beforeEach(() => {\n      mockHostConfig();\n      element = sinon.createStubInstance(SDK.DOMModel.DOMNode);\n    });\n\n    it('stores history via AiHistoryStorage', async () => {\n      let count = 0;\n      async function* generateMultipleTimes() {\n        if (count === 1) {\n          yield {\n            explanation: 'ANSWER: this is the answer',\n            metadata: {},\n            completed: true,\n          };\n          return;\n        }\n        count++;\n        yield {\n          explanation: `THOUGHT: thought ${count}\\nTITLE:test\\nACTION\\nconsole.log('test')\\nSTOP\\n`,\n          metadata: {},\n          completed: false,\n        };\n      }\n      const historyStub = sinon.stub(AiAssistance.AiHistoryStorage.instance(), 'upsertHistoryEntry');\n      const execJs = sinon.spy(async () => 'undefined');\n      const agent = new StylingAgent({\n        aidaClient: mockAidaClient(generateMultipleTimes),\n        createExtensionScope,\n        execJs,\n      });\n\n      await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n\n      assert.deepEqual(historyStub.lastCall.args[0].history, [\n        {\n          type: AiAssistance.ResponseType.USER_QUERY,\n          query: 'test',\n        },\n        {\n          type: AiAssistance.ResponseType.CONTEXT,\n          title: 'Analyzing the prompt',\n          details: [{\n            text: '* Its selector is `undefined`',\n            title: 'Data used',\n          }],\n        },\n        {\n          type: AiAssistance.ResponseType.QUERYING,\n          query: '# Inspected element\\n\\n* Its selector is `undefined`\\n\\n# User request\\n\\nQUERY: test',\n        },\n        {\n          type: AiAssistance.ResponseType.TITLE,\n          title: 'test',\n          rpcId: undefined,\n        },\n        {\n          type: AiAssistance.ResponseType.THOUGHT,\n          thought: 'thought 1',\n          rpcId: undefined,\n        },\n        {\n          type: AiAssistance.ResponseType.ACTION,\n          code: 'console.log(\\'test\\')',\n          output: 'undefined',\n          canceled: false,\n        },\n        {\n          type: AiAssistance.ResponseType.QUERYING,\n          query: 'OBSERVATION: undefined',\n        },\n        {\n          type: AiAssistance.ResponseType.ANSWER,\n          text: 'this is the answer',\n          suggestions: undefined,\n          rpcId: undefined,\n        },\n      ]);\n    });\n  });\n\n  describe('HostConfigFreestylerExecutionMode', () => {\n    let element: sinon.SinonStubbedInstance<SDK.DOMModel.DOMNode>;\n    beforeEach(() => {\n      element = sinon.createStubInstance(SDK.DOMModel.DOMNode);\n    });\n\n    function getMockClient() {\n      let count = 0;\n      async function* generateActionAndAnswer() {\n        if (count === 0) {\n          yield {\n            explanation: `ACTION\n            $0.style.backgroundColor = 'red'\n            STOP`,\n            metadata: {},\n            completed: true,\n          };\n        } else {\n          yield {\n            explanation: 'ANSWER: This is the answer',\n            metadata: {},\n            completed: true,\n          };\n        }\n\n        count++;\n      }\n      return mockAidaClient(generateActionAndAnswer);\n    }\n\n    describe('NO_SCRIPTS', () => {\n      beforeEach(() => {\n        mockHostConfig(undefined, undefined, undefined, Root.Runtime.HostConfigFreestylerExecutionMode.NO_SCRIPTS);\n      });\n\n      it('returns an error if scripts are disabled', async () => {\n        const execJs = sinon.mock();\n        const agent = new StylingAgent({\n          aidaClient: getMockClient(),\n          createExtensionScope,\n          execJs,\n        });\n        const responses = await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n        const actionStep = responses.find(response => response.type === AiAssistance.ResponseType.ACTION)!;\n        assert.strictEqual(actionStep.output, 'Error: JavaScript execution is currently disabled.');\n        assert.lengthOf(execJs.getCalls(), 0);\n      });\n    });\n\n    describe('SIDE_EFFECT_FREE_SCRIPTS_ONLY', () => {\n      beforeEach(() => {\n        mockHostConfig(\n            undefined, undefined, undefined,\n            Root.Runtime.HostConfigFreestylerExecutionMode.SIDE_EFFECT_FREE_SCRIPTS_ONLY);\n      });\n\n      it('returns an error if a script causes a side effect', async () => {\n        const execJs =\n            sinon.mock().throws(new AiAssistance.SideEffectError('EvalError: Possible side-effect in debug-evaluate'));\n        const agent = new StylingAgent({\n          aidaClient: getMockClient(),\n          createExtensionScope,\n          execJs,\n        });\n        const responses = await Array.fromAsync(agent.run('test', {selected: new AiAssistance.NodeContext(element)}));\n        const actionStep = responses.find(response => response.type === AiAssistance.ResponseType.ACTION)!;\n        assert.strictEqual(\n            actionStep.output, 'Error: JavaScript execution that modifies the page is currently disabled.');\n        assert.lengthOf(execJs.getCalls(), 1);\n      });\n    });\n  });\n});\n"]}