{"version":3,"file":"AiAssistancePanel.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/ai_assistance/AiAssistancePanel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {\n  createAiAssistancePanel,\n  createNetworkRequest,\n  detachPanels,\n  mockAidaClient\n} from '../../testing/AiAssistanceHelpers.js';\nimport {findMenuItemWithLabel, getMenu} from '../../testing/ContextMenuHelpers.js';\nimport {dispatchClickEvent} from '../../testing/DOMHelpers.js';\nimport {createTarget, registerNoopActions, updateHostConfig} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {createNetworkPanelForMockConnection} from '../../testing/NetworkHelpers.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Elements from '../elements/elements.js';\nimport * as Network from '../network/network.js';\nimport * as Sources from '../sources/sources.js';\nimport * as Timeline from '../timeline/timeline.js';\nimport * as TimelineUtils from '../timeline/utils/utils.js';\n\nimport * as AiAssistance from './ai_assistance.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\ndescribeWithMockConnection('AI Assistance Panel', () => {\n  beforeEach(() => {\n    registerNoopActions(['elements.toggle-element-search']);\n    UI.Context.Context.instance().setFlavor(Elements.ElementsPanel.ElementsPanel, null);\n    UI.Context.Context.instance().setFlavor(Network.NetworkPanel.NetworkPanel, null);\n    UI.Context.Context.instance().setFlavor(Sources.SourcesPanel.SourcesPanel, null);\n    UI.Context.Context.instance().setFlavor(Timeline.TimelinePanel.TimelinePanel, null);\n    UI.Context.Context.instance().setFlavor(SDK.NetworkRequest.NetworkRequest, null);\n    UI.Context.Context.instance().setFlavor(SDK.DOMModel.DOMNode, null);\n    UI.Context.Context.instance().setFlavor(TimelineUtils.AICallTree.AICallTree, null);\n    UI.Context.Context.instance().setFlavor(Workspace.UISourceCode.UISourceCode, null);\n  });\n\n  afterEach(() => {\n    detachPanels();\n  });\n\n  describe('consent view', () => {\n    it('should render consent view when the consent is not given before', async () => {\n      const {view} = await createAiAssistancePanel();\n      sinon.assert.calledWith(view.lastCall, sinon.match({state: AiAssistance.State.CONSENT_VIEW}));\n    });\n\n    it('should switch from consent view to chat view when enabling setting', async () => {\n      const {view} = await createAiAssistancePanel();\n      sinon.assert.calledWith(view.lastCall, sinon.match({state: AiAssistance.State.CONSENT_VIEW}));\n      Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n      sinon.assert.calledWith(view.lastCall, sinon.match({state: AiAssistance.State.CHAT_VIEW}));\n    });\n\n    it('should render chat view when the consent is given before', async () => {\n      Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n      const {view} = await createAiAssistancePanel();\n      sinon.assert.calledWith(view.lastCall, sinon.match({state: AiAssistance.State.CHAT_VIEW}));\n    });\n\n    it('should render the consent view when the setting is disabled', async () => {\n      Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n      Common.Settings.moduleSetting('ai-assistance-enabled').setDisabled(true);\n      const {view} = await createAiAssistancePanel();\n      sinon.assert.calledWith(view.lastCall, sinon.match({state: AiAssistance.State.CONSENT_VIEW}));\n      Common.Settings.moduleSetting('ai-assistance-enabled').setDisabled(false);\n    });\n\n    it('should render the consent view when blocked by age', async () => {\n      Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n      updateHostConfig({\n        aidaAvailability: {\n          blockedByAge: true,\n        },\n        devToolsFreestyler: {\n          enabled: true,\n        },\n      });\n\n      const {view} = await createAiAssistancePanel();\n      sinon.assert.calledWith(view.lastCall, sinon.match({state: AiAssistance.State.CONSENT_VIEW}));\n    });\n\n    it('updates when the user logs in', async () => {\n      Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n\n      const {view} =\n          await createAiAssistancePanel({aidaAvailability: Host.AidaClient.AidaAccessPreconditions.NO_ACCOUNT_EMAIL});\n      sinon.assert.calledWith(view.lastCall, sinon.match({\n        state: AiAssistance.State.CHAT_VIEW,\n        aidaAvailability: Host.AidaClient.AidaAccessPreconditions.NO_ACCOUNT_EMAIL,\n      }));\n\n      sinon.stub(Host.AidaClient.AidaClient, 'checkAccessPreconditions')\n          .returns(Promise.resolve(Host.AidaClient.AidaAccessPreconditions.AVAILABLE));\n      Host.AidaClient.HostConfigTracker.instance().dispatchEventToListeners(\n          Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED);\n      // TODO: how do we wait for setting update to propagate?\n      await new Promise(resolve => setTimeout(resolve, 0));\n      sinon.assert.calledWith(view.lastCall, sinon.match({\n        state: AiAssistance.State.CHAT_VIEW,\n        aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n      }));\n    });\n  });\n\n  describe('rating', () => {\n    it('renders a button linking to settings', async () => {\n      const stub = sinon.stub(UI.ViewManager.ViewManager.instance(), 'showView');\n      const {panel} = await createAiAssistancePanel();\n      const button = panel.contentElement.querySelector('devtools-button[aria-label=\\'Settings\\']');\n      assert.instanceOf(button, HTMLElement);\n      button.click();\n      assert.isTrue(stub.calledWith('chrome-ai'));\n    });\n\n    it('should allow logging if configured', async () => {\n      updateHostConfig({\n        aidaAvailability: {\n          disallowLogging: false,\n        },\n      });\n      const {view, aidaClient} = await createAiAssistancePanel();\n      await view.lastCall.args[0].onFeedbackSubmit(0, Host.AidaClient.Rating.POSITIVE);\n      sinon.assert.match((aidaClient.registerClientEvent as sinon.SinonStub).firstCall.firstArg, sinon.match({\n        disable_user_content_logging: false,\n      }));\n    });\n\n    it('should send POSITIVE rating to aida client when the user clicks on positive rating', async () => {\n      updateHostConfig({\n        aidaAvailability: {\n          enabled: true,\n          disallowLogging: true,\n        }\n      });\n      const RPC_ID = 999;\n\n      const {view, aidaClient} = await createAiAssistancePanel();\n      await view.lastCall.args[0].onFeedbackSubmit(RPC_ID, Host.AidaClient.Rating.POSITIVE);\n\n      sinon.assert.match((aidaClient.registerClientEvent as sinon.SinonStub).firstCall.firstArg, sinon.match({\n        corresponding_aida_rpc_global_id: RPC_ID,\n        do_conversation_client_event: {\n          user_feedback: {\n            sentiment: 'POSITIVE',\n          },\n        },\n        disable_user_content_logging: true,\n      }));\n    });\n\n    it('should send NEGATIVE rating to aida client when the user clicks on negative rating', async () => {\n      updateHostConfig({\n        aidaAvailability: {\n          enabled: true,\n          disallowLogging: true,\n        }\n      });\n      const RPC_ID = 0;\n      const {view, aidaClient} = await createAiAssistancePanel();\n      await view.lastCall.args[0].onFeedbackSubmit(RPC_ID, Host.AidaClient.Rating.NEGATIVE);\n\n      sinon.assert.match((aidaClient.registerClientEvent as sinon.SinonStub).firstCall.firstArg, sinon.match({\n        corresponding_aida_rpc_global_id: RPC_ID,\n        do_conversation_client_event: {\n          user_feedback: {\n            sentiment: 'NEGATIVE',\n          },\n        },\n        disable_user_content_logging: true,\n      }));\n    });\n\n    it('should send feedback text with data', async () => {\n      updateHostConfig({\n        aidaAvailability: {\n          enabled: true,\n          disallowLogging: true,\n        }\n      });\n\n      const feedback = 'This helped me a ton.';\n      const RPC_ID = 0;\n      const {view, aidaClient} = await createAiAssistancePanel();\n      await view.lastCall.args[0].onFeedbackSubmit(RPC_ID, Host.AidaClient.Rating.POSITIVE, feedback);\n\n      sinon.assert.match((aidaClient.registerClientEvent as sinon.SinonStub).firstCall.firstArg, sinon.match({\n        corresponding_aida_rpc_global_id: RPC_ID,\n        do_conversation_client_event: {\n          user_feedback: {\n            sentiment: 'POSITIVE',\n            user_input: {\n              comment: feedback,\n            },\n          },\n        },\n        disable_user_content_logging: true,\n      }));\n    });\n  });\n\n  describe('contexts', () => {\n    const tests = [\n      {\n        flavor: SDK.DOMModel.DOMNode,\n        createContext: () => {\n          const node = sinon.createStubInstance(SDK.DOMModel.DOMNode, {\n            nodeType: Node.ELEMENT_NODE,\n          });\n          return new AiAssistance.NodeContext(node);\n        },\n        action: 'freestyler.elements-floating-button',\n      },\n      {\n        flavor: SDK.NetworkRequest.NetworkRequest,\n        createContext: () => {\n          return new AiAssistance.RequestContext(sinon.createStubInstance(SDK.NetworkRequest.NetworkRequest));\n        },\n        action: 'drjones.network-floating-button'\n      },\n      {\n        flavor: TimelineUtils.AICallTree.AICallTree,\n        createContext: () => {\n          return new AiAssistance.CallTreeContext(sinon.createStubInstance(TimelineUtils.AICallTree.AICallTree));\n        },\n        action: 'drjones.performance-panel-context'\n      },\n      {\n        flavor: TimelineUtils.InsightAIContext.ActiveInsight,\n        createContext: () => {\n          return new AiAssistance.InsightContext(\n              sinon.createStubInstance(TimelineUtils.InsightAIContext.ActiveInsight));\n        },\n        action: 'drjones.performance-insight-context'\n      },\n      {\n        flavor: Workspace.UISourceCode.UISourceCode,\n        createContext: () => {\n          return new AiAssistance.FileContext(sinon.createStubInstance(Workspace.UISourceCode.UISourceCode));\n        },\n        action: 'drjones.sources-panel-context',\n      }\n    ];\n\n    for (const test of tests) {\n      it(`should use the selected ${test.flavor.name} context after the widget is shown`, async () => {\n        const {view, panel} = await createAiAssistancePanel();\n        const context = test.createContext();\n        const contextItem = context.getItem();\n        if (!contextItem) {\n          throw new Error('Context is not available');\n        }\n        UI.Context.Context.instance().setFlavor(test.flavor, contextItem);\n        panel.handleAction(test.action);\n        sinon.assert.calledWith(view.lastCall, sinon.match({\n          selectedContext: context,\n        }));\n      });\n\n      it(`should update the selected ${test.flavor.name} context whenever flavor changes`, async () => {\n        const {view, panel} = await createAiAssistancePanel();\n        panel.handleAction(test.action);\n        sinon.assert.calledWith(view.lastCall, sinon.match({\n          selectedContext: null,\n        }));\n        const context = test.createContext();\n        const contextItem = context.getItem();\n        if (!contextItem) {\n          throw new Error('Context is not available');\n        }\n        UI.Context.Context.instance().setFlavor(test.flavor, contextItem);\n        sinon.assert.calledWith(view.lastCall, sinon.match({\n          selectedContext: context,\n        }));\n      });\n\n      it(`should ignore ${test.flavor.name} flavor change after the panel was hidden`, async () => {\n        const {view, panel} = await createAiAssistancePanel();\n        sinon.assert.calledWith(view.lastCall, sinon.match({\n          selectedContext: null,\n        }));\n        const callCount = view.callCount;\n        panel.hideWidget();\n        const context = test.createContext();\n        const contextItem = context.getItem();\n        if (!contextItem) {\n          throw new Error('Context is not available');\n        }\n        UI.Context.Context.instance().setFlavor(test.flavor, contextItem);\n        assert.strictEqual(view.callCount, callCount);\n      });\n    }\n\n    it('should set selected context to null when the change DOMNode flavor is not an ELEMENT_NODE', async () => {\n      const {view, panel} = await createAiAssistancePanel();\n      panel.handleAction('freestyler.elements-floating-button');\n      sinon.assert.calledWith(view.lastCall, sinon.match({\n        selectedContext: null,\n      }));\n\n      const node = sinon.createStubInstance(SDK.DOMModel.DOMNode, {\n        nodeType: Node.COMMENT_NODE,\n      });\n      UI.Context.Context.instance().setFlavor(SDK.DOMModel.DOMNode, node);\n\n      sinon.assert.calledWith(view.lastCall, sinon.match({\n        selectedContext: null,\n      }));\n    });\n  });\n\n  describe('toggle search element action', () => {\n    let toggleSearchElementAction: UI.ActionRegistration.Action;\n    beforeEach(() => {\n      toggleSearchElementAction =\n          UI.ActionRegistry.ActionRegistry.instance().getAction('elements.toggle-element-search');\n      toggleSearchElementAction.setToggled(false);\n    });\n\n    it('should set inspectElementToggled when the widget is shown', async () => {\n      const {view} = await createAiAssistancePanel();\n      toggleSearchElementAction.setToggled(true);\n      sinon.assert.calledWith(view.lastCall, sinon.match({inspectElementToggled: true}));\n    });\n\n    it('should update inspectElementToggled when the action is toggled', async () => {\n      const {view} = await createAiAssistancePanel();\n      toggleSearchElementAction.setToggled(false);\n\n      sinon.assert.calledWith(view.lastCall, sinon.match({inspectElementToggled: false}));\n\n      toggleSearchElementAction.setToggled(true);\n      sinon.assert.calledWith(view.lastCall, sinon.match({inspectElementToggled: true}));\n    });\n\n    it('should not update toggleSearchElementAction when the widget is not shown', async () => {\n      toggleSearchElementAction.setToggled(false);\n\n      const {view, panel} = await createAiAssistancePanel();\n      const callCount = view.callCount;\n      panel.hideWidget();\n\n      toggleSearchElementAction.setToggled(true);\n\n      const uiSourceCode = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n      UI.Context.Context.instance().setFlavor(Workspace.UISourceCode.UISourceCode, uiSourceCode);\n\n      assert.strictEqual(view.callCount, callCount);\n    });\n  });\n\n  describe('history interactions', () => {\n    it('should have empty messages after new chat', async () => {\n      const {view, panel} = await createAiAssistancePanel({aidaClient: mockAidaClient([[{explanation: 'test'}]])});\n\n      panel.handleAction('freestyler.elements-floating-button');\n      await view.lastCall.args[0].onTextSubmit('test');\n\n      assert.deepEqual(view.lastCall.args[0].messages, [\n        {\n          entity: AiAssistance.ChatMessageEntity.USER,\n          text: 'test',\n          imageInput: undefined,\n        },\n        {\n          answer: 'test',\n          entity: AiAssistance.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps: [],\n        },\n      ]);\n      const button = panel.contentElement.querySelector('devtools-button[aria-label=\\'New chat\\']');\n      assert.instanceOf(button, HTMLElement);\n      dispatchClickEvent(button);\n      assert.deepEqual(view.lastCall.args[0].messages, []);\n    });\n\n    it('should select default agent after new chat', async () => {\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n        },\n      });\n      const {view, panel} = await createAiAssistancePanel({aidaClient: mockAidaClient([[{explanation: 'test'}]])});\n\n      panel.handleAction('freestyler.elements-floating-button');\n      await view.lastCall.args[0].onTextSubmit('test');\n\n      UI.Context.Context.instance().setFlavor(\n          Elements.ElementsPanel.ElementsPanel, sinon.createStubInstance(Elements.ElementsPanel.ElementsPanel));\n\n      assert.deepEqual(view.lastCall.args[0].messages, [\n        {\n          entity: AiAssistance.ChatMessageEntity.USER,\n          text: 'test',\n          imageInput: undefined,\n        },\n        {\n          answer: 'test',\n          entity: AiAssistance.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps: [],\n        },\n      ]);\n      const button = panel.contentElement.querySelector('devtools-button[aria-label=\\'New chat\\']');\n      assert.instanceOf(button, HTMLElement);\n      dispatchClickEvent(button);\n      assert.deepEqual(view.lastCall.args[0].messages, []);\n      assert.deepEqual(view.lastCall.args[0].agentType, AiAssistance.AgentType.STYLING);\n    });\n\n    it('should select the performance insights agent if it is enabled', async () => {\n      updateHostConfig({\n        devToolsAiAssistancePerformanceAgent: {\n          enabled: true,\n          insightsEnabled: true,\n        },\n      });\n      const {view, panel} = await createAiAssistancePanel({aidaClient: mockAidaClient([[{explanation: 'test'}]])});\n\n      panel.handleAction('freestyler.elements-floating-button');\n      await view.lastCall.args[0].onTextSubmit('test');\n      UI.Context.Context.instance().setFlavor(\n          Timeline.TimelinePanel.TimelinePanel, sinon.createStubInstance(Timeline.TimelinePanel.TimelinePanel));\n\n      assert.deepEqual(view.lastCall.args[0].messages, [\n        {\n          entity: AiAssistance.ChatMessageEntity.USER,\n          text: 'test',\n          imageInput: undefined,\n        },\n        {\n          answer: 'test',\n          entity: AiAssistance.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps: [],\n        },\n      ]);\n      const button = panel.contentElement.querySelector('devtools-button[aria-label=\\'New chat\\']');\n      assert.instanceOf(button, HTMLElement);\n      dispatchClickEvent(button);\n      assert.deepEqual(view.lastCall.args[0].messages, []);\n      assert.deepEqual(view.lastCall.args[0].agentType, AiAssistance.AgentType.PERFORMANCE_INSIGHT);\n    });\n\n    it('should select the Dr Jones performance agent if insights are not enabled', async () => {\n      updateHostConfig({\n        devToolsAiAssistancePerformanceAgent: {\n          enabled: true,\n          insightsEnabled: false,\n        },\n      });\n      const {view, panel} = await createAiAssistancePanel({aidaClient: mockAidaClient([[{explanation: 'test'}]])});\n\n      panel.handleAction('freestyler.elements-floating-button');\n      await view.lastCall.args[0].onTextSubmit('test');\n      UI.Context.Context.instance().setFlavor(\n          Timeline.TimelinePanel.TimelinePanel, sinon.createStubInstance(Timeline.TimelinePanel.TimelinePanel));\n\n      assert.deepEqual(view.lastCall.args[0].messages, [\n        {\n          entity: AiAssistance.ChatMessageEntity.USER,\n          text: 'test',\n          imageInput: undefined,\n        },\n        {\n          answer: 'test',\n          entity: AiAssistance.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps: [],\n        },\n      ]);\n      const button = panel.contentElement.querySelector('devtools-button[aria-label=\\'New chat\\']');\n      assert.instanceOf(button, HTMLElement);\n      dispatchClickEvent(button);\n      assert.deepEqual(view.lastCall.args[0].messages, []);\n      assert.deepEqual(view.lastCall.args[0].agentType, AiAssistance.AgentType.PERFORMANCE);\n    });\n\n    it('should switch agents and restore history', async () => {\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n          multimodal: true,\n        },\n      });\n      const {view, panel} = await createAiAssistancePanel(\n          {aidaClient: mockAidaClient([[{explanation: 'test'}], [{explanation: 'test2'}]])});\n      panel.handleAction('freestyler.elements-floating-button');\n      const imageInput = {inlineData: {data: 'imageinputbytes', mimeType: 'image/jpeg'}};\n      await view.lastCall.args[0].onTextSubmit('User question to Freestyler?', imageInput);\n      assert.deepEqual(view.lastCall.args[0].messages, [\n        {\n          entity: AiAssistance.ChatMessageEntity.USER,\n          text: 'User question to Freestyler?',\n          imageInput,\n        },\n        {\n          answer: 'test',\n          entity: AiAssistance.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps: [],\n        },\n      ]);\n\n      panel.handleAction('drjones.network-floating-button');\n      await view.lastCall.args[0].onTextSubmit('User question to DrJones?');\n      assert.deepEqual(view.lastCall.args[0].messages, [\n        {\n          entity: AiAssistance.ChatMessageEntity.USER,\n          text: 'User question to DrJones?',\n          imageInput: undefined,\n        },\n        {\n          answer: 'test2',\n          entity: AiAssistance.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps: [],\n        },\n      ]);\n\n      // TODO: this should not look into DOM.\n      const button = panel.contentElement.querySelector('devtools-button[aria-label=\\'History\\']');\n      assert.instanceOf(button, HTMLElement);\n      const contextMenu = getMenu(() => {\n        dispatchClickEvent(button);\n      });\n      const freestylerEntry = findMenuItemWithLabel(contextMenu.defaultSection(), 'User question to Freestyler?')!;\n      assert.isDefined(freestylerEntry);\n      contextMenu.invokeHandler(freestylerEntry.id());\n      await new Promise(resolve => setTimeout(resolve, 0));\n\n      // Currently history should not store image input\n      assert.deepEqual(view.lastCall.args[0].messages, [\n        {\n          entity: AiAssistance.ChatMessageEntity.USER,\n          text: 'User question to Freestyler?',\n          imageInput: undefined,\n        },\n        {\n          answer: 'test',\n          entity: AiAssistance.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps: [],\n        },\n      ]);\n    });\n\n    it('should not save partial responses to conversation history', async () => {\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n        },\n      });\n      const addHistoryItemStub = sinon.stub(AiAssistance.Conversation.prototype, 'addHistoryItem');\n      UI.Context.Context.instance().setFlavor(\n          Elements.ElementsPanel.ElementsPanel, sinon.createStubInstance(Elements.ElementsPanel.ElementsPanel));\n      const {view} = await createAiAssistancePanel({\n        aidaClient: mockAidaClient([[\n          {explanation: 'ANSWER: partially started'}, {explanation: 'ANSWER: partially started and now it\\'s finished'}\n        ]])\n      });\n      // Trigger running the conversation (observe that there are two answers: one partial, one complete)\n      await view.lastCall.args[0].onTextSubmit('User question to Freestyler?');\n\n      sinon.assert.calledWith(\n          addHistoryItemStub, sinon.match({type: 'answer', text: 'partially started and now it\\'s finished'}));\n      sinon.assert.neverCalledWith(addHistoryItemStub, sinon.match({type: 'answer', text: 'partially started'}));\n    });\n  });\n\n  it('should have empty state after clear chat', async () => {\n    const {view, panel} = await createAiAssistancePanel({aidaClient: mockAidaClient([[{explanation: 'test'}]])});\n    panel.handleAction('freestyler.elements-floating-button');\n    await view.lastCall.args[0].onTextSubmit('test');\n\n    assert.deepEqual(view.lastCall.args[0].messages, [\n      {\n        entity: AiAssistance.ChatMessageEntity.USER,\n        text: 'test',\n        imageInput: undefined,\n      },\n      {\n        answer: 'test',\n        entity: AiAssistance.ChatMessageEntity.MODEL,\n        rpcId: undefined,\n        suggestions: undefined,\n        steps: [],\n      },\n    ]);\n    const button = panel.contentElement.querySelector('devtools-button[aria-label=\\'Delete local chat\\']');\n    assert.instanceOf(button, HTMLElement);\n    dispatchClickEvent(button);\n    assert.deepEqual(view.lastCall.args[0].messages, []);\n    assert.isUndefined(view.lastCall.args[0].agentType);\n  });\n\n  it('should select default agent based on open panel after clearing the chat', async () => {\n    updateHostConfig({\n      devToolsFreestyler: {\n        enabled: true,\n      },\n    });\n    const {view, panel} = await createAiAssistancePanel({aidaClient: mockAidaClient([[{explanation: 'test'}]])});\n    panel.handleAction('freestyler.elements-floating-button');\n    await view.lastCall.args[0].onTextSubmit('test');\n\n    UI.Context.Context.instance().setFlavor(\n        Elements.ElementsPanel.ElementsPanel, sinon.createStubInstance(Elements.ElementsPanel.ElementsPanel));\n    assert.deepEqual(view.lastCall.args[0].messages, [\n      {\n        entity: AiAssistance.ChatMessageEntity.USER,\n        text: 'test',\n        imageInput: undefined,\n      },\n      {\n        answer: 'test',\n        entity: AiAssistance.ChatMessageEntity.MODEL,\n        rpcId: undefined,\n        suggestions: undefined,\n        steps: [],\n      },\n    ]);\n    const button = panel.contentElement.querySelector('devtools-button[aria-label=\\'Delete local chat\\']');\n    assert.instanceOf(button, HTMLElement);\n    dispatchClickEvent(button);\n    assert.deepEqual(view.lastCall.args[0].messages, []);\n    assert.deepEqual(view.lastCall.args[0].agentType, AiAssistance.AgentType.STYLING);\n  });\n\n  it('should have empty state after clear chat history', async () => {\n    const {view, panel} = await createAiAssistancePanel(\n        {aidaClient: mockAidaClient([[{explanation: 'test'}], [{explanation: 'test2'}]])});\n    panel.handleAction('freestyler.elements-floating-button');\n    await view.lastCall.args[0].onTextSubmit('User question to Freestyler?');\n    assert.deepEqual(view.lastCall.args[0].messages, [\n      {\n        entity: AiAssistance.ChatMessageEntity.USER,\n        text: 'User question to Freestyler?',\n        imageInput: undefined,\n      },\n      {\n        answer: 'test',\n        entity: AiAssistance.ChatMessageEntity.MODEL,\n        rpcId: undefined,\n        suggestions: undefined,\n        steps: [],\n      },\n    ]);\n\n    panel.handleAction('drjones.network-floating-button');\n    await view.lastCall.args[0].onTextSubmit('User question to DrJones?');\n    assert.deepEqual(view.lastCall.args[0].messages, [\n      {\n        entity: AiAssistance.ChatMessageEntity.USER,\n        text: 'User question to DrJones?',\n        imageInput: undefined,\n      },\n      {\n        answer: 'test2',\n        entity: AiAssistance.ChatMessageEntity.MODEL,\n        rpcId: undefined,\n        suggestions: undefined,\n        steps: [],\n      },\n    ]);\n\n    // TODO: remove poking into DOM.\n    let button = panel.contentElement.querySelector('devtools-button[aria-label=\\'History\\']');\n    assert.instanceOf(button, HTMLElement);\n    let contextMenu = getMenu(() => {\n      dispatchClickEvent(button!);\n    });\n    const clearAll = findMenuItemWithLabel(contextMenu.footerSection(), 'Clear local chats')!;\n    assert.isDefined(clearAll);\n    contextMenu.invokeHandler(clearAll.id());\n    assert.deepEqual(view.lastCall.args[0].messages, []);\n    assert.isUndefined(view.lastCall.args[0].agentType);\n\n    contextMenu.discard();\n\n    button = panel.contentElement.querySelector('devtools-button[aria-label=\\'History\\']');\n    assert.instanceOf(button, HTMLElement);\n    contextMenu = getMenu(() => {\n      dispatchClickEvent(button);\n    });\n    const menuItem = findMenuItemWithLabel(contextMenu.defaultSection(), 'No past conversations');\n    assert(menuItem);\n  });\n\n  describe('cross-origin', () => {\n    beforeEach(async () => {\n      createTarget();\n      await createNetworkPanelForMockConnection();\n    });\n\n    afterEach(async () => {\n      Network.NetworkPanel.NetworkPanel.instance().detach();\n    });\n\n    it('blocks input on cross origin requests', async () => {\n      const networkRequest = createNetworkRequest({\n        url: urlString`https://a.test`,\n      });\n      UI.Context.Context.instance().setFlavor(SDK.NetworkRequest.NetworkRequest, networkRequest);\n\n      const {view, panel} = await createAiAssistancePanel({\n        aidaClient: mockAidaClient([\n          [{explanation: 'test'}],\n        ])\n      });\n      panel.handleAction('drjones.network-floating-button');\n      sinon.assert.calledWith(view, sinon.match({\n        selectedContext: new AiAssistance.RequestContext(networkRequest),\n        blockedByCrossOrigin: false,\n      }));\n\n      // Send a query for https://a.test.\n      panel.handleAction('drjones.network-floating-button');\n      await view.lastCall.args[0].onTextSubmit('test');\n\n      // Change context to https://b.test.\n      const networkRequest2 = createNetworkRequest({\n        url: urlString`https://b.test`,\n      });\n      UI.Context.Context.instance().setFlavor(SDK.NetworkRequest.NetworkRequest, networkRequest2);\n      panel.handleAction('drjones.network-floating-button');\n      await new Promise(resolve => setTimeout(resolve, 0));\n      sinon.assert.calledWith(view.lastCall, sinon.match({\n        selectedContext: new AiAssistance.RequestContext(networkRequest2),\n        blockedByCrossOrigin: true,\n      }));\n    });\n\n    it('should be able to continue same-origin requests', async () => {\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n        },\n      });\n\n      const {view, panel} = await createAiAssistancePanel({\n        aidaClient: mockAidaClient([[{explanation: 'test'}], [{explanation: 'test2'}]]),\n      });\n      UI.Context.Context.instance().setFlavor(\n          Elements.ElementsPanel.ElementsPanel, sinon.createStubInstance(Elements.ElementsPanel.ElementsPanel));\n\n      panel.handleAction('freestyler.elements-floating-button');\n      await view.lastCall.args[0].onTextSubmit('test');\n\n      assert.deepEqual(view.lastCall.args[0].messages, [\n        {\n          entity: AiAssistance.ChatMessageEntity.USER,\n          text: 'test',\n          imageInput: undefined,\n        },\n        {\n          answer: 'test',\n          entity: AiAssistance.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps: [],\n        },\n      ]);\n\n      UI.Context.Context.instance().setFlavor(\n          Elements.ElementsPanel.ElementsPanel, sinon.createStubInstance(Elements.ElementsPanel.ElementsPanel));\n\n      panel.handleAction('freestyler.elements-floating-button');\n      await view.lastCall.args[0].onTextSubmit('test2');\n\n      assert.isFalse(view.lastCall.args[0].isReadOnly);\n      assert.deepEqual(view.lastCall.args[0].messages, [\n        {\n          entity: AiAssistance.ChatMessageEntity.USER,\n          text: 'test',\n          imageInput: undefined,\n        },\n        {\n          answer: 'test',\n          entity: AiAssistance.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps: [],\n        },\n        {\n          entity: AiAssistance.ChatMessageEntity.USER,\n          text: 'test2',\n          imageInput: undefined,\n        },\n        {\n          answer: 'test2',\n          entity: AiAssistance.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps: [],\n        },\n      ]);\n    });\n  });\n\n  describe('auto agent selection for panels', () => {\n    describe('Elements panel', () => {\n      it('should select FREESTYLER agent when the Elements panel is open in initial render', async () => {\n        updateHostConfig({\n          devToolsFreestyler: {\n            enabled: true,\n          },\n        });\n        UI.Context.Context.instance().setFlavor(\n            Elements.ElementsPanel.ElementsPanel, sinon.createStubInstance(Elements.ElementsPanel.ElementsPanel));\n\n        const {view} = await createAiAssistancePanel({\n          aidaClient: mockAidaClient([[{explanation: 'test'}]]),\n        });\n\n        sinon.assert.calledWith(view, sinon.match({\n          agentType: AiAssistance.AgentType.STYLING,\n        }));\n      });\n\n      it('should update to no agent state when the Elements panel is closed and no other panels are open', async () => {\n        updateHostConfig({\n          devToolsFreestyler: {\n            enabled: true,\n          },\n        });\n        UI.Context.Context.instance().setFlavor(\n            Elements.ElementsPanel.ElementsPanel, sinon.createStubInstance(Elements.ElementsPanel.ElementsPanel));\n        const {view} = await createAiAssistancePanel();\n\n        sinon.assert.calledWith(view, sinon.match({\n          agentType: AiAssistance.AgentType.STYLING,\n        }));\n\n        UI.Context.Context.instance().setFlavor(Elements.ElementsPanel.ElementsPanel, null);\n        assert.isUndefined(view.lastCall.args[0].agentType);\n      });\n\n      it('should render no agent state when Elements panel is open but Freestyler is not enabled', async () => {\n        updateHostConfig({\n          devToolsFreestyler: {\n            enabled: false,\n          },\n        });\n        UI.Context.Context.instance().setFlavor(\n            Elements.ElementsPanel.ElementsPanel, sinon.createStubInstance(Elements.ElementsPanel.ElementsPanel));\n        const {view} = await createAiAssistancePanel();\n\n        assert.isUndefined(view.lastCall.args[0].agentType);\n      });\n    });\n\n    describe('Network panel', () => {\n      it('should select DRJONES_NETWORK agent when the Network panel is open in initial render', async () => {\n        updateHostConfig({\n          devToolsAiAssistanceNetworkAgent: {\n            enabled: true,\n          },\n        });\n        UI.Context.Context.instance().setFlavor(\n            Network.NetworkPanel.NetworkPanel, sinon.createStubInstance(Network.NetworkPanel.NetworkPanel));\n        const {view} = await createAiAssistancePanel();\n\n        sinon.assert.calledWith(view, sinon.match({\n          agentType: AiAssistance.AgentType.NETWORK,\n        }));\n      });\n\n      it('should update to no agent state when the Network panel is closed and no other panels are open', async () => {\n        updateHostConfig({\n          devToolsAiAssistanceNetworkAgent: {\n            enabled: true,\n          },\n        });\n        UI.Context.Context.instance().setFlavor(\n            Network.NetworkPanel.NetworkPanel, sinon.createStubInstance(Network.NetworkPanel.NetworkPanel));\n        const {view} = await createAiAssistancePanel();\n\n        sinon.assert.calledWith(view, sinon.match({\n          agentType: AiAssistance.AgentType.NETWORK,\n        }));\n\n        UI.Context.Context.instance().setFlavor(Network.NetworkPanel.NetworkPanel, null);\n        assert.isUndefined(view.lastCall.args[0].agentType);\n      });\n\n      it('should render no agent state when Network panel is open but devToolsAiAssistanceNetworkAgent is not enabled',\n         async () => {\n           updateHostConfig({\n             devToolsAiAssistanceNetworkAgent: {\n               enabled: false,\n             },\n           });\n           UI.Context.Context.instance().setFlavor(\n               Network.NetworkPanel.NetworkPanel, sinon.createStubInstance(Network.NetworkPanel.NetworkPanel));\n           const {view} = await createAiAssistancePanel();\n\n           assert.isUndefined(view.lastCall.args[0].agentType);\n         });\n    });\n\n    describe('Sources panel', () => {\n      it('should select DRJONES_FILE agent when the Sources panel is open in initial render', async () => {\n        updateHostConfig({\n          devToolsAiAssistanceFileAgent: {\n            enabled: true,\n          },\n        });\n        UI.Context.Context.instance().setFlavor(\n            Sources.SourcesPanel.SourcesPanel, sinon.createStubInstance(Sources.SourcesPanel.SourcesPanel));\n        const {view} = await createAiAssistancePanel();\n\n        sinon.assert.calledWith(view, sinon.match({\n          agentType: AiAssistance.AgentType.FILE,\n        }));\n      });\n\n      it('should update to no agent state when the Sources panel is closed and no other panels are open', async () => {\n        updateHostConfig({\n          devToolsAiAssistanceFileAgent: {\n            enabled: true,\n          },\n        });\n        UI.Context.Context.instance().setFlavor(\n            Sources.SourcesPanel.SourcesPanel, sinon.createStubInstance(Sources.SourcesPanel.SourcesPanel));\n        const {view} = await createAiAssistancePanel();\n        sinon.assert.calledWith(view, sinon.match({\n          agentType: AiAssistance.AgentType.FILE,\n        }));\n\n        UI.Context.Context.instance().setFlavor(Sources.SourcesPanel.SourcesPanel, null);\n        assert.isUndefined(view.lastCall.args[0].agentType);\n      });\n\n      it('should render no agent state when Sources panel is open but devToolsAiAssistanceFileAgent is not enabled',\n         async () => {\n           updateHostConfig({\n             devToolsAiAssistanceFileAgent: {\n               enabled: false,\n             },\n           });\n           UI.Context.Context.instance().setFlavor(\n               Sources.SourcesPanel.SourcesPanel, sinon.createStubInstance(Sources.SourcesPanel.SourcesPanel));\n           const {view} = await createAiAssistancePanel();\n\n           assert.isUndefined(view.lastCall.args[0].agentType);\n         });\n    });\n\n    describe('Performance Insight agent', () => {\n      it('should select the PERFORMANCE_INSIGHT agent when the performance panel is open and insights are enabled',\n         async () => {\n           updateHostConfig({\n             devToolsAiAssistancePerformanceAgent: {\n               enabled: true,\n               insightsEnabled: true,\n             },\n           });\n           UI.Context.Context.instance().setFlavor(\n               Timeline.TimelinePanel.TimelinePanel, sinon.createStubInstance(Timeline.TimelinePanel.TimelinePanel));\n           const {view} = await createAiAssistancePanel();\n           sinon.assert.calledWith(view, sinon.match({\n             agentType: AiAssistance.AgentType.PERFORMANCE_INSIGHT,\n           }));\n         });\n    });\n\n    describe('Performance panel', () => {\n      it('should select DRJONES_PERFORMANCE agent when the Performance panel is open in initial render', async () => {\n        updateHostConfig({\n          devToolsAiAssistancePerformanceAgent: {\n            enabled: true,\n          },\n        });\n        UI.Context.Context.instance().setFlavor(\n            Timeline.TimelinePanel.TimelinePanel, sinon.createStubInstance(Timeline.TimelinePanel.TimelinePanel));\n        const {view} = await createAiAssistancePanel();\n\n        sinon.assert.calledWith(view, sinon.match({\n          agentType: AiAssistance.AgentType.PERFORMANCE,\n        }));\n      });\n\n      it('should update to no agent state when the Performance panel is closed and no other panels are open',\n         async () => {\n           updateHostConfig({\n             devToolsAiAssistancePerformanceAgent: {\n               enabled: true,\n             },\n           });\n           UI.Context.Context.instance().setFlavor(\n               Timeline.TimelinePanel.TimelinePanel, sinon.createStubInstance(Timeline.TimelinePanel.TimelinePanel));\n           const {view} = await createAiAssistancePanel();\n           sinon.assert.calledWith(view, sinon.match({\n             agentType: AiAssistance.AgentType.PERFORMANCE,\n           }));\n\n           UI.Context.Context.instance().setFlavor(Timeline.TimelinePanel.TimelinePanel, null);\n           assert.isUndefined(view.lastCall.args[0].agentType);\n         });\n\n      it('should render no agent state when Performance panel is open but devToolsAiAssistancePerformanceAgent is not enabled',\n         async () => {\n           updateHostConfig({\n             devToolsAiAssistancePerformanceAgent: {\n               enabled: false,\n             },\n           });\n           UI.Context.Context.instance().setFlavor(\n               Timeline.TimelinePanel.TimelinePanel, sinon.createStubInstance(Timeline.TimelinePanel.TimelinePanel));\n           const {view} = await createAiAssistancePanel();\n\n           assert.isUndefined(view.lastCall.args[0].agentType);\n         });\n    });\n  });\n\n  it('erases previous partial response on blocked error', async () => {\n    const {view, panel} = await createAiAssistancePanel({\n      aidaClient: mockAidaClient([[{\n        explanation: 'This is the first part of the answer.',\n        metadata: {attributionMetadata: {attributionAction: Host.AidaClient.RecitationAction.BLOCK, citations: []}}\n      }]]),\n    });\n    panel.handleAction('freestyler.elements-floating-button');\n    await view.lastCall.args[0].onTextSubmit('test');\n\n    assert.deepEqual(view.lastCall.args[0].messages, [\n      {\n        entity: AiAssistance.ChatMessageEntity.USER,\n        text: 'test',\n        imageInput: undefined,\n      },\n      {\n        answer: undefined,\n        entity: AiAssistance.ChatMessageEntity.MODEL,\n        rpcId: undefined,\n        error: AiAssistance.ErrorType.BLOCK,\n        steps: [],\n      },\n    ]);\n  });\n\n  describe('multimodal input', () => {\n    function mockScreenshotModel() {\n      const target = createTarget();\n      const screenCaptureModel = target.model(SDK.ScreenCaptureModel.ScreenCaptureModel);\n      assert.exists(screenCaptureModel);\n      return {\n        captureScreenshotStub:\n            sinon.stub(screenCaptureModel, 'captureScreenshot').returns(Promise.resolve('imageInput')),\n      };\n    }\n\n    it('multimodal related functions unavailable when multimodal is disabled', async () => {\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n          multimodal: false,\n        },\n      });\n      UI.Context.Context.instance().setFlavor(\n          Elements.ElementsPanel.ElementsPanel, sinon.createStubInstance(Elements.ElementsPanel.ElementsPanel));\n      const {\n        view,\n      } = await createAiAssistancePanel();\n\n      assert.isFalse(view.lastCall.args[0].multimodalInputEnabled);\n      assert.notExists(view.lastCall.args[0].onTakeScreenshot);\n      assert.notExists(view.lastCall.args[0].onRemoveImageInput);\n      assert.isEmpty(view.lastCall.args[0].imageInput);\n    });\n\n    it('adds an image input and then removes it', async () => {\n      const {captureScreenshotStub} = mockScreenshotModel();\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n          multimodal: true,\n        },\n      });\n      UI.Context.Context.instance().setFlavor(\n          Elements.ElementsPanel.ElementsPanel, sinon.createStubInstance(Elements.ElementsPanel.ElementsPanel));\n      const {\n        view,\n      } = await createAiAssistancePanel();\n\n      assert.isTrue(view.lastCall.args[0].multimodalInputEnabled);\n\n      await view.lastCall.args[0].onTakeScreenshot?.();\n\n      expect(captureScreenshotStub.calledOnce);\n      assert.deepEqual(view.lastCall.args[0].imageInput, 'imageInput');\n\n      await view.lastCall.args[0].onRemoveImageInput?.();\n\n      assert.isEmpty(view.lastCall.args[0].imageInput);\n    });\n\n    it('sends image as input', async () => {\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n          multimodal: true,\n        },\n      });\n      UI.Context.Context.instance().setFlavor(\n          Elements.ElementsPanel.ElementsPanel, sinon.createStubInstance(Elements.ElementsPanel.ElementsPanel));\n      const {\n        view,\n      } = await createAiAssistancePanel({aidaClient: mockAidaClient([[{explanation: 'test'}]])});\n\n      assert.isTrue(view.lastCall.args[0].multimodalInputEnabled);\n\n      await view.lastCall.args[0].onTextSubmit('test', {inlineData: {data: 'imageInput', mimeType: 'image/jpeg'}});\n\n      assert.deepEqual(view.lastCall.args[0].messages, [\n        {\n          entity: AiAssistance.ChatMessageEntity.USER,\n          text: 'test',\n          imageInput: {inlineData: {data: 'imageInput', mimeType: 'image/jpeg'}}\n        },\n        {\n          answer: 'test',\n          entity: AiAssistance.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps: [],\n        },\n      ]);\n    });\n  });\n});\n"]}