{"version":3,"file":"AiHistoryStorage.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/ai_assistance/AiHistoryStorage.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\n\nimport * as AiAssistance from './ai_assistance.js';\n\ndescribe('AiHistoryStorage', () => {\n  const agent1: AiAssistance.SerializedConversation = {\n    id: 'id1',\n    type: AiAssistance.ConversationType.STYLING,\n    history: [],\n  };\n  const agent2: AiAssistance.SerializedConversation = {\n    id: 'id2',\n    type: AiAssistance.ConversationType.FILE,\n    history: [],\n  };\n  const agent3: AiAssistance.SerializedConversation = {\n    id: 'id3',\n    type: AiAssistance.ConversationType.NETWORK,\n    history: [],\n  };\n  const agent4: AiAssistance.SerializedConversation = {\n    id: 'id4',\n    type: AiAssistance.ConversationType.STYLING,\n    history: [\n      {\n        type: AiAssistance.ResponseType.USER_QUERY,\n        query: 'text',\n        imageId: 'image-id1',\n        imageInput: undefined,\n      },\n      {\n        type: AiAssistance.ResponseType.ANSWER,\n        text: 'answer',\n        complete: true,\n      },\n      {\n        type: AiAssistance.ResponseType.USER_QUERY,\n        query: 'text',\n        imageId: 'image-id2',\n        imageInput: undefined,\n      },\n    ],\n  };\n  const serializedImage1: AiAssistance.SerializedImage = {\n    id: 'image-id1',\n    data: 'imageInput',\n    mimeType: 'image/jpeg',\n  };\n  const serializedImage2: AiAssistance.SerializedImage = {\n    id: 'image-id2',\n    data: 'imageInput',\n    mimeType: 'image/jpeg',\n  };\n\n  beforeEach(() => {\n    let data: Record<string, string> = {};\n    const dummyStorage = new Common.Settings.SettingsStorage({}, {\n      get(setting) {\n        return Promise.resolve(data[setting]);\n      },\n      set(setting, value) {\n        data[setting] = value;\n      },\n      clear() {\n        data = {};\n      },\n      remove(setting) {\n        delete data[setting];\n      },\n      register(_setting) {},\n    });\n    Common.Settings.Settings.instance({\n      forceNew: true,\n      syncedStorage: dummyStorage,\n      globalStorage: dummyStorage,\n      localStorage: dummyStorage,\n    });\n  });\n\n  function getStorage(maxStorageSize?: number) {\n    return AiAssistance.AiHistoryStorage.instance({forceNew: true, maxStorageSize});\n  }\n\n  it('should create and retrieve history entry', async () => {\n    const storage = getStorage();\n    await storage.upsertHistoryEntry(agent1);\n    assert.deepEqual(\n        storage.getHistory(),\n        [{\n          id: 'id1',\n          type: 'freestyler' as AiAssistance.ConversationType,\n          history: [],\n        }],\n    );\n    await storage.upsertHistoryEntry(agent2);\n    assert.deepEqual(\n        storage.getHistory(),\n        [\n          {\n            id: 'id1',\n            type: 'freestyler' as AiAssistance.ConversationType,\n            history: [],\n          },\n          {\n            id: 'id2',\n            type: 'drjones-file' as AiAssistance.ConversationType,\n            history: [],\n          },\n        ],\n    );\n  });\n\n  it('should update history entries correctly', async () => {\n    const storage = getStorage();\n    await storage.upsertHistoryEntry(agent1);\n    await storage.upsertHistoryEntry(agent2);\n    await storage.upsertHistoryEntry({\n      ...agent1,\n      history: [\n        {\n          type: AiAssistance.ResponseType.USER_QUERY,\n          query: 'text',\n        },\n      ],\n    });\n    assert.deepEqual(\n        storage.getHistory(),\n        [\n          {\n            id: 'id1',\n            type: 'freestyler' as AiAssistance.ConversationType,\n            history: [\n              {\n                type: AiAssistance.ResponseType.USER_QUERY,\n                query: 'text',\n              },\n            ],\n          },\n          {\n            id: 'id2',\n            type: 'drjones-file' as AiAssistance.ConversationType,\n            history: [],\n          },\n        ],\n    );\n\n    await storage.upsertHistoryEntry(agent3);\n    assert.deepEqual(\n        storage.getHistory(),\n        [\n          {\n            id: 'id1',\n            type: 'freestyler' as AiAssistance.ConversationType,\n            history: [\n              {\n                type: AiAssistance.ResponseType.USER_QUERY,\n                query: 'text',\n              },\n            ],\n          },\n          {\n            id: 'id2',\n            type: 'drjones-file' as AiAssistance.ConversationType,\n            history: [],\n          },\n          {\n            id: 'id3',\n            type: 'drjones-network-request' as AiAssistance.ConversationType,\n            history: [],\n          },\n        ],\n    );\n    assert.deepEqual(\n        storage.getImageHistory(),\n        [],\n    );\n\n    await storage.upsertImage(serializedImage1);\n    await storage.upsertImage(serializedImage2);\n    await storage.upsertHistoryEntry(agent4);\n    assert.deepEqual(\n        storage.getHistory(),\n        [\n          {\n            id: 'id1',\n            type: 'freestyler' as AiAssistance.ConversationType,\n            history: [\n              {\n                type: AiAssistance.ResponseType.USER_QUERY,\n                query: 'text',\n              },\n            ],\n          },\n          {\n            id: 'id2',\n            type: 'drjones-file' as AiAssistance.ConversationType,\n            history: [],\n          },\n          {\n            id: 'id3',\n            type: 'drjones-network-request' as AiAssistance.ConversationType,\n            history: [],\n          },\n          {\n            id: 'id4',\n            type: 'freestyler' as AiAssistance.ConversationType,\n            history: [\n              {\n                type: AiAssistance.ResponseType.USER_QUERY,\n                query: 'text',\n                imageId: 'image-id1',\n                imageInput: undefined,\n              },\n              {\n                type: AiAssistance.ResponseType.ANSWER,\n                text: 'answer',\n                complete: true,\n              },\n              {\n                type: AiAssistance.ResponseType.USER_QUERY,\n                query: 'text',\n                imageId: 'image-id2',\n                imageInput: undefined,\n              },\n            ],\n          },\n        ],\n    );\n    assert.deepEqual(\n        storage.getImageHistory(),\n        [\n          {\n            id: 'image-id1',\n            data: 'imageInput',\n            mimeType: 'image/jpeg',\n          },\n          {\n            id: 'image-id2',\n            data: 'imageInput',\n            mimeType: 'image/jpeg',\n          }\n        ],\n    );\n  });\n\n  it('should delete a single entry', async () => {\n    const storage = getStorage();\n    await storage.upsertHistoryEntry(agent1);\n    await storage.upsertHistoryEntry(agent2);\n    await storage.upsertHistoryEntry(agent3);\n    await storage.deleteHistoryEntry('id2');\n    assert.deepEqual(\n        storage.getHistory(),\n        [\n          {\n            id: 'id1',\n            type: 'freestyler' as AiAssistance.ConversationType,\n            history: [],\n          },\n          {\n            id: 'id3',\n            type: 'drjones-network-request' as AiAssistance.ConversationType,\n            history: [],\n          },\n        ],\n    );\n  });\n\n  it('should delete image history entry', async () => {\n    const storage = getStorage();\n    await storage.upsertHistoryEntry(agent1);\n    await storage.upsertHistoryEntry(agent2);\n    await storage.upsertHistoryEntry(agent3);\n    await storage.upsertImage(serializedImage1);\n    await storage.upsertImage(serializedImage2);\n    await storage.upsertHistoryEntry(agent4);\n    await storage.deleteHistoryEntry('id4');\n    assert.deepEqual(\n        storage.getHistory(),\n        [\n          {\n            id: 'id1',\n            type: 'freestyler' as AiAssistance.ConversationType,\n            history: [],\n          },\n          {\n            id: 'id2',\n            type: 'drjones-file' as AiAssistance.ConversationType,\n            history: [],\n          },\n          {\n            id: 'id3',\n            type: 'drjones-network-request' as AiAssistance.ConversationType,\n            history: [],\n          },\n        ],\n    );\n    assert.deepEqual(\n        storage.getImageHistory(),\n        [],\n    );\n  });\n\n  it('should delete all entries', async () => {\n    const storage = getStorage();\n    await storage.upsertHistoryEntry(agent1);\n    await storage.upsertHistoryEntry(agent2);\n    await storage.upsertHistoryEntry(agent3);\n    await storage.upsertImage(serializedImage1);\n    await storage.upsertImage(serializedImage2);\n    await storage.upsertHistoryEntry(agent4);\n    await storage.deleteAll();\n    assert.deepEqual(\n        storage.getHistory(),\n        [],\n    );\n    assert.deepEqual(\n        storage.getImageHistory(),\n        [],\n    );\n  });\n\n  it('should limit the amount of stored images', async () => {\n    const storage = getStorage(2);\n\n    await storage.upsertImage({\n      id: 'image-id1',\n      data: '1',\n      mimeType: 'image/jpeg',\n    });\n    await storage.upsertHistoryEntry(agent1);\n    await storage.upsertImage({\n      id: 'image-id2',\n      data: '2',\n      mimeType: 'image/jpeg',\n    });\n    await storage.upsertImage({\n      id: 'image-id3',\n      data: '3',\n      mimeType: 'image/jpeg',\n    });\n    await storage.upsertHistoryEntry(agent2);\n    await storage.upsertImage({\n      id: 'image-id4',\n      data: '4',\n      mimeType: 'image/jpeg',\n    });\n    await storage.upsertHistoryEntry(agent3);\n    const imageHistory = storage.getImageHistory();\n    const imageData1 = imageHistory.find(item => item.id === 'image-id1');\n    const imageData2 = imageHistory.find(item => item.id === 'image-id2');\n    const imageData3 = imageHistory.find(item => item.id === 'image-id3');\n    const imageData4 = imageHistory.find(item => item.id === 'image-id4');\n\n    assert.notExists(imageData1);\n    assert.notExists(imageData2);\n    assert.deepEqual(imageData3, {\n      id: 'image-id3',\n      data: '3',\n      mimeType: 'image/jpeg',\n    });\n    assert.deepEqual(imageData4, {\n      id: 'image-id4',\n      data: '4',\n      mimeType: 'image/jpeg',\n    });\n  });\n});\n"]}