{
  "version": 3,
  "sources": ["ai_assistance-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as AiAssistance from './ai_assistance.js';\n\n/*\n  * TODO(nvitkov): b/346933425\n  * Temporary string that should not be translated\n  * as they may change often during development.\n  */\nconst UIStrings = {\n  /**\n   * @description The title of the AI assistance panel.\n   */\n  aiAssistance: 'AI assistance',\n  /**\n   * @description The title of the command menu action for showing the AI assistance panel.\n   */\n  showAiAssistance: 'Show AI assistance',\n  /**\n   * @description The setting title to enable the AI assistance via\n   * the settings tab.\n   */\n  enableAiAssistance: 'Enable AI assistance',\n  /**\n   *@description Text of a tooltip to redirect to the AI assistance panel with\n   * the current element as context\n   */\n  askAi: 'Ask AI',\n  /**\n   * @description Message shown to the user if the DevTools locale is not\n   * supported.\n   */\n  wrongLocale: 'To use this feature, set your language preference to English in DevTools settings.',\n  /**\n   * @description Message shown to the user if the user's region is not\n   * supported.\n   */\n  geoRestricted: 'This feature is unavailable in your region.',\n  /**\n   * @description Message shown to the user if the enterprise policy does\n   * not allow this feature.\n   */\n  policyRestricted: 'This setting is managed by your administrator.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/ai_assistance/ai_assistance-meta.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nconst setting = 'ai-assistance-enabled';\n\nfunction isLocaleRestricted(): boolean {\n  const devtoolsLocale = i18n.DevToolsLocale.DevToolsLocale.instance();\n  return !devtoolsLocale.locale.startsWith('en-');\n}\n\nfunction isGeoRestricted(config?: Root.Runtime.HostConfig): boolean {\n  return config?.aidaAvailability?.blockedByGeo === true;\n}\n\nfunction isPolicyRestricted(config?: Root.Runtime.HostConfig): boolean {\n  return config?.aidaAvailability?.blockedByEnterprisePolicy === true;\n}\n\nlet loadedAiAssistanceModule: (typeof AiAssistance|undefined);\nasync function loadAiAssistanceModule(): Promise<typeof AiAssistance> {\n  if (!loadedAiAssistanceModule) {\n    loadedAiAssistanceModule = await import('./ai_assistance.js');\n  }\n  return loadedAiAssistanceModule;\n}\n\nfunction isStylingAgentFeatureAvailable(config?: Root.Runtime.HostConfig): boolean {\n  return (config?.aidaAvailability?.enabled && config?.devToolsFreestyler?.enabled) === true;\n}\n\nfunction isNetworkAgentFeatureAvailable(config?: Root.Runtime.HostConfig): boolean {\n  return (config?.aidaAvailability?.enabled && (config?.devToolsAiAssistanceNetworkAgent?.enabled)) === true;\n}\n\nfunction isPerformanceAgentFeatureAvailable(config?: Root.Runtime.HostConfig): boolean {\n  return (config?.aidaAvailability?.enabled && (config?.devToolsAiAssistancePerformanceAgent?.enabled)) === true;\n}\nfunction isPerformanceInsightsAgentFeatureAvailable(config?: Root.Runtime.HostConfig): boolean {\n  return (config?.aidaAvailability?.enabled && config?.devToolsAiAssistancePerformanceAgent?.enabled &&\n          config?.devToolsAiAssistancePerformanceAgent.insightsEnabled) === true;\n}\n\nfunction isFileAgentFeatureAvailable(config?: Root.Runtime.HostConfig): boolean {\n  return (config?.aidaAvailability?.enabled && (config?.devToolsAiAssistanceFileAgent?.enabled)) === true;\n}\n\nfunction isAnyFeatureAvailable(config?: Root.Runtime.HostConfig): boolean {\n  return isStylingAgentFeatureAvailable(config) || isNetworkAgentFeatureAvailable(config) ||\n      isPerformanceAgentFeatureAvailable(config) || isFileAgentFeatureAvailable(config);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'freestyler',\n  commandPrompt: i18nLazyString(UIStrings.showAiAssistance),\n  title: i18nLazyString(UIStrings.aiAssistance),\n  order: 10,\n  isPreviewFeature: true,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  hasToolbar: false,\n  condition: config => isAnyFeatureAvailable(config) && !isPolicyRestricted(config),\n  async loadView() {\n    const AiAssistance = await loadAiAssistanceModule();\n    return await AiAssistance.AiAssistancePanel.instance();\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.AI,\n  settingName: setting,\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  title: i18nLazyString(UIStrings.enableAiAssistance),\n  defaultValue: false,\n  reloadRequired: false,\n  condition: isAnyFeatureAvailable,\n  disabledCondition: config => {\n    const reasons: Platform.UIString.LocalizedString[] = [];\n    if (isGeoRestricted(config)) {\n      reasons.push(i18nString(UIStrings.geoRestricted));\n    }\n    if (isPolicyRestricted(config)) {\n      reasons.push(i18nString(UIStrings.policyRestricted));\n    }\n    if (isLocaleRestricted()) {\n      reasons.push(i18nString(UIStrings.wrongLocale));\n    }\n    if (reasons.length > 0) {\n      return {disabled: true, reasons};\n    }\n    return {disabled: false};\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'freestyler.elements-floating-button',\n  contextTypes(): [] {\n    return [];\n  },\n  category: UI.ActionRegistration.ActionCategory.GLOBAL,\n  title: i18nLazyString(UIStrings.askAi),\n  async loadActionDelegate() {\n    const AiAssistance = await loadAiAssistanceModule();\n    return new AiAssistance.ActionDelegate();\n  },\n  condition: config =>\n      isStylingAgentFeatureAvailable(config) && !isPolicyRestricted(config) && !isGeoRestricted(config),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'freestyler.element-panel-context',\n  contextTypes(): [] {\n    return [];\n  },\n  category: UI.ActionRegistration.ActionCategory.GLOBAL,\n  title: i18nLazyString(UIStrings.askAi),\n  async loadActionDelegate() {\n    const AiAssistance = await loadAiAssistanceModule();\n    return new AiAssistance.ActionDelegate();\n  },\n  condition: config =>\n      isStylingAgentFeatureAvailable(config) && !isPolicyRestricted(config) && !isGeoRestricted(config),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'drjones.network-floating-button',\n  contextTypes(): [] {\n    return [];\n  },\n  category: UI.ActionRegistration.ActionCategory.GLOBAL,\n  title: i18nLazyString(UIStrings.askAi),\n  async loadActionDelegate() {\n    const AiAssistance = await loadAiAssistanceModule();\n    return new AiAssistance.ActionDelegate();\n  },\n  condition: config =>\n      isNetworkAgentFeatureAvailable(config) && !isPolicyRestricted(config) && !isGeoRestricted(config),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'drjones.network-panel-context',\n  contextTypes(): [] {\n    return [];\n  },\n  category: UI.ActionRegistration.ActionCategory.GLOBAL,\n  title: i18nLazyString(UIStrings.askAi),\n  async loadActionDelegate() {\n    const AiAssistance = await loadAiAssistanceModule();\n    return new AiAssistance.ActionDelegate();\n  },\n  condition: config =>\n      isNetworkAgentFeatureAvailable(config) && !isPolicyRestricted(config) && !isGeoRestricted(config),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'drjones.performance-panel-context',\n  contextTypes(): [] {\n    return [];\n  },\n  category: UI.ActionRegistration.ActionCategory.GLOBAL,\n  title: i18nLazyString(UIStrings.askAi),\n  async loadActionDelegate() {\n    const AiAssistance = await loadAiAssistanceModule();\n    return new AiAssistance.ActionDelegate();\n  },\n  condition: config =>\n      isPerformanceAgentFeatureAvailable(config) && !isPolicyRestricted(config) && !isGeoRestricted(config),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'drjones.performance-insight-context',\n  contextTypes(): [] {\n    return [];\n  },\n  category: UI.ActionRegistration.ActionCategory.GLOBAL,\n  title: i18nLazyString(UIStrings.askAi),\n  async loadActionDelegate() {\n    const AiAssistance = await loadAiAssistanceModule();\n    return new AiAssistance.ActionDelegate();\n  },\n  condition: config => {\n    return isPerformanceInsightsAgentFeatureAvailable(config) && !isPolicyRestricted(config) &&\n        !isGeoRestricted(config);\n  }\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'drjones.sources-floating-button',\n  contextTypes(): [] {\n    return [];\n  },\n  category: UI.ActionRegistration.ActionCategory.GLOBAL,\n  title: i18nLazyString(UIStrings.askAi),\n  async loadActionDelegate() {\n    const AiAssistance = await loadAiAssistanceModule();\n    return new AiAssistance.ActionDelegate();\n  },\n  condition: config => isFileAgentFeatureAvailable(config) && !isPolicyRestricted(config) && !isGeoRestricted(config),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'drjones.sources-panel-context',\n  contextTypes() {\n    return [];\n  },\n  category: UI.ActionRegistration.ActionCategory.GLOBAL,\n  title: i18nLazyString(UIStrings.askAi),\n  async loadActionDelegate() {\n    const AiAssistance = await loadAiAssistanceModule();\n    return new AiAssistance.ActionDelegate();\n  },\n  condition: config => isFileAgentFeatureAvailable(config) && !isPolicyRestricted(config) && !isGeoRestricted(config),\n});\n"],
  "mappings": "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",
  "names": []
}
