{"version":3,"file":"PatchWidget.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/ai_assistance/PatchWidget.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,SAAS,MAAM,qCAAqC,CAAC;AACjE,OAAO,EACL,OAAO,EACP,iBAAiB,EACjB,oBAAoB,EACpB,iCAAiC,GAClC,MAAM,sCAAsC,CAAC;AAC9C,OAAO,EAAC,gBAAgB,EAAC,MAAM,qCAAqC,CAAC;AACrE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAE3E,0BAA0B,CAAC,WAAW,EAAE,GAAG,EAAE;IAC3C,UAAU,CAAC,GAAG,EAAE;QACd,iCAAiC,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,oBAAoB,CAAC,aAAa,CAAC,CAAC;QACpC,gBAAgB,CAAC;YACf,kBAAkB,EAAE;gBAClB,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,KAAK;aAChB;SACF,CAAC,CAAC;QACH,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;QACzC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;QACnD,oBAAoB,CAAC,aAAa,CAAC,CAAC;QACpC,gBAAgB,CAAC;YACf,kBAAkB,EAAE;gBAClB,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI;aACf;SACF,CAAC,CAAC;QACH,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;QACzC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,EAAC,OAAO,EAAC,GAAG,oBAAoB,CAAC,aAAa,CAAC,CAAC;QACtD,gBAAgB,CAAC;YACf,kBAAkB,EAAE;gBAClB,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI;aACf;SACF,CAAC,CAAC;QACH,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;QACzC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAEnD,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACpE,oBAAoB,CAAC,cAAc,CAAC,CAAC;QACrC,MAAM,CAAC,WAAW,CAAC,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {\n  cleanup,\n  createPatchWidget,\n  createTestFilesystem,\n  initializePersistenceImplForTests,\n} from '../../testing/AiAssistanceHelpers.js';\nimport {updateHostConfig} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\ndescribeWithMockConnection('workspace', () => {\n  beforeEach(() => {\n    initializePersistenceImplForTests();\n  });\n\n  afterEach(() => {\n    cleanup();\n  });\n\n  it('does not report a workspace project if disabled', async () => {\n    createTestFilesystem('file://test');\n    updateHostConfig({\n      devToolsFreestyler: {\n        enabled: true,\n        patching: false,\n      },\n    });\n    const {view} = await createPatchWidget();\n    assert.isUndefined(view.input.projectName);\n  });\n\n  it('reports a current workspace project', async () => {\n    createTestFilesystem('file://test');\n    updateHostConfig({\n      devToolsFreestyler: {\n        enabled: true,\n        patching: true,\n      },\n    });\n    const {view} = await createPatchWidget();\n    assert.strictEqual(view.input.projectName, 'test');\n  });\n\n  it('reports an updated project', async () => {\n    const {project} = createTestFilesystem('file://test');\n    updateHostConfig({\n      devToolsFreestyler: {\n        enabled: true,\n        patching: true,\n      },\n    });\n    const {view} = await createPatchWidget();\n    assert.strictEqual(view.input.projectName, 'test');\n\n    Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n    createTestFilesystem('file://test2');\n    assert.strictEqual((await view.nextInput).projectName, 'test2');\n  });\n});\n"]}