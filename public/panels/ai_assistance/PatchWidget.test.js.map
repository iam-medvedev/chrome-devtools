{"version":3,"file":"PatchWidget.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/ai_assistance/PatchWidget.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,KAAK,SAAS,MAAM,qCAAqC,CAAC;AACjE,OAAO,KAAK,WAAW,MAAM,+BAA+B,CAAC;AAC7D,OAAO,EACL,OAAO,EACP,iBAAiB,EACjB,6BAA6B,EAC7B,oBAAoB,EACpB,iCAAiC,EACjC,kBAAkB,EAClB,cAAc,EACd,kBAAkB,GACnB,MAAM,sCAAsC,CAAC;AAC9C,OAAO,EAAC,gBAAgB,EAAC,MAAM,qCAAqC,CAAC;AACrE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAE3E,OAAO,KAAK,YAAY,MAAM,oBAAoB,CAAC;AAEnD,0BAA0B,CAAC,aAAa,EAAE,GAAG,EAAE;IAC7C,IAAI,iBAAmG,CAAC;IACxG,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChF,iBAAiB,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAE9D,iCAAiC,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,UAAU,CAAC,GAAG,EAAE;YACd,oBAAoB,CAAC,aAAa,CAAC,CAAC;YACpC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,4CAA4C,EAAE,aAAa,CAAC,CAAC;YAC/G,gBAAgB,CAAC;gBACf,kBAAkB,EAAE;oBAClB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,IAAI;iBACf;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;YACrC,EAAE,CAAC,mGAAmG,EACnG,KAAK,IAAI,EAAE;gBACT,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACjF,gBAAgB,CAAC;oBACf,kBAAkB,EAAE;wBAClB,OAAO,EAAE,IAAI;wBACb,QAAQ,EAAE,IAAI;qBACf;oBACD,gBAAgB,EAAE,EAAC,qBAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,qBAAqB,EAAC;iBACzG,CAAC,CAAC;gBACH,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;gBAChD,KAAK,CAAC,aAAa,GAAG,iCAAiC,CAAC;gBAExD,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;gBAEhC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAM,EAAE,oDAAoD,CAAC,CAAC;gBAC9F,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAC/D,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CACpD,2DAA2D,CAAC,CAAC,CAAC,CAAC;YACzE,CAAC,CAAC,CAAC;YAEN,EAAE,CAAC,uGAAuG,EACvG,KAAK,IAAI,EAAE;gBACT,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACjF,gBAAgB,CAAC;oBACf,kBAAkB,EAAE;wBAClB,OAAO,EAAE,IAAI;wBACb,QAAQ,EAAE,IAAI;qBACf;oBACD,gBAAgB,EAAE,EAAC,qBAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,KAAK,EAAC;iBACzF,CAAC,CAAC;gBACH,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;gBAChD,KAAK,CAAC,aAAa,GAAG,iCAAiC,CAAC;gBAExD,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;gBAEhC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAM,EAAE,oDAAoD,CAAC,CAAC;gBAC9F,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAClE,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CACpD,2DAA2D,CAAC,CAAC,CAAC,CAAC;YACzE,CAAC,CAAC,CAAC;YAEN,EAAE,CAAC,uGAAuG,EACvG,KAAK,IAAI,EAAE;gBACT,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACjF,gBAAgB,CAAC;oBACf,kBAAkB,EAAE;wBAClB,OAAO,EAAE,IAAI;wBACb,QAAQ,EAAE,IAAI;qBACf;oBACD,gBAAgB,EAAE,EAAC,qBAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,qBAAqB,EAAC;iBACzG,CAAC,CAAC;gBACH,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;gBAEzC,MAAM,CAAC,OAAO,CACV,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAAE,2DAA2D,CAAC,CAAC;YAC3G,CAAC,CAAC,CAAC;YAEN,EAAE,CAAC,2FAA2F,EAAE,KAAK,IAAI,EAAE;gBACzG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACjF,gBAAgB,CAAC;oBACf,kBAAkB,EAAE;wBAClB,OAAO,EAAE,IAAI;wBACb,QAAQ,EAAE,IAAI;qBACf;oBACD,gBAAgB,EAAE,EAAC,qBAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,KAAK,EAAC;iBACzF,CAAC,CAAC;gBACH,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;gBAEzC,MAAM,CAAC,UAAU,CACb,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAAE,2DAA2D,CAAC,CAAC;YAC3G,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0EAA0E,EAAE,KAAK,IAAI,EAAE;YACxF,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACjF,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;YAChD,KAAK,CAAC,aAAa,GAAG,iCAAiC,CAAC;YAExD,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;YAEhC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAM,EAAE,oDAAoD,CAAC,CAAC;QAChG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6EAA6E,EAAE,KAAK,IAAI,EAAE;YAC3F,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAChF,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;YAChD,KAAK,CAAC,aAAa,GAAG,iCAAiC,CAAC;YAExD,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;YAEhC,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAE,oDAAoD,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,iBAAiB,CAAC;gBAC5C,UAAU,EAAE,cAAc,CAAC;oBACzB,CAAC,EAAC,WAAW,EAAE,EAAE,EAAE,aAAa,EAAE,CAAC,EAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,EAAC,KAAK,EAAE,CAAC,YAAY,CAAC,EAAC,EAAC,CAAC,EAAC,CAAC,EAAE,CAAC;4BAC3F,WAAW,EAAE,MAAM;yBACpB,CAAC;iBACH,CAAC;aACH,CAAC,CAAC;YACH,KAAK,CAAC,aAAa,GAAG,iCAAiC,CAAC;YAExD,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;YAEhC,MAAM,CAAC,WAAW,CAAC,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE;;aAE5C,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;YACnE,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,iBAAiB,CAAC,EAAC,UAAU,EAAE,cAAc,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;YACpG,KAAK,CAAC,aAAa,GAAG,iCAAiC,CAAC;YAExD,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;YAEhC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;YACnC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,oBAAoB,EAAE,YAAY,CAAC,WAAW,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gFAAgF,EAAE,KAAK,IAAI,EAAE;YAC9F,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,iBAAiB,CAAC,EAAC,UAAU,EAAE,cAAc,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;YACpG,KAAK,CAAC,aAAa,GAAG,iCAAiC,CAAC;YAExD,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;YAEhC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;YACnC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,oBAAoB,EAAE,YAAY,CAAC,WAAW,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACxG,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;QACzB,IAAI,OAA0D,CAAC;QAE/D,UAAU,CAAC,GAAG,EAAE;YACd,OAAO,GAAG,oBAAoB,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC;YACtD,gBAAgB,CAAC;gBACf,kBAAkB,EAAE;oBAClB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,IAAI;iBACf;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;YAC3E,gBAAgB,CAAC;gBACf,kBAAkB,EAAE;oBAClB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,KAAK;iBAChB;aACF,CAAC,CAAC;YACH,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;YACzC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+DAA+D,EAAE,KAAK,IAAI,EAAE;YAC7E,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;YACzC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;YAChE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,4CAA4C,EAAE,aAAa,CAAC,CAAC;YAC/G,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;YACzC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;YAC3E,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,4CAA4C,EAAE,aAAa,CAAC,CAAC;YAC/G,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;YACzC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAEnD,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACpE,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;YACnC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oFAAoF,EAAE,KAAK,IAAI,EAAE;YAClG,IAAI,OAAO,GAAmD,GAAG,EAAE,GAAE,CAAC,CAAC;YACvE,MAAM,6BAA6B,GAC/B,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,qBAAqB,EAAE,QAAQ,EAAE,EAAE;gBACnG,OAAO,GAAG,qBAAqB,CAAC;YAClC,CAAC,CAAC,CAAC;YACP,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,iBAAiB,CAAC,EAAC,UAAU,EAAE,cAAc,CAAC,CAAC,CAAC,EAAC,WAAW,EAAE,iBAAiB,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;YAClH,KAAK,CAAC,aAAa,GAAG,iCAAiC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAE3C,oDAAoD;YACpD,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;YAChC,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;YACrD,MAAM,CAAC,MAAM,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC;YAExD,gEAAgE;YAChE,OAAO,CAAC,OAAO,CAAC,CAAC;YACjB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;YAEnC,yEAAyE;YACzE,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,oBAAoB,EAAE,YAAY,CAAC,WAAW,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YACtG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wFAAwF,EAAE,KAAK,IAAI,EAAE;YACtG,MAAM,EAAC,OAAO,EAAE,QAAQ,EAAC,GAAG,oBAAoB,CAAC,cAAc,CAAC,CAAC;YACjE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,4CAA4C,EAAE,aAAa,CAAC,CAAC;YAC/G,IAAI,OAAO,GAAmD,GAAG,EAAE,GAAE,CAAC,CAAC;YACvE,MAAM,6BAA6B,GAC/B,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,iBAAiB,EAAE,QAAQ,EAAE,EAAE;gBAC/F,OAAO,GAAG,iBAAiB,CAAC;YAC9B,CAAC,CAAC,CAAC;YACP,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;YAChD,KAAK,CAAC,aAAa,GAAG,iCAAiC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAEnD,wCAAwC;YACxC,MAAM,CAAC,MAAM,CAAC,6BAA6B,CAAC,SAAS,CAAC,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,sBAAsB,EAAE,CAAC;YACpC,MAAM,CAAC,MAAM,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC;YAExD,0EAA0E;YAC1E,OAAO,CAAC,QAAQ,CAAC,CAAC;YAClB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;YAEnC,2CAA2C;YAC3C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;QACzB,IAAI,YAAiD,CAAC;QACtD,IAAI,qBACmG,CAAC;QACxG,IAAI,oBACkG,CAAC;QAEvG,UAAU,CAAC,GAAG,EAAE;YACd,YAAY,GAAG,oBAAoB,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC;YAChE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,4CAA4C,EAAE,aAAa,CAAC,CAAC;YAC/G,gBAAgB,CAAC;gBACf,kBAAkB,EAAE;oBAClB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,IAAI;iBACf;aACF,CAAC,CAAC;YAEH,qBAAqB;gBACjB,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC,WAAW,EAAE,CAAC;YACjG,oBAAoB;gBAChB,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,WAAW,EAAE,CAAC;QAClG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yGAAyG,EACzG,KAAK,IAAI,EAAE;YACT,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,6BAA6B,EAAE,CAAC;YACrD,YAAY,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;YAE5C,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;YACvB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;YAEvC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACrC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,MAAM,EAAE,8DAA8D,CAAC,CAAC;QAC9G,CAAC,CAAC,CAAC;QAEN,EAAE,CAAC,qFAAqF,EAAE,KAAK,IAAI,EAAE;YACnG,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,6BAA6B,EAAE,CAAC;YACrD,YAAY,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;YAE5C,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;YACvB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;YAEvC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,EAAE,YAAY,CAAC,WAAW,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAC1G,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,MAAM,EAAE,6DAA6D,CAAC,CAAC;QAC5G,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport type * as Persistence from '../../models/persistence/persistence.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as PanelCommon from '../../panels/common/common.js';\nimport {\n  cleanup,\n  createPatchWidget,\n  createPatchWidgetWithDiffView,\n  createTestFilesystem,\n  initializePersistenceImplForTests,\n  MockAidaAbortError,\n  mockAidaClient,\n  MockAidaFetchError,\n} from '../../testing/AiAssistanceHelpers.js';\nimport {updateHostConfig} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\nimport * as AiAssistance from './ai_assistance.js';\n\ndescribeWithMockConnection('PatchWidget', () => {\n  let showFreDialogStub: sinon.SinonStub<Parameters<typeof PanelCommon.FreDialog.show>, Promise<boolean>>;\n  beforeEach(() => {\n    Common.Settings.moduleSetting('ai-assistance-patching-fre-completed').set(true);\n    showFreDialogStub = sinon.stub(PanelCommon.FreDialog, 'show');\n\n    initializePersistenceImplForTests();\n  });\n\n  afterEach(() => {\n    cleanup();\n  });\n\n  describe('applyToWorkspace', () => {\n    beforeEach(() => {\n      createTestFilesystem('file://test');\n      Common.Settings.Settings.instance().createSetting('ai-assistance-patching-selected-project-id', 'file://test');\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n          patching: true,\n        },\n      });\n    });\n\n    describe('enterprise text cases', () => {\n      it('should FRE text include no logging case when the enterprise policy value is ALLOW_WITHOUT_LOGGING',\n         async () => {\n           Common.Settings.moduleSetting('ai-assistance-patching-fre-completed').set(false);\n           updateHostConfig({\n             devToolsFreestyler: {\n               enabled: true,\n               patching: true,\n             },\n             aidaAvailability: {enterprisePolicyValue: Root.Runtime.GenAiEnterprisePolicyValue.ALLOW_WITHOUT_LOGGING}\n           });\n           const {view, panel} = await createPatchWidget();\n           panel.changeSummary = 'body { background-color: red; }';\n\n           view.input.onApplyToWorkspace();\n\n           assert.isTrue(showFreDialogStub.called, 'Expected FreDialog to be shown but it\\'s not shown');\n           assert.exists(showFreDialogStub.lastCall.args[0].reminderItems.find(\n               reminderItem => reminderItem.content.toString().includes(\n                   'This data will not be used to improve Google’s AI models.')));\n         });\n\n      it('should FRE text not include no logging case when the enterprise policy value is ALLOW_WITHOUT_LOGGING',\n         async () => {\n           Common.Settings.moduleSetting('ai-assistance-patching-fre-completed').set(false);\n           updateHostConfig({\n             devToolsFreestyler: {\n               enabled: true,\n               patching: true,\n             },\n             aidaAvailability: {enterprisePolicyValue: Root.Runtime.GenAiEnterprisePolicyValue.ALLOW}\n           });\n           const {view, panel} = await createPatchWidget();\n           panel.changeSummary = 'body { background-color: red; }';\n\n           view.input.onApplyToWorkspace();\n\n           assert.isTrue(showFreDialogStub.called, 'Expected FreDialog to be shown but it\\'s not shown');\n           assert.notExists(showFreDialogStub.lastCall.args[0].reminderItems.find(\n               reminderItem => reminderItem.content.toString().includes(\n                   'This data will not be used to improve Google’s AI models.')));\n         });\n\n      it('should tooltip text include no logging case when the enterprise policy value is ALLOW_WITHOUT_LOGGING',\n         async () => {\n           Common.Settings.moduleSetting('ai-assistance-patching-fre-completed').set(false);\n           updateHostConfig({\n             devToolsFreestyler: {\n               enabled: true,\n               patching: true,\n             },\n             aidaAvailability: {enterprisePolicyValue: Root.Runtime.GenAiEnterprisePolicyValue.ALLOW_WITHOUT_LOGGING}\n           });\n           const {view} = await createPatchWidget();\n\n           assert.include(\n               view.input.applyToWorkspaceTooltipText, 'This data will not be used to improve Google’s AI models.');\n         });\n\n      it('should tooltip text not include no logging case when the enterprise policy value is ALLOW', async () => {\n        Common.Settings.moduleSetting('ai-assistance-patching-fre-completed').set(false);\n        updateHostConfig({\n          devToolsFreestyler: {\n            enabled: true,\n            patching: true,\n          },\n          aidaAvailability: {enterprisePolicyValue: Root.Runtime.GenAiEnterprisePolicyValue.ALLOW}\n        });\n        const {view} = await createPatchWidget();\n\n        assert.notInclude(\n            view.input.applyToWorkspaceTooltipText, 'This data will not be used to improve Google’s AI models.');\n      });\n    });\n\n    it('should show FRE dialog on applyToWorkspace click if the setting is false', async () => {\n      Common.Settings.moduleSetting('ai-assistance-patching-fre-completed').set(false);\n      const {view, panel} = await createPatchWidget();\n      panel.changeSummary = 'body { background-color: red; }';\n\n      view.input.onApplyToWorkspace();\n\n      assert.isTrue(showFreDialogStub.called, 'Expected FreDialog to be shown but it\\'s not shown');\n    });\n\n    it('should not show FRE dialog on applyToWorkspace click if the setting is true', async () => {\n      Common.Settings.moduleSetting('ai-assistance-patching-fre-completed').set(true);\n      const {view, panel} = await createPatchWidget();\n      panel.changeSummary = 'body { background-color: red; }';\n\n      view.input.onApplyToWorkspace();\n\n      assert.isFalse(showFreDialogStub.called, 'Expected FreDialog to be not shown but it\\'s shown');\n    });\n\n    it('should show files uploaded', async () => {\n      const {view, panel} = await createPatchWidget({\n        aidaClient: mockAidaClient([\n          [{explanation: '', functionCalls: [{name: 'updateFiles', args: {files: ['index.html']}}]}], [{\n            explanation: 'done',\n          }]\n        ]),\n      });\n      panel.changeSummary = 'body { background-color: red; }';\n\n      view.input.onApplyToWorkspace();\n\n      assert.strictEqual((await view.nextInput).sources, `Filenames in test.\nFiles:\n* index.html`);\n    });\n\n    it('should show error state when applyToWorkspace fails', async () => {\n      const {view, panel} = await createPatchWidget({aidaClient: mockAidaClient([[MockAidaFetchError]])});\n      panel.changeSummary = 'body { background-color: red; }';\n\n      view.input.onApplyToWorkspace();\n\n      const input = await view.nextInput;\n      assert.strictEqual(input.patchSuggestionState, AiAssistance.PatchWidget.PatchSuggestionState.ERROR);\n    });\n\n    it('should return back to initial state when the user aborts applying to workspace', async () => {\n      const {view, panel} = await createPatchWidget({aidaClient: mockAidaClient([[MockAidaAbortError]])});\n      panel.changeSummary = 'body { background-color: red; }';\n\n      view.input.onApplyToWorkspace();\n\n      const input = await view.nextInput;\n      assert.strictEqual(input.patchSuggestionState, AiAssistance.PatchWidget.PatchSuggestionState.INITIAL);\n    });\n  });\n\n  describe('workspace', () => {\n    let project: Persistence.FileSystemWorkspaceBinding.FileSystem;\n\n    beforeEach(() => {\n      project = createTestFilesystem('file://test').project;\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n          patching: true,\n        },\n      });\n    });\n\n    it('does not select a workspace project if patching is disabled', async () => {\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n          patching: false,\n        },\n      });\n      const {view} = await createPatchWidget();\n      assert.isUndefined(view.input.projectName);\n    });\n\n    it('does not select a workspace project if setting does not exist', async () => {\n      const {view} = await createPatchWidget();\n      assert.isUndefined(view.input.projectName);\n    });\n\n    it('selects a workspace project matching the setting', async () => {\n      Common.Settings.Settings.instance().createSetting('ai-assistance-patching-selected-project-id', 'file://test');\n      const {view} = await createPatchWidget();\n      assert.strictEqual(view.input.projectName, 'test');\n    });\n\n    it('removes a selected workspace project upon workspace removal', async () => {\n      Common.Settings.Settings.instance().createSetting('ai-assistance-patching-selected-project-id', 'file://test');\n      const {view} = await createPatchWidget();\n      assert.strictEqual(view.input.projectName, 'test');\n\n      Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n      const input = await view.nextInput;\n      assert.isUndefined(input.projectName);\n    });\n\n    it('selection is triggered by applyToWorkspace click if no workspace is (pre-)selected', async () => {\n      let handler: (project: Workspace.Workspace.Project) => void = () => {};\n      const showSelectWorkspaceDialogStub =\n          sinon.stub(AiAssistance.SelectWorkspaceDialog, 'show').callsFake((handleProjectSelected, _project) => {\n            handler = handleProjectSelected;\n          });\n      const {view, panel} = await createPatchWidget({aidaClient: mockAidaClient([[{explanation: 'suggested patch'}]])});\n      panel.changeSummary = 'body { background-color: red; }';\n      assert.isUndefined(view.input.projectName);\n\n      // Simulate clicking the \"Apply to workspace\" button\n      view.input.onApplyToWorkspace();\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.isTrue(showSelectWorkspaceDialogStub.calledOnce);\n\n      // Simulate selecting a workspace with the SelectWorkspaceDialog\n      handler(project);\n      const input = await view.nextInput;\n\n      // Assert that a patch has been generated and a project has been selected\n      assert.strictEqual(input.patchSuggestionState, AiAssistance.PatchWidget.PatchSuggestionState.SUCCESS);\n      assert.strictEqual(input.projectName, 'test');\n    });\n\n    it('selection is triggered by the \"change\"-button if a workspace is already (pre-)selected', async () => {\n      const {project: project2} = createTestFilesystem('file://test2');\n      Common.Settings.Settings.instance().createSetting('ai-assistance-patching-selected-project-id', 'file://test');\n      let handler: (project: Workspace.Workspace.Project) => void = () => {};\n      const showSelectWorkspaceDialogStub =\n          sinon.stub(AiAssistance.SelectWorkspaceDialog, 'show').callsFake((onProjectSelected, _project) => {\n            handler = onProjectSelected;\n          });\n      const {view, panel} = await createPatchWidget();\n      panel.changeSummary = 'body { background-color: red; }';\n      assert.strictEqual(view.input.projectName, 'test');\n\n      // Simulate clicking the \"Change\" button\n      assert.isTrue(showSelectWorkspaceDialogStub.notCalled);\n      view.input.onChangeWorkspaceClick();\n      assert.isTrue(showSelectWorkspaceDialogStub.calledOnce);\n\n      // Simulate selecting a different workspace with the SelectWorkspaceDialog\n      handler(project2);\n      const input = await view.nextInput;\n\n      // Assert that the project has been updated\n      assert.strictEqual(input.projectName, 'test2');\n    });\n  });\n\n  describe('diff view', () => {\n    let uiSourceCode: Workspace.UISourceCode.UISourceCode;\n    let commitWorkingCopyStub:\n        sinon.SinonStub<Parameters<typeof Workspace.UISourceCode.UISourceCode.prototype.commitWorkingCopy>>;\n    let resetWorkingCopyStub:\n        sinon.SinonStub<Parameters<typeof Workspace.UISourceCode.UISourceCode.prototype.resetWorkingCopy>>;\n\n    beforeEach(() => {\n      uiSourceCode = createTestFilesystem('file://test').uiSourceCode;\n      Common.Settings.Settings.instance().createSetting('ai-assistance-patching-selected-project-id', 'file://test');\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n          patching: true,\n        },\n      });\n\n      commitWorkingCopyStub =\n          sinon.stub(Workspace.UISourceCode.UISourceCode.prototype, 'commitWorkingCopy').callThrough();\n      resetWorkingCopyStub =\n          sinon.stub(Workspace.UISourceCode.UISourceCode.prototype, 'resetWorkingCopy').callThrough();\n    });\n\n    it('save all should commit the working copy of the changed UI codes to the disk and render savedToDisk view',\n       async () => {\n         const {view} = await createPatchWidgetWithDiffView();\n         uiSourceCode.setWorkingCopy('working copy');\n\n         view.input.onSaveAll();\n         const nextInput = await view.nextInput;\n\n         assert.isTrue(nextInput.savedToDisk);\n         assert.isTrue(commitWorkingCopyStub.called, 'Expected commitWorkingCopy to be called but it is not called');\n       });\n\n    it('discard should discard the working copy and render the view without patchSuggestion', async () => {\n      const {view} = await createPatchWidgetWithDiffView();\n      uiSourceCode.setWorkingCopy('working copy');\n\n      view.input.onDiscard();\n      const nextInput = await view.nextInput;\n\n      assert.strictEqual(nextInput.patchSuggestionState, AiAssistance.PatchWidget.PatchSuggestionState.INITIAL);\n      assert.isTrue(resetWorkingCopyStub.called, 'Expected resetWorkingCopy to be called but it is not called');\n    });\n  });\n});\n"]}