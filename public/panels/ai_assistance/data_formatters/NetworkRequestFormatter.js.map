{"version":3,"file":"NetworkRequestFormatter.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/ai_assistance/data_formatters/NetworkRequestFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport * as Logs from '../../../models/logs/logs.js';\nimport * as Network from '../../network/network.js';\n\nconst MAX_HEADERS_SIZE = 1000;\n\n/**\n * Sanitizes the set of headers, removing values that are not on the allow-list and replacing them with '<redacted>'.\n */\nfunction sanitizeHeaders(headers: Array<{name: string, value: string}>): Array<{name: string, value: string}> {\n  return headers.map(header => {\n    if (NetworkRequestFormatter.allowHeader(header.name)) {\n      return header;\n    }\n    return {name: header.name, value: '<redacted>'};\n  });\n}\n\nexport class NetworkRequestFormatter {\n  static allowHeader(headerName: string): boolean {\n    return allowedHeaders.has(headerName.toLowerCase().trim());\n  }\n  static formatHeaders(title: string, headers: Array<{name: string, value: string}>, addListPrefixToEachLine?: boolean):\n      string {\n    return formatLines(\n        title, sanitizeHeaders(headers).map(header => {\n          const prefix = addListPrefixToEachLine ? '- ' : '';\n          return prefix + header.name + ': ' + header.value + '\\n';\n        }),\n        MAX_HEADERS_SIZE);\n  }\n\n  static formatInitiatorUrl(initiatorUrl: string, allowedOrigin: string): string {\n    const initiatorOrigin = new URL(initiatorUrl).origin;\n    if (initiatorOrigin === allowedOrigin) {\n      return initiatorUrl;\n    }\n    return '<redacted cross-origin initiator URL>';\n  }\n\n  #request: SDK.NetworkRequest.NetworkRequest;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    this.#request = request;\n  }\n\n  formatRequestHeaders(): string {\n    return NetworkRequestFormatter.formatHeaders('Request headers:', this.#request.requestHeaders());\n  }\n\n  formatResponseHeaders(): string {\n    return NetworkRequestFormatter.formatHeaders('Response headers:', this.#request.responseHeaders);\n  }\n\n  /**\n   * Note: nothing here should include information from origins other than\n   * the request's origin.\n   */\n  formatNetworkRequest(): string {\n    return `Request: ${this.#request.url()}\n\n${this.formatRequestHeaders()}\n\n${this.formatResponseHeaders()}\n\nResponse status: ${this.#request.statusCode} ${this.#request.statusText}\n\nRequest timing:\\n${this.formatNetworkRequestTiming()}\n\nRequest initiator chain:\\n${this.formatRequestInitiatorChain()}`;\n  }\n\n  /**\n   * Note: nothing here should include information from origins other than\n   * the request's origin.\n   */\n  formatRequestInitiatorChain(): string {\n    const allowedOrigin = new URL(this.#request.url()).origin;\n    let initiatorChain = '';\n    let lineStart = '- URL: ';\n    const graph = Logs.NetworkLog.NetworkLog.instance().initiatorGraphForRequest(this.#request);\n\n    for (const initiator of Array.from(graph.initiators).reverse()) {\n      initiatorChain = initiatorChain + lineStart +\n          NetworkRequestFormatter.formatInitiatorUrl(initiator.url(), allowedOrigin) + '\\n';\n      lineStart = '\\t' + lineStart;\n      if (initiator === this.#request) {\n        initiatorChain =\n            this.#formatRequestInitiated(graph.initiated, this.#request, initiatorChain, lineStart, allowedOrigin);\n      }\n    }\n\n    return initiatorChain.trim();\n  }\n\n  formatNetworkRequestTiming(): string {\n    const calculator = Network.NetworkPanel.NetworkPanel.instance().networkLogView.timeCalculator();\n    const results = Network.RequestTimingView.RequestTimingView.calculateRequestTimeRanges(\n        this.#request, calculator.minimumBoundary());\n\n    function getDuration(name: string): string|undefined {\n      const result = results.find(r => r.name === name);\n      if (!result) {\n        return;\n      }\n      return i18n.TimeUtilities.secondsToString(result.end - result.start, true);\n    }\n\n    const labels = [\n      {\n        label: 'Queued at (timestamp)',\n        value: calculator.formatValue(this.#request.issueTime(), 2),\n      },\n      {\n        label: 'Started at (timestamp)',\n        value: calculator.formatValue(this.#request.startTime, 2),\n      },\n      {\n        label: 'Queueing (duration)',\n        value: getDuration('queueing'),\n      },\n      {\n        label: 'Connection start (stalled) (duration)',\n        value: getDuration('blocking'),\n      },\n      {\n        label: 'Request sent (duration)',\n        value: getDuration('sending'),\n      },\n      {\n        label: 'Waiting for server response (duration)',\n        value: getDuration('waiting'),\n      },\n      {\n        label: 'Content download (duration)',\n        value: getDuration('receiving'),\n      },\n      {\n        label: 'Duration (duration)',\n        value: getDuration('total'),\n      },\n    ];\n\n    return labels.filter(label => Boolean(label.value)).map(label => `${label.label}: ${label.value}`).join('\\n');\n  }\n\n  #formatRequestInitiated(\n      initiated: Map<SDK.NetworkRequest.NetworkRequest, SDK.NetworkRequest.NetworkRequest>,\n      parentRequest: SDK.NetworkRequest.NetworkRequest,\n      initiatorChain: string,\n      lineStart: string,\n      allowedOrigin: string,\n      ): string {\n    const visited = new Set<SDK.NetworkRequest.NetworkRequest>();\n\n    // this.request should be already in the tree when build initiator part\n    visited.add(this.#request);\n    for (const [keyRequest, initiatedRequest] of initiated.entries()) {\n      if (initiatedRequest === parentRequest) {\n        if (!visited.has(keyRequest)) {\n          visited.add(keyRequest);\n          initiatorChain = initiatorChain + lineStart +\n              NetworkRequestFormatter.formatInitiatorUrl(keyRequest.url(), allowedOrigin) + '\\n';\n          initiatorChain =\n              this.#formatRequestInitiated(initiated, keyRequest, initiatorChain, '\\t' + lineStart, allowedOrigin);\n        }\n      }\n    }\n\n    return initiatorChain;\n  }\n}\n\n// Header names that could be included in the prompt, lowercase.\nconst allowedHeaders = new Set([\n  ':authority',\n  ':method',\n  ':path',\n  ':scheme',\n  'a-im',\n  'accept-ch',\n  'accept-charset',\n  'accept-datetime',\n  'accept-encoding',\n  'accept-language',\n  'accept-patch',\n  'accept-ranges',\n  'accept',\n  'access-control-allow-credentials',\n  'access-control-allow-headers',\n  'access-control-allow-methods',\n  'access-control-allow-origin',\n  'access-control-expose-headers',\n  'access-control-max-age',\n  'access-control-request-headers',\n  'access-control-request-method',\n  'age',\n  'allow',\n  'alt-svc',\n  'cache-control',\n  'connection',\n  'content-disposition',\n  'content-encoding',\n  'content-language',\n  'content-location',\n  'content-range',\n  'content-security-policy',\n  'content-type',\n  'correlation-id',\n  'date',\n  'delta-base',\n  'dnt',\n  'expect-ct',\n  'expect',\n  'expires',\n  'forwarded',\n  'front-end-https',\n  'host',\n  'http2-settings',\n  'if-modified-since',\n  'if-range',\n  'if-unmodified-source',\n  'im',\n  'last-modified',\n  'link',\n  'location',\n  'max-forwards',\n  'nel',\n  'origin',\n  'permissions-policy',\n  'pragma',\n  'preference-applied',\n  'proxy-connection',\n  'public-key-pins',\n  'range',\n  'referer',\n  'refresh',\n  'report-to',\n  'retry-after',\n  'save-data',\n  'sec-gpc',\n  'server',\n  'status',\n  'strict-transport-security',\n  'te',\n  'timing-allow-origin',\n  'tk',\n  'trailer',\n  'transfer-encoding',\n  'upgrade-insecure-requests',\n  'upgrade',\n  'user-agent',\n  'vary',\n  'via',\n  'warning',\n  'www-authenticate',\n  'x-att-deviceid',\n  'x-content-duration',\n  'x-content-security-policy',\n  'x-content-type-options',\n  'x-correlation-id',\n  'x-forwarded-for',\n  'x-forwarded-host',\n  'x-forwarded-proto',\n  'x-frame-options',\n  'x-http-method-override',\n  'x-powered-by',\n  'x-redirected-by',\n  'x-request-id',\n  'x-requested-with',\n  'x-ua-compatible',\n  'x-wap-profile',\n  'x-webkit-csp',\n  'x-xss-protection',\n]);\n\nfunction formatLines(title: string, lines: string[], maxLength: number): string {\n  let result = '';\n  for (const line of lines) {\n    if (result.length + line.length > maxLength) {\n      break;\n    }\n    result += line;\n  }\n  result = result.trim();\n  return result && title ? title + '\\n' + result : result;\n}\n"]}