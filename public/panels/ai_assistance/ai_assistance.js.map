{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/ai_assistance/AiAssistancePanel.ts", "aiAssistancePanel.css.js", "../../../../../../front_end/panels/ai_assistance/components/ChatView.ts", "../../../../../../front_end/panels/ai_assistance/PatchWidget.ts", "../../../../../../front_end/panels/ai_assistance/SelectWorkspaceDialog.ts", "selectWorkspaceDialog.css.js", "components/chatView.css.js", "../../../../../../front_end/panels/ai_assistance/components/MarkdownRendererWithCodeBlock.ts", "../../../../../../front_end/panels/ai_assistance/components/UserActionRow.ts", "components/userActionRow.css.js", "../../../../../../front_end/panels/ai_assistance/components/ExploreWidget.ts", "components/exploreWidget.css.js"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as AiAssistanceModel from '../../models/ai_assistance/ai_assistance.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as Snackbars from '../../ui/components/snackbars/snackbars.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as ElementsPanel from '../elements/elements.js';\nimport * as NetworkForward from '../network/forward/forward.js';\nimport * as NetworkPanel from '../network/network.js';\nimport * as SourcesPanel from '../sources/sources.js';\nimport * as TimelinePanel from '../timeline/timeline.js';\nimport * as TimelineUtils from '../timeline/utils/utils.js';\n\nimport aiAssistancePanelStyles from './aiAssistancePanel.css.js';\nimport {\n  type ChatMessage,\n  ChatMessageEntity,\n  ChatView,\n  type ImageInputData,\n  type ModelChatMessage,\n  type Props as ChatViewProps,\n  State as ChatViewState,\n  type Step\n} from './components/ChatView.js';\nimport {ExploreWidget} from './components/ExploreWidget.js';\nimport {isAiAssistancePatchingEnabled} from './PatchWidget.js';\n\nconst {html} = Lit;\n\nconst AI_ASSISTANCE_SEND_FEEDBACK = 'https://crbug.com/364805393' as Platform.DevToolsPath.UrlString;\nconst AI_ASSISTANCE_HELP = 'https://developer.chrome.com/docs/devtools/ai-assistance';\nconst SCREENSHOT_QUALITY = 100;\nconst SHOW_LOADING_STATE_TIMEOUT = 100;\nconst JPEG_MIME_TYPE = 'image/jpeg';\n\nconst UIStrings = {\n  /**\n   *@description AI assistance UI text creating a new chat.\n   */\n  newChat: 'New chat',\n  /**\n   *@description AI assistance UI tooltip text for the help button.\n   */\n  help: 'Help',\n  /**\n   *@description AI assistant UI tooltip text for the settings button (gear icon).\n   */\n  settings: 'Settings',\n  /**\n   *@description AI assistant UI tooltip sending feedback.\n   */\n  sendFeedback: 'Send feedback',\n  /**\n   *@description Announcement text for screen readers when a new chat is created.\n   */\n  newChatCreated: 'New chat created',\n  /**\n   *@description Announcement text for screen readers when the chat is deleted.\n   */\n  chatDeleted: 'Chat deleted',\n  /**\n   *@description AI assistance UI text creating selecting a history entry.\n   */\n  history: 'History',\n  /**\n   *@description AI assistance UI text deleting the current chat session from local history.\n   */\n  deleteChat: 'Delete local chat',\n  /**\n   *@description AI assistance UI text that deletes all local history entries.\n   */\n  clearChatHistory: 'Clear local chats',\n  /**\n   *@description AI assistance UI text explains that he user had no pas conversations.\n   */\n  noPastConversations: 'No past conversations',\n  /**\n   * @description Placeholder text for an inactive text field. When active, it's used for the user's input to the GenAI assistance.\n   */\n  followTheSteps: 'Follow the steps above to ask a question',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimerForEmptyState: 'This is an experimental AI feature and won\\'t always get it right.',\n  /**\n   *@description Notification shown to the user whenever DevTools receives an external request.\n   */\n  externalRequestReceived: '`DevTools` received an external request',\n} as const;\n\n/*\n* Strings that don't need to be translated at this time.\n*/\nconst UIStringsNotTranslate = {\n  /**\n   *@description Announcement text for screen readers when the conversation starts.\n   */\n  answerLoading: 'Answer loading',\n  /**\n   *@description Announcement text for screen readers when the answer comes.\n   */\n  answerReady: 'Answer ready',\n  /**\n   * @description Placeholder text for the input shown when the conversation is blocked because a cross-origin context was selected.\n   */\n  crossOriginError: 'To talk about data from another origin, start a new chat',\n  /**\n   *@description Placeholder text for the chat UI input.\n   */\n  inputPlaceholderForStyling: 'Ask a question about the selected element',\n  /**\n   *@description Placeholder text for the chat UI input.\n   */\n  inputPlaceholderForNetwork: 'Ask a question about the selected network request',\n  /**\n   *@description Placeholder text for the chat UI input.\n   */\n  inputPlaceholderForFile: 'Ask a question about the selected file',\n  /**\n   *@description Placeholder text for the chat UI input.\n   */\n  inputPlaceholderForPerformance: 'Ask a question about the selected item and its call tree',\n  /**\n   *@description Placeholder text for the chat UI input.\n   */\n  inputPlaceholderForPerformanceWithNoRecording: 'Record a performance trace and select an item to ask a question',\n  /**\n   *@description Placeholder text for the chat UI input when there is no context selected.\n   */\n  inputPlaceholderForStylingNoContext: 'Select an element to ask a question',\n  /**\n   *@description Placeholder text for the chat UI input when there is no context selected.\n   */\n  inputPlaceholderForNetworkNoContext: 'Select a network request to ask a question',\n  /**\n   *@description Placeholder text for the chat UI input when there is no context selected.\n   */\n  inputPlaceholderForFileNoContext: 'Select a file to ask a question',\n  /**\n   *@description Placeholder text for the chat UI input when there is no context selected.\n   */\n  inputPlaceholderForPerformanceNoContext: 'Select an item to ask a question',\n  /**\n   *@description Placeholder text for the chat UI input.\n   */\n  inputPlaceholderForPerformanceInsights: 'Ask a question about the selected performance insight',\n  /**\n   *@description Placeholder text for the chat UI input.\n   */\n  inputPlaceholderForPerformanceInsightsNoContext: 'Select a performance insight to ask a question',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimerForStyling:\n      'Chat messages and any data the inspected page can access via Web APIs are sent to Google and may be seen by human reviewers to improve this feature. This is an experimental AI feature and won’t always get it right.',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimerForStylingEnterpriseNoLogging:\n      'Chat messages and any data the inspected page can access via Web APIs are sent to Google. The content you submit and that is generated by this feature will not be used to improve Google’s AI models. This is an experimental AI feature and won’t always get it right.',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimerForNetwork:\n      'Chat messages and the selected network request are sent to Google and may be seen by human reviewers to improve this feature. This is an experimental AI feature and won’t always get it right.',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimerForNetworkEnterpriseNoLogging:\n      'Chat messages and the selected network request are sent to Google. The content you submit and that is generated by this feature will not be used to improve Google’s AI models. This is an experimental AI feature and won’t always get it right.',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimerForFile:\n      'Chat messages and the selected file are sent to Google and may be seen by human reviewers to improve this feature. This is an experimental AI feature and won\\'t always get it right.',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimerForFileEnterpriseNoLogging:\n      'Chat messages and the selected file are sent to Google. The content you submit and that is generated by this feature will not be used to improve Google’s AI models. This is an experimental AI feature and won’t always get it right.',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimerForPerformance:\n      'Chat messages and trace data from your performance trace are sent to Google and may be seen by human reviewers to improve this feature. This is an experimental AI feature and won\\'t always get it right.',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimerForPerformanceEnterpriseNoLogging:\n      'Chat messages and data from your performance trace are sent to Google. The content you submit and that is generated by this feature will not be used to improve Google’s AI models. This is an experimental AI feature and won’t always get it right.',\n  /**\n   * @description Message displayed in toast in case of any failures while taking a screenshot of the page.\n   */\n  screenshotFailureMessage: 'Failed to take a screenshot. Please try again.',\n  /**\n   * @description Message displayed in toast in case of any failures while uploading an image file as input.\n   */\n  uploadImageFailureMessage: 'Failed to upload image. Please try again.',\n  /**\n   * @description Error message shown when AI assistance is not enabled in DevTools settings.\n   */\n  enableInSettings: 'For AI features to be available, you need to enable AI assistance in DevTools settings.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/ai_assistance/AiAssistancePanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst lockedString = i18n.i18n.lockedString;\n\nfunction selectedElementFilter(maybeNode: SDK.DOMModel.DOMNode|null): SDK.DOMModel.DOMNode|null {\n  if (maybeNode) {\n    return maybeNode.nodeType() === Node.ELEMENT_NODE ? maybeNode : null;\n  }\n\n  return null;\n}\n\nasync function getEmptyStateSuggestions(\n    context: AiAssistanceModel.ConversationContext<unknown>|null,\n    conversationType?: AiAssistanceModel.ConversationType): Promise<AiAssistanceModel.ConversationSuggestion[]> {\n  if (context) {\n    const specialSuggestions = await context.getSuggestions();\n\n    if (specialSuggestions) {\n      return specialSuggestions;\n    }\n  }\n\n  if (!conversationType) {\n    return [];\n  }\n\n  switch (conversationType) {\n    case AiAssistanceModel.ConversationType.STYLING:\n      return [\n        {title: 'What can you help me with?', jslogContext: 'styling-default'},\n        {title: 'Why isn’t this element visible?', jslogContext: 'styling-default'},\n        {title: 'How do I center this element?', jslogContext: 'styling-default'},\n      ];\n    case AiAssistanceModel.ConversationType.FILE:\n      return [\n        {title: 'What does this script do?', jslogContext: 'file-default'},\n        {title: 'Is the script optimized for performance?', jslogContext: 'file-default'},\n        {title: 'Does the script handle user input safely?', jslogContext: 'file-default'},\n      ];\n    case AiAssistanceModel.ConversationType.NETWORK:\n      return [\n        {title: 'Why is this network request taking so long?', jslogContext: 'network-default'},\n        {title: 'Are there any security headers present?', jslogContext: 'network-default'},\n        {title: 'Why is the request failing?', jslogContext: 'network-default'},\n      ];\n    case AiAssistanceModel.ConversationType.PERFORMANCE:\n      return [\n        {title: 'What\\'s the purpose of this work?', jslogContext: 'performance-default'},\n        {title: 'Where is time being spent?', jslogContext: 'performance-default'},\n        {title: 'How can I optimize this?', jslogContext: 'performance-default'},\n      ];\n    case AiAssistanceModel.ConversationType.PERFORMANCE_INSIGHT:\n      return [\n        {title: 'Help me optimize my page load performance', jslogContext: 'performance-insights-default'},\n      ];\n  }\n}\n\ninterface ToolbarViewInput {\n  onNewChatClick: () => void;\n  populateHistoryMenu: (contextMenu: UI.ContextMenu.ContextMenu) => void;\n  onDeleteClick: () => void;\n  onHelpClick: () => void;\n  onSettingsClick: () => void;\n  showDeleteHistoryAction: boolean;\n  showChatActions: boolean;\n}\n\nexport type ViewInput = ChatViewProps&ToolbarViewInput;\nexport interface PanelViewOutput {\n  chatView?: ChatView;\n}\n\ntype View = (input: ViewInput, output: PanelViewOutput, target: HTMLElement) => void;\n\nfunction toolbarView(input: ToolbarViewInput): Lit.LitTemplate {\n  // clang-format off\n  return html`\n    <div class=\"toolbar-container\" role=\"toolbar\" .jslogContext=${VisualLogging.toolbar()}>\n      <devtools-toolbar class=\"freestyler-left-toolbar\" role=\"presentation\">\n      ${input.showChatActions\n        ? html`<devtools-button\n          title=${i18nString(UIStrings.newChat)}\n          aria-label=${i18nString(UIStrings.newChat)}\n          .iconName=${'plus'}\n          .jslogContext=${'freestyler.new-chat'}\n          .variant=${Buttons.Button.Variant.TOOLBAR}\n          @click=${input.onNewChatClick}></devtools-button>\n        <div class=\"toolbar-divider\"></div>\n        <devtools-menu-button\n          title=${i18nString(UIStrings.history)}\n          aria-label=${i18nString(UIStrings.history)}\n          .iconName=${'history'}\n          .jslogContext=${'freestyler.history'}\n          .populateMenuCall=${input.populateHistoryMenu}></devtools-menu-button>`\n          : Lit.nothing}\n        ${input.showDeleteHistoryAction\n          ? html`<devtools-button\n              title=${i18nString(UIStrings.deleteChat)}\n              aria-label=${i18nString(UIStrings.deleteChat)}\n              .iconName=${'bin'}\n              .jslogContext=${'freestyler.delete'}\n              .variant=${Buttons.Button.Variant.TOOLBAR}\n              @click=${input.onDeleteClick}></devtools-button>`\n          : Lit.nothing}\n      </devtools-toolbar>\n      <devtools-toolbar class=\"freestyler-right-toolbar\" role=\"presentation\">\n        <x-link\n          class=\"toolbar-feedback-link devtools-link\"\n          title=${UIStrings.sendFeedback}\n          href=${AI_ASSISTANCE_SEND_FEEDBACK}\n          jslog=${VisualLogging.link().track({click: true, keydown:'Enter|Space'}).context('freestyler.send-feedback')}\n        >${UIStrings.sendFeedback}</x-link>\n        <div class=\"toolbar-divider\"></div>\n        <devtools-button\n          title=${i18nString(UIStrings.help)}\n          aria-label=${i18nString(UIStrings.help)}\n          .iconName=${'help'}\n          .jslogContext=${'freestyler.help'}\n          .variant=${Buttons.Button.Variant.TOOLBAR}\n          @click=${input.onHelpClick}></devtools-button>\n        <devtools-button\n          title=${i18nString(UIStrings.settings)}\n          aria-label=${i18nString(UIStrings.settings)}\n          .iconName=${'gear'}\n          .jslogContext=${'freestyler.settings'}\n          .variant=${Buttons.Button.Variant.TOOLBAR}\n          @click=${input.onSettingsClick}></devtools-button>\n      </devtools-toolbar>\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction defaultView(input: ViewInput, output: PanelViewOutput, target: HTMLElement): void {\n  // clang-format off\n  Lit.render(\n    html`\n      ${toolbarView(input)}\n      <div class=\"ai-assistance-view-container\">\n        ${input.state !== ChatViewState.EXPLORE_VIEW\n          ? html` <devtools-ai-chat-view\n              .props=${input}\n              ${Lit.Directives.ref((el: Element | undefined) => {\n                if (!el || !(el instanceof ChatView)) {\n                  return;\n                }\n\n                output.chatView = el;\n              })}\n            ></devtools-ai-chat-view>`\n          : html`<devtools-widget\n              class=\"explore\"\n              .widgetConfig=${UI.Widget.widgetConfig(ExploreWidget)}\n            ></devtools-widget>`}\n      </div>\n    `,\n    target,\n    { host: input },\n  );\n  // clang-format on\n}\n\nfunction createNodeContext(node: SDK.DOMModel.DOMNode|null): AiAssistanceModel.NodeContext|null {\n  if (!node) {\n    return null;\n  }\n  return new AiAssistanceModel.NodeContext(node);\n}\n\nfunction createFileContext(file: Workspace.UISourceCode.UISourceCode|null): AiAssistanceModel.FileContext|null {\n  if (!file) {\n    return null;\n  }\n  return new AiAssistanceModel.FileContext(file);\n}\n\nfunction createRequestContext(request: SDK.NetworkRequest.NetworkRequest|null): AiAssistanceModel.RequestContext|null {\n  if (!request) {\n    return null;\n  }\n  return new AiAssistanceModel.RequestContext(request);\n}\n\nfunction createCallTreeContext(callTree: TimelineUtils.AICallTree.AICallTree|null): AiAssistanceModel.CallTreeContext|\n    null {\n  if (!callTree) {\n    return null;\n  }\n  return new AiAssistanceModel.CallTreeContext(callTree);\n}\nfunction createPerfInsightContext(insight: TimelineUtils.InsightAIContext.ActiveInsight|null):\n    AiAssistanceModel.InsightContext|null {\n  if (!insight) {\n    return null;\n  }\n  return new AiAssistanceModel.InsightContext(insight);\n}\n\nfunction agentToConversationType(agent: AiAssistanceModel.AiAgent<unknown>): AiAssistanceModel.ConversationType {\n  if (agent instanceof AiAssistanceModel.StylingAgent) {\n    return AiAssistanceModel.ConversationType.STYLING;\n  }\n\n  if (agent instanceof AiAssistanceModel.NetworkAgent) {\n    return AiAssistanceModel.ConversationType.NETWORK;\n  }\n  if (agent instanceof AiAssistanceModel.FileAgent) {\n    return AiAssistanceModel.ConversationType.FILE;\n  }\n\n  if (agent instanceof AiAssistanceModel.PerformanceAgent) {\n    return AiAssistanceModel.ConversationType.PERFORMANCE;\n  }\n\n  if (agent instanceof AiAssistanceModel.PerformanceInsightsAgent) {\n    return AiAssistanceModel.ConversationType.PERFORMANCE_INSIGHT;\n  }\n\n  throw new Error('Provided agent does not have a corresponding conversation type');\n}\n\nasync function inspectElementBySelector(selector: string): Promise<SDK.DOMModel.DOMNode|null> {\n  const whitespaceTrimmedQuery = selector.trim();\n  if (!whitespaceTrimmedQuery.length) {\n    return null;\n  }\n\n  const showUAShadowDOM = Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom').get();\n  const domModels = SDK.TargetManager.TargetManager.instance().models(SDK.DOMModel.DOMModel, {scoped: true});\n\n  const performSearchPromises =\n      domModels.map(domModel => domModel.performSearch(whitespaceTrimmedQuery, showUAShadowDOM));\n  const resultCounts = await Promise.all(performSearchPromises);\n\n  // If the selector matches multiple times, this returns the first match.\n  const index = resultCounts.findIndex(value => value > 0);\n  if (index >= 0) {\n    return await domModels[index].searchResult(0);\n  }\n  return null;\n}\n\nlet panelInstance: AiAssistancePanel;\nexport class AiAssistancePanel extends UI.Panel.Panel {\n  static panelName = 'freestyler';\n\n  // NodeJS debugging does not have Elements panel, thus this action might not exist.\n  #toggleSearchElementAction?: UI.ActionRegistration.Action;\n  #aidaClient: Host.AidaClient.AidaClient;\n  #viewOutput: PanelViewOutput = {};\n  #serverSideLoggingEnabled = isAiAssistanceServerSideLoggingEnabled();\n  #aiAssistanceEnabledSetting: Common.Settings.Setting<boolean>|undefined;\n  #changeManager = new AiAssistanceModel.ChangeManager();\n  #mutex = new Common.Mutex.Mutex();\n\n  #conversationAgent?: AiAssistanceModel.AiAgent<unknown>;\n  #conversation?: AiAssistanceModel.Conversation;\n  #historicalConversations: AiAssistanceModel.Conversation[] = [];\n\n  #selectedFile: AiAssistanceModel.FileContext|null = null;\n  #selectedElement: AiAssistanceModel.NodeContext|null = null;\n  #selectedCallTree: AiAssistanceModel.CallTreeContext|null = null;\n  #selectedPerformanceInsight: AiAssistanceModel.InsightContext|null = null;\n  #selectedRequest: AiAssistanceModel.RequestContext|null = null;\n\n  // Messages displayed in the `ChatView` component.\n  #messages: ChatMessage[] = [];\n  // Indicates whether the new conversation context is blocked due to cross-origin restrictions.\n  // This happens when the conversation's context has a different\n  // origin than the selected context.\n  #blockedByCrossOrigin = false;\n  // Whether the UI should show loading or not.\n  #isLoading = false;\n  // Selected conversation context. The reason we keep this as a\n  // state field rather than using `#getConversationContext` is that,\n  // there is a case where the context differs from the selectedElement (or other selected context type).\n  // Specifically, it allows restoring the previous context when a new selection is cross-origin.\n  // See `#onContextSelectionChanged` for details.\n  #selectedContext: AiAssistanceModel.ConversationContext<unknown>|null = null;\n  // Stores the availability status of the `AidaClient` and the reason for unavailability, if any.\n  #aidaAvailability: Host.AidaClient.AidaAccessPreconditions;\n  // Info of the currently logged in user.\n  #userInfo: {\n    accountImage?: string,\n    accountFullName?: string,\n  };\n  #imageInput?: ImageInputData;\n  // Used to disable send button when there is not text input.\n  #isTextInputEmpty = true;\n  #timelinePanelInstance: TimelinePanel.TimelinePanel.TimelinePanel|null = null;\n\n  constructor(private view: View = defaultView, {aidaClient, aidaAvailability, syncInfo}: {\n    aidaClient: Host.AidaClient.AidaClient,\n    aidaAvailability: Host.AidaClient.AidaAccessPreconditions,\n    syncInfo: Host.InspectorFrontendHostAPI.SyncInformation,\n  }) {\n    super(AiAssistancePanel.panelName);\n    this.registerRequiredCSS(aiAssistancePanelStyles);\n    this.#aiAssistanceEnabledSetting = this.#getAiAssistanceEnabledSetting();\n\n    this.#aidaClient = aidaClient;\n    this.#aidaAvailability = aidaAvailability;\n    this.#userInfo = {\n      accountImage: syncInfo.accountImage,\n      accountFullName: syncInfo.accountFullName,\n    };\n\n    this.#historicalConversations = AiAssistanceModel.AiHistoryStorage.instance().getHistory().map(item => {\n      return new AiAssistanceModel.Conversation(item.type, item.history, item.id, true, item.isExternal);\n    });\n\n    if (UI.ActionRegistry.ActionRegistry.instance().hasAction('elements.toggle-element-search')) {\n      this.#toggleSearchElementAction =\n          UI.ActionRegistry.ActionRegistry.instance().getAction('elements.toggle-element-search');\n    }\n  }\n\n  #getChatUiState(): ChatViewState {\n    const blockedByAge = Root.Runtime.hostConfig.aidaAvailability?.blockedByAge === true;\n\n    // Special case due to the way its handled downstream quirks\n    if (this.#aidaAvailability !== Host.AidaClient.AidaAccessPreconditions.AVAILABLE) {\n      return ChatViewState.CHAT_VIEW;\n    }\n\n    if (!this.#aiAssistanceEnabledSetting?.getIfNotDisabled() || blockedByAge) {\n      return ChatViewState.CONSENT_VIEW;\n    }\n\n    if (this.#conversation?.type) {\n      return ChatViewState.CHAT_VIEW;\n    }\n\n    return ChatViewState.EXPLORE_VIEW;\n  }\n\n  #getAiAssistanceEnabledSetting(): Common.Settings.Setting<boolean>|undefined {\n    try {\n      return Common.Settings.moduleSetting('ai-assistance-enabled') as Common.Settings.Setting<boolean>;\n    } catch {\n      return;\n    }\n  }\n\n  #createAgent(conversationType: AiAssistanceModel.ConversationType): AiAssistanceModel.AiAgent<unknown> {\n    const options = {\n      aidaClient: this.#aidaClient,\n      serverSideLoggingEnabled: this.#serverSideLoggingEnabled,\n    };\n    let agent: AiAssistanceModel.AiAgent<unknown>;\n    switch (conversationType) {\n      case AiAssistanceModel.ConversationType.STYLING: {\n        agent = new AiAssistanceModel.StylingAgent({\n          ...options,\n          changeManager: this.#changeManager,\n        });\n        if (isAiAssistanceStylingWithFunctionCallingEnabled()) {\n          agent = new AiAssistanceModel.StylingAgentWithFunctionCalling({\n            ...options,\n            changeManager: this.#changeManager,\n          });\n        }\n\n        break;\n      }\n      case AiAssistanceModel.ConversationType.NETWORK: {\n        agent = new AiAssistanceModel.NetworkAgent(options);\n        break;\n      }\n      case AiAssistanceModel.ConversationType.FILE: {\n        agent = new AiAssistanceModel.FileAgent(options);\n        break;\n      }\n      case AiAssistanceModel.ConversationType.PERFORMANCE: {\n        agent = new AiAssistanceModel.PerformanceAgent(options);\n        break;\n      }\n      case AiAssistanceModel.ConversationType.PERFORMANCE_INSIGHT: {\n        agent = new AiAssistanceModel.PerformanceInsightsAgent(options);\n        break;\n      }\n    }\n    return agent;\n  }\n\n  static async instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): Promise<AiAssistancePanel> {\n    const {forceNew} = opts;\n    if (!panelInstance || forceNew) {\n      const aidaClient = new Host.AidaClient.AidaClient();\n      const syncInfoPromise = new Promise<Host.InspectorFrontendHostAPI.SyncInformation>(\n          resolve => Host.InspectorFrontendHost.InspectorFrontendHostInstance.getSyncInformation(resolve));\n      const [aidaAvailability, syncInfo] =\n          await Promise.all([Host.AidaClient.AidaClient.checkAccessPreconditions(), syncInfoPromise]);\n      panelInstance = new AiAssistancePanel(defaultView, {aidaClient, aidaAvailability, syncInfo});\n    }\n\n    return panelInstance;\n  }\n\n  /**\n   * Called when the TimelinePanel instance changes. We use this to listen to\n   * the status of if the user is viewing a trace or not, and update the\n   * placeholder text in the panel accordingly. We do this because if the user\n   * has an active trace, we show different text than if they are viewing\n   * the performance panel but have no trace imported.\n   */\n  #bindTimelineTraceListener(): void {\n    const timelinePanel = UI.Context.Context.instance().flavor(TimelinePanel.TimelinePanel.TimelinePanel);\n\n    // Avoid binding multiple times.\n    if (timelinePanel === this.#timelinePanelInstance) {\n      return;\n    }\n\n    // Ensure we clear up any listener from the old TimelinePanel instance.\n    this.#timelinePanelInstance?.removeEventListener(\n        TimelinePanel.TimelinePanel.Events.IS_VIEWING_TRACE, this.requestUpdate, this);\n    this.#timelinePanelInstance = timelinePanel;\n\n    if (this.#timelinePanelInstance) {\n      this.#timelinePanelInstance.addEventListener(\n          TimelinePanel.TimelinePanel.Events.IS_VIEWING_TRACE, this.requestUpdate, this);\n    }\n  }\n\n  // We select the default agent based on the open panels if\n  // there isn't any active conversation.\n  #selectDefaultAgentIfNeeded(): void {\n    // If there already is an agent and if it is not empty,\n    // we don't automatically change the agent. In addition to this,\n    // we don't change the current agent when there is a message in flight.\n    if ((this.#conversationAgent && this.#conversation && !this.#conversation.isEmpty) || this.#isLoading) {\n      return;\n    }\n    const {hostConfig} = Root.Runtime;\n    const isElementsPanelVisible =\n        Boolean(UI.Context.Context.instance().flavor(ElementsPanel.ElementsPanel.ElementsPanel));\n    const isNetworkPanelVisible = Boolean(UI.Context.Context.instance().flavor(NetworkPanel.NetworkPanel.NetworkPanel));\n    const isSourcesPanelVisible = Boolean(UI.Context.Context.instance().flavor(SourcesPanel.SourcesPanel.SourcesPanel));\n    const isPerformancePanelVisible =\n        Boolean(UI.Context.Context.instance().flavor(TimelinePanel.TimelinePanel.TimelinePanel));\n\n    // Check if the user has an insight expanded in the performance panel sidebar.\n    // If they have, we default to the Insights agent; otherwise we fallback to\n    // the regular Performance agent.\n    // Note that we do not listen to this flavor changing; this code is here to\n    // ensure that by default we do not pick the Insights agent if the user has\n    // just imported a trace and not done anything else. It doesn't make sense\n    // to select the Insights AI agent in that case.\n    const userHasExpandedPerfInsight =\n        Boolean(UI.Context.Context.instance().flavor(TimelinePanel.TimelinePanel.SelectedInsight));\n    let targetConversationType: AiAssistanceModel.ConversationType|undefined = undefined;\n    if (isElementsPanelVisible && hostConfig.devToolsFreestyler?.enabled) {\n      targetConversationType = AiAssistanceModel.ConversationType.STYLING;\n    } else if (isNetworkPanelVisible && hostConfig.devToolsAiAssistanceNetworkAgent?.enabled) {\n      targetConversationType = AiAssistanceModel.ConversationType.NETWORK;\n    } else if (isSourcesPanelVisible && hostConfig.devToolsAiAssistanceFileAgent?.enabled) {\n      targetConversationType = AiAssistanceModel.ConversationType.FILE;\n    } else if (\n        isPerformancePanelVisible && hostConfig.devToolsAiAssistancePerformanceAgent?.enabled &&\n        hostConfig.devToolsAiAssistancePerformanceAgent?.insightsEnabled && userHasExpandedPerfInsight) {\n      targetConversationType = AiAssistanceModel.ConversationType.PERFORMANCE_INSIGHT;\n    } else if (isPerformancePanelVisible && hostConfig.devToolsAiAssistancePerformanceAgent?.enabled) {\n      targetConversationType = AiAssistanceModel.ConversationType.PERFORMANCE;\n    }\n\n    if (this.#conversation?.type === targetConversationType) {\n      // The above if makes sure even if we have an active agent it's empty\n      // So we can just reuse it\n      return;\n    }\n\n    const agent = targetConversationType ? this.#createAgent(targetConversationType) : undefined;\n    this.#updateConversationState(agent);\n  }\n\n  #updateConversationState(input?: AiAssistanceModel.AiAgent<unknown>|AiAssistanceModel.Conversation): void {\n    const agent = input instanceof AiAssistanceModel.AiAgent ? input : undefined;\n    const conversation = input instanceof AiAssistanceModel.Conversation ? input : undefined;\n\n    if (this.#conversationAgent !== agent) {\n      // Cancel any previous conversation\n      this.#cancel();\n      this.#messages = [];\n      this.#isLoading = false;\n      this.#conversation?.archiveConversation();\n      this.#conversationAgent = agent;\n\n      // If we get a new agent we need to\n      // create a new conversation along side it\n      if (agent) {\n        this.#conversation = new AiAssistanceModel.Conversation(\n            agentToConversationType(agent),\n            [],\n            agent.id,\n            false,\n        );\n        this.#historicalConversations.push(this.#conversation);\n      }\n    }\n\n    if (!agent) {\n      this.#conversation = undefined;\n      // We need to run doConversation separately\n      this.#messages = [];\n      // If a no new agent is provided\n      // but conversation is\n      // update with history conversation\n      if (conversation) {\n        this.#conversation = conversation;\n      }\n    }\n\n    if (!this.#conversationAgent && !this.#conversation) {\n      this.#selectDefaultAgentIfNeeded();\n    }\n\n    this.#onContextSelectionChanged();\n    this.requestUpdate();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.#viewOutput.chatView?.restoreScrollPosition();\n    this.#viewOutput.chatView?.focusTextInput();\n    void this.#handleAidaAvailabilityChange();\n    this.#selectedElement =\n        createNodeContext(selectedElementFilter(UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode)));\n    this.#selectedRequest =\n        createRequestContext(UI.Context.Context.instance().flavor(SDK.NetworkRequest.NetworkRequest));\n    this.#selectedCallTree =\n        createCallTreeContext(UI.Context.Context.instance().flavor(TimelineUtils.AICallTree.AICallTree));\n    this.#selectedPerformanceInsight =\n        createPerfInsightContext(UI.Context.Context.instance().flavor(TimelineUtils.InsightAIContext.ActiveInsight));\n    this.#selectedFile = createFileContext(UI.Context.Context.instance().flavor(Workspace.UISourceCode.UISourceCode));\n    this.#updateConversationState(this.#conversationAgent);\n\n    this.#aiAssistanceEnabledSetting?.addChangeListener(this.requestUpdate, this);\n    Host.AidaClient.HostConfigTracker.instance().addEventListener(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.#handleAidaAvailabilityChange);\n    this.#toggleSearchElementAction?.addEventListener(UI.ActionRegistration.Events.TOGGLED, this.requestUpdate, this);\n\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.#handleDOMNodeFlavorChange);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        SDK.NetworkRequest.NetworkRequest, this.#handleNetworkRequestFlavorChange);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        TimelineUtils.AICallTree.AICallTree, this.#handleTraceEntryNodeFlavorChange);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        Workspace.UISourceCode.UISourceCode, this.#handleUISourceCodeFlavorChange);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        TimelineUtils.InsightAIContext.ActiveInsight, this.#handlePerfInsightFlavorChange);\n\n    UI.Context.Context.instance().addFlavorChangeListener(\n        ElementsPanel.ElementsPanel.ElementsPanel, this.#selectDefaultAgentIfNeeded, this);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        NetworkPanel.NetworkPanel.NetworkPanel, this.#selectDefaultAgentIfNeeded, this);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        SourcesPanel.SourcesPanel.SourcesPanel, this.#selectDefaultAgentIfNeeded, this);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        TimelinePanel.TimelinePanel.TimelinePanel, this.#selectDefaultAgentIfNeeded, this);\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.AttrModified, this.#handleDOMNodeAttrChange, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.AttrRemoved, this.#handleDOMNodeAttrChange, this);\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n        this.#onPrimaryPageChanged, this);\n\n    // Listen to changes in the Timeline Panel state. We also call the\n    // function immediately in case the Performance panel is already shown\n    // when AI Assistance is loaded.\n    UI.Context.Context.instance().addFlavorChangeListener(\n        TimelinePanel.TimelinePanel.TimelinePanel, this.#bindTimelineTraceListener, this);\n    this.#bindTimelineTraceListener();\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistancePanelOpened);\n  }\n\n  override willHide(): void {\n    this.#aiAssistanceEnabledSetting?.removeChangeListener(this.requestUpdate, this);\n    Host.AidaClient.HostConfigTracker.instance().removeEventListener(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.#handleAidaAvailabilityChange);\n    this.#toggleSearchElementAction?.removeEventListener(\n        UI.ActionRegistration.Events.TOGGLED, this.requestUpdate, this);\n    UI.Context.Context.instance().removeFlavorChangeListener(SDK.DOMModel.DOMNode, this.#handleDOMNodeFlavorChange);\n    UI.Context.Context.instance().removeFlavorChangeListener(\n        SDK.NetworkRequest.NetworkRequest, this.#handleNetworkRequestFlavorChange);\n    UI.Context.Context.instance().removeFlavorChangeListener(\n        TimelineUtils.AICallTree.AICallTree, this.#handleTraceEntryNodeFlavorChange);\n    UI.Context.Context.instance().removeFlavorChangeListener(\n        TimelineUtils.InsightAIContext.ActiveInsight, this.#handlePerfInsightFlavorChange);\n    UI.Context.Context.instance().removeFlavorChangeListener(\n        Workspace.UISourceCode.UISourceCode, this.#handleUISourceCodeFlavorChange);\n    UI.Context.Context.instance().removeFlavorChangeListener(\n        ElementsPanel.ElementsPanel.ElementsPanel, this.#selectDefaultAgentIfNeeded, this);\n    UI.Context.Context.instance().removeFlavorChangeListener(\n        NetworkPanel.NetworkPanel.NetworkPanel, this.#selectDefaultAgentIfNeeded, this);\n    UI.Context.Context.instance().removeFlavorChangeListener(\n        SourcesPanel.SourcesPanel.SourcesPanel, this.#selectDefaultAgentIfNeeded, this);\n    UI.Context.Context.instance().removeFlavorChangeListener(\n        TimelinePanel.TimelinePanel.TimelinePanel, this.#selectDefaultAgentIfNeeded, this);\n    UI.Context.Context.instance().removeFlavorChangeListener(\n        TimelinePanel.TimelinePanel.TimelinePanel, this.#bindTimelineTraceListener, this);\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.DOMModel.DOMModel,\n        SDK.DOMModel.Events.AttrModified,\n        this.#handleDOMNodeAttrChange,\n        this,\n    );\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.DOMModel.DOMModel,\n        SDK.DOMModel.Events.AttrRemoved,\n        this.#handleDOMNodeAttrChange,\n        this,\n    );\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n        this.#onPrimaryPageChanged, this);\n\n    if (this.#timelinePanelInstance) {\n      this.#timelinePanelInstance.removeEventListener(\n          TimelinePanel.TimelinePanel.Events.IS_VIEWING_TRACE, this.requestUpdate, this);\n      this.#timelinePanelInstance = null;\n    }\n  }\n\n  #handleAidaAvailabilityChange = async(): Promise<void> => {\n    const currentAidaAvailability = await Host.AidaClient.AidaClient.checkAccessPreconditions();\n    if (currentAidaAvailability !== this.#aidaAvailability) {\n      this.#aidaAvailability = currentAidaAvailability;\n      const syncInfo = await new Promise<Host.InspectorFrontendHostAPI.SyncInformation>(\n          resolve => Host.InspectorFrontendHost.InspectorFrontendHostInstance.getSyncInformation(resolve));\n      this.#userInfo = {\n        accountImage: syncInfo.accountImage,\n        accountFullName: syncInfo.accountFullName,\n      };\n      this.requestUpdate();\n    }\n  };\n\n  #handleDOMNodeFlavorChange = (ev: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void => {\n    if (this.#selectedElement?.getItem() === ev.data) {\n      return;\n    }\n\n    this.#selectedElement = createNodeContext(selectedElementFilter(ev.data));\n    this.#updateConversationState(this.#conversationAgent);\n  };\n\n  #handleDOMNodeAttrChange =\n      (ev: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode, name: string}>): void => {\n        if (this.#selectedElement?.getItem() === ev.data.node) {\n          if (ev.data.name === 'class' || ev.data.name === 'id') {\n            this.requestUpdate();\n          }\n        }\n      };\n\n  #handleNetworkRequestFlavorChange =\n      (ev: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest>): void => {\n        if (this.#selectedRequest?.getItem() === ev.data) {\n          return;\n        }\n\n        this.#selectedRequest = Boolean(ev.data) ? new AiAssistanceModel.RequestContext(ev.data) : null;\n        this.#updateConversationState(this.#conversationAgent);\n      };\n\n  #handleTraceEntryNodeFlavorChange =\n      (ev: Common.EventTarget.EventTargetEvent<TimelineUtils.AICallTree.AICallTree>): void => {\n        if (this.#selectedCallTree?.getItem() === ev.data) {\n          return;\n        }\n\n        this.#selectedCallTree = Boolean(ev.data) ? new AiAssistanceModel.CallTreeContext(ev.data) : null;\n        this.#updateConversationState(this.#conversationAgent);\n      };\n\n  #handlePerfInsightFlavorChange =\n      (ev: Common.EventTarget.EventTargetEvent<TimelineUtils.InsightAIContext.ActiveInsight>): void => {\n        if (this.#selectedPerformanceInsight?.getItem() === ev.data) {\n          return;\n        }\n\n        this.#selectedPerformanceInsight = Boolean(ev.data) ? new AiAssistanceModel.InsightContext(ev.data) : null;\n        this.#updateConversationState(this.#conversationAgent);\n      };\n\n  #handleUISourceCodeFlavorChange =\n      (ev: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void => {\n        const newFile = ev.data;\n        if (!newFile) {\n          return;\n        }\n        if (this.#selectedFile?.getItem() === newFile) {\n          return;\n        }\n        this.#selectedFile = new AiAssistanceModel.FileContext(ev.data);\n        this.#updateConversationState(this.#conversationAgent);\n      };\n\n  #onPrimaryPageChanged(): void {\n    if (!this.#imageInput) {\n      return;\n    }\n\n    this.#imageInput = undefined;\n    this.requestUpdate();\n  }\n\n  #getChangeSummary(): string|undefined {\n    if (!isAiAssistancePatchingEnabled() || !this.#conversationAgent || this.#conversation?.isReadOnly) {\n      return;\n    }\n\n    return this.#changeManager.formatChangesForPatching(this.#conversationAgent.id, /* includeSourceLocation= */ true);\n  }\n\n  override async performUpdate(): Promise<void> {\n    const emptyStateSuggestions = await getEmptyStateSuggestions(this.#selectedContext, this.#conversation?.type);\n\n    this.view(\n        {\n          state: this.#getChatUiState(),\n          blockedByCrossOrigin: this.#blockedByCrossOrigin,\n          aidaAvailability: this.#aidaAvailability,\n          isLoading: this.#isLoading,\n          messages: this.#messages,\n          selectedContext: this.#selectedContext,\n          conversationType: this.#conversation?.type,\n          isReadOnly: this.#conversation?.isReadOnly ?? false,\n          changeSummary: this.#getChangeSummary(),\n          inspectElementToggled: this.#toggleSearchElementAction?.toggled() ?? false,\n          userInfo: this.#userInfo,\n          canShowFeedbackForm: this.#serverSideLoggingEnabled,\n          multimodalInputEnabled: isAiAssistanceMultimodalInputEnabled() &&\n              this.#conversation?.type === AiAssistanceModel.ConversationType.STYLING,\n          imageInput: this.#imageInput,\n          showDeleteHistoryAction: Boolean(this.#conversation && !this.#conversation.isEmpty),\n          showChatActions: this.#shouldShowChatActions(),\n          isTextInputDisabled: this.#isTextInputDisabled(),\n          emptyStateSuggestions,\n          inputPlaceholder: this.#getChatInputPlaceholder(),\n          disclaimerText: this.#getDisclaimerText(),\n          isTextInputEmpty: this.#isTextInputEmpty,\n          changeManager: this.#changeManager,\n          uploadImageInputEnabled: isAiAssistanceMultimodalUploadInputEnabled() &&\n              this.#conversation?.type === AiAssistanceModel.ConversationType.STYLING,\n          onNewChatClick: this.#handleNewChatRequest.bind(this),\n          populateHistoryMenu: this.#populateHistoryMenu.bind(this),\n          onDeleteClick: this.#onDeleteClicked.bind(this),\n          onHelpClick: () => {\n            UI.UIUtils.openInNewTab(AI_ASSISTANCE_HELP);\n          },\n          onSettingsClick: () => {\n            void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n          },\n          onTextSubmit: async (\n              text: string, imageInput?: Host.AidaClient.Part,\n              multimodalInputType?: AiAssistanceModel.MultimodalInputType) => {\n            this.#imageInput = undefined;\n            this.#isTextInputEmpty = true;\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceQuerySubmitted);\n            await this.#startConversation(text, imageInput, multimodalInputType);\n          },\n          onInspectElementClick: this.#handleSelectElementClick.bind(this),\n          onFeedbackSubmit: this.#handleFeedbackSubmit.bind(this),\n          onCancelClick: this.#cancel.bind(this),\n          onContextClick: this.#handleContextClick.bind(this),\n          onNewConversation: this.#handleNewChatRequest.bind(this),\n          onTakeScreenshot: isAiAssistanceMultimodalInputEnabled() ? this.#handleTakeScreenshot.bind(this) : undefined,\n          onRemoveImageInput: isAiAssistanceMultimodalInputEnabled() ? this.#handleRemoveImageInput.bind(this) :\n                                                                       undefined,\n          onTextInputChange: this.#handleTextInputChange.bind(this),\n          onLoadImage: isAiAssistanceMultimodalUploadInputEnabled() ? this.#handleLoadImage.bind(this) : undefined,\n        },\n        this.#viewOutput, this.contentElement);\n  }\n\n  #handleSelectElementClick(): void {\n    void this.#toggleSearchElementAction?.execute();\n  }\n\n  #isTextInputDisabled(): boolean {\n    // If the `aiAssistanceSetting` is not enabled\n    // or if the user is blocked by age, the text input is disabled.\n    const aiAssistanceSetting = this.#aiAssistanceEnabledSetting?.getIfNotDisabled();\n    const isBlockedByAge = Root.Runtime.hostConfig.aidaAvailability?.blockedByAge === true;\n    if (!aiAssistanceSetting || isBlockedByAge) {\n      return true;\n    }\n\n    // If the Aida is not available, the text input is disabled.\n    const isAidaAvailable = this.#aidaAvailability === Host.AidaClient.AidaAccessPreconditions.AVAILABLE;\n    if (!isAidaAvailable) {\n      return true;\n    }\n\n    // If sending a new message is blocked by cross origin context\n    // the text input is disabled.\n    if (this.#blockedByCrossOrigin) {\n      return true;\n    }\n\n    // If there is no current agent if there is no selected context\n    // the text input is disabled.\n    if (!this.#conversation || !this.#selectedContext) {\n      return true;\n    }\n\n    return false;\n  }\n\n  #shouldShowChatActions(): boolean {\n    const aiAssistanceSetting = this.#aiAssistanceEnabledSetting?.getIfNotDisabled();\n    const isBlockedByAge = Root.Runtime.hostConfig.aidaAvailability?.blockedByAge === true;\n    if (!aiAssistanceSetting || isBlockedByAge) {\n      return false;\n    }\n    if (this.#aidaAvailability === Host.AidaClient.AidaAccessPreconditions.NO_ACCOUNT_EMAIL ||\n        this.#aidaAvailability === Host.AidaClient.AidaAccessPreconditions.SYNC_IS_PAUSED) {\n      return false;\n    }\n    return true;\n  }\n\n  #getChatInputPlaceholder(): Platform.UIString.LocalizedString {\n    const state = this.#getChatUiState();\n    if (state === ChatViewState.CONSENT_VIEW || !this.#conversation) {\n      return i18nString(UIStrings.followTheSteps);\n    }\n\n    if (this.#blockedByCrossOrigin) {\n      return lockedString(UIStringsNotTranslate.crossOriginError);\n    }\n\n    switch (this.#conversation.type) {\n      case AiAssistanceModel.ConversationType.STYLING:\n        return this.#selectedContext ? lockedString(UIStringsNotTranslate.inputPlaceholderForStyling) :\n                                       lockedString(UIStringsNotTranslate.inputPlaceholderForStylingNoContext);\n      case AiAssistanceModel.ConversationType.FILE:\n        return this.#selectedContext ? lockedString(UIStringsNotTranslate.inputPlaceholderForFile) :\n                                       lockedString(UIStringsNotTranslate.inputPlaceholderForFileNoContext);\n      case AiAssistanceModel.ConversationType.NETWORK:\n        return this.#selectedContext ? lockedString(UIStringsNotTranslate.inputPlaceholderForNetwork) :\n                                       lockedString(UIStringsNotTranslate.inputPlaceholderForNetworkNoContext);\n      case AiAssistanceModel.ConversationType.PERFORMANCE: {\n        const perfPanel = UI.Context.Context.instance().flavor(TimelinePanel.TimelinePanel.TimelinePanel);\n        if (perfPanel?.hasActiveTrace()) {\n          return this.#selectedContext ? lockedString(UIStringsNotTranslate.inputPlaceholderForPerformance) :\n                                         lockedString(UIStringsNotTranslate.inputPlaceholderForPerformanceNoContext);\n        }\n        return lockedString(UIStringsNotTranslate.inputPlaceholderForPerformanceWithNoRecording);\n      }\n      case AiAssistanceModel.ConversationType.PERFORMANCE_INSIGHT:\n        return this.#selectedContext ?\n            lockedString(UIStringsNotTranslate.inputPlaceholderForPerformanceInsights) :\n            lockedString(UIStringsNotTranslate.inputPlaceholderForPerformanceInsightsNoContext);\n    }\n  }\n\n  #getDisclaimerText(): Platform.UIString.LocalizedString {\n    const state = this.#getChatUiState();\n    if (state === ChatViewState.CONSENT_VIEW || !this.#conversation || this.#conversation.isReadOnly) {\n      return i18nString(UIStrings.inputDisclaimerForEmptyState);\n    }\n\n    const noLogging = Root.Runtime.hostConfig.aidaAvailability?.enterprisePolicyValue ===\n        Root.Runtime.GenAiEnterprisePolicyValue.ALLOW_WITHOUT_LOGGING;\n    switch (this.#conversation.type) {\n      case AiAssistanceModel.ConversationType.STYLING:\n        if (noLogging) {\n          return lockedString(UIStringsNotTranslate.inputDisclaimerForStylingEnterpriseNoLogging);\n        }\n        return lockedString(UIStringsNotTranslate.inputDisclaimerForStyling);\n      case AiAssistanceModel.ConversationType.FILE:\n        if (noLogging) {\n          return lockedString(UIStringsNotTranslate.inputDisclaimerForFileEnterpriseNoLogging);\n        }\n        return lockedString(UIStringsNotTranslate.inputDisclaimerForFile);\n      case AiAssistanceModel.ConversationType.NETWORK:\n        if (noLogging) {\n          return lockedString(UIStringsNotTranslate.inputDisclaimerForNetworkEnterpriseNoLogging);\n        }\n        return lockedString(UIStringsNotTranslate.inputDisclaimerForNetwork);\n\n      // It is deliberate that both Performance agents use the same disclaimer\n      // text and this has been approved by Privacy.\n      case AiAssistanceModel.ConversationType.PERFORMANCE:\n      case AiAssistanceModel.ConversationType.PERFORMANCE_INSIGHT:\n        if (noLogging) {\n          return lockedString(UIStringsNotTranslate.inputDisclaimerForPerformanceEnterpriseNoLogging);\n        }\n        return lockedString(UIStringsNotTranslate.inputDisclaimerForPerformance);\n    }\n  }\n\n  #handleFeedbackSubmit(rpcId: Host.AidaClient.RpcGlobalId, rating: Host.AidaClient.Rating, feedback?: string): void {\n    void this.#aidaClient.registerClientEvent({\n      corresponding_aida_rpc_global_id: rpcId,\n      disable_user_content_logging: !this.#serverSideLoggingEnabled,\n      do_conversation_client_event: {\n        user_feedback: {\n          sentiment: rating,\n          user_input: {\n            comment: feedback,\n          },\n        },\n      },\n    });\n  }\n\n  #handleContextClick(): void|Promise<void> {\n    const context = this.#selectedContext;\n    if (context instanceof AiAssistanceModel.RequestContext) {\n      const requestLocation = NetworkForward.UIRequestLocation.UIRequestLocation.tab(\n          context.getItem(), NetworkForward.UIRequestLocation.UIRequestTabs.HEADERS_COMPONENT);\n      return Common.Revealer.reveal(requestLocation);\n    }\n    if (context instanceof AiAssistanceModel.FileContext) {\n      return Common.Revealer.reveal(context.getItem().uiLocation(0, 0));\n    }\n    if (context instanceof AiAssistanceModel.CallTreeContext) {\n      const item = context.getItem();\n      const event = item.selectedNode?.event ?? item.rootNode.event;\n      const trace = new SDK.TraceObject.RevealableEvent(event);\n      return Common.Revealer.reveal(trace);\n    }\n    if (context instanceof AiAssistanceModel.InsightContext) {\n      const item = context.getItem();\n      return Common.Revealer.reveal(item);\n    }\n    // Node picker is using linkifier.\n  }\n\n  handleAction(actionId: string): void {\n    if (this.#isLoading) {\n      // If running some queries already, focus the input with the abort\n      // button and do nothing.\n      this.#viewOutput.chatView?.focusTextInput();\n      return;\n    }\n\n    let targetConversationType: AiAssistanceModel.ConversationType|undefined;\n    switch (actionId) {\n      case 'freestyler.elements-floating-button': {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceOpenedFromElementsPanelFloatingButton);\n        targetConversationType = AiAssistanceModel.ConversationType.STYLING;\n        break;\n      }\n      case 'freestyler.element-panel-context': {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceOpenedFromElementsPanel);\n        targetConversationType = AiAssistanceModel.ConversationType.STYLING;\n        break;\n      }\n      case 'drjones.network-floating-button': {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceOpenedFromNetworkPanelFloatingButton);\n        targetConversationType = AiAssistanceModel.ConversationType.NETWORK;\n        break;\n      }\n      case 'drjones.network-panel-context': {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceOpenedFromNetworkPanel);\n        targetConversationType = AiAssistanceModel.ConversationType.NETWORK;\n        break;\n      }\n      case 'drjones.performance-panel-context': {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceOpenedFromPerformancePanel);\n        targetConversationType = AiAssistanceModel.ConversationType.PERFORMANCE;\n        break;\n      }\n      case 'drjones.performance-insight-context': {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceOpenedFromPerformanceInsight);\n        targetConversationType = AiAssistanceModel.ConversationType.PERFORMANCE_INSIGHT;\n        break;\n      }\n      case 'drjones.sources-floating-button': {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceOpenedFromSourcesPanelFloatingButton);\n        targetConversationType = AiAssistanceModel.ConversationType.FILE;\n        break;\n      }\n      case 'drjones.sources-panel-context': {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceOpenedFromSourcesPanel);\n        targetConversationType = AiAssistanceModel.ConversationType.FILE;\n        break;\n      }\n    }\n\n    if (!targetConversationType) {\n      return;\n    }\n\n    let agent = this.#conversationAgent;\n    if (!this.#conversation || !this.#conversationAgent || this.#conversation.type !== targetConversationType ||\n        this.#conversation?.isEmpty || targetConversationType === AiAssistanceModel.ConversationType.PERFORMANCE) {\n      agent = this.#createAgent(targetConversationType);\n    }\n    this.#updateConversationState(agent);\n    this.#viewOutput.chatView?.focusTextInput();\n  }\n\n  #populateHistoryMenu(contextMenu: UI.ContextMenu.ContextMenu): void {\n    for (const conversation of [...this.#historicalConversations].reverse()) {\n      if (conversation.isEmpty) {\n        continue;\n      }\n      const title = conversation.title;\n      if (!title) {\n        continue;\n      }\n\n      contextMenu.defaultSection().appendCheckboxItem(title, () => {\n        void this.#openConversation(conversation);\n      }, {checked: (this.#conversation === conversation)});\n    }\n\n    const historyEmpty = contextMenu.defaultSection().items.length === 0;\n    if (historyEmpty) {\n      contextMenu.defaultSection().appendItem(i18nString(UIStrings.noPastConversations), () => {}, {\n        disabled: true,\n      });\n    }\n\n    contextMenu.footerSection().appendItem(\n        i18nString(UIStrings.clearChatHistory),\n        () => {\n          this.#clearHistory();\n        },\n        {\n          disabled: historyEmpty,\n        },\n    );\n  }\n\n  #clearHistory(): void {\n    this.#historicalConversations = [];\n    void AiAssistanceModel.AiHistoryStorage.instance().deleteAll();\n    this.#updateConversationState();\n  }\n\n  #onDeleteClicked(): void {\n    if (!this.#conversation) {\n      return;\n    }\n\n    this.#historicalConversations =\n        this.#historicalConversations.filter(conversation => conversation !== this.#conversation);\n    void AiAssistanceModel.AiHistoryStorage.instance().deleteHistoryEntry(this.#conversation.id);\n    this.#updateConversationState();\n    UI.ARIAUtils.alert(i18nString(UIStrings.chatDeleted));\n  }\n\n  async #openConversation(conversation: AiAssistanceModel.Conversation): Promise<void> {\n    if (this.#conversation === conversation) {\n      return;\n    }\n\n    this.#updateConversationState(conversation);\n    await this.#doConversation(conversation.history);\n  }\n\n  #handleNewChatRequest(): void {\n    this.#updateConversationState();\n    UI.ARIAUtils.alert(i18nString(UIStrings.newChatCreated));\n  }\n\n  async #handleTakeScreenshot(): Promise<void> {\n    const mainTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    if (!mainTarget) {\n      throw new Error('Could not find main target');\n    }\n    const model = mainTarget.model(SDK.ScreenCaptureModel.ScreenCaptureModel);\n    if (!model) {\n      throw new Error('Could not find model');\n    }\n    const showLoadingTimeout = setTimeout(() => {\n      this.#imageInput = {isLoading: true};\n      this.requestUpdate();\n    }, SHOW_LOADING_STATE_TIMEOUT);\n    const bytes = await model.captureScreenshot(\n        Protocol.Page.CaptureScreenshotRequestFormat.Jpeg,\n        SCREENSHOT_QUALITY,\n        SDK.ScreenCaptureModel.ScreenshotMode.FROM_VIEWPORT,\n    );\n    clearTimeout(showLoadingTimeout);\n    if (bytes) {\n      this.#imageInput = {\n        isLoading: false,\n        data: bytes,\n        mimeType: JPEG_MIME_TYPE,\n        inputType: AiAssistanceModel.MultimodalInputType.SCREENSHOT\n      };\n      this.requestUpdate();\n      void this.updateComplete.then(() => {\n        this.#viewOutput.chatView?.focusTextInput();\n      });\n    } else {\n      this.#imageInput = undefined;\n      this.requestUpdate();\n      Snackbars.Snackbar.Snackbar.show({\n        message: lockedString(UIStringsNotTranslate.screenshotFailureMessage),\n      });\n    }\n  }\n\n  #handleRemoveImageInput(): void {\n    this.#imageInput = undefined;\n    this.requestUpdate();\n    void this.updateComplete.then(() => {\n      this.#viewOutput.chatView?.focusTextInput();\n    });\n  }\n\n  #handleTextInputChange(value: string): void {\n    const disableSubmit = !value;\n    if (disableSubmit !== this.#isTextInputEmpty) {\n      this.#isTextInputEmpty = disableSubmit;\n      void this.requestUpdate();\n    }\n  }\n\n  async #handleLoadImage(file: File): Promise<void> {\n    const showLoadingTimeout = setTimeout(() => {\n      this.#imageInput = {isLoading: true};\n      this.requestUpdate();\n    }, SHOW_LOADING_STATE_TIMEOUT);\n    const reader = new FileReader();\n    let dataUrl: string|undefined;\n    try {\n      dataUrl = await new Promise<string>((resolve, reject) => {\n        reader.onload = () => {\n          if (typeof reader.result === 'string') {\n            resolve(reader.result);\n          } else {\n            reject(new Error('FileReader result was not a string.'));\n          }\n        };\n        reader.readAsDataURL(file);\n      });\n    } catch {\n      clearTimeout(showLoadingTimeout);\n      this.#imageInput = undefined;\n      this.requestUpdate();\n      void this.updateComplete.then(() => {\n        this.#viewOutput.chatView?.focusTextInput();\n      });\n      Snackbars.Snackbar.Snackbar.show({\n        message: lockedString(UIStringsNotTranslate.uploadImageFailureMessage),\n      });\n      return;\n    }\n\n    clearTimeout(showLoadingTimeout);\n    if (!dataUrl) {\n      return;\n    }\n    const commaIndex = dataUrl.indexOf(',');\n    const bytes = dataUrl.substring(commaIndex + 1);\n    this.#imageInput = {\n      isLoading: false,\n      data: bytes,\n      mimeType: file.type,\n      inputType: AiAssistanceModel.MultimodalInputType.UPLOADED_IMAGE\n    };\n    this.requestUpdate();\n    void this.updateComplete.then(() => {\n      this.#viewOutput.chatView?.focusTextInput();\n    });\n  }\n\n  #runAbortController = new AbortController();\n  #cancel(): void {\n    this.#runAbortController.abort();\n    this.#runAbortController = new AbortController();\n  }\n\n  #onContextSelectionChanged(): void {\n    if (!this.#conversationAgent) {\n      this.#blockedByCrossOrigin = false;\n      return;\n    }\n    this.#selectedContext = this.#getConversationContext(this.#conversation);\n    if (!this.#selectedContext) {\n      this.#blockedByCrossOrigin = false;\n\n      // Clear out any text the user has entered into the input but never\n      // submitted now they have no active context\n      this.#viewOutput.chatView?.clearTextInput();\n      return;\n    }\n    this.#blockedByCrossOrigin = !this.#selectedContext.isOriginAllowed(this.#conversationAgent.origin);\n  }\n\n  #getConversationContext(conversation?: AiAssistanceModel.Conversation):\n      AiAssistanceModel.ConversationContext<unknown>|null {\n    if (!conversation) {\n      return null;\n    }\n    let context: AiAssistanceModel.ConversationContext<unknown>|null;\n    switch (conversation.type) {\n      case AiAssistanceModel.ConversationType.STYLING:\n        context = this.#selectedElement;\n        break;\n      case AiAssistanceModel.ConversationType.FILE:\n        context = this.#selectedFile;\n        break;\n      case AiAssistanceModel.ConversationType.NETWORK:\n        context = this.#selectedRequest;\n        break;\n      case AiAssistanceModel.ConversationType.PERFORMANCE:\n        context = this.#selectedCallTree;\n        break;\n      case AiAssistanceModel.ConversationType.PERFORMANCE_INSIGHT:\n        context = this.#selectedPerformanceInsight;\n        break;\n    }\n    return context;\n  }\n\n  async #startConversation(\n      text: string, imageInput?: Host.AidaClient.Part,\n      multimodalInputType?: AiAssistanceModel.MultimodalInputType): Promise<void> {\n    if (!this.#conversationAgent) {\n      return;\n    }\n    // Cancel any previous in-flight conversation.\n    this.#cancel();\n    const signal = this.#runAbortController.signal;\n    const context = this.#getConversationContext(this.#conversation);\n    // If a different context is provided, it must be from the same origin.\n    if (context && !context.isOriginAllowed(this.#conversationAgent.origin)) {\n      // This error should not be reached. If it happens, some\n      // invariants do not hold anymore.\n      throw new Error('cross-origin context data should not be included');\n    }\n\n    const image = isAiAssistanceMultimodalInputEnabled() ? imageInput : undefined;\n    const imageId = image ? crypto.randomUUID() : undefined;\n    const multimodalInput = image && imageId && multimodalInputType ? {\n      input: image,\n      id: imageId,\n      type: multimodalInputType,\n    } :\n                                                                      undefined;\n    if (this.#conversation) {\n      void VisualLogging.logFunctionCall(`start-conversation-${this.#conversation.type}`, 'ui');\n    }\n    const runner = this.#conversationAgent.run(\n        text, {\n          signal,\n          selected: context,\n        },\n        multimodalInput);\n    UI.ARIAUtils.alert(lockedString(UIStringsNotTranslate.answerLoading));\n    await this.#doConversation(this.#saveResponsesToCurrentConversation(runner));\n    UI.ARIAUtils.alert(lockedString(UIStringsNotTranslate.answerReady));\n  }\n\n  async *\n      #saveResponsesToCurrentConversation(items: AsyncIterable<AiAssistanceModel.ResponseData, void, void>):\n          AsyncGenerator<AiAssistanceModel.ResponseData, void, void> {\n    const currentConversation = this.#conversation;\n\n    for await (const data of items) {\n      // We don't want to save partial responses to the conversation history.\n      if (data.type !== AiAssistanceModel.ResponseType.ANSWER || data.complete) {\n        void currentConversation?.addHistoryItem(data);\n      }\n      yield data;\n    }\n  }\n\n  async #doConversation(\n      items: Iterable<AiAssistanceModel.ResponseData, void, void>|\n      AsyncIterable<AiAssistanceModel.ResponseData, void, void>): Promise<void> {\n    const release = await this.#mutex.acquire();\n    try {\n      let systemMessage: ModelChatMessage = {\n        entity: ChatMessageEntity.MODEL,\n        steps: [],\n      };\n      let step: Step = {isLoading: true};\n\n      /**\n       * Commits the step to props only if necessary.\n       */\n      function commitStep(): void {\n        if (systemMessage.steps.at(-1) !== step) {\n          systemMessage.steps.push(step);\n        }\n      }\n\n      this.#isLoading = true;\n      for await (const data of items) {\n        step.sideEffect = undefined;\n        switch (data.type) {\n          case AiAssistanceModel.ResponseType.USER_QUERY: {\n            this.#messages.push({\n              entity: ChatMessageEntity.USER,\n              text: data.query,\n              imageInput: data.imageInput,\n            });\n            systemMessage = {\n              entity: ChatMessageEntity.MODEL,\n              steps: [],\n            };\n            this.#messages.push(systemMessage);\n            break;\n          }\n          case AiAssistanceModel.ResponseType.QUERYING: {\n            step = {isLoading: true};\n            if (!systemMessage.steps.length) {\n              systemMessage.steps.push(step);\n            }\n\n            break;\n          }\n          case AiAssistanceModel.ResponseType.CONTEXT: {\n            step.title = data.title;\n            step.contextDetails = data.details;\n            step.isLoading = false;\n            commitStep();\n            break;\n          }\n          case AiAssistanceModel.ResponseType.TITLE: {\n            step.title = data.title;\n            commitStep();\n            break;\n          }\n          case AiAssistanceModel.ResponseType.THOUGHT: {\n            step.isLoading = false;\n            step.thought = data.thought;\n            commitStep();\n            break;\n          }\n          case AiAssistanceModel.ResponseType.SUGGESTIONS: {\n            systemMessage.suggestions = data.suggestions;\n            break;\n          }\n          case AiAssistanceModel.ResponseType.SIDE_EFFECT: {\n            step.isLoading = false;\n            step.code ??= data.code;\n            step.sideEffect = {\n              onAnswer: (result: boolean) => {\n                data.confirm(result);\n                step.sideEffect = undefined;\n                this.requestUpdate();\n              },\n            };\n            commitStep();\n            break;\n          }\n          case AiAssistanceModel.ResponseType.ACTION: {\n            step.isLoading = false;\n            step.code ??= data.code;\n            step.output ??= data.output;\n            step.canceled = data.canceled;\n            commitStep();\n            break;\n          }\n          case AiAssistanceModel.ResponseType.ANSWER: {\n            systemMessage.suggestions ??= data.suggestions;\n            systemMessage.answer = data.text;\n            systemMessage.rpcId = data.rpcId;\n            // When there is an answer without any thinking steps, we don't want to show the thinking step.\n            if (systemMessage.steps.length === 1 && systemMessage.steps[0].isLoading) {\n              systemMessage.steps.pop();\n            }\n            step.isLoading = false;\n            break;\n          }\n          case AiAssistanceModel.ResponseType.ERROR: {\n            systemMessage.error = data.error;\n            systemMessage.rpcId = undefined;\n            const lastStep = systemMessage.steps.at(-1);\n            if (lastStep) {\n              // Mark the last step as cancelled to make the UI feel better.\n              if (data.error === AiAssistanceModel.ErrorType.ABORT) {\n                lastStep.canceled = true;\n                // If error happens while the step is still loading remove it.\n              } else if (lastStep.isLoading) {\n                systemMessage.steps.pop();\n              }\n            }\n            if (data.error === AiAssistanceModel.ErrorType.BLOCK) {\n              systemMessage.answer = undefined;\n            }\n          }\n        }\n\n        // Commit update intermediated step when not\n        // in read only mode.\n        if (!this.#conversation?.isReadOnly) {\n          this.requestUpdate();\n\n          // This handles scrolling to the bottom for live conversations when:\n          // * User submits the query & the context step is shown.\n          // * There is a side effect dialog  shown.\n          if (data.type === AiAssistanceModel.ResponseType.CONTEXT ||\n              data.type === AiAssistanceModel.ResponseType.SIDE_EFFECT) {\n            this.#viewOutput.chatView?.scrollToBottom();\n          }\n        }\n      }\n\n      this.#isLoading = false;\n      this.requestUpdate();\n    } finally {\n      release();\n    }\n  }\n\n  /**\n   * Handles an external request using the given prompt and uses the\n   * conversation type to use the correct agent. Note that the `selector` param\n   * is contextual; for styling it is a literal CSS selector, but for\n   * Performance Insights it is the name of the Insight that forms the\n   * context of the conversation.\n   */\n  async handleExternalRequest(prompt: string, conversationType: AiAssistanceModel.ConversationType, selector?: string):\n      Promise<{response: string, devToolsLogs: object[]}> {\n    try {\n      Snackbars.Snackbar.Snackbar.show({message: i18nString(UIStrings.externalRequestReceived)});\n      const disabledReasons = AiAssistanceModel.getDisabledReasons(this.#aidaAvailability);\n      const aiAssistanceSetting = this.#aiAssistanceEnabledSetting?.getIfNotDisabled();\n      if (!aiAssistanceSetting) {\n        disabledReasons.push(lockedString(UIStringsNotTranslate.enableInSettings));\n      }\n      if (disabledReasons.length > 0) {\n        throw new Error(disabledReasons.join(' '));\n      }\n\n      void VisualLogging.logFunctionCall(`start-conversation-${conversationType}`, 'external');\n      switch (conversationType) {\n        case AiAssistanceModel.ConversationType.STYLING:\n          return await this.handleExternalStylingRequest(prompt, selector);\n        case AiAssistanceModel.ConversationType.PERFORMANCE_INSIGHT:\n          if (!selector) {\n            throw new Error('The insightTitle parameter is required for debugging a Performance Insight.');\n          }\n          return await this.handleExternalPerformanceInsightsRequest(prompt, selector);\n        default:\n          throw new Error(`Debugging with an agent of type '${conversationType}' is not implemented yet.`);\n      }\n    } catch (error) {\n      // Puppeteer would append the stack trace to the error message. Callers of\n      // `handleExternalRequest` have no use for the stack trace.\n      console.error(error);\n      error.stack = '';\n      throw error;\n    }\n  }\n\n  async handleExternalPerformanceInsightsRequest(prompt: string, insightTitle: string):\n      Promise<{response: string, devToolsLogs: object[]}> {\n    const insightsAgent = this.#createAgent(AiAssistanceModel.ConversationType.PERFORMANCE_INSIGHT);\n    const externalConversation = new AiAssistanceModel.Conversation(\n        agentToConversationType(insightsAgent),\n        [],\n        insightsAgent.id,\n        /* isReadOnly */ true,\n        /* isExternal */ true,\n    );\n    this.#historicalConversations.push(externalConversation);\n\n    const timelinePanel = TimelinePanel.TimelinePanel.TimelinePanel.instance();\n\n    const insightOrError = await TimelinePanel.ExternalRequests.getInsightToDebug(\n        timelinePanel.model,\n        insightTitle,\n    );\n    if ('error' in insightOrError) {\n      return {\n        response: insightOrError.error,\n        devToolsLogs: [],\n      };\n    }\n\n    const selectedContext = createPerfInsightContext(insightOrError.insight);\n    const runner = insightsAgent.run(prompt, {selected: selectedContext});\n\n    const devToolsLogs: object[] = [];\n    for await (const data of runner) {\n      // We don't want to save partial responses to the conversation history.\n      if (data.type !== AiAssistanceModel.ResponseType.ANSWER || data.complete) {\n        void externalConversation.addHistoryItem(data);\n        devToolsLogs.push(data);\n      }\n      if (data.type === AiAssistanceModel.ResponseType.ANSWER && data.complete) {\n        return {response: data.text, devToolsLogs};\n      }\n    }\n    throw new Error('Something went wrong. No answer was generated.');\n  }\n\n  async handleExternalStylingRequest(prompt: string, selector = 'body'):\n      Promise<{response: string, devToolsLogs: object[]}> {\n    const stylingAgent = this.#createAgent(AiAssistanceModel.ConversationType.STYLING);\n    const externalConversation = new AiAssistanceModel.Conversation(\n        agentToConversationType(stylingAgent),\n        [],\n        stylingAgent.id,\n        /* isReadOnly */ true,\n        /* isExternal */ true,\n    );\n    this.#historicalConversations.push(externalConversation);\n\n    const node = await inspectElementBySelector(selector);\n    if (node) {\n      await node.setAsInspectedNode();\n    }\n    const runner = stylingAgent.run(\n        prompt,\n        {\n          selected: createNodeContext(node),\n        },\n    );\n    const devToolsLogs: object[] = [];\n    for await (const data of runner) {\n      // We don't want to save partial responses to the conversation history.\n      if (data.type !== AiAssistanceModel.ResponseType.ANSWER || data.complete) {\n        void externalConversation.addHistoryItem(data);\n        devToolsLogs.push(data);\n      }\n      if (data.type === AiAssistanceModel.ResponseType.SIDE_EFFECT) {\n        data.confirm(true);\n      }\n      if (data.type === AiAssistanceModel.ResponseType.ANSWER && data.complete) {\n        return {response: data.text, devToolsLogs};\n      }\n    }\n    throw new Error('Something went wrong. No answer was generated.');\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(\n      _context: UI.Context.Context,\n      actionId: string,\n      ): boolean {\n    switch (actionId) {\n      case 'freestyler.elements-floating-button':\n      case 'freestyler.element-panel-context':\n      case 'drjones.network-floating-button':\n      case 'drjones.network-panel-context':\n      case 'drjones.performance-panel-context':\n      case 'drjones.performance-insight-context':\n      case 'drjones.sources-floating-button':\n      case 'drjones.sources-panel-context': {\n        void (async () => {\n          const view = UI.ViewManager.ViewManager.instance().view(\n              AiAssistancePanel.panelName,\n          );\n\n          if (!view) {\n            return;\n          }\n\n          await UI.ViewManager.ViewManager.instance().showView(\n              AiAssistancePanel.panelName,\n          );\n\n          const minDrawerSize = UI.InspectorView.InspectorView.instance().totalSize() / 4;\n          if (UI.InspectorView.InspectorView.instance().drawerSize() < minDrawerSize) {\n            // If the drawer is too small, resize it to the quarter of the total size.\n            // This ensures the AI Assistance panel has enough space to be usable when opened via an action.\n            UI.InspectorView.InspectorView.instance().setDrawerSize(minDrawerSize);\n          }\n\n          const widget = (await view.widget()) as AiAssistancePanel;\n          widget.handleAction(actionId);\n        })();\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction isAiAssistanceMultimodalUploadInputEnabled(): boolean {\n  return isAiAssistanceMultimodalInputEnabled() &&\n      Boolean(Root.Runtime.hostConfig.devToolsFreestyler?.multimodalUploadInput);\n}\n\nfunction isAiAssistanceMultimodalInputEnabled(): boolean {\n  return Boolean(Root.Runtime.hostConfig.devToolsFreestyler?.multimodal);\n}\n\nfunction isAiAssistanceServerSideLoggingEnabled(): boolean {\n  return !Root.Runtime.hostConfig.aidaAvailability?.disallowLogging;\n}\n\nfunction isAiAssistanceStylingWithFunctionCallingEnabled(): boolean {\n  return Boolean(Root.Runtime.hostConfig.devToolsFreestyler?.functionCalling);\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.toolbar-container {\n  display: flex;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n  flex: 0 0 auto;\n  justify-content: space-between;\n}\n\n.ai-assistance-view-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  overflow: hidden;\n\n  & .explore {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n}\n\n.toolbar-feedback-link {\n  color: var(--sys-color-primary);\n  margin: 0 var(--sys-size-3);\n  height: auto;\n  font-size: var(--sys-typescale-body4-size);\n}\n\n/*# sourceURL=${import.meta.resolve('././aiAssistancePanel.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/spinners/spinners.js';\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as AiAssistanceModel from '../../../models/ai_assistance/ai_assistance.js';\nimport * as Marked from '../../../third_party/marked/marked.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport type * as MarkdownView from '../../../ui/components/markdown_view/markdown_view.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport {PatchWidget} from '../PatchWidget.js';\n\nimport chatViewStyles from './chatView.css.js';\nimport {MarkdownRendererWithCodeBlock} from './MarkdownRendererWithCodeBlock.js';\nimport {UserActionRow} from './UserActionRow.js';\n\nconst {html, Directives: {ifDefined, ref}} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description The error message when the user is not logged in into Chrome.\n   */\n  notLoggedIn: 'This feature is only available when you are signed into Chrome with your Google account',\n  /**\n   * @description Message shown when the user is offline.\n   */\n  offline: 'Check your internet connection and try again',\n  /**\n   * @description Text for a link to Chrome DevTools Settings.\n   */\n  settingsLink: 'AI assistance in Settings',\n  /**\n   *@description Text for asking the user to turn the AI assistance feature in settings first before they are able to use it.\n   *@example {AI assistance in Settings} PH1\n   */\n  turnOnForStyles: 'Turn on {PH1} to get help with understanding CSS styles',\n  /**\n   *@description Text for asking the user to turn the AI assistance feature in settings first before they are able to use it.\n   *@example {AI assistance in Settings} PH1\n   */\n  turnOnForStylesAndRequests: 'Turn on {PH1} to get help with styles and network requests',\n  /**\n   *@description Text for asking the user to turn the AI assistance feature in settings first before they are able to use it.\n   *@example {AI assistance in Settings} PH1\n   */\n  turnOnForStylesRequestsAndFiles: 'Turn on {PH1} to get help with styles, network requests, and files',\n  /**\n   *@description Text for asking the user to turn the AI assistance feature in settings first before they are able to use it.\n   *@example {AI assistance in Settings} PH1\n   */\n  turnOnForStylesRequestsPerformanceAndFiles:\n      'Turn on {PH1} to get help with styles, network requests, performance, and files',\n  /**\n   *@description The footer disclaimer that links to more information about the AI feature.\n   */\n  learnAbout: 'Learn about AI in DevTools',\n  /**\n   *@description Text informing the user that AI assistance is not available in Incognito mode or Guest mode.\n   */\n  notAvailableInIncognitoMode: 'AI assistance is not available in Incognito mode or Guest mode',\n\n  /**\n   *@description Label added to the text input to describe the context for screen readers. Not shown visibly on screen.\n   */\n  inputTextAriaDescription: 'You can also use one of the suggested prompts above to start your conversation',\n  /**\n   *@description Label added to the button that reveals the selected context item in DevTools\n   */\n  revealContextDescription: 'Reveal the selected context item in DevTools',\n} as const;\n\n/*\n* Strings that don't need to be translated at this time.\n*/\nconst UIStringsNotTranslate = {\n  /**\n   *@description Title for the send icon button.\n   */\n  sendButtonTitle: 'Send',\n  /**\n   *@description Title for the start new chat\n   */\n  startNewChat: 'Start new chat',\n  /**\n   *@description Title for the cancel icon button.\n   */\n  cancelButtonTitle: 'Cancel',\n  /**\n   *@description Label for the \"select an element\" button.\n   */\n  selectAnElement: 'Select an element',\n  /**\n   *@description Label for the \"select an element\" button.\n   */\n  noElementSelected: 'No element selected',\n  /**\n   *@description Text for the empty state of the AI assistance panel.\n   */\n  emptyStateText: 'How can I help you?',\n  /**\n   * @description The error message when the request to the LLM failed for some reason.\n   */\n  systemError:\n      'Something unforeseen happened and I can no longer continue. Try your request again and see if that resolves the issue. If this keeps happening, update Chrome to the latest version.',\n  /**\n   * @description The error message when the LLM gets stuck in a loop (max steps reached).\n   */\n  maxStepsError: 'Seems like I am stuck with the investigation. It would be better if you start over.',\n  /**\n   *@description Displayed when the user stop the response\n   */\n  stoppedResponse: 'You stopped this response',\n  /**\n   * @description Prompt for user to confirm code execution that may affect the page.\n   */\n  sideEffectConfirmationDescription: 'This code may modify page content. Continue?',\n  /**\n   * @description Button text that confirm code execution that may affect the page.\n   */\n  positiveSideEffectConfirmation: 'Continue',\n  /**\n   * @description Button text that cancels code execution that may affect the page.\n   */\n  negativeSideEffectConfirmation: 'Cancel',\n  /**\n   *@description The generic name of the AI agent (do not translate)\n   */\n  ai: 'AI',\n  /**\n   *@description The fallback text when we can't find the user full name\n   */\n  you: 'You',\n  /**\n   *@description The fallback text when a step has no title yet\n   */\n  investigating: 'Investigating',\n  /**\n   *@description Prefix to the title of each thinking step of a user action is required to continue\n   */\n  paused: 'Paused',\n  /**\n   *@description Heading text for the code block that shows the executed code.\n   */\n  codeExecuted: 'Code executed',\n  /**\n   *@description Heading text for the code block that shows the code to be executed after side effect confirmation.\n   */\n  codeToExecute: 'Code to execute',\n  /**\n   *@description Heading text for the code block that shows the returned data.\n   */\n  dataReturned: 'Data returned',\n  /**\n   *@description Aria label for the check mark icon to be read by screen reader\n   */\n  completed: 'Completed',\n  /**\n   *@description Aria label for the cancel icon to be read by screen reader\n   */\n  canceled: 'Canceled',\n  /**\n   *@description Text displayed when the chat input is disabled due to reading past conversation.\n   */\n  pastConversation: 'You\\'re viewing a past conversation.',\n  /**\n   *@description Title for the take screenshot button.\n   */\n  takeScreenshotButtonTitle: 'Take screenshot',\n  /**\n   *@description Title for the remove image input button.\n   */\n  removeImageInputButtonTitle: 'Remove image input',\n  /**\n   *@description Alt text for the image input (displayed in the chat messages) that has been sent to the model.\n   */\n  imageInputSentToTheModel: 'Image input sent to the model',\n  /**\n   *@description Alt text for the account avatar.\n   */\n  accountAvatar: 'Account avatar',\n  /**\n   *@description Title for the x-link which wraps the image input rendered in chat messages.\n   */\n  openImageInNewTab: 'Open image in a new tab',\n  /**\n   *@description Alt text for image when it is not available.\n   */\n  imageUnavailable: 'Image unavailable',\n  /**\n   *@description Title for the add image button.\n   */\n  addImageButtonTitle: 'Add image',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimerForEmptyState: 'This is an experimental AI feature and won\\'t always get it right.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/ai_assistance/components/ChatView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst lockedString = i18n.i18n.lockedString;\n\nconst SCROLL_ROUNDING_OFFSET = 1;\nconst TOOLTIP_POPOVER_OFFSET = 4;\nconst RELEVANT_DATA_LINK_ID = 'relevant-data-link';\n\nexport interface Step {\n  isLoading: boolean;\n  thought?: string;\n  title?: string;\n  code?: string;\n  output?: string;\n  canceled?: boolean;\n  sideEffect?: ConfirmSideEffectDialog;\n  contextDetails?: [AiAssistanceModel.ContextDetail, ...AiAssistanceModel.ContextDetail[]];\n}\n\ninterface ConfirmSideEffectDialog {\n  onAnswer: (result: boolean) => void;\n}\n\nexport const enum ChatMessageEntity {\n  MODEL = 'model',\n  USER = 'user',\n}\n\nexport type ImageInputData = {\n  isLoading: true,\n}|{\n  isLoading: false,\n  data: string,\n  mimeType: string,\n  inputType: AiAssistanceModel.MultimodalInputType,\n};\n\nexport interface UserChatMessage {\n  entity: ChatMessageEntity.USER;\n  text: string;\n  imageInput?: Host.AidaClient.Part;\n}\nexport interface ModelChatMessage {\n  entity: ChatMessageEntity.MODEL;\n  steps: Step[];\n  suggestions?: [string, ...string[]];\n  answer?: string;\n  error?: AiAssistanceModel.ErrorType;\n  rpcId?: Host.AidaClient.RpcGlobalId;\n}\n\nexport type ChatMessage = UserChatMessage|ModelChatMessage;\n\nexport const enum State {\n  CONSENT_VIEW = 'consent-view',\n  CHAT_VIEW = 'chat-view',\n  EXPLORE_VIEW = 'explore-view'\n}\n\nexport interface Props {\n  onTextSubmit:\n      (text: string, imageInput?: Host.AidaClient.Part,\n       multimodalInputType?: AiAssistanceModel.MultimodalInputType) => void;\n  onInspectElementClick: () => void;\n  onFeedbackSubmit: (rpcId: Host.AidaClient.RpcGlobalId, rate: Host.AidaClient.Rating, feedback?: string) => void;\n  onCancelClick: () => void;\n  onContextClick: () => void;\n  onNewConversation: () => void;\n  onTakeScreenshot?: () => void;\n  onRemoveImageInput?: () => void;\n  onTextInputChange: (input: string) => void;\n  onLoadImage?: (file: File) => Promise<void>;\n  changeManager: AiAssistanceModel.ChangeManager;\n  inspectElementToggled: boolean;\n  state: State;\n  aidaAvailability: Host.AidaClient.AidaAccessPreconditions;\n  messages: ChatMessage[];\n  selectedContext: AiAssistanceModel.ConversationContext<unknown>|null;\n  isLoading: boolean;\n  canShowFeedbackForm: boolean;\n  userInfo: Pick<Host.InspectorFrontendHostAPI.SyncInformation, 'accountImage'|'accountFullName'>;\n  conversationType?: AiAssistanceModel.ConversationType;\n  isReadOnly: boolean;\n  blockedByCrossOrigin: boolean;\n  changeSummary?: string;\n  multimodalInputEnabled?: boolean;\n  imageInput?: ImageInputData;\n  isTextInputDisabled: boolean;\n  emptyStateSuggestions: AiAssistanceModel.ConversationSuggestion[];\n  inputPlaceholder: Platform.UIString.LocalizedString;\n  disclaimerText: Platform.UIString.LocalizedString;\n  isTextInputEmpty: boolean;\n  uploadImageInputEnabled?: boolean;\n}\n\nexport class ChatView extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #markdownRenderer = new MarkdownRendererWithCodeBlock();\n  #scrollTop?: number;\n  #props: Props;\n  #messagesContainerElement?: Element;\n  #mainElementRef?: Lit.Directives.Ref<Element> = Lit.Directives.createRef();\n  #messagesContainerResizeObserver = new ResizeObserver(() => this.#handleMessagesContainerResize());\n  #popoverHelper: UI.PopoverHelper.PopoverHelper|null = null;\n  /**\n   * Indicates whether the chat scroll position should be pinned to the bottom.\n   *\n   * This is true when:\n   *   - The scroll is at the very bottom, allowing new messages to push the scroll down automatically.\n   *   - The panel is initially rendered and the user hasn't scrolled yet.\n   *\n   * It is set to false when the user scrolls up to view previous messages.\n   */\n  #pinScrollToBottom = true;\n  /**\n   * Indicates whether the scroll event originated from code\n   * or a user action. When set to `true`, `handleScroll` will ignore the event,\n   * allowing it to only handle user-driven scrolls and correctly decide\n   * whether to pin the content to the bottom.\n   */\n  #isProgrammaticScroll = false;\n\n  constructor(props: Props) {\n    super();\n    this.#props = props;\n  }\n\n  set props(props: Props) {\n    this.#markdownRenderer = new MarkdownRendererWithCodeBlock();\n    this.#props = props;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#render();\n\n    if (this.#messagesContainerElement) {\n      this.#messagesContainerResizeObserver.observe(this.#messagesContainerElement);\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.#messagesContainerResizeObserver.disconnect();\n  }\n\n  clearTextInput(): void {\n    const textArea = this.#shadow.querySelector('.chat-input') as HTMLTextAreaElement;\n    if (!textArea) {\n      return;\n    }\n    textArea.value = '';\n  }\n\n  focusTextInput(): void {\n    const textArea = this.#shadow.querySelector('.chat-input') as HTMLTextAreaElement;\n    if (!textArea) {\n      return;\n    }\n\n    textArea.focus();\n  }\n\n  restoreScrollPosition(): void {\n    if (this.#scrollTop === undefined) {\n      return;\n    }\n\n    if (!this.#mainElementRef?.value) {\n      return;\n    }\n\n    this.#setMainElementScrollTop(this.#scrollTop);\n  }\n\n  scrollToBottom(): void {\n    if (!this.#mainElementRef?.value) {\n      return;\n    }\n\n    this.#setMainElementScrollTop(this.#mainElementRef.value.scrollHeight);\n  }\n\n  #handleChatUiRef(el: Element|undefined): void {\n    if (!el || this.#popoverHelper) {\n      return;\n    }\n\n    // TODO: Update here when b/409965560 is fixed.\n    this.#popoverHelper = new UI.PopoverHelper.PopoverHelper((el as HTMLElement), event => {\n      const popoverShownNode =\n          event.target instanceof HTMLElement && event.target.id === RELEVANT_DATA_LINK_ID ? event.target : null;\n      if (!popoverShownNode) {\n        return null;\n      }\n\n      // We move the glass pane to be a bit lower so\n      // that it does not disappear when moving the cursor\n      // over to link.\n      const nodeBox = popoverShownNode.boxInWindow();\n      nodeBox.y = nodeBox.y + TOOLTIP_POPOVER_OFFSET;\n      return {\n        box: nodeBox,\n        show: async (popover: UI.GlassPane.GlassPane) => {\n          // clang-format off\n          Lit.render(html`\n            <style>\n              .info-tooltip-container {\n                max-width: var(--sys-size-28);\n                padding: var(--sys-size-4) var(--sys-size-5);\n\n                .tooltip-link {\n                  display: block;\n                  margin-top: var(--sys-size-4);\n                  color: var(--sys-color-primary);\n                  padding-left: 0;\n                }\n              }\n            </style>\n            <div class=\"info-tooltip-container\">\n              ${this.#props.disclaimerText}\n              <button\n                class=\"link tooltip-link\"\n                role=\"link\"\n                jslog=${VisualLogging.link('open-ai-settings').track({\n                  click: true,\n                })}\n                @click=${() => {\n                  void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n                }}\n              >${i18nString(UIStrings.learnAbout)}</button>\n            </div>`, popover.contentElement, {host: this});\n          // clang-format on\n          return true;\n        },\n      };\n    });\n    this.#popoverHelper.setTimeout(0);\n  }\n\n  #handleMessagesContainerResize(): void {\n    if (!this.#pinScrollToBottom) {\n      return;\n    }\n\n    if (!this.#mainElementRef?.value) {\n      return;\n    }\n\n    if (this.#pinScrollToBottom) {\n      this.#setMainElementScrollTop(this.#mainElementRef.value.scrollHeight);\n    }\n  }\n\n  #setMainElementScrollTop(scrollTop: number): void {\n    if (!this.#mainElementRef?.value) {\n      return;\n    }\n\n    this.#scrollTop = scrollTop;\n    this.#isProgrammaticScroll = true;\n    this.#mainElementRef.value.scrollTop = scrollTop;\n  }\n\n  #setInputText(text: string): void {\n    const textArea = this.#shadow.querySelector('.chat-input') as HTMLTextAreaElement;\n    if (!textArea) {\n      return;\n    }\n\n    textArea.value = text;\n    this.#props.onTextInputChange(text);\n  }\n\n  #handleMessageContainerRef(el: Element|undefined): void {\n    this.#messagesContainerElement = el;\n\n    if (el) {\n      this.#messagesContainerResizeObserver.observe(el);\n    } else {\n      this.#pinScrollToBottom = true;\n      this.#messagesContainerResizeObserver.disconnect();\n    }\n  }\n\n  #handleScroll = (ev: Event): void => {\n    if (!ev.target || !(ev.target instanceof HTMLElement)) {\n      return;\n    }\n\n    // Do not handle scroll events caused by programmatically\n    // updating the scroll position. We want to know whether user\n    // did scroll the container from the user interface.\n    if (this.#isProgrammaticScroll) {\n      this.#isProgrammaticScroll = false;\n      return;\n    }\n\n    this.#scrollTop = ev.target.scrollTop;\n    this.#pinScrollToBottom =\n        ev.target.scrollTop + ev.target.clientHeight + SCROLL_ROUNDING_OFFSET > ev.target.scrollHeight;\n  };\n\n  #handleSubmit = (ev: SubmitEvent): void => {\n    ev.preventDefault();\n    if (this.#props.imageInput?.isLoading) {\n      return;\n    }\n\n    const textArea = this.#shadow.querySelector('.chat-input') as HTMLTextAreaElement;\n    if (!textArea?.value) {\n      return;\n    }\n    const imageInput = !this.#props.imageInput?.isLoading && this.#props.imageInput?.data ?\n        {inlineData: {data: this.#props.imageInput.data, mimeType: this.#props.imageInput.mimeType}} :\n        undefined;\n    void this.#props.onTextSubmit(textArea.value, imageInput, this.#props.imageInput?.inputType);\n    textArea.value = '';\n  };\n\n  #handleTextAreaKeyDown = (ev: KeyboardEvent): void => {\n    if (!ev.target || !(ev.target instanceof HTMLTextAreaElement)) {\n      return;\n    }\n\n    // Go to a new line only when Shift + Enter is pressed.\n    if (ev.key === 'Enter' && !ev.shiftKey) {\n      ev.preventDefault();\n      if (!ev.target?.value || this.#props.imageInput?.isLoading) {\n        return;\n      }\n      const imageInput = !this.#props.imageInput?.isLoading && this.#props.imageInput?.data ?\n          {inlineData: {data: this.#props.imageInput.data, mimeType: this.#props.imageInput.mimeType}} :\n          undefined;\n      void this.#props.onTextSubmit(ev.target.value, imageInput, this.#props.imageInput?.inputType);\n      ev.target.value = '';\n    }\n  };\n\n  #handleCancel = (ev: SubmitEvent): void => {\n    ev.preventDefault();\n\n    if (!this.#props.isLoading) {\n      return;\n    }\n\n    this.#props.onCancelClick();\n  };\n\n  #handleImageUpload = (ev: Event): void => {\n    ev.stopPropagation();\n    if (this.#props.onLoadImage) {\n      const fileSelector = UI.UIUtils.createFileSelectorElement(this.#props.onLoadImage.bind(this), '.jpeg,.jpg,.png');\n      fileSelector.click();\n    }\n  };\n\n  #handleSuggestionClick = (suggestion: string): void => {\n    this.#setInputText(suggestion);\n    this.focusTextInput();\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.AiAssistanceDynamicSuggestionClicked);\n  };\n\n  #render(): void {\n    const renderFooter = (): Lit.LitTemplate => {\n      const classes = Lit.Directives.classMap({\n        'chat-view-footer': true,\n        'has-conversation': !!this.#props.conversationType,\n        'is-read-only': this.#props.isReadOnly,\n      });\n\n      // clang-format off\n      const footerContents = this.#props.conversationType\n        ? renderRelevantDataDisclaimer({\n            isLoading: this.#props.isLoading,\n            blockedByCrossOrigin: this.#props.blockedByCrossOrigin,\n          })\n        : html`<p>\n            ${lockedString(UIStringsNotTranslate.inputDisclaimerForEmptyState)}\n            <button\n              class=\"link\"\n              role=\"link\"\n              jslog=${VisualLogging.link('open-ai-settings').track({\n                click: true,\n              })}\n              @click=${() => {\n                void UI.ViewManager.ViewManager.instance().showView(\n                  'chrome-ai',\n                );\n              }}\n            >${i18nString(UIStrings.learnAbout)}</button>\n          </p>`;\n\n      return html`\n        <footer class=${classes} jslog=${VisualLogging.section('footer')}>\n          ${footerContents}\n        </footer>\n      `;\n    };\n    // clang-format off\n    Lit.render(html`\n      <style>${chatViewStyles}</style>\n      <div class=\"chat-ui\" ${Lit.Directives.ref(this.#handleChatUiRef)}>\n        <main @scroll=${this.#handleScroll} ${ref(this.#mainElementRef)}>\n          ${renderMainContents({\n            state: this.#props.state,\n            aidaAvailability: this.#props.aidaAvailability,\n            messages: this.#props.messages,\n            isLoading: this.#props.isLoading,\n            isReadOnly: this.#props.isReadOnly,\n            canShowFeedbackForm: this.#props.canShowFeedbackForm,\n            isTextInputDisabled: this.#props.isTextInputDisabled,\n            suggestions: this.#props.emptyStateSuggestions,\n            userInfo: this.#props.userInfo,\n            markdownRenderer: this.#markdownRenderer,\n            conversationType: this.#props.conversationType,\n            changeSummary: this.#props.changeSummary,\n            changeManager: this.#props.changeManager,\n            onSuggestionClick: this.#handleSuggestionClick,\n            onFeedbackSubmit: this.#props.onFeedbackSubmit,\n            onMessageContainerRef: this.#handleMessageContainerRef,\n          })}\n          ${this.#props.isReadOnly\n            ? renderReadOnlySection({\n                conversationType: this.#props.conversationType,\n                onNewConversation: this.#props.onNewConversation,\n              })\n            : renderChatInput({\n                isLoading: this.#props.isLoading,\n                blockedByCrossOrigin: this.#props.blockedByCrossOrigin,\n                isTextInputDisabled: this.#props.isTextInputDisabled,\n                inputPlaceholder: this.#props.inputPlaceholder,\n                state: this.#props.state,\n                selectedContext: this.#props.selectedContext,\n                inspectElementToggled: this.#props.inspectElementToggled,\n                multimodalInputEnabled: this.#props.multimodalInputEnabled,\n                conversationType: this.#props.conversationType,\n                imageInput: this.#props.imageInput,\n                isTextInputEmpty: this.#props.isTextInputEmpty,\n                aidaAvailability: this.#props.aidaAvailability,\n                uploadImageInputEnabled: this.#props.uploadImageInputEnabled,\n                onContextClick: this.#props.onContextClick,\n                onInspectElementClick: this.#props.onInspectElementClick,\n                onSubmit: this.#handleSubmit,\n                onTextAreaKeyDown: this.#handleTextAreaKeyDown,\n                onCancel: this.#handleCancel,\n                onNewConversation: this.#props.onNewConversation,\n                onTakeScreenshot: this.#props.onTakeScreenshot,\n                onRemoveImageInput: this.#props.onRemoveImageInput,\n                onTextInputChange: this.#props.onTextInputChange,\n                onImageUpload: this.#handleImageUpload,\n              })\n          }\n        </main>\n       ${renderFooter()}\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nfunction renderTextAsMarkdown(text: string, markdownRenderer: MarkdownRendererWithCodeBlock, {animate, ref: refFn}: {\n  animate?: boolean,\n  ref?: (element?: Element) => void,\n} = {}): Lit.TemplateResult {\n  let tokens = [];\n  try {\n    tokens = Marked.Marked.lexer(text);\n    for (const token of tokens) {\n      // Try to render all the tokens to make sure that\n      // they all have a template defined for them. If there\n      // isn't any template defined for a token, we'll fallback\n      // to rendering the text as plain text instead of markdown.\n      markdownRenderer.renderToken(token);\n    }\n  } catch {\n    // The tokens were not parsed correctly or\n    // one of the tokens are not supported, so we\n    // continue to render this as text.\n    return html`${text}`;\n  }\n\n  // clang-format off\n  return html`<devtools-markdown-view\n    .data=${{tokens, renderer: markdownRenderer, animationEnabled: animate} as MarkdownView.MarkdownView.MarkdownViewData}\n    ${refFn ? ref(refFn) : Lit.nothing}>\n  </devtools-markdown-view>`;\n  // clang-format on\n}\n\nfunction renderTitle(step: Step): Lit.LitTemplate {\n  const paused =\n      step.sideEffect ? html`<span class=\"paused\">${lockedString(UIStringsNotTranslate.paused)}: </span>` : Lit.nothing;\n  const actionTitle = step.title ?? `${lockedString(UIStringsNotTranslate.investigating)}…`;\n\n  return html`<span class=\"title\">${paused}${actionTitle}</span>`;\n}\n\nfunction renderStepCode(step: Step): Lit.LitTemplate {\n  if (!step.code && !step.output) {\n    return Lit.nothing;\n  }\n\n  // If there is no \"output\" yet, it means we didn't execute the code yet (e.g. maybe it is still waiting for confirmation from the user)\n  // thus we show \"Code to execute\" text rather than \"Code executed\" text on the heading of the code block.\n  const codeHeadingText = (step.output && !step.canceled) ? lockedString(UIStringsNotTranslate.codeExecuted) :\n                                                            lockedString(UIStringsNotTranslate.codeToExecute);\n\n  // If there is output, we don't show notice on this code block and instead show\n  // it in the data returned code block.\n  // clang-format off\n  const code = step.code ? html`<div class=\"action-result\">\n      <devtools-code-block\n        .code=${step.code.trim()}\n        .codeLang=${'js'}\n        .displayNotice=${!Boolean(step.output)}\n        .header=${codeHeadingText}\n        .showCopyButton=${true}\n      ></devtools-code-block>\n  </div>` :\n                           Lit.nothing;\n  const output = step.output ? html`<div class=\"js-code-output\">\n    <devtools-code-block\n      .code=${step.output}\n      .codeLang=${'js'}\n      .displayNotice=${true}\n      .header=${lockedString(UIStringsNotTranslate.dataReturned)}\n      .showCopyButton=${false}\n    ></devtools-code-block>\n  </div>` :\n                               Lit.nothing;\n\n  return html`<div class=\"step-code\">${code}${output}</div>`;\n  // clang-format on\n}\n\nfunction renderStepDetails({\n  step,\n  markdownRenderer,\n  isLast,\n}: {\n  step: Step,\n  markdownRenderer: MarkdownRendererWithCodeBlock,\n  isLast: boolean,\n}): Lit.LitTemplate {\n  const sideEffects = isLast && step.sideEffect ? renderSideEffectConfirmationUi(step) : Lit.nothing;\n  const thought = step.thought ? html`<p>${renderTextAsMarkdown(step.thought, markdownRenderer)}</p>` : Lit.nothing;\n\n  // clang-format off\n  const contextDetails = step.contextDetails ?\n  html`${Lit.Directives.repeat(\n    step.contextDetails,\n      contextDetail => {\n        return html`<div class=\"context-details\">\n      <devtools-code-block\n        .code=${contextDetail.text}\n        .codeLang=${contextDetail.codeLang || ''}\n        .displayNotice=${false}\n        .header=${contextDetail.title}\n        .showCopyButton=${true}\n      ></devtools-code-block>\n    </div>`;\n      },\n    )}` : Lit.nothing;\n\n  return html`<div class=\"step-details\">\n    ${thought}\n    ${renderStepCode(step)}\n    ${sideEffects}\n    ${contextDetails}\n  </div>`;\n  // clang-format on\n}\n\nfunction renderStepBadge({step, isLoading, isLast}: {\n  step: Step,\n  isLoading: boolean,\n  isLast: boolean,\n}): Lit.LitTemplate {\n  if (isLoading && isLast && !step.sideEffect) {\n    return html`<devtools-spinner></devtools-spinner>`;\n  }\n\n  let iconName = 'checkmark';\n  let ariaLabel: string|undefined = lockedString(UIStringsNotTranslate.completed);\n  let role: 'button'|undefined = 'button';\n  if (isLast && step.sideEffect) {\n    role = undefined;\n    ariaLabel = undefined;\n    iconName = 'pause-circle';\n  } else if (step.canceled) {\n    ariaLabel = lockedString(UIStringsNotTranslate.canceled);\n    iconName = 'cross';\n  }\n\n  return html`<devtools-icon\n      class=\"indicator\"\n      role=${ifDefined(role)}\n      aria-label=${ifDefined(ariaLabel)}\n      .name=${iconName}\n    ></devtools-icon>`;\n}\n\nfunction renderStep({step, isLoading, markdownRenderer, isLast}: {\n  step: Step,\n  isLoading: boolean,\n  markdownRenderer: MarkdownRendererWithCodeBlock,\n  isLast: boolean,\n}): Lit.LitTemplate {\n  const stepClasses = Lit.Directives.classMap({\n    step: true,\n    empty: !step.thought && !step.code && !step.contextDetails,\n    paused: Boolean(step.sideEffect),\n    canceled: Boolean(step.canceled),\n  });\n  // clang-format off\n  return html`\n    <details class=${stepClasses}\n      jslog=${VisualLogging.section('step')}\n      .open=${Boolean(step.sideEffect)}>\n      <summary>\n        <div class=\"summary\">\n          ${renderStepBadge({ step, isLoading, isLast })}\n          ${renderTitle(step)}\n          <devtools-icon\n            class=\"arrow\"\n            .name=${'chevron-down'}\n          ></devtools-icon>\n        </div>\n      </summary>\n      ${renderStepDetails({step, markdownRenderer, isLast})}\n    </details>`;\n  // clang-format on\n}\n\nfunction renderSideEffectConfirmationUi(step: Step): Lit.LitTemplate {\n  if (!step.sideEffect) {\n    return Lit.nothing;\n  }\n\n  // clang-format off\n  return html`<div\n    class=\"side-effect-confirmation\"\n    jslog=${VisualLogging.section('side-effect-confirmation')}\n  >\n    <p>${lockedString(UIStringsNotTranslate.sideEffectConfirmationDescription)}</p>\n    <div class=\"side-effect-buttons-container\">\n      <devtools-button\n        .data=${\n          {\n            variant: Buttons.Button.Variant.OUTLINED,\n            jslogContext: 'decline-execute-code',\n          } as Buttons.Button.ButtonData\n        }\n        @click=${() => step.sideEffect?.onAnswer(false)}\n      >${lockedString(\n        UIStringsNotTranslate.negativeSideEffectConfirmation,\n      )}</devtools-button>\n      <devtools-button\n        .data=${\n          {\n            variant: Buttons.Button.Variant.PRIMARY,\n            jslogContext: 'accept-execute-code',\n            iconName: 'play',\n          } as Buttons.Button.ButtonData\n        }\n        @click=${() => step.sideEffect?.onAnswer(true)}\n      >${\n          lockedString(UIStringsNotTranslate.positiveSideEffectConfirmation)\n      }</devtools-button>\n    </div>\n  </div>`;\n  // clang-format on\n}\n\nfunction renderError(message: ModelChatMessage): Lit.LitTemplate {\n  if (message.error) {\n    let errorMessage;\n    switch (message.error) {\n      case AiAssistanceModel.ErrorType.UNKNOWN:\n      case AiAssistanceModel.ErrorType.BLOCK:\n        errorMessage = UIStringsNotTranslate.systemError;\n        break;\n      case AiAssistanceModel.ErrorType.MAX_STEPS:\n        errorMessage = UIStringsNotTranslate.maxStepsError;\n        break;\n      case AiAssistanceModel.ErrorType.ABORT:\n        return html`<p class=\"aborted\" jslog=${VisualLogging.section('aborted')}>${\n            lockedString(UIStringsNotTranslate.stoppedResponse)}</p>`;\n    }\n\n    return html`<p class=\"error\" jslog=${VisualLogging.section('error')}>${lockedString(errorMessage)}</p>`;\n  }\n\n  return Lit.nothing;\n}\n\nfunction renderChatMessage({\n  message,\n  isLoading,\n  isReadOnly,\n  canShowFeedbackForm,\n  isLast,\n  userInfo,\n  markdownRenderer,\n  onSuggestionClick,\n  onFeedbackSubmit,\n}: {\n  message: ChatMessage,\n  isLoading: boolean,\n  isReadOnly: boolean,\n  canShowFeedbackForm: boolean,\n  isLast: boolean,\n  userInfo: Pick<Host.InspectorFrontendHostAPI.SyncInformation, 'accountImage'|'accountFullName'>,\n  markdownRenderer: MarkdownRendererWithCodeBlock,\n  onSuggestionClick: (suggestion: string) => void,\n  onFeedbackSubmit: (rpcId: Host.AidaClient.RpcGlobalId, rate: Host.AidaClient.Rating, feedback?: string) => void,\n}): Lit.TemplateResult {\n  if (message.entity === ChatMessageEntity.USER) {\n    const name = userInfo.accountFullName || lockedString(UIStringsNotTranslate.you);\n    const image = userInfo.accountImage ?\n        html`<img src=\"data:image/png;base64, ${userInfo.accountImage}\" alt=${UIStringsNotTranslate.accountAvatar} />` :\n        html`<devtools-icon\n          .name=${'profile'}\n        ></devtools-icon>`;\n    const imageInput = message.imageInput && 'inlineData' in message.imageInput ?\n        renderImageChatMessage(message.imageInput.inlineData) :\n        Lit.nothing;\n    // clang-format off\n    return html`<section\n      class=\"chat-message query\"\n      jslog=${VisualLogging.section('question')}\n    >\n      <div class=\"message-info\">\n        ${image}\n        <div class=\"message-name\">\n          <h2>${name}</h2>\n        </div>\n      </div>\n      ${imageInput}\n      <div class=\"message-content\">${renderTextAsMarkdown(message.text, markdownRenderer)}</div>\n    </section>`;\n    // clang-format on\n  }\n\n  // clang-format off\n  return html`\n    <section\n      class=\"chat-message answer\"\n      jslog=${VisualLogging.section('answer')}\n    >\n      <div class=\"message-info\">\n        <devtools-icon name=\"smart-assistant\"></devtools-icon>\n        <div class=\"message-name\">\n          <h2>${lockedString(UIStringsNotTranslate.ai)}</h2>\n        </div>\n      </div>\n      ${Lit.Directives.repeat(\n        message.steps,\n        (_, index) => index,\n        step => {\n          return renderStep({\n            step,\n            isLoading,\n            markdownRenderer,\n            isLast: [...message.steps.values()].at(-1) === step && isLast,\n          });\n        },\n      )}\n      ${message.answer\n        ? html`<p>${renderTextAsMarkdown(message.answer, markdownRenderer, { animate: !isReadOnly && isLoading && isLast })}</p>`\n        : Lit.nothing}\n      ${renderError(message)}\n      ${isLast && isLoading\n        ? Lit.nothing\n        : html`<devtools-widget class=\"actions\" .widgetConfig=${UI.Widget.widgetConfig(UserActionRow, {\n            showRateButtons: message.rpcId !== undefined,\n            onFeedbackSubmit: (rating: Host.AidaClient.Rating, feedback?: string) => {\n              if (!message.rpcId) {\n                return;\n              }\n              onFeedbackSubmit(message.rpcId, rating, feedback);\n            },\n            suggestions: (isLast && !isReadOnly) ? message.suggestions : undefined,\n            onSuggestionClick,\n            canShowFeedbackForm,\n          })}></devtools-widget>`\n      }\n    </section>\n  `;\n  // clang-format on\n}\n\nfunction renderImageChatMessage(inlineData: Host.AidaClient.MediaBlob): Lit.LitTemplate {\n  if (inlineData.data === AiAssistanceModel.NOT_FOUND_IMAGE_DATA) {\n    // clang-format off\n    return html`<div class=\"unavailable-image\" title=${UIStringsNotTranslate.imageUnavailable}>\n      <devtools-icon name='file-image'></devtools-icon>\n    </div>`;\n    // clang-format on\n  }\n  const imageUrl = `data:${inlineData.mimeType};base64,${inlineData.data}`;\n  // clang-format off\n    return html`<x-link\n      class=\"image-link\" title=${UIStringsNotTranslate.openImageInNewTab}\n      href=${imageUrl}\n    >\n      <img src=${imageUrl} alt=${UIStringsNotTranslate.imageInputSentToTheModel} />\n    </x-link>`;\n  // clang-format on\n}\n\nfunction renderSelection({\n  selectedContext,\n  inspectElementToggled,\n  conversationType,\n  isTextInputDisabled,\n  onContextClick,\n  onInspectElementClick,\n}: {\n  selectedContext: AiAssistanceModel.ConversationContext<unknown>|null,\n  inspectElementToggled: boolean,\n  isTextInputDisabled: boolean,\n  onContextClick: () => void | Promise<void>,\n  onInspectElementClick: () => void,\n  conversationType?: AiAssistanceModel.ConversationType,\n}): Lit.LitTemplate {\n  if (!conversationType) {\n    return Lit.nothing;\n  }\n\n  // TODO: currently the picker behavior is SDKNode specific.\n  const hasPickerBehavior = conversationType === AiAssistanceModel.ConversationType.STYLING;\n\n  const resourceClass = Lit.Directives.classMap({\n    'not-selected': !selectedContext,\n    'resource-link': true,\n    'has-picker-behavior': hasPickerBehavior,\n    disabled: isTextInputDisabled,\n  });\n\n  if (!selectedContext && !hasPickerBehavior) {\n    return Lit.nothing;\n  }\n\n  const handleKeyDown = (ev: KeyboardEvent): void => {\n    if (ev.key === 'Enter' || ev.key === ' ') {\n      void onContextClick();\n    }\n  };\n\n  // clang-format off\n  return html`<div class=\"select-element\">\n    ${\n      hasPickerBehavior ? html`\n        <devtools-button\n          .data=${{\n              variant: Buttons.Button.Variant.ICON_TOGGLE,\n              size: Buttons.Button.Size.SMALL,\n              iconName: 'select-element',\n              toggledIconName: 'select-element',\n              toggleType: Buttons.Button.ToggleType.PRIMARY,\n              toggled: inspectElementToggled,\n              title: lockedString(UIStringsNotTranslate.selectAnElement),\n              jslogContext: 'select-element',\n              disabled: isTextInputDisabled,\n          } as Buttons.Button.ButtonData}\n          @click=${onInspectElementClick}\n        ></devtools-button>\n      ` : Lit.nothing\n    }\n    <div\n      role=button\n      class=${resourceClass}\n      tabindex=${(hasPickerBehavior || isTextInputDisabled) ? '-1' : '0'}\n      @click=${onContextClick}\n      @keydown=${handleKeyDown}\n      aria-description=${i18nString(UIStrings.revealContextDescription)}\n    >\n      ${selectedContext?.getIcon() ? html`${selectedContext?.getIcon()}` : Lit.nothing}\n      <span class=\"title\">${selectedContext?.getTitle({ disabled: isTextInputDisabled }) ?? lockedString(UIStringsNotTranslate.noElementSelected)}</span>\n    </div>\n  </div>`;\n  // clang-format on\n}\n\nfunction renderMessages({\n  messages,\n  isLoading,\n  isReadOnly,\n  canShowFeedbackForm,\n  userInfo,\n  markdownRenderer,\n  changeSummary,\n  changeManager,\n  onSuggestionClick,\n  onFeedbackSubmit,\n  onMessageContainerRef,\n}: {\n  messages: ChatMessage[],\n  isLoading: boolean,\n  isReadOnly: boolean,\n  canShowFeedbackForm: boolean,\n  userInfo: Pick<Host.InspectorFrontendHostAPI.SyncInformation, 'accountImage'|'accountFullName'>,\n  markdownRenderer: MarkdownRendererWithCodeBlock,\n  onSuggestionClick: (suggestion: string) => void,\n  onFeedbackSubmit: (rpcId: Host.AidaClient.RpcGlobalId, rate: Host.AidaClient.Rating, feedback?: string) => void,\n  onMessageContainerRef: (el: Element|undefined) => void,\n  changeSummary?: string,\n  changeManager?: AiAssistanceModel.ChangeManager,\n}): Lit.TemplateResult {\n  function renderPatchWidget(): Lit.LitTemplate {\n    if (isLoading) {\n      return Lit.nothing;\n    }\n\n    // clang-format off\n    return html`<devtools-widget\n      .widgetConfig=${UI.Widget.widgetConfig(PatchWidget, {\n        changeSummary: changeSummary ?? '',\n        changeManager,\n      })}\n    ></devtools-widget>`;\n    // clang-format on\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"messages-container\" ${ref(onMessageContainerRef)}>\n      ${messages.map((message, _, array) =>\n        renderChatMessage({\n          message,\n          isLoading,\n          isReadOnly,\n          canShowFeedbackForm,\n          isLast: array.at(-1) === message,\n          userInfo,\n          markdownRenderer,\n          onSuggestionClick,\n          onFeedbackSubmit,\n        }),\n      )}\n      ${renderPatchWidget()}\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderEmptyState({isTextInputDisabled, suggestions, onSuggestionClick}: {\n  isTextInputDisabled: boolean,\n  suggestions: AiAssistanceModel.ConversationSuggestion[],\n  onSuggestionClick: (suggestion: string) => void,\n}): Lit.TemplateResult {\n  // clang-format off\n  return html`<div class=\"empty-state-container\">\n    <div class=\"header\">\n      <div class=\"icon\">\n        <devtools-icon\n          name=\"smart-assistant\"\n        ></devtools-icon>\n      </div>\n      <h1>${lockedString(UIStringsNotTranslate.emptyStateText)}</h1>\n    </div>\n    <div class=\"empty-state-content\">\n      ${suggestions.map(({title, jslogContext}) => {\n        return html`<devtools-button\n          class=\"suggestion\"\n          @click=${() => onSuggestionClick(title)}\n          .data=${\n            {\n              variant: Buttons.Button.Variant.OUTLINED,\n              size: Buttons.Button.Size.REGULAR,\n              title,\n              jslogContext: jslogContext ?? 'suggestion',\n              disabled: isTextInputDisabled,\n            } as Buttons.Button.ButtonData\n          }\n        >${title}</devtools-button>`;\n      })}\n    </div>\n  </div>`;\n  // clang-format on\n}\n\nfunction renderReadOnlySection({onNewConversation, conversationType}: {\n  onNewConversation: () => void,\n  conversationType?: AiAssistanceModel.ConversationType,\n}): Lit.LitTemplate {\n  if (!conversationType) {\n    return Lit.nothing;\n  }\n\n  // clang-format off\n  return html`<div\n    class=\"chat-readonly-container\"\n    jslog=${VisualLogging.section('read-only')}\n  >\n    <span>${lockedString(UIStringsNotTranslate.pastConversation)}</span>\n    <devtools-button\n      aria-label=${lockedString(UIStringsNotTranslate.startNewChat)}\n      class=\"chat-inline-button\"\n      @click=${onNewConversation}\n      .data=${{\n        variant: Buttons.Button.Variant.TEXT,\n        title: lockedString(UIStringsNotTranslate.startNewChat),\n        jslogContext: 'start-new-chat',\n      } as Buttons.Button.ButtonData}\n    >${lockedString(UIStringsNotTranslate.startNewChat)}</devtools-button>\n  </div>`;\n  // clang-format on\n}\n\nfunction renderChatInputButtons(\n    {isLoading, blockedByCrossOrigin, isTextInputDisabled, isTextInputEmpty, imageInput, onCancel, onNewConversation}: {\n      isLoading: boolean,\n      blockedByCrossOrigin: boolean,\n      isTextInputDisabled: boolean,\n      isTextInputEmpty: boolean,\n      onCancel: (ev: SubmitEvent) => void,\n      onNewConversation: () => void,\n      imageInput?: ImageInputData,\n    }): Lit.TemplateResult {\n  if (isLoading) {\n    // clang-format off\n    return html`<devtools-button\n      class=\"chat-input-button\"\n      aria-label=${lockedString(UIStringsNotTranslate.cancelButtonTitle)}\n      @click=${onCancel}\n      .data=${\n        {\n          variant: Buttons.Button.Variant.ICON,\n          size: Buttons.Button.Size.REGULAR,\n          iconName: 'record-stop',\n          title: lockedString(UIStringsNotTranslate.cancelButtonTitle),\n          jslogContext: 'stop',\n        } as Buttons.Button.ButtonData\n      }\n    ></devtools-button>`;\n    // clang-format on\n  }\n  if (blockedByCrossOrigin) {\n    // clang-format off\n    return html`\n      <devtools-button\n        class=\"start-new-chat-button\"\n        aria-label=${lockedString(UIStringsNotTranslate.startNewChat)}\n        @click=${onNewConversation}\n        .data=${\n          {\n            variant: Buttons.Button.Variant.OUTLINED,\n            size: Buttons.Button.Size.SMALL,\n            title: lockedString(UIStringsNotTranslate.startNewChat),\n            jslogContext: 'start-new-chat',\n          } as Buttons.Button.ButtonData\n        }\n      >${lockedString(UIStringsNotTranslate.startNewChat)}</devtools-button>\n    `;\n    // clang-format on\n  }\n  // clang-format off\n  return html`<devtools-button\n    class=\"chat-input-button\"\n    aria-label=${lockedString(UIStringsNotTranslate.sendButtonTitle)}\n    .data=${\n      {\n        type: 'submit',\n        variant: Buttons.Button.Variant.ICON,\n        size: Buttons.Button.Size.REGULAR,\n        disabled: isTextInputDisabled || isTextInputEmpty || imageInput?.isLoading,\n        iconName: 'send',\n        title: lockedString(UIStringsNotTranslate.sendButtonTitle),\n        jslogContext: 'send',\n      } as Buttons.Button.ButtonData\n    }\n  ></devtools-button>`;\n}\n\nfunction renderMultimodalInputButtons({\n  multimodalInputEnabled,\n  blockedByCrossOrigin,\n  isTextInputDisabled,\n  imageInput,\n  uploadImageInputEnabled,\n  onTakeScreenshot,\n  onImageUpload,\n}: {\n  isTextInputDisabled: boolean,\n  blockedByCrossOrigin: boolean,\n  multimodalInputEnabled?: boolean,\n  imageInput?: ImageInputData,\n  uploadImageInputEnabled?: boolean,\n  onTakeScreenshot?: () => void,\n  onImageUpload?: (ev: Event) => void,\n}): Lit.LitTemplate {\n  if (!multimodalInputEnabled || blockedByCrossOrigin) {\n    return Lit.nothing;\n  }\n  // clang-format off\n  const addImageButton = uploadImageInputEnabled ? html`<devtools-button\n    class=\"chat-input-button\"\n    aria-label=${lockedString(UIStringsNotTranslate.addImageButtonTitle)}\n    @click=${onImageUpload}\n    .data=${\n      {\n        variant: Buttons.Button.Variant.ICON,\n        size: Buttons.Button.Size.REGULAR,\n        disabled: isTextInputDisabled || imageInput?.isLoading,\n        iconName: 'add-photo',\n        title: lockedString(UIStringsNotTranslate.addImageButtonTitle),\n        jslogContext: 'upload-image',\n      } as Buttons.Button.ButtonData\n    }\n  ></devtools-button>` : Lit.nothing;\n\n  return html`${addImageButton}<devtools-button\n    class=\"chat-input-button\"\n    aria-label=${lockedString(UIStringsNotTranslate.takeScreenshotButtonTitle)}\n    @click=${onTakeScreenshot}\n    .data=${\n      {\n        variant: Buttons.Button.Variant.ICON,\n        size: Buttons.Button.Size.REGULAR,\n        disabled: isTextInputDisabled || imageInput?.isLoading,\n        iconName: 'photo-camera',\n        title: lockedString(UIStringsNotTranslate.takeScreenshotButtonTitle),\n        jslogContext: 'take-screenshot',\n      } as Buttons.Button.ButtonData\n    }\n  ></devtools-button>`;\n  // clang-format on\n}\n\nfunction renderImageInput({\n  multimodalInputEnabled,\n  imageInput,\n  isTextInputDisabled,\n  onRemoveImageInput,\n}: {\n  multimodalInputEnabled?: boolean,\n  imageInput?: ImageInputData,\n  isTextInputDisabled?: boolean,\n  onRemoveImageInput?: () => void,\n}): Lit.LitTemplate {\n  if (!multimodalInputEnabled || !imageInput || isTextInputDisabled) {\n    return Lit.nothing;\n  }\n  // clang-format off\n    const crossButton = html`<devtools-button\n      aria-label=${lockedString(UIStringsNotTranslate.removeImageInputButtonTitle)}\n      @click=${onRemoveImageInput}\n      .data=${\n        {\n          variant: Buttons.Button.Variant.ICON,\n          size: Buttons.Button.Size.MICRO,\n          iconName: 'cross',\n          title: lockedString(UIStringsNotTranslate.removeImageInputButtonTitle),\n        } as Buttons.Button.ButtonData\n      }\n    ></devtools-button>`;\n  // clang-format on\n\n  if (imageInput.isLoading) {\n    // clang-format off\n      return html`<div class=\"image-input-container\">\n        ${crossButton}\n        <div class=\"loading\">\n          <devtools-spinner></devtools-spinner>\n        </div>\n      </div>`;\n    // clang-format on\n  }\n  // clang-format off\n    return  html`\n    <div class=\"image-input-container\">\n      ${crossButton}\n      <img src=\"data:${imageInput.mimeType};base64, ${imageInput.data}\" alt=\"Image input\" />\n    </div>`;\n  // clang-format on\n}\n\nfunction renderRelevantDataDisclaimer(\n    {isLoading, blockedByCrossOrigin}: {isLoading: boolean, blockedByCrossOrigin: boolean}): Lit.LitTemplate {\n  const classes =\n      Lit.Directives.classMap({'chat-input-disclaimer': true, 'hide-divider': !isLoading && blockedByCrossOrigin});\n  // clang-format off\n  return html`\n    <p class=${classes}>\n      <button\n        class=\"link\"\n        role=\"link\"\n        id=${RELEVANT_DATA_LINK_ID}\n        jslog=${VisualLogging.link('open-ai-settings').track({\n          click: true,\n        })}\n        @click=${() => {\n          void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n        }}\n      >${lockedString('Relevant data')}</button>&nbsp;${lockedString('is sent to Google')}\n    </p>\n  `;\n  // clang-format on\n}\n\nfunction renderChatInput({\n  isLoading,\n  blockedByCrossOrigin,\n  isTextInputDisabled,\n  inputPlaceholder,\n  state,\n  selectedContext,\n  inspectElementToggled,\n  multimodalInputEnabled,\n  conversationType,\n  imageInput,\n  isTextInputEmpty,\n  uploadImageInputEnabled,\n  aidaAvailability,\n  onContextClick,\n  onInspectElementClick,\n  onSubmit,\n  onTextAreaKeyDown,\n  onCancel,\n  onNewConversation,\n  onTakeScreenshot,\n  onRemoveImageInput,\n  onTextInputChange,\n  onImageUpload,\n}: {\n  isLoading: boolean,\n  blockedByCrossOrigin: boolean,\n  isTextInputDisabled: boolean,\n  inputPlaceholder: Platform.UIString.LocalizedString,\n  state: State,\n  selectedContext: AiAssistanceModel.ConversationContext<unknown>|null,\n  inspectElementToggled: boolean,\n  isTextInputEmpty: boolean,\n  aidaAvailability: Host.AidaClient.AidaAccessPreconditions,\n  onContextClick: () => void,\n  onInspectElementClick: () => void,\n  onSubmit: (ev: SubmitEvent) => void,\n  onTextAreaKeyDown: (ev: KeyboardEvent) => void,\n  onCancel: (ev: SubmitEvent) => void,\n  onNewConversation: () => void,\n  onTextInputChange: (input: string) => void,\n  multimodalInputEnabled?: boolean,\n  conversationType?: AiAssistanceModel.ConversationType,\n  imageInput?: ImageInputData,\n  uploadImageInputEnabled?: boolean,\n  onTakeScreenshot?: () => void,\n  onRemoveImageInput?: () => void,\n  onImageUpload?: (ev: Event) => void,\n}): Lit.LitTemplate {\n  if (!conversationType) {\n    return Lit.nothing;\n  }\n\n  const shouldShowMultiLine = state !== State.CONSENT_VIEW &&\n      aidaAvailability === Host.AidaClient.AidaAccessPreconditions.AVAILABLE && selectedContext;\n  const chatInputContainerCls = Lit.Directives.classMap({\n    'chat-input-container': true,\n    'single-line-layout': !shouldShowMultiLine,\n    disabled: isTextInputDisabled,\n  });\n\n  // clang-format off\n  return html`\n  <form class=\"input-form\" @submit=${onSubmit}>\n    <div class=${chatInputContainerCls}>\n      ${renderImageInput(\n        {multimodalInputEnabled, imageInput, isTextInputDisabled, onRemoveImageInput}\n      )}\n      <textarea class=\"chat-input\"\n        .disabled=${isTextInputDisabled}\n        wrap=\"hard\"\n        maxlength=\"10000\"\n        @keydown=${onTextAreaKeyDown}\n        @input=${(event: KeyboardEvent) => onTextInputChange((event.target as HTMLInputElement).value)}\n        placeholder=${inputPlaceholder}\n        jslog=${VisualLogging.textField('query').track({ keydown: 'Enter' })}\n        aria-description=${i18nString(UIStrings.inputTextAriaDescription)}\n      ></textarea>\n      <div class=\"chat-input-actions\">\n        <div class=\"chat-input-actions-left\">\n          ${shouldShowMultiLine ? renderSelection({\n            selectedContext,\n            inspectElementToggled,\n            conversationType,\n            isTextInputDisabled,\n            onContextClick,\n            onInspectElementClick,\n          }) : Lit.nothing}\n        </div>\n        <div class=\"chat-input-actions-right\">\n          <div class=\"chat-input-disclaimer-container\">\n            ${renderRelevantDataDisclaimer({isLoading, blockedByCrossOrigin})}\n          </div>\n          ${renderMultimodalInputButtons({\n            multimodalInputEnabled, blockedByCrossOrigin, isTextInputDisabled, imageInput, uploadImageInputEnabled, onTakeScreenshot, onImageUpload\n          })}\n          ${renderChatInputButtons({\n            isLoading, blockedByCrossOrigin, isTextInputDisabled, isTextInputEmpty, imageInput, onCancel, onNewConversation\n          })}\n        </div>\n      </div>\n    </div>\n  </form>`;\n  // clang-format on\n}\n\nfunction renderAidaUnavailableContents(\n    aidaAvailability:\n        Exclude<Host.AidaClient.AidaAccessPreconditions, Host.AidaClient.AidaAccessPreconditions.AVAILABLE>):\n    Lit.TemplateResult {\n  switch (aidaAvailability) {\n    case Host.AidaClient.AidaAccessPreconditions.NO_ACCOUNT_EMAIL:\n    case Host.AidaClient.AidaAccessPreconditions.SYNC_IS_PAUSED: {\n      return html`${i18nString(UIStrings.notLoggedIn)}`;\n    }\n    case Host.AidaClient.AidaAccessPreconditions.NO_INTERNET: {\n      return html`${i18nString(UIStrings.offline)}`;\n    }\n  }\n}\n\nfunction renderConsentViewContents(): Lit.TemplateResult {\n  const settingsLink = document.createElement('button');\n  settingsLink.textContent = i18nString(UIStrings.settingsLink);\n  settingsLink.classList.add('link');\n  UI.ARIAUtils.markAsLink(settingsLink);\n  settingsLink.addEventListener('click', () => {\n    void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n  });\n  settingsLink.setAttribute('jslog', `${VisualLogging.action('open-ai-settings').track({click: true})}`);\n\n  let consentViewContents: HTMLSpanElement;\n  // TODO(ergunsh): Should this `view` access `hostConfig` at all?\n  const config = Root.Runtime.hostConfig;\n  if (config.isOffTheRecord) {\n    return html`${i18nString(UIStrings.notAvailableInIncognitoMode)}`;\n  }\n  if (config.devToolsAiAssistancePerformanceAgent?.enabled) {\n    consentViewContents = i18n.i18n.getFormatLocalizedString(\n        str_, UIStrings.turnOnForStylesRequestsPerformanceAndFiles, {PH1: settingsLink});\n  } else if (config.devToolsAiAssistanceFileAgent?.enabled) {\n    consentViewContents =\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.turnOnForStylesRequestsAndFiles, {PH1: settingsLink});\n  } else if (config.devToolsAiAssistanceNetworkAgent?.enabled) {\n    consentViewContents =\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.turnOnForStylesAndRequests, {PH1: settingsLink});\n  } else {\n    consentViewContents = i18n.i18n.getFormatLocalizedString(str_, UIStrings.turnOnForStyles, {PH1: settingsLink});\n  }\n\n  return html`${consentViewContents}`;\n}\n\nfunction renderDisabledState(contents: Lit.TemplateResult): Lit.TemplateResult {\n  // clang-format off\n  return html`\n    <div class=\"empty-state-container\">\n      <div class=\"disabled-view\">\n        <div class=\"disabled-view-icon-container\">\n          <devtools-icon\n            .name=${'smart-assistant'}\n          ></devtools-icon>\n        </div>\n        <div>\n          ${contents}\n        </div>\n      </div>\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderMainContents({\n  state,\n  aidaAvailability,\n  messages,\n  isLoading,\n  isReadOnly,\n  canShowFeedbackForm,\n  isTextInputDisabled,\n  suggestions,\n  userInfo,\n  markdownRenderer,\n  conversationType,\n  changeSummary,\n  changeManager,\n  onSuggestionClick,\n  onFeedbackSubmit,\n  onMessageContainerRef,\n}: {\n  state: State,\n  aidaAvailability: Host.AidaClient.AidaAccessPreconditions,\n  messages: ChatMessage[],\n  isLoading: boolean,\n  isReadOnly: boolean,\n  canShowFeedbackForm: boolean,\n  isTextInputDisabled: boolean,\n  suggestions: AiAssistanceModel.ConversationSuggestion[],\n  userInfo: Pick<Host.InspectorFrontendHostAPI.SyncInformation, 'accountImage'|'accountFullName'>,\n  markdownRenderer: MarkdownRendererWithCodeBlock,\n  changeManager: AiAssistanceModel.ChangeManager,\n  onSuggestionClick: (suggestion: string) => void,\n  onFeedbackSubmit: (rpcId: Host.AidaClient.RpcGlobalId, rate: Host.AidaClient.Rating, feedback?: string) => void,\n  onMessageContainerRef: (el: Element|undefined) => void,\n  conversationType?: AiAssistanceModel.ConversationType,\n  changeSummary?: string,\n}): Lit.LitTemplate {\n  if (state === State.CONSENT_VIEW) {\n    return renderDisabledState(renderConsentViewContents());\n  }\n\n  if (aidaAvailability !== Host.AidaClient.AidaAccessPreconditions.AVAILABLE) {\n    return renderDisabledState(renderAidaUnavailableContents(aidaAvailability));\n  }\n\n  if (!conversationType) {\n    return Lit.nothing;\n  }\n\n  if (messages.length > 0) {\n    return renderMessages({\n      messages,\n      isLoading,\n      isReadOnly,\n      canShowFeedbackForm,\n      userInfo,\n      markdownRenderer,\n      changeSummary,\n      changeManager,\n      onSuggestionClick,\n      onFeedbackSubmit,\n      onMessageContainerRef,\n\n    });\n  }\n\n  return renderEmptyState({isTextInputDisabled, suggestions, onSuggestionClick});\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-ai-chat-view': ChatView;\n  }\n}\n\ncustomElements.define('devtools-ai-chat-view', ChatView);\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../ui/legacy/legacy.js';\nimport '../../ui/components/markdown_view/markdown_view.js';\nimport '../../ui/components/spinners/spinners.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as AiAssistanceModel from '../../models/ai_assistance/ai_assistance.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives, html, type LitTemplate, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as ChangesPanel from '../changes/changes.js';\nimport * as PanelCommon from '../common/common.js';\n\nimport {SelectWorkspaceDialog} from './SelectWorkspaceDialog.js';\n\n/*\n* Strings that don't need to be translated at this time.\n*/\nconst UIStringsNotTranslate = {\n  /**\n   *@description Text displayed for showing patch widget view.\n   */\n  unsavedChanges: 'Unsaved changes',\n  /**\n   *@description Loading text displayed as a summary title when the patch suggestion is getting loaded\n   */\n  applyingToWorkspace: 'Applying to workspace…',\n  /**\n   *@description Button text for staging changes to workspace.\n   */\n  applyToWorkspace: 'Apply to workspace',\n  /**\n   *@description Button text to change the selected workspace\n   */\n  change: 'Change',\n  /**\n   * @description Accessible title of the Change button to indicate that\n   * the button can be used to change the root folder.\n   */\n  changeRootFolder: 'Change project root folder',\n  /**\n   *@description Button text to cancel applying to workspace\n   */\n  cancel: 'Cancel',\n  /**\n   *@description Button text to discard the suggested changes and not save them to file system\n   */\n  discard: 'Discard',\n  /**\n   *@description Button text to save all the suggested changes to file system\n   */\n  saveAll: 'Save all',\n  /**\n   *@description Header text after the user saved the changes to the disk.\n   */\n  savedToDisk: 'Saved to disk',\n  /**\n   *@description Disclaimer text shown for using code snippets with caution\n   */\n  codeDisclaimer: 'Use code snippets with caution',\n  /**\n   *@description Tooltip text for the info icon beside the \"Apply to workspace\" button\n   */\n  applyToWorkspaceTooltip: 'Source code from the selected folder is sent to Google to generate code suggestions.',\n  /**\n   *@description Tooltip text for the info icon beside the \"Apply to workspace\" button when enterprise logging is off\n   */\n  applyToWorkspaceTooltipNoLogging:\n      'Source code from the selected folder is sent to Google to generate code suggestions. This data will not be used to improve Google’s AI models.',\n  /**\n   *@description The footer disclaimer that links to more information\n   * about the AI feature. Same text as in ChatView.\n   */\n  learnMore: 'Learn about AI in DevTools',\n  /**\n   *@description Header text for the AI-powered code suggestions disclaimer dialog.\n   */\n  freDisclaimerHeader: 'Get AI-powered code suggestions for your workspace',\n  /**\n   *@description First disclaimer item text for the fre dialog.\n   */\n  freDisclaimerTextAiWontAlwaysGetItRight: 'This feature uses AI and won’t always get it right',\n  /**\n   *@description Second disclaimer item text for the fre dialog.\n   */\n  freDisclaimerTextPrivacy: 'Source code from the selected folder is sent to Google to generate code suggestions',\n  /**\n   *@description Second disclaimer item text for the fre dialog when enterprise logging is off.\n   */\n  freDisclaimerTextPrivacyNoLogging:\n      'Source code from the selected folder is sent to Google to generate code suggestions. This data will not be used to improve Google’s AI models.',\n  /**\n   *@description Third disclaimer item text for the fre dialog.\n   */\n  freDisclaimerTextUseWithCaution: 'Use generated code snippets with caution',\n  /**\n   * @description Title of the link opening data that was used to\n   * produce a code suggestion.\n   */\n  viewUploadedFiles: 'View data sent to Google',\n  /**\n   * @description Text indicating that a link opens in a new tab (for a11y).\n   */\n  opensInNewTab: '(opens in a new tab)',\n  /**\n   * @description Generic error text for the case the changes were not applied to the workspace.\n   */\n  genericErrorMessage: 'Changes couldn’t be applied to your workspace.',\n} as const;\n\nconst lockedString = i18n.i18n.lockedString;\n\nconst CODE_SNIPPET_WARNING_URL = 'https://support.google.com/legal/answer/13505487';\n\nexport enum PatchSuggestionState {\n  /**\n   * The user did not attempt patching yet\n   */\n  INITIAL = 'initial',\n  /**\n   * Applying to page tree is in progress\n   */\n  LOADING = 'loading',\n  /**\n   * Applying to page tree succeeded\n   */\n  SUCCESS = 'success',\n  /**\n   * Applying to page tree failed\n   */\n  ERROR = 'error',\n}\n\nenum SelectedProjectType {\n  /**\n   * No project selected\n   */\n  NONE = 'none',\n  /**\n   * The selected project is not an automatic workspace project\n   */\n  REGULAR = 'regular',\n  /**\n   * The selected project is a disconnected automatic workspace project\n   */\n  AUTOMATIC_DISCONNECTED = 'automaticDisconncted',\n  /**\n   * The selected project is a connected automatic workspace project\n   */\n  AUTOMATIC_CONNECTED = 'automaticConnected',\n}\n\nexport interface ViewInput {\n  workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl;\n  patchSuggestionState: PatchSuggestionState;\n  changeSummary?: string;\n  sources?: string;\n  projectName: string;\n  projectPath: Platform.DevToolsPath.RawPathString;\n  projectType: SelectedProjectType;\n  savedToDisk?: boolean;\n  applyToWorkspaceTooltipText: Platform.UIString.LocalizedString;\n  onLearnMoreTooltipClick: () => void;\n  onApplyToWorkspace: () => void;\n  onCancel: () => void;\n  onDiscard: () => void;\n  onSaveAll: () => void;\n  onChangeWorkspaceClick?: () => void;\n}\n\nexport interface ViewOutput {\n  tooltipRef?: Directives.Ref<HTMLElement>;\n  changeRef?: Directives.Ref<HTMLElement>;\n  summaryRef?: Directives.Ref<HTMLElement>;\n}\n\ntype View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nexport class PatchWidget extends UI.Widget.Widget {\n  changeSummary = '';\n  changeManager: AiAssistanceModel.ChangeManager|undefined;\n  // Whether the user completed first run experience dialog or not.\n  #aiPatchingFreCompletedSetting =\n      Common.Settings.Settings.instance().createSetting('ai-assistance-patching-fre-completed', false);\n  #projectIdSetting =\n      Common.Settings.Settings.instance().createSetting('ai-assistance-patching-selected-project-id', '');\n  #view: View;\n  #viewOutput: ViewOutput = {};\n  #aidaClient: Host.AidaClient.AidaClient;\n  #applyPatchAbortController?: AbortController;\n  #project?: Workspace.Workspace.Project;\n  #patchSources?: string;\n  #savedToDisk?: boolean;\n  #noLogging: boolean;  // Whether the enterprise setting is `ALLOW_WITHOUT_LOGGING` or not.\n  #patchSuggestionState = PatchSuggestionState.INITIAL;\n  #workspaceDiff = WorkspaceDiff.WorkspaceDiff.workspaceDiff();\n  #workspace = Workspace.Workspace.WorkspaceImpl.instance();\n  #automaticFileSystem =\n      Persistence.AutomaticFileSystemManager.AutomaticFileSystemManager.instance().automaticFileSystem;\n  #applyToDisconnectedAutomaticWorkspace = false;\n  #popoverHelper: UI.PopoverHelper.PopoverHelper|null = null;\n  // `rpcId` from the `applyPatch` request\n  #rpcId: Host.AidaClient.RpcGlobalId|null = null;\n\n  constructor(element?: HTMLElement, view?: View, opts?: {\n    aidaClient: Host.AidaClient.AidaClient,\n  }) {\n    super(false, false, element);\n    this.#aidaClient = opts?.aidaClient ?? new Host.AidaClient.AidaClient();\n    this.#noLogging = Root.Runtime.hostConfig.aidaAvailability?.enterprisePolicyValue ===\n        Root.Runtime.GenAiEnterprisePolicyValue.ALLOW_WITHOUT_LOGGING;\n\n    // clang-format off\n    this.#view = view ?? ((input, output, target) => {\n      if (!input.changeSummary && input.patchSuggestionState === PatchSuggestionState.INITIAL) {\n        return;\n      }\n      output.tooltipRef = output.tooltipRef ?? Directives.createRef<HTMLElement>();\n      output.changeRef = output.changeRef ?? Directives.createRef<HTMLElement>();\n      output.summaryRef = output.summaryRef ?? Directives.createRef<HTMLElement>();\n\n      function renderSourcesLink(): LitTemplate {\n        if (!input.sources) {\n          return nothing;\n        }\n\n        return html`<x-link\n          class=\"link\"\n          title=\"${UIStringsNotTranslate.viewUploadedFiles} ${UIStringsNotTranslate.opensInNewTab}\"\n          href=\"data:text/plain;charset=utf-8,${encodeURIComponent(input.sources)}\"\n          jslog=${VisualLogging.link('files-used-in-patching').track({click: true})}>\n          ${UIStringsNotTranslate.viewUploadedFiles}\n        </x-link>`;\n      }\n\n      function renderHeader(): LitTemplate {\n        if (input.savedToDisk) {\n          return html`\n            <devtools-icon class=\"green-bright-icon summary-badge\" .name=${'check-circle'}></devtools-icon>\n            <span class=\"header-text\">\n              ${lockedString(UIStringsNotTranslate.savedToDisk)}\n            </span>\n          `;\n        }\n\n        if (input.patchSuggestionState === PatchSuggestionState.SUCCESS) {\n          return html`\n            <devtools-icon class=\"on-tonal-icon summary-badge\" .name=${'difference'}></devtools-icon>\n            <span class=\"header-text\">\n              ${lockedString(`File changes in ${input.projectName}`)}\n            </span>\n            <devtools-icon\n              class=\"arrow\"\n              .name=${'chevron-down'}\n            ></devtools-icon>\n          `;\n        }\n\n        return html`\n          <devtools-icon class=\"on-tonal-icon summary-badge\" .name=${'pen-spark'}></devtools-icon>\n          <span class=\"header-text\">\n            ${lockedString(UIStringsNotTranslate.unsavedChanges)}\n          </span>\n          <devtools-icon\n            class=\"arrow\"\n            .name=${'chevron-down'}\n          ></devtools-icon>\n        `;\n      }\n\n      function renderContent(): LitTemplate {\n        if ((!input.changeSummary && input.patchSuggestionState === PatchSuggestionState.INITIAL) || input.savedToDisk) {\n          return nothing;\n        }\n\n        if (input.patchSuggestionState === PatchSuggestionState.SUCCESS) {\n          return html`<devtools-widget .widgetConfig=${UI.Widget.widgetConfig(ChangesPanel.CombinedDiffView.CombinedDiffView, {\n            workspaceDiff: input.workspaceDiff,\n            // Ignore user creates inspector-stylesheets\n            ignoredUrls: ['inspector://']\n          })}></devtools-widget>`;\n        }\n\n        return html`<devtools-code-block\n          .code=${input.changeSummary ?? ''}\n          .codeLang=${'css'}\n          .displayNotice=${true}\n        ></devtools-code-block>\n        ${input.patchSuggestionState === PatchSuggestionState.ERROR\n          ? html`<div class=\"error-container\">\n              <devtools-icon .name=${'cross-circle-filled'}></devtools-icon>${\n              lockedString(UIStringsNotTranslate.genericErrorMessage)\n              } ${renderSourcesLink()}\n            </div>`\n          : nothing\n        }`;\n      }\n\n      function renderFooter(): LitTemplate {\n        if (input.savedToDisk) {\n          return nothing;\n        }\n\n        if (input.patchSuggestionState === PatchSuggestionState.SUCCESS) {\n          return html`\n          <div class=\"footer\">\n            <div class=\"left-side\">\n              <x-link class=\"link disclaimer-link\" href=\"https://support.google.com/legal/answer/13505487\" jslog=${\n                VisualLogging.link('code-disclaimer').track({\n                  click: true,\n                })}>\n                ${lockedString(UIStringsNotTranslate.codeDisclaimer)}\n              </x-link>\n              ${renderSourcesLink()}\n            </div>\n            <div class=\"save-or-discard-buttons\">\n              <devtools-button\n                @click=${input.onDiscard}\n                .jslogContext=${'patch-widget.discard'}\n                .variant=${Buttons.Button.Variant.OUTLINED}>\n                  ${lockedString(UIStringsNotTranslate.discard)}\n              </devtools-button>\n              <devtools-button\n                @click=${input.onSaveAll}\n                .jslogContext=${'patch-widget.save-all'}\n                .variant=${Buttons.Button.Variant.PRIMARY}>\n                  ${lockedString(UIStringsNotTranslate.saveAll)}\n              </devtools-button>\n            </div>\n          </div>\n          `;\n        }\n\n        const iconName = input.projectType === SelectedProjectType.AUTOMATIC_DISCONNECTED ? 'folder-off' : input.projectType === SelectedProjectType.AUTOMATIC_CONNECTED ? 'folder-asterisk' : 'folder';\n        return html`\n        <div class=\"footer\">\n          ${input.projectName ? html`\n            <div class=\"change-workspace\" jslog=${VisualLogging.section('patch-widget.workspace')}>\n                <devtools-icon .name=${iconName}></devtools-icon>\n                <span class=\"folder-name\" title=${input.projectPath}>${input.projectName}</span>\n              ${input.onChangeWorkspaceClick ? html`\n                <devtools-button\n                  @click=${input.onChangeWorkspaceClick}\n                  .jslogContext=${'change-workspace'}\n                  .variant=${Buttons.Button.Variant.TEXT}\n                  .title=${lockedString(UIStringsNotTranslate.changeRootFolder)}\n                  .disabled=${input.patchSuggestionState === PatchSuggestionState.LOADING}\n                  ${Directives.ref(output.changeRef)}\n                >${lockedString(UIStringsNotTranslate.change)}</devtools-button>\n              ` : nothing}\n            </div>\n          ` : nothing}\n          <div class=\"apply-to-workspace-container\" aria-live=\"polite\">\n            ${input.patchSuggestionState === PatchSuggestionState.LOADING ? html`\n              <div class=\"loading-text-container\" jslog=${VisualLogging.section('patch-widget.apply-to-workspace-loading')}>\n                <devtools-spinner></devtools-spinner>\n                <span>\n                  ${lockedString(UIStringsNotTranslate.applyingToWorkspace)}\n                </span>\n              </div>\n            ` : html`\n                <devtools-button\n                @click=${input.onApplyToWorkspace}\n                .jslogContext=${'patch-widget.apply-to-workspace'}\n                .variant=${Buttons.Button.Variant.OUTLINED}>\n                ${lockedString(UIStringsNotTranslate.applyToWorkspace)}\n              </devtools-button>\n            `}\n            ${input.patchSuggestionState === PatchSuggestionState.LOADING ? html`<devtools-button\n              @click=${input.onCancel}\n              .jslogContext=${'cancel'}\n              .variant=${Buttons.Button.Variant.OUTLINED}>\n              ${lockedString(UIStringsNotTranslate.cancel)}\n            </devtools-button>` : nothing}\n            <devtools-button\n              aria-details=\"info-tooltip\"\n              .jslogContext=${'patch-widget.info-tooltip-trigger'}\n              .iconName=${'info'}\n              .variant=${Buttons.Button.Variant.ICON}\n              .title=${input.applyToWorkspaceTooltipText}\n            ></devtools-button>\n          </div>\n        </div>`;\n      }\n\n      // Use a simple div for the \"Saved to disk\" state as it's not expandable,\n      // otherwise use the interactive <details> element.\n      const template = input.savedToDisk\n        ? html`\n          <div class=\"change-summary saved-to-disk\" role=\"status\" aria-live=\"polite\">\n            <div class=\"header-container\">\n             ${renderHeader()}\n             </div>\n          </div>`\n        : html`\n          <details class=\"change-summary\" jslog=${VisualLogging.section('patch-widget')}>\n            <summary class=\"header-container\" ${Directives.ref(output.summaryRef)}>\n              ${renderHeader()}\n            </summary>\n            ${renderContent()}\n            ${renderFooter()}\n          </details>\n        `;\n\n      render(template, target, {host: target});\n    });\n    // We're using PopoverHelper as a workaround instead of using <devtools-tooltip>. See the bug for more details.\n    // TODO: Update here when b/409965560 is fixed.\n    this.#popoverHelper = new UI.PopoverHelper.PopoverHelper(this.contentElement, event => {\n      // There are two ways this event is received for showing a popover case:\n      // * The latest element on the composed path is `<devtools-button>`\n      // * The 2nd element on the composed path is `<devtools-button>` (the last element is the `<button>` inside it.)\n      const hoveredNode = event.composedPath()[0];\n      const maybeDevToolsButton = event.composedPath()[2];\n\n      const popoverShownNode = hoveredNode instanceof HTMLElement && hoveredNode.getAttribute('aria-details') === 'info-tooltip' ? hoveredNode\n        : maybeDevToolsButton instanceof HTMLElement && maybeDevToolsButton.getAttribute('aria-details') === 'info-tooltip' ? maybeDevToolsButton\n        : null;\n      if (!popoverShownNode) {\n        return null;\n      }\n      return {\n        box: popoverShownNode.boxInWindow(),\n        show: async (popover: UI.GlassPane.GlassPane) => {\n          // clang-format off\n          render(html`\n            <style>\n              .info-tooltip-container {\n                max-width: var(--sys-size-28);\n                padding: var(--sys-size-4) var(--sys-size-5);\n\n                .tooltip-link {\n                  display: block;\n                  margin-top: var(--sys-size-4);\n                  color: var(--sys-color-primary);\n                  padding-left: 0;\n                }\n              }\n            </style>\n            <div class=\"info-tooltip-container\">\n              ${UIStringsNotTranslate.applyToWorkspaceTooltip}\n              <button\n                class=\"link tooltip-link\"\n                role=\"link\"\n                jslog=${VisualLogging.link('open-ai-settings').track({\n                  click: true,\n                })}\n                @click=${this.#onLearnMoreTooltipClick}\n              >${lockedString(UIStringsNotTranslate.learnMore)}</button>\n            </div>`, popover.contentElement, {host: this});\n          // clang-forat on\n          return true;\n        },\n      };\n    }, 'patch-widget.info-tooltip');\n    this.#popoverHelper.setTimeout(0);\n    // clang-format on\n    this.requestUpdate();\n  }\n\n  #onLearnMoreTooltipClick(): void {\n    this.#viewOutput.tooltipRef?.value?.hidePopover();\n    void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n  }\n\n  #getDisplayedProject(): {projectName: string, projectPath: Platform.DevToolsPath.RawPathString} {\n    if (this.#project) {\n      return {\n        projectName: Common.ParsedURL.ParsedURL.encodedPathToRawPathString(\n            this.#project.displayName() as Platform.DevToolsPath.EncodedPathString),\n        projectPath: Common.ParsedURL.ParsedURL.urlToRawPathString(\n            this.#project.id() as Platform.DevToolsPath.UrlString, Host.Platform.isWin()),\n      };\n    }\n    if (this.#automaticFileSystem) {\n      return {\n        projectName: Common.ParsedURL.ParsedURL.extractName(this.#automaticFileSystem.root),\n        projectPath: this.#automaticFileSystem.root,\n      };\n    }\n    return {\n      projectName: '',\n      projectPath: Platform.DevToolsPath.EmptyRawPathString,\n    };\n  }\n\n  #shouldShowChangeButton(): boolean {\n    const automaticFileSystemProject =\n        this.#automaticFileSystem ? this.#workspace.projectForFileSystemRoot(this.#automaticFileSystem.root) : null;\n    const regularProjects = this.#workspace.projectsForType(Workspace.Workspace.projectTypes.FileSystem)\n                                .filter(\n                                    project => project instanceof Persistence.FileSystemWorkspaceBinding.FileSystem &&\n                                        project.fileSystem().type() ===\n                                            Persistence.PlatformFileSystem.PlatformFileSystemType.WORKSPACE_PROJECT)\n                                .filter(project => project !== automaticFileSystemProject);\n    return regularProjects.length > 0;\n  }\n\n  #getSelectedProjectType(projectPath: Platform.DevToolsPath.RawPathString): SelectedProjectType {\n    if (this.#automaticFileSystem && this.#automaticFileSystem.root === projectPath) {\n      return this.#project ? SelectedProjectType.AUTOMATIC_CONNECTED : SelectedProjectType.AUTOMATIC_DISCONNECTED;\n    }\n    return this.#project ? SelectedProjectType.NONE : SelectedProjectType.REGULAR;\n  }\n\n  override performUpdate(): void {\n    const {projectName, projectPath} = this.#getDisplayedProject();\n\n    this.#view(\n        {\n          workspaceDiff: this.#workspaceDiff,\n          changeSummary: this.changeSummary,\n          patchSuggestionState: this.#patchSuggestionState,\n          sources: this.#patchSources,\n          projectName,\n          projectPath,\n          projectType: this.#getSelectedProjectType(projectPath),\n          savedToDisk: this.#savedToDisk,\n          applyToWorkspaceTooltipText: this.#noLogging ?\n              lockedString(UIStringsNotTranslate.applyToWorkspaceTooltipNoLogging) :\n              lockedString(UIStringsNotTranslate.applyToWorkspaceTooltip),\n          onLearnMoreTooltipClick: this.#onLearnMoreTooltipClick.bind(this),\n          onApplyToWorkspace: this.#onApplyToWorkspace.bind(this),\n          onCancel: () => {\n            this.#applyPatchAbortController?.abort();\n          },\n          onDiscard: this.#onDiscard.bind(this),\n          onSaveAll: this.#onSaveAll.bind(this),\n          onChangeWorkspaceClick: this.#shouldShowChangeButton() ?\n              this.#showSelectWorkspaceDialog.bind(this, {applyPatch: false}) :\n              undefined,\n        },\n        this.#viewOutput, this.contentElement);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.#selectDefaultProject();\n\n    if (isAiAssistancePatchingEnabled()) {\n      this.#workspace.addEventListener(Workspace.Workspace.Events.ProjectAdded, this.#onProjectAdded, this);\n      this.#workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved, this.#onProjectRemoved, this);\n    }\n  }\n\n  override willHide(): void {\n    this.#applyToDisconnectedAutomaticWorkspace = false;\n    if (isAiAssistancePatchingEnabled()) {\n      this.#workspace.removeEventListener(Workspace.Workspace.Events.ProjectAdded, this.#onProjectAdded, this);\n      this.#workspace.removeEventListener(Workspace.Workspace.Events.ProjectRemoved, this.#onProjectRemoved, this);\n    }\n  }\n\n  async #showFreDisclaimerIfNeeded(): Promise<boolean> {\n    const isAiPatchingFreCompleted = this.#aiPatchingFreCompletedSetting.get();\n    if (isAiPatchingFreCompleted) {\n      return true;\n    }\n\n    const result = await PanelCommon.FreDialog.show({\n      header: {iconName: 'smart-assistant', text: lockedString(UIStringsNotTranslate.freDisclaimerHeader)},\n      reminderItems: [\n        {\n          iconName: 'psychiatry',\n          content: lockedString(UIStringsNotTranslate.freDisclaimerTextAiWontAlwaysGetItRight),\n        },\n        {\n          iconName: 'google',\n          content: this.#noLogging ? lockedString(UIStringsNotTranslate.freDisclaimerTextPrivacyNoLogging) :\n                                     lockedString(UIStringsNotTranslate.freDisclaimerTextPrivacy),\n        },\n        {\n          iconName: 'warning',\n          // clang-format off\n          content: html`<x-link\n            href=${CODE_SNIPPET_WARNING_URL}\n            class=\"link devtools-link\"\n            jslog=${VisualLogging.link('code-snippets-explainer.patch-widget').track({\n              click: true\n            })}\n          >${lockedString(UIStringsNotTranslate.freDisclaimerTextUseWithCaution)}</x-link>`,\n          // clang-format on\n        }\n      ],\n      onLearnMoreClick: () => {\n        void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n      },\n      ariaLabel: lockedString(UIStringsNotTranslate.freDisclaimerHeader),\n      learnMoreButtonTitle: lockedString(UIStringsNotTranslate.learnMore),\n    });\n\n    if (result) {\n      this.#aiPatchingFreCompletedSetting.set(true);\n    }\n    return result;\n  }\n\n  #selectDefaultProject(): void {\n    const project = this.#automaticFileSystem ?\n        this.#workspace.projectForFileSystemRoot(this.#automaticFileSystem.root) :\n        this.#workspace.project(this.#projectIdSetting.get());\n    if (project) {\n      this.#project = project;\n    } else {\n      this.#project = undefined;\n      this.#projectIdSetting.set('');\n    }\n    this.requestUpdate();\n  }\n\n  #onProjectAdded(event: Common.EventTarget.EventTargetEvent<Workspace.Workspace.Project>): void {\n    const addedProject = event.data;\n    if (this.#applyToDisconnectedAutomaticWorkspace && this.#automaticFileSystem &&\n        addedProject === this.#workspace.projectForFileSystemRoot(this.#automaticFileSystem.root)) {\n      this.#applyToDisconnectedAutomaticWorkspace = false;\n      this.#project = addedProject;\n      void this.#applyPatchAndUpdateUI();\n    } else if (this.#project === undefined) {\n      this.#selectDefaultProject();\n    }\n  }\n\n  #onProjectRemoved(): void {\n    if (this.#project && !this.#workspace.project(this.#project.id())) {\n      this.#projectIdSetting.set('');\n      this.#project = undefined;\n      this.requestUpdate();\n    }\n  }\n\n  #showSelectWorkspaceDialog(options: {applyPatch: boolean} = {applyPatch: false}): void {\n    const onProjectSelected = (project: Workspace.Workspace.Project): void => {\n      this.#project = project;\n      this.#projectIdSetting.set(project.id());\n      if (options.applyPatch) {\n        void this.#applyPatchAndUpdateUI();\n      } else {\n        this.requestUpdate();\n        void this.updateComplete.then(() => {\n          this.contentElement?.querySelector('.apply-to-workspace-container devtools-button')\n              ?.shadowRoot?.querySelector('button')\n              ?.focus();\n        });\n      }\n    };\n\n    SelectWorkspaceDialog.show(onProjectSelected, this.#project);\n  }\n\n  async #onApplyToWorkspace(): Promise<void> {\n    if (!isAiAssistancePatchingEnabled()) {\n      return;\n    }\n\n    // Show the FRE dialog if needed and only continue when\n    // the user accepted the disclaimer.\n    const freDisclaimerCompleted = await this.#showFreDisclaimerIfNeeded();\n    if (!freDisclaimerCompleted) {\n      return;\n    }\n\n    if (this.#project) {\n      await this.#applyPatchAndUpdateUI();\n    } else if (this.#automaticFileSystem) {\n      this.#applyToDisconnectedAutomaticWorkspace = true;\n      await Persistence.AutomaticFileSystemManager.AutomaticFileSystemManager.instance().connectAutomaticFileSystem(\n          /* addIfMissing= */ true);\n    } else {\n      this.#showSelectWorkspaceDialog({applyPatch: true});\n    }\n  }\n\n  /**\n   * The modified files excluding inspector stylesheets\n   */\n  get #modifiedFiles(): Workspace.UISourceCode.UISourceCode[] {\n    return this.#workspaceDiff.modifiedUISourceCodes().filter(modifiedUISourceCode => {\n      return !modifiedUISourceCode.url().startsWith('inspector://');\n    });\n  }\n\n  async #applyPatchAndUpdateUI(): Promise<void> {\n    const changeSummary = this.changeSummary;\n    if (!changeSummary) {\n      throw new Error('Change summary does not exist');\n    }\n\n    this.#patchSuggestionState = PatchSuggestionState.LOADING;\n    this.#rpcId = null;\n    this.requestUpdate();\n    const {response, processedFiles} = await this.#applyPatch(changeSummary);\n    if (response && 'rpcId' in response && response.rpcId) {\n      this.#rpcId = response.rpcId;\n    }\n\n    // Determines if applying the patch resulted in any actual file changes in the workspace.\n    // This is crucial because the agent might return an answer (e.g., an explanation)\n    // without making any code modifications (i.e., no `writeFile` calls).\n    // If no files were modified, we avoid transitioning to a success state,\n    // which would otherwise lead to an empty and potentially confusing diff view.\n    //\n    // Note: The `hasChanges` check below is based on `modifiedUISourceCodes()`, which reflects\n    // *all* current modifications in the workspace. It does not differentiate between\n    // changes made by this specific AI patch operation versus pre-existing changes\n    // made by the user. Consequently, if the AI patch itself makes no changes but the\n    // user already had other modified files, the widget will still transition to the\n    // success state (displaying all current workspace modifications).\n    const hasChanges = this.#modifiedFiles.length > 0;\n    if (response?.type === AiAssistanceModel.ResponseType.ANSWER && hasChanges) {\n      this.#patchSuggestionState = PatchSuggestionState.SUCCESS;\n    } else if (\n        response?.type === AiAssistanceModel.ResponseType.ERROR &&\n        response.error === AiAssistanceModel.ErrorType.ABORT) {\n      // If this is an abort error, we're returning back to the initial state.\n      this.#patchSuggestionState = PatchSuggestionState.INITIAL;\n    } else {\n      this.#patchSuggestionState = PatchSuggestionState.ERROR;\n    }\n    this.#patchSources = `Filenames in ${this.#project?.displayName()}.\nFiles:\n${processedFiles.map(filename => `* ${filename}`).join('\\n')}`;\n    this.requestUpdate();\n\n    if (this.#patchSuggestionState === PatchSuggestionState.SUCCESS) {\n      void this.updateComplete.then(() => {\n        this.#viewOutput.summaryRef?.value?.focus();\n      });\n    }\n  }\n\n  #onDiscard(): void {\n    for (const modifiedUISourceCode of this.#modifiedFiles) {\n      modifiedUISourceCode.resetWorkingCopy();\n    }\n\n    this.#patchSuggestionState = PatchSuggestionState.INITIAL;\n    this.#patchSources = undefined;\n    void this.changeManager?.popStashedChanges();\n    this.#submitRating(Host.AidaClient.Rating.NEGATIVE);\n    this.requestUpdate();\n    void this.updateComplete.then(() => {\n      this.#viewOutput.changeRef?.value?.focus();\n    });\n  }\n\n  #onSaveAll(): void {\n    for (const modifiedUISourceCode of this.#modifiedFiles) {\n      modifiedUISourceCode.commitWorkingCopy();\n    }\n    void this.changeManager?.stashChanges().then(() => {\n      this.changeManager?.dropStashedChanges();\n    });\n\n    this.#savedToDisk = true;\n    this.#submitRating(Host.AidaClient.Rating.POSITIVE);\n    this.requestUpdate();\n  }\n\n  #submitRating(rating: Host.AidaClient.Rating): void {\n    if (!this.#rpcId) {\n      return;\n    }\n\n    void this.#aidaClient.registerClientEvent({\n      corresponding_aida_rpc_global_id: this.#rpcId,\n      disable_user_content_logging: true,\n      do_conversation_client_event: {\n        user_feedback: {\n          sentiment: rating,\n        },\n      },\n    });\n  }\n\n  async #applyPatch(changeSummary: string): Promise<{\n    response: AiAssistanceModel.ResponseData | undefined,\n    processedFiles: string[],\n  }> {\n    if (!this.#project) {\n      throw new Error('Project does not exist');\n    }\n    this.#applyPatchAbortController = new AbortController();\n    const agent = new AiAssistanceModel.PatchAgent({\n      aidaClient: this.#aidaClient,\n      serverSideLoggingEnabled: false,\n      project: this.#project,\n    });\n    const {responses, processedFiles} =\n        await agent.applyChanges(changeSummary, {signal: this.#applyPatchAbortController.signal});\n    return {\n      response: responses.at(-1),\n      processedFiles,\n    };\n  }\n}\n\nexport function isAiAssistancePatchingEnabled(): boolean {\n  return Boolean(Root.Runtime.hostConfig.devToolsFreestyler?.patching);\n}\n\ninterface ExpectedChange {\n  path: string;\n  matches: string[];\n  doesNotMatch?: string[];\n}\n\n// @ts-expect-error temporary global function for local testing.\nwindow.aiAssistanceTestPatchPrompt =\n    async (projectName: string, changeSummary: string, expectedChanges: ExpectedChange[]) => {\n  if (!isAiAssistancePatchingEnabled()) {\n    return;\n  }\n  const workspaceDiff = WorkspaceDiff.WorkspaceDiff.workspaceDiff();\n  const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n  const project = workspace.projectsForType(Workspace.Workspace.projectTypes.FileSystem)\n                      .filter(\n                          project => project instanceof Persistence.FileSystemWorkspaceBinding.FileSystem &&\n                              project.fileSystem().type() ===\n                                  Persistence.PlatformFileSystem.PlatformFileSystemType.WORKSPACE_PROJECT)\n                      .find(project => project.displayName() === projectName);\n\n  if (!project) {\n    throw new Error('project not found');\n  }\n  const aidaClient = new Host.AidaClient.AidaClient();\n  const agent = new AiAssistanceModel.PatchAgent({\n    aidaClient,\n    serverSideLoggingEnabled: false,\n    project,\n  });\n  try {\n    const assertionFailures = [];\n    const {processedFiles, responses} = await agent.applyChanges(changeSummary);\n    if (responses.at(-1)?.type === AiAssistanceModel.ResponseType.ERROR) {\n      return {\n        error: 'failed to patch',\n        debugInfo: {\n          responses,\n          processedFiles,\n        },\n      };\n    }\n    for (const file of processedFiles) {\n      const change = expectedChanges.find(change => change.path === file);\n      if (!change) {\n        assertionFailures.push(`Patched ${file} that was not expected`);\n        break;\n      }\n      const agentProject = agent.agentProject;\n      const content = await agentProject.readFile(file);\n      if (!content) {\n        throw new Error(`${file} has no content`);\n      }\n      for (const m of change.matches) {\n        if (!content.match(new RegExp(m, 'gm'))) {\n          assertionFailures.push({\n            message: `Did not match ${m} in ${file}`,\n            file,\n            content,\n          });\n        }\n      }\n      for (const m of change.doesNotMatch || []) {\n        if (content.match(new RegExp(m, 'gm'))) {\n          assertionFailures.push({\n            message: `Unexpectedly matched ${m} in ${file}`,\n            file,\n            content,\n          });\n        }\n      }\n    }\n    return {\n      assertionFailures,\n      debugInfo: {\n        responses,\n        processedFiles,\n      },\n    };\n  } finally {\n    workspaceDiff.modifiedUISourceCodes().forEach(modifiedUISourceCode => {\n      modifiedUISourceCode.resetWorkingCopy();\n    });\n  }\n};\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport selectWorkspaceDialogStyles from './selectWorkspaceDialog.css.js';\n\n/*\n* Strings that don't need to be translated at this time.\n*/\nconst UIStringsNotTranslate = {\n  /**\n   *@description Heading of dialog box which asks user to select a workspace folder.\n   */\n  selectFolder: 'Select folder',\n  /**\n   *@description Heading of dialog box which asks user to select a workspace folder for a11y clients.\n   */\n  selectFolderAccessibleLabel: 'Select a folder to apply changes',\n  /**\n   *@description Button text for canceling workspace selection.\n   */\n  cancel: 'Cancel',\n  /**\n   *@description Button text for confirming the selected workspace folder.\n   */\n  select: 'Select',\n  /*\n   *@description Button text for adding a workspace folder.\n   */\n  addFolder: 'Add folder',\n  /*\n   *@description Explanation for selecting the correct workspace folder.\n   */\n  selectProjectRoot:\n      'To save patches directly to your project, select the project root folder containing the source files of the inspected page. Relevant code snippets will be sent to Google to generate code suggestions.',\n} as const;\n\nconst lockedString = i18n.i18n.lockedString;\n\ninterface Folder {\n  name: string;\n  path: string;\n  project?: Workspace.Workspace.Project;\n  automaticFileSystem?: Persistence.AutomaticFileSystemManager.AutomaticFileSystem;\n}\n\ninterface ViewInput {\n  folders: Folder[];\n  selectedIndex: number;\n  showAutomaticWorkspaceNudge: boolean;\n  onProjectSelected: (index: number) => void;\n  onSelectButtonClick: () => void;\n  onCancelButtonClick: () => void;\n  onAddFolderButtonClick: () => void;\n  onListItemKeyDown: (event: KeyboardEvent) => void;\n}\n\ntype View = (input: ViewInput, output: undefined, target: HTMLElement) => void;\n// clang-format off\nexport const SELECT_WORKSPACE_DIALOG_DEFAULT_VIEW = (input: ViewInput, _output: undefined, target: HTMLElement): void => {\n  const hasFolders = input.folders.length > 0;\n  render(\n    html`\n      <style>${selectWorkspaceDialogStyles}</style>\n      <h2 class=\"dialog-header\">${lockedString(UIStringsNotTranslate.selectFolder)}</h2>\n      <div class=\"main-content\">\n        <div class=\"select-project-root\">${lockedString(UIStringsNotTranslate.selectProjectRoot)}</div>\n        ${input.showAutomaticWorkspaceNudge ? html`\n          <!-- Hardcoding, because there is no 'getFormatLocalizedString' equivalent for 'lockedString' -->\n          <div>\n            Tip: provide a\n            <x-link\n              class=\"devtools-link\"\n              href=\"https://goo.gle/devtools-automatic-workspace-folders\"\n              jslog=${VisualLogging.link().track({click: true, keydown:'Enter|Space'}).context('automatic-workspaces-documentation')}\n            >com.chrome.devtools.json</x-link>\n            file to automatically connect your project to DevTools.\n          </div>\n        ` : nothing}\n      </div>\n      ${hasFolders ? html`\n        <ul role=\"listbox\" aria-label=${lockedString(UIStringsNotTranslate.selectFolder)}\n          aria-activedescendant=${input.folders.length > 0 ? `option-${input.selectedIndex}` : ''}>\n          ${input.folders.map((folder, index) => {\n            const optionId = `option-${index}`;\n            return html`\n              <li\n                id=${optionId}\n                @mousedown=${() => input.onProjectSelected(index)}\n                @keydown=${input.onListItemKeyDown}\n                class=${index === input.selectedIndex ? 'selected' : ''}\n                aria-selected=${index === input.selectedIndex ? 'true' : 'false'}\n                title=${folder.path}\n                role=\"option\"\n                tabindex=${index === input.selectedIndex ? '0' : '-1'}\n              >\n                <devtools-icon class=\"folder-icon\" .name=${'folder'}></devtools-icon>\n                <span class=\"ellipsis\">${folder.name}</span>\n              </li>`;\n          })}\n        </ul>\n      ` : nothing}\n      <div class=\"buttons\">\n        <devtools-button\n          title=${lockedString(UIStringsNotTranslate.cancel)}\n          aria-label=\"Cancel\"\n          .jslogContext=${'cancel'}\n          @click=${input.onCancelButtonClick}\n          .variant=${Buttons.Button.Variant.OUTLINED}>${lockedString(UIStringsNotTranslate.cancel)}</devtools-button>\n        <devtools-button\n          class=\"add-folder-button\"\n          title=${lockedString(UIStringsNotTranslate.addFolder)}\n          aria-label=\"Add folder\"\n          .iconName=${'plus'}\n          .jslogContext=${'add-folder'}\n          @click=${input.onAddFolderButtonClick}\n          .variant=${hasFolders ? Buttons.Button.Variant.TONAL : Buttons.Button.Variant.PRIMARY}>${lockedString(UIStringsNotTranslate.addFolder)}</devtools-button>\n        ${hasFolders ? html`\n          <devtools-button\n            title=${lockedString(UIStringsNotTranslate.select)}\n            aria-label=\"Select\"\n            @click=${input.onSelectButtonClick}\n            .jslogContext=${'select'}\n            .variant=${Buttons.Button.Variant.PRIMARY}>${lockedString(UIStringsNotTranslate.select)}</devtools-button>\n        ` : nothing}\n      </div>\n    `,\n    target,\n    {host: target}\n  );\n};\n// clang-format on\nexport class SelectWorkspaceDialog extends UI.Widget.VBox {\n  #view: View;\n  #workspace = Workspace.Workspace.WorkspaceImpl.instance();\n  #selectedIndex = 0;\n  #onProjectSelected: (project: Workspace.Workspace.Project) => void;\n  #dialog: UI.Dialog.Dialog;\n  #automaticFileSystemManager = Persistence.AutomaticFileSystemManager.AutomaticFileSystemManager.instance();\n  #folders: Folder[] = [];\n\n  constructor(\n      options: {\n        dialog: UI.Dialog.Dialog,\n        onProjectSelected: (project: Workspace.Workspace.Project) => void,\n        currentProject?: Workspace.Workspace.Project,\n      },\n      view?: View) {\n    super();\n    this.element.classList.add('dialog-container');\n    this.#onProjectSelected = options.onProjectSelected;\n    this.#dialog = options.dialog;\n    this.#updateProjectsAndFolders();\n\n    if (options.currentProject) {\n      this.#selectedIndex = Math.max(0, this.#folders.findIndex(folder => folder.project === options.currentProject));\n    }\n\n    this.#view = view ?? SELECT_WORKSPACE_DIALOG_DEFAULT_VIEW;\n    this.requestUpdate();\n    void this.updateComplete.then(() => {\n      this.contentElement?.querySelector<HTMLUListElement>('.selected')?.focus();\n    });\n  }\n\n  override wasShown(): void {\n    this.#workspace.addEventListener(Workspace.Workspace.Events.ProjectAdded, this.#onProjectAdded, this);\n    this.#workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved, this.#onProjectRemoved, this);\n  }\n\n  override willHide(): void {\n    this.#workspace.removeEventListener(Workspace.Workspace.Events.ProjectAdded, this.#onProjectAdded, this);\n    this.#workspace.removeEventListener(Workspace.Workspace.Events.ProjectRemoved, this.#onProjectRemoved, this);\n  }\n\n  #onListItemKeyDown(event: KeyboardEvent): void {\n    switch (event.key) {\n      case 'ArrowDown': {\n        event.preventDefault();\n        this.#selectedIndex = Math.min(this.#selectedIndex + 1, this.#folders.length - 1);\n        const targetItem = this.contentElement.querySelectorAll('li')[this.#selectedIndex];\n        targetItem?.scrollIntoView({block: 'nearest', inline: 'nearest'});\n        targetItem?.focus({preventScroll: true});\n        this.requestUpdate();\n        break;\n      }\n      case 'ArrowUp': {\n        event.preventDefault();\n        this.#selectedIndex = Math.max(this.#selectedIndex - 1, 0);\n        const targetItem = this.contentElement.querySelectorAll('li')[this.#selectedIndex];\n        targetItem?.scrollIntoView({block: 'nearest', inline: 'nearest'});\n        targetItem?.focus({preventScroll: true});\n        this.requestUpdate();\n        break;\n      }\n      case 'Enter':\n        event.preventDefault();\n        this.#onSelectButtonClick();\n        break;\n    }\n  }\n\n  #onSelectButtonClick(): void {\n    const selectedFolder = this.#folders[this.#selectedIndex];\n    if (selectedFolder.project) {\n      this.#dialog.hide();\n      this.#onProjectSelected(selectedFolder.project);\n    } else {\n      void this.#connectToAutomaticFilesystem();\n    }\n  }\n\n  override performUpdate(): void {\n    const viewInput = {\n      folders: this.#folders,\n      selectedIndex: this.#selectedIndex,\n      showAutomaticWorkspaceNudge: this.#automaticFileSystemManager.automaticFileSystem === null &&\n          this.#automaticFileSystemManager.availability === 'available',\n      onProjectSelected: (index: number) => {\n        this.#selectedIndex = index;\n        this.requestUpdate();\n      },\n      onSelectButtonClick: this.#onSelectButtonClick.bind(this),\n      onCancelButtonClick: () => {\n        this.#dialog.hide();\n      },\n      onAddFolderButtonClick: () => {\n        void this.#addFileSystem();\n      },\n      onListItemKeyDown: this.#onListItemKeyDown.bind(this),\n    };\n\n    this.#view(viewInput, undefined, this.contentElement);\n  }\n\n  async #addFileSystem(): Promise<void> {\n    await Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance().addFileSystem();\n    this.contentElement?.querySelector('[aria-label=\"Select\"]')?.shadowRoot?.querySelector('button')?.focus();\n  }\n\n  async #connectToAutomaticFilesystem(): Promise<void> {\n    const success = await this.#automaticFileSystemManager.connectAutomaticFileSystem(/* addIfMissing= */ true);\n    // In the success-case, we will receive a 'ProjectAdded' event and handle it in '#onProjectAdded'.\n    // Only the failure-case is handled here.\n    if (!success) {\n      this.#dialog.hide();\n    }\n  }\n\n  #updateProjectsAndFolders(): void {\n    this.#folders = [];\n    const automaticFileSystem = this.#automaticFileSystemManager.automaticFileSystem;\n\n    // The automatic workspace folder is always added in first position.\n    if (automaticFileSystem) {\n      this.#folders.push({\n        name: Common.ParsedURL.ParsedURL.extractName(automaticFileSystem.root),\n        path: automaticFileSystem.root,\n        automaticFileSystem,\n      });\n    }\n\n    const projects = this.#workspace.projectsForType(Workspace.Workspace.projectTypes.FileSystem)\n                         .filter(\n                             project => project instanceof Persistence.FileSystemWorkspaceBinding.FileSystem &&\n                                 project.fileSystem().type() ===\n                                     Persistence.PlatformFileSystem.PlatformFileSystemType.WORKSPACE_PROJECT);\n    for (const project of projects) {\n      // Deduplication prevents a connected automatic workspace folder from being listed twice.\n      if (automaticFileSystem && project === this.#workspace.projectForFileSystemRoot(automaticFileSystem.root)) {\n        this.#folders[0].project = project;\n        continue;\n      }\n\n      this.#folders.push({\n        name: Common.ParsedURL.ParsedURL.encodedPathToRawPathString(\n            project.displayName() as Platform.DevToolsPath.EncodedPathString),\n        path: Common.ParsedURL.ParsedURL.urlToRawPathString(\n            project.id() as Platform.DevToolsPath.UrlString, Host.Platform.isWin()),\n        project,\n      });\n    }\n  }\n\n  #onProjectAdded(event: Common.EventTarget.EventTargetEvent<Workspace.Workspace.Project>): void {\n    const addedProject = event.data;\n\n    // After connecting to an automatic workspace folder, wait for the 'projectAdded' event,\n    // then close the dialog and continue with the selected project.\n    const automaticFileSystem = this.#automaticFileSystemManager.automaticFileSystem;\n    if (automaticFileSystem && addedProject === this.#workspace.projectForFileSystemRoot(automaticFileSystem.root)) {\n      this.#dialog.hide();\n      this.#onProjectSelected(addedProject);\n      return;\n    }\n\n    this.#updateProjectsAndFolders();\n    const projectIndex = this.#folders.findIndex(folder => folder.project === addedProject);\n    if (projectIndex !== -1) {\n      this.#selectedIndex = projectIndex;\n    }\n    this.requestUpdate();\n    void this.updateComplete.then(() => {\n      this.contentElement?.querySelector('.selected')?.scrollIntoView();\n    });\n  }\n\n  #onProjectRemoved(): void {\n    const selectedProject = (this.#selectedIndex >= 0 && this.#selectedIndex < this.#folders.length) ?\n        this.#folders[this.#selectedIndex].project :\n        null;\n    this.#updateProjectsAndFolders();\n\n    if (selectedProject) {\n      const projectIndex = this.#folders.findIndex(folder => folder.project === selectedProject);\n\n      // If the previously selected project still exists, select it again.\n      // If the previously selected project has been removed, select the project which is now in its\n      // position. If the previously selected and now removed project was in last position, select\n      // the project which is now in last position.\n      this.#selectedIndex =\n          projectIndex === -1 ? Math.min(this.#folders.length - 1, this.#selectedIndex) : projectIndex;\n    } else {\n      this.#selectedIndex = 0;\n    }\n    this.requestUpdate();\n  }\n\n  static show(\n      onProjectSelected: (project: Workspace.Workspace.Project) => void,\n      currentProject?: Workspace.Workspace.Project): void {\n    const dialog = new UI.Dialog.Dialog('select-workspace');\n    dialog.setAriaLabel(UIStringsNotTranslate.selectFolderAccessibleLabel);\n    dialog.setMaxContentSize(new UI.Geometry.Size(384, 340));\n    dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.SET_EXACT_WIDTH_MAX_HEIGHT);\n    dialog.setDimmed(true);\n\n    new SelectWorkspaceDialog({dialog, onProjectSelected, currentProject}).show(dialog.contentElement);\n    dialog.show();\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n .widget.dialog-container {\n  width: 100%;\n  box-shadow: none;\n }\n\n.dialog-header {\n  margin: var(--sys-size-6) var(--sys-size-8) var(--sys-size-5);\n  font: var(--sys-typescale-headline5);\n}\n\n.buttons {\n  margin: var(--sys-size-6) var(--sys-size-8) var(--sys-size-8);\n  display: flex;\n  justify-content: flex-start;\n  gap: var(--sys-size-5);\n}\n\n.main-content {\n  color: var(--sys-color-on-surface-subtle);\n  margin: 0 var(--sys-size-8);\n  line-height: 18px;\n}\n\n.add-folder-button {\n  margin-left: auto;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n  margin: var(--sys-size-6) 0 var(--sys-size-4) 0;\n  max-height: var(--sys-size-20);\n  overflow-y: auto;\n}\n\nli {\n  display: flex;\n  align-items: center;\n  color: var(--sys-color-on-surface-subtle);\n  border-radius: 0 var(--sys-shape-corner-full) var(--sys-shape-corner-full) 0;\n  height: var(--sys-size-10);\n  margin: 0 var(--sys-size-8);\n  padding-left: var(--sys-size-9);\n}\n\nli:hover, li.selected {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\nli:focus {\n  background-color: var(--app-color-navigation-drawer-background-selected);\n}\n\n.folder-icon {\n  color: var(--icon-file-default);\n  margin-right: var(--sys-size-4);\n}\n\nli.selected .folder-icon {\n  color: var(--icon-file-authored);\n}\n\n.select-project-root {\n  margin-bottom: var(--sys-size-6);\n}\n\n.theme-with-dark-background, :host-context(.theme-with-dark-background) {\n  /*\n    * List item is focused and selected: there is no valid state where the list item is focused but not selected.\n  */\n  li:focus {\n    color: var(--app-color-navigation-drawer-label-selected);\n    background-color: var(--app-color-navigation-drawer-background-selected);\n\n    & .folder-icon {\n      color: var(--app-color-navigation-drawer-label-selected);\n    }\n  }\n}\n\n.ellipsis {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/*# sourceURL=${import.meta.resolve('././selectWorkspaceDialog.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n:host {\n  width: 100%;\n  height: 100%;\n  user-select: text;\n  display: flex;\n  flex-direction: column;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.chat-ui {\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n  display: flex;\n  flex-direction: column;\n  container-type: size;\n  container-name: --chat-ui-container;\n}\n\n.input-form {\n  display: flex;\n  flex-direction: column;\n  padding: 0 var(--sys-size-5) 0 var(--sys-size-5);\n  max-width: var(--sys-size-36);\n  background-color: var(--sys-color-cdt-base-container);\n  width: 100%;\n  position: sticky;\n  z-index: 9999;\n  bottom: 0;\n  padding-bottom: var(--sys-size-5);\n  /*\n  The \\\\'box-shadow\\\\' is a workaround to hide the content appearing between the \\\\'.input-form\\\\'\n  and the footer in some resolutions even though the \\\\'.input-form\\\\' has \\\\'bottom: 0\\\\'.\n  */\n  box-shadow: 0 1px var(--sys-color-cdt-base-container);\n\n  /* Prevents the input form from jumping when the scrollbar is shown */\n  /* 688px is the max width of the input form + left and right paddings: var(--sys-size-36) + 2 * var(--sys-size-5)  */\n  @container (width > 688px) {\n    --half-scrollbar-width: calc((100cqw - 100%) / 2);\n\n    margin-left: var(--half-scrollbar-width);\n    margin-right: calc(-1 * var(--half-scrollbar-width));\n  }\n\n  /* when there isn't enough space to view the messages,\n  do not overlay the input form on top of the messages */\n  /* height < var(--sys-size-27) */\n  @container (height < 224px) {\n    margin-top: var(--sys-size-4);\n    margin-bottom: var(--sys-size-4);\n    position: static;\n  }\n\n  @container --chat-ui-container (width < 400px) {\n    /*\n      The footer already adds necessary paddings for this state.\n      However, without the \\\\'padding-bottom\\\\' here, the outline in the bottom\n      is rendered behind the footer. So, we add 1px space here to make sure\n      that the outline is rendered fully.\n    */\n    padding-bottom: var(--sys-size-1);\n  }\n}\n\n.chat-readonly-container {\n  display: flex;\n  width: 100%;\n  max-width: var(--sys-size-36);\n  justify-content: center;\n  align-items: center;\n  background-color: var(--sys-color-surface3);\n  font: var(--sys-typescale-body4-regular);\n  padding: var(--sys-size-5) 0;\n  border-radius: var(--sys-shape-corner-medium-small);\n  margin-bottom: var(--sys-size-5);\n  color: var(--sys-color-on-surface-subtle);\n}\n\n.chat-input-container {\n  width: 100%;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  border: 1px solid var(--sys-color-neutral-outline);\n  border-radius: var(--sys-shape-corner-small);\n\n  &:focus-within {\n    outline: 1px solid var(--sys-color-primary);\n    border-color: var(--sys-color-primary);\n  }\n\n  &.disabled {\n    background-color: var(--sys-color-state-disabled-container);\n    border-color: transparent;\n\n    & .chat-input-disclaimer {\n      border-color: var(--sys-color-state-disabled);\n    }\n  }\n\n  &.single-line-layout {\n    flex-direction: row;\n    justify-content: space-between;\n\n    .chat-input {\n      flex-shrink: 1;\n      padding: var(--sys-size-4);\n    }\n\n    .chat-input-actions {\n      flex-shrink: 0;\n      padding-block: 0;\n      align-items: flex-end;\n      padding-bottom: var(--sys-size-1);\n    }\n  }\n\n  & .image-input-container {\n    margin: var(--sys-size-3) var(--sys-size-4) 0;\n    max-width: 100%;\n    width: fit-content;\n    position: relative;\n\n    devtools-button {\n      position: absolute;\n      top: calc(-1 * var(--sys-size-2));\n      right: calc(-1 * var(--sys-size-3));\n      border-radius: var(--sys-shape-corner-full);\n      border: 1px solid var(--sys-color-neutral-outline);\n      background-color: var(--sys-color-cdt-base-container);\n    }\n\n    img {\n      max-height: var(--sys-size-18);\n      max-width: 100%;\n      border: 1px solid var(--sys-color-neutral-outline);\n      border-radius: var(--sys-shape-corner-small);\n    }\n\n    .loading {\n      margin: var(--sys-size-4) 0;\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      height: var(--sys-size-18);\n      width: var(--sys-size-19);\n      background-color: var(--sys-color-surface3);\n      border-radius: var(--sys-shape-corner-small);\n      border: 1px solid var(--sys-color-neutral-outline);\n\n      devtools-spinner {\n        color: var(--sys-color-state-disabled);\n      }\n    }\n  }\n\n  & .chat-input-disclaimer-container {\n    display: flex;\n    align-items: center;\n    padding-right: var(--sys-size-3);\n    flex-shrink: 0;\n  }\n\n  & .chat-input-disclaimer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font: var(--sys-typescale-body5-regular);\n    border-right: 1px solid var(--sys-color-divider);\n    padding-right: 8px;\n\n    &.hide-divider {\n      border-right: none;\n    }\n  }\n\n  /*\n    Hide the inline disclaimer on narrow widths (< 400px) because space is limited\n    and the disclaimer is shown in the footer instead for this case.\n  */\n  @container --chat-ui-container (width < 400px) {\n    & .chat-input-disclaimer-container {\n      display: none;\n    }\n  }\n}\n\n.chat-input {\n  scrollbar-width: none;\n  field-sizing: content;\n  resize: none;\n  width: 100%;\n  max-height: 84px; /* 4 rows */\n  border: 0;\n  border-radius: var(--sys-shape-corner-small);\n  font: var(--sys-typescale-body4-regular);\n  line-height: 18px;\n  min-height: var(--sys-size-11);\n  color: var(--sys-color-on-surface);\n  background-color: var(--sys-color-cdt-base-container);\n  padding: var(--sys-size-4) var(--sys-size-4) var(--sys-size-3)\n    var(--sys-size-4);\n\n  &::placeholder {\n    opacity: 60%;\n  }\n\n  &:focus-visible {\n    outline: 0;\n  }\n\n  &:disabled {\n    color: var(--sys-color-state-disabled);\n    background-color: transparent;\n    border-color: transparent;\n\n    &::placeholder {\n      color: var(--sys-color-on-surface-subtle);\n      opacity: 100%;\n    }\n  }\n}\n\n.chat-input-actions {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: var(--sys-size-4);\n  padding-right: var(--sys-size-2);\n  gap: var(--sys-size-6);\n  padding-bottom: var(--sys-size-2);\n\n  & .chat-input-actions-left {\n    flex: 1 1 0;\n    min-width: 0;\n  }\n\n  & .chat-input-actions-right {\n    flex-shrink: 0;\n    display: flex;\n\n    & .start-new-chat-button {\n      padding-bottom: var(--sys-size-2);\n      padding-right: var(--sys-size-3);\n    }\n  }\n}\n\n.chat-inline-button {\n  padding-left: 3px;\n}\n\n.chat-cancel-context-button {\n  padding-bottom: 3px;\n  padding-right: var(--sys-size-3);\n}\n\nfooter.chat-view-footer {\n  display: flex;\n  justify-content: center;\n  padding-block: var(--sys-size-3);\n  font: var(--sys-typescale-body5-regular);\n  border-top: 1px solid var(--sys-color-divider);\n  text-wrap: balance;\n  text-align: center;\n\n  /*\n    The footer (for active conversations) is hidden by default on wider screens\n    because the disclaimer is shown inline within the chat input actions. Show it only on narrow widths (< 400px).\n  */\n  &.has-conversation:not(.is-read-only) {\n    display: none;\n    border: none;\n\n    @container --chat-ui-container (width < 400px) {\n      display: flex;\n    }\n  }\n}\n\n.messages-container {\n  flex-grow: 1;\n  width: 100%;\n  max-width: var(--sys-size-36);\n\n  /* Prevents the container from jumping when the scrollbar is shown */\n  /* 688px is the max width of the input form + left and right paddings: var(--sys-size-36) + 2 * var(--sys-size-5)  */\n  @container (width > 688px) {\n    --half-scrollbar-width: calc((100cqw - 100%) / 2);\n\n    margin-left: var(--half-scrollbar-width);\n    margin-right: calc(-1 * var(--half-scrollbar-width));\n  }\n}\n\n.chat-message {\n  user-select: text;\n  cursor: initial;\n  display: flex;\n  flex-direction: column;\n  gap: var(--sys-size-5);\n  width: 100%;\n  padding: var(--sys-size-7) var(--sys-size-5);\n  font-size: 12px;\n  word-break: normal;\n  overflow-wrap: anywhere;\n  border-bottom: var(--sys-size-1) solid var(--sys-color-divider);\n\n  &:last-of-type {\n    border-bottom: 0;\n  }\n\n  .message-info {\n    display: flex;\n    align-items: center;\n    height: var(--sys-size-11);\n    gap: var(--sys-size-4);\n    font: var(--sys-typescale-body4-bold);\n\n    img {\n      border: 0;\n      border-radius: var(--sys-shape-corner-full);\n      display: block;\n      height: var(--sys-size-9);\n      width: var(--sys-size-9);\n    }\n\n    h2 {\n      font: var(--sys-typescale-body4-bold);\n    }\n  }\n\n  .actions {\n    display: flex;\n    flex-direction: column;\n    gap: var(--sys-size-8);\n    max-width: 100%;\n  }\n\n  .aborted {\n    color: var(--sys-color-on-surface-subtle);\n  }\n\n  .image-link {\n    width: fit-content;\n    border-radius: var(--sys-shape-corner-small);\n    outline-offset: var(--sys-size-2);\n\n    img {\n      max-height: var(--sys-size-20);\n      max-width: 100%;\n      border-radius: var(--sys-shape-corner-small);\n      border: 1px solid var(--sys-color-neutral-outline);\n      width: fit-content;\n      vertical-align: bottom;\n    }\n  }\n\n  .unavailable-image {\n    margin: var(--sys-size-4) 0;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    height: var(--sys-size-17);\n    width: var(--sys-size-18);\n    background-color: var(--sys-color-surface3);\n    border-radius: var(--sys-shape-corner-small);\n    border: 1px solid var(--sys-color-neutral-outline);\n\n    devtools-icon {\n      color: var(--sys-color-state-disabled);\n    }\n  }\n}\n\n.select-element {\n  display: flex;\n  gap: var(--sys-size-3);\n  align-items: center;\n\n  .resource-link,\n  .resource-task {\n    cursor: pointer;\n    padding: var(--sys-size-2) var(--sys-size-3);\n    font: var(--sys-typescale-body5-regular);\n    border: var(--sys-size-1) solid var(--sys-color-divider);\n    border-radius: var(--sys-shape-corner-extra-small);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    /*\n      Allow the link/task item to shrink below its intrinsic minimum width in the flex container,\n      enabling text-overflow ellipsis to work correctly.\n    */\n    min-width: 0;\n    line-height: 1;\n\n    & .title {\n      vertical-align: middle;\n      font: var(--sys-typescale-body5-regular);\n    }\n\n    &.has-picker-behavior {\n      overflow: visible;\n    }\n\n    &:focus-visible {\n      outline: 2px solid var(--sys-color-state-focus-ring);\n    }\n\n    devtools-icon,\n    devtools-file-source-icon {\n      display: inline-flex;\n      vertical-align: middle;\n      width: var(--sys-size-7);\n      height: var(--sys-size-7);\n    }\n\n    /*\n      CSS styling for \\\\'network-override-marker\\\\' is similar to\n      https://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/front_end/panels/network/networkLogView.css;l=379.\n      There is a difference in \\\\'left\\\\' and \\\\'top\\\\' values to make sure\n      it is placed correctly for the network icon in assistance panel.\n    */\n    .network-override-marker {\n      position: relative;\n      float: left;\n    }\n\n    .network-override-marker::before {\n      content: var(--image-file-empty);\n      width: var(--sys-size-4);\n      height: var(--sys-size-4);\n      border-radius: 50%;\n      outline: var(--sys-size-1) solid var(--icon-gap-focus-selected);\n      left: 11px;\n      position: absolute;\n      top: 13px;\n      z-index: 1;\n      background-color: var(--sys-color-purple-bright);\n    }\n\n    .image.icon {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      vertical-align: middle;\n      margin-right: var(--sys-size-3);\n\n      img {\n        max-width: var(--sys-size-7);\n        max-height: var(--sys-size-7);\n      }\n    }\n  }\n\n  .resource-link.disabled,\n  .resource-task.disabled,\n  .resource-link.not-selected,\n  .resource-task.not-selected {\n    color: var(--sys-color-state-disabled);\n    border-color: var(--sys-color-neutral-outline);\n  }\n\n  .resource-link.disabled,\n  .resource-task.disabled {\n    pointer-events: none;\n  }\n}\n\n.indicator {\n  color: var(--sys-color-green-bright);\n}\n\n.summary {\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  padding: var(--sys-size-3);\n  line-height: var(--sys-size-9);\n  cursor: default;\n  gap: var(--sys-size-3);\n  justify-content: center;\n  align-items: center;\n\n  .title {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    font: var(--sys-typescale-body4-regular);\n\n    .paused {\n      font: var(--sys-typescale-body4-bold);\n    }\n  }\n}\n\n.step-code {\n  display: flex;\n  flex-direction: column;\n  gap: var(--sys-size-2);\n}\n\n.js-code-output {\n  devtools-code-block {\n    --code-block-max-code-height: 50px;\n  }\n}\n\n.context-details {\n  devtools-code-block {\n    --code-block-max-code-height: 80px;\n  }\n}\n\n.step {\n  width: fit-content;\n  background-color: var(--sys-color-surface3);\n  border-radius: var(--sys-size-6);\n  position: relative;\n\n  &.empty {\n    pointer-events: none;\n\n    .arrow {\n      display: none;\n    }\n  }\n\n  &:not(&[open]):hover::after {\n    content: '';\n    height: 100%;\n    width: 100%;\n    border-radius: inherit;\n    position: absolute;\n    top: 0;\n    left: 0;\n    pointer-events: none;\n    background-color: var(--sys-color-state-hover-on-subtle);\n  }\n\n  &.paused {\n    .indicator {\n      color: var(--sys-color-on-surface-subtle);\n    }\n  }\n\n  &.canceled {\n    .summary {\n      color: var(--sys-color-state-disabled);\n      text-decoration: line-through;\n    }\n\n    .indicator {\n      color: var(--sys-color-state-disabled);\n    }\n  }\n\n  devtools-markdown-view {\n    --code-background-color: var(--sys-color-surface1);\n  }\n\n  devtools-icon {\n    vertical-align: bottom;\n  }\n\n  devtools-spinner {\n    width: var(--sys-size-9);\n    height: var(--sys-size-9);\n    padding: var(--sys-size-2);\n  }\n\n  &[open] {\n    width: auto;\n\n    .summary .title {\n      white-space: normal;\n      overflow: unset;\n    }\n\n    .summary .arrow {\n      transform: rotate(180deg);\n    }\n  }\n\n  summary::marker {\n    content: '';\n  }\n\n  summary {\n    border-radius: var(--sys-size-6);\n  }\n\n  .step-details {\n    padding: 0 var(--sys-size-5) var(--sys-size-4) var(--sys-size-12);\n    display: flex;\n    flex-direction: column;\n    gap: var(--sys-size-6);\n\n    devtools-code-block {\n      --code-block-background-color: var(--sys-color-surface1);\n    }\n  }\n}\n\n.link {\n  color: var(--text-link);\n  text-decoration: underline;\n  cursor: pointer;\n}\n\nbutton.link {\n  border: none;\n  background: none;\n  font: inherit;\n\n  &:focus-visible {\n    outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n    outline-offset: 0;\n    border-radius: var(--sys-shape-corner-extra-small);\n  }\n}\n\n.select-an-element-text {\n  margin-left: 2px;\n}\n\nmain {\n  overflow: hidden auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  container-type: size;\n  scrollbar-width: thin;\n  /*\n  Even though \\\\'transform: translateZ(1px)\\\\' doesn't have a visual effect,\n  it puts \\\\'main\\\\' element into another rendering layer which somehow\n  fixes the \\\\'.input-form\\\\' jumping on scroll issue.\n  */\n  transform: translateZ(1px);\n  scroll-timeline: --scroll-timeline y;\n}\n\n.empty-state-container {\n  flex-grow: 1;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  font: var(--sys-typescale-headline4);\n  gap: var(--sys-size-8);\n  padding: var(--sys-size-3);\n  max-width: var(--sys-size-33);\n\n  /* Prevents the container from jumping when the scrollbar is shown */\n  /* 688px is the max width of the input form + left and right paddings: var(--sys-size-36) + 2 * var(--sys-size-5)  */\n  @container (width > 688px) {\n    --half-scrollbar-width: calc((100cqw - 100%) / 2);\n\n    margin-left: var(--half-scrollbar-width);\n    margin-right: calc(-1 * var(--half-scrollbar-width));\n  }\n\n  .header {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    align-self: end;\n    gap: var(--sys-size-5);\n\n    .icon {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: var(--sys-size-14);\n      width: var(--sys-size-14);\n      border-radius: var(--sys-shape-corner-small);\n      background: linear-gradient(\n        135deg,\n        var(--sys-color-gradient-primary),\n        var(--sys-color-gradient-tertiary)\n      );\n    }\n\n    h1 {\n      font: var(--sys-typescale-headline4);\n    }\n\n    p {\n      text-align: center;\n      font: var(--sys-typescale-body4-regular);\n    }\n  }\n\n  .empty-state-content {\n    display: flex;\n    flex-direction: column;\n    gap: var(--sys-size-5);\n    align-items: center;\n    justify-content: center;\n    align-self: start;\n  }\n}\n\n.disabled-view {\n  display: flex;\n  max-width: var(--sys-size-34);\n  border-radius: var(--sys-shape-corner-small);\n  box-shadow: var(--sys-elevation-level3);\n  background-color: var(--app-color-card-background);\n  font: var(--sys-typescale-body4-regular);\n  text-wrap: pretty;\n  padding: var(--sys-size-6) var(--sys-size-8);\n  margin: var(--sys-size-4) 0;\n  line-height: var(--sys-size-9);\n\n  .disabled-view-icon-container {\n    border-radius: var(--sys-shape-corner-extra-small);\n    width: var(--sys-size-9);\n    height: var(--sys-size-9);\n    background: linear-gradient(\n      135deg,\n      var(--sys-color-gradient-primary),\n      var(--sys-color-gradient-tertiary)\n    );\n    margin-right: var(--sys-size-5);\n\n    devtools-icon {\n      margin: var(--sys-size-2);\n      width: var(--sys-size-8);\n      height: var(--sys-size-8);\n    }\n  }\n}\n\n.error-step {\n  color: var(--sys-color-error);\n}\n\n.side-effect-confirmation {\n  display: flex;\n  flex-direction: column;\n  gap: var(--sys-size-5);\n  padding-bottom: var(--sys-size-4);\n}\n\n.side-effect-buttons-container {\n  display: flex;\n  gap: var(--sys-size-4);\n}\n\n.change-summary {\n  background-color: var(--sys-color-surface3);\n  border-radius: var(--sys-shape-corner-medium-small);\n  position: relative;\n  margin: 0 var(--sys-size-5) var(--sys-size-7) var(--sys-size-5);\n  padding: 0 var(--sys-size-5);\n\n  &.saved-to-disk {\n    pointer-events: none;\n  }\n\n  & .header-container {\n    display: flex;\n    align-items: center;\n    gap: var(--sys-size-3);\n    height: var(--sys-size-14);\n    padding-left: var(--sys-size-3);\n\n    devtools-spinner {\n      width: var(--sys-size-6);\n      height: var(--sys-size-6);\n      margin-left: var(--sys-size-3);\n      margin-right: var(--sys-size-3);\n    }\n\n    & devtools-icon.summary-badge {\n      width: var(--sys-size-8);\n      height: var(--sys-size-8);\n    }\n\n    & .green-bright-icon {\n      color: var(--sys-color-green-bright);\n    }\n\n    & .on-tonal-icon {\n      color: var(--sys-color-on-tonal-container);\n    }\n\n    & .header-text {\n      font: var(--sys-typescale-body4);\n      color: var(--sys-color-on-surface);\n      white-space: nowrap;\n      overflow-x: hidden;\n      text-overflow: ellipsis;\n    }\n\n    & .arrow {\n      margin-left: auto;\n    }\n\n    &::marker {\n      content: '';\n    }\n  }\n\n  /* TODO(b/412621009): Remove this once the bug is fixed on the VE logging side */\n  &:not(.saved-to-disk, &[open]) > *:not(summary) {\n    display: none;\n  }\n\n  &:not(.saved-to-disk, &[open]):hover::after {\n    content: '';\n    height: 100%;\n    width: 100%;\n    border-radius: inherit;\n    position: absolute;\n    top: 0;\n    left: 0;\n    pointer-events: none;\n    background-color: var(--sys-color-state-hover-on-subtle);\n  }\n\n  &[open]:not(.saved-to-disk) {\n    &::details-content {\n      height: fit-content;\n      padding: var(--sys-size-2) 0;\n      border-radius: inherit;\n    }\n\n    summary .arrow {\n      transform: rotate(180deg);\n    }\n  }\n\n  devtools-code-block {\n    margin-bottom: var(--sys-size-5);\n\n    --code-block-background-color: var(--sys-color-surface1);\n  }\n\n  .error-container {\n    display: flex;\n    align-items: center;\n    gap: var(--sys-size-3);\n    color: var(--sys-color-error);\n\n    devtools-icon {\n      color: var(--sys-color-error);\n    }\n  }\n\n  .footer {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n    margin: var(--sys-size-5) 0 var(--sys-size-5) var(--sys-size-2);\n    gap: var(--sys-size-6) var(--sys-size-5);\n\n    .disclaimer-link {\n      align-self: center;\n    }\n\n    .left-side {\n      flex-grow: 1;\n      display: flex;\n      align-self: center;\n      gap: var(--sys-size-3);\n    }\n\n    .save-or-discard-buttons {\n      flex-grow: 1;\n      display: flex;\n      justify-content: flex-end;\n      gap: var(--sys-size-3);\n    }\n\n    .change-workspace {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      gap: var(--sys-size-3);\n      min-width: var(--sys-size-22);\n      flex: 1 1 40%;\n\n      .folder-name {\n        white-space: nowrap;\n        overflow-x: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n\n    .loading-text-container {\n      margin-right: var(--sys-size-3);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: var(--sys-size-3);\n    }\n\n    .apply-to-workspace-container {\n      display: flex;\n      align-items: center;\n      gap: var(--sys-size-3);\n      min-width: fit-content;\n      justify-content: flex-end;\n      flex-grow: 1;\n      flex-shrink: 1;\n\n      devtools-icon {\n        /* var(--sys-size-8) is too small and var(--sys-size-9) is too big. */\n        width: 18px;\n        height: 18px;\n        margin-left: var(--sys-size-2);\n      }\n    }\n  }\n}\n\n@keyframes reveal {\n  0%,\n  99% {\n    opacity: 100%;\n  }\n\n  100% {\n    opacity: 0%;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('././components/chatView.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Marked from '../../../third_party/marked/marked.js';\nimport * as MarkdownView from '../../../ui/components/markdown_view/markdown_view.js';\nimport type * as Lit from '../../../ui/lit/lit.js';\n\n// The model returns multiline code blocks in an erroneous way with the language being in new line.\n// This renderer takes that into account and correctly updates the parsed multiline token with the language\n// correctly identified and stripped from the content.\n// Example:\n// ```\n// css <-- This should have been on the first line.\n// * {\n//   color: red;\n// }\n// ```\nexport class MarkdownRendererWithCodeBlock extends MarkdownView.MarkdownView.MarkdownInsightRenderer {\n  override templateForToken(token: Marked.Marked.MarkedToken): Lit.TemplateResult|null {\n    if (token.type === 'code') {\n      const lines = (token.text).split('\\n');\n      if (lines[0]?.trim() === 'css') {\n        token.lang = 'css';\n        token.text = lines.slice(1).join('\\n');\n      }\n    }\n\n    return super.templateForToken(token);\n  }\n}\n", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport userActionRowStyles from './userActionRow.css.js';\n\nconst {html, Directives: {ref}} = Lit;\n\n/*\n* Strings that don't need to be translated at this time.\n*/\nconst UIStringsNotTranslate = {\n\n  /**\n   * @description The title of the button that allows submitting positive\n   * feedback about the response for AI assistance.\n   */\n  thumbsUp: 'Good response',\n  /**\n   * @description The title of the button that allows submitting negative\n   * feedback about the response for AI assistance.\n   */\n  thumbsDown: 'Bad response',\n  /**\n   * @description The placeholder text for the feedback input.\n   */\n  provideFeedbackPlaceholder: 'Provide additional feedback',\n  /**\n   * @description The disclaimer text that tells the user what will be shared\n   * and what will be stored.\n   */\n  disclaimer: 'Submitted feedback will also include your conversation',\n  /**\n   * @description The button text for the action of submitting feedback.\n   */\n  submit: 'Submit',\n  /**\n   * @description The header of the feedback form asking.\n   */\n  whyThisRating: 'Why did you choose this rating? (optional)',\n  /**\n   * @description The button text for the action that hides the feedback form.\n   */\n  close: 'Close',\n  /**\n   * @description The title of the button that opens a page to report a legal\n   * issue with the AI assistance message.\n   */\n  report: 'Report legal issue',\n  /**\n   * @description The title of the button for scrolling to see next suggestions\n   */\n  scrollToNext: 'Scroll to next suggestions',\n  /**\n   * @description The title of the button for scrolling to see previous suggestions\n   */\n  scrollToPrevious: 'Scroll to previous suggestions',\n} as const;\n\nconst lockedString = i18n.i18n.lockedString;\n\nconst REPORT_URL = 'https://support.google.com/legal/troubleshooter/1114905?hl=en#ts=1115658%2C13380504' as\n    Platform.DevToolsPath.UrlString;\nconst SCROLL_ROUNDING_OFFSET = 1;\n\nexport interface RatingViewInput {\n  currentRating?: Host.AidaClient.Rating;\n  onRatingClick: (rating: Host.AidaClient.Rating) => void;\n  showRateButtons: boolean;\n  onReportClick: () => void;\n}\n\nexport interface SuggestionViewInput {\n  suggestions?: [string, ...string[]];\n  scrollSuggestionsScrollContainer: (direction: 'left'|'right') => void;\n  onSuggestionsScrollOrResize: () => void;\n  onSuggestionClick: (suggestion: string) => void;\n}\n\nexport interface FeedbackFormViewInput {\n  isShowingFeedbackForm: boolean;\n  onSubmit: (event: SubmitEvent) => void;\n  onClose: () => void;\n  onInputChange: (input: string) => void;\n  isSubmitButtonDisabled: boolean;\n}\n\nexport type UserActionRowViewInput = RatingViewInput&SuggestionViewInput&FeedbackFormViewInput;\n\nexport interface ViewOutput {\n  suggestionsLeftScrollButtonContainer?: Element;\n  suggestionsScrollContainer?: Element;\n  suggestionsRightScrollButtonContainer?: Element;\n}\n\nexport interface UserActionRowWidgetParams {\n  showRateButtons: boolean;\n  onFeedbackSubmit: (rate: Host.AidaClient.Rating, feedback?: string) => void;\n  suggestions?: [string, ...string[]];\n  onSuggestionClick: (suggestion: string) => void;\n  canShowFeedbackForm: boolean;\n}\n\nexport const DEFAULT_VIEW = (input: UserActionRowViewInput, output: ViewOutput, target: HTMLElement): void => {\n  // clang-format off\n  Lit.render(html`\n    <style>${Input.textInputStyles}</style>\n    <style>${userActionRowStyles}</style>\n    <div class=\"ai-assistance-feedback-row\">\n      <div class=\"rate-buttons\">\n        ${input.showRateButtons ? html`\n          <devtools-button\n            .data=${{\n              variant: Buttons.Button.Variant.ICON,\n              size: Buttons.Button.Size.SMALL,\n              iconName: 'thumb-up',\n              toggledIconName: 'thumb-up-filled',\n              toggled: input.currentRating === Host.AidaClient.Rating.POSITIVE,\n              toggleType: Buttons.Button.ToggleType.PRIMARY,\n              title: lockedString(UIStringsNotTranslate.thumbsUp),\n              jslogContext: 'thumbs-up',\n            } as Buttons.Button.ButtonData}\n            @click=${() => input.onRatingClick(Host.AidaClient.Rating.POSITIVE)}\n          ></devtools-button>\n          <devtools-button\n            .data=${{\n              variant: Buttons.Button.Variant.ICON,\n              size: Buttons.Button.Size.SMALL,\n              iconName: 'thumb-down',\n              toggledIconName: 'thumb-down-filled',\n              toggled: input.currentRating === Host.AidaClient.Rating.NEGATIVE,\n              toggleType: Buttons.Button.ToggleType.PRIMARY,\n              title: lockedString(UIStringsNotTranslate.thumbsDown),\n              jslogContext: 'thumbs-down',\n            } as Buttons.Button.ButtonData}\n            @click=${() => input.onRatingClick(Host.AidaClient.Rating.NEGATIVE)}\n          ></devtools-button>\n          <div class=\"vertical-separator\"></div>\n        `: Lit.nothing}\n        <devtools-button\n          .data=${\n            {\n              variant: Buttons.Button.Variant.ICON,\n              size: Buttons.Button.Size.SMALL,\n              title: lockedString(UIStringsNotTranslate.report),\n              iconName: 'report',\n              jslogContext: 'report',\n            } as Buttons.Button.ButtonData\n          }\n          @click=${input.onReportClick}\n        ></devtools-button>\n      </div>\n      ${input.suggestions ? html`<div class=\"suggestions-container\">\n        <div class=\"scroll-button-container left hidden\" ${ref(element => { output.suggestionsLeftScrollButtonContainer = element; } )}>\n          <devtools-button\n            class='scroll-button'\n            .data=${{\n              variant: Buttons.Button.Variant.ICON,\n              size: Buttons.Button.Size.SMALL,\n              iconName: 'chevron-left',\n              title: lockedString(UIStringsNotTranslate.scrollToPrevious),\n              jslogContext: 'chevron-left',\n            } as Buttons.Button.ButtonData}\n            @click=${() => input.scrollSuggestionsScrollContainer('left')}\n          ></devtools-button>\n        </div>\n        <div class=\"suggestions-scroll-container\" @scroll=${input.onSuggestionsScrollOrResize} ${ref(element => { output.suggestionsScrollContainer = element; })}>\n          ${input.suggestions.map(suggestion => html`<devtools-button\n            class='suggestion'\n            .data=${{\n              variant: Buttons.Button.Variant.OUTLINED,\n              title: suggestion,\n              jslogContext: 'suggestion',\n            } as Buttons.Button.ButtonData}\n            @click=${() => input.onSuggestionClick(suggestion)}\n          >${suggestion}</devtools-button>`)}\n        </div>\n        <div class=\"scroll-button-container right hidden\" ${ref(element => { output.suggestionsRightScrollButtonContainer = element; })}>\n          <devtools-button\n            class='scroll-button'\n            .data=${{\n              variant: Buttons.Button.Variant.ICON,\n              size: Buttons.Button.Size.SMALL,\n              iconName: 'chevron-right',\n              title: lockedString(UIStringsNotTranslate.scrollToNext),\n              jslogContext: 'chevron-right',\n            } as Buttons.Button.ButtonData}\n            @click=${() => input.scrollSuggestionsScrollContainer('right')}\n          ></devtools-button>\n        </div>\n      </div>` : Lit.nothing}\n    </div>\n    ${input.isShowingFeedbackForm ? html`\n      <form class=\"feedback-form\" @submit=${input.onSubmit}>\n        <div class=\"feedback-header\">\n          <h4 class=\"feedback-title\">${lockedString(\n              UIStringsNotTranslate.whyThisRating,\n          )}</h4>\n          <devtools-button\n            aria-label=${lockedString(UIStringsNotTranslate.close)}\n            @click=${input.onClose}\n            .data=${\n              {\n                variant: Buttons.Button.Variant.ICON,\n                iconName: 'cross',\n                size: Buttons.Button.Size.SMALL,\n                title: lockedString(UIStringsNotTranslate.close),\n                jslogContext: 'close',\n              } as Buttons.Button.ButtonData\n            }\n          ></devtools-button>\n        </div>\n        <input\n          type=\"text\"\n          class=\"devtools-text-input feedback-input\"\n          @input=${(event: KeyboardEvent) => input.onInputChange((event.target as HTMLInputElement).value)}\n          placeholder=${lockedString(\n          UIStringsNotTranslate.provideFeedbackPlaceholder,\n          )}\n          jslog=${VisualLogging.textField('feedback').track({ keydown: 'Enter' })}\n        >\n        <span class=\"feedback-disclaimer\">${\n          lockedString(UIStringsNotTranslate.disclaimer)\n        }</span>\n        <div>\n          <devtools-button\n          aria-label=${lockedString(UIStringsNotTranslate.submit)}\n          .data=${\n            {\n                type: 'submit',\n                disabled: input.isSubmitButtonDisabled,\n                variant: Buttons.Button.Variant.OUTLINED,\n                size: Buttons.Button.Size.SMALL,\n                title: lockedString(UIStringsNotTranslate.submit),\n                jslogContext: 'send',\n              } as Buttons.Button.ButtonData\n            }\n          >${\n            lockedString(UIStringsNotTranslate.submit)\n          }</devtools-button>\n        </div>\n      </div>\n    </form>\n    ` : Lit.nothing}\n  `, target, {host: target});\n  // clang-format on\n};\n\nexport type View = typeof DEFAULT_VIEW;\n\n/**\n * This presenter has too many responsibilities (rating buttons, feedback\n * form, suggestions).\n */\nexport class UserActionRow extends UI.Widget.Widget implements UserActionRowWidgetParams {\n  showRateButtons = false;\n  onFeedbackSubmit: (rate: Host.AidaClient.Rating, feedback?: string) => void = () => {};\n  suggestions: [string, ...string[]]|undefined;\n  onSuggestionClick: (suggestion: string) => void = () => {};\n  canShowFeedbackForm = false;\n\n  #suggestionsResizeObserver = new ResizeObserver(() => this.#handleSuggestionsScrollOrResize());\n  #suggestionsEvaluateLayoutThrottler = new Common.Throttler.Throttler(50);\n\n  #feedbackValue = '';\n  #currentRating: Host.AidaClient.Rating|undefined;\n  #isShowingFeedbackForm = false;\n  #isSubmitButtonDisabled = true;\n\n  #view: View;\n  #viewOutput: ViewOutput = {};\n\n  constructor(element?: HTMLElement, view?: View) {\n    super(false, false, element);\n    this.#view = view ?? DEFAULT_VIEW;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    void this.performUpdate();\n    this.#evaluateSuggestionsLayout();\n\n    if (this.#viewOutput.suggestionsScrollContainer) {\n      this.#suggestionsResizeObserver.observe(this.#viewOutput.suggestionsScrollContainer);\n    }\n  }\n\n  override performUpdate(): Promise<void>|void {\n    this.#view(\n        {\n          onSuggestionClick: this.onSuggestionClick,\n          onRatingClick: this.#handleRateClick.bind(this),\n          onReportClick: () => UI.UIUtils.openInNewTab(REPORT_URL),\n          scrollSuggestionsScrollContainer: this.#scrollSuggestionsScrollContainer.bind(this),\n          onSuggestionsScrollOrResize: this.#handleSuggestionsScrollOrResize.bind(this),\n          onSubmit: this.#handleSubmit.bind(this),\n          onClose: this.#handleClose.bind(this),\n          onInputChange: this.#handleInputChange.bind(this),\n          isSubmitButtonDisabled: this.#isSubmitButtonDisabled,\n          showRateButtons: this.showRateButtons,\n          suggestions: this.suggestions,\n          currentRating: this.#currentRating,\n          isShowingFeedbackForm: this.#isShowingFeedbackForm,\n        },\n        this.#viewOutput, this.contentElement);\n  }\n\n  #handleInputChange(value: string): void {\n    this.#feedbackValue = value;\n    const disableSubmit = !value;\n    if (disableSubmit !== this.#isSubmitButtonDisabled) {\n      this.#isSubmitButtonDisabled = disableSubmit;\n      void this.performUpdate();\n    }\n  }\n\n  #evaluateSuggestionsLayout = (): void => {\n    const suggestionsScrollContainer = this.#viewOutput.suggestionsScrollContainer;\n    const leftScrollButtonContainer = this.#viewOutput.suggestionsLeftScrollButtonContainer;\n    const rightScrollButtonContainer = this.#viewOutput.suggestionsRightScrollButtonContainer;\n    if (!suggestionsScrollContainer || !leftScrollButtonContainer || !rightScrollButtonContainer) {\n      return;\n    }\n\n    const shouldShowLeftButton = suggestionsScrollContainer.scrollLeft > SCROLL_ROUNDING_OFFSET;\n    const shouldShowRightButton = suggestionsScrollContainer.scrollLeft +\n            (suggestionsScrollContainer as HTMLElement).offsetWidth + SCROLL_ROUNDING_OFFSET <\n        suggestionsScrollContainer.scrollWidth;\n    leftScrollButtonContainer.classList.toggle('hidden', !shouldShowLeftButton);\n    rightScrollButtonContainer.classList.toggle('hidden', !shouldShowRightButton);\n  };\n\n  override willHide(): void {\n    this.#suggestionsResizeObserver.disconnect();\n  }\n\n  #handleSuggestionsScrollOrResize(): void {\n    void this.#suggestionsEvaluateLayoutThrottler.schedule(() => {\n      this.#evaluateSuggestionsLayout();\n      return Promise.resolve();\n    });\n  }\n\n  #scrollSuggestionsScrollContainer(direction: 'left'|'right'): void {\n    const suggestionsScrollContainer = this.#viewOutput.suggestionsScrollContainer;\n    if (!suggestionsScrollContainer) {\n      return;\n    }\n\n    suggestionsScrollContainer.scroll({\n      top: 0,\n      left: direction === 'left' ? suggestionsScrollContainer.scrollLeft - suggestionsScrollContainer.clientWidth :\n                                   suggestionsScrollContainer.scrollLeft + suggestionsScrollContainer.clientWidth,\n      behavior: 'smooth',\n    });\n  }\n\n  #handleRateClick(rating: Host.AidaClient.Rating): void {\n    if (this.#currentRating === rating) {\n      this.#currentRating = undefined;\n      this.#isShowingFeedbackForm = false;\n      this.#isSubmitButtonDisabled = true;\n      // This effectively reset the user rating\n      this.onFeedbackSubmit(Host.AidaClient.Rating.SENTIMENT_UNSPECIFIED);\n      void this.performUpdate();\n      return;\n    }\n\n    this.#currentRating = rating;\n    this.#isShowingFeedbackForm = this.canShowFeedbackForm;\n    this.onFeedbackSubmit(rating);\n    void this.performUpdate();\n  }\n\n  #handleClose(): void {\n    this.#isShowingFeedbackForm = false;\n    this.#isSubmitButtonDisabled = true;\n    void this.performUpdate();\n  }\n\n  #handleSubmit(ev: SubmitEvent): void {\n    ev.preventDefault();\n    const input = this.#feedbackValue;\n    if (!this.#currentRating || !input) {\n      return;\n    }\n    this.onFeedbackSubmit(this.#currentRating, input);\n    this.#isShowingFeedbackForm = false;\n    this.#isSubmitButtonDisabled = true;\n    void this.performUpdate();\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n\n.ai-assistance-feedback-row {\n  font-family: var(--default-font-family);\n  width: 100%;\n  display: flex;\n  gap: var(--sys-size-8);\n  justify-content: space-between;\n  align-items: center;\n  margin-block: calc(-1 * var(--sys-size-3));\n\n  .rate-buttons {\n    display: flex;\n    align-items: center;\n    gap: var(--sys-size-2);\n    padding: var(--sys-size-4) 0;\n  }\n\n  .vertical-separator {\n    height: 16px;\n    width: 1px;\n    vertical-align: top;\n    margin: 0 var(--sys-size-2);\n    background: var(--sys-color-divider);\n    display: inline-block;\n  }\n\n  .suggestions-container {\n    overflow: hidden;\n    position: relative;\n    display: flex;\n\n    .suggestions-scroll-container {\n      display: flex;\n      overflow: auto hidden;\n      scrollbar-width: none;\n      gap: var(--sys-size-3);\n      padding: var(--sys-size-3);\n    }\n\n    .scroll-button-container {\n      position: absolute;\n      top: 0;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      width: var(--sys-size-15);\n      z-index: 999;\n    }\n\n    .scroll-button-container.hidden {\n      display: none;\n    }\n\n    .scroll-button-container.left {\n      left: 0;\n      background:\n        linear-gradient(\n          90deg,\n          var(--sys-color-cdt-base-container) 0%,\n          var(--sys-color-cdt-base-container) 50%,\n          transparent\n        );\n    }\n\n    .scroll-button-container.right {\n      right: 0;\n      background:\n        linear-gradient(\n          90deg,\n          transparent,\n          var(--sys-color-cdt-base-container) 50%\n        );\n      justify-content: flex-end;\n    }\n  }\n}\n\n.feedback-form {\n  display: flex;\n  flex-direction: column;\n  gap: var(--sys-size-5);\n  margin-top: var(--sys-size-4);\n  background-color: var(--sys-color-surface3);\n  padding: var(--sys-size-6);\n  border-radius: var(--sys-shape-corner-medium-small);\n  max-width: var(--sys-size-32);\n\n  .feedback-input {\n    height: var(--sys-size-11);\n    padding: 0 var(--sys-size-5);\n    background-color: var(--sys-color-surface3);\n    width: auto;\n  }\n\n  .feedback-input::placeholder {\n    color: var(--sys-color-on-surface-subtle);\n    font: var(--sys-typescale-body4-regular);\n  }\n\n  .feedback-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .feedback-title {\n    margin: 0;\n    font: var(--sys-typescale-body3-medium);\n  }\n\n  .feedback-disclaimer {\n    padding: 0 var(--sys-size-4);\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('././components/userActionRow.css')} */`;", "\n// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport {html, type LitTemplate, render} from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport exploreWidgetStyles from './exploreWidget.css.js';\n\n/*\n* Strings that don't need to be translated at this time.\n*/\nconst UIStringsNotTranslate = {\n  /**\n   *@description Text for the empty state of the AI assistance panel when there is no agent selected.\n   */\n  Explore: 'Explore AI assistance',\n  /**\n   *@description The footer disclaimer that links to more information about the AI feature.\n   */\n  learnAbout: 'Learn about AI in DevTools',\n  /**\n   *@description Disclaimer text right after the chat input.\n   */\n  inputDisclaimerForEmptyState: 'This is an experimental AI feature and won\\'t always get it right.',\n} as const;\n\nconst lockedString = i18n.i18n.lockedString;\n\ninterface FeatureCard {\n  icon: string;\n  heading: string;\n  jslogContext: string;\n  onClick: () => void;\n  text: string;\n  panelName: string;\n}\n\ninterface ViewProps {\n  featureCards: FeatureCard[];\n}\n\nexport const DEFAULT_VIEW = (\n    input: ViewProps,\n    _output: Record<string, unknown>,\n    target: HTMLElement,\n    ): void => {\n  function renderFeatureCardContent(featureCard: FeatureCard): LitTemplate {\n    // TODO: Open should be part of the string and the button a placeholder\n    // but locked strings don't support it.\n    // clang-format off\n   return html`Open\n     <button\n       class=\"link\"\n       role=\"link\"\n       jslog=${VisualLogging.link(featureCard.jslogContext).track({\n         click: true,\n       })}\n       @click=${featureCard.onClick}\n     >${featureCard.panelName}</button>\n     ${featureCard.text}`;\n    // clang-format on\n  }\n\n  // clang-format off\n  render(\n    html`\n      <style>\n        ${exploreWidgetStyles}\n      </style>\n      <div class=\"ai-assistance-explore-container\">\n        <div class=\"header\">\n          <div class=\"icon\">\n            <devtools-icon name=\"smart-assistant\"></devtools-icon>\n          </div>\n          <h1>${lockedString(UIStringsNotTranslate.Explore)}</h1>\n          <p>\n            To chat about an item, right-click and select${' '}\n            <strong>Ask AI</strong>.\n          </p>\n        </div>\n        <div class=\"content\">\n          ${input.featureCards.map(\n            featureCard => html`\n              <div class=\"feature-card\">\n                <div class=\"feature-card-icon\">\n                  <devtools-icon name=${featureCard.icon}></devtools-icon>\n                </div>\n                <div class=\"feature-card-content\">\n                  <h3>${featureCard.heading}</h3>\n                  <p>${renderFeatureCardContent(featureCard)}</p>\n                </div>\n              </div>\n            `,\n          )}\n        </div>\n      </div>\n      <footer class=\"ai-assistance-explore-footer\" jslog=${VisualLogging.section('footer')}>\n        <p>\n          ${lockedString(UIStringsNotTranslate.inputDisclaimerForEmptyState)}\n          <button\n            class=\"link\"\n            role=\"link\"\n            jslog=${VisualLogging.link('open-ai-settings').track({\n              click: true,\n            })}\n            @click=${() => {\n              void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n            }}\n          >\n            ${lockedString(UIStringsNotTranslate.learnAbout)}\n          </button>\n        </p>\n      </footer>\n    `,\n    target,\n    { host: target },\n  );\n  // clang-format on\n};\n\nexport type View = typeof DEFAULT_VIEW;\n\nexport class ExploreWidget extends UI.Widget.Widget {\n  view: View;\n  constructor(element?: HTMLElement, view?: View) {\n    super(false, false, element);\n    this.view = view ?? DEFAULT_VIEW;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    void this.requestUpdate();\n  }\n\n  override performUpdate(): Promise<void>|void {\n    const config = Root.Runtime.hostConfig;\n    const featureCards: FeatureCard[] = [];\n    if (config.devToolsFreestyler?.enabled && UI.ViewManager.ViewManager.instance().hasView('elements')) {\n      featureCards.push({\n        icon: 'brush-2',\n        heading: 'CSS styles',\n        jslogContext: 'open-elements-panel',\n        onClick: () => {\n          void UI.ViewManager.ViewManager.instance().showView(\n              'elements',\n          );\n        },\n        panelName: 'Elements',\n        text: 'to ask about CSS styles'\n      });\n    }\n    if (config.devToolsAiAssistanceNetworkAgent?.enabled && UI.ViewManager.ViewManager.instance().hasView('network')) {\n      featureCards.push({\n        icon: 'arrow-up-down',\n        heading: 'Network',\n        jslogContext: 'open-network-panel',\n        onClick: () => {\n          void UI.ViewManager.ViewManager.instance().showView(\n              'network',\n          );\n        },\n        panelName: 'Network',\n        text: 'to ask about a request\\'s details'\n      });\n    }\n    if (config.devToolsAiAssistanceFileAgent?.enabled && UI.ViewManager.ViewManager.instance().hasView('sources')) {\n      featureCards.push({\n        icon: 'document',\n        heading: 'Files',\n        jslogContext: 'open-sources-panel',\n        onClick: () => {\n          void UI.ViewManager.ViewManager.instance().showView(\n              'sources',\n          );\n        },\n        panelName: 'Sources',\n        text: 'to ask about a file\\'s content'\n      });\n    }\n    if (config.devToolsAiAssistancePerformanceAgent?.enabled &&\n        UI.ViewManager.ViewManager.instance().hasView('timeline')) {\n      featureCards.push({\n        icon: 'performance',\n        heading: 'Performance',\n        jslogContext: 'open-performance-panel',\n        onClick: () => {\n          void UI.ViewManager.ViewManager.instance().showView(\n              'timeline',\n          );\n        },\n        panelName: 'Performance',\n        text: 'to ask about a trace item'\n      });\n    }\n\n    this.view(\n        {\n          featureCards,\n        },\n        {},\n        this.contentElement,\n    );\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.ai-assistance-explore-container {\n  &,\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  width: 100%;\n  height: fit-content;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: auto 0;\n  font: var(--sys-typescale-headline4);\n  gap: var(--sys-size-8);\n  padding: var(--sys-size-3);\n  overflow: auto;\n  scrollbar-gutter: stable both-edges;\n\n  .link {\n    padding: 0;\n    margin: 0 3px;\n  }\n\n  .header {\n    flex-shrink: 0;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    justify-self: center;\n    gap: var(--sys-size-4);\n\n    .icon {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: var(--sys-size-14);\n      width: var(--sys-size-14);\n      border-radius: var(--sys-shape-corner-small);\n      background: linear-gradient(\n        135deg,\n        var(--sys-color-gradient-primary),\n        var(--sys-color-gradient-tertiary)\n      );\n    }\n\n    h1 {\n      font: var(--sys-typescale-headline4);\n    }\n\n    p {\n      text-align: center;\n      font: var(--sys-typescale-body4-regular);\n    }\n\n    .link {\n      font: var(--sys-typescale-body4-regular);\n    }\n  }\n\n  .content {\n    flex-shrink: 0;\n    display: flex;\n    flex-direction: column;\n    gap: var(--sys-size-5);\n    align-items: center;\n    justify-content: center;\n    justify-self: center;\n  }\n\n  .feature-card {\n    display: flex;\n    padding: var(--sys-size-4) var(--sys-size-6);\n    gap: 10px;\n    background-color: var(--sys-color-surface2);\n    border-radius: var(--sys-shape-corner-medium-small);\n    width: 100%;\n    align-items: center;\n\n    .feature-card-icon {\n      min-width: var(--sys-size-12);\n      min-height: var(--sys-size-12);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: var(--sys-color-tonal-container);\n      border-radius: var(--sys-shape-corner-full);\n\n      devtools-icon {\n        width: 18px;\n        height: 18px;\n      }\n    }\n\n    .feature-card-content {\n      h3 {\n        font: var(--sys-typescale-body3-medium);\n      }\n\n      p {\n        font: var(--sys-typescale-body4-regular);\n        line-height: 18px;\n      }\n    }\n  }\n}\n\n.ai-assistance-explore-footer {\n  flex-shrink: 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-block: var(--sys-size-3);\n  font: var(--sys-typescale-body5-regular);\n  border-top: 1px solid var(--sys-color-divider);\n  text-wrap: balance;\n  text-align: center;\n\n  p {\n    margin: 0;\n    padding: 0;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('././components/exploreWidget.css')} */`;"],
  "mappings": "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",
  "names": ["Common", "Host", "i18n", "Root", "AiAssistanceModel", "Workspace", "Buttons", "UI", "Lit", "VisualLogging", "Host", "i18n", "Root", "AiAssistanceModel", "Buttons", "UI", "Lit", "VisualLogging", "Common", "Host", "i18n", "Platform", "Persistence", "Workspace", "Buttons", "UI", "html", "nothing", "render", "VisualLogging", "UIStringsNotTranslate", "lockedString", "PatchSuggestionState", "SelectedProjectType", "nothing", "html", "render", "project", "change", "Common", "Host", "i18n", "Buttons", "UI", "VisualLogging", "html", "UIStringsNotTranslate", "lockedString", "html", "ref", "Lit", "UIStringsNotTranslate", "lockedString", "SCROLL_ROUNDING_OFFSET", "DEFAULT_VIEW", "i18n", "Root", "UI", "html", "render", "VisualLogging", "UIStringsNotTranslate", "lockedString", "DEFAULT_VIEW", "html", "render", "html", "Lit", "UIStrings", "UIStringsNotTranslate", "str_", "i18nString", "lockedString"]
}
