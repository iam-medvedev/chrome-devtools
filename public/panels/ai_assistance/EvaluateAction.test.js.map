{"version":3,"file":"EvaluateAction.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/ai_assistance/EvaluateAction.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {describeWithRealConnection, getExecutionContext} from '../../testing/RealConnection.js';\n\nimport * as EvaluateAction from './EvaluateAction.js';\n\ndescribe('FreestylerEvaluateAction', () => {\n  describe('error handling', () => {\n    function executeWithResult(\n        mockResult: SDK.RuntimeModel.EvaluationResult, pausedOnBreakpoint = false): Promise<string> {\n      const executionContextStub = sinon.createStubInstance(SDK.RuntimeModel.ExecutionContext);\n      executionContextStub.debuggerModel = sinon.createStubInstance(SDK.DebuggerModel.DebuggerModel);\n      if (pausedOnBreakpoint) {\n        executionContextStub.debuggerModel.selectedCallFrame = () => {\n          return sinon.createStubInstance(SDK.DebuggerModel.CallFrame);\n        };\n      }\n      executionContextStub.callFunctionOn.resolves(mockResult);\n      executionContextStub.runtimeModel = sinon.createStubInstance(SDK.RuntimeModel.RuntimeModel);\n      return EvaluateAction.EvaluateAction.execute('', [], executionContextStub, {throwOnSideEffect: false});\n    }\n\n    function mockRemoteObject(overrides: Partial<SDK.RemoteObject.RemoteObject> = {}): SDK.RemoteObject.RemoteObject {\n      return sinon.createStubInstance(SDK.RemoteObject.RemoteObject, {\n        ...(overrides.className ? {className: overrides.className} : null),\n        ...(overrides.subtype ? {subtype: overrides.subtype} : null),\n        ...(overrides.type ? {type: overrides.type} : null),\n        ...(overrides.value ? {value: overrides.value} : null),\n        ...(overrides.preview ? {preview: overrides.preview} : null),\n      });\n    }\n\n    function mockExceptionDetails({description}: {description: string}): Protocol.Runtime.ExceptionDetails {\n      return {\n        exceptionId: 3,\n        text: 'SyntaxError',\n        lineNumber: 3,\n        columnNumber: 3,\n        exception: {type: Protocol.Runtime.RemoteObjectType.String, description},\n      };\n    }\n\n    beforeEach(() => {\n      sinon.restore();\n    });\n\n    it('should serialize a CDP error as a string', async () => {\n      assert.strictEqual(await executeWithResult({error: 'errorMessage'}), 'Error: errorMessage');\n    });\n\n    it('should throw an ExecutionError when the debugger is paused', async () => {\n      assert.strictEqual(\n          await executeWithResult({error: 'errorMessage'}, true),\n          'Error: Cannot evaluate JavaScript because the execution is paused on a breakpoint.');\n    });\n\n    it('should throw an ExecutionError with the description of the exception if response included exception details',\n       async () => {\n         assert.strictEqual(\n             await executeWithResult({\n               object: mockRemoteObject(),\n               exceptionDetails: mockExceptionDetails({description: 'Error description'}),\n             }),\n             'Error: Error description');\n       });\n\n    it('should throw a SideEffectError when the resulted exception starts with possible side effect error',\n       async () => {\n         try {\n           await executeWithResult({\n             object: mockRemoteObject(),\n             exceptionDetails: mockExceptionDetails({description: 'EvalError: Possible side-effect in debug-evaluate'}),\n           });\n           assert.fail('not reachable');\n         } catch (err) {\n           assert.instanceOf(err, EvaluateAction.SideEffectError);\n           assert.strictEqual(err.message, 'EvalError: Possible side-effect in debug-evaluate');\n         }\n       });\n  });\n\n  describeWithRealConnection('serialization', () => {\n    async function executionContextForTest() {\n      const targetManager = SDK.TargetManager.TargetManager.instance();\n      const target = targetManager.rootTarget();\n      const runtimeModel = target!.model(SDK.RuntimeModel.RuntimeModel);\n      return await getExecutionContext(runtimeModel!);\n    }\n\n    async function executeForTest(action: string, throwOnSideEffect = false) {\n      const functionDeclaration = `async function ($0) {\n  try {\n    ${action}\n    ;\n    return ((typeof data !== \"undefined\") ? data : undefined);\n  } catch (error) {\n    return error;\n  }\n}`;\n      return await EvaluateAction.EvaluateAction.execute(\n          functionDeclaration, [], await executionContextForTest(), {throwOnSideEffect});\n    }\n\n    it('should serialize primitive values correctly', async () => {\n      assert.strictEqual(await executeForTest('const data = \"string\"'), '\\'string\\'');\n      assert.strictEqual(await executeForTest('const data = 999n'), '999n');\n      assert.strictEqual(await executeForTest('const data = true'), 'true');\n      assert.strictEqual(await executeForTest('const data = undefined'), 'undefined');\n      assert.strictEqual(await executeForTest('const data = 42'), '42');\n      assert.strictEqual(await executeForTest('const data = Symbol(\"sym\")'), 'Symbol(sym)');\n    });\n\n    describe('HTMLElement', () => {\n      it('should work with plain nodes', async () => {\n        const serializedElement = await executeForTest(`\n          const el = document.createElement('div');\n\n          const data = el;\n        `);\n        assert.strictEqual(serializedElement, '\"<div></div>\"');\n      });\n\n      it('should serialize node with classes', async () => {\n        const serializedElement = await executeForTest(`\n          const el = document.createElement('div');\n          el.classList.add('section');\n          el.classList.add('section-main');\n\n          const data = el;\n        `);\n        assert.strictEqual(serializedElement, '\"<div class=\\\\\"section section-main\\\\\"></div>\"');\n      });\n\n      it('should serialize node with id', async () => {\n        const serializedElement = await executeForTest(`\n          const el = document.createElement('div');\n          el.id = 'promotion-section';\n\n          const data = el;\n        `);\n        assert.strictEqual(serializedElement, '\"<div id=\\\\\"promotion-section\\\\\"></div>\"');\n      });\n      it('should serialize node with class and id', async () => {\n        const serializedElement = await executeForTest(`\n          const el = document.createElement('div');\n          el.id = 'promotion-section';\n          el.classList.add('section');\n\n          const data = el;\n        `);\n        assert.strictEqual(serializedElement, '\"<div id=\\\\\"promotion-section\\\\\" class=\\\\\"section\\\\\"></div>\"');\n      });\n      it('should serialize node with children', async () => {\n        const serializedElement = await executeForTest(`\n          const el = document.createElement('div');\n          const p = document.createElement('p');\n          el.appendChild(p);\n\n          const data = el;\n        `);\n        assert.strictEqual(serializedElement, '\"<div>...</div>\"');\n      });\n    });\n\n    it('should serialize arrays correctly', async () => {\n      assert.strictEqual(await executeForTest('const data = []'), '[]');\n      assert.strictEqual(await executeForTest('const data = [1]'), '[1]');\n      assert.strictEqual(await executeForTest('const data = [1, 2]'), '[1,2]');\n      assert.strictEqual(await executeForTest('const data = [{key: 1}]'), '[{\"key\":1}]');\n    });\n\n    it('should serialize objects correctly', async () => {\n      assert.strictEqual(await executeForTest('const object = {key: \"str\"}; const data = object;'), '{\"key\":\"str\"}');\n      assert.strictEqual(\n          await executeForTest('const object = {key: \"str\", secondKey: \"str2\"}; const data = object;'),\n          '{\"key\":\"str\",\"secondKey\":\"str2\"}');\n      assert.strictEqual(await executeForTest('const object = {key: 1}; const data = object;'), '{\"key\":1}');\n    });\n\n    it('should not continue serializing cycles', async () => {\n      assert.strictEqual(\n          await executeForTest(`\n        const obj = { a: 1 };\n        obj.itself = obj;\n        const data = obj;\n      `),\n          '{\"a\":1,\"itself\":\"(cycle)\"}');\n    });\n\n    it('should not include number keys for CSSStyleDeclaration', async () => {\n      const result = await executeForTest('const data = getComputedStyle(document.body)');\n      const parsedResult = JSON.parse(result);\n      assert.isUndefined(parsedResult[0]);\n    });\n\n    it('should not trigger a side-effect for returning data', async () => {\n      assert.deepEqual(await executeForTest('const data = {}', true), '{}');\n    });\n\n    it('should not trigger a side-effect on errors', async () => {\n      assert.deepEqual(await executeForTest('throw new Error(\"test\")', true), 'Error: test');\n    });\n\n    it('should not trigger a side-effect on syntax errors', async () => {\n      assert.deepEqual(await executeForTest('const data = {;', true), 'Error: SyntaxError: Unexpected token \\';\\'');\n    });\n  });\n});\n"]}