{"version":3,"file":"AddSourceMapURLDialog.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/AddSourceMapURLDialog.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives, html, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport dialogStyles from './dialog.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Add Source Map URLDialog of the Sources panel\n   */\n  sourceMapUrl: 'Source map URL: ',\n  /**\n   * @description Text in Add Debug Info URL Dialog of the Sources panel\n   */\n  debugInfoUrl: 'DWARF symbols URL: ',\n  /**\n   * @description Text to add something\n   */\n  add: 'Add',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/AddSourceMapURLDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst {ref} = Directives;\n\ninterface ViewInput {\n  label: Platform.UIString.LocalizedString;\n  onKeyDown: (event: KeyboardEvent) => void;\n  apply: () => void;\n}\n\ninterface ViewOutput {\n  input: HTMLInputElement;\n}\n\ntype View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, output, target) => {\n  // clang-format off\n  render(html`\n    <style>${dialogStyles}</style>\n    <label>${input.label}</label>\n    <input class=\"harmony-input add-source-map\" spellcheck=\"false\" type=\"text\"\n        jslog=${VisualLogging.textField('url').track({keydown: 'Enter', change: true})}\n        @keydown=${input.onKeyDown} ${ref(e => { output.input = e as HTMLInputElement; })}>\n    <devtools-button @click=${input.apply} .jslogContext=${'add'}\n        .variant=${Buttons.Button.Variant.OUTLINED}>${i18nString(UIStrings.add)}</devtools-button>`,\n    target);\n  // clang-format on\n};\n\nexport class AddDebugInfoURLDialog extends UI.Widget.HBox {\n  private input!: HTMLInputElement;\n  private readonly dialog: UI.Dialog.Dialog;\n  private readonly callback: (arg0: Platform.DevToolsPath.UrlString) => void;\n  private constructor(\n      label: Platform.UIString.LocalizedString, jslogContext: string,\n      callback: (arg0: Platform.DevToolsPath.UrlString) => void, view = DEFAULT_VIEW) {\n    super({useShadowDom: true});\n\n    const viewInput = {\n      label,\n      onKeyDown: this.onKeyDown.bind(this),\n      apply: this.apply.bind(this),\n    };\n    const that = this;\n    const viewOutput = {\n      set input(input: HTMLInputElement) {\n        that.input = input;\n      },\n    };\n    view(viewInput, viewOutput, this.contentElement);\n\n    this.dialog = new UI.Dialog.Dialog(jslogContext);\n    this.dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.MEASURE_CONTENT);\n    this.dialog.setDefaultFocusedElement(this.input);\n\n    this.callback = callback;\n  }\n\n  static createAddSourceMapURLDialog(callback: (arg0: Platform.DevToolsPath.UrlString) => void): AddDebugInfoURLDialog {\n    return new AddDebugInfoURLDialog(i18nString(UIStrings.sourceMapUrl), 'add-source-map-url', callback);\n  }\n\n  static createAddDWARFSymbolsURLDialog(callback: (arg0: Platform.DevToolsPath.UrlString) => void):\n      AddDebugInfoURLDialog {\n    return new AddDebugInfoURLDialog(i18nString(UIStrings.debugInfoUrl), 'add-debug-info-url', callback);\n  }\n\n  override show(): void {\n    super.show(this.dialog.contentElement);\n    this.dialog.show();\n  }\n\n  private done(value: Platform.DevToolsPath.UrlString): void {\n    this.dialog.hide();\n    this.callback(value);\n  }\n\n  private apply(): void {\n    this.done(this.input.value as Platform.DevToolsPath.UrlString);\n  }\n\n  private onKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      event.consume(true);\n      this.apply();\n    }\n  }\n}\n"]}