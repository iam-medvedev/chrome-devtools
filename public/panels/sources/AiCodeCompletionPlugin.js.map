{"version":3,"file":"AiCodeCompletionPlugin.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/AiCodeCompletionPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Root from '../../core/root/root.js';\nimport * as AiCodeCompletion from '../../models/ai_code_completion/ai_code_completion.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport * as TextEditor from '../../ui/components/text_editor/text_editor.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as PanelCommon from '../common/common.js';\n\nimport {Plugin} from './Plugin.js';\n\nconst AI_CODE_COMPLETION_CHARACTER_LIMIT = 20_000;\n\nexport class AiCodeCompletionPlugin extends Plugin {\n  #aidaClient?: Host.AidaClient.AidaClient;\n  #aiCodeCompletion?: AiCodeCompletion.AiCodeCompletion.AiCodeCompletion;\n  #aiCodeCompletionSetting = Common.Settings.Settings.instance().createSetting('ai-code-completion-enabled', false);\n  #aiCodeCompletionTeaserDismissedSetting =\n      Common.Settings.Settings.instance().createSetting('ai-code-completion-teaser-dismissed', false);\n  #teaserCompartment = new CodeMirror.Compartment();\n  #teaser?: PanelCommon.AiCodeCompletionTeaser;\n  #teaserDisplayTimeout?: number;\n  #editor?: TextEditor.TextEditor.TextEditor;\n\n  #boundEditorKeyDown: (event: Event) => Promise<void>;\n  #boundOnAiCodeCompletionSettingChanged: () => void;\n\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super(uiSourceCode);\n    if (!this.#isAiCodeCompletionEnabled()) {\n      throw new Error('AI code completion feature is not enabled.');\n    }\n    this.#boundEditorKeyDown = this.#editorKeyDown.bind(this);\n    this.#boundOnAiCodeCompletionSettingChanged = this.#onAiCodeCompletionSettingChanged.bind(this);\n    const showTeaser = !this.#aiCodeCompletionSetting.get() && !this.#aiCodeCompletionTeaserDismissedSetting.get();\n    if (showTeaser) {\n      this.#teaser = new PanelCommon.AiCodeCompletionTeaser({onDetach: this.#detachAiCodeCompletionTeaser.bind(this)});\n    }\n  }\n\n  static override accepts(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return uiSourceCode.contentType().hasScripts() || uiSourceCode.contentType().hasStyleSheets();\n  }\n\n  override dispose(): void {\n    this.#teaser = undefined;\n    this.#aiCodeCompletionSetting.removeChangeListener(this.#boundOnAiCodeCompletionSettingChanged);\n    this.#editor?.removeEventListener('keydown', this.#boundEditorKeyDown);\n    this.#aiCodeCompletion?.remove();\n    super.dispose();\n  }\n\n  override editorInitialized(editor: TextEditor.TextEditor.TextEditor): void {\n    this.#editor = editor;\n    this.#editor.addEventListener('keydown', this.#boundEditorKeyDown);\n    this.#aiCodeCompletionSetting.addChangeListener(this.#boundOnAiCodeCompletionSettingChanged);\n    this.#onAiCodeCompletionSettingChanged();\n  }\n\n  override editorExtension(): CodeMirror.Extension {\n    return [\n      CodeMirror.EditorView.updateListener.of(update => this.#editorUpdate(update)), this.#teaserCompartment.of([]),\n      // conservativeCompletion is required so that the completion suggestions in the traditional\n      // autocomplete menu are only activated after the first keyDown/keyUp events.\n      TextEditor.Config.conservativeCompletion, TextEditor.Config.aiAutoCompleteSuggestion,\n      CodeMirror.Prec.highest(CodeMirror.keymap.of(this.#editorKeymap()))\n    ];\n  }\n\n  #editorUpdate(update: CodeMirror.ViewUpdate): void {\n    if (this.#teaser) {\n      if (update.docChanged) {\n        update.view.dispatch({effects: this.#teaserCompartment.reconfigure([])});\n        this.#addTeaserPluginToCompartment(update);\n      } else if (update.selectionSet) {\n        update.view.dispatch({effects: this.#teaserCompartment.reconfigure([])});\n      }\n    } else if (this.#aiCodeCompletion) {\n      if (update.docChanged && update.state.doc !== update.startState.doc) {\n        this.#triggerAiCodeCompletion();\n      }\n    }\n  }\n\n  #triggerAiCodeCompletion(): void {\n    if (!this.#editor || !this.#aiCodeCompletion) {\n      return;\n    }\n    const {doc, selection} = this.#editor.state;\n    const query = doc.toString();\n    const cursor = selection.main.head;\n    let prefix = query.substring(0, cursor);\n    let suffix = query.substring(cursor);\n    if (prefix.length > AI_CODE_COMPLETION_CHARACTER_LIMIT) {\n      prefix = prefix.substring(prefix.length - AI_CODE_COMPLETION_CHARACTER_LIMIT);\n    }\n    if (suffix.length > AI_CODE_COMPLETION_CHARACTER_LIMIT) {\n      suffix = suffix.substring(0, AI_CODE_COMPLETION_CHARACTER_LIMIT);\n    }\n    this.#aiCodeCompletion.onTextChanged(prefix, suffix, cursor, this.#getInferenceLanguage());\n  }\n\n  #editorKeymap(): readonly CodeMirror.KeyBinding[] {\n    return [\n      {\n        key: 'Escape',\n        run: (): boolean => {\n          if (this.#aiCodeCompletion && this.#editor && TextEditor.Config.hasActiveAiSuggestion(this.#editor.state)) {\n            this.#editor.dispatch({\n              effects: TextEditor.Config.setAiAutoCompleteSuggestion.of(null),\n            });\n            return true;\n          }\n          return false;\n        },\n      },\n      {\n        key: 'Tab',\n        run: (): boolean => {\n          if (this.#aiCodeCompletion && this.#editor && TextEditor.Config.hasActiveAiSuggestion(this.#editor.state)) {\n            const {accepted, suggestion} = TextEditor.Config.acceptAiAutoCompleteSuggestion(this.#editor.editor);\n            if (accepted) {\n              if (suggestion?.rpcGlobalId && suggestion?.sampleId) {\n                this.#aiCodeCompletion?.registerUserAcceptance(suggestion.rpcGlobalId, suggestion.sampleId);\n              }\n            }\n            return accepted;\n          }\n          return false;\n        },\n      }\n    ];\n  }\n\n  async #editorKeyDown(event: Event): Promise<void> {\n    if (!this.#teaser?.isShowing()) {\n      return;\n    }\n    const keyboardEvent = (event as KeyboardEvent);\n    if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(keyboardEvent)) {\n      if (keyboardEvent.key === 'i') {\n        keyboardEvent.consume(true);\n        void VisualLogging.logKeyDown(event.currentTarget, event, 'ai-code-completion-teaser.fre');\n        await this.#teaser?.onAction(event);\n      } else if (keyboardEvent.key === 'x') {\n        keyboardEvent.consume(true);\n        void VisualLogging.logKeyDown(event.currentTarget, event, 'ai-code-completion-teaser.dismiss');\n        this.#teaser?.onDismiss(event);\n      }\n    }\n  }\n\n  #addTeaserPluginToCompartment = Common.Debouncer.debounce((update: CodeMirror.ViewUpdate) => {\n    if (this.#teaserDisplayTimeout) {\n      window.clearTimeout(this.#teaserDisplayTimeout);\n      this.#teaserDisplayTimeout = undefined;\n    }\n    this.#teaserDisplayTimeout = window.setTimeout(() => {\n      if (this.#teaser) {\n        update.view.dispatch(\n            {effects: this.#teaserCompartment.reconfigure([aiCodeCompletionTeaserExtension(this.#teaser)])});\n      }\n    }, AiCodeCompletion.AiCodeCompletion.DELAY_BEFORE_SHOWING_RESPONSE_MS);\n  }, AiCodeCompletion.AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS);\n\n  #setAiCodeCompletion(): void {\n    if (!this.#editor) {\n      return;\n    }\n    if (!this.#aidaClient) {\n      this.#aidaClient = new Host.AidaClient.AidaClient();\n    }\n    if (this.#teaser) {\n      this.#detachAiCodeCompletionTeaser();\n      this.#teaser = undefined;\n    }\n    this.#aiCodeCompletion =\n        new AiCodeCompletion.AiCodeCompletion.AiCodeCompletion({aidaClient: this.#aidaClient}, this.#editor);\n  }\n\n  #onAiCodeCompletionSettingChanged(): void {\n    if (this.#aiCodeCompletionSetting.get()) {\n      this.#setAiCodeCompletion();\n    } else if (this.#aiCodeCompletion) {\n      this.#aiCodeCompletion.remove();\n      this.#aiCodeCompletion = undefined;\n    }\n  }\n\n  #detachAiCodeCompletionTeaser(): void {\n    this.#editor?.dispatch({\n      effects: this.#teaserCompartment.reconfigure([]),\n    });\n    this.#teaser = undefined;\n  }\n\n  #isAiCodeCompletionEnabled(): boolean {\n    return Boolean(Root.Runtime.hostConfig.devToolsAiCodeCompletion?.enabled);\n  }\n\n  #getInferenceLanguage(): Host.AidaClient.AidaInferenceLanguage|undefined {\n    const mimeType = this.uiSourceCode.mimeType();\n    switch (mimeType) {\n      case 'application/javascript':\n      case 'application/ecmascript':\n      case 'application/x-ecmascript':\n      case 'application/x-javascript':\n      case 'text/ecmascript':\n      case 'text/javascript1.0':\n      case 'text/javascript1.1':\n      case 'text/javascript1.2':\n      case 'text/javascript1.3':\n      case 'text/javascript1.4':\n      case 'text/javascript1.5':\n      case 'text/jscript':\n      case 'text/livescript ':\n      case 'text/x-ecmascript':\n      case 'text/x-javascript':\n      case 'text/javascript':\n      case 'text/jsx':\n        return Host.AidaClient.AidaInferenceLanguage.JAVASCRIPT;\n      case 'text/typescript':\n      case 'text/typescript-jsx':\n      case 'application/typescript':\n        return Host.AidaClient.AidaInferenceLanguage.TYPESCRIPT;\n      case 'text/css':\n        return Host.AidaClient.AidaInferenceLanguage.CSS;\n      case 'text/html':\n        return Host.AidaClient.AidaInferenceLanguage.HTML;\n      case 'text/x-python':\n      case 'application/python':\n        return Host.AidaClient.AidaInferenceLanguage.PYTHON;\n      case 'text/x-java':\n      case 'text/x-java-source':\n        return Host.AidaClient.AidaInferenceLanguage.JAVA;\n      case 'text/x-c++src':\n      case 'text/x-csrc':\n      case 'text/x-c':\n        return Host.AidaClient.AidaInferenceLanguage.CPP;\n      case 'application/json':\n      case 'application/manifest+json':\n        return Host.AidaClient.AidaInferenceLanguage.JSON;\n      case 'text/markdown':\n        return Host.AidaClient.AidaInferenceLanguage.MARKDOWN;\n      case 'application/xml':\n      case 'application/xhtml+xml':\n      case 'text/xml':\n        return Host.AidaClient.AidaInferenceLanguage.XML;\n      case 'text/x-go':\n        return Host.AidaClient.AidaInferenceLanguage.GO;\n      case 'application/x-sh':\n      case 'text/x-sh':\n        return Host.AidaClient.AidaInferenceLanguage.BASH;\n      case 'text/x-kotlin':\n        return Host.AidaClient.AidaInferenceLanguage.KOTLIN;\n      case 'text/x-vue':\n      case 'text/x.vue':\n        return Host.AidaClient.AidaInferenceLanguage.VUE;\n      case 'application/vnd.dart':\n        return Host.AidaClient.AidaInferenceLanguage.DART;\n      default:\n        return undefined;\n    }\n  }\n\n  setAidaClientForTest(aidaClient: Host.AidaClient.AidaClient): void {\n    this.#aidaClient = aidaClient;\n  }\n}\n\nexport function aiCodeCompletionTeaserExtension(teaser: PanelCommon.AiCodeCompletionTeaser): CodeMirror.Extension {\n  const teaserPlugin = CodeMirror.ViewPlugin.fromClass(class {\n    #teaserDecoration: CodeMirror.DecorationSet;\n\n    constructor(readonly view: CodeMirror.EditorView) {\n      const cursorPosition = this.view.state.selection.main.head;\n      const line = this.view.state.doc.lineAt(cursorPosition);\n      const column = cursorPosition - line.from;\n      const isCursorAtEndOfLine = column >= line.length;\n      if (isCursorAtEndOfLine) {\n        this.#teaserDecoration = CodeMirror.Decoration.set([\n          CodeMirror.Decoration\n              .widget({\n                widget: new TextEditor.AiCodeCompletionTeaserPlaceholder.AiCodeCompletionTeaserPlaceholder(teaser),\n                side: 1\n              })\n              .range(cursorPosition),\n        ]);\n      } else {\n        this.#teaserDecoration = CodeMirror.Decoration.none;\n      }\n    }\n\n    declare update: () => void;\n\n    get decorations(): CodeMirror.DecorationSet {\n      return this.#teaserDecoration;\n    }\n  }, {\n    decorations: v => v.decorations,\n  });\n  return teaserPlugin;\n}\n"]}