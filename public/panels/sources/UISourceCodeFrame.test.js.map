{"version":3,"file":"UISourceCodeFrame.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/UISourceCodeFrame.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Breakpoints from '../../models/breakpoints/breakpoints.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {MockProtocolBackend} from '../../testing/MockScopeChain.js';\nimport {createFileSystemUISourceCode} from '../../testing/UISourceCodeHelpers.js';\n\nimport * as Sources from './sources.js';\n\nconst {UISourceCodeFrame} = Sources.UISourceCodeFrame;\nconst {urlString} = Platform.DevToolsPath;\n\ndescribeWithMockConnection('UISourceCodeFrame', () => {\n  describe('canEditSource', () => {\n    function setup() {\n      const workspace = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n      const ignoreListManager = Workspace.IgnoreListManager.IgnoreListManager.instance({forceNew: true});\n      const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n        forceNew: true,\n        targetManager: SDK.TargetManager.TargetManager.instance(),\n        resourceMapping:\n            new Bindings.ResourceMapping.ResourceMapping(SDK.TargetManager.TargetManager.instance(), workspace),\n        ignoreListManager,\n      });\n      const breakpointManager = Breakpoints.BreakpointManager.BreakpointManager.instance({\n        forceNew: true,\n        targetManager: SDK.TargetManager.TargetManager.instance(),\n        workspace,\n        debuggerWorkspaceBinding,\n      });\n      const persistence =\n          Persistence.Persistence.PersistenceImpl.instance({forceNew: true, workspace, breakpointManager});\n      Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance({forceNew: true, workspace});\n      const backend = new MockProtocolBackend();\n\n      return {persistence, backend, debuggerWorkspaceBinding};\n    }\n\n    it('returns false for source mapped files when they are not mapped in a workspace', async () => {\n      const target = createTarget();\n      const {backend, debuggerWorkspaceBinding} = setup();\n\n      const sourceRoot = 'http://example.com';\n      const sources = ['foo.ts'];\n      const scriptInfo = {url: `${sourceRoot}/bundle.js`, content: '1;\\n'};\n      const sourceMapInfo = {\n        url: `${scriptInfo.url}.map`,\n        content: {version: 3, mappings: '', sourceRoot, sources, sourcesContent: ['1;']}\n      };\n\n      const uiSourceCodePromise =\n          debuggerWorkspaceBinding.waitForUISourceCodeAdded(urlString`http://example.com/foo.ts`, target);\n      await backend.addScript(target, scriptInfo, sourceMapInfo);\n      const uiSourceCode = await uiSourceCodePromise;\n\n      const frame = new UISourceCodeFrame(uiSourceCode);\n\n      renderElementIntoDOM(frame);\n\n      assert.isFalse(frame.canEditSource());\n    });\n\n    it('returns true for source mapped files when they are mapped in a workspace', async () => {\n      const target = createTarget();\n      const {persistence, backend, debuggerWorkspaceBinding} = setup();\n\n      const sourceRoot = 'http://example.com';\n      const sources = ['foo.ts'];\n      const scriptInfo = {url: `${sourceRoot}/bundle.js`, content: '1;\\n'};\n      const sourceMapInfo = {\n        url: `${scriptInfo.url}.map`,\n        content: {version: 3, mappings: '', sourceRoot, sources, sourcesContent: ['1;']}\n      };\n\n      const uiSourceCodePromise =\n          debuggerWorkspaceBinding.waitForUISourceCodeAdded(urlString`http://example.com/foo.ts`, target);\n      await backend.addScript(target, scriptInfo, sourceMapInfo);\n      const uiSourceCode = await uiSourceCodePromise;\n\n      const {uiSourceCode: fileSystemUISourceCode} = createFileSystemUISourceCode({\n        url: Platform.DevToolsPath.urlString`file:///path/to/overrides/foo.ts`,\n        fileSystemPath: Platform.DevToolsPath.urlString`file:///path/to/overrides`,\n        mimeType: 'text/typescript',\n        content: '1;',\n      });\n      await persistence.addBindingForTest({network: uiSourceCode, fileSystem: fileSystemUISourceCode});\n\n      const frame = new UISourceCodeFrame(uiSourceCode);\n\n      renderElementIntoDOM(frame);\n\n      assert.isTrue(frame.canEditSource());\n    });\n  });\n});\n"]}