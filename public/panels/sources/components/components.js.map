{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/sources/components/HeadersView.ts", "HeadersView.css.js"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as Persistence from '../../../models/persistence/persistence.js';\nimport * as TextUtils from '../../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../../models/workspace/workspace.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport headersViewStyles from './HeadersView.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description The title of a button that adds a field to input a header in the editor form.\n   */\n  addHeader: 'Add a header',\n  /**\n   * @description The title of a button that removes a field to input a header in the editor form.\n   */\n  removeHeader: 'Remove this header',\n  /**\n   * @description The title of a button that removes a section for defining header overrides in the editor form.\n   */\n  removeBlock: 'Remove this \\'`ApplyTo`\\'-section',\n  /**\n   * @description Error message for files which cannot not be parsed.\n   * @example {.headers} PH1\n   */\n  errorWhenParsing: 'Error when parsing \\'\\'{PH1}\\'\\'.',\n  /**\n   * @description Explainer for files which cannot be parsed.\n   * @example {.headers} PH1\n   */\n  parsingErrorExplainer:\n      'This is most likely due to a syntax error in \\'\\'{PH1}\\'\\'. Try opening this file in an external editor to fix the error or delete the file and re-create the override.',\n  /**\n   * @description Button text for a button which adds an additional header override rule.\n   */\n  addOverrideRule: 'Add override rule',\n  /**\n   * @description Text which is a hyperlink to more documentation\n   */\n  learnMore: 'Learn more',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/components/HeadersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst DEFAULT_HEADER_VALUE = 'header value';\nconst getDefaultHeaderName = (i: number): string => `header-name-${i}`;\n\nexport class HeadersView extends UI.View.SimpleView {\n  readonly #headersViewComponent = new HeadersViewComponent();\n  #uiSourceCode: Workspace.UISourceCode.UISourceCode;\n\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super({\n      title: i18n.i18n.lockedString('HeadersView'),\n      viewId: 'headers-view',\n      jslog: `${VisualLogging.pane('headers-view')}`,\n    });\n    this.#uiSourceCode = uiSourceCode;\n    this.#uiSourceCode.addEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyChanged, this.#onWorkingCopyChanged, this);\n    this.#uiSourceCode.addEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyCommitted, this.#onWorkingCopyCommitted, this);\n    this.element.appendChild(this.#headersViewComponent);\n    void this.#setInitialData();\n  }\n\n  async #setInitialData(): Promise<void> {\n    const contentDataOrError = await this.#uiSourceCode.requestContentData();\n    this.#setComponentData(TextUtils.ContentData.ContentData.textOr(contentDataOrError, ''));\n  }\n\n  #setComponentData(content: string): void {\n    let parsingError = false;\n    let headerOverrides: Persistence.NetworkPersistenceManager.HeaderOverride[] = [];\n    content = content || '[]';\n    try {\n      headerOverrides = JSON.parse(content) as Persistence.NetworkPersistenceManager.HeaderOverride[];\n      if (!headerOverrides.every(Persistence.NetworkPersistenceManager.isHeaderOverride)) {\n        throw new Error('Type mismatch after parsing');\n      }\n    } catch {\n      console.error('Failed to parse', this.#uiSourceCode.url(), 'for locally overriding headers.');\n      parsingError = true;\n    }\n\n    this.#headersViewComponent.data = {\n      headerOverrides,\n      uiSourceCode: this.#uiSourceCode,\n      parsingError,\n    };\n  }\n\n  #onWorkingCopyChanged(): void {\n    this.#setComponentData(this.#uiSourceCode.workingCopy());\n  }\n\n  #onWorkingCopyCommitted(): void {\n    this.#setComponentData(this.#uiSourceCode.workingCopy());\n  }\n\n  getComponent(): HeadersViewComponent {\n    return this.#headersViewComponent;\n  }\n\n  dispose(): void {\n    this.#uiSourceCode.removeEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyChanged, this.#onWorkingCopyChanged, this);\n    this.#uiSourceCode.removeEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyCommitted, this.#onWorkingCopyCommitted, this);\n  }\n}\n\nexport interface HeadersViewComponentData {\n  headerOverrides: Persistence.NetworkPersistenceManager.HeaderOverride[];\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  parsingError: boolean;\n}\n\nexport class HeadersViewComponent extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #headerOverrides: Persistence.NetworkPersistenceManager.HeaderOverride[] = [];\n  #uiSourceCode: Workspace.UISourceCode.UISourceCode|null = null;\n  #parsingError = false;\n  #focusElement: {blockIndex: number, headerIndex?: number}|null = null;\n  #textOnFocusIn = '';\n\n  constructor() {\n    super();\n    this.#shadow.addEventListener('focusin', this.#onFocusIn.bind(this));\n    this.#shadow.addEventListener('focusout', this.#onFocusOut.bind(this));\n    this.#shadow.addEventListener('click', this.#onClick.bind(this));\n    this.#shadow.addEventListener('input', this.#onInput.bind(this));\n    this.#shadow.addEventListener('keydown', this.#onKeyDown.bind(this));\n    this.#shadow.addEventListener('paste', this.#onPaste.bind(this));\n    this.addEventListener('contextmenu', this.#onContextMenu.bind(this));\n  }\n\n  set data(data: HeadersViewComponentData) {\n    this.#headerOverrides = data.headerOverrides;\n    this.#uiSourceCode = data.uiSourceCode;\n    this.#parsingError = data.parsingError;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  // 'Enter' key should not create a new line in the contenteditable. Focus\n  // on the next contenteditable instead.\n  #onKeyDown(event: Event): void {\n    const target = event.target as HTMLElement;\n    if (!target.matches('.editable')) {\n      return;\n    }\n    const keyboardEvent = event as KeyboardEvent;\n    if (target.matches('.header-name') && target.innerText === '' &&\n        (keyboardEvent.key === 'Enter' || keyboardEvent.key === 'Tab')) {\n      // onFocusOut will remove the header -> blur instead of focusing on next editable\n      event.preventDefault();\n      target.blur();\n    } else if (keyboardEvent.key === 'Enter') {\n      event.preventDefault();\n      target.blur();\n      this.#focusNext(target);\n    } else if (keyboardEvent.key === 'Escape') {\n      event.consume();\n      target.innerText = this.#textOnFocusIn;\n      target.blur();\n      this.#onChange(target);\n    }\n  }\n\n  #focusNext(target: HTMLElement): void {\n    const elements = Array.from(this.#shadow.querySelectorAll('.editable')) as HTMLElement[];\n    const idx = elements.indexOf(target);\n    if (idx !== -1 && idx + 1 < elements.length) {\n      elements[idx + 1].focus();\n    }\n  }\n\n  #selectAllText(target: HTMLElement): void {\n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.selectNodeContents(target);\n    selection?.removeAllRanges();\n    selection?.addRange(range);\n  }\n\n  #onFocusIn(event: Event): void {\n    const target = event.target as HTMLElement;\n    if (target.matches('.editable')) {\n      this.#selectAllText(target);\n      this.#textOnFocusIn = target.innerText;\n    }\n  }\n\n  #onFocusOut(event: Event): void {\n    const target = event.target as HTMLElement;\n    if (target.innerText === '') {\n      const rowElement = target.closest('.row') as HTMLElement;\n      const blockIndex = Number(rowElement.dataset.blockIndex);\n      const headerIndex = Number(rowElement.dataset.headerIndex);\n      if (target.matches('.apply-to')) {\n        target.innerText = '*';\n        this.#headerOverrides[blockIndex].applyTo = '*';\n        this.#onHeadersChanged();\n      } else if (target.matches('.header-name')) {\n        this.#removeHeader(blockIndex, headerIndex);\n      }\n    }\n\n    // clear selection\n    const selection = window.getSelection();\n    selection?.removeAllRanges();\n\n    this.#uiSourceCode?.commitWorkingCopy();\n  }\n\n  #onContextMenu(event: Event): void {\n    if (!this.#uiSourceCode) {\n      return;\n    }\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.appendApplicableItems(this.#uiSourceCode);\n    void contextMenu.show();\n  }\n\n  #generateNextHeaderName(headers: Protocol.Fetch.HeaderEntry[]): string {\n    const takenNames = new Set<string>(headers.map(header => header.name));\n    let idx = 1;\n    while (takenNames.has(getDefaultHeaderName(idx))) {\n      idx++;\n    }\n    return getDefaultHeaderName(idx);\n  }\n\n  #onClick(event: Event): void {\n    const target = event.target as HTMLButtonElement;\n    const rowElement = target.closest('.row') as HTMLElement | null;\n    const blockIndex = Number(rowElement?.dataset.blockIndex || 0);\n    const headerIndex = Number(rowElement?.dataset.headerIndex || 0);\n    if (target.matches('.add-header')) {\n      this.#headerOverrides[blockIndex].headers.splice(\n          headerIndex + 1, 0,\n          {name: this.#generateNextHeaderName(this.#headerOverrides[blockIndex].headers), value: DEFAULT_HEADER_VALUE});\n      this.#focusElement = {blockIndex, headerIndex: headerIndex + 1};\n      this.#onHeadersChanged();\n    } else if (target.matches('.remove-header')) {\n      this.#removeHeader(blockIndex, headerIndex);\n    } else if (target.matches('.add-block')) {\n      this.#headerOverrides.push(\n          {applyTo: '*', headers: [{name: getDefaultHeaderName(1), value: DEFAULT_HEADER_VALUE}]});\n      this.#focusElement = {blockIndex: this.#headerOverrides.length - 1};\n      this.#onHeadersChanged();\n    } else if (target.matches('.remove-block')) {\n      this.#headerOverrides.splice(blockIndex, 1);\n      this.#onHeadersChanged();\n    }\n  }\n\n  #isDeletable(blockIndex: number, headerIndex: number): boolean {\n    const isOnlyDefaultHeader = headerIndex === 0 && this.#headerOverrides[blockIndex].headers.length === 1 &&\n        this.#headerOverrides[blockIndex].headers[headerIndex].name === getDefaultHeaderName(1) &&\n        this.#headerOverrides[blockIndex].headers[headerIndex].value === DEFAULT_HEADER_VALUE;\n    return !isOnlyDefaultHeader;\n  }\n\n  #removeHeader(blockIndex: number, headerIndex: number): void {\n    this.#headerOverrides[blockIndex].headers.splice(headerIndex, 1);\n    if (this.#headerOverrides[blockIndex].headers.length === 0) {\n      this.#headerOverrides[blockIndex].headers.push(\n          {name: this.#generateNextHeaderName(this.#headerOverrides[blockIndex].headers), value: DEFAULT_HEADER_VALUE});\n    }\n    this.#onHeadersChanged();\n  }\n\n  #onInput(event: Event): void {\n    this.#onChange(event.target as HTMLElement);\n  }\n\n  #onChange(target: HTMLElement): void {\n    const rowElement = target.closest('.row') as HTMLElement;\n    const blockIndex = Number(rowElement.dataset.blockIndex);\n    const headerIndex = Number(rowElement.dataset.headerIndex);\n    if (target.matches('.header-name')) {\n      this.#headerOverrides[blockIndex].headers[headerIndex].name = target.innerText;\n      this.#onHeadersChanged();\n    }\n    if (target.matches('.header-value')) {\n      this.#headerOverrides[blockIndex].headers[headerIndex].value = target.innerText;\n      this.#onHeadersChanged();\n    }\n    if (target.matches('.apply-to')) {\n      this.#headerOverrides[blockIndex].applyTo = target.innerText;\n      this.#onHeadersChanged();\n    }\n  }\n\n  #onHeadersChanged(): void {\n    this.#uiSourceCode?.setWorkingCopy(JSON.stringify(this.#headerOverrides, null, 2));\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.HeaderOverrideHeadersFileEdited);\n  }\n\n  #onPaste(event: Event): void {\n    const clipboardEvent = event as ClipboardEvent;\n    event.preventDefault();\n    if (clipboardEvent.clipboardData) {\n      const text = clipboardEvent.clipboardData.getData('text/plain');\n      const range = this.#shadow.getSelection()?.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n      range.deleteContents();\n\n      const textNode = document.createTextNode(text);\n      range.insertNode(textNode);\n      range.selectNodeContents(textNode);\n      range.collapse(false);\n\n      const selection = window.getSelection();\n      selection?.removeAllRanges();\n      selection?.addRange(range);\n\n      this.#onChange(event.target as HTMLElement);\n    }\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('HeadersView render was not scheduled');\n    }\n\n    if (this.#parsingError) {\n      const fileName = this.#uiSourceCode?.name() || '.headers';\n      // clang-format off\n      Lit.render(html`\n        <style>${headersViewStyles}</style>\n        <div class=\"center-wrapper\">\n          <div class=\"centered\">\n            <div class=\"error-header\">${i18nString(UIStrings.errorWhenParsing, {PH1: fileName})}</div>\n            <div class=\"error-body\">${i18nString(UIStrings.parsingErrorExplainer, {PH1: fileName})}</div>\n          </div>\n        </div>\n      `, this.#shadow, {host: this});\n      // clang-format on\n      return;\n    }\n\n    // clang-format off\n    Lit.render(html`\n      <style>${headersViewStyles}</style>\n      ${this.#headerOverrides.map((headerOverride, blockIndex) =>\n        html`\n          ${this.#renderApplyToRow(headerOverride.applyTo, blockIndex)}\n          ${headerOverride.headers.map((header, headerIndex) =>\n            html`\n              ${this.#renderHeaderRow(header, blockIndex, headerIndex)}\n            `,\n          )}\n        `,\n      )}\n      <devtools-button\n          .variant=${Buttons.Button.Variant.OUTLINED}\n          .jslogContext=${'headers-view.add-override-rule'}\n          class=\"add-block\">\n        ${i18nString(UIStrings.addOverrideRule)}\n      </devtools-button>\n      <div class=\"learn-more-row\">\n        <x-link\n            href=\"https://goo.gle/devtools-override\"\n            class=\"link\"\n            jslog=${VisualLogging.link('learn-more').track({click: true})}>${i18nString(UIStrings.learnMore)}</x-link>\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n\n    if (this.#focusElement) {\n      let focusElement: Element|null = null;\n      if (this.#focusElement.headerIndex) {\n        focusElement = this.#shadow.querySelector(`[data-block-index=\"${\n            this.#focusElement.blockIndex}\"][data-header-index=\"${this.#focusElement.headerIndex}\"] .header-name`);\n      } else {\n        focusElement = this.#shadow.querySelector(`[data-block-index=\"${this.#focusElement.blockIndex}\"] .apply-to`);\n      }\n      if (focusElement) {\n        (focusElement as HTMLElement).focus();\n      }\n      this.#focusElement = null;\n    }\n  }\n\n  #renderApplyToRow(pattern: string, blockIndex: number): Lit.TemplateResult {\n    // clang-format off\n    return html`\n      <div class=\"row\" data-block-index=${blockIndex}\n           jslog=${VisualLogging.treeItem(pattern === '*' ? pattern : undefined)}>\n        <div>${i18n.i18n.lockedString('Apply to')}</div>\n        <div class=\"separator\">:</div>\n        ${this.#renderEditable(pattern, 'apply-to')}\n        <devtools-button\n        title=${i18nString(UIStrings.removeBlock)}\n        .size=${Buttons.Button.Size.SMALL}\n        .iconName=${'bin'}\n        .iconWidth=${'14px'}\n        .iconHeight=${'14px'}\n        .variant=${Buttons.Button.Variant.ICON}\n        .jslogContext=${'headers-view.remove-apply-to-section'}\n        class=\"remove-block inline-button\"\n      ></devtools-button>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #renderHeaderRow(header: Protocol.Fetch.HeaderEntry, blockIndex: number, headerIndex: number): Lit.TemplateResult {\n    // clang-format off\n    return html`\n      <div class=\"row padded\" data-block-index=${blockIndex} data-header-index=${headerIndex}\n           jslog=${VisualLogging.treeItem(header.name).parent('headers-editor-row-parent')}>\n        ${this.#renderEditable(header.name, 'header-name red', true)}\n        <div class=\"separator\">:</div>\n        ${this.#renderEditable(header.value, 'header-value')}\n        <devtools-button\n          title=${i18nString(UIStrings.addHeader)}\n          .size=${Buttons.Button.Size.SMALL}\n          .iconName=${'plus'}\n          .variant=${Buttons.Button.Variant.ICON}\n          .jslogContext=${'headers-view.add-header'}\n          class=\"add-header inline-button\"\n        ></devtools-button>\n        <devtools-button\n          title=${i18nString(UIStrings.removeHeader)}\n          .size=${Buttons.Button.Size.SMALL}\n          .iconName=${'bin'}\n          .variant=${Buttons.Button.Variant.ICON}\n          ?hidden=${!this.#isDeletable(blockIndex, headerIndex)}\n          .jslogContext=${'headers-view.remove-header'}\n          class=\"remove-header inline-button\"\n        ></devtools-button>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #renderEditable(value: string, className?: string, isKey?: boolean): Lit.TemplateResult {\n    // This uses Lit's `live`-directive, so that when checking whether to\n    // update during re-render, `value` is compared against the actual live DOM\n    // value of the contenteditable element and not the potentially outdated\n    // value from the previous render.\n    // clang-format off\n    const jslog = isKey ? VisualLogging.key() : VisualLogging.value();\n    return html`<span jslog=${jslog.track({change: true, keydown: 'Enter|Escape|Tab', click: true})}\n                              contenteditable=\"true\"\n                              class=\"editable ${className}\"\n                              tabindex=\"0\"\n                              .innerText=${Lit.Directives.live(value)}></span>`;\n    // clang-format on\n  }\n}\n\nVisualLogging.registerParentProvider('headers-editor-row-parent', (e: Element) => {\n  while (e.previousElementSibling?.classList?.contains('padded')) {\n    e = e.previousElementSibling;\n  }\n  return e.previousElementSibling || undefined;\n});\n\ncustomElements.define('devtools-sources-headers-view', HeadersViewComponent);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-sources-headers-view': HeadersViewComponent;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2022 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  flex-grow: 1;\n  padding: 6px;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n  color: var(--sys-color-token-property-special);\n  font-family: var(--monospace-font-family);\n  font-size: var(--monospace-font-size);\n  align-items: center;\n  line-height: 24px;\n}\n\n.row devtools-button {\n  line-height: 1;\n  margin-left: 0.1em;\n}\n\n.row devtools-button:nth-of-type(1) {\n  margin-left: 0.8em;\n}\n\n.padded {\n  margin-left: 2em;\n}\n\n.separator {\n  margin-right: 0.5em;\n  color: var(--sys-color-on-surface);\n}\n\n.editable {\n  cursor: text;\n  color: var(--sys-color-on-surface);\n  overflow-wrap: break-word;\n  min-height: 18px;\n  line-height: 18px;\n  min-width: 0.5em;\n  background: transparent;\n  border: none;\n  outline: none;\n  display: inline-block;\n}\n\n.editable.red {\n  color: var(--sys-color-token-property-special);\n}\n\n.editable:hover,\n.editable:focus {\n  border: 1px solid var(--sys-color-neutral-outline);\n  border-radius: 2px;\n}\n\n.row .inline-button {\n  opacity: 0%;\n  visibility: hidden;\n  transition: opacity 200ms;\n}\n\n.row:focus-within .inline-button:not([hidden]),\n.row:hover .inline-button:not([hidden]) {\n  opacity: 100%;\n  visibility: visible;\n}\n\n.center-wrapper {\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.centered {\n  margin: 1em;\n  max-width: 300px;\n  text-align: center;\n}\n\n.error-header {\n  font-weight: bold;\n  margin-bottom: 1em;\n}\n\n.error-body {\n  line-height: 1.5em;\n  color: var(--sys-color-token-subtle);\n}\n\n.add-block {\n  margin-top: 3px;\n}\n\n.header-name,\n.header-value {\n  min-width: min-content;\n}\n\n.link {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n  outline-offset: 2px;\n  padding: 0;\n}\n\n.learn-more-row {\n  line-height: 24px;\n}\n\n/*# sourceURL=${import.meta.resolve('./HeadersView.css')} */`;"],
  "mappings": "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",
  "names": ["value"]
}
