{"version":3,"file":"CSSPlugin.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/CSSPlugin.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Sources from './sources.js';\n\nconst {CSSPlugin} = Sources.CSSPlugin;\n\ndescribe('CSSPlugin', () => {\n  describe('accepts', () => {\n    it('holds true for documents', () => {\n      const uiSourceCode = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n      uiSourceCode.contentType.returns(Common.ResourceType.resourceTypes.Document);\n      assert.isTrue(CSSPlugin.accepts(uiSourceCode));\n    });\n\n    it('holds true for style sheets', () => {\n      const uiSourceCode = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n      uiSourceCode.contentType.returns(Common.ResourceType.resourceTypes.Stylesheet);\n      assert.isTrue(CSSPlugin.accepts(uiSourceCode));\n    });\n  });\n});\n\ndescribeWithMockConnection('CSSPlugin', () => {\n  const classNameCompletion = (targetFactory: () => SDK.Target.Target) => {\n    beforeEach(() => {\n      sinon.stub(UI.ShortcutRegistry.ShortcutRegistry, 'instance').returns({\n        shortcutTitleForAction: () => {},\n        shortcutsForAction: () => [],\n        getShortcutListener: () => {},\n      } as unknown as UI.ShortcutRegistry.ShortcutRegistry);\n      targetFactory();\n    });\n\n    type CompletionProvider = (cx: CodeMirror.CompletionContext) => Promise<CodeMirror.CompletionResult|null>;\n    type ExtensionOrFacetProvider = {value: {override: CompletionProvider[]}}|ExtensionOrFacetProvider[]|\n                                    CodeMirror.Extension;\n    function findAutocompletion(extensions: ExtensionOrFacetProvider): CompletionProvider|null {\n      if ('value' in extensions && extensions.value.override) {\n        return extensions.value.override[0] || null;\n      }\n      if ('length' in extensions) {\n        for (let i = 0; i < extensions.length; ++i) {\n          const result = findAutocompletion(extensions[i]);\n          if (result) {\n            return result;\n          }\n        }\n      }\n      return null;\n    }\n\n    it('suggests CSS class names from the stylesheet', async () => {\n      const URL = 'http://example.com/styles.css' as Platform.DevToolsPath.UrlString;\n      const uiSourceCode = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n      uiSourceCode.url.returns(URL);\n      const plugin = new CSSPlugin(uiSourceCode);\n      const autocompletion = findAutocompletion(plugin.editorExtension());\n      const FROM = 42;\n      sinon.stub(CodeMirror.Tree.prototype, 'resolveInner')\n          .returns({name: 'ClassName', from: FROM} as CodeMirror.SyntaxNode);\n      const STYLESHEET_ID = 'STYLESHEET_ID' as Protocol.CSS.StyleSheetId;\n      sinon.stub(SDK.CSSModel.CSSModel.prototype, 'getStyleSheetIdsForURL').withArgs(URL).returns([STYLESHEET_ID]);\n      const CLASS_NAMES = ['foo', 'bar', 'baz'];\n      sinon.stub(SDK.CSSModel.CSSModel.prototype, 'getClassNames').withArgs(STYLESHEET_ID).resolves(CLASS_NAMES);\n      const completionResult =\n          await autocompletion!({state: {field: () => {}}} as unknown as CodeMirror.CompletionContext);\n      assert.deepStrictEqual(completionResult, {\n        from: FROM,\n        options: [\n          {type: 'constant', label: CLASS_NAMES[0]},\n          {type: 'constant', label: CLASS_NAMES[1]},\n          {type: 'constant', label: CLASS_NAMES[2]},\n        ],\n      });\n    });\n  };\n  describe('class name completion without tab target', () => classNameCompletion(createTarget));\n  describe('class name completion with tab target', () => classNameCompletion(() => {\n                                                      const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n                                                      createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n                                                      return createTarget({parentTarget: tabTarget});\n                                                    }));\n});\n"]}