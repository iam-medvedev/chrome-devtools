{"version":3,"file":"PerformanceMonitor.js","sourceRoot":"","sources":["../../../../../../front_end/panels/performance_monitor/PerformanceMonitor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport {Directives, html, render, type TemplateResult} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport performanceMonitorStyles from './performanceMonitor.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Aria accessible name in Performance Monitor of the Performance monitor tab\n   */\n  graphsDisplayingARealtimeViewOf: 'Graphs displaying a real-time view of performance metrics',\n  /**\n   * @description Text in Performance Monitor of the Performance monitor tab\n   */\n  paused: 'Paused',\n  /**\n   * @description Text in Performance Monitor of the Performance monitor tab\n   */\n  cpuUsage: 'CPU usage',\n  /**\n   * @description Text in Performance Monitor of the Performance monitor tab\n   */\n  jsHeapSize: 'JS heap size',\n  /**\n   * @description Text in Performance Monitor of the Performance monitor tab\n   */\n  domNodes: 'DOM Nodes',\n  /**\n   * @description Text in Performance Monitor of the Performance monitor tab\n   */\n  jsEventListeners: 'JS event listeners',\n  /**\n   * @description Text for documents, a type of resources\n   */\n  documents: 'Documents',\n  /**\n   * @description Text in Performance Monitor of the Performance monitor tab\n   */\n  documentFrames: 'Document Frames',\n  /**\n   * @description Text in Performance Monitor of the Performance monitor tab\n   */\n  layoutsSec: 'Layouts / sec',\n  /**\n   * @description Text in Performance Monitor of the Performance monitor tab\n   */\n  styleRecalcsSec: 'Style recalcs / sec',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/performance_monitor/PerformanceMonitor.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst {widgetConfig} = UI.Widget;\nconst {classMap, ref} = Directives;\n\ninterface PerformanceMonitorInput {\n  onMetricChanged: (metricName: string, active: boolean) => void;\n  chartsInfo: ChartInfo[];\n  metrics?: Map<string, number>;\n  width: number;\n  height: number;\n  suspended: boolean;\n}\n\ninterface PerformanceMonitorOutput {\n  graphRenderingContext: CanvasRenderingContext2D|null;\n  width: number;\n}\n\ntype PerformanceMonitorView = (input: PerformanceMonitorInput, output: PerformanceMonitorOutput, target: HTMLElement) =>\n    void;\n\nconst DEFAULT_VIEW: PerformanceMonitorView = (input, output, target) => {\n  // clang-format off\n  render(html`\n    <devtools-widget .widgetConfig=${widgetConfig(ControlPane, {\n      onMetricChanged: input.onMetricChanged,\n      chartsInfo: input.chartsInfo,\n      metrics: input.metrics\n    })} class=${classMap({suspended: input.suspended})}></devtools-widget>\n    <div class=\"perfmon-chart-container ${classMap({suspended: input.suspended})}\">\n      <canvas tabindex=\"-1\" aria-label=${i18nString(UIStrings.graphsDisplayingARealtimeViewOf)}\n          .width=${Math.round(input.width * window.devicePixelRatio)} .height=${input.height}\n          style=\"height:${input.height / window.devicePixelRatio}px\" ${ref(e => {\n            if (e) {\n              const canvas = e as HTMLCanvasElement;\n              output.graphRenderingContext = canvas.getContext('2d');\n              output.width = canvas.offsetWidth;\n            }\n      })}>\n      </canvas>\n    </div>\n    ${input.suspended ? html`\n      <div class=\"perfmon-chart-suspend-overlay fill\">\n        <div>${i18nString(UIStrings.paused)}</div>\n      </div>` : ''}`,\n    target);\n  // clang-format on\n};\n\nexport class PerformanceMonitorImpl extends UI.Widget.HBox implements\n    SDK.TargetManager.SDKModelObserver<SDK.PerformanceMetricsModel.PerformanceMetricsModel> {\n  private view: PerformanceMonitorView;\n  private chartInfos: ChartInfo[] = [];\n  private activeCharts = new Set<string>();\n  private metricsBuffer: Array<{timestamp: number, metrics: Map<string, number>}>;\n  private readonly pixelsPerMs: number;\n  private pollIntervalMs: number;\n  private readonly scaleHeight: number;\n  private graphHeight: number;\n  private gridColor: string;\n  private animationId!: number;\n  private width!: number;\n  private height!: number;\n  private model?: SDK.PerformanceMetricsModel.PerformanceMetricsModel|null;\n  private pollTimer?: number;\n  private metrics?: Map<string, number>;\n  private suspended = false;\n  private graphRenderingContext: CanvasRenderingContext2D|null = null;\n\n  constructor(pollIntervalMs = 500, view = DEFAULT_VIEW) {\n    super({\n      jslog: `${VisualLogging.panel('performance.monitor').track({resize: true})}`,\n      useShadowDom: true,\n    });\n    this.view = view;\n    this.registerRequiredCSS(performanceMonitorStyles);\n\n    this.metricsBuffer = [];\n    /** @constant */\n    this.pixelsPerMs = 10 / 1000;\n    /** @constant */\n    this.pollIntervalMs = pollIntervalMs;\n    /** @constant */\n    this.scaleHeight = 16;\n    /** @constant */\n    this.graphHeight = 90;\n    this.gridColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--divider-line');\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.PerformanceMetricsModel.PerformanceMetricsModel, this);\n  }\n\n  private onMetricStateChanged(metricName: string, active: boolean): void {\n    if (active) {\n      this.activeCharts.add(metricName);\n    } else {\n      this.activeCharts.delete(metricName);\n    }\n    this.recalcChartHeight();\n  }\n\n  override wasShown(): void {\n    if (!this.model) {\n      return;\n    }\n    this.chartInfos = this.createChartInfos();\n    const themeSupport = ThemeSupport.ThemeSupport.instance();\n    themeSupport.addEventListener(ThemeSupport.ThemeChangeEvent.eventName, () => {\n      // instantiateMetricData sets the colors for the metrics, which we need\n      // to re-evaluate when the theme changes before re-drawing the canvas.\n      this.chartInfos = this.createChartInfos();\n      this.requestUpdate();\n    });\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.SUSPEND_STATE_CHANGED, this.suspendStateChanged, this);\n    void this.model.enable();\n    this.suspendStateChanged();\n    this.requestUpdate();\n  }\n\n  override willHide(): void {\n    if (!this.model) {\n      return;\n    }\n    SDK.TargetManager.TargetManager.instance().removeEventListener(\n        SDK.TargetManager.Events.SUSPEND_STATE_CHANGED, this.suspendStateChanged, this);\n    this.stopPolling();\n    void this.model.disable();\n  }\n\n  override performUpdate(): void {\n    const input = {\n      onMetricChanged: this.onMetricStateChanged.bind(this),\n      chartsInfo: this.chartInfos,\n      metrics: this.metrics,\n      width: this.width,\n      height: this.height,\n      suspended: this.suspended,\n    };\n    const output = {graphRenderingContext: null, width: 0};\n    this.view(input, output, this.contentElement);\n    this.graphRenderingContext = output.graphRenderingContext;\n    this.width = output.width;\n    this.draw();\n  }\n\n  modelAdded(model: SDK.PerformanceMetricsModel.PerformanceMetricsModel): void {\n    if (model.target() !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.model = model;\n    if (this.isShowing()) {\n      this.wasShown();\n    }\n  }\n\n  modelRemoved(model: SDK.PerformanceMetricsModel.PerformanceMetricsModel): void {\n    if (this.model !== model) {\n      return;\n    }\n    if (this.isShowing()) {\n      this.willHide();\n    }\n    this.model = null;\n  }\n\n  private suspendStateChanged(): void {\n    const suspended = SDK.TargetManager.TargetManager.instance().allTargetsSuspended();\n    if (suspended) {\n      this.stopPolling();\n    } else {\n      this.startPolling();\n    }\n    this.suspended = suspended;\n    this.requestUpdate();\n  }\n\n  private startPolling(): void {\n    this.pollTimer = window.setInterval(() => this.poll(), this.pollIntervalMs);\n    this.onResize();\n    const animate = (): void => {\n      this.draw();\n      this.animationId = this.contentElement.window().requestAnimationFrame(() => {\n        animate();\n      });\n    };\n    animate();\n  }\n\n  private stopPolling(): void {\n    window.clearInterval(this.pollTimer);\n    this.contentElement.window().cancelAnimationFrame(this.animationId);\n    this.metricsBuffer = [];\n  }\n\n  private async poll(): Promise<void> {\n    if (!this.model) {\n      return;\n    }\n    const data = await this.model.requestMetrics();\n    const timestamp = data.timestamp;\n    const metrics = data.metrics;\n    this.metricsBuffer.push({timestamp, metrics});\n    const millisPerWidth = this.width / this.pixelsPerMs;\n    // Multiply by 2 as the pollInterval has some jitter and to have some extra samples if window is resized.\n    const maxCount = Math.ceil(millisPerWidth / this.pollIntervalMs * 2);\n    if (this.metricsBuffer.length > maxCount * 2)  // Multiply by 2 to have a hysteresis.\n    {\n      this.metricsBuffer.splice(0, this.metricsBuffer.length - maxCount);\n    }\n    this.metrics = metrics;\n    this.requestUpdate();\n  }\n\n  private draw(): void {\n    if (!this.graphRenderingContext) {\n      return;\n    }\n    const ctx = this.graphRenderingContext;\n    ctx.save();\n    ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    ctx.clearRect(0, 0, this.width, this.height);\n    ctx.save();\n    ctx.translate(0, this.scaleHeight);  // Reserve space for the scale bar.\n    for (const chartInfo of this.chartInfos) {\n      if (!this.activeCharts.has(chartInfo.metrics[0].name)) {\n        continue;\n      }\n      this.drawChart(ctx, chartInfo, this.graphHeight);\n      ctx.translate(0, this.graphHeight);\n    }\n    ctx.restore();\n    this.drawHorizontalGrid(ctx);\n    ctx.restore();\n  }\n\n  private drawHorizontalGrid(ctx: CanvasRenderingContext2D): void {\n    const labelDistanceSeconds = 10;\n    const lightGray = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-inverted-opacity-2');\n    ctx.font = '10px ' + Host.Platform.fontFamily();\n    ctx.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-inverted-opacity-50');\n    const currentTime = Date.now() / 1000;\n    for (let sec = Math.ceil(currentTime);; --sec) {\n      const x = this.width - ((currentTime - sec) * 1000 - this.pollIntervalMs) * this.pixelsPerMs;\n      if (x < -50) {\n        break;\n      }\n      ctx.beginPath();\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, this.height);\n      if (sec >= 0 && sec % labelDistanceSeconds === 0) {\n        ctx.fillText(new Date(sec * 1000).toLocaleTimeString(), x + 4, 12);\n      }\n      ctx.strokeStyle = sec % labelDistanceSeconds ? lightGray : this.gridColor;\n      ctx.stroke();\n    }\n  }\n\n  private drawChart(ctx: CanvasRenderingContext2D, chartInfo: ChartInfo, height: number): void {\n    ctx.save();\n    ctx.rect(0, 0, this.width, height);\n    ctx.clip();\n    const bottomPadding = 8;\n    const extraSpace = 1.05;\n    const max = this.calcMax(chartInfo) * extraSpace;\n    const stackedChartBaseLandscape = chartInfo.stacked ? new Map() : null;\n    const paths = [];\n    for (let i = chartInfo.metrics.length - 1; i >= 0; --i) {\n      const metricInfo = chartInfo.metrics[i];\n      paths.push({\n        path: this.buildMetricPath(\n            chartInfo, metricInfo, height - bottomPadding, max, i ? stackedChartBaseLandscape : null),\n        color: metricInfo.color,\n      });\n    }\n    const backgroundColor =\n        Common.Color.parse(ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container'))\n            ?.asLegacyColor();\n\n    if (backgroundColor) {\n      for (const path of paths.reverse()) {\n        const color = path.color;\n        ctx.save();\n        const parsedColor = Common.Color.parse(color);\n        if (!parsedColor) {\n          continue;\n        }\n        ctx.fillStyle = backgroundColor.blendWith(parsedColor.setAlpha(0.2).asLegacyColor()).asString() || '';\n        ctx.fill(path.path);\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 0.5;\n        ctx.stroke(path.path);\n        ctx.restore();\n      }\n    }\n    ctx.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-inverted-opacity-50');\n    ctx.font = `10px  ${Host.Platform.fontFamily()}`;\n    ctx.fillText(chartInfo.title, 8, 10);\n    this.drawVerticalGrid(ctx, height - bottomPadding, max, chartInfo);\n    ctx.restore();\n  }\n\n  private calcMax(chartInfo: ChartInfo): number {\n    if (chartInfo.max) {\n      return chartInfo.max;\n    }\n    const width = this.width;\n    const startTime = performance.now() - this.pollIntervalMs - width / this.pixelsPerMs;\n    let max = -Infinity;\n    for (const metricInfo of chartInfo.metrics) {\n      for (let i = this.metricsBuffer.length - 1; i >= 0; --i) {\n        const metrics = this.metricsBuffer[i];\n        const value = metrics.metrics.get(metricInfo.name);\n        if (value !== undefined) {\n          max = Math.max(max, value);\n        }\n        if (metrics.timestamp < startTime) {\n          break;\n        }\n      }\n    }\n    if (!this.metricsBuffer.length) {\n      return 10;\n    }\n\n    const base10 = Math.pow(10, Math.floor(Math.log10(max)));\n    max = Math.ceil(max / base10 / 2) * base10 * 2;\n\n    const alpha = 0.2;\n    chartInfo.currentMax = max * alpha + (chartInfo.currentMax || max) * (1 - alpha);\n    return chartInfo.currentMax;\n  }\n\n  private drawVerticalGrid(ctx: CanvasRenderingContext2D, height: number, max: number, info: ChartInfo): void {\n    let base = Math.pow(10, Math.floor(Math.log10(max)));\n    const firstDigit = Math.floor(max / base);\n    if (firstDigit !== 1 && firstDigit % 2 === 1) {\n      base *= 2;\n    }\n    let scaleValue = Math.floor(max / base) * base;\n\n    const span = max;\n    const topPadding = 18;\n    const visibleHeight = height - topPadding;\n    ctx.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-inverted-opacity-50');\n    ctx.strokeStyle = this.gridColor;\n    ctx.beginPath();\n    for (let i = 0; i < 2; ++i) {\n      const y = calcY(scaleValue);\n      const labelText = formatNumber(scaleValue, info);\n      ctx.moveTo(0, y);\n      ctx.lineTo(4, y);\n      ctx.moveTo(ctx.measureText(labelText).width + 12, y);\n      ctx.lineTo(this.width, y);\n      ctx.fillText(labelText, 8, calcY(scaleValue) + 3);\n      scaleValue /= 2;\n    }\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(0, height + 0.5);\n    ctx.lineTo(this.width, height + 0.5);\n    ctx.strokeStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-inverted-opacity-2');\n    ctx.stroke();\n    function calcY(value: number): number {\n      return Math.round(height - visibleHeight * value / span) + 0.5;\n    }\n  }\n\n  private buildMetricPath(\n      chartInfo: ChartInfo, metricInfo: MetricInfo, height: number, scaleMax: number,\n      stackedChartBaseLandscape: Map<number, number>|null): Path2D {\n    const path = new Path2D();\n    const topPadding = 18;\n    const visibleHeight = height - topPadding;\n    if (visibleHeight < 1) {\n      return path;\n    }\n    const span = scaleMax;\n    const metricName = metricInfo.name;\n    const pixelsPerMs = this.pixelsPerMs;\n    const startTime = performance.now() - this.pollIntervalMs - this.width / pixelsPerMs;\n    const smooth = chartInfo.smooth;\n\n    let x = 0;\n    let lastY = 0;\n    let lastX = 0;\n    if (this.metricsBuffer.length) {\n      x = (this.metricsBuffer[0].timestamp - startTime) * pixelsPerMs;\n      path.moveTo(x, calcY(0));\n      path.lineTo(this.width + 5, calcY(0));\n      lastY = calcY(\n          (this.metricsBuffer[this.metricsBuffer.length - 1] as {\n            metrics: Map<string, number>,\n          }).metrics.get(metricName) ||\n          0);\n      lastX = this.width + 5;\n      path.lineTo(lastX, lastY);\n    }\n    for (let i = this.metricsBuffer.length - 1; i >= 0; --i) {\n      const metrics = this.metricsBuffer[i];\n      const timestamp = metrics.timestamp;\n      let value: number = metrics.metrics.get(metricName) || 0;\n      if (stackedChartBaseLandscape) {\n        value += stackedChartBaseLandscape.get(timestamp) || 0;\n        value = Platform.NumberUtilities.clamp(value, 0, 1);\n        stackedChartBaseLandscape.set(timestamp, value);\n      }\n      const y = calcY(value);\n      x = (timestamp - startTime) * pixelsPerMs;\n      if (smooth) {\n        const midX = (lastX + x) / 2;\n        path.bezierCurveTo(midX, lastY, midX, y, x, y);\n      } else {\n        path.lineTo(x, lastY);\n        path.lineTo(x, y);\n      }\n      lastX = x;\n      lastY = y;\n      if (timestamp < startTime) {\n        break;\n      }\n    }\n    return path;\n\n    function calcY(value: number): number {\n      return Math.round(height - visibleHeight * value / span) + 0.5;\n    }\n  }\n\n  override onResize(): void {\n    super.onResize();\n    this.recalcChartHeight();\n  }\n\n  private recalcChartHeight(): void {\n    let height = this.scaleHeight;\n    for (const chartInfo of this.chartInfos) {\n      if (this.activeCharts.has(chartInfo.metrics[0].name)) {\n        height += this.graphHeight;\n      }\n    }\n    this.height = Math.ceil(height * window.devicePixelRatio);\n    this.requestUpdate();\n  }\n\n  private createChartInfos(): ChartInfo[] {\n    const themeSupport = ThemeSupport.ThemeSupport.instance();\n    const elementForStyles = this.contentElement;\n\n    const defaults = {\n      color: undefined,\n      format: undefined,\n      currentMax: undefined,\n      max: undefined,\n      smooth: undefined,\n      stacked: undefined,\n    };\n\n    return [\n      {\n        ...defaults,\n        title: i18nString(UIStrings.cpuUsage),\n        metrics: [\n          {\n            name: 'TaskDuration',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-cpu-task-duration', elementForStyles),\n          },\n          {\n            name: 'ScriptDuration',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-cpu-script-duration', elementForStyles),\n          },\n          {\n            name: 'LayoutDuration',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-cpu-layout-duration', elementForStyles),\n          },\n          {\n            name: 'RecalcStyleDuration',\n            color: themeSupport.getComputedValue(\n                '--override-color-perf-monitor-cpu-recalc-style-duration', elementForStyles),\n          },\n        ],\n        format: Format.PERCENT,\n        smooth: true,\n        stacked: true,\n        color: themeSupport.getComputedValue('--override-color-perf-monitor-cpu', elementForStyles),\n        max: 1,\n        currentMax: undefined,\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.jsHeapSize),\n        metrics: [\n          {\n            name: 'JSHeapTotalSize',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-jsheap-total-size', elementForStyles),\n          },\n          {\n            name: 'JSHeapUsedSize',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-jsheap-used-size', elementForStyles),\n          },\n        ],\n        format: Format.BYTES,\n        color: themeSupport.getComputedValue('--override-color-perf-monitor-jsheap', elementForStyles),\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.domNodes),\n        metrics: [\n          {\n            name: 'Nodes',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-dom-nodes', elementForStyles),\n          },\n        ],\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.jsEventListeners),\n        metrics: [\n          {\n            name: 'JSEventListeners',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-js-event-listeners', elementForStyles),\n          },\n        ],\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.documents),\n        metrics: [{\n          name: 'Documents',\n          color: themeSupport.getComputedValue('--override-color-perf-monitor-documents', elementForStyles),\n        }],\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.documentFrames),\n        metrics: [{\n          name: 'Frames',\n          color: themeSupport.getComputedValue('--override-color-perf-monitor-document-frames', elementForStyles),\n        }],\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.layoutsSec),\n        metrics: [{\n          name: 'LayoutCount',\n          color: themeSupport.getComputedValue('--override-color-perf-monitor-layout-count', elementForStyles),\n        }],\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.styleRecalcsSec),\n        metrics: [\n          {\n            name: 'RecalcStyleCount',\n            color: themeSupport.getComputedValue('--override-color-perf-monitor-recalc-style-count', elementForStyles),\n          },\n        ],\n      },\n    ];\n  }\n}\n\nexport const enum Format {\n  PERCENT = 'Percent',\n  BYTES = 'Bytes',\n}\n\ninterface ControlPaneInput {\n  chartsInfo: ChartInfo[];\n  enabledCharts: Set<string>;\n  metricValues: Map<string, number>;\n  onCheckboxChange: (chartName: string, e: Event) => void;\n}\n\ntype ControlPaneView = (input: ControlPaneInput, output: object, target: HTMLElement) => void;\n\nconst CONTROL_PANE_DEFAULT_VIEW: ControlPaneView = (input, _output, target) => {\n  render(\n      input.chartsInfo.map(chartInfo => {\n        const chartName = chartInfo.metrics[0].name;\n        const active = input.enabledCharts.has(chartName);\n        const value = input.metricValues.get(chartName) || 0;\n        return renderMetricIndicator(\n            chartInfo,\n            active,\n            value,\n            (e: Event) => input.onCheckboxChange(chartName, e),\n        );\n      }),\n      target);\n};\n\nexport class ControlPane extends UI.Widget.VBox {\n  readonly #enabledChartsSetting: Common.Settings.Setting<string[]>;\n  readonly #enabledCharts: Set<string>;\n  #onMetricChanged: ((metricName: string, active: boolean) => void)|null = null;\n\n  #chartsInfo: ChartInfo[] = [];\n  readonly #metricValues = new Map<string, number>();\n  readonly #view: ControlPaneView;\n\n  constructor(element: HTMLElement, view = CONTROL_PANE_DEFAULT_VIEW) {\n    super(element, {useShadowDom: false, classes: ['perfmon-control-pane']});\n    this.#view = view;\n\n    this.#enabledChartsSetting = Common.Settings.Settings.instance().createSetting(\n        'perfmon-active-indicators2', ['TaskDuration', 'JSHeapTotalSize', 'Nodes']);\n    this.#enabledCharts = new Set(this.#enabledChartsSetting.get());\n  }\n\n  set chartsInfo(chartsInfo: ChartInfo[]) {\n    this.#chartsInfo = chartsInfo;\n    this.requestUpdate();\n  }\n\n  set onMetricChanged(callback: (metricName: string, active: boolean) => void) {\n    this.#onMetricChanged = callback;\n    for (const chartName of this.#enabledCharts) {\n      callback(chartName, true);\n    }\n  }\n\n  override performUpdate(): void {\n    const input = {\n      chartsInfo: this.#chartsInfo,\n      enabledCharts: this.#enabledCharts,\n      metricValues: this.#metricValues,\n      onCheckboxChange: this.#onCheckboxChange.bind(this),\n    };\n    this.#view(input, {}, this.element);\n  }\n\n  #onCheckboxChange(chartName: string, e: Event): void {\n    this.#onToggle(chartName, (e.target as HTMLInputElement).checked);\n    this.requestUpdate();\n  }\n\n  #onToggle(chartName: string, active: boolean): void {\n    if (active) {\n      this.#enabledCharts.add(chartName);\n    } else {\n      this.#enabledCharts.delete(chartName);\n    }\n    this.#enabledChartsSetting.set(Array.from(this.#enabledCharts));\n    if (this.#onMetricChanged) {\n      this.#onMetricChanged(chartName, active);\n    }\n  }\n\n  set metrics(metrics: Map<string, number>|undefined) {\n    if (!metrics) {\n      return;\n    }\n    for (const [name, value] of metrics.entries()) {\n      this.#metricValues.set(name, value);\n    }\n    this.requestUpdate();\n  }\n}\n\nlet numberFormatter: Intl.NumberFormat;\nlet percentFormatter: Intl.NumberFormat;\n\nexport function formatNumber(value: number, info: ChartInfo): string {\n  if (!numberFormatter) {\n    numberFormatter = new Intl.NumberFormat('en-US', {maximumFractionDigits: 1});\n    percentFormatter = new Intl.NumberFormat('en-US', {maximumFractionDigits: 1, style: 'percent'});\n  }\n  switch (info.format) {\n    case Format.PERCENT:\n      return percentFormatter.format(value);\n    case Format.BYTES:\n      return i18n.ByteUtilities.bytesToString(value);\n    default:\n      return numberFormatter.format(value);\n  }\n}\n\nfunction renderMetricIndicator(\n    info: ChartInfo, active: boolean, value: number, onCheckboxChange: (e: Event) => void): TemplateResult {\n  const color = info.color || info.metrics[0].color;\n  const chartName = info.metrics[0].name;\n  // clang-format off\n  return html`\n      <div class=\"perfmon-indicator ${active ? 'active' : ''}\" jslog=${VisualLogging.toggle().track({\n        click: true,\n        keydown: 'Enter',\n      }).context(Platform.StringUtilities.toKebabCase(chartName))}>\n        <devtools-checkbox .checked=${active}\n            @change=${onCheckboxChange} .jslogContext=${chartName}>${info.title}</devtools-checkbox>\n        <div class=\"perfmon-indicator-value\" style=\"color:${color}\">${\n      formatNumber(value, info)}</div>\n      </div>\n    `;\n  // clang-format on\n}\n\nexport const format = new Intl.NumberFormat('en-US', {maximumFractionDigits: 1});\nexport interface MetricInfo {\n  name: string;\n  color: string;\n}\nexport interface ChartInfo {\n  title: Common.UIString.LocalizedString;\n  metrics: Array<{name: string, color: string}>;\n  max?: number;\n  currentMax?: number;\n  format?: Format;\n  smooth?: boolean;\n  color?: string;\n  stacked?: boolean;\n}\n"]}