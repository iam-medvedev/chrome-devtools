{
  "version": 3,
  "sources": ["layers-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Layers from './layers.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of the Layers tool\n   */\n  layers: 'Layers',\n  /**\n   * @description Command for showing the Layers tool\n   */\n  showLayers: 'Show Layers',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/layers/layers-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedLayersModule: (typeof Layers|undefined);\n\nasync function loadLayersModule(): Promise<typeof Layers> {\n  if (!loadedLayersModule) {\n    loadedLayersModule = await import('./layers.js');\n  }\n  return loadedLayersModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'layers',\n  title: i18nLazyString(UIStrings.layers),\n  commandPrompt: i18nLazyString(UIStrings.showLayers),\n  order: 100,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const Layers = await loadLayersModule();\n    return Layers.LayersPanel.LayersPanel.instance();\n  },\n});\n"],
  "mappings": ";AAIA,YAAY,UAAU;AACtB,YAAY,QAAQ;AAIpB,IAAM,YAAY;;;;EAIhB,QAAQ;;;;EAIR,YAAY;;AAEd,IAAM,OAAY,UAAK,kBAAkB,gCAAgC,SAAS;AAClF,IAAM,iBAAsB,UAAK,iCAAiC,KAAK,QAAW,IAAI;AAEtF,IAAI;AAEJ,eAAe,mBAAgB;AAC7B,MAAI,CAAC,oBAAoB;AACvB,yBAAqB,MAAM,OAAO,aAAa;EACjD;AACA,SAAO;AACT;AAEG,eAAY,sBAAsB;EACnC,UAAQ;EACR,IAAI;EACJ,OAAO,eAAe,UAAU,MAAM;EACtC,eAAe,eAAe,UAAU,UAAU;EAClD,OAAO;EACP,aAAW;EACX,MAAM,WAAQ;AACZ,UAAM,SAAS,MAAM,iBAAgB;AACrC,WAAO,OAAO,YAAY,YAAY,SAAQ;EAChD;CACD;",
  "names": []
}
