{"version":3,"file":"NetworkTrackAppender.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/NetworkTrackAppender.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport {\n  addDecorationToEvent,\n  buildGroupStyle,\n  buildTrackHeader,\n  getEventLevel,\n  type LastTimestampByLevel,\n} from './AppenderUtils.js';\nimport {\n  type TrackAppender,\n  type TrackAppenderName,\n  VisualLoggingTrackName,\n} from './CompatibilityTracksAppender.js';\nimport * as Components from './components/components.js';\nimport {InstantEventVisibleDurationMs} from './TimelineFlameChartDataProvider.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n   */\n  network: 'Network',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/NetworkTrackAppender.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type NetworkTrackEvent = Trace.Types.Events.SyntheticNetworkRequest|Trace.Types.Events.WebSocketEvent;\n\nexport class NetworkTrackAppender implements TrackAppender {\n  readonly appenderName: TrackAppenderName = 'Network';\n\n  #flameChartData: PerfUI.FlameChart.FlameChartTimelineData;\n  webSocketIdToLevel = new Map<number, number>();\n  #events: NetworkTrackEvent[] = [];\n\n  #font: string;\n  #group?: PerfUI.FlameChart.Group;\n\n  constructor(flameChartData: PerfUI.FlameChart.FlameChartTimelineData, events: NetworkTrackEvent[]) {\n    this.#flameChartData = flameChartData;\n    this.#events = events;\n    this.#font = `${PerfUI.Font.DEFAULT_FONT_SIZE} ${PerfUI.Font.getFontFamilyForCanvas()}`;\n\n    ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, () => {\n      if (this.#group) {\n        // We only need to update the color here, because FlameChart will call `scheduleUpdate()` when theme is changed.\n        this.#group.style.color = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-on-surface');\n        this.#group.style.backgroundColor =\n            ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container');\n      }\n    });\n  }\n\n  group(): PerfUI.FlameChart.Group|undefined {\n    return this.#group;\n  }\n\n  font(): string {\n    return this.#font;\n  }\n\n  /**\n   * Appends into the flame chart data the data corresponding to the\n   * Network track.\n   * @param trackStartLevel the horizontal level of the flame chart events where\n   * the track's events will start being appended.\n   * @param expanded wether the track should be rendered expanded.\n   * @returns the first available level to append more data after having\n   * appended the track's events.\n   */\n  appendTrackAtLevel(trackStartLevel: number, expanded?: boolean|undefined): number {\n    if (this.#events.length === 0) {\n      return trackStartLevel;\n    }\n    this.#appendTrackHeaderAtLevel(trackStartLevel, expanded);\n    return this.#appendEventsAtLevel(this.#events, trackStartLevel);\n  }\n\n  /**\n   * Adds into the flame chart data the header corresponding to the\n   * Network track. A header is added in the shape of a group in the\n   * flame chart data. A group has a predefined style and a reference\n   * to the definition of the legacy track (which should be removed\n   * in the future).\n   * @param currentLevel the flame chart level at which the header is\n   * appended.\n   * @param expanded wether the track should be rendered expanded.\n   */\n  #appendTrackHeaderAtLevel(_currentLevel: number, expanded?: boolean): void {\n    const style = buildGroupStyle({\n      shareHeaderLine: false,\n      useFirstLineForOverview: false,\n      useDecoratorsForOverview: true,\n    });\n    this.#group = buildTrackHeader(\n        VisualLoggingTrackName.NETWORK, 0, i18nString(UIStrings.network), style, /* selectable= */ true, expanded,\n        /* showStackContextMenu= */ false);\n    this.#flameChartData.groups.push(this.#group);\n  }\n\n  /**\n   * Adds into the flame chart data a list of trace events.\n   * @param events the trace events that will be appended to the flame chart.\n   * The events should be taken straight from the trace handlers. The handlers\n   * should sort the events by start time, and the parent event is before the\n   * child.\n   * @param trackStartLevel the flame chart level from which the events will\n   * be appended.\n   * @returns the next level after the last occupied by the appended these\n   * trace events (the first available level to append next track).\n   */\n  #appendEventsAtLevel(events: NetworkTrackEvent[], trackStartLevel: number): number {\n    // Appending everything to the same level isn't \"correct\", but relayoutEntriesWithinBounds() will handle that\n    // before anything is rendered.\n    for (let i = 0; i < events.length; ++i) {\n      const event = events[i];\n      this.#appendEventAtLevel(event, trackStartLevel);\n      // Decorate render blocking\n      if (Trace.Types.Events.isSyntheticNetworkRequest(event) &&\n          Trace.Helpers.Network.isSyntheticNetworkRequestEventRenderBlocking(event)) {\n        addDecorationToEvent(this.#flameChartData, i, {\n          type: PerfUI.FlameChart.FlameChartDecorationType.WARNING_TRIANGLE,\n          customStartTime: event.args.data.syntheticData.sendStartTime,\n          customEndTime: event.args.data.syntheticData.finishTime,\n        });\n      }\n    }\n    return this.relayoutEntriesWithinBounds(\n        events, Trace.Types.Timing.Milli(-Infinity), Trace.Types.Timing.Milli(Infinity));\n  }\n\n  /**\n   * Adds an event to the flame chart data at a defined level.\n   * @param event the event to be appended,\n   * @param level the level to append the event,\n   * @returns the index of the event in all events to be rendered in the flamechart.\n   */\n  #appendEventAtLevel(event: Trace.Types.Events.Event, level: number): number {\n    const index = this.#flameChartData.entryLevels.length;\n    this.#flameChartData.entryLevels[index] = level;\n    this.#flameChartData.entryStartTimes[index] = Trace.Helpers.Timing.microToMilli(event.ts);\n    const dur = event.dur || Trace.Helpers.Timing.milliToMicro(InstantEventVisibleDurationMs);\n    this.#flameChartData.entryTotalTimes[index] = Trace.Helpers.Timing.microToMilli(dur);\n    return level;\n  }\n\n  /**\n   * Update the flame chart data.\n   * When users zoom in the flamechart, we only want to show them the network\n   * requests between minTime and maxTime. This function will append those\n   * invisible events to the last level, and hide them.\n   * @returns the number of levels used by this track\n   */\n  relayoutEntriesWithinBounds(\n      events: NetworkTrackEvent[], minTime: Trace.Types.Timing.Milli, maxTime: Trace.Types.Timing.Milli): number {\n    if (!this.#flameChartData || events.length === 0) {\n      return 0;\n    }\n    const lastTimestampByLevel: LastTimestampByLevel = [];\n    this.webSocketIdToLevel = new Map<number, number>();\n    let maxLevel = 0;\n    for (let i = 0; i < events.length; ++i) {\n      const event = events[i];\n      const beginTime = Trace.Helpers.Timing.microToMilli(event.ts);\n      const dur = event.dur ? Trace.Helpers.Timing.microToMilli(event.dur) : InstantEventVisibleDurationMs;\n      const endTime = beginTime + dur;\n      const isBetweenTimes = beginTime < maxTime && endTime > minTime;\n      // Exclude events outside the the specified timebounds\n      if (!isBetweenTimes) {\n        this.#flameChartData.entryLevels[i] = -1;\n        continue;\n      }\n      // Layout the entries by assigning levels.\n      let level: number;\n      if ('identifier' in event.args.data && Trace.Types.Events.isWebSocketEvent(event)) {\n        level = this.getWebSocketLevel(event, lastTimestampByLevel);\n      } else {\n        level = getEventLevel(event, lastTimestampByLevel);\n      }\n      this.#flameChartData.entryLevels[i] = level;\n      maxLevel = Math.max(maxLevel, lastTimestampByLevel.length, level);\n    }\n    for (let i = 0; i < events.length; ++i) {\n      // -1 means this event is invisible.\n      if (this.#flameChartData.entryLevels[i] === -1) {\n        // The maxLevel is an invisible level.\n        this.#flameChartData.entryLevels[i] = maxLevel;\n      }\n    }\n    return maxLevel;\n  }\n\n  getWebSocketLevel(event: Trace.Types.Events.WebSocketEvent, lastTimestampByLevel: LastTimestampByLevel): number {\n    const webSocketIdentifier = event.args.data.identifier;\n    let level: number;\n    if (this.webSocketIdToLevel.has(webSocketIdentifier)) {\n      // We're placing an instant event on top of its parent websocket\n      level = this.webSocketIdToLevel.get(webSocketIdentifier) || 0;\n    } else {\n      // We're placing the parent websocket\n      level = getEventLevel(event, lastTimestampByLevel);\n      this.webSocketIdToLevel.set(webSocketIdentifier, level);\n    }\n    return level;\n  }\n\n  /*\n    ------------------------------------------------------------------------------------\n     The following methods  are invoked by the flame chart renderer to query features about\n     events on rendering.\n    ------------------------------------------------------------------------------------\n  */\n\n  /**\n   * Gets the color an event added by this appender should be rendered with.\n   */\n  colorForEvent(event: Trace.Types.Events.Event): string {\n    if (Trace.Types.Events.isSyntheticWebSocketConnection(event)) {\n      // the synthetic WebSocket events are not selectable, so we don't need to set the color.\n      return '';\n    }\n    if (Trace.Types.Events.isWebSocketTraceEvent(event)) {\n      return Components.Utils.colorForNetworkCategory(Components.Utils.NetworkCategory.JS);\n    }\n    if (!Trace.Types.Events.isSyntheticNetworkRequest(event)) {\n      throw new Error(`Unexpected Network Request: The event's type is '${event.name}'`);\n    }\n    return Components.Utils.colorForNetworkRequest(event);\n  }\n}\n"]}