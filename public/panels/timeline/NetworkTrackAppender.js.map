{"version":3,"file":"NetworkTrackAppender.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/NetworkTrackAppender.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport {buildGroupStyle, buildTrackHeader, getEventLevel, getFormattedTime} from './AppenderUtils.js';\nimport {\n  type HighlightedEntryInfo,\n  type TrackAppender,\n  type TrackAppenderName,\n  VisualLoggingTrackName,\n} from './CompatibilityTracksAppender.js';\nimport {Utils} from './components/components.js';\nimport {colorForNetworkCategory, colorForNetworkRequest, NetworkCategory} from './components/Utils.js';\nimport {InstantEventVisibleDurationMs} from './TimelineFlameChartDataProvider.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n   */\n  network: 'Network',\n  /**\n   *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n   */\n  wsConnectionOpened: 'WebSocket opened',\n  /**\n   *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n   *@example {ws://example.com} PH1\n   */\n  wsConnectionOpenedWithUrl: 'WebSocket opened: {PH1}',\n  /**\n   *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n   */\n  wsConnectionClosed: 'WebSocket closed',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/NetworkTrackAppender.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type NetworkTrackEvent =\n    TraceEngine.Types.TraceEvents.SyntheticNetworkRequest|TraceEngine.Types.TraceEvents.WebSocketEvent;\n\nexport class NetworkTrackAppender implements TrackAppender {\n  readonly appenderName: TrackAppenderName = 'Network';\n\n  #flameChartData: PerfUI.FlameChart.FlameChartTimelineData;\n  webSocketIdToLevel = new Map<number, number>();\n  #events: NetworkTrackEvent[] = [];\n\n  #font: string;\n  #group?: PerfUI.FlameChart.Group;\n\n  constructor(flameChartData: PerfUI.FlameChart.FlameChartTimelineData, events: NetworkTrackEvent[]) {\n    this.#flameChartData = flameChartData;\n    this.#events = events;\n    this.#font = `${PerfUI.Font.DEFAULT_FONT_SIZE} ${PerfUI.Font.getFontFamilyForCanvas()}`;\n\n    ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, () => {\n      if (this.#group) {\n        // We only need to update the color here, because FlameChart will call `scheduleUpdate()` when theme is changed.\n        this.#group.style.color = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-on-surface');\n        this.#group.style.backgroundColor =\n            ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container');\n      }\n    });\n  }\n\n  group(): PerfUI.FlameChart.Group|undefined {\n    return this.#group;\n  }\n\n  font(): string {\n    return this.#font;\n  }\n\n  /**\n   * Appends into the flame chart data the data corresponding to the\n   * Network track.\n   * @param trackStartLevel the horizontal level of the flame chart events where\n   * the track's events will start being appended.\n   * @param expanded wether the track should be rendered expanded.\n   * @returns the first available level to append more data after having\n   * appended the track's events.\n   */\n  appendTrackAtLevel(trackStartLevel: number, expanded?: boolean|undefined): number {\n    if (this.#events.length === 0) {\n      return trackStartLevel;\n    }\n    this.#appendTrackHeaderAtLevel(trackStartLevel, expanded);\n    return this.#appendEventsAtLevel(this.#events, trackStartLevel);\n  }\n\n  /**\n   * Adds into the flame chart data the header corresponding to the\n   * Network track. A header is added in the shape of a group in the\n   * flame chart data. A group has a predefined style and a reference\n   * to the definition of the legacy track (which should be removed\n   * in the future).\n   * @param currentLevel the flame chart level at which the header is\n   * appended.\n   * @param expanded wether the track should be rendered expanded.\n   */\n  #appendTrackHeaderAtLevel(currentLevel: number, expanded?: boolean): void {\n    const style = buildGroupStyle({\n      shareHeaderLine: false,\n      useFirstLineForOverview: false,\n      useDecoratorsForOverview: true,\n    });\n    const legends: PerfUI.FlameChart.Legend[] = [];\n    for (const category in NetworkCategory) {\n      legends.push({\n        color: Utils.colorForNetworkCategory(category as NetworkCategory),\n        category,\n      });\n    }\n    this.#group = buildTrackHeader(\n        VisualLoggingTrackName.NETWORK, 0, i18nString(UIStrings.network), style, /* selectable= */ true, expanded,\n        /* showStackContextMenu= */ false, legends);\n    this.#flameChartData.groups.push(this.#group);\n  }\n\n  /**\n   * Adds into the flame chart data a list of trace events.\n   * @param events the trace events that will be appended to the flame chart.\n   * The events should be taken straight from the trace handlers. The handlers\n   * should sort the events by start time, and the parent event is before the\n   * child.\n   * @param trackStartLevel the flame chart level from which the events will\n   * be appended.\n   * @returns the next level after the last occupied by the appended these\n   * trace events (the first available level to append next track).\n   */\n  #appendEventsAtLevel(events: readonly TraceEngine.Types.TraceEvents.TraceEventData[], trackStartLevel: number):\n      number {\n    const lastUsedTimeByLevel: number[] = [];\n    let websocketLevel = 0;\n    for (let i = 0; i < events.length; ++i) {\n      const event = events[i];\n      let level;\n      if (TraceEngine.Types.TraceEvents.isWebSocketTraceEvent(event) ||\n          TraceEngine.Types.TraceEvents.isSyntheticWebSocketConnectionEvent(event)) {\n        // process WebSocket events\n        const webSocketIdentifier = event.args.data.identifier;\n        if (this.webSocketIdToLevel.has(webSocketIdentifier)) {\n          // get the level for the WebSocket event that has the current identifier\n          const idLevel = this.webSocketIdToLevel.get(webSocketIdentifier) || 0;\n          this.#appendEventAtLevel(event, trackStartLevel + idLevel);\n        } else {\n          // calculate the level for the WebSocket event that has the current identifier\n          level = getEventLevel(event, lastUsedTimeByLevel);\n          this.webSocketIdToLevel.set(webSocketIdentifier, level);  // save the level for the current identifier\n          this.#appendEventAtLevel(event, trackStartLevel + level);\n          websocketLevel += 1;\n        }\n      } else {\n        // process network events\n        level = getEventLevel(event, lastUsedTimeByLevel);\n        this.#appendEventAtLevel(event, trackStartLevel + websocketLevel + level);\n      }\n    }\n    return trackStartLevel + lastUsedTimeByLevel.length;\n  }\n\n  /**\n   * Adds an event to the flame chart data at a defined level.\n   * @param event the event to be appended,\n   * @param level the level to append the event,\n   * @returns the index of the event in all events to be rendered in the flamechart.\n   */\n  #appendEventAtLevel(event: TraceEngine.Types.TraceEvents.TraceEventData, level: number): number {\n    const index = this.#flameChartData.entryLevels.length;\n    this.#flameChartData.entryLevels[index] = level;\n    this.#flameChartData.entryStartTimes[index] = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(event.ts);\n    const msDuration = event.dur ||\n        TraceEngine.Helpers.Timing.millisecondsToMicroseconds(\n            InstantEventVisibleDurationMs as TraceEngine.Types.Timing.MilliSeconds);\n    this.#flameChartData.entryTotalTimes[index] = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(msDuration);\n    return level;\n  }\n\n  /**\n   * Update the flame chart data.\n   * When users zoom in the flamechart, we only want to show them the network\n   * requests between startTime and endTime. This function will append those\n   * invisible events to the last level, and hide them.\n   * @returns the number of levels used by this track\n   */\n  filterTimelineDataBetweenTimes(\n      events: NetworkTrackEvent[], startTime: TraceEngine.Types.Timing.MilliSeconds,\n      endTime: TraceEngine.Types.Timing.MilliSeconds): number {\n    if (!this.#flameChartData || events.length === 0) {\n      return 0;\n    }\n    const lastTimeByLevel: number[] = [];\n    this.webSocketIdToLevel = new Map<number, number>();\n    let maxLevel = 0;\n    for (let i = 0; i < events.length; ++i) {\n      const event = events[i];\n      const beginTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(event.ts);\n      event.dur = event.dur ||\n          TraceEngine.Helpers.Timing.millisecondsToMicroseconds(\n              InstantEventVisibleDurationMs as TraceEngine.Types.Timing.MilliSeconds);\n      const eventEndTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(\n          (event.ts + event.dur) as TraceEngine.Types.Timing.MicroSeconds);\n      const isBetweenTimes = beginTime < endTime && eventEndTime > startTime;\n      if (!isBetweenTimes) {\n        this.#flameChartData.entryLevels[i] = -1;\n        continue;\n      }\n      let level;\n      if (TraceEngine.Types.TraceEvents.isWebSocketTraceEvent(event) ||\n          TraceEngine.Types.TraceEvents.isSyntheticWebSocketConnectionEvent(event)) {\n        const webSocketIdentifier = event.args.data.identifier;\n        if (this.webSocketIdToLevel.has(webSocketIdentifier)) {\n          level = this.webSocketIdToLevel.get(webSocketIdentifier) || 0;\n        } else {\n          level = getEventLevel(event, lastTimeByLevel);\n          this.webSocketIdToLevel.set(webSocketIdentifier, level);\n        }\n      } else {\n        level = getEventLevel(event, lastTimeByLevel);\n      }\n      this.#flameChartData.entryLevels[i] = level;\n      maxLevel = Math.max(maxLevel, lastTimeByLevel.length, level);\n    }\n    for (let i = 0; i < events.length; ++i) {\n      // -1 means this event is invisible.\n      if (this.#flameChartData.entryLevels[i] === -1) {\n        // The maxLevel is an invisible level.\n        this.#flameChartData.entryLevels[i] = maxLevel;\n      }\n    }\n    return maxLevel;\n  }\n\n  /*\n    ------------------------------------------------------------------------------------\n     The following methods  are invoked by the flame chart renderer to query features about\n     events on rendering.\n    ------------------------------------------------------------------------------------\n  */\n\n  /**\n   * Gets the color an event added by this appender should be rendered with.\n   */\n  colorForEvent(event: TraceEngine.Types.TraceEvents.TraceEventData): string {\n    if (TraceEngine.Types.TraceEvents.isSyntheticWebSocketConnectionEvent(event)) {\n      // the synthetic WebSocket events are not selectable, so we don't need to set the color.\n      return '';\n    }\n    if (TraceEngine.Types.TraceEvents.isWebSocketTraceEvent(event)) {\n      return colorForNetworkCategory(NetworkCategory.Script);\n    }\n    if (!TraceEngine.Types.TraceEvents.isSyntheticNetworkRequestEvent(event)) {\n      throw new Error(`Unexpected Network Request: The event's type is '${event.name}'`);\n    }\n    return colorForNetworkRequest(event);\n  }\n\n  /**\n   * Gets the title an event added by this appender should be rendered with.\n   */\n  titleForEvent(event: TraceEngine.Types.TraceEvents.TraceEventData): string {\n    return event.name;\n  }\n\n  /**\n   * Returns the info shown when an event added by this appender\n   * is hovered in the timeline.\n   */\n  highlightedEntryInfo(event: TraceEngine.Types.TraceEvents.TraceEventData): HighlightedEntryInfo {\n    const title = this.titleForEvent(event);\n    return {title, formattedTime: getFormattedTime(event.dur)};\n  }\n\n  /**\n   * Returns the title an event is shown with in the timeline.\n   */\n  titleForWebSocketEvent(event: TraceEngine.Types.TraceEvents.TraceEventData): string {\n    if (TraceEngine.Types.TraceEvents.isTraceEventWebSocketCreate(event)) {\n      if (event.args.data.url) {\n        return i18nString(UIStrings.wsConnectionOpenedWithUrl, {PH1: event.args.data.url});\n      }\n\n      return i18nString(UIStrings.wsConnectionOpened);\n    }\n    if (TraceEngine.Types.TraceEvents.isTraceEventWebSocketDestroy(event)) {\n      return i18nString(UIStrings.wsConnectionClosed);\n    }\n    return event.name;\n  }\n}\n"]}