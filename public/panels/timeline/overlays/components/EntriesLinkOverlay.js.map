{"version":3,"file":"EntriesLinkOverlay.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/overlays/components/EntriesLinkOverlay.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../../ui/components/icon_button/icon_button.js';\n\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as ThemeSupport from '../../../../ui/legacy/theme_support/theme_support.js';\nimport {html, render} from '../../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\n\nimport entriesLinkOverlayStyles from './entriesLinkOverlay.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Accessible label used to explain to a user that they are viewing an arrow representing a link between two entries.\n   */\n  diagram: 'Links between entries',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/overlays/components/EntriesLinkOverlay.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class EntryLinkStartCreating extends Event {\n  static readonly eventName = 'entrylinkstartcreating';\n\n  constructor() {\n    super(EntryLinkStartCreating.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class EntriesLinkOverlay extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #coordinateFrom: {x: number, y: number};\n  #fromEntryDimensions: {width: number, height: number};\n  #coordinateTo: {x: number, y: number};\n  #toEntryDimensions: {width: number, height: number}|null = null;\n  #connectorLineContainer: SVGAElement|null = null;\n  #connector: SVGLineElement|null = null;\n  #entryFromWrapper: HTMLElement|null = null;\n  #entryToWrapper: HTMLElement|null = null;\n  #entryFromCirleConnector: SVGCircleElement|null = null;\n  #entryToCircleConnector: SVGCircleElement|null = null;\n  #entryFromVisible = true;\n  #entryToVisible = true;\n  #canvasRect: DOMRect|null = null;\n\n  // These flags let us know if the entry we are drawing from/to are the\n  // originals, or if they are the parent, which can happen if an entry is\n  // collapsed. We care about this because if the entry is not the source, we\n  // draw the border as dashed, not solid.\n  #fromEntryIsSource = true;\n  #toEntryIsSource = true;\n  #arrowHidden = false;\n  #linkState: Trace.Types.File.EntriesLinkState;\n\n  constructor(\n      initialFromEntryCoordinateAndDimensions: {x: number, y: number, width: number, height: number},\n      linkCreationNotStartedState: Trace.Types.File.EntriesLinkState) {\n    super();\n    this.#render();\n    this.#coordinateFrom = {x: initialFromEntryCoordinateAndDimensions.x, y: initialFromEntryCoordinateAndDimensions.y};\n    this.#fromEntryDimensions = {\n      width: initialFromEntryCoordinateAndDimensions.width,\n      height: initialFromEntryCoordinateAndDimensions.height,\n    };\n    this.#coordinateTo = {x: initialFromEntryCoordinateAndDimensions.x, y: initialFromEntryCoordinateAndDimensions.y};\n    this.#connectorLineContainer = this.#shadow.querySelector<SVGAElement>('.connectorContainer') ?? null;\n    this.#connector = this.#connectorLineContainer?.querySelector('line') ?? null;\n    this.#entryFromWrapper = this.#shadow.querySelector('.from-highlight-wrapper') ?? null;\n    this.#entryToWrapper = this.#shadow.querySelector('.to-highlight-wrapper') ?? null;\n    this.#entryFromCirleConnector = this.#connectorLineContainer?.querySelector('.entryFromConnector') ?? null;\n    this.#entryToCircleConnector = this.#connectorLineContainer?.querySelector('.entryToConnector') ?? null;\n    this.#linkState = linkCreationNotStartedState;\n    this.#render();\n  }\n\n  set canvasRect(rect: DOMRect|null) {\n    if (rect === null) {\n      return;\n    }\n    if (this.#canvasRect && this.#canvasRect.width === rect.width && this.#canvasRect.height === rect.height) {\n      return;\n    }\n    this.#canvasRect = rect;\n    this.#render();\n  }\n\n  entryFromWrapper(): HTMLElement|null {\n    return this.#entryFromWrapper;\n  }\n\n  entryToWrapper(): HTMLElement|null {\n    return this.#entryToWrapper;\n  }\n\n  /**\n   * If one entry that is linked is in a collapsed track, we show the outlines\n   * but hide only the arrow.\n   */\n  set hideArrow(shouldHide: boolean) {\n    this.#arrowHidden = shouldHide;\n    if (this.#connector) {\n      this.#connector.style.display = shouldHide ? 'none' : 'block';\n    }\n  }\n\n  set fromEntryCoordinateAndDimensions(fromEntryParams: {x: number, y: number, length: number, height: number}) {\n    this.#coordinateFrom = {x: fromEntryParams.x, y: fromEntryParams.y};\n    this.#fromEntryDimensions = {width: fromEntryParams.length, height: fromEntryParams.height};\n    this.#updateCreateLinkBox();\n    this.#redrawAllEntriesLinkParts();\n  }\n\n  set entriesVisibility(entriesVisibility: {fromEntryVisibility: boolean, toEntryVisibility: boolean}) {\n    this.#entryFromVisible = entriesVisibility.fromEntryVisibility;\n    this.#entryToVisible = entriesVisibility.toEntryVisibility;\n    this.#redrawAllEntriesLinkParts();\n  }\n\n  // The arrow might be pointing either to an entry or an empty space.\n  // If the dimensions are not passed, it is pointing at an empty space.\n  set toEntryCoordinateAndDimensions(toEntryParams: {x: number, y: number, length?: number, height?: number}) {\n    this.#coordinateTo = {x: toEntryParams.x, y: toEntryParams.y};\n    if (toEntryParams.length && toEntryParams.height) {\n      this.#toEntryDimensions = {width: toEntryParams.length, height: toEntryParams.height};\n    } else {\n      this.#toEntryDimensions = null;\n    }\n\n    this.#updateCreateLinkBox();\n    this.#redrawAllEntriesLinkParts();\n  }\n\n  set fromEntryIsSource(x: boolean) {\n    if (x === this.#fromEntryIsSource) {\n      return;\n    }\n    this.#fromEntryIsSource = x;\n    this.#render();\n  }\n\n  set toEntryIsSource(x: boolean) {\n    if (x === this.#toEntryIsSource) {\n      return;\n    }\n    this.#toEntryIsSource = x;\n    this.#render();\n  }\n\n  /*\n    Redraw all parts of the EntriesLink overlay\n     _________\n    |__entry__|o\\      <-- 'from 'entry wrapper and the circle connector next to it\n                 \\\n                  \\    <-- Arrow Connector\n                   \\   ________________\n                    ➘ o|_____entry______|  <-- 'to' entry wrapper and the circle connector next to it\n  */\n  #redrawAllEntriesLinkParts(): void {\n    if (!this.#connector || !this.#entryFromWrapper || !this.#entryToWrapper || !this.#entryFromCirleConnector ||\n        !this.#entryToCircleConnector) {\n      console.error('one of the required Entries Link elements is missing.');\n      return;\n    }\n\n    if (this.#linkState === Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED) {\n      this.#entryFromCirleConnector.setAttribute('visibility', 'hidden');\n      this.#entryToCircleConnector.setAttribute('visibility', 'hidden');\n      this.#connector.style.display = 'none';\n      return;\n    }\n\n    this.#setEntriesWrappersVisibility();\n    this.#setConnectorCirclesVisibility();\n    this.#setArrowConnectorStyle();\n    this.#positionConnectorLineAndCircles();\n\n    this.#render();\n  }\n\n  // Only draw the entry wrapper if that entry is visible\n  #setEntriesWrappersVisibility(): void {\n    if (!this.#entryFromWrapper || !this.#entryToWrapper) {\n      return;\n    }\n    this.#entryFromWrapper.style.visibility = this.#entryFromVisible ? 'visible' : 'hidden';\n    this.#entryToWrapper.style.visibility = this.#entryToVisible ? 'visible' : 'hidden';\n  }\n\n  // Draw the entry connector circles:\n  //  - The entry the arrow is connecting to is the connection source\n  //  - That entry currently is visible\n  //  - There is enough space for the connector circle\n  #setConnectorCirclesVisibility(): void {\n    if (!this.#toEntryDimensions || !this.#entryFromCirleConnector || !this.#entryToCircleConnector) {\n      return;\n    }\n    // If the user is zoomed out, the connector circles can be as large as the\n    // event itself. So if the rectangle for this entry is too small, we\n    // don't draw the circles.\n    const minWidthToDrawConnectorCircles = 8;\n    const drawFromEntryConnectorCircle = this.#entryFromVisible && !this.#arrowHidden && this.#fromEntryIsSource &&\n        this.#fromEntryDimensions.width >= minWidthToDrawConnectorCircles;\n    const drawToEntryConnectorCircle = !this.#arrowHidden && this.#entryToVisible && this.#toEntryIsSource &&\n        this.#toEntryDimensions?.width >= minWidthToDrawConnectorCircles && !this.#arrowHidden;\n\n    this.#entryFromCirleConnector.setAttribute('visibility', drawFromEntryConnectorCircle ? 'visible' : 'hidden');\n    this.#entryToCircleConnector.setAttribute('visibility', drawToEntryConnectorCircle ? 'visible' : 'hidden');\n  }\n\n  #setArrowConnectorStyle(): void {\n    if (!this.#connector) {\n      return;\n    }\n\n    // If neither entry is visible, do not display the connector\n    this.#connector.style.display = (this.#entryFromVisible || this.#entryToVisible) ? 'block' : 'none';\n    this.#connector.setAttribute('stroke-width', '2');\n\n    const arrowColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-text-primary');\n\n    // Use a solid stroke if the 'to' entry's dimensions are unknown (during link creation) or if both entries are visible.\n    if (!this.#toEntryDimensions || (this.#entryFromVisible && this.#entryToVisible)) {\n      this.#connector.setAttribute('stroke', arrowColor);\n      return;\n    }\n\n    // If one entry is not visible and one is, fade the arrow.\n    if (this.#entryFromVisible && !this.#entryToVisible) {\n      this.#connector.setAttribute('stroke', 'url(#fromVisibleLineGradient)');\n    } else if (this.#entryToVisible && !this.#entryFromVisible) {\n      this.#connector.setAttribute('stroke', 'url(#toVisibleLineGradient)');\n    }\n  }\n\n  #positionConnectorLineAndCircles(): void {\n    if (!this.#connector || !this.#entryFromCirleConnector || !this.#entryToCircleConnector) {\n      return;\n    }\n\n    // If the entry is visible, the entry arrow starts from the middle of the right edge of the entry (end on the X axis and middle of the Y axis).\n    // If not, draw it to the y coordinate of the entry and the edge of the timeline so it is pointing in the direction of the entry.\n    const halfFromEntryHeight = this.#fromEntryDimensions.height / 2;\n    const fromX = this.#coordinateFrom.x + this.#fromEntryDimensions.width;\n    const fromY = this.#coordinateFrom.y + halfFromEntryHeight;\n\n    this.#connector.setAttribute('x1', fromX.toString());\n    this.#connector.setAttribute('y1', fromY.toString());\n\n    this.#entryFromCirleConnector.setAttribute('cx', fromX.toString());\n    this.#entryFromCirleConnector.setAttribute('cy', fromY.toString());\n\n    // If the arrow is pointing to the entry and that entry is visible, point it to the middle of the entry.\n    // If the entry is not visible, point the arrow to the edge of the screen towards the entry.\n    // Otherwise, the arrow is following the mouse so we assign it to the provided coordinates.\n    const toX = this.#coordinateTo.x;\n    const toY = this.#toEntryDimensions ? this.#coordinateTo.y + (this.#toEntryDimensions?.height ?? 0) / 2 :\n                                          this.#coordinateTo.y;\n\n    this.#connector.setAttribute('x2', toX.toString());\n    this.#connector.setAttribute('y2', toY.toString());\n\n    this.#entryToCircleConnector.setAttribute('cx', toX.toString());\n    this.#entryToCircleConnector.setAttribute('cy', toY.toString());\n  }\n\n  /*\n   * Calculates the gradient stop percentage when only one entry is visible.\n   * This percentage represents the portion of the line visible within the canvas,\n   * used to create a fade effect towards the off-screen entry.\n   * When one entry is off-screen, it is impossible to tell where exactly the line\n   * is going to. Therefore, to not needlessly take space, the faded line is very short.\n   *\n   * To achieve this, we need to calculate what percentage of the\n   * shole connection the short line is currently occupying and apply\n   * that gradient to the visible connection part.\n   */\n  #partlyVisibleConnectionLinePercentage(): number {\n    if (!this.#canvasRect) {\n      return 100;\n    }\n    const fadedLineLength = 25;\n\n    const lineLength = this.#coordinateTo.x - (this.#coordinateFrom.x + this.#fromEntryDimensions.width);\n    const visibleLineFromTotalPercentage = (fadedLineLength * 100) / lineLength;\n\n    return (visibleLineFromTotalPercentage < 100) ? visibleLineFromTotalPercentage : 100;\n  }\n\n  #updateCreateLinkBox(): void {\n    const createLinkBox = this.#shadow.querySelector<HTMLElement>('.create-link-box');\n    const createLinkIcon = createLinkBox?.querySelector<HTMLElement>('.create-link-icon') ?? null;\n\n    if (!createLinkBox || !createLinkIcon) {\n      console.error('creating element is missing.');\n      return;\n    }\n\n    if (this.#linkState !== Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED) {\n      createLinkIcon.style.display = 'none';\n      return;\n    }\n\n    createLinkIcon.style.left = `${this.#coordinateFrom.x + this.#fromEntryDimensions.width}px`;\n    createLinkIcon.style.top = `${this.#coordinateFrom.y}px`;\n  }\n\n  #startCreatingConnection(): void {\n    this.#linkState = Trace.Types.File.EntriesLinkState.PENDING_TO_EVENT;\n    this.dispatchEvent(new EntryLinkStartCreating());\n  }\n\n  /*\n  The entries link overlay is an arrow connecting 2 entries.\n  The Entries are drawn by Flamechart and this Overlay is only drawing the arrow between them.\n   _________\n  |__entry__|\\\n              \\\n               \\          <-- arrow connecting the sides of entries drawn by this overlay\n                \\   ________________\n                 ➘ |_____entry______|\n  */\n  #render(): void {\n    const arrowColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-text-primary');\n    // clang-format off\n    render(\n        html`\n          <style>${entriesLinkOverlayStyles}</style>\n          <svg class=\"connectorContainer\" width=\"100%\" height=\"100%\" role=\"region\" aria-label=${i18nString(UIStrings.diagram)}>\n            <defs>\n              <linearGradient\n                id=\"fromVisibleLineGradient\"\n                x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop\n                  offset=\"0%\"\n                  stop-color=${arrowColor}\n                  stop-opacity=\"1\" />\n                <stop\n                  offset=\"${this.#partlyVisibleConnectionLinePercentage()}%\"\n                  stop-color=${arrowColor}\n                  stop-opacity=\"0\" />\n              </linearGradient>\n\n              <linearGradient\n                id=\"toVisibleLineGradient\"\n                x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop\n                  offset=\"${100 - this.#partlyVisibleConnectionLinePercentage()}%\"\n                  stop-color=${arrowColor}\n                  stop-opacity=\"0\" />\n                <stop\n                  offset=\"100%\"\n                  stop-color=${arrowColor}\n                  stop-opacity=\"1\" />\n              </linearGradient>\n              <marker\n                id=\"arrow\"\n                orient=\"auto\"\n                markerWidth=\"3\"\n                markerHeight=\"4\"\n                fill-opacity=\"1\"\n                refX=\"4\"\n                refY=\"2\"\n                visibility=${this.#entryToVisible || !this.#toEntryDimensions ? 'visible' : 'hidden'}>\n                <path d=\"M0,0 V4 L4,2 Z\" fill=${arrowColor} />\n              </marker>\n            </defs>\n            <line\n              marker-end=\"url(#arrow)\"\n              stroke-dasharray=${!this.#fromEntryIsSource || !this.#toEntryIsSource ? DASHED_STROKE_AMOUNT : 'none'}\n              visibility=${!this.#entryFromVisible && !this.#entryToVisible ? 'hidden' : 'visible'}\n              />\n            <circle class=\"entryFromConnector\" fill=\"none\" stroke=${arrowColor} stroke-width=${CONNECTOR_CIRCLE_STROKE_WIDTH} r=${CONNECTOR_CIRCLE_RADIUS} />\n            <circle class=\"entryToConnector\" fill=\"none\" stroke=${arrowColor} stroke-width=${CONNECTOR_CIRCLE_STROKE_WIDTH} r=${CONNECTOR_CIRCLE_RADIUS} />\n          </svg>\n          <div class=\"entry-wrapper from-highlight-wrapper ${this.#fromEntryIsSource ? '' : 'entry-is-not-source'}\"></div>\n          <div class=\"entry-wrapper to-highlight-wrapper ${this.#toEntryIsSource ? '' : 'entry-is-not-source'}\"></div>\n          <div class=\"create-link-box ${this.#linkState ? 'visible' : 'hidden'}\">\n            <devtools-icon\n              class='create-link-icon'\n              jslog=${VisualLogging.action('timeline.annotations.create-entry-link').track({click: true})}\n              @click=${this.#startCreatingConnection}\n              name='arrow-right-circle'>\n            </devtools-icon>\n          </div>\n        `,\n        this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nconst CONNECTOR_CIRCLE_RADIUS = 2;\nconst CONNECTOR_CIRCLE_STROKE_WIDTH = 1;\n\n// Defines the gap in the border when we are drawing a dashed outline.\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\nconst DASHED_STROKE_AMOUNT = 4;\n\ncustomElements.define('devtools-entries-link-overlay', EntriesLinkOverlay);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-entries-link-overlay': EntriesLinkOverlay;\n  }\n}\n"]}