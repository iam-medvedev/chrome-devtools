{"version":3,"file":"EntriesLinkOverlay.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/overlays/components/EntriesLinkOverlay.ts"],"names":[],"mappings":"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","sourcesContent":["\n// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as ComponentHelpers from '../../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\n\nimport styles from './entriesLinkOverlay.css.js';\n\nexport class EntriesLinkOverlay extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-entries-link-overlay`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n  #coordinateFrom: {x: number, y: number};\n  #fromEntryDimentions: {width: number, height: number};\n  #coordinateTo: {x: number, y: number};\n  #toEntryDimentions: {width: number, height: number}|null = null;\n  #connectorLineContainer: SVGAElement|null = null;\n  #connector: SVGLineElement|null = null;\n  #entryFromWrapper: SVGLineElement|null = null;\n  #entryToWrapper: SVGLineElement|null = null;\n  #entryFromVisible: boolean = true;\n  #entryToVisible: boolean = true;\n\n  constructor(initialFromEntryCoordinateAndDimentions: {x: number, y: number, width: number, height: number}) {\n    super();\n    this.#render();\n    this.#coordinateFrom = {x: initialFromEntryCoordinateAndDimentions.x, y: initialFromEntryCoordinateAndDimentions.y};\n    this.#fromEntryDimentions = {\n      width: initialFromEntryCoordinateAndDimentions.width,\n      height: initialFromEntryCoordinateAndDimentions.height,\n    };\n    this.#coordinateTo = {x: initialFromEntryCoordinateAndDimentions.x, y: initialFromEntryCoordinateAndDimentions.y};\n    this.#connectorLineContainer = this.#shadow.querySelector<SVGAElement>('.connectorContainer') ?? null;\n    this.#connector = this.#connectorLineContainer?.querySelector('line') ?? null;\n    this.#entryFromWrapper = this.#connectorLineContainer?.querySelector('.entryFromWrapper') ?? null;\n    this.#entryToWrapper = this.#connectorLineContainer?.querySelector('.entryToWrapper') ?? null;\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [styles];\n  }\n\n  set fromEntryCoordinateAndDimentions(fromEntryParams: {x: number, y: number, length: number, height: number}) {\n    this.#coordinateFrom = {x: fromEntryParams.x, y: fromEntryParams.y};\n    this.#fromEntryDimentions = {width: fromEntryParams.length, height: fromEntryParams.height};\n    this.#redrawConnectionArrow();\n  }\n\n  set entriesVisibility(entriesVisibility: {fromEntryVisibility: boolean, toEntryVisibility: boolean}) {\n    this.#entryFromVisible = entriesVisibility.fromEntryVisibility;\n    this.#entryToVisible = entriesVisibility.toEntryVisibility;\n  }\n\n  // The arrow might be pointing either to an entry or an empty space.\n  // If the dimentions are not passed, it is pointing at an empty space.\n  set toEntryCoordinateAndDimentions(toEntryParams: {x: number, y: number, length?: number, height?: number}) {\n    this.#coordinateTo = {x: toEntryParams.x, y: toEntryParams.y};\n    if (toEntryParams.length && toEntryParams.height) {\n      this.#toEntryDimentions = {width: toEntryParams.length, height: toEntryParams.height};\n    } else {\n      this.#toEntryDimentions = null;\n    }\n\n    this.#redrawConnectionArrow();\n  }\n\n  #redrawConnectionArrow(): void {\n    if (!this.#connector || !this.#entryFromWrapper || !this.#entryToWrapper) {\n      console.error('`connector` element is missing.');\n      return;\n    }\n\n    // If the entry is visible, the entry arrow starts from the end on the X axis and middle of the Y axis.\n    // If not, draw it to the same y point without the entry height offset and the box around the entry.\n    // This way it will be attached to the track edge.\n    if (this.#entryFromVisible) {\n      const halfEntryHeight = this.#fromEntryDimentions.height / 2;\n      this.#connector.setAttribute('x1', (this.#coordinateFrom.x + this.#fromEntryDimentions.width).toString());\n      this.#connector.setAttribute('y1', (this.#coordinateFrom.y + Number(halfEntryHeight)).toString());\n\n      this.#entryFromWrapper.setAttribute('visibility', 'visible');\n      this.#entryFromWrapper.setAttribute('x', this.#coordinateFrom.x.toString());\n      this.#entryFromWrapper.setAttribute('y', this.#coordinateFrom.y.toString());\n      this.#entryFromWrapper.setAttribute('width', this.#fromEntryDimentions.width.toString());\n      this.#entryFromWrapper.setAttribute('height', this.#fromEntryDimentions.height.toString());\n    } else {\n      this.#connector.setAttribute('x1', (this.#coordinateFrom.x + this.#fromEntryDimentions.width).toString());\n      this.#connector.setAttribute('y1', this.#coordinateFrom.y.toString());\n      this.#entryFromWrapper.setAttribute('visibility', 'hidden');\n    }\n\n    // If the arrow is pointing to the entry, point it to the middle of the entry and draw a box around the entry.\n    // If the arrow is pointing to an entry, but it is not visible, the coordinates are for the edge of the track\n    // and we don't need the half entry height offset.\n    // Otherwise, thhe arrow is following the mouse so we assign it to the provided coordinates.\n    if (this.#toEntryDimentions) {\n      if (this.#entryToVisible) {\n        this.#entryToWrapper.setAttribute('visibility', 'visible');\n        this.#entryToWrapper.setAttribute('x', this.#coordinateTo.x.toString());\n        this.#entryToWrapper.setAttribute('y', this.#coordinateTo.y.toString());\n        this.#entryToWrapper.setAttribute('width', this.#toEntryDimentions.width.toString());\n        this.#entryToWrapper.setAttribute('height', this.#toEntryDimentions.height.toString());\n\n        this.#connector.setAttribute('x2', this.#coordinateTo.x.toString());\n        this.#connector.setAttribute('y2', (this.#coordinateTo.y + this.#toEntryDimentions.height / 2).toString());\n\n      } else {\n        this.#entryToWrapper.setAttribute('visibility', 'hidden');\n        this.#connector.setAttribute('x2', this.#coordinateTo.x.toString());\n        this.#connector.setAttribute('y2', (this.#coordinateTo.y).toString());\n      }\n\n    } else {\n      this.#entryToWrapper.setAttribute('visibility', 'hidden');\n      this.#connector.setAttribute('x2', this.#coordinateTo.x.toString());\n      this.#connector.setAttribute('y2', this.#coordinateTo.y.toString());\n    }\n\n    this.#connector.setAttribute('stroke', 'black');\n    this.#connector.setAttribute('stroke-width', '2');\n\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  /*\n  The entries link overlay is an arrow connecting 2 entries.\n  The Entries are drawn by Flamechart and this Overlay is only drawing the arrow between them.\n   _________\n  |__entry__|\\\n              \\\n               \\          <-- arrow connecting the sides of entries drawn by this overlay\n                \\   ________________\n                 ➘ |_____entry______|\n  */\n  #render(): void {\n    // clang-format off\n    LitHtml.render(\n        LitHtml.html`\n          <svg class=\"connectorContainer\" width=\"100%\" height=\"100%\">\n            <defs>\n              <marker\n                id='arrow'\n                orient=\"auto\"\n                markerWidth='3'\n                markerHeight='4'\n                refX='4'\n                refY='2'>\n                <path d='M0,0 V4 L4,2 Z' fill=\"black\" />\n              </marker>\n            </defs>\n            <line marker-end='url(#arrow)'/>\n            <rect\n              class=\"entryFromWrapper\" fill=\"none\" stroke=\"black\" />\n            <rect\n              class=\"entryToWrapper\" fill=\"none\" stroke=\"black\" />\n          </svg>\n        `,\n        this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-entries-link-overlay', EntriesLinkOverlay);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-entries-link-overlay': EntriesLinkOverlay;\n  }\n}\n"]}