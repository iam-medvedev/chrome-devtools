{"version":3,"file":"EntriesLinkOverlay.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/overlays/components/EntriesLinkOverlay.ts"],"names":[],"mappings":"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","sourcesContent":["\n// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as ComponentHelpers from '../../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\n\nimport styles from './entriesLinkOverlay.css.js';\n\nexport class EntriesLinkOverlay extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-entries-link-overlay`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n  #coordinateFrom: {x: number, y: number};\n  #coordinateTo: {x: number, y: number};\n  #connectorLineContainer: SVGAElement|null = null;\n  #connector: SVGLineElement|null = null;\n  // Value indicating if `coordinateTo` is pointing to an entry or an empty space.\n  // It is used to check if the arrow needs to follow a mouse or is snap to an entry.\n  entryToExists: boolean = false;\n\n  constructor(initialEntryCoordinate: {x: number, y: number}) {\n    super();\n    this.#render();\n    this.#coordinateFrom = initialEntryCoordinate;\n    this.#coordinateTo = initialEntryCoordinate;\n    this.#connectorLineContainer = this.#shadow.querySelector<SVGAElement>('.connectorContainer') ?? null;\n    this.#connector = this.#connectorLineContainer?.querySelector('line') ?? null;\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [styles];\n  }\n\n  set coordinateFrom(coordinateFrom: {x: number, y: number}) {\n    this.#coordinateFrom = coordinateFrom;\n    this.#redrawConnectionArrow();\n  }\n\n  set coordinateTo(coordinateTo: {x: number, y: number}) {\n    this.#coordinateTo = coordinateTo;\n    this.#redrawConnectionArrow();\n  }\n\n  #redrawConnectionArrow(): void {\n    if (!this.#connector) {\n      console.error('`connector` element is missing.');\n      return;\n    }\n\n    this.#connector.setAttribute('x1', this.#coordinateFrom.x.toString());\n    this.#connector.setAttribute('y1', this.#coordinateFrom.y.toString());\n\n    this.#connector.setAttribute('x2', this.#coordinateTo.x.toString());\n    this.#connector.setAttribute('y2', this.#coordinateTo.y.toString());\n\n    this.#connector.setAttribute('stroke', 'black');\n    this.#connector.setAttribute('stroke-width', '2');\n\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  /*\n  The entries link overlay is an arrow connecting 2 entries.\n  The Entries are drawn by Flamechart and this Overlay is only drawing the arrow between them.\n   _________\n  |__entry__|\\\n              \\\n               \\          <-- arrow connecting the sides of entries drawn by this overlay\n                \\   ________________\n                 âž˜ |_____entry______|\n  */\n  #render(): void {\n    // clang-format off\n    LitHtml.render(\n        LitHtml.html`\n          <svg class=\"connectorContainer\" width=\"100%\" height=\"100%\">\n            <defs>\n              <marker\n                id='arrow'\n                orient=\"auto\"\n                markerWidth='3'\n                markerHeight='4'\n                refX='4'\n                refY='2'>\n                <path d='M0,0 V4 L4,2 Z' fill=\"black\" />\n              </marker>\n            </defs>\n            <line marker-end='url(#arrow)'/>\n          </svg>\n        `,\n        this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-entries-link-overlay', EntriesLinkOverlay);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-entries-link-overlay': EntriesLinkOverlay;\n  }\n}\n"]}