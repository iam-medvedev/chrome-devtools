{"version":3,"file":"EntriesLinkOverlay.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/overlays/components/EntriesLinkOverlay.ts"],"names":[],"mappings":"AACA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAC7B,OAAO,KAAK,OAAO,MAAM,qCAAqC,CAAC;AAE/D,OAAO,MAAM,MAAM,6BAA6B,CAAC;AAEjD,MAAM,OAAO,kBAAmB,SAAQ,WAAW;IACjD,MAAM,CAAU,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,+BAA+B,CAAC;IACnE,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAErD;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED;;;;;;;;;MASE;IACF,OAAO;QACL,mBAAmB;QACnB,OAAO,CAAC,MAAM,CACV,OAAO,CAAC,IAAI,CAAA;;;eAGL,EACP,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAChC,kBAAkB;IACpB,CAAC;;AAGH,cAAc,CAAC,MAAM,CAAC,+BAA+B,EAAE,kBAAkB,CAAC,CAAC","sourcesContent":["\n// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\n\nimport styles from './entriesLinkOverlay.css.js';\n\nexport class EntriesLinkOverlay extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-entries-link-overlay`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  constructor() {\n    super();\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [styles];\n  }\n\n  /*\n  The entries link overlay is an arrow connecting 2 entries.\n  The Entries are drawn by Flamechart and this Overlay is only drawing the arrow between them.\n  _________\n  |__entry__|\\\n              \\\n               \\          <-- arrow connecting the sides of entries drawn by this overlay\n                \\   ________________\n                 âž˜ |_____entry______|\n  */\n  #render(): void {\n    // clang-format off\n    LitHtml.render(\n        LitHtml.html`\n        <svg>\n          <line/>\n        </svg>`,\n        this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-entries-link-overlay', EntriesLinkOverlay);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-entries-link-overlay': EntriesLinkOverlay;\n  }\n}\n"]}