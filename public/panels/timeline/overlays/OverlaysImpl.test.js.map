{"version":3,"file":"OverlaysImpl.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/overlays/OverlaysImpl.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TraceEngine from '../../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {\n  makeInstantEvent,\n  MockFlameChartDelegate,\n  setupIgnoreListManagerEnvironment,\n} from '../../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as PerfUI from '../../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Timeline from '../timeline.js';\n\nimport * as Components from './components/components.js';\nimport * as Overlays from './overlays.js';\n\nconst coordinator = RenderCoordinator.RenderCoordinator.RenderCoordinator.instance();\n\n/**\n * The Overlays expects to be provided with both the main and network charts\n * and data providers. This function creates all of those and optionally sets\n * the trace data for the providers if it is provided.\n */\nfunction createCharts(traceData?: TraceEngine.Handlers.Types.TraceParseData): Overlays.Overlays.TimelineCharts {\n  const mainProvider = new Timeline.TimelineFlameChartDataProvider.TimelineFlameChartDataProvider();\n  const networkProvider = new Timeline.TimelineFlameChartNetworkDataProvider.TimelineFlameChartNetworkDataProvider();\n\n  const delegate = new MockFlameChartDelegate();\n  const mainChart = new PerfUI.FlameChart.FlameChart(mainProvider, delegate);\n  const networkChart = new PerfUI.FlameChart.FlameChart(networkProvider, delegate);\n\n  if (traceData) {\n    mainProvider.setModel(traceData);\n    networkProvider.setModel(traceData);\n\n    // Force the charts to render. Normally the TimelineFlameChartView would do\n    // this, but we aren't creating one for these tests.\n    mainChart.update();\n    networkChart.update();\n  }\n\n  return {\n    mainProvider,\n    mainChart,\n    networkProvider,\n    networkChart,\n  };\n}\n\ndescribeWithEnvironment('Overlays', () => {\n  beforeEach(() => {\n    setupIgnoreListManagerEnvironment();\n  });\n\n  it('can calculate the x position of an event based on the dimensions and its timestamp', async () => {\n    const container = document.createElement('div');\n    const overlays = new Overlays.Overlays.Overlays({\n      container,\n      charts: createCharts(),\n    });\n\n    // Set up the dimensions so it is 100px wide\n    overlays.updateChartDimensions('main', {\n      widthPixels: 100,\n      heightPixels: 50,\n      scrollOffsetPixels: 0,\n      allGroupsCollapsed: false,\n    });\n    overlays.updateChartDimensions('network', {\n      widthPixels: 100,\n      heightPixels: 50,\n      scrollOffsetPixels: 0,\n      allGroupsCollapsed: false,\n    });\n\n    const windowMin = TraceEngine.Types.Timing.MicroSeconds(0);\n    const windowMax = TraceEngine.Types.Timing.MicroSeconds(100);\n    // Set the visible window to be 0-100 microseconds\n    overlays.updateVisibleWindow(TraceEngine.Helpers.Timing.traceWindowFromMicroSeconds(windowMin, windowMax));\n\n    // Now set an event to be at 50 microseconds.\n    const event = makeInstantEvent('test-event', 50);\n\n    const xPosition = overlays.xPixelForEventOnChart(event);\n    assert.strictEqual(xPosition, 50);\n  });\n\n  it('can calculate the y position of a main chart event', async function() {\n    const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n    const charts = createCharts(traceData);\n\n    const container = document.createElement('div');\n    const overlays = new Overlays.Overlays.Overlays({\n      container,\n      charts,\n    });\n\n    overlays.updateChartDimensions('main', {\n      widthPixels: 1000,\n      heightPixels: 500,\n      scrollOffsetPixels: 0,\n      allGroupsCollapsed: false,\n    });\n    overlays.updateChartDimensions('network', {\n      widthPixels: 1000,\n      heightPixels: 200,\n      scrollOffsetPixels: 0,\n      allGroupsCollapsed: false,\n    });\n\n    // Set the visible window to be the entire trace.\n    overlays.updateVisibleWindow(traceData.Meta.traceBounds);\n\n    // Find an event on the main chart that is not a frame (you cannot add overlays to frames)\n    const event = charts.mainProvider.eventByIndex?.(50);\n    assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n    assert.isOk(event);\n    const yPixel = overlays.yPixelForEventOnChart(event);\n    // The Y offset for the main chart is 233px, but we add 208px on (200px for the\n    // network chart, and 8px for the re-size handle) giving us the expected\n    // 441px.\n    assert.strictEqual(yPixel, 441);\n  });\n\n  it('can adjust the y position of a main chart event when the network track is collapsed', async function() {\n    const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n    const charts = createCharts(traceData);\n\n    const container = document.createElement('div');\n    const overlays = new Overlays.Overlays.Overlays({\n      container,\n      charts,\n    });\n\n    overlays.updateChartDimensions('main', {\n      widthPixels: 1000,\n      heightPixels: 500,\n      scrollOffsetPixels: 0,\n      allGroupsCollapsed: false,\n    });\n    overlays.updateChartDimensions('network', {\n      widthPixels: 1000,\n      heightPixels: 34,\n      scrollOffsetPixels: 0,\n      // Make the network track collapsed\n      allGroupsCollapsed: true,\n    });\n\n    // Set the visible window to be the entire trace.\n    overlays.updateVisibleWindow(traceData.Meta.traceBounds);\n\n    // Find an event on the main chart that is not a frame (you cannot add overlays to frames)\n    const event = charts.mainProvider.eventByIndex?.(50);\n    assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n    assert.isOk(event);\n    const yPixel = overlays.yPixelForEventOnChart(event);\n    // The Y offset for the main chart is 233px, but we add 34px on (the height\n    // of the collapsed network chart, with no resizer bar as it is hidden when\n    // the network track is collapsed). This gives us 233+34 = 267.\n    assert.strictEqual(yPixel, 267);\n  });\n\n  it('can calculate the y position of a network chart event', async function() {\n    const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n    const charts = createCharts(traceData);\n\n    const container = document.createElement('div');\n    const overlays = new Overlays.Overlays.Overlays({\n      container,\n      charts,\n    });\n\n    overlays.updateChartDimensions('main', {\n      widthPixels: 1000,\n      heightPixels: 500,\n      scrollOffsetPixels: 0,\n      allGroupsCollapsed: false,\n    });\n    overlays.updateChartDimensions('network', {\n      widthPixels: 1000,\n      heightPixels: 200,\n      scrollOffsetPixels: 0,\n      allGroupsCollapsed: false,\n    });\n\n    // Set the visible window to be the entire trace.\n    overlays.updateVisibleWindow(traceData.Meta.traceBounds);\n\n    // Fake the level being visible: because we don't fully render the chart we\n    // need to fake this for this test.\n    sinon.stub(charts.networkChart, 'levelIsVisible').callsFake(() => true);\n\n    // Find an event on the network chart\n    const event = charts.networkProvider.eventByIndex?.(0);\n    assert.isOk(event);\n    const yPixel = overlays.yPixelForEventOnChart(event);\n    // This event is in the first level, but the first level has some offset\n    // above it to allow for the header row and the row with the timestamps on\n    // it, hence why this value is not 0px.\n    assert.strictEqual(yPixel, 34);\n  });\n\n  describe('rendering overlays', () => {\n    function setupChartWithDimensionsAndAnnotationOverlayListeners(\n        traceData: TraceEngine.Handlers.Types.TraceParseData): {\n      container: HTMLElement,\n      overlays: Overlays.Overlays.Overlays,\n      charts: Overlays.Overlays.TimelineCharts,\n    } {\n      const charts = createCharts(traceData);\n      const container = document.createElement('div');\n      const overlays = new Overlays.Overlays.Overlays({\n        container,\n        charts,\n      });\n\n      const currManager = Timeline.ModificationsManager.ModificationsManager.activeManager();\n      // The Annotations Overlays are added through the ModificationsManager listener\n      currManager?.addEventListener(Timeline.ModificationsManager.AnnotationModifiedEvent.eventName, event => {\n        const {overlay, action} = (event as Timeline.ModificationsManager.AnnotationModifiedEvent);\n        if (action === 'Add') {\n          overlays.add(overlay);\n        }\n        overlays.update();\n      });\n\n      // When an annotation overlay is remomved, this event is dispatched to the Modifications Manager.\n      overlays.addEventListener(Overlays.Overlays.AnnotationOverlayActionEvent.eventName, event => {\n        const {overlay, action} = (event as Overlays.Overlays.AnnotationOverlayActionEvent);\n        if (action === 'Remove') {\n          overlays.remove(overlay);\n        }\n        overlays.update();\n      });\n\n      overlays.updateChartDimensions('main', {\n        widthPixels: 1000,\n        heightPixels: 500,\n        scrollOffsetPixels: 0,\n        allGroupsCollapsed: false,\n      });\n      overlays.updateChartDimensions('network', {\n        widthPixels: 1000,\n        heightPixels: 200,\n        scrollOffsetPixels: 0,\n        allGroupsCollapsed: false,\n      });\n\n      // Set the visible window to be the entire trace.\n      overlays.updateVisibleWindow(traceData.Meta.traceBounds);\n      return {overlays, container, charts};\n    }\n\n    it('can render an entry selected overlay', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container, charts} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const event = charts.mainProvider.eventByIndex?.(50);\n      assert.isOk(event);\n      assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n\n      overlays.add({\n        type: 'ENTRY_SELECTED',\n        entry: event,\n      });\n      overlays.update();\n\n      // Ensure that the overlay was created.\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-ENTRY_SELECTED');\n      assert.isOk(overlayDOM);\n    });\n\n    it('does not render an ENTRY_OUTLINE if the entry is also the ENTRY_SELECTED entry', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container, charts} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const event = charts.mainProvider.eventByIndex?.(50);\n      assert.isOk(event);\n      overlays.add({\n        type: 'ENTRY_OUTLINE',\n        entry: event,\n        outlineReason: 'ERROR',\n      });\n      overlays.update();\n\n      const outlineVisible =\n          container.querySelector<HTMLElement>('.overlay-type-ENTRY_OUTLINE')?.style.visibility === 'visible';\n      assert.isTrue(outlineVisible, 'The ENTRY_OUTLINE should be visible');\n\n      // Now make a selected entry too\n      overlays.add({\n        type: 'ENTRY_SELECTED',\n        entry: event,\n      });\n      overlays.update();\n      const outlineNowHidden =\n          container.querySelector<HTMLElement>('.overlay-type-ENTRY_OUTLINE')?.style.visibility === 'hidden';\n      assert.isTrue(outlineNowHidden, 'The ENTRY_OUTLINE should be hidden');\n    });\n\n    it('only ever renders a single selected overlay', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container, charts} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const event1 = charts.mainProvider.eventByIndex?.(50);\n      const event2 = charts.mainProvider.eventByIndex?.(51);\n      assert.isOk(event1);\n      assert.isOk(event2);\n\n      overlays.add({\n        type: 'ENTRY_SELECTED',\n        entry: event1,\n      });\n      overlays.update();\n      overlays.add({\n        type: 'ENTRY_SELECTED',\n        entry: event2,\n      });\n      overlays.update();\n\n      // There should only be one of these\n      const entrySelectedOverlays = container.querySelectorAll<HTMLElement>('.overlay-type-ENTRY_SELECTED');\n      assert.lengthOf(entrySelectedOverlays, 1);\n    });\n\n    it('can render entry label overlay', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container, charts} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const event = charts.mainProvider.eventByIndex?.(50);\n      assert.isOk(event);\n      assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n\n      overlays.add({\n        type: 'ENTRY_LABEL',\n        entry: event,\n        label: 'entry label',\n      });\n      overlays.update();\n\n      // Ensure that the overlay was created.\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-ENTRY_LABEL');\n      assert.isOk(overlayDOM);\n    });\n\n    it('only renders one CURSOR_TIMESTAMP_MARKER as it is a singleton', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      overlays.add({\n        type: 'CURSOR_TIMESTAMP_MARKER',\n        timestamp: traceData.Meta.traceBounds.min,\n      });\n      overlays.add({\n        type: 'CURSOR_TIMESTAMP_MARKER',\n        timestamp: traceData.Meta.traceBounds.max,\n      });\n      overlays.update();\n      assert.lengthOf(container.children, 1);\n    });\n\n    it('can render the label for entry label overlay', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container, charts} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const event = charts.mainProvider.eventByIndex?.(50);\n      assert.isOk(event);\n      assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n\n      overlays.add({\n        type: 'ENTRY_LABEL',\n        entry: event,\n        label: 'entry label',\n      });\n      overlays.update();\n\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-ENTRY_LABEL');\n      assert.isOk(overlayDOM);\n      const component = overlayDOM?.querySelector('devtools-entry-label-overlay');\n      assert.isOk(component?.shadowRoot);\n\n      const elementsWrapper = component.shadowRoot.querySelector<HTMLElement>('.label-parts-wrapper');\n      assert.isOk(elementsWrapper);\n\n      const label = elementsWrapper.querySelector<HTMLElement>('.label-box');\n      assert.strictEqual(label?.innerText, 'entry label');\n    });\n\n    it('Inputting `Enter`into label overlay makes it non-editable', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container, charts} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const event = charts.mainProvider.eventByIndex?.(50);\n      assert.isOk(event);\n      assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n\n      // Create an entry label overlay\n      overlays.add({\n        type: 'ENTRY_LABEL',\n        entry: event,\n        label: 'label',\n      });\n      overlays.update();\n\n      // Ensure that the overlay was created.\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-ENTRY_LABEL');\n      assert.isOk(overlayDOM);\n\n      const component = overlayDOM?.querySelector('devtools-entry-label-overlay');\n      assert.isOk(component?.shadowRoot);\n      component.connectedCallback();\n      const elementsWrapper = component.shadowRoot.querySelector<HTMLElement>('.label-parts-wrapper');\n      assert.isOk(elementsWrapper);\n\n      const label = elementsWrapper.querySelector<HTMLElement>('.label-box');\n      assert.isOk(label);\n\n      // Double click on the label box to make it editable and focus on it\n      label.dispatchEvent(new FocusEvent('dblclick', {bubbles: true}));\n\n      // Ensure the label content is editable\n      assert.isTrue(label.isContentEditable);\n\n      // Press `Enter` to make the lable not editable\n      label.dispatchEvent(new KeyboardEvent('keydown', {key: 'Enter', cancelable: true, bubbles: true}));\n\n      // Ensure the label content is not editable\n      assert.isFalse(label.isContentEditable);\n    });\n\n    it('Removes empty label if it is empty when navigated away from (removed focused from)', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container, charts} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const event = charts.mainProvider.eventByIndex?.(50);\n      assert.isOk(event);\n\n      // Create an entry label overlay\n      Timeline.ModificationsManager.ModificationsManager.activeManager()?.createAnnotation({\n        type: 'ENTRY_LABEL',\n        entry: event as TraceEngine.Types.TraceEvents.TraceEventData,\n        label: '',\n      });\n      overlays.update();\n\n      // Ensure that the overlay was created.\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-ENTRY_LABEL');\n      assert.isOk(overlayDOM);\n      const component = overlayDOM?.querySelector('devtools-entry-label-overlay');\n      assert.isOk(component?.shadowRoot);\n\n      component.connectedCallback();\n      const elementsWrapper = component.shadowRoot.querySelector<HTMLElement>('.label-parts-wrapper');\n      assert.isOk(elementsWrapper);\n\n      const label = elementsWrapper.querySelector<HTMLElement>('.label-box');\n      assert.isOk(label);\n\n      // Double click on the label box to make it editable and focus on it\n      label.dispatchEvent(new FocusEvent('dblclick', {bubbles: true}));\n\n      // Ensure that the entry has 1 overlay\n      assert.strictEqual(overlays.overlaysForEntry(event).length, 1);\n\n      // Change the content to not editable by changing the element blur like when clicking outside of it.\n      // The label is empty since no initial value was passed into it and no characters were entered.\n      label.dispatchEvent(new FocusEvent('blur', {bubbles: true}));\n\n      // Ensure that the entry overlay has been removed because it was saved empty\n      assert.strictEqual(overlays.overlaysForEntry(event).length, 0);\n    });\n\n    it('Update label overlay when the label changes', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container, charts} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const event = charts.mainProvider.eventByIndex?.(50);\n      assert.isOk(event);\n\n      // Create an entry label overlay\n      Timeline.ModificationsManager.ModificationsManager.activeManager()?.createAnnotation({\n        type: 'ENTRY_LABEL',\n        entry: event as TraceEngine.Types.TraceEvents.TraceEventData,\n        label: '',\n      });\n      overlays.update();\n\n      // Ensure that the overlay was created.\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-ENTRY_LABEL');\n      assert.isOk(overlayDOM);\n      const component = overlayDOM?.querySelector('devtools-entry-label-overlay');\n      assert.isOk(component?.shadowRoot);\n\n      component.connectedCallback();\n      component.dispatchEvent(new Components.EntryLabelOverlay.EntryLabelChangeEvent('new label'));\n\n      const updatedOverlay = overlays.overlaysForEntry(event)[0] as Overlays.Overlays.EntryLabel;\n      assert.isOk(updatedOverlay);\n      // Make sure the label was updated in the Overlay Object\n      assert.strictEqual(updatedOverlay.label, 'new label');\n    });\n\n    it('can render an overlay for a time range', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      overlays.add({\n        type: 'TIME_RANGE',\n        label: '',\n        showDuration: true,\n        // Make this overlay the entire span of the trace\n        bounds: traceData.Meta.traceBounds,\n      });\n      overlays.update();\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-TIME_RANGE');\n      assert.isOk(overlayDOM);\n    });\n\n    it('can update a time range overlay with new bounds', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const rangeOverlay = overlays.add({\n        type: 'TIME_RANGE',\n        label: '',\n        showDuration: true,\n        // Make this overlay the entire span of the trace\n        bounds: traceData.Meta.traceBounds,\n      });\n      overlays.update();\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-TIME_RANGE');\n      assert.isOk(overlayDOM);\n      const firstWidth = window.parseInt(overlayDOM.style.width);\n\n      // change the bounds so the new min is +1second of time.\n      const newBounds = TraceEngine.Helpers.Timing.traceWindowFromMicroSeconds(\n          TraceEngine.Types.Timing.MicroSeconds(rangeOverlay.bounds.min + (1_000 * 1_000)),\n          rangeOverlay.bounds.max,\n      );\n      overlays.updateExisting(rangeOverlay, {bounds: newBounds});\n      overlays.update();\n      const secondWidth = window.parseInt(overlayDOM.style.width);\n      // The new time range is smaller so the DOM element should have less width\n      assert.isTrue(secondWidth < firstWidth);\n    });\n\n    it('renders the overlay for a selected layout shift entry correctly', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'cls-single-frame.json.gz');\n      const {overlays, container} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const layoutShiftEvent = traceData.LayoutShifts.clusters.at(0)?.events.at(0);\n      if (!layoutShiftEvent) {\n        throw new Error('layoutShiftEvent was unexpectedly undefined');\n      }\n      overlays.add({\n        type: 'ENTRY_SELECTED',\n        entry: layoutShiftEvent,\n      });\n      const boundsRange = TraceEngine.Types.Timing.MicroSeconds(20_000);\n      const boundsMax = TraceEngine.Types.Timing.MicroSeconds(layoutShiftEvent.ts + boundsRange);\n      overlays.updateVisibleWindow({min: layoutShiftEvent.ts, max: boundsMax, range: boundsRange});\n      overlays.update();\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-ENTRY_SELECTED');\n      assert.isOk(overlayDOM);\n      assert.strictEqual(window.parseInt(overlayDOM.style.width), 250);\n    });\n\n    it('renders the duration and label for a time range overlay', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      overlays.add({\n        type: 'TIME_RANGE',\n        label: '',\n        showDuration: true,\n        // Make this overlay the entire span of the trace\n        bounds: traceData.Meta.traceBounds,\n      });\n      overlays.update();\n      await coordinator.done();\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-TIME_RANGE');\n      const component = overlayDOM?.querySelector('devtools-time-range-overlay');\n      assert.isOk(component?.shadowRoot);\n      const label = component.shadowRoot.querySelector<HTMLElement>('.label');\n      assert.isOk(label);\n      const duration = label.querySelector<HTMLElement>('.duration');\n      assert.isOk(duration);\n      assert.strictEqual(duration?.innerText, '1.26\\xA0s');\n    });\n\n    it('can remove an overlay', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container, charts} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const event = charts.mainProvider.eventByIndex?.(50);\n      assert.isOk(event);\n      assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n\n      const selectedOverlay = overlays.add({\n        type: 'ENTRY_SELECTED',\n        entry: event,\n      });\n      overlays.update();\n      assert.lengthOf(container.children, 1);\n\n      overlays.remove(selectedOverlay);\n      overlays.update();\n      assert.lengthOf(container.children, 0);\n    });\n\n    it('can render an entry selected overlay for a frame', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      const {overlays, container, charts} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const timelineFrame = charts.mainProvider.eventByIndex?.(5);\n      assert.isOk(timelineFrame);\n      assert.instanceOf(timelineFrame, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n\n      overlays.add({\n        type: 'ENTRY_SELECTED',\n        entry: timelineFrame,\n      });\n      overlays.update();\n\n      // Ensure that the overlay was created.\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-ENTRY_SELECTED');\n      assert.isOk(overlayDOM);\n    });\n\n    it('can return a list of overlays for an entry', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, charts} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const event = charts.mainProvider.eventByIndex?.(50);\n      assert.isOk(event);\n      assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n\n      overlays.add({\n        type: 'ENTRY_SELECTED',\n        entry: event,\n      });\n\n      assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n      const existingOverlays = overlays.overlaysForEntry(event);\n      assert.deepEqual(existingOverlays, [{\n                         type: 'ENTRY_SELECTED',\n                         entry: event,\n                       }]);\n    });\n\n    it('can delete overlays and remove them from the DOM', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {container, overlays, charts} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const event = charts.mainProvider.eventByIndex?.(50);\n      assert.isOk(event);\n\n      assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n      overlays.add({\n        type: 'ENTRY_SELECTED',\n        entry: event,\n      });\n      overlays.update();\n\n      assert.lengthOf(container.children, 1);\n      const removedCount = overlays.removeOverlaysOfType('ENTRY_SELECTED');\n      assert.strictEqual(removedCount, 1);\n      assert.lengthOf(container.children, 0);\n    });\n\n    it('the label entry field is editable when created', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const charts = createCharts(traceData);\n      const event = charts.mainProvider.eventByIndex?.(50);\n      assert.isOk(event);\n\n      // Since ENTRY_LABEL is AnnotationOverlay, create it through ModificationsManager\n      Timeline.ModificationsManager.ModificationsManager.activeManager()?.createAnnotation({\n        type: 'ENTRY_LABEL',\n        label: '',\n        entry: event as TraceEngine.Types.TraceEvents.TraceEventData,\n      });\n\n      overlays.update();\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-ENTRY_LABEL');\n      assert.isOk(overlayDOM);\n      const component = overlayDOM?.querySelector('devtools-entry-label-overlay');\n      assert.isOk(component?.shadowRoot);\n\n      const elementsWrapper = component.shadowRoot.querySelector<HTMLElement>('.label-parts-wrapper');\n      const labelBox = elementsWrapper?.querySelector<HTMLElement>('.label-box') as HTMLSpanElement;\n\n      // The label input box should be editable after it is created and before anything else happened\n      assert.isTrue(labelBox.isContentEditable);\n    });\n\n    it('the label entry field is in focus after being double clicked on', async function() {\n      const {traceData} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container} = setupChartWithDimensionsAndAnnotationOverlayListeners(traceData);\n      const charts = createCharts(traceData);\n      const event = charts.mainProvider.eventByIndex?.(50);\n      assert.isOk(event);\n\n      // Since ENTRY_LABEL is AnnotationOverlay, create it through ModificationsManager\n      Timeline.ModificationsManager.ModificationsManager.activeManager()?.createAnnotation({\n        type: 'ENTRY_LABEL',\n        label: '',\n        entry: event as TraceEngine.Types.TraceEvents.TraceEventData,\n      });\n\n      overlays.update();\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-ENTRY_LABEL');\n      assert.isOk(overlayDOM);\n      const component = overlayDOM?.querySelector('devtools-entry-label-overlay');\n      assert.isOk(component?.shadowRoot);\n\n      const elementsWrapper = component.shadowRoot.querySelector<HTMLElement>('.label-parts-wrapper');\n      assert.isOk(elementsWrapper);\n      const labelBox = elementsWrapper.querySelector<HTMLElement>('.label-box') as HTMLSpanElement;\n\n      // The label input box should be editable after it is created and before anything else happened\n      assert.isTrue(labelBox.isContentEditable);\n\n      // Make the content to editable by changing the element blur like when clicking outside of it.\n      // When that happens, the content should be set to not editable.\n      labelBox.dispatchEvent(new FocusEvent('blur', {bubbles: true}));\n      assert.isFalse(labelBox.isContentEditable);\n\n      // Double click on the label to make it editable again\n      labelBox.dispatchEvent(new FocusEvent('dblclick', {bubbles: true}));\n      assert.isTrue(labelBox.isContentEditable);\n    });\n  });\n});\n"]}