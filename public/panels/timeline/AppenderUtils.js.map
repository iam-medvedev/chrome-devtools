{"version":3,"file":"AppenderUtils.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/AppenderUtils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport type * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport {type VisualLoggingTrackName} from './CompatibilityTracksAppender.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in the Performance panel to show how long was spent in a particular part of the code.\n   * The first placeholder is the total time taken for this node and all children, the second is the self time\n   * (time taken in this node, without children included).\n   *@example {10ms} PH1\n   *@example {10ms} PH2\n   */\n  sSelfS: '{PH1} (self {PH2})',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/AppenderUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/** An array, indexed by entry levels, where the values are the last timestamp (typically `endTime`) of data within that level. */\nexport type LastTimestampByLevel = number[];\n\n/**\n * Builds the style for the group.\n * Each group has a predefined style and a reference to the definition of the legacy track (which should be removed in the future).\n * @param extra the customized fields with value.\n * @returns the built GroupStyle\n */\nexport function buildGroupStyle(extra?: Partial<PerfUI.FlameChart.GroupStyle>): PerfUI.FlameChart.GroupStyle {\n  const defaultGroupStyle: PerfUI.FlameChart.GroupStyle = {\n    padding: 4,\n    height: 17,\n    collapsible: true,\n    color: ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-on-surface'),\n    backgroundColor: ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container'),\n    nestingLevel: 0,\n    shareHeaderLine: true,\n  };\n  return Object.assign(defaultGroupStyle, extra);\n}\n\n/**\n * Builds the header corresponding to the track. A header is added in the shape of a group in the flame chart data.\n * @param jslogContext the text that will be set as the logging context\n *                          for the Visual Elements logging framework. Pass\n *                          `null` to not set a context and consequently\n *                          cause this group not to be logged.\n * @param startLevel the flame chart level at which the track header is appended.\n * @param name the display name of the track.\n * @param style the GroupStyle for the track header.\n * @param selectable if the track is selectable.\n * @param expanded if the track is expanded.\n * @param track this is set only when `selectable` is true, and it is used for selecting a track in the details panel.\n * @param showStackContextMenu whether menu with options to merge/collapse entries in track is shown.\n * @returns the group that built from the give data\n */\nexport function buildTrackHeader(\n    jslogContext: VisualLoggingTrackName|null, startLevel: number, name: string, style: PerfUI.FlameChart.GroupStyle,\n    selectable: boolean, expanded?: boolean, showStackContextMenu?: boolean,\n    legends?: PerfUI.FlameChart.Legend[]): PerfUI.FlameChart.Group {\n  const group: PerfUI.FlameChart.Group = {\n    startLevel,\n    name: name as Common.UIString.LocalizedString,\n    style,\n    selectable,\n    expanded,\n    showStackContextMenu,\n    legends,\n  };\n  if (jslogContext !== null) {\n    group.jslogContext = jslogContext;\n  }\n  return group;\n}\n\n/**\n * Returns the time info shown when an event is hovered in the timeline.\n * @param totalTime the total time of the hovered event.\n * @param selfTime the self time of the hovered event.\n * @returns the formatted time string for highlightedEntryInfo\n */\nexport function getFormattedTime(\n    totalTime?: TraceEngine.Types.Timing.MicroSeconds, selfTime?: TraceEngine.Types.Timing.MicroSeconds): string {\n  const formattedTotalTime =\n      TraceEngine.Helpers.Timing.microSecondsToMilliseconds((totalTime || 0) as TraceEngine.Types.Timing.MicroSeconds);\n  if (formattedTotalTime === TraceEngine.Types.Timing.MilliSeconds(0)) {\n    return '';\n  }\n\n  const formattedSelfTime =\n      TraceEngine.Helpers.Timing.microSecondsToMilliseconds((selfTime || 0) as TraceEngine.Types.Timing.MicroSeconds);\n  const minSelfTimeSignificance = 1e-6;\n  const formattedTime = Math.abs(formattedTotalTime - formattedSelfTime) > minSelfTimeSignificance &&\n          formattedSelfTime > minSelfTimeSignificance ?\n      i18nString(UIStrings.sSelfS, {\n        PH1: i18n.TimeUtilities.millisToString(formattedTotalTime, true),\n        PH2: i18n.TimeUtilities.millisToString(formattedSelfTime, true),\n      }) :\n      i18n.TimeUtilities.millisToString(formattedTotalTime, true);\n  return formattedTime;\n}\n\n/**\n * Returns the first level that is available for an event.\n */\nexport function getEventLevel(\n    event: TraceEngine.Types.TraceEvents.TraceEventData, lastTimestampByLevel: LastTimestampByLevel): number {\n  let level = 0;\n  const startTime = event.ts;\n  const endTime = event.ts + (event.dur || 0);\n  // Look vertically for the first level where this event fits,\n  // that is, where it wouldn't overlap with other events.\n  while (level < lastTimestampByLevel.length && startTime < lastTimestampByLevel[level]) {\n    // For each event, we look each level from top, and see if start timestamp of this\n    // event is used by current level already. If yes, we will go to check next level.\n    ++level;\n  }\n  lastTimestampByLevel[level] = endTime;\n  return level;\n}\n\nexport function addDecorationToEvent(\n    timelineData: PerfUI.FlameChart.FlameChartTimelineData, eventIndex: number,\n    decoration: PerfUI.FlameChart.FlameChartDecoration): void {\n  const decorationsForEvent = timelineData.entryDecorations[eventIndex] || [];\n  decorationsForEvent.push(decoration);\n  timelineData.entryDecorations[eventIndex] = decorationsForEvent;\n}\n"]}