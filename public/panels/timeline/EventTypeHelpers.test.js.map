{"version":3,"file":"EventTypeHelpers.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/EventTypeHelpers.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport {\n  defaultTraceEvent,\n  type FakeEventPayload,\n  makeFakeEventPayload,\n  makeFakeSDKEventFromPayload,\n} from '../../testing/TraceHelpers.js';\n\ndescribe('EventTypeHelpers', () => {\n  describe('timesForEventInMilliseconds', () => {\n    it('supports SDK events', () => {\n      const payload: FakeEventPayload = {\n        name: 'test-event',\n        ph: TraceEngine.Types.TraceEvents.Phase.BEGIN,\n        categories: ['testing'],\n        ts: 10_000,\n        dur: 5_000,\n      };\n      const event = makeFakeSDKEventFromPayload(payload);\n      event.selfTime = 5;\n      const times = TraceEngine.Legacy.timesForEventInMilliseconds(event);\n      assert.deepEqual(times, {\n        startTime: TraceEngine.Types.Timing.MilliSeconds(10),\n        endTime: TraceEngine.Types.Timing.MilliSeconds(15),\n        duration: TraceEngine.Types.Timing.MilliSeconds(5),\n        selfTime: TraceEngine.Types.Timing.MilliSeconds(5),\n      });\n    });\n\n    it('sets the duration to 0 if it is not present for SDK events', () => {\n      const payload: FakeEventPayload = {\n        name: 'test-event',\n        ph: TraceEngine.Types.TraceEvents.Phase.BEGIN,\n        categories: ['testing'],\n        ts: 10_000,\n      };\n      const event = makeFakeSDKEventFromPayload(payload);\n      const times = TraceEngine.Legacy.timesForEventInMilliseconds(event);\n      assert.deepEqual(times, {\n        startTime: TraceEngine.Types.Timing.MilliSeconds(10),\n        endTime: TraceEngine.Types.Timing.MilliSeconds(10),\n        duration: TraceEngine.Types.Timing.MilliSeconds(0),\n        selfTime: TraceEngine.Types.Timing.MilliSeconds(0),\n      });\n    });\n\n    it('supports new engine events in timesForEventInMilliseconds', () => {\n      const event: TraceEngine.Types.TraceEvents.TraceEventData = {\n        ...defaultTraceEvent,\n        name: 'test-event',\n        ph: TraceEngine.Types.TraceEvents.Phase.BEGIN,\n        ts: TraceEngine.Types.Timing.MicroSeconds(10_000),\n        dur: TraceEngine.Types.Timing.MicroSeconds(5_000),\n      };\n\n      const times = TraceEngine.Legacy.timesForEventInMilliseconds(event);\n      assert.deepEqual(times, {\n        startTime: TraceEngine.Types.Timing.MilliSeconds(10),\n        endTime: TraceEngine.Types.Timing.MilliSeconds(15),\n        duration: TraceEngine.Types.Timing.MilliSeconds(5),\n        selfTime: TraceEngine.Types.Timing.MilliSeconds(5),\n      });\n    });\n    it('sets the duration to 0 if it is not present', () => {\n      const event: TraceEngine.Types.TraceEvents.TraceEventData = {\n        ...defaultTraceEvent,\n        name: 'test-event',\n        ph: TraceEngine.Types.TraceEvents.Phase.INSTANT,\n        ts: TraceEngine.Types.Timing.MicroSeconds(10_000),\n      };\n\n      const times = TraceEngine.Legacy.timesForEventInMilliseconds(event);\n      assert.deepEqual(times, {\n        startTime: TraceEngine.Types.Timing.MilliSeconds(10),\n        endTime: TraceEngine.Types.Timing.MilliSeconds(10),\n        duration: TraceEngine.Types.Timing.MilliSeconds(0),\n        selfTime: TraceEngine.Types.Timing.MilliSeconds(0),\n      });\n    });\n  });\n  describe('eventHasCategory', () => {\n    it('supports SDK events', () => {\n      const payload: FakeEventPayload = {\n        name: 'test-event',\n        ph: TraceEngine.Types.TraceEvents.Phase.BEGIN,\n        categories: ['testing1', 'testing2'],\n        ts: 10_000,\n        dur: 5_000,\n      };\n      const event = makeFakeSDKEventFromPayload(payload);\n      const hasCategory = TraceEngine.Legacy.eventHasCategory(event, 'testing2');\n      const notHasCategory = TraceEngine.Legacy.eventHasCategory(event, 'not-testing');\n      assert.isTrue(hasCategory);\n      assert.isFalse(notHasCategory);\n    });\n\n    it('supports TraceEventData events', () => {\n      const event: TraceEngine.Types.TraceEvents.TraceEventData = {\n        ...defaultTraceEvent,\n        name: 'test-event',\n        cat: 'disabled-by-default-devtools.timeline,blink.console',\n      };\n      const hasCategory = TraceEngine.Legacy.eventHasCategory(event, 'blink.console');\n      const notHasCategory = TraceEngine.Legacy.eventHasCategory(event, 'timeline');\n      assert.isTrue(hasCategory);\n      assert.isFalse(notHasCategory);\n    });\n  });\n  describe('phaseForEvent', () => {\n    it('supports SDK events', () => {\n      const payload: FakeEventPayload = {\n        name: 'test-event',\n        ph: TraceEngine.Types.TraceEvents.Phase.BEGIN,\n        categories: ['testing1', 'testing2'],\n        ts: 10_000,\n        dur: 5_000,\n      };\n      const event = makeFakeSDKEventFromPayload(payload);\n      const phase = TraceEngine.Legacy.phaseForEvent(event);\n      assert.strictEqual(phase, TraceEngine.Types.TraceEvents.Phase.BEGIN);\n    });\n\n    it('supports TraceEventData events', () => {\n      const event: TraceEngine.Types.TraceEvents.TraceEventData = {\n        ...defaultTraceEvent,\n        ph: TraceEngine.Types.TraceEvents.Phase.BEGIN,\n      };\n      const phase = TraceEngine.Legacy.phaseForEvent(event);\n      assert.strictEqual(phase, TraceEngine.Types.TraceEvents.Phase.BEGIN);\n    });\n  });\n  describe('threadIDForEvent', () => {\n    it('supports SDK events', () => {\n      const fakePayload: FakeEventPayload = {\n        name: 'test-event',\n        ph: TraceEngine.Types.TraceEvents.Phase.BEGIN,\n        categories: ['testing1', 'testing2'],\n        ts: 10_000,\n        dur: 5_000,\n      };\n      const payload = makeFakeEventPayload(fakePayload);\n      const tracingModel = new TraceEngine.Legacy.TracingModel();\n      const process = new TraceEngine.Legacy.Process(tracingModel, 1);\n      const thread = new TraceEngine.Legacy.Thread(process, 1);\n      const event = TraceEngine.Legacy.PayloadEvent.fromPayload(payload, thread);\n      const threadID = TraceEngine.Legacy.threadIDForEvent(event);\n      assert.strictEqual(threadID, 1);\n    });\n\n    it('supports TraceEventData events', () => {\n      const event: TraceEngine.Types.TraceEvents.TraceEventData = {\n        ...defaultTraceEvent,\n        ph: TraceEngine.Types.TraceEvents.Phase.BEGIN,\n        tid: 2 as TraceEngine.Types.TraceEvents.ThreadID,\n      };\n      const phase = TraceEngine.Legacy.threadIDForEvent(event);\n      assert.strictEqual(phase, 2 as TraceEngine.Types.TraceEvents.ThreadID);\n    });\n  });\n});\n"]}