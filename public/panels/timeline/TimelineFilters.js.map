{"version":3,"file":"TimelineFilters.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineFilters.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,KAAK,MAAM,6BAA6B,CAAC;AAErD,OAAO,EAAC,eAAe,EAAC,MAAM,sBAAsB,CAAC;AAErD,MAAM,OAAO,MAAO,SAAQ,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW;IAC9D,2BAA2B,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE1D,wBAAwB,CAAC,KAA+B;QACtD,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;IAC3C,CAAC;IAED,MAAM,CAAC,KAA+B;QACpC,MAAM,EAAC,QAAQ,EAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QACxE,OAAO,QAAQ,IAAI,IAAI,CAAC,2BAA2B,CAAC;IACtD,CAAC;CACF;AAED,MAAM,OAAO,QAAS,SAAQ,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW;IAChE,MAAM,CAAC,KAA+B;QACpC,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC5D,CAAC;CACF;AAED,MAAM,OAAO,cAAe,SAAQ,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW;IACtE,OAAO,CAAe;IACtB,YAAY,MAAe;QACzB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,SAAS,CAAC,MAAmB;QAC3B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,KAA+B,EAAE,WAA8C;QACpF,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,eAAe,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAChG,CAAC;CACF","sourcesContent":["// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../models/trace/trace.js';\n\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\n\nexport class IsLong extends Trace.Extras.TraceFilter.TraceFilter {\n  #minimumRecordDurationMilli = Trace.Types.Timing.Milli(0);\n\n  setMinimumRecordDuration(value: Trace.Types.Timing.Milli): void {\n    this.#minimumRecordDurationMilli = value;\n  }\n\n  accept(event: Trace.Types.Events.Event): boolean {\n    const {duration} = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n    return duration >= this.#minimumRecordDurationMilli;\n  }\n}\n\nexport class Category extends Trace.Extras.TraceFilter.TraceFilter {\n  accept(event: Trace.Types.Events.Event): boolean {\n    return !TimelineUIUtils.eventStyle(event).category.hidden;\n  }\n}\n\nexport class TimelineRegExp extends Trace.Extras.TraceFilter.TraceFilter {\n  #regExp!: RegExp|null;\n  constructor(regExp?: RegExp) {\n    super();\n    this.setRegExp(regExp || null);\n  }\n\n  setRegExp(regExp: RegExp|null): void {\n    this.#regExp = regExp;\n  }\n\n  regExp(): RegExp|null {\n    return this.#regExp;\n  }\n\n  accept(event: Trace.Types.Events.Event, handlerData?: Trace.Handlers.Types.HandlerData): boolean {\n    return !this.#regExp || TimelineUIUtils.testContentMatching(event, this.#regExp, handlerData);\n  }\n}\n"]}