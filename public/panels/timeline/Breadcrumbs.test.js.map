{"version":3,"file":"Breadcrumbs.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/Breadcrumbs.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\n\nimport * as TimelineComponents from './components/components.js';\n\nfunction nestedBreadcrumbs(): {\n  initialBreadcrumb: Trace.Types.File.Breadcrumb,\n  breadcrumb1: Trace.Types.File.Breadcrumb,\n  breadcrumb2: Trace.Types.File.Breadcrumb,\n} {\n  const initialTraceWindow: Trace.Types.Timing.TraceWindowMicro = {\n    min: Trace.Types.Timing.Micro(1000),\n    max: Trace.Types.Timing.Micro(10000),\n    range: Trace.Types.Timing.Micro(9000),\n  };\n\n  const traceWindow1: Trace.Types.Timing.TraceWindowMicro = {\n    min: Trace.Types.Timing.Micro(3000),\n    max: Trace.Types.Timing.Micro(9000),\n    range: Trace.Types.Timing.Micro(6000),\n  };\n\n  const traceWindow2: Trace.Types.Timing.TraceWindowMicro = {\n    min: Trace.Types.Timing.Micro(4000),\n    max: Trace.Types.Timing.Micro(6000),\n    range: Trace.Types.Timing.Micro(2000),\n  };\n\n  const breadcrumb2: Trace.Types.File.Breadcrumb = {\n    window: traceWindow2,\n    child: null,\n  };\n\n  const breadcrumb1: Trace.Types.File.Breadcrumb = {\n    window: traceWindow1,\n    child: breadcrumb2,\n  };\n\n  const initialBreadcrumb: Trace.Types.File.Breadcrumb = {\n    window: initialTraceWindow,\n    child: breadcrumb1,\n  };\n\n  return {\n    initialBreadcrumb,\n    breadcrumb1,\n    breadcrumb2,\n  };\n}\n\ndescribe('Timeline breadcrumbs', () => {\n  it('can create breadcrumbs', () => {\n    const {initialBreadcrumb, breadcrumb1, breadcrumb2} = nestedBreadcrumbs();\n\n    TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialBreadcrumb.window);\n    const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialBreadcrumb.window);\n\n    crumbs.add(breadcrumb1.window);\n    crumbs.add(breadcrumb2.window);\n\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb),\n        [initialBreadcrumb, breadcrumb1, breadcrumb2]);\n\n    assert.deepEqual(crumbs.activeBreadcrumb, breadcrumb2);\n  });\n\n  it('can activate breadcrumbs', () => {\n    const {initialBreadcrumb, breadcrumb1, breadcrumb2} = nestedBreadcrumbs();\n\n    TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialBreadcrumb.window);\n    const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialBreadcrumb.window);\n    crumbs.add(breadcrumb1.window);\n    crumbs.add(breadcrumb2.window);\n\n    // Last added breadcrumb should be active\n    assert.deepEqual(crumbs.activeBreadcrumb, breadcrumb2);\n\n    // Make sure breadcrumb 1 can be actived\n    crumbs.setActiveBreadcrumb(breadcrumb1, {\n      removeChildBreadcrumbs: false,\n      updateVisibleWindow: true,\n    });\n    assert.deepEqual(crumbs.activeBreadcrumb, breadcrumb1);\n\n    // Make sure initial breadcrumb can be actived\n    crumbs.setActiveBreadcrumb(initialBreadcrumb, {\n      removeChildBreadcrumbs: false,\n      updateVisibleWindow: true,\n    });\n    assert.deepEqual(crumbs.activeBreadcrumb, initialBreadcrumb);\n\n    // No breadcrumb were removed\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb),\n        [initialBreadcrumb, breadcrumb1, breadcrumb2]);\n  });\n\n  it('can overwrite child breadcrumbs when a new one is added', () => {\n    const {initialBreadcrumb, breadcrumb1, breadcrumb2} = nestedBreadcrumbs();\n\n    TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialBreadcrumb.window);\n\n    const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialBreadcrumb.window);\n    crumbs.add(breadcrumb1.window);\n    crumbs.add(breadcrumb2.window);\n\n    // Last added breadcrumb should be active\n    assert.deepEqual(crumbs.activeBreadcrumb, breadcrumb2);\n\n    // Currently, breadcrumbs structure is:\n    // initialBreadcrumb -> breadcrumb1 -> breadcrumb2(activated)\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb),\n        [initialBreadcrumb, breadcrumb1, breadcrumb2]);\n\n    // In this test we want to check if the children of the activated breadcrumb will be overwrritten if a new one is added\n    // Make the initial breadcrumb active:\n    // initialBreadcrumb(activated) -> breadcrumb1 -> breadcrumb2\n    crumbs.setActiveBreadcrumb(initialBreadcrumb, {\n      removeChildBreadcrumbs: false,\n      updateVisibleWindow: true,\n    });\n    assert.deepEqual(crumbs.activeBreadcrumb, initialBreadcrumb);\n\n    // Add a new breadcrumb\n    const traceWindow4: Trace.Types.Timing.TraceWindowMicro = {\n      min: Trace.Types.Timing.Micro(2000),\n      max: Trace.Types.Timing.Micro(5000),\n      range: Trace.Types.Timing.Micro(3000),\n    };\n\n    const breadcrumb4: Trace.Types.File.Breadcrumb = {\n      window: traceWindow4,\n      child: null,\n    };\n\n    crumbs.add(traceWindow4);\n\n    // Breadcrumbs should look like this:\n    // initialBreadcrumb -> breadcrumb4\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb), [initialBreadcrumb, breadcrumb4]);\n    assert.deepEqual(crumbs.activeBreadcrumb, breadcrumb4);\n  });\n\n  it('can remove breadcrumbs', () => {\n    const {initialBreadcrumb, breadcrumb1, breadcrumb2} = nestedBreadcrumbs();\n\n    TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialBreadcrumb.window);\n\n    const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialBreadcrumb.window);\n    crumbs.add(breadcrumb1.window);\n    crumbs.add(breadcrumb2.window);\n\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb),\n        [initialBreadcrumb, breadcrumb1, breadcrumb2]);\n    assert.deepEqual(crumbs.activeBreadcrumb, breadcrumb2);\n    crumbs.setActiveBreadcrumb(breadcrumb1, {\n      removeChildBreadcrumbs: true,\n      updateVisibleWindow: true,\n    });\n\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb), [initialBreadcrumb, breadcrumb1]);\n    assert.deepEqual(crumbs.activeBreadcrumb, breadcrumb1);\n  });\n\n  it('can not create a breadcrumb equal to the parent breadcrumb', () => {\n    const {initialBreadcrumb} = nestedBreadcrumbs();\n\n    assert.throws(() => {\n      TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialBreadcrumb.window);\n\n      const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialBreadcrumb.window);\n\n      const equalTraceWindow: Trace.Types.Timing.TraceWindowMicro = {\n        min: initialBreadcrumb.window.min,\n        max: initialBreadcrumb.window.max,\n        range: initialBreadcrumb.window.range,\n      };\n\n      crumbs.add(equalTraceWindow);\n    }, 'Can not add a breadcrumb that is equal to or is outside of the parent breadcrumb TimeWindow');\n  });\n\n  it('can create breadcrumbs with equal start or end as the parent breadcrumb', () => {\n    const initialTraceWindow: Trace.Types.Timing.TraceWindowMicro = {\n      min: Trace.Types.Timing.Micro(1000),\n      max: Trace.Types.Timing.Micro(10000),\n      range: Trace.Types.Timing.Micro(9000),\n    };\n    TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialTraceWindow);\n\n    const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialTraceWindow);\n\n    const traceWindow1: Trace.Types.Timing.TraceWindowMicro = {\n      min: Trace.Types.Timing.Micro(1000),\n      max: Trace.Types.Timing.Micro(9000),\n      range: Trace.Types.Timing.Micro(8000),\n    };\n\n    const traceWindow2: Trace.Types.Timing.TraceWindowMicro = {\n      min: Trace.Types.Timing.Micro(3000),\n      max: Trace.Types.Timing.Micro(9000),\n      range: Trace.Types.Timing.Micro(6000),\n    };\n\n    crumbs.add(traceWindow1);\n    crumbs.add(traceWindow2);\n\n    const breadcrumb2: Trace.Types.File.Breadcrumb = {\n      window: traceWindow2,\n      child: null,\n    };\n\n    const breadcrumb1: Trace.Types.File.Breadcrumb = {\n      window: traceWindow1,\n      child: breadcrumb2,\n    };\n\n    const initialBreadcrumb: Trace.Types.File.Breadcrumb = {\n      window: initialTraceWindow,\n      child: breadcrumb1,\n    };\n\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb),\n        [initialBreadcrumb, breadcrumb1, breadcrumb2]);\n    assert.deepEqual(crumbs.activeBreadcrumb, breadcrumb2);\n  });\n\n  it('correctly sets the last breadrumb and trace bound window when a new initial breadcrumb is provided', () => {\n    const {initialBreadcrumb, breadcrumb1, breadcrumb2} = nestedBreadcrumbs();\n    TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialBreadcrumb.window);\n\n    const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialBreadcrumb.window);\n    crumbs.setInitialBreadcrumbFromLoadedModifications(initialBreadcrumb);\n\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb),\n        [initialBreadcrumb, breadcrumb1, breadcrumb2]);\n    assert.deepEqual(crumbs.activeBreadcrumb, breadcrumb2);\n\n    // Make sure the trace bounds were correctly set to the last breadcrumb bounds\n    assert.deepEqual(\n        TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.minimapTraceBounds, breadcrumb2.window);\n\n    // Make sure the TimelineVisibleWindow was correctly set to the last breadcrumb bounds\n    assert.deepEqual(\n        TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.minimapTraceBounds, breadcrumb2.window);\n  });\n\n  it('it will not update the trace window when activating a breadcrumb if the option is set to false', () => {\n    const {initialBreadcrumb, breadcrumb1, breadcrumb2} = nestedBreadcrumbs();\n    TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialBreadcrumb.window);\n    const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialBreadcrumb.window);\n    crumbs.setInitialBreadcrumbFromLoadedModifications(initialBreadcrumb);\n    // Make sure the trace bounds were correctly set to the last breadcrumb bounds\n    assert.deepEqual(\n        TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.minimapTraceBounds, breadcrumb2.window);\n\n    // Now activate breadcrumb1, but tell it not to update the bounds\n    crumbs.setActiveBreadcrumb(breadcrumb1, {removeChildBreadcrumbs: false, updateVisibleWindow: false});\n\n    // The visible window is still breadcrumb2.\n    assert.deepEqual(\n        TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.timelineTraceWindow, breadcrumb2.window);\n\n    // Now activate breadcrumb1, but ask it to update the bounds this time\n    crumbs.setActiveBreadcrumb(breadcrumb1, {removeChildBreadcrumbs: false, updateVisibleWindow: true});\n    // Now the window has changed.\n    assert.deepEqual(\n        TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.timelineTraceWindow, breadcrumb1.window);\n  });\n});\n"]}