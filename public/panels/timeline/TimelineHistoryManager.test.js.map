{"version":3,"file":"TimelineHistoryManager.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineHistoryManager.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  describeWithEnvironment,\n  registerNoopActions,\n} from '../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Timeline from './timeline.js';\n\ndescribeWithEnvironment('TimelineHistoryManager', function() {\n  let historyManager: Timeline.TimelineHistoryManager.TimelineHistoryManager;\n  beforeEach(() => {\n    registerNoopActions(['timeline.show-history']);\n    historyManager = new Timeline.TimelineHistoryManager.TimelineHistoryManager();\n  });\n\n  afterEach(() => {\n    UI.ActionRegistry.ActionRegistry.reset();\n  });\n\n  it('shows the dropdown including a landing page link', async function() {\n    assert.strictEqual(historyManager.button().element.innerText, 'Live metrics');\n\n    const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    historyManager.addRecording(\n        {\n          data: {\n            parsedTraceIndex: 1,\n            type: 'TRACE_INDEX',\n          },\n          filmStripForPreview: null,\n          parsedTrace,\n          metadata,\n        },\n    );\n\n    assert.strictEqual(historyManager.button().element.innerText, 'web.dev #1');\n\n    const showPromise = historyManager.showHistoryDropDown();\n    const glassPane = document.querySelector('div[data-devtools-glass-pane]');\n    const dropdown =\n        glassPane?.shadowRoot?.querySelector('.widget')?.shadowRoot?.querySelector<HTMLElement>('.drop-down');\n    assert.isOk(dropdown);\n\n    const menuItemText = Array.from(dropdown.querySelectorAll<HTMLDivElement>('[role=\"menuitem\"]'), elem => {\n      return elem.innerText.replaceAll('\\n', '');\n    });\n    assert.deepEqual(menuItemText, ['Live metrics', 'web.dev1× slowdown, No throttling']);\n\n    // Cancel the dropdown, which also resolves the show() promise, meaning we\n    // don't leak it into other tests.\n    historyManager.cancelIfShowing();\n    await showPromise;\n  });\n\n  it('uses Node specific landing page title', async function() {\n    historyManager = new Timeline.TimelineHistoryManager.TimelineHistoryManager(undefined, true);\n    assert.strictEqual(historyManager.button().element.innerText, 'New recording');\n\n    const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    historyManager.addRecording(\n        {\n          data: {\n            parsedTraceIndex: 1,\n            type: 'TRACE_INDEX',\n          },\n          filmStripForPreview: null,\n          parsedTrace,\n          metadata,\n        },\n    );\n\n    const showPromise = historyManager.showHistoryDropDown();\n    const glassPane = document.querySelector('div[data-devtools-glass-pane]');\n    const dropdown =\n        glassPane?.shadowRoot?.querySelector('.widget')?.shadowRoot?.querySelector<HTMLElement>('.drop-down');\n    assert.isOk(dropdown);\n\n    const menuItemText = Array.from(dropdown.querySelectorAll<HTMLDivElement>('[role=\"menuitem\"]'), elem => {\n      return elem.innerText.replaceAll('\\n', '');\n    });\n    assert.deepEqual(menuItemText, ['New recording', 'web.dev1× slowdown, No throttling']);\n\n    // Cancel the dropdown, which also resolves the show() promise, meaning we\n    // don't leak it into other tests.\n    historyManager.cancelIfShowing();\n    await showPromise;\n  });\n\n  it('can select from multiple parsed data objects', async function() {\n    // Add two parsed data objects to the history manager.\n    const {parsedTrace: trace1Data, metadata: metadata1} =\n        await TraceLoader.traceEngine(this, 'slow-interaction-button-click.json.gz');\n    historyManager.addRecording(\n        {\n          data: {\n            parsedTraceIndex: 1,\n            type: 'TRACE_INDEX',\n          },\n          filmStripForPreview: null,\n          parsedTrace: trace1Data,\n          metadata: metadata1,\n        },\n    );\n\n    const {parsedTrace: trace2Data, metadata: metadata2} =\n        await TraceLoader.traceEngine(this, 'slow-interaction-keydown.json.gz');\n    historyManager.addRecording({\n      data: {\n        parsedTraceIndex: 2,\n        type: 'TRACE_INDEX',\n      },\n      filmStripForPreview: null,\n      parsedTrace: trace2Data,\n      metadata: metadata2,\n    });\n\n    // Make sure the correct model is returned when\n    // using the history manager to navigate between trace files..\n    const previousRecording = historyManager.navigate(1);\n    assert.strictEqual(previousRecording?.parsedTraceIndex, 1);\n\n    const nextRecording = historyManager.navigate(-1);\n    assert.strictEqual(nextRecording?.parsedTraceIndex, 2);\n  });\n});\n"]}