{"version":3,"file":"ModificationsManager.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/ModificationsManager.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\n\nimport * as Timeline from './timeline.js';\n\ndescribeWithEnvironment('ModificationsManager', () => {\n  it('applies modifications when present in a trace file', async function() {\n    await TraceLoader.traceEngine(null, 'web-dev-modifications.json.gz');\n    const modificationsManager = Timeline.ModificationsManager.ModificationsManager.activeManager();\n    if (!modificationsManager) {\n      throw new Error('Modifications manager does not exist.');\n    }\n    const entriesFilter = modificationsManager.getEntriesFilter();\n    assert.lengthOf(entriesFilter.expandableEntries(), 1);\n    assert.lengthOf(entriesFilter.invisibleEntries(), 108);\n    assert.deepEqual(modificationsManager.getTimelineBreadcrumbs().initialBreadcrumb, {\n      window: {min: 1020034823047, max: 1020036087961, range: 1264914},\n      child: {window: {min: 1020034823047, max: 1020035228006.5569, range: 404959.5568847656}, child: null},\n    } as Trace.Types.File.Breadcrumb);\n    // Make sure the saved Label Annotation is applied\n    const labelAnnotation = modificationsManager.getAnnotations()[0];\n    const label = (labelAnnotation.type === 'ENTRY_LABEL') ? labelAnnotation.label : '';\n    assert.deepEqual(labelAnnotation.type, 'ENTRY_LABEL');\n    assert.deepEqual(label, 'Initialize App');\n    // Make sure the saved Range Annotation is applied\n    const timeRangeAnnotation = modificationsManager.getAnnotations()[1];\n    const rangeLabel = (timeRangeAnnotation.type === 'TIME_RANGE') ? timeRangeAnnotation.label : '';\n    assert.deepEqual(modificationsManager.getAnnotations()[1].type, 'TIME_RANGE');\n    assert.deepEqual(rangeLabel, 'Visibility change 1');\n  });\n\n  it('generates a serializable modifications json ', async function() {\n    await TraceLoader.traceEngine(null, 'web-dev-modifications.json.gz');\n    const modificationsManager = Timeline.ModificationsManager.ModificationsManager.activeManager();\n    if (!modificationsManager) {\n      throw new Error('Modifications manager does not exist.');\n    }\n    const entriesFilter = modificationsManager.getEntriesFilter();\n    const modifications = modificationsManager.toJSON();\n    assert.lengthOf(entriesFilter.expandableEntries(), 1);\n    assert.lengthOf(modifications.entriesModifications.expandableEntries, 1);\n    assert.lengthOf(modifications.entriesModifications.hiddenEntries, 108);\n    assert.deepEqual(modifications.initialBreadcrumb, {\n      window: {min: 1020034823047, max: 1020036087961, range: 1264914},\n      child: {window: {min: 1020034823047, max: 1020035228006.5569, range: 404959.5568847656}, child: null},\n    } as Trace.Types.File.Breadcrumb);\n    assert.deepEqual(modifications.annotations.entryLabels, [\n      {entry: 'p-73704-775-2151-457', label: 'Initialize App'},\n    ]);\n    assert.deepEqual(modifications.annotations.labelledTimeRanges, [\n      {\n        bounds: {min: 1020034870460.4769, max: 1020034880507.9258, range: 10047.448852539062},\n        label: 'Visibility change 1',\n      },\n    ]);\n  });\n\n  it('creates annotations and generates correct json for annotations', async function() {\n    const parsedTrace = (await TraceLoader.traceEngine(null, 'web-dev-with-commit.json.gz')).parsedTrace;\n    // Get any entres to create a label and a link with.\n    const entry = parsedTrace.Renderer.allTraceEntries[0];\n    const entry2 = parsedTrace.Renderer.allTraceEntries[1];\n\n    const modificationsManager = Timeline.ModificationsManager.ModificationsManager.activeManager();\n    assert.isOk(modificationsManager);\n\n    modificationsManager.createAnnotation({\n      type: 'ENTRY_LABEL',\n      entry,\n      label: 'entry label',\n    });\n\n    modificationsManager.createAnnotation({\n      type: 'ENTRIES_LINK',\n      state: Trace.Types.File.EntriesLinkState.CONNECTED,\n      entryFrom: entry,\n      entryTo: entry2,\n    });\n\n    modificationsManager.createAnnotation({\n      type: 'TIME_RANGE',\n      bounds: {\n        min: Trace.Types.Timing.Micro(0),\n        max: Trace.Types.Timing.Micro(10),\n        range: Trace.Types.Timing.Micro(10),\n      },\n      label: 'range label',\n    });\n\n    const modifications = modificationsManager.toJSON().annotations;\n    assert.deepEqual(modifications, {\n      entryLabels: [{\n        entry: 'r-38',\n        label: 'entry label',\n      }],\n      labelledTimeRanges: [{\n        bounds: {\n          min: Trace.Types.Timing.Micro(0),\n          max: Trace.Types.Timing.Micro(10),\n          range: Trace.Types.Timing.Micro(10),\n        },\n        label: 'range label',\n      }],\n      linksBetweenEntries: [{\n        entryFrom: 'r-38',\n        entryTo: 'r-39',\n      }],\n    });\n  });\n\n  it('does not add the annotation link between entries into the json saved into metadata if `entryTo` does not exist',\n     async function() {\n       const parsedTrace = (await TraceLoader.traceEngine(null, 'web-dev-with-commit.json.gz')).parsedTrace;\n       // Get any entry to create links with.\n       const entry = parsedTrace.Renderer.allTraceEntries[0];\n       const entry2 = parsedTrace.Renderer.allTraceEntries[1];\n\n       const modificationsManager = Timeline.ModificationsManager.ModificationsManager.activeManager();\n       assert.isOk(modificationsManager);\n\n       modificationsManager.createAnnotation({\n         type: 'ENTRIES_LINK',\n         state: Trace.Types.File.EntriesLinkState.CONNECTED,\n         entryFrom: entry,\n         entryTo: entry2,\n       });\n\n       modificationsManager.createAnnotation({\n         type: 'ENTRIES_LINK',\n         state: Trace.Types.File.EntriesLinkState.PENDING_TO_EVENT,\n         entryFrom: entry2,\n       });\n\n       // Make sure only the link with both 'to' and 'from' entries in in the generated JSON\n       const modifications = modificationsManager.toJSON().annotations;\n       assert.deepEqual(modifications, {\n         entryLabels: [],\n         labelledTimeRanges: [],\n         linksBetweenEntries: [{\n           entryFrom: 'r-38',\n           entryTo: 'r-39',\n         }],\n       });\n     });\n\n  it('correctly identifies if a connection between entries already exists', async function() {\n    const parsedTrace = (await TraceLoader.traceEngine(null, 'web-dev-with-commit.json.gz')).parsedTrace;\n    // Get any entry to create links with.\n    const entry1 = parsedTrace.Renderer.allTraceEntries[0];\n    const entry2 = parsedTrace.Renderer.allTraceEntries[1];\n    const entry3 = parsedTrace.Renderer.allTraceEntries[2];\n\n    const modificationsManager = Timeline.ModificationsManager.ModificationsManager.activeManager();\n    assert.isOk(modificationsManager);\n\n    // Create a connection between entry 1 and entry 2\n    modificationsManager.createAnnotation({\n      type: 'ENTRIES_LINK',\n      state: Trace.Types.File.EntriesLinkState.CONNECTED,\n      entryFrom: entry1,\n      entryTo: entry2,\n    });\n\n    // Chech if a connection between entries 1 and 3 exists\n    const existsBetween1And3 = modificationsManager.linkAnnotationBetweenEntriesExists(entry1, entry3);\n    // Make sure the link does not exists\n    assert.isFalse(existsBetween1And3);\n\n    // Chech if a connection between entries 1 and 2 exists\n    const existsBetween1And2 = modificationsManager.linkAnnotationBetweenEntriesExists(entry1, entry2);\n    // Make sure the link exists\n    assert.isTrue(existsBetween1And2);\n\n    // Chech if a connection between entries 2 and 1 exists. It should since the order of entries does not matter.\n    const existsBetween2And1 = modificationsManager.linkAnnotationBetweenEntriesExists(entry1, entry2);\n    // Make sure the link exists\n    assert.isTrue(existsBetween2And1);\n  });\n\n  it('deletes time ranges with an empty label from the annotations list', async function() {\n    await TraceLoader.traceEngine(null, 'web-dev-with-commit.json.gz');\n    const modificationsManager = Timeline.ModificationsManager.ModificationsManager.activeManager();\n    assert.isOk(modificationsManager);\n\n    modificationsManager.createAnnotation({\n      type: 'TIME_RANGE',\n      bounds: {\n        min: Trace.Types.Timing.Micro(0),\n        max: Trace.Types.Timing.Micro(10),\n        range: Trace.Types.Timing.Micro(10),\n      },\n      label: 'label',\n    });\n\n    // Create time range with empty label that shoud be removed\n    modificationsManager.createAnnotation({\n      type: 'TIME_RANGE',\n      bounds: {\n        min: Trace.Types.Timing.Micro(3),\n        max: Trace.Types.Timing.Micro(10),\n        range: Trace.Types.Timing.Micro(7),\n      },\n      label: '',\n    });\n\n    // Create time range with empty label that shoud be removed\n    modificationsManager.createAnnotation({\n      type: 'TIME_RANGE',\n      bounds: {\n        min: Trace.Types.Timing.Micro(5),\n        max: Trace.Types.Timing.Micro(10),\n        range: Trace.Types.Timing.Micro(5),\n      },\n      label: '',\n    });\n\n    modificationsManager.deleteEmptyRangeAnnotations();\n    const modifications = modificationsManager.toJSON().annotations;\n\n    // Make sure that the annotations with an empty label were deleted\n    assert.deepEqual(modifications.labelledTimeRanges, [{\n                       bounds: {\n                         min: Trace.Types.Timing.Micro(0),\n                         max: Trace.Types.Timing.Micro(10),\n                         range: Trace.Types.Timing.Micro(10),\n                       },\n                       label: 'label',\n                     }]);\n  });\n\n  it('correctly gets all annotations associated with an entry', async function() {\n    const parsedTrace = (await TraceLoader.traceEngine(null, 'web-dev-with-commit.json.gz')).parsedTrace;\n    const modificationsManager = Timeline.ModificationsManager.ModificationsManager.activeManager();\n    assert.isOk(modificationsManager);\n\n    // Get any entry to create annotations with.\n    const entryToFindAnnotationsFor = parsedTrace.Renderer.allTraceEntries[0];\n    const entry2 = parsedTrace.Renderer.allTraceEntries[1];\n    const entry3 = parsedTrace.Renderer.allTraceEntries[2];\n\n    // Create a connection between entry we are looking for annotations for and another entry.\n    // This link should be a part of associated with the entry annotations.\n    modificationsManager.createAnnotation({\n      type: 'ENTRIES_LINK',\n      state: Trace.Types.File.EntriesLinkState.CONNECTED,\n      entryFrom: entry2,\n      entryTo: entryToFindAnnotationsFor,\n    });\n\n    // Create a link between random entries\n    modificationsManager.createAnnotation({\n      type: 'ENTRIES_LINK',\n      state: Trace.Types.File.EntriesLinkState.CONNECTED,\n      entryFrom: entry3,\n      entryTo: entry2,\n    });\n\n    // Label for the entry we are looking for annotations for.\n    // This label should be a part of associated with the entry annotations.\n    modificationsManager.createAnnotation({\n      type: 'ENTRY_LABEL',\n      entry: entryToFindAnnotationsFor,\n      label: 'entry label',\n    });\n\n    const annotationsForEntry = modificationsManager.annotationsForEntry(entryToFindAnnotationsFor);\n\n    // Make sure the method returns annotations that `entryToFindAnnotationsFor` is a part of\n    assert.deepEqual(\n        annotationsForEntry,\n        [\n          {\n            type: 'ENTRIES_LINK',\n            state: Trace.Types.File.EntriesLinkState.CONNECTED,\n            entryFrom: entry2,\n            entryTo: entryToFindAnnotationsFor,\n          },\n          {\n            type: 'ENTRY_LABEL',\n            entry: entryToFindAnnotationsFor,\n            label: 'entry label',\n          },\n        ],\n    );\n  });\n\n  it('deletes all annotations associated with an entry', async function() {\n    const parsedTrace = (await TraceLoader.traceEngine(null, 'web-dev-with-commit.json.gz')).parsedTrace;\n    const modificationsManager = Timeline.ModificationsManager.ModificationsManager.activeManager();\n    assert.isOk(modificationsManager);\n\n    // Get any entry to create annotations with.\n    const entryToFindAnnotationsFor = parsedTrace.Renderer.allTraceEntries[0];\n    const entry2 = parsedTrace.Renderer.allTraceEntries[1];\n    const entry3 = parsedTrace.Renderer.allTraceEntries[2];\n\n    // Create a connection between entry we are looking for annotations for and another entry.\n    // This link should be deleted.\n    modificationsManager.createAnnotation({\n      type: 'ENTRIES_LINK',\n      state: Trace.Types.File.EntriesLinkState.CONNECTED,\n      entryFrom: entry2,\n      entryTo: entryToFindAnnotationsFor,\n    });\n\n    // Create a link between random entries.\n    // This annotation should not be deleted/\n    modificationsManager.createAnnotation({\n      type: 'ENTRIES_LINK',\n      state: Trace.Types.File.EntriesLinkState.CONNECTED,\n      entryFrom: entry3,\n      entryTo: entry2,\n    });\n\n    // Label for the entry we are looking for annotations for.\n    // This link should be deleted.\n    modificationsManager.createAnnotation({\n      type: 'ENTRY_LABEL',\n      entry: entryToFindAnnotationsFor,\n      label: 'entry label',\n    });\n\n    modificationsManager.deleteEntryAnnotations(entryToFindAnnotationsFor);\n    const annotationsForEntry = modificationsManager.getAnnotations();\n\n    // Make sure the method deleted all annotations that `entryToFindAnnotationsFor` is a part of\n    assert.deepEqual(\n        annotationsForEntry,\n        [\n          {\n            type: 'ENTRIES_LINK',\n            state: Trace.Types.File.EntriesLinkState.CONNECTED,\n            entryFrom: entry3,\n            entryTo: entry2,\n          },\n        ],\n    );\n  });\n});\n"]}