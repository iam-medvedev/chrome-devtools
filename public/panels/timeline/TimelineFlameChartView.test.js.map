{"version":3,"file":"TimelineFlameChartView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineFlameChartView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {setupIgnoreListManagerEnvironment} from '../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Timeline from './timeline.js';\nimport * as Utils from './utils/utils.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\nclass MockViewDelegate implements Timeline.TimelinePanel.TimelineModeViewDelegate {\n  selection: Timeline.TimelineSelection.TimelineSelection|null = null;\n  select(selection: Timeline.TimelineSelection.TimelineSelection|null): void {\n    this.selection = selection;\n  }\n  set3PCheckboxDisabled(_disabled: boolean): void {\n  }\n  selectEntryAtTime(_events: Trace.Types.Events.Event[]|null, _time: number): void {\n  }\n  highlightEvent(_event: Trace.Types.Events.Event|null): void {\n  }\n  element = document.createElement('div');\n}\n\ndescribeWithEnvironment('TimelineFlameChartView', function() {\n  beforeEach(() => {\n    setupIgnoreListManagerEnvironment();\n  });\n\n  describe('groupForLevel', () => {\n    const {groupForLevel} = Timeline.TimelineFlameChartView;\n\n    it('finds the right group for the given level', async () => {\n      const groups: PerfUI.FlameChart.Group[] = [\n        {\n          name: 'group-1' as Common.UIString.LocalizedString,\n          startLevel: 0,\n          style: {} as PerfUI.FlameChart.GroupStyle,\n        },\n        {\n          name: 'group-2' as Common.UIString.LocalizedString,\n          startLevel: 10,\n          style: {} as PerfUI.FlameChart.GroupStyle,\n        },\n        {\n          name: 'group-3' as Common.UIString.LocalizedString,\n          startLevel: 12,\n          style: {} as PerfUI.FlameChart.GroupStyle,\n        },\n      ];\n\n      assert.strictEqual(groupForLevel(groups, 1), groups[0]);\n      assert.strictEqual(groupForLevel(groups, 10), groups[1]);\n      assert.strictEqual(groupForLevel(groups, 11), groups[1]);\n      assert.strictEqual(groupForLevel(groups, 12), groups[2]);\n      assert.strictEqual(groupForLevel(groups, 999), groups[2]);\n    });\n  });\n\n  it('Can search for events by name in the timeline', async function() {\n    const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'lcp-images.json.gz');\n    // The timeline flamechart view will invoke the `select` method\n    // of this delegate every time an event has matched on a search.\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    const searchableView = new UI.SearchableView.SearchableView(flameChartView, null);\n    flameChartView.setSearchableView(searchableView);\n    flameChartView.setModel(parsedTrace, metadata);\n\n    const searchQuery = 'Paint';\n    const searchConfig =\n        new UI.SearchableView.SearchConfig(/* query */ searchQuery, /* caseSensitive */ false, /* isRegex */ false);\n    flameChartView.performSearch(searchConfig, true);\n\n    assert.strictEqual(flameChartView.getSearchResults()?.length, 14);\n    assertSelectionName('PrePaint');\n\n    flameChartView.jumpToNextSearchResult();\n    assertSelectionName('Paint');\n\n    flameChartView.jumpToNextSearchResult();\n    assertSelectionName('Paint');\n\n    flameChartView.jumpToPreviousSearchResult();\n    assertSelectionName('Paint');\n    flameChartView.jumpToPreviousSearchResult();\n    assertSelectionName('PrePaint');\n\n    function assertSelectionName(name: string) {\n      const selection = mockViewDelegate.selection;\n      if (!selection || !Timeline.TimelineSelection.selectionIsEvent(selection)) {\n        throw new Error('Selection is not present or not a Trace Event');\n      }\n      assert.strictEqual(selection.event.name, name);\n    }\n  });\n\n  it('can search across both flame charts for events', async function() {\n    const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    // The timeline flamechart view will invoke the `select` method\n    // of this delegate every time an event has matched on a search.\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    const searchableView = new UI.SearchableView.SearchableView(flameChartView, null);\n    flameChartView.setSearchableView(searchableView);\n    flameChartView.setModel(parsedTrace, metadata);\n\n    const searchQuery = 'app.js';\n    const searchConfig =\n        new UI.SearchableView.SearchConfig(/* query */ searchQuery, /* caseSensitive */ false, /* isRegex */ false);\n    flameChartView.performSearch(searchConfig, true);\n\n    const results = flameChartView.getSearchResults();\n    assert.isOk(results);\n    assert.lengthOf(results, 6);\n    // We should have 5 results from the main provider, and 1 from the network\n    assert.lengthOf(results.filter(r => r.provider === 'main'), 5);\n    assert.lengthOf(results.filter(r => r.provider === 'network'), 1);\n  });\n\n  // This test is still failing after bumping up the timeout to 20 seconds. So\n  // skip it while we work on a fix for the trace load speed.\n  it.skip('[crbug.com/1492405] Shows the network track correctly', async function() {\n    const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n    // The timeline flamechart view will invoke the `select` method\n    // of this delegate every time an event has matched on a search.\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    flameChartView.setModel(parsedTrace, metadata);\n\n    assert.isTrue(flameChartView.isNetworkTrackShownForTests());\n  });\n\n  it('Does not show the network track when there is no network request', async function() {\n    const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'basic.json.gz');\n    // The timeline flamechart view will invoke the `select` method\n    // of this delegate every time an event has matched on a search.\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    flameChartView.setModel(parsedTrace, metadata);\n\n    assert.isFalse(flameChartView.isNetworkTrackShownForTests());\n  });\n\n  it('Adds Hidden Descendants Arrow as a decoration when a Context Menu action is applied on a node', async function() {\n    const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    flameChartView.setModel(parsedTrace, metadata);\n\n    // Find the main track to later collapse entries of\n    const mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n      return group.name === 'Main — http://localhost:8080/';\n    });\n    if (!mainTrack) {\n      throw new Error('Could not find main track');\n    }\n\n    // Find the first node that has children to collapse and is visible in the timeline\n    const nodeOfGroup = flameChartView.getMainDataProvider().groupTreeEvents(mainTrack);\n    const firstNodeWithChildren = nodeOfGroup?.find(node => {\n      const childrenAmount = parsedTrace.Renderer.entryToNode.get(node)?.children.length;\n      if (!childrenAmount) {\n        return false;\n      }\n      return childrenAmount > 0 && node.cat === 'devtools.timeline';\n    });\n    const node = parsedTrace.Renderer.entryToNode.get(firstNodeWithChildren as Trace.Types.Events.Event);\n    if (!node) {\n      throw new Error('Could not find a visible node with children');\n    }\n\n    // Apply COLLAPSE_FUNCTION action to the node. This action will hide all the children of the passed node and add HIDDEN_DESCENDANTS_ARROW decoration to it.\n    flameChartView.getMainFlameChart().modifyTree(PerfUI.FlameChart.FilterAction.COLLAPSE_FUNCTION, node?.id);\n\n    const decorationsForEntry = flameChartView.getMainFlameChart().timelineData()?.entryDecorations[node?.id];\n    assert.deepEqual(decorationsForEntry, [\n      {\n        type: PerfUI.FlameChart.FlameChartDecorationType.HIDDEN_DESCENDANTS_ARROW,\n      },\n    ]);\n  });\n\n  it('Adds Hidden Descendants Arrow as a decoration when a Context Menu action is applied on a selected node with a key shortcut event',\n     async function() {\n       const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n       const mockViewDelegate = new MockViewDelegate();\n\n       const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n       flameChartView.setModel(parsedTrace, metadata);\n\n       // Find the main track to later collapse entries of\n       const mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n         return group.name === 'Main — http://localhost:8080/';\n       });\n       if (!mainTrack) {\n         throw new Error('Could not find main track');\n       }\n\n       // Find the first node that has children to collapse and is visible in the timeline\n       const groupTreeEvents = flameChartView.getMainDataProvider().groupTreeEvents(mainTrack);\n       const firstEventWithChildren = groupTreeEvents?.find(node => {\n         const childrenAmount = parsedTrace.Renderer.entryToNode.get(node)?.children.length;\n         if (!childrenAmount) {\n           return false;\n         }\n         return childrenAmount > 0 && node.cat === 'devtools.timeline';\n       });\n       assert.exists(firstEventWithChildren);\n\n       const nodeId = flameChartView.getMainDataProvider().indexForEvent(firstEventWithChildren);\n       assert.exists(nodeId);\n\n       flameChartView.getMainFlameChart().setSelectedEntry(nodeId);\n\n       // Dispatch a shortcut keydown event that applies 'Hide Children' Context menu action\n       const event = new KeyboardEvent('keydown', {code: 'KeyC'});\n       flameChartView.getMainFlameChart().getCanvas().dispatchEvent(event);\n\n       const decorationsForEntry = flameChartView.getMainFlameChart().timelineData()?.entryDecorations[nodeId];\n       assert.deepEqual(decorationsForEntry, [\n         {\n           type: PerfUI.FlameChart.FlameChartDecorationType.HIDDEN_DESCENDANTS_ARROW,\n         },\n       ]);\n     });\n\n  it('Removes Hidden Descendants Arrow as a decoration when Reset Children action is applied on a node',\n     async function() {\n       const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n       const mockViewDelegate = new MockViewDelegate();\n\n       const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n       flameChartView.setModel(parsedTrace, metadata);\n       Timeline.ModificationsManager.ModificationsManager.activeManager();\n\n       // Find the main track to later collapse entries of\n       let mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n         return group.name === 'Main — http://localhost:8080/';\n       });\n       if (!mainTrack) {\n         throw new Error('Could not find main track');\n       }\n\n       // Find the first node that has children to collapse and is visible in the timeline\n       const nodeOfGroup = flameChartView.getMainDataProvider().groupTreeEvents(mainTrack);\n       const firstNodeWithChildren = nodeOfGroup?.find(node => {\n         const childrenAmount = parsedTrace.Renderer.entryToNode.get(node)?.children.length;\n         if (!childrenAmount) {\n           return false;\n         }\n         return childrenAmount > 0 && node.cat === 'devtools.timeline';\n       });\n       const node = parsedTrace.Renderer.entryToNode.get(firstNodeWithChildren as Trace.Types.Events.Event);\n       if (!node) {\n         throw new Error('Could not find a visible node with children');\n       }\n\n       // Apply COLLAPSE_FUNCTION Context Menu action to the node.\n       // This action will hide all the children of the passed node and add HIDDEN_DESCENDANTS_ARROW decoration to it.\n       flameChartView.getMainFlameChart().modifyTree(PerfUI.FlameChart.FilterAction.COLLAPSE_FUNCTION, node?.id);\n\n       let decorationsForEntry = flameChartView.getMainFlameChart().timelineData()?.entryDecorations[node?.id];\n       assert.deepEqual(decorationsForEntry, [\n         {\n           type: PerfUI.FlameChart.FlameChartDecorationType.HIDDEN_DESCENDANTS_ARROW,\n         },\n       ]);\n\n       mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n         return group.name === 'Main — http://localhost:8080/';\n       });\n       if (!mainTrack) {\n         throw new Error('Could not find main track');\n       }\n       // Apply a RESET_CHILDREN action that will reveal all of the hidden children of the passed node and remove HIDDEN_DESCENDANTS_ARROW decoration from it.\n       flameChartView.getMainFlameChart().modifyTree(PerfUI.FlameChart.FilterAction.RESET_CHILDREN, node?.id);\n\n       // No decorations should exist on the node\n       decorationsForEntry = flameChartView.getMainFlameChart().timelineData()?.entryDecorations[node?.id];\n       assert.isUndefined(decorationsForEntry);\n     });\n\n  it('renders metrics as marker overlays w/ tooltips', async function() {\n    const {parsedTrace, metadata, insights} = await TraceLoader.traceEngine(this, 'crux.json.gz');\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    flameChartView.setInsights(insights, new Map());\n    flameChartView.setModel(parsedTrace, metadata);\n\n    const tooltips =\n        [...flameChartView.element.querySelectorAll('.overlay-type-TIMINGS_MARKER .marker-title')].map(el => {\n          el?.dispatchEvent(new MouseEvent('mousemove', {\n            clientX: 0,\n            clientY: 0,\n          }));\n          return flameChartView.element.querySelector('.timeline-entry-tooltip-element')\n              ?.textContent?.replaceAll('\\xa0', ' ');\n        });\n\n    assert.deepEqual(tooltips, [\n      '0 μsNav',\n      '43.98 msL',\n      '75.90 msFCP - Local939.00 msFCP - Field (URL)',\n      '75.90 msLCP - Local936.00 msLCP - Field (URL)',\n      '43.75 msDCL',\n    ]);\n  });\n\n  describe('Context Menu', function() {\n    let flameChartView: Timeline.TimelineFlameChartView.TimelineFlameChartView;\n    let parsedTrace: Trace.Handlers.Types.ParsedTrace;\n    let metadata: Trace.Types.File.MetaData|null;\n\n    this.beforeEach(async () => {\n      ({parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'recursive-blocking-js.json.gz'));\n      const mockViewDelegate = new MockViewDelegate();\n\n      flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n      flameChartView.setModel(parsedTrace, metadata);\n      Timeline.ModificationsManager.ModificationsManager.activeManager();\n    });\n\n    it('Does not create customized Context Menu for network track', async function() {\n      // The mouse event passed to the Context Menu is used to indicate where the menu should appear. Since we don't\n      // need it to actually appear for this test, pass an event with coordinates that is not in the track header.\n      flameChartView.getNetworkFlameChart().onContextMenu(new MouseEvent('contextmenu', {clientX: 100, clientY: 100}));\n      assert.isUndefined(flameChartView.getNetworkFlameChart().getContextMenu());\n    });\n\n    it('Does not create Context Menu for Network track header', async function() {\n      // So for the first track header, its x will start from beginning.\n      // And its y will start after the ruler (ruler's height is 17).\n      flameChartView.getNetworkFlameChart().onContextMenu(new MouseEvent('contextmenu', {clientX: 0, clientY: 17}));\n      assert.isUndefined(flameChartView.getNetworkFlameChart().getContextMenu());\n    });\n\n    it('Create correct Context Menu for track headers in main flame chart', async function() {\n      // So for the first track header, its x will start from beginning.\n      // And its y will start after the ruler (ruler's height is 17).\n      flameChartView.getMainFlameChart().onContextMenu(new MouseEvent('contextmenu', {clientX: 0, clientY: 17}));\n\n      assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 1);\n      assert.strictEqual(\n          flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.at(0)?.buildDescriptor().label,\n          'Configure tracks');\n    });\n\n    describe('Context Menu Actions For Thread tracks', function() {\n      this.beforeEach(async () => {\n        // Find the Main track to later collapse entries of\n        const mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n          return group.name === 'Main — http://127.0.0.1:8080/';\n        });\n        if (!mainTrack) {\n          throw new Error('Could not find main track');\n        }\n      });\n\n      function getMainThread(data: Trace.Handlers.ModelHandlers.Renderer.RendererHandlerData):\n          Trace.Handlers.ModelHandlers.Renderer.RendererThread {\n        let mainThread: Trace.Handlers.ModelHandlers.Renderer.RendererThread|null = null;\n        for (const [, process] of data.processes) {\n          for (const [, thread] of process.threads) {\n            if (thread.name === 'CrRendererMain') {\n              mainThread = thread;\n              break;\n            }\n          }\n        }\n        if (!mainThread) {\n          throw new Error('Could not find main thread.');\n        }\n        return mainThread;\n      }\n\n      function findFirstEntry(\n          allEntries: readonly Trace.Types.Events.Event[],\n          predicate: (entry: Trace.Types.Events.Event) => boolean): Trace.Types.Events.Event {\n        const entry = allEntries.find(entry => predicate(entry));\n        if (!entry) {\n          throw new Error('Could not find expected entry.');\n        }\n        return entry;\n      }\n\n      function generateContextMenuForNodeId(nodeId: number): void {\n        // Highlight the node to make the Context Menu dispatch on this node\n        flameChartView.getMainFlameChart().highlightEntry(nodeId);\n\n        const eventCoordinates = flameChartView.getMainFlameChart().entryIndexToCoordinates(nodeId);\n        if (!eventCoordinates) {\n          throw new Error('Coordinates were not found');\n        }\n\n        // The mouse event passed to the Context Menu is used to indicate where the menu should appear. So just simply\n        // use the pixels of top left corner of the event.\n        flameChartView.getMainFlameChart().onContextMenu(\n            new MouseEvent('contextmenu', {clientX: eventCoordinates.x, clientY: eventCoordinates.y}));\n      }\n\n      function generateContextMenuForNode(node: Trace.Types.Events.Event): void {\n        const nodeId = flameChartView.getMainDataProvider().indexForEvent(node);\n        assert.isNotNull(nodeId);\n        generateContextMenuForNodeId(nodeId);\n      }\n\n      it('When an entry has no children, correctly make only Hide Entry enabled in the Context Menu action',\n         async function() {\n           /** Part of this stack looks roughly like so (with some events omitted):\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * == now ==      == updateCounters ==  <-- ID=245\n            *\n            * In this test we want to test that the Context Menu option available\n            * for an entry with no children and a parent is to hide given entry only.\n            * Since there are no children to hide, we don't want to show 'hide children' option.\n            *\n            * To achieve that, we will dispatch the context menu on the 'updateCounters' function that does not have\n            * children.\n            * The ID of 'updateCounters' is 245.\n            **/\n\n           const nodeIdWithNoChildren = 245;\n           generateContextMenuForNodeId(nodeIdWithNoChildren);\n\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 5);\n           // Hide function enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(0)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Rest of the actions disabled\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(1)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(2)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(3)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(4)\n                              ?.buildDescriptor()\n                              .enabled);\n         });\n\n      it('When an entry has children, correctly make only Hide Entry and Hide Children enabled in the Context Menu action',\n         async function() {\n           /** Part of this stack looks roughly like so (with some events omitted):\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * ===== wait =====   ===== wait =====\n            * = now =  = now =   = now =  = now =\n            *\n            * In this test we want to test that the Context Menu option available\n            * for an entry with children and a parent is to hide given entry, and hide children only.\n            * Since there are no repeating children to hide, we don't want to show 'hide repeating children' option.\n            *\n            * To achieve that, we will dispatch the context menu on the 'wait' function that has only non-repeating\n            * children.\n            **/\n           const mainThread = getMainThread(parsedTrace.Renderer);\n           const entry = findFirstEntry(mainThread.entries, entry => {\n             return Trace.Types.Events.isProfileCall(entry) && entry.callFrame.functionName === 'wait';\n           });\n           const nodeIdWithNoChildren = flameChartView.getMainDataProvider().indexForEvent(entry);\n           assert.exists(nodeIdWithNoChildren);\n           generateContextMenuForNodeId(nodeIdWithNoChildren);\n\n           // This entry has URL, so there are 5 always-shown actions, and one to add script to ignore list.\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 6);\n           // Hide function enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(0)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Hide children enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(1)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Rest of the actions disabled\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(2)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(3)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(4)\n                              ?.buildDescriptor()\n                              .enabled);\n         });\n\n      it('When an entry has repeating children, correctly make only Hide Entry, Hide Children and Hide repeating children enabled in the Context Menu action',\n         async function() {\n           /** Part of this stack looks roughly like so (with some events omitted):\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * ===== wait =====   ===== wait =====\n            * = now =  = now =   = now =  = now =\n            *\n            * In this test we want to test that the Context Menu option available\n            * for an entry with children repeating children and a parent is to hide given entry, hide children and hide\n            * repeating children.\n            *\n            * To achieve that, we will dispatch the context menu on the 'foo' function that has child 'foo' calls.\n            **/\n\n           const mainThread = getMainThread(parsedTrace.Renderer);\n           const entry = findFirstEntry(mainThread.entries, entry => {\n             return Trace.Types.Events.isProfileCall(entry) && entry.callFrame.functionName === 'foo';\n           });\n\n           const nodeId = flameChartView.getMainDataProvider().indexForEvent(entry);\n           assert.exists(nodeId);\n\n           generateContextMenuForNodeId(nodeId);\n\n           // This entry has URL, so there are 5 always-shown actions, and one to add script to ignore list.\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 6);\n           // Hide function enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(0)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Hide children enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(1)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Hide repeating children enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(2)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Rest of the actions disabled\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(3)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(4)\n                              ?.buildDescriptor()\n                              .enabled);\n         });\n\n      it('When an entry has no parent and has children, correctly make only Hide Children enabled in the Context Menu action',\n         async function() {\n           /** Part of this stack looks roughly like so (with some events omitted):\n            * =============== Task ==============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * ===== wait =====   ===== wait =====\n            * = now =  = now =   = now =  = now =\n            *\n            * In this test we want to test that the Context Menu option available for an entry with no parent is only to\n            * hide children.\n            * If an entry has no parent, we don't want to show an option to hide the entry since when an entry is hidden,\n            * it is indicated by adding a decoration to the parent and if there is no parent, there is no way to show it\n            * is hidden.\n            *\n            * To achieve that, we will dispatch the context menu on the 'Task' function that is on the top of the stack\n            * and has no parent.\n            **/\n\n           const mainThread = getMainThread(parsedTrace.Renderer);\n           const entry = findFirstEntry(mainThread.entries, entry => {\n             const childrenAmount = parsedTrace.Renderer.entryToNode.get(entry)?.children.length;\n             if (!childrenAmount) {\n               return false;\n             }\n             return Trace.Types.Events.isRunTask(entry);\n           });\n\n           const nodeId = flameChartView.getMainDataProvider().indexForEvent(entry);\n           assert.exists(nodeId);\n\n           generateContextMenuForNodeId(nodeId);\n\n           // Hide function disabled\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(0)\n                              ?.buildDescriptor()\n                              .enabled);\n           // Hide children enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(1)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Rest of the actions disabled\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(2)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(3)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(4)\n                              ?.buildDescriptor()\n                              .enabled);\n         });\n\n      it('Reset Trace Context Menu action is disabled before some action has been applied', async function() {\n        /** Part of this stack looks roughly like so (with some events omitted):\n         * =============== Task ==============\n         * =============== foo ===============\n         * =============== foo ===============\n         * =============== foo ===============\n         * =============== foo ===============\n         * =============== foo ===============\n         * =============== foo ===============\n         * ===== wait =====   ===== wait =====\n         * = now =  = now =   = now =  = now =\n         *\n         * In this test we want to test that the Reset Trace Context Menu option is disabled by default and enabled after\n         * some action has been applied.\n         *\n         * To achieve that, we will first check if Reset Trace is disabled and then dispatch a Context Menu action on\n         * \"Task\" entry and then check if Reset Trace is enabled.\n         **/\n\n        const mainThread = getMainThread(parsedTrace.Renderer);\n        const entry = findFirstEntry(mainThread.entries, entry => Trace.Types.Events.isRunTask(entry));\n        const nodeId = flameChartView.getMainDataProvider().indexForEvent(entry);\n        assert.exists(nodeId);\n\n        generateContextMenuForNodeId(nodeId);\n        assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 5);\n        assert.strictEqual(\n            flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.at(4)?.buildDescriptor().label,\n            'Reset trace');\n        // Check that Reset Trace is disabled\n        assert.isFalse(flameChartView.getMainFlameChart()\n                           .getContextMenu()\n                           ?.defaultSection()\n                           .items.at(4)\n                           ?.buildDescriptor()\n                           .enabled);\n\n        flameChartView.getMainFlameChart().modifyTree(PerfUI.FlameChart.FilterAction.MERGE_FUNCTION, nodeId);\n        generateContextMenuForNodeId(nodeId);\n\n        // Check that Reset Trace is enabled\n        assert.isTrue(flameChartView.getMainFlameChart()\n                          .getContextMenu()\n                          ?.defaultSection()\n                          .items.at(4)\n                          ?.buildDescriptor()\n                          .enabled);\n      });\n\n      it('When an entry has URL and is not ignored, correctly show the Add script to ignore list in the Context Menu action',\n         async function() {\n           const mainThread = getMainThread(parsedTrace.Renderer);\n           const entryWithUrl = findFirstEntry(mainThread.entries, entry => {\n             // Let's find the first entry with URL.\n             return Trace.Types.Events.isProfileCall(entry) && Boolean(entry.callFrame.url);\n           });\n           generateContextMenuForNode(entryWithUrl);\n\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 6);\n\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(5)\n                   ?.buildDescriptor()\n                   .label,\n               'Add script to ignore list');\n         });\n\n      it('When an entry has URL and is ignored, correctly show the Remove script from ignore list in the Context Menu action',\n         async function() {\n           const mainThread = getMainThread(parsedTrace.Renderer);\n           const entryWithIgnoredUrl = findFirstEntry(mainThread.entries, entry => {\n             // Let's find the first entry with URL.\n             return Trace.Types.Events.isProfileCall(entry) && Boolean(entry.callFrame.url);\n           });\n           Bindings.IgnoreListManager.IgnoreListManager.instance().ignoreListURL(\n               urlString`${(entryWithIgnoredUrl as Trace.Types.Events.SyntheticProfileCall).callFrame.url}`);\n\n           generateContextMenuForNode(entryWithIgnoredUrl);\n\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 6);\n\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(5)\n                   ?.buildDescriptor()\n                   .label,\n               'Remove script from ignore list');\n         });\n    });\n  });\n\n  describe('updating the active AI call tree', () => {\n    it('updates the UI Context with the active AI Call tree for the selected event', async function() {\n      const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      const mockViewDelegate = new MockViewDelegate();\n      const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n      flameChartView.setModel(parsedTrace, metadata);\n      // Find some task in the main thread that we can build an AI Call Tree from\n      const task = parsedTrace.Renderer.allTraceEntries.find(event => {\n        return Trace.Types.Events.isRunTask(event) && event.dur > 5_000 &&\n            Utils.AICallTree.AICallTree.fromEvent(event, parsedTrace) !== null;\n      });\n\n      assert.isOk(task);\n      UI.Context.Context.instance().setFlavor(Utils.AICallTree.AICallTree, null);\n      const selection = Timeline.TimelineSelection.selectionFromEvent(task);\n      flameChartView.setSelectionAndReveal(selection);\n      const flavor = UI.Context.Context.instance().flavor(Utils.AICallTree.AICallTree);\n      assert.instanceOf(flavor, Utils.AICallTree.AICallTree);\n    });\n  });\n\n  describe('Link between entries annotation in progress', function() {\n    let flameChartView: Timeline.TimelineFlameChartView.TimelineFlameChartView;\n    let parsedTrace: Trace.Handlers.Types.ParsedTrace;\n    let metadata: Trace.Types.File.MetaData|null;\n\n    this.beforeEach(async () => {\n      ({parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'recursive-blocking-js.json.gz'));\n      const mockViewDelegate = new MockViewDelegate();\n\n      flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n      flameChartView.setModel(parsedTrace, metadata);\n      Timeline.ModificationsManager.ModificationsManager.activeManager();\n    });\n\n    it('Creates a `link between entries Annotation in progress` tracking object', async function() {\n      // Make sure the link annotation in the progress of creation does not exist\n      assert.isNull(flameChartView.getLinkSelectionAnnotation());\n\n      // Start creating a link between entries from an entry with ID 204\n      flameChartView.onEntriesLinkAnnotationCreate(flameChartView.getMainDataProvider(), 204);\n\n      // Make sure the link is started and only has 'from' entry set\n      assert.isNotNull(flameChartView.getLinkSelectionAnnotation());\n      assert.isNotNull(flameChartView.getLinkSelectionAnnotation()?.entryFrom);\n      assert.isUndefined(flameChartView.getLinkSelectionAnnotation()?.entryTo);\n\n      // Make sure the annotation exists in the ModificationsManager\n      const annotations = Timeline.ModificationsManager.ModificationsManager.activeManager()?.getAnnotations();\n      assert.exists(annotations);\n      assert.strictEqual(annotations?.length, 1);\n      assert.strictEqual(annotations[0].type, 'ENTRIES_LINK');\n    });\n\n    it('Sets the link between entries annotation in progress to null when the second entry is selected',\n       async function() {\n         // Make sure the link annotation in the progress of creation does not exist\n         assert.isNull(flameChartView.getLinkSelectionAnnotation());\n\n         // Start creating a link between entries from an entry with ID 204\n         flameChartView.onEntriesLinkAnnotationCreate(flameChartView.getMainDataProvider(), 204);\n         const entryFrom = flameChartView.getMainDataProvider().eventByIndex(204);\n\n         // Hover on another entry to complete the link\n         flameChartView.updateLinkSelectionAnnotationWithToEntry(flameChartView.getMainDataProvider(), 245);\n         const entryTo = flameChartView.getMainDataProvider().eventByIndex(245);\n         // Make sure the entry 'to' is set\n         assert.exists(flameChartView.getLinkSelectionAnnotation()?.entryTo);\n\n         // Select the other entry to complete the link and set the one in progress to null\n         flameChartView.handleToEntryOfLinkBetweenEntriesSelection(245);\n         // Make sure the link annotation in progress is set to null\n         assert.isNull(flameChartView.getLinkSelectionAnnotation());\n\n         // Make sure the annotation exists in the ModificationsManager\n         const annotations = Timeline.ModificationsManager.ModificationsManager.activeManager()?.getAnnotations();\n         assert.exists(annotations);\n         assert.strictEqual(annotations?.length, 1);\n         assert.strictEqual(annotations[0].type, 'ENTRIES_LINK');\n         const entriesLink = annotations[0] as Trace.Types.File.EntriesLinkAnnotation;\n\n         assert.strictEqual(entriesLink.entryFrom, entryFrom);\n         assert.strictEqual(entriesLink.entryTo, entryTo);\n       });\n\n    it('Reverses entries in the link if `to` entry timestamp is earlier than `from` entry timestamo', async function() {\n      // Make sure the link annotation in the progress of creation does not exist\n      assert.isNull(flameChartView.getLinkSelectionAnnotation());\n\n      // Start creating a link between entries from an entry with ID 245\n      flameChartView.onEntriesLinkAnnotationCreate(flameChartView.getMainDataProvider(), 245);\n      const entryFrom = flameChartView.getMainDataProvider().eventByIndex(245);\n\n      // Hover on another entry that starts before the entry that the link is being created from\n      flameChartView.updateLinkSelectionAnnotationWithToEntry(flameChartView.getMainDataProvider(), 204);\n      const entryTo = flameChartView.getMainDataProvider().eventByIndex(204);\n\n      // Select the other entry to complete the link and set the one in progress to null\n      flameChartView.handleToEntryOfLinkBetweenEntriesSelection(204);\n\n      // Make sure the annotation exists in the ModificationsManager\n      const annotations = Timeline.ModificationsManager.ModificationsManager.activeManager()?.getAnnotations();\n      assert.exists(annotations);\n      assert.strictEqual(annotations?.length, 1);\n      assert.strictEqual(annotations[0].type, 'ENTRIES_LINK');\n      const entriesLink = annotations[0] as Trace.Types.File.EntriesLinkAnnotation;\n\n      // Make 'entryFrom' has an earlier timestamp and the entries `to` and `from` got switched up\n      assert.strictEqual(entriesLink.entryFrom, entryTo);\n      assert.strictEqual(entriesLink.entryTo, entryFrom);\n    });\n  });\n});\n"]}