{"version":3,"file":"TimelineFlameChartView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineFlameChartView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as AIAssistance from '../../models/ai_assistance/ai_assistance.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport {assertScreenshot, dispatchClickEvent, doubleRaf, raf, renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {\n  allThreadEntriesInTrace,\n  microsecondsTraceWindow,\n  renderWidgetInVbox,\n  setupIgnoreListManagerEnvironment\n} from '../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Timeline from './timeline.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\nclass MockViewDelegate implements Timeline.TimelinePanel.TimelineModeViewDelegate {\n  selection: Timeline.TimelineSelection.TimelineSelection|null = null;\n  select(selection: Timeline.TimelineSelection.TimelineSelection|null): void {\n    this.selection = selection;\n  }\n  set3PCheckboxDisabled(_disabled: boolean): void {\n  }\n  selectEntryAtTime(_events: Trace.Types.Events.Event[]|null, _time: number): void {\n  }\n  zoomEvent(_event: Trace.Types.Events.Event): void {\n  }\n  highlightEvent(_event: Trace.Types.Events.Event|null): void {\n  }\n  element = document.createElement('div');\n}\n\nfunction clearPersistTrackConfigSettings() {\n  const mainGroupSetting =\n      Common.Settings.Settings.instance().createSetting<PerfUI.FlameChart.PersistedGroupConfig[]|null>(\n          'timeline-persisted-main-flamechart-track-config', null);\n  const networkGroupSetting =\n      Common.Settings.Settings.instance().createSetting<PerfUI.FlameChart.PersistedGroupConfig[]|null>(\n          'timeline-persisted-network-flamechart-track-config', null);\n\n  // In case they already existed and need clearing out.\n  mainGroupSetting.set(null);\n  networkGroupSetting.set(null);\n}\n\ndescribeWithEnvironment('TimelineFlameChartView', function() {\n  before(() => {\n    // In case any previous test suite set this.\n    clearPersistTrackConfigSettings();\n  });\n\n  beforeEach(() => {\n    setupIgnoreListManagerEnvironment();\n    const actionRegistryInstance = UI.ActionRegistry.ActionRegistry.instance({forceNew: true});\n    UI.ShortcutRegistry.ShortcutRegistry.instance({forceNew: true, actionRegistry: actionRegistryInstance});\n  });\n\n  afterEach(() => {\n    // Avoid any group expansion state leaking across tests.\n    clearPersistTrackConfigSettings();\n  });\n\n  describe('rendering', () => {\n    beforeEach(() => {\n      // We persist collapsed/expanded states across sessions, but we want to\n      // make sure each test here does not impact others.\n      Common.Settings.Settings.instance().createSetting('timeline-flamechart-network-view-group-expansion', {}).set({});\n    });\n\n    it('renders the network and other tracks in collapsed and expanded modes', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      const mockViewDelegate = new MockViewDelegate();\n\n      const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n      flameChartView.updateCountersGraphToggle(false);  // don't care about the memory view in this test\n      renderWidgetInVbox(flameChartView);\n      // IMPORTANT: order is important; for the flame chart view to render properly\n      // it must be in the DOM before we set the model, so it can calculate and\n      // set heights.\n      flameChartView.setModel(parsedTrace, new Map());\n\n      // Most of the network content is in the first ~700ms of this trace\n      const {min} = parsedTrace.data.Meta.traceBounds;\n      const interestingRange = Trace.Helpers.Timing.milliToMicro(Trace.Types.Timing.Milli(700));\n      const max = Trace.Types.Timing.Micro(min + interestingRange);\n      const newBounds = microsecondsTraceWindow(min, max);\n      TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(newBounds);\n      await raf();\n\n      await assertScreenshot('timeline/flamechart_view_network_collapsed.png');\n      flameChartView.getNetworkFlameChart().toggleGroupExpand(0);\n      await raf();\n      await assertScreenshot('timeline/flamechart_view_network_expanded.png');\n    });\n\n    it('does not show the network track when there is no network request', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'slow-interaction-keydown.json.gz');\n      const mockViewDelegate = new MockViewDelegate();\n      const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n      flameChartView.updateCountersGraphToggle(false);\n      renderWidgetInVbox(flameChartView);\n      flameChartView.setModel(parsedTrace, new Map());\n      await assertScreenshot('timeline/flamechart_view_no_network_events.png');\n    });\n\n    it('shows the details for a selected network event', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      const mockViewDelegate = new MockViewDelegate();\n\n      const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n      const searchableView = new UI.SearchableView.SearchableView(flameChartView, null);\n      searchableView.setMinimumSize(0, 100);\n      searchableView.hideWidget();\n      flameChartView.setSearchableView(searchableView);\n      flameChartView.updateCountersGraphToggle(false);  // don't care about the memory view in this test\n      renderWidgetInVbox(searchableView);\n      // IMPORTANT: order is important; for the flame chart view to render properly\n      // it must be in the DOM before we set the model, so it can calculate and\n      // set heights.\n      flameChartView.show(searchableView.element);\n      flameChartView.setModel(parsedTrace, new Map());\n      flameChartView.getNetworkFlameChart().toggleGroupExpand(0);\n\n      // Most of the network content is in the first ~700ms of this trace\n      const {min} = parsedTrace.data.Meta.traceBounds;\n      const interestingRange = Trace.Helpers.Timing.milliToMicro(Trace.Types.Timing.Milli(700));\n      const max = Trace.Types.Timing.Micro(min + interestingRange);\n      const newBounds = microsecondsTraceWindow(min, max);\n      TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(newBounds);\n      await raf();\n\n      const networkRequest = parsedTrace.data.NetworkRequests.byTime.find(req => {\n        return req.args.data.url === 'https://web.dev/js/app.js?v=fedf5fbe';\n      });\n      assert.isOk(networkRequest);\n      const selection = Timeline.TimelineSelection.selectionFromEvent(networkRequest);\n      flameChartView.setSelectionAndReveal(selection);\n      await raf();\n      await assertScreenshot('timeline/timeline_with_network_selection.png');\n    });\n\n    it('shows the details for a selected main thread event', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      const mockViewDelegate = new MockViewDelegate();\n\n      const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n      const searchableView = new UI.SearchableView.SearchableView(flameChartView, null);\n      searchableView.setMinimumSize(0, 100);\n      searchableView.hideWidget();\n      flameChartView.setSearchableView(searchableView);\n      flameChartView.updateCountersGraphToggle(false);  // don't care about the memory view in this test\n      renderWidgetInVbox(searchableView);\n      // IMPORTANT: order is important; for the flame chart view to render properly\n      // it must be in the DOM before we set the model, so it can calculate and\n      // set heights.\n      flameChartView.show(searchableView.element);\n      flameChartView.setModel(parsedTrace, new Map());\n      flameChartView.getNetworkFlameChart().toggleGroupExpand(0);\n\n      // Most of the network content is in the first ~700ms of this trace\n      const {min} = parsedTrace.data.Meta.traceBounds;\n      const interestingRange = Trace.Helpers.Timing.milliToMicro(Trace.Types.Timing.Milli(700));\n      const max = Trace.Types.Timing.Micro(min + interestingRange);\n      const newBounds = microsecondsTraceWindow(min, max);\n      TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(newBounds);\n      await raf();\n\n      // No particular reason to pick this event; it's just an event in the\n      // main thread within the time bounds.\n      const event = allThreadEntriesInTrace(parsedTrace).find(event => {\n        return Trace.Types.Events.isTimerFire(event) && event.ts === 122411157276;\n      });\n      assert.isOk(event);\n      const selection = Timeline.TimelineSelection.selectionFromEvent(event);\n      flameChartView.setSelectionAndReveal(selection);\n      await raf();\n      await assertScreenshot('timeline/timeline_with_main_thread_selection.png');\n    });\n  });\n\n  it('knows if the current trace has got hidden tracks', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const mockViewDelegate = new MockViewDelegate();\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    renderElementIntoDOM(flameChartView);\n    flameChartView.setModel(parsedTrace, new Map());\n\n    assert.isFalse(flameChartView.hasHiddenTracks());\n    // Ensure it is true when something in the main flame chart is hidden\n    flameChartView.getMainFlameChart().hideGroup(0);\n    assert.isTrue(flameChartView.hasHiddenTracks());\n    flameChartView.getMainFlameChart().showGroup(0);\n    assert.isFalse(flameChartView.hasHiddenTracks());\n    // Ensure it is true when something in the network chart is hidden\n    // (users cannot technically achieve this via the UI, but in case they can\n    // in the future let's explicitly check!)\n    flameChartView.getNetworkFlameChart().hideGroup(0);\n    assert.isTrue(flameChartView.hasHiddenTracks());\n  });\n\n  it('can gather the visual track config to store as metadata', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const mockViewDelegate = new MockViewDelegate();\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    renderElementIntoDOM(flameChartView);\n    flameChartView.setModel(parsedTrace, new Map());\n\n    const mainChart = flameChartView.getMainFlameChart();\n    mainChart.hideGroup(0);\n    // Can't do group one as that is the screenshots, which are nested under\n    // \"Frames\", so we pick Group 2 (which is animations).\n    mainChart.moveGroupDown(2);\n\n    const networkChart = flameChartView.getNetworkFlameChart();\n    networkChart.toggleGroupExpand(0);\n\n    const visualMetadata = flameChartView.getPersistedConfigMetadata();\n\n    assert.deepEqual(\n        visualMetadata.network,\n        [{expanded: true, hidden: false, originalIndex: 0, visualIndex: 0, trackName: 'Network'}]);\n\n    assert.deepEqual(visualMetadata.main, [\n      {expanded: false, hidden: true, originalIndex: 0, visualIndex: 0, trackName: 'Frames'}, {\n        expanded: false,\n        hidden: false,\n        originalIndex: 1,\n        visualIndex: 1,\n        // screenshots but it has no visible title\n        trackName: ''\n      },\n      {expanded: false, hidden: false, originalIndex: 2, visualIndex: 3, trackName: 'Animations'},\n      {expanded: true, hidden: false, originalIndex: 3, visualIndex: 2, trackName: 'Main — https://web.dev/'}, {\n        expanded: false,\n        hidden: false,\n        originalIndex: 4,\n        visualIndex: 4,\n        trackName:\n            'Frame — https://shared-storage-demo-content-producer.web.app/paa/scripts/private-aggregation-test.html'\n      },\n      {expanded: false, hidden: false, originalIndex: 5, visualIndex: 5, trackName: 'Thread pool'},\n      {expanded: false, hidden: false, originalIndex: 6, visualIndex: 6, trackName: 'Thread pool worker 1'},\n      {expanded: false, hidden: false, originalIndex: 7, visualIndex: 7, trackName: 'Thread pool worker 2'},\n      {expanded: false, hidden: false, originalIndex: 8, visualIndex: 8, trackName: 'Thread pool worker 3'},\n      {expanded: false, hidden: false, originalIndex: 9, visualIndex: 9, trackName: 'Thread pool worker 4'},\n      {expanded: false, hidden: false, originalIndex: 10, visualIndex: 10, trackName: 'Thread pool worker 5'},\n      {expanded: false, hidden: false, originalIndex: 11, visualIndex: 11, trackName: 'StackSamplingProfiler'},\n      {expanded: false, hidden: false, originalIndex: 12, visualIndex: 12, trackName: 'GPU'}\n    ]);\n  });\n\n  it('does not apply visual config from a file', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n\n    const FROM_FILE_VISUAL_CONFIG_NETWORK: Trace.Types.File.TrackVisualConfig[] =\n        [{expanded: true, hidden: false, originalIndex: 0, visualIndex: 0, trackName: 'Network'}];\n\n    // Populate the in-memory setting to pretend the user has already modified\n    // this trace's visual config.\n    // Importantly for this test, this is a different setting to FAKE_VISUAL_CONFIG_NETWORK above.\n    const networkGroupSetting =\n        Common.Settings.Settings.instance().createSetting<PerfUI.FlameChart.PersistedGroupConfig[]|null>(\n            'timeline-persisted-network-flamechart-track-config', null);\n    const USER_VISUAL_CONFIG_NETWORK =\n        {hidden: true, expanded: true, originalIndex: 0, visualIndex: 0, trackName: 'Network'};\n    networkGroupSetting.set([USER_VISUAL_CONFIG_NETWORK]);\n\n    // Now add network configuration to the metadata that we get from the trace file itself.\n    const metadata: Trace.Types.File.MetaData = {\n      ...parsedTrace.metadata,\n      visualTrackConfig: {\n        main: null,\n        network: FROM_FILE_VISUAL_CONFIG_NETWORK,\n      }\n    };\n    const mockViewDelegate = new MockViewDelegate();\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    flameChartView.setModel({...parsedTrace, metadata}, new Map());\n\n    const metadataInSetting = flameChartView.getPersistedConfigMetadata();\n    assert.deepEqual(metadataInSetting, {main: null, network: [USER_VISUAL_CONFIG_NETWORK]});\n  });\n\n  it('creates an entry label annotation when the data provider sends an entry label annotation created event',\n     async function() {\n       const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-modifications.json.gz');\n       const mockViewDelegate = new MockViewDelegate();\n\n       const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n       flameChartView.setModel(parsedTrace, new Map());\n       const modifications = Timeline.ModificationsManager.ModificationsManager.activeManager();\n       assert.exists(modifications);\n       const stub = sinon.stub(modifications, 'createAnnotation');\n\n       flameChartView.getMainDataProvider().dispatchEventToListeners(\n           Timeline.TimelineFlameChartDataProvider.Events.ENTRY_LABEL_ANNOTATION_ADDED,\n           {entryIndex: 0, withLinkCreationButton: false});\n       sinon.assert.calledOnce(stub);\n     });\n\n  it('fires an event when an entry label overlay is clicked', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-modifications.json.gz');\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    const searchableView = new UI.SearchableView.SearchableView(flameChartView, null);\n    searchableView.setMinimumSize(0, 100);\n    searchableView.hideWidget();\n    flameChartView.setSearchableView(searchableView);\n    flameChartView.updateCountersGraphToggle(false);  // don't care about the memory view in this test\n    renderWidgetInVbox(searchableView);\n    // IMPORTANT: order is important; for the flame chart view to render properly\n    // it must be in the DOM before we set the model, so it can calculate and\n    // set heights.\n    flameChartView.show(searchableView.element);\n    flameChartView.setModel(parsedTrace, new Map());\n    const modifications = Timeline.ModificationsManager.ModificationsManager.activeManager();\n    assert.isOk(modifications);\n    const labelAnnotation = modifications.getAnnotations().find(a => a.type === 'ENTRY_LABEL');\n    assert.isOk(labelAnnotation);\n    // This creates an active annotation in the UI and creates the overlay.\n    const overlay = modifications.createAnnotation(labelAnnotation, {\n      loadedFromFile: false,\n      muteAriaNotifications: false,\n    });\n    flameChartView.addOverlay(overlay);\n    await raf();\n    const overlayElement = flameChartView.overlays().elementForOverlay(overlay);\n    assert.isOk(overlayElement);\n    const labelAnnotationClickedStub = sinon.stub();\n    flameChartView.addEventListener(Timeline.TimelineFlameChartView.Events.ENTRY_LABEL_ANNOTATION_CLICKED, event => {\n      labelAnnotationClickedStub(event.data.entry);\n    });\n    dispatchClickEvent(overlayElement);\n    sinon.assert.calledOnceWithExactly(labelAnnotationClickedStub, labelAnnotation.entry);\n  });\n\n  describe('groupForLevel', () => {\n    const {groupForLevel} = Timeline.TimelineFlameChartView;\n\n    it('finds the right group for the given level', async () => {\n      const groups: PerfUI.FlameChart.Group[] = [\n        {\n          name: 'group-1' as Common.UIString.LocalizedString,\n          startLevel: 0,\n          style: {} as PerfUI.FlameChart.GroupStyle,\n        },\n        {\n          name: 'group-2' as Common.UIString.LocalizedString,\n          startLevel: 10,\n          style: {} as PerfUI.FlameChart.GroupStyle,\n        },\n        {\n          name: 'group-3' as Common.UIString.LocalizedString,\n          startLevel: 12,\n          style: {} as PerfUI.FlameChart.GroupStyle,\n        },\n      ];\n\n      assert.strictEqual(groupForLevel(groups, 1), groups[0]);\n      assert.strictEqual(groupForLevel(groups, 10), groups[1]);\n      assert.strictEqual(groupForLevel(groups, 11), groups[1]);\n      assert.strictEqual(groupForLevel(groups, 12), groups[2]);\n      assert.strictEqual(groupForLevel(groups, 999), groups[2]);\n    });\n  });\n\n  it('Can search for events by name in the timeline', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'lcp-images.json.gz');\n    // The timeline flamechart view will invoke the `select` method\n    // of this delegate every time an event has matched on a search.\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    const searchableView = new UI.SearchableView.SearchableView(flameChartView, null);\n    flameChartView.setSearchableView(searchableView);\n    flameChartView.setModel(parsedTrace, new Map());\n\n    const searchQuery = 'Paint';\n    const searchConfig = new UI.SearchableView.SearchConfig(/* query */ searchQuery, /* caseSensitive */ false,\n                                                            /* wholeWord */ false, /* isRegex */ false);\n    flameChartView.performSearch(searchConfig, true);\n\n    assert.strictEqual(flameChartView.getSearchResults()?.length, 14);\n    assertSelectionName('PrePaint');\n\n    flameChartView.jumpToNextSearchResult();\n    assertSelectionName('Paint');\n\n    flameChartView.jumpToNextSearchResult();\n    assertSelectionName('Paint');\n\n    flameChartView.jumpToPreviousSearchResult();\n    assertSelectionName('Paint');\n    flameChartView.jumpToPreviousSearchResult();\n    assertSelectionName('PrePaint');\n\n    function assertSelectionName(name: string) {\n      const selection = mockViewDelegate.selection;\n      if (!selection || !Timeline.TimelineSelection.selectionIsEvent(selection)) {\n        throw new Error('Selection is not present or not a Trace Event');\n      }\n      assert.strictEqual(selection.event.name, name);\n    }\n    flameChartView.detach();\n  });\n\n  it('can search across both flame charts for events', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    // The timeline flamechart view will invoke the `select` method\n    // of this delegate every time an event has matched on a search.\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    const searchableView = new UI.SearchableView.SearchableView(flameChartView, null);\n    flameChartView.setSearchableView(searchableView);\n    flameChartView.setModel(parsedTrace, new Map());\n\n    const searchQuery = 'app.js';\n    const searchConfig = new UI.SearchableView.SearchConfig(/* query */ searchQuery, /* caseSensitive */ false,\n                                                            /* wholeWord */ false, /* isRegex */ false);\n    flameChartView.performSearch(searchConfig, true);\n\n    const results = flameChartView.getSearchResults();\n    assert.isOk(results);\n    assert.lengthOf(results, 9);\n    assert.lengthOf(results.filter(r => r.provider === 'main'), 8);\n    assert.lengthOf(results.filter(r => r.provider === 'network'), 1);\n    flameChartView.detach();\n  });\n\n  it('Adds Hidden Descendants Arrow as a decoration when a Context Menu action is applied on a node', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    flameChartView.setModel(parsedTrace, new Map());\n\n    // Find the main track to later collapse entries of\n    const mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n      return group.name === 'Main — http://localhost:8080/';\n    });\n    if (!mainTrack) {\n      throw new Error('Could not find main track');\n    }\n\n    // Find the first node that has children to collapse and is visible in the timeline\n    const nodeOfGroup = flameChartView.getMainDataProvider().groupTreeEvents(mainTrack);\n    const firstNodeWithChildren = nodeOfGroup?.find(node => {\n      const childrenAmount = parsedTrace.data.Renderer.entryToNode.get(node)?.children.length;\n      if (!childrenAmount) {\n        return false;\n      }\n      return childrenAmount > 0 && node.cat === 'devtools.timeline';\n    });\n    const node = parsedTrace.data.Renderer.entryToNode.get(firstNodeWithChildren as Trace.Types.Events.Event);\n    if (!node) {\n      throw new Error('Could not find a visible node with children');\n    }\n\n    // Apply COLLAPSE_FUNCTION action to the node. This action will hide all the children of the passed node and add HIDDEN_DESCENDANTS_ARROW decoration to it.\n    flameChartView.getMainFlameChart().modifyTree(PerfUI.FlameChart.FilterAction.COLLAPSE_FUNCTION, node?.id);\n\n    const decorationsForEntry = flameChartView.getMainFlameChart().timelineData()?.entryDecorations[node?.id];\n    assert.deepEqual(decorationsForEntry, [\n      {\n        type: PerfUI.FlameChart.FlameChartDecorationType.HIDDEN_DESCENDANTS_ARROW,\n      },\n    ]);\n    flameChartView.detach();\n  });\n\n  it('Adds Hidden Descendants Arrow as a decoration when a Context Menu action is applied on a selected node with a key shortcut event',\n     async function() {\n       const parsedTrace = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n       const mockViewDelegate = new MockViewDelegate();\n\n       const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n       flameChartView.setModel(parsedTrace, new Map());\n\n       // Find the main track to later collapse entries of\n       const mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n         return group.name === 'Main — http://localhost:8080/';\n       });\n       if (!mainTrack) {\n         throw new Error('Could not find main track');\n       }\n\n       // Find the first node that has children to collapse and is visible in the timeline\n       const groupTreeEvents = flameChartView.getMainDataProvider().groupTreeEvents(mainTrack);\n       const firstEventWithChildren = groupTreeEvents?.find(node => {\n         const childrenAmount = parsedTrace.data.Renderer.entryToNode.get(node)?.children.length;\n         if (!childrenAmount) {\n           return false;\n         }\n         return childrenAmount > 0 && node.cat === 'devtools.timeline';\n       });\n       assert.exists(firstEventWithChildren);\n\n       const nodeId = flameChartView.getMainDataProvider().indexForEvent(firstEventWithChildren);\n       assert.exists(nodeId);\n\n       flameChartView.getMainFlameChart().setSelectedEntry(nodeId);\n\n       // Dispatch a shortcut keydown event that applies 'Hide Children' Context menu action\n       const event = new KeyboardEvent('keydown', {code: 'KeyC'});\n       flameChartView.getMainFlameChart().getCanvas().dispatchEvent(event);\n\n       const decorationsForEntry = flameChartView.getMainFlameChart().timelineData()?.entryDecorations[nodeId];\n       assert.deepEqual(decorationsForEntry, [\n         {\n           type: PerfUI.FlameChart.FlameChartDecorationType.HIDDEN_DESCENDANTS_ARROW,\n         },\n       ]);\n       flameChartView.detach();\n     });\n\n  it('Removes Hidden Descendants Arrow as a decoration when Reset Children action is applied on a node',\n     async function() {\n       const parsedTrace = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n       const mockViewDelegate = new MockViewDelegate();\n\n       const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n       flameChartView.setModel(parsedTrace, new Map());\n       Timeline.ModificationsManager.ModificationsManager.activeManager();\n\n       // Find the main track to later collapse entries of\n       let mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n         return group.name === 'Main — http://localhost:8080/';\n       });\n       if (!mainTrack) {\n         throw new Error('Could not find main track');\n       }\n\n       // Find the first node that has children to collapse and is visible in the timeline\n       const nodeOfGroup = flameChartView.getMainDataProvider().groupTreeEvents(mainTrack);\n       const firstNodeWithChildren = nodeOfGroup?.find(node => {\n         const childrenAmount = parsedTrace.data.Renderer.entryToNode.get(node)?.children.length;\n         if (!childrenAmount) {\n           return false;\n         }\n         return childrenAmount > 0 && node.cat === 'devtools.timeline';\n       });\n       const node = parsedTrace.data.Renderer.entryToNode.get(firstNodeWithChildren as Trace.Types.Events.Event);\n       if (!node) {\n         throw new Error('Could not find a visible node with children');\n       }\n\n       // Apply COLLAPSE_FUNCTION Context Menu action to the node.\n       // This action will hide all the children of the passed node and add HIDDEN_DESCENDANTS_ARROW decoration to it.\n       flameChartView.getMainFlameChart().modifyTree(PerfUI.FlameChart.FilterAction.COLLAPSE_FUNCTION, node?.id);\n\n       let decorationsForEntry = flameChartView.getMainFlameChart().timelineData()?.entryDecorations[node?.id];\n       assert.deepEqual(decorationsForEntry, [\n         {\n           type: PerfUI.FlameChart.FlameChartDecorationType.HIDDEN_DESCENDANTS_ARROW,\n         },\n       ]);\n\n       mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n         return group.name === 'Main — http://localhost:8080/';\n       });\n       if (!mainTrack) {\n         throw new Error('Could not find main track');\n       }\n       // Apply a RESET_CHILDREN action that will reveal all of the hidden children of the passed node and remove HIDDEN_DESCENDANTS_ARROW decoration from it.\n       flameChartView.getMainFlameChart().modifyTree(PerfUI.FlameChart.FilterAction.RESET_CHILDREN, node?.id);\n\n       // No decorations should exist on the node\n       decorationsForEntry = flameChartView.getMainFlameChart().timelineData()?.entryDecorations[node?.id];\n       assert.isUndefined(decorationsForEntry);\n       flameChartView.detach();\n     });\n\n  it('renders metrics as marker overlays w/ tooltips', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'crux.json.gz');\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    flameChartView.setModel(parsedTrace, new Map());\n\n    const tooltips =\n        [...flameChartView.element.querySelectorAll('.overlay-type-TIMINGS_MARKER .marker-title')].map(el => {\n          el?.dispatchEvent(new MouseEvent('mousemove', {\n            clientX: 0,\n            clientY: 0,\n          }));\n          return flameChartView.element.querySelector('.timeline-entry-tooltip-element')\n              ?.textContent?.replaceAll('\\xa0', ' ');\n        });\n\n    assert.deepEqual(tooltips, [\n      '0 μsNav',\n      '43.98 msL',\n      '75.90 msFCP - Local939.00 msFCP - Field (URL)',\n      '75.90 msLCP - Local936.00 msLCP - Field (URL)',\n      '43.75 msDCL',\n    ]);\n    flameChartView.detach();\n  });\n\n  describe('Context Menu', function() {\n    let flameChartView: Timeline.TimelineFlameChartView.TimelineFlameChartView;\n    let parsedTrace: Trace.TraceModel.ParsedTrace;\n    const flameChartContainer = document.createElement('div');\n\n    this.beforeEach(async function() {\n      parsedTrace = await TraceLoader.traceEngine(this, 'recursive-blocking-js.json.gz');\n      const mockViewDelegate = new MockViewDelegate();\n\n      flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n      // If we run these tests with animations disabled, they hide some flakes\n      // where the animations are not correctly cancelled when the component is\n      // destroyed.\n      flameChartView.forceAnimationsForTest();\n      flameChartView.setModel(parsedTrace, new Map());\n      flameChartView.markAsRoot();\n      // IMPORTANT: we show the widget within the div, but the div is never\n      // added to the DOM.\n      // Adding the div to the DOM means that the tests below become flakey as\n      // they rely on X/Y coordinates and assume a top left point of (0, 0); if\n      // we mount the component to the DOM and another test mounts a component\n      // and doesn't tidy it up, the flamechart can end up not at (0, 0) and\n      // that breaks the context menu tests.\n      flameChartView.show(flameChartContainer);\n\n      Timeline.ModificationsManager.ModificationsManager.activeManager();\n      sinon.stub(UI.ContextMenu.ContextMenu.prototype, 'show').resolves();\n    });\n\n    this.afterEach(() => {\n      flameChartView.detach();\n    });\n\n    it('Does not create customized Context Menu for network track', async function() {\n      // The mouse event passed to the Context Menu is used to indicate where the menu should appear. Since we don't\n      // need it to actually appear for this test, pass an event with coordinates that is not in the track header.\n      flameChartView.getNetworkFlameChart().onContextMenu(new MouseEvent('contextmenu', {clientX: 100, clientY: 100}));\n      assert.isUndefined(flameChartView.getNetworkFlameChart().getContextMenu());\n    });\n\n    it('Does not create Context Menu for Network track header', async function() {\n      // So for the first track header, its x will start from beginning.\n      // And its y will start after the ruler (ruler's height is 17).\n      flameChartView.getNetworkFlameChart().onContextMenu(new MouseEvent('contextmenu', {clientX: 0, clientY: 17}));\n      assert.isUndefined(flameChartView.getNetworkFlameChart().getContextMenu());\n    });\n\n    it('Create correct Context Menu for track headers in main flame chart', async function() {\n      // So for the first track header, its x will start from beginning.\n      // And its y will start after the ruler (ruler's height is 17).\n      flameChartView.getMainFlameChart().onContextMenu(new MouseEvent('contextmenu', {clientX: 0, clientY: 17}));\n\n      assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 1);\n      assert.strictEqual(\n          flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.at(0)?.buildDescriptor().label,\n          'Configure tracks');\n    });\n\n    describe('Context Menu Actions For Thread tracks', function() {\n      this.beforeEach(async () => {\n        // Find the Main track to later collapse entries of\n        const mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n          return group.name === 'Main — http://127.0.0.1:8080/';\n        });\n        if (!mainTrack) {\n          throw new Error('Could not find main track');\n        }\n      });\n\n      function getMainThread(data: Trace.Handlers.ModelHandlers.Renderer.RendererHandlerData):\n          Trace.Handlers.ModelHandlers.Renderer.RendererThread {\n        let mainThread: Trace.Handlers.ModelHandlers.Renderer.RendererThread|null = null;\n        for (const [, process] of data.processes) {\n          for (const [, thread] of process.threads) {\n            if (thread.name === 'CrRendererMain') {\n              mainThread = thread;\n              break;\n            }\n          }\n        }\n        if (!mainThread) {\n          throw new Error('Could not find main thread.');\n        }\n        return mainThread;\n      }\n\n      function findFirstEntry(\n          allEntries: readonly Trace.Types.Events.Event[],\n          predicate: (entry: Trace.Types.Events.Event) => boolean): Trace.Types.Events.Event {\n        const entry = allEntries.find(entry => predicate(entry));\n        if (!entry) {\n          throw new Error('Could not find expected entry.');\n        }\n        return entry;\n      }\n\n      function generateContextMenuForNodeId(nodeId: number): void {\n        // Highlight the node to make the Context Menu dispatch on this node\n        flameChartView.getMainFlameChart().highlightEntry(nodeId);\n\n        const eventCoordinates = flameChartView.getMainFlameChart().entryIndexToCoordinates(nodeId);\n        if (!eventCoordinates) {\n          throw new Error('Coordinates were not found');\n        }\n\n        // The mouse event passed to the Context Menu is used to indicate where the menu should appear. So just simply\n        // use the pixels of top left corner of the event.\n        flameChartView.getMainFlameChart().onContextMenu(\n            new MouseEvent('contextmenu', {clientX: eventCoordinates.x, clientY: eventCoordinates.y}));\n      }\n\n      function generateContextMenuForNode(node: Trace.Types.Events.Event): void {\n        const nodeId = flameChartView.getMainDataProvider().indexForEvent(node);\n        assert.isNotNull(nodeId);\n        generateContextMenuForNodeId(nodeId);\n      }\n\n      it('When an entry has no children, correctly make only Hide Entry enabled in the Context Menu action',\n         async function() {\n           /**\n            * Part of this stack looks roughly like so (with some events omitted):\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * == now ==      == updateCounters ==  <-- ID=245\n            *\n            * In this test we want to test that the Context Menu option available\n            * for an entry with no children and a parent is to hide given entry only.\n            * Since there are no children to hide, we don't want to show 'hide children' option.\n            *\n            * To achieve that, we will dispatch the context menu on the 'updateCounters' function that does not have\n            * children.\n            * The ID of 'updateCounters' is 245.\n            **/\n\n           const nodeIdWithNoChildren = 245;\n           generateContextMenuForNodeId(nodeIdWithNoChildren);\n\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 5);\n           // Hide function enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(0)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Rest of the actions disabled\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(1)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(2)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(3)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(4)\n                              ?.buildDescriptor()\n                              .enabled);\n         });\n\n      it('When an entry has children, correctly make only Hide Entry and Hide Children enabled in the Context Menu action',\n         async function() {\n           /**\n            * Part of this stack looks roughly like so (with some events omitted):\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * ===== wait =====   ===== wait =====\n            * = now =  = now =   = now =  = now =\n            *\n            * In this test we want to test that the Context Menu option available\n            * for an entry with children and a parent is to hide given entry, and hide children only.\n            * Since there are no repeating children to hide, we don't want to show 'hide repeating children' option.\n            *\n            * To achieve that, we will dispatch the context menu on the 'wait' function that has only non-repeating\n            * children.\n            **/\n           const mainThread = getMainThread(parsedTrace.data.Renderer);\n           const entry = findFirstEntry(mainThread.entries, entry => {\n             return Trace.Types.Events.isProfileCall(entry) && entry.callFrame.functionName === 'wait';\n           });\n           const nodeIdWithNoChildren = flameChartView.getMainDataProvider().indexForEvent(entry);\n           assert.exists(nodeIdWithNoChildren);\n           generateContextMenuForNodeId(nodeIdWithNoChildren);\n\n           // This entry has URL, so there are 5 always-shown actions, and one to add script to ignore list.\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 6);\n           // Hide function enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(0)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Hide children enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(1)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Rest of the actions disabled\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(2)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(3)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(4)\n                              ?.buildDescriptor()\n                              .enabled);\n         });\n\n      it('When an entry has repeating children, correctly make only Hide Entry, Hide Children and Hide repeating children enabled in the Context Menu action',\n         async function() {\n           /**\n            * Part of this stack looks roughly like so (with some events omitted):\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * ===== wait =====   ===== wait =====\n            * = now =  = now =   = now =  = now =\n            *\n            * In this test we want to test that the Context Menu option available\n            * for an entry with children repeating children and a parent is to hide given entry, hide children and hide\n            * repeating children.\n            *\n            * To achieve that, we will dispatch the context menu on the 'foo' function that has child 'foo' calls.\n            **/\n\n           const mainThread = getMainThread(parsedTrace.data.Renderer);\n           const entry = findFirstEntry(mainThread.entries, entry => {\n             return Trace.Types.Events.isProfileCall(entry) && entry.callFrame.functionName === 'foo';\n           });\n\n           const nodeId = flameChartView.getMainDataProvider().indexForEvent(entry);\n           assert.exists(nodeId);\n\n           generateContextMenuForNodeId(nodeId);\n\n           // This entry has URL, so there are 5 always-shown actions, and one to add script to ignore list.\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 6);\n           // Hide function enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(0)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Hide children enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(1)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Hide repeating children enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(2)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Rest of the actions disabled\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(3)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(4)\n                              ?.buildDescriptor()\n                              .enabled);\n         });\n\n      it('When an entry has no parent and has children, correctly make only Hide Children enabled in the Context Menu action',\n         async function() {\n           /**\n            * Part of this stack looks roughly like so (with some events omitted):\n            * =============== Task ==============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * ===== wait =====   ===== wait =====\n            * = now =  = now =   = now =  = now =\n            *\n            * In this test we want to test that the Context Menu option available for an entry with no parent is only to\n            * hide children.\n            * If an entry has no parent, we don't want to show an option to hide the entry since when an entry is hidden,\n            * it is indicated by adding a decoration to the parent and if there is no parent, there is no way to show it\n            * is hidden.\n            *\n            * To achieve that, we will dispatch the context menu on the 'Task' function that is on the top of the stack\n            * and has no parent.\n            **/\n\n           const mainThread = getMainThread(parsedTrace.data.Renderer);\n           const entry = findFirstEntry(mainThread.entries, entry => {\n             const childrenAmount = parsedTrace.data.Renderer.entryToNode.get(entry)?.children.length;\n             if (!childrenAmount) {\n               return false;\n             }\n             return Trace.Types.Events.isRunTask(entry);\n           });\n\n           const nodeId = flameChartView.getMainDataProvider().indexForEvent(entry);\n           assert.exists(nodeId);\n\n           generateContextMenuForNodeId(nodeId);\n\n           // Hide function disabled\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(0)\n                              ?.buildDescriptor()\n                              .enabled);\n           // Hide children enabled\n           assert.isTrue(flameChartView.getMainFlameChart()\n                             .getContextMenu()\n                             ?.defaultSection()\n                             .items.at(1)\n                             ?.buildDescriptor()\n                             .enabled);\n           // Rest of the actions disabled\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(2)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(3)\n                              ?.buildDescriptor()\n                              .enabled);\n           assert.isFalse(flameChartView.getMainFlameChart()\n                              .getContextMenu()\n                              ?.defaultSection()\n                              .items.at(4)\n                              ?.buildDescriptor()\n                              .enabled);\n         });\n\n      it('Reset Trace Context Menu action is disabled before some action has been applied', async function() {\n        /**\n         * Part of this stack looks roughly like so (with some events omitted):\n         * =============== Task ==============\n         * =============== foo ===============\n         * =============== foo ===============\n         * =============== foo ===============\n         * =============== foo ===============\n         * =============== foo ===============\n         * =============== foo ===============\n         * ===== wait =====   ===== wait =====\n         * = now =  = now =   = now =  = now =\n         *\n         * In this test we want to test that the Reset Trace Context Menu option is disabled by default and enabled after\n         * some action has been applied.\n         *\n         * To achieve that, we will first check if Reset Trace is disabled and then dispatch a Context Menu action on\n         * \"Task\" entry and then check if Reset Trace is enabled.\n         **/\n\n        const mainThread = getMainThread(parsedTrace.data.Renderer);\n        const entry = findFirstEntry(mainThread.entries, entry => Trace.Types.Events.isRunTask(entry));\n        const nodeId = flameChartView.getMainDataProvider().indexForEvent(entry);\n        assert.exists(nodeId);\n\n        generateContextMenuForNodeId(nodeId);\n        assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 5);\n        assert.strictEqual(\n            flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.at(4)?.buildDescriptor().label,\n            'Reset trace');\n        // Check that Reset Trace is disabled\n        assert.isFalse(flameChartView.getMainFlameChart()\n                           .getContextMenu()\n                           ?.defaultSection()\n                           .items.at(4)\n                           ?.buildDescriptor()\n                           .enabled);\n\n        flameChartView.getMainFlameChart().modifyTree(PerfUI.FlameChart.FilterAction.MERGE_FUNCTION, nodeId);\n        generateContextMenuForNodeId(nodeId);\n\n        // Check that Reset Trace is enabled\n        assert.isTrue(flameChartView.getMainFlameChart()\n                          .getContextMenu()\n                          ?.defaultSection()\n                          .items.at(4)\n                          ?.buildDescriptor()\n                          .enabled);\n      });\n\n      it('When an entry has URL and is not ignored, correctly show the Add script to ignore list in the Context Menu action',\n         async function() {\n           const mainThread = getMainThread(parsedTrace.data.Renderer);\n           const entryWithUrl = findFirstEntry(mainThread.entries, entry => {\n             // Let's find the first entry with URL.\n             return Trace.Types.Events.isProfileCall(entry) && Boolean(entry.callFrame.url);\n           });\n           generateContextMenuForNode(entryWithUrl);\n\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 6);\n\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(5)\n                   ?.buildDescriptor()\n                   .label,\n               'Add script to ignore list');\n         });\n\n      it('When an entry has URL and is ignored, correctly show the Remove script from ignore list in the Context Menu action',\n         async function() {\n           const mainThread = getMainThread(parsedTrace.data.Renderer);\n           const entryWithIgnoredUrl = findFirstEntry(mainThread.entries, entry => {\n             // Let's find the first entry with URL.\n             return Trace.Types.Events.isProfileCall(entry) && Boolean(entry.callFrame.url);\n           });\n           Workspace.IgnoreListManager.IgnoreListManager.instance().ignoreListURL(\n               urlString`${(entryWithIgnoredUrl as Trace.Types.Events.SyntheticProfileCall).callFrame.url}`);\n\n           generateContextMenuForNode(entryWithIgnoredUrl);\n\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 6);\n\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(5)\n                   ?.buildDescriptor()\n                   .label,\n               'Remove script from ignore list');\n         });\n    });\n  });\n\n  describe('updating the active AI focus', () => {\n    it('updates the UI Context with the active AI Call tree for the selected event', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      const mockViewDelegate = new MockViewDelegate();\n      const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n      flameChartView.setModel(parsedTrace, new Map());\n      // Find some task in the main thread that we can build an AI Call Tree from\n      const task = allThreadEntriesInTrace(parsedTrace).find(event => {\n        return Trace.Types.Events.isRunTask(event) && event.dur > 5_000 &&\n            AIAssistance.AICallTree.fromEvent(event, parsedTrace) !== null;\n      });\n\n      assert.isOk(task);\n      UI.Context.Context.instance().setFlavor(AIAssistance.AgentFocus, null);\n      const selection = Timeline.TimelineSelection.selectionFromEvent(task);\n      flameChartView.setSelectionAndReveal(selection);\n      await doubleRaf();  // the updating of the AI Call Tree is done in a rAF to not block.\n      const flavor = UI.Context.Context.instance().flavor(AIAssistance.AgentFocus);\n      assert.instanceOf(flavor, AIAssistance.AgentFocus);\n    });\n  });\n\n  describe('Link between entries annotation in progress', function() {\n    let flameChartView: Timeline.TimelineFlameChartView.TimelineFlameChartView;\n    let parsedTrace: Trace.TraceModel.ParsedTrace;\n\n    this.beforeEach(async () => {\n      parsedTrace = await TraceLoader.traceEngine(this, 'recursive-blocking-js.json.gz');\n      const mockViewDelegate = new MockViewDelegate();\n\n      flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n      flameChartView.setModel(parsedTrace, new Map());\n      Timeline.ModificationsManager.ModificationsManager.activeManager();\n    });\n\n    it('Creates a `link between entries Annotation in progress` tracking object', async function() {\n      // Make sure the link annotation in the progress of creation does not exist\n      assert.isNull(flameChartView.getLinkSelectionAnnotation());\n\n      // Start creating a link between entries from an entry with ID 204\n      flameChartView.onEntriesLinkAnnotationCreate(flameChartView.getMainDataProvider(), 204);\n\n      // Make sure the link is started and only has 'from' entry set\n      assert.isNotNull(flameChartView.getLinkSelectionAnnotation());\n      assert.isNotNull(flameChartView.getLinkSelectionAnnotation()?.entryFrom);\n      assert.isUndefined(flameChartView.getLinkSelectionAnnotation()?.entryTo);\n\n      // Make sure the annotation exists in the ModificationsManager\n      const annotations = Timeline.ModificationsManager.ModificationsManager.activeManager()?.getAnnotations();\n      assert.exists(annotations);\n      assert.strictEqual(annotations?.length, 1);\n      assert.strictEqual(annotations[0].type, 'ENTRIES_LINK');\n    });\n\n    it('Sets the link between entries annotation in progress to null when the second entry is selected',\n       async function() {\n         // Make sure the link annotation in the progress of creation does not exist\n         assert.isNull(flameChartView.getLinkSelectionAnnotation());\n\n         // Start creating a link between entries from an entry with ID 204\n         flameChartView.onEntriesLinkAnnotationCreate(flameChartView.getMainDataProvider(), 204);\n         const entryFrom = flameChartView.getMainDataProvider().eventByIndex(204);\n\n         // Hover on another entry to complete the link\n         flameChartView.updateLinkSelectionAnnotationWithToEntry(flameChartView.getMainDataProvider(), 245);\n         const entryTo = flameChartView.getMainDataProvider().eventByIndex(245);\n         // Make sure the entry 'to' is set\n         assert.exists(flameChartView.getLinkSelectionAnnotation()?.entryTo);\n\n         // Select the other entry to complete the link and set the one in progress to null\n         flameChartView.handleToEntryOfLinkBetweenEntriesSelection(245);\n         // Make sure the link annotation in progress is set to null\n         assert.isNull(flameChartView.getLinkSelectionAnnotation());\n\n         // Make sure the annotation exists in the ModificationsManager\n         const annotations = Timeline.ModificationsManager.ModificationsManager.activeManager()?.getAnnotations();\n         assert.exists(annotations);\n         assert.strictEqual(annotations?.length, 1);\n         assert.strictEqual(annotations[0].type, 'ENTRIES_LINK');\n         const entriesLink = annotations[0] as Trace.Types.File.EntriesLinkAnnotation;\n\n         assert.strictEqual(entriesLink.entryFrom, entryFrom);\n         assert.strictEqual(entriesLink.entryTo, entryTo);\n       });\n\n    it('Reverses entries in the link if `to` entry timestamp is earlier than `from` entry timestamo', async function() {\n      // Make sure the link annotation in the progress of creation does not exist\n      assert.isNull(flameChartView.getLinkSelectionAnnotation());\n\n      // Start creating a link between entries from an entry with ID 245\n      flameChartView.onEntriesLinkAnnotationCreate(flameChartView.getMainDataProvider(), 245);\n      const entryFrom = flameChartView.getMainDataProvider().eventByIndex(245);\n\n      // Hover on another entry that starts before the entry that the link is being created from\n      flameChartView.updateLinkSelectionAnnotationWithToEntry(flameChartView.getMainDataProvider(), 204);\n      const entryTo = flameChartView.getMainDataProvider().eventByIndex(204);\n\n      // Select the other entry to complete the link and set the one in progress to null\n      flameChartView.handleToEntryOfLinkBetweenEntriesSelection(204);\n\n      // Make sure the annotation exists in the ModificationsManager\n      const annotations = Timeline.ModificationsManager.ModificationsManager.activeManager()?.getAnnotations();\n      assert.exists(annotations);\n      assert.strictEqual(annotations?.length, 1);\n      assert.strictEqual(annotations[0].type, 'ENTRIES_LINK');\n      const entriesLink = annotations[0] as Trace.Types.File.EntriesLinkAnnotation;\n\n      // Make 'entryFrom' has an earlier timestamp and the entries `to` and `from` got switched up\n      assert.strictEqual(entriesLink.entryFrom, entryTo);\n      assert.strictEqual(entriesLink.entryTo, entryFrom);\n    });\n  });\n});\n"]}