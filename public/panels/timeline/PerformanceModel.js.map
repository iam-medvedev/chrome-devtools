{"version":3,"file":"PerformanceModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/PerformanceModel.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AAEtD,OAAO,KAAK,aAAa,MAAM,+CAA+C,CAAC;AAC/E,OAAO,KAAK,WAAW,MAAM,6BAA6B,CAAC;AAC3D,OAAO,KAAK,WAAW,MAAM,6CAA6C,CAAC;AAE3E,MAAM,OAAO,gBAAiB,SAAQ,MAAM,CAAC,aAAa,CAAC,aAAyB;IAC1E,kBAAkB,CAAyB;IAC3C,oBAAoB,CAAuC;IAC3D,eAAe,CAA0D;IAChE,qBAAqB,CAAgD;IAC9E,cAAc,CAAS;IACvB,uBAAuB,CAAU;IACzC,uBAAuB,CAAoD;IAE3E;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAE1B,IAAI,CAAC,qBAAqB,GAAG,IAAI,aAAa,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACjF,IAAI,CAAC,cAAc,GAAG,EAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC;QAEjD,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;IAC3C,CAAC;IAED,aAAa,CAAC,MAAyB;QACrC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;IACnC,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED,kBAAkB,CAAC,IAAY;QAC7B,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;IACtC,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACtC,CAAC;IAED,UAAU,CAAC,OAAgE;QACzE,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;IACjC,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,SAAS,CAAC,KAA+B;QACvC,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,KAAsC,EAAE,gBAAgB,GAAG,KAAK;QACpF,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;IAChE,CAAC;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAC9B,MAAM,wDAAwD,CAAC;SAChE;QACD,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACnC,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,qBAAqB,CAAC;IACpC,CAAC;IAED,SAAS,CAAC,MAAc,EAAE,OAAiB,EAAE,UAA6D;QACxG,MAAM,2BAA2B,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI;YACxE,IAAI,CAAC,cAAc,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,uBAAuB,KAAK,UAAU,CAAC,CAAC,CAAC;QAChH,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC7B,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,uBAAuB,GAAG,UAAU,CAAC;SAC3C;QACD,IAAI,2BAA2B,EAAE;YAC/B,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,aAAa,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,gBAAgB,EAAE,UAAU,EAAC,CAAC,CAAC;YACrG,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,wBAAwB,CACrE,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,2BAA2B,CAClD,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAClD,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAClD,EACL,EAAC,aAAa,EAAE,OAAO,CAAC,OAAO,CAAC,EAAC,CACpC,CAAC;YACF,IAAI,UAAU,EAAE;gBACd,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;aAC/E;SACF;IACH,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,CAAC;IACxD,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,CAAC;IACxD,CAAC;CACF;AAED,wDAAwD;AACxD,+CAA+C;AAC/C,MAAM,CAAN,IAAY,MAGX;AAHD,WAAY,MAAM;IAChB,yCAA+B,CAAA;IAC/B,yCAA+B,CAAA;AACjC,CAAC,EAHW,MAAM,KAAN,MAAM,QAGjB","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\n\nexport class PerformanceModel extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private mainTargetInternal: SDK.Target.Target|null;\n  private tracingModelInternal: TraceEngine.Legacy.TracingModel|null;\n  private filtersInternal: TimelineModel.TimelineModelFilter.TimelineModelFilter[];\n  private readonly timelineModelInternal: TimelineModel.TimelineModel.TimelineModelImpl;\n  private windowInternal: Window;\n  private recordStartTimeInternal?: number;\n  #activeBreadcrumbWindow?: TraceEngine.Types.Timing.TraceWindowMicroSeconds;\n\n  constructor() {\n    super();\n    this.mainTargetInternal = null;\n    this.tracingModelInternal = null;\n    this.filtersInternal = [];\n\n    this.timelineModelInternal = new TimelineModel.TimelineModel.TimelineModelImpl();\n    this.windowInternal = {left: 0, right: Infinity};\n\n    this.recordStartTimeInternal = undefined;\n  }\n\n  setMainTarget(target: SDK.Target.Target): void {\n    this.mainTargetInternal = target;\n  }\n\n  mainTarget(): SDK.Target.Target|null {\n    return this.mainTargetInternal;\n  }\n\n  setRecordStartTime(time: number): void {\n    this.recordStartTimeInternal = time;\n  }\n\n  recordStartTime(): number|undefined {\n    return this.recordStartTimeInternal;\n  }\n\n  setFilters(filters: TimelineModel.TimelineModelFilter.TimelineModelFilter[]): void {\n    this.filtersInternal = filters;\n  }\n\n  filters(): TimelineModel.TimelineModelFilter.TimelineModelFilter[] {\n    return this.filtersInternal;\n  }\n\n  isVisible(event: TraceEngine.Legacy.Event): boolean {\n    return this.filtersInternal.every(f => f.accept(event));\n  }\n\n  async setTracingModel(model: TraceEngine.Legacy.TracingModel, isFreshRecording = false): Promise<void> {\n    this.tracingModelInternal = model;\n    this.timelineModelInternal.setEvents(model, isFreshRecording);\n  }\n\n  tracingModel(): TraceEngine.Legacy.TracingModel {\n    if (!this.tracingModelInternal) {\n      throw 'call setTracingModel before accessing PerformanceModel';\n    }\n    return this.tracingModelInternal;\n  }\n\n  timelineModel(): TimelineModel.TimelineModel.TimelineModelImpl {\n    return this.timelineModelInternal;\n  }\n\n  setWindow(window: Window, animate?: boolean, breadcrumb?: TraceEngine.Types.Timing.TraceWindowMicroSeconds): void {\n    const didWindowOrBreadcrumbChange = this.windowInternal.left !== window.left ||\n        this.windowInternal.right !== window.right || (breadcrumb && (this.#activeBreadcrumbWindow !== breadcrumb));\n    this.windowInternal = window;\n    if (breadcrumb) {\n      this.#activeBreadcrumbWindow = breadcrumb;\n    }\n    if (didWindowOrBreadcrumbChange) {\n      this.dispatchEventToListeners(Events.WindowChanged, {window, animate, breadcrumbWindow: breadcrumb});\n      TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(\n          TraceEngine.Helpers.Timing.traceWindowFromMilliSeconds(\n              TraceEngine.Types.Timing.MilliSeconds(window.left),\n              TraceEngine.Types.Timing.MilliSeconds(window.right),\n              ),\n          {shouldAnimate: Boolean(animate)},\n      );\n      if (breadcrumb) {\n        TraceBounds.TraceBounds.BoundsManager.instance().setMiniMapBounds(breadcrumb);\n      }\n    }\n  }\n\n  window(): Window {\n    return this.windowInternal;\n  }\n\n  minimumRecordTime(): number {\n    return this.timelineModelInternal.minimumRecordTime();\n  }\n\n  maximumRecordTime(): number {\n    return this.timelineModelInternal.maximumRecordTime();\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  WindowChanged = 'WindowChanged',\n  NamesResolved = 'NamesResolved',\n}\nexport interface WindowChangedEvent {\n  window: Window;\n  animate: boolean|undefined;\n  breadcrumbWindow?: TraceEngine.Types.Timing.TraceWindowMicroSeconds;\n}\n\nexport type EventTypes = {\n  [Events.WindowChanged]: WindowChangedEvent,\n  [Events.NamesResolved]: void,\n};\n\nexport interface Window {\n  left: number;\n  right: number;\n}\n"]}