{"version":3,"file":"AnnotationHelpers.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/AnnotationHelpers.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {microsecondsTraceWindow} from '../../testing/TraceHelpers.js';\n\nimport type * as Overlays from './overlays/overlays.js';\nimport * as Timeline from './timeline.js';\n\nconst {\n  getAnnotationEntries,\n  getAnnotationWindow,\n} = Timeline.AnnotationHelpers;\n\ndescribe('AnnotationHelpers', () => {\n  describe('getAnnotationEntries', () => {\n    const FAKE_ENTRY_1 = {} as unknown as Trace.Types.Events.Event;\n    const FAKE_ENTRY_2 = {} as unknown as Trace.Types.Events.Event;\n    it('returns the entry for an ENTRY_LABEL', async () => {\n      const annotation: Trace.Types.File.EntryLabelAnnotation = {\n        entry: FAKE_ENTRY_1,\n        label: 'Hello world',\n        type: 'ENTRY_LABEL',\n      };\n      assert.deepEqual(getAnnotationEntries(annotation), [FAKE_ENTRY_1]);\n    });\n\n    it('returns an empty array for a range', async () => {\n      const annotation: Trace.Types.File.TimeRangeAnnotation = {\n        bounds: Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n            Trace.Types.Timing.Micro(0),\n            Trace.Types.Timing.Micro(10),\n            ),\n        type: 'TIME_RANGE',\n        label: 'Hello world',\n      };\n      assert.lengthOf(getAnnotationEntries(annotation), 0);\n    });\n\n    it('returns both entries for a link', async () => {\n      const annotation: Trace.Types.File.EntriesLinkAnnotation = {\n        type: 'ENTRIES_LINK',\n        state: Trace.Types.File.EntriesLinkState.CONNECTED,\n        entryFrom: FAKE_ENTRY_1,\n        entryTo: FAKE_ENTRY_2,\n      };\n      assert.deepEqual(getAnnotationEntries(annotation), [FAKE_ENTRY_1, FAKE_ENTRY_2]);\n    });\n  });\n\n  describe('getAnnotationWindow', () => {\n    const FAKE_ENTRY_1 = {\n      ts: 1,\n      dur: 10,\n    } as unknown as Trace.Types.Events.Event;\n    const FAKE_ENTRY_2 = {\n      ts: 20,\n      dur: 5,\n    } as unknown as Trace.Types.Events.Event;\n\n    it('returns the entry window for an ENTRY_LABEL', async () => {\n      const annotation: Trace.Types.File.EntryLabelAnnotation = {\n        entry: FAKE_ENTRY_1,\n        label: 'Hello world',\n        type: 'ENTRY_LABEL',\n      };\n      assert.deepEqual(getAnnotationWindow(annotation), {\n        min: 1,\n        max: 11,\n        range: 10,\n      });\n    });\n\n    it('returns the bounds for a TIME_RANGE', async () => {\n      const annotation: Trace.Types.File.TimeRangeAnnotation = {\n        bounds: Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n            Trace.Types.Timing.Micro(0),\n            Trace.Types.Timing.Micro(10),\n            ),\n        type: 'TIME_RANGE',\n        label: 'Hello world',\n      };\n      assert.deepEqual(getAnnotationWindow(annotation), {\n        min: 0,\n        max: 10,\n        range: 10,\n      });\n    });\n\n    it('returns the bounds based on the start and end entry for an ENTRIES_LINK', async () => {\n      const annotation: Trace.Types.File.EntriesLinkAnnotation = {\n        type: 'ENTRIES_LINK',\n        state: Trace.Types.File.EntriesLinkState.CONNECTED,\n        entryFrom: FAKE_ENTRY_1,\n        entryTo: FAKE_ENTRY_2,\n      };\n      assert.deepEqual(getAnnotationWindow(annotation), {\n        min: 1,\n        max: 25,\n        range: 24,\n      });\n    });\n  });\n\n  describeWithEnvironment('Aria Announcement', () => {\n    const {ariaAnnouncementForModifiedEvent} = Timeline.AnnotationHelpers;\n    const FAKE_ENTRY_1 = {\n      name: 'fake-one',\n      ts: 1,\n      dur: 10,\n    } as unknown as Trace.Types.Events.Event;\n    const FAKE_ENTRY_2 = {\n      name: 'fake-two',\n      ts: 10,\n      dur: 10,\n    } as unknown as Trace.Types.Events.Event;\n\n    it('returns text for an annotation being removed', () => {\n      const overlay: Overlays.Overlays.EntryLabel = {type: 'ENTRY_LABEL', entry: FAKE_ENTRY_1, label: 'Hello world'};\n      const event = new Timeline.ModificationsManager.AnnotationModifiedEvent(overlay, 'Remove');\n      const text = ariaAnnouncementForModifiedEvent(event);\n      assert.strictEqual(text, 'The entry label annotation has been removed');\n    });\n\n    it('returns text for entering the edit state on a label', () => {\n      const overlay: Overlays.Overlays.EntryLabel = {type: 'ENTRY_LABEL', entry: FAKE_ENTRY_1, label: 'Hello world'};\n      const event = new Timeline.ModificationsManager.AnnotationModifiedEvent(overlay, 'EnterLabelEditState');\n      const text = ariaAnnouncementForModifiedEvent(event);\n      assert.strictEqual(text, 'Editing the annotation label text');\n    });\n\n    it('returns text for an annotation being added', async () => {\n      const overlay: Overlays.Overlays.EntryLabel = {type: 'ENTRY_LABEL', entry: FAKE_ENTRY_1, label: 'Hello world'};\n      const event = new Timeline.ModificationsManager.AnnotationModifiedEvent(overlay, 'Add');\n      const text = ariaAnnouncementForModifiedEvent(event);\n      assert.strictEqual(text, 'The entry label annotation has been added');\n    });\n\n    it('returns text for an annotation having its label updated', async () => {\n      const overlay: Overlays.Overlays.EntryLabel = {type: 'ENTRY_LABEL', entry: FAKE_ENTRY_1, label: 'Hello world'};\n      const event = new Timeline.ModificationsManager.AnnotationModifiedEvent(overlay, 'UpdateLabel');\n      const text = ariaAnnouncementForModifiedEvent(event);\n      assert.strictEqual(text, 'Label updated to Hello world');\n    });\n\n    it('returns text for a time range having its bounds updated', async () => {\n      TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true})\n          .resetWithNewBounds(\n              microsecondsTraceWindow(0, 10_000),\n          );\n      const timeRange: Overlays.Overlays.TimeRangeLabel = {\n        type: 'TIME_RANGE',\n        bounds: microsecondsTraceWindow(0, 5_000),\n        label: 'hello',\n        showDuration: true,\n      };\n      const event = new Timeline.ModificationsManager.AnnotationModifiedEvent(timeRange, 'UpdateTimeRange');\n      const text = ariaAnnouncementForModifiedEvent(event);\n      assert.strictEqual(text, 'Time range updated, starting at 0 ms and ending at 5 ms');\n    });\n\n    it('returns text when an entries link has its entries connected', async () => {\n      const link: Overlays.Overlays.EntriesLink = {\n        type: 'ENTRIES_LINK',\n        state: Trace.Types.File.EntriesLinkState.CONNECTED,\n        entryFrom: FAKE_ENTRY_1,\n        entryTo: FAKE_ENTRY_2,\n      };\n      const event = new Timeline.ModificationsManager.AnnotationModifiedEvent(link, 'UpdateLinkToEntry');\n      const text = ariaAnnouncementForModifiedEvent(event);\n      assert.strictEqual(text, 'The connected entries annotation now links from fake-one to fake-two');\n    });\n  });\n});\n"]}