{"version":3,"file":"AnnotationHelpers.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/AnnotationHelpers.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../models/trace/trace.js';\n\nimport * as Timeline from './timeline.js';\n\nconst {\n  getAnnotationEntries,\n  getAnnotationWindow,\n} = Timeline.AnnotationHelpers;\n\ndescribe('AnnotationHelpers', () => {\n  describe('getAnnotationEntries', () => {\n    const FAKE_ENTRY_1 = {} as unknown as Trace.Types.Events.Event;\n    const FAKE_ENTRY_2 = {} as unknown as Trace.Types.Events.Event;\n    it('returns the entry for an ENTRY_LABEL', async () => {\n      const annotation: Trace.Types.File.EntryLabelAnnotation = {\n        entry: FAKE_ENTRY_1,\n        label: 'Hello world',\n        type: 'ENTRY_LABEL',\n      };\n      assert.deepEqual(getAnnotationEntries(annotation), [FAKE_ENTRY_1]);\n    });\n\n    it('returns an empty array for a range', async () => {\n      const annotation: Trace.Types.File.TimeRangeAnnotation = {\n        bounds: Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n            Trace.Types.Timing.MicroSeconds(0),\n            Trace.Types.Timing.MicroSeconds(10),\n            ),\n        type: 'TIME_RANGE',\n        label: 'Hello world',\n      };\n      assert.lengthOf(getAnnotationEntries(annotation), 0);\n    });\n\n    it('returns both entries for a link', async () => {\n      const annotation: Trace.Types.File.EntriesLinkAnnotation = {\n        entryFrom: FAKE_ENTRY_1,\n        entryTo: FAKE_ENTRY_2,\n        type: 'ENTRIES_LINK',\n      };\n      assert.deepEqual(getAnnotationEntries(annotation), [FAKE_ENTRY_1, FAKE_ENTRY_2]);\n    });\n  });\n\n  describe('getAnnotationWindow', () => {\n    const FAKE_ENTRY_1 = {\n      ts: 1,\n      dur: 10,\n    } as unknown as Trace.Types.Events.Event;\n    const FAKE_ENTRY_2 = {\n      ts: 20,\n      dur: 5,\n    } as unknown as Trace.Types.Events.Event;\n\n    it('returns the entry window for an ENTRY_LABEL', async () => {\n      const annotation: Trace.Types.File.EntryLabelAnnotation = {\n        entry: FAKE_ENTRY_1,\n        label: 'Hello world',\n        type: 'ENTRY_LABEL',\n      };\n      assert.deepEqual(getAnnotationWindow(annotation), {\n        min: 1,\n        max: 11,\n        range: 10,\n      });\n    });\n\n    it('returns the bounds for a TIME_RANGE', async () => {\n      const annotation: Trace.Types.File.TimeRangeAnnotation = {\n        bounds: Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n            Trace.Types.Timing.MicroSeconds(0),\n            Trace.Types.Timing.MicroSeconds(10),\n            ),\n        type: 'TIME_RANGE',\n        label: 'Hello world',\n      };\n      assert.deepEqual(getAnnotationWindow(annotation), {\n        min: 0,\n        max: 10,\n        range: 10,\n      });\n    });\n\n    it('returns the bounds based on the start and end entry for an ENTRIES_LINK', async () => {\n      const annotation: Trace.Types.File.EntriesLinkAnnotation = {\n        entryFrom: FAKE_ENTRY_1,\n        entryTo: FAKE_ENTRY_2,\n        type: 'ENTRIES_LINK',\n      };\n      assert.deepEqual(getAnnotationWindow(annotation), {\n        min: 1,\n        max: 25,\n        range: 24,\n      });\n    });\n  });\n});\n"]}