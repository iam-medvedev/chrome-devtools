{"version":3,"file":"ExtensionUI.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/extensions/ExtensionUI.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,YAAY,MAAM,mDAAmD,CAAC;AAElF,MAAM,UAAU,mBAAmB,CAAC,KAAqD;IACvF,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;IAC/B,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAU,GAAG,sBAAsB,CAAC;IACxC,QAAQ,KAAK,EAAE,CAAC;QACd,KAAK,SAAS;YACZ,UAAU,GAAG,sBAAsB,CAAC;YACpC,MAAM;QACR,KAAK,eAAe;YAClB,UAAU,GAAG,sBAAsB,CAAC;YACpC,MAAM;QACR,KAAK,cAAc;YACjB,UAAU,GAAG,sBAAsB,CAAC;YACpC,MAAM;QACR,KAAK,WAAW;YACd,UAAU,GAAG,wBAAwB,CAAC;YACtC,MAAM;QACR,KAAK,iBAAiB;YACpB,UAAU,GAAG,wBAAwB,CAAC;YACtC,MAAM;QACR,KAAK,gBAAgB;YACnB,UAAU,GAAG,wBAAwB,CAAC;YACtC,MAAM;QACR,KAAK,UAAU;YACb,UAAU,GAAG,uBAAuB,CAAC;YACrC,MAAM;QACR,KAAK,gBAAgB;YACnB,UAAU,GAAG,uBAAuB,CAAC;YACrC,MAAM;QACR,KAAK,eAAe;YAClB,UAAU,GAAG,uBAAuB,CAAC;YACrC,MAAM;QACR,KAAK,SAAS;YACZ,UAAU,GAAG,wBAAwB,CAAC;YACtC,MAAM;QACR,KAAK,OAAO;YACV,UAAU,GAAG,uBAAuB,CAAC;YACrC,MAAM;IACV,CAAC;IACD,OAAO,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;AAC3E,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as ThemeSupport from '../../../ui/legacy/theme_support/theme_support.js';\n\nexport function extensionEntryColor(event: Trace.Types.Extensions.SyntheticExtensionEntry): string {\n  const color = event.args.color;\n  // Use a default value for when the color of the extension entry\n  // was not passed or was set an unknown value.\n  let themeColor = '--ref-palette-blue70';\n  switch (color) {\n    case 'primary':\n      themeColor = '--ref-palette-blue70';\n      break;\n    case 'primary-light':\n      themeColor = '--ref-palette-blue80';\n      break;\n    case 'primary-dark':\n      themeColor = '--ref-palette-blue60';\n      break;\n    case 'secondary':\n      themeColor = '--ref-palette-purple80';\n      break;\n    case 'secondary-light':\n      themeColor = '--ref-palette-purple90';\n      break;\n    case 'secondary-dark':\n      themeColor = '--ref-palette-purple70';\n      break;\n    case 'tertiary':\n      themeColor = '--ref-palette-green70';\n      break;\n    case 'tertiary-light':\n      themeColor = '--ref-palette-green80';\n      break;\n    case 'tertiary-dark':\n      themeColor = '--ref-palette-green60';\n      break;\n    case 'warning':\n      themeColor = '--ref-palette-yellow70';\n      break;\n    case 'error':\n      themeColor = '--ref-palette-error60';\n      break;\n  }\n  return ThemeSupport.ThemeSupport.instance().getComputedValue(themeColor);\n}\n"]}