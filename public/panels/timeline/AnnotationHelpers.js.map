{"version":3,"file":"AnnotationHelpers.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/AnnotationHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\n\nimport type {AnnotationModifiedEvent} from './ModificationsManager.js';\nimport type * as Overlays from './overlays/overlays.js';\nimport * as Utils from './utils/utils.js';\n\nconst UIStrings = {\n  /**\n   *@description text used to announce to a screen reader that they have entered the mode to edit the label\n   */\n  srEnterLabelEditMode: 'Editing the annotation label text',\n  /**\n   *@description text used to announce to a screen reader that the entry label text has been updated\n   *@example {Hello world} PH1\n   */\n  srLabelTextUpdated: 'Label updated to {PH1}',\n  /**\n   *@description text used to announce to a screen reader that the bounds of a time range annotation have been upodated\n   *@example {13ms} PH1\n   *@example {20ms} PH2\n   */\n  srTimeRangeBoundsUpdated: 'Time range updated, starting at {PH1} and ending at {PH2}',\n  /**\n   *@description label for a time range overlay\n   */\n  timeRange: 'time range',\n  /**\n   *@description label for a entry label overlay\n   */\n  entryLabel: 'entry label',\n  /**\n   *@description label for a connected entries overlay\n   */\n  entriesLink: 'connected entries',\n  /**\n   *@description screen reader text to announce that an annotation has been removed\n   *@example {Entry Label} PH1\n   */\n  srAnnotationRemoved: 'The {PH1} annotation has been removed',\n  /**\n   *@description screen reader text to announce that an annotation has been added\n   *@example {Entry Label} PH1\n   */\n  srAnnotationAdded: 'The {PH1} annotation has been added',\n  /**\n   *@description screen reader text to announce the two events that the connected entries annotation links to\n   *@example {Paint} PH1\n   *@example {Function call} PH2\n   */\n  srEntriesLinked: 'The connected entries annotation now links from {PH1} to {PH2}',\n\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/AnnotationHelpers.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport function getAnnotationEntries(\n    annotation: Trace.Types.File.Annotation,\n    ): Trace.Types.Events.Event[] {\n  const entries: Trace.Types.Events.Event[] = [];\n  switch (annotation.type) {\n    case 'ENTRY_LABEL':\n      entries.push(annotation.entry);\n      break;\n    case 'TIME_RANGE':\n      break;\n    case 'ENTRIES_LINK':\n      entries.push(annotation.entryFrom);\n      if (annotation.entryTo) {\n        entries.push(annotation.entryTo);\n      }\n      break;\n    default:\n      Platform.assertNever(annotation, 'Unsupported annotation type');\n  }\n  return entries;\n}\n\n/**\n * Gets a trace window that contains the given annotation. May return `null`\n * if there is no valid window (an ENTRIES_LINK without a `to` entry for\n * example.)\n */\nexport function getAnnotationWindow(\n    annotation: Trace.Types.File.Annotation,\n    ): Trace.Types.Timing.TraceWindowMicro|null {\n  let annotationWindow: Trace.Types.Timing.TraceWindowMicro|null = null;\n  const minVisibleEntryDuration = Trace.Types.Timing.Milli(1);\n\n  switch (annotation.type) {\n    case 'ENTRY_LABEL': {\n      const eventDuration = annotation.entry.dur ?? Trace.Helpers.Timing.milliToMicro(minVisibleEntryDuration);\n\n      annotationWindow = Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n          annotation.entry.ts,\n          Trace.Types.Timing.Micro(annotation.entry.ts + eventDuration),\n      );\n\n      break;\n    }\n    case 'TIME_RANGE': {\n      annotationWindow = annotation.bounds;\n      break;\n    }\n    case 'ENTRIES_LINK': {\n      // If entryTo does not exist, the annotation is in the process of being created.\n      // Do not allow to zoom into it in this case.\n      if (!annotation.entryTo) {\n        break;\n      }\n\n      const fromEventDuration = (annotation.entryFrom.dur) ?? minVisibleEntryDuration;\n      const toEventDuration = annotation.entryTo.dur ?? minVisibleEntryDuration;\n\n      // To choose window max, check which entry ends later\n      const fromEntryEndTS = (annotation.entryFrom.ts + fromEventDuration);\n      const toEntryEndTS = (annotation.entryTo.ts + toEventDuration);\n      const maxTimestamp = Math.max(fromEntryEndTS, toEntryEndTS);\n\n      annotationWindow = Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n          annotation.entryFrom.ts,\n          Trace.Types.Timing.Micro(maxTimestamp),\n      );\n      break;\n    }\n    default:\n      Platform.assertNever(annotation, 'Unsupported annotation type');\n  }\n\n  return annotationWindow;\n}\n\nexport function isTimeRangeLabel(overlay: Overlays.Overlays.TimelineOverlay):\n    overlay is Overlays.Overlays.TimeRangeLabel {\n  return overlay.type === 'TIME_RANGE';\n}\n\nexport function isEntriesLink(overlay: Overlays.Overlays.TimelineOverlay): overlay is Overlays.Overlays.EntriesLink {\n  return overlay.type === 'ENTRIES_LINK';\n}\n\nexport function isEntryLabel(overlay: Overlays.Overlays.TimelineOverlay): overlay is Overlays.Overlays.EntryLabel {\n  return overlay.type === 'ENTRY_LABEL';\n}\n\nfunction labelForOverlay(overlay: Overlays.Overlays.TimelineOverlay): string|null {\n  if (isTimeRangeLabel(overlay) || isEntryLabel(overlay)) {\n    return overlay.label;\n  }\n  return null;\n}\n\nexport function ariaDescriptionForOverlay(overlay: Overlays.Overlays.TimelineOverlay): string|null {\n  if (isTimeRangeLabel(overlay)) {\n    return i18nString(UIStrings.timeRange);\n  }\n  if (isEntriesLink(overlay)) {\n    return i18nString(UIStrings.entriesLink);\n  }\n  if (isEntryLabel(overlay)) {\n    return i18nString(UIStrings.entryLabel);\n  }\n\n  // Not an annotation overlay: ignore.\n  return null;\n}\n\nexport function ariaAnnouncementForModifiedEvent(event: AnnotationModifiedEvent): string|null {\n  const {overlay, action} = event;\n  switch (action) {\n    case 'Remove': {\n      const text = ariaDescriptionForOverlay(overlay);\n      if (text) {\n        return (i18nString(UIStrings.srAnnotationRemoved, {PH1: text}));\n      }\n      break;\n    }\n    case 'Add': {\n      const text = ariaDescriptionForOverlay(overlay);\n      if (text) {\n        return (i18nString(UIStrings.srAnnotationAdded, {PH1: text}));\n      }\n      break;\n    }\n    case 'UpdateLabel': {\n      const label = labelForOverlay(overlay);\n      if (label) {\n        return i18nString(UIStrings.srLabelTextUpdated, {PH1: label});\n      }\n      break;\n    }\n    case 'UpdateTimeRange': {\n      if (overlay.type !== 'TIME_RANGE') {\n        return '';\n      }\n      const traceBounds = TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.entireTraceBounds;\n      if (!traceBounds) {\n        return '';\n      }\n\n      const {min, max} = overlay.bounds;\n      const minText = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(\n          Trace.Types.Timing.Micro(min - traceBounds.min),\n      );\n      const maxText =\n          i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(Trace.Types.Timing.Micro(max - traceBounds.min));\n\n      return i18nString(UIStrings.srTimeRangeBoundsUpdated, {\n        PH1: minText,\n        PH2: maxText,\n      });\n    }\n    case 'UpdateLinkToEntry': {\n      if (isEntriesLink(overlay) && overlay.entryFrom && overlay.entryTo) {\n        const from = Utils.EntryName.nameForEntry(overlay.entryFrom);\n        const to = Utils.EntryName.nameForEntry(overlay.entryTo);\n        return (i18nString(UIStrings.srEntriesLinked, {PH1: from, PH2: to}));\n      }\n      break;\n    }\n    case 'EnterLabelEditState': {\n      return (i18nString(UIStrings.srEnterLabelEditMode));\n    }\n    default:\n      Platform.assertNever(action, 'Unsupported action for AnnotationModifiedEvent');\n  }\n\n  return null;\n}\n"]}