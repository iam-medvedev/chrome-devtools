{"version":3,"file":"AnnotationHelpers.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/AnnotationHelpers.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,QAAQ,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,KAAK,MAAM,6BAA6B,CAAC;AAErD,MAAM,UAAU,oBAAoB,CAChC,UAAuC;IAEzC,MAAM,OAAO,GAA+B,EAAE,CAAC;IAC/C,QAAQ,UAAU,CAAC,IAAI,EAAE,CAAC;QACxB,KAAK,aAAa;YAChB,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC/B,MAAM;QACR,KAAK,YAAY;YACf,MAAM;QACR,KAAK,cAAc;YACjB,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,UAAU,CAAC,OAAO,EAAE,CAAC;gBACvB,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACnC,CAAC;YACD,MAAM;QACR;YACE,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,6BAA6B,CAAC,CAAC;IACpE,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,mBAAmB,CAC/B,UAAuC;IAEzC,IAAI,gBAAgB,GAAoD,IAAI,CAAC;IAC7E,MAAM,uBAAuB,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAEnE,QAAQ,UAAU,CAAC,IAAI,EAAE,CAAC;QACxB,KAAK,aAAa,CAAC,CAAC,CAAC;YACnB,MAAM,aAAa,GACf,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,uBAAuB,CAAC,CAAC;YAErG,gBAAgB,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,2BAA2B,CAC/D,UAAU,CAAC,KAAK,CAAC,EAAE,EACnB,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,GAAG,aAAa,CAAC,CACvE,CAAC;YAEF,MAAM;QACR,CAAC;QACD,KAAK,YAAY,CAAC,CAAC,CAAC;YAClB,gBAAgB,GAAG,UAAU,CAAC,MAAM,CAAC;YACrC,MAAM;QACR,CAAC;QACD,KAAK,cAAc,CAAC,CAAC,CAAC;YACpB,gFAAgF;YAChF,6CAA6C;YAC7C,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;gBACxB,MAAM;YACR,CAAC;YAED,MAAM,iBAAiB,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,uBAAuB,CAAC;YAChF,MAAM,eAAe,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,IAAI,uBAAuB,CAAC;YAE1E,qDAAqD;YACrD,MAAM,cAAc,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,GAAG,iBAAiB,CAAC,CAAC;YACrE,MAAM,YAAY,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,GAAG,eAAe,CAAC,CAAC;YAC/D,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;YAE5D,gBAAgB,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,2BAA2B,CAC/D,UAAU,CAAC,SAAS,CAAC,EAAE,EACvB,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,CAChD,CAAC;YACF,MAAM;QACR,CAAC;QACD;YACE,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,6BAA6B,CAAC,CAAC;IACpE,CAAC;IAED,OAAO,gBAAgB,CAAC;AAC1B,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Trace from '../../models/trace/trace.js';\n\nexport function getAnnotationEntries(\n    annotation: Trace.Types.File.Annotation,\n    ): Trace.Types.Events.Event[] {\n  const entries: Trace.Types.Events.Event[] = [];\n  switch (annotation.type) {\n    case 'ENTRY_LABEL':\n      entries.push(annotation.entry);\n      break;\n    case 'TIME_RANGE':\n      break;\n    case 'ENTRIES_LINK':\n      entries.push(annotation.entryFrom);\n      if (annotation.entryTo) {\n        entries.push(annotation.entryTo);\n      }\n      break;\n    default:\n      Platform.assertNever(annotation, 'Unsupported annotation type');\n  }\n  return entries;\n}\n\n/**\n * Gets a trace window that contains the given annotation. May return `null`\n * if there is no valid window (an ENTRIES_LINK without a `to` entry for\n * example.)\n */\nexport function getAnnotationWindow(\n    annotation: Trace.Types.File.Annotation,\n    ): Trace.Types.Timing.TraceWindowMicroSeconds|null {\n  let annotationWindow: Trace.Types.Timing.TraceWindowMicroSeconds|null = null;\n  const minVisibleEntryDuration = Trace.Types.Timing.MilliSeconds(1);\n\n  switch (annotation.type) {\n    case 'ENTRY_LABEL': {\n      const eventDuration =\n          annotation.entry.dur ?? Trace.Helpers.Timing.millisecondsToMicroseconds(minVisibleEntryDuration);\n\n      annotationWindow = Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n          annotation.entry.ts,\n          Trace.Types.Timing.MicroSeconds(annotation.entry.ts + eventDuration),\n      );\n\n      break;\n    }\n    case 'TIME_RANGE': {\n      annotationWindow = annotation.bounds;\n      break;\n    }\n    case 'ENTRIES_LINK': {\n      // If entryTo does not exist, the annotation is in the process of being created.\n      // Do not allow to zoom into it in this case.\n      if (!annotation.entryTo) {\n        break;\n      }\n\n      const fromEventDuration = (annotation.entryFrom.dur) ?? minVisibleEntryDuration;\n      const toEventDuration = annotation.entryTo.dur ?? minVisibleEntryDuration;\n\n      // To choose window max, check which entry ends later\n      const fromEntryEndTS = (annotation.entryFrom.ts + fromEventDuration);\n      const toEntryEndTS = (annotation.entryTo.ts + toEventDuration);\n      const maxTimestamp = Math.max(fromEntryEndTS, toEntryEndTS);\n\n      annotationWindow = Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n          annotation.entryFrom.ts,\n          Trace.Types.Timing.MicroSeconds(maxTimestamp),\n      );\n      break;\n    }\n    default:\n      Platform.assertNever(annotation, 'Unsupported annotation type');\n  }\n\n  return annotationWindow;\n}\n"]}