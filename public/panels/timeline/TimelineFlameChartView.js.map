{"version":3,"file":"TimelineFlameChartView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineFlameChartView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {getAnnotationEntries, getAnnotationWindow} from './AnnotationHelpers.js';\nimport type * as TimelineComponents from './components/components.js';\nimport {CountersGraph} from './CountersGraph.js';\nimport {SHOULD_SHOW_EASTER_EGG} from './EasterEgg.js';\nimport {ModificationsManager} from './ModificationsManager.js';\nimport * as OverlayComponents from './overlays/components/components.js';\nimport * as Overlays from './overlays/overlays.js';\nimport {targetForEvent} from './TargetForEvent.js';\nimport {TimelineDetailsView} from './TimelineDetailsView.js';\nimport {TimelineRegExp} from './TimelineFilters.js';\nimport {\n  Events as TimelineFlameChartDataProviderEvents,\n  TimelineFlameChartDataProvider,\n} from './TimelineFlameChartDataProvider.js';\nimport {TimelineFlameChartNetworkDataProvider} from './TimelineFlameChartNetworkDataProvider.js';\nimport timelineFlameChartViewStyles from './timelineFlameChartView.css.js';\nimport {type TimelineModeViewDelegate} from './TimelinePanel.js';\nimport {TimelineSelection} from './TimelineSelection.js';\nimport {AggregatedTimelineTreeView} from './TimelineTreeView.js';\nimport {type TimelineMarkerStyle} from './TimelineUIUtils.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Timeline Flame Chart View of the Performance panel\n   *@example {Frame} PH1\n   *@example {10ms} PH2\n   */\n  sAtS: '{PH1} at {PH2}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineFlameChartView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst MAX_HIGHLIGHTED_SEARCH_ELEMENTS: number = 200;\n\nexport class TimelineFlameChartView extends UI.Widget.VBox implements PerfUI.FlameChart.FlameChartDelegate,\n                                                                      UI.SearchableView.Searchable {\n  private readonly delegate: TimelineModeViewDelegate;\n  /**\n   * Tracks the indexes of matched entries when the user searches the panel.\n   * Defaults to undefined which indicates the user has not searched.\n   */\n  private searchResults: PerfUI.FlameChart.DataProviderSearchResult[]|undefined = undefined;\n  private eventListeners: Common.EventTarget.EventDescriptor[];\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  private readonly networkSplitWidget: UI.SplitWidget.SplitWidget;\n  private mainDataProvider: TimelineFlameChartDataProvider;\n  private readonly mainFlameChart: PerfUI.FlameChart.FlameChart;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private readonly networkFlameChartGroupExpansionSetting: Common.Settings.Setting<any>;\n  private networkDataProvider: TimelineFlameChartNetworkDataProvider;\n  private readonly networkFlameChart: PerfUI.FlameChart.FlameChart;\n  private readonly networkPane: UI.Widget.VBox;\n  private readonly splitResizer: HTMLElement;\n  private readonly chartSplitWidget: UI.SplitWidget.SplitWidget;\n  private brickGame?: PerfUI.BrickBreaker.BrickBreaker;\n  private readonly countersView: CountersGraph;\n  private readonly detailsSplitWidget: UI.SplitWidget.SplitWidget;\n  private readonly detailsView: TimelineDetailsView;\n  private readonly onMainAddEntryLabelAnnotation: (event: Common.EventTarget.EventTargetEvent<{\n    entryIndex: number,\n    withLinkCreationButton: boolean,\n  }>) => void;\n  private readonly onNetworkAddEntryLabelAnnotation: (event: Common.EventTarget.EventTargetEvent<{\n    entryIndex: number,\n    withLinkCreationButton: boolean,\n  }>) => void;\n  readonly #onMainEntriesLinkAnnotationCreated:\n      (event: Common.EventTarget.EventTargetEvent<{entryFromIndex: number}>) => void;\n  readonly #onNetworkEntriesLinkAnnotationCreated:\n      (event: Common.EventTarget.EventTargetEvent<{entryFromIndex: number}>) => void;\n  private readonly onMainEntrySelected: (event: Common.EventTarget.EventTargetEvent<number>) => void;\n  private readonly onNetworkEntrySelected: (event: Common.EventTarget.EventTargetEvent<number>) => void;\n  readonly #boundRefreshAfterIgnoreList: () => void;\n  #selectedEvents: Trace.Types.Events.Event[]|null;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private readonly groupBySetting: Common.Settings.Setting<any>;\n  private searchableView!: UI.SearchableView.SearchableView;\n  private needsResizeToPreferredHeights?: boolean;\n  private selectedSearchResult?: PerfUI.FlameChart.DataProviderSearchResult;\n  private searchRegex?: RegExp;\n  #parsedTrace: Trace.Handlers.Types.ParsedTrace|null;\n  #traceInsightsSets: Trace.Insights.Types.TraceInsightSets|null = null;\n  #selectedGroupName: string|null = null;\n  #onTraceBoundsChangeBound = this.#onTraceBoundsChange.bind(this);\n  #gameKeyMatches = 0;\n  #gameTimeout = setTimeout(() => ({}), 0);\n\n  #overlaysContainer: HTMLElement = document.createElement('div');\n  #overlays: Overlays.Overlays.Overlays;\n\n  // Tracks the in-progress time range annotation when the user shift clicks + drags, or when the user uses the keyboard\n  #timeRangeSelectionAnnotation: Trace.Types.File.TimeRangeAnnotation|null = null;\n\n  // Keep track of the link annotation that hasn't been fully selected yet.\n  // We only store it here when only 'entryFrom' has been selected and\n  // 'EntryTo' selection still needs to be updated.\n  #linkSelectionAnnotation: Trace.Types.File.EntriesLinkAnnotation|null = null;\n\n  #currentInsightOverlays: Array<Overlays.Overlays.TimelineOverlay> = [];\n  #activeInsight: TimelineComponents.Sidebar.ActiveInsight|null = null;\n\n  #tooltipElement = document.createElement('div');\n\n  // We use an symbol as the loggable for each group. This is because\n  // groups can get re-built at times and we need a common reference to act as\n  // the reference for each group that we log. By storing these symbols in\n  // a map keyed off the context of the group, we ensure we persist the\n  // loggable even if the group gets rebuilt at some point in time.\n  #loggableForGroupByLogContext: Map<string, Symbol> = new Map();\n\n  #onMainEntryInvoked: (event: Common.EventTarget.EventTargetEvent<number>) => void;\n  #onNetworkEntryInvoked: (event: Common.EventTarget.EventTargetEvent<number>) => void;\n  #currentSelection: TimelineSelection|null = null;\n\n  constructor(delegate: TimelineModeViewDelegate) {\n    super();\n    this.element.classList.add('timeline-flamechart');\n\n    this.delegate = delegate;\n    this.eventListeners = [];\n    this.#parsedTrace = null;\n\n    const flameChartsContainer = new UI.Widget.VBox();\n    flameChartsContainer.element.classList.add('flame-charts-container');\n\n    // Create main and network flamecharts.\n    this.networkSplitWidget = new UI.SplitWidget.SplitWidget(false, false, 'timeline-flamechart-main-view', 150);\n    this.networkSplitWidget.show(flameChartsContainer.element);\n\n    this.#overlaysContainer.classList.add('timeline-overlays-container');\n    flameChartsContainer.element.appendChild(this.#overlaysContainer);\n\n    this.#tooltipElement.classList.add('timeline-entry-tooltip-element');\n    flameChartsContainer.element.appendChild(this.#tooltipElement);\n\n    // Ensure that the network panel & resizer appears above the main thread.\n    this.networkSplitWidget.sidebarElement().style.zIndex = '120';\n\n    const mainViewGroupExpansionSetting =\n        Common.Settings.Settings.instance().createSetting('timeline-flamechart-main-view-group-expansion', {});\n    this.mainDataProvider = new TimelineFlameChartDataProvider();\n    this.mainDataProvider.addEventListener(\n        TimelineFlameChartDataProviderEvents.DATA_CHANGED, () => this.mainFlameChart.scheduleUpdate());\n    this.mainFlameChart = new PerfUI.FlameChart.FlameChart(this.mainDataProvider, this, {\n      groupExpansionSetting: mainViewGroupExpansionSetting,\n      // The TimelineOverlays are used for selected elements\n      selectedElementOutline: false,\n      tooltipElement: this.#tooltipElement,\n      useOverlaysForCursorRuler: true,\n    });\n    this.mainFlameChart.alwaysShowVerticalScroll();\n    this.mainFlameChart.enableRuler(false);\n\n    this.mainFlameChart.addEventListener(PerfUI.FlameChart.Events.LATEST_DRAW_DIMENSIONS, dimensions => {\n      this.#overlays.updateChartDimensions('main', dimensions.data.chart);\n      this.#overlays.updateVisibleWindow(dimensions.data.traceWindow);\n      void this.#overlays.update();\n    });\n\n    this.networkFlameChartGroupExpansionSetting =\n        Common.Settings.Settings.instance().createSetting('timeline-flamechart-network-view-group-expansion', {});\n    this.networkDataProvider = new TimelineFlameChartNetworkDataProvider();\n    this.networkFlameChart = new PerfUI.FlameChart.FlameChart(this.networkDataProvider, this, {\n      groupExpansionSetting: this.networkFlameChartGroupExpansionSetting,\n      // The TimelineOverlays are used for selected elements\n      selectedElementOutline: false,\n      tooltipElement: this.#tooltipElement,\n      useOverlaysForCursorRuler: true,\n    });\n    this.networkFlameChart.alwaysShowVerticalScroll();\n    this.networkFlameChart.addEventListener(PerfUI.FlameChart.Events.LATEST_DRAW_DIMENSIONS, dimensions => {\n      this.#overlays.updateChartDimensions('network', dimensions.data.chart);\n      this.#overlays.updateVisibleWindow(dimensions.data.traceWindow);\n      void this.#overlays.update();\n\n      // If the height of the network chart has changed, we need to tell the\n      // main flame chart because its tooltips are positioned based in part on\n      // the height of the network chart.\n      this.mainFlameChart.setTooltipYPixelAdjustment(this.#overlays.networkChartOffsetHeight());\n    });\n\n    this.mainFlameChart.addEventListener(PerfUI.FlameChart.Events.MOUSE_MOVE, event => {\n      void this.#processFlameChartMouseMoveEvent(event.data);\n    });\n\n    this.networkFlameChart.addEventListener(PerfUI.FlameChart.Events.MOUSE_MOVE, event => {\n      void this.#processFlameChartMouseMoveEvent(event.data);\n    });\n\n    this.#overlays = new Overlays.Overlays.Overlays({\n      container: this.#overlaysContainer,\n      flameChartsContainers: {\n        main: this.mainFlameChart.element,\n        network: this.networkFlameChart.element,\n      },\n      charts: {\n        mainChart: this.mainFlameChart,\n        mainProvider: this.mainDataProvider,\n        networkChart: this.networkFlameChart,\n        networkProvider: this.networkDataProvider,\n      },\n      entryQueries: {\n        isEntryCollapsedByUser: (entry: Trace.Types.Events.Event): boolean => {\n          return ModificationsManager.activeManager()?.getEntriesFilter().entryIsInvisible(entry) ?? false;\n        },\n        firstVisibleParentForEntry(entry) {\n          return ModificationsManager.activeManager()?.getEntriesFilter().firstVisibleParentEntryForEntry(entry) ??\n              null;\n        },\n      },\n    });\n\n    this.#overlays.addEventListener(Overlays.Overlays.AnnotationOverlayActionEvent.eventName, event => {\n      const {overlay, action} = (event as Overlays.Overlays.AnnotationOverlayActionEvent);\n      if (action === 'Remove') {\n        // If the overlay removed is the current time range, set it to null so that\n        // we would create a new time range overlay and annotation on the next time range selection instead\n        // of trying to update the current overlay that does not exist.\n        if (ModificationsManager.activeManager()?.getAnnotationByOverlay(overlay) ===\n            this.#timeRangeSelectionAnnotation) {\n          this.#timeRangeSelectionAnnotation = null;\n        }\n        ModificationsManager.activeManager()?.removeAnnotationOverlay(overlay);\n      } else if (action === 'Update') {\n        ModificationsManager.activeManager()?.updateAnnotationOverlay(overlay);\n      }\n    });\n\n    this.element.addEventListener(OverlayComponents.EntriesLinkOverlay.EntryLinkStartCreating.eventName, () => {\n      /**\n       * When the user creates an entries link, they click on the arrow icon to\n       * begin creating it. At this point the arrow icon gets deleted. This\n       * causes the focus of the page by default to jump to the entire Timeline\n       * Panel. This is a bit aggressive; and problematic as it means we cannot\n       * use <ESC> to cancel the creation of the entry. So instead we focus the\n       * TimelineFlameChartView instead. This means that the user's <ESC> gets\n       * dealt with in its keydown.\n       * If the user goes ahead and creates the entry, they will end up\n       * focused on whichever target entry they pick, so this only matters for\n       * the case where the user hits <ESC> to cancel.\n       */\n      this.focus();\n    });\n\n    this.networkPane = new UI.Widget.VBox();\n    this.networkPane.setMinimumSize(23, 23);\n    this.networkFlameChart.show(this.networkPane.element);\n    this.splitResizer = this.networkPane.element.createChild('div', 'timeline-flamechart-resizer');\n    this.networkSplitWidget.hideDefaultResizer(true);\n    this.networkSplitWidget.installResizer(this.splitResizer);\n    this.networkSplitWidget.setMainWidget(this.mainFlameChart);\n    this.networkSplitWidget.setSidebarWidget(this.networkPane);\n\n    // Create counters chart splitter.\n    this.chartSplitWidget = new UI.SplitWidget.SplitWidget(false, true, 'timeline-counters-split-view-state');\n    this.countersView = new CountersGraph(this.delegate);\n    this.chartSplitWidget.setMainWidget(flameChartsContainer);\n    this.chartSplitWidget.setSidebarWidget(this.countersView);\n    this.chartSplitWidget.hideDefaultResizer();\n    this.chartSplitWidget.installResizer((this.countersView.resizerElement() as Element));\n\n    // Create top level properties splitter.\n    this.detailsSplitWidget = new UI.SplitWidget.SplitWidget(false, true, 'timeline-panel-details-split-view-state');\n    this.detailsSplitWidget.element.classList.add('timeline-details-split');\n    this.detailsView = new TimelineDetailsView(delegate);\n    this.detailsSplitWidget.installResizer(this.detailsView.headerElement());\n    this.detailsSplitWidget.setMainWidget(this.chartSplitWidget);\n    this.detailsSplitWidget.setSidebarWidget(this.detailsView);\n    this.detailsSplitWidget.show(this.element);\n\n    this.onMainAddEntryLabelAnnotation = this.onAddEntryLabelAnnotation.bind(this, this.mainDataProvider);\n    this.onNetworkAddEntryLabelAnnotation = this.onAddEntryLabelAnnotation.bind(this, this.networkDataProvider);\n    this.#onMainEntriesLinkAnnotationCreated = event =>\n        this.onEntriesLinkAnnotationCreate(this.mainDataProvider, event.data.entryFromIndex);\n    this.#onNetworkEntriesLinkAnnotationCreated = event =>\n        this.onEntriesLinkAnnotationCreate(this.networkDataProvider, event.data.entryFromIndex);\n    if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.TIMELINE_ANNOTATIONS)) {\n      this.mainFlameChart.addEventListener(\n          PerfUI.FlameChart.Events.ENTRY_LABEL_ANNOTATION_ADDED, this.onMainAddEntryLabelAnnotation, this);\n      this.networkFlameChart.addEventListener(\n          PerfUI.FlameChart.Events.ENTRY_LABEL_ANNOTATION_ADDED, this.onNetworkAddEntryLabelAnnotation, this);\n\n      this.mainFlameChart.addEventListener(\n          PerfUI.FlameChart.Events.ENTRIES_LINK_ANNOTATION_CREATED, this.#onMainEntriesLinkAnnotationCreated, this);\n      this.networkFlameChart.addEventListener(\n          PerfUI.FlameChart.Events.ENTRIES_LINK_ANNOTATION_CREATED, this.#onNetworkEntriesLinkAnnotationCreated, this);\n    }\n\n    /**\n     * NOTE: ENTRY_SELECTED, ENTRY_INVOKED and ENTRY_HOVERED are not always super obvious:\n     * ENTRY_SELECTED: is KEYBOARD ONLY selection of events (e.g. navigating through the flamechart with your arrow keys)\n     * ENTRY_HOVERED: is MOUSE ONLY when an event is hovered over with the mouse.\n     * ENTRY_INVOKED: is when the user cilcks on an event, or hits the \"enter\" key whilst an event is selected.\n     */\n    this.onMainEntrySelected = this.onEntrySelected.bind(this, this.mainDataProvider);\n    this.onNetworkEntrySelected = this.onEntrySelected.bind(this, this.networkDataProvider);\n    this.mainFlameChart.addEventListener(PerfUI.FlameChart.Events.ENTRY_SELECTED, this.onMainEntrySelected, this);\n    this.networkFlameChart.addEventListener(PerfUI.FlameChart.Events.ENTRY_SELECTED, this.onNetworkEntrySelected, this);\n\n    this.#onMainEntryInvoked = this.#onEntryInvoked.bind(this, this.mainDataProvider);\n    this.#onNetworkEntryInvoked = this.#onEntryInvoked.bind(this, this.networkDataProvider);\n    this.mainFlameChart.addEventListener(PerfUI.FlameChart.Events.ENTRY_INVOKED, this.#onMainEntryInvoked, this);\n    this.networkFlameChart.addEventListener(PerfUI.FlameChart.Events.ENTRY_INVOKED, this.#onNetworkEntryInvoked, this);\n\n    this.mainFlameChart.addEventListener(PerfUI.FlameChart.Events.ENTRY_HOVERED, event => {\n      this.onEntryHovered(event);\n      this.updateLinkSelectionAnnotationWithToEntry(this.mainDataProvider, event.data);\n    }, this);\n    this.networkFlameChart.addEventListener(PerfUI.FlameChart.Events.ENTRY_HOVERED, event => {\n      this.updateLinkSelectionAnnotationWithToEntry(this.networkDataProvider, event.data);\n    }, this);\n\n    this.element.addEventListener('keydown', this.#keydownHandler.bind(this));\n    this.element.addEventListener('pointerdown', this.#pointerDownHandler.bind(this));\n    this.#boundRefreshAfterIgnoreList = this.#refreshAfterIgnoreList.bind(this);\n    this.#selectedEvents = null;\n\n    this.groupBySetting = Common.Settings.Settings.instance().createSetting(\n        'timeline-tree-group-by', AggregatedTimelineTreeView.GroupBy.None);\n    this.groupBySetting.addChangeListener(this.refreshMainFlameChart, this);\n    this.refreshMainFlameChart();\n\n    TraceBounds.TraceBounds.onChange(this.#onTraceBoundsChangeBound);\n  }\n\n  setOverlays(overlays: Overlays.Overlays.TimelineOverlay[], options: Overlays.Overlays.TimelineOverlaySetOptions):\n      void {\n    this.bulkRemoveOverlays(this.#currentInsightOverlays);\n\n    this.#currentInsightOverlays = overlays;\n    if (this.#currentInsightOverlays.length === 0) {\n      return;\n    }\n\n    const traceBounds = TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.entireTraceBounds;\n    if (!traceBounds) {\n      return;\n    }\n\n    this.bulkAddOverlays(this.#currentInsightOverlays);\n\n    const entries: Trace.Types.Events.Event[] = [];\n    for (const overlay of this.#currentInsightOverlays) {\n      entries.push(...Overlays.Overlays.entriesForOverlay(overlay));\n    }\n\n    for (const entry of entries) {\n      // Ensure that the track for the entries are open.\n      this.#expandEntryTrack(entry);\n    }\n\n    if (options.updateTraceWindow) {\n      const overlaysBounds = Overlays.Overlays.traceWindowContainingOverlays(this.#currentInsightOverlays);\n      // Trace window covering all overlays expanded by 100% so that the overlays cover 50% of the visible window.\n      const expandedBounds =\n          Trace.Helpers.Timing.expandWindowByPercentOrToOneMillisecond(overlaysBounds, traceBounds, 100);\n\n      // Set the timeline visible window and ignore the minimap bounds. This\n      // allows us to pick a visible window even if the overlays are outside of\n      // the current breadcrumb. If this happens, the event listener for\n      // BoundsManager changes in TimelineMiniMap will detect it and activate\n      // the correct breadcrumb for us.\n      TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(\n          expandedBounds, {ignoreMiniMapBounds: true, shouldAnimate: true});\n    }\n\n    // Reveal entry if we have one.\n    if (entries.length !== 0) {\n      const earliestEntry =\n          entries.reduce((earliest, current) => (earliest.ts < current.ts ? earliest : current), entries[0]);\n      this.revealEventVertically(earliestEntry);\n    }\n  }\n\n  revealAnnotation(annotation: Trace.Types.File.Annotation): void {\n    const traceBounds = TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.entireTraceBounds;\n    if (!traceBounds) {\n      return;\n    }\n\n    const annotationWindow = getAnnotationWindow(annotation);\n    if (!annotationWindow) {\n      return;\n    }\n\n    const annotationEntries = getAnnotationEntries(annotation);\n\n    for (const entry of annotationEntries) {\n      this.#expandEntryTrack(entry);\n    }\n    const firstEntry = annotationEntries.at(0);\n    if (firstEntry) {\n      this.revealEventVertically(firstEntry);\n    }\n\n    // Trace window covering all overlays expanded by 100% so that the overlays cover 50% of the visible window.\n    const expandedBounds =\n        Trace.Helpers.Timing.expandWindowByPercentOrToOneMillisecond(annotationWindow, traceBounds, 100);\n    TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(\n        expandedBounds, {ignoreMiniMapBounds: true, shouldAnimate: true});\n  }\n\n  setActiveInsight(insight: TimelineComponents.Sidebar.ActiveInsight|null): void {\n    this.#activeInsight = insight;\n    this.bulkRemoveOverlays(this.#currentInsightOverlays);\n\n    if (!this.#activeInsight) {\n      return;\n    }\n\n    this.setOverlays(this.#activeInsight.overlays, {updateTraceWindow: true});\n  }\n\n  /**\n   * Expands the track / group that the given entry is in.\n   */\n  #expandEntryTrack(entry: Trace.Types.Events.Event): void {\n    const chartName = Overlays.Overlays.chartForEntry(entry);\n    const provider = chartName === 'main' ? this.mainDataProvider : this.networkDataProvider;\n    const entryChart = chartName === 'main' ? this.mainFlameChart : this.networkFlameChart;\n\n    const entryIndex = provider.indexForEvent?.(entry) ?? null;\n    if (entryIndex === null) {\n      return;\n    }\n\n    const group = provider.groupForEvent?.(entryIndex) ?? null;\n    if (!group) {\n      return;\n    }\n    const groupIndex = provider.timelineData().groups.indexOf(group);\n\n    if (!group.expanded && groupIndex > -1) {\n      entryChart.toggleGroupExpand(groupIndex);\n    }\n  }\n\n  async #processFlameChartMouseMoveEvent(data: PerfUI.FlameChart.EventTypes['MouseMove']): Promise<void> {\n    const {mouseEvent, timeInMicroSeconds} = data;\n    // If the user is no longer holding shift, remove any existing marker.\n    if (!mouseEvent.shiftKey) {\n      const removedCount = this.#overlays.removeOverlaysOfType('CURSOR_TIMESTAMP_MARKER');\n      if (removedCount > 0) {\n        // Don't trigger lots of updates on a mouse move if we didn't actually\n        // remove any overlays.\n        await this.#overlays.update();\n      }\n    }\n\n    if (!mouseEvent.metaKey && mouseEvent.shiftKey) {\n      // CURSOR_TIMESTAMP_MARKER is a singleton; if one already exists it will\n      // be updated rather than create an entirely new one.\n      this.addOverlay({\n        type: 'CURSOR_TIMESTAMP_MARKER',\n        timestamp: timeInMicroSeconds,\n      });\n    }\n  }\n\n  #pointerDownHandler(event: PointerEvent): void {\n    /**\n     * If the user is in the middle of creating an entry link annotation and\n     * right clicks, let's take that as a sign to exit and cancel.\n     * (buttons === 2 indicates a right click)\n     */\n    if (event.buttons === 2 && this.#linkSelectionAnnotation) {\n      this.#clearLinkSelectionAnnotation(true);\n      event.stopPropagation();\n    }\n  }\n\n  #clearLinkSelectionAnnotation(deleteCurrentLink: boolean): void {\n    if (this.#linkSelectionAnnotation === null) {\n      return;\n    }\n    // If the link in progress in cleared, make sure it's creation is complete. If not, delete it.\n    if (deleteCurrentLink || this.#linkSelectionAnnotation.state !== Trace.Types.File.EntriesLinkState.CONNECTED) {\n      ModificationsManager.activeManager()?.removeAnnotation(this.#linkSelectionAnnotation);\n    }\n    this.mainFlameChart.setLinkSelectionAnnotationIsInProgress(false);\n    this.networkFlameChart.setLinkSelectionAnnotationIsInProgress(false);\n    this.#linkSelectionAnnotation = null;\n  }\n\n  #setLinkSelectionAnnotation(linkSelectionAnnotation: Trace.Types.File.EntriesLinkAnnotation): void {\n    this.mainFlameChart.setLinkSelectionAnnotationIsInProgress(true);\n    this.networkFlameChart.setLinkSelectionAnnotationIsInProgress(true);\n    this.#linkSelectionAnnotation = linkSelectionAnnotation;\n  }\n\n  #createNewTimeRangeFromKeyboard(startTime: Trace.Types.Timing.MicroSeconds, endTime: Trace.Types.Timing.MicroSeconds):\n      void {\n    if (this.#timeRangeSelectionAnnotation) {\n      return;\n    }\n\n    this.#timeRangeSelectionAnnotation = {\n      bounds: Trace.Helpers.Timing.traceWindowFromMicroSeconds(startTime, endTime),\n      type: 'TIME_RANGE',\n      label: '',\n    };\n    ModificationsManager.activeManager()?.createAnnotation(this.#timeRangeSelectionAnnotation);\n  }\n\n  /**\n   * Handles key presses that could impact the creation of a time range overlay with the keyboard.\n   * @returns `true` if the event should not be propogated + have its default behaviour stopped.\n   */\n  #handleTimeRangeKeyboardCreation(event: KeyboardEvent): boolean {\n    const visibleWindow = TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.timelineTraceWindow;\n    if (!visibleWindow) {\n      return false;\n    }\n\n    // The amount we increment the time range by when using the arrow keys is\n    // 2% of the visible window.\n    const timeRangeIncrementValue = visibleWindow.range * 0.02;\n\n    switch (event.key) {\n      // ArrowLeft + ArrowRight adjusts the right hand bound (the max) of the time range\n      // Shift + ArrowRight also starts a range if there isn't one already\n      case 'ArrowRight': {\n        if (!this.#timeRangeSelectionAnnotation) {\n          if (event.shiftKey) {\n            let startTime = visibleWindow.min;\n            // Prefer the start time of the selected event, if there is one.\n            if (this.#currentSelection) {\n              startTime = Trace.Helpers.Timing.millisecondsToMicroseconds(this.#currentSelection.startTime);\n            }\n            this.#createNewTimeRangeFromKeyboard(\n                startTime, Trace.Types.Timing.MicroSeconds(startTime + timeRangeIncrementValue));\n            return true;\n          }\n          return false;\n        }\n\n        // Grow the RHS of the range, but limit it to the visible window.\n        this.#timeRangeSelectionAnnotation.bounds.max = Trace.Types.Timing.MicroSeconds(\n            Math.min(this.#timeRangeSelectionAnnotation.bounds.max + timeRangeIncrementValue, visibleWindow.max),\n        );\n        this.#timeRangeSelectionAnnotation.bounds.range = Trace.Types.Timing.MicroSeconds(\n            this.#timeRangeSelectionAnnotation.bounds.max - this.#timeRangeSelectionAnnotation.bounds.min,\n        );\n        ModificationsManager.activeManager()?.updateAnnotation(this.#timeRangeSelectionAnnotation);\n        return true;\n      }\n      case 'ArrowLeft': {\n        if (!this.#timeRangeSelectionAnnotation) {\n          return false;\n        }\n        this.#timeRangeSelectionAnnotation.bounds.max = Trace.Types.Timing.MicroSeconds(\n            // Shrink the RHS of the range, but make sure it cannot go below the min value.\n            Math.max(\n                this.#timeRangeSelectionAnnotation.bounds.max - timeRangeIncrementValue,\n                this.#timeRangeSelectionAnnotation.bounds.min + 1),\n        );\n        this.#timeRangeSelectionAnnotation.bounds.range = Trace.Types.Timing.MicroSeconds(\n            this.#timeRangeSelectionAnnotation.bounds.max - this.#timeRangeSelectionAnnotation.bounds.min,\n        );\n        ModificationsManager.activeManager()?.updateAnnotation(this.#timeRangeSelectionAnnotation);\n        return true;\n      }\n        // ArrowDown + ArrowUp adjusts the left hand bound (the min) of the time range\n      case 'ArrowUp': {\n        if (!this.#timeRangeSelectionAnnotation) {\n          return false;\n        }\n        this.#timeRangeSelectionAnnotation.bounds.min = Trace.Types.Timing.MicroSeconds(\n            // Increase the LHS of the range, but make sure it cannot go above the max value.\n            Math.min(\n                this.#timeRangeSelectionAnnotation.bounds.min + timeRangeIncrementValue,\n                this.#timeRangeSelectionAnnotation.bounds.max - 1),\n        );\n        this.#timeRangeSelectionAnnotation.bounds.range = Trace.Types.Timing.MicroSeconds(\n            this.#timeRangeSelectionAnnotation.bounds.max - this.#timeRangeSelectionAnnotation.bounds.min,\n        );\n        ModificationsManager.activeManager()?.updateAnnotation(this.#timeRangeSelectionAnnotation);\n        return true;\n      }\n      case 'ArrowDown': {\n        if (!this.#timeRangeSelectionAnnotation) {\n          return false;\n        }\n        this.#timeRangeSelectionAnnotation.bounds.min = Trace.Types.Timing.MicroSeconds(\n            // Decrease the LHS, but make sure it cannot go beyond the minimum visible window.\n            Math.max(this.#timeRangeSelectionAnnotation.bounds.min - timeRangeIncrementValue, visibleWindow.min),\n        );\n        this.#timeRangeSelectionAnnotation.bounds.range = Trace.Types.Timing.MicroSeconds(\n            this.#timeRangeSelectionAnnotation.bounds.max - this.#timeRangeSelectionAnnotation.bounds.min,\n        );\n        ModificationsManager.activeManager()?.updateAnnotation(this.#timeRangeSelectionAnnotation);\n        return true;\n      }\n      default: {\n        // If we get any other key, we take that as a sign the user is done. Most likely the keys come from them typing into the label :)\n        // If they do not type into the label, then the time range is not created.\n        this.#timeRangeSelectionAnnotation = null;\n\n        return false;\n      }\n    }\n  }\n\n  #keydownHandler(event: KeyboardEvent): void {\n    const keyCombo = 'fixme';\n\n    // `CREATION_NOT_STARTED` is only true in the state when both empty label and button to create connection are\n    // created at the same time. If any key is typed in that state, it means that the label is in focus and the key\n    // is typed into the label. This tells us that the user chose to create the\n    // label, not the connection. In that case, delete the connection.\n    if (this.#linkSelectionAnnotation &&\n        this.#linkSelectionAnnotation.state === Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED) {\n      this.#clearLinkSelectionAnnotation(true);\n      // We have dealt with the keypress as the user is typing into the label, so do not let it propogate up.\n      // This also ensures that if the user uses \"Escape\" they don't toggle the DevTools drawer.\n      event.stopPropagation();\n    }\n\n    /**\n     * If the user is in the middle of creating an entry link and hits Esc,\n     * cancel and clear out the pending annotation.\n     */\n    if (event.key === 'Escape' && this.#linkSelectionAnnotation) {\n      this.#clearLinkSelectionAnnotation(true);\n      event.stopPropagation();\n    }\n\n    const eventHandledByKeyboardTimeRange = this.#handleTimeRangeKeyboardCreation(event);\n    if (eventHandledByKeyboardTimeRange) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (event.key === keyCombo[this.#gameKeyMatches]) {\n      this.#gameKeyMatches++;\n      clearTimeout(this.#gameTimeout);\n      this.#gameTimeout = setTimeout(() => {\n        this.#gameKeyMatches = 0;\n      }, 2000);\n    } else {\n      this.#gameKeyMatches = 0;\n      clearTimeout(this.#gameTimeout);\n    }\n    if (this.#gameKeyMatches !== keyCombo.length) {\n      return;\n    }\n    this.runBrickBreakerGame();\n  }\n\n  runBrickBreakerGame(): void {\n    if (!SHOULD_SHOW_EASTER_EGG) {\n      return;\n    }\n    if ([...this.element.childNodes].find(child => child instanceof PerfUI.BrickBreaker.BrickBreaker)) {\n      return;\n    }\n    this.brickGame = new PerfUI.BrickBreaker.BrickBreaker(this.mainFlameChart);\n    this.brickGame.classList.add('brick-game');\n    this.element.append(this.brickGame);\n  }\n\n  #onTraceBoundsChange(event: TraceBounds.TraceBounds.StateChangedEvent): void {\n    if (event.updateType === 'MINIMAP_BOUNDS') {\n      // If the update type was a changing of the minimap bounds, we do not\n      // need to redraw the timeline.\n      return;\n    }\n\n    const visibleWindow = event.state.milli.timelineTraceWindow;\n    const shouldAnimate = Boolean(event.options.shouldAnimate);\n    this.mainFlameChart.setWindowTimes(visibleWindow.min, visibleWindow.max, shouldAnimate);\n    this.networkDataProvider.setWindowTimes(visibleWindow.min, visibleWindow.max);\n    this.networkFlameChart.setWindowTimes(visibleWindow.min, visibleWindow.max, shouldAnimate);\n    // Updating search results can be very expensive. Debounce to avoid over-calling it.\n    const debouncedUpdate = Common.Debouncer.debounce(() => {\n      this.updateSearchResults(false, false);\n    }, 100);\n    debouncedUpdate();\n  }\n\n  isNetworkTrackShownForTests(): boolean {\n    return this.networkSplitWidget.showMode() !== UI.SplitWidget.ShowMode.ONLY_MAIN;\n  }\n\n  getLinkSelectionAnnotation(): Trace.Types.File.EntriesLinkAnnotation|null {\n    return this.#linkSelectionAnnotation;\n  }\n\n  getMainDataProvider(): TimelineFlameChartDataProvider {\n    return this.mainDataProvider;\n  }\n\n  getNetworkDataProvider(): TimelineFlameChartNetworkDataProvider {\n    return this.networkDataProvider;\n  }\n\n  refreshMainFlameChart(): void {\n    this.mainFlameChart.update();\n  }\n\n  extensionDataVisibilityChanged(): void {\n    this.#reset();\n    this.mainDataProvider.reset(true);\n    this.mainDataProvider.timelineData(true);\n    this.refreshMainFlameChart();\n  }\n\n  windowChanged(\n      windowStartTime: Trace.Types.Timing.MilliSeconds, windowEndTime: Trace.Types.Timing.MilliSeconds,\n      animate: boolean): void {\n    TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(\n        Trace.Helpers.Timing.traceWindowFromMilliSeconds(\n            Trace.Types.Timing.MilliSeconds(windowStartTime),\n            Trace.Types.Timing.MilliSeconds(windowEndTime),\n            ),\n        {shouldAnimate: animate},\n    );\n  }\n\n  /**\n   * @param startTime - the start time of the selection in MilliSeconds\n   * @param endTime - the end time of the selection in MilliSeconds\n   * TODO(crbug.com/346312365): update the type definitions in ChartViewport.ts\n   */\n  updateRangeSelection(startTime: number, endTime: number): void {\n    this.delegate.select(TimelineSelection.fromRange(startTime, endTime));\n    if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.TIMELINE_ANNOTATIONS)) {\n      const bounds = Trace.Helpers.Timing.traceWindowFromMilliSeconds(\n          Trace.Types.Timing.MilliSeconds(startTime),\n          Trace.Types.Timing.MilliSeconds(endTime),\n      );\n\n      // If the current time range annotation has a label, the range selection\n      // for it is finished and we need to create a new time range annotations.\n      if (this.#timeRangeSelectionAnnotation && !this.#timeRangeSelectionAnnotation?.label) {\n        this.#timeRangeSelectionAnnotation.bounds = bounds;\n        ModificationsManager.activeManager()?.updateAnnotation(this.#timeRangeSelectionAnnotation);\n      } else {\n        this.#timeRangeSelectionAnnotation = {\n          type: 'TIME_RANGE',\n          label: '',\n          bounds,\n        };\n        ModificationsManager.activeManager()?.createAnnotation(this.#timeRangeSelectionAnnotation);\n      }\n    }\n  }\n\n  getMainFlameChart(): PerfUI.FlameChart.FlameChart {\n    return this.mainFlameChart;\n  }\n\n  // This function is public for test purpose.\n  getNetworkFlameChart(): PerfUI.FlameChart.FlameChart {\n    return this.networkFlameChart;\n  }\n\n  updateSelectedGroup(flameChart: PerfUI.FlameChart.FlameChart, group: PerfUI.FlameChart.Group|null): void {\n    if (flameChart !== this.mainFlameChart || this.#selectedGroupName === group?.name) {\n      return;\n    }\n    this.#selectedGroupName = group?.name || null;\n    this.#selectedEvents = group ? this.mainDataProvider.groupTreeEvents(group) : null;\n    this.#updateDetailViews();\n  }\n\n  setModel(newParsedTrace: Trace.Handlers.Types.ParsedTrace|null, isCpuProfile = false): void {\n    if (newParsedTrace === this.#parsedTrace) {\n      return;\n    }\n    this.#selectedGroupName = null;\n    this.#parsedTrace = newParsedTrace;\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n    this.#selectedEvents = null;\n    this.mainDataProvider.setModel(newParsedTrace, isCpuProfile);\n    this.networkDataProvider.setModel(newParsedTrace);\n    this.#reset();\n    this.updateSearchResults(false, false);\n    this.refreshMainFlameChart();\n    this.#updateFlameCharts();\n  }\n\n  setInsights(insights: Trace.Insights.Types.TraceInsightSets|null): void {\n    if (this.#traceInsightsSets === insights) {\n      return;\n    }\n    this.#traceInsightsSets = insights;\n    // The DetailsView is provided with the InsightSets, so make sure we update it.\n    this.#updateDetailViews();\n  }\n\n  #reset(): void {\n    if (this.networkDataProvider.isEmpty()) {\n      this.mainFlameChart.enableRuler(true);\n      this.networkSplitWidget.hideSidebar();\n    } else {\n      this.mainFlameChart.enableRuler(false);\n      this.networkSplitWidget.showBoth();\n      this.resizeToPreferredHeights();\n    }\n    this.#overlays.reset();\n    this.mainFlameChart.reset();\n    this.networkFlameChart.reset();\n    this.updateSearchResults(false, false);\n\n    const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n    if (!traceBoundsState) {\n      throw new Error('TimelineFlameChartView could not set the window bounds.');\n    }\n    const visibleWindow = traceBoundsState.milli.timelineTraceWindow;\n    this.mainFlameChart.setWindowTimes(visibleWindow.min, visibleWindow.max);\n    this.networkDataProvider.setWindowTimes(visibleWindow.min, visibleWindow.max);\n    this.networkFlameChart.setWindowTimes(visibleWindow.min, visibleWindow.max);\n  }\n\n  #refreshAfterIgnoreList(): void {\n    // The ignore list will only affect Thread tracks, which will only be in main flame chart.\n    // So just force recalculate and redraw the main flame chart here.\n    this.mainDataProvider.timelineData(true);\n    this.mainFlameChart.scheduleUpdate();\n  }\n\n  #updateDetailViews(): void {\n    this.countersView.setModel(this.#parsedTrace, this.#selectedEvents);\n    void this.detailsView.setModel(this.#parsedTrace, this.#selectedEvents, this.#traceInsightsSets);\n  }\n\n  #updateFlameCharts(): void {\n    this.mainFlameChart.scheduleUpdate();\n    this.networkFlameChart.scheduleUpdate();\n\n    this.#registerLoggableGroups();\n  }\n\n  #registerLoggableGroups(): void {\n    const groups = [\n      ...this.mainFlameChart.timelineData()?.groups ?? [],\n      ...this.networkFlameChart.timelineData()?.groups ?? [],\n    ];\n    for (const group of groups) {\n      if (!group.jslogContext) {\n        continue;\n      }\n      const loggable = this.#loggableForGroupByLogContext.get(group.jslogContext) ?? Symbol(group.jslogContext);\n\n      if (!this.#loggableForGroupByLogContext.has(group.jslogContext)) {\n        // This is the first time this group has been created, so register its loggable.\n        this.#loggableForGroupByLogContext.set(group.jslogContext, loggable);\n        VisualLogging.registerLoggable(\n            loggable, `${VisualLogging.section().context(`timeline.${group.jslogContext}`)}`, this.delegate.element);\n      }\n    }\n  }\n\n  // If an entry is hovered over and a creation of link annotation is in progress, update that annotation with a hovered entry.\n  updateLinkSelectionAnnotationWithToEntry(\n      dataProvider: TimelineFlameChartDataProvider|TimelineFlameChartNetworkDataProvider, entryIndex: number): void {\n    if (!this.#linkSelectionAnnotation ||\n        this.#linkSelectionAnnotation.state === Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED) {\n      return;\n    }\n    const toSelectionObject = this.#selectionIfTraceEvent(entryIndex, dataProvider);\n\n    if (toSelectionObject) {\n      // Prevent the user from creating a link that connects an entry to itself.\n      if (toSelectionObject === this.#linkSelectionAnnotation.entryFrom) {\n        return;\n      }\n      // Prevent the user from creating a link that connects an entry it's already connected to.\n      const linkBetweenEntriesExists = ModificationsManager.activeManager()?.linkAnnotationBetweenEntriesExists(\n          this.#linkSelectionAnnotation.entryFrom, toSelectionObject);\n      if (linkBetweenEntriesExists) {\n        return;\n      }\n\n      this.#linkSelectionAnnotation.state = Trace.Types.File.EntriesLinkState.CONNECTED;\n      this.#linkSelectionAnnotation.entryTo = toSelectionObject;\n    } else {\n      this.#linkSelectionAnnotation.state = Trace.Types.File.EntriesLinkState.PENDING_TO_EVENT;\n      delete this.#linkSelectionAnnotation['entryTo'];\n    }\n    ModificationsManager.activeManager()?.updateAnnotation(this.#linkSelectionAnnotation);\n  }\n\n  private onEntryHovered(commonEvent: Common.EventTarget.EventTargetEvent<number>): void {\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    const entryIndex = commonEvent.data;\n    const event = this.mainDataProvider.eventByIndex(entryIndex);\n    if (!event || !this.#parsedTrace) {\n      return;\n    }\n    if (event instanceof Trace.Handlers.ModelHandlers.Frames.TimelineFrame) {\n      return;\n    }\n\n    const target = targetForEvent(this.#parsedTrace, event);\n    if (!target) {\n      return;\n    }\n\n    const nodeIds = Trace.Extras.FetchNodes.nodeIdsForEvent(this.#parsedTrace, event);\n    for (const nodeId of nodeIds) {\n      new SDK.DOMModel.DeferredDOMNode(target, nodeId).highlight();\n    }\n  }\n\n  highlightEvent(event: Trace.Types.Events.Event|null): void {\n    const entryIndex =\n        event ? this.mainDataProvider.entryIndexForSelection(TimelineSelection.fromTraceEvent(event)) : -1;\n    if (entryIndex >= 0) {\n      this.mainFlameChart.highlightEntry(entryIndex);\n    } else {\n      this.mainFlameChart.hideHighlight();\n    }\n  }\n\n  override willHide(): void {\n    this.networkFlameChartGroupExpansionSetting.removeChangeListener(this.resizeToPreferredHeights, this);\n    Bindings.IgnoreListManager.IgnoreListManager.instance().removeChangeListener(this.#boundRefreshAfterIgnoreList);\n  }\n\n  override wasShown(): void {\n    this.registerCSSFiles([timelineFlameChartViewStyles]);\n    this.networkFlameChartGroupExpansionSetting.addChangeListener(this.resizeToPreferredHeights, this);\n    Bindings.IgnoreListManager.IgnoreListManager.instance().addChangeListener(this.#boundRefreshAfterIgnoreList);\n    if (this.needsResizeToPreferredHeights) {\n      this.resizeToPreferredHeights();\n    }\n    this.#updateFlameCharts();\n  }\n\n  updateCountersGraphToggle(showMemoryGraph: boolean): void {\n    if (showMemoryGraph) {\n      this.chartSplitWidget.showBoth();\n    } else {\n      this.chartSplitWidget.hideSidebar();\n    }\n  }\n\n  revealEvent(event: Trace.Types.Events.Event): void {\n    const mainIndex = this.mainDataProvider.indexForEvent(event);\n    const networkIndex = this.networkDataProvider.indexForEvent(event);\n    if (mainIndex !== null) {\n      this.mainFlameChart.revealEntry(mainIndex);\n    } else if (networkIndex !== null) {\n      this.networkFlameChart.revealEntry(networkIndex);\n    }\n  }\n\n  // Given an event, it reveals its position vertically\n  revealEventVertically(event: Trace.Types.Events.Event): void {\n    const mainIndex = this.mainDataProvider.indexForEvent(event);\n    const networkIndex = this.networkDataProvider.indexForEvent(event);\n    if (mainIndex !== null) {\n      this.mainFlameChart.revealEntryVertically(mainIndex);\n    } else if (networkIndex !== null) {\n      this.networkFlameChart.revealEntryVertically(networkIndex);\n    }\n  }\n\n  setSelectionAndReveal(selection: TimelineSelection|null): void {\n    this.#currentSelection = selection;\n    const mainIndex = this.mainDataProvider.entryIndexForSelection(selection);\n    const networkIndex = this.networkDataProvider.entryIndexForSelection(selection);\n    this.mainFlameChart.setSelectedEntry(mainIndex);\n    this.networkFlameChart.setSelectedEntry(networkIndex);\n\n    // Clear any existing entry selection.\n    this.#overlays.removeOverlaysOfType('ENTRY_SELECTED');\n    // If:\n    // 1. There is no selection, or the selection is not a range selection\n    // AND 2. we have an active time range selection overlay\n    // AND 3. The label of the selection is empty\n    // then we need to remove it.\n    if ((selection === null || !TimelineSelection.isRangeSelection(selection.object)) &&\n        this.#timeRangeSelectionAnnotation && !this.#timeRangeSelectionAnnotation.label) {\n      ModificationsManager.activeManager()?.removeAnnotation(this.#timeRangeSelectionAnnotation);\n      this.#timeRangeSelectionAnnotation = null;\n    }\n\n    let index = this.mainDataProvider.entryIndexForSelection(selection);\n    this.mainFlameChart.setSelectedEntry(index);\n    index = this.networkDataProvider.entryIndexForSelection(selection);\n    this.networkFlameChart.setSelectedEntry(index);\n    if (this.detailsView) {\n      // TODO(crbug.com/1459265):  Change to await after migration work.\n      void this.detailsView.setSelection(selection);\n    }\n\n    // Create the entry selected overlay if the selection represents a frame or trace event (either network, or anything else)\n    if (selection &&\n        (TimelineSelection.isTraceEventSelection(selection.object) ||\n         TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selection.object) ||\n         TimelineSelection.isLegacyTimelineFrame(selection.object))) {\n      this.addOverlay({\n        type: 'ENTRY_SELECTED',\n        entry: selection.object,\n      });\n    }\n\n    if (this.#linkSelectionAnnotation &&\n        this.#linkSelectionAnnotation.state === Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED) {\n      this.#clearLinkSelectionAnnotation(true);\n    }\n  }\n\n  /**\n   * Used to create multiple overlays at once without triggering a redraw for each one.\n   */\n  bulkAddOverlays(overlays: Overlays.Overlays.TimelineOverlay[]): void {\n    for (const overlay of overlays) {\n      this.#overlays.add(overlay);\n    }\n    void this.#overlays.update();\n  }\n\n  addOverlay<T extends Overlays.Overlays.TimelineOverlay>(newOverlay: T): T {\n    const overlay = this.#overlays.add(newOverlay);\n    void this.#overlays.update();\n    return overlay;\n  }\n\n  bulkRemoveOverlays(overlays: Overlays.Overlays.TimelineOverlay[]): void {\n    if (!overlays.length) {\n      return;\n    }\n\n    for (const overlay of overlays) {\n      this.#overlays.remove(overlay);\n    }\n    void this.#overlays.update();\n  }\n  removeOverlay(removedOverlay: Overlays.Overlays.TimelineOverlay): void {\n    this.#overlays.remove(removedOverlay);\n    void this.#overlays.update();\n  }\n\n  updateExistingOverlay<T extends Overlays.Overlays.TimelineOverlay>(existingOverlay: T, newData: Partial<T>): void {\n    this.#overlays.updateExisting(existingOverlay, newData);\n    void this.#overlays.update();\n  }\n\n  enterLabelEditMode(overlay: Overlays.Overlays.EntryLabel): void {\n    this.#overlays.enterLabelEditMode(overlay);\n  }\n\n  private onAddEntryLabelAnnotation(\n      dataProvider: TimelineFlameChartDataProvider|TimelineFlameChartNetworkDataProvider,\n      event: Common.EventTarget.EventTargetEvent<{entryIndex: number, withLinkCreationButton: boolean}>): void {\n    const selection = dataProvider.createSelection(event.data.entryIndex);\n    if (selection &&\n        (TimelineSelection.isTraceEventSelection(selection.object) ||\n         TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selection.object) ||\n         TimelineSelection.isLegacyTimelineFrame(selection.object))) {\n      this.setSelectionAndReveal(selection);\n      ModificationsManager.activeManager()?.createAnnotation({\n        type: 'ENTRY_LABEL',\n        entry: selection.object,\n        label: '',\n      });\n      if (event.data.withLinkCreationButton) {\n        this.onEntriesLinkAnnotationCreate(dataProvider, event.data.entryIndex, true);\n      }\n    }\n  }\n\n  onEntriesLinkAnnotationCreate(\n      dataProvider: TimelineFlameChartDataProvider|TimelineFlameChartNetworkDataProvider, entryFromIndex: number,\n      linkCreateButton?: boolean): void {\n    const fromSelectionObject = (entryFromIndex) ? this.#selectionIfTraceEvent(entryFromIndex, dataProvider) : null;\n\n    if (fromSelectionObject) {\n      this.#setLinkSelectionAnnotation({\n        type: 'ENTRIES_LINK',\n        entryFrom: fromSelectionObject,\n        state: (linkCreateButton) ? Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED :\n                                    Trace.Types.File.EntriesLinkState.PENDING_TO_EVENT,\n      });\n      if (this.#linkSelectionAnnotation) {\n        ModificationsManager.activeManager()?.createAnnotation(this.#linkSelectionAnnotation);\n      }\n    }\n  }\n\n  #selectionIfTraceEvent(\n      index: number, dataProvider: TimelineFlameChartDataProvider|TimelineFlameChartNetworkDataProvider):\n      Trace.Types.Events.Event|Trace.Types.Events.SyntheticNetworkRequest|null {\n    const selection = dataProvider.createSelection(index);\n    if (!selection) {\n      return null;\n    }\n\n    if (TimelineSelection.isTraceEventSelection(selection.object) ||\n        TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selection.object)) {\n      return selection.object;\n    }\n\n    if (TimelineSelection.isLegacyTimelineFrame(selection.object)) {\n      return selection.object as Trace.Types.Events.LegacyTimelineFrame;\n    }\n\n    return null;\n  }\n\n  /**\n   * Called when the user either:\n   * 1. clicks with their mouse on an entry\n   * 2. Uses the keyboard and presses \"enter\" whilst an entry is selected\n   */\n  #onEntryInvoked(\n      dataProvider: TimelineFlameChartDataProvider|TimelineFlameChartNetworkDataProvider,\n      event: Common.EventTarget.EventTargetEvent<number>): void {\n    this.#updateSelectedEntryStatus(dataProvider, event);\n\n    const entryIndex = event.data;\n    // If we have a pending link connection, create it if we can now the final entry has been pressed.\n    if (this.#linkSelectionAnnotation) {\n      this.handleToEntryOfLinkBetweenEntriesSelection(entryIndex);\n    }\n  }\n\n  #updateSelectedEntryStatus(\n      dataProvider: TimelineFlameChartDataProvider|TimelineFlameChartNetworkDataProvider,\n      event: Common.EventTarget.EventTargetEvent<number>): void {\n    const data = dataProvider.timelineData();\n    if (!data) {\n      return;\n    }\n    const entryIndex = event.data;\n\n    const entryLevel = data.entryLevels[entryIndex];\n\n    // Find the group that contains this level and log a click for it.\n    const group = groupForLevel(data.groups, entryLevel);\n    if (group && group.jslogContext) {\n      const loggable = this.#loggableForGroupByLogContext.get(group.jslogContext) ?? null;\n      if (loggable) {\n        VisualLogging.logClick(loggable, new MouseEvent('click'));\n      }\n    }\n\n    dataProvider.buildFlowForInitiator(entryIndex);\n    this.delegate.select(dataProvider.createSelection(entryIndex));\n  }\n\n  /**\n   * This is invoked when the user uses their KEYBOARD ONLY to navigate between\n   * events.\n   * It IS NOT called when the user uses the mouse. See `onEntryInvoked`.\n   */\n  private onEntrySelected(\n      dataProvider: TimelineFlameChartDataProvider|TimelineFlameChartNetworkDataProvider,\n      event: Common.EventTarget.EventTargetEvent<number>): void {\n    this.#updateSelectedEntryStatus(dataProvider, event);\n\n    // Update any pending link selection to point the entryTo to what the user has selected.\n    const entryIndex = event.data;\n    const toSelectionObject = this.#selectionIfTraceEvent(entryIndex, dataProvider);\n    if (toSelectionObject && toSelectionObject !== this.#linkSelectionAnnotation?.entryTo) {\n      this.updateLinkSelectionAnnotationWithToEntry(dataProvider, entryIndex);\n    }\n  }\n\n  handleToEntryOfLinkBetweenEntriesSelection(toIndex: number): void {\n    // If there is a link annotation in the process of being created when an empty\n    // space in the Flamechart is clicked, delete the link being created.\n    //\n    // If an entry is clicked when a link between entries in created and the entry that an arrow\n    // is pointing to is earlier than the one it starts from, switch 'to' and 'from' entries to\n    // reverse the arrow.\n    if (this.#linkSelectionAnnotation && toIndex === -1) {\n      ModificationsManager.activeManager()?.removeAnnotation(this.#linkSelectionAnnotation);\n    } else if (\n        this.#linkSelectionAnnotation && this.#linkSelectionAnnotation?.entryTo &&\n        (this.#linkSelectionAnnotation?.entryFrom.ts > this.#linkSelectionAnnotation?.entryTo.ts)) {\n      const entryFrom = this.#linkSelectionAnnotation.entryFrom;\n      const entryTo = this.#linkSelectionAnnotation.entryTo;\n      this.#linkSelectionAnnotation.entryTo = entryFrom;\n      this.#linkSelectionAnnotation.entryFrom = entryTo;\n      ModificationsManager.activeManager()?.updateAnnotation(this.#linkSelectionAnnotation);\n    }\n    // Regardless of if the link in progress was deleted or the clicked entry is the final selection,\n    // set the link selection in progress to null so a new one is created if the an event to create\n    // of update the current link is dispatched.\n    this.#clearLinkSelectionAnnotation(false);\n  }\n\n  resizeToPreferredHeights(): void {\n    if (!this.isShowing()) {\n      this.needsResizeToPreferredHeights = true;\n      return;\n    }\n    this.needsResizeToPreferredHeights = false;\n    this.networkPane.element.classList.toggle(\n        'timeline-network-resizer-disabled', !this.networkDataProvider.isExpanded());\n    this.networkSplitWidget.setSidebarSize(\n        this.networkDataProvider.preferredHeight() + this.splitResizer.clientHeight + PerfUI.FlameChart.RulerHeight +\n        2);\n  }\n\n  setSearchableView(searchableView: UI.SearchableView.SearchableView): void {\n    this.searchableView = searchableView;\n  }\n\n  // UI.SearchableView.Searchable implementation\n\n  searchResultIndexForEntryIndex(index: number): number {\n    if (!this.searchResults) {\n      return -1;\n    }\n    return this.searchResults.findIndex(result => result.index === index);\n  }\n\n  jumpToNextSearchResult(): void {\n    if (!this.searchResults || !this.searchResults.length) {\n      return;\n    }\n    const index =\n        typeof this.selectedSearchResult !== 'undefined' ? this.searchResults.indexOf(this.selectedSearchResult) : -1;\n    this.#selectSearchResult(Platform.NumberUtilities.mod(index + 1, this.searchResults.length));\n  }\n\n  jumpToPreviousSearchResult(): void {\n    if (!this.searchResults || !this.searchResults.length) {\n      return;\n    }\n    const index =\n        typeof this.selectedSearchResult !== 'undefined' ? this.searchResults.indexOf(this.selectedSearchResult) : 0;\n    this.#selectSearchResult(Platform.NumberUtilities.mod(index - 1, this.searchResults.length));\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return true;\n  }\n\n  #selectSearchResult(searchResultIndex: number): void {\n    this.searchableView.updateCurrentMatchIndex(searchResultIndex);\n    const matchedResult = this.searchResults?.at(searchResultIndex) ?? null;\n    if (!matchedResult) {\n      return;\n    }\n\n    switch (matchedResult.provider) {\n      case 'main': {\n        this.delegate.select(this.mainDataProvider.createSelection(matchedResult.index));\n        this.mainFlameChart.showPopoverForSearchResult(matchedResult.index);\n        break;\n      }\n      case 'network': {\n        this.delegate.select(this.networkDataProvider.createSelection(matchedResult.index));\n        this.networkFlameChart.showPopoverForSearchResult(matchedResult.index);\n        break;\n      }\n      case 'other':\n        // TimelineFlameChartView only has main/network so we can ignore.\n        break;\n      default:\n        Platform.assertNever(matchedResult.provider, `Unknown SearchResult[provider]: ${matchedResult.provider}`);\n    }\n    this.selectedSearchResult = matchedResult;\n  }\n\n  private updateSearchResults(shouldJump: boolean, jumpBackwards?: boolean): void {\n    const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n    if (!traceBoundsState) {\n      return;\n    }\n\n    const oldSelectedSearchResult = this.selectedSearchResult;\n    delete this.selectedSearchResult;\n    this.searchResults = [];\n    this.mainFlameChart.removeSearchResultHighlights();\n    this.networkFlameChart.removeSearchResultHighlights();\n    if (!this.searchRegex) {\n      return;\n    }\n    const regExpFilter = new TimelineRegExp(this.searchRegex);\n    const visibleWindow = traceBoundsState.micro.timelineTraceWindow;\n\n    /**\n     * Get the matches for the user's search result. We search both providers\n     * but before storing the results we need to \"tag\" the results with the\n     * provider they came from. We do this so that when the user highlights a\n     * search result we know which flame chart to talk to to highlight it.\n     */\n    const mainMatches = this.mainDataProvider.search(visibleWindow, regExpFilter);\n    const networkMatches = this.networkDataProvider.search(visibleWindow, regExpFilter);\n\n    // Merge both result sets into one, sorted by start time. This means as the\n    // user navigates back/forwards they will do so in time order and not do\n    // all the main results before the network results, or some other\n    // unexpected ordering.\n    this.searchResults = mainMatches.concat(networkMatches).sort((m1, m2) => {\n      return m1.startTimeMilli - m2.startTimeMilli;\n    });\n\n    this.searchableView.updateSearchMatchesCount(this.searchResults.length);\n\n    // To avoid too many highlights when the search regex matches too many entries,\n    // for example, when user only types in \"e\" as the search query,\n    // We only highlight the search results when the number of matches is less than or equal to 200.\n    if (this.searchResults.length <= MAX_HIGHLIGHTED_SEARCH_ELEMENTS) {\n      this.mainFlameChart.highlightAllEntries(mainMatches.map(m => m.index));\n      this.networkFlameChart.highlightAllEntries(networkMatches.map(m => m.index));\n    }\n    if (!shouldJump || !this.searchResults.length) {\n      return;\n    }\n    let selectedIndex = this.#indexOfSearchResult(oldSelectedSearchResult);\n    if (selectedIndex === -1) {\n      selectedIndex = jumpBackwards ? this.searchResults.length - 1 : 0;\n    }\n    this.#selectSearchResult(selectedIndex);\n  }\n\n  #indexOfSearchResult(target?: PerfUI.FlameChart.DataProviderSearchResult): number {\n    if (!target) {\n      return -1;\n    }\n\n    return this.searchResults?.findIndex(result => {\n      return result.provider === target.provider && result.index === target.index;\n    }) ??\n        -1;\n  }\n\n  /**\n   * Returns the indexes of the elements that matched the most recent\n   * query. Elements are indexed by the data provider and correspond\n   * to their position in the data provider entry data array.\n   * Public only for tests.\n   */\n  getSearchResults(): PerfUI.FlameChart.DataProviderSearchResult[]|undefined {\n    return this.searchResults;\n  }\n\n  onSearchCanceled(): void {\n    if (typeof this.selectedSearchResult !== 'undefined') {\n      this.delegate.select(null);\n    }\n    delete this.searchResults;\n    delete this.selectedSearchResult;\n    delete this.searchRegex;\n    this.mainFlameChart.showPopoverForSearchResult(-1);\n    this.mainFlameChart.removeSearchResultHighlights();\n    this.networkFlameChart.showPopoverForSearchResult(-1);\n    this.networkFlameChart.removeSearchResultHighlights();\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void {\n    this.searchRegex = searchConfig.toSearchRegex().regex;\n    this.updateSearchResults(shouldJump, jumpBackwards);\n  }\n}\n\nexport class Selection {\n  timelineSelection: TimelineSelection;\n  entryIndex: number;\n  constructor(selection: TimelineSelection, entryIndex: number) {\n    this.timelineSelection = selection;\n    this.entryIndex = entryIndex;\n  }\n}\n\nexport const FlameChartStyle = {\n  textColor: '#333',\n};\n\nexport class TimelineFlameChartMarker implements PerfUI.FlameChart.FlameChartMarker {\n  private readonly startTimeInternal: number;\n  private readonly startOffset: number;\n  private style: TimelineMarkerStyle;\n  constructor(startTime: number, startOffset: number, style: TimelineMarkerStyle) {\n    this.startTimeInternal = startTime;\n    this.startOffset = startOffset;\n    this.style = style;\n  }\n\n  startTime(): number {\n    return this.startTimeInternal;\n  }\n\n  color(): string {\n    return this.style.color;\n  }\n\n  title(): string|null {\n    if (this.style.lowPriority) {\n      return null;\n    }\n    const startTime = i18n.TimeUtilities.millisToString(this.startOffset);\n    return i18nString(UIStrings.sAtS, {PH1: this.style.title, PH2: startTime});\n  }\n\n  draw(context: CanvasRenderingContext2D, x: number, height: number, pixelsPerMillisecond: number): void {\n    const lowPriorityVisibilityThresholdInPixelsPerMs = 4;\n\n    if (this.style.lowPriority && pixelsPerMillisecond < lowPriorityVisibilityThresholdInPixelsPerMs) {\n      return;\n    }\n\n    context.save();\n    if (this.style.tall) {\n      context.strokeStyle = this.style.color;\n      context.lineWidth = this.style.lineWidth;\n      context.translate(this.style.lineWidth < 1 || (this.style.lineWidth & 1) ? 0.5 : 0, 0.5);\n      context.beginPath();\n      context.moveTo(x, 0);\n      context.setLineDash(this.style.dashStyle);\n      context.lineTo(x, context.canvas.height);\n      context.stroke();\n    }\n    context.restore();\n  }\n}\n\nexport const enum ColorBy {\n  URL = 'URL',\n}\n\n/**\n * Find the Group that contains the provided level, or `null` if no group is\n * found.\n */\nexport function groupForLevel(groups: PerfUI.FlameChart.Group[], level: number): PerfUI.FlameChart.Group|null {\n  const groupForLevel = groups.find((group, groupIndex) => {\n    const nextGroup = groups.at(groupIndex + 1);\n    const groupEndLevel = nextGroup ? nextGroup.startLevel - 1 : Infinity;\n\n    return group.startLevel <= level && groupEndLevel >= level;\n  });\n  return groupForLevel ?? null;\n}\n"]}