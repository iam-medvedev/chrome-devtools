{"version":3,"file":"AICallTree.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/utils/AICallTree.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\n\nimport * as Utils from './utils.js';\n\ndescribeWithEnvironment('AICallTree', () => {\n  it('will not build a tree from non-main-thread events', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'cls-single-frame.json.gz');\n    // A random RasterizerTask. Although this does technically run on the\n    // main _frame_, it is not on the thread we identify as the main thread.\n    const rasterTask = parsedTrace.Renderer.allTraceEntries.find(e => {\n      return e.name === Trace.Types.Events.Name.RASTER_TASK && e.pid === 4274 && e.tid === 23555;\n    });\n    assert.isOk(rasterTask);\n    assert.isNull(Utils.AICallTree.AICallTree.from(rasterTask, parsedTrace));\n  });\n\n  it('does not build a tree from events the renderer is not aware of', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'cls-single-frame.json.gz');\n    // A SyntheticLayoutShift: the RendererHandler does not know about this.\n    const shift = parsedTrace.LayoutShifts.clusters.at(0)?.events.at(0);\n    assert.isOk(shift);\n    assert.isTrue(Trace.Types.Events.isSyntheticLayoutShift(shift));\n    assert.isNull(Utils.AICallTree.AICallTree.from(shift, parsedTrace));\n  });\n\n  it('supports NodeJS traces that do not have a \"main thread\"', async function() {\n    // Bit of extra setup required: we need to mimic what the panel does where\n    // it takes the CDP Profile and wraps it in fake trace events, before then\n    // passing that through to the new engine.\n    const rawEvents = await TraceLoader.rawCPUProfile(this, 'basic.cpuprofile.gz');\n    const events = Trace.Extras.TimelineJSProfile.TimelineJSProfileProcessor.createFakeTraceFromCpuProfile(\n        rawEvents,\n        Trace.Types.Events.ThreadID(1),\n    );\n    const {parsedTrace} = await TraceLoader.executeTraceEngineOnFileContents(events);\n    // Find a random function call in the trace.\n    const funcCall = parsedTrace.Samples.entryToNode.keys().find(event => {\n      return Trace.Types.Events.isProfileCall(event) && event.callFrame.functionName === 'callAndPauseOnStart';\n    });\n    assert.isOk(funcCall);\n    const callTree = Utils.AICallTree.AICallTree.from(funcCall, parsedTrace);\n    assert.isOk(callTree);\n    const expectedData = '\\n' +\n        `\n\n# All URL #s:\n\n  * 0: node:internal/main/run_main_module\n  * 1: node:internal/modules/run_main\n  * 2: node:internal/modules/cjs/loader\n  * 3: file:///Users/andoli/Desktop/mocks/fixnodeinspector/app.js\n\n# Call tree:\n\nNode: 1 – (anonymous)\ndur: 2370\nURL #: 0\nChildren:\n  * 2 – executeUserEntryPoint\n\nNode: 2 – executeUserEntryPoint\ndur: 2370\nURL #: 1\nChildren:\n  * 3 – Module._load\n\nNode: 3 – Module._load\ndur: 2370\nURL #: 2\nChildren:\n  * 4 – Module.load\n\nNode: 4 – Module.load\ndur: 2370\nURL #: 2\nChildren:\n  * 5 – Module._extensions..js\n\nNode: 5 – Module._extensions..js\ndur: 2370\nURL #: 2\nChildren:\n  * 6 – Module._compile\n\nNode: 6 – Module._compile\ndur: 2370\nURL #: 2\nChildren:\n  * 7 – callAndPauseOnStart\n\nNode: 7 – callAndPauseOnStart\nSelected: true\ndur: 2370\nChildren:\n  * 8 – (anonymous)\n\nNode: 8 – (anonymous)\ndur: 2370\nself: 2370\nURL #: 3\n`.trim();\n\n    assert.strictEqual(callTree?.serialize(), expectedData);\n  });\n\n  it('serializes a simple tree', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'web-dev-outermost-frames.json.gz');\n    const mainEvents = parsedTrace.Renderer.allTraceEntries;\n    // A function '_ds.q.ns'. Has a very small tree by default.\n    const selectedEvent = mainEvents.find(event => event.ts === 465457308823);\n    if (!selectedEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const callTree = Utils.AICallTree.AICallTree.from(selectedEvent, parsedTrace);\n    const expectedData = '\\n' +\n        `\n\n# All URL #s:\n\n  * 0: https://www.gstatic.com/devrel-devsite/prod/vafe2e13ca17bb026e70df42a2ead1c8192750e86a12923a88eda839025dabf95/js/devsite_app_module.js\n\n# Call tree:\n\nNode: 1 – Task\ndur: 0.2\nChildren:\n  * 2 – Timer fired\n\nNode: 2 – Timer fired\ndur: 0.2\nChildren:\n  * 3 – Function call\n\nNode: 3 – Function call\ndur: 0.2\nURL #: 0\nChildren:\n  * 4 – _ds.q.ns\n\nNode: 4 – _ds.q.ns\nSelected: true\ndur: 0.2\nURL #: 0\nChildren:\n  * 5 – clearTimeout\n\nNode: 5 – clearTimeout\ndur: 0.2\nself: 0\nChildren:\n  * 6 – Recalculate style\n\nNode: 6 – Recalculate style\ndur: 0.2\nself: 0.2\n`.trim();\n    assert.strictEqual(callTree?.serialize(), expectedData);\n  });\n\n  it('serializes a tree with lots of recursion', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'one-second-interaction.json.gz');\n    const mainEvents = parsedTrace.Renderer.allTraceEntries;\n    const selectedEvent = mainEvents.find(event => event.ts === 141251951589);\n    if (!selectedEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const callTree = Utils.AICallTree.AICallTree.from(selectedEvent, parsedTrace);\n    assert.isOk(callTree);\n\n    // We don't need to validate the whole tree, just that it has recursion\n    const treeStr = callTree.serialize();\n    const lines = treeStr.split('\\n');\n    const fibCallCount = lines.filter(line => line.includes('fibonacci')).length;\n    assert.isTrue(fibCallCount > 10);\n  });\n\n  it('AITreeFilter includes the right items in the tree', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'two-workers.json.gz');\n    const mainEvents = parsedTrace.Renderer.allTraceEntries;\n\n    // A very small 'get storage' event. It's 6µs long\n    const tinyEvent = mainEvents.find(event => event.ts === 107350149168);\n    if (!tinyEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const tinyStr = Utils.AICallTree.AICallTree.from(tinyEvent, parsedTrace)?.serialize();\n    assert.strictEqual(tinyStr?.split('\\n').filter(l => l.startsWith('Node:')).join('\\n'), `\nNode: 1 – Task\nNode: 2 – Parse HTML\nNode: 3 – Evaluate script\nNode: 4 – (anonymous)\nNode: 5 – get storage`.trim());\n    assert.include(tinyStr, 'get storage');\n\n    // An evaluateScript that has 3 'Compile code' children\n    const evaluateEvent = mainEvents.find(event => event.ts === 107350147808);\n    if (!evaluateEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const treeStr = Utils.AICallTree.AICallTree.from(evaluateEvent, parsedTrace)?.serialize();\n    assert.strictEqual(treeStr?.split('\\n').filter(l => l.startsWith('Node:')).join('\\n'), `\nNode: 1 – Task\nNode: 2 – Parse HTML\nNode: 3 – Evaluate script\nNode: 4 – Compile script\nNode: 5 – (anonymous)\nNode: 6 – H.la`.trim());\n    assert.notInclude(treeStr, 'Compile code');\n\n    // An Compile code event within the evaluateEvent call tree\n    const compileEvent = mainEvents.find(event => event.ts === 107350148218);\n    if (!compileEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const compileStr = Utils.AICallTree.AICallTree.from(compileEvent, parsedTrace)?.serialize();\n    assert.strictEqual(compileStr?.split('\\n').filter(l => l.startsWith('Node:')).join('\\n'), `\nNode: 1 – Task\nNode: 2 – Parse HTML\nNode: 3 – Evaluate script\nNode: 4 – (anonymous)\nNode: 5 – Compile code`.trim());\n    assert.include(compileStr, 'Compile code');\n  });\n});\n\ndescribe('AITreeFilter', () => {\n  const makeEvent = (\n                        name: string,\n                        ts: number,\n                        dur: number,\n                        ): Trace.Types.Events.Event => ({\n    name,\n    cat: 'disabled-by-default-devtools.timeline',\n    ph: Trace.Types.Events.Phase.COMPLETE,\n    ts: Trace.Types.Timing.Micro(ts),\n    dur: Trace.Types.Timing.Micro(dur),\n    pid: Trace.Types.Events.ProcessID(1),\n    tid: Trace.Types.Events.ThreadID(4),\n    args: {},\n  });\n\n  it('always includes the selected event', () => {\n    const selectedEvent = makeEvent('selected', 0, 100);\n    const filter = new Utils.AICallTree.AITreeFilter(selectedEvent);\n    assert.isTrue(filter.accept(selectedEvent));\n  });\n\n  it('includes events that are long enough', () => {\n    const selectedEvent = makeEvent('selected', 0, 100);\n    const filter = new Utils.AICallTree.AITreeFilter(selectedEvent);\n\n    assert.isTrue(filter.accept(makeEvent('short', 0, 1)));\n    assert.isTrue(filter.accept(makeEvent('short', 0, 0.6)));\n    assert.isTrue(filter.accept(makeEvent('long', 0, 101)));\n    assert.isTrue(filter.accept(makeEvent('long', 0, 200)));\n    assert.isTrue(filter.accept(makeEvent('long', 0, 1000)));\n  });\n\n  it('excludes events that are too short', () => {\n    const selectedEvent = makeEvent('selected', 0, 100);\n    const filter = new Utils.AICallTree.AITreeFilter(selectedEvent);\n\n    assert.isFalse(filter.accept(makeEvent('short', 0, 0)));\n    assert.isFalse(filter.accept(makeEvent('short', 0, 0.1)));\n    assert.isFalse(filter.accept(makeEvent('short', 0, 0.4)));\n  });\n\n  it('excludes COMPILE_CODE nodes if non-selected', () => {\n    const selectedEvent = makeEvent('selected', 0, 100);\n    const compileCodeEvent = makeEvent(Trace.Types.Events.Name.COMPILE_CODE, 0, 100);\n    const filter = new Utils.AICallTree.AITreeFilter(selectedEvent);\n    assert.isFalse(filter.accept(compileCodeEvent));\n  });\n\n  it('includes COMPILE_CODE nodes if selected', () => {\n    const selectedEvent = makeEvent(Trace.Types.Events.Name.COMPILE_CODE, 0, 100);\n    const filter = new Utils.AICallTree.AITreeFilter(selectedEvent);\n    assert.isTrue(filter.accept(selectedEvent));\n  });\n});\n"]}