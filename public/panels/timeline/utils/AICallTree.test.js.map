{"version":3,"file":"AICallTree.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/utils/AICallTree.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../../../core/root/root.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\n\nimport * as Utils from './utils.js';\n\ndescribeWithEnvironment('AICallTree', () => {\n  beforeEach(() => {\n    Root.Runtime.experiments.disableForTest('timeline-show-all-events');\n  });\n\n  it('will not build a tree from non-main-thread events', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'cls-single-frame.json.gz');\n    // A random RasterizerTask. Although this does technically run on the\n    // main _frame_, it is not on the thread we identify as the main thread.\n    const rasterTask = parsedTrace.Renderer.allTraceEntries.find(e => {\n      return e.name === Trace.Types.Events.Name.RASTER_TASK && e.pid === 4274 && e.tid === 23555;\n    });\n    assert.isOk(rasterTask);\n    assert.isNull(Utils.AICallTree.AICallTree.fromEvent(rasterTask, parsedTrace));\n  });\n\n  it('does not build a tree from events the renderer is not aware of', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'cls-single-frame.json.gz');\n    // A SyntheticLayoutShift: the RendererHandler does not know about this.\n    const shift = parsedTrace.LayoutShifts.clusters.at(0)?.events.at(0);\n    assert.isOk(shift);\n    assert.isTrue(Trace.Types.Events.isSyntheticLayoutShift(shift));\n    assert.isNull(Utils.AICallTree.AICallTree.fromEvent(shift, parsedTrace));\n  });\n\n  it('supports NodeJS traces that do not have a \"main thread\"', async function() {\n    // Bit of extra setup required: we need to mimic what the panel does where\n    // it takes the CDP Profile and wraps it in fake trace events, before then\n    // passing that through to the new engine.\n    const rawEvents = await TraceLoader.rawCPUProfile(this, 'basic.cpuprofile.gz');\n    const events = Trace.Helpers.SamplesIntegrator.SamplesIntegrator.createFakeTraceFromCpuProfile(\n        rawEvents,\n        Trace.Types.Events.ThreadID(1),\n    );\n    const {parsedTrace} = await TraceLoader.executeTraceEngineOnFileContents(events);\n    // Find a random function call in the trace.\n    const funcCall = parsedTrace.Samples.entryToNode.keys().find(event => {\n      return Trace.Types.Events.isProfileCall(event) && event.callFrame.functionName === 'callAndPauseOnStart';\n    });\n    assert.isOk(funcCall);\n    const callTree = Utils.AICallTree.AICallTree.fromEvent(funcCall, parsedTrace);\n    assert.isOk(callTree);\n    const expectedData = '\\n' +\n        `\n\n# All URL #s:\n\n  * 0: node:internal/main/run_main_module\n  * 1: node:internal/modules/run_main\n  * 2: node:internal/modules/cjs/loader\n  * 3: file:///Users/andoli/Desktop/mocks/fixnodeinspector/app.js\n\n# Call tree:\n\nNode: 1 – (anonymous)\ndur: 2370\nURL #: 0\nChildren:\n  * 2 – executeUserEntryPoint\n\nNode: 2 – executeUserEntryPoint\ndur: 2370\nURL #: 1\nChildren:\n  * 3 – Module._load\n\nNode: 3 – Module._load\ndur: 2370\nURL #: 2\nChildren:\n  * 4 – Module.load\n\nNode: 4 – Module.load\ndur: 2370\nURL #: 2\nChildren:\n  * 5 – Module._extensions..js\n\nNode: 5 – Module._extensions..js\ndur: 2370\nURL #: 2\nChildren:\n  * 6 – Module._compile\n\nNode: 6 – Module._compile\ndur: 2370\nURL #: 2\nChildren:\n  * 7 – callAndPauseOnStart\n\nNode: 7 – callAndPauseOnStart\nSelected: true\ndur: 2370\nChildren:\n  * 8 – (anonymous)\n\nNode: 8 – (anonymous)\ndur: 2370\nself: 2370\nURL #: 3\n`.trim();\n\n    assert.strictEqual(callTree?.serialize(), expectedData);\n  });\n\n  it('serializes a simple tree', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'web-dev-outermost-frames.json.gz');\n    const mainEvents = parsedTrace.Renderer.allTraceEntries;\n    // A function '_ds.q.ns'. Has a very small tree by default.\n    const selectedEvent = mainEvents.find(event => event.ts === 465457308823);\n    if (!selectedEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const callTree = Utils.AICallTree.AICallTree.fromEvent(selectedEvent, parsedTrace);\n    const expectedData = '\\n' +\n        `\n\n# All URL #s:\n\n  * 0: https://www.gstatic.com/devrel-devsite/prod/vafe2e13ca17bb026e70df42a2ead1c8192750e86a12923a88eda839025dabf95/js/devsite_app_module.js\n\n# Call tree:\n\nNode: 1 – Task\ndur: 0.2\nChildren:\n  * 2 – Timer fired\n\nNode: 2 – Timer fired\ndur: 0.2\nChildren:\n  * 3 – Function call\n\nNode: 3 – Function call\ndur: 0.2\nURL #: 0\nChildren:\n  * 4 – _ds.q.ns\n\nNode: 4 – _ds.q.ns\nSelected: true\ndur: 0.2\nURL #: 0\nChildren:\n  * 5 – clearTimeout\n\nNode: 5 – clearTimeout\ndur: 0.2\nself: 0\nChildren:\n  * 6 – Recalculate style\n\nNode: 6 – Recalculate style\ndur: 0.2\nself: 0.2\n`.trim();\n    assert.strictEqual(callTree?.serialize(), expectedData);\n  });\n\n  it('correctly serializes selected node with multiple children', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n    const mainEvents = parsedTrace.Renderer.allTraceEntries;\n\n    const selectedEvent = mainEvents.find(event => event.ts === 1020034984106);\n    if (!selectedEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const callTree = Utils.AICallTree.AICallTree.fromEvent(selectedEvent, parsedTrace);\n\n    let stringifiedNode = '';\n    if (callTree?.selectedNode) {\n      stringifiedNode =\n          callTree?.stringifyNodeCompressed(callTree.selectedNode, 2, parsedTrace, callTree.selectedNode, [''], 2);\n    }\n\n    // Entry Format: `id;name;duration;selfTime;urlIndex;childRange;[S]\n    assert.deepEqual(stringifiedNode, '2;define;3.5;0.5;;2-6;S');\n  });\n\n  // Since the childIds are serialized while the node is visited by BFS,\n  // it is important to test that the final parent-child IDs are assigned correctly.\n  it('correctly numbers child node IDs sequentially', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n    const mainEvents = parsedTrace.Renderer.allTraceEntries;\n\n    // The selected event is structured like this:\n    //\n    // ||                            Task                                     ||\n    //   || recalculate style||    || layout ||    || update ||    || paint ||\n    //\n    // Here, the only node with children is task and the index of Task node children starts at 2 (Task itself is 1)\n    // If this information is provided correctly, it is enough to serialize that node.\n\n    const selectedEvent = mainEvents.find(event => event.ts === 1020034919877);\n    if (!selectedEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const callTree = Utils.AICallTree.AICallTree.fromEvent(selectedEvent, parsedTrace);\n\n    const visited: Array<{name: string, nodeIndex: number, childStartingIndex?: number}> = [];\n\n    const callback = (node: Trace.Extras.TraceTree.Node, nodeIndex: number, childStartingIndex?: number): void => {\n      visited.push({name: Utils.EntryName.nameForEntry(node.event, parsedTrace), nodeIndex, childStartingIndex});\n    };\n\n    callTree?.breadthFirstWalk(callTree.rootNode.children().values(), callback);\n\n    const expectedVisited = [\n      {name: 'Task', nodeIndex: 1, childStartingIndex: 2},\n      {name: 'Recalculate style', nodeIndex: 2, childStartingIndex: undefined},\n      {name: 'Layout', nodeIndex: 3, childStartingIndex: undefined},\n      {name: 'Update layer tree', nodeIndex: 4, childStartingIndex: undefined},\n      {name: 'Paint', nodeIndex: 5, childStartingIndex: undefined},\n    ];\n\n    assert.deepEqual(visited, expectedVisited, 'Callback arguments were incorrect');\n  });\n\n  it('correctly numbers child nodes IDs for larger trees', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n    const mainEvents = parsedTrace.Renderer.allTraceEntries;\n\n    // The selected event is structured like this:\n    //\n    // ||                          Task (1)                                                 ||\n    // ||                          Timer fired (2)                                          ||\n    // ||                          Function Call (3)                                        ||\n    //     ||                        Anonymous (4)                                          ||\n    //     ||                        Anonymous (5)                                          ||\n    //     || Ot.getEntriesByType (6) ||  ||     le.createOobTrace (7)                      ||\n    //     || getEntriesByType (8) ||     || le (9) ||  ||         ie (10)                  ||\n    //                                                  ||reqApisA= (11)|| ||oe (12)        ||\n    //                                                                     ||setTimeout (13)||\n    //\n    // Here, the only node with children is task and the index of Task node children starts at 2 (Task itself is 1)\n    // If this information is provided correctly, it is enough to serialize that node.\n\n    const selectedEvent = mainEvents.find(event => event.ts === 1020035169460);\n    if (!selectedEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const callTree = Utils.AICallTree.AICallTree.fromEvent(selectedEvent, parsedTrace);\n\n    const visited: Array<{name: string, nodeIndex: number, childStartingIndex?: number}> = [];\n\n    const callback = (node: Trace.Extras.TraceTree.Node, nodeIndex: number, childStartingIndex?: number): void => {\n      visited.push({name: Utils.EntryName.nameForEntry(node.event, parsedTrace), nodeIndex, childStartingIndex});\n    };\n\n    callTree?.breadthFirstWalk(callTree.rootNode.children().values(), callback);\n\n    const expectedVisited = [\n      {name: 'Task', nodeIndex: 1, childStartingIndex: 2},\n      {name: 'Timer fired', nodeIndex: 2, childStartingIndex: 3},\n      {name: 'Function call', nodeIndex: 3, childStartingIndex: 4},\n      {name: '(anonymous)', nodeIndex: 4, childStartingIndex: 5},\n      {name: '(anonymous)', nodeIndex: 5, childStartingIndex: 6},\n      {name: 'Ot.getEntriesByType', nodeIndex: 6, childStartingIndex: 8},\n      {name: 'le.createOobTrace', nodeIndex: 7, childStartingIndex: 9},\n      {name: 'getEntriesByType', nodeIndex: 8, childStartingIndex: undefined},\n      {name: 'le', nodeIndex: 9, childStartingIndex: undefined},\n      {name: 'ie', nodeIndex: 10, childStartingIndex: 11},\n      {name: 'Ot.requiredApisAvailable', nodeIndex: 11, childStartingIndex: undefined},\n      {name: 'oe', nodeIndex: 12, childStartingIndex: 13},\n      {name: 'setTimeout', nodeIndex: 13, childStartingIndex: undefined},\n    ];\n\n    assert.deepEqual(visited, expectedVisited, 'Callback arguments were incorrect');\n  });\n\n  it('serializes a simple tree in a concise format', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'web-dev-outermost-frames.json.gz');\n    const mainEvents = parsedTrace.Renderer.allTraceEntries;\n    // A function '_ds.q.ns'. Has a very small tree by default.\n    const selectedEvent = mainEvents.find(event => event.ts === 465457308823);\n    if (!selectedEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const callTree = Utils.AICallTree.AICallTree.fromEvent(selectedEvent, parsedTrace);\n\n    // Entry Format: `id;name;duration;selfTime;urlIndex;childRange;[S]\n    const expectedData = `\n# All URL #s:\n\n  * 0: https://www.gstatic.com/devrel-devsite/prod/vafe2e13ca17bb026e70df42a2ead1c8192750e86a12923a88eda839025dabf95/js/devsite_app_module.js\n\n# Call tree:\n\n1;Task;0.2;;;2\n2;Timer fired;0.2;;;3\n3;Function call;0.2;;0;4\n4;_ds.q.ns;0.2;;0;5;S\n5;clearTimeout;0.2;0;;6\n6;Recalculate style;0.2;0.2;;`;\n\n    assert.strictEqual(callTree?.serializeIntoCompressedFormat(), expectedData);\n  });\n\n  it('serializes a tree in a concise format', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n    const mainEvents = parsedTrace.Renderer.allTraceEntries;\n    const selectedEvent = mainEvents.find(event => event.ts === 1020035169460);\n    if (!selectedEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const callTree = Utils.AICallTree.AICallTree.fromEvent(selectedEvent, parsedTrace);\n\n    // Entry Format: `id;name;duration;selfTime;urlIndex;childRange;[S]\n    const expectedData = `\n# All URL #s:\n\n  * 0: https://www.gstatic.com/firebasejs/6.6.1/firebase-performance.js\n\n# Call tree:\n\n1;Task;0.9;0;;2;S\n2;Timer fired;0.9;0;;3\n3;Function call;0.9;0.1;0;4\n4;(anonymous);0.8;;0;5\n5;(anonymous);0.8;;0;6-8\n6;Ot.getEntriesByType;0.1;;0;8\n7;le.createOobTrace;0.6;0.2;0;9-11\n8;getEntriesByType;0.1;0.1;;\n9;le;0.1;0.1;0;\n10;ie;0.2;;0;11-13\n11;Ot.requiredApisAvailable;0.2;0.2;0;\n12;oe;0;;0;13\n13;setTimeout;0;0;;`;\n\n    assert.strictEqual(callTree?.serializeIntoCompressedFormat(), expectedData);\n  });\n\n  it('can serialize a tree from an event that is not shown unless \"show all events\" is enabled', async function() {\n    Root.Runtime.experiments.enableForTest('timeline-show-all-events');\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    // find a \"v8.run\" function that would not normally be shown\n    const event = parsedTrace.Renderer.allTraceEntries.find(entry => {\n      return entry.name === 'v8.run' && entry.ts === 122411196071;\n    });\n    assert.exists(event);\n    const callTree = Utils.AICallTree.AICallTree.fromEvent(event, parsedTrace);\n    assert.isNotNull(callTree);\n    const treeStr = callTree.serialize();\n    assert.include(treeStr, 'v8.run');  // make sure the event is in the tree\n  });\n\n  it('serializes a tree with lots of recursion', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'one-second-interaction.json.gz');\n    const mainEvents = parsedTrace.Renderer.allTraceEntries;\n    const selectedEvent = mainEvents.find(event => event.ts === 141251951589);\n    if (!selectedEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const callTree = Utils.AICallTree.AICallTree.fromEvent(selectedEvent, parsedTrace);\n    assert.isOk(callTree);\n\n    // We don't need to validate the whole tree, just that it has recursion\n    const treeStr = callTree.serialize();\n    const lines = treeStr.split('\\n');\n    const fibCallCount = lines.filter(line => line.includes('fibonacci')).length;\n    assert.isTrue(fibCallCount > 10);\n  });\n\n  it('AITreeFilter includes the right items in the tree', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'two-workers.json.gz');\n    const mainEvents = parsedTrace.Renderer.allTraceEntries;\n\n    // A very small 'get storage' event. It's 6µs long\n    const tinyEvent = mainEvents.find(event => event.ts === 107350149168);\n    if (!tinyEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const tinyStr = Utils.AICallTree.AICallTree.fromEvent(tinyEvent, parsedTrace)?.serialize();\n    assert.strictEqual(tinyStr?.split('\\n').filter(l => l.startsWith('Node:')).join('\\n'), `\nNode: 1 – Task\nNode: 2 – Parse HTML\nNode: 3 – Evaluate script\nNode: 4 – (anonymous)\nNode: 5 – get storage`.trim());\n    assert.include(tinyStr, 'get storage');\n\n    // An evaluateScript that has 3 'Compile code' children\n    const evaluateEvent = mainEvents.find(event => event.ts === 107350147808);\n    if (!evaluateEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const treeStr = Utils.AICallTree.AICallTree.fromEvent(evaluateEvent, parsedTrace)?.serialize();\n    assert.strictEqual(treeStr?.split('\\n').filter(l => l.startsWith('Node:')).join('\\n'), `\nNode: 1 – Task\nNode: 2 – Parse HTML\nNode: 3 – Evaluate script\nNode: 4 – Compile script\nNode: 5 – (anonymous)\nNode: 6 – H.la`.trim());\n    assert.notInclude(treeStr, 'Compile code');\n\n    // An Compile code event within the evaluateEvent call tree\n    const compileEvent = mainEvents.find(event => event.ts === 107350148218);\n    if (!compileEvent) {\n      throw new Error('Could not find expected event.');\n    }\n    const compileStr = Utils.AICallTree.AICallTree.fromEvent(compileEvent, parsedTrace)?.serialize();\n    assert.strictEqual(compileStr?.split('\\n').filter(l => l.startsWith('Node:')).join('\\n'), `\nNode: 1 – Task\nNode: 2 – Parse HTML\nNode: 3 – Evaluate script\nNode: 4 – (anonymous)\nNode: 5 – Compile code`.trim());\n    assert.include(compileStr, 'Compile code');\n  });\n\n  it('can construct a tree from a period of time', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'nested-interactions.json.gz');\n    // Picked this interaction event because it spans multiple icicles in the main thread.\n    // Note: if you are debugging this test, it is useful to load up this trace\n    // in RPP and look for the first \"keydown\" event.\n    const interaction = parsedTrace.UserInteractions.interactionEventsWithNoNesting.find(e => {\n      return Trace.Types.Events.isEventTimingStart(e.rawSourceEvent) &&\n          e.rawSourceEvent.args.data.interactionId === 3572;\n    });\n    assert.isOk(interaction);\n    const timings = Trace.Helpers.Timing.eventTimingsMicroSeconds(interaction);\n    const bounds = Trace.Helpers.Timing.traceWindowFromMicroSeconds(timings.startTime, timings.endTime);\n    const tree = Utils.AICallTree.AICallTree.fromTimeOnThread({\n      thread: {pid: interaction.pid, tid: interaction.tid},\n      parsedTrace,\n      bounds,\n    });\n    assert.isOk(tree);\n    const output = tree.serialize();\n    const totalNodes = output.split('\\n').filter(l => l.startsWith('Node:')).length;\n    assert.strictEqual(totalNodes, 242);  // Check the min duration filter is working.\n    // Check there are 3 keydown events. This confirms that the call tree is taking events from the right timespan.\n    const keyDownEvents = output.split('\\n').filter(line => {\n      return line.startsWith('Node:') && line.includes('Event: keydown');\n    });\n    assert.lengthOf(keyDownEvents, 3);\n  });\n});\n\nconst makeEvent = (name: string, ts: number, dur: number): Trace.Types.Events.Event => ({\n  name,\n  cat: 'disabled-by-default-devtools.timeline',\n  ph: Trace.Types.Events.Phase.COMPLETE,\n  ts: Trace.Types.Timing.Micro(ts),\n  dur: Trace.Types.Timing.Micro(dur),\n  pid: Trace.Types.Events.ProcessID(1),\n  tid: Trace.Types.Events.ThreadID(4),\n  args: {},\n});\ndescribe('AITreeFilter', () => {\n  it('always includes the selected event', () => {\n    const selectedEvent = makeEvent('selected', 0, 100);\n    const filter = new Utils.AICallTree.SelectedEventDurationFilter(selectedEvent);\n    assert.isTrue(filter.accept(selectedEvent));\n  });\n\n  it('includes events that are long enough', () => {\n    const selectedEvent = makeEvent('selected', 0, 100);\n    const filter = new Utils.AICallTree.SelectedEventDurationFilter(selectedEvent);\n\n    assert.isTrue(filter.accept(makeEvent('short', 0, 1)));\n    assert.isTrue(filter.accept(makeEvent('short', 0, 0.6)));\n    assert.isTrue(filter.accept(makeEvent('long', 0, 101)));\n    assert.isTrue(filter.accept(makeEvent('long', 0, 200)));\n    assert.isTrue(filter.accept(makeEvent('long', 0, 1000)));\n  });\n\n  it('excludes events that are too short', () => {\n    const selectedEvent = makeEvent('selected', 0, 100);\n    const filter = new Utils.AICallTree.SelectedEventDurationFilter(selectedEvent);\n\n    assert.isFalse(filter.accept(makeEvent('short', 0, 0)));\n    assert.isFalse(filter.accept(makeEvent('short', 0, 0.1)));\n    assert.isFalse(filter.accept(makeEvent('short', 0, 0.4)));\n  });\n});\n\ndescribe('CompileCode filter', () => {\n  it('excludes COMPILE_CODE nodes if non-selected', () => {\n    const selectedEvent = makeEvent('selected', 0, 100);\n    const compileCodeEvent = makeEvent(Trace.Types.Events.Name.COMPILE_CODE, 0, 100);\n    const filter = new Utils.AICallTree.ExcludeCompileCodeFilter(selectedEvent);\n    assert.isFalse(filter.accept(compileCodeEvent));\n  });\n\n  it('includes COMPILE_CODE nodes if selected', () => {\n    const selectedEvent = makeEvent(Trace.Types.Events.Name.COMPILE_CODE, 0, 100);\n    const filter = new Utils.AICallTree.ExcludeCompileCodeFilter(selectedEvent);\n    assert.isTrue(filter.accept(selectedEvent));\n  });\n});\n"]}