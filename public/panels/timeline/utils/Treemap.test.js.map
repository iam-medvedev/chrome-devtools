{"version":3,"file":"Treemap.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/utils/Treemap.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Utils from './utils.js';\n\ndescribe('Treemap', () => {\n  describe('.makeScriptNode', () => {\n    const src = 'main.js';\n\n    it('uses node data when available', () => {\n      const node = Utils.Treemap.makeScriptNode(src, '', {\n        'a.js': {resourceBytes: 100},\n        'b.js': {resourceBytes: 100, duplicatedNormalizedModuleName: 'blah'},\n        'c.js': {resourceBytes: 100},\n      });\n      assert.deepEqual(node, {\n        name: src,\n        resourceBytes: 300,\n        children: [\n          {\n            name: 'a.js',\n            resourceBytes: 100,\n          },\n          {\n            duplicatedNormalizedModuleName: 'blah',\n            name: 'b.js',\n            resourceBytes: 100,\n          },\n          {\n            name: 'c.js',\n            resourceBytes: 100,\n          },\n        ],\n      });\n    });\n\n    it('creates directory node when multiple leaf nodes', () => {\n      const node = Utils.Treemap.makeScriptNode(src, '', {\n        'folder/a.js': {resourceBytes: 100},\n        'folder/b.js': {resourceBytes: 100},\n      });\n      assert.deepEqual(node, {\n        name: src,\n        children: [\n          {\n            children: [\n              {\n                name: 'a.js',\n                resourceBytes: 100,\n              },\n              {\n                name: 'b.js',\n                resourceBytes: 100,\n              },\n            ],\n            name: '/folder',\n            resourceBytes: 200,\n          },\n        ],\n        resourceBytes: 200,\n      });\n    });\n\n    it('flattens directory node when single leaf nodes', () => {\n      const node = Utils.Treemap.makeScriptNode(src, '', {\n        'root/folder1/a.js': {resourceBytes: 100},\n        'root/folder2/b.js': {resourceBytes: 100},\n      });\n      assert.deepEqual(node, {\n        name: src,\n        children: [\n          {\n            children: [\n              {\n                children: undefined,\n                name: 'folder1/a.js',\n                resourceBytes: 100,\n              },\n              {\n                children: undefined,\n                name: 'folder2/b.js',\n                resourceBytes: 100,\n              },\n            ],\n            name: '/root',\n            resourceBytes: 200,\n          },\n        ],\n        resourceBytes: 200,\n      });\n    });\n\n    it('ignores leading slashes', () => {\n      const node = Utils.Treemap.makeScriptNode(src, '', {\n        '/a.js': {resourceBytes: 100},\n        '/b.js': {resourceBytes: 100},\n      });\n      assert.deepEqual(node, {\n        name: src,\n        resourceBytes: 200,\n        children: [\n          {\n            name: 'a.js',\n            resourceBytes: 100,\n          },\n          {\n            name: 'b.js',\n            resourceBytes: 100,\n          },\n        ],\n      });\n    });\n\n    it('ignores repeated slashes', () => {\n      const node = Utils.Treemap.makeScriptNode(src, '', {\n        'root//a.js': {resourceBytes: 100},\n        'root//b.js': {resourceBytes: 100},\n      });\n      assert.deepEqual(node, {\n        name: src,\n        children: [\n          {\n            name: '/root',\n            children: [\n              {\n                name: 'a.js',\n                resourceBytes: 100,\n              },\n              {\n                name: 'b.js',\n                resourceBytes: 100,\n              },\n            ],\n            resourceBytes: 200,\n          },\n        ],\n        resourceBytes: 200,\n      });\n    });\n\n    it('source root replaces matching prefixes', () => {\n      const sourcesData = {\n        'some/prefix/main.js': {resourceBytes: 100},\n        'not/some/prefix/a.js': {resourceBytes: 101},\n      };\n      let node = Utils.Treemap.makeScriptNode(src, 'some/prefix', sourcesData);\n      assert.deepEqual(node, {\n        name: src,\n        children: [\n          {\n            name: 'some/prefix',\n            resourceBytes: 201,\n            children: [\n              {\n                name: 'main.js',\n                resourceBytes: 100,\n              },\n              {\n                name: 'not/a.js',\n                resourceBytes: 101,\n                children: undefined,\n              },\n            ],\n          },\n        ],\n        resourceBytes: 201,\n      });\n\n      expect(node.name).to.equal(src);\n      expect(node.resourceBytes).to.equal(201);\n\n      node = node.children![0];\n      expect(node.name).to.equal('some/prefix');\n      expect(node.resourceBytes).to.equal(201);\n      expect(node.children?.[0].name).to.equal('main.js');\n      expect(node.children?.[1].name).to.equal('not/a.js');\n    });\n\n    it('nodes have duplicates data', () => {\n      const sourcesData = {\n        'lib/folder/a.js': {resourceBytes: 100},\n        'lib/node_modules/dep/a.js': {resourceBytes: 101, duplicatedNormalizedModuleName: 'dep/a.js'},\n        'node_modules/dep/a.js': {resourceBytes: 100, duplicatedNormalizedModuleName: 'dep/a.js'},\n        'lib/node_modules/dep/b.js': {resourceBytes: 101, duplicatedNormalizedModuleName: 'dep/b.js'},\n        'node_modules/dep/b.js': {resourceBytes: 100, duplicatedNormalizedModuleName: 'dep/b.js'},\n      };\n      const node = Utils.Treemap.makeScriptNode(src, '', sourcesData);\n      assert.deepEqual(node, {\n        name: src,\n        resourceBytes: 502,\n        children: [\n          {\n            children: [\n              {\n                children: undefined,\n                name: 'folder/a.js',\n                resourceBytes: 100,\n              },\n              {\n                children: [\n                  {\n                    duplicatedNormalizedModuleName: 'dep/a.js',\n                    name: 'a.js',\n                    resourceBytes: 101,\n                  },\n                  {\n                    duplicatedNormalizedModuleName: 'dep/b.js',\n                    name: 'b.js',\n                    resourceBytes: 101,\n                  },\n                ],\n                name: 'node_modules/dep',\n                resourceBytes: 202,\n              },\n            ],\n            name: 'lib',\n            resourceBytes: 302,\n          },\n          {\n            children: [\n              {\n                duplicatedNormalizedModuleName: 'dep/a.js',\n                name: 'a.js',\n                resourceBytes: 100,\n              },\n              {\n                duplicatedNormalizedModuleName: 'dep/b.js',\n                name: 'b.js',\n                resourceBytes: 100,\n              },\n            ],\n            name: 'node_modules/dep',\n            resourceBytes: 200,\n          },\n        ],\n      });\n    });\n  });\n});\n"]}