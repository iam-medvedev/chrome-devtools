{"version":3,"file":"NetworkRequest.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/utils/NetworkRequest.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAC7B,OAAO,KAAK,MAAM,MAAM,gCAAgC,CAAC;AAGzD,OAAO,KAAK,QAAQ,MAAM,sCAAsC,CAAC;AAGjE,MAAM,UAAU,4BAA4B,CACxC,uBAA8E;IAChF,MAAM,GAAG,GAAG,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAsC,CAAC;IACrF,MAAM,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAoC,CAAC;IACzG,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IACrH,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,IAAI,sBAAsB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACtD,CAAC;AAED,4BAA4B;AAC5B,kHAAkH;AAClH,8FAA8F;AAC9F,qHAAqH;AACrH,wHAAwH;AACxH,oHAAoH;AACpH,yBAAyB;AACzB,MAAM,OAAO,sBAAsB;IACjC,QAAQ,CAAoC;IAC5C,YAAY,OAA0C;QACpD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;CACF","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../core/common/common.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport * as Bindings from '../../../models/bindings/bindings.js';\nimport type * as TraceEngine from '../../../models/trace/trace.js';\n\nexport function createTimelineNetworkRequest(\n    syntheticNetworkRequest: TraceEngine.Types.TraceEvents.SyntheticNetworkRequest): TimelineNetworkRequest|null {\n  const url = syntheticNetworkRequest.args.data.url as Platform.DevToolsPath.UrlString;\n  const urlWithoutHash = Common.ParsedURL.ParsedURL.urlWithoutHash(url) as Platform.DevToolsPath.UrlString;\n  const resource = Bindings.ResourceUtils.resourceForURL(url) || Bindings.ResourceUtils.resourceForURL(urlWithoutHash);\n  if (!resource?.request) {\n    return null;\n  }\n  return new TimelineNetworkRequest(resource.request);\n}\n\n// Add a wrapper class here.\n// The reason is the `Reveal in Network panel` option is handled by the context menu provider, which will add this\n// option for all supporting types. And there are a lot of context menu providers that support\n// `SDK.NetworkRequest.NetworkRequest`, for example `Override content` by PersistenceActions, but we so far just want\n// the one to reveal in network panel, so add a new class which will only be supported by Network panel. Also we want to\n// have a different behavior(select the network request) from the `SDK.NetworkRequest.NetworkRequest` (highlight the\n// network request once).\nexport class TimelineNetworkRequest {\n  #request: SDK.NetworkRequest.NetworkRequest;\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    this.#request = request;\n  }\n\n  get request(): SDK.NetworkRequest.NetworkRequest {\n    return this.#request;\n  }\n}\n"]}