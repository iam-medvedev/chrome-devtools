{"version":3,"file":"SidebarInsightsTab.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/SidebarInsightsTab.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,gBAAgB,MAAM,2CAA2C,CAAC;AAC9E,OAAO,KAAK,OAAO,MAAM,kCAAkC,CAAC;AAC5D,OAAO,KAAK,aAAa,MAAM,8CAA8C,CAAC;AAE9E,OAAO,KAAK,QAAQ,MAAM,wBAAwB,CAAC;AAEnD,OAAO,MAAM,MAAM,6BAA6B,CAAC;AACjD,OAAO,EAAC,uBAAuB,EAAmC,MAAM,8BAA8B,CAAC;AAEvG,MAAM,CAAN,IAAY,kBAMX;AAND,WAAY,kBAAkB;IAC5B,iCAAW,CAAA;IACX,iCAAW,CAAA;IACX,iCAAW,CAAA;IACX,iCAAW,CAAA;IACX,qCAAe,CAAA;AACjB,CAAC,EANW,kBAAkB,KAAlB,kBAAkB,QAM7B;AAED,MAAM,OAAO,kBAAmB,SAAQ,WAAW;IACjD,MAAM,CAAU,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,uCAAuC,CAAC;IAC3E,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAErD,gBAAgB,GAAmD,IAAI,CAAC;IACxE,SAAS,GAAqD,IAAI,CAAC;IACnE,cAAc,GAAuB,IAAI,CAAC;IAC1C,iBAAiB,GAAuB,kBAAkB,CAAC,GAAG,CAAC;IAC/D;;;;OAIG;IACH,mBAAmB,GAAgB,IAAI,CAAC;IAExC,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED,IAAI,eAAe,CAAC,IAAoD;QACtE,IAAI,IAAI,KAAK,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACnC,OAAO;QACT,CAAC;QACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,8EAA8E;QAC9E,oEAAoE;QACpE,UAAU;QACV,IAAI,IAAI,EAAE,CAAC;YACT,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,YAAY,IAAI,IAAI,CAAC;QACnG,CAAC;QACD,KAAK,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAChF,CAAC;IAED,IAAI,QAAQ,CAAC,IAAsD;QACjE,IAAI,IAAI,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC;YAC5B,OAAO;QACT,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,KAAK,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAChF,CAAC;IAED,IAAI,aAAa,CAAC,MAA0B;QAC1C,IAAI,MAAM,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC;YACnC,OAAO;QACT,CAAC;QACD,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC7B,KAAK,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAChF,CAAC;IAED,yBAAyB,CAAC,KAAY;QACpC,MAAM,MAAM,GAAG,KAAK,CAAC,MAA2B,CAAC;QACjD,MAAM,KAAK,GAAG,MAAM,CAAC,KAA2B,CAAC;QACjD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,KAAK,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAChF,CAAC;IAED,kBAAkB,CAAC,EAAU;QAC3B,qDAAqD;QACrD,IAAI,EAAE,KAAK,IAAI,CAAC,cAAc,EAAE,YAAY,EAAE,CAAC;YAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,QAAQ,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC,CAAC;QACvE,CAAC;QACD,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,KAAK,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAChF,CAAC;IAED,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YAC9C,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;YAC5D,OAAO;QACT,CAAC;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,oBAAoB,IAAI,EAAE,CAAC;QAE1E,MAAM,sBAAsB,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;QAEtD,mBAAmB;QACnB,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAA;;kBAEX,IAAI,CAAC,yBAAyB;gBAChC,aAAa,CAAC,QAAQ,CAAC,2CAA2C,CAAC,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;;UAE9F,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE;YACzD,OAAO,OAAO,CAAC,IAAI,CAAA;4BACD,gBAAgB;gBAC5B,gBAAgB;;WAErB,CAAC;QACJ,CAAC,CAAC;;;;UAIA,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YAC7B,MAAM,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC;YAC9C,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC;YACpD,IAAG,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;gBACf,OAAO,OAAO,CAAC,OAAO,CAAC;YACzB,CAAC;YACD,MAAM,IAAI,GAAG;gBACX,eAAe,EAAE,IAAI,CAAC,gBAAgB,IAAI,IAAI;gBAC9C,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,YAAY,EAAE,EAAE;gBAChB,cAAc,EAAE,IAAI,CAAC,iBAAiB;gBACtC,aAAa,EAAE,IAAI,CAAC,cAAc;aACnC,CAAC;YAEF,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAA;eACxB,uBAAuB,CAAC,UAAU;sBAC3B,IAAmC;gBACzC,uBAAuB,CAAC,UAAU;WACvC,CAAC;YAEF,IAAG,sBAAsB,EAAE,CAAC;gBAC1B,OAAO,OAAO,CAAC,IAAI,CAAA;sBACT,EAAE,KAAK,IAAI,CAAC,mBAAmB;;;gCAGrB,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,IAAI,GAAG;gBACxD,QAAQ;uBACD,CAAC;YACd,CAAC;YAED,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC;;KAEL,CAAC;QACF,kBAAkB;QAClB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAA,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IACpE,CAAC;;AAGH,cAAc,CAAC,MAAM,CAAC,uCAAuC,EAAE,kBAAkB,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as TraceEngine from '../../../models/trace/trace.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport * as Insights from './insights/insights.js';\nimport {type ActiveInsight} from './Sidebar.js';\nimport styles from './sidebarInsightsTab.css.js';\nimport {SidebarSingleNavigation, type SidebarSingleNavigationData} from './SidebarSingleNavigation.js';\n\nexport enum InsightsCategories {\n  ALL = 'All',\n  INP = 'INP',\n  LCP = 'LCP',\n  CLS = 'CLS',\n  OTHER = 'Other',\n}\n\nexport class SidebarInsightsTab extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-performance-sidebar-insights`;\n  readonly #boundRender = this.#render.bind(this);\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #traceParsedData: TraceEngine.Handlers.Types.TraceParseData|null = null;\n  #insights: TraceEngine.Insights.Types.TraceInsightData|null = null;\n  #activeInsight: ActiveInsight|null = null;\n  #selectedCategory: InsightsCategories = InsightsCategories.ALL;\n  /**\n   * When a trace has multiple navigations, we show an accordion with each\n   * navigation in. You can only have one of these open at any time, and we\n   * track it via this ID.\n   */\n  #activeNavigationId: string|null = null;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [styles];\n  }\n\n  set traceParsedData(data: TraceEngine.Handlers.Types.TraceParseData|null) {\n    if (data === this.#traceParsedData) {\n      return;\n    }\n    this.#traceParsedData = data;\n    // When the trace data gets set, we clear the active navigation ID (as any old\n    // navigation ID is now outdated) and we auto-set the first ID to be\n    // active.\n    if (data) {\n      this.#activeNavigationId = data.Meta.mainFrameNavigations.at(0)?.args.data?.navigationId ?? null;\n    }\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set insights(data: TraceEngine.Insights.Types.TraceInsightData|null) {\n    if (data === this.#insights) {\n      return;\n    }\n    this.#insights = data;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set activeInsight(active: ActiveInsight|null) {\n    if (active === this.#activeInsight) {\n      return;\n    }\n    this.#activeInsight = active;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #onCategoryDropdownChange(event: Event): void {\n    const target = event.target as HTMLOptionElement;\n    const value = target.value as InsightsCategories;\n    this.#selectedCategory = value;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #navigationClicked(id: string): void {\n    // New navigation clicked. Update the active insight.\n    if (id !== this.#activeInsight?.navigationId) {\n      this.dispatchEvent(new Insights.SidebarInsight.InsightDeactivated());\n    }\n    this.#activeNavigationId = id;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #render(): void {\n    if (!this.#traceParsedData || !this.#insights) {\n      LitHtml.render(LitHtml.nothing, this.#shadow, {host: this});\n      return;\n    }\n\n    const navigations = this.#traceParsedData.Meta.mainFrameNavigations ?? [];\n\n    const hasMultipleNavigations = navigations.length > 1;\n\n    // clang-format off\n    const html = LitHtml.html`\n      <select class=\"chrome-select insights-category-select\"\n        @change=${this.#onCategoryDropdownChange}\n        jslog=${VisualLogging.dropDown('timeline.sidebar-insights-category-select').track({click: true})}\n      >\n        ${Object.values(InsightsCategories).map(insightsCategory => {\n          return LitHtml.html`\n            <option value=${insightsCategory}>\n              ${insightsCategory}\n            </option>\n          `;\n        })}\n      </select>\n\n      <div class=\"navigations-wrapper\">\n        ${navigations.map(navigation => {\n          const id = navigation.args.data?.navigationId;\n          const url = navigation.args.data?.documentLoaderURL;\n          if(!id || !url) {\n            return LitHtml.nothing;\n          }\n          const data = {\n            traceParsedData: this.#traceParsedData ?? null,\n            insights: this.#insights,\n            navigationId: id,\n            activeCategory: this.#selectedCategory,\n            activeInsight: this.#activeInsight,\n          };\n\n          const contents = LitHtml.html`\n            <${SidebarSingleNavigation.litTagName}\n              .data=${data as SidebarSingleNavigationData}>\n            </${SidebarSingleNavigation.litTagName}>\n          `;\n\n          if(hasMultipleNavigations) {\n            return LitHtml.html`<details\n              ?open=${id === this.#activeNavigationId}\n              class=\"navigation-wrapper\"\n            >\n              <summary @click=${() => this.#navigationClicked(id)}>${url}</summary>\n              ${contents}\n            </details>`;\n          }\n\n          return contents;\n        })}\n      </div>\n    `;\n    // clang-format on\n    LitHtml.render(LitHtml.html`${html}`, this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-performance-sidebar-insights', SidebarInsightsTab);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-sidebar-insights': SidebarInsightsTab;\n  }\n}\n"]}