{"version":3,"file":"SidebarInsight.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/SidebarInsight.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as TimelineComponents from './components.js';\n\ndescribeWithEnvironment('SidebarInsight', () => {\n  const {SidebarInsight} = TimelineComponents.SidebarInsight;\n  const coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\n  it('renders insight title', async () => {\n    const component = new SidebarInsight();\n    component.data = {title: 'LCP by Phase', expanded: true};\n    renderElementIntoDOM(component);\n\n    await coordinator.done();\n\n    assert.isNotNull(component.shadowRoot);\n    const titleElement = component.shadowRoot.querySelector<HTMLElement>('.insight-title');\n    assert.isNotNull(titleElement);\n    assert.deepEqual(titleElement.textContent, 'LCP by Phase');\n  });\n\n  it('renders only insight title when not toggled', async () => {\n    const component = new SidebarInsight();\n    component.data = {title: 'LCP by Phase', expanded: false};\n    renderElementIntoDOM(component);\n\n    await coordinator.done();\n\n    assert.isNotNull(component.shadowRoot);\n    const titleElement = component.shadowRoot.querySelector<HTMLElement>('.insight-title');\n    assert.isNotNull(titleElement);\n    assert.deepEqual(titleElement.textContent, 'LCP by Phase');\n\n    // Should not contain the description and content slots.\n    const slotElements = component.shadowRoot.querySelectorAll<HTMLSlotElement>('slot');\n    assert.isEmpty(slotElements);\n  });\n\n  it('renders title, description and content when toggled', async () => {\n    const component = new SidebarInsight();\n    component.data = {title: 'LCP by Phase', expanded: true};\n    renderElementIntoDOM(component);\n\n    await coordinator.done();\n\n    assert.isNotNull(component.shadowRoot);\n    const titleElement = component.shadowRoot.querySelector<HTMLElement>('.insight-title');\n    assert.isNotNull(titleElement);\n    assert.deepEqual(titleElement.textContent, 'LCP by Phase');\n\n    const slotElements = component.shadowRoot.querySelectorAll<HTMLSlotElement>('slot');\n    assert.isNotEmpty(slotElements);\n\n    const descriptionSlot = slotElements[0];\n    assert.isNotNull(descriptionSlot);\n    assert.strictEqual(descriptionSlot.name, 'insight-description');\n\n    const contentSlot = slotElements[1];\n    assert.isNotNull(contentSlot);\n    assert.strictEqual(contentSlot.name, 'insight-content');\n  });\n});\n"]}