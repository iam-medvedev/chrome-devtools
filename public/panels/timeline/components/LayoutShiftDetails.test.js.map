{"version":3,"file":"LayoutShiftDetails.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/LayoutShiftDetails.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,EAAC,0BAA0B,EAAC,MAAM,oCAAoC,CAAC;AAC9E,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAE5D,OAAO,KAAK,kBAAkB,MAAM,iBAAiB,CAAC;AAEtD,0BAA0B,CAAC,oBAAoB,EAAE,GAAG,EAAE;IACpD,EAAE,CAAC,sCAAsC,EAAE,KAAK;QAC9C,MAAM,EAAC,WAAW,EAAE,QAAQ,EAAC,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QACjG,MAAM,UAAU,GAAG,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAA0D,CAAC;QACnH,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAE7B,MAAM,OAAO,GAAG,IAAI,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;QAC/E,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;QAE1D,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,6BAA6B,CAAC,CAAC;QACnF,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;QAExD,MAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,6BAA6B,CAAC,CAAC;QAE9E,oCAAoC;QACpC,MAAM,YAAY,GAAG,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;QACnD,MAAM,OAAO,GAAG,KAAK,EAAE,WAAW,CAAC;QACnC,KAAK,MAAM,MAAM,IAAI,YAAY,EAAE,CAAC;YAClC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAClC,CAAC;QAED,kFAAkF;QAClF,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,mCAAmC,EAAE,KAAK;QAC3C,MAAM,EAAC,WAAW,EAAE,QAAQ,EAAC,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QACjG,MAAM,OAAO,GAAG,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAE1B,MAAM,OAAO,GAAG,IAAI,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;QAC/E,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;QAEvD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,6BAA6B,CAAC,CAAC;QACnF,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,WAAW,EAAE,sBAAsB,CAAC,CAAC;QAEhE,MAAM,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,6BAA6B,CAAC,CAAC;QAC9E,MAAM,YAAY,GAAG,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;QACnD,MAAM,OAAO,GAAG,KAAK,EAAE,WAAW,CAAC;QACnC,KAAK,MAAM,MAAM,IAAI,YAAY,EAAE,CAAC;YAClC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAClC,CAAC;QAED,wCAAwC;QACxC,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAChE,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;QAEzD,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAC/D,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Trace from '../../../models/trace/trace.js';\nimport {describeWithMockConnection} from '../../../testing/MockConnection.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\n\nimport * as TimelineComponents from './components.js';\n\ndescribeWithMockConnection('LayoutShiftDetails', () => {\n  it('correctly renders main shift details', async function() {\n    const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'shift-attribution.json.gz');\n    const shiftEvent = parsedTrace.LayoutShifts.clusters[0].worstShiftEvent as Trace.Types.Events.SyntheticLayoutShift;\n    assert.isNotNull(shiftEvent);\n\n    const details = new TimelineComponents.LayoutShiftDetails.LayoutShiftDetails();\n    details.setData(shiftEvent, insights, parsedTrace, false);\n\n    assert.isNotNull(details.shadowRoot);\n    const eventTitle = details.shadowRoot.querySelector('.layout-shift-details-title');\n    assert.include(eventTitle?.textContent, 'Layout shift');\n\n    const table = details.shadowRoot.querySelector('.layout-shift-details-table');\n\n    // These headers should be included.\n    const tableHeaders = ['Start time', 'Shift score'];\n    const content = table?.textContent;\n    for (const header of tableHeaders) {\n      assert.include(content, header);\n    }\n\n    // This header should not be included. Since this is not a freshly recorded trace.\n    assert.notInclude(content, 'Elements shifted');\n  });\n  it('correctly renders cluster details', async function() {\n    const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'shift-attribution.json.gz');\n    const cluster = parsedTrace.LayoutShifts.clusters[0];\n    assert.isNotNull(cluster);\n\n    const details = new TimelineComponents.LayoutShiftDetails.LayoutShiftDetails();\n    details.setData(cluster, insights, parsedTrace, false);\n\n    assert.isNotNull(details.shadowRoot);\n    const eventTitle = details.shadowRoot.querySelector('.layout-shift-details-title');\n    assert.include(eventTitle?.textContent, 'Layout shift cluster');\n\n    const table = details.shadowRoot.querySelector('.layout-shift-details-table');\n    const tableHeaders = ['Start time', 'Shift score'];\n    const content = table?.textContent;\n    for (const header of tableHeaders) {\n      assert.include(content, header);\n    }\n\n    // Shift row should be \"layout shift @\".\n    const shiftRow = details.shadowRoot.querySelector('.shift-row');\n    assert.include(shiftRow?.textContent, 'Layout shift @ ');\n\n    const lastRow = details.shadowRoot.querySelector('.total-row');\n    assert.include(lastRow?.textContent, 'Total');\n  });\n});\n"]}