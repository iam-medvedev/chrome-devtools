{"version":3,"file":"FieldSettingsDialog.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/FieldSettingsDialog.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {describeWithMockConnection} from '../../../testing/MockConnection.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as Components from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nconst OPEN_BUTTON_SELECTOR = 'devtools-button';\nconst ENABLE_BUTTON_SELECTOR = 'devtools-button[data-field-data-enable]';\nconst DISABLE_BUTTON_SELECTOR = 'devtools-button[data-field-data-disable]';\nconst OVERRIDE_CHECKBOX_SELECTOR = 'input[type=\"checkbox\"]';\nconst OVERRIDE_TEXT_SELECTOR = 'input[type=\"text\"]';\n\nfunction getMappingInputs(view: Element): Array<HTMLInputElement|undefined> {\n  const dgController = view.shadowRoot!.querySelector('devtools-data-grid-controller');\n  const dataGrid = dgController!.shadowRoot!.querySelector('devtools-data-grid');\n  const inputs = dataGrid!.shadowRoot!.querySelectorAll('input');\n  return Array.from(inputs);\n}\n\nfunction getAddMappingButton(view: Element): HTMLElementTagNameMap['devtools-button']|null {\n  const dgController = view.shadowRoot!.querySelector('devtools-data-grid-controller');\n  const dataGrid = dgController!.shadowRoot!.querySelector('devtools-data-grid');\n  return dataGrid!.shadowRoot!.querySelector('devtools-button#add-mapping-button');\n}\n\nfunction getDeleteMappingButtons(view: Element): HTMLElementTagNameMap['devtools-button'][] {\n  const dgController = view.shadowRoot!.querySelector('devtools-data-grid-controller');\n  const dataGrid = dgController!.shadowRoot!.querySelector('devtools-data-grid');\n  return Array.from(dataGrid!.shadowRoot!.querySelectorAll('devtools-button.delete-mapping'));\n}\n\nfunction getNewMappingButton(view: Element): HTMLElementTagNameMap['devtools-button'] {\n  return view.shadowRoot!.querySelector('.origin-mapping-button-section devtools-button') as\n      HTMLElementTagNameMap['devtools-button'];\n}\n\nfunction getMappingTableTextCells(view: Element): HTMLElement[] {\n  const dgController = view.shadowRoot!.querySelector('devtools-data-grid-controller');\n  const dataGrid = dgController!.shadowRoot!.querySelector('devtools-data-grid');\n  const cells = Array.from(dataGrid!.shadowRoot!.querySelectorAll('tr[aria-rowindex] td'));\n  return cells.filter(c => !c.firstElementChild) as HTMLElement[];\n}\n\nfunction mockResponse(): CrUXManager.CrUXResponse {\n  return {\n    record: {\n      key: {},\n      metrics: {\n        largest_contentful_paint: {\n          histogram: [\n            {start: 0, end: 2500, density: 0.5},\n            {start: 2500, end: 4000, density: 0.3},\n            {start: 4000, density: 0.2},\n          ],\n          percentiles: {p75: 1000},\n        },\n        cumulative_layout_shift: {\n          histogram: [\n            {start: 0, end: 0.1, density: 0.1},\n            {start: 0.1, end: 0.25, density: 0.1},\n            {start: 0.25, density: 0.8},\n          ],\n          percentiles: {p75: 0.25},\n        },\n      },\n      collectionPeriod: {\n        firstDate: {year: 2024, month: 1, day: 1},\n        lastDate: {year: 2024, month: 1, day: 29},\n      },\n    },\n  };\n}\n\ndescribeWithMockConnection('FieldSettingsDialog', () => {\n  let cruxManager: CrUXManager.CrUXManager;\n  let mockFieldData: CrUXManager.PageResult;\n  let getFieldDataStub: sinon.SinonStub;\n\n  beforeEach(async () => {\n    cruxManager = CrUXManager.CrUXManager.instance({forceNew: true});\n    getFieldDataStub = sinon.stub(cruxManager, 'getFieldDataForPage').callsFake(async () => mockFieldData);\n\n    mockFieldData = {\n      'origin-ALL': null,\n      'origin-DESKTOP': null,\n      'origin-PHONE': null,\n      'origin-TABLET': null,\n      'url-ALL': null,\n      'url-DESKTOP': null,\n      'url-PHONE': null,\n      'url-TABLET': null,\n    };\n\n    cruxManager.getConfigSetting().set({enabled: false, override: ''});\n  });\n\n  afterEach(async () => {\n    getFieldDataStub.restore();\n  });\n\n  it('should enable field when enable button clicked', async () => {\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    assert.isFalse(cruxManager.getConfigSetting().get().enabled);\n\n    const openButton = view.shadowRoot!.querySelector(OPEN_BUTTON_SELECTOR) as HTMLElement;\n    assert.strictEqual(openButton.innerText, 'Set up');\n    openButton.click();\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(ENABLE_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    assert.isFalse(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n    assert.isTrue(cruxManager.getConfigSetting().get().enabled);\n  });\n\n  it('should disable field data when disable button clicked', async () => {\n    cruxManager.getConfigSetting().set({enabled: true, override: ''});\n\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    const openButton = view.shadowRoot!.querySelector(OPEN_BUTTON_SELECTOR) as HTMLElement;\n    assert.strictEqual(openButton.innerText, 'Configure');\n    openButton.click();\n\n    await coordinator.done();\n\n    const disableButton = view.shadowRoot!.querySelector(DISABLE_BUTTON_SELECTOR) as HTMLElement;\n    assert.strictEqual(disableButton.innerText, 'Opt out');\n    disableButton.click();\n\n    await coordinator.done();\n\n    assert.isFalse(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n    assert.isFalse(cruxManager.getConfigSetting().get().enabled);\n  });\n\n  it('should set URL override on enable', async () => {\n    mockFieldData['url-ALL'] = mockResponse();\n\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OVERRIDE_CHECKBOX_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    const urlOverride = view.shadowRoot!.querySelector(OVERRIDE_TEXT_SELECTOR) as HTMLInputElement;\n    urlOverride.value = 'https://example.com';\n    urlOverride.dispatchEvent(new Event('change'));\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(ENABLE_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done({waitForWork: true});\n\n    assert.isFalse(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n    assert.isTrue(cruxManager.getConfigSetting().get().enabled);\n    assert.strictEqual(cruxManager.getConfigSetting().get().override, 'https://example.com');\n    assert.isTrue(cruxManager.getConfigSetting().get().overrideEnabled);\n  });\n\n  it('should still set URL override on disable', async () => {\n    mockFieldData['url-ALL'] = mockResponse();\n\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OVERRIDE_CHECKBOX_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    const urlOverride = view.shadowRoot!.querySelector(OVERRIDE_TEXT_SELECTOR) as HTMLInputElement;\n    urlOverride.value = 'https://example.com';\n    urlOverride.dispatchEvent(new Event('change'));\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(DISABLE_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done({waitForWork: true});\n\n    assert.isFalse(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n    assert.isFalse(cruxManager.getConfigSetting().get().enabled);\n    assert.strictEqual(cruxManager.getConfigSetting().get().override, 'https://example.com');\n    assert.isTrue(cruxManager.getConfigSetting().get().overrideEnabled);\n  });\n\n  it('should show message for URL override with no data', async () => {\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OVERRIDE_CHECKBOX_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    const urlOverride = view.shadowRoot!.querySelector(OVERRIDE_TEXT_SELECTOR) as HTMLInputElement;\n    urlOverride.value = 'https://example.com';\n    urlOverride.dispatchEvent(new Event('change'));\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(ENABLE_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done({waitForWork: true});\n\n    assert.strictEqual(\n        view.shadowRoot!.querySelector('.warning')!.textContent,\n        'The Chrome UX Report does not have sufficient real-world speed data for this page.');\n\n    assert.isTrue(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n    assert.isFalse(cruxManager.getConfigSetting().get().enabled);\n    assert.strictEqual(cruxManager.getConfigSetting().get().override, '');\n  });\n\n  it('should show message for malformed URL', async () => {\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OVERRIDE_CHECKBOX_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    const urlOverride = view.shadowRoot!.querySelector(OVERRIDE_TEXT_SELECTOR) as HTMLInputElement;\n    urlOverride.value = '//example.com';\n    urlOverride.dispatchEvent(new Event('change'));\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(ENABLE_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done({waitForWork: true});\n\n    assert.strictEqual(\n        view.shadowRoot!.querySelector('.warning')!.textContent, '\"//example.com\" is not a valid origin or URL.');\n\n    assert.isTrue(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n    assert.isFalse(cruxManager.getConfigSetting().get().enabled);\n    assert.strictEqual(cruxManager.getConfigSetting().get().override, '');\n  });\n\n  it('should restore URL override from setting', async () => {\n    cruxManager.getConfigSetting().set({\n      enabled: true,\n      override: 'https://example.com',\n      overrideEnabled: true,\n    });\n\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    const checked = view.shadowRoot!.querySelector<HTMLInputElement>(OVERRIDE_CHECKBOX_SELECTOR)!.checked;\n    const urlOverride = view.shadowRoot!.querySelector<HTMLInputElement>(OVERRIDE_TEXT_SELECTOR)!.value;\n\n    assert.strictEqual(urlOverride, 'https://example.com');\n    assert.isTrue(checked);\n  });\n\n  it('should restore URL override from setting if override disabled', async () => {\n    cruxManager.getConfigSetting().set({\n      enabled: true,\n      override: 'https://example.com',\n      overrideEnabled: false,\n    });\n\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    const checked = view.shadowRoot!.querySelector<HTMLInputElement>(OVERRIDE_CHECKBOX_SELECTOR)!.checked;\n    const urlOverride = view.shadowRoot!.querySelector<HTMLInputElement>(OVERRIDE_TEXT_SELECTOR)!.value;\n\n    assert.strictEqual(urlOverride, 'https://example.com');\n    assert.isFalse(checked);\n  });\n\n  describe('origin mapping', () => {\n    it('should flush to settings on submit', async () => {\n      mockFieldData['url-ALL'] = mockResponse();\n\n      const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n      renderElementIntoDOM(view);\n      await coordinator.done();\n\n      view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n      await coordinator.done();\n\n      const newMappingButton = getNewMappingButton(view);\n      newMappingButton.click();\n\n      await coordinator.done();\n\n      const [devInput, prodInput] = getMappingInputs(view);\n      devInput!.value = 'http://localhost:8080/page1/';\n      devInput!.dispatchEvent(new Event('change'));\n\n      prodInput!.value = 'https://example.com/#asdf';\n      prodInput!.dispatchEvent(new Event('change'));\n\n      await coordinator.done();\n\n      const addMappingButton = getAddMappingButton(view);\n      addMappingButton!.click();\n\n      await coordinator.done({waitForWork: true});\n\n      const textCells = getMappingTableTextCells(view);\n      assert.deepStrictEqual(textCells.map(c => c!.textContent), [\n        'http://localhost:8080',\n        'https://example.com',\n      ]);\n\n      view.shadowRoot!.querySelector<HTMLElement>(ENABLE_BUTTON_SELECTOR)!.click();\n\n      await coordinator.done({waitForWork: true});\n\n      assert.isFalse(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n      assert.isTrue(cruxManager.getConfigSetting().get().enabled);\n      assert.strictEqual(cruxManager.getConfigSetting().get().override, '');\n      assert.deepStrictEqual(cruxManager.getConfigSetting().get().originMappings, [\n        {developmentOrigin: 'http://localhost:8080', productionOrigin: 'https://example.com'},\n      ]);\n    });\n\n    it('should warn if either URL is invalid', async () => {\n      mockFieldData['url-ALL'] = mockResponse();\n\n      const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n      renderElementIntoDOM(view);\n      await coordinator.done();\n\n      view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n      await coordinator.done();\n\n      const newMappingButton = getNewMappingButton(view);\n      newMappingButton.click();\n\n      await coordinator.done();\n\n      const [devInput, prodInput] = getMappingInputs(view);\n      devInput!.value = 'bad-one';\n      devInput!.dispatchEvent(new Event('change'));\n\n      prodInput!.value = 'bad-two';\n      prodInput!.dispatchEvent(new Event('change'));\n\n      await coordinator.done();\n\n      const addMappingButton = getAddMappingButton(view);\n      addMappingButton!.click();\n\n      await coordinator.done({waitForWork: true});\n\n      {\n        const textCells = getMappingTableTextCells(view);\n        assert.deepStrictEqual(textCells, []);\n      }\n\n      assert.strictEqual(\n          view.shadowRoot!.querySelector('.warning')!.textContent, '\"bad-one\" is not a valid origin or URL.');\n\n      devInput!.value = 'https://localhost:8080';\n      devInput!.dispatchEvent(new Event('change'));\n\n      await coordinator.done();\n\n      addMappingButton!.click();\n\n      await coordinator.done({waitForWork: true});\n\n      {\n        const textCells = getMappingTableTextCells(view);\n        assert.deepStrictEqual(textCells, []);\n      }\n\n      assert.strictEqual(\n          view.shadowRoot!.querySelector('.warning')!.textContent, '\"bad-two\" is not a valid origin or URL.');\n    });\n\n    it('should warn if there is not CrUX data for the prod origin', async () => {\n      const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n      renderElementIntoDOM(view);\n      await coordinator.done();\n\n      view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n      await coordinator.done();\n\n      const newMappingButton = getNewMappingButton(view);\n      newMappingButton.click();\n\n      await coordinator.done();\n\n      const [devInput, prodInput] = getMappingInputs(view);\n      devInput!.value = 'http://localhost:8080';\n      devInput!.dispatchEvent(new Event('change'));\n\n      prodInput!.value = 'https://no-field.com';\n      prodInput!.dispatchEvent(new Event('change'));\n\n      await coordinator.done();\n\n      const addMappingButton = getAddMappingButton(view);\n      addMappingButton!.click();\n\n      await coordinator.done({waitForWork: true});\n\n      const textCells = getMappingTableTextCells(view);\n      assert.deepStrictEqual(textCells, []);\n\n      assert.strictEqual(\n          view.shadowRoot!.querySelector('.warning')!.textContent,\n          'The Chrome UX Report does not have sufficient real-world speed data for this page.');\n    });\n\n    it('should warn if a mapping for the dev origin already exists', async () => {\n      mockFieldData['url-ALL'] = mockResponse();\n      cruxManager.getConfigSetting().set({\n        enabled: false,\n        override: '',\n        originMappings: [{developmentOrigin: 'http://localhost:8080', productionOrigin: 'https://google.com'}],\n      });\n\n      const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n      renderElementIntoDOM(view);\n      await coordinator.done();\n\n      view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n      await coordinator.done();\n\n      const newMappingButton = getNewMappingButton(view);\n      newMappingButton.click();\n\n      await coordinator.done();\n\n      const [devInput, prodInput] = getMappingInputs(view);\n      devInput!.value = 'http://localhost:8080';\n      devInput!.dispatchEvent(new Event('change'));\n\n      prodInput!.value = 'https://example.com';\n      prodInput!.dispatchEvent(new Event('change'));\n\n      await coordinator.done();\n\n      const addMappingButton = getAddMappingButton(view);\n      addMappingButton!.click();\n\n      await coordinator.done({waitForWork: true});\n\n      const textCells = getMappingTableTextCells(view);\n      assert.deepStrictEqual(textCells.map(c => c!.textContent), [\n        'http://localhost:8080',\n        'https://google.com',\n      ]);\n\n      assert.strictEqual(\n          view.shadowRoot!.querySelector('.warning')!.textContent,\n          '\"http://localhost:8080\" is already mapped to a production origin.');\n    });\n\n    it('should handle deleting entries', async () => {\n      cruxManager.getConfigSetting().set({\n        enabled: false,\n        override: '',\n        originMappings: [{developmentOrigin: 'http://localhost:8080', productionOrigin: 'https://google.com'}],\n      });\n\n      const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n      renderElementIntoDOM(view);\n      await coordinator.done();\n\n      view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n      await coordinator.done();\n\n      {\n        const textCells = getMappingTableTextCells(view);\n        assert.deepStrictEqual(textCells.map(c => c!.textContent), [\n          'http://localhost:8080',\n          'https://google.com',\n        ]);\n      }\n\n      const deleteButtons = getDeleteMappingButtons(view);\n      deleteButtons[0].click();\n\n      await coordinator.done();\n\n      {\n        const textCells = getMappingTableTextCells(view);\n        assert.deepStrictEqual(textCells, []);\n      }\n\n      view.shadowRoot!.querySelector<HTMLElement>(ENABLE_BUTTON_SELECTOR)!.click();\n\n      await coordinator.done({waitForWork: true});\n\n      assert.isFalse(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n      assert.isTrue(cruxManager.getConfigSetting().get().enabled);\n      assert.strictEqual(cruxManager.getConfigSetting().get().override, '');\n      assert.deepStrictEqual(cruxManager.getConfigSetting().get().originMappings, []);\n    });\n  });\n});\n"]}