{"version":3,"file":"FieldSettingsDialog.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/FieldSettingsDialog.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {describeWithMockConnection} from '../../../testing/MockConnection.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as Components from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nconst OPEN_BUTTON_SELECTOR = 'devtools-button';\nconst ENABLE_BUTTON_SELECTOR = 'devtools-button[jslogcontext=\"field-data-enable\"]';\nconst DISABLE_BUTTON_SELECTOR = 'devtools-button[jslogcontext=\"field-data-disable\"]';\nconst OVERRIDE_CHECKBOX_SELECTOR = 'input[type=\"checkbox\"]';\nconst OVERRIDE_TEXT_SELECTOR = 'input[type=\"text\"]';\n\nfunction mockResponse(): CrUXManager.CrUXResponse {\n  return {\n    record: {\n      key: {},\n      metrics: {\n        'largest_contentful_paint': {\n          histogram: [\n            {start: 0, end: 2500, density: 0.5},\n            {start: 2500, end: 4000, density: 0.3},\n            {start: 4000, density: 0.2},\n          ],\n          percentiles: {p75: 1000},\n        },\n        'cumulative_layout_shift': {\n          histogram: [\n            {start: 0, end: 0.1, density: 0.1},\n            {start: 0.1, end: 0.25, density: 0.1},\n            {start: 0.25, density: 0.8},\n          ],\n          percentiles: {p75: 0.25},\n        },\n      },\n      collectionPeriod: {\n        firstDate: {year: 2024, month: 1, day: 1},\n        lastDate: {year: 2024, month: 1, day: 29},\n      },\n    },\n  };\n}\n\ndescribeWithMockConnection('FieldSettingsDialog', () => {\n  let cruxManager: CrUXManager.CrUXManager;\n  let mockFieldData: CrUXManager.PageResult;\n  let getFieldDataStub: sinon.SinonStub;\n\n  beforeEach(async () => {\n    cruxManager = CrUXManager.CrUXManager.instance({forceNew: true});\n    getFieldDataStub = sinon.stub(cruxManager, 'getFieldDataForPage').callsFake(async () => mockFieldData);\n\n    mockFieldData = {\n      'origin-ALL': null,\n      'origin-DESKTOP': null,\n      'origin-PHONE': null,\n      'origin-TABLET': null,\n      'url-ALL': null,\n      'url-DESKTOP': null,\n      'url-PHONE': null,\n      'url-TABLET': null,\n    };\n\n    cruxManager.getConfigSetting().set({enabled: false, override: ''});\n  });\n\n  afterEach(async () => {\n    getFieldDataStub.restore();\n  });\n\n  it('should enable field when enable button clicked', async () => {\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    assert.isFalse(cruxManager.getConfigSetting().get().enabled);\n\n    const openButton = view.shadowRoot!.querySelector(OPEN_BUTTON_SELECTOR) as HTMLElement;\n    assert.strictEqual(openButton.innerText, 'Set up');\n    openButton.click();\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(ENABLE_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    assert.isFalse(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n    assert.isTrue(cruxManager.getConfigSetting().get().enabled);\n  });\n\n  it('should disable field data when disable button clicked', async () => {\n    cruxManager.getConfigSetting().set({enabled: true, override: ''});\n\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    const openButton = view.shadowRoot!.querySelector(OPEN_BUTTON_SELECTOR) as HTMLElement;\n    assert.strictEqual(openButton.innerText, 'Configure');\n    openButton.click();\n\n    await coordinator.done();\n\n    const disableButton = view.shadowRoot!.querySelector(DISABLE_BUTTON_SELECTOR) as HTMLElement;\n    assert.strictEqual(disableButton.innerText, 'Opt out');\n    disableButton.click();\n\n    await coordinator.done();\n\n    assert.isFalse(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n    assert.isFalse(cruxManager.getConfigSetting().get().enabled);\n  });\n\n  it('should set URL override on enable', async () => {\n    mockFieldData['url-ALL'] = mockResponse();\n\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OVERRIDE_CHECKBOX_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    const urlOverride = view.shadowRoot!.querySelector(OVERRIDE_TEXT_SELECTOR) as HTMLInputElement;\n    urlOverride.value = 'https://example.com';\n    urlOverride.dispatchEvent(new Event('change'));\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(ENABLE_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done({waitForWork: true});\n\n    assert.isFalse(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n    assert.isTrue(cruxManager.getConfigSetting().get().enabled);\n    assert.strictEqual(cruxManager.getConfigSetting().get().override, 'https://example.com');\n  });\n\n  it('should still set URL override on disable', async () => {\n    mockFieldData['url-ALL'] = mockResponse();\n\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OVERRIDE_CHECKBOX_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    const urlOverride = view.shadowRoot!.querySelector(OVERRIDE_TEXT_SELECTOR) as HTMLInputElement;\n    urlOverride.value = 'https://example.com';\n    urlOverride.dispatchEvent(new Event('change'));\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(DISABLE_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done({waitForWork: true});\n\n    assert.isFalse(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n    assert.isFalse(cruxManager.getConfigSetting().get().enabled);\n    assert.strictEqual(cruxManager.getConfigSetting().get().override, 'https://example.com');\n  });\n\n  it('should show message for URL override with no data', async () => {\n    const view = new Components.FieldSettingsDialog.FieldSettingsDialog();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OPEN_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(OVERRIDE_CHECKBOX_SELECTOR)!.click();\n\n    await coordinator.done();\n\n    const urlOverride = view.shadowRoot!.querySelector(OVERRIDE_TEXT_SELECTOR) as HTMLInputElement;\n    urlOverride.value = 'https://example.com';\n    urlOverride.dispatchEvent(new Event('change'));\n\n    await coordinator.done();\n\n    view.shadowRoot!.querySelector<HTMLElement>(ENABLE_BUTTON_SELECTOR)!.click();\n\n    await coordinator.done({waitForWork: true});\n\n    assert.strictEqual(\n        view.shadowRoot!.querySelector('.warning')!.textContent,\n        'The Chrome UX Report does not have sufficient real-world speed data for this page.');\n\n    assert.isTrue(view.shadowRoot!.querySelector('devtools-dialog')!.shadowRoot!.querySelector('dialog')!.open);\n    assert.isFalse(cruxManager.getConfigSetting().get().enabled);\n    assert.strictEqual(cruxManager.getConfigSetting().get().override, '');\n  });\n});\n"]}