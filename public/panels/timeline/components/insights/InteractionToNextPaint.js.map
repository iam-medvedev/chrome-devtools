{"version":3,"file":"InteractionToNextPaint.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/InteractionToNextPaint.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsight, md, shouldRenderForCategory} from './Helpers.js';\nimport * as SidebarInsight from './SidebarInsight.js';\nimport {Table, type TableData} from './Table.js';\nimport {InsightsCategories} from './types.js';\n\nconst UIStrings = {\n  /**\n   * @description Text to tell the user about the longest user interaction.\n   */\n  description:\n      'Optimize user responsiveness by [improving the Interaction to Next Paint metric](https://web.dev/articles/optimize-inp).',\n  /**\n   * @description Title for the performance insight \"INP by phase\", which shows a breakdown of INP by phases / sections.\n   */\n  title: 'INP by phase',\n  /**\n   *@description Label used to denote the longest user interaction.\n   */\n  longestInteraction: 'Longest interaction',\n  /**\n   *@description Label used for the phase/component/stage/section of a larger duration.\n   */\n  phase: 'Phase',\n  /**\n   *@description Label used for a time duration.\n   */\n  duration: 'Duration',\n\n  // TODO: these are repeated in InteractionBreakdown. Add a place for common strings?\n  /**\n   *@description Text shown next to the interaction event's input delay time in the detail view.\n   */\n  inputDelay: 'Input delay',\n  /**\n   *@description Text shown next to the interaction event's thread processing duration in the detail view.\n   */\n  processingDuration: 'Processing duration',\n  /**\n   *@description Text shown next to the interaction event's presentation delay time in the detail view.\n   */\n  presentationDelay: 'Presentation delay',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/InteractionToNextPaint.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport function getINPInsight(insights: Trace.Insights.Types.TraceInsightSets|null, navigationId: string|null):\n    Trace.Insights.Types.InsightResults['InteractionToNextPaint']|null {\n  if (!insights || !navigationId) {\n    return null;\n  }\n\n  const insightsByNavigation = insights.get(navigationId);\n  if (!insightsByNavigation) {\n    return null;\n  }\n\n  const insight = insightsByNavigation.data.InteractionToNextPaint;\n  if (insight instanceof Error) {\n    return null;\n  }\n  return insight;\n}\n\nexport class InteractionToNextPaint extends BaseInsight {\n  static readonly litTagName = LitHtml.literal`devtools-performance-inp`;\n  override insightCategory: InsightsCategories = InsightsCategories.INP;\n  override internalName: string = 'inp';\n  override userVisibleTitle: string = i18nString(UIStrings.title);\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    if (!this.data.insights || !this.data.navigationId) {\n      return [];\n    }\n    const {navigationId, insights} = this.data;\n\n    const insightsByNavigation = insights.get(navigationId);\n    if (!insightsByNavigation) {\n      return [];\n    }\n\n    const insight = getINPInsight(insights, this.data.navigationId);\n    if (!insight) {\n      return [];\n    }\n\n    const event = insight.longestInteractionEvent;\n    if (!event) {\n      return [];\n    }\n\n    const p1 = Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n        event.ts,\n        (event.ts + event.inputDelay) as Trace.Types.Timing.MicroSeconds,\n    );\n    const p2 = Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n        p1.max,\n        (p1.max + event.mainThreadHandling) as Trace.Types.Timing.MicroSeconds,\n    );\n    const p3 = Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n        p2.max,\n        (p2.max + event.presentationDelay) as Trace.Types.Timing.MicroSeconds,\n    );\n    const sections = [\n      {bounds: p1, label: i18nString(UIStrings.inputDelay), showDuration: true},\n      {bounds: p2, label: i18nString(UIStrings.processingDuration), showDuration: true},\n      {bounds: p3, label: i18nString(UIStrings.presentationDelay), showDuration: true},\n    ];\n\n    return [\n      {\n        type: 'TIMESPAN_BREAKDOWN',\n        sections,\n      },\n      {\n        type: 'ENTRY_LABEL',\n        // TODO(b/351757537) why aren't annotations rendering for synthetic events?\n        entry: event,\n        label: i18nString(UIStrings.longestInteraction),\n      },\n    ];\n  }\n\n  #render(event: Trace.Types.Events.SyntheticInteractionPair): LitHtml.TemplateResult {\n    const time = (us: Trace.Types.Timing.MicroSeconds): string =>\n        i18n.TimeUtilities.millisToString(Platform.Timing.microSecondsToMilliSeconds(us));\n\n    // clang-format off\n    return LitHtml.html`\n        <div class=\"insights\">\n            <${SidebarInsight.SidebarInsight.litTagName} .data=${{\n            title: this.userVisibleTitle,\n            expanded: this.isActive(),\n            } as SidebarInsight.InsightDetails}\n            @insighttoggleclick=${this.onSidebarClick}>\n                <div slot=\"insight-description\" class=\"insight-description\">\n                  ${md(i18nString(UIStrings.description))}\n                </div>\n                <div slot=\"insight-content\">\n                  ${LitHtml.html`<${Table.litTagName}\n                    .data=${{\n                      headers: [i18nString(UIStrings.phase), i18nString(UIStrings.duration)],\n                      rows: [\n                        [i18nString(UIStrings.inputDelay), time(event.inputDelay)],\n                        [i18nString(UIStrings.processingDuration), time(event.mainThreadHandling)],\n                        [i18nString(UIStrings.presentationDelay), time(event.presentationDelay)],\n                      ],\n                    } as TableData}>\n                  </${Table.litTagName}>`}\n                </div>\n            </${SidebarInsight.SidebarInsight}>\n        </div>`;\n    // clang-format on\n  }\n\n  override render(): void {\n    const insight = getINPInsight(this.data.insights, this.data.navigationId);\n    const event = insight?.longestInteractionEvent;\n\n    const matchesCategory = shouldRenderForCategory({\n      activeCategory: this.data.activeCategory,\n      insightCategory: this.insightCategory,\n    });\n    const output = event && matchesCategory ? this.#render(event) : LitHtml.nothing;\n    LitHtml.render(output, this.shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-inp': InteractionToNextPaint;\n  }\n}\n\ncustomElements.define('devtools-performance-inp', InteractionToNextPaint);\n"]}