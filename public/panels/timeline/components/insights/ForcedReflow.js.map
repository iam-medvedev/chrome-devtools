{"version":3,"file":"ForcedReflow.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/ForcedReflow.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport './Table.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport type {ForcedReflowInsightModel} from '../../../../models/trace/insights/ForcedReflow.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LegacyComponents from '../../../../ui/legacy/components/utils/utils.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\nimport type {TableData} from './Table.js';\n\nconst {UIStrings, i18nString} = Trace.Insights.Models.ForcedReflow;\n\nconst {html, nothing} = Lit;\n\nexport class ForcedReflow extends BaseInsightComponent<ForcedReflowInsightModel> {\n  static override readonly litTagName = Lit.StaticHtml.literal`devtools-performance-forced-reflow`;\n  override internalName = 'forced-reflow';\n\n  #linkifyUrl(callFrame: Trace.Types.Events.CallFrame|Protocol.Runtime.CallFrame|null): Lit.LitTemplate {\n    if (!callFrame) {\n      // TODO: Remove this style hack.\n      return html`<div style=\"margin: 4px 10px; font-style: italic\">${i18nString(UIStrings.unattributed)}</div>`;\n    }\n\n    const linkifier = new LegacyComponents.Linkifier.Linkifier();\n    const stackTrace: Protocol.Runtime.StackTrace = {\n      callFrames: [\n        {\n          functionName: callFrame.functionName,\n          scriptId: callFrame.scriptId as Protocol.Runtime.ScriptId,\n          url: callFrame.url,\n          lineNumber: callFrame.lineNumber,\n          columnNumber: callFrame.columnNumber,\n        },\n      ],\n    };\n    const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    const callFrameContents = LegacyComponents.JSPresentationUtils.buildStackTracePreviewContents(\n        target, linkifier, {stackTrace, tabStops: true, showColumnNumber: true});\n    return html`${callFrameContents.element}`;\n  }\n\n  override renderContent(): Lit.LitTemplate {\n    if (!this.model) {\n      return Lit.nothing;\n    }\n\n    const topLevelFunctionCallData = this.model.topLevelFunctionCallData;\n    const bottomUpCallStackData = this.model.aggregatedBottomUpData;\n    const time = (us: Trace.Types.Timing.Micro): string =>\n        i18n.TimeUtilities.millisToString(Platform.Timing.microSecondsToMilliSeconds(us));\n    // clang-format off\n    return html`\n      ${topLevelFunctionCallData ? html`\n        <div class=\"insight-section\">\n          <devtools-performance-table\n            .data=${{\n              insight: this,\n              headers: [i18nString(UIStrings.topTimeConsumingFunctionCall), i18nString(UIStrings.totalReflowTime)],\n              rows: [{\n                values: [\n                  this.#linkifyUrl(topLevelFunctionCallData.topLevelFunctionCall),\n                  time(Trace.Types.Timing.Micro(topLevelFunctionCallData.totalReflowTime)),\n                ],\n                overlays: this.#createOverlayForEvents(topLevelFunctionCallData.topLevelFunctionCallEvents, 'INFO'),\n              }],\n            } as TableData}>\n          </devtools-performance-table>\n        </div>\n      ` : nothing}\n      <div class=\"insight-section\">\n        <devtools-performance-table\n          .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.relatedStackTrace)],\n            rows: bottomUpCallStackData.map(data => ({\n              values: [this.#linkifyUrl(data.bottomUpData)],\n              overlays: this.#createOverlayForEvents(data.relatedEvents),\n            })),\n        } as TableData}>\n        </devtools-performance-table>\n      </div>`;\n    // clang-format on\n  }\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    if (!this.model || !this.model.topLevelFunctionCallData) {\n      return [];\n    }\n\n    const allBottomUpEvents = [...this.model.aggregatedBottomUpData.values().flatMap(data => data.relatedEvents)];\n    return [\n      ...this.#createOverlayForEvents(this.model.topLevelFunctionCallData.topLevelFunctionCallEvents, 'INFO'),\n      ...this.#createOverlayForEvents(allBottomUpEvents),\n    ];\n  }\n\n  #createOverlayForEvents(events: Trace.Types.Events.Event[], outlineReason: 'ERROR'|'INFO' = 'ERROR'):\n      Overlays.Overlays.TimelineOverlay[] {\n    return events.map(e => ({\n                        type: 'ENTRY_OUTLINE',\n                        entry: e,\n                        outlineReason,\n                      }));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-forced-reflow': ForcedReflow;\n  }\n}\n\ncustomElements.define('devtools-performance-forced-reflow', ForcedReflow);\n"]}