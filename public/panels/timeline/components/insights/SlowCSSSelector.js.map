{"version":3,"file":"SlowCSSSelector.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/SlowCSSSelector.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport type * as Components from '../../overlays/components/components.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsight, shouldRenderForCategory} from './Helpers.js';\nimport * as SidebarInsight from './SidebarInsight.js';\nimport {Table, type TableData} from './Table.js';\nimport {Category} from './types.js';\n\nconst UIStrings = {\n  /**\n   *@description Title of an insight that provides details about slow CSS selectors.\n   */\n  title: 'Slow CSS selectors',\n  /**\n   * @description Text to describe how to improve the performance of CSS selectors.\n   */\n  description:\n      'Learn how to [assess the performance of CSS selectors](https://developer.chrome.com/docs/devtools/performance/selector-stats).',\n\n  /**\n   *@description Column name for count of elements that the engine attempted to match against a style rule\n   */\n  matchAttempts: 'Match attempts',\n  /**\n   *@description Column name for count of elements that matched a style rule\n   */\n  matchCount: 'Match count',\n  /**\n   *@description Column name for elapsed time spent computing a style rule\n   */\n  elapsed: 'Elapsed time',\n  /**\n   *@description Column name for the selectors that took the longest amount of time/effort.\n   */\n  topSelectors: 'Top selectors',\n  /**\n   *@description Column name for a total sum.\n   */\n  total: 'Total',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/SlowCSSSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SlowCSSSelector extends BaseInsight {\n  static readonly litTagName = LitHtml.literal`devtools-performance-slow-css-selector`;\n  override insightCategory: Category = Category.ALL;\n  override internalName: string = 'slow-css-selector';\n  override userVisibleTitle: string = i18nString(UIStrings.title);\n  override description: string = i18nString(UIStrings.description);\n  #slowCSSSelector: Trace.Insights.InsightRunners.SlowCSSSelector.SlowCSSSelectorInsightResult|null = null;\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    if (!this.data.insights || !this.data.insightSetKey) {\n      return [];\n    }\n    const {insightSetKey: navigationId, insights} = this.data;\n\n    const insightsByNavigation = insights.get(navigationId);\n    if (!insightsByNavigation) {\n      return [];\n    }\n\n    const scsInsight: Error|Trace.Insights.InsightRunners.SlowCSSSelector.SlowCSSSelectorInsightResult =\n        insightsByNavigation.data.SlowCSSSelector;\n    if (scsInsight instanceof Error) {\n      return [];\n    }\n\n    const sections: Array<Components.TimespanBreakdownOverlay.EntryBreakdown> = [];\n\n    return [{\n      type: 'TIMESPAN_BREAKDOWN',\n      sections,\n    }];\n  }\n\n  renderSlowCSSSelector(): LitHtml.LitTemplate {\n    const time = (us: Trace.Types.Timing.MicroSeconds): string =>\n        i18n.TimeUtilities.millisToString(Platform.Timing.microSecondsToMilliSeconds(us));\n\n    // clang-format off\n    return this.#slowCSSSelector ? LitHtml.html`\n      <div class=\"insights\">\n        <${SidebarInsight.SidebarInsight.litTagName} .data=${{\n              title: this.userVisibleTitle,\n              description: this.description,\n              internalName: this.internalName,\n              expanded: this.isActive(),\n          } as SidebarInsight.InsightDetails}\n          @insighttoggleclick=${this.onSidebarClick}\n        >\n          <div slot=\"insight-content\" class=\"insight-section\">\n            ${LitHtml.html`<${Table.litTagName}\n              .data=${{\n                insight: this,\n                headers: [i18nString(UIStrings.total), ''],\n                rows: [\n                  {values: [i18nString(UIStrings.elapsed), i18n.TimeUtilities.millisToString(this.#slowCSSSelector.totalElapsedMs)]},\n                  {values: [i18nString(UIStrings.matchAttempts), this.#slowCSSSelector.totalMatchAttempts]},\n                  {values: [i18nString(UIStrings.matchCount), this.#slowCSSSelector.totalMatchCount]},\n                ],\n              } as TableData}>\n            </${Table.litTagName}>`}\n            ${LitHtml.html`<${Table.litTagName}\n              .data=${{\n                insight: this,\n                headers: [i18nString(UIStrings.topSelectors), i18nString(UIStrings.elapsed)],\n                rows: this.#slowCSSSelector.topElapsedMs.map(selector => {\n                  return {\n                    values: [selector.selector, time(Trace.Types.Timing.MicroSeconds(selector['elapsed (us)']))],\n                  };\n                }),\n              } as TableData}>\n            </${Table.litTagName}>`}\n            ${LitHtml.html`<${Table.litTagName}\n              .data=${{\n                insight: this,\n                headers: [i18nString(UIStrings.topSelectors), i18nString(UIStrings.matchAttempts)],\n                rows: this.#slowCSSSelector.topMatchAttempts.map(selector => {\n                  return {\n                    values: [selector.selector, selector['match_attempts']],\n                  };\n                }),\n              } as TableData}>\n            </${Table.litTagName}>`}\n          </div>\n        </${SidebarInsight}>\n      </div>` : LitHtml.nothing;\n    // clang-format on\n  }\n\n  #hasDataToRender(): boolean {\n    this.#slowCSSSelector =\n        Trace.Insights.Common.getInsight('SlowCSSSelector', this.data.insights, this.data.insightSetKey);\n    return this.#slowCSSSelector !== null && this.#slowCSSSelector.topElapsedMs.length !== 0 &&\n        this.#slowCSSSelector.topMatchAttempts.length !== 0;\n  }\n\n  override render(): void {\n    const matchesCategory = shouldRenderForCategory({\n      activeCategory: this.data.activeCategory,\n      insightCategory: this.insightCategory,\n    });\n    const shouldRender = matchesCategory && this.#hasDataToRender();\n    const output = shouldRender ? this.renderSlowCSSSelector() : LitHtml.nothing;\n    LitHtml.render(output, this.shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-slow-css-selector': SlowCSSSelector;\n  }\n}\n\ncustomElements.define('devtools-performance-slow-css-selector', SlowCSSSelector);\n"]}