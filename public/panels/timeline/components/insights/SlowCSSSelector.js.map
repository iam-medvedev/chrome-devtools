{"version":3,"file":"SlowCSSSelector.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/SlowCSSSelector.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport type * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport type * as Components from '../../overlays/components/components.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsight, shouldRenderForCategory} from './Helpers.js';\nimport * as SidebarInsight from './SidebarInsight.js';\nimport {Table, type TableData} from './Table.js';\nimport {InsightsCategories} from './types.js';\n\nexport class SlowCSSSelector extends BaseInsight {\n  static readonly litTagName = LitHtml.literal`devtools-performance-slow-css-selector`;\n  override insightCategory: InsightsCategories = InsightsCategories.OTHER;\n  override internalName: string = 'slow-css-selector';\n  override userVisibleTitle: string = 'Slow CSS Selectors';\n  #slowCSSSelector: Trace.Insights.InsightRunners.SlowCSSSelector.SlowCSSSelectorInsightResult|null = null;\n\n  getSlowCSSSelectorData(insights: Trace.Insights.Types.TraceInsightSets|null, navigationId: string|null):\n      Trace.Insights.InsightRunners.SlowCSSSelector.SlowCSSSelectorInsightResult|null {\n    if (!insights || !navigationId) {\n      return null;\n    }\n\n    const insightsByNavigation = insights.get(navigationId);\n    if (!insightsByNavigation) {\n      return null;\n    }\n\n    const slowCSSSelector = insightsByNavigation.data.SlowCSSSelector;\n    if (slowCSSSelector instanceof Error) {\n      return null;\n    }\n\n    return slowCSSSelector;\n  }\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    if (!this.data.insights || !this.data.navigationId) {\n      return [];\n    }\n    const {navigationId, insights} = this.data;\n\n    const insightsByNavigation = insights.get(navigationId);\n    if (!insightsByNavigation) {\n      return [];\n    }\n\n    const scsInsight: Error|Trace.Insights.InsightRunners.SlowCSSSelector.SlowCSSSelectorInsightResult =\n        insightsByNavigation.data.SlowCSSSelector;\n    if (scsInsight instanceof Error) {\n      return [];\n    }\n\n    const sections: Array<Components.TimespanBreakdownOverlay.EntryBreakdown> = [];\n\n    return [{\n      type: 'TIMESPAN_BREAKDOWN',\n      sections,\n    }];\n  }\n\n  renderSlowCSSSelector(): LitHtml.LitTemplate {\n    // clang-format off\n    return this.#slowCSSSelector ? LitHtml.html`\n      <div class=\"insights\">\n        <${SidebarInsight.SidebarInsight.litTagName} .data=${{\n              title: this.userVisibleTitle,\n              expanded: this.isActive(),\n          } as SidebarInsight.InsightDetails}\n          @insighttoggleclick=${this.onSidebarClick}\n        >\n          <div slot=\"insight-content\">\n            ${LitHtml.html`<${Table.litTagName}\n              .data=${{\n                headers: ['Total', 'Stats'],\n                rows: [\n                  ['Elapsed in ms', this.#slowCSSSelector.totalElapsedMs],\n                  ['Match Attempts', this.#slowCSSSelector.totalMatchAttempts],\n                  ['Match Count', this.#slowCSSSelector.totalMatchCount],\n                ],\n              } as TableData}>\n            </${Table.litTagName}>`}\n            ${LitHtml.html`<${Table.litTagName}\n              .data=${{\n                headers: ['Top Selectors', 'Elapsed Time (ms)'],\n                rows: this.#slowCSSSelector.topElapsedMs.map(selector => {\n                  return [selector.selector, selector['elapsed (us)'] / 1000.0];\n                }),\n              } as TableData}>\n            </${Table.litTagName}>`}\n            ${LitHtml.html`<${Table.litTagName}\n              .data=${{\n                headers: ['Top Selectors', 'Match Attempts'],\n                rows: this.#slowCSSSelector.topMatchAttempts.map(selector => {\n                  return [selector.selector, selector['match_attempts']];\n                }),\n              } as TableData}>\n            </${Table.litTagName}>`}\n          </div>\n        </${SidebarInsight}>\n      </div>` : LitHtml.nothing;\n    // clang-format on\n  }\n\n  #hasDataToRender(): boolean {\n    const selectorStatsFeatureEnabled =\n        Common.Settings.Settings.instance().createSetting('timeline-capture-selector-stats', false);\n    this.#slowCSSSelector = selectorStatsFeatureEnabled.get() ?\n        this.getSlowCSSSelectorData(this.data.insights, this.data.navigationId) :\n        null;\n    return this.#slowCSSSelector !== null;\n  }\n\n  override render(): void {\n    const matchesCategory = shouldRenderForCategory({\n      activeCategory: this.data.activeCategory,\n      insightCategory: this.insightCategory,\n    });\n    const shouldRender = matchesCategory && this.#hasDataToRender();\n    const output = shouldRender ? this.renderSlowCSSSelector() : LitHtml.nothing;\n    LitHtml.render(output, this.shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-slow-css-selector': SlowCSSSelector;\n  }\n}\n\ncustomElements.define('devtools-performance-slow-css-selector', SlowCSSSelector);\n"]}