{"version":3,"file":"ImageDelivery.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/ImageDelivery.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../../ui/components/icon_button/icon_button.js';\nimport './Table.js';\n\nimport type {ImageDeliveryInsightModel} from '../../../../models/trace/insights/ImageDelivery.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\nimport {imageRef} from './EventRef.js';\nimport type {TableDataRow} from './Table.js';\n\nconst {UIStrings, i18nString} = Trace.Insights.Models.ImageDelivery;\n\nconst {html} = Lit;\n\nconst MAX_REQUESTS = 10;\n\nexport class ImageDelivery extends BaseInsightComponent<ImageDeliveryInsightModel> {\n  static override readonly litTagName = Lit.StaticHtml.literal`devtools-performance-image-delivery`;\n  override internalName = 'image-delivery';\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    if (!this.model) {\n      return [];\n    }\n\n    const {optimizableImages} = this.model;\n    return optimizableImages.map(image => this.#createOverlayForRequest(image.request));\n  }\n\n  #createOverlayForRequest(request: Trace.Types.Events.SyntheticNetworkRequest): Overlays.Overlays.EntryOutline {\n    return {\n      type: 'ENTRY_OUTLINE',\n      entry: request,\n      outlineReason: 'ERROR',\n    };\n  }\n\n  override getEstimatedSavingsBytes(): number|null {\n    return this.model?.totalByteSavings ?? null;\n  }\n\n  override renderContent(): Lit.LitTemplate {\n    if (!this.model) {\n      return Lit.nothing;\n    }\n\n    const optimizableImages = [...this.model.optimizableImages];\n\n    const topImages =\n        optimizableImages.sort((a, b) => b.request.args.data.decodedBodyLength - a.request.args.data.decodedBodyLength);\n\n    const remaining = topImages.splice(MAX_REQUESTS);\n    const rows: TableDataRow[] = topImages.map(image => ({\n                                                 values: [imageRef(image.request)],\n                                                 overlays: [this.#createOverlayForRequest(image.request)],\n                                               }));\n\n    if (remaining.length > 0) {\n      const value =\n          remaining.length > 1 ? i18nString(UIStrings.others, {PH1: remaining.length}) : imageRef(remaining[0].request);\n      rows.push({\n        values: [value],\n        overlays: remaining.map(r => this.#createOverlayForRequest(r.request)),\n      });\n    }\n\n    if (!rows.length) {\n      return html`<div class=\"insight-section\">${i18nString(UIStrings.noOptimizableImages)}</div>`;\n    }\n\n    // clang-format off\n    return html`\n      <div class=\"insight-section\">\n        <devtools-performance-table\n          .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.optimizeFile)],\n            rows,\n          }}>\n        </devtools-performance-table>\n      </div>\n    `;\n    // clang-format on\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-image-delivery': ImageDelivery;\n  }\n}\n\ncustomElements.define('devtools-performance-image-delivery', ImageDelivery);\n"]}