{"version":3,"file":"ImageDelivery.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/ImageDelivery.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,sDAAsD,CAAC;AAG9D,OAAO,KAAK,KAAK,MAAM,mCAAmC,CAAC;AAC3D,OAAO,KAAK,GAAG,MAAM,2BAA2B,CAAC;AAEjD,OAAO,EAAC,oBAAoB,EAAC,MAAM,2BAA2B,CAAC;AAC/D,OAAO,EAAC,QAAQ,EAAC,MAAM,eAAe,CAAC;AACvC,OAAO,EAAC,iBAAiB,EAAE,iBAAiB,EAAoB,MAAM,YAAY,CAAC;AAEnF,MAAM,EAAC,SAAS,EAAE,UAAU,EAAE,uBAAuB,EAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC;AAE7F,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAEnB,MAAM,OAAO,aAAc,SAAQ,oBAA+C;IAChF,MAAM,CAAmB,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,OAAO,CAAA,qCAAqC,CAAC;IACzF,YAAY,GAAG,gBAAgB,CAAC;IAEzC,QAAQ,CAAC,KAA2D;QAClE,OAAO;YACL,MAAM,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACjC,QAAQ,EAAE,CAAC,uBAAuB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACnD,CAAC;IACJ,CAAC;IAEkB,eAAe;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,wBAAwB,CAAC,SAAiE;QACxF,OAAO;YACL,MAAM,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC7C,QAAQ,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;SACjE,CAAC;IACJ,CAAC;IAEQ,aAAa;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChB,OAAO,GAAG,CAAC,OAAO,CAAC;QACrB,CAAC;QAED,MAAM,iBAAiB,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;QAE5D,MAAM,SAAS,GACX,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEpH,MAAM,IAAI,GAAG,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAEhD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACjB,OAAO,IAAI,CAAA,gCAAgC,UAAU,CAAC,SAAS,CAAC,mBAAmB,CAAC,QAAQ,CAAC;QAC/F,CAAC;QAED,mBAAmB;QACnB,OAAO,IAAI,CAAA;;;kBAGG;YACN,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;YAC7C,IAAI;SACL;;;KAGN,CAAC;QACF,kBAAkB;IACpB,CAAC;;AASH,cAAc,CAAC,MAAM,CAAC,qCAAqC,EAAE,aAAa,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../../ui/components/icon_button/icon_button.js';\n\nimport type {ImageDeliveryInsightModel} from '../../../../models/trace/insights/ImageDelivery.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\nimport {imageRef} from './EventRef.js';\nimport {createLimitedRows, renderOthersLabel, type TableDataRow} from './Table.js';\n\nconst {UIStrings, i18nString, createOverlayForRequest} = Trace.Insights.Models.ImageDelivery;\n\nconst {html} = Lit;\n\nexport class ImageDelivery extends BaseInsightComponent<ImageDeliveryInsightModel> {\n  static override readonly litTagName = Lit.StaticHtml.literal`devtools-performance-image-delivery`;\n  override internalName = 'image-delivery';\n\n  mapToRow(image: Trace.Insights.Models.ImageDelivery.OptimizableImage): TableDataRow {\n    return {\n      values: [imageRef(image.request)],\n      overlays: [createOverlayForRequest(image.request)],\n    };\n  }\n\n  protected override hasAskAiSupport(): boolean {\n    return true;\n  }\n\n  createAggregatedTableRow(remaining: Trace.Insights.Models.ImageDelivery.OptimizableImage[]): TableDataRow {\n    return {\n      values: [renderOthersLabel(remaining.length)],\n      overlays: remaining.map(r => createOverlayForRequest(r.request)),\n    };\n  }\n\n  override renderContent(): Lit.LitTemplate {\n    if (!this.model) {\n      return Lit.nothing;\n    }\n\n    const optimizableImages = [...this.model.optimizableImages];\n\n    const topImages =\n        optimizableImages.sort((a, b) => b.request.args.data.decodedBodyLength - a.request.args.data.decodedBodyLength);\n\n    const rows = createLimitedRows(topImages, this);\n\n    if (!rows.length) {\n      return html`<div class=\"insight-section\">${i18nString(UIStrings.noOptimizableImages)}</div>`;\n    }\n\n    // clang-format off\n    return html`\n      <div class=\"insight-section\">\n        <devtools-performance-table\n          .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.optimizeFile)],\n            rows,\n          }}>\n        </devtools-performance-table>\n      </div>\n    `;\n    // clang-format on\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-image-delivery': ImageDelivery;\n  }\n}\n\ncustomElements.define('devtools-performance-image-delivery', ImageDelivery);\n"]}