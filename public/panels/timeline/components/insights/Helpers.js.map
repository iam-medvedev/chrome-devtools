{"version":3,"file":"Helpers.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/Helpers.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,0DAA0D,CAAC;AAGlE,OAAO,KAAK,KAAK,MAAM,mCAAmC,CAAC;AAC3D,OAAO,KAAK,MAAM,MAAM,0CAA0C,CAAC;AACnE,OAAO,KAAK,GAAG,MAAM,2BAA2B,CAAC;AAEjD,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAEnB,MAAM,UAAU,uBAAuB,CAAC,OAGvC;IACC,OAAO,OAAO,CAAC,cAAc,KAAK,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG;QACtE,OAAO,CAAC,cAAc,KAAK,OAAO,CAAC,eAAe,CAAC;AACzD,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,EAAE,CAAC,QAAyC;IAC1D,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC7C,MAAM,IAAI,GAAG,EAAC,MAAM,EAAC,CAAC;IACtB,OAAO,IAAI,CAAA,iCAAiC,IAAI,4BAA4B,CAAC;AAC/E,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../../ui/components/markdown_view/markdown_view.js';\n\nimport type * as Common from '../../../../core/common/common.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as Marked from '../../../../third_party/marked/marked.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\n\nconst {html} = Lit;\n\nexport function shouldRenderForCategory(options: {\n  activeCategory: Trace.Insights.Types.InsightCategory,\n  insightCategory: Trace.Insights.Types.InsightCategory,\n}): boolean {\n  return options.activeCategory === Trace.Insights.Types.InsightCategory.ALL ||\n      options.activeCategory === options.insightCategory;\n}\n\n/**\n * Returns a rendered MarkdownView component.\n *\n * This should only be used for markdown that is guaranteed to be valid,\n * and not contain any user-generated content.\n */\nexport function md(markdown: Common.UIString.LocalizedString): Lit.TemplateResult {\n  const tokens = Marked.Marked.lexer(markdown);\n  const data = {tokens};\n  return html`<devtools-markdown-view .data=${data}></devtools-markdown-view>`;\n}\n"]}