{"version":3,"file":"INPBreakdown.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/INPBreakdown.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,YAAY,CAAC;AAEpB,OAAO,KAAK,IAAI,MAAM,+BAA+B,CAAC;AACtD,OAAO,KAAK,QAAQ,MAAM,uCAAuC,CAAC;AAElE,OAAO,KAAK,KAAK,MAAM,mCAAmC,CAAC;AAC3D,OAAO,KAAK,GAAG,MAAM,2BAA2B,CAAC;AAEjD,OAAO,EAAC,oBAAoB,EAAC,MAAM,2BAA2B,CAAC;AAE/D,MAAM,EAAC,SAAS,EAAE,UAAU,EAAE,wBAAwB,EAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC;AAE7F,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAEnB,MAAM,OAAO,YAAa,SAAQ,oBAA8C;IAC9E,MAAM,CAAmB,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,OAAO,CAAA,oCAAoC,CAAC;IACxF,YAAY,GAAG,KAAK,CAAC;IAEX,eAAe;QAChC,OAAO,IAAI,CAAC,KAAK,EAAE,uBAAuB,KAAK,SAAS,CAAC;IAC3D,CAAC;IAEQ,aAAa;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,uBAAuB,CAAC;QAClD,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,OAAO,IAAI,CAAA,gCAAgC,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;QAC1F,CAAC;QAED,MAAM,IAAI,GAAG,CAAC,EAA4B,EAAU,EAAE,CAClD,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtF,mBAAmB;QACnB,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAA;kBACI;YACN,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACxE,IAAI,EAAE;gBACJ;oBACE,MAAM,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;oBAClE,QAAQ,EAAE,wBAAwB,CAAC,KAAK,EAAE,CAAC,CAAC;iBAC7C;gBACD;oBACE,MAAM,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;oBAClF,QAAQ,EAAE,wBAAwB,CAAC,KAAK,EAAE,CAAC,CAAC;iBAC7C;gBACD;oBACE,MAAM,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;oBAChF,QAAQ,EAAE,wBAAwB,CAAC,KAAK,EAAE,CAAC,CAAC;iBAC7C;aACF;SACF;sCAC2B;aACzB,CAAC;QACV,kBAAkB;IACpB,CAAC;;AASH,cAAc,CAAC,MAAM,CAAC,oCAAoC,EAAE,YAAY,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './Table.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport type {INPBreakdownInsightModel} from '../../../../models/trace/insights/INPBreakdown.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\n\nconst {UIStrings, i18nString, createOverlaysForSubpart} = Trace.Insights.Models.INPBreakdown;\n\nconst {html} = Lit;\n\nexport class INPBreakdown extends BaseInsightComponent<INPBreakdownInsightModel> {\n  static override readonly litTagName = Lit.StaticHtml.literal`devtools-performance-inp-breakdown`;\n  override internalName = 'inp';\n\n  protected override hasAskAiSupport(): boolean {\n    return this.model?.longestInteractionEvent !== undefined;\n  }\n\n  override renderContent(): Lit.LitTemplate {\n    const event = this.model?.longestInteractionEvent;\n    if (!event) {\n      return html`<div class=\"insight-section\">${i18nString(UIStrings.noInteractions)}</div>`;\n    }\n\n    const time = (us: Trace.Types.Timing.Micro): string =>\n        i18n.TimeUtilities.millisToString(Platform.Timing.microSecondsToMilliSeconds(us));\n\n    // clang-format off\n    return html`\n      <div class=\"insight-section\">\n        ${html`<devtools-performance-table\n          .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.subpart), i18nString(UIStrings.duration)],\n            rows: [\n              {\n                values: [i18nString(UIStrings.inputDelay), time(event.inputDelay)],\n                overlays: createOverlaysForSubpart(event, 0),\n              },\n              {\n                values: [i18nString(UIStrings.processingDuration), time(event.mainThreadHandling)],\n                overlays: createOverlaysForSubpart(event, 1),\n              },\n              {\n                values: [i18nString(UIStrings.presentationDelay), time(event.presentationDelay)],\n                overlays: createOverlaysForSubpart(event, 2),\n              },\n            ],\n          }}>\n        </devtools-performance-table>`}\n      </div>`;\n    // clang-format on\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-inp-breakdown': INPBreakdown;\n  }\n}\n\ncustomElements.define('devtools-performance-inp-breakdown', INPBreakdown);\n"]}