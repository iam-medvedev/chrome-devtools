{"version":3,"file":"Table.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/Table.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Trace from '../../../../models/trace/trace.js';\nimport * as ComponentHelpers from '../../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport type * as BaseInsightComponent from './BaseInsightComponent.js';\nimport {EventReferenceClick} from './EventRef.js';\nimport tableStylesRaw from './table.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst tableStyles = new CSSStyleSheet();\ntableStyles.replaceSync(tableStylesRaw.cssContent);\n\nconst {html} = Lit;\n\ntype BaseInsightComponent = BaseInsightComponent.BaseInsightComponent<Trace.Insights.Types.InsightModel>;\n\n/**\n * @fileoverview An interactive table component.\n *\n * On hover:\n *           desaturates the relevant events (in both the minimap and the flamegraph), and\n *           replaces the current insight's overlays with the overlays attached to that row.\n *           The currently selected trace bounds does not change.\n *\n *           Removing the mouse from the table without clicking on any row restores the original\n *           overlays.\n *\n * On click:\n *           \"sticks\" the selection, replaces overlays like hover does, and additionally updates\n *           the current trace bounds to fit the bounds of the row's overlays.\n */\n\nexport interface TableState {\n  selectedRowEl: HTMLElement|null;\n  selectionIsSticky: boolean;\n}\n\nexport interface TableData {\n  insight: BaseInsightComponent;\n  headers: string[];\n  rows: TableDataRow[];\n}\n\nexport interface TableDataRow {\n  values: Array<number|string|Lit.LitTemplate>;\n  overlays?: Overlays.Overlays.TimelineOverlay[];\n}\n\nexport class Table extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n  #insight?: BaseInsightComponent;\n  #state?: TableState;\n  #headers?: string[];\n  #rows?: TableDataRow[];\n  #interactive = false;\n  #currentHoverIndex: number|null = null;\n\n  set data(data: TableData) {\n    this.#insight = data.insight;\n    this.#state = data.insight.sharedTableState;\n    this.#headers = data.headers;\n    this.#rows = data.rows;\n    // If this table isn't interactive, don't attach mouse listeners or use CSS :hover.\n    this.#interactive = this.#rows.some(row => row.overlays);\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets.push(tableStyles);\n    UI.UIUtils.injectCoreStyles(this.#shadow);\n\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #onHoverRow(e: MouseEvent): void {\n    if (!(e.target instanceof HTMLElement)) {\n      return;\n    }\n\n    const rowEl = e.target.closest('tr');\n    if (!rowEl?.parentElement) {\n      return;\n    }\n\n    const index = [...rowEl.parentElement.children].indexOf(rowEl);\n    if (index === -1 || index === this.#currentHoverIndex) {\n      return;\n    }\n\n    this.#currentHoverIndex = index;\n    // Temporarily selects the row, but only if there is not already a sticky selection.\n    this.#onSelectedRowChanged(rowEl, index, {isHover: true});\n  }\n\n  #onClickRow(e: MouseEvent): void {\n    if (!(e.target instanceof HTMLElement)) {\n      return;\n    }\n\n    const rowEl = e.target.closest('tr');\n    if (!rowEl?.parentElement) {\n      return;\n    }\n\n    const index = [...rowEl.parentElement.children].indexOf(rowEl);\n    if (index === -1) {\n      return;\n    }\n\n    // If the desired overlays consist of just a single ENTRY_OUTLINE, then\n    // it is more intuitive to just select the target event.\n    const overlays = this.#rows?.[index]?.overlays;\n    if (overlays?.length === 1 && overlays[0].type === 'ENTRY_OUTLINE') {\n      this.dispatchEvent(new EventReferenceClick(overlays[0].entry));\n      return;\n    }\n\n    // Select the row and make it sticky.\n    this.#onSelectedRowChanged(rowEl, index, {sticky: true});\n  }\n\n  #onMouseLeave(): void {\n    this.#currentHoverIndex = null;\n    // Unselect the row, unless it's sticky.\n    this.#onSelectedRowChanged(null, null);\n  }\n\n  #onSelectedRowChanged(rowEl: HTMLElement|null, rowIndex: number|null, opts: {\n    sticky?: boolean,\n    isHover?: boolean,\n  } = {}): void {\n    if (!this.#rows || !this.#state || !this.#insight) {\n      return;\n    }\n\n    if (this.#state.selectionIsSticky && !opts.sticky) {\n      return;\n    }\n\n    // Unselect a sticky-selection when clicking it for a second time.\n    if (this.#state.selectionIsSticky && rowEl === this.#state.selectedRowEl) {\n      rowEl = null;\n      opts.sticky = false;\n    }\n\n    if (rowEl && rowIndex !== null) {\n      const overlays = this.#rows[rowIndex].overlays;\n      if (overlays) {\n        this.#insight.toggleTemporaryOverlays(overlays, {updateTraceWindow: !opts.isHover});\n      }\n    } else {\n      this.#insight.toggleTemporaryOverlays(null, {updateTraceWindow: false});\n    }\n\n    this.#state.selectedRowEl?.classList.remove('selected');\n    rowEl?.classList.add('selected');\n    this.#state.selectedRowEl = rowEl;\n    this.#state.selectionIsSticky = opts.sticky ?? false;\n  }\n\n  async #render(): Promise<void> {\n    if (!this.#headers || !this.#rows) {\n      return;\n    }\n\n    Lit.render(\n        html`<table\n          class=${Lit.Directives.classMap({\n          interactive: this.#interactive,\n        })}\n          @mouseleave=${this.#interactive ? this.#onMouseLeave : null}>\n        <thead>\n          <tr>\n          ${this.#headers.map(h => html`<th scope=\"col\">${h}</th>`)}\n          </tr>\n        </thead>\n        <tbody\n          @mouseover=${this.#interactive ? this.#onHoverRow : null}\n          @click=${this.#interactive ? this.#onClickRow : null}\n        >\n          ${this.#rows.map(row => {\n          const rowsEls =\n              row.values.map((value, i) => i === 0 ? html`<th scope=\"row\">${value}</th>` : html`<td>${value}</td>`);\n          return html`<tr>${rowsEls}</tr>`;\n        })}\n        </tbody>\n      </table>`,\n        this.#shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-table': Table;\n  }\n}\n\ncustomElements.define('devtools-performance-table', Table);\n"]}