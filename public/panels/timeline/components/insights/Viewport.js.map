{"version":3,"file":"Viewport.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/Viewport.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsight, shouldRenderForCategory} from './Helpers.js';\nimport {NodeLink, type NodeLinkData} from './NodeLink.js';\nimport * as SidebarInsight from './SidebarInsight.js';\nimport {Category} from './types.js';\n\nconst UIStrings = {\n  /** Title of an insight that provides details about if the page's viewport is optimized for mobile viewing. */\n  title: 'Mobile-optimized viewport',\n  /**\n   * @description Text to tell the user how a viewport meta element can improve performance.\n   */\n  description: 'A viewport meta element not only optimizes your app for mobile screen sizes, ' +\n      'but also [prevents a 300 millisecond delay to user input](https://developer.chrome.com/blog/300ms-tap-delay-gone-away/).',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/Viewport.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class Viewport extends BaseInsight {\n  static readonly litTagName = LitHtml.literal`devtools-performance-viewport`;\n  override insightCategory: Category = Category.INP;\n  override internalName: string = 'viewport';\n  override userVisibleTitle: string = i18nString(UIStrings.title);\n  override description: string = i18nString(UIStrings.description);\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    // TODO(b/351757418): create overlay for synthetic input delay events\n    return [];\n  }\n\n  #render(insight: Trace.Insights.Types.InsightResults['Viewport']): LitHtml.TemplateResult {\n    const backendNodeId = insight.viewportEvent?.args.data.node_id;\n\n    // clang-format off\n    return LitHtml.html`\n        <div class=\"insights\">\n            <${SidebarInsight.SidebarInsight.litTagName} .data=${{\n              title: this.userVisibleTitle,\n              description: this.description,\n              expanded: this.isActive(),\n              internalName: this.internalName,\n              estimatedSavingsTime: insight.metricSavings?.INP,\n            } as SidebarInsight.InsightDetails}\n            @insighttoggleclick=${this.onSidebarClick}>\n                <div slot=\"insight-content\" class=\"insight-section\">\n                  ${backendNodeId !== undefined ? LitHtml.html`<${NodeLink.litTagName}\n                    .data=${{\n                      backendNodeId,\n                      options: {tooltip: insight.viewportEvent?.args.data.content},\n                    } as NodeLinkData}>\n                  </${NodeLink.litTagName}>` : LitHtml.nothing}\n                </div>\n            </${SidebarInsight.SidebarInsight}>\n        </div>`;\n    // clang-format on\n  }\n\n  override render(): void {\n    const viewportInsight = Trace.Insights.Common.getInsight('Viewport', this.data.insights, this.data.insightSetKey);\n    const shouldShow = viewportInsight && viewportInsight.mobileOptimized === false;\n\n    const matchesCategory = shouldRenderForCategory({\n      activeCategory: this.data.activeCategory,\n      insightCategory: this.insightCategory,\n    });\n    const output = shouldShow && matchesCategory ? this.#render(viewportInsight) : LitHtml.nothing;\n    LitHtml.render(output, this.shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-viewport': Viewport;\n  }\n}\n\ncustomElements.define('devtools-performance-viewport', Viewport);\n"]}