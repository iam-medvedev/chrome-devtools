{"version":3,"file":"Viewport.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/Viewport.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,eAAe,CAAC;AAGvB,OAAO,KAAK,KAAK,MAAM,mCAAmC,CAAC;AAC3D,OAAO,KAAK,GAAG,MAAM,2BAA2B,CAAC;AAGjD,OAAO,EAAC,oBAAoB,EAAC,MAAM,2BAA2B,CAAC;AAE/D,MAAM,EAAC,SAAS,EAAE,UAAU,EAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;AAE/D,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAEnB,MAAM,OAAO,QAAS,SAAQ,oBAA0C;IACtE,MAAM,CAAmB,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,OAAO,CAAA,+BAA+B,CAAC;IACnF,YAAY,GAAG,UAAU,CAAC;IAE1B,cAAc;QACrB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC;YACvD,OAAO,EAAE,CAAC;QACZ,CAAC;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;YAC1D,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,UAAU,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC;YAC3D,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,2BAA2B,CAC3D,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,EACxC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,GAAG,KAAK,CAAC,CACnD,CAAC;YACF,OAAO;gBACL,IAAI,EAAE,oBAAoB;gBAC1B,KAAK,EAAE,WAAW;gBAClB,QAAQ,EAAE,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,mBAAmB,CAAC,EAAE,YAAY,EAAE,IAAI,EAAC,CAAC;gBAC1F,cAAc,EAAE,aAAa;aAC9B,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEQ,uBAAuB;QAC9B,OAAO,IAAI,CAAC,KAAK,EAAE,aAAa,EAAE,GAAG,IAAI,IAAI,CAAC;IAChD,CAAC;IAED,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAC7C,OAAO,GAAG,CAAC,OAAO,CAAC;QACrB,CAAC;QAED,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QACjE,IAAI,aAAa,KAAK,SAAS,EAAE,CAAC;YAChC,OAAO,GAAG,CAAC,OAAO,CAAC;QACrB,CAAC;QAED,mBAAmB;QACnB,OAAO,IAAI,CAAA;;;kBAGG;YACN,aAAa;YACb,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;YACrD,OAAO,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC;YAC9D,mBAAmB,EAAE,gCAAgC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI;SACpG;;aAEE,CAAC;QACV,kBAAkB;IACpB,CAAC;;AASH,cAAc,CAAC,MAAM,CAAC,+BAA+B,EAAE,QAAQ,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './NodeLink.js';\n\nimport type {ViewportInsightModel} from '../../../../models/trace/insights/Viewport.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\n\nconst {UIStrings, i18nString} = Trace.Insights.Models.Viewport;\n\nconst {html} = Lit;\n\nexport class Viewport extends BaseInsightComponent<ViewportInsightModel> {\n  static override readonly litTagName = Lit.StaticHtml.literal`devtools-performance-viewport`;\n  override internalName = 'viewport';\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    if (!this.model || !this.model.longPointerInteractions) {\n      return [];\n    }\n\n    return this.model.longPointerInteractions.map(interaction => {\n      const delay = Math.min(interaction.inputDelay, 300 * 1000);\n      const bounds = Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n          Trace.Types.Timing.Micro(interaction.ts),\n          Trace.Types.Timing.Micro(interaction.ts + delay),\n      );\n      return {\n        type: 'TIMESPAN_BREAKDOWN',\n        entry: interaction,\n        sections: [{bounds, label: i18nString(UIStrings.mobileTapDelayLabel), showDuration: true}],\n        renderLocation: 'ABOVE_EVENT',\n      };\n    });\n  }\n\n  override getEstimatedSavingsTime(): Trace.Types.Timing.Milli|null {\n    return this.model?.metricSavings?.INP ?? null;\n  }\n\n  renderContent(): Lit.LitTemplate {\n    if (!this.model || !this.model.viewportEvent) {\n      return Lit.nothing;\n    }\n\n    const backendNodeId = this.model.viewportEvent.args.data.node_id;\n    if (backendNodeId === undefined) {\n      return Lit.nothing;\n    }\n\n    // clang-format off\n    return html`\n      <div>\n        <devtools-performance-node-link\n          .data=${{\n            backendNodeId,\n            frame: this.model.viewportEvent.args.data.frame ?? '',\n            options: {tooltip: this.model.viewportEvent.args.data.content},\n            fallbackHtmlSnippet: `<meta name=viewport content=\"${this.model.viewportEvent.args.data.content}\">`,\n          }}>\n        </devtools-performance-node-link>\n      </div>`;\n    // clang-format on\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-viewport': Viewport;\n  }\n}\n\ncustomElements.define('devtools-performance-viewport', Viewport);\n"]}