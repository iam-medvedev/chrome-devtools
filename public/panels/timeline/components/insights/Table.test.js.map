{"version":3,"file":"Table.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/Table.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Insights from './insights.js';\nimport type {RowLimitAggregator} from './Table.js';\n\nconst {createLimitedRows} = Insights.Table;\n\nconst {assert} = chai;\n\ndescribe('rowLimitAggregate', () => {\n  const aggregator: RowLimitAggregator<number> = {\n    mapToRow: num => ({values: [num]}),\n    createAggregatedTableRow: others => ({values: [`${others.length} others`]}),\n  };\n\n  it('handles empty array', () => {\n    const rows = createLimitedRows([], aggregator);\n    assert.deepEqual(rows, []);\n  });\n\n  it('respects limit 0', () => {\n    const rows = createLimitedRows([1, 2], aggregator, 0);\n    assert.deepEqual(rows, []);\n  });\n\n  it('respects limit 1', () => {\n    const rows = createLimitedRows([1, 2, 3], aggregator, 1);\n    assert.deepEqual(rows, [\n      {values: ['3 others']},\n    ]);\n  });\n\n  it('correctly limits rows', () => {\n    const rows = createLimitedRows([1, 2, 3, 4, 5], aggregator, 3);\n    assert.deepEqual(rows, [\n      {values: [1]},\n      {values: [2]},\n      {values: ['3 others']},\n    ]);\n  });\n\n  it('does not aggregate if input shorter than the limit', () => {\n    const rows = createLimitedRows([1, 2], aggregator, 3);\n    assert.deepEqual(rows, [\n      {values: [1]},\n      {values: [2]},\n    ]);\n  });\n\n  it('does not aggregate if input is exactly at the limit', () => {\n    const rows = createLimitedRows([1, 2, 3], aggregator, 3);\n    assert.deepEqual(rows, [\n      {values: [1]},\n      {values: [2]},\n      {values: [3]},\n    ]);\n  });\n});\n"]}