{"version":3,"file":"InteractionToNextPaint.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/InteractionToNextPaint.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  renderElementIntoDOM,\n} from '../../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment, updateHostConfig} from '../../../../testing/EnvironmentHelpers.js';\nimport {getInsightOrError} from '../../../../testing/InsightHelpers.js';\nimport {TraceLoader} from '../../../../testing/TraceLoader.js';\nimport * as RenderCoordinator from '../../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as Insights from './insights.js';\n\ndescribeWithEnvironment('Interaction to next paint component', () => {\n  beforeEach(() => {\n    // Ensure the environment is setup for AI being supported so we can\n    // test the presence of the button being conditional on the insight\n    // having a longest interaction event.\n    updateHostConfig({\n      devToolsAiAssistancePerformanceAgent: {\n        enabled: true,\n        insightsEnabled: true,\n      }\n    });\n  });\n\n  it('enables \"Ask AI\" if the page has an interaction', async function() {\n    const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'one-second-interaction.json.gz');\n    assert.isOk(insights);\n    const firstInsightSet = insights.values().next()?.value;\n    assert.isOk(firstInsightSet);\n    const [firstNav] = parsedTrace.Meta.mainFrameNavigations;\n    const interactionInsight = getInsightOrError('InteractionToNextPaint', insights, firstNav);\n    assert.isDefined(interactionInsight.longestInteractionEvent);\n\n    const component = new Insights.InteractionToNextPaint.InteractionToNextPaint();\n    component.model = interactionInsight;\n    component.insightSetKey = firstInsightSet.id;\n    component.bounds = parsedTrace.Meta.traceBounds;\n    component.selected = true;\n    renderElementIntoDOM(component);\n    await RenderCoordinator.done();\n    assert.isOk(component.shadowRoot);\n\n    const button = component.shadowRoot.querySelector('devtools-button[data-insights-ask-ai]');\n    assert.instanceOf(button, HTMLElement);\n  });\n\n  it('disables \"Ask AI\" if the page has no interaction', async function() {\n    const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'unsized-images.json.gz');\n    assert.isOk(insights);\n    const firstInsightSet = insights.values().next()?.value;\n    assert.isOk(firstInsightSet);\n    const [firstNav] = parsedTrace.Meta.mainFrameNavigations;\n    const interactionInsight = getInsightOrError('InteractionToNextPaint', insights, firstNav);\n    assert.isUndefined(interactionInsight.longestInteractionEvent);\n\n    const component = new Insights.InteractionToNextPaint.InteractionToNextPaint();\n    component.model = interactionInsight;\n    component.insightSetKey = firstInsightSet.id;\n    component.bounds = parsedTrace.Meta.traceBounds;\n    component.selected = true;\n    renderElementIntoDOM(component);\n    await RenderCoordinator.done();\n    assert.isOk(component.shadowRoot);\n\n    const button = component.shadowRoot.querySelector('devtools-button[data-insights-ask-ai]');\n    assert.isNull(button);\n  });\n});\n"]}