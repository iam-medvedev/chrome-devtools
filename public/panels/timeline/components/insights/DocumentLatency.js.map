{"version":3,"file":"DocumentLatency.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/DocumentLatency.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../../ui/components/icon_button/icon_button.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type {DocumentLatencyInsightModel} from '../../../../models/trace/insights/DocumentLatency.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\n\nconst {html} = LitHtml;\n\nconst UIStrings = {\n  /**\n   * @description Text to tell the user that the document request does not have redirects.\n   */\n  passingRedirects: 'Avoids redirects',\n  /**\n   * @description Text to tell the user that the document request had redirects.\n   */\n  failedRedirects: 'Had redirects',\n  /**\n   * @description Text to tell the user that the time starting the document request to when the server started responding is acceptable.\n   */\n  passingServerResponseTime: 'Server responds quickly',\n  /**\n   * @description Text to tell the user that the time starting the document request to when the server started responding is not acceptable.\n   */\n  failedServerResponseTime: 'Server responded slowly',\n  /**\n   * @description Text to tell the user that text compression (like gzip) was applied.\n   */\n  passingTextCompression: 'Applies text compression',\n  /**\n   * @description Text to tell the user that text compression (like gzip) was not applied.\n   */\n  failedTextCompression: 'No compression applied',\n  /**\n   * @description Text for a label describing a network request event as having redirects.\n   */\n  redirectsLabel: 'Redirects',\n  /**\n   * @description Text for a label describing a network request event as taking too long to start delivery by the server.\n   */\n  serverResponseTimeLabel: 'Server response time',\n  /**\n   * @description Text for a label describing a network request event as taking longer to download because it wasn't compressed.\n   */\n  uncompressedDownload: 'Uncompressed download',\n  /**\n   *@description Text for a screen-reader label to tell the user that the icon represents a successful insight check\n   *@example {Server response time} PH1\n   */\n  successAriaLabel: 'Insight check passed: {PH1}',\n  /**\n   *@description Text for a screen-reader label to tell the user that the icon represents an unsuccessful insight check\n   *@example {Server response time} PH1\n   */\n  failedAriaLabel: 'Insight check failed: {PH1}',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/DocumentLatency.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class DocumentLatency extends BaseInsightComponent<DocumentLatencyInsightModel> {\n  static override readonly litTagName = LitHtml.StaticHtml.literal`devtools-performance-document-latency`;\n  override internalName: string = 'document-latency';\n\n  #check(didPass: boolean, good: string, bad: string): LitHtml.TemplateResult {\n    const icon = didPass ? 'check-circle' : 'clear';\n\n    const ariaLabel = didPass ? i18nString(UIStrings.successAriaLabel, {PH1: good}) :\n                                i18nString(UIStrings.failedAriaLabel, {PH1: bad});\n    return html`\n      <devtools-icon\n        aria-label=${ariaLabel}\n        name=${icon}\n        class=${didPass ? 'metric-value-good' : 'metric-value-bad'}\n      ></devtools-icon>\n      <span>${didPass ? good : bad}</span>\n    `;\n  }\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    if (!this.model?.data?.documentRequest) {\n      return [];\n    }\n\n    const overlays: Overlays.Overlays.TimelineOverlay[] = [];\n    const event = this.model.data.documentRequest;\n    const redirectDurationMicro = Trace.Helpers.Timing.milliToMicro(this.model.data.redirectDuration);\n\n    const sections = [];\n    if (this.model.data.redirectDuration) {\n      const bounds = Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n          event.ts,\n          (event.ts + redirectDurationMicro) as Trace.Types.Timing.Micro,\n      );\n      sections.push({bounds, label: i18nString(UIStrings.redirectsLabel), showDuration: true});\n      overlays.push({type: 'CANDY_STRIPED_TIME_RANGE', bounds, entry: event});\n    }\n    if (this.model.data.serverResponseTooSlow) {\n      const serverResponseTimeMicro = Trace.Helpers.Timing.milliToMicro(this.model.data.serverResponseTime);\n      // NOTE: NetworkRequestHandlers never makes a synthetic network request event if `timing` is missing.\n      const sendEnd = event.args.data.timing?.sendEnd ?? Trace.Types.Timing.Milli(0);\n      const sendEndMicro = Trace.Helpers.Timing.milliToMicro(sendEnd);\n      const bounds = Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n          sendEndMicro,\n          (sendEndMicro + serverResponseTimeMicro) as Trace.Types.Timing.Micro,\n      );\n      sections.push({bounds, label: i18nString(UIStrings.serverResponseTimeLabel), showDuration: true});\n    }\n    if (this.model.data.uncompressedResponseBytes) {\n      const bounds = Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n          event.args.data.syntheticData.downloadStart,\n          (event.args.data.syntheticData.downloadStart + event.args.data.syntheticData.download) as\n              Trace.Types.Timing.Micro,\n      );\n      sections.push({bounds, label: i18nString(UIStrings.uncompressedDownload), showDuration: true});\n      overlays.push({type: 'CANDY_STRIPED_TIME_RANGE', bounds, entry: event});\n    }\n\n    if (sections.length) {\n      overlays.push({\n        type: 'TIMESPAN_BREAKDOWN',\n        sections,\n        entry: this.model.data.documentRequest,\n        // Always render below because the document request is guaranteed to be\n        // the first request in the network track.\n        renderLocation: 'BELOW_EVENT',\n      });\n    }\n    overlays.push({\n      type: 'ENTRY_SELECTED',\n      entry: this.model.data.documentRequest,\n    });\n\n    return overlays;\n  }\n\n  override getEstimatedSavingsTime(): Trace.Types.Timing.Milli|null {\n    return this.model?.metricSavings?.FCP ?? null;\n  }\n\n  override getEstimatedSavingsBytes(): number|null {\n    return this.model?.data?.uncompressedResponseBytes ?? null;\n  }\n\n  override renderContent(): LitHtml.LitTemplate {\n    if (!this.model?.data) {\n      return LitHtml.nothing;\n    }\n\n    // clang-format off\n    return html`\n      <div class=\"insight-section\">\n        <ul class=\"insight-results insight-icon-results\">\n          <li class=\"insight-entry\">\n            ${this.#check(this.model.data.redirectDuration === 0,\n              i18nString(UIStrings.passingRedirects), i18nString(UIStrings.failedRedirects))}\n          </li>\n          <li class=\"insight-entry\">\n            ${this.#check(!this.model.data.serverResponseTooSlow,\n              i18nString(UIStrings.passingServerResponseTime), i18nString(UIStrings.failedServerResponseTime))}\n          </li>\n          <li class=\"insight-entry\">\n            ${this.#check(this.model.data.uncompressedResponseBytes === 0,\n              i18nString(UIStrings.passingTextCompression), i18nString(UIStrings.failedTextCompression))}\n          </li>\n        </ul>\n      </div>`;\n    // clang-format on\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-document-latency': DocumentLatency;\n  }\n}\n\ncustomElements.define('devtools-performance-document-latency', DocumentLatency);\n"]}