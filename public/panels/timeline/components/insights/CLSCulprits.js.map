{"version":3,"file":"CLSCulprits.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/CLSCulprits.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type {CLSCulpritsInsightModel} from '../../../../models/trace/insights/CLSCulprits.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\nimport {EventReferenceClick} from './EventRef.js';\n\nconst {UIStrings, i18nString} = Trace.Insights.Models.CLSCulprits;\n\nconst {html} = Lit;\n\nexport class CLSCulprits extends BaseInsightComponent<CLSCulpritsInsightModel> {\n  static override readonly litTagName = Lit.StaticHtml.literal`devtools-performance-cls-culprits`;\n  override internalName = 'cls-culprits';\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    const clustersByScore =\n        this.model?.clusters.toSorted((a, b) => b.clusterCumulativeScore - a.clusterCumulativeScore) ?? [];\n    const worstCluster = clustersByScore[0];\n    if (!worstCluster) {\n      return [];\n    }\n\n    const range = Trace.Types.Timing.Micro(worstCluster.dur ?? 0);\n    const max = Trace.Types.Timing.Micro(worstCluster.ts + range);\n\n    const label = html`<div>${i18nString(UIStrings.worstLayoutShiftCluster)}</div>`;\n    return [{\n      type: 'TIMESPAN_BREAKDOWN',\n      sections: [\n        {bounds: {min: worstCluster.ts, range, max}, label, showDuration: false},\n      ],\n      // This allows for the overlay to sit over the layout shift.\n      entry: worstCluster.events[0],\n      renderLocation: 'ABOVE_EVENT',\n    }];\n  }\n\n  #clickEvent(event: Trace.Types.Events.Event): void {\n    this.dispatchEvent(new EventReferenceClick(event));\n  }\n\n  #renderCulpritsSection(culprits: string[]): Lit.LitTemplate {\n    if (culprits.length === 0) {\n      return html`<div class=\"insight-section\">${i18nString(UIStrings.noCulprits)}</div>`;\n    }\n\n    // clang-format off\n    return html`\n      <div class=\"insight-section\">\n        <p class=\"list-title\">${i18nString(UIStrings.topCulprits)}:</p>\n        <ul class=\"worst-culprits\">\n          ${culprits.map(culprit => {\n            return html `\n              <li>${culprit}</li>\n            `;\n          })}\n        </ul>\n      </div>`;\n    // clang-format on\n  }\n\n  override renderContent(): Lit.LitTemplate {\n    if (!this.model || !this.bounds) {\n      return Lit.nothing;\n    }\n\n    if (!this.model.clusters.length || !this.model.worstCluster) {\n      return html`<div class=\"insight-section\">${i18nString(UIStrings.noLayoutShifts)}</div>`;\n    }\n\n    const worstCluster = this.model.worstCluster;\n    const culprits = this.model.topCulpritsByCluster.get(worstCluster) ?? [];\n\n    const ts = Trace.Types.Timing.Micro(worstCluster.ts - this.bounds.min);\n    const clusterTs = i18n.TimeUtilities.formatMicroSecondsTime(ts);\n\n    // clang-format off\n    return html`\n      <div class=\"insight-section\">\n        <span class=\"worst-cluster\">${i18nString(UIStrings.worstCluster)}: <button type=\"button\" class=\"timeline-link\" @click=${() => this.#clickEvent(worstCluster)}>${i18nString(UIStrings.layoutShiftCluster, {PH1: clusterTs})}</button></span>\n      </div>\n      ${this.#renderCulpritsSection(culprits)}\n    `;\n    // clang-format on\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-cls-culprits': CLSCulprits;\n  }\n}\n\ncustomElements.define('devtools-performance-cls-culprits', CLSCulprits);\n"]}