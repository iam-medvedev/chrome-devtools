{"version":3,"file":"CLSCulprits.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/CLSCulprits.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsight, EventReferenceClick, shouldRenderForCategory} from './Helpers.js';\nimport * as SidebarInsight from './SidebarInsight.js';\nimport {Category} from './types.js';\n\nconst UIStrings = {\n  /** Title of an insight that provides details about why elements shift/move on the page. The causes for these shifts are referred to as culprits (\"reasons\"). */\n  title: 'Layout shift culprits',\n  /**\n   * @description Description of a DevTools insight that identifies the reasons that elements shift on the page.\n   * This is displayed after a user expands the section to see more. No character length limits.\n   */\n  description:\n      'Layout shifts occur when elements move absent any user interaction. [Investigate the causes of layout shifts](https://web.dev/articles/optimize-cls), such as elements being added, removed, or their fonts changing as the page loads.',\n  /**\n   *@description Text indicating the worst layout shift cluster.\n   */\n  worstLayoutShiftCluster: 'Worst layout shift cluster',\n  /**\n   * @description Text indicating the worst layout shift cluster.\n   */\n  worstCluster: 'Worst cluster',\n  /**\n   * @description Text indicating a layout shift cluster and its start time.\n   * @example {32 ms} PH1\n   */\n  layoutShiftCluster: 'Layout shift cluster @ {PH1}',\n  /**\n   *@description Text indicating the biggest reasons for the layout shifts.\n   */\n  topCulprits: 'Top layout shift culprits',\n  /**\n   * @description Text for a culprit type of Injected iframe.\n   */\n  injectedIframe: 'Injected iframe',\n  /**\n   * @description Text for a culprit type of Font request.\n   */\n  fontRequest: 'Font request',\n  /**\n   * @description Text for a culprit type of Animation.\n   */\n  animation: 'Animation',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/CLSCulprits.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class CLSCulprits extends BaseInsight {\n  static readonly litTagName = LitHtml.literal`devtools-performance-cls-culprits`;\n  override insightCategory: Category = Category.CLS;\n  override internalName: string = 'cls-culprits';\n  override userVisibleTitle: string = i18nString(UIStrings.title);\n  override description: string = i18nString(UIStrings.description);\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    const insight =\n        Trace.Insights.Common.getInsight('CumulativeLayoutShift', this.data.insights, this.data.insightSetKey);\n\n    const clustersByScore =\n        insight?.clusters.toSorted((a, b) => b.clusterCumulativeScore - a.clusterCumulativeScore) ?? [];\n    const worstCluster = clustersByScore[0];\n    if (!worstCluster) {\n      return [];\n    }\n\n    const range = Trace.Types.Timing.MicroSeconds(worstCluster.dur ?? 0);\n    const max = Trace.Types.Timing.MicroSeconds(worstCluster.ts + range);\n\n    const label = LitHtml.html`<div>${i18nString(UIStrings.worstLayoutShiftCluster)}</div>`;\n    return [{\n      type: 'TIMESPAN_BREAKDOWN',\n      sections: [\n        {bounds: {min: worstCluster.ts, range, max}, label, showDuration: false},\n      ],\n      // This allows for the overlay to sit over the layout shift.\n      entry: worstCluster.events[0],\n      renderLocation: 'ABOVE_EVENT',\n    }];\n  }\n\n  /**\n   * getTopCulprits gets the top 3 shift root causes based on worst cluster.\n   */\n  getTopCulprits(\n      cluster: Trace.Types.Events.SyntheticLayoutShiftCluster,\n      culpritsByShift:\n          Map<Trace.Types.Events.LayoutShift,\n              Trace.Insights.InsightRunners.CumulativeLayoutShift.LayoutShiftRootCausesData>|undefined): string[] {\n    if (!culpritsByShift) {\n      return [];\n    }\n    const MAX_TOP_CULPRITS = 3;\n    const causes: Array<string> = [];\n    if (causes.length === MAX_TOP_CULPRITS) {\n      return causes;\n    }\n    const shifts = cluster.events;\n    for (const shift of shifts) {\n      if (causes.length === MAX_TOP_CULPRITS) {\n        break;\n      }\n\n      const culprits = culpritsByShift.get(shift);\n      if (!culprits) {\n        continue;\n      }\n      const fontReq = culprits.fontRequests;\n      const iframes = culprits.iframeIds;\n      const animations = culprits.nonCompositedAnimations;\n\n      for (let i = 0; i < fontReq.length && causes.length < MAX_TOP_CULPRITS; i++) {\n        causes.push(i18nString(UIStrings.fontRequest));\n      }\n      for (let i = 0; i < iframes.length && causes.length < MAX_TOP_CULPRITS; i++) {\n        causes.push(i18nString(UIStrings.injectedIframe));\n      }\n      for (let i = 0; i < animations.length && causes.length < MAX_TOP_CULPRITS; i++) {\n        causes.push(i18nString(UIStrings.animation));\n      }\n    }\n    return causes.slice(0, MAX_TOP_CULPRITS);\n  }\n\n  #clickEvent(event: Trace.Types.Events.Event): void {\n    this.dispatchEvent(new EventReferenceClick(event));\n  }\n\n  #render(culprits: Array<string>, worstCluster: Trace.Types.Events.SyntheticLayoutShiftCluster):\n      LitHtml.TemplateResult {\n    const ts = Trace.Types.Timing.MicroSeconds(worstCluster.ts - (this.data.parsedTrace?.Meta.traceBounds.min ?? 0));\n    const clusterTs = i18n.TimeUtilities.formatMicroSecondsTime(ts);\n\n    // TODO(crbug.com/369102516): use Table for hover/click ux.\n    // clang-format off\n    return LitHtml.html`\n        <div class=\"insights\">\n            <${SidebarInsight.SidebarInsight.litTagName} .data=${{\n              title: this.userVisibleTitle,\n              description: this.description,\n              internalName: this.internalName,\n              expanded: this.isActive(),\n            } as SidebarInsight.InsightDetails}\n            @insighttoggleclick=${this.onSidebarClick}>\n                <div slot=\"insight-content\" class=\"insight-section\">\n                  <span class=\"worst-cluster\">${i18nString(UIStrings.worstCluster)}: <span class=\"devtools-link\" @click=${() => this.#clickEvent(worstCluster)}>${i18nString(UIStrings.layoutShiftCluster, {PH1: clusterTs})}</span></span>\n                    <p>${i18nString(UIStrings.topCulprits)}:</p>\n                        ${culprits.map(culprit => {\n                          return LitHtml.html `\n                            <li>${culprit}</li>\n                          `;\n                        })}\n                </div>\n            </${SidebarInsight.SidebarInsight}>\n        </div>`;\n    // clang-format on\n  }\n\n  override render(): void {\n    const insight =\n        Trace.Insights.Common.getInsight('CumulativeLayoutShift', this.data.insights, this.data.insightSetKey);\n    const culpritsByShift = insight?.shifts;\n    const clusters = insight?.clusters ?? [];\n    if (!clusters.length) {\n      return;\n    }\n    const clustersByScore = clusters.toSorted((a, b) => b.clusterCumulativeScore - a.clusterCumulativeScore);\n\n    const causes = this.getTopCulprits(clustersByScore[0], culpritsByShift);\n    const hasCulprits = causes.length > 0;\n\n    const matchesCategory = shouldRenderForCategory({\n      activeCategory: this.data.activeCategory,\n      insightCategory: this.insightCategory,\n    });\n    const output = hasCulprits && matchesCategory ? this.#render(causes, clustersByScore[0]) : LitHtml.nothing;\n    LitHtml.render(output, this.shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-cls-culprits': CLSCulprits;\n  }\n}\n\ncustomElements.define('devtools-performance-cls-culprits', CLSCulprits);\n"]}