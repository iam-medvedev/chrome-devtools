{"version":3,"file":"SidebarInsight.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/SidebarInsight.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../../testing/EnvironmentHelpers.js';\nimport * as Coordinator from '../../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as InsightsUI from '../../components/insights/insights.js';\n\ndescribeWithEnvironment('SidebarInsight', () => {\n  const {SidebarInsight} = InsightsUI.SidebarInsight;\n  const coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\n  describe('sidebar insight component rendering', () => {\n    it('renders insight title', async () => {\n      const component = new SidebarInsight();\n      component.data = {title: 'LCP by Phase', expanded: true};\n      renderElementIntoDOM(component);\n\n      await coordinator.done();\n\n      assert.isNotNull(component.shadowRoot);\n      const titleElement = component.shadowRoot.querySelector<HTMLElement>('.insight-title');\n      assert.isNotNull(titleElement);\n      assert.deepEqual(titleElement.textContent, 'LCP by Phase');\n    });\n\n    describe('insight toggling', () => {\n      it('renders only insight title when not toggled', async () => {\n        const component = new SidebarInsight();\n        component.data = {title: 'LCP by Phase', expanded: false};\n        renderElementIntoDOM(component);\n\n        await coordinator.done();\n\n        assert.isNotNull(component.shadowRoot);\n        const titleElement = component.shadowRoot.querySelector<HTMLElement>('.insight-title');\n        assert.isNotNull(titleElement);\n        assert.deepEqual(titleElement.textContent, 'LCP by Phase');\n\n        // Should not contain the description and content slots.\n        const slotElements = component.shadowRoot.querySelectorAll<HTMLSlotElement>('slot');\n        assert.isEmpty(slotElements);\n      });\n\n      it('renders title, description and content when toggled', async () => {\n        const component = new SidebarInsight();\n        component.data = {title: 'LCP by Phase', expanded: true};\n        renderElementIntoDOM(component);\n\n        await coordinator.done();\n\n        assert.isNotNull(component.shadowRoot);\n        const titleElement = component.shadowRoot.querySelector<HTMLElement>('.insight-title');\n        assert.isNotNull(titleElement);\n        assert.deepEqual(titleElement.textContent, 'LCP by Phase');\n\n        const slotElements = component.shadowRoot.querySelectorAll<HTMLSlotElement>('slot');\n        assert.isNotEmpty(slotElements);\n\n        const descriptionSlot = slotElements[0];\n        assert.isNotNull(descriptionSlot);\n        assert.strictEqual(descriptionSlot.name, 'insight-description');\n\n        const contentSlot = slotElements[1];\n        assert.isNotNull(contentSlot);\n        assert.strictEqual(contentSlot.name, 'insight-content');\n      });\n    });\n  });\n});\n"]}