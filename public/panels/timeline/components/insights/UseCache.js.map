{"version":3,"file":"UseCache.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/UseCache.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './Table.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type {UseCacheInsightModel} from '../../../../models/trace/insights/UseCache.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\nimport {eventRef} from './EventRef.js';\nimport {createLimitedRows, renderOthersLabel, type TableData, type TableDataRow} from './Table.js';\n\nconst {UIStrings, i18nString} = Trace.Insights.Models.UseCache;\n\nconst {html} = Lit;\n\nexport class UseCache extends BaseInsightComponent<UseCacheInsightModel> {\n  static override readonly litTagName = Lit.StaticHtml.literal`devtools-performance-use-cache`;\n\n  mapToRow(req: Trace.Insights.Models.UseCache.CacheableRequest): TableDataRow {\n    return {\n      values: [eventRef(req.request), i18n.TimeUtilities.secondsToString(req.ttl)],\n      overlays: [this.#createOverlayForRequest(req.request)],\n    };\n  }\n\n  createAggregatedTableRow(remaining: Trace.Insights.Models.UseCache.CacheableRequest[]): TableDataRow {\n    return {\n      values: [renderOthersLabel(remaining.length), ''],\n      overlays: remaining.flatMap(r => this.#createOverlayForRequest(r.request)),\n    };\n  }\n\n  override internalName = 'use-cache';\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    if (!this.model) {\n      return [];\n    }\n\n    return this.model.requests.map(req => this.#createOverlayForRequest(req.request));\n  }\n\n  override getEstimatedSavingsBytes(): number|null {\n    return this.model?.totalWastedBytes ?? null;\n  }\n\n  override renderContent(): Lit.LitTemplate {\n    if (!this.model) {\n      return Lit.nothing;\n    }\n\n    const cacheableRequests = [...this.model.requests];\n    const topRequests =\n        cacheableRequests.sort((a, b) => b.request.args.data.decodedBodyLength - a.request.args.data.decodedBodyLength);\n\n    const rows = createLimitedRows(topRequests, this);\n\n    if (!rows.length) {\n      return html`<div class=\"insight-section\">${i18nString(UIStrings.noRequestsToCache)}</div>`;\n    }\n\n    // clang-format off\n    return html`\n      <div class=\"insight-section\">\n        <devtools-performance-table\n          .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.requestColumn), i18nString(UIStrings.cacheTTL)],\n            rows,\n          } as TableData}>\n        </devtools-performance-table>\n      </div>`;\n    // clang-format on\n  }\n\n  #createOverlayForRequest(request: Trace.Types.Events.SyntheticNetworkRequest): Overlays.Overlays.EntryOutline {\n    return {\n      type: 'ENTRY_OUTLINE',\n      entry: request,\n      outlineReason: 'ERROR',\n    };\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-use-cache': UseCache;\n  }\n}\n\ncustomElements.define('devtools-performance-use-cache', UseCache);\n"]}