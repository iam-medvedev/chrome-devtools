{"version":3,"file":"CLSCulprits.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/CLSCulprits.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EACL,+BAA+B,EAC/B,oCAAoC,EACpC,oBAAoB,GACrB,MAAM,mCAAmC,CAAC;AAC3C,OAAO,EAAC,uBAAuB,EAAC,MAAM,2CAA2C,CAAC;AAClF,OAAO,EAAC,WAAW,EAAC,MAAM,oCAAoC,CAAC;AAC/D,OAAO,KAAK,iBAAiB,MAAM,oEAAoE,CAAC;AAExG,OAAO,KAAK,QAAQ,MAAM,eAAe,CAAC;AAE1C,uBAAuB,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACpD,EAAE,CAAC,gCAAgC,EAAE,KAAK;QACxC,MAAM,SAAS,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,wBAAwB,CAAC,CAAC;QAChF,MAAM,gBAAgB,GAAG,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC;QACpE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC9B,MAAM,QAAQ,GAAG,gBAAgB,CAAC,KAAK,CAAC,WAAW,CAAC;QACpD,MAAM,SAAS,GAAG,IAAI,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QACzD,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC3B,SAAS,CAAC,aAAa,GAAG,gBAAgB,CAAC,EAAE,CAAC;QAC9C,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1D,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;QAE1B,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChC,MAAM,iBAAiB,CAAC,IAAI,EAAE,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAElC,MAAM,SAAS,GAAG,oCAAoC,CAAC,SAAS,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;QAC/F,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;QAEvD,MAAM,gBAAgB,GAAG,oCAAoC,CAAC,SAAS,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;QACtG,MAAM,CAAC,WAAW,CAAC,gBAAgB,EAAE,8CAA8C,CAAC,CAAC;QAErF,MAAM,YAAY,GAAG,SAAS,CAAC,UAAU,CAAC,aAAa,CAAmB,iBAAiB,CAAC,CAAC;QAC7F,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC1B,MAAM,YAAY,GAAG,+BAA+B,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACzE,+CAA+C;QAC/C,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  getCleanTextContentFromElements,\n  getCleanTextContentFromSingleElement,\n  renderElementIntoDOM,\n} from '../../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../../testing/TraceLoader.js';\nimport * as RenderCoordinator from '../../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as Insights from './insights.js';\n\ndescribeWithEnvironment('CLSCulprits component', () => {\n  it('renders unsized image culprits', async function() {\n    const traceData = await TraceLoader.traceEngine(this, 'unsized-images.json.gz');\n    const firstNavInsights = traceData.insights?.values().next()?.value;\n    assert.isOk(firstNavInsights);\n    const clsModel = firstNavInsights.model.CLSCulprits;\n    const component = new Insights.CLSCulprits.CLSCulprits();\n    component.model = clsModel;\n    component.insightSetKey = firstNavInsights.id;\n    component.bounds = traceData.parsedTrace.Meta.traceBounds;\n    component.selected = true;\n\n    renderElementIntoDOM(component);\n    await RenderCoordinator.done();\n    assert.isOk(component.shadowRoot);\n\n    const titleText = getCleanTextContentFromSingleElement(component.shadowRoot, '.insight-title');\n    assert.strictEqual(titleText, 'Layout shift culprits');\n\n    const worstClusterText = getCleanTextContentFromSingleElement(component.shadowRoot, '.worst-cluster');\n    assert.strictEqual(worstClusterText, 'Worst cluster: Layout shift cluster @ 1.37Â s');\n\n    const culpritsList = component.shadowRoot.querySelector<HTMLUListElement>('.worst-culprits');\n    assert.isOk(culpritsList);\n    const culpritsText = getCleanTextContentFromElements(culpritsList, 'li');\n    // There are two shifts hence the two culprits.\n    assert.deepEqual(culpritsText, ['Unsized Images', 'Unsized Images']);\n  });\n});\n"]}