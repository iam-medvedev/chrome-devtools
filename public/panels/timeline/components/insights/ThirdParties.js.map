{"version":3,"file":"ThirdParties.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/ThirdParties.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './Table.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport type {ThirdPartiesInsightModel} from '../../../../models/trace/insights/ThirdParties.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\n\nconst {UIStrings, i18nString} = Trace.Insights.Models.ThirdParties;\n\nconst {html} = Lit;\n\nconst MAX_TO_SHOW = 3;\n\nexport class ThirdParties extends BaseInsightComponent<ThirdPartiesInsightModel> {\n  static override readonly litTagName = Lit.StaticHtml.literal`devtools-performance-third-parties`;\n  override internalName = 'third-parties';\n\n  #overlaysForEntity = new Map<Trace.Extras.ThirdParties.Entity, Overlays.Overlays.TimelineOverlay[]>();\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    this.#overlaysForEntity.clear();\n\n    if (!this.model) {\n      return [];\n    }\n\n    const overlays: Overlays.Overlays.TimelineOverlay[] = [];\n    for (const [entity, events] of this.model.eventsByEntity) {\n      if (entity === this.model.firstPartyEntity) {\n        continue;\n      }\n\n      const overlaysForThisEntity = [];\n      for (const event of events) {\n        const overlay: Overlays.Overlays.TimelineOverlay = {\n          type: 'ENTRY_OUTLINE',\n          entry: event,\n          outlineReason: 'INFO',\n        };\n        overlaysForThisEntity.push(overlay);\n        overlays.push(overlay);\n      }\n\n      this.#overlaysForEntity.set(entity, overlaysForThisEntity);\n    }\n\n    return overlays;\n  }\n\n  override renderContent(): Lit.LitTemplate {\n    if (!this.model) {\n      return Lit.nothing;\n    }\n\n    const entries = [...this.model.summaryByEntity.entries()].filter(kv => kv[0] !== this.model?.firstPartyEntity);\n    if (!entries.length) {\n      return html`<div class=\"insight-section\">${i18nString(UIStrings.noThirdParties)}</div>`;\n    }\n\n    const topTransferSizeEntries = entries.sort((a, b) => b[1].transferSize - a[1].transferSize).slice(0, MAX_TO_SHOW);\n    const topMainThreadTimeEntries =\n        entries.sort((a, b) => b[1].mainThreadTime - a[1].mainThreadTime).slice(0, MAX_TO_SHOW);\n\n    const sections = [];\n    if (topTransferSizeEntries.length) {\n      // clang-format off\n      sections.push(html`\n        <div class=\"insight-section\">\n          <devtools-performance-table\n            .data=${{\n              insight: this,\n              headers: [i18nString(UIStrings.columnThirdParty), i18nString(UIStrings.columnTransferSize)],\n              rows: topTransferSizeEntries.map(([entity, summary]) => ({\n                values: [\n                  entity.name,\n                  i18n.ByteUtilities.bytesToString(summary.transferSize),\n                ],\n                overlays: this.#overlaysForEntity.get(entity),\n              })),\n            }}>\n          </devtools-performance-table>\n        </div>\n      `);\n      // clang-format on\n    }\n\n    if (topMainThreadTimeEntries.length) {\n      // clang-format off\n      sections.push(html`\n        <div class=\"insight-section\">\n          <devtools-performance-table\n            .data=${{\n              insight: this,\n              headers: [i18nString(UIStrings.columnThirdParty), i18nString(UIStrings.columnMainThreadTime)],\n              rows: topMainThreadTimeEntries.map(([entity, summary]) => ({\n                values: [\n                  entity.name,\n                  i18n.TimeUtilities.millisToString(Platform.Timing.microSecondsToMilliSeconds(summary.mainThreadTime)),\n                ],\n                overlays: this.#overlaysForEntity.get(entity),\n              })),\n            }}>\n          </devtools-performance-table>\n        </div>\n      `);\n      // clang-format on\n    }\n\n    return html`${sections}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-third-parties': ThirdParties;\n  }\n}\n\ncustomElements.define('devtools-performance-third-parties', ThirdParties);\n"]}