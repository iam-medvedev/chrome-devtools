{"version":3,"file":"ThirdParties.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/ThirdParties.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,+BAA+B,CAAC;AAEtD,OAAO,KAAK,KAAK,MAAM,mCAAmC,CAAC;AAC3D,OAAO,KAAK,GAAG,MAAM,2BAA2B,CAAC;AAGjD,OAAO,EAAC,oBAAoB,EAAC,MAAM,2BAA2B,CAAC;AAC/D,OAAO,EAAC,iBAAiB,EAAE,iBAAiB,EAA0B,MAAM,YAAY,CAAC;AAEzF,MAAM,EAAC,SAAS,EAAE,UAAU,EAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC;AAEnE,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAEnB,MAAM,WAAW,GAAG,CAAC,CAAC;AAEtB,MAAM,OAAO,YAAa,SAAQ,oBAA8C;IAC9E,MAAM,CAAmB,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,OAAO,CAAA,oCAAoC,CAAC;IACxF,YAAY,GAAG,eAAe,CAAC;IAE/B,cAAc;QACrB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChB,OAAO,EAAE,CAAC;QACZ,CAAC;QAED,MAAM,QAAQ,GAAwC,EAAE,CAAC;QACzD,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,IAAI,EAAE,CAAC;QACnD,KAAK,MAAM,OAAO,IAAI,SAAS,EAAE,CAAC;YAChC,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;gBACnD,SAAS;YACX,CAAC;YAED,MAAM,eAAe,GAAG,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;YAChE,QAAQ,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,CAAC;QACpC,CAAC;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,yBAAyB,CAAC,OAAgD;QACxE,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC;YAC1C,uEAAuE;YACvE,yEAAyE;YACzE,uEAAuE;YACvE,qFAAqF;YACrF,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,EAAE,CAAC;gBACjD,SAAS;YACX,CAAC;YAED,MAAM,OAAO,GAAsC;gBACjD,IAAI,EAAE,eAAe;gBACrB,KAAK,EAAE,KAAK;gBACZ,aAAa,EAAE,MAAM;aACtB,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzB,CAAC;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,yBAAyB,GAAgE;QACvF,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;YACpB,MAAM,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YACxF,QAAQ,EAAE,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC;SAClD,CAAC;QACF,wBAAwB,EACpB,SAAS,CAAC,EAAE;YACV,MAAM,mBAAmB,GACrB,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC,CAA6B,CAAC;YACpG,OAAO;gBACL,MAAM,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;gBACrG,QAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;aACtF,CAAC;QACJ,CAAC;KACN,CAAC;IAEF,uBAAuB,GAAgE;QACrF,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;YACpB,MAAM,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACvF,QAAQ,EAAE,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC;SAClD,CAAC;QACF,wBAAwB,EACpB,SAAS,CAAC,EAAE;YACV,MAAM,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YACrF,OAAO;gBACL,MAAM,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;gBAC7F,QAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;aACtF,CAAC;QACJ,CAAC;KACN,CAAC;IAEO,aAAa;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChB,OAAO,GAAG,CAAC,OAAO,CAAC;QACrB,CAAC;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,IAAI,EAAE,CAAC;QAE9C,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;YAChC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,EAAE,gBAAgB,IAAI,IAAI,CAAC,CAAC;QACjF,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YACnB,OAAO,IAAI,CAAA,gCAAgC,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;QAC1F,CAAC;QAED,MAAM,sBAAsB,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;QAC1F,MAAM,wBAAwB,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,cAAc,CAAC,CAAC;QAEhG,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,IAAI,sBAAsB,CAAC,MAAM,EAAE,CAAC;YAClC,MAAM,IAAI,GAAG,iBAAiB,CAAC,sBAAsB,EAAE,IAAI,CAAC,uBAAuB,EAAE,WAAW,CAAC,CAAC;YAClG,mBAAmB;YACnB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAA;;;oBAGJ;gBACN,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;gBAC3F,IAAI;aACL;;;OAGN,CAAC,CAAC;YACH,kBAAkB;QACpB,CAAC;QAED,IAAI,wBAAwB,CAAC,MAAM,EAAE,CAAC;YACpC,MAAM,IAAI,GAAG,iBAAiB,CAAC,wBAAwB,EAAE,IAAI,CAAC,yBAAyB,EAAE,WAAW,CAAC,CAAC;YACtG,mBAAmB;YACnB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAA;;;oBAGJ;gBACN,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;gBAC7F,IAAI;aACL;;;OAGN,CAAC,CAAC;YACH,kBAAkB;QACpB,CAAC;QAED,OAAO,IAAI,CAAA,GAAG,QAAQ,EAAE,CAAC;IAC3B,CAAC;;AASH,cAAc,CAAC,MAAM,CAAC,oCAAoC,EAAE,YAAY,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type {ThirdPartiesInsightModel} from '../../../../models/trace/insights/ThirdParties.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\nimport {createLimitedRows, renderOthersLabel, type RowLimitAggregator} from './Table.js';\n\nconst {UIStrings, i18nString} = Trace.Insights.Models.ThirdParties;\n\nconst {html} = Lit;\n\nconst MAX_TO_SHOW = 5;\n\nexport class ThirdParties extends BaseInsightComponent<ThirdPartiesInsightModel> {\n  static override readonly litTagName = Lit.StaticHtml.literal`devtools-performance-third-parties`;\n  override internalName = 'third-parties';\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    if (!this.model) {\n      return [];\n    }\n\n    const overlays: Overlays.Overlays.TimelineOverlay[] = [];\n    const summaries = this.model.entitySummaries ?? [];\n    for (const summary of summaries) {\n      if (summary.entity === this.model.firstPartyEntity) {\n        continue;\n      }\n\n      const summaryOverlays = this.#createOverlaysForSummary(summary);\n      overlays.push(...summaryOverlays);\n    }\n    return overlays;\n  }\n\n  #createOverlaysForSummary(summary: Trace.Extras.ThirdParties.EntitySummary): Overlays.Overlays.TimelineOverlay[] {\n    const overlays = [];\n    for (const event of summary.relatedEvents) {\n      // The events found for a third party can be vast, as they gather every\n      // single main thread task along with everything else on the page. If the\n      // main thread is busy with large icicles, we can easily create tens of\n      // thousands of overlays. Therefore, only create overlays for events of at least 1ms.\n      if (event.dur === undefined || event.dur < 1_000) {\n        continue;\n      }\n\n      const overlay: Overlays.Overlays.TimelineOverlay = {\n        type: 'ENTRY_OUTLINE',\n        entry: event,\n        outlineReason: 'INFO',\n      };\n      overlays.push(overlay);\n    }\n    return overlays;\n  }\n\n  #mainThreadTimeAggregator: RowLimitAggregator<Trace.Extras.ThirdParties.EntitySummary> = {\n    mapToRow: summary => ({\n      values: [summary.entity.name, i18n.TimeUtilities.millisToString(summary.mainThreadTime)],\n      overlays: this.#createOverlaysForSummary(summary),\n    }),\n    createAggregatedTableRow:\n        remaining => {\n          const totalMainThreadTime =\n              remaining.reduce((acc, summary) => acc + summary.mainThreadTime, 0) as Trace.Types.Timing.Milli;\n          return {\n            values: [renderOthersLabel(remaining.length), i18n.TimeUtilities.millisToString(totalMainThreadTime)],\n            overlays: remaining.flatMap(summary => this.#createOverlaysForSummary(summary) ?? []),\n          };\n        },\n  };\n\n  #transferSizeAggregator: RowLimitAggregator<Trace.Extras.ThirdParties.EntitySummary> = {\n    mapToRow: summary => ({\n      values: [summary.entity.name, i18n.ByteUtilities.formatBytesToKb(summary.transferSize)],\n      overlays: this.#createOverlaysForSummary(summary),\n    }),\n    createAggregatedTableRow:\n        remaining => {\n          const totalBytes = remaining.reduce((acc, summary) => acc + summary.transferSize, 0);\n          return {\n            values: [renderOthersLabel(remaining.length), i18n.ByteUtilities.formatBytesToKb(totalBytes)],\n            overlays: remaining.flatMap(summary => this.#createOverlaysForSummary(summary) ?? []),\n          };\n        },\n  };\n\n  override renderContent(): Lit.LitTemplate {\n    if (!this.model) {\n      return Lit.nothing;\n    }\n\n    let result = this.model.entitySummaries ?? [];\n\n    if (this.model.firstPartyEntity) {\n      result = result.filter(s => s.entity !== this.model?.firstPartyEntity || null);\n    }\n    if (!result.length) {\n      return html`<div class=\"insight-section\">${i18nString(UIStrings.noThirdParties)}</div>`;\n    }\n\n    const topTransferSizeEntries = result.toSorted((a, b) => b.transferSize - a.transferSize);\n    const topMainThreadTimeEntries = result.toSorted((a, b) => b.mainThreadTime - a.mainThreadTime);\n\n    const sections = [];\n    if (topTransferSizeEntries.length) {\n      const rows = createLimitedRows(topTransferSizeEntries, this.#transferSizeAggregator, MAX_TO_SHOW);\n      // clang-format off\n      sections.push(html`\n        <div class=\"insight-section\">\n          <devtools-performance-table\n            .data=${{\n              insight: this,\n              headers: [i18nString(UIStrings.columnThirdParty), i18nString(UIStrings.columnTransferSize)],\n              rows,\n            }}>\n          </devtools-performance-table>\n        </div>\n      `);\n      // clang-format on\n    }\n\n    if (topMainThreadTimeEntries.length) {\n      const rows = createLimitedRows(topMainThreadTimeEntries, this.#mainThreadTimeAggregator, MAX_TO_SHOW);\n      // clang-format off\n      sections.push(html`\n        <div class=\"insight-section\">\n          <devtools-performance-table\n            .data=${{\n              insight: this,\n              headers: [i18nString(UIStrings.columnThirdParty), i18nString(UIStrings.columnMainThreadTime)],\n              rows,\n            }}>\n          </devtools-performance-table>\n        </div>\n      `);\n      // clang-format on\n    }\n\n    return html`${sections}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-third-parties': ThirdParties;\n  }\n}\n\ncustomElements.define('devtools-performance-third-parties', ThirdParties);\n"]}