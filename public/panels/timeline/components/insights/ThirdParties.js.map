{"version":3,"file":"ThirdParties.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/ThirdParties.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport type * as TraceEngine from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsight, md, shouldRenderForCategory} from './Helpers.js';\nimport * as SidebarInsight from './SidebarInsight.js';\nimport {Table, type TableData} from './Table.js';\nimport {InsightsCategories} from './types.js';\n\nconst UIStrings = {\n  /** Title of a diagnostic audit that provides details about the code on a web page that the user doesn't control (referred to as \"third-party code\"). */\n  title: 'Minimize third-party usage',\n  /**\n   * @description Description of a DevTools insight that identifies the code on the page that the user doesn't control.\n   * This is displayed after a user expands the section to see more. No character length limits.\n   * The last sentence starting with 'Learn' becomes link text to additional documentation.\n   */\n  description: 'Third-party code can significantly impact load performance. ' +\n      'Limit the number of redundant third-party providers and try to load third-party code after ' +\n      'your page has primarily finished loading. ' +\n      '[Learn how to minimize third-party impact](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript/).',\n  /** Label for a table column that displays the name of a third-party provider. */\n  columnThirdParty: 'Third-party',\n  /** Label for a column in a data table; entries will be the download size of a web resource in kilobytes. */\n  columnTransferSize: 'Transfer size',\n  /** Label for a table column that displays how much time each row spent blocking other work on the main thread, entries will be the number of milliseconds spent. */\n  columnBlockingTime: 'Blocking time',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/ThirdParties.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport function getThirdPartiesInsight(\n    insights: TraceEngine.Insights.Types.TraceInsightData|null,\n    navigationId: string|null): TraceEngine.Insights.Types.InsightResults['ThirdPartyWeb']|null {\n  if (!insights || !navigationId) {\n    return null;\n  }\n\n  const insightsByNavigation = insights.get(navigationId);\n  if (!insightsByNavigation) {\n    return null;\n  }\n\n  const thirdPartiesInsight = insightsByNavigation.ThirdPartyWeb;\n  if (thirdPartiesInsight instanceof Error) {\n    return null;\n  }\n  return thirdPartiesInsight;\n}\n\nexport class ThirdParties extends BaseInsight {\n  static readonly litTagName = LitHtml.literal`devtools-performance-third-parties`;\n  override insightCategory: InsightsCategories = InsightsCategories.OTHER;\n  override internalName: string = 'third-parties';\n  override userVisibleTitle: string = i18nString(UIStrings.title);\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    const insight = getThirdPartiesInsight(this.data.insights, this.data.navigationId);\n    if (!insight) {\n      return [];\n    }\n\n    const overlays: Overlays.Overlays.TimelineOverlay[] = [];\n    for (const [entity, requests] of insight.requestsByEntity) {\n      if (entity === insight.firstPartyEntity) {\n        continue;\n      }\n\n      for (const request of requests) {\n        overlays.push({\n          type: 'ENTRY_OUTLINE',\n          entry: request,\n          outlineReason: 'INFO',\n        });\n      }\n    }\n\n    return overlays;\n  }\n\n  #render(data: TraceEngine.Insights.Types.InsightResults['ThirdPartyWeb']): LitHtml.TemplateResult {\n    const entries = [...data.summaryByEntity.entries()].filter(kv => kv[0] !== data.firstPartyEntity);\n    // clang-format off\n    const rows1 = entries\n      .sort((a, b) => b[1].transferSize - a[1].transferSize)\n      .slice(0, 6)\n      .map(([entity, summary]) => [\n          entity.name,\n          Platform.NumberUtilities.bytesToString(summary.transferSize),\n        ]);\n    const rows2 = entries\n      .sort((a, b) => b[1].mainThreadTime - a[1].mainThreadTime)\n      .slice(0, 6)\n      .map(([entity, summary]) => [\n          entity.name,\n          i18n.TimeUtilities.millisToString(Platform.Timing.microSecondsToMilliSeconds(summary.mainThreadTime)),\n        ]);\n\n    return LitHtml.html`\n        <div class=\"insights\">\n            <${SidebarInsight.SidebarInsight.litTagName} .data=${{\n            title: this.userVisibleTitle,\n            expanded: this.isActive(),\n            } as SidebarInsight.InsightDetails}\n            @insighttoggleclick=${this.onSidebarClick}>\n                <div slot=\"insight-description\" class=\"insight-description\">\n                  ${md(i18nString(UIStrings.description))}\n                </div>\n                <div slot=\"insight-content\">\n                  ${LitHtml.html`<${Table.litTagName}\n                    .data=${{\n                      headers: [i18nString(UIStrings.columnThirdParty), i18nString(UIStrings.columnTransferSize)],\n                      rows: rows1,\n                    } as TableData}>\n                  </${Table.litTagName}>`}\n                  ${LitHtml.html`<${Table.litTagName}\n                    .data=${{\n                      headers: [i18nString(UIStrings.columnThirdParty), i18nString(UIStrings.columnBlockingTime)],\n                      rows: rows2,\n                    } as TableData}>\n                  </${Table.litTagName}>`}\n                </div>\n            </${SidebarInsight.SidebarInsight}>\n        </div>`;\n    // clang-format on\n  }\n\n  override render(): void {\n    const insight = getThirdPartiesInsight(this.data.insights, this.data.navigationId);\n    const shouldShow = insight && insight.summaryByEntity.size;\n\n    const matchesCategory = shouldRenderForCategory({\n      activeCategory: this.data.activeCategory,\n      insightCategory: this.insightCategory,\n    });\n    const output = shouldShow && matchesCategory ? this.#render(insight) : LitHtml.nothing;\n    LitHtml.render(output, this.shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-third-parties': ThirdParties;\n  }\n}\n\ncustomElements.define('devtools-performance-third-parties', ThirdParties);\n"]}