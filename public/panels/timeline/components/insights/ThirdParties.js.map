{"version":3,"file":"ThirdParties.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/ThirdParties.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,YAAY,CAAC;AAEpB,OAAO,KAAK,IAAI,MAAM,+BAA+B,CAAC;AACtD,OAAO,KAAK,QAAQ,MAAM,uCAAuC,CAAC;AAClE,OAAO,KAAK,KAAK,MAAM,mCAAmC,CAAC;AAC3D,OAAO,KAAK,OAAO,MAAM,qCAAqC,CAAC;AAG/D,OAAO,EAAC,WAAW,EAAE,uBAAuB,EAAC,MAAM,cAAc,CAAC;AAGlE,OAAO,EAAC,QAAQ,EAAC,MAAM,YAAY,CAAC;AAEpC,MAAM,EAAC,IAAI,EAAC,GAAG,OAAO,CAAC;AAOvB,MAAM,SAAS,GAAG;IAChB,gJAAgJ;IAChJ,KAAK,EAAE,eAAe;IACtB;;;OAGG;IACH,WAAW,EAAE,8DAA8D;QACvE,8MAA8M;IAClN,iFAAiF;IACjF,gBAAgB,EAAE,aAAa;IAC/B,4GAA4G;IAC5G,kBAAkB,EAAE,eAAe;IACnC,oKAAoK;IACpK,kBAAkB,EAAE,eAAe;CACpC,CAAC;AAEF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,qDAAqD,EAAE,SAAS,CAAC,CAAC;AAC3G,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,OAAO,YAAa,SAAQ,WAAW;IAC3C,MAAM,CAAmB,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,oCAAoC,CAAC;IACjF,eAAe,GAAa,QAAQ,CAAC,GAAG,CAAC;IACzC,YAAY,GAAW,eAAe,CAAC;IACvC,gBAAgB,GAAW,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACvD,WAAW,GAAW,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAEjE,kBAAkB,GACd,IAAI,GAAG,EAA2F,CAAC;IAE9F,cAAc;QACrB,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QAEhC,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/G,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,EAAE,CAAC;QACZ,CAAC;QAED,MAAM,QAAQ,GAAwC,EAAE,CAAC;QACzD,KAAK,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,OAAO,CAAC,gBAAgB,EAAE,CAAC;YAC1D,IAAI,MAAM,KAAK,OAAO,CAAC,gBAAgB,EAAE,CAAC;gBACxC,SAAS;YACX,CAAC;YAED,MAAM,qBAAqB,GAAG,EAAE,CAAC;YACjC,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE,CAAC;gBAC/B,MAAM,OAAO,GAAsC;oBACjD,IAAI,EAAE,eAAe;oBACrB,KAAK,EAAE,OAAO;oBACd,aAAa,EAAE,MAAM;iBACtB,CAAC;gBACF,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzB,CAAC;YAED,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;QAC7D,CAAC;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,OAAO,CAAC,OAA4B;QAClC,MAAM,sBAAsB,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACzG,MAAM,wBAAwB,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/G,mBAAmB;QACnB,OAAO,IAAI,CAAA;;0DAE2C;YAC5C,KAAK,EAAE,IAAI,CAAC,gBAAgB;YAC5B,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE;SACO;kCACZ,IAAI,CAAC,cAAc;;;sBAG/B,IAAI,CAAA;8BACI;YACN,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;YAC3F,IAAI,EAAE,sBAAsB,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;gBACvD,MAAM,EAAE;oBACN,MAAM,CAAC,IAAI;oBACX,QAAQ,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC;iBAC7D;gBACD,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC;aAC9C,CAAC,CAAC;SACS;kDACc;;;;sBAI5B,IAAI,CAAA;8BACI;YACN,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;YAC3F,IAAI,EAAE,wBAAwB,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;gBACzD,MAAM,EAAE;oBACN,MAAM,CAAC,IAAI;oBACX,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,0BAA0B,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;iBACtG;gBACD,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC;aAC9C,CAAC,CAAC;SACS;kDACc;;;;eAInC,CAAC;QACZ,kBAAkB;IACpB,CAAC;IAEQ,gBAAgB;QACvB,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/G,OAAO,OAAO,EAAE,aAAa,IAAI,EAAE,CAAC;IACtC,CAAC;IAEQ,MAAM;QACb,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/G,MAAM,OAAO,GAAG,OAAO,IAAI,CAAC,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACnH,MAAM,UAAU,GAAG,OAAO,EAAE,MAAM,CAAC;QAEnC,MAAM,eAAe,GAAG,uBAAuB,CAAC;YAC9C,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc;YACxC,eAAe,EAAE,IAAI,CAAC,eAAe;SACtC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,UAAU,IAAI,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;QACvF,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IACpD,CAAC;;AASH,cAAc,CAAC,MAAM,CAAC,oCAAoC,EAAE,YAAY,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './Table.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsight, shouldRenderForCategory} from './Helpers.js';\nimport type * as SidebarInsight from './SidebarInsight.js';\nimport type {TableData} from './Table.js';\nimport {Category} from './types.js';\n\nconst {html} = LitHtml;\n\ntype ThirdPartiesEntries = Array<[\n  Trace.Insights.InsightRunners.ThirdPartyWeb.Entity,\n  Trace.Insights.InsightRunners.ThirdPartyWeb.Summary,\n]>;\n\nconst UIStrings = {\n  /** Title of an insight that provides details about the code on a web page that the user doesn't control (referred to as \"third-party code\"). */\n  title: 'Third parties',\n  /**\n   * @description Description of a DevTools insight that identifies the code on the page that the user doesn't control.\n   * This is displayed after a user expands the section to see more. No character length limits.\n   */\n  description: 'Third party code can significantly impact load performance. ' +\n      '[Reduce and defer loading of third party code](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript/) to prioritize your page\\'s content.',\n  /** Label for a table column that displays the name of a third-party provider. */\n  columnThirdParty: 'Third party',\n  /** Label for a column in a data table; entries will be the download size of a web resource in kilobytes. */\n  columnTransferSize: 'Transfer size',\n  /** Label for a table column that displays how much time each row spent blocking other work on the main thread, entries will be the number of milliseconds spent. */\n  columnBlockingTime: 'Blocking time',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/ThirdParties.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ThirdParties extends BaseInsight {\n  static override readonly litTagName = LitHtml.literal`devtools-performance-third-parties`;\n  override insightCategory: Category = Category.ALL;\n  override internalName: string = 'third-parties';\n  override userVisibleTitle: string = i18nString(UIStrings.title);\n  override description: string = i18nString(UIStrings.description);\n\n  #overlaysForEntity =\n      new Map<Trace.Insights.InsightRunners.ThirdPartyWeb.Entity, Overlays.Overlays.TimelineOverlay[]>();\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    this.#overlaysForEntity.clear();\n\n    const insight = Trace.Insights.Common.getInsight('ThirdPartyWeb', this.data.insights, this.data.insightSetKey);\n    if (!insight) {\n      return [];\n    }\n\n    const overlays: Overlays.Overlays.TimelineOverlay[] = [];\n    for (const [entity, requests] of insight.requestsByEntity) {\n      if (entity === insight.firstPartyEntity) {\n        continue;\n      }\n\n      const overlaysForThisEntity = [];\n      for (const request of requests) {\n        const overlay: Overlays.Overlays.TimelineOverlay = {\n          type: 'ENTRY_OUTLINE',\n          entry: request,\n          outlineReason: 'INFO',\n        };\n        overlaysForThisEntity.push(overlay);\n        overlays.push(overlay);\n      }\n\n      this.#overlaysForEntity.set(entity, overlaysForThisEntity);\n    }\n\n    return overlays;\n  }\n\n  #render(entries: ThirdPartiesEntries): LitHtml.TemplateResult {\n    const topTransferSizeEntries = entries.sort((a, b) => b[1].transferSize - a[1].transferSize).slice(0, 6);\n    const topMainThreadTimeEntries = entries.sort((a, b) => b[1].mainThreadTime - a[1].mainThreadTime).slice(0, 6);\n\n    // clang-format off\n    return html`\n        <div class=\"insights\">\n            <devtools-performance-sidebar-insight .data=${{\n              title: this.userVisibleTitle,\n              description: this.description,\n              internalName: this.internalName,\n              expanded: this.isActive(),\n            } as SidebarInsight.InsightDetails}\n            @insighttoggleclick=${this.onSidebarClick}>\n                <div slot=\"insight-content\">\n                  <div class=\"insight-section\">\n                    ${html`<devtools-performance-table\n                      .data=${{\n                        insight: this,\n                        headers: [i18nString(UIStrings.columnThirdParty), i18nString(UIStrings.columnTransferSize)],\n                        rows: topTransferSizeEntries.map(([entity, summary]) => ({\n                          values: [\n                            entity.name,\n                            Platform.NumberUtilities.bytesToString(summary.transferSize),\n                          ],\n                          overlays: this.#overlaysForEntity.get(entity),\n                        })),\n                      } as TableData}>\n                    </devtools-performance-table>`}\n                  </div>\n\n                  <div class=\"insight-section\">\n                    ${html`<devtools-performance-table\n                      .data=${{\n                        insight: this,\n                        headers: [i18nString(UIStrings.columnThirdParty), i18nString(UIStrings.columnBlockingTime)],\n                        rows: topMainThreadTimeEntries.map(([entity, summary]) => ({\n                          values: [\n                            entity.name,\n                            i18n.TimeUtilities.millisToString(Platform.Timing.microSecondsToMilliSeconds(summary.mainThreadTime)),\n                          ],\n                          overlays: this.#overlaysForEntity.get(entity),\n                        })),\n                      } as TableData}>\n                    </devtools-performance-table>`}\n                  </div>\n                </div>\n            </devtools-performance-sidebar-insight>\n        </div>`;\n    // clang-format on\n  }\n\n  override getRelatedEvents(): Trace.Types.Events.Event[] {\n    const insight = Trace.Insights.Common.getInsight('ThirdPartyWeb', this.data.insights, this.data.insightSetKey);\n    return insight?.relatedEvents ?? [];\n  }\n\n  override render(): void {\n    const insight = Trace.Insights.Common.getInsight('ThirdPartyWeb', this.data.insights, this.data.insightSetKey);\n    const entries = insight && [...insight.summaryByEntity.entries()].filter(kv => kv[0] !== insight.firstPartyEntity);\n    const shouldShow = entries?.length;\n\n    const matchesCategory = shouldRenderForCategory({\n      activeCategory: this.data.activeCategory,\n      insightCategory: this.insightCategory,\n    });\n    const output = shouldShow && matchesCategory ? this.#render(entries) : LitHtml.nothing;\n    LitHtml.render(output, this.shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-third-parties': ThirdParties;\n  }\n}\n\ncustomElements.define('devtools-performance-third-parties', ThirdParties);\n"]}