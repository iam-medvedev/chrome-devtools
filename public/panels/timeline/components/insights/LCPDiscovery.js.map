{"version":3,"file":"LCPDiscovery.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/LCPDiscovery.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport './Checklist.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type {LCPDiscoveryInsightModel} from '../../../../models/trace/insights/LCPDiscovery.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\nimport {imageRef} from './EventRef.js';\n\nconst {UIStrings, i18nString, getImageData} = Trace.Insights.Models.LCPDiscovery;\n\nconst {html} = Lit;\n\n// eslint-disable-next-line rulesdir/l10n-filename-matches\nconst str_ = i18n.i18n.registerUIStrings('models/trace/insights/LCPDiscovery.ts', UIStrings);\n\nexport class LCPDiscovery extends BaseInsightComponent<LCPDiscoveryInsightModel> {\n  static override readonly litTagName = Lit.StaticHtml.literal`devtools-performance-lcp-discovery`;\n  override internalName = 'lcp-discovery';\n\n  protected override hasAskAiSupport(): boolean {\n    return true;\n  }\n\n  protected override createOverlays(): Trace.Types.Overlays.Overlay[] {\n    if (!this.model) {\n      return [];\n    }\n\n    const overlays = this.model.createOverlays?.();\n    if (!overlays) {\n      return [];\n    }\n\n    const imageResults = getImageData(this.model);\n    if (!imageResults?.discoveryDelay) {\n      return [];\n    }\n\n    const timespanOverlaySection = overlays.find(overlay => overlay.type === 'TIMESPAN_BREAKDOWN')?.sections[0];\n    if (timespanOverlaySection) {\n      timespanOverlaySection.label = this.#renderDiscoveryDelay(imageResults.discoveryDelay);\n    }\n\n    return overlays;\n  }\n\n  override getEstimatedSavingsTime(): Trace.Types.Timing.Milli|null {\n    if (!this.model) {\n      return null;\n    }\n\n    return getImageData(this.model)?.estimatedSavings ?? null;\n  }\n\n  #renderDiscoveryDelay(delay: Trace.Types.Timing.Micro): HTMLElement {\n    const timeWrapper = document.createElement('span');\n    timeWrapper.classList.add('discovery-time-ms');\n    timeWrapper.innerText = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(delay);\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.lcpLoadDelay, {PH1: timeWrapper});\n  }\n\n  override renderContent(): Lit.LitTemplate {\n    if (!this.model) {\n      return Lit.nothing;\n    }\n\n    const imageData = getImageData(this.model);\n    if (!imageData) {\n      if (!this.model.lcpEvent) {\n        return html`<div class=\"insight-section\">${i18nString(UIStrings.noLcp)}</div>`;\n      }\n      return html`<div class=\"insight-section\">${i18nString(UIStrings.noLcpResource)}</div>`;\n    }\n\n    let delayEl;\n    if (imageData.discoveryDelay) {\n      delayEl = html`<div>${this.#renderDiscoveryDelay(imageData.discoveryDelay)}</div>`;\n    }\n\n    // clang-format off\n    return html`\n      <div class=\"insight-section\">\n        <devtools-performance-checklist class=\"insight-section\" .checklist=${imageData.checklist}></devtools-performance-checklist>\n        <div class=\"insight-section\">${imageRef(imageData.request)}${delayEl}</div>\n      </div>`;\n    // clang-format on\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-lcp-discovery': LCPDiscovery;\n  }\n}\n\ncustomElements.define('devtools-performance-lcp-discovery', LCPDiscovery);\n"]}