{"version":3,"file":"LCPDiscovery.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/LCPDiscovery.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './Checklist.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type {LCPDiscoveryInsightModel} from '../../../../models/trace/insights/LCPDiscovery.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\nimport {imageRef} from './EventRef.js';\n\nconst {UIStrings, i18nString} = Trace.Insights.Models.LCPDiscovery;\n\nconst {html} = Lit;\n\n// eslint-disable-next-line rulesdir/l10n-filename-matches\nconst str_ = i18n.i18n.registerUIStrings('models/trace/insights/LCPDiscovery.ts', UIStrings);\n\ninterface LCPImageDiscoveryData {\n  checklist: Exclude<LCPDiscoveryInsightModel['checklist'], undefined>;\n  request: Trace.Types.Events.SyntheticNetworkRequest;\n  discoveryDelay: Trace.Types.Timing.Micro|null;\n  estimatedSavings: Trace.Types.Timing.Milli|null;\n}\n\nfunction getImageData(model: LCPDiscoveryInsightModel): LCPImageDiscoveryData|null {\n  if (!model.lcpRequest || !model.checklist) {\n    return null;\n  }\n\n  const shouldIncreasePriorityHint = !model.checklist.priorityHinted.value;\n  const shouldPreloadImage = !model.checklist.requestDiscoverable.value;\n  const shouldRemoveLazyLoading = !model.checklist.eagerlyLoaded.value;\n\n  const imageLCP = shouldIncreasePriorityHint !== undefined && shouldPreloadImage !== undefined &&\n      shouldRemoveLazyLoading !== undefined;\n\n  // Shouldn't render anything if lcp insight is null or lcp is text.\n  if (!imageLCP) {\n    return null;\n  }\n\n  const data: LCPImageDiscoveryData = {\n    checklist: model.checklist,\n    request: model.lcpRequest,\n    discoveryDelay: null,\n    estimatedSavings: model.metricSavings?.LCP ?? null,\n  };\n\n  if (model.earliestDiscoveryTimeTs && model.lcpRequest) {\n    const discoveryDelay = model.lcpRequest.ts - model.earliestDiscoveryTimeTs;\n    data.discoveryDelay = Trace.Types.Timing.Micro(discoveryDelay);\n  }\n\n  return data;\n}\n\nexport class LCPDiscovery extends BaseInsightComponent<LCPDiscoveryInsightModel> {\n  static override readonly litTagName = Lit.StaticHtml.literal`devtools-performance-lcp-discovery`;\n  override internalName = 'lcp-discovery';\n\n  #renderDiscoveryDelay(delay: Trace.Types.Timing.Micro): Element {\n    const timeWrapper = document.createElement('span');\n    timeWrapper.classList.add('discovery-time-ms');\n    timeWrapper.innerText = i18n.TimeUtilities.formatMicroSecondsTime(delay);\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.lcpLoadDelay, {PH1: timeWrapper});\n  }\n\n  override createOverlays(): Overlays.Overlays.TimelineOverlay[] {\n    if (!this.model) {\n      return [];\n    }\n\n    const imageResults = getImageData(this.model);\n    if (!imageResults || !imageResults.discoveryDelay) {\n      return [];\n    }\n\n    const delay = Trace.Helpers.Timing.traceWindowFromMicroSeconds(\n        Trace.Types.Timing.Micro(imageResults.request.ts - imageResults.discoveryDelay),\n        imageResults.request.ts,\n    );\n\n    const label = html`<div class=\"discovery-delay\"> ${this.#renderDiscoveryDelay(delay.range)}</div>`;\n\n    return [\n      {\n        type: 'ENTRY_OUTLINE',\n        entry: imageResults.request,\n        outlineReason: 'ERROR',\n      },\n      {\n        type: 'CANDY_STRIPED_TIME_RANGE',\n        bounds: delay,\n        entry: imageResults.request,\n      },\n      {\n        type: 'TIMESPAN_BREAKDOWN',\n        sections: [{\n          bounds: delay,\n          label,\n          showDuration: false,\n        }],\n        entry: imageResults.request,\n        renderLocation: 'ABOVE_EVENT',\n      },\n    ];\n  }\n\n  override getEstimatedSavingsTime(): Trace.Types.Timing.Milli|null {\n    if (!this.model) {\n      return null;\n    }\n\n    return getImageData(this.model)?.estimatedSavings ?? null;\n  }\n\n  override renderContent(): Lit.LitTemplate {\n    if (!this.model) {\n      return Lit.nothing;\n    }\n\n    const imageData = getImageData(this.model);\n    if (!imageData) {\n      if (!this.model.lcpEvent) {\n        return html`<div class=\"insight-section\">${i18nString(UIStrings.noLcp)}</div>`;\n      }\n      return html`<div class=\"insight-section\">${i18nString(UIStrings.noLcpResource)}</div>`;\n    }\n\n    // clang-format off\n    return html`\n      <div class=\"insight-section\">\n        <devtools-performance-checklist class=\"insight-section\" .checklist=${imageData.checklist}></devtools-performance-checklist>\n        <div class=\"insight-section\">${imageRef(imageData.request)}</div>\n      </div>`;\n    // clang-format on\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-lcp-discovery': LCPDiscovery;\n  }\n}\n\ncustomElements.define('devtools-performance-lcp-discovery', LCPDiscovery);\n"]}