{"version":3,"file":"LCPBreakdown.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/timeline/components/insights/LCPBreakdown.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,YAAY,CAAC;AAEpB,OAAO,KAAK,IAAI,MAAM,+BAA+B,CAAC;AAEtD,OAAO,KAAK,KAAK,MAAM,mCAAmC,CAAC;AAC3D,OAAO,KAAK,GAAG,MAAM,2BAA2B,CAAC;AAGjD,OAAO,EAAC,oBAAoB,EAAC,MAAM,2BAA2B,CAAC;AAG/D,MAAM,EAAC,SAAS,EAAE,UAAU,EAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC;AAEnE,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAEnB,MAAM,OAAO,YAAa,SAAQ,oBAA8C;IAC9E,MAAM,CAAmB,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,OAAO,CAAA,oCAAoC,CAAC;IACxF,YAAY,GAAG,cAAc,CAAC;IACvC,QAAQ,GAAgD,IAAI,CAAC;IAE1C,eAAe;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAEkB,cAAc;QAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC7D,OAAO,EAAE,CAAC;QACZ,CAAC;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,CAAC;QAC/C,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,OAAO,EAAE,CAAC;QACZ,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAA2C,CAAC;QACtE,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YACvB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,EAAC,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAC,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;QACpF,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,YAAY,IAAI,CAAC,WAAW,EAAE,CAAC;YACzD,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3G,MAAM,eAAe,GACjB,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACjG,MAAM,kBAAkB,GACpB,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACpG,MAAM,iBAAiB,GACnB,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QAEnG,MAAM,IAAI,GAAG;YACX,EAAC,MAAM,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,UAAU,CAAC,EAAC;YAC7D,EAAC,MAAM,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,eAAe,CAAC,EAAC;YACpE,EAAC,MAAM,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAE,kBAAkB,CAAC,EAAC;YAC1E,EAAC,MAAM,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,iBAAiB,CAAC,EAAC;SACxE,CAAC;QAEF,mBAAmB;QACnB,OAAO,IAAI,CAAA;;;kBAGG;YACN,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;YAC7E,IAAI;SACQ;;;KAGnB,CAAC;QACF,kBAAkB;IACpB,CAAC;IAEQ,uBAAuB,CAC5B,QAA6C,EAAE,OAAoD;QACrG,KAAK,CAAC,uBAAuB,CAAC,QAAQ,EAAE,EAAC,GAAG,OAAO,EAAE,2BAA2B,EAAE,CAAC,EAAC,CAAC,CAAC;IACxF,CAAC;IAEQ,mCAAmC;QAC1C,OAAO,EAAC,iBAAiB,EAAE,IAAI,EAAE,2BAA2B,EAAE,CAAC,EAAC,CAAC;IACnE,CAAC;IAEQ,aAAa;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChB,OAAO,GAAG,CAAC,OAAO,CAAC;QACrB,CAAC;QAED,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAE9B,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,OAAO,IAAI,CAAA,gCAAgC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC;QACjF,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,OAAmD,EAAE,EAAE;YAC/F,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC;YACzF,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAChE,OAAO;gBACL,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;gBACzE,QAAQ,EAAE,OAAO,IAAI,CAAC;wBACV,IAAI,EAAE,oBAAoB;wBAC1B,QAAQ,EAAE,CAAC,OAAO,CAAC;qBACpB,CAAC;aACb,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,mBAAmB;QACnB,MAAM,QAAQ,GAAsB,CAAC,IAAI,CAAA;;;kBAG3B;gBACN,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACxE,IAAI;aACQ;;aAEX;SACR,CAAC;QACF,kBAAkB;QAElB,MAAM,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACrD,IAAI,gBAAgB,EAAE,CAAC;YACrB,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClC,CAAC;QAED,OAAO,IAAI,CAAA,GAAG,QAAQ,EAAE,CAAC;IAC3B,CAAC;;AASH,cAAc,CAAC,MAAM,CAAC,oCAAoC,EAAE,YAAY,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './Table.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type {LCPBreakdownInsightModel} from '../../../../models/trace/insights/LCPBreakdown.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nimport {BaseInsightComponent} from './BaseInsightComponent.js';\nimport type {TableData} from './Table.js';\n\nconst {UIStrings, i18nString} = Trace.Insights.Models.LCPBreakdown;\n\nconst {html} = Lit;\n\nexport class LCPBreakdown extends BaseInsightComponent<LCPBreakdownInsightModel> {\n  static override readonly litTagName = Lit.StaticHtml.literal`devtools-performance-lcp-breakdown`;\n  override internalName = 'lcp-by-phase';\n  #overlay: Trace.Types.Overlays.TimespanBreakdown|null = null;\n\n  protected override hasAskAiSupport(): boolean {\n    return true;\n  }\n\n  protected override createOverlays(): Trace.Types.Overlays.Overlay[] {\n    this.#overlay = null;\n\n    if (!this.model || !this.model.subparts || !this.model.lcpTs) {\n      return [];\n    }\n\n    const overlays = this.model.createOverlays?.();\n    if (!overlays) {\n      return [];\n    }\n\n    this.#overlay = overlays[0] as Trace.Types.Overlays.TimespanBreakdown;\n    return overlays;\n  }\n\n  #renderFieldSubparts(): Lit.LitTemplate|null {\n    if (!this.fieldMetrics) {\n      return null;\n    }\n\n    const {ttfb, loadDelay, loadDuration, renderDelay} = this.fieldMetrics.lcpBreakdown;\n    if (!ttfb || !loadDelay || !loadDuration || !renderDelay) {\n      return null;\n    }\n\n    const ttfbMillis = i18n.TimeUtilities.preciseMillisToString(Trace.Helpers.Timing.microToMilli(ttfb.value));\n    const loadDelayMillis =\n        i18n.TimeUtilities.preciseMillisToString(Trace.Helpers.Timing.microToMilli(loadDelay.value));\n    const loadDurationMillis =\n        i18n.TimeUtilities.preciseMillisToString(Trace.Helpers.Timing.microToMilli(loadDuration.value));\n    const renderDelayMillis =\n        i18n.TimeUtilities.preciseMillisToString(Trace.Helpers.Timing.microToMilli(renderDelay.value));\n\n    const rows = [\n      {values: [i18nString(UIStrings.timeToFirstByte), ttfbMillis]},\n      {values: [i18nString(UIStrings.resourceLoadDelay), loadDelayMillis]},\n      {values: [i18nString(UIStrings.resourceLoadDuration), loadDurationMillis]},\n      {values: [i18nString(UIStrings.elementRenderDelay), renderDelayMillis]},\n    ];\n\n    // clang-format off\n    return html`\n      <div class=\"insight-section\">\n        <devtools-performance-table\n          .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.subpart), i18nString(UIStrings.fieldDuration)],\n            rows,\n          } as TableData}>\n        </devtools-performance-table>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  override toggleTemporaryOverlays(\n      overlays: Trace.Types.Overlays.Overlay[]|null, options: Overlays.Overlays.TimelineOverlaySetOptions): void {\n    super.toggleTemporaryOverlays(overlays, {...options, updateTraceWindowPercentage: 0});\n  }\n\n  override getOverlayOptionsForInitialOverlays(): Overlays.Overlays.TimelineOverlaySetOptions {\n    return {updateTraceWindow: true, updateTraceWindowPercentage: 0};\n  }\n\n  override renderContent(): Lit.LitTemplate {\n    if (!this.model) {\n      return Lit.nothing;\n    }\n\n    const {subparts} = this.model;\n\n    if (!subparts) {\n      return html`<div class=\"insight-section\">${i18nString(UIStrings.noLcp)}</div>`;\n    }\n\n    const rows = Object.values(subparts).map((subpart: Trace.Insights.Models.LCPBreakdown.Subpart) => {\n      const section = this.#overlay?.sections.find(section => subpart.label === section.label);\n      const timing = Trace.Helpers.Timing.microToMilli(subpart.range);\n      return {\n        values: [subpart.label, i18n.TimeUtilities.preciseMillisToString(timing)],\n        overlays: section && [{\n                    type: 'TIMESPAN_BREAKDOWN',\n                    sections: [section],\n                  }],\n      };\n    });\n\n    // clang-format off\n    const sections: Lit.LitTemplate[] = [html`\n      <div class=\"insight-section\">\n        <devtools-performance-table\n          .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.subpart), i18nString(UIStrings.duration)],\n            rows,\n          } as TableData}>\n        </devtools-performance-table>\n      </div>`\n    ];\n    // clang-format on\n\n    const fieldDataSection = this.#renderFieldSubparts();\n    if (fieldDataSection) {\n      sections.push(fieldDataSection);\n    }\n\n    return html`${sections}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-lcp-breakdown': LCPBreakdown;\n  }\n}\n\ncustomElements.define('devtools-performance-lcp-breakdown', LCPBreakdown);\n"]}