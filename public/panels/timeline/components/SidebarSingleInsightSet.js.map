{"version":3,"file":"SidebarSingleInsightSet.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/SidebarSingleInsightSet.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport {md} from '../utils/Helpers.js';\n\nimport {shouldRenderForCategory} from './insights/Helpers.js';\nimport * as Insights from './insights/insights.js';\nimport type {ActiveInsight} from './Sidebar.js';\nimport stylesRaw from './sidebarSingleInsightSet.css.js';\nimport {determineCompareRating, NumberWithUnit} from './Utils.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(stylesRaw.cssContent);\n\nconst {html} = Lit.StaticHtml;\n\nconst UIStrings = {\n  /**\n   *@description title used for a metric value to tell the user about its score classification\n   *@example {INP} PH1\n   *@example {1.2s} PH2\n   *@example {poor} PH3\n   */\n  metricScore: '{PH1}: {PH2} {PH3} score',\n  /**\n   *@description title used for a metric value to tell the user that the data is unavailable\n   *@example {INP} PH1\n   */\n  metricScoreUnavailable: '{PH1}: unavailable',\n  /**\n   * @description Summary text for an expandable dropdown that contains all insights in a passing state.\n   * @example {4} PH1\n   */\n  passedInsights: 'Passed insights ({PH1})',\n  /**\n   * @description Label denoting that metrics were observed in the field, from real use data (CrUX). Also denotes if from URL or Origin dataset.\n   * @example {URL} PH1\n   */\n  fieldScoreLabel: 'Field ({PH1})',\n  /**\n   * @description Label for an option that selects the page's specific URL as opposed to it's entire origin/domain.\n   */\n  urlOption: 'URL',\n  /**\n   * @description Label for an option that selects the page's entire origin/domain as opposed to it's specific URL.\n   */\n  originOption: 'Origin',\n  /**\n   * @description Title for button that closes a warning popup.\n   */\n  dismissTitle: 'Dismiss',\n  /**\n   * @description Title shown in a warning dialog when field metrics (collected from real users) is worse than the locally observed metrics.\n   */\n  fieldMismatchTitle: 'Field & local metrics mismatch',\n  /**\n   * @description Text shown in a warning dialog when field metrics (collected from real users) is worse than the locally observed metrics.\n   * Asks user to use features such as throttling and device emulation.\n   */\n  fieldMismatchNotice:\n      'There are many reasons why local and field metrics [may not match](https://web.dev/articles/lab-and-field-data-differences). ' +\n      'Adjust [throttling settings and device emulation](https://developer.chrome.com/docs/devtools/device-mode) to analyze traces more similar to the average user\\'s environment.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/SidebarSingleInsightSet.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface SidebarSingleInsightSetData {\n  insights: Trace.Insights.Types.TraceInsightSets|null;\n  insightSetKey: Trace.Types.Events.NavigationId|null;\n  activeCategory: Trace.Insights.Types.InsightCategory;\n  activeInsight: ActiveInsight|null;\n  parsedTrace: Trace.Handlers.Types.ParsedTrace|null;\n  traceMetadata: Trace.Types.File.MetaData|null;\n}\n\n/**\n * These are WIP Insights that are only shown if the user has turned on the\n * \"enable experimental performance insights\" experiment. This is used to enable\n * us to ship incrementally without turning insights on by default for all\n * users. */\nconst EXPERIMENTAL_INSIGHTS: ReadonlySet<string> = new Set([\n]);\n\ntype InsightNameToComponentMapping =\n    Record<string, typeof Insights.BaseInsightComponent.BaseInsightComponent<Trace.Insights.Types.InsightModel>>;\n\n/**\n * Every insight (INCLUDING experimental ones).\n *\n * Order does not matter (but keep alphabetized).\n */\nconst INSIGHT_NAME_TO_COMPONENT: InsightNameToComponentMapping = {\n  CLSCulprits: Insights.CLSCulprits.CLSCulprits,\n  DOMSize: Insights.DOMSize.DOMSize,\n  DocumentLatency: Insights.DocumentLatency.DocumentLatency,\n  FontDisplay: Insights.FontDisplay.FontDisplay,\n  ImageDelivery: Insights.ImageDelivery.ImageDelivery,\n  InteractionToNextPaint: Insights.InteractionToNextPaint.InteractionToNextPaint,\n  LCPDiscovery: Insights.LCPDiscovery.LCPDiscovery,\n  LCPPhases: Insights.LCPPhases.LCPPhases,\n  NetworkDependencyTree: Insights.NetworkDependencyTree.NetworkDependencyTree,\n  RenderBlocking: Insights.RenderBlocking.RenderBlocking,\n  SlowCSSSelector: Insights.SlowCSSSelector.SlowCSSSelector,\n  ThirdParties: Insights.ThirdParties.ThirdParties,\n  ForcedReflow: Insights.ForcedReflow.ForcedReflow,\n  Viewport: Insights.Viewport.Viewport,\n};\n\nexport class SidebarSingleInsightSet extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #renderBound = this.#render.bind(this);\n\n  #data: SidebarSingleInsightSetData = {\n    insights: null,\n    insightSetKey: null,\n    activeCategory: Trace.Insights.Types.InsightCategory.ALL,\n    activeInsight: null,\n    parsedTrace: null,\n    traceMetadata: null,\n  };\n\n  #dismissedFieldMismatchNotice = false;\n\n  set data(data: SidebarSingleInsightSetData) {\n    this.#data = data;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [styles];\n    this.#render();\n  }\n\n  #metricIsVisible(label: 'LCP'|'CLS'|'INP'): boolean {\n    if (this.#data.activeCategory === Trace.Insights.Types.InsightCategory.ALL) {\n      return true;\n    }\n    return label === this.#data.activeCategory;\n  }\n\n  #onClickMetric(traceEvent: Trace.Types.Events.Event): void {\n    this.dispatchEvent(new Insights.EventRef.EventReferenceClick(traceEvent));\n  }\n\n  #renderMetricValue(metric: 'LCP'|'CLS'|'INP', value: number|null, relevantEvent: Trace.Types.Events.Event|null):\n      Lit.LitTemplate {\n    let valueText: string;\n    let valueDisplay: HTMLElement|string;\n    let classification;\n    if (value === null) {\n      valueText = valueDisplay = '-';\n      classification = Trace.Handlers.ModelHandlers.PageLoadMetrics.ScoreClassification.UNCLASSIFIED;\n    } else if (metric === 'LCP') {\n      const micros = value as Trace.Types.Timing.Micro;\n      const {text, element} = NumberWithUnit.formatMicroSecondsAsSeconds(micros);\n      valueText = text;\n      valueDisplay = element;\n      classification =\n          Trace.Handlers.ModelHandlers.PageLoadMetrics.scoreClassificationForLargestContentfulPaint(micros);\n    } else if (metric === 'CLS') {\n      valueText = valueDisplay = value ? value.toFixed(2) : '0';\n      classification = Trace.Handlers.ModelHandlers.LayoutShifts.scoreClassificationForLayoutShift(value);\n    } else if (metric === 'INP') {\n      const micros = value as Trace.Types.Timing.Micro;\n      const {text, element} = NumberWithUnit.formatMicroSecondsAsMillisFixed(micros);\n      valueText = text;\n      valueDisplay = element;\n      classification =\n          Trace.Handlers.ModelHandlers.UserInteractions.scoreClassificationForInteractionToNextPaint(micros);\n    } else {\n      Platform.TypeScriptUtilities.assertNever(metric, `Unexpected metric ${metric}`);\n    }\n\n    // NOTE: it is deliberate to use the same value for the title and\n    // aria-label; the aria-label is used to give more context to\n    // screen-readers, and the title is to aid users who may not know what\n    // the red/orange/green classification is, or those who are unable to\n    // easily distinguish the visual colour differences.\n    // clang-format off\n    const title = value !== null ?\n      i18nString(UIStrings.metricScore, {PH1: metric, PH2: valueText, PH3: classification}) :\n      i18nString(UIStrings.metricScoreUnavailable, {PH1: metric});\n\n    return this.#metricIsVisible(metric) ? html`\n      <button class=\"metric\"\n        @click=${relevantEvent ? this.#onClickMetric.bind(this, relevantEvent) : null}\n        title=${title}\n        aria-label=${title}\n      >\n        <div class=\"metric-value metric-value-${classification}\">${valueDisplay}</div>\n      </button>\n    ` : Lit.nothing;\n    // clang-format on\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  #getLocalMetrics(insightSetKey: string) {\n    const lcp = Trace.Insights.Common.getLCP(this.#data.insights, insightSetKey);\n    const cls = Trace.Insights.Common.getCLS(this.#data.insights, insightSetKey);\n    const inp = Trace.Insights.Common.getINP(this.#data.insights, insightSetKey);\n\n    return {lcp, cls, inp};\n  }\n\n  #getFieldMetrics(insightSetKey: string): Trace.Insights.Common.CrUXFieldMetricResults|null {\n    const insightSet = this.#data.insights?.get(insightSetKey);\n    if (!insightSet) {\n      return null;\n    }\n\n    const fieldMetricsResults = Trace.Insights.Common.getFieldMetricsForInsightSet(\n        insightSet, this.#data.traceMetadata, CrUXManager.CrUXManager.instance().getSelectedScope());\n    if (!fieldMetricsResults) {\n      return null;\n    }\n\n    return fieldMetricsResults;\n  }\n\n  /**\n   * Returns true if LCP or INP are worse in the field than what was observed locally.\n   *\n   * CLS is ignored because the guidance of applying throttling or device emulation doesn't\n   * correlate as much with observing a more average user experience.\n   */\n  #isFieldWorseThanLocal(local: {lcp?: Trace.Types.Timing.Milli, inp?: Trace.Types.Timing.Milli}, field: {\n    lcp?: Trace.Types.Timing.Milli,\n    inp?: Trace.Types.Timing.Milli,\n  }): boolean {\n    if (local.lcp !== undefined && field.lcp !== undefined) {\n      if (determineCompareRating('LCP', local.lcp, field.lcp) === 'better') {\n        return true;\n      }\n    }\n\n    if (local.inp !== undefined && field.inp !== undefined) {\n      if (determineCompareRating('LCP', local.inp, field.inp) === 'better') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  #dismissFieldMismatchNotice(): void {\n    this.#dismissedFieldMismatchNotice = true;\n    this.#render();\n  }\n\n  #renderMetrics(insightSetKey: string): Lit.TemplateResult {\n    const local = this.#getLocalMetrics(insightSetKey);\n    const field = this.#getFieldMetrics(insightSetKey);\n\n    const lcpEl = this.#renderMetricValue('LCP', local.lcp?.value ?? null, local.lcp?.event ?? null);\n    const inpEl = this.#renderMetricValue('INP', local.inp?.value ?? null, local.inp?.event ?? null);\n    const clsEl = this.#renderMetricValue('CLS', local.cls.value ?? null, local.cls?.worstClusterEvent ?? null);\n\n    const localMetricsTemplateResult = html`\n      <div class=\"metrics-row\">\n        <span>${lcpEl}</span>\n        <span>${inpEl}</span>\n        <span>${clsEl}</span>\n        <span class=\"row-label\">Local</span>\n      </div>\n      <span class=\"row-border\"></span>\n    `;\n\n    let fieldMetricsTemplateResult;\n    if (field) {\n      const {lcp, inp, cls} = field;\n\n      const lcpEl = this.#renderMetricValue('LCP', lcp?.value ?? null, null);\n      const inpEl = this.#renderMetricValue('INP', inp?.value ?? null, null);\n      const clsEl = this.#renderMetricValue('CLS', cls?.value ?? null, null);\n\n      let scope = i18nString(UIStrings.originOption);\n      if (lcp?.pageScope === 'url' || inp?.pageScope === 'url') {\n        scope = i18nString(UIStrings.urlOption);\n      }\n\n      // clang-format off\n      fieldMetricsTemplateResult = html`\n        <div class=\"metrics-row\">\n          <span>${lcpEl}</span>\n          <span>${inpEl}</span>\n          <span>${clsEl}</span>\n          <span class=\"row-label\">${i18nString(UIStrings.fieldScoreLabel, {PH1: scope})}</span>\n        </div>\n        <span class=\"row-border\"></span>\n      `;\n      // clang-format on\n    }\n\n    const localValues = {\n      lcp: local.lcp?.value !== undefined ? Trace.Helpers.Timing.microToMilli(local.lcp.value) : undefined,\n      inp: local.inp?.value !== undefined ? Trace.Helpers.Timing.microToMilli(local.inp.value) : undefined,\n    };\n    const fieldValues = field && {\n      lcp: field.lcp?.value !== undefined ? Trace.Helpers.Timing.microToMilli(field.lcp.value) : undefined,\n      inp: field.inp?.value !== undefined ? Trace.Helpers.Timing.microToMilli(field.inp.value) : undefined,\n    };\n\n    let fieldIsDifferentEl;\n    if (!this.#dismissedFieldMismatchNotice && fieldValues && this.#isFieldWorseThanLocal(localValues, fieldValues)) {\n      // clang-format off\n      fieldIsDifferentEl = html`\n        <div class=\"field-mismatch-notice\" jslog=${VisualLogging.section('timeline.insights.field-mismatch')}>\n          <h3>${i18nString(UIStrings.fieldMismatchTitle)}</h3>\n          <devtools-button\n            title=${i18nString(UIStrings.dismissTitle)}\n            .iconName=${'cross'}\n            .variant=${Buttons.Button.Variant.ICON}\n            .jslogContext=${'timeline.insights.dismiss-field-mismatch'}\n            @click=${this.#dismissFieldMismatchNotice}\n          ></devtools-button>\n          <div class=\"field-mismatch-notice__body\">${md(i18nString(UIStrings.fieldMismatchNotice))}</div>\n        </div>\n      `;\n      // clang-format on\n    }\n\n    const classes = {metrics: true, 'metrics--field': Boolean(fieldMetricsTemplateResult)};\n    const metricsTableEl = html`<div class=${Lit.Directives.classMap(classes)}>\n      <div class=\"metrics-row\">\n        <span class=\"metric-label\">LCP</span>\n        <span class=\"metric-label\">INP</span>\n        <span class=\"metric-label\">CLS</span>\n        <span class=\"row-label\"></span>\n      </div>\n      ${localMetricsTemplateResult}\n      ${fieldMetricsTemplateResult}\n    </div>`;\n\n    return html`\n      ${metricsTableEl}\n      ${fieldIsDifferentEl}\n    `;\n  }\n\n  #renderInsights(\n      insightSets: Trace.Insights.Types.TraceInsightSets|null,\n      insightSetKey: string,\n      ): Lit.LitTemplate {\n    const includeExperimental = Root.Runtime.experiments.isEnabled(\n        Root.Runtime.ExperimentName.TIMELINE_EXPERIMENTAL_INSIGHTS,\n    );\n\n    const insightSet = insightSets?.get(insightSetKey);\n    if (!insightSet) {\n      return Lit.nothing;\n    }\n\n    const models = insightSet.model;\n    const shownInsights: Lit.TemplateResult[] = [];\n    const passedInsights: Lit.TemplateResult[] = [];\n    for (const [name, model] of Object.entries(models)) {\n      const componentClass = INSIGHT_NAME_TO_COMPONENT[name as keyof Trace.Insights.Types.InsightModels];\n      if (!componentClass) {\n        continue;\n      }\n\n      if (!includeExperimental && EXPERIMENTAL_INSIGHTS.has(name)) {\n        continue;\n      }\n\n      if (!model ||\n          !shouldRenderForCategory({activeCategory: this.#data.activeCategory, insightCategory: model.category})) {\n        continue;\n      }\n\n      const fieldMetrics = this.#getFieldMetrics(insightSetKey);\n\n      // clang-format off\n      const component = html`<div>\n        <${componentClass.litTagName}\n          .selected=${this.#data.activeInsight?.model === model}\n          .model=${model}\n          .bounds=${insightSet.bounds}\n          .insightSetKey=${insightSetKey}\n          .parsedTrace=${this.#data.parsedTrace}\n          .fieldMetrics=${fieldMetrics}>\n        </${componentClass.litTagName}>\n      </div>`;\n      // clang-format on\n\n      if (model.state === 'pass') {\n        passedInsights.push(component);\n      } else {\n        shownInsights.push(component);\n      }\n    }\n\n    // clang-format off\n    return html`\n      ${shownInsights}\n      ${passedInsights.length ? html`\n        <details class=\"passed-insights-section\">\n          <summary>${i18nString(UIStrings.passedInsights, {\n            PH1: passedInsights.length,\n          })}</summary>\n          ${passedInsights}\n        </details>\n      ` : Lit.nothing}\n    `;\n    // clang-format on\n  }\n\n  #render(): void {\n    const {\n      insights,\n      insightSetKey,\n    } = this.#data;\n    if (!insights || !insightSetKey) {\n      Lit.render(html``, this.#shadow, {host: this});\n      return;\n    }\n\n    // clang-format off\n    Lit.render(html`\n      <div class=\"navigation\">\n        ${this.#renderMetrics(insightSetKey)}\n        ${this.#renderInsights(insights, insightSetKey)}\n        </div>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-sidebar-single-navigation': SidebarSingleInsightSet;\n  }\n}\n\ncustomElements.define('devtools-performance-sidebar-single-navigation', SidebarSingleInsightSet);\n"]}