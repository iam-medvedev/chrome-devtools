{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/timeline/components/Breadcrumbs.ts", "../../../../../../../front_end/panels/timeline/components/BreadcrumbsUI.ts", "breadcrumbsUI.css.js", "../../../../../../../front_end/panels/timeline/components/CPUThrottlingSelector.ts", "cpuThrottlingSelector.css.js", "../../../../../../../front_end/panels/timeline/components/DetailsView.ts", "../../../../../../../front_end/panels/timeline/components/FieldSettingsDialog.ts", "../../../../../../../front_end/panels/timeline/components/OriginMap.ts", "originMap.css.js", "fieldSettingsDialog.css.js", "../../../../../../../front_end/panels/timeline/components/IgnoreListSetting.ts", "ignoreListSetting.css.js", "../../../../../../../front_end/panels/timeline/components/InteractionBreakdown.ts", "interactionBreakdown.css.js", "../../../../../../../front_end/panels/timeline/components/LayoutShiftDetails.ts", "layoutShiftDetails.css.js", "../../../../../../../front_end/panels/timeline/components/LiveMetricsView.ts", "../../../../../../../front_end/panels/timeline/components/NetworkThrottlingSelector.ts", "networkThrottlingSelector.css.js", "../../../../../../../front_end/panels/timeline/components/MetricCard.ts", "metricCard.css.js", "../../../../../../../front_end/panels/timeline/components/MetricCompareStrings.ts", "metricValueStyles.css.js", "../../../../../../../front_end/panels/timeline/components/Utils.ts", "../../../../../../../front_end/panels/timeline/utils/Helpers.ts", "liveMetricsView.css.js", "../../../../../../../front_end/panels/timeline/components/NetworkRequestDetails.ts", "networkRequestDetails.css.js", "networkRequestTooltip.css.js", "../../../../../../../front_end/panels/timeline/components/NetworkRequestTooltip.ts", "../../../../../../../front_end/panels/timeline/components/RelatedInsightChips.ts", "relatedInsightChips.css.js", "../../../../../../../front_end/panels/timeline/components/Sidebar.ts", "../../../../../../../front_end/panels/timeline/components/insights/SidebarInsight.ts", "../../../../../../../front_end/panels/timeline/components/SidebarAnnotationsTab.ts", "sidebarAnnotationsTab.css.js", "../../../../../../../front_end/panels/timeline/components/SidebarInsightsTab.ts", "../../../../../../../front_end/panels/timeline/components/SidebarSingleInsightSet.ts", "../../../../../../../front_end/panels/timeline/components/insights/Helpers.ts", "sidebarSingleInsightSet.css.js", "sidebarInsightsTab.css.js", "../../../../../../../front_end/panels/timeline/components/TimelineSummary.ts", "timelineSummary.css.js"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as TraceBounds from '../../../services/trace_bounds/trace_bounds.js';\n\nexport function flattenBreadcrumbs(initialBreadcrumb: Trace.Types.File.Breadcrumb): Trace.Types.File.Breadcrumb[] {\n  const allBreadcrumbs: Trace.Types.File.Breadcrumb[] = [initialBreadcrumb];\n  let breadcrumbsIter: Trace.Types.File.Breadcrumb = initialBreadcrumb;\n\n  while (breadcrumbsIter.child !== null) {\n    const iterChild = breadcrumbsIter.child;\n    if (iterChild !== null) {\n      allBreadcrumbs.push(iterChild);\n      breadcrumbsIter = iterChild;\n    }\n  }\n\n  return allBreadcrumbs;\n}\n\nexport interface SetActiveBreadcrumbOptions {\n  removeChildBreadcrumbs: boolean;\n  updateVisibleWindow: boolean;\n}\n\nexport class Breadcrumbs {\n  initialBreadcrumb: Trace.Types.File.Breadcrumb;\n  activeBreadcrumb: Trace.Types.File.Breadcrumb;\n\n  constructor(initialTraceWindow: Trace.Types.Timing.TraceWindowMicro) {\n    this.initialBreadcrumb = {\n      window: initialTraceWindow,\n      child: null,\n    };\n    let lastBreadcrumb = this.initialBreadcrumb;\n    while (lastBreadcrumb.child !== null) {\n      lastBreadcrumb = lastBreadcrumb.child;\n    }\n    this.activeBreadcrumb = lastBreadcrumb;\n  }\n\n  add(newBreadcrumbTraceWindow: Trace.Types.Timing.TraceWindowMicro): Trace.Types.File.Breadcrumb {\n    if (!this.isTraceWindowWithinTraceWindow(newBreadcrumbTraceWindow, this.activeBreadcrumb.window)) {\n      throw new Error('Can not add a breadcrumb that is equal to or is outside of the parent breadcrumb TimeWindow');\n    }\n\n    const newBreadcrumb = {\n      window: newBreadcrumbTraceWindow,\n      child: null,\n    };\n    // To add a new Breadcrumb to the Breadcrumbs Linked List, set the child of active breadcrumb\n    // to the new breadcrumb and update the active Breadcrumb to the newly added one\n    this.activeBreadcrumb.child = newBreadcrumb;\n    this.setActiveBreadcrumb(newBreadcrumb, {removeChildBreadcrumbs: false, updateVisibleWindow: true});\n    return newBreadcrumb;\n  }\n\n  // Breadcumb should be within the bounds of the parent and can not have both start and end be equal to the parent\n  isTraceWindowWithinTraceWindow(\n      child: Trace.Types.Timing.TraceWindowMicro, parent: Trace.Types.Timing.TraceWindowMicro): boolean {\n    return (child.min >= parent.min && child.max <= parent.max) &&\n        !(child.min === parent.min && child.max === parent.max);\n  }\n\n  // Used to set an initial breadcrumbs from modifications loaded from a file\n  setInitialBreadcrumbFromLoadedModifications(initialBreadcrumb: Trace.Types.File.Breadcrumb): void {\n    this.initialBreadcrumb = initialBreadcrumb;\n    // Make last breadcrumb active\n    let lastBreadcrumb = initialBreadcrumb;\n    while (lastBreadcrumb.child !== null) {\n      lastBreadcrumb = lastBreadcrumb.child;\n    }\n    this.setActiveBreadcrumb(lastBreadcrumb, {removeChildBreadcrumbs: false, updateVisibleWindow: true});\n  }\n\n  /**\n   * Sets a breadcrumb to be active.\n   * Doing this will update the minimap bounds and optionally based on the\n   * `updateVisibleWindow` parameter, it will also update the active window.\n   * The reason `updateVisibleWindow` is configurable is because if we are\n   * changing which breadcrumb is active because we want to reveal something to\n   * the user, we may have already updated the visible timeline window, but we\n   * are activating the breadcrumb to show the user that they are now within\n   * this breadcrumb. This is used when revealing insights and annotations.\n   */\n  setActiveBreadcrumb(activeBreadcrumb: Trace.Types.File.Breadcrumb, options: SetActiveBreadcrumbOptions): void {\n    // If the children of the activated breadcrumb need to be removed, set the child on the\n    // activated breadcrumb to null. Since breadcrumbs are a linked list, this will remove all\n    // of the following children.\n    if (options.removeChildBreadcrumbs) {\n      activeBreadcrumb.child = null;\n    }\n\n    // When we assign a new active breadcrumb, both the minimap bounds and the visible\n    // window get set to that breadcrumb's window.\n    this.activeBreadcrumb = activeBreadcrumb;\n    TraceBounds.TraceBounds.BoundsManager.instance().setMiniMapBounds(\n        activeBreadcrumb.window,\n    );\n\n    if (options.updateVisibleWindow) {\n      TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(\n          activeBreadcrumb.window,\n      );\n    }\n  }\n}\n", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport {flattenBreadcrumbs} from './Breadcrumbs.js';\nimport breadcrumbsUIStyles from './breadcrumbsUI.css.js';\n\nconst {render, html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description A context menu item in the Minimap Breadcrumb context menu.\n   * This context menu option activates the breadcrumb that the context menu was opened on.\n   */\n  activateBreadcrumb: 'Activate breadcrumb',\n  /**\n   *@description A context menu item in the Minimap Breadcrumb context menu.\n   * This context menu option removed all the child breadcrumbs and activates\n   * the breadcrumb that the context menu was opened on.\n   */\n  removeChildBreadcrumbs: 'Remove child breadcrumbs',\n\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/BreadcrumbsUI.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// `initialBreadcrumb` is the first breadcrumb in the breadcrumbs linked list. Since\n// breadcrumbs are a linked list, the first breadcrumb is enought to be able to iterate through all of them.\n//\n// `activeBreadcrumb` is the currently active breadcrumb that the timeline is limited to.\nexport interface BreadcrumbsUIData {\n  initialBreadcrumb: Trace.Types.File.Breadcrumb;\n  activeBreadcrumb: Trace.Types.File.Breadcrumb;\n}\n\nexport class BreadcrumbActivatedEvent extends Event {\n  static readonly eventName = 'breadcrumbactivated';\n\n  constructor(public breadcrumb: Trace.Types.File.Breadcrumb, public childBreadcrumbsRemoved?: boolean) {\n    super(BreadcrumbActivatedEvent.eventName);\n  }\n}\n\nexport class BreadcrumbsUI extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #initialBreadcrumb: Trace.Types.File.Breadcrumb|null = null;\n  #activeBreadcrumb: Trace.Types.File.Breadcrumb|null = null;\n\n  set data(data: BreadcrumbsUIData) {\n    this.#initialBreadcrumb = data.initialBreadcrumb;\n    this.#activeBreadcrumb = data.activeBreadcrumb;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #activateBreadcrumb(breadcrumb: Trace.Types.File.Breadcrumb): void {\n    this.#activeBreadcrumb = breadcrumb;\n    this.dispatchEvent(new BreadcrumbActivatedEvent(breadcrumb));\n  }\n\n  #showBreadcrumbsAndScrollLastCrumbIntoView(): void {\n    const container = this.#shadow.querySelector<HTMLDivElement>('.breadcrumbs');\n    if (!container) {\n      return;\n    }\n    // Display Breadcrumbs after at least one was created\n    container.style.display = 'flex';\n    requestAnimationFrame(() => {\n      // If the width of all the elements is greater than the width of the\n      // container, we need to scroll the last element into view.\n      if (container.scrollWidth - container.clientWidth > 0) {\n        requestAnimationFrame(() => {\n          // For some unknown reason, if we scroll after one rAF, the values\n          // are slightly off by a few pixels which means that the element does\n          // not get properly scrolled fully into view. Therefore we wait for a\n          // second rAF, at which point the values are correct and this will\n          // scroll the container fully to ensure the last breadcrumb is fully\n          // visible.\n          container.scrollLeft = container.scrollWidth - container.clientWidth;\n        });\n      }\n    });\n  }\n\n  #onContextMenu(event: Event, breadcrumb: Trace.Types.File.Breadcrumb): void {\n    const menu = new UI.ContextMenu.ContextMenu(event);\n\n    menu.defaultSection().appendItem(i18nString(UIStrings.activateBreadcrumb), () => {\n      this.dispatchEvent(new BreadcrumbActivatedEvent(breadcrumb));\n    });\n\n    menu.defaultSection().appendItem(i18nString(UIStrings.removeChildBreadcrumbs), () => {\n      this.dispatchEvent(new BreadcrumbActivatedEvent(breadcrumb, true));\n    });\n\n    void menu.show();\n  }\n\n  #renderElement(breadcrumb: Trace.Types.File.Breadcrumb, index: number): Lit.LitTemplate {\n    const breadcrumbRange = Trace.Helpers.Timing.microToMilli(breadcrumb.window.range);\n    // clang-format off\n    return html`\n          <div class=\"breadcrumb\" @contextmenu=${(event: Event) => this.#onContextMenu(event, breadcrumb)} @click=${() => this.#activateBreadcrumb(breadcrumb)}\n          jslog=${VisualLogging.item('timeline.breadcrumb-select').track({click: true})}>\n           <span class=\"${(breadcrumb === this.#activeBreadcrumb) ? 'active-breadcrumb' : ''} range\">\n            ${(index === 0) ?\n              `Full range (${i18n.TimeUtilities.preciseMillisToString(breadcrumbRange, 2)})` :\n              `${i18n.TimeUtilities.preciseMillisToString(breadcrumbRange, 2)}`}\n            </span>\n          </div>\n          ${breadcrumb.child !== null ?\n            html`\n            <devtools-icon .data=${{\n              iconName: 'chevron-right',\n              color: 'var(--icon-default)',\n              width: '16px',\n              height: '16px',\n            }}>`\n            : ''}\n      `;\n              // clang-format on\n  }\n\n  #render(): void {\n    // clang-format off\n    const output = html`\n      <style>${breadcrumbsUIStyles}</style>\n      ${this.#initialBreadcrumb === null ? Lit.nothing : html`<div class=\"breadcrumbs\" jslog=${VisualLogging.section('breadcrumbs')}>\n        ${flattenBreadcrumbs(this.#initialBreadcrumb).map((breadcrumb, index) => this.#renderElement(breadcrumb, index))}\n      </div>`}\n    `;\n    // clang-format on\n    render(output, this.#shadow, {host: this});\n    if (this.#initialBreadcrumb?.child) {\n      // If we have >1 crumbs show breadcrumbs and ensure the last one is visible by scrolling the container.\n      this.#showBreadcrumbsAndScrollLastCrumbIntoView();\n    }\n  }\n}\n\ncustomElements.define('devtools-breadcrumbs-ui', BreadcrumbsUI);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-breadcrumbs-ui': BreadcrumbsUI;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.breadcrumbs {\n  display: none;\n  align-items: center;\n  height: 29px;\n  padding: 3px;\n  overflow: scroll hidden;\n}\n\n.breadcrumbs::-webkit-scrollbar {\n  display: none;\n}\n\n.breadcrumb {\n  padding: 2px 6px;\n  border-radius: 4px;\n}\n\n.breadcrumb:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.range {\n  font-size: 12px;\n  white-space: nowrap;\n}\n\n.active-breadcrumb {\n  font-weight: bold;\n  color: var(--app-color-active-breadcrumb);\n}\n\n/*# sourceURL=${import.meta.resolve('./breadcrumbsUI.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/icon_button/icon_button.js';\nimport '../../../ui/components/menus/menus.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport type * as Menus from '../../../ui/components/menus/menus.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../../mobile_throttling/mobile_throttling.js';\n\nimport cpuThrottlingSelectorStyles from './cpuThrottlingSelector.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text label for a selection box showing which CPU throttling option is applied.\n   * @example {No throttling} PH1\n   */\n  cpu: 'CPU: {PH1}',\n  /**\n   * @description Text label for a selection box showing which CPU throttling option is applied.\n   * @example {No throttling} PH1\n   */\n  cpuThrottling: 'CPU throttling: {PH1}',\n  /**\n   * @description Text label for a selection box showing that a specific option is recommended.\n   * @example {4x slowdown} PH1\n   */\n  recommendedThrottling: '{PH1} – recommended',\n  /**\n   * @description Text for why user should change a throttling setting.\n   */\n  recommendedThrottlingReason: 'Consider changing setting to simulate real user environments',\n  /**\n   * @description Text to prompt the user to run the CPU calibration process.\n   */\n  calibrate: 'Calibrate…',\n  /**\n   * @description Text to prompt the user to re-run the CPU calibration process.\n   */\n  recalibrate: 'Recalibrate…',\n  /**\n   * @description Label shown above a list of CPU calibration preset options.\n   */\n  labelCalibratedPresets: 'Calibrated presets',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/CPUThrottlingSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface CPUThrottlingGroup {\n  name: string;\n  items: SDK.CPUThrottlingManager.CPUThrottlingOption[];\n  showCustomAddOption?: boolean;\n}\n\nexport class CPUThrottlingSelector extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #currentOption: SDK.CPUThrottlingManager.CPUThrottlingOption;\n  #recommendedOption: SDK.CPUThrottlingManager.CPUThrottlingOption|null = null;\n  #groups: CPUThrottlingGroup[] = [];\n  #calibratedThrottlingSetting: Common.Settings.Setting<SDK.CPUThrottlingManager.CalibratedCPUThrottling>;\n\n  constructor() {\n    super();\n    this.#currentOption = SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingOption();\n    this.#calibratedThrottlingSetting =\n        Common.Settings.Settings.instance().createSetting<SDK.CPUThrottlingManager.CalibratedCPUThrottling>(\n            'calibrated-cpu-throttling', {}, Common.Settings.SettingStorageType.GLOBAL);\n    this.#resetGroups();\n    this.#render();\n  }\n\n  set recommendedOption(recommendedOption: SDK.CPUThrottlingManager.CPUThrottlingOption|null) {\n    this.#recommendedOption = recommendedOption;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  connectedCallback(): void {\n    SDK.CPUThrottlingManager.CPUThrottlingManager.instance().addEventListener(\n        SDK.CPUThrottlingManager.Events.RATE_CHANGED, this.#onOptionChange, this);\n    this.#calibratedThrottlingSetting.addChangeListener(this.#onCalibratedSettingChanged, this);\n    this.#onOptionChange();\n  }\n\n  disconnectedCallback(): void {\n    this.#calibratedThrottlingSetting.removeChangeListener(this.#onCalibratedSettingChanged, this);\n    SDK.CPUThrottlingManager.CPUThrottlingManager.instance().removeEventListener(\n        SDK.CPUThrottlingManager.Events.RATE_CHANGED, this.#onOptionChange, this);\n  }\n\n  #onOptionChange(): void {\n    this.#currentOption = SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingOption();\n\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onCalibratedSettingChanged(): void {\n    this.#resetGroups();\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onMenuItemSelected(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void {\n    let option;\n    if (typeof event.itemValue === 'string') {\n      if (event.itemValue === 'low-tier-mobile') {\n        option = SDK.CPUThrottlingManager.CalibratedLowTierMobileThrottlingOption;\n      } else if (event.itemValue === 'mid-tier-mobile') {\n        option = SDK.CPUThrottlingManager.CalibratedMidTierMobileThrottlingOption;\n      }\n    } else {\n      const rate = Number(event.itemValue);\n      option = MobileThrottling.ThrottlingPresets.ThrottlingPresets.cpuThrottlingPresets.find(\n          option => !option.calibratedDeviceType && option.rate() === rate);\n    }\n\n    if (option) {\n      MobileThrottling.ThrottlingManager.throttlingManager().setCPUThrottlingOption(option);\n    }\n  }\n\n  #onCalibrateClick(): void {\n    void Common.Revealer.reveal(this.#calibratedThrottlingSetting);\n  }\n\n  #resetGroups(): void {\n    this.#groups = [\n      {\n        name: '',\n        items: MobileThrottling.ThrottlingPresets.ThrottlingPresets.cpuThrottlingPresets.filter(\n            option => !option.calibratedDeviceType),\n      },\n      {\n        name: i18nString(UIStrings.labelCalibratedPresets),\n        items: MobileThrottling.ThrottlingPresets.ThrottlingPresets.cpuThrottlingPresets.filter(\n            option => option.calibratedDeviceType),\n      },\n    ];\n  }\n\n  #render = (): void => {\n    let recommendedInfoEl;\n    if (this.#recommendedOption && this.#currentOption === SDK.CPUThrottlingManager.NoThrottlingOption) {\n      recommendedInfoEl = html`<devtools-icon\n        title=${i18nString(UIStrings.recommendedThrottlingReason)}\n        name=info></devtools-icon>`;\n    }\n\n    const selectionTitle = this.#currentOption.title();\n    const setting = this.#calibratedThrottlingSetting.get();\n    const hasCalibratedOnce = setting.low || setting.mid;\n    const calibrationLabel = hasCalibratedOnce ? i18nString(UIStrings.recalibrate) : i18nString(UIStrings.calibrate);\n\n    // clang-format off\n    /* eslint-disable rulesdir/no-deprecated-component-usages */\n    const output = html`\n      <style>${cpuThrottlingSelectorStyles}</style>\n      <devtools-select-menu\n            @selectmenuselected=${this.#onMenuItemSelected}\n            .showDivider=${true}\n            .showArrow=${true}\n            .sideButton=${false}\n            .showSelectedItem=${true}\n            .jslogContext=${'cpu-throttling'}\n            .buttonTitle=${i18nString(UIStrings.cpu, {PH1: selectionTitle})}\n            .title=${i18nString(UIStrings.cpuThrottling, {PH1: selectionTitle})}\n          >\n          ${this.#groups.map(group => {\n            return html`\n              <devtools-menu-group .name=${group.name} .title=${group.name}>\n                ${group.items.map(option => {\n                  const title = option === this.#recommendedOption ? i18nString(UIStrings.recommendedThrottling, {PH1: option.title()}) : option.title();\n                  const rate = option.rate();\n                  return html`\n                    <devtools-menu-item\n                      .value=${option.calibratedDeviceType ?? rate}\n                      .selected=${this.#currentOption === option}\n                      .disabled=${rate === 0}\n                      .title=${title}\n                      jslog=${VisualLogging.item(option.jslogContext).track({click: true})}\n                    >\n                      ${title}\n                    </devtools-menu-item>\n                  `;\n                })}\n                ${group.name === 'Calibrated presets' ? html`<devtools-menu-item\n                  .value=${-1 /* This won't be displayed unless it has some value. */}\n                  .title=${calibrationLabel}\n                  jslog=${VisualLogging.action('cpu-throttling-selector-calibrate').track({click: true})}\n                  @click=${this.#onCalibrateClick}\n                >\n                  ${calibrationLabel}\n                </devtools-menu-item>` : Lit.nothing}\n              </devtools-menu-group>`;\n          })}\n      </devtools-select-menu>\n      ${recommendedInfoEl}\n    `;\n    /* eslint-enable rulesdir/no-deprecated-component-usages */\n    // clang-format on\n    Lit.render(output, this.#shadow, {host: this});\n  };\n}\n\ncustomElements.define('devtools-cpu-throttling-selector', CPUThrottlingSelector);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-cpu-throttling-selector': CPUThrottlingSelector;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: flex;\n  align-items: center;\n  max-width: 100%;\n  height: 20px;\n}\n\ndevtools-icon[name=\"info\"] {\n  margin-left: var(--sys-size-3);\n  width: var(--sys-size-8);\n  height: var(--sys-size-8);\n}\n\ndevtools-select-menu {\n  min-width: 160px;\n  max-width: 100%;\n  height: 20px;\n}\n\n/*# sourceURL=${import.meta.resolve('./cpuThrottlingSelector.css')} */`;", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\n\n// *********************************************************************\n// At the moment this file consists of helpers to aid in the rendering\n// of events details in the bottom drawer. In the future, we should use\n// Lit for this section, and update this helpers accordingly.\n// *********************************************************************\n\nconst UIStrings = {\n  /**\n   *@description Text in the Performance panel for a forced style and layout calculation of elements\n   * in a page. See https://developer.mozilla.org/en-US/docs/Glossary/Reflow\n   */\n  forcedReflow: 'Forced reflow',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel\n   *@example {Forced reflow} PH1\n   */\n  sIsALikelyPerformanceBottleneck: '{PH1} is a likely performance bottleneck.',\n  /**\n   *@description Text in the Performance panel for a function called during a time the browser was\n   * idle (inactive), which to longer to execute than a predefined deadline.\n   *@example {10ms} PH1\n   */\n  idleCallbackExecutionExtended: 'Idle callback execution extended beyond deadline by {PH1}',\n  /**\n   *@description Text in the Performance panel which describes how long a task took.\n   *@example {task} PH1\n   *@example {10ms} PH2\n   */\n  sTookS: '{PH1} took {PH2}.',\n  /**\n   *@description Text in the Performance panel for a task that took long. See\n   * https://developer.mozilla.org/en-US/docs/Glossary/Long_task\n   */\n  longTask: 'Long task',\n  /**\n   *@description Text used to highlight a long interaction and link to web.dev/inp\n   */\n  longInteractionINP: 'Long interaction',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel when the\n   *             user clicks on a long interaction.\n   *@example {Long interaction} PH1\n   */\n  sIsLikelyPoorPageResponsiveness: '{PH1} is indicating poor page responsiveness.',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel\n   */\n  websocketProtocol: 'WebSocket protocol',\n  /**\n   * @description Details text indicating how many bytes were received in a WebSocket message\n   * @example {1024} PH1\n   */\n  webSocketBytes: '{PH1} byte(s)',\n  /**\n   * @description Details text indicating how many bytes were sent in a WebSocket message\n   */\n  webSocketDataLength: 'Data length',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/DetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport function buildWarningElementsForEvent(\n    event: Trace.Types.Events.Event, parsedTrace: Trace.Handlers.Types.ParsedTrace): HTMLSpanElement[] {\n  const warnings = parsedTrace.Warnings.perEvent.get(event);\n  const warningElements: HTMLSpanElement[] = [];\n  if (!warnings) {\n    return warningElements;\n  }\n  for (const warning of warnings) {\n    const duration = Trace.Helpers.Timing.microToMilli(Trace.Types.Timing.Micro(event.dur || 0));\n    const span = document.createElement('span');\n    switch (warning) {\n      case 'FORCED_REFLOW': {\n        const forcedReflowLink = UI.XLink.XLink.create(\n            'https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing#avoid-forced-synchronous-layouts',\n            i18nString(UIStrings.forcedReflow), undefined, undefined, 'forced-reflow');\n        span.appendChild(i18n.i18n.getFormatLocalizedString(\n            str_, UIStrings.sIsALikelyPerformanceBottleneck, {PH1: forcedReflowLink}));\n        break;\n      }\n      case 'IDLE_CALLBACK_OVER_TIME': {\n        if (!Trace.Types.Events.isFireIdleCallback(event)) {\n          break;\n        }\n        const exceededMs =\n            i18n.TimeUtilities.millisToString((duration || 0) - event.args.data['allottedMilliseconds'], true);\n        span.textContent = i18nString(UIStrings.idleCallbackExecutionExtended, {PH1: exceededMs});\n        break;\n      }\n\n      case 'LONG_TASK': {\n        const longTaskLink = UI.XLink.XLink.create(\n            'https://web.dev/optimize-long-tasks/', i18nString(UIStrings.longTask), undefined, undefined, 'long-tasks');\n        span.appendChild(i18n.i18n.getFormatLocalizedString(\n            str_, UIStrings.sTookS,\n            {PH1: longTaskLink, PH2: i18n.TimeUtilities.millisToString((duration || 0), true)}));\n        break;\n      }\n      case 'LONG_INTERACTION': {\n        const longInteractionINPLink = UI.XLink.XLink.create(\n            'https://web.dev/inp', i18nString(UIStrings.longInteractionINP), undefined, undefined, 'long-interaction');\n        span.appendChild(i18n.i18n.getFormatLocalizedString(\n            str_, UIStrings.sIsLikelyPoorPageResponsiveness, {PH1: longInteractionINPLink}));\n        break;\n      }\n      default: {\n        Platform.assertNever(warning, `Unhandled warning type ${warning}`);\n      }\n    }\n    warningElements.push(span);\n  }\n  return warningElements;\n}\n\nexport interface DetailRow {\n  key: string;\n  value: string;\n}\nexport function buildRowsForWebSocketEvent(\n    event: Trace.Types.Events.WebSocketCreate|Trace.Types.Events.WebSocketInfo|Trace.Types.Events.WebSocketTransfer,\n    parsedTrace: Trace.Handlers.Types.ParsedTrace): readonly DetailRow[] {\n  const rows: DetailRow[] = [];\n\n  const initiator = parsedTrace.Initiators.eventToInitiator.get(event);\n  if (initiator && Trace.Types.Events.isWebSocketCreate(initiator)) {\n    // The initiator will be a WebSocketCreate, but this check helps TypeScript to understand.\n    rows.push({key: i18n.i18n.lockedString('URL'), value: initiator.args.data.url});\n    if (initiator.args.data.websocketProtocol) {\n      rows.push({key: i18nString(UIStrings.websocketProtocol), value: initiator.args.data.websocketProtocol});\n    }\n  } else if (Trace.Types.Events.isWebSocketCreate(event)) {\n    rows.push({key: i18n.i18n.lockedString('URL'), value: event.args.data.url});\n    if (event.args.data.websocketProtocol) {\n      rows.push({key: i18nString(UIStrings.websocketProtocol), value: event.args.data.websocketProtocol});\n    }\n  }\n  if (Trace.Types.Events.isWebSocketTransfer(event)) {\n    if (event.args.data.dataLength) {\n      rows.push({\n        key: i18nString(UIStrings.webSocketDataLength),\n        value: `${i18nString(UIStrings.webSocketBytes, {PH1: event.args.data.dataLength})}`,\n      });\n    }\n  }\n\n  return rows;\n}\n\n/**\n * This method does not output any content but instead takes a list of\n * invalidations and groups them, doing some processing of the data to collect\n * invalidations grouped by the reason/cause.\n * It also returns all BackendNodeIds that are related to these invalidations\n * so that they can be fetched via CDP.\n * It is exported only for testing purposes.\n **/\nexport function generateInvalidationsList(\n    invalidations: Trace.Types.Events.InvalidationTrackingEvent[],\n    ): {\n  groupedByReason: Record<string, Trace.Types.Events.InvalidationTrackingEvent[]>,\n  backendNodeIds: Set<Protocol.DOM.BackendNodeId>,\n} {\n  const groupedByReason: Record<string, Trace.Types.Events.InvalidationTrackingEvent[]> = {};\n\n  const backendNodeIds = new Set<Protocol.DOM.BackendNodeId>();\n  for (const invalidation of invalidations) {\n    backendNodeIds.add(invalidation.args.data.nodeId);\n\n    let reason = invalidation.args.data.reason || 'unknown';\n\n    // ScheduleStyle events do not always have a reason, but if they tell us\n    // via their data what changed, we can update the reason that we show to\n    // the user.\n    if (reason === 'unknown' && Trace.Types.Events.isScheduleStyleInvalidationTracking(invalidation) &&\n        invalidation.args.data.invalidatedSelectorId) {\n      switch (invalidation.args.data.invalidatedSelectorId) {\n        case 'attribute':\n          reason = 'Attribute';\n          if (invalidation.args.data.changedAttribute) {\n            reason += ` (${invalidation.args.data.changedAttribute})`;\n          }\n          break;\n        case 'class':\n          reason = 'Class';\n          if (invalidation.args.data.changedClass) {\n            reason += ` (${invalidation.args.data.changedClass})`;\n          }\n          break;\n        case 'id':\n          reason = 'Id';\n          if (invalidation.args.data.changedId) {\n            reason += ` (${invalidation.args.data.changedId})`;\n          }\n          break;\n      }\n    }\n\n    if (reason === 'PseudoClass' && Trace.Types.Events.isStyleRecalcInvalidationTracking(invalidation) &&\n        invalidation.args.data.extraData) {\n      // This will append the `:focus` onto the reason.\n      reason += invalidation.args.data.extraData;\n    }\n\n    if (reason === 'Attribute' && Trace.Types.Events.isStyleRecalcInvalidationTracking(invalidation) &&\n        invalidation.args.data.extraData) {\n      // Append the attribute that changed.\n      reason += ` (${invalidation.args.data.extraData})`;\n    }\n\n    if (reason === 'StyleInvalidator') {\n      // These events give us some extra metadata but are not in isolation that\n      // useful and end up duplicating information from other tracking events,\n      // so we do not include these in the UI.\n      continue;\n    }\n\n    const existing = groupedByReason[reason] || [];\n    existing.push(invalidation);\n    groupedByReason[reason] = existing;\n  }\n  return {groupedByReason, backendNodeIds};\n}\n", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport './OriginMap.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport fieldSettingsDialogStyles from './fieldSettingsDialog.css.js';\nimport type {OriginMap} from './OriginMap.js';\n\nconst UIStrings = {\n  /**\n   * @description Text label for a button that opens a dialog to set up field metrics.\n   */\n  setUp: 'Set up',\n  /**\n   * @description Text label for a button that opens a dialog to configure field metrics.\n   */\n  configure: 'Configure',\n  /**\n   * @description Text label for a button that enables the collection of field metrics.\n   */\n  ok: 'Ok',\n  /**\n   * @description Text label for a button that opts out of the collection of field metrics.\n   */\n  optOut: 'Opt out',\n  /**\n   * @description Text label for a button that cancels the setup of field metrics collection.\n   */\n  cancel: 'Cancel',\n  /**\n   * @description Text label for a checkbox that controls if a manual URL override is enabled for field metrics.\n   */\n  onlyFetchFieldData: 'Always show field metrics for the below URL',\n  /**\n   * @description Text label for a text box that that contains the manual override URL for fetching field metrics.\n   */\n  url: 'URL',\n  /**\n   * @description Warning message explaining that the Chrome UX Report could not find enough real world speed data for the page. \"Chrome UX Report\" is a product name and should not be translated.\n   */\n  doesNotHaveSufficientData: 'The Chrome UX Report does not have sufficient real-world speed data for this page.',\n  /**\n   * @description Title for a dialog that contains information and settings related to fetching field metrics.\n   */\n  configureFieldData: 'Configure field metrics fetching',\n  /**\n   * @description Paragraph explaining where field metrics comes from and and how it can be used. PH1 will be a link with text \"Chrome UX Report\" that is untranslated because it is a product name.\n   * @example {Chrome UX Report} PH1\n   */\n  fetchAggregated:\n      'Fetch aggregated field metrics from the {PH1} to help you contextualize local measurements with what real users experience on the site.',\n  /**\n   * @description Heading for a section that explains what user data needs to be collected to fetch field metrics.\n   */\n  privacyDisclosure: 'Privacy disclosure',\n  /**\n   * @description Paragraph explaining what data needs to be sent to Google to fetch field metrics, and when that data will be sent.\n   */\n  whenPerformanceIsShown:\n      'When DevTools is open, the URLs you visit will be sent to Google to query field metrics. These requests are not tied to your Google account.',\n  /**\n   * @description Header for a section containing advanced settings\n   */\n  advanced: 'Advanced',\n  /**\n   * @description Paragraph explaining that the user can associate a development origin with a production origin for the purposes of fetching real user data.\n   */\n  mapDevelopmentOrigins:\n      'Set a development origin to automatically get relevant field metrics for its production origin.',\n  /**\n   * @description Text label for a button that adds a new editable row to a data table\n   */\n  new: 'New',\n  /**\n   * @description Warning message explaining that an input origin is not a valid origin or URL.\n   * @example {http//malformed.com} PH1\n   */\n  invalidOrigin: '\"{PH1}\" is not a valid origin or URL.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/FieldSettingsDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {html, nothing, Directives: {ifDefined}} = Lit;\n\nexport class ShowDialog extends Event {\n  static readonly eventName = 'showdialog';\n\n  constructor() {\n    super(ShowDialog.eventName);\n  }\n}\n\nexport class FieldSettingsDialog extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #dialog?: Dialogs.Dialog.Dialog;\n\n  #configSetting = CrUXManager.CrUXManager.instance().getConfigSetting();\n\n  #urlOverride = '';\n  #urlOverrideEnabled = false;\n  #urlOverrideWarning = '';\n  #originMap?: OriginMap;\n\n  constructor() {\n    super();\n\n    const cruxManager = CrUXManager.CrUXManager.instance();\n\n    this.#configSetting = cruxManager.getConfigSetting();\n\n    this.#resetToSettingState();\n\n    this.#render();\n  }\n\n  #resetToSettingState(): void {\n    const configSetting = this.#configSetting.get();\n    this.#urlOverride = configSetting.override || '';\n    this.#urlOverrideEnabled = configSetting.overrideEnabled || false;\n    this.#urlOverrideWarning = '';\n  }\n\n  #flushToSetting(enabled: boolean): void {\n    const value = this.#configSetting.get();\n    this.#configSetting.set({\n      ...value,\n      enabled,\n      override: this.#urlOverride,\n      overrideEnabled: this.#urlOverrideEnabled,\n    });\n  }\n\n  #onSettingsChanged(): void {\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  async #urlHasFieldData(url: string): Promise<boolean> {\n    const cruxManager = CrUXManager.CrUXManager.instance();\n    const result = await cruxManager.getFieldDataForPage(url);\n    return Object.entries(result).some(([key, value]) => {\n      if (key === 'warnings') {\n        return false;\n      }\n      return Boolean(value);\n    });\n  }\n\n  async #submit(enabled: boolean): Promise<void> {\n    if (enabled && this.#urlOverrideEnabled) {\n      const origin = this.#getOrigin(this.#urlOverride);\n      if (!origin) {\n        this.#urlOverrideWarning = i18nString(UIStrings.invalidOrigin, {PH1: this.#urlOverride});\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n        return;\n      }\n\n      const hasFieldData = await this.#urlHasFieldData(this.#urlOverride);\n      if (!hasFieldData) {\n        this.#urlOverrideWarning = i18nString(UIStrings.doesNotHaveSufficientData);\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n        return;\n      }\n    }\n    this.#flushToSetting(enabled);\n    this.#closeDialog();\n  }\n\n  #showDialog(): void {\n    if (!this.#dialog) {\n      throw new Error('Dialog not found');\n    }\n    this.#resetToSettingState();\n    void this.#dialog.setDialogVisible(true);\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    this.dispatchEvent(new ShowDialog());\n  }\n\n  #closeDialog(evt?: Dialogs.Dialog.ClickOutsideDialogEvent): void {\n    if (!this.#dialog) {\n      throw new Error('Dialog not found');\n    }\n    void this.#dialog.setDialogVisible(false);\n    if (evt) {\n      evt.stopImmediatePropagation();\n    }\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  connectedCallback(): void {\n    this.#configSetting.addChangeListener(this.#onSettingsChanged, this);\n\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  disconnectedCallback(): void {\n    this.#configSetting.removeChangeListener(this.#onSettingsChanged, this);\n  }\n\n  #renderOpenButton(): Lit.LitTemplate {\n    if (this.#configSetting.get().enabled) {\n      // clang-format off\n      return html`\n        <devtools-button\n          class=\"config-button\"\n          @click=${this.#showDialog}\n          .data=${{\n            variant: Buttons.Button.Variant.OUTLINED,\n            title: i18nString(UIStrings.configure),\n          } as Buttons.Button.ButtonData}\n        jslog=${VisualLogging.action('timeline.field-data.configure').track({click: true})}\n        >${i18nString(UIStrings.configure)}</devtools-button>\n      `;\n      // clang-format on\n    }\n    // clang-format off\n    return html`\n      <devtools-button\n        class=\"setup-button\"\n        @click=${this.#showDialog}\n        .data=${{\n          variant: Buttons.Button.Variant.PRIMARY,\n          title: i18nString(UIStrings.setUp),\n        } as Buttons.Button.ButtonData}\n        jslog=${VisualLogging.action('timeline.field-data.setup').track({click: true})}\n        data-field-data-setup\n      >${i18nString(UIStrings.setUp)}</devtools-button>\n    `;\n    // clang-format on\n  }\n\n  #renderEnableButton(): Lit.LitTemplate {\n    // clang-format off\n    return html`\n      <devtools-button\n        @click=${() => {\n          void this.#submit(true);\n        }}\n        .data=${{\n          variant: Buttons.Button.Variant.PRIMARY,\n          title: i18nString(UIStrings.ok),\n        } as Buttons.Button.ButtonData}\n        class=\"enable\"\n        jslog=${VisualLogging.action('timeline.field-data.enable').track({click: true})}\n        data-field-data-enable\n      >${i18nString(UIStrings.ok)}</devtools-button>\n    `;\n    // clang-format on\n  }\n\n  #renderDisableButton(): Lit.LitTemplate {\n    const label = this.#configSetting.get().enabled ? i18nString(UIStrings.optOut) : i18nString(UIStrings.cancel);\n    // clang-format off\n    return html`\n      <devtools-button\n        @click=${() => {\n          void this.#submit(false);\n        }}\n        .data=${{\n          variant: Buttons.Button.Variant.OUTLINED,\n          title: label,\n        } as Buttons.Button.ButtonData}\n        jslog=${VisualLogging.action('timeline.field-data.disable').track({click: true})}\n        data-field-data-disable\n      >${label}</devtools-button>\n    `;\n    // clang-format on\n  }\n\n  #onUrlOverrideChange(event: Event): void {\n    event.stopPropagation();\n    const input = event.target as HTMLInputElement;\n    this.#urlOverride = input.value;\n    this.#urlOverrideWarning = '';\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onUrlOverrideEnabledChange(event: Event): void {\n    event.stopPropagation();\n    const input = event.target as HTMLInputElement;\n    this.#urlOverrideEnabled = input.checked;\n    this.#urlOverrideWarning = '';\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #getOrigin(url: string): string|null {\n    try {\n      return new URL(url).origin;\n    } catch {\n      return null;\n    }\n  }\n\n  #renderOriginMapGrid(): Lit.LitTemplate {\n    // clang-format off\n    return html`\n      <div class=\"origin-mapping-description\">${i18nString(UIStrings.mapDevelopmentOrigins)}</div>\n      <devtools-origin-map\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n          this.#originMap = node as OriginMap;\n        })}\n      ></devtools-origin-map>\n      <div class=\"origin-mapping-button-section\">\n        <devtools-button\n          @click=${() => this.#originMap?.startCreation()}\n          .data=${{\n            variant: Buttons.Button.Variant.TEXT,\n            title: i18nString(UIStrings.new),\n            iconName: 'plus',\n          } as Buttons.Button.ButtonData}\n          jslogContext=${'new-origin-mapping'}\n        >${i18nString(UIStrings.new)}</devtools-button>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #render = (): void => {\n    const linkEl =\n        UI.XLink.XLink.create('https://developer.chrome.com/docs/crux', i18n.i18n.lockedString('Chrome UX Report'));\n    const descriptionEl = i18n.i18n.getFormatLocalizedString(str_, UIStrings.fetchAggregated, {PH1: linkEl});\n\n    // clang-format off\n    const output = html`\n      <style>${fieldSettingsDialogStyles}</style>\n      <style>${Input.textInputStyles}</style>\n      <style>${Input.checkboxStyles}</style>\n      <div class=\"open-button-section\">${this.#renderOpenButton()}</div>\n      <devtools-dialog\n        @clickoutsidedialog=${this.#closeDialog}\n        .position=${Dialogs.Dialog.DialogVerticalPosition.AUTO}\n        .horizontalAlignment=${Dialogs.Dialog.DialogHorizontalAlignment.CENTER}\n        .jslogContext=${'timeline.field-data.settings'}\n        .expectedMutationsSelector=${'.timeline-settings-pane option'}\n        .dialogTitle=${i18nString(UIStrings.configureFieldData)}\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n          this.#dialog = node as Dialogs.Dialog.Dialog;\n        })}\n      >\n        <div class=\"content\">\n          <div>${descriptionEl}</div>\n          <div class=\"privacy-disclosure\">\n            <h3 class=\"section-title\">${i18nString(UIStrings.privacyDisclosure)}</h3>\n            <div>${i18nString(UIStrings.whenPerformanceIsShown)}</div>\n          </div>\n          <details aria-label=${i18nString(UIStrings.advanced)}>\n            <summary>${i18nString(UIStrings.advanced)}</summary>\n            <div class=\"advanced-section-contents\">\n              ${this.#renderOriginMapGrid()}\n              <hr class=\"divider\">\n              <label class=\"url-override\">\n                <input\n                  type=\"checkbox\"\n                  .checked=${this.#urlOverrideEnabled}\n                  @change=${this.#onUrlOverrideEnabledChange}\n                  aria-label=${i18nString(UIStrings.onlyFetchFieldData)}\n                  jslog=${VisualLogging.toggle().track({click: true}).context('field-url-override-enabled')}\n                />\n                ${i18nString(UIStrings.onlyFetchFieldData)}\n              </label>\n              <input\n                type=\"text\"\n                @keyup=${this.#onUrlOverrideChange}\n                @change=${this.#onUrlOverrideChange}\n                class=\"devtools-text-input\"\n                .disabled=${!this.#urlOverrideEnabled}\n                .value=${this.#urlOverride}\n                placeholder=${ifDefined(this.#urlOverrideEnabled ? i18nString(UIStrings.url) : undefined)}\n              />\n              ${\n                this.#urlOverrideWarning\n                  ? html`<div class=\"warning\" role=\"alert\" aria-label=${this.#urlOverrideWarning}>${this.#urlOverrideWarning}</div>`\n                  : nothing\n              }\n            </div>\n          </details>\n          <div class=\"buttons-section\">\n            ${this.#renderDisableButton()}\n            ${this.#renderEnableButton()}\n          </div>\n        </div>\n      </devtools-dialog>\n    `;\n    // clang-format on\n    Lit.render(output, this.#shadow, {host: this});\n  };\n}\n\ncustomElements.define('devtools-field-settings-dialog', FieldSettingsDialog);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-field-settings-dialog': FieldSettingsDialog;\n  }\n}\n", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/icon_button/icon_button.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport originMapStyles from './originMap.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Title for a column in a data table representing a site origin used for development\n   */\n  developmentOrigin: 'Development origin',\n  /**\n   * @description Title for a column in a data table representing a site origin used by real users in a production environment\n   */\n  productionOrigin: 'Production origin',\n  /**\n   * @description Warning message explaining that an input origin is not a valid origin or URL.\n   * @example {http//malformed.com} PH1\n   */\n  invalidOrigin: '\"{PH1}\" is not a valid origin or URL.',\n  /**\n   * @description Warning message explaining that an development origin is already mapped to a productionOrigin.\n   * @example {https://example.com} PH1\n   */\n  alreadyMapped: '\"{PH1}\" is already mapped to a production origin.',\n  /**\n   * @description Warning message explaining that a page doesn't have enough real user data to show any information for. \"Chrome UX Report\" is a product name and should not be translated.\n   */\n  pageHasNoData: 'The Chrome UX Report does not have sufficient real user data for this page.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/OriginMap.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst DEV_ORIGIN_CONTROL = 'developmentOrigin';\nconst PROD_ORIGIN_CONTROL = 'productionOrigin';\n\ninterface ListItem extends CrUXManager.OriginMapping {\n  isTitleRow?: boolean;\n}\n\nexport class OriginMap extends UI.Widget.WidgetElement<UI.Widget.Widget> implements UI.ListWidget.Delegate<ListItem> {\n  #list: UI.ListWidget.ListWidget<ListItem>;\n  #editor?: UI.ListWidget.Editor<ListItem>;\n\n  constructor() {\n    super();\n\n    this.#list = new UI.ListWidget.ListWidget<ListItem>(this, false /* delegatesFocus */, true /* isTable */);\n\n    CrUXManager.CrUXManager.instance().getConfigSetting().addChangeListener(this.#updateListFromSetting, this);\n    this.#updateListFromSetting();\n  }\n\n  override createWidget(): UI.Widget.Widget {\n    const containerWidget = new UI.Widget.Widget(false, false, this);\n\n    this.#list.registerRequiredCSS(originMapStyles);\n    this.#list.show(containerWidget.contentElement);\n\n    return containerWidget;\n  }\n\n  #pullMappingsFromSetting(): ListItem[] {\n    return CrUXManager.CrUXManager.instance().getConfigSetting().get().originMappings || [];\n  }\n\n  #pushMappingsToSetting(originMappings: ListItem[]): void {\n    const setting = CrUXManager.CrUXManager.instance().getConfigSetting();\n    const settingCopy = {...setting.get()};\n    settingCopy.originMappings = originMappings;\n    setting.set(settingCopy);\n  }\n\n  #updateListFromSetting(): void {\n    const mappings = this.#pullMappingsFromSetting();\n    this.#list.clear();\n    this.#list.appendItem(\n        {\n          developmentOrigin: i18nString(UIStrings.developmentOrigin),\n          productionOrigin: i18nString(UIStrings.productionOrigin),\n          isTitleRow: true,\n        },\n        false);\n    for (const originMapping of mappings) {\n      this.#list.appendItem(originMapping, true);\n    }\n  }\n\n  #getOrigin(url: string): string|null {\n    try {\n      return new URL(url).origin;\n    } catch {\n      return null;\n    }\n  }\n\n  #renderOriginWarning(url: string): Promise<Lit.LitTemplate> {\n    return RenderCoordinator.write(async () => {\n      if (!CrUXManager.CrUXManager.instance().isEnabled()) {\n        return Lit.nothing;\n      }\n\n      const cruxManager = CrUXManager.CrUXManager.instance();\n      const result = await cruxManager.getFieldDataForPage(url);\n\n      const hasFieldData = Object.entries(result).some(([key, value]) => {\n        if (key === 'warnings') {\n          return false;\n        }\n        return Boolean(value);\n      });\n      if (hasFieldData) {\n        return Lit.nothing;\n      }\n\n      return html`\n        <devtools-icon\n          class=\"origin-warning-icon\"\n          name=\"warning-filled\"\n          title=${i18nString(UIStrings.pageHasNoData)}\n        ></devtools-icon>\n      `;\n    });\n  }\n\n  startCreation(): void {\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    const inspectedURL = targetManager.inspectedURL();\n    const currentOrigin = this.#getOrigin(inspectedURL) || '';\n\n    this.#list.addNewItem(-1, {\n      developmentOrigin: currentOrigin,\n      productionOrigin: '',\n    });\n  }\n\n  renderItem(originMapping: ListItem): Element {\n    const element = document.createElement('div');\n    element.classList.add('origin-mapping-row');\n    element.role = 'row';\n\n    let cellRole: 'columnheader'|'cell';\n    let warningIcon;\n    if (originMapping.isTitleRow) {\n      element.classList.add('header');\n      cellRole = 'columnheader';\n      warningIcon = Lit.nothing;\n    } else {\n      cellRole = 'cell';\n      warningIcon = Lit.Directives.until(this.#renderOriginWarning(originMapping.productionOrigin));\n    }\n\n    // clang-format off\n    Lit.render(html`\n      <div class=\"origin-mapping-cell development-origin\" role=${cellRole}>\n        <div class=\"origin\" title=${originMapping.developmentOrigin}>${originMapping.developmentOrigin}</div>\n      </div>\n      <div class=\"origin-mapping-cell production-origin\" role=${cellRole}>\n        ${warningIcon}\n        <div class=\"origin\" title=${originMapping.productionOrigin}>${originMapping.productionOrigin}</div>\n      </div>\n    `, element, {host: this});\n    // clang-format on\n    return element;\n  }\n\n  removeItemRequested(_item: ListItem, index: number): void {\n    const mappings = this.#pullMappingsFromSetting();\n\n    // `index` will be 1-indexed due to the header row\n    mappings.splice(index - 1, 1);\n\n    this.#pushMappingsToSetting(mappings);\n  }\n\n  commitEdit(originMapping: ListItem, editor: UI.ListWidget.Editor<ListItem>, isNew: boolean): void {\n    originMapping.developmentOrigin = this.#getOrigin(editor.control(DEV_ORIGIN_CONTROL).value) || '';\n    originMapping.productionOrigin = this.#getOrigin(editor.control(PROD_ORIGIN_CONTROL).value) || '';\n\n    const mappings = this.#pullMappingsFromSetting();\n    if (isNew) {\n      mappings.push(originMapping);\n    }\n    this.#pushMappingsToSetting(mappings);\n  }\n\n  beginEdit(originMapping: ListItem): UI.ListWidget.Editor<ListItem> {\n    const editor = this.#createEditor();\n    editor.control(DEV_ORIGIN_CONTROL).value = originMapping.developmentOrigin;\n    editor.control(PROD_ORIGIN_CONTROL).value = originMapping.productionOrigin;\n    return editor;\n  }\n\n  #developmentValidator(_item: ListItem, index: number, input: UI.ListWidget.EditorControl):\n      UI.ListWidget.ValidatorResult {\n    const origin = this.#getOrigin(input.value);\n\n    if (!origin) {\n      return {valid: false, errorMessage: i18nString(UIStrings.invalidOrigin, {PH1: input.value})};\n    }\n\n    const mappings = this.#pullMappingsFromSetting();\n    for (let i = 0; i < mappings.length; ++i) {\n      // `index` will be 1-indexed due to the header row\n      if (i === index - 1) {\n        continue;\n      }\n\n      const mapping = mappings[i];\n      if (mapping.developmentOrigin === origin) {\n        return {valid: true, errorMessage: i18nString(UIStrings.alreadyMapped, {PH1: origin})};\n      }\n    }\n\n    return {valid: true};\n  }\n\n  #productionValidator(_item: ListItem, _index: number, input: UI.ListWidget.EditorControl):\n      UI.ListWidget.ValidatorResult {\n    const origin = this.#getOrigin(input.value);\n\n    if (!origin) {\n      return {valid: false, errorMessage: i18nString(UIStrings.invalidOrigin, {PH1: input.value})};\n    }\n\n    return {valid: true};\n  }\n\n  #createEditor(): UI.ListWidget.Editor<ListItem> {\n    if (this.#editor) {\n      return this.#editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<ListItem>();\n    this.#editor = editor;\n    const content = editor.contentElement().createChild('div', 'origin-mapping-editor');\n\n    const devInput = editor.createInput(\n        DEV_ORIGIN_CONTROL, 'text', i18nString(UIStrings.developmentOrigin), this.#developmentValidator.bind(this));\n    const prodInput = editor.createInput(\n        PROD_ORIGIN_CONTROL, 'text', i18nString(UIStrings.productionOrigin), this.#productionValidator.bind(this));\n\n    // clang-format off\n    Lit.render(html`\n      <label class=\"development-origin-input\">\n        ${i18nString(UIStrings.developmentOrigin)}\n        ${devInput}\n      </label>\n      <label class=\"production-origin-input\">\n        ${i18nString(UIStrings.productionOrigin)}\n        ${prodInput}\n      </label>\n    `, content, {host: this});\n    // clang-format on\n\n    return editor;\n  }\n}\n\ncustomElements.define('devtools-origin-map', OriginMap);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-origin-map': OriginMap;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.list {\n  max-height: 200px;\n}\n\n.list-item:has(.origin-mapping-row.header) {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.origin-mapping-row {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  /* Needs to be 30px because list items have a min height of 30px */\n  height: 30px;\n}\n\n.origin-mapping-row.header {\n  font-weight: var(--ref-typeface-weight-medium);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.origin-mapping-cell {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  padding: 4px;\n  border-right: 1px solid var(--sys-color-divider);\n}\n\n.origin-warning-icon {\n  width: 16px;\n  height: 16px;\n  margin-right: 4px;\n  color: var(--icon-warning);\n}\n\n.origin {\n  text-overflow: ellipsis;\n  overflow-x: hidden;\n}\n\n.origin-mapping-cell:last-child {\n  border: none;\n}\n\n.origin-mapping-editor {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  padding: 12px 8px;\n  gap: 12px;\n}\n\n.origin-mapping-editor label {\n  flex: 1;\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.origin-mapping-editor input {\n  margin-top: 4px;\n  width: 100%;\n}\n\n/*# sourceURL=${import.meta.resolve('./originMap.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n}\n\n:host * {\n  box-sizing: border-box;\n}\n\ndevtools-dialog {\n  --override-transparent: color-mix(in srgb, var(--color-background) 80%, transparent);\n}\n\n.section-title {\n  font-size: var(--sys-typescale-headline5-size);\n  line-height: var(--sys-typescale-headline5-line-height);\n  font-weight: var(--ref-typeface-weight-medium);\n  margin: 0;\n}\n\n.privacy-disclosure {\n  margin: 8px 0;\n}\n\n.url-override {\n  margin: 8px 0;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: max-content;\n}\n\ndetails > summary {\n  font-size: var(--sys-typescale-body4-size);\n  line-height: var(--sys-typescale-body4-line-height);\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.content {\n  max-width: 360px;\n  box-sizing: border-box;\n}\n\n.open-button-section {\n  display: flex;\n  flex-direction: row;\n}\n\n.origin-mapping-grid {\n  border: 1px solid var(--sys-color-divider);\n  margin-top: 8px;\n}\n\n.origin-mapping-description {\n  margin-bottom: 8px;\n}\n\n.origin-mapping-button-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: var(--sys-size-6);\n}\n\n.config-button {\n  margin-left: auto;\n}\n\n.advanced-section-contents {\n  margin: 4px 0 14px;\n}\n\n.buttons-section {\n  display: flex;\n  justify-content: space-between;\n  margin-top: var(--sys-size-6);\n  margin-bottom: var(--sys-size-2);\n\n  devtools-button.enable {\n    float: right;\n  }\n}\n\ninput[type=\"checkbox\"] {\n  height: 12px;\n  width: 12px;\n  min-height: 12px;\n  min-width: 12px;\n  margin: 6px;\n}\n\ninput[type=\"text\"][disabled] {\n  color: var(--sys-color-state-disabled);\n}\n\n.warning {\n  margin: 2px 8px;\n  color: var(--color-error-text);\n}\n\nx-link {\n  color: var(--sys-color-primary);\n  text-decoration-line: underline;\n}\n\n.divider {\n  margin: 10px 0;\n  border: none;\n  border-top: 1px solid var(--sys-color-divider);\n}\n\n/*# sourceURL=${import.meta.resolve('./fieldSettingsDialog.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../../ui/components/menus/menus.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Bindings from '../../../models/bindings/bindings.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport ignoreListSettingStyles from './ignoreListSetting.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text title for the button to open the ignore list setting.\n   */\n  showIgnoreListSettingDialog: 'Show ignore list setting dialog',\n  /**\n   * @description Text title for ignore list setting.\n   */\n  ignoreList: 'Ignore list',\n  /**\n   * @description Text description for ignore list setting.\n   */\n  ignoreListDescription: 'Add regular expression rules to remove matching scripts from the flame chart.',\n  /**\n   *@description Pattern title in Framework Ignore List Settings Tab of the Settings\n   *@example {ad.*?} regex\n   */\n  ignoreScriptsWhoseNamesMatchS: 'Ignore scripts whose names match \\'\\'{regex}\\'\\'',\n  /**\n   *@description Label for the button to remove an regex\n   *@example {ad.*?} regex\n   */\n  removeRegex: 'Remove the regex: \\'\\'{regex}\\'\\'',\n  /**\n   *@description Aria accessible name in Ignore List Settings Dialog in Performance panel. It labels the input\n   * field used to add new or edit existing regular expressions that match file names to ignore in the debugger.\n   */\n  addNewRegex: 'Add a regular expression rule for the script\\'s URL',\n  /**\n   * @description Aria accessible name in Ignore List Settings Dialog in Performance panel. It labels the checkbox of\n   * the input field used to enable the new regular expressions that match file names to ignore in the debugger.\n   */\n  ignoreScriptsWhoseNamesMatchNewRegex: 'Ignore scripts whose names match the new regex',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/IgnoreListSetting.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class IgnoreListSetting extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #ignoreListEnabled: Common.Settings.Setting<boolean> =\n      Common.Settings.Settings.instance().moduleSetting('enable-ignore-listing');\n  readonly #regexPatterns = this.#getSkipStackFramesPatternSetting().getAsArray();\n\n  #newRegexCheckbox = UI.UIUtils.CheckboxLabel.create(\n      /* title*/ undefined, /* checked*/ false, /* subtitle*/ undefined,\n      /* jslogContext*/ 'timeline.ignore-list-new-regex.checkbox');\n  #newRegexInput = UI.UIUtils.createInput(\n      /* className*/ 'new-regex-text-input', /* type*/ 'text', /* jslogContext*/ 'timeline.ignore-list-new-regex.text');\n\n  #editingRegexSetting: Common.Settings.RegExpSettingItem|null = null;\n\n  constructor() {\n    super();\n\n    this.#initAddNewItem();\n\n    Common.Settings.Settings.instance()\n        .moduleSetting('skip-stack-frames-pattern')\n        .addChangeListener(this.#scheduleRender.bind(this));\n    Common.Settings.Settings.instance()\n        .moduleSetting('enable-ignore-listing')\n        .addChangeListener(this.#scheduleRender.bind(this));\n  }\n\n  connectedCallback(): void {\n    this.#scheduleRender();\n\n    // Prevent the event making its way to the TimelinePanel element which will\n    // cause the \"Load Profile\" context menu to appear.\n    this.addEventListener('contextmenu', e => {\n      e.stopPropagation();\n    });\n  }\n\n  #scheduleRender(): void {\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #getSkipStackFramesPatternSetting(): Common.Settings.RegExpSetting {\n    return Common.Settings.Settings.instance().moduleSetting('skip-stack-frames-pattern') as\n        Common.Settings.RegExpSetting;\n  }\n\n  #startEditing(): void {\n    // Do not need to trim here because this is a temporary one, we will trim the input when finish editing,\n    this.#editingRegexSetting = {pattern: this.#newRegexInput.value, disabled: false, disabledForUrl: undefined};\n    // We need to push the temp regex here to update the flame chart.\n    // We are using the \"skip-stack-frames-pattern\" setting to determine which is rendered on flame chart. And the push\n    // here will update the setting's value.\n    this.#regexPatterns.push(this.#editingRegexSetting);\n  }\n\n  #finishEditing(): void {\n    if (!this.#editingRegexSetting) {\n      return;\n    }\n\n    const lastRegex = this.#regexPatterns.pop();\n    // Add a sanity check to make sure the last one is the editing one.\n    // In case the check fails, add back the last element.\n    if (lastRegex && lastRegex !== this.#editingRegexSetting) {\n      console.warn('The last regex is not the editing one.');\n      this.#regexPatterns.push(lastRegex);\n    }\n\n    this.#editingRegexSetting = null;\n    this.#getSkipStackFramesPatternSetting().setAsArray(this.#regexPatterns);\n  }\n\n  #resetInput(): void {\n    this.#newRegexCheckbox.checked = false;\n    this.#newRegexInput.value = '';\n  }\n\n  #addNewRegexToIgnoreList(): void {\n    const newRegex = this.#newRegexInput.value.trim();\n\n    this.#finishEditing();\n    if (!regexInputIsValid(newRegex)) {\n      // It the new regex is invalid, let's skip it.\n      return;\n    }\n    Bindings.IgnoreListManager.IgnoreListManager.instance().addRegexToIgnoreList(newRegex);\n    this.#resetInput();\n  }\n\n  #handleKeyDown(event: KeyboardEvent): void {\n    // When user press the 'Enter', the current regex will be added and user can keep adding more regexes.\n    if (event.key === Platform.KeyboardUtilities.ENTER_KEY) {\n      this.#addNewRegexToIgnoreList();\n      this.#startEditing();\n      return;\n    }\n\n    // When user press the 'Escape', it means cancel the editing, so the current regex won't be added and the input will\n    // lose focus.\n    if (event.key === Platform.KeyboardUtilities.ESCAPE_KEY) {\n      // Escape key will close the dialog, and toggle the `Console` drawer. So we need to ignore other listeners.\n      event.stopImmediatePropagation();\n\n      this.#finishEditing();\n      this.#resetInput();\n      this.#newRegexInput.blur();\n    }\n  }\n\n  /**\n   * When it is in the 'preview' mode, the last regex in the array is the editing one.\n   * So we want to remove it for some usage, like rendering the existed rules or validating the rules.\n   */\n  #getExistingRegexes(): Common.Settings.RegExpSettingItem[] {\n    if (this.#editingRegexSetting) {\n      const lastRegex = this.#regexPatterns[this.#regexPatterns.length - 1];\n\n      // Add a sanity check to make sure the last one is the editing one.\n      if (lastRegex && lastRegex === this.#editingRegexSetting) {\n        // We don't want to modify the array itself, so just return a shadow copy of it.\n        return this.#regexPatterns.slice(0, -1);\n      }\n    }\n    return this.#regexPatterns;\n  }\n\n  #handleInputChange(): void {\n    const newRegex = this.#newRegexInput.value.trim();\n\n    if (this.#editingRegexSetting && regexInputIsValid(newRegex)) {\n      this.#editingRegexSetting.pattern = newRegex;\n      this.#editingRegexSetting.disabled = !Boolean(newRegex);\n      this.#getSkipStackFramesPatternSetting().setAsArray(this.#regexPatterns);\n    }\n  }\n\n  #initAddNewItem(): void {\n    this.#newRegexInput.placeholder = '/framework\\\\.js$';\n\n    const checkboxHelpText = i18nString(UIStrings.ignoreScriptsWhoseNamesMatchNewRegex);\n    const inputHelpText = i18nString(UIStrings.addNewRegex);\n    UI.Tooltip.Tooltip.install(this.#newRegexCheckbox, checkboxHelpText);\n    UI.Tooltip.Tooltip.install(this.#newRegexInput, inputHelpText);\n\n    this.#newRegexInput.addEventListener('blur', this.#addNewRegexToIgnoreList.bind(this), false);\n    this.#newRegexInput.addEventListener('keydown', this.#handleKeyDown.bind(this), false);\n    this.#newRegexInput.addEventListener('input', this.#handleInputChange.bind(this), false);\n    this.#newRegexInput.addEventListener('focus', this.#startEditing.bind(this), false);\n  }\n\n  #renderNewRegexRow(): Lit.TemplateResult {\n    // clang-format off\n    return html`\n      <div class='new-regex-row'>${this.#newRegexCheckbox}${this.#newRegexInput}</div>\n    `;\n    // clang-format on\n  }\n\n  /**\n   * Deal with an existing regex being toggled. Note that this handler only\n   * deals with enabling/disabling regexes already in the ignore list, it does\n   * not deal with enabling/disabling the new regex.\n   */\n  #onExistingRegexEnableToggle(regex: Common.Settings.RegExpSettingItem, checkbox: UI.UIUtils.CheckboxLabel): void {\n    regex.disabled = !checkbox.checked;\n    // Technically we don't need to call the set function, because the regex is a reference, so it changed the setting\n    // value directly.\n    // But we need to call the set function to trigger the setting change event. which is needed by view update of flame\n    // chart.\n    this.#getSkipStackFramesPatternSetting().setAsArray(this.#regexPatterns);\n    // There is no need to update this component, since the only UI change is this checkbox, which is already done by\n    // the user.\n  }\n\n  #removeRegexByIndex(index: number): void {\n    this.#regexPatterns.splice(index, 1);\n    // Call the set function to trigger the setting change event. we listen to this event and will update this component\n    // and the flame chart.\n    this.#getSkipStackFramesPatternSetting().setAsArray(this.#regexPatterns);\n  }\n\n  #renderItem(regex: Common.Settings.RegExpSettingItem, index: number): Lit.TemplateResult {\n    const checkboxWithLabel = UI.UIUtils.CheckboxLabel.createWithStringLiteral(\n        regex.pattern, !regex.disabled, /* jslogContext*/ 'timeline.ignore-list-pattern');\n    const helpText = i18nString(UIStrings.ignoreScriptsWhoseNamesMatchS, {regex: regex.pattern});\n    UI.Tooltip.Tooltip.install(checkboxWithLabel, helpText);\n    checkboxWithLabel.ariaLabel = helpText;\n    checkboxWithLabel.addEventListener(\n        'change', this.#onExistingRegexEnableToggle.bind(this, regex, checkboxWithLabel), false);\n    // clang-format off\n    return html`\n      <div class='regex-row'>\n        ${checkboxWithLabel}\n        <devtools-button\n            @click=${this.#removeRegexByIndex.bind(this, index)}\n            .data=${{\n            variant: Buttons.Button.Variant.ICON,\n            iconName: 'bin',\n            title: i18nString(UIStrings.removeRegex, {regex: regex.pattern}),\n            jslogContext: 'timeline.ignore-list-pattern.remove',\n          } as Buttons.Button.ButtonData}></devtools-button>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('Ignore List setting dialog render was not scheduled');\n    }\n    // clang-format off\n    const output = html`\n      <style>${ignoreListSettingStyles}</style>\n      <devtools-button-dialog .data=${{\n          openOnRender: false,\n          jslogContext: 'timeline.ignore-list',\n          variant: Buttons.Button.Variant.TOOLBAR,\n          iconName: 'compress',\n          disabled: !this.#ignoreListEnabled.get(),\n          iconTitle: i18nString(UIStrings.showIgnoreListSettingDialog),\n          horizontalAlignment: Dialogs.Dialog.DialogHorizontalAlignment.AUTO,\n          closeButton: true,\n          dialogTitle: i18nString(UIStrings.ignoreList),\n        } as Dialogs.ButtonDialog.ButtonDialogData}>\n        <div class='ignore-list-setting-content'>\n          <div class='ignore-list-setting-description'>${i18nString(UIStrings.ignoreListDescription)}</div>\n          ${this.#getExistingRegexes().map(this.#renderItem.bind(this))}\n          ${this.#renderNewRegexRow()}\n        </div>\n      </devtools-button-dialog>\n    `;\n    // clang-format on\n    Lit.render(output, this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-perf-ignore-list-setting', IgnoreListSetting);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-perf-ignore-list-setting': IgnoreListSetting;\n  }\n}\n\n/**\n * Returns if a new regex string is valid to be added to the ignore list.\n * Note that things like duplicates are handled by the IgnoreList for us.\n *\n * @param inputValue the text input from the user we need to validate.\n */\nexport function regexInputIsValid(inputValue: string): boolean {\n  const pattern = inputValue.trim();\n\n  if (!pattern.length) {\n    return false;\n  }\n\n  let regex;\n  try {\n    regex = new RegExp(pattern);\n  } catch {\n  }\n  return Boolean(regex);\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n.ignore-list-setting-content {\n  max-width: var(--sys-size-30);\n}\n\n.ignore-list-setting-description {\n  margin-bottom: 5px;\n}\n\n.regex-row {\n  display: flex;\n\n  /* The tag name of CheckboxLabel element */\n  devtools-checkbox {\n    flex: auto;\n  }\n\n  devtools-button {\n    height: 24px;\n  }\n\n  &:not(:hover) devtools-button {\n    display: none;\n  }\n}\n\n.new-regex-row {\n  display: flex;\n\n  .new-regex-text-input {\n    flex: auto;\n  }\n\n  .harmony-input[type=\"text\"] {\n    /* padding: 3px 6px; */\n    /* height: 24px; */\n    border: 1px solid var(--sys-color-neutral-outline);\n    border-radius: 4px;\n    outline: none;\n\n    &.error-input,\n    &:invalid {\n      border-color: var(--sys-color-error);\n    }\n\n    &:not(.error-input, :invalid):focus {\n      border-color: var(--sys-color-state-focus-ring);\n    }\n\n    &:not(.error-input, :invalid):hover:not(:focus) {\n      background: var(--sys-color-state-hover-on-subtle);\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./ignoreListSetting.css')} */`;", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport interactionBreakdownStyles from './interactionBreakdown.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description Text shown next to the interaction event's input delay time in the detail view.\n   */\n  inputDelay: 'Input delay',\n  /**\n   *@description Text shown next to the interaction event's thread processing duration in the detail view.\n   */\n  processingDuration: 'Processing duration',\n  /**\n   *@description Text shown next to the interaction event's presentation delay time in the detail view.\n   */\n  presentationDelay: 'Presentation delay',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/InteractionBreakdown.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class InteractionBreakdown extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #entry: Trace.Types.Events.SyntheticInteractionPair|null = null;\n\n  set entry(entry: Trace.Types.Events.SyntheticInteractionPair) {\n    if (entry === this.#entry) {\n      return;\n    }\n    this.#entry = entry;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #render(): void {\n    if (!this.#entry) {\n      return;\n    }\n    const inputDelay = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(this.#entry.inputDelay);\n    const mainThreadTime = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(this.#entry.mainThreadHandling);\n    const presentationDelay = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(this.#entry.presentationDelay);\n    Lit.render(\n        html`<style>${interactionBreakdownStyles}</style>\n             <ul class=\"breakdown\">\n                     <li data-entry=\"input-delay\">${i18nString(UIStrings.inputDelay)}<span class=\"value\">${\n            inputDelay}</span></li>\n                     <li data-entry=\"processing-duration\">${\n            i18nString(UIStrings.processingDuration)}<span class=\"value\">${mainThreadTime}</span></li>\n                     <li data-entry=\"presentation-delay\">${\n            i18nString(UIStrings.presentationDelay)}<span class=\"value\">${presentationDelay}</span></li>\n                   </ul>\n                   `,\n        this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-interaction-breakdown', InteractionBreakdown);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-interaction-breakdown': InteractionBreakdown;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n}\n\n.breakdown {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  color: var(--sys-color-token-subtle);\n}\n\n.value {\n  display: inline-block;\n  padding: 0 5px;\n  color: var(--sys-color-on-surface);\n}\n\n/*# sourceURL=${import.meta.resolve('./interactionBreakdown.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as Helpers from '../../../models/trace/helpers/helpers.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as LegacyComponents from '../../../ui/legacy/components/utils/utils.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as Utils from '../utils/utils.js';\n\nimport * as Insights from './insights/insights.js';\nimport layoutShiftDetailsStyles from './layoutShiftDetails.css.js';\n\nconst {html} = Lit;\n\nconst MAX_URL_LENGTH = 20;\n\nconst UIStrings = {\n  /**\n   * @description Text referring to the start time of a given event.\n   */\n  startTime: 'Start time',\n  /**\n   * @description Text for a table header referring to the score of a Layout Shift event.\n   */\n  shiftScore: 'Shift score',\n  /**\n   * @description Text for a table header referring to the elements shifted for a Layout Shift event.\n   */\n  elementsShifted: 'Elements shifted',\n  /**\n   * @description Text for a table header referring to the culprit of a Layout Shift event.\n   */\n  culprit: 'Culprit',\n  /**\n   * @description Text for a culprit type of Injected iframe.\n   */\n  injectedIframe: 'Injected iframe',\n  /**\n   * @description Text for a culprit type of Font request.\n   */\n  fontRequest: 'Font request',\n  /**\n   * @description Text for a culprit type of non-composited animation.\n   */\n  nonCompositedAnimation: 'Non-composited animation',\n  /**\n   * @description Text referring to an animation.\n   */\n  animation: 'Animation',\n  /**\n   * @description Text referring to a parent cluster.\n   */\n  parentCluster: 'Parent cluster',\n  /**\n   * @description Text referring to a layout shift cluster and its start time.\n   * @example {32 ms} PH1\n   */\n  cluster: 'Layout shift cluster @ {PH1}',\n  /**\n   * @description Text referring to a layout shift and its start time.\n   * @example {32 ms} PH1\n   */\n  layoutShift: 'Layout shift @ {PH1}',\n  /**\n   * @description Text referring to the total cumulative score of a layout shift cluster.\n   */\n  total: 'Total',\n  /**\n   * @description Text for a culprit type of Unsized image.\n   */\n  unsizedImage: 'Unsized image',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/LayoutShiftDetails.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class LayoutShiftDetails extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #event: Trace.Types.Events.SyntheticLayoutShift|Trace.Types.Events.SyntheticLayoutShiftCluster|null = null;\n  #traceInsightsSets: Trace.Insights.Types.TraceInsightSets|null = null;\n  #parsedTrace: Trace.Handlers.Types.ParsedTrace|null = null;\n  #isFreshRecording = false;\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  setData(\n      event: Trace.Types.Events.SyntheticLayoutShift|Trace.Types.Events.SyntheticLayoutShiftCluster,\n      traceInsightsSets: Trace.Insights.Types.TraceInsightSets|null, parsedTrace: Trace.Handlers.Types.ParsedTrace|null,\n      isFreshRecording: boolean): void {\n    if (this.#event === event) {\n      return;\n    }\n    this.#event = event;\n    this.#traceInsightsSets = traceInsightsSets;\n    this.#parsedTrace = parsedTrace;\n    this.#isFreshRecording = isFreshRecording;\n    this.#render();\n  }\n\n  #renderTitle(event: Trace.Types.Events.SyntheticLayoutShift|Trace.Types.Events.SyntheticLayoutShiftCluster):\n      Lit.TemplateResult {\n    const title = Utils.EntryName.nameForEntry(event);\n    return html`\n      <div class=\"layout-shift-details-title\">\n        <div class=\"layout-shift-event-title\"></div>\n        ${title}\n      </div>\n    `;\n  }\n\n  #renderShiftedElements(\n      shift: Trace.Types.Events.SyntheticLayoutShift,\n      elementsShifted: Trace.Types.Events.TraceImpactedNode[]|undefined): Lit.LitTemplate {\n    // clang-format off\n    return html`\n      ${elementsShifted?.map(el => {\n        if (el.node_id !== undefined) {\n          return html`\n            <devtools-performance-node-link\n              .data=${{\n                backendNodeId: el.node_id,\n                frame: shift.args.frame,\n                fallbackHtmlSnippet: el.debug_name,\n              } as Insights.NodeLink.NodeLinkData}>\n            </devtools-performance-node-link>`;\n        }\n          return Lit.nothing;\n      })}`;\n    // clang-format on\n  }\n\n  #renderIframe(iframeRootCause: Trace.Insights.Models.CLSCulprits.IframeRootCause): Lit.TemplateResult|null {\n    const domLoadingId = iframeRootCause.frame as Protocol.Page.FrameId;\n    const domLoadingFrame = SDK.FrameManager.FrameManager.instance().getFrame(domLoadingId);\n\n    let el;\n    if (domLoadingFrame) {\n      el = LegacyComponents.Linkifier.Linkifier.linkifyRevealable(domLoadingFrame, domLoadingFrame.displayName());\n    } else {\n      el = this.#linkifyURL(iframeRootCause.url as Platform.DevToolsPath.UrlString);\n    }\n\n    // clang-format off\n    return html`\n      <span class=\"culprit\">\n        <span class=\"culprit-type\"> ${i18nString(UIStrings.injectedIframe)}: </span>\n        <span class=\"culprit-value\">${el}</span>\n      </span>`;\n    // clang-format on\n  }\n\n  #linkifyURL(url: Platform.DevToolsPath.UrlString): HTMLElement {\n    return LegacyComponents.Linkifier.Linkifier.linkifyURL(url, {\n      tabStop: true,\n      showColumnNumber: false,\n      inlineFrameIndex: 0,\n      maxLength: MAX_URL_LENGTH,\n    });\n  }\n\n  #renderFontRequest(request: Trace.Types.Events.SyntheticNetworkRequest): Lit.TemplateResult|null {\n    const linkifiedURL = this.#linkifyURL(request.args.data.url as Platform.DevToolsPath.UrlString);\n\n    // clang-format off\n    return html`\n      <span class=\"culprit\">\n        <span class=\"culprit-type\">${i18nString(UIStrings.fontRequest)}: </span>\n        <span class=\"culprit-value\">${linkifiedURL}</span>\n      </span>`;\n    // clang-format on\n  }\n\n  // TODO(crbug.com/368170718): use eventRef instead\n  #clickEvent(event: Trace.Types.Events.Event): void {\n    this.dispatchEvent(new Insights.EventRef.EventReferenceClick(event));\n  }\n\n  #renderAnimation(failure: Trace.Insights.Models.CLSCulprits.NoncompositedAnimationFailure): Lit.TemplateResult|null {\n    const event = failure.animation;\n    if (!event) {\n      return null;\n    }\n    // clang-format off\n    return html`\n        <span class=\"culprit\">\n        <span class=\"culprit-type\">${i18nString(UIStrings.nonCompositedAnimation)}: </span>\n        <button type=\"button\" class=\"culprit-value timeline-link\" @click=${() => this.#clickEvent(event)}>${i18nString(UIStrings.animation)}</button>\n      </span>`;\n    // clang-format on\n  }\n\n  #renderUnsizedImage(frame: string, unsizedImage: Trace.Insights.Models.CLSCulprits.UnsizedImage): Lit.TemplateResult\n      |null {\n    // clang-format off\n    const el = html`\n      <devtools-performance-node-link\n        .data=${{\n          backendNodeId: unsizedImage.backendNodeId,\n          frame,\n          fallbackUrl: unsizedImage.paintImageEvent.args.data.url,\n        } as Insights.NodeLink.NodeLinkData}>\n      </devtools-performance-node-link>`;\n    return html`\n      <span class=\"culprit\">\n        <span class=\"culprit-type\">${i18nString(UIStrings.unsizedImage)}: </span>\n        <span class=\"culprit-value\">${el}</span>\n      </span>`;\n    // clang-format on\n  }\n\n  #renderRootCauseValues(\n      frame: string,\n      rootCauses: Trace.Insights.Models.CLSCulprits.LayoutShiftRootCausesData|undefined): Lit.TemplateResult|null {\n    return html`\n      ${rootCauses?.webFonts.map(fontReq => this.#renderFontRequest(fontReq))}\n      ${rootCauses?.iframes.map(iframe => this.#renderIframe(iframe))}\n      ${rootCauses?.nonCompositedAnimations.map(failure => this.#renderAnimation(failure))}\n      ${rootCauses?.unsizedImages.map(unsizedImage => this.#renderUnsizedImage(frame, unsizedImage))}\n    `;\n  }\n\n  #renderStartTime(shift: Trace.Types.Events.SyntheticLayoutShift, parsedTrace: Trace.Handlers.Types.ParsedTrace):\n      Lit.TemplateResult|null {\n    const ts = Trace.Types.Timing.Micro(shift.ts - parsedTrace.Meta.traceBounds.min);\n    if (shift === this.#event) {\n      return html`${i18n.TimeUtilities.preciseMillisToString(Helpers.Timing.microToMilli(ts))}`;\n    }\n    const shiftTs = i18n.TimeUtilities.formatMicroSecondsTime(ts);\n    // clang-format off\n    return html`\n         <button type=\"button\" class=\"timeline-link\" @click=${() => this.#clickEvent(shift)}>${i18nString(UIStrings.layoutShift, {PH1: shiftTs})}</button>`;\n    // clang-format on\n  }\n\n  #renderShiftRow(\n      shift: Trace.Types.Events.SyntheticLayoutShift, parsedTrace: Trace.Handlers.Types.ParsedTrace,\n      elementsShifted: Trace.Types.Events.TraceImpactedNode[],\n      rootCauses: Trace.Insights.Models.CLSCulprits.LayoutShiftRootCausesData|undefined): Lit.TemplateResult|null {\n    const score = shift.args.data?.weighted_score_delta;\n    if (!score) {\n      return null;\n    }\n    const hasCulprits = Boolean(\n        rootCauses &&\n        (rootCauses.webFonts.length || rootCauses.iframes.length || rootCauses.nonCompositedAnimations.length ||\n         rootCauses.unsizedImages.length));\n\n    // clang-format off\n    return html`\n      <tr class=\"shift-row\" data-ts=${shift.ts}>\n        <td>${this.#renderStartTime(shift, parsedTrace)}</td>\n        <td>${(score.toFixed(4))}</td>\n        ${elementsShifted.length ? html`\n          <td>\n            <div class=\"elements-shifted\">\n              ${this.#renderShiftedElements(shift, elementsShifted)}\n            </div>\n          </td>` : Lit.nothing}\n        ${hasCulprits ? html`\n          <td class=\"culprits\">\n            ${this.#renderRootCauseValues(shift.args.frame, rootCauses)}\n          </td>` : Lit.nothing}\n      </tr>`;\n    // clang-format on\n  }\n\n  #renderParentCluster(\n      cluster: Trace.Types.Events.SyntheticLayoutShiftCluster|undefined,\n      parsedTrace: Trace.Handlers.Types.ParsedTrace): Lit.TemplateResult|null {\n    if (!cluster) {\n      return null;\n    }\n    const ts = Trace.Types.Timing.Micro(cluster.ts - (parsedTrace?.Meta.traceBounds.min ?? 0));\n    const clusterTs = i18n.TimeUtilities.formatMicroSecondsTime(ts);\n\n    // clang-format off\n    return html`\n      <span class=\"parent-cluster\">${i18nString(UIStrings.parentCluster)}:\n         <button type=\"button\" class=\"timeline-link\" @click=${() => this.#clickEvent(cluster)}>${i18nString(UIStrings.cluster, {PH1: clusterTs})}</button>\n      </span>`;\n    // clang-format on\n  }\n\n  #renderClusterTotalRow(cluster: Trace.Types.Events.SyntheticLayoutShiftCluster): Lit.TemplateResult|null {\n    // clang-format off\n    return html`\n      <td class=\"total-row\">${i18nString(UIStrings.total)}</td>\n      <td class=\"total-row\">${(cluster.clusterCumulativeScore.toFixed(4))}</td>`;\n    // clang-format on\n  }\n\n  #renderShiftDetails(\n      layoutShift: Trace.Types.Events.SyntheticLayoutShift,\n      traceInsightsSets: Trace.Insights.Types.TraceInsightSets|null,\n      parsedTrace: Trace.Handlers.Types.ParsedTrace,\n      ): Lit.TemplateResult|null {\n    if (!traceInsightsSets) {\n      return null;\n    }\n    const insightsId = layoutShift.args.data?.navigationId ?? Trace.Types.Events.NO_NAVIGATION;\n    const clsInsight = traceInsightsSets.get(insightsId)?.model.CLSCulprits;\n    if (!clsInsight || clsInsight instanceof Error) {\n      return null;\n    }\n\n    const rootCauses = clsInsight.shifts.get(layoutShift);\n\n    let elementsShifted = layoutShift.args.data?.impacted_nodes ?? [];\n    if (!this.#isFreshRecording) {\n      elementsShifted = elementsShifted?.filter(el => el.debug_name);\n    }\n\n    const hasCulprits = rootCauses &&\n        (rootCauses.webFonts.length || rootCauses.iframes.length || rootCauses.nonCompositedAnimations.length ||\n         rootCauses.unsizedImages.length);\n    const hasShiftedElements = elementsShifted?.length;\n\n    const parentCluster = clsInsight.clusters.find(cluster => {\n      return cluster.events.find(event => event === layoutShift);\n    });\n\n    // clang-format off\n    return html`\n      <table class=\"layout-shift-details-table\">\n        <thead class=\"table-title\">\n          <tr>\n            <th>${i18nString(UIStrings.startTime)}</th>\n            <th>${i18nString(UIStrings.shiftScore)}</th>\n            ${hasShiftedElements ? html`\n              <th>${i18nString(UIStrings.elementsShifted)}</th>` : Lit.nothing}\n            ${hasCulprits ? html`\n              <th>${i18nString(UIStrings.culprit)}</th> ` : Lit.nothing}\n          </tr>\n        </thead>\n        <tbody>\n          ${this.#renderShiftRow(layoutShift, parsedTrace, elementsShifted, rootCauses)}\n        </tbody>\n      </table>\n      ${this.#renderParentCluster(parentCluster, parsedTrace)}\n    `;\n    // clang-format on\n  }\n\n  #renderClusterDetails(\n      cluster: Trace.Types.Events.SyntheticLayoutShiftCluster,\n      traceInsightsSets: Trace.Insights.Types.TraceInsightSets|null,\n      parsedTrace: Trace.Handlers.Types.ParsedTrace): Lit.TemplateResult|null {\n    if (!traceInsightsSets) {\n      return null;\n    }\n    const insightsId = cluster.navigationId ?? Trace.Types.Events.NO_NAVIGATION;\n    const clsInsight = traceInsightsSets.get(insightsId)?.model.CLSCulprits;\n    if (!clsInsight || clsInsight instanceof Error) {\n      return null;\n    }\n\n    // This finds the culprits of the cluster and returns an array of the culprits.\n    const clusterCulprits = Array.from(clsInsight.shifts.entries())\n                                .filter(([key]) => cluster.events.includes(key))\n                                .map(([, value]) => value)\n                                .flatMap(x => Object.values(x))\n                                .flat();\n\n    const hasCulprits = Boolean(clusterCulprits.length);\n\n    // clang-format off\n        return html`\n          <table class=\"layout-shift-details-table\">\n            <thead class=\"table-title\">\n              <tr>\n                <th>${i18nString(UIStrings.startTime)}</th>\n                <th>${i18nString(UIStrings.shiftScore)}</th>\n                <th>${i18nString(UIStrings.elementsShifted)}</th>\n                ${hasCulprits ? html`\n                  <th>${i18nString(UIStrings.culprit)}</th> ` : Lit.nothing}\n              </tr>\n            </thead>\n            <tbody>\n              ${cluster.events.map(shift => {\n                const rootCauses = clsInsight.shifts.get(shift);\n                const elementsShifted = shift.args.data?.impacted_nodes ?? [];\n                return this.#renderShiftRow(shift, parsedTrace, elementsShifted, rootCauses);\n              })}\n              ${this.#renderClusterTotalRow(cluster)}\n            </tbody>\n          </table>\n        `;\n    // clang-format on\n  }\n\n  #render(): void {\n    if (!this.#event || !this.#parsedTrace) {\n      return;\n    }\n\n    // clang-format off\n    const output = html`\n      <style>${layoutShiftDetailsStyles}</style>\n      <style>${Buttons.textButtonStyles}</style>\n      <div class=\"layout-shift-summary-details\">\n        <div\n          class=\"event-details\"\n          @mouseover=${this.#togglePopover}\n          @mouseleave=${this.#togglePopover}\n        >\n          ${this.#renderTitle(this.#event)}\n          ${Trace.Types.Events.isSyntheticLayoutShift(this.#event)\n            ? this.#renderShiftDetails(this.#event, this.#traceInsightsSets, this.#parsedTrace)\n            : this.#renderClusterDetails(this.#event, this.#traceInsightsSets, this.#parsedTrace)\n          }\n        </div>\n      </div>\n    `;\n    // clang-format on\n    Lit.render(output, this.#shadow, {host: this});\n  }\n\n  #togglePopover(e: MouseEvent): void {\n    const show = e.type === 'mouseover';\n    if (e.type === 'mouseleave') {\n      this.dispatchEvent(new CustomEvent('toggle-popover', {detail: {show}, bubbles: true, composed: true}));\n    }\n\n    if (!(e.target instanceof HTMLElement) || !this.#event) {\n      return;\n    }\n    const rowEl = e.target.closest('tbody tr');\n    if (!rowEl?.parentElement) {\n      return;\n    }\n\n    // Grab the associated trace event of this row.\n    const event = Trace.Types.Events.isSyntheticLayoutShift(this.#event) ?\n        this.#event :\n        this.#event.events.find(e => e.ts === parseInt(rowEl.getAttribute('data-ts') ?? '', 10));\n    this.dispatchEvent(new CustomEvent('toggle-popover', {detail: {event, show}, bubbles: true, composed: true}));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-layout-shift-details': LayoutShiftDetails;\n  }\n}\n\ncustomElements.define('devtools-performance-layout-shift-details', LayoutShiftDetails);\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.layout-shift-details-title,\n.cluster-details-title {\n  padding-bottom: var(--sys-size-5);\n  display: flex;\n  align-items: center;\n\n  .layout-shift-event-title,\n  .cluster-event-title {\n    background-color: var(--app-color-rendering);\n    width: var(--sys-size-6);\n    height: var(--sys-size-6);\n    border: var(--sys-size-1) solid var(--sys-color-divider);\n    display: inline-block;\n    margin-right: var(--sys-size-3);\n  }\n}\n\n.layout-shift-details-table {\n  font: var(--sys-typescale-body4-regular);\n  margin-bottom: var(--sys-size-4);\n  text-align: left;\n  border-block: var(--sys-size-1) solid var(--sys-color-divider);\n  border-collapse: collapse;\n  font-variant-numeric: tabular-nums;\n\n  th,\n  td {\n    padding-right: var(--sys-size-4);\n    min-width: var(--sys-size-20);\n    max-width: var(--sys-size-28);\n  }\n}\n\n.table-title {\n  th {\n    font: var(--sys-typescale-body4-medium);\n  }\n\n  tr {\n    border-bottom: var(--sys-size-1) solid var(--sys-color-divider);\n  }\n}\n\n/** TODO: This is duplicated in sidebarInsights.css. Should make a component. */\n.timeline-link {\n  cursor: pointer;\n  text-decoration: underline;\n  color: var(--sys-color-primary);\n  /* for a11y reasons this is a button, so we have to remove some default\n   * styling */\n  background: none;\n  border: none;\n  padding: 0;\n  font: inherit;\n  text-align: left;\n}\n\n.timeline-link.invalid-link {\n  color: var(--sys-color-state-disabled);\n}\n\n.details-row {\n  display: flex;\n  min-height: var(--sys-size-9);\n}\n\n.title {\n  color: var(--sys-color-token-subtle);\n  overflow: hidden;\n  padding-right: var(--sys-size-5);\n  display: inline-block;\n  vertical-align: top;\n}\n\n.culprit {\n  display: inline-flex;\n  flex-direction: row;\n  gap: var(--sys-size-3);\n}\n\n.value {\n  display: inline-block;\n  user-select: text;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  padding: 0 var(--sys-size-3);\n}\n\n.layout-shift-summary-details,\n.layout-shift-cluster-summary-details {\n  font: var(--sys-typescale-body4-regular);\n  display: flex;\n  flex-direction: column;\n  column-gap: var(--sys-size-4);\n  padding: var(--sys-size-6) var(--sys-size-6) 0 var(--sys-size-6);\n}\n\n.culprits {\n  display: flex;\n  flex-direction: column;\n}\n\n.shift-row:not(:last-child) {\n  border-bottom: var(--sys-size-1) solid var(--sys-color-divider);\n}\n\n.total-row {\n  font: var(--sys-typescale-body4-medium);\n}\n\n/*# sourceURL=${import.meta.resolve('./layoutShiftDetails.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/icon_button/icon_button.js';\nimport './CPUThrottlingSelector.js';\nimport './FieldSettingsDialog.js';\nimport './NetworkThrottlingSelector.js';\nimport '../../../ui/components/menus/menus.js';\nimport './MetricCard.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as EmulationModel from '../../../models/emulation/emulation.js';\nimport * as LiveMetrics from '../../../models/live-metrics/live-metrics.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LegacyWrapper from '../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport type * as Menus from '../../../ui/components/menus/menus.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport type * as Settings from '../../../ui/components/settings/settings.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../../mobile_throttling/mobile_throttling.js';\nimport {getThrottlingRecommendations, md} from '../utils/Helpers.js';\n\nimport liveMetricsViewStyles from './liveMetricsView.css.js';\nimport type {MetricCardData} from './MetricCard.js';\nimport metricValueStyles from './metricValueStyles.css.js';\nimport {CLS_THRESHOLDS, INP_THRESHOLDS, renderMetricValue} from './Utils.js';\n\nconst {html, nothing} = Lit;\n\ntype DeviceOption = CrUXManager.DeviceScope|'AUTO';\n\nconst DEVICE_OPTION_LIST: DeviceOption[] = ['AUTO', ...CrUXManager.DEVICE_SCOPE_LIST];\n\nconst RTT_MINIMUM = 60;\n\nconst UIStrings = {\n  /**\n   * @description Title of a view that shows performance metrics from the local environment and field metrics collected from real users. \"field metrics\" should be interpreted as \"real user metrics\".\n   */\n  localAndFieldMetrics: 'Local and field metrics',\n  /**\n   * @description Title of a view that shows performance metrics from the local environment.\n   */\n  localMetrics: 'Local metrics',\n  /**\n   * @description Accessible label for a section that logs user interactions and layout shifts. A layout shift is an event that shifts content in the layout of the page causing a jarring experience for the user.\n   */\n  eventLogs: 'Interaction and layout shift logs section',\n  /**\n   * @description Title of a section that lists user interactions.\n   */\n  interactions: 'Interactions',\n  /**\n   * @description Title of a section that lists layout shifts. A layout shift is an event that shifts content in the layout of the page causing a jarring experience for the user.\n   */\n  layoutShifts: 'Layout shifts',\n  /**\n   * @description Title of a sidebar section that shows options for the user to take after using the main view.\n   */\n  nextSteps: 'Next steps',\n  /**\n   * @description Title of a section that shows options for how real user data in the field should be fetched. This should be interpreted as \"Real user data\".\n   */\n  fieldMetricsTitle: 'Field metrics',\n  /**\n   * @description Title of a section that shows settings to control the developers local testing environment.\n   */\n  environmentSettings: 'Environment settings',\n  /**\n   * @description Label for an select box that selects which device type field metrics be shown for (e.g. desktop/mobile/all devices/etc). \"field metrics\" should be interpreted as \"real user data\".\n   * @example {Mobile} PH1\n   */\n  showFieldDataForDevice: 'Show field metrics for device type: {PH1}',\n  /**\n   * @description Text indicating that there is not enough data to report real user statistics.\n   */\n  notEnoughData: 'Not enough data',\n  /**\n   * @description Label for a text block that describes the network connections of real users.\n   * @example {75th percentile is similar to Slow 4G throttling} PH1\n   */\n  network: 'Network: {PH1}',\n  /**\n   * @description Label for an select box that selects which device type real user data should be shown for (e.g. desktop/mobile/all devices/etc).\n   * @example {Mobile} PH1\n   */\n  device: 'Device: {PH1}',\n  /**\n   * @description Label for an option to select all device form factors.\n   */\n  allDevices: 'All devices',\n  /**\n   * @description Label for an option to select the desktop form factor.\n   */\n  desktop: 'Desktop',\n  /**\n   * @description Label for an option to select the mobile form factor.\n   */\n  mobile: 'Mobile',\n  /**\n   * @description Label for an option to select the tablet form factor.\n   */\n  tablet: 'Tablet',\n  /**\n   * @description Label for an option to to automatically select the form factor. The automatic selection will be displayed in PH1.\n   * @example {Desktop} PH1\n   */\n  auto: 'Auto ({PH1})',\n  /**\n   * @description Label for an option that is loading.\n   * @example {Desktop} PH1\n   */\n  loadingOption: '{PH1} - Loading…',\n  /**\n   * @description Label for an option that does not have enough data and the user should ignore.\n   * @example {Desktop} PH1\n   */\n  needsDataOption: '{PH1} - No data',\n  /**\n   * @description Label for an option that selects the page's specific URL as opposed to it's entire origin/domain.\n   */\n  urlOption: 'URL',\n  /**\n   * @description Label for an option that selects the page's entire origin/domain as opposed to it's specific URL.\n   */\n  originOption: 'Origin',\n  /**\n   * @description Label for an option that selects the page's specific URL as opposed to it's entire origin/domain.\n   * @example {https://example.com/} PH1\n   */\n  urlOptionWithKey: 'URL: {PH1}',\n  /**\n   * @description Label for an option that selects the page's entire origin/domain as opposed to it's specific URL.\n   * @example {https://example.com} PH1\n   */\n  originOptionWithKey: 'Origin: {PH1}',\n  /**\n   * @description Label for an combo-box that indicates if field metrics should be taken from the page's URL or it's origin/domain. \"field metrics\" should be interpreted as \"real user data\".\n   * @example {Origin: https://example.com} PH1\n   */\n  showFieldDataForPage: 'Show field metrics for {PH1}',\n  /**\n   * @description Tooltip text explaining that real user connections are similar to a test environment with no throttling. \"throttling\" is when the network is intentionally slowed down to simulate a slower connection.\n   */\n  tryDisablingThrottling: '75th percentile is too fast to simulate with throttling',\n  /**\n   * @description Tooltip text explaining that real user connections are similar to a specif network throttling setup. \"throttling\" is when the network is intentionally slowed down to simulate a slower connection.\n   * @example {Slow 4G} PH1\n   */\n  tryUsingThrottling: '75th percentile is similar to {PH1} throttling',\n  /**\n   * @description Text block listing what percentage of real users are on different device form factors.\n   * @example {60%} PH1\n   * @example {30%} PH2\n   */\n  percentDevices: '{PH1}% mobile, {PH2}% desktop',\n  /**\n   * @description Text block explaining how to simulate different mobile and desktop devices.\n   */\n  useDeviceToolbar:\n      'Use the [device toolbar](https://developer.chrome.com/docs/devtools/device-mode) and configure throttling to simulate real user environments and identify more performance issues.',\n  /**\n   * @description Text label for a checkbox that controls if the network cache is disabled.\n   */\n  disableNetworkCache: 'Disable network cache',\n  /**\n   * @description Text label for a link to the Largest Contentful Paint (LCP) related page element. This element represents the largest content on the page. \"LCP\" should not be translated.\n   */\n  lcpElement: 'LCP element',\n  /**\n   * @description Text label for a button that reveals the user interaction associated with the Interaction to Next Paint (INP) performance metric. \"INP\" should not be translated.\n   */\n  inpInteractionLink: 'INP interaction',\n  /**\n   * @description Text label for a button that reveals the cluster of layout shift events that affected the page content the most. A cluster is a group of layout shift events that occur in quick succession.\n   */\n  worstCluster: 'Worst cluster',\n  /**\n   * @description [ICU Syntax] Text content of a button that reveals the cluster of layout shift events that affected the page content the most. A layout shift is an event that shifts content in the layout of the page causing a jarring experience for the user. This text will indicate how many shifts were in the cluster.\n   * @example {3} shiftCount\n   */\n  numShifts: `{shiftCount, plural,\n    =1 {{shiftCount} shift}\n    other {{shiftCount} shifts}\n  }`,\n  /**\n   * @description Label for a a range of dates that represents the period of time a set of field metrics is collected from.\n   * @example {Oct 1, 2024 - Nov 1, 2024} PH1\n   */\n  collectionPeriod: 'Collection period: {PH1}',\n  /**\n   * @description Text showing a range of dates meant to represent a period of time.\n   * @example {Oct 1, 2024} PH1\n   * @example {Nov 1, 2024} PH2\n   */\n  dateRange: '{PH1} - {PH2}',\n  /**\n   * @description Text block telling the user to see how performance metrics measured on their local computer compare to data collected from real users. PH1 will be a link to more information about the Chrome UX Report and the link text will be untranslated because it is a product name.\n   * @example {Chrome UX Report} PH1\n   */\n  seeHowYourLocalMetricsCompare: 'See how your local metrics compare to real user data in the {PH1}.',\n  /**\n   * @description Text for a link that goes to more documentation about local and field metrics. \"Local\" refers to performance metrics measured in the developers local environment. \"field metrics\" should be interpreted as \"real user data\".\n   */\n  localFieldLearnMoreLink: 'Learn more about local and field metrics',\n  /**\n   * @description Tooltip text for a link that goes to documentation explaining the difference between local and field metrics. \"Local metrics\" are performance metrics measured in the developers local environment. \"field metrics\" should be interpreted as \"real user data\".\n   */\n  localFieldLearnMoreTooltip:\n      'Local metrics are captured from the current page using your network connection and device. field metrics is measured by real users using many different network connections and devices.',\n  /**\n   * @description Tooltip text explaining that this user interaction was ignored when calculating the Interaction to Next Paint (INP) metric because the interaction delay fell beyond the 98th percentile of interaction delays on this page. \"INP\" is an acronym and should not be translated.\n   */\n  interactionExcluded:\n      'INP is calculated using the 98th percentile of interaction delays, so some interaction delays may be larger than the INP value.',\n  /**\n   * @description Tooltip for a button that will remove everything from the currently selected log.\n   */\n  clearCurrentLog: 'Clear the current log',\n  /**\n   * @description Title for a page load phase that measures the time between when the page load starts and the time when the first byte of the initial document is downloaded.\n   */\n  timeToFirstByte: 'Time to first byte',\n  /**\n   * @description Title for a page load phase that measures the time between when the first byte of the initial document is downloaded and when the request for the largest image content starts.\n   */\n  resourceLoadDelay: 'Resource load delay',\n  /**\n   * @description Title for a page load phase that measures the time between when the request for the largest image content starts and when it finishes.\n   */\n  resourceLoadDuration: 'Resource load duration',\n  /**\n   * @description Title for a page load phase that measures the time between when the request for the largest image content finishes and when the largest image element is rendered on the page.\n   */\n  elementRenderDelay: 'Element render delay',\n  /**\n   * @description Title for a phase during a user interaction that measures the time between when the interaction starts and when the browser starts running interaction handlers.\n   */\n  inputDelay: 'Input delay',\n  /**\n   * @description Title for a phase during a user interaction that measures the time between when the browser starts running interaction handlers and when the browser finishes running interaction handlers.\n   */\n  processingDuration: 'Processing duration',\n  /**\n   * @description Title for a phase during a user interaction that measures the time between when the browser finishes running interaction handlers and when the browser renders the next visual frame that shows the result of the interaction.\n   */\n  presentationDelay: 'Presentation delay',\n  /**\n   * @description Tooltip text for a status chip in a list of user interactions that indicates if the associated interaction is the interaction used in the Interaction to Next Paint (INP) performance metric because it's interaction delay is at the 98th percentile.\n   */\n  inpInteraction: 'The INP interaction is at the 98th percentile of interaction delays.',\n  /**\n   * @description Tooltip text for a button that reveals the user interaction associated with the Interaction to Next Paint (INP) performance metric.\n   */\n  showInpInteraction: 'Go to the INP interaction.',\n  /**\n   * @description Tooltip text for a button that reveals the cluster of layout shift events that affected the page content the most. A layout shift is an event that shifts content in the layout of the page causing a jarring experience for the user. A cluster is a group of layout shift events that occur in quick succession.\n   */\n  showClsCluster: 'Go to worst layout shift cluster.',\n  /**\n   * @description Column header for table cell values representing the phase/component/stage/section of a larger duration.\n   */\n  phase: 'Phase',\n  /**\n   * @description Column header for table cell values representing a phase duration (in milliseconds) that was measured in the developers local environment.\n   */\n  duration: 'Local duration (ms)',\n  /**\n   * @description Tooltip text for a button that will open the Chrome DevTools console to and log additional details about a user interaction.\n   */\n  logToConsole: 'Log additional interaction data to the console',\n  /**\n   * @description Title of a view that can be used to analyze the performance of a Node process as a timeline. \"Node\" is a product name and should not be translated.\n   */\n  nodePerformanceTimeline: 'Node performance',\n  /**\n   * @description Description of a view that can be used to analyze the performance of a Node process as a timeline. \"Node\" is a product name and should not be translated.\n   */\n  nodeClickToRecord: 'Record a performance timeline of the connected Node process.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/LiveMetricsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class LiveMetricsView extends LegacyWrapper.LegacyWrapper.WrappableComponent {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #isNode = false;\n\n  #lcpValue?: LiveMetrics.LcpValue;\n  #clsValue?: LiveMetrics.ClsValue;\n  #inpValue?: LiveMetrics.InpValue;\n  #interactions: LiveMetrics.InteractionMap = new Map();\n  #layoutShifts: LiveMetrics.LayoutShift[] = [];\n\n  #cruxManager = CrUXManager.CrUXManager.instance();\n\n  #toggleRecordAction: UI.ActionRegistration.Action;\n  #recordReloadAction: UI.ActionRegistration.Action;\n\n  #logsEl?: LiveMetricsLogs;\n  #tooltipContainerEl?: Element;\n  #interactionsListEl?: HTMLElement;\n  #layoutShiftsListEl?: HTMLElement;\n  #listIsScrolling = false;\n  #deviceModeModel = EmulationModel.DeviceModeModel.DeviceModeModel.tryInstance();\n\n  constructor() {\n    super();\n\n    this.#toggleRecordAction = UI.ActionRegistry.ActionRegistry.instance().getAction('timeline.toggle-recording');\n    this.#recordReloadAction = UI.ActionRegistry.ActionRegistry.instance().getAction('timeline.record-reload');\n  }\n\n  set isNode(isNode: boolean) {\n    this.#isNode = isNode;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onMetricStatus(event: {data: LiveMetrics.StatusEvent}): void {\n    this.#lcpValue = event.data.lcp;\n    this.#clsValue = event.data.cls;\n    this.#inpValue = event.data.inp;\n\n    const hasNewLS = this.#layoutShifts.length < event.data.layoutShifts.length;\n    this.#layoutShifts = [...event.data.layoutShifts];\n\n    const hasNewInteraction = this.#interactions.size < event.data.interactions.size;\n    this.#interactions = new Map(event.data.interactions);\n\n    const renderPromise = ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n\n    if (hasNewInteraction && this.#interactionsListEl) {\n      this.#keepScrolledToBottom(renderPromise, this.#interactionsListEl);\n    }\n\n    if (hasNewLS && this.#layoutShiftsListEl) {\n      this.#keepScrolledToBottom(renderPromise, this.#layoutShiftsListEl);\n    }\n  }\n\n  #keepScrolledToBottom(renderPromise: Promise<void>, listEl: HTMLElement): void {\n    if (!listEl.checkVisibility()) {\n      return;\n    }\n\n    const isAtBottom = Math.abs(listEl.scrollHeight - listEl.clientHeight - listEl.scrollTop) <= 1;\n\n    // We shouldn't scroll to the bottom if the list wasn't already at the bottom.\n    // However, if a new item appears while the animation for a previous item is still going,\n    // then we should \"finish\" the scroll by sending another scroll command even if the scroll position\n    // the element hasn't scrolled all the way to the bottom yet.\n    if (!isAtBottom && !this.#listIsScrolling) {\n      return;\n    }\n\n    void renderPromise.then(() => {\n      requestAnimationFrame(() => {\n        this.#listIsScrolling = true;\n        listEl.addEventListener('scrollend', () => {\n          this.#listIsScrolling = false;\n        }, {once: true});\n        listEl.scrollTo({top: listEl.scrollHeight, behavior: 'smooth'});\n      });\n    });\n  }\n\n  #onFieldDataChanged(): void {\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onEmulationChanged(): void {\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  async #refreshFieldDataForCurrentPage(): Promise<void> {\n    await this.#cruxManager.refresh();\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  connectedCallback(): void {\n    const liveMetrics = LiveMetrics.LiveMetrics.instance();\n    liveMetrics.addEventListener(LiveMetrics.Events.STATUS, this.#onMetricStatus, this);\n\n    const cruxManager = CrUXManager.CrUXManager.instance();\n    cruxManager.addEventListener(CrUXManager.Events.FIELD_DATA_CHANGED, this.#onFieldDataChanged, this);\n\n    this.#deviceModeModel?.addEventListener(\n        EmulationModel.DeviceModeModel.Events.UPDATED, this.#onEmulationChanged, this);\n\n    if (cruxManager.getConfigSetting().get().enabled) {\n      void this.#refreshFieldDataForCurrentPage();\n    }\n\n    this.#lcpValue = liveMetrics.lcpValue;\n    this.#clsValue = liveMetrics.clsValue;\n    this.#inpValue = liveMetrics.inpValue;\n    this.#interactions = liveMetrics.interactions;\n    this.#layoutShifts = liveMetrics.layoutShifts;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  disconnectedCallback(): void {\n    LiveMetrics.LiveMetrics.instance().removeEventListener(LiveMetrics.Events.STATUS, this.#onMetricStatus, this);\n\n    const cruxManager = CrUXManager.CrUXManager.instance();\n    cruxManager.removeEventListener(CrUXManager.Events.FIELD_DATA_CHANGED, this.#onFieldDataChanged, this);\n\n    this.#deviceModeModel?.removeEventListener(\n        EmulationModel.DeviceModeModel.Events.UPDATED, this.#onEmulationChanged, this);\n  }\n\n  #getLcpFieldPhases(): LiveMetrics.LcpValue['phases']|null {\n    const ttfb = this.#cruxManager.getSelectedFieldMetricData('largest_contentful_paint_image_time_to_first_byte')\n                     ?.percentiles?.p75;\n    const loadDelay =\n        this.#cruxManager.getSelectedFieldMetricData('largest_contentful_paint_image_resource_load_delay')\n            ?.percentiles?.p75;\n    const loadDuration =\n        this.#cruxManager.getSelectedFieldMetricData('largest_contentful_paint_image_resource_load_duration')\n            ?.percentiles?.p75;\n    const renderDelay =\n        this.#cruxManager.getSelectedFieldMetricData('largest_contentful_paint_image_element_render_delay')\n            ?.percentiles?.p75;\n\n    if (typeof ttfb !== 'number' || typeof loadDelay !== 'number' || typeof loadDuration !== 'number' ||\n        typeof renderDelay !== 'number') {\n      return null;\n    }\n\n    return {\n      timeToFirstByte: Trace.Types.Timing.Milli(ttfb),\n      resourceLoadDelay: Trace.Types.Timing.Milli(loadDelay),\n      resourceLoadTime: Trace.Types.Timing.Milli(loadDuration),\n      elementRenderDelay: Trace.Types.Timing.Milli(renderDelay),\n    };\n  }\n\n  #renderLcpCard(): Lit.LitTemplate {\n    const fieldData = this.#cruxManager.getSelectedFieldMetricData('largest_contentful_paint');\n    const nodeLink = this.#lcpValue?.nodeRef?.link;\n    const phases = this.#lcpValue?.phases;\n\n    const fieldPhases = this.#getLcpFieldPhases();\n\n    // clang-format off\n    return html`\n      <devtools-metric-card .data=${{\n        metric: 'LCP',\n        localValue: this.#lcpValue?.value,\n        fieldValue: fieldData?.percentiles?.p75,\n        histogram: fieldData?.histogram,\n        tooltipContainer: this.#tooltipContainerEl,\n        warnings: this.#lcpValue?.warnings,\n        phases: phases && [\n          [i18nString(UIStrings.timeToFirstByte), phases.timeToFirstByte, fieldPhases?.timeToFirstByte],\n          [i18nString(UIStrings.resourceLoadDelay), phases.resourceLoadDelay, fieldPhases?.resourceLoadDelay],\n          [i18nString(UIStrings.resourceLoadDuration), phases.resourceLoadTime, fieldPhases?.resourceLoadTime],\n          [i18nString(UIStrings.elementRenderDelay), phases.elementRenderDelay, fieldPhases?.elementRenderDelay],\n        ],\n      } as MetricCardData}>\n        ${nodeLink ? html`\n            <div class=\"related-info\" slot=\"extra-info\">\n              <span class=\"related-info-label\">${i18nString(UIStrings.lcpElement)}</span>\n              <span class=\"related-info-link\">${nodeLink}</span>\n            </div>\n          `\n          : nothing}\n      </devtools-metric-card>\n    `;\n    // clang-format on\n  }\n\n  #renderClsCard(): Lit.LitTemplate {\n    const fieldData = this.#cruxManager.getSelectedFieldMetricData('cumulative_layout_shift');\n\n    const clusterIds = new Set(this.#clsValue?.clusterShiftIds || []);\n    const clusterIsVisible =\n        clusterIds.size > 0 && this.#layoutShifts.some(layoutShift => clusterIds.has(layoutShift.uniqueLayoutShiftId));\n\n    // clang-format off\n    return html`\n      <devtools-metric-card .data=${{\n        metric: 'CLS',\n        localValue: this.#clsValue?.value,\n        fieldValue: fieldData?.percentiles?.p75,\n        histogram: fieldData?.histogram,\n        tooltipContainer: this.#tooltipContainerEl,\n        warnings: this.#clsValue?.warnings,\n      } as MetricCardData}>\n        ${clusterIsVisible ? html`\n          <div class=\"related-info\" slot=\"extra-info\">\n            <span class=\"related-info-label\">${i18nString(UIStrings.worstCluster)}</span>\n            <button\n              class=\"link-to-log\"\n              title=${i18nString(UIStrings.showClsCluster)}\n              @click=${() => this.#revealLayoutShiftCluster(clusterIds)}\n              jslog=${VisualLogging.action('timeline.landing.show-cls-cluster').track({click: true})}\n            >${i18nString(UIStrings.numShifts, {shiftCount: clusterIds.size})}</button>\n          </div>\n        ` : nothing}\n      </devtools-metric-card>\n    `;\n    // clang-format on\n  }\n\n  #renderInpCard(): Lit.LitTemplate {\n    const fieldData = this.#cruxManager.getSelectedFieldMetricData('interaction_to_next_paint');\n    const phases = this.#inpValue?.phases;\n    const interaction = this.#inpValue && this.#interactions.get(this.#inpValue.interactionId);\n\n    // clang-format off\n    return html`\n      <devtools-metric-card .data=${{\n        metric: 'INP',\n        localValue: this.#inpValue?.value,\n        fieldValue: fieldData?.percentiles?.p75,\n        histogram: fieldData?.histogram,\n        tooltipContainer: this.#tooltipContainerEl,\n        warnings: this.#inpValue?.warnings,\n        phases: phases && [\n          [i18nString(UIStrings.inputDelay), phases.inputDelay],\n          [i18nString(UIStrings.processingDuration), phases.processingDuration],\n          [i18nString(UIStrings.presentationDelay), phases.presentationDelay],\n        ],\n      } as MetricCardData}>\n        ${interaction ? html`\n          <div class=\"related-info\" slot=\"extra-info\">\n            <span class=\"related-info-label\">${i18nString(UIStrings.inpInteractionLink)}</span>\n            <button\n              class=\"link-to-log\"\n              title=${i18nString(UIStrings.showInpInteraction)}\n              @click=${() => this.#revealInteraction(interaction)}\n              jslog=${VisualLogging.action('timeline.landing.show-inp-interaction').track({click: true})}\n            >${interaction.interactionType}</button>\n          </div>\n        ` : nothing}\n      </devtools-metric-card>\n    `;\n    // clang-format on\n  }\n\n  #renderRecordAction(action: UI.ActionRegistration.Action): Lit.LitTemplate {\n    function onClick(): void {\n      void action.execute();\n    }\n\n    // clang-format off\n    return html`\n      <div class=\"record-action\">\n        <devtools-button @click=${onClick} .data=${{\n            variant: Buttons.Button.Variant.TEXT,\n            size: Buttons.Button.Size.REGULAR,\n            iconName: action.icon(),\n            title: action.title(),\n            jslogContext: action.id(),\n        } as Buttons.Button.ButtonData}>\n          ${action.title()}\n        </devtools-button>\n        <span class=\"shortcut-label\">${UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutTitleForAction(action.id())}</span>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #getNetworkRecTitle(): string|null {\n    const response = this.#cruxManager.getSelectedFieldMetricData('round_trip_time');\n    if (!response?.percentiles) {\n      return null;\n    }\n\n    const rtt = Number(response.percentiles.p75);\n    if (!Number.isFinite(rtt)) {\n      return null;\n    }\n\n    if (rtt < RTT_MINIMUM) {\n      return i18nString(UIStrings.tryDisablingThrottling);\n    }\n\n    const conditions = MobileThrottling.ThrottlingPresets.ThrottlingPresets.getRecommendedNetworkPreset(rtt);\n    if (!conditions) {\n      return null;\n    }\n\n    const title = typeof conditions.title === 'function' ? conditions.title() : conditions.title;\n    return i18nString(UIStrings.tryUsingThrottling, {PH1: title});\n  }\n\n  #getDeviceRec(): string|null {\n    // `form_factors` metric is only populated if CrUX data is fetched for all devices.\n    const fractions = this.#cruxManager.getFieldResponse(this.#cruxManager.fieldPageScope, 'ALL')\n                          ?.record.metrics.form_factors?.fractions;\n    if (!fractions) {\n      return null;\n    }\n\n    return i18nString(UIStrings.percentDevices, {\n      PH1: Math.round(fractions.phone * 100),\n      PH2: Math.round(fractions.desktop * 100),\n    });\n  }\n\n  #renderRecordingSettings(): Lit.LitTemplate {\n    const fieldEnabled = this.#cruxManager.getConfigSetting().get().enabled;\n\n    const deviceRecEl = document.createElement('span');\n    deviceRecEl.classList.add('environment-rec');\n    deviceRecEl.textContent = this.#getDeviceRec() || i18nString(UIStrings.notEnoughData);\n\n    const networkRecEl = document.createElement('span');\n    networkRecEl.classList.add('environment-rec');\n    networkRecEl.textContent = this.#getNetworkRecTitle() || i18nString(UIStrings.notEnoughData);\n\n    const recs = getThrottlingRecommendations();\n\n    // clang-format off\n    return html`\n      <h3 class=\"card-title\">${i18nString(UIStrings.environmentSettings)}</h3>\n      <div class=\"device-toolbar-description\">${md(i18nString(UIStrings.useDeviceToolbar))}</div>\n      ${fieldEnabled ? html`\n        <ul class=\"environment-recs-list\">\n          <li>${i18n.i18n.getFormatLocalizedString(str_, UIStrings.device, {PH1: deviceRecEl})}</li>\n          <li>${i18n.i18n.getFormatLocalizedString(str_, UIStrings.network, {PH1: networkRecEl})}</li>\n        </ul>\n      ` : nothing}\n      <div class=\"environment-option\">\n        <devtools-cpu-throttling-selector .recommendedOption=${recs.cpuOption}></devtools-cpu-throttling-selector>\n      </div>\n      <div class=\"environment-option\">\n        <devtools-network-throttling-selector .recommendedConditions=${recs.networkConditions}></devtools-network-throttling-selector>\n      </div>\n      <div class=\"environment-option\">\n        <setting-checkbox\n          class=\"network-cache-setting\"\n          .data=${{\n            setting: Common.Settings.Settings.instance().moduleSetting('cache-disabled'),\n            textOverride: i18nString(UIStrings.disableNetworkCache),\n          } as Settings.SettingCheckbox.SettingCheckboxData}\n        ></setting-checkbox>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #getPageScopeLabel(pageScope: CrUXManager.PageScope): string {\n    const key = this.#cruxManager.pageResult?.[`${pageScope}-ALL`]?.record.key[pageScope];\n    if (key) {\n      return pageScope === 'url' ? i18nString(UIStrings.urlOptionWithKey, {PH1: key}) :\n                                   i18nString(UIStrings.originOptionWithKey, {PH1: key});\n    }\n\n    const baseLabel = pageScope === 'url' ? i18nString(UIStrings.urlOption) : i18nString(UIStrings.originOption);\n    return i18nString(UIStrings.needsDataOption, {PH1: baseLabel});\n  }\n\n  #onPageScopeMenuItemSelected(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void {\n    if (event.itemValue === 'url') {\n      this.#cruxManager.fieldPageScope = 'url';\n    } else {\n      this.#cruxManager.fieldPageScope = 'origin';\n    }\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #renderPageScopeSetting(): Lit.LitTemplate {\n    if (!this.#cruxManager.getConfigSetting().get().enabled) {\n      return Lit.nothing;\n    }\n\n    const urlLabel = this.#getPageScopeLabel('url');\n    const originLabel = this.#getPageScopeLabel('origin');\n\n    const buttonTitle = this.#cruxManager.fieldPageScope === 'url' ? urlLabel : originLabel;\n    const accessibleTitle = i18nString(UIStrings.showFieldDataForPage, {PH1: buttonTitle});\n\n    // If there is no data at all we should force users to switch pages or reconfigure CrUX.\n    const shouldDisable = !this.#cruxManager.pageResult?.['url-ALL'] && !this.#cruxManager.pageResult?.['origin-ALL'];\n\n    /* eslint-disable rulesdir/no-deprecated-component-usages */\n    return html`\n      <devtools-select-menu\n        id=\"page-scope-select\"\n        class=\"field-data-option\"\n        @selectmenuselected=${this.#onPageScopeMenuItemSelected}\n        .showDivider=${true}\n        .showArrow=${true}\n        .sideButton=${false}\n        .showSelectedItem=${true}\n        .buttonTitle=${buttonTitle}\n        .disabled=${shouldDisable}\n        title=${accessibleTitle}\n      >\n        <devtools-menu-item\n          .value=${'url'}\n          .selected=${this.#cruxManager.fieldPageScope === 'url'}\n        >\n          ${urlLabel}\n        </devtools-menu-item>\n        <devtools-menu-item\n          .value=${'origin'}\n          .selected=${this.#cruxManager.fieldPageScope === 'origin'}\n        >\n          ${originLabel}\n        </devtools-menu-item>\n      </devtools-select-menu>\n    `;\n    /* eslint-enable rulesdir/no-deprecated-component-usages */\n  }\n\n  #getDeviceScopeDisplayName(deviceScope: CrUXManager.DeviceScope): string {\n    switch (deviceScope) {\n      case 'ALL':\n        return i18nString(UIStrings.allDevices);\n      case 'DESKTOP':\n        return i18nString(UIStrings.desktop);\n      case 'PHONE':\n        return i18nString(UIStrings.mobile);\n      case 'TABLET':\n        return i18nString(UIStrings.tablet);\n    }\n  }\n\n  #getLabelForDeviceOption(deviceOption: DeviceOption): string {\n    let baseLabel;\n    if (deviceOption === 'AUTO') {\n      const deviceScope = this.#cruxManager.resolveDeviceOptionToScope(deviceOption);\n      const deviceScopeLabel = this.#getDeviceScopeDisplayName(deviceScope);\n      baseLabel = i18nString(UIStrings.auto, {PH1: deviceScopeLabel});\n    } else {\n      baseLabel = this.#getDeviceScopeDisplayName(deviceOption);\n    }\n\n    if (!this.#cruxManager.pageResult) {\n      return i18nString(UIStrings.loadingOption, {PH1: baseLabel});\n    }\n\n    const result = this.#cruxManager.getSelectedFieldResponse();\n    if (!result) {\n      return i18nString(UIStrings.needsDataOption, {PH1: baseLabel});\n    }\n\n    return baseLabel;\n  }\n\n  #onDeviceOptionMenuItemSelected(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void {\n    this.#cruxManager.fieldDeviceOption = event.itemValue as DeviceOption;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #renderDeviceScopeSetting(): Lit.LitTemplate {\n    if (!this.#cruxManager.getConfigSetting().get().enabled) {\n      return Lit.nothing;\n    }\n\n    // If there is no data at all we should force users to try adjusting the page scope\n    // before coming back to this option.\n    const shouldDisable = !this.#cruxManager.getFieldResponse(this.#cruxManager.fieldPageScope, 'ALL');\n\n    const currentDeviceLabel = this.#getLabelForDeviceOption(this.#cruxManager.fieldDeviceOption);\n\n    // clang-format off\n    /* eslint-disable rulesdir/no-deprecated-component-usages */\n    return html`\n      <devtools-select-menu\n        id=\"device-scope-select\"\n        class=\"field-data-option\"\n        @selectmenuselected=${this.#onDeviceOptionMenuItemSelected}\n        .showDivider=${true}\n        .showArrow=${true}\n        .sideButton=${false}\n        .showSelectedItem=${true}\n        .buttonTitle=${i18nString(UIStrings.device, {PH1: currentDeviceLabel})}\n        .disabled=${shouldDisable}\n        title=${i18nString(UIStrings.showFieldDataForDevice, {PH1: currentDeviceLabel})}\n      >\n        ${DEVICE_OPTION_LIST.map(deviceOption => {\n          return html`\n            <devtools-menu-item\n              .value=${deviceOption}\n              .selected=${this.#cruxManager.fieldDeviceOption === deviceOption}\n            >\n              ${this.#getLabelForDeviceOption(deviceOption)}\n            </devtools-menu-item>\n          `;\n        })}\n      </devtools-select-menu>\n    `;\n    /* eslint-enable rulesdir/no-deprecated-component-usages */\n    // clang-format on\n  }\n\n  #getCollectionPeriodRange(): string|null {\n    const selectedResponse = this.#cruxManager.getSelectedFieldResponse();\n    if (!selectedResponse) {\n      return null;\n    }\n\n    const {firstDate, lastDate} = selectedResponse.record.collectionPeriod;\n\n    const formattedFirstDate = new Date(\n        firstDate.year,\n        // CrUX month is 1-indexed but `Date` month is 0-indexed\n        firstDate.month - 1,\n        firstDate.day,\n    );\n    const formattedLastDate = new Date(\n        lastDate.year,\n        // CrUX month is 1-indexed but `Date` month is 0-indexed\n        lastDate.month - 1,\n        lastDate.day,\n    );\n\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    };\n\n    return i18nString(UIStrings.dateRange, {\n      PH1: formattedFirstDate.toLocaleDateString(undefined, options),\n      PH2: formattedLastDate.toLocaleDateString(undefined, options),\n    });\n  }\n\n  #renderCollectionPeriod(): Lit.LitTemplate {\n    const range = this.#getCollectionPeriodRange();\n\n    const dateEl = document.createElement('span');\n    dateEl.classList.add('collection-period-range');\n    dateEl.textContent = range || i18nString(UIStrings.notEnoughData);\n\n    const message = i18n.i18n.getFormatLocalizedString(str_, UIStrings.collectionPeriod, {\n      PH1: dateEl,\n    });\n\n    const warnings = this.#cruxManager.pageResult?.warnings || [];\n\n    return html`\n      <div class=\"field-data-message\">\n        <div>${message}</div>\n        ${warnings.map(warning => html`\n          <div class=\"field-data-warning\">${warning}</div>\n        `)}\n      </div>\n    `;\n  }\n\n  #renderFieldDataMessage(): Lit.LitTemplate {\n    if (this.#cruxManager.getConfigSetting().get().enabled) {\n      return this.#renderCollectionPeriod();\n    }\n\n    const linkEl =\n        UI.XLink.XLink.create('https://developer.chrome.com/docs/crux', i18n.i18n.lockedString('Chrome UX Report'));\n    const messageEl = i18n.i18n.getFormatLocalizedString(str_, UIStrings.seeHowYourLocalMetricsCompare, {PH1: linkEl});\n\n    return html`\n      <div class=\"field-data-message\">${messageEl}</div>\n    `;\n  }\n\n  #renderLogSection(): Lit.LitTemplate {\n    // clang-format off\n    return html`\n      <section class=\"logs-section\" aria-label=${i18nString(UIStrings.eventLogs)}>\n        <devtools-live-metrics-logs\n          on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n            this.#logsEl = node as LiveMetricsLogs;\n          })}\n        >\n          ${this.#renderInteractionsLog()}\n          ${this.#renderLayoutShiftsLog()}\n        </devtools-live-metrics-logs>\n      </section>\n    `;\n    // clang-format on\n  }\n\n  async #revealInteraction(interaction: LiveMetrics.Interaction): Promise<void> {\n    const interactionEl = this.#shadow.getElementById(interaction.interactionId);\n    if (!interactionEl || !this.#logsEl) {\n      return;\n    }\n\n    const success = this.#logsEl.selectTab('interactions');\n    if (!success) {\n      return;\n    }\n\n    await RenderCoordinator.write(() => {\n      interactionEl.scrollIntoView({\n        block: 'center',\n      });\n      interactionEl.focus();\n      UI.UIUtils.runCSSAnimationOnce(interactionEl, 'highlight');\n    });\n  }\n\n  async #logExtraInteractionDetails(interaction: LiveMetrics.Interaction): Promise<void> {\n    const success = await LiveMetrics.LiveMetrics.instance().logInteractionScripts(interaction);\n    if (success) {\n      await Common.Console.Console.instance().showPromise();\n    }\n  }\n\n  #renderInteractionsLog(): Lit.LitTemplate {\n    if (!this.#interactions.size) {\n      return Lit.nothing;\n    }\n\n    // clang-format off\n    return html`\n      <ol class=\"log\"\n        slot=\"interactions-log-content\"\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n          this.#interactionsListEl = node as HTMLElement;\n        })}\n      >\n        ${this.#interactions.values().map(interaction => {\n          const metricValue = renderMetricValue(\n            'timeline.landing.interaction-event-timing',\n            interaction.duration,\n            INP_THRESHOLDS,\n            v => i18n.TimeUtilities.preciseMillisToString(v),\n            {dim: true},\n          );\n\n          const isP98Excluded = this.#inpValue && this.#inpValue.value < interaction.duration;\n          const isInp = this.#inpValue?.interactionId === interaction.interactionId;\n\n          return html`\n            <li id=${interaction.interactionId} class=\"log-item interaction\" tabindex=\"-1\">\n              <details>\n                <summary>\n                  <span class=\"interaction-type\">\n                    ${interaction.interactionType} ${isInp ?\n                      html`<span class=\"interaction-inp-chip\" title=${i18nString(UIStrings.inpInteraction)}>INP</span>`\n                    : nothing}\n                  </span>\n                  <span class=\"interaction-node\">${interaction.nodeRef?.link}</span>\n                  ${isP98Excluded ? html`<devtools-icon\n                    class=\"interaction-info\"\n                    name=\"info\"\n                    title=${i18nString(UIStrings.interactionExcluded)}\n                  ></devtools-icon>` : nothing}\n                  <span class=\"interaction-duration\">${metricValue}</span>\n                </summary>\n                <div class=\"phase-table\" role=\"table\">\n                  <div class=\"phase-table-row phase-table-header-row\" role=\"row\">\n                    <div role=\"columnheader\">${i18nString(UIStrings.phase)}</div>\n                    <div role=\"columnheader\">\n                      ${interaction.longAnimationFrameTimings.length ? html`\n                        <button\n                          class=\"log-extra-details-button\"\n                          title=${i18nString(UIStrings.logToConsole)}\n                          @click=${() => this.#logExtraInteractionDetails(interaction)}\n                        >${i18nString(UIStrings.duration)}</button>\n                      ` : i18nString(UIStrings.duration)}\n                    </div>\n                  </div>\n                  <div class=\"phase-table-row\" role=\"row\">\n                    <div role=\"cell\">${i18nString(UIStrings.inputDelay)}</div>\n                    <div role=\"cell\">${Math.round(interaction.phases.inputDelay)}</div>\n                  </div>\n                  <div class=\"phase-table-row\" role=\"row\">\n                    <div role=\"cell\">${i18nString(UIStrings.processingDuration)}</div>\n                    <div role=\"cell\">${Math.round(interaction.phases.processingDuration)}</div>\n                  </div>\n                  <div class=\"phase-table-row\" role=\"row\">\n                    <div role=\"cell\">${i18nString(UIStrings.presentationDelay)}</div>\n                    <div role=\"cell\">${Math.round(interaction.phases.presentationDelay)}</div>\n                  </div>\n                </div>\n              </details>\n            </li>\n          `;\n        })}\n      </ol>\n    `;\n    // clang-format on\n  }\n\n  async #revealLayoutShiftCluster(clusterIds: Set<LiveMetrics.LayoutShift['uniqueLayoutShiftId']>): Promise<void> {\n    if (!this.#logsEl) {\n      return;\n    }\n\n    const layoutShiftEls: HTMLElement[] = [];\n    for (const shiftId of clusterIds) {\n      const layoutShiftEl = this.#shadow.getElementById(shiftId);\n      if (layoutShiftEl) {\n        layoutShiftEls.push(layoutShiftEl);\n      }\n    }\n\n    if (!layoutShiftEls.length) {\n      return;\n    }\n\n    const success = this.#logsEl.selectTab('layout-shifts');\n    if (!success) {\n      return;\n    }\n\n    await RenderCoordinator.write(() => {\n      layoutShiftEls[0].scrollIntoView({\n        block: 'start',\n      });\n      layoutShiftEls[0].focus();\n      for (const layoutShiftEl of layoutShiftEls) {\n        UI.UIUtils.runCSSAnimationOnce(layoutShiftEl, 'highlight');\n      }\n    });\n  }\n\n  #renderLayoutShiftsLog(): Lit.LitTemplate {\n    if (!this.#layoutShifts.length) {\n      return Lit.nothing;\n    }\n\n    // clang-format off\n    return html`\n      <ol class=\"log\"\n        slot=\"layout-shifts-log-content\"\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n          this.#layoutShiftsListEl = node as HTMLElement;\n        })}\n      >\n        ${this.#layoutShifts.map(layoutShift => {\n          const metricValue = renderMetricValue(\n            'timeline.landing.layout-shift-event-score',\n            layoutShift.score,\n            CLS_THRESHOLDS,\n            // CLS value is 2 decimal places, but individual shift scores tend to be much smaller\n            // so we expand the precision here.\n            v => v.toFixed(4),\n            {dim: true},\n          );\n\n          return html`\n            <li id=${layoutShift.uniqueLayoutShiftId} class=\"log-item layout-shift\" tabindex=\"-1\">\n              <div class=\"layout-shift-score\">Layout shift score: ${metricValue}</div>\n              <div class=\"layout-shift-nodes\">\n                ${layoutShift.affectedNodeRefs.map(({link}) => html`\n                  <div class=\"layout-shift-node\">${link}</div>\n                `)}\n              </div>\n            </li>\n          `;\n        })}\n      </ol>\n    `;\n    // clang-format on\n  }\n\n  #renderNodeView(): Lit.LitTemplate {\n    return html`\n      <style>${liveMetricsViewStyles}</style>\n      <style>${metricValueStyles}</style>\n      <div class=\"node-view\">\n        <main>\n          <h2 class=\"section-title\">${i18nString(UIStrings.nodePerformanceTimeline)}</h2>\n          <div class=\"node-description\">${i18nString(UIStrings.nodeClickToRecord)}</div>\n          <div class=\"record-action-card\">${this.#renderRecordAction(this.#toggleRecordAction)}</div>\n        </main>\n      </div>\n    `;\n  }\n\n  #render = (): void => {\n    if (this.#isNode) {\n      Lit.render(this.#renderNodeView(), this.#shadow, {host: this});\n      return;\n    }\n\n    const fieldEnabled = this.#cruxManager.getConfigSetting().get().enabled;\n    const liveMetricsTitle =\n        fieldEnabled ? i18nString(UIStrings.localAndFieldMetrics) : i18nString(UIStrings.localMetrics);\n\n    const helpLink = 'https://web.dev/articles/lab-and-field-data-differences#lab_data_versus_field_data' as\n        Platform.DevToolsPath.UrlString;\n\n    // clang-format off\n    const output = html`\n      <style>${liveMetricsViewStyles}</style>\n      <style>${metricValueStyles}</style>\n      <div class=\"container\">\n        <div class=\"live-metrics-view\">\n          <main class=\"live-metrics\">\n            <h2 class=\"section-title\">${liveMetricsTitle}</h2>\n            <div class=\"metric-cards\"\n              on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n                this.#tooltipContainerEl = node;\n              })}\n            >\n              <div id=\"lcp\">\n                ${this.#renderLcpCard()}\n              </div>\n              <div id=\"cls\">\n                ${this.#renderClsCard()}\n              </div>\n              <div id=\"inp\">\n                ${this.#renderInpCard()}\n              </div>\n            </div>\n            <x-link\n              href=${helpLink}\n              class=\"local-field-link\"\n              title=${i18nString(UIStrings.localFieldLearnMoreTooltip)}\n            >${i18nString(UIStrings.localFieldLearnMoreLink)}</x-link>\n            ${this.#renderLogSection()}\n          </main>\n          <aside class=\"next-steps\" aria-labelledby=\"next-steps-section-title\">\n            <h2 id=\"next-steps-section-title\" class=\"section-title\">${i18nString(UIStrings.nextSteps)}</h2>\n            <div id=\"field-setup\" class=\"settings-card\">\n              <h3 class=\"card-title\">${i18nString(UIStrings.fieldMetricsTitle)}</h3>\n              ${this.#renderFieldDataMessage()}\n              ${this.#renderPageScopeSetting()}\n              ${this.#renderDeviceScopeSetting()}\n              <div class=\"field-setup-buttons\">\n                <devtools-field-settings-dialog></devtools-field-settings-dialog>\n              </div>\n            </div>\n            <div id=\"recording-settings\" class=\"settings-card\">\n              ${this.#renderRecordingSettings()}\n            </div>\n            <div id=\"record\" class=\"record-action-card\">\n              ${this.#renderRecordAction(this.#toggleRecordAction)}\n            </div>\n            <div id=\"record-page-load\" class=\"record-action-card\">\n              ${this.#renderRecordAction(this.#recordReloadAction)}\n            </div>\n          </aside>\n        </div>\n      </div>\n    `;\n    Lit.render(output, this.#shadow, {host: this});\n  };\n  // clang-format on\n}\n\nclass LiveMetricsLogs extends UI.Widget.WidgetElement<UI.Widget.Widget> {\n  #tabbedPane?: UI.TabbedPane.TabbedPane;\n\n  constructor() {\n    super();\n    this.style.display = 'contents';\n  }\n\n  /**\n   * Returns `true` if selecting the tab was successful.\n   */\n  selectTab(tabId: string): boolean {\n    if (!this.#tabbedPane) {\n      return false;\n    }\n    return this.#tabbedPane.selectTab(tabId);\n  }\n\n  #clearCurrentLog(): void {\n    const liveMetrics = LiveMetrics.LiveMetrics.instance();\n\n    switch (this.#tabbedPane?.selectedTabId) {\n      case 'interactions':\n        liveMetrics.clearInteractions();\n        break;\n      case 'layout-shifts':\n        liveMetrics.clearLayoutShifts();\n        break;\n    }\n  }\n\n  override createWidget(): UI.Widget.Widget {\n    // We need a generic widget with a shadow DOM as the container widget so that we can take advantage\n    // of web component slots. Passing `this` into the container widget will make `this` the root element\n    // of that widget.\n    //\n    // Any children of the root element `this` will be matched to the slots defined within the container\n    // widget's shadow DOM.\n    const containerWidget = new UI.Widget.Widget(true, undefined, this);\n    containerWidget.contentElement.style.display = 'contents';\n\n    this.#tabbedPane = new UI.TabbedPane.TabbedPane();\n\n    // Taking advantage of web component slots allows us to render updates in the lit templates defined in the\n    // main component. This should be more performant and doesn't require us to inject live metrics styles twice.\n    const interactionsSlot = document.createElement('slot');\n    interactionsSlot.name = 'interactions-log-content';\n    const interactionsTab = UI.Widget.Widget.getOrCreateWidget(interactionsSlot);\n    this.#tabbedPane.appendTab(\n        'interactions', i18nString(UIStrings.interactions), interactionsTab, undefined, undefined, undefined, undefined,\n        undefined, 'timeline.landing.interactions-log');\n\n    const layoutShiftsSlot = document.createElement('slot');\n    layoutShiftsSlot.name = 'layout-shifts-log-content';\n    const layoutShiftsTab = UI.Widget.Widget.getOrCreateWidget(layoutShiftsSlot);\n    this.#tabbedPane.appendTab(\n        'layout-shifts', i18nString(UIStrings.layoutShifts), layoutShiftsTab, undefined, undefined, undefined,\n        undefined, undefined, 'timeline.landing.layout-shifts-log');\n\n    const clearButton = new UI.Toolbar.ToolbarButton(\n        i18nString(UIStrings.clearCurrentLog), 'clear', undefined, 'timeline.landing.clear-log');\n    clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.#clearCurrentLog, this);\n    this.#tabbedPane.rightToolbar().appendToolbarItem(clearButton);\n    this.#tabbedPane.show(containerWidget.contentElement);\n\n    return containerWidget;\n  }\n}\n\ncustomElements.define('devtools-live-metrics-view', LiveMetricsView);\ncustomElements.define('devtools-live-metrics-logs', LiveMetricsLogs);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-live-metrics-view': LiveMetricsView;\n    'devtools-live-metrics-logs': LiveMetricsLogs;\n  }\n}\n", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/icon_button/icon_button.js';\nimport '../../../ui/components/menus/menus.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport type * as Menus from '../../../ui/components/menus/menus.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../../mobile_throttling/mobile_throttling.js';\n\nimport networkThrottlingSelectorStyles from './networkThrottlingSelector.css.js';\n\nconst {html, nothing} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text label for a selection box showing which network throttling option is applied.\n   * @example {No throttling} PH1\n   */\n  network: 'Network: {PH1}',\n  /**\n   * @description Text label for a selection box showing which network throttling option is applied.\n   * @example {No throttling} PH1\n   */\n  networkThrottling: 'Network throttling: {PH1}',\n  /**\n   * @description Text label for a selection box showing that a specific option is recommended for network throttling.\n   * @example {Fast 4G} PH1\n   */\n  recommendedThrottling: '{PH1} – recommended',\n  /**\n   * @description Text for why user should change a throttling setting.\n   */\n  recommendedThrottlingReason: 'Consider changing setting to simulate real user environments',\n  /**\n   * @description Text label for a menu group that disables network throttling.\n   */\n  disabled: 'Disabled',\n  /**\n   * @description Text label for a menu group that contains default presets for network throttling.\n   */\n  presets: 'Presets',\n  /**\n   * @description Text label for a menu group that contains custom presets for network throttling.\n   */\n  custom: 'Custom',\n  /**\n   * @description Text label for a menu option to add a new custom throttling preset.\n   */\n  add: 'Add…',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/NetworkThrottlingSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ConditionsGroup {\n  name: string;\n  items: SDK.NetworkManager.Conditions[];\n  showCustomAddOption?: boolean;\n  jslogContext?: string;\n}\n\nexport class NetworkThrottlingSelector extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #customNetworkConditionsSetting: Common.Settings.Setting<SDK.NetworkManager.Conditions[]>;\n  #groups: ConditionsGroup[] = [];\n  #currentConditions: SDK.NetworkManager.Conditions;\n  #recommendedConditions: SDK.NetworkManager.Conditions|null = null;\n\n  constructor() {\n    super();\n    this.#customNetworkConditionsSetting =\n        Common.Settings.Settings.instance().moduleSetting('custom-network-conditions');\n    this.#resetPresets();\n    this.#currentConditions = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n    this.#render();\n  }\n\n  set recommendedConditions(recommendedConditions: SDK.NetworkManager.Conditions|null) {\n    this.#recommendedConditions = recommendedConditions;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  connectedCallback(): void {\n    SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED, this.#onConditionsChanged, this);\n\n    // Also call onConditionsChanged immediately to make sure we get the\n    // latest snapshot. Otherwise if another panel updated this value and this\n    // component wasn't in the DOM, this component will not update itself\n    // when it is put into the page\n    this.#onConditionsChanged();\n    this.#customNetworkConditionsSetting.addChangeListener(this.#onSettingChanged, this);\n  }\n\n  disconnectedCallback(): void {\n    SDK.NetworkManager.MultitargetNetworkManager.instance().removeEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED, this.#onConditionsChanged, this);\n    this.#customNetworkConditionsSetting.removeChangeListener(this.#onSettingChanged, this);\n  }\n\n  #resetPresets(): void {\n    this.#groups = [\n      {\n        name: i18nString(UIStrings.disabled),\n        items: [\n          SDK.NetworkManager.NoThrottlingConditions,\n        ],\n      },\n      {\n        name: i18nString(UIStrings.presets),\n        items: MobileThrottling.ThrottlingPresets.ThrottlingPresets.networkPresets,\n      },\n      {\n        name: i18nString(UIStrings.custom),\n        items: this.#customNetworkConditionsSetting.get(),\n        showCustomAddOption: true,\n        jslogContext: 'custom-network-throttling-item',\n      },\n    ];\n  }\n\n  #onConditionsChanged(): void {\n    this.#currentConditions = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onMenuItemSelected(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void {\n    const newConditions = this.#groups.flatMap(g => g.items).find(item => {\n      const keyForItem = this.#keyForNetworkConditions(item);\n      return keyForItem === event.itemValue;\n    });\n    if (newConditions) {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(newConditions);\n    }\n  }\n\n  #onSettingChanged(): void {\n    this.#resetPresets();\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #getConditionsTitle(conditions: SDK.NetworkManager.Conditions): string {\n    return conditions.title instanceof Function ? conditions.title() : conditions.title;\n  }\n\n  #onAddClick(): void {\n    void Common.Revealer.reveal(this.#customNetworkConditionsSetting);\n  }\n\n  /**\n   * The key that uniquely identifies the condition setting. All the DevTools\n   * presets have the i18nKey, so we rely on that, but for custom user added\n   * ones we fallback to using the title (it wouldn't make sense for a user to\n   * add presets with the same title)\n   */\n  #keyForNetworkConditions(conditions: SDK.NetworkManager.Conditions): string {\n    return conditions.i18nTitleKey || this.#getConditionsTitle(conditions);\n  }\n\n  #render = (): void => {\n    const selectionTitle = this.#getConditionsTitle(this.#currentConditions);\n    const selectedConditionsKey = this.#keyForNetworkConditions(this.#currentConditions);\n\n    let recommendedInfoEl;\n    if (this.#recommendedConditions && this.#currentConditions === SDK.NetworkManager.NoThrottlingConditions) {\n      recommendedInfoEl = html`<devtools-icon\n        title=${i18nString(UIStrings.recommendedThrottlingReason)}\n        name=info></devtools-icon>`;\n    }\n\n    // clang-format off\n    /* eslint-disable rulesdir/no-deprecated-component-usages */\n    const output = html`\n      <style>${networkThrottlingSelectorStyles}</style>\n      <devtools-select-menu\n        @selectmenuselected=${this.#onMenuItemSelected}\n        .showDivider=${true}\n        .showArrow=${true}\n        .sideButton=${false}\n        .showSelectedItem=${true}\n        .jslogContext=${'network-conditions'}\n        .buttonTitle=${i18nString(UIStrings.network, {PH1: selectionTitle})}\n        .title=${i18nString(UIStrings.networkThrottling, {PH1: selectionTitle})}\n      >\n        ${this.#groups.map(group => {\n          return html`\n            <devtools-menu-group .name=${group.name} .title=${group.name}>\n              ${group.items.map(conditions => {\n                let title = this.#getConditionsTitle(conditions);\n                if (conditions === this.#recommendedConditions) {\n                  title = i18nString(UIStrings.recommendedThrottling, {PH1: title});\n                }\n\n                const key = this.#keyForNetworkConditions(conditions);\n                const jslogContext = group.jslogContext || Platform.StringUtilities.toKebabCase(conditions.i18nTitleKey || title);\n                return html`\n                  <devtools-menu-item\n                    .value=${key}\n                    .selected=${selectedConditionsKey === key}\n                    .title=${title}\n                    jslog=${VisualLogging.item(jslogContext).track({click: true})}\n                  >\n                    ${title}\n                  </devtools-menu-item>\n                `;\n              })}\n              ${group.showCustomAddOption ? html`\n                <devtools-menu-item\n                  .value=${1 /* This won't be displayed unless it has some value. */}\n                  .title=${i18nString(UIStrings.add)}\n                  jslog=${VisualLogging.action('add').track({click: true})}\n                  @click=${this.#onAddClick}\n                >\n                  ${i18nString(UIStrings.add)}\n                </devtools-menu-item>\n              ` : nothing}\n            </devtools-menu-group>\n          `;\n        })}\n      </devtools-select-menu>\n      ${recommendedInfoEl}\n    `;\n    /* eslint-enable rulesdir/no-deprecated-component-usages */\n    // clang-format on\n    Lit.render(output, this.#shadow, {host: this});\n  };\n}\n\ncustomElements.define('devtools-network-throttling-selector', NetworkThrottlingSelector);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-network-throttling-selector': NetworkThrottlingSelector;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: flex;\n  align-items: center;\n  max-width: 100%;\n  height: 20px;\n}\n\ndevtools-icon[name=\"info\"] {\n  margin-left: var(--sys-size-3);\n  width: var(--sys-size-8);\n  height: var(--sys-size-8);\n}\n\ndevtools-select-menu {\n  min-width: 160px;\n  max-width: 100%;\n  height: 20px;\n}\n\n/*# sourceURL=${import.meta.resolve('./networkThrottlingSelector.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport metricCardStyles from './metricCard.css.js';\nimport {type CompareRating, renderCompareText, renderDetailedCompareText} from './MetricCompareStrings.js';\nimport metricValueStyles from './metricValueStyles.css.js';\nimport {\n  CLS_THRESHOLDS,\n  determineCompareRating,\n  INP_THRESHOLDS,\n  LCP_THRESHOLDS,\n  type MetricRating,\n  type MetricThresholds,\n  rateMetric,\n  renderMetricValue,\n} from './Utils.js';\n\nconst {html, nothing} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Label for a metric value that was measured in the local environment.\n   */\n  localValue: 'Local',\n  /**\n   * @description Label for the 75th percentile of a metric according to data collected from real users in the field. This should be interpreted as \"75th percentile of real users\".\n   */\n  field75thPercentile: 'Field 75th percentile',\n  /**\n   * @description Column header for the 75th percentile of a metric according to data collected from real users in the field. This should be interpreted as \"75th percentile of real users\". Width of the column is limited so character length should be as small as possible.\n   */\n  fieldP75: 'Field p75',\n  /**\n   * @description Text label for values that are classified as \"good\".\n   */\n  good: 'Good',\n  /**\n   * @description Text label for values that are classified as \"needs improvement\".\n   */\n  needsImprovement: 'Needs improvement',\n  /**\n   * @description Text label for values that are classified as \"poor\".\n   */\n  poor: 'Poor',\n  /**\n   * @description Text label for a range of values that are less than or equal to a certain value.\n   * @example {500 ms} PH1\n   */\n  leqRange: '(≤{PH1})',\n  /**\n   * @description Text label for a range of values that are between two values.\n   * @example {500 ms} PH1\n   * @example {800 ms} PH2\n   */\n  betweenRange: '({PH1}-{PH2})',\n  /**\n   * @description Text label for a range of values that are greater than a certain value.\n   * @example {500 ms} PH1\n   */\n  gtRange: '(>{PH1})',\n  /**\n   * @description Text for a percentage value in the live metrics view.\n   * @example {13} PH1\n   */\n  percentage: '{PH1}%',\n  /**\n   * @description Text instructing the user to interact with the page because a user interaction is required to measure Interaction to Next Paint (INP).\n   */\n  interactToMeasure: 'Interact with the page to measure INP.',\n  /**\n   * @description Label for a tooltip that provides more details.\n   */\n  viewCardDetails: 'View card details',\n  /**\n   * @description Text block recommending a site developer look at their test environment followed by bullet points that highlight specific things about the test environment. \"local\" refers to the testing setup of the developer as opposed to the conditions experienced by real users.\n   */\n  considerTesting: 'Consider your local test conditions',\n  /**\n   * @description Text block explaining how network conditions can slow down the page load. \"network throttling\" refers to artificially slowing down the network to simulate slower network conditions.\n   */\n  recThrottlingLCP:\n      'Real users may experience longer page loads due to slower network conditions. Increasing network throttling will simulate slower network conditions.',\n  /**\n   * @description Text block explaining how CPU speed affects how long it takes the page to render after an interaction. \"CPU throttling\" refers to artificially slowing down the CPU to simulate slower devices.\n   */\n  recThrottlingINP:\n      'Real users may experience longer interactions due to slower CPU speeds. Increasing CPU throttling will simulate a slower device.',\n  /**\n   * @description Text block explaining how screen size can affect what content is rendered and therefore affects the LCP performance metric. \"viewport\" and \"screen size\" are synonymous in this case. \"LCP element\" refers to the page element that was the largest content on the page.\n   */\n  recViewportLCP: 'Screen size can influence what the LCP element is. Ensure you are testing common viewport sizes.',\n  /**\n   * @description Text block explaining viewport size can affect layout shifts. \"viewport\" and \"screen size\" are synonymous in this case. \"layout shifts\" refer to page instability where content moving around can create a jarring experience.\n   */\n  recViewportCLS: 'Screen size can influence what layout shifts happen. Ensure you are testing common viewport sizes.',\n  /**\n   * @description Text block explaining how a user interacts with the page can cause different amounts of layout shifts. \"layout shifts\" refer to page instability where content moving around can create a jarring experience.\n   */\n  recJourneyCLS:\n      'How a user interacts with the page can influence layout shifts. Ensure you are testing common interactions like scrolling the page.',\n  /**\n   * @description Text block explaining how a user interacts with the page can affect interaction delays. \"interaction delay\" refers to the delay between an interaction and the page rendering new content.\n   */\n  recJourneyINP:\n      'How a user interacts with the page influences interaction delays. Ensure you are testing common interactions.',\n  /**\n   * @description Text block explaining how dynamic content can affect LCP. \"LCP\" is a performance metric measuring when the largest content was rendered on the page. \"LCP element\" refers to the page element that was the largest content on the page.\n   */\n  recDynamicContentLCP: 'The LCP element can vary between page loads if content is dynamic.',\n  /**\n   * @description Text block explaining how dynamic content can affect layout shifts. \"layout shifts\" refer to page instability where content moving around can create a jarring experience.\n   */\n  recDynamicContentCLS: 'Dynamic content can influence what layout shifts happen.',\n  /**\n   * @description Column header for table cell values representing the phase/component/stage/section of a larger duration.\n   */\n  phase: 'Phase',\n  /**\n   * @description Tooltip text for a link that goes to documentation explaining the Largest Contentful Paint (LCP) metric. \"LCP\" is an acronym and should not be translated.\n   */\n  lcpHelpTooltip:\n      'LCP reports the render time of the largest image, text block, or video visible in the viewport. Click here to learn more about LCP.',\n  /**\n   * @description Tooltip text for a link that goes to documentation explaining the Cumulative Layout Shift (CLS) metric. \"CLS\" is an acronym and should not be translated.\n   */\n  clsHelpTooltip: 'CLS measures the amount of unexpected shifted content. Click here to learn more about CLS.',\n  /**\n   * @description Tooltip text for a link that goes to documentation explaining the Interaction to Next Paint (INP) metric. \"INP\" is an acronym and should not be translated.\n   */\n  inpHelpTooltip:\n      'INP measures the overall responsiveness to all click, tap, and keyboard interactions. Click here to learn more about INP.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/MetricCard.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type PhaseTable = Array<[string, Trace.Types.Timing.Milli, Trace.Types.Timing.Milli?]>;\n\nexport interface MetricCardData {\n  metric: 'LCP'|'CLS'|'INP';\n  localValue?: number;\n  fieldValue?: number|string;\n  histogram?: CrUXManager.MetricResponse['histogram'];\n  tooltipContainer?: HTMLElement;\n  phases?: PhaseTable;\n  warnings?: string[];\n}\n\nexport class MetricCard extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  constructor() {\n    super();\n\n    this.#render();\n  }\n\n  #tooltipEl?: HTMLElement;\n\n  #data: MetricCardData = {\n    metric: 'LCP',\n  };\n\n  set data(data: MetricCardData) {\n    this.#data = data;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  connectedCallback(): void {\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #hideTooltipOnEsc = (event: KeyboardEvent): void => {\n    if (Platform.KeyboardUtilities.isEscKey(event)) {\n      event.stopPropagation();\n      this.#hideTooltip();\n    }\n  };\n\n  #hideTooltipOnMouseLeave(event: Event): void {\n    const target = event.target as HTMLElement;\n    if (target?.hasFocus()) {\n      return;\n    }\n\n    this.#hideTooltip();\n  }\n\n  #hideTooltipOnFocusOut(event: FocusEvent): void {\n    const target = event.target as HTMLElement;\n    if (target?.hasFocus()) {\n      return;\n    }\n\n    const relatedTarget = event.relatedTarget;\n    if (relatedTarget instanceof Node && target.contains(relatedTarget)) {\n      // `focusout` bubbles so we should get another event once focus leaves `relatedTarget`\n      return;\n    }\n\n    this.#hideTooltip();\n  }\n\n  #hideTooltip(): void {\n    const tooltipEl = this.#tooltipEl;\n    if (!tooltipEl) {\n      return;\n    }\n\n    document.body.removeEventListener('keydown', this.#hideTooltipOnEsc);\n\n    tooltipEl.style.removeProperty('left');\n    tooltipEl.style.removeProperty('visibility');\n    tooltipEl.style.removeProperty('display');\n    tooltipEl.style.removeProperty('transition-delay');\n  }\n\n  #showTooltip(delayMs = 0): void {\n    const tooltipEl = this.#tooltipEl;\n    if (!tooltipEl || tooltipEl.style.visibility || tooltipEl.style.display) {\n      return;\n    }\n\n    document.body.addEventListener('keydown', this.#hideTooltipOnEsc);\n\n    tooltipEl.style.display = 'block';\n    tooltipEl.style.transitionDelay = `${Math.round(delayMs)}ms`;\n\n    const container = this.#data.tooltipContainer;\n    if (!container) {\n      return;\n    }\n\n    const containerBox = container.getBoundingClientRect();\n    tooltipEl.style.setProperty('--tooltip-container-width', `${Math.round(containerBox.width)}px`);\n\n    requestAnimationFrame(() => {\n      let offset = 0;\n\n      const tooltipBox = tooltipEl.getBoundingClientRect();\n\n      const rightDiff = tooltipBox.right - containerBox.right;\n      const leftDiff = tooltipBox.left - containerBox.left;\n\n      if (leftDiff < 0) {\n        offset = Math.round(leftDiff);\n      } else if (rightDiff > 0) {\n        offset = Math.round(rightDiff);\n      }\n\n      tooltipEl.style.left = `calc(50% - ${offset}px)`;\n      tooltipEl.style.visibility = 'visible';\n    });\n  }\n\n  #getTitle(): string {\n    switch (this.#data.metric) {\n      case 'LCP':\n        return i18n.i18n.lockedString('Largest Contentful Paint (LCP)');\n      case 'CLS':\n        return i18n.i18n.lockedString('Cumulative Layout Shift (CLS)');\n      case 'INP':\n        return i18n.i18n.lockedString('Interaction to Next Paint (INP)');\n    }\n  }\n\n  #getThresholds(): MetricThresholds {\n    switch (this.#data.metric) {\n      case 'LCP':\n        return LCP_THRESHOLDS;\n      case 'CLS':\n        return CLS_THRESHOLDS;\n      case 'INP':\n        return INP_THRESHOLDS;\n    }\n  }\n\n  #getFormatFn(): (value: number) => string {\n    switch (this.#data.metric) {\n      case 'LCP':\n        return v => {\n          const micro = (v * 1000) as Platform.Timing.MicroSeconds;\n          return i18n.TimeUtilities.formatMicroSecondsAsSeconds(micro);\n        };\n      case 'CLS':\n        return v => v === 0 ? '0' : v.toFixed(2);\n      case 'INP':\n        return v => i18n.TimeUtilities.preciseMillisToString(v);\n    }\n  }\n\n  #getHelpLink(): Platform.DevToolsPath.UrlString {\n    switch (this.#data.metric) {\n      case 'LCP':\n        return 'https://web.dev/articles/lcp' as Platform.DevToolsPath.UrlString;\n      case 'CLS':\n        return 'https://web.dev/articles/cls' as Platform.DevToolsPath.UrlString;\n      case 'INP':\n        return 'https://web.dev/articles/inp' as Platform.DevToolsPath.UrlString;\n    }\n  }\n\n  #getHelpTooltip(): string {\n    switch (this.#data.metric) {\n      case 'LCP':\n        return i18nString(UIStrings.lcpHelpTooltip);\n      case 'CLS':\n        return i18nString(UIStrings.clsHelpTooltip);\n      case 'INP':\n        return i18nString(UIStrings.inpHelpTooltip);\n    }\n  }\n\n  #getLocalValue(): number|undefined {\n    const {localValue} = this.#data;\n    if (localValue === undefined) {\n      return;\n    }\n\n    return localValue;\n  }\n\n  #getFieldValue(): number|undefined {\n    let {fieldValue} = this.#data;\n    if (fieldValue === undefined) {\n      return;\n    }\n\n    if (typeof fieldValue === 'string') {\n      fieldValue = Number(fieldValue);\n    }\n\n    if (!Number.isFinite(fieldValue)) {\n      return;\n    }\n\n    return fieldValue;\n  }\n\n  /**\n   * Returns if the local value is better/worse/similar compared to field.\n   */\n  #getCompareRating(): CompareRating|undefined {\n    const localValue = this.#getLocalValue();\n    const fieldValue = this.#getFieldValue();\n    if (localValue === undefined || fieldValue === undefined) {\n      return;\n    }\n\n    return determineCompareRating(this.#data.metric, localValue, fieldValue);\n  }\n\n  #renderCompareString(): Lit.LitTemplate {\n    const localValue = this.#getLocalValue();\n    if (localValue === undefined) {\n      if (this.#data.metric === 'INP') {\n        return html`\n          <div class=\"compare-text\">${i18nString(UIStrings.interactToMeasure)}</div>\n        `;\n      }\n      return Lit.nothing;\n    }\n\n    const compare = this.#getCompareRating();\n    const rating = rateMetric(localValue, this.#getThresholds());\n\n    const valueEl = renderMetricValue(\n        this.#getMetricValueLogContext(true), localValue, this.#getThresholds(), this.#getFormatFn(), {dim: true});\n\n    // clang-format off\n    return html`\n      <div class=\"compare-text\">\n        ${renderCompareText({\n          metric: i18n.i18n.lockedString(this.#data.metric),\n          rating,\n          compare,\n          localValue: valueEl,\n        })}\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #renderEnvironmentRecommendations(): Lit.LitTemplate {\n    const compare = this.#getCompareRating();\n    if (!compare || compare === 'similar') {\n      return Lit.nothing;\n    }\n\n    const recs: string[] = [];\n    const metric = this.#data.metric;\n\n    // Recommend using throttling\n    if (metric === 'LCP' && compare === 'better') {\n      recs.push(i18nString(UIStrings.recThrottlingLCP));\n    } else if (metric === 'INP' && compare === 'better') {\n      recs.push(i18nString(UIStrings.recThrottlingINP));\n    }\n\n    // Recommend trying new viewport sizes\n    if (metric === 'LCP') {\n      recs.push(i18nString(UIStrings.recViewportLCP));\n    } else if (metric === 'CLS') {\n      recs.push(i18nString(UIStrings.recViewportCLS));\n    }\n\n    // Recommend trying new user journeys\n    if (metric === 'CLS') {\n      recs.push(i18nString(UIStrings.recJourneyCLS));\n    } else if (metric === 'INP') {\n      recs.push(i18nString(UIStrings.recJourneyINP));\n    }\n\n    // Recommend accounting for dynamic content\n    if (metric === 'LCP') {\n      recs.push(i18nString(UIStrings.recDynamicContentLCP));\n    } else if (metric === 'CLS') {\n      recs.push(i18nString(UIStrings.recDynamicContentCLS));\n    }\n\n    if (!recs.length) {\n      return Lit.nothing;\n    }\n\n    return html`\n      <details class=\"environment-recs\">\n        <summary>${i18nString(UIStrings.considerTesting)}</summary>\n        <ul class=\"environment-recs-list\">${recs.map(rec => html`<li>${rec}</li>`)}</ul>\n      </details>\n    `;\n  }\n\n  #getMetricValueLogContext(isLocal: boolean): string {\n    return `timeline.landing.${isLocal ? 'local' : 'field'}-${this.#data.metric.toLowerCase()}`;\n  }\n\n  #renderDetailedCompareString(): Lit.LitTemplate {\n    const localValue = this.#getLocalValue();\n    if (localValue === undefined) {\n      if (this.#data.metric === 'INP') {\n        return html`\n          <div class=\"detailed-compare-text\">${i18nString(UIStrings.interactToMeasure)}</div>\n        `;\n      }\n      return Lit.nothing;\n    }\n\n    const localRating = rateMetric(localValue, this.#getThresholds());\n\n    const fieldValue = this.#getFieldValue();\n    const fieldRating = fieldValue !== undefined ? rateMetric(fieldValue, this.#getThresholds()) : undefined;\n\n    const localValueEl = renderMetricValue(\n        this.#getMetricValueLogContext(true), localValue, this.#getThresholds(), this.#getFormatFn(), {dim: true});\n    const fieldValueEl = renderMetricValue(\n        this.#getMetricValueLogContext(false), fieldValue, this.#getThresholds(), this.#getFormatFn(), {dim: true});\n\n    // clang-format off\n    return html`\n      <div class=\"detailed-compare-text\">${renderDetailedCompareText({\n        metric: i18n.i18n.lockedString(this.#data.metric),\n        localRating,\n        fieldRating,\n        localValue: localValueEl,\n        fieldValue: fieldValueEl,\n        percent: this.#getPercentLabelForRating(localRating),\n      })}</div>\n    `;\n    // clang-format on\n  }\n\n  #bucketIndexForRating(rating: MetricRating): number {\n    switch (rating) {\n      case 'good':\n        return 0;\n      case 'needs-improvement':\n        return 1;\n      case 'poor':\n        return 2;\n    }\n  }\n\n  #getBarWidthForRating(rating: MetricRating): string {\n    const histogram = this.#data.histogram;\n    const density = histogram?.[this.#bucketIndexForRating(rating)].density || 0;\n    const percent = Math.round(density * 100);\n    return `${percent}%`;\n  }\n\n  #getPercentLabelForRating(rating: MetricRating): string {\n    const histogram = this.#data.histogram;\n    if (histogram === undefined) {\n      return '-';\n    }\n\n    // A missing density value should be interpreted as 0%\n    const density = histogram[this.#bucketIndexForRating(rating)].density || 0;\n    const percent = Math.round(density * 100);\n    return i18nString(UIStrings.percentage, {PH1: percent});\n  }\n\n  #renderFieldHistogram(): Lit.LitTemplate {\n    const fieldEnabled = CrUXManager.CrUXManager.instance().getConfigSetting().get().enabled;\n\n    const format = this.#getFormatFn();\n    const thresholds = this.#getThresholds();\n\n    // clang-format off\n    const goodLabel = html`\n      <div class=\"bucket-label\">\n        <span>${i18nString(UIStrings.good)}</span>\n        <span class=\"bucket-range\"> ${i18nString(UIStrings.leqRange, {PH1: format(thresholds[0])})}</span>\n      </div>\n    `;\n\n    const needsImprovementLabel = html`\n      <div class=\"bucket-label\">\n        <span>${i18nString(UIStrings.needsImprovement)}</span>\n        <span class=\"bucket-range\"> ${i18nString(UIStrings.betweenRange, {PH1: format(thresholds[0]), PH2: format(thresholds[1])})}</span>\n      </div>\n    `;\n\n    const poorLabel = html`\n      <div class=\"bucket-label\">\n        <span>${i18nString(UIStrings.poor)}</span>\n        <span class=\"bucket-range\"> ${i18nString(UIStrings.gtRange, {PH1: format(thresholds[1])})}</span>\n      </div>\n    `;\n    // clang-format on\n\n    if (!fieldEnabled) {\n      return html`\n        <div class=\"bucket-summaries\">\n          ${goodLabel}\n          ${needsImprovementLabel}\n          ${poorLabel}\n        </div>\n      `;\n    }\n\n    // clang-format off\n    return html`\n      <div class=\"bucket-summaries histogram\">\n        ${goodLabel}\n        <div class=\"histogram-bar good-bg\" style=\"width: ${this.#getBarWidthForRating('good')}\"></div>\n        <div class=\"histogram-percent\">${this.#getPercentLabelForRating('good')}</div>\n        ${needsImprovementLabel}\n        <div class=\"histogram-bar needs-improvement-bg\" style=\"width: ${this.#getBarWidthForRating('needs-improvement')}\"></div>\n        <div class=\"histogram-percent\">${this.#getPercentLabelForRating('needs-improvement')}</div>\n        ${poorLabel}\n        <div class=\"histogram-bar poor-bg\" style=\"width: ${this.#getBarWidthForRating('poor')}\"></div>\n        <div class=\"histogram-percent\">${this.#getPercentLabelForRating('poor')}</div>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #renderPhaseTable(phases: PhaseTable): Lit.LitTemplate {\n    const hasFieldData = phases.every(phase => phase[2] !== undefined);\n\n    // clang-format off\n    return html`\n      <hr class=\"divider\">\n      <div class=\"phase-table\" role=\"table\">\n        <div class=\"phase-table-row phase-table-header-row\" role=\"row\">\n          <div role=\"columnheader\" style=\"grid-column: 1\">${i18nString(UIStrings.phase)}</div>\n          <div role=\"columnheader\" class=\"phase-table-value\" style=\"grid-column: 2\">${i18nString(UIStrings.localValue)}</div>\n          ${hasFieldData ? html`\n            <div\n              role=\"columnheader\"\n              class=\"phase-table-value\"\n              style=\"grid-column: 3\"\n              title=${i18nString(UIStrings.field75thPercentile)}>${i18nString(UIStrings.fieldP75)}</div>\n          ` : nothing}\n        </div>\n        ${phases.map(phase => html`\n          <div class=\"phase-table-row\" role=\"row\">\n            <div role=\"cell\">${phase[0]}</div>\n            <div role=\"cell\" class=\"phase-table-value\">${i18n.TimeUtilities.preciseMillisToString(phase[1])}</div>\n            ${phase[2] !== undefined ? html`\n              <div role=\"cell\" class=\"phase-table-value\">${i18n.TimeUtilities.preciseMillisToString(phase[2])}</div>\n            ` : nothing}\n          </div>\n        `)}\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #render = (): void => {\n    const fieldEnabled = CrUXManager.CrUXManager.instance().getConfigSetting().get().enabled;\n    const helpLink = this.#getHelpLink();\n\n    const localValue = this.#getLocalValue();\n    const fieldValue = this.#getFieldValue();\n    const thresholds = this.#getThresholds();\n    const formatFn = this.#getFormatFn();\n\n    const localValueEl = renderMetricValue(this.#getMetricValueLogContext(true), localValue, thresholds, formatFn);\n    const fieldValueEl = renderMetricValue(this.#getMetricValueLogContext(false), fieldValue, thresholds, formatFn);\n\n    // clang-format off\n    const output = html`\n      <style>${metricCardStyles}</style>\n      <style>${metricValueStyles}</style>\n      <div class=\"metric-card\">\n        <h3 class=\"title\">\n          ${this.#getTitle()}\n          <devtools-button\n            class=\"title-help\"\n            title=${this.#getHelpTooltip()}\n            .iconName=${'help'}\n            .variant=${Buttons.Button.Variant.ICON}\n            @click=${() => UI.UIUtils.openInNewTab(helpLink)}\n          ></devtools-button>\n        </h3>\n        <div tabindex=\"0\" class=\"metric-values-section\"\n          @mouseenter=${() => this.#showTooltip(500)}\n          @mouseleave=${this.#hideTooltipOnMouseLeave}\n          @focusin=${this.#showTooltip}\n          @focusout=${this.#hideTooltipOnFocusOut}\n          aria-describedby=\"tooltip\"\n        >\n          <div class=\"metric-source-block\">\n            <div class=\"metric-source-value\" id=\"local-value\">${localValueEl}</div>\n            ${fieldEnabled ? html`<div class=\"metric-source-label\">${i18nString(UIStrings.localValue)}</div>` : nothing}\n          </div>\n          ${fieldEnabled ? html`\n            <div class=\"metric-source-block\">\n              <div class=\"metric-source-value\" id=\"field-value\">${fieldValueEl}</div>\n              <div class=\"metric-source-label\">${i18nString(UIStrings.field75thPercentile)}</div>\n            </div>\n          `: nothing}\n          <div\n            id=\"tooltip\"\n            class=\"tooltip\"\n            role=\"tooltip\"\n            aria-label=${i18nString(UIStrings.viewCardDetails)}\n            on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n              this.#tooltipEl = node as HTMLElement;\n            })}\n          >\n            <div class=\"tooltip-scroll\">\n              <div class=\"tooltip-contents\">\n                <div>\n                  ${this.#renderDetailedCompareString()}\n                  <hr class=\"divider\">\n                  ${this.#renderFieldHistogram()}\n                  ${localValue && this.#data.phases ? this.#renderPhaseTable(this.#data.phases) : nothing}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        ${fieldEnabled ? html`<hr class=\"divider\">` : nothing}\n        ${this.#renderCompareString()}\n        ${this.#data.warnings?.map(warning => html`\n          <div class=\"warning\">${warning}</div>\n        `)}\n        ${this.#renderEnvironmentRecommendations()}\n        <slot name=\"extra-info\"></slot>\n      </div>\n    `;\n    Lit.render(output, this.#shadow, {host: this});\n  };\n  // clang-format on\n}\n\ncustomElements.define('devtools-metric-card', MetricCard);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-metric-card': MetricCard;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.metric-card {\n  border-radius: var(--sys-shape-corner-small);\n  padding: 14px 16px;\n  background-color: var(--sys-color-surface3);\n  height: 100%;\n  box-sizing: border-box;\n\n  &:not(:hover) .title-help {\n    visibility: hidden;\n  }\n}\n\n.title {\n  display: flex;\n  justify-content: space-between;\n  font-size: var(--sys-typescale-headline5-size);\n  line-height: var(--sys-typescale-headline5-line-height);\n  font-weight: var(--ref-typeface-weight-medium);\n  margin: 0;\n  margin-bottom: 6px;\n}\n\n.title-help {\n  height: var(--sys-typescale-headline5-line-height);\n  margin-left: 4px;\n}\n\n.metric-values-section {\n  position: relative;\n  display: flex;\n  column-gap: 8px;\n  margin-bottom: 8px;\n}\n\n.metric-values-section:focus-visible {\n  outline: 2px solid -webkit-focus-ring-color;\n}\n\n.metric-source-block {\n  flex: 1;\n}\n\n.metric-source-value {\n  font-size: 32px;\n  line-height: 36px;\n  font-weight: var(--ref-typeface-weight-regular);\n}\n\n.metric-source-label {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.warning {\n  margin-top: 4px;\n  color: var(--sys-color-error);\n  font-size: var(--sys-typescale-body4-size);\n  line-height: var(--sys-typescale-body4-line-height);\n  display: flex;\n\n  &::before {\n    content: \" \";\n    width: var(--sys-typescale-body4-line-height);\n    height: var(--sys-typescale-body4-line-height);\n    mask-size: var(--sys-typescale-body4-line-height);\n    mask-image: var(--image-file-warning);\n    background-color: var(--sys-color-error);\n    margin-right: 4px;\n    flex-shrink: 0;\n  }\n}\n\n.good-bg {\n  background-color: var(--app-color-performance-good);\n}\n\n.needs-improvement-bg {\n  background-color: var(--app-color-performance-ok);\n}\n\n.poor-bg {\n  background-color: var(--app-color-performance-bad);\n}\n\n.divider {\n  width: 100%;\n  border: 0;\n  border-bottom: 1px solid var(--sys-color-divider);\n  margin: 8px 0;\n  box-sizing: border-box;\n}\n\n.compare-text {\n  margin-top: 8px;\n}\n\n.environment-recs-intro {\n  margin-top: 8px;\n}\n\n.environment-recs {\n  margin: 9px 0;\n}\n\n.environment-recs > summary {\n  font-weight: var(--ref-typeface-weight-medium);\n  margin-bottom: 4px;\n  font-size: var(--sys-typescale-body4-size);\n  line-height: var(--sys-typescale-body4-line-height);\n  display: flex;\n\n  &::before {\n    content: \" \";\n    width: var(--sys-typescale-body4-line-height);\n    height: var(--sys-typescale-body4-line-height);\n    mask-size: var(--sys-typescale-body4-line-height);\n    mask-image: var(--image-file-triangle-right);\n    background-color: var(--icon-default);\n    margin-right: 4px;\n    flex-shrink: 0;\n  }\n}\n\ndetails.environment-recs[open] > summary::before {\n  mask-image: var(--image-file-triangle-down);\n}\n\n.environment-recs-list {\n  margin: 0;\n}\n\n.detailed-compare-text {\n  margin-bottom: 8px;\n}\n\n.bucket-summaries {\n  margin-top: 8px;\n  white-space: nowrap;\n}\n\n.bucket-summaries.histogram {\n  display: grid;\n  grid-template-columns: minmax(min-content, auto) minmax(40px, 60px) max-content;\n  grid-auto-rows: 1fr;\n  column-gap: 8px;\n  place-items: center flex-end;\n}\n\n.bucket-label {\n  justify-self: start;\n  font-weight: var(--ref-typeface-weight-medium);\n  white-space: wrap;\n\n  > * {\n    white-space: nowrap;\n  }\n}\n\n.bucket-range {\n  color: var(--sys-color-token-subtle);\n}\n\n.histogram-bar {\n  height: 6px;\n}\n\n.histogram-percent {\n  color: var(--sys-color-token-subtle);\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.tooltip {\n  display: none;\n  visibility: hidden;\n  transition-property: visibility;\n  width: min(var(--tooltip-container-width, 350px), 350px);\n  max-width: max-content;\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 1;\n  box-sizing: border-box;\n  padding: var(--sys-size-5) var(--sys-size-6);\n  border-radius: var(--sys-shape-corner-small);\n  background-color: var(--sys-color-cdt-base-container);\n  box-shadow: var(--drop-shadow-depth-3);\n\n  .tooltip-scroll {\n    overflow-x: auto;\n\n    .tooltip-contents {\n      min-width: min-content;\n    }\n  }\n}\n\n.phase-table {\n  display: grid;\n  column-gap: var(--sys-size-3);\n  white-space: nowrap;\n}\n\n.phase-table-row {\n  display: contents;\n}\n\n.phase-table-value {\n  text-align: right;\n}\n\n.phase-table-header-row {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n/*# sourceURL=${import.meta.resolve('./metricCard.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\n\nimport type {MetricRating} from './Utils.js';\n\n// This file is auto-generated by scripts/generate_metric_compare_strings.js.\n//\n// If you need to update one or more of these strings, it is preferable to modify the script\n// and write stdout to this file (Minor formatting differences may apply).\n\nconst UIStrings = {\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   */\n  goodBetterCompare:\n      'Your local {PH1} value of {PH2} is good, but is significantly better than your users’ experience.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   */\n  goodWorseCompare: 'Your local {PH1} value of {PH2} is good, but is significantly worse than your users’ experience.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   */\n  goodSimilarCompare: 'Your local {PH1} value of {PH2} is good, and is similar to your users’ experience.',\n  /**\n   * @description Text block that summarize a local metric value. \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   */\n  goodSummarized: 'Your local {PH1} value of {PH2} is good.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   */\n  needsImprovementBetterCompare:\n      'Your local {PH1} value of {PH2} needs improvement, but is significantly better than your users’ experience.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   */\n  needsImprovementWorseCompare:\n      'Your local {PH1} value of {PH2} needs improvement, but is significantly worse than your users’ experience.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   */\n  needsImprovementSimilarCompare:\n      'Your local {PH1} value of {PH2} needs improvement, and is similar to your users’ experience.',\n  /**\n   * @description Text block that summarize a local metric value. \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   */\n  needsImprovementSummarized: 'Your local {PH1} value of {PH2} needs improvement.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   */\n  poorBetterCompare:\n      'Your local {PH1} value of {PH2} is poor, but is significantly better than your users’ experience.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   */\n  poorWorseCompare: 'Your local {PH1} value of {PH2} is poor, but is significantly worse than your users’ experience.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   */\n  poorSimilarCompare: 'Your local {PH1} value of {PH2} is poor, and is similar to your users’ experience.',\n  /**\n   * @description Text block that summarize a local metric value. \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   */\n  poorSummarized: 'Your local {PH1} value of {PH2} is poor.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"field metrics\" should be interpreted as \"real user data\". \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   * @example {400 ms} PH3\n   * @example {40%} PH4\n   */\n  goodGoodDetailedCompare:\n      'Your local {PH1} value of {PH2} is good and is rated the same as {PH4} of real-user {PH1} experiences. Additionally, the field metrics 75th percentile {PH1} value of {PH3} is good.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"field metrics\" should be interpreted as \"real user data\". \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   * @example {400 ms} PH3\n   * @example {40%} PH4\n   */\n  goodNeedsImprovementDetailedCompare:\n      'Your local {PH1} value of {PH2} is good and is rated the same as {PH4} of real-user {PH1} experiences. However, the field metrics 75th percentile {PH1} value of {PH3} needs improvement.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"field metrics\" should be interpreted as \"real user data\". \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   * @example {400 ms} PH3\n   * @example {40%} PH4\n   */\n  goodPoorDetailedCompare:\n      'Your local {PH1} value of {PH2} is good and is rated the same as {PH4} of real-user {PH1} experiences. However, the field metrics 75th percentile {PH1} value of {PH3} is poor.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"field metrics\" should be interpreted as \"real user data\". \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   * @example {400 ms} PH3\n   * @example {40%} PH4\n   */\n  needsImprovementGoodDetailedCompare:\n      'Your local {PH1} value of {PH2} needs improvement and is rated the same as {PH4} of real-user {PH1} experiences. However, the field metrics 75th percentile {PH1} value of {PH3} is good.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"field metrics\" should be interpreted as \"real user data\". \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   * @example {400 ms} PH3\n   * @example {40%} PH4\n   */\n  needsImprovementNeedsImprovementDetailedCompare:\n      'Your local {PH1} value of {PH2} needs improvement and is rated the same as {PH4} of real-user {PH1} experiences. Additionally, the field metrics 75th percentile {PH1} value of {PH3} needs improvement.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"field metrics\" should be interpreted as \"real user data\". \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   * @example {400 ms} PH3\n   * @example {40%} PH4\n   */\n  needsImprovementPoorDetailedCompare:\n      'Your local {PH1} value of {PH2} needs improvement and is rated the same as {PH4} of real-user {PH1} experiences. However, the field metrics 75th percentile {PH1} value of {PH3} is poor.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"field metrics\" should be interpreted as \"real user data\". \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   * @example {400 ms} PH3\n   * @example {40%} PH4\n   */\n  poorGoodDetailedCompare:\n      'Your local {PH1} value of {PH2} is poor and is rated the same as {PH4} of real-user {PH1} experiences. However, the field metrics 75th percentile {PH1} value of {PH3} is good.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"field metrics\" should be interpreted as \"real user data\". \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   * @example {400 ms} PH3\n   * @example {40%} PH4\n   */\n  poorNeedsImprovementDetailedCompare:\n      'Your local {PH1} value of {PH2} is poor and is rated the same as {PH4} of real-user {PH1} experiences. However, the field metrics 75th percentile {PH1} value of {PH3} needs improvement.',\n  /**\n   * @description Text block that compares a local metric value to real user experiences. \"field metrics\" should be interpreted as \"real user data\". \"local\" refers to a developers local testing environment.\n   * @example {LCP} PH1\n   * @example {500 ms} PH2\n   * @example {400 ms} PH3\n   * @example {40%} PH4\n   */\n  poorPoorDetailedCompare:\n      'Your local {PH1} value of {PH2} is poor and is rated the same as {PH4} of real-user {PH1} experiences. Additionally, the field metrics 75th percentile {PH1} value of {PH3} is poor.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/MetricCompareStrings.ts', UIStrings);\n\nexport type CompareRating = 'better'|'worse'|'similar';\n\nexport function renderCompareText(\n    options: {metric: string, rating: MetricRating, localValue: Element, compare?: CompareRating}): Element {\n  const {rating, compare} = options;\n  const values = {\n    PH1: options.metric,\n    PH2: options.localValue,\n  };\n\n  if (rating === 'good' && compare === 'better') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodBetterCompare, values);\n  }\n  if (rating === 'good' && compare === 'worse') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodWorseCompare, values);\n  }\n  if (rating === 'good' && compare === 'similar') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodSimilarCompare, values);\n  }\n  if (rating === 'good' && !compare) {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodSummarized, values);\n  }\n  if (rating === 'needs-improvement' && compare === 'better') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementBetterCompare, values);\n  }\n  if (rating === 'needs-improvement' && compare === 'worse') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementWorseCompare, values);\n  }\n  if (rating === 'needs-improvement' && compare === 'similar') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementSimilarCompare, values);\n  }\n  if (rating === 'needs-improvement' && !compare) {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementSummarized, values);\n  }\n  if (rating === 'poor' && compare === 'better') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorBetterCompare, values);\n  }\n  if (rating === 'poor' && compare === 'worse') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorWorseCompare, values);\n  }\n  if (rating === 'poor' && compare === 'similar') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorSimilarCompare, values);\n  }\n  if (rating === 'poor' && !compare) {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorSummarized, values);\n  }\n\n  throw new Error('Compare string not found');\n}\n\nexport function renderDetailedCompareText(options: {\n  metric: string,\n  localRating: MetricRating,\n  localValue: Element,\n  percent: string,\n  fieldValue: Element,\n  fieldRating?: MetricRating,\n}): Element {\n  const {localRating, fieldRating} = options;\n  const values = {\n    PH1: options.metric,\n    PH2: options.localValue,\n    PH3: options.fieldValue,\n    PH4: options.percent,\n  };\n\n  if (localRating === 'good' && fieldRating === 'good') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodGoodDetailedCompare, values);\n  }\n  if (localRating === 'good' && fieldRating === 'needs-improvement') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodNeedsImprovementDetailedCompare, values);\n  }\n  if (localRating === 'good' && fieldRating === 'poor') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodPoorDetailedCompare, values);\n  }\n  if (localRating === 'good' && !fieldRating) {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodSummarized, values);\n  }\n  if (localRating === 'needs-improvement' && fieldRating === 'good') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementGoodDetailedCompare, values);\n  }\n  if (localRating === 'needs-improvement' && fieldRating === 'needs-improvement') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementNeedsImprovementDetailedCompare, values);\n  }\n  if (localRating === 'needs-improvement' && fieldRating === 'poor') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementPoorDetailedCompare, values);\n  }\n  if (localRating === 'needs-improvement' && !fieldRating) {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementSummarized, values);\n  }\n  if (localRating === 'poor' && fieldRating === 'good') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorGoodDetailedCompare, values);\n  }\n  if (localRating === 'poor' && fieldRating === 'needs-improvement') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorNeedsImprovementDetailedCompare, values);\n  }\n  if (localRating === 'poor' && fieldRating === 'poor') {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorPoorDetailedCompare, values);\n  }\n  if (localRating === 'poor' && !fieldRating) {\n    return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorSummarized, values);\n  }\n\n  throw new Error('Detailed compare string not found');\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.metric-value {\n  text-wrap: nowrap;\n}\n\n.metric-value.dim {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.metric-value.waiting {\n  color: var(--sys-color-token-subtle);\n}\n\n.metric-value.good {\n  color: var(--app-color-performance-good);\n}\n\n.metric-value.needs-improvement {\n  color: var(--app-color-performance-ok);\n}\n\n.metric-value.poor {\n  color: var(--app-color-performance-bad);\n}\n\n.metric-value.good.dim {\n  color: var(--app-color-performance-good-dim);\n}\n\n.metric-value.needs-improvement.dim {\n  color: var(--app-color-performance-ok-dim);\n}\n\n.metric-value.poor.dim {\n  color: var(--app-color-performance-bad-dim);\n}\n\n/*# sourceURL=${import.meta.resolve('./metricValueStyles.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Protocol from '../../../generated/protocol.js';\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as ThemeSupport from '../../../ui/legacy/theme_support/theme_support.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport type {CompareRating} from './MetricCompareStrings.js';\n\nconst UIStrings = {\n  /**\n   *@description ms is the short form of milli-seconds and the placeholder is a decimal number.\n   * The shortest form or abbreviation of milliseconds should be used, as there is\n   * limited room in this UI.\n   *@example {2.14} PH1\n   */\n  fms: '{PH1}[ms]()',\n  /**\n   *@description s is short for seconds and the placeholder is a decimal number\n   * The shortest form or abbreviation of seconds should be used, as there is\n   * limited room in this UI.\n   *@example {2.14} PH1\n   */\n  fs: '{PH1}[s]()',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/Utils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport enum NetworkCategory {\n  DOC = 'Doc',\n  CSS = 'CSS',\n  JS = 'JS',\n  FONT = 'Font',\n  IMG = 'Img',\n  MEDIA = 'Media',\n  WASM = 'Wasm',\n  OTHER = 'Other',\n}\n\nexport function networkResourceCategory(request: Trace.Types.Events.SyntheticNetworkRequest): NetworkCategory {\n  const {mimeType} = request.args.data;\n  switch (request.args.data.resourceType) {\n    case Protocol.Network.ResourceType.Document:\n      return NetworkCategory.DOC;\n    case Protocol.Network.ResourceType.Stylesheet:\n      return NetworkCategory.CSS;\n    case Protocol.Network.ResourceType.Image:\n      return NetworkCategory.IMG;\n    case Protocol.Network.ResourceType.Media:\n      return NetworkCategory.MEDIA;\n    case Protocol.Network.ResourceType.Font:\n      return NetworkCategory.FONT;\n    case Protocol.Network.ResourceType.Script:\n    case Protocol.Network.ResourceType.WebSocket:\n      return NetworkCategory.JS;\n    default:\n      // FWIW, all the other (current) resourceTypes are:\n      //     TextTrack, XHR, Fetch, Prefetch, EventSource, Manifest, SignedExchange, Ping, CSPViolationReport, Preflight, Other\n\n      // Traces before Feb 2024 don't have `resourceType`.\n      // We'll keep mimeType logic for a couple years to avoid grey network requests for last year's traces.\n      return mimeType === undefined                                      ? NetworkCategory.OTHER :\n          mimeType.endsWith('/css')                                      ? NetworkCategory.CSS :\n          mimeType.endsWith('javascript')                                ? NetworkCategory.JS :\n          mimeType.startsWith('image/')                                  ? NetworkCategory.IMG :\n          mimeType.startsWith('audio/') || mimeType.startsWith('video/') ? NetworkCategory.MEDIA :\n          mimeType.startsWith('font/') || mimeType.includes('font-')     ? NetworkCategory.FONT :\n          mimeType === 'application/wasm'                                ? NetworkCategory.WASM :\n          mimeType.startsWith('text/')                                   ? NetworkCategory.DOC :\n                                                                           // Ultimate fallback:\n                                                                           NetworkCategory.OTHER;\n  }\n}\n\nexport function colorForNetworkCategory(category: NetworkCategory): string {\n  // TODO: These should align with `baseResourceTypeColors` from `NetworkWaterfallColumn`.\n  let cssVarName = '--app-color-system';\n  switch (category) {\n    case NetworkCategory.DOC:\n      cssVarName = '--app-color-doc';\n      break;\n    case NetworkCategory.JS:\n      cssVarName = '--app-color-scripting';\n      break;\n    case NetworkCategory.CSS:\n      cssVarName = '--app-color-css';\n      break;\n    case NetworkCategory.IMG:\n      cssVarName = '--app-color-image';\n      break;\n    case NetworkCategory.MEDIA:\n      cssVarName = '--app-color-media';\n      break;\n    case NetworkCategory.FONT:\n      cssVarName = '--app-color-font';\n      break;\n    case NetworkCategory.WASM:\n      cssVarName = '--app-color-wasm';\n      break;\n    case NetworkCategory.OTHER:\n    default:\n      cssVarName = '--app-color-system';\n      break;\n  }\n  return ThemeSupport.ThemeSupport.instance().getComputedValue(cssVarName);\n}\n\nexport function colorForNetworkRequest(request: Trace.Types.Events.SyntheticNetworkRequest): string {\n  const category = networkResourceCategory(request);\n  return colorForNetworkCategory(category);\n}\n\nexport type MetricRating = 'good'|'needs-improvement'|'poor';\nexport type MetricThresholds = [number, number];\n\n// TODO: Consolidate our metric rating logic with the trace engine.\nexport const LCP_THRESHOLDS = [2500, 4000] as MetricThresholds;\nexport const CLS_THRESHOLDS = [0.1, 0.25] as MetricThresholds;\nexport const INP_THRESHOLDS = [200, 500] as MetricThresholds;\n\nexport function rateMetric(value: number, thresholds: MetricThresholds): MetricRating {\n  if (value <= thresholds[0]) {\n    return 'good';\n  }\n  if (value <= thresholds[1]) {\n    return 'needs-improvement';\n  }\n  return 'poor';\n}\n\n/**\n * Ensure to also include `metricValueStyles.css` when generating metric value elements.\n */\nexport function renderMetricValue(\n    jslogContext: string, value: number|undefined, thresholds: MetricThresholds, format: (value: number) => string,\n    options?: {dim?: boolean}): HTMLElement {\n  const metricValueEl = document.createElement('span');\n  metricValueEl.classList.add('metric-value');\n  if (value === undefined) {\n    metricValueEl.classList.add('waiting');\n    metricValueEl.textContent = '-';\n    return metricValueEl;\n  }\n\n  metricValueEl.textContent = format(value);\n  const rating = rateMetric(value, thresholds);\n  metricValueEl.classList.add(rating);\n  // Ensure we log impressions of each section. We purposefully add this here\n  // because if we don't have field data (dealt with in the undefined branch\n  // above), we do not want to log an impression on it.\n  metricValueEl.setAttribute('jslog', `${VisualLogging.section(jslogContext)}`);\n  if (options?.dim) {\n    metricValueEl.classList.add('dim');\n  }\n\n  return metricValueEl;\n}\n\nexport interface NumberWithUnitString {\n  element: HTMLElement;\n  text: string;\n}\n\n/**\n * These methods format numbers with units in a way that allows the unit portion to be styled specifically.\n * They return a text string (the usual string resulting from formatting a number), and an HTMLSpanElement.\n * The element contains the formatted number, with a nested span element for the unit portion: `.unit`.\n *\n * This formatting is locale-aware. This is accomplished by utilizing the fact that UIStrings passthru\n * markdown link syntax: `[text that will be translated](not translated)`. The result\n * is a translated string like this: `[t̂éx̂t́ t̂h́ât́ ŵíl̂ĺ b̂é t̂ŕâńŝĺât́êd́](not translated)`. This is used within\n * insight components to localize markdown content. But here, we utilize it to parse a localized string.\n *\n * If the parsing fails, we fallback to i18n.TimeUtilities, and there will be no `.unit` element.\n *\n * As of this writing, our only locale where the unit comes before the number is `sw`, ex: `Sek {PH1}`.\n *\n    new Intl.NumberFormat('sw', {\n      style: 'unit',\n      unit: 'millisecond',\n      unitDisplay: 'narrow'\n    }).format(10); // 'ms 10'\n *\n */\nexport namespace NumberWithUnit {\n  export function parse(text: string): {firstPart: string, unitPart: string, lastPart: string}|null {\n    const startBracket = text.indexOf('[');\n    const endBracket = startBracket !== -1 && text.indexOf(']', startBracket);\n    const startParen = endBracket && text.indexOf('(', endBracket);\n    const endParen = startParen && text.indexOf(')', startParen);\n    if (!endParen || endParen === -1) {\n      return null;\n    }\n\n    const firstPart = text.substring(0, startBracket);\n    const unitPart = text.substring(startBracket + 1, endBracket);\n    const lastPart = text.substring(endParen + 1);  // skips `]()`\n    return {firstPart, unitPart, lastPart};\n  }\n\n  export function formatMicroSecondsAsSeconds(time: Platform.Timing.MicroSeconds): NumberWithUnitString {\n    const element = document.createElement('span');\n    element.classList.add('number-with-unit');\n    const milliseconds = Platform.Timing.microSecondsToMilliSeconds(time);\n    const seconds = Platform.Timing.milliSecondsToSeconds(milliseconds);\n    const text = i18nString(UIStrings.fs, {PH1: (seconds).toFixed(2)});\n\n    const result = parse(text);\n    if (!result) {\n      // Some sort of problem with parsing, so fallback to not marking up the unit.\n      element.textContent = i18n.TimeUtilities.formatMicroSecondsAsSeconds(time);\n      return {text, element};\n    }\n\n    const {firstPart, unitPart, lastPart} = result;\n    if (firstPart) {\n      element.append(firstPart);\n    }\n    element.createChild('span', 'unit').textContent = unitPart;\n    if (lastPart) {\n      element.append(lastPart);\n    }\n\n    return {text: element.textContent ?? '', element};\n  }\n\n  export function formatMicroSecondsAsMillisFixed(time: Platform.Timing.MicroSeconds, fractionDigits = 0):\n      NumberWithUnitString {\n    const element = document.createElement('span');\n    element.classList.add('number-with-unit');\n    const milliseconds = Platform.Timing.microSecondsToMilliSeconds(time);\n    const text = i18nString(UIStrings.fms, {PH1: (milliseconds).toFixed(fractionDigits)});\n\n    const result = parse(text);\n    if (!result) {\n      // Some sort of problem with parsing, so fallback to not marking up the unit.\n      element.textContent = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(time);\n      return {text, element};\n    }\n\n    const {firstPart, unitPart, lastPart} = result;\n    if (firstPart) {\n      element.append(firstPart);\n    }\n    element.createChild('span', 'unit').textContent = unitPart;\n    if (lastPart) {\n      element.append(lastPart);\n    }\n\n    return {text: element.textContent ?? '', element};\n  }\n}\n\n/**\n * Returns if the local value is better/worse/similar compared to field.\n */\nexport function determineCompareRating(\n    metric: 'LCP'|'CLS'|'INP', localValue: Trace.Types.Timing.Milli|number,\n    fieldValue: Trace.Types.Timing.Milli|number): CompareRating|undefined {\n  let thresholds: MetricThresholds;\n  let compareThreshold: number;\n  switch (metric) {\n    case 'LCP':\n      thresholds = LCP_THRESHOLDS;\n      compareThreshold = 1000;\n      break;\n    case 'CLS':\n      thresholds = CLS_THRESHOLDS;\n      compareThreshold = 0.1;\n      break;\n    case 'INP':\n      thresholds = INP_THRESHOLDS;\n      compareThreshold = 200;\n      break;\n    default:\n      Platform.assertNever(metric, `Unknown metric: ${metric}`);\n  }\n\n  const localRating = rateMetric(localValue, thresholds);\n  const fieldRating = rateMetric(fieldValue, thresholds);\n\n  // It's not worth highlighting a significant difference when both #s\n  // are rated \"good\"\n  if (localRating === 'good' && fieldRating === 'good') {\n    return 'similar';\n  }\n\n  if (localValue - fieldValue > compareThreshold) {\n    return 'worse';\n  }\n  if (fieldValue - localValue > compareThreshold) {\n    return 'better';\n  }\n\n  return 'similar';\n}\n", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/markdown_view/markdown_view.js';\n\nimport type * as Common from '../../../core/common/common.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as Marked from '../../../third_party/marked/marked.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as MobileThrottling from '../../mobile_throttling/mobile_throttling.js';\n\nconst {html} = Lit;\nconst MAX_ORIGIN_LENGTH = 60;\n\nexport function getThrottlingRecommendations(): {\n  cpuOption: SDK.CPUThrottlingManager.CPUThrottlingOption|null,\n  networkConditions: SDK.NetworkManager.Conditions|null,\n} {\n  let cpuOption: SDK.CPUThrottlingManager.CPUThrottlingOption =\n      SDK.CPUThrottlingManager.CalibratedMidTierMobileThrottlingOption;\n  if (cpuOption.rate() === 0) {\n    cpuOption = SDK.CPUThrottlingManager.MidTierThrottlingOption;\n  }\n\n  let networkConditions = null;\n  const response = CrUXManager.CrUXManager.instance().getSelectedFieldMetricData('round_trip_time');\n  if (response?.percentiles) {\n    const rtt = Number(response.percentiles.p75);\n    networkConditions = MobileThrottling.ThrottlingPresets.ThrottlingPresets.getRecommendedNetworkPreset(rtt);\n  }\n\n  return {\n    cpuOption,\n    networkConditions,\n  };\n}\n\nfunction createTrimmedUrlSearch(url: URL): string {\n  const maxSearchValueLength = 8;\n  let search = '';\n\n  for (const [key, value] of url.searchParams) {\n    if (search) {\n      search += '&';\n    }\n    if (value) {\n      search += `${key}=${Platform.StringUtilities.trimEndWithMaxLength(value, maxSearchValueLength)}`;\n    } else {\n      search += key;\n    }\n  }\n  if (search) {\n    search = '?' + search;\n  }\n\n  return search;\n}\n\n/**\n * Shortens URLs as much as possible while keeping important context.\n *\n * - Elides the host if the previous url is the same host+protocol\n * - Always elide search param values\n * - Always includes protocol/domain if there is a mix of protocols\n * - First URL is elided fully to show just the pathname, unless there is a mix of protocols (see above)\n */\nexport function createUrlLabels(urls: URL[]): string[] {\n  const labels: string[] = [];\n  const isAllHttps = urls.every(url => url.protocol === 'https:');\n\n  for (const [index, url] of urls.entries()) {\n    const previousUrl = urls[index - 1];\n    const sameHostAndProtocol = previousUrl && url.host === previousUrl.host && url.protocol === previousUrl.protocol;\n    let elideHost = sameHostAndProtocol;\n    let elideProtocol = isAllHttps;\n\n    // For the first URL, show just the pathname and search - this will be relative to the domain as seen in the\n    // trace dropdown selector. Exception is if there are non-https protocols, in which case we're only going to elide\n    // parts of the query string.\n    if (index === 0 && isAllHttps) {\n      elideHost = true;\n      elideProtocol = true;\n    }\n\n    const search = createTrimmedUrlSearch(url);\n    if (!elideProtocol) {\n      labels.push(`${url.protocol}//${url.host}${url.pathname}${search}`);\n    } else if (!elideHost) {\n      labels.push(`${url.host}${url.pathname}${search}`);\n    } else {\n      labels.push(`${url.pathname}${search}`);\n    }\n  }\n\n  // Lastly, remove any trailing `/`.\n  return labels.map(label => label.length > 1 && label.endsWith('/') ? label.substring(0, label.length - 1) : label);\n}\n\n/**\n * Shortens the provided URL for use within a narrow display usecase.\n *\n * The resulting string will at least contain the last path component of the URL.\n * More components are included until a limit of maxChars (default 20) is reached.\n * No querystring is included.\n *\n * If the last path component is larger than maxChars characters, the middle is elided.\n */\nexport function shortenUrl(url: URL, maxChars = 20): string {\n  const parts = url.pathname === '/' ? [url.host] : url.pathname.split('/');\n  let shortenedUrl = parts.at(-1) ?? '';\n\n  if (shortenedUrl.length > maxChars) {\n    return Platform.StringUtilities.trimMiddle(shortenedUrl, maxChars);\n  }\n\n  let i = parts.length - 1;\n  while (--i >= 0) {\n    if (shortenedUrl.length + parts[i].length <= maxChars) {\n      shortenedUrl = `${parts[i]}/${shortenedUrl}`;\n    }\n  }\n\n  return shortenedUrl;\n}\n\n/**\n * Returns a rendered MarkdownView component.\n *\n * This should only be used for markdown that is guaranteed to be valid,\n * and not contain any user-generated content.\n */\nexport function md(markdown: Common.UIString.LocalizedString): Lit.TemplateResult {\n  const tokens = Marked.Marked.lexer(markdown);\n  const data = {tokens};\n  return html`<devtools-markdown-view .data=${data}></devtools-markdown-view>`;\n}\n\n/**\n * Returns a string containing both the origin and its 3rd party entity.\n *\n * By default we construct by diving with a hyphen, but with an optional\n * parenthesizeEntity to parenthesize the entity.\n *\n * @example 'uk-script.dotmetrics.net - DotMetrics'\n * @example 'securepubads.g.doubleclick.net (Google/Doubleclick Ads)'\n */\nexport function formatOriginWithEntity(\n    url: URL, entity: Trace.Handlers.Helpers.Entity|null, parenthesizeEntity?: boolean): string {\n  const origin = url.origin.replace('https://', '');\n  if (!entity) {\n    return origin;\n  }\n  let originWithEntity;\n  // If we have an unrecognized entity, entity name would be the same as the origin.\n  if (entity.isUnrecognized) {\n    originWithEntity = `${origin}`;\n  } else {\n    originWithEntity = parenthesizeEntity ? `${origin} (${entity.name})` : `${origin} - ${entity.name}`;\n  }\n\n  originWithEntity = Platform.StringUtilities.trimEndWithMaxLength(originWithEntity, MAX_ORIGIN_LENGTH);\n  return originWithEntity;\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.container {\n  container-type: inline-size;\n  height: 100%;\n  font-size: var(--sys-typescale-body4-size);\n  line-height: var(--sys-typescale-body4-line-height);\n  font-weight: var(--ref-typeface-weight-regular);\n  user-select: text;\n}\n\n.live-metrics-view {\n  --min-main-area-size: 60%;\n\n  background-color: var(--sys-color-cdt-base-container);\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: 100%;\n}\n\n.live-metrics,\n.next-steps {\n  padding: 16px;\n  height: 100%;\n  overflow-y: auto;\n  box-sizing: border-box;\n}\n\n.live-metrics {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.next-steps {\n  flex: 0 0 336px;\n  box-sizing: border-box;\n  border: none;\n  border-left: 1px solid var(--sys-color-divider);\n}\n\n@container (max-width: 650px) {\n  .live-metrics-view {\n    flex-direction: column;\n  }\n\n  .next-steps {\n    flex-basis: 40%;\n    border: none;\n    border-top: 1px solid var(--sys-color-divider);\n  }\n}\n\n.metric-cards {\n  display: grid;\n  gap: 16px;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  width: 100%;\n}\n\n.section-title {\n  font-size: var(--sys-typescale-headline4-size);\n  line-height: var(--sys-typescale-headline4-line-height);\n  font-weight: var(--ref-typeface-weight-medium);\n  margin: 0;\n  margin-bottom: 10px;\n}\n\n.settings-card {\n  border-radius: var(--sys-shape-corner-small);\n  padding: 14px 16px 16px;\n  background-color: var(--sys-color-surface3);\n  margin-bottom: 16px;\n}\n\n.record-action-card {\n  border-radius: var(--sys-shape-corner-small);\n  padding: 12px 16px 12px 12px;\n  background-color: var(--sys-color-surface3);\n  margin-bottom: 16px;\n}\n\n.card-title {\n  font-size: var(--sys-typescale-headline5-size);\n  line-height: var(--sys-typescale-headline5-line-height);\n  font-weight: var(--ref-typeface-weight-medium);\n  margin: 0;\n}\n\n.settings-card .card-title {\n  margin-bottom: 4px;\n}\n\n.device-toolbar-description {\n  margin-bottom: 12px;\n  display: flex;\n}\n\n.network-cache-setting {\n  display: inline-block;\n  max-width: max-content;\n}\n\n.throttling-recommendation-value {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.related-info {\n  text-wrap: nowrap;\n  margin-top: 8px;\n  display: flex;\n}\n\n.related-info-label {\n  font-weight: var(--ref-typeface-weight-medium);\n  margin-right: 4px;\n}\n\n.related-info-link {\n  background-color: var(--sys-color-cdt-base-container);\n  border-radius: 2px;\n  padding: 0 2px;\n  min-width: 0;\n}\n\n.local-field-link {\n  display: inline-block;\n  width: fit-content;\n  margin-top: 8px;\n}\n\n.logs-section {\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  flex: 1 0 300px;\n  overflow: hidden;\n  max-height: max-content;\n\n  --app-color-toolbar-background: transparent;\n}\n\n.logs-section-header {\n  display: flex;\n  align-items: center;\n}\n\n.interactions-clear {\n  margin-left: 4px;\n  vertical-align: sub;\n}\n\n.log {\n  padding: 0;\n  margin: 0;\n  overflow: auto;\n}\n\n.log-item {\n  border: none;\n  border-bottom: 1px solid var(--sys-color-divider);\n\n  &.highlight {\n    animation: highlight-fadeout 2s;\n  }\n}\n\n.interaction {\n  --phase-table-margin: 120px;\n  --details-indicator-width: 18px;\n\n  summary {\n    display: flex;\n    align-items: center;\n    padding: 7px 4px;\n\n    &::before {\n      content: \" \";\n      height: 14px;\n      width: var(--details-indicator-width);\n      mask-image: var(--image-file-triangle-right);\n      background-color: var(--icon-default);\n      flex-shrink: 0;\n    }\n  }\n\n  details[open] summary::before {\n    mask-image: var(--image-file-triangle-down);\n  }\n}\n\n.interaction-type {\n  font-weight: var(--ref-typeface-weight-medium);\n  width: calc(var(--phase-table-margin) - var(--details-indicator-width));\n  flex-shrink: 0;\n}\n\n.interaction-inp-chip {\n  background-color: var(--sys-color-yellow-bright);\n  color: var(--sys-color-on-yellow);\n  padding: 0 2px;\n}\n\n.interaction-node {\n  flex-grow: 1;\n  margin-right: 32px;\n  min-width: 0;\n}\n\n.interaction-info {\n  width: var(--sys-typescale-body4-line-height);\n  height: var(--sys-typescale-body4-line-height);\n  margin-right: 6px;\n}\n\n.interaction-duration {\n  text-align: end;\n  width: max-content;\n  flex-shrink: 0;\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.layout-shift {\n  display: flex;\n  align-items: flex-start;\n}\n\n.layout-shift-score {\n  margin-right: 16px;\n  padding: 7px 0;\n  width: 150px;\n  box-sizing: border-box;\n}\n\n.layout-shift-nodes {\n  flex: 1;\n  min-width: 0;\n}\n\n.layout-shift-node {\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding: 7px 0;\n\n  &:last-child {\n    border: none;\n  }\n}\n\n.record-action {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  gap: 8px;\n}\n\n.shortcut-label {\n  width: max-content;\n  flex-shrink: 0;\n}\n\n.field-data-option {\n  margin: 8px 0;\n  max-width: 100%;\n}\n\n.field-setup-buttons {\n  margin-top: 14px;\n}\n\n.field-data-message {\n  margin-bottom: 12px;\n}\n\n.field-data-warning {\n  margin-top: 4px;\n  color: var(--sys-color-error);\n  font-size: var(--sys-typescale-body4-size);\n  line-height: var(--sys-typescale-body4-line-height);\n  display: flex;\n\n  &::before {\n    content: \" \";\n    width: var(--sys-typescale-body4-line-height);\n    height: var(--sys-typescale-body4-line-height);\n    mask-size: var(--sys-typescale-body4-line-height);\n    mask-image: var(--image-file-warning);\n    background-color: var(--sys-color-error);\n    margin-right: 4px;\n    flex-shrink: 0;\n  }\n}\n\n.collection-period-range {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\nx-link {\n  color: var(--sys-color-primary);\n  text-decoration-line: underline;\n}\n\n.environment-option {\n  display: flex;\n  align-items: center;\n  margin-top: 8px;\n}\n\n.environment-recs-list {\n  margin: 0;\n  padding-left: 20px;\n}\n\n.environment-rec {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.link-to-log {\n  padding: unset;\n  background: unset;\n  border: unset;\n  font: inherit;\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n@keyframes highlight-fadeout {\n  from {\n    background-color: var(--sys-color-yellow-container);\n  }\n\n  to {\n    background-color: transparent;\n  }\n}\n\n.phase-table {\n  border-top: 1px solid var(--sys-color-divider);\n  padding: 7px 4px;\n  margin-left: var(--phase-table-margin);\n}\n\n.phase-table-row {\n  display: flex;\n  justify-content: space-between;\n}\n\n.phase-table-header-row {\n  font-weight: var(--ref-typeface-weight-medium);\n  margin-bottom: 4px;\n}\n\n.log-extra-details-button {\n  padding: unset;\n  background: unset;\n  border: unset;\n  font: inherit;\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.node-view {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  font-size: var(--sys-typescale-body4-size);\n  line-height: var(--sys-typescale-body4-line-height);\n  font-weight: var(--ref-typeface-weight-regular);\n  user-select: text;\n\n  main {\n    width: 300px;\n    max-width: 100%;\n    text-align: center;\n\n    .section-title {\n      margin-bottom: 4px;\n    }\n  }\n}\n\n.node-description {\n  margin-bottom: 12px;\n}\n\n/*# sourceURL=${import.meta.resolve('./liveMetricsView.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/request_link_icon/request_link_icon.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Helpers from '../../../models/trace/helpers/helpers.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as LegacyComponents from '../../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport type * as TimelineUtils from '../utils/utils.js';\n\nimport networkRequestDetailsStyles from './networkRequestDetails.css.js';\nimport networkRequestTooltipStyles from './networkRequestTooltip.css.js';\nimport {NetworkRequestTooltip} from './NetworkRequestTooltip.js';\nimport {colorForNetworkRequest} from './Utils.js';\n\nconst {html} = Lit;\n\nconst MAX_URL_LENGTH = 100;\n\nconst UIStrings = {\n  /**\n   *@description Text that refers to the network request method\n   */\n  requestMethod: 'Request method',\n  /**\n   *@description Text that refers to the network request protocol\n   */\n  protocol: 'Protocol',\n  /**\n   *@description Text to show the priority of an item\n   */\n  priority: 'Priority',\n  /**\n   *@description Text used when referring to the data sent in a network request that is encoded as a particular file format.\n   */\n  encodedData: 'Encoded data',\n  /**\n   *@description Text used to refer to the data sent in a network request that has been decoded.\n   */\n  decodedBody: 'Decoded body',\n  /**\n   *@description Text in Timeline indicating that input has happened recently\n   */\n  yes: 'Yes',\n  /**\n   *@description Text in Timeline indicating that input has not happened recently\n   */\n  no: 'No',\n  /**\n   *@description Text to indicate to the user they are viewing an event representing a network request.\n   */\n  networkRequest: 'Network request',\n  /**\n   *@description Text for the data source of a network request.\n   */\n  fromCache: 'From cache',\n  /**\n   *@description Text used to show the mime-type of the data transferred with a network request (e.g. \"application/json\").\n   */\n  mimeType: 'MIME type',\n  /**\n   *@description Text used to show the user that a request was served from the browser's in-memory cache.\n   */\n  FromMemoryCache: ' (from memory cache)',\n  /**\n   *@description Text used to show the user that a request was served from the browser's file cache.\n   */\n  FromCache: ' (from cache)',\n  /**\n   *@description Label for a network request indicating that it was a HTTP2 server push instead of a regular network request, in the Performance panel\n   */\n  FromPush: ' (from push)',\n  /**\n   *@description Text used to show a user that a request was served from an installed, active service worker.\n   */\n  FromServiceWorker: ' (from `service worker`)',\n  /**\n   *@description Text for the event initiated by another one\n   */\n  initiatedBy: 'Initiated by',\n  /**\n   *@description Text that refers to if the network request is blocking\n   */\n  blocking: 'Blocking',\n  /**\n   *@description Text that refers to if the network request is in-body parser render blocking\n   */\n  inBodyParserBlocking: 'In-body parser blocking',\n  /**\n   *@description Text that refers to if the network request is render blocking\n   */\n  renderBlocking: 'Render blocking',\n  /**\n   * @description Text to refer to a 3rd Party entity.\n   */\n  entity: '3rd party',\n  /**\n   * @description Label for a column containing the names of timings (performance metric) taken in the server side application.\n   */\n  serverTiming: 'Server timing',\n  /**\n   * @description Label for a column containing the values of timings (performance metric) taken in the server side application.\n   */\n  time: 'Time',\n  /**\n   * @description Label for a column containing the description of timings (performance metric) taken in the server side application.\n   */\n  description: 'Description',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/NetworkRequestDetails.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class NetworkRequestDetails extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #networkRequest: Trace.Types.Events.SyntheticNetworkRequest|null = null;\n  #maybeTarget: SDK.Target.Target|null = null;\n  #requestPreviewElements = new WeakMap<Trace.Types.Events.SyntheticNetworkRequest, HTMLElement>();\n  #linkifier: LegacyComponents.Linkifier.Linkifier;\n  #parsedTrace: Trace.Handlers.Types.ParsedTrace|null = null;\n  #entityMapper: TimelineUtils.EntityMapper.EntityMapper|null = null;\n  #serverTimings: SDK.ServerTiming.ServerTiming[]|null = null;\n  constructor(linkifier: LegacyComponents.Linkifier.Linkifier) {\n    super();\n    this.#linkifier = linkifier;\n  }\n\n  async setData(\n      parsedTrace: Trace.Handlers.Types.ParsedTrace, networkRequest: Trace.Types.Events.SyntheticNetworkRequest,\n      maybeTarget: SDK.Target.Target|null, entityMapper: TimelineUtils.EntityMapper.EntityMapper|null): Promise<void> {\n    if (this.#networkRequest === networkRequest && parsedTrace === this.#parsedTrace) {\n      return;\n    }\n    this.#parsedTrace = parsedTrace;\n    this.#networkRequest = networkRequest;\n    this.#maybeTarget = maybeTarget;\n    this.#entityMapper = entityMapper;\n    this.#serverTimings = null;\n\n    for (const header of networkRequest.args.data.responseHeaders ?? []) {\n      const headerName = header.name.toLocaleLowerCase();\n      // Some popular hosting providers like vercel or render get rid of\n      // Server-Timing headers added by users, so as a workaround we\n      // also support server timing headers with the `-test` suffix\n      // while this feature is experimental, to enable easier trials.\n      if (headerName === 'server-timing' || headerName === 'server-timing-test') {\n        header.name = 'server-timing';\n        this.#serverTimings = SDK.ServerTiming.ServerTiming.parseHeaders([header]);\n        break;\n      }\n    }\n    await this.#render();\n  }\n\n  #renderTitle(): Lit.TemplateResult|null {\n    if (!this.#networkRequest) {\n      return null;\n    }\n    const style = {\n      backgroundColor: `${colorForNetworkRequest(this.#networkRequest)}`,\n    };\n    return html`\n      <div class=\"network-request-details-title\">\n        <div style=${Lit.Directives.styleMap(style)}></div>\n        ${i18nString(UIStrings.networkRequest)}\n      </div>\n    `;\n  }\n\n  #renderRow(title: string, value?: string|Node|Lit.TemplateResult): Lit.TemplateResult|null {\n    if (!value) {\n      return null;\n    }\n    // clang-format off\n    return html`\n      <div class=\"network-request-details-row\">\n        <div class=\"title\">${title}</div>\n        <div class=\"value\">${value}</div>\n      </div>`;\n    // clang-format on\n  }\n\n  #renderServerTimings(): Lit.LitTemplate[]|Lit.LitTemplate {\n    if (!this.#serverTimings) {\n      return Lit.nothing;\n    }\n    // clang-format off\n    return html`\n      <div class=\"column-divider\"></div>\n      <div class=\"network-request-details-col server-timings\">\n          <div class=\"server-timing-column-header\">${i18nString(UIStrings.serverTiming)}</div>\n          <div class=\"server-timing-column-header\">${i18nString(UIStrings.description)}</div>\n          <div class=\"server-timing-column-header\">${i18nString(UIStrings.time)}</div>\n        ${this.#serverTimings.map(timing => {\n          const classes = timing.metric.startsWith('(c') ? 'synthetic value' : 'value';\n          return html`\n              <div class=${classes}>${timing.metric || '-'}</div>\n              <div class=${classes}>${timing.description || '-'}</div>\n              <div class=${classes}>${timing.value || '-'}</div>\n          `;\n        })}\n      </div>`;\n    // clang-format on\n  }\n\n  #renderURL(): Lit.TemplateResult|null {\n    if (!this.#networkRequest) {\n      return null;\n    }\n    const options: LegacyComponents.Linkifier.LinkifyURLOptions = {\n      tabStop: true,\n      showColumnNumber: false,\n      inlineFrameIndex: 0,\n      maxLength: MAX_URL_LENGTH,\n    };\n    const linkifiedURL = LegacyComponents.Linkifier.Linkifier.linkifyURL(\n        this.#networkRequest.args.data.url as Platform.DevToolsPath.UrlString, options);\n\n    // Potentially link to request within Network Panel\n    const networkRequest = SDK.TraceObject.RevealableNetworkRequest.create(this.#networkRequest);\n    if (networkRequest) {\n      linkifiedURL.addEventListener('contextmenu', (event: MouseEvent) => {\n        if (!this.#networkRequest) {\n          return;\n        }\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        contextMenu.appendApplicableItems(networkRequest);\n        void contextMenu.show();\n      });\n\n      // clang-format off\n      const urlElement = html`\n        ${linkifiedURL}\n        <devtools-request-link-icon .data=${{request: networkRequest.networkRequest}}>\n        </devtools-request-link-icon>\n      `;\n      // clang-format on\n      return html`<div class=\"network-request-details-item\">${urlElement}</div>`;\n    }\n\n    return html`<div class=\"network-request-details-item\">${linkifiedURL}</div>`;\n  }\n\n  #renderFromCache(): Lit.TemplateResult|null {\n    if (!this.#networkRequest) {\n      return null;\n    }\n    const cached = this.#networkRequest.args.data.syntheticData.isMemoryCached ||\n        this.#networkRequest.args.data.syntheticData.isDiskCached;\n    return this.#renderRow(\n        i18nString(UIStrings.fromCache), cached ? i18nString(UIStrings.yes) : i18nString(UIStrings.no));\n  }\n\n  #renderThirdPartyEntity(): Lit.TemplateResult|null {\n    if (!this.#entityMapper || !this.#networkRequest) {\n      return null;\n    }\n    const entity = this.#entityMapper.entityForEvent(this.#networkRequest);\n    if (!entity) {\n      return null;\n    }\n    return this.#renderRow(i18nString(UIStrings.entity), entity.name);\n  }\n\n  #renderEncodedDataLength(): Lit.TemplateResult|null {\n    if (!this.#networkRequest) {\n      return null;\n    }\n    let lengthText = '';\n    if (this.#networkRequest.args.data.syntheticData.isMemoryCached) {\n      lengthText += i18nString(UIStrings.FromMemoryCache);\n    } else if (this.#networkRequest.args.data.syntheticData.isDiskCached) {\n      lengthText += i18nString(UIStrings.FromCache);\n    } else if (this.#networkRequest.args.data.timing?.pushStart) {\n      lengthText += i18nString(UIStrings.FromPush);\n    }\n    if (this.#networkRequest.args.data.fromServiceWorker) {\n      lengthText += i18nString(UIStrings.FromServiceWorker);\n    }\n    if (this.#networkRequest.args.data.encodedDataLength || !lengthText) {\n      lengthText = `${i18n.ByteUtilities.bytesToString(this.#networkRequest.args.data.encodedDataLength)}${lengthText}`;\n    }\n    return this.#renderRow(i18nString(UIStrings.encodedData), lengthText);\n  }\n\n  #renderInitiatedBy(): Lit.TemplateResult|null {\n    if (!this.#networkRequest) {\n      return null;\n    }\n\n    const hasStackTrace = Trace.Helpers.Trace.stackTraceInEvent(this.#networkRequest) !== null;\n    let link: HTMLElement|null = null;\n    const options: LegacyComponents.Linkifier.LinkifyOptions = {\n      tabStop: true,\n      showColumnNumber: true,\n      inlineFrameIndex: 0,\n    };\n    // If we have a stack trace, that is the most reliable way to get the initiator data and display a link to the source.\n    if (hasStackTrace) {\n      const topFrame = Trace.Helpers.Trace.getZeroIndexedStackTraceInEventPayload(this.#networkRequest)?.at(0) ?? null;\n      if (topFrame) {\n        link = this.#linkifier.maybeLinkifyConsoleCallFrame(this.#maybeTarget, topFrame, options);\n      }\n    }\n    // If we do not, we can see if the network handler found an initiator and try to link by URL\n    const initiator = this.#parsedTrace?.NetworkRequests.eventToInitiator.get(this.#networkRequest);\n    if (initiator) {\n      link = this.#linkifier.maybeLinkifyScriptLocation(\n          this.#maybeTarget,\n          null,  // this would be the scriptId, but we don't have one. The linkifier will fallback to using the URL.\n          initiator.args.data.url as Platform.DevToolsPath.UrlString,\n          undefined,  // line number\n          options);\n    }\n\n    if (!link) {\n      return null;\n    }\n\n    // clang-format off\n    return html`\n      <div class=\"network-request-details-item\">\n        <div class=\"title\">${i18nString(UIStrings.initiatedBy)}</div>\n        <div class=\"value focusable-outline\">${link}</div>\n      </div>`;\n    // clang-format on\n  }\n\n  #renderBlockingRow(): Lit.TemplateResult|null {\n    if (!this.#networkRequest || !Helpers.Network.isSyntheticNetworkRequestEventRenderBlocking(this.#networkRequest)) {\n      return null;\n    }\n\n    let renderBlockingText;\n    switch (this.#networkRequest.args.data.renderBlocking) {\n      case 'blocking':\n        renderBlockingText = UIStrings.renderBlocking;\n        break;\n      case 'in_body_parser_blocking':\n        renderBlockingText = UIStrings.inBodyParserBlocking;\n        break;\n      default:\n        // Shouldn't fall to this block, if so, this network request is not render blocking, so return null.\n        return null;\n    }\n    return this.#renderRow(i18nString(UIStrings.blocking), renderBlockingText);\n  }\n\n  async #renderPreviewElement(): Promise<Lit.TemplateResult|null> {\n    if (!this.#networkRequest || !this.#networkRequest.args.data.url || !this.#maybeTarget) {\n      return null;\n    }\n    if (!this.#requestPreviewElements.get(this.#networkRequest)) {\n      const previewOpts = {\n        imageAltText: LegacyComponents.ImagePreview.ImagePreview.defaultAltTextForImageURL(\n            this.#networkRequest.args.data.url as Platform.DevToolsPath.UrlString),\n        precomputedFeatures: undefined,\n        align: LegacyComponents.ImagePreview.Align.START,\n        hideFileData: true,\n      };\n\n      const previewElement = await LegacyComponents.ImagePreview.ImagePreview.build(\n          this.#networkRequest.args.data.url as Platform.DevToolsPath.UrlString, false, previewOpts);\n      previewElement && this.#requestPreviewElements.set(this.#networkRequest, previewElement);\n    }\n\n    const requestPreviewElement = this.#requestPreviewElements.get(this.#networkRequest);\n    if (requestPreviewElement) {\n      // clang-format off\n      return html`\n        <div class=\"network-request-details-col\">${requestPreviewElement}</div>\n        <div class=\"column-divider\"></div>`;\n      // clang-format on\n    }\n    return null;\n  }\n\n  async #render(): Promise<void> {\n    if (!this.#networkRequest) {\n      return;\n    }\n    const networkData = this.#networkRequest.args.data;\n\n    const redirectsHtml = NetworkRequestTooltip.renderRedirects(this.#networkRequest);\n\n    // clang-format off\n    const output = html`\n      <style>${networkRequestDetailsStyles}</style>\n      <style>${networkRequestTooltipStyles}</style>\n      <div class=\"network-request-details-content\">\n        ${this.#renderTitle()}\n        ${this.#renderURL()}\n        <div class=\"network-request-details-cols\">\n          ${await this.#renderPreviewElement()}\n          <div class=\"network-request-details-col\">\n            ${this.#renderRow(i18nString(UIStrings.requestMethod), networkData.requestMethod)}\n            ${this.#renderRow(i18nString(UIStrings.protocol), networkData.protocol)}\n            ${this.#renderRow(i18nString(UIStrings.priority), NetworkRequestTooltip.renderPriorityValue(this.#networkRequest))}\n            ${this.#renderRow(i18nString(UIStrings.mimeType), networkData.mimeType)}\n            ${this.#renderEncodedDataLength()}\n            ${this.#renderRow(i18nString(UIStrings.decodedBody), i18n.ByteUtilities.bytesToString(this.#networkRequest.args.data.decodedBodyLength))}\n            ${this.#renderBlockingRow()}\n            ${this.#renderFromCache()}\n            ${this.#renderThirdPartyEntity()}\n          </div>\n          <div class=\"column-divider\"></div>\n          <div class=\"network-request-details-col\">\n            <div class=\"timing-rows\">\n              ${NetworkRequestTooltip.renderTimings(this.#networkRequest)}\n            </div>\n          </div>\n          ${this.#renderServerTimings()}\n          ${redirectsHtml ? html `\n            <div class=\"column-divider\"></div>\n            <div class=\"network-request-details-col redirect-details\">\n              ${redirectsHtml}\n            </div>\n          ` : Lit.nothing}\n        </div>\n        ${this.#renderInitiatedBy()}\n      </div>\n    `; // The last items are outside the 2 column layout because InitiatedBy can be very wide\n    // clang-format on\n    Lit.render(output, this.#shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-network-request-details': NetworkRequestDetails;\n  }\n}\n\ncustomElements.define('devtools-performance-network-request-details', NetworkRequestDetails);\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.network-request-details-title {\n  font-size: 13px;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n}\n\n.network-request-details-title > div {\n  box-sizing: border-box;\n  width: 12px;\n  height: 12px;\n  border: 1px solid var(--sys-color-divider);\n  display: inline-block;\n  margin-right: 4px;\n}\n\n.network-request-details-content {\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.network-request-details-cols {\n  display: flex;\n  justify-content: space-between;\n  width: fit-content;\n}\n\n:host {\n  display: contents; /* needed to avoid a floating border when scrolling */\n}\n\n.network-request-details-col {\n  max-width: 300px;\n}\n\n.column-divider {\n  border-left: 1px solid var(--sys-color-divider);\n}\n\n.network-request-details-col.server-timings {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  width: fit-content;\n  width: 450px;\n  gap: 0;\n}\n\n.network-request-details-item, .network-request-details-col {\n  padding: 5px 10px;\n}\n\n.server-timing-column-header {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.network-request-details-row {\n  min-height: min-content;\n  display: flex;\n  justify-content: space-between;\n}\n\n.title {\n  color: var(--sys-color-token-subtle);\n  overflow: hidden;\n  padding-right: 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.value {\n  display: inline-block;\n  user-select: text;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &.synthetic {\n    font-style: italic;\n  }\n}\n\n.focusable-outline {\n  overflow: visible;\n}\n\n.devtools-link,\n.timeline-link {\n  color: var(--text-link);\n  text-decoration: underline;\n  outline-offset: 2px;\n  padding: 0;\n  text-align: left;\n\n  .elements-disclosure & {\n    color: var(--text-link);\n  }\n\n  devtools-icon {\n    vertical-align: baseline;\n    color: var(--sys-color-primary);\n  }\n\n  :focus .selected & devtools-icon {\n    color: var(--sys-color-tonal-container);\n  }\n\n  &:focus-visible {\n    outline-width: unset;\n  }\n\n  &.invalid-link {\n    color: var(--text-disabled);\n    text-decoration: none;\n  }\n\n  &:not(.devtools-link-prevent-click, .invalid-link) {\n    cursor: pointer;\n  }\n\n  @media (forced-colors: active) {\n    &:not(.devtools-link-prevent-click) {\n      forced-color-adjust: none;\n      color: linktext;\n    }\n\n    &:focus-visible {\n      background: Highlight;\n      color: HighlightText;\n    }\n  }\n}\n\n.text-button.link-style,\n.text-button.link-style:hover,\n.text-button.link-style:active {\n  background: none;\n  border: none;\n  font: inherit;\n}\n\n/*# sourceURL=${import.meta.resolve('./networkRequestDetails.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.bold {\n  font-weight: bold;\n}\n\n.url {\n  margin-left: 15px;\n  margin-right: 5px;\n}\n\n.url--host {\n  color: var(--sys-color-token-subtle);\n}\n\n.priority-row {\n  margin-left: 15px;\n}\n\n.network-category-chip {\n  box-sizing: border-box;\n  width: 10px;\n  height: 10px;\n  border: 1px solid var(--sys-color-divider);\n  display: inline-block;\n  margin-right: 4px;\n}\n\ndevtools-icon.priority {\n  height: 13px;\n  width: 13px;\n  color: var(--sys-color-on-surface-subtle);\n}\n\n.render-blocking {\n  margin-left: 15px;\n  color: var(--sys-color-error);\n}\n\n.divider {\n  border-top: 1px solid var(--sys-color-divider);\n  margin: 5px 0;\n}\n\n.timings-row {\n  align-self: start;\n  display: flex;\n  align-items: center;\n}\n\n.indicator {\n  display: inline-block;\n  width: 10px;\n  height: 4px;\n  margin-right: 5px;\n  border: 1px solid var(--sys-color-on-surface-subtle);\n}\n\n.whisker-left {\n  align-self: center;\n  display: inline-flex;\n  width: 10px;\n  height: 6px;\n  margin-right: 5px;\n  border-left: 1px solid var(--sys-color-on-surface-subtle);\n}\n\n.whisker-right {\n  align-self: center;\n  display: inline-flex;\n  width: 10px;\n  height: 6px;\n  margin-right: 5px;\n  border-right: 1px solid var(--sys-color-on-surface-subtle);\n}\n\n.horizontal {\n  background-color: var(--sys-color-on-surface-subtle);\n  height: 1px;\n  width: 10px;\n  align-self: center;\n}\n\n.time {\n  /* Push the time to right. */\n  margin-left: auto;\n  display: inline-block;\n  padding-left: 10px;\n}\n\n.timings-row--duration {\n  .indicator {\n    border-color: transparent;\n  }\n\n  .time {\n    font-weight: var(--ref-typeface-weight-medium);\n  }\n}\n\n.redirects-row {\n  margin-left: 15px;\n}\n\n/*# sourceURL=${import.meta.resolve('./networkRequestTooltip.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/icon_button/icon_button.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as PerfUI from '../../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as TimelineUtils from '../utils/utils.js';\n\nimport networkRequestTooltipStyles from './networkRequestTooltip.css.js';\nimport {colorForNetworkRequest, networkResourceCategory} from './Utils.js';\n\nconst {html} = Lit;\n\nconst MAX_URL_LENGTH = 60;\n\nconst UIStrings = {\n  /**\n   *@description Text that refers to the priority of network request\n   */\n  priority: 'Priority',\n  /**\n   *@description Text for the duration of a network request\n   */\n  duration: 'Duration',\n  /**\n   *@description Text that refers to the queueing and connecting time of a network request\n   */\n  queuingAndConnecting: 'Queuing and connecting',\n  /**\n   *@description Text that refers to the request sent and waiting time of a network request\n   */\n  requestSentAndWaiting: 'Request sent and waiting',\n  /**\n   *@description Text that refers to the content downloading time of a network request\n   */\n  contentDownloading: 'Content downloading',\n  /**\n   *@description Text that refers to the waiting on main thread time of a network request\n   */\n  waitingOnMainThread: 'Waiting on main thread',\n  /**\n   *@description Text that refers to a network request is render blocking\n   */\n  renderBlocking: 'Render blocking',\n  /**\n   * @description Text to refer to the list of redirects.\n   */\n  redirects: 'Redirects',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/NetworkRequestTooltip.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface NetworkTooltipData {\n  networkRequest: Trace.Types.Events.SyntheticNetworkRequest|null;\n  entityMapper: TimelineUtils.EntityMapper.EntityMapper|null;\n}\n\nexport class NetworkRequestTooltip extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #data: NetworkTooltipData = {networkRequest: null, entityMapper: null};\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  set data(data: NetworkTooltipData) {\n    if (this.#data.networkRequest === data.networkRequest) {\n      return;\n    }\n    if (this.#data.entityMapper === data.entityMapper) {\n      return;\n    }\n    this.#data = {networkRequest: data.networkRequest, entityMapper: data.entityMapper};\n    this.#render();\n  }\n\n  static renderPriorityValue(networkRequest: Trace.Types.Events.SyntheticNetworkRequest): Lit.TemplateResult {\n    if (networkRequest.args.data.priority === networkRequest.args.data.initialPriority) {\n      return html`${PerfUI.NetworkPriorities.uiLabelForNetworkPriority(networkRequest.args.data.priority)}`;\n    }\n    return html`${PerfUI.NetworkPriorities.uiLabelForNetworkPriority(networkRequest.args.data.initialPriority)}\n        <devtools-icon name=${'arrow-forward'} class=\"priority\"></devtools-icon>\n        ${PerfUI.NetworkPriorities.uiLabelForNetworkPriority(networkRequest.args.data.priority)}`;\n  }\n\n  static renderTimings(networkRequest: Trace.Types.Events.SyntheticNetworkRequest): Lit.TemplateResult|null {\n    const syntheticData = networkRequest.args.data.syntheticData;\n    const queueing = (syntheticData.sendStartTime - networkRequest.ts) as Trace.Types.Timing.Micro;\n    const requestPlusWaiting = (syntheticData.downloadStart - syntheticData.sendStartTime) as Trace.Types.Timing.Micro;\n    const download = (syntheticData.finishTime - syntheticData.downloadStart) as Trace.Types.Timing.Micro;\n    const waitingOnMainThread =\n        (networkRequest.ts + networkRequest.dur - syntheticData.finishTime) as Trace.Types.Timing.Micro;\n\n    const color = colorForNetworkRequest(networkRequest);\n    const styleForWaiting = {\n      backgroundColor: `color-mix(in srgb, ${color}, hsla(0, 100%, 100%, 0.8))`,\n    };\n    const styleForDownloading = {\n      backgroundColor: color,\n    };\n\n    // The outside spans are transparent with a border on the outside edge.\n    // The inside spans are 1px tall rectangles, vertically centered, with background color.\n    //                   |\n    //                   |----\n    //   whisker-left->  |  ^ horizontal\n    const leftWhisker = html`<span class=\"whisker-left\"> <span class=\"horizontal\"></span> </span>`;\n    const rightWhisker = html`<span class=\"whisker-right\"> <span class=\"horizontal\"></span> </span>`;\n\n    return html`\n      <div class=\"timings-row timings-row--duration\">\n        <span class=\"indicator\"></span>\n        ${i18nString(UIStrings.duration)}\n         <span class=\"time\"> ${i18n.TimeUtilities.formatMicroSecondsTime(networkRequest.dur)} </span>\n      </div>\n      <div class=\"timings-row\">\n        ${leftWhisker}\n        ${i18nString(UIStrings.queuingAndConnecting)}\n        <span class=\"time\"> ${i18n.TimeUtilities.formatMicroSecondsTime(queueing)} </span>\n      </div>\n      <div class=\"timings-row\">\n        <span class=\"indicator\" style=${Lit.Directives.styleMap(styleForWaiting)}></span>\n        ${i18nString(UIStrings.requestSentAndWaiting)}\n        <span class=\"time\"> ${i18n.TimeUtilities.formatMicroSecondsTime(requestPlusWaiting)} </span>\n      </div>\n      <div class=\"timings-row\">\n        <span class=\"indicator\" style=${Lit.Directives.styleMap(styleForDownloading)}></span>\n        ${i18nString(UIStrings.contentDownloading)}\n        <span class=\"time\"> ${i18n.TimeUtilities.formatMicroSecondsTime(download)} </span>\n      </div>\n      <div class=\"timings-row\">\n        ${rightWhisker}\n        ${i18nString(UIStrings.waitingOnMainThread)}\n        <span class=\"time\"> ${i18n.TimeUtilities.formatMicroSecondsTime(waitingOnMainThread)} </span>\n      </div>\n    `;\n  }\n\n  static renderRedirects(networkRequest: Trace.Types.Events.SyntheticNetworkRequest): Lit.TemplateResult|null {\n    const redirectRows = [];\n    if (networkRequest.args.data.redirects.length > 0) {\n      redirectRows.push(html`\n        <div class=\"redirects-row\">\n          ${i18nString(UIStrings.redirects)}\n        </div>\n      `);\n      for (const redirect of networkRequest.args.data.redirects) {\n        redirectRows.push(html`<div class=\"redirects-row\"> ${redirect.url}</div>`);\n      }\n      return html`${redirectRows}`;\n    }\n\n    return null;\n  }\n\n  #render(): void {\n    if (!this.#data.networkRequest) {\n      return;\n    }\n    const chipStyle = {\n      backgroundColor: `${colorForNetworkRequest(this.#data.networkRequest)}`,\n    };\n    const url = new URL(this.#data.networkRequest.args.data.url);\n    const entity = (this.#data.entityMapper) ? this.#data.entityMapper.entityForEvent(this.#data.networkRequest) : null;\n    const originWithEntity = TimelineUtils.Helpers.formatOriginWithEntity(url, entity, true);\n\n    const redirectsHtml = NetworkRequestTooltip.renderRedirects(this.#data.networkRequest);\n\n    // clang-format off\n    const output = html`\n      <style>${networkRequestTooltipStyles}</style>\n      <div class=\"performance-card\">\n        <div class=\"url\">${Platform.StringUtilities.trimMiddle(url.href.replace(url.origin, ''), MAX_URL_LENGTH)}</div>\n        <div class=\"url url--host\">${originWithEntity}</div>\n\n        <div class=\"divider\"></div>\n        <div class=\"network-category\">\n          <span class=\"network-category-chip\" style=${Lit.Directives.styleMap(chipStyle)}>\n          </span>${networkResourceCategory(this.#data.networkRequest)}\n        </div>\n        <div class=\"priority-row\">${i18nString(UIStrings.priority)}: ${NetworkRequestTooltip.renderPriorityValue(this.#data.networkRequest)}</div>\n        ${Trace.Helpers.Network.isSyntheticNetworkRequestEventRenderBlocking(this.#data.networkRequest) ?\n          html`<div class=\"render-blocking\"> ${i18nString(UIStrings.renderBlocking)} </div>` :  Lit.nothing\n        }\n        <div class=\"divider\"></div>\n\n        ${NetworkRequestTooltip.renderTimings(this.#data.networkRequest)}\n\n        ${redirectsHtml ? html `\n          <div class=\"divider\"></div>\n          ${redirectsHtml}\n        ` : Lit.nothing}\n      </div>\n    `;\n    // clang-format on\n    Lit.render(output, this.#shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-network-request-tooltip': NetworkRequestTooltip;\n  }\n}\n\ncustomElements.define('devtools-performance-network-request-tooltip', NetworkRequestTooltip);\n", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport relatedInsightsStyles from './relatedInsightChips.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description prefix shown next to related insight chips\n   */\n  insightKeyword: 'Insight',\n  /**\n   * @description Prefix shown next to related insight chips and containing the insight name.\n   * @example {Improve image delivery} PH1\n   */\n  insightWithName: 'Insight: {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/RelatedInsightChips.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface RelatedInsight {\n  insightLabel: string;\n  messages: string[];\n  activateInsight: () => void;\n}\nexport type EventToRelatedInsightsMap = Map<Trace.Types.Events.Event, RelatedInsight[]>;\n\nexport interface Data {\n  eventToRelatedInsightsMap: EventToRelatedInsightsMap;\n  activeEvent: Trace.Types.Events.Event|null;\n}\nexport class RelatedInsightChips extends HTMLElement {\n  #shadow = this.attachShadow({mode: 'open'});\n  #data: Data = {eventToRelatedInsightsMap: new Map(), activeEvent: null};\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  set activeEvent(event: Data['activeEvent']) {\n    if (event === this.#data.activeEvent) {\n      return;\n    }\n    this.#data.activeEvent = event;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  set eventToRelatedInsightsMap(map: Data['eventToRelatedInsightsMap']) {\n    this.#data.eventToRelatedInsightsMap = map;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #insightClick(insight: RelatedInsight): (e: Event) => void {\n    return (event: Event) => {\n      event.preventDefault();\n      insight.activateInsight();\n    };\n  }\n\n  #render(): void {\n    const {activeEvent, eventToRelatedInsightsMap} = this.#data;\n    const relatedInsights = activeEvent ? eventToRelatedInsightsMap.get(activeEvent) ?? [] : [];\n    if (!activeEvent || eventToRelatedInsightsMap.size === 0 || relatedInsights.length === 0) {\n      Lit.render(html``, this.#shadow, {host: this});\n      return;\n    }\n\n    // TODO: Render insight messages in a separate UX\n    // Right before insight chips is acceptable for now\n    const insightMessages = relatedInsights.flatMap(insight => {\n      // TODO: support markdown (`md`).\n      return insight.messages.map(message => html`\n        <li class=\"insight-message-box\">\n          <button type=\"button\" @click=${this.#insightClick(insight)}>\n            <div class=\"insight-label\">${i18nString(UIStrings.insightWithName, {\n                                    PH1: insight.insightLabel,\n                                  })}</div>\n            <div class=\"insight-message\">${message}</div>\n          </button>\n        </li>\n      `);\n    });\n\n    const insightChips = relatedInsights.flatMap(insight => {\n      // clang-format off\n      return [html`\n        <li class=\"insight-chip\">\n          <button type=\"button\" @click=${this.#insightClick(insight)}>\n            <span class=\"keyword\">${i18nString(UIStrings.insightKeyword)}</span>\n            <span class=\"insight-label\">${insight.insightLabel}</span>\n          </button>\n        </li>\n      `];\n      // clang-format on\n    });\n\n    // clang-format off\n    Lit.render(html`\n      <style>${relatedInsightsStyles}</style>\n      <ul>${insightMessages}</ul>\n      <ul>${insightChips}</ul>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-related-insight-chips', RelatedInsightChips);\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n  border-bottom: 1px solid var(--sys-color-divider);\n  flex: none;\n}\n\nul {\n  list-style: none;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--sys-size-4);\n  padding: 0 var(--sys-size-4);\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.insight-chip button {\n  background: none;\n  user-select: none;\n  font: var(--sys-typescale-body4-regular);\n  border: var(--sys-size-1) solid var(--sys-color-primary);\n  border-radius: var(--sys-shape-corner-extra-small);\n  display: flex;\n  margin: var(--sys-size-4) 0;\n  padding: var(--sys-size-2) var(--sys-size-4) var(--sys-size-2) var(--sys-size-4);\n  width: max-content;\n  white-space: pre;\n\n  .keyword {\n    color: var(--sys-color-primary);\n    padding-right: var(--sys-size-3);\n  }\n}\n\n.insight-chip button:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n  cursor: pointer;\n  transition: opacity 0.2s ease;\n}\n\n.insight-message-box {\n  background: var(--sys-color-surface-yellow);\n  border-radius: var(--sys-shape-corner-extra-small);\n  font: var(--sys-typescale-body4-regular);\n  margin: var(--sys-size-4) 0;\n\n  button {\n    color: var(--sys-color-on-surface-yellow);\n    border: none;\n    text-align: left;\n    background: none;\n    padding: var(--sys-size-4) var(--sys-size-5);\n    width: 100%;\n    max-width: 500px;\n\n    .insight-label {\n      color: var(--sys-color-orange-bright);\n      padding-right: var(--sys-size-3);\n      font-weight: var(--ref-typeface-weight-medium);\n      margin-bottom: var(--sys-size-2);\n    }\n\n    &:hover {\n      background-color: var(--sys-color-state-hover-on-subtle);\n      cursor: pointer;\n      transition: opacity 0.2s ease;\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./relatedInsightChips.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\n\nimport {InsightActivated, InsightDeactivated} from './insights/SidebarInsight.js';\nimport {SidebarAnnotationsTab} from './SidebarAnnotationsTab.js';\nimport {SidebarInsightsTab} from './SidebarInsightsTab.js';\n\nexport interface ActiveInsight {\n  model: Trace.Insights.Types.InsightModel;\n  insightSetKey: string;\n}\n\nexport class RemoveAnnotation extends Event {\n  static readonly eventName = 'removeannotation';\n\n  constructor(public removedAnnotation: Trace.Types.File.Annotation) {\n    super(RemoveAnnotation.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class RevealAnnotation extends Event {\n  static readonly eventName = 'revealannotation';\n\n  constructor(public annotation: Trace.Types.File.Annotation) {\n    super(RevealAnnotation.eventName, {bubbles: true, composed: true});\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    [RevealAnnotation.eventName]: RevealAnnotation;\n  }\n}\n\nexport const enum SidebarTabs {\n  INSIGHTS = 'insights',\n  ANNOTATIONS = 'annotations',\n}\nexport const DEFAULT_SIDEBAR_TAB = SidebarTabs.INSIGHTS;\n\nexport const DEFAULT_SIDEBAR_WIDTH_PX = 240;\nconst MIN_SIDEBAR_WIDTH_PX = 170;\n\nexport class SidebarWidget extends UI.Widget.VBox {\n  #tabbedPane = new UI.TabbedPane.TabbedPane();\n\n  #insightsView = new InsightsView();\n  #annotationsView = new AnnotationsView();\n  /**\n   * If the user has an Insight open and then they collapse the sidebar, we\n   * deactivate that Insight to avoid it showing overlays etc - as the user has\n   * hidden the Sidebar & Insight from view. But we store it because when the\n   * user pops the sidebar open, we want to re-activate it.\n   */\n  #insightToRestoreOnOpen: ActiveInsight|null = null;\n\n  constructor() {\n    super();\n    this.setMinimumSize(MIN_SIDEBAR_WIDTH_PX, 0);\n    this.#tabbedPane.appendTab(\n        SidebarTabs.INSIGHTS, 'Insights', this.#insightsView, undefined, undefined, false, false, 0,\n        'timeline.insights-tab');\n    this.#tabbedPane.appendTab(\n        SidebarTabs.ANNOTATIONS, 'Annotations', this.#annotationsView, undefined, undefined, false, false, 1,\n        'timeline.annotations-tab');\n\n    // Default the selected tab to Insights. In wasShown() we will change this\n    // if this is a trace that has no insights.\n    this.#tabbedPane.selectTab(SidebarTabs.INSIGHTS);\n  }\n\n  override wasShown(): void {\n    this.#tabbedPane.show(this.element);\n    this.#updateAnnotationsCountBadge();\n\n    if (this.#insightToRestoreOnOpen) {\n      this.element.dispatchEvent(new InsightActivated(\n          this.#insightToRestoreOnOpen.model,\n          this.#insightToRestoreOnOpen.insightSetKey,\n          ));\n      this.#insightToRestoreOnOpen = null;\n    }\n\n    // Swap to the Annotations tab if:\n    // 1. Insights is currently selected.\n    // 2. The Insights tab is disabled (which means we have no insights for this trace)\n    if (this.#tabbedPane.selectedTabId === SidebarTabs.INSIGHTS &&\n        this.#tabbedPane.tabIsDisabled(SidebarTabs.INSIGHTS)) {\n      this.#tabbedPane.selectTab(SidebarTabs.ANNOTATIONS);\n    }\n  }\n\n  override willHide(): void {\n    const currentlyActiveInsight = this.#insightsView.getActiveInsight();\n    this.#insightToRestoreOnOpen = currentlyActiveInsight;\n\n    if (currentlyActiveInsight) {\n      this.element.dispatchEvent(new InsightDeactivated());\n    }\n  }\n\n  setAnnotations(\n      updatedAnnotations: Trace.Types.File.Annotation[],\n      annotationEntryToColorMap: Map<Trace.Types.Events.Event, string>): void {\n    this.#annotationsView.setAnnotations(updatedAnnotations, annotationEntryToColorMap);\n    this.#updateAnnotationsCountBadge();\n  }\n\n  #updateAnnotationsCountBadge(): void {\n    const annotations = this.#annotationsView.deduplicatedAnnotations();\n    this.#tabbedPane.setBadge('annotations', annotations.length > 0 ? annotations.length.toString() : null);\n  }\n\n  setParsedTrace(parsedTrace: Trace.Handlers.Types.ParsedTrace|null, metadata: Trace.Types.File.MetaData|null): void {\n    this.#insightsView.setParsedTrace(parsedTrace, metadata);\n  }\n\n  setInsights(insights: Trace.Insights.Types.TraceInsightSets|null): void {\n    this.#insightsView.setInsights(insights);\n\n    this.#tabbedPane.setTabEnabled(\n        SidebarTabs.INSIGHTS,\n        insights !== null && insights.size > 0,\n    );\n  }\n\n  setActiveInsight(activeInsight: ActiveInsight|null, opts: {\n    highlight: boolean,\n  }): void {\n    this.#insightsView.setActiveInsight(activeInsight, opts);\n\n    if (activeInsight) {\n      this.#tabbedPane.selectTab(SidebarTabs.INSIGHTS);\n    }\n  }\n}\n\nclass InsightsView extends UI.Widget.VBox {\n  #component = new SidebarInsightsTab();\n\n  constructor() {\n    super();\n    this.element.classList.add('sidebar-insights');\n    this.element.appendChild(this.#component);\n  }\n\n  setParsedTrace(parsedTrace: Trace.Handlers.Types.ParsedTrace|null, metadata: Trace.Types.File.MetaData|null): void {\n    this.#component.parsedTrace = parsedTrace;\n    this.#component.traceMetadata = metadata;\n  }\n\n  setInsights(data: Trace.Insights.Types.TraceInsightSets|null): void {\n    this.#component.insights = data;\n  }\n\n  getActiveInsight(): ActiveInsight|null {\n    return this.#component.activeInsight;\n  }\n\n  setActiveInsight(active: ActiveInsight|null, opts: {highlight: boolean}): void {\n    this.#component.activeInsight = active;\n    if (opts.highlight && active) {\n      // Wait for the rendering of the component to be done, otherwise we\n      // might highlight the wrong insight. The UI needs to be fully\n      // re-rendered before we can highlight the newly-expanded insight.\n      void RenderCoordinator.done().then(() => {\n        this.#component.highlightActiveInsight();\n      });\n    }\n  }\n}\n\nclass AnnotationsView extends UI.Widget.VBox {\n  #component = new SidebarAnnotationsTab();\n\n  constructor() {\n    super();\n    this.element.classList.add('sidebar-annotations');\n    this.#component.show(this.element);\n  }\n\n  setAnnotations(\n      annotations: Trace.Types.File.Annotation[],\n      annotationEntryToColorMap: Map<Trace.Types.Events.Event, string>): void {\n    this.#component.setData({annotations, annotationEntryToColorMap});\n  }\n\n  /**\n   * The component \"de-duplicates\" annotations to ensure implementation details\n   * about how we create pending annotations don't leak into the UI. We expose\n   * these here because we use this count to show the number of annotations in\n   * the small adorner in the sidebar tab.\n   */\n  deduplicatedAnnotations(): readonly Trace.Types.File.Annotation[] {\n    return this.#component.deduplicatedAnnotations();\n  }\n}\n", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {InsightModel} from '../../../../models/trace/insights/types.js';\nimport type * as Trace from '../../../../models/trace/trace.js';\nimport type * as Overlays from '../../overlays/overlays.js';\n\nexport interface InsightDetails {\n  title: string;\n  description: string;\n  internalName: string;\n  expanded: boolean;\n  estimatedSavingsTime?: Trace.Types.Timing.Milli;\n  estimatedSavingsBytes?: number;\n}\n\nexport class InsightActivated extends Event {\n  static readonly eventName = 'insightactivated';\n\n  constructor(public model: InsightModel, public insightSetKey: string) {\n    super(InsightActivated.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class InsightDeactivated extends Event {\n  static readonly eventName = 'insightdeactivated';\n  constructor() {\n    super(InsightDeactivated.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class InsightSetHovered extends Event {\n  static readonly eventName = 'insightsethovered';\n  constructor(public bounds?: Trace.Types.Timing.TraceWindowMicro) {\n    super(InsightSetHovered.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class InsightSetZoom extends Event {\n  static readonly eventName = 'insightsetzoom';\n  constructor(public bounds: Trace.Types.Timing.TraceWindowMicro) {\n    super(InsightSetZoom.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class InsightProvideOverlays extends Event {\n  static readonly eventName = 'insightprovideoverlays';\n\n  constructor(\n      public overlays: Trace.Types.Overlays.Overlay[], public options: Overlays.Overlays.TimelineOverlaySetOptions) {\n    super(InsightProvideOverlays.eventName, {bubbles: true, composed: true});\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    [InsightActivated.eventName]: InsightActivated;\n    [InsightDeactivated.eventName]: InsightDeactivated;\n    [InsightSetHovered.eventName]: InsightSetHovered;\n    [InsightSetZoom.eventName]: InsightSetZoom;\n    [InsightProvideOverlays.eventName]: InsightProvideOverlays;\n  }\n}\n", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as TraceBounds from '../../../services/trace_bounds/trace_bounds.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../../ui/legacy/theme_support/theme_support.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Utils from '../utils/utils.js';\n\nimport {RemoveAnnotation, RevealAnnotation} from './Sidebar.js';\nimport sidebarAnnotationsTabStyles from './sidebarAnnotationsTab.css.js';\n\nconst {html, render} = Lit;\n\nconst diagramImageUrl = new URL('../../../Images/performance-panel-diagram.svg', import.meta.url).toString();\nconst entryLabelImageUrl = new URL('../../../Images/performance-panel-entry-label.svg', import.meta.url).toString();\nconst timeRangeImageUrl = new URL('../../../Images/performance-panel-time-range.svg', import.meta.url).toString();\nconst deleteAnnotationImageUrl =\n    new URL('../../../Images/performance-panel-delete-annotation.svg', import.meta.url).toString();\n\nconst UIStrings = {\n  /**\n   * @description Title for entry label.\n   */\n  annotationGetStarted: 'Annotate a trace for yourself and others',\n  /**\n   * @description Title for entry label.\n   */\n  entryLabelTutorialTitle: 'Label an item',\n  /**\n   * @description Text for how to create an entry label.\n   */\n  entryLabelTutorialDescription: 'Double-click or press Enter on an item and type to create an item label.',\n  /**\n   * @description  Title for diagram.\n   */\n  entryLinkTutorialTitle: 'Connect two items',\n  /**\n   * @description Text for how to create a diagram between entries.\n   */\n  entryLinkTutorialDescription:\n      'Double-click on an item, click on the adjacent rightward arrow, then select the destination item.',\n  /**\n   * @description  Title for time range.\n   */\n  timeRangeTutorialTitle: 'Define a time range',\n  /**\n   * @description Text for how to create a time range selection and add note.\n   */\n  timeRangeTutorialDescription: 'Shift-drag in the flamechart then type to create a time range annotation.',\n  /**\n   * @description  Title for deleting annotations.\n   */\n  deleteAnnotationTutorialTitle: 'Delete an annotation',\n  /**\n   * @description Text for how to access an annotation delete function.\n   */\n  deleteAnnotationTutorialDescription:\n      'Hover over the list in the sidebar with Annotations tab selected to access the delete function.',\n  /**\n   * @description Text used to describe the delete button to screen readers.\n   * @example {\"A paint event annotated with the text hello world\"} PH1\n   **/\n  deleteButton: 'Delete annotation: {PH1}',\n  /**\n   * @description label used to describe an annotation on an entry\n   *@example {Paint} PH1\n   *@example {\"Hello world\"} PH2\n   */\n  entryLabelDescriptionLabel: 'A \"{PH1}\" event annotated with the text \"{PH2}\"',\n  /**\n   * @description label used to describe a time range annotation\n   *@example {2.5 milliseconds} PH1\n   *@example {13.5 milliseconds} PH2\n   */\n  timeRangeDescriptionLabel: 'A time range starting at {PH1} and ending at {PH2}',\n  /**\n   * @description label used to describe a link from one entry to another.\n   *@example {Paint} PH1\n   *@example {Recalculate styles} PH2\n   */\n  entryLinkDescriptionLabel: 'A link between a \"{PH1}\" event and a \"{PH2}\" event',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/SidebarAnnotationsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface SidebarAnnotationsTabViewInput {\n  annotations: readonly Trace.Types.File.Annotation[];\n  annotationsHiddenSetting: Common.Settings.Setting<boolean>;\n  annotationEntryToColorMap: ReadonlyMap<Trace.Types.Events.Event|Trace.Types.Events.LegacyTimelineFrame, string>;\n  onAnnotationClick: (annotation: Trace.Types.File.Annotation) => void;\n  onAnnotationDelete: (annotation: Trace.Types.File.Annotation) => void;\n}\n\nexport class SidebarAnnotationsTab extends UI.Widget.Widget {\n  #annotations: Trace.Types.File.Annotation[] = [];\n  // A map with annotated entries and the colours that are used to display them in the FlameChart.\n  // We need this map to display the entries in the sidebar with the same colours.\n  #annotationEntryToColorMap = new Map<Trace.Types.Events.Event|Trace.Types.Events.LegacyTimelineFrame, string>();\n\n  readonly #annotationsHiddenSetting: Common.Settings.Setting<boolean>;\n  #view: typeof DEFAULT_VIEW;\n\n  constructor(view = DEFAULT_VIEW) {\n    super();\n    this.#view = view;\n    this.#annotationsHiddenSetting = Common.Settings.Settings.instance().moduleSetting('annotations-hidden');\n  }\n\n  deduplicatedAnnotations(): readonly Trace.Types.File.Annotation[] {\n    return this.#annotations;\n  }\n\n  setData(data: {\n    annotations: Trace.Types.File.Annotation[],\n    annotationEntryToColorMap: Map<Trace.Types.Events.Event, string>,\n  }): void {\n    this.#annotations = this.#processAnnotationsList(data.annotations);\n    this.#annotationEntryToColorMap = data.annotationEntryToColorMap;\n    this.requestUpdate();\n  }\n\n  #processAnnotationsList(annotations: Trace.Types.File.Annotation[]): Trace.Types.File.Annotation[] {\n    // When an entry is double-clicked, we create two annotations (a label and an entries connection) for the user to choose from.\n    // The one not selected is deleted when the user makes their selection.\n    // To avoid excessive activity in the sidebar (adding and removing annotations), only show one 'not started' annotation associated with an entry.\n    //\n    // If we encounter an annotation for an entry that hasn't started creation, add that entry to the 'entriesWithNotStartedAnnotation'\n    // set. This allows us to filter out any subsequent not started annotations for the same entry.\n    const entriesWithNotStartedAnnotation = new Set();\n\n    const processedAnnotations = annotations.filter(annotation => {\n      if (this.#isAnnotationCreationStarted(annotation)) {\n        return true;\n      }\n\n      if (annotation.type === 'ENTRIES_LINK' || annotation.type === 'ENTRY_LABEL') {\n        const annotationEntry = annotation.type === 'ENTRIES_LINK' ? annotation.entryFrom : annotation.entry;\n\n        if (entriesWithNotStartedAnnotation.has(annotationEntry)) {\n          return false;\n        }\n\n        entriesWithNotStartedAnnotation.add(annotationEntry);\n      }\n\n      return true;\n    });\n\n    // Sort annotations by timestamp.\n    processedAnnotations.sort(\n        (firstAnnotation, secondAnnotation) =>\n            this.#getAnnotationTimestamp(firstAnnotation) - this.#getAnnotationTimestamp(secondAnnotation),\n    );\n\n    return processedAnnotations;\n  }\n\n  #getAnnotationTimestamp(annotation: Trace.Types.File.Annotation): Trace.Types.Timing.Micro {\n    switch (annotation.type) {\n      case 'ENTRY_LABEL': {\n        return annotation.entry.ts;\n      }\n      case 'ENTRIES_LINK': {\n        return annotation.entryFrom.ts;\n      }\n      case 'TIME_RANGE': {\n        return annotation.bounds.min;\n      }\n      default: {\n        Platform.assertNever(annotation, `Invalid annotation type ${annotation}`);\n      }\n    }\n  }\n\n  #isAnnotationCreationStarted(annotation: Trace.Types.File.Annotation): boolean {\n    // Consider the annotation not started if:\n    // ENTRY_LABEL - label is empty\n    // ENTRIES_LINK - the connection annotation does not have the 'to' entry\n    // TIME_RANGE - range is over zero\n    switch (annotation.type) {\n      case 'ENTRY_LABEL': {\n        return annotation.label.length > 0;\n      }\n      case 'ENTRIES_LINK': {\n        return Boolean(annotation.entryTo);\n      }\n      case 'TIME_RANGE': {\n        return annotation.bounds.range > 0;\n      }\n    }\n  }\n\n  override performUpdate(): void {\n    const input: SidebarAnnotationsTabViewInput = {\n      annotations: this.#annotations,\n      annotationsHiddenSetting: this.#annotationsHiddenSetting,\n      annotationEntryToColorMap: this.#annotationEntryToColorMap,\n      onAnnotationClick: (annotation: Trace.Types.File.Annotation) => {\n        this.contentElement.dispatchEvent(new RevealAnnotation(annotation));\n      },\n      onAnnotationDelete: (annotation: Trace.Types.File.Annotation) => {\n        this.contentElement.dispatchEvent(new RemoveAnnotation(annotation));\n      },\n    };\n    this.#view(input, {}, this.contentElement);\n  }\n}\n\nfunction detailedAriaDescriptionForAnnotation(annotation: Trace.Types.File.Annotation): string {\n  switch (annotation.type) {\n    case 'ENTRY_LABEL': {\n      const name = Utils.EntryName.nameForEntry(annotation.entry);\n      return i18nString(UIStrings.entryLabelDescriptionLabel, {\n        PH1: name,\n        PH2: annotation.label,\n      });\n    }\n    case 'TIME_RANGE': {\n      const from = i18n.TimeUtilities.formatMicroSecondsAsMillisFixedExpanded(annotation.bounds.min);\n      const to = i18n.TimeUtilities.formatMicroSecondsAsMillisFixedExpanded(annotation.bounds.max);\n      return i18nString(UIStrings.timeRangeDescriptionLabel, {\n        PH1: from,\n        PH2: to,\n      });\n    }\n    case 'ENTRIES_LINK': {\n      if (!annotation.entryTo) {\n        // Only label it if it is completed.\n        return '';\n      }\n      const nameFrom = Utils.EntryName.nameForEntry(annotation.entryFrom);\n      const nameTo = Utils.EntryName.nameForEntry(annotation.entryTo);\n      return i18nString(UIStrings.entryLinkDescriptionLabel, {\n        PH1: nameFrom,\n        PH2: nameTo,\n      });\n    }\n    default:\n      Platform.assertNever(annotation, 'Unsupported annotation');\n  }\n}\n\nfunction findTextColorForContrast(bgColorText: string): string {\n  const bgColor = Common.Color.parse(bgColorText)?.asLegacyColor();\n  // Let's default to black text, since the entries' titles are black in the flamechart.\n  const darkColorToken = '--app-color-performance-sidebar-label-text-dark';\n  const darkColorText =\n      Common.Color.parse(ThemeSupport.ThemeSupport.instance().getComputedValue(darkColorToken))?.asLegacyColor();\n  if (!bgColor || !darkColorText) {\n    // This part of code shouldn't be reachable unless background color is invalid or something wrong with the color\n    // parsing. If so let's fall back to the dark color,\n    return `var(${darkColorToken})`;\n  }\n\n  const contrastRatio = Common.ColorUtils.contrastRatio(bgColor.rgba(), darkColorText.rgba());\n  return contrastRatio >= 4.5 ? `var(${darkColorToken})` : 'var(--app-color-performance-sidebar-label-text-light)';\n}\n\nfunction renderAnnotationIdentifier(\n    annotation: Trace.Types.File.Annotation,\n    annotationEntryToColorMap: ReadonlyMap<Trace.Types.Events.Event|Trace.Types.Events.LegacyTimelineFrame, string>):\n    Lit.LitTemplate {\n  switch (annotation.type) {\n    case 'ENTRY_LABEL': {\n      const entryName = Utils.EntryName.nameForEntry(annotation.entry);\n      const backgroundColor = annotationEntryToColorMap.get(annotation.entry) ?? '';\n      const color = findTextColorForContrast(backgroundColor);\n      const styleForAnnotationIdentifier = {\n        backgroundColor,\n        color,\n      };\n      return html`\n            <span class=\"annotation-identifier\" style=${Lit.Directives.styleMap(styleForAnnotationIdentifier)}>\n              ${entryName}\n            </span>\n      `;\n    }\n    case 'TIME_RANGE': {\n      const minTraceBoundsMilli =\n          TraceBounds.TraceBounds.BoundsManager.instance().state()?.milli.entireTraceBounds.min ?? 0;\n\n      const timeRangeStartInMs =\n          Math.round(Trace.Helpers.Timing.microToMilli(annotation.bounds.min) - minTraceBoundsMilli);\n      const timeRangeEndInMs =\n          Math.round(Trace.Helpers.Timing.microToMilli(annotation.bounds.max) - minTraceBoundsMilli);\n\n      return html`\n            <span class=\"annotation-identifier time-range\">\n              ${timeRangeStartInMs} - ${timeRangeEndInMs} ms\n            </span>\n      `;\n    }\n    case 'ENTRIES_LINK': {\n      const entryFromName = Utils.EntryName.nameForEntry(annotation.entryFrom);\n      const fromBackgroundColor = annotationEntryToColorMap.get(annotation.entryFrom) ?? '';\n      const fromTextColor = findTextColorForContrast(fromBackgroundColor);\n      const styleForFromAnnotationIdentifier = {\n        backgroundColor: fromBackgroundColor,\n        color: fromTextColor,\n      };\n      // clang-format off\n      return html`\n        <div class=\"entries-link\">\n          <span class=\"annotation-identifier\" style=${Lit.Directives.styleMap(styleForFromAnnotationIdentifier)}>\n            ${entryFromName}\n          </span>\n          <devtools-icon class=\"inline-icon\" .data=${{\n            iconName: 'arrow-forward',\n            color: 'var(--icon-default)',\n            width: '18px',\n            height: '18px',\n          }}>\n          </devtools-icon>\n          ${renderEntryToIdentifier(annotation, annotationEntryToColorMap)}\n        </div>\n    `;\n      // clang-format on\n    }\n    default:\n      Platform.assertNever(annotation, 'Unsupported annotation type');\n  }\n}\n\n/**\n * Renders the Annotation 'identifier' or 'name' in the annotations list.\n * This is the text rendered before the annotation label that we use to identify the annotation.\n *\n * Annotations identifiers for different annotations:\n * Entry label -> Entry name\n * Labelled range -> Start to End Range of the label in ms\n * Connected entries -> Connected entries names\n *\n * All identifiers have a different colour background.\n */\nfunction renderEntryToIdentifier(\n    annotation: Trace.Types.File.EntriesLinkAnnotation,\n    annotationEntryToColorMap: ReadonlyMap<Trace.Types.Events.Event|Trace.Types.Events.LegacyTimelineFrame, string>):\n    Lit.LitTemplate {\n  if (annotation.entryTo) {\n    const entryToName = Utils.EntryName.nameForEntry(annotation.entryTo);\n    const toBackgroundColor = annotationEntryToColorMap.get(annotation.entryTo) ?? '';\n    const toTextColor = findTextColorForContrast(toBackgroundColor);\n    const styleForToAnnotationIdentifier = {\n      backgroundColor: toBackgroundColor,\n      color: toTextColor,\n    };\n    // clang-format off\n    return html`\n      <span class=\"annotation-identifier\" style=${Lit.Directives.styleMap(styleForToAnnotationIdentifier)}>\n        ${entryToName}\n      </span>`;\n    // clang-format on\n  }\n  return Lit.nothing;\n}\n\nfunction jslogForAnnotation(annotation: Trace.Types.File.Annotation): string {\n  switch (annotation.type) {\n    case 'ENTRY_LABEL':\n      return 'entry-label';\n    case 'TIME_RANGE':\n      return 'time-range';\n    case 'ENTRIES_LINK':\n      return 'entries-link';\n    default:\n      Platform.assertNever(annotation, 'unknown annotation type');\n  }\n}\n\nfunction renderTutorial(): Lit.LitTemplate {\n  // clang-format off\n  return html`<div class=\"annotation-tutorial-container\">\n    ${i18nString(UIStrings.annotationGetStarted)}\n      <div class=\"tutorial-card\">\n        <div class=\"tutorial-image\"><img src=${entryLabelImageUrl}></img></div>\n        <div class=\"tutorial-title\">${i18nString(UIStrings.entryLabelTutorialTitle)}</div>\n        <div class=\"tutorial-description\">${i18nString(UIStrings.entryLabelTutorialDescription)}</div>\n      </div>\n      <div class=\"tutorial-card\">\n        <div class=\"tutorial-image\"><img src=${diagramImageUrl}></img></div>\n        <div class=\"tutorial-title\">${i18nString(UIStrings.entryLinkTutorialTitle)}</div>\n        <div class=\"tutorial-description\">${i18nString(UIStrings.entryLinkTutorialDescription)}</div>\n      </div>\n      <div class=\"tutorial-card\">\n        <div class=\"tutorial-image\"><img src=${timeRangeImageUrl}></img></div>\n        <div class=\"tutorial-title\">${i18nString(UIStrings.timeRangeTutorialTitle)}</div>\n        <div class=\"tutorial-description\">${i18nString(UIStrings.timeRangeTutorialDescription)}</div>\n      </div>\n      <div class=\"tutorial-card\">\n        <div class=\"tutorial-image\"><img src=${deleteAnnotationImageUrl}></img></div>\n        <div class=\"tutorial-title\">${i18nString(UIStrings.deleteAnnotationTutorialTitle)}</div>\n        <div class=\"tutorial-description\">${i18nString(UIStrings.deleteAnnotationTutorialDescription)}</div>\n      </div>\n    </div>` ;\n  // clang-format on\n}\n\nexport const DEFAULT_VIEW: (input: SidebarAnnotationsTabViewInput, output: object, target: HTMLElement) => void =\n    (input, _output, target) => {\n      // clang-format off\n      render(html`\n      <style>${sidebarAnnotationsTabStyles}</style>\n      <span class=\"annotations\">\n        ${input.annotations.length === 0 ? renderTutorial():\n          html`\n            ${input.annotations.map(annotation => {\n              const label = detailedAriaDescriptionForAnnotation(annotation);\n              return html`\n                <div class=\"annotation-container\"\n                  @click=${() => input.onAnnotationClick(annotation)}\n                  aria-label=${label}\n                  tabindex=\"0\"\n                  jslog=${VisualLogging.item(`timeline.annotation-sidebar.annotation-${jslogForAnnotation(annotation)}`).track({click: true})}\n                >\n                  <div class=\"annotation\">\n                    ${renderAnnotationIdentifier(annotation, input.annotationEntryToColorMap)}\n                    <span class=\"label\">\n                      ${(annotation.type === 'ENTRY_LABEL' || annotation.type === 'TIME_RANGE') ? annotation.label : ''}\n                    </span>\n                  </div>\n                  <button class=\"delete-button\" aria-label=${i18nString(UIStrings.deleteButton, {PH1: label})} @click=${(event: Event) => {\n                    // Stop propagation to not zoom into the annotation when\n                    // the delete button is clicked\n                    event.stopPropagation();\n                    input.onAnnotationDelete(annotation);\n                  }} jslog=${VisualLogging.action('timeline.annotation-sidebar.delete').track({click: true})}>\n                    <devtools-icon\n                      class=\"bin-icon\"\n                      .data=${{\n                        iconName: 'bin',\n                        color: 'var(--icon-default)',\n                        width: '20px',\n                        height: '20px',\n                      }}\n                    ></devtools-icon>\n                  </button>\n                </div>`;\n            })}\n            <setting-checkbox class=\"visibility-setting\" .data=${{\n              setting: input.annotationsHiddenSetting,\n              textOverride: 'Hide annotations',\n            }}>\n            </setting-checkbox>`\n    }\n    </span>`,\n  target, {host: target});\n};\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n  height: 100%;\n}\n\n.annotations {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding: 0;\n}\n\n.visibility-setting {\n  margin-top: auto;\n}\n\n.annotation-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 var(--sys-size-4);\n\n  .delete-button {\n    visibility: hidden;\n    border: none;\n    background: none;\n  }\n\n  &:hover,\n  &:focus-within {\n    background-color: var(--sys-color-neutral-container);\n\n    button.delete-button {\n      visibility: visible;\n    }\n  }\n}\n\n.annotation {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  word-break: normal;\n  overflow-wrap: anywhere;\n  padding: var(--sys-size-8) 0;\n  gap: 6px;\n}\n\n.annotation-identifier {\n  padding: 4px 8px;\n  border-radius: 10px;\n  font-weight: bold;\n\n  &.time-range {\n    background-color: var(--app-color-performance-sidebar-time-range);\n    color: var(--app-color-performance-sidebar-label-text-light);\n  }\n}\n\n.entries-link {\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 2px;\n  align-items: center;\n}\n\n.label {\n  font-size: larger;\n}\n\n.annotation-tutorial-container {\n  padding: 10px;\n}\n\n.tutorial-card {\n  display: block;\n  position: relative;\n  margin: 10px 0;\n  padding: 10px;\n  border-radius: var(--sys-shape-corner-extra-small);\n  overflow: hidden;\n  border: 1px solid var(--sys-color-divider);\n  background-color: var(--sys-color-base);\n}\n\n.tutorial-image {\n  display: flex;\n  justify-content: center;\n\n  & > img {\n    max-width: 100%;\n    height: auto;\n  }\n}\n\n.tutorial-title,\n.tutorial-description {\n  margin: 5px 0;\n}\n\n/*# sourceURL=${import.meta.resolve('./sidebarAnnotationsTab.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport './SidebarSingleInsightSet.js';\n\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as Utils from '../utils/utils.js';\n\nimport * as Insights from './insights/insights.js';\nimport type {ActiveInsight} from './Sidebar.js';\nimport sidebarInsightsTabStyles from './sidebarInsightsTab.css.js';\nimport type {SidebarSingleInsightSet, SidebarSingleInsightSetData} from './SidebarSingleInsightSet.js';\n\nconst {html} = Lit;\n\nexport class SidebarInsightsTab extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #parsedTrace: Trace.Handlers.Types.ParsedTrace|null = null;\n  #traceMetadata: Trace.Types.File.MetaData|null = null;\n  #insights: Trace.Insights.Types.TraceInsightSets|null = null;\n  #activeInsight: ActiveInsight|null = null;\n  #selectedCategory = Trace.Insights.Types.InsightCategory.ALL;\n  /**\n   * When a trace has sets of insights, we show an accordion with each\n   * set within. A set can be specific to a single navigation, or include the\n   * beginning of the trace up to the first navigation.\n   * You can only have one of these open at any time, and we track it via this ID.\n   */\n  #selectedInsightSetKey: string|null = null;\n\n  // TODO(paulirish): add back a disconnectedCallback() to avoid memory leaks that doesn't cause b/372943062\n\n  set parsedTrace(data: Trace.Handlers.Types.ParsedTrace|null) {\n    if (data === this.#parsedTrace) {\n      return;\n    }\n    this.#parsedTrace = data;\n    this.#selectedInsightSetKey = null;\n\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  set traceMetadata(data: Trace.Types.File.MetaData|null) {\n    if (data === this.#traceMetadata) {\n      return;\n    }\n    this.#traceMetadata = data;\n    this.#selectedInsightSetKey = null;\n\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  set insights(data: Trace.Insights.Types.TraceInsightSets|null) {\n    if (data === this.#insights) {\n      return;\n    }\n\n    this.#selectedInsightSetKey = null;\n    if (!data || !this.#parsedTrace) {\n      return;\n    }\n\n    this.#insights = new Map(data);\n    /** Select the first set. Filtering out trivial sets was done back in {@link Trace.Processor.#computeInsightsForInitialTracePeriod} */\n    this.#selectedInsightSetKey = [...this.#insights.keys()].at(0) ?? null;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  get activeInsight(): ActiveInsight|null {\n    return this.#activeInsight;\n  }\n\n  set activeInsight(active: ActiveInsight|null) {\n    if (active === this.#activeInsight) {\n      return;\n    }\n    this.#activeInsight = active;\n\n    // Only update the insightSetKey if there is an active insight. Otherwise, closing an insight\n    // would also collapse the insight set. Usually the proper insight set is already set because\n    // the user has it open already in order for this setter to be called, but insights can also\n    // be activated by clicking on a insight chip in the Summary panel, which may require opening\n    // a different insight set.\n    if (this.#activeInsight) {\n      this.#selectedInsightSetKey = this.#activeInsight.insightSetKey;\n    }\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #insightSetToggled(id: string): void {\n    this.#selectedInsightSetKey = this.#selectedInsightSetKey === id ? null : id;\n    // Update the active insight set.\n    if (this.#selectedInsightSetKey !== this.#activeInsight?.insightSetKey) {\n      this.dispatchEvent(new Insights.SidebarInsight.InsightDeactivated());\n    }\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #insightSetHovered(id: string): void {\n    const data = this.#insights?.get(id);\n    data && this.dispatchEvent(new Insights.SidebarInsight.InsightSetHovered(data.bounds));\n  }\n\n  #insightSetUnhovered(): void {\n    this.dispatchEvent(new Insights.SidebarInsight.InsightSetHovered());\n  }\n\n  #onZoomClick(event: Event, id: string): void {\n    event.stopPropagation();\n    const data = this.#insights?.get(id);\n    if (!data) {\n      return;\n    }\n    this.dispatchEvent(new Insights.SidebarInsight.InsightSetZoom(data.bounds));\n  }\n\n  #renderZoomButton(insightSetToggled: boolean): Lit.TemplateResult {\n    const classes = Lit.Directives.classMap({\n      'zoom-icon': true,\n      active: insightSetToggled,\n    });\n\n    // clang-format off\n    return html`\n    <div class=${classes}>\n        <devtools-button .data=${{\n          variant: Buttons.Button.Variant.ICON,\n          iconName: 'center-focus-weak',\n          size: Buttons.Button.Size.SMALL,\n        } as Buttons.Button.ButtonData}\n      ></devtools-button></div>`;\n    // clang-format on\n  }\n\n  #renderDropdownIcon(insightSetToggled: boolean): Lit.TemplateResult {\n    const containerClasses = Lit.Directives.classMap({\n      'dropdown-icon': true,\n      active: insightSetToggled,\n    });\n\n    // clang-format off\n    return html`\n      <div class=${containerClasses}>\n        <devtools-button .data=${{\n          variant: Buttons.Button.Variant.ICON,\n          iconName: 'chevron-right',\n          size: Buttons.Button.Size.SMALL,\n        } as Buttons.Button.ButtonData}\n      ></devtools-button></div>\n    `;\n    // clang-format on\n  }\n\n  highlightActiveInsight(): void {\n    if (!this.#activeInsight) {\n      return;\n    }\n    // Find the right set for this insight via the set key.\n    const set = this.#shadow?.querySelector<SidebarSingleInsightSet>(\n        `devtools-performance-sidebar-single-navigation[data-insight-set-key=\"${this.#activeInsight.insightSetKey}\"]`);\n    if (!set) {\n      return;\n    }\n    set.highlightActiveInsight();\n  }\n\n  #render(): void {\n    if (!this.#parsedTrace || !this.#insights) {\n      Lit.render(Lit.nothing, this.#shadow, {host: this});\n      return;\n    }\n\n    const hasMultipleInsightSets = this.#insights.size > 1;\n    const labels = Utils.Helpers.createUrlLabels([...this.#insights.values()].map(({url}) => url));\n\n    const contents =\n        // clang-format off\n     html`\n      <style>${sidebarInsightsTabStyles}</style>\n      <div class=\"insight-sets-wrapper\">\n        ${[...this.#insights.values()].map(({id, url}, index) => {\n          const data: SidebarSingleInsightSetData = {\n            insights: this.#insights,\n            insightSetKey: id,\n            activeCategory: this.#selectedCategory,\n            activeInsight: this.#activeInsight,\n            parsedTrace: this.#parsedTrace,\n            traceMetadata: this.#traceMetadata,\n          };\n\n          const contents = html`\n            <devtools-performance-sidebar-single-navigation\n              data-insight-set-key=${id}\n              .data=${data}>\n            </devtools-performance-sidebar-single-navigation>\n          `;\n\n          if (hasMultipleInsightSets) {\n            return html`<details\n              ?open=${id === this.#selectedInsightSetKey}\n            >\n              <summary\n                @click=${() => this.#insightSetToggled(id)}\n                @mouseenter=${() => this.#insightSetHovered(id)}\n                @mouseleave=${() => this.#insightSetUnhovered()}\n                title=${url.href}>\n                ${this.#renderDropdownIcon(id === this.#selectedInsightSetKey)}\n                <span>${labels[index]}</span>\n                <span class='zoom-button' @click=${(event: Event) => this.#onZoomClick(event, id)}>${this.#renderZoomButton(id === this.#selectedInsightSetKey)}</span>\n              </summary>\n              ${contents}\n            </details>`;\n          }\n\n          return contents;\n        })}\n      </div>\n    `;\n    // clang-format on\n\n    // Insight components contain state, so to prevent insights from previous trace loads breaking things we use the parsedTrace\n    // as a render key.\n    // Note: newer Lit has `keyed`, but we don't have that, so we do it manually. https://lit.dev/docs/templates/directives/#keyed\n    const result = Lit.Directives.repeat([contents], () => this.#parsedTrace, template => template);\n    Lit.render(result, this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-performance-sidebar-insights', SidebarInsightsTab);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-sidebar-insights': SidebarInsightsTab;\n  }\n}\n", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport {md} from '../utils/Helpers.js';\n\nimport type {BaseInsightComponent} from './insights/BaseInsightComponent.js';\nimport {shouldRenderForCategory} from './insights/Helpers.js';\nimport * as Insights from './insights/insights.js';\nimport type {ActiveInsight} from './Sidebar.js';\nimport sidebarSingleInsightSetStyles from './sidebarSingleInsightSet.css.js';\nimport {determineCompareRating, NumberWithUnit} from './Utils.js';\n\nconst {html} = Lit.StaticHtml;\n\nconst UIStrings = {\n  /**\n   *@description title used for a metric value to tell the user about its score classification\n   *@example {INP} PH1\n   *@example {1.2s} PH2\n   *@example {poor} PH3\n   */\n  metricScore: '{PH1}: {PH2} {PH3} score',\n  /**\n   *@description title used for a metric value to tell the user that the data is unavailable\n   *@example {INP} PH1\n   */\n  metricScoreUnavailable: '{PH1}: unavailable',\n  /**\n   * @description Summary text for an expandable dropdown that contains all insights in a passing state.\n   * @example {4} PH1\n   */\n  passedInsights: 'Passed insights ({PH1})',\n  /**\n   * @description Label denoting that metrics were observed in the field, from real use data (CrUX). Also denotes if from URL or Origin dataset.\n   * @example {URL} PH1\n   */\n  fieldScoreLabel: 'Field ({PH1})',\n  /**\n   * @description Label for an option that selects the page's specific URL as opposed to it's entire origin/domain.\n   */\n  urlOption: 'URL',\n  /**\n   * @description Label for an option that selects the page's entire origin/domain as opposed to it's specific URL.\n   */\n  originOption: 'Origin',\n  /**\n   * @description Title for button that closes a warning popup.\n   */\n  dismissTitle: 'Dismiss',\n  /**\n   * @description Title shown in a warning dialog when field metrics (collected from real users) is worse than the locally observed metrics.\n   */\n  fieldMismatchTitle: 'Field & local metrics mismatch',\n  /**\n   * @description Text shown in a warning dialog when field metrics (collected from real users) is worse than the locally observed metrics.\n   * Asks user to use features such as throttling and device emulation.\n   */\n  fieldMismatchNotice:\n      'There are many reasons why local and field metrics [may not match](https://web.dev/articles/lab-and-field-data-differences). ' +\n      'Adjust [throttling settings and device emulation](https://developer.chrome.com/docs/devtools/device-mode) to analyze traces more similar to the average user\\'s environment.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/SidebarSingleInsightSet.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface SidebarSingleInsightSetData {\n  insights: Trace.Insights.Types.TraceInsightSets|null;\n  insightSetKey: Trace.Types.Events.NavigationId|null;\n  activeCategory: Trace.Insights.Types.InsightCategory;\n  activeInsight: ActiveInsight|null;\n  parsedTrace: Trace.Handlers.Types.ParsedTrace|null;\n  traceMetadata: Trace.Types.File.MetaData|null;\n}\n\n/**\n * These are WIP Insights that are only shown if the user has turned on the\n * \"enable experimental performance insights\" experiment. This is used to enable\n * us to ship incrementally without turning insights on by default for all\n * users. */\nconst EXPERIMENTAL_INSIGHTS: ReadonlySet<string> = new Set([]);\n\ntype InsightNameToComponentMapping =\n    Record<string, typeof Insights.BaseInsightComponent.BaseInsightComponent<Trace.Insights.Types.InsightModel>>;\n\ninterface CategorizedInsightData {\n  componentClass: typeof Insights.BaseInsightComponent.BaseInsightComponent<Trace.Insights.Types.InsightModel>;\n  model: Trace.Insights.Types.InsightModel;\n}\n\n/**\n * Every insight (INCLUDING experimental ones).\n *\n * Order does not matter (but keep alphabetized).\n */\nconst INSIGHT_NAME_TO_COMPONENT: InsightNameToComponentMapping = {\n  Cache: Insights.Cache.Cache,\n  CLSCulprits: Insights.CLSCulprits.CLSCulprits,\n  DocumentLatency: Insights.DocumentLatency.DocumentLatency,\n  DOMSize: Insights.DOMSize.DOMSize,\n  DuplicatedJavaScript: Insights.DuplicatedJavaScript.DuplicatedJavaScript,\n  FontDisplay: Insights.FontDisplay.FontDisplay,\n  ForcedReflow: Insights.ForcedReflow.ForcedReflow,\n  ImageDelivery: Insights.ImageDelivery.ImageDelivery,\n  INPBreakdown: Insights.INPBreakdown.INPBreakdown,\n  LCPDiscovery: Insights.LCPDiscovery.LCPDiscovery,\n  LCPBreakdown: Insights.LCPBreakdown.LCPBreakdown,\n  LegacyJavaScript: Insights.LegacyJavaScript.LegacyJavaScript,\n  ModernHTTP: Insights.ModernHTTP.ModernHTTP,\n  NetworkDependencyTree: Insights.NetworkDependencyTree.NetworkDependencyTree,\n  RenderBlocking: Insights.RenderBlocking.RenderBlocking,\n  SlowCSSSelector: Insights.SlowCSSSelector.SlowCSSSelector,\n  ThirdParties: Insights.ThirdParties.ThirdParties,\n  Viewport: Insights.Viewport.Viewport,\n};\n\nexport class SidebarSingleInsightSet extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #activeInsightElement: BaseInsightComponent<Trace.Insights.Types.InsightModel>|null = null;\n\n  #data: SidebarSingleInsightSetData = {\n    insights: null,\n    insightSetKey: null,\n    activeCategory: Trace.Insights.Types.InsightCategory.ALL,\n    activeInsight: null,\n    parsedTrace: null,\n    traceMetadata: null,\n  };\n\n  #dismissedFieldMismatchNotice = false;\n  #activeHighlightTimeout = -1;\n\n  set data(data: SidebarSingleInsightSetData) {\n    this.#data = data;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  disconnectedCallback(): void {\n    window.clearTimeout(this.#activeHighlightTimeout);\n  }\n\n  highlightActiveInsight(): void {\n    if (!this.#activeInsightElement) {\n      return;\n    }\n    // First clear any existing highlight that is going on.\n    this.#activeInsightElement.removeAttribute('highlight-insight');\n    window.clearTimeout(this.#activeHighlightTimeout);\n\n    requestAnimationFrame(() => {\n      this.#activeInsightElement?.setAttribute('highlight-insight', 'true');\n      this.#activeHighlightTimeout = window.setTimeout(() => {\n        this.#activeInsightElement?.removeAttribute('highlight-insight');\n      }, 2_000);\n    });\n  }\n\n  #metricIsVisible(label: 'LCP'|'CLS'|'INP'): boolean {\n    if (this.#data.activeCategory === Trace.Insights.Types.InsightCategory.ALL) {\n      return true;\n    }\n    return label === this.#data.activeCategory;\n  }\n\n  #onClickMetric(traceEvent: Trace.Types.Events.Event): void {\n    this.dispatchEvent(new Insights.EventRef.EventReferenceClick(traceEvent));\n  }\n\n  #renderMetricValue(metric: 'LCP'|'CLS'|'INP', value: number|null, relevantEvent: Trace.Types.Events.Event|null):\n      Lit.LitTemplate {\n    let valueText: string;\n    let valueDisplay: HTMLElement|string;\n    let classification;\n    if (value === null) {\n      valueText = valueDisplay = '-';\n      classification = Trace.Handlers.ModelHandlers.PageLoadMetrics.ScoreClassification.UNCLASSIFIED;\n    } else if (metric === 'LCP') {\n      const micros = value as Trace.Types.Timing.Micro;\n      const {text, element} = NumberWithUnit.formatMicroSecondsAsSeconds(micros);\n      valueText = text;\n      valueDisplay = element;\n      classification =\n          Trace.Handlers.ModelHandlers.PageLoadMetrics.scoreClassificationForLargestContentfulPaint(micros);\n    } else if (metric === 'CLS') {\n      valueText = valueDisplay = value ? value.toFixed(2) : '0';\n      classification = Trace.Handlers.ModelHandlers.LayoutShifts.scoreClassificationForLayoutShift(value);\n    } else if (metric === 'INP') {\n      const micros = value as Trace.Types.Timing.Micro;\n      const {text, element} = NumberWithUnit.formatMicroSecondsAsMillisFixed(micros);\n      valueText = text;\n      valueDisplay = element;\n      classification =\n          Trace.Handlers.ModelHandlers.UserInteractions.scoreClassificationForInteractionToNextPaint(micros);\n    } else {\n      Platform.TypeScriptUtilities.assertNever(metric, `Unexpected metric ${metric}`);\n    }\n\n    // NOTE: it is deliberate to use the same value for the title and\n    // aria-label; the aria-label is used to give more context to\n    // screen-readers, and the title is to aid users who may not know what\n    // the red/orange/green classification is, or those who are unable to\n    // easily distinguish the visual colour differences.\n    // clang-format off\n    const title = value !== null ?\n      i18nString(UIStrings.metricScore, {PH1: metric, PH2: valueText, PH3: classification}) :\n      i18nString(UIStrings.metricScoreUnavailable, {PH1: metric});\n\n    return this.#metricIsVisible(metric) ? html`\n      <button class=\"metric\"\n        @click=${relevantEvent ? this.#onClickMetric.bind(this, relevantEvent) : null}\n        title=${title}\n        aria-label=${title}\n      >\n        <div class=\"metric-value metric-value-${classification}\">${valueDisplay}</div>\n      </button>\n    ` : Lit.nothing;\n    // clang-format on\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  #getLocalMetrics(insightSetKey: string) {\n    const lcp = Trace.Insights.Common.getLCP(this.#data.insights, insightSetKey);\n    const cls = Trace.Insights.Common.getCLS(this.#data.insights, insightSetKey);\n    const inp = Trace.Insights.Common.getINP(this.#data.insights, insightSetKey);\n\n    return {lcp, cls, inp};\n  }\n\n  #getFieldMetrics(insightSetKey: string): Trace.Insights.Common.CrUXFieldMetricResults|null {\n    const insightSet = this.#data.insights?.get(insightSetKey);\n    if (!insightSet) {\n      return null;\n    }\n\n    const fieldMetricsResults = Trace.Insights.Common.getFieldMetricsForInsightSet(\n        insightSet, this.#data.traceMetadata, CrUXManager.CrUXManager.instance().getSelectedScope());\n    if (!fieldMetricsResults) {\n      return null;\n    }\n\n    return fieldMetricsResults;\n  }\n\n  /**\n   * Returns true if LCP or INP are worse in the field than what was observed locally.\n   *\n   * CLS is ignored because the guidance of applying throttling or device emulation doesn't\n   * correlate as much with observing a more average user experience.\n   */\n  #isFieldWorseThanLocal(local: {lcp?: Trace.Types.Timing.Milli, inp?: Trace.Types.Timing.Milli}, field: {\n    lcp?: Trace.Types.Timing.Milli,\n    inp?: Trace.Types.Timing.Milli,\n  }): boolean {\n    if (local.lcp !== undefined && field.lcp !== undefined) {\n      if (determineCompareRating('LCP', local.lcp, field.lcp) === 'better') {\n        return true;\n      }\n    }\n\n    if (local.inp !== undefined && field.inp !== undefined) {\n      if (determineCompareRating('LCP', local.inp, field.inp) === 'better') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  #dismissFieldMismatchNotice(): void {\n    this.#dismissedFieldMismatchNotice = true;\n    this.#render();\n  }\n\n  #renderMetrics(insightSetKey: string): Lit.TemplateResult {\n    const local = this.#getLocalMetrics(insightSetKey);\n    const field = this.#getFieldMetrics(insightSetKey);\n\n    const lcpEl = this.#renderMetricValue('LCP', local.lcp?.value ?? null, local.lcp?.event ?? null);\n    const inpEl = this.#renderMetricValue('INP', local.inp?.value ?? null, local.inp?.event ?? null);\n    const clsEl = this.#renderMetricValue('CLS', local.cls.value ?? null, local.cls?.worstClusterEvent ?? null);\n\n    const localMetricsTemplateResult = html`\n      <div class=\"metrics-row\">\n        <span>${lcpEl}</span>\n        <span>${inpEl}</span>\n        <span>${clsEl}</span>\n        <span class=\"row-label\">Local</span>\n      </div>\n      <span class=\"row-border\"></span>\n    `;\n\n    let fieldMetricsTemplateResult;\n    if (field) {\n      const {lcp, inp, cls} = field;\n\n      const lcpEl = this.#renderMetricValue('LCP', lcp?.value ?? null, null);\n      const inpEl = this.#renderMetricValue('INP', inp?.value ?? null, null);\n      const clsEl = this.#renderMetricValue('CLS', cls?.value ?? null, null);\n\n      let scope = i18nString(UIStrings.originOption);\n      if (lcp?.pageScope === 'url' || inp?.pageScope === 'url') {\n        scope = i18nString(UIStrings.urlOption);\n      }\n\n      // clang-format off\n      fieldMetricsTemplateResult = html`\n        <div class=\"metrics-row\">\n          <span>${lcpEl}</span>\n          <span>${inpEl}</span>\n          <span>${clsEl}</span>\n          <span class=\"row-label\">${i18nString(UIStrings.fieldScoreLabel, {PH1: scope})}</span>\n        </div>\n        <span class=\"row-border\"></span>\n      `;\n      // clang-format on\n    }\n\n    const localValues = {\n      lcp: local.lcp?.value !== undefined ? Trace.Helpers.Timing.microToMilli(local.lcp.value) : undefined,\n      inp: local.inp?.value !== undefined ? Trace.Helpers.Timing.microToMilli(local.inp.value) : undefined,\n    };\n    const fieldValues = field && {\n      lcp: field.lcp?.value !== undefined ? Trace.Helpers.Timing.microToMilli(field.lcp.value) : undefined,\n      inp: field.inp?.value !== undefined ? Trace.Helpers.Timing.microToMilli(field.inp.value) : undefined,\n    };\n\n    let fieldIsDifferentEl;\n    if (!this.#dismissedFieldMismatchNotice && fieldValues && this.#isFieldWorseThanLocal(localValues, fieldValues)) {\n      // clang-format off\n      fieldIsDifferentEl = html`\n        <div class=\"field-mismatch-notice\" jslog=${VisualLogging.section('timeline.insights.field-mismatch')}>\n          <h3>${i18nString(UIStrings.fieldMismatchTitle)}</h3>\n          <devtools-button\n            title=${i18nString(UIStrings.dismissTitle)}\n            .iconName=${'cross'}\n            .variant=${Buttons.Button.Variant.ICON}\n            .jslogContext=${'timeline.insights.dismiss-field-mismatch'}\n            @click=${this.#dismissFieldMismatchNotice}\n          ></devtools-button>\n          <div class=\"field-mismatch-notice__body\">${md(i18nString(UIStrings.fieldMismatchNotice))}</div>\n        </div>\n      `;\n      // clang-format on\n    }\n\n    const classes = {metrics: true, 'metrics--field': Boolean(fieldMetricsTemplateResult)};\n    const metricsTableEl = html`<div class=${Lit.Directives.classMap(classes)}>\n      <div class=\"metrics-row\">\n        <span class=\"metric-label\">LCP</span>\n        <span class=\"metric-label\">INP</span>\n        <span class=\"metric-label\">CLS</span>\n        <span class=\"row-label\"></span>\n      </div>\n      ${localMetricsTemplateResult}\n      ${fieldMetricsTemplateResult}\n    </div>`;\n\n    return html`\n      ${metricsTableEl}\n      ${fieldIsDifferentEl}\n    `;\n  }\n\n  static categorizeInsights(\n      insightSets: Trace.Insights.Types.TraceInsightSets|null,\n      insightSetKey: string,\n      activeCategory: Trace.Insights.Types.InsightCategory,\n      ): {shownInsights: CategorizedInsightData[], passedInsights: CategorizedInsightData[]} {\n    const includeExperimental = Root.Runtime.experiments.isEnabled(\n        Root.Runtime.ExperimentName.TIMELINE_EXPERIMENTAL_INSIGHTS,\n    );\n\n    const insightSet = insightSets?.get(insightSetKey);\n    if (!insightSet) {\n      return {shownInsights: [], passedInsights: []};\n    }\n\n    const shownInsights: CategorizedInsightData[] = [];\n    const passedInsights: CategorizedInsightData[] = [];\n\n    for (const [name, model] of Object.entries(insightSet.model)) {\n      const componentClass = INSIGHT_NAME_TO_COMPONENT[name as keyof Trace.Insights.Types.InsightModels];\n      if (!componentClass) {\n        continue;\n      }\n\n      if (!includeExperimental && EXPERIMENTAL_INSIGHTS.has(name)) {\n        continue;\n      }\n\n      if (!model || !shouldRenderForCategory({activeCategory, insightCategory: model.category})) {\n        continue;\n      }\n\n      if (model instanceof Error) {\n        continue;\n      }\n\n      if (model.state === 'pass') {\n        passedInsights.push({componentClass, model});\n      } else {\n        shownInsights.push({componentClass, model});\n      }\n    }\n    return {shownInsights, passedInsights};\n  }\n\n  #renderInsights(\n      insightSets: Trace.Insights.Types.TraceInsightSets|null,\n      insightSetKey: string,\n      ): Lit.LitTemplate {\n    const insightSet = insightSets?.get(insightSetKey);\n    if (!insightSet) {\n      return Lit.nothing;\n    }\n\n    const fieldMetrics = this.#getFieldMetrics(insightSetKey);\n    const {shownInsights: shownInsightsData, passedInsights: passedInsightsData} =\n        SidebarSingleInsightSet.categorizeInsights(\n            insightSets,\n            insightSetKey,\n            this.#data.activeCategory,\n        );\n\n    const renderInsightComponent = (insightData: CategorizedInsightData): Lit.TemplateResult => {\n      const {componentClass, model} = insightData;\n      // clang-format off\n      return html`<div>\n        <${componentClass.litTagName}\n          .selected=${this.#data.activeInsight?.model === model}\n          ${Lit.Directives.ref(elem => {\n            if(this.#data.activeInsight?.model === model && elem) {\n              this.#activeInsightElement = elem as BaseInsightComponent<Trace.Insights.Types.InsightModel>;\n            }\n          })}\n          .model=${model}\n          .bounds=${insightSet.bounds}\n          .insightSetKey=${insightSetKey}\n          .parsedTrace=${this.#data.parsedTrace}\n          .fieldMetrics=${fieldMetrics}>\n        </${componentClass.litTagName}>\n      </div>`;\n      // clang-format on\n    };\n\n    const shownInsights = shownInsightsData.map(renderInsightComponent);\n    const passedInsights = passedInsightsData.map(renderInsightComponent);\n\n    // clang-format off\n    return html`\n      ${shownInsights}\n      ${passedInsights.length ? html`\n        <details class=\"passed-insights-section\">\n          <summary>${i18nString(UIStrings.passedInsights, {\n            PH1: passedInsights.length,\n          })}</summary>\n          ${passedInsights}\n        </details>\n      ` : Lit.nothing}\n    `;\n    // clang-format on\n  }\n\n  #render(): void {\n    const {\n      insights,\n      insightSetKey,\n    } = this.#data;\n    if (!insights || !insightSetKey) {\n      Lit.render(html``, this.#shadow, {host: this});\n      return;\n    }\n\n    // clang-format off\n    Lit.render(html`\n      <style>${sidebarSingleInsightSetStyles}</style>\n      <div class=\"navigation\">\n        ${this.#renderMetrics(insightSetKey)}\n        ${this.#renderInsights(insights, insightSetKey)}\n        </div>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-sidebar-single-navigation': SidebarSingleInsightSet;\n  }\n}\n\ncustomElements.define('devtools-performance-sidebar-single-navigation', SidebarSingleInsightSet);\n", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../../../models/trace/trace.js';\n\nexport function shouldRenderForCategory(options: {\n  activeCategory: Trace.Insights.Types.InsightCategory,\n  insightCategory: Trace.Insights.Types.InsightCategory,\n}): boolean {\n  return options.activeCategory === Trace.Insights.Types.InsightCategory.ALL ||\n      options.activeCategory === options.insightCategory;\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n  padding: 5px 8px;\n}\n\n.metrics {\n  display: grid;\n  align-items: end;\n  grid-template-columns: repeat(3, 1fr) 0.5fr;\n  grid-row-gap: 5px;\n}\n\n.row-border {\n  grid-column: 1/5;\n  border-top: var(--sys-size-1) solid var(--sys-color-divider);\n}\n\n.row-label {\n  visibility: hidden;\n  font-size: var(--sys-size-7);\n}\n\n.metrics--field .row-label {\n  visibility: visible;\n}\n\n.metrics-row {\n  display: contents;\n}\n\n.metric {\n  flex: 1;\n  user-select: text;\n  cursor: pointer;\n  /* metric container is a button for a11y reasons, so remove default styles\n   * */\n  background: none;\n  border: none;\n  padding: 0;\n  display: block;\n  text-align: left;\n}\n\n.metric-value {\n  font-size: var(--sys-size-10);\n}\n\n.metric-value-bad {\n  color: var(--app-color-performance-bad);\n}\n\n.metric-value-ok {\n  color: var(--app-color-performance-ok);\n}\n\n.metric-value-good {\n  color: var(--app-color-performance-good);\n}\n\n.metric-score-unclassified {\n  color: var(--sys-color-token-subtle);\n}\n\n.metric-label {\n  font: var(--sys-typescale-body4-medium);\n}\n\n.number-with-unit {\n  white-space: nowrap;\n\n  .unit {\n    font-size: 14px;\n    padding: 0 1px;\n  }\n}\n\n.passed-insights-section {\n  margin-top: var(--sys-size-5);\n\n  summary {\n    font-weight: var(--ref-typeface-weight-medium);\n  }\n}\n\n.field-mismatch-notice {\n  display: grid;\n  grid-template-columns: auto auto;\n  align-items: center;\n  background-color: var(--sys-color-surface3);\n  margin: var(--sys-size-6) 0;\n  border-radius: var(--sys-shape-corner-extra-small);\n  border: var(--sys-size-1) solid var(--sys-color-divider);\n\n  h3 {\n    margin-block: 3px;\n    font: var(--sys-typescale-body4-medium);\n    color: var(--sys-color-on-base);\n    padding: var(--sys-size-5) var(--sys-size-6) 0 var(--sys-size-6);\n  }\n\n  .field-mismatch-notice__body {\n    padding: var(--sys-size-3) var(--sys-size-6) var(--sys-size-5) var(--sys-size-6);\n  }\n\n  button {\n    padding: 5px;\n    background: unset;\n    border: unset;\n    font: inherit;\n    color: var(--sys-color-primary);\n    text-decoration: underline;\n    cursor: pointer;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./sidebarSingleInsightSet.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: flex;\n  flex-flow: column nowrap;\n  flex-grow: 1;\n}\n\n.insight-sets-wrapper {\n  display: flex;\n  flex-flow: column nowrap;\n  flex-grow: 1; /* so it fills the available vertical height in the sidebar */\n\n  details {\n    flex-grow: 0;\n  }\n\n  details[open] {\n    flex-grow: 1;\n    border-bottom: 1px solid var(--sys-color-divider);\n  }\n\n  summary {\n    background-color: var(--sys-color-surface2);\n    border-bottom: 1px solid var(--sys-color-divider);\n    overflow: hidden;\n    padding: 2px 5px;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    font: var(--sys-typescale-body4-medium);\n    display: flex;\n    align-items: center;\n\n    &:focus {\n      background-color: var(--sys-color-tonal-container);\n    }\n\n    &::marker {\n      color: var(--sys-color-on-surface-subtle);\n      font-size: 11px;\n      line-height: 1;\n    }\n\n    /* make sure the first summary has a top border */\n    details:first-child & {\n      border-top: 1px solid var(--sys-color-divider);\n    }\n  }\n}\n\n.zoom-button {\n  margin-left: auto;\n}\n\n.zoom-icon {\n  visibility: hidden;\n\n  &.active devtools-button {\n    visibility: visible;\n  }\n}\n\n.dropdown-icon {\n  &.active devtools-button {\n    transform: rotate(90deg);\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./sidebarInsightsTab.css')} */`;", "// Copyright (c) 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport timelineSummaryStyles from './timelineSummary.css.js';\n\nconst {render, html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description Text for total\n   */\n  total: 'Total',\n  /**\n   *@description Range in Timeline Details View's Summary\n   *@example {1ms} PH1\n   *@example {10ms} PH2\n   */\n  rangeSS: 'Range:  {PH1} – {PH2}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/TimelineSummary.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface CategoryData {\n  value: number;\n  color: string;\n  title: string;\n}\n\nexport interface SummaryTableData {\n  total: number;\n  rangeStart: number;\n  rangeEnd: number;\n  categories: CategoryData[];\n  selectedEvents: Trace.Types.Events.Event[];\n}\n\nexport class CategorySummary extends HTMLElement {\n  readonly #shadow =\n      UI.UIUtils.createShadowRootWithCoreStyles(this, {cssFile: timelineSummaryStyles, delegatesFocus: undefined});\n\n  #rangeStart = 0;\n  #rangeEnd = 0;\n  #total = 0;\n  #categories: CategoryData[] = [];\n\n  set data(data: SummaryTableData) {\n    this.#total = data.total;\n    this.#categories = data.categories;\n    this.#rangeStart = data.rangeStart;\n    this.#rangeEnd = data.rangeEnd;\n    this.#render();\n  }\n\n  #render(): void {\n    // clang-format off\n    const output = html`\n          <div class=\"timeline-summary\">\n              <div class=\"summary-range\">${i18nString(UIStrings.rangeSS, {PH1: i18n.TimeUtilities.millisToString(this.#rangeStart), PH2: i18n.TimeUtilities.millisToString(this.#rangeEnd)})}</div>\n              <div class=\"category-summary\">\n                  ${this.#categories.map(category => {\n                      return html`\n                          <div class=\"category-row\">\n                          <div class=\"category-swatch\" style=\"background-color: ${category.color};\"></div>\n                          <div class=\"category-name\">${category.title}</div>\n                          <div class=\"category-value\">\n                              ${i18n.TimeUtilities.preciseMillisToString(category.value)}\n                              <div class=\"background-bar-container\">\n                                  <div class=\"background-bar\" style='width: ${(category.value * 100 / this.#total).toFixed(1)}%;'></div>\n                              </div>\n                          </div>\n                          </div>`;\n                  })}\n                  <div class=\"category-row\">\n                      <div class=\"category-swatch\"></div>\n                      <div class=\"category-name\">${i18nString(UIStrings.total)}</div>\n                      <div class=\"category-value\">\n                          ${i18n.TimeUtilities.preciseMillisToString(this.#total)}\n                          <div class=\"background-bar-container\">\n                              <div class=\"background-bar\"></div>\n                          </div>\n                      </div>\n                  </div>\n                </div>\n          </div>\n          </div>\n\n        </div>`;\n    // clang-format on\n    render(output, this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-performance-timeline-summary', CategorySummary);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-timeline-summary': CategorySummary;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  max-height: 100%;\n  overflow: hidden auto;\n  scrollbar-width: thin; /* ~11px wide reserved for gutter */\n}\n\n.timeline-summary {\n  font-size: var(--sys-typescale-body4-size);\n  flex-direction: column;\n  padding: 0 var(--sys-size-6) var(--sys-size-4) var(--sys-size-8) ;\n}\n\n.summary-range {\n  font-weight: var(--ref-typeface-weight-medium);\n  height: 24.5px;\n  line-height: 22px;\n}\n\n.category-summary {\n  gap: var(--sys-size-4);\n  display: flex;\n  flex-direction: column;\n}\n\n.category-row {\n  min-height: 16px;\n  line-height: 16px;\n}\n\n.category-swatch {\n  display: inline-block;\n  width: var(--sys-size-6);\n  height: var(--sys-size-6);\n  margin-right: var(--sys-size-4);\n  top: var(--sys-size-1);\n  position: relative;\n  border: var(--sys-size-1) solid var(--sys-color-neutral-outline);\n}\n\n.category-name {\n  display: inline;\n  word-break: break-all;\n}\n\n.category-value {\n  text-align: right;\n  position: relative;\n  float: right;\n  z-index: 0;\n  width: var(--sys-size-19);\n}\n\n.background-bar-container {\n  position: absolute;\n  inset: 0 0 0 var(--sys-size-3);\n  z-index: -1;\n}\n\n.background-bar {\n  width: 100%;\n  float: right;\n  height: var(--sys-size-8);\n  background-color: var(--sys-color-surface-yellow);\n  border-bottom: var(--sys-size-1) solid var(--sys-color-yellow-outline);\n}\n\n/*# sourceURL=${import.meta.resolve('./timelineSummary.css')} */`;"],
  "mappings": "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",
  "names": ["i18n", "ComponentHelpers", "Lit", "VisualLogging", "html", "Lit", "UIStrings", "str_", "i18nString", "option", "i18n", "Trace", "UI", "UIStrings", "str_", "i18nString", "i18n", "SDK", "UI", "Lit", "html", "Lit", "UIStrings", "str_", "i18nString", "i18n", "CrUXManager", "ComponentHelpers", "UI", "Lit", "VisualLogging", "UIStrings", "str_", "i18nString", "html", "nothing", "Lit", "Common", "i18n", "Platform", "Buttons", "Dialogs", "ComponentHelpers", "UI", "Lit", "html", "Lit", "UIStrings", "str_", "i18nString", "i18n", "ComponentHelpers", "Lit", "html", "Lit", "UIStrings", "str_", "i18nString", "i18n", "SDK", "Helpers", "Trace", "Buttons", "Lit", "html", "Lit", "UIStrings", "str_", "i18nString", "e", "Common", "i18n", "Platform", "SDK", "ComponentHelpers", "Lit", "VisualLogging", "MobileThrottling", "html", "nothing", "Lit", "UIStrings", "str_", "i18nString", "item", "i18n", "Platform", "CrUXManager", "Buttons", "ComponentHelpers", "UI", "Lit", "i18n", "UIStrings", "str_", "i18n", "Platform", "VisualLogging", "UIStrings", "str_", "i18nString", "NetworkCategory", "NumberWithUnit", "html", "nothing", "Lit", "UIStrings", "str_", "i18nString", "Common", "i18n", "CrUXManager", "Trace", "Buttons", "ComponentHelpers", "RenderCoordinator", "UI", "Lit", "VisualLogging", "MobileThrottling", "Platform", "SDK", "CrUXManager", "Lit", "MobileThrottling", "html", "html", "html", "nothing", "Lit", "UIStrings", "str_", "i18nString", "action", "i18n", "SDK", "Helpers", "Trace", "LegacyComponents", "UI", "Lit", "i18n", "Platform", "Trace", "Lit", "html", "Lit", "MAX_URL_LENGTH", "UIStrings", "str_", "i18nString", "html", "Lit", "MAX_URL_LENGTH", "UIStrings", "str_", "i18nString", "i18n", "ComponentHelpers", "Lit", "html", "Lit", "UIStrings", "str_", "i18nString", "RenderCoordinator", "UI", "Common", "i18n", "Platform", "Trace", "TraceBounds", "UI", "ThemeSupport", "Lit", "VisualLogging", "Utils", "html", "render", "Lit", "UIStrings", "str_", "i18nString", "i18n", "Platform", "CrUXManager", "Trace", "Buttons", "ComponentHelpers", "Lit", "VisualLogging", "Trace", "Insights", "html", "UIStrings", "str_", "i18nString", "lcpEl", "inpEl", "clsEl", "Trace", "Buttons", "ComponentHelpers", "Lit", "Utils", "Insights", "html", "Lit", "contents", "i18n", "UI", "Lit", "render", "html", "Lit", "UIStrings", "str_", "i18nString"]
}
