{"version":3,"file":"NetworkThrottlingSelector.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/NetworkThrottlingSelector.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,uCAAuC,CAAC;AAE/C,OAAO,KAAK,MAAM,MAAM,gCAAgC,CAAC;AACzD,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AACnD,OAAO,KAAK,QAAQ,MAAM,oCAAoC,CAAC;AAC/D,OAAO,KAAK,GAAG,MAAM,0BAA0B,CAAC;AAChD,OAAO,KAAK,OAAO,MAAM,2CAA2C,CAAC;AACrE,OAAO,KAAK,gBAAgB,MAAM,2CAA2C,CAAC;AAE9E,OAAO,KAAK,GAAG,MAAM,wBAAwB,CAAC;AAC9C,OAAO,KAAK,aAAa,MAAM,8CAA8C,CAAC;AAC9E,OAAO,KAAK,gBAAgB,MAAM,8CAA8C,CAAC;AAEjF,OAAO,kCAAkC,MAAM,oCAAoC,CAAC;AAEpF,4EAA4E;AAC5E,MAAM,+BAA+B,GAAG,IAAI,aAAa,EAAE,CAAC;AAC5D,+BAA+B,CAAC,WAAW,CAAC,kCAAkC,CAAC,UAAU,CAAC,CAAC;AAE3F,MAAM,EAAC,IAAI,EAAE,OAAO,EAAC,GAAG,GAAG,CAAC;AAE5B,MAAM,SAAS,GAAG;IAChB;;;OAGG;IACH,OAAO,EAAE,gBAAgB;IACzB;;;OAGG;IACH,iBAAiB,EAAE,2BAA2B;IAC9C;;;OAGG;IACH,qBAAqB,EAAE,qBAAqB;IAC5C;;OAEG;IACH,2BAA2B,EAAE,8DAA8D;IAC3F;;OAEG;IACH,QAAQ,EAAE,UAAU;IACpB;;OAEG;IACH,OAAO,EAAE,SAAS;IAClB;;OAEG;IACH,MAAM,EAAE,QAAQ;IAChB;;OAEG;IACH,GAAG,EAAE,MAAM;CACH,CAAC;AAEX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,yDAAyD,EAAE,SAAS,CAAC,CAAC;AAC/G,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAStE,MAAM,OAAO,yBAA0B,SAAQ,WAAW;IAC/C,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAErD,+BAA+B,CAA2D;IAC1F,OAAO,GAAsB,EAAE,CAAC;IAChC,kBAAkB,CAAgC;IAClD,sBAAsB,GAAuC,IAAI,CAAC;IAElE;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,+BAA+B;YAChC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;QACnF,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,cAAc,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,CAAC;QACtG,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,qBAAqB,CAAC,qBAAyD;QACjF,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC;QACpD,KAAK,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3E,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,+BAA+B,CAAC,CAAC;QACpE,GAAG,CAAC,cAAc,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC,gBAAgB,mGACI,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QAE7G,oEAAoE;QACpE,0EAA0E;QAC1E,qEAAqE;QACrE,+BAA+B;QAC/B,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,+BAA+B,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IACvF,CAAC;IAED,oBAAoB;QAClB,GAAG,CAAC,cAAc,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC,mBAAmB,mGACC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QAC7G,IAAI,CAAC,+BAA+B,CAAC,oBAAoB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAC1F,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;gBACpC,KAAK,EAAE;oBACL,GAAG,CAAC,cAAc,CAAC,sBAAsB;iBAC1C;aACF;YACD;gBACE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC;gBACnC,KAAK,EAAE,gBAAgB,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,cAAc;aAC3E;YACD;gBACE,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;gBAClC,KAAK,EAAE,IAAI,CAAC,+BAA+B,CAAC,GAAG,EAAE;gBACjD,mBAAmB,EAAE,IAAI;gBACzB,YAAY,EAAE,gCAAgC;aAC/C;SACF,CAAC;IACJ,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,cAAc,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,CAAC;QACtG,KAAK,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3E,CAAC;IAED,mBAAmB,CAAC,KAAmD;QACrE,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACnE,MAAM,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;YACvD,OAAO,UAAU,KAAK,KAAK,CAAC,SAAS,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,IAAI,aAAa,EAAE,CAAC;YAClB,GAAG,CAAC,cAAc,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;QAC9F,CAAC;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,KAAK,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3E,CAAC;IAED,mBAAmB,CAAC,UAAyC;QAC3D,OAAO,UAAU,CAAC,KAAK,YAAY,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC;IACtF,CAAC;IAED,WAAW;QACT,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;IACpE,CAAC;IAED;;;;;OAKG;IACH,wBAAwB,CAAC,UAAyC;QAChE,OAAO,UAAU,CAAC,YAAY,IAAI,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;IACzE,CAAC;IAED,OAAO,GAAG,GAAS,EAAE;QACnB,MAAM,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACzE,MAAM,qBAAqB,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAErF,IAAI,iBAAiB,CAAC;QACtB,IAAI,IAAI,CAAC,sBAAsB,IAAI,IAAI,CAAC,kBAAkB,KAAK,GAAG,CAAC,cAAc,CAAC,sBAAsB,EAAE,CAAC;YACzG,iBAAiB,GAAG,IAAI,CAAA;gBACd,UAAU,CAAC,SAAS,CAAC,2BAA2B,CAAC;oBAC7C,MAAM;mBACP,wCAA2B;0BACpB,CAAC;QACvB,CAAC;QAED,mBAAmB;QACnB,MAAM,MAAM,GAAG,IAAI,CAAA;;8BAEO,IAAI,CAAC,mBAAmB;uBAC/B,IAAI;qBACN,IAAI;sBACH,KAAK;4BACC,IAAI;wBACR,oBAAoB;uBACrB,UAAU,CAAC,SAAS,CAAC,OAAO,EAAE,EAAC,GAAG,EAAE,cAAc,EAAC,CAAC;iBAC1D,UAAU,CAAC,SAAS,CAAC,iBAAiB,EAAE,EAAC,GAAG,EAAE,cAAc,EAAC,CAAC;;UAErE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACzB,OAAO,IAAI,CAAA;yCACoB,KAAK,CAAC,IAAI,WAAW,KAAK,CAAC,IAAI;gBACxD,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBAC7B,IAAI,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;gBACjD,IAAI,UAAU,KAAK,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAC/C,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,qBAAqB,EAAE,EAAC,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;gBACpE,CAAC;gBAED,MAAM,GAAG,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;gBACtD,MAAM,YAAY,GAAG,KAAK,CAAC,YAAY,IAAI,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,IAAI,KAAK,CAAC,CAAC;gBAClH,OAAO,IAAI,CAAA;;6BAEE,GAAG;gCACA,qBAAqB,KAAK,GAAG;6BAChC,KAAK;4BACN,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;;sBAE3D,KAAK;;iBAEV,CAAC;YACJ,CAAC,CAAC;gBACA,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAA;;2BAErB,CAAC,CAAC,uDAAuD;2BACzD,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;0BAC1B,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;2BAC/C,IAAI,CAAC,WAAW;;oBAEvB,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;;eAE9B,CAAC,CAAC,CAAC,OAAO;;WAEd,CAAC;QACJ,CAAC,CAAC;;QAEF,iBAAiB;KACpB,CAAC;QACF,kBAAkB;QAClB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IACjD,CAAC,CAAC;CACH;AAED,cAAc,CAAC,MAAM,CAAC,sCAAsC,EAAE,yBAAyB,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/menus/menus.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport type * as Menus from '../../../ui/components/menus/menus.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../../mobile_throttling/mobile_throttling.js';\n\nimport networkThrottlingSelectorStylesRaw from './networkThrottlingSelector.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst networkThrottlingSelectorStyles = new CSSStyleSheet();\nnetworkThrottlingSelectorStyles.replaceSync(networkThrottlingSelectorStylesRaw.cssContent);\n\nconst {html, nothing} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text label for a selection box showing which network throttling option is applied.\n   * @example {No throttling} PH1\n   */\n  network: 'Network: {PH1}',\n  /**\n   * @description Text label for a selection box showing which network throttling option is applied.\n   * @example {No throttling} PH1\n   */\n  networkThrottling: 'Network throttling: {PH1}',\n  /**\n   * @description Text label for a selection box showing that a specific option is recommended for network throttling.\n   * @example {Fast 4G} PH1\n   */\n  recommendedThrottling: '{PH1} – recommended',\n  /**\n   * @description Text for why user should change a throttling setting.\n   */\n  recommendedThrottlingReason: 'Consider changing setting to simulate real user environments',\n  /**\n   * @description Text label for a menu group that disables network throttling.\n   */\n  disabled: 'Disabled',\n  /**\n   * @description Text label for a menu group that contains default presets for network throttling.\n   */\n  presets: 'Presets',\n  /**\n   * @description Text label for a menu group that contains custom presets for network throttling.\n   */\n  custom: 'Custom',\n  /**\n   * @description Text label for a menu option to add a new custom throttling preset.\n   */\n  add: 'Add…',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/NetworkThrottlingSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ConditionsGroup {\n  name: string;\n  items: SDK.NetworkManager.Conditions[];\n  showCustomAddOption?: boolean;\n  jslogContext?: string;\n}\n\nexport class NetworkThrottlingSelector extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #customNetworkConditionsSetting: Common.Settings.Setting<SDK.NetworkManager.Conditions[]>;\n  #groups: ConditionsGroup[] = [];\n  #currentConditions: SDK.NetworkManager.Conditions;\n  #recommendedConditions: SDK.NetworkManager.Conditions|null = null;\n\n  constructor() {\n    super();\n    this.#customNetworkConditionsSetting =\n        Common.Settings.Settings.instance().moduleSetting('custom-network-conditions');\n    this.#resetPresets();\n    this.#currentConditions = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n    this.#render();\n  }\n\n  set recommendedConditions(recommendedConditions: SDK.NetworkManager.Conditions|null) {\n    this.#recommendedConditions = recommendedConditions;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [networkThrottlingSelectorStyles];\n    SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED, this.#onConditionsChanged, this);\n\n    // Also call onConditionsChanged immediately to make sure we get the\n    // latest snapshot. Otherwise if another panel updated this value and this\n    // component wasn't in the DOM, this component will not update itself\n    // when it is put into the page\n    this.#onConditionsChanged();\n    this.#customNetworkConditionsSetting.addChangeListener(this.#onSettingChanged, this);\n  }\n\n  disconnectedCallback(): void {\n    SDK.NetworkManager.MultitargetNetworkManager.instance().removeEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED, this.#onConditionsChanged, this);\n    this.#customNetworkConditionsSetting.removeChangeListener(this.#onSettingChanged, this);\n  }\n\n  #resetPresets(): void {\n    this.#groups = [\n      {\n        name: i18nString(UIStrings.disabled),\n        items: [\n          SDK.NetworkManager.NoThrottlingConditions,\n        ],\n      },\n      {\n        name: i18nString(UIStrings.presets),\n        items: MobileThrottling.ThrottlingPresets.ThrottlingPresets.networkPresets,\n      },\n      {\n        name: i18nString(UIStrings.custom),\n        items: this.#customNetworkConditionsSetting.get(),\n        showCustomAddOption: true,\n        jslogContext: 'custom-network-throttling-item',\n      },\n    ];\n  }\n\n  #onConditionsChanged(): void {\n    this.#currentConditions = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onMenuItemSelected(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void {\n    const newConditions = this.#groups.flatMap(g => g.items).find(item => {\n      const keyForItem = this.#keyForNetworkConditions(item);\n      return keyForItem === event.itemValue;\n    });\n    if (newConditions) {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(newConditions);\n    }\n  }\n\n  #onSettingChanged(): void {\n    this.#resetPresets();\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #getConditionsTitle(conditions: SDK.NetworkManager.Conditions): string {\n    return conditions.title instanceof Function ? conditions.title() : conditions.title;\n  }\n\n  #onAddClick(): void {\n    void Common.Revealer.reveal(this.#customNetworkConditionsSetting);\n  }\n\n  /**\n   * The key that uniquely identifies the condition setting. All the DevTools\n   * presets have the i18nKey, so we rely on that, but for custom user added\n   * ones we fallback to using the title (it wouldn't make sense for a user to\n   * add presets with the same title)\n   */\n  #keyForNetworkConditions(conditions: SDK.NetworkManager.Conditions): string {\n    return conditions.i18nTitleKey || this.#getConditionsTitle(conditions);\n  }\n\n  #render = (): void => {\n    const selectionTitle = this.#getConditionsTitle(this.#currentConditions);\n    const selectedConditionsKey = this.#keyForNetworkConditions(this.#currentConditions);\n\n    let recommendedInfoEl;\n    if (this.#recommendedConditions && this.#currentConditions === SDK.NetworkManager.NoThrottlingConditions) {\n      recommendedInfoEl = html`<devtools-button\n        title=${i18nString(UIStrings.recommendedThrottlingReason)}\n        .iconName=${'info'}\n        .variant=${Buttons.Button.Variant.ICON}\n      ></devtools-button>`;\n    }\n\n    // clang-format off\n    const output = html`\n      <devtools-select-menu\n        @selectmenuselected=${this.#onMenuItemSelected}\n        .showDivider=${true}\n        .showArrow=${true}\n        .sideButton=${false}\n        .showSelectedItem=${true}\n        .jslogContext=${'network-conditions'}\n        .buttonTitle=${i18nString(UIStrings.network, {PH1: selectionTitle})}\n        .title=${i18nString(UIStrings.networkThrottling, {PH1: selectionTitle})}\n      >\n        ${this.#groups.map(group => {\n          return html`\n            <devtools-menu-group .name=${group.name} .title=${group.name}>\n              ${group.items.map(conditions => {\n                let title = this.#getConditionsTitle(conditions);\n                if (conditions === this.#recommendedConditions) {\n                  title = i18nString(UIStrings.recommendedThrottling, {PH1: title});\n                }\n\n                const key = this.#keyForNetworkConditions(conditions);\n                const jslogContext = group.jslogContext || Platform.StringUtilities.toKebabCase(conditions.i18nTitleKey || title);\n                return html`\n                  <devtools-menu-item\n                    .value=${key}\n                    .selected=${selectedConditionsKey === key}\n                    .title=${title}\n                    jslog=${VisualLogging.item(jslogContext).track({click: true})}\n                  >\n                    ${title}\n                  </devtools-menu-item>\n                `;\n              })}\n              ${group.showCustomAddOption ? html`\n                <devtools-menu-item\n                  .value=${1 /* This won't be displayed unless it has some value. */}\n                  .title=${i18nString(UIStrings.add)}\n                  jslog=${VisualLogging.action('add').track({click: true})}\n                  @click=${this.#onAddClick}\n                >\n                  ${i18nString(UIStrings.add)}\n                </devtools-menu-item>\n              ` : nothing}\n            </devtools-menu-group>\n          `;\n        })}\n      </devtools-select-menu>\n      ${recommendedInfoEl}\n    `;\n    // clang-format on\n    Lit.render(output, this.#shadow, {host: this});\n  };\n}\n\ncustomElements.define('devtools-network-throttling-selector', NetworkThrottlingSelector);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-network-throttling-selector': NetworkThrottlingSelector;\n  }\n}\n"]}