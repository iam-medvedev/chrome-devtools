{"version":3,"file":"NetworkRequestTooltip.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/NetworkRequestTooltip.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as TraceEngine from '../../../models/trace/trace.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as PerfUI from '../../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport networkRequestTooltipStyles from './networkRequestTooltip.css.js';\nimport {colorForNetworkRequest} from './Utils.js';\n\nconst MAX_URL_LENGTH = 30;\n\nconst UIStrings = {\n  /**\n   *@description Text that refers to the priority of network request\n   */\n  priority: 'Priority',\n  /**\n   *@description Text that refers to the queueing and connecting time of a network request\n   */\n  queuingAndConnecting: 'Queuing and connecting',\n  /**\n   *@description Text that refers to the request sent and waiting time of a network request\n   */\n  requestSentAndWaiting: 'Request sent and waiting',\n  /**\n   *@description Text that refers to the content downloading time of a network request\n   */\n  contentDownloading: 'Content downloading',\n  /**\n   *@description Text that refers to the waiting on main thread time of a network request\n   */\n  waitingOnMainThread: 'Waiting on main thread',\n  /**\n   *@description Text that refers to a network request is render blocking\n   */\n  renderBlocking: 'Render blocking',\n};\n\nexport class NetworkRequestTooltip extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-performance-network-request-tooltip`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #networkRequest?: TraceEngine.Types.TraceEvents.SyntheticNetworkRequest|null;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [networkRequestTooltipStyles];\n    this.#render();\n  }\n\n  set networkRequest(networkRequest: TraceEngine.Types.TraceEvents.SyntheticNetworkRequest) {\n    if (this.#networkRequest === networkRequest) {\n      return;\n    }\n    this.#networkRequest = networkRequest;\n    this.#render();\n  }\n\n  #renderPriority(): LitHtml.TemplateResult|null {\n    if (!this.#networkRequest) {\n      return null;\n    }\n    if (this.#networkRequest.args.data.priority === this.#networkRequest.args.data.initialPriority) {\n      return LitHtml.html`\n        <div class=\"priority\">${UIStrings.priority}: ${\n          PerfUI.NetworkPriorities.uiLabelForNetworkPriority(this.#networkRequest.args.data.priority)}</div>\n      `;\n    }\n    return LitHtml.html`\n      <div class=\"priority\">\n        ${UIStrings.priority}:\n        ${PerfUI.NetworkPriorities.uiLabelForNetworkPriority(this.#networkRequest.args.data.initialPriority)}\n        <${IconButton.Icon.Icon.litTagName} name=${'arrow-forward'}></${IconButton.Icon.Icon.litTagName}>\n        ${PerfUI.NetworkPriorities.uiLabelForNetworkPriority(this.#networkRequest.args.data.priority)}\n      </div>\n    `;\n  }\n\n  #renderLeftWhisker(): LitHtml.TemplateResult {\n    // So the outside span will be a transparent rectangle with a left border.\n    // The inside span is just a rectangle with background color, and it is vertical centered.\n    // |\n    // |----\n    // |\n    return LitHtml.html`<span class=\"whisker-left\"> <span class=\"horizontal\"></span> </span>`;\n  }\n\n  #renderRightWhisker(): LitHtml.TemplateResult {\n    // So the outside span will be a transparent rectangle with a right border.\n    // The inside span is just a rectangle with background color, and it is vertical centered.\n    //      |\n    //  ----|\n    //      |\n    return LitHtml.html`<span class=\"whisker-right\"> <span class=\"horizontal\"></span> </span>`;\n  }\n\n  #renderTimings(): LitHtml.TemplateResult|null {\n    if (!this.#networkRequest) {\n      return null;\n    }\n    const syntheticData = this.#networkRequest.args.data.syntheticData;\n    const queueing = (syntheticData.sendStartTime - this.#networkRequest.ts) as TraceEngine.Types.Timing.MicroSeconds;\n    const requestPlusWaiting =\n        (syntheticData.downloadStart - syntheticData.sendStartTime) as TraceEngine.Types.Timing.MicroSeconds;\n    const download = (syntheticData.finishTime - syntheticData.downloadStart) as TraceEngine.Types.Timing.MicroSeconds;\n    const waitingOnMainThread = (this.#networkRequest.ts + this.#networkRequest.dur - syntheticData.finishTime) as\n        TraceEngine.Types.Timing.MicroSeconds;\n\n    const color = colorForNetworkRequest(this.#networkRequest);\n    const styleForWaiting = {\n      backgroundColor: `color-mix(in srgb, ${color}, hsla(0, 100%, 100%, 0.8))`,\n    };\n    const styleForDownloading = {\n      backgroundColor: color,\n    };\n\n    return LitHtml.html`\n      <ul>\n        <li>\n          ${this.#renderLeftWhisker()}\n          ${UIStrings.queuingAndConnecting}\n          <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(queueing)}</span>\n        </li>\n        <li>\n          <span class=\"indicator\" style=${LitHtml.Directives.styleMap(styleForWaiting)}></span>\n          ${UIStrings.requestSentAndWaiting}\n          <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(requestPlusWaiting)}</span>\n        </li>\n        <li>\n          <span class=\"indicator\" style=${LitHtml.Directives.styleMap(styleForDownloading)}></span>\n          ${UIStrings.contentDownloading}\n          <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(download)}</span>\n        </li>\n        <li>\n          ${this.#renderRightWhisker()}\n          ${UIStrings.waitingOnMainThread}\n          <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(waitingOnMainThread)}</span>\n        </li>\n      </ul>\n    `;\n  }\n\n  #render(): void {\n    if (!this.#networkRequest) {\n      return;\n    }\n    const networkData = this.#networkRequest.args.data;\n    // clang-format off\n    const output = LitHtml.html`\n      <div class=\"performance-card\">\n        <span class=\"url\">${Platform.StringUtilities.trimMiddle(networkData.url, MAX_URL_LENGTH)}</span>\n        <span class=\"time bold\">${i18n.TimeUtilities.formatMicroSecondsTime(this.#networkRequest.dur)}</span>\n\n        <div class=\"divider\"></div>\n        ${this.#renderPriority()}\n        ${TraceEngine.Helpers.Network.isSyntheticNetworkRequestEventRenderBlocking(this.#networkRequest) ?\n          LitHtml.html`<div class=\"render-blocking\"> ${UIStrings.renderBlocking} </div>` :  LitHtml.nothing\n        }\n        <div class=\"divider\"></div>\n\n        ${this.#renderTimings()}\n      </div>\n    `;\n    // clang-format on\n    LitHtml.render(output, this.#shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-network-request-tooltip': NetworkRequestTooltip;\n  }\n}\n\ncustomElements.define('devtools-performance-network-request-tooltip', NetworkRequestTooltip);\n"]}