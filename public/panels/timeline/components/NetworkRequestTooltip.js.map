{"version":3,"file":"NetworkRequestTooltip.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/NetworkRequestTooltip.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/icon_button/icon_button.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as PerfUI from '../../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as TimelineUtils from '../utils/utils.js';\n\nimport networkRequestTooltipStylesRaw from './networkRequestTooltip.css.js';\nimport {colorForNetworkRequest, networkResourceCategory} from './Utils.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst networkRequestTooltipStyles = new CSSStyleSheet();\nnetworkRequestTooltipStyles.replaceSync(networkRequestTooltipStylesRaw.cssContent);\n\nconst {html} = Lit;\n\nconst MAX_URL_LENGTH = 60;\n\nconst UIStrings = {\n  /**\n   *@description Text that refers to the priority of network request\n   */\n  priority: 'Priority',\n  /**\n   *@description Text for the duration of a network request\n   */\n  duration: 'Duration',\n  /**\n   *@description Text that refers to the queueing and connecting time of a network request\n   */\n  queuingAndConnecting: 'Queuing and connecting',\n  /**\n   *@description Text that refers to the request sent and waiting time of a network request\n   */\n  requestSentAndWaiting: 'Request sent and waiting',\n  /**\n   *@description Text that refers to the content downloading time of a network request\n   */\n  contentDownloading: 'Content downloading',\n  /**\n   *@description Text that refers to the waiting on main thread time of a network request\n   */\n  waitingOnMainThread: 'Waiting on main thread',\n  /**\n   *@description Text that refers to a network request is render blocking\n   */\n  renderBlocking: 'Render blocking',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/NetworkRequestTooltip.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface NetworkTooltipData {\n  networkRequest: Trace.Types.Events.SyntheticNetworkRequest|null;\n  entityMapper: TimelineUtils.EntityMapper.EntityMapper|null;\n}\n\nexport class NetworkRequestTooltip extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #data: NetworkTooltipData = {networkRequest: null, entityMapper: null};\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [networkRequestTooltipStyles];\n    this.#render();\n  }\n\n  set data(data: NetworkTooltipData) {\n    if (this.#data.networkRequest === data.networkRequest) {\n      return;\n    }\n    if (this.#data.entityMapper === data.entityMapper) {\n      return;\n    }\n    this.#data = {networkRequest: data.networkRequest, entityMapper: data.entityMapper};\n    this.#render();\n  }\n\n  static renderPriorityValue(networkRequest: Trace.Types.Events.SyntheticNetworkRequest): Lit.TemplateResult {\n    if (networkRequest.args.data.priority === networkRequest.args.data.initialPriority) {\n      return html`${PerfUI.NetworkPriorities.uiLabelForNetworkPriority(networkRequest.args.data.priority)}`;\n    }\n    return html`${PerfUI.NetworkPriorities.uiLabelForNetworkPriority(networkRequest.args.data.initialPriority)}\n        <devtools-icon name=${'arrow-forward'} class=\"priority\"></devtools-icon>\n        ${PerfUI.NetworkPriorities.uiLabelForNetworkPriority(networkRequest.args.data.priority)}`;\n  }\n\n  static renderTimings(networkRequest: Trace.Types.Events.SyntheticNetworkRequest): Lit.TemplateResult|null {\n    const syntheticData = networkRequest.args.data.syntheticData;\n    const queueing = (syntheticData.sendStartTime - networkRequest.ts) as Trace.Types.Timing.Micro;\n    const requestPlusWaiting = (syntheticData.downloadStart - syntheticData.sendStartTime) as Trace.Types.Timing.Micro;\n    const download = (syntheticData.finishTime - syntheticData.downloadStart) as Trace.Types.Timing.Micro;\n    const waitingOnMainThread =\n        (networkRequest.ts + networkRequest.dur - syntheticData.finishTime) as Trace.Types.Timing.Micro;\n\n    const color = colorForNetworkRequest(networkRequest);\n    const styleForWaiting = {\n      backgroundColor: `color-mix(in srgb, ${color}, hsla(0, 100%, 100%, 0.8))`,\n    };\n    const styleForDownloading = {\n      backgroundColor: color,\n    };\n\n    // The outside spans are transparent with a border on the outside edge.\n    // The inside spans are 1px tall rectangles, vertically centered, with background color.\n    //                   |\n    //                   |----\n    //   whisker-left->  |  ^ horizontal\n    const leftWhisker = html`<span class=\"whisker-left\"> <span class=\"horizontal\"></span> </span>`;\n    const rightWhisker = html`<span class=\"whisker-right\"> <span class=\"horizontal\"></span> </span>`;\n\n    return html`\n      <div class=\"timings-row timings-row--duration\">\n        <span class=\"indicator\"></span>\n        ${i18nString(UIStrings.duration)}\n         <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(networkRequest.dur)}</span>\n      </div>\n      <div class=\"timings-row\">\n        ${leftWhisker}\n        ${i18nString(UIStrings.queuingAndConnecting)}\n        <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(queueing)}</span>\n      </div>\n      <div class=\"timings-row\">\n        <span class=\"indicator\" style=${Lit.Directives.styleMap(styleForWaiting)}></span>\n        ${i18nString(UIStrings.requestSentAndWaiting)}\n        <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(requestPlusWaiting)}</span>\n      </div>\n      <div class=\"timings-row\">\n        <span class=\"indicator\" style=${Lit.Directives.styleMap(styleForDownloading)}></span>\n        ${i18nString(UIStrings.contentDownloading)}\n        <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(download)}</span>\n      </div>\n      <div class=\"timings-row\">\n        ${rightWhisker}\n        ${i18nString(UIStrings.waitingOnMainThread)}\n        <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(waitingOnMainThread)}</span>\n      </div>\n    `;\n  }\n\n  #render(): void {\n    if (!this.#data.networkRequest) {\n      return;\n    }\n    const chipStyle = {\n      backgroundColor: `${colorForNetworkRequest(this.#data.networkRequest)}`,\n    };\n    const url = new URL(this.#data.networkRequest.args.data.url);\n    const entity = (this.#data.entityMapper) ? this.#data.entityMapper.entityForEvent(this.#data.networkRequest) : null;\n    const originWithEntity = TimelineUtils.Helpers.formatOriginWithEntity(url, entity, true);\n\n    // clang-format off\n    const output = html`\n      <div class=\"performance-card\">\n        <div class=\"url\">${Platform.StringUtilities.trimMiddle(url.href.replace(url.origin, ''), MAX_URL_LENGTH)}</div>\n        <div class=\"url url--host\">${originWithEntity}</div>\n\n        <div class=\"divider\"></div>\n        <div class=\"network-category\"><span class=\"network-category-chip\" style=${Lit.Directives.styleMap(chipStyle)}></span>${networkResourceCategory(this.#data.networkRequest)}</div>\n        <div class=\"priority-row\">${i18nString(UIStrings.priority)}: ${NetworkRequestTooltip.renderPriorityValue(this.#data.networkRequest)}</div>\n        ${Trace.Helpers.Network.isSyntheticNetworkRequestEventRenderBlocking(this.#data.networkRequest) ?\n          html`<div class=\"render-blocking\"> ${i18nString(UIStrings.renderBlocking)} </div>` :  Lit.nothing\n        }\n        <div class=\"divider\"></div>\n\n        ${NetworkRequestTooltip.renderTimings(this.#data.networkRequest)}\n      </div>\n    `;\n    // clang-format on\n    Lit.render(output, this.#shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-network-request-tooltip': NetworkRequestTooltip;\n  }\n}\n\ncustomElements.define('devtools-performance-network-request-tooltip', NetworkRequestTooltip);\n"]}