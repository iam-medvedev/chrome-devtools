{"version":3,"file":"LiveMetricsView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/LiveMetricsView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as LiveMetrics from '../../../models/live-metrics/live-metrics.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Settings from '../../../ui/components/settings/settings.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport liveMetricsViewStyles from './liveMetricsView.css.js';\n\nconst {html, nothing, Directives} = LitHtml;\nconst {until, classMap} = Directives;\n\nexport class LiveMetricsView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-live-metrics-view`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #lcpValue?: LiveMetrics.LCPValue;\n  #clsValue?: LiveMetrics.CLSValue;\n  #inpValue?: LiveMetrics.INPValue;\n  #interactions: LiveMetrics.InteractionValue[] = [];\n\n  #cruxPageResult?: CrUXManager.PageResult;\n\n  // TODO: Link these to real setting inputs\n  #fieldDeviceScope: CrUXManager.DeviceScope = 'ALL';\n  #fieldPreferURL = true;\n\n  constructor() {\n    super();\n    this.#render();\n  }\n\n  #onMetricStatus(event: {data: LiveMetrics.StatusEvent}): void {\n    this.#lcpValue = event.data.lcp;\n    this.#clsValue = event.data.cls;\n    this.#inpValue = event.data.inp;\n    this.#interactions = event.data.interactions;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onFieldDataChanged(event: {data: CrUXManager.PageResult|undefined}): void {\n    this.#cruxPageResult = event.data;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  async #refreshFieldDataForCurrentPage(): Promise<void> {\n    this.#cruxPageResult = await CrUXManager.CrUXManager.instance().getFieldDataForCurrentPage();\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #getFieldMetricData(fieldMetric: CrUXManager.MetricNames): CrUXManager.MetricResponse|undefined {\n    const originResponse = this.#cruxPageResult?.[`origin-${this.#fieldDeviceScope}`];\n    const urlResponse = this.#cruxPageResult?.[`url-${this.#fieldDeviceScope}`];\n    if (this.#fieldPreferURL && urlResponse) {\n      return urlResponse?.record.metrics[fieldMetric];\n    }\n    return originResponse?.record.metrics[fieldMetric];\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [liveMetricsViewStyles];\n\n    const liveMetrics = LiveMetrics.LiveMetrics.instance();\n    liveMetrics.addEventListener(LiveMetrics.Events.Status, this.#onMetricStatus, this);\n\n    const cruxManager = CrUXManager.CrUXManager.instance();\n    cruxManager.addEventListener(CrUXManager.Events.FieldDataChanged, this.#onFieldDataChanged, this);\n\n    if (cruxManager.getAutomaticSetting().get()) {\n      void this.#refreshFieldDataForCurrentPage();\n    }\n\n    this.#lcpValue = liveMetrics.lcpValue;\n    this.#clsValue = liveMetrics.clsValue;\n    this.#inpValue = liveMetrics.inpValue;\n    this.#interactions = liveMetrics.interactions;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  disconnectedCallback(): void {\n    LiveMetrics.LiveMetrics.instance().removeEventListener(LiveMetrics.Events.Status, this.#onMetricStatus, this);\n\n    const cruxManager = CrUXManager.CrUXManager.instance();\n    cruxManager.removeEventListener(CrUXManager.Events.FieldDataChanged, this.#onFieldDataChanged, this);\n  }\n\n  #renderLiveLcp(lcpValue: LiveMetrics.LCPValue|undefined): LitHtml.LitTemplate {\n    const title = 'Largest Contentful Paint (LCP)';\n    const fieldData = this.#getFieldMetricData('largest_contentful_paint');\n\n    if (!lcpValue) {\n      return this.#renderLiveMetric(title, fieldData);\n    }\n\n    return this.#renderLiveMetric(\n        title,\n        fieldData,\n        i18n.TimeUtilities.millisToString(lcpValue.value),\n        lcpValue.rating,\n        lcpValue?.node,\n    );\n  }\n\n  #renderLiveCls(clsValue: LiveMetrics.CLSValue|undefined): LitHtml.LitTemplate {\n    const title = 'Cumulative Layout Shift (CLS)';\n    const fieldData = this.#getFieldMetricData('cumulative_layout_shift');\n\n    if (!clsValue) {\n      return this.#renderLiveMetric(title, fieldData);\n    }\n\n    return this.#renderLiveMetric(\n        title,\n        fieldData,\n        clsValue.value === 0 ? '0' : clsValue.value.toFixed(3),\n        clsValue.rating,\n    );\n  }\n\n  #renderLiveInp(inpValue: LiveMetrics.INPValue|undefined): LitHtml.LitTemplate {\n    const title = 'Interaction to Next Paint (INP)';\n    const fieldData = this.#getFieldMetricData('interaction_to_next_paint');\n\n    if (!inpValue) {\n      return this.#renderLiveMetric(title, fieldData);\n    }\n\n    return this.#renderLiveMetric(\n        title,\n        fieldData,\n        i18n.TimeUtilities.millisToString(inpValue.value),\n        inpValue.rating,\n    );\n  }\n\n  #densityAsPercent(density?: number): string {\n    if (density === undefined) {\n      density = 0;\n    }\n    const percent = Math.round(density * 100);\n    return `${percent}%`;\n  }\n\n  #renderFieldHistogram(histogram: CrUXManager.MetricResponse['histogram']): LitHtml.LitTemplate {\n    const goodPercent = this.#densityAsPercent(histogram[0].density);\n    const needsImprovementPercent = this.#densityAsPercent(histogram[1].density);\n    const poorPercent = this.#densityAsPercent(histogram[2].density);\n    return html`\n      <div class=\"field-data\">\n        <span class=\"histogram-bar good-bg\" style=\"width: ${goodPercent}\"></span>\n        <span>${goodPercent}</span>\n        <span class=\"histogram-bar needs-improvement-bg\" style=\"width: ${needsImprovementPercent}\"></span>\n        <span>${needsImprovementPercent}</span>\n        <span class=\"histogram-bar poor-bg\" style=\"width: ${poorPercent}\"></span>\n        <span>${poorPercent}</span>\n      </div>\n    `;\n  }\n\n  #renderLiveMetric(\n      title: string, cruxData?: CrUXManager.MetricResponse, valueStr?: string, rating?: LiveMetrics.Rating,\n      node?: SDK.DOMModel.DOMNode): LitHtml.LitTemplate {\n    const ratingClass = rating || 'waiting';\n    const histogram = cruxData?.histogram;\n    // clang-format off\n    return html`\n      <div class=\"card\">\n        <div class=\"card-title\">${title}</div>\n        <div class=\"metric-card-value\">\n          <div class=${classMap({\n            'local-metric-value': true,\n            [ratingClass]: true,\n          })}>\n            ${valueStr || '-'}\n          </div>\n          ${histogram ? this.#renderFieldHistogram(histogram) : nothing}\n        </div>\n        <div class=\"metric-card-element\">\n          ${node ? html`\n              <div class=\"card-section-title\">Related node</div>\n              <div>${until(Common.Linkifier.Linkifier.linkify(node))}</div>`\n            : nothing}\n        </div>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #render = (): void => {\n    const automaticSetting = CrUXManager.CrUXManager.instance().getAutomaticSetting();\n\n    // clang-format off\n    const output = html`\n      <div class=\"container\">\n        <div class=\"live-metrics-view\">\n          <div class=\"live-metrics\" slot=\"main\">\n            <h3>Local and Field Metrics</h3>\n            <div class=\"metric-cards\">\n              <div id=\"lcp\">\n                ${this.#renderLiveLcp(this.#lcpValue)}\n              </div>\n              <div id=\"cls\">\n                ${this.#renderLiveCls(this.#clsValue)}\n              </div>\n              <div id=\"inp\">\n                ${this.#renderLiveInp(this.#inpValue)}\n              </div>\n            </div>\n            <h3>Interactions</h3>\n            <ol class=\"interactions-list\">\n              ${this.#interactions.map((interaction, index) => html`\n                ${index === 0 ? html`<hr class=\"divider\">` : nothing}\n                <li class=\"interaction\">\n                  <span class=\"interaction-type\">${interaction.interactionType}</span>\n                  <span class=\"interaction-node\">${\n                    interaction.node && until(Common.Linkifier.Linkifier.linkify(interaction.node))}</span>\n                  <span class=${`interaction-duration ${interaction.rating}`}>${i18n.TimeUtilities.millisToString(interaction.duration)}</span>\n                </li>\n                <hr class=\"divider\">\n              `)}\n            </ol>\n          </div>\n          <div class=\"next-steps\" slot=\"sidebar\">\n            <h3>Next steps</h3>\n            <div id=\"field-setup\" class=\"card\">\n              <div class=\"card-title\">Field data</div>\n              <button @click=${this.#refreshFieldDataForCurrentPage}>Get field data</button>\n              <${Settings.SettingCheckbox.SettingCheckbox.litTagName} .data=${\n                  {setting: automaticSetting} as Settings.SettingCheckbox.SettingCheckboxData}>\n              </${Settings.SettingCheckbox.SettingCheckbox.litTagName}>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n    LitHtml.render(output, this.#shadow, {host: this});\n  };\n  // clang-format on\n}\n\ncustomElements.define('devtools-live-metrics-view', LiveMetricsView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-live-metrics-view': LiveMetricsView;\n  }\n}\n"]}