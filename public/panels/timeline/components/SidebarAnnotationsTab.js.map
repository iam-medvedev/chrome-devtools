{"version":3,"file":"SidebarAnnotationsTab.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/SidebarAnnotationsTab.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as TraceBounds from '../../../services/trace_bounds/trace_bounds.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as ThemeSupport from '../../../ui/legacy/theme_support/theme_support.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Utils from '../utils/utils.js';\n\nimport {RemoveAnnotation, RevealAnnotation} from './Sidebar.js';\nimport sidebarAnnotationsTabStylesRaw from './sidebarAnnotationsTab.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst sidebarAnnotationsTabStyles = new CSSStyleSheet();\nsidebarAnnotationsTabStyles.replaceSync(sidebarAnnotationsTabStylesRaw.cssContent);\n\nconst {html} = Lit;\n\nconst diagramImageUrl = new URL('../../../Images/performance-panel-diagram.svg', import.meta.url).toString();\nconst entryLabelImageUrl = new URL('../../../Images/performance-panel-entry-label.svg', import.meta.url).toString();\nconst timeRangeImageUrl = new URL('../../../Images/performance-panel-time-range.svg', import.meta.url).toString();\nconst deleteAnnotationImageUrl =\n    new URL('../../../Images/performance-panel-delete-annotation.svg', import.meta.url).toString();\n\nconst UIStrings = {\n  /**\n   * @description Title for entry label.\n   */\n  annotationGetStarted: 'Annotate a trace for yourself and others',\n  /**\n   * @description Title for entry label.\n   */\n  entryLabelTutorialTitle: 'Label an item',\n  /**\n   * @description Text for how to create an entry label.\n   */\n  entryLabelTutorialDescription: 'Double-click on an item and type to create an item label.',\n  /**\n   * @description  Title for diagram.\n   */\n  entryLinkTutorialTitle: 'Connect two items',\n  /**\n   * @description Text for how to create a diagram between entries.\n   */\n  entryLinkTutorialDescription:\n      'Double-click on an item, click on the adjacent rightward arrow, then select the destination item.',\n  /**\n   * @description  Title for time range.\n   */\n  timeRangeTutorialTitle: 'Define a time range',\n  /**\n   * @description Text for how to create a time range selection and add note.\n   */\n  timeRangeTutorialDescription: 'Shift-drag in the flamechart then type to create a time range annotation.',\n  /**\n   * @description  Title for deleting annotations.\n   */\n  deleteAnnotationTutorialTitle: 'Delete an annotation',\n  /**\n   * @description Text for how to access an annotation delete function.\n   */\n  deleteAnnotationTutorialDescription:\n      'Hover over the list in the sidebar with Annotations tab selected to access the delete function.',\n  /**\n   * @description Text used to describe the delete button to screen readers.\n   * @example {\"A paint event annotated with the text hello world\"} PH1\n   **/\n  deleteButton: 'Delete annotation: {PH1}',\n  /**\n   * @description label used to describe an annotation on an entry\n   *@example {Paint} PH1\n   *@example {\"Hello world\"} PH2\n   */\n  entryLabelDescriptionLabel: 'A \"{PH1}\" event annotated with the text \"{PH2}\"',\n  /**\n   * @description label used to describe a time range annotation\n   *@example {2.5 milliseconds} PH1\n   *@example {13.5 milliseconds} PH2\n   */\n  timeRangeDescriptionLabel: 'A time range starting at {PH1} and ending at {PH2}',\n  /**\n   * @description label used to describe a link from one entry to another.\n   *@example {Paint} PH1\n   *@example {Recalculate styles} PH2\n   */\n  entryLinkDescriptionLabel: 'A link between a \"{PH1}\" event and a \"{PH2}\" event',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/SidebarAnnotationsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SidebarAnnotationsTab extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n  #annotations: Trace.Types.File.Annotation[] = [];\n  // A map with annotated entries and the colours that are used to display them in the FlameChart.\n  // We need this map to display the entries in the sidebar with the same colours.\n  #annotationEntryToColorMap = new Map<Trace.Types.Events.Event|Trace.Types.Events.LegacyTimelineFrame, string>();\n\n  readonly #annotationsHiddenSetting: Common.Settings.Setting<boolean>;\n\n  constructor() {\n    super();\n    this.#annotationsHiddenSetting = Common.Settings.Settings.instance().moduleSetting('annotations-hidden');\n  }\n\n  deduplicatedAnnotations(): readonly Trace.Types.File.Annotation[] {\n    return this.#annotations;\n  }\n\n  set annotations(annotations: Trace.Types.File.Annotation[]) {\n    this.#annotations = this.#processAnnotationsList(annotations);\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set annotationEntryToColorMap(annotationEntryToColorMap: Map<Trace.Types.Events.Event, string>) {\n    this.#annotationEntryToColorMap = annotationEntryToColorMap;\n  }\n\n  #processAnnotationsList(annotations: Trace.Types.File.Annotation[]): Trace.Types.File.Annotation[] {\n    // When an entry is double-clicked, we create two annotations (a label and an entries connection) for the user to choose from.\n    // The one not selected is deleted when the user makes their selection.\n    // To avoid excessive activity in the sidebar (adding and removing annotations), only show one 'not started' annotation associated with an entry.\n    //\n    // If we encounter an annotation for an entry that hasn't started creation, add that entry to the 'entriesWithNotStartedAnnotation'\n    // set. This allows us to filter out any subsequent not started annotations for the same entry.\n    const entriesWithNotStartedAnnotation = new Set();\n\n    const processedAnnotations = annotations.filter(annotation => {\n      if (this.#isAnnotationCreationStarted(annotation)) {\n        return true;\n      }\n\n      if (annotation.type === 'ENTRIES_LINK' || annotation.type === 'ENTRY_LABEL') {\n        const annotationEntry = annotation.type === 'ENTRIES_LINK' ? annotation.entryFrom : annotation.entry;\n\n        if (entriesWithNotStartedAnnotation.has(annotationEntry)) {\n          return false;\n        }\n\n        entriesWithNotStartedAnnotation.add(annotationEntry);\n      }\n\n      return true;\n    });\n\n    // Sort annotations by timestamp.\n    processedAnnotations.sort(\n        (firstAnnotation, secondAnnotation) =>\n            this.#getAnnotationTimestamp(firstAnnotation) - this.#getAnnotationTimestamp(secondAnnotation),\n    );\n\n    return processedAnnotations;\n  }\n\n  #getAnnotationTimestamp(annotation: Trace.Types.File.Annotation): Trace.Types.Timing.Micro {\n    switch (annotation.type) {\n      case 'ENTRY_LABEL': {\n        return annotation.entry.ts;\n      }\n      case 'ENTRIES_LINK': {\n        return annotation.entryFrom.ts;\n      }\n      case 'TIME_RANGE': {\n        return annotation.bounds.min;\n      }\n      default: {\n        Platform.assertNever(annotation, `Invalid annotation type ${annotation}`);\n      }\n    }\n  }\n\n  #isAnnotationCreationStarted(annotation: Trace.Types.File.Annotation): boolean {\n    // Consider the annotation not started if:\n    // ENTRY_LABEL - label is empty\n    // ENTRIES_LINK - the connection annotation does not have the 'to' entry\n    // TIME_RANGE - range is over zero\n    switch (annotation.type) {\n      case 'ENTRY_LABEL': {\n        return annotation.label.length > 0;\n      }\n      case 'ENTRIES_LINK': {\n        return Boolean(annotation.entryTo);\n      }\n      case 'TIME_RANGE': {\n        return annotation.bounds.range > 0;\n      }\n    }\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [sidebarAnnotationsTabStyles];\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #renderEntryToIdentifier(annotation: Trace.Types.File.EntriesLinkAnnotation): Lit.LitTemplate {\n    if (annotation.entryTo) {\n      const entryToName = Utils.EntryName.nameForEntry(annotation.entryTo);\n      const toBackgroundColor = this.#annotationEntryToColorMap.get(annotation.entryTo) ?? '';\n      const toTextColor = findTextColorForContrast(toBackgroundColor);\n      const styleForToAnnotationIdentifier = {\n        backgroundColor: toBackgroundColor,\n        color: toTextColor,\n      };\n      // clang-format off\n      return html`\n        <span class=\"annotation-identifier\" style=${Lit.Directives.styleMap(styleForToAnnotationIdentifier)}>\n          ${entryToName}\n        </span>`;\n      // clang-format on\n    }\n    return Lit.nothing;\n  }\n\n  /**\n   * Renders the Annotation 'identifier' or 'name' in the annotations list.\n   * This is the text rendered before the annotation label that we use to indentify the annotation.\n   *\n   * Annotations identifiers for different annotations:\n   * Entry label -> Entry name\n   * Labelled range -> Start to End Range of the label in ms\n   * Connected entries -> Connected entries names\n   *\n   * All identifiers have a different colour background.\n   */\n  #renderAnnotationIdentifier(annotation: Trace.Types.File.Annotation): Lit.LitTemplate {\n    switch (annotation.type) {\n      case 'ENTRY_LABEL': {\n        const entryName = Utils.EntryName.nameForEntry(annotation.entry);\n        const backgroundColor = this.#annotationEntryToColorMap.get(annotation.entry) ?? '';\n        const color = findTextColorForContrast(backgroundColor);\n        const styleForAnnotationIdentifier = {\n          backgroundColor,\n          color,\n        };\n        return html`\n              <span class=\"annotation-identifier\" style=${Lit.Directives.styleMap(styleForAnnotationIdentifier)}>\n                ${entryName}\n              </span>\n        `;\n      }\n      case 'TIME_RANGE': {\n        const minTraceBoundsMilli =\n            TraceBounds.TraceBounds.BoundsManager.instance().state()?.milli.entireTraceBounds.min ?? 0;\n\n        const timeRangeStartInMs =\n            Math.round(Trace.Helpers.Timing.microToMilli(annotation.bounds.min) - minTraceBoundsMilli);\n        const timeRangeEndInMs =\n            Math.round(Trace.Helpers.Timing.microToMilli(annotation.bounds.max) - minTraceBoundsMilli);\n\n        return html`\n              <span class=\"annotation-identifier time-range\">\n                ${timeRangeStartInMs} - ${timeRangeEndInMs} ms\n              </span>\n        `;\n      }\n      case 'ENTRIES_LINK': {\n        const entryFromName = Utils.EntryName.nameForEntry(annotation.entryFrom);\n        const fromBackgroundColor = this.#annotationEntryToColorMap.get(annotation.entryFrom) ?? '';\n        const fromTextColor = findTextColorForContrast(fromBackgroundColor);\n        const styleForFromAnnotationIdentifier = {\n          backgroundColor: fromBackgroundColor,\n          color: fromTextColor,\n        };\n        // clang-format off\n        return html`\n          <div class=\"entries-link\">\n            <span class=\"annotation-identifier\" style=${Lit.Directives.styleMap(styleForFromAnnotationIdentifier)}>\n              ${entryFromName}\n            </span>\n            <devtools-icon class=\"inline-icon\" .data=${{\n              iconName: 'arrow-forward',\n              color: 'var(--icon-default)',\n              width: '18px',\n              height: '18px',\n            }}>\n            </devtools-icon>\n            ${this.#renderEntryToIdentifier(annotation)}\n          </div>\n      `;\n        // clang-format on\n      }\n      default:\n        Platform.assertNever(annotation, 'Unsupported annotation type');\n    }\n  }\n\n  #revealAnnotation(annotation: Trace.Types.File.Annotation): void {\n    this.dispatchEvent(new RevealAnnotation(annotation));\n  }\n\n  #renderTutorialCard(): Lit.TemplateResult {\n    return html`\n      <div class=\"annotation-tutorial-container\">\n      ${i18nString(UIStrings.annotationGetStarted)}\n        <div class=\"tutorial-card\">\n          <div class=\"tutorial-image\"> <img src=${entryLabelImageUrl}></img></div>\n          <div class=\"tutorial-title\">${i18nString(UIStrings.entryLabelTutorialTitle)}</div>\n          <div class=\"tutorial-description\">${i18nString(UIStrings.entryLabelTutorialDescription)}</div>\n        </div>\n        <div class=\"tutorial-card\">\n          <div class=\"tutorial-image\"> <img src=${diagramImageUrl}></img></div>\n          <div class=\"tutorial-title\">${i18nString(UIStrings.entryLinkTutorialTitle)}</div>\n          <div class=\"tutorial-description\">${i18nString(UIStrings.entryLinkTutorialDescription)}</div>\n        </div>\n        <div class=\"tutorial-card\">\n          <div class=\"tutorial-image\"> <img src=${timeRangeImageUrl}></img></div>\n          <div class=\"tutorial-title\">${i18nString(UIStrings.timeRangeTutorialTitle)}</div>\n          <div class=\"tutorial-description\">${i18nString(UIStrings.timeRangeTutorialDescription)}</div>\n        </div>\n        <div class=\"tutorial-card\">\n          <div class=\"tutorial-image\"> <img src=${deleteAnnotationImageUrl}></img></div>\n          <div class=\"tutorial-title\">${i18nString(UIStrings.deleteAnnotationTutorialTitle)}</div>\n          <div class=\"tutorial-description\">${i18nString(UIStrings.deleteAnnotationTutorialDescription)}</div>\n        </div>\n      </div>\n    `;\n  }\n\n  #jslogForAnnotation(annotation: Trace.Types.File.Annotation): string {\n    switch (annotation.type) {\n      case 'ENTRY_LABEL':\n        return 'entry-label';\n      case 'TIME_RANGE':\n        return 'time-range';\n      case 'ENTRIES_LINK':\n        return 'entries-link';\n      default:\n        Platform.assertNever(annotation, 'unknown annotation type');\n    }\n  }\n  #render(): void {\n    // clang-format off\n    Lit.render(\n      html`\n        <span class=\"annotations\">\n          ${this.#annotations.length === 0 ?\n            this.#renderTutorialCard() :\n            html`\n              ${this.#annotations.map(annotation => {\n                const label = detailedAriaDescriptionForAnnotation(annotation);\n                return html`\n                  <div class=\"annotation-container\"\n                    @click=${() => this.#revealAnnotation(annotation)}\n                    aria-label=${label}\n                    tabindex=\"0\"\n                    jslog=${VisualLogging.item(`timeline.annotation-sidebar.annotation-${this.#jslogForAnnotation(annotation)}`).track({click: true})}\n                  >\n                    <div class=\"annotation\">\n                      ${this.#renderAnnotationIdentifier(annotation)}\n                      <span class=\"label\">\n                        ${(annotation.type === 'ENTRY_LABEL' || annotation.type === 'TIME_RANGE') ? annotation.label : ''}\n                      </span>\n                    </div>\n                    <button class=\"delete-button\" aria-label=${i18nString(UIStrings.deleteButton, {PH1: label})} @click=${(event: Event) => {\n                      // Stop propagation to not zoom into the annotation when\n                      // the delete button is clicked\n                      event.stopPropagation();\n                      this.dispatchEvent(new RemoveAnnotation(annotation));\n                    }} jslog=${VisualLogging.action('timeline.annotation-sidebar.delete').track({click: true})}>\n                      <devtools-icon\n                        class=\"bin-icon\"\n                        .data=${{\n                          iconName: 'bin',\n                          color: 'var(--icon-default)',\n                          width: '20px',\n                          height: '20px',\n                        }}\n                      ></devtools-icon>\n                    </button>\n                  </div>`;\n              })}\n              <setting-checkbox class=\"visibility-setting\" .data=${{\n                setting: this.#annotationsHiddenSetting,\n                textOverride: 'Hide annotations',\n              }}>\n              </setting-checkbox>`\n      }\n      </span>`,\n    this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-performance-sidebar-annotations', SidebarAnnotationsTab);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-sidebar-annotations': SidebarAnnotationsTab;\n  }\n}\n\nfunction detailedAriaDescriptionForAnnotation(annotation: Trace.Types.File.Annotation): string {\n  switch (annotation.type) {\n    case 'ENTRY_LABEL': {\n      const name = Utils.EntryName.nameForEntry(annotation.entry);\n      return i18nString(UIStrings.entryLabelDescriptionLabel, {\n        PH1: name,\n        PH2: annotation.label,\n      });\n    }\n    case 'TIME_RANGE': {\n      const from = i18n.TimeUtilities.formatMicroSecondsAsMillisFixedExpanded(annotation.bounds.min);\n      const to = i18n.TimeUtilities.formatMicroSecondsAsMillisFixedExpanded(annotation.bounds.max);\n      return i18nString(UIStrings.timeRangeDescriptionLabel, {\n        PH1: from,\n        PH2: to,\n      });\n    }\n    case 'ENTRIES_LINK': {\n      if (!annotation.entryTo) {\n        // Only label it if it is completed.\n        return '';\n      }\n      const nameFrom = Utils.EntryName.nameForEntry(annotation.entryFrom);\n      const nameTo = Utils.EntryName.nameForEntry(annotation.entryTo);\n      return i18nString(UIStrings.entryLinkDescriptionLabel, {\n        PH1: nameFrom,\n        PH2: nameTo,\n      });\n    }\n    default:\n      Platform.assertNever(annotation, 'Unsupported annotation');\n  }\n}\n\nfunction findTextColorForContrast(bgColorText: string): string {\n  const bgColor = Common.Color.parse(bgColorText)?.asLegacyColor();\n  // Let's default to black text, since the entries' titles are black in the flamechart.\n  const darkColorToken = '--app-color-performance-sidebar-label-text-dark';\n  const darkColorText =\n      Common.Color.parse(ThemeSupport.ThemeSupport.instance().getComputedValue(darkColorToken))?.asLegacyColor();\n  if (!bgColor || !darkColorText) {\n    // This part of code shouldn't be reachable unless background color is invalid or something wrong with the color\n    // parsing. If so let's fall back to the dark color,\n    return `var(${darkColorToken})`;\n  }\n\n  const contrastRatio = Common.ColorUtils.contrastRatio(bgColor.rgba(), darkColorText.rgba());\n  return contrastRatio >= 4.5 ? `var(${darkColorToken})` : 'var(--app-color-performance-sidebar-label-text-light)';\n}\n"]}