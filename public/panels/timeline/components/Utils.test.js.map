{"version":3,"file":"Utils.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/Utils.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,uBAAuB,EAAC,MAAM,wCAAwC,CAAC;AAE/E,OAAO,KAAK,KAAK,MAAM,YAAY,CAAC;AAEpC,uBAAuB,CAAC,OAAO,EAAE,GAAG,EAAE;IACpC,EAAE,CAAC,iBAAiB,EAAE;QACpB,SAAS,EAAE,CAAC,IAAc,EAAE,QAAkB;YAC5C,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QACnF,CAAC;QAED,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAEX,yBAAyB;QACzB,EAAE,CAAC,CAAC,yBAAyB,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QACvC,EAAE,CAAC,CAAC,4DAA4D,CAAC,EAAE,CAAC,kCAAkC,CAAC,CAAC,CAAC;QACzG,EAAE,CAAC,CAAC,sCAAsC,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;QAEhE,0DAA0D;QAC1D,EAAE,CAAC,CAAC,yBAAyB,EAAE,sCAAsC,CAAC,EAAE,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC,CAAC;QAEhG,wEAAwE;QACxE,EAAE,CAAC,CAAC,yBAAyB,EAAE,wBAAwB,CAAC,EAAE,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC,CAAC;QACnF,EAAE,CAAC,CAAC,yBAAyB,EAAE,+BAA+B,CAAC,EAAE,CAAC,GAAG,EAAE,uBAAuB,CAAC,CAAC,CAAC;QACjG,EAAE,CAAC,CAAC,yBAAyB,EAAE,+BAA+B,EAAE,gCAAgC,CAAC,EAC9F,CAAC,GAAG,EAAE,uBAAuB,EAAE,UAAU,CAAC,CAAC,CAAC;QAE/C,6HAA6H;QAC7H,EAAE,CAAC,CAAC,yBAAyB,EAAE,wBAAwB,CAAC,EAAE,CAAC,yBAAyB,EAAE,wBAAwB,CAAC,CAAC,CAAC;QACjH,EAAE,CAAC,CAAC,wBAAwB,EAAE,yBAAyB,CAAC,EAAE,CAAC,wBAAwB,EAAE,yBAAyB,CAAC,CAAC,CAAC;QACjH,EAAE,CAAC,CAAC,qCAAqC,EAAE,sCAAsC,CAAC,EAC/E,CAAC,oCAAoC,EAAE,qCAAqC,CAAC,CAAC,CAAC;QAClF,EAAE,CAAC,CAAC,yBAAyB,EAAE,0BAA0B,CAAC,EAAE,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC,CAAC;IACzF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\n\nimport * as Utils from './Utils.js';\n\ndescribeWithEnvironment('Utils', () => {\n  it('createUrlLabels', function() {\n    function fn(urls: string[], expected: string[]) {\n      assert.deepEqual(Utils.createUrlLabels(urls.map(url => new URL(url))), expected);\n    }\n\n    fn([], []);\n\n    // Initial url is elided.\n    fn(['https://www.example.com'], ['/']);\n    fn(['https://www.example.com?k=1234567890&k2=1234567890&k3=0123'], ['/?k=1234567…&k2=1234567…&k3=0123']);\n    fn(['https://www.example.com/blah?test=me'], ['/blah?test=me']);\n\n    // Subsequent urls are elided if the same protocol+domain.\n    fn(['https://www.example.com', 'https://www.example.com/blah?test=me'], ['/', '/blah?test=me']);\n\n    // Subsequent urls are not elided if the protocol or the domain changes.\n    fn(['https://www.example.com', 'https://www.google.com'], ['/', 'www.google.com']);\n    fn(['https://www.example.com', 'https://www.google.com/search'], ['/', 'www.google.com/search']);\n    fn(['https://www.example.com', 'https://www.google.com/search', 'https://www.google.com/search2'],\n       ['/', 'www.google.com/search', '/search2']);\n\n    // If only https protocol is present, elide protocol. Otherwise always show the full URL (but still elide the search params).\n    fn(['https://www.example.com', 'http://www.example.com'], ['https://www.example.com', 'http://www.example.com']);\n    fn(['http://www.example.com', 'https://www.example.com'], ['http://www.example.com', 'https://www.example.com']);\n    fn(['http://www.example.com?k=1234567890', 'https://www.example.com?k=1234567890'],\n       ['http://www.example.com/?k=1234567…', 'https://www.example.com/?k=1234567…']);\n    fn(['https://www.example.com', 'https://www.example2.com'], ['/', 'www.example2.com']);\n  });\n});\n"]}