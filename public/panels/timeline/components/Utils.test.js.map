{"version":3,"file":"Utils.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/Utils.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../../generated/protocol.js';\nimport type * as Trace from '../../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\n\nimport * as Utils from './Utils.js';\n\ndescribeWithEnvironment('Utils', () => {\n  describe('NumberWithUnit', () => {\n    const {NumberWithUnit} = Utils;\n\n    it('renders number with unit (formatMicroSecondsAsSeconds)', () => {\n      const result = NumberWithUnit.formatMicroSecondsAsSeconds(100_000 as Trace.Types.Timing.Micro);\n      assert.strictEqual(result.text, '0.10s');\n      assert.strictEqual(result.element.textContent, '0.10s');\n      assert.strictEqual(result.element.querySelector('.unit')?.textContent, 's');\n    });\n\n    it('renders number with unit (formatMicroSecondsAsMillisFixed)', () => {\n      const result = NumberWithUnit.formatMicroSecondsAsMillisFixed(100_000 as Trace.Types.Timing.Micro);\n      assert.strictEqual(result.text, '100ms');\n      assert.strictEqual(result.element.textContent, '100ms');\n      assert.strictEqual(result.element.querySelector('.unit')?.textContent, 'ms');\n    });\n\n    it('parse', () => {\n      // en\n      assert.deepEqual(NumberWithUnit.parse('100[s]()'), {firstPart: '100', unitPart: 's', lastPart: ''});\n      assert.deepEqual(NumberWithUnit.parse('100 [s]()'), {firstPart: '100 ', unitPart: 's', lastPart: ''});\n\n      // Decimal separators\n      assert.deepEqual(NumberWithUnit.parse('100.123[ms]()'), {firstPart: '100.123', unitPart: 'ms', lastPart: ''});\n      assert.deepEqual(NumberWithUnit.parse('100,2[s]()'), {firstPart: '100,2', unitPart: 's', lastPart: ''});\n\n      // zh\n      assert.deepEqual(NumberWithUnit.parse('100[毫秒]()'), {firstPart: '100', unitPart: '毫秒', lastPart: ''});\n      // zh-Hans-CN-u-nu-hanidec\n      assert.deepEqual(NumberWithUnit.parse('一〇〇[毫秒]()'), {firstPart: '一〇〇', unitPart: '毫秒', lastPart: ''});\n\n      // ar-SA (RTL language, but the UIString still places the number first in the string)\n      assert.deepEqual(\n          NumberWithUnit.parse('١٠٠[ملي ثانية]()'), {firstPart: '١٠٠', unitPart: 'ملي ثانية', lastPart: ''});\n\n      // ar\n      assert.deepEqual(\n          NumberWithUnit.parse('100[ملي ثانية]()'), {firstPart: '100', unitPart: 'ملي ثانية', lastPart: ''});\n\n      // sw (only one that places unit first)\n      assert.deepEqual(NumberWithUnit.parse('[Sek]()100'), {firstPart: '', unitPart: 'Sek', lastPart: '100'});\n      assert.deepEqual(NumberWithUnit.parse('[Sek]() 100'), {firstPart: '', unitPart: 'Sek', lastPart: ' 100'});\n\n      // error cases\n      assert.isNull(NumberWithUnit.parse(''));\n      assert.isNull(NumberWithUnit.parse('100s'));\n      assert.isNull(NumberWithUnit.parse('100[s]('));\n      assert.isNull(NumberWithUnit.parse('100[s]'));\n      assert.isNull(NumberWithUnit.parse('100[s'));\n      assert.isNull(NumberWithUnit.parse('100 s]('));\n    });\n  });\n\n  describe('networkResourceCategory', function() {\n    const {networkResourceCategory, NetworkCategory} = Utils;\n    const {ResourceType} = Protocol.Network;\n    const getCategory = networkResourceCategory;\n    let req: Trace.Types.Events.SyntheticNetworkRequest|undefined;\n\n    before(async function() {\n      const events = await TraceLoader.fixtureContents(this, 'load-simple.json.gz');\n      const {parsedTrace} = await TraceLoader.executeTraceEngineOnFileContents(events);\n      req = parsedTrace.NetworkRequests.byId.get('2648544.35');\n    });\n\n    function tweakRequest(\n        mimeType: string, resourceType: Protocol.Network.ResourceType = Protocol.Network.ResourceType.Other):\n        Trace.Types.Events.SyntheticNetworkRequest {\n      assert.exists(req);\n      req.args.data.mimeType = mimeType;\n      req.args.data.resourceType = resourceType;\n      return req;\n    }\n\n    it('uses resource type when available', () => {\n      assert.strictEqual(getCategory(tweakRequest('text/html', ResourceType.Document)), NetworkCategory.DOC);\n      assert.strictEqual(getCategory(tweakRequest('text/css', ResourceType.Stylesheet)), NetworkCategory.CSS);\n      assert.strictEqual(getCategory(tweakRequest('image/png', ResourceType.Image)), NetworkCategory.IMG);\n      assert.strictEqual(getCategory(tweakRequest('video/webm', ResourceType.Media)), NetworkCategory.MEDIA);\n      assert.strictEqual(getCategory(tweakRequest('font/woff2', ResourceType.Font)), NetworkCategory.FONT);\n      assert.strictEqual(getCategory(tweakRequest('text/javascript', ResourceType.Script)), NetworkCategory.JS);\n      assert.strictEqual(getCategory(tweakRequest('something/unknown', ResourceType.WebSocket)), NetworkCategory.JS);\n      assert.strictEqual(getCategory(tweakRequest('something/unknown', ResourceType.Other)), NetworkCategory.OTHER);\n    });\n\n    it('falls back to mime type for older traces', () => {\n      assert.strictEqual(getCategory(tweakRequest('text/html')), NetworkCategory.DOC);\n      assert.strictEqual(getCategory(tweakRequest('text/css')), NetworkCategory.CSS);\n      assert.strictEqual(getCategory(tweakRequest('image/png')), NetworkCategory.IMG);\n      assert.strictEqual(getCategory(tweakRequest('video/webm')), NetworkCategory.MEDIA);\n      assert.strictEqual(getCategory(tweakRequest('font/woff2')), NetworkCategory.FONT);\n      assert.strictEqual(getCategory(tweakRequest('text/javascript')), NetworkCategory.JS);\n      assert.strictEqual(getCategory(tweakRequest('application/javascript')), NetworkCategory.JS);\n      assert.strictEqual(getCategory(tweakRequest('application/wasm')), NetworkCategory.WASM);\n      assert.strictEqual(getCategory(tweakRequest('application/x-font-woff')), NetworkCategory.FONT);\n      assert.strictEqual(getCategory(tweakRequest('application/font-woff2')), NetworkCategory.FONT);\n      assert.strictEqual(getCategory(tweakRequest('something/unknown')), NetworkCategory.OTHER);\n    });\n  });\n});\n"]}