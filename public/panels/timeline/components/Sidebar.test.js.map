{"version":3,"file":"Sidebar.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/Sidebar.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Trace from '../../../models/trace/trace.js';\nimport {raf, renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\n\nimport * as Components from './components.js';\n\ndescribeWithEnvironment('Sidebar', () => {\n  async function renderSidebar(\n      parsedTrace: Trace.Handlers.Types.ParsedTrace,\n      metadata: Trace.Types.File.MetaData|null,\n      insights: Trace.Insights.Types.TraceInsightSets|null,\n      ): Promise<Components.Sidebar.SidebarWidget> {\n    const container = document.createElement('div');\n    renderElementIntoDOM(container);\n    const sidebar = new Components.Sidebar.SidebarWidget();\n    sidebar.markAsRoot();\n    sidebar.setParsedTrace(parsedTrace, metadata);\n    sidebar.setInsights(insights);\n    sidebar.show(container);\n    await raf();\n    return sidebar;\n  }\n\n  it('renders with two tabs for insights & annotations', async function() {\n    const {parsedTrace, metadata, insights} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n\n    const sidebar = await renderSidebar(parsedTrace, metadata, insights);\n    const tabbedPane = sidebar.element.querySelector('.tabbed-pane')?.shadowRoot;\n    assert.isOk(tabbedPane);\n    const tabs = Array.from(tabbedPane.querySelectorAll('[role=\"tab\"]'));\n    assert.lengthOf(tabs, 2);\n    const labels = tabs.map(elem => elem.getAttribute('aria-label'));\n    assert.deepEqual(labels, ['Insights', 'Annotations']);\n  });\n\n  it('selects the insights tab by default', async function() {\n    const {parsedTrace, metadata, insights} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n\n    const sidebar = await renderSidebar(parsedTrace, metadata, insights);\n    const tabbedPane = sidebar.element.querySelector('.tabbed-pane')?.shadowRoot;\n    assert.isOk(tabbedPane);\n\n    const tabs = Array.from(tabbedPane.querySelectorAll('[role=\"tab\"]'));\n    const selectedTabLabels =\n        tabs.filter(tab => tab.classList.contains('selected')).map(elem => elem.getAttribute('aria-label'));\n    assert.deepEqual(selectedTabLabels, ['Insights']);\n  });\n\n  it('disables the insights tab if there are no insights', async function() {\n    const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const sidebar = await renderSidebar(parsedTrace, metadata, null);\n    const tabbedPane = sidebar.element.querySelector('.tabbed-pane')?.shadowRoot;\n    assert.isOk(tabbedPane);\n    const tabs = Array.from(tabbedPane.querySelectorAll('[role=\"tab\"]'));\n\n    const disabledTabLabels =\n        tabs.filter(tab => tab.classList.contains('disabled')).map(elem => elem.getAttribute('aria-label'));\n    assert.deepEqual(disabledTabLabels, ['Insights']);\n\n    const selectedTabLabels =\n        tabs.filter(tab => tab.classList.contains('selected')).map(elem => elem.getAttribute('aria-label'));\n    assert.deepEqual(selectedTabLabels, ['Annotations']);\n  });\n});\n"]}