{"version":3,"file":"Sidebar.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/Sidebar.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../../models/trace/trace.js';\nimport {raf, renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as Components from './components.js';\n\ndescribeWithEnvironment('Sidebar', () => {\n  async function renderSidebar(\n      parsedTrace: Trace.Handlers.Types.ParsedTrace,\n      metadata: Trace.Types.File.MetaData|null,\n      insights: Trace.Insights.Types.TraceInsightSets|null,\n      ): Promise<Components.Sidebar.SidebarWidget> {\n    const container = document.createElement('div');\n    renderElementIntoDOM(container);\n    const sidebar = new Components.Sidebar.SidebarWidget();\n    sidebar.markAsRoot();\n    sidebar.setParsedTrace(parsedTrace, metadata);\n    sidebar.setInsights(insights);\n    sidebar.show(container);\n    await raf();\n    return sidebar;\n  }\n\n  it('renders with two tabs for insights & annotations', async function() {\n    const {parsedTrace, metadata, insights} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n\n    const sidebar = await renderSidebar(parsedTrace, metadata, insights);\n    const tabbedPane = sidebar.element.querySelector('.tabbed-pane')?.shadowRoot;\n    assert.isOk(tabbedPane);\n    const tabs = Array.from(tabbedPane.querySelectorAll('[role=\"tab\"]'));\n    assert.lengthOf(tabs, 2);\n    const labels = tabs.map(elem => elem.getAttribute('aria-label'));\n    assert.deepEqual(labels, ['Insights', 'Annotations']);\n  });\n\n  it('selects the insights tab by default', async function() {\n    const {parsedTrace, metadata, insights} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n\n    const sidebar = await renderSidebar(parsedTrace, metadata, insights);\n    const tabbedPane = sidebar.element.querySelector('.tabbed-pane')?.shadowRoot;\n    assert.isOk(tabbedPane);\n\n    const tabs = Array.from(tabbedPane.querySelectorAll('[role=\"tab\"]'));\n    const selectedTabLabels =\n        tabs.filter(tab => tab.classList.contains('selected')).map(elem => elem.getAttribute('aria-label'));\n    assert.deepEqual(selectedTabLabels, ['Insights']);\n  });\n\n  it('disables the insights tab if there are no insights', async function() {\n    const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const sidebar = await renderSidebar(parsedTrace, metadata, null);\n    const tabbedPane = sidebar.element.querySelector('.tabbed-pane')?.shadowRoot;\n    assert.isOk(tabbedPane);\n    const tabs = Array.from(tabbedPane.querySelectorAll('[role=\"tab\"]'));\n\n    const disabledTabLabels =\n        tabs.filter(tab => tab.classList.contains('disabled')).map(elem => elem.getAttribute('aria-label'));\n    assert.deepEqual(disabledTabLabels, ['Insights']);\n\n    const selectedTabLabels =\n        tabs.filter(tab => tab.classList.contains('selected')).map(elem => elem.getAttribute('aria-label'));\n    assert.deepEqual(selectedTabLabels, ['Annotations']);\n  });\n\n  it('shows the count for the active annotations', async function() {\n    const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const events = parsedTrace.Renderer.allTraceEntries;\n    const annotation1: Trace.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: events[0],\n      label: 'Entry Label 1',\n    };\n\n    const annotation2: Trace.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: events[1],\n      label: 'Entry Label 2',\n    };\n\n    const sidebar = await renderSidebar(parsedTrace, metadata, null);\n    sidebar.setAnnotations([annotation1, annotation2], new Map());\n    const tabbedPane = sidebar.element.querySelector('.tabbed-pane')?.shadowRoot;\n    assert.isOk(tabbedPane);\n    const annotationsTab = tabbedPane.querySelector('#tab-annotations');\n    assert.isOk(annotationsTab);\n    const countBadge = annotationsTab.querySelector<HTMLElement>('.badge');\n    assert.strictEqual(countBadge?.innerText, '2');\n  });\n\n  it('de-duplicates annotations that are pending to not show an incorrect count', async function() {\n    const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const events = parsedTrace.Renderer.allTraceEntries;\n\n    // Create Empty Entry Label Annotation (considered not started)\n    const entryLabelAnnotation: Trace.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: events[0],\n      label: '',\n    };\n\n    // Create Entries link that only has 'to' entry (considered not started)\n    const entriesLink: Trace.Types.File.Annotation = {\n      type: 'ENTRIES_LINK',\n      entryFrom: events[0],\n      state: Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED,\n    };\n\n    const sidebar = await renderSidebar(parsedTrace, metadata, null);\n    sidebar.setAnnotations([entryLabelAnnotation, entriesLink], new Map());\n    const tabbedPane = sidebar.element.querySelector('.tabbed-pane')?.shadowRoot;\n    assert.isOk(tabbedPane);\n    const annotationsTab = tabbedPane.querySelector('#tab-annotations');\n    assert.isOk(annotationsTab);\n    const countBadge = annotationsTab.querySelector<HTMLElement>('.badge');\n    assert.strictEqual(countBadge?.innerText, '1');\n  });\n\n  it('removes the annotations badge when the user deletes the final annotation', async function() {\n    const {parsedTrace, metadata} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const entryLabelAnnotation: Trace.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: parsedTrace.Renderer.allTraceEntries[0],  // random event, doesn't matter\n      label: 'hello world',\n    };\n\n    const sidebar = await renderSidebar(parsedTrace, metadata, null);\n    sidebar.setAnnotations([entryLabelAnnotation], new Map());\n    await RenderCoordinator.done();\n    const tabbedPane = sidebar.element.querySelector('.tabbed-pane')?.shadowRoot;\n    assert.isOk(tabbedPane);\n    const annotationsTab = tabbedPane.querySelector('#tab-annotations');\n    assert.isOk(annotationsTab);\n    const countBadge = annotationsTab.querySelector<HTMLElement>('.badge');\n    assert.strictEqual(countBadge?.innerText, '1');\n\n    sidebar.setAnnotations([], new Map());  // delete the annotations\n    const updatedCountBadge = annotationsTab.querySelector<HTMLElement>('.badge');\n    assert.isNull(updatedCountBadge);  // No badge is shown when the count is 0.\n  });\n});\n"]}