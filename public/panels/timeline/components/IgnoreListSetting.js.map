{"version":3,"file":"IgnoreListSetting.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/IgnoreListSetting.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/menus/menus.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport ignoreListSettingStyles from './ignoreListSetting.css.js';\n\nconst {html} = LitHtml;\n\nconst UIStrings = {\n  /**\n   * @description Text title for the button to open the ignore list setting.\n   */\n  showIgnoreListSettingDialog: 'Show ignore list setting dialog',\n  /**\n   * @description Text title for ignore list setting.\n   */\n  ignoreList: 'Ignore list',\n  /**\n   * @description Text description for ignore list setting.\n   */\n  ignoreListDescription: 'Add these exclusion rules would simplify the flame chart.',\n  /**\n   *@description Pattern title in Framework Ignore List Settings Tab of the Settings\n   *@example {ad.*?} regex\n   */\n  ignoreScriptsWhoseNamesMatchS: 'Ignore scripts whose names match \\'\\'{regex}\\'\\'',\n  /**\n   *@description Label for the button to remove an regex\n   *@example {ad.*?} regex\n   */\n  removeRegex: 'Remove the regex: \\'\\'{regex}\\'\\'',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/IgnoreListSetting.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class IgnoreListSetting extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #renderBound = this.#render.bind(this);\n  readonly #ignoreListEnabled: Common.Settings.Setting<boolean> =\n      Common.Settings.Settings.instance().moduleSetting('enable-ignore-listing');\n  readonly #regexPatterns = this.#getSkipStackFramesPatternSetting().getAsArray();\n\n  constructor() {\n    super();\n\n    Common.Settings.Settings.instance()\n        .moduleSetting('skip-stack-frames-pattern')\n        .addChangeListener(this.#scheduleRender.bind(this));\n    Common.Settings.Settings.instance()\n        .moduleSetting('enable-ignore-listing')\n        .addChangeListener(this.#scheduleRender.bind(this));\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [ignoreListSettingStyles];\n    this.#scheduleRender();\n  }\n\n  #scheduleRender(): void {\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n\n  #getSkipStackFramesPatternSetting(): Common.Settings.RegExpSetting {\n    return Common.Settings.Settings.instance().moduleSetting('skip-stack-frames-pattern') as\n        Common.Settings.RegExpSetting;\n  }\n\n  #onRegexEnableToggled(regex: Common.Settings.RegExpSettingItem, checkbox: UI.UIUtils.CheckboxLabel): void {\n    regex.disabled = !checkbox.checkboxElement.checked;\n\n    // Technically we don't need to call the set function, because the regex is a reference, so it changed the setting\n    // value directly.\n    // But we need to call the set function to trigger the setting change event. which is needed by view update of flame\n    // chart.\n    this.#getSkipStackFramesPatternSetting().setAsArray(this.#regexPatterns);\n    // There is no need to update this component, since the only UI change is this checkbox, which is already done by\n    // the user.\n  }\n\n  #removeRegexByIndex(index: number): void {\n    this.#regexPatterns.splice(index, 1);\n    this.#getSkipStackFramesPatternSetting().setAsArray(this.#regexPatterns);\n  }\n\n  #renderItem(regex: Common.Settings.RegExpSettingItem, index: number): LitHtml.TemplateResult {\n    const checkboxWithLabel = UI.UIUtils.CheckboxLabel.create(\n        regex.pattern, !regex.disabled, /* subtitle*/ undefined, /* jslogContext*/ 'timeline.ignore-list-pattern');\n    const helpText = i18nString(UIStrings.ignoreScriptsWhoseNamesMatchS, {regex: regex.pattern});\n    UI.Tooltip.Tooltip.install(checkboxWithLabel, helpText);\n    checkboxWithLabel.checkboxElement.ariaLabel = helpText;\n    checkboxWithLabel.checkboxElement.addEventListener(\n        'change', this.#onRegexEnableToggled.bind(this, regex, checkboxWithLabel), false);\n    // clang-format off\n    return html`\n      <div class='regex-row'>\n        ${checkboxWithLabel}\n        <devtools-button\n            @click=${this.#removeRegexByIndex.bind(this, index)}\n            .data=${{\n            variant: Buttons.Button.Variant.ICON,\n            iconName: 'bin',\n            title: i18nString(UIStrings.removeRegex, {regex: regex.pattern}),\n            jslogContext: 'timeline.ignore-list-pattern.remove',\n          } as Buttons.Button.ButtonData}></devtools-button>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('Ignore List setting dialog render was not scheduled');\n    }\n    // clang-format off\n    const output = html`\n      <devtools-button-dialog .data=${{\n          openOnRender: false,\n          jslogContext: 'timeline.ignore-list',\n          variant: Buttons.Button.Variant.TOOLBAR,\n          iconName: 'compress',\n          disabled: !this.#ignoreListEnabled.get(),\n          iconTitle: i18nString(UIStrings.showIgnoreListSettingDialog),\n          horizontalAlignment: Dialogs.Dialog.DialogHorizontalAlignment.AUTO,\n          closeButton: true,\n          dialogTitle: i18nString(UIStrings.ignoreList),\n        } as Dialogs.ButtonDialog.ButtonDialogData}>\n        <div class='ignore-list-setting-content'>\n          <div class='ignore-list-setting-description'>${i18nString(UIStrings.ignoreListDescription)}</div>\n          ${this.#regexPatterns.map(this.#renderItem.bind(this))}\n        </div>\n      </devtools-button-dialog>\n    `;\n    // clang-format on\n    LitHtml.render(output, this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-perf-ignore-list-setting', IgnoreListSetting);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-perf-ignore-list-setting': IgnoreListSetting;\n  }\n}\n"]}