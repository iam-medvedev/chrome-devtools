{"version":3,"file":"TimelineSummary.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/TimelineSummary.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AAEnD,OAAO,KAAK,EAAE,MAAM,8BAA8B,CAAC;AACnD,OAAO,KAAK,GAAG,MAAM,wBAAwB,CAAC;AAE9C,OAAO,qBAAqB,MAAM,0BAA0B,CAAC;AAE7D,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,GAAG,GAAG,CAAC;AAE3B,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,KAAK,EAAE,OAAO;IACd;;;;OAIG;IACH,OAAO,EAAE,uBAAuB;CACxB,CAAC;AACX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,+CAA+C,EAAE,SAAS,CAAC,CAAC;AACrG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAgBtE,MAAM,OAAO,eAAgB,SAAQ,WAAW;IACrC,OAAO,GACZ,EAAE,CAAC,OAAO,CAAC,8BAA8B,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,qBAAqB,EAAE,cAAc,EAAE,SAAS,EAAC,CAAC,CAAC;IAEjH,WAAW,GAAG,CAAC,CAAC;IAChB,SAAS,GAAG,CAAC,CAAC;IACd,MAAM,GAAG,CAAC,CAAC;IACX,WAAW,GAAmB,EAAE,CAAC;IAEjC,IAAI,IAAI,CAAC,IAAsB;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,mBAAmB;QACnB,MAAM,MAAM,GAAG,IAAI,CAAA;;2CAEoB,UAAU,CAAC,SAAS,CAAC,OAAO,EAAE,EAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,CAAC;;oBAExK,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAA;;kFAEiD,QAAQ,CAAC,KAAK;uDACzC,QAAQ,CAAC,KAAK;;gCAErC,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC;;8EAEV,CAAC,QAAQ,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;;;iCAG5F,CAAC;QAChB,CAAC,CAAC;;;mDAG+B,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;;4BAElD,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC;;;;;;;;;;eAUlE,CAAC;QACZ,kBAAkB;QAClB,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IAC7C,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,uCAAuC,EAAE,eAAe,CAAC,CAAC","sourcesContent":["// Copyright (c) 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport timelineSummaryStyles from './timelineSummary.css.js';\n\nconst {render, html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description Text for total\n   */\n  total: 'Total',\n  /**\n   *@description Range in Timeline Details View's Summary\n   *@example {1ms} PH1\n   *@example {10ms} PH2\n   */\n  rangeSS: 'Range:  {PH1} â€“ {PH2}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/TimelineSummary.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface CategoryData {\n  value: number;\n  color: string;\n  title: string;\n}\n\nexport interface SummaryTableData {\n  total: number;\n  rangeStart: number;\n  rangeEnd: number;\n  categories: CategoryData[];\n  selectedEvents: Trace.Types.Events.Event[];\n}\n\nexport class CategorySummary extends HTMLElement {\n  readonly #shadow =\n      UI.UIUtils.createShadowRootWithCoreStyles(this, {cssFile: timelineSummaryStyles, delegatesFocus: undefined});\n\n  #rangeStart = 0;\n  #rangeEnd = 0;\n  #total = 0;\n  #categories: CategoryData[] = [];\n\n  set data(data: SummaryTableData) {\n    this.#total = data.total;\n    this.#categories = data.categories;\n    this.#rangeStart = data.rangeStart;\n    this.#rangeEnd = data.rangeEnd;\n    this.#render();\n  }\n\n  #render(): void {\n    // clang-format off\n    const output = html`\n          <div class=\"timeline-summary\">\n              <div class=\"summary-range\">${i18nString(UIStrings.rangeSS, {PH1: i18n.TimeUtilities.millisToString(this.#rangeStart), PH2: i18n.TimeUtilities.millisToString(this.#rangeEnd)})}</div>\n              <div class=\"category-summary\">\n                  ${this.#categories.map(category => {\n                      return html`\n                          <div class=\"category-row\">\n                          <div class=\"category-swatch\" style=\"background-color: ${category.color};\"></div>\n                          <div class=\"category-name\">${category.title}</div>\n                          <div class=\"category-value\">\n                              ${i18n.TimeUtilities.preciseMillisToString(category.value)}\n                              <div class=\"background-bar-container\">\n                                  <div class=\"background-bar\" style='width: ${(category.value * 100 / this.#total).toFixed(1)}%;'></div>\n                              </div>\n                          </div>\n                          </div>`;\n                  })}\n                  <div class=\"category-row\">\n                      <div class=\"category-swatch\"></div>\n                      <div class=\"category-name\">${i18nString(UIStrings.total)}</div>\n                      <div class=\"category-value\">\n                          ${i18n.TimeUtilities.preciseMillisToString(this.#total)}\n                          <div class=\"background-bar-container\">\n                              <div class=\"background-bar\"></div>\n                          </div>\n                      </div>\n                  </div>\n                </div>\n          </div>\n          </div>\n\n        </div>`;\n    // clang-format on\n    render(output, this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-performance-timeline-summary', CategorySummary);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-timeline-summary': CategorySummary;\n  }\n}\n"]}