{"version":3,"file":"Sidebar.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/Sidebar.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Root from '../../../core/root/root.js';\nimport type * as Handlers from '../../../models/trace/handlers/handlers.js';\nimport * as TraceEngine from '../../../models/trace/trace.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as Menus from '../../../ui/components/menus/menus.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport sidebarStyles from './sidebar.css.js';\nimport * as SidebarInsight from './SidebarInsight.js';\n\nconst COLLAPSED_WIDTH = 40;\nconst DEFAULT_EXPANDED_WIDTH = 240;\n\nconst enum SidebarTabsName {\n  INSIGHTS = 'Insights',\n  ANNOTATIONS = 'Annotations',\n}\n\nenum InsightsCategories {\n  ALL = 'All',\n  INP = 'INP',\n  LCP = 'LCP',\n  CLS = 'CLS',\n  OTHER = 'Other',\n}\n\nexport class SidebarWidget extends UI.SplitWidget.SplitWidget {\n  #sidebarExpanded: boolean = false;\n  #sidebarUI = new SidebarUI();\n\n  constructor() {\n    super(true /* isVertical */, false /* secondIsSidebar */, undefined /* settingName */, COLLAPSED_WIDTH);\n\n    if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.TIMELINE_SIDEBAR)) {\n      this.sidebarElement().append(this.#sidebarUI);\n    } else {\n      this.hideSidebar();\n    }\n\n    this.setResizable(this.#sidebarExpanded);\n    this.#sidebarUI.expanded = this.#sidebarExpanded;\n\n    this.#sidebarUI.addEventListener('togglebuttonclick', () => {\n      this.#sidebarExpanded = !this.#sidebarExpanded;\n\n      if (this.#sidebarExpanded) {\n        this.setResizable(true);\n        this.forceSetSidebarWidth(DEFAULT_EXPANDED_WIDTH);\n\n      } else {\n        this.setResizable(false);\n        this.forceSetSidebarWidth(COLLAPSED_WIDTH);\n      }\n\n      this.#sidebarUI.expanded = this.#sidebarExpanded;\n    });\n  }\n\n  setTraceParsedData(traceParsedData: TraceEngine.Handlers.Types.TraceParseData|null): void {\n    this.#sidebarUI.traceParsedData = traceParsedData;\n  }\n\n  set data(insights: TraceEngine.Insights.Types.TraceInsightData<typeof Handlers.ModelHandlers>) {\n    this.#sidebarUI.insights = insights;\n  }\n}\n\nexport class SidebarUI extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-performance-sidebar`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #activeTab: SidebarTabsName = SidebarTabsName.INSIGHTS;\n  selectedCategory: InsightsCategories = InsightsCategories.ALL;\n  #expanded: boolean = false;\n\n  #traceParsedData?: TraceEngine.Handlers.Types.TraceParseData|null;\n  #inpMetric: {\n    longestINPDur: TraceEngine.Types.Timing.MicroSeconds,\n    inpScoreClassification: TraceEngine.Handlers.ModelHandlers.PageLoadMetrics.ScoreClassification,\n  }|null = null;\n  #lcpMetric: TraceEngine.Handlers.ModelHandlers.PageLoadMetrics.MetricScore|null = null;\n  #clsMetric: {\n    clsScore: number,\n    clsScoreClassification: TraceEngine.Handlers.ModelHandlers.PageLoadMetrics.ScoreClassification,\n  }|null = null;\n  #phaseData: Array<{phase: string, timing: number|TraceEngine.Types.Timing.MilliSeconds, percent: string}> = [];\n  #insights: TraceEngine.Insights.Types.TraceInsightData<typeof Handlers.ModelHandlers>|null = null;\n\n  #renderBound = this.#render.bind(this);\n\n  getLCPInsightData(): Array<{phase: string, timing: number|TraceEngine.Types.Timing.MilliSeconds, percent: string}> {\n    if (!this.#insights) {\n      return [];\n    }\n    // For now use the first navigation of the trace.\n    const firstNav = this.#insights.values().next().value;\n    if (!firstNav) {\n      return [];\n    }\n    const lcpInsight = firstNav.LargestContentfulPaint;\n    if (lcpInsight instanceof Error) {\n      return [];\n    }\n\n    const timing = lcpInsight.lcpMs;\n    const phases = lcpInsight.phases;\n\n    if (!timing || !phases) {\n      return [];\n    }\n\n    const {ttfb, loadDelay, loadTime, renderDelay} = phases;\n\n    if (loadDelay && loadTime) {\n      const phaseData = [\n        {phase: 'Time to first byte', timing: ttfb, percent: `${(100 * ttfb / timing).toFixed(0)}%`},\n        {phase: 'Resource load delay', timing: loadDelay, percent: `${(100 * loadDelay / timing).toFixed(0)}%`},\n        {phase: 'Resource load duration', timing: loadTime, percent: `${(100 * loadTime / timing).toFixed(0)}%`},\n        {phase: 'Resource render delay', timing: renderDelay, percent: `${(100 * ttfb / timing).toFixed(0)}%`},\n      ];\n      return phaseData;\n    }\n\n    // If the lcp is text, we only have ttfb and render delay.\n    const phaseData = [\n      {phase: 'Time to first byte', timing: ttfb, percent: `${(100 * ttfb / timing).toFixed(0)}%`},\n      {phase: 'Resource render delay', timing: renderDelay, percent: `${(100 * ttfb / timing).toFixed(0)}%`},\n    ];\n    return phaseData;\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [sidebarStyles];\n    // Force an immediate render of the default state (not expanded).\n    this.#render();\n  }\n\n  set expanded(expanded: boolean) {\n    if (expanded === this.#expanded) {\n      return;\n    }\n    this.#expanded = expanded;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n\n  set insights(insights: TraceEngine.Insights.Types.TraceInsightData<typeof Handlers.ModelHandlers>) {\n    if (insights === this.#insights) {\n      return;\n    }\n    this.#insights = insights;\n    this.#phaseData = this.getLCPInsightData();\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n\n  set traceParsedData(traceParsedData: TraceEngine.Handlers.Types.TraceParseData|null) {\n    if (this.#traceParsedData === traceParsedData) {\n      // If this is the same trace, do not re-render.\n      return;\n    }\n    this.#traceParsedData = traceParsedData;\n    // Clear all data before re-render.\n    this.#inpMetric = null;\n    this.#lcpMetric = null;\n    this.#clsMetric = null;\n\n    if (!traceParsedData) {\n      void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n      return;\n    }\n\n    // Get LCP metric for first navigation.\n    const eventsByNavigation =\n        traceParsedData.PageLoadMetrics.metricScoresByFrameId.get(traceParsedData.Meta.mainFrameId);\n    if (eventsByNavigation) {\n      const metricsByName = eventsByNavigation.values().next().value;\n      if (metricsByName) {\n        this.#lcpMetric = metricsByName.get(TraceEngine.Handlers.ModelHandlers.PageLoadMetrics.MetricName.LCP);\n      }\n    }\n\n    const clsScore = traceParsedData.LayoutShifts.sessionMaxScore;\n    this.#clsMetric = {\n      clsScore,\n      clsScoreClassification:\n          TraceEngine.Handlers.ModelHandlers.LayoutShifts.scoreClassificationForLayoutShift(clsScore),\n    };\n\n    if (traceParsedData.UserInteractions.longestInteractionEvent) {\n      this.#inpMetric = {\n        longestINPDur: traceParsedData.UserInteractions.longestInteractionEvent.dur,\n        inpScoreClassification:\n            TraceEngine.Handlers.ModelHandlers.UserInteractions.scoreClassificationForInteractionToNextPaint(\n                traceParsedData.UserInteractions.longestInteractionEvent.dur),\n      };\n    }\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n\n  #toggleButtonClick(): void {\n    this.dispatchEvent(new Event('togglebuttonclick'));\n  }\n\n  #onTabHeaderClicked(activeTab: SidebarTabsName): void {\n    if (activeTab === this.#activeTab) {\n      return;\n    }\n    this.#activeTab = activeTab;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n\n  #renderHeader(): LitHtml.LitTemplate {\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"tabs-header\">\n        <input\n          type=\"button\"\n          value=${SidebarTabsName.INSIGHTS}\n          ?active=${this.#activeTab === SidebarTabsName.INSIGHTS}\n          @click=${()=>this.#onTabHeaderClicked(SidebarTabsName.INSIGHTS)}>\n        <input\n          type=\"button\"\n          value=${SidebarTabsName.ANNOTATIONS}\n          ?active=${this.#activeTab === SidebarTabsName.ANNOTATIONS}\n          @click=${()=>this.#onTabHeaderClicked(SidebarTabsName.ANNOTATIONS)}>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #onTargetSelected(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void {\n    this.selectedCategory = event.itemValue as InsightsCategories;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n\n  #renderMetricValue(\n      label: string, value: string,\n      classification: TraceEngine.Handlers.ModelHandlers.PageLoadMetrics.ScoreClassification): LitHtml.TemplateResult {\n    return LitHtml.html`\n      <div class=\"metric\">\n        <div class=\"metric-value metric-value-${classification}\">${value}</div>\n        <div class=\"metric-label\">${label}</div>\n      </div>\n    `;\n  }\n\n  #renderINPMetric(): LitHtml.TemplateResult|null {\n    if (!this.#inpMetric) {\n      return null;\n    }\n    const timeString = i18n.TimeUtilities.formatMicroSecondsTime(this.#inpMetric.longestINPDur);\n    return this.#renderMetricValue('INP', timeString, this.#inpMetric.inpScoreClassification);\n  }\n\n  #renderLCPMetric(): LitHtml.TemplateResult|null {\n    if (!this.#lcpMetric) {\n      return null;\n    }\n    const timeString = i18n.TimeUtilities.formatMicroSecondsAsSeconds(this.#lcpMetric.timing);\n    return this.#renderMetricValue(this.#lcpMetric.metricName, timeString, this.#lcpMetric.classification);\n  }\n\n  #renderCLSMetric(): LitHtml.TemplateResult|null {\n    if (!this.#clsMetric) {\n      return null;\n    }\n    return this.#renderMetricValue(\n        TraceEngine.Handlers.ModelHandlers.PageLoadMetrics.MetricName.CLS, this.#clsMetric.clsScore.toPrecision(3),\n        this.#clsMetric.clsScoreClassification);\n  }\n\n  #renderInsightsForCategory(insightsCategory: InsightsCategories): LitHtml.TemplateResult {\n    switch (insightsCategory) {\n      case InsightsCategories.ALL:\n        return LitHtml.html`\n          <div class=\"metrics-row\">\n            ${this.#renderINPMetric()}\n            ${this.#renderLCPMetric()}\n            ${this.#renderCLSMetric()}\n          </div>\n          <div class=\"insights\">${this.#renderLCPPhases()}</div>\n        `;\n      case InsightsCategories.LCP:\n        return LitHtml.html`\n          ${this.#renderLCPMetric()}\n          <div class=\"insights\">${this.#renderLCPPhases()}</div>\n        `;\n      case InsightsCategories.CLS:\n        return LitHtml.html`${this.#renderCLSMetric()}`;\n      case InsightsCategories.INP:\n        return LitHtml.html`${this.#renderINPMetric()}`;\n      case InsightsCategories.OTHER:\n        return LitHtml.html`<div>${insightsCategory}</div>`;\n    }\n  }\n\n  #renderLCPPhases(): LitHtml.LitTemplate {\n    const lcpTitle = 'LCP by Phase';\n    const showLCPPhases = this.#phaseData ? this.#phaseData.length > 0 : false;\n\n    // clang-format off\n    return LitHtml.html`${\n        showLCPPhases ? LitHtml.html`\n        <${SidebarInsight.SidebarInsight.litTagName} .data=${{\n            title: lcpTitle,\n          } as SidebarInsight.InsightDetails}>\n          <div slot=\"insight-description\" class=\"insight-description\">\n            Each\n            <x-link class=\"link\" href=\"https://web.dev/articles/optimize-lcp#lcp-breakdown\">phase has specific recommendations to improve.</x-link>\n            In an ideal load, the two delay phases should be quite short.\n          </div>\n          <div slot=\"insight-content\" class=\"table-container\">\n            <dl>\n              <dt class=\"dl-title\">Phase</dt>\n              <dd class=\"dl-title\">% of LCP</dd>\n              ${this.#phaseData?.map(phase => LitHtml.html`\n                <dt>${phase.phase}</dt>\n                <dd class=\"dl-value\">${phase.percent}</dd>\n              `)}\n            </dl>\n          </div>\n        </${SidebarInsight.SidebarInsight}>` : LitHtml.nothing}`;\n    // clang-format on\n  }\n\n  #renderInsightsTabContent(): LitHtml.TemplateResult {\n    // clang-format off\n    return LitHtml.html`\n      <${Menus.SelectMenu.SelectMenu.litTagName}\n            class=\"target-select-menu\"\n            @selectmenuselected=${this.#onTargetSelected}\n            .showDivider=${true}\n            .showArrow=${true}\n            .sideButton=${false}\n            .showSelectedItem=${true}\n            .showConnector=${false}\n            .position=${Dialogs.Dialog.DialogVerticalPosition.BOTTOM}\n            .buttonTitle=${this.selectedCategory}\n            jslog=${VisualLogging.dropDown('performance.sidebar-insights-category-select').track({click: true})}\n          >\n          ${Object.values(InsightsCategories).map(insightsCategory => {\n            return LitHtml.html`\n              <${Menus.Menu.MenuItem.litTagName} .value=${insightsCategory}>\n                ${insightsCategory}\n              </${Menus.Menu.MenuItem.litTagName}>\n            `;\n          })}\n      </${Menus.SelectMenu.SelectMenu.litTagName}>\n\n      ${this.#renderInsightsForCategory(this.selectedCategory)}\n    `;\n    // clang-format on\n  }\n\n  #renderAnnotationTabContent(): LitHtml.TemplateResult {\n    // clang-format off\n    return LitHtml.html`\n      <h2>Content for Annotation Tab</h2>\n      <p>This is the content of the Annotation tab.</p>\n    `;\n    // clang-format on\n  }\n\n  #renderContent(): LitHtml.TemplateResult|null {\n    switch (this.#activeTab) {\n      case SidebarTabsName.INSIGHTS:\n        return this.#renderInsightsTabContent();\n      case SidebarTabsName.ANNOTATIONS:\n        return this.#renderAnnotationTabContent();\n      default:\n        return null;\n    }\n  }\n\n  #updateActiveIndicatorPosition(): void {\n    const insightsTabHeaderElement = this.#shadow.querySelector('.tabs-header input:nth-child(1)');\n    const annotationTabHeaderElement = this.#shadow.querySelector('.tabs-header input:nth-child(2)');\n    const tabSliderElement = this.#shadow.querySelector<HTMLElement>('.tab-slider');\n    if (insightsTabHeaderElement && annotationTabHeaderElement && tabSliderElement) {\n      const insightsTabHeaderWidth = insightsTabHeaderElement.getBoundingClientRect().width;\n      const annotationTabHeaderWidth = annotationTabHeaderElement.getBoundingClientRect().width;\n\n      switch (this.#activeTab) {\n        case SidebarTabsName.INSIGHTS:\n          tabSliderElement.style.left = '0';\n          tabSliderElement.style.width = `${insightsTabHeaderWidth}px`;\n          return;\n        case SidebarTabsName.ANNOTATIONS:\n          tabSliderElement.style.left = `${insightsTabHeaderWidth}px`;\n          tabSliderElement.style.width = `${annotationTabHeaderWidth}px`;\n          return;\n      }\n    }\n  }\n\n  #render(): void {\n    const toggleIcon = this.#expanded ? 'left-panel-close' : 'left-panel-open';\n    // clang-format off\n    const output = LitHtml.html`<div class=${LitHtml.Directives.classMap({\n      sidebar: true,\n      'is-expanded': this.#expanded,\n      'is-closed': !this.#expanded,\n    })}>\n      <div class=\"tab-bar\">\n        ${this.#expanded? this.#renderHeader() : LitHtml.nothing}\n        <${IconButton.Icon.Icon.litTagName}\n          name=${toggleIcon}\n          @click=${this.#toggleButtonClick}\n          class=\"sidebar-toggle-button\"\n          jslog=${VisualLogging.action('performance.sidebar-toggle').track({click: true})}\n        ></${IconButton.Icon.Icon.litTagName}>\n      </div>\n      <div class=\"tab-slider\" ?hidden=${!this.#expanded}></div>\n      <div class=\"tab-headers-bottom-line\" ?hidden=${!this.#expanded}></div>\n      ${this.#expanded ? LitHtml.html`<div class=\"sidebar-body\">${this.#renderContent()}</div>` : LitHtml.nothing}\n    </div>`;\n    // clang-format on\n    LitHtml.render(output, this.#shadow, {host: this});\n    this.#updateActiveIndicatorPosition();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-sidebar': SidebarWidget;\n  }\n}\n\ncustomElements.define('devtools-performance-sidebar', SidebarUI);\n"]}