{"version":3,"file":"Sidebar.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/Sidebar.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AACnD,OAAO,KAAK,UAAU,MAAM,mDAAmD,CAAC;AAChF,OAAO,KAAK,EAAE,MAAM,8BAA8B,CAAC;AACnD,OAAO,KAAK,OAAO,MAAM,kCAAkC,CAAC;AAE5D,OAAO,aAAa,MAAM,kBAAkB,CAAC;AAE7C,MAAM,eAAe,GAAG,EAAE,CAAC;AAC3B,MAAM,sBAAsB,GAAG,GAAG,CAAC;AAEnC,MAAM,OAAO,aAAc,SAAQ,EAAE,CAAC,WAAW,CAAC,WAAW;IAC3D,gBAAgB,GAAY,KAAK,CAAC;IAClC,UAAU,GAAG,IAAI,SAAS,EAAE,CAAC;IAE7B;QACE,KAAK,CAAC,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,qBAAqB,EAAE,SAAS,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;QAExG,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,2EAA8C,EAAE,CAAC;YACrF,IAAI,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChD,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE9C,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,GAAG,EAAE;YACzD,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;YAE/C,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACxB,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,CAAC;YAEpD,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC;YAC7C,CAAC;YAED,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,MAAM,OAAO,SAAU,SAAQ,WAAW;IACxC,MAAM,CAAU,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,8BAA8B,CAAC;IAClE,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAErD,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,aAAa,CAAC,CAAC;IACpD,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,MAAM,CAAC,QAAiB;QACtB,MAAM,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB,CAAC;QACrE,mBAAmB;QACnB,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAA,cAAc,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC;YACnE,OAAO,EAAE,IAAI;YACb,aAAa,EAAE,QAAQ;YACvB,WAAW,EAAE,CAAC,QAAQ;SACvB,CAAC;;WAEK,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,SAAS,UAAU,WAAW,IAAI,CAAC,kBAAkB;YACnF,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU;;WAEhC,CAAC;QACR,kBAAkB;QAClB,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IACrD,CAAC;;AASH,cAAc,CAAC,MAAM,CAAC,8BAA8B,EAAE,SAAS,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../../../core/root/root.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport sidebarStyles from './sidebar.css.js';\n\nconst COLLAPSED_WIDTH = 40;\nconst DEFAULT_EXPANDED_WIDTH = 240;\n\nexport class SidebarWidget extends UI.SplitWidget.SplitWidget {\n  #sidebarExpanded: boolean = false;\n  #sidebarUI = new SidebarUI();\n\n  constructor() {\n    super(true /* isVertical */, false /* secondIsSidebar */, undefined /* settingName */, COLLAPSED_WIDTH);\n\n    if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.TIMELINE_SIDEBAR)) {\n      this.sidebarElement().append(this.#sidebarUI);\n    } else {\n      this.hideSidebar();\n    }\n\n    this.#sidebarUI.render(this.#sidebarExpanded);\n\n    this.#sidebarUI.addEventListener('togglebuttonclick', () => {\n      this.#sidebarExpanded = !this.#sidebarExpanded;\n\n      if (this.#sidebarExpanded) {\n        this.setResizable(true);\n        this.forceSetSidebarWidth(DEFAULT_EXPANDED_WIDTH);\n\n      } else {\n        this.setResizable(false);\n        this.forceSetSidebarWidth(COLLAPSED_WIDTH);\n      }\n\n      this.#sidebarUI.render(this.#sidebarExpanded);\n    });\n  }\n}\n\nexport class SidebarUI extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-performance-sidebar`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [sidebarStyles];\n  }\n\n  #toggleButtonClick(): void {\n    this.dispatchEvent(new Event('togglebuttonclick'));\n  }\n\n  render(expanded: boolean): void {\n    const toggleIcon = expanded ? 'left-panel-close' : 'left-panel-open';\n    // clang-format off\n    const output = LitHtml.html`<div class=${LitHtml.Directives.classMap({\n      sidebar: true,\n      'is-expanded': expanded,\n      'is-closed': !expanded,\n    })}>\n      <div class=\"tab-bar\">\n        <${IconButton.Icon.Icon.litTagName} name=${toggleIcon} @click=${this.#toggleButtonClick} class=\"sidebar-toggle-button\">\n        </${IconButton.Icon.Icon.litTagName}>\n      </div>\n    </div>`;\n    // clang-format on\n    LitHtml.render(output, this.#shadow, {host: this});\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-sidebar': SidebarWidget;\n  }\n}\n\ncustomElements.define('devtools-performance-sidebar', SidebarUI);\n"]}