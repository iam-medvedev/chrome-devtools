{"version":3,"file":"Sidebar.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/Sidebar.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as TraceEngine from '../../../models/trace/trace.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport type * as Overlays from '../overlays/overlays.js';\n\nimport {SidebarAnnotationsTab} from './SidebarAnnotationsTab.js';\nimport {SidebarInsightsTab} from './SidebarInsightsTab.js';\n\nexport interface ActiveInsight {\n  name: string;\n  navigationId: string;\n  createOverlayFn: (() => Overlays.Overlays.TimelineOverlay[]);\n}\n\nexport class RemoveAnnotation extends Event {\n  static readonly eventName = 'removeannotation';\n\n  constructor(public removedAnnotation: TraceEngine.Types.File.Annotation) {\n    super(RemoveAnnotation.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport const enum SidebarTabs {\n  INSIGHTS = 'insights',\n  ANNOTATIONS = 'annotations',\n}\nexport const DEFAULT_SIDEBAR_TAB = SidebarTabs.INSIGHTS;\n\nexport class SidebarWidget extends UI.Widget.VBox {\n  #tabbedPane = new UI.TabbedPane.TabbedPane();\n\n  #insightsView = new InsightsView();\n  #annotationsView = new AnnotationsView();\n\n  override wasShown(): void {\n    this.#tabbedPane.show(this.element);\n    if (!this.#tabbedPane.hasTab(SidebarTabs.INSIGHTS)) {\n      this.#tabbedPane.appendTab(SidebarTabs.INSIGHTS, 'Insights', this.#insightsView);\n    }\n    if (!this.#tabbedPane.hasTab(SidebarTabs.ANNOTATIONS)) {\n      this.#tabbedPane.appendTab('annotations', 'Annotations', this.#annotationsView);\n    }\n    // TODO: automatically select the right tab depending on what content is\n    // available to us.\n  }\n\n  setAnnotations(updatedAnnotations: TraceEngine.Types.File.Annotation[]): void {\n    this.#annotationsView.setAnnotations(updatedAnnotations);\n  }\n\n  setTraceParsedData(traceParsedData: TraceEngine.Handlers.Types.TraceParseData|null): void {\n    this.#insightsView.setTraceParsedData(traceParsedData);\n  }\n\n  setInsights(insights: TraceEngine.Insights.Types.TraceInsightData): void {\n    this.#insightsView.setInsights(insights);\n  }\n\n  setActiveInsight(activeInsight: ActiveInsight|null): void {\n    this.#insightsView.setActiveInsight(activeInsight);\n  }\n}\n\nclass InsightsView extends UI.Widget.VBox {\n  #component = new SidebarInsightsTab();\n\n  constructor() {\n    super();\n    this.element.classList.add('sidebar-insights');\n    this.element.appendChild(this.#component);\n  }\n\n  setTraceParsedData(data: TraceEngine.Handlers.Types.TraceParseData|null): void {\n    this.#component.traceParsedData = data;\n  }\n\n  setInsights(data: TraceEngine.Insights.Types.TraceInsightData|null): void {\n    this.#component.insights = data;\n  }\n\n  setActiveInsight(active: ActiveInsight|null): void {\n    this.#component.activeInsight = active;\n  }\n}\n\nclass AnnotationsView extends UI.Widget.VBox {\n  #component = new SidebarAnnotationsTab();\n\n  constructor() {\n    super();\n    this.element.classList.add('sidebar-annotations');\n    this.element.appendChild(this.#component);\n  }\n\n  setAnnotations(annotations: TraceEngine.Types.File.Annotation[]): void {\n    this.#component.annotations = annotations;\n  }\n}\n"]}