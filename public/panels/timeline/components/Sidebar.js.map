{"version":3,"file":"Sidebar.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/Sidebar.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as TraceEngine from '../../../models/trace/trace.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Menus from '../../../ui/components/menus/menus.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport type * as Overlays from '../overlays/overlays.js';\n\nimport * as Insights from './insights/insights.js';\nimport sidebarStyles from './sidebar.css.js';\nimport * as SidebarAnnotationsTab from './SidebarAnnotationsTab.js';\nimport {SidebarSingleNavigation, type SidebarSingleNavigationData} from './SidebarSingleNavigation.js';\n\nconst DEFAULT_EXPANDED_WIDTH = 240;\n\nexport const enum SidebarTabsName {\n  INSIGHTS = 'Insights',\n  ANNOTATIONS = 'Annotations',\n}\nexport const DEFAULT_SIDEBAR_TAB = SidebarTabsName.INSIGHTS;\n\nexport enum InsightsCategories {\n  ALL = 'All',\n  INP = 'INP',\n  LCP = 'LCP',\n  CLS = 'CLS',\n  OTHER = 'Other',\n}\n\nexport interface ActiveInsight {\n  name: string;\n  navigationId: string;\n  createOverlayFn: (() => Overlays.Overlays.TimelineOverlay[]);\n}\n\nexport class RemoveAnnotation extends Event {\n  static readonly eventName = 'removeannotation';\n\n  constructor(public removedAnnotation: TraceEngine.Types.File.Annotation) {\n    super(RemoveAnnotation.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class SidebarWidget extends UI.SplitWidget.SplitWidget {\n  #sidebarUI = new SidebarUI();\n\n  constructor() {\n    super(true /* isVertical */, false /* secondIsSidebar */, undefined /* settingName */, DEFAULT_EXPANDED_WIDTH);\n\n    this.sidebarElement().append(this.#sidebarUI);\n  }\n\n  updateContentsOnExpand(): void {\n    this.#sidebarUI.onWidgetShow();\n  }\n\n  setAnnotationsTabContent(updatedAnnotations: TraceEngine.Types.File.Annotation[]): void {\n    this.#sidebarUI.annotations = updatedAnnotations;\n  }\n\n  setTraceParsedData(traceParsedData: TraceEngine.Handlers.Types.TraceParseData|null): void {\n    this.#sidebarUI.traceParsedData = traceParsedData;\n  }\n\n  setInsights(insights: TraceEngine.Insights.Types.TraceInsightData): void {\n    this.#sidebarUI.insights = insights;\n  }\n\n  setActiveInsight(activeInsight: ActiveInsight|null): void {\n    this.#sidebarUI.activeInsight = activeInsight;\n  }\n}\n\nexport class SidebarUI extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-performance-sidebar`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #activeTab: SidebarTabsName = DEFAULT_SIDEBAR_TAB;\n  #selectedCategory: InsightsCategories = InsightsCategories.ALL;\n\n  #traceParsedData?: TraceEngine.Handlers.Types.TraceParseData|null;\n  #insights: TraceEngine.Insights.Types.TraceInsightData|null = null;\n  #annotations: TraceEngine.Types.File.Annotation[] = [];\n\n  #renderBound = this.#render.bind(this);\n\n  /**\n   * When a trace has multiple navigations, we show an accordion with each\n   * navigation in. You can only have one of these open at any time, and we\n   * track it via this ID.\n   */\n  #activeNavigationId: string|null = null;\n\n  #activeInsight: ActiveInsight|null = null;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [sidebarStyles];\n  }\n\n  onWidgetShow(): void {\n    // Called when the SidebarWidget is expanded in order to render. Because\n    // this happens distinctly from any data being passed in, we need to expose\n    // a method to allow the widget to let us know when to render. This also\n    // matters because this is when we can update the underline below the\n    // active tab, now that the sidebar is visible and has width.\n    this.#render();\n  }\n\n  set annotations(annotations: TraceEngine.Types.File.Annotation[]) {\n    this.#annotations = annotations;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n\n  set insights(insights: TraceEngine.Insights.Types.TraceInsightData) {\n    if (insights === this.#insights) {\n      return;\n    }\n    this.#insights = insights;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n\n  set activeInsight(activeInsight: ActiveInsight|null) {\n    this.#activeInsight = activeInsight;\n    // Reset toggled insights when we have new insights.\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n\n  set traceParsedData(traceParsedData: TraceEngine.Handlers.Types.TraceParseData|null) {\n    if (this.#traceParsedData === traceParsedData) {\n      // If this is the same trace, do not re-render.\n      return;\n    }\n    this.#traceParsedData = traceParsedData;\n\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n\n  #onTabHeaderClicked(activeTab: SidebarTabsName): void {\n    if (activeTab === this.#activeTab) {\n      return;\n    }\n    this.#activeTab = activeTab;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n\n  #renderHeader(): LitHtml.LitTemplate {\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"tabs-header\">\n        <input\n          type=\"button\"\n          value=${SidebarTabsName.INSIGHTS}\n          ?active=${this.#activeTab === SidebarTabsName.INSIGHTS}\n          @click=${()=>this.#onTabHeaderClicked(SidebarTabsName.INSIGHTS)}>\n        <input\n          type=\"button\"\n          value=${SidebarTabsName.ANNOTATIONS}\n          ?active=${this.#activeTab === SidebarTabsName.ANNOTATIONS}\n          @click=${()=>this.#onTabHeaderClicked(SidebarTabsName.ANNOTATIONS)}>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #onTargetSelected(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void {\n    this.#selectedCategory = event.itemValue as InsightsCategories;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n  }\n\n  #renderInsightsTabContent(): LitHtml.TemplateResult {\n    const navigations = this.#traceParsedData?.Meta.mainFrameNavigations ?? [];\n\n    const hasMultipleNavigations = navigations.length > 1;\n\n    // clang-format off\n    return LitHtml.html`\n      <${Menus.SelectMenu.SelectMenu.litTagName}\n            class=\"target-select-menu\"\n            @selectmenuselected=${this.#onTargetSelected}\n            .showDivider=${true}\n            .showArrow=${true}\n            .sideButton=${false}\n            .showSelectedItem=${true}\n            .showConnector=${false}\n            .position=${Dialogs.Dialog.DialogVerticalPosition.BOTTOM}\n            .buttonTitle=${this.#selectedCategory}\n            jslog=${VisualLogging.dropDown('timeline.sidebar-insights-category-select').track({click: true})}\n          >\n          ${Object.values(InsightsCategories).map(insightsCategory => {\n            return LitHtml.html`\n              <${Menus.Menu.MenuItem.litTagName} .value=${insightsCategory}>\n                ${insightsCategory}\n              </${Menus.Menu.MenuItem.litTagName}>\n            `;\n          })}\n      </${Menus.SelectMenu.SelectMenu.litTagName}>\n\n      ${navigations.map(navigation => {\n        const id = navigation.args.data?.navigationId;\n        const url = navigation.args.data?.documentLoaderURL;\n        if(!id || !url) {\n          return LitHtml.nothing;\n        }\n        const data = {\n          traceParsedData: this.#traceParsedData ?? null,\n          insights: this.#insights,\n          navigationId: id,\n          activeCategory: this.#selectedCategory,\n          activeInsight: this.#activeInsight,\n        };\n\n        const contents = LitHtml.html`\n          <${SidebarSingleNavigation.litTagName}\n            .data=${data as SidebarSingleNavigationData}>\n          </${SidebarSingleNavigation.litTagName}>\n        `;\n\n        if(hasMultipleNavigations) {\n          return LitHtml.html`<div class=\"multi-nav-container\">\n            <details ?open=${id === this.#activeNavigationId} class=\"navigation-wrapper\"><summary @click=${() => this.#navigationClicked(id)}>${url}</summary>${contents}</details>\n            </div>`;\n        }\n\n        return contents;\n      })}\n    `;\n    // clang-format on\n  }\n\n  #navigationClicked(id: string): (event: Event) => void {\n    // New navigation clicked. Update the active insight.\n    if (id !== this.#activeInsight?.navigationId) {\n      this.dispatchEvent(new Insights.SidebarInsight.InsightDeactivated());\n    }\n    this.#activeNavigationId = id;\n    return (event: Event) => {\n      event.preventDefault();\n      void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n    };\n  }\n\n  #renderContent(): LitHtml.TemplateResult|HTMLElement|null {\n    switch (this.#activeTab) {\n      case SidebarTabsName.INSIGHTS:\n        return this.#renderInsightsTabContent();\n      case SidebarTabsName.ANNOTATIONS:\n        return LitHtml.html`\n        <${SidebarAnnotationsTab.SidebarAnnotationsTab.litTagName} .annotations=${this.#annotations}></${\n            SidebarAnnotationsTab.SidebarAnnotationsTab.litTagName}>\n      `;\n      default:\n        return null;\n    }\n  }\n\n  #updateActiveIndicatorPosition(): void {\n    const insightsTabHeaderElement = this.#shadow.querySelector('.tabs-header input:nth-child(1)');\n    const annotationTabHeaderElement = this.#shadow.querySelector('.tabs-header input:nth-child(2)');\n    const tabSliderElement = this.#shadow.querySelector<HTMLElement>('.tab-slider');\n    if (insightsTabHeaderElement && annotationTabHeaderElement && tabSliderElement) {\n      const insightsTabHeaderWidth = insightsTabHeaderElement.getBoundingClientRect().width;\n      const annotationTabHeaderWidth = annotationTabHeaderElement.getBoundingClientRect().width;\n\n      switch (this.#activeTab) {\n        case SidebarTabsName.INSIGHTS:\n          tabSliderElement.style.left = '0';\n          tabSliderElement.style.width = `${insightsTabHeaderWidth}px`;\n          return;\n        case SidebarTabsName.ANNOTATIONS:\n          tabSliderElement.style.left = `${insightsTabHeaderWidth}px`;\n          tabSliderElement.style.width = `${annotationTabHeaderWidth}px`;\n          return;\n      }\n    }\n  }\n\n  #render(): void {\n    // clang-format off\n    const output = LitHtml.html`<div class=\"sidebar\">\n      <div class=\"tab-bar\">\n        ${this.#renderHeader()}\n      </div>\n      <div class=\"tab-slider\"></div>\n      <div class=\"tab-headers-bottom-line\"></div>\n      <div class=\"sidebar-body\">${this.#renderContent()}</div>\n    </div>`;\n    // clang-format on\n    LitHtml.render(output, this.#shadow, {host: this});\n    this.#updateActiveIndicatorPosition();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-performance-sidebar': SidebarWidget;\n  }\n}\n\ncustomElements.define('devtools-performance-sidebar', SidebarUI);\n"]}