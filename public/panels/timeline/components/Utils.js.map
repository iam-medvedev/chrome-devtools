{"version":3,"file":"Utils.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/Utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as ThemeSupport from '../../../ui/legacy/theme_support/theme_support.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nconst UIStrings = {\n  /**\n   *@description ms is the short form of milli-seconds and the placeholder is a decimal number.\n   * The shortest form or abbreviation of milliseconds should be used, as there is\n   * limited room in this UI.\n   *@example {2.14} PH1\n   */\n  fms: '{PH1}[ms]()',\n  /**\n   *@description s is short for seconds and the placeholder is a decimal number\n   * The shortest form or abbreviation of seconds should be used, as there is\n   * limited room in this UI.\n   *@example {2.14} PH1\n   */\n  fs: '{PH1}[s]()',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/Utils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport enum NetworkCategory {\n  DOC = 'Doc',\n  CSS = 'CSS',\n  JS = 'JS',\n  FONT = 'Font',\n  IMG = 'Img',\n  MEDIA = 'Media',\n  WASM = 'Wasm',\n  OTHER = 'Other',\n}\n\nfunction syntheticNetworkRequestCategory(request: Trace.Types.Events.SyntheticNetworkRequest): NetworkCategory {\n  switch (request.args.data.mimeType) {\n    case 'text/html':\n      return NetworkCategory.DOC;\n    case 'application/javascript':\n    case 'application/x-javascript':\n    case 'text/javascript':\n      return NetworkCategory.JS;\n    case 'text/css':\n      return NetworkCategory.CSS;\n    case 'image/gif':\n    case 'image/jpeg':\n    case 'image/png':\n    case 'image/svg+xml':\n    case 'image/webp':\n    case 'image/x-icon':\n      return NetworkCategory.IMG;\n    case 'audio/aac':\n    case 'audio/midi':\n    case 'audio/x-midi':\n    case 'audio/mpeg':\n    case 'audio/ogg':\n    case 'audio/wav':\n    case 'audio/webm':\n      return NetworkCategory.MEDIA;\n    case 'font/opentype':\n    case 'font/woff2':\n    case 'font/ttf':\n    case 'application/font-woff':\n      return NetworkCategory.FONT;\n    case 'application/wasm':\n      return NetworkCategory.WASM;\n    default:\n      return NetworkCategory.OTHER;\n  }\n}\n\nexport function colorForNetworkCategory(category: NetworkCategory): string {\n  let cssVarName = '--app-color-system';\n  switch (category) {\n    case NetworkCategory.DOC:\n      cssVarName = '--app-color-doc';\n      break;\n    case NetworkCategory.JS:\n      cssVarName = '--app-color-scripting';\n      break;\n    case NetworkCategory.CSS:\n      cssVarName = '--app-color-css';\n      break;\n    case NetworkCategory.IMG:\n      cssVarName = '--app-color-image';\n      break;\n    case NetworkCategory.MEDIA:\n      cssVarName = '--app-color-media';\n      break;\n    case NetworkCategory.FONT:\n      cssVarName = '--app-color-font';\n      break;\n    case NetworkCategory.WASM:\n      cssVarName = '--app-color-wasm';\n      break;\n    case NetworkCategory.OTHER:\n    default:\n      cssVarName = '--app-color-system';\n      break;\n  }\n  return ThemeSupport.ThemeSupport.instance().getComputedValue(cssVarName);\n}\n\nexport function colorForNetworkRequest(request: Trace.Types.Events.SyntheticNetworkRequest): string {\n  const category = syntheticNetworkRequestCategory(request);\n  return colorForNetworkCategory(category);\n}\n\nexport type MetricRating = 'good'|'needs-improvement'|'poor';\nexport type MetricThresholds = [number, number];\n\n// TODO: Consolidate our metric rating logic with the trace engine.\nexport const LCP_THRESHOLDS = [2500, 4000] as MetricThresholds;\nexport const CLS_THRESHOLDS = [0.1, 0.25] as MetricThresholds;\nexport const INP_THRESHOLDS = [200, 500] as MetricThresholds;\n\nexport function rateMetric(value: number, thresholds: MetricThresholds): MetricRating {\n  if (value <= thresholds[0]) {\n    return 'good';\n  }\n  if (value <= thresholds[1]) {\n    return 'needs-improvement';\n  }\n  return 'poor';\n}\n\n/**\n * Ensure to also include `metricValueStyles.css` when generating metric value elements.\n */\nexport function renderMetricValue(\n    jslogContext: string, value: number|undefined, thresholds: MetricThresholds, format: (value: number) => string,\n    options?: {dim?: boolean}): HTMLElement {\n  const metricValueEl = document.createElement('span');\n  metricValueEl.classList.add('metric-value');\n  if (value === undefined) {\n    metricValueEl.classList.add('waiting');\n    metricValueEl.textContent = '-';\n    return metricValueEl;\n  }\n\n  metricValueEl.textContent = format(value);\n  const rating = rateMetric(value, thresholds);\n  metricValueEl.classList.add(rating);\n  // Ensure we log impressions of each section. We purposefully add this here\n  // because if we don't have field data (dealt with in the undefined branch\n  // above), we do not want to log an impression on it.\n  metricValueEl.setAttribute('jslog', `${VisualLogging.section(jslogContext)}`);\n  if (options?.dim) {\n    metricValueEl.classList.add('dim');\n  }\n\n  return metricValueEl;\n}\n\nexport type NumberWithUnitString = {\n  element: HTMLElement,\n  text: string,\n};\n\n/**\n * These methods format numbers with units in a way that allows the unit portion to be styled specifically.\n * They return a text string (the usual string resulting from formatting a number), and an HTMLSpanElement.\n * The element contains the formatted number, with a nested span element for the unit portion: `.unit`.\n *\n * This formatting is locale-aware. This is accomplished by utilizing the fact that UIStrings passthru\n * markdown link syntax: `[text that will be translated](not translated)`. The result\n * is a translated string like this: `[t̂éx̂t́ t̂h́ât́ ŵíl̂ĺ b̂é t̂ŕâńŝĺât́êd́](not translated)`. This is used within\n * insight components to localize markdown content. But here, we utilize it to parse a localized string.\n *\n * If the parsing fails, we fallback to i18n.TimeUtilities, and there will be no `.unit` element.\n *\n * As of this writing, our only locale where the unit comes before the number is `sw`, ex: `Sek {PH1}`.\n *\n    new Intl.NumberFormat('sw', {\n      style: 'unit',\n      unit: 'millisecond',\n      unitDisplay: 'narrow'\n    }).format(10); // 'ms 10'\n *\n */\nexport namespace NumberWithUnit {\n  export function parse(text: string): {firstPart: string, unitPart: string, lastPart: string}|null {\n    const startBracket = text.indexOf('[');\n    const endBracket = startBracket !== -1 && text.indexOf(']', startBracket);\n    const startParen = endBracket && text.indexOf('(', endBracket);\n    const endParen = startParen && text.indexOf(')', startParen);\n    if (!endParen || endParen === -1) {\n      return null;\n    }\n\n    const firstPart = text.substring(0, startBracket);\n    const unitPart = text.substring(startBracket + 1, endBracket);\n    const lastPart = text.substring(endParen + 1);  // skips `]()`\n    return {firstPart, unitPart, lastPart};\n  }\n\n  export function formatMicroSecondsAsSeconds(time: Platform.Timing.MicroSeconds): NumberWithUnitString {\n    const element = document.createElement('span');\n    element.classList.add('number-with-unit');\n    const milliseconds = Platform.Timing.microSecondsToMilliSeconds(time);\n    const seconds = Platform.Timing.milliSecondsToSeconds(milliseconds);\n    const text = i18nString(UIStrings.fs, {PH1: (seconds).toFixed(2)});\n\n    const result = parse(text);\n    if (!result) {\n      // Some sort of problem with parsing, so fallback to not marking up the unit.\n      element.textContent = i18n.TimeUtilities.formatMicroSecondsAsSeconds(time);\n      return {text, element};\n    }\n\n    const {firstPart, unitPart, lastPart} = result;\n    if (firstPart) {\n      element.append(firstPart);\n    }\n    element.createChild('span', 'unit').textContent = unitPart;\n    if (lastPart) {\n      element.append(lastPart);\n    }\n\n    return {text: element.textContent ?? '', element};\n  }\n\n  export function formatMicroSecondsAsMillisFixed(time: Platform.Timing.MicroSeconds, fractionDigits = 0):\n      NumberWithUnitString {\n    const element = document.createElement('span');\n    element.classList.add('number-with-unit');\n    const milliseconds = Platform.Timing.microSecondsToMilliSeconds(time);\n    const text = i18nString(UIStrings.fms, {PH1: (milliseconds).toFixed(fractionDigits)});\n\n    const result = parse(text);\n    if (!result) {\n      // Some sort of problem with parsing, so fallback to not marking up the unit.\n      element.textContent = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(time);\n      return {text, element};\n    }\n\n    const {firstPart, unitPart, lastPart} = result;\n    if (firstPart) {\n      element.append(firstPart);\n    }\n    element.createChild('span', 'unit').textContent = unitPart;\n    if (lastPart) {\n      element.append(lastPart);\n    }\n\n    return {text: element.textContent ?? '', element};\n  }\n}\n"]}