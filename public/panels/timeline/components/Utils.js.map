{"version":3,"file":"Utils.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/Utils.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,YAAY,MAAM,mDAAmD,CAAC;AAElF,MAAM,CAAN,IAAY,eAMX;AAND,WAAY,eAAe;IACzB,gCAAa,CAAA;IACb,oCAAiB,CAAA;IACjB,kCAAe,CAAA;IACf,kCAAe,CAAA;IACf,kCAAe,CAAA;AACjB,CAAC,EANW,eAAe,KAAf,eAAe,QAM1B;AAED,SAAS,+BAA+B,CAAC,OAA8D;IAErG,QAAQ,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnC,KAAK,WAAW;YACd,OAAO,eAAe,CAAC,IAAI,CAAC;QAC9B,KAAK,wBAAwB,CAAC;QAC9B,KAAK,0BAA0B,CAAC;QAChC,KAAK,iBAAiB;YACpB,OAAO,eAAe,CAAC,MAAM,CAAC;QAChC,KAAK,UAAU;YACb,OAAO,eAAe,CAAC,KAAK,CAAC;QAC/B,KAAK,WAAW,CAAC;QACjB,KAAK,WAAW,CAAC;QACjB,KAAK,YAAY,CAAC;QAClB,KAAK,WAAW,CAAC;QACjB,KAAK,eAAe,CAAC;QACrB,KAAK,YAAY,CAAC;QAClB,KAAK,cAAc,CAAC;QACpB,KAAK,eAAe,CAAC;QACrB,KAAK,YAAY,CAAC;QAClB,KAAK,UAAU,CAAC;QAChB,KAAK,uBAAuB;YAC1B,OAAO,eAAe,CAAC,KAAK,CAAC;QAC/B;YACE,OAAO,eAAe,CAAC,KAAK,CAAC;IACjC,CAAC;AACH,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,QAAyB;IAC/D,IAAI,UAAU,GAAG,oBAAoB,CAAC;IACtC,QAAQ,QAAQ,EAAE,CAAC;QACjB,KAAK,eAAe,CAAC,IAAI;YACvB,UAAU,GAAG,qBAAqB,CAAC;YACnC,MAAM;QACR,KAAK,eAAe,CAAC,MAAM;YACzB,UAAU,GAAG,uBAAuB,CAAC;YACrC,MAAM;QACR,KAAK,eAAe,CAAC,KAAK;YACxB,UAAU,GAAG,uBAAuB,CAAC;YACrC,MAAM;QACR,KAAK,eAAe,CAAC,KAAK;YACxB,UAAU,GAAG,sBAAsB,CAAC;YACpC,MAAM;QACR;YACE,UAAU,GAAG,oBAAoB,CAAC;YAClC,MAAM;IACV,CAAC;IACD,OAAO,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;AAC3E,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,OAA8D;IACnG,MAAM,QAAQ,GAAG,+BAA+B,CAAC,OAAO,CAAC,CAAC;IAC1D,OAAO,uBAAuB,CAAC,QAAQ,CAAC,CAAC;AAC3C,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport type * as TraceEngine from '../../../models/trace/trace.js';\nimport * as ThemeSupport from '../../../ui/legacy/theme_support/theme_support.js';\n\nexport enum NetworkCategory {\n  HTML = 'HTML',\n  Script = 'Script',\n  Style = 'Style',\n  Media = 'Media',\n  Other = 'Other',\n}\n\nfunction syntheticNetworkRequestCategory(request: TraceEngine.Types.TraceEvents.SyntheticNetworkRequest):\n    NetworkCategory {\n  switch (request.args.data.mimeType) {\n    case 'text/html':\n      return NetworkCategory.HTML;\n    case 'application/javascript':\n    case 'application/x-javascript':\n    case 'text/javascript':\n      return NetworkCategory.Script;\n    case 'text/css':\n      return NetworkCategory.Style;\n    case 'audio/ogg':\n    case 'image/gif':\n    case 'image/jpeg':\n    case 'image/png':\n    case 'image/svg+xml':\n    case 'image/webp':\n    case 'image/x-icon':\n    case 'font/opentype':\n    case 'font/woff2':\n    case 'font/ttf':\n    case 'application/font-woff':\n      return NetworkCategory.Media;\n    default:\n      return NetworkCategory.Other;\n  }\n}\n\nexport function colorForNetworkCategory(category: NetworkCategory): string {\n  let cssVarName = '--app-color-system';\n  switch (category) {\n    case NetworkCategory.HTML:\n      cssVarName = '--app-color-loading';\n      break;\n    case NetworkCategory.Script:\n      cssVarName = '--app-color-scripting';\n      break;\n    case NetworkCategory.Style:\n      cssVarName = '--app-color-rendering';\n      break;\n    case NetworkCategory.Media:\n      cssVarName = '--app-color-painting';\n      break;\n    default:\n      cssVarName = '--app-color-system';\n      break;\n  }\n  return ThemeSupport.ThemeSupport.instance().getComputedValue(cssVarName);\n}\n\nexport function colorForNetworkRequest(request: TraceEngine.Types.TraceEvents.SyntheticNetworkRequest): string {\n  const category = syntheticNetworkRequestCategory(request);\n  return colorForNetworkCategory(category);\n}\n"]}