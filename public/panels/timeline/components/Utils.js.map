{"version":3,"file":"Utils.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/Utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../../core/platform/platform.js';\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as ThemeSupport from '../../../ui/legacy/theme_support/theme_support.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nexport enum NetworkCategory {\n  DOC = 'Doc',\n  CSS = 'CSS',\n  JS = 'JS',\n  FONT = 'Font',\n  IMG = 'Img',\n  MEDIA = 'Media',\n  WASM = 'Wasm',\n  OTHER = 'Other',\n}\n\nfunction syntheticNetworkRequestCategory(request: Trace.Types.Events.SyntheticNetworkRequest): NetworkCategory {\n  switch (request.args.data.mimeType) {\n    case 'text/html':\n      return NetworkCategory.DOC;\n    case 'application/javascript':\n    case 'application/x-javascript':\n    case 'text/javascript':\n      return NetworkCategory.JS;\n    case 'text/css':\n      return NetworkCategory.CSS;\n    case 'image/gif':\n    case 'image/jpeg':\n    case 'image/png':\n    case 'image/svg+xml':\n    case 'image/webp':\n    case 'image/x-icon':\n      return NetworkCategory.IMG;\n    case 'audio/aac':\n    case 'audio/midi':\n    case 'audio/x-midi':\n    case 'audio/mpeg':\n    case 'audio/ogg':\n    case 'audio/wav':\n    case 'audio/webm':\n      return NetworkCategory.MEDIA;\n    case 'font/opentype':\n    case 'font/woff2':\n    case 'font/ttf':\n    case 'application/font-woff':\n      return NetworkCategory.FONT;\n    case 'application/wasm':\n      return NetworkCategory.WASM;\n    default:\n      return NetworkCategory.OTHER;\n  }\n}\n\nexport function colorForNetworkCategory(category: NetworkCategory): string {\n  let cssVarName = '--app-color-system';\n  switch (category) {\n    case NetworkCategory.DOC:\n      cssVarName = '--app-color-doc';\n      break;\n    case NetworkCategory.JS:\n      cssVarName = '--app-color-scripting';\n      break;\n    case NetworkCategory.CSS:\n      cssVarName = '--app-color-css';\n      break;\n    case NetworkCategory.IMG:\n      cssVarName = '--app-color-image';\n      break;\n    case NetworkCategory.MEDIA:\n      cssVarName = '--app-color-media';\n      break;\n    case NetworkCategory.FONT:\n      cssVarName = '--app-color-font';\n      break;\n    case NetworkCategory.WASM:\n      cssVarName = '--app-color-wasm';\n      break;\n    case NetworkCategory.OTHER:\n    default:\n      cssVarName = '--app-color-system';\n      break;\n  }\n  return ThemeSupport.ThemeSupport.instance().getComputedValue(cssVarName);\n}\n\nexport function colorForNetworkRequest(request: Trace.Types.Events.SyntheticNetworkRequest): string {\n  const category = syntheticNetworkRequestCategory(request);\n  return colorForNetworkCategory(category);\n}\n\nexport type MetricRating = 'good'|'needs-improvement'|'poor';\nexport type MetricThresholds = [number, number];\n\n// TODO: Consolidate our metric rating logic with the trace engine.\nexport const LCP_THRESHOLDS = [2500, 4000] as MetricThresholds;\nexport const CLS_THRESHOLDS = [0.1, 0.25] as MetricThresholds;\nexport const INP_THRESHOLDS = [200, 500] as MetricThresholds;\n\nexport function rateMetric(value: number, thresholds: MetricThresholds): MetricRating {\n  if (value <= thresholds[0]) {\n    return 'good';\n  }\n  if (value <= thresholds[1]) {\n    return 'needs-improvement';\n  }\n  return 'poor';\n}\n\n/**\n * Ensure to also include `metricValueStyles.css` when generating metric value elements.\n */\nexport function renderMetricValue(\n    jslogContext: string, value: number|undefined, thresholds: MetricThresholds, format: (value: number) => string,\n    options?: {dim?: boolean}): HTMLElement {\n  const metricValueEl = document.createElement('span');\n  metricValueEl.classList.add('metric-value');\n  if (value === undefined) {\n    metricValueEl.classList.add('waiting');\n    metricValueEl.textContent = '-';\n    return metricValueEl;\n  }\n\n  metricValueEl.textContent = format(value);\n  const rating = rateMetric(value, thresholds);\n  metricValueEl.classList.add(rating);\n  // Ensure we log impressions of each section. We purposefully add this here\n  // because if we don't have field data (dealt with in the undefined branch\n  // above), we do not want to log an impression on it.\n  metricValueEl.setAttribute('jslog', `${VisualLogging.section(jslogContext)}`);\n  if (options?.dim) {\n    metricValueEl.classList.add('dim');\n  }\n\n  return metricValueEl;\n}\n\nfunction createTrimmedUrlSearch(url: URL): string {\n  const maxSearchValueLength = 8;\n  let search = '';\n\n  for (const [key, value] of url.searchParams) {\n    if (search) {\n      search += '&';\n    }\n    if (value) {\n      search += `${key}=${Platform.StringUtilities.trimEndWithMaxLength(value, maxSearchValueLength)}`;\n    } else {\n      search += key;\n    }\n  }\n  if (search) {\n    search = '?' + search;\n  }\n\n  return search;\n}\n\n/**\n * Shortens URLs as much as possible while keeping important context.\n *\n * - Elides the host if the previous url is the same host+protocol\n * - Always elide search param values\n * - Always includes protocol/domain if there is a mix of protocols\n * - First URL is elided fully to show just the pathname, unless there is a mix of protocols (see above)\n */\nexport function createUrlLabels(urls: URL[]): string[] {\n  const labels: string[] = [];\n  const isAllHttps = urls.every(url => url.protocol === 'https:');\n\n  for (const [index, url] of urls.entries()) {\n    const previousUrl = urls[index - 1];\n    const sameHostAndProtocol = previousUrl && url.host === previousUrl.host && url.protocol === previousUrl.protocol;\n    let elideHost = sameHostAndProtocol;\n    let elideProtocol = isAllHttps;\n\n    // For the first URL, show just the pathname and search - this will be relative to the domain as seen in the\n    // trace dropdown selector. Exception is if there are non-https protocols, in which case we're only going to elide\n    // parts of the query string.\n    if (index === 0 && isAllHttps) {\n      elideHost = true;\n      elideProtocol = true;\n    }\n\n    const search = createTrimmedUrlSearch(url);\n    if (!elideProtocol) {\n      labels.push(`${url.protocol}//${url.host}${url.pathname}${search}`);\n    } else if (!elideHost) {\n      labels.push(`${url.host}${url.pathname}${search}`);\n    } else {\n      labels.push(`${url.pathname}${search}`);\n    }\n  }\n\n  // Lastly, remove any trailing `/`.\n  return labels.map(label => label.length > 1 && label.endsWith('/') ? label.substring(0, label.length - 1) : label);\n}\n"]}