{"version":3,"file":"Breadcrumbs.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/Breadcrumbs.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAS7B,MAAM,UAAU,kBAAkB,CAAC,iBAA6B;IAC9D,MAAM,cAAc,GAAiB,CAAC,iBAAiB,CAAC,CAAC;IACzD,IAAI,eAAe,GAAe,iBAAiB,CAAC;IAEpD,OAAO,eAAe,CAAC,KAAK,KAAK,IAAI,EAAE;QACrC,MAAM,SAAS,GAAG,eAAe,CAAC,KAAK,CAAC;QACxC,IAAI,SAAS,KAAK,IAAI,EAAE;YACtB,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/B,eAAe,GAAG,SAAS,CAAC;SAC7B;KACF;IAED,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,MAAM,OAAO,WAAW;IACb,iBAAiB,CAAa;IACvC,cAAc,CAAa;IAE3B,YAAY,kBAAoE;QAC9E,IAAI,CAAC,iBAAiB,GAAG;YACvB,MAAM,EAAE,kBAAkB;YAC1B,KAAK,EAAE,IAAI;SACZ,CAAC;QACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC;IAC/C,CAAC;IAED,GAAG,CAAC,wBAA0E;QAC5E,IAAI,IAAI,CAAC,8BAA8B,CAAC,wBAAwB,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;YAC7F,MAAM,aAAa,GAAG;gBACpB,MAAM,EAAE,wBAAwB;gBAChC,KAAK,EAAE,IAAI;aACZ,CAAC;YACF,2FAA2F;YAC3F,uDAAuD;YACvD,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,aAAa,CAAC;YAC1C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;SACjD;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,6FAA6F,CAAC,CAAC;SAChH;IACH,CAAC;IAED,iHAAiH;IACjH,8BAA8B,CAC1B,KAAuD,EACvD,MAAwD;QAC1D,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC;YACvD,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC;IAC9D,CAAC;IAED,2FAA2F;IAC3F,oBAAoB,CAAC,iBAA6B;QAChD,IAAI,CAAC,cAAc,GAAG,iBAAiB,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC;IACnC,CAAC;CACF","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as TraceEngine from '../../../models/trace/trace.js';\n\nexport interface Breadcrumb {\n  window: TraceEngine.Types.Timing.TraceWindowMicroSeconds;\n  child: Breadcrumb|null;\n}\n\nexport function flattenBreadcrumbs(initialBreadcrumb: Breadcrumb): Breadcrumb[] {\n  const allBreadcrumbs: Breadcrumb[] = [initialBreadcrumb];\n  let breadcrumbsIter: Breadcrumb = initialBreadcrumb;\n\n  while (breadcrumbsIter.child !== null) {\n    const iterChild = breadcrumbsIter.child;\n    if (iterChild !== null) {\n      allBreadcrumbs.push(iterChild);\n      breadcrumbsIter = iterChild;\n    }\n  }\n\n  return allBreadcrumbs;\n}\n\nexport class Breadcrumbs {\n  readonly initialBreadcrumb: Breadcrumb;\n  lastBreadcrumb: Breadcrumb;\n\n  constructor(initialTraceWindow: TraceEngine.Types.Timing.TraceWindowMicroSeconds) {\n    this.initialBreadcrumb = {\n      window: initialTraceWindow,\n      child: null,\n    };\n    this.lastBreadcrumb = this.initialBreadcrumb;\n  }\n\n  add(newBreadcrumbTraceWindow: TraceEngine.Types.Timing.TraceWindowMicroSeconds): void {\n    if (this.isTraceWindowWithinTraceWindow(newBreadcrumbTraceWindow, this.lastBreadcrumb.window)) {\n      const newBreadcrumb = {\n        window: newBreadcrumbTraceWindow,\n        child: null,\n      };\n      // To add a new Breadcrumb to the Breadcrumbs Linked List, set the child of last breadcrumb\n      // to the new breadcrumb and update the last Breadcrumb\n      this.lastBreadcrumb.child = newBreadcrumb;\n      this.lastBreadcrumb = this.lastBreadcrumb.child;\n    } else {\n      throw new Error('Can not add a breadcrumb that is equal to or is outside of the parent breadcrumb TimeWindow');\n    }\n  }\n\n  // Breadcumb should be within the bounds of the parent and can not have both start and end be equal to the parent\n  isTraceWindowWithinTraceWindow(\n      child: TraceEngine.Types.Timing.TraceWindowMicroSeconds,\n      parent: TraceEngine.Types.Timing.TraceWindowMicroSeconds): boolean {\n    return (child.min >= parent.min && child.max <= parent.max) &&\n        !(child.min === parent.min && child.max === parent.max);\n  }\n\n  // Make breadcrumb active by removing all of its children and making it the last breadcrumb\n  makeBreadcrumbActive(newLastBreadcrumb: Breadcrumb): void {\n    this.lastBreadcrumb = newLastBreadcrumb;\n    this.lastBreadcrumb.child = null;\n  }\n}\n"]}