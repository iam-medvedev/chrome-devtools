{"version":3,"file":"LiveMetricsView.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/LiveMetricsView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as LiveMetrics from '../../../models/live-metrics/live-metrics.js';\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {createTarget} from '../../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../../testing/MockConnection.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as Components from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ndescribeWithMockConnection('LiveMetricsView', () => {\n  beforeEach(async () => {\n    LiveMetrics.LiveMetrics.instance({forceNew: true});\n    CrUXManager.CrUXManager.instance({forceNew: true});\n  });\n\n  it('should show LCP value', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(LiveMetrics.Events.Status, {\n      lcp: {value: 100, rating: 'good'},\n      interactions: [],\n    });\n    await coordinator.done();\n    const metricEl = view.shadowRoot?.querySelector('#lcp') as HTMLDivElement;\n    const metricValueEl = metricEl.querySelector('.local-metric-value') as HTMLDivElement;\n    assert.strictEqual(metricValueEl.className, 'local-metric-value good');\n    assert.strictEqual(metricValueEl.innerText, '100 ms');\n  });\n\n  it('should show CLS value', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(LiveMetrics.Events.Status, {\n      cls: {value: 1.34294789234, rating: 'needs-improvement'},\n      interactions: [],\n    });\n    await coordinator.done();\n    const metricEl = view.shadowRoot?.querySelector('#cls') as HTMLDivElement;\n    const metricValueEl = metricEl.querySelector('.local-metric-value') as HTMLDivElement;\n    assert.strictEqual(metricValueEl.className, 'local-metric-value needs-improvement');\n    assert.strictEqual(metricValueEl.innerText, '1.343');\n  });\n\n  it('should show INP value', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(\n        LiveMetrics.Events.Status, {inp: {value: 2000, rating: 'poor'}, interactions: []});\n    await coordinator.done();\n    const metricEl = view.shadowRoot?.querySelector('#inp') as HTMLDivElement;\n    const metricValueEl = metricEl.querySelector('.local-metric-value') as HTMLDivElement;\n    assert.strictEqual(metricValueEl.className, 'local-metric-value poor');\n    assert.strictEqual(metricValueEl.innerText, '2.00 s');\n  });\n\n  it('should show empty metric', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n    const metricEl = view.shadowRoot?.querySelector('#inp') as HTMLDivElement;\n    const metricValueEl = metricEl.querySelector('.local-metric-value') as HTMLDivElement;\n    assert.strictEqual(metricValueEl.className.trim(), 'local-metric-value waiting');\n    assert.strictEqual(metricValueEl.innerText, '-');\n  });\n\n  it('should show interactions', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(LiveMetrics.Events.Status, {\n      interactions: [\n        {duration: 500, rating: 'poor', interactionType: 'pointer'},\n        {duration: 30, rating: 'good', interactionType: 'keyboard'},\n      ],\n    });\n    await coordinator.done();\n    const interactionsListEl = view.shadowRoot?.querySelector('.interactions-list') as HTMLDivElement;\n    const interactionsEls = interactionsListEl.querySelectorAll('.interaction');\n    assert.lengthOf(interactionsEls, 2);\n\n    const typeEl1 = interactionsEls[0].querySelector('.interaction-type') as HTMLDivElement;\n    assert.strictEqual(typeEl1.textContent, 'pointer');\n\n    const durationEl1 = interactionsEls[0].querySelector('.interaction-duration') as HTMLDivElement;\n    assert.strictEqual(durationEl1.textContent, '500 ms');\n    assert.strictEqual(durationEl1.className, 'interaction-duration poor');\n\n    const typeEl2 = interactionsEls[1].querySelector('.interaction-type') as HTMLDivElement;\n    assert.strictEqual(typeEl2.textContent, 'keyboard');\n\n    const durationEl2 = interactionsEls[1].querySelector('.interaction-duration') as HTMLDivElement;\n    assert.strictEqual(durationEl2.textContent, '30 ms');\n    assert.strictEqual(durationEl2.className, 'interaction-duration good');\n  });\n\n  describe('field data', () => {\n    let target: SDK.Target.Target;\n    let mockFieldData: CrUXManager.PageResult;\n\n    beforeEach(async () => {\n      CrUXManager.CrUXManager.instance().getAutomaticSetting().set(false);\n\n      const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n      target = createTarget({parentTarget: tabTarget});\n\n      mockFieldData = {\n        'origin-ALL': null,\n        'origin-DESKTOP': null,\n        'origin-PHONE': null,\n        'origin-TABLET': null,\n        'url-ALL': null,\n        'url-DESKTOP': null,\n        'url-PHONE': null,\n        'url-TABLET': null,\n      };\n\n      sinon.stub(CrUXManager.CrUXManager.instance(), 'getFieldDataForCurrentPage').callsFake(async () => mockFieldData);\n    });\n\n    it('should show when requested manually', async () => {\n      mockFieldData['url-ALL'] = {\n        record: {\n          key: {\n            url: 'https://example.com',\n          },\n          metrics: {\n            'largest_contentful_paint': {\n              histogram: [\n                {start: 0, end: 2500, density: 0.5},\n                {start: 2500, end: 4000, density: 0.3},\n                {start: 4000, density: 0.2},\n              ],\n              percentiles: {p75: 1000},\n            },\n            'cumulative_layout_shift': {\n              histogram: [\n                {start: 0, end: 0.1, density: 0.1},\n                {start: 0.1, end: 0.25, density: 0.1},\n                {start: 0.25, density: 0.8},\n              ],\n              percentiles: {p75: 0.25},\n            },\n          },\n          collectionPeriod: {\n            firstDate: {year: 2024, month: 1, day: 1},\n            lastDate: {year: 2024, month: 1, day: 29},\n          },\n        },\n      };\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      const fieldDataCard = view.shadowRoot?.querySelector('#field-setup') as HTMLDivElement;\n\n      (fieldDataCard.querySelector('button') as HTMLButtonElement).click();\n      await coordinator.done();\n\n      const lcpFieldEl = view.shadowRoot?.querySelector('#lcp .field-data') as HTMLDivElement;\n      assert.strictEqual(lcpFieldEl.innerText, '50%\\n30%\\n20%');\n\n      const clsFieldEl = view.shadowRoot?.querySelector('#cls .field-data') as HTMLDivElement;\n      assert.strictEqual(clsFieldEl.innerText, '10%\\n10%\\n80%');\n\n      const inpFieldEl = view.shadowRoot?.querySelector('#inp .field-data');\n      assert.isNull(inpFieldEl);\n    });\n\n    it('should show when requested automatically', async () => {\n      CrUXManager.CrUXManager.instance().getAutomaticSetting().set(true);\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      await coordinator.done();\n\n      mockFieldData['url-ALL'] = {\n        record: {\n          key: {\n            url: 'https://example.com',\n          },\n          metrics: {\n            'largest_contentful_paint': {\n              histogram: [\n                {start: 0, end: 2500, density: 0.5},\n                {start: 2500, end: 4000, density: 0.3},\n                {start: 4000, density: 0.2},\n              ],\n              percentiles: {p75: 1000},\n            },\n            'cumulative_layout_shift': {\n              histogram: [\n                {start: 0, end: 0.1, density: 0.1},\n                {start: 0.1, end: 0.25, density: 0.1},\n                {start: 0.25, density: 0.8},\n              ],\n              percentiles: {p75: 0.25},\n            },\n          },\n          collectionPeriod: {\n            firstDate: {year: 2024, month: 1, day: 1},\n            lastDate: {year: 2024, month: 1, day: 29},\n          },\n        },\n      };\n\n      target.model(SDK.ResourceTreeModel.ResourceTreeModel)\n          ?.dispatchEventToListeners(SDK.ResourceTreeModel.Events.FrameNavigated, {\n            url: 'https://example.com',\n            isPrimaryFrame: () => true,\n          } as SDK.ResourceTreeModel.ResourceTreeFrame);\n\n      await coordinator.done();\n\n      const lcpFieldEl = view.shadowRoot?.querySelector('#lcp .field-data') as HTMLDivElement;\n      assert.strictEqual(lcpFieldEl.innerText, '50%\\n30%\\n20%');\n\n      const clsFieldEl = view.shadowRoot?.querySelector('#cls .field-data') as HTMLDivElement;\n      assert.strictEqual(clsFieldEl.innerText, '10%\\n10%\\n80%');\n\n      const inpFieldEl = view.shadowRoot?.querySelector('#inp .field-data');\n      assert.isNull(inpFieldEl);\n    });\n\n    it('should make initial request on render when set to automatic', async () => {\n      CrUXManager.CrUXManager.instance().getAutomaticSetting().set(true);\n\n      mockFieldData['url-ALL'] = {\n        record: {\n          key: {\n            url: 'https://example.com',\n          },\n          metrics: {\n            'largest_contentful_paint': {\n              histogram: [\n                {start: 0, end: 2500, density: 0.5},\n                {start: 2500, end: 4000, density: 0.3},\n                {start: 4000, density: 0.2},\n              ],\n              percentiles: {p75: 1000},\n            },\n            'cumulative_layout_shift': {\n              histogram: [\n                {start: 0, end: 0.1, density: 0.1},\n                {start: 0.1, end: 0.25, density: 0.1},\n                {start: 0.25, density: 0.8},\n              ],\n              percentiles: {p75: 0.25},\n            },\n          },\n          collectionPeriod: {\n            firstDate: {year: 2024, month: 1, day: 1},\n            lastDate: {year: 2024, month: 1, day: 29},\n          },\n        },\n      };\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      await coordinator.done();\n\n      const lcpFieldEl = view.shadowRoot?.querySelector('#lcp .field-data') as HTMLDivElement;\n      assert.strictEqual(lcpFieldEl.innerText, '50%\\n30%\\n20%');\n\n      const clsFieldEl = view.shadowRoot?.querySelector('#cls .field-data') as HTMLDivElement;\n      assert.strictEqual(clsFieldEl.innerText, '10%\\n10%\\n80%');\n\n      const inpFieldEl = view.shadowRoot?.querySelector('#inp .field-data');\n      assert.isNull(inpFieldEl);\n    });\n  });\n});\n"]}