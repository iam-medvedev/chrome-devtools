{"version":3,"file":"LiveMetricsView.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/LiveMetricsView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as EmulationModel from '../../../models/emulation/emulation.js';\nimport * as LiveMetrics from '../../../models/live-metrics/live-metrics.js';\nimport type * as Trace from '../../../models/trace/trace.js';\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {createTarget} from '../../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../../testing/MockConnection.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\n\nimport * as Components from './components.js';\n\ntype Milli = Trace.Types.Timing.Milli;\n\nfunction renderLiveMetrics(): Components.LiveMetricsView.LiveMetricsView {\n  const root = document.createElement('div');\n  renderElementIntoDOM(root);\n\n  const widget = new UI.Widget.Widget();\n  widget.markAsRoot();\n  widget.show(root);\n\n  const view = new Components.LiveMetricsView.LiveMetricsView();\n  widget.contentElement.append(view);\n\n  return view;\n}\n\nfunction getFieldMetricValue(view: Element, metric: string): HTMLElement|null {\n  const card = view.shadowRoot!.querySelector(`#${metric} devtools-metric-card`);\n  return card!.shadowRoot!.querySelector('#field-value .metric-value');\n}\n\nfunction getEnvironmentRecs(view: Element): HTMLElement[] {\n  return Array.from(view.shadowRoot!.querySelectorAll<HTMLElement>('.environment-rec'));\n}\n\nfunction getInteractions(view: Element): HTMLElement[] {\n  const interactionsListEl = view.shadowRoot!.querySelector('.log[slot=\"interactions-log-content\"]');\n  return Array.from(interactionsListEl?.querySelectorAll('.interaction') || []);\n}\n\nfunction getLayoutShifts(view: Element): HTMLElement[] {\n  const interactionsListEl = view.shadowRoot!.querySelector('.log[slot=\"layout-shifts-log-content\"]');\n  return Array.from(interactionsListEl?.querySelectorAll('.layout-shift') || []);\n}\n\nfunction selectVisibleLog(view: Element, logId: string): void {\n  view.shadowRoot!.querySelector('devtools-live-metrics-logs')!.shadowRoot!.querySelector('.tabbed-pane')!.shadowRoot!\n      .getElementById(`tab-${logId}`)\n      ?.dispatchEvent(\n          new MouseEvent('mousedown', {bubbles: true}),\n      );\n}\n\nfunction getClearLogButton(view: Element): HTMLElementTagNameMap['devtools-button'] {\n  return view.shadowRoot!.querySelector('devtools-live-metrics-logs')!.shadowRoot!.querySelector('.tabbed-pane')!\n      .shadowRoot!.querySelector('devtools-toolbar devtools-button')!;\n}\n\nfunction selectDeviceOption(view: Element, deviceOption: string): void {\n  const deviceScopeSelector = view.shadowRoot!.querySelector('devtools-select-menu#device-scope-select') as HTMLElement;\n  const deviceScopeOptions = Array.from(deviceScopeSelector.querySelectorAll('devtools-menu-item'));\n\n  deviceScopeSelector.click();\n  deviceScopeOptions.find(o => o.value === deviceOption)!.click();\n}\n\nfunction selectPageScope(view: Element, pageScope: string): void {\n  const pageScopeSelector = view.shadowRoot!.querySelector('devtools-select-menu#page-scope-select') as HTMLElement;\n  pageScopeSelector.click();\n\n  const pageScopeOptions = Array.from(pageScopeSelector.querySelectorAll('devtools-menu-item'));\n  const originOption = pageScopeOptions.find(o => o.value === pageScope);\n  originOption!.click();\n}\n\nfunction getFieldMessage(view: Element): HTMLElement|null {\n  return view.shadowRoot!.querySelector('#field-setup .field-data-message');\n}\n\nfunction getLiveMetricsTitle(view: Element): HTMLElement {\n  // There may be multiple, but this should always be the first one.\n  return view.shadowRoot!.querySelector('.live-metrics > .section-title') as HTMLElement;\n}\n\nfunction getInpInteractionLink(view: Element): HTMLElement|null {\n  return view.shadowRoot!.querySelector<HTMLElement>('#inp .related-info button');\n}\n\nfunction getClsClusterLink(view: Element): HTMLElement|null {\n  return view.shadowRoot!.querySelector<HTMLElement>('#cls .related-info button');\n}\n\nfunction createMockFieldData() {\n  return {\n    record: {\n      key: {\n        // Only one of these keys will be set for a given result in reality\n        // Setting both here to make testing easier.\n        url: 'https://example.com/',\n        origin: 'https://example.com',\n      },\n      metrics: {\n        largest_contentful_paint: {\n          histogram: [\n            {start: 0, end: 2500, density: 0.5},\n            {start: 2500, end: 4000, density: 0.3},\n            {start: 4000, density: 0.2},\n          ],\n          percentiles: {p75: 1000},\n        },\n        cumulative_layout_shift: {\n          histogram: [\n            {start: 0, end: 0.1},\n            {start: 0.1, end: 0.25, density: 0.2},\n            {start: 0.25, density: 0.8},\n          ],\n          percentiles: {p75: 0.25},\n        },\n        round_trip_time: {\n          percentiles: {p75: 150},\n        },\n        form_factors: {\n          fractions: {\n            desktop: 0.6,\n            phone: 0.3,\n            tablet: 0.1,\n          },\n        },\n      },\n      collectionPeriod: {\n        firstDate: {year: 2024, month: 1, day: 1},\n        lastDate: {year: 2024, month: 1, day: 29},\n      },\n    },\n  };\n}\n\nfunction createInteractionsMap(interactions: LiveMetrics.Interaction[]): LiveMetrics.InteractionMap {\n  return new Map(interactions.map(interaction => [interaction.interactionId, interaction]));\n}\n\ndescribeWithMockConnection('LiveMetricsView', () => {\n  const mockHandleAction = sinon.stub();\n\n  beforeEach(async () => {\n    mockHandleAction.reset();\n\n    UI.ActionRegistration.registerActionExtension({\n      actionId: 'timeline.toggle-recording',\n      category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n      loadActionDelegate: async () => ({handleAction: mockHandleAction}),\n    });\n    UI.ActionRegistration.registerActionExtension({\n      actionId: 'timeline.record-reload',\n      category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n      loadActionDelegate: async () => ({handleAction: mockHandleAction}),\n    });\n\n    const dummyStorage = new Common.Settings.SettingsStorage({});\n    Common.Settings.Settings.instance({\n      forceNew: true,\n      syncedStorage: dummyStorage,\n      globalStorage: dummyStorage,\n      localStorage: dummyStorage,\n    });\n\n    const actionRegistryInstance = UI.ActionRegistry.ActionRegistry.instance({forceNew: true});\n    UI.ShortcutRegistry.ShortcutRegistry.instance({forceNew: true, actionRegistry: actionRegistryInstance});\n    LiveMetrics.LiveMetrics.instance({forceNew: true});\n    CrUXManager.CrUXManager.instance({forceNew: true});\n    EmulationModel.DeviceModeModel.DeviceModeModel.instance({forceNew: true});\n  });\n\n  afterEach(async () => {\n    UI.ActionRegistry.ActionRegistry.reset();\n    UI.ShortcutRegistry.ShortcutRegistry.removeInstance();\n\n    UI.ActionRegistration.maybeRemoveActionExtension('timeline.toggle-recording');\n    UI.ActionRegistration.maybeRemoveActionExtension('timeline.record-reload');\n  });\n\n  it('should show interactions', async () => {\n    const view = renderLiveMetrics();\n    LiveMetrics.LiveMetrics.instance().setStatusForTesting({\n      inp: {\n        value: 500,\n        phases: {\n          inputDelay: 100 as Milli,\n          processingDuration: 300 as Milli,\n          presentationDelay: 100 as Milli,\n        },\n        interactionId: 'interaction-1-1',\n      },\n      interactions: createInteractionsMap([\n        {\n          duration: 500,\n          startTime: 0,\n          nextPaintTime: 500,\n          interactionType: 'pointer',\n          interactionId: 'interaction-1-1',\n          eventNames: ['pointerup'],\n          phases: {inputDelay: 100 as Milli, processingDuration: 300 as Milli, presentationDelay: 100 as Milli},\n          longAnimationFrameTimings: [],\n        },\n        {\n          duration: 30,\n          startTime: 0,\n          nextPaintTime: 30,\n          interactionType: 'keyboard',\n          interactionId: 'interaction-1-2',\n          eventNames: ['keyup'],\n          phases: {inputDelay: 10 as Milli, processingDuration: 10 as Milli, presentationDelay: 10 as Milli},\n          longAnimationFrameTimings: [],\n        },\n      ]),\n      layoutShifts: [],\n    });\n    await RenderCoordinator.done();\n\n    const interactionsEls = getInteractions(view);\n    assert.lengthOf(interactionsEls, 2);\n\n    // Click each interaction so we can test the expandable details.\n    for (const interactionEl of interactionsEls) {\n      interactionEl.querySelector('summary')!.click();\n    }\n\n    await RenderCoordinator.done();\n\n    const typeEl1 = interactionsEls[0].querySelector('.interaction-type') as HTMLDivElement;\n    assert.match(typeEl1.textContent!, /pointer/);\n\n    const inpChip1 = typeEl1.querySelector('.interaction-inp-chip');\n    assert.isNotNull(inpChip1);\n\n    const durationEl1 = interactionsEls[0].querySelector('.interaction-duration .metric-value') as HTMLDivElement;\n    assert.strictEqual(durationEl1.textContent, '500 ms');\n    assert.strictEqual(durationEl1.className, 'metric-value needs-improvement dim');\n\n    const phases1 =\n        Array.from(interactionsEls[0].querySelectorAll<HTMLElement>('.phase-table-row:not(.phase-table-header-row)'))\n            .map(el => el.innerText);\n    assert.deepEqual(phases1, [\n      'Input delay\\n100',\n      'Processing duration\\n300',\n      'Presentation delay\\n100',\n    ]);\n\n    const typeEl2 = interactionsEls[1].querySelector('.interaction-type') as HTMLDivElement;\n    assert.match(typeEl2.textContent!, /keyboard/);\n\n    const inpChip2 = typeEl2.querySelector('.interaction-inp-chip');\n    assert.isNull(inpChip2);\n\n    const durationEl2 = interactionsEls[1].querySelector('.interaction-duration .metric-value') as HTMLDivElement;\n    assert.strictEqual(durationEl2.textContent, '30 ms');\n    assert.strictEqual(durationEl2.className, 'metric-value good dim');\n\n    const phases2 =\n        Array.from(interactionsEls[1].querySelectorAll<HTMLElement>('.phase-table-row:not(.phase-table-header-row)'))\n            .map(el => el.innerText);\n    assert.deepEqual(phases2, [\n      'Input delay\\n10',\n      'Processing duration\\n10',\n      'Presentation delay\\n10',\n    ]);\n  });\n\n  it('should show button to log script details to console', async () => {\n    const view = renderLiveMetrics();\n    LiveMetrics.LiveMetrics.instance().setStatusForTesting({\n      inp: {\n        value: 500,\n        phases: {\n          inputDelay: 100 as Milli,\n          processingDuration: 300 as Milli,\n          presentationDelay: 100 as Milli,\n        },\n        interactionId: 'interaction-1-1',\n      },\n      interactions: createInteractionsMap([\n        {\n          duration: 500,\n          startTime: 0,\n          nextPaintTime: 500,\n          interactionType: 'pointer',\n          interactionId: 'interaction-1-1',\n          eventNames: ['pointerup'],\n          phases: {inputDelay: 100 as Milli, processingDuration: 300 as Milli, presentationDelay: 100 as Milli},\n          longAnimationFrameTimings: [{\n            renderStart: 0,\n            duration: 0,\n            scripts: [],\n          }],\n        },\n        {\n          duration: 30,\n          startTime: 0,\n          nextPaintTime: 30,\n          interactionType: 'keyboard',\n          interactionId: 'interaction-1-2',\n          eventNames: ['keyup'],\n          phases: {inputDelay: 10 as Milli, processingDuration: 10 as Milli, presentationDelay: 10 as Milli},\n          longAnimationFrameTimings: [],\n        },\n      ]),\n      layoutShifts: [],\n    });\n    await RenderCoordinator.done();\n\n    const interactions = getInteractions(view);\n    assert.lengthOf(interactions, 2);\n\n    assert(\n        interactions[0].querySelector('.log-extra-details-button'), 'First interaction should have log details button');\n    assert(\n        !interactions[1].querySelector('.log-extra-details-button'),\n        'Second interaction should not have log details button');\n  });\n\n  it('should show help icon for interaction that is longer than INP', async () => {\n    const view = renderLiveMetrics();\n    LiveMetrics.LiveMetrics.instance().setStatusForTesting({\n      inp: {\n        value: 50,\n        phases: {\n          inputDelay: 10 as Milli,\n          processingDuration: 30 as Milli,\n          presentationDelay: 10 as Milli,\n        },\n        interactionId: 'interaction-1-2',\n      },\n      interactions: createInteractionsMap([\n        {\n          duration: 50,\n          startTime: 0,\n          nextPaintTime: 50,\n          interactionType: 'keyboard',\n          interactionId: 'interaction-1-1',\n          eventNames: ['keyup'],\n          phases: {inputDelay: 10 as Milli, processingDuration: 30 as Milli, presentationDelay: 10 as Milli},\n          longAnimationFrameTimings: [],\n        },\n        {\n          duration: 500,\n          startTime: 0,\n          nextPaintTime: 500,\n          interactionType: 'pointer',\n          interactionId: 'interaction-1-2',\n          eventNames: ['pointerup'],\n          phases: {inputDelay: 100 as Milli, processingDuration: 300 as Milli, presentationDelay: 100 as Milli},\n          longAnimationFrameTimings: [],\n        },\n      ]),\n      layoutShifts: [],\n    });\n    await RenderCoordinator.done();\n\n    const interactionsEls = getInteractions(view);\n    assert.lengthOf(interactionsEls, 2);\n\n    const typeEl1 = interactionsEls[0].querySelector<HTMLElement>('.interaction-type');\n    assert.match(typeEl1!.textContent!, /keyboard/);\n\n    const durationEl1 = interactionsEls[0].querySelector<HTMLElement>('.interaction-duration .metric-value');\n    assert.strictEqual(durationEl1!.textContent, '50 ms');\n    assert.strictEqual(durationEl1!.className, 'metric-value good dim');\n\n    const helpEl1 = interactionsEls[0].querySelector('.interaction-info');\n    assert.isNull(helpEl1);\n\n    const typeEl2 = interactionsEls[1].querySelector<HTMLElement>('.interaction-type');\n    assert.match(typeEl2!.textContent!, /pointer/);\n\n    const helpEl2 = interactionsEls[1].querySelector<HTMLElement>('.interaction-info');\n    assert.match(helpEl2!.title, /98th percentile/);\n\n    const durationEl2 = interactionsEls[1].querySelector<HTMLElement>('.interaction-duration .metric-value');\n    assert.strictEqual(durationEl2!.textContent, '500 ms');\n    assert.strictEqual(durationEl2!.className, 'metric-value needs-improvement dim');\n  });\n\n  it('should reveal CLS cluster when link clicked', async () => {\n    const view = renderLiveMetrics();\n    LiveMetrics.LiveMetrics.instance().setStatusForTesting({\n      cls: {\n        value: 0.11,\n        clusterShiftIds: ['layout-shift-1-2', 'layout-shift-1-3'],\n      },\n      interactions: new Map(),\n      layoutShifts: [\n        {score: 0.05, affectedNodeRefs: [], uniqueLayoutShiftId: 'layout-shift-1-1'},\n        {score: 0.1, affectedNodeRefs: [], uniqueLayoutShiftId: 'layout-shift-1-2'},\n        {score: 0.01, affectedNodeRefs: [], uniqueLayoutShiftId: 'layout-shift-1-3'},\n      ],\n    });\n    await RenderCoordinator.done();\n\n    selectVisibleLog(view, 'interactions');\n\n    await RenderCoordinator.done();\n\n    const firstClusterShift = getLayoutShifts(view).find(el => el.id === 'layout-shift-1-2')!;\n    assert.isFalse(firstClusterShift.checkVisibility());\n    assert.isFalse(firstClusterShift.hasFocus());\n\n    getClsClusterLink(view)!.click();\n\n    await RenderCoordinator.done();\n\n    assert.isTrue(firstClusterShift.checkVisibility());\n    assert.isTrue(firstClusterShift.hasFocus());\n  });\n\n  it('should hide CLS cluster link if there is no defined cluster', async () => {\n    const view = renderLiveMetrics();\n    LiveMetrics.LiveMetrics.instance().setStatusForTesting({\n      cls: {\n        value: 0.11,\n        clusterShiftIds: [],\n      },\n      interactions: new Map(),\n      layoutShifts: [\n        {score: 0.05, affectedNodeRefs: [], uniqueLayoutShiftId: 'layout-shift-1-1'},\n        {score: 0.1, affectedNodeRefs: [], uniqueLayoutShiftId: 'layout-shift-1-2'},\n        {score: 0.01, affectedNodeRefs: [], uniqueLayoutShiftId: 'layout-shift-1-3'},\n      ],\n    });\n    await RenderCoordinator.done();\n\n    assert.isNull(getClsClusterLink(view));\n  });\n\n  it('should hide CLS cluster link if there are no matching shifts', async () => {\n    const view = renderLiveMetrics();\n    LiveMetrics.LiveMetrics.instance().setStatusForTesting({\n      cls: {\n        value: 0.11,\n        clusterShiftIds: ['layout-shift-2-0'],\n      },\n      interactions: new Map(),\n      layoutShifts: [\n        {score: 0.05, affectedNodeRefs: [], uniqueLayoutShiftId: 'layout-shift-1-1'},\n        {score: 0.1, affectedNodeRefs: [], uniqueLayoutShiftId: 'layout-shift-1-2'},\n        {score: 0.01, affectedNodeRefs: [], uniqueLayoutShiftId: 'layout-shift-1-3'},\n      ],\n    });\n    await RenderCoordinator.done();\n\n    assert.isNull(getClsClusterLink(view));\n  });\n\n  it('should reveal INP interaction when link clicked', async () => {\n    const view = renderLiveMetrics();\n    LiveMetrics.LiveMetrics.instance().setStatusForTesting({\n      inp: {\n        value: 500,\n        phases: {\n          inputDelay: 100 as Milli,\n          processingDuration: 300 as Milli,\n          presentationDelay: 100 as Milli,\n        },\n        interactionId: 'interaction-1-1',\n      },\n      interactions: createInteractionsMap([\n        {\n          duration: 500,\n          startTime: 0,\n          nextPaintTime: 500,\n          interactionType: 'pointer',\n          interactionId: 'interaction-1-1',\n          eventNames: ['pointerup'],\n          phases: {inputDelay: 100 as Milli, processingDuration: 300 as Milli, presentationDelay: 100 as Milli},\n          longAnimationFrameTimings: [],\n        },\n        {\n          duration: 30,\n          startTime: 0,\n          nextPaintTime: 30,\n          interactionType: 'keyboard',\n          interactionId: 'interaction-1-2',\n          eventNames: ['keyup'],\n          phases: {inputDelay: 10 as Milli, processingDuration: 10 as Milli, presentationDelay: 10 as Milli},\n          longAnimationFrameTimings: [],\n        },\n      ]),\n      layoutShifts: [],\n    });\n    await RenderCoordinator.done();\n\n    selectVisibleLog(view, 'layout-shifts');\n\n    await RenderCoordinator.done();\n\n    const inpInteractionEl = getInteractions(view).find(el => el.id === 'interaction-1-1')!;\n    assert.isFalse(inpInteractionEl.checkVisibility());\n    assert.isFalse(inpInteractionEl.hasFocus());\n\n    const inpInteractionLink = getInpInteractionLink(view);\n    inpInteractionLink!.click();\n\n    await RenderCoordinator.done();\n\n    assert.isTrue(inpInteractionEl.checkVisibility());\n    assert.isTrue(inpInteractionEl.hasFocus());\n  });\n\n  it('should hide INP link if no matching interaction', async () => {\n    const view = renderLiveMetrics();\n    LiveMetrics.LiveMetrics.instance().setStatusForTesting({\n      inp: {\n        value: 500,\n        phases: {\n          inputDelay: 100 as Milli,\n          processingDuration: 300 as Milli,\n          presentationDelay: 100 as Milli,\n        },\n        interactionId: 'interaction-1-1',\n      },\n      interactions: createInteractionsMap([\n        {\n          duration: 30,\n          startTime: 0,\n          nextPaintTime: 30,\n          interactionType: 'keyboard',\n          interactionId: 'interaction-1-2',\n          eventNames: ['keyup'],\n          phases: {inputDelay: 10 as Milli, processingDuration: 10 as Milli, presentationDelay: 10 as Milli},\n          longAnimationFrameTimings: [],\n        },\n      ]),\n      layoutShifts: [],\n    });\n    await RenderCoordinator.done();\n\n    const inpInteractionLink = getInpInteractionLink(view);\n    assert.isNull(inpInteractionLink);\n  });\n\n  it('clear interactions log button should work', async () => {\n    const view = renderLiveMetrics();\n    await RenderCoordinator.done();\n\n    assert.lengthOf(getInteractions(view), 0);\n    assert.lengthOf(getLayoutShifts(view), 0);\n\n    LiveMetrics.LiveMetrics.instance().setStatusForTesting({\n      inp: {\n        value: 50,\n        phases: {\n          inputDelay: 10 as Milli,\n          processingDuration: 30 as Milli,\n          presentationDelay: 10 as Milli,\n        },\n        interactionId: 'interaction-1-2',\n      },\n      interactions: createInteractionsMap([\n        {\n          duration: 50,\n          startTime: 0,\n          nextPaintTime: 50,\n          interactionType: 'keyboard',\n          interactionId: 'interaction-1-1',\n          eventNames: ['keyup'],\n          phases: {inputDelay: 10 as Milli, processingDuration: 30 as Milli, presentationDelay: 10 as Milli},\n          longAnimationFrameTimings: [],\n        },\n        {\n          duration: 500,\n          startTime: 0,\n          nextPaintTime: 500,\n          interactionType: 'pointer',\n          interactionId: 'interaction-1-2',\n          eventNames: ['pointerup'],\n          phases: {inputDelay: 100 as Milli, processingDuration: 300 as Milli, presentationDelay: 100 as Milli},\n          longAnimationFrameTimings: [],\n        },\n      ]),\n      layoutShifts: [\n        {score: 0.1, affectedNodeRefs: [], uniqueLayoutShiftId: 'layout-shift-1-1'},\n      ],\n    });\n    await RenderCoordinator.done();\n\n    assert.lengthOf(getInteractions(view), 2);\n    assert.lengthOf(getLayoutShifts(view), 1);\n\n    const clearLogButton = getClearLogButton(view);\n    clearLogButton.click();\n\n    await RenderCoordinator.done();\n\n    assert.lengthOf(getInteractions(view), 0);\n    assert.lengthOf(getLayoutShifts(view), 1);\n  });\n\n  it('clear layout shifts log button should work', async () => {\n    const view = renderLiveMetrics();\n    await RenderCoordinator.done();\n\n    assert.lengthOf(getInteractions(view), 0);\n    assert.lengthOf(getLayoutShifts(view), 0);\n\n    LiveMetrics.LiveMetrics.instance().setStatusForTesting({\n      inp: {\n        value: 50,\n        phases: {\n          inputDelay: 10 as Milli,\n          processingDuration: 30 as Milli,\n          presentationDelay: 10 as Milli,\n        },\n        interactionId: 'interaction-1-2',\n      },\n      interactions: createInteractionsMap([\n        {\n          duration: 50,\n          startTime: 0,\n          nextPaintTime: 50,\n          interactionType: 'keyboard',\n          interactionId: 'interaction-1-1',\n          eventNames: ['keyup'],\n          phases: {inputDelay: 10 as Milli, processingDuration: 30 as Milli, presentationDelay: 10 as Milli},\n          longAnimationFrameTimings: [],\n        },\n        {\n          duration: 500,\n          startTime: 0,\n          nextPaintTime: 500,\n          interactionType: 'pointer',\n          interactionId: 'interaction-1-2',\n          eventNames: ['pointerup'],\n          phases: {inputDelay: 100 as Milli, processingDuration: 300 as Milli, presentationDelay: 100 as Milli},\n          longAnimationFrameTimings: [],\n        },\n      ]),\n      layoutShifts: [\n        {score: 0.1, affectedNodeRefs: [], uniqueLayoutShiftId: 'layout-shift-1-1'},\n      ],\n    });\n    await RenderCoordinator.done();\n\n    assert.lengthOf(getInteractions(view), 2);\n    assert.lengthOf(getLayoutShifts(view), 1);\n\n    selectVisibleLog(view, 'layout-shifts');\n\n    await RenderCoordinator.done();\n\n    const clearLogButton = getClearLogButton(view);\n    clearLogButton.click();\n\n    await RenderCoordinator.done();\n\n    assert.lengthOf(getInteractions(view), 2);\n    assert.lengthOf(getLayoutShifts(view), 0);\n  });\n\n  it('record action button should work', async () => {\n    const view = renderLiveMetrics();\n    await RenderCoordinator.done();\n\n    const recordButton =\n        view.shadowRoot?.querySelector('#record devtools-button') as HTMLElementTagNameMap['devtools-button'];\n    recordButton.click();\n\n    await RenderCoordinator.done();\n\n    assert.strictEqual(mockHandleAction.firstCall.args[1], 'timeline.toggle-recording');\n  });\n\n  it('record page load button should work', async () => {\n    const view = renderLiveMetrics();\n    await RenderCoordinator.done();\n\n    const recordButton =\n        view.shadowRoot?.querySelector('#record-page-load devtools-button') as HTMLElementTagNameMap['devtools-button'];\n    recordButton.click();\n\n    await RenderCoordinator.done();\n\n    assert.strictEqual(mockHandleAction.firstCall.args[1], 'timeline.record-reload');\n  });\n\n  it('should show minimal view for Node connections', async () => {\n    const view = renderLiveMetrics();\n    view.isNode = true;\n    await RenderCoordinator.done();\n\n    const title = view.shadowRoot?.querySelector('.section-title');\n    assert.strictEqual(title!.textContent!, 'Node performance');\n  });\n\n  describe('field data', () => {\n    let target: SDK.Target.Target;\n    let mockFieldData: CrUXManager.PageResult;\n\n    beforeEach(async () => {\n      const tabTarget = createTarget({type: SDK.Target.Type.TAB});\n      target = createTarget({parentTarget: tabTarget});\n\n      mockFieldData = {\n        'origin-ALL': null,\n        'origin-DESKTOP': null,\n        'origin-PHONE': null,\n        'origin-TABLET': null,\n        'url-ALL': null,\n        'url-DESKTOP': null,\n        'url-PHONE': null,\n        'url-TABLET': null,\n        warnings: [],\n      };\n\n      sinon.stub(CrUXManager.CrUXManager.instance(), 'getFieldDataForPage').callsFake(async () => mockFieldData);\n      CrUXManager.CrUXManager.instance().getConfigSetting().set({enabled: true, override: ''});\n    });\n\n    it('should not show when crux is disabled', async () => {\n      CrUXManager.CrUXManager.instance().getConfigSetting().set({enabled: false, override: ''});\n\n      mockFieldData['url-ALL'] = createMockFieldData();\n\n      const view = renderLiveMetrics();\n\n      await RenderCoordinator.done();\n\n      const envRecs = getEnvironmentRecs(view);\n      assert.lengthOf(envRecs, 0);\n\n      const fieldMessage = getFieldMessage(view);\n      assert.match(fieldMessage!.innerText, /See how your local metrics compare/);\n\n      const title = getLiveMetricsTitle(view);\n      assert.strictEqual(title.innerText, 'Local metrics');\n    });\n\n    it('should show when crux is enabled', async () => {\n      const view = renderLiveMetrics();\n\n      await RenderCoordinator.done();\n\n      mockFieldData['url-ALL'] = createMockFieldData();\n\n      target.model(SDK.ResourceTreeModel.ResourceTreeModel)\n          ?.dispatchEventToListeners(SDK.ResourceTreeModel.Events.FrameNavigated, {\n            url: 'https://example.com',\n            isPrimaryFrame: () => true,\n          } as SDK.ResourceTreeModel.ResourceTreeFrame);\n\n      await RenderCoordinator.done();\n\n      const envRecs = getEnvironmentRecs(view);\n      assert.lengthOf(envRecs, 2);\n      assert.match(envRecs[0].textContent!, /60%.*desktop/);\n      assert.match(envRecs[1].textContent!, /Slow 4G/);\n\n      const fieldMessage = getFieldMessage(view);\n      // We can't match the exact string because we format the dates based on\n      // locale, so the exact format depends based on where the SWE or bots who\n      // run these tests are!\n      // We expect it to say something like Jan 1 - Jan 29 2024.\n      assert.match(fieldMessage!.innerText, /Jan.+2024/);\n\n      const title = getLiveMetricsTitle(view);\n      assert.strictEqual(title.innerText, 'Local and field metrics');\n    });\n\n    it('should show empty values when crux is enabled but there is no field data', async () => {\n      const view = renderLiveMetrics();\n\n      await RenderCoordinator.done();\n\n      target.model(SDK.ResourceTreeModel.ResourceTreeModel)\n          ?.dispatchEventToListeners(SDK.ResourceTreeModel.Events.FrameNavigated, {\n            url: 'https://example.com',\n            isPrimaryFrame: () => true,\n          } as SDK.ResourceTreeModel.ResourceTreeFrame);\n\n      await RenderCoordinator.done();\n\n      const envRecs = getEnvironmentRecs(view);\n      assert.strictEqual(envRecs[0].textContent, 'Not enough data');\n      assert.strictEqual(envRecs[1].textContent, 'Not enough data');\n\n      const fieldMessage = getFieldMessage(view);\n      assert.match(fieldMessage!.textContent!, /Not enough data/);\n\n      const title = getLiveMetricsTitle(view);\n      assert.strictEqual(title.innerText, 'Local and field metrics');\n    });\n\n    it('should display any warning from crux', async () => {\n      mockFieldData.warnings.push('Warning from crux');\n\n      const view = renderLiveMetrics();\n\n      await RenderCoordinator.done();\n\n      const fieldMessage = getFieldMessage(view);\n      assert.match(fieldMessage!.textContent!, /Warning from crux/);\n    });\n\n    it('should make initial request on render when crux is enabled', async () => {\n      mockFieldData['url-ALL'] = createMockFieldData();\n\n      const view = renderLiveMetrics();\n\n      await RenderCoordinator.done();\n\n      const lcpFieldEl = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl!.textContent, '1.00 s');\n    });\n\n    it('should be removed once crux is disabled', async () => {\n      mockFieldData['url-ALL'] = createMockFieldData();\n\n      const view = renderLiveMetrics();\n\n      await RenderCoordinator.done();\n\n      const lcpFieldEl1 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl1!.textContent, '1.00 s');\n\n      CrUXManager.CrUXManager.instance().getConfigSetting().set({enabled: false, override: ''});\n\n      await RenderCoordinator.done();\n\n      const lcpFieldEl2 = getFieldMetricValue(view, 'lcp');\n      assert.isNull(lcpFieldEl2);\n    });\n\n    it('should take from selected page scope', async () => {\n      mockFieldData['url-ALL'] = createMockFieldData();\n\n      mockFieldData['origin-ALL'] = createMockFieldData();\n      mockFieldData['origin-ALL'].record.metrics.largest_contentful_paint!.percentiles!.p75 = 2000;\n\n      const view = renderLiveMetrics();\n\n      await RenderCoordinator.done();\n\n      const lcpFieldEl1 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl1!.textContent, '1.00 s');\n\n      selectPageScope(view, 'origin');\n\n      await RenderCoordinator.done();\n\n      const lcpFieldEl2 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl2!.textContent, '2.00 s');\n    });\n\n    it('should take from selected device scope', async () => {\n      mockFieldData['url-ALL'] = createMockFieldData();\n\n      mockFieldData['url-PHONE'] = createMockFieldData();\n      mockFieldData['url-PHONE'].record.metrics.largest_contentful_paint!.percentiles!.p75 = 2000;\n\n      const view = renderLiveMetrics();\n\n      await RenderCoordinator.done();\n\n      selectDeviceOption(view, 'ALL');\n\n      const lcpFieldEl1 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl1!.textContent, '1.00 s');\n\n      selectDeviceOption(view, 'PHONE');\n\n      await RenderCoordinator.done();\n\n      const lcpFieldEl2 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl2!.textContent, '2.00 s');\n    });\n\n    describe('network throttling recommendation', () => {\n      it('should show for closest target RTT', async () => {\n        mockFieldData['url-ALL'] = createMockFieldData();\n\n        // 165ms is the adjusted latency of \"Fast 4G\" but 165ms is actually closer to the target RTT\n        // of \"Slow 4G\" than the target RTT of \"Fast 4G\".\n        // So we should expect the recommended preset to be \"Slow 4G\".\n        mockFieldData['url-ALL'].record.metrics.round_trip_time!.percentiles!.p75 = 165;\n\n        const view = renderLiveMetrics();\n\n        await RenderCoordinator.done();\n\n        const envRecs = getEnvironmentRecs(view);\n        assert.lengthOf(envRecs, 2);\n        assert.strictEqual(envRecs[0].textContent, '30% mobile, 60% desktop');\n        assert.match(envRecs[1].textContent!, /Slow 4G/);\n\n        const recNotice = view.shadowRoot!.querySelector('.environment-option devtools-network-throttling-selector')\n                              ?.shadowRoot!.querySelector('devtools-button');\n        assert.exists(recNotice);\n      });\n\n      it('should hide if no RTT data', async () => {\n        mockFieldData['url-ALL'] = createMockFieldData();\n        mockFieldData['url-ALL'].record.metrics.round_trip_time = undefined;\n\n        const view = renderLiveMetrics();\n\n        await RenderCoordinator.done();\n\n        const envRecs = getEnvironmentRecs(view);\n        assert.strictEqual(envRecs[0].textContent, '30% mobile, 60% desktop');\n        assert.strictEqual(envRecs[1].textContent, 'Not enough data');\n\n        const recNotice = view.shadowRoot!.querySelector('.environment-option devtools-network-throttling-selector')\n                              ?.shadowRoot!.querySelector('devtools-button');\n        assert.notExists(recNotice);\n      });\n\n      it('should suggest no throttling for very low latency', async () => {\n        mockFieldData['url-ALL'] = createMockFieldData();\n\n        // In theory this is closest to the \"offline\" preset latency of 0,\n        // but that preset should be ignored.\n        mockFieldData['url-ALL'].record.metrics.round_trip_time!.percentiles!.p75 = 1;\n\n        const view = renderLiveMetrics();\n\n        await RenderCoordinator.done();\n\n        const envRecs = getEnvironmentRecs(view);\n        assert.strictEqual(envRecs[0].textContent, '30% mobile, 60% desktop');\n        assert.match(envRecs[1].textContent!, /too fast to simulate with throttling/);\n\n        const recNotice = view.shadowRoot!.querySelector('.environment-option devtools-network-throttling-selector')\n                              ?.shadowRoot!.querySelector('devtools-button');\n        assert.notExists(recNotice);\n      });\n\n      it('should ignore presets that are generally too far off', async () => {\n        mockFieldData['url-ALL'] = createMockFieldData();\n\n        // This is closest to the \"3G\" preset compared to other presets, but it's\n        // still too far away in general.\n        mockFieldData['url-ALL'].record.metrics.round_trip_time!.percentiles!.p75 = 10_000;\n\n        const view = renderLiveMetrics();\n\n        await RenderCoordinator.done();\n\n        const envRecs = getEnvironmentRecs(view);\n        assert.strictEqual(envRecs[0].textContent, '30% mobile, 60% desktop');\n        assert.strictEqual(envRecs[1].textContent, 'Not enough data');\n\n        const recNotice = view.shadowRoot!.querySelector('.environment-option devtools-network-throttling-selector')\n                              ?.shadowRoot!.querySelector('devtools-button');\n        assert.notExists(recNotice);\n      });\n    });\n\n    describe('form factor recommendation', () => {\n      it('should recommend desktop if it is the majority', async () => {\n        mockFieldData['url-ALL'] = createMockFieldData();\n\n        const view = renderLiveMetrics();\n\n        await RenderCoordinator.done();\n\n        const envRecs = getEnvironmentRecs(view);\n        assert.strictEqual(envRecs[0].textContent, '30% mobile, 60% desktop');\n        assert.match(envRecs[1].textContent!, /Slow 4G/);\n      });\n\n      it('should recommend mobile if it is the majority', async () => {\n        mockFieldData['url-ALL'] = createMockFieldData();\n\n        mockFieldData['url-ALL'].record.metrics.form_factors!.fractions = {\n          desktop: 0.1,\n          phone: 0.8,\n          tablet: 0.1,\n        };\n\n        const view = renderLiveMetrics();\n\n        await RenderCoordinator.done();\n\n        const envRecs = getEnvironmentRecs(view);\n        assert.strictEqual(envRecs[0].textContent, '80% mobile, 10% desktop');\n        assert.match(envRecs[1].textContent!, /Slow 4G/);\n      });\n\n      it('should recommend nothing if there is no majority', async () => {\n        mockFieldData['url-ALL'] = createMockFieldData();\n\n        mockFieldData['url-ALL'].record.metrics.form_factors!.fractions = {\n          desktop: 0.49,\n          phone: 0.49,\n          tablet: 0.02,\n        };\n\n        const view = renderLiveMetrics();\n\n        await RenderCoordinator.done();\n\n        const envRecs = getEnvironmentRecs(view);\n        assert.strictEqual(envRecs[0].textContent, '49% mobile, 49% desktop');\n        assert.match(envRecs[1].textContent!, /Slow 4G/);\n      });\n    });\n  });\n});\n"]}