{"version":3,"file":"LiveMetricsView.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/LiveMetricsView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as LiveMetrics from '../../../models/live-metrics/live-metrics.js';\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {createTarget} from '../../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../../testing/MockConnection.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\n\nimport * as Components from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nconst LOCAL_METRIC_SELECTOR = '.local-value .metric-value';\nconst FIELD_METRIC_SELECTOR = '.field-value .metric-value';\nconst INTERACTION_SELECTOR = '.interaction';\n\ndescribeWithMockConnection('LiveMetricsView', () => {\n  const mockHandleAction = sinon.stub();\n\n  beforeEach(async () => {\n    mockHandleAction.reset();\n\n    UI.ActionRegistration.registerActionExtension({\n      actionId: 'timeline.toggle-recording',\n      category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n      loadActionDelegate: async () => ({handleAction: mockHandleAction}),\n    });\n    UI.ActionRegistration.registerActionExtension({\n      actionId: 'timeline.record-reload',\n      category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n      loadActionDelegate: async () => ({handleAction: mockHandleAction}),\n    });\n\n    const actionRegistryInstance = UI.ActionRegistry.ActionRegistry.instance({forceNew: true});\n    UI.ShortcutRegistry.ShortcutRegistry.instance({forceNew: true, actionRegistry: actionRegistryInstance});\n    LiveMetrics.LiveMetrics.instance({forceNew: true});\n    CrUXManager.CrUXManager.instance({forceNew: true});\n  });\n\n  afterEach(async () => {\n    UI.ActionRegistry.ActionRegistry.reset();\n    UI.ShortcutRegistry.ShortcutRegistry.removeInstance();\n\n    UI.ActionRegistration.maybeRemoveActionExtension('timeline.toggle-recording');\n    UI.ActionRegistration.maybeRemoveActionExtension('timeline.record-reload');\n  });\n\n  it('should show LCP value', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(LiveMetrics.Events.Status, {\n      lcp: {value: 100},\n      interactions: [],\n    });\n    await coordinator.done();\n    const metricEl = view.shadowRoot?.querySelector('#lcp') as HTMLDivElement;\n    const metricValueEl = metricEl.querySelector(LOCAL_METRIC_SELECTOR) as HTMLDivElement;\n    assert.strictEqual(metricValueEl.className, 'metric-value good');\n    assert.strictEqual(metricValueEl.innerText, '100 ms');\n  });\n\n  it('should show CLS value', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(LiveMetrics.Events.Status, {\n      cls: {value: 0.14294789234},\n      interactions: [],\n    });\n    await coordinator.done();\n    const metricEl = view.shadowRoot?.querySelector('#cls') as HTMLDivElement;\n    const metricValueEl = metricEl.querySelector(LOCAL_METRIC_SELECTOR) as HTMLDivElement;\n    assert.strictEqual(metricValueEl.className, 'metric-value needs-improvement');\n    assert.strictEqual(metricValueEl.innerText, '0.14');\n  });\n\n  it('should show INP value', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(\n        LiveMetrics.Events.Status, {inp: {value: 2000}, interactions: []});\n    await coordinator.done();\n    const metricEl = view.shadowRoot?.querySelector('#inp') as HTMLDivElement;\n    const metricValueEl = metricEl.querySelector(LOCAL_METRIC_SELECTOR) as HTMLDivElement;\n    assert.strictEqual(metricValueEl.className, 'metric-value poor');\n    assert.strictEqual(metricValueEl.innerText, '2.00 s');\n  });\n\n  it('should show empty metric', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n    const metricEl = view.shadowRoot?.querySelector('#inp') as HTMLDivElement;\n    const metricValueEl = metricEl.querySelector(LOCAL_METRIC_SELECTOR) as HTMLDivElement;\n    assert.strictEqual(metricValueEl.className.trim(), 'metric-value waiting');\n    assert.strictEqual(metricValueEl.innerText, '-');\n  });\n\n  it('should show interactions', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(LiveMetrics.Events.Status, {\n      interactions: [\n        {duration: 500, interactionType: 'pointer'},\n        {duration: 30, interactionType: 'keyboard'},\n      ],\n    });\n    await coordinator.done();\n    const interactionsListEl = view.shadowRoot?.querySelector('.interactions-list') as HTMLDivElement;\n    const interactionsEls = interactionsListEl.querySelectorAll(INTERACTION_SELECTOR);\n    assert.lengthOf(interactionsEls, 2);\n\n    const typeEl1 = interactionsEls[0].querySelector('.interaction-type') as HTMLDivElement;\n    assert.strictEqual(typeEl1.textContent, 'pointer');\n\n    const durationEl1 = interactionsEls[0].querySelector('.interaction-duration .metric-value') as HTMLDivElement;\n    assert.strictEqual(durationEl1.textContent, '500 ms');\n    assert.strictEqual(durationEl1.className, 'metric-value needs-improvement');\n\n    const typeEl2 = interactionsEls[1].querySelector('.interaction-type') as HTMLDivElement;\n    assert.strictEqual(typeEl2.textContent, 'keyboard');\n\n    const durationEl2 = interactionsEls[1].querySelector('.interaction-duration .metric-value') as HTMLDivElement;\n    assert.strictEqual(durationEl2.textContent, '30 ms');\n    assert.strictEqual(durationEl2.className, 'metric-value good');\n  });\n\n  it('record action button should work', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    const recordButton =\n        view.shadowRoot?.querySelector('#record devtools-button') as HTMLElementTagNameMap['devtools-button'];\n    recordButton.click();\n\n    await coordinator.done();\n\n    assert.strictEqual(mockHandleAction.firstCall.args[1], 'timeline.toggle-recording');\n  });\n\n  it('record page load button should work', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    const recordButton =\n        view.shadowRoot?.querySelector('#record-page-load devtools-button') as HTMLElementTagNameMap['devtools-button'];\n    recordButton.click();\n\n    await coordinator.done();\n\n    assert.strictEqual(mockHandleAction.firstCall.args[1], 'timeline.record-reload');\n  });\n\n  describe('field data', () => {\n    let target: SDK.Target.Target;\n    let mockFieldData: CrUXManager.PageResult;\n\n    beforeEach(async () => {\n      CrUXManager.CrUXManager.instance().getAutomaticSetting().set(false);\n\n      const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n      target = createTarget({parentTarget: tabTarget});\n\n      mockFieldData = {\n        'origin-ALL': null,\n        'origin-DESKTOP': null,\n        'origin-PHONE': null,\n        'origin-TABLET': null,\n        'url-ALL': null,\n        'url-DESKTOP': null,\n        'url-PHONE': null,\n        'url-TABLET': null,\n      };\n\n      sinon.stub(CrUXManager.CrUXManager.instance(), 'getFieldDataForCurrentPage').callsFake(async () => mockFieldData);\n    });\n\n    it('should show when requested manually', async () => {\n      mockFieldData['url-ALL'] = {\n        record: {\n          key: {\n            url: 'https://example.com',\n          },\n          metrics: {\n            'largest_contentful_paint': {\n              histogram: [\n                {start: 0, end: 2500, density: 0.5},\n                {start: 2500, end: 4000, density: 0.3},\n                {start: 4000, density: 0.2},\n              ],\n              percentiles: {p75: 1000},\n            },\n            'cumulative_layout_shift': {\n              histogram: [\n                {start: 0, end: 0.1, density: 0.1},\n                {start: 0.1, end: 0.25, density: 0.1},\n                {start: 0.25, density: 0.8},\n              ],\n              percentiles: {p75: 0.25},\n            },\n          },\n          collectionPeriod: {\n            firstDate: {year: 2024, month: 1, day: 1},\n            lastDate: {year: 2024, month: 1, day: 29},\n          },\n        },\n      };\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      const fieldDataCard = view.shadowRoot?.querySelector('#field-setup') as HTMLDivElement;\n\n      (fieldDataCard.querySelector('button') as HTMLButtonElement).click();\n      await coordinator.done();\n\n      const lcpHistogramEl = view.shadowRoot?.querySelector('#lcp .field-data-histogram') as HTMLDivElement;\n      assert.strictEqual(\n          lcpHistogramEl.innerText, 'Good (≤2.50 s)\\n50%\\nNeeds improvement (2.50 s-4.00 s)\\n30%\\nPoor (>4.00 s)\\n20%');\n\n      const clsHistogramEl = view.shadowRoot?.querySelector('#cls .field-data-histogram') as HTMLDivElement;\n      assert.strictEqual(\n          clsHistogramEl.innerText, 'Good (≤0.10)\\n10%\\nNeeds improvement (0.10-0.25)\\n10%\\nPoor (>0.25)\\n80%');\n\n      const inpHistogramEl = view.shadowRoot?.querySelector('#inp .field-data-histogram');\n      assert.isNull(inpHistogramEl);\n\n      const lcpFieldEl = view.shadowRoot?.querySelector(`#lcp ${FIELD_METRIC_SELECTOR}`) as HTMLElement;\n      assert.strictEqual(lcpFieldEl.textContent, '1.00 s');\n\n      const clsFieldEl = view.shadowRoot?.querySelector(`#cls ${FIELD_METRIC_SELECTOR}`) as HTMLElement;\n      assert.strictEqual(clsFieldEl.textContent, '0.25');\n\n      const inpFieldEl = view.shadowRoot?.querySelector(`#inp ${FIELD_METRIC_SELECTOR}`) as HTMLElement;\n      assert.strictEqual(inpFieldEl.textContent, '-');\n    });\n\n    it('should show when requested automatically', async () => {\n      CrUXManager.CrUXManager.instance().getAutomaticSetting().set(true);\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      await coordinator.done();\n\n      mockFieldData['url-ALL'] = {\n        record: {\n          key: {\n            url: 'https://example.com',\n          },\n          metrics: {\n            'largest_contentful_paint': {\n              histogram: [\n                {start: 0, end: 2500, density: 0.5},\n                {start: 2500, end: 4000, density: 0.3},\n                {start: 4000, density: 0.2},\n              ],\n              percentiles: {p75: 1000},\n            },\n            'cumulative_layout_shift': {\n              histogram: [\n                {start: 0, end: 0.1, density: 0.1},\n                {start: 0.1, end: 0.25, density: 0.1},\n                {start: 0.25, density: 0.8},\n              ],\n              percentiles: {p75: 0.25},\n            },\n          },\n          collectionPeriod: {\n            firstDate: {year: 2024, month: 1, day: 1},\n            lastDate: {year: 2024, month: 1, day: 29},\n          },\n        },\n      };\n\n      target.model(SDK.ResourceTreeModel.ResourceTreeModel)\n          ?.dispatchEventToListeners(SDK.ResourceTreeModel.Events.FrameNavigated, {\n            url: 'https://example.com',\n            isPrimaryFrame: () => true,\n          } as SDK.ResourceTreeModel.ResourceTreeFrame);\n\n      await coordinator.done();\n\n      const lcpHistogramEl = view.shadowRoot?.querySelector('#lcp .field-data-histogram') as HTMLDivElement;\n      assert.strictEqual(\n          lcpHistogramEl.innerText, 'Good (≤2.50 s)\\n50%\\nNeeds improvement (2.50 s-4.00 s)\\n30%\\nPoor (>4.00 s)\\n20%');\n\n      const clsHistogramEl = view.shadowRoot?.querySelector('#cls .field-data-histogram') as HTMLDivElement;\n      assert.strictEqual(\n          clsHistogramEl.innerText, 'Good (≤0.10)\\n10%\\nNeeds improvement (0.10-0.25)\\n10%\\nPoor (>0.25)\\n80%');\n\n      const inpHistogramEl = view.shadowRoot?.querySelector('#inp .field-data-histogram');\n      assert.isNull(inpHistogramEl);\n\n      const lcpFieldEl = view.shadowRoot?.querySelector(`#lcp ${FIELD_METRIC_SELECTOR}`) as HTMLElement;\n      assert.strictEqual(lcpFieldEl.textContent, '1.00 s');\n\n      const clsFieldEl = view.shadowRoot?.querySelector(`#cls ${FIELD_METRIC_SELECTOR}`) as HTMLElement;\n      assert.strictEqual(clsFieldEl.textContent, '0.25');\n\n      const inpFieldEl = view.shadowRoot?.querySelector(`#inp ${FIELD_METRIC_SELECTOR}`) as HTMLElement;\n      assert.strictEqual(inpFieldEl.textContent, '-');\n    });\n\n    it('should make initial request on render when set to automatic', async () => {\n      CrUXManager.CrUXManager.instance().getAutomaticSetting().set(true);\n\n      mockFieldData['url-ALL'] = {\n        record: {\n          key: {\n            url: 'https://example.com',\n          },\n          metrics: {\n            'largest_contentful_paint': {\n              histogram: [\n                {start: 0, end: 2500, density: 0.5},\n                {start: 2500, end: 4000, density: 0.3},\n                {start: 4000, density: 0.2},\n              ],\n              percentiles: {p75: 1000},\n            },\n            'cumulative_layout_shift': {\n              histogram: [\n                {start: 0, end: 0.1, density: 0.1},\n                {start: 0.1, end: 0.25, density: 0.1},\n                {start: 0.25, density: 0.8},\n              ],\n              percentiles: {p75: 0.25},\n            },\n          },\n          collectionPeriod: {\n            firstDate: {year: 2024, month: 1, day: 1},\n            lastDate: {year: 2024, month: 1, day: 29},\n          },\n        },\n      };\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      await coordinator.done();\n\n      const lcpHistogramEl = view.shadowRoot?.querySelector('#lcp .field-data-histogram') as HTMLDivElement;\n      assert.strictEqual(\n          lcpHistogramEl.innerText, 'Good (≤2.50 s)\\n50%\\nNeeds improvement (2.50 s-4.00 s)\\n30%\\nPoor (>4.00 s)\\n20%');\n\n      const clsHistogramEl = view.shadowRoot?.querySelector('#cls .field-data-histogram') as HTMLDivElement;\n      assert.strictEqual(\n          clsHistogramEl.innerText, 'Good (≤0.10)\\n10%\\nNeeds improvement (0.10-0.25)\\n10%\\nPoor (>0.25)\\n80%');\n\n      const inpHistogramEl = view.shadowRoot?.querySelector('#inp .field-data-histogram');\n      assert.isNull(inpHistogramEl);\n    });\n  });\n});\n"]}