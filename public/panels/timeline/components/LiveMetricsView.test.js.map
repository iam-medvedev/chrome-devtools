{"version":3,"file":"LiveMetricsView.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/LiveMetricsView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as EmulationModel from '../../../models/emulation/emulation.js';\nimport * as LiveMetrics from '../../../models/live-metrics/live-metrics.js';\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {createTarget} from '../../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../../testing/MockConnection.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\n\nimport * as Components from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nfunction getLocalMetricValue(view: Element, metric: string): HTMLElement {\n  const card = view.shadowRoot!.querySelector(`#${metric} devtools-metric-card`);\n  return card!.querySelector('[slot=\"local-value\"] .metric-value') as HTMLElement;\n}\n\nfunction getFieldMetricValue(view: Element, metric: string): HTMLElement {\n  const card = view.shadowRoot!.querySelector(`#${metric} devtools-metric-card`);\n  return card!.querySelector('[slot=\"field-value\"] .metric-value') as HTMLElement;\n}\n\nfunction getFieldHistogramPercents(view: Element, metric: string): string[] {\n  const card = view.shadowRoot!.querySelector(`#${metric} devtools-metric-card`);\n  const histogram = card!.querySelector('.field-data-histogram') as HTMLElement;\n  const percents = Array.from(histogram.querySelectorAll('.histogram-percent')) as HTMLElement[];\n  return percents.map(p => p.textContent || '');\n}\n\nfunction getThrottlingRecommendation(view: Element): HTMLElement|null {\n  return view.shadowRoot!.querySelector('.throttling-recommendation');\n}\n\nfunction getInteractions(view: Element): HTMLElement[] {\n  const interactionsListEl = view.shadowRoot?.querySelector('.interactions-list') as HTMLElement;\n  return Array.from(interactionsListEl.querySelectorAll('.interaction')) as HTMLElement[];\n}\n\nfunction selectDeviceOption(view: Element, deviceOption: string): void {\n  const deviceScopeSelector =\n      view.shadowRoot!.querySelector('#device-scope-select devtools-select-menu') as HTMLElement;\n  const deviceScopeOptions =\n      Array.from(deviceScopeSelector.querySelectorAll('#device-scope-select devtools-menu-item')) as\n      HTMLElementTagNameMap['devtools-menu-item'][];\n\n  deviceScopeSelector.click();\n  deviceScopeOptions.find(o => o.value === deviceOption)!.click();\n}\n\nfunction selectPageScope(view: Element, pageScope: string): void {\n  const pageScopeSelector = view.shadowRoot!.querySelector('#page-scope-select devtools-select-menu') as HTMLElement;\n  pageScopeSelector.click();\n\n  const pageScopeOptions = Array.from(pageScopeSelector.querySelectorAll('#page-scope-select devtools-menu-item')) as\n      HTMLElementTagNameMap['devtools-menu-item'][];\n  const originOption = pageScopeOptions.find(o => o.value === pageScope);\n  originOption!.click();\n}\n\nfunction createMockFieldData() {\n  return {\n    record: {\n      key: {\n        // Only one of these keys will be set for a given result in reality\n        // Setting both here to make testing easier.\n        url: 'https://example.com/',\n        origin: 'https://example.com',\n      },\n      metrics: {\n        'largest_contentful_paint': {\n          histogram: [\n            {start: 0, end: 2500, density: 0.5},\n            {start: 2500, end: 4000, density: 0.3},\n            {start: 4000, density: 0.2},\n          ],\n          percentiles: {p75: 1000},\n        },\n        'cumulative_layout_shift': {\n          histogram: [\n            {start: 0, end: 0.1},\n            {start: 0.1, end: 0.25, density: 0.2},\n            {start: 0.25, density: 0.8},\n          ],\n          percentiles: {p75: 0.25},\n        },\n        'round_trip_time': {\n          percentiles: {p75: 150},\n        },\n      },\n      collectionPeriod: {\n        firstDate: {year: 2024, month: 1, day: 1},\n        lastDate: {year: 2024, month: 1, day: 29},\n      },\n    },\n  };\n}\n\ndescribeWithMockConnection('LiveMetricsView', () => {\n  const mockHandleAction = sinon.stub();\n\n  beforeEach(async () => {\n    mockHandleAction.reset();\n\n    UI.ActionRegistration.registerActionExtension({\n      actionId: 'timeline.toggle-recording',\n      category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n      loadActionDelegate: async () => ({handleAction: mockHandleAction}),\n    });\n    UI.ActionRegistration.registerActionExtension({\n      actionId: 'timeline.record-reload',\n      category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n      loadActionDelegate: async () => ({handleAction: mockHandleAction}),\n    });\n\n    const dummyStorage = new Common.Settings.SettingsStorage({});\n    Common.Settings.registerSettingExtension({\n      category: Common.Settings.SettingCategory.MOBILE,\n      settingName: 'emulation.show-device-outline',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: false,\n    });\n    Common.Settings.Settings.instance({\n      forceNew: true,\n      syncedStorage: dummyStorage,\n      globalStorage: dummyStorage,\n      localStorage: dummyStorage,\n    });\n\n    const actionRegistryInstance = UI.ActionRegistry.ActionRegistry.instance({forceNew: true});\n    UI.ShortcutRegistry.ShortcutRegistry.instance({forceNew: true, actionRegistry: actionRegistryInstance});\n    LiveMetrics.LiveMetrics.instance({forceNew: true});\n    CrUXManager.CrUXManager.instance({forceNew: true});\n    EmulationModel.DeviceModeModel.DeviceModeModel.instance({forceNew: true});\n  });\n\n  afterEach(async () => {\n    UI.ActionRegistry.ActionRegistry.reset();\n    UI.ShortcutRegistry.ShortcutRegistry.removeInstance();\n\n    UI.ActionRegistration.maybeRemoveActionExtension('timeline.toggle-recording');\n    UI.ActionRegistration.maybeRemoveActionExtension('timeline.record-reload');\n  });\n\n  it('should show LCP value', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(LiveMetrics.Events.Status, {\n      lcp: {value: 100},\n      interactions: [],\n    });\n    await coordinator.done();\n    const metricValueEl = getLocalMetricValue(view, 'lcp');\n    assert.strictEqual(metricValueEl.className, 'metric-value good');\n    assert.strictEqual(metricValueEl.innerText, '100 ms');\n  });\n\n  it('should show CLS value', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(LiveMetrics.Events.Status, {\n      cls: {value: 0.14294789234},\n      interactions: [],\n    });\n    await coordinator.done();\n    const metricValueEl = getLocalMetricValue(view, 'cls');\n    assert.strictEqual(metricValueEl.className, 'metric-value needs-improvement');\n    assert.strictEqual(metricValueEl.innerText, '0.14');\n  });\n\n  it('should show INP value', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(\n        LiveMetrics.Events.Status, {inp: {value: 2000}, interactions: []});\n    await coordinator.done();\n    const metricValueEl = getLocalMetricValue(view, 'inp');\n    assert.strictEqual(metricValueEl.className, 'metric-value poor');\n    assert.strictEqual(metricValueEl.innerText, '2.00 s');\n  });\n\n  it('should show empty metric', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n    const metricValueEl = getLocalMetricValue(view, 'inp');\n    assert.strictEqual(metricValueEl.className.trim(), 'metric-value waiting');\n    assert.strictEqual(metricValueEl.innerText, '-');\n  });\n\n  it('should show interactions', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(LiveMetrics.Events.Status, {\n      interactions: [\n        {duration: 500, interactionType: 'pointer'},\n        {duration: 30, interactionType: 'keyboard'},\n      ],\n    });\n    await coordinator.done();\n\n    const interactionsEls = getInteractions(view);\n    assert.lengthOf(interactionsEls, 2);\n\n    const typeEl1 = interactionsEls[0].querySelector('.interaction-type') as HTMLDivElement;\n    assert.strictEqual(typeEl1.textContent, 'pointer');\n\n    const durationEl1 = interactionsEls[0].querySelector('.interaction-duration .metric-value') as HTMLDivElement;\n    assert.strictEqual(durationEl1.textContent, '500 ms');\n    assert.strictEqual(durationEl1.className, 'metric-value needs-improvement');\n\n    const typeEl2 = interactionsEls[1].querySelector('.interaction-type') as HTMLDivElement;\n    assert.strictEqual(typeEl2.textContent, 'keyboard');\n\n    const durationEl2 = interactionsEls[1].querySelector('.interaction-duration .metric-value') as HTMLDivElement;\n    assert.strictEqual(durationEl2.textContent, '30 ms');\n    assert.strictEqual(durationEl2.className, 'metric-value good');\n  });\n\n  it('record action button should work', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    const recordButton =\n        view.shadowRoot?.querySelector('#record devtools-button') as HTMLElementTagNameMap['devtools-button'];\n    recordButton.click();\n\n    await coordinator.done();\n\n    assert.strictEqual(mockHandleAction.firstCall.args[1], 'timeline.toggle-recording');\n  });\n\n  it('record page load button should work', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n\n    const recordButton =\n        view.shadowRoot?.querySelector('#record-page-load devtools-button') as HTMLElementTagNameMap['devtools-button'];\n    recordButton.click();\n\n    await coordinator.done();\n\n    assert.strictEqual(mockHandleAction.firstCall.args[1], 'timeline.record-reload');\n  });\n\n  describe('field data', () => {\n    let target: SDK.Target.Target;\n    let mockFieldData: CrUXManager.PageResult;\n\n    beforeEach(async () => {\n      const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n      target = createTarget({parentTarget: tabTarget});\n\n      mockFieldData = {\n        'origin-ALL': null,\n        'origin-DESKTOP': null,\n        'origin-PHONE': null,\n        'origin-TABLET': null,\n        'url-ALL': null,\n        'url-DESKTOP': null,\n        'url-PHONE': null,\n        'url-TABLET': null,\n      };\n\n      sinon.stub(CrUXManager.CrUXManager.instance(), 'getFieldDataForCurrentPage').callsFake(async () => mockFieldData);\n      CrUXManager.CrUXManager.instance().getConfigSetting().set({enabled: true, override: ''});\n    });\n\n    it('should not show when crux is disabled', async () => {\n      CrUXManager.CrUXManager.instance().getConfigSetting().set({enabled: false, override: ''});\n\n      mockFieldData['url-ALL'] = createMockFieldData();\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      await coordinator.done();\n\n      const lcpPercents = getFieldHistogramPercents(view, 'lcp');\n      assert.deepStrictEqual(lcpPercents, ['-', '-', '-']);\n\n      const clsPercents = getFieldHistogramPercents(view, 'cls');\n      assert.deepStrictEqual(clsPercents, ['-', '-', '-']);\n\n      const inpPercents = getFieldHistogramPercents(view, 'inp');\n      assert.deepStrictEqual(inpPercents, ['-', '-', '-']);\n\n      const lcpFieldEl = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl.textContent, '-');\n\n      const clsFieldEl = getFieldMetricValue(view, 'cls');\n      assert.strictEqual(clsFieldEl.textContent, '-');\n\n      const inpFieldEl = getFieldMetricValue(view, 'inp');\n      assert.strictEqual(inpFieldEl.textContent, '-');\n\n      const throttlingRec = getThrottlingRecommendation(view);\n      assert.isNull(throttlingRec);\n    });\n\n    it('should show when crux is enabled', async () => {\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      await coordinator.done();\n\n      mockFieldData['url-ALL'] = createMockFieldData();\n\n      target.model(SDK.ResourceTreeModel.ResourceTreeModel)\n          ?.dispatchEventToListeners(SDK.ResourceTreeModel.Events.FrameNavigated, {\n            url: 'https://example.com',\n            isPrimaryFrame: () => true,\n          } as SDK.ResourceTreeModel.ResourceTreeFrame);\n\n      await coordinator.done();\n\n      const lcpPercents = getFieldHistogramPercents(view, 'lcp');\n      assert.deepStrictEqual(lcpPercents, ['50%', '30%', '20%']);\n\n      const clsPercents = getFieldHistogramPercents(view, 'cls');\n      assert.deepStrictEqual(clsPercents, ['0%', '20%', '80%']);\n\n      const inpPercents = getFieldHistogramPercents(view, 'inp');\n      assert.deepStrictEqual(inpPercents, ['-', '-', '-']);\n\n      const lcpFieldEl = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl.textContent, '1.00 s');\n\n      const clsFieldEl = getFieldMetricValue(view, 'cls');\n      assert.strictEqual(clsFieldEl.textContent, '0.25');\n\n      const inpFieldEl = getFieldMetricValue(view, 'inp');\n      assert.strictEqual(inpFieldEl.textContent, '-');\n\n      const throttlingRec = getThrottlingRecommendation(view);\n      assert.match(throttlingRec!.innerText, /Slow 4G/);\n    });\n\n    it('should make initial request on render when crux is enabled', async () => {\n      mockFieldData['url-ALL'] = createMockFieldData();\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      await coordinator.done();\n\n      const lcpFieldEl = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl.textContent, '1.00 s');\n    });\n\n    it('should be removed once crux is disabled', async () => {\n      mockFieldData['url-ALL'] = createMockFieldData();\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      await coordinator.done();\n\n      const lcpFieldEl1 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl1.textContent, '1.00 s');\n\n      CrUXManager.CrUXManager.instance().getConfigSetting().set({enabled: false, override: ''});\n\n      await coordinator.done();\n\n      const lcpFieldEl2 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl2.textContent, '-');\n    });\n\n    it('should take from selected page scope', async () => {\n      mockFieldData['url-ALL'] = createMockFieldData();\n\n      mockFieldData['origin-ALL'] = createMockFieldData();\n      mockFieldData['origin-ALL'].record.metrics.largest_contentful_paint!.percentiles!.p75 = 2000;\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      await coordinator.done();\n\n      const lcpFieldEl1 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl1.textContent, '1.00 s');\n\n      selectPageScope(view, 'origin');\n\n      await coordinator.done();\n\n      const lcpFieldEl2 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl2.textContent, '2.00 s');\n    });\n\n    it('should take from selected device scope', async () => {\n      mockFieldData['url-ALL'] = createMockFieldData();\n\n      mockFieldData['url-PHONE'] = createMockFieldData();\n      mockFieldData['url-PHONE'].record.metrics.largest_contentful_paint!.percentiles!.p75 = 2000;\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      await coordinator.done();\n\n      selectDeviceOption(view, 'ALL');\n\n      const lcpFieldEl1 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl1.textContent, '1.00 s');\n\n      selectDeviceOption(view, 'PHONE');\n\n      await coordinator.done();\n\n      const lcpFieldEl2 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl2.textContent, '2.00 s');\n    });\n\n    it('auto device option should chose based on emulation', async () => {\n      mockFieldData['url-DESKTOP'] = createMockFieldData();\n\n      mockFieldData['url-PHONE'] = createMockFieldData();\n      mockFieldData['url-PHONE'].record.metrics.largest_contentful_paint!.percentiles!.p75 = 2000;\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      await coordinator.done();\n\n      selectDeviceOption(view, 'AUTO');\n\n      const lcpFieldEl1 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl1.textContent, '1.00 s');\n\n      for (const device of EmulationModel.EmulatedDevices.EmulatedDevicesList.instance().standard()) {\n        if (device.title === 'Moto G Power') {\n          EmulationModel.DeviceModeModel.DeviceModeModel.instance().emulate(\n              EmulationModel.DeviceModeModel.Type.Device, device, device.modes[0], 1);\n        }\n      }\n\n      await coordinator.done();\n\n      const lcpFieldEl2 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl2.textContent, '2.00 s');\n    });\n\n    it('auto device option should fall back to all devices', async () => {\n      mockFieldData['url-DESKTOP'] = createMockFieldData();\n\n      mockFieldData['url-ALL'] = createMockFieldData();\n      mockFieldData['url-ALL'].record.metrics.largest_contentful_paint!.percentiles!.p75 = 2000;\n\n      const view = new Components.LiveMetricsView.LiveMetricsView();\n      renderElementIntoDOM(view);\n\n      await coordinator.done();\n\n      selectDeviceOption(view, 'AUTO');\n\n      const lcpFieldEl1 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl1.textContent, '1.00 s');\n\n      for (const device of EmulationModel.EmulatedDevices.EmulatedDevicesList.instance().standard()) {\n        if (device.title === 'Moto G Power') {\n          EmulationModel.DeviceModeModel.DeviceModeModel.instance().emulate(\n              EmulationModel.DeviceModeModel.Type.Device, device, device.modes[0], 1);\n        }\n      }\n\n      await coordinator.done();\n\n      const lcpFieldEl2 = getFieldMetricValue(view, 'lcp');\n      assert.strictEqual(lcpFieldEl2.textContent, '2.00 s');\n    });\n\n    describe('throttling recommendation', () => {\n      it('should show for closest target RTT', async () => {\n        mockFieldData['url-ALL'] = createMockFieldData();\n\n        // 165ms is the adjusted latency of \"Fast 4G\" but 165ms is actually closer to the target RTT\n        // of \"Slow 4G\" than the target RTT of \"Fast 4G\".\n        // So we should expect the recommended preset to be \"Slow 4G\".\n        mockFieldData['url-ALL'].record.metrics.round_trip_time!.percentiles!.p75 = 165;\n\n        const view = new Components.LiveMetricsView.LiveMetricsView();\n        renderElementIntoDOM(view);\n\n        await coordinator.done();\n\n        const throttlingRec = getThrottlingRecommendation(view);\n        assert.match(throttlingRec!.innerText, /Slow 4G/);\n      });\n\n      it('should hide if no RTT data', async () => {\n        mockFieldData['url-ALL'] = createMockFieldData();\n        mockFieldData['url-ALL'].record.metrics.round_trip_time = undefined;\n\n        const view = new Components.LiveMetricsView.LiveMetricsView();\n        renderElementIntoDOM(view);\n\n        await coordinator.done();\n\n        const throttlingRec = getThrottlingRecommendation(view);\n        assert.isNull(throttlingRec);\n      });\n\n      it('should suggest no throttling for very low latency', async () => {\n        mockFieldData['url-ALL'] = createMockFieldData();\n\n        // In theory this is closest to the \"offline\" preset latency of 0,\n        // but that preset should be ignored.\n        mockFieldData['url-ALL'].record.metrics.round_trip_time!.percentiles!.p75 = 1;\n\n        const view = new Components.LiveMetricsView.LiveMetricsView();\n        renderElementIntoDOM(view);\n\n        await coordinator.done();\n\n        const throttlingRec = getThrottlingRecommendation(view);\n        assert.match(throttlingRec!.innerText, /Try disabling/);\n      });\n\n      it('should ignore presets that are generally too far off', async () => {\n        mockFieldData['url-ALL'] = createMockFieldData();\n\n        // This is closest to the \"3G\" preset compared to other presets, but it's\n        // still too far away in general.\n        mockFieldData['url-ALL'].record.metrics.round_trip_time!.percentiles!.p75 = 10_000;\n\n        const view = new Components.LiveMetricsView.LiveMetricsView();\n        renderElementIntoDOM(view);\n\n        await coordinator.done();\n\n        const throttlingRec = getThrottlingRecommendation(view);\n        assert.isNull(throttlingRec);\n      });\n    });\n  });\n});\n"]}