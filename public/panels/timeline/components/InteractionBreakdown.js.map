{"version":3,"file":"InteractionBreakdown.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/InteractionBreakdown.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAC7B,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AAEnD,OAAO,KAAK,gBAAgB,MAAM,2CAA2C,CAAC;AAC9E,OAAO,KAAK,GAAG,MAAM,wBAAwB,CAAC;AAE9C,OAAO,SAAS,MAAM,+BAA+B,CAAC;AAEtD,4EAA4E;AAC5E,MAAM,MAAM,GAAG,IAAI,aAAa,EAAE,CAAC;AACnC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;AAEzC,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAEnB,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,UAAU,EAAE,aAAa;IACzB;;OAEG;IACH,kBAAkB,EAAE,qBAAqB;IACzC;;OAEG;IACH,iBAAiB,EAAE,oBAAoB;CAC/B,CAAC;AACX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,oDAAoD,EAAE,SAAS,CAAC,CAAC;AAC1G,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,OAAO,oBAAqB,SAAQ,WAAW;IAC1C,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAC5C,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChD,MAAM,GAAqD,IAAI,CAAC;IAEhE,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED,IAAI,KAAK,CAAC,KAAkD;QAC1D,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;YAC1B,OAAO;QACT,CAAC;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,KAAK,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAChF,CAAC;IAED,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACjB,OAAO;QACT,CAAC;QACD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,+BAA+B,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC9F,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,+BAA+B,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAC1G,MAAM,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,+BAA+B,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAC5G,GAAG,CAAC,MAAM,CACN,IAAI,CAAA;oDACwC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,uBACxE,UAAU;4DAEV,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,uBAAuB,cAAc;2DAE7E,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC,uBAAuB,iBAAiB;;oBAEvE,EACZ,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IAClC,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,gCAAgC,EAAE,oBAAoB,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Trace from '../../../models/trace/trace.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport stylesRaw from './interactionBreakdown.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(stylesRaw.cssContent);\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description Text shown next to the interaction event's input delay time in the detail view.\n   */\n  inputDelay: 'Input delay',\n  /**\n   *@description Text shown next to the interaction event's thread processing duration in the detail view.\n   */\n  processingDuration: 'Processing duration',\n  /**\n   *@description Text shown next to the interaction event's presentation delay time in the detail view.\n   */\n  presentationDelay: 'Presentation delay',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/InteractionBreakdown.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class InteractionBreakdown extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n  #entry: Trace.Types.Events.SyntheticInteractionPair|null = null;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [styles];\n  }\n\n  set entry(entry: Trace.Types.Events.SyntheticInteractionPair) {\n    if (entry === this.#entry) {\n      return;\n    }\n    this.#entry = entry;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #render(): void {\n    if (!this.#entry) {\n      return;\n    }\n    const inputDelay = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(this.#entry.inputDelay);\n    const mainThreadTime = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(this.#entry.mainThreadHandling);\n    const presentationDelay = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(this.#entry.presentationDelay);\n    Lit.render(\n        html`<ul class=\"breakdown\">\n                     <li data-entry=\"input-delay\">${i18nString(UIStrings.inputDelay)}<span class=\"value\">${\n            inputDelay}</span></li>\n                     <li data-entry=\"processing-duration\">${\n            i18nString(UIStrings.processingDuration)}<span class=\"value\">${mainThreadTime}</span></li>\n                     <li data-entry=\"presentation-delay\">${\n            i18nString(UIStrings.presentationDelay)}<span class=\"value\">${presentationDelay}</span></li>\n                   </ul>\n                   `,\n        this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-interaction-breakdown', InteractionBreakdown);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-interaction-breakdown': InteractionBreakdown;\n  }\n}\n"]}