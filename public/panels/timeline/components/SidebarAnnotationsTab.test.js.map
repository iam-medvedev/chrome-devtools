{"version":3,"file":"SidebarAnnotationsTab.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/SidebarAnnotationsTab.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as TimelineComponents from './components.js';\n\nasync function renderAnnotationsTab(\n    annotations: Trace.Types.File.Annotation[], annotationEntryToColorMap: Map<Trace.Types.Events.Event, string>):\n    Promise<TimelineComponents.SidebarAnnotationsTab.SidebarAnnotationsTab> {\n  const component = new TimelineComponents.SidebarAnnotationsTab.SidebarAnnotationsTab();\n\n  component.setData({annotations, annotationEntryToColorMap});\n  await RenderCoordinator.done();\n  await component.updateComplete;\n  return component;\n}\n\ndescribeWithEnvironment('SidebarAnnotationsTab', () => {\n  it('renders annotations list in the sidebar', async function() {\n    const defaultTraceEvents = await TraceLoader.rawEvents(null, 'basic.json.gz');\n\n    // Create Entry Label annotations\n    const entryLabelAnnotation: Trace.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[0],\n      label: 'Entry Label 1',\n    };\n\n    const entryLabelAnnotation2: Trace.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[1],\n      label: 'Entry Label 2',\n    };\n\n    const labelledTimeRangeAnnotation: Trace.Types.File.Annotation = {\n      type: 'TIME_RANGE',\n      bounds: {\n        min: Trace.Types.Timing.Micro(0),\n        max: Trace.Types.Timing.Micro(10),\n        range: Trace.Types.Timing.Micro(10),\n      },\n      label: 'Labelled Time Range',\n    };\n\n    const colorsMap = new Map<Trace.Types.Events.Event, string>([\n      [entryLabelAnnotation.entry, 'rgb(82, 252, 3)'],\n      [entryLabelAnnotation2.entry, '#fc039d'],\n    ]);\n\n    const component = await renderAnnotationsTab(\n        [entryLabelAnnotation, entryLabelAnnotation2, labelledTimeRangeAnnotation], colorsMap);\n\n    const annotationsWrapperElement = component.contentElement.querySelector<HTMLElement>('.annotations');\n    assert.isNotNull(annotationsWrapperElement);\n\n    const deleteButton = component.contentElement.querySelector<HTMLElement>('.bin-icon');\n    assert.isNotNull(deleteButton);\n\n    // Ensure annotations identifiers and labels are rendered for all 3 annotations -\n    // 2 entry labels and 1 labelled time range\n    const annotationEntryIdentifierElements =\n        component.contentElement.querySelectorAll<HTMLElement>('.annotation-identifier');\n    assert.lengthOf(annotationEntryIdentifierElements, 3);\n\n    const annotationEntryLabelElements = component.contentElement.querySelectorAll<HTMLElement>('.label');\n    assert.lengthOf(annotationEntryIdentifierElements, 3);\n\n    assert.strictEqual(annotationEntryLabelElements[0].innerText, 'Entry Label 1');\n    assert.strictEqual(annotationEntryIdentifierElements[0].style['backgroundColor'], 'rgb(82, 252, 3)');\n    assert.strictEqual(annotationEntryLabelElements[1].innerText, 'Entry Label 2');\n    assert.strictEqual(annotationEntryIdentifierElements[1].style['backgroundColor'], 'rgb(252, 3, 157)');\n    assert.strictEqual(annotationEntryLabelElements[2].innerText, 'Labelled Time Range');\n  });\n\n  it('gives the delete button accessible labels', async function() {\n    const defaultTraceEvents = await TraceLoader.rawEvents(null, 'basic.json.gz');\n\n    const entryLabelAnnotation: Trace.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[0],\n      label: 'Entry Label 1',\n    };\n    const component = await renderAnnotationsTab([entryLabelAnnotation], new Map());\n\n    const deleteButton = component.contentElement.querySelector<HTMLElement>('.delete-button');\n    assert.isNotNull(deleteButton);\n    assert.strictEqual(\n        deleteButton.getAttribute('aria-label'),\n        'Delete annotation: A \"thread_name\" event annotated with the text \"Entry Label 1\"');\n  });\n\n  it('uses the URL for displaying network event labels and truncates it', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const event = parsedTrace.NetworkRequests.byTime.find(event => {\n      return event.args.data.url.includes('private-aggregation-test');\n    });\n    assert.isOk(event);\n    const annotation: Trace.Types.File.EntryLabelAnnotation = {\n      type: 'ENTRY_LABEL',\n      entry: event,\n      label: 'hello world',\n    };\n    const component = await renderAnnotationsTab([annotation], new Map());\n\n    assert.isNotNull(component.contentElement);\n\n    const label = component.contentElement.querySelector<HTMLElement>('.annotation-identifier');\n    assert.strictEqual(label?.innerText, 'private-aggregation-test.js (shared-storage-demo-content-producer.web.app)');\n  });\n\n  it('dispatches RemoveAnnotation Events when delete annotation button is clicked', async function() {\n    const defaultTraceEvents = await TraceLoader.rawEvents(null, 'basic.json.gz');\n\n    let removeAnnotationEventFired = false;\n\n    // Create Entry Label annotation\n    const entryLabelAnnotation: Trace.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[0],\n      label: 'Entry Label 1',\n    };\n\n    const component = await renderAnnotationsTab([entryLabelAnnotation], new Map());\n    component.element.addEventListener('removeannotation', () => {\n      removeAnnotationEventFired = true;\n    });\n\n    assert.isNotNull(component.contentElement);\n\n    const deleteButton = component.contentElement.querySelector<HTMLElement>('.delete-button');\n    assert.isNotNull(deleteButton);\n    // Make sure the remove annotation event is not fired before clicking the button\n    assert.isFalse(removeAnnotationEventFired);\n\n    deleteButton.dispatchEvent(new MouseEvent('click'));\n    assert.isTrue(removeAnnotationEventFired);\n  });\n\n  it('updates annotations list in the sidebar when a new list is passed in', async function() {\n    const defaultTraceEvents = await TraceLoader.rawEvents(null, 'basic.json.gz');\n\n    // Create Entry Label Annotation\n    const entryLabelAnnotation: Trace.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[0],\n      label: 'Entry Label 1',\n    };\n\n    const entryLabelAnnotation2: Trace.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[1],\n      label: 'Entry Label 2',\n    };\n\n    const component = await renderAnnotationsTab([entryLabelAnnotation, entryLabelAnnotation2], new Map());\n\n    const annotationsWrapperElement = component.contentElement.querySelector<HTMLElement>('.annotations');\n    assert.isNotNull(annotationsWrapperElement);\n\n    // Ensure there are 2 labels and their entry identifiers and labels and rendered\n    const annotationIdentifierElements =\n        component.contentElement.querySelectorAll<HTMLElement>('.annotation-identifier');\n    assert.lengthOf(annotationIdentifierElements, 2);\n    let annotationLabelElements = component.contentElement.querySelectorAll<HTMLElement>('.label');\n    assert.lengthOf(annotationIdentifierElements, 2);\n\n    assert.strictEqual(annotationLabelElements[0].innerText, 'Entry Label 1');\n    assert.strictEqual(annotationLabelElements[1].innerText, 'Entry Label 2');\n\n    // Update the labels and add a range annotation\n    entryLabelAnnotation.label = 'New Entry Label 1';\n    entryLabelAnnotation2.label = 'New Entry Label 2';\n\n    const labelledTimeRangeAnnotation: Trace.Types.File.Annotation = {\n      type: 'TIME_RANGE',\n      bounds: {\n        min: Trace.Types.Timing.Micro(0),\n        max: Trace.Types.Timing.Micro(10),\n        range: Trace.Types.Timing.Micro(10),\n      },\n      label: 'Labelled Time Range',\n    };\n\n    component.setData({\n      annotations: [entryLabelAnnotation, entryLabelAnnotation2, labelledTimeRangeAnnotation],\n      annotationEntryToColorMap: new Map()\n    });\n    await RenderCoordinator.done();\n    await component.updateComplete;\n\n    annotationLabelElements = component.contentElement.querySelectorAll<HTMLElement>('.label');\n\n    // Ensure the labels changed to new ones and a labbel range was added\n    assert.lengthOf(annotationLabelElements, 3);\n    assert.strictEqual(annotationLabelElements[0].innerText, 'New Entry Label 1');\n    assert.strictEqual(annotationLabelElements[1].innerText, 'New Entry Label 2');\n    assert.strictEqual(annotationLabelElements[2].innerText, 'Labelled Time Range');\n  });\n\n  it('does not display multiple not started annotations for one entry', async function() {\n    const defaultTraceEvents = await TraceLoader.rawEvents(null, 'basic.json.gz');\n\n    // Create Empty Entry Label Annotation (considered not started)\n    const entryLabelAnnotation: Trace.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[0],\n      label: '',\n    };\n\n    // Create Entries link that only has 'to' entry (considered not started)\n    const entriesLink: Trace.Types.File.Annotation = {\n      type: 'ENTRIES_LINK',\n      entryFrom: defaultTraceEvents[0],\n      state: Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED,\n    };\n\n    const component = await renderAnnotationsTab([entryLabelAnnotation, entriesLink], new Map());\n\n    const annotationsWrapperElement = component.contentElement.querySelector<HTMLElement>('.annotations');\n    assert.isNotNull(annotationsWrapperElement);\n\n    // Ensure there is only one annotation displayed\n    const annotationIdentifierElements =\n        component.contentElement.querySelectorAll<HTMLElement>('.annotation-identifier');\n    assert.lengthOf(annotationIdentifierElements, 1);\n  });\n\n  it('displays multiple not started annotations if they are not different entries', async function() {\n    const defaultTraceEvents = await TraceLoader.rawEvents(null, 'basic.json.gz');\n\n    // Create Empty Entry Label Annotation (considered not started)\n    const entryLabelAnnotation: Trace.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[0],\n      label: '',\n    };\n\n    // Create Entries link that only has 'to' entry (considered not started).\n    // Not started link is on a different entry than the other not started annotation\n    const entriesLink: Trace.Types.File.Annotation = {\n      type: 'ENTRIES_LINK',\n      entryFrom: defaultTraceEvents[1],\n      state: Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED,\n    };\n\n    const component = await renderAnnotationsTab([entryLabelAnnotation, entriesLink], new Map());\n\n    const annotationsWrapperElement = component.contentElement.querySelector<HTMLElement>('.annotations');\n    assert.isNotNull(annotationsWrapperElement);\n\n    // Ensure both annotations are displayed\n    const annotationIdentifierElements =\n        component.contentElement.querySelectorAll<HTMLElement>('.annotation-identifier');\n    assert.lengthOf(annotationIdentifierElements, 2);\n  });\n});\n"]}