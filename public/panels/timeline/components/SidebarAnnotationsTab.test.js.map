{"version":3,"file":"SidebarAnnotationsTab.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/SidebarAnnotationsTab.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as TraceEngine from '../../../models/trace/trace.js';\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as TimelineComponents from './components.js';\n\ndescribeWithEnvironment('SidebarAnnotationsTab', () => {\n  const {SidebarAnnotationsTab} = TimelineComponents.SidebarAnnotationsTab;\n  const coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\n  it('renders annotations tab in the sidebar', async () => {\n    const component = new SidebarAnnotationsTab();\n    renderElementIntoDOM(component);\n\n    await coordinator.done();\n\n    assert.isNotNull(component.shadowRoot);\n    const annotationsWrapperElement = component.shadowRoot.querySelector<HTMLElement>('.annotations');\n    assert.isNotNull(annotationsWrapperElement);\n  });\n\n  it('renders annotations list in the sidebar', async function() {\n    const component = new SidebarAnnotationsTab();\n    const defaultTraceEvents = await TraceLoader.rawEvents(null, 'basic.json.gz');\n    renderElementIntoDOM(component);\n\n    // Create Entry Label annotations\n    const entryLabelAnnotation: TraceEngine.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[0],\n      label: 'Entry Label 1',\n    };\n\n    const entryLabelAnnotation2: TraceEngine.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[1],\n      label: 'Entry Label 2',\n    };\n\n    component.annotations = [entryLabelAnnotation, entryLabelAnnotation2];\n    assert.isNotNull(component.shadowRoot);\n\n    await coordinator.done();\n\n    const annotationsWrapperElement = component.shadowRoot.querySelector<HTMLElement>('.annotations');\n    assert.isNotNull(annotationsWrapperElement);\n\n    const deleteButton = component.shadowRoot.querySelector<HTMLElement>('.bin-icon');\n    assert.isNotNull(deleteButton);\n\n    // Ensure there are 2 labels and their entry names and labels and rendered\n    const annotationEntryNameElements = component.shadowRoot.querySelectorAll<HTMLElement>('.entry-name');\n    assert.strictEqual(annotationEntryNameElements.length, 2);\n\n    const annotationEntryLabelElements = component.shadowRoot.querySelectorAll<HTMLElement>('.label');\n    assert.strictEqual(annotationEntryNameElements.length, 2);\n\n    assert.strictEqual(annotationEntryLabelElements[0].innerText, 'Entry Label 1');\n    assert.strictEqual(annotationEntryLabelElements[1].innerText, 'Entry Label 2');\n  });\n\n  it('dispatches RemoveAnnotation Events when delete annotation button is clicked', async function() {\n    const component = new SidebarAnnotationsTab();\n    const defaultTraceEvents = await TraceLoader.rawEvents(null, 'basic.json.gz');\n    renderElementIntoDOM(component);\n\n    let removeAnnotationEventFired = false;\n    component.addEventListener('removeannotation', () => {\n      removeAnnotationEventFired = true;\n    });\n\n    // Create Entry Label annotation\n    const entryLabelAnnotation: TraceEngine.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[0],\n      label: 'Entry Label 1',\n    };\n\n    component.annotations = [entryLabelAnnotation];\n    assert.isNotNull(component.shadowRoot);\n\n    await coordinator.done();\n\n    const deleteButton = component.shadowRoot.querySelector<HTMLElement>('.bin-icon');\n    assert.isNotNull(deleteButton);\n\n    // Make sure the remove annotation event is not fired before clicking the button\n    assert.isFalse(removeAnnotationEventFired);\n\n    deleteButton.dispatchEvent(new MouseEvent('click'));\n\n    assert.isTrue(removeAnnotationEventFired);\n  });\n\n  it('updates annotations list in the sidebar when a new list is passed in', async function() {\n    const component = new SidebarAnnotationsTab();\n    const defaultTraceEvents = await TraceLoader.rawEvents(null, 'basic.json.gz');\n    renderElementIntoDOM(component);\n\n    // Create Entry Label Annotation\n    const entryLabelAnnotation: TraceEngine.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[0],\n      label: 'Entry Label 1',\n    };\n\n    const entryLabelAnnotation2: TraceEngine.Types.File.Annotation = {\n      type: 'ENTRY_LABEL',\n      entry: defaultTraceEvents[1],\n      label: 'Entry Label 2',\n    };\n\n    component.annotations = [entryLabelAnnotation, entryLabelAnnotation2];\n    assert.isNotNull(component.shadowRoot);\n\n    await coordinator.done();\n\n    const annotationsWrapperElement = component.shadowRoot.querySelector<HTMLElement>('.annotations');\n    assert.isNotNull(annotationsWrapperElement);\n\n    // Ensure there are 2 labels and their entry names and labels and rendered\n    const annotationEntryNameElements = component.shadowRoot.querySelectorAll<HTMLElement>('.entry-name');\n    assert.strictEqual(annotationEntryNameElements.length, 2);\n    const annotationEntryLabelElements = component.shadowRoot.querySelectorAll<HTMLElement>('.label');\n    assert.strictEqual(annotationEntryNameElements.length, 2);\n\n    assert.strictEqual(annotationEntryLabelElements[0].innerText, 'Entry Label 1');\n    assert.strictEqual(annotationEntryLabelElements[1].innerText, 'Entry Label 2');\n\n    // Update the labels and pass the list again\n    entryLabelAnnotation.label = 'New Entry Label 1';\n    entryLabelAnnotation2.label = 'New Entry Label 2';\n\n    component.annotations = [entryLabelAnnotation, entryLabelAnnotation2];\n    await coordinator.done();\n\n    // Ensure the labels changed to new ones\n    assert.strictEqual(annotationEntryLabelElements[0].innerText, 'New Entry Label 1');\n    assert.strictEqual(annotationEntryLabelElements[1].innerText, 'New Entry Label 2');\n  });\n});\n"]}