{"version":3,"file":"ExportTraceOptions.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/ExportTraceOptions.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../../../core/root/root.js';\nimport {\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as TimelineComponents from './components.js';\n\ndescribeWithEnvironment('Export Trace Options ', () => {\n  interface CallbackArgsType {\n    includeScriptContent: boolean;\n    includeSourceMaps: boolean;\n    addModifications: boolean;\n  }\n\n  const initialCallback = (args: CallbackArgsType) => {\n    args.addModifications = true;\n    return Promise.resolve();\n  };\n\n  async function renderExportTraceOptionsDialog(callback: typeof initialCallback = initialCallback):\n      Promise<HTMLElement> {\n    const exportTraceOptions = new TimelineComponents.ExportTraceOptions.ExportTraceOptions();\n    exportTraceOptions.data = {\n      onExport: callback,\n      buttonEnabled: false,\n    };\n\n    exportTraceOptions.updateContentVisibility({annotationsExist: true});\n    // Render component and wait for completion\n    renderElementIntoDOM(exportTraceOptions);\n    await RenderCoordinator.done();\n    return exportTraceOptions;\n  }\n\n  const waitFor = async(selector: string, root?: Element|ShadowRoot): Promise<Element|null> => {\n    let element = null;\n    // Poll for element until found\n    while (!element) {\n      element = root ? root.querySelector(selector) : document.querySelector(selector);\n      await new Promise(resolve => setTimeout(resolve, 10));\n    }\n    return element;\n  };\n\n  beforeEach(() => {\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_ENHANCED_TRACES, false);\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_COMPILED_SOURCES, false);\n  });\n\n  it('should render dialog button', async () => {\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_COMPILED_SOURCES, true);\n    const component = await renderExportTraceOptionsDialog();\n    assert.isNotNull(component.shadowRoot);\n  });\n\n  it('should render all checkbox options when experiments are enabled', async () => {\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_ENHANCED_TRACES, true);\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_COMPILED_SOURCES, true);\n    const component = await renderExportTraceOptionsDialog();\n\n    assert.isNotNull(component.shadowRoot);\n    await waitFor('devtools-button-dialog', component.shadowRoot) as HTMLElement;\n    const buttonDialog = component.shadowRoot.querySelector('devtools-button-dialog');\n    assert.isNotNull(buttonDialog);\n    assert.isNotNull(buttonDialog.shadowRoot);\n    const buttonFromDialog = buttonDialog.shadowRoot.querySelector('devtools-button');\n\n    assert.isNotNull(buttonFromDialog);\n    assert.isTrue(buttonFromDialog.disabled);\n    buttonFromDialog.disabled = false;\n    buttonFromDialog.click();\n    const dialogContent = await waitFor('.export-trace-options-content', component.shadowRoot) as HTMLElement;\n    assert.isNotNull(dialogContent);\n    const regexRows = dialogContent.querySelectorAll('devtools-checkbox') || [];\n    assert.lengthOf(regexRows, 4);\n    assert.isTrue(regexRows[0].checked);\n    assert.isFalse(regexRows[1].checked);\n    assert.isFalse(regexRows[2].checked);\n  });\n\n  it('should show include annotations checkbox only when annotations are present', async () => {\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_ENHANCED_TRACES, true);\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_COMPILED_SOURCES, false);\n    const component = await renderExportTraceOptionsDialog();\n    (component as TimelineComponents.ExportTraceOptions.ExportTraceOptions).updateContentVisibility({\n      annotationsExist: false\n    });\n\n    assert.isNotNull(component.shadowRoot);\n    await waitFor('devtools-button-dialog', component.shadowRoot) as HTMLElement;\n    const buttonDialog = component.shadowRoot.querySelector('devtools-button-dialog');\n    assert.isNotNull(buttonDialog);\n    assert.isNotNull(buttonDialog.shadowRoot);\n    const buttonFromDialog = buttonDialog.shadowRoot.querySelector('devtools-button');\n\n    assert.isNotNull(buttonFromDialog);\n    assert.isTrue(buttonFromDialog.disabled);\n    buttonFromDialog.disabled = false;\n    buttonFromDialog.click();\n    const dialogContent = await waitFor('.export-trace-options-content', component.shadowRoot) as HTMLElement;\n    const resultElement =\n        await waitFor('devtools-checkbox[title=\"Include script content\"]', dialogContent) as HTMLElement;\n    assert.isNotNull(resultElement);\n  });\n\n  it('should show script content checkbox only when experiment is enabled', async () => {\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_ENHANCED_TRACES, false);\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_COMPILED_SOURCES, false);\n    const component = await renderExportTraceOptionsDialog();\n\n    assert.isNotNull(component.shadowRoot);\n    await waitFor('devtools-button-dialog', component.shadowRoot) as HTMLElement;\n    const buttonDialog = component.shadowRoot.querySelector('devtools-button-dialog');\n    assert.isNotNull(buttonDialog);\n    assert.isNotNull(buttonDialog.shadowRoot);\n    const buttonFromDialog = buttonDialog.shadowRoot.querySelector('devtools-button');\n\n    assert.isNotNull(buttonFromDialog);\n    assert.isTrue(buttonFromDialog.disabled);\n    buttonFromDialog.disabled = false;\n    buttonFromDialog.click();\n    const dialogContent = await waitFor('.export-trace-options-content', component.shadowRoot) as HTMLElement;\n    assert.isNotNull(dialogContent);\n    const regexRows = dialogContent.querySelectorAll('devtools-checkbox') || [];\n    assert.lengthOf(regexRows, 2);\n  });\n\n  it('should show sourcemaps checkbox only when experiment is enabled', async () => {\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_ENHANCED_TRACES, true);\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_COMPILED_SOURCES, false);\n    const component = await renderExportTraceOptionsDialog();\n\n    assert.isNotNull(component.shadowRoot);\n    await waitFor('devtools-button-dialog', component.shadowRoot) as HTMLElement;\n    const buttonDialog = component.shadowRoot.querySelector('devtools-button-dialog');\n    assert.isNotNull(buttonDialog);\n    assert.isNotNull(buttonDialog.shadowRoot);\n    const buttonFromDialog = buttonDialog.shadowRoot.querySelector('devtools-button');\n\n    assert.isNotNull(buttonFromDialog);\n    assert.isTrue(buttonFromDialog.disabled);\n    buttonFromDialog.disabled = false;\n    buttonFromDialog.click();\n    const dialogContent = await waitFor('.export-trace-options-content', component.shadowRoot) as HTMLElement;\n    assert.isNotNull(dialogContent);\n    const regexRows = dialogContent.querySelectorAll('devtools-checkbox') || [];\n    assert.lengthOf(regexRows, 3);\n  });\n\n  it('should disable sourcemaps checkbox when script content is disabled', async () => {\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_ENHANCED_TRACES, true);\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_COMPILED_SOURCES, true);\n    const component = await renderExportTraceOptionsDialog();\n\n    assert.isNotNull(component.shadowRoot);\n    await waitFor('devtools-button-dialog', component.shadowRoot) as HTMLElement;\n    const buttonDialog = component.shadowRoot.querySelector('devtools-button-dialog');\n    assert.isNotNull(buttonDialog);\n    assert.isNotNull(buttonDialog.shadowRoot);\n    const buttonFromDialog = buttonDialog.shadowRoot.querySelector('devtools-button');\n\n    assert.isNotNull(buttonFromDialog);\n    assert.isTrue(buttonFromDialog.disabled);\n    buttonFromDialog.disabled = false;\n    buttonFromDialog.click();\n    const dialogContent = await waitFor('.export-trace-options-content', component.shadowRoot) as HTMLElement;\n    assert.isNotNull(dialogContent);\n    let regexRows = dialogContent.querySelectorAll('devtools-checkbox') || [];\n    assert.lengthOf(regexRows, 4);\n    assert.isTrue(regexRows[0].checked);\n    assert.isFalse(regexRows[1].checked);\n    assert.isFalse(regexRows[2].checked);\n    assert.isTrue(regexRows[2].disabled);\n    regexRows[1].click();\n    await waitFor('devtools-checkbox[title=\"Include script content\"][checked]', dialogContent) as HTMLElement;\n    regexRows = dialogContent.querySelectorAll('devtools-checkbox') || [];\n    assert.isTrue(regexRows[0].checked);\n    assert.isTrue(regexRows[1].checked);\n    assert.isFalse(regexRows[2].checked);\n    assert.isFalse(regexRows[2].disabled);\n\n    regexRows[1].click();  // Clean-up\n    assert.isFalse(regexRows[1].checked);\n  });\n\n  it('should execute callback with correct parameters when save button is clicked', async () => {\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_ENHANCED_TRACES, true);\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.TIMELINE_COMPILED_SOURCES, true);\n    let callbackExecuted = false;\n\n    let passedArgs = null;\n\n    // Override callback to capture arguments passed from component\n    const overridenCallback = (args: CallbackArgsType) => {\n      callbackExecuted = true;\n      passedArgs = args;\n      return Promise.resolve();\n    };\n\n    const component = await renderExportTraceOptionsDialog(overridenCallback);\n\n    assert.isNotNull(component.shadowRoot);\n    await waitFor('devtools-button-dialog', component.shadowRoot) as HTMLElement;\n    const buttonDialog = component.shadowRoot.querySelector('devtools-button-dialog');\n    assert.isNotNull(buttonDialog);\n    assert.isNotNull(buttonDialog.shadowRoot);\n    const buttonFromDialog = buttonDialog.shadowRoot.querySelector('devtools-button');\n\n    assert.isNotNull(buttonFromDialog);\n    assert.isTrue(buttonFromDialog.disabled);\n    buttonFromDialog.disabled = false;\n    buttonFromDialog.click();  // Open the dialog\n    const dialogContent = await waitFor('.export-trace-options-content', component.shadowRoot) as HTMLElement;\n    assert.isNotNull(dialogContent);\n\n    const saveButton = dialogContent.querySelector<HTMLElement>('devtools-button[data-export-button]');\n    let regexRows = dialogContent.querySelectorAll('devtools-checkbox') || [];\n    assert.lengthOf(regexRows, 4);\n    // Initial checkbox states: annotations=true, script=false, sourcemaps=false\n    assert.isTrue(regexRows[0].checked);\n    assert.isFalse(regexRows[1].checked);\n    assert.isFalse(regexRows[2].checked);\n    assert.isTrue(regexRows[2].disabled);\n    regexRows[1].click();  // Enable script content checkbox\n    await waitFor('devtools-checkbox[title=\"Include script content\"][checked]', dialogContent) as HTMLElement;\n    regexRows = dialogContent.querySelectorAll('devtools-checkbox') || [];\n    assert.isTrue(regexRows[0].checked);\n    assert.isTrue(regexRows[1].checked);\n    assert.isFalse(regexRows[2].checked);\n    assert.isFalse(regexRows[2].disabled);\n    assert.isFalse(callbackExecuted);\n    saveButton?.click();  // Trigger export callback\n    assert.isTrue(callbackExecuted, 'The export callback was not called.');\n\n    assert.isNotNull(passedArgs);\n    // Verify callback receives correct checkbox states\n    assert.isTrue((passedArgs as CallbackArgsType).addModifications);\n    assert.isTrue((passedArgs as CallbackArgsType).includeScriptContent);\n    assert.isFalse((passedArgs as CallbackArgsType).includeSourceMaps);\n\n    regexRows[1].click();  // Clean-up\n    assert.isFalse(regexRows[1].checked);\n  });\n});\n"]}