{"version":3,"file":"FieldSettingsDialog.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/FieldSettingsDialog.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport fieldSettingsDialogStyles from './fieldSettingsDialog.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text label for a button that opens a dialog to set up field data.\n   */\n  setUp: 'Set up',\n  /**\n   * @description Text label for a button that opens a dialog to configure field data.\n   */\n  configure: 'Configure',\n  /**\n   * @description Text label for a button that enables the collection of field data.\n   */\n  ok: 'Ok',\n  /**\n   * @description Text label for a button that opts out of the collection of field data.\n   */\n  optOut: 'Opt out',\n  /**\n   * @description Text label for a button that cancels the setup of field data collection.\n   */\n  cancel: 'Cancel',\n  /**\n   * @description Text label for a checkbox that controls if a manual URL override is enabled for field data.\n   */\n  onlyFetchFieldData: 'Only fetch field data for the below URL',\n  /**\n   * @description Text label for a text box that that contains the manual override URL for fetching field data.\n   */\n  urlOverride: 'URL Override',\n  /**\n   * @description Warning message explaining that the Chrome UX Report could not find enough real world speed data for the page.\n   */\n  doesNotHaveSufficientData: 'The Chrome UX Report does not have sufficient real-world speed data for this page.',\n  /**\n   * @description Title for a dialog that contains information and settings related to fetching field data.\n   */\n  configureFieldData: 'Configure field data fetching',\n  /**\n   * @description Paragraph explaining where field data comes from and and how it can be used. \"Chrome UX Report\" is a product name and should not be translated.\n   */\n  fetchAggregated:\n      'Fetch aggregated field data from the Chrome UX Report to help you contextualize local measurements with what real users experience on the site.',\n  /**\n   * @description Heading for a section that explains what user data needs to be collected to fetch field data.\n   */\n  privacyDisclosure: 'Privacy disclosure',\n  /**\n   * @description Paragraph explaining what data needs to be sent to Google to fetch field data, and when that data will be sent.\n   */\n  whenPerformanceIsShown:\n      'When DevTools is open, the URLs you visit will be sent to Google to query field data. These requests are not tied to your Google account.',\n  /**\n   * @description Header for a section containing advanced settings\n   */\n  advanced: 'Advanced',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/FieldSettingsDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {html, nothing} = LitHtml;\n\nexport class ShowDialog extends Event {\n  static readonly eventName = 'showdialog';\n\n  constructor() {\n    super(ShowDialog.eventName);\n  }\n}\n\nexport class FieldSettingsDialog extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-field-settings-dialog`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #dialog?: Dialogs.Dialog.Dialog;\n\n  #configSetting = CrUXManager.CrUXManager.instance().getConfigSetting();\n\n  #urlOverride: string = '';\n  #urlOverrideEnabled: boolean = false;\n  #showInvalidUrlWarning: boolean = false;\n\n  constructor() {\n    super();\n\n    const cruxManager = CrUXManager.CrUXManager.instance();\n\n    this.#configSetting = cruxManager.getConfigSetting();\n\n    this.#pullFromSettings();\n\n    this.#render();\n  }\n\n  #pullFromSettings(): void {\n    this.#urlOverride = this.#configSetting.get().override;\n    this.#urlOverrideEnabled = Boolean(this.#urlOverride);\n  }\n\n  #flushToSetting(enabled: boolean): void {\n    this.#configSetting.set({\n      enabled,\n      override: this.#urlOverrideEnabled ? this.#urlOverride : '',\n    });\n  }\n\n  #onSettingsChanged(): void {\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  async #submit(enabled: boolean): Promise<void> {\n    if (enabled && this.#urlOverrideEnabled) {\n      const cruxManager = CrUXManager.CrUXManager.instance();\n      const result = await cruxManager.getFieldDataForPage(this.#urlOverride);\n      if (Object.values(result).every(v => !v)) {\n        this.#showInvalidUrlWarning = true;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n        return;\n      }\n    }\n    this.#flushToSetting(enabled);\n    this.#closeDialog();\n  }\n\n  #showDialog(): void {\n    if (!this.#dialog) {\n      throw new Error('Dialog not found');\n    }\n    this.#pullFromSettings();\n    void this.#dialog.setDialogVisible(true);\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    this.dispatchEvent(new ShowDialog());\n  }\n\n  #closeDialog(evt?: Dialogs.Dialog.ClickOutsideDialogEvent): void {\n    if (!this.#dialog) {\n      throw new Error('Dialog not found');\n    }\n    void this.#dialog.setDialogVisible(false);\n    if (evt) {\n      evt.stopImmediatePropagation();\n    }\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [fieldSettingsDialogStyles, Input.textInputStyles, Input.checkboxStyles];\n\n    this.#configSetting.addChangeListener(this.#onSettingsChanged, this);\n\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  disconnectedCallback(): void {\n    this.#configSetting.removeChangeListener(this.#onSettingsChanged, this);\n  }\n\n  #renderOpenButton(): LitHtml.LitTemplate {\n    if (this.#configSetting.get().enabled) {\n      // clang-format off\n      return html`\n        <${Buttons.Button.Button.litTagName}\n          @click=${this.#showDialog}\n          .data=${{\n            variant: Buttons.Button.Variant.OUTLINED,\n            title: i18nString(UIStrings.configure),\n          } as Buttons.Button.ButtonData}\n          jslogContext=${'field-data-configure'}\n        >${i18nString(UIStrings.configure)}</${Buttons.Button.Button.litTagName}>\n      `;\n      // clang-format on\n    }\n    // clang-format off\n    return html`\n      <${Buttons.Button.Button.litTagName}\n        @click=${this.#showDialog}\n        .data=${{\n          variant: Buttons.Button.Variant.PRIMARY,\n          title: i18nString(UIStrings.setUp),\n        } as Buttons.Button.ButtonData}\n        jslogContext=${'field-data-setup'}\n      >${i18nString(UIStrings.setUp)}</${Buttons.Button.Button.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #renderEnableButton(): LitHtml.LitTemplate {\n    // clang-format off\n    return html`\n      <${Buttons.Button.Button.litTagName}\n        @click=${() => {\n          void this.#submit(true);\n        }}\n        .data=${{\n          variant: Buttons.Button.Variant.PRIMARY,\n          title: i18nString(UIStrings.ok),\n        } as Buttons.Button.ButtonData}\n        jslogContext=${'field-data-enable'}\n      >${i18nString(UIStrings.ok)}</${Buttons.Button.Button.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #renderDisableButton(): LitHtml.LitTemplate {\n    const label = this.#configSetting.get().enabled ? i18nString(UIStrings.optOut) : i18nString(UIStrings.cancel);\n    // clang-format off\n    return html`\n      <${Buttons.Button.Button.litTagName}\n        @click=${() => {\n          void this.#submit(false);\n        }}\n        .data=${{\n          variant: Buttons.Button.Variant.OUTLINED,\n          title: label,\n        } as Buttons.Button.ButtonData}\n        jslogContext=${'field-data-disable'}\n      >${label}</${Buttons.Button.Button.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #onUrlOverrideChange(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    this.#urlOverride = input.value;\n    this.#showInvalidUrlWarning = false;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onUrlOverrideEnabledChange(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    this.#urlOverrideEnabled = input.checked;\n    this.#showInvalidUrlWarning = false;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #render = (): void => {\n    // clang-format off\n    const output = html`\n      ${this.#renderOpenButton()}\n      <${Dialogs.Dialog.Dialog.litTagName}\n        @clickoutsidedialog=${this.#closeDialog}\n        .showConnector=${true}\n        .position=${Dialogs.Dialog.DialogVerticalPosition.AUTO}\n        .horizontalAlignment=${Dialogs.Dialog.DialogHorizontalAlignment.CENTER}\n        .jslogContext=${'field-data-settings'}\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n          this.#dialog = node as Dialogs.Dialog.Dialog;\n        })}\n      >\n        <div class=\"content\">\n          <div class=\"title\">${i18nString(UIStrings.configureFieldData)}</div>\n          <div>${i18nString(UIStrings.fetchAggregated)}</div>\n          <p>\n            <div class=\"section-title\">${i18nString(UIStrings.privacyDisclosure)}</div>\n            <div>${i18nString(UIStrings.whenPerformanceIsShown)}</div>\n          </p>\n          <details>\n            <summary>${i18nString(UIStrings.advanced)}</summary>\n            <p>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  .checked=${this.#urlOverrideEnabled}\n                  @change=${this.#onUrlOverrideEnabledChange}\n                  jslog=${VisualLogging.toggle().track({click: true}).context('field-url-override-enabled')}\n                  aria-label=${i18nString(UIStrings.onlyFetchFieldData)}\n                />\n                ${i18nString(UIStrings.onlyFetchFieldData)}\n              </label>\n            </p>\n            <input\n              type=\"text\"\n              @change=${this.#onUrlOverrideChange}\n              @keyup=${this.#onUrlOverrideChange}\n              class=\"devtools-text-input\"\n              .disabled=${!this.#urlOverrideEnabled}\n              .value=${this.#urlOverride}\n              aria-label=${i18nString(UIStrings.urlOverride)}\n              />\n            ${this.#showInvalidUrlWarning ? html`\n              <p class=\"warning\">${i18nString(UIStrings.doesNotHaveSufficientData)}</p>\n            ` : nothing}\n          </details>\n          <div class=\"buttons-section\">\n            ${this.#renderDisableButton()}\n            ${this.#renderEnableButton()}\n          </div>\n        </div>\n      </${Dialogs.Dialog.Dialog.litTagName}\n    `;\n    // clang-format on\n    LitHtml.render(output, this.#shadow, {host: this});\n  };\n}\n\ncustomElements.define('devtools-field-settings-dialog', FieldSettingsDialog);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-field-settings-dialog': FieldSettingsDialog;\n  }\n}\n"]}