{"version":3,"file":"NetworkRequestDetails.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/NetworkRequestDetails.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithMockConnection} from '../../../testing/MockConnection.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Components from '../../../ui/legacy/components/utils/utils.js';\nimport * as Timeline from '../timeline.js';\n\nimport * as TimelineComponents from './components.js';\n\ndescribeWithMockConnection('NetworkRequestDetails', () => {\n  it('renders the right details for a network event from TraceEngine', async function() {\n    const {traceData} = await TraceLoader.traceEngine(this, 'lcp-web-font.json.gz');\n    const networkRequests = traceData.NetworkRequests.byTime;\n    const cssRequest = networkRequests.find(request => {\n      return request.args.data.url === 'https://chromedevtools.github.io/performance-stories/lcp-web-font/app.css';\n    });\n    if (!cssRequest) {\n      throw new Error('Could not find expected network request.');\n    }\n\n    const details =\n        new TimelineComponents.NetworkRequestDetails.NetworkRequestDetails(new Components.Linkifier.Linkifier());\n    await details.setData(cssRequest, Timeline.TargetForEvent.targetForEvent(traceData, cssRequest));\n\n    if (!details.shadowRoot) {\n      throw new Error('Could not find expected element to test.');\n    }\n\n    const titleSwatch: HTMLElement|null = details.shadowRoot.querySelector('.network-request-details-title div');\n    // css request is in 'Css' category, which will use `--app-color-css: var(--ref-palette-purple60)` colour\n    assert.strictEqual(titleSwatch?.style.backgroundColor, 'rgb(191, 103, 255)');\n\n    const rowData = getRowDataForDetailsElement(details.shadowRoot);\n    const durationInnerText = '12.58 ms' +\n        'Queuing and connecting0' +\n        'Request sent and waiting0' +\n        'Content downloading8.29 ms' +\n        'Waiting on main thread4.29 ms';\n    assert.deepEqual(\n        rowData,\n        [\n          {title: 'URL', value: 'chromedevtools.github.io/performance-stories/lcp-web-font/app.css'},\n          {title: 'Request Method', value: 'GET'},\n          {title: 'Initial Priority', value: 'Highest'},\n          {title: 'Priority', value: 'Highest'},\n          {title: 'Mime Type', value: 'text/css'},\n          {title: 'Encoded Data', value: ' (from cache)'},\n          {title: 'Decoded Body', value: '96 B'},\n          {title: 'From cache', value: 'Yes'},\n          {title: 'Duration', value: durationInnerText},\n        ],\n    );\n  });\n});\n\nfunction getRowDataForDetailsElement(details: ShadowRoot) {\n  return Array.from(details.querySelectorAll<HTMLDivElement>('.network-request-details-row')).map(row => {\n    const title = row.querySelector<HTMLDivElement>('.title')?.innerText;\n    // The innerText in here will contain a `\\n` and a few space for each child <div> tag, so just remove these empty\n    // characters for easier test.\n    const regExpForLineBreakAndFollowingSpaces = /\\n[\\s]+/g;\n    const value =\n        row.querySelector<HTMLDivElement>('.value')?.innerText.replaceAll(regExpForLineBreakAndFollowingSpaces, '');\n    return {title, value};\n  });\n}\n"]}