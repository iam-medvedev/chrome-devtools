{"version":3,"file":"CPUThrottlingSelector.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/CPUThrottlingSelector.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/menus/menus.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport type * as Menus from '../../../ui/components/menus/menus.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../../mobile_throttling/mobile_throttling.js';\n\nimport cpuThrottlingSelectorStylesRaw from './cpuThrottlingSelector.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst cpuThrottlingSelectorStyles = new CSSStyleSheet();\ncpuThrottlingSelectorStyles.replaceSync(cpuThrottlingSelectorStylesRaw.cssContent);\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text label for a selection box showing which CPU throttling option is applied.\n   * @example {No throttling} PH1\n   */\n  cpu: 'CPU: {PH1}',\n  /**\n   * @description Text label for a selection box showing which CPU throttling option is applied.\n   * @example {No throttling} PH1\n   */\n  cpuThrottling: 'CPU throttling: {PH1}',\n  /**\n   * @description Text label for a selection box showing that a specific option is recommended.\n   * @example {4x slowdown} PH1\n   */\n  recommendedThrottling: '{PH1} – recommended',\n  /**\n   * @description Text for why user should change a throttling setting.\n   */\n  recommendedThrottlingReason: 'Consider changing setting to simulate real user environments',\n  /**\n   * @description Text to prompt the user to run the CPU calibration process.\n   */\n  calibrate: 'Calibrate…',\n  /**\n   * @description Text to prompt the user to re-run the CPU calibration process.\n   */\n  recalibrate: 'Recalibrate…',\n  /**\n   * @description Label shown above a list of CPU calibration preset options.\n   */\n  labelCalibratedPresets: 'Calibrated presets',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/CPUThrottlingSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface CPUThrottlingGroup {\n  name: string;\n  items: SDK.CPUThrottlingManager.CPUThrottlingOption[];\n  showCustomAddOption?: boolean;\n}\n\nexport class CPUThrottlingSelector extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #currentOption: SDK.CPUThrottlingManager.CPUThrottlingOption;\n  #recommendedOption: SDK.CPUThrottlingManager.CPUThrottlingOption|null = null;\n  #groups: CPUThrottlingGroup[] = [];\n  #calibratedThrottlingSetting: Common.Settings.Setting<SDK.CPUThrottlingManager.CalibratedCPUThrottling>;\n\n  constructor() {\n    super();\n    this.#currentOption = SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingOption();\n    this.#calibratedThrottlingSetting =\n        Common.Settings.Settings.instance().createSetting<SDK.CPUThrottlingManager.CalibratedCPUThrottling>(\n            'calibrated-cpu-throttling', {}, Common.Settings.SettingStorageType.GLOBAL);\n    this.#resetGroups();\n    this.#render();\n  }\n\n  set recommendedOption(recommendedOption: SDK.CPUThrottlingManager.CPUThrottlingOption|null) {\n    this.#recommendedOption = recommendedOption;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [cpuThrottlingSelectorStyles];\n    SDK.CPUThrottlingManager.CPUThrottlingManager.instance().addEventListener(\n        SDK.CPUThrottlingManager.Events.RATE_CHANGED, this.#onOptionChange, this);\n    this.#calibratedThrottlingSetting.addChangeListener(this.#onCalibratedSettingChanged, this);\n    this.#onOptionChange();\n  }\n\n  disconnectedCallback(): void {\n    this.#calibratedThrottlingSetting.removeChangeListener(this.#onCalibratedSettingChanged, this);\n    SDK.CPUThrottlingManager.CPUThrottlingManager.instance().removeEventListener(\n        SDK.CPUThrottlingManager.Events.RATE_CHANGED, this.#onOptionChange, this);\n  }\n\n  #onOptionChange(): void {\n    this.#currentOption = SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingOption();\n\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onCalibratedSettingChanged(): void {\n    this.#resetGroups();\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onMenuItemSelected(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void {\n    let option;\n    if (typeof event.itemValue === 'string') {\n      if (event.itemValue === 'low-tier-mobile') {\n        option = SDK.CPUThrottlingManager.CalibratedLowTierMobileThrottlingOption;\n      } else if (event.itemValue === 'mid-tier-mobile') {\n        option = SDK.CPUThrottlingManager.CalibratedMidTierMobileThrottlingOption;\n      }\n    } else {\n      const rate = Number(event.itemValue);\n      option = MobileThrottling.ThrottlingPresets.ThrottlingPresets.cpuThrottlingPresets.find(\n          option => !option.calibratedDeviceType && option.rate() === rate);\n    }\n\n    if (option) {\n      MobileThrottling.ThrottlingManager.throttlingManager().setCPUThrottlingOption(option);\n    }\n  }\n\n  #onCalibrateClick(): void {\n    void Common.Revealer.reveal(this.#calibratedThrottlingSetting);\n  }\n\n  #resetGroups(): void {\n    this.#groups = [\n      {\n        name: '',\n        items: MobileThrottling.ThrottlingPresets.ThrottlingPresets.cpuThrottlingPresets.filter(\n            option => !option.calibratedDeviceType),\n      },\n      {\n        name: i18nString(UIStrings.labelCalibratedPresets),\n        items: MobileThrottling.ThrottlingPresets.ThrottlingPresets.cpuThrottlingPresets.filter(\n            option => option.calibratedDeviceType),\n      },\n    ];\n  }\n\n  #render = (): void => {\n    let recommendedInfoEl;\n    if (this.#recommendedOption && this.#currentOption === SDK.CPUThrottlingManager.NoThrottlingOption) {\n      recommendedInfoEl = html`<devtools-button\n        title=${i18nString(UIStrings.recommendedThrottlingReason)}\n        .iconName=${'info'}\n        .variant=${Buttons.Button.Variant.ICON}\n      ></devtools-button>`;\n    }\n\n    const selectionTitle = this.#currentOption.title();\n    const setting = this.#calibratedThrottlingSetting.get();\n    const hasCalibratedOnce = setting.low || setting.mid;\n    const calibrationLabel = hasCalibratedOnce ? i18nString(UIStrings.recalibrate) : i18nString(UIStrings.calibrate);\n\n    // clang-format off\n    const output = html`\n      <devtools-select-menu\n            @selectmenuselected=${this.#onMenuItemSelected}\n            .showDivider=${true}\n            .showArrow=${true}\n            .sideButton=${false}\n            .showSelectedItem=${true}\n            .jslogContext=${'cpu-throttling'}\n            .buttonTitle=${i18nString(UIStrings.cpu, {PH1: selectionTitle})}\n            .title=${i18nString(UIStrings.cpuThrottling, {PH1: selectionTitle})}\n          >\n          ${this.#groups.map(group => {\n            return html`\n              <devtools-menu-group .name=${group.name} .title=${group.name}>\n                ${group.items.map(option => {\n                  const title = option === this.#recommendedOption ? i18nString(UIStrings.recommendedThrottling, {PH1: option.title()}) : option.title();\n                  const rate = option.rate();\n                  return html`\n                    <devtools-menu-item\n                      .value=${option.calibratedDeviceType ?? rate}\n                      .selected=${this.#currentOption === option}\n                      .disabled=${rate === 0}\n                      .title=${title}\n                      jslog=${VisualLogging.item(option.jslogContext).track({click: true})}\n                    >\n                      ${title}\n                    </devtools-menu-item>\n                  `;\n                })}\n                ${group.name === 'Calibrated presets' ? html`<devtools-menu-item\n                  .value=${-1 /* This won't be displayed unless it has some value. */}\n                  .title=${calibrationLabel}\n                  jslog=${VisualLogging.action('cpu-throttling-selector-calibrate').track({click: true})}\n                  @click=${this.#onCalibrateClick}\n                >\n                  ${calibrationLabel}\n                </devtools-menu-item>` : Lit.nothing}\n              </devtools-menu-group>`;\n          })}\n      </devtools-select-menu>\n      ${recommendedInfoEl}\n    `;\n    // clang-format on\n    Lit.render(output, this.#shadow, {host: this});\n  };\n}\n\ncustomElements.define('devtools-cpu-throttling-selector', CPUThrottlingSelector);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-cpu-throttling-selector': CPUThrottlingSelector;\n  }\n}\n"]}