{"version":3,"file":"CPUThrottlingSelector.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/CPUThrottlingSelector.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/icon_button/icon_button.js';\nimport '../../../ui/components/menus/menus.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport type * as Menus from '../../../ui/components/menus/menus.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../../mobile_throttling/mobile_throttling.js';\n\nimport cpuThrottlingSelectorStyles from './cpuThrottlingSelector.css.js';\n\nconst {render, html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text label for a selection box showing which CPU throttling option is applied.\n   * @example {No throttling} PH1\n   */\n  cpu: 'CPU: {PH1}',\n  /**\n   * @description Text label for a selection box showing which CPU throttling option is applied.\n   * @example {No throttling} PH1\n   */\n  cpuThrottling: 'CPU throttling: {PH1}',\n  /**\n   * @description Text label for a selection box showing that a specific option is recommended.\n   * @example {4x slowdown} PH1\n   */\n  recommendedThrottling: '{PH1} – recommended',\n  /**\n   * @description Text for why user should change a throttling setting.\n   */\n  recommendedThrottlingReason: 'Consider changing setting to simulate real user environments',\n  /**\n   * @description Text to prompt the user to run the CPU calibration process.\n   */\n  calibrate: 'Calibrate…',\n  /**\n   * @description Text to prompt the user to re-run the CPU calibration process.\n   */\n  recalibrate: 'Recalibrate…',\n  /**\n   * @description Label shown above a list of CPU calibration preset options.\n   */\n  labelCalibratedPresets: 'Calibrated presets',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/CPUThrottlingSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface CPUThrottlingGroup {\n  name: string;\n  items: SDK.CPUThrottlingManager.CPUThrottlingOption[];\n  showCustomAddOption?: boolean;\n}\n\ninterface ViewInput {\n  recommendedOption: SDK.CPUThrottlingManager.CPUThrottlingOption|null;\n  currentOption: SDK.CPUThrottlingManager.CPUThrottlingOption;\n  groups: CPUThrottlingGroup[];\n  throttling: SDK.CPUThrottlingManager.CalibratedCPUThrottling;\n  onMenuItemSelected: (event: Menus.SelectMenu.SelectMenuItemSelectedEvent) => void;\n  onCalibrateClick: () => void;\n}\n\nexport const DEFAULT_VIEW = (input: ViewInput, _output: undefined, target: HTMLElement): void => {\n  let recommendedInfoEl;\n  if (input.recommendedOption && input.currentOption === SDK.CPUThrottlingManager.NoThrottlingOption) {\n    recommendedInfoEl = html`<devtools-icon\n        title=${i18nString(UIStrings.recommendedThrottlingReason)}\n        name=info></devtools-icon>`;\n  }\n\n  const selectionTitle = input.currentOption.title();\n  const hasCalibratedOnce = input.throttling.low || input.throttling.mid;\n  const calibrationLabel = hasCalibratedOnce ? i18nString(UIStrings.recalibrate) : i18nString(UIStrings.calibrate);\n\n  // clang-format off\n  /* eslint-disable rulesdir/no-deprecated-component-usages */\n  const template = html`\n    <style>${cpuThrottlingSelectorStyles}</style>\n    <devtools-select-menu\n          @selectmenuselected=${input.onMenuItemSelected}\n          .showDivider=${true}\n          .showArrow=${true}\n          .sideButton=${false}\n          .showSelectedItem=${true}\n          .jslogContext=${'cpu-throttling'}\n          .buttonTitle=${i18nString(UIStrings.cpu, {PH1: selectionTitle})}\n          .title=${i18nString(UIStrings.cpuThrottling, {PH1: selectionTitle})}\n        >\n        ${input.groups.map(group => {\n          return html`\n            <devtools-menu-group .name=${group.name} .title=${group.name}>\n              ${group.items.map(option => {\n                const title = option === input.recommendedOption ? i18nString(UIStrings.recommendedThrottling, {PH1: option.title()}) : option.title();\n                const rate = option.rate();\n                return html`\n                  <devtools-menu-item\n                    .value=${option.calibratedDeviceType ?? rate}\n                    .selected=${input.currentOption === option}\n                    .disabled=${rate === 0}\n                    .title=${title}\n                    jslog=${VisualLogging.item(option.jslogContext).track({click: true})}\n                  >\n                    ${title}\n                  </devtools-menu-item>\n                `;\n              })}\n              ${group.name === 'Calibrated presets' ? html`<devtools-menu-item\n                .value=${-1 /* This won't be displayed unless it has some value. */}\n                .title=${calibrationLabel}\n                jslog=${VisualLogging.action('cpu-throttling-selector-calibrate').track({click: true})}\n                @click=${input.onCalibrateClick}\n              >\n                ${calibrationLabel}\n              </devtools-menu-item>` : Lit.nothing}\n            </devtools-menu-group>`;\n        })}\n    </devtools-select-menu>\n    ${recommendedInfoEl}\n  `;\n  // clang-format on\n  render(template, target);\n};\n\ntype View = typeof DEFAULT_VIEW;\n\nexport class CPUThrottlingSelector extends UI.Widget.Widget {\n  #currentOption: SDK.CPUThrottlingManager.CPUThrottlingOption;\n  #recommendedOption: SDK.CPUThrottlingManager.CPUThrottlingOption|null = null;\n  #groups: CPUThrottlingGroup[] = [];\n  #calibratedThrottlingSetting: Common.Settings.Setting<SDK.CPUThrottlingManager.CalibratedCPUThrottling>;\n  readonly #view: View;\n\n  constructor(element?: HTMLElement, view: View = DEFAULT_VIEW) {\n    super(element);\n    this.#currentOption = SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingOption();\n    this.#calibratedThrottlingSetting =\n        Common.Settings.Settings.instance().createSetting<SDK.CPUThrottlingManager.CalibratedCPUThrottling>(\n            'calibrated-cpu-throttling', {}, Common.Settings.SettingStorageType.GLOBAL);\n    this.#resetGroups();\n    this.#view = view;\n  }\n\n  set recommendedOption(recommendedOption: SDK.CPUThrottlingManager.CPUThrottlingOption|null) {\n    this.#recommendedOption = recommendedOption;\n    this.requestUpdate();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    SDK.CPUThrottlingManager.CPUThrottlingManager.instance().addEventListener(\n        SDK.CPUThrottlingManager.Events.RATE_CHANGED, this.#onOptionChange, this);\n    this.#calibratedThrottlingSetting.addChangeListener(this.#onCalibratedSettingChanged, this);\n    this.#onOptionChange();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    this.#calibratedThrottlingSetting.removeChangeListener(this.#onCalibratedSettingChanged, this);\n    SDK.CPUThrottlingManager.CPUThrottlingManager.instance().removeEventListener(\n        SDK.CPUThrottlingManager.Events.RATE_CHANGED, this.#onOptionChange, this);\n  }\n\n  #onOptionChange(): void {\n    this.#currentOption = SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingOption();\n\n    this.requestUpdate();\n  }\n\n  #onCalibratedSettingChanged(): void {\n    this.#resetGroups();\n    this.requestUpdate();\n  }\n\n  #onMenuItemSelected(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void {\n    let option;\n    if (typeof event.itemValue === 'string') {\n      if (event.itemValue === 'low-tier-mobile') {\n        option = SDK.CPUThrottlingManager.CalibratedLowTierMobileThrottlingOption;\n      } else if (event.itemValue === 'mid-tier-mobile') {\n        option = SDK.CPUThrottlingManager.CalibratedMidTierMobileThrottlingOption;\n      }\n    } else {\n      const rate = Number(event.itemValue);\n      option = MobileThrottling.ThrottlingPresets.ThrottlingPresets.cpuThrottlingPresets.find(\n          option => !option.calibratedDeviceType && option.rate() === rate);\n    }\n\n    if (option) {\n      MobileThrottling.ThrottlingManager.throttlingManager().setCPUThrottlingOption(option);\n    }\n  }\n\n  #onCalibrateClick(): void {\n    void Common.Revealer.reveal(this.#calibratedThrottlingSetting);\n  }\n\n  #resetGroups(): void {\n    this.#groups = [\n      {\n        name: '',\n        items: MobileThrottling.ThrottlingPresets.ThrottlingPresets.cpuThrottlingPresets.filter(\n            option => !option.calibratedDeviceType),\n      },\n      {\n        name: i18nString(UIStrings.labelCalibratedPresets),\n        items: MobileThrottling.ThrottlingPresets.ThrottlingPresets.cpuThrottlingPresets.filter(\n            option => option.calibratedDeviceType),\n      },\n    ];\n  }\n\n  override async performUpdate(): Promise<void> {\n    const input: ViewInput = {\n      recommendedOption: this.#recommendedOption,\n      currentOption: this.#currentOption,\n      groups: this.#groups,\n      throttling: this.#calibratedThrottlingSetting.get(),\n      onMenuItemSelected: this.#onMenuItemSelected.bind(this),\n      onCalibrateClick: this.#onCalibrateClick.bind(this),\n    };\n    this.#view(input, undefined, this.contentElement);\n  }\n}\n"]}