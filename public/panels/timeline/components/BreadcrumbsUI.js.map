{"version":3,"file":"BreadcrumbsUI.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/BreadcrumbsUI.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport {flattenBreadcrumbs} from './Breadcrumbs.js';\nimport breadcrumbsUIStylesRaw from './breadcrumbsUI.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst breadcrumbsUIStyles = new CSSStyleSheet();\nbreadcrumbsUIStyles.replaceSync(breadcrumbsUIStylesRaw.cssContent);\n\nconst {render, html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description A context menu item in the Minimap Breadcrumb context menu.\n   * This context menu option activates the breadcrumb that the context menu was opened on.\n   */\n  activateBreadcrumb: 'Activate breadcrumb',\n  /**\n   *@description A context menu item in the Minimap Breadcrumb context menu.\n   * This context menu option removed all the child breadcrumbs and activates\n   * the breadcrumb that the context menu was opened on.\n   */\n  removeChildBreadcrumbs: 'Remove child breadcrumbs',\n\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/BreadcrumbsUI.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// `initialBreadcrumb` is the first breadcrumb in the breadcrumbs linked list. Since\n// breadcrumbs are a linked list, the first breadcrumb is enought to be able to iterate through all of them.\n//\n// `activeBreadcrumb` is the currently active breadcrumb that the timeline is limited to.\nexport interface BreadcrumbsUIData {\n  initialBreadcrumb: Trace.Types.File.Breadcrumb;\n  activeBreadcrumb: Trace.Types.File.Breadcrumb;\n}\n\nexport class BreadcrumbActivatedEvent extends Event {\n  static readonly eventName = 'breadcrumbactivated';\n\n  constructor(public breadcrumb: Trace.Types.File.Breadcrumb, public childBreadcrumbsRemoved?: boolean) {\n    super(BreadcrumbActivatedEvent.eventName);\n  }\n}\n\nexport class BreadcrumbsUI extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n  #initialBreadcrumb: Trace.Types.File.Breadcrumb|null = null;\n  #activeBreadcrumb: Trace.Types.File.Breadcrumb|null = null;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [breadcrumbsUIStyles];\n  }\n\n  set data(data: BreadcrumbsUIData) {\n    this.#initialBreadcrumb = data.initialBreadcrumb;\n    this.#activeBreadcrumb = data.activeBreadcrumb;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #activateBreadcrumb(breadcrumb: Trace.Types.File.Breadcrumb): void {\n    this.#activeBreadcrumb = breadcrumb;\n    this.dispatchEvent(new BreadcrumbActivatedEvent(breadcrumb));\n  }\n\n  #showBreadcrumbsAndScrollLastCrumbIntoView(): void {\n    const container = this.#shadow.querySelector<HTMLDivElement>('.breadcrumbs');\n    if (!container) {\n      return;\n    }\n    // Display Breadcrumbs after at least one was created\n    container.style.display = 'flex';\n    requestAnimationFrame(() => {\n      // If the width of all the elements is greater than the width of the\n      // container, we need to scroll the last element into view.\n      if (container.scrollWidth - container.clientWidth > 0) {\n        requestAnimationFrame(() => {\n          // For some unknown reason, if we scroll after one rAF, the values\n          // are slightly off by a few pixels which means that the element does\n          // not get properly scrolled fully into view. Therefore we wait for a\n          // second rAF, at which point the values are correct and this will\n          // scroll the container fully to ensure the last breadcrumb is fully\n          // visible.\n          container.scrollLeft = container.scrollWidth - container.clientWidth;\n        });\n      }\n    });\n  }\n\n  #onContextMenu(event: Event, breadcrumb: Trace.Types.File.Breadcrumb): void {\n    const menu = new UI.ContextMenu.ContextMenu(event);\n\n    menu.defaultSection().appendItem(i18nString(UIStrings.activateBreadcrumb), () => {\n      this.dispatchEvent(new BreadcrumbActivatedEvent(breadcrumb));\n    });\n\n    menu.defaultSection().appendItem(i18nString(UIStrings.removeChildBreadcrumbs), () => {\n      this.dispatchEvent(new BreadcrumbActivatedEvent(breadcrumb, true));\n    });\n\n    void menu.show();\n  }\n\n  #renderElement(breadcrumb: Trace.Types.File.Breadcrumb, index: number): Lit.LitTemplate {\n    const breadcrumbRange = Trace.Helpers.Timing.microToMilli(breadcrumb.window.range);\n    // clang-format off\n    return html`\n          <div class=\"breadcrumb\" @contextmenu=${(event: Event) => this.#onContextMenu(event, breadcrumb)} @click=${() => this.#activateBreadcrumb(breadcrumb)}\n          jslog=${VisualLogging.item('timeline.breadcrumb-select').track({click: true})}>\n           <span class=\"${(breadcrumb === this.#activeBreadcrumb) ? 'active-breadcrumb' : ''} range\">\n            ${(index === 0) ?\n              `Full range (${i18n.TimeUtilities.preciseMillisToString(breadcrumbRange, 2)})` :\n              `${i18n.TimeUtilities.preciseMillisToString(breadcrumbRange, 2)}`}\n            </span>\n          </div>\n          ${breadcrumb.child !== null ?\n            html`\n            <devtools-icon .data=${{\n              iconName: 'chevron-right',\n              color: 'var(--icon-default)',\n              width: '16px',\n              height: '16px',\n            }}>`\n            : ''}\n      `;\n              // clang-format on\n  }\n\n  #render(): void {\n    // clang-format off\n    const output = html`\n      ${this.#initialBreadcrumb === null ? Lit.nothing : html`<div class=\"breadcrumbs\" jslog=${VisualLogging.section('breadcrumbs')}>\n        ${flattenBreadcrumbs(this.#initialBreadcrumb).map((breadcrumb, index) => this.#renderElement(breadcrumb, index))}\n      </div>`}\n    `;\n    // clang-format on\n    render(output, this.#shadow, {host: this});\n    if (this.#initialBreadcrumb?.child) {\n      // If we have >1 crumbs show breadcrumbs and ensure the last one is visible by scrolling the container.\n      this.#showBreadcrumbsAndScrollLastCrumbIntoView();\n    }\n  }\n}\n\ncustomElements.define('devtools-breadcrumbs-ui', BreadcrumbsUI);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-breadcrumbs-ui': BreadcrumbsUI;\n  }\n}\n"]}