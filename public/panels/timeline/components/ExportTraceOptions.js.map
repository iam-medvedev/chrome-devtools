{"version":3,"file":"ExportTraceOptions.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/ExportTraceOptions.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport exportTraceOptionsStyles from './exportTraceOptions.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text title for the Save performance trace dialog.\n   */\n  exportTraceOptionsDialogTitle: 'Save performance trace ',\n  /**\n   * @description Tooltip for the Save performance trace dialog.\n   */\n  showExportTraceOptionsDialogTitle: 'Save traceâ€¦',\n  /**\n   * @description Text for the include script content option.\n   */\n  includeScriptContent: 'Include script content',\n  /**\n   * @description Text for the include script source maps option.\n   */\n  includeSourcemap: 'Include script source maps',\n  /**\n   * @description Text for the include annotations option.\n   */\n  includeAnnotations: 'Include annotations',\n  /**\n   * @description Text for the save trace button\n   */\n  saveButtonTitle: 'Save',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/ExportTraceOptions.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface ExportTraceOptionsData {\n  onExport: (config: {\n    includeScriptContent: boolean,\n    includeSourceMaps: boolean,\n    addModifications: boolean,\n  }) => Promise<void>;\n  buttonEnabled: boolean;\n}\n\nexport type ExportTraceDialogState = Dialogs.Dialog.DialogState;\n\nexport interface ExportTraceOptionsState {\n  dialogState: ExportTraceDialogState;\n  includeAnnotations: boolean;\n  includeScriptContent: boolean;\n  includeSourceMaps: boolean;\n  displayAnnotationsCheckbox?: boolean;\n  displayScriptContentCheckbox?: boolean;\n  displaySourceMapsCheckbox?: boolean;\n}\n\nexport class ExportTraceOptions extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: ExportTraceOptionsData|null = null;\n\n  readonly #includeAnnotationsSettingString: string = 'export-performance-trace-include-annotations';\n  readonly #includeScriptContentSettingString: string = 'export-performance-trace-include-scripts';\n  readonly #includeSourceMapsSettingString: string = 'export-performance-trace-include-sourcemaps';\n\n  #includeAnnotationsSetting: Common.Settings.Setting<boolean> = Common.Settings.Settings.instance().createSetting(\n      this.#includeAnnotationsSettingString, true, Common.Settings.SettingStorageType.SESSION);\n  #includeScriptContentSetting: Common.Settings.Setting<boolean> = Common.Settings.Settings.instance().createSetting(\n      this.#includeScriptContentSettingString, false, Common.Settings.SettingStorageType.SESSION);\n  #includeSourceMapsSetting: Common.Settings.Setting<boolean> = Common.Settings.Settings.instance().createSetting(\n      this.#includeSourceMapsSettingString, false, Common.Settings.SettingStorageType.SESSION);\n\n  #state: ExportTraceOptionsState = {\n    dialogState: Dialogs.Dialog.DialogState.COLLAPSED,\n    includeAnnotations: this.#includeAnnotationsSetting.get(),\n    includeScriptContent: this.#includeScriptContentSetting.get(),\n    includeSourceMaps: this.#includeSourceMapsSetting.get(),\n  };\n\n  #includeAnnotationsCheckbox = UI.UIUtils.CheckboxLabel.create(\n      /* title*/ i18nString(UIStrings.includeAnnotations), /* checked*/ this.#state.includeAnnotations,\n      /* subtitle*/ undefined,\n      /* jslogContext*/ 'timeline.export-trace-options.annotations-checkbox');\n  #includeScriptContentCheckbox = UI.UIUtils.CheckboxLabel.create(\n      /* title*/ i18nString(UIStrings.includeScriptContent), /* checked*/ this.#state.includeScriptContent,\n      /* subtitle*/ undefined,\n      /* jslogContext*/ 'timeline.export-trace-options.script-content-checkbox');\n  #includeSourceMapsCheckbox = UI.UIUtils.CheckboxLabel.create(\n      /* title*/ i18nString(UIStrings.includeSourcemap), /* checked*/ this.#state.includeSourceMaps,\n      /* subtitle*/ undefined,\n      /* jslogContext*/ 'timeline.export-trace-options.source-maps-checkbox');\n\n  set data(data: ExportTraceOptionsData) {\n    this.#data = data;\n    this.#scheduleRender();\n  }\n\n  set state(state: ExportTraceOptionsState) {\n    this.#state = state;\n    this.#includeAnnotationsSetting.set(state.includeAnnotations);\n    this.#includeScriptContentSetting.set(state.includeScriptContent);\n    this.#includeSourceMapsSetting.set(state.includeSourceMaps);\n\n    this.#scheduleRender();\n  }\n\n  updateContentVisibility(annotationsExist: boolean): void {\n    const showIncludeScriptContentCheckbox =\n        Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.TIMELINE_ENHANCED_TRACES);\n    const showIncludeSourceMapCheckbox =\n        Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.TIMELINE_COMPILED_SOURCES);\n\n    const newState = Object.assign({}, this.#state, {\n      displayAnnotationsCheckbox: annotationsExist,\n      displayScriptContentCheckbox: showIncludeScriptContentCheckbox,\n      displaySourceMapsCheckbox: showIncludeSourceMapCheckbox\n    });\n\n    this.state = newState;\n  }\n\n  #scheduleRender(): void {\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #checkboxOptionChanged(checkboxWithLabel: UI.UIUtils.CheckboxLabel, checked: boolean): void {\n    const newState = Object.assign({}, this.#state, {dialogState: Dialogs.Dialog.DialogState.EXPANDED});\n\n    switch (checkboxWithLabel) {\n      case this.#includeAnnotationsCheckbox: {\n        newState.includeAnnotations = checked;\n        break;\n      }\n      case this.#includeScriptContentCheckbox: {\n        newState.includeScriptContent = checked;\n\n        // if the `Include Script` is checked off, cascade the change to `Include Script Source`\n        if (!newState.includeScriptContent) {\n          newState.includeSourceMaps = false;\n        }\n\n        break;\n      }\n      case this.#includeSourceMapsCheckbox: {\n        newState.includeSourceMaps = checked;\n        break;\n      }\n    }\n\n    this.state = newState;\n  }\n\n  #renderCheckbox(\n      checkboxWithLabel: UI.UIUtils.CheckboxLabel, title: Common.UIString.LocalizedString,\n      checked: boolean): Lit.TemplateResult {\n    UI.Tooltip.Tooltip.install(checkboxWithLabel, title);\n    checkboxWithLabel.ariaLabel = title;\n    checkboxWithLabel.checked = checked;\n    checkboxWithLabel.addEventListener(\n        'change', this.#checkboxOptionChanged.bind(this, checkboxWithLabel, !checked), false);\n\n    // Disable the includeSourceMapsSetting when the includeScriptContentSetting is also disabled.\n    this.#includeSourceMapsCheckbox.disabled = !this.#state.includeScriptContent;\n\n    // clang-format off\n      return html`\n        <div class='export-trace-options-row'>\n          ${checkboxWithLabel}\n        </div>\n      `;\n    // clang-format on\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('Export trace options dialog render was not scheduled');\n    }\n\n    const emptyDialog =\n        !(this.#state.displayAnnotationsCheckbox || this.#state.displayScriptContentCheckbox ||\n          this.#state.displaySourceMapsCheckbox);\n\n    // clang-format off\n    const output = html`\n      <style>${exportTraceOptionsStyles}</style>\n      <devtools-button-dialog class=\"export-trace-dialog\"\n      @click=${this.#onButtonDialogClick.bind(this)}\n      .data=${{\n          openOnRender: false,\n          jslogContext: 'timeline.export-trace-options',\n          variant: Buttons.Button.Variant.TOOLBAR,\n          iconName: 'download',\n          disabled: !this.#data?.buttonEnabled,\n          iconTitle: i18nString(UIStrings.showExportTraceOptionsDialogTitle),\n          horizontalAlignment: Dialogs.Dialog.DialogHorizontalAlignment.AUTO,\n          closeButton: false,\n          dialogTitle: i18nString(UIStrings.exportTraceOptionsDialogTitle),\n          state: emptyDialog ? Dialogs.Dialog.DialogState.DISABLED : this.#state.dialogState,\n        } as Dialogs.ButtonDialog.ButtonDialogData}>\n        <div class='export-trace-options-content'>\n          ${this.#state.displayAnnotationsCheckbox ? this.#renderCheckbox(this.#includeAnnotationsCheckbox,\n            i18nString(UIStrings.includeAnnotations),\n            this.#state.includeAnnotations): ''}\n          ${this.#state.displayScriptContentCheckbox ? this.#renderCheckbox(this.#includeScriptContentCheckbox,\n            i18nString(UIStrings.includeScriptContent), this.#state.includeScriptContent): ''}\n          ${this.#state.displayScriptContentCheckbox && this.#state.displaySourceMapsCheckbox ? this.#renderCheckbox(\n            this.#includeSourceMapsCheckbox, i18nString(UIStrings.includeSourcemap), this.#state.includeSourceMaps): ''}\n          <div class='export-trace-options-row'><div class='export-trace-blank'></div><devtools-button\n                  class=\"setup-button\"\n                  @click=${this.#onExportClick.bind(this)}\n                  .data=${{\n                    variant: Buttons.Button.Variant.PRIMARY,\n                    title: i18nString(UIStrings.saveButtonTitle),\n                  } as Buttons.Button.ButtonData}\n                >${i18nString(UIStrings.saveButtonTitle)}</devtools-button>\n                </div>\n        </div>\n      </devtools-button-dialog>\n    `;\n    // clang-format on\n    Lit.render(output, this.#shadow, {host: this});\n  }\n\n  async #onButtonDialogClick(): Promise<void> {\n    // Handles button dialog click. Either expands dialog with options or\n    // directly exports if no options available.\n    if (!(this.#state.displayAnnotationsCheckbox || this.#state.displayScriptContentCheckbox ||\n          this.#state.displaySourceMapsCheckbox)) {\n      void this.#onExportCallback();\n    } else {\n      this.state = Object.assign({}, this.#state, {dialogState: Dialogs.Dialog.DialogState.EXPANDED});\n    }\n  }\n\n  async #onExportCallback(): Promise<void> {\n    // Calls passed onExport function with current settings.\n    await this.#data?.onExport({\n      includeScriptContent: this.#state.includeScriptContent,\n      includeSourceMaps: this.#state.includeSourceMaps,\n      addModifications: this.#state.includeAnnotations\n    });\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.PerfPanelTraceExported);\n  }\n\n  async #onExportClick(): Promise<void> {\n    // Handles save button click that lived inside the dialog.\n    // Exports trace and collapses dialog.\n    await this.#onExportCallback();\n    this.state = Object.assign({}, this.#state, {dialogState: Dialogs.Dialog.DialogState.COLLAPSED});\n  }\n}\n\ncustomElements.define('devtools-perf-export-trace-options', ExportTraceOptions);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-perf-export-trace-options': ExportTraceOptions;\n  }\n}\n"]}