{"version":3,"file":"AnimationsTrackAppender.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/track_appenders/AnimationsTrackAppender.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as PerfUI from '../../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as ThemeSupport from '../../../ui/legacy/theme_support/theme_support.js';\nimport * as Timeline from '../timeline.js';\n\nfunction initTrackAppender(\n    flameChartData: PerfUI.FlameChart.FlameChartTimelineData, parsedTrace: Trace.Handlers.Types.ParsedTrace,\n    entryData: Trace.Types.Events.Event[], entryTypeByLevel: Timeline.TimelineFlameChartDataProvider.EntryType[]):\n    Timeline.AnimationsTrackAppender.AnimationsTrackAppender {\n  const entityMapper = new Timeline.Utils.EntityMapper.EntityMapper(parsedTrace);\n  const compatibilityTracksAppender = new Timeline.CompatibilityTracksAppender.CompatibilityTracksAppender(\n      flameChartData, parsedTrace, entryData, entryTypeByLevel, entityMapper);\n  return compatibilityTracksAppender.animationsTrackAppender();\n}\n\ndescribeWithEnvironment('AnimationsTrackAppender', function() {\n  let parsedTrace: Trace.Handlers.Types.ParsedTrace;\n  let animationsTrackAppender: Timeline.AnimationsTrackAppender.AnimationsTrackAppender;\n  let entryData: Trace.Types.Events.Event[] = [];\n  let flameChartData = PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n  let entryTypeByLevel: Timeline.TimelineFlameChartDataProvider.EntryType[] = [];\n\n  beforeEach(async function() {\n    ({parsedTrace} = await TraceLoader.traceEngine(this, 'animation.json.gz'));\n    animationsTrackAppender = initTrackAppender(flameChartData, parsedTrace, entryData, entryTypeByLevel);\n    animationsTrackAppender.appendTrackAtLevel(0);\n  });\n\n  afterEach(() => {\n    entryData = [];\n    flameChartData = PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n    entryTypeByLevel = [];\n  });\n\n  describe('appendTrackAtLevel', function() {\n    it('creates a flamechart group for the Animations track', function() {\n      assert.lengthOf(flameChartData.groups, 1);\n      assert.strictEqual(flameChartData.groups[0].name, 'Animations');\n    });\n\n    it('adds start times correctly', function() {\n      const animationsRequests = parsedTrace.Animations.animations;\n      for (let i = 0; i < animationsRequests.length; ++i) {\n        const event = animationsRequests[i];\n        assert.strictEqual(flameChartData.entryStartTimes[i], Trace.Helpers.Timing.microToMilli(event.ts));\n      }\n    });\n\n    it('adds total times correctly', function() {\n      const animationsRequests = parsedTrace.Animations.animations;\n      for (let i = 0; i < animationsRequests.length; i++) {\n        const event = animationsRequests[i];\n        if (Trace.Types.Events.isMarkerEvent(event)) {\n          assert.isNaN(flameChartData.entryTotalTimes[i]);\n          continue;\n        }\n        const expectedTotalTimeForEvent = event.dur ?\n            Trace.Helpers.Timing.microToMilli(event.dur) :\n            Timeline.TimelineFlameChartDataProvider.InstantEventVisibleDurationMs;\n        assert.strictEqual(flameChartData.entryTotalTimes[i], expectedTotalTimeForEvent);\n      }\n    });\n  });\n\n  describe('colorForEvent', function() {\n    before(() => {\n      // Rather than use the real colours here and burden the test with having to\n      // inject loads of CSS, we fake out the colours. this is fine for our tests as\n      // the exact value of the colours is not important; we just make sure that it\n      // parses them out correctly. Each variable is given a different rgb() value to\n      // ensure we know the code is working and using the right one.\n      const styleElement = document.createElement('style');\n      styleElement.id = 'fake-perf-panel-colors';\n      styleElement.textContent = `\n        :root {\n          --app-color-rendering: rgb(4 4 4);\n        }\n      `;\n      document.documentElement.appendChild(styleElement);\n      ThemeSupport.ThemeSupport.clearThemeCache();\n    });\n\n    after(() => {\n      const styleElementToRemove = document.documentElement.querySelector('#fake-perf-panel-colors');\n      if (styleElementToRemove) {\n        document.documentElement.removeChild(styleElementToRemove);\n      }\n      ThemeSupport.ThemeSupport.clearThemeCache();\n    });\n\n    it('returns the correct color GPU tasks', function() {\n      assert.strictEqual(animationsTrackAppender.colorForEvent(), 'rgb(4 4 4)');\n    });\n  });\n});\n"]}