{"version":3,"file":"AppenderUtils.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/track_appenders/AppenderUtils.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {defaultTraceEvent} from '../../../testing/TraceHelpers.js';\nimport type * as PerfUI from '../../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Timeline from '../timeline.js';\n\ndescribeWithEnvironment('AppenderUtils', () => {\n  const defaultGroupStyle = {\n    padding: 4,\n    height: 17,\n    collapsible: true,\n    // This color is same as --sys-color-on-surface in themeColors.css\n    color: 'rgb(31 31 31 / 100%)',\n    // This color is same as --sys-color-cdt-base-container in themeColors.css\n    backgroundColor: 'rgb(253 252 251 / 100%)',\n    nestingLevel: 0,\n    shareHeaderLine: true,\n  };\n\n  describe('buildGroupStyle', () => {\n    it('builds default GroupStyle correctly', () => {\n      const builtGroupStyle = Timeline.AppenderUtils.buildGroupStyle();\n      assert.deepEqual(builtGroupStyle, defaultGroupStyle);\n    });\n\n    it('builds GroupStyle with customized fields correctly', () => {\n      const gpuGroupStyle = {...defaultGroupStyle};\n      gpuGroupStyle.shareHeaderLine = false;\n\n      const builtGroupStyle = Timeline.AppenderUtils.buildGroupStyle({shareHeaderLine: false});\n      assert.deepEqual(builtGroupStyle, gpuGroupStyle);\n    });\n  });\n\n  describe('buildTrackHeader', () => {\n    const trackHeader = {\n      startLevel: 0,\n      name: 'Header Name',\n      style: defaultGroupStyle,\n      selectable: true,\n      expanded: true,\n      showStackContextMenu: true,\n      jslogContext: 'animations',\n    } as PerfUI.FlameChart.Group;\n\n    it('builds a track header correctly', () => {\n      const builtHeader = Timeline.AppenderUtils.buildTrackHeader(\n          Timeline.CompatibilityTracksAppender.VisualLoggingTrackName.ANIMATIONS,\n          /* startLevel= */ 0, 'Header Name', Timeline.AppenderUtils.buildGroupStyle(), /* selectable= */ true,\n          /* expanded= */ true, /* showStackContextMenu= */ true);\n      assert.deepEqual(builtHeader, trackHeader);\n    });\n  });\n\n  describe('getDurationWithSelf', () => {\n    // Helper method. Treat input as milliseconds\n    const getDurationWithSelf = (tot: number, self: number): string => {\n      const totalTime = Trace.Helpers.Timing.milliToMicro(Trace.Types.Timing.Milli(tot));\n      const selfTime = Trace.Helpers.Timing.milliToMicro(Trace.Types.Timing.Milli(self));\n      return Timeline.AppenderUtils.getDurationString(totalTime, selfTime);\n    };\n\n    it('returns the time info for a entry with no duration correctly', async () => {\n      const totalTime = Trace.Types.Timing.Micro(0);\n      const formattedTime = Timeline.AppenderUtils.getDurationString(totalTime);\n      assert.strictEqual(formattedTime, '');\n    });\n\n    it('returns the time info for given total time correctly', async () => {\n      const totalTime = Trace.Types.Timing.Micro(10000);\n      const formattedTime = Timeline.AppenderUtils.getDurationString(totalTime);\n      // The i18n encodes spaces using the u00A0 unicode character.\n      assert.strictEqual(formattedTime, '10.00\\u00A0ms');\n    });\n\n    it('returns the time info for given total time and self time correctly', async () => {\n      const totalTime = Trace.Types.Timing.Micro(10000);\n      const selfTime = Trace.Types.Timing.Micro(1000);\n      const formattedTime = Timeline.AppenderUtils.getDurationString(totalTime, selfTime);\n      // The i18n encodes spaces using the \\u00A0 unicode character, aka \\xA0\n      assert.strictEqual(formattedTime, '10.00\\u00A0ms (self 1.00\\u00A0ms)');\n    });\n\n    it('returns the time info for same total time and self time correctly', async () => {\n      const totalTime = Trace.Types.Timing.Micro(10000);\n      const selfTime = Trace.Types.Timing.Micro(10000);\n      const formattedTime = Timeline.AppenderUtils.getDurationString(totalTime, selfTime);\n      assert.strictEqual(formattedTime, '10.00\\u00A0ms');\n    });\n\n    it('has appropriate rounding', () => {\n      const getFormattedTime = getDurationWithSelf;  // For clearer diff\n\n      assert.strictEqual(getFormattedTime(10, 9), '10.00\\u00A0ms (self 9.00\\u00A0ms)');\n      assert.strictEqual(getFormattedTime(10, 9.99), '10.00\\u00A0ms (self 9.99\\u00A0ms)');\n      assert.strictEqual(getFormattedTime(10, 9.999), '10.00\\u00A0ms (self 10.00\\u00A0ms)');\n      assert.strictEqual(getFormattedTime(10, 9.9999), '10.00\\u00A0ms (self 10.00\\u00A0ms)');\n\n      assert.strictEqual(getFormattedTime(8.9, 7), '8.90\\u00A0ms (self 7.00\\u00A0ms)');\n      assert.strictEqual(getFormattedTime(8.99, 7), '8.99\\u00A0ms (self 7.00\\u00A0ms)');\n      assert.strictEqual(getFormattedTime(8.999, 7), '9.00\\u00A0ms (self 7.00\\u00A0ms)');\n    });\n\n    it('selfTime is omitted if we hit minSignificance', async () => {\n      const getFormattedTime = getDurationWithSelf;  // For clearer diff\n      // Total and self are really close (we always show)\n      assert.strictEqual(getFormattedTime(5, 5.00001), '5.00\\u00A0ms (self 5.00\\u00A0ms)');\n      assert.strictEqual(getFormattedTime(5, 5.000001), '5.00\\u00A0ms (self 5.00\\u00A0ms)');\n      assert.strictEqual(getFormattedTime(5, 5.0000001), '5.00\\u00A0ms');  // minSignificance hit!\n\n      // The self is almost zero\n      assert.strictEqual(getFormattedTime(10, 0.1), '10.00\\u00A0ms (self 0.10\\u00A0ms)');\n      assert.strictEqual(getFormattedTime(10, 0.01), '10.00\\u00A0ms (self 10\\u00A0μs)');\n      assert.strictEqual(getFormattedTime(10, 0.001), '10.00\\u00A0ms (self 1\\u00A0μs)');\n      assert.strictEqual(getFormattedTime(10, 0.0001), '10.00\\u00A0ms (self 0\\u00A0μs)');\n      assert.strictEqual(getFormattedTime(10, 0.00001), '10.00\\u00A0ms (self 0\\u00A0μs)');\n      assert.strictEqual(getFormattedTime(10, 0.000001), '10.00\\u00A0ms');  // minSignificance hit!\n    });\n  });\n\n  describe('getEventLevel', () => {\n    it('returns the level for async events correctly', async () => {\n      const lastTimestampByLevel: Timeline.AppenderUtils.LastTimestampByLevel = [];\n      const eventOne = {\n        ...defaultTraceEvent,\n        ts: Trace.Types.Timing.Micro(0),\n        dur: Trace.Types.Timing.Micro(10),\n      };\n      const eventTwo = {\n        ...defaultTraceEvent,\n        ts: Trace.Types.Timing.Micro(5),\n        dur: Trace.Types.Timing.Micro(10),\n      };\n      const eventThree = {\n        ...defaultTraceEvent,\n        ts: Trace.Types.Timing.Micro(20),\n        dur: Trace.Types.Timing.Micro(10),\n      };\n\n      let level = Timeline.AppenderUtils.getEventLevel(eventOne, lastTimestampByLevel);\n      // For first event, the track is empty, so it always returns 0.\n      assert.strictEqual(level, 0);\n\n      level = Timeline.AppenderUtils.getEventLevel(eventTwo, lastTimestampByLevel);\n      // For eventTwo, its start time is smaller than eventOne's end time, so it should be appended to level 1.\n      assert.strictEqual(level, 1);\n\n      level = Timeline.AppenderUtils.getEventLevel(eventThree, lastTimestampByLevel);\n      // For eventThree, it doesn't overlap with eventOne, so it can fit in level 0.\n      assert.strictEqual(level, 0);\n    });\n\n    it('returns the level for sync events correctly', async () => {\n      const lastTimestampByLevel: Timeline.AppenderUtils.LastTimestampByLevel = [];\n      const eventOne = {\n        ...defaultTraceEvent,\n        ts: Trace.Types.Timing.Micro(0),\n        dur: Trace.Types.Timing.Micro(30),\n      };\n      const eventTwo = {\n        ...defaultTraceEvent,\n        ts: Trace.Types.Timing.Micro(5),\n        dur: Trace.Types.Timing.Micro(10),\n      };\n      const eventThree = {\n        ...defaultTraceEvent,\n        ts: Trace.Types.Timing.Micro(10),\n        dur: Trace.Types.Timing.Micro(2),\n      };\n      const eventFour = {\n        ...defaultTraceEvent,\n        ts: Trace.Types.Timing.Micro(20),\n        dur: Trace.Types.Timing.Micro(10),\n      };\n\n      let level = Timeline.AppenderUtils.getEventLevel(eventOne, lastTimestampByLevel);\n      // For first event, the track is empty, so it always returns 0.\n      assert.strictEqual(level, 0);\n\n      level = Timeline.AppenderUtils.getEventLevel(eventTwo, lastTimestampByLevel);\n      // For eventTwo, its time is a subset of the eventOne, so it will be append as eventOne's child.\n      assert.strictEqual(level, 1);\n\n      level = Timeline.AppenderUtils.getEventLevel(eventThree, lastTimestampByLevel);\n      // For eventTwo, its time is a subset of the eventTwo, so it will be append as eventTwo's child.\n      assert.strictEqual(level, 2);\n\n      level = Timeline.AppenderUtils.getEventLevel(eventFour, lastTimestampByLevel);\n      // For eventFour, its time is a subset of eventOne but not eventTwo, so it will be append as eventTwo's child.\n      assert.strictEqual(level, 1);\n    });\n  });\n});\n"]}