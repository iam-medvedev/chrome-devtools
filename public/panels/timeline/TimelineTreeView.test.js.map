{"version":3,"file":"TimelineTreeView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineTreeView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\n\nimport * as Timeline from './timeline.js';\n\nconst {assert} = chai;\n\nclass MockViewDelegate implements Timeline.TimelinePanel.TimelineModeViewDelegate {\n  select(_selection: Timeline.TimelineSelection.TimelineSelection|null): void {\n  }\n  selectEntryAtTime(_events: TraceEngine.Types.TraceEvents.TraceEventData[]|null, _time: number): void {\n  }\n  highlightEvent(_event: TraceEngine.Legacy.CompatibleTraceEvent|null): void {\n  }\n}\n\ndescribeWithEnvironment('TimelineTreeView', function() {\n  const mockViewDelegate = new MockViewDelegate();\n  describe('EventsTimelineTreeView', function() {\n    it('Creates a tree from nestable async events', async function() {\n      const data = await TraceLoader.allModels(this, 'sync-like-timings.json.gz');\n      const eventTreeView = new Timeline.EventsTimelineTreeView.EventsTimelineTreeView(mockViewDelegate);\n      const consoleTimings = [...data.traceParsedData.UserTimings.consoleTimings];\n      eventTreeView.setModelWithEvents(data.performanceModel, consoleTimings, data.traceParsedData);\n      const tree = eventTreeView.buildTree();\n      const topNodesIterator = tree.children().values();\n      const firstNode = topNodesIterator.next().value as TimelineModel.TimelineProfileTree.Node;\n      assert.strictEqual(firstNode.event?.name, 'first console time');\n\n      const secondNode = topNodesIterator.next().value as TimelineModel.TimelineProfileTree.Node;\n      assert.strictEqual(secondNode.event?.name, 'third console time');\n\n      const bottomNode = firstNode.children().values().next().value as TimelineModel.TimelineProfileTree.Node;\n      assert.strictEqual(bottomNode.event?.name, 'second console time');\n    });\n    it('shows instant events as nodes', async function() {\n      const data = await TraceLoader.allModels(this, 'user-timings.json.gz');\n      const eventTreeView = new Timeline.EventsTimelineTreeView.EventsTimelineTreeView(mockViewDelegate);\n      const consoleTimings = [...data.traceParsedData.UserTimings.performanceMarks];\n      eventTreeView.setModelWithEvents(data.performanceModel, consoleTimings, data.traceParsedData);\n      const tree = eventTreeView.buildTree();\n      const topNodesIterator = tree.children().values();\n      const firstNode = topNodesIterator.next().value as TimelineModel.TimelineProfileTree.Node;\n      assert.strictEqual(firstNode.event?.name, 'mark1');\n\n      const secondNode = topNodesIterator.next().value as TimelineModel.TimelineProfileTree.Node;\n      assert.strictEqual(secondNode.event?.name, 'mark3');\n    });\n  });\n  describe('BottomUpTimelineTreeView', function() {\n    it('Creates a bottom up tree from nestable events', async function() {\n      const data = await TraceLoader.allModels(this, 'sync-like-timings.json.gz');\n      const bottomUpTreeView = new Timeline.TimelineTreeView.BottomUpTimelineTreeView();\n      const consoleTimings = [...data.traceParsedData.UserTimings.consoleTimings];\n      const startTime =\n          TraceEngine.Helpers.Timing.microSecondsToMilliseconds(data.traceParsedData.Meta.traceBounds.min);\n      const endTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(data.traceParsedData.Meta.traceBounds.max);\n      bottomUpTreeView.setRange(startTime, endTime);\n      bottomUpTreeView.setModelWithEvents(data.performanceModel, consoleTimings, data.traceParsedData);\n\n      const tree = bottomUpTreeView.buildTree();\n      const topNodesIterator = tree.children().values();\n      const firstNode = topNodesIterator.next().value as TimelineModel.TimelineProfileTree.Node;\n      assert.strictEqual(firstNode.event?.name, 'second console time');\n\n      const secondNode = topNodesIterator.next().value as TimelineModel.TimelineProfileTree.Node;\n      assert.strictEqual(secondNode.event?.name, 'first console time');\n\n      const thirdNode = topNodesIterator.next().value as TimelineModel.TimelineProfileTree.Node;\n      assert.strictEqual(thirdNode.event?.name, 'third console time');\n\n      const childNode = firstNode.children().values().next().value as TimelineModel.TimelineProfileTree.Node;\n      assert.strictEqual(childNode.event?.name, 'first console time');\n    });\n  });\n  describe('CallTreeTimelineTreeView', function() {\n    it('Creates a call tree from nestable events', async function() {\n      const data = await TraceLoader.allModels(this, 'sync-like-timings.json.gz');\n      const callTreeView = new Timeline.TimelineTreeView.CallTreeTimelineTreeView();\n      const consoleTimings = [...data.traceParsedData.UserTimings.consoleTimings];\n      const startTime =\n          TraceEngine.Helpers.Timing.microSecondsToMilliseconds(data.traceParsedData.Meta.traceBounds.min);\n      const endTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(data.traceParsedData.Meta.traceBounds.max);\n      callTreeView.setRange(startTime, endTime);\n      callTreeView.setModelWithEvents(data.performanceModel, consoleTimings, data.traceParsedData);\n\n      const tree = callTreeView.buildTree();\n      const topNodesIterator = tree.children().values();\n      const firstNode = topNodesIterator.next().value as TimelineModel.TimelineProfileTree.Node;\n      assert.strictEqual(firstNode.event?.name, 'first console time');\n\n      const secondNode = topNodesIterator.next().value as TimelineModel.TimelineProfileTree.Node;\n      assert.strictEqual(secondNode.event?.name, 'third console time');\n\n      const childNode = firstNode.children().values().next().value as TimelineModel.TimelineProfileTree.Node;\n      assert.strictEqual(childNode.event?.name, 'second console time');\n    });\n  });\n  describe('event groupping', function() {\n    it('groups events by category in the Call Tree view', async function() {\n      const data = await TraceLoader.allModels(this, 'sync-like-timings.json.gz');\n      const callTreeView = new Timeline.TimelineTreeView.CallTreeTimelineTreeView();\n      const consoleTimings = [...data.traceParsedData.UserTimings.consoleTimings];\n      const startTime =\n          TraceEngine.Helpers.Timing.microSecondsToMilliseconds(data.traceParsedData.Meta.traceBounds.min);\n      const endTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(data.traceParsedData.Meta.traceBounds.max);\n      callTreeView.setRange(startTime, endTime);\n      callTreeView.setGroupBySettingForTests(Timeline.TimelineTreeView.AggregatedTimelineTreeView.GroupBy.Category);\n      callTreeView.setModelWithEvents(data.performanceModel, consoleTimings, data.traceParsedData);\n      const tree = callTreeView.buildTree();\n      const treeEntries = tree.children().entries();\n      const groupEntry = treeEntries.next();\n      const nodeName = groupEntry.value[0];\n      const node = groupEntry.value[1];\n      assert.strictEqual(nodeName, 'scripting');\n      assert.strictEqual(callTreeView.displayInfoForGroupNode(node).color, 'rgb(250 204 21 / 100%)');\n\n      assert.isTrue(node.isGroupNode());\n      const children = node.children().values();\n      assert.strictEqual(children.next().value.event.name, 'first console time');\n      assert.strictEqual(children.next().value.event.name, 'third console time');\n    });\n    it('groups events by category in the Call Tree view', async function() {\n      const data = await TraceLoader.allModels(this, 'sync-like-timings.json.gz');\n      const callTreeView = new Timeline.TimelineTreeView.BottomUpTimelineTreeView();\n      const consoleTimings = [...data.traceParsedData.UserTimings.consoleTimings];\n      const startTime =\n          TraceEngine.Helpers.Timing.microSecondsToMilliseconds(data.traceParsedData.Meta.traceBounds.min);\n      const endTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(data.traceParsedData.Meta.traceBounds.max);\n      callTreeView.setRange(startTime, endTime);\n      callTreeView.setGroupBySettingForTests(Timeline.TimelineTreeView.AggregatedTimelineTreeView.GroupBy.Category);\n      callTreeView.setModelWithEvents(data.performanceModel, consoleTimings, data.traceParsedData);\n      const tree = callTreeView.buildTree();\n      const treeEntries = tree.children().entries();\n      const groupEntry = treeEntries.next();\n      const nodeName = groupEntry.value[0];\n      const node = groupEntry.value[1];\n      assert.strictEqual(nodeName, 'scripting');\n      assert.strictEqual(callTreeView.displayInfoForGroupNode(node).color, 'rgb(250 204 21 / 100%)');\n\n      assert.isTrue(node.isGroupNode());\n      const children = node.children().values();\n      assert.strictEqual(children.next().value.event.name, 'second console time');\n      assert.strictEqual(children.next().value.event.name, 'first console time');\n      assert.strictEqual(children.next().value.event.name, 'third console time');\n    });\n  });\n});\n"]}