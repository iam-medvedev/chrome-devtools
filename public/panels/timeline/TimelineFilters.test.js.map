{"version":3,"file":"TimelineFilters.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineFilters.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {getMainThread} from '../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\n\nimport * as Timeline from './timeline.js';\n\ndescribeWithEnvironment('TimelineFilters', () => {\n  describe('IsLong', () => {\n    it('returns true if the event is longer than the defined duration for a new engine event', async function() {\n      const {data} = await TraceLoader.traceEngine(this, 'one-second-interaction.json.gz');\n      const longEvent = getMainThread(data.Renderer).entries.find(event => {\n        return event.dur && event.dur > Trace.Helpers.Timing.milliToMicro(Trace.Types.Timing.Milli(50));\n      });\n      if (!longEvent) {\n        throw new Error('Could not find expected long event.');\n      }\n\n      const filter = new Timeline.TimelineFilters.IsLong();\n      filter.setMinimumRecordDuration(Trace.Types.Timing.Milli(50));\n      assert.isTrue(filter.accept(longEvent));\n    });\n\n    it('returns false if the event is shorter than the defined duration for a new engine event', async function() {\n      const {data} = await TraceLoader.traceEngine(this, 'one-second-interaction.json.gz');\n      const longEvent = getMainThread(data.Renderer).entries.find(event => {\n        return event.dur && event.dur > Trace.Helpers.Timing.milliToMicro(Trace.Types.Timing.Milli(50)) &&\n            event.dur < Trace.Helpers.Timing.milliToMicro(Trace.Types.Timing.Milli(100));\n      });\n      if (!longEvent) {\n        throw new Error('Could not find expected long event.');\n      }\n\n      const filter = new Timeline.TimelineFilters.IsLong();\n      filter.setMinimumRecordDuration(Trace.Types.Timing.Milli(101));\n      assert.isFalse(filter.accept(longEvent));\n    });\n  });\n\n  describe('Category', () => {\n    it('returns false for a new event if it has a category that is hidden', async function() {\n      const {data} = await TraceLoader.traceEngine(this, 'user-timings.json.gz');\n      // These events are usually visible, so make the category hidden before\n      // running this test.\n      Trace.Styles.getCategoryStyles()['scripting'].hidden = true;\n\n      const userTimingEvent = data.UserTimings.performanceMeasures.at(0);\n      if (!userTimingEvent) {\n        throw new Error('Could not find expected event.');\n      }\n      const filter = new Timeline.TimelineFilters.Category();\n      assert.isFalse(filter.accept(userTimingEvent));\n      Trace.Styles.getCategoryStyles()['scripting'].hidden = false;\n    });\n\n    it('returns true for a new event if it has a category that is visible', async function() {\n      const {data} = await TraceLoader.traceEngine(this, 'user-timings.json.gz');\n      const userTimingEvent = data.UserTimings.performanceMeasures.at(0);\n      if (!userTimingEvent) {\n        throw new Error('Could not find expected event.');\n      }\n      const filter = new Timeline.TimelineFilters.Category();\n      assert.isTrue(filter.accept(userTimingEvent));\n      Trace.Styles.getCategoryStyles()['scripting'].hidden = false;\n    });\n  });\n});\n"]}