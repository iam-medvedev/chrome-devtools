{"version":3,"file":"ThirdPartyTreeView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/ThirdPartyTreeView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../models/trace/trace.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Timeline from './timeline.js';\n\ndescribeWithEnvironment('Third party tree', function() {\n  it('does not select the first row by default', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const treeView = new Timeline.ThirdPartyTreeView.ThirdPartyTreeViewWidget();\n    const mapper = new Trace.EntityMapper.EntityMapper(parsedTrace);\n    const events = [...mapper.mappings().eventsByEntity.values()].flat();\n    treeView.setModelWithEvents(events, parsedTrace, mapper);\n    const sel: Timeline.TimelineSelection.TimeRangeSelection = {\n      bounds: parsedTrace.data.Meta.traceBounds,\n    };\n    const box = new UI.Widget.VBox();\n    treeView.show(box.element);\n    treeView.updateContents(sel);\n    assert.isNull(treeView.dataGrid.selectedNode);\n  });\n\n  it('hides the table if there are no events', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const mapper = new Trace.EntityMapper.EntityMapper(parsedTrace);\n    const treeView = new Timeline.ThirdPartyTreeView.ThirdPartyTreeViewWidget();\n    renderElementIntoDOM(treeView);\n    treeView.setModelWithEvents(null, parsedTrace, mapper);\n    assert.isTrue(treeView.element.classList.contains('empty-table'));\n\n    const events = [...mapper.mappings().eventsByEntity.values()].flat();\n    treeView.setModelWithEvents(events, parsedTrace, mapper);\n    assert.isFalse(treeView.element.classList.contains('empty-table'));\n\n    treeView.setModelWithEvents([], parsedTrace, mapper);\n    assert.isTrue(treeView.element.classList.contains('empty-table'));\n  });\n\n  it('includes 1p and extension badges', async function() {\n    // This trace creates 2 nodes in the tree. One representing the first party entity, and one for\n    // a chrome extension.\n    const parsedTrace = await TraceLoader.traceEngine(this, 'extension-tracks-and-marks.json.gz');\n    const treeView = new Timeline.ThirdPartyTreeView.ThirdPartyTreeViewWidget();\n    const mapper = new Trace.EntityMapper.EntityMapper(parsedTrace);\n    const events = [...mapper.mappings().eventsByEntity.values()].flat();\n\n    treeView.setModelWithEvents(events, parsedTrace, mapper);\n    const sel: Timeline.TimelineSelection.TimeRangeSelection = {\n      bounds: parsedTrace.data.Meta.traceBounds,\n    };\n    treeView.updateContents(sel);\n    const tree = treeView.buildTree() as Trace.Extras.TraceTree.BottomUpRootNode;\n    const topNodesIterator = [...tree.children().values()].flat();\n\n    // Node with ext\n    const firstNode = topNodesIterator[0];\n    assert.strictEqual(firstNode.id.toString(), 'ienfalfjdbdpebioblfackkekamfmbnh');\n\n    const extensionNode = new Timeline.TimelineTreeView.TreeGridNode(\n        firstNode, firstNode.totalTime, firstNode.selfTime, firstNode.totalTime, treeView);\n    const extEntity = extensionNode?.createCell('site');\n\n    let gotBadgeName = extEntity.querySelector<HTMLTableRowElement>('.entity-badge')?.textContent || '';\n    assert.strictEqual(gotBadgeName, 'Extension');\n\n    // Node with first party\n    const secondNode = topNodesIterator[1];\n    assert.strictEqual(secondNode.id.toString(), 'localhost');\n\n    const firstPartyNode = new Timeline.TimelineTreeView.TreeGridNode(\n        secondNode, secondNode.totalTime, secondNode.selfTime, secondNode.totalTime, treeView);\n    const firstPartyEntity = firstPartyNode?.createCell('site');\n\n    gotBadgeName = firstPartyEntity.querySelector<HTMLTableRowElement>('.entity-badge')?.textContent || '';\n    assert.strictEqual(gotBadgeName, '1st party');\n  });\n});\n"]}