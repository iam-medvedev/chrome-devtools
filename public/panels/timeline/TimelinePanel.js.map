{"version":3,"file":"TimelinePanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelinePanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n * Copyright (C) 2012 Intel Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as AiAssistanceModel from '../../models/ai_assistance/ai_assistance.js';\nimport * as Badges from '../../models/badges/badges.js';\nimport * as CrUXManager from '../../models/crux-manager/crux-manager.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as SourceMapsResolver from '../../models/trace_source_maps_resolver/trace_source_maps_resolver.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as Tracing from '../../services/tracing/tracing.js';\nimport * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as Dialogs from '../../ui/components/dialogs/dialogs.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as Snackbars from '../../ui/components/snackbars/snackbars.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\n\nimport {ActiveFilters} from './ActiveFilters.js';\nimport * as AnnotationHelpers from './AnnotationHelpers.js';\nimport {TraceLoadEvent} from './BenchmarkEvents.js';\nimport * as TimelineComponents from './components/components.js';\nimport * as TimelineInsights from './components/insights/insights.js';\nimport {IsolateSelector} from './IsolateSelector.js';\nimport {AnnotationModifiedEvent, ModificationsManager} from './ModificationsManager.js';\nimport * as Overlays from './overlays/overlays.js';\nimport {traceJsonGenerator} from './SaveFileFormatter.js';\nimport {StatusDialog} from './StatusDialog.js';\nimport {type Client, TimelineController} from './TimelineController.js';\nimport {Tab} from './TimelineDetailsView.js';\nimport type {TimelineFlameChartDataProvider} from './TimelineFlameChartDataProvider.js';\nimport {Events as TimelineFlameChartViewEvents, TimelineFlameChartView} from './TimelineFlameChartView.js';\nimport {TimelineHistoryManager} from './TimelineHistoryManager.js';\nimport {TimelineLoader} from './TimelineLoader.js';\nimport {TimelineMiniMap} from './TimelineMiniMap.js';\nimport timelinePanelStyles from './timelinePanel.css.js';\nimport {\n  rangeForSelection,\n  selectionFromEvent,\n  selectionIsRange,\n  selectionsEqual,\n  type TimelineSelection,\n} from './TimelineSelection.js';\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\nimport {createHiddenTracksOverlay} from './TrackConfigBanner.js';\nimport {UIDevtoolsController} from './UIDevtoolsController.js';\nimport {UIDevtoolsUtils} from './UIDevtoolsUtils.js';\nimport * as Utils from './utils/utils.js';\n\nconst UIStrings = {\n  /**\n   * @description Text that appears when user drag and drop something (for example, a file) in Timeline Panel of the Performance panel\n   */\n  dropTimelineFileOrUrlHere: 'Drop trace file or URL here',\n  /**\n   * @description Title of disable capture jsprofile setting in timeline panel of the performance panel\n   */\n  disableJavascriptSamples: 'Disable JavaScript samples',\n  /**\n   *@description Title of capture layers and pictures setting in timeline panel of the performance panel\n   */\n  enableAdvancedPaint: 'Enable advanced paint instrumentation (slow)',\n  /**\n   * @description Title of CSS selector stats setting in timeline panel of the performance panel\n   */\n  enableSelectorStats: 'Enable CSS selector stats (slow)',\n  /**\n   * @description Title of show screenshots setting in timeline panel of the performance panel\n   */\n  screenshots: 'Screenshots',\n  /**\n   * @description Text for the memory of the page\n   */\n  memory: 'Memory',\n  /**\n   * @description Text to clear content\n   */\n  clear: 'Clear',\n  /**\n   * @description A label for a button that fixes something.\n   */\n  fixMe: 'Fix me',\n  /**\n   * @description Tooltip text that appears when hovering over the largeicon load button\n   */\n  loadTrace: 'Load trace…',\n  /**\n   * @description Text to take screenshots\n   */\n  captureScreenshots: 'Capture screenshots',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  showMemoryTimeline: 'Show memory timeline',\n  /**\n   * @description Tooltip text that appears when hovering over the largeicon settings gear in show settings pane setting in timeline panel of the performance panel\n   */\n  captureSettings: 'Capture settings',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  disablesJavascriptSampling: 'Disables JavaScript sampling, reduces overhead when running against mobile devices',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  capturesAdvancedPaint: 'Captures advanced paint instrumentation, introduces significant performance overhead',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  capturesSelectorStats: 'Captures CSS selector statistics',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  network: 'Network:',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  cpu: 'CPU:',\n  /**\n   * @description Title of the 'Network conditions' tool in the bottom drawer\n   */\n  networkConditions: 'Network conditions',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  CpuThrottlingIsEnabled: '- CPU throttling is enabled',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  NetworkThrottlingIsEnabled: '- Network throttling is enabled',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  SignificantOverheadDueToPaint: '- Significant overhead due to paint instrumentation',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  SelectorStatsEnabled: '- Selector stats is enabled',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  JavascriptSamplingIsDisabled: '- JavaScript sampling is disabled',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  stoppingTimeline: 'Stopping timeline…',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  received: 'Received',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  processed: 'Processed',\n  /**\n   * @description Text to close something\n   */\n  close: 'Close',\n  /**\n   * @description Status text to indicate the recording has failed in the Performance panel\n   */\n  recordingFailed: 'Recording failed',\n  /**\n   * @description Status text to indicate that exporting the trace has failed\n   */\n  exportingFailed: 'Exporting the trace failed',\n  /**\n   * @description Text to indicate the progress of a trace. Informs the user that we are currently\n   * creating a performance trace.\n   */\n  tracing: 'Tracing…',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  bufferUsage: 'Buffer usage',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  loadingTrace: 'Loading trace…',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  processingTrace: 'Processing trace…',\n  /**\n   * @description Text in Timeline Panel of the Performance panel\n   */\n  initializingTracing: 'Initializing tracing…',\n  /**\n   * @description Tooltip description for a checkbox that toggles the visibility of data added by extensions of this panel (Performance).\n   */\n  showDataAddedByExtensions: 'Show data added by extensions of the Performance panel',\n  /**\n   * Label for a checkbox that toggles the visibility of data added by extensions of this panel (Performance).\n   */\n  showCustomtracks: 'Show custom tracks',\n\n  /**\n   * @description Tooltip for the the sidebar toggle in the Performance panel. Command to open/show the sidebar.\n   */\n  showSidebar: 'Show sidebar',\n  /**\n   * @description Tooltip for the the sidebar toggle in the Performance panel. Command to close the sidebar.\n   */\n  hideSidebar: 'Hide sidebar',\n  /**\n   * @description Screen reader announcement when the sidebar is shown in the Performance panel.\n   */\n  sidebarShown: 'Performance sidebar shown',\n  /**\n   * @description Screen reader announcement when the sidebar is hidden in the Performance panel.\n   */\n  sidebarHidden: 'Performance sidebar hidden',\n  /**\n   * @description Screen reader announcement when the user clears their selection\n   */\n  selectionCleared: 'Selection cleared',\n  /**\n   * @description Screen reader announcement when the user selects a frame.\n   */\n  frameSelected: 'Frame selected',\n  /**\n   * @description Screen reader announcement when the user selects a trace event.\n   * @example {Paint} PH1\n   */\n  eventSelected: 'Event {PH1} selected',\n  /**\n   * @description Text of a hyperlink to documentation.\n   */\n  learnMore: 'Learn more',\n  /**\n   * @description Tooltip text for a button that takes the user back to the default view which shows performance metrics that are live.\n   */\n  backToLiveMetrics: 'Go back to the live metrics page',\n  /**\n   * @description Description of the Timeline zoom keyboard instructions that appear in the shortcuts dialog\n   */\n  timelineZoom: 'Zoom',\n  /**\n   * @description Description of the Timeline scrolling & panning instructions that appear in the shortcuts dialog.\n   */\n  timelineScrollPan: 'Scroll & Pan',\n  /**\n   * @description Title for the Dim 3rd Parties checkbox.\n   */\n  dimThirdParties: 'Dim 3rd parties',\n  /**\n   * @description Description for the Dim 3rd Parties checkbox tooltip describing how 3rd parties are classified.\n   */\n  thirdPartiesByThirdPartyWeb: '3rd parties classified by third-party-web',\n  /**\n   * @description Title of the shortcuts dialog shown to the user that lists keyboard shortcuts.\n   */\n  shortcutsDialogTitle: 'Keyboard shortcuts for flamechart',\n  /**\n   * @description Notification shown to the user whenever DevTools receives an external request.\n   */\n  externalRequestReceived: '`DevTools` received an external request',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelinePanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet timelinePanelInstance: TimelinePanel|undefined;\nlet isNode: boolean;\n\n/**\n * Represents the states that the timeline panel can be in.\n * If you need to change the panel's view, use the {@see #changeView} method.\n * Note that we do not represent the \"Loading/Processing\" view here. The\n * StatusPane is managed in the code that handles file import/recording, and\n * when it is visible it is rendered on top of the UI so obscures what is behind\n * it. When it completes, we will set the view mode to the trace that has been\n * loaded.\n */\ntype ViewMode = {\n  mode: 'LANDING_PAGE',\n}|{\n  mode: 'VIEWING_TRACE',\n  traceIndex: number,\n  forceOpenSidebar: boolean,\n}|{\n  mode: 'STATUS_PANE_OVERLAY',\n};\n\nexport class TimelinePanel extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Panel.Panel>(UI.Panel.Panel)\n    implements Client, TimelineModeViewDelegate {\n  private readonly dropTarget: UI.DropTarget.DropTarget;\n  private readonly recordingOptionUIControls: UI.Toolbar.ToolbarItem[];\n  private state: State;\n  private recordingPageReload: boolean;\n  private readonly millisecondsToRecordAfterLoadEvent: number;\n  private readonly toggleRecordAction: UI.ActionRegistration.Action;\n  private readonly recordReloadAction: UI.ActionRegistration.Action;\n  readonly #historyManager: TimelineHistoryManager;\n  private disableCaptureJSProfileSetting: Common.Settings.Setting<boolean>;\n  private readonly captureLayersAndPicturesSetting: Common.Settings.Setting<boolean>;\n  private readonly captureSelectorStatsSetting: Common.Settings.Setting<boolean>;\n  readonly #thirdPartyTracksSetting: Common.Settings.Setting<boolean>;\n  private showScreenshotsSetting: Common.Settings.Setting<boolean>;\n  private showMemorySetting: Common.Settings.Setting<boolean>;\n  private readonly panelToolbar: UI.Toolbar.Toolbar;\n  private readonly panelRightToolbar: UI.Toolbar.Toolbar;\n  private readonly timelinePane: UI.Widget.VBox;\n  readonly #minimapComponent = new TimelineMiniMap();\n  #viewMode: ViewMode = {mode: 'LANDING_PAGE'};\n  readonly #dimThirdPartiesSetting: Common.Settings.Setting<boolean>|null = null;\n  #thirdPartyCheckbox: UI.Toolbar.ToolbarSettingCheckbox|null = null;\n\n  #onAnnotationModifiedEventBound = this.#onAnnotationModifiedEvent.bind(this);\n\n  /**\n   * We get given any filters for a new trace when it is recorded/imported.\n   * Because the user can then use the dropdown to navigate to another trace,\n   * we store the filters by the trace index, so if the user then navigates back\n   * to a previous trace we can reinstate the filters from this map.\n   */\n  #exclusiveFilterPerTrace = new Map<number, Trace.Extras.TraceFilter.TraceFilter>();\n  /**\n   * This widget holds the timeline sidebar which shows Insights & Annotations,\n   * and the main UI which shows the timeline\n   */\n  readonly #splitWidget = new UI.SplitWidget.SplitWidget(\n      true,                            // isVertical\n      false,                           // secondIsSidebar\n      'timeline-panel-sidebar-state',  // settingName (to persist the open/closed state for the user)\n      TimelineComponents.Sidebar.DEFAULT_SIDEBAR_WIDTH_PX,\n  );\n  private readonly statusPaneContainer: HTMLElement;\n  private readonly flameChart: TimelineFlameChartView;\n  readonly #searchableView: UI.SearchableView.SearchableView;\n  private showSettingsPaneButton!: UI.Toolbar.ToolbarSettingToggle;\n  private showSettingsPaneSetting!: Common.Settings.Setting<boolean>;\n  private settingsPane?: HTMLElement;\n  private controller!: TimelineController|null;\n  private cpuProfiler!: SDK.CPUProfilerModel.CPUProfilerModel|null;\n  private clearButton!: UI.Toolbar.ToolbarButton;\n  private loadButton!: UI.Toolbar.ToolbarButton;\n  private saveButton!: UI.Toolbar.ToolbarButton|UI.Toolbar.ToolbarMenuButton|UI.Toolbar.ToolbarItem;\n  private homeButton?: UI.Toolbar.ToolbarButton;\n  private askAiButton?: UI.Toolbar.ToolbarButton;\n  private statusDialog: StatusDialog|null = null;\n  private landingPage!: UI.Widget.Widget;\n  private loader?: TimelineLoader;\n  private showScreenshotsToolbarCheckbox?: UI.Toolbar.ToolbarItem;\n  private showMemoryToolbarCheckbox?: UI.Toolbar.ToolbarItem;\n  private networkThrottlingSelect?: MobileThrottling.NetworkThrottlingSelector.NetworkThrottlingSelect;\n  private cpuThrottlingSelect?: MobileThrottling.ThrottlingManager.CPUThrottlingSelectorWrapper;\n  private fileSelectorElement?: HTMLInputElement;\n  private selection: TimelineSelection|null = null;\n  private traceLoadStart!: Trace.Types.Timing.Milli|null;\n\n  #traceEngineModel: Trace.TraceModel.Model;\n  #externalAIConversationData: AiAssistanceModel.ExternalPerformanceAIConversationData|null = null;\n  #sourceMapsResolver: SourceMapsResolver.SourceMapsResolver|null = null;\n  #entityMapper: Trace.EntityMapper.EntityMapper|null = null;\n  #onSourceMapsNodeNamesResolvedBound = this.#onSourceMapsNodeNamesResolved.bind(this);\n  #sidebarToggleButton = this.#splitWidget.createShowHideSidebarButton(\n      i18nString(UIStrings.showSidebar),\n      i18nString(UIStrings.hideSidebar),\n      // These are used to announce to screen-readers and not shown visibly.\n      i18nString(UIStrings.sidebarShown),\n      i18nString(UIStrings.sidebarHidden),\n      'timeline.sidebar',  // jslog context\n  );\n\n  #sideBar = new TimelineComponents.Sidebar.SidebarWidget();\n  #eventToRelatedInsights: TimelineComponents.RelatedInsightChips.EventToRelatedInsightsMap = new Map();\n  #shortcutsDialog: Dialogs.ShortcutDialog.ShortcutDialog = new Dialogs.ShortcutDialog.ShortcutDialog();\n  /**\n   * Track if the user has opened the shortcuts dialog before. We do this so that the\n   * very first time the performance panel is open after the shortcuts dialog ships, we can\n   * automatically pop it open to aid discovery.\n   */\n  #userHadShortcutsDialogOpenedOnce = Common.Settings.Settings.instance().createSetting<boolean>(\n      'timeline.user-had-shortcuts-dialog-opened-once', false);\n  /**\n   * Navigation radio buttons located in the shortcuts dialog.\n   */\n  #navigationRadioButtons = document.createElement('form');\n  #modernNavRadioButton = UI.UIUtils.createRadioButton(\n      'flamechart-selected-navigation', 'Modern - normal scrolling', 'timeline.select-modern-navigation');\n  #classicNavRadioButton = UI.UIUtils.createRadioButton(\n      'flamechart-selected-navigation', 'Classic - scroll to zoom', 'timeline.select-classic-navigation');\n\n  #onMainEntryHovered: (event: Common.EventTarget.EventTargetEvent<number>) => void;\n  #hiddenTracksInfoBarByParsedTrace = new WeakMap<Trace.TraceModel.ParsedTrace, UI.Infobar.Infobar|'DISMISSED'>();\n\n  constructor(traceModel?: Trace.TraceModel.Model) {\n    super('timeline');\n    this.registerRequiredCSS(timelinePanelStyles);\n    const adornerContent = document.createElement('span');\n    adornerContent.innerHTML = `<div style=\"\n      font-size: 12px;\n      transform: scale(1.25);\n      color: transparent;\n      background: linear-gradient(90deg,CLICK255 0 0 / 100%) 0%, rgb(255 154 0 / 100%) 10%, rgb(208 222 33 / 100%) 20%, rgb(79 220 74 / 100%) 30%, rgb(63 218 216 / 100%) 40%, rgb(47 201 226 / 100%) 50%, rgb(28 127 238 / 100%) 60%, rgb(95 21 242 / 100%) 70%, rgb(186 12 248 / 100%) 80%, rgb(251 7 217 / 100%) 90%, rgb(255 0 0 / 100%) 100%);\n      -webkit-background-clip: text;\n      \">💫</div>`;\n    const adorner = new Adorners.Adorner.Adorner();\n    adorner.classList.add('fix-perf-icon');\n    adorner.data = {\n      name: i18nString(UIStrings.fixMe),\n      content: adornerContent,\n    };\n    this.#traceEngineModel = traceModel || this.#instantiateNewModel();\n    this.#listenForProcessingProgress();\n\n    this.element.addEventListener('contextmenu', this.contextMenu.bind(this), false);\n    this.dropTarget = new UI.DropTarget.DropTarget(\n        this.element, [UI.DropTarget.Type.File, UI.DropTarget.Type.URI],\n        i18nString(UIStrings.dropTimelineFileOrUrlHere), this.handleDrop.bind(this));\n\n    this.recordingOptionUIControls = [];\n    this.state = State.IDLE;\n    this.recordingPageReload = false;\n    this.millisecondsToRecordAfterLoadEvent = 5000;\n    this.toggleRecordAction = UI.ActionRegistry.ActionRegistry.instance().getAction('timeline.toggle-recording');\n    this.recordReloadAction = UI.ActionRegistry.ActionRegistry.instance().getAction('timeline.record-reload');\n\n    this.#historyManager = new TimelineHistoryManager(this.#minimapComponent, isNode);\n\n    this.traceLoadStart = null;\n\n    this.disableCaptureJSProfileSetting = Common.Settings.Settings.instance().createSetting(\n        'timeline-disable-js-sampling', false, Common.Settings.SettingStorageType.SESSION);\n    this.disableCaptureJSProfileSetting.setTitle(i18nString(UIStrings.disableJavascriptSamples));\n    this.captureLayersAndPicturesSetting = Common.Settings.Settings.instance().createSetting(\n        'timeline-capture-layers-and-pictures', false, Common.Settings.SettingStorageType.SESSION);\n    this.captureLayersAndPicturesSetting.setTitle(i18nString(UIStrings.enableAdvancedPaint));\n    this.captureSelectorStatsSetting = Common.Settings.Settings.instance().createSetting(\n        'timeline-capture-selector-stats', false, Common.Settings.SettingStorageType.SESSION);\n    this.captureSelectorStatsSetting.setTitle(i18nString(UIStrings.enableSelectorStats));\n\n    this.showScreenshotsSetting =\n        Common.Settings.Settings.instance().createSetting('timeline-show-screenshots', isNode ? false : true);\n    this.showScreenshotsSetting.setTitle(i18nString(UIStrings.screenshots));\n    this.showScreenshotsSetting.addChangeListener(this.updateMiniMap, this);\n\n    this.showMemorySetting = Common.Settings.Settings.instance().createSetting(\n        'timeline-show-memory', false, Common.Settings.SettingStorageType.SESSION);\n    this.showMemorySetting.setTitle(i18nString(UIStrings.memory));\n    this.showMemorySetting.addChangeListener(this.onMemoryModeChanged, this);\n\n    this.#dimThirdPartiesSetting = Common.Settings.Settings.instance().createSetting(\n        'timeline-dim-third-parties', false, Common.Settings.SettingStorageType.SESSION);\n    this.#dimThirdPartiesSetting.setTitle(i18nString(UIStrings.dimThirdParties));\n    this.#dimThirdPartiesSetting.addChangeListener(this.onDimThirdPartiesChanged, this);\n\n    this.#thirdPartyTracksSetting = TimelinePanel.extensionDataVisibilitySetting();\n    this.#thirdPartyTracksSetting.addChangeListener(this.#extensionDataVisibilityChanged, this);\n    this.#thirdPartyTracksSetting.setTitle(i18nString(UIStrings.showCustomtracks));\n\n    const timelineToolbarContainer = this.element.createChild('div', 'timeline-toolbar-container');\n    timelineToolbarContainer.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n    timelineToolbarContainer.role = 'toolbar';\n    this.panelToolbar = timelineToolbarContainer.createChild('devtools-toolbar', 'timeline-main-toolbar');\n    this.panelToolbar.role = 'presentation';\n    this.panelToolbar.wrappable = true;\n    this.panelRightToolbar = timelineToolbarContainer.createChild('devtools-toolbar');\n    this.panelRightToolbar.role = 'presentation';\n    if (!isNode && this.canRecord()) {\n      this.createSettingsPane();\n      this.updateShowSettingsToolbarButton();\n    }\n    this.timelinePane = new UI.Widget.VBox();\n    const topPaneElement = this.timelinePane.element.createChild('div', 'hbox');\n    topPaneElement.id = 'timeline-overview-panel';\n\n    this.#minimapComponent.show(topPaneElement);\n    this.#minimapComponent.addEventListener(PerfUI.TimelineOverviewPane.Events.OVERVIEW_PANE_MOUSE_MOVE, event => {\n      this.flameChart.addTimestampMarkerOverlay(event.data.timeInMicroSeconds);\n    });\n    this.#minimapComponent.addEventListener(PerfUI.TimelineOverviewPane.Events.OVERVIEW_PANE_MOUSE_LEAVE, async () => {\n      await this.flameChart.removeTimestampMarkerOverlay();\n    });\n\n    this.statusPaneContainer = this.timelinePane.element.createChild('div', 'status-pane-container fill');\n\n    this.createFileSelector();\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.Load, this.loadEventFired, this);\n\n    this.flameChart = new TimelineFlameChartView(this);\n    this.element.addEventListener(\n        'toggle-popover', event => this.flameChart.togglePopover((event as CustomEvent).detail));\n\n    this.#onMainEntryHovered = this.#onEntryHovered.bind(this, this.flameChart.getMainDataProvider());\n    this.flameChart.getMainFlameChart().addEventListener(\n        PerfUI.FlameChart.Events.ENTRY_HOVERED, this.#onMainEntryHovered);\n\n    this.flameChart.addEventListener(TimelineFlameChartViewEvents.ENTRY_LABEL_ANNOTATION_CLICKED, event => {\n      const selection = selectionFromEvent(event.data.entry);\n      this.select(selection);\n    });\n\n    this.#searchableView = new UI.SearchableView.SearchableView(this.flameChart, null);\n    this.#searchableView.setMinimumSize(0, 100);\n    this.#searchableView.setMinimalSearchQuerySize(2);  // At 1 it can introduce a bit of jank.\n    this.#searchableView.element.classList.add('searchable-view');\n    this.#searchableView.show(this.timelinePane.element);\n    this.flameChart.show(this.#searchableView.element);\n    this.flameChart.setSearchableView(this.#searchableView);\n    this.#searchableView.hideWidget();\n\n    this.#splitWidget.setMainWidget(this.timelinePane);\n    this.#splitWidget.setSidebarWidget(this.#sideBar);\n    this.#splitWidget.enableShowModeSaving();\n    this.#splitWidget.show(this.element);\n\n    this.flameChart.overlays().addEventListener(Overlays.Overlays.TimeRangeMouseOverEvent.eventName, event => {\n      const {overlay} = event as Overlays.Overlays.TimeRangeMouseOverEvent;\n      const overlayBounds = Overlays.Overlays.traceWindowContainingOverlays([overlay]);\n      if (!overlayBounds) {\n        return;\n      }\n      this.#minimapComponent.highlightBounds(overlayBounds, /* withBracket */ false);\n    });\n\n    this.flameChart.overlays().addEventListener(Overlays.Overlays.TimeRangeMouseOutEvent.eventName, () => {\n      this.#minimapComponent.clearBoundsHighlight();\n    });\n\n    this.#sideBar.element.addEventListener(TimelineInsights.SidebarInsight.InsightDeactivated.eventName, () => {\n      this.#setActiveInsight(null);\n    });\n\n    this.#sideBar.element.addEventListener(TimelineInsights.SidebarInsight.InsightActivated.eventName, event => {\n      const {model, insightSetKey} = event;\n      this.#setActiveInsight({model, insightSetKey});\n\n      // Open the summary panel for the 3p insight.\n      if (model.insightKey === Trace.Insights.Types.InsightKeys.THIRD_PARTIES) {\n        void window.scheduler.postTask(() => {\n          this.#openSummaryTab();\n        }, {priority: 'background'});\n      }\n    });\n\n    this.#sideBar.element.addEventListener(TimelineInsights.SidebarInsight.InsightProvideOverlays.eventName, event => {\n      const {overlays, options} = event;\n\n      void window.scheduler.postTask(() => {\n        this.flameChart.setOverlays(overlays, options);\n\n        const overlaysBounds = Overlays.Overlays.traceWindowContainingOverlays(overlays);\n        if (overlaysBounds) {\n          this.#minimapComponent.highlightBounds(overlaysBounds, /* withBracket */ true);\n        } else {\n          this.#minimapComponent.clearBoundsHighlight();\n        }\n      }, {priority: 'user-visible'});\n    });\n\n    this.#sideBar.contentElement.addEventListener(TimelineInsights.EventRef.EventReferenceClick.eventName, event => {\n      this.select(selectionFromEvent(event.event));\n    });\n\n    this.#sideBar.element.addEventListener(TimelineComponents.Sidebar.RemoveAnnotation.eventName, event => {\n      const {removedAnnotation} = (event as TimelineComponents.Sidebar.RemoveAnnotation);\n      ModificationsManager.activeManager()?.removeAnnotation(removedAnnotation);\n    });\n\n    this.#sideBar.element.addEventListener(TimelineComponents.Sidebar.RevealAnnotation.eventName, event => {\n      this.flameChart.revealAnnotation(event.annotation);\n    });\n\n    this.#sideBar.element.addEventListener(TimelineComponents.Sidebar.HoverAnnotation.eventName, event => {\n      this.flameChart.hoverAnnotationInSidebar(event.annotation);\n    });\n\n    this.#sideBar.element.addEventListener(TimelineComponents.Sidebar.AnnotationHoverOut.eventName, () => {\n      this.flameChart.sidebarAnnotationHoverOut();\n    });\n\n    this.#sideBar.element.addEventListener(TimelineInsights.SidebarInsight.InsightSetHovered.eventName, event => {\n      if (event.bounds) {\n        this.#minimapComponent.highlightBounds(event.bounds, /* withBracket */ true);\n      } else {\n        this.#minimapComponent.clearBoundsHighlight();\n      }\n    });\n\n    this.#sideBar.element.addEventListener(TimelineInsights.SidebarInsight.InsightSetZoom.eventName, event => {\n      TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(\n          event.bounds, {ignoreMiniMapBounds: true, shouldAnimate: true});\n    });\n\n    this.onMemoryModeChanged();\n    this.populateToolbar();\n    // The viewMode is set by default to the landing page, so we don't call\n    // `#changeView` here and can instead directly call showLandingPage();\n    this.#showLandingPage();\n    this.updateTimelineControls();\n\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.SUSPEND_STATE_CHANGED, this.onSuspendStateChanged, this);\n    const profilerModels = SDK.TargetManager.TargetManager.instance().models(SDK.CPUProfilerModel.CPUProfilerModel);\n    for (const model of profilerModels) {\n      for (const message of model.registeredConsoleProfileMessages) {\n        this.consoleProfileFinished(message);\n      }\n    }\n    SDK.TargetManager.TargetManager.instance().observeModels(\n        SDK.CPUProfilerModel.CPUProfilerModel,\n        {\n          modelAdded: (model: SDK.CPUProfilerModel.CPUProfilerModel) => {\n            model.addEventListener(\n                SDK.CPUProfilerModel.Events.CONSOLE_PROFILE_FINISHED, event => this.consoleProfileFinished(event.data));\n          },\n          modelRemoved: (_model: SDK.CPUProfilerModel.CPUProfilerModel) => {\n\n          },\n        },\n    );\n  }\n\n  /**\n   * Activates an insight and ensures the sidebar is open too.\n   * Pass `highlightInsight: true` to flash the insight with the background highlight colour.\n   */\n  #setActiveInsight(insight: TimelineComponents.Sidebar.ActiveInsight|null, opts: {\n    highlightInsight: boolean,\n  } = {highlightInsight: false}): void {\n    if (insight) {\n      this.#splitWidget.showBoth();\n    }\n    this.#sideBar.setActiveInsight(insight, {highlight: opts.highlightInsight});\n    this.flameChart.setActiveInsight(insight);\n\n    if (insight) {\n      const selectedInsight = new SelectedInsight(insight);\n      UI.Context.Context.instance().setFlavor(SelectedInsight, selectedInsight);\n    } else {\n      UI.Context.Context.instance().setFlavor(SelectedInsight, null);\n    }\n  }\n\n  /**\n   * This disables the 3P checkbox in the toolbar.\n   * If the checkbox was checked, we flip it to indeterminiate to communicate it doesn't currently apply.\n   */\n  set3PCheckboxDisabled(disabled: boolean): void {\n    this.#thirdPartyCheckbox?.applyEnabledState(!disabled);\n    if (this.#dimThirdPartiesSetting?.get()) {\n      this.#thirdPartyCheckbox?.setIndeterminate(disabled);\n    }\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    isNode: boolean,\n    traceModel?: Trace.TraceModel.Model,\n  }|undefined = {forceNew: null, isNode: false}): TimelinePanel {\n    const {forceNew, isNode: isNodeMode} = opts;\n    isNode = isNodeMode;\n\n    if (!timelinePanelInstance || forceNew) {\n      timelinePanelInstance = new TimelinePanel(opts.traceModel);\n    }\n\n    return timelinePanelInstance;\n  }\n  static removeInstance(): void {\n    // TODO(crbug.com/358583420): Simplify attached data management\n    // so that we don't have to maintain all of these singletons.\n    SourceMapsResolver.SourceMapsResolver.clearResolvedNodeNames();\n    Trace.Helpers.SyntheticEvents.SyntheticEventsManager.reset();\n    TraceBounds.TraceBounds.BoundsManager.removeInstance();\n    ModificationsManager.reset();\n    ActiveFilters.removeInstance();\n    timelinePanelInstance = undefined;\n  }\n\n  #instantiateNewModel(): Trace.TraceModel.Model {\n    const config = Trace.Types.Configuration.defaults();\n    config.showAllEvents = Root.Runtime.experiments.isEnabled('timeline-show-all-events');\n    config.includeRuntimeCallStats = Root.Runtime.experiments.isEnabled('timeline-v8-runtime-call-stats');\n    config.debugMode = Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.TIMELINE_DEBUG_MODE);\n\n    return Trace.TraceModel.Model.createWithAllHandlers(config);\n  }\n\n  static extensionDataVisibilitySetting(): Common.Settings.Setting<boolean> {\n    // Calling this multiple times doesn't recreate the setting.\n    // Instead, after the second call, the cached setting is returned.\n    return Common.Settings.Settings.instance().createSetting('timeline-show-extension-data', true);\n  }\n  override searchableView(): UI.SearchableView.SearchableView|null {\n    return this.#searchableView;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    UI.Context.Context.instance().setFlavor(TimelinePanel, this);\n    // Record the performance tool load time.\n    Host.userMetrics.panelLoaded('timeline', 'DevTools.Launch.Timeline');\n\n    const cruxManager = CrUXManager.CrUXManager.instance();\n    cruxManager.addEventListener(CrUXManager.Events.FIELD_DATA_CHANGED, this.#onFieldDataChanged, this);\n    this.#onFieldDataChanged();\n  }\n\n  override willHide(): void {\n    UI.Context.Context.instance().setFlavor(TimelinePanel, null);\n    this.#historyManager.cancelIfShowing();\n\n    const cruxManager = CrUXManager.CrUXManager.instance();\n    cruxManager.removeEventListener(CrUXManager.Events.FIELD_DATA_CHANGED, this.#onFieldDataChanged, this);\n  }\n\n  #onFieldDataChanged(): void {\n    const recs = Utils.Helpers.getThrottlingRecommendations();\n    this.cpuThrottlingSelect?.updateRecommendedOption(recs.cpuOption);\n    if (this.networkThrottlingSelect) {\n      this.networkThrottlingSelect.recommendedConditions = recs.networkConditions;\n    }\n  }\n\n  loadFromEvents(events: Trace.Types.Events.Event[]): void {\n    if (this.state !== State.IDLE) {\n      return;\n    }\n    this.prepareToLoadTimeline();\n    this.loader = TimelineLoader.loadFromEvents(events, this);\n  }\n\n  loadFromTraceFile(traceFile: Trace.Types.File.TraceFile): void {\n    if (this.state !== State.IDLE) {\n      return;\n    }\n    this.prepareToLoadTimeline();\n    this.loader = TimelineLoader.loadFromTraceFile(traceFile, this);\n  }\n\n  getFlameChart(): TimelineFlameChartView {\n    return this.flameChart;\n  }\n\n  /**\n   * Determine if two view modes are equivalent. Useful because if {@see\n   * #changeView} gets called and the new mode is identical to the current,\n   * we can bail without doing any UI updates.\n   */\n  #viewModesEquivalent(m1: ViewMode, m2: ViewMode): boolean {\n    if (m1.mode === 'LANDING_PAGE' && m2.mode === 'LANDING_PAGE') {\n      return true;\n    }\n\n    if (m1.mode === 'STATUS_PANE_OVERLAY' && m2.mode === 'STATUS_PANE_OVERLAY') {\n      return true;\n    }\n\n    // VIEWING_TRACE views are only equivalent if their traceIndex is the same.\n    if (m1.mode === 'VIEWING_TRACE' && m2.mode === 'VIEWING_TRACE' && m1.traceIndex === m2.traceIndex) {\n      return true;\n    }\n    return false;\n  }\n\n  #uninstallSourceMapsResolver(): void {\n    if (this.#sourceMapsResolver) {\n      // this set of NodeNames is cached by PIDs, so we clear it so we don't\n      // use incorrect names from another trace that might happen to share\n      // PID/TIDs.\n      SourceMapsResolver.SourceMapsResolver.clearResolvedNodeNames();\n\n      this.#sourceMapsResolver.removeEventListener(\n          SourceMapsResolver.SourceMappingsUpdated.eventName, this.#onSourceMapsNodeNamesResolvedBound);\n      this.#sourceMapsResolver.uninstall();\n      this.#sourceMapsResolver = null;\n    }\n  }\n\n  #removeStatusPane(): void {\n    if (this.statusDialog) {\n      this.statusDialog.remove();\n    }\n    this.statusDialog = null;\n  }\n\n  hasActiveTrace(): boolean {\n    return this.#viewMode.mode === 'VIEWING_TRACE';\n  }\n\n  #changeView(newMode: ViewMode): void {\n    if (this.#viewModesEquivalent(this.#viewMode, newMode)) {\n      return;\n    }\n\n    if (this.#viewMode.mode === 'VIEWING_TRACE') {\n      // If the current / about to be \"old\" view was viewing a trace\n      // we also uninstall any source maps resolver for the trace that was active.\n      // If the user swaps back to this trace via the history dropdown, this will be reinstated.\n      this.#uninstallSourceMapsResolver();\n\n      // Store any modifications (e.g. annotations) that the user has created\n      // on the current trace before we move away to a new view.\n      this.#saveModificationsForActiveTrace();\n\n      // No need to listen to annotation events, they cannot occur on non\n      // visible traces. When a trace is made visible, this listener is added\n      // back.\n      const manager = ModificationsManager.activeManager();\n      if (manager) {\n        manager.removeEventListener(AnnotationModifiedEvent.eventName, this.#onAnnotationModifiedEventBound);\n      }\n    }\n\n    this.#viewMode = newMode;\n    this.updateTimelineControls();\n\n    /**\n     * Note that the TimelinePanel UI is really rendered in two distinct layers.\n     * 1. status-pane-container: this is what renders both the StatusPane\n     *    loading modal AND the landing page.\n     *    What is important to note is that this renders ON TOP of the\n     *    SearchableView widget, which is what holds the FlameChartView.\n     *\n     * 2. SearchableView: this is the container that renders\n     *    TimelineFlameChartView and the rest of the flame chart code.\n     *\n     * What this layering means is that when we swap to the LANDING_PAGE or\n     * STATUS_PANE_OVERLAY view, we don't actually need to reset the\n     * SearchableView that is rendered behind it, because it won't be visible\n     * and will be hidden behind the StatusPane/Landing Page.\n     *\n     * So the only time we update this SearchableView is when the user goes to\n     * view a trace. That is why in the switch() statement below you won't see\n     * any code that resets the SearchableView because we don't need to. We do\n     * mark it as hidden, but mainly so the user can't accidentally use Cmd-F\n     * to search a hidden view.\n     */\n    switch (newMode.mode) {\n      case 'LANDING_PAGE': {\n        this.#removeStatusPane();\n        this.#showLandingPage();\n        this.updateMiniMap();\n        this.dispatchEventToListeners(Events.IS_VIEWING_TRACE, false);\n\n        // Whilst we don't reset this, we hide it, mainly so the user cannot\n        // hit Ctrl/Cmd-F and try to search when it isn't visible.\n        this.#searchableView.hideWidget();\n        return;\n      }\n\n      case 'VIEWING_TRACE': {\n        this.#hideLandingPage();\n        this.#setModelForActiveTrace();\n        this.#removeStatusPane();\n        if (newMode.forceOpenSidebar) {\n          this.#showSidebar();\n        }\n        this.flameChart.dimThirdPartiesIfRequired();\n        this.dispatchEventToListeners(Events.IS_VIEWING_TRACE, true);\n\n        return;\n      }\n\n      case 'STATUS_PANE_OVERLAY': {\n        // We don't manage the StatusPane UI here; it is done in the\n        // recordingStarted/recordingProgress callbacks, but we do make sure we\n        // hide the landing page.\n        this.#hideLandingPage();\n        this.dispatchEventToListeners(Events.IS_VIEWING_TRACE, false);\n\n        // We also hide the sidebar - else if the user is viewing a trace and\n        // then load/record another, the sidebar remains visible.\n        this.#hideSidebar();\n        return;\n      }\n      default:\n        Platform.assertNever(newMode, 'Unsupported TimelinePanel viewMode');\n    }\n  }\n\n  #activeTraceIndex(): number|null {\n    if (this.#viewMode.mode === 'VIEWING_TRACE') {\n      return this.#viewMode.traceIndex;\n    }\n    return null;\n  }\n\n  /**\n   * Exposed for handling external requests.\n   */\n  get model(): Trace.TraceModel.Model {\n    return this.#traceEngineModel;\n  }\n\n  getOrCreateExternalAIConversationData(): AiAssistanceModel.ExternalPerformanceAIConversationData {\n    if (!this.#externalAIConversationData) {\n      const conversationHandler = AiAssistanceModel.ConversationHandler.instance();\n      const focus = AiAssistanceModel.getPerformanceAgentFocusFromModel(this.model);\n      if (!focus) {\n        throw new Error('could not create performance agent focus');\n      }\n\n      const agent = conversationHandler.createAgent(AiAssistanceModel.ConversationType.PERFORMANCE);\n      const conversation = new AiAssistanceModel.Conversation(\n          AiAssistanceModel.ConversationType.PERFORMANCE,\n          [],\n          agent.id,\n          /* isReadOnly */ true,\n          /* isExternal */ true,\n      );\n\n      const selected = new AiAssistanceModel.PerformanceTraceContext(focus);\n      selected.external = true;\n\n      this.#externalAIConversationData = {\n        conversationHandler,\n        conversation,\n        agent,\n        selected,\n      };\n    }\n\n    return this.#externalAIConversationData;\n  }\n\n  invalidateExternalAIConversationData(): void {\n    this.#externalAIConversationData = null;\n  }\n\n  /**\n   * NOTE: this method only exists to enable some layout tests to be migrated to the new engine.\n   * DO NOT use this method within DevTools. It is marked as deprecated so\n   * within DevTools you are warned when using the method.\n   * @deprecated\n   **/\n  getParsedTraceForLayoutTests(): Trace.Handlers.Types.HandlerData {\n    const traceIndex = this.#activeTraceIndex();\n    if (traceIndex === null) {\n      throw new Error('No trace index active.');\n    }\n    const data = this.#traceEngineModel.parsedTrace(traceIndex)?.data;\n    if (!data) {\n      throw new Error('No trace engine data found.');\n    }\n    return data;\n  }\n\n  /**\n   * NOTE: this method only exists to enable some layout tests to be migrated to the new engine.\n   * DO NOT use this method within DevTools. It is marked as deprecated so\n   * within DevTools you are warned when using the method.\n   * @deprecated\n   **/\n  getTraceEngineRawTraceEventsForLayoutTests(): readonly Trace.Types.Events.Event[] {\n    const traceIndex = this.#activeTraceIndex();\n    if (traceIndex === null) {\n      throw new Error('No trace index active.');\n    }\n    const data = this.#traceEngineModel.parsedTrace(traceIndex);\n    if (!data) {\n      throw new Error('No trace engine data found.');\n    }\n    return data.traceEvents;\n  }\n\n  #onEntryHovered(dataProvider: TimelineFlameChartDataProvider, event: Common.EventTarget.EventTargetEvent<number>):\n      void {\n    const entryIndex = event.data;\n    if (entryIndex === -1) {\n      this.#minimapComponent.clearBoundsHighlight();\n      return;\n    }\n    const traceEvent = dataProvider.eventByIndex(entryIndex);\n    if (!traceEvent) {\n      return;\n    }\n    const bounds = Trace.Helpers.Timing.traceWindowFromEvent(traceEvent);\n    this.#minimapComponent.highlightBounds(bounds, /* withBracket */ false);\n  }\n\n  private loadFromCpuProfile(profile: Protocol.Profiler.Profile|null): void {\n    if (this.state !== State.IDLE || profile === null) {\n      return;\n    }\n    this.prepareToLoadTimeline();\n    this.loader = TimelineLoader.loadFromCpuProfile(profile, this);\n  }\n\n  private setState(state: State): void {\n    this.state = state;\n    this.updateTimelineControls();\n  }\n\n  private createSettingCheckbox(setting: Common.Settings.Setting<boolean>, tooltip: Platform.UIString.LocalizedString):\n      UI.Toolbar.ToolbarSettingCheckbox {\n    const checkboxItem = new UI.Toolbar.ToolbarSettingCheckbox(setting, tooltip);\n    this.recordingOptionUIControls.push(checkboxItem);\n    return checkboxItem;\n  }\n\n  #addSidebarIconToToolbar(): void {\n    if (this.panelToolbar.hasItem(this.#sidebarToggleButton)) {\n      return;\n    }\n\n    this.panelToolbar.prependToolbarItem(this.#sidebarToggleButton);\n  }\n\n  /**\n   * Used when the user deletes their last trace and is taken back to the\n   * landing page - we don't add this icon until there is a trace loaded.\n   */\n  #removeSidebarIconFromToolbar(): void {\n    this.panelToolbar.removeToolbarItem(this.#sidebarToggleButton);\n  }\n\n  /**\n   * Returns false if DevTools is in a standalone context where tracing/recording are NOT available.\n   *\n   * This includes scenarios like:\n   * - viewing an enhanced trace\n   * - viewing a trace in trace.cafe\n   * - other devtools_app.html scenarios without valid `ws=` param.\n   *   - See also the `isHostedMode` comment in `InspectorFrontendHost.ts`\n   *\n   * Possible signals to find a no-record (NR) context:\n   * - `primaryPageTarget()?.sessionId` is empty in NR, but populated when viewing an enhanced trace.\n   * - `primaryPageTarget.#capabilitiesMask` There's a tracing capability but the advertised capabilities are quite unreliable.\n   * - `primaryPageTarget.targets().length === 1` Mostly correct for NC but its 2 when viewing an enhanced trace.\n   * - `primaryPageTarget.router().connection()` Perhaps StubConnection or RehydratingConnection but MainConnection is incorrectly used sometimes. (eg devtools://devtools/bundled/devtools_app.html)\n   * - `resourceTreeModel?.mainFrame === null`. Correct for NR, HOWEVER  Node.js canRecord despite no main frame.\n   * - `rootTarget.type !== 'tab'` Has potential but it lies. (It's \"browser\" for Node despite a node type)\n   *\n   * The best signal, for now, is this combo (`isNode || hasMainFrame`), which is both well-maintained and correct in all known cases:\n   */\n  private canRecord(): boolean {\n    return SDK.TargetManager.TargetManager.instance().hasFakeConnection() === false;\n  }\n\n  private populateToolbar(): void {\n    const canRecord = this.canRecord();\n\n    if (canRecord || isNode) {\n      this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.toggleRecordAction));\n    }\n    if (canRecord) {\n      this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.recordReloadAction));\n    }\n\n    this.clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clear), 'clear', undefined, 'timeline.clear');\n    this.clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => this.onClearButton());\n    this.panelToolbar.appendToolbarItem(this.clearButton);\n\n    // Load / Save\n    this.loadButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.loadTrace), 'import', undefined, 'timeline.load-from-file');\n    this.loadButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.PerfPanelTraceImported);\n      this.selectFileToLoad();\n    });\n\n    const exportTraceOptions = new TimelineComponents.ExportTraceOptions.ExportTraceOptions();\n    exportTraceOptions.data = {\n      onExport: this.saveToFile.bind(this),\n      buttonEnabled: this.state === State.IDLE && this.#hasActiveTrace(),\n    };\n    this.saveButton = new UI.Toolbar.ToolbarItem(exportTraceOptions);\n\n    this.panelToolbar.appendSeparator();\n    this.panelToolbar.appendToolbarItem(this.loadButton);\n    this.panelToolbar.appendToolbarItem(this.saveButton);\n\n    if (canRecord) {\n      this.panelToolbar.appendSeparator();\n\n      if (!isNode) {\n        this.homeButton = new UI.Toolbar.ToolbarButton(\n            i18nString(UIStrings.backToLiveMetrics), 'home', undefined, 'timeline.back-to-live-metrics');\n        this.homeButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n          this.#changeView({mode: 'LANDING_PAGE'});\n          this.#historyManager.navigateToLandingPage();\n        });\n        this.panelToolbar.appendToolbarItem(this.homeButton);\n        this.panelToolbar.appendSeparator();\n      }\n    }\n\n    // TODO(crbug.com/337909145): need to hide \"Live metrics\" option if !canRecord.\n    this.panelToolbar.appendToolbarItem(this.#historyManager.button());\n\n    // View\n    this.panelToolbar.appendSeparator();\n    if (!isNode) {\n      this.showScreenshotsToolbarCheckbox =\n          this.createSettingCheckbox(this.showScreenshotsSetting, i18nString(UIStrings.captureScreenshots));\n      this.panelToolbar.appendToolbarItem(this.showScreenshotsToolbarCheckbox);\n    }\n\n    this.showMemoryToolbarCheckbox =\n        this.createSettingCheckbox(this.showMemorySetting, i18nString(UIStrings.showMemoryTimeline));\n\n    if (canRecord) {\n      // GC\n      this.panelToolbar.appendToolbarItem(this.showMemoryToolbarCheckbox);\n      this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton('components.collect-garbage'));\n    }\n\n    // Ignore list setting\n    this.panelToolbar.appendSeparator();\n    const showIgnoreListSetting = new TimelineComponents.IgnoreListSetting.IgnoreListSetting();\n    this.panelToolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(showIgnoreListSetting));\n\n    if (this.#dimThirdPartiesSetting) {\n      const dimThirdPartiesCheckbox =\n          this.createSettingCheckbox(this.#dimThirdPartiesSetting, i18nString(UIStrings.thirdPartiesByThirdPartyWeb));\n      this.#thirdPartyCheckbox = dimThirdPartiesCheckbox;\n      this.panelToolbar.appendToolbarItem(dimThirdPartiesCheckbox);\n    }\n\n    // Isolate selector\n    if (isNode) {\n      const isolateSelector = new IsolateSelector();\n      this.panelToolbar.appendSeparator();\n      this.panelToolbar.appendToolbarItem(isolateSelector);\n    }\n\n    // Settings\n    if (!isNode && canRecord) {\n      this.panelRightToolbar.appendSeparator();\n      this.panelRightToolbar.appendToolbarItem(this.showSettingsPaneButton);\n    }\n  }\n\n  #setupNavigationSetting(): HTMLElement {\n    const currentNavSetting = Common.Settings.moduleSetting('flamechart-selected-navigation').get();\n    const hideTheDialogForTests: string|null = localStorage.getItem('hide-shortcuts-dialog-for-test');\n    const userHadShortcutsDialogOpenedOnce = this.#userHadShortcutsDialogOpenedOnce.get();\n\n    this.#shortcutsDialog.prependElement(this.#navigationRadioButtons);\n    // Add the shortcuts dialog button to the toolbar.\n    const dialogToolbarItem = new UI.Toolbar.ToolbarItem(this.#shortcutsDialog);\n    dialogToolbarItem.element.setAttribute(\n        'jslog', `${VisualLogging.action().track({click: true}).context('timeline.shortcuts-dialog-toggle')}`);\n\n    this.panelRightToolbar.appendToolbarItem(dialogToolbarItem);\n    this.#updateNavigationSettingSelection();\n    // The setting could have been changed from the Devtools Settings. Therefore, we\n    // need to update the radio buttons selection when the dialog is open.\n    this.#shortcutsDialog.addEventListener('click', this.#updateNavigationSettingSelection.bind(this));\n    this.#shortcutsDialog.data = {\n      customTitle: i18nString(UIStrings.shortcutsDialogTitle),\n      shortcuts: this.#getShortcutsInfo(currentNavSetting === 'classic'),\n      open: !userHadShortcutsDialogOpenedOnce && hideTheDialogForTests !== 'true' &&\n          !Host.InspectorFrontendHost.isUnderTest(),\n    };\n\n    this.#navigationRadioButtons.classList.add('nav-radio-buttons');\n    UI.ARIAUtils.markAsRadioGroup(this.#navigationRadioButtons);\n    // Change EventListener is only triggered when the radio button is selected\n    this.#modernNavRadioButton.radio.addEventListener('change', () => {\n      this.#shortcutsDialog.data = {shortcuts: this.#getShortcutsInfo(/* isNavClassic */ false)};\n      Common.Settings.moduleSetting('flamechart-selected-navigation').set('modern');\n    });\n    this.#classicNavRadioButton.radio.addEventListener('change', () => {\n      this.#shortcutsDialog.data = {shortcuts: this.#getShortcutsInfo(/* isNavClassic */ true)};\n      Common.Settings.moduleSetting('flamechart-selected-navigation').set('classic');\n    });\n\n    this.#navigationRadioButtons.appendChild(this.#modernNavRadioButton.label);\n    this.#navigationRadioButtons.appendChild(this.#classicNavRadioButton.label);\n\n    this.#userHadShortcutsDialogOpenedOnce.set(true);\n    return this.#navigationRadioButtons;\n  }\n\n  #updateNavigationSettingSelection(): void {\n    const currentNavSetting = Common.Settings.moduleSetting('flamechart-selected-navigation').get();\n    if (currentNavSetting === 'classic') {\n      this.#classicNavRadioButton.radio.checked = true;\n      Host.userMetrics.navigationSettingAtFirstTimelineLoad(\n          Host.UserMetrics.TimelineNavigationSetting.SWITCHED_TO_CLASSIC);\n    } else if (currentNavSetting === 'modern') {\n      this.#modernNavRadioButton.radio.checked = true;\n      Host.userMetrics.navigationSettingAtFirstTimelineLoad(\n          Host.UserMetrics.TimelineNavigationSetting.SWITCHED_TO_MODERN);\n    }\n  }\n\n  #getShortcutsInfo(isNavClassic: boolean): Dialogs.ShortcutDialog.Shortcut[] {\n    const metaKey = Host.Platform.isMac() ? '⌘' : 'Ctrl';\n    if (isNavClassic) {\n      // Classic navigation = scroll to zoom.\n      return [\n        {\n          title: i18nString(UIStrings.timelineZoom),\n          rows: [\n            [{key: 'Scroll ↕'}], [{key: 'W'}, {key: 'S'}, {joinText: 'or'}, {key: '+'}, {key: '-'}],\n            {footnote: 'hold shift for fast zoom'}\n          ]\n        },\n        {\n          title: i18nString(UIStrings.timelineScrollPan),\n          rows: [\n            [{key: 'Shift'}, {joinText: '+'}, {key: 'Scroll ↕'}],\n            [{key: 'Scroll ↔'}, {joinText: 'or'}, {key: 'A'}, {key: 'D'}],\n            [\n              {key: 'Drag'}, {joinText: 'or'}, {key: 'Shift'}, {joinText: '+'}, {key: '↑'}, {key: '↓'}, {key: '←'},\n              {key: '→'}\n            ],\n          ]\n        }\n      ];\n    }\n\n    // New navigation where scroll = scroll.\n    return [\n      {\n        title: i18nString(UIStrings.timelineZoom),\n        rows: [\n          [{key: metaKey}, {joinText: '+'}, {key: 'Scroll ↕'}],\n          [{key: 'W'}, {key: 'S'}, {joinText: 'or'}, {key: '+'}, {key: '-'}], {footnote: ''}\n        ]\n      },\n      {\n        title: i18nString(UIStrings.timelineScrollPan),\n        rows: [\n          [{key: 'Scroll ↕'}],\n          [\n            {key: 'Shift'}, {joinText: '+'}, {key: 'Scroll ↕'}, {joinText: 'or'}, {key: 'Scroll ↔'}, {joinText: 'or'},\n            {key: 'A'}, {key: 'D'}\n          ],\n          [\n            {key: 'Drag'}, {joinText: 'or'}, {key: 'Shift'}, {joinText: '+'}, {key: '↑'}, {key: '↓'}, {key: '←'},\n            {key: '→'}\n          ],\n        ]\n      }\n    ];\n  }\n\n  private createSettingsPane(): void {\n    this.showSettingsPaneSetting =\n        Common.Settings.Settings.instance().createSetting('timeline-show-settings-toolbar', false);\n    this.showSettingsPaneButton = new UI.Toolbar.ToolbarSettingToggle(\n        this.showSettingsPaneSetting, 'gear', i18nString(UIStrings.captureSettings), 'gear-filled',\n        'timeline-settings-toggle');\n    SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED, this.updateShowSettingsToolbarButton,\n        this);\n    SDK.CPUThrottlingManager.CPUThrottlingManager.instance().addEventListener(\n        SDK.CPUThrottlingManager.Events.RATE_CHANGED, this.updateShowSettingsToolbarButton, this);\n    this.disableCaptureJSProfileSetting.addChangeListener(this.updateShowSettingsToolbarButton, this);\n    this.captureLayersAndPicturesSetting.addChangeListener(this.updateShowSettingsToolbarButton, this);\n    this.captureSelectorStatsSetting.addChangeListener(this.updateShowSettingsToolbarButton, this);\n\n    this.settingsPane = this.element.createChild('div', 'timeline-settings-pane');\n    this.settingsPane.setAttribute('jslog', `${VisualLogging.pane('timeline-settings-pane').track({resize: true})}`);\n\n    const cpuThrottlingPane = this.settingsPane.createChild('div');\n    cpuThrottlingPane.append(i18nString(UIStrings.cpu));\n    this.cpuThrottlingSelect = MobileThrottling.ThrottlingManager.throttlingManager().createCPUThrottlingSelector();\n    cpuThrottlingPane.append(this.cpuThrottlingSelect.control.element);\n\n    this.settingsPane.append(UI.SettingsUI.createSettingCheckbox(\n        this.captureSelectorStatsSetting.title(), this.captureSelectorStatsSetting,\n        i18nString(UIStrings.capturesSelectorStats)));\n\n    const networkThrottlingPane = this.settingsPane.createChild('div');\n    networkThrottlingPane.append(i18nString(UIStrings.network));\n    networkThrottlingPane.append(this.createNetworkConditionsSelectToolbarItem().element);\n\n    this.settingsPane.append(UI.SettingsUI.createSettingCheckbox(\n        this.captureLayersAndPicturesSetting.title(), this.captureLayersAndPicturesSetting,\n        i18nString(UIStrings.capturesAdvancedPaint)));\n\n    this.settingsPane.append(UI.SettingsUI.createSettingCheckbox(\n        this.disableCaptureJSProfileSetting.title(), this.disableCaptureJSProfileSetting,\n        i18nString(UIStrings.disablesJavascriptSampling)));\n\n    const thirdPartyCheckbox =\n        this.createSettingCheckbox(this.#thirdPartyTracksSetting, i18nString(UIStrings.showDataAddedByExtensions));\n\n    const localLink = UI.XLink.XLink.create(\n        'https://developer.chrome.com/docs/devtools/performance/extension', i18nString(UIStrings.learnMore));\n    // Has to be done in JS because the element is inserted into the\n    // checkbox's shadow DOM so any styling into timelinePanel.css would\n    // not apply.\n    localLink.style.marginLeft = '5px';\n    thirdPartyCheckbox.element.shadowRoot?.appendChild(localLink);\n    this.settingsPane.append(thirdPartyCheckbox.element);\n\n    this.showSettingsPaneSetting.addChangeListener(this.updateSettingsPaneVisibility.bind(this));\n    this.updateSettingsPaneVisibility();\n  }\n\n  private createNetworkConditionsSelectToolbarItem(): UI.Toolbar.ToolbarItem {\n    const toolbarItem = new UI.Toolbar.ToolbarItem(document.createElement('div'));\n    this.networkThrottlingSelect =\n        MobileThrottling.NetworkThrottlingSelector.NetworkThrottlingSelect.createForGlobalConditions(\n            toolbarItem.element, i18nString(UIStrings.networkConditions));\n    return toolbarItem;\n  }\n\n  private prepareToLoadTimeline(): void {\n    console.assert(this.state === State.IDLE);\n    this.setState(State.LOADING);\n  }\n\n  private createFileSelector(): void {\n    if (this.fileSelectorElement) {\n      this.fileSelectorElement.remove();\n    }\n    // .gz is far more popular than .gzip, but both are valid.\n    this.fileSelectorElement =\n        UI.UIUtils.createFileSelectorElement(this.loadFromFile.bind(this), '.json,.gz,.gzip,.cpuprofile');\n    this.timelinePane.element.appendChild(this.fileSelectorElement);\n  }\n\n  private contextMenu(event: Event): void {\n    // If we are recording (or transitioning to/from recording, don't let the user use the context menu)\n    if (this.state === State.START_PENDING || this.state === State.RECORDING || this.state === State.STOP_PENDING) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    // Do not show this Context menu on FlameChart entries because we have a different context menu for FlameChart entries\n    const mouseEvent = (event as MouseEvent);\n    if (this.flameChart.getMainFlameChart().coordinatesToEntryIndex(mouseEvent.offsetX, mouseEvent.offsetY) !== -1) {\n      return;\n    }\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.appendItemsAtLocation('timelineMenu');\n    void contextMenu.show();\n  }\n\n  async saveToFile(config: {\n    includeScriptContent: boolean,\n    includeSourceMaps: boolean,\n    /**\n     * Includes many things:\n     * 1. annotations\n     * 2. filtering / collapsing of the flame chart\n     * 3. visual track configuration (re-ordering or hiding tracks)\n     **/\n    addModifications: boolean,\n    shouldCompress: boolean,\n  }): Promise<void> {\n    if (this.state !== State.IDLE) {\n      return;\n    }\n    if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n      return;\n    }\n\n    const parsedTrace = this.#traceEngineModel.parsedTrace(this.#viewMode.traceIndex);\n    if (!parsedTrace) {\n      return;\n    }\n\n    // Grab the script mapping to be able to filter out by url.\n    const mappedScriptsWithData = Trace.Handlers.ModelHandlers.Scripts.data().scripts;\n    const scriptByIdMap = new Map<string, Trace.Handlers.ModelHandlers.Scripts.Script>();\n\n    for (const mapScript of mappedScriptsWithData) {\n      scriptByIdMap.set(`${mapScript.isolate}.${mapScript.scriptId}`, mapScript);\n    }\n\n    const traceEvents = parsedTrace.traceEvents.map(event => {\n      if (Trace.Types.Events.isAnyScriptSourceEvent(event) && event.name !== 'StubScriptCatchup') {\n        const mappedScript = scriptByIdMap.get(`${event.args.data.isolate}.${event.args.data.scriptId}`);\n\n        // If the checkbox to include script content is not checked or if it comes from and\n        // extension we dont include the script content.\n        if (!config.includeScriptContent ||\n            (mappedScript?.url && Trace.Helpers.Trace.isExtensionUrl(mappedScript.url))) {\n          return {\n            cat: event.cat,\n            name: 'StubScriptCatchup',\n            ts: event.ts,\n            dur: event.dur,\n            ph: event.ph,\n            pid: event.pid,\n            tid: event.tid,\n            args: {\n              data: {isolate: event.args.data.isolate, scriptId: event.args.data.scriptId},\n            },\n          } as Trace.Types.Events.RundownScriptStub;\n        }\n      }\n\n      return event;\n    });\n\n    const metadata = parsedTrace.metadata;\n    metadata.modifications = config.addModifications ? ModificationsManager.activeManager()?.toJSON() : undefined;\n\n    // NOTE: we used to export the track configuration changes into the trace\n    // file here.\n    // We don't do this now because as of August 2025 (M141) track\n    // configuration is persisted globally (not per trace). When a user imports\n    // a trace, we don't look for any configuration (as we treat the user's\n    // DevTools config as the canonical config), so it doesn't make sense to\n    // export the config.\n\n    try {\n      await this.innerSaveToFile(traceEvents, metadata, {\n        includeScriptContent: config.includeScriptContent,\n        includeSourceMaps: config.includeSourceMaps,\n        addModifications: config.addModifications,\n        shouldCompress: config.shouldCompress,\n      });\n    } catch (e) {\n      // We expect the error to be an Error class, but this deals with any weird case where it's not.\n      const error = e instanceof Error ? e : new Error(e);\n\n      console.error(error.stack);\n      if (error.name === 'AbortError') {\n        // The user cancelled the action, so this is not an error we need to report.\n        return;\n      }\n\n      this.#showExportTraceErrorDialog(error);\n    }\n  }\n\n  async innerSaveToFile(traceEvents: readonly Trace.Types.Events.Event[], metadata: Trace.Types.File.MetaData, config: {\n    includeScriptContent: boolean,\n    includeSourceMaps: boolean,\n    addModifications: boolean,\n    shouldCompress: boolean,\n  }): Promise<void> {\n    // Base the filename on the trace's time of recording\n    const isoDate =\n        Platform.DateUtilities.toISO8601Compact(metadata.startTime ? new Date(metadata.startTime) : new Date());\n\n    const isCpuProfile = metadata.dataOrigin === Trace.Types.File.DataOrigin.CPU_PROFILE;\n    const {includeScriptContent, includeSourceMaps} = config;\n    metadata.enhancedTraceVersion =\n        includeScriptContent ? SDK.EnhancedTracesParser.EnhancedTracesParser.enhancedTraceVersion : undefined;\n\n    let fileName = (isCpuProfile ? `CPU-${isoDate}.cpuprofile` :\n                        includeScriptContent ? `EnhancedTrace-${isoDate}.json` :\n                                               `Trace-${isoDate}.json`) as Platform.DevToolsPath.RawPathString;\n\n    let blobParts: string[] = [];\n    if (isCpuProfile) {\n      const profile = Trace.Helpers.SamplesIntegrator.SamplesIntegrator.extractCpuProfileFromFakeTrace(traceEvents);\n      blobParts = [JSON.stringify(profile)];\n    } else {\n      const filteredMetadataSourceMaps =\n          includeScriptContent && includeSourceMaps ? this.#filterMetadataSourceMaps(metadata) : undefined;\n      const formattedTraceIter = traceJsonGenerator(traceEvents, {\n        ...metadata,\n        sourceMaps: filteredMetadataSourceMaps,\n      });\n      blobParts = Array.from(formattedTraceIter);\n    }\n\n    if (!blobParts.length) {\n      throw new Error('Trace content empty');\n    }\n\n    let blob = new Blob(blobParts, {type: 'application/json'});\n\n    if (config.shouldCompress) {\n      fileName = `${fileName}.gz` as Platform.DevToolsPath.RawPathString;\n      const gzStream = Common.Gzip.compressStream(blob.stream());\n      blob = await new Response(gzStream, {\n               headers: {'Content-Type': 'application/gzip'},\n             }).blob();\n\n      // At this point this should be true:\n      //  blobParts.join('') === (await gzBlob.arrayBuffer().then(bytes => Common.Gzip.arrayBufferToString(bytes)))\n    }\n\n    // In some cases Base64.encode() can return undefined; see crbug.com/436482118 for details.\n    // TODO(crbug.com/436482118): understand this edge case and fix the Base64.encode method to not just return undefined.\n    let bytesAsB64: string|null = null;\n    try {\n      // The maximum string length in v8 is `2 ** 29 - 23`, aka 538 MB.\n      // If the gzipped&base64-encoded trace is larger than that, this'll throw a RangeError.\n      bytesAsB64 = await Common.Base64.encode(blob);\n    } catch {\n    }\n    if (bytesAsB64?.length) {\n      const contentData = new TextUtils.ContentData.ContentData(bytesAsB64, /* isBase64=*/ true, blob.type);\n      await Workspace.FileManager.FileManager.instance().save(fileName, contentData, /* forceSaveAs=*/ true);\n      Workspace.FileManager.FileManager.instance().close(fileName);\n    } else {\n      // Fallback scenario used in edge case where trace.gz.base64 is larger than 538 MB.\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = fileName;\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n  }\n\n  async handleSaveToFileAction(): Promise<void> {\n    const exportTraceOptionsElement =\n        this.saveButton.element as TimelineComponents.ExportTraceOptions.ExportTraceOptions;\n    const state = exportTraceOptionsElement.state;\n    await this.saveToFile({\n      includeScriptContent: state.includeScriptContent,\n      includeSourceMaps: state.includeSourceMaps,\n      addModifications: state.includeAnnotations,\n      shouldCompress: state.shouldCompress,\n    });\n  }\n\n  #filterMetadataSourceMaps(metadata: Trace.Types.File.MetaData): Trace.Types.File.MetadataSourceMap[]|undefined {\n    if (!metadata.sourceMaps) {\n      return undefined;\n    }\n\n    // extensions sourcemaps provide little to no-value for the exported trace\n    // debugging, so they are filtered out.\n    return metadata.sourceMaps.filter(value => {\n      return !Trace.Helpers.Trace.isExtensionUrl(value.url);\n    });\n  }\n\n  #showExportTraceErrorDialog(error: Error): void {\n    if (this.statusDialog) {\n      this.statusDialog.remove();\n    }\n\n    this.statusDialog = new StatusDialog(\n        {\n          description: error.message ?? error.toString(),\n          buttonText: i18nString(UIStrings.close),\n          hideStopButton: false,\n          showProgress: false,\n          showTimer: false,\n        },\n        async () => {\n          this.statusDialog?.remove();\n          this.statusDialog = null;\n        });\n    this.statusDialog.showPane(this.statusPaneContainer);\n    this.statusDialog.updateStatus(i18nString(UIStrings.exportingFailed));\n  }\n\n  async showHistoryDropdown(): Promise<void> {\n    const recordingData = await this.#historyManager.showHistoryDropDown();\n    if (recordingData) {\n      if (recordingData.type === 'LANDING_PAGE') {\n        this.#changeView({mode: 'LANDING_PAGE'});\n      } else {\n        this.#changeView({\n          mode: 'VIEWING_TRACE',\n          traceIndex: recordingData.parsedTraceIndex,\n          forceOpenSidebar: false,\n        });\n      }\n    }\n  }\n\n  navigateHistory(direction: number): boolean {\n    const recordingData = this.#historyManager.navigate(direction);\n    // When navigating programmatically, you cannot navigate to the landing page\n    // view, so we can discount that possibility here.\n    if (recordingData && recordingData.type === 'TRACE_INDEX') {\n      this.#changeView({\n        mode: 'VIEWING_TRACE',\n        traceIndex: recordingData.parsedTraceIndex,\n        forceOpenSidebar: false,\n      });\n    }\n    return true;\n  }\n\n  #saveModificationsForActiveTrace(): void {\n    if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n      return;\n    }\n    const newModifications = ModificationsManager.activeManager()?.toJSON();\n    if (newModifications) {\n      this.#traceEngineModel.overrideModifications(this.#viewMode.traceIndex, newModifications);\n    }\n  }\n\n  selectFileToLoad(): void {\n    if (this.fileSelectorElement) {\n      this.fileSelectorElement.click();\n    }\n  }\n\n  async loadFromFile(file: File): Promise<void> {\n    if (this.state !== State.IDLE) {\n      return;\n    }\n\n    const content = await Common.Gzip.fileToString(file);\n    if (content.includes('enhancedTraceVersion')) {\n      this.#launchRehydratedSession(content);\n    } else {\n      this.loader = TimelineLoader.loadFromParsedJsonFile(JSON.parse(content), this);\n      this.prepareToLoadTimeline();\n    }\n    this.createFileSelector();\n  }\n\n  #launchRehydratedSession(traceJson: string): void {\n    let rehydratingWindow: Window|null = null;\n    let pathToLaunch: string|null = null;\n    const url = new URL(window.location.href);\n    const pathToEntrypoint = url.pathname.slice(0, url.pathname.lastIndexOf('/'));\n    url.pathname = `${pathToEntrypoint}/rehydrated_devtools_app.html`;\n    // The standalone devtools shouldn't retain any existing query params.\n    url.search = '';\n    pathToLaunch = url.toString();\n\n    // Clarifying the window the code is referring to\n    const hostWindow = window;\n    function onMessageHandler(ev: MessageEvent): void {\n      if (url && ev.data && ev.data.type === 'REHYDRATING_WINDOW_READY') {\n        rehydratingWindow?.postMessage({type: 'REHYDRATING_TRACE_FILE', traceJson}, url.origin);\n      }\n      hostWindow.removeEventListener('message', onMessageHandler);\n    }\n    hostWindow.addEventListener('message', onMessageHandler);\n\n    if (this.isDocked()) {\n      rehydratingWindow = hostWindow.open(pathToLaunch, /* target: */ '_blank', 'noopener=false,popup=false');\n    } else {\n      rehydratingWindow = hostWindow.open(pathToLaunch, /* target: */ undefined, 'noopener=false,popup=true');\n    }\n  }\n\n  async loadFromURL(url: Platform.DevToolsPath.UrlString): Promise<void> {\n    if (this.state !== State.IDLE) {\n      return;\n    }\n    this.prepareToLoadTimeline();\n    this.loader = await TimelineLoader.loadFromURL(url, this);\n  }\n\n  private isDocked(): boolean {\n    return UI.DockController.DockController.instance().dockSide() !== UI.DockController.DockState.UNDOCKED;\n  }\n\n  private updateMiniMap(): void {\n    if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n      this.#minimapComponent.setData(null);\n      return;\n    }\n\n    const parsedTrace = this.#traceEngineModel.parsedTrace(this.#viewMode.traceIndex);\n    const isCpuProfile = parsedTrace?.metadata.dataOrigin === Trace.Types.File.DataOrigin.CPU_PROFILE;\n    if (!parsedTrace) {\n      return;\n    }\n\n    this.#minimapComponent.setData({\n      parsedTrace,\n      isCpuProfile,\n      settings: {\n        showScreenshots: this.showScreenshotsSetting.get(),\n        showMemory: this.showMemorySetting.get(),\n      },\n    });\n  }\n\n  private onMemoryModeChanged(): void {\n    this.flameChart.updateCountersGraphToggle(this.showMemorySetting.get());\n    this.updateMiniMap();\n    this.doResize();\n    this.select(null);\n  }\n\n  private onDimThirdPartiesChanged(): void {\n    if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n      return;\n    }\n    this.flameChart.dimThirdPartiesIfRequired();\n  }\n\n  #extensionDataVisibilityChanged(): void {\n    this.flameChart.rebuildDataForTrace({updateType: 'REDRAW_EXISTING_TRACE'});\n  }\n\n  private updateSettingsPaneVisibility(): void {\n    if (isNode || !this.canRecord()) {\n      return;\n    }\n    if (this.showSettingsPaneSetting.get()) {\n      this.showSettingsPaneButton.setToggled(true);\n      this.settingsPane?.classList.remove('hidden');\n    } else {\n      this.showSettingsPaneButton.setToggled(false);\n      this.settingsPane?.classList.add('hidden');\n    }\n  }\n\n  private updateShowSettingsToolbarButton(): void {\n    const messages: string[] = [];\n    if (SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingRate() !== 1) {\n      messages.push(i18nString(UIStrings.CpuThrottlingIsEnabled));\n    }\n    if (SDK.NetworkManager.MultitargetNetworkManager.instance().isThrottling()) {\n      messages.push(i18nString(UIStrings.NetworkThrottlingIsEnabled));\n    }\n    if (this.captureLayersAndPicturesSetting.get()) {\n      messages.push(i18nString(UIStrings.SignificantOverheadDueToPaint));\n    }\n    if (this.captureSelectorStatsSetting.get()) {\n      messages.push(i18nString(UIStrings.SelectorStatsEnabled));\n    }\n    if (this.disableCaptureJSProfileSetting.get()) {\n      messages.push(i18nString(UIStrings.JavascriptSamplingIsDisabled));\n    }\n\n    this.showSettingsPaneButton.setChecked(messages.length > 0);\n    this.showSettingsPaneButton.element.style.setProperty('--dot-toggle-top', '16px');\n    this.showSettingsPaneButton.element.style.setProperty('--dot-toggle-left', '15px');\n\n    if (messages.length) {\n      const tooltipElement = document.createElement('div');\n      messages.forEach(message => {\n        tooltipElement.createChild('div').textContent = message;\n      });\n      this.showSettingsPaneButton.setTitle(tooltipElement.textContent || '');\n    } else {\n      this.showSettingsPaneButton.setTitle(i18nString(UIStrings.captureSettings));\n    }\n  }\n\n  private setUIControlsEnabled(enabled: boolean): void {\n    this.recordingOptionUIControls.forEach(control => control.setEnabled(enabled));\n  }\n\n  async #evaluateInspectedURL(): Promise<Platform.DevToolsPath.UrlString> {\n    if (!this.controller) {\n      return Platform.DevToolsPath.EmptyUrlString;\n    }\n\n    // target.inspectedURL is reliably populated, however it lacks any url #hash\n    const inspectedURL = this.controller.primaryPageTarget.inspectedURL();\n\n    // We'll use the navigationHistory to acquire the current URL including hash\n    const resourceTreeModel = this.controller.primaryPageTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    const navHistory = resourceTreeModel && await resourceTreeModel.navigationHistory();\n    if (!resourceTreeModel || !navHistory) {\n      return inspectedURL;\n    }\n\n    const {currentIndex, entries} = navHistory;\n    const navigationEntry = entries[currentIndex];\n    return navigationEntry.url as Platform.DevToolsPath.UrlString;\n  }\n\n  async #navigateToAboutBlank(): Promise<void> {\n    const aboutBlankNavigationComplete = new Promise<void>(async (resolve, reject) => {\n      if (!this.controller) {\n        reject('Could not find TimelineController');\n        return;\n      }\n      const target = this.controller.primaryPageTarget;\n      const resourceModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      if (!resourceModel) {\n        reject('Could not load resourceModel');\n        return;\n      }\n\n      // To clear out the page and any state from prior test runs, we\n      // navigate to about:blank before initiating the trace recording.\n      // Once we have navigated to about:blank, we start recording and\n      // then navigate to the original page URL, to ensure we profile the\n      // page load.\n      function waitForAboutBlank(event: Common.EventTarget.EventTargetEvent<SDK.ResourceTreeModel.ResourceTreeFrame>):\n          void {\n        if (event.data.url === 'about:blank') {\n          resolve();\n        } else {\n          reject(`Unexpected navigation to ${event.data.url}`);\n        }\n        resourceModel?.removeEventListener(SDK.ResourceTreeModel.Events.FrameNavigated, waitForAboutBlank);\n      }\n      resourceModel.addEventListener(SDK.ResourceTreeModel.Events.FrameNavigated, waitForAboutBlank);\n      await resourceModel.navigate('about:blank' as Platform.DevToolsPath.UrlString);\n    });\n    await aboutBlankNavigationComplete;\n  }\n\n  async #startCPUProfilingRecording(): Promise<void> {\n    try {\n      this.cpuProfiler = UI.Context.Context.instance().flavor(SDK.CPUProfilerModel.CPUProfilerModel);\n      if (!this.cpuProfiler) {\n        // If there is no isolate selected, we will profile the first isolate that devtools connects to.\n        // If we profile all target, but this will cause some bugs like time for the function is calculated wrong,\n        // because the profiles will be concated and sorted together, so the total time will be amplified.\n        // Multiple targets problem might happen when you inspect multiple node servers on different port at same time,\n        // or when you let DevTools listen to both localhost:9229 & 127.0.0.1:9229.\n        const firstNodeTarget =\n            SDK.TargetManager.TargetManager.instance().targets().find(target => target.type() === SDK.Target.Type.NODE);\n        if (!firstNodeTarget) {\n          throw new Error('Could not load any Node target.');\n        }\n        if (firstNodeTarget) {\n          this.cpuProfiler = firstNodeTarget.model(SDK.CPUProfilerModel.CPUProfilerModel);\n        }\n      }\n\n      this.setUIControlsEnabled(false);\n      this.#changeView({mode: 'STATUS_PANE_OVERLAY'});\n      if (!this.cpuProfiler) {\n        throw new Error('No Node target is found.');\n      }\n      await SDK.TargetManager.TargetManager.instance().suspendAllTargets('performance-timeline');\n      await this.cpuProfiler.startRecording();\n\n      this.recordingStarted();\n    } catch (e) {\n      await this.recordingFailed(e.message);\n    }\n  }\n\n  async #startTraceRecording(): Promise<void> {\n    try {\n      // We record against the root target, but also need to use the\n      // primaryPageTarget to inspect the current URL. For more info, see the\n      // JSDoc comment on the TimelineController constructor.\n      const rootTarget = SDK.TargetManager.TargetManager.instance().rootTarget();\n      const primaryPageTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n\n      if (!primaryPageTarget) {\n        throw new Error('Could not load primary page target.');\n      }\n      if (!rootTarget) {\n        throw new Error('Could not load root target.');\n      }\n\n      if (UIDevtoolsUtils.isUiDevTools()) {\n        this.controller = new UIDevtoolsController(rootTarget, primaryPageTarget, this);\n      } else {\n        this.controller = new TimelineController(rootTarget, primaryPageTarget, this);\n      }\n      this.setUIControlsEnabled(false);\n      this.#changeView({mode: 'STATUS_PANE_OVERLAY'});\n      if (!this.controller) {\n        throw new Error('Could not create Timeline controller');\n      }\n\n      const urlToTrace = await this.#evaluateInspectedURL();\n      // If we are doing \"Reload & record\", we first navigate the page to\n      // about:blank. This is to ensure any data on the timeline from any\n      // previous performance recording is lost, avoiding the problem where a\n      // timeline will show data & screenshots from a previous page load that\n      // was not relevant.\n      if (this.recordingPageReload) {\n        await this.#navigateToAboutBlank();\n      }\n      const recordingOptions = {\n        enableJSSampling: !this.disableCaptureJSProfileSetting.get(),\n        capturePictures: this.captureLayersAndPicturesSetting.get(),\n        captureFilmStrip: this.showScreenshotsSetting.get(),\n        captureSelectorStats: this.captureSelectorStatsSetting.get(),\n      };\n      // Order is important here: we tell the controller to start recording, which enables tracing.\n      const response = await this.controller.startRecording(recordingOptions);\n      if (response.getError()) {\n        throw new Error(response.getError());\n      }\n      // Once we get here, we know tracing is active.\n      // This is when, if the user has hit \"Reload & Record\" that we now need to navigate to the original URL.\n      // If the user has just hit \"record\", we don't do any navigating.\n      const recordingConfig = this.recordingPageReload ? {navigateToUrl: urlToTrace} : undefined;\n      this.recordingStarted(recordingConfig);\n    } catch (e) {\n      await this.recordingFailed(e.message);\n    }\n  }\n\n  private async startRecording(): Promise<void> {\n    console.assert(!this.statusDialog, 'Status pane is already opened.');\n    this.setState(State.START_PENDING);\n    this.showRecordingStarted();\n\n    if (isNode) {\n      await this.#startCPUProfilingRecording();\n    } else {\n      await this.#startTraceRecording();\n    }\n    Badges.UserBadges.instance().recordAction(Badges.BadgeAction.PERFORMANCE_RECORDING_STARTED);\n  }\n\n  private async stopRecording(): Promise<void> {\n    if (this.statusDialog) {\n      this.statusDialog.finish();\n      this.statusDialog.updateStatus(i18nString(UIStrings.stoppingTimeline));\n      this.statusDialog.updateProgressBar(i18nString(UIStrings.received), 0);\n    }\n    this.setState(State.STOP_PENDING);\n    if (this.controller) {\n      await this.controller.stopRecording();\n      this.setUIControlsEnabled(true);\n      await this.controller.dispose();\n      this.controller = null;\n      return;\n    }\n    if (this.cpuProfiler) {\n      const profile = await this.cpuProfiler.stopRecording();\n      this.setState(State.IDLE);\n      this.loadFromCpuProfile(profile);\n\n      this.setUIControlsEnabled(true);\n      this.cpuProfiler = null;\n\n      await SDK.TargetManager.TargetManager.instance().resumeAllTargets();\n    }\n  }\n\n  private async recordingFailed(error: string, rawEvents?: Trace.Types.Events.Event[]): Promise<void> {\n    if (this.statusDialog) {\n      this.statusDialog.remove();\n    }\n    this.statusDialog = new StatusDialog(\n        {\n          description: error,\n          buttonText: i18nString(UIStrings.close),\n          hideStopButton: true,\n          showProgress: undefined,\n          showTimer: undefined,\n        },\n        // When recording failed, we should load null to go back to the landing page.\n        async () => {\n          this.statusDialog?.remove();\n          await this.loadingComplete(\n              /* no collectedEvents */[],\n              /* exclusiveFilter= */ null,\n              /* metadata= */ null);\n        });\n    this.statusDialog.showPane(this.statusPaneContainer);\n    this.statusDialog.updateStatus(i18nString(UIStrings.recordingFailed));\n\n    if (rawEvents) {\n      this.statusDialog.enableDownloadOfEvents(rawEvents);\n    }\n\n    this.setState(State.RECORDING_FAILED);\n    this.traceLoadStart = null;\n    this.setUIControlsEnabled(true);\n    if (this.controller) {\n      await this.controller.dispose();\n      this.controller = null;\n    }\n    // Ensure we resume all targets, otherwise DevTools remains unresponsive in the event of an error.\n    void SDK.TargetManager.TargetManager.instance().resumeAllTargets();\n  }\n\n  private onSuspendStateChanged(): void {\n    this.updateTimelineControls();\n  }\n\n  private consoleProfileFinished(data: SDK.CPUProfilerModel.ProfileFinishedData): void {\n    this.loadFromCpuProfile(data.cpuProfile);\n    void UI.InspectorView.InspectorView.instance().showPanel('timeline');\n  }\n\n  private updateTimelineControls(): void {\n    if (this.#viewMode.mode === 'VIEWING_TRACE') {\n      this.#addSidebarIconToToolbar();\n    }\n\n    const exportTraceOptionsElement =\n        this.saveButton.element as TimelineComponents.ExportTraceOptions.ExportTraceOptions;\n    exportTraceOptionsElement.data = {\n      onExport: this.saveToFile.bind(this),\n      buttonEnabled: this.state === State.IDLE && this.#hasActiveTrace(),\n    };\n\n    this.#historyManager.setEnabled(this.state === State.IDLE);\n    this.clearButton.setEnabled(this.state === State.IDLE);\n    this.dropTarget.setEnabled(this.state === State.IDLE);\n    this.loadButton.setEnabled(this.state === State.IDLE);\n    this.toggleRecordAction.setToggled(this.state === State.RECORDING);\n    this.toggleRecordAction.setEnabled(this.state === State.RECORDING || this.state === State.IDLE);\n    this.askAiButton?.setEnabled(this.state === State.IDLE && this.#hasActiveTrace());\n\n    if (!this.canRecord()) {\n      return;\n    }\n\n    this.recordReloadAction.setEnabled(isNode ? false : this.state === State.IDLE);\n    this.panelToolbar.setEnabled(this.state !== State.LOADING);\n    this.panelRightToolbar.setEnabled(this.state !== State.LOADING);\n    this.homeButton?.setEnabled(this.state === State.IDLE && this.#hasActiveTrace());\n  }\n\n  async toggleRecording(): Promise<void> {\n    if (this.state === State.IDLE) {\n      this.recordingPageReload = false;\n      await this.startRecording();\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.TimelineStarted);\n    } else if (this.state === State.RECORDING) {\n      await this.stopRecording();\n    }\n  }\n\n  recordReload(): void {\n    if (this.state !== State.IDLE) {\n      return;\n    }\n    this.recordingPageReload = true;\n    void this.startRecording();\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.TimelinePageReloadStarted);\n  }\n\n  private onClearButton(): void {\n    this.#historyManager.clear();\n    this.#traceEngineModel = this.#instantiateNewModel();\n    ModificationsManager.reset();\n    this.#uninstallSourceMapsResolver();\n    this.flameChart.getMainDataProvider().reset();\n    this.flameChart.getNetworkDataProvider().reset();\n    this.flameChart.reset();\n    this.#changeView({mode: 'LANDING_PAGE'});\n    UI.Context.Context.instance().setFlavor(AiAssistanceModel.AgentFocus, null);\n  }\n\n  #hasActiveTrace(): boolean {\n    return this.#viewMode.mode === 'VIEWING_TRACE';\n  }\n\n  #applyActiveFilters(traceIsGeneric: boolean, exclusiveFilter: Trace.Extras.TraceFilter.TraceFilter|null = null):\n      void {\n    if (traceIsGeneric || Root.Runtime.experiments.isEnabled('timeline-show-all-events')) {\n      return;\n    }\n\n    const newActiveFilters = exclusiveFilter ? [exclusiveFilter] : [\n      TimelineUIUtils.visibleEventsFilter(),\n    ];\n\n    ActiveFilters.instance().setFilters(newActiveFilters);\n  }\n\n  /**\n   * Called when we update the active trace that is being shown to the user.\n   * This is called from {@see changeView} when we change the UI to show a\n   * trace - either one the user has just recorded/imported, or one they have\n   * navigated to via the dropdown.\n   *\n   * If you need code to execute whenever the active trace changes, this is the method to use.\n   * If you need code to execute ONLY ON NEW TRACES, then use {@see loadingComplete}\n   * You should not call this method directly if you want the UI to update; use\n   * {@see changeView} to control what is shown to the user.\n   */\n  #setModelForActiveTrace(): void {\n    if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n      return;\n    }\n    const {traceIndex} = this.#viewMode;\n    const parsedTrace = this.#traceEngineModel.parsedTrace(traceIndex);\n    const syntheticEventsManager = this.#traceEngineModel.syntheticTraceEventsManager(traceIndex);\n\n    if (!parsedTrace || !syntheticEventsManager) {\n      // This should not happen, because you can only get into the\n      // VIEWING_TRACE viewMode if you have a valid trace index from the\n      // Trace Engine. If it does, let's bail back to the landing page.\n      console.error(`setModelForActiveTrace was called with an invalid trace index: ${traceIndex}`);\n      this.#changeView({mode: 'LANDING_PAGE'});\n      return;\n    }\n\n    Trace.Helpers.SyntheticEvents.SyntheticEventsManager.activate(syntheticEventsManager);\n    // Clear the line level profile that could exist from the previous trace.\n    PerfUI.LineLevelProfile.Performance.instance().reset();\n\n    this.#minimapComponent.reset();\n\n    // Order is important: the bounds must be set before we initiate any UI\n    // rendering.\n    const data = parsedTrace.data;\n    TraceBounds.TraceBounds.BoundsManager.instance().resetWithNewBounds(\n        data.Meta.traceBounds,\n    );\n\n    // Set up the modifications manager for the newly active trace.\n    // The order is important: this needs to happen before we trigger a flame chart redraw by setting the model.\n    // (it could happen after, but then we would need to trigger a fresh redraw so let's not do that)\n    const currentManager = ModificationsManager.initAndActivateModificationsManager(this.#traceEngineModel, traceIndex);\n\n    if (!currentManager) {\n      console.error('ModificationsManager could not be created or activated.');\n    }\n    this.statusDialog?.updateProgressBar(i18nString(UIStrings.processed), 70);\n\n    this.flameChart.setModel(parsedTrace, this.#eventToRelatedInsights);\n    this.flameChart.resizeToPreferredHeights();\n    // Reset the visual selection as we've just swapped to a new trace.\n    this.flameChart.setSelectionAndReveal(null);\n    this.#sideBar.setParsedTrace(parsedTrace);\n\n    this.#searchableView.showWidget();\n\n    const exclusiveFilter = this.#exclusiveFilterPerTrace.get(traceIndex) ?? null;\n    this.#applyActiveFilters(parsedTrace.data.Meta.traceIsGeneric, exclusiveFilter);\n    (this.saveButton.element as TimelineComponents.ExportTraceOptions.ExportTraceOptions).updateContentVisibility({\n      annotationsExist: currentManager ? currentManager.getAnnotations()?.length > 0 : false\n    });\n\n    // Add ModificationsManager listeners for annotations change to update the\n    // Annotation Overlays.\n    currentManager?.addEventListener(AnnotationModifiedEvent.eventName, this.#onAnnotationModifiedEventBound);\n\n    // To calculate the activity we might want to zoom in, we use the top-most main-thread track\n    const topMostMainThreadAppender =\n        this.flameChart.getMainDataProvider().compatibilityTracksAppenderInstance().threadAppenders().at(0);\n    if (topMostMainThreadAppender) {\n      const zoomedInBounds = Trace.Extras.MainThreadActivity.calculateWindow(\n          parsedTrace.data.Meta.traceBounds, topMostMainThreadAppender.getEntries());\n\n      TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(zoomedInBounds);\n    }\n\n    // Add overlays for annotations loaded from the trace file\n    const currModificationManager = ModificationsManager.activeManager();\n    if (currModificationManager) {\n      const annotations = currModificationManager.getAnnotations();\n      const annotationEntryToColorMap = this.buildColorsAnnotationsMap(annotations);\n      this.#sideBar.setAnnotations(annotations, annotationEntryToColorMap);\n      this.flameChart.bulkAddOverlays(currModificationManager.getOverlays());\n    }\n\n    // Set up line level profiling with CPU profiles, if we found any.\n    PerfUI.LineLevelProfile.Performance.instance().reset();\n    if (parsedTrace.data.Samples.profilesInProcess.size) {\n      const primaryPageTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n      // Gather up all CPU Profiles we found when parsing this trace.\n      const cpuProfiles =\n          Array.from(parsedTrace.data.Samples.profilesInProcess).flatMap(([_processId, threadsInProcess]) => {\n            const profiles = Array.from(threadsInProcess.values()).map(profileData => profileData.parsedProfile);\n            return profiles;\n          });\n      for (const profile of cpuProfiles) {\n        PerfUI.LineLevelProfile.Performance.instance().appendCPUProfile(profile, primaryPageTarget);\n      }\n    }\n\n    // Initialize EntityMapper\n    this.#entityMapper = new Trace.EntityMapper.EntityMapper(parsedTrace);\n\n    // Set up SourceMapsResolver to ensure we resolve any function names in\n    // profile calls.\n    // Pass in the entity mapper.\n    this.#sourceMapsResolver = new SourceMapsResolver.SourceMapsResolver(parsedTrace, this.#entityMapper);\n    this.#sourceMapsResolver.addEventListener(\n        SourceMapsResolver.SourceMappingsUpdated.eventName, this.#onSourceMapsNodeNamesResolvedBound);\n    void this.#sourceMapsResolver.install();\n\n    // Initialize EntityMapper\n    this.#entityMapper = new Trace.EntityMapper.EntityMapper(parsedTrace);\n\n    this.statusDialog?.updateProgressBar(i18nString(UIStrings.processed), 80);\n    this.updateMiniMap();\n    this.statusDialog?.updateProgressBar(i18nString(UIStrings.processed), 90);\n    this.updateTimelineControls();\n    this.#maybeCreateHiddenTracksBanner(parsedTrace);\n\n    this.#setActiveInsight(null);\n\n    this.#eventToRelatedInsights.clear();\n    if (parsedTrace.insights) {\n      for (const [insightSetKey, insightSet] of parsedTrace.insights) {\n        for (const model of Object.values(insightSet.model)) {\n          let relatedEvents = model.relatedEvents;\n          if (!relatedEvents) {\n            relatedEvents = new Map();\n          } else if (Array.isArray(relatedEvents)) {\n            relatedEvents = new Map(relatedEvents.map(e => [e, []]));\n          }\n\n          for (const [event, messages] of relatedEvents.entries()) {\n            const relatedInsights = this.#eventToRelatedInsights.get(event) ?? [];\n            this.#eventToRelatedInsights.set(event, relatedInsights);\n            relatedInsights.push({\n              insightLabel: model.title,\n              messages,\n              activateInsight: () => {\n                this.#setActiveInsight({model, insightSetKey});\n              },\n            });\n          }\n        }\n      }\n    }\n\n    // When the timeline is loaded for the first time, setup the shortcuts dialog and log what navigation setting is selected.\n    // Logging the setting on the first timeline load will allow us to get an estimate number of people using each option.\n    if (this.#traceEngineModel.size() === 1) {\n      this.#setupNavigationSetting();\n      if (Common.Settings.moduleSetting('flamechart-selected-navigation').get() === 'classic') {\n        Host.userMetrics.navigationSettingAtFirstTimelineLoad(\n            Host.UserMetrics.TimelineNavigationSetting.CLASSIC_AT_SESSION_FIRST_TRACE);\n      } else {\n        Host.userMetrics.navigationSettingAtFirstTimelineLoad(\n            Host.UserMetrics.TimelineNavigationSetting.MODERN_AT_SESSION_FIRST_TRACE);\n      }\n    }\n\n    UI.Context.Context.instance().setFlavor(\n        AiAssistanceModel.AgentFocus, AiAssistanceModel.AgentFocus.fromParsedTrace(parsedTrace));\n  }\n\n  #onAnnotationModifiedEvent(e: Event): void {\n    const event = e as AnnotationModifiedEvent;\n    const announcementText = AnnotationHelpers.ariaAnnouncementForModifiedEvent(event);\n    if (announcementText) {\n      UI.ARIAUtils.LiveAnnouncer.alert(announcementText);\n    }\n\n    const {overlay, action} = event;\n    if (action === 'Add') {\n      this.flameChart.addOverlay(overlay);\n    } else if (action === 'Remove') {\n      this.flameChart.removeOverlay(overlay);\n    } else if (action === 'UpdateTimeRange' && AnnotationHelpers.isTimeRangeLabel(overlay)) {\n      this.flameChart.updateExistingOverlay(overlay, {\n        bounds: overlay.bounds,\n      });\n    } else if (action === 'UpdateLinkToEntry' && AnnotationHelpers.isEntriesLink(overlay)) {\n      this.flameChart.updateExistingOverlay(overlay, {\n        entryTo: overlay.entryTo,\n      });\n    } else if (action === 'EnterLabelEditState' && AnnotationHelpers.isEntryLabel(overlay)) {\n      this.flameChart.enterLabelEditMode(overlay);\n    } else if (action === 'LabelBringForward' && AnnotationHelpers.isEntryLabel(overlay)) {\n      this.flameChart.bringLabelForward(overlay);\n    }\n\n    const currentManager = ModificationsManager.activeManager();\n    const annotations = currentManager?.getAnnotations() ?? [];\n    const annotationEntryToColorMap = this.buildColorsAnnotationsMap(annotations);\n    this.#sideBar.setAnnotations(annotations, annotationEntryToColorMap);\n    (this.saveButton.element as TimelineComponents.ExportTraceOptions.ExportTraceOptions).updateContentVisibility({\n      annotationsExist: currentManager ? currentManager.getAnnotations()?.length > 0 : false\n    });\n  }\n\n  /**\n   * After the user imports / records a trace, we auto-show the sidebar.\n   */\n  #showSidebar(): void {\n    const disabledByLocalStorageForTests =\n        window.localStorage.getItem('disable-auto-show-rpp-sidebar-for-test') === 'true';\n    if (disabledByLocalStorageForTests) {\n      return;\n    }\n\n    if (!this.#splitWidget.sidebarIsShowing()) {\n      this.#splitWidget.showBoth();\n    }\n  }\n\n  // Build a map mapping annotated entries to the colours that are used to display them in the FlameChart.\n  // We need this map to display the entries in the sidebar with the same colours.\n  private buildColorsAnnotationsMap(annotations: Trace.Types.File.Annotation[]): Map<Trace.Types.Events.Event, string> {\n    const annotationEntryToColorMap = new Map<Trace.Types.Events.Event, string>();\n\n    for (const annotation of annotations) {\n      if (Trace.Types.File.isEntryLabelAnnotation(annotation)) {\n        annotationEntryToColorMap.set(annotation.entry, this.getEntryColorByEntry(annotation.entry));\n      } else if (Trace.Types.File.isEntriesLinkAnnotation(annotation)) {\n        annotationEntryToColorMap.set(annotation.entryFrom, this.getEntryColorByEntry(annotation.entryFrom));\n        if (annotation.entryTo) {\n          annotationEntryToColorMap.set(annotation.entryTo, this.getEntryColorByEntry(annotation.entryTo));\n        }\n      }\n    }\n\n    return annotationEntryToColorMap;\n  }\n\n  /**\n   * If the user imports or records a trace and we have any hidden tracks, we\n   * show a warning banner at the bottom. This can be dismissed by the user and\n   * if that happens we do not want to bring it back again.\n   */\n  #maybeCreateHiddenTracksBanner(parsedTrace: Trace.TraceModel.ParsedTrace): void {\n    const hasHiddenTracks = this.flameChart.hasHiddenTracks();\n    if (!hasHiddenTracks) {\n      return;\n    }\n\n    const maybeOverlay = createHiddenTracksOverlay(parsedTrace, {\n      onClose: () => {\n        this.flameChart.overlays().removeOverlaysOfType('BOTTOM_INFO_BAR');\n        this.#hiddenTracksInfoBarByParsedTrace.set(parsedTrace, 'DISMISSED');\n      },\n      onShowAllTracks: () => {\n        this.flameChart.showAllMainChartTracks();\n      },\n      onShowTrackConfigurationMode: () => {\n        this.flameChart.enterMainChartTrackConfigurationMode();\n      }\n    });\n    if (maybeOverlay) {\n      this.flameChart.addOverlay(maybeOverlay);\n    }\n  }\n\n  private getEntryColorByEntry(entry: Trace.Types.Events.Event): string {\n    const mainIndex = this.flameChart.getMainDataProvider().indexForEvent(entry);\n    const networkIndex = this.flameChart.getNetworkDataProvider().indexForEvent(entry);\n    if (mainIndex !== null) {\n      const color = this.flameChart.getMainDataProvider().entryColor(mainIndex);\n\n      // The color for idle frames will be white in flame chart, which will display weird in the sidebar, so just use a\n      // light gray color instead.\n      if (color === 'white') {\n        return ThemeSupport.ThemeSupport.instance().getComputedValue('--app-color-system');\n      }\n      return color;\n    }\n    if (networkIndex !== null) {\n      const color = this.flameChart.getNetworkDataProvider().entryColor(networkIndex);\n      return color;\n    }\n\n    console.warn('Could not get entry color for ', entry);\n    return ThemeSupport.ThemeSupport.instance().getComputedValue('--app-color-system');\n  }\n\n  private recordingStarted(config?: {navigateToUrl: Platform.DevToolsPath.UrlString}): void {\n    if (config && this.recordingPageReload && this.controller) {\n      // If the user hit \"Reload & record\", by this point we have:\n      // 1. Navigated to about:blank\n      // 2. Initiated tracing.\n      // We therefore now should navigate back to the original URL that the user wants to profile.\n      const resourceModel = this.controller?.primaryPageTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      if (!resourceModel) {\n        void this.recordingFailed('Could not navigate to original URL');\n        return;\n      }\n      // We don't need to await this because we are purposefully showing UI\n      // progress as the page loads & tracing is underway.\n      void resourceModel.navigate(config.navigateToUrl);\n    }\n\n    this.#changeView({mode: 'STATUS_PANE_OVERLAY'});\n    this.setState(State.RECORDING);\n    this.showRecordingStarted();\n    if (this.statusDialog) {\n      this.statusDialog.enableAndFocusButton();\n      this.statusDialog.updateStatus(i18nString(UIStrings.tracing));\n      this.statusDialog.updateProgressBar(i18nString(UIStrings.bufferUsage), 0);\n      this.statusDialog.startTimer();\n    }\n  }\n\n  recordingProgress(usage: number): void {\n    if (this.statusDialog) {\n      this.statusDialog.updateProgressBar(i18nString(UIStrings.bufferUsage), usage * 100);\n    }\n  }\n\n  /**\n   * Hide the sidebar, but persist the user's state, because when they import a\n   * trace we want to revert the sidebar back to what it was.\n   */\n  #hideSidebar(): void {\n    if (this.#splitWidget.sidebarIsShowing()) {\n      this.#splitWidget.hideSidebar();\n    }\n  }\n\n  #showLandingPage(): void {\n    this.updateSettingsPaneVisibility();\n    this.#removeSidebarIconFromToolbar();\n    this.#hideSidebar();\n\n    if (this.landingPage) {\n      this.landingPage.show(this.statusPaneContainer);\n      return;\n    }\n\n    const liveMetrics = new TimelineComponents.LiveMetricsView.LiveMetricsView();\n    liveMetrics.isNode = isNode;\n    this.landingPage = LegacyWrapper.LegacyWrapper.legacyWrapper(UI.Widget.Widget, liveMetrics);\n    this.landingPage.element.classList.add('timeline-landing-page', 'fill');\n    this.landingPage.contentElement.classList.add('fill');\n    this.landingPage.show(this.statusPaneContainer);\n  }\n\n  #hideLandingPage(): void {\n    this.landingPage.detach();\n\n    // Hide pane settings in trace view to conserve UI space, but preserve underlying setting.\n    this.showSettingsPaneButton?.setToggled(false);\n    this.settingsPane?.classList.add('hidden');\n  }\n\n  async loadingStarted(): Promise<void> {\n    this.#changeView({mode: 'STATUS_PANE_OVERLAY'});\n\n    if (this.statusDialog) {\n      this.statusDialog.remove();\n    }\n    this.statusDialog = new StatusDialog(\n        {\n          showProgress: true,\n          showTimer: undefined,\n          hideStopButton: true,\n          buttonText: undefined,\n          description: undefined,\n        },\n        () => this.cancelLoading());\n    this.statusDialog.showPane(this.statusPaneContainer);\n    this.statusDialog.updateStatus(i18nString(UIStrings.loadingTrace));\n    // FIXME: make loading from backend cancelable as well.\n    if (!this.loader) {\n      this.statusDialog.finish();\n    }\n    this.traceLoadStart = Trace.Types.Timing.Milli(performance.now());\n    await this.loadingProgress(0);\n  }\n\n  async loadingProgress(progress?: number): Promise<void> {\n    if (typeof progress === 'number' && this.statusDialog) {\n      this.statusDialog.updateProgressBar(i18nString(UIStrings.received), progress * 100);\n    }\n  }\n\n  async processingStarted(): Promise<void> {\n    this.statusDialog?.updateStatus(i18nString(UIStrings.processingTrace));\n  }\n\n  #listenForProcessingProgress(): void {\n    this.#traceEngineModel.addEventListener(Trace.TraceModel.ModelUpdateEvent.eventName, e => {\n      const updateEvent = e as Trace.TraceModel.ModelUpdateEvent;\n      const str = i18nString(UIStrings.processed);\n\n      // Trace Engine will report progress from [0...1] but we still have more work to do. So, scale them down a bit.\n      const traceParseMaxProgress = 0.7;\n\n      if (updateEvent.data.type === Trace.TraceModel.ModelUpdateType.COMPLETE) {\n        this.statusDialog?.updateProgressBar(str, 100 * traceParseMaxProgress);\n      } else if (updateEvent.data.type === Trace.TraceModel.ModelUpdateType.PROGRESS_UPDATE) {\n        const data = updateEvent.data.data;\n        this.statusDialog?.updateProgressBar(str, data.percent * 100 * traceParseMaxProgress);\n      }\n    });\n  }\n\n  #onSourceMapsNodeNamesResolved(): void {\n    // Source maps can change the way calls hierarchies should look in\n    // the flame chart (f.e. if some calls are ignore listed after\n    // resolving source maps). Thus, we must reappend the flamechart\n    // entries.\n    this.flameChart.getMainDataProvider().timelineData(true);\n    this.flameChart.getMainFlameChart().update();\n  }\n\n  /**\n   * This is called with we are done loading a trace from a file, or after we\n   * have recorded a fresh trace.\n   *\n   * IMPORTANT: All the code in here should be code that is only required when we have\n   * recorded or imported from disk a brand new trace. If you need the code to\n   * run when the user switches to an existing trace, please @see\n   * #setModelForActiveTrace and put your code in there.\n   **/\n  async loadingComplete(\n      collectedEvents: Trace.Types.Events.Event[], exclusiveFilter: Trace.Extras.TraceFilter.TraceFilter|null = null,\n      metadata: Trace.Types.File.MetaData|null): Promise<void> {\n    this.#traceEngineModel.resetProcessor();\n\n    delete this.loader;\n\n    // If the user just recorded this trace via the record UI, the state will\n    // be StopPending. Whereas if it was an existing trace they loaded via a\n    // file, it will be State.Loading. This means we can tell the recording is\n    // fresh by checking the state value.\n    const recordingIsFresh = this.state === State.STOP_PENDING;\n\n    this.setState(State.IDLE);\n\n    if (collectedEvents.length === 0) {\n      // 0 collected events indicates probably an invalid file was imported.\n      // If the user does not have any already-loaded traces, then we should\n      // just reset the panel back to the landing page. However if they had a\n      // previous trace imported, we should go to that instead.\n      if (this.#traceEngineModel.size()) {\n        this.#changeView({\n          mode: 'VIEWING_TRACE',\n          traceIndex: this.#traceEngineModel.lastTraceIndex(),\n          forceOpenSidebar: false,\n        });\n      } else {\n        this.#changeView({mode: 'LANDING_PAGE'});\n      }\n      return;\n    }\n\n    try {\n      await this.#executeNewTrace(collectedEvents, recordingIsFresh, metadata);\n      const traceIndex = this.#traceEngineModel.lastTraceIndex();\n      if (exclusiveFilter) {\n        this.#exclusiveFilterPerTrace.set(traceIndex, exclusiveFilter);\n      }\n      this.#changeView({\n        mode: 'VIEWING_TRACE',\n        traceIndex,\n        // This is a new trace, so we want to open the insights sidebar automatically.\n        forceOpenSidebar: true,\n      });\n\n      const parsedTrace = this.#traceEngineModel.parsedTrace(traceIndex);\n      if (!parsedTrace) {\n        throw new Error(`Could not get trace data at index ${traceIndex}`);\n      }\n\n      if (recordingIsFresh) {\n        Tracing.FreshRecording.Tracker.instance().registerFreshRecording(parsedTrace);\n      }\n\n      // We store the index of the active trace so we can load it back easily\n      // if the user goes to a different trace then comes back.\n      // However we also pass in the full trace data because we use it to build\n      // the preview overview thumbnail of the trace that gets shown in the UI.\n      this.#historyManager.addRecording({\n        data: {\n          parsedTraceIndex: traceIndex,\n          type: 'TRACE_INDEX',\n        },\n        filmStripForPreview: Trace.Extras.FilmStrip.fromHandlerData(parsedTrace.data),\n        parsedTrace,\n      });\n\n      this.dispatchEventToListeners(Events.RECORDING_COMPLETED, {\n        traceIndex,\n      });\n    } catch (error) {\n      // If we errored during the parsing stage, it\n      // is useful to get access to the raw events to download the trace. This\n      // allows us to debug crashes!\n      void this.recordingFailed(error.message, collectedEvents);\n      console.error(error);\n      this.dispatchEventToListeners(Events.RECORDING_COMPLETED, {errorText: error.message});\n    } finally {\n      this.recordTraceLoadMetric();\n    }\n  }\n\n  recordTraceLoadMetric(): void {\n    if (!this.traceLoadStart) {\n      return;\n    }\n    const start = this.traceLoadStart;\n    // Right *now* is the end of trace parsing and model building, but the flamechart rendering\n    // isn't complete yet. To capture that we'll do a rAF+setTimeout to give the most accurate timestamp\n    // for the first paint of the flamechart\n    requestAnimationFrame(() => {\n      setTimeout(() => {\n        const end = Trace.Types.Timing.Milli(performance.now());\n        const measure = performance.measure('TraceLoad', {start, end});\n        const duration = Trace.Types.Timing.Milli(measure.duration);\n        this.element.dispatchEvent(new TraceLoadEvent(duration));\n        Host.userMetrics.performanceTraceLoad(measure);\n      }, 0);\n    });\n  }\n\n  /**\n   * Store source maps on trace metadata (but just the non-data url ones).\n   *\n   * Many raw source maps are already in memory, but there are some cases where they may\n   * not be and have to be fetched here:\n   *\n   * 1. If the trace processor (via `#createSourceMapResolver`) never fetched it,\n   *    due to `ScriptHandler` skipping the script if it could not find an associated frame.\n   * 2. If the initial fetch failed (perhaps the failure was intermittent and a\n   *    subsequent attempt will work).\n   */\n  async #retainSourceMapsForEnhancedTrace(\n      parsedTrace: Trace.TraceModel.ParsedTrace, metadata: Trace.Types.File.MetaData): Promise<void> {\n    const handleScript = async(script: Trace.Handlers.ModelHandlers.Scripts.Script): Promise<void> => {\n      if (script.sourceMapUrlElided) {\n        if (metadata.sourceMaps?.find(m => m.url === script.url)) {\n          return;\n        }\n\n        const rawSourceMap = script.sourceMap?.json();\n        if (rawSourceMap && script.url) {\n          metadata.sourceMaps?.push({url: script.url, sourceMap: rawSourceMap});\n        }\n        return;\n      }\n\n      if (!script.sourceMapUrl || script.sourceMapUrl.startsWith('data:')) {\n        return;\n      }\n\n      if (metadata.sourceMaps?.find(m => m.sourceMapUrl === script.sourceMapUrl)) {\n        return;\n      }\n\n      // TimelineController sets `SDK.SourceMap.SourceMap.retainRawSourceMaps` to true,\n      // which means the raw source map is present (assuming `script.sourceMap` is too).\n      let rawSourceMap = script.sourceMap?.json();\n\n      // If the raw map is not present for some reason, fetch it again.\n      if (!rawSourceMap && !script.sourceMapUrlElided) {\n        const initiator = {\n          target: null,\n          frameId: script.frame as Protocol.Page.FrameId,\n          initiatorUrl: script.url as Platform.DevToolsPath.UrlString\n        };\n        rawSourceMap = await SDK.SourceMapManager.tryLoadSourceMap(\n            script.sourceMapUrl as Platform.DevToolsPath.UrlString, initiator);\n      }\n\n      if (script.url && rawSourceMap) {\n        metadata.sourceMaps?.push({url: script.url, sourceMapUrl: script.sourceMapUrl, sourceMap: rawSourceMap});\n      }\n    };\n\n    metadata.sourceMaps = [];\n\n    const promises = [];\n    for (const script of parsedTrace?.data.Scripts.scripts.values() ?? []) {\n      promises.push(handleScript(script));\n    }\n    await Promise.all(promises);\n  }\n\n  #createSourceMapResolver(isFreshRecording: boolean, metadata: Trace.Types.File.MetaData|null):\n      Trace.Types.Configuration.ParseOptions['resolveSourceMap'] {\n    const debuggerModelForFrameId = new Map<string, SDK.DebuggerModel.DebuggerModel>();\n    for (const target of SDK.TargetManager.TargetManager.instance().targets()) {\n      const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n      if (!debuggerModel) {\n        continue;\n      }\n\n      const resourceModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      const activeFrameIds = (resourceModel?.frames() ?? []).map(frame => frame.id);\n      for (const frameId of activeFrameIds) {\n        debuggerModelForFrameId.set(frameId, debuggerModel);\n      }\n    }\n\n    async function getExistingSourceMap(frame: string, scriptId: string, scriptUrl: Platform.DevToolsPath.UrlString):\n        Promise<SDK.SourceMap.SourceMap|undefined> {\n      const debuggerModel = debuggerModelForFrameId.get(frame);\n      if (!debuggerModel) {\n        return;\n      }\n\n      const script = debuggerModel.scriptForId(scriptId);\n      if (!script || (scriptUrl && scriptUrl !== script.sourceURL)) {\n        return;\n      }\n\n      return await debuggerModel.sourceMapManager().sourceMapForClientPromise(script);\n    }\n\n    return async function resolveSourceMap(params: Trace.Types.Configuration.ResolveSourceMapParams) {\n      const {scriptId, scriptUrl, sourceUrl, sourceMapUrl, frame, cachedRawSourceMap} = params;\n\n      if (cachedRawSourceMap) {\n        return new SDK.SourceMap.SourceMap(\n            sourceUrl, sourceMapUrl ?? '' as Platform.DevToolsPath.UrlString, cachedRawSourceMap);\n      }\n\n      // For still-active frames, the source map is likely already fetched or at least in-flight.\n      if (isFreshRecording) {\n        const map = await getExistingSourceMap(frame, scriptId, scriptUrl);\n        if (map) {\n          return map;\n        }\n      }\n\n      if (!sourceMapUrl) {\n        return null;\n      }\n\n      // If loading from disk, check the metadata for source maps.\n      // The metadata doesn't store data url source maps.\n      const isDataUrl = sourceMapUrl.startsWith('data:');\n      if (!isFreshRecording && metadata?.sourceMaps && !isDataUrl) {\n        const cachedSourceMap = metadata.sourceMaps.find(m => m.sourceMapUrl === sourceMapUrl);\n        if (cachedSourceMap) {\n          return new SDK.SourceMap.SourceMap(sourceUrl, sourceMapUrl, cachedSourceMap.sourceMap);\n        }\n      }\n\n      // Never fetch source maps if the trace is not fresh - the source maps may not\n      // reflect what was actually loaded by the page for this trace on disk.\n      if (!isFreshRecording && !isDataUrl) {\n        return null;\n      }\n\n      if (!sourceUrl) {\n        return null;\n      }\n\n      // In all other cases, fetch the source map.\n      //\n      // 1) data urls\n      // 2) fresh recording + source map not for active frame\n      //\n      // For example, since the debugger model is disable during recording, any\n      // non-final navigations during the trace will never have their source maps\n      // fetched by the debugger model. That's only ever done here.\n\n      const initiator = {target: null, frameId: frame, initiatorUrl: sourceUrl};\n      const payload = await SDK.SourceMapManager.tryLoadSourceMap(sourceMapUrl, initiator);\n      return payload ? new SDK.SourceMap.SourceMap(sourceUrl, sourceMapUrl, payload) : null;\n    };\n  }\n\n  async #executeNewTrace(\n      collectedEvents: Trace.Types.Events.Event[], isFreshRecording: boolean,\n      metadata: Trace.Types.File.MetaData|null): Promise<void> {\n    const config: Trace.Types.Configuration.ParseOptions = {\n      metadata: metadata ?? undefined,\n      isFreshRecording,\n      resolveSourceMap: this.#createSourceMapResolver(isFreshRecording, metadata),\n      isCPUProfile: metadata?.dataOrigin === Trace.Types.File.DataOrigin.CPU_PROFILE,\n    };\n\n    if (window.location.href.includes('devtools/bundled') || window.location.search.includes('debugFrontend')) {\n      // Someone is debugging DevTools, enable the logger to give timings\n      // when tracing the performance panel itself.\n      const times: Record<string, number> = {};\n      config.logger = {\n        start(id) {\n          times[id] = performance.now();\n        },\n        end(id) {\n          performance.measure(id, {start: times[id]});\n        },\n      };\n    }\n\n    await this.#traceEngineModel.parse(collectedEvents, config);\n\n    // Store all source maps on the trace metadata.\n    // If not fresh, we can't validate the maps are still accurate.\n    if (isFreshRecording && metadata &&\n        Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.TIMELINE_ENHANCED_TRACES)) {\n      const traceIndex = this.#traceEngineModel.lastTraceIndex();\n      const parsedTrace = this.#traceEngineModel.parsedTrace(traceIndex);\n      if (parsedTrace) {\n        await this.#retainSourceMapsForEnhancedTrace(parsedTrace, metadata);\n      }\n    }\n  }\n\n  loadingCompleteForTest(): void {\n    // Not implemented, added only for allowing the TimelineTestRunner\n    // to be in sync when a trace load is finished.\n  }\n\n  private showRecordingStarted(): void {\n    this.#changeView({mode: 'STATUS_PANE_OVERLAY'});\n    if (this.statusDialog) {\n      this.statusDialog.remove();\n    }\n    this.statusDialog = new StatusDialog(\n        {\n          showTimer: true,\n          showProgress: true,\n          hideStopButton: false,\n          description: undefined,\n          buttonText: undefined,\n        },\n        () => this.stopRecording());\n    this.statusDialog.showPane(this.statusPaneContainer);\n    this.statusDialog.updateStatus(i18nString(UIStrings.initializingTracing));\n    this.statusDialog.updateProgressBar(i18nString(UIStrings.bufferUsage), 0);\n  }\n\n  private cancelLoading(): void {\n    if (this.loader) {\n      void this.loader.cancel();\n    }\n  }\n\n  private async loadEventFired(\n      event: Common.EventTarget\n          .EventTargetEvent<{resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel, loadTime: number}>):\n      Promise<void> {\n    if (this.state !== State.RECORDING || !this.recordingPageReload || !this.controller ||\n        this.controller.primaryPageTarget !== event.data.resourceTreeModel.target()) {\n      return;\n    }\n    const controller = this.controller;\n    await new Promise(r => window.setTimeout(r, this.millisecondsToRecordAfterLoadEvent));\n\n    // Check if we're still in the same recording session.\n    if (controller !== this.controller || this.state !== State.RECORDING) {\n      return;\n    }\n    void this.stopRecording();\n  }\n\n  private frameForSelection(selection: TimelineSelection): Trace.Types.Events.LegacyTimelineFrame|null {\n    if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n      return null;\n    }\n    if (selectionIsRange(selection)) {\n      return null;\n    }\n    if (Trace.Types.Events.isSyntheticNetworkRequest(selection.event)) {\n      return null;\n    }\n\n    // If the user has selected a random trace event, the frame we want is the last\n    // frame in that time window, hence why the window we look for is the\n    // endTime to the endTime.\n    const parsedTrace = this.#traceEngineModel.parsedTrace(this.#viewMode.traceIndex);\n    if (!parsedTrace) {\n      return null;\n    }\n\n    const endTime = rangeForSelection(selection).max;\n    const lastFrameInSelection = Trace.Handlers.ModelHandlers.Frames\n                                     .framesWithinWindow(\n                                         parsedTrace.data.Frames.frames,\n                                         endTime,\n                                         endTime,\n                                         )\n                                     .at(0);\n    return lastFrameInSelection || null;\n  }\n\n  jumpToFrame(offset: number): true|undefined {\n    if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n      return;\n    }\n    const currentFrame = this.selection && this.frameForSelection(this.selection);\n    if (!currentFrame) {\n      return;\n    }\n    const parsedTrace = this.#traceEngineModel.parsedTrace(this.#viewMode.traceIndex);\n    if (!parsedTrace) {\n      return;\n    }\n\n    let index = parsedTrace.data.Frames.frames.indexOf(currentFrame);\n    console.assert(index >= 0, 'Can\\'t find current frame in the frame list');\n    index = Platform.NumberUtilities.clamp(index + offset, 0, parsedTrace.data.Frames.frames.length - 1);\n    const frame = parsedTrace.data.Frames.frames[index];\n    this.#revealTimeRange(\n        Trace.Helpers.Timing.microToMilli(frame.startTime), Trace.Helpers.Timing.microToMilli(frame.endTime));\n    this.select(selectionFromEvent(frame));\n    return true;\n  }\n\n  #announceSelectionToAria(oldSelection: TimelineSelection|null, newSelection: TimelineSelection|null): void {\n    if (oldSelection !== null && newSelection === null) {\n      UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.selectionCleared));\n    }\n    if (newSelection === null) {\n      return;\n    }\n\n    if (oldSelection && selectionsEqual(oldSelection, newSelection)) {\n      // Don't announce to the user if the selection has not changed.\n      return;\n    }\n\n    if (selectionIsRange(newSelection)) {\n      // We don't announce here; within the annotations code we announce when\n      // the user creates a new time range selection. So if we also announce\n      // here we will duplicate and overwhelm rather than be useful.\n      return;\n    }\n\n    // Announce the type of event that was selected (special casing frames.)\n    if (Trace.Types.Events.isLegacyTimelineFrame(newSelection.event)) {\n      UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.frameSelected));\n      return;\n    }\n    const name = Trace.Name.forEntry(newSelection.event);\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.eventSelected, {PH1: name}));\n  }\n\n  select(selection: TimelineSelection|null): void {\n    this.#announceSelectionToAria(this.selection, selection);\n    this.selection = selection;\n    this.flameChart.setSelectionAndReveal(selection);\n  }\n\n  selectEntryAtTime(events: Trace.Types.Events.Event[]|null, time: number): void {\n    if (!events) {\n      return;\n    }\n\n    if (events.length === 0) {\n      this.select(null);\n      return;\n    }\n\n    // Find best match, then backtrack to the first visible entry.\n    for (let index = Platform.ArrayUtilities.upperBound(events, time, (time, event) => time - event.ts) - 1; index >= 0;\n         --index) {\n      const event = events[index];\n      const {endTime} = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n      if (Trace.Helpers.Trace.isTopLevelEvent(event) && endTime < time) {\n        break;\n      }\n      if (ActiveFilters.instance().isVisible(event) && endTime >= time) {\n        this.select(selectionFromEvent(event));\n        return;\n      }\n    }\n    this.select(null);\n  }\n\n  highlightEvent(event: Trace.Types.Events.Event|null): void {\n    this.flameChart.highlightEvent(event);\n  }\n\n  #revealTimeRange(startTime: Trace.Types.Timing.Milli, endTime: Trace.Types.Timing.Milli): void {\n    const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n    if (!traceBoundsState) {\n      return;\n    }\n    const traceWindow = traceBoundsState.milli.timelineTraceWindow;\n\n    let offset = 0;\n    if (traceWindow.max < endTime) {\n      offset = endTime - traceWindow.max;\n    } else if (traceWindow.min > startTime) {\n      offset = startTime - traceWindow.min;\n    }\n    TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(\n        Trace.Helpers.Timing.traceWindowFromMilliSeconds(\n            Trace.Types.Timing.Milli(traceWindow.min + offset),\n            Trace.Types.Timing.Milli(traceWindow.max + offset),\n            ),\n        {\n          shouldAnimate: true,\n        },\n    );\n  }\n\n  private handleDrop(dataTransfer: DataTransfer): void {\n    const items = dataTransfer.items;\n    if (!items.length) {\n      return;\n    }\n    const item = items[0];\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.PerfPanelTraceImported);\n    if (item.kind === 'string') {\n      const url = dataTransfer.getData('text/uri-list') as Platform.DevToolsPath.UrlString;\n      if (new Common.ParsedURL.ParsedURL(url).isValid) {\n        void this.loadFromURL(url);\n      }\n    } else if (item.kind === 'file') {\n      const file = items[0].getAsFile();\n      if (!file) {\n        return;\n      }\n      void this.loadFromFile(file);\n    }\n  }\n\n  #openSummaryTab(): void {\n    // If we have a selection, we should remove it.\n    this.flameChart.setSelectionAndReveal(null);\n    this.flameChart.selectDetailsViewTab(Tab.Details, null);\n  }\n\n  /**\n   * Used to reveal an insight - and is called from the AI Assistance panel when the user clicks on the Insight context button that is shown.\n   * Revealing an insight should:\n   * 1. Ensure the sidebar is open\n   * 2. Ensure the insight is expanded\n   *    (both of these should be true in the AI Assistance case)\n   * 3. Flash the Insight with the highlight colour we use in other panels.\n   */\n  revealInsight(insightModel: Trace.Insights.Types.InsightModel): void {\n    const insightSetKey = insightModel.navigationId ?? Trace.Types.Events.NO_NAVIGATION;\n    this.#setActiveInsight({model: insightModel, insightSetKey}, {highlightInsight: true});\n  }\n\n  static async *\n      handleExternalRecordRequest():\n          AsyncGenerator<AiAssistanceModel.ExternalRequestResponse, AiAssistanceModel.ExternalRequestResponse> {\n    yield {\n      type: AiAssistanceModel.ExternalRequestResponseType.NOTIFICATION,\n      message: 'Recording performance trace',\n    };\n    TimelinePanel.instance().invalidateExternalAIConversationData();\n    void VisualLogging.logFunctionCall('timeline.record-reload', 'external');\n    Snackbars.Snackbar.Snackbar.show({message: i18nString(UIStrings.externalRequestReceived)});\n\n    const panelInstance = TimelinePanel.instance();\n    // Given how the current UX works, it's nice to show the user the Perf\n    // Panel so they see what's happening\n    await UI.ViewManager.ViewManager.instance().showView('timeline');\n\n    function onRecordingCompleted(eventData: EventTypes[Events.RECORDING_COMPLETED]):\n        AiAssistanceModel.ExternalRequestResponse {\n      if ('errorText' in eventData) {\n        return {\n          type: AiAssistanceModel.ExternalRequestResponseType.ERROR,\n          message: `Error running the trace: ${eventData.errorText}`,\n        };\n      }\n\n      const parsedTrace = panelInstance.model.parsedTrace(eventData.traceIndex);\n      if (!parsedTrace || !parsedTrace.insights || parsedTrace.insights.size === 0) {\n        return {\n          type: AiAssistanceModel.ExternalRequestResponseType.ERROR,\n          message: 'The trace was loaded successfully but no Insights were detected.',\n        };\n      }\n\n      const navigationId = Array.from(parsedTrace.insights.keys()).find(k => k !== 'NO_NAVIGATION');\n      if (!navigationId) {\n        return {\n          type: AiAssistanceModel.ExternalRequestResponseType.ERROR,\n          message: 'The trace was loaded successfully but no navigation was detected.',\n        };\n      }\n\n      const insightsForNav = parsedTrace.insights.get(navigationId);\n      if (!insightsForNav) {\n        return {\n          type: AiAssistanceModel.ExternalRequestResponseType.ERROR,\n          message: 'The trace was loaded successfully but no Insights were detected.',\n        };\n      }\n\n      let responseTextForNonPassedInsights = '';\n      // We still return info on the passed insights, but we put it at the\n      // bottom of the response under a heading.\n      let responseTextForPassedInsights = '';\n\n      // TODO(b/442392194): use PerformanceTraceFormatter summary instead.\n      for (const modelName in insightsForNav.model) {\n        const model = modelName as keyof Trace.Insights.Types.InsightModelsType;\n        const insight = insightsForNav.model[model];\n        const focus = AiAssistanceModel.AgentFocus.fromParsedTrace(parsedTrace);\n        const formatter = new AiAssistanceModel.PerformanceInsightFormatter(focus, insight);\n        if (!formatter.insightIsSupported()) {\n          // Not all Insights are integrated with \"Ask AI\" yet, let's avoid\n          // filling up the response with those ones because there will be no\n          // useful information.\n          continue;\n        }\n\n        const formatted = formatter.formatInsight({headingLevel: 3});\n\n        if (insight.state === 'pass') {\n          responseTextForPassedInsights += `${formatted}\\n\\n`;\n          continue;\n        } else {\n          responseTextForNonPassedInsights += `${formatted}\\n\\n`;\n        }\n      }\n\n      const finalText = `# Trace recording results\n\n## Non-passing insights:\n\nThese insights highlight potential problems and opportunities to improve performance.\n${responseTextForNonPassedInsights}\n\n## Passing insights:\n\nThese insights are passing, which means they are not considered to highlight considerable performance problems.\n${responseTextForPassedInsights}`;\n\n      return {\n        type: AiAssistanceModel.ExternalRequestResponseType.ANSWER,\n        message: finalText,\n        devToolsLogs: [],\n      };\n    }\n\n    return await new Promise(resolve => {\n      function listener(e: Common.EventTarget.EventTargetEvent<EventTypes[Events.RECORDING_COMPLETED]>): void {\n        resolve(onRecordingCompleted(e.data));\n        panelInstance.removeEventListener(Events.RECORDING_COMPLETED, listener);\n      }\n      panelInstance.addEventListener(Events.RECORDING_COMPLETED, listener);\n\n      panelInstance.recordReload();\n    });\n  }\n\n  static async handleExternalAnalyzeRequest(prompt: string):\n      Promise<AsyncGenerator<AiAssistanceModel.ExternalRequestResponse, AiAssistanceModel.ExternalRequestResponse>> {\n    const data = TimelinePanel.instance().getOrCreateExternalAIConversationData();\n    return await data.conversationHandler.handleExternalRequest({\n      conversationType: AiAssistanceModel.ConversationType.PERFORMANCE,\n      prompt,\n      data,\n    });\n  }\n}\n\nexport const enum State {\n  IDLE = 'Idle',\n  START_PENDING = 'StartPending',\n  RECORDING = 'Recording',\n  STOP_PENDING = 'StopPending',\n  LOADING = 'Loading',\n  RECORDING_FAILED = 'RecordingFailed',\n}\n\n// Define row and header height, should be in sync with styles for timeline graphs.\nexport const rowHeight = 18;\n\nexport const headerHeight = 20;\nexport interface TimelineModeViewDelegate {\n  select(selection: TimelineSelection|null): void;\n  element: Element;\n  set3PCheckboxDisabled(disabled: boolean): void;\n  selectEntryAtTime(events: Trace.Types.Events.Event[]|null, time: number): void;\n  highlightEvent(event: Trace.Types.Events.Event|null): void;\n}\n\nexport let loadTimelineHandlerInstance: LoadTimelineHandler;\n\nexport class LoadTimelineHandler implements Common.QueryParamHandler.QueryParamHandler {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): LoadTimelineHandler {\n    const {forceNew} = opts;\n    if (!loadTimelineHandlerInstance || forceNew) {\n      loadTimelineHandlerInstance = new LoadTimelineHandler();\n    }\n\n    return loadTimelineHandlerInstance;\n  }\n\n  handleQueryParam(value: string): void {\n    void UI.ViewManager.ViewManager.instance().showView('timeline').then(async () => {\n      await TimelinePanel.instance().loadFromURL(window.decodeURIComponent(value) as Platform.DevToolsPath.UrlString);\n    });\n  }\n}\n\nexport class TraceRevealer implements Common.Revealer.Revealer<SDK.TraceObject.TraceObject> {\n  async reveal(trace: SDK.TraceObject.TraceObject): Promise<void> {\n    await UI.ViewManager.ViewManager.instance().showView('timeline');\n    TimelinePanel.instance().loadFromTraceFile(trace);\n  }\n}\n\nexport class EventRevealer implements Common.Revealer.Revealer<SDK.TraceObject.RevealableEvent> {\n  async reveal(rEvent: SDK.TraceObject.RevealableEvent): Promise<void> {\n    await UI.ViewManager.ViewManager.instance().showView('timeline');\n    TimelinePanel.instance().select(selectionFromEvent(rEvent.event));\n  }\n}\n\nexport class InsightRevealer implements Common.Revealer.Revealer<Utils.Helpers.RevealableInsight> {\n  async reveal(revealable: Utils.Helpers.RevealableInsight): Promise<void> {\n    await UI.ViewManager.ViewManager.instance().showView('timeline');\n    TimelinePanel.instance().revealInsight(revealable.insight);\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const panel = context.flavor(TimelinePanel);\n    if (panel === null) {\n      return false;\n    }\n    switch (actionId) {\n      case 'timeline.toggle-recording':\n        void panel.toggleRecording();\n        return true;\n      case 'timeline.record-reload':\n        panel.recordReload();\n        return true;\n      case 'timeline.save-to-file':\n        void panel.handleSaveToFileAction();\n        return true;\n      case 'timeline.load-from-file':\n        panel.selectFileToLoad();\n        return true;\n      case 'timeline.jump-to-previous-frame':\n        panel.jumpToFrame(-1);\n        return true;\n      case 'timeline.jump-to-next-frame':\n        panel.jumpToFrame(1);\n        return true;\n      case 'timeline.show-history':\n        void panel.showHistoryDropdown();\n        return true;\n      case 'timeline.previous-recording':\n        panel.navigateHistory(1);\n        return true;\n      case 'timeline.next-recording':\n        panel.navigateHistory(-1);\n        return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Used to set the UI.Context when the user expands an Insight. This is only\n * relied upon in the AI Agent code to know which agent to pick by default based\n * on the context of the panel.\n */\nexport class SelectedInsight {\n  constructor(public insight: TimelineComponents.Sidebar.ActiveInsight) {\n  }\n}\nexport const enum Events {\n  IS_VIEWING_TRACE = 'IsViewingTrace',\n  RECORDING_COMPLETED = 'RecordingCompleted',\n}\nexport interface EventTypes {\n  [Events.IS_VIEWING_TRACE]: boolean;\n  [Events.RECORDING_COMPLETED]: {traceIndex: number}|{errorText: string};\n}\n"]}