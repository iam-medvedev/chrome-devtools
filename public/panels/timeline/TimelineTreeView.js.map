{"version":3,"file":"TimelineTreeView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineTreeView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ActiveFilters} from './ActiveFilters.js';\nimport * as Extensions from './extensions/extensions.js';\nimport {Tracker} from './FreshRecording.js';\nimport {targetForEvent} from './TargetForEvent.js';\nimport * as ThirdPartyTreeView from './ThirdPartyTreeView.js';\nimport {TimelineRegExp} from './TimelineFilters.js';\nimport {rangeForSelection, type TimelineSelection} from './TimelineSelection.js';\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\nimport * as Utils from './utils/utils.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for the performance of something\n   */\n  performance: 'Performance',\n  /**\n   *@description Time of a single activity, as opposed to the total time\n   */\n  selfTime: 'Self time',\n  /**\n   *@description Text for the total time of something\n   */\n  totalTime: 'Total time',\n  /**\n   *@description Text in Timeline Tree View of the Performance panel\n   */\n  activity: 'Activity',\n  /**\n   *@description Text of a DOM element in Timeline Tree View of the Performance panel\n   */\n  selectItemForDetails: 'Select item for details.',\n  /**\n   *@description Number followed by percent sign\n   *@example {20} PH1\n   */\n  percentPlaceholder: '{PH1} %',\n  /**\n   *@description Text in Timeline Tree View of the Performance panel\n   */\n  chromeExtensionsOverhead: '[`Chrome` extensions overhead]',\n  /**\n   * @description Text in Timeline Tree View of the Performance panel. The text is presented\n   * when developers investigate the performance of a page. 'V8 Runtime' labels the time\n   * spent in (i.e. runtime) the V8 JavaScript engine.\n   */\n  vRuntime: '[`V8` Runtime]',\n  /**\n   *@description Text in Timeline Tree View of the Performance panel\n   */\n  unattributed: '[unattributed]',\n  /**\n   *@description Text that refers to one or a group of webpages\n   */\n  page: 'Page',\n  /**\n   *@description Text in Timeline Tree View of the Performance panel\n   */\n  noGrouping: 'No grouping',\n  /**\n   *@description Text in Timeline Tree View of the Performance panel\n   */\n  groupByActivity: 'Group by activity',\n  /**\n   *@description Text in Timeline Tree View of the Performance panel\n   */\n  groupByCategory: 'Group by category',\n  /**\n   *@description Text in Timeline Tree View of the Performance panel\n   */\n  groupByDomain: 'Group by domain',\n  /**\n   *@description Text in Timeline Tree View of the Performance panel\n   */\n  groupByFrame: 'Group by frame',\n  /**\n   *@description Text in Timeline Tree View of the Performance panel\n   */\n  groupBySubdomain: 'Group by subdomain',\n  /**\n   *@description Text in Timeline Tree View of the Performance panel\n   */\n  groupByUrl: 'Group by URL',\n  /**\n   *@description Text in Timeline Tree View of the Performance panel\n   */\n  groupByThirdParties: 'Group by Third Parties',\n  /**\n   *@description Aria-label for grouping combo box in Timeline Details View\n   */\n  groupBy: 'Group by',\n  /**\n   * @description Title of the sidebar pane in the Performance panel which shows the stack (call\n   * stack) where the program spent the most time (out of all the call stacks) while executing.\n   */\n  heaviestStack: 'Heaviest stack',\n  /**\n   * @description Tooltip for the the Heaviest stack sidebar toggle in the Timeline Tree View of the\n   * Performance panel. Command to open/show the sidebar.\n   */\n  showHeaviestStack: 'Show heaviest stack',\n  /**\n   * @description Tooltip for the the Heaviest stack sidebar toggle in the Timeline Tree View of the\n   * Performance panel. Command to close/hide the sidebar.\n   */\n  hideHeaviestStack: 'Hide heaviest stack',\n  /**\n   * @description Screen reader announcement when the heaviest stack sidebar is shown in the Performance panel.\n   */\n  heaviestStackShown: 'Heaviest stack sidebar shown',\n  /**\n   * @description Screen reader announcement when the heaviest stack sidebar is hidden in the Performance panel.\n   */\n  heaviestStackHidden: 'Heaviest stack sidebar hidden',\n  /**\n   *@description Data grid name for Timeline Stack data grids\n   */\n  timelineStack: 'Timeline stack',\n  /**\n  /*@description Text to search by matching case of the input button\n   */\n  matchCase: 'Match case',\n  /**\n   *@description Text for searching with regular expression button\n   */\n  useRegularExpression: 'Use regular expression',\n  /**\n   * @description Text for Match whole word button\n   */\n  matchWholeWord: 'Match whole word',\n  /**\n   * @description Text for bottom up tree button\n   */\n  bottomUp: 'Bottom-up',\n  /**\n   * @description Text referring to view bottom up tree\n   */\n  viewBottomUp: 'View Bottom-up',\n  /**\n   * @description Text referring to a 1st party entity\n   */\n  firstParty: '1st party',\n  /**\n   * @description Text referring to an entity that is an extension\n   */\n  extension: 'Extension',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineTreeView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineTreeView extends\n    Common.ObjectWrapper.eventMixin<TimelineTreeView.EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox)\n        implements UI.SearchableView.Searchable {\n  #selectedEvents: Trace.Types.Events.Event[]|null;\n  private searchResults: Trace.Extras.TraceTree.Node[];\n  linkifier!: Components.Linkifier.Linkifier;\n  dataGrid!: DataGrid.SortableDataGrid.SortableDataGrid<GridNode>;\n  private lastHoveredProfileNode!: Trace.Extras.TraceTree.Node|null;\n  private textFilterInternal!: TimelineRegExp;\n  private taskFilter!: Trace.Extras.TraceFilter.ExclusiveNameFilter;\n  protected startTime!: Trace.Types.Timing.Milli;\n  protected endTime!: Trace.Types.Timing.Milli;\n  splitWidget!: UI.SplitWidget.SplitWidget;\n  detailsView!: UI.Widget.Widget;\n  private searchableView!: UI.SearchableView.SearchableView;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private currentThreadSetting?: Common.Settings.Setting<any>;\n  private lastSelectedNodeInternal?: Trace.Extras.TraceTree.Node|null;\n  private root?: Trace.Extras.TraceTree.Node;\n  private currentResult?: number;\n  textFilterUI?: UI.Toolbar.ToolbarInput;\n  private caseSensitiveButton: UI.Toolbar.ToolbarToggle|undefined;\n  private regexButton: UI.Toolbar.ToolbarToggle|undefined;\n  private matchWholeWord: UI.Toolbar.ToolbarToggle|undefined;\n  #parsedTrace: Trace.Handlers.Types.ParsedTrace|null = null;\n  #entityMapper: Utils.EntityMapper.EntityMapper|null = null;\n  #lastHighlightedEvent: HTMLElement|null = null;\n  eventToTreeNode = new WeakMap<Trace.Types.Events.Event, Trace.Extras.TraceTree.Node>();\n\n  /**\n   * Determines if the first child in the data grid will be selected\n   * by default when refreshTree() gets called.\n   */\n  protected autoSelectFirstChildOnRefresh = true;\n\n  constructor() {\n    super();\n    this.#selectedEvents = null;\n    this.element.classList.add('timeline-tree-view');\n\n    this.searchResults = [];\n  }\n\n  #eventNameForSorting(event: Trace.Types.Events.Event): string {\n    const name = TimelineUIUtils.eventTitle(event) || event.name;\n    if (!this.#parsedTrace) {\n      return name;\n    }\n    return name + ':@' + Trace.Handlers.Helpers.getNonResolvedURL(event, this.#parsedTrace);\n  }\n\n  setSearchableView(searchableView: UI.SearchableView.SearchableView): void {\n    this.searchableView = searchableView;\n  }\n\n  setModelWithEvents(\n      selectedEvents: Trace.Types.Events.Event[]|null,\n      parsedTrace: Trace.Handlers.Types.ParsedTrace|null = null,\n      entityMappings: Utils.EntityMapper.EntityMapper|null = null,\n      ): void {\n    this.#parsedTrace = parsedTrace;\n    this.#selectedEvents = selectedEvents;\n    this.#entityMapper = entityMappings;\n    this.refreshTree();\n  }\n\n  entityMapper(): Utils.EntityMapper.EntityMapper|null {\n    return this.#entityMapper;\n  }\n  parsedTrace(): Trace.Handlers.Types.ParsedTrace|null {\n    return this.#parsedTrace;\n  }\n\n  init(): void {\n    this.linkifier = new Components.Linkifier.Linkifier();\n\n    this.taskFilter = new Trace.Extras.TraceFilter.ExclusiveNameFilter([\n      Trace.Types.Events.Name.RUN_TASK,\n    ]);\n    this.textFilterInternal = new TimelineRegExp();\n\n    this.currentThreadSetting = Common.Settings.Settings.instance().createSetting('timeline-tree-current-thread', 0);\n    this.currentThreadSetting.addChangeListener(this.refreshTree, this);\n\n    const columns = ([] as DataGrid.DataGrid.ColumnDescriptor[]);\n    this.populateColumns(columns);\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(true, true, 'timeline-tree-view-details-split-widget');\n    const mainView = new UI.Widget.VBox();\n    const toolbar = mainView.element.createChild('devtools-toolbar');\n    toolbar.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n    toolbar.wrappable = true;\n    this.populateToolbar(toolbar);\n\n    this.dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: i18nString(UIStrings.performance),\n      columns,\n      refreshCallback: undefined,\n      deleteCallback: undefined,\n    });\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SORTING_CHANGED, this.sortingChanged, this);\n    this.dataGrid.element.addEventListener('mousemove', this.onMouseMove.bind(this), true);\n    this.dataGrid.element.addEventListener(\n        'mouseleave', () => this.dispatchEventToListeners(TimelineTreeView.Events.TREE_ROW_HOVERED, null));\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.OPENED_NODE, this.onGridNodeOpened, this);\n    this.dataGrid.setResizeMethod(DataGrid.DataGrid.ResizeMethod.LAST);\n    this.dataGrid.setRowContextMenuCallback(this.onContextMenu.bind(this));\n    this.dataGrid.asWidget().show(mainView.element);\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SELECTED_NODE, this.updateDetailsForSelection, this);\n\n    this.detailsView = new UI.Widget.VBox();\n    this.detailsView.element.classList.add('timeline-details-view', 'timeline-details-view-body');\n    this.splitWidget.setMainWidget(mainView);\n    this.splitWidget.setSidebarWidget(this.detailsView);\n    this.splitWidget.hideSidebar();\n    this.splitWidget.show(this.element);\n    this.splitWidget.addEventListener(UI.SplitWidget.Events.SHOW_MODE_CHANGED, this.onShowModeChanged, this);\n  }\n\n  lastSelectedNode(): Trace.Extras.TraceTree.Node|null|undefined {\n    return this.lastSelectedNodeInternal;\n  }\n\n  updateContents(selection: TimelineSelection): void {\n    const timings = rangeForSelection(selection);\n    const timingMilli = Trace.Helpers.Timing.traceWindowMicroSecondsToMilliSeconds(timings);\n    this.setRange(timingMilli.min, timingMilli.max);\n  }\n\n  setRange(startTime: Trace.Types.Timing.Milli, endTime: Trace.Types.Timing.Milli): void {\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.refreshTree();\n  }\n\n  highlightEventInTree(event: Trace.Types.Events.Event|null): void {\n    // Potentially clear last highlight\n    const dataGridElem = event && this.dataGridElementForEvent(event);\n    if (!event || (dataGridElem && dataGridElem !== this.#lastHighlightedEvent)) {\n      this.#lastHighlightedEvent?.style.setProperty('background-color', '');\n    }\n\n    if (event) {\n      const rowElem = dataGridElem;\n      if (rowElem) {\n        this.#lastHighlightedEvent = rowElem;\n        this.#lastHighlightedEvent.style.backgroundColor = 'var(--sys-color-yellow-container)';\n      }\n    }\n  }\n\n  filters(): Trace.Extras.TraceFilter.TraceFilter[] {\n    return [this.taskFilter, this.textFilterInternal, ...(ActiveFilters.instance().activeFilters())];\n  }\n\n  filtersWithoutTextFilter(): Trace.Extras.TraceFilter.TraceFilter[] {\n    return [this.taskFilter, ...(ActiveFilters.instance().activeFilters())];\n  }\n\n  textFilter(): TimelineRegExp {\n    return this.textFilterInternal;\n  }\n\n  exposePercentages(): boolean {\n    return false;\n  }\n\n  populateToolbar(toolbar: UI.Toolbar.Toolbar): void {\n    this.caseSensitiveButton =\n        new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.matchCase), 'match-case', undefined, 'match-case');\n    this.caseSensitiveButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      this.#filterChanged();\n    }, this);\n    toolbar.appendToolbarItem(this.caseSensitiveButton);\n\n    this.regexButton = new UI.Toolbar.ToolbarToggle(\n        i18nString(UIStrings.useRegularExpression), 'regular-expression', undefined, 'regular-expression');\n    this.regexButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      this.#filterChanged();\n    }, this);\n    toolbar.appendToolbarItem(this.regexButton);\n\n    this.matchWholeWord = new UI.Toolbar.ToolbarToggle(\n        i18nString(UIStrings.matchWholeWord), 'match-whole-word', undefined, 'match-whole-word');\n    this.matchWholeWord.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      this.#filterChanged();\n    }, this);\n    toolbar.appendToolbarItem(this.matchWholeWord);\n\n    const textFilterUI = new UI.Toolbar.ToolbarFilter();\n    this.textFilterUI = textFilterUI;\n    textFilterUI.addEventListener(UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED, this.#filterChanged, this);\n    toolbar.appendToolbarItem(textFilterUI);\n  }\n\n  selectedEvents(): Trace.Types.Events.Event[] {\n    // TODO: can we make this type readonly?\n    return this.#selectedEvents || [];\n  }\n\n  appendContextMenuItems(_contextMenu: UI.ContextMenu.ContextMenu, _node: Trace.Extras.TraceTree.Node): void {\n  }\n\n  selectProfileNode(treeNode: Trace.Extras.TraceTree.Node, suppressSelectedEvent: boolean): void {\n    const pathToRoot = [];\n    let node: (Trace.Extras.TraceTree.Node|null)|Trace.Extras.TraceTree.Node = treeNode;\n    for (; node; node = node.parent) {\n      pathToRoot.push(node);\n    }\n    for (let i = pathToRoot.length - 1; i > 0; --i) {\n      const gridNode = this.dataGridNodeForTreeNode(pathToRoot[i]);\n      if (gridNode?.dataGrid) {\n        gridNode.expand();\n      }\n    }\n    const gridNode = this.dataGridNodeForTreeNode(treeNode);\n    if (gridNode?.dataGrid) {\n      gridNode.reveal();\n      gridNode.select(suppressSelectedEvent);\n    }\n  }\n\n  refreshTree(): void {\n    if (!this.element.parentElement) {\n      // This function can be called in different views (Bottom-Up and\n      // Call Tree) by the same single event whenever the group-by\n      // dropdown changes value. Thus, we bail out whenever the view is\n      // not visible, which we know if the related element is detached\n      // from the document.\n      return;\n    }\n    this.linkifier.reset();\n    this.dataGrid.rootNode().removeChildren();\n    if (!this.#parsedTrace) {\n      this.updateDetailsForSelection();\n      return;\n    }\n    this.root = this.buildTree();\n    const children = this.root.children();\n    let maxSelfTime = 0;\n    let maxTotalTime = 0;\n    const totalUsedTime = this.root.totalTime - this.root.selfTime;\n    for (const child of children.values()) {\n      maxSelfTime = Math.max(maxSelfTime, child.selfTime);\n      maxTotalTime = Math.max(maxTotalTime, child.totalTime);\n    }\n    for (const child of children.values()) {\n      // Exclude the idle time off the total calculation.\n      const gridNode = new TreeGridNode(child, totalUsedTime, maxSelfTime, maxTotalTime, this);\n      for (const e of child.events) {\n        this.eventToTreeNode.set(e, child);\n      }\n      this.dataGrid.insertChild(gridNode);\n    }\n    this.sortingChanged();\n    this.updateDetailsForSelection();\n    if (this.searchableView) {\n      this.searchableView.refreshSearch();\n    }\n    const rootNode = this.dataGrid.rootNode();\n    if (this.autoSelectFirstChildOnRefresh && rootNode.children.length > 0) {\n      rootNode.children[0].select(/* supressSelectedEvent */ true);\n    }\n  }\n\n  buildTree(): Trace.Extras.TraceTree.Node {\n    throw new Error('Not Implemented');\n  }\n\n  buildTopDownTree(doNotAggregate: boolean, eventGroupIdCallback: ((arg0: Trace.Types.Events.Event) => string)|null):\n      Trace.Extras.TraceTree.Node {\n    return new Trace.Extras.TraceTree.TopDownRootNode(this.selectedEvents(), {\n      filters: this.filters(),\n      startTime: this.startTime,\n      endTime: this.endTime,\n      doNotAggregate,\n      eventGroupIdCallback,\n    });\n  }\n\n  populateColumns(columns: DataGrid.DataGrid.ColumnDescriptor[]): void {\n    columns.push(\n        ({id: 'self', title: i18nString(UIStrings.selfTime), width: '120px', fixedWidth: true, sortable: true} as\n         DataGrid.DataGrid.ColumnDescriptor));\n    columns.push(\n        ({id: 'total', title: i18nString(UIStrings.totalTime), width: '120px', fixedWidth: true, sortable: true} as\n         DataGrid.DataGrid.ColumnDescriptor));\n    columns.push(\n        ({id: 'activity', title: i18nString(UIStrings.activity), disclosure: true, sortable: true} as\n         DataGrid.DataGrid.ColumnDescriptor));\n  }\n\n  sortingChanged(): void {\n    const columnId = this.dataGrid.sortColumnId();\n    if (!columnId) {\n      return;\n    }\n    const sortFunction = this.getSortingFunction(columnId);\n    if (sortFunction) {\n      this.dataGrid.sortNodes(sortFunction, !this.dataGrid.isSortOrderAscending());\n    }\n  }\n\n  // Gets the sorting function for the tree view nodes.\n  getSortingFunction(columnId: string):\n      ((a: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n        b: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>) => number)|null {\n    const compareNameSortFn =\n        (a: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n         b: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>): number => {\n          const nodeA = (a as TreeGridNode);\n          const nodeB = (b as TreeGridNode);\n          const eventA = nodeA.profileNode.event;\n          const eventB = nodeB.profileNode.event;\n          if (!eventA || !eventB) {\n            return 0;\n          }\n          const nameA = this.#eventNameForSorting(eventA);\n          const nameB = this.#eventNameForSorting(eventB);\n          return nameA.localeCompare(nameB);\n        };\n\n    switch (columnId) {\n      case 'start-time':\n        return compareStartTime;\n      case 'self':\n        return compareSelfTime;\n      case 'total':\n        return compareTotalTime;\n      case 'activity':\n      case 'site':\n        return compareNameSortFn;\n      default:\n        console.assert(false, 'Unknown sort field: ' + columnId);\n        return null;\n    }\n\n    function compareSelfTime(\n        a: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n        b: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>): number {\n      const nodeA = a as TreeGridNode;\n      const nodeB = b as TreeGridNode;\n      return nodeA.profileNode.selfTime - nodeB.profileNode.selfTime;\n    }\n\n    function compareStartTime(\n        a: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n        b: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>): number {\n      const nodeA = (a as TreeGridNode);\n      const nodeB = (b as TreeGridNode);\n      const eventA = nodeA.profileNode.event;\n      const eventB = nodeB.profileNode.event;\n      // Should not happen, but guard against the nodes not having events.\n      if (!eventA || !eventB) {\n        return 0;\n      }\n      return eventA.ts - eventB.ts;\n    }\n\n    function compareTotalTime(\n        a: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n        b: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>): number {\n      const nodeA = a as TreeGridNode;\n      const nodeB = b as TreeGridNode;\n      return nodeA.profileNode.totalTime - nodeB.profileNode.totalTime;\n    }\n  }\n\n  #filterChanged(): void {\n    const searchQuery = this.textFilterUI?.value();\n    const caseSensitive = this.caseSensitiveButton?.isToggled() ?? false;\n    const isRegex = this.regexButton?.isToggled() ?? false;\n    const matchWholeWord = this.matchWholeWord?.isToggled() ?? false;\n\n    this.textFilterInternal.setRegExp(\n        searchQuery ? Platform.StringUtilities.createSearchRegex(searchQuery, caseSensitive, isRegex, matchWholeWord) :\n                      null);\n    this.refreshTree();\n  }\n\n  private onShowModeChanged(): void {\n    if (this.splitWidget.showMode() === UI.SplitWidget.ShowMode.ONLY_MAIN) {\n      return;\n    }\n    this.lastSelectedNodeInternal = undefined;\n    this.updateDetailsForSelection();\n  }\n\n  protected updateDetailsForSelection(): void {\n    const selectedNode = this.dataGrid.selectedNode ? (this.dataGrid.selectedNode as TreeGridNode).profileNode : null;\n    if (selectedNode === this.lastSelectedNodeInternal) {\n      return;\n    }\n    if (this.splitWidget.showMode() === UI.SplitWidget.ShowMode.ONLY_MAIN) {\n      return;\n    }\n    this.detailsView.detachChildWidgets();\n    this.detailsView.element.removeChildren();\n    this.lastSelectedNodeInternal = selectedNode;\n    if (selectedNode && this.showDetailsForNode(selectedNode)) {\n      return;\n    }\n    const banner = this.detailsView.element.createChild('div', 'full-widget-dimmed-banner');\n    UI.UIUtils.createTextChild(banner, i18nString(UIStrings.selectItemForDetails));\n  }\n\n  showDetailsForNode(_node: Trace.Extras.TraceTree.Node): boolean {\n    return false;\n  }\n\n  private onMouseMove(event: Event): void {\n    const gridNode =\n        event.target && (event.target instanceof Node) ? (this.dataGrid.dataGridNodeFromNode((event.target))) : null;\n    const profileNode = (gridNode as TreeGridNode)?.profileNode;\n    if (profileNode === this.lastHoveredProfileNode) {\n      return;\n    }\n    this.lastHoveredProfileNode = profileNode;\n    this.onHover(profileNode);\n  }\n\n  onHover(node: Trace.Extras.TraceTree.Node|null): void {\n    this.dispatchEventToListeners(TimelineTreeView.Events.TREE_ROW_HOVERED, node);\n  }\n\n  override wasShown(): void {\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SELECTED_NODE, this.#onDataGridSelectionChange, this);\n  }\n\n  override childWasDetached(_widget: UI.Widget.Widget): void {\n    this.dataGrid.removeEventListener(DataGrid.DataGrid.Events.SELECTED_NODE, this.#onDataGridSelectionChange);\n  }\n\n  /**\n   * This event fires when the user selects a row in the grid, either by\n   * clicking or by using the arrow keys. We want to have the same effect as\n   * when the user hover overs a row.\n   */\n  #onDataGridSelectionChange(event: Common.EventTarget.EventTargetEvent<DataGrid.DataGrid.DataGridNode<GridNode>>):\n      void {\n    this.dispatchEventToListeners(TimelineTreeView.Events.TREE_ROW_CLICKED, (event.data as GridNode).profileNode);\n    this.onHover((event.data as GridNode).profileNode);\n  }\n\n  onGridNodeOpened(): void {\n    const gridNode = this.dataGrid.selectedNode as TreeGridNode;\n    this.dispatchEventToListeners(TimelineTreeView.Events.TREE_ROW_HOVERED, gridNode.profileNode);\n    this.updateDetailsForSelection();\n  }\n\n  private onContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu, eventGridNode: DataGrid.DataGrid.DataGridNode<GridNode>): void {\n    const gridNode = (eventGridNode as GridNode);\n    if (gridNode.linkElement) {\n      contextMenu.appendApplicableItems(gridNode.linkElement);\n    }\n    const profileNode = gridNode.profileNode;\n    if (profileNode) {\n      this.appendContextMenuItems(contextMenu, profileNode);\n    }\n  }\n\n  dataGridElementForEvent(event: Trace.Types.Events.Event|null): HTMLElement|null {\n    if (!event) {\n      return null;\n    }\n    const treeNode = this.eventToTreeNode.get(event);\n    return (treeNode && this.dataGridNodeForTreeNode(treeNode)?.element()) ?? null;\n  }\n\n  dataGridNodeForTreeNode(treeNode: Trace.Extras.TraceTree.Node): GridNode|null {\n    return treeNodeToGridNode.get(treeNode) || null;\n  }\n\n  // UI.SearchableView.Searchable implementation\n\n  onSearchCanceled(): void {\n    this.searchResults = [];\n    this.currentResult = 0;\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, _shouldJump: boolean, _jumpBackwards?: boolean): void {\n    this.searchResults = [];\n    this.currentResult = 0;\n    if (!this.root) {\n      return;\n    }\n    const searchRegex = searchConfig.toSearchRegex();\n    this.searchResults = this.root.searchTree(\n        event => TimelineUIUtils.testContentMatching(event, searchRegex.regex, this.#parsedTrace || undefined));\n    this.searchableView.updateSearchMatchesCount(this.searchResults.length);\n  }\n\n  jumpToNextSearchResult(): void {\n    if (!this.searchResults.length || this.currentResult === undefined) {\n      return;\n    }\n    this.selectProfileNode(this.searchResults[this.currentResult], false);\n    this.currentResult = Platform.NumberUtilities.mod(this.currentResult + 1, this.searchResults.length);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    if (!this.searchResults.length || this.currentResult === undefined) {\n      return;\n    }\n    this.selectProfileNode(this.searchResults[this.currentResult], false);\n    this.currentResult = Platform.NumberUtilities.mod(this.currentResult - 1, this.searchResults.length);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return true;\n  }\n}\n\nexport namespace TimelineTreeView {\n  export const enum Events {\n    TREE_ROW_HOVERED = 'TreeRowHovered',\n    BOTTOM_UP_BUTTON_CLICKED = 'BottomUpButtonClicked',\n    TREE_ROW_CLICKED = 'TreeRowClicked',\n  }\n\n  export interface EventTypes {\n    [Events.TREE_ROW_HOVERED]: Trace.Extras.TraceTree.Node|null;\n    [Events.BOTTOM_UP_BUTTON_CLICKED]: Trace.Extras.TraceTree.Node|null;\n    [Events.TREE_ROW_CLICKED]: Trace.Extras.TraceTree.Node|null;\n  }\n}\n\nexport class GridNode extends DataGrid.SortableDataGrid.SortableDataGridNode<GridNode> {\n  protected populated: boolean;\n  profileNode: Trace.Extras.TraceTree.Node;\n  protected treeView: TimelineTreeView;\n  protected grandTotalTime: number;\n  protected maxSelfTime: number;\n  protected maxTotalTime: number;\n  linkElement: Element|null;\n\n  constructor(\n      profileNode: Trace.Extras.TraceTree.Node, grandTotalTime: number, maxSelfTime: number, maxTotalTime: number,\n      treeView: TimelineTreeView) {\n    super(null, false);\n    this.populated = false;\n    this.profileNode = profileNode;\n    this.treeView = treeView;\n    this.grandTotalTime = grandTotalTime;\n    this.maxSelfTime = maxSelfTime;\n    this.maxTotalTime = maxTotalTime;\n    this.linkElement = null;\n  }\n\n  override createCell(columnId: string): HTMLElement {\n    if (columnId === 'activity' || columnId === 'site') {\n      return this.createNameCell(columnId);\n    }\n    return this.createValueCell(columnId) || super.createCell(columnId);\n  }\n\n  private createNameCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId);\n    const container = cell.createChild('div', 'name-container');\n    const iconContainer = container.createChild('div', 'activity-icon-container');\n    const icon = iconContainer.createChild('div', 'activity-icon');\n    const name = container.createChild('div', 'activity-name');\n    const event = this.profileNode.event;\n    if (this.profileNode.isGroupNode()) {\n      const treeView = (this.treeView as AggregatedTimelineTreeView);\n      const info = treeView.displayInfoForGroupNode(this.profileNode);\n      name.textContent = info.name;\n      icon.style.backgroundColor = info.color;\n      if (info.icon) {\n        iconContainer.insertBefore(info.icon, icon);\n      }\n\n      // Include badges with the name, if relevant.\n      if (columnId === 'site' && this.treeView instanceof ThirdPartyTreeView.ThirdPartyTreeViewWidget) {\n        const thirdPartyTree = this.treeView;\n        let badgeText = '';\n\n        if (thirdPartyTree.nodeIsFirstParty(this.profileNode)) {\n          badgeText = i18nString(UIStrings.firstParty);\n        } else if (thirdPartyTree.nodeIsExtension(this.profileNode)) {\n          badgeText = i18nString(UIStrings.extension);\n        }\n\n        if (badgeText) {\n          const badge = container.createChild('div', 'entity-badge');\n          badge.textContent = badgeText;\n          UI.ARIAUtils.setLabel(badge, badgeText);\n        }\n      }\n    } else if (event) {\n      name.textContent = TimelineUIUtils.eventTitle(event);\n      const parsedTrace = this.treeView.parsedTrace();\n      const target = parsedTrace ? targetForEvent(parsedTrace, event) : null;\n      const linkifier = this.treeView.linkifier;\n      const isFreshRecording = Boolean(parsedTrace && Tracker.instance().recordingIsFresh(parsedTrace));\n      this.linkElement = TimelineUIUtils.linkifyTopCallFrame(event, target, linkifier, isFreshRecording);\n      if (this.linkElement) {\n        container.createChild('div', 'activity-link').appendChild(this.linkElement);\n      }\n      UI.ARIAUtils.setLabel(icon, TimelineUIUtils.eventStyle(event).category.title);\n      icon.style.backgroundColor = TimelineUIUtils.eventColor(event);\n      if (Trace.Types.Extensions.isSyntheticExtensionEntry(event)) {\n        icon.style.backgroundColor = Extensions.ExtensionUI.extensionEntryColor(event);\n      }\n    }\n    return cell;\n  }\n\n  private createValueCell(columnId: string): HTMLElement|null {\n    if (columnId !== 'self' && columnId !== 'total' && columnId !== 'start-time' && columnId !== 'transfer-size') {\n      return null;\n    }\n\n    let showPercents = false;\n    let value: number;\n    let maxTime: number|undefined;\n    let event: Trace.Types.Events.Event|null;\n    let isSize = false;\n    let showBottomUpButton = false;\n    const thirdPartyView = this.treeView as ThirdPartyTreeView.ThirdPartyTreeViewWidget;\n    switch (columnId) {\n      case 'start-time': {\n        event = this.profileNode.event;\n        const parsedTrace = this.treeView.parsedTrace();\n        if (!parsedTrace) {\n          throw new Error('Unable to load trace data for tree view');\n        }\n        const timings = event && Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n        const startTime = timings?.startTime ?? 0;\n        value = startTime - Trace.Helpers.Timing.microToMilli(parsedTrace.Meta.traceBounds.min);\n      } break;\n      case 'self':\n        value = this.profileNode.selfTime;\n        maxTime = this.maxSelfTime;\n        showPercents = true;\n        showBottomUpButton = thirdPartyView instanceof ThirdPartyTreeView.ThirdPartyTreeViewWidget;\n        break;\n      case 'total':\n        value = this.profileNode.totalTime;\n        maxTime = this.maxTotalTime;\n        showPercents = true;\n        break;\n      case 'transfer-size':\n        value = this.profileNode.transferSize;\n        isSize = true;\n        break;\n      default:\n        return null;\n    }\n    const cell = this.createTD(columnId);\n    cell.className = 'numeric-column';\n    let textDiv;\n    if (!isSize) {\n      cell.setAttribute('title', i18n.TimeUtilities.preciseMillisToString(value, 4));\n      textDiv = cell.createChild('div');\n      textDiv.createChild('span').textContent = i18n.TimeUtilities.preciseMillisToString(value, 1);\n    } else {\n      cell.setAttribute('title', i18n.ByteUtilities.bytesToString(value));\n      textDiv = cell.createChild('div');\n      textDiv.createChild('span').textContent = i18n.ByteUtilities.bytesToString(value);\n    }\n\n    if (showPercents && this.treeView.exposePercentages()) {\n      textDiv.createChild('span', 'percent-column').textContent =\n          i18nString(UIStrings.percentPlaceholder, {PH1: (value / this.grandTotalTime * 100).toFixed(1)});\n    }\n    if (maxTime) {\n      textDiv.classList.add('background-bar-text');\n      cell.createChild('div', 'background-bar-container').createChild('div', 'background-bar').style.width =\n          (value * 100 / maxTime).toFixed(1) + '%';\n    }\n    // Generate button on hover for 3P self time cell.\n    if (showBottomUpButton) {\n      this.generateBottomUpButton(textDiv);\n    }\n    return cell;\n  }\n\n  // Generates bottom up tree hover button and appends it to the provided cell element.\n  private generateBottomUpButton(textDiv: HTMLElement): void {\n    const button = new Buttons.Button.Button();\n    button.data = {\n      variant: Buttons.Button.Variant.ICON,\n      iconName: 'account-tree',\n      size: Buttons.Button.Size.SMALL,\n      toggledIconName: i18nString(UIStrings.bottomUp),\n    };\n    UI.ARIAUtils.setLabel(button, i18nString(UIStrings.viewBottomUp));\n    button.addEventListener('click', () => this.#bottomUpButtonClicked());\n    UI.Tooltip.Tooltip.install(button, i18nString(UIStrings.bottomUp));\n\n    // Append the button to the last column\n    textDiv.appendChild(button);\n  }\n\n  #bottomUpButtonClicked(): void {\n    // We should also trigger an event to \"unhover\" the 3P tree row. Since this isn't\n    // triggered when clicking the bottom up button.\n    this.treeView.dispatchEventToListeners(TimelineTreeView.Events.TREE_ROW_HOVERED, null);\n    this.treeView.dispatchEventToListeners(TimelineTreeView.Events.BOTTOM_UP_BUTTON_CLICKED, this.profileNode);\n  }\n}\n\nexport class TreeGridNode extends GridNode {\n  constructor(\n      profileNode: Trace.Extras.TraceTree.Node, grandTotalTime: number, maxSelfTime: number, maxTotalTime: number,\n      treeView: TimelineTreeView) {\n    super(profileNode, grandTotalTime, maxSelfTime, maxTotalTime, treeView);\n    this.setHasChildren(this.profileNode.hasChildren());\n    treeNodeToGridNode.set(profileNode, this);\n  }\n\n  override populate(): void {\n    if (this.populated) {\n      return;\n    }\n    this.populated = true;\n    if (!this.profileNode.children) {\n      return;\n    }\n    for (const node of this.profileNode.children().values()) {\n      const gridNode = new TreeGridNode(node, this.grandTotalTime, this.maxSelfTime, this.maxTotalTime, this.treeView);\n      for (const e of node.events) {\n        this.treeView.eventToTreeNode.set(e, node);\n      }\n      this.insertChildOrdered(gridNode);\n    }\n  }\n}\n\nconst treeNodeToGridNode = new WeakMap<Trace.Extras.TraceTree.Node, TreeGridNode>();\n\nexport class AggregatedTimelineTreeView extends TimelineTreeView {\n  protected readonly groupBySetting: Common.Settings.Setting<AggregatedTimelineTreeView.GroupBy>;\n  readonly stackView: TimelineStackView;\n\n  constructor() {\n    super();\n    this.groupBySetting = Common.Settings.Settings.instance().createSetting(\n        'timeline-tree-group-by', AggregatedTimelineTreeView.GroupBy.None);\n    this.groupBySetting.addChangeListener(this.refreshTree.bind(this));\n    this.init();\n    this.stackView = new TimelineStackView(this);\n    this.stackView.addEventListener(TimelineStackView.Events.SELECTION_CHANGED, this.onStackViewSelectionChanged, this);\n  }\n\n  setGroupBySetting(groupBy: AggregatedTimelineTreeView.GroupBy): void {\n    this.groupBySetting.set(groupBy);\n  }\n\n  override updateContents(selection: TimelineSelection): void {\n    super.updateContents(selection);\n    const rootNode = this.dataGrid.rootNode();\n    if (rootNode.children.length) {\n      rootNode.children[0].select(/* suppressSelectedEvent */ true);\n    }\n    this.updateDetailsForSelection();\n  }\n\n  private beautifyDomainName(this: AggregatedTimelineTreeView, name: string, node: Trace.Extras.TraceTree.Node):\n      string {\n    if (AggregatedTimelineTreeView.isExtensionInternalURL(name as Platform.DevToolsPath.UrlString)) {\n      name = i18nString(UIStrings.chromeExtensionsOverhead);\n    } else if (AggregatedTimelineTreeView.isV8NativeURL(name as Platform.DevToolsPath.UrlString)) {\n      name = i18nString(UIStrings.vRuntime);\n    } else if (name.startsWith('chrome-extension')) {\n      name = this.entityMapper()?.entityForEvent(node.event)?.name || name;\n    }\n    return name;\n  }\n\n  displayInfoForGroupNode(node: Trace.Extras.TraceTree.Node): {\n    name: string,\n    color: string,\n    icon: (Element|undefined),\n  } {\n    const categories = Utils.EntryStyles.getCategoryStyles();\n    const color = TimelineUIUtils.eventColor(node.event);\n    const unattributed = i18nString(UIStrings.unattributed);\n\n    const id = typeof node.id === 'symbol' ? undefined : node.id;\n\n    switch (this.groupBySetting.get()) {\n      case AggregatedTimelineTreeView.GroupBy.Category: {\n        const idIsValid = id && Utils.EntryStyles.stringIsEventCategory(id);\n        const category = idIsValid ? categories[id] || categories['other'] : {title: unattributed, color: unattributed};\n        return {name: category.title, color: category.color, icon: undefined};\n      }\n\n      case AggregatedTimelineTreeView.GroupBy.Domain:\n      case AggregatedTimelineTreeView.GroupBy.Subdomain:\n      case AggregatedTimelineTreeView.GroupBy.ThirdParties: {\n        // This `undefined` is [unattributed]\n        // TODO(paulirish,aixba): Improve attribution to reduce amount of items in [unattributed].\n        const domainName = id ? this.beautifyDomainName(id, node) : undefined;\n        return {name: domainName || unattributed, color, icon: undefined};\n      }\n\n      case AggregatedTimelineTreeView.GroupBy.EventName: {\n        if (!node.event) {\n          throw new Error('Unable to find event for group by operation');\n        }\n        const name = TimelineUIUtils.eventTitle(node.event);\n        return {\n          name,\n          color,\n          icon: undefined,\n        };\n      }\n\n      case AggregatedTimelineTreeView.GroupBy.URL:\n        break;\n\n      case AggregatedTimelineTreeView.GroupBy.Frame: {\n        const frame = id ? this.parsedTrace()?.PageFrames.frames.get(id) : undefined;\n        const frameName = frame ? TimelineUIUtils.displayNameForFrame(frame) : i18nString(UIStrings.page);\n        return {name: frameName, color, icon: undefined};\n      }\n\n      default:\n        console.assert(false, 'Unexpected grouping type');\n    }\n    return {name: id || unattributed, color, icon: undefined};\n  }\n\n  override populateToolbar(toolbar: UI.Toolbar.Toolbar): void {\n    super.populateToolbar(toolbar);\n    const groupBy = AggregatedTimelineTreeView.GroupBy;\n    const options = [\n      {label: i18nString(UIStrings.noGrouping), value: groupBy.None},\n      {label: i18nString(UIStrings.groupByActivity), value: groupBy.EventName},\n      {label: i18nString(UIStrings.groupByCategory), value: groupBy.Category},\n      {label: i18nString(UIStrings.groupByDomain), value: groupBy.Domain},\n      {label: i18nString(UIStrings.groupByFrame), value: groupBy.Frame},\n      {label: i18nString(UIStrings.groupBySubdomain), value: groupBy.Subdomain},\n      {label: i18nString(UIStrings.groupByUrl), value: groupBy.URL},\n      {label: i18nString(UIStrings.groupByThirdParties), value: groupBy.ThirdParties},\n    ];\n    toolbar.appendToolbarItem(\n        new UI.Toolbar.ToolbarSettingComboBox(options, this.groupBySetting, i18nString(UIStrings.groupBy)));\n    toolbar.appendSpacer();\n    toolbar.appendToolbarItem(this.splitWidget.createShowHideSidebarButton(\n        i18nString(UIStrings.showHeaviestStack), i18nString(UIStrings.hideHeaviestStack),\n        i18nString(UIStrings.heaviestStackShown), i18nString(UIStrings.heaviestStackHidden)));\n  }\n\n  private buildHeaviestStack(treeNode: Trace.Extras.TraceTree.Node): Trace.Extras.TraceTree.Node[] {\n    console.assert(Boolean(treeNode.parent), 'Attempt to build stack for tree root');\n    let result: Trace.Extras.TraceTree.Node[] = [];\n    // Do not add root to the stack, as it's the tree itself.\n    for (let node: Trace.Extras.TraceTree.Node = treeNode; node?.parent; node = node.parent) {\n      result.push(node);\n    }\n    result = result.reverse();\n    for (let node: Trace.Extras.TraceTree.Node = treeNode; node?.children()?.size;) {\n      const children = Array.from(node.children().values());\n      node = children.reduce((a, b) => a.totalTime > b.totalTime ? a : b);\n      result.push(node);\n    }\n    return result;\n  }\n\n  override exposePercentages(): boolean {\n    return true;\n  }\n\n  private onStackViewSelectionChanged(): void {\n    const treeNode = this.stackView.selectedTreeNode();\n    if (treeNode) {\n      this.selectProfileNode(treeNode, true);\n    }\n  }\n\n  override showDetailsForNode(node: Trace.Extras.TraceTree.Node): boolean {\n    const stack = this.buildHeaviestStack(node);\n    this.stackView.setStack(stack, node);\n    this.stackView.show(this.detailsView.element);\n    return true;\n  }\n\n  protected groupingFunction(groupBy: AggregatedTimelineTreeView.GroupBy):\n      ((arg0: Trace.Types.Events.Event) => string)|null {\n    const GroupBy = AggregatedTimelineTreeView.GroupBy;\n    switch (groupBy) {\n      case GroupBy.None:\n        return null;\n      case GroupBy.EventName:\n        return (event: Trace.Types.Events.Event) => TimelineUIUtils.eventStyle(event).title;\n      case GroupBy.Category:\n        return (event: Trace.Types.Events.Event) => TimelineUIUtils.eventStyle(event).category.name;\n      case GroupBy.Subdomain:\n      case GroupBy.Domain:\n      case GroupBy.ThirdParties:\n        return this.domainByEvent.bind(this, groupBy);\n      case GroupBy.URL:\n        return (event: Trace.Types.Events.Event) => {\n          const parsedTrace = this.parsedTrace();\n          return parsedTrace ? Trace.Handlers.Helpers.getNonResolvedURL(event, parsedTrace) ?? '' : '';\n        };\n      case GroupBy.Frame:\n        return (event: Trace.Types.Events.Event) => {\n          const frameId = Trace.Helpers.Trace.frameIDForEvent(event);\n          return frameId || this.parsedTrace()?.Meta.mainFrameId || '';\n        };\n      default:\n        console.assert(false, `Unexpected aggregation setting: ${groupBy}`);\n        return null;\n    }\n  }\n\n  private domainByEvent(groupBy: AggregatedTimelineTreeView.GroupBy, event: Trace.Types.Events.Event): string {\n    const parsedTrace = this.parsedTrace();\n    if (!parsedTrace) {\n      return '';\n    }\n    const url = Trace.Handlers.Helpers.getNonResolvedURL(event, parsedTrace);\n    if (!url) {\n      return '';\n    }\n    if (AggregatedTimelineTreeView.isExtensionInternalURL(url)) {\n      return AggregatedTimelineTreeView.extensionInternalPrefix;\n    }\n    if (AggregatedTimelineTreeView.isV8NativeURL(url)) {\n      return AggregatedTimelineTreeView.v8NativePrefix;\n    }\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(url);\n    if (!parsedURL) {\n      return '';\n    }\n    if (parsedURL.scheme === 'chrome-extension') {\n      return parsedURL.scheme + '://' + parsedURL.host;\n    }\n    // This must follow after the extension checks.\n    if (groupBy === AggregatedTimelineTreeView.GroupBy.ThirdParties) {\n      const entity = this.entityMapper()?.entityForEvent(event);\n      if (!entity) {\n        return '';\n      }\n\n      return entity.name;\n    }\n    if (groupBy === AggregatedTimelineTreeView.GroupBy.Subdomain) {\n      return parsedURL.host;\n    }\n    if (/^[.0-9]+$/.test(parsedURL.host)) {\n      return parsedURL.host;\n    }\n    const domainMatch = /([^.]*\\.)?[^.]*$/.exec(parsedURL.host);\n    return domainMatch?.[0] || '';\n  }\n\n  private static isExtensionInternalURL(url: Platform.DevToolsPath.UrlString): boolean {\n    return url.startsWith(AggregatedTimelineTreeView.extensionInternalPrefix);\n  }\n\n  private static isV8NativeURL(url: Platform.DevToolsPath.UrlString): boolean {\n    return url.startsWith(AggregatedTimelineTreeView.v8NativePrefix);\n  }\n\n  private static readonly extensionInternalPrefix = 'extensions::';\n  private static readonly v8NativePrefix = 'native ';\n}\nexport namespace AggregatedTimelineTreeView {\n  export enum GroupBy {\n    /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n    None = 'None',\n    EventName = 'EventName',\n    Category = 'Category',\n    Domain = 'Domain',\n    Subdomain = 'Subdomain',\n    URL = 'URL',\n    Frame = 'Frame',\n    ThirdParties = 'ThirdParties',\n    /* eslint-enable @typescript-eslint/naming-convention */\n  }\n}\n\nexport class CallTreeTimelineTreeView extends AggregatedTimelineTreeView {\n  constructor() {\n    super();\n    this.element.setAttribute('jslog', `${VisualLogging.pane('call-tree').track({resize: true})}`);\n    this.dataGrid.markColumnAsSortedBy('total', DataGrid.DataGrid.Order.Descending);\n  }\n\n  override buildTree(): Trace.Extras.TraceTree.Node {\n    const grouping = this.groupBySetting.get();\n    return this.buildTopDownTree(false, this.groupingFunction(grouping));\n  }\n}\n\nexport class BottomUpTimelineTreeView extends AggregatedTimelineTreeView {\n  constructor() {\n    super();\n    this.element.setAttribute('jslog', `${VisualLogging.pane('bottom-up').track({resize: true})}`);\n    this.dataGrid.markColumnAsSortedBy('self', DataGrid.DataGrid.Order.Descending);\n  }\n\n  override buildTree(): Trace.Extras.TraceTree.Node {\n    return new Trace.Extras.TraceTree.BottomUpRootNode(this.selectedEvents(), {\n      textFilter: this.textFilter(),\n      filters: this.filtersWithoutTextFilter(),\n      startTime: this.startTime,\n      endTime: this.endTime,\n      eventGroupIdCallback: this.groupingFunction(this.groupBySetting.get()),\n    });\n  }\n}\n\nexport class TimelineStackView extends\n    Common.ObjectWrapper.eventMixin<TimelineStackView.EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox) {\n  private readonly treeView: TimelineTreeView;\n  private readonly dataGrid: DataGrid.ViewportDataGrid.ViewportDataGrid<unknown>;\n\n  constructor(treeView: TimelineTreeView) {\n    super();\n    const header = this.element.createChild('div', 'timeline-stack-view-header');\n    header.textContent = i18nString(UIStrings.heaviestStack);\n    this.treeView = treeView;\n    const columns = ([\n      {id: 'total', title: i18nString(UIStrings.totalTime), fixedWidth: true, width: '110px'},\n      {id: 'activity', title: i18nString(UIStrings.activity)},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n    this.dataGrid = new DataGrid.ViewportDataGrid.ViewportDataGrid({\n      displayName: i18nString(UIStrings.timelineStack),\n      columns,\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    });\n\n    this.dataGrid.setResizeMethod(DataGrid.DataGrid.ResizeMethod.LAST);\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SELECTED_NODE, this.onSelectionChanged, this);\n\n    // Hover dim behavior within stackview sidebar\n    this.dataGrid.element.addEventListener('mouseenter', this.onMouseMove.bind(this), true);\n    this.dataGrid.element.addEventListener(\n        'mouseleave', () => this.dispatchEventToListeners(TimelineStackView.Events.TREE_ROW_HOVERED, null));\n\n    this.dataGrid.asWidget().show(this.element);\n  }\n\n  setStack(stack: Trace.Extras.TraceTree.Node[], selectedNode: Trace.Extras.TraceTree.Node): void {\n    const rootNode = this.dataGrid.rootNode();\n    rootNode.removeChildren();\n    let nodeToReveal: GridNode|null = null;\n    const totalTime = Math.max.apply(Math, stack.map(node => node.totalTime));\n    for (const node of stack) {\n      const gridNode = new GridNode(node, totalTime, totalTime, totalTime, this.treeView);\n      rootNode.appendChild(gridNode);\n      if (node === selectedNode) {\n        nodeToReveal = gridNode;\n      }\n    }\n    if (nodeToReveal) {\n      nodeToReveal.revealAndSelect();\n    }\n  }\n\n  onMouseMove(event: Event): void {\n    const gridNode = event.target && (event.target instanceof Node) ?\n        (this.dataGrid.dataGridNodeFromNode((event.target as Node))) :\n        null;\n    const profileNode = (gridNode as TreeGridNode)?.profileNode;\n    this.dispatchEventToListeners(TimelineStackView.Events.TREE_ROW_HOVERED, profileNode);\n  }\n\n  selectedTreeNode(): Trace.Extras.TraceTree.Node|null {\n    const selectedNode = this.dataGrid.selectedNode;\n    return selectedNode && (selectedNode as GridNode).profileNode;\n  }\n\n  private onSelectionChanged(): void {\n    this.dispatchEventToListeners(TimelineStackView.Events.SELECTION_CHANGED);\n  }\n}\n\nexport namespace TimelineStackView {\n  export const enum Events {\n    SELECTION_CHANGED = 'SelectionChanged',\n    TREE_ROW_HOVERED = 'TreeRowHovered',\n  }\n\n  export interface EventTypes {\n    [Events.TREE_ROW_HOVERED]: Trace.Extras.TraceTree.Node|null;\n    [Events.SELECTION_CHANGED]: void;\n  }\n}\n"]}