{"version":3,"file":"Initiators.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/Initiators.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\n\nimport * as Timeline from './timeline.js';\n\ndescribeWithEnvironment('Initiators', () => {\n  describe('initiator-initiated event relationships', () => {\n    let requestIdleCallbackCall: Trace.Types.Events.SyntheticProfileCall;\n    let functionCallByrequestIdleCallback: Trace.Types.Events.Event;\n    let setTimeoutCall: Trace.Types.Events.SyntheticProfileCall;\n    let functionCallBySetTimeout: Trace.Types.Events.Event;\n    let rAFCall: Trace.Types.Events.SyntheticProfileCall;\n    let functionCallByRAF: Trace.Types.Events.Event;\n\n    let parsedTrace: Trace.Handlers.Types.ParsedTrace;\n    beforeEach(async function() {\n      parsedTrace = (await TraceLoader.traceEngine(this, 'async-js-calls.json.gz')).parsedTrace;\n      setTimeoutCall =\n          parsedTrace.Renderer.allTraceEntries\n              .filter(e => Trace.Types.Events.isProfileCall(e) && e.callFrame.functionName === 'setTimeout')\n              .at(-1) as Trace.Types.Events.SyntheticProfileCall;\n      assert.exists(setTimeoutCall);\n      assert.isTrue(Trace.Types.Events.isProfileCall(setTimeoutCall));\n\n      functionCallBySetTimeout =\n          parsedTrace.Renderer.allTraceEntries.find(\n              e => Trace.Types.Events.isFunctionCall(e) && e.ts > setTimeoutCall.ts) as Trace.Types.Events.Event;\n      assert.exists(functionCallBySetTimeout);\n\n      rAFCall =\n          parsedTrace.Renderer.allTraceEntries\n              .filter(e => Trace.Types.Events.isProfileCall(e) && e.callFrame.functionName === 'requestAnimationFrame')\n              .at(-1) as Trace.Types.Events.SyntheticProfileCall;\n      assert.exists(rAFCall);\n      assert.isTrue(Trace.Types.Events.isProfileCall(rAFCall));\n\n      functionCallByRAF =\n          parsedTrace.Renderer.allTraceEntries.find(e => Trace.Types.Events.isFunctionCall(e) && e.ts > rAFCall.ts) as\n          Trace.Types.Events.Event;\n      assert.exists(functionCallByRAF);\n\n      requestIdleCallbackCall =\n          parsedTrace.Renderer.allTraceEntries\n              .filter(e => Trace.Types.Events.isProfileCall(e) && e.callFrame.functionName === 'requestIdleCallback')\n              .at(-1) as Trace.Types.Events.SyntheticProfileCall;\n      assert.exists(requestIdleCallbackCall);\n      assert.isTrue(Trace.Types.Events.isProfileCall(requestIdleCallbackCall));\n\n      functionCallByrequestIdleCallback = parsedTrace.Renderer.allTraceEntries.find(\n                                              e => Trace.Types.Events.isFunctionCall(e) &&\n                                                  e.ts > requestIdleCallbackCall.ts) as Trace.Types.Events.Event;\n      assert.exists(functionCallByrequestIdleCallback);\n    });\n    it('returns the initiator data', async function() {\n      const initiatorData = Timeline.Initiators.initiatorsDataToDraw(parsedTrace, functionCallBySetTimeout, [], []);\n      assert.deepEqual(initiatorData[0], {\n        event: functionCallBySetTimeout,\n        initiator: setTimeoutCall,\n      });\n    });\n\n    it('can walk up the tree to find the first parent with an initiator', async function() {\n      // Find any of the bar() calls; they have a parent event\n      // (FunctionCall) that has an initiator.\n      const barCall = parsedTrace.Renderer.allTraceEntries.find(\n          e => Trace.Types.Events.isProfileCall(e) && e.callFrame.functionName === 'bar');\n      assert.exists(barCall);\n\n      // Find the initator data but starting at the fibonacci()\n      // call.\n      const initiatorsData = Timeline.Initiators.initiatorsDataToDraw(parsedTrace, barCall, [], []);\n\n      assert.deepEqual(initiatorsData[0], {\n        event: functionCallBySetTimeout,\n        initiator: setTimeoutCall,\n      });\n    });\n\n    it('will walk back through the initiators to find the entire chain', async function() {\n      // Find any of the baz() calls; they have a parent event\n      // (FunctionCall) that has an initiator.\n      const bazCall = parsedTrace.Renderer.allTraceEntries.find(\n          e => Trace.Types.Events.isProfileCall(e) && e.callFrame.functionName === 'baz');\n      assert.exists(bazCall);\n\n      // Find the initators data but starting at the baz()\n      // call. We expect to find 3 initiatorData objects here:\n      // 1. baz() ===> FunctionCall caused by requestIdleCallback\n      // 2. The requestIdleCallback from (1), caused by a prior setTimeout.\n      // 3. The setTimeout from (2), caused by a prior requestAnimationFrame.\n      const initiatorsData = Timeline.Initiators.initiatorsDataToDraw(parsedTrace, bazCall, [], []);\n\n      assert.deepEqual(initiatorsData, [\n        {\n          event: functionCallByrequestIdleCallback,\n          initiator: requestIdleCallbackCall,\n        },\n        {\n          event: functionCallBySetTimeout,\n          initiator: setTimeoutCall,\n        },\n        {\n          event: functionCallByRAF,\n          initiator: rAFCall,\n        },\n      ]);\n    });\n\n    it('will walk forward to find the events initiated by the selected entry', async function() {\n      const initatorsData = Timeline.Initiators.initiatorsDataToDraw(parsedTrace, rAFCall, [], []);\n      assert.lengthOf(initatorsData, 1);\n      assert.strictEqual(initatorsData[0].event, functionCallByRAF);\n      assert.strictEqual(initatorsData[0].initiator, rAFCall);\n    });\n\n    it('will return the closest expandable ancestor as an initiator in a pair if the initiator itself is hidden',\n       async function() {\n         // Get the parent of rAF to add to the expandable events array.\n         // When we add rAF to hidden entries list, it will be the\n         // closest expandable parent and the initiator should point to it.\n         const rAFParent = parsedTrace.Renderer.entryToNode.get(rAFCall)?.parent;\n         assert.exists(rAFParent);\n\n         // Find the initatorData objects starting at the rAF\n         // call. We expect to find one initatorData here:\n         // rAF callback initiated by rAF -> Parent of rAF because rAF is hidden\n         const initiatorsData =\n             Timeline.Initiators.initiatorsDataToDraw(parsedTrace, rAFCall, [rAFCall], [rAFParent?.entry]);\n\n         assert.lengthOf(initiatorsData, 1);\n         assert.strictEqual(initiatorsData[0].event, functionCallByRAF);\n         assert.strictEqual(initiatorsData[0].initiator, rAFParent.entry);\n         // Ensure the expandable entry is marked as hidden\n         assert.isTrue(initiatorsData[0].isInitiatorHidden);\n       });\n\n    it('will return the closest expandable ancestor as an initiated event in a pair if the event itself is hidden',\n       async function() {\n         const functionCallByRAFParent = parsedTrace.Renderer.entryToNode.get(functionCallByRAF)?.parent;\n         assert.exists(functionCallByRAFParent);\n\n         const initiatorsData = Timeline.Initiators.initiatorsDataToDraw(\n             parsedTrace, rAFCall, [functionCallByRAF], [functionCallByRAFParent?.entry]);\n\n         assert.lengthOf(initiatorsData, 1);\n         assert.strictEqual(initiatorsData[0].event, functionCallByRAFParent?.entry);\n         assert.strictEqual(initiatorsData[0].initiator, rAFCall);\n         // Ensure the expandable entry is marked as hidden\n         assert.isTrue(initiatorsData[0].isEntryHidden);\n       });\n  });\n\n  describe('Network Requests', function() {\n    it('returns the initiator data for network requests', async function() {\n      const {parsedTrace} = await TraceLoader.traceEngine(this, 'network-requests-initiators.json.gz');\n\n      // Find the network request to test, it is initiated by `youtube.com`.\n      const event = parsedTrace.NetworkRequests.byTime.find(event => event.ts === 1491680762420);\n      assert.exists(event);\n      // Find the `youtube.com` network request.\n      const initiator = parsedTrace.NetworkRequests.byTime.find(event => event.ts === 1491680629144);\n      assert.exists(initiator);\n      const initiatorData = Timeline.Initiators.initiatorsDataToDrawForNetwork(parsedTrace, event);\n\n      assert.deepEqual(initiatorData, [{event, initiator}]);\n    });\n  });\n});\n"]}