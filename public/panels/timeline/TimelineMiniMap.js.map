{"version":3,"file":"TimelineMiniMap.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineMiniMap.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as TimelineComponents from './components/components.js';\nimport {ModificationsManager} from './ModificationsManager.js';\nimport {\n  type TimelineEventOverview,\n  TimelineEventOverviewCPUActivity,\n  TimelineEventOverviewMemory,\n  TimelineEventOverviewNetwork,\n  TimelineEventOverviewResponsiveness,\n  TimelineFilmStripOverview,\n} from './TimelineEventOverview.js';\nimport miniMapStyles from './timelineMiniMap.css.js';\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\n\nexport interface OverviewData {\n  traceParsedData: TraceEngine.Handlers.Types.TraceParseData;\n  isCpuProfile?: boolean;\n  settings: {\n    showScreenshots: boolean,\n    showMemory: boolean,\n  };\n}\n\n/**\n * This component wraps the generic PerfUI Overview component and configures it\n * specifically for the Performance Panel, including injecting the CSS we use\n * to customise how the components render within the Performance Panel.\n *\n * It is also responsible for listening to events from the OverviewPane to\n * update the visible trace window, and when this happens it will update the\n * TraceBounds service with the new values.\n */\nexport class TimelineMiniMap extends\n    Common.ObjectWrapper.eventMixin<PerfUI.TimelineOverviewPane.EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox) {\n  #overviewComponent = new PerfUI.TimelineOverviewPane.TimelineOverviewPane('timeline');\n  #controls: TimelineEventOverview[] = [];\n  breadcrumbs: TimelineComponents.Breadcrumbs.Breadcrumbs|null = null;\n  #breadcrumbsUI: TimelineComponents.BreadcrumbsUI.BreadcrumbsUI;\n  #data: OverviewData|null = null;\n\n  #onTraceBoundsChangeBound = this.#onTraceBoundsChange.bind(this);\n\n  constructor() {\n    super();\n    this.element.classList.add('timeline-minimap');\n    this.#breadcrumbsUI = new TimelineComponents.BreadcrumbsUI.BreadcrumbsUI();\n    this.element.prepend(this.#breadcrumbsUI);\n\n    const icon = new IconButton.Icon.Icon();\n    icon.setAttribute('name', 'left-panel-open');\n    icon.setAttribute('jslog', `${VisualLogging.action('timeline.sidebar-open').track({click: true})}`);\n    icon.addEventListener('click', () => {\n      this.dispatchEventToListeners(PerfUI.TimelineOverviewPane.Events.OPEN_SIDEBAR_BUTTON_CLICKED, {});\n    });\n    this.#overviewComponent.show(this.element);\n\n    this.#overviewComponent.addEventListener(PerfUI.TimelineOverviewPane.Events.OVERVIEW_PANE_WINDOW_CHANGED, event => {\n      this.#onOverviewPanelWindowChanged(event);\n    });\n    this.#overviewComponent.addEventListener(\n        PerfUI.TimelineOverviewPane.Events.OVERVIEW_PANE_BREADCRUMB_ADDED, event => {\n          this.addBreadcrumb(event.data);\n        });\n\n    this.#breadcrumbsUI.addEventListener(TimelineComponents.BreadcrumbsUI.BreadcrumbActivatedEvent.eventName, event => {\n      const {breadcrumb, childBreadcrumbsRemoved} =\n          (event as TimelineComponents.BreadcrumbsUI.BreadcrumbActivatedEvent);\n      this.#activateBreadcrumb(breadcrumb, childBreadcrumbsRemoved);\n    });\n    this.#overviewComponent.enableCreateBreadcrumbsButton();\n\n    TraceBounds.TraceBounds.onChange(this.#onTraceBoundsChangeBound);\n  }\n\n  #onOverviewPanelWindowChanged(\n      event: Common.EventTarget.EventTargetEvent<PerfUI.TimelineOverviewPane.OverviewPaneWindowChangedEvent>): void {\n    const traceData = this.#data?.traceParsedData;\n    if (!traceData) {\n      return;\n    }\n\n    const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n    if (!traceBoundsState) {\n      return;\n    }\n\n    const left = (event.data.startTime > 0) ? event.data.startTime : traceBoundsState.milli.entireTraceBounds.min;\n    const right =\n        Number.isFinite(event.data.endTime) ? event.data.endTime : traceBoundsState.milli.entireTraceBounds.max;\n\n    TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(\n        TraceEngine.Helpers.Timing.traceWindowFromMilliSeconds(\n            TraceEngine.Types.Timing.MilliSeconds(left),\n            TraceEngine.Types.Timing.MilliSeconds(right),\n            ),\n        {\n          shouldAnimate: true,\n        },\n    );\n  }\n\n  #onTraceBoundsChange(event: TraceBounds.TraceBounds.StateChangedEvent): void {\n    if (event.updateType === 'RESET' || event.updateType === 'VISIBLE_WINDOW') {\n      this.#overviewComponent.setWindowTimes(\n          event.state.milli.timelineTraceWindow.min, event.state.milli.timelineTraceWindow.max);\n    }\n    if (event.updateType === 'RESET' || event.updateType === 'MINIMAP_BOUNDS') {\n      this.#overviewComponent.setBounds(\n          event.state.milli.minimapTraceBounds.min, event.state.milli.minimapTraceBounds.max);\n    }\n  }\n\n  addBreadcrumb({startTime, endTime}: PerfUI.TimelineOverviewPane.OverviewPaneBreadcrumbAddedEvent): void {\n    if (!this.breadcrumbs) {\n      console.warn('ModificationsManager has not been created, therefore Breadcrumbs can not be added');\n      return;\n    }\n    // The OverviewPane can emit 0 and Infinity as numbers for the range; in\n    // this case we change them to be the min and max values of the minimap\n    // bounds.\n    const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n    if (!traceBoundsState) {\n      return;\n    }\n    const bounds = traceBoundsState.milli.minimapTraceBounds;\n\n    const breadcrumbTimes = {\n      startTime: TraceEngine.Types.Timing.MilliSeconds(Math.max(startTime, bounds.min)),\n      endTime: TraceEngine.Types.Timing.MilliSeconds(Math.min(endTime, bounds.max)),\n    };\n\n    const newVisibleTraceWindow =\n        TraceEngine.Helpers.Timing.traceWindowFromMilliSeconds(breadcrumbTimes.startTime, breadcrumbTimes.endTime);\n\n      const addedBreadcrumb = this.breadcrumbs.add(newVisibleTraceWindow);\n\n      this.#breadcrumbsUI.data = {\n        initialBreadcrumb: this.breadcrumbs.initialBreadcrumb,\n        activeBreadcrumb: addedBreadcrumb,\n      };\n  }\n\n  #activateBreadcrumb(breadcrumb: TraceEngine.Types.File.Breadcrumb, removeChildBreadcrumbs?: boolean): void {\n    if (!this.breadcrumbs) {\n      return;\n    }\n\n    this.breadcrumbs.setActiveBreadcrumb(breadcrumb, removeChildBreadcrumbs);\n    // Only the initial breadcrumb is passed in because breadcrumbs are stored in a linked list and breadcrumbsUI component iterates through them\n    this.#breadcrumbsUI.data = {\n      initialBreadcrumb: this.breadcrumbs.initialBreadcrumb,\n      activeBreadcrumb: breadcrumb,\n    };\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([miniMapStyles]);\n  }\n\n  reset(): void {\n    this.#data = null;\n    this.#overviewComponent.reset();\n  }\n\n  #setMarkers(traceParsedData: TraceEngine.Handlers.Types.TraceParseData): void {\n    const markers = new Map<number, Element>();\n\n    const {Meta, PageLoadMetrics} = traceParsedData;\n\n    // Add markers for navigation start times.\n    const navStartEvents = Meta.mainFrameNavigations;\n    const minTimeInMilliseconds = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(Meta.traceBounds.min);\n\n    for (const event of navStartEvents) {\n      const {startTime} = TraceEngine.Helpers.Timing.eventTimingsMilliSeconds(event);\n      markers.set(startTime, TimelineUIUtils.createEventDivider(event, minTimeInMilliseconds));\n    }\n\n    // Now add markers for the page load events\n    for (const event of PageLoadMetrics.allMarkerEvents) {\n      const {startTime} = TraceEngine.Helpers.Timing.eventTimingsMilliSeconds(event);\n      markers.set(startTime, TimelineUIUtils.createEventDivider(event, minTimeInMilliseconds));\n    }\n\n    this.#overviewComponent.setMarkers(markers);\n  }\n\n  #setNavigationStartEvents(traceParsedData: TraceEngine.Handlers.Types.TraceParseData): void {\n    this.#overviewComponent.setNavStartTimes(traceParsedData.Meta.mainFrameNavigations);\n  }\n\n  getControls(): TimelineEventOverview[] {\n    return this.#controls;\n  }\n\n  setData(data: OverviewData): void {\n    if (this.#data?.traceParsedData === data.traceParsedData) {\n      return;\n    }\n    this.#data = data;\n    this.#controls = [];\n\n    this.#setMarkers(data.traceParsedData);\n    this.#setNavigationStartEvents(data.traceParsedData);\n    this.#controls.push(new TimelineEventOverviewResponsiveness(data.traceParsedData));\n    this.#controls.push(new TimelineEventOverviewCPUActivity(data.traceParsedData));\n\n    this.#controls.push(new TimelineEventOverviewNetwork(data.traceParsedData));\n    if (data.settings.showScreenshots) {\n      const filmStrip = TraceEngine.Extras.FilmStrip.fromTraceData(data.traceParsedData);\n      if (filmStrip.frames.length) {\n        this.#controls.push(new TimelineFilmStripOverview(filmStrip));\n      }\n    }\n    if (data.settings.showMemory) {\n      this.#controls.push(new TimelineEventOverviewMemory(data.traceParsedData));\n    }\n    this.#overviewComponent.setOverviewControls(this.#controls);\n    this.#overviewComponent.showingScreenshots = data.settings.showScreenshots;\n    this.#setInitialBreadcrumb();\n  }\n\n  #setInitialBreadcrumb(): void {\n    // Set the initial breadcrumb that ModificationsManager created from the initial full window\n    // or loaded from the file.\n    this.breadcrumbs = ModificationsManager.activeManager()?.getTimelineBreadcrumbs() ?? null;\n\n    if (!this.breadcrumbs) {\n      return;\n    }\n\n    let lastBreadcrumb = this.breadcrumbs.initialBreadcrumb;\n    while (lastBreadcrumb.child !== null) {\n      lastBreadcrumb = lastBreadcrumb.child;\n    }\n\n    this.#breadcrumbsUI.data = {\n      initialBreadcrumb: this.breadcrumbs.initialBreadcrumb,\n      activeBreadcrumb: lastBreadcrumb,\n    };\n  }\n}\n"]}