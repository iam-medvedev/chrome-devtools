{"version":3,"file":"TimelineMiniMap.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineMiniMap.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Helpers from '../../models/trace/helpers/helpers.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as TimingTypes from '../../models/trace/types/types.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as TimelineComponents from './components/components.js';\nimport {\n  type TimelineEventOverview,\n  TimelineEventOverviewCPUActivity,\n  TimelineEventOverviewMemory,\n  TimelineEventOverviewNetwork,\n  TimelineEventOverviewResponsiveness,\n  TimelineFilmStripOverview,\n} from './TimelineEventOverview.js';\nimport miniMapStyles from './timelineMiniMap.css.js';\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\n\nexport interface OverviewData {\n  traceParsedData: TraceEngine.Handlers.Types.TraceParseData;\n  isCpuProfile?: boolean;\n  settings: {\n    showScreenshots: boolean,\n    showMemory: boolean,\n  };\n}\n\n/**\n * This component wraps the generic PerfUI Overview component and configures it\n * specifically for the Performance Panel, including injecting the CSS we use\n * to customise how the components render within the Performance Panel.\n */\nexport class TimelineMiniMap extends\n    Common.ObjectWrapper.eventMixin<PerfUI.TimelineOverviewPane.EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox) {\n  breadcrumbsActivated: boolean = false;\n  #overviewComponent = new PerfUI.TimelineOverviewPane.TimelineOverviewPane('timeline');\n  #controls: TimelineEventOverview[] = [];\n  breadcrumbs: TimelineComponents.Breadcrumbs.Breadcrumbs|null = null;\n  #breadcrumbsUI: TimelineComponents.BreadcrumbsUI.BreadcrumbsUI;\n  #minTime: TimingTypes.Timing.MilliSeconds = TimingTypes.Timing.MilliSeconds(0);\n  #data: OverviewData|null = null;\n\n  constructor() {\n    super();\n    this.element.classList.add('timeline-minimap');\n    this.#breadcrumbsUI = new TimelineComponents.BreadcrumbsUI.BreadcrumbsUI();\n\n    this.#overviewComponent.show(this.element);\n    // Push the event up into the parent component so the panel knows when the window is changed.\n    this.#overviewComponent.addEventListener(PerfUI.TimelineOverviewPane.Events.WindowChanged, event => {\n      if (this.breadcrumbs) {\n        this.dispatchEventToListeners(PerfUI.TimelineOverviewPane.Events.WindowChanged, {\n          ...event.data,\n          breadcrumb: {\n            min: TraceEngine.Types.Timing.MicroSeconds(this.breadcrumbs.lastBreadcrumb.window.min + this.#minTime),\n            max: TraceEngine.Types.Timing.MicroSeconds(this.breadcrumbs.lastBreadcrumb.window.max + this.#minTime),\n            range: TraceEngine.Types.Timing.MicroSeconds(\n                this.breadcrumbs.lastBreadcrumb.window.max - this.breadcrumbs.lastBreadcrumb.window.min),\n          },\n        });\n      } else {\n        this.dispatchEventToListeners(PerfUI.TimelineOverviewPane.Events.WindowChanged, event.data);\n      }\n    });\n\n    if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.BREADCRUMBS_PERFORMANCE_PANEL)) {\n      this.activateBreadcrumbs();\n    }\n  }\n\n  activateBreadcrumbs(): void {\n    this.breadcrumbsActivated = true;\n    this.element.prepend(this.#breadcrumbsUI);\n    this.#overviewComponent.addEventListener(PerfUI.TimelineOverviewPane.Events.BreadcrumbAdded, event => {\n      this.addBreadcrumb(this.breadcrumbWindowBounds(event.data));\n    });\n\n    this.#breadcrumbsUI.addEventListener(TimelineComponents.BreadcrumbsUI.BreadcrumbRemovedEvent.eventName, event => {\n      const breadcrumb = (event as TimelineComponents.BreadcrumbsUI.BreadcrumbRemovedEvent).breadcrumb;\n      this.removeBreadcrumb(breadcrumb);\n    });\n    this.#overviewComponent.enableCreateBreadcrumbsButton();\n  }\n\n  // If the window sliders are on the edges of the window, the window values are set to 0 or Infity.\n  // This behaviour is not needed for breadcrumbs so we reset them to the maximum or minimum window boundary.\n  breadcrumbWindowBounds(breadcrumbWindow: PerfUI.TimelineOverviewPane.BreadcrumbAddedEvent):\n      PerfUI.TimelineOverviewPane.BreadcrumbAddedEvent {\n    breadcrumbWindow.endTime = TraceEngine.Types.Timing.MilliSeconds(\n        Math.min(this.#overviewComponent.overviewCalculator.maximumBoundary(), breadcrumbWindow.endTime));\n    breadcrumbWindow.startTime = TraceEngine.Types.Timing.MilliSeconds(\n        Math.max(this.#overviewComponent.overviewCalculator.minimumBoundary(), breadcrumbWindow.startTime));\n\n    return breadcrumbWindow;\n  }\n\n  addBreadcrumb({startTime, endTime}: PerfUI.TimelineOverviewPane.BreadcrumbAddedEvent): void {\n    const startWithoutMin = startTime - this.#minTime;\n    const endWithoutMin = endTime - this.#minTime;\n\n    const traceWindow: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(startWithoutMin),\n      max: TraceEngine.Types.Timing.MicroSeconds(endWithoutMin),\n      range: TraceEngine.Types.Timing.MicroSeconds(endWithoutMin - startWithoutMin),\n    };\n    if (this.breadcrumbs === null) {\n      this.breadcrumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(traceWindow);\n\n    } else {\n      this.breadcrumbs.add(traceWindow);\n      this.setBounds(startTime, endTime);\n      this.#overviewComponent.scheduleUpdate(startTime, endTime);\n    }\n\n    this.#breadcrumbsUI.data = {\n      breadcrumb: this.breadcrumbs.initialBreadcrumb,\n    };\n\n    // Dispatch event to update the breadcrumb in TimelineFlameChardView\n    this.dispatchEventToListeners(PerfUI.TimelineOverviewPane.Events.WindowChanged, {\n      startTime: startTime,\n      endTime: endTime,\n      breadcrumb: {\n        min: TraceEngine.Types.Timing.MicroSeconds(this.breadcrumbs.lastBreadcrumb.window.min + this.#minTime),\n        max: TraceEngine.Types.Timing.MicroSeconds(this.breadcrumbs.lastBreadcrumb.window.max + this.#minTime),\n        range: TraceEngine.Types.Timing.MicroSeconds(\n            this.breadcrumbs.lastBreadcrumb.window.max - this.breadcrumbs.lastBreadcrumb.window.min),\n      },\n    });\n  }\n\n  removeBreadcrumb(breadcrumb: TimelineComponents.Breadcrumbs.Breadcrumb): void {\n    const startMSWithMin = TraceEngine.Types.Timing.MilliSeconds(breadcrumb.window.min + this.#minTime);\n    const endMSWithMin = TraceEngine.Types.Timing.MilliSeconds(breadcrumb.window.max + this.#minTime);\n\n    if (this.breadcrumbs) {\n      this.breadcrumbs.makeBreadcrumbActive(breadcrumb);\n      // Only the initial breadcrumb is passed in because breadcrumbs are stored in a linked list and breadcrumbsUI component iterates through them\n      this.#breadcrumbsUI.data = {\n        breadcrumb: this.breadcrumbs.initialBreadcrumb,\n      };\n    }\n\n    this.setBounds(startMSWithMin, endMSWithMin);\n    this.setWindowTimes(startMSWithMin, endMSWithMin);\n    this.#overviewComponent.scheduleUpdate(startMSWithMin, endMSWithMin);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([miniMapStyles]);\n  }\n\n  reset(): void {\n    this.#data = null;\n    this.#overviewComponent.reset();\n  }\n\n  setBounds(min: TraceEngine.Types.Timing.MilliSeconds, max: TraceEngine.Types.Timing.MilliSeconds): void {\n    this.#overviewComponent.setBounds(min, max);\n  }\n\n  setWindowTimes(left: number, right: number): void {\n    // If breadcrumbs exist, make sure that selectected window is within timeline boundaries\n    if (!this.breadcrumbsActivated ||\n        (this.#overviewComponent.overviewCalculator.minimumBoundary() <= TraceEngine.Types.Timing.MilliSeconds(left) &&\n         this.#overviewComponent.overviewCalculator.maximumBoundary() >=\n             TraceEngine.Types.Timing.MilliSeconds(right))) {\n      this.#overviewComponent.setWindowTimes(left, right);\n    }\n  }\n\n  #setMarkers(traceParsedData: TraceEngine.Handlers.Types.TraceParseData): void {\n    const markers = new Map<number, Element>();\n\n    const {Meta, PageLoadMetrics} = traceParsedData;\n\n    // Add markers for navigation start times.\n    const navStartEvents = Meta.mainFrameNavigations;\n    const minTimeInMilliseconds = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(Meta.traceBounds.min);\n\n    for (const event of navStartEvents) {\n      const {startTime} = TraceEngine.Legacy.timesForEventInMilliseconds(event);\n      markers.set(startTime, TimelineUIUtils.createEventDivider(event, minTimeInMilliseconds));\n    }\n\n    // Now add markers for the page load events\n    for (const event of PageLoadMetrics.allMarkerEvents) {\n      const {startTime} = TraceEngine.Legacy.timesForEventInMilliseconds(event);\n      markers.set(startTime, TimelineUIUtils.createEventDivider(event, minTimeInMilliseconds));\n    }\n\n    this.#overviewComponent.setMarkers(markers);\n  }\n\n  #setNavigationStartEvents(traceParsedData: TraceEngine.Handlers.Types.TraceParseData): void {\n    this.#overviewComponent.setNavStartTimes(traceParsedData.Meta.mainFrameNavigations);\n  }\n  getControls(): TimelineEventOverview[] {\n    return this.#controls;\n  }\n\n  setData(data: OverviewData): void {\n    if (this.#data?.traceParsedData === data.traceParsedData) {\n      return;\n    }\n    this.#data = data;\n    this.#controls = [];\n    if (data.traceParsedData.Meta.traceBounds.min !== undefined) {\n      this.#minTime = Helpers.Timing.microSecondsToMilliseconds(data.traceParsedData?.Meta.traceBounds.min);\n    }\n\n    this.#setMarkers(data.traceParsedData);\n    this.#setNavigationStartEvents(data.traceParsedData);\n    this.#controls.push(new TimelineEventOverviewResponsiveness(data.traceParsedData));\n    this.#controls.push(new TimelineEventOverviewCPUActivity(data.traceParsedData));\n\n    this.#controls.push(new TimelineEventOverviewNetwork(data.traceParsedData));\n    if (data.settings.showScreenshots) {\n      const filmStrip = TraceEngine.Extras.FilmStrip.fromTraceData(data.traceParsedData);\n      if (filmStrip.frames.length) {\n        this.#controls.push(new TimelineFilmStripOverview(filmStrip));\n      }\n    }\n    if (data.settings.showMemory) {\n      this.#controls.push(new TimelineEventOverviewMemory(data.traceParsedData));\n    }\n    this.#overviewComponent.setOverviewControls(this.#controls);\n    this.#overviewComponent.showingScreenshots = data.settings.showScreenshots;\n  }\n\n  addInitialBreadcrumb(): void {\n    // Create first breadcrumb from the initial full window\n    this.breadcrumbs = null;\n    this.addBreadcrumb(this.breadcrumbWindowBounds({\n      startTime: TraceEngine.Types.Timing.MilliSeconds(this.#overviewComponent.overviewCalculator.minimumBoundary()),\n      endTime: TraceEngine.Types.Timing.MilliSeconds(this.#overviewComponent.overviewCalculator.maximumBoundary()),\n    }));\n  }\n}\n"]}