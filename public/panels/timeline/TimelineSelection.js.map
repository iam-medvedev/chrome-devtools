{"version":3,"file":"TimelineSelection.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineSelection.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../models/trace/trace.js';\n\ntype PermittedObjectTypes = Trace.Types.Events.LegacyTimelineFrame|Trace.Types.Events.Event|SelectionRange;\n\nconst SelectionRangeSymbol = Symbol('SelectionRange');\nexport type SelectionRange = typeof SelectionRangeSymbol;\n\nexport class TimelineSelection {\n  readonly startTime: Trace.Types.Timing.MilliSeconds;\n  readonly endTime: Trace.Types.Timing.MilliSeconds;\n  readonly object: PermittedObjectTypes;\n\n  constructor(\n      startTime: Trace.Types.Timing.MilliSeconds, endTime: Trace.Types.Timing.MilliSeconds,\n      object: PermittedObjectTypes) {\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.object = object;\n  }\n\n  static isLegacyTimelineFrame(object: PermittedObjectTypes): object is Trace.Types.Events.LegacyTimelineFrame {\n    return typeof object !== 'symbol' && Trace.Types.Events.isLegacyTimelineFrame(object);\n  }\n\n  static fromFrame(frame: Trace.Types.Events.LegacyTimelineFrame): TimelineSelection {\n    return new TimelineSelection(\n        Trace.Helpers.Timing.microSecondsToMilliseconds(frame.startTime),\n        Trace.Helpers.Timing.microSecondsToMilliseconds(frame.endTime), frame);\n  }\n\n  static isSyntheticNetworkRequestDetailsEventSelection(object: PermittedObjectTypes):\n      object is Trace.Types.Events.SyntheticNetworkRequest {\n    if (TimelineSelection.isLegacyTimelineFrame(object) || TimelineSelection.isRangeSelection(object)) {\n      return false;\n    }\n    // At this point we know the selection is a raw trace event, so we just\n    // need to check it's the right type of raw event.\n    return Trace.Types.Events.isSyntheticNetworkRequest(object);\n  }\n\n  static isNetworkEventSelection(object: PermittedObjectTypes):\n      object is Trace.Types.Events.SyntheticNetworkRequest|Trace.Types.Events.WebSocketEvent {\n    if (TimelineSelection.isLegacyTimelineFrame(object) || TimelineSelection.isRangeSelection(object)) {\n      return false;\n    }\n    // At this point we know the selection is a raw trace event, so we just\n    // need to check it's the right type of raw event.\n    return Trace.Types.Events.isNetworkTrackEntry(object);\n  }\n\n  static isSelection(object: PermittedObjectTypes): object is Trace.Types.Events.Event {\n    // Trace events are just raw objects, so now we have to confirm it is a trace event by ruling everything else out.\n    if (TimelineSelection.isLegacyTimelineFrame(object) || TimelineSelection.isRangeSelection(object)) {\n      return false;\n    }\n\n    // Although Network Requests are trace events, in TimelineSelection we\n    // treat Network requests distinctly\n    if (Trace.Types.Events.isSyntheticNetworkRequest(object)) {\n      return false;\n    }\n    return true;\n  }\n\n  static fromTraceEvent(event: Trace.Types.Events.Event): TimelineSelection {\n    const {startTime, endTime} = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n    return new TimelineSelection(startTime, Trace.Types.Timing.MilliSeconds(endTime || (startTime + 1)), event);\n  }\n\n  static isRangeSelection(object: PermittedObjectTypes): object is SelectionRange {\n    return object === SelectionRangeSymbol;\n  }\n\n  static fromRange(startTime: number, endTime: number): TimelineSelection {\n    return new TimelineSelection(\n        Trace.Types.Timing.MilliSeconds(startTime), Trace.Types.Timing.MilliSeconds(endTime), SelectionRangeSymbol);\n  }\n}\n"]}