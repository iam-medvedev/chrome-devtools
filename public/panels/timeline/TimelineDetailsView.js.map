{"version":3,"file":"TimelineDetailsView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineDetailsView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {EventsTimelineTreeView} from './EventsTimelineTreeView.js';\nimport {type PerformanceModel} from './PerformanceModel.js';\nimport {TimelineLayersView} from './TimelineLayersView.js';\nimport {TimelinePaintProfilerView} from './TimelinePaintProfilerView.js';\nimport {type TimelineModeViewDelegate} from './TimelinePanel.js';\nimport {TimelineSelection} from './TimelineSelection.js';\nimport {BottomUpTimelineTreeView, CallTreeTimelineTreeView, type TimelineTreeView} from './TimelineTreeView.js';\nimport {TimelineDetailsContentHelper, TimelineUIUtils} from './TimelineUIUtils.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for the summary view\n   */\n  summary: 'Summary',\n  /**\n   *@description Text in Timeline Details View of the Performance panel\n   */\n  bottomup: 'Bottom-Up',\n  /**\n   *@description Text in Timeline Details View of the Performance panel\n   */\n  callTree: 'Call Tree',\n  /**\n   *@description Text in Timeline Details View of the Performance panel\n   */\n  eventLog: 'Event Log',\n  /**\n   *@description Title of the paint profiler, old name of the performance pane\n   */\n  paintProfiler: 'Paint Profiler',\n  /**\n   *@description Title of the Layers tool\n   */\n  layers: 'Layers',\n  /**\n   *@description Text in Timeline Details View of the Performance panel\n   *@example {1ms} PH1\n   *@example {10ms} PH2\n   */\n  rangeSS: 'Range:  {PH1} – {PH2}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineDetailsView extends UI.Widget.VBox {\n  private readonly detailsLinkifier: Components.Linkifier.Linkifier;\n  private tabbedPane: UI.TabbedPane.TabbedPane;\n  private readonly defaultDetailsWidget: UI.Widget.VBox;\n  private readonly defaultDetailsContentElement: HTMLElement;\n  private rangeDetailViews: Map<string, TimelineTreeView>;\n  private model!: PerformanceModel;\n  #selectedEvents?: TraceEngine.Types.TraceEvents.TraceEventData[]|null;\n  private lazyPaintProfilerView?: TimelinePaintProfilerView|null;\n  private lazyLayersView?: TimelineLayersView|null;\n  private preferredTabId?: string;\n  private selection?: TimelineSelection|null;\n  private updateContentsScheduled: boolean;\n  #traceEngineData: TraceEngine.Handlers.Types.TraceParseData|null = null;\n  #filmStrip: TraceEngine.Extras.FilmStrip.Data|null = null;\n  #onTraceBoundsChangeBound = this.#onTraceBoundsChange.bind(this);\n\n  constructor(delegate: TimelineModeViewDelegate) {\n    super();\n    this.element.classList.add('timeline-details');\n\n    this.detailsLinkifier = new Components.Linkifier.Linkifier();\n\n    this.tabbedPane = new UI.TabbedPane.TabbedPane();\n    this.tabbedPane.show(this.element);\n\n    this.defaultDetailsWidget = new UI.Widget.VBox();\n    this.defaultDetailsWidget.element.classList.add('timeline-details-view');\n    this.defaultDetailsContentElement =\n        this.defaultDetailsWidget.element.createChild('div', 'timeline-details-view-body vbox');\n    this.appendTab(Tab.Details, i18nString(UIStrings.summary), this.defaultDetailsWidget);\n    this.setPreferredTab(Tab.Details);\n\n    this.rangeDetailViews = new Map();\n    this.updateContentsScheduled = false;\n\n    const bottomUpView = new BottomUpTimelineTreeView();\n    this.appendTab(Tab.BottomUp, i18nString(UIStrings.bottomup), bottomUpView);\n    this.rangeDetailViews.set(Tab.BottomUp, bottomUpView);\n\n    const callTreeView = new CallTreeTimelineTreeView();\n    this.appendTab(Tab.CallTree, i18nString(UIStrings.callTree), callTreeView);\n    this.rangeDetailViews.set(Tab.CallTree, callTreeView);\n\n    const eventsView = new EventsTimelineTreeView(delegate);\n    this.appendTab(Tab.EventLog, i18nString(UIStrings.eventLog), eventsView);\n    this.rangeDetailViews.set(Tab.EventLog, eventsView);\n\n    this.tabbedPane.addEventListener(UI.TabbedPane.Events.TabSelected, this.tabSelected, this);\n\n    TraceBounds.TraceBounds.onChange(this.#onTraceBoundsChangeBound);\n  }\n\n  getDetailsContentElementForTest(): HTMLElement {\n    return this.defaultDetailsContentElement;\n  }\n\n  #onTraceBoundsChange(event: TraceBounds.TraceBounds.StateChangedEvent): void {\n    if (event.updateType === 'RESET' || event.updateType === 'VISIBLE_WINDOW') {\n      // If the update type was a changing of the minimap bounds, we do not\n      // need to redraw.\n      if (!this.selection) {\n        this.scheduleUpdateContentsFromWindow();\n      }\n    }\n  }\n\n  async setModel(\n      model: PerformanceModel|null, traceEngineData: TraceEngine.Handlers.Types.TraceParseData|null,\n      selectedEvents: TraceEngine.Types.TraceEvents.TraceEventData[]|null): Promise<void> {\n    if (this.model !== model) {\n      this.model = (model as PerformanceModel);\n    }\n    this.#traceEngineData = traceEngineData;\n    if (traceEngineData) {\n      this.#filmStrip = TraceEngine.Extras.FilmStrip.fromTraceData(traceEngineData);\n    }\n    this.#selectedEvents = selectedEvents;\n    this.tabbedPane.closeTabs([Tab.PaintProfiler, Tab.LayerViewer], false);\n    for (const view of this.rangeDetailViews.values()) {\n      view.setModelWithEvents(model, selectedEvents, traceEngineData);\n    }\n    this.lazyPaintProfilerView = null;\n    this.lazyLayersView = null;\n    await this.setSelection(null);\n  }\n\n  private setContent(node: Node): void {\n    const allTabs = this.tabbedPane.otherTabs(Tab.Details);\n    for (let i = 0; i < allTabs.length; ++i) {\n      if (!this.rangeDetailViews.has(allTabs[i])) {\n        this.tabbedPane.closeTab(allTabs[i]);\n      }\n    }\n    this.defaultDetailsContentElement.removeChildren();\n    this.defaultDetailsContentElement.appendChild(node);\n  }\n\n  private updateContents(): void {\n    const view = this.rangeDetailViews.get(this.tabbedPane.selectedTabId || '');\n    if (view) {\n      const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n      if (!traceBoundsState) {\n        return;\n      }\n      const visibleWindow = traceBoundsState.milli.timelineTraceWindow;\n      view.updateContents(this.selection || TimelineSelection.fromRange(visibleWindow.min, visibleWindow.max));\n    }\n  }\n\n  private appendTab(id: string, tabTitle: string, view: UI.Widget.Widget, isCloseable?: boolean): void {\n    this.tabbedPane.appendTab(id, tabTitle, view, undefined, undefined, isCloseable);\n    if (this.preferredTabId !== this.tabbedPane.selectedTabId) {\n      this.tabbedPane.selectTab(id);\n    }\n  }\n\n  headerElement(): Element {\n    return this.tabbedPane.headerElement();\n  }\n\n  setPreferredTab(tabId: string): void {\n    this.preferredTabId = tabId;\n  }\n\n  /**\n   * This forces a recalculation and rerendering of the timings\n   * breakdown of a track.\n   * User actions like zooming or scrolling can trigger many updates in\n   * short time windows, so we debounce the calls in those cases. Single\n   * sporadic calls (like selecting a new track) don't need to be\n   * debounced. The forceImmediateUpdate param configures the debouncing\n   * behaviour.\n   */\n  private scheduleUpdateContentsFromWindow(forceImmediateUpdate: boolean = false): void {\n    if (!this.model) {\n      this.setContent(UI.Fragment.html`<div/>`);\n      return;\n    }\n    if (forceImmediateUpdate) {\n      this.updateContentsFromWindow();\n      return;\n    }\n\n    // Debounce this update as it's not critical.\n    if (!this.updateContentsScheduled) {\n      this.updateContentsScheduled = true;\n      setTimeout(() => {\n        this.updateContentsScheduled = false;\n        this.updateContentsFromWindow();\n      }, 100);\n    }\n  }\n\n  private updateContentsFromWindow(): void {\n    const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n    if (!traceBoundsState) {\n      return;\n    }\n    const visibleWindow = traceBoundsState.milli.timelineTraceWindow;\n    this.updateSelectedRangeStats(visibleWindow.min, visibleWindow.max);\n    this.updateContents();\n  }\n\n  #getFilmStripFrame(frame: TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame): TraceEngine.Extras.FilmStrip.Frame\n      |null {\n    if (!this.#filmStrip) {\n      return null;\n    }\n    const screenshotTime = (frame.idle ? frame.startTime : frame.endTime);\n    const filmStripFrame = TraceEngine.Extras.FilmStrip.frameClosestToTimestamp(this.#filmStrip, screenshotTime);\n    if (!filmStripFrame) {\n      return null;\n    }\n    const frameTimeMilliSeconds =\n        TraceEngine.Helpers.Timing.microSecondsToMilliseconds(filmStripFrame.screenshotEvent.ts);\n    return frameTimeMilliSeconds - frame.endTime < 10 ? filmStripFrame : null;\n  }\n\n  async setSelection(selection: TimelineSelection|null): Promise<void> {\n    this.detailsLinkifier.reset();\n    this.selection = selection;\n    if (!this.selection) {\n      // Update instantly using forceImmediateUpdate, since we are only\n      // making a single call and don't need to debounce.\n      this.scheduleUpdateContentsFromWindow(/* forceImmediateUpdate */ true);\n      return;\n    }\n    const selectionObject = this.selection.object;\n    if (TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selectionObject)) {\n      const event = selectionObject;\n      const networkDetails = await TimelineUIUtils.buildSyntheticNetworkRequestDetails(\n          event, this.model.timelineModel(), this.detailsLinkifier);\n      this.setContent(networkDetails);\n    } else if (TimelineSelection.isTraceEventSelection(selectionObject)) {\n      const event = selectionObject;\n      const traceEventDetails = await TimelineUIUtils.buildTraceEventDetails(\n          event, this.model.timelineModel(), this.detailsLinkifier, true, this.#traceEngineData);\n      this.appendDetailsTabsForTraceEventAndShowDetails(event, traceEventDetails);\n    } else if (TimelineSelection.isFrameObject(selectionObject)) {\n      const frame = selectionObject;\n      const matchedFilmStripFrame = this.#getFilmStripFrame(frame);\n      this.setContent(TimelineUIUtils.generateDetailsContentForFrame(frame, this.#filmStrip, matchedFilmStripFrame));\n      const target = SDK.TargetManager.TargetManager.instance().rootTarget();\n      if (frame.layerTree && target) {\n        const layerTreeForFrame = new TimelineModel.TracingLayerTree.TracingFrameLayerTree(target, frame.layerTree);\n        const layersView = this.layersView();\n        layersView.showLayerTree(layerTreeForFrame);\n        if (!this.tabbedPane.hasTab(Tab.LayerViewer)) {\n          this.appendTab(Tab.LayerViewer, i18nString(UIStrings.layers), layersView);\n        }\n      }\n    } else if (TimelineSelection.isRangeSelection(selectionObject)) {\n      this.updateSelectedRangeStats(this.selection.startTime, this.selection.endTime);\n    }\n\n    this.updateContents();\n  }\n\n  private tabSelected(event: Common.EventTarget.EventTargetEvent<UI.TabbedPane.EventData>): void {\n    if (!event.data.isUserGesture) {\n      return;\n    }\n    this.setPreferredTab(event.data.tabId);\n    this.updateContents();\n  }\n\n  private layersView(): TimelineLayersView {\n    if (this.lazyLayersView) {\n      return this.lazyLayersView;\n    }\n    this.lazyLayersView =\n        new TimelineLayersView(this.model.timelineModel(), this.showSnapshotInPaintProfiler.bind(this));\n    return this.lazyLayersView;\n  }\n\n  private paintProfilerView(): TimelinePaintProfilerView|null {\n    if (this.lazyPaintProfilerView) {\n      return this.lazyPaintProfilerView;\n    }\n    if (!this.#traceEngineData) {\n      return null;\n    }\n    this.lazyPaintProfilerView = new TimelinePaintProfilerView(this.#traceEngineData);\n    return this.lazyPaintProfilerView;\n  }\n\n  private showSnapshotInPaintProfiler(snapshot: SDK.PaintProfiler.PaintProfilerSnapshot): void {\n    const paintProfilerView = this.paintProfilerView();\n    if (!paintProfilerView) {\n      return;\n    }\n    paintProfilerView.setSnapshot(snapshot);\n    if (!this.tabbedPane.hasTab(Tab.PaintProfiler)) {\n      this.appendTab(Tab.PaintProfiler, i18nString(UIStrings.paintProfiler), paintProfilerView, true);\n    }\n    this.tabbedPane.selectTab(Tab.PaintProfiler, true);\n  }\n\n  private appendDetailsTabsForTraceEventAndShowDetails(event: TraceEngine.Legacy.CompatibleTraceEvent, content: Node):\n      void {\n    this.setContent(content);\n    // TODO: once the legacy engine types are fully removed, this conditional\n    // can be removed.\n    if (TraceEngine.Legacy.eventIsFromNewEngine(event)) {\n      if (TraceEngine.Types.TraceEvents.isTraceEventPaint(event) ||\n          TraceEngine.Types.TraceEvents.isTraceEventRasterTask(event)) {\n        this.showEventInPaintProfiler(event);\n      }\n    }\n  }\n\n  private showEventInPaintProfiler(event: TraceEngine.Types.TraceEvents.TraceEventData): void {\n    const paintProfilerModel =\n        SDK.TargetManager.TargetManager.instance().models(SDK.PaintProfiler.PaintProfilerModel)[0];\n    if (!paintProfilerModel) {\n      return;\n    }\n    const paintProfilerView = this.paintProfilerView();\n    if (!paintProfilerView) {\n      return;\n    }\n    const hasProfileData = paintProfilerView.setEvent(paintProfilerModel, event);\n    if (!hasProfileData) {\n      return;\n    }\n    if (this.tabbedPane.hasTab(Tab.PaintProfiler)) {\n      return;\n    }\n    this.appendTab(Tab.PaintProfiler, i18nString(UIStrings.paintProfiler), paintProfilerView);\n  }\n\n  private updateSelectedRangeStats(startTime: number, endTime: number): void {\n    if (!this.model || !this.#selectedEvents) {\n      return;\n    }\n    const aggregatedStats = TimelineUIUtils.statsForTimeRange(this.#selectedEvents, startTime, endTime);\n    const startOffset = startTime - this.model.timelineModel().minimumRecordTime();\n    const endOffset = endTime - this.model.timelineModel().minimumRecordTime();\n\n    const contentHelper = new TimelineDetailsContentHelper(null, null);\n    contentHelper.addSection(i18nString(\n        UIStrings.rangeSS,\n        {PH1: i18n.TimeUtilities.millisToString(startOffset), PH2: i18n.TimeUtilities.millisToString(endOffset)}));\n    const pieChart = TimelineUIUtils.generatePieChart(aggregatedStats);\n    contentHelper.appendElementRow('', pieChart);\n    this.setContent(contentHelper.fragment);\n  }\n}\n\nexport enum Tab {\n  Details = 'Details',\n  EventLog = 'EventLog',\n  CallTree = 'CallTree',\n  BottomUp = 'BottomUp',\n  PaintProfiler = 'PaintProfiler',\n  LayerViewer = 'LayerViewer',\n}\n"]}