{"version":3,"file":"TimelineDetailsView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineDetailsView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as TimelineComponents from './components/components.js';\nimport {EventsTimelineTreeView} from './EventsTimelineTreeView.js';\nimport {Tracker} from './FreshRecording.js';\nimport {targetForEvent} from './TargetForEvent.js';\nimport {ThirdPartyTreeViewWidget} from './ThirdPartyTreeView.js';\nimport {TimelineLayersView} from './TimelineLayersView.js';\nimport {TimelinePaintProfilerView} from './TimelinePaintProfilerView.js';\nimport type {TimelineModeViewDelegate} from './TimelinePanel.js';\nimport {\n  selectionFromRangeMilliSeconds,\n  selectionIsEvent,\n  selectionIsRange,\n  type TimelineSelection,\n} from './TimelineSelection.js';\nimport {TimelineSelectorStatsView} from './TimelineSelectorStatsView.js';\nimport {\n  AggregatedTimelineTreeView,\n  BottomUpTimelineTreeView,\n  CallTreeTimelineTreeView,\n  TimelineStackView,\n  TimelineTreeView\n} from './TimelineTreeView.js';\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\nimport {TracingFrameLayerTree} from './TracingLayerTree.js';\nimport * as Utils from './utils/utils.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for the summary view\n   */\n  summary: 'Summary',\n  /**\n   *@description Text in Timeline Details View of the Performance panel\n   */\n  bottomup: 'Bottom-up',\n  /**\n   *@description Text in Timeline Details View of the Performance panel\n   */\n  callTree: 'Call tree',\n  /**\n   *@description Text in Timeline Details View of the Performance panel\n   */\n  eventLog: 'Event log',\n  /**\n   *@description Title of the paint profiler, old name of the performance pane\n   */\n  paintProfiler: 'Paint profiler',\n  /**\n   *@description Title of the Layers tool\n   */\n  layers: 'Layers',\n  /**\n   *@description Title of the selector stats tab\n   */\n  selectorStats: 'Selector stats',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineDetailsPane extends\n    Common.ObjectWrapper.eventMixin<TimelineTreeView.EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox) {\n  private readonly detailsLinkifier: Components.Linkifier.Linkifier;\n  private tabbedPane: UI.TabbedPane.TabbedPane;\n  private readonly defaultDetailsWidget: UI.Widget.VBox;\n  private defaultDetailsContentWidget: UI.Widget.VBox;\n  private rangeDetailViews: Map<string, TimelineTreeView>;\n  #selectedEvents?: Trace.Types.Events.Event[]|null;\n  private lazyPaintProfilerView?: TimelinePaintProfilerView|null;\n  private lazyLayersView?: TimelineLayersView|null;\n  private preferredTabId?: string;\n  private selection?: TimelineSelection|null;\n  private updateContentsScheduled: boolean;\n  private lazySelectorStatsView: TimelineSelectorStatsView|null;\n  #parsedTrace: Trace.Handlers.Types.ParsedTrace|null = null;\n  #traceInsightsSets: Trace.Insights.Types.TraceInsightSets|null = null;\n\n  #eventToRelatedInsightsMap: TimelineComponents.RelatedInsightChips.EventToRelatedInsightsMap|null = null;\n  #filmStrip: Trace.Extras.FilmStrip.Data|null = null;\n  #networkRequestDetails: TimelineComponents.NetworkRequestDetails.NetworkRequestDetails;\n  #layoutShiftDetails: TimelineComponents.LayoutShiftDetails.LayoutShiftDetails;\n  #onTraceBoundsChangeBound = this.#onTraceBoundsChange.bind(this);\n  #relatedInsightChips = new TimelineComponents.RelatedInsightChips.RelatedInsightChips();\n  #thirdPartyTree = new ThirdPartyTreeViewWidget();\n  #entityMapper: Utils.EntityMapper.EntityMapper|null = null;\n\n  constructor(delegate: TimelineModeViewDelegate) {\n    super();\n    this.element.classList.add('timeline-details');\n\n    this.detailsLinkifier = new Components.Linkifier.Linkifier();\n\n    this.tabbedPane = new UI.TabbedPane.TabbedPane();\n    this.tabbedPane.show(this.element);\n    this.tabbedPane.headerElement().setAttribute(\n        'jslog',\n        `${VisualLogging.toolbar('sidebar').track({keydown: 'ArrowUp|ArrowLeft|ArrowDown|ArrowRight|Enter|Space'})}`);\n\n    this.defaultDetailsWidget = new UI.Widget.VBox();\n    this.defaultDetailsWidget.element.classList.add('timeline-details-view');\n    this.defaultDetailsWidget.element.setAttribute('jslog', `${VisualLogging.pane('details').track({resize: true})}`);\n    this.defaultDetailsContentWidget = this.#createContentWidget();\n    this.appendTab(Tab.Details, i18nString(UIStrings.summary), this.defaultDetailsWidget);\n    this.setPreferredTab(Tab.Details);\n\n    this.rangeDetailViews = new Map();\n    this.updateContentsScheduled = false;\n\n    const bottomUpView = new BottomUpTimelineTreeView();\n    this.appendTab(Tab.BottomUp, i18nString(UIStrings.bottomup), bottomUpView);\n    this.rangeDetailViews.set(Tab.BottomUp, bottomUpView);\n\n    const callTreeView = new CallTreeTimelineTreeView();\n    this.appendTab(Tab.CallTree, i18nString(UIStrings.callTree), callTreeView);\n    this.rangeDetailViews.set(Tab.CallTree, callTreeView);\n\n    const eventsView = new EventsTimelineTreeView(delegate);\n    this.appendTab(Tab.EventLog, i18nString(UIStrings.eventLog), eventsView);\n    this.rangeDetailViews.set(Tab.EventLog, eventsView);\n\n    // Listeners for hover dimming\n    this.rangeDetailViews.values().forEach(view => {\n      view.addEventListener(\n          TimelineTreeView.Events.TREE_ROW_HOVERED,\n          node => this.dispatchEventToListeners(TimelineTreeView.Events.TREE_ROW_HOVERED, node.data));\n\n      view.addEventListener(TimelineTreeView.Events.TREE_ROW_CLICKED, node => {\n        // Re-dispatch to reach the tree row dimmer.\n        this.dispatchEventToListeners(TimelineTreeView.Events.TREE_ROW_CLICKED, node.data);\n      });\n\n      // If there's a heaviest stack sidebar view, also listen to hover within it.\n      if (view instanceof AggregatedTimelineTreeView) {\n        view.stackView.addEventListener(\n            TimelineStackView.Events.TREE_ROW_HOVERED,\n            node => this.dispatchEventToListeners(TimelineTreeView.Events.TREE_ROW_HOVERED, node.data));\n      }\n    });\n    this.#thirdPartyTree.addEventListener(TimelineTreeView.Events.TREE_ROW_HOVERED, node => {\n      // Re-dispatch through 3P event to get 3P dimmer.\n      this.dispatchEventToListeners(TimelineTreeView.Events.TREE_ROW_HOVERED, node.data);\n    });\n\n    this.#thirdPartyTree.addEventListener(TimelineTreeView.Events.BOTTOM_UP_BUTTON_CLICKED, node => {\n      this.selectTab(Tab.BottomUp, node.data, AggregatedTimelineTreeView.GroupBy.ThirdParties);\n    });\n    this.#thirdPartyTree.addEventListener(TimelineTreeView.Events.TREE_ROW_CLICKED, node => {\n      // Re-dispatch through 3P event to get 3P dimmer.\n      this.dispatchEventToListeners(TimelineTreeView.Events.TREE_ROW_CLICKED, node.data);\n    });\n\n    this.#networkRequestDetails =\n        new TimelineComponents.NetworkRequestDetails.NetworkRequestDetails(this.detailsLinkifier);\n\n    this.#layoutShiftDetails = new TimelineComponents.LayoutShiftDetails.LayoutShiftDetails();\n\n    this.tabbedPane.addEventListener(UI.TabbedPane.Events.TabSelected, this.tabSelected, this);\n\n    TraceBounds.TraceBounds.onChange(this.#onTraceBoundsChangeBound);\n\n    this.lazySelectorStatsView = null;\n  }\n\n  /**\n   * This selects a given tabbedPane tab.\n   * Additionally, if provided a node, we open that node and\n   * if a groupBySetting is included, we groupBy.\n   */\n  selectTab(tabName: Tab, node: Trace.Extras.TraceTree.Node|null, groupBySetting?: AggregatedTimelineTreeView.GroupBy):\n      void {\n    this.tabbedPane.selectTab(tabName, true, true);\n    /**\n     * For a11y, ensure that the header is focused.\n     */\n    this.tabbedPane.focusSelectedTabHeader();\n\n    // We currently only support selecting Details and BottomUp via the 3P insight.\n    switch (tabName) {\n      case Tab.CallTree:\n      case Tab.EventLog:\n      case Tab.PaintProfiler:\n      case Tab.LayerViewer:\n      case Tab.SelectorStats: {\n        break;\n      }\n      case Tab.Details: {\n        this.updateContentsFromWindow();\n        break;\n      }\n      case Tab.BottomUp: {\n        if (!(this.tabbedPane.visibleView instanceof BottomUpTimelineTreeView)) {\n          return;\n        }\n        // Set grouping if necessary.\n        const bottomUp = this.tabbedPane.visibleView;\n        if (groupBySetting) {\n          bottomUp.setGroupBySetting(groupBySetting);\n          bottomUp.refreshTree();\n        }\n\n        if (!node) {\n          return;\n        }\n\n        // Look for the matching node in the bottom up tree using selected node event data.\n        const treeNode = bottomUp.eventToTreeNode.get(node.event);\n        if (!treeNode) {\n          return;\n        }\n        bottomUp.selectProfileNode(treeNode, true);\n        // Reveal/expand the bottom up tree grid node.\n        const gridNode = bottomUp.dataGridNodeForTreeNode(treeNode);\n        if (gridNode) {\n          gridNode.expand();\n        }\n        break;\n      }\n      default: {\n        Platform.assertNever(tabName, `Unknown Tab: ${tabName}. Add new case to switch.`);\n      }\n    }\n  }\n\n  #createContentWidget(): UI.Widget.VBox {\n    const defaultDetailsContentWidget = new UI.Widget.VBox();\n    defaultDetailsContentWidget.element.classList.add('timeline-details-view-body');\n    defaultDetailsContentWidget.show(this.defaultDetailsWidget.element);\n    return defaultDetailsContentWidget;\n  }\n\n  private selectorStatsView(): TimelineSelectorStatsView {\n    if (this.lazySelectorStatsView) {\n      return this.lazySelectorStatsView;\n    }\n\n    this.lazySelectorStatsView = new TimelineSelectorStatsView(\n        this.#parsedTrace,\n    );\n    return this.lazySelectorStatsView;\n  }\n\n  getDetailsContentElementForTest(): HTMLElement {\n    return this.defaultDetailsContentWidget.element;\n  }\n\n  revealEventInTreeView(event: Trace.Types.Events.Event|null): void {\n    if (this.tabbedPane.visibleView instanceof TimelineTreeView) {\n      this.tabbedPane.visibleView.highlightEventInTree(event);\n    }\n  }\n\n  async #onTraceBoundsChange(event: TraceBounds.TraceBounds.StateChangedEvent): Promise<void> {\n    if (event.updateType === 'MINIMAP_BOUNDS') {\n      // If new minimap bounds are set, we might need to update the selected entry summary because\n      // the links to other entries (ex. initiator) might be outside of the new breadcrumb.\n      if (this.selection) {\n        await this.setSelection(this.selection);\n      }\n    }\n\n    if (event.updateType === 'RESET' || event.updateType === 'VISIBLE_WINDOW') {\n      // If the update type was a changing of the minimap bounds, we do not\n      // need to redraw.\n      if (!this.selection) {\n        this.scheduleUpdateContentsFromWindow();\n      }\n    }\n  }\n\n  async setModel(data: {\n    parsedTrace: Trace.Handlers.Types.ParsedTrace|null,\n    selectedEvents: Trace.Types.Events.Event[]|null,\n    traceInsightsSets: Trace.Insights.Types.TraceInsightSets|null,\n    eventToRelatedInsightsMap: TimelineComponents.RelatedInsightChips.EventToRelatedInsightsMap|null,\n    entityMapper: Utils.EntityMapper.EntityMapper|null,\n  }): Promise<void> {\n    if (this.#parsedTrace !== data.parsedTrace) {\n      // Clear the selector stats view, so the next time the user views it we\n      // reconstruct it with the new trace data.\n      this.lazySelectorStatsView = null;\n\n      this.#parsedTrace = data.parsedTrace;\n    }\n    if (data.parsedTrace) {\n      this.#filmStrip = Trace.Extras.FilmStrip.fromParsedTrace(data.parsedTrace);\n      this.#entityMapper = new Utils.EntityMapper.EntityMapper(data.parsedTrace);\n    }\n    this.#selectedEvents = data.selectedEvents;\n    this.#traceInsightsSets = data.traceInsightsSets;\n    this.#eventToRelatedInsightsMap = data.eventToRelatedInsightsMap;\n    if (data.eventToRelatedInsightsMap) {\n      this.#relatedInsightChips.eventToRelatedInsightsMap = data.eventToRelatedInsightsMap;\n    }\n    this.tabbedPane.closeTabs([Tab.PaintProfiler, Tab.LayerViewer], false);\n    for (const view of this.rangeDetailViews.values()) {\n      view.setModelWithEvents(data.selectedEvents, data.parsedTrace, data.entityMapper);\n    }\n    // Set the 3p tree model.\n    this.#thirdPartyTree.setModelWithEvents(data.selectedEvents, data.parsedTrace, data.entityMapper);\n    this.lazyPaintProfilerView = null;\n    this.lazyLayersView = null;\n    await this.setSelection(null);\n  }\n\n  private setSummaryContent(node: Node): void {\n    const allTabs = this.tabbedPane.otherTabs(Tab.Details);\n    for (let i = 0; i < allTabs.length; ++i) {\n      if (!this.rangeDetailViews.has(allTabs[i])) {\n        this.tabbedPane.closeTab(allTabs[i]);\n      }\n    }\n\n    // Append relatedChips inside of the node being shown.\n    const chipParent = (node instanceof Element && node.shadowRoot || node);\n    chipParent.appendChild(this.#relatedInsightChips);\n\n    this.defaultDetailsContentWidget.detach();\n    this.defaultDetailsContentWidget = this.#createContentWidget();\n    this.defaultDetailsContentWidget.contentElement.append(node);\n  }\n\n  private updateContents(): void {\n    const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n    if (!traceBoundsState) {\n      return;\n    }\n    const visibleWindow = traceBoundsState.milli.timelineTraceWindow;\n    // Update the view that we currently have selected.\n    const view = this.rangeDetailViews.get(this.tabbedPane.selectedTabId || '');\n    if (view) {\n      view.updateContents(this.selection || selectionFromRangeMilliSeconds(visibleWindow.min, visibleWindow.max));\n    }\n  }\n\n  private appendTab(id: string, tabTitle: string, view: UI.Widget.Widget, isCloseable?: boolean): void {\n    this.tabbedPane.appendTab(id, tabTitle, view, undefined, undefined, isCloseable);\n    if (this.preferredTabId !== this.tabbedPane.selectedTabId) {\n      this.tabbedPane.selectTab(id);\n    }\n  }\n\n  headerElement(): Element {\n    return this.tabbedPane.headerElement();\n  }\n\n  setPreferredTab(tabId: string): void {\n    this.preferredTabId = tabId;\n  }\n\n  /**\n   * This forces a recalculation and rerendering of the timings\n   * breakdown of a track.\n   * User actions like zooming or scrolling can trigger many updates in\n   * short time windows, so we debounce the calls in those cases. Single\n   * sporadic calls (like selecting a new track) don't need to be\n   * debounced. The forceImmediateUpdate param configures the debouncing\n   * behaviour.\n   */\n  private scheduleUpdateContentsFromWindow(forceImmediateUpdate = false): void {\n    if (!this.#parsedTrace) {\n      this.setSummaryContent(UI.Fragment.html`<div/>`);\n      return;\n    }\n    if (forceImmediateUpdate) {\n      this.updateContentsFromWindow();\n      return;\n    }\n\n    // Debounce this update as it's not critical.\n    if (!this.updateContentsScheduled) {\n      this.updateContentsScheduled = true;\n      setTimeout(() => {\n        this.updateContentsScheduled = false;\n        this.updateContentsFromWindow();\n      }, 100);\n    }\n  }\n\n  private updateContentsFromWindow(): void {\n    const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n    if (!traceBoundsState) {\n      return;\n    }\n    const visibleWindow = traceBoundsState.milli.timelineTraceWindow;\n    this.updateSelectedRangeStats(visibleWindow.min, visibleWindow.max);\n    this.updateContents();\n  }\n\n  #getFilmStripFrame(frame: Trace.Types.Events.LegacyTimelineFrame): Trace.Extras.FilmStrip.Frame|null {\n    if (!this.#filmStrip) {\n      return null;\n    }\n    const screenshotTime = (frame.idle ? frame.startTime : frame.endTime);\n    const filmStripFrame = Trace.Extras.FilmStrip.frameClosestToTimestamp(this.#filmStrip, screenshotTime);\n    if (!filmStripFrame) {\n      return null;\n    }\n    const frameTimeMilliSeconds = Trace.Helpers.Timing.microToMilli(filmStripFrame.screenshotEvent.ts);\n    return frameTimeMilliSeconds - frame.endTime < 10 ? filmStripFrame : null;\n  }\n\n  #setSelectionForTimelineFrame(frame: Trace.Types.Events.LegacyTimelineFrame): void {\n    const matchedFilmStripFrame = this.#getFilmStripFrame(frame);\n    this.setSummaryContent(\n        TimelineUIUtils.generateDetailsContentForFrame(frame, this.#filmStrip, matchedFilmStripFrame));\n    const target = SDK.TargetManager.TargetManager.instance().rootTarget();\n    if (frame.layerTree && target) {\n      const layerTreeForFrame = new TracingFrameLayerTree(target, frame.layerTree);\n      const layersView = this.layersView();\n      layersView.showLayerTree(layerTreeForFrame);\n      if (!this.tabbedPane.hasTab(Tab.LayerViewer)) {\n        this.appendTab(Tab.LayerViewer, i18nString(UIStrings.layers), layersView);\n      }\n    }\n  }\n\n  async #setSelectionForNetworkEvent(networkRequest: Trace.Types.Events.SyntheticNetworkRequest): Promise<void> {\n    if (!this.#parsedTrace) {\n      return;\n    }\n    const maybeTarget = targetForEvent(this.#parsedTrace, networkRequest);\n    await this.#networkRequestDetails.setData(this.#parsedTrace, networkRequest, maybeTarget, this.#entityMapper);\n    this.#relatedInsightChips.activeEvent = networkRequest;\n    if (this.#eventToRelatedInsightsMap) {\n      this.#relatedInsightChips.eventToRelatedInsightsMap = this.#eventToRelatedInsightsMap;\n    }\n\n    this.setSummaryContent(this.#networkRequestDetails);\n  }\n\n  async #setSelectionForTraceEvent(event: Trace.Types.Events.Event): Promise<void> {\n    if (!this.#parsedTrace) {\n      return;\n    }\n\n    this.#relatedInsightChips.activeEvent = event;\n    if (this.#eventToRelatedInsightsMap) {\n      this.#relatedInsightChips.eventToRelatedInsightsMap = this.#eventToRelatedInsightsMap;\n    }\n\n    // Special case: if the user selects a layout shift or a layout shift cluster,\n    // render the new layout shift details component.\n    if (Trace.Types.Events.isSyntheticLayoutShift(event) || Trace.Types.Events.isSyntheticLayoutShiftCluster(event)) {\n      const isFreshRecording = Boolean(this.#parsedTrace && Tracker.instance().recordingIsFresh(this.#parsedTrace));\n      this.#layoutShiftDetails.setData(event, this.#traceInsightsSets, this.#parsedTrace, isFreshRecording);\n      this.setSummaryContent(this.#layoutShiftDetails);\n      return;\n    }\n\n    // Otherwise, build the generic trace event details UI.\n    const traceEventDetails = await TimelineUIUtils.buildTraceEventDetails(\n        this.#parsedTrace, event, this.detailsLinkifier, true, this.#entityMapper);\n    this.appendDetailsTabsForTraceEventAndShowDetails(event, traceEventDetails);\n  }\n\n  async setSelection(selection: TimelineSelection|null): Promise<void> {\n    if (!this.#parsedTrace) {\n      // You can't make a selection if we have no trace data.\n      return;\n    }\n    this.detailsLinkifier.reset();\n    this.selection = selection;\n    this.#relatedInsightChips.activeEvent = null;\n    if (!this.selection) {\n      // Update instantly using forceImmediateUpdate, since we are only\n      // making a single call and don't need to debounce.\n      this.scheduleUpdateContentsFromWindow(/* forceImmediateUpdate */ true);\n      return;\n    }\n\n    if (selectionIsEvent(selection)) {\n      if (Trace.Types.Events.isSyntheticNetworkRequest(selection.event)) {\n        await this.#setSelectionForNetworkEvent(selection.event);\n      } else if (Trace.Types.Events.isLegacyTimelineFrame(selection.event)) {\n        this.#setSelectionForTimelineFrame(selection.event);\n      } else {\n        await this.#setSelectionForTraceEvent(selection.event);\n      }\n    } else if (selectionIsRange(selection)) {\n      const timings = Trace.Helpers.Timing.traceWindowMicroSecondsToMilliSeconds(selection.bounds);\n      this.updateSelectedRangeStats(timings.min, timings.max);\n    }\n\n    this.updateContents();\n  }\n\n  private tabSelected(event: Common.EventTarget.EventTargetEvent<UI.TabbedPane.EventData>): void {\n    if (!event.data.isUserGesture) {\n      return;\n    }\n    this.setPreferredTab(event.data.tabId);\n    this.updateContents();\n  }\n\n  private layersView(): TimelineLayersView {\n    if (this.lazyLayersView) {\n      return this.lazyLayersView;\n    }\n    this.lazyLayersView = new TimelineLayersView(this.showSnapshotInPaintProfiler.bind(this));\n    return this.lazyLayersView;\n  }\n\n  private paintProfilerView(): TimelinePaintProfilerView|null {\n    if (this.lazyPaintProfilerView) {\n      return this.lazyPaintProfilerView;\n    }\n    if (!this.#parsedTrace) {\n      return null;\n    }\n    this.lazyPaintProfilerView = new TimelinePaintProfilerView(this.#parsedTrace);\n    return this.lazyPaintProfilerView;\n  }\n\n  private showSnapshotInPaintProfiler(snapshot: SDK.PaintProfiler.PaintProfilerSnapshot): void {\n    const paintProfilerView = this.paintProfilerView();\n    if (!paintProfilerView) {\n      return;\n    }\n    paintProfilerView.setSnapshot(snapshot);\n    if (!this.tabbedPane.hasTab(Tab.PaintProfiler)) {\n      this.appendTab(Tab.PaintProfiler, i18nString(UIStrings.paintProfiler), paintProfilerView, true);\n    }\n    this.tabbedPane.selectTab(Tab.PaintProfiler, true);\n  }\n\n  private showSelectorStatsForIndividualEvent(event: Trace.Types.Events.UpdateLayoutTree): void {\n    this.showAggregatedSelectorStats([event]);\n  }\n\n  private showAggregatedSelectorStats(events: Trace.Types.Events.UpdateLayoutTree[]): void {\n    const selectorStatsView = this.selectorStatsView();\n\n    selectorStatsView.setAggregatedEvents(events);\n\n    if (!this.tabbedPane.hasTab(Tab.SelectorStats)) {\n      this.appendTab(Tab.SelectorStats, i18nString(UIStrings.selectorStats), selectorStatsView);\n    }\n  }\n\n  private appendDetailsTabsForTraceEventAndShowDetails(event: Trace.Types.Events.Event, content: Node): void {\n    this.setSummaryContent(content);\n    if (Trace.Types.Events.isPaint(event) || Trace.Types.Events.isRasterTask(event)) {\n      this.showEventInPaintProfiler(event);\n    }\n\n    if (Trace.Types.Events.isUpdateLayoutTree(event)) {\n      this.showSelectorStatsForIndividualEvent(event);\n    }\n  }\n\n  private showEventInPaintProfiler(event: Trace.Types.Events.Event): void {\n    const paintProfilerModel =\n        SDK.TargetManager.TargetManager.instance().models(SDK.PaintProfiler.PaintProfilerModel)[0];\n    if (!paintProfilerModel) {\n      return;\n    }\n    const paintProfilerView = this.paintProfilerView();\n    if (!paintProfilerView) {\n      return;\n    }\n    const hasProfileData = paintProfilerView.setEvent(paintProfilerModel, event);\n    if (!hasProfileData) {\n      return;\n    }\n    if (this.tabbedPane.hasTab(Tab.PaintProfiler)) {\n      return;\n    }\n    this.appendTab(Tab.PaintProfiler, i18nString(UIStrings.paintProfiler), paintProfilerView);\n  }\n\n  private updateSelectedRangeStats(startTime: Trace.Types.Timing.Milli, endTime: Trace.Types.Timing.Milli): void {\n    if (!this.#selectedEvents || !this.#parsedTrace || !this.#entityMapper) {\n      return;\n    }\n\n    const minBoundsMilli = Trace.Helpers.Timing.traceWindowMilliSeconds(this.#parsedTrace.Meta.traceBounds).min;\n    const aggregatedStats = TimelineUIUtils.statsForTimeRange(this.#selectedEvents, startTime, endTime);\n    const startOffset = startTime - minBoundsMilli;\n    const endOffset = endTime - minBoundsMilli;\n    const summaryDetailElem = TimelineUIUtils.generateSummaryDetails(\n        aggregatedStats, startOffset, endOffset, this.#selectedEvents, this.#thirdPartyTree);\n\n    this.#thirdPartyTree.updateContents(this.selection || selectionFromRangeMilliSeconds(startTime, endTime));\n\n    this.setSummaryContent(summaryDetailElem);\n\n    // Find all recalculate style events data from range\n    const isSelectorStatsEnabled =\n        Common.Settings.Settings.instance().createSetting('timeline-capture-selector-stats', false).get();\n    if (this.#selectedEvents && isSelectorStatsEnabled) {\n      const eventsInRange = Trace.Helpers.Trace.findUpdateLayoutTreeEvents(\n          this.#selectedEvents,\n          Trace.Helpers.Timing.milliToMicro(startTime),\n          Trace.Helpers.Timing.milliToMicro(endTime),\n      );\n      if (eventsInRange.length > 0) {\n        this.showAggregatedSelectorStats(eventsInRange);\n      }\n    }\n  }\n}\n\nexport enum Tab {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  Details = 'details',\n  EventLog = 'event-log',\n  CallTree = 'call-tree',\n  BottomUp = 'bottom-up',\n  PaintProfiler = 'paint-profiler',\n  LayerViewer = 'layer-viewer',\n  SelectorStats = 'selector-stats',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n"]}