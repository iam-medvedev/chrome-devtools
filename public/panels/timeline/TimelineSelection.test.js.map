{"version":3,"file":"TimelineSelection.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineSelection.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\n\nimport * as Timeline from './timeline.js';\n\ndescribeWithEnvironment('TimelineSelection', function() {\n  it('can be created with a frame', function() {\n    const frame = new Trace.Handlers.ModelHandlers.Frames.TimelineFrame(\n        /* seqId */ 1, /* startTime */ Trace.Types.Timing.MicroSeconds(1000),\n        /* start offset */ Trace.Types.Timing.MicroSeconds(0));\n    const selection = Timeline.TimelineSelection.TimelineSelection.fromFrame(frame);\n    assert.strictEqual(selection.object, frame);\n    assert.strictEqual(selection.startTime, Trace.Helpers.Timing.microSecondsToMilliseconds(frame.startTime));\n    assert.strictEqual(selection.endTime, Trace.Helpers.Timing.microSecondsToMilliseconds(frame.endTime));\n    assert.isTrue(Timeline.TimelineSelection.TimelineSelection.isLegacyTimelineFrame(selection.object));\n  });\n\n  it('can be created with a network request', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n    const request = parsedTrace.NetworkRequests.byTime[0];\n    const selection = Timeline.TimelineSelection.TimelineSelection.fromTraceEvent(request);\n    assert.strictEqual(selection.object, request);\n    assert.strictEqual(selection.startTime, Trace.Helpers.Timing.microSecondsToMilliseconds(request.ts));\n    assert.strictEqual(\n        selection.endTime,\n        Trace.Helpers.Timing.microSecondsToMilliseconds((request.ts + request.dur) as Trace.Types.Timing.MicroSeconds));\n    assert.isTrue(\n        Timeline.TimelineSelection.TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selection.object));\n  });\n\n  it('can be created with a Trace event', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n    const firstLCPEvent = parsedTrace.PageLoadMetrics.allMarkerEvents.find(event => {\n      return event.name === 'largestContentfulPaint::Candidate';\n    });\n    if (!firstLCPEvent) {\n      throw new Error('Could not find LCP event');\n    }\n    const selection = Timeline.TimelineSelection.TimelineSelection.fromTraceEvent(firstLCPEvent);\n    assert.strictEqual(selection.object, firstLCPEvent);\n    assert.strictEqual(selection.startTime, Trace.Helpers.Timing.eventTimingsMilliSeconds(firstLCPEvent).startTime);\n    assert.strictEqual(selection.endTime, Trace.Helpers.Timing.eventTimingsMilliSeconds(firstLCPEvent).endTime);\n    assert.isTrue(Timeline.TimelineSelection.TimelineSelection.isTraceEventSelection(selection.object));\n  });\n\n  it('can be created with a range', async function() {\n    const selection = Timeline.TimelineSelection.TimelineSelection.fromRange(0, 10);\n    assert.strictEqual(selection.startTime, 0);\n    assert.strictEqual(selection.endTime, 10);\n    assert.isTrue(Timeline.TimelineSelection.TimelineSelection.isRangeSelection(selection.object));\n  });\n});\n"]}