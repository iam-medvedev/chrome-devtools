{"version":3,"file":"Overlays.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/Overlays.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {\n  makeInstantEvent,\n  MockFlameChartDelegate,\n  setupIgnoreListManagerEnvironment,\n} from '../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\n\nimport * as Timeline from './timeline.js';\n\n/**\n * The Overlays expects to be provided with both the main and network charts\n * and data providers. This function creates all of those and optionally sets\n * the trace data for the providers if it is provided.\n */\nfunction createCharts(traceParsedData?: TraceEngine.Handlers.Types.TraceParseData): Timeline.Overlays.TimelineCharts {\n  const mainProvider = new Timeline.TimelineFlameChartDataProvider.TimelineFlameChartDataProvider();\n  const networkProvider = new Timeline.TimelineFlameChartNetworkDataProvider.TimelineFlameChartNetworkDataProvider();\n\n  const delegate = new MockFlameChartDelegate();\n  const mainChart = new PerfUI.FlameChart.FlameChart(mainProvider, delegate);\n  const networkChart = new PerfUI.FlameChart.FlameChart(networkProvider, delegate);\n\n  if (traceParsedData) {\n    mainProvider.setModel(traceParsedData);\n    networkProvider.setModel(traceParsedData);\n\n    // Force the charts to render. Normally the TimelineFlameChartView would do\n    // this, but we aren't creating one for these tests.\n    mainChart.update();\n    networkChart.update();\n  }\n\n  return {\n    mainProvider,\n    mainChart,\n    networkProvider,\n    networkChart,\n  };\n}\n\ndescribeWithEnvironment('Overlays', () => {\n  beforeEach(() => {\n    setupIgnoreListManagerEnvironment();\n  });\n\n  it('can calculate the x position of an event based on the dimensions and its timestamp', async () => {\n    const container = document.createElement('div');\n    const overlays = new Timeline.Overlays.Overlays({\n      container,\n      charts: createCharts(),\n    });\n\n    // Set up the dimensions so it is 100px wide\n    overlays.updateChartDimensions('main', {\n      widthPixels: 100,\n      heightPixels: 50,\n      scrollOffsetPixels: 0,\n    });\n    overlays.updateChartDimensions('network', {\n      widthPixels: 100,\n      heightPixels: 50,\n      scrollOffsetPixels: 0,\n    });\n\n    const windowMin = TraceEngine.Types.Timing.MicroSeconds(0);\n    const windowMax = TraceEngine.Types.Timing.MicroSeconds(100);\n    // Set the visible window to be 0-100 microseconds\n    overlays.updateVisibleWindow(TraceEngine.Helpers.Timing.traceWindowFromMicroSeconds(windowMin, windowMax));\n\n    // Now set an event to be at 50 microseconds.\n    const event = makeInstantEvent('test-event', 50);\n\n    const xPosition = overlays.xPixelForEventOnChart(event);\n    assert.strictEqual(xPosition, 50);\n  });\n\n  it('can calculate the y position of a main chart event', async function() {\n    const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n    const charts = createCharts(traceParsedData);\n\n    const container = document.createElement('div');\n    const overlays = new Timeline.Overlays.Overlays({\n      container,\n      charts,\n    });\n\n    overlays.updateChartDimensions('main', {\n      widthPixels: 1000,\n      heightPixels: 500,\n      scrollOffsetPixels: 0,\n    });\n    overlays.updateChartDimensions('network', {\n      widthPixels: 1000,\n      heightPixels: 200,\n      scrollOffsetPixels: 0,\n    });\n\n    // Set the visible window to be the entire trace.\n    overlays.updateVisibleWindow(traceParsedData.Meta.traceBounds);\n\n    // Find an event on the main chart that is not a frame (you cannot add overlays to frames)\n    const event = charts.mainProvider.eventByIndex(50);\n    assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n    assert.isOk(event);\n    const yPixel = overlays.yPixelForEventOnChart(event);\n    // The Y offset for the main chart is 233px, but we add 208px on (200px for the\n    // network chart, and 8px for the re-size handle) giving us the expected\n    // 441px.\n    assert.strictEqual(yPixel, 441);\n  });\n\n  it('can calculate the y position of a network chart event', async function() {\n    const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n    const charts = createCharts(traceParsedData);\n\n    const container = document.createElement('div');\n    const overlays = new Timeline.Overlays.Overlays({\n      container,\n      charts,\n    });\n\n    overlays.updateChartDimensions('main', {\n      widthPixels: 1000,\n      heightPixels: 500,\n      scrollOffsetPixels: 0,\n    });\n    overlays.updateChartDimensions('network', {\n      widthPixels: 1000,\n      heightPixels: 200,\n      scrollOffsetPixels: 0,\n    });\n\n    // Set the visible window to be the entire trace.\n    overlays.updateVisibleWindow(traceParsedData.Meta.traceBounds);\n\n    // Find an event on the network chart\n    const event = charts.networkProvider.eventByIndex(0);\n    assert.isOk(event);\n    const yPixel = overlays.yPixelForEventOnChart(event);\n    // This event is in the first level, but the first level has some offset\n    // above it to allow for the header row and the row with the timestamps on\n    // it, hence why this value is not 0px.\n    assert.strictEqual(yPixel, 34);\n  });\n\n  describe('rendering overlays', () => {\n    function setupChartWithDimensions(traceParsedData: TraceEngine.Handlers.Types.TraceParseData): {\n      container: HTMLElement,\n      overlays: Timeline.Overlays.Overlays,\n      charts: Timeline.Overlays.TimelineCharts,\n    } {\n      const charts = createCharts(traceParsedData);\n      const container = document.createElement('div');\n      const overlays = new Timeline.Overlays.Overlays({\n        container,\n        charts,\n      });\n\n      overlays.updateChartDimensions('main', {\n        widthPixels: 1000,\n        heightPixels: 500,\n        scrollOffsetPixels: 0,\n      });\n      overlays.updateChartDimensions('network', {\n        widthPixels: 1000,\n        heightPixels: 200,\n        scrollOffsetPixels: 0,\n      });\n\n      // Set the visible window to be the entire trace.\n      overlays.updateVisibleWindow(traceParsedData.Meta.traceBounds);\n      return {overlays, container, charts};\n    }\n\n    it('can render an entry selected overlay', async function() {\n      const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, container, charts} = setupChartWithDimensions(traceParsedData);\n      const event = charts.mainProvider.eventByIndex(50);\n      assert.isOk(event);\n      assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n\n      overlays.addOverlay({\n        type: 'ENTRY_SELECTED',\n        entry: event,\n      });\n      overlays.update();\n\n      // Ensure that the overlay was created.\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-ENTRY_SELECTED');\n      assert.isOk(overlayDOM);\n    });\n\n    it('can render an entry selected overlay for a frame', async function() {\n      const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      const {overlays, container, charts} = setupChartWithDimensions(traceParsedData);\n      const timelineFrame = charts.mainProvider.eventByIndex(5);\n      assert.isOk(timelineFrame);\n      assert.instanceOf(timelineFrame, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n\n      overlays.addOverlay({\n        type: 'ENTRY_SELECTED',\n        entry: timelineFrame,\n      });\n      overlays.update();\n\n      // Ensure that the overlay was created.\n      const overlayDOM = container.querySelector<HTMLElement>('.overlay-type-ENTRY_SELECTED');\n      assert.isOk(overlayDOM);\n    });\n\n    it('can return a list of overlays for an entry', async function() {\n      const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {overlays, charts} = setupChartWithDimensions(traceParsedData);\n      const event = charts.mainProvider.eventByIndex(50);\n      assert.isOk(event);\n      assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n\n      overlays.addOverlay({\n        type: 'ENTRY_SELECTED',\n        entry: event,\n      });\n\n      assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n      const existingOverlays = overlays.overlaysForEntry(event);\n      assert.deepEqual(existingOverlays, [{\n                         type: 'ENTRY_SELECTED',\n                         entry: event,\n                       }]);\n    });\n\n    it('can delete overlays and remove them from the DOM', async function() {\n      const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const {container, overlays, charts} = setupChartWithDimensions(traceParsedData);\n      const event = charts.mainProvider.eventByIndex(50);\n      assert.isOk(event);\n\n      assert.notInstanceOf(event, TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n      overlays.addOverlay({\n        type: 'ENTRY_SELECTED',\n        entry: event,\n      });\n      overlays.update();\n\n      assert.lengthOf(container.children, 1);\n      overlays.removeOverlaysOfType('ENTRY_SELECTED');\n      assert.lengthOf(container.children, 0);\n    });\n  });\n});\n"]}