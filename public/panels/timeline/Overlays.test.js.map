{"version":3,"file":"Overlays.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/Overlays.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,WAAW,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EAAC,gBAAgB,EAAC,MAAM,+BAA+B,CAAC;AAE/D,OAAO,KAAK,QAAQ,MAAM,eAAe,CAAC;AAE1C,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,EAAE,CAAC,oFAAoF,EAAE,KAAK,IAAI,EAAE;QAClG,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,SAAS,EAAC,CAAC,CAAC;QAE7D,4CAA4C;QAC5C,QAAQ,CAAC,qBAAqB,CAAC,MAAM,EAAE;YACrC,WAAW,EAAE,GAAG;YAChB,YAAY,EAAE,EAAE;YAChB,kBAAkB,EAAE,CAAC;SACtB,CAAC,CAAC;QACH,QAAQ,CAAC,qBAAqB,CAAC,SAAS,EAAE;YACxC,WAAW,EAAE,GAAG;YAChB,YAAY,EAAE,EAAE;YAChB,kBAAkB,EAAE,CAAC;SACtB,CAAC,CAAC;QAEH,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAC7D,kDAAkD;QAClD,QAAQ,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,2BAA2B,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;QAE3G,6CAA6C;QAC7C,MAAM,KAAK,GAAG,gBAAgB,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QAEjD,MAAM,SAAS,GAAG,QAAQ,CAAC,qBAAqB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAChE,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport {makeInstantEvent} from '../../testing/TraceHelpers.js';\n\nimport * as Timeline from './timeline.js';\n\ndescribe('Overlays', () => {\n  it('can calculate the x position of an event based on the dimensions and its timestamp', async () => {\n    const container = document.createElement('div');\n    const overlays = new Timeline.Overlays.Overlays({container});\n\n    // Set up the dimensions so it is 100px wide\n    overlays.updateChartDimensions('main', {\n      widthPixels: 100,\n      heightPixels: 50,\n      scrollOffsetPixels: 0,\n    });\n    overlays.updateChartDimensions('network', {\n      widthPixels: 100,\n      heightPixels: 50,\n      scrollOffsetPixels: 0,\n    });\n\n    const windowMin = TraceEngine.Types.Timing.MicroSeconds(0);\n    const windowMax = TraceEngine.Types.Timing.MicroSeconds(100);\n    // Set the visible window to be 0-100 microseconds\n    overlays.updateVisibleWindow(TraceEngine.Helpers.Timing.traceWindowFromMicroSeconds(windowMin, windowMax));\n\n    // Now set an event to be at 50 microseconds.\n    const event = makeInstantEvent('test-event', 50);\n\n    const xPosition = overlays.xPixelForEventOnChart('main', event);\n    assert.strictEqual(xPosition, 50);\n  });\n});\n"]}