{"version":3,"file":"TrackConfiguration.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TrackConfiguration.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAK7B,OAAO,KAAK,QAAQ,MAAM,eAAe,CAAC;AAE1C,MAAM,EAAC,oBAAoB,EAAC,GAAG,QAAQ,CAAC,kBAAkB,CAAC;AAE3D,SAAS,cAAc,CAAC,IAIvB;IACC,MAAM,KAAK,GAA4B;QACrC,IAAI,EAAE,IAAI,CAAC,IAAuC;QAClD,UAAU,EAAE,CAAC,EAAG,iCAAiC;QACjD,KAAK,EAAE,EAAkC;KAC1C,CAAC;IACF,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;IACtB,CAAC;IACD,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;IACxB,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,8DAA8D,EAAE,GAAG,EAAE;QACtE,MAAM,MAAM,GAAG;YACb,cAAc,CAAC,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC;YACjC,cAAc,CAAC,EAAC,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;YAC/C,cAAc,CAAC,EAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;SAClD,CAAC;QACF,MAAM,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,MAAM,IAAI,GAAG,oBAAoB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACvD,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE;YACrB,EAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,SAAS,EAAE,SAAS,EAAC;YACxF,EAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,SAAS,EAAE,SAAS,EAAC;YACvF,EAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,SAAS,EAAE,SAAS,EAAC;SACxF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport type * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\n\nimport * as Timeline from './timeline.js';\n\nconst {buildPersistedConfig} = Timeline.TrackConfiguration;\n\nfunction buildTestGroup(opts: {\n  name: string,\n  hidden?: boolean,\n  expanded?: boolean,\n}): PerfUI.FlameChart.Group {\n  const group: PerfUI.FlameChart.Group = {\n    name: opts.name as Common.UIString.LocalizedString,\n    startLevel: 0,  // doesn't matter for these tests\n    style: {} as PerfUI.FlameChart.GroupStyle,\n  };\n  if (opts.hidden) {\n    group.hidden = true;\n  }\n  if (opts.expanded) {\n    group.expanded = true;\n  }\n  return group;\n}\n\ndescribe('TrackConfiguration', () => {\n  it('builds a representation of the groups and their visual order', () => {\n    const groups = [\n      buildTestGroup({name: 'Group 1'}),\n      buildTestGroup({name: 'Group 2', hidden: true}),\n      buildTestGroup({name: 'Group 3', expanded: true}),\n    ];\n    const visualOrder = [1, 2, 0];\n    const data = buildPersistedConfig(groups, visualOrder);\n    assert.deepEqual(data, [\n      {expanded: false, hidden: false, originalIndex: 0, visualIndex: 2, trackName: 'Group 1'},\n      {expanded: false, hidden: true, originalIndex: 1, visualIndex: 0, trackName: 'Group 2'},\n      {expanded: true, hidden: false, originalIndex: 2, visualIndex: 1, trackName: 'Group 3'},\n    ]);\n  });\n});\n"]}