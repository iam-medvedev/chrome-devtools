{
  "version": 3,
  "sources": ["timeline-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Timeline from './timeline.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for the performance of something\n   */\n  performance: 'Performance',\n  /**\n   *@description Command for showing the 'Performance' tool\n   */\n  showPerformance: 'Show Performance',\n  /**\n   *@description Text to record a series of actions for analysis\n   */\n  record: 'Record',\n  /**\n   *@description Text of an item that stops the running task\n   */\n  stop: 'Stop',\n  /**\n   *@description Title of an action in the timeline tool to record reload\n   */\n  recordAndReload: 'Record and reload',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon download button\n   */\n  saveProfile: 'Save profile…',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon load button\n   */\n  loadProfile: 'Load profile…',\n  /**\n   *@description Prev button title in Film Strip View of the Performance panel\n   */\n  previousFrame: 'Previous frame',\n  /**\n   *@description Next button title in Film Strip View of the Performance panel\n   */\n  nextFrame: 'Next frame',\n  /**\n   *@description Title of an action in the timeline tool to show history\n   */\n  showRecentTimelineSessions: 'Show recent timeline sessions',\n  /**\n   *@description Title of an action that opens the previous recording in the performance panel\n   */\n  previousRecording: 'Previous recording',\n  /**\n   *@description Title of an action that opens the next recording in the performance panel\n   */\n  nextRecording: 'Next recording',\n  /**\n   *@description Title of a setting under the Performance category in Settings\n   */\n  hideChromeFrameInLayersView: 'Hide `chrome` frame in Layers view',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/timeline-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedTimelineModule: (typeof Timeline|undefined);\n\nasync function loadTimelineModule(): Promise<typeof Timeline> {\n  if (!loadedTimelineModule) {\n    loadedTimelineModule = await import('./timeline.js');\n  }\n  return loadedTimelineModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (timelineModule: typeof Timeline) => T[]): T[] {\n  if (loadedTimelineModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedTimelineModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'timeline',\n  title: i18nLazyString(UIStrings.performance),\n  commandPrompt: i18nLazyString(UIStrings.showPerformance),\n  order: 50,\n  async loadView() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.TimelinePanel.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.record),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stop),\n    },\n  ],\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.record-reload',\n  iconClass: UI.ActionRegistration.IconClass.REFRESH,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.recordAndReload),\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+Shift+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+Shift+E',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  actionId: 'timeline.save-to-file',\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.saveProfile),\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+S',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+S',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  actionId: 'timeline.load-from-file',\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.loadProfile),\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+O',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+O',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.jump-to-previous-frame',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.previousFrame),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      shortcut: '[',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.jump-to-next-frame',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.nextFrame),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      shortcut: ']',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.show-history',\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.showRecentTimelineSessions),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+H',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+Y',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.previous-recording',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.previousRecording),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Alt+Left',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+Left',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.next-recording',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.nextRecording),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Alt+Right',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+Right',\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERFORMANCE,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.hideChromeFrameInLayersView),\n  settingName: 'frame-viewer-hide-chrome-window',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n});\n\n// IMPORTANT: if you are updating this, you should also update the setting in\n// js_timeline-meta.\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERFORMANCE,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  settingName: 'annotations-hidden',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n});\n\nCommon.Linkifier.registerLinkifier({\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.CLSLinkifier.CLSRect]);\n  },\n  async loadLinkifier() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.CLSLinkifier.Linkifier.instance();\n  },\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.TIMELINE_MENU_OPEN,\n  actionId: 'timeline.load-from-file',\n  order: 10,\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.TIMELINE_MENU_OPEN,\n  actionId: 'timeline.save-to-file',\n  order: 15,\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [SDK.TraceObject.TraceObject];\n  },\n  destination: Common.Revealer.RevealerDestination.TIMELINE_PANEL,\n  async loadRevealer() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.TraceRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [SDK.TraceObject.RevealableEvent];\n  },\n  destination: Common.Revealer.RevealerDestination.TIMELINE_PANEL,\n  async loadRevealer() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.EventRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.Utils.InsightAIContext.ActiveInsight]);\n  },\n  destination: Common.Revealer.RevealerDestination.TIMELINE_PANEL,\n  async loadRevealer() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.InsightRevealer();\n  },\n});\n"],
  "mappings": "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",
  "names": []
}
