{"version":3,"file":"TimelineDetailsView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineDetailsView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Trace from '../../models/trace/trace.js';\nimport {doubleRaf, raf, renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {allThreadEntriesInTrace} from '../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\n\nimport type * as Components from './components/components.js';\nimport * as Timeline from './timeline.js';\n\nclass MockViewDelegate implements Timeline.TimelinePanel.TimelineModeViewDelegate {\n  select(_selection: Timeline.TimelineSelection.TimelineSelection|null): void {\n  }\n  set3PCheckboxDisabled(_disabled: boolean): void {\n  }\n  selectEntryAtTime(_events: Trace.Types.Events.Event[]|null, _time: number): void {\n  }\n  highlightEvent(_event: Trace.Types.Events.Event|null): void {\n  }\n  element = document.createElement('div');\n}\n\ndescribeWithEnvironment('TimelineDetailsView', function() {\n  const mockViewDelegate = new MockViewDelegate();\n\n  it('displays the details of a network request event correctly', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'lcp-web-font.json.gz');\n    const detailsView = new Timeline.TimelineDetailsView.TimelineDetailsPane(mockViewDelegate);\n\n    renderElementIntoDOM(detailsView);\n\n    const networkRequests = parsedTrace.data.NetworkRequests.byTime;\n    const cssRequest = networkRequests.find(request => {\n      return request.args.data.url === 'https://chromedevtools.github.io/performance-stories/lcp-web-font/app.css';\n    });\n    if (!cssRequest) {\n      throw new Error('Could not find expected network request.');\n    }\n    const selection = Timeline.TimelineSelection.selectionFromEvent(cssRequest);\n\n    // Set up a related insight to test the rendering of the chips\n    const relatedInsights: Components.RelatedInsightChips.EventToRelatedInsightsMap = new Map([\n      [cssRequest, [{insightLabel: 'Test insight', activateInsight: () => {}, messages: []}]],\n    ]);\n\n    await detailsView.setModel({\n      parsedTrace,\n      selectedEvents: null,\n      eventToRelatedInsightsMap: relatedInsights,\n      entityMapper: null\n    });\n    await detailsView.setSelection(selection);\n    await raf();\n\n    const detailsContentElement = detailsView.getDetailsContentElementForTest();\n    assert.isNotNull(detailsContentElement.querySelector('[data-network-request-details]'));\n  });\n\n  it('displays the details for a frame correctly', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const detailsView = new Timeline.TimelineDetailsView.TimelineDetailsPane(mockViewDelegate);\n    renderElementIntoDOM(detailsView);\n    await detailsView.setModel({\n      parsedTrace,\n      selectedEvents: null,\n      eventToRelatedInsightsMap: null,\n      entityMapper: null\n    });\n\n    const frame = parsedTrace.data.Frames.frames.at(0);\n    assert.isOk(frame);\n    const selection = Timeline.TimelineSelection.selectionFromEvent(frame);\n    await detailsView.setSelection(selection);\n    await doubleRaf();  // to let the image be fetched + rendered.\n    const detailsContentElement = detailsView.getDetailsContentElementForTest();\n    const frameImg = detailsContentElement.querySelector('.timeline-filmstrip-preview img');\n    assert.instanceOf(frameImg, HTMLImageElement);\n    assert.isDefined(frameImg.src);\n\n    const duration = detailsContentElement.querySelector<HTMLElement>('[data-row-title=\"Duration\"]');\n    assert.isOk(duration);\n    assert.strictEqual(duration.innerText, 'Duration37.85 ms (at 109.82 ms)');\n  });\n\n  it('renders the layout shift component for a single layout shift', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'shift-attribution.json.gz');\n    const detailsView = new Timeline.TimelineDetailsView.TimelineDetailsPane(mockViewDelegate);\n    renderElementIntoDOM(detailsView);\n    await detailsView.setModel({\n      parsedTrace,\n      selectedEvents: null,\n      eventToRelatedInsightsMap: null,\n      entityMapper: null\n    });\n\n    const layoutShift = parsedTrace.data.LayoutShifts.clusters.at(0)?.events.at(0);\n    assert.isOk(layoutShift);\n    const selection = Timeline.TimelineSelection.selectionFromEvent(layoutShift);\n    await detailsView.setSelection(selection);\n    const detailsContentElement = detailsView.getDetailsContentElementForTest();\n    // Assert that the right component is rendered. This component has its own\n    // tests for its contents so no need to duplicate those here.\n    const layoutShiftDetails = detailsContentElement.querySelector('[data-layout-shift-details]');\n    assert.isNotNull(layoutShiftDetails);\n  });\n\n  it('renders the layout shift component for a selected cluster', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'shift-attribution.json.gz');\n    const detailsView = new Timeline.TimelineDetailsView.TimelineDetailsPane(mockViewDelegate);\n    renderElementIntoDOM(detailsView);\n    await detailsView.setModel({\n      parsedTrace,\n      selectedEvents: null,\n      eventToRelatedInsightsMap: null,\n      entityMapper: null\n    });\n\n    const layoutShiftCluster = parsedTrace.data.LayoutShifts.clusters.at(0);\n    assert.isOk(layoutShiftCluster);\n    const selection = Timeline.TimelineSelection.selectionFromEvent(layoutShiftCluster);\n    await detailsView.setSelection(selection);\n    const detailsContentElement = detailsView.getDetailsContentElementForTest();\n    // Assert that the right component is rendered. This component has its own\n    // tests for its contents so no need to duplicate those here.\n    const layoutShiftDetails = detailsContentElement.querySelector('[data-layout-shift-details]');\n    assert.isNotNull(layoutShiftDetails);\n  });\n\n  it('renders information for a generic event on the main thread', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const detailsView = new Timeline.TimelineDetailsView.TimelineDetailsPane(mockViewDelegate);\n    renderElementIntoDOM(detailsView);\n    const evalScriptEvent = allThreadEntriesInTrace(parsedTrace).find(event => {\n      return event.name === Trace.Types.Events.Name.EVALUATE_SCRIPT && event.dur && event.dur > 2000;\n    });\n    assert.isOk(evalScriptEvent);\n    await detailsView.setModel({\n      parsedTrace,\n      selectedEvents: null,\n      eventToRelatedInsightsMap: null,\n      entityMapper: null\n    });\n    const selection = Timeline.TimelineSelection.selectionFromEvent(evalScriptEvent);\n    await detailsView.setSelection(selection);\n    const detailsContentElement = detailsView.getDetailsContentElementForTest();\n\n    assert.strictEqual(\n        detailsContentElement.querySelector<HTMLElement>('.timeline-details-chip-title')?.innerText, 'Evaluate script');\n\n    // Ensure we show the pie chart time breakdown\n    assert.isTrue(detailsContentElement.innerText.includes('Aggregated time'));\n  });\n\n  it('updates the range details when the user has a range selected', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const detailsView = new Timeline.TimelineDetailsView.TimelineDetailsPane(mockViewDelegate);\n    renderElementIntoDOM(detailsView);\n    await detailsView.setModel({\n      parsedTrace,\n      // We have to set selected events for the range selection UI to be drawn\n      // (without the set of events we can't generate the range stats)\n      selectedEvents: allThreadEntriesInTrace(parsedTrace),\n      eventToRelatedInsightsMap: null,\n      entityMapper: null\n    });\n    const bounds = Trace.Helpers.Timing.traceWindowMilliSeconds(parsedTrace.data.Meta.traceBounds);\n    const selection = Timeline.TimelineSelection.selectionFromRangeMilliSeconds(\n        bounds.min,\n        bounds.max,\n    );\n    await detailsView.setSelection(selection);\n    await raf();\n\n    const detailsContentElement = detailsView.getDetailsContentElementForTest();\n    const component = detailsContentElement.querySelector<HTMLElement>('devtools-performance-timeline-summary');\n    const range = component?.shadowRoot?.querySelector<HTMLElement>('.summary-range');\n    assert.strictEqual(range?.innerText, 'Range: 0 ms – 5.39 s');\n  });\n});\n"]}