{"version":3,"file":"TimelinePanel.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelinePanel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {\n  describeWithEnvironment,\n  registerNoopActions,\n} from '../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Timeline from './timeline.js';\n\ndescribeWithEnvironment('TimelinePanel', function() {\n  let timeline: Timeline.TimelinePanel.TimelinePanel;\n  let traceModel: Trace.TraceModel.Model;\n  beforeEach(() => {\n    registerNoopActions(\n        ['timeline.toggle-recording', 'timeline.record-reload', 'timeline.show-history', 'components.collect-garbage']);\n    const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(\n        SDK.TargetManager.TargetManager.instance(),\n        Workspace.Workspace.WorkspaceImpl.instance(),\n    );\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n      forceNew: true,\n      resourceMapping,\n      targetManager: SDK.TargetManager.TargetManager.instance(),\n    });\n    Bindings.IgnoreListManager.IgnoreListManager.instance({\n      forceNew: true,\n      debuggerWorkspaceBinding: Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance(),\n    });\n    traceModel = Trace.TraceModel.Model.createWithAllHandlers();\n    timeline = Timeline.TimelinePanel.TimelinePanel.instance({forceNew: true, isNode: false, traceModel});\n    timeline.markAsRoot();\n    timeline.show(document.body);\n  });\n\n  afterEach(() => {\n    timeline.detach();\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.removeInstance();\n    Bindings.IgnoreListManager.IgnoreListManager.removeInstance();\n    UI.ActionRegistry.ActionRegistry.reset();\n    Timeline.TimelinePanel.TimelinePanel.removeInstance();\n  });\n\n  it('should keep other tracks when the custom tracks setting is toggled', async function() {\n    const events =\n        await TraceLoader.rawEvents(this, 'extension-tracks-and-marks.json.gz') as Trace.Types.Events.Event[];\n    await timeline.loadingComplete(events, null, null);\n    const tracksBeforeDisablingSetting = timeline.getFlameChart().getMainDataProvider().timelineData().groups;\n    const parsedTrace = traceModel.parsedTrace();\n    const extensionTracksInTrace = parsedTrace?.ExtensionTraceData.extensionTrackData;\n    const extensionTrackInTraceNames = extensionTracksInTrace?.flatMap(\n        track => track.isTrackGroup ? [...Object.keys(track.entriesByTrack), track.name] : track.name);\n\n    assert.exists(extensionTrackInTraceNames);\n\n    // Test that extension tracks from the trace model are rendered in\n    // the flamechart data.\n    const extensionTracksInFlamechartBeforeDisabling =\n        tracksBeforeDisablingSetting\n            .filter(\n                track => track.jslogContext === Timeline.CompatibilityTracksAppender.VisualLoggingTrackName.EXTENSION)\n            .map(track => track.name.split(' — Custom track')[0]);\n    const nonExtensionTrackNames =\n        tracksBeforeDisablingSetting\n            .filter(\n                track => track.jslogContext !== Timeline.CompatibilityTracksAppender.VisualLoggingTrackName.EXTENSION)\n            .map(track => track.name);\n\n    assert.includeMembers(extensionTracksInFlamechartBeforeDisabling, extensionTrackInTraceNames.map(track => track));\n    assert.lengthOf(extensionTracksInFlamechartBeforeDisabling, extensionTrackInTraceNames.length);\n\n    // Disable setting\n    const customTracksSetting = Timeline.TimelinePanel.TimelinePanel.extensionDataVisibilitySetting();\n    customTracksSetting.set(false);\n\n    // Test that extension tracks are not rendered in the flamechart,\n    // but other tracks are.\n    const tracksAfterDisablingSetting = timeline.getFlameChart().getMainDataProvider().timelineData().groups;\n    const extensionTracksAfterDisabling = tracksAfterDisablingSetting.filter(\n        track => track.jslogContext === Timeline.CompatibilityTracksAppender.VisualLoggingTrackName.EXTENSION);\n    const trackNamesAfterDisablingSetting =\n        tracksAfterDisablingSetting.map(track => track.name.split(' — Custom track')[0]);\n    assert.lengthOf(extensionTracksAfterDisabling, 0);\n    assert.deepEqual(trackNamesAfterDisablingSetting, nonExtensionTrackNames);\n\n    // Enable setting again\n    customTracksSetting.set(true);\n\n    const tracksAfterEnablingSetting = timeline.getFlameChart().getMainDataProvider().timelineData().groups;\n    assert.deepEqual(tracksBeforeDisablingSetting, tracksAfterEnablingSetting);\n  });\n  it('should keep overlays when the custom tracks setting is toggled', async function() {\n    const events = await TraceLoader.rawEvents(this, 'web-dev.json.gz') as Trace.Types.Events.Event[];\n    await timeline.loadingComplete(events, null, null);\n    const overlaysBeforeDisablingSetting = timeline.getFlameChart().overlays().allOverlays();\n\n    // Test that overlays are rendered in the timeline\n    assert.isAbove(overlaysBeforeDisablingSetting.length, 0);\n\n    // Disable setting\n    const customTracksSetting = Timeline.TimelinePanel.TimelinePanel.extensionDataVisibilitySetting();\n    customTracksSetting.set(false);\n\n    // Test that overlays remain untouched\n    const overlaysAfterDisablingSetting = timeline.getFlameChart().overlays().allOverlays();\n    assert.deepEqual(overlaysBeforeDisablingSetting, overlaysAfterDisablingSetting);\n\n    // Enable setting again\n    customTracksSetting.set(true);\n\n    const overlaysAfterEnablingSetting = timeline.getFlameChart().overlays().allOverlays();\n    assert.deepEqual(overlaysBeforeDisablingSetting, overlaysAfterEnablingSetting);\n  });\n\n  it('keeps entries set to be dimmed as so after toggling the custom tracks setting', async function() {\n    const events = await TraceLoader.rawEvents(this, 'web-dev.json.gz') as Trace.Types.Events.Event[];\n    await timeline.loadingComplete(events, null, null);\n    const thirdPartyDimSetting = Common.Settings.Settings.instance().createSetting('timeline-dim-third-parties', false);\n\n    // Dim 3P entries.\n    thirdPartyDimSetting.set(true);\n    const dimIndicesBeforeToggle = timeline.getFlameChart().getMainFlameChart().getDimIndices();\n    assert.exists(dimIndicesBeforeToggle);\n    assert.isAbove(dimIndicesBeforeToggle.length, 0);\n\n    // Toggle the custom track setting and verify 3P entries remain dimmed.\n    Timeline.TimelinePanel.TimelinePanel.extensionDataVisibilitySetting().set(true);\n    const dimIndicesAfterToggle = timeline.getFlameChart().getMainFlameChart().getDimIndices();\n    assert.exists(dimIndicesAfterToggle);\n    assert.isAbove(dimIndicesAfterToggle.length, 0);\n  });\n});\n"]}