{"version":3,"file":"TimelineFlameChartDataProvider.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineFlameChartDataProvider.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport {ActiveFilters} from './ActiveFilters.js';\nimport {CompatibilityTracksAppender, type TrackAppenderName} from './CompatibilityTracksAppender.js';\nimport * as Components from './components/components.js';\nimport {type TimelineCategory} from './EventUICategory.js';\nimport {eventInitiatorPairsToDraw} from './Initiators.js';\nimport {type PerformanceModel} from './PerformanceModel.js';\nimport {ThreadAppender} from './ThreadAppender.js';\nimport timelineFlamechartPopoverStyles from './timelineFlamechartPopover.css.js';\nimport {FlameChartStyle, Selection} from './TimelineFlameChartView.js';\nimport {TimelineSelection} from './TimelineSelection.js';\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n   */\n  onIgnoreList: 'On ignore list',\n  /**\n   * @description Text in Timeline Flame Chart Data Provider of the Performance panel *\n   * @example{example.com} PH1\n   */\n  mainS: 'Main — {PH1}',\n  /**\n   * @description Text that refers to the main target\n   */\n  main: 'Main',\n  /**\n   * @description Text in Timeline Flame Chart Data Provider of the Performance panel * @example {https://example.com} PH1\n   */\n  frameS: 'Frame — {PH1}',\n  /**\n   *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n   */\n  subframe: 'Subframe',\n  /**\n   *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n   */\n  raster: 'Raster',\n  /**\n   *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n   *@example {2} PH1\n   */\n  rasterizerThreadS: 'Rasterizer Thread {PH1}',\n  /**\n   *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n   */\n  thread: 'Thread',\n  /**\n   *@description Text for rendering frames\n   */\n  frames: 'Frames',\n  /**\n   * @description Text in the Performance panel to show how long was spent in a particular part of the code.\n   * The first placeholder is the total time taken for this node and all children, the second is the self time\n   * (time taken in this node, without children included).\n   *@example {10ms} PH1\n   *@example {10ms} PH2\n   */\n  sSelfS: '{PH1} (self {PH2})',\n  /**\n   *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n   */\n  idleFrame: 'Idle Frame',\n  /**\n   *@description Text in Timeline Frame Chart Data Provider of the Performance panel\n   */\n  droppedFrame: 'Dropped Frame',\n  /**\n   *@description Text in Timeline Frame Chart Data Provider of the Performance panel\n   */\n  partiallyPresentedFrame: 'Partially Presented Frame',\n  /**\n   *@description Text for a rendering frame\n   */\n  frame: 'Frame',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineFlameChartDataProvider.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// at the moment there are two types defined for trace events: traceeventdata and\n// SDK.TracingModel.Event. This is only for compatibility between the legacy system\n// and the new system proposed in go/rpp-flamechart-arch. In the future, once all\n// tracks have been migrated to the new system, all entries will be of the\n// TraceEventData type.\nexport type TimelineFlameChartEntry =\n    (TraceEngine.Legacy.Event|TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame|\n     TraceEngine.Types.TraceEvents.TraceEventData);\nexport class TimelineFlameChartDataProvider extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements\n    PerfUI.FlameChart.FlameChartDataProvider {\n  private droppedFramePatternCanvas: HTMLCanvasElement;\n  private partialFramePatternCanvas: HTMLCanvasElement;\n  private timelineDataInternal: PerfUI.FlameChart.FlameChartTimelineData|null;\n  private currentLevel: number;\n\n  // The Performance and the Timeline models are expected to be\n  // deprecated in favor of using traceEngineData (new RPP engine) only\n  // as part of the work in crbug.com/1386091. For this reason they\n  // have the \"legacy\" prefix on their name.\n  private legacyPerformanceModel: PerformanceModel|null;\n  private compatibilityTracksAppender: CompatibilityTracksAppender|null;\n  private legacyTimelineModel: TimelineModel.TimelineModel.TimelineModelImpl|null;\n  private traceEngineData: TraceEngine.Handlers.Types.TraceParseData|null;\n  private isCpuProfile = false;\n  /**\n   * Raster threads are tracked and enumerated with this property. This is also\n   * used to group all raster threads together in the same track, instead of\n   * rendering a track for thread.\n   */\n  #rasterCount: number = 0;\n\n  private minimumBoundaryInternal: number;\n  private timeSpan: number;\n  private readonly headerLevel1: PerfUI.FlameChart.GroupStyle;\n  private readonly headerLevel2: PerfUI.FlameChart.GroupStyle;\n  private readonly staticHeader: PerfUI.FlameChart.GroupStyle;\n  private framesHeader: PerfUI.FlameChart.GroupStyle;\n  private readonly screenshotsHeader: PerfUI.FlameChart.GroupStyle;\n  private entryData!: TimelineFlameChartEntry[];\n  private entryTypeByLevel!: EntryType[];\n  private screenshotImageCache!: Map<TraceEngine.Types.TraceEvents.SyntheticScreenshot, HTMLImageElement|null>;\n  private entryIndexToTitle!: string[];\n  private asyncColorByCategory!: Map<TimelineCategory, string>;\n  private lastInitiatorEntry!: number;\n  private entryParent!: TraceEngine.Legacy.Event[];\n  private lastSelection?: Selection;\n  private colorForEvent?: ((arg0: TraceEngine.Legacy.Event) => string);\n  #eventToDisallowRoot = new WeakMap<TraceEngine.Legacy.Event, boolean>();\n  #font: string;\n\n  #eventIndexByEvent: WeakMap<TraceEngine.Types.TraceEvents.TraceEventData, number|null> = new WeakMap();\n\n  constructor() {\n    super();\n    this.reset();\n    this.#font = `${PerfUI.Font.DEFAULT_FONT_SIZE} ${PerfUI.Font.getFontFamilyForCanvas()}`;\n    this.droppedFramePatternCanvas = document.createElement('canvas');\n    this.partialFramePatternCanvas = document.createElement('canvas');\n    this.preparePatternCanvas();\n    this.timelineDataInternal = null;\n    this.currentLevel = 0;\n    this.legacyPerformanceModel = null;\n    this.legacyTimelineModel = null;\n    this.compatibilityTracksAppender = null;\n    this.traceEngineData = null;\n    this.minimumBoundaryInternal = 0;\n    this.timeSpan = 0;\n\n    this.headerLevel1 = this.buildGroupStyle({shareHeaderLine: false});\n    this.headerLevel2 = this.buildGroupStyle({padding: 2, nestingLevel: 1, collapsible: false});\n    this.staticHeader = this.buildGroupStyle({collapsible: false});\n    this.framesHeader = this.buildGroupStyle({useFirstLineForOverview: true});\n    this.screenshotsHeader =\n        this.buildGroupStyle({useFirstLineForOverview: true, nestingLevel: 1, collapsible: false, itemsHeight: 150});\n\n    ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, () => {\n      const headers = [\n        this.headerLevel1,\n        this.headerLevel2,\n        this.staticHeader,\n        this.framesHeader,\n        this.screenshotsHeader,\n      ];\n      for (const header of headers) {\n        header.color = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-on-surface');\n        header.backgroundColor =\n            ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container');\n      }\n    });\n  }\n\n  modifyTree(group: PerfUI.FlameChart.Group, node: number, action: TraceEngine.EntriesFilter.FilterAction): void {\n    const entry = this.entryData[node] as TraceEngine.Types.TraceEvents.SyntheticTraceEntry;\n    this.compatibilityTracksAppender?.modifyTree(group, entry, action);\n  }\n\n  findPossibleContextMenuActions(group: PerfUI.FlameChart.Group, node: number):\n      TraceEngine.EntriesFilter.PossibleFilterActions|void {\n    const entry = this.entryData[node] as TraceEngine.Types.TraceEvents.SyntheticTraceEntry;\n    return this.compatibilityTracksAppender?.findPossibleContextMenuActions(group, entry);\n  }\n\n  private buildGroupStyle(extra: Object): PerfUI.FlameChart.GroupStyle {\n    const defaultGroupStyle = {\n      padding: 4,\n      height: 17,\n      collapsible: true,\n      color: ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-on-surface'),\n      backgroundColor: ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container'),\n      nestingLevel: 0,\n      shareHeaderLine: true,\n    };\n    return Object.assign(defaultGroupStyle, extra);\n  }\n\n  setModel(\n      performanceModel: PerformanceModel|null, newTraceEngineData: TraceEngine.Handlers.Types.TraceParseData|null,\n      isCpuProfile = false): void {\n    this.reset();\n    this.legacyPerformanceModel = performanceModel;\n    this.legacyTimelineModel = performanceModel && performanceModel.timelineModel();\n    this.traceEngineData = newTraceEngineData;\n\n    this.isCpuProfile = isCpuProfile;\n    if (newTraceEngineData) {\n      const {traceBounds} = newTraceEngineData.Meta;\n      const minTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(traceBounds.min);\n      const maxTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(traceBounds.max);\n      this.minimumBoundaryInternal = minTime;\n      this.timeSpan = minTime === maxTime ? 1000 : maxTime - this.minimumBoundaryInternal;\n    }\n  }\n\n  /**\n   * Instances and caches a CompatibilityTracksAppender using the\n   * internal flame chart data and the trace parsed data coming from the\n   * trace engine.\n   * The model data must have been set to the data provider instance before\n   * attempting to instance the CompatibilityTracksAppender.\n   */\n  compatibilityTracksAppenderInstance(forceNew = false): CompatibilityTracksAppender {\n    if (!this.compatibilityTracksAppender || forceNew) {\n      if (!this.traceEngineData || !this.legacyTimelineModel) {\n        throw new Error(\n            'Attempted to instantiate a CompatibilityTracksAppender without having set the trace parse data first.');\n      }\n      this.timelineDataInternal = this.#instantiateTimelineData();\n      this.compatibilityTracksAppender = new CompatibilityTracksAppender(\n          this.timelineDataInternal, this.traceEngineData, this.entryData, this.entryTypeByLevel,\n          this.legacyTimelineModel);\n    }\n    return this.compatibilityTracksAppender;\n  }\n\n  /**\n   * Returns the instance of the timeline flame chart data, without\n   * adding data to it. In case the timeline data hasn't been instanced\n   * creates a new instance and returns it.\n   */\n  #instantiateTimelineData(): PerfUI.FlameChart.FlameChartTimelineData {\n    if (!this.timelineDataInternal) {\n      this.timelineDataInternal = PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n    }\n    return this.timelineDataInternal;\n  }\n\n  /**\n   * Builds the flame chart data using the track appenders\n   */\n  buildFromTrackAppenders(options?: {filterThreadsByName?: string, expandedTracks?: Set<TrackAppenderName>}): void {\n    if (!this.compatibilityTracksAppender) {\n      return;\n    }\n    const appenders = this.compatibilityTracksAppender.allVisibleTrackAppenders();\n    for (const appender of appenders) {\n      const skipThreadAppenderByName =\n          appender instanceof ThreadAppender && !appender.trackName().includes(options?.filterThreadsByName || '');\n      if (skipThreadAppenderByName) {\n        continue;\n      }\n      const expanded = Boolean(options?.expandedTracks?.has(appender.appenderName));\n      this.currentLevel = appender.appendTrackAtLevel(this.currentLevel, expanded);\n    }\n  }\n\n  groupTrack(group: PerfUI.FlameChart.Group): TimelineModel.TimelineModel.Track|null {\n    return group.track || null;\n  }\n\n  groupTreeEvents(group: PerfUI.FlameChart.Group): TraceEngine.Types.TraceEvents.TraceEventData[]|null {\n    return this.compatibilityTracksAppender?.groupEventsForTreeView(group) ?? null;\n  }\n\n  mainFrameNavigationStartEvents(): readonly TraceEngine.Types.TraceEvents.TraceEventNavigationStart[] {\n    if (!this.traceEngineData) {\n      return [];\n    }\n    return this.traceEngineData.Meta.mainFrameNavigations;\n  }\n\n  entryTitle(entryIndex: number): string|null {\n    const entryType = this.entryType(entryIndex);\n    if (entryType === EntryType.Event) {\n      const event = (this.entryData[entryIndex] as TraceEngine.Legacy.Event);\n      if (event.phase === TraceEngine.Types.TraceEvents.Phase.ASYNC_STEP_INTO ||\n          event.phase === TraceEngine.Types.TraceEvents.Phase.ASYNC_STEP_PAST) {\n        return event.name + ':' + event.args['step'];\n      }\n      if (this.#eventToDisallowRoot.get(event)) {\n        return i18nString(UIStrings.onIgnoreList);\n      }\n      return TimelineUIUtils.eventTitle(event);\n    }\n    if (entryType === EntryType.Screenshot) {\n      return '';\n    }\n    if (entryType === EntryType.TrackAppender) {\n      const timelineData = (this.timelineDataInternal as PerfUI.FlameChart.FlameChartTimelineData);\n      const eventLevel = timelineData.entryLevels[entryIndex];\n      const event = (this.entryData[entryIndex] as TraceEngine.Types.TraceEvents.TraceEventData);\n      return this.compatibilityTracksAppender?.titleForEvent(event, eventLevel) || null;\n    }\n    let title: Common.UIString.LocalizedString|string = this.entryIndexToTitle[entryIndex];\n    if (!title) {\n      title = `Unexpected entryIndex ${entryIndex}`;\n      console.error(title);\n    }\n    return title;\n  }\n\n  textColor(index: number): string {\n    const event = this.entryData[index];\n    if (!TimelineFlameChartDataProvider.isEntryRegularEvent(event)) {\n      return FlameChartStyle.textColor;\n    }\n    return this.isIgnoreListedEvent(event) ? '#888' : FlameChartStyle.textColor;\n  }\n\n  entryFont(_index: number): string|null {\n    return this.#font;\n  }\n\n  // resetCompatibilityTracksAppender boolean set to false does not recreate the thread appenders\n  reset(resetCompatibilityTracksAppender: boolean = true): void {\n    this.currentLevel = 0;\n    this.entryData = [];\n    this.entryParent = [];\n    this.entryTypeByLevel = [];\n    this.entryIndexToTitle = [];\n    this.asyncColorByCategory = new Map();\n    this.screenshotImageCache = new Map();\n    this.#eventToDisallowRoot = new WeakMap<TraceEngine.Legacy.Event, boolean>();\n    if (resetCompatibilityTracksAppender) {\n      this.compatibilityTracksAppender = null;\n      this.timelineDataInternal = null;\n    } else if (!resetCompatibilityTracksAppender && this.timelineDataInternal) {\n      this.compatibilityTracksAppender?.setFlameChartDataAndEntryData(\n          this.timelineDataInternal, this.entryData, this.entryTypeByLevel);\n      this.compatibilityTracksAppender?.threadAppenders().forEach(\n          threadAppender => threadAppender.setHeaderAppended(false));\n    }\n  }\n\n  maxStackDepth(): number {\n    return this.currentLevel;\n  }\n\n  /**\n   * Builds the flame chart data using the tracks appender (which use\n   * the new trace engine) and the legacy code paths present in this\n   * file. The result built data is cached and returned.\n   */\n  timelineData(rebuild: boolean = false): PerfUI.FlameChart.FlameChartTimelineData {\n    if (this.timelineDataInternal && this.timelineDataInternal.entryLevels.length !== 0 && !rebuild) {\n      // The flame chart data is built already, so return the cached\n      // data.\n      return this.timelineDataInternal;\n    }\n\n    this.timelineDataInternal = PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n    if (!this.legacyTimelineModel) {\n      return this.timelineDataInternal;\n    }\n\n    if (rebuild) {\n      this.reset(/* resetCompatibilityTracksAppender= */ false);\n    }\n\n    this.currentLevel = 0;\n\n    if (this.traceEngineData) {\n      this.compatibilityTracksAppender = this.compatibilityTracksAppenderInstance();\n      if (this.traceEngineData.Meta.traceIsGeneric) {\n        this.#processGenericTrace();\n      } else {\n        this.processInspectorTrace();\n      }\n    }\n\n    return this.timelineDataInternal;\n  }\n\n  #processGenericTrace(): void {\n    if (!this.compatibilityTracksAppender) {\n      return;\n    }\n\n    const appendersByProcess = this.compatibilityTracksAppender.allThreadAppendersByProcess();\n\n    for (const [pid, threadAppenders] of appendersByProcess) {\n      const processGroupStyle = this.buildGroupStyle({shareHeaderLine: false});\n      const processName = this.traceEngineData?.Meta.processNames.get(pid)?.args.name || 'Process';\n      this.appendHeader(`${processName} (${pid})`, processGroupStyle, true, false);\n      for (const appender of threadAppenders) {\n        appender.setHeaderNestingLevel(1);\n        this.currentLevel = appender.appendTrackAtLevel(this.currentLevel);\n      }\n    }\n  }\n\n  private processInspectorTrace(): void {\n    if (!this.isCpuProfile) {\n      this.appendFrames();\n    }\n\n    const weight = (track: {type?: string, forMainFrame?: boolean, appenderName?: TrackAppenderName}): number => {\n      if (track.appenderName !== undefined) {\n        switch (track.appenderName) {\n          case 'Animations':\n            return 0;\n          case 'Timings':\n            return 1;\n          case 'Interactions':\n            return 2;\n          case 'LayoutShifts':\n            return 3;\n          case 'GPU':\n            return 8;\n          case 'Thread':\n            return 4;\n          case 'Thread_AuctionWorklet':\n            return 10;\n          default:\n            return -1;\n        }\n      }\n\n      switch (track.type) {\n        case TimelineModel.TimelineModel.TrackType.MainThread:\n          return track.forMainFrame ? 5 : 6;\n        case TimelineModel.TimelineModel.TrackType.Worker:\n          return 7;\n        case TimelineModel.TimelineModel.TrackType.Raster:\n          return 9;\n        case TimelineModel.TimelineModel.TrackType.Other:\n          return 11;\n        default:\n          return -1;\n      }\n    };\n\n    if (!this.legacyTimelineModel) {\n      return;\n    }\n    const allTrackAppenders =\n        this.compatibilityTracksAppender ? this.compatibilityTracksAppender.allVisibleTrackAppenders() : [];\n\n    allTrackAppenders.sort((a, b) => weight(a) - weight(b));\n\n    for (const appender of allTrackAppenders) {\n      if (!this.traceEngineData) {\n        continue;\n      }\n\n      this.currentLevel = appender.appendTrackAtLevel(this.currentLevel);\n\n      // If there is not a selected group, we want to default to selecting the\n      // main thread track. Therefore in this check we look to see if the\n      // current appender is a ThreadAppender and represnets the Main Thread.\n      // If it is, we mark the group as selected.\n      if (this.timelineDataInternal && !this.timelineDataInternal.selectedGroup) {\n        if (appender instanceof ThreadAppender &&\n            (appender.threadType === TraceEngine.Handlers.Threads.ThreadType.MAIN_THREAD ||\n             appender.threadType === TraceEngine.Handlers.Threads.ThreadType.CPU_PROFILE)) {\n          const group = this.compatibilityTracksAppender?.groupForAppender(appender);\n          if (group) {\n            this.timelineDataInternal.selectedGroup = group;\n          }\n        }\n      }\n    }\n    if (this.timelineDataInternal && this.timelineDataInternal.selectedGroup) {\n      this.timelineDataInternal.selectedGroup.expanded = true;\n    }\n  }\n\n  #addDecorationToEvent(eventIndex: number, decoration: PerfUI.FlameChart.FlameChartDecoration): void {\n    if (!this.timelineDataInternal) {\n      return;\n    }\n    const decorationsForEvent = this.timelineDataInternal.entryDecorations[eventIndex] || [];\n    decorationsForEvent.push(decoration);\n    this.timelineDataInternal.entryDecorations[eventIndex] = decorationsForEvent;\n  }\n\n  /**\n   * Appends a track in the flame chart using the legacy system.\n   * @param track the legacy track to be rendered.\n   * @param expanded if the track is expanded.\n   */\n  appendLegacyTrackData(track: TimelineModel.TimelineModel.Track, expanded?: boolean): void {\n    this.#instantiateTimelineData();\n    const eventEntryType = EntryType.Event;\n    switch (track.type) {\n      case TimelineModel.TimelineModel.TrackType.MainThread: {\n        if (track.forMainFrame) {\n          const group = this.appendSyncEvents(\n              track, track.events,\n              track.url ? i18nString(UIStrings.mainS, {PH1: track.url}) : i18nString(UIStrings.main), this.headerLevel1,\n              eventEntryType, true /* selectable */, expanded);\n          if (group && this.timelineDataInternal) {\n            this.timelineDataInternal.selectedGroup = group;\n          }\n        } else {\n          this.appendSyncEvents(\n              track, track.events,\n              track.url ? i18nString(UIStrings.frameS, {PH1: track.url}) : i18nString(UIStrings.subframe),\n              this.headerLevel1, eventEntryType, true /* selectable */, expanded);\n        }\n        break;\n      }\n\n      case TimelineModel.TimelineModel.TrackType.Worker: {\n        this.appendSyncEvents(\n            track, track.events, track.name, this.headerLevel1, eventEntryType, true /* selectable */, expanded);\n        break;\n      }\n\n      case TimelineModel.TimelineModel.TrackType.Raster: {\n        if (!this.#rasterCount) {\n          this.appendHeader(i18nString(UIStrings.raster), this.headerLevel1, false /* selectable */, expanded);\n        }\n        ++this.#rasterCount;\n        this.appendSyncEvents(\n            track, track.events, i18nString(UIStrings.rasterizerThreadS, {PH1: this.#rasterCount}), this.headerLevel2,\n            eventEntryType, true /* selectable */, expanded);\n        break;\n      }\n\n      case TimelineModel.TimelineModel.TrackType.Other: {\n        this.appendSyncEvents(\n            track, track.events, track.name || i18nString(UIStrings.thread), this.headerLevel1, eventEntryType,\n            true /* selectable */, expanded);\n        this.appendAsyncEventsGroup(\n            track, track.name, track.asyncEvents, this.headerLevel1, eventEntryType, true /* selectable */, expanded);\n        break;\n      }\n    }\n  }\n  minimumBoundary(): number {\n    return this.minimumBoundaryInternal;\n  }\n\n  totalTime(): number {\n    return this.timeSpan;\n  }\n\n  /**\n   * Narrows an entry of type TimelineFlameChartEntry to the 2 types of\n   * simple trace events (legacy and new engine definitions).\n   */\n  static isEntryRegularEvent(entry: TimelineFlameChartEntry):\n      entry is(TraceEngine.Types.TraceEvents.TraceEventData|TraceEngine.Legacy.Event) {\n    return 'name' in entry;\n  }\n\n  search(startTime: number, endTime: number, filter: TimelineModel.TimelineModelFilter.TimelineModelFilter): number[] {\n    const result = [];\n    this.timelineData();\n    for (let i = 0; i < this.entryData.length; ++i) {\n      const entry = this.entryData[i];\n      if (!TimelineFlameChartDataProvider.isEntryRegularEvent(entry)) {\n        continue;\n      }\n      if (!entry) {\n        continue;\n      }\n\n      // Until all the tracks are powered by the new engine, we need to\n      // consider that these entries could be either new engine or legacy\n      // engine.\n      const entryStartTime = TraceEngine.Legacy.eventIsFromNewEngine(entry) ?\n          TraceEngine.Helpers.Timing.eventTimingsMilliSeconds(entry).startTime :\n          entry.startTime;\n      const entryEndTime = TraceEngine.Legacy.eventIsFromNewEngine(entry) ?\n          TraceEngine.Helpers.Timing.eventTimingsMilliSeconds(entry).endTime :\n          entry.endTime;\n\n      if (entryStartTime > endTime) {\n        continue;\n      }\n      if ((entryEndTime || entryStartTime) < startTime) {\n        continue;\n      }\n      if (filter.accept(entry, this.traceEngineData || undefined)) {\n        result.push(i);\n      }\n    }\n    result.sort((a, b) => {\n      let firstEvent: TimelineFlameChartEntry|null = this.entryData[a];\n      let secondEvent: TimelineFlameChartEntry|null = this.entryData[b];\n      if (!TimelineFlameChartDataProvider.isEntryRegularEvent(firstEvent) ||\n          !TimelineFlameChartDataProvider.isEntryRegularEvent(secondEvent)) {\n        return 0;\n      }\n      firstEvent = firstEvent instanceof TraceEngine.Legacy.Event ?\n          firstEvent :\n          (this.compatibilityTracksAppender?.getLegacyEvent(firstEvent) || null);\n      secondEvent = secondEvent instanceof TraceEngine.Legacy.Event ?\n          secondEvent :\n          (this.compatibilityTracksAppender?.getLegacyEvent(secondEvent) || null);\n      if (!firstEvent || !secondEvent) {\n        return 0;\n      }\n      return TraceEngine.Legacy.Event.compareStartTime(firstEvent, secondEvent);\n    });\n    return result;\n  }\n\n  private appendSyncEvents(\n      track: TimelineModel.TimelineModel.Track|null, events: TraceEngine.Legacy.Event[], title: string|null,\n      style: PerfUI.FlameChart.GroupStyle|null, entryType: EntryType, selectable: boolean,\n      expanded?: boolean): PerfUI.FlameChart.Group|null {\n    if (!events.length) {\n      return null;\n    }\n    if (!this.legacyPerformanceModel || !this.legacyTimelineModel) {\n      return null;\n    }\n    const openEvents = [];\n    const ignoreListingEnabled = Root.Runtime.experiments.isEnabled('ignoreListJSFramesOnTimeline');\n    let maxStackDepth = 0;\n    let group: PerfUI.FlameChart.Group|null = null;\n    if (track && track.type === TimelineModel.TimelineModel.TrackType.MainThread) {\n      group = this.appendHeader((title as string), (style as PerfUI.FlameChart.GroupStyle), selectable, expanded);\n      group.track = track;\n    }\n    for (let i = 0; i < events.length; ++i) {\n      const event = events[i];\n      const {duration: eventDuration} = TraceEngine.Legacy.timesForEventInMilliseconds(event);\n      // TODO(crbug.com/1386091) this check should happen at the model level.\n      // Skip Layout Shifts and TTI events when dealing with the main thread.\n      if (this.legacyPerformanceModel) {\n        const isInteractiveTime = this.legacyPerformanceModel.timelineModel().isInteractiveTimeEvent(event);\n        const isLayoutShift = this.legacyPerformanceModel.timelineModel().isLayoutShiftEvent(event);\n        const skippableEvent = isInteractiveTime || isLayoutShift;\n\n        if (track && track.type === TimelineModel.TimelineModel.TrackType.MainThread && skippableEvent) {\n          continue;\n        }\n      }\n\n      if (!TraceEngine.Types.TraceEvents.isFlowPhase(event.phase)) {\n        if (!event.endTime && event.phase !== TraceEngine.Types.TraceEvents.Phase.INSTANT) {\n          continue;\n        }\n        if (TraceEngine.Types.TraceEvents.isAsyncPhase(event.phase)) {\n          continue;\n        }\n        if (!ActiveFilters.instance().isVisible(event)) {\n          continue;\n        }\n      }\n      // Handle events belonging to a stack. E.g. A call stack in the main thread flame chart.\n      while (openEvents.length &&\n             // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n             // @ts-expect-error\n             ((openEvents[openEvents.length - 1] as TraceEngine.Legacy.Event).endTime) <= event.startTime) {\n        openEvents.pop();\n      }\n      this.#eventToDisallowRoot.set(event, false);\n      if (ignoreListingEnabled && this.isIgnoreListedEvent(event)) {\n        const parent = openEvents[openEvents.length - 1];\n        if (parent && this.#eventToDisallowRoot.get(parent)) {\n          continue;\n        }\n        this.#eventToDisallowRoot.set(event, true);\n      }\n      if (!group && title) {\n        group = this.appendHeader(title, (style as PerfUI.FlameChart.GroupStyle), selectable, expanded);\n        if (selectable) {\n          group.track = track;\n        }\n      }\n\n      const level = this.currentLevel + openEvents.length;\n      const index = this.appendEvent(event, level);\n      if (openEvents.length) {\n        this.entryParent[index] = (openEvents[openEvents.length - 1] as TraceEngine.Legacy.Event);\n      }\n\n      const trackIsMainThreadMainFrame =\n          Boolean(track?.forMainFrame && track?.type === TimelineModel.TimelineModel.TrackType.MainThread);\n      // If we are dealing with the Main Thread, find any long tasks and add\n      // the candy striping to them. Doing it here avoids having to do another\n      // pass through the events at a later point.\n      if (trackIsMainThreadMainFrame && event.name === TimelineModel.TimelineModel.RecordType.Task &&\n          TraceEngine.Helpers.Timing.millisecondsToMicroseconds(eventDuration) >\n              TraceEngine.Handlers.ModelHandlers.Warnings.LONG_MAIN_THREAD_TASK_THRESHOLD) {\n        this.#addDecorationToEvent(index, {\n          type: PerfUI.FlameChart.FlameChartDecorationType.CANDY,\n          startAtTime: TraceEngine.Handlers.ModelHandlers.Warnings.LONG_MAIN_THREAD_TASK_THRESHOLD,\n        });\n      }\n      maxStackDepth = Math.max(maxStackDepth, openEvents.length + 1);\n      if (event.endTime) {\n        openEvents.push(event);\n      }\n    }\n    this.entryTypeByLevel.length = this.currentLevel + maxStackDepth;\n    this.entryTypeByLevel.fill(entryType, this.currentLevel);\n    this.currentLevel += maxStackDepth;\n    return group;\n  }\n\n  isIgnoreListedEvent(event: TraceEngine.Legacy.CompatibleTraceEvent): boolean {\n    if (TraceEngine.Legacy.eventIsFromNewEngine(event) && TraceEngine.Types.TraceEvents.isProfileCall(event)) {\n      return this.isIgnoreListedURL(event.callFrame.url as Platform.DevToolsPath.UrlString);\n    }\n    return false;\n  }\n\n  private isIgnoreListedURL(url: Platform.DevToolsPath.UrlString): boolean {\n    return Bindings.IgnoreListManager.IgnoreListManager.instance().isUserIgnoreListedURL(url);\n  }\n\n  private appendAsyncEventsGroup(\n      track: TimelineModel.TimelineModel.Track|null, title: string|null, events: TraceEngine.Legacy.AsyncEvent[],\n      style: PerfUI.FlameChart.GroupStyle|null, entryType: EntryType, selectable: boolean,\n      expanded?: boolean): PerfUI.FlameChart.Group|null {\n    if (!events.length) {\n      return null;\n    }\n    const lastUsedTimeByLevel: number[] = [];\n    let group: PerfUI.FlameChart.Group|null = null;\n    for (let i = 0; i < events.length; ++i) {\n      const asyncEvent = events[i];\n      if (!this.legacyPerformanceModel || !ActiveFilters.instance().isVisible(asyncEvent)) {\n        continue;\n      }\n      if (!group && title) {\n        group = this.appendHeader(title, (style as PerfUI.FlameChart.GroupStyle), selectable, expanded);\n        if (selectable) {\n          group.track = track;\n        }\n      }\n      const startTime = asyncEvent.startTime;\n      let level;\n      for (level = 0; level < lastUsedTimeByLevel.length && lastUsedTimeByLevel[level] > startTime; ++level) {\n      }\n      this.appendAsyncEvent(asyncEvent, this.currentLevel + level);\n      lastUsedTimeByLevel[level] = (asyncEvent.endTime as number);\n    }\n    this.entryTypeByLevel.length = this.currentLevel + lastUsedTimeByLevel.length;\n    this.entryTypeByLevel.fill(entryType, this.currentLevel);\n    this.currentLevel += lastUsedTimeByLevel.length;\n    return group;\n  }\n\n  getEntryTypeForLevel(level: number): EntryType {\n    return this.entryTypeByLevel[level];\n  }\n\n  private appendFrames(): void {\n    if (!this.legacyPerformanceModel || !this.timelineDataInternal || !this.legacyTimelineModel ||\n        !this.traceEngineData) {\n      return;\n    }\n\n    // TODO: Long term we want to move both the Frames track and the screenshots\n    // track into the TrackAppender system. However right now the frames track\n    // expects data in a different form to how the new engine parses frame\n    // information. Therefore we have migrated the screenshots to use the new\n    // data model in place without creating a new TrackAppender. When we can\n    // migrate the frames track to the new appender system, we can migrate the\n    // screnshots then as well.\n    const filmStrip = TraceEngine.Extras.FilmStrip.fromTraceData(this.traceEngineData);\n    const hasScreenshots = filmStrip.frames.length > 0;\n\n    this.framesHeader.collapsible = hasScreenshots;\n    const expanded = Root.Runtime.Runtime.queryParam('flamechart-force-expand') === 'frames';\n\n    this.appendHeader(i18nString(UIStrings.frames), this.framesHeader, false /* selectable */, expanded);\n\n    this.entryTypeByLevel[this.currentLevel] = EntryType.Frame;\n    for (const frame of this.traceEngineData.Frames.frames) {\n      this.#appendNewEngineFrame(frame);\n    }\n    ++this.currentLevel;\n\n    if (!hasScreenshots) {\n      return;\n    }\n    this.#appendScreenshots(filmStrip);\n  }\n\n  #appendScreenshots(filmStrip: TraceEngine.Extras.FilmStrip.Data): void {\n    if (!this.timelineDataInternal || !this.legacyTimelineModel) {\n      return;\n    }\n    this.appendHeader('', this.screenshotsHeader, false /* selectable */);\n    this.entryTypeByLevel[this.currentLevel] = EntryType.Screenshot;\n    let prevTimestamp: TraceEngine.Types.Timing.MilliSeconds|undefined = undefined;\n\n    for (const filmStripFrame of filmStrip.frames) {\n      const screenshotTimeInMilliSeconds =\n          TraceEngine.Helpers.Timing.microSecondsToMilliseconds(filmStripFrame.screenshotEvent.ts);\n      this.entryData.push(filmStripFrame.screenshotEvent);\n      (this.timelineDataInternal.entryLevels as number[]).push(this.currentLevel);\n      (this.timelineDataInternal.entryStartTimes as number[]).push(screenshotTimeInMilliSeconds);\n      if (prevTimestamp) {\n        (this.timelineDataInternal.entryTotalTimes as number[]).push(screenshotTimeInMilliSeconds - prevTimestamp);\n      }\n      prevTimestamp = screenshotTimeInMilliSeconds;\n    }\n    if (filmStrip.frames.length && prevTimestamp !== undefined) {\n      // Set the total time of the final screenshot so it takes up the remainder of the trace.\n      (this.timelineDataInternal.entryTotalTimes as number[])\n          .push(this.legacyTimelineModel.maximumRecordTime() - prevTimestamp);\n    }\n    ++this.currentLevel;\n  }\n\n  private entryType(entryIndex: number): EntryType {\n    return this.entryTypeByLevel[(this.timelineDataInternal as PerfUI.FlameChart.FlameChartTimelineData)\n                                     .entryLevels[entryIndex]];\n  }\n\n  prepareHighlightedEntryInfo(entryIndex: number): Element|null {\n    let time = '';\n    let title;\n    let warningElements: Element[] = [];\n    let nameSpanTimelineInfoTime = 'timeline-info-time';\n\n    const additionalContent: HTMLElement[] = [];\n\n    const entryType = this.entryType(entryIndex);\n    if (entryType === EntryType.TrackAppender) {\n      if (!this.compatibilityTracksAppender) {\n        return null;\n      }\n      const event = (this.entryData[entryIndex] as TraceEngine.Types.TraceEvents.TraceEventData);\n      const timelineData = (this.timelineDataInternal as PerfUI.FlameChart.FlameChartTimelineData);\n      const eventLevel = timelineData.entryLevels[entryIndex];\n      const highlightedEntryInfo = this.compatibilityTracksAppender.highlightedEntryInfo(event, eventLevel);\n      title = highlightedEntryInfo.title;\n      time = highlightedEntryInfo.formattedTime;\n      warningElements = highlightedEntryInfo.warningElements || warningElements;\n      if (TraceEngine.Types.TraceEvents.isSyntheticInteractionEvent(event)) {\n        const breakdown = new Components.InteractionBreakdown.InteractionBreakdown();\n        breakdown.entry = event;\n        additionalContent.push(breakdown);\n      }\n    } else if (entryType === EntryType.Event) {\n      const event = (this.entryData[entryIndex] as TraceEngine.Legacy.Event);\n      const totalTime = event.duration;\n      const selfTime = event.selfTime;\n      const eps = 1e-6;\n      if (typeof totalTime === 'number') {\n        time = Math.abs(totalTime - selfTime) > eps && selfTime > eps ?\n            i18nString(UIStrings.sSelfS, {\n              PH1: i18n.TimeUtilities.millisToString(totalTime, true),\n              PH2: i18n.TimeUtilities.millisToString(selfTime, true),\n            }) :\n            i18n.TimeUtilities.millisToString(totalTime, true);\n      }\n      title = this.entryTitle(entryIndex);\n\n    } else if (entryType === EntryType.Frame) {\n      const frame = (this.entryData[entryIndex] as TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n      time = i18n.TimeUtilities.preciseMillisToString(\n          TraceEngine.Helpers.Timing.microSecondsToMilliseconds(frame.duration), 1);\n\n      if (frame.idle) {\n        title = i18nString(UIStrings.idleFrame);\n      } else if (frame.dropped) {\n        if (frame.isPartial) {\n          title = i18nString(UIStrings.partiallyPresentedFrame);\n        } else {\n          title = i18nString(UIStrings.droppedFrame);\n        }\n        nameSpanTimelineInfoTime = 'timeline-info-warning';\n      } else {\n        title = i18nString(UIStrings.frame);\n      }\n    } else {\n      return null;\n    }\n\n    const element = document.createElement('div');\n    const root = UI.Utils.createShadowRootWithCoreStyles(element, {\n      cssFile: [timelineFlamechartPopoverStyles],\n      delegatesFocus: undefined,\n    });\n    const contents = root.createChild('div', 'timeline-flamechart-popover');\n    contents.createChild('span', nameSpanTimelineInfoTime).textContent = time;\n    contents.createChild('span', 'timeline-info-title').textContent = title;\n    if (warningElements) {\n      for (const warningElement of warningElements) {\n        warningElement.classList.add('timeline-info-warning');\n        contents.appendChild(warningElement);\n      }\n    }\n    for (const elem of additionalContent) {\n      contents.appendChild(elem);\n    }\n    return element;\n  }\n\n  prepareHighlightedHiddenEntriesArrowInfo(group: PerfUI.FlameChart.Group, entryIndex: number): Element|null {\n    const element = document.createElement('div');\n    const root = UI.Utils.createShadowRootWithCoreStyles(element, {\n      cssFile: [timelineFlamechartPopoverStyles],\n      delegatesFocus: undefined,\n    });\n\n    const entry = this.entryData[entryIndex] as TraceEngine.Types.TraceEvents.SyntheticTraceEntry;\n    const hiddenEntriesAmount = this.compatibilityTracksAppender?.findHiddenDescendantsAmount(group, entry);\n\n    if (!hiddenEntriesAmount) {\n      return null;\n    }\n    const contents = root.createChild('div', 'timeline-flamechart-popover');\n    contents.createChild('span', 'timeline-info-title').textContent = hiddenEntriesAmount + ' hidden';\n\n    return element;\n  }\n\n  entryColor(entryIndex: number): string {\n    function patchColorAndCache<KEY>(cache: Map<KEY, string>, key: KEY, lookupColor: (arg0: KEY) => string): string {\n      let color = cache.get(key);\n      if (color) {\n        return color;\n      }\n      const parsedColor = lookupColor(key);\n      if (!parsedColor) {\n        throw new Error('Could not parse color from entry');\n      }\n      color = parsedColor;\n      cache.set(key, color);\n      return (color);\n    }\n\n    if (!this.legacyPerformanceModel || !this.legacyTimelineModel) {\n      return '';\n    }\n\n    const entryType = this.entryType(entryIndex);\n    if (entryType === EntryType.Event) {\n      const event = (this.entryData[entryIndex] as TraceEngine.Legacy.Event);\n      if (this.legacyTimelineModel.isGenericTrace()) {\n        return this.genericTraceEventColor(event);\n      }\n      if (this.legacyPerformanceModel.timelineModel().isMarkerEvent(event)) {\n        return TimelineUIUtils.markerStyleForEvent(event).color;\n      }\n      if (!TraceEngine.Types.TraceEvents.isAsyncPhase(event.phase) && this.colorForEvent) {\n        return this.colorForEvent(event);\n      }\n      const category = TimelineUIUtils.eventStyle(event).category;\n      return patchColorAndCache(this.asyncColorByCategory, category, () => category.getComputedColorValue());\n    }\n    if (entryType === EntryType.Frame) {\n      return 'white';\n    }\n    if (entryType === EntryType.TrackAppender) {\n      const timelineData = (this.timelineDataInternal as PerfUI.FlameChart.FlameChartTimelineData);\n      const eventLevel = timelineData.entryLevels[entryIndex];\n      const event = (this.entryData[entryIndex] as TraceEngine.Types.TraceEvents.TraceEventData);\n      return this.compatibilityTracksAppender?.colorForEvent(event, eventLevel) || '';\n    }\n    return '';\n  }\n\n  private genericTraceEventColor(event: TraceEngine.Legacy.Event): string {\n    const key = event.categoriesString || event.name;\n    return key ? `hsl(${Platform.StringUtilities.hashCode(key) % 300 + 30}, 40%, 70%)` : '#ccc';\n  }\n\n  private preparePatternCanvas(): void {\n    // Set the candy stripe pattern to 17px so it repeats well.\n    const size = 17;\n    this.droppedFramePatternCanvas.width = size;\n    this.droppedFramePatternCanvas.height = size;\n\n    this.partialFramePatternCanvas.width = size;\n    this.partialFramePatternCanvas.height = size;\n\n    const ctx = this.droppedFramePatternCanvas.getContext('2d');\n    if (ctx) {\n      // Make a dense solid-line pattern.\n      ctx.translate(size * 0.5, size * 0.5);\n      ctx.rotate(Math.PI * 0.25);\n      ctx.translate(-size * 0.5, -size * 0.5);\n\n      ctx.fillStyle = 'rgb(255, 255, 255)';\n      for (let x = -size; x < size * 2; x += 3) {\n        ctx.fillRect(x, -size, 1, size * 3);\n      }\n    }\n\n    const ctx2 = this.partialFramePatternCanvas.getContext('2d');\n    if (ctx2) {\n      // Make a sparse dashed-line pattern.\n      ctx2.strokeStyle = 'rgb(255, 255, 255)';\n      ctx2.lineWidth = 2;\n      ctx2.beginPath();\n      ctx2.moveTo(17, 0);\n      ctx2.lineTo(10, 7);\n      ctx2.moveTo(8, 9);\n      ctx2.lineTo(2, 15);\n      ctx2.stroke();\n    }\n  }\n\n  private drawFrame(\n      entryIndex: number, context: CanvasRenderingContext2D, text: string|null, barX: number, barY: number,\n      barWidth: number, barHeight: number): void {\n    const hPadding = 1;\n    const frame = (this.entryData[entryIndex] as TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame);\n    barX += hPadding;\n    barWidth -= 2 * hPadding;\n    if (frame.idle) {\n      context.fillStyle = 'white';\n    } else if (frame.dropped) {\n      if (frame.isPartial) {\n        // For partially presented frame boxes, paint a yellow background with\n        // a sparse white dashed-line pattern overlay.\n        context.fillStyle = '#f0e442';\n        context.fillRect(barX, barY, barWidth, barHeight);\n\n        const overlay = context.createPattern(this.partialFramePatternCanvas, 'repeat');\n        context.fillStyle = overlay || context.fillStyle;\n      } else {\n        // For dropped frame boxes, paint a red background with a dense white\n        // solid-line pattern overlay.\n        context.fillStyle = '#f08080';\n        context.fillRect(barX, barY, barWidth, barHeight);\n\n        const overlay = context.createPattern(this.droppedFramePatternCanvas, 'repeat');\n        context.fillStyle = overlay || context.fillStyle;\n      }\n    } else {\n      context.fillStyle = '#d7f0d1';\n    }\n    context.fillRect(barX, barY, barWidth, barHeight);\n\n    const frameDurationText = i18n.TimeUtilities.preciseMillisToString(\n        TraceEngine.Helpers.Timing.microSecondsToMilliseconds(frame.duration), 1);\n    const textWidth = context.measureText(frameDurationText).width;\n    if (textWidth <= barWidth) {\n      context.fillStyle = this.textColor(entryIndex);\n      context.fillText(frameDurationText, barX + (barWidth - textWidth) / 2, barY + barHeight - 4);\n    }\n  }\n\n  private async drawScreenshot(\n      entryIndex: number, context: CanvasRenderingContext2D, barX: number, barY: number, barWidth: number,\n      barHeight: number): Promise<void> {\n    const screenshot = (this.entryData[entryIndex] as TraceEngine.Types.TraceEvents.SyntheticScreenshot);\n    if (!this.screenshotImageCache.has(screenshot)) {\n      this.screenshotImageCache.set(screenshot, null);\n      const data = screenshot.args.dataUri;\n      const image = await UI.UIUtils.loadImage(data);\n      this.screenshotImageCache.set(screenshot, image);\n      this.dispatchEventToListeners(Events.DataChanged);\n      return;\n    }\n\n    const image = this.screenshotImageCache.get(screenshot);\n    if (!image) {\n      return;\n    }\n    const imageX = barX + 1;\n    const imageY = barY + 1;\n    const imageHeight = barHeight - 2;\n    const scale = imageHeight / image.naturalHeight;\n    const imageWidth = Math.floor(image.naturalWidth * scale);\n    context.save();\n    context.beginPath();\n    context.rect(barX, barY, barWidth, barHeight);\n    context.clip();\n    context.drawImage(image, imageX, imageY, imageWidth, imageHeight);\n    context.strokeStyle = '#ccc';\n    context.strokeRect(imageX - 0.5, imageY - 0.5, Math.min(barWidth - 1, imageWidth + 1), imageHeight);\n    context.restore();\n  }\n\n  decorateEntry(\n      entryIndex: number, context: CanvasRenderingContext2D, text: string|null, barX: number, barY: number,\n      barWidth: number, barHeight: number, unclippedBarX: number, timeToPixelRatio: number): boolean {\n    const entryType = this.entryType(entryIndex);\n\n    if (entryType === EntryType.Frame) {\n      this.drawFrame(entryIndex, context, text, barX, barY, barWidth, barHeight);\n      return true;\n    }\n\n    if (entryType === EntryType.Screenshot) {\n      void this.drawScreenshot(entryIndex, context, barX, barY, barWidth, barHeight);\n      return true;\n    }\n\n    if (entryType === EntryType.TrackAppender) {\n      const entry = this.entryData[entryIndex] as TraceEngine.Types.TraceEvents.TraceEventData;\n      if (TraceEngine.Types.TraceEvents.isSyntheticInteractionEvent(entry)) {\n        this.#drawInteractionEventWithWhiskers(\n            context, entryIndex, text, entry, barX, barY, unclippedBarX, barWidth, barHeight, timeToPixelRatio);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Draws the left and right whiskers around an interaction in the timeline.\n   * @param context - the canvas that will be drawn onto\n   * @param entryIndex\n   * @param entryTitle - the title of the entry\n   * @param entry - the entry itself\n   * @param barX - the starting X pixel position of the bar representing this event. This is clipped: if the bar is off the left side of the screen, this value will be 0\n   * @param barY - the starting Y pixel position of the bar representing this event.\n   * @param unclippedBarXStartPixel - the starting X pixel position of the bar representing this event, not clipped. This means if the bar is off the left of the screen this will be a negative number.\n   * @param barWidth - the width of the full bar in pixels\n   * @param barHeight - the height of the full bar in pixels\n   * @param timeToPixelRatio - the ratio required to convert a millisecond time to a pixel value.\n   **/\n  #drawInteractionEventWithWhiskers(\n      context: CanvasRenderingContext2D, entryIndex: number, entryTitle: string|null,\n      entry: TraceEngine.Types.TraceEvents.SyntheticInteractionPair, barX: number, barY: number,\n      unclippedBarXStartPixel: number, barWidth: number, barHeight: number, timeToPixelRatio: number): void {\n    /**\n     * An interaction is drawn with whiskers as so:\n     * |----------[=======]-------------|\n     * => The left whisker is the event's start time (event.ts)\n     * => The box start is the event's processingStart time\n     * => The box end is the event's processingEnd time\n     * => The right whisker is the event's end time (event.ts + event.dur)\n     *\n     * When we draw the event in the InteractionsAppender, we draw a huge box\n     * that spans the entire of the above. So here we need to draw over the\n     * rectangle that is outside of {processingStart, processingEnd} and\n     * replace it with the whiskers.\n     * TODO(crbug.com/1495248): rework how we draw whiskers to avoid this inefficiency\n     */\n\n    const beginTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(entry.ts);\n    const entireBarEndXPixel = barX + barWidth;\n\n    function timeToPixel(time: TraceEngine.Types.Timing.MicroSeconds): number {\n      const timeMilli = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(time);\n      return Math.floor(unclippedBarXStartPixel + (timeMilli - beginTime) * timeToPixelRatio);\n    }\n\n    context.save();\n\n    // Clear portions of initial rect to prepare for the ticks.\n    context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container');\n    let desiredBoxStartX = timeToPixel(entry.processingStart);\n    const desiredBoxEndX = timeToPixel(entry.processingEnd);\n\n    // If the entry has no processing time, ensure the box is 1px wide so at least it is visible.\n    if (entry.processingEnd - entry.processingStart === 0) {\n      desiredBoxStartX -= 1;\n    }\n\n    context.fillRect(barX, barY - 0.5, desiredBoxStartX - barX, barHeight);\n    context.fillRect(desiredBoxEndX, barY - 0.5, entireBarEndXPixel - desiredBoxEndX, barHeight);\n\n    // Draws left and right whiskers\n    function drawTick(begin: number, end: number, y: number): void {\n      const tickHeightPx = 6;\n      context.moveTo(begin, y - tickHeightPx / 2);\n      context.lineTo(begin, y + tickHeightPx / 2);\n      context.moveTo(begin, y);\n      context.lineTo(end, y);\n    }\n\n    // The left whisker starts at the enty timestamp, and continues until the start of the box (processingStart).\n    const leftWhiskerX = timeToPixel(entry.ts);\n    // The right whisker ends at (entry.ts + entry.dur). We draw the line from the end of the box (processingEnd).\n    const rightWhiskerX = timeToPixel(TraceEngine.Types.Timing.MicroSeconds(entry.ts + entry.dur));\n    context.beginPath();\n    context.lineWidth = 1;\n    context.strokeStyle = '#ccc';\n    const lineY = Math.floor(barY + barHeight / 2) + 0.5;\n    const leftTick = leftWhiskerX + 0.5;\n    const rightTick = rightWhiskerX - 0.5;\n    drawTick(leftTick, desiredBoxStartX, lineY);\n    drawTick(rightTick, desiredBoxEndX, lineY);\n    context.stroke();\n\n    if (entryTitle) {\n      // BarX will be set to 0 if the start of the box if off the screen to the\n      // left. If this happens, the desiredBoxStartX will be negative. In that\n      // case, we fallback to the BarX. This ensures that even if the box\n      // starts off-screen, we draw the text at the first visible on screen\n      // pixels, so the user can still see the event's title.\n      const textStartX = desiredBoxStartX > 0 ? desiredBoxStartX : barX;\n      context.font = this.#font;\n      const textWidth = UI.UIUtils.measureTextWidth(context, entryTitle);\n\n      // These numbers are duplicated from FlameChart.ts.\n      const textPadding = 5;\n      const textBaseline = 5;\n\n      // Only draw the text if it can fit in the amount of box that is visible.\n      if (textWidth <= desiredBoxEndX - textStartX + textPadding) {\n        context.fillStyle = this.textColor(entryIndex);\n        context.fillText(entryTitle, textStartX + textPadding, barY + barHeight - textBaseline);\n      }\n    }\n    context.restore();\n  }\n\n  forceDecoration(entryIndex: number): boolean {\n    const entryType = this.entryType(entryIndex);\n    if (entryType === EntryType.Frame) {\n      return true;\n    }\n    if (entryType === EntryType.Screenshot) {\n      return true;\n    }\n\n    if (entryType === EntryType.Event) {\n      // TODO: this entryType can no longer exist as all tracks are now\n      // migrated to appenders. This can be removed as part of the old engine\n      // removal.\n      return false;\n    }\n    const event = (this.entryData[entryIndex] as TraceEngine.Types.TraceEvents.TraceEventData);\n\n    if (TraceEngine.Types.TraceEvents.isSyntheticInteractionEvent(event)) {\n      // We draw interactions with whiskers, which are done via the\n      // decorateEntry() method, hence we always want to force these to be\n      // decorated.\n      return true;\n    }\n    return Boolean(this.traceEngineData?.Warnings.perEvent.get(event));\n  }\n\n  private appendHeader(title: string, style: PerfUI.FlameChart.GroupStyle, selectable: boolean, expanded?: boolean):\n      PerfUI.FlameChart.Group {\n    const group =\n        ({startLevel: this.currentLevel, name: title, style: style, selectable: selectable, expanded} as\n         PerfUI.FlameChart.Group);\n    (this.timelineDataInternal as PerfUI.FlameChart.FlameChartTimelineData).groups.push(group);\n    return group;\n  }\n\n  private appendEvent(event: TraceEngine.Legacy.Event, level: number): number {\n    const index = this.entryData.length;\n    this.entryData.push(event);\n    const timelineData = (this.timelineDataInternal as PerfUI.FlameChart.FlameChartTimelineData);\n    timelineData.entryLevels[index] = level;\n    timelineData.entryTotalTimes[index] = event.duration || InstantEventVisibleDurationMs;\n    timelineData.entryStartTimes[index] = event.startTime;\n    return index;\n  }\n\n  private appendAsyncEvent(asyncEvent: TraceEngine.Legacy.AsyncEvent, level: number): void {\n    const steps = asyncEvent.steps;\n    // If we have past steps, put the end event for each range rather than start one.\n    const eventOffset =\n        steps.length > 1 && steps[1].phase === TraceEngine.Types.TraceEvents.Phase.ASYNC_STEP_PAST ? 1 : 0;\n    for (let i = 0; i < steps.length - 1; ++i) {\n      const index = this.entryData.length;\n      this.entryData.push(steps[i + eventOffset]);\n      const startTime = steps[i].startTime;\n      const timelineData = (this.timelineDataInternal as PerfUI.FlameChart.FlameChartTimelineData);\n      timelineData.entryLevels[index] = level;\n      timelineData.entryTotalTimes[index] = steps[i + 1].startTime - startTime;\n      timelineData.entryStartTimes[index] = startTime;\n    }\n  }\n\n  #appendNewEngineFrame(frame: TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame): void {\n    const index = this.entryData.length;\n    this.entryData.push(frame);\n    const durationMilliseconds = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(frame.duration);\n    this.entryIndexToTitle[index] = i18n.TimeUtilities.millisToString(durationMilliseconds, true);\n    if (!this.timelineDataInternal) {\n      return;\n    }\n    this.timelineDataInternal.entryLevels[index] = this.currentLevel;\n    this.timelineDataInternal.entryTotalTimes[index] = durationMilliseconds;\n    this.timelineDataInternal.entryStartTimes[index] =\n        TraceEngine.Helpers.Timing.microSecondsToMilliseconds(frame.startTime);\n  }\n\n  createSelection(entryIndex: number): TimelineSelection|null {\n    const entryType = this.entryType(entryIndex);\n    let timelineSelection: TimelineSelection|null = null;\n    const entry = this.entryData[entryIndex];\n    if (entry && TimelineFlameChartDataProvider.isEntryRegularEvent(entry)) {\n      timelineSelection = TimelineSelection.fromTraceEvent(entry);\n    } else if (entryType === EntryType.Frame) {\n      timelineSelection = TimelineSelection.fromFrame(\n          (this.entryData[entryIndex] as TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame));\n    }\n    if (timelineSelection) {\n      this.lastSelection = new Selection(timelineSelection, entryIndex);\n    }\n    return timelineSelection;\n  }\n\n  formatValue(value: number, precision?: number): string {\n    return i18n.TimeUtilities.preciseMillisToString(value, precision);\n  }\n\n  canJumpToEntry(_entryIndex: number): boolean {\n    return false;\n  }\n\n  entryIndexForSelection(selection: TimelineSelection|null): number {\n    if (!selection || TimelineSelection.isRangeSelection(selection.object) ||\n        TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selection.object)) {\n      return -1;\n    }\n\n    if (this.lastSelection && this.lastSelection.timelineSelection.object === selection.object) {\n      return this.lastSelection.entryIndex;\n    }\n    const index = this.entryData.indexOf(selection.object);\n    if (index !== -1) {\n      this.lastSelection = new Selection(selection, index);\n    }\n    return index;\n  }\n\n  getIndexForEvent(targetEvent: TraceEngine.Types.TraceEvents.TraceEventData): number|null {\n    // Gets the index for the given event by walking through the array of entryData.\n    // This may seem inefficient - but we have seen that by building up large\n    // maps keyed by trace events that this has a significant impact on the\n    // performance of the panel.\n    // Therefore, we strike a middle ground: look up the event the first time,\n    // but then cache the result.\n    const fromCache = this.#eventIndexByEvent.get(targetEvent);\n    if (fromCache) {\n      return fromCache;\n    }\n    const index = this.entryData.indexOf(targetEvent);\n    const result = index > -1 ? index : null;\n    this.#eventIndexByEvent.set(targetEvent, result);\n    return result;\n  }\n\n  /**\n   * Build the |flowStartTimes|, |flowStartLevels|, |flowEndTimes| and\n   * |flowEndLevels| data for the initiator arrows of given entry.\n   * @param entryIndex\n   * @returns if we should re-render the flame chart (canvas)\n   */\n  buildFlowForInitiator(entryIndex: number): boolean {\n    if (this.lastInitiatorEntry === entryIndex) {\n      return false;\n    }\n    if (!this.traceEngineData) {\n      return false;\n    }\n    if (!this.timelineDataInternal) {\n      return false;\n    }\n    if (!this.compatibilityTracksAppender) {\n      return false;\n    }\n\n    const previousInitiatorPairsLength = this.timelineDataInternal.flowStartTimes.length;\n    // |entryIndex| equals -1 means there is no entry selected, just clear the\n    // initiator cache if there is any previous arrow and return true to\n    // re-render.\n    if (entryIndex === -1) {\n      this.lastInitiatorEntry = entryIndex;\n      if (previousInitiatorPairsLength === 0) {\n        // This means there is no arrow before, so we don't need to re-render.\n        return false;\n      }\n      // Reset to clear any previous arrows from the last event.\n      this.timelineDataInternal.resetFlowData();\n      return true;\n    }\n\n    const entryType = this.entryType(entryIndex);\n    if (entryType !== EntryType.TrackAppender) {\n      return false;\n    }\n    const event = this.entryData[entryIndex] as TraceEngine.Types.TraceEvents.TraceEventData;\n    if (!TraceEngine.Legacy.eventIsFromNewEngine(event)) {\n      // TODO: as part of the old engine removal, we need to redefine the Event\n      // type to teach the code that only new engine events can be selected by\n      // the user.\n      return false;\n    }\n    // Reset to clear any previous arrows from the last event.\n    this.timelineDataInternal.resetFlowData();\n\n    this.lastInitiatorEntry = entryIndex;\n\n    const initiatorPairs = eventInitiatorPairsToDraw(\n        this.traceEngineData,\n        event,\n    );\n    // This means there is no change for arrows.\n    if (previousInitiatorPairsLength === 0 && initiatorPairs.length === 0) {\n      return false;\n    }\n    for (const pair of initiatorPairs) {\n      const eventIndex = this.getIndexForEvent(pair.event);\n      const initiatorIndex = this.getIndexForEvent(pair.initiator);\n      if (eventIndex === null || initiatorIndex === null) {\n        continue;\n      }\n      const {startTime} = TraceEngine.Legacy.timesForEventInMilliseconds(pair.event);\n      const {endTime: initiatorEndTime, startTime: initiatorStartTime} =\n          TraceEngine.Legacy.timesForEventInMilliseconds(pair.initiator);\n\n      const td = this.timelineDataInternal;\n      td.flowStartTimes.push(initiatorEndTime || initiatorStartTime);\n      td.flowStartLevels.push(td.entryLevels[initiatorIndex]);\n      td.flowEndTimes.push(startTime);\n      td.flowEndLevels.push(td.entryLevels[eventIndex]);\n    }\n    return true;\n  }\n\n  eventByIndex(entryIndex: number): TraceEngine.Legacy.CompatibleTraceEvent|null {\n    if (entryIndex < 0) {\n      return null;\n    }\n    const entryType = this.entryType(entryIndex);\n    if (entryType === EntryType.TrackAppender) {\n      return this.entryData[entryIndex] as TraceEngine.Types.TraceEvents.TraceEventData;\n    }\n    if (entryType === EntryType.Event) {\n      return this.entryData[entryIndex] as TraceEngine.Legacy.Event;\n    }\n    return null;\n  }\n\n  setEventColorMapping(colorForEvent: (arg0: TraceEngine.Legacy.Event) => string): void {\n    this.colorForEvent = colorForEvent;\n  }\n\n  // Included only for layout tests.\n  // TODO(crbug.com/1386091): Fix/port layout tests and remove.\n  get performanceModel(): PerformanceModel|null {\n    return this.legacyPerformanceModel;\n  }\n}\n\nexport const InstantEventVisibleDurationMs = 0.001;\n\nexport const enum Events {\n  DataChanged = 'DataChanged',\n}\n\nexport type EventTypes = {\n  [Events.DataChanged]: void,\n};\n\n// an entry is a trace event, they are classified into \"entry types\"\n// because some events are rendered differently. For example, screenshot\n// events are rendered as images. Checks for entry types allow to have\n// different styles, names, etc. for events that look differently.\n// In the future we won't have this checks: instead we will forward\n// the event to the corresponding \"track appender\" and it will determine\n// how the event shall be rendered.\nexport const enum EntryType {\n  Frame = 'Frame',\n  Event = 'Event',\n  TrackAppender = 'TrackAppender',\n  Screenshot = 'Screenshot',\n}\n"]}