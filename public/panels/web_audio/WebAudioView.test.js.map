{"version":3,"file":"WebAudioView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/web_audio/WebAudioView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {assertScreenshot, renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {createViewFunctionStub} from '../../testing/ViewFunctionHelpers.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as WebAudio from './web_audio.js';\n\nconst context1: Protocol.WebAudio.BaseAudioContext = {\n  contextId: '924c4ee4-4cae-4e62-b4c6-71603edc39fd' as Protocol.WebAudio.GraphObjectId,\n  contextType: Protocol.WebAudio.ContextType.Realtime,\n  contextState: Protocol.WebAudio.ContextState.Running,\n  sampleRate: 44100,\n  callbackBufferSize: 1024,\n  maxOutputChannelCount: 2,\n};\n\nconst context2: Protocol.WebAudio.BaseAudioContext = {\n  contextId: '78a3e94e-4968-4bf6-8905-325109695c9e' as Protocol.WebAudio.GraphObjectId,\n  contextType: Protocol.WebAudio.ContextType.Realtime,\n  contextState: Protocol.WebAudio.ContextState.Running,\n  sampleRate: 44100,\n  callbackBufferSize: 1024,\n  maxOutputChannelCount: 2,\n};\n\ndescribeWithMockConnection('WebAudioView', () => {\n  beforeEach(() => {\n    UI.ActionRegistration.registerActionExtension({\n      actionId: 'components.collect-garbage',\n      category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n      title: () => 'mock' as Platform.UIString.LocalizedString,\n      toggleable: true,\n    });\n    sinon.stub(UI.ShortcutRegistry.ShortcutRegistry, 'instance').returns({\n      shortcutTitleForAction: () => {},\n      shortcutsForAction: () => [],\n    } as unknown as UI.ShortcutRegistry.ShortcutRegistry);\n  });\n\n  afterEach(() => {\n    UI.ActionRegistration.reset();\n  });\n\n  it('shows placeholder', async () => {\n    const viewFunction = WebAudio.WebAudioView.DEFAULT_VIEW;\n    const container = document.createElement('div');\n    renderElementIntoDOM(container);\n    viewFunction(\n        {\n          contexts: [],\n          selectedContextIndex: -1,\n          onContextSelectorSelectionChanged: () => {},\n          contextRealtimeData: null\n        },\n        {}, container);\n    await assertScreenshot('web_audio/web-audio-view-placeholder.png');\n    container.remove();\n  });\n\n  it('shows contexts', async () => {\n    const viewFunction = WebAudio.WebAudioView.DEFAULT_VIEW;\n    const container = document.createElement('div');\n    renderElementIntoDOM(container);\n    viewFunction(\n        {\n          contexts: [context1, context2],\n          selectedContextIndex: 0,\n          onContextSelectorSelectionChanged: () => {},\n          contextRealtimeData: null\n        },\n        {}, container);\n    await assertScreenshot('web_audio/web-audio-view-contexts.png');\n    container.remove();\n  });\n\n  it('starts empty', async () => {\n    const view = createViewFunctionStub(WebAudio.WebAudioView.WebAudioView);\n    renderElementIntoDOM(new WebAudio.WebAudioView.WebAudioView(undefined, view));\n    assert.isEmpty(view.input.contexts);\n    assert.strictEqual(view.input.selectedContextIndex, -1);\n  });\n\n  it('selects created context', async () => {\n    const view = createViewFunctionStub(WebAudio.WebAudioView.WebAudioView);\n    renderElementIntoDOM(new WebAudio.WebAudioView.WebAudioView(undefined, view));\n    const target = createTarget();\n    const model = target.model(WebAudio.WebAudioModel.WebAudioModel);\n    assert.exists(model);\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context1);\n    const input = await view.nextInput;\n\n    assert.deepEqual(input.contexts, [context1]);\n    assert.strictEqual(input.selectedContextIndex, 0);\n  });\n\n  it('clears list on reset', async () => {\n    const view = createViewFunctionStub(WebAudio.WebAudioView.WebAudioView);\n    renderElementIntoDOM(new WebAudio.WebAudioView.WebAudioView(undefined, view));\n    const target = createTarget();\n    const model = target.model(WebAudio.WebAudioModel.WebAudioModel);\n    assert.exists(model);\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context1);\n    await view.nextInput;\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.MODEL_RESET);\n    const input = await view.nextInput;\n\n    assert.isEmpty(input.contexts);\n    assert.strictEqual(input.selectedContextIndex, -1);\n  });\n\n  it('re-selects created context after change', async () => {\n    const view = createViewFunctionStub(WebAudio.WebAudioView.WebAudioView);\n    renderElementIntoDOM(new WebAudio.WebAudioView.WebAudioView(undefined, view));\n    const target = createTarget();\n    const model = target.model(WebAudio.WebAudioModel.WebAudioModel);\n    assert.exists(model);\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context1);\n    await view.nextInput;\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CHANGED, context1);\n    const input = await view.nextInput;\n\n    assert.deepEqual(input.contexts, [context1]);\n    assert.strictEqual(input.selectedContextIndex, 0);\n  });\n\n  it('keeps first context selected when another is added', async () => {\n    const view = createViewFunctionStub(WebAudio.WebAudioView.WebAudioView);\n    renderElementIntoDOM(new WebAudio.WebAudioView.WebAudioView(undefined, view));\n    const target = createTarget();\n    const model = target.model(WebAudio.WebAudioModel.WebAudioModel);\n    assert.exists(model);\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context1);\n    await view.nextInput;\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context2);\n    const input = await view.nextInput;\n\n    assert.deepEqual(input.contexts, [context1, context2]);\n    assert.strictEqual(input.selectedContextIndex, 0);\n  });\n\n  it('does not change selection when a different context is changed', async () => {\n    const view = createViewFunctionStub(WebAudio.WebAudioView.WebAudioView);\n    renderElementIntoDOM(new WebAudio.WebAudioView.WebAudioView(undefined, view));\n    const target = createTarget();\n    const model = target.model(WebAudio.WebAudioModel.WebAudioModel);\n    assert.exists(model);\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context1);\n    await view.nextInput;\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context2);\n    await view.nextInput;\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CHANGED, context2);\n    const input = await view.nextInput;\n\n    assert.deepEqual(input.contexts, [context1, context2]);\n    assert.strictEqual(input.selectedContextIndex, 0);\n  });\n\n  it('selects the context that was chosen', async () => {\n    const view = createViewFunctionStub(WebAudio.WebAudioView.WebAudioView);\n    renderElementIntoDOM(new WebAudio.WebAudioView.WebAudioView(undefined, view));\n    const target = createTarget();\n    const model = target.model(WebAudio.WebAudioModel.WebAudioModel);\n    assert.exists(model);\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context1);\n    await view.nextInput;\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context2);\n    await view.nextInput;\n\n    assert.exists(view.input);\n    view.input.onContextSelectorSelectionChanged(context2.contextId);\n    const input = await view.nextInput;\n    assert.strictEqual(input.selectedContextIndex, 1);\n  });\n\n  it('keeps context selected when another is destroyed', async () => {\n    const view = createViewFunctionStub(WebAudio.WebAudioView.WebAudioView);\n    renderElementIntoDOM(new WebAudio.WebAudioView.WebAudioView(undefined, view));\n    const target = createTarget();\n    const model = target.model(WebAudio.WebAudioModel.WebAudioModel);\n    assert.exists(model);\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context1);\n    await view.nextInput;\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context2);\n    await view.nextInput;\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_DESTROYED, context2.contextId);\n    const input = await view.nextInput;\n\n    assert.deepEqual(input.contexts, [context1]);\n    assert.strictEqual(input.selectedContextIndex, 0);\n  });\n\n  it('selects another context when the selected one is destroyed', async () => {\n    const view = createViewFunctionStub(WebAudio.WebAudioView.WebAudioView);\n    renderElementIntoDOM(new WebAudio.WebAudioView.WebAudioView(undefined, view));\n    const target = createTarget();\n    const model = target.model(WebAudio.WebAudioModel.WebAudioModel);\n    assert.exists(model);\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context1);\n    await view.nextInput;\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context2);\n    await view.nextInput;\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_DESTROYED, context1.contextId);\n    const input = await view.nextInput;\n\n    assert.deepEqual(input.contexts, [context2]);\n    assert.strictEqual(input.selectedContextIndex, 0);\n  });\n\n  it('selects nothing when the only context is destroyed', async () => {\n    const view = createViewFunctionStub(WebAudio.WebAudioView.WebAudioView);\n    renderElementIntoDOM(new WebAudio.WebAudioView.WebAudioView(undefined, view));\n    const target = createTarget();\n    const model = target.model(WebAudio.WebAudioModel.WebAudioModel);\n    assert.exists(model);\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_CREATED, context1);\n    await view.nextInput;\n\n    model.dispatchEventToListeners(WebAudio.WebAudioModel.Events.CONTEXT_DESTROYED, context1.contextId);\n    const input = await view.nextInput;\n\n    assert.isEmpty(input.contexts);\n    assert.strictEqual(input.selectedContextIndex, -1);\n  });\n});\n"]}