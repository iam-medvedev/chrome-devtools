{"version":3,"file":"WebAudioView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/web_audio/WebAudioView.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,EAAC,uBAAuB,EAAC,MAAM,qCAAqC,CAAC;AAC5E,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,EAAC,YAAY,EAAC,MAAM,gBAAgB,CAAC;AAE5C,uBAAuB,CAAC,cAAc,EAAE,GAAG,EAAE;IAC3C,UAAU,CAAC,GAAG,EAAE;QACd,EAAE,CAAC,kBAAkB,CAAC,uBAAuB,CAAC;YAC5C,QAAQ,EAAE,4BAA4B;YACtC,QAAQ,sEAAkD;YAC1D,KAAK,EAAE,GAAG,EAAE,CAAC,MAA2C;YACxD,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;QACH,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC,OAAO,CAAC;YACnE,sBAAsB,EAAE,GAAG,EAAE,GAAE,CAAC;YAChC,kBAAkB,EAAE,GAAG,EAAE,CAAC,EAAE;SACsB,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,IAAI,GAAG,IAAI,YAAY,CAAC,YAAY,EAAE,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;QACjE,MAAM,CAAC,SAAS,CACZ,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,qBAAqB,CAAC,EAAE,WAAW,EAAE,iCAAiC,CAAC,CAAC;QAC9G,MAAM,CAAC,SAAS,CACZ,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,iCAAiC,CAAC,EAAE,WAAW,EACjF,0DAA0D,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {WebAudioView} from './web_audio.js';\n\ndescribeWithEnvironment('WebAudioView', () => {\n  beforeEach(() => {\n    UI.ActionRegistration.registerActionExtension({\n      actionId: 'components.collect-garbage',\n      category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n      title: () => 'mock' as Platform.UIString.LocalizedString,\n      toggleable: true,\n    });\n    sinon.stub(UI.ShortcutRegistry.ShortcutRegistry, 'instance').returns({\n      shortcutTitleForAction: () => {},\n      shortcutsForAction: () => [],\n    } as unknown as UI.ShortcutRegistry.ShortcutRegistry);\n  });\n\n  it('shows placeholder', () => {\n    const view = new WebAudioView.WebAudioView();\n    assert.exists(view.contentElement.querySelector('.empty-state'));\n    assert.deepEqual(\n        view.contentElement.querySelector('.empty-state-header')?.textContent, 'No Web Audio API usage detected');\n    assert.deepEqual(\n        view.contentElement.querySelector('.empty-state-description > span')?.textContent,\n        'Open a page that uses Web Audio API to start monitoring.');\n  });\n});\n"]}