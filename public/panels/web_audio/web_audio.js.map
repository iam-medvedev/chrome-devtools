{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/web_audio/WebAudioModel.ts", "../../../../../../front_end/panels/web_audio/WebAudioView.ts", "webAudio.css.js"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class WebAudioModel extends SDK.SDKModel.SDKModel<EventTypes> implements ProtocolProxyApi.WebAudioDispatcher {\n  private enabled: boolean;\n  private readonly agent: ProtocolProxyApi.WebAudioApi;\n  constructor(target: SDK.Target.Target) {\n    super(target);\n\n    this.enabled = false;\n\n    this.agent = target.webAudioAgent();\n    target.registerWebAudioDispatcher(this);\n\n    // TODO(crbug.com/963510): Some OfflineAudioContexts are not uninitialized\n    // properly because LifeCycleObserver::ContextDestroyed() is not fired for\n    // unknown reasons. This creates inconsistency in AudioGraphTracer\n    // and AudioContextSelector in DevTools.\n    //\n    // To resolve this inconsistency, we flush the leftover from the previous\n    // frame when the current page is loaded. This call can be omitted when the\n    // bug is fixed.\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.FrameNavigated, this.flushContexts, this);\n  }\n\n  private flushContexts(): void {\n    this.dispatchEventToListeners(Events.MODEL_RESET);\n  }\n\n  override async suspendModel(): Promise<void> {\n    this.dispatchEventToListeners(Events.MODEL_SUSPEND);\n    await this.agent.invoke_disable();\n  }\n\n  override async resumeModel(): Promise<void> {\n    if (!this.enabled) {\n      return await Promise.resolve();\n    }\n    await this.agent.invoke_enable();\n  }\n\n  ensureEnabled(): void {\n    if (this.enabled) {\n      return;\n    }\n    void this.agent.invoke_enable();\n    this.enabled = true;\n  }\n\n  contextCreated({context}: Protocol.WebAudio.ContextCreatedEvent): void {\n    this.dispatchEventToListeners(Events.CONTEXT_CREATED, context);\n  }\n\n  contextWillBeDestroyed({contextId}: Protocol.WebAudio.ContextWillBeDestroyedEvent): void {\n    this.dispatchEventToListeners(Events.CONTEXT_DESTROYED, contextId);\n  }\n\n  contextChanged({context}: Protocol.WebAudio.ContextChangedEvent): void {\n    this.dispatchEventToListeners(Events.CONTEXT_CHANGED, context);\n  }\n\n  audioListenerCreated({listener}: Protocol.WebAudio.AudioListenerCreatedEvent): void {\n    this.dispatchEventToListeners(Events.AUDIO_LISTENER_CREATED, listener);\n  }\n\n  audioListenerWillBeDestroyed({listenerId, contextId}: Protocol.WebAudio.AudioListenerWillBeDestroyedEvent): void {\n    this.dispatchEventToListeners(Events.AUDIO_LISTENER_WILL_BE_DESTROYED, {listenerId, contextId});\n  }\n\n  audioNodeCreated({node}: Protocol.WebAudio.AudioNodeCreatedEvent): void {\n    this.dispatchEventToListeners(Events.AUDIO_NODE_CREATED, node);\n  }\n\n  audioNodeWillBeDestroyed({contextId, nodeId}: Protocol.WebAudio.AudioNodeWillBeDestroyedEvent): void {\n    this.dispatchEventToListeners(Events.AUDIO_NODE_WILL_BE_DESTROYED, {contextId, nodeId});\n  }\n\n  audioParamCreated({param}: Protocol.WebAudio.AudioParamCreatedEvent): void {\n    this.dispatchEventToListeners(Events.AUDIO_PARAM_CREATED, param);\n  }\n\n  audioParamWillBeDestroyed({contextId, nodeId, paramId}: Protocol.WebAudio.AudioParamWillBeDestroyedEvent): void {\n    this.dispatchEventToListeners(Events.AUDIO_PARAM_WILL_BE_DESTROYED, {contextId, nodeId, paramId});\n  }\n\n  nodesConnected({contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex}:\n                     Protocol.WebAudio.NodesConnectedEvent): void {\n    this.dispatchEventToListeners(\n        Events.NODES_CONNECTED, {contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex});\n  }\n\n  nodesDisconnected({contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex}:\n                        Protocol.WebAudio.NodesDisconnectedEvent): void {\n    this.dispatchEventToListeners(\n        Events.NODES_DISCONNECTED, {contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex});\n  }\n\n  nodeParamConnected({contextId, sourceId, destinationId, sourceOutputIndex}:\n                         Protocol.WebAudio.NodeParamConnectedEvent): void {\n    this.dispatchEventToListeners(Events.NODE_PARAM_CONNECTED, {contextId, sourceId, destinationId, sourceOutputIndex});\n  }\n\n  nodeParamDisconnected({contextId, sourceId, destinationId, sourceOutputIndex}:\n                            Protocol.WebAudio.NodeParamDisconnectedEvent): void {\n    this.dispatchEventToListeners(\n        Events.NODE_PARAM_DISCONNECTED, {contextId, sourceId, destinationId, sourceOutputIndex});\n  }\n\n  async requestRealtimeData(contextId: Protocol.WebAudio.GraphObjectId):\n      Promise<Protocol.WebAudio.ContextRealtimeData|null> {\n    const realtimeResponse = await this.agent.invoke_getRealtimeData({contextId});\n    return realtimeResponse.realtimeData;\n  }\n}\n\nSDK.SDKModel.SDKModel.register(WebAudioModel, {capabilities: SDK.Target.Capability.DOM, autostart: false});\n\nexport const enum Events {\n  CONTEXT_CREATED = 'ContextCreated',\n  CONTEXT_DESTROYED = 'ContextDestroyed',\n  CONTEXT_CHANGED = 'ContextChanged',\n  MODEL_RESET = 'ModelReset',\n  MODEL_SUSPEND = 'ModelSuspend',\n  AUDIO_LISTENER_CREATED = 'AudioListenerCreated',\n  AUDIO_LISTENER_WILL_BE_DESTROYED = 'AudioListenerWillBeDestroyed',\n  AUDIO_NODE_CREATED = 'AudioNodeCreated',\n  AUDIO_NODE_WILL_BE_DESTROYED = 'AudioNodeWillBeDestroyed',\n  AUDIO_PARAM_CREATED = 'AudioParamCreated',\n  AUDIO_PARAM_WILL_BE_DESTROYED = 'AudioParamWillBeDestroyed',\n  NODES_CONNECTED = 'NodesConnected',\n  NODES_DISCONNECTED = 'NodesDisconnected',\n  NODE_PARAM_CONNECTED = 'NodeParamConnected',\n  NODE_PARAM_DISCONNECTED = 'NodeParamDisconnected',\n}\n\nexport interface EventTypes {\n  [Events.CONTEXT_CREATED]: Protocol.WebAudio.BaseAudioContext;\n  [Events.CONTEXT_DESTROYED]: Protocol.WebAudio.GraphObjectId;\n  [Events.CONTEXT_CHANGED]: Protocol.WebAudio.BaseAudioContext;\n  [Events.MODEL_RESET]: void;\n  [Events.MODEL_SUSPEND]: void;\n  [Events.AUDIO_LISTENER_CREATED]: Protocol.WebAudio.AudioListener;\n  [Events.AUDIO_LISTENER_WILL_BE_DESTROYED]: Protocol.WebAudio.AudioListenerWillBeDestroyedEvent;\n  [Events.AUDIO_NODE_CREATED]: Protocol.WebAudio.AudioNode;\n  [Events.AUDIO_NODE_WILL_BE_DESTROYED]: Protocol.WebAudio.AudioNodeWillBeDestroyedEvent;\n  [Events.AUDIO_PARAM_CREATED]: Protocol.WebAudio.AudioParam;\n  [Events.AUDIO_PARAM_WILL_BE_DESTROYED]: Protocol.WebAudio.AudioParamWillBeDestroyedEvent;\n  [Events.NODES_CONNECTED]: Protocol.WebAudio.NodesConnectedEvent;\n  [Events.NODES_DISCONNECTED]: Protocol.WebAudio.NodesDisconnectedEvent;\n  [Events.NODE_PARAM_CONNECTED]: Protocol.WebAudio.NodeParamConnectedEvent;\n  [Events.NODE_PARAM_DISCONNECTED]: Protocol.WebAudio.NodeParamDisconnectedEvent;\n}\n", "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport webAudioStyles from './webAudio.css.js';\nimport {Events as ModelEvents, WebAudioModel} from './WebAudioModel.js';\nconst {widgetConfig} = UI.Widget;\nconst {bindToAction} = UI.UIUtils;\n\nconst UIStrings = {\n  /**\n   * @description Text in Web Audio View if there is nothing to show.\n   * Web Audio API is an API for controlling audio on the web.\n   */\n  noWebAudio: 'No Web Audio API usage detected',\n  /**\n   * @description Text in Web Audio View\n   */\n  openAPageThatUsesWebAudioApiTo: 'Open a page that uses Web Audio API to start monitoring.',\n  /**\n   * @description Text that shows there is no recording\n   */\n  noRecordings: '(no recordings)',\n  /**\n   * @description Label prefix for an audio context selection\n   * @example {realtime (1e03ec)} PH1\n   */\n  audioContextS: 'Audio context: {PH1}',\n  /**\n   * @description The current state of an item\n   */\n  state: 'State',\n  /**\n   * @description Text in Web Audio View\n   */\n  sampleRate: 'Sample Rate',\n  /**\n   * @description Text in Web Audio View\n   */\n  callbackBufferSize: 'Callback Buffer Size',\n  /**\n   * @description Label in the Web Audio View for the maximum number of output channels\n   * that this Audio Context has.\n   */\n  maxOutputChannels: 'Max Output Channels',\n  /**\n   * @description Text in Web Audio View\n   */\n  currentTime: 'Current Time',\n  /**\n   * @description Text in Web Audio View\n   */\n  callbackInterval: 'Callback Interval',\n  /**\n   * @description Text in Web Audio View\n   */\n  renderCapacity: 'Render Capacity',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/WebAudioView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst WEBAUDIO_EXPLANATION_URL =\n    'https://developer.chrome.com/docs/devtools/webaudio' as Platform.DevToolsPath.UrlString;\n\ninterface ViewInput {\n  contexts: Protocol.WebAudio.BaseAudioContext[];\n  selectedContextIndex: number;\n  onContextSelectorSelectionChanged: (contextId: string) => void;\n  contextRealtimeData: Protocol.WebAudio.ContextRealtimeData|null;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  const {\n    contexts,\n    selectedContextIndex,\n    onContextSelectorSelectionChanged,\n    contextRealtimeData,\n  } = input;\n  const selectedContext = selectedContextIndex > -1 ? contexts[selectedContextIndex] : null;\n\n  const titleForContext = (context: Protocol.WebAudio.BaseAudioContext): string =>\n      context.contextType + ' (' + context.contextId.substr(-6) + ')';\n\n  const selectorTitle = i18nString(\n      UIStrings.audioContextS,\n      {PH1: selectedContext ? titleForContext(selectedContext) : i18nString(UIStrings.noRecordings)});\n\n  // clang-format off\n  render(html`\n    <style>${webAudioStyles}</style>\n    <div class=\"web-audio-toolbar-container vbox\" role=\"toolbar\">\n      <devtools-toolbar class=\"web-audio-toolbar\" role=\"presentation\"\n          jslog=${VisualLogging.toolbar()}>\n        <devtools-button ${bindToAction('components.collect-garbage')}></devtools-button>\n        <div class=\"toolbar-divider\"></div>\n        <select\n          title=${selectorTitle}\n          aria-label=${selectorTitle}\n          ?disabled=${contexts.length === 0}\n          @change=${(e: Event) => onContextSelectorSelectionChanged((e.target as HTMLSelectElement).value)}\n          .value=${selectedContext ? selectedContext.contextId : ''}>\n          ${contexts.length === 0\n              ? html`<option value=\"\" hidden>${i18nString(UIStrings.noRecordings)}</option>`\n              : contexts.map(context => html`\n            <option value=${context.contextId}>${titleForContext(context)}</option>\n          `)}\n        </select>\n      </devtools-toolbar>\n    </div>\n    <div class=\"web-audio-content-container vbox flex-auto\">\n      ${!selectedContext ? html`\n        <div class=\"web-audio-details-container vbox flex-auto\">\n          <devtools-widget .widgetConfig=${widgetConfig(UI.EmptyWidget.EmptyWidget,\n            {header: i18nString(UIStrings.noWebAudio),\n              text: i18nString(UIStrings.openAPageThatUsesWebAudioApiTo),\n            link: WEBAUDIO_EXPLANATION_URL,\n          })}>\n          </devtools-widget>\n        </div>` : html`<div class=\"web-audio-details-container vbox flex-auto\">\n          <div class=\"context-detail-container\">\n            <div class=\"context-detail-header\">\n              <div class=\"context-detail-title\">\n                ${selectedContext.contextType === 'realtime' ? i18n.i18n.lockedString('AudioContext')\n                                                             : i18n.i18n.lockedString('OfflineAudioContext')}\n              </div>\n              <div class=\"context-detail-subtitle\">${selectedContext.contextId}</div>\n            </div>\n            <div class=\"context-detail-row\">\n              <div class=\"context-detail-row-entry\">${i18nString(UIStrings.state)}</div>\n              <div class=\"context-detail-row-value\">${selectedContext.contextState}</div>\n            </div>\n            <div class=\"context-detail-row\">\n              <div class=\"context-detail-row-entry\">${i18nString(UIStrings.sampleRate)}</div>\n              <div class=\"context-detail-row-value\">${selectedContext.sampleRate} Hz</div>\n            </div>\n            ${selectedContext.contextType === 'realtime' ? html`\n              <div class=\"context-detail-row\">\n                <div class=\"context-detail-row-entry\">${i18nString(UIStrings.callbackBufferSize)}</div>\n                <div class=\"context-detail-row-value\">${selectedContext.callbackBufferSize} frames</div>\n              </div>` : ''}\n            <div class=\"context-detail-row\">\n              <div class=\"context-detail-row-entry\">${i18nString(UIStrings.maxOutputChannels)}</div>\n              <div class=\"context-detail-row-value\">${selectedContext.maxOutputChannelCount} ch</div>\n            </div>\n          </div>\n        </div>`}\n      <div class=\"web-audio-summary-container\">\n        ${contextRealtimeData ?\n            html`<div class=\"context-summary-container\">\n            <span>${i18nString(UIStrings.currentTime)}: ${contextRealtimeData.currentTime.toFixed(3)} s</span>\n            <span>\\u2758</span>\n            <span>${i18nString(UIStrings.callbackInterval)}: μ = ${\n                (contextRealtimeData.callbackIntervalMean * 1000).toFixed(3)} ms, σ = ${\n                (Math.sqrt(contextRealtimeData.callbackIntervalVariance) * 1000).toFixed(3)} ms</span>\n            <span>\\u2758</span>\n            <span>${i18nString(UIStrings.renderCapacity)}: ${\n                (contextRealtimeData.renderCapacity * 100).toFixed(3)} %</span>\n          </div>` : ''}\n      </div>\n    </div>`, target);\n  // clang-format on\n};\n\nexport class WebAudioView extends UI.Widget.VBox implements SDK.TargetManager.SDKModelObserver<WebAudioModel> {\n  private readonly knownContexts = new Set<string>();\n  private readonly contextSelectorItems: UI.ListModel.ListModel<Protocol.WebAudio.BaseAudioContext>;\n  private contextRealtimeData: Protocol.WebAudio.ContextRealtimeData|null = null;\n  private readonly view: View;\n  private selectedContextIndex = -1;\n  private readonly pollRealtimeDataThrottler: Common.Throttler.Throttler;\n\n  constructor(element?: HTMLElement, view = DEFAULT_VIEW) {\n    super({jslog: `${VisualLogging.panel('web-audio').track({resize: true})}`, useShadowDom: true});\n    this.view = view;\n\n    this.contextSelectorItems = new UI.ListModel.ListModel();\n    this.contextSelectorItems.addEventListener(UI.ListModel.Events.ITEMS_REPLACED, this.requestUpdate, this);\n\n    SDK.TargetManager.TargetManager.instance().observeModels(WebAudioModel, this);\n    this.pollRealtimeDataThrottler = new Common.Throttler.Throttler(1000);\n    this.performUpdate();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      this.addEventListeners(model);\n    }\n  }\n\n  override willHide(): void {\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      this.removeEventListeners(model);\n    }\n  }\n\n  modelAdded(webAudioModel: WebAudioModel): void {\n    if (this.isShowing()) {\n      this.addEventListeners(webAudioModel);\n    }\n  }\n\n  modelRemoved(webAudioModel: WebAudioModel): void {\n    this.removeEventListeners(webAudioModel);\n  }\n\n  override performUpdate(): void {\n    const input = {\n      contexts: [...this.contextSelectorItems],\n      selectedContextIndex: this.selectedContextIndex,\n      onContextSelectorSelectionChanged: this.onContextSelectorSelectionChanged.bind(this),\n      contextRealtimeData: this.contextRealtimeData,\n    };\n    this.view(input, {}, this.contentElement);\n  }\n\n  private addEventListeners(webAudioModel: WebAudioModel): void {\n    webAudioModel.ensureEnabled();\n    webAudioModel.addEventListener(ModelEvents.CONTEXT_CREATED, this.contextCreated, this);\n    webAudioModel.addEventListener(ModelEvents.CONTEXT_DESTROYED, this.contextDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.CONTEXT_CHANGED, this.contextChanged, this);\n    webAudioModel.addEventListener(ModelEvents.MODEL_RESET, this.reset, this);\n  }\n\n  private removeEventListeners(webAudioModel: WebAudioModel): void {\n    webAudioModel.removeEventListener(ModelEvents.CONTEXT_CREATED, this.contextCreated, this);\n    webAudioModel.removeEventListener(ModelEvents.CONTEXT_DESTROYED, this.contextDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.CONTEXT_CHANGED, this.contextChanged, this);\n    webAudioModel.removeEventListener(ModelEvents.MODEL_RESET, this.reset, this);\n  }\n\n  private onContextSelectorSelectionChanged(contextId: string): void {\n    this.selectedContextIndex = this.contextSelectorItems.findIndex(context => context.contextId === contextId);\n    void this.pollRealtimeDataThrottler.schedule(this.pollRealtimeData.bind(this));\n    this.requestUpdate();\n  }\n\n  private contextCreated(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext>): void {\n    const context = event.data;\n    this.knownContexts.add(context.contextId);\n    this.contextSelectorItems.insert(this.contextSelectorItems.length, context);\n    if (this.selectedContextIndex === -1) {\n      this.selectedContextIndex = this.contextSelectorItems.length - 1;\n      void this.pollRealtimeDataThrottler.schedule(this.pollRealtimeData.bind(this));\n    }\n    this.requestUpdate();\n  }\n\n  private contextDestroyed(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.GraphObjectId>): void {\n    const contextId = event.data;\n    this.knownContexts.delete(contextId);\n    const index = this.contextSelectorItems.findIndex(context => context.contextId === contextId);\n    if (index > -1) {\n      const selectedContext =\n          this.selectedContextIndex > -1 ? this.contextSelectorItems.at(this.selectedContextIndex) : null;\n      this.contextSelectorItems.remove(index);\n      const newSelectedIndex = selectedContext ? this.contextSelectorItems.indexOf(selectedContext) : -1;\n      if (newSelectedIndex > -1) {\n        this.selectedContextIndex = newSelectedIndex;\n      } else {\n        this.selectedContextIndex = Math.min(index, this.contextSelectorItems.length - 1);\n      }\n    }\n    this.requestUpdate();\n  }\n\n  private contextChanged(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext>): void {\n    const context = event.data;\n    if (!this.knownContexts.has(context.contextId)) {\n      return;\n    }\n\n    const changedContext = event.data;\n    const index = this.contextSelectorItems.findIndex(context => context.contextId === changedContext.contextId);\n    if (index > -1) {\n      this.contextSelectorItems.replace(index, changedContext);\n    }\n    this.requestUpdate();\n  }\n\n  private reset(): void {\n    this.contextSelectorItems.replaceAll([]);\n    this.selectedContextIndex = -1;\n\n    this.knownContexts.clear();\n    this.requestUpdate();\n  }\n\n  private setContextRealtimeData(contextRealtimeData: Protocol.WebAudio.ContextRealtimeData|null): void {\n    this.contextRealtimeData = contextRealtimeData;\n    this.requestUpdate();\n  }\n\n  private async pollRealtimeData(): Promise<void> {\n    if (this.selectedContextIndex < 0) {\n      this.setContextRealtimeData(null);\n      return;\n    }\n\n    const context = this.contextSelectorItems.at(this.selectedContextIndex);\n    if (!context) {\n      this.setContextRealtimeData(null);\n      return;\n    }\n\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      // Display summary only for real-time context.\n      if (context.contextType === 'realtime') {\n        if (!this.knownContexts.has(context.contextId)) {\n          continue;\n        }\n        const realtimeData = await model.requestRealtimeData(context.contextId);\n        if (realtimeData) {\n          this.setContextRealtimeData(realtimeData);\n        }\n        void this.pollRealtimeDataThrottler.schedule(this.pollRealtimeData.bind(this));\n      } else {\n        this.setContextRealtimeData(null);\n      }\n    }\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: hidden;\n}\n\n.web-audio-toolbar-container {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n  min-height: fit-content;\n}\n\n.web-audio-landing-page {\n  position: absolute;\n  background-color: var(--sys-color-cdt-base-container);\n  justify-content: center;\n  align-items: center;\n  overflow: auto;\n  font-size: 13px;\n  color: var(--sys-color-on-surface);\n}\n\n.web-audio-landing-page > div {\n  max-width: 500px;\n  margin: 10px;\n}\n\n.web-audio-landing-page > div > p {\n  flex: none;\n  white-space: pre-line;\n}\n\n.web-audio-content-container {\n  overflow-y: auto;\n}\n\n.web-audio-details-container {\n  min-height: fit-content;\n}\n\n.web-audio-summary-container {\n  flex-shrink: 0;\n}\n\n.context-detail-container {\n  flex: none;\n  display: flex;\n  background-color: var(--sys-color-cdt-base-container);\n  flex-direction: column;\n}\n\n.context-detail-header {\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding: var(--sys-size-7) var(--sys-size-9);\n  margin-bottom: var(--sys-size-5);\n}\n\n.context-detail-title {\n  font: var(--sys-typescale-headline4);\n}\n\n.context-detail-subtitle {\n  font: var(--sys-typescale-body4-regular);\n  user-select: text;\n}\n\n.context-detail-row {\n  grid-template-columns: min-content 1fr;\n  display: grid;\n  line-height: 18px;\n  margin: var(--sys-size-3) var(--sys-size-9) var(--sys-size-3) var(--sys-size-9);\n  gap:  var(--sys-size-6);\n}\n\n.context-detail-row-entry:not(:empty) {\n  color: var(--sys-color-on-surface-subtle);\n  overflow: hidden;\n  min-width: 130px;\n  font: var(--sys-typescale-body5-medium);\n}\n\n.context-detail-row-value {\n  user-select: text;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  font: var(--sys-typescale-body4-regular);\n}\n\n.context-summary-container {\n  flex: 0 0 27px;\n  line-height: 27px;\n  padding-left: 5px;\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.context-summary-container span {\n  margin-right: 6px;\n}\n\n/*# sourceURL=${import.meta.resolve('./webAudio.css')} */`;"],
  "mappings": "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",
  "names": ["SDK", "context"]
}
