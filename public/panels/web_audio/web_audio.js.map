{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/web_audio/AudioContextContentBuilder.ts", "../../../../../../front_end/panels/web_audio/AudioContextSelector.ts", "../../../../../../front_end/panels/web_audio/WebAudioModel.ts", "../../../../../../front_end/panels/web_audio/WebAudioView.ts", "webAudio.css.js", "web_audio.prebundle.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n   * @description The current state of an item\n   */\n  state: 'State',\n  /**\n   * @description Text in Audio Context Content Builder\n   */\n  sampleRate: 'Sample Rate',\n  /**\n   * @description Text in Audio Context Content Builder\n   */\n  callbackBufferSize: 'Callback Buffer Size',\n  /**\n   * @description Label in the Audio Context Content Builder for the maximum number of output channels\n   * that this Audio Context has.\n   */\n  maxOutputChannels: 'Max Output Channels',\n  /**\n   * @description Text in Audio Context Content Builder\n   */\n  currentTime: 'Current Time',\n  /**\n   * @description Text in Audio Context Content Builder\n   */\n  callbackInterval: 'Callback Interval',\n  /**\n   * @description Text in Audio Context Content Builder\n   */\n  renderCapacity: 'Render Capacity',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/AudioContextContentBuilder.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ContextDetailBuilder {\n  private readonly fragment: DocumentFragment;\n  private readonly container: HTMLDivElement;\n  constructor(context: Protocol.WebAudio.BaseAudioContext) {\n    this.fragment = document.createDocumentFragment();\n    this.container = document.createElement('div');\n    this.container.classList.add('context-detail-container');\n    this.fragment.appendChild(this.container);\n    this.build(context);\n  }\n\n  private build(context: Protocol.WebAudio.BaseAudioContext): void {\n    const title = context.contextType === 'realtime' ? i18n.i18n.lockedString('AudioContext') :\n                                                       i18n.i18n.lockedString('OfflineAudioContext');\n    this.addTitle(title, context.contextId);\n    this.addEntry(i18nString(UIStrings.state), context.contextState);\n    this.addEntry(i18nString(UIStrings.sampleRate), context.sampleRate, 'Hz');\n    if (context.contextType === 'realtime') {\n      this.addEntry(i18nString(UIStrings.callbackBufferSize), context.callbackBufferSize, 'frames');\n    }\n    this.addEntry(i18nString(UIStrings.maxOutputChannels), context.maxOutputChannelCount, 'ch');\n  }\n\n  private addTitle(title: string, subtitle: string): void {\n    this.container.appendChild(UI.Fragment.html`\n  <div class=\"context-detail-header\">\n  <div class=\"context-detail-title\">${title}</div>\n  <div class=\"context-detail-subtitle\">${subtitle}</div>\n  </div>\n  `);\n  }\n\n  private addEntry(entry: string, value: string|number, unit?: string|undefined): void {\n    const valueWithUnit = value + (unit ? ` ${unit}` : '');\n    this.container.appendChild(UI.Fragment.html`\n  <div class=\"context-detail-row\">\n  <div class=\"context-detail-row-entry\">${entry}</div>\n  <div class=\"context-detail-row-value\">${valueWithUnit}</div>\n  </div>\n  `);\n  }\n\n  getFragment(): DocumentFragment {\n    return this.fragment;\n  }\n}\n\nexport class ContextSummaryBuilder {\n  private readonly fragment: DocumentFragment;\n  constructor(contextRealtimeData: Protocol.WebAudio.ContextRealtimeData) {\n    const time = contextRealtimeData.currentTime.toFixed(3);\n    const mean = (contextRealtimeData.callbackIntervalMean * 1000).toFixed(3);\n    const stddev = (Math.sqrt(contextRealtimeData.callbackIntervalVariance) * 1000).toFixed(3);\n    const capacity = (contextRealtimeData.renderCapacity * 100).toFixed(3);\n    this.fragment = document.createDocumentFragment();\n    this.fragment.appendChild(UI.Fragment.html`\n  <div class=\"context-summary-container\">\n  <span>${i18nString(UIStrings.currentTime)}: ${time} s</span>\n  <span>\\u2758</span>\n  <span>${i18nString(UIStrings.callbackInterval)}: μ = ${mean} ms, σ = ${stddev} ms</span>\n  <span>\\u2758</span>\n  <span>${i18nString(UIStrings.renderCapacity)}: ${capacity} %</span>\n  </div>\n  `);\n  }\n\n  getFragment(): DocumentFragment {\n    return this.fragment;\n  }\n}\n", "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n   * @description Text that shows there is no recording\n   */\n  noRecordings: '(no recordings)',\n  /**\n   * @description Label prefix for an audio context selection\n   * @example {realtime (1e03ec)} PH1\n   */\n  audioContextS: 'Audio context: {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/AudioContextSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class AudioContextSelector extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private readonly placeholderText: Platform.UIString.LocalizedString;\n  private readonly selectElement: HTMLSelectElement;\n  private readonly items: UI.ListModel.ListModel<Protocol.WebAudio.BaseAudioContext>;\n  private readonly toolbarItemInternal: UI.Toolbar.ToolbarItem;\n\n  constructor() {\n    super();\n\n    this.placeholderText = i18nString(UIStrings.noRecordings);\n    this.items = new UI.ListModel.ListModel();\n    this.selectElement = document.createElement('select');\n    this.toolbarItemInternal = new UI.Toolbar.ToolbarItem(this.selectElement);\n    this.toolbarItemInternal.setTitle(i18nString(UIStrings.audioContextS, {PH1: this.placeholderText}));\n    this.selectElement.addEventListener('change', this.onSelectionChanged.bind(this));\n    this.selectElement.disabled = true;\n    this.addPlaceholderOption();\n\n    this.items.addEventListener(UI.ListModel.Events.ITEMS_REPLACED, this.onListItemReplaced, this);\n  }\n\n  private addPlaceholderOption(): void {\n    const placeholderOption = UI.Fragment.html`\n    <option value=\"\" hidden>${this.placeholderText}</option>`;\n    this.selectElement.appendChild(placeholderOption);\n  }\n\n  private onListItemReplaced(): void {\n    this.selectElement.removeChildren();\n\n    if (this.items.length === 0) {\n      this.addPlaceholderOption();\n      this.selectElement.disabled = true;\n      this.onSelectionChanged();\n      return;\n    }\n\n    for (const context of this.items) {\n      const option = UI.Fragment.html`\n    <option value=${context.contextId}>${this.titleFor(context)}</option>`;\n      this.selectElement.appendChild(option);\n    }\n    this.selectElement.disabled = false;\n    this.onSelectionChanged();\n  }\n\n  contextCreated({data: context}: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext>): void {\n    this.items.insert(this.items.length, context);\n    this.onListItemReplaced();\n  }\n\n  contextDestroyed({data: contextId}: Common.EventTarget.EventTargetEvent<string>): void {\n    const index = this.items.findIndex(context => context.contextId === contextId);\n    if (index !== -1) {\n      this.items.remove(index);\n      this.onListItemReplaced();\n    }\n  }\n\n  contextChanged({data: changedContext}: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext>):\n      void {\n    const index = this.items.findIndex(context => context.contextId === changedContext.contextId);\n    if (index !== -1) {\n      this.items.replace(index, changedContext);\n      this.onListItemReplaced();\n    }\n  }\n\n  selectedContext(): Protocol.WebAudio.BaseAudioContext|null {\n    const selectedValue = this.selectElement.value;\n    if (!selectedValue) {\n      return null;\n    }\n    return this.items.find(context => context.contextId === selectedValue) || null;\n  }\n\n  onSelectionChanged(): void {\n    const selectedContext = this.selectedContext();\n    if (selectedContext) {\n      this.toolbarItemInternal.setTitle(i18nString(UIStrings.audioContextS, {PH1: this.titleFor(selectedContext)}));\n    } else {\n      this.toolbarItemInternal.setTitle(i18nString(UIStrings.audioContextS, {PH1: this.placeholderText}));\n    }\n    this.dispatchEventToListeners(Events.CONTEXT_SELECTED, selectedContext);\n  }\n\n  itemSelected(item: Protocol.WebAudio.BaseAudioContext|null): void {\n    if (!item) {\n      return;\n    }\n    this.selectElement.value = item.contextId;\n    this.onSelectionChanged();\n  }\n\n  reset(): void {\n    this.items.replaceAll([]);\n    this.onListItemReplaced();\n  }\n\n  titleFor(context: Protocol.WebAudio.BaseAudioContext): string {\n    return `${context.contextType} (${context.contextId.substr(-6)})`;\n  }\n\n  toolbarItem(): UI.Toolbar.ToolbarItem {\n    return this.toolbarItemInternal;\n  }\n}\n\nexport const enum Events {\n  CONTEXT_SELECTED = 'ContextSelected',\n}\n\nexport interface EventTypes {\n  [Events.CONTEXT_SELECTED]: Protocol.WebAudio.BaseAudioContext|null;\n}\n", "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class WebAudioModel extends SDK.SDKModel.SDKModel<EventTypes> implements ProtocolProxyApi.WebAudioDispatcher {\n  private enabled: boolean;\n  private readonly agent: ProtocolProxyApi.WebAudioApi;\n  constructor(target: SDK.Target.Target) {\n    super(target);\n\n    this.enabled = false;\n\n    this.agent = target.webAudioAgent();\n    target.registerWebAudioDispatcher(this);\n\n    // TODO(crbug.com/963510): Some OfflineAudioContexts are not uninitialized\n    // properly because LifeCycleObserver::ContextDestroyed() is not fired for\n    // unknown reasons. This creates inconsistency in AudioGraphTracer\n    // and AudioContextSelector in DevTools.\n    //\n    // To resolve this inconsistency, we flush the leftover from the previous\n    // frame when the current page is loaded. This call can be omitted when the\n    // bug is fixed.\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.FrameNavigated, this.flushContexts, this);\n  }\n\n  private flushContexts(): void {\n    this.dispatchEventToListeners(Events.MODEL_RESET);\n  }\n\n  override async suspendModel(): Promise<void> {\n    this.dispatchEventToListeners(Events.MODEL_SUSPEND);\n    await this.agent.invoke_disable();\n  }\n\n  override async resumeModel(): Promise<void> {\n    if (!this.enabled) {\n      return await Promise.resolve();\n    }\n    await this.agent.invoke_enable();\n  }\n\n  ensureEnabled(): void {\n    if (this.enabled) {\n      return;\n    }\n    void this.agent.invoke_enable();\n    this.enabled = true;\n  }\n\n  contextCreated({context}: Protocol.WebAudio.ContextCreatedEvent): void {\n    this.dispatchEventToListeners(Events.CONTEXT_CREATED, context);\n  }\n\n  contextWillBeDestroyed({contextId}: Protocol.WebAudio.ContextWillBeDestroyedEvent): void {\n    this.dispatchEventToListeners(Events.CONTEXT_DESTROYED, contextId);\n  }\n\n  contextChanged({context}: Protocol.WebAudio.ContextChangedEvent): void {\n    this.dispatchEventToListeners(Events.CONTEXT_CHANGED, context);\n  }\n\n  audioListenerCreated({listener}: Protocol.WebAudio.AudioListenerCreatedEvent): void {\n    this.dispatchEventToListeners(Events.AUDIO_LISTENER_CREATED, listener);\n  }\n\n  audioListenerWillBeDestroyed({listenerId, contextId}: Protocol.WebAudio.AudioListenerWillBeDestroyedEvent): void {\n    this.dispatchEventToListeners(Events.AUDIO_LISTENER_WILL_BE_DESTROYED, {listenerId, contextId});\n  }\n\n  audioNodeCreated({node}: Protocol.WebAudio.AudioNodeCreatedEvent): void {\n    this.dispatchEventToListeners(Events.AUDIO_NODE_CREATED, node);\n  }\n\n  audioNodeWillBeDestroyed({contextId, nodeId}: Protocol.WebAudio.AudioNodeWillBeDestroyedEvent): void {\n    this.dispatchEventToListeners(Events.AUDIO_NODE_WILL_BE_DESTROYED, {contextId, nodeId});\n  }\n\n  audioParamCreated({param}: Protocol.WebAudio.AudioParamCreatedEvent): void {\n    this.dispatchEventToListeners(Events.AUDIO_PARAM_CREATED, param);\n  }\n\n  audioParamWillBeDestroyed({contextId, nodeId, paramId}: Protocol.WebAudio.AudioParamWillBeDestroyedEvent): void {\n    this.dispatchEventToListeners(Events.AUDIO_PARAM_WILL_BE_DESTROYED, {contextId, nodeId, paramId});\n  }\n\n  nodesConnected({contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex}:\n                     Protocol.WebAudio.NodesConnectedEvent): void {\n    this.dispatchEventToListeners(\n        Events.NODES_CONNECTED, {contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex});\n  }\n\n  nodesDisconnected({contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex}:\n                        Protocol.WebAudio.NodesDisconnectedEvent): void {\n    this.dispatchEventToListeners(\n        Events.NODES_DISCONNECTED, {contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex});\n  }\n\n  nodeParamConnected({contextId, sourceId, destinationId, sourceOutputIndex}:\n                         Protocol.WebAudio.NodeParamConnectedEvent): void {\n    this.dispatchEventToListeners(Events.NODE_PARAM_CONNECTED, {contextId, sourceId, destinationId, sourceOutputIndex});\n  }\n\n  nodeParamDisconnected({contextId, sourceId, destinationId, sourceOutputIndex}:\n                            Protocol.WebAudio.NodeParamDisconnectedEvent): void {\n    this.dispatchEventToListeners(\n        Events.NODE_PARAM_DISCONNECTED, {contextId, sourceId, destinationId, sourceOutputIndex});\n  }\n\n  async requestRealtimeData(contextId: Protocol.WebAudio.GraphObjectId):\n      Promise<Protocol.WebAudio.ContextRealtimeData|null> {\n    const realtimeResponse = await this.agent.invoke_getRealtimeData({contextId});\n    return realtimeResponse.realtimeData;\n  }\n}\n\nSDK.SDKModel.SDKModel.register(WebAudioModel, {capabilities: SDK.Target.Capability.DOM, autostart: false});\n\nexport const enum Events {\n  CONTEXT_CREATED = 'ContextCreated',\n  CONTEXT_DESTROYED = 'ContextDestroyed',\n  CONTEXT_CHANGED = 'ContextChanged',\n  MODEL_RESET = 'ModelReset',\n  MODEL_SUSPEND = 'ModelSuspend',\n  AUDIO_LISTENER_CREATED = 'AudioListenerCreated',\n  AUDIO_LISTENER_WILL_BE_DESTROYED = 'AudioListenerWillBeDestroyed',\n  AUDIO_NODE_CREATED = 'AudioNodeCreated',\n  AUDIO_NODE_WILL_BE_DESTROYED = 'AudioNodeWillBeDestroyed',\n  AUDIO_PARAM_CREATED = 'AudioParamCreated',\n  AUDIO_PARAM_WILL_BE_DESTROYED = 'AudioParamWillBeDestroyed',\n  NODES_CONNECTED = 'NodesConnected',\n  NODES_DISCONNECTED = 'NodesDisconnected',\n  NODE_PARAM_CONNECTED = 'NodeParamConnected',\n  NODE_PARAM_DISCONNECTED = 'NodeParamDisconnected',\n}\n\nexport interface EventTypes {\n  [Events.CONTEXT_CREATED]: Protocol.WebAudio.BaseAudioContext;\n  [Events.CONTEXT_DESTROYED]: Protocol.WebAudio.GraphObjectId;\n  [Events.CONTEXT_CHANGED]: Protocol.WebAudio.BaseAudioContext;\n  [Events.MODEL_RESET]: void;\n  [Events.MODEL_SUSPEND]: void;\n  [Events.AUDIO_LISTENER_CREATED]: Protocol.WebAudio.AudioListener;\n  [Events.AUDIO_LISTENER_WILL_BE_DESTROYED]: Protocol.WebAudio.AudioListenerWillBeDestroyedEvent;\n  [Events.AUDIO_NODE_CREATED]: Protocol.WebAudio.AudioNode;\n  [Events.AUDIO_NODE_WILL_BE_DESTROYED]: Protocol.WebAudio.AudioNodeWillBeDestroyedEvent;\n  [Events.AUDIO_PARAM_CREATED]: Protocol.WebAudio.AudioParam;\n  [Events.AUDIO_PARAM_WILL_BE_DESTROYED]: Protocol.WebAudio.AudioParamWillBeDestroyedEvent;\n  [Events.NODES_CONNECTED]: Protocol.WebAudio.NodesConnectedEvent;\n  [Events.NODES_DISCONNECTED]: Protocol.WebAudio.NodesDisconnectedEvent;\n  [Events.NODE_PARAM_CONNECTED]: Protocol.WebAudio.NodeParamConnectedEvent;\n  [Events.NODE_PARAM_DISCONNECTED]: Protocol.WebAudio.NodeParamDisconnectedEvent;\n}\n", "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/legacy/legacy.js';\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ContextDetailBuilder, ContextSummaryBuilder} from './AudioContextContentBuilder.js';\nimport {AudioContextSelector, Events as SelectorEvents} from './AudioContextSelector.js';\nimport * as GraphVisualizer from './graph_visualizer/graph_visualizer.js';\nimport webAudioStyles from './webAudio.css.js';\nimport {Events as ModelEvents, WebAudioModel} from './WebAudioModel.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Web Audio View if there is nothing to show.\n   * Web Audio API is an API for controlling audio on the web.\n   */\n  noWebAudio: 'No Web Audio API usage detected',\n  /**\n   * @description Text in Web Audio View\n   */\n  openAPageThatUsesWebAudioApiTo: 'Open a page that uses Web Audio API to start monitoring.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/WebAudioView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst WEBAUDIO_EXPLANATION_URL =\n    'https://developer.chrome.com/docs/devtools/webaudio' as Platform.DevToolsPath.UrlString;\n\nexport class WebAudioView extends UI.ThrottledWidget.ThrottledWidget implements\n    SDK.TargetManager.SDKModelObserver<WebAudioModel> {\n  private readonly contextSelector: AudioContextSelector;\n  private readonly contentContainer: HTMLElement;\n  private readonly detailViewContainer: HTMLElement;\n  private graphManager: GraphVisualizer.GraphManager.GraphManager;\n  private readonly landingPage: UI.EmptyWidget.EmptyWidget;\n  private readonly summaryBarContainer: HTMLElement;\n  constructor() {\n    super(true, 1000);\n    this.registerRequiredCSS(webAudioStyles);\n    this.element.setAttribute('jslog', `${VisualLogging.panel('web-audio').track({resize: true})}`);\n    this.element.classList.add('web-audio-drawer');\n\n    // Creates the toolbar.\n    const toolbarContainer = this.contentElement.createChild('div', 'web-audio-toolbar-container vbox');\n    toolbarContainer.role = 'toolbar';\n    this.contextSelector = new AudioContextSelector();\n    const toolbar = toolbarContainer.createChild('devtools-toolbar', 'web-audio-toolbar');\n    toolbar.role = 'presentation';\n    toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton('components.collect-garbage'));\n    toolbar.appendSeparator();\n    toolbar.appendToolbarItem(this.contextSelector.toolbarItem());\n    toolbar.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n\n    // Create content container\n    this.contentContainer = this.contentElement.createChild('div', 'web-audio-content-container vbox flex-auto');\n\n    // Creates the detail view.\n    this.detailViewContainer = this.contentContainer.createChild('div', 'web-audio-details-container vbox flex-auto');\n\n    this.graphManager = new GraphVisualizer.GraphManager.GraphManager();\n\n    // Creates the landing page.\n    this.landingPage = new UI.EmptyWidget.EmptyWidget(\n        i18nString(UIStrings.noWebAudio), i18nString(UIStrings.openAPageThatUsesWebAudioApiTo));\n    this.landingPage.link = WEBAUDIO_EXPLANATION_URL;\n    this.landingPage.show(this.detailViewContainer);\n\n    // Creates the summary bar.\n    this.summaryBarContainer = this.contentContainer.createChild('div', 'web-audio-summary-container');\n\n    this.contextSelector.addEventListener(\n        SelectorEvents.CONTEXT_SELECTED,\n        (event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext|null>) => {\n          const context = event.data;\n          this.updateDetailView(context);\n          void this.doUpdate();\n        });\n\n    SDK.TargetManager.TargetManager.instance().observeModels(WebAudioModel, this);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      this.addEventListeners(model);\n    }\n  }\n\n  override willHide(): void {\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      this.removeEventListeners(model);\n    }\n  }\n\n  modelAdded(webAudioModel: WebAudioModel): void {\n    if (this.isShowing()) {\n      this.addEventListeners(webAudioModel);\n    }\n  }\n\n  modelRemoved(webAudioModel: WebAudioModel): void {\n    this.removeEventListeners(webAudioModel);\n  }\n\n  override async doUpdate(): Promise<void> {\n    await this.pollRealtimeData();\n    this.update();\n  }\n\n  private addEventListeners(webAudioModel: WebAudioModel): void {\n    webAudioModel.ensureEnabled();\n    webAudioModel.addEventListener(ModelEvents.CONTEXT_CREATED, this.contextCreated, this);\n    webAudioModel.addEventListener(ModelEvents.CONTEXT_DESTROYED, this.contextDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.CONTEXT_CHANGED, this.contextChanged, this);\n    webAudioModel.addEventListener(ModelEvents.MODEL_RESET, this.reset, this);\n    webAudioModel.addEventListener(ModelEvents.MODEL_SUSPEND, this.suspendModel, this);\n    webAudioModel.addEventListener(ModelEvents.AUDIO_LISTENER_CREATED, this.audioListenerCreated, this);\n    webAudioModel.addEventListener(\n        ModelEvents.AUDIO_LISTENER_WILL_BE_DESTROYED, this.audioListenerWillBeDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.AUDIO_NODE_CREATED, this.audioNodeCreated, this);\n    webAudioModel.addEventListener(ModelEvents.AUDIO_NODE_WILL_BE_DESTROYED, this.audioNodeWillBeDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.AUDIO_PARAM_CREATED, this.audioParamCreated, this);\n    webAudioModel.addEventListener(ModelEvents.AUDIO_PARAM_WILL_BE_DESTROYED, this.audioParamWillBeDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.NODES_CONNECTED, this.nodesConnected, this);\n    webAudioModel.addEventListener(ModelEvents.NODES_DISCONNECTED, this.nodesDisconnected, this);\n    webAudioModel.addEventListener(ModelEvents.NODE_PARAM_CONNECTED, this.nodeParamConnected, this);\n    webAudioModel.addEventListener(ModelEvents.NODE_PARAM_DISCONNECTED, this.nodeParamDisconnected, this);\n  }\n\n  private removeEventListeners(webAudioModel: WebAudioModel): void {\n    webAudioModel.removeEventListener(ModelEvents.CONTEXT_CREATED, this.contextCreated, this);\n    webAudioModel.removeEventListener(ModelEvents.CONTEXT_DESTROYED, this.contextDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.CONTEXT_CHANGED, this.contextChanged, this);\n    webAudioModel.removeEventListener(ModelEvents.MODEL_RESET, this.reset, this);\n    webAudioModel.removeEventListener(ModelEvents.MODEL_SUSPEND, this.suspendModel, this);\n    webAudioModel.removeEventListener(ModelEvents.AUDIO_LISTENER_CREATED, this.audioListenerCreated, this);\n    webAudioModel.removeEventListener(\n        ModelEvents.AUDIO_LISTENER_WILL_BE_DESTROYED, this.audioListenerWillBeDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.AUDIO_NODE_CREATED, this.audioNodeCreated, this);\n    webAudioModel.removeEventListener(ModelEvents.AUDIO_NODE_WILL_BE_DESTROYED, this.audioNodeWillBeDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.AUDIO_PARAM_CREATED, this.audioParamCreated, this);\n    webAudioModel.removeEventListener(ModelEvents.AUDIO_PARAM_WILL_BE_DESTROYED, this.audioParamWillBeDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.NODES_CONNECTED, this.nodesConnected, this);\n    webAudioModel.removeEventListener(ModelEvents.NODES_DISCONNECTED, this.nodesDisconnected, this);\n    webAudioModel.removeEventListener(ModelEvents.NODE_PARAM_CONNECTED, this.nodeParamConnected, this);\n    webAudioModel.removeEventListener(ModelEvents.NODE_PARAM_DISCONNECTED, this.nodeParamDisconnected, this);\n  }\n\n  private contextCreated(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext>): void {\n    const context = event.data;\n    this.graphManager.createContext(context.contextId);\n    this.contextSelector.contextCreated(event);\n  }\n\n  private contextDestroyed(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.GraphObjectId>): void {\n    const contextId = event.data;\n    this.graphManager.destroyContext(contextId);\n    this.contextSelector.contextDestroyed(event);\n  }\n\n  private contextChanged(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext>): void {\n    const context = event.data;\n    if (!this.graphManager.hasContext(context.contextId)) {\n      return;\n    }\n\n    this.contextSelector.contextChanged(event);\n  }\n\n  private reset(): void {\n    this.contextSelector.reset();\n    if (this.landingPage.isShowing()) {\n      this.landingPage.detach();\n    }\n    this.detailViewContainer.removeChildren();\n    this.landingPage.show(this.detailViewContainer);\n    this.graphManager.clearGraphs();\n  }\n\n  private suspendModel(): void {\n    this.graphManager.clearGraphs();\n  }\n\n  private audioListenerCreated(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.AudioListener>): void {\n    const listener = event.data;\n    const graph = this.graphManager.getGraph(listener.contextId);\n    if (!graph) {\n      return;\n    }\n    graph.addNode({\n      nodeId: listener.listenerId,\n      nodeType: 'Listener',\n      numberOfInputs: 0,\n      numberOfOutputs: 0,\n    });\n  }\n\n  private audioListenerWillBeDestroyed(\n      event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.AudioListenerWillBeDestroyedEvent>): void {\n    const {contextId, listenerId} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.removeNode(listenerId);\n  }\n\n  private audioNodeCreated(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.AudioNode>): void {\n    const node = event.data;\n    const graph = this.graphManager.getGraph(node.contextId);\n    if (!graph) {\n      return;\n    }\n    graph.addNode({\n      nodeId: node.nodeId,\n      nodeType: node.nodeType,\n      numberOfInputs: node.numberOfInputs,\n      numberOfOutputs: node.numberOfOutputs,\n    });\n  }\n\n  private audioNodeWillBeDestroyed(\n      event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.AudioNodeWillBeDestroyedEvent>): void {\n    const {contextId, nodeId} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.removeNode(nodeId);\n  }\n\n  private audioParamCreated(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.AudioParam>): void {\n    const param = event.data;\n    const graph = this.graphManager.getGraph(param.contextId);\n    if (!graph) {\n      return;\n    }\n    graph.addParam({\n      paramId: param.paramId,\n      paramType: param.paramType,\n      nodeId: param.nodeId,\n    });\n  }\n\n  private audioParamWillBeDestroyed(\n      event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.AudioParamWillBeDestroyedEvent>): void {\n    const {contextId, paramId} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.removeParam(paramId);\n  }\n\n  private nodesConnected(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.NodesConnectedEvent>): void {\n    const {contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.addNodeToNodeConnection({\n      sourceId,\n      destinationId,\n      sourceOutputIndex,\n      destinationInputIndex,\n    });\n  }\n\n  private nodesDisconnected(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.NodesDisconnectedEvent>):\n      void {\n    const {contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.removeNodeToNodeConnection({\n      sourceId,\n      destinationId,\n      sourceOutputIndex,\n      destinationInputIndex,\n    });\n  }\n\n  private nodeParamConnected(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.NodeParamConnectedEvent>):\n      void {\n    const {contextId, sourceId, destinationId, sourceOutputIndex} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    // Since the destinationId is AudioParamId, we need to find the nodeId as the\n    // real destinationId.\n    const nodeId = graph.getNodeIdByParamId(destinationId);\n    if (!nodeId) {\n      return;\n    }\n    graph.addNodeToParamConnection({\n      sourceId,\n      destinationId: nodeId,\n      sourceOutputIndex,\n      destinationParamId: destinationId,\n    });\n  }\n\n  private nodeParamDisconnected(\n      event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.NodeParamDisconnectedEvent>): void {\n    const {contextId, sourceId, destinationId, sourceOutputIndex} = event.data;\n    const graph = this.graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    // Since the destinationId is AudioParamId, we need to find the nodeId as the\n    // real destinationId.\n    const nodeId = graph.getNodeIdByParamId(destinationId);\n    if (!nodeId) {\n      return;\n    }\n    graph.removeNodeToParamConnection({\n      sourceId,\n      destinationId: nodeId,\n      sourceOutputIndex,\n      destinationParamId: destinationId,\n    });\n  }\n\n  private updateDetailView(context: Protocol.WebAudio.BaseAudioContext|null): void {\n    if (!context) {\n      this.landingPage.detach();\n      this.detailViewContainer.removeChildren();\n      this.landingPage.show(this.detailViewContainer);\n      return;\n    }\n    if (this.landingPage.isShowing()) {\n      this.landingPage.detach();\n    }\n    const detailBuilder = new ContextDetailBuilder(context);\n    this.detailViewContainer.removeChildren();\n    this.detailViewContainer.appendChild(detailBuilder.getFragment());\n  }\n\n  private updateSummaryBar(contextRealtimeData: Protocol.WebAudio.ContextRealtimeData): void {\n    const summaryBuilder = new ContextSummaryBuilder(contextRealtimeData);\n    this.summaryBarContainer.removeChildren();\n    this.summaryBarContainer.appendChild(summaryBuilder.getFragment());\n  }\n\n  private clearSummaryBar(): void {\n    this.summaryBarContainer.removeChildren();\n  }\n\n  private async pollRealtimeData(): Promise<void> {\n    const context = this.contextSelector.selectedContext();\n    if (!context) {\n      this.clearSummaryBar();\n      return;\n    }\n\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      // Display summary only for real-time context.\n      if (context.contextType === 'realtime') {\n        if (!this.graphManager.hasContext(context.contextId)) {\n          continue;\n        }\n        const realtimeData = await model.requestRealtimeData(context.contextId);\n        if (realtimeData) {\n          this.updateSummaryBar(realtimeData);\n        }\n      } else {\n        this.clearSummaryBar();\n      }\n    }\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: hidden;\n}\n\n.web-audio-toolbar-container {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n  min-height: fit-content;\n}\n\n.web-audio-landing-page {\n  position: absolute;\n  background-color: var(--sys-color-cdt-base-container);\n  justify-content: center;\n  align-items: center;\n  overflow: auto;\n  font-size: 13px;\n  color: var(--sys-color-on-surface);\n}\n\n.web-audio-landing-page > div {\n  max-width: 500px;\n  margin: 10px;\n}\n\n.web-audio-landing-page > div > p {\n  flex: none;\n  white-space: pre-line;\n}\n\n.web-audio-content-container {\n  overflow-y: auto;\n}\n\n.web-audio-details-container {\n  min-height: fit-content;\n}\n\n.web-audio-summary-container {\n  flex-shrink: 0;\n}\n\n.context-detail-container {\n  flex: none;\n  display: flex;\n  background-color: var(--sys-color-cdt-base-container);\n  flex-direction: column;\n}\n\n.context-detail-header {\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding: var(--sys-size-7) var(--sys-size-9);\n  margin-bottom: var(--sys-size-5);\n}\n\n.context-detail-title {\n  font: var(--sys-typescale-headline4);\n}\n\n.context-detail-subtitle {\n  font: var(--sys-typescale-body4-regular);\n  user-select: text;\n}\n\n.context-detail-row {\n  grid-template-columns: min-content 1fr;\n  display: grid;\n  line-height: 18px;\n  margin: var(--sys-size-3) var(--sys-size-9) var(--sys-size-3) var(--sys-size-9);\n  gap:  var(--sys-size-6);\n}\n\n.context-detail-row-entry:not(:empty) {\n  color: var(--sys-color-on-surface-subtle);\n  overflow: hidden;\n  min-width: 130px;\n  font: var(--sys-typescale-body5-medium);\n}\n\n.context-detail-row-value {\n  user-select: text;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  font: var(--sys-typescale-body4-regular);\n}\n\n.context-summary-container {\n  flex: 0 0 27px;\n  line-height: 27px;\n  padding-left: 5px;\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.context-summary-container span {\n  margin-right: 6px;\n}\n\n/*# sourceURL=${import.meta.resolve('./webAudio.css')} */`;", "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as AudioContextContentBuilder from './AudioContextContentBuilder.js';\nimport * as AudioContextSelector from './AudioContextSelector.js';\nimport * as WebAudioModel from './WebAudioModel.js';\nimport * as WebAudioView from './WebAudioView.js';\n\nexport {\n  EdgeView,\n  GraphManager,\n  GraphStyle,\n  GraphView,\n  NodeRendererUtility,\n  NodeView,\n} from './graph_visualizer/graph_visualizer.js';\nexport {\n  AudioContextContentBuilder,\n  AudioContextSelector,\n  WebAudioModel,\n  WebAudioView,\n};\n"],
  "mappings": "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",
  "names": ["i18n", "UI", "UIStrings", "str_", "i18nString", "i18n", "SDK", "UI", "UIStrings", "str_", "i18nString", "toolbar", "GraphManager"]
}
