{"version":3,"file":"WebAudioView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/web_audio/WebAudioView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport webAudioStyles from './webAudio.css.js';\nimport {Events as ModelEvents, WebAudioModel} from './WebAudioModel.js';\nconst {widgetConfig} = UI.Widget;\nconst {bindToAction} = UI.UIUtils;\n\nconst UIStrings = {\n  /**\n   * @description Text in Web Audio View if there is nothing to show.\n   * Web Audio API is an API for controlling audio on the web.\n   */\n  noWebAudio: 'No Web Audio API usage detected',\n  /**\n   * @description Text in Web Audio View\n   */\n  openAPageThatUsesWebAudioApiTo: 'Open a page that uses Web Audio API to start monitoring.',\n  /**\n   * @description Text that shows there is no recording\n   */\n  noRecordings: '(no recordings)',\n  /**\n   * @description Label prefix for an audio context selection\n   * @example {realtime (1e03ec)} PH1\n   */\n  audioContextS: 'Audio context: {PH1}',\n  /**\n   * @description The current state of an item\n   */\n  state: 'State',\n  /**\n   * @description Text in Web Audio View\n   */\n  sampleRate: 'Sample Rate',\n  /**\n   * @description Text in Web Audio View\n   */\n  callbackBufferSize: 'Callback Buffer Size',\n  /**\n   * @description Label in the Web Audio View for the maximum number of output channels\n   * that this Audio Context has.\n   */\n  maxOutputChannels: 'Max Output Channels',\n  /**\n   * @description Text in Web Audio View\n   */\n  currentTime: 'Current Time',\n  /**\n   * @description Text in Web Audio View\n   */\n  callbackInterval: 'Callback Interval',\n  /**\n   * @description Text in Web Audio View\n   */\n  renderCapacity: 'Render Capacity',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/WebAudioView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst WEBAUDIO_EXPLANATION_URL =\n    'https://developer.chrome.com/docs/devtools/webaudio' as Platform.DevToolsPath.UrlString;\n\ninterface ViewInput {\n  contexts: Protocol.WebAudio.BaseAudioContext[];\n  selectedContextIndex: number;\n  onContextSelectorSelectionChanged: (contextId: string) => void;\n  contextRealtimeData: Protocol.WebAudio.ContextRealtimeData|null;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  const {\n    contexts,\n    selectedContextIndex,\n    onContextSelectorSelectionChanged,\n    contextRealtimeData,\n  } = input;\n  const selectedContext = selectedContextIndex > -1 ? contexts[selectedContextIndex] : null;\n\n  const titleForContext = (context: Protocol.WebAudio.BaseAudioContext): string =>\n      context.contextType + ' (' + context.contextId.substr(-6) + ')';\n\n  const selectorTitle = i18nString(\n      UIStrings.audioContextS,\n      {PH1: selectedContext ? titleForContext(selectedContext) : i18nString(UIStrings.noRecordings)});\n\n  // clang-format off\n  render(html`\n    <style>${webAudioStyles}</style>\n    <div class=\"web-audio-toolbar-container vbox\" role=\"toolbar\">\n      <devtools-toolbar class=\"web-audio-toolbar\" role=\"presentation\"\n          jslog=${VisualLogging.toolbar()}>\n        <devtools-button ${bindToAction('components.collect-garbage')}></devtools-button>\n        <div class=\"toolbar-divider\"></div>\n        <select\n          title=${selectorTitle}\n          aria-label=${selectorTitle}\n          ?disabled=${contexts.length === 0}\n          @change=${(e: Event) => onContextSelectorSelectionChanged((e.target as HTMLSelectElement).value)}\n          .value=${selectedContext ? selectedContext.contextId : ''}>\n          ${contexts.length === 0\n              ? html`<option value=\"\" hidden>${i18nString(UIStrings.noRecordings)}</option>`\n              : contexts.map(context => html`\n            <option value=${context.contextId}>${titleForContext(context)}</option>\n          `)}\n        </select>\n      </devtools-toolbar>\n    </div>\n    <div class=\"web-audio-content-container vbox flex-auto\">\n      ${!selectedContext ? html`\n        <div class=\"web-audio-details-container vbox flex-auto\">\n          <devtools-widget .widgetConfig=${widgetConfig(UI.EmptyWidget.EmptyWidget,\n            {header: i18nString(UIStrings.noWebAudio),\n              text: i18nString(UIStrings.openAPageThatUsesWebAudioApiTo),\n            link: WEBAUDIO_EXPLANATION_URL,\n          })}>\n          </devtools-widget>\n        </div>` : html`<div class=\"web-audio-details-container vbox flex-auto\">\n          <div class=\"context-detail-container\">\n            <div class=\"context-detail-header\">\n              <div class=\"context-detail-title\">\n                ${selectedContext.contextType === 'realtime' ? i18n.i18n.lockedString('AudioContext')\n                                                             : i18n.i18n.lockedString('OfflineAudioContext')}\n              </div>\n              <div class=\"context-detail-subtitle\">${selectedContext.contextId}</div>\n            </div>\n            <div class=\"context-detail-row\">\n              <div class=\"context-detail-row-entry\">${i18nString(UIStrings.state)}</div>\n              <div class=\"context-detail-row-value\">${selectedContext.contextState}</div>\n            </div>\n            <div class=\"context-detail-row\">\n              <div class=\"context-detail-row-entry\">${i18nString(UIStrings.sampleRate)}</div>\n              <div class=\"context-detail-row-value\">${selectedContext.sampleRate} Hz</div>\n            </div>\n            ${selectedContext.contextType === 'realtime' ? html`\n              <div class=\"context-detail-row\">\n                <div class=\"context-detail-row-entry\">${i18nString(UIStrings.callbackBufferSize)}</div>\n                <div class=\"context-detail-row-value\">${selectedContext.callbackBufferSize} frames</div>\n              </div>` : ''}\n            <div class=\"context-detail-row\">\n              <div class=\"context-detail-row-entry\">${i18nString(UIStrings.maxOutputChannels)}</div>\n              <div class=\"context-detail-row-value\">${selectedContext.maxOutputChannelCount} ch</div>\n            </div>\n          </div>\n        </div>`}\n      <div class=\"web-audio-summary-container\">\n        ${contextRealtimeData ?\n            html`<div class=\"context-summary-container\">\n            <span>${i18nString(UIStrings.currentTime)}: ${contextRealtimeData.currentTime.toFixed(3)} s</span>\n            <span>\\u2758</span>\n            <span>${i18nString(UIStrings.callbackInterval)}: μ = ${\n                (contextRealtimeData.callbackIntervalMean * 1000).toFixed(3)} ms, σ = ${\n                (Math.sqrt(contextRealtimeData.callbackIntervalVariance) * 1000).toFixed(3)} ms</span>\n            <span>\\u2758</span>\n            <span>${i18nString(UIStrings.renderCapacity)}: ${\n                (contextRealtimeData.renderCapacity * 100).toFixed(3)} %</span>\n          </div>` : ''}\n      </div>\n    </div>`, target);\n  // clang-format on\n};\n\nexport class WebAudioView extends UI.Widget.VBox implements SDK.TargetManager.SDKModelObserver<WebAudioModel> {\n  private readonly knownContexts = new Set<string>();\n  private readonly contextSelectorItems: UI.ListModel.ListModel<Protocol.WebAudio.BaseAudioContext>;\n  private contextRealtimeData: Protocol.WebAudio.ContextRealtimeData|null = null;\n  private readonly view: View;\n  private selectedContextIndex = -1;\n  private readonly pollRealtimeDataThrottler: Common.Throttler.Throttler;\n\n  constructor(element?: HTMLElement, view = DEFAULT_VIEW) {\n    super({jslog: `${VisualLogging.panel('web-audio').track({resize: true})}`, useShadowDom: true});\n    this.view = view;\n\n    this.contextSelectorItems = new UI.ListModel.ListModel();\n    this.contextSelectorItems.addEventListener(UI.ListModel.Events.ITEMS_REPLACED, this.requestUpdate, this);\n\n    SDK.TargetManager.TargetManager.instance().observeModels(WebAudioModel, this);\n    this.pollRealtimeDataThrottler = new Common.Throttler.Throttler(1000);\n    this.performUpdate();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      this.addEventListeners(model);\n    }\n  }\n\n  override willHide(): void {\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      this.removeEventListeners(model);\n    }\n  }\n\n  modelAdded(webAudioModel: WebAudioModel): void {\n    if (this.isShowing()) {\n      this.addEventListeners(webAudioModel);\n    }\n  }\n\n  modelRemoved(webAudioModel: WebAudioModel): void {\n    this.removeEventListeners(webAudioModel);\n  }\n\n  override performUpdate(): void {\n    const input = {\n      contexts: [...this.contextSelectorItems],\n      selectedContextIndex: this.selectedContextIndex,\n      onContextSelectorSelectionChanged: this.onContextSelectorSelectionChanged.bind(this),\n      contextRealtimeData: this.contextRealtimeData,\n    };\n    this.view(input, {}, this.contentElement);\n  }\n\n  private addEventListeners(webAudioModel: WebAudioModel): void {\n    webAudioModel.ensureEnabled();\n    webAudioModel.addEventListener(ModelEvents.CONTEXT_CREATED, this.contextCreated, this);\n    webAudioModel.addEventListener(ModelEvents.CONTEXT_DESTROYED, this.contextDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.CONTEXT_CHANGED, this.contextChanged, this);\n    webAudioModel.addEventListener(ModelEvents.MODEL_RESET, this.reset, this);\n  }\n\n  private removeEventListeners(webAudioModel: WebAudioModel): void {\n    webAudioModel.removeEventListener(ModelEvents.CONTEXT_CREATED, this.contextCreated, this);\n    webAudioModel.removeEventListener(ModelEvents.CONTEXT_DESTROYED, this.contextDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.CONTEXT_CHANGED, this.contextChanged, this);\n    webAudioModel.removeEventListener(ModelEvents.MODEL_RESET, this.reset, this);\n  }\n\n  private onContextSelectorSelectionChanged(contextId: string): void {\n    this.selectedContextIndex = this.contextSelectorItems.findIndex(context => context.contextId === contextId);\n    void this.pollRealtimeDataThrottler.schedule(this.pollRealtimeData.bind(this));\n    this.requestUpdate();\n  }\n\n  private contextCreated(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext>): void {\n    const context = event.data;\n    this.knownContexts.add(context.contextId);\n    this.contextSelectorItems.insert(this.contextSelectorItems.length, context);\n    if (this.selectedContextIndex === -1) {\n      this.selectedContextIndex = this.contextSelectorItems.length - 1;\n      void this.pollRealtimeDataThrottler.schedule(this.pollRealtimeData.bind(this));\n    }\n    this.requestUpdate();\n  }\n\n  private contextDestroyed(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.GraphObjectId>): void {\n    const contextId = event.data;\n    this.knownContexts.delete(contextId);\n    const index = this.contextSelectorItems.findIndex(context => context.contextId === contextId);\n    if (index > -1) {\n      const selectedContext =\n          this.selectedContextIndex > -1 ? this.contextSelectorItems.at(this.selectedContextIndex) : null;\n      this.contextSelectorItems.remove(index);\n      const newSelectedIndex = selectedContext ? this.contextSelectorItems.indexOf(selectedContext) : -1;\n      if (newSelectedIndex > -1) {\n        this.selectedContextIndex = newSelectedIndex;\n      } else {\n        this.selectedContextIndex = Math.min(index, this.contextSelectorItems.length - 1);\n      }\n    }\n    this.requestUpdate();\n  }\n\n  private contextChanged(event: Common.EventTarget.EventTargetEvent<Protocol.WebAudio.BaseAudioContext>): void {\n    const context = event.data;\n    if (!this.knownContexts.has(context.contextId)) {\n      return;\n    }\n\n    const changedContext = event.data;\n    const index = this.contextSelectorItems.findIndex(context => context.contextId === changedContext.contextId);\n    if (index > -1) {\n      this.contextSelectorItems.replace(index, changedContext);\n    }\n    this.requestUpdate();\n  }\n\n  private reset(): void {\n    this.contextSelectorItems.replaceAll([]);\n    this.selectedContextIndex = -1;\n\n    this.knownContexts.clear();\n    this.requestUpdate();\n  }\n\n  private setContextRealtimeData(contextRealtimeData: Protocol.WebAudio.ContextRealtimeData|null): void {\n    this.contextRealtimeData = contextRealtimeData;\n    this.requestUpdate();\n  }\n\n  private async pollRealtimeData(): Promise<void> {\n    if (this.selectedContextIndex < 0) {\n      this.setContextRealtimeData(null);\n      return;\n    }\n\n    const context = this.contextSelectorItems.at(this.selectedContextIndex);\n    if (!context) {\n      this.setContextRealtimeData(null);\n      return;\n    }\n\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      // Display summary only for real-time context.\n      if (context.contextType === 'realtime') {\n        if (!this.knownContexts.has(context.contextId)) {\n          continue;\n        }\n        const realtimeData = await model.requestRealtimeData(context.contextId);\n        if (realtimeData) {\n          this.setContextRealtimeData(realtimeData);\n        }\n        void this.pollRealtimeDataThrottler.schedule(this.pollRealtimeData.bind(this));\n      } else {\n        this.setContextRealtimeData(null);\n      }\n    }\n  }\n}\n"]}