{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/screencast/InputModel.ts", "../../../../../../front_end/panels/screencast/ScreencastApp.ts", "../../../../../../front_end/panels/screencast/ScreencastView.ts", "screencastView.css.js"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nconst BUTTONS = [\n  Protocol.Input.MouseButton.Left,\n  Protocol.Input.MouseButton.Middle,\n  Protocol.Input.MouseButton.Right,\n  Protocol.Input.MouseButton.Back,\n  Protocol.Input.MouseButton.Forward,\n];\nconst MOUSE_EVENT_TYPES: Record<string, Protocol.Input.DispatchMouseEventRequestType> = {\n  mousedown: Protocol.Input.DispatchMouseEventRequestType.MousePressed,\n  mouseup: Protocol.Input.DispatchMouseEventRequestType.MouseReleased,\n  mousemove: Protocol.Input.DispatchMouseEventRequestType.MouseMoved,\n};\n\nexport class InputModel extends SDK.SDKModel.SDKModel<void> {\n  private readonly inputAgent: ProtocolProxyApi.InputApi;\n  private activeMouseOffsetTop: number|null;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n    this.inputAgent = target.inputAgent();\n    this.activeMouseOffsetTop = null;\n  }\n\n  emitKeyEvent(event: KeyboardEvent): void {\n    let type: Protocol.Input.DispatchKeyEventRequestType;\n    switch (event.type) {\n      case 'keydown':\n        type = Protocol.Input.DispatchKeyEventRequestType.KeyDown;\n        break;\n      case 'keyup':\n        type = Protocol.Input.DispatchKeyEventRequestType.KeyUp;\n        break;\n      case 'keypress':\n        type = Protocol.Input.DispatchKeyEventRequestType.Char;\n        break;\n      default:\n        return;\n    }\n    const text = event.type === 'keypress' ? String.fromCharCode(event.charCode) : undefined;\n    void this.inputAgent.invoke_dispatchKeyEvent({\n      type,\n      modifiers: this.modifiersForEvent(event),\n      text,\n      unmodifiedText: text ? text.toLowerCase() : undefined,\n      keyIdentifier: (event as {keyIdentifier?: string}).keyIdentifier,\n      code: event.code,\n      key: event.key,\n      windowsVirtualKeyCode: event.keyCode,\n      nativeVirtualKeyCode: event.keyCode,\n      autoRepeat: event.repeat,\n      isKeypad: event.location === 3,\n      isSystemKey: false,\n      location: event.location !== 3 ? event.location : undefined,\n    });\n  }\n\n  emitMouseEvent(event: MouseEvent, offsetTop: number, zoom: number): void {\n    if (!(event.type in MOUSE_EVENT_TYPES)) {\n      return;\n    }\n    if (event.type === 'mousedown' || this.activeMouseOffsetTop === null) {\n      this.activeMouseOffsetTop = offsetTop;\n    }\n    void this.inputAgent.invoke_dispatchMouseEvent({\n      type: MOUSE_EVENT_TYPES[event.type],\n      x: Math.round(event.offsetX / zoom),\n      y: Math.round(event.offsetY / zoom - this.activeMouseOffsetTop),\n      modifiers: this.modifiersForEvent(event),\n      button: BUTTONS[event.button],\n      clickCount: event.detail,\n    });\n    if (event.type === 'mouseup') {\n      this.activeMouseOffsetTop = null;\n    }\n  }\n\n  emitWheelEvent(event: WheelEvent, offsetTop: number, zoom: number): void {\n    if (this.activeMouseOffsetTop === null) {\n      this.activeMouseOffsetTop = offsetTop;\n    }\n    void this.inputAgent.invoke_dispatchMouseEvent({\n      type: Protocol.Input.DispatchMouseEventRequestType.MouseWheel,\n      x: Math.round(event.offsetX / zoom),\n      y: Math.round(event.offsetY / zoom - this.activeMouseOffsetTop),\n      modifiers: this.modifiersForEvent(event),\n      button: BUTTONS[event.button],\n      clickCount: event.detail,\n      deltaX: event.deltaX / zoom,\n      deltaY: event.deltaY / zoom,\n    });\n  }\n\n  private modifiersForEvent(event: KeyboardEvent|MouseEvent): number {\n    return Number(event.getModifierState('Alt')) | (Number(event.getModifierState('Control')) << 1) |\n        (Number(event.getModifierState('Meta')) << 2) | (Number(event.getModifierState('Shift')) << 3);\n  }\n}\n\nSDK.SDKModel.SDKModel.register(InputModel, {\n  capabilities: SDK.Target.Capability.INPUT,\n  autostart: false,\n});\n", "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ScreencastView} from './ScreencastView.js';\n\nconst UIStrings = {\n  /**\n   * @description Tooltip text that appears when hovering over largeicon phone button in Screencast App of the Remote Devices tab when toggling screencast\n   */\n  toggleScreencast: 'Toggle screencast',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/screencast/ScreencastApp.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet appInstance: ScreencastApp;\n\nexport class ScreencastApp implements Common.App.App,\n                                      SDK.TargetManager.SDKModelObserver<SDK.ScreenCaptureModel.ScreenCaptureModel> {\n  private readonly enabledSetting: Common.Settings.Setting<boolean>;\n  toggleButton: UI.Toolbar.ToolbarToggle;\n  private rootSplitWidget?: UI.SplitWidget.SplitWidget;\n  private screenCaptureModel?: SDK.ScreenCaptureModel.ScreenCaptureModel;\n  private screencastView?: ScreencastView;\n  rootView?: UI.RootView.RootView;\n  constructor() {\n    this.enabledSetting = Common.Settings.Settings.instance().createSetting('screencast-enabled', true);\n    this.toggleButton = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleScreencast), 'devices');\n    this.toggleButton.setToggled(this.enabledSetting.get());\n    this.toggleButton.setEnabled(false);\n    this.toggleButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.toggleButtonClicked, this);\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.ScreenCaptureModel.ScreenCaptureModel, this);\n  }\n\n  static instance(): ScreencastApp {\n    if (!appInstance) {\n      appInstance = new ScreencastApp();\n    }\n    return appInstance;\n  }\n\n  presentUI(document: Document): void {\n    this.rootView = new UI.RootView.RootView();\n\n    this.rootSplitWidget =\n        new UI.SplitWidget.SplitWidget(false, true, 'inspector-view.screencast-split-view-state', 300, 300);\n    this.rootSplitWidget.setVertical(true);\n    this.rootSplitWidget.setSecondIsSidebar(true);\n    this.rootSplitWidget.show(this.rootView.element);\n    this.rootSplitWidget.hideMain();\n\n    this.rootSplitWidget.setSidebarWidget(UI.InspectorView.InspectorView.instance());\n    UI.InspectorView.InspectorView.instance().setOwnerSplit(this.rootSplitWidget);\n    this.rootView.attachToDocument(document);\n    this.rootView.focus();\n  }\n\n  modelAdded(screenCaptureModel: SDK.ScreenCaptureModel.ScreenCaptureModel): void {\n    if (screenCaptureModel.target() !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.screenCaptureModel = screenCaptureModel;\n    this.toggleButton.setEnabled(true);\n    this.screencastView = new ScreencastView(screenCaptureModel);\n    if (this.rootSplitWidget) {\n      this.rootSplitWidget.setMainWidget(this.screencastView);\n    }\n    this.screencastView.initialize();\n    this.onScreencastEnabledChanged();\n  }\n\n  modelRemoved(screenCaptureModel: SDK.ScreenCaptureModel.ScreenCaptureModel): void {\n    if (this.screenCaptureModel !== screenCaptureModel) {\n      return;\n    }\n    delete this.screenCaptureModel;\n    this.toggleButton.setEnabled(false);\n    if (this.screencastView) {\n      this.screencastView.detach();\n      delete this.screencastView;\n    }\n    this.onScreencastEnabledChanged();\n  }\n\n  private toggleButtonClicked(): void {\n    const enabled = this.toggleButton.isToggled();\n    this.enabledSetting.set(enabled);\n    this.onScreencastEnabledChanged();\n  }\n\n  private onScreencastEnabledChanged(): void {\n    if (!this.rootSplitWidget) {\n      return;\n    }\n    const enabled = Boolean(this.enabledSetting.get() && this.screencastView);\n    this.toggleButton.setToggled(enabled);\n    if (enabled) {\n      this.rootSplitWidget.showBoth();\n    } else {\n      this.rootSplitWidget.hideMain();\n    }\n  }\n}\n\nlet toolbarButtonProviderInstance: ToolbarButtonProvider;\n\nexport class ToolbarButtonProvider implements UI.Toolbar.Provider {\n  static instance(opts: {forceNew: boolean} = {forceNew: false}): ToolbarButtonProvider {\n    const {forceNew} = opts;\n    if (!toolbarButtonProviderInstance || forceNew) {\n      toolbarButtonProviderInstance = new ToolbarButtonProvider();\n    }\n\n    return toolbarButtonProviderInstance;\n  }\n\n  item(): UI.Toolbar.ToolbarItem|null {\n    return ScreencastApp.instance().toggleButton;\n  }\n}\n\nlet screencastAppProviderInstance: ScreencastAppProvider;\n\nexport class ScreencastAppProvider implements Common.AppProvider.AppProvider {\n  static instance(opts: {forceNew: boolean} = {forceNew: false}): ScreencastAppProvider {\n    const {forceNew} = opts;\n    if (!screencastAppProviderInstance || forceNew) {\n      screencastAppProviderInstance = new ScreencastAppProvider();\n    }\n\n    return screencastAppProviderInstance;\n  }\n\n  createApp(): Common.App.App {\n    return ScreencastApp.instance();\n  }\n}\n", "/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {InputModel} from './InputModel.js';\nimport screencastViewStyles from './screencastView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Accessible alt text for the screencast canvas rendering of the debug target webpage\n   */\n  screencastViewOfDebugTarget: 'Screencast view of debug target',\n  /**\n   * @description Glass pane element text content in Screencast View of the Remote Devices tab when toggling screencast\n   */\n  theTabIsInactive: 'The tab is inactive',\n  /**\n   * @description Glass pane element text content in Screencast View of the Remote Devices tab when toggling screencast\n   */\n  profilingInProgress: 'Profiling in progress',\n  /**\n   * @description Accessible text for the screencast back button\n   */\n  back: 'back',\n  /**\n   * @description Accessible text for the screencast forward button\n   */\n  forward: 'forward',\n  /**\n   * @description Accessible text for the screencast reload button\n   */\n  reload: 'reload',\n  /**\n   * @description Accessible text for the address bar in screencast view\n   */\n  addressBar: 'Address bar',\n  /**\n   * @description Accessible text for the touch emulation button.\n   */\n  touchInput: 'Use touch',\n  /**\n   * @description Accessible text for the mouse emulation button.\n   */\n  mouseInput: 'Use mouse',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/screencast/ScreencastView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\nexport class ScreencastView extends UI.Widget.VBox implements SDK.OverlayModel.Highlighter {\n  private readonly screenCaptureModel: SDK.ScreenCaptureModel.ScreenCaptureModel;\n  private domModel: SDK.DOMModel.DOMModel|null;\n  private readonly overlayModel: SDK.OverlayModel.OverlayModel|null;\n  private resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel|null;\n  private networkManager: SDK.NetworkManager.NetworkManager|null;\n  private readonly inputModel: InputModel|null;\n  private shortcuts: Record<number, (arg0?: Event|undefined) => boolean>;\n  private scrollOffsetX: number;\n  private scrollOffsetY: number;\n  private screenZoom: number;\n  private screenOffsetTop: number;\n  private pageScaleFactor: number;\n  private imageElement!: HTMLImageElement;\n  private viewportElement!: HTMLElement;\n  private glassPaneElement!: HTMLElement;\n  private canvasElement!: HTMLCanvasElement;\n  private titleElement!: HTMLElement;\n  private context!: CanvasRenderingContext2D;\n  private imageZoom: number;\n  private tagNameElement!: HTMLElement;\n  private attributeElement!: HTMLElement;\n  private nodeWidthElement!: HTMLElement;\n  private nodeHeightElement!: HTMLElement;\n  private model!: Protocol.DOM.BoxModel|null;\n  private highlightConfig!: Protocol.Overlay.HighlightConfig|null;\n  private navigationUrl!: HTMLInputElement;\n  private navigationBack!: HTMLButtonElement;\n  private navigationForward!: HTMLButtonElement;\n  private canvasContainerElement?: HTMLElement;\n  private checkerboardPattern?: CanvasPattern|null;\n  private targetInactive?: boolean;\n  private deferredCasting?: number;\n  private highlightNode?: SDK.DOMModel.DOMNode|null;\n  private config?: Protocol.Overlay.HighlightConfig|null;\n  private node?: SDK.DOMModel.DOMNode|null;\n  private inspectModeConfig?: Protocol.Overlay.HighlightConfig|null;\n  private navigationBar?: HTMLElement;\n  private navigationReload?: HTMLElement;\n  private navigationProgressBar?: ProgressTracker;\n  private touchInputToggle?: HTMLButtonElement;\n  private mouseInputToggle?: HTMLButtonElement;\n  private touchInputToggleIcon?: IconButton.Icon.Icon;\n  private mouseInputToggleIcon?: IconButton.Icon.Icon;\n  private historyIndex?: number;\n  private historyEntries?: Protocol.Page.NavigationEntry[];\n  private isCasting = false;\n  private screencastOperationId?: number;\n  constructor(screenCaptureModel: SDK.ScreenCaptureModel.ScreenCaptureModel) {\n    super();\n    this.registerRequiredCSS(screencastViewStyles);\n    this.screenCaptureModel = screenCaptureModel;\n    this.domModel = screenCaptureModel.target().model(SDK.DOMModel.DOMModel);\n    this.overlayModel = screenCaptureModel.target().model(SDK.OverlayModel.OverlayModel);\n    this.resourceTreeModel = screenCaptureModel.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n    this.networkManager = screenCaptureModel.target().model(SDK.NetworkManager.NetworkManager);\n    this.inputModel = screenCaptureModel.target().model(InputModel);\n\n    this.setMinimumSize(150, 150);\n\n    this.shortcuts = {};\n    this.scrollOffsetX = 0;\n    this.scrollOffsetY = 0;\n    this.screenZoom = 1;\n    this.screenOffsetTop = 0;\n    this.pageScaleFactor = 1;\n    this.imageZoom = 1;\n  }\n\n  initialize(): void {\n    this.element.classList.add('screencast');\n\n    this.createNavigationBar();\n    this.viewportElement = this.element.createChild('div', 'screencast-viewport hidden');\n    this.canvasContainerElement = this.viewportElement.createChild('div', 'screencast-canvas-container');\n    this.glassPaneElement = this.canvasContainerElement.createChild('div', 'screencast-glasspane fill hidden');\n    this.canvasElement = this.canvasContainerElement.createChild('canvas');\n    UI.ARIAUtils.setLabel(this.canvasElement, i18nString(UIStrings.screencastViewOfDebugTarget));\n    this.canvasElement.tabIndex = 0;\n    this.canvasElement.addEventListener('mousedown', this.handleMouseEvent.bind(this), false);\n    this.canvasElement.addEventListener('mouseup', this.handleMouseEvent.bind(this), false);\n    this.canvasElement.addEventListener('mousemove', this.handleMouseEvent.bind(this), false);\n    this.canvasElement.addEventListener('wheel', this.handleWheelEvent.bind(this), false);\n    this.canvasElement.addEventListener('click', this.handleMouseEvent.bind(this), false);\n    this.canvasElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), false);\n    this.canvasElement.addEventListener('keydown', this.handleKeyEvent.bind(this), false);\n    this.canvasElement.addEventListener('keyup', this.handleKeyEvent.bind(this), false);\n    this.canvasElement.addEventListener('keypress', this.handleKeyEvent.bind(this), false);\n    this.canvasElement.addEventListener('blur', this.handleBlurEvent.bind(this), false);\n    this.titleElement = this.canvasContainerElement.createChild('div', 'screencast-element-title monospace hidden');\n    this.tagNameElement = this.titleElement.createChild('span', 'screencast-tag-name');\n    this.attributeElement = this.titleElement.createChild('span', 'screencast-attribute');\n    UI.UIUtils.createTextChild(this.titleElement, ' ');\n    const dimension = this.titleElement.createChild('span', 'screencast-dimension');\n    this.nodeWidthElement = dimension.createChild('span');\n    UI.UIUtils.createTextChild(dimension, ' × ');\n    this.nodeHeightElement = dimension.createChild('span');\n    this.titleElement.style.top = '0';\n    this.titleElement.style.left = '0';\n\n    this.imageElement = new Image();\n    this.context = this.canvasElement.getContext('2d') as CanvasRenderingContext2D;\n    this.checkerboardPattern = this.createCheckerboardPattern(this.context);\n\n    this.shortcuts[UI.KeyboardShortcut.KeyboardShortcut.makeKey('l', UI.KeyboardShortcut.Modifiers.Ctrl.value)] =\n        this.focusNavigationBar.bind(this);\n\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.SUSPEND_STATE_CHANGED, this.onSuspendStateChange, this);\n    this.updateGlasspane();\n  }\n\n  override willHide(): void {\n    this.stopCasting();\n  }\n\n  private async startCasting(): Promise<void> {\n    if (SDK.TargetManager.TargetManager.instance().allTargetsSuspended()) {\n      return;\n    }\n\n    if (this.isCasting) {\n      return;\n    }\n    this.isCasting = true;\n\n    const maxImageDimension = 2048;\n    const dimensions = this.viewportDimensions();\n    if (dimensions.width < 0 || dimensions.height < 0) {\n      this.isCasting = false;\n      return;\n    }\n    dimensions.width *= window.devicePixelRatio;\n    dimensions.height *= window.devicePixelRatio;\n    // Note: startScreencast width and height are expected to be integers so must be floored.\n    this.screencastOperationId = await this.screenCaptureModel.startScreencast(\n        Protocol.Page.StartScreencastRequestFormat.Jpeg, 80, Math.floor(Math.min(maxImageDimension, dimensions.width)),\n        Math.floor(Math.min(maxImageDimension, dimensions.height)), undefined, this.screencastFrame.bind(this),\n        this.screencastVisibilityChanged.bind(this));\n    if (this.overlayModel) {\n      this.overlayModel.setHighlighter(this);\n    }\n  }\n\n  private stopCasting(): void {\n    if (!this.screencastOperationId) {\n      return;\n    }\n    this.screenCaptureModel.stopScreencast(this.screencastOperationId);\n    this.screencastOperationId = undefined;\n    this.isCasting = false;\n    for (const emulationModel of SDK.TargetManager.TargetManager.instance().models(SDK.EmulationModel.EmulationModel)) {\n      void emulationModel.overrideEmulateTouch(false);\n    }\n    if (this.overlayModel) {\n      this.overlayModel.setHighlighter(null);\n    }\n  }\n\n  private screencastFrame(base64Data: string, metadata: Protocol.Page.ScreencastFrameMetadata): void {\n    this.imageElement.onload = () => {\n      this.pageScaleFactor = metadata.pageScaleFactor;\n      this.screenOffsetTop = metadata.offsetTop;\n      this.scrollOffsetX = metadata.scrollOffsetX;\n      this.scrollOffsetY = metadata.scrollOffsetY;\n\n      const deviceSizeRatio = metadata.deviceHeight / metadata.deviceWidth;\n      const dimensionsCSS = this.viewportDimensions();\n\n      this.imageZoom = Math.min(\n          dimensionsCSS.width / this.imageElement.naturalWidth,\n          dimensionsCSS.height / (this.imageElement.naturalWidth * deviceSizeRatio));\n      this.viewportElement.classList.remove('hidden');\n      const bordersSize = BORDERS_SIZE;\n      if (this.imageZoom < 1.01 / window.devicePixelRatio) {\n        this.imageZoom = 1 / window.devicePixelRatio;\n      }\n      this.screenZoom = this.imageElement.naturalWidth * this.imageZoom / metadata.deviceWidth;\n      this.viewportElement.style.width = metadata.deviceWidth * this.screenZoom + bordersSize + 'px';\n      this.viewportElement.style.height = metadata.deviceHeight * this.screenZoom + bordersSize + 'px';\n\n      const data = this.highlightNode ? {node: this.highlightNode, selectorList: undefined} : {clear: true};\n      void this.updateHighlightInOverlayAndRepaint(data, this.highlightConfig);\n    };\n    this.imageElement.src = 'data:image/jpg;base64,' + base64Data;\n  }\n\n  private isGlassPaneActive(): boolean {\n    return !this.glassPaneElement.classList.contains('hidden');\n  }\n\n  private screencastVisibilityChanged(visible: boolean): void {\n    this.targetInactive = !visible;\n    this.updateGlasspane();\n  }\n\n  private onSuspendStateChange(): void {\n    if (SDK.TargetManager.TargetManager.instance().allTargetsSuspended()) {\n      this.stopCasting();\n    } else {\n      void this.startCasting();\n    }\n    this.updateGlasspane();\n  }\n\n  private updateGlasspane(): void {\n    if (this.targetInactive) {\n      this.glassPaneElement.textContent = i18nString(UIStrings.theTabIsInactive);\n      this.glassPaneElement.classList.remove('hidden');\n    } else if (SDK.TargetManager.TargetManager.instance().allTargetsSuspended()) {\n      this.glassPaneElement.textContent = i18nString(UIStrings.profilingInProgress);\n      this.glassPaneElement.classList.remove('hidden');\n    } else {\n      this.glassPaneElement.classList.add('hidden');\n    }\n  }\n\n  private async handleMouseEvent(event: MouseEvent): Promise<void> {\n    if (this.isGlassPaneActive()) {\n      event.consume();\n      return;\n    }\n    if (!this.pageScaleFactor || !this.domModel) {\n      return;\n    }\n    if (!this.inspectModeConfig) {\n      if (this.inputModel) {\n        this.inputModel.emitMouseEvent(event, this.screenOffsetTop, this.screenZoom);\n      }\n      event.preventDefault();\n      if (event.type === 'mousedown') {\n        this.canvasElement.focus();\n      }\n      return;\n    }\n\n    const position = this.convertIntoScreenSpace(event);\n    const node = await this.domModel.nodeForLocation(\n        Math.floor(position.x / this.pageScaleFactor + this.scrollOffsetX),\n        Math.floor(position.y / this.pageScaleFactor + this.scrollOffsetY),\n        Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom').get());\n    if (!node) {\n      return;\n    }\n\n    if (event.type === 'mousemove') {\n      void this.updateHighlightInOverlayAndRepaint({node, selectorList: undefined}, this.inspectModeConfig);\n      this.domModel.overlayModel().nodeHighlightRequested({nodeId: node.id});\n    } else if (event.type === 'click') {\n      this.domModel.overlayModel().inspectNodeRequested({backendNodeId: node.backendNodeId()});\n    }\n  }\n\n  private async handleWheelEvent(event: WheelEvent): Promise<void> {\n    if (this.isGlassPaneActive()) {\n      event.consume();\n      return;\n    }\n    if (!this.pageScaleFactor || !this.domModel) {\n      return;\n    }\n    if (this.inputModel) {\n      this.inputModel.emitWheelEvent(event, this.screenOffsetTop, this.screenZoom);\n    }\n    event.preventDefault();\n  }\n\n  private handleKeyEvent(event: KeyboardEvent): void {\n    if (this.isGlassPaneActive()) {\n      event.consume();\n      return;\n    }\n\n    const shortcutKey = UI.KeyboardShortcut.KeyboardShortcut.makeKeyFromEvent(event);\n    const handler = this.shortcuts[shortcutKey];\n    if (handler?.(event)) {\n      event.consume();\n      return;\n    }\n\n    if (this.inputModel) {\n      this.inputModel.emitKeyEvent(event);\n    }\n    event.consume();\n    this.canvasElement.focus();\n  }\n\n  private handleBlurEvent(): void {\n    if (this.inputModel && this.mouseInputToggle?.disabled) {\n      const event = new MouseEvent('mouseup');\n      this.inputModel.emitMouseEvent(event, this.screenOffsetTop, this.screenZoom);\n    }\n  }\n\n  private handleContextMenuEvent(event: Event): void {\n    event.consume(true);\n  }\n\n  private convertIntoScreenSpace(event: MouseEvent): Point {\n    return {\n      x: Math.round(event.offsetX / this.screenZoom),\n      y: Math.round(event.offsetY / this.screenZoom - this.screenOffsetTop),\n    };\n  }\n\n  override onResize(): void {\n    if (this.deferredCasting) {\n      clearTimeout(this.deferredCasting);\n      delete this.deferredCasting;\n    }\n\n    this.stopCasting();\n    this.deferredCasting = window.setTimeout(this.startCasting.bind(this), 100);\n  }\n\n  highlightInOverlay(data: SDK.OverlayModel.HighlightData, config: Protocol.Overlay.HighlightConfig|null): void {\n    void this.updateHighlightInOverlayAndRepaint(data, config);\n  }\n\n  private async updateHighlightInOverlayAndRepaint(\n      data: SDK.OverlayModel.HighlightData, config: Protocol.Overlay.HighlightConfig|null): Promise<void> {\n    let node: SDK.DOMModel.DOMNode|null = null;\n    if ('node' in data) {\n      node = data.node;\n    }\n    if (!node && 'deferredNode' in data) {\n      node = await data.deferredNode.resolvePromise();\n    }\n    if (!node && 'object' in data) {\n      const domModel = data.object.runtimeModel().target().model(SDK.DOMModel.DOMModel);\n      if (domModel) {\n        node = await domModel.pushObjectAsNodeToFrontend(data.object);\n      }\n    }\n\n    this.highlightNode = node;\n    this.highlightConfig = config;\n    if (!node) {\n      this.model = null;\n      this.config = null;\n      this.node = null;\n      this.titleElement.classList.add('hidden');\n      this.repaint();\n      return;\n    }\n\n    this.node = node;\n    void node.boxModel().then(model => {\n      if (!model || !this.pageScaleFactor) {\n        this.repaint();\n        return;\n      }\n      this.model = this.scaleModel(model);\n      this.config = config;\n      this.repaint();\n    });\n  }\n\n  private scaleModel(model: Protocol.DOM.BoxModel): Protocol.DOM.BoxModel {\n    function scaleQuad(this: ScreencastView, quad: Protocol.DOM.Quad): void {\n      for (let i = 0; i < quad.length; i += 2) {\n        quad[i] = quad[i] * this.pageScaleFactor * this.screenZoom;\n        quad[i + 1] = (quad[i + 1] * this.pageScaleFactor + this.screenOffsetTop) * this.screenZoom;\n      }\n    }\n\n    scaleQuad.call(this, model.content);\n    scaleQuad.call(this, model.padding);\n    scaleQuad.call(this, model.border);\n    scaleQuad.call(this, model.margin);\n    return model;\n  }\n\n  private repaint(): void {\n    const model = this.model;\n    const config = this.config;\n\n    const canvasWidth = this.canvasElement.getBoundingClientRect().width;\n    const canvasHeight = this.canvasElement.getBoundingClientRect().height;\n    this.canvasElement.width = window.devicePixelRatio * canvasWidth;\n    this.canvasElement.height = window.devicePixelRatio * canvasHeight;\n\n    this.context.save();\n    this.context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n    // Paint top and bottom gutter.\n    this.context.save();\n    if (this.checkerboardPattern) {\n      this.context.fillStyle = this.checkerboardPattern;\n    }\n    this.context.fillRect(0, 0, canvasWidth, this.screenOffsetTop * this.screenZoom);\n    this.context.fillRect(\n        0, this.screenOffsetTop * this.screenZoom + this.imageElement.naturalHeight * this.imageZoom, canvasWidth,\n        canvasHeight);\n    this.context.restore();\n\n    if (model && config) {\n      this.context.save();\n      const quads = [];\n      const isTransparent = (color: Protocol.DOM.RGBA): boolean => Boolean(color.a && color.a === 0);\n      if (model.content && config.contentColor && !isTransparent(config.contentColor)) {\n        quads.push({quad: model.content, color: config.contentColor});\n      }\n      if (model.padding && config.paddingColor && !isTransparent(config.paddingColor)) {\n        quads.push({quad: model.padding, color: config.paddingColor});\n      }\n      if (model.border && config.borderColor && !isTransparent(config.borderColor)) {\n        quads.push({quad: model.border, color: config.borderColor});\n      }\n      if (model.margin && config.marginColor && !isTransparent(config.marginColor)) {\n        quads.push({quad: model.margin, color: config.marginColor});\n      }\n\n      for (let i = quads.length - 1; i > 0; --i) {\n        this.drawOutlinedQuadWithClip(quads[i].quad, quads[i - 1].quad, quads[i].color);\n      }\n      if (quads.length > 0) {\n        this.drawOutlinedQuad(quads[0].quad, quads[0].color);\n      }\n      this.context.restore();\n\n      this.drawElementTitle();\n\n      this.context.globalCompositeOperation = 'destination-over';\n    }\n\n    this.context.drawImage(\n        this.imageElement, 0, this.screenOffsetTop * this.screenZoom, this.imageElement.naturalWidth * this.imageZoom,\n        this.imageElement.naturalHeight * this.imageZoom);\n    this.context.restore();\n  }\n\n  private cssColor(color: Protocol.DOM.RGBA): string {\n    if (!color) {\n      return 'transparent';\n    }\n    return Common.Color.Legacy.fromRGBA([color.r, color.g, color.b, color.a !== undefined ? color.a : 1])\n               .asString(Common.Color.Format.RGBA) ||\n        '';\n  }\n\n  private quadToPath(quad: Protocol.DOM.Quad): CanvasRenderingContext2D {\n    this.context.beginPath();\n    this.context.moveTo(quad[0], quad[1]);\n    this.context.lineTo(quad[2], quad[3]);\n    this.context.lineTo(quad[4], quad[5]);\n    this.context.lineTo(quad[6], quad[7]);\n    this.context.closePath();\n    return this.context;\n  }\n\n  private drawOutlinedQuad(quad: Protocol.DOM.Quad, fillColor: Protocol.DOM.RGBA): void {\n    this.context.save();\n    this.context.lineWidth = 2;\n    this.quadToPath(quad).clip();\n    this.context.fillStyle = this.cssColor(fillColor);\n    this.context.fill();\n    this.context.restore();\n  }\n\n  private drawOutlinedQuadWithClip(quad: Protocol.DOM.Quad, clipQuad: Protocol.DOM.Quad, fillColor: Protocol.DOM.RGBA):\n      void {\n    this.context.fillStyle = this.cssColor(fillColor);\n    this.context.save();\n    this.context.lineWidth = 0;\n    this.quadToPath(quad).fill();\n    this.context.globalCompositeOperation = 'destination-out';\n    this.context.fillStyle = 'red';\n    this.quadToPath(clipQuad).fill();\n    this.context.restore();\n  }\n\n  private drawElementTitle(): void {\n    if (!this.node) {\n      return;\n    }\n\n    const canvasWidth = this.canvasElement.getBoundingClientRect().width;\n    const canvasHeight = this.canvasElement.getBoundingClientRect().height;\n\n    const lowerCaseName = this.node.localName() || this.node.nodeName().toLowerCase();\n    this.tagNameElement.textContent = lowerCaseName;\n\n    this.attributeElement.textContent = getAttributesForElementTitle(this.node);\n    this.nodeWidthElement.textContent = String(this.model ? this.model.width : 0);\n    this.nodeHeightElement.textContent = String(this.model ? this.model.height : 0);\n\n    this.titleElement.classList.remove('hidden');\n    const titleWidth = this.titleElement.offsetWidth + 6;\n    const titleHeight = this.titleElement.offsetHeight + 4;\n\n    const anchorTop = this.model ? this.model.margin[1] : 0;\n    const anchorBottom = this.model ? this.model.margin[7] : 0;\n\n    const arrowHeight = 7;\n    let renderArrowUp = false;\n    let renderArrowDown = false;\n\n    let boxX = Math.max(2, this.model ? this.model.margin[0] : 0);\n    if (boxX + titleWidth > canvasWidth) {\n      boxX = canvasWidth - titleWidth - 2;\n    }\n\n    let boxY;\n    if (anchorTop > canvasHeight) {\n      boxY = canvasHeight - titleHeight - arrowHeight;\n      renderArrowDown = true;\n    } else if (anchorBottom < 0) {\n      boxY = arrowHeight;\n      renderArrowUp = true;\n    } else if (anchorBottom + titleHeight + arrowHeight < canvasHeight) {\n      boxY = anchorBottom + arrowHeight - 4;\n      renderArrowUp = true;\n    } else if (anchorTop - titleHeight - arrowHeight > 0) {\n      boxY = anchorTop - titleHeight - arrowHeight + 3;\n      renderArrowDown = true;\n    } else {\n      boxY = arrowHeight;\n    }\n\n    this.context.save();\n    this.context.translate(0.5, 0.5);\n    this.context.beginPath();\n    this.context.moveTo(boxX, boxY);\n    if (renderArrowUp) {\n      this.context.lineTo(boxX + 2 * arrowHeight, boxY);\n      this.context.lineTo(boxX + 3 * arrowHeight, boxY - arrowHeight);\n      this.context.lineTo(boxX + 4 * arrowHeight, boxY);\n    }\n    this.context.lineTo(boxX + titleWidth, boxY);\n    this.context.lineTo(boxX + titleWidth, boxY + titleHeight);\n    if (renderArrowDown) {\n      this.context.lineTo(boxX + 4 * arrowHeight, boxY + titleHeight);\n      this.context.lineTo(boxX + 3 * arrowHeight, boxY + titleHeight + arrowHeight);\n      this.context.lineTo(boxX + 2 * arrowHeight, boxY + titleHeight);\n    }\n    this.context.lineTo(boxX, boxY + titleHeight);\n    this.context.closePath();\n    this.context.fillStyle = 'var(--sys-color-yellow-container)';\n    this.context.fill();\n    this.context.strokeStyle = 'var(--sys-color-outline)';\n    this.context.stroke();\n\n    this.context.restore();\n\n    this.titleElement.style.top = (boxY + 3) + 'px';\n    this.titleElement.style.left = (boxX + 3) + 'px';\n  }\n\n  private viewportDimensions(): {width: number, height: number} {\n    const gutterSize = 30;\n    const bordersSize = BORDERS_SIZE;\n    const width = this.element.offsetWidth - bordersSize - gutterSize;\n    const height = this.element.offsetHeight - bordersSize - gutterSize - NAVBAR_HEIGHT;\n    return {width, height};\n  }\n\n  setInspectMode(mode: Protocol.Overlay.InspectMode, config: Protocol.Overlay.HighlightConfig): Promise<void> {\n    this.inspectModeConfig = mode !== Protocol.Overlay.InspectMode.None ? config : null;\n    return Promise.resolve();\n  }\n\n  highlightFrame(_frameId: string): void {\n  }\n\n  private createCheckerboardPattern(context: CanvasRenderingContext2D): CanvasPattern|null {\n    const pattern = document.createElement('canvas');\n    const size = 32;\n    pattern.width = size * 2;\n    pattern.height = size * 2;\n    const pctx = pattern.getContext('2d', {willReadFrequently: true}) as CanvasRenderingContext2D;\n\n    pctx.fillStyle = 'var(--sys-color-neutral-outline)';\n    pctx.fillRect(0, 0, size * 2, size * 2);\n\n    pctx.fillStyle = 'var(--sys-color-surface-variant)';\n    pctx.fillRect(0, 0, size, size);\n    pctx.fillRect(size, size, size, size);\n    return context.createPattern(pattern, 'repeat');\n  }\n\n  private createNavigationBar(): void {\n    this.navigationBar = this.element.createChild('div', 'screencast-navigation');\n\n    this.navigationBack = this.navigationBar.createChild('button', 'navigation');\n    this.navigationBack.appendChild(IconButton.Icon.create('arrow-back'));\n    this.navigationBack.disabled = true;\n    UI.ARIAUtils.setLabel(this.navigationBack, i18nString(UIStrings.back));\n\n    this.navigationForward = this.navigationBar.createChild('button', 'navigation');\n    this.navigationForward.appendChild(IconButton.Icon.create('arrow-forward'));\n    this.navigationForward.disabled = true;\n    UI.ARIAUtils.setLabel(this.navigationForward, i18nString(UIStrings.forward));\n\n    this.navigationReload = this.navigationBar.createChild('button', 'navigation');\n    this.navigationReload.appendChild(IconButton.Icon.create('refresh'));\n    UI.ARIAUtils.setLabel(this.navigationReload, i18nString(UIStrings.reload));\n\n    this.navigationUrl = this.navigationBar.appendChild(UI.UIUtils.createInput());\n    this.navigationUrl.type = 'text';\n    UI.ARIAUtils.setLabel(this.navigationUrl, i18nString(UIStrings.addressBar));\n\n    this.mouseInputToggle = this.navigationBar.createChild('button');\n    this.mouseInputToggle.disabled = true;\n    {\n      this.mouseInputToggleIcon = this.mouseInputToggle.appendChild(new IconButton.Icon.Icon());\n      this.mouseInputToggleIcon.data = {color: 'var(--icon-toggled)', iconName: 'mouse'};\n    }\n    UI.ARIAUtils.setLabel(this.mouseInputToggle, i18nString(UIStrings.mouseInput));\n\n    this.touchInputToggle = this.navigationBar.createChild('button');\n    this.touchInputToggleIcon = this.touchInputToggle.appendChild(IconButton.Icon.create('touch-app'));\n    UI.ARIAUtils.setLabel(this.touchInputToggle, i18nString(UIStrings.touchInput));\n\n    this.navigationProgressBar = new ProgressTracker(\n        this.resourceTreeModel, this.networkManager, this.navigationBar.createChild('div', 'progress'));\n\n    if (this.resourceTreeModel) {\n      this.navigationBack.addEventListener('click', this.navigateToHistoryEntry.bind(this, -1), false);\n      this.navigationForward.addEventListener('click', this.navigateToHistoryEntry.bind(this, 1), false);\n      this.navigationReload.addEventListener('click', this.navigateReload.bind(this), false);\n      this.navigationUrl.addEventListener('keyup', this.navigationUrlKeyUp.bind(this), true);\n      this.touchInputToggle.addEventListener('click', this.#toggleTouchEmulation.bind(this, true), false);\n      this.mouseInputToggle.addEventListener('click', this.#toggleTouchEmulation.bind(this, false), false);\n      void this.requestNavigationHistory();\n      this.resourceTreeModel.addEventListener(\n          SDK.ResourceTreeModel.Events.PrimaryPageChanged, this.requestNavigationHistoryEvent, this);\n      this.resourceTreeModel.addEventListener(\n          SDK.ResourceTreeModel.Events.CachedResourcesLoaded, this.requestNavigationHistoryEvent, this);\n    }\n  }\n\n  private navigateToHistoryEntry(offset: number): void {\n    if (!this.resourceTreeModel) {\n      return;\n    }\n    const newIndex = (this.historyIndex || 0) + offset;\n    if (!this.historyEntries || newIndex < 0 || newIndex >= this.historyEntries.length) {\n      return;\n    }\n    this.resourceTreeModel.navigateToHistoryEntry(this.historyEntries[newIndex]);\n    void this.requestNavigationHistory();\n  }\n\n  private navigateReload(): void {\n    if (!this.resourceTreeModel) {\n      return;\n    }\n    this.resourceTreeModel.reloadPage();\n  }\n\n  private navigationUrlKeyUp(event: KeyboardEvent): void {\n    if (event.key !== 'Enter') {\n      return;\n    }\n    let url: string = this.navigationUrl.value;\n    if (!url) {\n      return;\n    }\n    if (!url.match(SCHEME_REGEX)) {\n      url = 'http://' + url;\n    }\n    if (this.resourceTreeModel) {\n      void this.resourceTreeModel.navigate(url as Platform.DevToolsPath.UrlString);\n    }\n    this.canvasElement.focus();\n  }\n\n  #toggleTouchEmulation(value: boolean): void {\n    if (!this.canvasContainerElement || !this.isCasting || !this.mouseInputToggle || !this.touchInputToggle ||\n        !this.mouseInputToggleIcon || !this.touchInputToggleIcon) {\n      return;\n    }\n    const models = SDK.TargetManager.TargetManager.instance().models(SDK.EmulationModel.EmulationModel);\n    for (const model of models) {\n      void model.overrideEmulateTouch(value);\n    }\n    this.mouseInputToggle.disabled = !value;\n    this.touchInputToggle.disabled = value;\n    this.mouseInputToggleIcon.data = {\n      ...this.mouseInputToggleIcon.data,\n      color: this.mouseInputToggle.disabled ? 'var(--icon-toggled)' : 'var(--icon-default)',\n    };\n    this.touchInputToggleIcon.data = {\n      ...this.touchInputToggleIcon.data,\n      color: this.touchInputToggle.disabled ? 'var(--icon-toggled)' : 'var(--icon-default)',\n    };\n    this.canvasContainerElement.classList.toggle('touchable', value);\n  }\n\n  private requestNavigationHistoryEvent(): void {\n    void this.requestNavigationHistory();\n  }\n\n  private async requestNavigationHistory(): Promise<void> {\n    const history = this.resourceTreeModel ? await this.resourceTreeModel.navigationHistory() : null;\n    if (!history) {\n      return;\n    }\n\n    this.historyIndex = history.currentIndex;\n    this.historyEntries = history.entries;\n\n    this.navigationBack.disabled = this.historyIndex === 0;\n    this.navigationForward.disabled = this.historyIndex === (this.historyEntries.length - 1);\n\n    let url: string = this.historyEntries[this.historyIndex].url;\n    const match = url.match(HTTP_REGEX);\n    if (match) {\n      url = match[1];\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.inspectedURLChanged(\n        url as Platform.DevToolsPath.UrlString);\n    this.navigationUrl.value = decodeURI(url);\n  }\n\n  private focusNavigationBar(): boolean {\n    this.navigationUrl.focus();\n    this.navigationUrl.select();\n    return true;\n  }\n}\n\nexport const BORDERS_SIZE = 44;\nexport const NAVBAR_HEIGHT = 29;\nexport const HTTP_REGEX = /^http:\\/\\/(.+)/;\nexport const SCHEME_REGEX = /^(https?|about|chrome):/;\n\nexport class ProgressTracker {\n  private element: HTMLElement;\n  private requestIds: Map<string, SDK.NetworkRequest.NetworkRequest>|null;\n  private startedRequests: number;\n  private finishedRequests: number;\n  private maxDisplayedProgress: number;\n\n  constructor(\n      resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel|null,\n      networkManager: SDK.NetworkManager.NetworkManager|null, element: HTMLElement) {\n    this.element = element;\n    if (resourceTreeModel) {\n      resourceTreeModel.addEventListener(\n          SDK.ResourceTreeModel.Events.PrimaryPageChanged, this.onPrimaryPageChanged, this);\n      resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, this.onLoad, this);\n    }\n    if (networkManager) {\n      networkManager.addEventListener(SDK.NetworkManager.Events.RequestStarted, this.onRequestStarted, this);\n      networkManager.addEventListener(SDK.NetworkManager.Events.RequestFinished, this.onRequestFinished, this);\n    }\n    this.requestIds = null;\n    this.startedRequests = 0;\n    this.finishedRequests = 0;\n    this.maxDisplayedProgress = 0;\n  }\n\n  private onPrimaryPageChanged(): void {\n    this.requestIds = new Map();\n    this.startedRequests = 0;\n    this.finishedRequests = 0;\n    this.maxDisplayedProgress = 0;\n    this.updateProgress(0.1);  // Display first 10% on navigation start.\n  }\n\n  private onLoad(): void {\n    this.requestIds = null;\n    this.updateProgress(1);  // Display 100% progress on load, hide it in 0.5s.\n    window.setTimeout(() => {\n      if (!this.navigationProgressVisible()) {\n        this.displayProgress(0);\n      }\n    }, 500);\n  }\n\n  private navigationProgressVisible(): boolean {\n    return this.requestIds !== null;\n  }\n\n  private onRequestStarted(event: Common.EventTarget.EventTargetEvent<SDK.NetworkManager.RequestStartedEvent>): void {\n    if (!this.navigationProgressVisible()) {\n      return;\n    }\n    const request = event.data.request;\n    // Ignore long-living WebSockets for the sake of progress indicator, as we won't be waiting them anyway.\n    if (request.resourceType() === Common.ResourceType.resourceTypes.WebSocket) {\n      return;\n    }\n    if (this.requestIds) {\n      this.requestIds.set(request.requestId(), request);\n    }\n    ++this.startedRequests;\n  }\n\n  private onRequestFinished(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest>): void {\n    if (!this.navigationProgressVisible()) {\n      return;\n    }\n    const request = event.data;\n    if (this.requestIds && !this.requestIds.has(request.requestId())) {\n      return;\n    }\n    ++this.finishedRequests;\n    window.setTimeout(() => {\n      this.updateProgress(\n          this.finishedRequests / this.startedRequests * 0.9);  // Finished requests drive the progress up to 90%.\n    }, 500);  // Delay to give the new requests time to start. This makes the progress smoother.\n  }\n\n  private updateProgress(progress: number): void {\n    if (!this.navigationProgressVisible()) {\n      return;\n    }\n    if (this.maxDisplayedProgress >= progress) {\n      return;\n    }\n    this.maxDisplayedProgress = progress;\n    this.displayProgress(progress);\n  }\n\n  private displayProgress(progress: number): void {\n    this.element.style.width = (100 * progress) + '%';\n  }\n}\n\nfunction getAttributesForElementTitle(node: SDK.DOMModel.DOMNode): string {\n  const id = node.getAttribute('id');\n  const className = node.getAttribute('class');\n\n  let selector: string = id ? '#' + id : '';\n  if (className) {\n    selector += '.' + className.trim().replace(/\\s+/g, '.');\n  }\n\n  if (selector.length > 50) {\n    selector = selector.substring(0, 50) + '…';\n  }\n\n  return selector;\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n.screencast {\n  overflow: hidden;\n}\n\n.screencast-navigation {\n  flex-direction: row;\n  display: flex;\n  align-items: center;\n  position: relative;\n  padding-left: 1px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  background-origin: padding-box;\n  background-clip: padding-box;\n}\n\n.screencast-navigation button {\n  border-width: 0;\n  padding: 5px;\n  width: 28px;\n  height: 26px;\n  background: none;\n}\n\n.screencast-navigation button devtools-icon {\n  width: 100%;\n  height: 100%;\n}\n\n.screencast-navigation button[disabled].navigation {\n  opacity: 50%;\n}\n\n.screencast-navigation input {\n  flex: 1;\n  margin: 2px;\n  max-height: 19px;\n}\n\n.screencast-navigation .progress {\n  background-color: var(--sys-color-primary-bright);\n  height: 3px;\n  left: 0;\n  position: absolute;\n  top: 100%;  /* Align with the bottom edge of the parent. */\n  width: 0;\n  z-index: 2;  /* Above .screencast-glasspane. */\n}\n\n.screencast-viewport {\n  display: flex;\n  border: 1px solid var(--sys-color-divider);\n  border-radius: 20px;\n  flex: none;\n  padding: 20px;\n  margin: auto;\n  background-color: var(--sys-color-surface-variant);\n}\n\n.screencast-canvas-container {\n  flex: auto;\n  display: flex;\n  border: 1px solid var(--sys-color-divider);\n  position: relative;\n}\n\n.screencast-canvas-container.touchable {\n  /* stylelint-disable-next-line custom-property-pattern */\n  cursor: image-set(var(--image-file-touchCursor) 1x, var(--image-file-touchCursor_2x) 2x), default;\n}\n\n.screencast canvas {\n  flex: auto;\n  position: relative;\n}\n\n.screencast-element-title {\n  position: absolute;\n  z-index: 10;\n}\n\n.screencast-tag-name {\n  color: var(--sys-color-token-tag);\n}\n\n.screencast-attribute {\n  color: var(--sys-color-token-attribute);\n}\n\n.screencast-dimension {\n  /* Keep this in sync with tool_highlight.css (.dimensions) */\n  color: var(--sys-color-outline);\n}\n\n.screencast-glasspane {\n  background-color: var(--color-background-opacity-80);\n  font-size: 30px;\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/*# sourceURL=${import.meta.resolve('./screencastView.css')} */`;"],
  "mappings": ";;;;;;;AAAA;;;;AAIA,YAAY,SAAS;AAIrB,IAAM,UAAU;;;;;;;AAOhB,IAAM,oBAAkF;EACtF,WAAS;EACT,SAAO;EACP,WAAS;;AAGL,IAAO,aAAP,cAA8B,aAAS,SAAc;EACxC;EACT;EAER,YAAY,QAAyB;AACnC,UAAM,MAAM;AACZ,SAAK,aAAa,OAAO,WAAU;AACnC,SAAK,uBAAuB;EAC9B;EAEA,aAAa,OAAoB;AAC/B,QAAI;AACJ,YAAQ,MAAM,MAAM;MAClB,KAAK;AACH,eAAI;AACJ;MACF,KAAK;AACH,eAAI;AACJ;MACF,KAAK;AACH,eAAI;AACJ;MACF;AACE;IACJ;AACA,UAAM,OAAO,MAAM,SAAS,aAAa,OAAO,aAAa,MAAM,QAAQ,IAAI;AAC/E,SAAK,KAAK,WAAW,wBAAwB;MAC3C;MACA,WAAW,KAAK,kBAAkB,KAAK;MACvC;MACA,gBAAgB,OAAO,KAAK,YAAW,IAAK;MAC5C,eAAgB,MAAmC;MACnD,MAAM,MAAM;MACZ,KAAK,MAAM;MACX,uBAAuB,MAAM;MAC7B,sBAAsB,MAAM;MAC5B,YAAY,MAAM;MAClB,UAAU,MAAM,aAAa;MAC7B,aAAa;MACb,UAAU,MAAM,aAAa,IAAI,MAAM,WAAW;KACnD;EACH;EAEA,eAAe,OAAmB,WAAmB,MAAY;AAC/D,QAAI,EAAE,MAAM,QAAQ,oBAAoB;AACtC;IACF;AACA,QAAI,MAAM,SAAS,eAAe,KAAK,yBAAyB,MAAM;AACpE,WAAK,uBAAuB;IAC9B;AACA,SAAK,KAAK,WAAW,0BAA0B;MAC7C,MAAM,kBAAkB,MAAM,IAAI;MAClC,GAAG,KAAK,MAAM,MAAM,UAAU,IAAI;MAClC,GAAG,KAAK,MAAM,MAAM,UAAU,OAAO,KAAK,oBAAoB;MAC9D,WAAW,KAAK,kBAAkB,KAAK;MACvC,QAAQ,QAAQ,MAAM,MAAM;MAC5B,YAAY,MAAM;KACnB;AACD,QAAI,MAAM,SAAS,WAAW;AAC5B,WAAK,uBAAuB;IAC9B;EACF;EAEA,eAAe,OAAmB,WAAmB,MAAY;AAC/D,QAAI,KAAK,yBAAyB,MAAM;AACtC,WAAK,uBAAuB;IAC9B;AACA,SAAK,KAAK,WAAW,0BAA0B;MAC7C,MAAI;MACJ,GAAG,KAAK,MAAM,MAAM,UAAU,IAAI;MAClC,GAAG,KAAK,MAAM,MAAM,UAAU,OAAO,KAAK,oBAAoB;MAC9D,WAAW,KAAK,kBAAkB,KAAK;MACvC,QAAQ,QAAQ,MAAM,MAAM;MAC5B,YAAY,MAAM;MAClB,QAAQ,MAAM,SAAS;MACvB,QAAQ,MAAM,SAAS;KACxB;EACH;EAEQ,kBAAkB,OAA+B;AACvD,WAAO,OAAO,MAAM,iBAAiB,KAAK,CAAC,IAAK,OAAO,MAAM,iBAAiB,SAAS,CAAC,KAAK,IACxF,OAAO,MAAM,iBAAiB,MAAM,CAAC,KAAK,IAAM,OAAO,MAAM,iBAAiB,OAAO,CAAC,KAAK;EAClG;;AAGE,aAAS,SAAS,SAAS,YAAY;EACzC,cAAY;EACZ,WAAW;CACZ;;;AC7GD;;;;;;AAKA,YAAYA,aAAY;AACxB,YAAYC,WAAU;AACtB,YAAYC,UAAS;AACrB,YAAYC,SAAQ;;;ACRpB;;;;;;;;;AAgCA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,UAAU;AAEtB,YAAYC,UAAS;AAErB,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;;;AClCpgBAoIC,YAAY,QAAQ,sBAAsB,CAAC;;;AD7F3D,IAAM,YAAY;;;;EAIhB,6BAA6B;;;;EAI7B,kBAAkB;;;;EAIlB,qBAAqB;;;;EAIrB,MAAM;;;;EAIN,SAAS;;;;EAIT,QAAQ;;;;EAIR,YAAY;;;;EAIZ,YAAY;;;;EAIZ,YAAY;;AAEd,IAAM,OAAY,UAAK,kBAAkB,uCAAuC,SAAS;AACzF,IAAM,aAAkB,UAAK,mBAAmB,KAAK,QAAW,IAAI;AAO9D,IAAO,iBAAP,cAAiC,UAAO,KAAI;EAC/B;EACT;EACS;EACT;EACA;EACS;EACT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,YAAY;EACZ;EACR,YAAY,oBAA6D;AACvE,UAAK;AACL,SAAK,oBAAoB,0BAAoB;AAC7C,SAAK,qBAAqB;AAC1B,SAAK,WAAW,mBAAmB,OAAM,EAAG,MAAU,cAAS,QAAQ;AACvE,SAAK,eAAe,mBAAmB,OAAM,EAAG,MAAU,kBAAa,YAAY;AACnF,SAAK,oBAAoB,mBAAmB,OAAM,EAAG,MAAU,uBAAkB,iBAAiB;AAClG,SAAK,iBAAiB,mBAAmB,OAAM,EAAG,MAAU,oBAAe,cAAc;AACzF,SAAK,aAAa,mBAAmB,OAAM,EAAG,MAAM,UAAU;AAE9D,SAAK,eAAe,KAAK,GAAG;AAE5B,SAAK,YAAY,CAAA;AACjB,SAAK,gBAAgB;AACrB,SAAK,gBAAgB;AACrB,SAAK,aAAa;AAClB,SAAK,kBAAkB;AACvB,SAAK,kBAAkB;AACvB,SAAK,YAAY;EACnB;EAEA,aAAU;AACR,SAAK,QAAQ,UAAU,IAAI,YAAY;AAEvC,SAAK,oBAAmB;AACxB,SAAK,kBAAkB,KAAK,QAAQ,YAAY,OAAO,4BAA4B;AACnF,SAAK,yBAAyB,KAAK,gBAAgB,YAAY,OAAO,6BAA6B;AACnG,SAAK,mBAAmB,KAAK,uBAAuB,YAAY,OAAO,kCAAkC;AACzG,SAAK,gBAAgB,KAAK,uBAAuB,YAAY,QAAQ;AACrE,IAAG,aAAU,SAAS,KAAK,eAAe,WAAW,UAAU,2BAA2B,CAAC;AAC3F,SAAK,cAAc,WAAW;AAC9B,SAAK,cAAc,iBAAiB,aAAa,KAAK,iBAAiB,KAAK,IAAI,GAAG,KAAK;AACxF,SAAK,cAAc,iBAAiB,WAAW,KAAK,iBAAiB,KAAK,IAAI,GAAG,KAAK;AACtF,SAAK,cAAc,iBAAiB,aAAa,KAAK,iBAAiB,KAAK,IAAI,GAAG,KAAK;AACxF,SAAK,cAAc,iBAAiB,SAAS,KAAK,iBAAiB,KAAK,IAAI,GAAG,KAAK;AACpF,SAAK,cAAc,iBAAiB,SAAS,KAAK,iBAAiB,KAAK,IAAI,GAAG,KAAK;AACpF,SAAK,cAAc,iBAAiB,eAAe,KAAK,uBAAuB,KAAK,IAAI,GAAG,KAAK;AAChG,SAAK,cAAc,iBAAiB,WAAW,KAAK,eAAe,KAAK,IAAI,GAAG,KAAK;AACpF,SAAK,cAAc,iBAAiB,SAAS,KAAK,eAAe,KAAK,IAAI,GAAG,KAAK;AAClF,SAAK,cAAc,iBAAiB,YAAY,KAAK,eAAe,KAAK,IAAI,GAAG,KAAK;AACrF,SAAK,cAAc,iBAAiB,QAAQ,KAAK,gBAAgB,KAAK,IAAI,GAAG,KAAK;AAClF,SAAK,eAAe,KAAK,uBAAuB,YAAY,OAAO,2CAA2C;AAC9G,SAAK,iBAAiB,KAAK,aAAa,YAAY,QAAQ,qBAAqB;AACjF,SAAK,mBAAmB,KAAK,aAAa,YAAY,QAAQ,sBAAsB;AACpF,IAAG,WAAQ,gBAAgB,KAAK,cAAc,GAAG;AACjD,UAAM,YAAY,KAAK,aAAa,YAAY,QAAQ,sBAAsB;AAC9E,SAAK,mBAAmB,UAAU,YAAY,MAAM;AACpD,IAAG,WAAQ,gBAAgB,WAAW,QAAK;AAC3C,SAAK,oBAAoB,UAAU,YAAY,MAAM;AACrD,SAAK,aAAa,MAAM,MAAM;AAC9B,SAAK,aAAa,MAAM,OAAO;AAE/B,SAAK,eAAe,IAAI,MAAK;AAC7B,SAAK,UAAU,KAAK,cAAc,WAAW,IAAI;AACjD,SAAK,sBAAsB,KAAK,0BAA0B,KAAK,OAAO;AAEtE,SAAK,UAAa,oBAAiB,iBAAiB,QAAQ,KAAQ,oBAAiB,UAAU,KAAK,KAAK,CAAC,IACtG,KAAK,mBAAmB,KAAK,IAAI;AAErC,IAAI,mBAAc,cAAc,SAAQ,EAAG,iBAAgB,uBACP,KAAK,sBAAsB,IAAI;AACnF,SAAK,gBAAe;EACtB;EAES,WAAQ;AACf,SAAK,YAAW;EAClB;EAEQ,MAAM,eAAY;AACxB,QAAQ,mBAAc,cAAc,SAAQ,EAAG,oBAAmB,GAAI;AACpE;IACF;AAEA,QAAI,KAAK,WAAW;AAClB;IACF;AACA,SAAK,YAAY;AAEjB,UAAM,oBAAoB;AAC1B,UAAM,aAAa,KAAK,mBAAkB;AAC1C,QAAI,WAAW,QAAQ,KAAK,WAAW,SAAS,GAAG;AACjD,WAAK,YAAY;AACjB;IACF;AACA,eAAW,SAAS,OAAO;AAC3B,eAAW,UAAU,OAAO;AAE5B,SAAK,wBAAwB,MAAM,KAAK,mBAAmB,gBAAe,QACrB,IAAI,KAAK,MAAM,KAAK,IAAI,mBAAmB,WAAW,KAAK,CAAC,GAC7G,KAAK,MAAM,KAAK,IAAI,mBAAmB,WAAW,MAAM,CAAC,GAAG,QAAW,KAAK,gBAAgB,KAAK,IAAI,GACrG,KAAK,4BAA4B,KAAK,IAAI,CAAC;AAC/C,QAAI,KAAK,cAAc;AACrB,WAAK,aAAa,eAAe,IAAI;IACvC;EACF;EAEQ,cAAW;AACjB,QAAI,CAAC,KAAK,uBAAuB;AAC/B;IACF;AACA,SAAK,mBAAmB,eAAe,KAAK,qBAAqB;AACjE,SAAK,wBAAwB;AAC7B,SAAK,YAAY;AACjB,eAAW,kBAAsB,mBAAc,cAAc,SAAQ,EAAG,OAAW,oBAAe,cAAc,GAAG;AACjH,WAAK,eAAe,qBAAqB,KAAK;IAChD;AACA,QAAI,KAAK,cAAc;AACrB,WAAK,aAAa,eAAe,IAAI;IACvC;EACF;EAEQ,gBAAgB,YAAoB,UAA+C;AACzF,SAAK,aAAa,SAAS,MAAK;AAC9B,WAAK,kBAAkB,SAAS;AAChC,WAAK,kBAAkB,SAAS;AAChC,WAAK,gBAAgB,SAAS;AAC9B,WAAK,gBAAgB,SAAS;AAE9B,YAAM,kBAAkB,SAAS,eAAe,SAAS;AACzD,YAAM,gBAAgB,KAAK,mBAAkB;AAE7C,WAAK,YAAY,KAAK,IAClB,cAAc,QAAQ,KAAK,aAAa,cACxC,cAAc,UAAU,KAAK,aAAa,eAAe,gBAAgB;AAC7E,WAAK,gBAAgB,UAAU,OAAO,QAAQ;AAC9C,YAAM,cAAc;AACpB,UAAI,KAAK,YAAY,OAAO,OAAO,kBAAkB;AACnD,aAAK,YAAY,IAAI,OAAO;MAC9B;AACA,WAAK,aAAa,KAAK,aAAa,eAAe,KAAK,YAAY,SAAS;AAC7E,WAAK,gBAAgB,MAAM,QAAQ,SAAS,cAAc,KAAK,aAAa,cAAc;AAC1F,WAAK,gBAAgB,MAAM,SAAS,SAAS,eAAe,KAAK,aAAa,cAAc;AAE5F,YAAM,OAAO,KAAK,gBAAgB,EAAC,MAAM,KAAK,eAAe,cAAc,OAAS,IAAI,EAAC,OAAO,KAAI;AACpG,WAAK,KAAK,mCAAmC,MAAM,KAAK,eAAe;IACzE;AACA,SAAK,aAAa,MAAM,2BAA2B;EACrD;EAEQ,oBAAiB;AACvB,WAAO,CAAC,KAAK,iBAAiB,UAAU,SAAS,QAAQ;EAC3D;EAEQ,4BAA4B,SAAgB;AAClD,SAAK,iBAAiB,CAAC;AACvB,SAAK,gBAAe;EACtB;EAEQ,uBAAoB;AAC1B,QAAQ,mBAAc,cAAc,SAAQ,EAAG,oBAAmB,GAAI;AACpE,WAAK,YAAW;IAClB,OAAO;AACL,WAAK,KAAK,aAAY;IACxB;AACA,SAAK,gBAAe;EACtB;EAEQ,kBAAe;AACrB,QAAI,KAAK,gBAAgB;AACvB,WAAK,iBAAiB,cAAc,WAAW,UAAU,gBAAgB;AACzE,WAAK,iBAAiB,UAAU,OAAO,QAAQ;IACjD,WAAe,mBAAc,cAAc,SAAQ,EAAG,oBAAmB,GAAI;AAC3E,WAAK,iBAAiB,cAAc,WAAW,UAAU,mBAAmB;AAC5E,WAAK,iBAAiB,UAAU,OAAO,QAAQ;IACjD,OAAO;AACL,WAAK,iBAAiB,UAAU,IAAI,QAAQ;IAC9C;EACF;EAEQ,MAAM,iBAAiB,OAAiB;AAC9C,QAAI,KAAK,kBAAiB,GAAI;AAC5B,YAAM,QAAO;AACb;IACF;AACA,QAAI,CAAC,KAAK,mBAAmB,CAAC,KAAK,UAAU;AAC3C;IACF;AACA,QAAI,CAAC,KAAK,mBAAmB;AAC3B,UAAI,KAAK,YAAY;AACnB,aAAK,WAAW,eAAe,OAAO,KAAK,iBAAiB,KAAK,UAAU;MAC7E;AACA,YAAM,eAAc;AACpB,UAAI,MAAM,SAAS,aAAa;AAC9B,aAAK,cAAc,MAAK;MAC1B;AACA;IACF;AAEA,UAAM,WAAW,KAAK,uBAAuB,KAAK;AAClD,UAAM,OAAO,MAAM,KAAK,SAAS,gBAC7B,KAAK,MAAM,SAAS,IAAI,KAAK,kBAAkB,KAAK,aAAa,GACjE,KAAK,MAAM,SAAS,IAAI,KAAK,kBAAkB,KAAK,aAAa,GAC1D,gBAAS,SAAS,SAAQ,EAAG,cAAc,oBAAoB,EAAE,IAAG,CAAE;AACjF,QAAI,CAAC,MAAM;AACT;IACF;AAEA,QAAI,MAAM,SAAS,aAAa;AAC9B,WAAK,KAAK,mCAAmC,EAAC,MAAM,cAAc,OAAS,GAAG,KAAK,iBAAiB;AACpG,WAAK,SAAS,aAAY,EAAG,uBAAuB,EAAC,QAAQ,KAAK,GAAE,CAAC;IACvE,WAAW,MAAM,SAAS,SAAS;AACjC,WAAK,SAAS,aAAY,EAAG,qBAAqB,EAAC,eAAe,KAAK,cAAa,EAAE,CAAC;IACzF;EACF;EAEQ,MAAM,iBAAiB,OAAiB;AAC9C,QAAI,KAAK,kBAAiB,GAAI;AAC5B,YAAM,QAAO;AACb;IACF;AACA,QAAI,CAAC,KAAK,mBAAmB,CAAC,KAAK,UAAU;AAC3C;IACF;AACA,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,eAAe,OAAO,KAAK,iBAAiB,KAAK,UAAU;IAC7E;AACA,UAAM,eAAc;EACtB;EAEQ,eAAe,OAAoB;AACzC,QAAI,KAAK,kBAAiB,GAAI;AAC5B,YAAM,QAAO;AACb;IACF;AAEA,UAAM,cAAiB,oBAAiB,iBAAiB,iBAAiB,KAAK;AAC/E,UAAM,UAAU,KAAK,UAAU,WAAW;AAC1C,QAAI,UAAU,KAAK,GAAG;AACpB,YAAM,QAAO;AACb;IACF;AAEA,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,aAAa,KAAK;IACpC;AACA,UAAM,QAAO;AACb,SAAK,cAAc,MAAK;EAC1B;EAEQ,kBAAe;AACrB,QAAI,KAAK,cAAc,KAAK,kBAAkB,UAAU;AACtD,YAAM,QAAQ,IAAI,WAAW,SAAS;AACtC,WAAK,WAAW,eAAe,OAAO,KAAK,iBAAiB,KAAK,UAAU;IAC7E;EACF;EAEQ,uBAAuB,OAAY;AACzC,UAAM,QAAQ,IAAI;EACpB;EAEQ,uBAAuB,OAAiB;AAC9C,WAAO;MACL,GAAG,KAAK,MAAM,MAAM,UAAU,KAAK,UAAU;MAC7C,GAAG,KAAK,MAAM,MAAM,UAAU,KAAK,aAAa,KAAK,eAAe;;EAExE;EAES,WAAQ;AACf,QAAI,KAAK,iBAAiB;AACxB,mBAAa,KAAK,eAAe;AACjC,aAAO,KAAK;IACd;AAEA,SAAK,YAAW;AAChB,SAAK,kBAAkB,OAAO,WAAW,KAAK,aAAa,KAAK,IAAI,GAAG,GAAG;EAC5E;EAEA,mBAAmB,MAAsC,QAA6C;AACpG,SAAK,KAAK,mCAAmC,MAAM,MAAM;EAC3D;EAEQ,MAAM,mCACV,MAAsC,QAA6C;AACrF,QAAI,OAAkC;AACtC,QAAI,UAAU,MAAM;AAClB,aAAO,KAAK;IACd;AACA,QAAI,CAAC,QAAQ,kBAAkB,MAAM;AACnC,aAAO,MAAM,KAAK,aAAa,eAAc;IAC/C;AACA,QAAI,CAAC,QAAQ,YAAY,MAAM;AAC7B,YAAM,WAAW,KAAK,OAAO,aAAY,EAAG,OAAM,EAAG,MAAU,cAAS,QAAQ;AAChF,UAAI,UAAU;AACZ,eAAO,MAAM,SAAS,2BAA2B,KAAK,MAAM;MAC9D;IACF;AAEA,SAAK,gBAAgB;AACrB,SAAK,kBAAkB;AACvB,QAAI,CAAC,MAAM;AACT,WAAK,QAAQ;AACb,WAAK,SAAS;AACd,WAAK,OAAO;AACZ,WAAK,aAAa,UAAU,IAAI,QAAQ;AACxC,WAAK,QAAO;AACZ;IACF;AAEA,SAAK,OAAO;AACZ,SAAK,KAAK,SAAQ,EAAG,KAAK,WAAQ;AAChC,UAAI,CAAC,SAAS,CAAC,KAAK,iBAAiB;AACnC,aAAK,QAAO;AACZ;MACF;AACA,WAAK,QAAQ,KAAK,WAAW,KAAK;AAClC,WAAK,SAAS;AACd,WAAK,QAAO;IACd,CAAC;EACH;EAEQ,WAAW,OAA4B;AAC7C,aAAS,UAAgC,MAAuB;AAC9D,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACvC,aAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,kBAAkB,KAAK;AAChD,aAAK,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,KAAK,kBAAkB,KAAK,mBAAmB,KAAK;MACnF;IACF;AAEA,cAAU,KAAK,MAAM,MAAM,OAAO;AAClC,cAAU,KAAK,MAAM,MAAM,OAAO;AAClC,cAAU,KAAK,MAAM,MAAM,MAAM;AACjC,cAAU,KAAK,MAAM,MAAM,MAAM;AACjC,WAAO;EACT;EAEQ,UAAO;AACb,UAAM,QAAQ,KAAK;AACnB,UAAM,SAAS,KAAK;AAEpB,UAAM,cAAc,KAAK,cAAc,sBAAqB,EAAG;AAC/D,UAAM,eAAe,KAAK,cAAc,sBAAqB,EAAG;AAChE,SAAK,cAAc,QAAQ,OAAO,mBAAmB;AACrD,SAAK,cAAc,SAAS,OAAO,mBAAmB;AAEtD,SAAK,QAAQ,KAAI;AACjB,SAAK,QAAQ,MAAM,OAAO,kBAAkB,OAAO,gBAAgB;AAGnE,SAAK,QAAQ,KAAI;AACjB,QAAI,KAAK,qBAAqB;AAC5B,WAAK,QAAQ,YAAY,KAAK;IAChC;AACA,SAAK,QAAQ,SAAS,GAAG,GAAG,aAAa,KAAK,kBAAkB,KAAK,UAAU;AAC/E,SAAK,QAAQ,SACT,GAAG,KAAK,kBAAkB,KAAK,aAAa,KAAK,aAAa,gBAAgB,KAAK,WAAW,aAC9F,YAAY;AAChB,SAAK,QAAQ,QAAO;AAEpB,QAAI,SAAS,QAAQ;AACnB,WAAK,QAAQ,KAAI;AACjB,YAAM,QAAQ,CAAA;AACd,YAAM,gBAAgB,CAAC,UAAsC,QAAQ,MAAM,KAAK,MAAM,MAAM,CAAC;AAC7F,UAAI,MAAM,WAAW,OAAO,gBAAgB,CAAC,cAAc,OAAO,YAAY,GAAG;AAC/E,cAAM,KAAK,EAAC,MAAM,MAAM,SAAS,OAAO,OAAO,aAAY,CAAC;MAC9D;AACA,UAAI,MAAM,WAAW,OAAO,gBAAgB,CAAC,cAAc,OAAO,YAAY,GAAG;AAC/E,cAAM,KAAK,EAAC,MAAM,MAAM,SAAS,OAAO,OAAO,aAAY,CAAC;MAC9D;AACA,UAAI,MAAM,UAAU,OAAO,eAAe,CAAC,cAAc,OAAO,WAAW,GAAG;AAC5E,cAAM,KAAK,EAAC,MAAM,MAAM,QAAQ,OAAO,OAAO,YAAW,CAAC;MAC5D;AACA,UAAI,MAAM,UAAU,OAAO,eAAe,CAAC,cAAc,OAAO,WAAW,GAAG;AAC5E,cAAM,KAAK,EAAC,MAAM,MAAM,QAAQ,OAAO,OAAO,YAAW,CAAC;MAC5D;AAEA,eAAS,IAAI,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG;AACzC,aAAK,yBAAyB,MAAM,CAAC,EAAE,MAAM,MAAM,IAAI,CAAC,EAAE,MAAM,MAAM,CAAC,EAAE,KAAK;MAChF;AACA,UAAI,MAAM,SAAS,GAAG;AACpB,aAAK,iBAAiB,MAAM,CAAC,EAAE,MAAM,MAAM,CAAC,EAAE,KAAK;MACrD;AACA,WAAK,QAAQ,QAAO;AAEpB,WAAK,iBAAgB;AAErB,WAAK,QAAQ,2BAA2B;IAC1C;AAEA,SAAK,QAAQ,UACT,KAAK,cAAc,GAAG,KAAK,kBAAkB,KAAK,YAAY,KAAK,aAAa,eAAe,KAAK,WACpG,KAAK,aAAa,gBAAgB,KAAK,SAAS;AACpD,SAAK,QAAQ,QAAO;EACtB;EAEQ,SAAS,OAAwB;AACvC,QAAI,CAAC,OAAO;AACV,aAAO;IACT;AACA,WAAc,aAAM,OAAO,SAAS,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,MAAM,SAAY,MAAM,IAAI,CAAC,CAAC,EACxF;MAAQ;;IAAA,KAChB;EACN;EAEQ,WAAW,MAAuB;AACxC,SAAK,QAAQ,UAAS;AACtB,SAAK,QAAQ,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AACpC,SAAK,QAAQ,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AACpC,SAAK,QAAQ,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AACpC,SAAK,QAAQ,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AACpC,SAAK,QAAQ,UAAS;AACtB,WAAO,KAAK;EACd;EAEQ,iBAAiB,MAAyB,WAA4B;AAC5E,SAAK,QAAQ,KAAI;AACjB,SAAK,QAAQ,YAAY;AACzB,SAAK,WAAW,IAAI,EAAE,KAAI;AAC1B,SAAK,QAAQ,YAAY,KAAK,SAAS,SAAS;AAChD,SAAK,QAAQ,KAAI;AACjB,SAAK,QAAQ,QAAO;EACtB;EAEQ,yBAAyB,MAAyB,UAA6B,WAA4B;AAEjH,SAAK,QAAQ,YAAY,KAAK,SAAS,SAAS;AAChD,SAAK,QAAQ,KAAI;AACjB,SAAK,QAAQ,YAAY;AACzB,SAAK,WAAW,IAAI,EAAE,KAAI;AAC1B,SAAK,QAAQ,2BAA2B;AACxC,SAAK,QAAQ,YAAY;AACzB,SAAK,WAAW,QAAQ,EAAE,KAAI;AAC9B,SAAK,QAAQ,QAAO;EACtB;EAEQ,mBAAgB;AACtB,QAAI,CAAC,KAAK,MAAM;AACd;IACF;AAEA,UAAM,cAAc,KAAK,cAAc,sBAAqB,EAAG;AAC/D,UAAM,eAAe,KAAK,cAAc,sBAAqB,EAAG;AAEhE,UAAM,gBAAgB,KAAK,KAAK,UAAS,KAAM,KAAK,KAAK,SAAQ,EAAG,YAAW;AAC/E,SAAK,eAAe,cAAc;AAElC,SAAK,iBAAiB,cAAc,6BAA6B,KAAK,IAAI;AAC1E,SAAK,iBAAiB,cAAc,OAAO,KAAK,QAAQ,KAAK,MAAM,QAAQ,CAAC;AAC5E,SAAK,kBAAkB,cAAc,OAAO,KAAK,QAAQ,KAAK,MAAM,SAAS,CAAC;AAE9E,SAAK,aAAa,UAAU,OAAO,QAAQ;AAC3C,UAAM,aAAa,KAAK,aAAa,cAAc;AACnD,UAAM,cAAc,KAAK,aAAa,eAAe;AAErD,UAAM,YAAY,KAAK,QAAQ,KAAK,MAAM,OAAO,CAAC,IAAI;AACtD,UAAM,eAAe,KAAK,QAAQ,KAAK,MAAM,OAAO,CAAC,IAAI;AAEzD,UAAM,cAAc;AACpB,QAAI,gBAAgB;AACpB,QAAI,kBAAkB;AAEtB,QAAI,OAAO,KAAK,IAAI,GAAG,KAAK,QAAQ,KAAK,MAAM,OAAO,CAAC,IAAI,CAAC;AAC5D,QAAI,OAAO,aAAa,aAAa;AACnC,aAAO,cAAc,aAAa;IACpC;AAEA,QAAI;AACJ,QAAI,YAAY,cAAc;AAC5B,aAAO,eAAe,cAAc;AACpC,wBAAkB;IACpB,WAAW,eAAe,GAAG;AAC3B,aAAO;AACP,sBAAgB;IAClB,WAAW,eAAe,cAAc,cAAc,cAAc;AAClE,aAAO,eAAe,cAAc;AACpC,sBAAgB;IAClB,WAAW,YAAY,cAAc,cAAc,GAAG;AACpD,aAAO,YAAY,cAAc,cAAc;AAC/C,wBAAkB;IACpB,OAAO;AACL,aAAO;IACT;AAEA,SAAK,QAAQ,KAAI;AACjB,SAAK,QAAQ,UAAU,KAAK,GAAG;AAC/B,SAAK,QAAQ,UAAS;AACtB,SAAK,QAAQ,OAAO,MAAM,IAAI;AAC9B,QAAI,eAAe;AACjB,WAAK,QAAQ,OAAO,OAAO,IAAI,aAAa,IAAI;AAChD,WAAK,QAAQ,OAAO,OAAO,IAAI,aAAa,OAAO,WAAW;AAC9D,WAAK,QAAQ,OAAO,OAAO,IAAI,aAAa,IAAI;IAClD;AACA,SAAK,QAAQ,OAAO,OAAO,YAAY,IAAI;AAC3C,SAAK,QAAQ,OAAO,OAAO,YAAY,OAAO,WAAW;AACzD,QAAI,iBAAiB;AACnB,WAAK,QAAQ,OAAO,OAAO,IAAI,aAAa,OAAO,WAAW;AAC9D,WAAK,QAAQ,OAAO,OAAO,IAAI,aAAa,OAAO,cAAc,WAAW;AAC5E,WAAK,QAAQ,OAAO,OAAO,IAAI,aAAa,OAAO,WAAW;IAChE;AACA,SAAK,QAAQ,OAAO,MAAM,OAAO,WAAW;AAC5C,SAAK,QAAQ,UAAS;AACtB,SAAK,QAAQ,YAAY;AACzB,SAAK,QAAQ,KAAI;AACjB,SAAK,QAAQ,cAAc;AAC3B,SAAK,QAAQ,OAAM;AAEnB,SAAK,QAAQ,QAAO;AAEpB,SAAK,aAAa,MAAM,MAAO,OAAO,IAAK;AAC3C,SAAK,aAAa,MAAM,OAAQ,OAAO,IAAK;EAC9C;EAEQ,qBAAkB;AACxB,UAAM,aAAa;AACnB,UAAM,cAAc;AACpB,UAAM,QAAQ,KAAK,QAAQ,cAAc,cAAc;AACvD,UAAM,SAAS,KAAK,QAAQ,eAAe,cAAc,aAAa;AACtE,WAAO,EAAC,OAAO,OAAM;EACvB;EAEA,eAAe,MAAoC,QAAwC;AACzF,SAAK,oBAAoB,SAAI,SAAyC,SAAS;AAC/E,WAAO,QAAQ,QAAO;EACxB;EAEA,eAAe,UAAgB;EAC/B;EAEQ,0BAA0B,SAAiC;AACjE,UAAM,UAAU,SAAS,cAAc,QAAQ;AAC/C,UAAM,OAAO;AACb,YAAQ,QAAQ,OAAO;AACvB,YAAQ,SAAS,OAAO;AACxB,UAAM,OAAO,QAAQ,WAAW,MAAM,EAAC,oBAAoB,KAAI,CAAC;AAEhE,SAAK,YAAY;AACjB,SAAK,SAAS,GAAG,GAAG,OAAO,GAAG,OAAO,CAAC;AAEtC,SAAK,YAAY;AACjB,SAAK,SAAS,GAAG,GAAG,MAAM,IAAI;AAC9B,SAAK,SAAS,MAAM,MAAM,MAAM,IAAI;AACpC,WAAO,QAAQ,cAAc,SAAS,QAAQ;EAChD;EAEQ,sBAAmB;AACzB,SAAK,gBAAgB,KAAK,QAAQ,YAAY,OAAO,uBAAuB;AAE5E,SAAK,iBAAiB,KAAK,cAAc,YAAY,UAAU,YAAY;AAC3E,SAAK,eAAe,YAAuB,gBAAK,OAAO,YAAY,CAAC;AACpE,SAAK,eAAe,WAAW;AAC/B,IAAG,aAAU,SAAS,KAAK,gBAAgB,WAAW,UAAU,IAAI,CAAC;AAErE,SAAK,oBAAoB,KAAK,cAAc,YAAY,UAAU,YAAY;AAC9E,SAAK,kBAAkB,YAAuB,gBAAK,OAAO,eAAe,CAAC;AAC1E,SAAK,kBAAkB,WAAW;AAClC,IAAG,aAAU,SAAS,KAAK,mBAAmB,WAAW,UAAU,OAAO,CAAC;AAE3E,SAAK,mBAAmB,KAAK,cAAc,YAAY,UAAU,YAAY;AAC7E,SAAK,iBAAiB,YAAuB,gBAAK,OAAO,SAAS,CAAC;AACnE,IAAG,aAAU,SAAS,KAAK,kBAAkB,WAAW,UAAU,MAAM,CAAC;AAEzE,SAAK,gBAAgB,KAAK,cAAc,YAAe,WAAQ,YAAW,CAAE;AAC5E,SAAK,cAAc,OAAO;AAC1B,IAAG,aAAU,SAAS,KAAK,eAAe,WAAW,UAAU,UAAU,CAAC;AAE1E,SAAK,mBAAmB,KAAK,cAAc,YAAY,QAAQ;AAC/D,SAAK,iBAAiB,WAAW;AACjC;AACE,WAAK,uBAAuB,KAAK,iBAAiB,YAAY,IAAe,gBAAK,KAAI,CAAE;AACxF,WAAK,qBAAqB,OAAO,EAAC,OAAO,uBAAuB,UAAU,QAAO;IACnF;AACA,IAAG,aAAU,SAAS,KAAK,kBAAkB,WAAW,UAAU,UAAU,CAAC;AAE7E,SAAK,mBAAmB,KAAK,cAAc,YAAY,QAAQ;AAC/D,SAAK,uBAAuB,KAAK,iBAAiB,YAAuB,gBAAK,OAAO,WAAW,CAAC;AACjG,IAAG,aAAU,SAAS,KAAK,kBAAkB,WAAW,UAAU,UAAU,CAAC;AAE7E,SAAK,wBAAwB,IAAI,gBAC7B,KAAK,mBAAmB,KAAK,gBAAgB,KAAK,cAAc,YAAY,OAAO,UAAU,CAAC;AAElG,QAAI,KAAK,mBAAmB;AAC1B,WAAK,eAAe,iBAAiB,SAAS,KAAK,uBAAuB,KAAK,MAAM,EAAE,GAAG,KAAK;AAC/F,WAAK,kBAAkB,iBAAiB,SAAS,KAAK,uBAAuB,KAAK,MAAM,CAAC,GAAG,KAAK;AACjG,WAAK,iBAAiB,iBAAiB,SAAS,KAAK,eAAe,KAAK,IAAI,GAAG,KAAK;AACrF,WAAK,cAAc,iBAAiB,SAAS,KAAK,mBAAmB,KAAK,IAAI,GAAG,IAAI;AACrF,WAAK,iBAAiB,iBAAiB,SAAS,KAAK,sBAAsB,KAAK,MAAM,IAAI,GAAG,KAAK;AAClG,WAAK,iBAAiB,iBAAiB,SAAS,KAAK,sBAAsB,KAAK,MAAM,KAAK,GAAG,KAAK;AACnG,WAAK,KAAK,yBAAwB;AAClC,WAAK,kBAAkB,iBACf,uBAAkB,OAAO,oBAAoB,KAAK,+BAA+B,IAAI;AAC7F,WAAK,kBAAkB,iBACf,uBAAkB,OAAO,uBAAuB,KAAK,+BAA+B,IAAI;IAClG;EACF;EAEQ,uBAAuB,QAAc;AAC3C,QAAI,CAAC,KAAK,mBAAmB;AAC3B;IACF;AACA,UAAM,YAAY,KAAK,gBAAgB,KAAK;AAC5C,QAAI,CAAC,KAAK,kBAAkB,WAAW,KAAK,YAAY,KAAK,eAAe,QAAQ;AAClF;IACF;AACA,SAAK,kBAAkB,uBAAuB,KAAK,eAAe,QAAQ,CAAC;AAC3E,SAAK,KAAK,yBAAwB;EACpC;EAEQ,iBAAc;AACpB,QAAI,CAAC,KAAK,mBAAmB;AAC3B;IACF;AACA,SAAK,kBAAkB,WAAU;EACnC;EAEQ,mBAAmB,OAAoB;AAC7C,QAAI,MAAM,QAAQ,SAAS;AACzB;IACF;AACA,QAAI,MAAc,KAAK,cAAc;AACrC,QAAI,CAAC,KAAK;AACR;IACF;AACA,QAAI,CAAC,IAAI,MAAM,YAAY,GAAG;AAC5B,YAAM,YAAY;IACpB;AACA,QAAI,KAAK,mBAAmB;AAC1B,WAAK,KAAK,kBAAkB,SAAS,GAAsC;IAC7E;AACA,SAAK,cAAc,MAAK;EAC1B;EAEA,sBAAsB,OAAc;AAClC,QAAI,CAAC,KAAK,0BAA0B,CAAC,KAAK,aAAa,CAAC,KAAK,oBAAoB,CAAC,KAAK,oBACnF,CAAC,KAAK,wBAAwB,CAAC,KAAK,sBAAsB;AAC5D;IACF;AACA,UAAM,SAAa,mBAAc,cAAc,SAAQ,EAAG,OAAW,oBAAe,cAAc;AAClG,eAAW,SAAS,QAAQ;AAC1B,WAAK,MAAM,qBAAqB,KAAK;IACvC;AACA,SAAK,iBAAiB,WAAW,CAAC;AAClC,SAAK,iBAAiB,WAAW;AACjC,SAAK,qBAAqB,OAAO;MAC/B,GAAG,KAAK,qBAAqB;MAC7B,OAAO,KAAK,iBAAiB,WAAW,wBAAwB;;AAElE,SAAK,qBAAqB,OAAO;MAC/B,GAAG,KAAK,qBAAqB;MAC7B,OAAO,KAAK,iBAAiB,WAAW,wBAAwB;;AAElE,SAAK,uBAAuB,UAAU,OAAO,aAAa,KAAK;EACjE;EAEQ,gCAA6B;AACnC,SAAK,KAAK,yBAAwB;EACpC;EAEQ,MAAM,2BAAwB;AACpC,UAAM,UAAU,KAAK,oBAAoB,MAAM,KAAK,kBAAkB,kBAAiB,IAAK;AAC5F,QAAI,CAAC,SAAS;AACZ;IACF;AAEA,SAAK,eAAe,QAAQ;AAC5B,SAAK,iBAAiB,QAAQ;AAE9B,SAAK,eAAe,WAAW,KAAK,iBAAiB;AACrD,SAAK,kBAAkB,WAAW,KAAK,iBAAkB,KAAK,eAAe,SAAS;AAEtF,QAAI,MAAc,KAAK,eAAe,KAAK,YAAY,EAAE;AACzD,UAAM,QAAQ,IAAI,MAAM,UAAU;AAClC,QAAI,OAAO;AACT,YAAM,MAAM,CAAC;IACf;AACA,IAAK,2BAAsB,8BAA8B,oBACrD,GAAsC;AAC1C,SAAK,cAAc,QAAQ,UAAU,GAAG;EAC1C;EAEQ,qBAAkB;AACxB,SAAK,cAAc,MAAK;AACxB,SAAK,cAAc,OAAM;AACzB,WAAO;EACT;;AAGK,IAAM,eAAe;AACrB,IAAM,gBAAgB;AACtB,IAAM,aAAa;AACnB,IAAM,eAAe;AAEtB,IAAO,kBAAP,MAAsB;EAClB;EACA;EACA;EACA;EACA;EAER,YACI,mBACA,gBAAwD,SAAoB;AAC9E,SAAK,UAAU;AACf,QAAI,mBAAmB;AACrB,wBAAkB,iBACV,uBAAkB,OAAO,oBAAoB,KAAK,sBAAsB,IAAI;AACpF,wBAAkB,iBAAqB,uBAAkB,OAAO,MAAM,KAAK,QAAQ,IAAI;IACzF;AACA,QAAI,gBAAgB;AAClB,qBAAe,iBAAqB,oBAAe,OAAO,gBAAgB,KAAK,kBAAkB,IAAI;AACrG,qBAAe,iBAAqB,oBAAe,OAAO,iBAAiB,KAAK,mBAAmB,IAAI;IACzG;AACA,SAAK,aAAa;AAClB,SAAK,kBAAkB;AACvB,SAAK,mBAAmB;AACxB,SAAK,uBAAuB;EAC9B;EAEQ,uBAAoB;AAC1B,SAAK,aAAa,oBAAI,IAAG;AACzB,SAAK,kBAAkB;AACvB,SAAK,mBAAmB;AACxB,SAAK,uBAAuB;AAC5B,SAAK,eAAe,GAAG;EACzB;EAEQ,SAAM;AACZ,SAAK,aAAa;AAClB,SAAK,eAAe,CAAC;AACrB,WAAO,WAAW,MAAK;AACrB,UAAI,CAAC,KAAK,0BAAyB,GAAI;AACrC,aAAK,gBAAgB,CAAC;MACxB;IACF,GAAG,GAAG;EACR;EAEQ,4BAAyB;AAC/B,WAAO,KAAK,eAAe;EAC7B;EAEQ,iBAAiB,OAAkF;AACzG,QAAI,CAAC,KAAK,0BAAyB,GAAI;AACrC;IACF;AACA,UAAM,UAAU,MAAM,KAAK;AAE3B,QAAI,QAAQ,aAAY,MAAc,oBAAa,cAAc,WAAW;AAC1E;IACF;AACA,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,IAAI,QAAQ,UAAS,GAAI,OAAO;IAClD;AACA,MAAE,KAAK;EACT;EAEQ,kBAAkB,OAA6E;AACrG,QAAI,CAAC,KAAK,0BAAyB,GAAI;AACrC;IACF;AACA,UAAM,UAAU,MAAM;AACtB,QAAI,KAAK,cAAc,CAAC,KAAK,WAAW,IAAI,QAAQ,UAAS,CAAE,GAAG;AAChE;IACF;AACA,MAAE,KAAK;AACP,WAAO,WAAW,MAAK;AACrB,WAAK,eACD,KAAK,mBAAmB,KAAK,kBAAkB,GAAG;IACxD,GAAG,GAAG;EACR;EAEQ,eAAe,UAAgB;AACrC,QAAI,CAAC,KAAK,0BAAyB,GAAI;AACrC;IACF;AACA,QAAI,KAAK,wBAAwB,UAAU;AACzC;IACF;AACA,SAAK,uBAAuB;AAC5B,SAAK,gBAAgB,QAAQ;EAC/B;EAEQ,gBAAgB,UAAgB;AACtC,SAAK,QAAQ,MAAM,QAAS,MAAM,WAAY;EAChD;;AAGF,SAAS,6BAA6B,MAA0B;AAC9D,QAAM,KAAK,KAAK,aAAa,IAAI;AACjC,QAAM,YAAY,KAAK,aAAa,OAAO;AAE3C,MAAI,WAAmB,KAAK,MAAM,KAAK;AACvC,MAAI,WAAW;AACb,gBAAY,MAAM,UAAU,KAAI,EAAG,QAAQ,QAAQ,GAAG;EACxD;AAEA,MAAI,SAAS,SAAS,IAAI;AACxB,eAAW,SAAS,UAAU,GAAG,EAAE,IAAI;EACzC;AAEA,SAAO;AACT;;;ADl5BA,IAAMC,aAAY;;;;EAIhB,kBAAkB;;AAEpB,IAAMC,QAAY,WAAK,kBAAkB,sCAAsCD,UAAS;AACxF,IAAME,cAAkB,WAAK,mBAAmB,KAAK,QAAWD,KAAI;AACpE,IAAI;AAEE,IAAO,gBAAP,MAAO,eAAa;EAEP;EACjB;EACQ;EACA;EACA;EACR;EACA,cAAA;AACE,SAAK,iBAAwB,iBAAS,SAAS,SAAQ,EAAG,cAAc,sBAAsB,IAAI;AAClG,SAAK,eAAe,IAAO,YAAQ,cAAcC,YAAWF,WAAU,gBAAgB,GAAG,SAAS;AAClG,SAAK,aAAa,WAAW,KAAK,eAAe,IAAG,CAAE;AACtD,SAAK,aAAa,WAAW,KAAK;AAClC,SAAK,aAAa,iBAAgB,SAAwC,KAAK,qBAAqB,IAAI;AACxG,IAAI,mBAAc,cAAc,SAAQ,EAAG,cAAkB,wBAAmB,oBAAoB,IAAI;EAC1G;EAEA,OAAO,WAAQ;AACb,QAAI,CAAC,aAAa;AAChB,oBAAc,IAAI,eAAa;IACjC;AACA,WAAO;EACT;EAEA,UAAUG,WAAkB;AAC1B,SAAK,WAAW,IAAO,aAAS,SAAQ;AAExC,SAAK,kBACD,IAAO,gBAAY,YAAY,OAAO,MAAM,8CAA8C,KAAK,GAAG;AACtG,SAAK,gBAAgB,YAAY,IAAI;AACrC,SAAK,gBAAgB,mBAAmB,IAAI;AAC5C,SAAK,gBAAgB,KAAK,KAAK,SAAS,OAAO;AAC/C,SAAK,gBAAgB,SAAQ;AAE7B,SAAK,gBAAgB,iBAAoB,kBAAc,cAAc,SAAQ,CAAE;AAC/E,IAAG,kBAAc,cAAc,SAAQ,EAAG,cAAc,KAAK,eAAe;AAC5E,SAAK,SAAS,iBAAiBA,SAAQ;AACvC,SAAK,SAAS,MAAK;EACrB;EAEA,WAAW,oBAA6D;AACtE,QAAI,mBAAmB,OAAM,MAAW,mBAAc,cAAc,SAAQ,EAAG,kBAAiB,GAAI;AAClG;IACF;AACA,SAAK,qBAAqB;AAC1B,SAAK,aAAa,WAAW,IAAI;AACjC,SAAK,iBAAiB,IAAI,eAAe,kBAAkB;AAC3D,QAAI,KAAK,iBAAiB;AACxB,WAAK,gBAAgB,cAAc,KAAK,cAAc;IACxD;AACA,SAAK,eAAe,WAAU;AAC9B,SAAK,2BAA0B;EACjC;EAEA,aAAa,oBAA6D;AACxE,QAAI,KAAK,uBAAuB,oBAAoB;AAClD;IACF;AACA,WAAO,KAAK;AACZ,SAAK,aAAa,WAAW,KAAK;AAClC,QAAI,KAAK,gBAAgB;AACvB,WAAK,eAAe,OAAM;AAC1B,aAAO,KAAK;IACd;AACA,SAAK,2BAA0B;EACjC;EAEQ,sBAAmB;AACzB,UAAM,UAAU,KAAK,aAAa,UAAS;AAC3C,SAAK,eAAe,IAAI,OAAO;AAC/B,SAAK,2BAA0B;EACjC;EAEQ,6BAA0B;AAChC,QAAI,CAAC,KAAK,iBAAiB;AACzB;IACF;AACA,UAAM,UAAU,QAAQ,KAAK,eAAe,IAAG,KAAM,KAAK,cAAc;AACxE,SAAK,aAAa,WAAW,OAAO;AACpC,QAAI,SAAS;AACX,WAAK,gBAAgB,SAAQ;IAC/B,OAAO;AACL,WAAK,gBAAgB,SAAQ;IAC/B;EACF;;AAGF,IAAI;AAEE,IAAO,wBAAP,MAAO,uBAAqB;EAChC,OAAO,SAAS,OAA4B,EAAC,UAAU,MAAK,GAAC;AAC3D,UAAM,EAAC,SAAQ,IAAI;AACnB,QAAI,CAAC,iCAAiC,UAAU;AAC9C,sCAAgC,IAAI,uBAAqB;IAC3D;AAEA,WAAO;EACT;EAEA,OAAI;AACF,WAAO,cAAc,SAAQ,EAAG;EAClC;;AAGF,IAAI;AAEE,IAAO,wBAAP,MAAO,uBAAqB;EAChC,OAAO,SAAS,OAA4B,EAAC,UAAU,MAAK,GAAC;AAC3D,UAAM,EAAC,SAAQ,IAAI;AACnB,QAAI,CAAC,iCAAiC,UAAU;AAC9C,sCAAgC,IAAI,uBAAqB;IAC3D;AAEA,WAAO;EACT;EAEA,YAAS;AACP,WAAO,cAAc,SAAQ;EAC/B;;",
  "names": ["Common", "i18n", "SDK", "UI", "SDK", "UIStrings", "str_", "i18nString", "document"]
}
