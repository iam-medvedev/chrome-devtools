{"version":3,"file":"ApplicationPanelSidebar.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ApplicationPanelSidebar.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {createTarget, stubNoopSettings} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n  setMockConnectionResponseHandler,\n} from '../../testing/MockConnection.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Application from './application.js';\n\nconst {assert} = chai;\n\nclass SharedStorageTreeElementListener {\n  #sidebar: Application.ApplicationPanelSidebar.ApplicationPanelSidebar;\n  #originsAdded: Array<String> = new Array<String>();\n\n  constructor(sidebar: Application.ApplicationPanelSidebar.ApplicationPanelSidebar) {\n    this.#sidebar = sidebar;\n\n    this.#sidebar.sharedStorageTreeElementDispatcher.addEventListener(\n        Application.ApplicationPanelSidebar.SharedStorageTreeElementDispatcher.Events.SharedStorageTreeElementAdded,\n        this.#treeElementAdded, this);\n  }\n\n  dispose(): void {\n    this.#sidebar.sharedStorageTreeElementDispatcher.removeEventListener(\n        Application.ApplicationPanelSidebar.SharedStorageTreeElementDispatcher.Events.SharedStorageTreeElementAdded,\n        this.#treeElementAdded, this);\n  }\n\n  #treeElementAdded(\n      event: Common.EventTarget.EventTargetEvent<Application.ApplicationPanelSidebar.SharedStorageTreeElementDispatcher\n                                                     .SharedStorageTreeElementAddedEvent>): void {\n    this.#originsAdded.push(event.data.origin);\n  }\n\n  async waitForElementsAdded(expectedCount: number): Promise<void> {\n    while (this.#originsAdded.length < expectedCount) {\n      await this.#sidebar.sharedStorageTreeElementDispatcher.once(\n          Application.ApplicationPanelSidebar.SharedStorageTreeElementDispatcher.Events.SharedStorageTreeElementAdded);\n    }\n  }\n}\n\ndescribeWithMockConnection('ApplicationPanelSidebar', () => {\n  const tests = (targetFactory: () => SDK.Target.Target) => {\n    let target: SDK.Target.Target;\n\n    const TEST_ORIGIN_A = 'http://www.example.com/';\n    const TEST_ORIGIN_B = 'http://www.example.org/';\n    const TEST_ORIGIN_C = 'http://www.example.net/';\n\n    const ID = 'AA' as Protocol.Page.FrameId;\n\n    const EVENTS = [\n      {\n        accessTime: 0,\n        type: Protocol.Storage.SharedStorageAccessType.DocumentAppend,\n        mainFrameId: ID,\n        ownerOrigin: TEST_ORIGIN_A,\n        params: {key: 'key0', value: 'value0'} as Protocol.Storage.SharedStorageAccessParams,\n      },\n      {\n        accessTime: 10,\n        type: Protocol.Storage.SharedStorageAccessType.WorkletGet,\n        mainFrameId: ID,\n        ownerOrigin: TEST_ORIGIN_A,\n        params: {key: 'key0'} as Protocol.Storage.SharedStorageAccessParams,\n      },\n      {\n        accessTime: 15,\n        type: Protocol.Storage.SharedStorageAccessType.WorkletLength,\n        mainFrameId: ID,\n        ownerOrigin: TEST_ORIGIN_A,\n        params: {} as Protocol.Storage.SharedStorageAccessParams,\n      },\n      {\n        accessTime: 20,\n        type: Protocol.Storage.SharedStorageAccessType.DocumentClear,\n        mainFrameId: ID,\n        ownerOrigin: TEST_ORIGIN_C,\n        params: {} as Protocol.Storage.SharedStorageAccessParams,\n      },\n      {\n        accessTime: 100,\n        type: Protocol.Storage.SharedStorageAccessType.WorkletSet,\n        mainFrameId: ID,\n        ownerOrigin: TEST_ORIGIN_C,\n        params: {key: 'key0', value: 'value1', ignoreIfPresent: true} as Protocol.Storage.SharedStorageAccessParams,\n      },\n      {\n        accessTime: 150,\n        type: Protocol.Storage.SharedStorageAccessType.WorkletRemainingBudget,\n        mainFrameId: ID,\n        ownerOrigin: TEST_ORIGIN_C,\n        params: {} as Protocol.Storage.SharedStorageAccessParams,\n      },\n    ];\n\n    beforeEach(() => {\n      stubNoopSettings();\n      target = targetFactory();\n      Root.Runtime.experiments.register(Root.Runtime.ExperimentName.PRELOADING_STATUS_PANEL, '', false);\n      Root.Runtime.experiments.register(Root.Runtime.ExperimentName.STORAGE_BUCKETS_TREE, '', false);\n      sinon.stub(UI.ViewManager.ViewManager.instance(), 'showView').resolves();  // Silence console error\n      setMockConnectionResponseHandler('Storage.getSharedStorageEntries', () => ({}));\n      setMockConnectionResponseHandler('Storage.setSharedStorageTracking', () => ({}));\n    });\n\n    // Flaking on multiple bots on CQ.\n    it.skip('[crbug.com/1472237] shows cookies for all frames', async () => {\n      Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n      const sidebar = await Application.ResourcesPanel.ResourcesPanel.showAndGetSidebar();\n      const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      assertNotNullOrUndefined(resourceTreeModel);\n      sinon.stub(resourceTreeModel, 'frames').returns([\n        {\n          url: 'http://www.example.com/',\n          unreachableUrl: () => null,\n          resourceTreeModel: () => resourceTreeModel,\n        } as unknown as SDK.ResourceTreeModel.ResourceTreeFrame,\n        {\n          url: 'http://www.example.com/admin/',\n          unreachableUrl: () => null,\n          resourceTreeModel: () => resourceTreeModel,\n        } as unknown as SDK.ResourceTreeModel.ResourceTreeFrame,\n        {\n          url: 'http://www.example.org/',\n          unreachableUrl: () => null,\n          resourceTreeModel: () => resourceTreeModel,\n        } as unknown as SDK.ResourceTreeModel.ResourceTreeFrame,\n      ]);\n      resourceTreeModel.dispatchEventToListeners(SDK.ResourceTreeModel.Events.CachedResourcesLoaded, resourceTreeModel);\n\n      assert.strictEqual(sidebar.cookieListTreeElement.childCount(), 2);\n      assert.deepStrictEqual(\n          sidebar.cookieListTreeElement.children().map(e => e.title),\n          ['http://www.example.com', 'http://www.example.org']);\n    });\n\n    // Flaking on windows + subsequence test failing\n    it.skip('[crbug.com/1472651] shows shared storages and events for origins using shared storage', async () => {\n      const securityOriginManager = target.model(SDK.SecurityOriginManager.SecurityOriginManager);\n      assertNotNullOrUndefined(securityOriginManager);\n      sinon.stub(securityOriginManager, 'securityOrigins').returns([\n        TEST_ORIGIN_A,\n        TEST_ORIGIN_B,\n        TEST_ORIGIN_C,\n      ]);\n\n      const sharedStorageModel = target.model(Application.SharedStorageModel.SharedStorageModel);\n      assertNotNullOrUndefined(sharedStorageModel);\n      const setTrackingSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_setSharedStorageTracking').resolves({\n        getError: () => undefined,\n      });\n\n      Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n      const sidebar = await Application.ResourcesPanel.ResourcesPanel.showAndGetSidebar();\n\n      const listener = new SharedStorageTreeElementListener(sidebar);\n      const addedPromise = listener.waitForElementsAdded(3);\n\n      const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      assertNotNullOrUndefined(resourceTreeModel);\n      resourceTreeModel.dispatchEventToListeners(SDK.ResourceTreeModel.Events.CachedResourcesLoaded, resourceTreeModel);\n      await addedPromise;\n\n      assert.isTrue(setTrackingSpy.calledOnceWithExactly({enable: true}));\n\n      assert.strictEqual(sidebar.sharedStorageListTreeElement.childCount(), 3);\n      assert.deepStrictEqual(sidebar.sharedStorageListTreeElement.children().map(e => e.title), [\n        TEST_ORIGIN_A,\n        TEST_ORIGIN_B,\n        TEST_ORIGIN_C,\n      ]);\n\n      sidebar.sharedStorageListTreeElement.view.setDefaultIdForTesting(ID);\n      for (const event of EVENTS) {\n        sharedStorageModel.dispatchEventToListeners(Application.SharedStorageModel.Events.SharedStorageAccess, event);\n      }\n\n      assert.deepEqual(sidebar.sharedStorageListTreeElement.view.getEventsForTesting(), EVENTS);\n    });\n\n    async function getExpectedCall(expectedCall: string): Promise<sinon.SinonSpy> {\n      Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n      const sidebar = await Application.ResourcesPanel.ResourcesPanel.showAndGetSidebar();\n      const components = expectedCall.split('.');\n      assert.strictEqual(components.length, 2);\n      // @ts-ignore\n      const object = sidebar[components[0]];\n      assertNotNullOrUndefined(object);\n      return sinon.spy(object, components[1]);\n    }\n\n    const MOCK_EVENT_ITEM = {\n      addEventListener: () => {},\n      securityOrigin: 'https://example.com',\n      databaseId: new Application.IndexedDBModel.DatabaseId({storageKey: ''}, ''),\n    };\n\n    const testUiUpdate = <Events, T extends keyof Events>(\n        event: T, modelClass: new (arg1: SDK.Target.Target) => SDK.SDKModel.SDKModel<Events>,\n        expectedCallString: string, inScope: boolean) => async () => {\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n      const expectedCall = await getExpectedCall(expectedCallString);\n      const model = target.model(modelClass);\n      assertNotNullOrUndefined(model);\n      const data = [{...MOCK_EVENT_ITEM, model}] as Common.EventTarget.EventPayloadToRestParameters<Events, T>;\n      model.dispatchEventToListeners(event as Platform.TypeScriptUtilities.NoUnion<T>, ...data);\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.strictEqual(expectedCall.called, inScope);\n    };\n\n    it('adds interest group event on in scope event',\n       testUiUpdate(\n           Application.InterestGroupStorageModel.Events.InterestGroupAccess,\n           Application.InterestGroupStorageModel.InterestGroupStorageModel, 'interestGroupTreeElement.addEvent', true));\n    it('does not add interest group event on out of scope event',\n       testUiUpdate(\n           Application.InterestGroupStorageModel.Events.InterestGroupAccess,\n           Application.InterestGroupStorageModel.InterestGroupStorageModel, 'interestGroupTreeElement.addEvent',\n           false));\n    it('adds DOM storage on in scope event',\n       testUiUpdate(\n           Application.DOMStorageModel.Events.DOMStorageAdded, Application.DOMStorageModel.DOMStorageModel,\n           'sessionStorageListTreeElement.appendChild', true));\n    it('does not add DOM storage on out of scope event',\n       testUiUpdate(\n           Application.DOMStorageModel.Events.DOMStorageAdded, Application.DOMStorageModel.DOMStorageModel,\n           'sessionStorageListTreeElement.appendChild', false));\n\n    it('adds indexed DB on in scope event',\n       testUiUpdate(\n           Application.IndexedDBModel.Events.DatabaseAdded, Application.IndexedDBModel.IndexedDBModel,\n           'indexedDBListTreeElement.appendChild', true));\n    it('does not add indexed DB on out of scope event',\n       testUiUpdate(\n           Application.IndexedDBModel.Events.DatabaseAdded, Application.IndexedDBModel.IndexedDBModel,\n           'indexedDBListTreeElement.appendChild', false));\n\n    it('adds shared storage on in scope event',\n       testUiUpdate(\n           Application.SharedStorageModel.Events.SharedStorageAdded, Application.SharedStorageModel.SharedStorageModel,\n           'sharedStorageListTreeElement.appendChild', true));\n    it('does not add shared storage on out of scope event',\n       testUiUpdate(\n           Application.SharedStorageModel.Events.SharedStorageAdded, Application.SharedStorageModel.SharedStorageModel,\n           'sharedStorageListTreeElement.appendChild', false));\n\n    const MOCK_GETTER_ITEM = {\n      ...MOCK_EVENT_ITEM,\n      ...MOCK_EVENT_ITEM.databaseId,\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const testUiUpdateOnScopeChange = <T extends SDK.SDKModel.SDKModel<any>>(\n        modelClass: new (arg1: SDK.Target.Target) => T, getter: keyof T, expectedCallString: string) => async () => {\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(null);\n      const expectedCall = await getExpectedCall(expectedCallString);\n      const model = target.model(modelClass);\n      assertNotNullOrUndefined(model);\n      sinon.stub(model, getter).returns([MOCK_GETTER_ITEM]);\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(target);\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.strictEqual(expectedCall.called, true);\n    };\n\n    it('adds DOM storage element after scope change',\n       testUiUpdateOnScopeChange(\n           Application.DOMStorageModel.DOMStorageModel, 'storages', 'sessionStorageListTreeElement.appendChild'));\n\n    it('adds shared storage after scope change',\n       testUiUpdateOnScopeChange(\n           Application.SharedStorageModel.SharedStorageModel, 'storages', 'sharedStorageListTreeElement.appendChild'));\n\n    it('adds indexed db after scope change',\n       testUiUpdateOnScopeChange(\n           Application.IndexedDBModel.IndexedDBModel, 'databases', 'indexedDBListTreeElement.appendChild'));\n  };\n  describe('without tab target', () => tests(() => createTarget()));\n  describe('with tab target', () => tests(() => {\n                                const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n                                createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n                                return createTarget({parentTarget: tabTarget});\n                              }));\n});\n\ndescribeWithMockConnection('IDBDatabaseTreeElement', () => {\n  beforeEach(() => {\n    stubNoopSettings();\n    Root.Runtime.experiments.register(Root.Runtime.ExperimentName.PRELOADING_STATUS_PANEL, '', false);\n    Root.Runtime.experiments.register(Root.Runtime.ExperimentName.STORAGE_BUCKETS_TREE, '', false);\n  });\n\n  it('only becomes selectable after database is updated', () => {\n    const target = createTarget();\n    const model = target.model(Application.IndexedDBModel.IndexedDBModel);\n    assertNotNullOrUndefined(model);\n    const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n    const databaseId = new Application.IndexedDBModel.DatabaseId({storageKey: ''}, '');\n    const treeElement = new Application.ApplicationPanelSidebar.IDBDatabaseTreeElement(panel, model, databaseId);\n\n    assert.isFalse(treeElement.selectable);\n    treeElement.update(new Application.IndexedDBModel.Database(databaseId, 1), false);\n    assert.isTrue(treeElement.selectable);\n  });\n});\n\ndescribeWithMockConnection('ResourcesSection', () => {\n  const tests = (inScope: boolean) => () => {\n    let target: SDK.Target.Target;\n    beforeEach(() => {\n      stubNoopSettings();\n      Root.Runtime.experiments.register(Root.Runtime.ExperimentName.PRELOADING_STATUS_PANEL, '', false);\n      Root.Runtime.experiments.register(Root.Runtime.ExperimentName.STORAGE_BUCKETS_TREE, '', false);\n      SDK.FrameManager.FrameManager.instance({forceNew: true});\n      target = createTarget();\n    });\n\n    const FRAME_ID = 'frame-id' as Protocol.Page.FrameId;\n\n    it('adds tree elements for a frame and resource', () => {\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n      const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n      const treeElement = new UI.TreeOutline.TreeElement();\n      new Application.ApplicationPanelSidebar.ResourcesSection(panel, treeElement);\n\n      const model = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      assertNotNullOrUndefined(model);\n\n      assert.strictEqual(treeElement.childCount(), 0);\n      const frame = model.frameAttached(FRAME_ID, null);\n      assertNotNullOrUndefined(frame);\n      assert.strictEqual(treeElement.childCount(), inScope ? 1 : 0);\n\n      const mimeType = 'text/html';\n      const url = 'http://example.com' as Platform.DevToolsPath.UrlString;\n      const resource = new SDK.Resource.Resource(\n          model, null, url, url, FRAME_ID, null, Common.ResourceType.ResourceType.fromMimeType(mimeType), mimeType,\n          null, null);\n      assert.strictEqual(treeElement.firstChild()?.childCount() ?? 0, 0);\n      model.dispatchEventToListeners(SDK.ResourceTreeModel.Events.ResourceAdded, resource);\n      assert.strictEqual(treeElement.firstChild()?.childCount() ?? 0, inScope ? 1 : 0);\n    });\n\n    it('picks up existing frames and resource', () => {\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(null);\n      const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n      const treeElement = new UI.TreeOutline.TreeElement();\n      new Application.ApplicationPanelSidebar.ResourcesSection(panel, treeElement);\n\n      const model = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      assertNotNullOrUndefined(model);\n\n      const frame = model.frameAttached(FRAME_ID, null);\n      assertNotNullOrUndefined(frame);\n\n      const mimeType = 'text/html';\n      const url = 'http://example.com' as Platform.DevToolsPath.UrlString;\n      const resource = new SDK.Resource.Resource(\n          model, null, url, url, FRAME_ID, null, Common.ResourceType.ResourceType.fromMimeType(mimeType), mimeType,\n          null, null);\n      assert.strictEqual(treeElement.firstChild()?.childCount() ?? 0, 0);\n      frame.addResource(resource);\n\n      assert.strictEqual(treeElement.childCount(), 0);\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n      assert.strictEqual(treeElement.childCount(), inScope ? 1 : 0);\n      assert.strictEqual(treeElement.firstChild()?.childCount() ?? 0, inScope ? 1 : 0);\n    });\n  };\n\n  describe('in scope', tests(true));\n  describe('out of scope', tests(false));\n});\n"]}