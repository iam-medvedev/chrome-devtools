{"version":3,"file":"BounceTrackingMitigationsView.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/BounceTrackingMitigationsView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {getValuesOfAllBodyRows} from '../../../testing/DataGridHelpers.js';\nimport {\n  dispatchClickEvent,\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\nimport {createTarget} from '../../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n  setMockConnectionResponseHandler,\n} from '../../../testing/MockConnection.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as ApplicationComponents from './components.js';\n\nasync function renderBounceTrackingMitigationsView():\n    Promise<ApplicationComponents.BounceTrackingMitigationsView.BounceTrackingMitigationsView> {\n  const component = new ApplicationComponents.BounceTrackingMitigationsView.BounceTrackingMitigationsView();\n  component.style.display = 'block';\n  component.style.width = '640px';\n  component.style.height = '480px';\n  renderElementIntoDOM(component);\n\n  // The data-grid's renderer is scheduled, so we need to wait until the coordinator\n  // is done before we can test against it.\n  await RenderCoordinator.done();\n\n  return component;\n}\n\nfunction getInternalDataGridShadowRoot(\n    component: ApplicationComponents.BounceTrackingMitigationsView.BounceTrackingMitigationsView): ShadowRoot {\n  const dataGrid = component.shadowRoot!.querySelector('devtools-data-grid')!;\n  assert.isNotNull(dataGrid.shadowRoot);\n  return dataGrid.shadowRoot;\n}\n\ndescribeWithMockConnection('BounceTrackingMitigationsView', () => {\n  it('shows no message or table if the force run button has not been clicked', async () => {\n    createTarget();\n    setMockConnectionResponseHandler('SystemInfo.getFeatureState', () => ({featureEnabled: true}));\n    setMockConnectionResponseHandler('Storage.runBounceTrackingMitigations', () => ({deletedSites: []}));\n\n    const component = await renderBounceTrackingMitigationsView();\n    await RenderCoordinator.done();\n\n    const nullGridElement = component.shadowRoot!.querySelector('devtools-data-grid');\n    assert.isNull(nullGridElement);\n\n    const sections = component.shadowRoot!.querySelectorAll('devtools-report-section');\n    const sectionsText = Array.from(sections).map(section => section.textContent?.trim());\n    const expected = [\n      'Force run',\n      'Learn more: Bounce Tracking Mitigations',\n    ];\n\n    assert.deepEqual(sectionsText, expected);\n  });\n\n  it('shows a message explaining that Bounce Tracking Mitigations must be enabled to use the panel', async () => {\n    createTarget();\n    setMockConnectionResponseHandler('SystemInfo.getFeatureState', () => ({featureEnabled: false}));\n\n    const component = await renderBounceTrackingMitigationsView();\n    await RenderCoordinator.done();\n\n    const nullGridElement = component.shadowRoot!.querySelector('devtools-data-grid');\n    assert.isNull(nullGridElement);\n\n    const sections = component.shadowRoot!.querySelectorAll('devtools-report-section');\n    const sectionsText = Array.from(sections).map(section => section.textContent?.trim());\n    const expected = [\n      'Bounce tracking mitigations are disabled. To enable them, set the flag at Bounce Tracking Mitigations Feature Flag to \"Enabled With Deletion\".',\n    ];\n\n    assert.deepEqual(sectionsText, expected);\n  });\n\n  it('hides deleted sites table and shows explanation message when there are no deleted tracking sites', async () => {\n    createTarget();\n    setMockConnectionResponseHandler('SystemInfo.getFeatureState', () => ({featureEnabled: true}));\n    const runBounceTrackingMitigationsPromise = new Promise(resolve => {\n      setMockConnectionResponseHandler('Storage.runBounceTrackingMitigations', () => {\n        resolve(undefined);\n        return {deletedSites: []};\n      });\n    });\n\n    const component = await renderBounceTrackingMitigationsView();\n    await RenderCoordinator.done();\n\n    const forceRunButton = component.shadowRoot!.querySelector('[aria-label=\"Force run\"]');\n    assert.instanceOf(forceRunButton, HTMLElement);\n    dispatchClickEvent(forceRunButton);\n    await runBounceTrackingMitigationsPromise;\n\n    await RenderCoordinator.done();\n\n    const nullGridElement = component.shadowRoot!.querySelector('devtools-data-grid');\n    assert.isNull(nullGridElement);\n\n    const sections = component.shadowRoot!.querySelectorAll('devtools-report-section');\n    const sectionsText = Array.from(sections).map(section => section.textContent?.trim());\n    const expected = [\n      'Force run',\n      'State was not cleared for any potential bounce tracking sites. Either none were identified or third-party cookies are not blocked.',\n      'Learn more: Bounce Tracking Mitigations',\n    ];\n\n    assert.deepEqual(sectionsText, expected);\n  });\n\n  it('renders deleted sites in a table', async () => {\n    createTarget();\n    setMockConnectionResponseHandler('SystemInfo.getFeatureState', () => ({featureEnabled: true}));\n    setMockConnectionResponseHandler(\n        'Storage.runBounceTrackingMitigations', () => ({deletedSites: ['tracker-1.example', 'tracker-2.example']}));\n\n    const component = await renderBounceTrackingMitigationsView();\n    await RenderCoordinator.done();\n\n    const forceRunButton = component.shadowRoot!.querySelector('[aria-label=\"Force run\"]');\n    assert.instanceOf(forceRunButton, HTMLElement);\n    dispatchClickEvent(forceRunButton);\n\n    await RenderCoordinator.done({waitForWork: true});\n\n    const dataGridShadowRoot = getInternalDataGridShadowRoot(component);\n    const rowValues = getValuesOfAllBodyRows(dataGridShadowRoot);\n    assert.deepEqual(rowValues, [\n      ['tracker-1.example'],\n      ['tracker-2.example'],\n    ]);\n  });\n});\n"]}