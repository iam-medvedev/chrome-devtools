{"version":3,"file":"StackTrace.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/StackTrace.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/expandable_list/expandable_list.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as Bindings from '../../../models/bindings/bindings.js';\nimport * as Components from '../../../ui/legacy/components/utils/utils.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport stackTraceLinkButtonStylesRaw from './stackTraceLinkButton.css.js';\nimport stackTraceRowStylesRaw from './stackTraceRow.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst stackTraceLinkButtonStyles = new CSSStyleSheet();\nstackTraceLinkButtonStyles.replaceSync(stackTraceLinkButtonStylesRaw.cssContent);\nconst stackTraceRowStyles = new CSSStyleSheet();\nstackTraceRowStyles.replaceSync(stackTraceRowStylesRaw.cssContent);\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description Error message stating that something went wrong when tring to render stack trace\n   */\n  cannotRenderStackTrace: 'Cannot render stack trace',\n  /**\n   *@description A link to show more frames in the stack trace if more are available. Never 0.\n   */\n  showSMoreFrames: '{n, plural, =1 {Show # more frame} other {Show # more frames}}',\n  /**\n   *@description A link to rehide frames that are by default hidden.\n   */\n  showLess: 'Show less',\n  /**\n   *@description Label for a stack trace. If a frame is created programmatically (i.e. via JavaScript), there is a\n   * stack trace for the line of code which caused the creation of the iframe. This is the stack trace we are showing here.\n   */\n  creationStackTrace: 'Frame Creation `Stack Trace`',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/StackTrace.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface StackTraceData {\n  frame: SDK.ResourceTreeModel.ResourceTreeFrame;\n  buildStackTraceRows: (\n      stackTrace: Protocol.Runtime.StackTrace,\n      target: SDK.Target.Target|null,\n      linkifier: Components.Linkifier.Linkifier,\n      tabStops: boolean|undefined,\n      updateCallback?: (arg0: Array<Components.JSPresentationUtils.StackTraceRegularRow|\n                                    Components.JSPresentationUtils.StackTraceAsyncRow>) => void,\n      ) => Array<Components.JSPresentationUtils.StackTraceRegularRow|Components.JSPresentationUtils.StackTraceAsyncRow>;\n}\n\ninterface StackTraceRowData {\n  stackTraceRowItem: Components.JSPresentationUtils.StackTraceRegularRow;\n}\n\nexport class StackTraceRow extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #stackTraceRowItem: Components.JSPresentationUtils.StackTraceRegularRow|null = null;\n\n  set data(data: StackTraceRowData) {\n    this.#stackTraceRowItem = data.stackTraceRowItem;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [stackTraceRowStyles];\n  }\n\n  #render(): void {\n    if (!this.#stackTraceRowItem) {\n      return;\n    }\n    Lit.render(\n        html`\n      <div class=\"stack-trace-row\">\n              <div class=\"stack-trace-function-name text-ellipsis\" title=${this.#stackTraceRowItem.functionName}>\n                ${this.#stackTraceRowItem.functionName}\n              </div>\n              <div class=\"stack-trace-source-location\">\n                ${\n            this.#stackTraceRowItem.link ?\n                html`<div class=\"text-ellipsis\">\\xA0@\\xA0${this.#stackTraceRowItem.link}</div>` :\n                Lit.nothing}\n              </div>\n            </div>\n    `,\n        this.#shadow, {host: this});\n  }\n}\n\ninterface StackTraceLinkButtonData {\n  onShowAllClick: () => void;\n  hiddenCallFramesCount: number;\n  expandedView: boolean;\n}\n\nexport class StackTraceLinkButton extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #onShowAllClick: () => void = () => {};\n  #hiddenCallFramesCount: number|null = null;\n  #expandedView = false;\n\n  set data(data: StackTraceLinkButtonData) {\n    this.#onShowAllClick = data.onShowAllClick;\n    this.#hiddenCallFramesCount = data.hiddenCallFramesCount;\n    this.#expandedView = data.expandedView;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [stackTraceLinkButtonStyles];\n  }\n\n  #render(): void {\n    if (!this.#hiddenCallFramesCount) {\n      return;\n    }\n    const linkText = this.#expandedView ? i18nString(UIStrings.showLess) :\n                                          i18nString(UIStrings.showSMoreFrames, {n: this.#hiddenCallFramesCount});\n    Lit.render(\n        html`\n      <div class=\"stack-trace-row\">\n          <button class=\"link\" @click=${() => this.#onShowAllClick()}>\n            ${linkText}\n          </button>\n        </div>\n    `,\n        this.#shadow, {host: this});\n  }\n}\n\nexport class StackTrace extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #linkifier = new Components.Linkifier.Linkifier();\n  #stackTraceRows:\n      Array<Components.JSPresentationUtils.StackTraceRegularRow|Components.JSPresentationUtils.StackTraceAsyncRow> = [];\n  #showHidden = false;\n\n  set data(data: StackTraceData) {\n    const frame = data.frame;\n    const {creationStackTrace, creationStackTraceTarget} = frame.getCreationStackTraceData();\n    if (creationStackTrace) {\n      this.#stackTraceRows = data.buildStackTraceRows(\n          creationStackTrace, creationStackTraceTarget, this.#linkifier, true,\n          this.#onStackTraceRowsUpdated.bind(this));\n    }\n    this.#render();\n  }\n\n  #onStackTraceRowsUpdated(\n      stackTraceRows:\n          Array<Components.JSPresentationUtils.StackTraceRegularRow|Components.JSPresentationUtils.StackTraceAsyncRow>):\n      void {\n    this.#stackTraceRows = stackTraceRows;\n    this.#render();\n  }\n\n  #onToggleShowAllClick(): void {\n    this.#showHidden = !this.#showHidden;\n    this.#render();\n  }\n\n  createRowTemplates(): Lit.TemplateResult[] {\n    const expandableRows = [];\n    let hiddenCallFramesCount = 0;\n    for (const item of this.#stackTraceRows) {\n      let ignoreListHide = false;\n      // TODO(crbug.com/1183325): fix race condition with uiLocation still being null here\n      // Note: This has always checked whether the call frame location *in the generated\n      // code* is ignore-listed or not. This can change after the live location updates,\n      // and is handled again in the linkifier live location update callback.\n      if ('link' in item && item.link) {\n        const uiLocation = Components.Linkifier.Linkifier.uiLocation(item.link);\n        if (uiLocation &&\n            Bindings.IgnoreListManager.IgnoreListManager.instance().isUserOrSourceMapIgnoreListedUISourceCode(\n                uiLocation.uiSourceCode)) {\n          ignoreListHide = true;\n        }\n      }\n      if (this.#showHidden || !ignoreListHide) {\n        if ('functionName' in item) {\n          expandableRows.push(html`\n          <devtools-stack-trace-row data-stack-trace-row .data=${{\n            stackTraceRowItem:\n              item,\n          }}></devtools-stack-trace-row>`);\n        }\n        if ('asyncDescription' in item) {\n          expandableRows.push(html`\n            <div>${item.asyncDescription}</div>\n          `);\n        }\n      }\n      if ('functionName' in item && ignoreListHide) {\n        hiddenCallFramesCount++;\n      }\n    }\n    if (hiddenCallFramesCount) {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      expandableRows.push(html`\n      <devtools-stack-trace-link-button data-stack-trace-row .data=${{onShowAllClick: this.#onToggleShowAllClick.bind(this), hiddenCallFramesCount, expandedView: this.#showHidden}}></devtools-stack-trace-link-button>\n      `);\n      // clang-format on\n    }\n\n    return expandableRows;\n  }\n\n  #render(): void {\n    if (!this.#stackTraceRows.length) {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      Lit.render(\n        html`\n          <span>${i18nString(UIStrings.cannotRenderStackTrace)}</span>\n        `,\n        this.#shadow, {host: this});\n      return;\n    }\n\n    const expandableRows = this.createRowTemplates();\n    Lit.render(\n      html`\n        <devtools-expandable-list .data=${{rows: expandableRows, title: i18nString(UIStrings.creationStackTrace)}}\n                                  jslog=${VisualLogging.tree()}>\n        </devtools-expandable-list>\n      `,\n      this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-stack-trace-row', StackTraceRow);\ncustomElements.define('devtools-stack-trace-link-button', StackTraceLinkButton);\ncustomElements.define('devtools-resources-stack-trace', StackTrace);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-stack-trace-row': StackTraceRow;\n    'devtools-stack-trace-link-button': StackTraceLinkButton;\n    'devtools-resources-stack-trace': StackTrace;\n  }\n}\n"]}