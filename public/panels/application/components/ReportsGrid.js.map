{"version":3,"file":"ReportsGrid.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/ReportsGrid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/legacy/components/data_grid/data_grid.js';\nimport '../../../ui/components/icon_button/icon_button.js';\nimport '../../../ui/legacy/legacy.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Root from '../../../core/root/root.js';\nimport type * as Protocol from '../../../generated/protocol.js';\n// inspectorCommonStyles is imported for the empty state styling that is used for the start view\n// eslint-disable-next-line rulesdir/es-modules-import\nimport inspectorCommonStylesRaw from '../../../ui/legacy/inspectorCommon.css.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport reportingApiGridStylesRaw from './reportingApiGrid.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst reportingApiGridStyles = new CSSStyleSheet();\nreportingApiGridStyles.replaceSync(reportingApiGridStylesRaw.cssContent);\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst inspectorCommonStyles = new CSSStyleSheet();\ninspectorCommonStyles.replaceSync(inspectorCommonStylesRaw.cssContent);\n\nconst UIStrings = {\n  /**\n   *@description Placeholder text when there are no Reporting API reports.\n   *(https://developers.google.com/web/updates/2018/09/reportingapi#sending)\n   */\n  noReportsToDisplay: 'No reports to display',\n  /**\n   *@description Placeholder text that explains Reporting API reports.\n   *(https://developers.google.com/web/updates/2018/09/reportingapi#sending)\n   */\n  reportingApiDescription: 'Here you will find reporting api reports that are generated by the page.',\n  /**\n   * @description Link text to forward to a documentation page on reporting API.\n   */\n  learnMore: 'Learn more',\n  /**\n   *@description Column header for a table displaying Reporting API reports.\n   *Status is one of 'Queued', 'Pending', 'MarkedForRemoval' or 'Success'.\n   */\n  status: 'Status',\n  /**\n   *@description Column header for a table displaying Reporting API reports.\n   *Destination is the name of the endpoint the report is being sent to.\n   */\n  destination: 'Destination',\n  /**\n   *@description Column header for a table displaying Reporting API reports.\n   *The column contains the timestamp of when a report was generated.\n   */\n  generatedAt: 'Generated at'\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/ReportsGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html} = Lit;\n\nconst REPORTING_API_EXPLANATION_URL = 'https://developer.chrome.com/docs/capabilities/web-apis/reporting-api';\n\nexport class ReportsGridStatusHeader extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [reportingApiGridStyles];\n    this.#render();\n  }\n\n  #render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      ${i18nString(UIStrings.status)}\n      <x-link href=\"https://web.dev/reporting-api/#report-status\"\n      jslog=${VisualLogging.link('report-status').track({click: true})}>\n        <devtools-icon class=\"inline-icon\" .data=${{\n          iconName: 'help',\n          color: 'var(--icon-link)',\n          width: '16px',\n          height: '16px',\n          }}></devtools-icon>\n      </x-link>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nexport interface ReportsGridData {\n  reports: Protocol.Network.ReportingApiReport[];\n}\n\nexport class ReportsGrid extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #reports: Protocol.Network.ReportingApiReport[] = [];\n  #protocolMonitorExperimentEnabled = false;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [reportingApiGridStyles, inspectorCommonStyles];\n    this.#protocolMonitorExperimentEnabled = Root.Runtime.experiments.isEnabled('protocol-monitor');\n    this.#render();\n  }\n\n  set data(data: ReportsGridData) {\n    this.#reports = data.reports;\n    this.#render();\n  }\n\n  #render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <div class=\"reporting-container\" jslog=${VisualLogging.section('reports')}>\n        <div class=\"reporting-header\">${i18n.i18n.lockedString('Reports')}</div>\n        ${this.#reports.length > 0 ? html`\n          <devtools-data-grid striped @select=${this.#onSelect}>\n            <table>\n              <tr>\n                ${this.#protocolMonitorExperimentEnabled ? html`\n                  <th id=\"id\" weight=\"30\">${i18n.i18n.lockedString('ID')}</th>\n                ` : ''}\n                <th id=\"url\" weight=\"30\">${i18n.i18n.lockedString('URL')}</th>\n                <th id=\"type\" weight=\"20\">${i18n.i18n.lockedString('Type')}</th>\n                <th id=\"status\" weight=\"20\">\n                    <devtools-resources-reports-grid-status-header></devtools-resources-reports-grid-status-header>\n                </th>\n                <th id=\"destination\" weight=\"20\">${i18nString(UIStrings.destination)}</th>\n                <th id=\"timestamp\" weight=\"20\">${i18nString(UIStrings.generatedAt)}</th>\n                <th id=\"body\" weight=\"20\">${i18n.i18n.lockedString('Body')}</th>\n              </tr>\n              ${this.#reports.map(report => html`\n                <tr data-id=${report.id}>\n                  ${this.#protocolMonitorExperimentEnabled ? html`<td>${report.id}</td>` : ''}\n                  <td>${report.initiatorUrl}</td>\n                  <td>${report.type}</td>\n                  <td>${report.status}</td>\n                  <td>${report.destination}</td>\n                  <td>${new Date(report.timestamp * 1000).toLocaleString()}</td>\n                  <td>${JSON.stringify(report.body)}</td>\n                </tr>\n              `)}\n            </table>\n          </devtools-data-grid>\n        ` : html`\n          <div class=\"empty-state\">\n            <span class=\"empty-state-header\">${i18nString(UIStrings.noReportsToDisplay)}</span>\n            <div class=\"empty-state-description\">\n              <span>${i18nString(UIStrings.reportingApiDescription)}</span>\n              ${UI.XLink.XLink.create(REPORTING_API_EXPLANATION_URL, i18nString(UIStrings.learnMore), undefined, undefined, 'learn-more')}\n            </div>\n          </div>\n        `}\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #onSelect(e: CustomEvent<HTMLElement|null>): void {\n    if (e.detail) {\n      this.dispatchEvent(new CustomEvent('select', {detail: e.detail.dataset.id}));\n    }\n  }\n}\n\ncustomElements.define('devtools-resources-reports-grid-status-header', ReportsGridStatusHeader);\ncustomElements.define('devtools-resources-reports-grid', ReportsGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-reports-grid-status-header': ReportsGridStatusHeader;\n    'devtools-resources-reports-grid': ReportsGrid;\n  }\n}\n"]}