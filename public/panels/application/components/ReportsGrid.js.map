{"version":3,"file":"ReportsGrid.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/ReportsGrid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/legacy/components/data_grid/data_grid.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Root from '../../../core/root/root.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport reportsGridStyles from './reportsGrid.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Placeholder text when there are no Reporting API reports.\n   *(https://developers.google.com/web/updates/2018/09/reportingapi#sending)\n   */\n  noReportsToDisplay: 'No reports to display',\n  /**\n   * @description Placeholder text that explains Reporting API reports.\n   *(https://developers.google.com/web/updates/2018/09/reportingapi#sending)\n   */\n  reportingApiDescription: 'Here you will find reporting api reports that are generated by the page.',\n  /**\n   * @description Link text to forward to a documentation page on reporting API.\n   */\n  learnMore: 'Learn more',\n  /**\n   * @description Column header for a table displaying Reporting API reports.\n   *Status is one of 'Queued', 'Pending', 'MarkedForRemoval' or 'Success'.\n   */\n  status: 'Status',\n  /**\n   * @description Column header for a table displaying Reporting API reports.\n   *Destination is the name of the endpoint the report is being sent to.\n   */\n  destination: 'Destination',\n  /**\n   * @description Column header for a table displaying Reporting API reports.\n   *The column contains the timestamp of when a report was generated.\n   */\n  generatedAt: 'Generated at',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/ReportsGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html} = Lit;\n\nconst REPORTING_API_EXPLANATION_URL = 'https://developer.chrome.com/docs/capabilities/web-apis/reporting-api';\n\nexport interface ReportsGridData {\n  reports: Protocol.Network.ReportingApiReport[];\n}\n\nexport interface ViewInput {\n  reports: Protocol.Network.ReportingApiReport[];\n  protocolMonitorExperimentEnabled: boolean;\n  onSelect: (id: string) => void;\n}\n\nexport const DEFAULT_VIEW = (input: ViewInput, output: undefined, target: HTMLElement): void => {\n  // clang-format off\n  render(html`\n    <style>${reportsGridStyles}</style>\n    <style>${UI.inspectorCommonStyles}</style>\n    <div class=\"reporting-container\" jslog=${VisualLogging.section('reports')}>\n      <div class=\"reporting-header\">${i18n.i18n.lockedString('Reports')}</div>\n      ${input.reports.length > 0 ? html`\n        <devtools-data-grid striped>\n          <table>\n            <tr>\n              ${input.protocolMonitorExperimentEnabled ? html`\n                <th id=\"id\" weight=\"30\">${i18n.i18n.lockedString('ID')}</th>\n              ` : ''}\n              <th id=\"url\" weight=\"30\">${i18n.i18n.lockedString('URL')}</th>\n              <th id=\"type\" weight=\"20\">${i18n.i18n.lockedString('Type')}</th>\n              <th id=\"status\" weight=\"20\">\n                <style>${reportsGridStyles}</style>\n                <span class=\"status-header\">${i18nString(UIStrings.status)}</span>\n                <x-link href=\"https://web.dev/reporting-api/#report-status\"\n                jslog=${VisualLogging.link('report-status').track({click: true})}>\n                  <devtools-icon class=\"inline-icon medium\" name=\"help\" style=\"color: var(--icon-link);\"\n                  ></devtools-icon>\n                </x-link>\n              </th>\n              <th id=\"destination\" weight=\"20\">${i18nString(UIStrings.destination)}</th>\n              <th id=\"timestamp\" weight=\"20\">${i18nString(UIStrings.generatedAt)}</th>\n              <th id=\"body\" weight=\"20\">${i18n.i18n.lockedString('Body')}</th>\n            </tr>\n            ${input.reports.map(report => html`\n              <tr @select=${() =>input.onSelect(report.id)}>\n                ${input.protocolMonitorExperimentEnabled ? html`<td>${report.id}</td>` : ''}\n                <td>${report.initiatorUrl}</td>\n                <td>${report.type}</td>\n                <td>${report.status}</td>\n                <td>${report.destination}</td>\n                <td>${new Date(report.timestamp * 1000).toLocaleString()}</td>\n                <td>${JSON.stringify(report.body)}</td>\n              </tr>\n            `)}\n          </table>\n        </devtools-data-grid>\n      ` : html`\n        <div class=\"empty-state\">\n          <span class=\"empty-state-header\">${i18nString(UIStrings.noReportsToDisplay)}</span>\n          <div class=\"empty-state-description\">\n            <span>${i18nString(UIStrings.reportingApiDescription)}</span>\n            ${UI.XLink.XLink.create(REPORTING_API_EXPLANATION_URL, i18nString(UIStrings.learnMore), undefined,\n              undefined, 'learn-more')}\n          </div>\n        </div>\n      `}\n    </div>\n  `, target);\n  // clang-format on\n};\n\ntype View = typeof DEFAULT_VIEW;\n\nexport class ReportsGrid extends UI.Widget.Widget {\n  reports: Protocol.Network.ReportingApiReport[] = [];\n  #protocolMonitorExperimentEnabled = false;\n  #view: View;\n  onReportSelected: (id: string) => void = () => {};\n\n  constructor(element?: HTMLElement, view: View = DEFAULT_VIEW) {\n    super(element);\n    this.#view = view;\n    this.#protocolMonitorExperimentEnabled = Root.Runtime.experiments.isEnabled('protocol-monitor');\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    const viewInput = {\n      reports: this.reports,\n      protocolMonitorExperimentEnabled: this.#protocolMonitorExperimentEnabled,\n      onSelect: this.onReportSelected,\n    };\n    this.#view(viewInput, undefined, this.contentElement);\n  }\n}\n"]}