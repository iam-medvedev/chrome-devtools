{"version":3,"file":"TrustTokensView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/TrustTokensView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/icon_button/icon_button.js';\nimport '../../../ui/legacy/components/data_grid/data_grid.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as LegacyWrapper from '../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n// inspectorCommonStyles is imported for the empty state styling that is used for the start view\n// eslint-disable-next-line rulesdir/es-modules-import\nimport inspectorCommonStylesRaw from '../../../ui/legacy/inspectorCommon.css.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport trustTokensViewStylesRaw from './trustTokensView.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst trustTokensViewStyles = new CSSStyleSheet();\ntrustTokensViewStyles.replaceSync(trustTokensViewStylesRaw.cssContent);\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst inspectorCommonStyles = new CSSStyleSheet();\ninspectorCommonStyles.replaceSync(inspectorCommonStylesRaw.cssContent);\n\nconst PRIVATE_STATE_TOKENS_EXPLANATION_URL =\n    'https://developers.google.com/privacy-sandbox/protections/private-state-tokens';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description Text for the issuer of an item\n   */\n  issuer: 'Issuer',\n  /**\n   *@description Column header for Trust Token table\n   */\n  storedTokenCount: 'Stored token count',\n  /**\n   *@description Hover text for an info icon in the Private State Token panel\n   */\n  allStoredTrustTokensAvailableIn: 'All stored private state tokens available in this browser instance.',\n  /**\n   * @description Text shown instead of a table when the table would be empty. https://developers.google.com/privacy-sandbox/protections/private-state-tokens\n   */\n  noTrustTokens: 'No private state tokens detected',\n  /**\n   * @description Text shown if there are no private state tokens. https://developers.google.com/privacy-sandbox/protections/private-state-tokens\n   */\n  trustTokensDescription:\n      'On this page you can view all available private state tokens in the current browsing context.',\n  /**\n   * @description Each row in the Private State Token table has a delete button. This is the text shown\n   * when hovering over this button. The placeholder is a normal URL, indicating the site which\n   * provided the Private State Tokens that will be deleted when the button is clicked.\n   * @example {https://google.com} PH1\n   */\n  deleteTrustTokens: 'Delete all stored private state tokens issued by {PH1}.',\n  /**\n   * @description Heading label for a view. Previously known as 'Trust Tokens'.\n   */\n  trustTokens: 'Private state tokens',\n  /**\n   * @description Text used in a link to learn more about the topic.\n   */\n  learnMore: 'Learn more',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/TrustTokensView.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface TrustTokensViewData {\n  tokens: Protocol.Storage.TrustTokens[];\n  deleteClickHandler: (issuerOrigin: string) => void;\n}\n\n/** Fetch the Trust Token data regularly from the backend while the panel is open */\nconst REFRESH_INTERVAL_MS = 1000;\n\nexport class TrustTokensView extends LegacyWrapper.LegacyWrapper.WrappableComponent {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #deleteClickHandler(issuerOrigin: string): void {\n    const mainTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    void mainTarget?.storageAgent().invoke_clearTrustTokens({issuerOrigin});\n  }\n\n  connectedCallback(): void {\n    this.wrapper?.contentElement.classList.add('vbox');\n    this.#shadow.adoptedStyleSheets = [trustTokensViewStyles, inspectorCommonStyles];\n    void this.render();\n  }\n\n  override async render(): Promise<void> {\n    const mainTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    if (!mainTarget) {\n      return;\n    }\n    const {tokens} = await mainTarget.storageAgent().invoke_getTrustTokens();\n    tokens.sort((a, b) => a.issuerOrigin.localeCompare(b.issuerOrigin));\n\n    await RenderCoordinator.write('Render TrustTokensView', () => {\n      // clang-format off\n      Lit.render(html`\n        ${this.#renderGridOrNoDataMessage(tokens)}\n      `, this.#shadow, {host: this});\n      // clang-format on\n      if (this.isConnected) {\n        setTimeout(() => this.render(), REFRESH_INTERVAL_MS);\n      }\n    });\n  }\n\n  #renderGridOrNoDataMessage(tokens: Protocol.Storage.TrustTokens[]): Lit.TemplateResult {\n    if (tokens.length === 0) {\n      // clang-format off\n      return html`\n        <div class=\"empty-state\" jslog=${VisualLogging.section().context('empty-view')}>\n          <div class=\"empty-state-header\">${i18nString(UIStrings.noTrustTokens)}</div>\n          <div class=\"empty-state-description\">\n            <span>${i18nString(UIStrings.trustTokensDescription)}</span>\n            ${UI.XLink.XLink.create(PRIVATE_STATE_TOKENS_EXPLANATION_URL, i18nString(UIStrings.learnMore), 'x-link', undefined, 'learn-more')}\n          </div>\n        </div>\n      `;\n      // clang-format on\n    }\n\n    // clang-format off\n    return html`\n      <div>\n        <span class=\"heading\">${i18nString(UIStrings.trustTokens)}</span>\n        <devtools-icon name=\"info\" title=${i18nString(UIStrings.allStoredTrustTokensAvailableIn)}></devtools-icon>\n        <devtools-data-grid striped inline>\n          <table>\n            <tr>\n              <th id=\"issuer\" weight=\"10\" sortable>${i18nString(UIStrings.issuer)}</th>\n              <th id=\"count\" weight=\"5\" sortable>${i18nString(UIStrings.storedTokenCount)}</th>\n              <th id=\"delete-button\" weight=\"1\" sortable></th>\n            </tr>\n            ${tokens.filter(token => token.count > 0)\n                  .map(token => html`\n                <tr>\n                  <td>${removeTrailingSlash(token.issuerOrigin)}</td>\n                  <td>${token.count}</td>\n                  <td>\n                    <devtools-button .iconName=${'bin'}\n                                    .jslogContext=${'delete-all'}\n                                    .size=${Buttons.Button.Size.SMALL}\n                                    .title=${i18nString(UIStrings.deleteTrustTokens, {PH1: removeTrailingSlash(token.issuerOrigin)})}\n                                    .variant=${Buttons.Button.Variant.ICON}\n                                    @click=${this.#deleteClickHandler.bind(this, removeTrailingSlash(token.issuerOrigin))}></devtools-button>\n                  </td>\n                </tr>\n              `)}\n          </table>\n        </devtools-data-grid>\n      </div>\n    `;\n    // clang-format on\n  }\n}\n\nfunction removeTrailingSlash(s: string): string {\n  return s.replace(/\\/$/, '');\n}\n\ncustomElements.define('devtools-trust-tokens-storage-view', TrustTokensView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-trust-tokens-storage-view': TrustTokensView;\n  }\n}\n"]}