{"version":3,"file":"InterestGroupAccessGrid.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/InterestGroupAccessGrid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/legacy/components/data_grid/data_grid.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Protocol from '../../../generated/protocol.js';\n// inspectorCommonStyles is imported for the empty state styling that is used for the start view\n// eslint-disable-next-line rulesdir/es-modules-import\nimport inspectorCommonStylesRaw from '../../../ui/legacy/inspectorCommon.css.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport interestGroupAccessGridStylesRaw from './interestGroupAccessGrid.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst inspectorCommonStyles = new CSSStyleSheet();\ninspectorCommonStyles.replaceSync(inspectorCommonStylesRaw.cssContent);\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst interestGroupAccessGridStyles = new CSSStyleSheet();\ninterestGroupAccessGridStyles.replaceSync(interestGroupAccessGridStylesRaw.cssContent);\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description Hover text for an info icon in the Interest Group Event panel\n   * An interest group is an ad targeting group stored on the browser that can\n   * be used to show a certain set of advertisements in the future as the\n   * outcome of a FLEDGE auction.\n   */\n  allInterestGroupStorageEvents: 'All interest group storage events.',\n  /**\n   *@description Text in InterestGroupStorage Items View of the Application panel\n   * Date and time of an Interest Group storage event in a locale-\n   * dependent format.\n   */\n  eventTime: 'Event Time',\n  /**\n   *@description Text in InterestGroupStorage Items View of the Application panel\n   * Type of interest group event such as 'join', 'bid', 'win', or 'leave'.\n   */\n  eventType: 'Access Type',\n  /**\n   *@description Text in InterestGroupStorage Items View of the Application panel\n   * Owner of the interest group. The origin that controls the\n   * content of information associated with the interest group such as which\n   * ads get displayed.\n   */\n  groupOwner: 'Owner',\n  /**\n   *@description Text in InterestGroupStorage Items View of the Application panel\n   * Name of the interest group. The name is unique per-owner and identifies the\n   * interest group.\n   */\n  groupName: 'Name',\n  /**\n   *@description Text shown when no interest groups are detected.\n   * An interest group is an ad targeting group stored on the browser that can\n   * be used to show a certain set of advertisements in the future as the\n   * outcome of a FLEDGE auction.\n   */\n  noEvents: 'No interest group events detected',\n  /**\n   *@description Text shown when no interest groups are detected and explains what this page is about.\n   * An interest group is an ad targeting group stored on the browser that can\n   * be used to show a certain set of advertisements in the future as the\n   * outcome of a FLEDGE auction.\n   */\n  interestGroupDescription: 'On this page you can inspect and analyze interest groups',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/InterestGroupAccessGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class InterestGroupAccessGrid extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #datastores: Protocol.Storage.InterestGroupAccessedEvent[] = [];\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [interestGroupAccessGridStyles, inspectorCommonStyles];\n    this.#render();\n  }\n\n  // eslint-disable-next-line rulesdir/set-data-type-reference\n  set data(data: Protocol.Storage.InterestGroupAccessedEvent[]) {\n    this.#datastores = data;\n    this.#render();\n  }\n\n  #render(): void {\n    if (this.#datastores.length === 0) {\n      Lit.render(this.#renderEmptyState(), this.#shadow, {host: this});\n      return;\n    }\n    // clang-format off\n    Lit.render(html`\n      <div>\n        <span class=\"heading\">Interest Groups</span>\n        <devtools-icon class=\"info-icon\"\n                       title=${i18nString(UIStrings.allInterestGroupStorageEvents)}\n                       .data=${{iconName: 'info', color: 'var(--icon-default)', width: '16px'}}>\n        </devtools-icon>\n        ${this.#renderGrid()}\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #renderEmptyState(): Lit.TemplateResult {\n    return html`\n      <div class=\"empty-state\">\n        <span class=\"empty-state-header\">${i18nString(UIStrings.noEvents)}</span>\n        <span class=\"empty-state-description\">${i18nString(UIStrings.interestGroupDescription)}</span>\n      </div>\n    `;\n  }\n\n  #renderGrid(): Lit.TemplateResult {\n    return html`\n      <devtools-data-grid @select=${this.#onSelect} striped inline>\n        <table>\n          <tr>\n            <th id=\"event-time\" sortable weight=\"10\">${i18nString(UIStrings.eventTime)}</td>\n            <th id=\"event-type\" sortable weight=\"5\">${i18nString(UIStrings.eventType)}</td>\n            <th id=\"event-group-owner\" sortable weight=\"10\">${i18nString(UIStrings.groupOwner)}</td>\n            <th id=\"event-group-name\" sortable weight=\"10\">${i18nString(UIStrings.groupName)}</td>\n          </tr>\n          ${this.#datastores.map((event, index) => html`\n          <tr data-index=${index}>\n            <td>${new Date(1e3 * event.accessTime).toLocaleString()}</td>\n            <td>${event.type}</td>\n            <td>${event.ownerOrigin}</td>\n            <td>${event.name}</td>\n          </tr>\n        `)}\n        </table>\n      </devtools-data-grid>\n    `;\n  }\n\n  #onSelect(event: CustomEvent<HTMLElement|null>): void {\n    if (event.detail) {\n      this.dispatchEvent(new CustomEvent('select', {detail: this.#datastores[Number(event.detail.dataset.index)]}));\n    }\n  }\n}\n\ncustomElements.define('devtools-interest-group-access-grid', InterestGroupAccessGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-interest-group-access-grid': InterestGroupAccessGrid;\n  }\n}\n"]}