{"version":3,"file":"InterestGroupAccessGrid.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/InterestGroupAccessGrid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/legacy/components/data_grid/data_grid.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport interestGroupAccessGridStyles from './interestGroupAccessGrid.css.js';\n\nconst {html} = LitHtml;\n\nconst UIStrings = {\n  /**\n   *@description Hover text for an info icon in the Interest Group Event panel\n   * An interest group is an ad targeting group stored on the browser that can\n   * be used to show a certain set of advertisements in the future as the\n   * outcome of a FLEDGE auction.\n   */\n  allInterestGroupStorageEvents: 'All interest group storage events.',\n  /**\n   *@description Text in InterestGroupStorage Items View of the Application panel\n   * Date and time of an Interest Group storage event in a locale-\n   * dependent format.\n   */\n  eventTime: 'Event Time',\n  /**\n   *@description Text in InterestGroupStorage Items View of the Application panel\n   * Type of interest group event such as 'join', 'bid', 'win', or 'leave'.\n   */\n  eventType: 'Access Type',\n  /**\n   *@description Text in InterestGroupStorage Items View of the Application panel\n   * Owner of the interest group. The origin that controls the\n   * content of information associated with the interest group such as which\n   * ads get displayed.\n   */\n  groupOwner: 'Owner',\n  /**\n   *@description Text in InterestGroupStorage Items View of the Application panel\n   * Name of the interest group. The name is unique per-owner and identifies the\n   * interest group.\n   */\n  groupName: 'Name',\n  /**\n   *@description Text shown instead of a table when the table would be empty.\n   */\n  noEvents: 'No interest group events recorded.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/InterestGroupAccessGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class InterestGroupAccessGrid extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #datastores: Array<Protocol.Storage.InterestGroupAccessedEvent> = [];\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [interestGroupAccessGridStyles];\n    this.#render();\n  }\n\n  set data(data: Array<Protocol.Storage.InterestGroupAccessedEvent>) {\n    this.#datastores = data;\n    this.#render();\n  }\n\n  #render(): void {\n    // clang-format off\n    LitHtml.render(html`\n      <div>\n        <span class=\"heading\">Interest Groups</span>\n        <devtools-icon class=\"info-icon\"\n                       title=${i18nString(UIStrings.allInterestGroupStorageEvents)}\n                       .data=${{iconName: 'info', color: 'var(--icon-default)', width: '16px'}}>\n        </devtools-icon>\n        ${this.#renderGridOrNoDataMessage()}\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #renderGridOrNoDataMessage(): LitHtml.TemplateResult {\n    if (this.#datastores.length === 0) {\n      return html`<div class=\"no-events-message\">${i18nString(UIStrings.noEvents)}</div>`;\n    }\n\n    return html`\n      <devtools-new-data-grid @select=${this.#onSelect}>\n        <table>\n          <tr>\n            <th id=\"event-time\" sortable weight=\"10\">${i18nString(UIStrings.eventTime)}</td>\n            <th id=\"event-type\" sortable weight=\"5\">${i18nString(UIStrings.eventType)}</td>\n            <th id=\"event-group-owner\" sortable weight=\"10\">${i18nString(UIStrings.groupOwner)}</td>\n            <th id=\"event-group-name\" sortable weight=\"10\">${i18nString(UIStrings.groupName)}</td>\n          </tr>\n          ${this.#datastores.map((event, index) => html`\n          <tr data-index=${index}>\n            <td>${new Date(1e3 * event.accessTime).toLocaleString()}</td>\n            <td>${event.type}</td>\n            <td>${event.ownerOrigin}</td>\n            <td>${event.name}</td>\n          </tr>\n        `)}\n        </table>\n      </devtools-new-data-grid>\n    `;\n  }\n\n  #onSelect(event: CustomEvent<HTMLElement|null>): void {\n    if (event.detail) {\n      this.dispatchEvent(new CustomEvent('select', {detail: this.#datastores[Number(event.detail.dataset.index)]}));\n    }\n  }\n}\n\ncustomElements.define('devtools-interest-group-access-grid', InterestGroupAccessGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-interest-group-access-grid': InterestGroupAccessGrid;\n  }\n}\n"]}