{"version":3,"file":"OriginTrialTreeView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/OriginTrialTreeView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/icon_button/icon_button.js';\nimport '../../../ui/components/tree_outline/tree_outline.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Protocol from '../../../generated/protocol.js';\nimport * as Adorners from '../../../ui/components/adorners/adorners.js';\nimport type * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport type * as TreeOutline from '../../../ui/components/tree_outline/tree_outline.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport badgeStylesRaw from './badge.css.js';\nimport originTrialTokenRowsStylesRaw from './originTrialTokenRows.css.js';\nimport originTrialTreeViewStylesRaw from './originTrialTreeView.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst badgeStyles = new CSSStyleSheet();\nbadgeStyles.replaceSync(badgeStylesRaw.cssContent);\nconst originTrialTokenRowsStyles = new CSSStyleSheet();\noriginTrialTokenRowsStyles.replaceSync(originTrialTokenRowsStylesRaw.cssContent);\nconst originTrialTreeViewStyles = new CSSStyleSheet();\noriginTrialTreeViewStyles.replaceSync(originTrialTreeViewStylesRaw.cssContent);\n\nconst {html, Directives: {ifDefined}} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description Label for the 'origin' field in a parsed Origin Trial Token.\n   */\n  origin: 'Origin',\n  /**\n   *@description Label for `trialName` field in a parsed Origin Trial Token.\n   * This field is only shown when token has unknown trial name as the token\n   * will be put into 'UNKNOWN' group.\n   */\n  trialName: 'Trial Name',\n  /**\n   *@description Label for `expiryTime` field in a parsed Origin Trial Token.\n   */\n  expiryTime: 'Expiry Time',\n  /**\n   *@description Label for `usageRestriction` field in a parsed Origin Trial Token.\n   */\n  usageRestriction: 'Usage Restriction',\n  /**\n   *@description Label for `isThirdParty` field in a parsed Origin Trial Token.\n   */\n  isThirdParty: 'Third Party',\n  /**\n   *@description Label for a field containing info about an Origin Trial Token's `matchSubDomains` field.\n   *An Origin Trial Token contains an origin URL. The `matchSubDomains` field describes whether the token\n   *only applies to the origin URL or to all subdomains of the origin URL as well.\n   *The field contains either 'true' or 'false'.\n   */\n  matchSubDomains: 'Subdomain Matching',\n  /**\n   *@description Label for the raw(= encoded / not human-readable) Origin Trial Token.\n   */\n  rawTokenText: 'Raw Token',\n  /**\n   *@description Label for `status` field in an Origin Trial Token.\n   */\n  status: 'Token Status',\n  /**\n   *@description Label for tokenWithStatus node.\n   */\n  token: 'Token',\n  /**\n   *@description Label for a badge showing the number of Origin Trial Tokens. This number is always greater than 1.\n   *@example {2} PH1\n   */\n  tokens: '{PH1} tokens',\n  /**\n   *@description Label shown when there are no Origin Trial Tokens in the Frame view of the Application panel.\n   */\n  noTrialTokens: 'No trial tokens',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/OriginTrialTreeView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface BadgeData {\n  badgeContent: string;\n  style: 'error'|'success'|'secondary';\n}\n\nexport class Badge extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #adorner = new Adorners.Adorner.Adorner();\n\n  set data(data: BadgeData) {\n    this.#render(data);\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [badgeStyles];\n  }\n\n  #render(data: BadgeData): void {\n    const adornerContent = document.createElement('span');\n    adornerContent.textContent = data.badgeContent;\n    this.#adorner.data = {\n      name: 'badge',\n      content: adornerContent,\n    };\n    this.#adorner.classList.add(`badge-${data.style}`);\n\n    Lit.render(\n        html`\n      ${this.#adorner}\n    `,\n        this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-resources-origin-trial-tree-view-badge', Badge);\n\ntype TreeNode<DataType> = TreeOutline.TreeOutlineUtils.TreeNode<DataType>;\n\n// The Origin Trial Tree has 4 levels of content:\n// - Origin Trial (has multiple Origin Trial tokens)\n// - Origin Trial Token (has only 1 raw token text)\n// - Fields in Origin Trial Token\n// - Raw Origin Trial Token text (folded because the content is long)\nexport type OriginTrialTreeNodeData = Protocol.Page.OriginTrial|Protocol.Page.OriginTrialTokenWithStatus|string;\n\nfunction constructOriginTrialTree(originTrial: Protocol.Page.OriginTrial): TreeNode<OriginTrialTreeNodeData> {\n  return {\n    treeNodeData: originTrial,\n    id: 'OriginTrialTreeNode#' + originTrial.trialName,\n    children: async () => originTrial.tokensWithStatus.length > 1 ?\n        originTrial.tokensWithStatus.map(constructTokenNode) :\n        constructTokenDetailsNodes(originTrial.tokensWithStatus[0]),\n    renderer: (node: TreeNode<OriginTrialTreeNodeData>) => {\n      const trial = node.treeNodeData as Protocol.Page.OriginTrial;\n      const tokenCountBadge = html`\n        <devtools-resources-origin-trial-tree-view-badge .data=${{\n        badgeContent: i18nString(UIStrings.tokens, {PH1: trial.tokensWithStatus.length}),\n        style: 'secondary',\n      } as BadgeData}></devtools-resources-origin-trial-tree-view-badge>\n      `;\n\n      return html`\n        ${trial.trialName}\n        <devtools-resources-origin-trial-tree-view-badge .data=${{\n        badgeContent: trial.status,\n        style: trial.status === Protocol.Page.OriginTrialStatus.Enabled ? 'success' : 'error',\n      } as BadgeData}></devtools-resources-origin-trial-tree-view-badge>\n        ${trial.tokensWithStatus.length > 1 ? tokenCountBadge : Lit.nothing}\n      `;\n    },\n  };\n}\n\nfunction constructTokenNode(token: Protocol.Page.OriginTrialTokenWithStatus): TreeNode<OriginTrialTreeNodeData> {\n  return {\n    treeNodeData: token.status,\n    id: 'TokenNode#' + token.rawTokenText,\n    children: async () => constructTokenDetailsNodes(token),\n    renderer: (node: TreeNode<OriginTrialTreeNodeData>, state: {isExpanded: boolean}) => {\n      const tokenStatus = node.treeNodeData as string;\n      const statusBadge = html`\n        <devtools-resources-origin-trial-tree-view-badge .data=${{\n        badgeContent: tokenStatus,\n        style: tokenStatus === Protocol.Page.OriginTrialTokenStatus.Success ? 'success' : 'error',\n      } as BadgeData}></devtools-resources-origin-trial-tree-view-badge>\n      `;\n      // Only display token status for convenience when the node is not expanded.\n      return html`${i18nString(UIStrings.token)} ${state.isExpanded ? Lit.nothing : statusBadge}`;\n    },\n  };\n}\n\ninterface TokenField {\n  name: string;\n  value: Lit.TemplateResult;\n}\n\nfunction renderTokenDetails(node: TreeNode<OriginTrialTreeNodeData>): Lit.TemplateResult {\n  return html`\n    <devtools-resources-origin-trial-token-rows .data=${{node} as OriginTrialTokenRowsData}>\n    </devtools-resources-origin-trial-token-rows>\n    `;\n}\n\nfunction constructTokenDetailsNodes(token: Protocol.Page.OriginTrialTokenWithStatus):\n    Array<TreeNode<OriginTrialTreeNodeData>> {\n  return [\n    {\n      treeNodeData: token,\n      id: 'TokenDetailsNode#' + token.rawTokenText,\n      renderer: renderTokenDetails,\n    },\n    constructRawTokenTextNode(token.rawTokenText),\n  ];\n}\n\nfunction constructRawTokenTextNode(tokenText: string): TreeNode<OriginTrialTreeNodeData> {\n  return {\n    treeNodeData: i18nString(UIStrings.rawTokenText),\n    id: 'TokenRawTextContainerNode#' + tokenText,\n    children: async () => [{\n      treeNodeData: tokenText,\n      id: 'TokenRawTextNode#' + tokenText,\n      renderer: (data: TreeNode<OriginTrialTreeNodeData>) => {\n        const tokenText = data.treeNodeData as string;\n        return html`\n        <div style=\"overflow-wrap: break-word;\">\n          ${tokenText}\n        </div>\n        `;\n      },\n    }],\n  };\n}\n\nfunction defaultRenderer(node: TreeNode<OriginTrialTreeNodeData>): Lit.TemplateResult {\n  return html`${String(node.treeNodeData)}`;\n}\n\nexport interface OriginTrialTokenRowsData {\n  node: TreeNode<OriginTrialTreeNodeData>;\n}\n\nexport class OriginTrialTokenRows extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #tokenWithStatus: Protocol.Page.OriginTrialTokenWithStatus|null = null;\n  #parsedTokenDetails: TokenField[] = [];\n  #dateFormatter: Intl.DateTimeFormat = new Intl.DateTimeFormat(\n      i18n.DevToolsLocale.DevToolsLocale.instance().locale,\n      {dateStyle: 'long', timeStyle: 'long'},\n  );\n\n  set data(data: OriginTrialTokenRowsData) {\n    this.#tokenWithStatus = data.node.treeNodeData as Protocol.Page.OriginTrialTokenWithStatus;\n    this.#setTokenFields();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [originTrialTokenRowsStyles];\n    this.#render();\n  }\n\n  #renderTokenField = (fieldValue: string, hasError?: boolean): Lit.TemplateResult => html`\n        <div class=${ifDefined(hasError ? 'error-text' : undefined)}>\n          ${fieldValue}\n        </div>`;\n\n  #setTokenFields(): void {\n    if (!this.#tokenWithStatus?.parsedToken) {\n      return;\n    }\n    this.#parsedTokenDetails = [\n      {\n        name: i18nString(UIStrings.origin),\n        value: this.#renderTokenField(\n            this.#tokenWithStatus.parsedToken.origin,\n            this.#tokenWithStatus.status === Protocol.Page.OriginTrialTokenStatus.WrongOrigin),\n      },\n      {\n        name: i18nString(UIStrings.expiryTime),\n        value: this.#renderTokenField(\n            this.#dateFormatter.format(this.#tokenWithStatus.parsedToken.expiryTime * 1000),\n            this.#tokenWithStatus.status === Protocol.Page.OriginTrialTokenStatus.Expired),\n      },\n      {\n        name: i18nString(UIStrings.usageRestriction),\n        value: this.#renderTokenField(this.#tokenWithStatus.parsedToken.usageRestriction),\n      },\n      {\n        name: i18nString(UIStrings.isThirdParty),\n        value: this.#renderTokenField(this.#tokenWithStatus.parsedToken.isThirdParty.toString()),\n      },\n      {\n        name: i18nString(UIStrings.matchSubDomains),\n        value: this.#renderTokenField(this.#tokenWithStatus.parsedToken.matchSubDomains.toString()),\n      },\n    ];\n\n    if (this.#tokenWithStatus.status === Protocol.Page.OriginTrialTokenStatus.UnknownTrial) {\n      this.#parsedTokenDetails = [\n        {\n          name: i18nString(UIStrings.trialName),\n          value: this.#renderTokenField(this.#tokenWithStatus.parsedToken.trialName),\n        },\n        ...this.#parsedTokenDetails,\n      ];\n    }\n  }\n\n  #render(): void {\n    if (!this.#tokenWithStatus) {\n      return;\n    }\n\n    const tokenDetails: TokenField[] = [\n      {\n        name: i18nString(UIStrings.status),\n        value: html`\n          <devtools-resources-origin-trial-tree-view-badge .data=${{\n          badgeContent: this.#tokenWithStatus.status,\n          style: this.#tokenWithStatus.status === Protocol.Page.OriginTrialTokenStatus.Success ? 'success' : 'error',\n        } as BadgeData}></devtools-resources-origin-trial-tree-view-badge>`,\n      },\n      ...this.#parsedTokenDetails,\n    ];\n\n    const tokenDetailRows = tokenDetails.map((field: TokenField) => {\n      return html`\n          <div class=\"key\">${field.name}</div>\n          <div class=\"value\">${field.value}</div>\n          `;\n    });\n\n    Lit.render(\n        html`\n      <div class=\"content\">\n        ${tokenDetailRows}\n      </div>\n    `,\n        this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-resources-origin-trial-token-rows', OriginTrialTokenRows);\n\nexport interface OriginTrialTreeViewData {\n  trials: Protocol.Page.OriginTrial[];\n}\n\nexport class OriginTrialTreeView extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  set data(data: OriginTrialTreeViewData) {\n    this.#render(data.trials);\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [originTrialTreeViewStyles];\n  }\n\n  #render(trials: Protocol.Page.OriginTrial[]): void {\n    if (!trials.length) {\n      Lit.render(\n          html`\n    <span class=\"status-badge\">\n      <devtools-icon\n          .data=${{\n            iconName: 'clear',\n            color: 'var(--icon-default)',\n            width: '16px',\n            height: '16px',\n          } as IconButton.Icon.IconWithName}\n        >\n      </devtools-icon>\n      <span>${i18nString(UIStrings.noTrialTokens)}</span>\n    </span>`,\n          this.#shadow, {host: this});\n      return;\n    }\n\n    Lit.render(\n        html`\n      <devtools-tree-outline .data=${{\n          tree: trials.map(constructOriginTrialTree),\n          defaultRenderer,\n        } as TreeOutline.TreeOutline.TreeOutlineData < OriginTrialTreeNodeData >}>\n      </devtools-tree-outline>\n    `,\n        this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-resources-origin-trial-tree-view', OriginTrialTreeView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-origin-trial-tree-view': OriginTrialTreeView;\n    'devtools-resources-origin-trial-token-rows': OriginTrialTokenRows;\n    'devtools-resources-origin-trial-tree-view-badge': Badge;\n  }\n}\n"]}