{"version":3,"file":"InterestGroupAccessGrid.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/InterestGroupAccessGrid.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,EAAC,sBAAsB,EAAC,MAAM,qCAAqC,CAAC;AAC3E,OAAO,EACL,oBAAoB,GACrB,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAAC,kBAAkB,EAAC,MAAM,wCAAwC,CAAC;AAC1E,OAAO,KAAK,iBAAiB,MAAM,iEAAiE,CAAC;AAErG,OAAO,KAAK,qBAAqB,MAAM,iBAAiB,CAAC;AAEzD,KAAK,UAAU,6BAA6B,CAAC,MAAqD;IAEhG,MAAM,SAAS,GAAG,IAAI,qBAAqB,CAAC,uBAAuB,CAAC,uBAAuB,EAAE,CAAC;IAC9F,oBAAoB,CAAC,SAAS,CAAC,CAAC;IAChC,SAAS,CAAC,IAAI,GAAG,MAAM,CAAC;IAExB,kFAAkF;IAClF,yCAAyC;IACzC,MAAM,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAE/B,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAS,6BAA6B,CAClC,SAAgF;IAClF,MAAM,QAAQ,GAAG,SAAS,CAAC,UAAW,CAAC,aAAa,CAAC,oBAAoB,CAAE,CAAC;IAC5E,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACtC,OAAO,QAAQ,CAAC,UAAU,CAAC;AAC7B,CAAC;AAED,kBAAkB,CAAC,yBAAyB,EAAE,GAAG,EAAE;IACjD,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,SAAS,GAAG,MAAM,6BAA6B,CAAC;YACpD;gBACE,UAAU,EAAE,CAAC;gBACb,IAAI,0DAA8C;gBAClD,WAAW,EAAE,oBAAoB;gBACjC,IAAI,EAAE,MAAM;aACb;YACD;gBACE,UAAU,EAAE,EAAE;gBACd,IAAI,4DAA+C;gBACnD,WAAW,EAAE,oBAAoB;gBACjC,IAAI,EAAE,QAAQ;aACf;SACF,CAAC,CAAC;QAEH,MAAM,kBAAkB,GAAG,6BAA6B,CAAC,SAAS,CAAC,CAAC;QACpE,MAAM,SAAS,GAAG,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;QAC7D,MAAM,cAAc,GAAG;YACrB,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,cAAc,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,MAAM,CAAC;YAC3E,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,oBAAoB,EAAE,QAAQ,CAAC;SAChF,CAAC;QACF,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,SAAS,GAAG,MAAM,6BAA6B,CAAC,EAAE,CAAC,CAAC;QAE1D,MAAM,eAAe,GAAG,SAAS,CAAC,UAAW,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;QAClF,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAE/B,MAAM,eAAe,GAAG,SAAS,CAAC,UAAW,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC5E,MAAM,CAAC,UAAU,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../../generated/protocol.js';\nimport {getValuesOfAllBodyRows} from '../../../testing/DataGridHelpers.js';\nimport {\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\nimport {describeWithLocale} from '../../../testing/EnvironmentHelpers.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as ApplicationComponents from './components.js';\n\nasync function renderInterestGroupAccessGrid(events: Protocol.Storage.InterestGroupAccessedEvent[]):\n    Promise<ApplicationComponents.InterestGroupAccessGrid.InterestGroupAccessGrid> {\n  const component = new ApplicationComponents.InterestGroupAccessGrid.InterestGroupAccessGrid();\n  renderElementIntoDOM(component);\n  component.data = events;\n\n  // The data-grid's renderer is scheduled, so we need to wait until the coordinator\n  // is done before we can test against it.\n  await RenderCoordinator.done();\n\n  return component;\n}\n\nfunction getInternalDataGridShadowRoot(\n    component: ApplicationComponents.InterestGroupAccessGrid.InterestGroupAccessGrid): ShadowRoot {\n  const dataGrid = component.shadowRoot!.querySelector('devtools-data-grid')!;\n  assert.isNotNull(dataGrid.shadowRoot);\n  return dataGrid.shadowRoot;\n}\n\ndescribeWithLocale('InterestGroupAccessGrid', () => {\n  it('renders interest group access events', async () => {\n    const component = await renderInterestGroupAccessGrid([\n      {\n        accessTime: 0,\n        type: Protocol.Storage.InterestGroupAccessType.Bid,\n        ownerOrigin: 'https://owner1.com',\n        name: 'cars',\n      },\n      {\n        accessTime: 10,\n        type: Protocol.Storage.InterestGroupAccessType.Join,\n        ownerOrigin: 'https://owner2.com',\n        name: 'trucks',\n      },\n    ]);\n\n    const dataGridShadowRoot = getInternalDataGridShadowRoot(component);\n    const rowValues = getValuesOfAllBodyRows(dataGridShadowRoot);\n    const expectedValues = [\n      [(new Date(0 * 1e3)).toLocaleString(), 'bid', 'https://owner1.com', 'cars'],\n      [(new Date(10 * 1e3)).toLocaleString(), 'join', 'https://owner2.com', 'trucks'],\n    ];\n    assert.deepEqual(rowValues, expectedValues);\n  });\n\n  it('hides interest group event table when there are no events', async () => {\n    const component = await renderInterestGroupAccessGrid([]);\n\n    const nullGridElement = component.shadowRoot!.querySelector('devtools-data-grid');\n    assert.isNull(nullGridElement);\n\n    const noEventsElement = component.shadowRoot!.querySelector('.empty-state');\n    assert.instanceOf(noEventsElement, HTMLDivElement);\n  });\n});\n"]}