{"version":3,"file":"ReportingApiView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ReportingApiView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ApplicationComponents from './components/components.js';\n\nconst {widgetConfig} = UI.Widget;\n\nconst UIStrings = {\n  /**\n   * @description Placeholder text that shows if no report or endpoint was detected.\n   *             A report contains information on issues or events that were encountered by a web browser.\n   *             An endpoint is a URL where the report is sent to.\n   *             (https://developer.chrome.com/docs/capabilities/web-apis/reporting-api)\n   */\n  noReportOrEndpoint: 'No report or endpoint',\n  /**\n   * @description Placeholder text that shows if no report or endpoint was detected.\n   *             A report contains information on issues or events that were encountered by a web browser.\n   *             An endpoint is a URL where the report is sent to.\n   *             (https://developer.chrome.com/docs/capabilities/web-apis/reporting-api)\n   */\n  reportingApiDescription: 'On this page you will be able to inspect `Reporting API` reports and endpoints.',\n  /**\n   * @description Placeholder text that shows if no report was selected for viewing\n   *report body (https://developers.google.com/web/updates/2018/09/reportingapi#sending).\n   */\n  noReportSelected: 'No report selected',\n  /**\n   * @description Placeholder text instructing the user how to display a Reporting API\n   *report body (https://developers.google.com/web/updates/2018/09/reportingapi#sending).\n   */\n  clickToDisplayBody: 'Click on any report to display its body',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ReportingApiView.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst REPORTING_API_EXPLANATION_URL =\n    'https://developer.chrome.com/docs/capabilities/web-apis/reporting-api' as Platform.DevToolsPath.UrlString;\n\ninterface ViewInput {\n  hasReports: boolean;\n  hasEndpoints: boolean;\n  // TODO (crbug.com/407940329): port EndpointsGrid to a UI Widget and instantiate it in the view\n  endpointsGrid: ApplicationComponents.EndpointsGrid.EndpointsGrid;\n  // TODO (crbug.com/407940381): port ReportsGrid to a UI Widget and instantiate it in the view\n  reportsGrid: ApplicationComponents.ReportsGrid.ReportsGrid;\n  focusedReport?: Protocol.Network.ReportingApiReport;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  if (input.hasReports || input.hasEndpoints) {\n    // clang-format off\n    render(html`\n      <devtools-split-view sidebar-position=\"second\" sidebar-initial-size=\"150\" jslog=${\n          VisualLogging.pane('reporting-api')}>\n        ${input.hasReports ? html`\n          <devtools-split-view slot=\"main\" sidebar-position=\"second\" sidebar-initial-size=\"150\">\n            <div slot=\"main\">\n              ${input.reportsGrid}\n            </div>\n            <div slot=\"sidebar\" class=\"vbox\" jslog=${VisualLogging.pane('preview').track({resize: true})}>\n              ${input.focusedReport ? html`\n                <devtools-widget .widgetConfig=${widgetConfig(\n                  element => SourceFrame.JSONView.JSONView.createViewSync(input.focusedReport?.body || '', element)\n                )}></devtools-widget>\n              ` : html`\n                <devtools-widget .widgetConfig=${widgetConfig(UI.EmptyWidget.EmptyWidget, {\n                  header: i18nString(UIStrings.noReportSelected),\n                  text: i18nString(UIStrings.clickToDisplayBody),\n                })}></devtools-widget>\n              `}\n            </div>\n          </devtools-split-view>\n        ` : html`\n          <div slot=\"main\">\n            ${input.reportsGrid}\n          </div>\n        `}\n        <div slot=\"sidebar\">\n          ${input.endpointsGrid}\n        </div>\n      </devtools-split-view>\n    `, target);\n    // clang-format on\n  } else {\n    // clang-format off\n    render(html`\n      <devtools-widget .widgetConfig=${widgetConfig(UI.EmptyWidget.EmptyWidget, {\n        header: i18nString(UIStrings.noReportOrEndpoint),\n        text: i18nString(UIStrings.reportingApiDescription),\n        link: REPORTING_API_EXPLANATION_URL,\n      })} jslog=${VisualLogging.pane('reporting-api-empty')}></devtools-widget>\n    `, target);\n    // clang-format on\n  }\n};\n\nexport class ReportingApiView extends UI.Widget.VBox implements\n    SDK.TargetManager.SDKModelObserver<SDK.NetworkManager.NetworkManager> {\n  readonly #endpointsGrid: ApplicationComponents.EndpointsGrid.EndpointsGrid;\n  #endpoints: Map<string, Protocol.Network.ReportingApiEndpoint[]>;\n  #view: View;\n  #networkManager?: SDK.NetworkManager.NetworkManager;\n  #reportsGrid = new ApplicationComponents.ReportsGrid.ReportsGrid();\n  #reports: Protocol.Network.ReportingApiReport[] = [];\n  #focusedReport?: Protocol.Network.ReportingApiReport;\n\n  constructor(endpointsGrid: ApplicationComponents.EndpointsGrid.EndpointsGrid, view = DEFAULT_VIEW) {\n    super();\n    this.#view = view;\n    this.#endpointsGrid = endpointsGrid;\n    this.#endpoints = new Map();\n    this.#reportsGrid.addEventListener('select', this.#onFocus.bind(this));\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.NetworkManager.NetworkManager, this);\n    this.requestUpdate();\n  }\n\n  modelAdded(networkManager: SDK.NetworkManager.NetworkManager): void {\n    if (networkManager.target() !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.#networkManager = networkManager;\n    this.#networkManager.addEventListener(\n        SDK.NetworkManager.Events.ReportingApiEndpointsChangedForOrigin, this.#onEndpointsChangedForOrigin, this);\n    this.#networkManager.addEventListener(SDK.NetworkManager.Events.ReportingApiReportAdded, this.#onReportAdded, this);\n    this.#networkManager.addEventListener(\n        SDK.NetworkManager.Events.ReportingApiReportUpdated, this.#onReportUpdated, this);\n    void this.#networkManager.enableReportingApi();\n    this.requestUpdate();\n  }\n\n  modelRemoved(networkManager: SDK.NetworkManager.NetworkManager): void {\n    if (!this.#networkManager || this.#networkManager !== networkManager) {\n      return;\n    }\n    this.#networkManager.removeEventListener(\n        SDK.NetworkManager.Events.ReportingApiEndpointsChangedForOrigin, this.#onEndpointsChangedForOrigin, this);\n    this.#networkManager.removeEventListener(\n        SDK.NetworkManager.Events.ReportingApiReportAdded, this.#onReportAdded, this);\n    this.#networkManager.removeEventListener(\n        SDK.NetworkManager.Events.ReportingApiReportUpdated, this.#onReportUpdated, this);\n    this.#networkManager = undefined;\n  }\n\n  override performUpdate(): void {\n    const viewInput = {\n      hasReports: this.#reports.length > 0,\n      hasEndpoints: this.#endpoints.size > 0,\n      endpointsGrid: this.#endpointsGrid,\n      reportsGrid: this.#reportsGrid,\n      focusedReport: this.#focusedReport,\n    };\n    this.#view(viewInput, {}, this.element);\n  }\n\n  #onEndpointsChangedForOrigin({data}: {data: Protocol.Network.ReportingApiEndpointsChangedForOriginEvent}): void {\n    this.#endpoints.set(data.origin, data.endpoints);\n    this.#endpointsGrid.data = {endpoints: this.#endpoints};\n    this.requestUpdate();\n  }\n\n  #onReportAdded({data: report}: {data: Protocol.Network.ReportingApiReport}): void {\n    this.#reports.push(report);\n    this.#reportsGrid.data = {reports: this.#reports};\n    this.requestUpdate();\n  }\n\n  #onReportUpdated({data: report}: {data: Protocol.Network.ReportingApiReport}): void {\n    const index = this.#reports.findIndex(oldReport => oldReport.id === report.id);\n    this.#reports[index] = report;\n    this.#reportsGrid.data = {reports: this.#reports};\n    this.requestUpdate();\n  }\n\n  async #onFocus(event: Event): Promise<void> {\n    const selectEvent = event as CustomEvent<string>;\n    const report = this.#reports.find(report => report.id === selectEvent.detail);\n    if (report) {\n      this.#focusedReport = report;\n      this.requestUpdate();\n    }\n  }\n}\n"]}