{"version":3,"file":"KeyValueStorageItemsView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/KeyValueStorageItemsView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AACH,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,QAAQ,MAAM,mDAAmD,CAAC;AAC9E,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,KAAK,aAAa,MAAM,2CAA2C,CAAC;AAE3E,OAAO,EAAC,gBAAgB,EAAC,MAAM,uBAAuB,CAAC;AAEvD,MAAM,EAAC,SAAS,EAAC,GAAG,EAAE,CAAC;AACvB,MAAM,EAAC,WAAW,EAAC,GAAG,EAAE,CAAC,WAAW,CAAC;AACrC,MAAM,EAAC,WAAW,EAAC,GAAG,EAAE,CAAC,WAAW,CAAC;AACrC,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,GAAG,EAAE,CAAC,MAAM,CAAC;AACjC,MAAM,EAAC,YAAY,EAAE,YAAY,EAAE,MAAM,EAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAS/D,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,iBAAiB,EAAE,mBAAmB;IACtC;;OAEG;IACH,qBAAqB,EAAE,2BAA2B;IAClD;;;OAGG;IACH,aAAa,EAAE,yCAAyC;IACxD;;OAEG;IACH,GAAG,EAAE,KAAK;IACV;;OAEG;IACH,KAAK,EAAE,OAAO;CACf,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,gDAAgD,EAAE,SAAS,CAAC,CAAC;AACtG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE;;;GAGG;AACH,MAAM,OAAgB,wBAAyB,SAAQ,gBAAgB;IACrE,SAAS,CAAwB;IACxB,YAAY,CAAc;IAC1B,aAAa,CAAO;IAC7B,QAAQ,CAAc;IACtB,aAAa,CAAc;IAE3B,YAAY,KAAa,EAAE,EAAU,EAAE,QAAiB;QACtD,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,CAAC;YAChC,WAAW,EAAE,KAAK;YAClB,OAAO,EAAE;gBACP,EAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAC;gBACnG,EAAC,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAC;aACzG;YACD,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7C,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC9C,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;aAChD,CAAC,CAAC;gBACY,EAAE,CAAC;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,gBAAgB,4CAAuB,KAAK,CAAC,EAAE;YAC5D,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,gBAAgB,gDAAyB,GAAG,EAAE;YAC3D,KAAK,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,gBAAgB,gDAAyB,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,wBAAwB,CAAC,CAAC;QAEtD,IAAI,CAAC,YAAY,GAAG,IAAI,WAAW;QAC/B,iBAAiB,CAAC,KAAK,EAAE,sBAAsB,CAAC,IAAI,EAAE,GAAG,EAAE,mBAAmB,CAAC,CAAC;QACpF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAE5C,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,EAAE,CAAC,CAAC;QAC3G,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC;QACvF,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QACjD,cAAc,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAE1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,IAAI,sBAAsB;QACxB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,cAAc,EAAE,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,GAAW;QACrB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAC3C,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;YACzC,MAAM,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;gBAC/B,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;gBAChC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC/C,OAAO;YACT,CAAC;QACH,CAAC;IACH,CAAC;IAED,SAAS,CAAC,GAAW,EAAE,KAAa;QAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAC3C,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;YACzC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;gBACjC,OAAO;YACT,CAAC;QACH,CAAC;QAED,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,EAAC,GAAG,EAAE,KAAK,EAAC,EAAE,KAAK,CAAC,CAAC;QACxD,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,WAAW,CAAC,GAAW,EAAE,KAAa;QACpC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAA4B,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QACpH,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,OAAO;QACT,CAAC;QACD,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE,CAAC;YACnC,SAAS,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YAC7B,SAAS,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YACxB,OAAO;QACT,CAAC;QACD,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,EAAE,CAAC;YACjC,KAAK,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,SAAS,CAAC,KAAqC;QAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAC3C,IAAI,WAAW,GAAS,IAAI,CAAC;QAC7B,KAAK,MAAM,IAAI,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACnB,SAAS;YACX,CAAC;YACD,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YAC5B,MAAM;QACR,CAAC;QACD,QAAQ,CAAC,cAAc,EAAE,CAAC;QAC1B,IAAI,YAAY,GAA+B,IAAI,CAAC;QACpD,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,mDAAmD;QACnD,MAAM,YAAY,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YACpD,OAAO,aAAa,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QACH,KAAK,MAAM,EAAC,GAAG,EAAE,KAAK,EAAC,IAAI,YAAY,EAAE,CAAC;YACxC,MAAM,IAAI,GAAG,IAAI,YAAY,CAAC,EAAC,GAAG,EAAE,KAAK,EAAC,EAAE,KAAK,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,YAAY,IAAI,GAAG,KAAK,WAAW,EAAE,CAAC;gBACzC,YAAY,GAAG,IAAI,CAAC;YACtB,CAAC;QACH,CAAC;QACD,IAAI,YAAY,EAAE,CAAC;YACjB,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACjD,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,EAAC,GAAG,EAAE,YAAY,CAAC,MAAM,EAAC,CAAC,CAAC,CAAC;IACnF,CAAC;IAEQ,kBAAkB;QACzB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;YACjC,OAAO;QACT,CAAC;QAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IACpD,CAAC;IAED,gBAAgB,CAAC,WAAkC,EAAE,gBAAwB,EAAE,OAAe,EAAE,OAAe;QAE7G,IAAI,gBAAgB,KAAK,KAAK,EAAE,CAAC;YAC/B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE,CAAC;gBAChC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAC3B,CAAC;YACD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;YACpD,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;IAED,YAAY,CAAC,UAAiC;QAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAC3C,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACnC,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;YAC9C,MAAM,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,KAAK,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,KAAK,SAAS,CAAC,EAAE,CAAC;gBAC/E,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAClC,CAAC;QACH,CAAC;IACH,CAAC;IAED,eAAe,CAAC,IAA2B;QACzC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACjC,OAAO;QACT,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,WAAW,CAAC,OAAoB,EAAE,KAAkB;QAClD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,EAAE,CAAC;YAClD,OAAO;QACT,CAAC;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,GAAG,IAAI,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAClH,CAAC;QACD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IAClD,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,KAAiC;QACnD,MAAM,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;QACtD,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC5C,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,KAAe,CAAC,CAAC;YAC1E,0DAA0D;YAC1D,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACnB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YACnC,CAAC;QACH,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAChC,CAAC;IACH,CAAC;IAED,IAAI,QAAQ,CAAC,QAAiB;QAC5B,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/D,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClE,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,CAAC;YACxC,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,SAAS,CAAC;QAC5C,CAAC;IACH,CAAC;CAKF","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Nokia Inc.  All rights reserved.\n * Copyright (C) 2013 Samsung Electronics. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {StorageItemsView} from './StorageItemsView.js';\n\nconst {ARIAUtils} = UI;\nconst {EmptyWidget} = UI.EmptyWidget;\nconst {SplitWidget} = UI.SplitWidget;\nconst {Widget, VBox} = UI.Widget;\nconst {DataGridImpl, DataGridNode, Events} = DataGrid.DataGrid;\n\ntype DataGridImpl<T> = DataGrid.DataGrid.DataGridImpl<T>;\ntype DataGridNode<T> = DataGrid.DataGrid.DataGridNode<T>;\ntype Events = DataGrid.DataGrid.Events;\ntype Widget = UI.Widget.Widget;\ntype SplitWidget = UI.SplitWidget.SplitWidget;\ntype VBox = UI.Widget.VBox;\n\nconst UIStrings = {\n  /**\n   *@description Text that shows in the Applicaiton Panel if no value is selected for preview\n   */\n  noPreviewSelected: 'No value selected',\n  /**\n   *@description Preview text when viewing storage in Application panel\n   */\n  selectAValueToPreview: 'Select a value to preview',\n  /**\n   *@description Text for announcing number of entries after filtering\n   *@example {5} PH1\n   */\n  numberEntries: 'Number of entries shown in table: {PH1}',\n  /**\n   *@description Text in DOMStorage Items View of the Application panel\n   */\n  key: 'Key',\n  /**\n   *@description Text for the value of something\n   */\n  value: 'Value',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/KeyValueStorageItemsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * A helper typically used in the Application panel. Renders a split view\n * between a DataGrid displaying key-value pairs and a preview Widget.\n */\nexport abstract class KeyValueStorageItemsView extends StorageItemsView {\n  #dataGrid: DataGridImpl<unknown>;\n  readonly #splitWidget: SplitWidget;\n  readonly #previewPanel: VBox;\n  #preview: Widget|null;\n  #previewValue: string|null;\n\n  constructor(title: string, id: string, editable: boolean) {\n    super(title, id);\n    this.#dataGrid = new DataGridImpl({\n      displayName: title,\n      columns: [\n        {id: 'key', title: i18nString(UIStrings.key), sortable: true, editable, longText: true, weight: 50},\n        {id: 'value', title: i18nString(UIStrings.value), sortable: false, editable, longText: true, weight: 50}\n      ],\n      refreshCallback: this.refreshItems.bind(this),\n      ...(editable ? {\n        editCallback: this.#editingCallback.bind(this),\n        deleteCallback: this.#deleteCallback.bind(this),\n      } :\n                     {}),\n    });\n    this.#dataGrid.addEventListener(Events.SELECTED_NODE, event => {\n      void this.#previewEntry(event.data);\n    });\n    this.#dataGrid.addEventListener(Events.DESELECTED_NODE, () => {\n      void this.#previewEntry(null);\n    });\n    this.#dataGrid.addEventListener(Events.SORTING_CHANGED, this.refreshItems, this);\n    this.#dataGrid.setStriped(true);\n    this.#dataGrid.setName(`${id}-datagrid-with-preview`);\n\n    this.#splitWidget = new SplitWidget(\n        /* isVertical: */ false, /* secondIsSidebar: */ true, `${id}-split-view-state`);\n    this.#splitWidget.show(this.contentElement);\n\n    this.#previewPanel = new VBox();\n    this.#previewPanel.setMinimumSize(0, 50);\n    this.#previewPanel.element.setAttribute('jslog', `${VisualLogging.pane('preview').track({resize: true})}`);\n    const resizer = this.#previewPanel.element.createChild('div', 'preview-panel-resizer');\n    const dataGridWidget = this.#dataGrid.asWidget();\n    dataGridWidget.setMinimumSize(0, 50);\n    this.#splitWidget.setMainWidget(dataGridWidget);\n    this.#splitWidget.setSidebarWidget(this.#previewPanel);\n    this.#splitWidget.installResizer(resizer);\n\n    this.#preview = null;\n    this.#previewValue = null;\n\n    this.showPreview(null, null);\n  }\n\n  get dataGridForTesting(): DataGridImpl<unknown> {\n    return this.#dataGrid;\n  }\n\n  get previewPanelForTesting(): VBox {\n    return this.#previewPanel;\n  }\n\n  itemsCleared(): void {\n    this.#dataGrid.rootNode().removeChildren();\n    this.#dataGrid.addCreationNode(false);\n    this.setCanDeleteSelected(false);\n  }\n\n  itemRemoved(key: string): void {\n    const rootNode = this.#dataGrid.rootNode();\n    const children = rootNode.children;\n\n    for (let i = 0; i < children.length; ++i) {\n      const childNode = children[i];\n      if (childNode.data.key === key) {\n        rootNode.removeChild(childNode);\n        this.setCanDeleteSelected(children.length > 1);\n        return;\n      }\n    }\n  }\n\n  itemAdded(key: string, value: string): void {\n    const rootNode = this.#dataGrid.rootNode();\n    const children = rootNode.children;\n\n    for (let i = 0; i < children.length; ++i) {\n      if (children[i].data.key === key) {\n        return;\n      }\n    }\n\n    const childNode = new DataGridNode({key, value}, false);\n    rootNode.insertChild(childNode, children.length - 1);\n  }\n\n  itemUpdated(key: string, value: string): void {\n    const childNode = this.#dataGrid.rootNode().children.find((child: DataGridNode<unknown>) => child.data.key === key);\n    if (!childNode) {\n      return;\n    }\n    if (childNode.data.value !== value) {\n      childNode.data.value = value;\n      childNode.refresh();\n    }\n    if (!childNode.selected) {\n      return;\n    }\n    if (this.#previewValue !== value) {\n      void this.#previewEntry(childNode);\n    }\n    this.setCanDeleteSelected(true);\n  }\n\n  showItems(items: {key: string, value: string}[]): void {\n    const rootNode = this.#dataGrid.rootNode();\n    let selectedKey: null = null;\n    for (const node of rootNode.children) {\n      if (!node.selected) {\n        continue;\n      }\n      selectedKey = node.data.key;\n      break;\n    }\n    rootNode.removeChildren();\n    let selectedNode: DataGridNode<unknown>|null = null;\n    const sortDirection = this.#dataGrid.isSortOrderAscending() ? 1 : -1;\n    // Make a copy to avoid sorting the original array.\n    const filteredList = [...items].sort((item1, item2) => {\n      return sortDirection * (item1.key > item2.key ? 1 : -1);\n    });\n    for (const {key, value} of filteredList) {\n      const node = new DataGridNode({key, value}, false);\n      node.selectable = true;\n      rootNode.appendChild(node);\n      if (!selectedNode || key === selectedKey) {\n        selectedNode = node;\n      }\n    }\n    if (selectedNode) {\n      selectedNode.selected = true;\n    }\n    this.#dataGrid.addCreationNode(false);\n    this.setCanDeleteSelected(Boolean(selectedNode));\n    ARIAUtils.alert(i18nString(UIStrings.numberEntries, {PH1: filteredList.length}));\n  }\n\n  override deleteSelectedItem(): void {\n    if (!this.#dataGrid.selectedNode) {\n      return;\n    }\n\n    this.#deleteCallback(this.#dataGrid.selectedNode);\n  }\n\n  #editingCallback(editingNode: DataGridNode<unknown>, columnIdentifier: string, oldText: string, newText: string):\n      void {\n    if (columnIdentifier === 'key') {\n      if (typeof oldText === 'string') {\n        this.removeItem(oldText);\n      }\n      this.setItem(newText, editingNode.data.value || '');\n      this.#removeDupes(editingNode);\n    } else {\n      this.setItem(editingNode.data.key || '', newText);\n    }\n  }\n\n  #removeDupes(masterNode: DataGridNode<unknown>): void {\n    const rootNode = this.#dataGrid.rootNode();\n    const children = rootNode.children;\n    for (let i = children.length - 1; i >= 0; --i) {\n      const childNode = children[i];\n      if ((childNode.data.key === masterNode.data.key) && (masterNode !== childNode)) {\n        rootNode.removeChild(childNode);\n      }\n    }\n  }\n\n  #deleteCallback(node: DataGridNode<unknown>): void {\n    if (!node || node.isCreationNode) {\n      return;\n    }\n\n    this.removeItem(node.data.key);\n  }\n\n  showPreview(preview: Widget|null, value: string|null): void {\n    if (this.#preview && this.#previewValue === value) {\n      return;\n    }\n    if (this.#preview) {\n      this.#preview.detach();\n    }\n    if (!preview) {\n      preview = new EmptyWidget(i18nString(UIStrings.noPreviewSelected), i18nString(UIStrings.selectAValueToPreview));\n    }\n    this.#previewValue = value;\n    this.#preview = preview;\n    preview.show(this.#previewPanel.contentElement);\n  }\n\n  async #previewEntry(entry: DataGridNode<unknown>|null): Promise<void> {\n    const value = entry && entry.data && entry.data.value;\n    if (entry && entry.data && entry.data.value) {\n      const preview = await this.createPreview(entry.data.key, value as string);\n      // Selection could've changed while the preview was loaded\n      if (entry.selected) {\n        this.showPreview(preview, value);\n      }\n    } else {\n      this.showPreview(null, value);\n    }\n  }\n\n  set editable(editable: boolean) {\n    if (editable) {\n      this.#dataGrid.editCallback = this.#editingCallback.bind(this);\n      this.#dataGrid.deleteCallback = this.#deleteCallback.bind(this);\n    } else {\n      this.#dataGrid.editCallback = undefined;\n      this.#dataGrid.deleteCallback = undefined;\n    }\n  }\n\n  protected abstract setItem(key: string, value: string): void;\n  protected abstract removeItem(key: string): void;\n  protected abstract createPreview(key: string, value: string): Promise<Widget|null>;\n}\n"]}