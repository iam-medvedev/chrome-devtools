{"version":3,"file":"SharedStorageEventsView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/SharedStorageEventsView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ApplicationComponents from './components/components.js';\nimport sharedStorageEventsViewStyles from './sharedStorageEventsView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Placeholder text if no shared storage event has been selected.\n   * Shared storage allows to store and access data that can be shared across different sites.\n   * A shared storage event is for example an access from a site to that storage.\n   */\n  noEventSelected: 'No shared storage event selected',\n  /**\n   *@description Placeholder text instructing the user how to display shared\n   * storage event details.\n   * Shared storage allows to store and access data that can be shared across different sites.\n   * A shared storage event is for example an access from a site to that storage.\n   */\n  clickToDisplayBody: 'Click on any shared storage event to display the event parameters',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/SharedStorageEventsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction eventEquals(\n    a: Protocol.Storage.SharedStorageAccessedEvent, b: Protocol.Storage.SharedStorageAccessedEvent): boolean {\n  return JSON.stringify(a) === JSON.stringify(b);\n}\n\nexport class SharedStorageEventsView extends UI.SplitWidget.SplitWidget {\n  readonly #sharedStorageEventGrid = new ApplicationComponents.SharedStorageAccessGrid.SharedStorageAccessGrid();\n  #events: Protocol.Storage.SharedStorageAccessedEvent[] = [];\n  #noDisplayView: UI.Widget.VBox;\n  #defaultId: Protocol.Page.FrameId = '' as Protocol.Page.FrameId;\n\n  constructor() {\n    super(/* isVertical */ false, /* secondIsSidebar: */ true);\n\n    this.element.setAttribute('jslog', `${VisualLogging.pane('shared-storage-events')}`);\n\n    const topPanel = new UI.Widget.VBox();\n    this.#noDisplayView =\n        new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.noEventSelected), i18nString(UIStrings.clickToDisplayBody));\n\n    topPanel.setMinimumSize(0, 80);\n    this.setMainWidget(topPanel);\n    this.#noDisplayView.setMinimumSize(0, 40);\n    this.setSidebarWidget(this.#noDisplayView);\n    this.hideSidebar();\n\n    topPanel.contentElement.appendChild(this.#sharedStorageEventGrid);\n    this.#sharedStorageEventGrid.addEventListener('select', this.#onFocus.bind(this));\n    this.#sharedStorageEventGrid.setAttribute('jslog', `${VisualLogging.section('events-table')}`);\n\n    this.#getMainFrameResourceTreeModel()?.addEventListener(\n        SDK.ResourceTreeModel.Events.PrimaryPageChanged, this.clearEvents, this);\n  }\n\n  #getMainFrameResourceTreeModel(): SDK.ResourceTreeModel.ResourceTreeModel|null {\n    const primaryPageTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    return primaryPageTarget?.model(SDK.ResourceTreeModel.ResourceTreeModel) || null;\n  }\n\n  #getMainFrame(): SDK.ResourceTreeModel.ResourceTreeFrame|null {\n    return this.#getMainFrameResourceTreeModel()?.mainFrame || null;\n  }\n\n  get id(): Protocol.Page.FrameId {\n    return this.#getMainFrame()?.id || this.#defaultId;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    const sidebar = this.sidebarWidget();\n    if (sidebar) {\n      sidebar.registerRequiredCSS(sharedStorageEventsViewStyles);\n    }\n  }\n\n  addEvent(event: Protocol.Storage.SharedStorageAccessedEvent): void {\n    // Only add event if main frame id matches.\n    if (event.mainFrameId !== this.id) {\n      return;\n    }\n\n    // Only add if not already present.\n    if (this.#events.some(t => eventEquals(t, event))) {\n      return;\n    }\n\n    if (this.showMode() !== UI.SplitWidget.ShowMode.BOTH) {\n      this.showBoth();\n    }\n\n    this.#events.push(event);\n    this.#sharedStorageEventGrid.data = this.#events;\n  }\n\n  clearEvents(): void {\n    this.#events = [];\n    this.#sharedStorageEventGrid.data = this.#events;\n    this.setSidebarWidget(this.#noDisplayView);\n    this.hideSidebar();\n  }\n\n  async #onFocus(event: Event): Promise<void> {\n    const focusedEvent = event as CustomEvent<HTMLElement>;\n    const datastore = focusedEvent.detail;\n    if (!datastore) {\n      return;\n    }\n\n    const jsonView = SourceFrame.JSONView.JSONView.createViewSync(datastore);\n    jsonView.setMinimumSize(0, 40);\n    this.setSidebarWidget(jsonView);\n  }\n\n  setDefaultIdForTesting(id: Protocol.Page.FrameId): void {\n    this.#defaultId = id;\n  }\n\n  getEventsForTesting(): Protocol.Storage.SharedStorageAccessedEvent[] {\n    return this.#events;\n  }\n\n  getSharedStorageAccessGridForTesting(): ApplicationComponents.SharedStorageAccessGrid.SharedStorageAccessGrid {\n    return this.#sharedStorageEventGrid;\n  }\n}\n"]}