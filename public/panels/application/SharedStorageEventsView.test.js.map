{"version":3,"file":"SharedStorageEventsView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/SharedStorageEventsView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport {raf} from '../../testing/DOMHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\nimport * as Resources from './application.js';\n\nimport View = Resources.SharedStorageEventsView;\n\ndescribeWithMockConnection('SharedStorageEventsView', () => {\n  const TEST_ORIGIN_A = 'http://a.test';\n  const TEST_SITE_A = TEST_ORIGIN_A;\n  const TEST_ORIGIN_B = 'http://b.test';\n  const TEST_SITE_B = TEST_ORIGIN_B;\n  const TEST_ORIGIN_C = 'http://c.test';\n  const TEST_SITE_C = TEST_ORIGIN_C;\n\n  const ID_A = 'AA' as Protocol.Page.FrameId;\n  const ID_B = 'BB' as Protocol.Page.FrameId;\n  const EMPTY_ID = '' as Protocol.Page.FrameId;\n\n  const EVENTS = [\n    {\n      accessTime: 0,\n      method: Protocol.Storage.SharedStorageAccessMethod.Append,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_A,\n      ownerSite: TEST_SITE_A,\n      params: {key: 'key0', value: 'value0'} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.Window,\n    },\n    {\n      accessTime: 10,\n      method: Protocol.Storage.SharedStorageAccessMethod.Get,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_A,\n      ownerSite: TEST_SITE_A,\n      params: {key: 'key0'} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.SharedStorageWorklet,\n    },\n    {\n      accessTime: 15,\n      method: Protocol.Storage.SharedStorageAccessMethod.Length,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_B,\n      ownerSite: TEST_SITE_B,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.SharedStorageWorklet,\n    },\n    {\n      accessTime: 20,\n      method: Protocol.Storage.SharedStorageAccessMethod.Clear,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_B,\n      ownerSite: TEST_SITE_B,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.Window,\n    },\n    {\n      accessTime: 100,\n      method: Protocol.Storage.SharedStorageAccessMethod.Set,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_C,\n      ownerSite: TEST_SITE_C,\n      params: {key: 'key0', value: 'value1', ignoreIfPresent: true} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.SharedStorageWorklet,\n    },\n    {\n      accessTime: 150,\n      method: Protocol.Storage.SharedStorageAccessMethod.RemainingBudget,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_C,\n      ownerSite: TEST_SITE_C,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.SharedStorageWorklet,\n    },\n  ];\n\n  const MULTI_PAGE_EVENTS = [\n    {\n      accessTime: 0,\n      method: Protocol.Storage.SharedStorageAccessMethod.Append,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_A,\n      ownerSite: TEST_SITE_A,\n      params: {key: 'key0', value: 'value0'} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.Window,\n    },\n    {\n      accessTime: 10,\n      method: Protocol.Storage.SharedStorageAccessMethod.Get,\n      mainFrameId: ID_B,\n      ownerOrigin: TEST_ORIGIN_A,\n      ownerSite: TEST_SITE_A,\n      params: {key: 'key0'} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.SharedStorageWorklet,\n    },\n    {\n      accessTime: 15,\n      method: Protocol.Storage.SharedStorageAccessMethod.Length,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_B,\n      ownerSite: TEST_SITE_B,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.SharedStorageWorklet,\n    },\n    {\n      accessTime: 20,\n      method: Protocol.Storage.SharedStorageAccessMethod.Clear,\n      mainFrameId: EMPTY_ID,\n      ownerOrigin: TEST_ORIGIN_B,\n      ownerSite: TEST_SITE_B,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.Window,\n    },\n    {\n      accessTime: 100,\n      method: Protocol.Storage.SharedStorageAccessMethod.Set,\n      mainFrameId: EMPTY_ID,\n      ownerOrigin: TEST_ORIGIN_C,\n      ownerSite: TEST_SITE_C,\n      params: {key: 'key0', value: 'value1', ignoreIfPresent: true} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.SharedStorageWorklet,\n    },\n    {\n      accessTime: 150,\n      method: Protocol.Storage.SharedStorageAccessMethod.RemainingBudget,\n      mainFrameId: ID_B,\n      ownerOrigin: TEST_ORIGIN_C,\n      ownerSite: TEST_SITE_C,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.SharedStorageWorklet,\n    },\n  ];\n\n  const PAGE_A_EVENTS = [\n    {\n      accessTime: 0,\n      method: Protocol.Storage.SharedStorageAccessMethod.Append,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_A,\n      ownerSite: TEST_SITE_A,\n      params: {key: 'key0', value: 'value0'} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.Window,\n    },\n    {\n      accessTime: 15,\n      method: Protocol.Storage.SharedStorageAccessMethod.Length,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_B,\n      ownerSite: TEST_SITE_B,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n      scope: Protocol.Storage.SharedStorageAccessScope.SharedStorageWorklet,\n    },\n  ];\n\n  it('records events', () => {\n    const view = new View.SharedStorageEventsView();\n    view.setDefaultIdForTesting(ID_A);\n    for (const event of EVENTS) {\n      view.addEvent(event);\n    }\n    assert.deepEqual(view.getEventsForTesting(), EVENTS);\n  });\n\n  it('ignores duplicates', () => {\n    const view = new View.SharedStorageEventsView();\n    view.setDefaultIdForTesting(ID_A);\n    for (const event of EVENTS) {\n      view.addEvent(event);\n    }\n    view.addEvent(EVENTS[0]);\n    assert.deepEqual(view.getEventsForTesting(), EVENTS);\n  });\n\n  it('initially has placeholder sidebar', () => {\n    const view = new View.SharedStorageEventsView();\n    assert.notDeepEqual(view.sidebarWidget()?.constructor.name, 'SearchableView');\n    assert.deepEqual(view.sidebarWidget()?.contentElement.firstChild?.textContent, 'No shared storage event selected');\n  });\n\n  it('updates sidebarWidget upon receiving cellFocusedEvent', async () => {\n    const view = new View.SharedStorageEventsView();\n    view.setDefaultIdForTesting(ID_A);\n    for (const event of EVENTS) {\n      view.addEvent(event);\n    }\n    const grid = view.getSharedStorageAccessGridForTesting();\n\n    // Use a spy to assert that the sidebar preview pane gets updated when expected.\n    const spy = sinon.spy(view, 'setSidebarWidget');\n    sinon.assert.notCalled(spy);\n    grid.dispatchEvent(new CustomEvent<Protocol.Storage.SharedStorageAccessedEvent>('select', {detail: EVENTS[0]}));\n    await raf();\n    sinon.assert.calledOnce(spy);\n    assert.deepEqual(view.sidebarWidget()?.constructor.name, 'SearchableView');\n  });\n\n  it('clears sidebarWidget upon clearEvents', async () => {\n    const view = new View.SharedStorageEventsView();\n    view.setDefaultIdForTesting(ID_A);\n    for (const event of EVENTS) {\n      view.addEvent(event);\n    }\n    const grid = view.getSharedStorageAccessGridForTesting();\n\n    // Use a spy to assert that the sidebar preview pane gets updated when expected.\n    const spy = sinon.spy(view, 'setSidebarWidget');\n    sinon.assert.notCalled(spy);\n    grid.dispatchEvent(new CustomEvent<Protocol.Storage.SharedStorageAccessedEvent>('select', {detail: EVENTS[0]}));\n    await raf();\n    sinon.assert.calledOnce(spy);\n    assert.deepEqual(view.sidebarWidget()?.constructor.name, 'SearchableView');\n    view.clearEvents();\n    sinon.assert.calledTwice(spy);\n    assert.notDeepEqual(view.sidebarWidget()?.constructor.name, 'SearchableView');\n    assert.deepEqual(view.sidebarWidget()?.contentElement.firstChild?.textContent, 'No shared storage event selected');\n  });\n\n  it('records events only from the target page', () => {\n    const view = new View.SharedStorageEventsView();\n    view.setDefaultIdForTesting(ID_A);\n    for (const event of MULTI_PAGE_EVENTS) {\n      view.addEvent(event);\n    }\n    assert.deepEqual(view.getEventsForTesting(), PAGE_A_EVENTS);\n  });\n});\n"]}