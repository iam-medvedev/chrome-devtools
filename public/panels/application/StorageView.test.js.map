{"version":3,"file":"StorageView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/StorageView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {assertElement, dispatchFocusOutEvent} from '../../testing/DOMHelpers.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as Coordinator from '../../ui/components/render_coordinator/render_coordinator.js';\nimport * as Resources from './application.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ndescribeWithMockConnection('StorageView', () => {\n  const tests = (targetFactory: () => SDK.Target.Target) => {\n    const testKey = 'test-storage-key';\n    const testOrigin = 'test-origin';\n    let target: SDK.Target.Target;\n    let domStorageModel: Resources.DOMStorageModel.DOMStorageModel|null;\n    let storageKeyManager: SDK.StorageKeyManager.StorageKeyManager|null;\n\n    beforeEach(() => {\n      target = targetFactory();\n      domStorageModel = target.model(Resources.DOMStorageModel.DOMStorageModel);\n      domStorageModel?.enable();\n      storageKeyManager = target.model(SDK.StorageKeyManager.StorageKeyManager);\n    });\n\n    it('emits correct events on clear', () => {\n      const testId = {storageKey: testKey, isLocalStorage: true} as Protocol.DOMStorage.StorageId;\n\n      assertNotNullOrUndefined(domStorageModel);\n      assert.isEmpty(domStorageModel.storages());\n      assertNotNullOrUndefined(storageKeyManager);\n      storageKeyManager.dispatchEventToListeners(SDK.StorageKeyManager.Events.StorageKeyAdded, testKey);\n      assertNotNullOrUndefined(domStorageModel.storageForId(testId));\n\n      const dispatcherSpy = sinon.spy(domStorageModel, 'dispatchEventToListeners');\n      const spyClearDataForStorageKey = sinon.stub(target.storageAgent(), 'invoke_clearDataForStorageKey');\n      Resources.StorageView.StorageView.clear(target, testKey, null, [Protocol.Storage.StorageType.All], false);\n      // must be called 4 times, twice with DOMStorageRemoved for local and non-local storage and twice with DOMStorageAdded\n      assert.isTrue(spyClearDataForStorageKey.calledOnce);\n      assert.strictEqual(dispatcherSpy.callCount, 4);\n      sinon.assert.calledWith(\n          dispatcherSpy, Resources.DOMStorageModel.Events.DOMStorageRemoved as unknown as sinon.SinonMatcher);\n      sinon.assert.calledWith(\n          dispatcherSpy, Resources.DOMStorageModel.Events.DOMStorageAdded as unknown as sinon.SinonMatcher);\n    });\n\n    it('changes subtitle on MainStorageKeyChanged event', () => {\n      assertNotNullOrUndefined(domStorageModel);\n      assertNotNullOrUndefined(storageKeyManager);\n      const view = new Resources.StorageView.StorageView();\n\n      storageKeyManager.dispatchEventToListeners(\n          SDK.StorageKeyManager.Events.MainStorageKeyChanged, {mainStorageKey: testKey});\n      const subtitle =\n          view.element.shadowRoot?.querySelector('div.flex-auto')?.shadowRoot?.querySelector('div.report-subtitle');\n      assert.strictEqual(subtitle?.textContent, testKey);\n    });\n\n    it('shows a warning message when entering a too big custom quota', async () => {\n      assertNotNullOrUndefined(domStorageModel);\n      assertNotNullOrUndefined(storageKeyManager);\n      const securityOriginManager = target.model(SDK.SecurityOriginManager.SecurityOriginManager);\n      assertNotNullOrUndefined(securityOriginManager);\n      sinon.stub(securityOriginManager, 'mainSecurityOrigin').returns(testOrigin);\n\n      const view = new Resources.StorageView.StorageView();\n      const container = view.element.shadowRoot?.querySelector('.clear-storage-header') || null;\n      assertElement(container, HTMLDivElement);\n      const customQuotaCheckbox =\n          container.shadowRoot!.querySelector('.quota-override-row span')!.shadowRoot!.querySelector(\n              '[title=\"Simulate custom storage quota\"]');\n      assertElement(customQuotaCheckbox, HTMLInputElement);\n      customQuotaCheckbox.checked = true;\n      const errorDiv = container.shadowRoot!.querySelector('.quota-override-error');\n      assertElement(errorDiv, HTMLDivElement);\n      assert.strictEqual(errorDiv.textContent, '');\n\n      const editor = container.shadowRoot!.querySelector('.quota-override-notification-editor');\n      assertElement(editor, HTMLInputElement);\n      editor.value = '9999999999999';\n      dispatchFocusOutEvent(editor);\n      await coordinator.done();\n      assert.strictEqual(errorDiv.textContent, 'Number must be smaller than 9,000,000,000,000');\n    });\n\n    it('also clears cookies on clear', () => {\n      const cookieModel = target.model(SDK.CookieModel.CookieModel)!;\n      const clearByOriginSpy = sinon.spy(target.storageAgent(), 'invoke_clearDataForOrigin');\n      const cookieClearSpy = sinon.spy(cookieModel, 'clear');\n\n      Resources.StorageView.StorageView.clear(target, testKey, testOrigin, [Protocol.Storage.StorageType.All], false);\n\n      assert.isTrue(clearByOriginSpy.calledOnceWithExactly({origin: testOrigin, storageTypes: 'cookies'}));\n      assert.isTrue(cookieClearSpy.calledOnceWithExactly(undefined, testOrigin));\n    });\n\n    it('clears cache on clear', async () => {\n      const cacheStorageModel = target.model(SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel);\n      assertNotNullOrUndefined(cacheStorageModel);\n\n      const storageBucketModel = target.model(SDK.StorageBucketsModel.StorageBucketsModel);\n      assertNotNullOrUndefined(storageBucketModel);\n\n      const testStorageBucket = {\n        storageKey: testKey,\n        name: 'inbox',\n      };\n      const testStorageBucketInfo = {\n        bucket: testStorageBucket,\n        id: '0',\n        expiration: 0,\n        quota: 0,\n        persistent: false,\n        durability: Protocol.Storage.StorageBucketsDurability.Strict,\n      };\n      let caches = [\n        {\n          cacheId: 'id1' as Protocol.CacheStorage.CacheId,\n          securityOrigin: '',\n          storageKey: testStorageBucket.storageKey,\n          storageBucket: testStorageBucket,\n          cacheName: 'test-cache-1',\n        },\n        {\n          cacheId: 'id2' as Protocol.CacheStorage.CacheId,\n          securityOrigin: '',\n          storageKey: testStorageBucket.storageKey,\n          storageBucket: testStorageBucket,\n          cacheName: 'test-cache-2',\n        },\n      ];\n      sinon.stub(target.cacheStorageAgent(), 'invoke_requestCacheNames').resolves({caches, getError: () => undefined});\n      cacheStorageModel.enable();\n      const cacheAddedPromise = new Promise<void>(resolve => {\n        cacheStorageModel.addEventListener(SDK.ServiceWorkerCacheModel.Events.CacheAdded, () => {\n          resolve();\n        });\n      });\n      storageBucketModel?.storageBucketCreatedOrUpdated({bucketInfo: testStorageBucketInfo});\n      await cacheAddedPromise;\n      caches = [];\n\n      Resources.StorageView.StorageView.clear(target, testKey, '', [Protocol.Storage.StorageType.Cache_storage], false);\n\n      assert.isEmpty(cacheStorageModel.caches());\n    });\n  };\n\n  describe('without tab target', () => tests(createTarget));\n  describe('with tab target', () => tests(() => {\n                                const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n                                createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n                                return createTarget({parentTarget: tabTarget});\n                              }));\n});\n"]}