{
  "version": 3,
  "sources": ["application-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Resources from './application.js';\nimport * as PreloadingHelper from './preloading/helper/helper.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Application Panel Sidebar of the Application panel\n   */\n  application: 'Application',\n  /**\n   *@description Command for showing the 'Application' tool\n   */\n  showApplication: 'Show Application',\n  /**\n   *@description A tag of Application Panel that can be searched in the command menu\n   */\n  pwa: 'pwa',\n  /**\n   *@description Text of button in Clear Storage View of the Application panel\n   */\n  clearSiteData: 'Clear site data',\n  /**\n   *@description Title of an action that clears all site data including 3rd party cookies\n   */\n  clearSiteDataIncludingThirdparty: 'Clear site data (including third-party cookies)',\n  /**\n   *@description Title of an action under the Background Services category that can be invoked through the Command Menu\n   */\n  startRecordingEvents: 'Start recording events',\n  /**\n   *@description Title of an action under the Background Services category that can be invoked through the Command Menu\n   */\n  stopRecordingEvents: 'Stop recording events',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/application-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedResourcesModule: (typeof Resources|undefined);\n\nasync function loadResourcesModule(): Promise<typeof Resources> {\n  if (!loadedResourcesModule) {\n    loadedResourcesModule = await import('./application.js');\n  }\n  return loadedResourcesModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (elementsModule: typeof Resources) => T[]): T[] {\n  if (loadedResourcesModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedResourcesModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'resources',\n  title: i18nLazyString(UIStrings.application),\n  commandPrompt: i18nLazyString(UIStrings.showApplication),\n  order: 70,\n  async loadView() {\n    const Resources = await loadResourcesModule();\n    return Resources.ResourcesPanel.ResourcesPanel.instance();\n  },\n  tags: [i18nLazyString(UIStrings.pwa)],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.RESOURCES,\n  actionId: 'resources.clear',\n  title: i18nLazyString(UIStrings.clearSiteData),\n  async loadActionDelegate() {\n    const Resources = await loadResourcesModule();\n    return new Resources.StorageView.ActionDelegate();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.RESOURCES,\n  actionId: 'resources.clear-incl-third-party-cookies',\n  title: i18nLazyString(UIStrings.clearSiteDataIncludingThirdparty),\n  async loadActionDelegate() {\n    const Resources = await loadResourcesModule();\n    return new Resources.StorageView.ActionDelegate();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'background-service.toggle-recording',\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Resources => [Resources.BackgroundServiceView.BackgroundServiceView]);\n  },\n  async loadActionDelegate() {\n    const Resources = await loadResourcesModule();\n    return new Resources.BackgroundServiceView.ActionDelegate();\n  },\n  category: UI.ActionRegistration.ActionCategory.BACKGROUND_SERVICES,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.startRecordingEvents),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopRecordingEvents),\n    },\n  ],\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.Resource.Resource,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return new Resources.ResourcesPanel.ResourceRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.ResourceTreeModel.ResourceTreeFrame,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return new Resources.ResourcesPanel.FrameDetailsRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [PreloadingHelper.PreloadingForward.RuleSetView];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return new Resources.ResourcesPanel.RuleSetViewRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [PreloadingHelper.PreloadingForward.AttemptViewWithFilter];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return new Resources.ResourcesPanel.AttemptViewWithFilterRevealer();\n  },\n});\n"],
  "mappings": "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",
  "names": []
}
