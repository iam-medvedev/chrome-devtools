{"version":3,"file":"SharedStorageTreeElement.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/SharedStorageTreeElement.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {\n  createTarget,\n  stubNoopSettings,\n} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as Coordinator from '../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Application from './application.js';\n\nconst {assert} = chai;\n\nclass SharedStorageItemsListener {\n  #dispatcher:\n      Common.ObjectWrapper.ObjectWrapper<Application.SharedStorageItemsView.SharedStorageItemsDispatcher.EventTypes>;\n  #refreshed: boolean = false;\n\n  constructor(dispatcher: Common.ObjectWrapper\n                  .ObjectWrapper<Application.SharedStorageItemsView.SharedStorageItemsDispatcher.EventTypes>) {\n    this.#dispatcher = dispatcher;\n    this.#dispatcher.addEventListener(\n        Application.SharedStorageItemsView.SharedStorageItemsDispatcher.Events.ItemsRefreshed, this.#itemsRefreshed,\n        this);\n  }\n\n  dispose(): void {\n    this.#dispatcher.removeEventListener(\n        Application.SharedStorageItemsView.SharedStorageItemsDispatcher.Events.ItemsRefreshed, this.#itemsRefreshed,\n        this);\n  }\n\n  #itemsRefreshed(): void {\n    this.#refreshed = true;\n  }\n\n  async waitForItemsRefreshed(): Promise<void> {\n    if (!this.#refreshed) {\n      await this.#dispatcher.once(\n          Application.SharedStorageItemsView.SharedStorageItemsDispatcher.Events.ItemsRefreshed);\n    }\n    this.#refreshed = false;\n  }\n}\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ndescribeWithMockConnection('SharedStorageTreeElement', function() {\n  const tests = (targetFactory: () => SDK.Target.Target) => {\n    let target: SDK.Target.Target;\n    let sharedStorageModel: Application.SharedStorageModel.SharedStorageModel;\n    let sharedStorage: Application.SharedStorageModel.SharedStorageForOrigin;\n    let treeElement: Application.SharedStorageTreeElement.SharedStorageTreeElement;\n\n    const TEST_ORIGIN = 'http://a.test';\n\n    const METADATA = {\n      creationTime: 100 as Protocol.Network.TimeSinceEpoch,\n      length: 3,\n      remainingBudget: 2.5,\n      bytesUsed: 30,\n    } as unknown as Protocol.Storage.SharedStorageMetadata;\n\n    const ENTRIES = [\n      {\n        key: 'key1',\n        value: 'a',\n      } as unknown as Protocol.Storage.SharedStorageEntry,\n      {\n        key: 'key2',\n        value: 'b',\n      } as unknown as Protocol.Storage.SharedStorageEntry,\n      {\n        key: 'key3',\n        value: 'c',\n      } as unknown as Protocol.Storage.SharedStorageEntry,\n    ];\n\n    beforeEach(async () => {\n      stubNoopSettings();\n      target = targetFactory();\n      Root.Runtime.experiments.register(Root.Runtime.ExperimentName.PRELOADING_STATUS_PANEL, '', false);\n      Root.Runtime.experiments.register(Root.Runtime.ExperimentName.STORAGE_BUCKETS_TREE, '', false);\n\n      sharedStorageModel = target.model(Application.SharedStorageModel.SharedStorageModel) as\n          Application.SharedStorageModel.SharedStorageModel;\n      sharedStorage = new Application.SharedStorageModel.SharedStorageForOrigin(sharedStorageModel, TEST_ORIGIN);\n      assert.strictEqual(sharedStorage.securityOrigin, TEST_ORIGIN);\n    });\n\n    it('shows view on select', async () => {\n      sinon.stub(sharedStorageModel.storageAgent, 'invoke_setSharedStorageTracking').resolves({\n        getError: () => undefined,\n      });\n      const getMetadataSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata').resolves({\n        metadata: METADATA,\n        getError: () => undefined,\n      });\n      const getEntriesSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries').resolves({\n        entries: ENTRIES,\n        getError: () => undefined,\n      });\n\n      const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n      panel.markAsRoot();\n      panel.show(document.body);\n\n      treeElement =\n          await Application.SharedStorageTreeElement.SharedStorageTreeElement.createElement(panel, sharedStorage);\n\n      await coordinator.done({waitForWork: true});\n      assert.isTrue(getMetadataSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n      const {view} = treeElement;\n\n      const itemsListener = new SharedStorageItemsListener(view.sharedStorageItemsDispatcher);\n      const refreshedPromise = itemsListener.waitForItemsRefreshed();\n\n      document.body.appendChild(treeElement.listItemNode);\n      treeElement.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n      treeElement.selectable = true;\n      treeElement.select();\n      await refreshedPromise;\n\n      assert.isTrue(getMetadataSpy.calledTwice);\n      assert.isTrue(getMetadataSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n      assert.isTrue(getEntriesSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n      assert.deepEqual(view.getEntriesForTesting(), ENTRIES);\n\n      panel.detach();\n    });\n  };\n  describe('without tab target', () => tests(() => createTarget()));\n  describe('with tab target', () => tests(() => {\n                                const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n                                createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n                                return createTarget({parentTarget: tabTarget});\n                              }));\n});\n"]}