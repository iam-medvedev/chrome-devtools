{"version":3,"file":"InterestGroupStorageView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/InterestGroupStorageView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ApplicationComponents from './components/components.js';\nimport interestGroupStorageViewStyles from './interestGroupStorageView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Placeholder text shown when nothing has been selected for display\n   *details.\n   * An interest group is an ad targeting group stored on the browser that can\n   * be used to show a certain set of advertisements in the future as the\n   * outcome of a FLEDGE auction.\n   */\n  noValueSelected: 'No interest group selected',\n  /**\n   *@description Placeholder text instructing the user how to display interest group\n   *details.\n   * An interest group is an ad targeting group stored on the browser that can\n   * be used to show a certain set of advertisements in the future as the\n   * outcome of a FLEDGE auction.\n   */\n  clickToDisplayBody: 'Select any interest group event to display the group\\'s current state',\n  /**\n   *@description Placeholder text telling the user no details are available for\n   *the selected interest group.\n   */\n  noDataAvailable: 'No details available',\n  /**\n   *@description Placeholder text explaining to the user a potential reason for not having details on\n   * the interest groups.\n   * An interest group is an ad targeting group stored on the browser that can\n   * be used to show a certain set of advertisements in the future as the\n   * outcome of a FLEDGE auction.\n   */\n  noDataDescription: 'The browser may have left the group.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/InterestGroupStorageView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface InterestGroupDetailsGetter {\n  getInterestGroupDetails: (owner: string, name: string) => Promise<object|null>;\n}\n\nfunction eventEquals(\n    a: Protocol.Storage.InterestGroupAccessedEvent, b: Protocol.Storage.InterestGroupAccessedEvent): boolean {\n  return (a.accessTime === b.accessTime && a.type === b.type && a.ownerOrigin === b.ownerOrigin && a.name === b.name);\n}\n\nexport class InterestGroupStorageView extends UI.SplitWidget.SplitWidget {\n  private readonly interestGroupGrid = new ApplicationComponents.InterestGroupAccessGrid.InterestGroupAccessGrid();\n  private events: Protocol.Storage.InterestGroupAccessedEvent[] = [];\n  private detailsGetter: InterestGroupDetailsGetter;\n  private noDataView: UI.Widget.VBox;\n  private noDisplayView: UI.Widget.VBox;\n\n  constructor(detailsGetter: InterestGroupDetailsGetter) {\n    super(/* isVertical */ false, /* secondIsSidebar: */ true);\n    this.element.setAttribute('jslog', `${VisualLogging.pane('interest-groups')}`);\n    this.detailsGetter = detailsGetter;\n\n    const topPanel = new UI.Widget.VBox();\n    this.noDisplayView =\n        new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.noValueSelected), i18nString(UIStrings.clickToDisplayBody));\n    this.noDataView =\n        new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.noDataAvailable), i18nString(UIStrings.noDataDescription));\n\n    topPanel.setMinimumSize(0, 120);\n    this.setMainWidget(topPanel);\n    this.noDisplayView.setMinimumSize(0, 80);\n    this.setSidebarWidget(this.noDisplayView);\n    this.noDataView.setMinimumSize(0, 80);\n    this.noDisplayView.contentElement.setAttribute('jslog', `${VisualLogging.pane('details').track({resize: true})}`);\n    this.noDataView.contentElement.setAttribute('jslog', `${VisualLogging.pane('details').track({resize: true})}`);\n    this.hideSidebar();\n\n    topPanel.contentElement.appendChild(this.interestGroupGrid);\n    this.interestGroupGrid.addEventListener('select', this.onFocus.bind(this));\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    const sbw = this.sidebarWidget();\n    if (sbw) {\n      sbw.registerRequiredCSS(interestGroupStorageViewStyles);\n    }\n  }\n\n  addEvent(event: Protocol.Storage.InterestGroupAccessedEvent): void {\n    if (this.showMode() !== UI.SplitWidget.ShowMode.BOTH) {\n      this.showBoth();\n    }\n    // Only add if not already present.\n    const foundEvent = this.events.find(t => eventEquals(t, event));\n    if (!foundEvent) {\n      this.events.push(event);\n      this.interestGroupGrid.data = this.events;\n    }\n  }\n\n  clearEvents(): void {\n    this.events = [];\n    this.interestGroupGrid.data = this.events;\n    this.setSidebarWidget(this.noDisplayView);\n    this.sidebarUpdatedForTesting();\n  }\n\n  private async onFocus(event: Event): Promise<void> {\n    const focusedEvent = event as CustomEvent<Protocol.Storage.InterestGroupAccessedEvent>;\n    const {ownerOrigin, name, type: eventType} = focusedEvent.detail;\n\n    let details = null;\n    // Details of additional bids can't be looked up like regular bids,\n    // they are ephemeral to the auction.\n    if (eventType !== Protocol.Storage.InterestGroupAccessType.AdditionalBid &&\n        eventType !== Protocol.Storage.InterestGroupAccessType.AdditionalBidWin &&\n        eventType !== Protocol.Storage.InterestGroupAccessType.TopLevelAdditionalBid) {\n      details = await this.detailsGetter.getInterestGroupDetails(ownerOrigin, name);\n    }\n    if (details) {\n      const jsonView = await SourceFrame.JSONView.JSONView.createView(JSON.stringify(details));\n      jsonView?.setMinimumSize(0, 40);\n      if (jsonView) {\n        jsonView.contentElement.setAttribute('jslog', `${VisualLogging.pane('details').track({resize: true})}`);\n        this.setSidebarWidget(jsonView);\n      }\n    } else {\n      this.setSidebarWidget(this.noDataView);\n    }\n    this.sidebarUpdatedForTesting();\n  }\n\n  getEventsForTesting(): Protocol.Storage.InterestGroupAccessedEvent[] {\n    return this.events;\n  }\n\n  getInterestGroupGridForTesting(): ApplicationComponents.InterestGroupAccessGrid.InterestGroupAccessGrid {\n    return this.interestGroupGrid;\n  }\n\n  sidebarUpdatedForTesting(): void {\n  }\n}\n"]}