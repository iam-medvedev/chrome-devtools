{"version":3,"file":"ExtensionStorageModel.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ExtensionStorageModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\nimport * as Resources from './application.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\nclass ExtensionStorageListener {\n  #model: Resources.ExtensionStorageModel.ExtensionStorageModel;\n  #storagesWatched: Resources.ExtensionStorageModel.ExtensionStorage[];\n\n  constructor(model: Resources.ExtensionStorageModel.ExtensionStorageModel) {\n    this.#model = model;\n    this.#storagesWatched = [];\n\n    this.#model.addEventListener(\n        Resources.ExtensionStorageModel.Events.EXTENSION_STORAGE_ADDED, this.#extensionStorageAdded, this);\n    this.#model.addEventListener(\n        Resources.ExtensionStorageModel.Events.EXTENSION_STORAGE_REMOVED, this.#extensionStorageRemoved, this);\n  }\n\n  dispose(): void {\n    this.#model.removeEventListener(\n        Resources.ExtensionStorageModel.Events.EXTENSION_STORAGE_ADDED, this.#extensionStorageAdded, this);\n    this.#model.removeEventListener(\n        Resources.ExtensionStorageModel.Events.EXTENSION_STORAGE_REMOVED, this.#extensionStorageRemoved, this);\n  }\n\n  #extensionStorageAdded(event: Common.EventTarget.EventTargetEvent<Resources.ExtensionStorageModel.ExtensionStorage>):\n      void {\n    const storage = event.data;\n    this.#storagesWatched.push(storage);\n  }\n\n  #extensionStorageRemoved(\n      event: Common.EventTarget.EventTargetEvent<Resources.ExtensionStorageModel.ExtensionStorage>): void {\n    const storage = event.data;\n    const index = this.#storagesWatched.indexOf(storage);\n    if (index === -1) {\n      return;\n    }\n    this.#storagesWatched = this.#storagesWatched.splice(index, 1);\n  }\n\n  async waitForStoragesAdded(expectedCount: number): Promise<void> {\n    while (this.#storagesWatched.length < expectedCount) {\n      await this.#model.once(Resources.ExtensionStorageModel.Events.EXTENSION_STORAGE_ADDED);\n    }\n  }\n}\n\ndescribeWithMockConnection('ExtensionStorageModel', () => {\n  let extensionStorageModel: Resources.ExtensionStorageModel.ExtensionStorageModel;\n  let extensionStorage: Resources.ExtensionStorageModel.ExtensionStorage;\n  let target: SDK.Target.Target;\n  let listener: ExtensionStorageListener;\n  const initId = 'extensionid';\n  const initName = 'Test Extension';\n  const initStorageArea = Protocol.Extensions.StorageArea.Local;\n\n  beforeEach(() => {\n    target = createTarget();\n    extensionStorageModel = new Resources.ExtensionStorageModel.ExtensionStorageModel(target);\n    extensionStorage =\n        new Resources.ExtensionStorageModel.ExtensionStorage(extensionStorageModel, initId, initName, initStorageArea);\n    listener = new ExtensionStorageListener(extensionStorageModel);\n  });\n\n  const createMockExecutionContext = (id: number, origin: string): Protocol.Runtime.ExecutionContextDescription => {\n    return {\n      id: id as Protocol.Runtime.ExecutionContextId,\n      uniqueId: '',\n      origin: urlString`${origin}`,\n      name: 'Test Extension',\n    };\n  };\n\n  it('ExtensionStorage is instantiated correctly', () => {\n    assert.strictEqual(extensionStorage.extensionId, initId);\n    assert.strictEqual(extensionStorage.name, initName);\n    assert.strictEqual(extensionStorage.storageArea, initStorageArea);\n  });\n\n  const STORAGE_AREAS = [\n    Protocol.Extensions.StorageArea.Session,\n    Protocol.Extensions.StorageArea.Local,\n    Protocol.Extensions.StorageArea.Sync,\n    Protocol.Extensions.StorageArea.Managed,\n  ];\n\n  const ENTRIES = {\n    foo: 'bar',\n  };\n\n  it('invokes storageAgent', async () => {\n    const getSpy = sinon.stub(extensionStorageModel.agent, 'invoke_getStorageItems').resolves({\n      data: ENTRIES,\n      getError: () => undefined,\n    });\n    const setSpy = sinon.stub(extensionStorageModel.agent, 'invoke_setStorageItems').resolves({\n      getError: () => undefined,\n    });\n    const removeSpy = sinon.stub(extensionStorageModel.agent, 'invoke_removeStorageItems').resolves({\n      getError: () => undefined,\n    });\n    const clearSpy = sinon.stub(extensionStorageModel.agent, 'invoke_clearStorageItems').resolves({\n      getError: () => undefined,\n    });\n\n    const data = await extensionStorage.getItems();\n    assert.isTrue(getSpy.calledOnceWithExactly({id: initId, storageArea: initStorageArea}));\n    assert.deepEqual(data, ENTRIES);\n\n    await extensionStorage.setItem('foo', 'baz');\n    assert.isTrue(setSpy.calledOnceWithExactly({id: initId, storageArea: initStorageArea, values: {foo: 'baz'}}));\n\n    await extensionStorage.removeItem('foo');\n    assert.isTrue(removeSpy.calledOnceWithExactly({id: initId, storageArea: initStorageArea, keys: ['foo']}));\n\n    await extensionStorage.clear();\n    assert.isTrue(clearSpy.calledOnceWithExactly({id: initId, storageArea: initStorageArea}));\n  });\n\n  it('adds/removes ExtensionStorage on Runtime events', async () => {\n    sinon.stub(extensionStorageModel.agent, 'invoke_getStorageItems').resolves({\n      data: {},\n      getError: () => undefined,\n    });\n    extensionStorageModel.enable();\n\n    assert.isEmpty(extensionStorageModel.storages());\n\n    const runtime = target.model(SDK.RuntimeModel.RuntimeModel);\n    assert.exists(runtime);\n\n    // Each extension adds four associated storage areas.\n    const addedPromise = listener.waitForStoragesAdded(4);\n\n    const mockExecutionContext = createMockExecutionContext(1, `chrome-extension://${initId}/sw.js`);\n\n    runtime.executionContextCreated(mockExecutionContext);\n\n    await addedPromise;\n\n    STORAGE_AREAS.forEach(area => assert.exists(extensionStorageModel.storageForIdAndArea(initId, area)));\n\n    runtime.executionContextDestroyed(mockExecutionContext.id);\n    assert.isEmpty(extensionStorageModel.storages());\n  });\n\n  it('does not add ExtensionStorage if origin invalid', async () => {\n    extensionStorageModel.enable();\n\n    assert.isEmpty(extensionStorageModel.storages());\n\n    const runtime = target.model(SDK.RuntimeModel.RuntimeModel);\n    assert.exists(runtime);\n\n    // The scheme is not valid (not chrome-extension://) so no storage should be added.\n    const mockExecutionContext = createMockExecutionContext(1, 'https://example.com');\n\n    runtime.executionContextCreated(mockExecutionContext);\n    assert.isEmpty(extensionStorageModel.storages());\n  });\n\n  it('does not add ExtensionStorage if origin already added', async () => {\n    sinon.stub(extensionStorageModel.agent, 'invoke_getStorageItems').resolves({\n      data: {},\n      getError: () => undefined,\n    });\n    extensionStorageModel.enable();\n\n    assert.isEmpty(extensionStorageModel.storages());\n\n    // Each extension adds four associated storage areas.\n    const addedPromise = listener.waitForStoragesAdded(4);\n\n    const runtime = target.model(SDK.RuntimeModel.RuntimeModel);\n    assert.exists(runtime);\n\n    const mockExecutionContext = createMockExecutionContext(1, `chrome-extension://${initId}/sw.js`);\n    runtime.executionContextCreated(mockExecutionContext);\n\n    await addedPromise;\n\n    STORAGE_AREAS.forEach(area => assert.exists(extensionStorageModel.storageForIdAndArea(initId, area)));\n    assert.lengthOf(extensionStorageModel.storages(), 4);\n\n    runtime.executionContextCreated(mockExecutionContext);\n    assert.lengthOf(extensionStorageModel.storages(), 4);\n  });\n\n  it('removes ExtensionStorage when last ExecutionContext is removed', async () => {\n    sinon.stub(extensionStorageModel.agent, 'invoke_getStorageItems').resolves({\n      data: {},\n      getError: () => undefined,\n    });\n    extensionStorageModel.enable();\n\n    assert.isEmpty(extensionStorageModel.storages());\n\n    // Each extension adds four associated storage areas.\n    const addedPromise = listener.waitForStoragesAdded(4);\n\n    const runtime = target.model(SDK.RuntimeModel.RuntimeModel);\n    assert.exists(runtime);\n\n    const mockExecutionContext1 = createMockExecutionContext(1, `chrome-extension://${initId}/sw.js`);\n    const mockExecutionContext2 = createMockExecutionContext(2, `chrome-extension://${initId}/another.js`);\n\n    runtime.executionContextCreated(mockExecutionContext1);\n    runtime.executionContextCreated(mockExecutionContext2);\n    await addedPromise;\n\n    STORAGE_AREAS.forEach(area => assert.exists(extensionStorageModel.storageForIdAndArea(initId, area)));\n    assert.lengthOf(extensionStorageModel.storages(), 4);\n\n    // If a single execution context is destroyed but another remains,\n    // ExtensionStorage should not be removed.\n    runtime.executionContextDestroyed(mockExecutionContext1.id);\n    assert.lengthOf(extensionStorageModel.storages(), 4);\n\n    runtime.executionContextDestroyed(mockExecutionContext2.id);\n    assert.lengthOf(extensionStorageModel.storages(), 0);\n  });\n\n  it('matches service worker target on same origin', () => {\n    assert.isTrue(extensionStorage.matchesTarget(\n        createTarget({type: SDK.Target.Type.ServiceWorker, url: `chrome-extension://${initId}/sw.js`})));\n  });\n\n  it('matches tab target on same origin', () => {\n    assert.isTrue(extensionStorage.matchesTarget(\n        createTarget({type: SDK.Target.Type.TAB, url: `chrome-extension://${initId}/sw.js`})));\n  });\n\n  it('does not match service worker target on different origin', () => {\n    assert.isFalse(extensionStorage.matchesTarget(\n        createTarget({type: SDK.Target.Type.ServiceWorker, url: 'chrome-extension://other-id/sw.js'})));\n  });\n});\n"]}