{"version":3,"file":"RuleSetDetailsView.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/application/preloading/components/RuleSetDetailsView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,+BAA+B,CAAC;AACtD,OAAO,EAAC,wBAAwB,EAAC,MAAM,uCAAuC,CAAC;AAC/E,OAAO,KAAK,GAAG,MAAM,6BAA6B,CAAC;AAEnD,OAAO,KAAK,SAAS,MAAM,2CAA2C,CAAC;AACvE,OAAO,KAAK,UAAU,MAAM,4DAA4D,CAAC;AACzF,OAAO,KAAK,eAAe,MAAM,gEAAgE,CAAC;AAClG,OAAO,KAAK,aAAa,MAAM,4DAA4D,CAAC;AAC5F,OAAO,KAAK,iBAAiB,MAAM,oEAAoE,CAAC;AACxG,OAAO,KAAK,UAAU,MAAM,sDAAsD,CAAC;AACnF,sDAAsD;AACtD,OAAO,wBAAwB,MAAM,8CAA8C,CAAC;AAEpF,OAAO,KAAK,GAAG,MAAM,2BAA2B,CAAC;AAEjD,OAAO,2BAA2B,MAAM,6BAA6B,CAAC;AAEtE,4EAA4E;AAC5E,MAAM,wBAAwB,GAAG,IAAI,aAAa,EAAE,CAAC;AACrD,wBAAwB,CAAC,WAAW,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC;AAE7E,4EAA4E;AAC5E,MAAM,qBAAqB,GAAG,IAAI,aAAa,EAAE,CAAC;AAClD,qBAAqB,CAAC,WAAW,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;AAEvE,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAEnB,MAAM,SAAS,GAAG;IAChB;;;;OAIG;IACH,iBAAiB,EAAE,qBAAqB;IACxC;;;;OAIG;IACH,6BAA6B,EAAE,oCAAoC;CAC3D,CAAC;AACX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,gEAAgE,EAAE,SAAS,CAAC,CAAC;AACtH,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAItE,MAAM,kBAAkB,GAAG,MAAM,eAAe,CAAC,eAAe,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;AAItG,MAAM,OAAO,kBAAmB,SAAQ,aAAa,CAAC,aAAa,CAAC,kBAAkC;IAC3F,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IACrD,KAAK,GAA2B,IAAI,CAAC;IACrC,kBAAkB,GAAG,IAAI,CAAC;IAC1B,YAAY,CAA0B;IAEtC,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,wBAAwB,EAAE,qBAAqB,CAAC,CAAC;IACtF,CAAC;IAED,IAAI,IAAI,CAAC,IAA4B;QACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,KAAK,IAAI,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IAED,IAAI,iBAAiB,CAAC,iBAA0B;QAC9C,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,OAAO;QACX,MAAM,iBAAiB,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;YACpE,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE,CAAC;gBACxB,GAAG,CAAC,MAAM,CACN,IAAI,CAAA;;;iDAGiC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC;sDAClC,UAAU,CAAC,SAAS,CAAC,6BAA6B,CAAC;;;OAGlG,EACK,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;gBAChC,kBAAkB;gBAClB,OAAO;YACT,CAAC;YAED,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAE/C,qDAAqD;YACrD,mBAAmB;YACnB,GAAG,CAAC,MAAM,CAAC,IAAI,CAAA;;yDAEoC,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE;YACzH,IAAI,CAAC,WAAW,EAAE;;;YAGlB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;;OAEnC,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;YAC/B,kBAAkB;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAiD;IACjD,WAAW;QACT,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAErC,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,SAAS,EAAE,CAAC;YAC1C,OAAO,GAAG,CAAC,OAAO,CAAC;QACrB,CAAC;QAED,qDAAqD;QACrD,mBAAmB;QACnB,OAAO,IAAI,CAAA;;;kBAGG;YACN,QAAQ,EAAE,cAAc;YACxB,KAAK,EAAE,mBAAmB;YAC1B,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,MAAM;SACf;;wCAE6B,IAAI,CAAC,KAAK,CAAC,YAAY;;KAE1D,CAAC;QACM,kBAAkB;IAC5B,CAAC;IAED,aAAa,CAAC,UAAkB;QAC9B,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC;YAChD,GAAG,EAAE,UAAU;YACf,UAAU,EAAE;gBACV,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,UAAU,IAAI,EAAE,CAAC;gBACrD,UAAU,CAAC,WAAW,EAAE;gBACxB,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gBACxC,kBAA0C;gBAC1C,UAAU,CAAC,kBAAkB,CAAC,eAAe,CAAC,eAAe,CAAC,cAAc,CAAC;aAC9E;SACF,CAAC,CAAC;QACH,qDAAqD;QACrD,mBAAmB;QACnB,mDAAmD;QACnD,OAAO,IAAI,CAAA;8CAC+B,GAAG,WACzC,IAAI,CAAC,YACP;KACD,CAAC;QACF,kBAAkB;IACpB,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,KAAK,EAAE,UAAU,KAAK,SAAS,EAAE,CAAC;YACpE,MAAM,eAAe,GACjB,MAAM,SAAS,CAAC,eAAe,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACnG,OAAO,eAAe,CAAC,gBAAgB,CAAC;QAC1C,CAAC;QAED,OAAO,IAAI,CAAC,KAAK,EAAE,UAAU,IAAI,EAAE,CAAC;IACtC,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,0CAA0C,EAAE,kBAAkB,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport {assertNotNullOrUndefined} from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as Formatter from '../../../../models/formatter/formatter.js';\nimport * as CodeMirror from '../../../../third_party/codemirror.next/codemirror.next.js';\nimport * as CodeHighlighter from '../../../../ui/components/code_highlighter/code_highlighter.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as RenderCoordinator from '../../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as TextEditor from '../../../../ui/components/text_editor/text_editor.js';\n// eslint-disable-next-line rulesdir/es-modules-import\nimport inspectorCommonStylesRaw from '../../../../ui/legacy/inspectorCommon.css.js';\nimport type * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\n\nimport ruleSetDetailsViewStylesRaw from './RuleSetDetailsView.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst ruleSetDetailsViewStyles = new CSSStyleSheet();\nruleSetDetailsViewStyles.replaceSync(ruleSetDetailsViewStylesRaw.cssContent);\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst inspectorCommonStyles = new CSSStyleSheet();\ninspectorCommonStyles.replaceSync(inspectorCommonStylesRaw.cssContent);\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description Text in RuleSetDetailsView of the Application panel if no element is selected. An element here is an item in a\n   *             table of speculation rules. Speculation rules define the rules when and which urls should be prefetched.\n   *             https://developer.chrome.com/docs/devtools/application/debugging-speculation-rules\n   */\n  noElementSelected: 'No element selected',\n  /**\n   *@description Text in RuleSetDetailsView of the Application panel if no element is selected. An element here is an item in a\n   *             table of speculation rules. Speculation rules define the rules when and which urls should be prefetched.\n   *             https://developer.chrome.com/docs/devtools/application/debugging-speculation-rules\n   */\n  selectAnElementForMoreDetails: 'Select an element for more details',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/components/RuleSetDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ntype RuleSet = Protocol.Preload.RuleSet;\n\nconst codeMirrorJsonType = await CodeHighlighter.CodeHighlighter.languageFromMIME('application/json');\n\nexport type RuleSetDetailsViewData = RuleSet|null;\n\nexport class RuleSetDetailsView extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: RuleSetDetailsViewData = null;\n  #shouldPrettyPrint = true;\n  #editorState?: CodeMirror.EditorState;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [ruleSetDetailsViewStyles, inspectorCommonStyles];\n  }\n\n  set data(data: RuleSetDetailsViewData) {\n    this.#data = data;\n    void this.#render();\n  }\n\n  set shouldPrettyPrint(shouldPrettyPrint: boolean) {\n    this.#shouldPrettyPrint = shouldPrettyPrint;\n  }\n\n  async #render(): Promise<void> {\n    await RenderCoordinator.write('RuleSetDetailsView render', async () => {\n      if (this.#data === null) {\n        Lit.render(\n            html`\n          <div class=\"placeholder\">\n            <div class=\"empty-state\">\n              <span class=\"empty-state-header\">${i18nString(UIStrings.noElementSelected)}</span>\n              <span class=\"empty-state-description\">${i18nString(UIStrings.selectAnElementForMoreDetails)}</span>\n            </div>\n          </div>\n      `,\n            this.#shadow, {host: this});\n        // clang-format on\n        return;\n      }\n\n      const sourceText = await this.#getSourceText();\n\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      Lit.render(html`\n        <div class=\"content\">\n          <div class=\"ruleset-header\" id=\"ruleset-url\">${this.#data?.url || SDK.TargetManager.TargetManager.instance().inspectedURL()}</div>\n          ${this.#maybeError()}\n        </div>\n        <div class=\"text-ellipsis\">\n          ${this.#renderSource(sourceText)}\n        </div>\n      `, this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n\n  // TODO(https://crbug.com/1425354): Support i18n.\n  #maybeError(): Lit.LitTemplate {\n    assertNotNullOrUndefined(this.#data);\n\n    if (this.#data.errorMessage === undefined) {\n      return Lit.nothing;\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <div class=\"ruleset-header\">\n        <devtools-icon\n          .data=${{\n            iconName: 'cross-circle',\n            color: 'var(--icon-error)',\n            width: '16px',\n            height: '16px',\n          }}>\n        </devtools-icon>\n        <span id=\"error-message-text\">${this.#data.errorMessage}</span>\n      </div>\n    `;\n            // clang-format on\n  }\n\n  #renderSource(sourceText: string): Lit.LitTemplate {\n    this.#editorState = CodeMirror.EditorState.create({\n      doc: sourceText,\n      extensions: [\n        TextEditor.Config.baseConfiguration(sourceText || ''),\n        CodeMirror.lineNumbers(),\n        CodeMirror.EditorState.readOnly.of(true),\n        codeMirrorJsonType as CodeMirror.Extension,\n        CodeMirror.syntaxHighlighting(CodeHighlighter.CodeHighlighter.highlightStyle),\n      ],\n    });\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    // TODO(https://crbug.com/1425354): Add Raw button.\n    return html`\n      <devtools-text-editor .style.flexGrow=${'1'} .state=${\n        this.#editorState\n      }></devtools-text-editor>\n    `;\n    // clang-format on\n  }\n\n  async #getSourceText(): Promise<string> {\n    if (this.#shouldPrettyPrint && this.#data?.sourceText !== undefined) {\n      const formattedResult =\n          await Formatter.ScriptFormatter.formatScriptContent('application/json', this.#data.sourceText);\n      return formattedResult.formattedContent;\n    }\n\n    return this.#data?.sourceText || '';\n  }\n}\n\ncustomElements.define('devtools-resources-rulesets-details-view', RuleSetDetailsView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-rulesets-details-view': RuleSetDetailsView;\n  }\n}\n"]}