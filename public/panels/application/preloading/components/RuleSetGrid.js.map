{"version":3,"file":"RuleSetGrid.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/application/preloading/components/RuleSetGrid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../../ui/legacy/components/data_grid/data_grid.js';\nimport '../../../../ui/components/icon_button/icon_button.js';\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Protocol from '../../../../generated/protocol.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport type * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\nimport * as NetworkForward from '../../../network/forward/forward.js';\nimport * as PreloadingHelper from '../helper/helper.js';\n\nimport * as PreloadingString from './PreloadingString.js';\nimport ruleSetGridStylesRaw from './ruleSetGrid.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst ruleSetGridStyles = new CSSStyleSheet();\nruleSetGridStyles.replaceSync(ruleSetGridStylesRaw.cssContent);\n\nconst {html, Directives: {styleMap}} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description Column header: Short URL of rule set.\n   */\n  ruleSet: 'Rule set',\n  /**\n   *@description Column header: Show how many preloads are associated if valid, error counts if invalid.\n   */\n  status: 'Status',\n  /**\n   *@description button: Title of button to reveal the corresponding request of rule set in Elements panel\n   */\n  clickToOpenInElementsPanel: 'Click to open in Elements panel',\n  /**\n   *@description button: Title of button to reveal the corresponding request of rule set in Network panel\n   */\n  clickToOpenInNetworkPanel: 'Click to open in Network panel',\n  /**\n   *@description Value of status, specifying rule set contains how many errors.\n   */\n  errors: '{errorCount, plural, =1 {# error} other {# errors}}',\n  /**\n   *@description button: Title of button to reveal preloading attempts with filter by selected rule set\n   */\n  buttonRevealPreloadsAssociatedWithRuleSet: 'Reveal speculative loads associated with this rule set',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/components/RuleSetGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface RuleSetGridData {\n  rows: RuleSetGridRow[];\n  pageURL: Platform.DevToolsPath.UrlString;\n}\n\nexport interface RuleSetGridRow {\n  ruleSet: Protocol.Preload.RuleSet;\n  preloadsStatusSummary: string;\n}\n\n// Grid component to show SpeculationRules rule sets.\nexport class RuleSetGrid extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: RuleSetGridData|null = null;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [ruleSetGridStyles];\n    this.#render();\n  }\n\n  update(data: RuleSetGridData): void {\n    this.#data = data;\n    this.#render();\n  }\n\n  async #revealSpeculationRules(ruleSet: Protocol.Preload.RuleSet): Promise<void> {\n    if (ruleSet.backendNodeId !== undefined) {\n      await this.#revealSpeculationRulesInElements(ruleSet);\n    } else if (ruleSet.url !== undefined && ruleSet.requestId) {\n      await this.#revealSpeculationRulesInNetwork(ruleSet);\n    }\n  }\n\n  async #revealSpeculationRulesInElements(ruleSet: Protocol.Preload.RuleSet): Promise<void> {\n    assertNotNullOrUndefined(ruleSet.backendNodeId);\n\n    const target = SDK.TargetManager.TargetManager.instance().scopeTarget();\n    if (target === null) {\n      return;\n    }\n\n    await Common.Revealer.reveal(new SDK.DOMModel.DeferredDOMNode(target, ruleSet.backendNodeId));\n  }\n\n  async #revealSpeculationRulesInNetwork(ruleSet: Protocol.Preload.RuleSet): Promise<void> {\n    assertNotNullOrUndefined(ruleSet.requestId);\n    const request = SDK.TargetManager.TargetManager.instance()\n                        .scopeTarget()\n                        ?.model(SDK.NetworkManager.NetworkManager)\n                        ?.requestForId(ruleSet.requestId) ||\n        null;\n    if (request === null) {\n      return;\n    }\n\n    const requestLocation = NetworkForward.UIRequestLocation.UIRequestLocation.tab(\n        request, NetworkForward.UIRequestLocation.UIRequestTabs.PREVIEW, {clearFilter: false});\n    await Common.Revealer.reveal(requestLocation);\n  }\n\n  async #revealAttemptViewWithFilter(ruleSet: Protocol.Preload.RuleSet): Promise<void> {\n    await Common.Revealer.reveal(new PreloadingHelper.PreloadingForward.AttemptViewWithFilter(ruleSet.id));\n  }\n\n  #render(): void {\n    if (this.#data === null) {\n      return;\n    }\n\n    const {rows, pageURL} = this.#data;\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n      Lit.render(html`\n        <div class=\"ruleset-container\" jslog=${VisualLogging.pane('preloading-rules')}>\n          <devtools-data-grid striped @select=${this.#onRowSelected}>\n            <table>\n              <tr>\n                <th id=\"rule-set\" weight=\"20\" sortable>\n                  ${i18nString(UIStrings.ruleSet)}\n                </th>\n                <th id=\"status\" weight=\"80\" sortable>\n                  ${i18nString(UIStrings.status)}\n                </th>\n              </tr>\n              ${rows.map(({ruleSet, preloadsStatusSummary}) => {\n                const location = PreloadingString.ruleSetLocationShort(ruleSet, pageURL);\n                const revealInElements = ruleSet.backendNodeId !== undefined;\n                const revealInNetwork = ruleSet.url !== undefined && ruleSet.requestId;\n                return html`\n                  <tr data-id=${ruleSet.id}>\n                    <td>\n                      ${revealInElements || revealInNetwork ? html`\n                        <button class=\"link\" role=\"link\"\n                            @click=${() => this.#revealSpeculationRules(ruleSet)}\n                            title=${revealInElements ? i18nString(UIStrings.clickToOpenInElementsPanel)\n                                                    : i18nString(UIStrings.clickToOpenInNetworkPanel)}\n                            style=${styleMap({\n                              border: 'none',\n                              background: 'none',\n                              color: 'var(--icon-link)',\n                              cursor: 'pointer',\n                              'text-decoration': 'underline',\n                              'padding-inline-start': '0',\n                              'padding-inline-end': '0',\n                            })}\n                            jslog=${VisualLogging\n                                .action(revealInElements ? 'reveal-in-elements' : 'reveal-in-network')\n                                .track({click: true})}\n                          >\n                            <devtools-icon name=${revealInElements ? 'code-circle' : 'arrow-up-down-circle'}\n                              style=${styleMap({\n                                color: 'var(--icon-link)',\n                                width: '16px',\n                                height: '16px',\n                                'vertical-align': 'sub',\n                              })}\n                            ></devtools-icon>\n                            ${location}\n                          </button>`\n                          : location}\n                  </td>\n                  <td>\n                    ${ruleSet.errorType !== undefined ? html`\n                      <span style=${styleMap({color: 'var(--sys-color-error)'})}>\n                        ${i18nString(UIStrings.errors, {errorCount: 1})}\n                      </span>` : ''}\n                    ${ruleSet.errorType !== Protocol.Preload.RuleSetErrorType.SourceIsNotJsonObject ? html`\n                      <button class=\"link\" role=\"link\"\n                        @click=${() => this.#revealAttemptViewWithFilter(ruleSet)}\n                        title=${i18nString(UIStrings.buttonRevealPreloadsAssociatedWithRuleSet)}\n                        style=${styleMap({\n                          color: 'var(--sys-color-primary)',\n                          'text-decoration': 'underline',\n                          cursor: 'pointer',\n                          border: 'none',\n                          background: 'none',\n                          'padding-inline-start': '0',\n                          'padding-inline-end': '0',\n                        })}\n                        jslog=${VisualLogging.action('reveal-preloads').track({click: true})}>\n                        ${preloadsStatusSummary}\n                      </button>` : ''}\n                  </td>\n                </tr>\n              `;})}\n            </table>\n          </devtools-data-grid>\n        </div>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #onRowSelected(event: CustomEvent<HTMLElement>): void {\n    const ruleSetId = event.detail.dataset.id;\n    if (ruleSetId !== undefined) {\n      this.dispatchEvent(new CustomEvent('select', {detail: ruleSetId}));\n    }\n  }\n}\n\ncustomElements.define('devtools-resources-ruleset-grid', RuleSetGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-ruleset-grid': RuleSetGrid;\n  }\n}\n"]}