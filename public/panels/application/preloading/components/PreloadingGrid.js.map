{"version":3,"file":"PreloadingGrid.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/application/preloading/components/PreloadingGrid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../../ui/legacy/components/data_grid/data_grid.js';\nimport '../../../../ui/components/icon_button/icon_button.js';\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport type * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\n\nimport preloadingGridStylesRaw from './preloadingGrid.css.js';\nimport {capitalizedAction, composedStatus, ruleSetLocationShort} from './PreloadingString.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst preloadingGridStyles = new CSSStyleSheet();\npreloadingGridStyles.replaceSync(preloadingGridStylesRaw.cssContent);\n\nconst {PreloadingStatus} = SDK.PreloadingModel;\n\nconst UIStrings = {\n  /**\n   *@description Column header: Action of preloading (prefetch/prerender)\n   */\n  action: 'Action',\n  /**\n   *@description Column header: A rule set of preloading\n   */\n  ruleSet: 'Rule set',\n  /**\n   *@description Column header: Status of preloading attempt\n   */\n  status: 'Status',\n  /**\n   *@description Status: Prerender failed, but prefetch is available\n   */\n  prefetchFallbackReady: 'Prefetch fallback ready',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/components/PreloadingGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html, Directives: {styleMap}} = Lit;\n\nexport interface PreloadingGridData {\n  rows: PreloadingGridRow[];\n  pageURL: Platform.DevToolsPath.UrlString;\n}\n\nexport interface PreloadingGridRow {\n  id: string;\n  pipeline: SDK.PreloadingModel.PreloadPipeline;\n  ruleSets: Protocol.Preload.RuleSet[];\n}\n\n// Grid component to show prerendering attempts.\nexport class PreloadingGrid extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: PreloadingGridData|null = null;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [preloadingGridStyles];\n    this.#render();\n  }\n\n  update(data: PreloadingGridData): void {\n    this.#data = data;\n    this.#render();\n  }\n\n  #render(): void {\n    if (!this.#data) {\n      return;\n    }\n    const {rows, pageURL} = this.#data;\n    const securityOrigin = pageURL === '' ? null : (new Common.ParsedURL.ParsedURL(pageURL)).securityOrigin();\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <div class=\"preloading-container\">\n        <devtools-data-grid striped @select=${this.#onPreloadingGridCellFocused}>\n          <table>\n            <tr>\n              <th id=\"url\" weight=\"40\" sortable>${i18n.i18n.lockedString('URL')}</th>\n              <th id=\"action\" weight=\"15\" sortable>${i18nString(UIStrings.action)}</th>\n              <th id=\"rule-set\" weight=\"20\" sortable>${i18nString(UIStrings.ruleSet)}</th>\n              <th id=\"status\" weight=\"40\" sortable>${i18nString(UIStrings.status)}</th>\n            </tr>\n            ${rows.map(row => {\n              const attempt = row.pipeline.getOriginallyTriggered();\n              const prefetchStatus = row.pipeline.getPrefetch()?.status;\n              const prerenderStatus = row.pipeline.getPrerender()?.status;\n              const hasWarning =\n                  (prerenderStatus === PreloadingStatus.FAILURE &&\n                  (prefetchStatus === PreloadingStatus.READY || prefetchStatus === PreloadingStatus.SUCCESS));\n              const hasError = row.pipeline.getOriginallyTriggered().status === PreloadingStatus.FAILURE;\n              return html`<tr data-id=${row.id}>\n                <td title=${attempt.key.url}>${this.#urlShort(row, securityOrigin)}</td>\n                <td>${capitalizedAction(attempt.action)}</td>\n                <td>${row.ruleSets.length === 0 ? '' : ruleSetLocationShort(row.ruleSets[0], pageURL)}</td>\n                <td>\n                  <div style=${styleMap({color: hasWarning ? 'var(--sys-color-orange-bright)'\n                                                : hasError   ? 'var(--sys-color-error)'\n                                                             : 'var(--sys-color-on-surface)'})}>\n                    ${(hasError || hasWarning) ?  html`\n                      <devtools-icon\n                        name=${hasWarning ? 'warning-filled' : 'cross-circle-filled'}\n                        style=${styleMap({\n                          width: '16px',\n                          height: '16px',\n                          color: hasWarning ? 'var(--sys-color-warning)' : 'var(--sys-color-error)',\n                          'vertical-align': 'sub',\n                        })}\n                      ></devtools-icon>` : ''}\n                    ${hasWarning ? i18nString(UIStrings.prefetchFallbackReady) : composedStatus(attempt)}\n                  </div>\n                </td>\n              </tr>`;\n            })}\n          </table>\n        </devtools-data-grid>\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #onPreloadingGridCellFocused(event: CustomEvent<HTMLElement>): void {\n    this.dispatchEvent(new CustomEvent('select', {detail: event.detail.dataset.id}));\n  }\n\n  // Shorten URL if a preloading attempt is same-origin.\n  #urlShort(row: PreloadingGridRow, securityOrigin: string|null): string {\n    const url = row.pipeline.getOriginallyTriggered().key.url;\n    return securityOrigin && url.startsWith(securityOrigin) ? url.slice(securityOrigin.length) : url;\n  }\n}\n\ncustomElements.define('devtools-resources-preloading-grid', PreloadingGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-preloading-grid': PreloadingGrid;\n  }\n}\n"]}