{
  "version": 3,
  "sources": ["../../../../../../../../front_end/panels/application/preloading/components/MismatchedPreloadingGrid.ts", "../../../../../../../../front_end/panels/application/preloading/components/PreloadingString.ts", "../../../../../../../../front_end/panels/application/preloading/components/PreloadingDetailsReportView.ts", "preloadingDetailsReportView.css.js", "../../../../../../../../front_end/panels/application/preloading/components/PreloadingDisabledInfobar.ts", "preloadingDisabledInfobar.css.js", "../../../../../../../../front_end/panels/application/preloading/components/PreloadingGrid.ts", "preloadingGrid.css.js", "../../../../../../../../front_end/panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts", "../../../../../../../../front_end/panels/application/preloading/components/RuleSetDetailsView.ts", "RuleSetDetailsView.css.js", "../../../../../../../../front_end/panels/application/preloading/components/RuleSetGrid.ts", "ruleSetGrid.css.js", "../../../../../../../../front_end/panels/application/preloading/components/UsedPreloadingView.ts", "usedPreloadingView.css.js"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../../ui/legacy/components/data_grid/data_grid.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as Diff from '../../../../third_party/diff/diff.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport type * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\n\nimport {capitalizedAction} from './PreloadingString.js';\n\nconst {charDiff} = Diff.Diff.DiffWrapper;\nconst {render, html, Directives: {styleMap}} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Column header\n   */\n  url: 'URL',\n  /**\n   * @description Column header: Action of preloading (prefetch/prerender)\n   */\n  action: 'Action',\n  /**\n   * @description Column header: Status of preloading attempt\n   */\n  status: 'Status',\n  /**\n   * @description Text in grid and details: Preloading attempt is not yet triggered.\n   */\n  statusNotTriggered: 'Not triggered',\n  /**\n   * @description Text in grid and details: Preloading attempt is eligible but pending.\n   */\n  statusPending: 'Pending',\n  /**\n   * @description Text in grid and details: Preloading is running.\n   */\n  statusRunning: 'Running',\n  /**\n   * @description Text in grid and details: Preloading finished and the result is ready for the next navigation.\n   */\n  statusReady: 'Ready',\n  /**\n   * @description Text in grid and details: Ready, then used.\n   */\n  statusSuccess: 'Success',\n  /**\n   * @description Text in grid and details: Preloading failed.\n   */\n  statusFailure: 'Failure',\n} as const;\nconst str_ =\n    i18n.i18n.registerUIStrings('panels/application/preloading/components/MismatchedPreloadingGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nclass PreloadingUIUtils {\n  static status(status: SDK.PreloadingModel.PreloadingStatus): string {\n    // See content/public/browser/preloading.h PreloadingAttemptOutcome.\n    switch (status) {\n      case SDK.PreloadingModel.PreloadingStatus.NOT_TRIGGERED:\n        return i18nString(UIStrings.statusNotTriggered);\n      case SDK.PreloadingModel.PreloadingStatus.PENDING:\n        return i18nString(UIStrings.statusPending);\n      case SDK.PreloadingModel.PreloadingStatus.RUNNING:\n        return i18nString(UIStrings.statusRunning);\n      case SDK.PreloadingModel.PreloadingStatus.READY:\n        return i18nString(UIStrings.statusReady);\n      case SDK.PreloadingModel.PreloadingStatus.SUCCESS:\n        return i18nString(UIStrings.statusSuccess);\n      case SDK.PreloadingModel.PreloadingStatus.FAILURE:\n        return i18nString(UIStrings.statusFailure);\n      // NotSupported is used to handle unreachable case. For example,\n      // there is no code path for\n      // PreloadingTriggeringOutcome::kTriggeredButPending in prefetch,\n      // which is mapped to NotSupported. So, we regard it as an\n      // internal error.\n      case SDK.PreloadingModel.PreloadingStatus.NOT_SUPPORTED:\n        return i18n.i18n.lockedString('Internal error');\n    }\n  }\n}\n\nexport interface MismatchedPreloadingGridRow {\n  action: Protocol.Preload.SpeculationAction;\n  url: string;\n  status: SDK.PreloadingModel.PreloadingStatus;\n}\n\nexport interface MismatchedPreloadingGridData {\n  pageURL: Platform.DevToolsPath.UrlString;\n  rows: MismatchedPreloadingGridRow[];\n}\n\n// Grid component to show prerendering attempts.\nexport class MismatchedPreloadingGrid extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: MismatchedPreloadingGridData|null = null;\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  set data(data: MismatchedPreloadingGridData) {\n    this.#data = data;\n    this.#render();\n  }\n\n  #render(): void {\n    if (!this.#data) {\n      return;\n    }\n\n    const {pageURL} = this.#data;\n\n    render(\n        html`<devtools-data-grid striped inline>\n          <table>\n            <tr>\n              <th id=\"url\" weight=\"40\" sortable>\n                ${i18nString(UIStrings.url)}\n              </th>\n              <th id=\"action\" weight=\"15\" sortable>\n                ${i18nString(UIStrings.action)}\n              </th>\n              <th id=\"status\" weight=\"15\" sortable>\n                ${i18nString(UIStrings.status)}\n              </th>\n            </tr>\n            ${\n            this.#data.rows\n                .map(row => ({\n                       row,\n                       diffScore: Diff.Diff.DiffWrapper.characterScore(row.url, pageURL),\n                     }))\n                .sort((a, b) => b.diffScore - a.diffScore)\n                .map(({row}) => html`\n                <tr>\n                  <td>\n                    <div>${charDiff(row.url, pageURL).map(diffOp => {\n                       const s = diffOp[1];\n                       switch (diffOp[0]) {\n                         case Diff.Diff.Operation.Equal:\n                           return html`<span>${s}</span>`;\n                         case Diff.Diff.Operation.Insert:\n                           return html`<span style=${styleMap({\n                             color: 'var(--sys-color-green)',\n                             'text-decoration': 'line-through'\n                           })}\n                               >${s}</span>`;\n                         case Diff.Diff.Operation.Delete:\n                           return html`<span style=${styleMap({color: 'var(--sys-color-error)'})}>${s}</span>`;\n                         case Diff.Diff.Operation.Edit:\n                           return html`<span style=${styleMap({\n                             color: 'var(--sys-color-green',\n                             'text-decoration': 'line-through'\n                           })}\n                            >${s}</span>`;\n                         default:\n                           throw new Error('unreachable');\n                       }\n                     })}\n                    </div>\n                  </td>\n                  <td>${capitalizedAction(row.action)}</td>\n                  <td>${PreloadingUIUtils.status(row.status)}</td>\n                </tr>\n              `)}\n          </table>\n        </devtools-data-grid>`,\n        this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-resources-mismatched-preloading-grid', MismatchedPreloadingGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-mismatched-preloading-grid': MismatchedPreloadingGrid;\n  }\n}\n", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Protocol from '../../../../generated/protocol.js';\nimport * as Bindings from '../../../../models/bindings/bindings.js';\n\nconst UIStrings = {\n  /**\n   * @description  Description text for Prefetch status PrefetchFailedIneligibleRedirect.\n   */\n  PrefetchFailedIneligibleRedirect: 'The prefetch was redirected, but the redirect URL is not eligible for prefetch.',\n  /**\n   * @description  Description text for Prefetch status PrefetchFailedInvalidRedirect.\n   */\n  PrefetchFailedInvalidRedirect: 'The prefetch was redirected, but there was a problem with the redirect.',\n  /**\n   * @description  Description text for Prefetch status PrefetchFailedMIMENotSupported.\n   */\n  PrefetchFailedMIMENotSupported: 'The prefetch failed because the response\\'s Content-Type header was not supported.',\n  /**\n   * @description  Description text for Prefetch status PrefetchFailedNetError.\n   */\n  PrefetchFailedNetError: 'The prefetch failed because of a network error.',\n  /**\n   * @description  Description text for Prefetch status PrefetchFailedNon2XX.\n   */\n  PrefetchFailedNon2XX: 'The prefetch failed because of a non-2xx HTTP response status code.',\n  /**\n   * @description  Description text for Prefetch status PrefetchIneligibleRetryAfter.\n   */\n  PrefetchIneligibleRetryAfter:\n      'A previous prefetch to the origin got a HTTP 503 response with an Retry-After header that has not elapsed yet.',\n  /**\n   * @description  Description text for Prefetch status PrefetchIsPrivacyDecoy.\n   */\n  PrefetchIsPrivacyDecoy:\n      'The URL was not eligible to be prefetched because there was a registered service worker or cross-site cookies for that origin, but the prefetch was put on the network anyways and not used, to disguise that the user had some kind of previous relationship with the origin.',\n  /**\n   * @description  Description text for Prefetch status PrefetchIsStale.\n   */\n  PrefetchIsStale: 'Too much time elapsed between the prefetch and usage, so the prefetch was discarded.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleBrowserContextOffTheRecord.\n   */\n  PrefetchNotEligibleBrowserContextOffTheRecord:\n      'The prefetch was not performed because the browser is in Incognito or Guest mode.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleDataSaverEnabled.\n   */\n  PrefetchNotEligibleDataSaverEnabled:\n      'The prefetch was not performed because the operating system is in Data Saver mode.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleExistingProxy.\n   */\n  PrefetchNotEligibleExistingProxy:\n      'The URL is not eligible to be prefetched, because in the default network context it is configured to use a proxy server.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleHostIsNonUnique.\n   */\n  PrefetchNotEligibleHostIsNonUnique:\n      'The URL was not eligible to be prefetched because its host was not unique (e.g., a non publicly routable IP address or a hostname which is not registry-controlled), but the prefetch was required to be proxied.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleNonDefaultStoragePartition.\n   */\n  PrefetchNotEligibleNonDefaultStoragePartition:\n      'The URL was not eligible to be prefetched because it uses a non-default storage partition.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy.\n   */\n  PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy:\n      'The URL was not eligible to be prefetched because the default network context cannot be configured to use the prefetch proxy for a same-site cross-origin prefetch request.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleSchemeIsNotHttps.\n   */\n  PrefetchNotEligibleSchemeIsNotHttps: 'The URL was not eligible to be prefetched because its scheme was not https:.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleUserHasCookies.\n   */\n  PrefetchNotEligibleUserHasCookies:\n      'The URL was not eligible to be prefetched because it was cross-site, but the user had cookies for that origin.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleUserHasServiceWorker.\n   */\n  PrefetchNotEligibleUserHasServiceWorker:\n      'The URL was not eligible to be prefetched because there was a registered service worker for that origin, which is currently not supported.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotUsedCookiesChanged.\n   */\n  PrefetchNotUsedCookiesChanged:\n      'The prefetch was not used because it was a cross-site prefetch, and cookies were added for that URL while the prefetch was ongoing, so the prefetched response is now out-of-date.',\n  /**\n   * @description  Description text for Prefetch status PrefetchProxyNotAvailable.\n   */\n  PrefetchProxyNotAvailable:\n      'A network error was encountered when trying to set up a connection to the prefetching proxy.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotUsedProbeFailed.\n   */\n  PrefetchNotUsedProbeFailed: 'The prefetch was blocked by your Internet Service Provider or network administrator.',\n  /**\n   * @description  Description text for Prefetch status PrefetchEvictedForNewerPrefetch.\n   */\n  PrefetchEvictedForNewerPrefetch:\n      'The prefetch was discarded because the initiating page has too many prefetches ongoing, and this was one of the oldest.',\n  /**\n   * @description Description text for Prefetch status PrefetchEvictedAfterCandidateRemoved.\n   */\n  PrefetchEvictedAfterCandidateRemoved:\n      'The prefetch was discarded because no speculation rule in the initating page triggers a prefetch for this URL anymore.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleBatterySaverEnabled.\n   */\n  PrefetchNotEligibleBatterySaverEnabled:\n      'The prefetch was not performed because the Battery Saver setting was enabled.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligiblePreloadingDisabled.\n   */\n  PrefetchNotEligiblePreloadingDisabled: 'The prefetch was not performed because speculative loading was disabled.',\n  /**\n   * @description  Description text for Prefetch status PrefetchEvictedAfterBrowsingDataRemoved.\n   */\n  PrefetchEvictedAfterBrowsingDataRemoved: 'The prefetch was discarded because browsing data was removed.',\n\n  /**\n   *  Description text for PrerenderFinalStatus::kLowEndDevice.\n   */\n  prerenderFinalStatusLowEndDevice:\n      'The prerender was not performed because this device does not have enough total system memory to support prerendering.',\n  /**\n   *  Description text for PrerenderFinalStatus::kInvalidSchemeRedirect.\n   */\n  prerenderFinalStatusInvalidSchemeRedirect:\n      'The prerendering navigation failed because it redirected to a URL whose scheme was not http: or https:.',\n  /**\n   *  Description text for PrerenderFinalStatus::kInvalidSchemeNavigation.\n   */\n  prerenderFinalStatusInvalidSchemeNavigation:\n      'The URL was not eligible to be prerendered because its scheme was not http: or https:.',\n  /**\n   *  Description text for PrerenderFinalStatus::kNavigationRequestBlockedByCsp.\n   */\n  prerenderFinalStatusNavigationRequestBlockedByCsp:\n      'The prerendering navigation was blocked by a Content Security Policy.',\n  /**\n   * @description Description text for PrerenderFinalStatus::kMojoBinderPolicy.\n   * @example {device.mojom.GamepadMonitor} PH1\n   */\n  prerenderFinalStatusMojoBinderPolicy:\n      'The prerendered page used a forbidden JavaScript API that is currently not supported. (Internal Mojo interface: {PH1})',\n  /**\n   *  Description text for PrerenderFinalStatus::kRendererProcessCrashed.\n   */\n  prerenderFinalStatusRendererProcessCrashed: 'The prerendered page crashed.',\n  /**\n   *  Description text for PrerenderFinalStatus::kRendererProcessKilled.\n   */\n  prerenderFinalStatusRendererProcessKilled: 'The prerendered page was killed.',\n  /**\n   *  Description text for PrerenderFinalStatus::kDownload.\n   */\n  prerenderFinalStatusDownload:\n      'The prerendered page attempted to initiate a download, which is currently not supported.',\n  /**\n   *  Description text for PrerenderFinalStatus::kNavigationBadHttpStatus.\n   */\n  prerenderFinalStatusNavigationBadHttpStatus:\n      'The prerendering navigation failed because of a non-2xx HTTP response status code.',\n  /**\n   *  Description text for PrerenderFinalStatus::kClientCertRequested.\n   */\n  prerenderFinalStatusClientCertRequested: 'The prerendering navigation required a HTTP client certificate.',\n  /**\n   *  Description text for PrerenderFinalStatus::kNavigationRequestNetworkError.\n   */\n  prerenderFinalStatusNavigationRequestNetworkError: 'The prerendering navigation encountered a network error.',\n  /**\n   *  Description text for PrerenderFinalStatus::kSslCertificateError.\n   */\n  prerenderFinalStatusSslCertificateError: 'The prerendering navigation failed because of an invalid SSL certificate.',\n  /**\n   *  Description text for PrerenderFinalStatus::kLoginAuthRequested.\n   */\n  prerenderFinalStatusLoginAuthRequested:\n      'The prerendering navigation required HTTP authentication, which is currently not supported.',\n  /**\n   *  Description text for PrerenderFinalStatus::kUaChangeRequiresReload.\n   */\n  prerenderFinalStatusUaChangeRequiresReload: 'Changing User Agent occurred in prerendering navigation.',\n  /**\n   *  Description text for PrerenderFinalStatus::kBlockedByClient.\n   */\n  prerenderFinalStatusBlockedByClient: 'Some resource load was blocked.',\n  /**\n   *  Description text for PrerenderFinalStatus::kAudioOutputDeviceRequested.\n   */\n  prerenderFinalStatusAudioOutputDeviceRequested:\n      'The prerendered page requested audio output, which is currently not supported.',\n  /**\n   *  Description text for PrerenderFinalStatus::kMixedContent.\n   */\n  prerenderFinalStatusMixedContent: 'The prerendered page contained mixed content.',\n  /**\n   *  Description text for PrerenderFinalStatus::kTriggerBackgrounded.\n   */\n  prerenderFinalStatusTriggerBackgrounded:\n      'The initiating page was backgrounded, so the prerendered page was discarded.',\n  /**\n   *  Description text for PrerenderFinalStatus::kMemoryLimitExceeded.\n   */\n  prerenderFinalStatusMemoryLimitExceeded:\n      'The prerender was not performed because the browser exceeded the prerendering memory limit.',\n  /**\n   *  Description text for PrerenderFinalStatus::kDataSaverEnabled.\n   */\n  prerenderFinalStatusDataSaverEnabled:\n      'The prerender was not performed because the user requested that the browser use less data.',\n  /**\n   *  Description text for PrerenderFinalStatus::TriggerUrlHasEffectiveUrl.\n   */\n  prerenderFinalStatusHasEffectiveUrl:\n      'The initiating page cannot perform prerendering, because it has an effective URL that is different from its normal URL. (For example, the New Tab Page, or hosted apps.)',\n  /**\n   *  Description text for PrerenderFinalStatus::kTimeoutBackgrounded.\n   */\n  prerenderFinalStatusTimeoutBackgrounded:\n      'The initiating page was backgrounded for a long time, so the prerendered page was discarded.',\n  /**\n   *  Description text for PrerenderFinalStatus::kCrossSiteRedirectInInitialNavigation.\n   */\n  prerenderFinalStatusCrossSiteRedirectInInitialNavigation:\n      'The prerendering navigation failed because the prerendered URL redirected to a cross-site URL.',\n  /**\n   *  Description text for PrerenderFinalStatus::kCrossSiteNavigationInInitialNavigation.\n   */\n  prerenderFinalStatusCrossSiteNavigationInInitialNavigation:\n      'The prerendering navigation failed because it targeted a cross-site URL.',\n  /**\n   *  Description text for PrerenderFinalStatus::kSameSiteCrossOriginRedirectNotOptInInInitialNavigation.\n   */\n  prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInInitialNavigation:\n      'The prerendering navigation failed because the prerendered URL redirected to a cross-origin same-site URL, but the destination response did not include the appropriate Supports-Loading-Mode header.',\n  /**\n   *  Description text for PrerenderFinalStatus::kSameSiteCrossOriginNavigationNotOptInInInitialNavigation.\n   */\n  prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInInitialNavigation:\n      'The prerendering navigation failed because it was to a cross-origin same-site URL, but the destination response did not include the appropriate Supports-Loading-Mode header.',\n  /**\n   *  Description text for PrerenderFinalStatus::kActivationNavigationParameterMismatch.\n   */\n  prerenderFinalStatusActivationNavigationParameterMismatch:\n      'The prerender was not used because during activation time, different navigation parameters (e.g., HTTP headers) were calculated than during the original prerendering navigation request.',\n  /**\n   *  Description text for PrerenderFinalStatus::kPrimaryMainFrameRendererProcessCrashed.\n   */\n  prerenderFinalStatusPrimaryMainFrameRendererProcessCrashed: 'The initiating page crashed.',\n  /**\n   *  Description text for PrerenderFinalStatus::kPrimaryMainFrameRendererProcessKilled.\n   */\n  prerenderFinalStatusPrimaryMainFrameRendererProcessKilled: 'The initiating page was killed.',\n  /**\n   *  Description text for PrerenderFinalStatus::kActivationFramePolicyNotCompatible.\n   */\n  prerenderFinalStatusActivationFramePolicyNotCompatible:\n      'The prerender was not used because the sandboxing flags or permissions policy of the initiating page was not compatible with those of the prerendering page.',\n  /**\n   *  Description text for PrerenderFinalStatus::kPreloadingDisabled.\n   */\n  prerenderFinalStatusPreloadingDisabled:\n      'The prerender was not performed because the user disabled preloading in their browser settings.',\n  /**\n   *  Description text for PrerenderFinalStatus::kBatterySaverEnabled.\n   */\n  prerenderFinalStatusBatterySaverEnabled:\n      'The prerender was not performed because the user requested that the browser use less battery.',\n  /**\n   *  Description text for PrerenderFinalStatus::kActivatedDuringMainFrameNavigation.\n   */\n  prerenderFinalStatusActivatedDuringMainFrameNavigation:\n      'Prerendered page activated during initiating page\\'s main frame navigation.',\n  /**\n   *  Description text for PrerenderFinalStatus::kCrossSiteRedirectInMainFrameNavigation.\n   */\n  prerenderFinalStatusCrossSiteRedirectInMainFrameNavigation:\n      'The prerendered page navigated to a URL which redirected to a cross-site URL.',\n  /**\n   *  Description text for PrerenderFinalStatus::kCrossSiteNavigationInMainFrameNavigation.\n   */\n  prerenderFinalStatusCrossSiteNavigationInMainFrameNavigation: 'The prerendered page navigated to a cross-site URL.',\n  /**\n   *  Description text for PrerenderFinalStatus::kSameSiteCrossOriginRedirectNotOptInInMainFrameNavigation.\n   */\n  prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInMainFrameNavigation:\n      'The prerendered page navigated to a URL which redirected to a cross-origin same-site URL, but the destination response did not include the appropriate Supports-Loading-Mode header.',\n  /**\n   *  Description text for PrerenderFinalStatus::kSameSiteCrossOriginNavigationNotOptInInMainFrameNavigation.\n   */\n  prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInMainFrameNavigation:\n      'The prerendered page navigated to a cross-origin same-site URL, but the destination response did not include the appropriate Supports-Loading-Mode header.',\n  /**\n   *  Description text for PrerenderFinalStatus::kMemoryPressureOnTrigger.\n   */\n  prerenderFinalStatusMemoryPressureOnTrigger:\n      'The prerender was not performed because the browser was under critical memory pressure.',\n  /**\n   *  Description text for PrerenderFinalStatus::kMemoryPressureAfterTriggered.\n   */\n  prerenderFinalStatusMemoryPressureAfterTriggered:\n      'The prerendered page was unloaded because the browser came under critical memory pressure.',\n  /**\n   *  Description text for PrerenderFinalStatus::kPrerenderingDisabledByDevTools.\n   */\n  prerenderFinalStatusPrerenderingDisabledByDevTools:\n      'The prerender was not performed because DevTools has been used to disable prerendering.',\n  /**\n   * Description text for PrerenderFinalStatus::kSpeculationRuleRemoved.\n   */\n  prerenderFinalStatusSpeculationRuleRemoved:\n      'The prerendered page was unloaded because the initiating page removed the corresponding prerender rule from <script type=\"speculationrules\">.',\n  /**\n   * Description text for PrerenderFinalStatus::kActivatedWithAuxiliaryBrowsingContexts.\n   */\n  prerenderFinalStatusActivatedWithAuxiliaryBrowsingContexts:\n      'The prerender was not used because during activation time, there were other windows with an active opener reference to the initiating page, which is currently not supported.',\n  /**\n   * Description text for PrerenderFinalStatus::kMaxNumOfRunningEagerPrerendersExceeded.\n   */\n  prerenderFinalStatusMaxNumOfRunningEagerPrerendersExceeded:\n      'The prerender whose eagerness is \"eager\" was not performed because the initiating page already has too many prerenders ongoing. Remove other speculation rules with \"eager\" to enable further prerendering.',\n  /**\n   * Description text for PrerenderFinalStatus::kMaxNumOfRunningEmbedderPrerendersExceeded.\n   */\n  prerenderFinalStatusMaxNumOfRunningEmbedderPrerendersExceeded:\n      'The browser-triggered prerender was not performed because the initiating page already has too many prerenders ongoing.',\n  /**\n   * Description text for PrerenderFinalStatus::kMaxNumOfRunningNonEagerPrerendersExceeded.\n   */\n  prerenderFinalStatusMaxNumOfRunningNonEagerPrerendersExceeded:\n      'The old non-eager prerender (with a \"moderate\" or \"conservative\" eagerness and triggered by hovering or clicking links) was automatically canceled due to starting a new non-eager prerender. It can be retriggered by interacting with the link again.',\n  /**\n   * Description text for PrenderFinalStatus::kPrerenderingUrlHasEffectiveUrl.\n   */\n  prerenderFinalStatusPrerenderingUrlHasEffectiveUrl:\n      'The prerendering navigation failed because it has an effective URL that is different from its normal URL. (For example, the New Tab Page, or hosted apps.)',\n  /**\n   * Description text for PrenderFinalStatus::kRedirectedPrerenderingUrlHasEffectiveUrl.\n   */\n  prerenderFinalStatusRedirectedPrerenderingUrlHasEffectiveUrl:\n      'The prerendering navigation failed because it redirected to an effective URL that is different from its normal URL. (For example, the New Tab Page, or hosted apps.)',\n  /**\n   * Description text for PrenderFinalStatus::kActivationUrlHasEffectiveUrl.\n   */\n  prerenderFinalStatusActivationUrlHasEffectiveUrl:\n      'The prerender was not used because during activation time, navigation has an effective URL that is different from its normal URL. (For example, the New Tab Page, or hosted apps.)',\n  /**\n   * Description text for PrenderFinalStatus::kJavaScriptInterfaceAdded.\n   */\n  prerenderFinalStatusJavaScriptInterfaceAdded:\n      'The prerendered page was unloaded because a new JavaScript interface has been injected by WebView.addJavascriptInterface().',\n  /**\n   * Description text for PrenderFinalStatus::kJavaScriptInterfaceRemoved.\n   */\n  prerenderFinalStatusJavaScriptInterfaceRemoved:\n      'The prerendered page was unloaded because a JavaScript interface has been removed by WebView.removeJavascriptInterface().',\n  /**\n   * Description text for PrenderFinalStatus::kAllPrerenderingCanceled.\n   */\n  prerenderFinalStatusAllPrerenderingCanceled:\n      'All prerendered pages were unloaded by the browser for some reason (For example, WebViewCompat.addWebMessageListener() was called during prerendering.)',\n  /**\n   * Description text for PrenderFinalStatus::kWindowClosed.\n   */\n  prerenderFinalStatusWindowClosed: 'The prerendered page was unloaded because it called window.close().',\n  /**\n   * Description text for PrenderFinalStatus::kBrowsingDataRemoved.\n   */\n  prerenderFinalStatusBrowsingDataRemoved: 'The prerendered page was unloaded because browsing data was removed.',\n\n  /**\n   * @description Text in grid and details: Preloading attempt is not yet triggered.\n   */\n  statusNotTriggered: 'Not triggered',\n  /**\n   * @description Text in grid and details: Preloading attempt is eligible but pending.\n   */\n  statusPending: 'Pending',\n  /**\n   * @description Text in grid and details: Preloading is running.\n   */\n  statusRunning: 'Running',\n  /**\n   * @description Text in grid and details: Preloading finished and the result is ready for the next navigation.\n   */\n  statusReady: 'Ready',\n  /**\n   * @description Text in grid and details: Ready, then used.\n   */\n  statusSuccess: 'Success',\n  /**\n   * @description Text in grid and details: Preloading failed.\n   */\n  statusFailure: 'Failure',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/components/PreloadingString.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport const PrefetchReasonDescription: Record<string, {name: () => Platform.UIString.LocalizedString}> = {\n  PrefetchFailedIneligibleRedirect: {name: i18nLazyString(UIStrings.PrefetchFailedIneligibleRedirect)},\n  PrefetchFailedInvalidRedirect: {name: i18nLazyString(UIStrings.PrefetchFailedInvalidRedirect)},\n  PrefetchFailedMIMENotSupported: {name: i18nLazyString(UIStrings.PrefetchFailedMIMENotSupported)},\n  PrefetchFailedNetError: {name: i18nLazyString(UIStrings.PrefetchFailedNetError)},\n  PrefetchFailedNon2XX: {name: i18nLazyString(UIStrings.PrefetchFailedNon2XX)},\n  PrefetchIneligibleRetryAfter: {name: i18nLazyString(UIStrings.PrefetchIneligibleRetryAfter)},\n  PrefetchIsPrivacyDecoy: {name: i18nLazyString(UIStrings.PrefetchIsPrivacyDecoy)},\n  PrefetchIsStale: {name: i18nLazyString(UIStrings.PrefetchIsStale)},\n  PrefetchNotEligibleBrowserContextOffTheRecord:\n      {name: i18nLazyString(UIStrings.PrefetchNotEligibleBrowserContextOffTheRecord)},\n  PrefetchNotEligibleDataSaverEnabled: {name: i18nLazyString(UIStrings.PrefetchNotEligibleDataSaverEnabled)},\n  PrefetchNotEligibleExistingProxy: {name: i18nLazyString(UIStrings.PrefetchNotEligibleExistingProxy)},\n  PrefetchNotEligibleHostIsNonUnique: {name: i18nLazyString(UIStrings.PrefetchNotEligibleHostIsNonUnique)},\n  PrefetchNotEligibleNonDefaultStoragePartition:\n      {name: i18nLazyString(UIStrings.PrefetchNotEligibleNonDefaultStoragePartition)},\n  PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy:\n      {name: i18nLazyString(UIStrings.PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy)},\n  PrefetchNotEligibleSchemeIsNotHttps: {name: i18nLazyString(UIStrings.PrefetchNotEligibleSchemeIsNotHttps)},\n  PrefetchNotEligibleUserHasCookies: {name: i18nLazyString(UIStrings.PrefetchNotEligibleUserHasCookies)},\n  PrefetchNotEligibleUserHasServiceWorker: {name: i18nLazyString(UIStrings.PrefetchNotEligibleUserHasServiceWorker)},\n  PrefetchNotUsedCookiesChanged: {name: i18nLazyString(UIStrings.PrefetchNotUsedCookiesChanged)},\n  PrefetchProxyNotAvailable: {name: i18nLazyString(UIStrings.PrefetchProxyNotAvailable)},\n  PrefetchNotUsedProbeFailed: {name: i18nLazyString(UIStrings.PrefetchNotUsedProbeFailed)},\n  PrefetchEvictedForNewerPrefetch: {name: i18nLazyString(UIStrings.PrefetchEvictedForNewerPrefetch)},\n  PrefetchEvictedAfterCandidateRemoved: {name: i18nLazyString(UIStrings.PrefetchEvictedAfterCandidateRemoved)},\n  PrefetchNotEligibleBatterySaverEnabled: {name: i18nLazyString(UIStrings.PrefetchNotEligibleBatterySaverEnabled)},\n  PrefetchNotEligiblePreloadingDisabled: {name: i18nLazyString(UIStrings.PrefetchNotEligiblePreloadingDisabled)},\n  PrefetchNotEligibleUserHasServiceWorkerNoFetchHandler: {name: () => i18n.i18n.lockedString('Unknown')},\n  PrefetchNotEligibleRedirectFromServiceWorker: {name: () => i18n.i18n.lockedString('Unknown')},\n  PrefetchNotEligibleRedirectToServiceWorker: {name: () => i18n.i18n.lockedString('Unknown')},\n  PrefetchEvictedAfterBrowsingDataRemoved: {name: i18nLazyString(UIStrings.PrefetchEvictedAfterBrowsingDataRemoved)},\n};\n\n// Decoding PrefetchFinalStatus prefetchAttempt to failure description.\nexport function prefetchFailureReason({prefetchStatus}: SDK.PreloadingModel.PrefetchAttempt): string|null {\n  // If you face an error on rolling CDP changes, see\n  // https://docs.google.com/document/d/1PnrfowsZMt62PX1EvvTp2Nqs3ji1zrklrAEe1JYbkTk\n  switch (prefetchStatus) {\n    case null:\n      return null;\n    // PrefetchNotStarted is mapped to Pending.\n    case Protocol.Preload.PrefetchStatus.PrefetchNotStarted:\n      return null;\n    // PrefetchNotFinishedInTime is mapped to Running.\n    case Protocol.Preload.PrefetchStatus.PrefetchNotFinishedInTime:\n      return null;\n    // PrefetchResponseUsed is mapped to Success.\n    case Protocol.Preload.PrefetchStatus.PrefetchResponseUsed:\n      return null;\n    // Holdback related status is expected to be overridden when DevTools is\n    // opened.\n    case Protocol.Preload.PrefetchStatus.PrefetchAllowed:\n    case Protocol.Preload.PrefetchStatus.PrefetchHeldback:\n      return null;\n    // TODO(https://crbug.com/1410709): deprecate PrefetchSuccessfulButNotUsed in the protocol.\n    case Protocol.Preload.PrefetchStatus.PrefetchSuccessfulButNotUsed:\n      return null;\n    case Protocol.Preload.PrefetchStatus.PrefetchFailedIneligibleRedirect:\n      return PrefetchReasonDescription['PrefetchFailedIneligibleRedirect'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchFailedInvalidRedirect:\n      return PrefetchReasonDescription['PrefetchFailedInvalidRedirect'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchFailedMIMENotSupported:\n      return PrefetchReasonDescription['PrefetchFailedMIMENotSupported'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchFailedNetError:\n      return PrefetchReasonDescription['PrefetchFailedNetError'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchFailedNon2XX:\n      return PrefetchReasonDescription['PrefetchFailedNon2XX'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchIneligibleRetryAfter:\n      return PrefetchReasonDescription['PrefetchIneligibleRetryAfter'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchEvictedForNewerPrefetch:\n      return PrefetchReasonDescription['PrefetchEvictedForNewerPrefetch'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchEvictedAfterCandidateRemoved:\n      return PrefetchReasonDescription['PrefetchEvictedAfterCandidateRemoved'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchIsPrivacyDecoy:\n      return PrefetchReasonDescription['PrefetchIsPrivacyDecoy'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchIsStale:\n      return PrefetchReasonDescription['PrefetchIsStale'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleBrowserContextOffTheRecord:\n      return PrefetchReasonDescription['PrefetchNotEligibleBrowserContextOffTheRecord'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleDataSaverEnabled:\n      return PrefetchReasonDescription['PrefetchNotEligibleDataSaverEnabled'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleExistingProxy:\n      return PrefetchReasonDescription['PrefetchNotEligibleExistingProxy'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleHostIsNonUnique:\n      return PrefetchReasonDescription['PrefetchNotEligibleHostIsNonUnique'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleNonDefaultStoragePartition:\n      return PrefetchReasonDescription['PrefetchNotEligibleNonDefaultStoragePartition'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy:\n      return PrefetchReasonDescription['PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleSchemeIsNotHttps:\n      return PrefetchReasonDescription['PrefetchNotEligibleSchemeIsNotHttps'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleUserHasCookies:\n      return PrefetchReasonDescription['PrefetchNotEligibleUserHasCookies'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleUserHasServiceWorker:\n      return PrefetchReasonDescription['PrefetchNotEligibleUserHasServiceWorker'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotUsedCookiesChanged:\n      return PrefetchReasonDescription['PrefetchNotUsedCookiesChanged'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchProxyNotAvailable:\n      return PrefetchReasonDescription['PrefetchProxyNotAvailable'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotUsedProbeFailed:\n      return PrefetchReasonDescription['PrefetchNotUsedProbeFailed'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleBatterySaverEnabled:\n      return PrefetchReasonDescription['PrefetchNotEligibleBatterySaverEnabled'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligiblePreloadingDisabled:\n      return PrefetchReasonDescription['PrefetchNotEligiblePreloadingDisabled'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleUserHasServiceWorkerNoFetchHandler:\n      return PrefetchReasonDescription['PrefetchNotEligibleUserHasServiceWorkerNoFetchHandler'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleRedirectFromServiceWorker:\n      return PrefetchReasonDescription['PrefetchNotEligibleRedirectFromServiceWorker'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleRedirectToServiceWorker:\n      return PrefetchReasonDescription['PrefetchNotEligibleRedirectToServiceWorker'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchEvictedAfterBrowsingDataRemoved:\n      return PrefetchReasonDescription['PrefetchEvictedAfterBrowsingDataRemoved'].name();\n    default:\n      // Note that we use switch and exhaustiveness check to prevent to\n      // forget updating these strings, but allow to handle unknown\n      // PrefetchStatus at runtime.\n      return i18n.i18n.lockedString(`Unknown failure reason: ${\n          prefetchStatus as 'See https://docs.google.com/document/d/1PnrfowsZMt62PX1EvvTp2Nqs3ji1zrklrAEe1JYbkTk'}`);\n  }\n}\n\n// Detailed failure reason for PrerenderFinalStatus.\nexport function prerenderFailureReason(attempt: SDK.PreloadingModel.PrerenderAttempt): string|null {\n  // If you face an error on rolling CDP changes, see\n  // https://docs.google.com/document/d/1PnrfowsZMt62PX1EvvTp2Nqs3ji1zrklrAEe1JYbkTk\n  switch (attempt.prerenderStatus) {\n    case null:\n    case Protocol.Preload.PrerenderFinalStatus.Activated:\n      return null;\n    case Protocol.Preload.PrerenderFinalStatus.Destroyed:\n      // TODO(https://crbug.com/1410709): Fill it.\n      return i18n.i18n.lockedString('Unknown');\n    case Protocol.Preload.PrerenderFinalStatus.LowEndDevice:\n      return i18nString(UIStrings.prerenderFinalStatusLowEndDevice);\n    case Protocol.Preload.PrerenderFinalStatus.InvalidSchemeRedirect:\n      return i18nString(UIStrings.prerenderFinalStatusInvalidSchemeRedirect);\n    case Protocol.Preload.PrerenderFinalStatus.InvalidSchemeNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusInvalidSchemeNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.NavigationRequestBlockedByCsp:\n      return i18nString(UIStrings.prerenderFinalStatusNavigationRequestBlockedByCsp);\n    case Protocol.Preload.PrerenderFinalStatus.MojoBinderPolicy:\n      assertNotNullOrUndefined(attempt.disallowedMojoInterface);\n      return i18nString(UIStrings.prerenderFinalStatusMojoBinderPolicy, {PH1: attempt.disallowedMojoInterface});\n    case Protocol.Preload.PrerenderFinalStatus.RendererProcessCrashed:\n      return i18nString(UIStrings.prerenderFinalStatusRendererProcessCrashed);\n    case Protocol.Preload.PrerenderFinalStatus.RendererProcessKilled:\n      return i18nString(UIStrings.prerenderFinalStatusRendererProcessKilled);\n    case Protocol.Preload.PrerenderFinalStatus.Download:\n      return i18nString(UIStrings.prerenderFinalStatusDownload);\n    case Protocol.Preload.PrerenderFinalStatus.TriggerDestroyed:\n      // After https://crrev.com/c/4515841, this won't occur if DevTools is opened.\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.NavigationNotCommitted:\n      // This looks internal error.\n      //\n      // TODO(https://crbug.com/1410709): Fill it.\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.NavigationBadHttpStatus:\n      return i18nString(UIStrings.prerenderFinalStatusNavigationBadHttpStatus);\n    case Protocol.Preload.PrerenderFinalStatus.ClientCertRequested:\n      return i18nString(UIStrings.prerenderFinalStatusClientCertRequested);\n    case Protocol.Preload.PrerenderFinalStatus.NavigationRequestNetworkError:\n      return i18nString(UIStrings.prerenderFinalStatusNavigationRequestNetworkError);\n    case Protocol.Preload.PrerenderFinalStatus.CancelAllHostsForTesting:\n      // Used only in tests.\n      throw new Error('unreachable');\n    case Protocol.Preload.PrerenderFinalStatus.DidFailLoad:\n      // TODO(https://crbug.com/1410709): Fill it.\n      return i18n.i18n.lockedString('Unknown');\n    case Protocol.Preload.PrerenderFinalStatus.Stop:\n      // TODO(https://crbug.com/1410709): Fill it.\n      return i18n.i18n.lockedString('Unknown');\n    case Protocol.Preload.PrerenderFinalStatus.SslCertificateError:\n      return i18nString(UIStrings.prerenderFinalStatusSslCertificateError);\n    case Protocol.Preload.PrerenderFinalStatus.LoginAuthRequested:\n      return i18nString(UIStrings.prerenderFinalStatusLoginAuthRequested);\n    case Protocol.Preload.PrerenderFinalStatus.UaChangeRequiresReload:\n      return i18nString(UIStrings.prerenderFinalStatusUaChangeRequiresReload);\n    case Protocol.Preload.PrerenderFinalStatus.BlockedByClient:\n      return i18nString(UIStrings.prerenderFinalStatusBlockedByClient);\n    case Protocol.Preload.PrerenderFinalStatus.AudioOutputDeviceRequested:\n      return i18nString(UIStrings.prerenderFinalStatusAudioOutputDeviceRequested);\n    case Protocol.Preload.PrerenderFinalStatus.MixedContent:\n      return i18nString(UIStrings.prerenderFinalStatusMixedContent);\n    case Protocol.Preload.PrerenderFinalStatus.TriggerBackgrounded:\n      return i18nString(UIStrings.prerenderFinalStatusTriggerBackgrounded);\n    case Protocol.Preload.PrerenderFinalStatus.MemoryLimitExceeded:\n      return i18nString(UIStrings.prerenderFinalStatusMemoryLimitExceeded);\n    case Protocol.Preload.PrerenderFinalStatus.DataSaverEnabled:\n      return i18nString(UIStrings.prerenderFinalStatusDataSaverEnabled);\n    case Protocol.Preload.PrerenderFinalStatus.TriggerUrlHasEffectiveUrl:\n      return i18nString(UIStrings.prerenderFinalStatusHasEffectiveUrl);\n    case Protocol.Preload.PrerenderFinalStatus.ActivatedBeforeStarted:\n      // Status for debugging.\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.InactivePageRestriction:\n      // This looks internal error.\n      //\n      // TODO(https://crbug.com/1410709): Fill it.\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.StartFailed:\n      // This looks internal error.\n      //\n      // TODO(https://crbug.com/1410709): Fill it.\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.TimeoutBackgrounded:\n      return i18nString(UIStrings.prerenderFinalStatusTimeoutBackgrounded);\n    case Protocol.Preload.PrerenderFinalStatus.CrossSiteRedirectInInitialNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusCrossSiteRedirectInInitialNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.CrossSiteNavigationInInitialNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusCrossSiteNavigationInInitialNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.SameSiteCrossOriginRedirectNotOptInInInitialNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInInitialNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.SameSiteCrossOriginNavigationNotOptInInInitialNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInInitialNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.ActivationNavigationParameterMismatch:\n      return i18nString(UIStrings.prerenderFinalStatusActivationNavigationParameterMismatch);\n    case Protocol.Preload.PrerenderFinalStatus.ActivatedInBackground:\n      // Status for debugging.\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.EmbedderHostDisallowed:\n      // Chrome as embedder doesn't use this.\n      throw new Error('unreachable');\n    case Protocol.Preload.PrerenderFinalStatus.ActivationNavigationDestroyedBeforeSuccess:\n      // Should not occur in DevTools because tab is alive?\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.TabClosedByUserGesture:\n      // Should not occur in DevTools because tab is alive.\n      throw new Error('unreachable');\n    case Protocol.Preload.PrerenderFinalStatus.TabClosedWithoutUserGesture:\n      // Should not occur in DevTools because tab is alive.\n      throw new Error('unreachable');\n    case Protocol.Preload.PrerenderFinalStatus.PrimaryMainFrameRendererProcessCrashed:\n      return i18nString(UIStrings.prerenderFinalStatusPrimaryMainFrameRendererProcessCrashed);\n    case Protocol.Preload.PrerenderFinalStatus.PrimaryMainFrameRendererProcessKilled:\n      return i18nString(UIStrings.prerenderFinalStatusPrimaryMainFrameRendererProcessKilled);\n    case Protocol.Preload.PrerenderFinalStatus.ActivationFramePolicyNotCompatible:\n      return i18nString(UIStrings.prerenderFinalStatusActivationFramePolicyNotCompatible);\n    case Protocol.Preload.PrerenderFinalStatus.PreloadingDisabled:\n      return i18nString(UIStrings.prerenderFinalStatusPreloadingDisabled);\n    case Protocol.Preload.PrerenderFinalStatus.BatterySaverEnabled:\n      return i18nString(UIStrings.prerenderFinalStatusBatterySaverEnabled);\n    case Protocol.Preload.PrerenderFinalStatus.ActivatedDuringMainFrameNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusActivatedDuringMainFrameNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.PreloadingUnsupportedByWebContents:\n      // Chrome as embedder doesn't use this.\n      throw new Error('unreachable');\n    case Protocol.Preload.PrerenderFinalStatus.CrossSiteRedirectInMainFrameNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusCrossSiteRedirectInMainFrameNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.CrossSiteNavigationInMainFrameNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusCrossSiteNavigationInMainFrameNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.SameSiteCrossOriginRedirectNotOptInInMainFrameNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInMainFrameNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.SameSiteCrossOriginNavigationNotOptInInMainFrameNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInMainFrameNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.MemoryPressureOnTrigger:\n      return i18nString(UIStrings.prerenderFinalStatusMemoryPressureOnTrigger);\n    case Protocol.Preload.PrerenderFinalStatus.MemoryPressureAfterTriggered:\n      return i18nString(UIStrings.prerenderFinalStatusMemoryPressureAfterTriggered);\n    case Protocol.Preload.PrerenderFinalStatus.PrerenderingDisabledByDevTools:\n      return i18nString(UIStrings.prerenderFinalStatusPrerenderingDisabledByDevTools);\n    case Protocol.Preload.PrerenderFinalStatus.SpeculationRuleRemoved:\n      return i18nString(UIStrings.prerenderFinalStatusSpeculationRuleRemoved);\n    case Protocol.Preload.PrerenderFinalStatus.ActivatedWithAuxiliaryBrowsingContexts:\n      return i18nString(UIStrings.prerenderFinalStatusActivatedWithAuxiliaryBrowsingContexts);\n    case Protocol.Preload.PrerenderFinalStatus.MaxNumOfRunningEagerPrerendersExceeded:\n      return i18nString(UIStrings.prerenderFinalStatusMaxNumOfRunningEagerPrerendersExceeded);\n    case Protocol.Preload.PrerenderFinalStatus.MaxNumOfRunningEmbedderPrerendersExceeded:\n      return i18nString(UIStrings.prerenderFinalStatusMaxNumOfRunningEmbedderPrerendersExceeded);\n    case Protocol.Preload.PrerenderFinalStatus.MaxNumOfRunningNonEagerPrerendersExceeded:\n      return i18nString(UIStrings.prerenderFinalStatusMaxNumOfRunningNonEagerPrerendersExceeded);\n    case Protocol.Preload.PrerenderFinalStatus.PrerenderingUrlHasEffectiveUrl:\n      return i18nString(UIStrings.prerenderFinalStatusPrerenderingUrlHasEffectiveUrl);\n    case Protocol.Preload.PrerenderFinalStatus.RedirectedPrerenderingUrlHasEffectiveUrl:\n      return i18nString(UIStrings.prerenderFinalStatusRedirectedPrerenderingUrlHasEffectiveUrl);\n    case Protocol.Preload.PrerenderFinalStatus.ActivationUrlHasEffectiveUrl:\n      return i18nString(UIStrings.prerenderFinalStatusActivationUrlHasEffectiveUrl);\n    case Protocol.Preload.PrerenderFinalStatus.JavaScriptInterfaceAdded:\n      return i18nString(UIStrings.prerenderFinalStatusJavaScriptInterfaceAdded);\n    case Protocol.Preload.PrerenderFinalStatus.JavaScriptInterfaceRemoved:\n      return i18nString(UIStrings.prerenderFinalStatusJavaScriptInterfaceRemoved);\n    case Protocol.Preload.PrerenderFinalStatus.AllPrerenderingCanceled:\n      return i18nString(UIStrings.prerenderFinalStatusAllPrerenderingCanceled);\n    case Protocol.Preload.PrerenderFinalStatus.WindowClosed:\n      return i18nString(UIStrings.prerenderFinalStatusWindowClosed);\n    case Protocol.Preload.PrerenderFinalStatus.BrowsingDataRemoved:\n      return i18nString(UIStrings.prerenderFinalStatusBrowsingDataRemoved);\n    case Protocol.Preload.PrerenderFinalStatus.SlowNetwork:\n    case Protocol.Preload.PrerenderFinalStatus.OtherPrerenderedPageActivated:\n    case Protocol.Preload.PrerenderFinalStatus.V8OptimizerDisabled:\n    case Protocol.Preload.PrerenderFinalStatus.PrerenderFailedDuringPrefetch:\n      // TODO(crbug.com/350870118): Add message for this.\n      return '';\n    default:\n      // Note that we use switch and exhaustiveness check to prevent to\n      // forget updating these strings, but allow to handle unknown\n      // PrerenderFinalStatus at runtime.\n      // See https://docs.google.com/document/d/1PnrfowsZMt62PX1EvvTp2Nqs3ji1zrklrAEe1JYbkTk'\n      return i18n.i18n.lockedString(`Unknown failure reason: ${attempt.prerenderStatus as string}`);\n  }\n}\n\nexport function ruleSetLocationShort(\n    ruleSet: Protocol.Preload.RuleSet, pageURL: Platform.DevToolsPath.UrlString): string {\n  const url = ruleSet.url === undefined ? pageURL : ruleSet.url as Platform.DevToolsPath.UrlString;\n  return Bindings.ResourceUtils.displayNameForURL(url);\n}\n\nexport function ruleSetTagOrLocationShort(\n    ruleSet: Protocol.Preload.RuleSet, pageURL: Platform.DevToolsPath.UrlString): string {\n  if (!ruleSet.errorMessage) {\n    const parsedRuleset = JSON.parse(ruleSet['sourceText']);\n    if ('tag' in parsedRuleset) {\n      return '\"' + parsedRuleset['tag'] + '\"';\n    }\n  }\n  return ruleSetLocationShort(ruleSet, pageURL);\n}\n\nexport function capitalizedAction(action: Protocol.Preload.SpeculationAction): Common.UIString.LocalizedString {\n  // Use \"prefetch\"/\"prerender\" as is in SpeculationRules.\n  switch (action) {\n    case Protocol.Preload.SpeculationAction.Prefetch:\n      return i18n.i18n.lockedString('Prefetch');\n    case Protocol.Preload.SpeculationAction.Prerender:\n      return i18n.i18n.lockedString('Prerender');\n  }\n}\n\nexport function status(status: SDK.PreloadingModel.PreloadingStatus): string {\n  // See content/public/browser/preloading.h PreloadingAttemptOutcome.\n  switch (status) {\n    case SDK.PreloadingModel.PreloadingStatus.NOT_TRIGGERED:\n      return i18nString(UIStrings.statusNotTriggered);\n    case SDK.PreloadingModel.PreloadingStatus.PENDING:\n      return i18nString(UIStrings.statusPending);\n    case SDK.PreloadingModel.PreloadingStatus.RUNNING:\n      return i18nString(UIStrings.statusRunning);\n    case SDK.PreloadingModel.PreloadingStatus.READY:\n      return i18nString(UIStrings.statusReady);\n    case SDK.PreloadingModel.PreloadingStatus.SUCCESS:\n      return i18nString(UIStrings.statusSuccess);\n    case SDK.PreloadingModel.PreloadingStatus.FAILURE:\n      return i18nString(UIStrings.statusFailure);\n      // NotSupported is used to handle unreachable case. For example,\n      // there is no code path for\n      // PreloadingTriggeringOutcome::kTriggeredButPending in prefetch,\n      // which is mapped to NotSupported. So, we regard it as an\n      // internal error.\n    case SDK.PreloadingModel.PreloadingStatus.NOT_SUPPORTED:\n      return i18n.i18n.lockedString('Internal error');\n  }\n}\n\nexport function composedStatus(attempt: SDK.PreloadingModel.PreloadingAttempt): string {\n  const short = status(attempt.status);\n\n  if (attempt.status !== SDK.PreloadingModel.PreloadingStatus.FAILURE) {\n    return short;\n  }\n\n  switch (attempt.action) {\n    case Protocol.Preload.SpeculationAction.Prefetch: {\n      const detail = prefetchFailureReason(attempt) ?? i18n.i18n.lockedString('Internal error');\n      return short + ' - ' + detail;\n    }\n    case Protocol.Preload.SpeculationAction.Prerender: {\n      const detail = prerenderFailureReason(attempt);\n      assertNotNullOrUndefined(detail);\n      return short + ' - ' + detail;\n    }\n  }\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../../ui/components/report_view/report_view.js';\nimport '../../../../ui/components/request_link_icon/request_link_icon.js';\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Protocol from '../../../../generated/protocol.js';\nimport * as Logs from '../../../../models/logs/logs.js';\nimport * as Buttons from '../../../../ui/components/buttons/buttons.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as RenderCoordinator from '../../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\nimport * as PreloadingHelper from '../helper/helper.js';\n\nimport preloadingDetailsReportViewStyles from './preloadingDetailsReportView.css.js';\nimport * as PreloadingString from './PreloadingString.js';\nimport {prefetchFailureReason, prerenderFailureReason, ruleSetLocationShort} from './PreloadingString.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text in PreloadingDetailsReportView of the Application panel if no element is selected. An element here is an item in a\n   * table of target URLs and additional prefetching states. https://developer.chrome.com/docs/devtools/application/debugging-speculation-rules\n   */\n  noElementSelected: 'No element selected',\n  /**\n   * @description Text in PreloadingDetailsReportView of the Application panel to prompt user to select an element in a table. An element here is an item in a\n   * table of target URLs and additional prefetching states. https://developer.chrome.com/docs/devtools/application/debugging-speculation-rules\n   */\n  selectAnElementForMoreDetails: 'Select an element for more details',\n  /**\n   * @description Text in details\n   */\n  detailsDetailedInformation: 'Detailed information',\n  /**\n   * @description Text in details\n   */\n  detailsAction: 'Action',\n  /**\n   * @description Text in details\n   */\n  detailsStatus: 'Status',\n  /**\n   * @description Text in details\n   */\n  detailsTargetHint: 'Target hint',\n  /**\n   * @description Text in details\n   */\n  detailsFailureReason: 'Failure reason',\n  /**\n   * @description Header of rule set\n   */\n  detailsRuleSet: 'Rule set',\n  /**\n   * @description Description: status\n   */\n  automaticallyFellBackToPrefetch: '(automatically fell back to prefetch)',\n  /**\n   * @description Description: status\n   */\n  detailedStatusNotTriggered: 'Speculative load attempt is not yet triggered.',\n  /**\n   * @description Description: status\n   */\n  detailedStatusPending: 'Speculative load attempt is eligible but pending.',\n  /**\n   * @description Description: status\n   */\n  detailedStatusRunning: 'Speculative load is running.',\n  /**\n   * @description Description: status\n   */\n  detailedStatusReady: 'Speculative load finished and the result is ready for the next navigation.',\n  /**\n   * @description Description: status\n   */\n  detailedStatusSuccess: 'Speculative load finished and used for a navigation.',\n  /**\n   * @description Description: status\n   */\n  detailedStatusFailure: 'Speculative load failed.',\n  /**\n   * @description Description: status\n   */\n  detailedStatusFallbackToPrefetch: 'Speculative load failed, but fallback to prefetch succeeded.',\n  /**\n   * @description button: Contents of button to inspect prerendered page\n   */\n  buttonInspect: 'Inspect',\n  /**\n   * @description button: Title of button to inspect prerendered page\n   */\n  buttonClickToInspect: 'Click to inspect prerendered page',\n  /**\n   * @description button: Title of button to reveal rule set\n   */\n  buttonClickToRevealRuleSet: 'Click to reveal rule set',\n} as const;\nconst str_ =\n    i18n.i18n.registerUIStrings('panels/application/preloading/components/PreloadingDetailsReportView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nclass PreloadingUIUtils {\n  static detailedStatus({status}: SDK.PreloadingModel.PreloadingAttempt): string {\n    // See content/public/browser/preloading.h PreloadingAttemptOutcome.\n    switch (status) {\n      case SDK.PreloadingModel.PreloadingStatus.NOT_TRIGGERED:\n        return i18nString(UIStrings.detailedStatusNotTriggered);\n      case SDK.PreloadingModel.PreloadingStatus.PENDING:\n        return i18nString(UIStrings.detailedStatusPending);\n      case SDK.PreloadingModel.PreloadingStatus.RUNNING:\n        return i18nString(UIStrings.detailedStatusRunning);\n      case SDK.PreloadingModel.PreloadingStatus.READY:\n        return i18nString(UIStrings.detailedStatusReady);\n      case SDK.PreloadingModel.PreloadingStatus.SUCCESS:\n        return i18nString(UIStrings.detailedStatusSuccess);\n      case SDK.PreloadingModel.PreloadingStatus.FAILURE:\n        return i18nString(UIStrings.detailedStatusFailure);\n      // NotSupported is used to handle unreachable case. For example,\n      // there is no code path for\n      // PreloadingTriggeringOutcome::kTriggeredButPending in prefetch,\n      // which is mapped to NotSupported. So, we regard it as an\n      // internal error.\n      case SDK.PreloadingModel.PreloadingStatus.NOT_SUPPORTED:\n        return i18n.i18n.lockedString('Internal error');\n    }\n  }\n\n  static detailedTargetHint(key: Protocol.Preload.PreloadingAttemptKey): string {\n    assertNotNullOrUndefined(key.targetHint);\n    switch (key.targetHint) {\n      case Protocol.Preload.SpeculationTargetHint.Blank:\n        return '_blank';\n      case Protocol.Preload.SpeculationTargetHint.Self:\n        return '_self';\n    }\n  }\n}\n\nexport type PreloadingDetailsReportViewData = PreloadingDetailsReportViewDataInternal|null;\ninterface PreloadingDetailsReportViewDataInternal {\n  pipeline: SDK.PreloadingModel.PreloadPipeline;\n  ruleSets: Protocol.Preload.RuleSet[];\n  pageURL: Platform.DevToolsPath.UrlString;\n  requestResolver?: Logs.RequestResolver.RequestResolver;\n}\n\nexport class PreloadingDetailsReportView extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: PreloadingDetailsReportViewData = null;\n\n  set data(data: PreloadingDetailsReportViewData) {\n    this.#data = data;\n    void this.#render();\n  }\n\n  async #render(): Promise<void> {\n    await RenderCoordinator.write('PreloadingDetailsReportView render', () => {\n      if (this.#data === null) {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        Lit.render(html`\n          <style>${preloadingDetailsReportViewStyles}</style>\n          <style>${UI.inspectorCommonStyles}</style>\n          <div class=\"empty-state\">\n            <span class=\"empty-state-header\">${i18nString(UIStrings.noElementSelected)}</span>\n            <span class=\"empty-state-description\">${i18nString(UIStrings.selectAnElementForMoreDetails)}</span>\n          </div>\n        `, this.#shadow, {host: this});\n        // clang-format on\n        return;\n      }\n\n      const pipeline = this.#data.pipeline;\n      const pageURL = this.#data.pageURL;\n      const isFallbackToPrefetch = pipeline.getPrerender()?.status === SDK.PreloadingModel.PreloadingStatus.FAILURE &&\n          (pipeline.getPrefetch()?.status === SDK.PreloadingModel.PreloadingStatus.READY ||\n           pipeline.getPrefetch()?.status === SDK.PreloadingModel.PreloadingStatus.SUCCESS);\n\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      Lit.render(html`\n        <style>${preloadingDetailsReportViewStyles}</style>\n        <style>${UI.inspectorCommonStyles}</style>\n        <devtools-report\n          .data=${{reportTitle: 'Speculative Loading Attempt'}}\n          jslog=${VisualLogging.section('preloading-details')}>\n          <devtools-report-section-header>${i18nString(UIStrings.detailsDetailedInformation)}</devtools-report-section-header>\n\n          ${this.#url()}\n          ${this.#action(isFallbackToPrefetch)}\n          ${this.#status(isFallbackToPrefetch)}\n          ${this.#targetHint()}\n          ${this.#maybePrefetchFailureReason()}\n          ${this.#maybePrerenderFailureReason()}\n\n          ${this.#data.ruleSets.map(ruleSet => this.#renderRuleSet(ruleSet, pageURL))}\n        </devtools-report>\n      `, this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n\n  #url(): Lit.LitTemplate {\n    assertNotNullOrUndefined(this.#data);\n    const attempt = this.#data.pipeline.getOriginallyTriggered();\n\n    const prefetchStatus = this.#data.pipeline.getPrefetch()?.status;\n\n    let value;\n    if (attempt.action === Protocol.Preload.SpeculationAction.Prefetch && attempt.requestId !== undefined &&\n        prefetchStatus !== SDK.PreloadingModel.PreloadingStatus.NOT_TRIGGERED) {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      const {requestId, key: {url}} = attempt;\n      const affectedRequest: {requestId?: Protocol.Network.RequestId, url?: string} = {requestId, url};\n      value = html`\n          <devtools-request-link-icon\n            .data=${\n              {\n                affectedRequest,\n                requestResolver: this.#data.requestResolver || new Logs.RequestResolver.RequestResolver(),\n                displayURL: true,\n                urlToDisplay: url,\n              }\n            }\n          >\n          </devtools-request-link-icon>\n      `;\n    } else {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      value = html`\n          <div class=\"text-ellipsis\" title=${attempt.key.url}>${attempt.key.url}</div>\n      `;\n      // clang-format on\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n        <devtools-report-key>${i18n.i18n.lockedString('URL')}</devtools-report-key>\n        <devtools-report-value>\n          ${value}\n        </devtools-report-value>\n    `;\n    // clang-format on\n  }\n\n  #action(isFallbackToPrefetch: boolean): Lit.LitTemplate {\n    assertNotNullOrUndefined(this.#data);\n    const attempt = this.#data.pipeline.getOriginallyTriggered();\n\n    const action = PreloadingString.capitalizedAction(attempt.action);\n\n    let maybeFallback: Lit.LitTemplate = Lit.nothing;\n    if (isFallbackToPrefetch) {\n      maybeFallback = html`${i18nString(UIStrings.automaticallyFellBackToPrefetch)}`;\n    }\n\n    let maybeInspectButton: Lit.LitTemplate = Lit.nothing;\n    (() => {\n      if (attempt.action !== Protocol.Preload.SpeculationAction.Prerender) {\n        return;\n      }\n\n      const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n      if (target === null) {\n        return;\n      }\n\n      const prerenderTarget = SDK.TargetManager.TargetManager.instance().targets().find(\n          child => child.targetInfo()?.subtype === 'prerender' && child.inspectedURL() === attempt.key.url);\n\n      const disabled = (prerenderTarget === undefined);\n      const inspect = (): void => {\n        if (prerenderTarget === undefined) {\n          return;\n        }\n        UI.Context.Context.instance().setFlavor(SDK.Target.Target, prerenderTarget);\n      };\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      maybeInspectButton = html`\n          <devtools-button\n            @click=${inspect}\n            .title=${i18nString(UIStrings.buttonClickToInspect)}\n            .size=${Buttons.Button.Size.SMALL}\n            .variant=${Buttons.Button.Variant.OUTLINED}\n            .disabled=${disabled}\n            jslog=${VisualLogging.action('inspect-prerendered-page').track({click: true})}\n          >\n            ${i18nString(UIStrings.buttonInspect)}\n          </devtools-button>\n      `;\n      // clang-format on\n    })();\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n        <devtools-report-key>${i18nString(UIStrings.detailsAction)}</devtools-report-key>\n        <devtools-report-value>\n          <div class=\"text-ellipsis\" title=\"\">\n            ${action} ${maybeFallback} ${maybeInspectButton}\n          </div>\n        </devtools-report-value>\n    `;\n    // clang-format on\n  }\n\n  #status(isFallbackToPrefetch: boolean): Lit.LitTemplate {\n    assertNotNullOrUndefined(this.#data);\n    const attempt = this.#data.pipeline.getOriginallyTriggered();\n\n    const detailedStatus = isFallbackToPrefetch ? i18nString(UIStrings.detailedStatusFallbackToPrefetch) :\n                                                  PreloadingUIUtils.detailedStatus(attempt);\n\n    return html`\n        <devtools-report-key>${i18nString(UIStrings.detailsStatus)}</devtools-report-key>\n        <devtools-report-value>\n          ${detailedStatus}\n        </devtools-report-value>\n    `;\n  }\n\n  #maybePrefetchFailureReason(): Lit.LitTemplate {\n    assertNotNullOrUndefined(this.#data);\n    const attempt = this.#data.pipeline.getOriginallyTriggered();\n\n    if (attempt.action !== Protocol.Preload.SpeculationAction.Prefetch) {\n      return Lit.nothing;\n    }\n\n    const failureDescription = prefetchFailureReason(attempt);\n    if (failureDescription === null) {\n      return Lit.nothing;\n    }\n\n    return html`\n        <devtools-report-key>${i18nString(UIStrings.detailsFailureReason)}</devtools-report-key>\n        <devtools-report-value>\n          ${failureDescription}\n        </devtools-report-value>\n    `;\n  }\n\n  #targetHint(): Lit.LitTemplate {\n    assertNotNullOrUndefined(this.#data);\n    const attempt = this.#data.pipeline.getOriginallyTriggered();\n    const hasTargetHint =\n        attempt.action === Protocol.Preload.SpeculationAction.Prerender && attempt.key.targetHint !== undefined;\n    if (!hasTargetHint) {\n      return Lit.nothing;\n    }\n\n    return html`\n        <devtools-report-key>${i18nString(UIStrings.detailsTargetHint)}</devtools-report-key>\n        <devtools-report-value>\n          ${PreloadingUIUtils.detailedTargetHint(attempt.key)}\n        </devtools-report-value>\n    `;\n  }\n\n  #maybePrerenderFailureReason(): Lit.LitTemplate {\n    assertNotNullOrUndefined(this.#data);\n    const attempt = this.#data.pipeline.getOriginallyTriggered();\n\n    if (attempt.action !== Protocol.Preload.SpeculationAction.Prerender) {\n      return Lit.nothing;\n    }\n\n    const failureReason = prerenderFailureReason(attempt);\n    if (failureReason === null) {\n      return Lit.nothing;\n    }\n\n    return html`\n        <devtools-report-key>${i18nString(UIStrings.detailsFailureReason)}</devtools-report-key>\n        <devtools-report-value>\n          ${failureReason}\n        </devtools-report-value>\n    `;\n  }\n\n  #renderRuleSet(ruleSet: Protocol.Preload.RuleSet, pageURL: Platform.DevToolsPath.UrlString): Lit.LitTemplate {\n    const revealRuleSetView = (): void => {\n      void Common.Revealer.reveal(new PreloadingHelper.PreloadingForward.RuleSetView(ruleSet.id));\n    };\n    const location = ruleSetLocationShort(ruleSet, pageURL);\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <devtools-report-key>${i18nString(UIStrings.detailsRuleSet)}</devtools-report-key>\n      <devtools-report-value>\n        <div class=\"text-ellipsis\" title=\"\">\n          <button class=\"link\" role=\"link\"\n            @click=${revealRuleSetView}\n            title=${i18nString(UIStrings.buttonClickToRevealRuleSet)}\n            style=${Lit.Directives.styleMap({\n              color: 'var(--sys-color-primary)',\n              'text-decoration': 'underline',\n            })}\n            jslog=${VisualLogging.action('reveal-rule-set').track({click: true})}\n          >\n            ${location}\n          </button>\n        </div>\n      </devtools-report-value>\n    `;\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-resources-preloading-details-report-view', PreloadingDetailsReportView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-preloading-details-report-view': PreloadingDetailsReportView;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2022 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n:host {\n  display: flex;\n  height: 100%;\n}\n\ndevtools-report {\n  flex-grow: 1;\n}\n\nbutton.link {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  padding: 0;\n  border: none;\n  background: none;\n  font-family: inherit;\n  font-size: inherit;\n  height: 16px;\n}\n\nbutton.link devtools-icon {\n  vertical-align: sub;\n}\n\n.link {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n/*# sourceURL=${import.meta.resolve('./preloadingDetailsReportView.css')} */`;", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../../ui/components/report_view/report_view.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as Buttons from '../../../../ui/components/buttons/buttons.js';\nimport * as ChromeLink from '../../../../ui/components/chrome_link/chrome_link.js';\nimport * as Dialogs from '../../../../ui/components/dialogs/dialogs.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as RenderCoordinator from '../../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\n\nimport preloadingDisabledInfobarStyles from './preloadingDisabledInfobar.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Infobar text for disabled case\n   */\n  infobarPreloadingIsDisabled: 'Speculative loading is disabled',\n  /**\n   * @description Infobar text for force-enabled case\n   */\n  infobarPreloadingIsForceEnabled: 'Speculative loading is force-enabled',\n  /**\n   * @description Title for dialog\n   */\n  titleReasonsPreventingPreloading: 'Reasons preventing speculative loading',\n  /**\n   * @description Header in dialog\n   */\n  headerDisabledByPreference: 'User settings or extensions',\n  /**\n   * @description Description in dialog\n   * @example {Preload pages settings (linked to chrome://settings/performance)} PH1\n   * @example {Extensions settings (linked to chrome://extensions)} PH2\n   */\n  descriptionDisabledByPreference:\n      'Speculative loading is disabled because of user settings or an extension. Go to {PH1} to update your preference. Go to {PH2} to disable any extension that blocks speculative loading.',\n  /**\n   * @description Text of link\n   */\n  preloadingPagesSettings: 'Preload pages settings',\n  /**\n   * @description Text of link\n   */\n  extensionsSettings: 'Extensions settings',\n  /**\n   * @description Header in dialog\n   */\n  headerDisabledByDataSaver: 'Data Saver',\n  /**\n   * @description Description in dialog\n   */\n  descriptionDisabledByDataSaver: 'Speculative loading is disabled because of the operating system\\'s Data Saver mode.',\n  /**\n   * @description Header in dialog\n   */\n  headerDisabledByBatterySaver: 'Battery Saver',\n  /**\n   * @description Description in dialog\n   */\n  descriptionDisabledByBatterySaver:\n      'Speculative loading is disabled because of the operating system\\'s Battery Saver mode.',\n  /**\n   * @description Header in dialog\n   */\n  headerDisabledByHoldbackPrefetchSpeculationRules: 'Prefetch was disabled, but is force-enabled now',\n  /**\n   * @description Description in infobar\n   */\n  descriptionDisabledByHoldbackPrefetchSpeculationRules:\n      'Prefetch is forced-enabled because DevTools is open. When DevTools is closed, prefetch will be disabled because this browser session is part of a holdback group used for performance comparisons.',\n  /**\n   * @description Header in dialog\n   */\n  headerDisabledByHoldbackPrerenderSpeculationRules: 'Prerendering was disabled, but is force-enabled now',\n  /**\n   * @description Description in infobar\n   */\n  descriptionDisabledByHoldbackPrerenderSpeculationRules:\n      'Prerendering is forced-enabled because DevTools is open. When DevTools is closed, prerendering will be disabled because this browser session is part of a holdback group used for performance comparisons.',\n  /**\n   * @description Footer link for more details\n   */\n  footerLearnMore: 'Learn more',\n} as const;\nconst str_ =\n    i18n.i18n.registerUIStrings('panels/application/preloading/components/PreloadingDisabledInfobar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class PreloadingDisabledInfobar extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: Protocol.Preload.PreloadEnabledStateUpdatedEvent = {\n    disabledByPreference: false,\n    disabledByDataSaver: false,\n    disabledByBatterySaver: false,\n    disabledByHoldbackPrefetchSpeculationRules: false,\n    disabledByHoldbackPrerenderSpeculationRules: false,\n  };\n\n  connectedCallback(): void {\n    void this.#render();\n  }\n\n  set data(data: Protocol.Preload.PreloadEnabledStateUpdatedEvent) {\n    this.#data = data;\n    void this.#render();\n  }\n\n  async #render(): Promise<void> {\n    await RenderCoordinator.write('PreloadingDisabledInfobar render', () => {\n      Lit.render(this.#renderTemplate(), this.#shadow, {host: this});\n    });\n  }\n\n  #renderTemplate(): Lit.LitTemplate {\n    const forceEnabled =\n        this.#data.disabledByHoldbackPrefetchSpeculationRules || this.#data.disabledByHoldbackPrerenderSpeculationRules;\n    const disabled =\n        this.#data.disabledByPreference || this.#data.disabledByDataSaver || this.#data.disabledByBatterySaver;\n\n    let header;\n    if (disabled) {\n      header = i18nString(UIStrings.infobarPreloadingIsDisabled);\n    } else if (forceEnabled) {\n      header = i18nString(UIStrings.infobarPreloadingIsForceEnabled);\n    } else {\n      return Lit.nothing;\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <style>${preloadingDisabledInfobarStyles}</style>\n      <div id='container'>\n        <span id='header'>\n          ${header}\n        </span>\n\n        <devtools-button-dialog\n          .data=${{\n            iconName: 'info',\n            variant: Buttons.Button.Variant.ICON,\n            closeButton: true,\n            position: Dialogs.Dialog.DialogVerticalPosition.AUTO,\n            horizontalAlignment: Dialogs.Dialog.DialogHorizontalAlignment.AUTO,\n            closeOnESC: true,\n            closeOnScroll: false,\n            dialogTitle: i18nString(UIStrings.titleReasonsPreventingPreloading),\n          } as Dialogs.ButtonDialog.ButtonDialogData}\n          jslog=${VisualLogging.dialog('preloading-disabled').track({resize: true, keydown: 'Escape'})}\n        >\n          ${this.#dialogContents()}\n        </devtools-button-dialog>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #dialogContents(): Lit.LitTemplate {\n    const LINK = 'https://developer.chrome.com/blog/prerender-pages/';\n\n    const learnMoreLink =\n        UI.XLink.XLink.create(LINK, i18nString(UIStrings.footerLearnMore), undefined, undefined, 'learn-more');\n    const iconLink = UI.Fragment.html`\n      <x-link class=\"icon-link devtools-link\" tabindex=\"0\" href=\"${LINK}\"></x-link>\n    ` as UI.XLink.XLink;\n\n    return html`\n      <div id='contents'>\n        <devtools-report>\n          ${this.#maybeDisableByPreference()}\n          ${this.#maybeDisableByDataSaver()}\n          ${this.#maybeDisableByBatterySaver()}\n          ${this.#maybeDisableByHoldbackPrefetchSpeculationRules()}\n          ${this.#maybeDisableByHoldbackPrerenderSpeculationRules()}\n        </devtools-report>\n        <div id='footer'>\n          ${learnMoreLink}\n          ${iconLink}\n        </div>\n      </div>\n    `;\n  }\n\n  #maybeKeyValue(shouldShow: boolean, header: string, description: string|Element): Lit.LitTemplate {\n    if (!shouldShow) {\n      return Lit.nothing;\n    }\n\n    return html`\n      <div class='key'>\n        ${header}\n      </div>\n      <div class='value'>\n        ${description}\n      </div>\n    `;\n  }\n\n  #maybeDisableByPreference(): Lit.LitTemplate {\n    const preloadingSettingLink = new ChromeLink.ChromeLink.ChromeLink();\n    preloadingSettingLink.href = 'chrome://settings/performance' as Platform.DevToolsPath.UrlString;\n    preloadingSettingLink.textContent = i18nString(UIStrings.preloadingPagesSettings);\n    const extensionsSettingLink = new ChromeLink.ChromeLink.ChromeLink();\n    extensionsSettingLink.href = 'chrome://extensions' as Platform.DevToolsPath.UrlString;\n    extensionsSettingLink.textContent = i18nString(UIStrings.extensionsSettings);\n    const description = i18n.i18n.getFormatLocalizedString(\n        str_, UIStrings.descriptionDisabledByPreference, {PH1: preloadingSettingLink, PH2: extensionsSettingLink});\n    return this.#maybeKeyValue(\n        this.#data.disabledByPreference, i18nString(UIStrings.headerDisabledByPreference), description);\n  }\n\n  #maybeDisableByDataSaver(): Lit.LitTemplate {\n    return this.#maybeKeyValue(\n        this.#data.disabledByDataSaver, i18nString(UIStrings.headerDisabledByDataSaver),\n        i18nString(UIStrings.descriptionDisabledByDataSaver));\n  }\n\n  #maybeDisableByBatterySaver(): Lit.LitTemplate {\n    return this.#maybeKeyValue(\n        this.#data.disabledByBatterySaver, i18nString(UIStrings.headerDisabledByBatterySaver),\n        i18nString(UIStrings.descriptionDisabledByBatterySaver));\n  }\n\n  #maybeDisableByHoldbackPrefetchSpeculationRules(): Lit.LitTemplate {\n    return this.#maybeKeyValue(\n        this.#data.disabledByHoldbackPrefetchSpeculationRules,\n        i18nString(UIStrings.headerDisabledByHoldbackPrefetchSpeculationRules),\n        i18nString(UIStrings.descriptionDisabledByHoldbackPrefetchSpeculationRules));\n  }\n\n  #maybeDisableByHoldbackPrerenderSpeculationRules(): Lit.LitTemplate {\n    return this.#maybeKeyValue(\n        this.#data.disabledByHoldbackPrerenderSpeculationRules,\n        i18nString(UIStrings.headerDisabledByHoldbackPrerenderSpeculationRules),\n        i18nString(UIStrings.descriptionDisabledByHoldbackPrerenderSpeculationRules));\n  }\n}\n\ncustomElements.define('devtools-resources-preloading-disabled-infobar', PreloadingDisabledInfobar);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-preloading-disabled-infobar': PreloadingDisabledInfobar;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n#container {\n  padding: 6px 12px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  align-items: center;\n  display: flex;\n}\n\n#contents .key {\n  grid-column-start: span 2;\n  font-weight: bold;\n}\n\n#contents .value {\n  grid-column-start: span 2;\n  margin-top: var(--sys-size-6);\n}\n\n#footer {\n  margin-top: var(--sys-size-6);\n  margin-bottom: var(--sys-size-2);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  grid-column-start: span 2;\n}\n\nx-link {\n  color: var(--sys-color-primary);\n  text-decoration-line: underline;\n}\n\n/*# sourceURL=${import.meta.resolve('./preloadingDisabledInfobar.css')} */`;", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../../ui/legacy/components/data_grid/data_grid.js';\nimport '../../../../ui/components/icon_button/icon_button.js';\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport type * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\n\nimport preloadingGridStyles from './preloadingGrid.css.js';\nimport {capitalizedAction, composedStatus, ruleSetTagOrLocationShort} from './PreloadingString.js';\n\nconst {PreloadingStatus} = SDK.PreloadingModel;\n\nconst UIStrings = {\n  /**\n   * @description Column header: Action of preloading (prefetch/prerender)\n   */\n  action: 'Action',\n  /**\n   * @description Column header: A rule set of preloading\n   */\n  ruleSet: 'Rule set',\n  /**\n   * @description Column header: Status of preloading attempt\n   */\n  status: 'Status',\n  /**\n   * @description Status: Prerender failed, but prefetch is available\n   */\n  prefetchFallbackReady: 'Prefetch fallback ready',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/components/PreloadingGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html, Directives: {styleMap}} = Lit;\n\nexport interface PreloadingGridData {\n  rows: PreloadingGridRow[];\n  pageURL: Platform.DevToolsPath.UrlString;\n}\n\nexport interface PreloadingGridRow {\n  id: string;\n  pipeline: SDK.PreloadingModel.PreloadPipeline;\n  ruleSets: Protocol.Preload.RuleSet[];\n}\n\n// Grid component to show prerendering attempts.\nexport class PreloadingGrid extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: PreloadingGridData|null = null;\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  update(data: PreloadingGridData): void {\n    this.#data = data;\n    this.#render();\n  }\n\n  #render(): void {\n    if (!this.#data) {\n      return;\n    }\n    const {rows, pageURL} = this.#data;\n    const securityOrigin = pageURL === '' ? null : (new Common.ParsedURL.ParsedURL(pageURL)).securityOrigin();\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <style>${preloadingGridStyles}</style>\n      <div class=\"preloading-container\">\n        <devtools-data-grid striped @select=${this.#onPreloadingGridCellFocused}>\n          <table>\n            <tr>\n              <th id=\"url\" weight=\"40\" sortable>${i18n.i18n.lockedString('URL')}</th>\n              <th id=\"action\" weight=\"15\" sortable>${i18nString(UIStrings.action)}</th>\n              <th id=\"rule-set\" weight=\"20\" sortable>${i18nString(UIStrings.ruleSet)}</th>\n              <th id=\"status\" weight=\"40\" sortable>${i18nString(UIStrings.status)}</th>\n            </tr>\n            ${rows.map(row => {\n              const attempt = row.pipeline.getOriginallyTriggered();\n              const prefetchStatus = row.pipeline.getPrefetch()?.status;\n              const prerenderStatus = row.pipeline.getPrerender()?.status;\n              const hasWarning =\n                  (prerenderStatus === PreloadingStatus.FAILURE &&\n                  (prefetchStatus === PreloadingStatus.READY || prefetchStatus === PreloadingStatus.SUCCESS));\n              const hasError = row.pipeline.getOriginallyTriggered().status === PreloadingStatus.FAILURE;\n              return html`<tr data-id=${row.id}>\n                <td title=${attempt.key.url}>${this.#urlShort(row, securityOrigin)}</td>\n                <td>${capitalizedAction(attempt.action)}</td>\n                <td>${row.ruleSets.length === 0 ? '' : ruleSetTagOrLocationShort(row.ruleSets[0], pageURL)}</td>\n                <td>\n                  <div style=${styleMap({color: hasWarning ? 'var(--sys-color-orange-bright)'\n                                                : hasError   ? 'var(--sys-color-error)'\n                                                             : 'var(--sys-color-on-surface)'})}>\n                    ${(hasError || hasWarning) ?  html`\n                      <devtools-icon\n                        name=${hasWarning ? 'warning-filled' : 'cross-circle-filled'}\n                        class='medium'\n                        style=${styleMap({\n                          'vertical-align': 'sub',\n                        })}\n                      ></devtools-icon>` : ''}\n                    ${hasWarning ? i18nString(UIStrings.prefetchFallbackReady) : composedStatus(attempt)}\n                  </div>\n                </td>\n              </tr>`;\n            })}\n          </table>\n        </devtools-data-grid>\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #onPreloadingGridCellFocused(event: CustomEvent<HTMLElement>): void {\n    this.dispatchEvent(new CustomEvent('select', {detail: event.detail.dataset.id}));\n  }\n\n  // Shorten URL if a preloading attempt is same-origin.\n  #urlShort(row: PreloadingGridRow, securityOrigin: string|null): string {\n    const url = row.pipeline.getOriginallyTriggered().key.url;\n    return securityOrigin && url.startsWith(securityOrigin) ? url.slice(securityOrigin.length) : url;\n  }\n}\n\ncustomElements.define('devtools-resources-preloading-grid', PreloadingGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-preloading-grid': PreloadingGrid;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2022 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: auto;\n  height: 100%;\n}\n\n.preloading-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.preloading-header {\n  font-size: 15px;\n  background-color: var(--sys-color-cdt-base-container);\n  padding: 1px 4px;\n}\n\n.preloading-placeholder {\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 13px;\n  color: var(--sys-color-token-subtle);\n}\n\ndevtools-data-grid {\n  flex: auto;\n}\n\n.inline-icon {\n  vertical-align: text-bottom;\n}\n\n/*# sourceURL=${import.meta.resolve('./preloadingGrid.css')} */`;", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../../ui/legacy/components/data_grid/data_grid.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as SDK from '../../../../core/sdk/sdk.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport type * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\n\nimport preloadingGridStyles from './preloadingGrid.css.js';\n\nconst UIStrings = {\n  /**\n   * @description The name of the HTTP request header.\n   */\n  headerName: 'Header name',\n  /**\n   * @description The value of the HTTP request header in initial navigation.\n   */\n  initialNavigationValue: 'Value in initial navigation',\n  /**\n   * @description The value of the HTTP request header in activation navigation.\n   */\n  activationNavigationValue: 'Value in activation navigation',\n  /**\n   * @description The string to indicate the value of the header is missing.\n   */\n  missing: '(missing)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings(\n    'panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html} = Lit;\n\nexport class PreloadingMismatchedHeadersGrid extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: SDK.PreloadingModel.PrerenderAttempt|null = null;\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  set data(data: SDK.PreloadingModel.PrerenderAttempt) {\n    if (data.mismatchedHeaders === null) {\n      return;\n    }\n    this.#data = data;\n    this.#render();\n  }\n\n  #render(): void {\n    if (!this.#data?.mismatchedHeaders) {\n      return;\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n      render(html`\n        <style>${preloadingGridStyles}</style>\n        <div class=\"preloading-container\">\n          <devtools-data-grid striped inline>\n            <table>\n              <tr>\n                <th id=\"header-name\" weight=\"30\" sortable>\n                  ${i18nString(UIStrings.headerName)}\n                </th>\n                <th id=\"initial-value\" weight=\"30\" sortable>\n                  ${i18nString(UIStrings.initialNavigationValue)}\n                </th>\n                <th id=\"activation-value\" weight=\"30\" sortable>\n                  ${i18nString(UIStrings.activationNavigationValue)}\n                </th>\n              </tr>\n              ${this.#data.mismatchedHeaders.map(mismatchedHeaders => html`\n                <tr>\n                  <td>${mismatchedHeaders.headerName}</td>\n                  <td>${mismatchedHeaders.initialValue ?? i18nString(UIStrings.missing)}</td>\n                  <td>${mismatchedHeaders.activationValue ?? i18nString(UIStrings.missing)}</td>\n                </tr>\n              `)}\n            </table>\n          </devtools-data-grid>\n        </div>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-resources-preloading-mismatched-headers-grid', PreloadingMismatchedHeadersGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-preloading-mismatched-headers-grid': PreloadingMismatchedHeadersGrid;\n  }\n}\n", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport {assertNotNullOrUndefined} from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as Formatter from '../../../../models/formatter/formatter.js';\nimport * as CodeMirror from '../../../../third_party/codemirror.next/codemirror.next.js';\nimport * as CodeHighlighter from '../../../../ui/components/code_highlighter/code_highlighter.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as RenderCoordinator from '../../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as TextEditor from '../../../../ui/components/text_editor/text_editor.js';\nimport * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\n\nimport ruleSetDetailsViewStyles from './RuleSetDetailsView.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text in RuleSetDetailsView of the Application panel if no element is selected. An element here is an item in a\n   *             table of speculation rules. Speculation rules define the rules when and which urls should be prefetched.\n   *             https://developer.chrome.com/docs/devtools/application/debugging-speculation-rules\n   */\n  noElementSelected: 'No element selected',\n  /**\n   * @description Text in RuleSetDetailsView of the Application panel if no element is selected. An element here is an item in a\n   *             table of speculation rules. Speculation rules define the rules when and which urls should be prefetched.\n   *             https://developer.chrome.com/docs/devtools/application/debugging-speculation-rules\n   */\n  selectAnElementForMoreDetails: 'Select an element for more details',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/components/RuleSetDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ntype RuleSet = Protocol.Preload.RuleSet;\n\nconst codeMirrorJsonType = await CodeHighlighter.CodeHighlighter.languageFromMIME('application/json');\n\nexport type RuleSetDetailsViewData = RuleSet|null;\n\nexport class RuleSetDetailsView extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: RuleSetDetailsViewData = null;\n  #shouldPrettyPrint = true;\n  #editorState?: CodeMirror.EditorState;\n\n  set data(data: RuleSetDetailsViewData) {\n    this.#data = data;\n    void this.#render();\n  }\n\n  set shouldPrettyPrint(shouldPrettyPrint: boolean) {\n    this.#shouldPrettyPrint = shouldPrettyPrint;\n  }\n\n  async #render(): Promise<void> {\n    await RenderCoordinator.write('RuleSetDetailsView render', async () => {\n      if (this.#data === null) {\n        Lit.render(\n            html`\n          <style>${ruleSetDetailsViewStyles}</style>\n          <style>${UI.inspectorCommonStyles}</style>\n          <div class=\"placeholder\">\n            <div class=\"empty-state\">\n              <span class=\"empty-state-header\">${i18nString(UIStrings.noElementSelected)}</span>\n              <span class=\"empty-state-description\">${i18nString(UIStrings.selectAnElementForMoreDetails)}</span>\n            </div>\n          </div>\n      `,\n            this.#shadow, {host: this});\n        // clang-format on\n        return;\n      }\n\n      const sourceText = await this.#getSourceText();\n\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      Lit.render(html`\n        <style>${ruleSetDetailsViewStyles}</style>\n        <style>${UI.inspectorCommonStyles}</style>\n        <div class=\"content\">\n          <div class=\"ruleset-header\" id=\"ruleset-url\">${this.#data?.url || SDK.TargetManager.TargetManager.instance().inspectedURL()}</div>\n          ${this.#maybeError()}\n        </div>\n        <div class=\"text-ellipsis\">\n          ${this.#renderSource(sourceText)}\n        </div>\n      `, this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n\n  // TODO(https://crbug.com/1425354): Support i18n.\n  #maybeError(): Lit.LitTemplate {\n    assertNotNullOrUndefined(this.#data);\n\n    if (this.#data.errorMessage === undefined) {\n      return Lit.nothing;\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <div class=\"ruleset-header\">\n        <devtools-icon name=\"cross-circle\" class=\"medium\">\n        </devtools-icon>\n        <span id=\"error-message-text\">${this.#data.errorMessage}</span>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #renderSource(sourceText: string): Lit.LitTemplate {\n    this.#editorState = CodeMirror.EditorState.create({\n      doc: sourceText,\n      extensions: [\n        TextEditor.Config.baseConfiguration(sourceText || ''),\n        CodeMirror.lineNumbers(),\n        CodeMirror.EditorState.readOnly.of(true),\n        codeMirrorJsonType as CodeMirror.Extension,\n        CodeMirror.syntaxHighlighting(CodeHighlighter.CodeHighlighter.highlightStyle),\n      ],\n    });\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    // TODO(https://crbug.com/1425354): Add Raw button.\n    return html`\n      <devtools-text-editor .style.flexGrow=${'1'} .state=${\n        this.#editorState\n      }></devtools-text-editor>\n    `;\n    // clang-format on\n  }\n\n  async #getSourceText(): Promise<string> {\n    if (this.#shouldPrettyPrint && this.#data?.sourceText !== undefined) {\n      const formattedResult =\n          await Formatter.ScriptFormatter.formatScriptContent('application/json', this.#data.sourceText);\n      return formattedResult.formattedContent;\n    }\n\n    return this.#data?.sourceText || '';\n  }\n}\n\ncustomElements.define('devtools-resources-rulesets-details-view', RuleSetDetailsView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-rulesets-details-view': RuleSetDetailsView;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n  height: 100%;\n}\n\n.placeholder {\n  display: flex;\n  height: 100%;\n}\n\n.ruleset-header {\n  padding: 4px 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.ruleset-header devtools-icon {\n  vertical-align: sub;\n}\n\n/*# sourceURL=${import.meta.resolve('./RuleSetDetailsView.css')} */`;", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../../ui/legacy/components/data_grid/data_grid.js';\nimport '../../../../ui/components/icon_button/icon_button.js';\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Protocol from '../../../../generated/protocol.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport type * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\nimport * as NetworkForward from '../../../network/forward/forward.js';\nimport * as PreloadingHelper from '../helper/helper.js';\n\nimport * as PreloadingString from './PreloadingString.js';\nimport ruleSetGridStyles from './ruleSetGrid.css.js';\n\nconst {html, Directives: {styleMap}} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Column header: Short URL of rule set.\n   */\n  ruleSet: 'Rule set',\n  /**\n   * @description Column header: Show how many preloads are associated if valid, error counts if invalid.\n   */\n  status: 'Status',\n  /**\n   * @description button: Title of button to reveal the corresponding request of rule set in Elements panel\n   */\n  clickToOpenInElementsPanel: 'Click to open in Elements panel',\n  /**\n   * @description button: Title of button to reveal the corresponding request of rule set in Network panel\n   */\n  clickToOpenInNetworkPanel: 'Click to open in Network panel',\n  /**\n   * @description Value of status, specifying rule set contains how many errors.\n   */\n  errors: '{errorCount, plural, =1 {# error} other {# errors}}',\n  /**\n   * @description button: Title of button to reveal preloading attempts with filter by selected rule set\n   */\n  buttonRevealPreloadsAssociatedWithRuleSet: 'Reveal speculative loads associated with this rule set',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/components/RuleSetGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface RuleSetGridData {\n  rows: RuleSetGridRow[];\n  pageURL: Platform.DevToolsPath.UrlString;\n}\n\nexport interface RuleSetGridRow {\n  ruleSet: Protocol.Preload.RuleSet;\n  preloadsStatusSummary: string;\n}\n\n// Grid component to show SpeculationRules rule sets.\nexport class RuleSetGrid extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: RuleSetGridData|null = null;\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  update(data: RuleSetGridData): void {\n    this.#data = data;\n    this.#render();\n  }\n\n  async #revealSpeculationRules(ruleSet: Protocol.Preload.RuleSet): Promise<void> {\n    if (ruleSet.backendNodeId !== undefined) {\n      await this.#revealSpeculationRulesInElements(ruleSet);\n    } else if (ruleSet.url !== undefined && ruleSet.requestId) {\n      await this.#revealSpeculationRulesInNetwork(ruleSet);\n    }\n  }\n\n  async #revealSpeculationRulesInElements(ruleSet: Protocol.Preload.RuleSet): Promise<void> {\n    assertNotNullOrUndefined(ruleSet.backendNodeId);\n\n    const target = SDK.TargetManager.TargetManager.instance().scopeTarget();\n    if (target === null) {\n      return;\n    }\n\n    await Common.Revealer.reveal(new SDK.DOMModel.DeferredDOMNode(target, ruleSet.backendNodeId));\n  }\n\n  async #revealSpeculationRulesInNetwork(ruleSet: Protocol.Preload.RuleSet): Promise<void> {\n    assertNotNullOrUndefined(ruleSet.requestId);\n    const request = SDK.TargetManager.TargetManager.instance()\n                        .scopeTarget()\n                        ?.model(SDK.NetworkManager.NetworkManager)\n                        ?.requestForId(ruleSet.requestId) ||\n        null;\n    if (request === null) {\n      return;\n    }\n\n    const requestLocation = NetworkForward.UIRequestLocation.UIRequestLocation.tab(\n        request, NetworkForward.UIRequestLocation.UIRequestTabs.PREVIEW, {clearFilter: false});\n    await Common.Revealer.reveal(requestLocation);\n  }\n\n  async #revealAttemptViewWithFilter(ruleSet: Protocol.Preload.RuleSet): Promise<void> {\n    await Common.Revealer.reveal(new PreloadingHelper.PreloadingForward.AttemptViewWithFilter(ruleSet.id));\n  }\n\n  #render(): void {\n    if (this.#data === null) {\n      return;\n    }\n\n    const {rows, pageURL} = this.#data;\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n      Lit.render(html`\n        <style>${ruleSetGridStyles}</style>\n        <div class=\"ruleset-container\" jslog=${VisualLogging.pane('preloading-rules')}>\n          <devtools-data-grid striped @select=${this.#onRowSelected}>\n            <table>\n              <tr>\n                <th id=\"rule-set\" weight=\"20\" sortable>\n                  ${i18nString(UIStrings.ruleSet)}\n                </th>\n                <th id=\"status\" weight=\"80\" sortable>\n                  ${i18nString(UIStrings.status)}\n                </th>\n              </tr>\n              ${rows.map(({ruleSet, preloadsStatusSummary}) => {\n                const location = PreloadingString.ruleSetTagOrLocationShort(ruleSet, pageURL);\n                const revealInElements = ruleSet.backendNodeId !== undefined;\n                const revealInNetwork = ruleSet.url !== undefined && ruleSet.requestId;\n                return html`\n                  <tr data-id=${ruleSet.id}>\n                    <td>\n                      ${revealInElements || revealInNetwork ? html`\n                        <button class=\"link\" role=\"link\"\n                            @click=${() => this.#revealSpeculationRules(ruleSet)}\n                            title=${revealInElements ? i18nString(UIStrings.clickToOpenInElementsPanel)\n                                                    : i18nString(UIStrings.clickToOpenInNetworkPanel)}\n                            style=${styleMap({\n                              border: 'none',\n                              background: 'none',\n                              color: 'var(--icon-link)',\n                              cursor: 'pointer',\n                              'text-decoration': 'underline',\n                              'padding-inline-start': '0',\n                              'padding-inline-end': '0',\n                            })}\n                            jslog=${VisualLogging\n                                .action(revealInElements ? 'reveal-in-elements' : 'reveal-in-network')\n                                .track({click: true})}\n                          >\n                            <devtools-icon name=${revealInElements ? 'code-circle' : 'arrow-up-down-circle'} class=\"medium\"\n                              style=${styleMap({\n                                color: 'var(--icon-link)',\n                                'vertical-align': 'sub',\n                              })}\n                            ></devtools-icon>\n                            ${location}\n                          </button>`\n                          : location}\n                  </td>\n                  <td>\n                    ${ruleSet.errorType !== undefined ? html`\n                      <span style=${styleMap({color: 'var(--sys-color-error)'})}>\n                        ${i18nString(UIStrings.errors, {errorCount: 1})}\n                      </span>` : ''} ${ruleSet.errorType !== Protocol.Preload.RuleSetErrorType.SourceIsNotJsonObject &&\n                      ruleSet.errorType !== Protocol.Preload.RuleSetErrorType.InvalidRulesetLevelTag ?\n                      html`\n                      <button class=\"link\" role=\"link\"\n                        @click=${() => this.#revealAttemptViewWithFilter(ruleSet)}\n                        title=${i18nString(UIStrings.buttonRevealPreloadsAssociatedWithRuleSet)}\n                        style=${styleMap({\n                          color: 'var(--sys-color-primary)',\n                          'text-decoration': 'underline',\n                          cursor: 'pointer',\n                          border: 'none',\n                          background: 'none',\n                          'padding-inline-start': '0',\n                          'padding-inline-end': '0',\n                        })}\n                        jslog=${VisualLogging.action('reveal-preloads').track({click: true})}>\n                        ${preloadsStatusSummary}\n                      </button>` : ''}\n                  </td>\n                </tr>\n              `;})}\n            </table>\n          </devtools-data-grid>\n        </div>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #onRowSelected(event: CustomEvent<HTMLElement>): void {\n    const ruleSetId = event.detail.dataset.id;\n    if (ruleSetId !== undefined) {\n      this.dispatchEvent(new CustomEvent('select', {detail: ruleSetId}));\n    }\n  }\n}\n\ncustomElements.define('devtools-resources-ruleset-grid', RuleSetGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-ruleset-grid': RuleSetGrid;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: auto;\n  height: 100%;\n}\n\n.ruleset-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\ndevtools-data-grid {\n  flex: auto;\n}\n\n.inline-icon {\n  vertical-align: text-bottom;\n}\n\n/*# sourceURL=${import.meta.resolve('./ruleSetGrid.css')} */`;", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../../ui/components/icon_button/icon_button.js';\nimport '../../../../ui/components/report_view/report_view.js';\nimport './PreloadingMismatchedHeadersGrid.js';\nimport './MismatchedPreloadingGrid.js';\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Protocol from '../../../../generated/protocol.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as RenderCoordinator from '../../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\nimport * as PreloadingHelper from '../helper/helper.js';\n\nimport type * as MismatchedPreloadingGrid from './MismatchedPreloadingGrid.js';\nimport {prefetchFailureReason, prerenderFailureReason} from './PreloadingString.js';\nimport usedPreloadingStyles from './usedPreloadingView.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Header for preloading status.\n   */\n  speculativeLoadingStatusForThisPage: 'Speculative loading status for this page',\n  /**\n   * @description Label for failure reason of preloading\n   */\n  detailsFailureReason: 'Failure reason',\n  /**\n   * @description Message that tells this page was prerendered.\n   */\n  downgradedPrefetchUsed:\n      'The initiating page attempted to prerender this page\\'s URL. The prerender failed, but the resulting response body was still used as a prefetch.',\n  /**\n   * @description Message that tells this page was prefetched.\n   */\n  prefetchUsed: 'This page was successfully prefetched.',\n  /**\n   * @description Message that tells this page was prerendered.\n   */\n  prerenderUsed: 'This page was successfully prerendered.',\n  /**\n   * @description Message that tells this page was prefetched.\n   */\n  prefetchFailed:\n      'The initiating page attempted to prefetch this page\\'s URL, but the prefetch failed, so a full navigation was performed instead.',\n  /**\n   * @description Message that tells this page was prerendered.\n   */\n  prerenderFailed:\n      'The initiating page attempted to prerender this page\\'s URL, but the prerender failed, so a full navigation was performed instead.',\n  /**\n   * @description Message that tells this page was not preloaded.\n   */\n  noPreloads: 'The initiating page did not attempt to speculatively load this page\\'s URL.',\n  /**\n   * @description Header for current URL.\n   */\n  currentURL: 'Current URL',\n  /**\n   * @description Header for mismatched preloads.\n   */\n  preloadedURLs: 'URLs being speculatively loaded by the initiating page',\n  /**\n   * @description Header for summary.\n   */\n  speculationsInitiatedByThisPage: 'Speculations initiated by this page',\n  /**\n   * @description Link text to reveal rules.\n   */\n  viewAllRules: 'View all speculation rules',\n  /**\n   * @description Link text to reveal preloads.\n   */\n  viewAllSpeculations: 'View all speculations',\n  /**\n   * @description Link to learn more about Preloading\n   */\n  learnMore: 'Learn more: Speculative loading on developer.chrome.com',\n  /**\n   * @description Header for the table of mismatched network request header.\n   */\n  mismatchedHeadersDetail: 'Mismatched HTTP request headers',\n  /**\n   * @description Label for badge, indicating speculative load successfully used for this page.\n   */\n  badgeSuccess: 'Success',\n  /**\n   * @description Label for badge, indicating speculative load failed for this page.\n   */\n  badgeFailure: 'Failure',\n  /**\n   * @description Label for badge, indicating no speculative loads used for this page.\n   */\n  badgeNoSpeculativeLoads: 'No speculative loads',\n  /**\n   * @description Label for badge, indicating how many not triggered speculations there are.\n   */\n  badgeNotTriggeredWithCount: '{n, plural, =1 {# not triggered} other {# not triggered}}',\n  /**\n   * @description Label for badge, indicating how many in progress speculations there are.\n   */\n  badgeInProgressWithCount: '{n, plural, =1 {# in progress} other {# in progress}}',\n  /**\n   * @description Label for badge, indicating how many succeeded speculations there are.\n   */\n  badgeSuccessWithCount: '{n, plural, =1 {# success} other {# success}}',\n  /**\n   * @description Label for badge, indicating how many failed speculations there are.\n   */\n  badgeFailureWithCount: '{n, plural, =1 {# failure} other {# failures}}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/components/UsedPreloadingView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface UsedPreloadingViewData {\n  pageURL: Platform.DevToolsPath.UrlString;\n  previousAttempts: SDK.PreloadingModel.PreloadingAttempt[];\n  currentAttempts: SDK.PreloadingModel.PreloadingAttempt[];\n}\n\nexport const enum UsedKind {\n  DOWNGRADED_PRERENDER_TO_PREFETCH_AND_USED = 'DowngradedPrerenderToPrefetchAndUsed',\n  PREFETCH_USED = 'PrefetchUsed',\n  PRERENDER_USED = 'PrerenderUsed',\n  PREFETCH_FAILED = 'PrefetchFailed',\n  PRERENDER_FAILED = 'PrerenderFailed',\n  NO_PRELOADS = 'NoPreloads',\n}\n\n// TODO(kenoss): Rename this class and file once https://crrev.com/c/4933567 landed.\n// This also shows summary of speculations initiated by this page.\nexport class UsedPreloadingView extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: UsedPreloadingViewData = {\n    pageURL: '' as Platform.DevToolsPath.UrlString,\n    previousAttempts: [],\n    currentAttempts: [],\n  };\n\n  set data(data: UsedPreloadingViewData) {\n    this.#data = data;\n    void this.#render();\n  }\n\n  async #render(): Promise<void> {\n    await RenderCoordinator.write('UsedPreloadingView render', () => {\n      Lit.render(this.#renderTemplate(), this.#shadow, {host: this});\n    });\n  }\n\n  #renderTemplate(): Lit.LitTemplate {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <style>${usedPreloadingStyles}</style>\n      <devtools-report>\n        ${this.#speculativeLoadingStatusForThisPageSections()}\n\n        <devtools-report-divider></devtools-report-divider>\n\n        ${this.#speculationsInitiatedByThisPageSummarySections()}\n\n        <devtools-report-divider></devtools-report-divider>\n\n        <devtools-report-section>\n          ${UI.XLink.XLink.create('https://developer.chrome.com/blog/prerender-pages/', i18nString(UIStrings.learnMore), 'link', undefined, 'learn-more')}\n        </devtools-report-section>\n      </devtools-report>\n    `;\n    // clang-format on\n  }\n\n  #speculativeLoadingStatusForThisPageSections(): Lit.LitTemplate {\n    const pageURL = Common.ParsedURL.ParsedURL.urlWithoutHash(this.#data.pageURL);\n    const forThisPage = this.#data.previousAttempts.filter(\n        attempt => Common.ParsedURL.ParsedURL.urlWithoutHash(attempt.key.url) === pageURL);\n    const prefetch =\n        forThisPage.filter(attempt => attempt.key.action === Protocol.Preload.SpeculationAction.Prefetch)[0];\n    const prerender =\n        forThisPage.filter(attempt => attempt.key.action === Protocol.Preload.SpeculationAction.Prerender)[0];\n\n    let kind = UsedKind.NO_PRELOADS;\n    // Prerender -> prefetch downgrade case\n    //\n    // This code does not handle the case SpecRules designate these preloads rather than prerenderer automatically downgrade prerendering.\n    // TODO(https://crbug.com/1410709): Improve this logic once automatic downgrade implemented.\n    if (prerender?.status === SDK.PreloadingModel.PreloadingStatus.FAILURE &&\n        prefetch?.status === SDK.PreloadingModel.PreloadingStatus.SUCCESS) {\n      kind = UsedKind.DOWNGRADED_PRERENDER_TO_PREFETCH_AND_USED;\n    } else if (prefetch?.status === SDK.PreloadingModel.PreloadingStatus.SUCCESS) {\n      kind = UsedKind.PREFETCH_USED;\n    } else if (prerender?.status === SDK.PreloadingModel.PreloadingStatus.SUCCESS) {\n      kind = UsedKind.PRERENDER_USED;\n    } else if (prefetch?.status === SDK.PreloadingModel.PreloadingStatus.FAILURE) {\n      kind = UsedKind.PREFETCH_FAILED;\n    } else if (prerender?.status === SDK.PreloadingModel.PreloadingStatus.FAILURE) {\n      kind = UsedKind.PRERENDER_FAILED;\n    } else {\n      kind = UsedKind.NO_PRELOADS;\n    }\n\n    let badge;\n    let basicMessage;\n    switch (kind) {\n      case UsedKind.DOWNGRADED_PRERENDER_TO_PREFETCH_AND_USED:\n        badge = this.#badgeSuccess();\n        basicMessage = html`${i18nString(UIStrings.downgradedPrefetchUsed)}`;\n        break;\n      case UsedKind.PREFETCH_USED:\n        badge = this.#badgeSuccess();\n        basicMessage = html`${i18nString(UIStrings.prefetchUsed)}`;\n        break;\n      case UsedKind.PRERENDER_USED:\n        badge = this.#badgeSuccess();\n        basicMessage = html`${i18nString(UIStrings.prerenderUsed)}`;\n        break;\n      case UsedKind.PREFETCH_FAILED:\n        badge = this.#badgeFailure();\n        basicMessage = html`${i18nString(UIStrings.prefetchFailed)}`;\n        break;\n      case UsedKind.PRERENDER_FAILED:\n        badge = this.#badgeFailure();\n        basicMessage = html`${i18nString(UIStrings.prerenderFailed)}`;\n        break;\n      case UsedKind.NO_PRELOADS:\n        badge = this.#badgeNeutral(i18nString(UIStrings.badgeNoSpeculativeLoads));\n        basicMessage = html`${i18nString(UIStrings.noPreloads)}`;\n        break;\n    }\n\n    let maybeFailureReasonMessage;\n    if (kind === UsedKind.PREFETCH_FAILED) {\n      assertNotNullOrUndefined(prefetch);\n      maybeFailureReasonMessage = prefetchFailureReason(prefetch as SDK.PreloadingModel.PrefetchAttempt);\n    } else if (kind === UsedKind.PRERENDER_FAILED || kind === UsedKind.DOWNGRADED_PRERENDER_TO_PREFETCH_AND_USED) {\n      assertNotNullOrUndefined(prerender);\n      maybeFailureReasonMessage = prerenderFailureReason(prerender as SDK.PreloadingModel.PrerenderAttempt);\n    }\n\n    let maybeFailureReason: Lit.LitTemplate = Lit.nothing;\n    if (maybeFailureReasonMessage !== undefined) {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      maybeFailureReason = html`\n      <devtools-report-section-header>${i18nString(UIStrings.detailsFailureReason)}</devtools-report-section-header>\n      <devtools-report-section>\n        ${maybeFailureReasonMessage}\n      </devtools-report-section>\n      `;\n      // clang-format on\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <devtools-report-section-header>${i18nString(UIStrings.speculativeLoadingStatusForThisPage)}</devtools-report-section-header>\n      <devtools-report-section>\n        <div>\n          <div class=\"status-badge-container\">\n            ${badge}\n          </div>\n          <div>\n            ${basicMessage}\n          </div>\n        </div>\n      </devtools-report-section>\n\n      ${maybeFailureReason}\n\n      ${this.#maybeMismatchedSections(kind)}\n      ${this.#maybeMismatchedHTTPHeadersSections()}\n    `;\n    // clang-format on\n  }\n\n  #maybeMismatchedSections(kind: UsedKind): Lit.LitTemplate {\n    if (kind !== UsedKind.NO_PRELOADS || this.#data.previousAttempts.length === 0) {\n      return Lit.nothing;\n    }\n\n    const rows = this.#data.previousAttempts.map(attempt => {\n      return {\n        url: attempt.key.url,\n        action: attempt.key.action,\n        status: attempt.status,\n      };\n    });\n    const data = {\n      pageURL: this.#data.pageURL,\n      rows,\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <devtools-report-section-header>${i18nString(UIStrings.currentURL)}</devtools-report-section-header>\n      <devtools-report-section>\n        ${UI.XLink.XLink.create(this.#data.pageURL, undefined, 'link', undefined, 'current-url')}\n      </devtools-report-section>\n\n      <devtools-report-section-header>${i18nString(UIStrings.preloadedURLs)}</devtools-report-section-header>\n      <devtools-report-section\n      jslog=${VisualLogging.section('preloaded-urls')}>\n        <devtools-resources-mismatched-preloading-grid\n          .data=${data as MismatchedPreloadingGrid.MismatchedPreloadingGridData}></devtools-resources-mismatched-preloading-grid>\n      </devtools-report-section>\n    `;\n    // clang-format on\n  }\n\n  #maybeMismatchedHTTPHeadersSections(): Lit.LitTemplate {\n    const attempt = this.#data.previousAttempts.find(\n        attempt =>\n            attempt.action === Protocol.Preload.SpeculationAction.Prerender && attempt.mismatchedHeaders !== null);\n    if (attempt === undefined) {\n      return Lit.nothing;\n    }\n\n    if (attempt.key.url !== this.#data.pageURL) {\n      // This place should never be reached since mismatched headers is reported only if the activation is attempted.\n      // TODO(crbug.com/1456673): remove this check once DevTools support embedder-triggered prerender or prerender\n      // supports non-vary-search.\n      throw new Error('unreachable');\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <devtools-report-section-header>${i18nString(UIStrings.mismatchedHeadersDetail)}</devtools-report-section-header>\n      <devtools-report-section>\n        <devtools-resources-preloading-mismatched-headers-grid\n          .data=${attempt as SDK.PreloadingModel.PrerenderAttempt}></devtools-resources-preloading-mismatched-headers-grid>\n      </devtools-report-section>\n    `;\n    // clang-format on\n  }\n\n  #speculationsInitiatedByThisPageSummarySections(): Lit.LitTemplate {\n    const count = this.#data.currentAttempts.reduce((acc, attempt) => {\n      acc.set(attempt.status, (acc.get(attempt.status) ?? 0) + 1);\n      return acc;\n    }, new Map());\n    const notTriggeredCount = count.get(SDK.PreloadingModel.PreloadingStatus.NOT_TRIGGERED) ?? 0;\n    const readyCount = count.get(SDK.PreloadingModel.PreloadingStatus.READY) ?? 0;\n    const failureCount = count.get(SDK.PreloadingModel.PreloadingStatus.FAILURE) ?? 0;\n    const inProgressCount = (count.get(SDK.PreloadingModel.PreloadingStatus.PENDING) ?? 0) +\n        (count.get(SDK.PreloadingModel.PreloadingStatus.RUNNING) ?? 0);\n    const badges = [];\n    if (this.#data.currentAttempts.length === 0) {\n      badges.push(this.#badgeNeutral(i18nString(UIStrings.badgeNoSpeculativeLoads)));\n    }\n    if (notTriggeredCount > 0) {\n      badges.push(this.#badgeNeutral(i18nString(UIStrings.badgeNotTriggeredWithCount, {n: notTriggeredCount})));\n    }\n    if (inProgressCount > 0) {\n      badges.push(this.#badgeNeutral(i18nString(UIStrings.badgeInProgressWithCount, {n: inProgressCount})));\n    }\n    if (readyCount > 0) {\n      badges.push(this.#badgeSuccess(readyCount));\n    }\n    if (failureCount > 0) {\n      badges.push(this.#badgeFailure(failureCount));\n    }\n\n    const revealRuleSetView = (): void => {\n      void Common.Revealer.reveal(new PreloadingHelper.PreloadingForward.RuleSetView(null));\n    };\n    const revealAttemptViewWithFilter = (): void => {\n      void Common.Revealer.reveal(new PreloadingHelper.PreloadingForward.AttemptViewWithFilter(null));\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <devtools-report-section-header>${i18nString(UIStrings.speculationsInitiatedByThisPage)}</devtools-report-section-header>\n      <devtools-report-section>\n        <div>\n          <div class=\"status-badge-container\">\n            ${badges}\n          </div>\n\n          <div class=\"reveal-links\">\n            <button class=\"link devtools-link\" @click=${revealRuleSetView}\n            jslog=${VisualLogging.action('view-all-rules').track({click: true})}>\n              ${i18nString(UIStrings.viewAllRules)}\n            </button>\n           ・\n            <button class=\"link devtools-link\" @click=${revealAttemptViewWithFilter}\n            jslog=${VisualLogging.action('view-all-speculations').track({click: true})}>\n             ${i18nString(UIStrings.viewAllSpeculations)}\n            </button>\n          </div>\n        </div>\n      </devtools-report-section>\n    `;\n    // clang-format on\n  }\n\n  #badgeSuccess(count?: number): Lit.LitTemplate {\n    let message;\n    if (count === undefined) {\n      message = i18nString(UIStrings.badgeSuccess);\n    } else {\n      message = i18nString(UIStrings.badgeSuccessWithCount, {n: count});\n    }\n    return this.#badge('status-badge status-badge-success', 'check-circle', message);\n  }\n\n  #badgeFailure(count?: number): Lit.LitTemplate {\n    let message;\n    if (count === undefined) {\n      message = i18nString(UIStrings.badgeFailure);\n    } else {\n      message = i18nString(UIStrings.badgeFailureWithCount, {n: count});\n    }\n    return this.#badge('status-badge status-badge-failure', 'cross-circle', message);\n  }\n\n  #badgeNeutral(message: string): Lit.LitTemplate {\n    return this.#badge('status-badge status-badge-neutral', 'clear', message);\n  }\n\n  #badge(klass: string, iconName: string, message: string): Lit.LitTemplate {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <span class=${klass}>\n        <devtools-icon name=${iconName}></devtools-icon>\n        <span>\n          ${message}\n        </span>\n      </span>\n    `;\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-resources-used-preloading-view', UsedPreloadingView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-used-preloading-view': UsedPreloadingView;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: auto;\n  height: 100%;\n}\n\nbutton {\n  font-size: inherit;\n}\n\ndevtools-report {\n  padding: 1em 0;\n}\n\ndevtools-report-section-header {\n  padding-bottom: 0;\n  margin-bottom: -1.5em;\n}\n\ndevtools-report-section {\n  min-width: fit-content;\n}\n\ndevtools-report-divider {\n  margin: 1em 0;\n}\n\n.reveal-links {\n  white-space: nowrap;\n}\n\n.link {\n  border: none;\n  background: none;\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n  outline-offset: 2px;\n  padding: 0;\n}\n\n.status-badge-container {\n  white-space: nowrap;\n  margin: 8px 0 24px;\n}\n\n.status-badge-container span {\n  margin-right: 2px;\n}\n\n.status-badge {\n  border-radius: 4px;\n  padding: 4px;\n\n  devtools-icon {\n    width: 16px;\n    height: 16px;\n  }\n}\n\n.status-badge-success {\n  background: var(--sys-color-surface-green);\n}\n\n.status-badge-failure {\n  background: var(--sys-color-error-container);\n}\n\n.status-badge-neutral {\n  background: var(--sys-color-neutral-container);\n}\n\n/*# sourceURL=${import.meta.resolve('./usedPreloadingView.css')} */`;"],
  "mappings": "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",
  "names": ["i18nString", "i18n", "SDK", "action", "status", "UIStrings", "str_", "i18nString", "status", "i18n", "assertNotNullOrUndefined", "SDK", "LegacyWrapper", "Lit", "html", "Lit", "UIStrings", "str_", "i18nString", "PreloadingUIUtils", "status", "assertNotNullOrUndefined", "action", "i18n", "Buttons", "LegacyWrapper", "RenderCoordinator", "UI", "Lit", "VisualLogging", "html", "Lit", "UIStrings", "str_", "i18nString", "i18nString", "Common", "i18n", "SDK", "LegacyWrapper", "Lit", "UIStrings", "str_", "i18nString", "render", "html", "styleMap", "Lit", "i18nString", "i18n", "LegacyWrapper", "Lit", "UIStrings", "str_", "i18nString", "render", "html", "Lit", "i18n", "assertNotNullOrUndefined", "SDK", "LegacyWrapper", "RenderCoordinator", "UI", "Lit", "html", "Lit", "UIStrings", "str_", "i18nString", "assertNotNullOrUndefined", "i18nString", "Common", "i18n", "assertNotNullOrUndefined", "SDK", "LegacyWrapper", "Lit", "VisualLogging", "PreloadingHelper", "html", "styleMap", "Lit", "UIStrings", "str_", "i18nString", "assertNotNullOrUndefined", "Common", "i18n", "assertNotNullOrUndefined", "SDK", "LegacyWrapper", "RenderCoordinator", "UI", "Lit", "VisualLogging", "PreloadingHelper", "html", "Lit", "UIStrings", "str_", "i18nString", "assertNotNullOrUndefined", "attempt"]
}
