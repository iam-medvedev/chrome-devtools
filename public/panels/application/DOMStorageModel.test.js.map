{"version":3,"file":"DOMStorageModel.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/DOMStorageModel.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,EAAC,wBAAwB,EAAC,MAAM,iCAAiC,CAAC;AAEzE,OAAO,KAAK,SAAS,MAAM,kBAAkB,CAAC;AAC9C,OAAO,EAAC,YAAY,EAAC,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAE3E,0BAA0B,CAAC,iBAAiB,EAAE,GAAG,EAAE;IACjD,IAAI,eAA0D,CAAC;IAC/D,IAAI,UAAgD,CAAC;IACrD,IAAI,MAAyB,CAAC;IAC9B,MAAM,OAAO,GAAG,aAAa,CAAC;IAE9B,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,GAAG,YAAY,EAAE,CAAC;QACxB,eAAe,GAAG,IAAI,SAAS,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QACxE,UAAU,GAAG,IAAI,SAAS,CAAC,eAAe,CAAC,UAAU,CAAC,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACnD,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,EAAE,EAAC,UAAU,EAAE,OAAO,EAAE,cAAc,EAAE,IAAI,EAAkC,CAAC,CAAC;IACtH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE,GAAG,EAAE;QAClE,MAAM,OAAO,GAAG,YAAY,CAAC;QAC7B,MAAM,MAAM,GAAG,EAAC,UAAU,EAAE,OAAO,EAAE,cAAc,EAAE,IAAI,EAAkC,CAAC;QAE5F,eAAe,CAAC,MAAM,EAAE,CAAC;QACzB,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QACtE,wBAAwB,CAAC,OAAO,CAAC,CAAC;QAElC,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC3C,OAAO,CAAC,wBAAwB,uEAA+C,OAAO,CAAC,CAAC;QACxF,wBAAwB,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;QAE/D,wBAAwB,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;QAC/D,OAAO,CAAC,wBAAwB,2EAAiD,OAAO,CAAC,CAAC;QAC1F,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Resources from './application.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\ndescribeWithMockConnection('DOMStorageModel', () => {\n  let domStorageModel: Resources.DOMStorageModel.DOMStorageModel;\n  let domStorage: Resources.DOMStorageModel.DOMStorage;\n  let target: SDK.Target.Target;\n  const initKey = 'storageKey1';\n\n  beforeEach(() => {\n    target = createTarget();\n    domStorageModel = new Resources.DOMStorageModel.DOMStorageModel(target);\n    domStorage = new Resources.DOMStorageModel.DOMStorage(domStorageModel, initKey, true);\n  });\n\n  it('DOMStorage is instantiated correctly', () => {\n    assert.strictEqual(domStorage.storageKey, initKey);\n    assert.deepStrictEqual(domStorage.id, {storageKey: initKey, isLocalStorage: true} as Protocol.DOMStorage.StorageId);\n  });\n\n  it('StorageKey events trigger addition/removal of DOMStorage', () => {\n    const testKey = 'storageKey';\n    const testId = {storageKey: testKey, isLocalStorage: true} as Protocol.DOMStorage.StorageId;\n\n    domStorageModel.enable();\n    const manager = target.model(SDK.StorageKeyManager.StorageKeyManager);\n    assertNotNullOrUndefined(manager);\n\n    assert.isEmpty(domStorageModel.storages());\n    manager.dispatchEventToListeners(SDK.StorageKeyManager.Events.StorageKeyAdded, testKey);\n    assertNotNullOrUndefined(domStorageModel.storageForId(testId));\n\n    assertNotNullOrUndefined(domStorageModel.storageForId(testId));\n    manager.dispatchEventToListeners(SDK.StorageKeyManager.Events.StorageKeyRemoved, testKey);\n    assert.isUndefined(domStorageModel.storageForId(testId));\n  });\n});\n"]}