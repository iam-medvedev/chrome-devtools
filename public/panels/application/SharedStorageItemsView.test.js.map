{"version":3,"file":"SharedStorageItemsView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/SharedStorageItemsView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {\n  dispatchClickEvent,\n  getCleanTextContentFromElements,\n  raf,\n} from '../../testing/DOMHelpers.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n} from '../../testing/MockConnection.js';\nimport {createViewFunctionStub, type ViewFunctionStub} from '../../testing/ViewFunctionHelpers.js';\nimport * as RenderCoordinator from '../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Resources from './application.js';\n\nimport View = Resources.SharedStorageItemsView;\n\nclass SharedStorageItemsListener {\n  #dispatcher: Common.ObjectWrapper.ObjectWrapper<View.SharedStorageItemsDispatcher.EventTypes>;\n  #cleared = false;\n  #filteredCleared = false;\n  #refreshed = false;\n  #deletedKeys: string[] = [];\n  #numEditedEvents = 0;\n\n  constructor(dispatcher: Common.ObjectWrapper.ObjectWrapper<View.SharedStorageItemsDispatcher.EventTypes>) {\n    this.#dispatcher = dispatcher;\n    this.#dispatcher.addEventListener(View.SharedStorageItemsDispatcher.Events.ITEMS_CLEARED, this.#itemsCleared, this);\n    this.#dispatcher.addEventListener(\n        View.SharedStorageItemsDispatcher.Events.FILTERED_ITEMS_CLEARED, this.#filteredItemsCleared, this);\n    this.#dispatcher.addEventListener(\n        View.SharedStorageItemsDispatcher.Events.ITEMS_REFRESHED, this.#itemsRefreshed, this);\n    this.#dispatcher.addEventListener(View.SharedStorageItemsDispatcher.Events.ITEM_DELETED, this.#itemDeleted, this);\n    this.#dispatcher.addEventListener(View.SharedStorageItemsDispatcher.Events.ITEM_EDITED, this.#itemEdited, this);\n  }\n\n  dispose(): void {\n    this.#dispatcher.removeEventListener(\n        View.SharedStorageItemsDispatcher.Events.ITEMS_CLEARED, this.#itemsCleared, this);\n    this.#dispatcher.removeEventListener(\n        View.SharedStorageItemsDispatcher.Events.FILTERED_ITEMS_CLEARED, this.#filteredItemsCleared, this);\n    this.#dispatcher.removeEventListener(\n        View.SharedStorageItemsDispatcher.Events.ITEMS_REFRESHED, this.#itemsRefreshed, this);\n    this.#dispatcher.removeEventListener(\n        View.SharedStorageItemsDispatcher.Events.ITEM_DELETED, this.#itemDeleted, this);\n    this.#dispatcher.removeEventListener(View.SharedStorageItemsDispatcher.Events.ITEM_EDITED, this.#itemEdited, this);\n  }\n\n  get deletedKeys(): string[] {\n    return this.#deletedKeys;\n  }\n\n  get numEditedEvents(): number {\n    return this.#numEditedEvents;\n  }\n\n  resetRefreshed(): void {\n    this.#refreshed = false;\n  }\n\n  #itemsCleared(): void {\n    this.#cleared = true;\n  }\n\n  #filteredItemsCleared(): void {\n    this.#filteredCleared = true;\n  }\n\n  #itemsRefreshed(): void {\n    this.#refreshed = true;\n  }\n\n  #itemDeleted(event: Common.EventTarget.EventTargetEvent<View.SharedStorageItemsDispatcher.ItemDeletedEvent>): void {\n    this.#deletedKeys.push(event.data.key);\n  }\n\n  #itemEdited(): void {\n    ++this.#numEditedEvents;\n  }\n\n  async waitForItemsCleared(): Promise<void> {\n    if (!this.#cleared) {\n      await this.#dispatcher.once(View.SharedStorageItemsDispatcher.Events.ITEMS_CLEARED);\n    }\n    this.#cleared = true;\n  }\n\n  async waitForFilteredItemsCleared(): Promise<void> {\n    if (!this.#filteredCleared) {\n      await this.#dispatcher.once(View.SharedStorageItemsDispatcher.Events.FILTERED_ITEMS_CLEARED);\n    }\n    this.#filteredCleared = true;\n  }\n\n  async waitForItemsRefreshed(): Promise<void> {\n    if (!this.#refreshed) {\n      await this.#dispatcher.once(View.SharedStorageItemsDispatcher.Events.ITEMS_REFRESHED);\n    }\n    this.#refreshed = true;\n  }\n\n  async waitForItemsDeletedTotal(total: number): Promise<void> {\n    while (this.#deletedKeys.length < total) {\n      await this.#dispatcher.once(View.SharedStorageItemsDispatcher.Events.ITEM_DELETED);\n    }\n  }\n\n  async waitForItemsEditedTotal(total: number): Promise<void> {\n    while (this.#numEditedEvents < total) {\n      await this.#dispatcher.once(View.SharedStorageItemsDispatcher.Events.ITEM_EDITED);\n    }\n  }\n}\n\ndescribeWithMockConnection('SharedStorageItemsView', function() {\n  let target: SDK.Target.Target;\n  let sharedStorageModel: Resources.SharedStorageModel.SharedStorageModel|null;\n  let sharedStorage: Resources.SharedStorageModel.SharedStorageForOrigin;\n\n  const TEST_ORIGIN = 'http://a.test';\n\n  const METADATA = {\n    creationTime: 100 as Protocol.Network.TimeSinceEpoch,\n    length: 3,\n    remainingBudget: 2.5,\n    bytesUsed: 30,\n  } as Protocol.Storage.SharedStorageMetadata;\n\n  const METADATA_NO_ENTRIES = {\n    creationTime: 100 as Protocol.Network.TimeSinceEpoch,\n    length: 0,\n    remainingBudget: 2.5,\n    bytesUsed: 0,\n  } as Protocol.Storage.SharedStorageMetadata;\n\n  const METADATA_2_ENTRIES = {\n    creationTime: 100 as Protocol.Network.TimeSinceEpoch,\n    length: 2,\n    remainingBudget: 2.5,\n    bytesUsed: 20,\n  } as Protocol.Storage.SharedStorageMetadata;\n\n  const METADATA_4_ENTRIES = {\n    creationTime: 100 as Protocol.Network.TimeSinceEpoch,\n    length: 4,\n    remainingBudget: 2.5,\n    bytesUsed: 38,\n  } as Protocol.Storage.SharedStorageMetadata;\n\n  const ENTRIES = [\n    {\n      key: 'key1',\n      value: 'a',\n    } as Protocol.Storage.SharedStorageEntry,\n    {\n      key: 'key2',\n      value: 'b',\n    } as Protocol.Storage.SharedStorageEntry,\n    {\n      key: 'key3',\n      value: 'c',\n    } as Protocol.Storage.SharedStorageEntry,\n  ];\n\n  const ENTRIES_1 = [\n    {\n      key: 'key2',\n      value: 'b',\n    } as Protocol.Storage.SharedStorageEntry,\n  ];\n\n  const ENTRIES_2 = [\n    {\n      key: 'key1',\n      value: 'a',\n    } as Protocol.Storage.SharedStorageEntry,\n    {\n      key: 'key3',\n      value: 'c',\n    } as Protocol.Storage.SharedStorageEntry,\n  ];\n\n  const ENTRIES_KEY_EDITED_1 = [\n    {\n      key: 'key0',\n      value: 'b',\n    } as Protocol.Storage.SharedStorageEntry,\n    {\n      key: 'key1',\n      value: 'a',\n    } as Protocol.Storage.SharedStorageEntry,\n    {\n      key: 'key3',\n      value: 'c',\n    } as Protocol.Storage.SharedStorageEntry,\n  ];\n\n  const ENTRIES_KEY_EDITED_2 = [\n    {\n      key: 'key1',\n      value: 'b',\n    } as Protocol.Storage.SharedStorageEntry,\n    {\n      key: 'key3',\n      value: 'c',\n    } as Protocol.Storage.SharedStorageEntry,\n  ];\n\n  const ENTRIES_VALUE_EDITED = [\n    {\n      key: 'key1',\n      value: 'a',\n    } as Protocol.Storage.SharedStorageEntry,\n    {\n      key: 'key2',\n      value: 'd',\n    } as Protocol.Storage.SharedStorageEntry,\n    {\n      key: 'key3',\n      value: 'c',\n    } as Protocol.Storage.SharedStorageEntry,\n  ];\n\n  const ENTRIES_NEW_KEY = [\n    {\n      key: 'key1',\n      value: 'a',\n    } as Protocol.Storage.SharedStorageEntry,\n    {\n      key: 'key2',\n      value: 'b',\n    } as Protocol.Storage.SharedStorageEntry,\n    {\n      key: 'key3',\n      value: 'c',\n    } as Protocol.Storage.SharedStorageEntry,\n    {\n      key: 'key4',\n      value: 'e',\n    } as Protocol.Storage.SharedStorageEntry,\n  ];\n\n  beforeEach(() => {\n    target = createTarget();\n    sharedStorageModel = target.model(Resources.SharedStorageModel.SharedStorageModel);\n    assert.exists(sharedStorageModel);\n    sharedStorage = new Resources.SharedStorageModel.SharedStorageForOrigin(sharedStorageModel, TEST_ORIGIN);\n    assert.strictEqual(sharedStorage.securityOrigin, TEST_ORIGIN);\n  });\n\n  async function createView(): Promise<{\n    view: View.SharedStorageItemsView,\n    itemsListener: SharedStorageItemsListener,\n    viewFunction: ViewFunctionStub<typeof View.SharedStorageItemsView>,\n  }> {\n    const viewFunction = createViewFunctionStub(View.SharedStorageItemsView);\n    const view = await View.SharedStorageItemsView.createView(sharedStorage, viewFunction);\n    const itemsListener = new SharedStorageItemsListener(view.sharedStorageItemsDispatcher);\n    await RenderCoordinator.done({waitForWork: true});\n    return {view, itemsListener, viewFunction};\n  }\n\n  it('displays metadata and entries', async () => {\n    assert.exists(sharedStorageModel);\n    sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata')\n        .withArgs({ownerOrigin: TEST_ORIGIN})\n        .resolves({\n          metadata: METADATA,\n          getError: () => undefined,\n        });\n    sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries')\n        .withArgs({ownerOrigin: TEST_ORIGIN})\n        .resolves({\n          entries: ENTRIES,\n          getError: () => undefined,\n        });\n\n    const {view, viewFunction} = await createView();\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES);\n\n    const metadataView = view.metadataView;\n    assert.isNotNull(metadataView.shadowRoot);\n\n    const keys = getCleanTextContentFromElements(metadataView.shadowRoot, 'devtools-report-key');\n    assert.deepEqual(keys, [\n      'Origin',\n      'Creation Time',\n      'Number of Entries',\n      'Number of Bytes Used',\n      'Entropy Budget for Fenced Frames',\n    ]);\n\n    const values = getCleanTextContentFromElements(metadataView.shadowRoot, 'devtools-report-value');\n    assert.deepEqual(values, [\n      TEST_ORIGIN,\n      (new Date(100 * 1e3)).toLocaleString(),\n      '3',\n      '30',\n      '2.5',\n    ]);\n  });\n\n  it('displays metadata with placeholder message if origin is not using API', async () => {\n    assert.exists(sharedStorageModel);\n    sinon.stub(sharedStorage, 'getMetadata').resolves(null);\n    sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries')\n        .withArgs({ownerOrigin: TEST_ORIGIN})\n        .resolves({\n          entries: [],\n          getError: () => undefined,\n        });\n\n    const {view, viewFunction} = await createView();\n\n    assert.lengthOf(viewFunction.input.items, 0);\n\n    const metadataView = view.metadataView;\n    assert.isNotNull(metadataView.shadowRoot);\n\n    const keys = getCleanTextContentFromElements(metadataView.shadowRoot, 'devtools-report-key');\n    assert.deepEqual(keys, [\n      'Origin',\n      'Creation Time',\n      'Number of Entries',\n      'Number of Bytes Used',\n      'Entropy Budget for Fenced Frames',\n    ]);\n\n    const values = getCleanTextContentFromElements(metadataView.shadowRoot, 'devtools-report-value');\n    assert.deepEqual(values, [\n      TEST_ORIGIN,\n      'Not yet created',\n      '0',\n      '0',\n      '0',\n    ]);\n  });\n\n  it('has placeholder sidebar when there are no entries', async () => {\n    assert.exists(sharedStorageModel);\n    sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata')\n        .withArgs({ownerOrigin: TEST_ORIGIN})\n        .resolves({\n          metadata: METADATA_NO_ENTRIES,\n          getError: () => undefined,\n        });\n    sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries')\n        .withArgs({ownerOrigin: TEST_ORIGIN})\n        .resolves({\n          entries: [],\n          getError: () => undefined,\n        });\n\n    const {viewFunction} = await createView();\n\n    assert.instanceOf(viewFunction.input.preview, UI.EmptyWidget.EmptyWidget);\n  });\n\n  function createMockElement(key: string, value?: string): HTMLElement {\n    return {dataset: {key, value}} as unknown as HTMLElement;\n  }\n\n  it('updates sidebarWidget upon receiving SelectedNode Event', async () => {\n    assert.exists(sharedStorageModel);\n    sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata')\n        .withArgs({ownerOrigin: TEST_ORIGIN})\n        .resolves({\n          metadata: METADATA,\n          getError: () => undefined,\n        });\n    sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries')\n        .withArgs({ownerOrigin: TEST_ORIGIN})\n        .resolves({\n          entries: ENTRIES,\n          getError: () => undefined,\n        });\n\n    const {viewFunction} = await createView();\n\n    // Select the second row.\n    viewFunction.input.onSelect(new CustomEvent('select', {detail: createMockElement('key2', 'b')}));\n    await raf();\n\n    assert.instanceOf(viewFunction.input.preview, UI.SearchableView.SearchableView);\n  });\n\n  it('refreshes when \"Refresh\" is clicked', async () => {\n    assert.exists(sharedStorageModel);\n    const getMetadataSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata').resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    const getEntriesSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries').resolves({\n      entries: ENTRIES,\n      getError: () => undefined,\n    });\n\n    const {view, itemsListener, viewFunction} = await createView();\n    assert.isTrue(getMetadataSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES);\n\n    // Clicking \"Refresh\" will cause `getMetadata()` and `getEntries()` to be called.\n    itemsListener.resetRefreshed();\n    const refreshedPromise2 = itemsListener.waitForItemsRefreshed();\n    dispatchClickEvent(view.refreshButton.element);\n    await refreshedPromise2;\n\n    assert.isTrue(getMetadataSpy.calledTwice);\n    assert.isTrue(getMetadataSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledTwice);\n    assert.isTrue(getEntriesSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES);\n  });\n\n  it('clears entries when \"Delete All\" is clicked', async () => {\n    assert.exists(sharedStorageModel);\n    const getMetadataSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata');\n    getMetadataSpy.onCall(0).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(1).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(2).resolves({\n      metadata: METADATA_NO_ENTRIES,\n      getError: () => undefined,\n    });\n    const getEntriesSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries');\n    getEntriesSpy.onCall(0).resolves({\n      entries: ENTRIES,\n      getError: () => undefined,\n    });\n    getEntriesSpy.onCall(1).resolves({\n      entries: [],\n      getError: () => undefined,\n    });\n    const clearSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_clearSharedStorageEntries').resolves({\n      getError: () => undefined,\n    });\n\n    const {view, itemsListener, viewFunction} = await createView();\n    assert.isTrue(getMetadataSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES);\n\n    // Clicking \"Delete All\" will cause `clear()`, `getMetadata()`, and `getEntries()` to be called.\n    const clearedPromise = itemsListener.waitForItemsCleared();\n    dispatchClickEvent(view.deleteAllButton.element);\n    await clearedPromise;\n\n    assert.isTrue(clearSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getMetadataSpy.calledTwice);\n    assert.isTrue(getMetadataSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledTwice);\n    assert.isTrue(getEntriesSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, []);\n  });\n\n  it('clears filtered entries when \"Delete All\" is clicked with a filter set', async () => {\n    assert.exists(sharedStorageModel);\n    const getMetadataSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata');\n    getMetadataSpy.onCall(0).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(1).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(2).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(3).resolves({\n      metadata: METADATA_2_ENTRIES,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(4).resolves({\n      metadata: METADATA_2_ENTRIES,\n      getError: () => undefined,\n    });\n    const getEntriesSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries');\n    getEntriesSpy.onCall(0).resolves({\n      entries: ENTRIES,\n      getError: () => undefined,\n    });\n    getEntriesSpy.onCall(1).resolves({\n      entries: ENTRIES,\n      getError: () => undefined,\n    });\n    getEntriesSpy.onCall(2).resolves({\n      entries: ENTRIES_2,\n      getError: () => undefined,\n    });\n    getEntriesSpy.onCall(3).resolves({\n      entries: ENTRIES_2,\n      getError: () => undefined,\n    });\n    const deleteEntrySpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_deleteSharedStorageEntry').resolves({\n      getError: () => undefined,\n    });\n\n    const {view, itemsListener, viewFunction} = await createView();\n    assert.isTrue(getMetadataSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES);\n\n    // Adding a filter to the text box will cause `getMetadata()`, and `getEntries()` to be called.\n    itemsListener.resetRefreshed();\n    const refreshedPromise2 = itemsListener.waitForItemsRefreshed();\n    view.filterItem.dispatchEventToListeners(UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED, 'b');\n    await refreshedPromise2;\n\n    assert.isTrue(getMetadataSpy.calledTwice);\n    assert.isTrue(getMetadataSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledTwice);\n    assert.isTrue(getEntriesSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    // Only the filtered entries are displayed.\n    assert.deepEqual(viewFunction.input.items, ENTRIES_1);\n\n    // Clicking \"Delete All\" will cause `deleteEntry()`, `getMetadata()`, and `getEntries()` to be called.\n    const clearedPromise = itemsListener.waitForFilteredItemsCleared();\n    dispatchClickEvent(view.deleteAllButton.element);\n    await clearedPromise;\n\n    assert.isTrue(deleteEntrySpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN, key: 'key2'}));\n    assert.strictEqual(getMetadataSpy.callCount, 3);\n    assert.isTrue(getMetadataSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledThrice);\n    assert.isTrue(getEntriesSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    // The filtered entries are cleared.\n    assert.deepEqual(viewFunction.input.items, []);\n\n    // Changing the filter in the text box will cause `getMetadata()`, and `getEntries()` to be called.\n    itemsListener.resetRefreshed();\n    const refreshedPromise3 = itemsListener.waitForItemsRefreshed();\n    view.filterItem.dispatchEventToListeners(UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED, '');\n    await refreshedPromise3;\n\n    assert.strictEqual(getMetadataSpy.callCount, 4);\n    assert.isTrue(getMetadataSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.strictEqual(getEntriesSpy.callCount, 4);\n    assert.isTrue(getEntriesSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES_2);\n  });\n\n  it('deletes selected entry when \"Delete Selected\" is clicked', async () => {\n    assert.exists(sharedStorageModel);\n    const getMetadataSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata');\n    getMetadataSpy.onCall(0).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(1).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(2).resolves({\n      metadata: METADATA_2_ENTRIES,\n      getError: () => undefined,\n    });\n    const getEntriesSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries');\n    getEntriesSpy.onCall(0).resolves({\n      entries: ENTRIES,\n      getError: () => undefined,\n    });\n    getEntriesSpy.onCall(1).resolves({\n      entries: [],\n      getError: () => undefined,\n    });\n    const deleteEntrySpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_deleteSharedStorageEntry').resolves({\n      getError: () => undefined,\n    });\n\n    const {view, itemsListener, viewFunction} = await createView();\n    assert.isTrue(getMetadataSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES);\n\n    // Select the second row.\n    viewFunction.input.onSelect(new CustomEvent('select', {detail: createMockElement('key2', 'b')}));\n\n    // Clicking \"Delete Selected\" will cause `deleteEntry()`, `getMetadata()`, and `getEntries()` to be called.\n    const deletedPromise = itemsListener.waitForItemsDeletedTotal(1);\n    dispatchClickEvent(view.deleteSelectedButton.element);\n    await deletedPromise;\n\n    assert.isTrue(deleteEntrySpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN, key: 'key2'}));\n    assert.isTrue(getMetadataSpy.calledTwice);\n    assert.isTrue(getMetadataSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledTwice);\n    assert.isTrue(getEntriesSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, []);\n    assert.deepEqual(itemsListener.deletedKeys, ['key2']);\n  });\n\n  it('edits key of selected entry to a non-preexisting key', async () => {\n    assert.exists(sharedStorageModel);\n    const getMetadataSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata');\n    getMetadataSpy.onCall(0).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(1).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(2).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    const getEntriesSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries');\n    getEntriesSpy.onCall(0).resolves({\n      entries: ENTRIES,\n      getError: () => undefined,\n    });\n    getEntriesSpy.onCall(1).resolves({\n      entries: ENTRIES_2,\n      getError: () => undefined,\n    });\n    getEntriesSpy.onCall(2).resolves({\n      entries: ENTRIES_KEY_EDITED_1,\n      getError: () => undefined,\n    });\n    const deleteEntrySpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_deleteSharedStorageEntry').resolves({\n      getError: () => undefined,\n    });\n    const setEntrySpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_setSharedStorageEntry').resolves({\n      getError: () => undefined,\n    });\n\n    const {itemsListener, viewFunction} = await createView();\n    assert.isTrue(getMetadataSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES);\n\n    viewFunction.input.onEdit(new CustomEvent('edit', {\n      detail: {\n        node: createMockElement('key2', 'b'),\n        columnId: 'key',\n        valueBeforeEditing: 'key2',\n        newText: 'key0',\n      },\n    }));\n\n    //  Editing a key will cause `deleteEntry()`, `setEntry()`, `getMetadata()`, and `getEntries()` to be called.\n    await itemsListener.waitForItemsEditedTotal(1);\n\n    assert.isTrue(deleteEntrySpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN, key: 'key2'}));\n    assert.isTrue(\n        setEntrySpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN, key: 'key0', value: 'b', ignoreIfPresent: false}));\n    assert.isTrue(getMetadataSpy.calledTwice);\n    assert.isTrue(getMetadataSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledThrice);\n    assert.isTrue(getEntriesSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES_KEY_EDITED_1);\n  });\n\n  it('edits key of selected entry to a preexisting key', async () => {\n    assert.exists(sharedStorageModel);\n    const getMetadataSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata');\n    getMetadataSpy.onCall(0).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(1).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(2).resolves({\n      metadata: METADATA_2_ENTRIES,\n      getError: () => undefined,\n    });\n    const getEntriesSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries');\n    getEntriesSpy.onCall(0).resolves({\n      entries: ENTRIES,\n      getError: () => undefined,\n    });\n    getEntriesSpy.onCall(1).resolves({\n      entries: ENTRIES_2,\n      getError: () => undefined,\n    });\n    getEntriesSpy.onCall(2).resolves({\n      entries: ENTRIES_KEY_EDITED_2,\n      getError: () => undefined,\n    });\n    const deleteEntrySpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_deleteSharedStorageEntry').resolves({\n      getError: () => undefined,\n    });\n    const setEntrySpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_setSharedStorageEntry').resolves({\n      getError: () => undefined,\n    });\n\n    const {itemsListener, viewFunction} = await createView();\n    assert.isTrue(getMetadataSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES);\n\n    viewFunction.input.onEdit(new CustomEvent('edit', {\n      detail: {\n        node: createMockElement('key2', 'b'),\n        columnId: 'key',\n        valueBeforeEditing: 'key2',\n        newText: 'key1',\n      },\n    }));\n    await itemsListener.waitForItemsEditedTotal(1);\n\n    assert.isTrue(deleteEntrySpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN, key: 'key2'}));\n    assert.isTrue(\n        setEntrySpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN, key: 'key1', value: 'b', ignoreIfPresent: false}));\n    assert.isTrue(getMetadataSpy.calledTwice);\n    assert.isTrue(getMetadataSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledThrice);\n    assert.isTrue(getEntriesSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES_KEY_EDITED_2);\n\n    // Verify that the preview loads.\n    assert.instanceOf(viewFunction.input.preview, UI.SearchableView.SearchableView);\n  });\n\n  it('edits value of selected entry to a new value', async () => {\n    assert.exists(sharedStorageModel);\n    const getMetadataSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata');\n    getMetadataSpy.onCall(0).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(1).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(2).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    const getEntriesSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries');\n    getEntriesSpy.onCall(0).resolves({\n      entries: ENTRIES,\n      getError: () => undefined,\n    });\n    getEntriesSpy.onCall(1).resolves({\n      entries: ENTRIES_VALUE_EDITED,\n      getError: () => undefined,\n    });\n    const deleteEntrySpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_deleteSharedStorageEntry').resolves({\n      getError: () => undefined,\n    });\n    const setEntrySpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_setSharedStorageEntry').resolves({\n      getError: () => undefined,\n    });\n\n    const {itemsListener, viewFunction} = await createView();\n    assert.isTrue(getMetadataSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES);\n\n    viewFunction.input.onEdit(new CustomEvent('edit', {\n      detail: {\n        node: createMockElement('key2', 'b'),\n        columnId: 'value',\n        valueBeforeEditing: 'b',\n        newText: 'd',\n      },\n    }));\n    await itemsListener.waitForItemsEditedTotal(1);\n\n    assert.isTrue(deleteEntrySpy.notCalled);\n    assert.isTrue(\n        setEntrySpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN, key: 'key2', value: 'd', ignoreIfPresent: false}));\n    assert.isTrue(getMetadataSpy.calledTwice);\n    assert.isTrue(getMetadataSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledTwice);\n    assert.isTrue(getEntriesSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES_VALUE_EDITED);\n\n    // Verify that the preview loads.\n    assert.instanceOf(viewFunction.input.preview, UI.SearchableView.SearchableView);\n  });\n\n  it('adds an entry when the key cell of the empty data row is edited', async () => {\n    assert.exists(sharedStorageModel);\n    const getMetadataSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata');\n    getMetadataSpy.onCall(0).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(1).resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    getMetadataSpy.onCall(2).resolves({\n      metadata: METADATA_4_ENTRIES,\n      getError: () => undefined,\n    });\n    const getEntriesSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries');\n    getEntriesSpy.onCall(0).resolves({\n      entries: ENTRIES,\n      getError: () => undefined,\n    });\n    getEntriesSpy.onCall(1).resolves({\n      entries: ENTRIES_NEW_KEY,\n      getError: () => undefined,\n    });\n    const deleteEntrySpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_deleteSharedStorageEntry').resolves({\n      getError: () => undefined,\n    });\n    const setEntrySpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_setSharedStorageEntry').resolves({\n      getError: () => undefined,\n    });\n\n    const {itemsListener, viewFunction} = await createView();\n    assert.isTrue(getMetadataSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES);\n\n    viewFunction.input.onCreate(new CustomEvent('edit', {\n      detail: {\n        key: 'key4',\n        value: 'e',\n      },\n    }));\n    await itemsListener.waitForItemsEditedTotal(1);\n\n    assert.isTrue(deleteEntrySpy.notCalled);\n    assert.isTrue(\n        setEntrySpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN, key: 'key4', value: 'e', ignoreIfPresent: false}));\n    assert.isTrue(getMetadataSpy.calledTwice);\n    assert.isTrue(getMetadataSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledTwice);\n    assert.isTrue(getEntriesSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES_NEW_KEY);\n\n    // Verify that the preview loads.\n    assert.instanceOf(viewFunction.input.preview, UI.SearchableView.SearchableView);\n  });\n\n  it('attempting to edit key of selected entry to an empty key cancels the edit', async () => {\n    assert.exists(sharedStorageModel);\n    const getMetadataSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageMetadata').resolves({\n      metadata: METADATA,\n      getError: () => undefined,\n    });\n    const getEntriesSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_getSharedStorageEntries').resolves({\n      entries: ENTRIES,\n      getError: () => undefined,\n    });\n    const deleteEntrySpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_deleteSharedStorageEntry').resolves({\n      getError: () => undefined,\n    });\n    const setEntrySpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_setSharedStorageEntry').resolves({\n      getError: () => undefined,\n    });\n\n    const {itemsListener, viewFunction} = await createView();\n    assert.isTrue(getMetadataSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledOnceWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES);\n\n    viewFunction.input.onSelect(new CustomEvent('select', {detail: createMockElement('key2', 'b')}));\n    viewFunction.input.onEdit(new CustomEvent('edit', {\n      detail: {\n        node: createMockElement('key2', 'b'),\n        columnId: 'key',\n        valueBeforeEditing: 'key2',\n        newText: '',\n      },\n    }));\n    await itemsListener.waitForItemsRefreshed();\n\n    assert.isTrue(deleteEntrySpy.notCalled);\n    assert.isTrue(setEntrySpy.notCalled);\n    assert.isTrue(getMetadataSpy.calledTwice);\n    assert.isTrue(getMetadataSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n    assert.isTrue(getEntriesSpy.calledTwice);\n    assert.isTrue(getEntriesSpy.alwaysCalledWithExactly({ownerOrigin: TEST_ORIGIN}));\n\n    assert.deepEqual(viewFunction.input.items, ENTRIES);\n\n    // Verify that the preview loads.\n    assert.instanceOf(viewFunction.input.preview, UI.SearchableView.SearchableView);\n  });\n});\n"]}