{"version":3,"file":"SharedStorageListTreeElement.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/SharedStorageListTreeElement.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {\n  createTarget,\n  stubNoopSettings,\n} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Application from './application.js';\n\nconst {assert} = chai;\n\ndescribeWithMockConnection('SharedStorageListTreeElement', function() {\n  const tests = (targetFactory: () => SDK.Target.Target) => {\n    let target: SDK.Target.Target;\n    let sharedStorageModel: Application.SharedStorageModel.SharedStorageModel|null;\n    let resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel|null;\n    let treeElement: Application.SharedStorageListTreeElement.SharedStorageListTreeElement;\n\n    const TEST_ORIGIN_A = 'http://a.test';\n    const TEST_ORIGIN_B = 'http://b.test';\n    const TEST_ORIGIN_C = 'http://c.test';\n\n    const ID = 'AA' as Protocol.Page.FrameId;\n\n    const EVENTS = [\n      {\n        accessTime: 0,\n        type: Protocol.Storage.SharedStorageAccessType.DocumentAppend,\n        mainFrameId: ID,\n        ownerOrigin: TEST_ORIGIN_A,\n        params: {key: 'key0', value: 'value0'} as Protocol.Storage.SharedStorageAccessParams,\n      },\n      {\n        accessTime: 10,\n        type: Protocol.Storage.SharedStorageAccessType.WorkletGet,\n        mainFrameId: ID,\n        ownerOrigin: TEST_ORIGIN_A,\n        params: {key: 'key0'} as Protocol.Storage.SharedStorageAccessParams,\n      },\n      {\n        accessTime: 15,\n        type: Protocol.Storage.SharedStorageAccessType.WorkletLength,\n        mainFrameId: ID,\n        ownerOrigin: TEST_ORIGIN_B,\n        params: {} as Protocol.Storage.SharedStorageAccessParams,\n      },\n      {\n        accessTime: 20,\n        type: Protocol.Storage.SharedStorageAccessType.DocumentClear,\n        mainFrameId: ID,\n        ownerOrigin: TEST_ORIGIN_B,\n        params: {} as Protocol.Storage.SharedStorageAccessParams,\n      },\n      {\n        accessTime: 100,\n        type: Protocol.Storage.SharedStorageAccessType.WorkletSet,\n        mainFrameId: ID,\n        ownerOrigin: TEST_ORIGIN_C,\n        params: {key: 'key0', value: 'value1', ignoreIfPresent: true} as Protocol.Storage.SharedStorageAccessParams,\n      },\n      {\n        accessTime: 150,\n        type: Protocol.Storage.SharedStorageAccessType.WorkletRemainingBudget,\n        mainFrameId: ID,\n        ownerOrigin: TEST_ORIGIN_C,\n        params: {} as Protocol.Storage.SharedStorageAccessParams,\n      },\n    ];\n\n    const MOCK_MAIN_FRAME = {\n      get id(): Protocol.Page.FrameId {\n        return ID;\n      },\n      isMainFrame(): boolean {\n        return true;\n      },\n      isOutermostFrame(): boolean {\n        return true;\n      },\n    } as SDK.ResourceTreeModel.ResourceTreeFrame;\n\n    beforeEach(async () => {\n      stubNoopSettings();\n      target = targetFactory();\n      Root.Runtime.experiments.register(Root.Runtime.ExperimentName.PRELOADING_STATUS_PANEL, '', false);\n      Root.Runtime.experiments.register(Root.Runtime.ExperimentName.STORAGE_BUCKETS_TREE, '', false);\n\n      sharedStorageModel = target.model(Application.SharedStorageModel.SharedStorageModel);\n      resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    });\n\n    it('shows view on select', async () => {\n      assertNotNullOrUndefined(sharedStorageModel);\n      sinon.stub(sharedStorageModel, 'enable').resolves();\n\n      const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n      panel.markAsRoot();\n      panel.show(document.body);\n\n      treeElement = new Application.SharedStorageListTreeElement.SharedStorageListTreeElement(panel);\n\n      const view = treeElement.view;\n      const wasShownSpy = sinon.spy(view, 'wasShown');\n\n      document.body.appendChild(treeElement.listItemNode);\n      treeElement.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n      treeElement.selectable = true;\n      treeElement.select();\n\n      assert.isTrue(wasShownSpy.calledOnce);\n\n      panel.detach();\n    });\n\n    it('adds events', async () => {\n      assertNotNullOrUndefined(sharedStorageModel);\n      sinon.stub(sharedStorageModel, 'enable').resolves();\n\n      const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n      treeElement = new Application.SharedStorageListTreeElement.SharedStorageListTreeElement(panel);\n      const view = treeElement.view;\n\n      view.setDefaultIdForTesting(ID);\n      for (const event of EVENTS) {\n        treeElement.addEvent(event);\n      }\n\n      assert.deepEqual(view.getEventsForTesting(), EVENTS);\n\n      panel.detach();\n    });\n\n    it('clears events upon main frame navigation', async () => {\n      assertNotNullOrUndefined(sharedStorageModel);\n      sinon.stub(sharedStorageModel, 'enable').resolves();\n\n      const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n      treeElement = new Application.SharedStorageListTreeElement.SharedStorageListTreeElement(panel);\n      const view = treeElement.view;\n\n      view.setDefaultIdForTesting(ID);\n      for (const event of EVENTS) {\n        treeElement.addEvent(event);\n      }\n\n      assert.deepEqual(view.getEventsForTesting(), EVENTS);\n\n      // Events are cleared on main frame navigation.\n      assertNotNullOrUndefined(resourceTreeModel);\n      resourceTreeModel.dispatchEventToListeners(\n          SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n          {frame: MOCK_MAIN_FRAME, type: SDK.ResourceTreeModel.PrimaryPageChangeType.Navigation});\n      assert.deepEqual(view.getEventsForTesting(), []);\n\n      panel.detach();\n    });\n  };\n  describe('without tab target', () => tests(() => createTarget()));\n  describe('with tab target', () => tests(() => {\n                                const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n                                createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n                                return createTarget({parentTarget: tabTarget});\n                              }));\n});\n"]}