{"version":3,"file":"ReportingApiView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ReportingApiView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Application from './application.js';\nimport * as ApplicationComponents from './components/components.js';\n\ndescribeWithMockConnection('ReportingApiView', () => {\n  const ORIGIN_1 = 'origin1';\n  const ENDPOINTS_1 = [{url: 'url1', groupName: 'group1'}];\n  const ORIGIN_2 = 'origin2';\n  const ENDPOINTS_2 = [{url: 'url2', groupName: 'group1'}, {url: 'url3', groupName: 'group2'}];\n\n  it('updates endpoints grid when they change', () => {\n    const tabTarget = createTarget({type: SDK.Target.Type.TAB});\n    const frameTarget = createTarget({parentTarget: tabTarget});\n    createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n    const networkManager = frameTarget.model(SDK.NetworkManager.NetworkManager);\n    assert.exists(networkManager);\n\n    const endpointsGrid = new ApplicationComponents.EndpointsGrid.EndpointsGrid();\n    new Application.ReportingApiView.ReportingApiView(endpointsGrid);\n    const endpointsGridData = sinon.spy(endpointsGrid, 'data', ['set']);\n    networkManager.dispatchEventToListeners(\n        SDK.NetworkManager.Events.ReportingApiEndpointsChangedForOrigin, {origin: ORIGIN_1, endpoints: ENDPOINTS_1});\n    sinon.assert.calledOnce(endpointsGridData.set);\n    sinon.assert.calledWith(endpointsGridData.set, {endpoints: new Map([[ORIGIN_1, ENDPOINTS_1]])});\n\n    networkManager.dispatchEventToListeners(\n        SDK.NetworkManager.Events.ReportingApiEndpointsChangedForOrigin, {origin: ORIGIN_2, endpoints: ENDPOINTS_2});\n    sinon.assert.calledTwice(endpointsGridData.set);\n    sinon.assert.calledWith(\n        endpointsGridData.set, {endpoints: new Map([[ORIGIN_1, ENDPOINTS_1], [ORIGIN_2, ENDPOINTS_2]])});\n  });\n\n  it('shows placeholder if no report or endpoint data is available yet', () => {\n    const target = createTarget();\n    const networkManager = target.model(SDK.NetworkManager.NetworkManager);\n    assert.exists(networkManager);\n    const endpointsGrid = new ApplicationComponents.EndpointsGrid.EndpointsGrid();\n    const view = new Application.ReportingApiView.ReportingApiView(endpointsGrid);\n\n    assert.exists(view.element.querySelector('.empty-state'));\n    assert.deepEqual(view.element.querySelector('.empty-state-header')?.textContent, 'No report or endpoint');\n    assert.deepEqual(\n        view.element.querySelector('.empty-state-description > span')?.textContent,\n        'On this page you will be able to inspect Reporting API reports and endpoints.');\n  });\n\n  it('shows reports (main element) and endpoints (sidebar element) if endpoint appears', () => {\n    const target = createTarget();\n    const networkManager = target.model(SDK.NetworkManager.NetworkManager);\n    assert.exists(networkManager);\n    const endpointsGrid = new ApplicationComponents.EndpointsGrid.EndpointsGrid();\n    const view = new Application.ReportingApiView.ReportingApiView(endpointsGrid);\n\n    networkManager.dispatchEventToListeners(\n        SDK.NetworkManager.Events.ReportingApiEndpointsChangedForOrigin, {origin: 'dummy', endpoints: []});\n    assert.strictEqual(view.showMode(), UI.SplitWidget.ShowMode.BOTH);\n    assert.isNotNull(view.mainWidget());\n    assert.instanceOf(view.mainWidget(), Application.ReportingApiReportsView.ReportingApiReportsView);\n    assert.isNotNull(view.sidebarElement());\n  });\n\n  it('shows reports (main element) and endpoints (sidebar element) if report appears', () => {\n    const target = createTarget();\n    const networkManager = target.model(SDK.NetworkManager.NetworkManager);\n    assert.exists(networkManager);\n    const endpointsGrid = new ApplicationComponents.EndpointsGrid.EndpointsGrid();\n    const view = new Application.ReportingApiView.ReportingApiView(endpointsGrid);\n\n    const report = {\n      id: 'some_id' as Protocol.Network.ReportId,\n      initiatorUrl: 'https://example.com/script.js',\n      destination: 'main-endpoint',\n      type: 'deprecation',\n      timestamp: 1,\n      depth: 1,\n      completedAttempts: 0,\n      body: {\n        columnNumber: 8,\n        id: 'PrefixedStorageInfo',\n        lineNumber: 15,\n        message: '',\n        sourceFile: 'https://example.com/script.js',\n      },\n      status: Protocol.Network.ReportStatus.Queued,\n    };\n\n    networkManager.dispatchEventToListeners(SDK.NetworkManager.Events.ReportingApiReportAdded, report);\n    assert.strictEqual(view.showMode(), UI.SplitWidget.ShowMode.BOTH);\n    assert.isNotNull(view.mainWidget());\n    assert.instanceOf(view.mainWidget(), Application.ReportingApiReportsView.ReportingApiReportsView);\n    assert.isNotNull(view.sidebarElement());\n  });\n});\n"]}