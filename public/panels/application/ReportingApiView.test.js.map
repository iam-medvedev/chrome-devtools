{"version":3,"file":"ReportingApiView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ReportingApiView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {createViewFunctionStub} from '../../testing/ViewFunctionHelpers.js';\n\nimport * as Application from './application.js';\nimport * as ApplicationComponents from './components/components.js';\n\nconst endpoints = [{url: 'www.reporting-endpoint.com', groupName: 'endpointName'}];\nconst reports = [\n  {\n    id: 'some_id' as Protocol.Network.ReportId,\n    initiatorUrl: 'https://example.com/script.js',\n    destination: 'main-endpoint',\n    type: 'deprecation',\n    timestamp: 1632747042.12696,\n    depth: 1,\n    completedAttempts: 0,\n    body: {\n      columnNumber: 8,\n      id: 'PrefixedStorageInfo',\n      lineNumber: 15,\n      message:\n          '\\'window.webkitStorageInfo\\' is deprecated. Please use \\'navigator.webkitTemporaryStorage\\' or \\'navigator.webkitPersistentStorage\\' instead.',\n      sourceFile: 'https://example.com/script.js',\n    },\n    status: Protocol.Network.ReportStatus.Queued,\n  },\n  {\n    id: 'another_id' as Protocol.Network.ReportId,\n    initiatorUrl: 'https://www.google.com/script.js',\n    destination: 'default',\n    type: 'csp-violation',\n    timestamp: 1632747045.39856,\n    depth: 1,\n    completedAttempts: 0,\n    body: {\n      blockedURL: 'https://www.google.com/script.js',\n      disposition: 'enforce',\n      documentURL: 'https://www.google.com/document',\n      effectiveDirective: 'script-src-elem',\n      originalPolicy: 'script-src \\'self\\'; object-src \\'none\\'; report-to main-endpoint;',\n      statusCode: 200,\n    },\n    status: Protocol.Network.ReportStatus.Queued,\n  },\n];\n\ndescribeWithMockConnection('ReportingApiView', () => {\n  const ORIGIN_1 = 'origin1';\n  const ENDPOINTS_1 = [{url: 'url1', groupName: 'group1'}];\n  const ORIGIN_2 = 'origin2';\n  const ENDPOINTS_2 = [{url: 'url2', groupName: 'group1'}, {url: 'url3', groupName: 'group2'}];\n\n  async function createComponent() {\n    const view = createViewFunctionStub(Application.ReportingApiView.ReportingApiView);\n    const endpointsGrid = new ApplicationComponents.EndpointsGrid.EndpointsGrid();\n    const widget = new Application.ReportingApiView.ReportingApiView(endpointsGrid, view);\n\n    const container = document.createElement('div');\n    renderElementIntoDOM(container);\n    widget.markAsRoot();\n    widget.show(container);\n    await view.nextInput;\n\n    return {view};\n  }\n\n  it('updates endpoints grid when they change', () => {\n    const tabTarget = createTarget({type: SDK.Target.Type.TAB});\n    const frameTarget = createTarget({parentTarget: tabTarget});\n    createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n    const networkManager = frameTarget.model(SDK.NetworkManager.NetworkManager);\n    assert.exists(networkManager);\n\n    const endpointsGrid = new ApplicationComponents.EndpointsGrid.EndpointsGrid();\n    new Application.ReportingApiView.ReportingApiView(endpointsGrid);\n    const endpointsGridData = sinon.spy(endpointsGrid, 'data', ['set']);\n    networkManager.dispatchEventToListeners(\n        SDK.NetworkManager.Events.ReportingApiEndpointsChangedForOrigin, {origin: ORIGIN_1, endpoints: ENDPOINTS_1});\n    sinon.assert.calledOnce(endpointsGridData.set);\n    sinon.assert.calledWith(endpointsGridData.set, {endpoints: new Map([[ORIGIN_1, ENDPOINTS_1]])});\n\n    networkManager.dispatchEventToListeners(\n        SDK.NetworkManager.Events.ReportingApiEndpointsChangedForOrigin, {origin: ORIGIN_2, endpoints: ENDPOINTS_2});\n    sinon.assert.calledTwice(endpointsGridData.set);\n    sinon.assert.calledWith(\n        endpointsGridData.set, {endpoints: new Map([[ORIGIN_1, ENDPOINTS_1], [ORIGIN_2, ENDPOINTS_2]])});\n  });\n\n  it('shows placeholder if there is no report and no endpoint', async () => {\n    const {view} = await createComponent();\n    assert.isFalse(view.input.hasEndpoints);\n    assert.isFalse(view.input.hasReports);\n    assert.isUndefined(view.input.focusedReport);\n\n    const viewEndpoints = view.input.endpointsGrid.data.endpoints;\n    assert.strictEqual(viewEndpoints.size, 0);\n\n    const viewReports = view.input.reportsGrid.data.reports;\n    assert.lengthOf(viewReports, 0);\n  });\n\n  it('shows only endpoints when endpoint event is received', async () => {\n    const target = createTarget();\n    const networkManager = target.model(SDK.NetworkManager.NetworkManager);\n    assert.exists(networkManager);\n    const {view} = await createComponent();\n\n    networkManager.dispatchEventToListeners(\n        SDK.NetworkManager.Events.ReportingApiEndpointsChangedForOrigin, {origin: 'dummy', endpoints});\n    await view.nextInput;\n\n    assert.isTrue(view.input.hasEndpoints);\n    assert.isFalse(view.input.hasReports);\n    assert.isUndefined(view.input.focusedReport);\n\n    const viewEndpoints = view.input.endpointsGrid.data.endpoints;\n    assert.strictEqual(viewEndpoints.size, 1);\n    const dummyEndpoints = viewEndpoints.get('dummy');\n    assert.deepEqual(dummyEndpoints, endpoints);\n\n    const reports = view.input.reportsGrid.data.reports;\n    assert.lengthOf(reports, 0);\n  });\n\n  it('shows only reports when report events are received', async () => {\n    const target = createTarget();\n    const networkManager = target.model(SDK.NetworkManager.NetworkManager);\n    assert.exists(networkManager);\n    const {view} = await createComponent();\n\n    networkManager.dispatchEventToListeners(SDK.NetworkManager.Events.ReportingApiReportAdded, reports[0]);\n    networkManager.dispatchEventToListeners(SDK.NetworkManager.Events.ReportingApiReportAdded, reports[1]);\n    await view.nextInput;\n\n    assert.isFalse(view.input.hasEndpoints);\n    assert.isTrue(view.input.hasReports);\n    assert.isUndefined(view.input.focusedReport);\n\n    const viewEndpoints = view.input.endpointsGrid.data.endpoints;\n    assert.strictEqual(viewEndpoints.size, 0);\n\n    const viewReports = view.input.reportsGrid.data.reports;\n    assert.deepEqual(viewReports, reports);\n  });\n\n  it('shows both reports and endpoints when events for both are received', async () => {\n    const target = createTarget();\n    const networkManager = target.model(SDK.NetworkManager.NetworkManager);\n    assert.exists(networkManager);\n    const {view} = await createComponent();\n\n    networkManager.dispatchEventToListeners(\n        SDK.NetworkManager.Events.ReportingApiEndpointsChangedForOrigin, {origin: 'dummy', endpoints});\n    networkManager.dispatchEventToListeners(SDK.NetworkManager.Events.ReportingApiReportAdded, reports[0]);\n    await view.nextInput;\n\n    assert.isTrue(view.input.hasEndpoints);\n    assert.isTrue(view.input.hasReports);\n    assert.isUndefined(view.input.focusedReport);\n\n    const viewEndpoints = view.input.endpointsGrid.data.endpoints;\n    assert.strictEqual(viewEndpoints.size, 1);\n    const dummyEndpoints = viewEndpoints.get('dummy');\n    assert.deepEqual(dummyEndpoints, endpoints);\n\n    const viewReports = view.input.reportsGrid.data.reports;\n    assert.deepEqual(viewReports, [reports[0]]);\n  });\n\n  it('can handle report updates', async () => {\n    const target = createTarget();\n    const networkManager = target.model(SDK.NetworkManager.NetworkManager);\n    assert.exists(networkManager);\n    const {view} = await createComponent();\n\n    const successReport = {\n      id: 'some_id' as Protocol.Network.ReportId,\n      initiatorUrl: 'https://example.com/script.js',\n      destination: 'main-endpoint',\n      type: 'deprecation',\n      timestamp: 1632747042.12696,\n      depth: 1,\n      completedAttempts: 1,\n      body: {\n        columnNumber: 8,\n        id: 'PrefixedStorageInfo',\n        lineNumber: 15,\n        message:\n            '\\'window.webkitStorageInfo\\' is deprecated. Please use \\'navigator.webkitTemporaryStorage\\' or \\'navigator.webkitPersistentStorage\\' instead.',\n        sourceFile: 'https://example.com/script.js',\n      },\n      status: Protocol.Network.ReportStatus.Success,\n    };\n    networkManager.dispatchEventToListeners(SDK.NetworkManager.Events.ReportingApiReportAdded, reports[0]);\n    networkManager.dispatchEventToListeners(SDK.NetworkManager.Events.ReportingApiReportUpdated, successReport);\n    await view.nextInput;\n\n    assert.isFalse(view.input.hasEndpoints);\n    assert.isTrue(view.input.hasReports);\n    assert.isUndefined(view.input.focusedReport);\n\n    const viewEndpoints = view.input.endpointsGrid.data.endpoints;\n    assert.strictEqual(viewEndpoints.size, 0);\n\n    const viewReports = view.input.reportsGrid.data.reports;\n    assert.deepEqual(viewReports, [successReport]);\n  });\n\n  it('shows report details when a report is selected', async () => {\n    const target = createTarget();\n    const networkManager = target.model(SDK.NetworkManager.NetworkManager);\n    assert.exists(networkManager);\n    const {view} = await createComponent();\n\n    networkManager.dispatchEventToListeners(SDK.NetworkManager.Events.ReportingApiReportAdded, reports[0]);\n    networkManager.dispatchEventToListeners(SDK.NetworkManager.Events.ReportingApiReportAdded, reports[1]);\n    await view.nextInput;\n\n    const grid = view.input.reportsGrid;\n    assert.isUndefined(view.input.focusedReport);\n    grid.dispatchEvent(new CustomEvent('select', {detail: 'some_id'}));\n    await view.nextInput;\n    assert.strictEqual(view.input.focusedReport, reports[0]);\n  });\n});\n"]}