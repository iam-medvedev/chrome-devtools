{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/application/ApplicationPanelSidebar.ts", "../../../../../../front_end/panels/application/ApplicationPanelTreeElement.ts", "../../../../../../front_end/panels/application/AppManifestView.ts", "appManifestView.css.js", "../../../../../../front_end/panels/application/BackForwardCacheTreeElement.ts", "../../../../../../front_end/panels/application/BackgroundServiceModel.ts", "../../../../../../front_end/panels/application/BackgroundServiceView.ts", "../../ui/legacy/emptyWidget.css.js", "backgroundServiceView.css.js", "../../../../../../front_end/panels/application/BounceTrackingMitigationsTreeElement.ts", "../../../../../../front_end/panels/application/DOMStorageModel.ts", "../../../../../../front_end/panels/application/ExtensionStorageModel.ts", "../../../../../../front_end/panels/application/IndexedDBModel.ts", "../../../../../../front_end/panels/application/IndexedDBViews.ts", "indexedDBViews.css.js", "../../../../../../front_end/panels/application/InterestGroupStorageModel.ts", "../../../../../../front_end/panels/application/InterestGroupTreeElement.ts", "../../../../../../front_end/panels/application/InterestGroupStorageView.ts", "interestGroupStorageView.css.js", "../../../../../../front_end/panels/application/OpenedWindowDetailsView.ts", "openedWindowDetailsView.css.js", "../../../../../../front_end/panels/application/PreloadingTreeElement.ts", "../../../../../../front_end/panels/application/preloading/PreloadingView.ts", "../../../../../../front_end/panels/application/preloading/components/PreloadingString.ts", "preloading/preloadingView.css.js", "preloading/preloadingViewDropDown.css.js", "../../../../../../front_end/panels/application/ReportingApiTreeElement.ts", "../../../../../../front_end/panels/application/ReportingApiView.ts", "resourcesSidebar.css.js", "../../../../../../front_end/panels/application/ServiceWorkerCacheTreeElement.ts", "../../../../../../front_end/panels/application/ServiceWorkerCacheViews.ts", "serviceWorkerCacheViews.css.js", "../../../../../../front_end/panels/application/ServiceWorkersView.ts", "serviceWorkersView.css.js", "serviceWorkerUpdateCycleView.css.js", "../../../../../../front_end/panels/application/ServiceWorkerUpdateCycleView.ts", "../../../../../../front_end/panels/application/SharedStorageListTreeElement.ts", "../../../../../../front_end/panels/application/SharedStorageEventsView.ts", "sharedStorageEventsView.css.js", "../../../../../../front_end/panels/application/SharedStorageModel.ts", "../../../../../../front_end/panels/application/SharedStorageTreeElement.ts", "../../../../../../front_end/panels/application/SharedStorageItemsView.ts", "../../../../../../front_end/panels/application/KeyValueStorageItemsView.ts", "../../../../../../front_end/panels/application/StorageItemsToolbar.ts", "../../../../../../front_end/panels/application/StorageBucketsTreeElement.ts", "../../../../../../front_end/panels/application/StorageView.ts", "storageView.css.js", "../../../../../../front_end/panels/application/TrustTokensTreeElement.ts", "../../../../../../front_end/panels/application/CookieItemsView.ts", "cookieItemsView.css.js", "../../../../../../front_end/panels/application/DOMStorageItemsView.ts", "../../../../../../front_end/panels/application/ExtensionStorageItemsView.ts", "../../../../../../front_end/panels/application/ResourcesPanel.ts", "resourcesPanel.css.js"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008, 2010 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n * Copyright (C) 2013 Samsung Electronics. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ApplicationPanelTreeElement, ExpandableApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport {AppManifestView, Events as AppManifestViewEvents} from './AppManifestView.js';\nimport {BackForwardCacheTreeElement} from './BackForwardCacheTreeElement.js';\nimport {BackgroundServiceModel} from './BackgroundServiceModel.js';\nimport {BackgroundServiceView} from './BackgroundServiceView.js';\nimport {BounceTrackingMitigationsTreeElement} from './BounceTrackingMitigationsTreeElement.js';\nimport * as ApplicationComponents from './components/components.js';\nimport {type DOMStorage, DOMStorageModel, Events as DOMStorageModelEvents} from './DOMStorageModel.js';\nimport {\n  Events as ExtensionStorageModelEvents,\n  type ExtensionStorage,\n  ExtensionStorageModel,\n} from './ExtensionStorageModel.js';\nimport {\n  type Database as IndexedDBModelDatabase,\n  type DatabaseId,\n  Events as IndexedDBModelEvents,\n  type Index,\n  IndexedDBModel,\n  type ObjectStore,\n} from './IndexedDBModel.js';\nimport {IDBDatabaseView, IDBDataView} from './IndexedDBViews.js';\nimport {Events as InterestGroupModelEvents, InterestGroupStorageModel} from './InterestGroupStorageModel.js';\nimport {InterestGroupTreeElement} from './InterestGroupTreeElement.js';\nimport {OpenedWindowDetailsView, WorkerDetailsView} from './OpenedWindowDetailsView.js';\nimport type * as PreloadingHelper from './preloading/helper/helper.js';\nimport {\n  PreloadingSummaryTreeElement,\n} from './PreloadingTreeElement.js';\nimport {ReportingApiTreeElement} from './ReportingApiTreeElement.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\nimport resourcesSidebarStyles from './resourcesSidebar.css.js';\nimport {ServiceWorkerCacheTreeElement} from './ServiceWorkerCacheTreeElement.js';\nimport {ServiceWorkersView} from './ServiceWorkersView.js';\nimport {SharedStorageListTreeElement} from './SharedStorageListTreeElement.js';\nimport {\n  Events as SharedStorageModelEvents,\n  type SharedStorageForOrigin,\n  SharedStorageModel,\n} from './SharedStorageModel.js';\nimport {SharedStorageTreeElement} from './SharedStorageTreeElement.js';\nimport {StorageBucketsTreeParentElement} from './StorageBucketsTreeElement.js';\nimport {StorageView} from './StorageView.js';\nimport {TrustTokensTreeElement} from './TrustTokensTreeElement.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  application: 'Application',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  storage: 'Storage',\n  /**\n   * @description Text in Application Panelthat shows if no local storage\n   *             can be shown.\n   */\n  noLocalStorage: 'No local storage detected',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  localStorage: 'Local storage',\n  /**\n   * @description Text in the Application panel describing the local storage tab.\n   */\n  localStorageDescription: 'On this page you can view, add, edit, and delete local storage key-value pairs.',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  sessionStorage: 'Session storage',\n  /**\n   * @description Text in Application Panel if no session storage can be shown.\n   */\n  noSessionStorage: 'No session storage detected',\n  /**\n   * @description Text in the Application panel describing the session storage tab.\n   */\n  sessionStorageDescription: 'On this page you can view, add, edit, and delete session storage key-value pairs.',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  extensionStorage: 'Extension storage',\n  /**\n   * @description Text in Application Panel if no extension storage can be shown\n   */\n  noExtensionStorage: 'No extension storage detected',\n  /**\n   * @description Text in the Application panel describing the extension storage tab.\n   */\n  extensionStorageDescription: 'On this page you can view, add, edit, and delete extension storage key-value pairs.',\n  /**\n   * @description Text for extension session storage in Application panel\n   */\n  extensionSessionStorage: 'Session',\n  /**\n   * @description Text for extension local storage in Application panel\n   */\n  extensionLocalStorage: 'Local',\n  /**\n   * @description Text for extension sync storage in Application panel\n   */\n  extensionSyncStorage: 'Sync',\n  /**\n   * @description Text for extension managed storage in Application panel\n   */\n  extensionManagedStorage: 'Managed',\n  /**\n   * @description Text for web cookies\n   */\n  cookies: 'Cookies',\n  /**\n   * @description Text in the Application Panel if no cookies are set\n   */\n  noCookies: 'No cookies set',\n  /**\n   * @description Text for web cookies\n   */\n  cookiesDescription: 'On this page you can view, add, edit, and delete cookies.',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  backgroundServices: 'Background services',\n  /**\n   * @description Text for rendering frames\n   */\n  frames: 'Frames',\n  /**\n   * @description Text that appears on a button for the manifest resource type filter.\n   */\n  manifest: 'Manifest',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  noManifestDetected: 'No manifest detected',\n  /**\n   * @description Description text on manifests in App Manifest View of the Application panel which describes the app manifest view tab\n   */\n  manifestDescription:\n      'A manifest defines how your app appears on phone’s home screens and what the app looks like on launch.',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  appManifest: 'Manifest',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  indexeddb: 'IndexedDB',\n  /**\n   * @description Text in Application Panel if no indexedDB is detected\n   */\n  noIndexeddb: 'No indexedDB detected',\n  /**\n   * @description Text in the Application panel describing the extension storage tab.\n   */\n  indexeddbDescription: 'On this page you can view and delete indexedDB key-value pairs and databases.',\n  /**\n   * @description A context menu item in the Application Panel Sidebar of the Application panel\n   */\n  refreshIndexeddb: 'Refresh IndexedDB',\n  /**\n   * @description Tooltip in Application Panel Sidebar of the Application panel\n   * @example {1.0} PH1\n   */\n  versionSEmpty: 'Version: {PH1} (empty)',\n  /**\n   * @description Tooltip in Application Panel Sidebar of the Application panel\n   * @example {1.0} PH1\n   */\n  versionS: 'Version: {PH1}',\n  /**\n   * @description Text to clear content\n   */\n  clear: 'Clear',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   * @example {\"key path\"} PH1\n   */\n  keyPathS: 'Key path: {PH1}',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  localFiles: 'Local Files',\n  /**\n   * @description Tooltip in Application Panel Sidebar of the Application panel\n   * @example {https://example.com} PH1\n   */\n  cookiesUsedByFramesFromS: 'Cookies used by frames from {PH1}',\n  /**\n   * @description Text in Frames View of the Application panel\n   */\n  openedWindows: 'Opened Windows',\n  /**\n   * @description Text in Frames View of the Application panel\n   */\n  openedWindowsDescription: 'On this page you can view windows opened via window\\.open\\(\\).',\n  /**\n   * @description Label for plural of worker type: web workers\n   */\n  webWorkers: 'Web Workers',\n  /**\n   * @description Label in frame tree for unavailable document\n   */\n  documentNotAvailable: 'No document detected',\n  /**\n   * @description Description of content of unavailable document in Application panel\n   */\n  theContentOfThisDocumentHasBeen:\n      'The content of this document has been generated dynamically via \\'document.write()\\'.',\n  /**\n   * @description Text in Frames View of the Application panel\n   */\n  windowWithoutTitle: 'Window without title',\n  /**\n   * @description Default name for worker\n   */\n  worker: 'worker',\n  /**\n   * @description Description text for describing the dedicated worker tab.\n   */\n  workerDescription: 'On this page you can view dedicated workers that are created by the parent frame.',\n  /**\n   * @description Aria text for screen reader to announce they can scroll to top of manifest if invoked\n   */\n  onInvokeManifestAlert: 'Manifest: Invoke to scroll to the top of manifest',\n  /**\n   * @description Aria text for screen reader to announce they can scroll to a section if invoked\n   * @example {\"Identity\"} PH1\n   */\n  beforeInvokeAlert: '{PH1}: Invoke to scroll to this section in manifest',\n  /**\n   * @description Alert message for screen reader to announce which subsection is being scrolled to\n   * @example {\"Identity\"} PH1\n   */\n  onInvokeAlert: 'Scrolled to {PH1}',\n  /**\n   * @description Application sidebar panel\n   */\n  applicationSidebarPanel: 'Application panel sidebar',\n  /**\n   * @description Tooltip in Application Panel Sidebar of the Application panel\n   * @example {https://example.com} PH1\n   */\n  thirdPartyPhaseout: 'Cookies from {PH1} may have been blocked due to third-party cookie phaseout.',\n  /**\n   * @description Description text in the Application Panel describing a frame's resources\n   */\n  resourceDescription: 'On this page you can view the frame\\'s resources.'\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ApplicationPanelSidebar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction assertNotMainTarget(targetId: Protocol.Target.TargetID|'main'): asserts targetId is Protocol.Target.TargetID {\n  if (targetId === 'main') {\n    throw new Error('Unexpected main target id');\n  }\n}\n\nfunction nameForExtensionStorageArea(storageArea: Protocol.Extensions.StorageArea): string {\n  switch (storageArea) {\n    case Protocol.Extensions.StorageArea.Session:\n      return i18nString(UIStrings.extensionSessionStorage);\n    case Protocol.Extensions.StorageArea.Local:\n      return i18nString(UIStrings.extensionLocalStorage);\n    case Protocol.Extensions.StorageArea.Sync:\n      return i18nString(UIStrings.extensionSyncStorage);\n    case Protocol.Extensions.StorageArea.Managed:\n      return i18nString(UIStrings.extensionManagedStorage);\n    default:\n      throw new Error(`Unrecognized storage type: ${storageArea}`);\n  }\n}\n\nexport namespace SharedStorageTreeElementDispatcher {\n  export const enum Events {\n    SHARED_STORAGE_TREE_ELEMENT_ADDED = 'SharedStorageTreeElementAdded',\n  }\n\n  export interface SharedStorageTreeElementAddedEvent {\n    origin: string;\n  }\n\n  export interface EventTypes {\n    [Events.SHARED_STORAGE_TREE_ELEMENT_ADDED]: SharedStorageTreeElementAddedEvent;\n  }\n}\n\nexport class ApplicationPanelSidebar extends UI.Widget.VBox implements SDK.TargetManager.Observer {\n  panel: ResourcesPanel;\n  private readonly sidebarTree: UI.TreeOutline.TreeOutlineInShadow;\n  private readonly applicationTreeElement: UI.TreeOutline.TreeElement;\n  serviceWorkersTreeElement: ServiceWorkersTreeElement;\n  localStorageListTreeElement: ExpandableApplicationPanelTreeElement;\n  sessionStorageListTreeElement: ExpandableApplicationPanelTreeElement;\n  extensionStorageListTreeElement: ExpandableApplicationPanelTreeElement;\n  indexedDBListTreeElement: IndexedDBTreeElement;\n  interestGroupTreeElement: InterestGroupTreeElement;\n  cookieListTreeElement: ExpandableApplicationPanelTreeElement;\n  trustTokensTreeElement: TrustTokensTreeElement;\n  cacheStorageListTreeElement: ServiceWorkerCacheTreeElement;\n  sharedStorageListTreeElement: SharedStorageListTreeElement;\n  storageBucketsTreeElement: StorageBucketsTreeParentElement|undefined;\n  private backForwardCacheListTreeElement?: BackForwardCacheTreeElement;\n  backgroundFetchTreeElement: BackgroundServiceTreeElement;\n  backgroundSyncTreeElement: BackgroundServiceTreeElement;\n  bounceTrackingMitigationsTreeElement: BounceTrackingMitigationsTreeElement;\n  notificationsTreeElement: BackgroundServiceTreeElement;\n  paymentHandlerTreeElement: BackgroundServiceTreeElement;\n  periodicBackgroundSyncTreeElement: BackgroundServiceTreeElement;\n  pushMessagingTreeElement: BackgroundServiceTreeElement;\n  reportingApiTreeElement: ReportingApiTreeElement;\n  preloadingSummaryTreeElement: PreloadingSummaryTreeElement|undefined;\n  private readonly resourcesSection: ResourcesSection;\n  private domStorageTreeElements: Map<DOMStorage, DOMStorageTreeElement>;\n  private extensionIdToStorageTreeParentElement: Map<string, ExtensionStorageTreeParentElement>;\n  private extensionStorageModels: ExtensionStorageModel[];\n  private extensionStorageTreeElements: Map<string, ExtensionStorageTreeElement>;\n  private sharedStorageTreeElements: Map<string, SharedStorageTreeElement>;\n  private domains: Record<string, boolean>;\n  // Holds main frame target.\n  private target?: SDK.Target.Target;\n  private previousHoveredElement?: FrameTreeElement;\n  readonly sharedStorageTreeElementDispatcher:\n      Common.ObjectWrapper.ObjectWrapper<SharedStorageTreeElementDispatcher.EventTypes>;\n\n  constructor(panel: ResourcesPanel) {\n    super();\n    this.panel = panel;\n\n    this.sidebarTree = new UI.TreeOutline.TreeOutlineInShadow(UI.TreeOutline.TreeVariant.NAVIGATION_TREE);\n    this.sidebarTree.registerRequiredCSS(resourcesSidebarStyles);\n    this.sidebarTree.element.classList.add('resources-sidebar');\n    this.sidebarTree.setHideOverflow(true);\n\n    this.sidebarTree.element.classList.add('filter-all');\n    // Listener needs to have been set up before the elements are added\n    this.sidebarTree.addEventListener(UI.TreeOutline.Events.ElementAttached, this.treeElementAdded, this);\n\n    this.contentElement.appendChild(this.sidebarTree.element);\n\n    const applicationSectionTitle = i18nString(UIStrings.application);\n    this.applicationTreeElement = this.addSidebarSection(applicationSectionTitle, 'application');\n    const applicationPanelSidebar = this.applicationTreeElement.treeOutline?.contentElement;\n    if (applicationPanelSidebar) {\n      applicationPanelSidebar.ariaLabel = i18nString(UIStrings.applicationSidebarPanel);\n    }\n    const manifestTreeElement = new AppManifestTreeElement(panel);\n    this.applicationTreeElement.appendChild(manifestTreeElement);\n    manifestTreeElement.generateChildren();\n    this.serviceWorkersTreeElement = new ServiceWorkersTreeElement(panel);\n    this.applicationTreeElement.appendChild(this.serviceWorkersTreeElement);\n    const clearStorageTreeElement = new ClearStorageTreeElement(panel);\n    this.applicationTreeElement.appendChild(clearStorageTreeElement);\n\n    const storageSectionTitle = i18nString(UIStrings.storage);\n    const storageTreeElement = this.addSidebarSection(storageSectionTitle, 'storage');\n    this.localStorageListTreeElement = new ExpandableApplicationPanelTreeElement(\n        panel, i18nString(UIStrings.localStorage), i18nString(UIStrings.noLocalStorage),\n        i18nString(UIStrings.localStorageDescription), 'local-storage');\n    this.localStorageListTreeElement.setLink(\n        'https://developer.chrome.com/docs/devtools/storage/localstorage/' as Platform.DevToolsPath.UrlString);\n    const localStorageIcon = IconButton.Icon.create('table');\n    this.localStorageListTreeElement.setLeadingIcons([localStorageIcon]);\n\n    storageTreeElement.appendChild(this.localStorageListTreeElement);\n    this.sessionStorageListTreeElement = new ExpandableApplicationPanelTreeElement(\n        panel, i18nString(UIStrings.sessionStorage), i18nString(UIStrings.noSessionStorage),\n        i18nString(UIStrings.sessionStorageDescription), 'session-storage');\n    this.sessionStorageListTreeElement.setLink(\n        'https://developer.chrome.com/docs/devtools/storage/sessionstorage/' as Platform.DevToolsPath.UrlString);\n    const sessionStorageIcon = IconButton.Icon.create('table');\n    this.sessionStorageListTreeElement.setLeadingIcons([sessionStorageIcon]);\n\n    storageTreeElement.appendChild(this.sessionStorageListTreeElement);\n\n    this.extensionStorageListTreeElement = new ExpandableApplicationPanelTreeElement(\n        panel, i18nString(UIStrings.extensionStorage), i18nString(UIStrings.noExtensionStorage),\n        i18nString(UIStrings.extensionStorageDescription), 'extension-storage');\n    this.extensionStorageListTreeElement.setLink(\n        'https://developer.chrome.com/docs/extensions/reference/api/storage/' as Platform.DevToolsPath.UrlString);\n    const extensionStorageIcon = IconButton.Icon.create('table');\n    this.extensionStorageListTreeElement.setLeadingIcons([extensionStorageIcon]);\n\n    storageTreeElement.appendChild(this.extensionStorageListTreeElement);\n\n    this.indexedDBListTreeElement = new IndexedDBTreeElement(panel);\n    this.indexedDBListTreeElement.setLink(\n        'https://developer.chrome.com/docs/devtools/storage/indexeddb/' as Platform.DevToolsPath.UrlString);\n    storageTreeElement.appendChild(this.indexedDBListTreeElement);\n\n    this.cookieListTreeElement = new ExpandableApplicationPanelTreeElement(\n        panel, i18nString(UIStrings.cookies), i18nString(UIStrings.noCookies), i18nString(UIStrings.cookiesDescription),\n        'cookies');\n    this.cookieListTreeElement.setLink(\n        'https://developer.chrome.com/docs/devtools/storage/cookies/' as Platform.DevToolsPath.UrlString);\n    const cookieIcon = IconButton.Icon.create('cookie');\n    this.cookieListTreeElement.setLeadingIcons([cookieIcon]);\n    storageTreeElement.appendChild(this.cookieListTreeElement);\n\n    this.trustTokensTreeElement = new TrustTokensTreeElement(panel);\n    storageTreeElement.appendChild(this.trustTokensTreeElement);\n\n    this.interestGroupTreeElement = new InterestGroupTreeElement(panel);\n    storageTreeElement.appendChild(this.interestGroupTreeElement);\n\n    this.sharedStorageListTreeElement = new SharedStorageListTreeElement(panel);\n    storageTreeElement.appendChild(this.sharedStorageListTreeElement);\n\n    this.cacheStorageListTreeElement = new ServiceWorkerCacheTreeElement(panel);\n    storageTreeElement.appendChild(this.cacheStorageListTreeElement);\n\n    this.storageBucketsTreeElement = new StorageBucketsTreeParentElement(panel);\n    storageTreeElement.appendChild(this.storageBucketsTreeElement);\n\n    const backgroundServiceSectionTitle = i18nString(UIStrings.backgroundServices);\n    const backgroundServiceTreeElement = this.addSidebarSection(backgroundServiceSectionTitle, 'background-services');\n\n    this.backForwardCacheListTreeElement = new BackForwardCacheTreeElement(panel);\n    backgroundServiceTreeElement.appendChild(this.backForwardCacheListTreeElement);\n    this.backgroundFetchTreeElement =\n        new BackgroundServiceTreeElement(panel, Protocol.BackgroundService.ServiceName.BackgroundFetch);\n    backgroundServiceTreeElement.appendChild(this.backgroundFetchTreeElement);\n    this.backgroundSyncTreeElement =\n        new BackgroundServiceTreeElement(panel, Protocol.BackgroundService.ServiceName.BackgroundSync);\n    backgroundServiceTreeElement.appendChild(this.backgroundSyncTreeElement);\n\n    this.bounceTrackingMitigationsTreeElement = new BounceTrackingMitigationsTreeElement(panel);\n    backgroundServiceTreeElement.appendChild(this.bounceTrackingMitigationsTreeElement);\n\n    this.notificationsTreeElement =\n        new BackgroundServiceTreeElement(panel, Protocol.BackgroundService.ServiceName.Notifications);\n    backgroundServiceTreeElement.appendChild(this.notificationsTreeElement);\n    this.paymentHandlerTreeElement =\n        new BackgroundServiceTreeElement(panel, Protocol.BackgroundService.ServiceName.PaymentHandler);\n    backgroundServiceTreeElement.appendChild(this.paymentHandlerTreeElement);\n    this.periodicBackgroundSyncTreeElement =\n        new BackgroundServiceTreeElement(panel, Protocol.BackgroundService.ServiceName.PeriodicBackgroundSync);\n    backgroundServiceTreeElement.appendChild(this.periodicBackgroundSyncTreeElement);\n\n    this.preloadingSummaryTreeElement = new PreloadingSummaryTreeElement(panel);\n    backgroundServiceTreeElement.appendChild(this.preloadingSummaryTreeElement);\n    this.preloadingSummaryTreeElement.constructChildren(panel);\n\n    this.pushMessagingTreeElement =\n        new BackgroundServiceTreeElement(panel, Protocol.BackgroundService.ServiceName.PushMessaging);\n    backgroundServiceTreeElement.appendChild(this.pushMessagingTreeElement);\n    this.reportingApiTreeElement = new ReportingApiTreeElement(panel);\n    backgroundServiceTreeElement.appendChild(this.reportingApiTreeElement);\n\n    const resourcesSectionTitle = i18nString(UIStrings.frames);\n    const resourcesTreeElement = this.addSidebarSection(resourcesSectionTitle, 'frames');\n    this.resourcesSection = new ResourcesSection(panel, resourcesTreeElement);\n\n    this.domStorageTreeElements = new Map();\n    this.extensionIdToStorageTreeParentElement = new Map();\n    this.extensionStorageTreeElements = new Map();\n    this.extensionStorageModels = [];\n    this.sharedStorageTreeElements = new Map();\n    this.domains = {};\n\n    this.sidebarTree.contentElement.addEventListener('mousemove', this.onmousemove.bind(this), false);\n    this.sidebarTree.contentElement.addEventListener('mouseleave', this.onmouseleave.bind(this), false);\n\n    SDK.TargetManager.TargetManager.instance().observeTargets(this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.FrameNavigated, this.frameNavigated, this,\n        {scoped: true});\n\n    const selection = this.panel.lastSelectedItemPath();\n    if (!selection.length) {\n      manifestTreeElement.select();\n    }\n\n    SDK.TargetManager.TargetManager.instance().observeModels(\n        DOMStorageModel, {\n          modelAdded: (model: DOMStorageModel) => this.domStorageModelAdded(model),\n          modelRemoved: (model: DOMStorageModel) => this.domStorageModelRemoved(model),\n        },\n        {scoped: true});\n\n    SDK.TargetManager.TargetManager.instance().observeModels(\n        ExtensionStorageModel, {\n          modelAdded: (model: ExtensionStorageModel) => this.extensionStorageModelAdded(model),\n          modelRemoved: (model: ExtensionStorageModel) => this.extensionStorageModelRemoved(model),\n        },\n        {scoped: true});\n\n    SDK.TargetManager.TargetManager.instance().observeModels(\n        IndexedDBModel, {\n          modelAdded: (model: IndexedDBModel) => this.indexedDBModelAdded(model),\n          modelRemoved: (model: IndexedDBModel) => this.indexedDBModelRemoved(model),\n        },\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().observeModels(\n        InterestGroupStorageModel, {\n          modelAdded: (model: InterestGroupStorageModel) => this.interestGroupModelAdded(model),\n          modelRemoved: (model: InterestGroupStorageModel) => this.interestGroupModelRemoved(model),\n        },\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().observeModels(\n        SharedStorageModel, {\n          modelAdded: (model: SharedStorageModel) => this.sharedStorageModelAdded(model).catch(err => {\n            console.error(err);\n          }),\n          modelRemoved: (model: SharedStorageModel) => this.sharedStorageModelRemoved(model),\n        },\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().observeModels(\n        SDK.StorageBucketsModel.StorageBucketsModel, {\n          modelAdded: (model: SDK.StorageBucketsModel.StorageBucketsModel) => this.storageBucketsModelAdded(model),\n          modelRemoved: (model: SDK.StorageBucketsModel.StorageBucketsModel) => this.storageBucketsModelRemoved(model),\n        },\n        {scoped: true});\n\n    this.sharedStorageTreeElementDispatcher =\n        new Common.ObjectWrapper.ObjectWrapper<SharedStorageTreeElementDispatcher.EventTypes>();\n\n    this.contentElement.style.contain = 'layout style';\n  }\n\n  private addSidebarSection(title: string, jslogContext: string): UI.TreeOutline.TreeElement {\n    const treeElement = new UI.TreeOutline.TreeElement(title, true, jslogContext);\n    treeElement.listItemElement.classList.add('storage-group-list-item');\n    treeElement.setCollapsible(false);\n    treeElement.selectable = false;\n    this.sidebarTree.appendChild(treeElement);\n    UI.ARIAUtils.markAsHeading(treeElement.listItemElement, 3);\n    UI.ARIAUtils.setLabel(treeElement.childrenListElement, title);\n    return treeElement;\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    if (target !== target.outermostTarget()) {\n      return;\n    }\n\n    this.target = target;\n\n    const interestGroupModel = target.model(InterestGroupStorageModel);\n    if (interestGroupModel) {\n      interestGroupModel.addEventListener(\n          InterestGroupModelEvents.INTEREST_GROUP_ACCESS, this.interestGroupAccess, this);\n    }\n\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      return;\n    }\n\n    if (resourceTreeModel.cachedResourcesLoaded()) {\n      this.initialize();\n    }\n\n    resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.CachedResourcesLoaded, this.initialize, this);\n    resourceTreeModel.addEventListener(\n        SDK.ResourceTreeModel.Events.WillLoadCachedResources, this.resetWithFrames, this);\n  }\n\n  targetRemoved(target: SDK.Target.Target): void {\n    if (target !== this.target) {\n      return;\n    }\n    delete this.target;\n\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (resourceTreeModel) {\n      resourceTreeModel.removeEventListener(SDK.ResourceTreeModel.Events.CachedResourcesLoaded, this.initialize, this);\n      resourceTreeModel.removeEventListener(\n          SDK.ResourceTreeModel.Events.WillLoadCachedResources, this.resetWithFrames, this);\n    }\n\n    const interestGroupModel = target.model(InterestGroupStorageModel);\n    if (interestGroupModel) {\n      interestGroupModel.removeEventListener(\n          InterestGroupModelEvents.INTEREST_GROUP_ACCESS, this.interestGroupAccess, this);\n    }\n\n    this.resetWithFrames();\n  }\n\n  override focus(): void {\n    this.sidebarTree.focus();\n  }\n\n  private initialize(): void {\n    for (const frame of SDK.ResourceTreeModel.ResourceTreeModel.frames()) {\n      this.addCookieDocument(frame);\n    }\n    const interestGroupModel = this.target?.model(InterestGroupStorageModel);\n    if (interestGroupModel) {\n      interestGroupModel.enable();\n    }\n\n    this.cacheStorageListTreeElement.initialize();\n    const backgroundServiceModel = this.target?.model(BackgroundServiceModel) || null;\n    this.backgroundFetchTreeElement.initialize(backgroundServiceModel);\n    this.backgroundSyncTreeElement.initialize(backgroundServiceModel);\n    this.notificationsTreeElement.initialize(backgroundServiceModel);\n    this.paymentHandlerTreeElement.initialize(backgroundServiceModel);\n    this.periodicBackgroundSyncTreeElement.initialize(backgroundServiceModel);\n    this.pushMessagingTreeElement.initialize(backgroundServiceModel);\n    this.storageBucketsTreeElement?.initialize();\n\n    const preloadingModel = this.target?.model(SDK.PreloadingModel.PreloadingModel);\n    if (preloadingModel) {\n      this.preloadingSummaryTreeElement?.initialize(preloadingModel);\n    }\n  }\n\n  private domStorageModelAdded(model: DOMStorageModel): void {\n    model.enable();\n    model.storages().forEach(this.addDOMStorage.bind(this));\n    model.addEventListener(DOMStorageModelEvents.DOM_STORAGE_ADDED, this.domStorageAdded, this);\n    model.addEventListener(DOMStorageModelEvents.DOM_STORAGE_REMOVED, this.domStorageRemoved, this);\n  }\n\n  private domStorageModelRemoved(model: DOMStorageModel): void {\n    model.storages().forEach(this.removeDOMStorage.bind(this));\n    model.removeEventListener(DOMStorageModelEvents.DOM_STORAGE_ADDED, this.domStorageAdded, this);\n    model.removeEventListener(DOMStorageModelEvents.DOM_STORAGE_REMOVED, this.domStorageRemoved, this);\n  }\n\n  private extensionStorageModelAdded(model: ExtensionStorageModel): void {\n    this.extensionStorageModels.push(model);\n    model.enable();\n    model.storages().forEach(this.addExtensionStorage.bind(this));\n    model.addEventListener(ExtensionStorageModelEvents.EXTENSION_STORAGE_ADDED, this.extensionStorageAdded, this);\n    model.addEventListener(ExtensionStorageModelEvents.EXTENSION_STORAGE_REMOVED, this.extensionStorageRemoved, this);\n  }\n\n  private extensionStorageModelRemoved(model: ExtensionStorageModel): void {\n    console.assert(this.extensionStorageModels.includes(model));\n    this.extensionStorageModels.splice(this.extensionStorageModels.indexOf(model), 1);\n    model.storages().forEach(this.removeExtensionStorage.bind(this));\n    model.removeEventListener(ExtensionStorageModelEvents.EXTENSION_STORAGE_ADDED, this.extensionStorageAdded, this);\n    model.removeEventListener(\n        ExtensionStorageModelEvents.EXTENSION_STORAGE_REMOVED, this.extensionStorageRemoved, this);\n  }\n\n  private indexedDBModelAdded(model: IndexedDBModel): void {\n    model.enable();\n    this.indexedDBListTreeElement.addIndexedDBForModel(model);\n  }\n\n  private indexedDBModelRemoved(model: IndexedDBModel): void {\n    this.indexedDBListTreeElement.removeIndexedDBForModel(model);\n  }\n\n  private interestGroupModelAdded(model: InterestGroupStorageModel): void {\n    model.enable();\n    model.addEventListener(InterestGroupModelEvents.INTEREST_GROUP_ACCESS, this.interestGroupAccess, this);\n  }\n\n  private interestGroupModelRemoved(model: InterestGroupStorageModel): void {\n    model.disable();\n    model.removeEventListener(InterestGroupModelEvents.INTEREST_GROUP_ACCESS, this.interestGroupAccess, this);\n  }\n\n  private async sharedStorageModelAdded(model: SharedStorageModel): Promise<void> {\n    await model.enable();\n    for (const storage of model.storages()) {\n      await this.addSharedStorage(storage);\n    }\n    model.addEventListener(SharedStorageModelEvents.SHARED_STORAGE_ADDED, this.sharedStorageAdded, this);\n    model.addEventListener(SharedStorageModelEvents.SHARED_STORAGE_REMOVED, this.sharedStorageRemoved, this);\n    model.addEventListener(SharedStorageModelEvents.SHARED_STORAGE_ACCESS, this.sharedStorageAccess, this);\n  }\n\n  private sharedStorageModelRemoved(model: SharedStorageModel): void {\n    model.disable();\n    for (const storage of model.storages()) {\n      this.removeSharedStorage(storage);\n    }\n    model.removeEventListener(SharedStorageModelEvents.SHARED_STORAGE_ADDED, this.sharedStorageAdded, this);\n    model.removeEventListener(SharedStorageModelEvents.SHARED_STORAGE_REMOVED, this.sharedStorageRemoved, this);\n    model.removeEventListener(SharedStorageModelEvents.SHARED_STORAGE_ACCESS, this.sharedStorageAccess, this);\n  }\n\n  private storageBucketsModelAdded(model: SDK.StorageBucketsModel.StorageBucketsModel): void {\n    model.enable();\n  }\n\n  private storageBucketsModelRemoved(model: SDK.StorageBucketsModel.StorageBucketsModel): void {\n    this.storageBucketsTreeElement?.removeBucketsForModel(model);\n  }\n\n  private resetWithFrames(): void {\n    this.resourcesSection.reset();\n    this.reset();\n  }\n\n  private treeElementAdded(event: Common.EventTarget.EventTargetEvent<UI.TreeOutline.TreeElement>): void {\n    // On tree item selection its itemURL and those of its parents are persisted.\n    // On reload/navigation we check for matches starting from the root on the\n    // path to the current element. Matching nodes are expanded until we hit a\n    // mismatch. This way we ensure that the longest matching path starting from\n    // the root is expanded, even if we cannot match the whole path.\n    const selection = this.panel.lastSelectedItemPath();\n    if (!selection.length) {\n      return;\n    }\n    const element = event.data;\n    const elementPath = [element as UI.TreeOutline.TreeElement | ApplicationPanelTreeElement];\n    for (let parent = element.parent as UI.TreeOutline.TreeElement | ApplicationPanelTreeElement | null;\n         parent && 'itemURL' in parent && parent.itemURL; parent = parent.parent) {\n      elementPath.push(parent);\n    }\n\n    let i = selection.length - 1;\n    let j = elementPath.length - 1;\n    while (i >= 0 && j >= 0 && selection[i] === (elementPath[j] as ApplicationPanelTreeElement).itemURL) {\n      if (!elementPath[j].expanded) {\n        if (i > 0) {\n          elementPath[j].expand();\n        }\n        if (!elementPath[j].selected) {\n          elementPath[j].select();\n        }\n      }\n      i--;\n      j--;\n    }\n  }\n\n  private reset(): void {\n    this.domains = {};\n    this.cookieListTreeElement.removeChildren();\n    this.interestGroupTreeElement.clearEvents();\n  }\n\n  private frameNavigated(event: Common.EventTarget.EventTargetEvent<SDK.ResourceTreeModel.ResourceTreeFrame>): void {\n    const frame = event.data;\n\n    if (frame.isOutermostFrame()) {\n      this.reset();\n    }\n    this.addCookieDocument(frame);\n  }\n\n  private interestGroupAccess(event: Common.EventTarget.EventTargetEvent<Protocol.Storage.InterestGroupAccessedEvent>):\n      void {\n    this.interestGroupTreeElement.addEvent(event.data);\n  }\n\n  private addCookieDocument(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    // In case the current frame was unreachable, show its cookies\n    // instead of the error interstitials because they might help to\n    // debug why the frame was unreachable.\n    const urlToParse = frame.unreachableUrl() || frame.url;\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(urlToParse);\n    if (!parsedURL || (parsedURL.scheme !== 'http' && parsedURL.scheme !== 'https' && parsedURL.scheme !== 'file')) {\n      return;\n    }\n\n    const domain = parsedURL.securityOrigin();\n    if (!this.domains[domain]) {\n      this.domains[domain] = true;\n      const cookieDomainTreeElement = new CookieTreeElement(this.panel, frame, parsedURL);\n      this.cookieListTreeElement.appendChild(cookieDomainTreeElement);\n    }\n  }\n\n  private domStorageAdded(event: Common.EventTarget.EventTargetEvent<DOMStorage>): void {\n    const domStorage = (event.data);\n    this.addDOMStorage(domStorage);\n  }\n\n  private addDOMStorage(domStorage: DOMStorage): void {\n    console.assert(!this.domStorageTreeElements.get(domStorage));\n    console.assert(Boolean(domStorage.storageKey));\n\n    const domStorageTreeElement = new DOMStorageTreeElement(this.panel, domStorage);\n    this.domStorageTreeElements.set(domStorage, domStorageTreeElement);\n    if (domStorage.isLocalStorage) {\n      this.localStorageListTreeElement.appendChild(domStorageTreeElement, comparator);\n    } else {\n      this.sessionStorageListTreeElement.appendChild(domStorageTreeElement, comparator);\n    }\n\n    function comparator(a: UI.TreeOutline.TreeElement, b: UI.TreeOutline.TreeElement): number {\n      const aTitle = a.titleAsText().toLocaleLowerCase();\n      const bTitle = b.titleAsText().toLocaleUpperCase();\n      return aTitle.localeCompare(bTitle);\n    }\n  }\n\n  private domStorageRemoved(event: Common.EventTarget.EventTargetEvent<DOMStorage>): void {\n    const domStorage = (event.data);\n    this.removeDOMStorage(domStorage);\n  }\n\n  private removeDOMStorage(domStorage: DOMStorage): void {\n    const treeElement = this.domStorageTreeElements.get(domStorage);\n    if (!treeElement) {\n      return;\n    }\n    const wasSelected = treeElement.selected;\n    const parentListTreeElement = treeElement.parent;\n    if (parentListTreeElement) {\n      parentListTreeElement.removeChild(treeElement);\n      if (wasSelected) {\n        parentListTreeElement.select();\n      }\n    }\n    this.domStorageTreeElements.delete(domStorage);\n  }\n\n  private extensionStorageAdded(event: Common.EventTarget.EventTargetEvent<ExtensionStorage>): void {\n    const extensionStorage = event.data;\n    this.addExtensionStorage(extensionStorage);\n  }\n\n  private useTreeViewForExtensionStorage(extensionStorage: ExtensionStorage): boolean {\n    // If the origin the storage is associated with matches the top-level\n    // target (e.g, an extension service worker or top-level\n    // chrome-extension:// page), there is likely only one extension in the\n    // context we are inspecting and we can show the storage as a direct child.\n    // In other contexts (where multiple extensions may be injected) use a tree\n    // view where storage areas are children of the extension they are\n    // associated with.\n    return !extensionStorage.matchesTarget(this.target);\n  }\n\n  private getExtensionStorageAreaParent(extensionStorage: ExtensionStorage): ApplicationPanelTreeElement|undefined {\n    if (!this.useTreeViewForExtensionStorage(extensionStorage)) {\n      return this.extensionStorageListTreeElement;\n    }\n\n    const existingParent = this.extensionIdToStorageTreeParentElement.get(extensionStorage.extensionId);\n    if (existingParent) {\n      return existingParent;\n    }\n\n    const parent =\n        new ExtensionStorageTreeParentElement(this.panel, extensionStorage.extensionId, extensionStorage.name);\n    this.extensionIdToStorageTreeParentElement.set(extensionStorage.extensionId, parent);\n    this.extensionStorageListTreeElement?.appendChild(parent);\n    return parent;\n  }\n\n  private addExtensionStorage(extensionStorage: ExtensionStorage): void {\n    if (this.extensionStorageModels.find(\n            m => m !== extensionStorage.model &&\n                m.storageForIdAndArea(extensionStorage.extensionId, extensionStorage.storageArea))) {\n      // There's at least one model that already has this storage area, so no need\n      // to do anything.\n      return;\n    }\n\n    console.assert(Boolean(this.extensionStorageListTreeElement));\n    console.assert(!this.extensionStorageTreeElements.get(extensionStorage.key));\n\n    const extensionStorageTreeElement = new ExtensionStorageTreeElement(this.panel, extensionStorage);\n    this.extensionStorageTreeElements.set(extensionStorage.key, extensionStorageTreeElement);\n    this.getExtensionStorageAreaParent(extensionStorage)?.appendChild(extensionStorageTreeElement, comparator);\n\n    function comparator(a: UI.TreeOutline.TreeElement, b: UI.TreeOutline.TreeElement): number {\n      const getStorageArea = (e: UI.TreeOutline.TreeElement): Protocol.Extensions.StorageArea =>\n          (e as ExtensionStorageTreeElement).storageArea;\n      const order = [\n        Protocol.Extensions.StorageArea.Session,\n        Protocol.Extensions.StorageArea.Local,\n        Protocol.Extensions.StorageArea.Sync,\n        Protocol.Extensions.StorageArea.Managed,\n      ];\n      return order.indexOf(getStorageArea(a)) - order.indexOf(getStorageArea(b));\n    }\n  }\n\n  private extensionStorageRemoved(event: Common.EventTarget.EventTargetEvent<ExtensionStorage>): void {\n    const extensionStorage = event.data;\n    this.removeExtensionStorage(extensionStorage);\n  }\n\n  private removeExtensionStorage(extensionStorage: ExtensionStorage): void {\n    if (this.extensionStorageModels.find(\n            (m => m.storageForIdAndArea(extensionStorage.extensionId, extensionStorage.storageArea)))) {\n      // There's at least one model that still has this storage area, so no need\n      // to do anything.\n      return;\n    }\n\n    const treeElement = this.extensionStorageTreeElements.get(extensionStorage.key);\n    if (!treeElement) {\n      return;\n    }\n    const wasSelected = treeElement.selected;\n    const parentListTreeElement = treeElement.parent;\n    if (parentListTreeElement) {\n      parentListTreeElement.removeChild(treeElement);\n      if (this.useTreeViewForExtensionStorage(extensionStorage) && parentListTreeElement.childCount() === 0) {\n        this.extensionStorageListTreeElement?.removeChild(parentListTreeElement);\n        this.extensionIdToStorageTreeParentElement.delete(extensionStorage.extensionId);\n      } else if (wasSelected) {\n        parentListTreeElement.select();\n      }\n    }\n    this.extensionStorageTreeElements.delete(extensionStorage.key);\n  }\n\n  private async sharedStorageAdded(event: Common.EventTarget.EventTargetEvent<SharedStorageForOrigin>): Promise<void> {\n    await this.addSharedStorage(event.data);\n  }\n\n  private async addSharedStorage(sharedStorage: SharedStorageForOrigin): Promise<void> {\n    const sharedStorageTreeElement = await SharedStorageTreeElement.createElement(this.panel, sharedStorage);\n\n    // A tree element for `sharedStorage.securityOrigin` may have been added while we were waiting for `sharedStorageTreeElement` to be created.\n    if (this.sharedStorageTreeElements.has(sharedStorage.securityOrigin)) {\n      return;\n    }\n    this.sharedStorageTreeElements.set(sharedStorage.securityOrigin, sharedStorageTreeElement);\n    this.sharedStorageListTreeElement.appendChild(sharedStorageTreeElement);\n    this.sharedStorageTreeElementDispatcher.dispatchEventToListeners(\n        SharedStorageTreeElementDispatcher.Events.SHARED_STORAGE_TREE_ELEMENT_ADDED,\n        {origin: sharedStorage.securityOrigin});\n  }\n\n  private sharedStorageRemoved(event: Common.EventTarget.EventTargetEvent<SharedStorageForOrigin>): void {\n    this.removeSharedStorage(event.data);\n  }\n\n  private removeSharedStorage(sharedStorage: SharedStorageForOrigin): void {\n    const treeElement = this.sharedStorageTreeElements.get(sharedStorage.securityOrigin);\n    if (!treeElement) {\n      return;\n    }\n    const wasSelected = treeElement.selected;\n    const parentListTreeElement = treeElement.parent;\n    if (parentListTreeElement) {\n      parentListTreeElement.removeChild(treeElement);\n      parentListTreeElement.setExpandable(parentListTreeElement.childCount() > 0);\n      if (wasSelected) {\n        parentListTreeElement.select();\n      }\n    }\n    this.sharedStorageTreeElements.delete(sharedStorage.securityOrigin);\n  }\n\n  private sharedStorageAccess(event: Common.EventTarget.EventTargetEvent<Protocol.Storage.SharedStorageAccessedEvent>):\n      void {\n    this.sharedStorageListTreeElement.addEvent(event.data);\n  }\n\n  async showResource(resource: SDK.Resource.Resource, line?: number, column?: number): Promise<void> {\n    await this.resourcesSection.revealResource(resource, line, column);\n  }\n\n  showFrame(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    this.resourcesSection.revealAndSelectFrame(frame);\n  }\n\n  showPreloadingRuleSetView(revealInfo: PreloadingHelper.PreloadingForward.RuleSetView): void {\n    if (this.preloadingSummaryTreeElement) {\n      this.preloadingSummaryTreeElement.expandAndRevealRuleSet(revealInfo);\n    }\n  }\n\n  showPreloadingAttemptViewWithFilter(filter: PreloadingHelper.PreloadingForward.AttemptViewWithFilter): void {\n    if (this.preloadingSummaryTreeElement) {\n      this.preloadingSummaryTreeElement.expandAndRevealAttempts(filter);\n    }\n  }\n\n  private onmousemove(event: MouseEvent): void {\n    const nodeUnderMouse = (event.target as Node);\n    if (!nodeUnderMouse) {\n      return;\n    }\n\n    const listNode = UI.UIUtils.enclosingNodeOrSelfWithNodeName(nodeUnderMouse, 'li');\n    if (!listNode) {\n      return;\n    }\n\n    const element = UI.TreeOutline.TreeElement.getTreeElementBylistItemNode(listNode);\n    if (this.previousHoveredElement === element) {\n      return;\n    }\n\n    if (this.previousHoveredElement) {\n      this.previousHoveredElement.hovered = false;\n      delete this.previousHoveredElement;\n    }\n\n    if (element instanceof FrameTreeElement) {\n      this.previousHoveredElement = element;\n      element.hovered = true;\n    }\n  }\n\n  private onmouseleave(_event: MouseEvent): void {\n    if (this.previousHoveredElement) {\n      this.previousHoveredElement.hovered = false;\n      delete this.previousHoveredElement;\n    }\n  }\n}\n\nexport class BackgroundServiceTreeElement extends ApplicationPanelTreeElement {\n  private serviceName: Protocol.BackgroundService.ServiceName;\n  private view: BackgroundServiceView|null;\n  private model: BackgroundServiceModel|null;\n  #selected: boolean;\n\n  constructor(storagePanel: ResourcesPanel, serviceName: Protocol.BackgroundService.ServiceName) {\n    super(\n        storagePanel, BackgroundServiceView.getUIString(serviceName), false,\n        Platform.StringUtilities.toKebabCase(serviceName));\n\n    this.serviceName = serviceName;\n\n    /* Whether the element has been selected. */\n    this.#selected = false;\n\n    this.view = null;\n\n    this.model = null;\n\n    const backgroundServiceIcon = IconButton.Icon.create(this.getIconType());\n    this.setLeadingIcons([backgroundServiceIcon]);\n  }\n\n  private getIconType(): string {\n    switch (this.serviceName) {\n      case Protocol.BackgroundService.ServiceName.BackgroundFetch:\n        return 'arrow-up-down';\n      case Protocol.BackgroundService.ServiceName.BackgroundSync:\n        return 'sync';\n      case Protocol.BackgroundService.ServiceName.PushMessaging:\n        return 'cloud';\n      case Protocol.BackgroundService.ServiceName.Notifications:\n        return 'bell';\n      case Protocol.BackgroundService.ServiceName.PaymentHandler:\n        return 'credit-card';\n      case Protocol.BackgroundService.ServiceName.PeriodicBackgroundSync:\n        return 'watch';\n      default:\n        console.error(`Service ${this.serviceName} does not have a dedicated icon`);\n        return 'table';\n    }\n  }\n\n  initialize(model: BackgroundServiceModel|null): void {\n    this.model = model;\n    // Show the view if the model was initialized after selection.\n    if (this.#selected && !this.view) {\n      this.onselect(false);\n    }\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return `background-service://${this.serviceName}` as Platform.DevToolsPath.UrlString;\n  }\n\n  override get selectable(): boolean {\n    if (!this.model) {\n      return false;\n    }\n    return super.selectable;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.#selected = true;\n\n    if (!this.model) {\n      return false;\n    }\n\n    if (!this.view) {\n      this.view = new BackgroundServiceView(this.serviceName, this.model);\n    }\n    this.showView(this.view);\n    UI.Context.Context.instance().setFlavor(BackgroundServiceView, this.view);\n    Host.userMetrics.panelShown('background_service_' + this.serviceName);\n    return false;\n  }\n}\n\nexport class ServiceWorkersTreeElement extends ApplicationPanelTreeElement {\n  private view?: ServiceWorkersView;\n\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, i18n.i18n.lockedString('Service workers'), false, 'service-workers');\n    const icon = IconButton.Icon.create('gears');\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'service-workers://' as Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new ServiceWorkersView();\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown('service-workers');\n    return false;\n  }\n}\n\nexport class AppManifestTreeElement extends ApplicationPanelTreeElement {\n  private view: AppManifestView;\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, i18nString(UIStrings.manifest), true, 'manifest');\n    const icon = IconButton.Icon.create('document');\n    this.setLeadingIcons([icon]);\n    self.onInvokeElement(this.listItemElement, this.onInvoke.bind(this));\n    const emptyView = new UI.EmptyWidget.EmptyWidget(\n        i18nString(UIStrings.noManifestDetected), i18nString(UIStrings.manifestDescription));\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    const reportView = new UI.ReportView.ReportView(i18nString(UIStrings.appManifest));\n    this.view = new AppManifestView(emptyView, reportView, new Common.Throttler.Throttler(1000));\n    UI.ARIAUtils.setLabel(this.listItemElement, i18nString(UIStrings.onInvokeManifestAlert));\n    const handleExpansion = (hasManifest: boolean): void => {\n      this.setExpandable(hasManifest);\n    };\n    this.view.addEventListener(AppManifestViewEvents.MANIFEST_DETECTED, event => handleExpansion(event.data));\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'manifest://' as Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.showView(this.view);\n    Host.userMetrics.panelShown('app-manifest');\n    return false;\n  }\n\n  generateChildren(): void {\n    const staticSections = this.view.getStaticSections();\n    for (const section of staticSections) {\n      const sectionElement = section.getTitleElement();\n      const childTitle = section.title();\n      const sectionFieldElement = section.getFieldElement();\n      const child = new ManifestChildTreeElement(\n          this.resourcesPanel, sectionElement, childTitle, sectionFieldElement, section.jslogContext || '');\n      this.appendChild(child);\n    }\n  }\n\n  onInvoke(): void {\n    this.view.getManifestElement().scrollIntoView();\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.onInvokeAlert, {PH1: this.listItemElement.title}));\n  }\n\n  showManifestView(): void {\n    this.showView(this.view);\n  }\n}\n\nexport class ManifestChildTreeElement extends ApplicationPanelTreeElement {\n  #sectionElement: Element;\n  #sectionFieldElement: HTMLElement;\n  constructor(\n      storagePanel: ResourcesPanel, element: Element, childTitle: string, fieldElement: HTMLElement,\n      jslogContext: string) {\n    super(storagePanel, childTitle, false, jslogContext);\n    const icon = IconButton.Icon.create('document');\n    this.setLeadingIcons([icon]);\n    this.#sectionElement = element;\n    this.#sectionFieldElement = fieldElement;\n    self.onInvokeElement(this.listItemElement, this.onInvoke.bind(this));\n    this.listItemElement.addEventListener('keydown', this.onInvokeElementKeydown.bind(this));\n    UI.ARIAUtils.setLabel(\n        this.listItemElement, i18nString(UIStrings.beforeInvokeAlert, {PH1: this.listItemElement.title}));\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'manifest://' + this.title as Platform.DevToolsPath.UrlString;\n  }\n\n  onInvoke(): void {\n    (this.parent as AppManifestTreeElement)?.showManifestView();\n    this.#sectionElement.scrollIntoView();\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.onInvokeAlert, {PH1: this.listItemElement.title}));\n  }\n  // direct focus to the corresponding element\n  onInvokeElementKeydown(event: KeyboardEvent): void {\n    if (event.key !== 'Tab' || event.shiftKey) {\n      return;\n    }\n    const checkBoxElement = this.#sectionFieldElement.querySelector('.mask-checkbox');\n    let focusableElement: HTMLElement|null = this.#sectionFieldElement.querySelector('[tabindex=\"0\"]');\n    if (checkBoxElement?.shadowRoot) {\n      focusableElement = checkBoxElement.shadowRoot.querySelector('input') || null;\n    } else if (!focusableElement) {\n      // special case for protocol handler section since it is a custom Element and has different structure than the others\n      focusableElement = this.#sectionFieldElement.querySelector('devtools-protocol-handlers-view')\n                             ?.shadowRoot?.querySelector('[tabindex=\"0\"]') ||\n          null;\n    }\n    if (focusableElement) {\n      focusableElement?.focus();\n      event.consume(true);\n    }\n  }\n}\n\nexport class ClearStorageTreeElement extends ApplicationPanelTreeElement {\n  private view?: StorageView;\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, i18nString(UIStrings.storage), false, 'storage');\n    const icon = IconButton.Icon.create('database');\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'clear-storage://' as Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new StorageView();\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.storage]);\n    return false;\n  }\n}\n\nexport class IndexedDBTreeElement extends ExpandableApplicationPanelTreeElement {\n  private idbDatabaseTreeElements: IDBDatabaseTreeElement[];\n  private storageBucket?: Protocol.Storage.StorageBucket;\n  constructor(storagePanel: ResourcesPanel, storageBucket?: Protocol.Storage.StorageBucket) {\n    super(\n        storagePanel, i18nString(UIStrings.indexeddb), i18nString(UIStrings.noIndexeddb),\n        i18nString(UIStrings.indexeddbDescription), 'indexed-db');\n    const icon = IconButton.Icon.create('database');\n    this.setLeadingIcons([icon]);\n    this.idbDatabaseTreeElements = [];\n    this.storageBucket = storageBucket;\n    this.initialize();\n  }\n\n  private initialize(): void {\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        IndexedDBModel, IndexedDBModelEvents.DatabaseAdded, this.indexedDBAdded, this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        IndexedDBModel, IndexedDBModelEvents.DatabaseRemoved, this.indexedDBRemoved, this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        IndexedDBModel, IndexedDBModelEvents.DatabaseLoaded, this.indexedDBLoaded, this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        IndexedDBModel, IndexedDBModelEvents.IndexedDBContentUpdated, this.indexedDBContentUpdated, this,\n        {scoped: true});\n    // TODO(szuend): Replace with a Set once two web tests no longer directly access this private\n    //               variable (indexeddb/live-update-indexeddb-content.js, indexeddb/delete-entry.js).\n    this.idbDatabaseTreeElements = [];\n\n    for (const indexedDBModel of SDK.TargetManager.TargetManager.instance().models(IndexedDBModel, {scoped: true})) {\n      const databases = indexedDBModel.databases();\n      for (let j = 0; j < databases.length; ++j) {\n        this.addIndexedDB(indexedDBModel, databases[j]);\n      }\n    }\n  }\n\n  addIndexedDBForModel(model: IndexedDBModel): void {\n    for (const databaseId of model.databases()) {\n      this.addIndexedDB(model, databaseId);\n    }\n  }\n\n  removeIndexedDBForModel(model: IndexedDBModel): void {\n    const idbDatabaseTreeElements = this.idbDatabaseTreeElements.filter(element => element.model === model);\n    for (const idbDatabaseTreeElement of idbDatabaseTreeElements) {\n      this.removeIDBDatabaseTreeElement(idbDatabaseTreeElement);\n    }\n  }\n\n  override onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.refreshIndexeddb), this.refreshIndexedDB.bind(this), {jslogContext: 'refresh-indexeddb'});\n    void contextMenu.show();\n  }\n\n  refreshIndexedDB(): void {\n    for (const indexedDBModel of SDK.TargetManager.TargetManager.instance().models(IndexedDBModel, {scoped: true})) {\n      void indexedDBModel.refreshDatabaseNames();\n    }\n  }\n\n  private databaseInTree(databaseId: DatabaseId): boolean {\n    if (this.storageBucket) {\n      return databaseId.inBucket(this.storageBucket);\n    }\n    return true;\n  }\n\n  private indexedDBAdded({\n    data: {databaseId, model},\n  }: Common.EventTarget.EventTargetEvent<{databaseId: DatabaseId, model: IndexedDBModel}>): void {\n    this.addIndexedDB(model, databaseId);\n  }\n\n  private addIndexedDB(model: IndexedDBModel, databaseId: DatabaseId): void {\n    if (!this.databaseInTree(databaseId)) {\n      return;\n    }\n    const idbDatabaseTreeElement = new IDBDatabaseTreeElement(this.resourcesPanel, model, databaseId);\n    this.idbDatabaseTreeElements.push(idbDatabaseTreeElement);\n    this.appendChild(idbDatabaseTreeElement);\n    model.refreshDatabase(databaseId);\n  }\n\n  private indexedDBRemoved({\n    data: {databaseId, model},\n  }: Common.EventTarget.EventTargetEvent<{databaseId: DatabaseId, model: IndexedDBModel}>): void {\n    const idbDatabaseTreeElement = this.idbDatabaseTreeElement(model, databaseId);\n    if (!idbDatabaseTreeElement) {\n      return;\n    }\n    this.removeIDBDatabaseTreeElement(idbDatabaseTreeElement);\n  }\n\n  private removeIDBDatabaseTreeElement(idbDatabaseTreeElement: IDBDatabaseTreeElement): void {\n    idbDatabaseTreeElement.clear();\n    this.removeChild(idbDatabaseTreeElement);\n    Platform.ArrayUtilities.removeElement(this.idbDatabaseTreeElements, idbDatabaseTreeElement);\n    this.setExpandable(this.childCount() > 0);\n  }\n\n  private indexedDBLoaded(\n      {data: {database, model, entriesUpdated}}: Common.EventTarget\n          .EventTargetEvent<{database: IndexedDBModelDatabase, model: IndexedDBModel, entriesUpdated: boolean}>): void {\n    const idbDatabaseTreeElement = this.idbDatabaseTreeElement(model, database.databaseId);\n    if (!idbDatabaseTreeElement) {\n      return;\n    }\n    idbDatabaseTreeElement.update(database, entriesUpdated);\n    this.indexedDBLoadedForTest();\n  }\n\n  private indexedDBLoadedForTest(): void {\n    // For sniffing in tests.\n  }\n\n  private indexedDBContentUpdated({\n    data: {databaseId, objectStoreName, model},\n  }: Common.EventTarget.EventTargetEvent<{databaseId: DatabaseId, objectStoreName: string, model: IndexedDBModel}>):\n      void {\n    const idbDatabaseTreeElement = this.idbDatabaseTreeElement(model, databaseId);\n    if (!idbDatabaseTreeElement) {\n      return;\n    }\n    idbDatabaseTreeElement.indexedDBContentUpdated(objectStoreName);\n  }\n\n  private idbDatabaseTreeElement(model: IndexedDBModel, databaseId: DatabaseId): IDBDatabaseTreeElement|null {\n    return this.idbDatabaseTreeElements.find(x => x.databaseId.equals(databaseId) && x.model === model) || null;\n  }\n}\n\nexport class IDBDatabaseTreeElement extends ApplicationPanelTreeElement {\n  model: IndexedDBModel;\n  databaseId: DatabaseId;\n  private readonly idbObjectStoreTreeElements: Map<string, IDBObjectStoreTreeElement>;\n  private database?: IndexedDBModelDatabase;\n  private view?: LegacyWrapper.LegacyWrapper.LegacyWrapper<UI.Widget.VBox, IDBDatabaseView>;\n\n  constructor(storagePanel: ResourcesPanel, model: IndexedDBModel, databaseId: DatabaseId) {\n    super(storagePanel, databaseId.name, false, 'indexed-db-database');\n    this.model = model;\n    this.databaseId = databaseId;\n    this.idbObjectStoreTreeElements = new Map();\n    const icon = IconButton.Icon.create('database');\n    this.setLeadingIcons([icon]);\n    this.model.addEventListener(IndexedDBModelEvents.DatabaseNamesRefreshed, this.refreshIndexedDB, this);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'indexedDB://' + this.databaseId.storageBucket.storageKey + '/' +\n        (this.databaseId.storageBucket.name ?? '') + '/' + this.databaseId.name as Platform.DevToolsPath.UrlString;\n  }\n\n  override onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.refreshIndexeddb), this.refreshIndexedDB.bind(this), {jslogContext: 'refresh-indexeddb'});\n    void contextMenu.show();\n  }\n\n  private refreshIndexedDB(): void {\n    this.model.refreshDatabase(this.databaseId);\n  }\n\n  indexedDBContentUpdated(objectStoreName: string): void {\n    const treeElement = this.idbObjectStoreTreeElements.get(objectStoreName);\n    if (treeElement) {\n      treeElement.markNeedsRefresh();\n    }\n  }\n\n  update(database: IndexedDBModelDatabase, entriesUpdated: boolean): void {\n    this.database = database;\n    const objectStoreNames = new Set<string>();\n    for (const objectStoreName of [...this.database.objectStores.keys()].sort()) {\n      const objectStore = this.database.objectStores.get(objectStoreName);\n      if (!objectStore) {\n        continue;\n      }\n      objectStoreNames.add(objectStore.name);\n      let treeElement = this.idbObjectStoreTreeElements.get(objectStore.name);\n      if (!treeElement) {\n        treeElement = new IDBObjectStoreTreeElement(this.resourcesPanel, this.model, this.databaseId, objectStore);\n        this.idbObjectStoreTreeElements.set(objectStore.name, treeElement);\n        this.appendChild(treeElement);\n      }\n      treeElement.update(objectStore, entriesUpdated);\n    }\n    for (const objectStoreName of this.idbObjectStoreTreeElements.keys()) {\n      if (!objectStoreNames.has(objectStoreName)) {\n        this.objectStoreRemoved(objectStoreName);\n      }\n    }\n\n    if (this.view) {\n      this.view.getComponent().update(database);\n    }\n\n    this.updateTooltip();\n  }\n\n  private updateTooltip(): void {\n    const version = this.database ? this.database.version : '-';\n    if (Object.keys(this.idbObjectStoreTreeElements).length === 0) {\n      this.tooltip = i18nString(UIStrings.versionSEmpty, {PH1: version});\n    } else {\n      this.tooltip = i18nString(UIStrings.versionS, {PH1: version});\n    }\n  }\n\n  override get selectable(): boolean {\n    if (!this.database) {\n      return false;\n    }\n    return super.selectable;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.database) {\n      return false;\n    }\n    if (!this.view) {\n      this.view = LegacyWrapper.LegacyWrapper.legacyWrapper(\n          UI.Widget.VBox, new IDBDatabaseView(this.model, this.database), 'indexeddb-data');\n    }\n\n    this.showView(this.view);\n    Host.userMetrics.panelShown('indexed-db');\n    return false;\n  }\n\n  private objectStoreRemoved(objectStoreName: string): void {\n    const objectStoreTreeElement = this.idbObjectStoreTreeElements.get(objectStoreName);\n    if (objectStoreTreeElement) {\n      objectStoreTreeElement.clear();\n      this.removeChild(objectStoreTreeElement);\n    }\n    this.idbObjectStoreTreeElements.delete(objectStoreName);\n    this.updateTooltip();\n  }\n\n  clear(): void {\n    for (const objectStoreName of this.idbObjectStoreTreeElements.keys()) {\n      this.objectStoreRemoved(objectStoreName);\n    }\n  }\n}\n\nexport class IDBObjectStoreTreeElement extends ApplicationPanelTreeElement {\n  private model: IndexedDBModel;\n  private databaseId: DatabaseId;\n  private readonly idbIndexTreeElements: Map<string, IDBIndexTreeElement>;\n  private objectStore: ObjectStore;\n  private view: IDBDataView|null;\n\n  constructor(storagePanel: ResourcesPanel, model: IndexedDBModel, databaseId: DatabaseId, objectStore: ObjectStore) {\n    super(storagePanel, objectStore.name, false, 'indexed-db-object-store');\n    this.model = model;\n    this.databaseId = databaseId;\n    this.idbIndexTreeElements = new Map();\n    this.objectStore = objectStore;\n    this.view = null;\n    const icon = IconButton.Icon.create('table');\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'indexedDB://' + this.databaseId.storageBucket.storageKey + '/' +\n        (this.databaseId.storageBucket.name ?? '') + '/' + this.databaseId.name + '/' +\n        this.objectStore.name as Platform.DevToolsPath.UrlString;\n  }\n\n  override onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  markNeedsRefresh(): void {\n    if (this.view) {\n      this.view.markNeedsRefresh();\n    }\n    for (const treeElement of this.idbIndexTreeElements.values()) {\n      treeElement.markNeedsRefresh();\n    }\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.clear), this.clearObjectStore.bind(this), {jslogContext: 'clear'});\n    void contextMenu.show();\n  }\n\n  private refreshObjectStore(): void {\n    if (this.view) {\n      this.view.refreshData();\n    }\n    for (const treeElement of this.idbIndexTreeElements.values()) {\n      treeElement.refreshIndex();\n    }\n  }\n\n  private async clearObjectStore(): Promise<void> {\n    await this.model.clearObjectStore(this.databaseId, this.objectStore.name);\n    this.update(this.objectStore, true);\n  }\n\n  update(objectStore: ObjectStore, entriesUpdated: boolean): void {\n    this.objectStore = objectStore;\n\n    const indexNames = new Set<string>();\n    for (const index of this.objectStore.indexes.values()) {\n      indexNames.add(index.name);\n      let treeElement = this.idbIndexTreeElements.get(index.name);\n      if (!treeElement) {\n        treeElement = new IDBIndexTreeElement(\n            this.resourcesPanel, this.model, this.databaseId, this.objectStore, index,\n            this.refreshObjectStore.bind(this));\n        this.idbIndexTreeElements.set(index.name, treeElement);\n        this.appendChild(treeElement);\n      }\n      treeElement.update(this.objectStore, index, entriesUpdated);\n    }\n    for (const indexName of this.idbIndexTreeElements.keys()) {\n      if (!indexNames.has(indexName)) {\n        this.indexRemoved(indexName);\n      }\n    }\n    for (const [indexName, treeElement] of this.idbIndexTreeElements.entries()) {\n      if (!indexNames.has(indexName)) {\n        this.removeChild((treeElement));\n        this.idbIndexTreeElements.delete((indexName));\n      }\n    }\n\n    if (this.childCount()) {\n      this.expand();\n    }\n\n    if (this.view && entriesUpdated) {\n      this.view.update(this.objectStore, null);\n    }\n\n    this.updateTooltip();\n  }\n\n  private updateTooltip(): void {\n    const keyPathString = this.objectStore.keyPathString;\n    let tooltipString = keyPathString !== null ? i18nString(UIStrings.keyPathS, {PH1: keyPathString}) : '';\n    if (this.objectStore.autoIncrement) {\n      tooltipString += '\\n' + i18n.i18n.lockedString('autoIncrement');\n    }\n    this.tooltip = tooltipString;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view =\n          new IDBDataView(this.model, this.databaseId, this.objectStore, null, this.refreshObjectStore.bind(this));\n    }\n\n    this.showView(this.view);\n    Host.userMetrics.panelShown('indexed-db');\n    return false;\n  }\n\n  private indexRemoved(indexName: string): void {\n    const indexTreeElement = this.idbIndexTreeElements.get(indexName);\n    if (indexTreeElement) {\n      indexTreeElement.clear();\n      this.removeChild(indexTreeElement);\n    }\n    this.idbIndexTreeElements.delete(indexName);\n  }\n\n  clear(): void {\n    for (const indexName of this.idbIndexTreeElements.keys()) {\n      this.indexRemoved(indexName);\n    }\n    if (this.view) {\n      this.view.clear();\n    }\n  }\n}\n\nexport class IDBIndexTreeElement extends ApplicationPanelTreeElement {\n  private model: IndexedDBModel;\n  private databaseId: DatabaseId;\n  private objectStore: ObjectStore;\n  private index: Index;\n  private refreshObjectStore: () => void;\n  private view?: IDBDataView;\n\n  constructor(\n      storagePanel: ResourcesPanel, model: IndexedDBModel, databaseId: DatabaseId, objectStore: ObjectStore,\n      index: Index, refreshObjectStore: () => void) {\n    super(storagePanel, index.name, false, 'indexed-db');\n    this.model = model;\n    this.databaseId = databaseId;\n    this.objectStore = objectStore;\n    this.index = index;\n    this.refreshObjectStore = refreshObjectStore;\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'indexedDB://' + this.databaseId.storageBucket.storageKey + '/' +\n        (this.databaseId.storageBucket.name ?? '') + '/' + this.databaseId.name + '/' + this.objectStore.name + '/' +\n        this.index.name as Platform.DevToolsPath.UrlString;\n  }\n\n  markNeedsRefresh(): void {\n    if (this.view) {\n      this.view.markNeedsRefresh();\n    }\n  }\n\n  refreshIndex(): void {\n    if (this.view) {\n      this.view.refreshData();\n    }\n  }\n\n  update(objectStore: ObjectStore, index: Index, entriesUpdated: boolean): void {\n    this.objectStore = objectStore;\n    this.index = index;\n\n    if (this.view && entriesUpdated) {\n      this.view.update(this.objectStore, this.index);\n    }\n\n    this.updateTooltip();\n  }\n\n  private updateTooltip(): void {\n    const tooltipLines = [];\n    const keyPathString = this.index.keyPathString;\n    tooltipLines.push(i18nString(UIStrings.keyPathS, {PH1: keyPathString}));\n    if (this.index.unique) {\n      tooltipLines.push(i18n.i18n.lockedString('unique'));\n    }\n    if (this.index.multiEntry) {\n      tooltipLines.push(i18n.i18n.lockedString('multiEntry'));\n    }\n    this.tooltip = tooltipLines.join('\\n');\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new IDBDataView(this.model, this.databaseId, this.objectStore, this.index, this.refreshObjectStore);\n    }\n\n    this.showView(this.view);\n    Host.userMetrics.panelShown('indexed-db');\n    return false;\n  }\n\n  clear(): void {\n    if (this.view) {\n      this.view.clear();\n    }\n  }\n}\n\nexport class DOMStorageTreeElement extends ApplicationPanelTreeElement {\n  private readonly domStorage: DOMStorage;\n  constructor(storagePanel: ResourcesPanel, domStorage: DOMStorage) {\n    super(\n        storagePanel,\n        domStorage.storageKey ? SDK.StorageKeyManager.parseStorageKey(domStorage.storageKey).origin :\n                                i18nString(UIStrings.localFiles),\n        false, domStorage.isLocalStorage ? 'local-storage-for-domain' : 'session-storage-for-domain');\n    this.domStorage = domStorage;\n    const icon = IconButton.Icon.create('table');\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'storage://' + this.domStorage.storageKey + '/' + (this.domStorage.isLocalStorage ? 'local' : 'session') as\n        Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    Host.userMetrics.panelShown('dom-storage');\n    this.resourcesPanel.showDOMStorage(this.domStorage);\n    return false;\n  }\n\n  override onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.clear), () => this.domStorage.clear(), {jslogContext: 'clear'});\n    void contextMenu.show();\n  }\n}\n\nexport class ExtensionStorageTreeElement extends ApplicationPanelTreeElement {\n  private readonly extensionStorage: ExtensionStorage;\n  constructor(storagePanel: ResourcesPanel, extensionStorage: ExtensionStorage) {\n    super(\n        storagePanel, nameForExtensionStorageArea(extensionStorage.storageArea), false, 'extension-storage-for-domain');\n    this.extensionStorage = extensionStorage;\n    const icon = IconButton.Icon.create('table');\n    this.setLeadingIcons([icon]);\n  }\n\n  get storageArea(): Protocol.Extensions.StorageArea {\n    return this.extensionStorage.storageArea;\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'extension-storage://' + this.extensionStorage.extensionId + '/' + this.extensionStorage.storageArea as\n        Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.resourcesPanel.showExtensionStorage(this.extensionStorage);\n    Host.userMetrics.panelShown('extension-storage');\n    return false;\n  }\n\n  override onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.clear), () => this.extensionStorage.clear(), {jslogContext: 'clear'});\n    void contextMenu.show();\n  }\n}\n\nexport class ExtensionStorageTreeParentElement extends ApplicationPanelTreeElement {\n  private readonly extensionId: string;\n  constructor(storagePanel: ResourcesPanel, extensionId: string, extensionName: string) {\n    super(storagePanel, extensionName || extensionId, true, 'extension-storage-for-domain');\n    this.extensionId = extensionId;\n    const icon = IconButton.Icon.create('table');\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'extension-storage://' + this.extensionId as Platform.DevToolsPath.UrlString;\n  }\n}\n\nexport class CookieTreeElement extends ApplicationPanelTreeElement {\n  private readonly target: SDK.Target.Target;\n  readonly #cookieDomain: string;\n\n  constructor(\n      storagePanel: ResourcesPanel, frame: SDK.ResourceTreeModel.ResourceTreeFrame,\n      cookieUrl: Common.ParsedURL.ParsedURL) {\n    super(storagePanel, cookieUrl.securityOrigin() || i18nString(UIStrings.localFiles), false, 'cookies-for-frame');\n    this.target = frame.resourceTreeModel().target();\n    this.#cookieDomain = cookieUrl.securityOrigin();\n    this.tooltip = i18nString(UIStrings.cookiesUsedByFramesFromS, {PH1: this.#cookieDomain});\n    const icon = IconButton.Icon.create('cookie');\n    // Note that we cannot use `cookieDomainInternal` here since it contains scheme.\n    if (IssuesManager.RelatedIssue.hasThirdPartyPhaseoutCookieIssueForDomain(cookieUrl.domain())) {\n      icon.name = 'warning-filled';\n      this.tooltip = i18nString(UIStrings.thirdPartyPhaseout, {PH1: this.#cookieDomain});\n    }\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'cookies://' + this.#cookieDomain as Platform.DevToolsPath.UrlString;\n  }\n\n  cookieDomain(): string {\n    return this.#cookieDomain;\n  }\n\n  override onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.clear), () => this.resourcesPanel.clearCookies(this.target, this.#cookieDomain),\n        {jslogContext: 'clear'});\n    void contextMenu.show();\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.resourcesPanel.showCookies(this.target, this.#cookieDomain);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.cookies]);\n    return false;\n  }\n}\n\nexport class StorageCategoryView extends UI.Widget.VBox {\n  private emptyWidget: UI.EmptyWidget.EmptyWidget;\n\n  constructor() {\n    super();\n\n    this.element.classList.add('storage-view');\n    this.emptyWidget = new UI.EmptyWidget.EmptyWidget('', '');\n    this.emptyWidget.show(this.element);\n  }\n\n  setText(text: string): void {\n    this.emptyWidget.text = text;\n  }\n\n  setHeadline(header: string): void {\n    this.emptyWidget.header = header;\n  }\n\n  setLink(link: Platform.DevToolsPath.UrlString|null): void {\n    this.emptyWidget.link = link;\n  }\n}\n\nexport class ResourcesSection implements SDK.TargetManager.Observer {\n  panel: ResourcesPanel;\n  private readonly treeElement: UI.TreeOutline.TreeElement;\n  private treeElementForFrameId: Map<string, FrameTreeElement>;\n  private treeElementForTargetId: Map<string, FrameTreeElement>;\n\n  constructor(storagePanel: ResourcesPanel, treeElement: UI.TreeOutline.TreeElement) {\n    this.panel = storagePanel;\n    this.treeElement = treeElement;\n    UI.ARIAUtils.setLabel(this.treeElement.listItemNode, 'Resources Section');\n    this.treeElementForFrameId = new Map();\n    this.treeElementForTargetId = new Map();\n\n    const frameManager = SDK.FrameManager.FrameManager.instance();\n    frameManager.addEventListener(\n        SDK.FrameManager.Events.FRAME_ADDED_TO_TARGET, event => this.frameAdded(event.data.frame), this);\n    frameManager.addEventListener(\n        SDK.FrameManager.Events.FRAME_REMOVED, event => this.frameDetached(event.data.frameId), this);\n    frameManager.addEventListener(\n        SDK.FrameManager.Events.FRAME_NAVIGATED, event => this.frameNavigated(event.data.frame), this);\n    frameManager.addEventListener(\n        SDK.FrameManager.Events.RESOURCE_ADDED, event => this.resourceAdded(event.data.resource), this);\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ChildTargetManager.ChildTargetManager, SDK.ChildTargetManager.Events.TARGET_CREATED, this.windowOpened,\n        this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ChildTargetManager.ChildTargetManager, SDK.ChildTargetManager.Events.TARGET_INFO_CHANGED,\n        this.windowChanged, this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ChildTargetManager.ChildTargetManager, SDK.ChildTargetManager.Events.TARGET_DESTROYED, this.windowDestroyed,\n        this, {scoped: true});\n\n    SDK.TargetManager.TargetManager.instance().observeTargets(this, {scoped: true});\n  }\n\n  private initialize(): void {\n    const frameManager = SDK.FrameManager.FrameManager.instance();\n    for (const frame of frameManager.getAllFrames()) {\n      if (!this.treeElementForFrameId.get(frame.id)) {\n        this.addFrameAndParents(frame);\n      }\n      const childTargetManager = frame.resourceTreeModel().target().model(SDK.ChildTargetManager.ChildTargetManager);\n      if (childTargetManager) {\n        for (const targetInfo of childTargetManager.targetInfos()) {\n          this.windowOpened({data: targetInfo});\n        }\n      }\n    }\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    if (target.type() === SDK.Target.Type.Worker || target.type() === SDK.Target.Type.ServiceWorker) {\n      void this.workerAdded(target);\n    }\n    if (target.type() === SDK.Target.Type.FRAME && target === target.outermostTarget()) {\n      // Process existing frames, e.g. after prerendering activation or\n      // switching between outermost targets.\n      this.initialize();\n    }\n  }\n\n  private async workerAdded(target: SDK.Target.Target): Promise<void> {\n    const parentTarget = target.parentTarget();\n    if (!parentTarget) {\n      return;\n    }\n    const parentTargetId = parentTarget.id();\n    const frameTreeElement = this.treeElementForTargetId.get(parentTargetId);\n    const targetId = target.id();\n    assertNotMainTarget(targetId);\n    const {targetInfo} = await parentTarget.targetAgent().invoke_getTargetInfo({targetId});\n    if (frameTreeElement && targetInfo) {\n      frameTreeElement.workerCreated(targetInfo);\n    }\n  }\n\n  targetRemoved(_target: SDK.Target.Target): void {\n  }\n\n  private addFrameAndParents(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    const parentFrame = frame.parentFrame();\n    if (parentFrame && !this.treeElementForFrameId.get(parentFrame.id)) {\n      this.addFrameAndParents(parentFrame);\n    }\n    this.frameAdded(frame);\n  }\n\n  private expandFrame(frame: SDK.ResourceTreeModel.ResourceTreeFrame|null): boolean {\n    if (!frame) {\n      return false;\n    }\n    let treeElement = this.treeElementForFrameId.get(frame.id);\n    if (!treeElement && !this.expandFrame(frame.parentFrame())) {\n      return false;\n    }\n    treeElement = this.treeElementForFrameId.get(frame.id);\n    if (!treeElement) {\n      return false;\n    }\n    treeElement.expand();\n    return true;\n  }\n\n  async revealResource(resource: SDK.Resource.Resource, line?: number, column?: number): Promise<void> {\n    if (!this.expandFrame(resource.frame())) {\n      return;\n    }\n    const resourceTreeElement = FrameResourceTreeElement.forResource(resource);\n    if (resourceTreeElement) {\n      await resourceTreeElement.revealResource(line, column);\n    }\n  }\n\n  revealAndSelectFrame(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    const frameTreeElement = this.treeElementForFrameId.get(frame.id);\n    frameTreeElement?.reveal();\n    frameTreeElement?.select();\n  }\n\n  private frameAdded(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    if (!SDK.TargetManager.TargetManager.instance().isInScope(frame.resourceTreeModel())) {\n      return;\n    }\n    const parentFrame = frame.parentFrame();\n    const parentTreeElement = parentFrame ? this.treeElementForFrameId.get(parentFrame.id) : this.treeElement;\n    if (!parentTreeElement) {\n      return;\n    }\n\n    const existingElement = this.treeElementForFrameId.get(frame.id);\n    if (existingElement) {\n      this.treeElementForFrameId.delete(frame.id);\n      if (existingElement.parent) {\n        existingElement.parent.removeChild(existingElement);\n      }\n    }\n\n    const frameTreeElement = new FrameTreeElement(this, frame);\n    this.treeElementForFrameId.set(frame.id, frameTreeElement);\n    const targetId = frame.resourceTreeModel().target().id();\n    if (!this.treeElementForTargetId.get(targetId)) {\n      this.treeElementForTargetId.set(targetId, frameTreeElement);\n    }\n    parentTreeElement.appendChild(frameTreeElement);\n\n    for (const resource of frame.resources()) {\n      this.resourceAdded(resource);\n    }\n  }\n\n  private frameDetached(frameId: Protocol.Page.FrameId): void {\n    const frameTreeElement = this.treeElementForFrameId.get(frameId);\n    if (!frameTreeElement) {\n      return;\n    }\n\n    this.treeElementForFrameId.delete(frameId);\n    if (frameTreeElement.parent) {\n      frameTreeElement.parent.removeChild(frameTreeElement);\n    }\n  }\n\n  private frameNavigated(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    if (!SDK.TargetManager.TargetManager.instance().isInScope(frame.resourceTreeModel())) {\n      return;\n    }\n    const frameTreeElement = this.treeElementForFrameId.get(frame.id);\n    if (frameTreeElement) {\n      void frameTreeElement.frameNavigated(frame);\n    }\n  }\n\n  private resourceAdded(resource: SDK.Resource.Resource): void {\n    const frame = resource.frame();\n    if (!frame) {\n      return;\n    }\n    if (!SDK.TargetManager.TargetManager.instance().isInScope(frame.resourceTreeModel())) {\n      return;\n    }\n    const frameTreeElement = this.treeElementForFrameId.get(frame.id);\n    if (!frameTreeElement) {\n      // This is a frame's main resource, it will be retained\n      // and re-added by the resource manager;\n      return;\n    }\n    frameTreeElement.appendResource(resource);\n  }\n\n  private windowOpened(event: Common.EventTarget.EventTargetEvent<Protocol.Target.TargetInfo>): void {\n    const targetInfo = event.data;\n    // Events for DevTools windows are ignored because they do not have an openerId\n    if (targetInfo.openerId && targetInfo.type === 'page') {\n      const frameTreeElement = this.treeElementForFrameId.get(targetInfo.openerId);\n      if (frameTreeElement) {\n        this.treeElementForTargetId.set(targetInfo.targetId, frameTreeElement);\n        frameTreeElement.windowOpened(targetInfo);\n      }\n    }\n  }\n\n  private windowDestroyed(event: Common.EventTarget.EventTargetEvent<Protocol.Target.TargetID>): void {\n    const targetId = event.data;\n    const frameTreeElement = this.treeElementForTargetId.get(targetId);\n    if (frameTreeElement) {\n      frameTreeElement.windowDestroyed(targetId);\n      this.treeElementForTargetId.delete(targetId);\n    }\n  }\n\n  private windowChanged(event: Common.EventTarget.EventTargetEvent<Protocol.Target.TargetInfo>): void {\n    const targetInfo = event.data;\n    // Events for DevTools windows are ignored because they do not have an openerId\n    if (targetInfo.openerId && targetInfo.type === 'page') {\n      const frameTreeElement = this.treeElementForFrameId.get(targetInfo.openerId);\n      if (frameTreeElement) {\n        frameTreeElement.windowChanged(targetInfo);\n      }\n    }\n  }\n\n  reset(): void {\n    this.treeElement.removeChildren();\n    this.treeElementForFrameId.clear();\n    this.treeElementForTargetId.clear();\n  }\n}\n\nexport class FrameTreeElement extends ApplicationPanelTreeElement {\n  private section: ResourcesSection;\n  private frame: SDK.ResourceTreeModel.ResourceTreeFrame;\n  private readonly categoryElements: Map<string, ExpandableApplicationPanelTreeElement>;\n  private readonly treeElementForResource: Map<string, FrameResourceTreeElement>;\n  private treeElementForWindow: Map<Protocol.Target.TargetID, FrameWindowTreeElement>;\n  private treeElementForWorker: Map<Protocol.Target.TargetID, WorkerTreeElement>;\n  private view: LegacyWrapper.LegacyWrapper\n      .LegacyWrapper<UI.Widget.Widget, ApplicationComponents.FrameDetailsView.FrameDetailsReportView>|null;\n\n  constructor(section: ResourcesSection, frame: SDK.ResourceTreeModel.ResourceTreeFrame) {\n    super(section.panel, '', false, 'frame');\n    this.section = section;\n    this.frame = frame;\n    this.categoryElements = new Map();\n    this.treeElementForResource = new Map();\n    this.treeElementForWindow = new Map();\n    this.treeElementForWorker = new Map();\n    void this.frameNavigated(frame);\n    this.view = null;\n  }\n\n  getIconTypeForFrame(frame: SDK.ResourceTreeModel.ResourceTreeFrame): 'frame-crossed'|'frame'|'iframe-crossed'|\n      'iframe' {\n    if (frame.isOutermostFrame()) {\n      return frame.unreachableUrl() ? 'frame-crossed' : 'frame';\n    }\n    return frame.unreachableUrl() ? 'iframe-crossed' : 'iframe';\n  }\n\n  async frameNavigated(frame: SDK.ResourceTreeModel.ResourceTreeFrame): Promise<void> {\n    const icon = IconButton.Icon.create(this.getIconTypeForFrame(frame));\n    if (frame.unreachableUrl()) {\n      icon.classList.add('red-icon');\n    }\n    this.setLeadingIcons([icon]);\n    this.invalidateChildren();\n\n    if (this.title !== frame.displayName()) {\n      this.title = frame.displayName();\n      UI.ARIAUtils.setLabel(this.listItemElement, this.title);\n      if (this.parent) {\n        const parent = this.parent;\n        // Insert frame at new position to preserve correct alphabetical order\n        parent.removeChild(this);\n        parent.appendChild(this);\n      }\n    }\n    this.categoryElements.clear();\n    this.treeElementForResource.clear();\n    this.treeElementForWorker.clear();\n\n    if (this.selected) {\n      this.view = LegacyWrapper.LegacyWrapper.legacyWrapper(\n          UI.Widget.Widget, new ApplicationComponents.FrameDetailsView.FrameDetailsReportView(this.frame));\n      this.showView(this.view);\n    } else {\n      this.view = null;\n    }\n\n    // Service Workers' parent is always the outermost frame. We need to reconstruct\n    // the service worker tree elements after those navigations which allow\n    // the service workers to stay alive.\n    if (frame.isOutermostFrame()) {\n      const targets = SDK.TargetManager.TargetManager.instance().targets();\n      for (const target of targets) {\n        if (target.type() === SDK.Target.Type.ServiceWorker &&\n            SDK.TargetManager.TargetManager.instance().isInScope(target)) {\n          const targetId = target.id();\n          assertNotMainTarget(targetId);\n          const agent = frame.resourceTreeModel().target().targetAgent();\n          const targetInfo = (await agent.invoke_getTargetInfo({targetId})).targetInfo;\n          this.workerCreated(targetInfo);\n        }\n      }\n    }\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    // This is used to persist over reloads/navigation which frame was selected.\n    // A frame's title can change on DevTools refresh, so we resort to using\n    // the URL instead (even though it is not guaranteed to be unique).\n    if (this.frame.isOutermostFrame()) {\n      return 'frame://' as Platform.DevToolsPath.UrlString;\n    }\n    return 'frame://' + encodeURI(this.frame.url) as Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = LegacyWrapper.LegacyWrapper.legacyWrapper(\n          UI.Widget.Widget, new ApplicationComponents.FrameDetailsView.FrameDetailsReportView(this.frame));\n    }\n    Host.userMetrics.panelShown('frame-details');\n    this.showView(this.view);\n\n    this.listItemElement.classList.remove('hovered');\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    return false;\n  }\n\n  set hovered(hovered: boolean) {\n    if (hovered) {\n      this.listItemElement.classList.add('hovered');\n      void this.frame.highlight();\n    } else {\n      this.listItemElement.classList.remove('hovered');\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n  }\n\n  appendResource(resource: SDK.Resource.Resource): void {\n    const statusCode = resource.statusCode();\n    if (statusCode >= 301 && statusCode <= 303) {\n      return;\n    }\n\n    const resourceType = resource.resourceType();\n    const categoryName = resourceType.name();\n    let categoryElement =\n        resourceType === Common.ResourceType.resourceTypes.Document ? this : this.categoryElements.get(categoryName);\n    if (!categoryElement) {\n      categoryElement = new ExpandableApplicationPanelTreeElement(\n          this.section.panel, resource.resourceType().category().title(), '', i18nString(UIStrings.resourceDescription),\n          categoryName, categoryName === 'Frames');\n      this.categoryElements.set(resourceType.name(), categoryElement);\n      this.appendChild(categoryElement, FrameTreeElement.presentationOrderCompare);\n    }\n    const resourceTreeElement = new FrameResourceTreeElement(this.section.panel, resource);\n    categoryElement.appendChild(resourceTreeElement, FrameTreeElement.presentationOrderCompare);\n    this.treeElementForResource.set(resource.url, resourceTreeElement);\n  }\n\n  windowOpened(targetInfo: Protocol.Target.TargetInfo): void {\n    const categoryKey = 'opened-windows';\n    let categoryElement = this.categoryElements.get(categoryKey);\n    if (!categoryElement) {\n      categoryElement = new ExpandableApplicationPanelTreeElement(\n          this.section.panel, i18nString(UIStrings.openedWindows), '', i18nString(UIStrings.openedWindowsDescription),\n          categoryKey);\n      this.categoryElements.set(categoryKey, categoryElement);\n      this.appendChild(categoryElement, FrameTreeElement.presentationOrderCompare);\n    }\n    if (!this.treeElementForWindow.get(targetInfo.targetId)) {\n      const windowTreeElement = new FrameWindowTreeElement(this.section.panel, targetInfo);\n      categoryElement.appendChild(windowTreeElement);\n      this.treeElementForWindow.set(targetInfo.targetId, windowTreeElement);\n    }\n  }\n\n  workerCreated(targetInfo: Protocol.Target.TargetInfo): void {\n    const categoryKey = targetInfo.type === 'service_worker' ? 'service-workers' : 'web-workers';\n    const categoryName = targetInfo.type === 'service_worker' ? i18n.i18n.lockedString('Service workers') :\n                                                                i18nString(UIStrings.webWorkers);\n    let categoryElement = this.categoryElements.get(categoryKey);\n    if (!categoryElement) {\n      categoryElement = new ExpandableApplicationPanelTreeElement(\n          this.section.panel, categoryName, '', i18nString(UIStrings.workerDescription), categoryKey);\n      this.categoryElements.set(categoryKey, categoryElement);\n      this.appendChild(categoryElement, FrameTreeElement.presentationOrderCompare);\n    }\n    if (!this.treeElementForWorker.get(targetInfo.targetId)) {\n      const workerTreeElement = new WorkerTreeElement(this.section.panel, targetInfo);\n      categoryElement.appendChild(workerTreeElement);\n      this.treeElementForWorker.set(targetInfo.targetId, workerTreeElement);\n    }\n  }\n\n  windowChanged(targetInfo: Protocol.Target.TargetInfo): void {\n    const windowTreeElement = this.treeElementForWindow.get(targetInfo.targetId);\n    if (!windowTreeElement) {\n      return;\n    }\n    if (windowTreeElement.title !== targetInfo.title) {\n      windowTreeElement.title = targetInfo.title;\n    }\n    windowTreeElement.update(targetInfo);\n  }\n\n  windowDestroyed(targetId: Protocol.Target.TargetID): void {\n    const windowTreeElement = this.treeElementForWindow.get(targetId);\n    if (windowTreeElement) {\n      windowTreeElement.windowClosed();\n    }\n  }\n\n  override appendChild(\n      treeElement: UI.TreeOutline.TreeElement,\n      comparator: ((arg0: UI.TreeOutline.TreeElement, arg1: UI.TreeOutline.TreeElement) => number)|\n      undefined = FrameTreeElement.presentationOrderCompare): void {\n    super.appendChild(treeElement, comparator);\n  }\n\n  /**\n   * Order elements by type (first frames, then resources, last Document resources)\n   * and then each of these groups in the alphabetical order.\n   */\n  private static presentationOrderCompare(\n      treeElement1: UI.TreeOutline.TreeElement, treeElement2: UI.TreeOutline.TreeElement): number {\n    function typeWeight(treeElement: UI.TreeOutline.TreeElement): number {\n      if (treeElement instanceof ExpandableApplicationPanelTreeElement) {\n        return 2;\n      }\n      if (treeElement instanceof FrameTreeElement) {\n        return 1;\n      }\n      return 3;\n    }\n\n    const typeWeight1 = typeWeight(treeElement1);\n    const typeWeight2 = typeWeight(treeElement2);\n    return typeWeight1 - typeWeight2 || treeElement1.titleAsText().localeCompare(treeElement2.titleAsText());\n  }\n}\n\nconst resourceToFrameResourceTreeElement = new WeakMap<SDK.Resource.Resource, FrameResourceTreeElement>();\n\nexport class FrameResourceTreeElement extends ApplicationPanelTreeElement {\n  private readonly panel: ResourcesPanel;\n  private resource: SDK.Resource.Resource;\n  private previewPromise: Promise<UI.Widget.Widget>|null;\n\n  constructor(storagePanel: ResourcesPanel, resource: SDK.Resource.Resource) {\n    super(\n        storagePanel, resource.isGenerated ? i18nString(UIStrings.documentNotAvailable) : resource.displayName, false,\n        'frame-resource');\n    this.panel = storagePanel;\n    this.resource = resource;\n    this.previewPromise = null;\n    this.tooltip = resource.url;\n    resourceToFrameResourceTreeElement.set(this.resource, this);\n\n    const icon = IconButton.Icon.create('document', 'navigator-file-tree-item');\n    icon.classList.add('navigator-' + resource.resourceType().name() + '-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  static forResource(resource: SDK.Resource.Resource): FrameResourceTreeElement|undefined {\n    return resourceToFrameResourceTreeElement.get(resource);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return this.resource.url;\n  }\n\n  private preparePreview(): Promise<UI.Widget.Widget> {\n    if (this.previewPromise) {\n      return this.previewPromise;\n    }\n    const viewPromise = SourceFrame.PreviewFactory.PreviewFactory.createPreview(this.resource, this.resource.mimeType);\n    this.previewPromise = viewPromise.then(view => {\n      if (view) {\n        return view;\n      }\n      return new UI.EmptyWidget.EmptyWidget('', this.resource.url);\n    });\n    return this.previewPromise;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (this.resource.isGenerated) {\n      this.panel.showCategoryView(\n          '', i18nString(UIStrings.documentNotAvailable), i18nString(UIStrings.theContentOfThisDocumentHasBeen), null);\n    } else {\n      void this.panel.scheduleShowView(this.preparePreview());\n    }\n    Host.userMetrics.panelShown('frame-resource');\n    return false;\n  }\n\n  override ondblclick(_event: Event): boolean {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(this.resource.url);\n    return false;\n  }\n\n  override onattach(): void {\n    super.onattach();\n    this.listItemElement.draggable = true;\n    this.listItemElement.addEventListener('dragstart', this.ondragstart.bind(this), false);\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private ondragstart(event: DragEvent): boolean {\n    if (!event.dataTransfer) {\n      return false;\n    }\n    event.dataTransfer.setData('text/plain', this.resource.content || '');\n    event.dataTransfer.effectAllowed = 'copy';\n    return true;\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.appendApplicableItems(this.resource);\n    void contextMenu.show();\n  }\n\n  async revealResource(lineNumber?: number, columnNumber?: number): Promise<void> {\n    this.revealAndSelect(true);\n    const view = await this.panel.scheduleShowView(this.preparePreview());\n    if (!(view instanceof SourceFrame.ResourceSourceFrame.ResourceSourceFrame) || typeof lineNumber !== 'number') {\n      return;\n    }\n    view.revealPosition({lineNumber, columnNumber}, true);\n  }\n}\n\nclass FrameWindowTreeElement extends ApplicationPanelTreeElement {\n  private targetInfo: Protocol.Target.TargetInfo;\n  private isWindowClosed: boolean;\n  private view: OpenedWindowDetailsView|null;\n\n  constructor(storagePanel: ResourcesPanel, targetInfo: Protocol.Target.TargetInfo) {\n    super(storagePanel, targetInfo.title || i18nString(UIStrings.windowWithoutTitle), false, 'window');\n    this.targetInfo = targetInfo;\n    this.isWindowClosed = false;\n    this.view = null;\n    this.updateIcon(targetInfo.canAccessOpener);\n  }\n\n  updateIcon(canAccessOpener: boolean): void {\n    const iconType = canAccessOpener ? 'popup' : 'frame';\n    const icon = IconButton.Icon.create(iconType);\n    this.setLeadingIcons([icon]);\n  }\n\n  update(targetInfo: Protocol.Target.TargetInfo): void {\n    if (targetInfo.canAccessOpener !== this.targetInfo.canAccessOpener) {\n      this.updateIcon(targetInfo.canAccessOpener);\n    }\n    this.targetInfo = targetInfo;\n    if (this.view) {\n      this.view.setTargetInfo(targetInfo);\n      this.view.update();\n    }\n  }\n\n  windowClosed(): void {\n    this.listItemElement.classList.add('window-closed');\n    this.isWindowClosed = true;\n    if (this.view) {\n      this.view.setIsWindowClosed(true);\n      this.view.update();\n    }\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new OpenedWindowDetailsView(this.targetInfo, this.isWindowClosed);\n    } else {\n      this.view.update();\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown('frame-window');\n    return false;\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return this.targetInfo.url as Platform.DevToolsPath.UrlString;\n  }\n}\n\nclass WorkerTreeElement extends ApplicationPanelTreeElement {\n  private targetInfo: Protocol.Target.TargetInfo;\n  private view: WorkerDetailsView|null;\n\n  constructor(storagePanel: ResourcesPanel, targetInfo: Protocol.Target.TargetInfo) {\n    super(storagePanel, targetInfo.title || targetInfo.url || i18nString(UIStrings.worker), false, 'worker');\n    this.targetInfo = targetInfo;\n    this.view = null;\n    const icon = IconButton.Icon.create('gears', 'navigator-file-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new WorkerDetailsView(this.targetInfo);\n    } else {\n      this.view.update();\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown('frame-worker');\n    return false;\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return this.targetInfo.url as Platform.DevToolsPath.UrlString;\n  }\n}\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {ResourcesPanel} from './ResourcesPanel.js';\n\nexport class ApplicationPanelTreeElement extends UI.TreeOutline.TreeElement {\n  protected readonly resourcesPanel: ResourcesPanel;\n\n  constructor(resourcesPanel: ResourcesPanel, title: string, expandable: boolean, jslogContext: string) {\n    super(title, expandable, jslogContext);\n    this.resourcesPanel = resourcesPanel;\n    UI.ARIAUtils.setLabel(this.listItemElement, title);\n    this.listItemElement.tabIndex = -1;\n  }\n\n  override deselect(): void {\n    super.deselect();\n    this.listItemElement.tabIndex = -1;\n  }\n\n  get itemURL(): Platform.DevToolsPath.UrlString {\n    throw new Error('Unimplemented Method');\n  }\n\n  override onselect(selectedByUser: boolean|undefined): boolean {\n    if (!selectedByUser) {\n      return false;\n    }\n\n    const path: Platform.DevToolsPath.UrlString[] = [];\n    for (let el: UI.TreeOutline.TreeElement|null = this; el; el = el.parent) {\n      const url = el instanceof ApplicationPanelTreeElement && el.itemURL;\n      if (!url) {\n        break;\n      }\n      path.push(url);\n    }\n    this.resourcesPanel.setLastSelectedItemPath(path);\n\n    return false;\n  }\n\n  showView(view: UI.Widget.Widget|null): void {\n    this.resourcesPanel.showView(view);\n  }\n}\n\nexport class ExpandableApplicationPanelTreeElement extends ApplicationPanelTreeElement {\n  protected readonly expandedSetting: Common.Settings.Setting<boolean>;\n  protected readonly categoryName: string;\n  protected categoryLink: Platform.DevToolsPath.UrlString|null;\n\n  // These strings are used for the empty state in each top most tree element\n  // in the Application Panel.\n  protected emptyCategoryHeadline: string;\n  protected categoryDescription: string;\n\n  constructor(\n      resourcesPanel: ResourcesPanel, categoryName: string, emptyCategoryHeadline: string, categoryDescription: string,\n      settingsKey: string, settingsDefault = false) {\n    super(resourcesPanel, categoryName, false, settingsKey);\n    this.expandedSetting =\n        Common.Settings.Settings.instance().createSetting('resources-' + settingsKey + '-expanded', settingsDefault);\n    this.categoryName = categoryName;\n    this.categoryLink = null;\n    this.emptyCategoryHeadline = emptyCategoryHeadline;\n    this.categoryDescription = categoryDescription;\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'category://' + this.categoryName as Platform.DevToolsPath.UrlString;\n  }\n\n  setLink(link: Platform.DevToolsPath.UrlString): void {\n    this.categoryLink = link;\n  }\n\n  override onselect(selectedByUser: boolean|undefined): boolean {\n    super.onselect(selectedByUser);\n    this.updateCategoryView();\n    return false;\n  }\n\n  private updateCategoryView(): void {\n    const headline = this.childCount() === 0 ? this.emptyCategoryHeadline : this.categoryName;\n    this.resourcesPanel.showCategoryView(this.categoryName, headline, this.categoryDescription, this.categoryLink);\n  }\n\n  override appendChild(\n      child: UI.TreeOutline.TreeElement,\n      comparator?: ((arg0: UI.TreeOutline.TreeElement, arg1: UI.TreeOutline.TreeElement) => number)|undefined): void {\n    super.appendChild(child, comparator);\n    // Only update if relevant (changing from 0 to 1 child).\n    if (this.selected && this.childCount() === 1) {\n      this.updateCategoryView();\n    }\n  }\n\n  override removeChild(child: UI.TreeOutline.TreeElement): void {\n    super.removeChild(child);\n    // Only update if relevant (changing to 0 children).\n    if (this.selected && this.childCount() === 0) {\n      this.updateCategoryView();\n    }\n  }\n\n  override onattach(): void {\n    super.onattach();\n    if (this.expandedSetting.get()) {\n      this.expand();\n    }\n  }\n\n  override onexpand(): void {\n    this.expandedSetting.set(true);\n  }\n\n  override oncollapse(): void {\n    this.expandedSetting.set(false);\n  }\n}\n", "// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport appManifestViewStyles from './appManifestView.css.js';\nimport * as ApplicationComponents from './components/components.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  errorsAndWarnings: 'Errors and warnings',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  installability: 'Installability',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  identity: 'Identity',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  presentation: 'Presentation',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  protocolHandlers: 'Protocol Handlers',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  icons: 'Icons',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  windowControlsOverlay: 'Window Controls Overlay',\n  /**\n   * @description Label in the App Manifest View for the \"name\" property of web app or shortcut item\n   */\n  name: 'Name',\n  /**\n   * @description Label in the App Manifest View for the \"short_name\" property of web app or shortcut item\n   */\n  shortName: 'Short name',\n  /**\n   * @description Label in the App Manifest View for the \"url\" property of shortcut item\n   */\n  url: 'URL',\n  /**\n   * @description Label in the App Manifest View for the Computed App Id\n   */\n  computedAppId: 'Computed App ID',\n  /**\n   * @description Popup-text explaining what the App Id is used for.\n   */\n  appIdExplainer:\n      'This is used by the browser to know whether the manifest should be updating an existing application, or whether it refers to a new web app that can be installed.',\n  /**\n   * @description Text which is a hyperlink to more documentation\n   */\n  learnMore: 'Learn more',\n  /**\n   * @description Explanation why it is advisable to specify an 'id' field in the manifest.\n   * @example {/index.html} PH1\n   * @example {(button for copying suggested value into clipboard)} PH2\n   */\n  appIdNote:\n      'Note: `id` is not specified in the manifest, `start_url` is used instead. To specify an App ID that matches the current identity, set the `id` field to {PH1} {PH2}.',\n\n  /**\n   * @description Tooltip text that appears when hovering over a button which copies the previous text to the clipboard.\n   */\n  copyToClipboard: 'Copy suggested ID to clipboard',\n  /**\n   * @description Screen reader announcement string when the user clicks the copy to clipboard button.\n   * @example {/index.html} PH1\n   */\n  copiedToClipboard: 'Copied suggested ID {PH1} to clipboard',\n  /**\n   * @description Label in the App Manifest View for the \"description\" property of web app or shortcut item\n   */\n  description: 'Description',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  startUrl: 'Start URL',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  themeColor: 'Theme color',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  backgroundColor: 'Background color',\n  /**\n   * @description Text for the orientation of something\n   */\n  orientation: 'Orientation',\n  /**\n   * @description Title of the display attribute in App Manifest View of the Application panel\n   * The display attribute defines the preferred display mode for the app such fullscreen or\n   * standalone.\n   * For more details see https://www.w3.org/TR/appmanifest/#display-member.\n   */\n  display: 'Display',\n  /**\n   * @description Title of the new_note_url attribute in the Application panel\n   */\n  newNoteUrl: 'New note URL',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  descriptionMayBeTruncated: 'Description may be truncated.',\n  /**\n   * @description Warning text about too many shortcuts\n   */\n  shortcutsMayBeNotAvailable:\n      'The maximum number of shortcuts is platform dependent. Some shortcuts may be not available.',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  showOnlyTheMinimumSafeAreaFor: 'Show only the minimum safe area for maskable icons',\n  /**\n   * @description Link text for more information on maskable icons in App Manifest view of the Application panel\n   */\n  documentationOnMaskableIcons: 'documentation on maskable icons',\n  /**\n   * @description Text wrapping a link pointing to more information on maskable icons in App Manifest view of the Application panel\n   * @example {https://web.dev/maskable-icon/} PH1\n   */\n  needHelpReadOurS: 'Need help? Read the {PH1}.',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   * @example {1} PH1\n   */\n  shortcutS: 'Shortcut #{PH1}',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   * @example {1} PH1\n   */\n  shortcutSShouldIncludeAXPixel: 'Shortcut #{PH1} should include a 96×96 pixel icon',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   * @example {1} PH1\n   */\n  screenshotS: 'Screenshot #{PH1}',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  pageIsNotLoadedInTheMainFrame: 'Page is not loaded in the main frame',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  pageIsNotServedFromASecureOrigin: 'Page is not served from a secure origin',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  pageHasNoManifestLinkUrl: 'Page has no manifest <link> `URL`',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  manifestCouldNotBeFetchedIsEmpty: 'Manifest could not be fetched, is empty, or could not be parsed',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  manifestStartUrlIsNotValid: 'Manifest \\'`start_url`\\' is not valid',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  manifestDoesNotContainANameOr: 'Manifest does not contain a \\'`name`\\' or \\'`short_name`\\' field',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  manifestDisplayPropertyMustBeOne:\n      'Manifest \\'`display`\\' property must be one of \\'`standalone`\\', \\'`fullscreen`\\', or \\'`minimal-ui`\\'',\n  /**\n   * @description Manifest installability error in the Application panel\n   * @example {100} PH1\n   */\n  manifestDoesNotContainASuitable:\n      'Manifest does not contain a suitable icon—PNG, SVG, or WebP format of at least {PH1}px is required, the \\'`sizes`\\' attribute must be set, and the \\'`purpose`\\' attribute, if set, must include \\'`any`\\'.',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  avoidPurposeAnyAndMaskable:\n      'Declaring an icon with \\'`purpose`\\' of \\'`any maskable`\\' is discouraged. It is likely to look incorrect on some platforms due to too much or too little padding.',\n  /**\n   * @description Manifest installability error in the Application panel\n   * @example {100} PH1\n   */\n  noSuppliedIconIsAtLeastSpxSquare:\n      'No supplied icon is at least {PH1} pixels square in `PNG`, `SVG`, or `WebP` format, with the purpose attribute unset or set to \\'`any`\\'.',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  couldNotDownloadARequiredIcon: 'Could not download a required icon from the manifest',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  downloadedIconWasEmptyOr: 'Downloaded icon was empty or corrupted',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  theSpecifiedApplicationPlatform: 'The specified application platform is not supported on Android',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  noPlayStoreIdProvided: 'No Play store ID provided',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  thePlayStoreAppUrlAndPlayStoreId: 'The Play Store app URL and Play Store ID do not match',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  theAppIsAlreadyInstalled: 'The app is already installed',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  aUrlInTheManifestContainsA: 'A URL in the manifest contains a username, password, or port',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  pageIsLoadedInAnIncognitoWindow: 'Page is loaded in an incognito window',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  pageDoesNotWorkOffline: 'Page does not work offline',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  couldNotCheckServiceWorker: 'Could not check `service worker` without a \\'`start_url`\\' field in the manifest',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  manifestSpecifies: 'Manifest specifies \\'`prefer_related_applications`: true\\'',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  preferrelatedapplicationsIsOnly:\n      '\\'`prefer_related_applications`\\' is only supported on `Chrome` Beta and Stable channels on `Android`.',\n  /**\n   * @description Manifest installability error in the Application panel\n   */\n  manifestContainsDisplayoverride:\n      'Manifest contains \\'`display_override`\\' field, and the first supported display mode must be one of \\'`standalone`\\', \\'`fullscreen`\\', or \\'`minimal-ui`\\'',\n  /**\n   * @description Warning message for offline capability check\n   * @example {https://developer.chrome.com/blog/improved-pwa-offline-detection} PH1\n   */\n  pageDoesNotWorkOfflineThePage:\n      'Page does not work offline. Starting in Chrome 93, the installability criteria are changing, and this site will not be installable. See {PH1} for more information.',\n  /**\n   * @description Text to indicate the source of an image\n   * @example {example.com} PH1\n   */\n  imageFromS: 'Image from {PH1}',\n  /**\n   * @description Text for one or a group of screenshots\n   */\n  screenshot: 'Screenshot',\n  /**\n   * @description Label in the App Manifest View for the \"form_factor\" property of screenshot\n   */\n  formFactor: 'Form factor',\n  /**\n   * @description Label in the App Manifest View for the \"label\" property of screenshot\n   */\n  label: 'Label',\n  /**\n   * @description Label in the App Manifest View for the \"platform\" property of screenshot\n   */\n  platform: 'Platform',\n  /**\n   * @description Text in App Manifest View of the Application panel\n   */\n  icon: 'Icon',\n  /**\n   * @description This is a warning message telling the user about a problem where the src attribute\n   * of an image has not be entered/provided correctly. 'src' is part of the DOM API and should not\n   * be translated.\n   * @example {ImageName} PH1\n   */\n  sSrcIsNotSet: '{PH1} \\'`src`\\' is not set',\n  /**\n   * @description Warning message for image resources from the manifest\n   * @example {Screenshot} PH1\n   * @example {https://example.com/image.png} PH2\n   */\n  sUrlSFailedToParse: '{PH1} URL \\'\\'{PH2}\\'\\' failed to parse',\n  /**\n   * @description Warning message for image resources from the manifest\n   * @example {Image} PH1\n   * @example {https://example.com/image.png} PH2\n   */\n  sSFailedToLoad: '{PH1} {PH2} failed to load',\n  /**\n   * @description Warning message for image resources from the manifest\n   * @example {Image} PH1\n   * @example {https://example.com/image.png} PH2\n   */\n  sSDoesNotSpecifyItsSizeInThe: '{PH1} {PH2} does not specify its size in the manifest',\n  /**\n   * @description Warning message for image resources from the manifest\n   * @example {Image} PH1\n   * @example {https://example.com/image.png} PH2\n   */\n  sSShouldSpecifyItsSizeAs: '{PH1} {PH2} should specify its size as `[width]x[height]`',\n  /**\n   * @description Warning message for image resources from the manifest\n   */\n  sSShouldHaveSquareIcon:\n      'Most operating systems require square icons. Please include at least one square icon in the array.',\n  /**\n   * @description Warning message for image resources from the manifest\n   * @example {100} PH1\n   * @example {100} PH2\n   * @example {Image} PH3\n   * @example {https://example.com/image.png} PH4\n   * @example {200} PH5\n   * @example {200} PH6\n   */\n  actualSizeSspxOfSSDoesNotMatch:\n      'Actual size ({PH1}×{PH2})px of {PH3} {PH4} does not match specified size ({PH5}×{PH6}px)',\n  /**\n   * @description Warning message for image resources from the manifest\n   * @example {100} PH1\n   * @example {Image} PH2\n   * @example {https://example.com/image.png} PH3\n   * @example {200} PH4\n   */\n  actualWidthSpxOfSSDoesNotMatch: 'Actual width ({PH1}px) of {PH2} {PH3} does not match specified width ({PH4}px)',\n  /**\n   * @description Warning message for image resources from the manifest\n   * @example {100} PH1\n   * @example {Image} PH2\n   * @example {https://example.com/image.png} PH3\n   * @example {100} PH4\n   */\n  actualHeightSpxOfSSDoesNotMatch: 'Actual height ({PH1}px) of {PH2} {PH3} does not match specified height ({PH4}px)',\n  /**\n   * @description Warning message for image resources from the manifest\n   * @example {Image} PH1\n   * @example {https://example.com/image.png} PH2\n   */\n  sSSizeShouldBeAtLeast320: '{PH1} {PH2} size should be at least 320×320',\n  /**\n   * @description Warning message for image resources from the manifest\n   * @example {Image} PH1\n   * @example {https://example.com/image.png} PH2\n   */\n  sSSizeShouldBeAtMost3840: '{PH1} {PH2} size should be at most 3840×3840',\n  /**\n   * @description Warning message for image resources from the manifest\n   * @example {Image} PH1\n   * @example {https://example.com/image.png} PH2\n   */\n  sSWidthDoesNotComplyWithRatioRequirement: '{PH1} {PH2} width can\\'t be more than 2.3 times as long as the height',\n  /**\n   * @description Warning message for image resources from the manifest\n   * @example {Image} PH1\n   * @example {https://example.com/image.png} PH2\n   */\n  sSHeightDoesNotComplyWithRatioRequirement: '{PH1} {PH2} height can\\'t be more than 2.3 times as long as the width',\n  /**\n   * @description Manifest installability error in the Application panel\n   * @example {https://example.com/image.png} url\n   */\n  screenshotPixelSize:\n      'Screenshot {url} should specify a pixel size `[width]x[height]` instead of `any` as first size.',\n  /**\n   * @description Warning text about screenshots for Richer PWA Install UI on desktop\n   */\n  noScreenshotsForRicherPWAInstallOnDesktop:\n      'Richer PWA Install UI won’t be available on desktop. Please add at least one screenshot with the `form_factor` set to `wide`.',\n  /**\n   * @description Warning text about screenshots for Richer PWA Install UI on mobile\n   */\n  noScreenshotsForRicherPWAInstallOnMobile:\n      'Richer PWA Install UI won’t be available on mobile. Please add at least one screenshot for which `form_factor` is not set or set to a value other than `wide`.',\n  /**\n   * @description Warning text about too many screenshots for desktop\n   */\n  tooManyScreenshotsForDesktop: 'No more than 8 screenshots will be displayed on desktop. The rest will be ignored.',\n  /**\n   * @description Warning text about too many screenshots for mobile\n   */\n  tooManyScreenshotsForMobile: 'No more than 5 screenshots will be displayed on mobile. The rest will be ignored.',\n  /**\n   * @description Warning text about not all screenshots matching the appropriate form factor have the same aspect ratio\n   */\n  screenshotsMustHaveSameAspectRatio:\n      'All screenshots with the same `form_factor` must have the same aspect ratio as the first screenshot with that `form_factor`. Some screenshots will be ignored.',\n  /**\n   * @description Message for Window Controls Overlay value succsessfully found with links to documnetation\n   * @example {window-controls-overlay} PH1\n   * @example {https://developer.mozilla.org/en-US/docs/Web/Manifest/display_override} PH2\n   * @example {https://developer.mozilla.org/en-US/docs/Web/Manifest} PH3\n   */\n  wcoFound: 'Chrome has successfully found the {PH1} value for the {PH2} field in the {PH3}.',\n  /**\n   * @description Message for Windows Control Overlay value not found with link to documentation\n   * @example {https://developer.mozilla.org/en-US/docs/Web/Manifest/display_override} PH1\n   */\n  wcoNotFound:\n      'Define {PH1} in the manifest to use the Window Controls Overlay API and customize your app\\'s title bar.',\n  /**\n   * @description Link text for more information on customizing Window Controls Overlay title bar in the Application panel\n   */\n  customizePwaTitleBar: 'Customize the window controls overlay of your PWA\\'s title bar',\n  /**\n   * @description Text wrapping link to documentation on how to customize WCO title bar\n   * @example {https://learn.microsoft.com/en-us/microsoft-edge/progressive-web-apps-chromium/how-to/window-controls-overlay} PH1\n   */\n  wcoNeedHelpReadMore: 'Need help? Read {PH1}.',\n  /**\n   * @description Text for emulation OS selection dropdown\n   */\n  selectWindowControlsOverlayEmulationOs: 'Emulate the Window Controls Overlay on',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/AppManifestView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type ParsedSize = {\n  any: 'any',\n  formatted: string,\n}|{\n  width: number,\n  height: number,\n  formatted: string,\n};\n\ninterface Screenshot {\n  src: string;\n  type?: string;\n  sizes?: string;\n  label?: string;\n  form_factor?: string;  // eslint-disable-line @typescript-eslint/naming-convention\n  platform?: string;\n}\n\nexport class AppManifestView extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox)\n    implements SDK.TargetManager.Observer {\n  private readonly emptyView: UI.EmptyWidget.EmptyWidget;\n  private readonly reportView: UI.ReportView.ReportView;\n  private readonly errorsSection: UI.ReportView.Section;\n  private readonly installabilitySection: UI.ReportView.Section;\n  private readonly identitySection: UI.ReportView.Section;\n  private readonly presentationSection: UI.ReportView.Section;\n  private readonly iconsSection: UI.ReportView.Section;\n  private readonly windowControlsSection: UI.ReportView.Section;\n  private readonly protocolHandlersSection: UI.ReportView.Section;\n  private readonly shortcutSections: UI.ReportView.Section[];\n  private readonly screenshotsSections: UI.ReportView.Section[];\n  private nameField: HTMLElement;\n  private shortNameField: HTMLElement;\n  private descriptionField: Element;\n  private readonly startURLField: HTMLElement;\n  private readonly themeColorSwatch: InlineEditor.ColorSwatch.ColorSwatch;\n  private readonly backgroundColorSwatch: InlineEditor.ColorSwatch.ColorSwatch;\n  private orientationField: HTMLElement;\n  private displayField: HTMLElement;\n  private readonly newNoteUrlField: HTMLElement;\n  private readonly throttler: Common.Throttler.Throttler;\n  private registeredListeners: Common.EventTarget.EventDescriptor[];\n  private target?: SDK.Target.Target;\n  private resourceTreeModel?: SDK.ResourceTreeModel.ResourceTreeModel|null;\n  private serviceWorkerManager?: SDK.ServiceWorkerManager.ServiceWorkerManager|null;\n  private overlayModel?: SDK.OverlayModel.OverlayModel|null;\n  private protocolHandlersView: ApplicationComponents.ProtocolHandlersView.ProtocolHandlersView;\n\n  constructor(\n      emptyView: UI.EmptyWidget.EmptyWidget, reportView: UI.ReportView.ReportView,\n      throttler: Common.Throttler.Throttler) {\n    super({\n      jslog: `${VisualLogging.pane('manifest')}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(appManifestViewStyles);\n\n    this.contentElement.classList.add('manifest-container');\n\n    this.emptyView = emptyView;\n    this.emptyView.link = 'https://web.dev/add-manifest/' as Platform.DevToolsPath.UrlString;\n\n    this.emptyView.show(this.contentElement);\n    this.emptyView.hideWidget();\n\n    this.reportView = reportView;\n    this.reportView.registerRequiredCSS(appManifestViewStyles);\n    this.reportView.element.classList.add('manifest-view-header');\n    this.reportView.show(this.contentElement);\n    this.reportView.hideWidget();\n\n    this.errorsSection =\n        this.reportView.appendSection(i18nString(UIStrings.errorsAndWarnings), undefined, 'errors-and-warnings');\n    this.installabilitySection =\n        this.reportView.appendSection(i18nString(UIStrings.installability), undefined, 'installability');\n    this.identitySection = this.reportView.appendSection(i18nString(UIStrings.identity), 'undefined,identity');\n    this.presentationSection =\n        this.reportView.appendSection(i18nString(UIStrings.presentation), 'undefined,presentation');\n    this.protocolHandlersSection =\n        this.reportView.appendSection(i18nString(UIStrings.protocolHandlers), 'undefined,protocol-handlers');\n    this.protocolHandlersView = new ApplicationComponents.ProtocolHandlersView.ProtocolHandlersView();\n    this.protocolHandlersSection.appendFieldWithCustomView(this.protocolHandlersView);\n    this.iconsSection = this.reportView.appendSection(i18nString(UIStrings.icons), 'report-section-icons', 'icons');\n    this.windowControlsSection =\n        this.reportView.appendSection(UIStrings.windowControlsOverlay, undefined, 'window-controls-overlay');\n    this.shortcutSections = [];\n    this.screenshotsSections = [];\n\n    this.nameField = this.identitySection.appendField(i18nString(UIStrings.name));\n    this.shortNameField = this.identitySection.appendField(i18nString(UIStrings.shortName));\n    this.descriptionField = this.identitySection.appendFlexedField(i18nString(UIStrings.description));\n\n    this.startURLField = this.presentationSection.appendField(i18nString(UIStrings.startUrl));\n    UI.ARIAUtils.setLabel(this.startURLField, i18nString(UIStrings.startUrl));\n\n    const themeColorField = this.presentationSection.appendField(i18nString(UIStrings.themeColor));\n    this.themeColorSwatch = new InlineEditor.ColorSwatch.ColorSwatch();\n    themeColorField.appendChild(this.themeColorSwatch);\n\n    const backgroundColorField = this.presentationSection.appendField(i18nString(UIStrings.backgroundColor));\n    this.backgroundColorSwatch = new InlineEditor.ColorSwatch.ColorSwatch();\n    backgroundColorField.appendChild(this.backgroundColorSwatch);\n\n    this.orientationField = this.presentationSection.appendField(i18nString(UIStrings.orientation));\n    this.displayField = this.presentationSection.appendField(i18nString(UIStrings.display));\n\n    this.newNoteUrlField = this.presentationSection.appendField(i18nString(UIStrings.newNoteUrl));\n\n    this.throttler = throttler;\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n    this.registeredListeners = [];\n  }\n\n  getStaticSections(): UI.ReportView.Section[] {\n    return [\n      this.identitySection,\n      this.presentationSection,\n      this.protocolHandlersSection,\n      this.iconsSection,\n      this.windowControlsSection,\n    ];\n  }\n\n  getManifestElement(): Element {\n    return this.reportView.getHeaderElement();\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    if (target !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.target = target;\n    this.resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    this.serviceWorkerManager = target.model(SDK.ServiceWorkerManager.ServiceWorkerManager);\n    this.overlayModel = target.model(SDK.OverlayModel.OverlayModel);\n    if (!this.resourceTreeModel || !this.serviceWorkerManager || !this.overlayModel) {\n      return;\n    }\n\n    void this.updateManifest(true);\n\n    this.registeredListeners = [\n      this.resourceTreeModel.addEventListener(\n          SDK.ResourceTreeModel.Events.DOMContentLoaded,\n          () => {\n            void this.updateManifest(true);\n          }),\n      this.serviceWorkerManager.addEventListener(\n          SDK.ServiceWorkerManager.Events.REGISTRATION_UPDATED,\n          () => {\n            void this.updateManifest(false);\n          }),\n    ];\n  }\n\n  targetRemoved(target: SDK.Target.Target): void {\n    if (this.target !== target) {\n      return;\n    }\n    if (!this.resourceTreeModel || !this.serviceWorkerManager || !this.overlayModel) {\n      return;\n    }\n    delete this.resourceTreeModel;\n    delete this.serviceWorkerManager;\n    delete this.overlayModel;\n    Common.EventTarget.removeEventListeners(this.registeredListeners);\n  }\n\n  private async updateManifest(immediately: boolean): Promise<void> {\n    if (!this.resourceTreeModel) {\n      return;\n    }\n    const [{url, data, errors}, installabilityErrors, appId] = await Promise.all([\n      this.resourceTreeModel.fetchAppManifest(),\n      this.resourceTreeModel.getInstallabilityErrors(),\n      this.resourceTreeModel.getAppId(),\n    ]);\n\n    void this.throttler.schedule(\n        () => this.renderManifest(url, data, errors, installabilityErrors, appId),\n        immediately ? Common.Throttler.Scheduling.AS_SOON_AS_POSSIBLE : Common.Throttler.Scheduling.DEFAULT);\n  }\n\n  private async renderManifest(\n      url: Platform.DevToolsPath.UrlString, data: string|null, errors: Protocol.Page.AppManifestError[],\n      installabilityErrors: Protocol.Page.InstallabilityError[],\n      appIdResponse: Protocol.Page.GetAppIdResponse): Promise<void> {\n    const appId = appIdResponse?.appId || null;\n    const recommendedId = appIdResponse?.recommendedId || null;\n    if ((!data || data === '{}') && !errors.length) {\n      this.emptyView.showWidget();\n      this.reportView.hideWidget();\n      this.dispatchEventToListeners(Events.MANIFEST_DETECTED, false);\n      return;\n    }\n    this.emptyView.hideWidget();\n    this.reportView.showWidget();\n    this.dispatchEventToListeners(Events.MANIFEST_DETECTED, true);\n\n    const link = Components.Linkifier.Linkifier.linkifyURL(url);\n    link.tabIndex = 0;\n    this.reportView.setURL(link);\n    this.errorsSection.clearContent();\n    this.errorsSection.element.classList.toggle('hidden', !errors.length);\n    for (const error of errors) {\n      const icon = UI.UIUtils.createIconLabel({\n        title: error.message,\n        iconName: error.critical ? 'cross-circle-filled' : 'warning-filled',\n        color: error.critical ? 'var(--icon-error)' : 'var(--icon-warning)',\n      });\n      this.errorsSection.appendRow().appendChild(icon);\n    }\n\n    if (!data) {\n      return;\n    }\n\n    if (data.charCodeAt(0) === 0xFEFF) {\n      data = data.slice(1);\n    }  // Trim the BOM as per https://tools.ietf.org/html/rfc7159#section-8.1.\n\n    const parsedManifest = JSON.parse(data);\n    this.nameField.textContent = stringProperty('name');\n    this.shortNameField.textContent = stringProperty('short_name');\n\n    const warnings = [];\n\n    const description = stringProperty('description');\n    this.descriptionField.textContent = description;\n    // See https://crbug.com/1354304 for details.\n    if (description.length > 300) {\n      warnings.push(i18nString(UIStrings.descriptionMayBeTruncated));\n    }\n\n    const startURL = stringProperty('start_url');\n    if (appId && recommendedId) {\n      const appIdField = this.identitySection.appendField(i18nString(UIStrings.computedAppId));\n      UI.ARIAUtils.setLabel(appIdField, 'App Id');\n      appIdField.textContent = appId;\n\n      const helpIcon = IconButton.Icon.create('help', 'inline-icon');\n      helpIcon.title = i18nString(UIStrings.appIdExplainer);\n      helpIcon.setAttribute('jslog', `${VisualLogging.action('help').track({hover: true})}`);\n      appIdField.appendChild(helpIcon);\n\n      const learnMoreLink = UI.XLink.XLink.create(\n          'https://developer.chrome.com/blog/pwa-manifest-id/', i18nString(UIStrings.learnMore), undefined, undefined,\n          'learn-more');\n      appIdField.appendChild(learnMoreLink);\n\n      if (!stringProperty('id')) {\n        const suggestedIdNote = appIdField.createChild('div', 'multiline-value');\n        const suggestedIdSpan = document.createElement('code');\n        suggestedIdSpan.textContent = recommendedId;\n\n        const copyButton = new Buttons.Button.Button();\n        copyButton.data = {\n          variant: Buttons.Button.Variant.ICON,\n          iconName: 'copy',\n          size: Buttons.Button.Size.SMALL,\n          jslogContext: 'manifest.copy-id',\n          title: i18nString(UIStrings.copyToClipboard),\n        };\n        copyButton.className = 'inline-button';\n        copyButton.addEventListener('click', () => {\n          UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.copiedToClipboard, {PH1: recommendedId}));\n          Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(recommendedId);\n        });\n        suggestedIdNote.appendChild(\n            i18n.i18n.getFormatLocalizedString(str_, UIStrings.appIdNote, {PH1: suggestedIdSpan, PH2: copyButton}));\n      }\n    } else {\n      this.identitySection.removeField(i18nString(UIStrings.computedAppId));\n    }\n\n    this.startURLField.removeChildren();\n    if (startURL) {\n      const completeURL = Common.ParsedURL.ParsedURL.completeURL(url, startURL);\n      if (completeURL) {\n        const link = Components.Linkifier.Linkifier.linkifyURL(\n            completeURL, ({text: startURL} as Components.Linkifier.LinkifyURLOptions));\n        link.tabIndex = 0;\n        link.setAttribute('jslog', `${VisualLogging.link('start-url').track({click: true})}`);\n        this.startURLField.appendChild(link);\n      }\n    }\n\n    this.themeColorSwatch.classList.toggle('hidden', !stringProperty('theme_color'));\n    const themeColor = Common.Color.parse(stringProperty('theme_color') || 'white') || Common.Color.parse('white');\n    if (themeColor) {\n      this.themeColorSwatch.renderColor(themeColor);\n    }\n    this.backgroundColorSwatch.classList.toggle('hidden', !stringProperty('background_color'));\n    const backgroundColor =\n        Common.Color.parse(stringProperty('background_color') || 'white') || Common.Color.parse('white');\n    if (backgroundColor) {\n      this.backgroundColorSwatch.renderColor(backgroundColor);\n    }\n\n    this.orientationField.textContent = stringProperty('orientation');\n    const displayType = stringProperty('display');\n    this.displayField.textContent = displayType;\n\n    const noteTaking = parsedManifest['note_taking'] || {};\n    const newNoteUrl = noteTaking['new_note_url'];\n    const hasNewNoteUrl = typeof newNoteUrl === 'string';\n    this.newNoteUrlField.parentElement?.classList.toggle('hidden', !hasNewNoteUrl);\n    this.newNoteUrlField.removeChildren();\n    if (hasNewNoteUrl) {\n      const completeURL = (Common.ParsedURL.ParsedURL.completeURL(url, newNoteUrl) as Platform.DevToolsPath.UrlString);\n      const link = Components.Linkifier.Linkifier.linkifyURL(\n          completeURL, ({text: newNoteUrl} as Components.Linkifier.LinkifyURLOptions));\n      link.tabIndex = 0;\n      this.newNoteUrlField.appendChild(link);\n    }\n\n    const protocolHandlers = parsedManifest['protocol_handlers'] || [];\n    this.protocolHandlersView.data = {protocolHandlers, manifestLink: url};\n\n    const icons = parsedManifest['icons'] || [];\n    this.iconsSection.clearContent();\n\n    const shortcuts = parsedManifest['shortcuts'] || [];\n    for (const shortcutsSection of this.shortcutSections) {\n      shortcutsSection.detach(/** overrideHideOnDetach= */ true);\n    }\n\n    const screenshots: Screenshot[] = parsedManifest['screenshots'] || [];\n    for (const screenshotSection of this.screenshotsSections) {\n      screenshotSection.detach(/** overrideHideOnDetach= */ true);\n    }\n\n    const imageErrors: Platform.UIString.LocalizedString[] = [];\n\n    const setIconMaskedCheckbox = UI.UIUtils.CheckboxLabel.create(i18nString(UIStrings.showOnlyTheMinimumSafeAreaFor));\n    setIconMaskedCheckbox.classList.add('mask-checkbox');\n    setIconMaskedCheckbox.setAttribute(\n        'jslog', `${VisualLogging.toggle('show-minimal-safe-area-for-maskable-icons').track({change: true})}`);\n    setIconMaskedCheckbox.addEventListener('click', () => {\n      this.iconsSection.setIconMasked(setIconMaskedCheckbox.checked);\n    });\n    this.iconsSection.appendRow().appendChild(setIconMaskedCheckbox);\n    const documentationLink = UI.XLink.XLink.create(\n        'https://web.dev/maskable-icon/', i18nString(UIStrings.documentationOnMaskableIcons), undefined, undefined,\n        'learn-more');\n    this.iconsSection.appendRow().appendChild(\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.needHelpReadOurS, {PH1: documentationLink}));\n\n    let squareSizedIconAvailable = false;\n    for (const icon of icons) {\n      const result = await this.appendImageResourceToSection(url, icon, this.iconsSection, /** isScreenshot= */ false);\n      imageErrors.push(...result.imageResourceErrors);\n      squareSizedIconAvailable = result.squareSizedIconAvailable || squareSizedIconAvailable;\n    }\n    if (!squareSizedIconAvailable) {\n      imageErrors.push(i18nString(UIStrings.sSShouldHaveSquareIcon));\n    }\n\n    if (shortcuts.length > 4) {\n      warnings.push(i18nString(UIStrings.shortcutsMayBeNotAvailable));\n    }\n\n    let shortcutIndex = 1;\n    for (const shortcut of shortcuts) {\n      const shortcutSection = this.reportView.appendSection(i18nString(UIStrings.shortcutS, {PH1: shortcutIndex}));\n      shortcutSection.element.setAttribute('jslog', `${VisualLogging.section('shortcuts')}`);\n      this.shortcutSections.push(shortcutSection);\n\n      shortcutSection.appendFlexedField(i18nString(UIStrings.name), shortcut.name);\n      if (shortcut.short_name) {\n        shortcutSection.appendFlexedField(i18nString(UIStrings.shortName), shortcut.short_name);\n      }\n      if (shortcut.description) {\n        shortcutSection.appendFlexedField(i18nString(UIStrings.description), shortcut.description);\n      }\n      const urlField = shortcutSection.appendFlexedField(i18nString(UIStrings.url));\n      const shortcutUrl = Common.ParsedURL.ParsedURL.completeURL(url, shortcut.url) as Platform.DevToolsPath.UrlString;\n      const link = Components.Linkifier.Linkifier.linkifyURL(\n          shortcutUrl, ({text: shortcut.url} as Components.Linkifier.LinkifyURLOptions));\n      link.setAttribute('jslog', `${VisualLogging.link('shortcut').track({click: true})}`);\n      link.tabIndex = 0;\n      urlField.appendChild(link);\n\n      const shortcutIcons = shortcut.icons || [];\n      let hasShortcutIconLargeEnough = false;\n      for (const shortcutIcon of shortcutIcons) {\n        const {imageResourceErrors: shortcutIconErrors} =\n            await this.appendImageResourceToSection(url, shortcutIcon, shortcutSection, /** isScreenshot= */ false);\n        imageErrors.push(...shortcutIconErrors);\n        if (!hasShortcutIconLargeEnough && shortcutIcon.sizes) {\n          const shortcutIconSize = shortcutIcon.sizes.match(/^(\\d+)x(\\d+)$/);\n          if (shortcutIconSize && shortcutIconSize[1] >= 96 && shortcutIconSize[2] >= 96) {\n            hasShortcutIconLargeEnough = true;\n          }\n        }\n      }\n      if (!hasShortcutIconLargeEnough) {\n        imageErrors.push(i18nString(UIStrings.shortcutSShouldIncludeAXPixel, {PH1: shortcutIndex}));\n      }\n      shortcutIndex++;\n    }\n\n    let screenshotIndex = 1;\n    const formFactorScreenshotDimensions = new Map<string, {width: number, height: number}>();\n    let haveScreenshotsDifferentAspectRatio = false;\n    for (const screenshot of screenshots) {\n      const screenshotSection =\n          this.reportView.appendSection(i18nString(UIStrings.screenshotS, {PH1: screenshotIndex}));\n      this.screenshotsSections.push(screenshotSection);\n\n      if (screenshot.form_factor) {\n        screenshotSection.appendFlexedField(i18nString(UIStrings.formFactor), screenshot.form_factor);\n      }\n      if (screenshot.label) {\n        screenshotSection.appendFlexedField(i18nString(UIStrings.label), screenshot.label);\n      }\n      if (screenshot.platform) {\n        screenshotSection.appendFlexedField(i18nString(UIStrings.platform), screenshot.platform);\n      }\n\n      const {imageResourceErrors: screenshotErrors, naturalWidth: width, naturalHeight: height} =\n          await this.appendImageResourceToSection(url, screenshot, screenshotSection, /** isScreenshot= */ true);\n      imageErrors.push(...screenshotErrors);\n\n      if (screenshot.form_factor && width && height) {\n        formFactorScreenshotDimensions.has(screenshot.form_factor) ||\n            formFactorScreenshotDimensions.set(screenshot.form_factor, {width, height});\n        const formFactorFirstScreenshotDimensions = formFactorScreenshotDimensions.get(screenshot.form_factor);\n        if (formFactorFirstScreenshotDimensions) {\n          haveScreenshotsDifferentAspectRatio = haveScreenshotsDifferentAspectRatio ||\n              (width * formFactorFirstScreenshotDimensions.height !==\n               height * formFactorFirstScreenshotDimensions.width);\n        }\n      }\n\n      screenshotIndex++;\n    }\n\n    if (haveScreenshotsDifferentAspectRatio) {\n      warnings.push(i18nString(UIStrings.screenshotsMustHaveSameAspectRatio));\n    }\n\n    const screenshotsForDesktop = screenshots.filter(screenshot => screenshot.form_factor === 'wide');\n    const screenshotsForMobile = screenshots.filter(screenshot => screenshot.form_factor !== 'wide');\n\n    if (screenshotsForDesktop.length < 1) {\n      warnings.push(i18nString(UIStrings.noScreenshotsForRicherPWAInstallOnDesktop));\n    }\n    if (screenshotsForMobile.length < 1) {\n      warnings.push(i18nString(UIStrings.noScreenshotsForRicherPWAInstallOnMobile));\n    }\n    if (screenshotsForDesktop.length > 8) {\n      warnings.push(i18nString(UIStrings.tooManyScreenshotsForDesktop));\n    }\n    if (screenshotsForMobile.length > 5) {\n      warnings.push(i18nString(UIStrings.tooManyScreenshotsForMobile));\n    }\n\n    this.installabilitySection.clearContent();\n    this.installabilitySection.element.classList.toggle('hidden', !installabilityErrors.length);\n    const errorMessages = this.getInstallabilityErrorMessages(installabilityErrors);\n    for (const error of errorMessages) {\n      const msgElement = document.createTextNode(error);\n      this.installabilitySection.appendRow().appendChild(msgElement);\n    }\n\n    this.errorsSection.element.classList.toggle('hidden', !errors.length && !imageErrors.length && !warnings.length);\n    for (const warning of warnings) {\n      const msgElement = document.createTextNode(warning);\n      this.errorsSection.appendRow().appendChild(msgElement);\n    }\n    for (const error of imageErrors) {\n      const msgElement = document.createTextNode(error);\n      this.errorsSection.appendRow().appendChild(msgElement);\n    }\n\n    function stringProperty(name: string): string {\n      const value = parsedManifest[name];\n      if (typeof value !== 'string') {\n        return '';\n      }\n      return value;\n    }\n\n    this.windowControlsSection.clearContent();\n    const displayOverride = parsedManifest['display_override'] || [];\n    const hasWco = displayOverride.includes('window-controls-overlay');\n\n    const displayOverrideLink = UI.XLink.XLink.create(\n        'https://developer.mozilla.org/en-US/docs/Web/Manifest/display_override', 'display-override', undefined,\n        undefined, 'display-override');\n    const displayOverrideText = document.createElement('code');\n    displayOverrideText.appendChild(displayOverrideLink);\n\n    const wcoStatusMessage = this.windowControlsSection.appendRow();\n\n    if (hasWco) {\n      const checkmarkIcon = IconButton.Icon.create('check-circle', 'inline-icon');\n      wcoStatusMessage.appendChild(checkmarkIcon);\n\n      const wco = document.createElement('code');\n      wco.classList.add('wco');\n      wco.textContent = 'window-controls-overlay';\n      wcoStatusMessage.appendChild(i18n.i18n.getFormatLocalizedString(\n          str_, UIStrings.wcoFound, {PH1: wco, PH2: displayOverrideText, PH3: link}));\n\n      if (this.overlayModel) {\n        await this.appendWindowControlsToSection(this.overlayModel, url, stringProperty('theme_color'));\n      }\n    } else {\n      const infoIcon = IconButton.Icon.create('info', 'inline-icon');\n\n      wcoStatusMessage.appendChild(infoIcon);\n\n      wcoStatusMessage.appendChild(\n          i18n.i18n.getFormatLocalizedString(str_, UIStrings.wcoNotFound, {PH1: displayOverrideText}));\n    }\n\n    const wcoDocumentationLink = UI.XLink.XLink.create(\n        'https://learn.microsoft.com/en-us/microsoft-edge/progressive-web-apps-chromium/how-to/window-controls-overlay',\n        i18nString(UIStrings.customizePwaTitleBar), undefined, undefined, 'customize-pwa-tittle-bar');\n    this.windowControlsSection.appendRow().appendChild(\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.wcoNeedHelpReadMore, {PH1: wcoDocumentationLink}));\n\n    this.dispatchEventToListeners(Events.MANIFEST_RENDERED);\n  }\n\n  getInstallabilityErrorMessages(installabilityErrors: Protocol.Page.InstallabilityError[]): string[] {\n    const errorMessages = [];\n    for (const installabilityError of installabilityErrors) {\n      let errorMessage;\n      switch (installabilityError.errorId) {\n        case 'not-in-main-frame':\n          errorMessage = i18nString(UIStrings.pageIsNotLoadedInTheMainFrame);\n          break;\n        case 'not-from-secure-origin':\n          errorMessage = i18nString(UIStrings.pageIsNotServedFromASecureOrigin);\n          break;\n        case 'no-manifest':\n          errorMessage = i18nString(UIStrings.pageHasNoManifestLinkUrl);\n          break;\n        case 'manifest-empty':\n          errorMessage = i18nString(UIStrings.manifestCouldNotBeFetchedIsEmpty);\n          break;\n        case 'start-url-not-valid':\n          errorMessage = i18nString(UIStrings.manifestStartUrlIsNotValid);\n          break;\n        case 'manifest-missing-name-or-short-name':\n          errorMessage = i18nString(UIStrings.manifestDoesNotContainANameOr);\n          break;\n        case 'manifest-display-not-supported':\n          errorMessage = i18nString(UIStrings.manifestDisplayPropertyMustBeOne);\n          break;\n        case 'manifest-missing-suitable-icon':\n          if (installabilityError.errorArguments.length !== 1 ||\n              installabilityError.errorArguments[0].name !== 'minimum-icon-size-in-pixels') {\n            console.error('Installability error does not have the correct errorArguments');\n            break;\n          }\n          errorMessage =\n              i18nString(UIStrings.manifestDoesNotContainASuitable, {PH1: installabilityError.errorArguments[0].value});\n          break;\n        case 'no-acceptable-icon':\n          if (installabilityError.errorArguments.length !== 1 ||\n              installabilityError.errorArguments[0].name !== 'minimum-icon-size-in-pixels') {\n            console.error('Installability error does not have the correct errorArguments');\n            break;\n          }\n          errorMessage = i18nString(\n              UIStrings.noSuppliedIconIsAtLeastSpxSquare, {PH1: installabilityError.errorArguments[0].value});\n          break;\n        case 'cannot-download-icon':\n          errorMessage = i18nString(UIStrings.couldNotDownloadARequiredIcon);\n          break;\n        case 'no-icon-available':\n          errorMessage = i18nString(UIStrings.downloadedIconWasEmptyOr);\n          break;\n        case 'platform-not-supported-on-android':\n          errorMessage = i18nString(UIStrings.theSpecifiedApplicationPlatform);\n          break;\n        case 'no-id-specified':\n          errorMessage = i18nString(UIStrings.noPlayStoreIdProvided);\n          break;\n        case 'ids-do-not-match':\n          errorMessage = i18nString(UIStrings.thePlayStoreAppUrlAndPlayStoreId);\n          break;\n        case 'already-installed':\n          errorMessage = i18nString(UIStrings.theAppIsAlreadyInstalled);\n          break;\n        case 'url-not-supported-for-webapk':\n          errorMessage = i18nString(UIStrings.aUrlInTheManifestContainsA);\n          break;\n        case 'in-incognito':\n          errorMessage = i18nString(UIStrings.pageIsLoadedInAnIncognitoWindow);\n          break;\n        case 'not-offline-capable':\n          errorMessage = i18nString(UIStrings.pageDoesNotWorkOffline);\n          break;\n        case 'no-url-for-service-worker':\n          errorMessage = i18nString(UIStrings.couldNotCheckServiceWorker);\n          break;\n        case 'prefer-related-applications':\n          errorMessage = i18nString(UIStrings.manifestSpecifies);\n          break;\n        case 'prefer-related-applications-only-beta-stable':\n          errorMessage = i18nString(UIStrings.preferrelatedapplicationsIsOnly);\n          break;\n        case 'manifest-display-override-not-supported':\n          errorMessage = i18nString(UIStrings.manifestContainsDisplayoverride);\n          break;\n        case 'warn-not-offline-capable':\n          errorMessage = i18nString(\n              UIStrings.pageDoesNotWorkOfflineThePage,\n              {PH1: 'https://developer.chrome.com/blog/improved-pwa-offline-detection/'});\n          break;\n        default:\n          console.error(`Installability error id '${installabilityError.errorId}' is not recognized`);\n          break;\n      }\n      if (errorMessage) {\n        errorMessages.push(errorMessage);\n      }\n    }\n    return errorMessages;\n  }\n\n  private async loadImage(url: Platform.DevToolsPath.UrlString): Promise<{\n    image: HTMLImageElement,\n    wrapper: Element,\n  }|null> {\n    const frameId = this.resourceTreeModel?.mainFrame?.id;\n    if (!this.target) {\n      throw new Error('no target');\n    }\n    if (!frameId) {\n      throw new Error('no main frame found');\n    }\n    const {content} = await SDK.PageResourceLoader.PageResourceLoader.instance().loadResource(\n        url, {\n          target: this.target,\n          frameId,\n          initiatorUrl: this.target.inspectedURL(),\n        },\n        /* isBinary=*/ true);\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('image-wrapper');\n    const image = document.createElement('img');\n    const result = new Promise((resolve, reject) => {\n      image.onload = resolve;\n      image.onerror = reject;\n    });\n    // Octet-stream seems to work for most cases. If it turns out it\n    // does not work, we can parse mimeType out of the response headers\n    // using front_end/core/platform/MimeType.ts.\n    image.src = 'data:application/octet-stream;base64,' + await Common.Base64.encode(content);\n    image.alt = i18nString(UIStrings.imageFromS, {PH1: url});\n    wrapper.appendChild(image);\n    try {\n      await result;\n      return {wrapper, image};\n    } catch {\n    }\n    return null;\n  }\n\n  parseSizes(\n      sizes: string, resourceName: Platform.UIString.LocalizedString, imageUrl: string,\n      imageResourceErrors: Platform.UIString.LocalizedString[]): ParsedSize[] {\n    const rawSizeArray = sizes ? sizes.split(/\\s+/) : [];\n    const parsedSizes: ParsedSize[] = [];\n    for (const size of rawSizeArray) {\n      if (size === 'any') {\n        if (!parsedSizes.find(x => 'any' in x)) {\n          parsedSizes.push({any: 'any', formatted: 'any'});\n        }\n        continue;\n      }\n      const match = size.match(/^(?<width>\\d+)[xX](?<height>\\d+)$/);\n      if (match) {\n        const width = parseInt(match.groups?.width || '', 10);\n        const height = parseInt(match.groups?.height || '', 10);\n        const formatted = `${width}×${height}px`;\n        parsedSizes.push({width, height, formatted});\n      } else {\n        imageResourceErrors.push(i18nString(UIStrings.sSShouldSpecifyItsSizeAs, {PH1: resourceName, PH2: imageUrl}));\n      }\n    }\n    return parsedSizes;\n  }\n\n  checkSizeProblem(\n      size: ParsedSize, image: HTMLImageElement, resourceName: Platform.UIString.LocalizedString,\n      imageUrl: string): {hasSquareSize: boolean, error?: Platform.UIString.LocalizedString} {\n    if ('any' in size) {\n      return {hasSquareSize: image.naturalWidth === image.naturalHeight};\n    }\n    const hasSquareSize = size.width === size.height;\n    if (image.naturalWidth !== size.width && image.naturalHeight !== size.height) {\n      return {\n        error: i18nString(UIStrings.actualSizeSspxOfSSDoesNotMatch, {\n          PH1: image.naturalWidth,\n          PH2: image.naturalHeight,\n          PH3: resourceName,\n          PH4: imageUrl,\n          PH5: size.width,\n          PH6: size.height,\n        }),\n        hasSquareSize,\n      };\n    }\n    if (image.naturalWidth !== size.width) {\n      return {\n        error: i18nString(\n            UIStrings.actualWidthSpxOfSSDoesNotMatch,\n            {PH1: image.naturalWidth, PH2: resourceName, PH3: imageUrl, PH4: size.width}),\n        hasSquareSize,\n      };\n    }\n    if (image.naturalHeight !== size.height) {\n      return {\n        error: i18nString(\n            UIStrings.actualHeightSpxOfSSDoesNotMatch,\n            {PH1: image.naturalHeight, PH2: resourceName, PH3: imageUrl, PH4: size.height}),\n        hasSquareSize,\n      };\n    }\n    return {hasSquareSize};\n  }\n\n  private async appendImageResourceToSection(\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      baseUrl: Platform.DevToolsPath.UrlString, imageResource: any, section: UI.ReportView.Section,\n      isScreenshot: boolean): Promise<{\n    imageResourceErrors: Platform.UIString.LocalizedString[],\n    squareSizedIconAvailable?: boolean,\n    naturalWidth?: number,\n    naturalHeight?: number,\n  }> {\n    const imageResourceErrors: Platform.UIString.LocalizedString[] = [];\n    const resourceName = isScreenshot ? i18nString(UIStrings.screenshot) : i18nString(UIStrings.icon);\n    if (!imageResource.src) {\n      imageResourceErrors.push(i18nString(UIStrings.sSrcIsNotSet, {PH1: resourceName}));\n      return {imageResourceErrors};\n    }\n    const imageUrl = Common.ParsedURL.ParsedURL.completeURL(baseUrl, imageResource['src']);\n    if (!imageUrl) {\n      imageResourceErrors.push(\n          i18nString(UIStrings.sUrlSFailedToParse, {PH1: resourceName, PH2: imageResource['src']}));\n      return {imageResourceErrors};\n    }\n    const result = await this.loadImage(imageUrl);\n    if (!result) {\n      imageResourceErrors.push(i18nString(UIStrings.sSFailedToLoad, {PH1: resourceName, PH2: imageUrl}));\n      return {imageResourceErrors};\n    }\n    const {wrapper, image} = result;\n    const {naturalWidth, naturalHeight} = image;\n    const sizes = this.parseSizes(imageResource['sizes'], resourceName, imageUrl, imageResourceErrors);\n    const title = sizes.map(x => x.formatted).join(' ') + '\\n' + (imageResource['type'] || '');\n    const field = section.appendFlexedField(title);\n    let squareSizedIconAvailable = false;\n    if (!imageResource.sizes) {\n      imageResourceErrors.push(i18nString(UIStrings.sSDoesNotSpecifyItsSizeInThe, {PH1: resourceName, PH2: imageUrl}));\n    } else {\n      if (isScreenshot && sizes.length > 0 && 'any' in sizes[0]) {\n        imageResourceErrors.push(i18nString(UIStrings.screenshotPixelSize, {url: imageUrl}));\n      }\n      for (const size of sizes) {\n        const {error, hasSquareSize} = this.checkSizeProblem(size, image, resourceName, imageUrl);\n        squareSizedIconAvailable = squareSizedIconAvailable || hasSquareSize;\n        if (error) {\n          imageResourceErrors.push(error);\n        } else if (isScreenshot) {\n          const width = 'any' in size ? image.naturalWidth : size.width;\n          const height = 'any' in size ? image.naturalHeight : size.height;\n          if (width < 320 || height < 320) {\n            imageResourceErrors.push(\n                i18nString(UIStrings.sSSizeShouldBeAtLeast320, {PH1: resourceName, PH2: imageUrl}));\n          } else if (width > 3840 || height > 3840) {\n            imageResourceErrors.push(\n                i18nString(UIStrings.sSSizeShouldBeAtMost3840, {PH1: resourceName, PH2: imageUrl}));\n          } else if (width > (height * 2.3)) {\n            imageResourceErrors.push(\n                i18nString(UIStrings.sSWidthDoesNotComplyWithRatioRequirement, {PH1: resourceName, PH2: imageUrl}));\n          } else if (height > (width * 2.3)) {\n            imageResourceErrors.push(\n                i18nString(UIStrings.sSHeightDoesNotComplyWithRatioRequirement, {PH1: resourceName, PH2: imageUrl}));\n          }\n        }\n      }\n    }\n    image.width = image.naturalWidth;\n\n    const purpose = typeof imageResource['purpose'] === 'string' ? imageResource['purpose'].toLowerCase() : '';\n    if (purpose.includes('any') && purpose.includes('maskable')) {\n      imageResourceErrors.push(i18nString(UIStrings.avoidPurposeAnyAndMaskable));\n    }\n\n    field.appendChild(wrapper);\n    return {imageResourceErrors, squareSizedIconAvailable, naturalWidth, naturalHeight};\n  }\n\n  private async appendWindowControlsToSection(\n      overlayModel: SDK.OverlayModel.OverlayModel, url: Platform.DevToolsPath.UrlString,\n      themeColor: string): Promise<void> {\n    const wcoStyleSheetText = await overlayModel.hasStyleSheetText(url);\n\n    if (!wcoStyleSheetText) {\n      return;\n    }\n\n    await overlayModel.toggleWindowControlsToolbar(false);\n\n    const wcoOsCheckbox =\n        UI.UIUtils.CheckboxLabel.create(i18nString(UIStrings.selectWindowControlsOverlayEmulationOs), false);\n\n    wcoOsCheckbox.addEventListener('click', async () => {\n      await this.overlayModel?.toggleWindowControlsToolbar(wcoOsCheckbox.checked);\n    });\n\n    const osSelectElement = wcoOsCheckbox.createChild('select');\n    osSelectElement.appendChild(UI.UIUtils.createOption('Windows', SDK.OverlayModel.EmulatedOSType.WINDOWS, 'windows'));\n    osSelectElement.appendChild(UI.UIUtils.createOption('macOS', SDK.OverlayModel.EmulatedOSType.MAC, 'macos'));\n    osSelectElement.appendChild(UI.UIUtils.createOption('Linux', SDK.OverlayModel.EmulatedOSType.LINUX, 'linux'));\n    osSelectElement.selectedIndex = 0;\n\n    if (this.overlayModel) {\n      osSelectElement.value = this.overlayModel?.getWindowControlsConfig().selectedPlatform;\n    }\n\n    osSelectElement.addEventListener('change', async () => {\n      const selectedOS =\n          osSelectElement.options[osSelectElement.selectedIndex].value as SDK.OverlayModel.EmulatedOSType;\n      if (this.overlayModel) {\n        this.overlayModel.setWindowControlsPlatform(selectedOS);\n        await this.overlayModel.toggleWindowControlsToolbar(wcoOsCheckbox.checked);\n      }\n    });\n\n    this.windowControlsSection.appendRow().appendChild(wcoOsCheckbox);\n\n    overlayModel.setWindowControlsThemeColor(themeColor);\n  }\n}\n\nexport const enum Events {\n  MANIFEST_DETECTED = 'ManifestDetected',\n  MANIFEST_RENDERED = 'ManifestRendered',\n}\n\nexport interface EventTypes {\n  [Events.MANIFEST_DETECTED]: boolean;\n  [Events.MANIFEST_RENDERED]: void;\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n.report-field-name {\n  flex-basis: 152px;\n}\n\n.manifest-view-header {\n  min-width: 600px;\n  flex-shrink: 0;\n  flex-grow: 0;\n}\n\n.manifest-container {\n  overflow: auto;\n}\n\n.inline-icon {\n  width: 16px;\n  height: 16px;\n  margin-inline: var(--sys-size-3);\n\n  &[name=\"check-circle\"] {\n    color: var(--icon-checkmark-green);\n  }\n}\n\n.multiline-value {\n  padding-top: var(--sys-size-5);\n  white-space: normal;\n}\n\nselect {\n  margin: 4px;\n}\n\n.inline-button {\n  vertical-align: sub;\n}\n\n/*# sourceURL=${import.meta.resolve('./appManifestView.css')} */`;", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport * as ApplicationComponents from './components/components.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  backForwardCache: 'Back/forward cache',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/BackForwardCacheTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class BackForwardCacheTreeElement extends ApplicationPanelTreeElement {\n  private view?: LegacyWrapper.LegacyWrapper\n      .LegacyWrapper<UI.Widget.Widget, ApplicationComponents.BackForwardCacheView.BackForwardCacheView>;\n\n  constructor(resourcesPanel: ResourcesPanel) {\n    super(resourcesPanel, i18nString(UIStrings.backForwardCache), false, 'bfcache');\n    const icon = IconButton.Icon.create('database');\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'bfcache://' as Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = LegacyWrapper.LegacyWrapper.legacyWrapper(\n          UI.Widget.Widget, new ApplicationComponents.BackForwardCacheView.BackForwardCacheView());\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown('back-forward-cache');\n\n    return false;\n  }\n}\n", "// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class BackgroundServiceModel extends SDK.SDKModel.SDKModel<EventTypes> implements\n    ProtocolProxyApi.BackgroundServiceDispatcher {\n  private readonly backgroundServiceAgent: ProtocolProxyApi.BackgroundServiceApi;\n  private readonly events:\n      Map<Protocol.BackgroundService.ServiceName, Protocol.BackgroundService.BackgroundServiceEvent[]>;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n    this.backgroundServiceAgent = target.backgroundServiceAgent();\n    target.registerBackgroundServiceDispatcher(this);\n\n    this.events = new Map();\n  }\n\n  enable(service: Protocol.BackgroundService.ServiceName): void {\n    this.events.set(service, []);\n    void this.backgroundServiceAgent.invoke_startObserving({service});\n  }\n\n  setRecording(shouldRecord: boolean, service: Protocol.BackgroundService.ServiceName): void {\n    void this.backgroundServiceAgent.invoke_setRecording({shouldRecord, service});\n  }\n\n  clearEvents(service: Protocol.BackgroundService.ServiceName): void {\n    this.events.set(service, []);\n    void this.backgroundServiceAgent.invoke_clearEvents({service});\n  }\n\n  getEvents(service: Protocol.BackgroundService.ServiceName): Protocol.BackgroundService.BackgroundServiceEvent[] {\n    return this.events.get(service) || [];\n  }\n\n  recordingStateChanged({isRecording, service}: Protocol.BackgroundService.RecordingStateChangedEvent): void {\n    this.dispatchEventToListeners(Events.RecordingStateChanged, {isRecording, serviceName: service});\n  }\n\n  backgroundServiceEventReceived({backgroundServiceEvent}:\n                                     Protocol.BackgroundService.BackgroundServiceEventReceivedEvent): void {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // @ts-expect-error\n    this.events.get(backgroundServiceEvent.service).push(backgroundServiceEvent);\n    this.dispatchEventToListeners(Events.BackgroundServiceEventReceived, backgroundServiceEvent);\n  }\n}\n\nSDK.SDKModel.SDKModel.register(BackgroundServiceModel, {capabilities: SDK.Target.Capability.BROWSER, autostart: false});\n\nexport enum Events {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  RecordingStateChanged = 'RecordingStateChanged',\n  BackgroundServiceEventReceived = 'BackgroundServiceEventReceived',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport interface EventTypes {\n  [Events.RecordingStateChanged]: {isRecording: boolean, serviceName: Protocol.BackgroundService.ServiceName};\n  [Events.BackgroundServiceEventReceived]: Protocol.BackgroundService.BackgroundServiceEvent;\n}\n", "// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/legacy/legacy.js';\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\n// eslint-disable-next-line rulesdir/es-modules-import\nimport emptyWidgetStyles from '../../ui/legacy/emptyWidget.css.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {type BackgroundServiceModel, Events} from './BackgroundServiceModel.js';\nimport backgroundServiceViewStyles from './backgroundServiceView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Background Service View of the Application panel\n   */\n  backgroundFetch: 'Background fetch',\n  /**\n   * @description Text in Background Service View of the Application panel\n   */\n  backgroundSync: 'Background sync',\n  /**\n   * @description Text in Background Service View of the Application panel\n   */\n  pushMessaging: 'Push messaging',\n  /**\n   * @description Text in Background Service View of the Application panel\n   */\n  notifications: 'Notifications',\n  /**\n   * @description Text in Background Service View of the Application panel\n   */\n  paymentHandler: 'Payment handler',\n  /**\n   * @description Text in the Periodic Background Service View of the Application panel\n   */\n  periodicBackgroundSync: 'Periodic background sync',\n  /**\n   * @description Text to clear content\n   */\n  clear: 'Clear',\n  /**\n   * @description Tooltip text that appears when hovering over the largeicon download button in the Background Service View of the Application panel\n   */\n  saveEvents: 'Save events',\n  /**\n   * @description Text in Background Service View of the Application panel\n   */\n  showEventsFromOtherDomains: 'Show events from other domains',\n  /**\n   * @description Text of a checkbox to show events for other storage keys\n   */\n  showEventsForOtherStorageKeys: 'Show events from other storage partitions',\n  /**\n   * @description Title of an action under the Background Services category that can be invoked through the Command Menu\n   */\n  stopRecordingEvents: 'Stop recording events',\n  /**\n   * @description Title of an action under the Background Services category that can be invoked through the Command Menu\n   */\n  startRecordingEvents: 'Start recording events',\n  /**\n   * @description Text for timestamps of items\n   */\n  timestamp: 'Timestamp',\n  /**\n   * @description Text that refers to some events\n   */\n  event: 'Event',\n  /**\n   * @description Text for the origin of something\n   */\n  origin: 'Origin',\n  /**\n   * @description Text for the storage key of something\n   */\n  storageKey: 'Storage Key',\n  /**\n   * @description Text in Background Service View of the Application panel. The Scope is a URL associated with the Service Worker, which limits which pages/sites the Service Worker operates on.\n   */\n  swScope: 'Service Worker Scope',\n  /**\n   * @description Text in Background Service View of the Application panel\n   */\n  instanceId: 'Instance ID',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  backgroundServices: 'Background services',\n  /**\n   * @description Text in Background Service View of the Application panel.\n   *             An event here refers to a background service event that is an entry in a table.\n   */\n  noEventSelected: 'No event selected',\n  /**\n   * @description Text in Background Service View of the Application panel\n   */\n  selectAnEventToViewMetadata: 'Select an event to view its metadata',\n  /**\n   * @description Text in Background Service View of the Application panel\n   * @example {Background Fetch} PH1\n   */\n  recordingSActivity: 'Recording {PH1} activity…',\n  /**\n   * @description Text in Background Service View of the Application panel\n   */\n  noRecording: 'No recording yet',\n  /**\n   * @description Inform users that DevTools are recording/waiting for events in the Periodic Background Sync tool of the Application panel\n   * @example {Background Fetch} PH1\n   */\n  devtoolsWillRecordAllSActivity: 'DevTools will record all {PH1} activity for up to 3 days, even when closed.',\n  /**\n   * @description Text in Background Service View of the Application panel to instruct the user on how to start a recording for\n   * background services.\n   * @example {Start recording events} PH1\n   * @example {Ctrl + E} PH2\n   */\n  startRecordingToDebug: 'Start to debug background services by using the \"{PH1}\" button or by pressing {PH2}.',\n  /**\n   * @description Text to show an item is empty\n   */\n  empty: 'empty',\n  /**\n   * @description Text in Background Service View of the Application panel\n   */\n  noMetadataForThisEvent: 'No metadata for this event',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/BackgroundServiceView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class BackgroundServiceView extends UI.Widget.VBox {\n  private readonly serviceName: Protocol.BackgroundService.ServiceName;\n  private readonly model: BackgroundServiceModel;\n  private readonly serviceWorkerManager: SDK.ServiceWorkerManager.ServiceWorkerManager|null;\n  private readonly securityOriginManager: SDK.SecurityOriginManager.SecurityOriginManager;\n  private readonly storageKeyManager: SDK.StorageKeyManager.StorageKeyManager;\n  private recordAction: UI.ActionRegistration.Action;\n  private recordButton!: UI.Toolbar.ToolbarToggle;\n  private originCheckbox!: UI.Toolbar.ToolbarCheckbox;\n  private storageKeyCheckbox!: UI.Toolbar.ToolbarCheckbox;\n  private saveButton!: UI.Toolbar.ToolbarButton;\n  private readonly toolbar: UI.Toolbar.Toolbar;\n  private readonly splitWidget: UI.SplitWidget.SplitWidget;\n  private readonly dataGrid: DataGrid.DataGrid.DataGridImpl<EventData>;\n  private readonly previewPanel: UI.Widget.VBox;\n  private selectedEventNode: EventDataNode|null;\n  private preview: UI.Widget.Widget|null;\n\n  static getUIString(serviceName: string): string {\n    switch (serviceName) {\n      case Protocol.BackgroundService.ServiceName.BackgroundFetch:\n        return i18nString(UIStrings.backgroundFetch);\n      case Protocol.BackgroundService.ServiceName.BackgroundSync:\n        return i18nString(UIStrings.backgroundSync);\n      case Protocol.BackgroundService.ServiceName.PushMessaging:\n        return i18nString(UIStrings.pushMessaging);\n      case Protocol.BackgroundService.ServiceName.Notifications:\n        return i18nString(UIStrings.notifications);\n      case Protocol.BackgroundService.ServiceName.PaymentHandler:\n        return i18nString(UIStrings.paymentHandler);\n      case Protocol.BackgroundService.ServiceName.PeriodicBackgroundSync:\n        return i18nString(UIStrings.periodicBackgroundSync);\n      default:\n        return '';\n    }\n  }\n\n  constructor(serviceName: Protocol.BackgroundService.ServiceName, model: BackgroundServiceModel) {\n    super({\n      jslog: `${VisualLogging.pane().context(Platform.StringUtilities.toKebabCase(serviceName))}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(emptyWidgetStyles, backgroundServiceViewStyles);\n\n    this.serviceName = serviceName;\n\n    this.model = model;\n    this.model.addEventListener(Events.RecordingStateChanged, this.onRecordingStateChanged, this);\n    this.model.addEventListener(Events.BackgroundServiceEventReceived, this.onEventReceived, this);\n    this.model.enable(this.serviceName);\n\n    this.serviceWorkerManager = this.model.target().model(SDK.ServiceWorkerManager.ServiceWorkerManager);\n\n    this.securityOriginManager = this.model.target().model(SDK.SecurityOriginManager.SecurityOriginManager) as\n        SDK.SecurityOriginManager.SecurityOriginManager;\n    if (!this.securityOriginManager) {\n      throw new Error('SecurityOriginManager instance is missing');\n    }\n    this.securityOriginManager.addEventListener(\n        SDK.SecurityOriginManager.Events.MainSecurityOriginChanged, () => this.onOriginChanged());\n\n    this.storageKeyManager =\n        this.model.target().model(SDK.StorageKeyManager.StorageKeyManager) as SDK.StorageKeyManager.StorageKeyManager;\n    if (!this.storageKeyManager) {\n      throw new Error('StorageKeyManager instance is missing');\n    }\n    this.storageKeyManager.addEventListener(\n        SDK.StorageKeyManager.Events.MAIN_STORAGE_KEY_CHANGED, () => this.onStorageKeyChanged());\n\n    this.recordAction = UI.ActionRegistry.ActionRegistry.instance().getAction('background-service.toggle-recording');\n\n    this.toolbar = this.contentElement.createChild('devtools-toolbar', 'background-service-toolbar');\n    this.toolbar.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n    void this.setupToolbar();\n\n    /**\n     * This will contain the DataGrid for displaying events, and a panel at the bottom for showing\n     * extra metadata related to the selected event.\n     */\n    this.splitWidget = new UI.SplitWidget.SplitWidget(/* isVertical= */ false, /* secondIsSidebar= */ true);\n    this.splitWidget.show(this.contentElement);\n\n    this.dataGrid = this.createDataGrid();\n\n    this.previewPanel = new UI.Widget.VBox();\n    this.previewPanel.element.setAttribute('jslog', `${VisualLogging.pane('preview').track({resize: true})}`);\n\n    this.selectedEventNode = null;\n\n    this.preview = null;\n\n    this.splitWidget.setMainWidget(this.dataGrid.asWidget());\n    this.splitWidget.setSidebarWidget(this.previewPanel);\n    this.splitWidget.hideMain();\n\n    this.showPreview(null);\n  }\n\n  getDataGrid(): DataGrid.DataGrid.DataGridImpl<EventData> {\n    return this.dataGrid;\n  }\n\n  /**\n   * Creates the toolbar UI element.\n   */\n  private async setupToolbar(): Promise<void> {\n    this.toolbar.wrappable = true;\n    this.recordButton = (UI.Toolbar.Toolbar.createActionButton(this.recordAction) as UI.Toolbar.ToolbarToggle);\n    this.recordButton.toggleOnClick(false);\n    this.toolbar.appendToolbarItem(this.recordButton);\n\n    const clearButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clear), 'clear', undefined, 'background-service.clear');\n    clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => this.clearEvents());\n    this.toolbar.appendToolbarItem(clearButton);\n\n    this.toolbar.appendSeparator();\n\n    this.saveButton = new UI.Toolbar.ToolbarButton(\n        i18nString(UIStrings.saveEvents), 'download', undefined, 'background-service.save-events');\n    this.saveButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, _event => {\n      void this.saveToFile();\n    });\n    this.saveButton.setEnabled(false);\n    this.toolbar.appendToolbarItem(this.saveButton);\n\n    this.toolbar.appendSeparator();\n\n    this.originCheckbox = new UI.Toolbar.ToolbarCheckbox(\n        i18nString(UIStrings.showEventsFromOtherDomains), i18nString(UIStrings.showEventsFromOtherDomains),\n        () => this.refreshView(), 'show-events-from-other-domains');\n    this.toolbar.appendToolbarItem(this.originCheckbox);\n\n    this.storageKeyCheckbox = new UI.Toolbar.ToolbarCheckbox(\n        i18nString(UIStrings.showEventsForOtherStorageKeys), i18nString(UIStrings.showEventsForOtherStorageKeys),\n        () => this.refreshView(), 'show-events-from-other-partitions');\n    this.toolbar.appendToolbarItem(this.storageKeyCheckbox);\n  }\n\n  /**\n   * Displays all available events in the grid.\n   */\n  private refreshView(): void {\n    this.clearView();\n    const events = this.model.getEvents(this.serviceName).filter(event => this.acceptEvent(event));\n    for (const event of events) {\n      this.addEvent(event);\n    }\n  }\n\n  /**\n   * Clears the grid and panel.\n   */\n  private clearView(): void {\n    this.selectedEventNode = null;\n    this.dataGrid.rootNode().removeChildren();\n    this.splitWidget.hideMain();\n    this.saveButton.setEnabled(false);\n    this.showPreview(null);\n  }\n\n  /**\n   * Called when the `Toggle Record` button is clicked.\n   */\n  toggleRecording(): void {\n    this.model.setRecording(!this.recordButton.isToggled(), this.serviceName);\n  }\n\n  /**\n   * Called when the `Clear` button is clicked.\n   */\n  private clearEvents(): void {\n    this.model.clearEvents(this.serviceName);\n    this.clearView();\n  }\n\n  private onRecordingStateChanged({data: state}: Common.EventTarget.EventTargetEvent<RecordingState>): void {\n    if (state.serviceName !== this.serviceName) {\n      return;\n    }\n\n    if (state.isRecording === this.recordButton.isToggled()) {\n      return;\n    }\n\n    this.recordButton.setToggled(state.isRecording);\n    this.updateRecordButtonTooltip();\n    this.showPreview(this.selectedEventNode);\n  }\n\n  private updateRecordButtonTooltip(): void {\n    const buttonTooltip = this.recordButton.isToggled() ? i18nString(UIStrings.stopRecordingEvents) :\n                                                          i18nString(UIStrings.startRecordingEvents);\n    this.recordButton.setTitle(buttonTooltip, 'background-service.toggle-recording');\n  }\n\n  private onEventReceived({\n    data: serviceEvent,\n  }: Common.EventTarget.EventTargetEvent<Protocol.BackgroundService.BackgroundServiceEvent>): void {\n    if (!this.acceptEvent(serviceEvent)) {\n      return;\n    }\n    this.addEvent(serviceEvent);\n  }\n\n  private onOriginChanged(): void {\n    // No need to refresh the view if we are already showing all events.\n    if (this.originCheckbox.checked()) {\n      return;\n    }\n    this.refreshView();\n  }\n\n  private onStorageKeyChanged(): void {\n    if (this.storageKeyCheckbox.checked()) {\n      return;\n    }\n    this.refreshView();\n  }\n\n  private addEvent(serviceEvent: Protocol.BackgroundService.BackgroundServiceEvent): void {\n    const data = this.createEventData(serviceEvent);\n    const dataNode = new EventDataNode(data, serviceEvent.eventMetadata);\n    this.dataGrid.rootNode().appendChild(dataNode);\n\n    if (this.splitWidget.showMode() !== UI.SplitWidget.ShowMode.BOTH) {\n      this.splitWidget.showBoth();\n    }\n\n    if (this.dataGrid.rootNode().children.length === 1) {\n      this.saveButton.setEnabled(true);\n      this.showPreview(this.selectedEventNode);\n    }\n  }\n\n  private createDataGrid(): DataGrid.DataGrid.DataGridImpl<EventData> {\n    const columns = ([\n      {id: 'id', title: '#', weight: 1},\n      {id: 'timestamp', title: i18nString(UIStrings.timestamp), weight: 7},\n      {id: 'event-name', title: i18nString(UIStrings.event), weight: 8},\n      {id: 'origin', title: i18nString(UIStrings.origin), weight: 8},\n      {id: 'storage-key', title: i18nString(UIStrings.storageKey), weight: 8},\n      {id: 'sw-scope', title: i18nString(UIStrings.swScope), weight: 4},\n      {id: 'instance-id', title: i18nString(UIStrings.instanceId), weight: 8},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n    const dataGrid = new DataGrid.DataGrid.DataGridImpl({\n      displayName: i18nString(UIStrings.backgroundServices),\n      columns,\n      refreshCallback: undefined,\n      deleteCallback: undefined,\n    });\n    dataGrid.setStriped(true);\n\n    dataGrid.addEventListener(\n        DataGrid.DataGrid.Events.SELECTED_NODE, event => this.showPreview((event.data as EventDataNode)));\n\n    return dataGrid;\n  }\n\n  /**\n   * Creates the data object to pass to the DataGrid Node.\n   */\n  private createEventData(serviceEvent: Protocol.BackgroundService.BackgroundServiceEvent): EventData {\n    let swScope = '';\n\n    // Try to get the scope of the Service Worker registration to be more user-friendly.\n    const registration = this.serviceWorkerManager ?\n        this.serviceWorkerManager.registrations().get(serviceEvent.serviceWorkerRegistrationId) :\n        undefined;\n    if (registration) {\n      swScope = registration.scopeURL.substr(registration.securityOrigin.length);\n    }\n\n    return {\n      id: this.dataGrid.rootNode().children.length + 1,\n      timestamp: UI.UIUtils.formatTimestamp(serviceEvent.timestamp * 1000, /* full= */ true),\n      origin: serviceEvent.origin,\n      'storage-key': serviceEvent.storageKey,\n      'sw-scope': swScope,\n      'event-name': serviceEvent.eventName,\n      'instance-id': serviceEvent.instanceId,\n    };\n  }\n\n  /**\n   * Filtration function to know whether event should be shown or not.\n   */\n  private acceptEvent(event: Protocol.BackgroundService.BackgroundServiceEvent): boolean {\n    if (event.service !== this.serviceName) {\n      return false;\n    }\n\n    if (this.originCheckbox.checked() || this.storageKeyCheckbox.checked()) {\n      return true;\n    }\n\n    // Trim the trailing '/'.\n    const origin = event.origin.substr(0, event.origin.length - 1);\n    const storageKey = event.storageKey;\n\n    return this.securityOriginManager.securityOrigins().includes(origin) ||\n        this.storageKeyManager.storageKeys().includes(storageKey);\n  }\n\n  private createLearnMoreLink(): Platform.DevToolsPath.UrlString {\n    let url = 'https://developer.chrome.com/docs/devtools/javascript/background-services/';\n\n    switch (this.serviceName) {\n      case Protocol.BackgroundService.ServiceName.BackgroundFetch:\n        url += '#fetch';\n        break;\n      case Protocol.BackgroundService.ServiceName.BackgroundSync:\n        url += '#sync';\n        break;\n      case Protocol.BackgroundService.ServiceName.PushMessaging:\n        url += '#push';\n        break;\n      case Protocol.BackgroundService.ServiceName.Notifications:\n        url += '#notifications';\n        break;\n      default:\n        break;\n    }\n\n    return url as Platform.DevToolsPath.UrlString;\n  }\n\n  private showPreview(dataNode: EventDataNode|null): void {\n    if (this.selectedEventNode && this.selectedEventNode === dataNode) {\n      return;\n    }\n\n    this.selectedEventNode = dataNode;\n\n    if (this.preview) {\n      this.preview.detach();\n    }\n\n    if (this.selectedEventNode) {\n      this.preview = this.selectedEventNode.createPreview();\n      this.preview.show(this.previewPanel.contentElement);\n      return;\n    }\n\n    let emptyWidget: UI.EmptyWidget.EmptyWidget;\n    if (this.dataGrid.rootNode().children.length) {\n      emptyWidget = new UI.EmptyWidget.EmptyWidget(\n          i18nString(UIStrings.noEventSelected), i18nString(UIStrings.selectAnEventToViewMetadata));\n    } else if (this.recordButton.isToggled()) {\n      // Inform users that we are recording/waiting for events.\n      const featureName = BackgroundServiceView.getUIString(this.serviceName).toLowerCase();\n      emptyWidget = new UI.EmptyWidget.EmptyWidget(\n          i18nString(UIStrings.recordingSActivity, {PH1: featureName}),\n          i18nString(UIStrings.devtoolsWillRecordAllSActivity, {PH1: featureName}));\n    } else {\n      const recordShortcuts =\n          UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction('background-service.toggle-recording')[0];\n      emptyWidget = new UI.EmptyWidget.EmptyWidget(\n          i18nString(UIStrings.noRecording), i18nString(UIStrings.startRecordingToDebug, {\n            PH1: i18nString(UIStrings.startRecordingEvents),\n            PH2: recordShortcuts.title(),\n          }));\n      emptyWidget.link = this.createLearnMoreLink();\n\n      const button = UI.UIUtils.createTextButton(\n          i18nString(UIStrings.startRecordingEvents), () => this.toggleRecording(),\n          {jslogContext: 'start-recording', variant: Buttons.Button.Variant.TONAL});\n      emptyWidget.contentElement.appendChild(button);\n    }\n\n    this.preview = emptyWidget;\n    this.preview.show(this.previewPanel.contentElement);\n  }\n\n  /**\n   * Saves all currently displayed events in a file (JSON format).\n   */\n  private async saveToFile(): Promise<void> {\n    const fileName = `${this.serviceName}-${Platform.DateUtilities.toISO8601Compact(new Date())}.json` as\n        Platform.DevToolsPath.RawPathString;\n    const stream = new Bindings.FileUtils.FileOutputStream();\n\n    const accepted = await stream.open(fileName);\n    if (!accepted) {\n      return;\n    }\n\n    const events = this.model.getEvents(this.serviceName).filter(event => this.acceptEvent(event));\n    await stream.write(JSON.stringify(events, undefined, 2));\n    void stream.close();\n  }\n}\n\nexport class EventDataNode extends DataGrid.DataGrid.DataGridNode<EventData> {\n  private readonly eventMetadata: Protocol.BackgroundService.EventMetadata[];\n\n  constructor(data: EventData, eventMetadata: Protocol.BackgroundService.EventMetadata[]) {\n    super(data);\n\n    this.eventMetadata = eventMetadata.sort((m1, m2) => Platform.StringUtilities.compare(m1.key, m2.key));\n  }\n\n  createPreview(): UI.Widget.VBox {\n    const preview = new UI.Widget.VBox();\n    preview.element.classList.add('background-service-metadata');\n    preview.element.setAttribute('jslog', `${VisualLogging.section('metadata')}`);\n\n    for (const entry of this.eventMetadata) {\n      const div = document.createElement('div');\n      div.classList.add('background-service-metadata-entry');\n      div.createChild('div', 'background-service-metadata-name').textContent = entry.key + ': ';\n      if (entry.value) {\n        div.createChild('div', 'background-service-metadata-value source-code').textContent = entry.value;\n      } else {\n        div.createChild('div', 'background-service-metadata-value background-service-empty-value').textContent =\n            i18nString(UIStrings.empty);\n      }\n      preview.element.appendChild(div);\n    }\n\n    if (!preview.element.children.length) {\n      const div = document.createElement('div');\n      div.classList.add('background-service-metadata-entry');\n      div.createChild('div', 'background-service-metadata-name background-service-empty-value').textContent =\n          i18nString(UIStrings.noMetadataForThisEvent);\n      preview.element.appendChild(div);\n    }\n\n    return preview;\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const view = context.flavor(BackgroundServiceView);\n    switch (actionId) {\n      case 'background-service.toggle-recording': {\n        if (!view) {\n          throw new Error('BackgroundServiceView instance is missing');\n        }\n        view.toggleRecording();\n        return true;\n      }\n    }\n    return false;\n  }\n}\nexport interface RecordingState {\n  isRecording: boolean;\n  serviceName: Protocol.BackgroundService.ServiceName;\n}\nexport interface EventData {\n  id: number;\n  timestamp: string;\n  origin: string;\n  'storage-key': string;\n  'sw-scope': string;\n  'event-name': string;\n  'instance-id': string;\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2015 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.empty-view-scroller {\n  overflow: auto;\n}\n\n/*# sourceURL=${import.meta.resolve('./emptyWidget.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.background-service-toolbar {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: var(--sys-size-1) solid var(--sys-color-divider);\n}\n\n.data-grid {\n  flex: auto;\n  border: none;\n}\n\n[slot=\"insertion-point-main\"] {\n  overflow: auto;\n}\n\n.background-service-preview {\n  position: absolute;\n  background-color: var(--sys-color-cdt-base-container);\n  justify-content: center;\n  align-items: center;\n  overflow: auto;\n  font-size: 13px;\n  color: var(--sys-color-on-surface-subtle);\n}\n\n.background-service-preview > div {\n  max-width: 450px;\n  margin: 10px;\n  text-align: center;\n}\n\n.background-service-preview > div > p {\n  flex: none;\n  white-space: pre-line;\n}\n\n.background-service-shortcut {\n  color: var(--sys-color-on-surface-subtle);\n}\n\n.background-service-metadata {\n  padding-left: 5px;\n  padding-top: 10px;\n}\n\n.background-service-metadata-entry {\n  padding-left: 10px;\n  padding-bottom: 5px;\n}\n\n.background-service-metadata-name {\n  color: var(--sys-color-on-surface-subtle);\n  display: inline-block;\n  margin-right: 0.25em;\n  font-weight: bold;\n}\n\n.background-service-metadata-value {\n  display: inline;\n  margin-right: 1em;\n  white-space: pre-wrap;\n  word-break: break-all;\n  user-select: text;\n}\n\n.background-service-empty-value {\n  color: var(--sys-color-state-disabled);\n  font-style: italic;\n}\n\n.background-service-record-inline-button {\n  margin-bottom: 6px;\n}\n\n/*# sourceURL=${import.meta.resolve('./backgroundServiceView.css')} */`;", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport * as ApplicationComponents from './components/components.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\n\nconst UIStrings = {\n  /**\n   * @description Hover text for the Bounce Tracking Mitigations element in the Application Panel sidebar.\n   */\n  bounceTrackingMitigations: 'Bounce tracking mitigations',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/BounceTrackingMitigationsTreeElement.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class BounceTrackingMitigationsTreeElement extends ApplicationPanelTreeElement {\n  private view?: LegacyWrapper.LegacyWrapper.LegacyWrapper<\n      UI.Widget.Widget, ApplicationComponents.BounceTrackingMitigationsView.BounceTrackingMitigationsView>;\n\n  constructor(resourcesPanel: ResourcesPanel) {\n    super(resourcesPanel, i18nString(UIStrings.bounceTrackingMitigations), false, 'bounce-tracking-mitigations');\n    const icon = IconButton.Icon.create('database');\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'bounce-tracking-mitigations://' as Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = LegacyWrapper.LegacyWrapper.legacyWrapper(\n          UI.Widget.Widget, new ApplicationComponents.BounceTrackingMitigationsView.BounceTrackingMitigationsView());\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown('bounce-tracking-mitigations');\n    return false;\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Nokia Inc.  All rights reserved.\n * Copyright (C) 2013 Samsung Electronics. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class DOMStorage extends Common.ObjectWrapper.ObjectWrapper<DOMStorage.EventTypes> {\n  private readonly model: DOMStorageModel;\n  readonly #storageKey: string;\n  readonly #isLocalStorage: boolean;\n\n  constructor(model: DOMStorageModel, storageKey: string, isLocalStorage: boolean) {\n    super();\n    this.model = model;\n    this.#storageKey = storageKey;\n    this.#isLocalStorage = isLocalStorage;\n  }\n\n  static storageId(storageKey: string, isLocalStorage: boolean): Protocol.DOMStorage.StorageId {\n    return {storageKey, isLocalStorage};\n  }\n\n  get id(): Protocol.DOMStorage.StorageId {\n    return DOMStorage.storageId(this.#storageKey, this.#isLocalStorage);\n  }\n\n  get storageKey(): string|null {\n    return this.#storageKey;\n  }\n\n  get isLocalStorage(): boolean {\n    return this.#isLocalStorage;\n  }\n\n  getItems(): Promise<Protocol.DOMStorage.Item[]|null> {\n    return this.model.agent.invoke_getDOMStorageItems({storageId: this.id}).then(({entries}) => entries);\n  }\n\n  setItem(key: string, value: string): void {\n    void this.model.agent.invoke_setDOMStorageItem({storageId: this.id, key, value});\n  }\n\n  removeItem(key: string): void {\n    void this.model.agent.invoke_removeDOMStorageItem({storageId: this.id, key});\n  }\n\n  clear(): void {\n    void this.model.agent.invoke_clear({storageId: this.id});\n  }\n}\n\nexport namespace DOMStorage {\n  export const enum Events {\n    DOM_STORAGE_ITEMS_CLEARED = 'DOMStorageItemsCleared',\n    DOM_STORAGE_ITEM_REMOVED = 'DOMStorageItemRemoved',\n    DOM_STORAGE_ITEM_ADDED = 'DOMStorageItemAdded',\n    DOM_STORAGE_ITEM_UPDATED = 'DOMStorageItemUpdated',\n  }\n\n  export interface DOMStorageItemRemovedEvent {\n    key: string;\n  }\n\n  export interface DOMStorageItemAddedEvent {\n    key: string;\n    value: string;\n  }\n\n  export interface DOMStorageItemUpdatedEvent {\n    key: string;\n    oldValue: string;\n    value: string;\n  }\n\n  export interface EventTypes {\n    [Events.DOM_STORAGE_ITEMS_CLEARED]: void;\n    [Events.DOM_STORAGE_ITEM_REMOVED]: DOMStorageItemRemovedEvent;\n    [Events.DOM_STORAGE_ITEM_ADDED]: DOMStorageItemAddedEvent;\n    [Events.DOM_STORAGE_ITEM_UPDATED]: DOMStorageItemUpdatedEvent;\n  }\n}\n\nexport class DOMStorageModel extends SDK.SDKModel.SDKModel<EventTypes> {\n  readonly #storageKeyManager: SDK.StorageKeyManager.StorageKeyManager|null;\n  #storages: Record<string, DOMStorage>;\n  readonly agent: ProtocolProxyApi.DOMStorageApi;\n  private enabled?: boolean;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n\n    this.#storageKeyManager = target.model(SDK.StorageKeyManager.StorageKeyManager);\n    this.#storages = {};\n    this.agent = target.domstorageAgent();\n  }\n\n  enable(): void {\n    if (this.enabled) {\n      return;\n    }\n\n    this.target().registerDOMStorageDispatcher(new DOMStorageDispatcher(this));\n    if (this.#storageKeyManager) {\n      this.#storageKeyManager.addEventListener(\n          SDK.StorageKeyManager.Events.STORAGE_KEY_ADDED, this.storageKeyAdded, this);\n      this.#storageKeyManager.addEventListener(\n          SDK.StorageKeyManager.Events.STORAGE_KEY_REMOVED, this.storageKeyRemoved, this);\n\n      for (const storageKey of this.#storageKeyManager.storageKeys()) {\n        this.addStorageKey(storageKey);\n      }\n    }\n    void this.agent.invoke_enable();\n\n    this.enabled = true;\n  }\n\n  clearForStorageKey(storageKey: string): void {\n    if (!this.enabled) {\n      return;\n    }\n    for (const isLocal of [true, false]) {\n      const key = this.storageKey(storageKey, isLocal);\n      const storage = this.#storages[key];\n      if (!storage) {\n        return;\n      }\n      storage.clear();\n    }\n    this.removeStorageKey(storageKey);\n    this.addStorageKey(storageKey);\n  }\n\n  private storageKeyAdded(event: Common.EventTarget.EventTargetEvent<string>): void {\n    this.addStorageKey(event.data);\n  }\n\n  private addStorageKey(storageKey: string): void {\n    for (const isLocal of [true, false]) {\n      const key = this.storageKey(storageKey, isLocal);\n      console.assert(!this.#storages[key]);\n      const storage = new DOMStorage(this, storageKey, isLocal);\n      this.#storages[key] = storage;\n      this.dispatchEventToListeners(Events.DOM_STORAGE_ADDED, storage);\n    }\n  }\n\n  private storageKeyRemoved(event: Common.EventTarget.EventTargetEvent<string>): void {\n    this.removeStorageKey(event.data);\n  }\n\n  private removeStorageKey(storageKey: string): void {\n    for (const isLocal of [true, false]) {\n      const key = this.storageKey(storageKey, isLocal);\n      const storage = this.#storages[key];\n      if (!storage) {\n        continue;\n      }\n      delete this.#storages[key];\n      this.dispatchEventToListeners(Events.DOM_STORAGE_REMOVED, storage);\n    }\n  }\n\n  private storageKey(storageKey: string, isLocalStorage: boolean): string {\n    return JSON.stringify(DOMStorage.storageId(storageKey, isLocalStorage));\n  }\n\n  domStorageItemsCleared(storageId: Protocol.DOMStorage.StorageId): void {\n    const domStorage = this.storageForId(storageId);\n    if (!domStorage) {\n      return;\n    }\n\n    domStorage.dispatchEventToListeners(DOMStorage.Events.DOM_STORAGE_ITEMS_CLEARED);\n  }\n\n  domStorageItemRemoved(storageId: Protocol.DOMStorage.StorageId, key: string): void {\n    const domStorage = this.storageForId(storageId);\n    if (!domStorage) {\n      return;\n    }\n\n    const eventData = {key};\n    domStorage.dispatchEventToListeners(DOMStorage.Events.DOM_STORAGE_ITEM_REMOVED, eventData);\n  }\n\n  domStorageItemAdded(storageId: Protocol.DOMStorage.StorageId, key: string, value: string): void {\n    const domStorage = this.storageForId(storageId);\n    if (!domStorage) {\n      return;\n    }\n\n    const eventData = {key, value};\n    domStorage.dispatchEventToListeners(DOMStorage.Events.DOM_STORAGE_ITEM_ADDED, eventData);\n  }\n\n  domStorageItemUpdated(storageId: Protocol.DOMStorage.StorageId, key: string, oldValue: string, value: string): void {\n    const domStorage = this.storageForId(storageId);\n    if (!domStorage) {\n      return;\n    }\n\n    const eventData = {key, oldValue, value};\n    domStorage.dispatchEventToListeners(DOMStorage.Events.DOM_STORAGE_ITEM_UPDATED, eventData);\n  }\n\n  storageForId(storageId: Protocol.DOMStorage.StorageId): DOMStorage {\n    console.assert(Boolean(storageId.storageKey));\n    return this.#storages[this.storageKey(storageId.storageKey || '', storageId.isLocalStorage)];\n  }\n\n  storages(): DOMStorage[] {\n    const result = [];\n    for (const id in this.#storages) {\n      result.push(this.#storages[id]);\n    }\n    return result;\n  }\n}\n\nSDK.SDKModel.SDKModel.register(DOMStorageModel, {capabilities: SDK.Target.Capability.DOM, autostart: false});\n\nexport const enum Events {\n  DOM_STORAGE_ADDED = 'DOMStorageAdded',\n  DOM_STORAGE_REMOVED = 'DOMStorageRemoved',\n}\n\nexport interface EventTypes {\n  [Events.DOM_STORAGE_ADDED]: DOMStorage;\n  [Events.DOM_STORAGE_REMOVED]: DOMStorage;\n}\n\nexport class DOMStorageDispatcher implements ProtocolProxyApi.DOMStorageDispatcher {\n  private readonly model: DOMStorageModel;\n  constructor(model: DOMStorageModel) {\n    this.model = model;\n  }\n\n  domStorageItemsCleared({storageId}: Protocol.DOMStorage.DomStorageItemsClearedEvent): void {\n    this.model.domStorageItemsCleared(storageId);\n  }\n\n  domStorageItemRemoved({storageId, key}: Protocol.DOMStorage.DomStorageItemRemovedEvent): void {\n    this.model.domStorageItemRemoved(storageId, key);\n  }\n\n  domStorageItemAdded({storageId, key, newValue}: Protocol.DOMStorage.DomStorageItemAddedEvent): void {\n    this.model.domStorageItemAdded(storageId, key, newValue);\n  }\n\n  domStorageItemUpdated({storageId, key, oldValue, newValue}: Protocol.DOMStorage.DomStorageItemUpdatedEvent): void {\n    this.model.domStorageItemUpdated(storageId, key, oldValue, newValue);\n  }\n}\n", "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nexport class ExtensionStorage extends Common.ObjectWrapper.ObjectWrapper<Record<string, never>> {\n  readonly #model: ExtensionStorageModel;\n  readonly #extensionId: string;\n  readonly #name: string;\n  readonly #storageArea: Protocol.Extensions.StorageArea;\n\n  constructor(\n      model: ExtensionStorageModel, extensionId: string, name: string, storageArea: Protocol.Extensions.StorageArea) {\n    super();\n    this.#model = model;\n    this.#extensionId = extensionId;\n    this.#name = name;\n    this.#storageArea = storageArea;\n  }\n\n  get model(): ExtensionStorageModel {\n    return this.#model;\n  }\n\n  get extensionId(): string {\n    return this.#extensionId;\n  }\n\n  get name(): string {\n    return this.#name;\n  }\n\n  // Returns a key that uniquely identifies this extension ID and storage area,\n  // but which is not unique across targets, so we can identify two identical\n  // storage areas across frames.\n  get key(): string {\n    return `${this.extensionId}-${this.storageArea}`;\n  }\n\n  get storageArea(): Protocol.Extensions.StorageArea {\n    return this.#storageArea;\n  }\n\n  async getItems(keys?: string[]): Promise<Record<string, unknown>> {\n    const params: Protocol.Extensions.GetStorageItemsRequest = {\n      id: this.#extensionId,\n      storageArea: this.#storageArea,\n    };\n    if (keys) {\n      params.keys = keys;\n    }\n    const response = await this.#model.agent.invoke_getStorageItems(params);\n    if (response.getError()) {\n      throw new Error(response.getError());\n    }\n    return response.data;\n  }\n\n  async setItem(key: string, value: unknown): Promise<void> {\n    const response = await this.#model.agent.invoke_setStorageItems(\n        {id: this.#extensionId, storageArea: this.#storageArea, values: {[key]: value}});\n    if (response.getError()) {\n      throw new Error(response.getError());\n    }\n  }\n\n  async removeItem(key: string): Promise<void> {\n    const response = await this.#model.agent.invoke_removeStorageItems(\n        {id: this.#extensionId, storageArea: this.#storageArea, keys: [key]});\n    if (response.getError()) {\n      throw new Error(response.getError());\n    }\n  }\n\n  async clear(): Promise<void> {\n    const response =\n        await this.#model.agent.invoke_clearStorageItems({id: this.#extensionId, storageArea: this.#storageArea});\n    if (response.getError()) {\n      throw new Error(response.getError());\n    }\n  }\n\n  matchesTarget(target: SDK.Target.Target|undefined): boolean {\n    if (!target) {\n      return false;\n    }\n    const targetURL = target.targetInfo()?.url;\n    const parsedURL = targetURL ? Common.ParsedURL.ParsedURL.fromString(targetURL) : null;\n    return parsedURL?.scheme === 'chrome-extension' && parsedURL?.host === this.extensionId;\n  }\n}\n\nexport class ExtensionStorageModel extends SDK.SDKModel.SDKModel<EventTypes> {\n  readonly #runtimeModel: SDK.RuntimeModel.RuntimeModel|null;\n  #storages: Map<string, Map<Protocol.Extensions.StorageArea, ExtensionStorage>>;\n  readonly agent: ProtocolProxyApi.ExtensionsApi;\n  #enabled?: boolean;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n\n    this.#runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n    this.#storages = new Map();\n    this.agent = target.extensionsAgent();\n  }\n\n  enable(): void {\n    if (this.#enabled) {\n      return;\n    }\n\n    if (this.#runtimeModel) {\n      this.#runtimeModel.addEventListener(\n          SDK.RuntimeModel.Events.ExecutionContextCreated, this.#onExecutionContextCreated, this);\n      this.#runtimeModel.addEventListener(\n          SDK.RuntimeModel.Events.ExecutionContextDestroyed, this.#onExecutionContextDestroyed, this);\n      this.#runtimeModel.executionContexts().forEach(this.#executionContextCreated, this);\n    }\n\n    this.#enabled = true;\n  }\n\n  #getStoragesForExtension(id: string): Map<Protocol.Extensions.StorageArea, ExtensionStorage> {\n    const existingStorages = this.#storages.get(id);\n\n    if (existingStorages) {\n      return existingStorages;\n    }\n\n    const newStorages = new Map();\n    this.#storages.set(id, newStorages);\n    return newStorages;\n  }\n\n  #addExtension(id: string, name: string): void {\n    for (const storageArea\n             of [Protocol.Extensions.StorageArea.Session, Protocol.Extensions.StorageArea.Local,\n                 Protocol.Extensions.StorageArea.Sync, Protocol.Extensions.StorageArea.Managed]) {\n      const storages = this.#getStoragesForExtension(id);\n      const storage = new ExtensionStorage(this, id, name, storageArea);\n\n      console.assert(!storages.get(storageArea));\n\n      storage.getItems([])\n          .then(() => {\n            // The extension may have been removed in the meantime.\n            if (this.#storages.get(id) !== storages) {\n              return;\n            }\n            // The storage area may have been added in the meantime.\n            if (storages.get(storageArea)) {\n              return;\n            }\n            storages.set(storageArea, storage);\n            this.dispatchEventToListeners(Events.EXTENSION_STORAGE_ADDED, storage);\n          })\n          .catch(\n              () => {\n                  // Storage area is inaccessible (extension may have restricted access\n                  // or not enabled the API).\n              });\n    }\n  }\n\n  #removeExtension(id: string): void {\n    const storages = this.#storages.get(id);\n\n    if (!storages) {\n      return;\n    }\n\n    for (const [key, storage] of storages) {\n      // Delete this before firing the event, since this matches the behavior\n      // of other models and meets expectations for a removed event.\n      storages.delete(key);\n      this.dispatchEventToListeners(Events.EXTENSION_STORAGE_REMOVED, storage);\n    }\n\n    this.#storages.delete(id);\n  }\n\n  #executionContextCreated(context: SDK.RuntimeModel.ExecutionContext): void {\n    const extensionId = this.#extensionIdForContext(context);\n    if (extensionId) {\n      this.#addExtension(extensionId, context.name);\n    }\n  }\n\n  #onExecutionContextCreated(event: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext>): void {\n    this.#executionContextCreated(event.data);\n  }\n\n  #extensionIdForContext(context: SDK.RuntimeModel.ExecutionContext): string|undefined {\n    const url = Common.ParsedURL.ParsedURL.fromString(context.origin);\n    return url && url.scheme === 'chrome-extension' ? url.host : undefined;\n  }\n\n  #executionContextDestroyed(context: SDK.RuntimeModel.ExecutionContext): void {\n    const extensionId = this.#extensionIdForContext(context);\n    if (extensionId) {\n      // Ignore event if there is still another context for this extension.\n      if (this.#runtimeModel?.executionContexts().some(c => this.#extensionIdForContext(c) === extensionId)) {\n        return;\n      }\n\n      this.#removeExtension(extensionId);\n    }\n  }\n\n  #onExecutionContextDestroyed(event: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext>): void {\n    this.#executionContextDestroyed(event.data);\n  }\n\n  storageForIdAndArea(id: string, storageArea: Protocol.Extensions.StorageArea): ExtensionStorage|undefined {\n    return this.#storages.get(id)?.get(storageArea);\n  }\n\n  storages(): ExtensionStorage[] {\n    const result = [];\n    for (const storages of this.#storages.values()) {\n      result.push(...storages.values());\n    }\n    return result;\n  }\n}\n\nSDK.SDKModel.SDKModel.register(ExtensionStorageModel, {capabilities: SDK.Target.Capability.JS, autostart: false});\n\nexport const enum Events {\n  EXTENSION_STORAGE_ADDED = 'ExtensionStorageAdded',\n  EXTENSION_STORAGE_REMOVED = 'ExtensionStorageRemoved',\n}\n\nexport interface EventTypes {\n  [Events.EXTENSION_STORAGE_ADDED]: ExtensionStorage;\n  [Events.EXTENSION_STORAGE_REMOVED]: ExtensionStorage;\n}\n", "// Copyright 2012 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nconst DEFAULT_BUCKET = '';  // Empty string is not a valid bucket name\n\nexport class IndexedDBModel extends SDK.SDKModel.SDKModel<EventTypes> implements ProtocolProxyApi.StorageDispatcher {\n  private readonly storageBucketModel: SDK.StorageBucketsModel.StorageBucketsModel|null;\n  private readonly indexedDBAgent: ProtocolProxyApi.IndexedDBApi;\n  private readonly storageAgent: ProtocolProxyApi.StorageApi;\n  // Used in web tests\n  private readonly databasesInternal: Map<DatabaseId, Database>;\n  private databaseNamesByStorageKeyAndBucket: Map<string, Map<string, Set<DatabaseId>>>;\n  private readonly updatedStorageBuckets: Set<Protocol.Storage.StorageBucket>;\n  private readonly throttler: Common.Throttler.Throttler;\n  private enabled?: boolean;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n    target.registerStorageDispatcher(this);\n    this.storageBucketModel = target.model(SDK.StorageBucketsModel.StorageBucketsModel);\n    this.indexedDBAgent = target.indexedDBAgent();\n    this.storageAgent = target.storageAgent();\n\n    this.databasesInternal = new Map();\n    this.databaseNamesByStorageKeyAndBucket = new Map();\n\n    this.updatedStorageBuckets = new Set();\n    this.throttler = new Common.Throttler.Throttler(1000);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static keyFromIDBKey(idbKey: any): Protocol.IndexedDB.Key|undefined {\n    if (typeof (idbKey) === 'undefined' || idbKey === null) {\n      return undefined;\n    }\n\n    let key: Protocol.IndexedDB.Key;\n    switch (typeof (idbKey)) {\n      case 'number':\n        key = {\n          type: Protocol.IndexedDB.KeyType.Number,\n          number: idbKey,\n        };\n        break;\n      case 'string':\n        key = {\n          type: Protocol.IndexedDB.KeyType.String,\n          string: idbKey,\n        };\n        break;\n      case 'object':\n        if (idbKey instanceof Date) {\n          key = {\n            type: Protocol.IndexedDB.KeyType.Date,\n            date: idbKey.getTime(),\n          };\n        } else if (Array.isArray(idbKey)) {\n          const array = [];\n          for (let i = 0; i < idbKey.length; ++i) {\n            const nestedKey = IndexedDBModel.keyFromIDBKey(idbKey[i]);\n            if (nestedKey) {\n              array.push(nestedKey);\n            }\n          }\n          key = {\n            type: Protocol.IndexedDB.KeyType.Array,\n            array,\n          };\n        } else {\n          return undefined;\n        }\n        break;\n      default:\n        return undefined;\n    }\n    return key;\n  }\n\n  private static keyRangeFromIDBKeyRange(idbKeyRange: IDBKeyRange): Protocol.IndexedDB.KeyRange {\n    return {\n      lower: IndexedDBModel.keyFromIDBKey(idbKeyRange.lower),\n      upper: IndexedDBModel.keyFromIDBKey(idbKeyRange.upper),\n      lowerOpen: Boolean(idbKeyRange.lowerOpen),\n      upperOpen: Boolean(idbKeyRange.upperOpen),\n    };\n  }\n\n  static idbKeyPathFromKeyPath(keyPath: Protocol.IndexedDB.KeyPath): string|string[]|null|undefined {\n    let idbKeyPath;\n    switch (keyPath.type) {\n      case Protocol.IndexedDB.KeyPathType.Null:\n        idbKeyPath = null;\n        break;\n      case Protocol.IndexedDB.KeyPathType.String:\n        idbKeyPath = keyPath.string;\n        break;\n      case Protocol.IndexedDB.KeyPathType.Array:\n        idbKeyPath = keyPath.array;\n        break;\n    }\n    return idbKeyPath;\n  }\n\n  static keyPathStringFromIDBKeyPath(idbKeyPath: string|string[]|null|undefined): string|null {\n    if (typeof idbKeyPath === 'string') {\n      return '\"' + idbKeyPath + '\"';\n    }\n    if (idbKeyPath instanceof Array) {\n      return '[\"' + idbKeyPath.join('\", \"') + '\"]';\n    }\n    return null;\n  }\n\n  enable(): void {\n    if (this.enabled) {\n      return;\n    }\n\n    void this.indexedDBAgent.invoke_enable();\n    if (this.storageBucketModel) {\n      this.storageBucketModel.addEventListener(\n          SDK.StorageBucketsModel.Events.BUCKET_ADDED, this.storageBucketAdded, this);\n      this.storageBucketModel.addEventListener(\n          SDK.StorageBucketsModel.Events.BUCKET_REMOVED, this.storageBucketRemoved, this);\n      for (const {bucket} of this.storageBucketModel.getBuckets()) {\n        this.addStorageBucket(bucket);\n      }\n    }\n\n    this.enabled = true;\n  }\n\n  clearForStorageKey(storageKey: string): void {\n    if (!this.enabled || !this.databaseNamesByStorageKeyAndBucket.has(storageKey)) {\n      return;\n    }\n\n    for (const [storageBucketName] of this.databaseNamesByStorageKeyAndBucket.get(storageKey) || []) {\n      const storageBucket =\n          this.storageBucketModel?.getBucketByName(storageKey, storageBucketName ?? undefined)?.bucket;\n      if (storageBucket) {\n        this.removeStorageBucket(storageBucket);\n      }\n    }\n    this.databaseNamesByStorageKeyAndBucket.delete(storageKey);\n    const bucketInfos = this.storageBucketModel?.getBucketsForStorageKey(storageKey) || [];\n    for (const {bucket} of bucketInfos) {\n      this.addStorageBucket(bucket);\n    }\n  }\n\n  async deleteDatabase(databaseId: DatabaseId): Promise<void> {\n    if (!this.enabled) {\n      return;\n    }\n    await this.indexedDBAgent.invoke_deleteDatabase(\n        {storageBucket: databaseId.storageBucket, databaseName: databaseId.name});\n    void this.loadDatabaseNamesByStorageBucket(databaseId.storageBucket);\n  }\n\n  async refreshDatabaseNames(): Promise<void> {\n    for (const [storageKey] of this.databaseNamesByStorageKeyAndBucket) {\n      const storageBucketNames = this.databaseNamesByStorageKeyAndBucket.get(storageKey)?.keys() || [];\n      for (const storageBucketName of storageBucketNames) {\n        const storageBucket =\n            this.storageBucketModel?.getBucketByName(storageKey, storageBucketName ?? undefined)?.bucket;\n        if (storageBucket) {\n          await this.loadDatabaseNamesByStorageBucket(storageBucket);\n        }\n      }\n    }\n    this.dispatchEventToListeners(Events.DatabaseNamesRefreshed);\n  }\n\n  refreshDatabase(databaseId: DatabaseId): void {\n    void this.loadDatabase(databaseId, true);\n  }\n\n  async clearObjectStore(databaseId: DatabaseId, objectStoreName: string): Promise<void> {\n    await this.indexedDBAgent.invoke_clearObjectStore(\n        {storageBucket: databaseId.storageBucket, databaseName: databaseId.name, objectStoreName});\n  }\n\n  async deleteEntries(databaseId: DatabaseId, objectStoreName: string, idbKeyRange: IDBKeyRange): Promise<void> {\n    const keyRange = IndexedDBModel.keyRangeFromIDBKeyRange(idbKeyRange);\n    await this.indexedDBAgent.invoke_deleteObjectStoreEntries(\n        {storageBucket: databaseId.storageBucket, databaseName: databaseId.name, objectStoreName, keyRange});\n  }\n\n  private storageBucketAdded({data: {bucketInfo: {bucket}}}:\n                                 Common.EventTarget.EventTargetEvent<SDK.StorageBucketsModel.BucketEvent>): void {\n    this.addStorageBucket(bucket);\n  }\n\n  private storageBucketRemoved({data: {bucketInfo: {bucket}}}:\n                                   Common.EventTarget.EventTargetEvent<SDK.StorageBucketsModel.BucketEvent>): void {\n    this.removeStorageBucket(bucket);\n  }\n\n  private addStorageBucket(storageBucket: Protocol.Storage.StorageBucket): void {\n    const {storageKey} = storageBucket;\n    if (!this.databaseNamesByStorageKeyAndBucket.has(storageKey)) {\n      this.databaseNamesByStorageKeyAndBucket.set(storageKey, new Map());\n      void this.storageAgent.invoke_trackIndexedDBForStorageKey({storageKey});\n    }\n    const storageKeyBuckets = this.databaseNamesByStorageKeyAndBucket.get(storageKey) || new Map();\n    console.assert(!storageKeyBuckets.has(storageBucket.name ?? DEFAULT_BUCKET));\n    storageKeyBuckets.set(storageBucket.name ?? DEFAULT_BUCKET, new Set());\n    void this.loadDatabaseNamesByStorageBucket(storageBucket);\n  }\n\n  private removeStorageBucket(storageBucket: Protocol.Storage.StorageBucket): void {\n    const {storageKey} = storageBucket;\n    console.assert(this.databaseNamesByStorageKeyAndBucket.has(storageKey));\n    const storageKeyBuckets = this.databaseNamesByStorageKeyAndBucket.get(storageKey) || new Map();\n    console.assert(storageKeyBuckets.has(storageBucket.name ?? DEFAULT_BUCKET));\n    const databaseIds = storageKeyBuckets.get(storageBucket.name ?? DEFAULT_BUCKET) || new Map();\n    for (const databaseId of databaseIds) {\n      this.databaseRemovedForStorageBucket(databaseId);\n    }\n    storageKeyBuckets.delete(storageBucket.name ?? DEFAULT_BUCKET);\n    if (storageKeyBuckets.size === 0) {\n      this.databaseNamesByStorageKeyAndBucket.delete(storageKey);\n      void this.storageAgent.invoke_untrackIndexedDBForStorageKey({storageKey});\n    }\n  }\n\n  private updateStorageKeyDatabaseNames(storageBucket: Protocol.Storage.StorageBucket, databaseNames: string[]): void {\n    const storageKeyBuckets = this.databaseNamesByStorageKeyAndBucket.get(storageBucket.storageKey);\n    if (storageKeyBuckets === undefined) {\n      return;\n    }\n\n    const newDatabases = new Set(databaseNames.map(databaseName => new DatabaseId(storageBucket, databaseName)));\n    const oldDatabases = new Set(storageKeyBuckets.get(storageBucket.name ?? DEFAULT_BUCKET));\n\n    storageKeyBuckets.set(storageBucket.name ?? DEFAULT_BUCKET, newDatabases);\n\n    for (const database of oldDatabases) {\n      if (!database.inSet(newDatabases)) {\n        this.databaseRemovedForStorageBucket(database);\n      }\n    }\n    for (const database of newDatabases) {\n      if (!database.inSet(oldDatabases)) {\n        this.databaseAddedForStorageBucket(database);\n      }\n    }\n  }\n\n  databases(): DatabaseId[] {\n    const result = [];\n    for (const [, buckets] of this.databaseNamesByStorageKeyAndBucket) {\n      for (const [, databases] of buckets) {\n        for (const database of databases) {\n          result.push(database);\n        }\n      }\n    }\n    return result;\n  }\n\n  private databaseAddedForStorageBucket(databaseId: DatabaseId): void {\n    this.dispatchEventToListeners(Events.DatabaseAdded, {model: this, databaseId});\n  }\n\n  private databaseRemovedForStorageBucket(databaseId: DatabaseId): void {\n    this.dispatchEventToListeners(Events.DatabaseRemoved, {model: this, databaseId});\n  }\n\n  private async loadDatabaseNamesByStorageBucket(storageBucket: Protocol.Storage.StorageBucket): Promise<string[]> {\n    const {storageKey} = storageBucket;\n    const {databaseNames} = await this.indexedDBAgent.invoke_requestDatabaseNames({storageBucket});\n    if (!databaseNames) {\n      return [];\n    }\n    if (!this.databaseNamesByStorageKeyAndBucket.has(storageKey)) {\n      return [];\n    }\n    const storageKeyBuckets = this.databaseNamesByStorageKeyAndBucket.get(storageKey) || new Map();\n    if (!storageKeyBuckets.has(storageBucket.name ?? DEFAULT_BUCKET)) {\n      return [];\n    }\n    this.updateStorageKeyDatabaseNames(storageBucket, databaseNames);\n    return databaseNames;\n  }\n\n  private async loadDatabase(databaseId: DatabaseId, entriesUpdated: boolean): Promise<void> {\n    const databaseWithObjectStores = (await this.indexedDBAgent.invoke_requestDatabase({\n                                       storageBucket: databaseId.storageBucket,\n                                       databaseName: databaseId.name,\n                                     })).databaseWithObjectStores;\n    if (!this.databaseNamesByStorageKeyAndBucket.get(databaseId.storageBucket.storageKey)\n             ?.has(databaseId.storageBucket.name ?? DEFAULT_BUCKET)) {\n      return;\n    }\n    if (!databaseWithObjectStores) {\n      return;\n    }\n\n    const databaseModel = new Database(databaseId, databaseWithObjectStores.version);\n    this.databasesInternal.set(databaseId, databaseModel);\n    for (const objectStore of databaseWithObjectStores.objectStores) {\n      const objectStoreIDBKeyPath = IndexedDBModel.idbKeyPathFromKeyPath(objectStore.keyPath);\n      const objectStoreModel = new ObjectStore(objectStore.name, objectStoreIDBKeyPath, objectStore.autoIncrement);\n      for (let j = 0; j < objectStore.indexes.length; ++j) {\n        const index = objectStore.indexes[j];\n        const indexIDBKeyPath = IndexedDBModel.idbKeyPathFromKeyPath(index.keyPath);\n        const indexModel = new Index(index.name, indexIDBKeyPath, index.unique, index.multiEntry);\n        objectStoreModel.indexes.set(indexModel.name, indexModel);\n      }\n      databaseModel.objectStores.set(objectStoreModel.name, objectStoreModel);\n    }\n\n    this.dispatchEventToListeners(Events.DatabaseLoaded, {model: this, database: databaseModel, entriesUpdated});\n  }\n\n  loadObjectStoreData(\n      databaseId: DatabaseId, objectStoreName: string, idbKeyRange: IDBKeyRange|null, skipCount: number,\n      pageSize: number, callback: (arg0: Entry[], arg1: boolean) => void): void {\n    void this.requestData(\n        databaseId, databaseId.name, objectStoreName, /* indexName=*/ undefined, idbKeyRange, skipCount, pageSize,\n        callback);\n  }\n\n  loadIndexData(\n      databaseId: DatabaseId, objectStoreName: string, indexName: string, idbKeyRange: IDBKeyRange|null,\n      skipCount: number, pageSize: number, callback: (arg0: Entry[], arg1: boolean) => void): void {\n    void this.requestData(\n        databaseId, databaseId.name, objectStoreName, indexName, idbKeyRange, skipCount, pageSize, callback);\n  }\n\n  private async requestData(\n      databaseId: DatabaseId, databaseName: string, objectStoreName: string, indexName: string|undefined,\n      idbKeyRange: IDBKeyRange|null, skipCount: number, pageSize: number,\n      callback: (arg0: Entry[], arg1: boolean) => void): Promise<void> {\n    const keyRange = idbKeyRange ? IndexedDBModel.keyRangeFromIDBKeyRange(idbKeyRange) : undefined;\n    const runtimeModel = this.target().model(SDK.RuntimeModel.RuntimeModel);\n    const response = await this.indexedDBAgent.invoke_requestData({\n      storageBucket: databaseId.storageBucket,\n      databaseName,\n      objectStoreName,\n      indexName,\n      skipCount,\n      pageSize,\n      keyRange,\n    });\n    if (!runtimeModel ||\n        !this.databaseNamesByStorageKeyAndBucket.get(databaseId.storageBucket.storageKey)\n             ?.has(databaseId.storageBucket.name ?? DEFAULT_BUCKET)) {\n      return;\n    }\n    if (response.getError()) {\n      console.error('IndexedDBAgent error: ' + response.getError());\n      return;\n    }\n\n    const dataEntries = response.objectStoreDataEntries;\n    const entries = [];\n    for (const dataEntry of dataEntries) {\n      const key = runtimeModel?.createRemoteObject(dataEntry.key);\n      const primaryKey = runtimeModel?.createRemoteObject(dataEntry.primaryKey);\n      const value = runtimeModel?.createRemoteObject(dataEntry.value);\n      if (!key || !primaryKey || !value) {\n        return;\n      }\n      entries.push(new Entry(key, primaryKey, value));\n    }\n    callback(entries, response.hasMore);\n  }\n\n  async getMetadata(databaseId: DatabaseId, objectStore: ObjectStore): Promise<ObjectStoreMetadata|null> {\n    const databaseName = databaseId.name;\n    const objectStoreName = objectStore.name;\n    const response = await this.indexedDBAgent.invoke_getMetadata(\n        {storageBucket: databaseId.storageBucket, databaseName, objectStoreName});\n\n    if (response.getError()) {\n      console.error('IndexedDBAgent error: ' + response.getError());\n      return null;\n    }\n    return {entriesCount: response.entriesCount, keyGeneratorValue: response.keyGeneratorValue};\n  }\n\n  private async refreshDatabaseListForStorageBucket(storageBucket: Protocol.Storage.StorageBucket): Promise<void> {\n    const databaseNames = await this.loadDatabaseNamesByStorageBucket(storageBucket);\n    for (const databaseName of databaseNames) {\n      void this.loadDatabase(new DatabaseId(storageBucket, databaseName), false);\n    }\n  }\n\n  indexedDBListUpdated({storageKey, bucketId}: Protocol.Storage.IndexedDBListUpdatedEvent): void {\n    const storageBucket = this.storageBucketModel?.getBucketById(bucketId)?.bucket;\n    if (storageKey && storageBucket) {\n      this.updatedStorageBuckets.add(storageBucket);\n      void this.throttler.schedule(() => {\n        const promises = Array.from(this.updatedStorageBuckets, storageBucket => {\n          void this.refreshDatabaseListForStorageBucket(storageBucket);\n        });\n        this.updatedStorageBuckets.clear();\n        return Promise.all(promises);\n      });\n    }\n  }\n\n  indexedDBContentUpdated({bucketId, databaseName, objectStoreName}: Protocol.Storage.IndexedDBContentUpdatedEvent):\n      void {\n    const storageBucket = this.storageBucketModel?.getBucketById(bucketId)?.bucket;\n    if (storageBucket) {\n      const databaseId = new DatabaseId(storageBucket, databaseName);\n      this.dispatchEventToListeners(Events.IndexedDBContentUpdated, {databaseId, objectStoreName, model: this});\n    }\n  }\n  attributionReportingTriggerRegistered(_event: Protocol.Storage.AttributionReportingTriggerRegisteredEvent): void {\n  }\n\n  cacheStorageListUpdated(_event: Protocol.Storage.CacheStorageListUpdatedEvent): void {\n  }\n\n  cacheStorageContentUpdated(_event: Protocol.Storage.CacheStorageContentUpdatedEvent): void {\n  }\n\n  interestGroupAccessed(_event: Protocol.Storage.InterestGroupAccessedEvent): void {\n  }\n\n  interestGroupAuctionEventOccurred(_event: Protocol.Storage.InterestGroupAuctionEventOccurredEvent): void {\n  }\n\n  interestGroupAuctionNetworkRequestCreated(_event: Protocol.Storage.InterestGroupAuctionNetworkRequestCreatedEvent):\n      void {\n  }\n\n  sharedStorageAccessed(_event: Protocol.Storage.SharedStorageAccessedEvent): void {\n  }\n\n  sharedStorageWorkletOperationExecutionFinished(\n      _event: Protocol.Storage.SharedStorageWorkletOperationExecutionFinishedEvent): void {\n  }\n\n  storageBucketCreatedOrUpdated(_event: Protocol.Storage.StorageBucketCreatedOrUpdatedEvent): void {\n  }\n\n  storageBucketDeleted(_event: Protocol.Storage.StorageBucketDeletedEvent): void {\n  }\n\n  attributionReportingSourceRegistered(_event: Protocol.Storage.AttributionReportingSourceRegisteredEvent): void {\n  }\n  attributionReportingReportSent(_event: Protocol.Storage.AttributionReportingReportSentEvent): void {\n  }\n  attributionReportingVerboseDebugReportSent(_event: Protocol.Storage.AttributionReportingVerboseDebugReportSentEvent):\n      void {\n  }\n}\n\nSDK.SDKModel.SDKModel.register(IndexedDBModel, {capabilities: SDK.Target.Capability.STORAGE, autostart: false});\n\nexport enum Events {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  DatabaseAdded = 'DatabaseAdded',\n  DatabaseRemoved = 'DatabaseRemoved',\n  DatabaseLoaded = 'DatabaseLoaded',\n  DatabaseNamesRefreshed = 'DatabaseNamesRefreshed',\n  IndexedDBContentUpdated = 'IndexedDBContentUpdated',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport interface EventTypes {\n  [Events.DatabaseAdded]: {model: IndexedDBModel, databaseId: DatabaseId};\n  [Events.DatabaseRemoved]: {model: IndexedDBModel, databaseId: DatabaseId};\n  [Events.DatabaseLoaded]: {model: IndexedDBModel, database: Database, entriesUpdated: boolean};\n  [Events.DatabaseNamesRefreshed]: void;\n  [Events.IndexedDBContentUpdated]: {model: IndexedDBModel, databaseId: DatabaseId, objectStoreName: string};\n}\n\nexport class Entry {\n  key: SDK.RemoteObject.RemoteObject;\n  primaryKey: SDK.RemoteObject.RemoteObject;\n  value: SDK.RemoteObject.RemoteObject;\n\n  constructor(\n      key: SDK.RemoteObject.RemoteObject, primaryKey: SDK.RemoteObject.RemoteObject,\n      value: SDK.RemoteObject.RemoteObject) {\n    this.key = key;\n    this.primaryKey = primaryKey;\n    this.value = value;\n  }\n}\n\nexport class DatabaseId {\n  readonly storageBucket: Protocol.Storage.StorageBucket;\n  name: string;\n  constructor(storageBucket: Protocol.Storage.StorageBucket, name: string) {\n    this.storageBucket = storageBucket;\n    this.name = name;\n  }\n\n  inBucket(storageBucket: Protocol.Storage.StorageBucket): boolean {\n    return this.storageBucket.name === storageBucket.name;\n  }\n\n  equals(databaseId: DatabaseId): boolean {\n    return this.name === databaseId.name && this.storageBucket.name === databaseId.storageBucket.name &&\n        this.storageBucket.storageKey === databaseId.storageBucket.storageKey;\n  }\n\n  inSet(databaseSet: Set<DatabaseId>): boolean {\n    for (const database of databaseSet) {\n      if (this.equals(database)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport class Database {\n  databaseId: DatabaseId;\n  version: number;\n  objectStores: Map<string, ObjectStore>;\n  constructor(databaseId: DatabaseId, version: number) {\n    this.databaseId = databaseId;\n    this.version = version;\n    this.objectStores = new Map();\n  }\n}\n\nexport class ObjectStore {\n  name: string;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  keyPath: any;\n  autoIncrement: boolean;\n  indexes: Map<string, Index>;\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(name: string, keyPath: any, autoIncrement: boolean) {\n    this.name = name;\n    this.keyPath = keyPath;\n    this.autoIncrement = autoIncrement;\n    this.indexes = new Map();\n  }\n\n  get keyPathString(): string {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // @ts-expect-error\n    return IndexedDBModel.keyPathStringFromIDBKeyPath((this.keyPath as string));\n  }\n}\n\nexport class Index {\n  name: string;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  keyPath: any;\n  unique: boolean;\n  multiEntry: boolean;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(name: string, keyPath: any, unique: boolean, multiEntry: boolean) {\n    this.name = name;\n    this.keyPath = keyPath;\n    this.unique = unique;\n    this.multiEntry = multiEntry;\n  }\n\n  get keyPathString(): string {\n    return IndexedDBModel.keyPathStringFromIDBKeyPath((this.keyPath as string)) as string;\n  }\n}\nexport interface ObjectStoreMetadata {\n  entriesCount: number;\n  keyGeneratorValue: number;\n}\n", "// Copyright 2012 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/components/report_view/report_view.js';\nimport '../../ui/legacy/legacy.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ApplicationComponents from './components/components.js';\nimport type {\n  Database, DatabaseId, Entry, Index, IndexedDBModel, ObjectStore, ObjectStoreMetadata} from './IndexedDBModel.js';\nimport indexedDBViewsStyles from './indexedDBViews.css.js';\n\ntype IDBKeyValue = number|string|Date|IDBKeyValue[];\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text in Indexed DBViews of the Application panel\n   */\n  version: 'Version',\n  /**\n   * @description Text in Indexed DBViews of the Application panel\n   */\n  objectStores: 'Object stores',\n  /**\n   * @description Text of button in Indexed DBViews of the Application panel\n   */\n  deleteDatabase: 'Delete database',\n  /**\n   * @description Text of button in Indexed DBViews of the Application panel\n   */\n  refreshDatabase: 'Refresh database',\n  /**\n   * @description Text in Application panel IndexedDB delete confirmation dialog\n   * @example {msb} PH1\n   */\n  confirmDeleteDatabase: 'Delete \"{PH1}\" database?',\n  /**\n   * @description Explanation text in Application panel IndexedDB delete confirmation dialog\n   */\n  databaseWillBeRemoved: 'The selected database and contained data will be removed.',\n  /**\n   * @description Title of the confirmation dialog in the IndexedDB tab of the Application panel\n   *              that the user is about to clear an object store and this cannot be undone.\n   * @example {table1} PH1\n   */\n  confirmClearObjectStore: 'Clear \"{PH1}\" object store?',\n  /**\n   * @description Description in the confirmation dialog in the IndexedDB tab of the Application\n   *              panel that the user is about to clear an object store and this cannot be undone.\n   */\n  objectStoreWillBeCleared: 'The data contained in the selected object store will be removed.',\n  /**\n   * @description Text in Indexed DBViews of the Application panel\n   */\n  idb: 'IDB',\n  /**\n   * @description Text to refresh the page\n   */\n  refresh: 'Refresh',\n  /**\n   * @description Tooltip text that appears when hovering over the delete button in the Indexed DBViews of the Application panel\n   */\n  deleteSelected: 'Delete selected',\n  /**\n   * @description Tooltip text that appears when hovering over the clear button in the Indexed DBViews of the Application panel\n   */\n  clearObjectStore: 'Clear object store',\n  /**\n   * @description Text in Indexed DBViews of the Application panel\n   */\n  dataMayBeStale: 'Data may be stale',\n  /**\n   * @description Title of needs refresh in indexed dbviews of the application panel\n   */\n  someEntriesMayHaveBeenModified: 'Some entries may have been modified',\n  /**\n   * @description Text in DOMStorage Items View of the Application panel\n   */\n  keyString: 'Key',\n  /**\n   * @description Text in Indexed DBViews of the Application panel\n   */\n  primaryKey: 'Primary key',\n  /**\n   * @description Text for the value of something\n   */\n  valueString: 'Value',\n  /**\n   * @description Data grid name for Indexed DB data grids\n   */\n  indexedDb: 'Indexed DB',\n  /**\n   * @description Text in Indexed DBViews of the Application panel\n   */\n  keyPath: 'Key path: ',\n  /**\n   * @description Tooltip text that appears when hovering over the triangle left button in the Indexed DBViews of the Application panel\n   */\n  showPreviousPage: 'Show previous page',\n  /**\n   * @description Tooltip text that appears when hovering over the triangle right button in the Indexed DBViews of the Application panel\n   */\n  showNextPage: 'Show next page',\n  /**\n   * @description Text in Indexed DBViews of the Application panel\n   */\n  filterByKey: 'Filter by key (show keys greater or equal to)',\n  /**\n   * @description Text in Context menu for expanding objects in IndexedDB tables\n   */\n  expandRecursively: 'Expand Recursively',\n  /**\n   * @description Text in Context menu for collapsing objects in IndexedDB tables\n   */\n  collapse: 'Collapse',\n  /**\n   * @description Span text content in Indexed DBViews of the Application panel\n   * @example {2} PH1\n   */\n  totalEntriesS: 'Total entries: {PH1}',\n  /**\n   * @description Text in Indexed DBViews of the Application panel\n   * @example {2} PH1\n   */\n  keyGeneratorValueS: 'Key generator value: {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/IndexedDBViews.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class IDBDatabaseView extends ApplicationComponents.StorageMetadataView.StorageMetadataView {\n  private readonly model: IndexedDBModel;\n  private database!: Database;\n  constructor(model: IndexedDBModel, database: Database|null) {\n    super();\n\n    this.model = model;\n    if (database) {\n      this.update(database);\n    }\n  }\n\n  override getTitle(): string|undefined {\n    return this.database?.databaseId.name;\n  }\n\n  override async renderReportContent(): Promise<Lit.LitTemplate> {\n    if (!this.database) {\n      return Lit.nothing;\n    }\n    return html`\n      ${await super.renderReportContent()}\n      ${this.key(i18nString(UIStrings.version))}\n      ${this.value(this.database.version.toString())}\n      ${this.key(i18nString(UIStrings.objectStores))}\n      ${this.value(this.database.objectStores.size.toString())}\n      <devtools-report-divider></devtools-report-divider>\n      <devtools-report-section>\n      <devtools-button\n          aria-label=${i18nString(UIStrings.deleteDatabase)}\n          .variant=${Buttons.Button.Variant.OUTLINED}\n          @click=${this.deleteDatabase}\n          jslog=${VisualLogging.action('delete-database').track({\n      click: true,\n    })}>\n        ${i18nString(UIStrings.deleteDatabase)}\n      </devtools-button>&nbsp;\n      <devtools-button\n          aria-label=${i18nString(UIStrings.refreshDatabase)}\n          .variant=${Buttons.Button.Variant.OUTLINED}\n          @click=${this.refreshDatabaseButtonClicked}\n          jslog=${VisualLogging.action('refresh-database').track({\n      click: true,\n    })}>\n        ${i18nString(UIStrings.refreshDatabase)}\n      </devtools-button>\n      </devtools-report-section>\n      `;\n  }\n\n  private refreshDatabaseButtonClicked(): void {\n    this.model.refreshDatabase(this.database.databaseId);\n  }\n\n  update(database: Database): void {\n    this.database = database;\n    const bucketInfo =\n        this.model.target()\n            .model(SDK.StorageBucketsModel.StorageBucketsModel)\n            ?.getBucketByName(database.databaseId.storageBucket.storageKey, database.databaseId.storageBucket.name);\n    if (bucketInfo) {\n      this.setStorageBucket(bucketInfo);\n    } else {\n      this.setStorageKey(database.databaseId.storageBucket.storageKey);\n    }\n\n    void this.render().then(() => this.updatedForTests());\n  }\n\n  private updatedForTests(): void {\n    // Sniffed in tests.\n  }\n\n  private async deleteDatabase(): Promise<void> {\n    const ok = await UI.UIUtils.ConfirmDialog.show(\n        i18nString(UIStrings.databaseWillBeRemoved),\n        i18nString(UIStrings.confirmDeleteDatabase, {PH1: this.database.databaseId.name}), this,\n        {jslogContext: 'delete-database-confirmation'});\n    if (ok) {\n      void this.model.deleteDatabase(this.database.databaseId);\n    }\n  }\n  override wasShown(): void {\n    super.wasShown();\n  }\n}\n\ncustomElements.define('devtools-idb-database-view', IDBDatabaseView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-idb-database-view': IDBDatabaseView;\n  }\n}\nexport class IDBDataView extends UI.View.SimpleView {\n  private readonly model: IndexedDBModel;\n  private readonly databaseId: DatabaseId;\n  private isIndex: boolean;\n  private readonly refreshObjectStoreCallback: () => void;\n  private readonly refreshButton: UI.Toolbar.ToolbarButton;\n  private readonly deleteSelectedButton: UI.Toolbar.ToolbarButton;\n  private readonly clearButton: UI.Toolbar.ToolbarButton;\n  private readonly needsRefresh: UI.Toolbar.ToolbarItem;\n  private clearingObjectStore: boolean;\n  private pageSize: number;\n  private skipCount: number;\n  // Used in Web Tests\n  protected entries: Entry[];\n  private objectStore!: ObjectStore;\n  private index!: Index|null;\n  private keyInput!: UI.Toolbar.ToolbarInput;\n  private dataGrid!: DataGrid.DataGrid.DataGridImpl<unknown>;\n  private lastPageSize!: number;\n  private lastSkipCount!: number;\n  private pageBackButton!: UI.Toolbar.ToolbarButton;\n  private pageForwardButton!: UI.Toolbar.ToolbarButton;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private lastKey?: any;\n  private summaryBarElement?: HTMLElement;\n\n  constructor(\n      model: IndexedDBModel, databaseId: DatabaseId, objectStore: ObjectStore, index: Index|null,\n      refreshObjectStoreCallback: () => void) {\n    super({\n      title: i18nString(UIStrings.idb),\n      viewId: 'idb',\n      jslog: `${VisualLogging.pane('indexed-db-data-view')}`,\n    });\n    this.registerRequiredCSS(indexedDBViewsStyles);\n\n    this.model = model;\n    this.databaseId = databaseId;\n    this.isIndex = Boolean(index);\n    this.refreshObjectStoreCallback = refreshObjectStoreCallback;\n\n    this.element.classList.add('indexed-db-data-view', 'storage-view');\n\n    this.refreshButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.refresh), 'refresh');\n    this.refreshButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.refreshButtonClicked, this);\n    this.refreshButton.element.setAttribute('jslog', `${VisualLogging.action('refresh').track({click: true})}`);\n\n    this.deleteSelectedButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.deleteSelected), 'bin');\n    this.deleteSelectedButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, _event => {\n      void this.deleteButtonClicked(null);\n    });\n    this.deleteSelectedButton.element.setAttribute(\n        'jslog', `${VisualLogging.action('delete-selected').track({click: true})}`);\n\n    this.clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearObjectStore), 'clear');\n    this.clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      void this.clearButtonClicked();\n    }, this);\n    this.clearButton.element.setAttribute('jslog', `${VisualLogging.action('clear-all').track({click: true})}`);\n\n    const refreshIcon = UI.UIUtils.createIconLabel({\n      title: i18nString(UIStrings.dataMayBeStale),\n      iconName: 'warning',\n      color: 'var(--icon-warning)',\n      width: '20px',\n      height: '20px',\n    });\n    this.needsRefresh = new UI.Toolbar.ToolbarItem(refreshIcon);\n    this.needsRefresh.setVisible(false);\n    this.needsRefresh.setTitle(i18nString(UIStrings.someEntriesMayHaveBeenModified));\n    this.clearingObjectStore = false;\n\n    this.createEditorToolbar();\n\n    this.pageSize = 50;\n    this.skipCount = 0;\n\n    this.update(objectStore, index);\n    this.entries = [];\n  }\n\n  private createDataGrid(): DataGrid.DataGrid.DataGridImpl<unknown> {\n    const keyPath = this.isIndex && this.index ? this.index.keyPath : this.objectStore.keyPath;\n\n    const columns = ([] as DataGrid.DataGrid.ColumnDescriptor[]);\n\n    // Create column defaults so that we avoid repetition below.\n    const columnDefaults = {\n      title: undefined,\n      titleDOMFragment: undefined,\n      sortable: false,\n      sort: undefined,\n      align: undefined,\n      width: undefined,\n      fixedWidth: undefined,\n      editable: undefined,\n      nonSelectable: undefined,\n      longText: undefined,\n      disclosure: undefined,\n      weight: undefined,\n      allowInSortByEvenWhenHidden: undefined,\n      dataType: undefined,\n      defaultWeight: undefined,\n    };\n    columns.push(\n        ({...columnDefaults, id: 'number', title: '#', sortable: false, width: '50px'} as\n         DataGrid.DataGrid.ColumnDescriptor));\n    columns.push(({\n      ...columnDefaults,\n      id: 'key',\n      titleDOMFragment: this.keyColumnHeaderFragment(i18nString(UIStrings.keyString), keyPath),\n      sortable: false,\n    } as DataGrid.DataGrid.ColumnDescriptor));\n    if (this.isIndex) {\n      columns.push(({\n        ...columnDefaults,\n        id: 'primary-key',\n        titleDOMFragment: this.keyColumnHeaderFragment(i18nString(UIStrings.primaryKey), this.objectStore.keyPath),\n        sortable: false,\n      } as DataGrid.DataGrid.ColumnDescriptor));\n    }\n    const title = i18nString(UIStrings.valueString);\n    columns.push(({...columnDefaults, id: 'value', title, sortable: false} as DataGrid.DataGrid.ColumnDescriptor));\n\n    const dataGrid = new DataGrid.DataGrid.DataGridImpl({\n      displayName: i18nString(UIStrings.indexedDb),\n      columns,\n      deleteCallback: this.deleteButtonClicked.bind(this),\n      refreshCallback: this.updateData.bind(this, true),\n    });\n    dataGrid.setStriped(true);\n    dataGrid.addEventListener(DataGrid.DataGrid.Events.SELECTED_NODE, () => {\n      this.updateToolbarEnablement();\n    }, this);\n    return dataGrid;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private keyColumnHeaderFragment(prefix: string, keyPath: any): DocumentFragment {\n    const keyColumnHeaderFragment = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(keyColumnHeaderFragment, prefix);\n    if (keyPath === null) {\n      return keyColumnHeaderFragment;\n    }\n\n    UI.UIUtils.createTextChild(keyColumnHeaderFragment, ' (' + i18nString(UIStrings.keyPath));\n    if (Array.isArray(keyPath)) {\n      UI.UIUtils.createTextChild(keyColumnHeaderFragment, '[');\n      for (let i = 0; i < keyPath.length; ++i) {\n        if (i !== 0) {\n          UI.UIUtils.createTextChild(keyColumnHeaderFragment, ', ');\n        }\n        keyColumnHeaderFragment.appendChild(this.keyPathStringFragment(keyPath[i]));\n      }\n      UI.UIUtils.createTextChild(keyColumnHeaderFragment, ']');\n    } else {\n      const keyPathString = (keyPath as string);\n      keyColumnHeaderFragment.appendChild(this.keyPathStringFragment(keyPathString));\n    }\n    UI.UIUtils.createTextChild(keyColumnHeaderFragment, ')');\n    return keyColumnHeaderFragment;\n  }\n\n  private keyPathStringFragment(keyPathString: string): DocumentFragment {\n    const keyPathStringFragment = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(keyPathStringFragment, '\"');\n    const keyPathSpan = keyPathStringFragment.createChild('span', 'source-code indexed-db-key-path');\n    keyPathSpan.textContent = keyPathString;\n    UI.UIUtils.createTextChild(keyPathStringFragment, '\"');\n    return keyPathStringFragment;\n  }\n\n  private createEditorToolbar(): void {\n    const editorToolbar = this.element.createChild('devtools-toolbar', 'data-view-toolbar');\n    editorToolbar.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n\n    editorToolbar.appendToolbarItem(this.refreshButton);\n    editorToolbar.appendToolbarItem(this.clearButton);\n    editorToolbar.appendToolbarItem(this.deleteSelectedButton);\n\n    editorToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSeparator());\n\n    this.pageBackButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.showPreviousPage), 'triangle-left', undefined, 'prev-page');\n    this.pageBackButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.pageBackButtonClicked, this);\n    editorToolbar.appendToolbarItem(this.pageBackButton);\n\n    this.pageForwardButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.showNextPage), 'triangle-right', undefined, 'next-page');\n    this.pageForwardButton.setEnabled(false);\n    this.pageForwardButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.pageForwardButtonClicked, this);\n    editorToolbar.appendToolbarItem(this.pageForwardButton);\n\n    this.keyInput = new UI.Toolbar.ToolbarFilter(i18nString(UIStrings.filterByKey), 0.5);\n    this.keyInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED, this.updateData.bind(this, false));\n    editorToolbar.appendToolbarItem(this.keyInput);\n    editorToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSeparator());\n\n    editorToolbar.appendToolbarItem(this.needsRefresh);\n  }\n\n  private pageBackButtonClicked(): void {\n    this.skipCount = Math.max(0, this.skipCount - this.pageSize);\n    this.updateData(false);\n  }\n\n  private pageForwardButtonClicked(): void {\n    this.skipCount = this.skipCount + this.pageSize;\n    this.updateData(false);\n  }\n\n  private populateContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu, gridNode: DataGrid.DataGrid.DataGridNode<unknown>): void {\n    const node = (gridNode as IDBDataGridNode);\n    if (node.valueObjectPresentation) {\n      contextMenu.revealSection().appendItem(i18nString(UIStrings.expandRecursively), () => {\n        if (!node.valueObjectPresentation) {\n          return;\n        }\n        void node.valueObjectPresentation.objectTreeElement().expandRecursively();\n      }, {jslogContext: 'expand-recursively'});\n      contextMenu.revealSection().appendItem(i18nString(UIStrings.collapse), () => {\n        if (!node.valueObjectPresentation) {\n          return;\n        }\n        node.valueObjectPresentation.objectTreeElement().collapse();\n      }, {jslogContext: 'collapse'});\n    }\n  }\n\n  refreshData(): void {\n    this.updateData(true);\n  }\n\n  update(objectStore: ObjectStore|null = null, index: Index|null = null): void {\n    if (!objectStore) {\n      return;\n    }\n    this.objectStore = objectStore;\n    this.index = index;\n\n    if (this.dataGrid) {\n      this.dataGrid.asWidget().detach();\n    }\n    this.dataGrid = this.createDataGrid();\n    this.dataGrid.setRowContextMenuCallback(this.populateContextMenu.bind(this));\n    this.dataGrid.asWidget().show(this.element);\n\n    this.skipCount = 0;\n    this.updateData(true);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private parseKey(keyString: string): any {\n    let result;\n    try {\n      result = JSON.parse(keyString);\n    } catch {\n      result = keyString;\n    }\n    return result;\n  }\n\n  private updateData(force: boolean): void {\n    const key = this.parseKey(this.keyInput.value());\n    const pageSize = this.pageSize;\n    let skipCount: 0|number = this.skipCount;\n    let selected = this.dataGrid.selectedNode ? this.dataGrid.selectedNode.data['number'] : 0;\n    selected = Math.max(selected, this.skipCount);  // Page forward should select top entry\n    this.clearButton.setEnabled(!this.isIndex);\n\n    if (!force && this.lastKey === key && this.lastPageSize === pageSize && this.lastSkipCount === skipCount) {\n      return;\n    }\n\n    if (this.lastKey !== key || this.lastPageSize !== pageSize) {\n      skipCount = 0;\n      this.skipCount = 0;\n    }\n    this.lastKey = key;\n    this.lastPageSize = pageSize;\n    this.lastSkipCount = skipCount;\n\n    function callback(this: IDBDataView, entries: Entry[], hasMore: boolean): void {\n      this.clear();\n      this.entries = entries;\n      let selectedNode: IDBDataGridNode|null = null;\n      for (let i = 0; i < entries.length; ++i) {\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const data: any = {};\n        data['number'] = i + skipCount;\n        data['key'] = entries[i].key;\n        data['primary-key'] = entries[i].primaryKey;\n        data['value'] = entries[i].value;\n\n        const node = new IDBDataGridNode(data);\n        this.dataGrid.rootNode().appendChild(node);\n        if (data['number'] <= selected) {\n          selectedNode = node;\n        }\n      }\n\n      if (selectedNode) {\n        selectedNode.select();\n      }\n      this.pageBackButton.setEnabled(Boolean(skipCount));\n      this.pageForwardButton.setEnabled(hasMore);\n      this.needsRefresh.setVisible(false);\n      this.updateToolbarEnablement();\n      this.updatedDataForTests();\n    }\n\n    const idbKeyRange = key ? window.IDBKeyRange.lowerBound(key) : null;\n    if (this.isIndex && this.index) {\n      this.model.loadIndexData(\n          this.databaseId, this.objectStore.name, this.index.name, idbKeyRange, skipCount, pageSize,\n          callback.bind(this));\n    } else {\n      this.model.loadObjectStoreData(\n          this.databaseId, this.objectStore.name, idbKeyRange, skipCount, pageSize, callback.bind(this));\n    }\n    void this.model.getMetadata(this.databaseId, this.objectStore).then(this.updateSummaryBar.bind(this));\n  }\n\n  private updateSummaryBar(metadata: ObjectStoreMetadata|null): void {\n    if (!this.summaryBarElement) {\n      this.summaryBarElement = this.element.createChild('div', 'object-store-summary-bar');\n    }\n    this.summaryBarElement.removeChildren();\n    if (!metadata) {\n      return;\n    }\n\n    const separator = '\\u2002\\u2758\\u2002';\n\n    const span = this.summaryBarElement.createChild('span');\n    span.textContent = i18nString(UIStrings.totalEntriesS, {PH1: String(metadata.entriesCount)});\n\n    if (this.objectStore.autoIncrement) {\n      span.textContent += separator;\n      span.textContent += i18nString(UIStrings.keyGeneratorValueS, {PH1: String(metadata.keyGeneratorValue)});\n    }\n  }\n\n  private updatedDataForTests(): void {\n    // Sniffed in tests.\n  }\n\n  private refreshButtonClicked(): void {\n    this.updateData(true);\n  }\n\n  private async clearButtonClicked(): Promise<void> {\n    const ok = await UI.UIUtils.ConfirmDialog.show(\n        i18nString(UIStrings.objectStoreWillBeCleared),\n        i18nString(UIStrings.confirmClearObjectStore, {PH1: this.objectStore.name}), this.element,\n        {jslogContext: 'clear-object-store-confirmation'});\n    if (ok) {\n      this.clearButton.setEnabled(false);\n      this.clearingObjectStore = true;\n      await this.model.clearObjectStore(this.databaseId, this.objectStore.name);\n      this.clearingObjectStore = false;\n      this.clearButton.setEnabled(true);\n      this.updateData(true);\n    }\n  }\n\n  markNeedsRefresh(): void {\n    // We expect that calling clearObjectStore() will cause the backend to send us an update.\n    if (this.clearingObjectStore) {\n      return;\n    }\n    this.needsRefresh.setVisible(true);\n  }\n\n  private async resolveArrayKey(key: SDK.RemoteObject.RemoteObject): Promise<IDBKeyValue> {\n    const {properties} = await key.getOwnProperties(false /* generatePreview */);\n    if (!properties) {\n      return [];\n    }\n    const result: IDBKeyValue = [];\n    const propertyPromises = properties.filter(property => !isNaN(Number(property.name))).map(async property => {\n      const value = property.value;\n      if (!value) {\n        return;\n      }\n      let propertyValue;\n      if (value.subtype === 'array') {\n        propertyValue = await this.resolveArrayKey(value);\n      } else {\n        propertyValue = value.value;\n      }\n      result[Number(property.name)] = propertyValue;\n    });\n    await Promise.all(propertyPromises);\n    return result;\n  }\n\n  private async deleteButtonClicked(node: DataGrid.DataGrid.DataGridNode<unknown>|null): Promise<void> {\n    if (!node) {\n      node = this.dataGrid.selectedNode;\n      if (!node) {\n        return;\n      }\n    }\n    const key = (this.isIndex ? node.data['primary-key'] : node.data.key as SDK.RemoteObject.RemoteObject);\n    const keyValue: IDBKeyValue = key.subtype === 'array' ? await this.resolveArrayKey(key) : key.value;\n    await this.model.deleteEntries(this.databaseId, this.objectStore.name, window.IDBKeyRange.only(keyValue));\n    this.refreshObjectStoreCallback();\n  }\n\n  clear(): void {\n    this.dataGrid.rootNode().removeChildren();\n    this.entries = [];\n  }\n\n  private updateToolbarEnablement(): void {\n    const empty = !this.dataGrid || this.dataGrid.rootNode().children.length === 0;\n    this.deleteSelectedButton.setEnabled(!empty && this.dataGrid.selectedNode !== null);\n  }\n}\n\nexport class IDBDataGridNode extends DataGrid.DataGrid.DataGridNode<unknown> {\n  override selectable: boolean;\n  valueObjectPresentation: ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection|null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(data: Record<string, any>) {\n    super(data, false);\n    this.selectable = true;\n    this.valueObjectPresentation = null;\n  }\n\n  override createCell(columnIdentifier: string): HTMLElement {\n    const cell = super.createCell(columnIdentifier);\n    const value = (this.data[columnIdentifier] as SDK.RemoteObject.RemoteObject);\n\n    switch (columnIdentifier) {\n      case 'value': {\n        cell.removeChildren();\n        const objectPropSection =\n            ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.defaultObjectPropertiesSection(\n                value, undefined /* linkifier */, true /* skipProto */, true /* readOnly */);\n        cell.appendChild(objectPropSection.element);\n        this.valueObjectPresentation = objectPropSection;\n        break;\n      }\n      case 'key':\n      case 'primary-key': {\n        cell.removeChildren();\n        const objectElement = ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.defaultObjectPresentation(\n            value, undefined /* linkifier */, true /* skipProto */, true /* readOnly */);\n        cell.appendChild(objectElement);\n        break;\n      }\n    }\n\n    return cell;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2012 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.indexed-db-data-view .data-view-toolbar {\n  position: relative;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.indexed-db-data-view .data-grid {\n  flex: auto;\n}\n\n.indexed-db-data-view .data-grid .data-container tr:nth-last-child(1) {\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.indexed-db-data-view .data-grid .data-container tr:nth-last-child(1) td {\n  border: 0;\n}\n\n.indexed-db-data-view .data-grid .data-container tr:nth-last-child(2) td {\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.indexed-db-data-view .data-grid:focus .data-container tr.selected {\n  background-color: var(--sys-color-tonal-container);\n  color: inherit;\n}\n\n.indexed-db-data-view .section,\n.indexed-db-data-view .section > .header,\n.indexed-db-data-view .section > .header .title {\n  margin: 0;\n  min-height: inherit;\n  line-height: inherit;\n}\n\n.indexed-db-data-view .data-grid .data-container td .section .header .title {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.indexed-db-key-path {\n  color: var(--sys-color-error);\n  white-space: pre-wrap;\n  unicode-bidi: -webkit-isolate;\n}\n\n.indexed-db-container {\n  overflow: auto;\n}\n\n.indexed-db-header {\n  min-width: 400px;\n  flex-shrink: 0;\n  flex-grow: 0;\n}\n\n.source-code.indexed-db-key-path {\n  font-size: unset !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.resources-toolbar {\n  padding-right: 10px;\n}\n\n.object-store-summary-bar {\n  flex: 0 0 27px;\n  line-height: 27px;\n  padding-left: 5px;\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n/*# sourceURL=${import.meta.resolve('./indexedDBViews.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class InterestGroupStorageModel extends SDK.SDKModel.SDKModel<EventTypes> implements\n    ProtocolProxyApi.StorageDispatcher {\n  private readonly storageAgent: ProtocolProxyApi.StorageApi;\n  private enabled?: boolean;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n    target.registerStorageDispatcher(this);\n    this.storageAgent = target.storageAgent();\n    this.enabled = false;\n  }\n\n  enable(): void {\n    if (this.enabled) {\n      return;\n    }\n    void this.storageAgent.invoke_setInterestGroupTracking({enable: true});\n  }\n\n  disable(): void {\n    if (!this.enabled) {\n      return;\n    }\n    void this.storageAgent.invoke_setInterestGroupTracking({enable: false});\n  }\n\n  interestGroupAccessed(event: Protocol.Storage.InterestGroupAccessedEvent): void {\n    this.dispatchEventToListeners(Events.INTEREST_GROUP_ACCESS, event);\n  }\n\n  attributionReportingTriggerRegistered(_event: Protocol.Storage.AttributionReportingTriggerRegisteredEvent): void {\n  }\n\n  indexedDBListUpdated(_event: Protocol.Storage.IndexedDBListUpdatedEvent): void {\n  }\n\n  indexedDBContentUpdated(_event: Protocol.Storage.IndexedDBContentUpdatedEvent): void {\n  }\n\n  interestGroupAuctionEventOccurred(_event: Protocol.Storage.InterestGroupAuctionEventOccurredEvent): void {\n  }\n\n  interestGroupAuctionNetworkRequestCreated(_event: Protocol.Storage.InterestGroupAuctionNetworkRequestCreatedEvent):\n      void {\n  }\n\n  cacheStorageListUpdated(_event: Protocol.Storage.CacheStorageListUpdatedEvent): void {\n  }\n\n  cacheStorageContentUpdated(_event: Protocol.Storage.CacheStorageContentUpdatedEvent): void {\n  }\n\n  sharedStorageAccessed(_event: Protocol.Storage.SharedStorageAccessedEvent): void {\n  }\n\n  sharedStorageWorkletOperationExecutionFinished(\n      _event: Protocol.Storage.SharedStorageWorkletOperationExecutionFinishedEvent): void {\n  }\n\n  storageBucketCreatedOrUpdated(_event: Protocol.Storage.StorageBucketCreatedOrUpdatedEvent): void {\n  }\n\n  storageBucketDeleted(_event: Protocol.Storage.StorageBucketDeletedEvent): void {\n  }\n\n  attributionReportingSourceRegistered(_event: Protocol.Storage.AttributionReportingSourceRegisteredEvent): void {\n  }\n  attributionReportingReportSent(_event: Protocol.Storage.AttributionReportingReportSentEvent): void {\n  }\n  attributionReportingVerboseDebugReportSent(_event: Protocol.Storage.AttributionReportingVerboseDebugReportSentEvent):\n      void {\n  }\n}\n\nSDK.SDKModel.SDKModel.register(\n    InterestGroupStorageModel, {capabilities: SDK.Target.Capability.STORAGE, autostart: false});\n\nexport const enum Events {\n  INTEREST_GROUP_ACCESS = 'InterestGroupAccess',\n}\n\nexport interface EventTypes {\n  [Events.INTEREST_GROUP_ACCESS]: Protocol.Storage.InterestGroupAccessedEvent;\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport {InterestGroupStorageView} from './InterestGroupStorageView.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\n\nconst UIStrings = {\n  /**\n   * @description Label for an item in the Application Panel Sidebar of the Application panel\n   * An interest group is an ad targeting group stored on the browser that can\n   * be used to show a certain set of advertisements in the future as the\n   * outcome of a FLEDGE auction. (https://developer.chrome.com/blog/fledge-api/)\n   */\n  interestGroups: 'Interest groups',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/InterestGroupTreeElement.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class InterestGroupTreeElement extends ApplicationPanelTreeElement {\n  private view: InterestGroupStorageView;\n\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, i18nString(UIStrings.interestGroups), false, 'interest-groups');\n    const interestGroupIcon = IconButton.Icon.create('database');\n    this.setLeadingIcons([interestGroupIcon]);\n    this.view = new InterestGroupStorageView(this);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'interest-groups://' as Platform.DevToolsPath.UrlString;\n  }\n\n  async getInterestGroupDetails(owner: string, name: string): Promise<object|null> {\n    const mainTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    if (!mainTarget) {\n      return null;\n    }\n    const response = await mainTarget.storageAgent().invoke_getInterestGroupDetails({ownerOrigin: owner, name});\n    return response.details;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.showView(this.view);\n    Host.userMetrics.panelShown('interest-groups');\n    return false;\n  }\n\n  addEvent(event: Protocol.Storage.InterestGroupAccessedEvent): void {\n    this.view.addEvent(event);\n  }\n\n  clearEvents(): void {\n    this.view.clearEvents();\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ApplicationComponents from './components/components.js';\nimport interestGroupStorageViewStyles from './interestGroupStorageView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Placeholder text shown when nothing has been selected for display\n   *details.\n   * An interest group is an ad targeting group stored on the browser that can\n   * be used to show a certain set of advertisements in the future as the\n   * outcome of a FLEDGE auction.\n   */\n  noValueSelected: 'No interest group selected',\n  /**\n   * @description Placeholder text instructing the user how to display interest group\n   *details.\n   * An interest group is an ad targeting group stored on the browser that can\n   * be used to show a certain set of advertisements in the future as the\n   * outcome of a FLEDGE auction.\n   */\n  clickToDisplayBody: 'Select any interest group event to display the group\\'s current state',\n  /**\n   * @description Placeholder text telling the user no details are available for\n   *the selected interest group.\n   */\n  noDataAvailable: 'No details available',\n  /**\n   * @description Placeholder text explaining to the user a potential reason for not having details on\n   * the interest groups.\n   * An interest group is an ad targeting group stored on the browser that can\n   * be used to show a certain set of advertisements in the future as the\n   * outcome of a FLEDGE auction.\n   */\n  noDataDescription: 'The browser may have left the group.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/InterestGroupStorageView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface InterestGroupDetailsGetter {\n  getInterestGroupDetails: (owner: string, name: string) => Promise<object|null>;\n}\n\nfunction eventEquals(\n    a: Protocol.Storage.InterestGroupAccessedEvent, b: Protocol.Storage.InterestGroupAccessedEvent): boolean {\n  return (a.accessTime === b.accessTime && a.type === b.type && a.ownerOrigin === b.ownerOrigin && a.name === b.name);\n}\n\nexport class InterestGroupStorageView extends UI.SplitWidget.SplitWidget {\n  private readonly interestGroupGrid = new ApplicationComponents.InterestGroupAccessGrid.InterestGroupAccessGrid();\n  private events: Protocol.Storage.InterestGroupAccessedEvent[] = [];\n  private detailsGetter: InterestGroupDetailsGetter;\n  private noDataView: UI.Widget.VBox;\n  private noDisplayView: UI.Widget.VBox;\n\n  constructor(detailsGetter: InterestGroupDetailsGetter) {\n    super(/* isVertical */ false, /* secondIsSidebar: */ true);\n    this.element.setAttribute('jslog', `${VisualLogging.pane('interest-groups')}`);\n    this.detailsGetter = detailsGetter;\n\n    const topPanel = new UI.Widget.VBox();\n    this.noDisplayView =\n        new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.noValueSelected), i18nString(UIStrings.clickToDisplayBody));\n    this.noDataView =\n        new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.noDataAvailable), i18nString(UIStrings.noDataDescription));\n\n    topPanel.setMinimumSize(0, 120);\n    this.setMainWidget(topPanel);\n    this.noDisplayView.setMinimumSize(0, 80);\n    this.setSidebarWidget(this.noDisplayView);\n    this.noDataView.setMinimumSize(0, 80);\n    this.noDisplayView.contentElement.setAttribute('jslog', `${VisualLogging.pane('details').track({resize: true})}`);\n    this.noDataView.contentElement.setAttribute('jslog', `${VisualLogging.pane('details').track({resize: true})}`);\n    this.hideSidebar();\n\n    topPanel.contentElement.appendChild(this.interestGroupGrid);\n    this.interestGroupGrid.addEventListener('select', this.onFocus.bind(this));\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    const mainWidget = this.mainWidget();\n    if (mainWidget) {\n      mainWidget.registerRequiredCSS(interestGroupStorageViewStyles);\n    }\n  }\n\n  addEvent(event: Protocol.Storage.InterestGroupAccessedEvent): void {\n    if (this.showMode() !== UI.SplitWidget.ShowMode.BOTH) {\n      this.showBoth();\n    }\n    // Only add if not already present.\n    const foundEvent = this.events.find(t => eventEquals(t, event));\n    if (!foundEvent) {\n      this.events.push(event);\n      this.interestGroupGrid.data = this.events;\n    }\n  }\n\n  clearEvents(): void {\n    this.events = [];\n    this.interestGroupGrid.data = this.events;\n    this.setSidebarWidget(this.noDisplayView);\n    this.sidebarUpdatedForTesting();\n  }\n\n  private async onFocus(event: Event): Promise<void> {\n    const focusedEvent = event as CustomEvent<Protocol.Storage.InterestGroupAccessedEvent>;\n    const {ownerOrigin, name, type: eventType} = focusedEvent.detail;\n\n    let details = null;\n    // Details of additional bids can't be looked up like regular bids,\n    // they are ephemeral to the auction.\n    if (eventType !== Protocol.Storage.InterestGroupAccessType.AdditionalBid &&\n        eventType !== Protocol.Storage.InterestGroupAccessType.AdditionalBidWin &&\n        eventType !== Protocol.Storage.InterestGroupAccessType.TopLevelAdditionalBid) {\n      details = await this.detailsGetter.getInterestGroupDetails(ownerOrigin, name);\n    }\n    if (details) {\n      const jsonView = await SourceFrame.JSONView.JSONView.createView(JSON.stringify(details));\n      jsonView?.setMinimumSize(0, 40);\n      if (jsonView) {\n        jsonView.contentElement.setAttribute('jslog', `${VisualLogging.pane('details').track({resize: true})}`);\n        this.setSidebarWidget(jsonView);\n      }\n    } else {\n      this.setSidebarWidget(this.noDataView);\n    }\n    this.sidebarUpdatedForTesting();\n  }\n\n  getEventsForTesting(): Protocol.Storage.InterestGroupAccessedEvent[] {\n    return this.events;\n  }\n\n  getInterestGroupGridForTesting(): ApplicationComponents.InterestGroupAccessGrid.InterestGroupAccessGrid {\n    return this.interestGroupGrid;\n  }\n\n  sidebarUpdatedForTesting(): void {\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\ndevtools-interest-group-access-grid {\n  overflow: auto;\n}\n\n/*# sourceURL=${import.meta.resolve('./interestGroupStorageView.css')} */`;", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport openedWindowDetailsViewStyles from './openedWindowDetailsView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Timeline indicating that input has happened recently\n   */\n  yes: 'Yes',\n  /**\n   * @description Text in Timeline indicating that input has not happened recently\n   */\n  no: 'No',\n  /**\n   * @description Title for a link to the Elements panel\n   */\n  clickToOpenInElementsPanel: 'Click to open in Elements panel',\n  /**\n   * @description Name of a network resource type\n   */\n  document: 'Document',\n  /**\n   * @description Text for web URLs\n   */\n  url: 'URL',\n  /**\n   * @description Title of the 'Security' tool\n   */\n  security: 'Security',\n  /**\n   * @description Label for link to Opener Frame in Detail View for Opened Window\n   */\n  openerFrame: 'Opener Frame',\n  /**\n   * @description Label in opened window's details view whether window has access to its opener\n   */\n  accessToOpener: 'Access to opener',\n  /**\n   * @description Description for the 'Access to Opener' field\n   */\n  showsWhetherTheOpenedWindowIs: 'Shows whether the opened window is able to access its opener and vice versa',\n  /**\n   * @description Text in Frames View of the Application panel\n   */\n  windowWithoutTitle: 'Window without title',\n  /**\n   * @description Label suffix in the Application Panel Frames section for windows which are already closed\n   */\n  closed: 'closed',\n  /**\n   * @description Default name for worker\n   */\n  worker: 'worker',\n  /**\n   * @description Text that refers to some types\n   */\n  type: 'Type',\n  /**\n   * @description Section header in the Frame Details view\n   */\n  securityIsolation: 'Security & Isolation',\n  /**\n   * @description Row title in the Frame Details view\n   */\n  crossoriginEmbedderPolicy: 'Cross-Origin Embedder Policy',\n  /**\n   * @description Label for worker type: web worker\n   */\n  webWorker: 'Web Worker',\n  /**\n   * @description Text for an unspecified service worker response source\n   */\n  unknown: 'Unknown',\n  /**\n   * @description This label specifies the server endpoints to which the server is reporting errors\n   *and warnings through the Report-to API. Following this label will be the URL of the server.\n   */\n  reportingTo: 'reporting to',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/OpenedWindowDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst booleanToYesNo = (b: boolean): Common.UIString.LocalizedString =>\n    b ? i18nString(UIStrings.yes) : i18nString(UIStrings.no);\n\nfunction linkifyIcon(iconType: string, title: string, eventHandler: () => (void|Promise<void>)): Element {\n  const icon = IconButton.Icon.create(iconType, 'icon-link devtools-link');\n  const button = document.createElement('button');\n  UI.Tooltip.Tooltip.install(button, title);\n  button.classList.add('devtools-link', 'link-style', 'text-button');\n  button.appendChild(icon);\n  button.addEventListener('click', event => {\n    event.consume(true);\n    void eventHandler();\n  });\n  return button;\n}\n\nasync function maybeCreateLinkToElementsPanel(opener: Protocol.Page.FrameId|SDK.ResourceTreeModel.ResourceTreeFrame|\n                                              undefined): Promise<Element|null> {\n  let openerFrame: SDK.ResourceTreeModel.ResourceTreeFrame|(SDK.ResourceTreeModel.ResourceTreeFrame | null)|null = null;\n  if (opener instanceof SDK.ResourceTreeModel.ResourceTreeFrame) {\n    openerFrame = opener;\n  } else if (opener) {\n    openerFrame = SDK.FrameManager.FrameManager.instance().getFrame(opener);\n  }\n  if (!openerFrame) {\n    return null;\n  }\n  const linkTargetDOMNode = await openerFrame.getOwnerDOMNodeOrDocument();\n  if (!linkTargetDOMNode) {\n    return null;\n  }\n  const linkElement = linkifyIcon(\n      'code-circle', i18nString(UIStrings.clickToOpenInElementsPanel), () => Common.Revealer.reveal(linkTargetDOMNode));\n  const label = document.createElement('span');\n  label.textContent = `<${linkTargetDOMNode.nodeName().toLocaleLowerCase()}>`;\n  linkElement.insertBefore(label, linkElement.firstChild);\n  linkElement.addEventListener('mouseenter', () => {\n    if (openerFrame) {\n      void openerFrame.highlight();\n    }\n  });\n  linkElement.addEventListener('mouseleave', () => {\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n  });\n  return linkElement;\n}\n\nexport class OpenedWindowDetailsView extends UI.ThrottledWidget.ThrottledWidget {\n  private targetInfo: Protocol.Target.TargetInfo;\n  private isWindowClosed: boolean;\n  private readonly reportView: UI.ReportView.ReportView;\n  private readonly documentSection: UI.ReportView.Section;\n  #urlFieldValue: HTMLElement;\n  private readonly securitySection: UI.ReportView.Section;\n  private readonly openerElementField: HTMLElement;\n  private hasDOMAccessValue: HTMLElement;\n\n  constructor(targetInfo: Protocol.Target.TargetInfo, isWindowClosed: boolean) {\n    super();\n    this.registerRequiredCSS(openedWindowDetailsViewStyles);\n    this.targetInfo = targetInfo;\n    this.isWindowClosed = isWindowClosed;\n\n    this.contentElement.classList.add('frame-details-container');\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    this.reportView = new UI.ReportView.ReportView(this.buildTitle());\n\n    this.reportView.show(this.contentElement);\n    this.reportView.registerRequiredCSS(openedWindowDetailsViewStyles);\n    this.reportView.element.classList.add('frame-details-report-container');\n\n    this.documentSection = this.reportView.appendSection(i18nString(UIStrings.document));\n    this.#urlFieldValue =\n        this.documentSection.appendField(i18nString(UIStrings.url)).createChild('div', 'text-ellipsis');\n\n    this.securitySection = this.reportView.appendSection(i18nString(UIStrings.security));\n    this.openerElementField = this.securitySection.appendField(i18nString(UIStrings.openerFrame));\n    this.securitySection.setFieldVisible(i18nString(UIStrings.openerFrame), false);\n    this.hasDOMAccessValue = this.securitySection.appendField(i18nString(UIStrings.accessToOpener));\n    UI.Tooltip.Tooltip.install(this.hasDOMAccessValue, i18nString(UIStrings.showsWhetherTheOpenedWindowIs));\n    this.update();\n  }\n\n  override async doUpdate(): Promise<void> {\n    this.reportView.setTitle(this.buildTitle());\n    this.#urlFieldValue.textContent = this.targetInfo.url;\n    this.#urlFieldValue.title = this.targetInfo.url;\n    this.hasDOMAccessValue.textContent = booleanToYesNo(this.targetInfo.canAccessOpener);\n    void this.maybeDisplayOpenerFrame();\n  }\n\n  async maybeDisplayOpenerFrame(): Promise<void> {\n    this.openerElementField.removeChildren();\n    const linkElement = await maybeCreateLinkToElementsPanel(this.targetInfo.openerFrameId);\n    if (linkElement) {\n      this.openerElementField.append(linkElement);\n      this.securitySection.setFieldVisible(i18nString(UIStrings.openerFrame), true);\n      return;\n    }\n    this.securitySection.setFieldVisible(i18nString(UIStrings.openerFrame), false);\n  }\n\n  buildTitle(): string {\n    let title = this.targetInfo.title || i18nString(UIStrings.windowWithoutTitle);\n    if (this.isWindowClosed) {\n      title += ` (${i18nString(UIStrings.closed)})`;\n    }\n    return title;\n  }\n\n  setIsWindowClosed(isWindowClosed: boolean): void {\n    this.isWindowClosed = isWindowClosed;\n  }\n\n  setTargetInfo(targetInfo: Protocol.Target.TargetInfo): void {\n    this.targetInfo = targetInfo;\n  }\n}\n\nexport class WorkerDetailsView extends UI.ThrottledWidget.ThrottledWidget {\n  private readonly targetInfo: Protocol.Target.TargetInfo;\n  private readonly reportView: UI.ReportView.ReportView;\n  private readonly documentSection: UI.ReportView.Section;\n  private readonly isolationSection: UI.ReportView.Section;\n  private readonly coepPolicy: HTMLElement;\n\n  constructor(targetInfo: Protocol.Target.TargetInfo) {\n    super();\n    this.registerRequiredCSS(openedWindowDetailsViewStyles);\n    this.targetInfo = targetInfo;\n\n    this.contentElement.classList.add('frame-details-container');\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    this.reportView =\n        new UI.ReportView.ReportView(this.targetInfo.title || this.targetInfo.url || i18nString(UIStrings.worker));\n\n    this.reportView.show(this.contentElement);\n    this.reportView.registerRequiredCSS(openedWindowDetailsViewStyles);\n    this.reportView.element.classList.add('frame-details-report-container');\n\n    this.documentSection = this.reportView.appendSection(i18nString(UIStrings.document));\n    const URLFieldValue =\n        this.documentSection.appendField(i18nString(UIStrings.url)).createChild('div', 'text-ellipsis');\n    URLFieldValue.textContent = this.targetInfo.url;\n    URLFieldValue.title = this.targetInfo.url;\n    const workerType = this.documentSection.appendField(i18nString(UIStrings.type));\n    workerType.textContent = this.workerTypeToString(this.targetInfo.type);\n\n    this.isolationSection = this.reportView.appendSection(i18nString(UIStrings.securityIsolation));\n    this.coepPolicy = this.isolationSection.appendField(i18nString(UIStrings.crossoriginEmbedderPolicy));\n    this.update();\n  }\n\n  workerTypeToString(type: string): Common.UIString.LocalizedString {\n    if (type === 'worker') {\n      return i18nString(UIStrings.webWorker);\n    }\n    if (type === 'service_worker') {\n      return i18n.i18n.lockedString('Service Worker');\n    }\n    return i18nString(UIStrings.unknown);\n  }\n\n  private async updateCoopCoepStatus(): Promise<void> {\n    const target = SDK.TargetManager.TargetManager.instance().targetById(this.targetInfo.targetId);\n    if (!target) {\n      return;\n    }\n    const model = target.model(SDK.NetworkManager.NetworkManager);\n    const info = model && await model.getSecurityIsolationStatus(null);\n    if (!info) {\n      return;\n    }\n    const coepIsEnabled =\n        (value: Protocol.Network.CrossOriginEmbedderPolicyValue|Protocol.Network.CrossOriginOpenerPolicyValue):\n            boolean => value !== Protocol.Network.CrossOriginEmbedderPolicyValue.None;\n    this.fillCrossOriginPolicy(this.coepPolicy, coepIsEnabled, info.coep);\n  }\n\n  private fillCrossOriginPolicy(\n      field: HTMLElement,\n      isEnabled: (arg0: (Protocol.Network.CrossOriginEmbedderPolicyValue|\n                         Protocol.Network.CrossOriginOpenerPolicyValue)) => boolean,\n      info: Protocol.Network.CrossOriginEmbedderPolicyStatus|Protocol.Network.CrossOriginOpenerPolicyStatus|null|\n      undefined): void {\n    if (!info) {\n      field.textContent = '';\n      return;\n    }\n    const enabled = isEnabled(info.value);\n    field.textContent = enabled ? info.value : info.reportOnlyValue;\n    if (!enabled && isEnabled(info.reportOnlyValue)) {\n      const reportOnly = document.createElement('span');\n      reportOnly.classList.add('inline-comment');\n      reportOnly.textContent = 'report-only';\n      field.appendChild(reportOnly);\n    }\n    const endpoint = enabled ? info.reportingEndpoint : info.reportOnlyReportingEndpoint;\n    if (endpoint) {\n      const reportingEndpointPrefix = field.createChild('span', 'inline-name');\n      reportingEndpointPrefix.textContent = i18nString(UIStrings.reportingTo);\n      const reportingEndpointName = field.createChild('span');\n      reportingEndpointName.textContent = endpoint;\n    }\n  }\n\n  override async doUpdate(): Promise<void> {\n    await this.updateCoopCoepStatus();\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2020 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.report-content-box {\n  overflow: initial;\n}\n\n.report-field-name {\n  flex: 0 0 200px;\n}\n\n.report-field-value {\n  user-select: text;\n  display: flex;\n}\n\n.report-field .inline-name {\n  color: var(--sys-color-state-disabled);\n  padding-left: 2ex;\n  user-select: none;\n  white-space: pre-line;\n}\n\n.report-field .inline-name::after {\n  content: \":\\\\A0\";\n}\n\n.report-field .inline-comment {\n  color: var(--sys-color-token-subtle);\n  padding-left: 1ex;\n  white-space: pre-line;\n}\n\n.report-field .inline-comment::before {\n  content: \"(\";\n}\n\n.report-field .inline-comment::after {\n  content: \")\";\n}\n\n.report-field .inline-span {\n  color: var(--sys-color-token-subtle);\n  padding-left: 1ex;\n  white-space: pre-line;\n}\n\n.report-field-value-link {\n  display: inline-block;\n}\n\n.icon-link.devtools-link {\n  background-color: var(--sys-color-primary);\n  vertical-align: sub;\n}\n\n.frame-details-container {\n  overflow: auto;\n}\n\n.frame-details-report-container {\n  min-width: 550px;\n}\n\n.text-ellipsis {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n/*# sourceURL=${import.meta.resolve('./openedWindowDetailsView.css')} */`;", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\n\nimport {ApplicationPanelTreeElement, ExpandableApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport type * as PreloadingHelper from './preloading/helper/helper.js';\nimport {PreloadingAttemptView, PreloadingRuleSetView, PreloadingSummaryView} from './preloading/PreloadingView.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  speculativeLoads: 'Speculative loads',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  rules: 'Rules',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  speculations: 'Speculations',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/PreloadingTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nclass PreloadingTreeElementBase<View extends PreloadingRuleSetView|PreloadingAttemptView> extends\n    ApplicationPanelTreeElement {\n  #model?: SDK.PreloadingModel.PreloadingModel;\n  #viewConstructor: {new(model: SDK.PreloadingModel.PreloadingModel): View};\n  protected view?: View;\n  #path: Platform.DevToolsPath.UrlString;\n  #selected: boolean;\n\n  constructor(\n      panel: ResourcesPanel, viewConstructor: {new(model: SDK.PreloadingModel.PreloadingModel): View},\n      path: Platform.DevToolsPath.UrlString, title: string) {\n    super(panel, title, false, 'speculative-loads');\n\n    this.#viewConstructor = viewConstructor;\n    this.#path = path;\n\n    const icon = IconButton.Icon.create('speculative-loads');\n    this.setLeadingIcons([icon]);\n    this.#selected = false;\n\n    // TODO(https://crbug.com/1384419): Set link\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return this.#path;\n  }\n\n  initialize(model: SDK.PreloadingModel.PreloadingModel): void {\n    this.#model = model;\n\n    // Show the view if the model was initialized after selection.\n    if (this.#selected && !this.view) {\n      this.onselect(false);\n    }\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.#selected = true;\n\n    if (!this.#model) {\n      return false;\n    }\n\n    if (!this.view) {\n      this.view = new this.#viewConstructor(this.#model);\n    }\n\n    this.showView(this.view);\n\n    return false;\n  }\n}\n\nexport class PreloadingSummaryTreeElement extends ExpandableApplicationPanelTreeElement {\n  #model?: SDK.PreloadingModel.PreloadingModel;\n  #view?: PreloadingSummaryView;\n  #selected: boolean;\n\n  #ruleSet: PreloadingRuleSetTreeElement|null = null;\n  #attempt: PreloadingAttemptTreeElement|null = null;\n\n  constructor(panel: ResourcesPanel) {\n    super(panel, i18nString(UIStrings.speculativeLoads), '', '', 'preloading');\n\n    const icon = IconButton.Icon.create('speculative-loads');\n    this.setLeadingIcons([icon]);\n    this.#selected = false;\n\n    // TODO(https://crbug.com/1384419): Set link\n  }\n\n  // Note that\n  //\n  // - TreeElement.ensureSelection assumes TreeElement.treeOutline initialized.\n  // - TreeElement.treeOutline is propagated in TreeElement.appendChild.\n  //\n  // So, `this.constructChildren` should be called just after `parent.appendChild(this)`\n  // to enrich children with TreeElement.selectionElementInternal correctly.\n  constructChildren(panel: ResourcesPanel): void {\n    this.#ruleSet = new PreloadingRuleSetTreeElement(panel);\n    this.#attempt = new PreloadingAttemptTreeElement(panel);\n    this.appendChild(this.#ruleSet);\n    this.appendChild(this.#attempt);\n  }\n\n  initialize(model: SDK.PreloadingModel.PreloadingModel): void {\n    if (this.#ruleSet === null || this.#attempt === null) {\n      throw new Error('unreachable');\n    }\n\n    this.#model = model;\n    this.#ruleSet.initialize(model);\n    this.#attempt.initialize(model);\n\n    // Show the view if the model was initialized after selection.\n    if (this.#selected && !this.#view) {\n      this.onselect(false);\n    }\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.#selected = true;\n\n    if (!this.#model) {\n      return false;\n    }\n\n    if (!this.#view) {\n      this.#view = new PreloadingSummaryView(this.#model);\n    }\n\n    this.showView(this.#view);\n\n    return false;\n  }\n\n  expandAndRevealRuleSet(revealInfo: PreloadingHelper.PreloadingForward.RuleSetView): void {\n    if (this.#ruleSet === null) {\n      throw new Error('unreachable');\n    }\n\n    this.expand();\n    this.#ruleSet.revealRuleSet(revealInfo);\n  }\n\n  expandAndRevealAttempts(filter: PreloadingHelper.PreloadingForward.AttemptViewWithFilter): void {\n    if (this.#attempt === null) {\n      throw new Error('unreachable');\n    }\n\n    this.expand();\n    this.#attempt.revealAttempts(filter);\n  }\n}\n\nexport class PreloadingRuleSetTreeElement extends PreloadingTreeElementBase<PreloadingRuleSetView> {\n  constructor(panel: ResourcesPanel) {\n    super(\n        panel, PreloadingRuleSetView, 'preloading://rule-set' as Platform.DevToolsPath.UrlString,\n        i18nString(UIStrings.rules));\n  }\n\n  revealRuleSet(revealInfo: PreloadingHelper.PreloadingForward.RuleSetView): void {\n    this.select();\n\n    if (this.view === undefined) {\n      return;\n    }\n\n    this.view?.revealRuleSet(revealInfo);\n  }\n}\n\nclass PreloadingAttemptTreeElement extends PreloadingTreeElementBase<PreloadingAttemptView> {\n  constructor(panel: ResourcesPanel) {\n    super(\n        panel, PreloadingAttemptView, 'preloading://attempt' as Platform.DevToolsPath.UrlString,\n        i18nString(UIStrings.speculations));\n  }\n\n  revealAttempts(filter: PreloadingHelper.PreloadingForward.AttemptViewWithFilter): void {\n    this.select();\n    this.view?.setFilter(filter);\n  }\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/legacy/legacy.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Protocol from '../../../generated/protocol.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\n// eslint-disable-next-line rulesdir/es-modules-import\nimport emptyWidgetStyles from '../../../ui/legacy/emptyWidget.css.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport {html, render} from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport * as PreloadingComponents from './components/components.js';\nimport {ruleSetTagOrLocationShort} from './components/PreloadingString.js';\nimport type * as PreloadingHelper from './helper/helper.js';\nimport preloadingViewStyles from './preloadingView.css.js';\nimport preloadingViewDropDownStyles from './preloadingViewDropDown.css.js';\n\nconst UIStrings = {\n  /**\n   * @description DropDown title for filtering preloading attempts by rule set\n   */\n  filterFilterByRuleSet: 'Filter by rule set',\n  /**\n   * @description DropDown text for filtering preloading attempts by rule set: No filter\n   */\n  filterAllPreloads: 'All speculative loads',\n  /**\n   * @description Dropdown subtitle for filtering preloading attempts by rule set\n   *             when there are no rule sets in the page.\n   */\n  noRuleSets: 'no rule sets',\n  /**\n   * @description Text in grid: Rule set is valid\n   */\n  validityValid: 'Valid',\n  /**\n   * @description Text in grid: Rule set must be a valid JSON object\n   */\n  validityInvalid: 'Invalid',\n  /**\n   * @description Text in grid: Rule set contains invalid rules and they are ignored\n   */\n  validitySomeRulesInvalid: 'Some rules invalid',\n  /**\n   * @description Text in grid and details: Preloading attempt is not yet triggered.\n   */\n  statusNotTriggered: 'Not triggered',\n  /**\n   * @description Text in grid and details: Preloading attempt is eligible but pending.\n   */\n  statusPending: 'Pending',\n  /**\n   * @description Text in grid and details: Preloading is running.\n   */\n  statusRunning: 'Running',\n  /**\n   * @description Text in grid and details: Preloading finished and the result is ready for the next navigation.\n   */\n  statusReady: 'Ready',\n  /**\n   * @description Text in grid and details: Ready, then used.\n   */\n  statusSuccess: 'Success',\n  /**\n   * @description Text in grid and details: Preloading failed.\n   */\n  statusFailure: 'Failure',\n  /**\n   * @description Text to pretty print a file\n   */\n  prettyPrint: 'Pretty print',\n  /**\n   * @description Placeholder text if there are no rules to show. https://developer.chrome.com/docs/devtools/application/debugging-speculation-rules\n   */\n  noRulesDetected: 'No rules detected',\n  /**\n   * @description Placeholder text if there are no rules to show. https://developer.chrome.com/docs/devtools/application/debugging-speculation-rules\n   */\n  rulesDescription: 'On this page you will see the speculation rules used to prefetch and prerender page navigations.',\n  /**\n   * @description Placeholder text if there are no speculation attempts for prefetching or prerendering urls. https://developer.chrome.com/docs/devtools/application/debugging-speculation-rules\n   */\n  noPrefetchAttempts: 'No speculation detected',\n  /**\n   * @description Placeholder text if there are no speculation attempts for prefetching or prerendering urls. https://developer.chrome.com/docs/devtools/application/debugging-speculation-rules\n   */\n  prefetchDescription: 'On this page you will see details on speculative loads.',\n  /**\n   * @description Text for a learn more link\n   */\n  learnMore: 'Learn more',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/PreloadingView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst SPECULATION_EXPLANATION_URL =\n    'https://developer.chrome.com/docs/devtools/application/debugging-speculation-rules' as\n    Platform.DevToolsPath.UrlString;\n\n// Used for selector, indicating no filter is specified.\nconst AllRuleSetRootId = Symbol('AllRuleSetRootId');\n\nclass PreloadingUIUtils {\n  static status(status: SDK.PreloadingModel.PreloadingStatus): string {\n    // See content/public/browser/preloading.h PreloadingAttemptOutcome.\n    switch (status) {\n      case SDK.PreloadingModel.PreloadingStatus.NOT_TRIGGERED:\n        return i18nString(UIStrings.statusNotTriggered);\n      case SDK.PreloadingModel.PreloadingStatus.PENDING:\n        return i18nString(UIStrings.statusPending);\n      case SDK.PreloadingModel.PreloadingStatus.RUNNING:\n        return i18nString(UIStrings.statusRunning);\n      case SDK.PreloadingModel.PreloadingStatus.READY:\n        return i18nString(UIStrings.statusReady);\n      case SDK.PreloadingModel.PreloadingStatus.SUCCESS:\n        return i18nString(UIStrings.statusSuccess);\n      case SDK.PreloadingModel.PreloadingStatus.FAILURE:\n        return i18nString(UIStrings.statusFailure);\n      // NotSupported is used to handle unreachable case. For example,\n      // there is no code path for\n      // PreloadingTriggeringOutcome::kTriggeredButPending in prefetch,\n      // which is mapped to NotSupported. So, we regard it as an\n      // internal error.\n      case SDK.PreloadingModel.PreloadingStatus.NOT_SUPPORTED:\n        return i18n.i18n.lockedString('Internal error');\n    }\n  }\n\n  static preloadsStatusSummary(countsByStatus: Map<SDK.PreloadingModel.PreloadingStatus, number>): string {\n    const LIST = [\n      SDK.PreloadingModel.PreloadingStatus.NOT_TRIGGERED,\n      SDK.PreloadingModel.PreloadingStatus.PENDING,\n      SDK.PreloadingModel.PreloadingStatus.RUNNING,\n      SDK.PreloadingModel.PreloadingStatus.READY,\n      SDK.PreloadingModel.PreloadingStatus.SUCCESS,\n      SDK.PreloadingModel.PreloadingStatus.FAILURE,\n    ];\n\n    return LIST.filter(status => (countsByStatus?.get(status) || 0) > 0)\n        .map(status => (countsByStatus?.get(status) || 0) + ' ' + this.status(status))\n        .join(', ')\n        .toLocaleLowerCase();\n  }\n\n  // Summary of error of rule set shown in grid.\n  static validity({errorType}: Protocol.Preload.RuleSet): string {\n    switch (errorType) {\n      case undefined:\n        return i18nString(UIStrings.validityValid);\n      case Protocol.Preload.RuleSetErrorType.SourceIsNotJsonObject:\n      case Protocol.Preload.RuleSetErrorType.InvalidRulesetLevelTag:\n        return i18nString(UIStrings.validityInvalid);\n      case Protocol.Preload.RuleSetErrorType.InvalidRulesSkipped:\n        return i18nString(UIStrings.validitySomeRulesInvalid);\n    }\n  }\n\n  // Where a rule set came from, shown in grid.\n  static location(ruleSet: Protocol.Preload.RuleSet): string {\n    if (ruleSet.backendNodeId !== undefined) {\n      return i18n.i18n.lockedString('<script>');\n    }\n\n    if (ruleSet.url !== undefined) {\n      return ruleSet.url;\n    }\n\n    throw new Error('unreachable');\n  }\n\n  static processLocalId(id: Protocol.Preload.RuleSetId): string {\n    // RuleSetId is form of '<processId>.<processLocalId>'\n    const index = id.indexOf('.');\n    return index === -1 ? id : id.slice(index + 1);\n  }\n}\n\nfunction pageURL(): Platform.DevToolsPath.UrlString {\n  return SDK.TargetManager.TargetManager.instance().scopeTarget()?.inspectedURL() ||\n      ('' as Platform.DevToolsPath.UrlString);\n}\n\nexport class PreloadingRuleSetView extends UI.Widget.VBox {\n  private model: SDK.PreloadingModel.PreloadingModel;\n  private focusedRuleSetId: Protocol.Preload.RuleSetId|null = null;\n\n  private readonly warningsContainer: HTMLDivElement;\n  private readonly warningsView = new PreloadingWarningsView();\n  private readonly hsplit: HTMLElement;\n  private readonly ruleSetGrid = new PreloadingComponents.RuleSetGrid.RuleSetGrid();\n  private readonly ruleSetDetails = new PreloadingComponents.RuleSetDetailsView.RuleSetDetailsView();\n\n  private shouldPrettyPrint = Common.Settings.Settings.instance().moduleSetting('auto-pretty-print-minified').get();\n\n  constructor(model: SDK.PreloadingModel.PreloadingModel) {\n    super({useShadowDom: true});\n    this.registerRequiredCSS(emptyWidgetStyles, preloadingViewStyles);\n\n    this.model = model;\n    SDK.TargetManager.TargetManager.instance().addScopeChangeListener(this.onScopeChange.bind(this));\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.PreloadingModel.PreloadingModel, SDK.PreloadingModel.Events.MODEL_UPDATED, this.render, this,\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.PreloadingModel.PreloadingModel, SDK.PreloadingModel.Events.WARNINGS_UPDATED,\n        this.warningsView.onWarningsUpdated, this.warningsView, {scoped: true});\n\n    // this (VBox)\n    //   +- warningsContainer\n    //        +- PreloadingWarningsView\n    //   +- hsplit\n    //        +- leftContainer\n    //             +- RuleSetGrid\n    //        +- rightContainer\n    //             +- RuleSetDetailsView\n    //\n    // - If an row of RuleSetGrid selected, RuleSetDetailsView shows details of it.\n    // - If not, RuleSetDetailsView hides.\n\n    this.warningsContainer = document.createElement('div');\n    this.warningsContainer.classList.add('flex-none');\n    this.contentElement.insertBefore(this.warningsContainer, this.contentElement.firstChild);\n    this.warningsView.show(this.warningsContainer);\n\n    this.ruleSetGrid.addEventListener('select', this.onRuleSetsGridCellFocused.bind(this));\n    const onPrettyPrintToggle = (): void => {\n      this.shouldPrettyPrint = !this.shouldPrettyPrint;\n      this.updateRuleSetDetails();\n    };\n\n    // clang-format off\n    render(\n        html`\n        <div class=\"empty-state\">\n          <span class=\"empty-state-header\">${i18nString(UIStrings.noRulesDetected)}</span>\n          <div class=\"empty-state-description\">\n            <span>${i18nString(UIStrings.rulesDescription)}</span>\n            ${UI.XLink.XLink.create(SPECULATION_EXPLANATION_URL, i18nString(UIStrings.learnMore), 'x-link', undefined, 'learn-more')}\n          </div>\n        </div>\n        <devtools-split-view sidebar-position=\"second\">\n          <div slot=\"main\">\n            ${this.ruleSetGrid}\n          </div>\n          <div slot=\"sidebar\" jslog=${VisualLogging.section('rule-set-details')}>\n            ${this.ruleSetDetails}\n          </div>\n        </devtools-split-view>\n        <div class=\"pretty-print-button\" style=\"border-top: 1px solid var(--sys-color-divider)\">\n        <devtools-button\n          .iconName=${'brackets'}\n          .toggledIconName=${'brackets'}\n          .toggled=${this.shouldPrettyPrint}\n          .toggleType=${Buttons.Button.ToggleType.PRIMARY}\n          .title=${i18nString(UIStrings.prettyPrint)}\n          .variant=${Buttons.Button.Variant.ICON_TOGGLE}\n          .size=${Buttons.Button.Size.REGULAR}\n          @click=${onPrettyPrintToggle}\n          jslog=${VisualLogging.action().track({click: true}).context('preloading-status-panel-pretty-print')}></devtools-button>\n        </div>`,\n        this.contentElement, {host: this});\n    // clang-format on\n    this.hsplit = this.contentElement.querySelector('devtools-split-view') as HTMLElement;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n\n    this.warningsView.wasShown();\n\n    this.render();\n  }\n\n  onScopeChange(): void {\n    const model = SDK.TargetManager.TargetManager.instance().scopeTarget()?.model(SDK.PreloadingModel.PreloadingModel);\n    assertNotNullOrUndefined(model);\n    this.model = model;\n    this.render();\n  }\n\n  revealRuleSet(revealInfo: PreloadingHelper.PreloadingForward.RuleSetView): void {\n    this.focusedRuleSetId = revealInfo.ruleSetId;\n    this.render();\n  }\n\n  private updateRuleSetDetails(): void {\n    const id = this.focusedRuleSetId;\n    const ruleSet = id === null ? null : this.model.getRuleSetById(id);\n    this.ruleSetDetails.shouldPrettyPrint = this.shouldPrettyPrint;\n    this.ruleSetDetails.data = ruleSet;\n\n    if (ruleSet === null) {\n      this.hsplit.setAttribute('sidebar-visibility', 'hidden');\n    } else {\n      this.hsplit.removeAttribute('sidebar-visibility');\n    }\n  }\n\n  render(): void {\n    // Update rule sets grid\n    const countsByRuleSetId = this.model.getPreloadCountsByRuleSetId();\n    const ruleSetRows = this.model.getAllRuleSets().map(({id, value}) => {\n      const countsByStatus = countsByRuleSetId.get(id) || new Map<SDK.PreloadingModel.PreloadingStatus, number>();\n      return {\n        ruleSet: value,\n        preloadsStatusSummary: PreloadingUIUtils.preloadsStatusSummary(countsByStatus),\n      };\n    });\n    this.ruleSetGrid.update({rows: ruleSetRows, pageURL: pageURL()});\n    this.contentElement.classList.toggle('empty', ruleSetRows.length === 0);\n    this.updateRuleSetDetails();\n  }\n\n  private onRuleSetsGridCellFocused(event: Event): void {\n    const focusedEvent = event as CustomEvent<Protocol.Preload.RuleSetId>;\n    this.focusedRuleSetId = focusedEvent.detail;\n    this.render();\n  }\n\n  getInfobarContainerForTest(): HTMLElement {\n    return this.warningsView.contentElement;\n  }\n\n  getRuleSetGridForTest(): PreloadingComponents.RuleSetGrid.RuleSetGrid {\n    return this.ruleSetGrid;\n  }\n\n  getRuleSetDetailsForTest(): PreloadingComponents.RuleSetDetailsView.RuleSetDetailsView {\n    return this.ruleSetDetails;\n  }\n}\n\nexport class PreloadingAttemptView extends UI.Widget.VBox {\n  private model: SDK.PreloadingModel.PreloadingModel;\n  // Note that we use id of (representative) preloading attempt while we show pipelines in grid.\n  // This is because `NOT_TRIGGERED` preloading attempts don't have pipeline id and we can use it.\n  private focusedPreloadingAttemptId: SDK.PreloadingModel.PreloadingAttemptId|null = null;\n\n  private readonly warningsContainer: HTMLDivElement;\n  private readonly warningsView = new PreloadingWarningsView();\n  private readonly preloadingGrid = new PreloadingComponents.PreloadingGrid.PreloadingGrid();\n  private readonly preloadingDetails =\n      new PreloadingComponents.PreloadingDetailsReportView.PreloadingDetailsReportView();\n  private readonly ruleSetSelector: PreloadingRuleSetSelector;\n\n  constructor(model: SDK.PreloadingModel.PreloadingModel) {\n    super({\n      jslog: `${VisualLogging.pane('preloading-speculations')}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(emptyWidgetStyles, preloadingViewStyles);\n\n    this.model = model;\n    SDK.TargetManager.TargetManager.instance().addScopeChangeListener(this.onScopeChange.bind(this));\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.PreloadingModel.PreloadingModel, SDK.PreloadingModel.Events.MODEL_UPDATED, this.render, this,\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.PreloadingModel.PreloadingModel, SDK.PreloadingModel.Events.WARNINGS_UPDATED,\n        this.warningsView.onWarningsUpdated, this.warningsView, {scoped: true});\n\n    // this (VBox)\n    //   +- warningsContainer\n    //        +- PreloadingWarningsView\n    //   +- VBox\n    //        +- toolbar (filtering)\n    //        +- hsplit\n    //             +- leftContainer\n    //                  +- PreloadingGrid\n    //             +- rightContainer\n    //                  +- PreloadingDetailsReportView\n    //\n    // - If an row of PreloadingGrid selected, PreloadingDetailsReportView shows details of it.\n    // - If not, PreloadingDetailsReportView shows some messages.\n\n    this.warningsContainer = document.createElement('div');\n    this.warningsContainer.classList.add('flex-none');\n    this.contentElement.insertBefore(this.warningsContainer, this.contentElement.firstChild);\n    this.warningsView.show(this.warningsContainer);\n\n    const vbox = new UI.Widget.VBox();\n\n    const toolbar = vbox.contentElement.createChild('devtools-toolbar', 'preloading-toolbar');\n    toolbar.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n    this.ruleSetSelector = new PreloadingRuleSetSelector(() => this.render());\n    toolbar.appendToolbarItem(this.ruleSetSelector.item());\n\n    this.preloadingGrid.addEventListener('select', this.onPreloadingGridCellFocused.bind(this));\n    render(\n        html`\n        <div class=\"empty-state\">\n          <span class=\"empty-state-header\">${i18nString(UIStrings.noPrefetchAttempts)}</span>\n          <div class=\"empty-state-description\">\n            <span>${i18nString(UIStrings.prefetchDescription)}</span>\n            ${\n            UI.XLink.XLink.create(\n                SPECULATION_EXPLANATION_URL, i18nString(UIStrings.learnMore), 'x-link', undefined, 'learn-more')}\n          </div>\n        </div>\n        <devtools-split-view sidebar-position=\"second\">\n          <div slot=\"main\" class=\"overflow-auto\" style=\"height: 100%\">\n            ${this.preloadingGrid}\n          </div>\n          <div slot=\"sidebar\" class=\"overflow-auto\" style=\"height: 100%\">\n            ${this.preloadingDetails}\n          </div>\n        </devtools-split-view>`,\n        vbox.contentElement, {host: this});\n\n    vbox.show(this.contentElement);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n\n    this.warningsView.wasShown();\n\n    this.render();\n  }\n\n  onScopeChange(): void {\n    const model = SDK.TargetManager.TargetManager.instance().scopeTarget()?.model(SDK.PreloadingModel.PreloadingModel);\n    assertNotNullOrUndefined(model);\n    this.model = model;\n    this.render();\n  }\n\n  setFilter(filter: PreloadingHelper.PreloadingForward.AttemptViewWithFilter): void {\n    let id: Protocol.Preload.RuleSetId|null = filter.ruleSetId;\n    if (id !== null && this.model.getRuleSetById(id) === undefined) {\n      id = null;\n    }\n\n    this.ruleSetSelector.select(id);\n  }\n\n  private updatePreloadingDetails(): void {\n    const id = this.focusedPreloadingAttemptId;\n    const preloadingAttempt = id === null ? null : this.model.getPreloadingAttemptById(id);\n    if (preloadingAttempt === null) {\n      this.preloadingDetails.data = null;\n    } else {\n      const pipeline = this.model.getPipeline(preloadingAttempt);\n      const ruleSets = preloadingAttempt.ruleSetIds.map(id => this.model.getRuleSetById(id)).filter(x => x !== null);\n      this.preloadingDetails.data = {\n        pipeline,\n        ruleSets,\n        pageURL: pageURL(),\n      };\n    }\n  }\n\n  render(): void {\n    // Update preloading grid\n    const filteringRuleSetId = this.ruleSetSelector.getSelected();\n    const rows = this.model.getRepresentativePreloadingAttempts(filteringRuleSetId).map(({id, value}) => {\n      const attempt = value;\n      const pipeline = this.model.getPipeline(attempt);\n      const ruleSets = attempt.ruleSetIds.flatMap(id => {\n        const ruleSet = this.model.getRuleSetById(id);\n        return ruleSet === null ? [] : [ruleSet];\n      });\n      return {\n        id,\n        pipeline,\n        ruleSets,\n      };\n    });\n    this.preloadingGrid.update({rows, pageURL: pageURL()});\n    this.contentElement.classList.toggle('empty', rows.length === 0);\n\n    this.updatePreloadingDetails();\n  }\n\n  private onPreloadingGridCellFocused(event: Event): void {\n    const focusedEvent = event as CustomEvent<SDK.PreloadingModel.PreloadingAttemptId>;\n    this.focusedPreloadingAttemptId = focusedEvent.detail;\n    this.render();\n  }\n\n  getRuleSetSelectorToolbarItemForTest(): UI.Toolbar.ToolbarItem {\n    return this.ruleSetSelector.item();\n  }\n\n  getPreloadingGridForTest(): PreloadingComponents.PreloadingGrid.PreloadingGrid {\n    return this.preloadingGrid;\n  }\n\n  getPreloadingDetailsForTest(): PreloadingComponents.PreloadingDetailsReportView.PreloadingDetailsReportView {\n    return this.preloadingDetails;\n  }\n\n  selectRuleSetOnFilterForTest(id: Protocol.Preload.RuleSetId|null): void {\n    this.ruleSetSelector.select(id);\n  }\n}\n\nexport class PreloadingSummaryView extends UI.Widget.VBox {\n  private model: SDK.PreloadingModel.PreloadingModel;\n\n  private readonly warningsContainer: HTMLDivElement;\n  private readonly warningsView = new PreloadingWarningsView();\n  private readonly usedPreloading = new PreloadingComponents.UsedPreloadingView.UsedPreloadingView();\n\n  constructor(model: SDK.PreloadingModel.PreloadingModel) {\n    super({\n      jslog: `${VisualLogging.pane('speculative-loads')}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(emptyWidgetStyles, preloadingViewStyles);\n\n    this.model = model;\n    SDK.TargetManager.TargetManager.instance().addScopeChangeListener(this.onScopeChange.bind(this));\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.PreloadingModel.PreloadingModel, SDK.PreloadingModel.Events.MODEL_UPDATED, this.render, this,\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.PreloadingModel.PreloadingModel, SDK.PreloadingModel.Events.WARNINGS_UPDATED,\n        this.warningsView.onWarningsUpdated, this.warningsView, {scoped: true});\n\n    this.warningsContainer = document.createElement('div');\n    this.warningsContainer.classList.add('flex-none');\n    this.contentElement.insertBefore(this.warningsContainer, this.contentElement.firstChild);\n    this.warningsView.show(this.warningsContainer);\n\n    const usedPreloadingContainer = new UI.Widget.VBox();\n    usedPreloadingContainer.contentElement.appendChild(this.usedPreloading);\n    usedPreloadingContainer.show(this.contentElement);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n\n    this.warningsView.wasShown();\n\n    this.render();\n  }\n\n  onScopeChange(): void {\n    const model = SDK.TargetManager.TargetManager.instance().scopeTarget()?.model(SDK.PreloadingModel.PreloadingModel);\n    assertNotNullOrUndefined(model);\n    this.model = model;\n    this.render();\n  }\n\n  render(): void {\n    this.usedPreloading.data = {\n      pageURL: SDK.TargetManager.TargetManager.instance().scopeTarget()?.inspectedURL() ||\n          ('' as Platform.DevToolsPath.UrlString),\n      previousAttempts: this.model.getRepresentativePreloadingAttemptsOfPreviousPage().map(({value}) => value),\n      currentAttempts: this.model.getRepresentativePreloadingAttempts(null).map(({value}) => value),\n    };\n  }\n\n  getUsedPreloadingForTest(): PreloadingComponents.UsedPreloadingView.UsedPreloadingView {\n    return this.usedPreloading;\n  }\n}\n\nclass PreloadingRuleSetSelector implements\n    UI.Toolbar.Provider, UI.SoftDropDown.Delegate<Protocol.Preload.RuleSetId|typeof AllRuleSetRootId> {\n  private model: SDK.PreloadingModel.PreloadingModel;\n  private readonly onSelectionChanged: () => void = () => {};\n\n  private readonly toolbarItem: UI.Toolbar.ToolbarItem;\n\n  private readonly listModel: UI.ListModel.ListModel<Protocol.Preload.RuleSetId|typeof AllRuleSetRootId>;\n  private readonly dropDown: UI.SoftDropDown.SoftDropDown<Protocol.Preload.RuleSetId|typeof AllRuleSetRootId>;\n\n  constructor(onSelectionChanged: () => void) {\n    const model = SDK.TargetManager.TargetManager.instance().scopeTarget()?.model(SDK.PreloadingModel.PreloadingModel);\n    assertNotNullOrUndefined(model);\n    this.model = model;\n    SDK.TargetManager.TargetManager.instance().addScopeChangeListener(this.onScopeChange.bind(this));\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.PreloadingModel.PreloadingModel, SDK.PreloadingModel.Events.MODEL_UPDATED, this.onModelUpdated, this,\n        {scoped: true});\n\n    this.listModel = new UI.ListModel.ListModel();\n\n    this.dropDown = new UI.SoftDropDown.SoftDropDown(this.listModel, this);\n    this.dropDown.setRowHeight(36);\n    this.dropDown.setPlaceholderText(i18nString(UIStrings.filterAllPreloads));\n\n    this.toolbarItem = new UI.Toolbar.ToolbarItem(this.dropDown.element);\n    this.toolbarItem.setTitle(i18nString(UIStrings.filterFilterByRuleSet));\n    this.toolbarItem.element.classList.add('toolbar-has-dropdown');\n    this.toolbarItem.element.setAttribute(\n        'jslog', `${VisualLogging.action('filter-by-rule-set').track({click: true})}`);\n\n    // Initializes `listModel` and `dropDown` using data of the model.\n    this.onModelUpdated();\n\n    // Prevents emitting onSelectionChanged on the first call of `this.onModelUpdated()` for initialization.\n    this.onSelectionChanged = onSelectionChanged;\n  }\n\n  private onScopeChange(): void {\n    const model = SDK.TargetManager.TargetManager.instance().scopeTarget()?.model(SDK.PreloadingModel.PreloadingModel);\n    assertNotNullOrUndefined(model);\n    this.model = model;\n    this.onModelUpdated();\n  }\n\n  private onModelUpdated(): void {\n    const ids = this.model.getAllRuleSets().map(({id}) => id);\n    const items = [AllRuleSetRootId, ...ids] as [typeof AllRuleSetRootId, ...Protocol.Preload.RuleSetId[]];\n    const selected = this.dropDown.getSelectedItem();\n    // Use `AllRuleSetRootId` by default. For example, `selected` is null or has gone.\n    const newSelected = (selected === null || !items.includes(selected)) ? AllRuleSetRootId : selected;\n    this.listModel.replaceAll(items);\n    this.dropDown.selectItem(newSelected);\n    this.updateWidth(items);\n  }\n\n  // Updates the width for the DropDown element.\n  private updateWidth(items: Array<Protocol.Preload.RuleSetId|typeof AllRuleSetRootId>): void {\n    // Width set by `UI.SoftDropDown`.\n    const DEFAULT_WIDTH = 315;\n    const urlLengths = items.map(x => this.titleFor(x).length);\n    const maxLength = Math.max(...urlLengths);\n    const width = Math.min(maxLength * 6 + 16, DEFAULT_WIDTH);\n    this.dropDown.setWidth(width);\n  }\n\n  // AllRuleSetRootId is used within the selector to indicate the root item. When interacting with PreloadingModel,\n  // it should be translated to null.\n  private translateItemIdToRuleSetId(id: Protocol.Preload.RuleSetId|typeof AllRuleSetRootId): Protocol.Preload.RuleSetId\n      |null {\n    if (id === AllRuleSetRootId) {\n      return null;\n    }\n    return id as Protocol.Preload.RuleSetId;\n  }\n\n  getSelected(): Protocol.Preload.RuleSetId|null {\n    const selectItem = this.dropDown.getSelectedItem();\n    if (selectItem === null) {\n      return null;\n    }\n    return this.translateItemIdToRuleSetId(selectItem);\n  }\n\n  select(id: Protocol.Preload.RuleSetId|null): void {\n    this.dropDown.selectItem(id);\n  }\n\n  // Method for UI.Toolbar.Provider\n  item(): UI.Toolbar.ToolbarItem {\n    return this.toolbarItem;\n  }\n\n  // Method for UI.SoftDropDown.Delegate<Protocol.Preload.RuleSetId|typeof AllRuleSetRootId>\n  titleFor(id: Protocol.Preload.RuleSetId|typeof AllRuleSetRootId): string {\n    const convertedId = this.translateItemIdToRuleSetId(id);\n    if (convertedId === null) {\n      return i18nString(UIStrings.filterAllPreloads);\n    }\n    const ruleSet = this.model.getRuleSetById(convertedId);\n    if (ruleSet === null) {\n      return i18n.i18n.lockedString('Internal error');\n    }\n\n    return ruleSetTagOrLocationShort(ruleSet, pageURL());\n  }\n\n  subtitleFor(id: Protocol.Preload.RuleSetId|typeof AllRuleSetRootId): string {\n    const convertedId = this.translateItemIdToRuleSetId(id);\n    const countsByStatus = this.model.getPreloadCountsByRuleSetId().get(convertedId) ||\n        new Map<SDK.PreloadingModel.PreloadingStatus, number>();\n    return PreloadingUIUtils.preloadsStatusSummary(countsByStatus) || `(${i18nString(UIStrings.noRuleSets)})`;\n  }\n\n  // Method for UI.SoftDropDown.Delegate<Protocol.Preload.RuleSetId|typeof AllRuleSetRootId>\n  createElementForItem(id: Protocol.Preload.RuleSetId|typeof AllRuleSetRootId): Element {\n    const element = document.createElement('div');\n    const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(element, {cssFile: preloadingViewDropDownStyles});\n    const title = shadowRoot.createChild('div', 'title');\n    UI.UIUtils.createTextChild(title, Platform.StringUtilities.trimEndWithMaxLength(this.titleFor(id), 100));\n    const subTitle = shadowRoot.createChild('div', 'subtitle');\n    UI.UIUtils.createTextChild(subTitle, this.subtitleFor(id));\n    return element;\n  }\n\n  // Method for UI.SoftDropDown.Delegate<Protocol.Preload.RuleSetId|typeof AllRuleSetRootId>\n  isItemSelectable(_id: Protocol.Preload.RuleSetId|typeof AllRuleSetRootId): boolean {\n    return true;\n  }\n\n  // Method for UI.SoftDropDown.Delegate<Protocol.Preload.RuleSetId|typeof AllRuleSetRootId>\n  itemSelected(_id: Protocol.Preload.RuleSetId|typeof AllRuleSetRootId): void {\n    this.onSelectionChanged();\n  }\n\n  // Method for UI.SoftDropDown.Delegate<Protocol.Preload.RuleSetId|typeof AllRuleSetRootId>\n  highlightedItemChanged(\n      _from: Protocol.Preload.RuleSetId|typeof AllRuleSetRootId,\n      _to: Protocol.Preload.RuleSetId|typeof AllRuleSetRootId, _fromElement: Element|null,\n      _toElement: Element|null): void {\n  }\n}\n\nexport class PreloadingWarningsView extends UI.Widget.VBox {\n  private readonly infobar = new PreloadingComponents.PreloadingDisabledInfobar.PreloadingDisabledInfobar();\n\n  constructor() {\n    super();\n    this.registerRequiredCSS(emptyWidgetStyles);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.contentElement.append(this.infobar);\n  }\n\n  onWarningsUpdated(args: Common.EventTarget.EventTargetEvent<Protocol.Preload.PreloadEnabledStateUpdatedEvent>): void {\n    this.infobar.data = args.data;\n  }\n}\n", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Protocol from '../../../../generated/protocol.js';\nimport * as Bindings from '../../../../models/bindings/bindings.js';\n\nconst UIStrings = {\n  /**\n   * @description  Description text for Prefetch status PrefetchFailedIneligibleRedirect.\n   */\n  PrefetchFailedIneligibleRedirect: 'The prefetch was redirected, but the redirect URL is not eligible for prefetch.',\n  /**\n   * @description  Description text for Prefetch status PrefetchFailedInvalidRedirect.\n   */\n  PrefetchFailedInvalidRedirect: 'The prefetch was redirected, but there was a problem with the redirect.',\n  /**\n   * @description  Description text for Prefetch status PrefetchFailedMIMENotSupported.\n   */\n  PrefetchFailedMIMENotSupported: 'The prefetch failed because the response\\'s Content-Type header was not supported.',\n  /**\n   * @description  Description text for Prefetch status PrefetchFailedNetError.\n   */\n  PrefetchFailedNetError: 'The prefetch failed because of a network error.',\n  /**\n   * @description  Description text for Prefetch status PrefetchFailedNon2XX.\n   */\n  PrefetchFailedNon2XX: 'The prefetch failed because of a non-2xx HTTP response status code.',\n  /**\n   * @description  Description text for Prefetch status PrefetchIneligibleRetryAfter.\n   */\n  PrefetchIneligibleRetryAfter:\n      'A previous prefetch to the origin got a HTTP 503 response with an Retry-After header that has not elapsed yet.',\n  /**\n   * @description  Description text for Prefetch status PrefetchIsPrivacyDecoy.\n   */\n  PrefetchIsPrivacyDecoy:\n      'The URL was not eligible to be prefetched because there was a registered service worker or cross-site cookies for that origin, but the prefetch was put on the network anyways and not used, to disguise that the user had some kind of previous relationship with the origin.',\n  /**\n   * @description  Description text for Prefetch status PrefetchIsStale.\n   */\n  PrefetchIsStale: 'Too much time elapsed between the prefetch and usage, so the prefetch was discarded.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleBrowserContextOffTheRecord.\n   */\n  PrefetchNotEligibleBrowserContextOffTheRecord:\n      'The prefetch was not performed because the browser is in Incognito or Guest mode.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleDataSaverEnabled.\n   */\n  PrefetchNotEligibleDataSaverEnabled:\n      'The prefetch was not performed because the operating system is in Data Saver mode.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleExistingProxy.\n   */\n  PrefetchNotEligibleExistingProxy:\n      'The URL is not eligible to be prefetched, because in the default network context it is configured to use a proxy server.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleHostIsNonUnique.\n   */\n  PrefetchNotEligibleHostIsNonUnique:\n      'The URL was not eligible to be prefetched because its host was not unique (e.g., a non publicly routable IP address or a hostname which is not registry-controlled), but the prefetch was required to be proxied.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleNonDefaultStoragePartition.\n   */\n  PrefetchNotEligibleNonDefaultStoragePartition:\n      'The URL was not eligible to be prefetched because it uses a non-default storage partition.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy.\n   */\n  PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy:\n      'The URL was not eligible to be prefetched because the default network context cannot be configured to use the prefetch proxy for a same-site cross-origin prefetch request.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleSchemeIsNotHttps.\n   */\n  PrefetchNotEligibleSchemeIsNotHttps: 'The URL was not eligible to be prefetched because its scheme was not https:.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleUserHasCookies.\n   */\n  PrefetchNotEligibleUserHasCookies:\n      'The URL was not eligible to be prefetched because it was cross-site, but the user had cookies for that origin.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleUserHasServiceWorker.\n   */\n  PrefetchNotEligibleUserHasServiceWorker:\n      'The URL was not eligible to be prefetched because there was a registered service worker for that origin, which is currently not supported.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotUsedCookiesChanged.\n   */\n  PrefetchNotUsedCookiesChanged:\n      'The prefetch was not used because it was a cross-site prefetch, and cookies were added for that URL while the prefetch was ongoing, so the prefetched response is now out-of-date.',\n  /**\n   * @description  Description text for Prefetch status PrefetchProxyNotAvailable.\n   */\n  PrefetchProxyNotAvailable:\n      'A network error was encountered when trying to set up a connection to the prefetching proxy.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotUsedProbeFailed.\n   */\n  PrefetchNotUsedProbeFailed: 'The prefetch was blocked by your Internet Service Provider or network administrator.',\n  /**\n   * @description  Description text for Prefetch status PrefetchEvictedForNewerPrefetch.\n   */\n  PrefetchEvictedForNewerPrefetch:\n      'The prefetch was discarded because the initiating page has too many prefetches ongoing, and this was one of the oldest.',\n  /**\n   * @description Description text for Prefetch status PrefetchEvictedAfterCandidateRemoved.\n   */\n  PrefetchEvictedAfterCandidateRemoved:\n      'The prefetch was discarded because no speculation rule in the initating page triggers a prefetch for this URL anymore.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligibleBatterySaverEnabled.\n   */\n  PrefetchNotEligibleBatterySaverEnabled:\n      'The prefetch was not performed because the Battery Saver setting was enabled.',\n  /**\n   * @description  Description text for Prefetch status PrefetchNotEligiblePreloadingDisabled.\n   */\n  PrefetchNotEligiblePreloadingDisabled: 'The prefetch was not performed because speculative loading was disabled.',\n  /**\n   * @description  Description text for Prefetch status PrefetchEvictedAfterBrowsingDataRemoved.\n   */\n  PrefetchEvictedAfterBrowsingDataRemoved: 'The prefetch was discarded because browsing data was removed.',\n\n  /**\n   *  Description text for PrerenderFinalStatus::kLowEndDevice.\n   */\n  prerenderFinalStatusLowEndDevice:\n      'The prerender was not performed because this device does not have enough total system memory to support prerendering.',\n  /**\n   *  Description text for PrerenderFinalStatus::kInvalidSchemeRedirect.\n   */\n  prerenderFinalStatusInvalidSchemeRedirect:\n      'The prerendering navigation failed because it redirected to a URL whose scheme was not http: or https:.',\n  /**\n   *  Description text for PrerenderFinalStatus::kInvalidSchemeNavigation.\n   */\n  prerenderFinalStatusInvalidSchemeNavigation:\n      'The URL was not eligible to be prerendered because its scheme was not http: or https:.',\n  /**\n   *  Description text for PrerenderFinalStatus::kNavigationRequestBlockedByCsp.\n   */\n  prerenderFinalStatusNavigationRequestBlockedByCsp:\n      'The prerendering navigation was blocked by a Content Security Policy.',\n  /**\n   * @description Description text for PrerenderFinalStatus::kMojoBinderPolicy.\n   * @example {device.mojom.GamepadMonitor} PH1\n   */\n  prerenderFinalStatusMojoBinderPolicy:\n      'The prerendered page used a forbidden JavaScript API that is currently not supported. (Internal Mojo interface: {PH1})',\n  /**\n   *  Description text for PrerenderFinalStatus::kRendererProcessCrashed.\n   */\n  prerenderFinalStatusRendererProcessCrashed: 'The prerendered page crashed.',\n  /**\n   *  Description text for PrerenderFinalStatus::kRendererProcessKilled.\n   */\n  prerenderFinalStatusRendererProcessKilled: 'The prerendered page was killed.',\n  /**\n   *  Description text for PrerenderFinalStatus::kDownload.\n   */\n  prerenderFinalStatusDownload:\n      'The prerendered page attempted to initiate a download, which is currently not supported.',\n  /**\n   *  Description text for PrerenderFinalStatus::kNavigationBadHttpStatus.\n   */\n  prerenderFinalStatusNavigationBadHttpStatus:\n      'The prerendering navigation failed because of a non-2xx HTTP response status code.',\n  /**\n   *  Description text for PrerenderFinalStatus::kClientCertRequested.\n   */\n  prerenderFinalStatusClientCertRequested: 'The prerendering navigation required a HTTP client certificate.',\n  /**\n   *  Description text for PrerenderFinalStatus::kNavigationRequestNetworkError.\n   */\n  prerenderFinalStatusNavigationRequestNetworkError: 'The prerendering navigation encountered a network error.',\n  /**\n   *  Description text for PrerenderFinalStatus::kSslCertificateError.\n   */\n  prerenderFinalStatusSslCertificateError: 'The prerendering navigation failed because of an invalid SSL certificate.',\n  /**\n   *  Description text for PrerenderFinalStatus::kLoginAuthRequested.\n   */\n  prerenderFinalStatusLoginAuthRequested:\n      'The prerendering navigation required HTTP authentication, which is currently not supported.',\n  /**\n   *  Description text for PrerenderFinalStatus::kUaChangeRequiresReload.\n   */\n  prerenderFinalStatusUaChangeRequiresReload: 'Changing User Agent occurred in prerendering navigation.',\n  /**\n   *  Description text for PrerenderFinalStatus::kBlockedByClient.\n   */\n  prerenderFinalStatusBlockedByClient: 'Some resource load was blocked.',\n  /**\n   *  Description text for PrerenderFinalStatus::kAudioOutputDeviceRequested.\n   */\n  prerenderFinalStatusAudioOutputDeviceRequested:\n      'The prerendered page requested audio output, which is currently not supported.',\n  /**\n   *  Description text for PrerenderFinalStatus::kMixedContent.\n   */\n  prerenderFinalStatusMixedContent: 'The prerendered page contained mixed content.',\n  /**\n   *  Description text for PrerenderFinalStatus::kTriggerBackgrounded.\n   */\n  prerenderFinalStatusTriggerBackgrounded:\n      'The initiating page was backgrounded, so the prerendered page was discarded.',\n  /**\n   *  Description text for PrerenderFinalStatus::kMemoryLimitExceeded.\n   */\n  prerenderFinalStatusMemoryLimitExceeded:\n      'The prerender was not performed because the browser exceeded the prerendering memory limit.',\n  /**\n   *  Description text for PrerenderFinalStatus::kDataSaverEnabled.\n   */\n  prerenderFinalStatusDataSaverEnabled:\n      'The prerender was not performed because the user requested that the browser use less data.',\n  /**\n   *  Description text for PrerenderFinalStatus::TriggerUrlHasEffectiveUrl.\n   */\n  prerenderFinalStatusHasEffectiveUrl:\n      'The initiating page cannot perform prerendering, because it has an effective URL that is different from its normal URL. (For example, the New Tab Page, or hosted apps.)',\n  /**\n   *  Description text for PrerenderFinalStatus::kTimeoutBackgrounded.\n   */\n  prerenderFinalStatusTimeoutBackgrounded:\n      'The initiating page was backgrounded for a long time, so the prerendered page was discarded.',\n  /**\n   *  Description text for PrerenderFinalStatus::kCrossSiteRedirectInInitialNavigation.\n   */\n  prerenderFinalStatusCrossSiteRedirectInInitialNavigation:\n      'The prerendering navigation failed because the prerendered URL redirected to a cross-site URL.',\n  /**\n   *  Description text for PrerenderFinalStatus::kCrossSiteNavigationInInitialNavigation.\n   */\n  prerenderFinalStatusCrossSiteNavigationInInitialNavigation:\n      'The prerendering navigation failed because it targeted a cross-site URL.',\n  /**\n   *  Description text for PrerenderFinalStatus::kSameSiteCrossOriginRedirectNotOptInInInitialNavigation.\n   */\n  prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInInitialNavigation:\n      'The prerendering navigation failed because the prerendered URL redirected to a cross-origin same-site URL, but the destination response did not include the appropriate Supports-Loading-Mode header.',\n  /**\n   *  Description text for PrerenderFinalStatus::kSameSiteCrossOriginNavigationNotOptInInInitialNavigation.\n   */\n  prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInInitialNavigation:\n      'The prerendering navigation failed because it was to a cross-origin same-site URL, but the destination response did not include the appropriate Supports-Loading-Mode header.',\n  /**\n   *  Description text for PrerenderFinalStatus::kActivationNavigationParameterMismatch.\n   */\n  prerenderFinalStatusActivationNavigationParameterMismatch:\n      'The prerender was not used because during activation time, different navigation parameters (e.g., HTTP headers) were calculated than during the original prerendering navigation request.',\n  /**\n   *  Description text for PrerenderFinalStatus::kPrimaryMainFrameRendererProcessCrashed.\n   */\n  prerenderFinalStatusPrimaryMainFrameRendererProcessCrashed: 'The initiating page crashed.',\n  /**\n   *  Description text for PrerenderFinalStatus::kPrimaryMainFrameRendererProcessKilled.\n   */\n  prerenderFinalStatusPrimaryMainFrameRendererProcessKilled: 'The initiating page was killed.',\n  /**\n   *  Description text for PrerenderFinalStatus::kActivationFramePolicyNotCompatible.\n   */\n  prerenderFinalStatusActivationFramePolicyNotCompatible:\n      'The prerender was not used because the sandboxing flags or permissions policy of the initiating page was not compatible with those of the prerendering page.',\n  /**\n   *  Description text for PrerenderFinalStatus::kPreloadingDisabled.\n   */\n  prerenderFinalStatusPreloadingDisabled:\n      'The prerender was not performed because the user disabled preloading in their browser settings.',\n  /**\n   *  Description text for PrerenderFinalStatus::kBatterySaverEnabled.\n   */\n  prerenderFinalStatusBatterySaverEnabled:\n      'The prerender was not performed because the user requested that the browser use less battery.',\n  /**\n   *  Description text for PrerenderFinalStatus::kActivatedDuringMainFrameNavigation.\n   */\n  prerenderFinalStatusActivatedDuringMainFrameNavigation:\n      'Prerendered page activated during initiating page\\'s main frame navigation.',\n  /**\n   *  Description text for PrerenderFinalStatus::kCrossSiteRedirectInMainFrameNavigation.\n   */\n  prerenderFinalStatusCrossSiteRedirectInMainFrameNavigation:\n      'The prerendered page navigated to a URL which redirected to a cross-site URL.',\n  /**\n   *  Description text for PrerenderFinalStatus::kCrossSiteNavigationInMainFrameNavigation.\n   */\n  prerenderFinalStatusCrossSiteNavigationInMainFrameNavigation: 'The prerendered page navigated to a cross-site URL.',\n  /**\n   *  Description text for PrerenderFinalStatus::kSameSiteCrossOriginRedirectNotOptInInMainFrameNavigation.\n   */\n  prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInMainFrameNavigation:\n      'The prerendered page navigated to a URL which redirected to a cross-origin same-site URL, but the destination response did not include the appropriate Supports-Loading-Mode header.',\n  /**\n   *  Description text for PrerenderFinalStatus::kSameSiteCrossOriginNavigationNotOptInInMainFrameNavigation.\n   */\n  prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInMainFrameNavigation:\n      'The prerendered page navigated to a cross-origin same-site URL, but the destination response did not include the appropriate Supports-Loading-Mode header.',\n  /**\n   *  Description text for PrerenderFinalStatus::kMemoryPressureOnTrigger.\n   */\n  prerenderFinalStatusMemoryPressureOnTrigger:\n      'The prerender was not performed because the browser was under critical memory pressure.',\n  /**\n   *  Description text for PrerenderFinalStatus::kMemoryPressureAfterTriggered.\n   */\n  prerenderFinalStatusMemoryPressureAfterTriggered:\n      'The prerendered page was unloaded because the browser came under critical memory pressure.',\n  /**\n   *  Description text for PrerenderFinalStatus::kPrerenderingDisabledByDevTools.\n   */\n  prerenderFinalStatusPrerenderingDisabledByDevTools:\n      'The prerender was not performed because DevTools has been used to disable prerendering.',\n  /**\n   * Description text for PrerenderFinalStatus::kSpeculationRuleRemoved.\n   */\n  prerenderFinalStatusSpeculationRuleRemoved:\n      'The prerendered page was unloaded because the initiating page removed the corresponding prerender rule from <script type=\"speculationrules\">.',\n  /**\n   * Description text for PrerenderFinalStatus::kActivatedWithAuxiliaryBrowsingContexts.\n   */\n  prerenderFinalStatusActivatedWithAuxiliaryBrowsingContexts:\n      'The prerender was not used because during activation time, there were other windows with an active opener reference to the initiating page, which is currently not supported.',\n  /**\n   * Description text for PrerenderFinalStatus::kMaxNumOfRunningEagerPrerendersExceeded.\n   */\n  prerenderFinalStatusMaxNumOfRunningEagerPrerendersExceeded:\n      'The prerender whose eagerness is \"eager\" was not performed because the initiating page already has too many prerenders ongoing. Remove other speculation rules with \"eager\" to enable further prerendering.',\n  /**\n   * Description text for PrerenderFinalStatus::kMaxNumOfRunningEmbedderPrerendersExceeded.\n   */\n  prerenderFinalStatusMaxNumOfRunningEmbedderPrerendersExceeded:\n      'The browser-triggered prerender was not performed because the initiating page already has too many prerenders ongoing.',\n  /**\n   * Description text for PrerenderFinalStatus::kMaxNumOfRunningNonEagerPrerendersExceeded.\n   */\n  prerenderFinalStatusMaxNumOfRunningNonEagerPrerendersExceeded:\n      'The old non-eager prerender (with a \"moderate\" or \"conservative\" eagerness and triggered by hovering or clicking links) was automatically canceled due to starting a new non-eager prerender. It can be retriggered by interacting with the link again.',\n  /**\n   * Description text for PrenderFinalStatus::kPrerenderingUrlHasEffectiveUrl.\n   */\n  prerenderFinalStatusPrerenderingUrlHasEffectiveUrl:\n      'The prerendering navigation failed because it has an effective URL that is different from its normal URL. (For example, the New Tab Page, or hosted apps.)',\n  /**\n   * Description text for PrenderFinalStatus::kRedirectedPrerenderingUrlHasEffectiveUrl.\n   */\n  prerenderFinalStatusRedirectedPrerenderingUrlHasEffectiveUrl:\n      'The prerendering navigation failed because it redirected to an effective URL that is different from its normal URL. (For example, the New Tab Page, or hosted apps.)',\n  /**\n   * Description text for PrenderFinalStatus::kActivationUrlHasEffectiveUrl.\n   */\n  prerenderFinalStatusActivationUrlHasEffectiveUrl:\n      'The prerender was not used because during activation time, navigation has an effective URL that is different from its normal URL. (For example, the New Tab Page, or hosted apps.)',\n  /**\n   * Description text for PrenderFinalStatus::kJavaScriptInterfaceAdded.\n   */\n  prerenderFinalStatusJavaScriptInterfaceAdded:\n      'The prerendered page was unloaded because a new JavaScript interface has been injected by WebView.addJavascriptInterface().',\n  /**\n   * Description text for PrenderFinalStatus::kJavaScriptInterfaceRemoved.\n   */\n  prerenderFinalStatusJavaScriptInterfaceRemoved:\n      'The prerendered page was unloaded because a JavaScript interface has been removed by WebView.removeJavascriptInterface().',\n  /**\n   * Description text for PrenderFinalStatus::kAllPrerenderingCanceled.\n   */\n  prerenderFinalStatusAllPrerenderingCanceled:\n      'All prerendered pages were unloaded by the browser for some reason (For example, WebViewCompat.addWebMessageListener() was called during prerendering.)',\n  /**\n   * Description text for PrenderFinalStatus::kWindowClosed.\n   */\n  prerenderFinalStatusWindowClosed: 'The prerendered page was unloaded because it called window.close().',\n  /**\n   * Description text for PrenderFinalStatus::kBrowsingDataRemoved.\n   */\n  prerenderFinalStatusBrowsingDataRemoved: 'The prerendered page was unloaded because browsing data was removed.',\n\n  /**\n   * @description Text in grid and details: Preloading attempt is not yet triggered.\n   */\n  statusNotTriggered: 'Not triggered',\n  /**\n   * @description Text in grid and details: Preloading attempt is eligible but pending.\n   */\n  statusPending: 'Pending',\n  /**\n   * @description Text in grid and details: Preloading is running.\n   */\n  statusRunning: 'Running',\n  /**\n   * @description Text in grid and details: Preloading finished and the result is ready for the next navigation.\n   */\n  statusReady: 'Ready',\n  /**\n   * @description Text in grid and details: Ready, then used.\n   */\n  statusSuccess: 'Success',\n  /**\n   * @description Text in grid and details: Preloading failed.\n   */\n  statusFailure: 'Failure',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/components/PreloadingString.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport const PrefetchReasonDescription: Record<string, {name: () => Platform.UIString.LocalizedString}> = {\n  PrefetchFailedIneligibleRedirect: {name: i18nLazyString(UIStrings.PrefetchFailedIneligibleRedirect)},\n  PrefetchFailedInvalidRedirect: {name: i18nLazyString(UIStrings.PrefetchFailedInvalidRedirect)},\n  PrefetchFailedMIMENotSupported: {name: i18nLazyString(UIStrings.PrefetchFailedMIMENotSupported)},\n  PrefetchFailedNetError: {name: i18nLazyString(UIStrings.PrefetchFailedNetError)},\n  PrefetchFailedNon2XX: {name: i18nLazyString(UIStrings.PrefetchFailedNon2XX)},\n  PrefetchIneligibleRetryAfter: {name: i18nLazyString(UIStrings.PrefetchIneligibleRetryAfter)},\n  PrefetchIsPrivacyDecoy: {name: i18nLazyString(UIStrings.PrefetchIsPrivacyDecoy)},\n  PrefetchIsStale: {name: i18nLazyString(UIStrings.PrefetchIsStale)},\n  PrefetchNotEligibleBrowserContextOffTheRecord:\n      {name: i18nLazyString(UIStrings.PrefetchNotEligibleBrowserContextOffTheRecord)},\n  PrefetchNotEligibleDataSaverEnabled: {name: i18nLazyString(UIStrings.PrefetchNotEligibleDataSaverEnabled)},\n  PrefetchNotEligibleExistingProxy: {name: i18nLazyString(UIStrings.PrefetchNotEligibleExistingProxy)},\n  PrefetchNotEligibleHostIsNonUnique: {name: i18nLazyString(UIStrings.PrefetchNotEligibleHostIsNonUnique)},\n  PrefetchNotEligibleNonDefaultStoragePartition:\n      {name: i18nLazyString(UIStrings.PrefetchNotEligibleNonDefaultStoragePartition)},\n  PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy:\n      {name: i18nLazyString(UIStrings.PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy)},\n  PrefetchNotEligibleSchemeIsNotHttps: {name: i18nLazyString(UIStrings.PrefetchNotEligibleSchemeIsNotHttps)},\n  PrefetchNotEligibleUserHasCookies: {name: i18nLazyString(UIStrings.PrefetchNotEligibleUserHasCookies)},\n  PrefetchNotEligibleUserHasServiceWorker: {name: i18nLazyString(UIStrings.PrefetchNotEligibleUserHasServiceWorker)},\n  PrefetchNotUsedCookiesChanged: {name: i18nLazyString(UIStrings.PrefetchNotUsedCookiesChanged)},\n  PrefetchProxyNotAvailable: {name: i18nLazyString(UIStrings.PrefetchProxyNotAvailable)},\n  PrefetchNotUsedProbeFailed: {name: i18nLazyString(UIStrings.PrefetchNotUsedProbeFailed)},\n  PrefetchEvictedForNewerPrefetch: {name: i18nLazyString(UIStrings.PrefetchEvictedForNewerPrefetch)},\n  PrefetchEvictedAfterCandidateRemoved: {name: i18nLazyString(UIStrings.PrefetchEvictedAfterCandidateRemoved)},\n  PrefetchNotEligibleBatterySaverEnabled: {name: i18nLazyString(UIStrings.PrefetchNotEligibleBatterySaverEnabled)},\n  PrefetchNotEligiblePreloadingDisabled: {name: i18nLazyString(UIStrings.PrefetchNotEligiblePreloadingDisabled)},\n  PrefetchNotEligibleUserHasServiceWorkerNoFetchHandler: {name: () => i18n.i18n.lockedString('Unknown')},\n  PrefetchNotEligibleRedirectFromServiceWorker: {name: () => i18n.i18n.lockedString('Unknown')},\n  PrefetchNotEligibleRedirectToServiceWorker: {name: () => i18n.i18n.lockedString('Unknown')},\n  PrefetchEvictedAfterBrowsingDataRemoved: {name: i18nLazyString(UIStrings.PrefetchEvictedAfterBrowsingDataRemoved)},\n};\n\n// Decoding PrefetchFinalStatus prefetchAttempt to failure description.\nexport function prefetchFailureReason({prefetchStatus}: SDK.PreloadingModel.PrefetchAttempt): string|null {\n  // If you face an error on rolling CDP changes, see\n  // https://docs.google.com/document/d/1PnrfowsZMt62PX1EvvTp2Nqs3ji1zrklrAEe1JYbkTk\n  switch (prefetchStatus) {\n    case null:\n      return null;\n    // PrefetchNotStarted is mapped to Pending.\n    case Protocol.Preload.PrefetchStatus.PrefetchNotStarted:\n      return null;\n    // PrefetchNotFinishedInTime is mapped to Running.\n    case Protocol.Preload.PrefetchStatus.PrefetchNotFinishedInTime:\n      return null;\n    // PrefetchResponseUsed is mapped to Success.\n    case Protocol.Preload.PrefetchStatus.PrefetchResponseUsed:\n      return null;\n    // Holdback related status is expected to be overridden when DevTools is\n    // opened.\n    case Protocol.Preload.PrefetchStatus.PrefetchAllowed:\n    case Protocol.Preload.PrefetchStatus.PrefetchHeldback:\n      return null;\n    // TODO(https://crbug.com/1410709): deprecate PrefetchSuccessfulButNotUsed in the protocol.\n    case Protocol.Preload.PrefetchStatus.PrefetchSuccessfulButNotUsed:\n      return null;\n    case Protocol.Preload.PrefetchStatus.PrefetchFailedIneligibleRedirect:\n      return PrefetchReasonDescription['PrefetchFailedIneligibleRedirect'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchFailedInvalidRedirect:\n      return PrefetchReasonDescription['PrefetchFailedInvalidRedirect'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchFailedMIMENotSupported:\n      return PrefetchReasonDescription['PrefetchFailedMIMENotSupported'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchFailedNetError:\n      return PrefetchReasonDescription['PrefetchFailedNetError'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchFailedNon2XX:\n      return PrefetchReasonDescription['PrefetchFailedNon2XX'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchIneligibleRetryAfter:\n      return PrefetchReasonDescription['PrefetchIneligibleRetryAfter'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchEvictedForNewerPrefetch:\n      return PrefetchReasonDescription['PrefetchEvictedForNewerPrefetch'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchEvictedAfterCandidateRemoved:\n      return PrefetchReasonDescription['PrefetchEvictedAfterCandidateRemoved'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchIsPrivacyDecoy:\n      return PrefetchReasonDescription['PrefetchIsPrivacyDecoy'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchIsStale:\n      return PrefetchReasonDescription['PrefetchIsStale'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleBrowserContextOffTheRecord:\n      return PrefetchReasonDescription['PrefetchNotEligibleBrowserContextOffTheRecord'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleDataSaverEnabled:\n      return PrefetchReasonDescription['PrefetchNotEligibleDataSaverEnabled'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleExistingProxy:\n      return PrefetchReasonDescription['PrefetchNotEligibleExistingProxy'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleHostIsNonUnique:\n      return PrefetchReasonDescription['PrefetchNotEligibleHostIsNonUnique'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleNonDefaultStoragePartition:\n      return PrefetchReasonDescription['PrefetchNotEligibleNonDefaultStoragePartition'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy:\n      return PrefetchReasonDescription['PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleSchemeIsNotHttps:\n      return PrefetchReasonDescription['PrefetchNotEligibleSchemeIsNotHttps'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleUserHasCookies:\n      return PrefetchReasonDescription['PrefetchNotEligibleUserHasCookies'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleUserHasServiceWorker:\n      return PrefetchReasonDescription['PrefetchNotEligibleUserHasServiceWorker'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotUsedCookiesChanged:\n      return PrefetchReasonDescription['PrefetchNotUsedCookiesChanged'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchProxyNotAvailable:\n      return PrefetchReasonDescription['PrefetchProxyNotAvailable'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotUsedProbeFailed:\n      return PrefetchReasonDescription['PrefetchNotUsedProbeFailed'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleBatterySaverEnabled:\n      return PrefetchReasonDescription['PrefetchNotEligibleBatterySaverEnabled'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligiblePreloadingDisabled:\n      return PrefetchReasonDescription['PrefetchNotEligiblePreloadingDisabled'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleUserHasServiceWorkerNoFetchHandler:\n      return PrefetchReasonDescription['PrefetchNotEligibleUserHasServiceWorkerNoFetchHandler'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleRedirectFromServiceWorker:\n      return PrefetchReasonDescription['PrefetchNotEligibleRedirectFromServiceWorker'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchNotEligibleRedirectToServiceWorker:\n      return PrefetchReasonDescription['PrefetchNotEligibleRedirectToServiceWorker'].name();\n    case Protocol.Preload.PrefetchStatus.PrefetchEvictedAfterBrowsingDataRemoved:\n      return PrefetchReasonDescription['PrefetchEvictedAfterBrowsingDataRemoved'].name();\n    default:\n      // Note that we use switch and exhaustiveness check to prevent to\n      // forget updating these strings, but allow to handle unknown\n      // PrefetchStatus at runtime.\n      return i18n.i18n.lockedString(`Unknown failure reason: ${\n          prefetchStatus as 'See https://docs.google.com/document/d/1PnrfowsZMt62PX1EvvTp2Nqs3ji1zrklrAEe1JYbkTk'}`);\n  }\n}\n\n// Detailed failure reason for PrerenderFinalStatus.\nexport function prerenderFailureReason(attempt: SDK.PreloadingModel.PrerenderAttempt): string|null {\n  // If you face an error on rolling CDP changes, see\n  // https://docs.google.com/document/d/1PnrfowsZMt62PX1EvvTp2Nqs3ji1zrklrAEe1JYbkTk\n  switch (attempt.prerenderStatus) {\n    case null:\n    case Protocol.Preload.PrerenderFinalStatus.Activated:\n      return null;\n    case Protocol.Preload.PrerenderFinalStatus.Destroyed:\n      // TODO(https://crbug.com/1410709): Fill it.\n      return i18n.i18n.lockedString('Unknown');\n    case Protocol.Preload.PrerenderFinalStatus.LowEndDevice:\n      return i18nString(UIStrings.prerenderFinalStatusLowEndDevice);\n    case Protocol.Preload.PrerenderFinalStatus.InvalidSchemeRedirect:\n      return i18nString(UIStrings.prerenderFinalStatusInvalidSchemeRedirect);\n    case Protocol.Preload.PrerenderFinalStatus.InvalidSchemeNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusInvalidSchemeNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.NavigationRequestBlockedByCsp:\n      return i18nString(UIStrings.prerenderFinalStatusNavigationRequestBlockedByCsp);\n    case Protocol.Preload.PrerenderFinalStatus.MojoBinderPolicy:\n      assertNotNullOrUndefined(attempt.disallowedMojoInterface);\n      return i18nString(UIStrings.prerenderFinalStatusMojoBinderPolicy, {PH1: attempt.disallowedMojoInterface});\n    case Protocol.Preload.PrerenderFinalStatus.RendererProcessCrashed:\n      return i18nString(UIStrings.prerenderFinalStatusRendererProcessCrashed);\n    case Protocol.Preload.PrerenderFinalStatus.RendererProcessKilled:\n      return i18nString(UIStrings.prerenderFinalStatusRendererProcessKilled);\n    case Protocol.Preload.PrerenderFinalStatus.Download:\n      return i18nString(UIStrings.prerenderFinalStatusDownload);\n    case Protocol.Preload.PrerenderFinalStatus.TriggerDestroyed:\n      // After https://crrev.com/c/4515841, this won't occur if DevTools is opened.\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.NavigationNotCommitted:\n      // This looks internal error.\n      //\n      // TODO(https://crbug.com/1410709): Fill it.\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.NavigationBadHttpStatus:\n      return i18nString(UIStrings.prerenderFinalStatusNavigationBadHttpStatus);\n    case Protocol.Preload.PrerenderFinalStatus.ClientCertRequested:\n      return i18nString(UIStrings.prerenderFinalStatusClientCertRequested);\n    case Protocol.Preload.PrerenderFinalStatus.NavigationRequestNetworkError:\n      return i18nString(UIStrings.prerenderFinalStatusNavigationRequestNetworkError);\n    case Protocol.Preload.PrerenderFinalStatus.CancelAllHostsForTesting:\n      // Used only in tests.\n      throw new Error('unreachable');\n    case Protocol.Preload.PrerenderFinalStatus.DidFailLoad:\n      // TODO(https://crbug.com/1410709): Fill it.\n      return i18n.i18n.lockedString('Unknown');\n    case Protocol.Preload.PrerenderFinalStatus.Stop:\n      // TODO(https://crbug.com/1410709): Fill it.\n      return i18n.i18n.lockedString('Unknown');\n    case Protocol.Preload.PrerenderFinalStatus.SslCertificateError:\n      return i18nString(UIStrings.prerenderFinalStatusSslCertificateError);\n    case Protocol.Preload.PrerenderFinalStatus.LoginAuthRequested:\n      return i18nString(UIStrings.prerenderFinalStatusLoginAuthRequested);\n    case Protocol.Preload.PrerenderFinalStatus.UaChangeRequiresReload:\n      return i18nString(UIStrings.prerenderFinalStatusUaChangeRequiresReload);\n    case Protocol.Preload.PrerenderFinalStatus.BlockedByClient:\n      return i18nString(UIStrings.prerenderFinalStatusBlockedByClient);\n    case Protocol.Preload.PrerenderFinalStatus.AudioOutputDeviceRequested:\n      return i18nString(UIStrings.prerenderFinalStatusAudioOutputDeviceRequested);\n    case Protocol.Preload.PrerenderFinalStatus.MixedContent:\n      return i18nString(UIStrings.prerenderFinalStatusMixedContent);\n    case Protocol.Preload.PrerenderFinalStatus.TriggerBackgrounded:\n      return i18nString(UIStrings.prerenderFinalStatusTriggerBackgrounded);\n    case Protocol.Preload.PrerenderFinalStatus.MemoryLimitExceeded:\n      return i18nString(UIStrings.prerenderFinalStatusMemoryLimitExceeded);\n    case Protocol.Preload.PrerenderFinalStatus.DataSaverEnabled:\n      return i18nString(UIStrings.prerenderFinalStatusDataSaverEnabled);\n    case Protocol.Preload.PrerenderFinalStatus.TriggerUrlHasEffectiveUrl:\n      return i18nString(UIStrings.prerenderFinalStatusHasEffectiveUrl);\n    case Protocol.Preload.PrerenderFinalStatus.ActivatedBeforeStarted:\n      // Status for debugging.\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.InactivePageRestriction:\n      // This looks internal error.\n      //\n      // TODO(https://crbug.com/1410709): Fill it.\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.StartFailed:\n      // This looks internal error.\n      //\n      // TODO(https://crbug.com/1410709): Fill it.\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.TimeoutBackgrounded:\n      return i18nString(UIStrings.prerenderFinalStatusTimeoutBackgrounded);\n    case Protocol.Preload.PrerenderFinalStatus.CrossSiteRedirectInInitialNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusCrossSiteRedirectInInitialNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.CrossSiteNavigationInInitialNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusCrossSiteNavigationInInitialNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.SameSiteCrossOriginRedirectNotOptInInInitialNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInInitialNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.SameSiteCrossOriginNavigationNotOptInInInitialNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInInitialNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.ActivationNavigationParameterMismatch:\n      return i18nString(UIStrings.prerenderFinalStatusActivationNavigationParameterMismatch);\n    case Protocol.Preload.PrerenderFinalStatus.ActivatedInBackground:\n      // Status for debugging.\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.EmbedderHostDisallowed:\n      // Chrome as embedder doesn't use this.\n      throw new Error('unreachable');\n    case Protocol.Preload.PrerenderFinalStatus.ActivationNavigationDestroyedBeforeSuccess:\n      // Should not occur in DevTools because tab is alive?\n      return i18n.i18n.lockedString('Internal error');\n    case Protocol.Preload.PrerenderFinalStatus.TabClosedByUserGesture:\n      // Should not occur in DevTools because tab is alive.\n      throw new Error('unreachable');\n    case Protocol.Preload.PrerenderFinalStatus.TabClosedWithoutUserGesture:\n      // Should not occur in DevTools because tab is alive.\n      throw new Error('unreachable');\n    case Protocol.Preload.PrerenderFinalStatus.PrimaryMainFrameRendererProcessCrashed:\n      return i18nString(UIStrings.prerenderFinalStatusPrimaryMainFrameRendererProcessCrashed);\n    case Protocol.Preload.PrerenderFinalStatus.PrimaryMainFrameRendererProcessKilled:\n      return i18nString(UIStrings.prerenderFinalStatusPrimaryMainFrameRendererProcessKilled);\n    case Protocol.Preload.PrerenderFinalStatus.ActivationFramePolicyNotCompatible:\n      return i18nString(UIStrings.prerenderFinalStatusActivationFramePolicyNotCompatible);\n    case Protocol.Preload.PrerenderFinalStatus.PreloadingDisabled:\n      return i18nString(UIStrings.prerenderFinalStatusPreloadingDisabled);\n    case Protocol.Preload.PrerenderFinalStatus.BatterySaverEnabled:\n      return i18nString(UIStrings.prerenderFinalStatusBatterySaverEnabled);\n    case Protocol.Preload.PrerenderFinalStatus.ActivatedDuringMainFrameNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusActivatedDuringMainFrameNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.PreloadingUnsupportedByWebContents:\n      // Chrome as embedder doesn't use this.\n      throw new Error('unreachable');\n    case Protocol.Preload.PrerenderFinalStatus.CrossSiteRedirectInMainFrameNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusCrossSiteRedirectInMainFrameNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.CrossSiteNavigationInMainFrameNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusCrossSiteNavigationInMainFrameNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.SameSiteCrossOriginRedirectNotOptInInMainFrameNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInMainFrameNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.SameSiteCrossOriginNavigationNotOptInInMainFrameNavigation:\n      return i18nString(UIStrings.prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInMainFrameNavigation);\n    case Protocol.Preload.PrerenderFinalStatus.MemoryPressureOnTrigger:\n      return i18nString(UIStrings.prerenderFinalStatusMemoryPressureOnTrigger);\n    case Protocol.Preload.PrerenderFinalStatus.MemoryPressureAfterTriggered:\n      return i18nString(UIStrings.prerenderFinalStatusMemoryPressureAfterTriggered);\n    case Protocol.Preload.PrerenderFinalStatus.PrerenderingDisabledByDevTools:\n      return i18nString(UIStrings.prerenderFinalStatusPrerenderingDisabledByDevTools);\n    case Protocol.Preload.PrerenderFinalStatus.SpeculationRuleRemoved:\n      return i18nString(UIStrings.prerenderFinalStatusSpeculationRuleRemoved);\n    case Protocol.Preload.PrerenderFinalStatus.ActivatedWithAuxiliaryBrowsingContexts:\n      return i18nString(UIStrings.prerenderFinalStatusActivatedWithAuxiliaryBrowsingContexts);\n    case Protocol.Preload.PrerenderFinalStatus.MaxNumOfRunningEagerPrerendersExceeded:\n      return i18nString(UIStrings.prerenderFinalStatusMaxNumOfRunningEagerPrerendersExceeded);\n    case Protocol.Preload.PrerenderFinalStatus.MaxNumOfRunningEmbedderPrerendersExceeded:\n      return i18nString(UIStrings.prerenderFinalStatusMaxNumOfRunningEmbedderPrerendersExceeded);\n    case Protocol.Preload.PrerenderFinalStatus.MaxNumOfRunningNonEagerPrerendersExceeded:\n      return i18nString(UIStrings.prerenderFinalStatusMaxNumOfRunningNonEagerPrerendersExceeded);\n    case Protocol.Preload.PrerenderFinalStatus.PrerenderingUrlHasEffectiveUrl:\n      return i18nString(UIStrings.prerenderFinalStatusPrerenderingUrlHasEffectiveUrl);\n    case Protocol.Preload.PrerenderFinalStatus.RedirectedPrerenderingUrlHasEffectiveUrl:\n      return i18nString(UIStrings.prerenderFinalStatusRedirectedPrerenderingUrlHasEffectiveUrl);\n    case Protocol.Preload.PrerenderFinalStatus.ActivationUrlHasEffectiveUrl:\n      return i18nString(UIStrings.prerenderFinalStatusActivationUrlHasEffectiveUrl);\n    case Protocol.Preload.PrerenderFinalStatus.JavaScriptInterfaceAdded:\n      return i18nString(UIStrings.prerenderFinalStatusJavaScriptInterfaceAdded);\n    case Protocol.Preload.PrerenderFinalStatus.JavaScriptInterfaceRemoved:\n      return i18nString(UIStrings.prerenderFinalStatusJavaScriptInterfaceRemoved);\n    case Protocol.Preload.PrerenderFinalStatus.AllPrerenderingCanceled:\n      return i18nString(UIStrings.prerenderFinalStatusAllPrerenderingCanceled);\n    case Protocol.Preload.PrerenderFinalStatus.WindowClosed:\n      return i18nString(UIStrings.prerenderFinalStatusWindowClosed);\n    case Protocol.Preload.PrerenderFinalStatus.BrowsingDataRemoved:\n      return i18nString(UIStrings.prerenderFinalStatusBrowsingDataRemoved);\n    case Protocol.Preload.PrerenderFinalStatus.SlowNetwork:\n    case Protocol.Preload.PrerenderFinalStatus.OtherPrerenderedPageActivated:\n    case Protocol.Preload.PrerenderFinalStatus.V8OptimizerDisabled:\n    case Protocol.Preload.PrerenderFinalStatus.PrerenderFailedDuringPrefetch:\n      // TODO(crbug.com/350870118): Add message for this.\n      return '';\n    default:\n      // Note that we use switch and exhaustiveness check to prevent to\n      // forget updating these strings, but allow to handle unknown\n      // PrerenderFinalStatus at runtime.\n      // See https://docs.google.com/document/d/1PnrfowsZMt62PX1EvvTp2Nqs3ji1zrklrAEe1JYbkTk'\n      return i18n.i18n.lockedString(`Unknown failure reason: ${attempt.prerenderStatus as string}`);\n  }\n}\n\nexport function ruleSetLocationShort(\n    ruleSet: Protocol.Preload.RuleSet, pageURL: Platform.DevToolsPath.UrlString): string {\n  const url = ruleSet.url === undefined ? pageURL : ruleSet.url as Platform.DevToolsPath.UrlString;\n  return Bindings.ResourceUtils.displayNameForURL(url);\n}\n\nexport function ruleSetTagOrLocationShort(\n    ruleSet: Protocol.Preload.RuleSet, pageURL: Platform.DevToolsPath.UrlString): string {\n  if (!ruleSet.errorMessage && ruleSet.tag) {\n    return '\"' + ruleSet.tag + '\"';\n  }\n  return ruleSetLocationShort(ruleSet, pageURL);\n}\n\nexport function capitalizedAction(action: Protocol.Preload.SpeculationAction): Common.UIString.LocalizedString {\n  // Use \"prefetch\"/\"prerender\" as is in SpeculationRules.\n  switch (action) {\n    case Protocol.Preload.SpeculationAction.Prefetch:\n      return i18n.i18n.lockedString('Prefetch');\n    case Protocol.Preload.SpeculationAction.Prerender:\n      return i18n.i18n.lockedString('Prerender');\n  }\n}\n\nexport function status(status: SDK.PreloadingModel.PreloadingStatus): string {\n  // See content/public/browser/preloading.h PreloadingAttemptOutcome.\n  switch (status) {\n    case SDK.PreloadingModel.PreloadingStatus.NOT_TRIGGERED:\n      return i18nString(UIStrings.statusNotTriggered);\n    case SDK.PreloadingModel.PreloadingStatus.PENDING:\n      return i18nString(UIStrings.statusPending);\n    case SDK.PreloadingModel.PreloadingStatus.RUNNING:\n      return i18nString(UIStrings.statusRunning);\n    case SDK.PreloadingModel.PreloadingStatus.READY:\n      return i18nString(UIStrings.statusReady);\n    case SDK.PreloadingModel.PreloadingStatus.SUCCESS:\n      return i18nString(UIStrings.statusSuccess);\n    case SDK.PreloadingModel.PreloadingStatus.FAILURE:\n      return i18nString(UIStrings.statusFailure);\n      // NotSupported is used to handle unreachable case. For example,\n      // there is no code path for\n      // PreloadingTriggeringOutcome::kTriggeredButPending in prefetch,\n      // which is mapped to NotSupported. So, we regard it as an\n      // internal error.\n    case SDK.PreloadingModel.PreloadingStatus.NOT_SUPPORTED:\n      return i18n.i18n.lockedString('Internal error');\n  }\n}\n\nexport function composedStatus(attempt: SDK.PreloadingModel.PreloadingAttempt): string {\n  const short = status(attempt.status);\n\n  if (attempt.status !== SDK.PreloadingModel.PreloadingStatus.FAILURE) {\n    return short;\n  }\n\n  switch (attempt.action) {\n    case Protocol.Preload.SpeculationAction.Prefetch: {\n      const detail = prefetchFailureReason(attempt) ?? i18n.i18n.lockedString('Internal error');\n      return short + ' - ' + detail;\n    }\n    case Protocol.Preload.SpeculationAction.Prerender: {\n      const detail = prerenderFailureReason(attempt);\n      assertNotNullOrUndefined(detail);\n      return short + ' - ' + detail;\n    }\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2022 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.empty-state {\n  display: none;\n}\n\n.empty {\n  .empty-state {\n    display: flex;\n  }\n\n  devtools-split-view, .pretty-print-button, devtools-toolbar {\n    display: none;\n  }\n}\n\n.preloading-toolbar {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n\n  button.toolbar-has-dropdown {\n    margin: var(--sys-size-2) 0;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./preloading/preloadingView.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  padding: 2px 1px 2px 2px;\n}\n\n.title {\n  padding-left: 8px;\n}\n\n.subtitle {\n  padding-left: 8px;\n}\n\n/*# sourceURL=${import.meta.resolve('./preloading/preloadingViewDropDown.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport * as ApplicationComponents from './components/components.js';\nimport {ReportingApiView} from './ReportingApiView.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\n\nconst UIStrings = {\n  /**\n   * @description Label for an item in the Application Panel Sidebar of the Application panel\n   */\n  reportingApi: 'Reporting API',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ReportingApiTreeElement.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ReportingApiTreeElement extends ApplicationPanelTreeElement {\n  private view?: ReportingApiView;\n\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, i18nString(UIStrings.reportingApi), false, 'reporting-api');\n    const icon = IconButton.Icon.create('document');\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'reportingApi://' as Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new ReportingApiView(new ApplicationComponents.EndpointsGrid.EndpointsGrid());\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown('reporting-api');\n    return false;\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ApplicationComponents from './components/components.js';\n\nconst {widgetConfig} = UI.Widget;\n\nconst UIStrings = {\n  /**\n   * @description Placeholder text that shows if no report or endpoint was detected.\n   *             A report contains information on issues or events that were encountered by a web browser.\n   *             An endpoint is a URL where the report is sent to.\n   *             (https://developer.chrome.com/docs/capabilities/web-apis/reporting-api)\n   */\n  noReportOrEndpoint: 'No report or endpoint',\n  /**\n   * @description Placeholder text that shows if no report or endpoint was detected.\n   *             A report contains information on issues or events that were encountered by a web browser.\n   *             An endpoint is a URL where the report is sent to.\n   *             (https://developer.chrome.com/docs/capabilities/web-apis/reporting-api)\n   */\n  reportingApiDescription: 'On this page you will be able to inspect `Reporting API` reports and endpoints.',\n  /**\n   * @description Placeholder text that shows if no report was selected for viewing\n   *report body (https://developers.google.com/web/updates/2018/09/reportingapi#sending).\n   */\n  noReportSelected: 'No report selected',\n  /**\n   * @description Placeholder text instructing the user how to display a Reporting API\n   *report body (https://developers.google.com/web/updates/2018/09/reportingapi#sending).\n   */\n  clickToDisplayBody: 'Click on any report to display its body',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ReportingApiView.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst REPORTING_API_EXPLANATION_URL =\n    'https://developer.chrome.com/docs/capabilities/web-apis/reporting-api' as Platform.DevToolsPath.UrlString;\n\ninterface ViewInput {\n  hasReports: boolean;\n  hasEndpoints: boolean;\n  // TODO (crbug.com/407940329): port EndpointsGrid to a UI Widget and instantiate it in the view\n  endpointsGrid: ApplicationComponents.EndpointsGrid.EndpointsGrid;\n  // TODO (crbug.com/407940381): port ReportsGrid to a UI Widget and instantiate it in the view\n  reportsGrid: ApplicationComponents.ReportsGrid.ReportsGrid;\n  focusedReport?: Protocol.Network.ReportingApiReport;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  if (input.hasReports || input.hasEndpoints) {\n    // clang-format off\n    render(html`\n      <devtools-split-view sidebar-position=\"second\" sidebar-initial-size=\"150\" jslog=${\n          VisualLogging.pane('reporting-api')}>\n        ${input.hasReports ? html`\n          <devtools-split-view slot=\"main\" sidebar-position=\"second\" sidebar-initial-size=\"150\">\n            <div slot=\"main\">\n              ${input.reportsGrid}\n            </div>\n            <div slot=\"sidebar\" class=\"vbox\" jslog=${VisualLogging.pane('preview').track({resize: true})}>\n              ${input.focusedReport ? html`\n                <devtools-widget .widgetConfig=${widgetConfig(\n                  element => SourceFrame.JSONView.JSONView.createViewSync(input.focusedReport?.body || '', element)\n                )}></devtools-widget>\n              ` : html`\n                <devtools-widget .widgetConfig=${widgetConfig(UI.EmptyWidget.EmptyWidget, {\n                  header: i18nString(UIStrings.noReportSelected),\n                  text: i18nString(UIStrings.clickToDisplayBody),\n                })}></devtools-widget>\n              `}\n            </div>\n          </devtools-split-view>\n        ` : html`\n          <div slot=\"main\">\n            ${input.reportsGrid}\n          </div>\n        `}\n        <div slot=\"sidebar\">\n          ${input.endpointsGrid}\n        </div>\n      </devtools-split-view>\n    `, target);\n    // clang-format on\n  } else {\n    // clang-format off\n    render(html`\n      <devtools-widget .widgetConfig=${widgetConfig(UI.EmptyWidget.EmptyWidget, {\n        header: i18nString(UIStrings.noReportOrEndpoint),\n        text: i18nString(UIStrings.reportingApiDescription),\n        link: REPORTING_API_EXPLANATION_URL,\n      })} jslog=${VisualLogging.pane('reporting-api-empty')}></devtools-widget>\n    `, target);\n    // clang-format on\n  }\n};\n\nexport class ReportingApiView extends UI.Widget.VBox implements\n    SDK.TargetManager.SDKModelObserver<SDK.NetworkManager.NetworkManager> {\n  readonly #endpointsGrid: ApplicationComponents.EndpointsGrid.EndpointsGrid;\n  #endpoints: Map<string, Protocol.Network.ReportingApiEndpoint[]>;\n  #view: View;\n  #networkManager?: SDK.NetworkManager.NetworkManager;\n  #reportsGrid = new ApplicationComponents.ReportsGrid.ReportsGrid();\n  #reports: Protocol.Network.ReportingApiReport[] = [];\n  #focusedReport?: Protocol.Network.ReportingApiReport;\n\n  constructor(endpointsGrid: ApplicationComponents.EndpointsGrid.EndpointsGrid, view = DEFAULT_VIEW) {\n    super();\n    this.#view = view;\n    this.#endpointsGrid = endpointsGrid;\n    this.#endpoints = new Map();\n    this.#reportsGrid.addEventListener('select', this.#onFocus.bind(this));\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.NetworkManager.NetworkManager, this);\n    this.requestUpdate();\n  }\n\n  modelAdded(networkManager: SDK.NetworkManager.NetworkManager): void {\n    if (networkManager.target() !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.#networkManager = networkManager;\n    this.#networkManager.addEventListener(\n        SDK.NetworkManager.Events.ReportingApiEndpointsChangedForOrigin, this.#onEndpointsChangedForOrigin, this);\n    this.#networkManager.addEventListener(SDK.NetworkManager.Events.ReportingApiReportAdded, this.#onReportAdded, this);\n    this.#networkManager.addEventListener(\n        SDK.NetworkManager.Events.ReportingApiReportUpdated, this.#onReportUpdated, this);\n    void this.#networkManager.enableReportingApi();\n    this.requestUpdate();\n  }\n\n  modelRemoved(networkManager: SDK.NetworkManager.NetworkManager): void {\n    if (!this.#networkManager || this.#networkManager !== networkManager) {\n      return;\n    }\n    this.#networkManager.removeEventListener(\n        SDK.NetworkManager.Events.ReportingApiEndpointsChangedForOrigin, this.#onEndpointsChangedForOrigin, this);\n    this.#networkManager.removeEventListener(\n        SDK.NetworkManager.Events.ReportingApiReportAdded, this.#onReportAdded, this);\n    this.#networkManager.removeEventListener(\n        SDK.NetworkManager.Events.ReportingApiReportUpdated, this.#onReportUpdated, this);\n    this.#networkManager = undefined;\n  }\n\n  override performUpdate(): void {\n    const viewInput = {\n      hasReports: this.#reports.length > 0,\n      hasEndpoints: this.#endpoints.size > 0,\n      endpointsGrid: this.#endpointsGrid,\n      reportsGrid: this.#reportsGrid,\n      focusedReport: this.#focusedReport,\n    };\n    this.#view(viewInput, {}, this.element);\n  }\n\n  #onEndpointsChangedForOrigin({data}: {data: Protocol.Network.ReportingApiEndpointsChangedForOriginEvent}): void {\n    this.#endpoints.set(data.origin, data.endpoints);\n    this.#endpointsGrid.data = {endpoints: this.#endpoints};\n    this.requestUpdate();\n  }\n\n  #onReportAdded({data: report}: {data: Protocol.Network.ReportingApiReport}): void {\n    this.#reports.push(report);\n    this.#reportsGrid.data = {reports: this.#reports};\n    this.requestUpdate();\n  }\n\n  #onReportUpdated({data: report}: {data: Protocol.Network.ReportingApiReport}): void {\n    const index = this.#reports.findIndex(oldReport => oldReport.id === report.id);\n    this.#reports[index] = report;\n    this.#reportsGrid.data = {reports: this.#reports};\n    this.requestUpdate();\n  }\n\n  async #onFocus(event: Event): Promise<void> {\n    const selectEvent = event as CustomEvent<string>;\n    const report = this.#reports.find(report => report.id === selectEvent.detail);\n    if (report) {\n      this.#focusedReport = report;\n      this.requestUpdate();\n    }\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.tree-outline {\n  li.storage-group-list-item,\n  li.storage-group-list-item:not(:has(devtools-checkbox)) {\n    padding: 0 var(--sys-size-8) 0 var(--sys-size-3);\n\n    &::before {\n      display: none;\n    }\n\n    &:hover .selection,\n    &:active .selection::before {\n      background-color: transparent;\n    }\n\n    & + ol {\n      padding-left: 0;\n    }\n  }\n\n  li.storage-group-list-item:not(:first-child) {\n    margin-top: var(--sys-size-6);\n  }\n}\n\n.icons-container devtools-icon.red-icon {\n  color: var(--icon-error);\n}\n\ndevtools-icon.navigator-file-tree-item {\n  color: var(--icon-file-default);\n}\n\ndevtools-icon.navigator-folder-tree-item {\n  color: var(--icon-folder-primary);\n}\n\ndevtools-icon.navigator-script-tree-item {\n  color: var(--icon-file-script);\n}\n\ndevtools-icon.navigator-stylesheet-tree-item {\n  color: var(--icon-file-styles);\n}\n\ndevtools-icon.navigator-image-tree-item,\ndevtools-icon.navigator-font-tree-item {\n  color: var(--icon-file-image);\n}\n\n.window-closed .tree-element-title {\n  text-decoration: line-through;\n}\n\n/*# sourceURL=${import.meta.resolve('./resourcesSidebar.css')} */`;", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ApplicationPanelTreeElement, ExpandableApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\nimport {ServiceWorkerCacheView} from './ServiceWorkerCacheViews.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  cacheStorage: 'Cache storage',\n  /**\n   * @description Text in Application Panel if no cache storage was detected.\n   */\n  noCacheStorage: 'No cache storage detected',\n  /**\n   * @description Description text in Application Panel describing the cache storage tab\n   */\n  cacheStorageDescription: 'On this page you can view and delete cache data.',\n  /**\n   * @description A context menu item in the Application Panel Sidebar of the Application panel\n   */\n  refreshCaches: 'Refresh Caches',\n  /**\n   * @description Text to delete something\n   */\n  delete: 'Delete',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ServiceWorkerCacheTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ServiceWorkerCacheTreeElement extends ExpandableApplicationPanelTreeElement {\n  private swCacheModels: Set<SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel>;\n  private swCacheTreeElements: Set<SWCacheTreeElement>;\n  private storageBucket?: Protocol.Storage.StorageBucket;\n\n  constructor(resourcesPanel: ResourcesPanel, storageBucket?: Protocol.Storage.StorageBucket) {\n    super(\n        resourcesPanel, i18nString(UIStrings.cacheStorage), i18nString(UIStrings.noCacheStorage),\n        i18nString(UIStrings.cacheStorageDescription), 'cache-storage');\n    const icon = IconButton.Icon.create('database');\n    this.setLink('https://developer.chrome.com/docs/devtools/storage/cache/' as Platform.DevToolsPath.UrlString);\n    this.setLeadingIcons([icon]);\n    this.swCacheModels = new Set();\n    this.swCacheTreeElements = new Set();\n    this.storageBucket = storageBucket;\n  }\n\n  initialize(): void {\n    this.swCacheModels.clear();\n    this.swCacheTreeElements.clear();\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel, {\n      modelAdded: (model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel) =>\n          this.serviceWorkerCacheModelAdded(model),\n      modelRemoved: (model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel) =>\n          this.serviceWorkerCacheModelRemoved(model),\n    });\n  }\n\n  override onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.refreshCaches), this.refreshCaches.bind(this), {jslogContext: 'refresh-caches'});\n    void contextMenu.show();\n  }\n\n  private refreshCaches(): void {\n    for (const swCacheModel of this.swCacheModels) {\n      swCacheModel.refreshCacheNames();\n    }\n  }\n\n  private serviceWorkerCacheModelAdded(model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel): void {\n    model.enable();\n    this.swCacheModels.add(model);\n    for (const cache of model.caches()) {\n      this.addCache(model, cache);\n    }\n    model.addEventListener(SDK.ServiceWorkerCacheModel.Events.CACHE_ADDED, this.cacheAdded, this);\n    model.addEventListener(SDK.ServiceWorkerCacheModel.Events.CACHE_REMOVED, this.cacheRemoved, this);\n  }\n\n  private serviceWorkerCacheModelRemoved(model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel): void {\n    for (const cache of model.caches()) {\n      this.removeCache(model, cache);\n    }\n    model.removeEventListener(SDK.ServiceWorkerCacheModel.Events.CACHE_ADDED, this.cacheAdded, this);\n    model.removeEventListener(SDK.ServiceWorkerCacheModel.Events.CACHE_REMOVED, this.cacheRemoved, this);\n    this.swCacheModels.delete(model);\n  }\n\n  private cacheAdded(event: Common.EventTarget.EventTargetEvent<SDK.ServiceWorkerCacheModel.CacheEvent>): void {\n    const {model, cache} = event.data;\n    this.addCache(model, cache);\n  }\n\n  private cacheInTree(cache: SDK.ServiceWorkerCacheModel.Cache): boolean {\n    if (this.storageBucket) {\n      return cache.inBucket(this.storageBucket);\n    }\n    return true;\n  }\n\n  private addCache(\n      model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel, cache: SDK.ServiceWorkerCacheModel.Cache): void {\n    if (this.cacheInTree(cache)) {\n      const swCacheTreeElement =\n          new SWCacheTreeElement(this.resourcesPanel, model, cache, this.storageBucket === undefined);\n      this.swCacheTreeElements.add(swCacheTreeElement);\n      this.appendChild(swCacheTreeElement);\n    }\n  }\n\n  private cacheRemoved(event: Common.EventTarget.EventTargetEvent<SDK.ServiceWorkerCacheModel.CacheEvent>): void {\n    const {model, cache} = event.data;\n    if (this.cacheInTree(cache)) {\n      this.removeCache(model, cache);\n    }\n  }\n\n  private removeCache(\n      model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel, cache: SDK.ServiceWorkerCacheModel.Cache): void {\n    const swCacheTreeElement = this.cacheTreeElement(model, cache);\n    if (!swCacheTreeElement) {\n      return;\n    }\n\n    this.removeChild(swCacheTreeElement);\n    this.swCacheTreeElements.delete(swCacheTreeElement);\n    this.setExpandable(this.childCount() > 0);\n  }\n\n  private cacheTreeElement(\n      model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel,\n      cache: SDK.ServiceWorkerCacheModel.Cache): SWCacheTreeElement|null {\n    for (const cacheTreeElement of this.swCacheTreeElements) {\n      if (cacheTreeElement.hasModelAndCache(model, cache)) {\n        return cacheTreeElement;\n      }\n    }\n    return null;\n  }\n}\n\nexport class SWCacheTreeElement extends ApplicationPanelTreeElement {\n  private readonly model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel;\n  private cache: SDK.ServiceWorkerCacheModel.Cache;\n  private view: ServiceWorkerCacheView|null;\n\n  constructor(\n      resourcesPanel: ResourcesPanel, model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel,\n      cache: SDK.ServiceWorkerCacheModel.Cache, appendStorageKey: boolean) {\n    let cacheName;\n    if (appendStorageKey) {\n      cacheName = cache.cacheName + ' - ' + cache.storageKey;\n    } else {\n      cacheName = cache.cacheName;\n    }\n    super(resourcesPanel, cacheName, false, 'cache-storage-instance');\n    this.model = model;\n    this.cache = cache;\n    this.view = null;\n    const icon = IconButton.Icon.create('table');\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    // I don't think this will work at all.\n    return 'cache://' + this.cache.cacheId as Platform.DevToolsPath.UrlString;\n  }\n\n  override onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.delete), this.clearCache.bind(this), {jslogContext: 'delete'});\n    void contextMenu.show();\n  }\n\n  private clearCache(): void {\n    void this.model.deleteCache(this.cache);\n  }\n\n  update(cache: SDK.ServiceWorkerCacheModel.Cache): void {\n    this.cache = cache;\n    if (this.view) {\n      this.view.update(cache);\n    }\n  }\n\n  override onselect(selectedByUser: boolean|undefined): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new ServiceWorkerCacheView(this.model, this.cache);\n    }\n\n    this.showView(this.view);\n    Host.userMetrics.panelShown('service-worker-cache');\n    return false;\n  }\n\n  hasModelAndCache(\n      model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel, cache: SDK.ServiceWorkerCacheModel.Cache): boolean {\n    return this.cache.equals(cache) && this.model === model;\n  }\n}\n", "// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as NetworkComponents from '../network/components/components.js';\nimport * as Network from '../network/network.js';\n\nimport * as ApplicationComponents from './components/components.js';\nimport serviceWorkerCacheViewsStyles from './serviceWorkerCacheViews.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  cache: 'Cache',\n  /**\n   * @description Text to refresh the page\n   */\n  refresh: 'Refresh',\n  /**\n   * @description Tooltip text that appears when hovering over the largeicon delete button in the Service Worker Cache Views of the Application panel\n   */\n  deleteSelected: 'Delete Selected',\n  /**\n   * @description Text in Service Worker Cache Views of the Application panel\n   */\n  filterByPath: 'Filter by path',\n  /**\n   * @description Text in Service Worker Cache Views of the Application panel that shows if no cache entry is selected for preview\n   */\n  noCacheEntrySelected: 'No cache entry selected',\n  /**\n   * @description Text in Service Worker Cache Views of the Application panel\n   */\n  selectACacheEntryAboveToPreview: 'Select a cache entry above to preview',\n  /**\n   * @description Text for the name of something\n   */\n  name: 'Name',\n  /**\n   * @description Text in Service Worker Cache Views of the Application panel\n   */\n  timeCached: 'Time Cached',\n  /**\n   * @description Tooltip text that appears when hovering over the vary header column in the Service Worker Cache Views of the Application panel\n   */\n  varyHeaderWarning: '⚠️ Set ignoreVary to true when matching this entry',\n  /**\n   * @description Text used to show that data was retrieved from ServiceWorker Cache\n   */\n  serviceWorkerCache: '`Service Worker` Cache',\n  /**\n   * @description Span text content in Service Worker Cache Views of the Application panel\n   * @example {2} PH1\n   */\n  matchingEntriesS: 'Matching entries: {PH1}',\n  /**\n   * @description Span text content in Indexed DBViews of the Application panel\n   * @example {2} PH1\n   */\n  totalEntriesS: 'Total entries: {PH1}',\n  /**\n   * @description Text for network request headers\n   */\n  headers: 'Headers',\n  /**\n   * @description Text for previewing items\n   */\n  preview: 'Preview',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ServiceWorkerCacheViews.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ServiceWorkerCacheView extends UI.View.SimpleView {\n  private model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel;\n  protected entriesForTest: Protocol.CacheStorage.DataEntry[]|null;\n  private readonly splitWidget: UI.SplitWidget.SplitWidget;\n  private readonly previewPanel: UI.Widget.VBox;\n  private preview: UI.Widget.Widget|null;\n  private cache: SDK.ServiceWorkerCacheModel.Cache;\n  private dataGrid: DataGrid.DataGrid.DataGridImpl<DataGridNode>|null;\n  private readonly refreshThrottler: Common.Throttler.Throttler;\n  private readonly refreshButton: UI.Toolbar.ToolbarButton;\n  private readonly deleteSelectedButton: UI.Toolbar.ToolbarButton;\n  private entryPathFilter: string;\n  private returnCount: number|null;\n  private summaryBarElement: Element|null;\n  private loadingPromise: Promise<{\n    entries: Protocol.CacheStorage.DataEntry[],\n    returnCount: number,\n  }>|null;\n  private readonly metadataView = new ApplicationComponents.StorageMetadataView.StorageMetadataView();\n\n  constructor(model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel, cache: SDK.ServiceWorkerCacheModel.Cache) {\n    super({\n      title: i18nString(UIStrings.cache),\n      viewId: 'cache',\n      jslog: `${VisualLogging.pane('cache-storage-data')}`,\n    });\n    this.registerRequiredCSS(serviceWorkerCacheViewsStyles);\n\n    this.model = model;\n    this.entriesForTest = null;\n\n    this.element.classList.add('service-worker-cache-data-view');\n    this.element.classList.add('storage-view');\n\n    const editorToolbar = this.element.createChild('devtools-toolbar', 'data-view-toolbar');\n    editorToolbar.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n    this.element.appendChild(this.metadataView);\n    this.splitWidget = new UI.SplitWidget.SplitWidget(false, false);\n    this.splitWidget.show(this.element);\n\n    this.previewPanel = new UI.Widget.VBox();\n    const resizer = this.previewPanel.element.createChild('div', 'cache-preview-panel-resizer');\n    this.splitWidget.setMainWidget(this.previewPanel);\n    this.splitWidget.installResizer(resizer);\n\n    this.preview = null;\n\n    this.cache = cache;\n    const bucketInfo = this.model.target()\n                           .model(SDK.StorageBucketsModel.StorageBucketsModel)\n                           ?.getBucketByName(cache.storageBucket.storageKey, cache.storageBucket.name);\n    if (bucketInfo) {\n      this.metadataView.setStorageBucket(bucketInfo);\n    } else if (cache.storageKey) {\n      this.metadataView.setStorageKey(cache.storageKey);\n    }\n    this.dataGrid = null;\n    this.refreshThrottler = new Common.Throttler.Throttler(300);\n    this.refreshButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.refresh), 'refresh', undefined, 'cache-storage.refresh');\n    this.refreshButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.refreshButtonClicked, this);\n    editorToolbar.appendToolbarItem(this.refreshButton);\n\n    this.deleteSelectedButton = new UI.Toolbar.ToolbarButton(\n        i18nString(UIStrings.deleteSelected), 'cross', undefined, 'cache-storage.delete-selected');\n    this.deleteSelectedButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, _event => {\n      void this.deleteButtonClicked(null);\n    });\n    editorToolbar.appendToolbarItem(this.deleteSelectedButton);\n\n    const entryPathFilterBox = new UI.Toolbar.ToolbarFilter(i18nString(UIStrings.filterByPath), 1);\n    editorToolbar.appendToolbarItem(entryPathFilterBox);\n    const entryPathFilterThrottler = new Common.Throttler.Throttler(300);\n    this.entryPathFilter = '';\n    entryPathFilterBox.addEventListener(UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED, () => {\n      void entryPathFilterThrottler.schedule(() => {\n        this.entryPathFilter = entryPathFilterBox.value();\n        return this.updateData(true);\n      });\n    });\n    this.returnCount = (null as number | null);\n    this.summaryBarElement = (null as Element | null);\n    this.loadingPromise = null;\n\n    this.update(cache);\n  }\n\n  private resetDataGrid(): void {\n    if (this.dataGrid) {\n      this.dataGrid.asWidget().detach();\n    }\n    this.dataGrid = this.createDataGrid();\n    const dataGridWidget = this.dataGrid.asWidget();\n    this.splitWidget.setSidebarWidget(dataGridWidget);\n    dataGridWidget.setMinimumSize(0, 250);\n  }\n\n  override wasShown(): void {\n    this.model.addEventListener(\n        SDK.ServiceWorkerCacheModel.Events.CACHE_STORAGE_CONTENT_UPDATED, this.cacheContentUpdated, this);\n    void this.updateData(true);\n  }\n\n  override willHide(): void {\n    this.model.removeEventListener(\n        SDK.ServiceWorkerCacheModel.Events.CACHE_STORAGE_CONTENT_UPDATED, this.cacheContentUpdated, this);\n  }\n\n  private showPreview(preview: UI.Widget.Widget|null): void {\n    if (preview && this.preview === preview) {\n      return;\n    }\n    if (this.preview) {\n      this.preview.detach();\n    }\n    if (!preview) {\n      preview = new UI.EmptyWidget.EmptyWidget(\n          i18nString(UIStrings.noCacheEntrySelected), i18nString(UIStrings.selectACacheEntryAboveToPreview));\n    }\n    this.preview = preview;\n    this.preview.show(this.previewPanel.element);\n  }\n\n  private createDataGrid(): DataGrid.DataGrid.DataGridImpl<DataGridNode> {\n    const columns = ([\n      {id: 'number', title: '#', sortable: false, width: '3px'},\n      {id: 'name', title: i18nString(UIStrings.name), weight: 4, sortable: true},\n      {\n        id: 'response-type',\n        title: i18n.i18n.lockedString('Response-Type'),\n        weight: 1,\n        align: DataGrid.DataGrid.Align.RIGHT,\n        sortable: true,\n      },\n      {id: 'content-type', title: i18n.i18n.lockedString('Content-Type'), weight: 1, sortable: true},\n      {\n        id: 'content-length',\n        title: i18n.i18n.lockedString('Content-Length'),\n        weight: 1,\n        align: DataGrid.DataGrid.Align.RIGHT,\n        sortable: true,\n      },\n      {\n        id: 'response-time',\n        title: i18nString(UIStrings.timeCached),\n        width: '12em',\n        weight: 1,\n        align: DataGrid.DataGrid.Align.RIGHT,\n        sortable: true,\n      },\n      {id: 'vary-header', title: i18n.i18n.lockedString('Vary Header'), weight: 1, sortable: true},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n    const dataGrid = new DataGrid.DataGrid.DataGridImpl({\n      displayName: i18nString(UIStrings.serviceWorkerCache),\n      columns,\n      deleteCallback: this.deleteButtonClicked.bind(this),\n      refreshCallback: this.updateData.bind(this, true),\n    });\n\n    dataGrid.addEventListener(DataGrid.DataGrid.Events.SORTING_CHANGED, this.sortingChanged, this);\n\n    dataGrid.addEventListener(DataGrid.DataGrid.Events.SELECTED_NODE, event => {\n      void this.previewCachedResponse(event.data.data as SDK.NetworkRequest.NetworkRequest);\n    }, this);\n    dataGrid.setStriped(true);\n    return dataGrid;\n  }\n\n  private sortingChanged(): void {\n    if (!this.dataGrid) {\n      return;\n    }\n\n    const dataGrid = this.dataGrid;\n\n    const accending = dataGrid.isSortOrderAscending();\n    const columnId = dataGrid.sortColumnId();\n    let comparator: (arg0: DataGridNode, arg1: DataGridNode) => number;\n    if (columnId === 'name') {\n      comparator = (a: DataGridNode, b: DataGridNode) => a.name.localeCompare(b.name);\n    } else if (columnId === 'content-type') {\n      comparator = (a: DataGridNode, b: DataGridNode) => a.data.mimeType.localeCompare(b.data.mimeType);\n    } else if (columnId === 'content-length') {\n      comparator = (a: DataGridNode, b: DataGridNode) => a.data.resourceSize - b.data.resourceSize;\n    } else if (columnId === 'response-time') {\n      comparator = (a: DataGridNode, b: DataGridNode) => a.data.endTime - b.data.endTime;\n    } else if (columnId === 'response-type') {\n      comparator = (a: DataGridNode, b: DataGridNode) => a.responseType.localeCompare(b.responseType);\n    } else if (columnId === 'vary-header') {\n      comparator = (a: DataGridNode, b: DataGridNode) => a.varyHeader.localeCompare(b.varyHeader);\n    }\n\n    const children = dataGrid.rootNode().children.slice();\n    dataGrid.rootNode().removeChildren();\n    children.sort((a, b) => {\n      const result = comparator((a as DataGridNode), (b as DataGridNode));\n      return accending ? result : -result;\n    });\n    children.forEach(child => dataGrid.rootNode().appendChild(child));\n  }\n\n  private async deleteButtonClicked(node: DataGrid.DataGrid.DataGridNode<DataGridNode>|null): Promise<void> {\n    if (!node) {\n      node = this.dataGrid?.selectedNode ?? null;\n      if (!node) {\n        return;\n      }\n    }\n    await this.model.deleteCacheEntry(this.cache, (node.data.url() as string));\n    node.remove();\n  }\n\n  update(cache: SDK.ServiceWorkerCacheModel.Cache|null = null): void {\n    if (!cache) {\n      return;\n    }\n    this.cache = cache;\n    this.resetDataGrid();\n    void this.updateData(true);\n  }\n\n  private updateSummaryBar(): void {\n    if (!this.summaryBarElement) {\n      this.summaryBarElement = this.element.createChild('div', 'cache-storage-summary-bar');\n    }\n    this.summaryBarElement.removeChildren();\n\n    const span = this.summaryBarElement.createChild('span');\n    if (this.entryPathFilter) {\n      span.textContent = i18nString(UIStrings.matchingEntriesS, {PH1: String(this.returnCount)});\n    } else {\n      span.textContent = i18nString(UIStrings.totalEntriesS, {PH1: String(this.returnCount)});\n    }\n  }\n\n  private updateDataCallback(entries: Protocol.CacheStorage.DataEntry[], returnCount: number): void {\n    if (!this.dataGrid) {\n      return;\n    }\n    const selected = this.dataGrid.selectedNode?.data.url();\n    this.refreshButton.setEnabled(true);\n    this.entriesForTest = entries;\n    this.returnCount = returnCount;\n    this.updateSummaryBar();\n\n    const oldEntries = new Map<string, DataGridNode>();\n    const rootNode = this.dataGrid.rootNode();\n    for (const node of rootNode.children) {\n      oldEntries.set(node.data.url, (node as DataGridNode));\n    }\n    rootNode.removeChildren();\n    let selectedNode: DataGridNode|null = null;\n    for (let i = 0; i < entries.length; ++i) {\n      const entry = entries[i];\n      let node = oldEntries.get(entry.requestURL);\n      if (!node || node.data.responseTime !== entry.responseTime) {\n        node = new DataGridNode(i, this.createRequest(entry), entry.responseType);\n        node.selectable = true;\n      } else {\n        node.data.number = i;\n      }\n      rootNode.appendChild(node);\n      if (entry.requestURL === selected) {\n        selectedNode = node;\n      }\n    }\n    if (!selectedNode) {\n      this.showPreview(null);\n    } else {\n      selectedNode.revealAndSelect();\n    }\n    this.updatedForTest();\n  }\n\n  private async updateData(force: boolean): Promise<{\n    entries: Protocol.CacheStorage.DataEntry[],\n    returnCount: number,\n  }|undefined> {\n    if (!force && this.loadingPromise) {\n      return await this.loadingPromise;\n    }\n    this.refreshButton.setEnabled(false);\n\n    if (this.loadingPromise) {\n      return await this.loadingPromise;\n    }\n\n    this.loadingPromise = new Promise(resolve => {\n      this.model.loadAllCacheData(\n          this.cache, this.entryPathFilter, (entries: Protocol.CacheStorage.DataEntry[], returnCount: number) => {\n            resolve({entries, returnCount});\n          });\n    });\n\n    const {entries, returnCount} = await this.loadingPromise;\n    this.updateDataCallback(entries, returnCount);\n    this.loadingPromise = null;\n    return;\n  }\n\n  private refreshButtonClicked(): void {\n    void this.updateData(true);\n  }\n\n  private cacheContentUpdated(\n      event: Common.EventTarget.EventTargetEvent<SDK.ServiceWorkerCacheModel.CacheStorageContentUpdatedEvent>): void {\n    const {cacheName, storageBucket} = event.data;\n    if ((!this.cache.inBucket(storageBucket) || this.cache.cacheName !== cacheName)) {\n      return;\n    }\n    void this.refreshThrottler.schedule(\n        () => Promise.resolve(this.updateData(true)), Common.Throttler.Scheduling.AS_SOON_AS_POSSIBLE);\n  }\n\n  private async previewCachedResponse(request: SDK.NetworkRequest.NetworkRequest): Promise<void> {\n    let preview = networkRequestToPreview.get(request);\n    if (!preview) {\n      preview = new RequestView(request);\n      networkRequestToPreview.set(request, preview);\n    }\n\n    // It is possible that table selection changes before the preview opens.\n    if (this.dataGrid?.selectedNode && request === this.dataGrid.selectedNode.data) {\n      this.showPreview(preview);\n    }\n  }\n\n  private createRequest(entry: Protocol.CacheStorage.DataEntry): SDK.NetworkRequest.NetworkRequest {\n    const request = SDK.NetworkRequest.NetworkRequest.createWithoutBackendRequest(\n        'cache-storage-' + entry.requestURL, entry.requestURL as Platform.DevToolsPath.UrlString,\n        Platform.DevToolsPath.EmptyUrlString, null);\n    request.requestMethod = entry.requestMethod;\n    request.setRequestHeaders(entry.requestHeaders);\n    request.statusCode = entry.responseStatus;\n    request.statusText = entry.responseStatusText;\n    request.protocol = new Common.ParsedURL.ParsedURL(entry.requestURL).scheme;\n    request.responseHeaders = entry.responseHeaders;\n    request.setRequestHeadersText('');\n    request.endTime = entry.responseTime;\n\n    let header = entry.responseHeaders.find(header => header.name.toLowerCase() === 'content-type');\n    let mimeType: string = Platform.MimeType.MimeType.PLAIN;\n    if (header) {\n      const result = Platform.MimeType.parseContentType(header.value);\n      if (result.mimeType) {\n        mimeType = result.mimeType;\n      }\n    }\n    request.mimeType = mimeType;\n\n    header = entry.responseHeaders.find(header => header.name.toLowerCase() === 'content-length');\n    request.resourceSize = (header && Number(header.value)) || 0;\n\n    let resourceType = Common.ResourceType.ResourceType.fromMimeType(mimeType);\n    if (!resourceType) {\n      resourceType =\n          Common.ResourceType.ResourceType.fromURL(entry.requestURL) || Common.ResourceType.resourceTypes.Other;\n    }\n    request.setResourceType(resourceType);\n    request.setContentDataProvider(this.requestContent.bind(this, request));\n    return request;\n  }\n\n  private async requestContent(request: SDK.NetworkRequest.NetworkRequest):\n      Promise<TextUtils.ContentData.ContentDataOrError> {\n    const response = await this.cache.requestCachedResponse(request.url(), request.requestHeaders());\n    if (!response) {\n      return {error: 'No cached response found'};\n    }\n    return new TextUtils.ContentData.ContentData(\n        response.body, /* isBase64=*/ true, request.mimeType, request.charset() ?? undefined);\n  }\n\n  private updatedForTest(): void {\n  }\n}\n\nconst networkRequestToPreview = new WeakMap<SDK.NetworkRequest.NetworkRequest, RequestView>();\n\nexport class DataGridNode extends DataGrid.DataGrid.DataGridNode<DataGridNode> {\n  private number: number;\n  name: string;\n  private request: SDK.NetworkRequest.NetworkRequest;\n  responseType: Protocol.CacheStorage.CachedResponseType;\n  varyHeader: string;\n\n  constructor(\n      number: number, request: SDK.NetworkRequest.NetworkRequest,\n      responseType: Protocol.CacheStorage.CachedResponseType) {\n    super(request);\n    this.number = number;\n    const parsed = new Common.ParsedURL.ParsedURL(request.url());\n    if (parsed.isValid) {\n      this.name = Platform.StringUtilities.trimURL(request.url(), parsed.domain());\n    } else {\n      this.name = request.url();\n    }\n    this.request = request;\n    this.responseType = responseType;\n    this.varyHeader = request.responseHeaders.find(header => header.name.toLowerCase() === 'vary')?.value || '';\n  }\n\n  override createCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId);\n    let value;\n    let tooltip = this.request.url() as string;\n    if (columnId === 'number') {\n      value = String(this.number);\n    } else if (columnId === 'name') {\n      value = this.name;\n    } else if (columnId === 'response-type') {\n      if (this.responseType === 'opaqueResponse') {\n        value = 'opaque';\n      } else if (this.responseType === 'opaqueRedirect') {\n        value = 'opaqueredirect';\n      } else {\n        value = this.responseType;\n      }\n    } else if (columnId === 'content-type') {\n      value = this.request.mimeType;\n    } else if (columnId === 'content-length') {\n      value = (this.request.resourceSize | 0).toLocaleString('en-US');\n    } else if (columnId === 'response-time') {\n      value = new Date(this.request.endTime * 1000).toLocaleString();\n    } else if (columnId === 'vary-header') {\n      value = this.varyHeader;\n      if (this.varyHeader) {\n        tooltip = i18nString(UIStrings.varyHeaderWarning);\n      }\n    }\n    const parentElement = cell.parentElement;\n    let gridNode;\n    if (parentElement && this.dataGrid) {\n      gridNode = this.dataGrid.elementToDataGridNode.get(parentElement);\n    }\n    DataGrid.DataGrid.DataGridImpl.setElementText(cell, value || '', /* longText= */ true, gridNode);\n    UI.Tooltip.Tooltip.install(cell, tooltip);\n    return cell;\n  }\n}\n\nexport class RequestView extends UI.Widget.VBox {\n  private tabbedPane: UI.TabbedPane.TabbedPane;\n  private resourceViewTabSetting: Common.Settings.Setting<string>;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n\n    this.tabbedPane = new UI.TabbedPane.TabbedPane();\n    this.tabbedPane.element.setAttribute('jslog', `${VisualLogging.section('network-item-preview')}`);\n    this.tabbedPane.addEventListener(UI.TabbedPane.Events.TabSelected, this.tabSelected, this);\n    this.resourceViewTabSetting =\n        Common.Settings.Settings.instance().createSetting('cache-storage-view-tab', 'preview');\n\n    this.tabbedPane.appendTab(\n        'headers', i18nString(UIStrings.headers),\n        LegacyWrapper.LegacyWrapper.legacyWrapper(\n            UI.Widget.VBox, new NetworkComponents.RequestHeadersView.RequestHeadersView(request)));\n    this.tabbedPane.appendTab(\n        'preview', i18nString(UIStrings.preview), new Network.RequestPreviewView.RequestPreviewView(request));\n    this.tabbedPane.show(this.element);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.selectTab();\n  }\n\n  private selectTab(tabId?: string): void {\n    if (!tabId) {\n      tabId = this.resourceViewTabSetting.get();\n    }\n    if (tabId && !this.tabbedPane.selectTab(tabId)) {\n      this.tabbedPane.selectTab('headers');\n    }\n  }\n\n  private tabSelected(event: Common.EventTarget.EventTargetEvent<UI.TabbedPane.EventData>): void {\n    if (!event.data.isUserGesture) {\n      return;\n    }\n    this.resourceViewTabSetting.set(event.data.tabId);\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2014 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.service-worker-cache-data-view .data-view-toolbar {\n  position: relative;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding-right: 10px;\n}\n\n.service-worker-cache-data-view .data-grid {\n  flex: auto;\n}\n\n.service-worker-cache-data-view .data-grid .data-container tr:nth-last-child(1) td {\n  border: 0;\n}\n\n.service-worker-cache-data-view .data-grid .data-container tr:nth-last-child(2) td {\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.service-worker-cache-data-view .data-grid .data-container tr.selected {\n  background-color: var(--sys-color-neutral-container);\n  color: inherit;\n}\n\n.service-worker-cache-data-view .data-grid:focus .data-container tr.selected {\n  background-color: var(--sys-color-tonal-container);\n  color: var(--sys-color-on-tonal-container);\n}\n\n.service-worker-cache-data-view .section,\n.service-worker-cache-data-view .section > .header,\n.service-worker-cache-data-view .section > .header .title {\n  margin: 0;\n  min-height: inherit;\n  line-height: inherit;\n}\n\n.service-worker-cache-data-view .data-grid .data-container td .section .header .title {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.cache-preview-panel-resizer {\n  background-color: var(--sys-color-surface1);\n  height: 4px;\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.cache-storage-summary-bar {\n  flex: 0 0 27px;\n  line-height: 27px;\n  padding-left: 5px;\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n/*# sourceURL=${import.meta.resolve('./serviceWorkerCacheViews.css')} */`;", "// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\n\nimport * as ApplicationComponents from './components/components.js';\nimport serviceWorkersViewStyles from './serviceWorkersView.css.js';\nimport serviceWorkerUpdateCycleViewStyles from './serviceWorkerUpdateCycleView.css.js';\nimport {ServiceWorkerUpdateCycleView} from './ServiceWorkerUpdateCycleView.js';\n\nconst UIStrings = {\n  /**\n   * @description Text for linking to other Service Worker registrations\n   */\n  serviceWorkersFromOtherOrigins: 'Service workers from other origins',\n  /**\n   * @description Title of update on reload setting in service workers view of the application panel\n   */\n  updateOnReload: 'Update on reload',\n  /**\n   * @description Tooltip text that appears on the setting when hovering over it in Service Workers View of the Application panel\n   */\n  onPageReloadForceTheService: 'On page reload, force the `service worker` to update, and activate it',\n  /**\n   * @description Title of bypass service worker setting in service workers view of the application panel\n   */\n  bypassForNetwork: 'Bypass for network',\n  /**\n   * @description Tooltip text that appears on the setting when hovering over it in Service Workers View of the Application panel\n   */\n  bypassTheServiceWorkerAndLoad: 'Bypass the `service worker` and load resources from the network',\n  /**\n   * @description Screen reader title for a section of the Service Workers view of the Application panel\n   * @example {https://example.com} PH1\n   */\n  serviceWorkerForS: '`Service worker` for {PH1}',\n  /**\n   * @description Text in Service Workers View of the Application panel\n   */\n  testPushMessageFromDevtools: 'Test push message from DevTools.',\n  /**\n   * @description Button label for service worker network requests\n   */\n  networkRequests: 'Network requests',\n  /**\n   * @description Label for a button in the Service Workers View of the Application panel.\n   * Imperative noun. Clicking the button will refresh the list of service worker registrations.\n   */\n  update: 'Update',\n  /**\n   * @description Text in Service Workers View of the Application panel\n   */\n  unregisterServiceWorker: 'Unregister service worker',\n  /**\n   * @description Text in Service Workers View of the Application panel\n   */\n  unregister: 'Unregister',\n  /**\n   * @description Text for the source of something\n   */\n  source: 'Source',\n  /**\n   * @description Text for the status of something\n   */\n  status: 'Status',\n  /**\n   * @description Text in Service Workers View of the Application panel\n   */\n  clients: 'Clients',\n  /**\n   * @description Text in Service Workers View of the Application panel. Label for a section of the\n   * tool which allows the developer to send a test push message to the service worker.\n   */\n  pushString: 'Push',\n  /**\n   * @description Text in Service Workers View of the Application panel. Placeholder text for where\n   * the user can type in the data they want to push to the service worker i.e. the 'push data'. Noun\n   * phrase.\n   */\n  pushData: 'Push data',\n  /**\n   * @description Text in Service Workers View of the Application panel\n   */\n  syncString: 'Sync',\n  /**\n   * @description Placeholder text for the input box where a user is asked for a test tag to sync. This is used as a compound noun, not as a verb.\n   */\n  syncTag: 'Sync tag',\n  /**\n   * @description Text for button in Service Workers View of the Application panel that dispatches a periodicsync event\n   */\n  periodicSync: 'Periodic sync',\n  /**\n   * @description Default tag for a periodicsync event in Service Workers View of the Application panel\n   */\n  periodicSyncTag: 'Periodic sync tag',\n  /**\n   * @description Aria accessible name in Service Workers View of the Application panel\n   * @example {3} PH1\n   */\n  sRegistrationErrors: '{PH1} registration errors',\n  /**\n   * @description Text in Service Workers View of the Application panel. The Date/time that a service\n   * worker version update was received by the webpage.\n   * @example {7/3/2019, 3:38:37 PM} PH1\n   */\n  receivedS: 'Received {PH1}',\n  /**\n   **@description Text in Service Workers View of the Application panel.\n   */\n  routers: 'Routers',\n  /**\n   * @description Text in Service Workers View of the Application panel\n   * @example {example.com} PH1\n   */\n  sDeleted: '{PH1} - deleted',\n  /**\n   * @description Text in Service Workers View of the Application panel\n   * @example {1} PH1\n   * @example {stopped} PH2\n   */\n  sActivatedAndIsS: '#{PH1} activated and is {PH2}',\n  /**\n   * @description Text in Service Workers View of the Application panel\n   */\n  stopString: 'Stop',\n  /**\n   * @description Text in Service Workers View of the Application panel\n   */\n  startString: 'Start',\n  /**\n   * @description Text in Service Workers View of the Application panel. Service workers have\n   * different versions, which are labelled with numbers e.g. version #2. This text indicates that a\n   * particular version is now redundant (it was replaced by a newer version). # means 'number' here.\n   * @example {2} PH1\n   */\n  sIsRedundant: '#{PH1} is redundant',\n  /**\n   * @description Text in Service Workers View of the Application panel\n   * @example {2} PH1\n   */\n  sWaitingToActivate: '#{PH1} waiting to activate',\n  /**\n   * @description Text in Service Workers View of the Application panel\n   * @example {2} PH1\n   */\n  sTryingToInstall: '#{PH1} trying to install',\n  /**\n   * @description Text in Service Workers Update Timeline. Update is a noun.\n   */\n  updateCycle: 'Update Cycle',\n  /**\n   * @description Text of a DOM element in Service Workers View of the Application panel\n   * @example {example.com} PH1\n   */\n  workerS: 'Worker: {PH1}',\n  /**\n   * @description Link text in Service Workers View of the Application panel. When the link is clicked,\n   * the focus is moved to the service worker's client page.\n   */\n  focus: 'focus',\n  /**\n   * @description Link to view all the Service Workers that have been registered.\n   */\n  seeAllRegistrations: 'See all registrations',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ServiceWorkersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet throttleDisabledForDebugging = false;\nexport const setThrottleDisabledForDebugging = (enable: boolean): void => {\n  throttleDisabledForDebugging = enable;\n};\n\nexport class ServiceWorkersView extends UI.Widget.VBox implements\n    SDK.TargetManager.SDKModelObserver<SDK.ServiceWorkerManager.ServiceWorkerManager> {\n  currentWorkersView: UI.ReportView.ReportView;\n  private readonly toolbar: UI.Toolbar.Toolbar;\n  private readonly sections: Map<SDK.ServiceWorkerManager.ServiceWorkerRegistration, Section>;\n  private manager: SDK.ServiceWorkerManager.ServiceWorkerManager|null;\n  private securityOriginManager: SDK.SecurityOriginManager.SecurityOriginManager|null;\n  private readonly sectionToRegistration:\n      WeakMap<UI.ReportView.Section, SDK.ServiceWorkerManager.ServiceWorkerRegistration>;\n  private readonly eventListeners:\n      Map<SDK.ServiceWorkerManager.ServiceWorkerManager, Common.EventTarget.EventDescriptor[]>;\n\n  constructor() {\n    super({\n      jslog: `${VisualLogging.pane('service-workers')}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(serviceWorkersViewStyles);\n\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    this.currentWorkersView = new UI.ReportView.ReportView(i18n.i18n.lockedString('Service workers'));\n    this.currentWorkersView.setBodyScrollable(false);\n    this.contentElement.classList.add('service-worker-list');\n    this.currentWorkersView.show(this.contentElement);\n    this.currentWorkersView.element.classList.add('service-workers-this-origin');\n    this.currentWorkersView.element.setAttribute('jslog', `${VisualLogging.section('this-origin')}`);\n\n    this.toolbar = this.currentWorkersView.createToolbar();\n\n    this.sections = new Map();\n\n    this.manager = null;\n    this.securityOriginManager = null;\n\n    this.sectionToRegistration = new WeakMap();\n\n    const othersDiv = this.contentElement.createChild('div', 'service-workers-other-origin');\n    othersDiv.setAttribute('jslog', `${VisualLogging.section('other-origin')}`);\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    const othersView = new UI.ReportView.ReportView();\n    othersView.setHeaderVisible(false);\n    othersView.show(othersDiv);\n    const othersSection = othersView.appendSection(i18nString(UIStrings.serviceWorkersFromOtherOrigins));\n    const othersSectionRow = othersSection.appendRow();\n    const seeOthers =\n        UI.Fragment\n            .html`<a class=\"devtools-link\" role=\"link\" tabindex=\"0\" href=\"chrome://serviceworker-internals\" target=\"_blank\" style=\"display: inline; cursor: pointer;\">${\n                i18nString(UIStrings.seeAllRegistrations)}</a>`;\n    seeOthers.setAttribute('jslog', `${VisualLogging.link('view-all').track({click: true})}`);\n    self.onInvokeElement(seeOthers, event => {\n      const rootTarget = SDK.TargetManager.TargetManager.instance().rootTarget();\n      rootTarget &&\n          void rootTarget.targetAgent().invoke_createTarget({url: 'chrome://serviceworker-internals?devtools'});\n      event.consume(true);\n    });\n    othersSectionRow.appendChild(seeOthers);\n\n    this.toolbar.appendToolbarItem(\n        MobileThrottling.ThrottlingManager.throttlingManager().createOfflineToolbarCheckbox());\n    const updateOnReloadSetting =\n        Common.Settings.Settings.instance().createSetting('service-worker-update-on-reload', false);\n    updateOnReloadSetting.setTitle(i18nString(UIStrings.updateOnReload));\n    const forceUpdate =\n        new UI.Toolbar.ToolbarSettingCheckbox(updateOnReloadSetting, i18nString(UIStrings.onPageReloadForceTheService));\n    this.toolbar.appendToolbarItem(forceUpdate);\n    const bypassServiceWorkerSetting =\n        Common.Settings.Settings.instance().createSetting('bypass-service-worker', false);\n    bypassServiceWorkerSetting.setTitle(i18nString(UIStrings.bypassForNetwork));\n    const fallbackToNetwork = new UI.Toolbar.ToolbarSettingCheckbox(\n        bypassServiceWorkerSetting, i18nString(UIStrings.bypassTheServiceWorkerAndLoad));\n    this.toolbar.appendToolbarItem(fallbackToNetwork);\n\n    this.eventListeners = new Map();\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.ServiceWorkerManager.ServiceWorkerManager, this);\n    this.updateListVisibility();\n  }\n\n  modelAdded(serviceWorkerManager: SDK.ServiceWorkerManager.ServiceWorkerManager): void {\n    if (serviceWorkerManager.target() !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.manager = serviceWorkerManager;\n    this.securityOriginManager =\n        (serviceWorkerManager.target().model(SDK.SecurityOriginManager.SecurityOriginManager) as\n         SDK.SecurityOriginManager.SecurityOriginManager);\n\n    for (const registration of this.manager.registrations().values()) {\n      this.updateRegistration(registration);\n    }\n\n    this.eventListeners.set(serviceWorkerManager, [\n      this.manager.addEventListener(\n          SDK.ServiceWorkerManager.Events.REGISTRATION_UPDATED, this.registrationUpdated, this),\n      this.manager.addEventListener(\n          SDK.ServiceWorkerManager.Events.REGISTRATION_DELETED, this.registrationDeleted, this),\n      this.securityOriginManager.addEventListener(\n          SDK.SecurityOriginManager.Events.SecurityOriginAdded, this.updateSectionVisibility, this),\n      this.securityOriginManager.addEventListener(\n          SDK.SecurityOriginManager.Events.SecurityOriginRemoved, this.updateSectionVisibility, this),\n    ]);\n  }\n\n  modelRemoved(serviceWorkerManager: SDK.ServiceWorkerManager.ServiceWorkerManager): void {\n    if (!this.manager || this.manager !== serviceWorkerManager) {\n      return;\n    }\n\n    Common.EventTarget.removeEventListeners(this.eventListeners.get(serviceWorkerManager) || []);\n    this.eventListeners.delete(serviceWorkerManager);\n    this.manager = null;\n    this.securityOriginManager = null;\n  }\n\n  private getTimeStamp(registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration): number {\n    const versions = registration.versionsByMode();\n\n    let timestamp: number|undefined = 0;\n\n    const active = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.ACTIVE);\n    const installing = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.INSTALLING);\n    const waiting = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.WAITING);\n    const redundant = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.REDUNDANT);\n\n    if (active) {\n      timestamp = active.scriptResponseTime;\n    } else if (waiting) {\n      timestamp = waiting.scriptResponseTime;\n    } else if (installing) {\n      timestamp = installing.scriptResponseTime;\n    } else if (redundant) {\n      timestamp = redundant.scriptResponseTime;\n    }\n\n    return timestamp || 0;\n  }\n\n  private updateSectionVisibility(): void {\n    let hasThis = false;\n    const movedSections = [];\n    for (const section of this.sections.values()) {\n      const expectedView = this.getReportViewForOrigin(section.registration.securityOrigin);\n      hasThis = hasThis || expectedView === this.currentWorkersView;\n      if (section.section.parentWidget() !== expectedView) {\n        movedSections.push(section);\n      }\n    }\n\n    for (const section of movedSections) {\n      const registration = section.registration;\n      this.removeRegistrationFromList(registration);\n      this.updateRegistration(registration, true);\n    }\n\n    this.currentWorkersView.sortSections((aSection, bSection) => {\n      const aRegistration = this.sectionToRegistration.get(aSection);\n      const bRegistration = this.sectionToRegistration.get(bSection);\n      const aTimestamp = aRegistration ? this.getTimeStamp(aRegistration) : 0;\n      const bTimestamp = bRegistration ? this.getTimeStamp(bRegistration) : 0;\n      // the newest (largest timestamp value) should be the first\n      return bTimestamp - aTimestamp;\n    });\n\n    for (const section of this.sections.values()) {\n      if (section.section.parentWidget() === this.currentWorkersView ||\n          this.isRegistrationVisible(section.registration)) {\n        section.section.showWidget();\n      } else {\n        section.section.hideWidget();\n      }\n    }\n    this.contentElement.classList.toggle('service-worker-has-current', Boolean(hasThis));\n    this.updateListVisibility();\n  }\n\n  private registrationUpdated(\n      event: Common.EventTarget.EventTargetEvent<SDK.ServiceWorkerManager.ServiceWorkerRegistration>): void {\n    this.updateRegistration(event.data);\n    this.gcRegistrations();\n  }\n\n  private gcRegistrations(): void {\n    if (!this.manager || !this.securityOriginManager) {\n      return;\n    }\n    let hasNonDeletedRegistrations = false;\n    const securityOrigins = new Set<string>(this.securityOriginManager.securityOrigins());\n    for (const registration of this.manager.registrations().values()) {\n      if (!securityOrigins.has(registration.securityOrigin) && !this.isRegistrationVisible(registration)) {\n        continue;\n      }\n      if (!registration.canBeRemoved()) {\n        hasNonDeletedRegistrations = true;\n        break;\n      }\n    }\n\n    if (!hasNonDeletedRegistrations) {\n      return;\n    }\n\n    for (const registration of this.manager.registrations().values()) {\n      const visible = securityOrigins.has(registration.securityOrigin) || this.isRegistrationVisible(registration);\n      if (!visible && registration.canBeRemoved()) {\n        this.removeRegistrationFromList(registration);\n      }\n    }\n  }\n\n  private getReportViewForOrigin(origin: string): UI.ReportView.ReportView|null {\n    if (this.securityOriginManager &&\n        (this.securityOriginManager.securityOrigins().includes(origin) ||\n         this.securityOriginManager.unreachableMainSecurityOrigin() === origin)) {\n      return this.currentWorkersView;\n    }\n    return null;\n  }\n\n  private updateRegistration(registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration, skipUpdate?: boolean):\n      void {\n    let section = this.sections.get(registration);\n    if (!section) {\n      const title = registration.scopeURL;\n      const reportView = this.getReportViewForOrigin(registration.securityOrigin);\n      if (!reportView) {\n        return;\n      }\n      const uiSection = reportView.appendSection(title);\n      uiSection.setUiGroupTitle(i18nString(UIStrings.serviceWorkerForS, {PH1: title}));\n      this.sectionToRegistration.set(uiSection, registration);\n      section = new Section((this.manager as SDK.ServiceWorkerManager.ServiceWorkerManager), uiSection, registration);\n      this.sections.set(registration, section);\n    }\n    if (skipUpdate) {\n      return;\n    }\n    this.updateSectionVisibility();\n    section.scheduleUpdate();\n  }\n\n  private registrationDeleted(\n      event: Common.EventTarget.EventTargetEvent<SDK.ServiceWorkerManager.ServiceWorkerRegistration>): void {\n    this.removeRegistrationFromList(event.data);\n  }\n\n  private removeRegistrationFromList(registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration): void {\n    const section = this.sections.get(registration);\n    if (section) {\n      section.section.detach();\n    }\n    this.sections.delete(registration);\n    this.updateSectionVisibility();\n  }\n\n  private isRegistrationVisible(registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration): boolean {\n    if (!registration.scopeURL) {\n      return true;\n    }\n    return false;\n  }\n\n  private updateListVisibility(): void {\n    this.contentElement.classList.toggle('service-worker-list-empty', this.sections.size === 0);\n  }\n}\n\nexport class Section {\n  private manager: SDK.ServiceWorkerManager.ServiceWorkerManager;\n  section: UI.ReportView.Section;\n  registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration;\n  private fingerprint: symbol|null;\n  private readonly pushNotificationDataSetting: Common.Settings.Setting<string>;\n  private readonly syncTagNameSetting: Common.Settings.Setting<string>;\n  private readonly periodicSyncTagNameSetting: Common.Settings.Setting<string>;\n  private readonly updateCycleView: ServiceWorkerUpdateCycleView;\n  private readonly routerView: ApplicationComponents.ServiceWorkerRouterView.ServiceWorkerRouterView;\n  private readonly networkRequests: Buttons.Button.Button;\n  private readonly updateButton: Buttons.Button.Button;\n  private readonly deleteButton: Buttons.Button.Button;\n  private sourceField: Element;\n  private readonly statusField: Element;\n  private readonly clientsField: Element;\n  private readonly clientInfoCache: Map<string, Protocol.Target.TargetInfo>;\n  private readonly throttler: Common.Throttler.Throttler;\n  private updateCycleField?: Element;\n  private routerField?: Element;\n\n  constructor(\n      manager: SDK.ServiceWorkerManager.ServiceWorkerManager, section: UI.ReportView.Section,\n      registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration) {\n    this.manager = manager;\n    this.section = section;\n    this.registration = registration;\n    this.fingerprint = null;\n    this.pushNotificationDataSetting = Common.Settings.Settings.instance().createLocalSetting(\n        'push-data', i18nString(UIStrings.testPushMessageFromDevtools));\n    this.syncTagNameSetting =\n        Common.Settings.Settings.instance().createLocalSetting('sync-tag-name', 'test-tag-from-devtools');\n    this.periodicSyncTagNameSetting =\n        Common.Settings.Settings.instance().createLocalSetting('periodic-sync-tag-name', 'test-tag-from-devtools');\n\n    this.updateCycleView = new ServiceWorkerUpdateCycleView(registration);\n    this.routerView = new ApplicationComponents.ServiceWorkerRouterView.ServiceWorkerRouterView();\n    this.networkRequests = new Buttons.Button.Button();\n    this.networkRequests.data = {\n      variant: Buttons.Button.Variant.TEXT,\n      title: i18nString(UIStrings.networkRequests),\n      jslogContext: 'show-network-requests',\n    };\n    this.networkRequests.textContent = i18nString(UIStrings.networkRequests);\n    this.networkRequests.addEventListener('click', this.networkRequestsClicked.bind(this));\n    this.section.appendButtonToHeader(this.networkRequests);\n    this.updateButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.update), this.updateButtonClicked.bind(this),\n        {variant: Buttons.Button.Variant.TEXT, title: i18nString(UIStrings.update), jslogContext: 'update'});\n    this.section.appendButtonToHeader(this.updateButton);\n    this.deleteButton =\n        UI.UIUtils.createTextButton(i18nString(UIStrings.unregister), this.unregisterButtonClicked.bind(this), {\n          variant: Buttons.Button.Variant.TEXT,\n          title: i18nString(UIStrings.unregisterServiceWorker),\n          jslogContext: 'unregister',\n        });\n    this.section.appendButtonToHeader(this.deleteButton);\n\n    // Preserve the order.\n    this.sourceField = this.wrapWidget(this.section.appendField(i18nString(UIStrings.source)));\n    this.statusField = this.wrapWidget(this.section.appendField(i18nString(UIStrings.status)));\n    this.clientsField = this.wrapWidget(this.section.appendField(i18nString(UIStrings.clients)));\n    this.createSyncNotificationField(\n        i18nString(UIStrings.pushString), this.pushNotificationDataSetting.get(), i18nString(UIStrings.pushData),\n        this.push.bind(this), 'push-message');\n    this.createSyncNotificationField(\n        i18nString(UIStrings.syncString), this.syncTagNameSetting.get(), i18nString(UIStrings.syncTag),\n        this.sync.bind(this), 'sync-tag');\n    this.createSyncNotificationField(\n        i18nString(UIStrings.periodicSync), this.periodicSyncTagNameSetting.get(),\n        i18nString(UIStrings.periodicSyncTag), tag => this.periodicSync(tag), 'periodic-sync-tag');\n    this.createUpdateCycleField();\n    this.maybeCreateRouterField();\n\n    this.clientInfoCache = new Map();\n    this.throttler = new Common.Throttler.Throttler(500);\n  }\n\n  private createSyncNotificationField(\n      label: string, initialValue: string, placeholder: string, callback: (arg0: string) => void,\n      jslogContext: string): void {\n    const form =\n        this.wrapWidget(this.section.appendField(label)).createChild('form', 'service-worker-editor-with-button');\n    const editor = UI.UIUtils.createInput('source-code service-worker-notification-editor');\n    editor.setAttribute('jslog', `${VisualLogging.textField().track({change: true}).context(jslogContext)}`);\n    form.appendChild(editor);\n    const button = UI.UIUtils.createTextButton(label, undefined, {jslogContext});\n    button.type = 'submit';\n    form.appendChild(button);\n\n    editor.value = initialValue;\n    editor.placeholder = placeholder;\n    UI.ARIAUtils.setLabel(editor, label);\n\n    form.addEventListener('submit', (e: Event) => {\n      callback(editor.value || '');\n      e.consume(true);\n    });\n  }\n\n  scheduleUpdate(): void {\n    if (throttleDisabledForDebugging) {\n      void this.update();\n      return;\n    }\n    void this.throttler.schedule(this.update.bind(this));\n  }\n\n  private addVersion(versionsStack: Element, icon: string, label: string): Element {\n    const installingEntry = versionsStack.createChild('div', 'service-worker-version');\n    installingEntry.createChild('div', icon);\n    const statusString = installingEntry.createChild('span', 'service-worker-version-string');\n    statusString.textContent = label;\n    UI.ARIAUtils.markAsAlert(statusString);\n    return installingEntry;\n  }\n\n  private updateClientsField(version: SDK.ServiceWorkerManager.ServiceWorkerVersion): void {\n    this.clientsField.removeChildren();\n    this.section.setFieldVisible(i18nString(UIStrings.clients), Boolean(version.controlledClients.length));\n    for (const client of version.controlledClients) {\n      const clientLabelText = this.clientsField.createChild('div', 'service-worker-client');\n      const info = this.clientInfoCache.get(client);\n      if (info) {\n        this.updateClientInfo(clientLabelText, info);\n      }\n      void this.manager.target()\n          .targetAgent()\n          .invoke_getTargetInfo({targetId: client})\n          .then(this.onClientInfo.bind(this, clientLabelText));\n    }\n  }\n\n  private updateSourceField(version: SDK.ServiceWorkerManager.ServiceWorkerVersion): void {\n    this.sourceField.removeChildren();\n    const fileName = Common.ParsedURL.ParsedURL.extractName(version.scriptURL);\n    const name = this.sourceField.createChild('div', 'report-field-value-filename');\n    const link = Components.Linkifier.Linkifier.linkifyURL(\n        version.scriptURL, ({text: fileName} as Components.Linkifier.LinkifyURLOptions));\n    link.tabIndex = 0;\n    link.setAttribute('jslog', `${VisualLogging.link('source-location').track({click: true})}`);\n    name.appendChild(link);\n    if (this.registration.errors.length) {\n      const errorsLabel = UI.UIUtils.createIconLabel({\n        title: String(this.registration.errors.length),\n        iconName: 'cross-circle-filled',\n        color: 'var(--icon-error)',\n      });\n      errorsLabel.classList.add('devtools-link', 'link');\n      errorsLabel.tabIndex = 0;\n      UI.ARIAUtils.setLabel(\n          errorsLabel, i18nString(UIStrings.sRegistrationErrors, {PH1: this.registration.errors.length}));\n      self.onInvokeElement(errorsLabel, () => Common.Console.Console.instance().show());\n      name.appendChild(errorsLabel);\n    }\n    if (version.scriptResponseTime !== undefined) {\n      this.sourceField.createChild('div', 'report-field-value-subtitle').textContent =\n          i18nString(UIStrings.receivedS, {PH1: new Date(version.scriptResponseTime * 1000).toLocaleString()});\n    }\n  }\n\n  private update(): Promise<void> {\n    const fingerprint = this.registration.fingerprint();\n    if (fingerprint === this.fingerprint) {\n      return Promise.resolve();\n    }\n    this.fingerprint = fingerprint;\n\n    this.section.setHeaderButtonsState(this.registration.isDeleted);\n\n    const versions = this.registration.versionsByMode();\n    const scopeURL = this.registration.scopeURL;\n    const title = this.registration.isDeleted ? i18nString(UIStrings.sDeleted, {PH1: scopeURL}) : scopeURL;\n    this.section.setTitle(title);\n\n    const active = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.ACTIVE);\n    const waiting = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.WAITING);\n    const installing = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.INSTALLING);\n    const redundant = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.REDUNDANT);\n\n    this.statusField.removeChildren();\n    const versionsStack = this.statusField.createChild('div', 'service-worker-version-stack');\n    versionsStack.createChild('div', 'service-worker-version-stack-bar');\n\n    if (active) {\n      this.updateSourceField(active);\n      const localizedRunningStatus =\n          SDK.ServiceWorkerManager.ServiceWorkerVersion.RunningStatus[active.currentState.runningStatus]();\n      // TODO(l10n): Don't concatenate strings here.\n      const activeEntry = this.addVersion(\n          versionsStack, 'service-worker-active-circle',\n          i18nString(UIStrings.sActivatedAndIsS, {PH1: active.id, PH2: localizedRunningStatus}));\n\n      if (active.isRunning() || active.isStarting()) {\n        const stopButton = UI.UIUtils.createTextButton(\n            i18nString(UIStrings.stopString), this.stopButtonClicked.bind(this, active.id), {jslogContext: 'stop'});\n        activeEntry.appendChild(stopButton);\n      } else if (active.isStartable()) {\n        const startButton = UI.UIUtils.createTextButton(\n            i18nString(UIStrings.startString), this.startButtonClicked.bind(this), {jslogContext: 'start'});\n        activeEntry.appendChild(startButton);\n      }\n      this.updateClientsField(active);\n      this.maybeCreateRouterField();\n    } else if (redundant) {\n      this.updateSourceField(redundant);\n      this.addVersion(\n          versionsStack, 'service-worker-redundant-circle', i18nString(UIStrings.sIsRedundant, {PH1: redundant.id}));\n      this.updateClientsField(redundant);\n    }\n\n    if (waiting) {\n      const waitingEntry = this.addVersion(\n          versionsStack, 'service-worker-waiting-circle', i18nString(UIStrings.sWaitingToActivate, {PH1: waiting.id}));\n      const skipWaitingButton =\n          UI.UIUtils.createTextButton(i18n.i18n.lockedString('skipWaiting'), this.skipButtonClicked.bind(this), {\n            title: i18n.i18n.lockedString('skipWaiting'),\n            jslogContext: 'skip-waiting',\n          });\n      waitingEntry.appendChild(skipWaitingButton);\n      if (waiting.scriptResponseTime !== undefined) {\n        waitingEntry.createChild('div', 'service-worker-subtitle').textContent =\n            i18nString(UIStrings.receivedS, {PH1: new Date(waiting.scriptResponseTime * 1000).toLocaleString()});\n      }\n    }\n    if (installing) {\n      const installingEntry = this.addVersion(\n          versionsStack, 'service-worker-installing-circle',\n          i18nString(UIStrings.sTryingToInstall, {PH1: installing.id}));\n      if (installing.scriptResponseTime !== undefined) {\n        installingEntry.createChild('div', 'service-worker-subtitle').textContent = i18nString(UIStrings.receivedS, {\n          PH1: new Date(installing.scriptResponseTime * 1000).toLocaleString(),\n        });\n      }\n    }\n\n    this.updateCycleView.refresh();\n\n    return Promise.resolve();\n  }\n\n  private unregisterButtonClicked(): void {\n    this.manager.deleteRegistration(this.registration.id);\n  }\n\n  private createUpdateCycleField(): void {\n    this.updateCycleField = this.wrapWidget(this.section.appendField(i18nString(UIStrings.updateCycle)));\n    this.updateCycleField.appendChild(this.updateCycleView.tableElement);\n  }\n\n  private maybeCreateRouterField(): void {\n    const versions = this.registration.versionsByMode();\n    const active = versions.get(SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.ACTIVE);\n    const title = i18nString(UIStrings.routers);\n    if (active?.routerRules && active.routerRules.length > 0) {\n      // If there is at least one registered rule in the active version, append the router filed.\n      if (!this.routerField) {\n        this.routerField = this.wrapWidget(this.section.appendField(title));\n      }\n      if (!this.routerField.lastElementChild) {\n        this.routerField.appendChild(this.routerView);\n      }\n      this.routerView.update(active.routerRules);\n    } else {\n      // If no active worker or no registered rules, remove the field.\n      this.section.removeField(title);\n      this.routerField = undefined;\n    }\n  }\n\n  private updateButtonClicked(): void {\n    void this.manager.updateRegistration(this.registration.id);\n  }\n\n  private networkRequestsClicked(): void {\n    void Common.Revealer.reveal(NetworkForward.UIFilter.UIRequestFilter.filters([\n      {\n        filterType: NetworkForward.UIFilter.FilterType.Is,\n        filterValue: NetworkForward.UIFilter.IsFilterType.SERVICE_WORKER_INTERCEPTED,\n      },\n    ]));\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ServiceWorkerNetworkRequestClicked);\n  }\n\n  private push(data: string): void {\n    this.pushNotificationDataSetting.set(data);\n    void this.manager.deliverPushMessage(this.registration.id, data);\n  }\n\n  private sync(tag: string): void {\n    this.syncTagNameSetting.set(tag);\n    void this.manager.dispatchSyncEvent(this.registration.id, tag, true);\n  }\n\n  private periodicSync(tag: string): void {\n    this.periodicSyncTagNameSetting.set(tag);\n    void this.manager.dispatchPeriodicSyncEvent(this.registration.id, tag);\n  }\n\n  private onClientInfo(element: Element, targetInfoResponse: Protocol.Target.GetTargetInfoResponse): void {\n    const targetInfo = targetInfoResponse.targetInfo;\n    if (!targetInfo) {\n      return;\n    }\n    this.clientInfoCache.set(targetInfo.targetId, targetInfo);\n    this.updateClientInfo(element, targetInfo);\n  }\n\n  private updateClientInfo(element: Element, targetInfo: Protocol.Target.TargetInfo): void {\n    if (targetInfo.type !== 'page' && targetInfo.type === 'iframe') {\n      const clientString = element.createChild('span', 'service-worker-client-string');\n      UI.UIUtils.createTextChild(clientString, i18nString(UIStrings.workerS, {PH1: targetInfo.url}));\n      return;\n    }\n    element.removeChildren();\n    const clientString = element.createChild('span', 'service-worker-client-string');\n    UI.UIUtils.createTextChild(clientString, targetInfo.url);\n\n    const focusButton = new Buttons.Button.Button();\n    focusButton.data = {\n      iconName: 'select-element',\n      variant: Buttons.Button.Variant.ICON,\n      size: Buttons.Button.Size.SMALL,\n      title: i18nString(UIStrings.focus),\n      jslogContext: 'client-focus',\n    };\n    focusButton.className = 'service-worker-client-focus-link';\n    focusButton.addEventListener('click', this.activateTarget.bind(this, targetInfo.targetId));\n    element.appendChild(focusButton);\n  }\n\n  private activateTarget(targetId: Protocol.Target.TargetID): void {\n    void this.manager.target().targetAgent().invoke_activateTarget({targetId});\n  }\n\n  private startButtonClicked(): void {\n    void this.manager.startWorker(this.registration.scopeURL);\n  }\n\n  private skipButtonClicked(): void {\n    void this.manager.skipWaiting(this.registration.scopeURL);\n  }\n\n  private stopButtonClicked(versionId: string): void {\n    void this.manager.stopWorker(versionId);\n  }\n\n  private wrapWidget(container: Element): Element {\n    const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(container, {\n      cssFile: [\n        serviceWorkersViewStyles,\n        /* These styles are for the timing table in serviceWorkerUpdateCycleView but this is the widget that it is rendered\n           * inside so we are registering the files here. */\n        serviceWorkerUpdateCycleViewStyles,\n      ],\n    });\n    const contentElement = document.createElement('div');\n    shadowRoot.appendChild(contentElement);\n    return contentElement;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2015 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.service-worker-version {\n  display: flex;\n  /* The status string can be long, allow this line of the report to wrap. */\n  align-items: center;\n  flex-wrap: wrap;\n\n  devtools-button {\n    margin-left: var(--sys-size-3);\n  }\n}\n\n.service-worker-version-stack {\n  position: relative;\n}\n\n.service-worker-version-stack-bar {\n  position: absolute;\n  top: 10px;\n  bottom: 20px;\n  left: 4px;\n  content: \"\";\n  border-left: 1px solid var(--sys-color-divider);\n  z-index: 0;\n}\n\n.service-worker-version:not(:last-child) {\n  margin-bottom: 7px;\n}\n\n.service-worker-version-string {\n  /* This label contains important information that needs to be legible at all\n     times. Don't shrink it. */\n  flex-shrink: 0;\n}\n\n.service-worker-active-circle,\n.service-worker-redundant-circle,\n.service-worker-waiting-circle,\n.service-worker-installing-circle {\n  position: relative;\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  z-index: 10;\n  margin-right: 5px;\n  border-radius: 50%;\n  border: 1px solid var(--sys-color-token-subtle);\n  align-self: center;\n  /* The circle should not shrink, to avoid risking becoming invisible. */\n  flex-shrink: 0;\n}\n\n.service-worker-active-circle {\n  background-color: var(--sys-color-green-bright);\n}\n\n.service-worker-waiting-circle {\n  background-color: var(--sys-color-yellow-bright);\n}\n\n.service-worker-installing-circle {\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.service-worker-redundant-circle {\n  background-color: var(--sys-color-neutral-bright);\n}\n\n.service-worker-subtitle {\n  padding-left: 14px;\n  line-height: 14px;\n  color: var(--sys-color-state-disabled);\n}\n\n.link {\n  margin-left: 7px;\n}\n\n.service-worker-editor-with-button {\n  align-items: baseline;\n  display: flex;\n}\n\n.service-worker-notification-editor {\n  border: 1px solid var(--sys-color-divider);\n  display: flex;\n  flex: auto;\n  margin-right: 4px;\n  max-width: 400px;\n  min-width: 80px;\n}\n\n.report-field-value {\n  white-space: normal;\n}\n\n.report-field-value-filename,\n.service-worker-client-string {\n  max-width: 400px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.report-field-value-filename {\n  display: contents;\n}\n\n.report-field-value-subtitle {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.service-worker-client {\n  display: flex;\n}\n\n.service-worker-client-focus-link {\n  flex: none;\n  margin-left: 2px;\n  align-self: center;\n}\n\n.service-worker-notification-editor.source-code {\n  /** Simulate CodeMirror that is shown above */\n  padding: 4px;\n}\n\n.service-worker-list {\n  background-color: var(--sys-color-cdt-base-container);\n  overflow: auto;\n}\n\n.service-workers-this-origin {\n  flex-shrink: 0;\n  flex-grow: 0;\n}\n\n.devtools-link {\n  line-height: 14px;\n  align-self: center;\n  padding: 1px;\n}\n\nbutton.link {\n  padding: 1px;\n}\n\nbutton.link:focus-visible {\n  background-color: inherit;\n}\n\n/*# sourceURL=${import.meta.resolve('./serviceWorkersView.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2020 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n.resource-service-worker-update-view {\n  display: block;\n  margin: 6px;\n  color: var(--sys-color-on-surface-subtle);\n  overflow: auto;\n}\n\n.service-worker-update-timing-table {\n  border: 1px solid var(--sys-color-divider);\n  border-spacing: 0;\n  padding-left: 10px;\n  padding-right: 10px;\n  line-height: initial;\n  table-layout: auto;\n  overflow: hidden;\n}\n\n.service-worker-update-timing-row {\n  position: relative;\n  height: 20px;\n  overflow: hidden;\n  min-width: 80px;\n}\n\n.service-worker-update-timing-bar {\n  position: absolute;\n  min-width: 1px;\n  top: 0;\n  bottom: 0;\n}\n\n.service-worker-update-timing-bar-clickable::before {\n  user-select: none;\n  mask-image: var(--image-file-triangle-right);\n  float: left;\n  width: 14px;\n  height: 14px;\n  margin-right: 2px;\n  content: \"\";\n  position: relative;\n  background-color: var(--icon-default);\n  transition: transform 200ms;\n}\n\n.service-worker-update-timing-bar-clickable {\n  position: relative;\n  left: -12px;\n}\n\n.service-worker-update-timing-bar-clickable:focus-visible {\n  background-color: var(--sys-color-state-focus-highlight);\n}\n\n.service-worker-update-timing-bar-clickable[aria-checked=\"true\"]::before {\n  transform: rotate(90deg);\n}\n\n.service-worker-update-timing-bar-details-collapsed {\n  display: none;\n}\n\n.service-worker-update-timing-bar-details-expanded {\n  display: table-row;\n}\n\n.service-worker-update-timing-bar-details:focus-visible {\n  background-color: var(--sys-color-state-focus-highlight);\n}\n\n.service-worker-update-timing-bar.activate {\n  top: 5px;\n  height: 10px;\n  background-color: var(--sys-color-yellow-bright);\n}\n\n.service-worker-update-timing-bar.wait {\n  top: 5px;\n  height: 10px;\n  background-color: var(--sys-color-purple-bright);\n}\n\n.service-worker-update-timing-bar.install {\n  top: 5px;\n  height: 10px;\n  background-color: var(--sys-color-cyan-bright);\n}\n\n.service-worker-update-timing-table > tr > td {\n  padding: 4px 0;\n  padding-right: 10px;\n}\n\ntable.service-worker-update-timing-table > tr.service-worker-update-timing-table-header > td {\n  border-top: 5px solid transparent;\n  color: var(--sys-color-token-subtle);\n}\n\ntable.service-worker-update-timing-table > tr.service-worker-update-timing-bar-details > td:first-child {\n  padding-left: 12px;\n}\n\ntable.service-worker-update-timing-table > tr.service-worker-update-timeline > td:first-child {\n  padding-left: 12px;\n}\n\n/*# sourceURL=${import.meta.resolve('./serviceWorkerUpdateCycleView.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Indexed DBViews of the Application panel\n   */\n  version: 'Version',\n  /**\n   * @description Table heading for Service Workers update information. Update is a noun.\n   */\n  updateActivity: 'Update Activity',\n  /**\n   * @description Title for the timeline tab.\n   */\n  timeline: 'Timeline',\n  /**\n   * @description Text in Service Workers Update Life Cycle\n   * @example {2} PH1\n   */\n  startTimeS: 'Start time: {PH1}',\n  /**\n   * @description Text for end time of an event\n   * @example {2} PH1\n   */\n  endTimeS: 'End time: {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ServiceWorkerUpdateCycleView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ServiceWorkerUpdateCycleView {\n  private registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration;\n  private rows: HTMLTableRowElement[];\n  private selectedRowIndex: number;\n  tableElement: HTMLElement;\n  constructor(registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration) {\n    this.registration = registration;\n    this.rows = [];\n    this.selectedRowIndex = -1;\n    this.tableElement = document.createElement('table');\n    this.createTimingTable();\n  }\n\n  calculateServiceWorkerUpdateRanges(): ServiceWorkerUpdateRange[] {\n    function addRange(ranges: ServiceWorkerUpdateRange[], range: ServiceWorkerUpdateRange): void {\n      if (range.start < Number.MAX_VALUE && range.start <= range.end) {\n        ranges.push(range);\n      }\n    }\n\n    /**\n     * Add ranges representing Install, Wait or Activate of a sw version represented by id.\n     */\n    function addNormalizedRanges(\n        ranges: ServiceWorkerUpdateRange[], id: string, startInstallTime: number, endInstallTime: number,\n        startActivateTime: number, endActivateTime: number,\n        status: Protocol.ServiceWorker.ServiceWorkerVersionStatus): void {\n      addRange(ranges, {id, phase: ServiceWorkerUpdateNames.INSTALL, start: startInstallTime, end: endInstallTime});\n      if (status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Activating ||\n          status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Activated ||\n          status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Redundant) {\n        addRange(ranges, {\n          id,\n          phase: ServiceWorkerUpdateNames.WAIT,\n          start: endInstallTime,\n          end: startActivateTime,\n        });\n        addRange(\n            ranges, {id, phase: ServiceWorkerUpdateNames.ACTIVATE, start: startActivateTime, end: endActivateTime});\n      }\n    }\n\n    function rangesForVersion(version: SDK.ServiceWorkerManager.ServiceWorkerVersion): ServiceWorkerUpdateRange[] {\n      let state: SDK.ServiceWorkerManager.ServiceWorkerVersionState|null = version.currentState;\n      let endActivateTime = 0;\n      let beginActivateTime = 0;\n      let endInstallTime = 0;\n      let beginInstallTime = 0;\n      const currentStatus = state.status;\n      if (currentStatus === Protocol.ServiceWorker.ServiceWorkerVersionStatus.New) {\n        return [];\n      }\n\n      while (state) {\n        // find the earliest timestamp of different stage on record.\n        if (state.status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Activated) {\n          endActivateTime = state.lastUpdatedTimestamp;\n        } else if (state.status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Activating) {\n          if (endActivateTime === 0) {\n            endActivateTime = state.lastUpdatedTimestamp;\n          }\n          beginActivateTime = state.lastUpdatedTimestamp;\n        } else if (state.status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Installed) {\n          endInstallTime = state.lastUpdatedTimestamp;\n        } else if (state.status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Installing) {\n          if (endInstallTime === 0) {\n            endInstallTime = state.lastUpdatedTimestamp;\n          }\n          beginInstallTime = state.lastUpdatedTimestamp;\n        }\n        state = state.previousState;\n      }\n      const ranges: ServiceWorkerUpdateRange[] = [];\n      addNormalizedRanges(\n          ranges, version.id, beginInstallTime, endInstallTime, beginActivateTime, endActivateTime, currentStatus);\n      return ranges;\n    }\n\n    const versions = this.registration.versionsByMode();\n    const modes = [\n      SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.ACTIVE,\n      SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.WAITING,\n      SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.INSTALLING,\n      SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.REDUNDANT,\n    ];\n\n    for (const mode of modes) {\n      const version = versions.get(mode);\n      if (version) {\n        const ranges = rangesForVersion(version);\n        return ranges;\n      }\n    }\n\n    return [];\n  }\n\n  private createTimingTable(): void {\n    this.tableElement.classList.add('service-worker-update-timing-table');\n    this.tableElement.setAttribute('jslog', `${VisualLogging.tree('update-timing-table')}`);\n    const timeRanges = this.calculateServiceWorkerUpdateRanges();\n    this.updateTimingTable(timeRanges);\n  }\n\n  private createTimingTableHead(): void {\n    const serverHeader = this.tableElement.createChild('tr', 'service-worker-update-timing-table-header');\n    UI.UIUtils.createTextChild(serverHeader.createChild('td'), i18nString(UIStrings.version));\n    UI.UIUtils.createTextChild(serverHeader.createChild('td'), i18nString(UIStrings.updateActivity));\n    UI.UIUtils.createTextChild(serverHeader.createChild('td'), i18nString(UIStrings.timeline));\n  }\n\n  private removeRows(): void {\n    const rows = this.tableElement.getElementsByTagName('tr');\n    while (rows[0]) {\n      if (rows[0].parentNode) {\n        rows[0].parentNode.removeChild(rows[0]);\n      }\n    }\n    this.rows = [];\n  }\n\n  private updateTimingTable(timeRanges: ServiceWorkerUpdateRange[]): void {\n    this.selectedRowIndex = -1;\n    this.removeRows();\n    this.createTimingTableHead();\n    const timeRangeArray = timeRanges;\n    if (timeRangeArray.length === 0) {\n      return;\n    }\n\n    const startTimes = timeRangeArray.map(r => r.start);\n    const endTimes = timeRangeArray.map(r => r.end);\n    const startTime = startTimes.reduce((a, b) => Math.min(a, b));\n    const endTime = endTimes.reduce((a, b) => Math.max(a, b));\n    const scale = 100 / (endTime - startTime);\n\n    for (const range of timeRangeArray) {\n      const phaseName = range.phase;\n\n      const left = (scale * (range.start - startTime));\n      const right = (scale * (endTime - range.end));\n\n      const tr = this.tableElement.createChild('tr', 'service-worker-update-timeline');\n      tr.setAttribute('jslog', `${VisualLogging.treeItem('update-timeline').track({\n                        click: true,\n                        keydown: 'ArrowLeft|ArrowRight|ArrowUp|ArrowDown|Enter|Space',\n                      })}`);\n      this.rows.push(tr);\n      const timingBarVersionElement = tr.createChild('td');\n      UI.UIUtils.createTextChild(timingBarVersionElement, '#' + range.id);\n      timingBarVersionElement.classList.add('service-worker-update-timing-bar-clickable');\n      timingBarVersionElement.setAttribute('tabindex', '0');\n      timingBarVersionElement.setAttribute('role', 'switch');\n      timingBarVersionElement.addEventListener('focus', (event: Event) => {\n        this.onFocus(event);\n      });\n      timingBarVersionElement.setAttribute('jslog', `${VisualLogging.expand('timing-info').track({click: true})}`);\n      UI.ARIAUtils.setChecked(timingBarVersionElement, false);\n      const timingBarTitleElement = tr.createChild('td');\n      UI.UIUtils.createTextChild(timingBarTitleElement, phaseName);\n      const barContainer = tr.createChild('td').createChild('div', 'service-worker-update-timing-row');\n\n      const bar = barContainer.createChild('span', 'service-worker-update-timing-bar ' + phaseName.toLowerCase());\n\n      bar.style.left = left + '%';\n      bar.style.right = right + '%';\n      bar.textContent = '\\u200B';  // Important for 0-time items to have 0 width.\n\n      this.constructUpdateDetails(tr, range);\n    }\n  }\n\n  /**\n   * Detailed information about an update phase. Currently starting and ending time.\n   */\n  private constructUpdateDetails(tr: HTMLElement, range: ServiceWorkerUpdateRange): void {\n    const startRow = this.tableElement.createChild('tr', 'service-worker-update-timing-bar-details');\n    startRow.classList.add('service-worker-update-timing-bar-details-collapsed');\n    const startTimeItem = startRow.createChild('td');\n    startTimeItem.colSpan = 3;\n    const startTime = (new Date(range.start)).toISOString();\n    UI.UIUtils.createTextChild(startTimeItem.createChild('span'), i18nString(UIStrings.startTimeS, {PH1: startTime}));\n    startRow.tabIndex = 0;\n\n    const endRow = this.tableElement.createChild('tr', 'service-worker-update-timing-bar-details');\n    endRow.classList.add('service-worker-update-timing-bar-details-collapsed');\n    const endTimeItem = endRow.createChild('td');\n    endTimeItem.colSpan = 3;\n    const endTime = (new Date(range.end)).toISOString();\n    UI.UIUtils.createTextChild(endTimeItem.createChild('span'), i18nString(UIStrings.endTimeS, {PH1: endTime}));\n    endRow.tabIndex = 0;\n\n    tr.addEventListener('keydown', (event: Event) => {\n      this.onKeydown(event, startRow, endRow);\n    });\n\n    tr.addEventListener('click', (event: Event) => {\n      this.onClick(event, startRow, endRow);\n    });\n  }\n\n  private toggle(startRow: Element, endRow: Element, target: Element, expanded: boolean): void {\n    if (target.classList.contains('service-worker-update-timing-bar-clickable')) {\n      startRow.classList.toggle('service-worker-update-timing-bar-details-collapsed');\n      startRow.classList.toggle('service-worker-update-timing-bar-details-expanded');\n      endRow.classList.toggle('service-worker-update-timing-bar-details-collapsed');\n      endRow.classList.toggle('service-worker-update-timing-bar-details-expanded');\n      UI.ARIAUtils.setChecked(target, !expanded);\n    }\n  }\n\n  private onFocus(event: Event): void {\n    const target = event.target as HTMLElement | null;\n    if (!target) {\n      return;\n    }\n    const tr = target.parentElement as HTMLTableRowElement | null;\n    if (!tr) {\n      return;\n    }\n\n    this.selectedRowIndex = this.rows.indexOf(tr);\n  }\n\n  private onKeydown(event: Event, startRow: HTMLElement, endRow: HTMLElement): void {\n    if (!event.target) {\n      return;\n    }\n    const target: HTMLElement = event.target as HTMLElement;\n    const keyboardEvent = event as KeyboardEvent;\n    const expanded = target.getAttribute('aria-checked') === 'true';\n\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      this.toggle(startRow, endRow, target, expanded);\n      event.preventDefault();\n      return;\n    }\n    if ((!expanded && keyboardEvent.key === 'ArrowRight') || (expanded && keyboardEvent.key === 'ArrowLeft')) {\n      this.toggle(startRow, endRow, target, expanded);\n      event.preventDefault();\n      return;\n    }\n    if (keyboardEvent.key === 'ArrowDown') {\n      if (this.selectedRowIndex >= 0) {\n        this.selectNextRow();\n      } else {\n        this.selectFirstRow();\n      }\n      event.preventDefault();\n    }\n    if (keyboardEvent.key === 'ArrowUp') {\n      if (this.selectedRowIndex >= 0) {\n        this.selectPreviousRow();\n      } else {\n        this.selectLastRow();\n      }\n      event.preventDefault();\n    }\n  }\n\n  private focusRow(row: HTMLTableRowElement): void {\n    row.cells[0].focus();\n  }\n\n  private blurRow(row: HTMLTableRowElement): void {\n    row.cells[0].blur();\n  }\n\n  private selectFirstRow(): void {\n    if (this.rows.length === 0) {\n      return;\n    }\n    this.selectedRowIndex = 0;\n    this.focusRow(this.rows[0]);\n  }\n\n  private selectLastRow(): void {\n    if (this.rows.length === 0) {\n      return;\n    }\n    this.selectedRowIndex = this.rows.length - 1;\n    this.focusRow(this.rows[this.selectedRowIndex]);\n  }\n\n  private selectNextRow(): void {\n    if (this.rows.length === 0) {\n      return;\n    }\n    const previousRowIndex = this.selectedRowIndex;\n    this.selectedRowIndex++;\n    if (this.selectedRowIndex >= this.rows.length) {\n      this.selectedRowIndex = 0;\n    }\n    this.blurRow(this.rows[previousRowIndex]);\n    this.focusRow(this.rows[this.selectedRowIndex]);\n  }\n\n  private selectPreviousRow(): void {\n    if (this.rows.length === 0) {\n      return;\n    }\n    const previousRowIndex = this.selectedRowIndex;\n    this.selectedRowIndex--;\n    if (this.selectedRowIndex < 0) {\n      this.selectedRowIndex = this.rows.length - 1;\n    }\n    this.blurRow(this.rows[previousRowIndex]);\n    this.focusRow(this.rows[this.selectedRowIndex]);\n  }\n\n  private onClick(event: Event, startRow: Element, endRow: Element): void {\n    const tr = event.target as Element;\n    if (!tr) {\n      return;\n    }\n\n    const expanded = tr.getAttribute('aria-checked') === 'true';\n    this.toggle(startRow, endRow, tr, expanded);\n    event.preventDefault();\n  }\n\n  refresh(): void {\n    const timeRanges = this.calculateServiceWorkerUpdateRanges();\n    this.updateTimingTable(timeRanges);\n  }\n}\n\nexport const enum ServiceWorkerUpdateNames {\n  INSTALL = 'Install',\n  WAIT = 'Wait',\n  ACTIVATE = 'Activate',\n}\n\nexport interface ServiceWorkerUpdateRange {\n  id: string;\n  phase: ServiceWorkerUpdateNames;\n  start: number;\n  end: number;\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\nimport {SharedStorageEventsView} from './SharedStorageEventsView.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in SharedStorage Category View of the Application panel\n   */\n  sharedStorage: 'Shared storage',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/SharedStorageListTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SharedStorageListTreeElement extends ApplicationPanelTreeElement {\n  readonly #expandedSetting: Common.Settings.Setting<boolean>;\n  readonly view: SharedStorageEventsView;\n\n  constructor(resourcesPanel: ResourcesPanel, expandedSettingsDefault = false) {\n    super(resourcesPanel, i18nString(UIStrings.sharedStorage), false, 'shared-storage');\n    this.#expandedSetting =\n        Common.Settings.Settings.instance().createSetting('resources-shared-storage-expanded', expandedSettingsDefault);\n    const sharedStorageIcon = IconButton.Icon.create('database');\n    this.setLeadingIcons([sharedStorageIcon]);\n    this.view = new SharedStorageEventsView();\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'shared-storage://' as Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser: boolean|undefined): boolean {\n    super.onselect(selectedByUser);\n    this.resourcesPanel.showView(this.view);\n    return false;\n  }\n\n  override onattach(): void {\n    super.onattach();\n    if (this.#expandedSetting.get()) {\n      this.expand();\n    }\n  }\n\n  override onexpand(): void {\n    this.#expandedSetting.set(true);\n  }\n\n  override oncollapse(): void {\n    this.#expandedSetting.set(false);\n  }\n\n  addEvent(event: Protocol.Storage.SharedStorageAccessedEvent): void {\n    this.view.addEvent(event);\n  }\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ApplicationComponents from './components/components.js';\nimport sharedStorageEventsViewStyles from './sharedStorageEventsView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Placeholder text if no shared storage event has been selected.\n   * Shared storage allows to store and access data that can be shared across different sites.\n   * A shared storage event is for example an access from a site to that storage.\n   */\n  noEventSelected: 'No shared storage event selected',\n  /**\n   * @description Placeholder text instructing the user how to display shared\n   * storage event details.\n   * Shared storage allows to store and access data that can be shared across different sites.\n   * A shared storage event is for example an access from a site to that storage.\n   */\n  clickToDisplayBody: 'Click on any shared storage event to display the event parameters',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/SharedStorageEventsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction eventEquals(\n    a: Protocol.Storage.SharedStorageAccessedEvent, b: Protocol.Storage.SharedStorageAccessedEvent): boolean {\n  return JSON.stringify(a) === JSON.stringify(b);\n}\n\nexport class SharedStorageEventsView extends UI.SplitWidget.SplitWidget {\n  readonly #sharedStorageEventGrid = new ApplicationComponents.SharedStorageAccessGrid.SharedStorageAccessGrid();\n  #events: Protocol.Storage.SharedStorageAccessedEvent[] = [];\n  #noDisplayView: UI.Widget.VBox;\n  #defaultId: Protocol.Page.FrameId = '' as Protocol.Page.FrameId;\n\n  constructor() {\n    super(/* isVertical */ false, /* secondIsSidebar: */ true);\n\n    this.element.setAttribute('jslog', `${VisualLogging.pane('shared-storage-events')}`);\n\n    this.#noDisplayView =\n        new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.noEventSelected), i18nString(UIStrings.clickToDisplayBody));\n    this.#noDisplayView.setMinimumSize(0, 40);\n    this.#sharedStorageEventGrid.setMinimumSize(0, 80);\n    this.#sharedStorageEventGrid.onSelect = this.#onFocus.bind(this);\n\n    this.setMainWidget(this.#sharedStorageEventGrid);\n    this.setSidebarWidget(this.#noDisplayView);\n    this.hideSidebar();\n\n    this.#getMainFrameResourceTreeModel()?.addEventListener(\n        SDK.ResourceTreeModel.Events.PrimaryPageChanged, this.clearEvents, this);\n  }\n\n  #getMainFrameResourceTreeModel(): SDK.ResourceTreeModel.ResourceTreeModel|null {\n    const primaryPageTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    return primaryPageTarget?.model(SDK.ResourceTreeModel.ResourceTreeModel) || null;\n  }\n\n  #getMainFrame(): SDK.ResourceTreeModel.ResourceTreeFrame|null {\n    return this.#getMainFrameResourceTreeModel()?.mainFrame || null;\n  }\n\n  get id(): Protocol.Page.FrameId {\n    return this.#getMainFrame()?.id || this.#defaultId;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    const sidebar = this.sidebarWidget();\n    if (sidebar) {\n      sidebar.registerRequiredCSS(sharedStorageEventsViewStyles);\n    }\n  }\n\n  addEvent(event: Protocol.Storage.SharedStorageAccessedEvent): void {\n    // Only add event if main frame id matches.\n    if (event.mainFrameId !== this.id) {\n      return;\n    }\n\n    // Only add if not already present.\n    if (this.#events.some(t => eventEquals(t, event))) {\n      return;\n    }\n\n    if (this.showMode() !== UI.SplitWidget.ShowMode.BOTH) {\n      this.showBoth();\n    }\n\n    this.#events.push(event);\n    this.#sharedStorageEventGrid.events = this.#events;\n  }\n\n  clearEvents(): void {\n    this.#events = [];\n    this.#sharedStorageEventGrid.events = this.#events;\n    this.setSidebarWidget(this.#noDisplayView);\n    this.hideSidebar();\n  }\n\n  #onFocus(event: Protocol.Storage.SharedStorageAccessedEvent): void {\n    const jsonView = SourceFrame.JSONView.JSONView.createViewSync(event);\n    jsonView.setMinimumSize(0, 40);\n    this.setSidebarWidget(jsonView);\n  }\n\n  setDefaultIdForTesting(id: Protocol.Page.FrameId): void {\n    this.#defaultId = id;\n  }\n\n  getEventsForTesting(): Protocol.Storage.SharedStorageAccessedEvent[] {\n    return this.#events;\n  }\n\n  getSharedStorageAccessGridForTesting(): ApplicationComponents.SharedStorageAccessGrid.SharedStorageAccessGrid {\n    return this.#sharedStorageEventGrid;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2022 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\ndevtools-shared-storage-access-grid {\n  overflow: auto;\n}\n\n/*# sourceURL=${import.meta.resolve('./sharedStorageEventsView.css')} */`;", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nexport class SharedStorageForOrigin extends Common.ObjectWrapper.ObjectWrapper<SharedStorageForOrigin.EventTypes> {\n  readonly #model: SharedStorageModel;\n  readonly #securityOrigin: string;\n\n  constructor(model: SharedStorageModel, securityOrigin: string) {\n    super();\n    this.#model = model;\n    this.#securityOrigin = securityOrigin;\n  }\n\n  get securityOrigin(): string {\n    return this.#securityOrigin;\n  }\n\n  async getMetadata(): Promise<Protocol.Storage.SharedStorageMetadata|null> {\n    return await this.#model.storageAgent.invoke_getSharedStorageMetadata({ownerOrigin: this.securityOrigin})\n        .then(({metadata}) => metadata);\n  }\n\n  async getEntries(): Promise<Protocol.Storage.SharedStorageEntry[]|null> {\n    return await this.#model.storageAgent.invoke_getSharedStorageEntries({ownerOrigin: this.securityOrigin})\n        .then(({entries}) => entries);\n  }\n\n  async setEntry(key: string, value: string, ignoreIfPresent: boolean): Promise<void> {\n    await this.#model.storageAgent.invoke_setSharedStorageEntry(\n        {ownerOrigin: this.securityOrigin, key, value, ignoreIfPresent});\n  }\n\n  async deleteEntry(key: string): Promise<void> {\n    await this.#model.storageAgent.invoke_deleteSharedStorageEntry({ownerOrigin: this.securityOrigin, key});\n  }\n\n  async clear(): Promise<void> {\n    await this.#model.storageAgent.invoke_clearSharedStorageEntries({ownerOrigin: this.securityOrigin});\n  }\n\n  async resetBudget(): Promise<void> {\n    await this.#model.storageAgent.invoke_resetSharedStorageBudget({ownerOrigin: this.securityOrigin});\n  }\n}\n\nexport namespace SharedStorageForOrigin {\n  export const enum Events {\n    SHARED_STORAGE_CHANGED = 'SharedStorageChanged',\n  }\n\n  export interface SharedStorageChangedEvent {\n    accessTime: Protocol.Network.TimeSinceEpoch;\n    scope: Protocol.Storage.SharedStorageAccessScope;\n    method: Protocol.Storage.SharedStorageAccessMethod;\n    mainFrameId: Protocol.Page.FrameId;\n    ownerSite: string;\n    params: Protocol.Storage.SharedStorageAccessParams;\n  }\n\n  export interface EventTypes {\n    [Events.SHARED_STORAGE_CHANGED]: SharedStorageChangedEvent;\n  }\n}\n\nexport class SharedStorageModel extends SDK.SDKModel.SDKModel<EventTypes> implements\n    ProtocolProxyApi.StorageDispatcher {\n  readonly #securityOriginManager: SDK.SecurityOriginManager.SecurityOriginManager;\n  #storages: Map<string, SharedStorageForOrigin>;\n  readonly storageAgent: ProtocolProxyApi.StorageApi;\n  #enabled: boolean;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n    target.registerStorageDispatcher(this);\n    this.#securityOriginManager = target.model(SDK.SecurityOriginManager.SecurityOriginManager) as\n        SDK.SecurityOriginManager.SecurityOriginManager;\n    this.#storages = new Map();\n    this.storageAgent = target.storageAgent();\n    this.#enabled = false;\n  }\n\n  async enable(): Promise<void> {\n    if (this.#enabled) {\n      return;\n    }\n\n    this.#securityOriginManager.addEventListener(\n        SDK.SecurityOriginManager.Events.SecurityOriginAdded, this.#securityOriginAdded, this);\n    this.#securityOriginManager.addEventListener(\n        SDK.SecurityOriginManager.Events.SecurityOriginRemoved, this.#securityOriginRemoved, this);\n\n    await this.storageAgent.invoke_setSharedStorageTracking({enable: true});\n    this.#addAllOrigins();\n    this.#enabled = true;\n  }\n\n  disable(): void {\n    if (!this.#enabled) {\n      return;\n    }\n\n    this.#securityOriginManager.removeEventListener(\n        SDK.SecurityOriginManager.Events.SecurityOriginAdded, this.#securityOriginAdded, this);\n    this.#securityOriginManager.removeEventListener(\n        SDK.SecurityOriginManager.Events.SecurityOriginRemoved, this.#securityOriginRemoved, this);\n\n    void this.storageAgent.invoke_setSharedStorageTracking({enable: false});\n    this.#removeAllOrigins();\n    this.#enabled = false;\n  }\n\n  override dispose(): void {\n    this.disable();\n  }\n\n  #addAllOrigins(): void {\n    for (const securityOrigin of this.#securityOriginManager.securityOrigins()) {\n      void this.#maybeAddOrigin(securityOrigin);\n    }\n  }\n\n  #removeAllOrigins(): void {\n    for (const securityOrigin of this.#storages.keys()) {\n      this.#removeOrigin(securityOrigin);\n    }\n  }\n\n  #securityOriginAdded(event: Common.EventTarget.EventTargetEvent<string>): void {\n    this.#maybeAddOrigin(event.data);\n  }\n\n  #maybeAddOrigin(securityOrigin: string): void {\n    const parsedSecurityOrigin = new Common.ParsedURL.ParsedURL(securityOrigin);\n    // These are \"opaque\" origins which are not supposed to support shared storage.\n    if (!parsedSecurityOrigin.isValid || parsedSecurityOrigin.scheme === 'data' ||\n        parsedSecurityOrigin.scheme === 'about' || parsedSecurityOrigin.scheme === 'javascript') {\n      return;\n    }\n\n    // Only add origin if it's not already added.\n    if (this.#storages.has(securityOrigin)) {\n      return;\n    }\n\n    const storage = new SharedStorageForOrigin(this, securityOrigin);\n    this.#storages.set(securityOrigin, storage);\n    this.dispatchEventToListeners(Events.SHARED_STORAGE_ADDED, storage);\n  }\n\n  #securityOriginRemoved(event: Common.EventTarget.EventTargetEvent<string>): void {\n    this.#removeOrigin(event.data);\n  }\n\n  #removeOrigin(securityOrigin: string): void {\n    const storage = this.storageForOrigin(securityOrigin);\n    if (!storage) {\n      return;\n    }\n    this.#storages.delete(securityOrigin);\n    this.dispatchEventToListeners(Events.SHARED_STORAGE_REMOVED, storage);\n  }\n\n  storages(): IterableIterator<SharedStorageForOrigin> {\n    return this.#storages.values();\n  }\n\n  storageForOrigin(origin: string): SharedStorageForOrigin|null {\n    return this.#storages.get(origin) || null;\n  }\n\n  numStoragesForTesting(): number {\n    return this.#storages.size;\n  }\n\n  isChangeEvent(event: Protocol.Storage.SharedStorageAccessedEvent): boolean {\n    return [\n      Protocol.Storage.SharedStorageAccessMethod.Set,\n      Protocol.Storage.SharedStorageAccessMethod.Append,\n      Protocol.Storage.SharedStorageAccessMethod.Delete,\n      Protocol.Storage.SharedStorageAccessMethod.Clear,\n    ].includes(event.method);\n  }\n\n  sharedStorageAccessed(event: Protocol.Storage.SharedStorageAccessedEvent): void {\n    if (this.isChangeEvent(event)) {\n      const sharedStorage = this.storageForOrigin(event.ownerOrigin);\n\n      if (sharedStorage) {\n        const eventData = {\n          accessTime: event.accessTime,\n          method: event.method,\n          mainFrameId: event.mainFrameId,\n          ownerSite: event.ownerSite,\n          params: event.params,\n          scope: event.scope,\n        };\n\n        // Forward events that may have changed `sharedStorage` to listeners for `sharedStorage`.\n        sharedStorage.dispatchEventToListeners(SharedStorageForOrigin.Events.SHARED_STORAGE_CHANGED, eventData);\n      } else {\n        void this.#maybeAddOrigin(event.ownerOrigin);\n      }\n    }\n\n    this.dispatchEventToListeners(Events.SHARED_STORAGE_ACCESS, event);\n  }\n\n  sharedStorageWorkletOperationExecutionFinished(\n      _event: Protocol.Storage.SharedStorageWorkletOperationExecutionFinishedEvent): void {\n  }\n\n  attributionReportingTriggerRegistered(_event: Protocol.Storage.AttributionReportingTriggerRegisteredEvent): void {\n  }\n\n  indexedDBListUpdated(_event: Protocol.Storage.IndexedDBListUpdatedEvent): void {\n  }\n\n  indexedDBContentUpdated(_event: Protocol.Storage.IndexedDBContentUpdatedEvent): void {\n  }\n\n  cacheStorageListUpdated(_event: Protocol.Storage.CacheStorageListUpdatedEvent): void {\n  }\n\n  cacheStorageContentUpdated(_event: Protocol.Storage.CacheStorageContentUpdatedEvent): void {\n  }\n\n  interestGroupAccessed(_event: Protocol.Storage.InterestGroupAccessedEvent): void {\n  }\n\n  interestGroupAuctionEventOccurred(_event: Protocol.Storage.InterestGroupAuctionEventOccurredEvent): void {\n  }\n\n  interestGroupAuctionNetworkRequestCreated(_event: Protocol.Storage.InterestGroupAuctionNetworkRequestCreatedEvent):\n      void {\n  }\n\n  storageBucketCreatedOrUpdated(_event: Protocol.Storage.StorageBucketCreatedOrUpdatedEvent): void {\n  }\n\n  storageBucketDeleted(_event: Protocol.Storage.StorageBucketDeletedEvent): void {\n  }\n\n  attributionReportingSourceRegistered(_event: Protocol.Storage.AttributionReportingSourceRegisteredEvent): void {\n  }\n  attributionReportingReportSent(_event: Protocol.Storage.AttributionReportingReportSentEvent): void {\n  }\n  attributionReportingVerboseDebugReportSent(_event: Protocol.Storage.AttributionReportingVerboseDebugReportSentEvent):\n      void {\n  }\n}\n\nSDK.SDKModel.SDKModel.register(SharedStorageModel, {capabilities: SDK.Target.Capability.STORAGE, autostart: false});\n\nexport const enum Events {\n  SHARED_STORAGE_ACCESS = 'SharedStorageAccess',\n  SHARED_STORAGE_ADDED = 'SharedStorageAdded',\n  SHARED_STORAGE_REMOVED = 'SharedStorageRemoved',\n}\n\nexport interface EventTypes {\n  [Events.SHARED_STORAGE_ACCESS]: Protocol.Storage.SharedStorageAccessedEvent;\n  [Events.SHARED_STORAGE_ADDED]: SharedStorageForOrigin;\n  [Events.SHARED_STORAGE_REMOVED]: SharedStorageForOrigin;\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\nimport {SharedStorageItemsView} from './SharedStorageItemsView.js';\nimport type {SharedStorageForOrigin} from './SharedStorageModel.js';\n\nexport class SharedStorageTreeElement extends ApplicationPanelTreeElement {\n  view!: SharedStorageItemsView;\n\n  constructor(resourcesPanel: ResourcesPanel, sharedStorage: SharedStorageForOrigin) {\n    super(resourcesPanel, sharedStorage.securityOrigin, false, 'shared-storage-instance');\n  }\n\n  static async createElement(resourcesPanel: ResourcesPanel, sharedStorage: SharedStorageForOrigin):\n      Promise<SharedStorageTreeElement> {\n    const treeElement = new SharedStorageTreeElement(resourcesPanel, sharedStorage);\n    treeElement.view = await SharedStorageItemsView.createView(sharedStorage);\n    treeElement.view.element.setAttribute('jslog', `${VisualLogging.pane('shared-storage-data')}`);\n    return treeElement;\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'shared-storage://' as Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser: boolean|undefined): boolean {\n    super.onselect(selectedByUser);\n    this.resourcesPanel.showView(this.view);\n    return false;\n  }\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as ApplicationComponents from './components/components.js';\nimport {KeyValueStorageItemsView, type View as ViewFunction} from './KeyValueStorageItemsView.js';\nimport {SharedStorageForOrigin} from './SharedStorageModel.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in SharedStorage Items View of the Application panel\n   */\n  sharedStorage: 'Shared storage',\n  /**\n   * @description Text for announcing that the \"Shared Storage Items\" table was cleared, that is, all\n   * entries were deleted.\n   */\n  sharedStorageItemsCleared: 'Shared Storage items cleared',\n  /**\n   * @description Text for announcing that the filtered \"Shared Storage Items\" table was cleared, that is,\n   * all filtered entries were deleted.\n   */\n  sharedStorageFilteredItemsCleared: 'Shared Storage filtered items cleared',\n  /**\n   * @description Text for announcing a Shared Storage key/value item has been deleted\n   */\n  sharedStorageItemDeleted: 'The storage item was deleted.',\n  /**\n   * @description Text for announcing a Shared Storage key/value item has been edited\n   */\n  sharedStorageItemEdited: 'The storage item was edited.',\n  /**\n   * @description Text for announcing a Shared Storage key/value item edit request has been canceled\n   */\n  sharedStorageItemEditCanceled: 'The storage item edit was canceled.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/SharedStorageItemsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface WrappedEntry {\n  key: string;\n  value: string;\n}\n\nexport namespace SharedStorageItemsDispatcher {\n  export const enum Events {\n    FILTERED_ITEMS_CLEARED = 'FilteredItemsCleared',\n    ITEM_DELETED = 'ItemDeleted',\n    ITEM_EDITED = 'ItemEdited',\n    ITEMS_CLEARED = 'ItemsCleared',\n    ITEMS_REFRESHED = 'ItemsRefreshed',\n  }\n\n  export interface ItemDeletedEvent {\n    key: string;\n  }\n\n  export interface ItemEditedEvent {\n    columnIdentifier: string;\n    oldText: string|null;\n    newText: string;\n  }\n\n  export interface EventTypes {\n    [Events.FILTERED_ITEMS_CLEARED]: void;\n    [Events.ITEM_DELETED]: ItemDeletedEvent;\n    [Events.ITEM_EDITED]: void;\n    [Events.ITEMS_CLEARED]: void;\n    [Events.ITEMS_REFRESHED]: void;\n  }\n}\n\nexport class SharedStorageItemsView extends KeyValueStorageItemsView {\n  #sharedStorage: SharedStorageForOrigin;\n  readonly sharedStorageItemsDispatcher: Common.ObjectWrapper.ObjectWrapper<SharedStorageItemsDispatcher.EventTypes>;\n\n  constructor(sharedStorage: SharedStorageForOrigin, view?: ViewFunction) {\n    super(\n        i18nString(UIStrings.sharedStorage), 'shared-storage-items-view', /* editable=*/ true, view,\n        new ApplicationComponents.SharedStorageMetadataView.SharedStorageMetadataView(\n            sharedStorage, sharedStorage.securityOrigin));\n\n    this.#sharedStorage = sharedStorage;\n    this.performUpdate();\n\n    this.#sharedStorage.addEventListener(\n        SharedStorageForOrigin.Events.SHARED_STORAGE_CHANGED, this.#sharedStorageChanged, this);\n\n    this.sharedStorageItemsDispatcher =\n        new Common.ObjectWrapper.ObjectWrapper<SharedStorageItemsDispatcher.EventTypes>();\n  }\n\n  // Use `createView()` instead of the constructor to create a view, so that entries can be awaited asynchronously.\n  static async createView(sharedStorage: SharedStorageForOrigin, viewFunction?: ViewFunction):\n      Promise<SharedStorageItemsView> {\n    const view = new SharedStorageItemsView(sharedStorage, viewFunction);\n    await view.updateEntriesOnly();\n    return view;\n  }\n\n  async updateEntriesOnly(): Promise<void> {\n    const entries = await this.#sharedStorage.getEntries();\n    if (entries) {\n      this.#showSharedStorageItems(entries);\n    }\n  }\n\n  async #sharedStorageChanged(): Promise<void> {\n    await this.refreshItems();\n  }\n\n  override async refreshItems(): Promise<void> {\n    await this.metadataView?.render();\n    await this.updateEntriesOnly();\n    this.sharedStorageItemsDispatcher.dispatchEventToListeners(SharedStorageItemsDispatcher.Events.ITEMS_REFRESHED);\n  }\n\n  override async deleteAllItems(): Promise<void> {\n    if (!this.toolbar?.hasFilter()) {\n      await this.#sharedStorage.clear();\n      await this.refreshItems();\n      this.sharedStorageItemsDispatcher.dispatchEventToListeners(SharedStorageItemsDispatcher.Events.ITEMS_CLEARED);\n      UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.sharedStorageItemsCleared));\n      return;\n    }\n\n    await Promise.all(this.keys().map(key => this.#sharedStorage.deleteEntry(key)));\n\n    await this.refreshItems();\n    this.sharedStorageItemsDispatcher.dispatchEventToListeners(\n        SharedStorageItemsDispatcher.Events.FILTERED_ITEMS_CLEARED);\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.sharedStorageFilteredItemsCleared));\n  }\n\n  protected override isEditAllowed(columnIdentifier: string, _oldText: string, newText: string): boolean {\n    if (columnIdentifier === 'key' && newText === '') {\n      // The Shared Storage backend does not currently allow '' as a key, so we only set a new entry with a new key if its new key is nonempty.\n      void this.refreshItems().then(() => {\n        UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.sharedStorageItemEditCanceled));\n      });\n      return false;\n    }\n    return true;\n  }\n\n  protected async setItem(key: string, value: string): Promise<void> {\n    await this.#sharedStorage.setEntry(key, value, false);\n\n    await this.refreshItems();\n    this.sharedStorageItemsDispatcher.dispatchEventToListeners(SharedStorageItemsDispatcher.Events.ITEM_EDITED);\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.sharedStorageItemEdited));\n  }\n\n  #showSharedStorageItems(items: Protocol.Storage.SharedStorageEntry[]): void {\n    if (this.toolbar) {\n      const filteredList = items.filter(item => this.toolbar?.filterRegex?.test(`${item.key} ${item.value}`) ?? true);\n      this.showItems(filteredList);\n    }\n  }\n\n  protected async removeItem(key: string): Promise<void> {\n    await this.#sharedStorage.deleteEntry(key);\n    await this.refreshItems();\n    this.sharedStorageItemsDispatcher.dispatchEventToListeners(\n        SharedStorageItemsDispatcher.Events.ITEM_DELETED, {key} as SharedStorageItemsDispatcher.ItemDeletedEvent);\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.sharedStorageItemDeleted));\n  }\n\n  protected async createPreview(key: string, value: string): Promise<UI.Widget.Widget|null> {\n    const wrappedEntry = key && {key, value: value || ''} as WrappedEntry;\n    return SourceFrame.JSONView.JSONView.createViewSync(wrappedEntry);\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Nokia Inc.  All rights reserved.\n * Copyright (C) 2013 Samsung Electronics. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n/* eslint no-return-assign: \"off\" */\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Geometry from '../../models/geometry/geometry.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives as LitDirectives, html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ApplicationComponents from './components/components.js';\nimport {StorageItemsToolbar} from './StorageItemsToolbar.js';\n\nconst {ARIAUtils} = UI;\nconst {EmptyWidget} = UI.EmptyWidget;\nconst {VBox, widgetConfig} = UI.Widget;\nconst {Size} = Geometry;\nconst {repeat} = LitDirectives;\n\ntype Widget = UI.Widget.Widget;\ntype VBox = UI.Widget.VBox;\n\nconst UIStrings = {\n  /**\n   * @description Text that shows in the Application Panel if no value is selected for preview\n   */\n  noPreviewSelected: 'No value selected',\n  /**\n   * @description Preview text when viewing storage in Application panel\n   */\n  selectAValueToPreview: 'Select a value to preview',\n  /**\n   * @description Text for announcing number of entries after filtering\n   * @example {5} PH1\n   */\n  numberEntries: 'Number of entries shown in table: {PH1}',\n  /**\n   * @description Text in DOMStorage Items View of the Application panel\n   */\n  key: 'Key',\n  /**\n   * @description Text for the value of something\n   */\n  value: 'Value',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/KeyValueStorageItemsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface ViewInput {\n  items: Array<{key: string, value: string}>;\n  selectedKey: string|null;\n  editable: boolean;\n  preview: Widget;\n  onSelect: (event: CustomEvent<HTMLElement|null>) => void;\n  onSort: (event: CustomEvent<{columnId: string, ascending: boolean}>) => void;\n  onCreate: (event: CustomEvent<{key: string, value: string}>) => void;\n  onReferesh: () => void;\n  onEdit:\n      (event: CustomEvent<{node: HTMLElement, columnId: string, valueBeforeEditing: string, newText: string}>) => void;\n  onDelete: (event: CustomEvent<HTMLElement>) => void;\n}\n\ninterface ViewOutput {\n  toolbar: StorageItemsToolbar;\n}\n\nconst MAX_VALUE_LENGTH = 4096;\n\nexport type View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n/**\n * A helper typically used in the Application panel. Renders a split view\n * between a DataGrid displaying key-value pairs and a preview Widget.\n */\nexport abstract class KeyValueStorageItemsView extends UI.Widget.VBox {\n  #preview: Widget;\n  #previewValue: string|null;\n\n  #items: Array<{key: string, value: string}> = [];\n  #selectedKey: string|null = null;\n  #view: View;\n  #isSortOrderAscending = true;\n  #editable: boolean;\n  #toolbar: StorageItemsToolbar|undefined;\n  readonly metadataView: ApplicationComponents.StorageMetadataView.StorageMetadataView;\n\n  constructor(\n      title: string, id: string, editable: boolean, view?: View,\n      metadataView?: ApplicationComponents.StorageMetadataView.StorageMetadataView) {\n    metadataView ??= new ApplicationComponents.StorageMetadataView.StorageMetadataView();\n    if (!view) {\n      view = (input: ViewInput, output: ViewOutput, target: HTMLElement) => {\n        // clang-format off\n        render(html `\n            <devtools-widget\n              .widgetConfig=${widgetConfig(StorageItemsToolbar, {metadataView})}\n              class=flex-none\n              ${UI.Widget.widgetRef(StorageItemsToolbar, view => {output.toolbar = view;})}\n            ></devtools-widget>\n            <devtools-split-view sidebar-position=\"second\" name=\"${id}-split-view-state\">\n               <devtools-widget\n                  slot=\"main\"\n                  .widgetConfig=${widgetConfig(VBox, {minimumSize: new Size(0, 50)})}>\n                <devtools-data-grid\n                  .name=${`${id}-datagrid-with-preview`}\n                  striped\n                  style=\"flex: auto\"\n                  @select=${input.onSelect}\n                  @sort=${input.onSort}\n                  @refresh=${input.onReferesh}\n                  @create=${input.onCreate}\n                  @edit=${input.onEdit}\n                  @delete=${input.onDelete}\n                >\n                  <table>\n                    <tr>\n                      <th id=\"key\" sortable ?editable=${input.editable}>\n                        ${i18nString(UIStrings.key)}\n                      </th>\n                      <th id=\"value\" ?editable=${input.editable}>\n                        ${i18nString(UIStrings.value)}\n                      </th>\n                    </tr>\n                    ${repeat(input.items, item => item.key, item => html`\n                      <tr data-key=${item.key} data-value=${item.value}\n                          selected=${(input.selectedKey === item.key) || nothing}>\n                        <td>${item.key}</td>\n                        <td>${item.value.substr(0, MAX_VALUE_LENGTH)}</td>\n                      </tr>`)}\n                      <tr placeholder></tr>\n                  </table>\n                </devtools-data-grid>\n              </devtools-widget>\n              <devtools-widget\n                  slot=\"sidebar\"\n                  .widgetConfig=${widgetConfig(VBox, {minimumSize: new Size(0, 50)})}\n                  jslog=${VisualLogging.pane('preview').track({resize: true})}>\n               ${input.preview?.element}\n              </devtools-widget>\n            </devtools-split-view>`,\n            // clang-format on\n            target);\n      };\n    }\n    super();\n    this.metadataView = metadataView;\n    this.#editable = editable;\n    this.#view = view;\n    this.performUpdate();\n\n    this.#preview =\n        new EmptyWidget(i18nString(UIStrings.noPreviewSelected), i18nString(UIStrings.selectAValueToPreview));\n    this.#previewValue = null;\n\n    this.showPreview(null, null);\n  }\n\n  override wasShown(): void {\n    this.refreshItems();\n  }\n\n  override performUpdate(): void {\n    const that = this;\n    const viewOutput = {\n      set toolbar(toolbar: StorageItemsToolbar) {\n        that.#toolbar?.removeEventListener(StorageItemsToolbar.Events.DELETE_SELECTED, that.deleteSelectedItem, that);\n        that.#toolbar?.removeEventListener(StorageItemsToolbar.Events.DELETE_ALL, that.deleteAllItems, that);\n        that.#toolbar?.removeEventListener(StorageItemsToolbar.Events.REFRESH, that.refreshItems, that);\n        that.#toolbar = toolbar;\n        that.#toolbar.addEventListener(StorageItemsToolbar.Events.DELETE_SELECTED, that.deleteSelectedItem, that);\n        that.#toolbar.addEventListener(StorageItemsToolbar.Events.DELETE_ALL, that.deleteAllItems, that);\n        that.#toolbar.addEventListener(StorageItemsToolbar.Events.REFRESH, that.refreshItems, that);\n      }\n    };\n    const viewInput = {\n      items: this.#items,\n      selectedKey: this.#selectedKey,\n      editable: this.#editable,\n      preview: this.#preview,\n      onSelect: (event: CustomEvent<HTMLElement|null>) => {\n        this.#toolbar?.setCanDeleteSelected(Boolean(event.detail));\n        if (!event.detail) {\n          void this.#previewEntry(null);\n        } else {\n          void this.#previewEntry({key: event.detail.dataset.key || '', value: event.detail.dataset.value || ''});\n        }\n      },\n      onSort: (event: CustomEvent<{columnId: string, ascending: boolean}>) => {\n        this.#isSortOrderAscending = event.detail.ascending;\n      },\n      onCreate: (event: CustomEvent<{key: string, value: string}>) => {\n        this.#createCallback(event.detail.key, event.detail.value || '');\n      },\n      onEdit:\n          (event: CustomEvent<{node: HTMLElement, columnId: string, valueBeforeEditing: string, newText: string}>) => {\n            this.#editingCallback(\n                event.detail.node, event.detail.columnId, event.detail.valueBeforeEditing, event.detail.newText);\n          },\n      onDelete: (event: CustomEvent<HTMLElement>) => {\n        this.#deleteCallback(event.detail.dataset.key || '');\n      },\n      onReferesh: () => {\n        this.refreshItems();\n      },\n    };\n    this.#view(viewInput, viewOutput, this.contentElement);\n  }\n\n  protected get toolbar(): StorageItemsToolbar|undefined {\n    return this.#toolbar;\n  }\n\n  refreshItems(): void {\n  }\n\n  deleteAllItems(): void {\n  }\n\n  itemsCleared(): void {\n    this.#items = [];\n    this.performUpdate();\n    this.#toolbar?.setCanDeleteSelected(false);\n  }\n\n  itemRemoved(key: string): void {\n    const index = this.#items.findIndex(item => item.key === key);\n    if (index === -1) {\n      return;\n    }\n    this.#items.splice(index, 1);\n    this.performUpdate();\n    this.#toolbar?.setCanDeleteSelected(this.#items.length > 1);\n  }\n\n  itemAdded(key: string, value: string): void {\n    if (this.#items.some(item => item.key === key)) {\n      return;\n    }\n    this.#items.push({key, value});\n    this.performUpdate();\n  }\n\n  itemUpdated(key: string, value: string): void {\n    const item = this.#items.find(item => item.key === key);\n    if (!item) {\n      return;\n    }\n    if (item.value === value) {\n      return;\n    }\n    item.value = value;\n    this.performUpdate();\n    if (this.#selectedKey !== key) {\n      return;\n    }\n    if (this.#previewValue !== value) {\n      void this.#previewEntry({key, value});\n    }\n    this.#toolbar?.setCanDeleteSelected(true);\n  }\n\n  showItems(items: Array<{key: string, value: string}>): void {\n    const sortDirection = this.#isSortOrderAscending ? 1 : -1;\n    this.#items = [...items].sort((item1, item2) => sortDirection * (item1.key > item2.key ? 1 : -1));\n    const selectedItem = this.#items.find(item => item.key === this.#selectedKey);\n    if (!selectedItem) {\n      this.#selectedKey = null;\n    } else {\n      void this.#previewEntry(selectedItem);\n    }\n    this.performUpdate();\n    this.#toolbar?.setCanDeleteSelected(Boolean(this.#selectedKey));\n    ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.numberEntries, {PH1: this.#items.length}));\n  }\n\n  deleteSelectedItem(): void {\n    if (!this.#selectedKey) {\n      return;\n    }\n\n    this.#deleteCallback(this.#selectedKey);\n  }\n\n  #createCallback(key: string, value: string): void {\n    this.setItem(key, value);\n    this.#removeDupes(key, value);\n    void this.#previewEntry({key, value});\n  }\n\n  protected isEditAllowed(_columnIdentifier: string, _oldText: string, _newText: string): boolean {\n    return true;\n  }\n\n  #editingCallback(editingNode: HTMLElement, columnIdentifier: string, oldText: string, newText: string): void {\n    if (!this.isEditAllowed(columnIdentifier, oldText, newText)) {\n      return;\n    }\n    if (columnIdentifier === 'key') {\n      if (typeof oldText === 'string') {\n        this.removeItem(oldText);\n      }\n      this.setItem(newText, editingNode.dataset.value || '');\n      this.#removeDupes(newText, editingNode.dataset.value || '');\n      editingNode.dataset.key = newText;\n      void this.#previewEntry({key: newText, value: editingNode.dataset.value || ''});\n    } else {\n      this.setItem(editingNode.dataset.key || '', newText);\n      void this.#previewEntry({key: editingNode.dataset.key || '', value: newText});\n    }\n  }\n\n  #removeDupes(key: string, value: string): void {\n    for (let i = this.#items.length - 1; i >= 0; --i) {\n      const child = this.#items[i];\n      if ((child.key === key) && (value !== child.value)) {\n        this.#items.splice(i, 1);\n      }\n    }\n  }\n\n  #deleteCallback(key: string): void {\n    this.removeItem(key);\n  }\n\n  showPreview(preview: Widget|null, value: string|null): void {\n    if (this.#preview && this.#previewValue === value) {\n      return;\n    }\n    if (this.#preview) {\n      this.#preview.detach();\n    }\n    if (!preview) {\n      preview = new EmptyWidget(i18nString(UIStrings.noPreviewSelected), i18nString(UIStrings.selectAValueToPreview));\n    }\n    this.#previewValue = value;\n    this.#preview = preview;\n    this.performUpdate();\n  }\n\n  async #previewEntry(entry: {key: string, value: string}|null): Promise<void> {\n    if (entry?.value) {\n      this.#selectedKey = entry.key;\n      const preview = await this.createPreview(entry.key, entry.value);\n      // Selection could've changed while the preview was loaded\n      if (this.#selectedKey === entry.key) {\n        this.showPreview(preview, entry.value);\n      }\n    } else {\n      this.#selectedKey = null;\n      this.showPreview(null, null);\n    }\n  }\n\n  set editable(editable: boolean) {\n    this.#editable = editable;\n    this.performUpdate();\n  }\n\n  protected keys(): string[] {\n    return this.#items.map(item => item.key);\n  }\n\n  protected abstract setItem(key: string, value: string): void;\n  protected abstract removeItem(key: string): void;\n  protected abstract createPreview(key: string, value: string): Promise<Widget|null>;\n}\n", "// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ApplicationComponents from './components/components.js';\n\nconst UIStrings = {\n  /**\n   * @description Text to refresh the page\n   */\n  refresh: 'Refresh',\n  /**\n   * @description Text to clear everything\n   */\n  clearAll: 'Clear All',\n  /**\n   * @description Tooltip text that appears when hovering over the largeicon delete button in the Service Worker Cache Views of the Application panel\n   */\n  deleteSelected: 'Delete Selected',\n  /**\n   * @description Text that informs screen reader users that the storage table has been refreshed\n   */\n  refreshedStatus: 'Table refreshed',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/application/StorageItemsToolbar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst {html, render} = Lit;\n\ninterface ViewInput {\n  onRefresh: () => void;\n  onDeleteAll: () => void;\n  onDeleteSelected: () => void;\n  metadataView: ApplicationComponents.StorageMetadataView.StorageMetadataView;\n  onFilterChanged: (ev: CustomEvent<string|null>) => void;\n  deleteAllButtonEnabled: boolean;\n  deleteSelectedButtonDisabled: boolean;\n  filterItemEnabled: boolean;\n  deleteAllButtonIconName: string;\n  deleteAllButtonTitle: string;\n  mainToolbarItems: UI.Toolbar.ToolbarItem[];\n}\n\nexport const DEFAULT_VIEW = (input: ViewInput, _output: object, target: HTMLElement): void => {\n  render(\n      // clang-format off\n      html`\n      <devtools-toolbar class=\"top-resources-toolbar\"\n                        jslog=${VisualLogging.toolbar()}>\n        <devtools-button title=${i18nString(UIStrings.refresh)}\n                         jslog=${VisualLogging.action('storage-items-view.refresh').track({\n        click: true\n      })}\n                         @click=${input.onRefresh}\n                         .iconName=${'refresh'}\n                         .variant=${Buttons.Button.Variant.TOOLBAR}></devtools-button>\n        <devtools-toolbar-input type=\"filter\"\n                                ?disabled=${!input.filterItemEnabled}\n                                @change=${input.onFilterChanged}\n                                style=\"flex-grow:0.4\"></devtools-toolbar-input>\n        ${new UI.Toolbar.ToolbarSeparator().element}\n        <devtools-button title=${input.deleteAllButtonTitle}\n                         @click=${input.onDeleteAll}\n                         id=storage-items-delete-all\n                         ?disabled=${!input.deleteAllButtonEnabled}\n                         jslog=${VisualLogging.action('storage-items-view.clear-all').track({\n        click: true\n      })}\n                         .iconName=${input.deleteAllButtonIconName}\n                         .variant=${Buttons.Button.Variant.TOOLBAR}></devtools-button>\n        <devtools-button title=${i18nString(UIStrings.deleteSelected)}\n                         @click=${input.onDeleteSelected}\n                         ?disabled=${!input.deleteSelectedButtonDisabled}\n                         jslog=${VisualLogging.action('storage-items-view.delete-selected').track({\n        click: true\n      })}\n                         .iconName=${'cross'}\n                         .variant=${Buttons.Button.Variant.TOOLBAR}></devtools-button>\n        ${input.mainToolbarItems.map(item => item.element)}\n      </devtools-toolbar>\n      ${input.metadataView}`,\n      // clang-format on\n      target);\n};\n\nexport type View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport class StorageItemsToolbar extends\n    Common.ObjectWrapper.eventMixin<StorageItemsToolbar.EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox) {\n  filterRegex: RegExp|null;\n  #metadataView: ApplicationComponents.StorageMetadataView.StorageMetadataView|undefined;\n  readonly #view: View;\n  #deleteAllButtonEnabled = true;\n  #deleteSelectedButtonDisabled = true;\n  #filterItemEnabled = true;\n  #deleteAllButtonIconName = 'clear';\n  #deleteAllButtonTitle: string = i18nString(UIStrings.clearAll);\n  #mainToolbarItems: UI.Toolbar.ToolbarItem[] = [];\n\n  constructor(element?: HTMLElement, view: View = DEFAULT_VIEW) {\n    super(element);\n    this.#view = view;\n    this.filterRegex = null;\n  }\n\n  set metadataView(view: ApplicationComponents.StorageMetadataView.StorageMetadataView) {\n    this.#metadataView = view;\n  }\n\n  get metadataView(): ApplicationComponents.StorageMetadataView.StorageMetadataView {\n    if (!this.#metadataView) {\n      this.#metadataView = new ApplicationComponents.StorageMetadataView.StorageMetadataView();\n    }\n    return this.#metadataView;\n  }\n\n  override performUpdate(): void {\n    const viewInput: ViewInput = {\n      deleteAllButtonEnabled: this.#deleteAllButtonEnabled,\n      deleteSelectedButtonDisabled: this.#deleteSelectedButtonDisabled,\n      filterItemEnabled: this.#filterItemEnabled,\n      deleteAllButtonIconName: this.#deleteAllButtonIconName,\n      deleteAllButtonTitle: this.#deleteAllButtonTitle,\n      mainToolbarItems: this.#mainToolbarItems,\n      metadataView: this.metadataView,\n      onFilterChanged: this.filterChanged.bind(this),\n      onRefresh: () => {\n        this.dispatchEventToListeners(StorageItemsToolbar.Events.REFRESH);\n        UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.refreshedStatus));\n      },\n      onDeleteAll: () => this.dispatchEventToListeners(StorageItemsToolbar.Events.DELETE_ALL),\n      onDeleteSelected: () => this.dispatchEventToListeners(StorageItemsToolbar.Events.DELETE_SELECTED),\n    };\n    this.#view(viewInput, {}, this.contentElement);\n  }\n\n  setDeleteAllTitle(title: string): void {\n    this.#deleteAllButtonTitle = title;\n    this.requestUpdate();\n  }\n\n  setDeleteAllGlyph(glyph: string): void {\n    this.#deleteAllButtonIconName = glyph;\n    this.requestUpdate();\n  }\n\n  appendToolbarItem(item: UI.Toolbar.ToolbarItem): void {\n    this.#mainToolbarItems.push(item);\n    this.requestUpdate();\n  }\n\n  setStorageKey(storageKey: string): void {\n    this.metadataView.setStorageKey(storageKey);\n  }\n\n  filterChanged({detail: text}: CustomEvent<string|null>): void {\n    this.filterRegex = text ? new RegExp(Platform.StringUtilities.escapeForRegExp(text), 'i') : null;\n    this.dispatchEventToListeners(StorageItemsToolbar.Events.REFRESH);\n  }\n\n  hasFilter(): boolean {\n    return Boolean(this.filterRegex);\n  }\n\n  setCanDeleteAll(enabled: boolean): void {\n    this.#deleteAllButtonEnabled = enabled;\n    this.requestUpdate();\n  }\n\n  setCanDeleteSelected(enabled: boolean): void {\n    this.#deleteSelectedButtonDisabled = enabled;\n    this.requestUpdate();\n  }\n\n  setCanFilter(enabled: boolean): void {\n    this.#filterItemEnabled = enabled;\n    this.requestUpdate();\n  }\n}\n\nexport namespace StorageItemsToolbar {\n  export const enum Events {\n    REFRESH = 'Refresh',\n    FILTER_CHANGED = 'FilterChanged',\n    DELETE_ALL = 'DeleteAll',\n    DELETE_SELECTED = 'DeleteSelected',\n  }\n\n  export interface EventTypes {\n    [Events.REFRESH]: void;\n    [Events.FILTER_CHANGED]: void;\n    [Events.DELETE_ALL]: void;\n    [Events.DELETE_SELECTED]: void;\n  }\n}\n", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {IndexedDBTreeElement} from './ApplicationPanelSidebar.js';\nimport {ExpandableApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport {StorageMetadataView} from './components/components.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\nimport {ServiceWorkerCacheTreeElement} from './ServiceWorkerCacheTreeElement.js';\n\nconst UIStrings = {\n  /**\n   * @description Label for an item in the Application Panel Sidebar of the Application panel\n   * Storage Buckets allow developers to separate site data into buckets so that they can be\n   * deleted independently.\n   */\n  storageBuckets: 'Storage buckets',\n  /**\n   * @description Text for an item in the Application Panel\n   * if no storage buckets are available to show. Storage Buckets allow developers to separate\n   * site data into buckets so that they can be\n   * deleted independently. https://developer.chrome.com/docs/web-platform/storage-buckets.\n   */\n  noStorageBuckets: 'No storage buckets detected',\n  /**\n   * @description Description text in the Application Panel describing the storage buckets tab.\n   * Storage Buckets allow developers to separate site data into buckets so that they can be\n   * deleted independently. https://developer.chrome.com/docs/web-platform/storage-buckets.\n   */\n  storageBucketsDescription:\n      'On this page you can view and delete storage buckets, and their associated `Storage APIs`.'\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/StorageBucketsTreeElement.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class StorageBucketsTreeParentElement extends ExpandableApplicationPanelTreeElement {\n  private bucketTreeElements = new Set<StorageBucketsTreeElement>();\n\n  constructor(storagePanel: ResourcesPanel) {\n    super(\n        storagePanel, i18nString(UIStrings.storageBuckets), i18nString(UIStrings.noStorageBuckets),\n        i18nString(UIStrings.storageBucketsDescription), 'storage-buckets');\n    const icon = IconButton.Icon.create('bucket');\n    this.setLeadingIcons([icon]);\n    this.setLink(\n        'https://github.com/WICG/storage-buckets/blob/gh-pages/explainer.md' as Platform.DevToolsPath.UrlString);\n  }\n\n  initialize(): void {\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.StorageBucketsModel.StorageBucketsModel, SDK.StorageBucketsModel.Events.BUCKET_ADDED, this.bucketAdded,\n        this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.StorageBucketsModel.StorageBucketsModel, SDK.StorageBucketsModel.Events.BUCKET_REMOVED, this.bucketRemoved,\n        this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.StorageBucketsModel.StorageBucketsModel, SDK.StorageBucketsModel.Events.BUCKET_CHANGED, this.bucketChanged,\n        this);\n\n    for (const bucketsModel of SDK.TargetManager.TargetManager.instance().models(\n             SDK.StorageBucketsModel.StorageBucketsModel)) {\n      const buckets = bucketsModel.getBuckets();\n      for (const bucket of buckets) {\n        this.addBucketTreeElement(bucketsModel, bucket);\n      }\n    }\n  }\n\n  removeBucketsForModel(model: SDK.StorageBucketsModel.StorageBucketsModel): void {\n    for (const bucketTreeElement of this.bucketTreeElements) {\n      if (bucketTreeElement.model === model) {\n        this.removeBucketTreeElement(bucketTreeElement);\n      }\n    }\n  }\n\n  private bucketAdded({data: {model, bucketInfo}}:\n                          Common.EventTarget.EventTargetEvent<SDK.StorageBucketsModel.BucketEvent>): void {\n    this.addBucketTreeElement(model, bucketInfo);\n  }\n\n  private bucketRemoved({data: {model, bucketInfo}}:\n                            Common.EventTarget.EventTargetEvent<SDK.StorageBucketsModel.BucketEvent>): void {\n    const idbDatabaseTreeElement = this.getBucketTreeElement(model, bucketInfo);\n    if (!idbDatabaseTreeElement) {\n      return;\n    }\n    this.removeBucketTreeElement(idbDatabaseTreeElement);\n  }\n\n  private bucketChanged({data: {model, bucketInfo}}:\n                            Common.EventTarget.EventTargetEvent<SDK.StorageBucketsModel.BucketEvent>): void {\n    const idbDatabaseTreeElement = this.getBucketTreeElement(model, bucketInfo);\n    if (!idbDatabaseTreeElement) {\n      return;\n    }\n    idbDatabaseTreeElement.bucketInfo = bucketInfo;\n  }\n\n  private addBucketTreeElement(\n      model: SDK.StorageBucketsModel.StorageBucketsModel, bucketInfo: Protocol.Storage.StorageBucketInfo): void {\n    if (bucketInfo.bucket.name === undefined) {\n      return;\n    }\n    const singleBucketTreeElement = new StorageBucketsTreeElement(this.resourcesPanel, model, bucketInfo);\n    this.bucketTreeElements.add(singleBucketTreeElement);\n    this.appendChild(singleBucketTreeElement);\n    singleBucketTreeElement.initialize();\n  }\n\n  private removeBucketTreeElement(bucketTreeElement: StorageBucketsTreeElement): void {\n    this.removeChild(bucketTreeElement);\n    this.bucketTreeElements.delete(bucketTreeElement);\n    this.setExpandable(this.bucketTreeElements.size > 0);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'storage-buckets-group://' as Platform.DevToolsPath.UrlString;\n  }\n\n  getBucketTreeElement(model: SDK.StorageBucketsModel.StorageBucketsModel, {\n    bucket: {storageKey, name},\n  }: Protocol.Storage.StorageBucketInfo): StorageBucketsTreeElement|null {\n    for (const bucketTreeElement of this.bucketTreeElements) {\n      if (bucketTreeElement.model === model && bucketTreeElement.bucketInfo.bucket.storageKey === storageKey &&\n          bucketTreeElement.bucketInfo.bucket.name === name) {\n        return bucketTreeElement;\n      }\n    }\n    return null;\n  }\n}\n\nexport class StorageBucketsTreeElement extends ExpandableApplicationPanelTreeElement {\n  private storageBucketInfo: Protocol.Storage.StorageBucketInfo;\n  private bucketModel: SDK.StorageBucketsModel.StorageBucketsModel;\n  private view?: LegacyWrapper.LegacyWrapper.LegacyWrapper<UI.Widget.Widget, StorageMetadataView.StorageMetadataView>;\n\n  constructor(\n      resourcesPanel: ResourcesPanel, model: SDK.StorageBucketsModel.StorageBucketsModel,\n      bucketInfo: Protocol.Storage.StorageBucketInfo) {\n    const {bucket} = bucketInfo;\n    const {origin} = SDK.StorageKeyManager.parseStorageKey(bucketInfo.bucket.storageKey);\n    super(resourcesPanel, `${bucket.name} - ${origin}`, '', '', 'storage-bucket');\n    this.bucketModel = model;\n    this.storageBucketInfo = bucketInfo;\n    const icon = IconButton.Icon.create('database');\n    this.setLeadingIcons([icon]);\n  }\n\n  initialize(): void {\n    const {bucket} = this.bucketInfo;\n    const indexedDBTreeElement = new IndexedDBTreeElement(this.resourcesPanel, bucket);\n    this.appendChild(indexedDBTreeElement);\n    const serviceWorkerCacheTreeElement = new ServiceWorkerCacheTreeElement(this.resourcesPanel, bucket);\n    this.appendChild(serviceWorkerCacheTreeElement);\n    serviceWorkerCacheTreeElement.initialize();\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    const {bucket} = this.bucketInfo;\n    return `storage-buckets-group://${bucket.name}/${bucket.storageKey}` as Platform.DevToolsPath.UrlString;\n  }\n\n  get model(): SDK.StorageBucketsModel.StorageBucketsModel {\n    return this.bucketModel;\n  }\n\n  get bucketInfo(): Protocol.Storage.StorageBucketInfo {\n    return this.storageBucketInfo;\n  }\n\n  set bucketInfo(bucketInfo: Protocol.Storage.StorageBucketInfo) {\n    this.storageBucketInfo = bucketInfo;\n    if (this.view) {\n      this.view.getComponent().setStorageBucket(this.storageBucketInfo);\n    }\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view =\n          LegacyWrapper.LegacyWrapper.legacyWrapper(UI.Widget.Widget, new StorageMetadataView.StorageMetadataView());\n      this.view.getComponent().enableStorageBucketControls(this.model);\n      this.view.getComponent().setStorageBucket(this.storageBucketInfo);\n    }\n    this.showView(this.view);\n    return false;\n  }\n}\n", "// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport type * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {DOMStorageModel} from './DOMStorageModel.js';\nimport {IndexedDBModel} from './IndexedDBModel.js';\nimport storageViewStyles from './storageView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in the Storage View that expresses the amount of used and available storage quota\n   * @example {1.5 MB} PH1\n   * @example {123.1 MB} PH2\n   */\n  storageQuotaUsed: '{PH1} used out of {PH2} storage quota',\n  /**\n   * @description Tooltip in the Storage View that expresses the precise amount of used and available storage quota\n   * @example {200} PH1\n   * @example {400} PH2\n   */\n  storageQuotaUsedWithBytes: '{PH1} bytes used out of {PH2} bytes storage quota',\n  /**\n   * @description Fragment indicating that a certain data size has been custom configured\n   * @example {1.5 MB} PH1\n   */\n  storageWithCustomMarker: '{PH1} (custom)',\n  /**\n   * @description Text in Application Panel Sidebar and title text of the Storage View of the Application panel\n   */\n  storageTitle: 'Storage',\n  /**\n   * @description Title text in Storage View of the Application panel\n   */\n  usage: 'Usage',\n  /**\n   * @description Unit for data size in DevTools\n   */\n  mb: 'MB',\n  /**\n   * @description Link to learn more about Progressive Web Apps\n   */\n  learnMore: 'Learn more',\n  /**\n   * @description Button text for the button in the Storage View of the Application panel for clearing site-specific storage\n   */\n  clearSiteData: 'Clear site data',\n  /**\n   * @description Announce message when the \"clear site data\" task is complete\n   */\n  SiteDataCleared: 'Site data cleared',\n  /**\n   * @description Category description in the Clear Storage section of the Storage View of the Application panel\n   */\n  application: 'Application',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  unregisterServiceWorker: 'Unregister service workers',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  localAndSessionStorage: 'Local and session storage',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  indexDB: 'IndexedDB',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  cookies: 'Cookies',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  cacheStorage: 'Cache storage',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  includingThirdPartyCookies: 'including third-party cookies',\n  /**\n   * @description Text for error message in Application Quota Override\n   * @example {Image} PH1\n   */\n  sFailedToLoad: '{PH1} (failed to load)',\n  /**\n   * @description Text for error message in Application Quota Override\n   */\n  internalError: 'Internal error',\n  /**\n   * @description Text for error message in Application Quota Override\n   */\n  pleaseEnterANumber: 'Please enter a number',\n  /**\n   * @description Text for error message in Application Quota Override\n   */\n  numberMustBeNonNegative: 'Number must be non-negative',\n  /**\n   * @description Text for error message in Application Quota Override\n   * @example {9000000000000} PH1\n   */\n  numberMustBeSmaller: 'Number must be smaller than {PH1}',\n  /**\n   * @description Button text for the \"Clear site data\" button in the Storage View of the Application panel while the clearing action is pending\n   */\n  clearing: 'Clearing…',\n  /**\n   * @description Quota row title in Clear Storage View of the Application panel\n   */\n  storageQuotaIsLimitedIn: 'Storage quota is limited in Incognito mode',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  fileSystem: 'File System',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  other: 'Other',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  storageUsage: 'Storage usage',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  serviceWorkers: 'Service workers',\n  /**\n   * @description Checkbox label in Application Panel Sidebar of the Application panel.\n   * Storage quota refers to the amount of disk available for the website or app.\n   */\n  simulateCustomStorage: 'Simulate custom storage quota',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/StorageView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * @implements {SDK.TargetManager.Observer}\n */\nexport class StorageView extends UI.ThrottledWidget.ThrottledWidget {\n  private pieColors: Map<Protocol.Storage.StorageType, string>;\n  private reportView: UI.ReportView.ReportView;\n  private target: SDK.Target.Target|null;\n  private securityOrigin: string|null;\n  private storageKey: string|null;\n  private settings: Map<Protocol.Storage.StorageType, Common.Settings.Setting<boolean>>;\n  private includeThirdPartyCookiesSetting: Common.Settings.Setting<boolean>;\n  private quotaRow: HTMLElement;\n  private quotaUsage: number|null;\n  private pieChart: PerfUI.PieChart.PieChart;\n  private previousOverrideFieldValue: string;\n  private quotaOverrideCheckbox: UI.UIUtils.CheckboxLabel;\n  private quotaOverrideControlRow: HTMLElement;\n  private quotaOverrideEditor: HTMLInputElement;\n  private quotaOverrideErrorMessage: HTMLElement;\n  private clearButton: Buttons.Button.Button;\n\n  constructor() {\n    super(true, 1000);\n    this.registerRequiredCSS(storageViewStyles);\n\n    this.contentElement.classList.add('clear-storage-container');\n    this.contentElement.setAttribute('jslog', `${VisualLogging.pane('clear-storage')}`);\n    this.pieColors = new Map([\n      [Protocol.Storage.StorageType.Cache_storage, 'rgb(229, 113, 113)'],   // red\n      [Protocol.Storage.StorageType.Cookies, 'rgb(239, 196, 87)'],          // yellow\n      [Protocol.Storage.StorageType.Indexeddb, 'rgb(155, 127, 230)'],       // purple\n      [Protocol.Storage.StorageType.Local_storage, 'rgb(116, 178, 102)'],   // green\n      [Protocol.Storage.StorageType.Service_workers, 'rgb(255, 167, 36)'],  // orange\n    ]);\n\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    this.reportView = new UI.ReportView.ReportView(i18nString(UIStrings.storageTitle));\n    this.reportView.registerRequiredCSS(storageViewStyles);\n\n    this.reportView.element.classList.add('clear-storage-header');\n    this.reportView.show(this.contentElement);\n    this.target = null;\n    this.securityOrigin = null;\n    this.storageKey = null;\n\n    this.settings = new Map();\n    for (const type of AllStorageTypes) {\n      this.settings.set(\n          type,\n          Common.Settings.Settings.instance().createSetting(\n              'clear-storage-' + Platform.StringUtilities.toKebabCase(type), true));\n    }\n\n    this.includeThirdPartyCookiesSetting =\n        Common.Settings.Settings.instance().createSetting('clear-storage-include-third-party-cookies', false);\n\n    const clearButtonSection = this.reportView.appendSection('', 'clear-storage-button').appendRow();\n    this.clearButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.clearSiteData), this.clear.bind(this), {jslogContext: 'storage.clear-site-data'});\n    this.clearButton.id = 'storage-view-clear-button';\n    clearButtonSection.appendChild(this.clearButton);\n\n    const includeThirdPartyCookiesCheckbox = UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.includingThirdPartyCookies), this.includeThirdPartyCookiesSetting);\n    includeThirdPartyCookiesCheckbox.classList.add('include-third-party-cookies');\n    clearButtonSection.appendChild(includeThirdPartyCookiesCheckbox);\n\n    const quota = this.reportView.appendSection(i18nString(UIStrings.usage));\n    quota.element.setAttribute('jslog', `${VisualLogging.section('usage')}`);\n    this.quotaRow = quota.appendSelectableRow();\n    this.quotaRow.classList.add('quota-usage-row');\n    const learnMoreRow = quota.appendRow();\n    const learnMore = UI.XLink.XLink.create(\n        'https://developer.chrome.com/docs/devtools/progressive-web-apps#opaque-responses',\n        i18nString(UIStrings.learnMore), undefined, undefined, 'learn-more');\n    learnMoreRow.appendChild(learnMore);\n    this.quotaUsage = null;\n    this.pieChart = new PerfUI.PieChart.PieChart();\n    this.populatePieChart(0, []);\n    const usageBreakdownRow = quota.appendRow();\n    usageBreakdownRow.classList.add('usage-breakdown-row');\n    usageBreakdownRow.appendChild(this.pieChart);\n\n    this.previousOverrideFieldValue = '';\n    const quotaOverrideCheckboxRow = quota.appendRow();\n    quotaOverrideCheckboxRow.classList.add('quota-override-row');\n    this.quotaOverrideCheckbox = UI.UIUtils.CheckboxLabel.create(i18nString(UIStrings.simulateCustomStorage), false);\n    this.quotaOverrideCheckbox.setAttribute(\n        'jslog', `${VisualLogging.toggle('simulate-custom-quota').track({change: true})}`);\n    quotaOverrideCheckboxRow.appendChild(this.quotaOverrideCheckbox);\n    this.quotaOverrideCheckbox.addEventListener('click', this.onClickCheckbox.bind(this), false);\n    this.quotaOverrideControlRow = quota.appendRow();\n    this.quotaOverrideEditor = this.quotaOverrideControlRow.createChild('input', 'quota-override-notification-editor');\n    this.quotaOverrideEditor.setAttribute(\n        'jslog', `${VisualLogging.textField('quota-override').track({change: true})}`);\n    this.quotaOverrideControlRow.appendChild(UI.UIUtils.createLabel(i18nString(UIStrings.mb)));\n    this.quotaOverrideControlRow.classList.add('hidden');\n    this.quotaOverrideEditor.addEventListener('keyup', event => {\n      if (event.key === 'Enter') {\n        void this.applyQuotaOverrideFromInputField();\n        event.consume(true);\n      }\n    });\n    this.quotaOverrideEditor.addEventListener('focusout', event => {\n      void this.applyQuotaOverrideFromInputField();\n      event.consume(true);\n    });\n\n    const errorMessageRow = quota.appendRow();\n    this.quotaOverrideErrorMessage = errorMessageRow.createChild('div', 'quota-override-error');\n\n    const application = this.reportView.appendSection(i18nString(UIStrings.application));\n    application.element.setAttribute('jslog', `${VisualLogging.section('application')}`);\n    this.appendItem(\n        application, i18nString(UIStrings.unregisterServiceWorker), Protocol.Storage.StorageType.Service_workers);\n    application.markFieldListAsGroup();\n\n    const storage = this.reportView.appendSection(i18nString(UIStrings.storageTitle));\n    storage.element.setAttribute('jslog', `${VisualLogging.section('storage')}`);\n    this.appendItem(storage, i18nString(UIStrings.localAndSessionStorage), Protocol.Storage.StorageType.Local_storage);\n    this.appendItem(storage, i18nString(UIStrings.indexDB), Protocol.Storage.StorageType.Indexeddb);\n    this.appendItem(storage, i18nString(UIStrings.cookies), Protocol.Storage.StorageType.Cookies);\n    this.appendItem(storage, i18nString(UIStrings.cacheStorage), Protocol.Storage.StorageType.Cache_storage);\n    storage.markFieldListAsGroup();\n\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n  }\n\n  private appendItem(\n      section: UI.ReportView.Section, title: Platform.UIString.LocalizedString,\n      settingName: Protocol.Storage.StorageType): void {\n    const row = section.appendRow();\n    const setting = this.settings.get(settingName);\n    if (setting) {\n      row.appendChild(UI.SettingsUI.createSettingCheckbox(title, setting));\n    }\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    if (target !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.target = target;\n    const securityOriginManager = target.model(SDK.SecurityOriginManager.SecurityOriginManager) as\n        SDK.SecurityOriginManager.SecurityOriginManager;\n    this.updateOrigin(\n        securityOriginManager.mainSecurityOrigin(), securityOriginManager.unreachableMainSecurityOrigin());\n    securityOriginManager.addEventListener(\n        SDK.SecurityOriginManager.Events.MainSecurityOriginChanged, this.originChanged, this);\n    const storageKeyManager =\n        target.model(SDK.StorageKeyManager.StorageKeyManager) as SDK.StorageKeyManager.StorageKeyManager;\n    this.updateStorageKey(storageKeyManager.mainStorageKey());\n    storageKeyManager.addEventListener(\n        SDK.StorageKeyManager.Events.MAIN_STORAGE_KEY_CHANGED, this.storageKeyChanged, this);\n  }\n\n  targetRemoved(target: SDK.Target.Target): void {\n    if (this.target !== target) {\n      return;\n    }\n    const securityOriginManager = target.model(SDK.SecurityOriginManager.SecurityOriginManager) as\n        SDK.SecurityOriginManager.SecurityOriginManager;\n    securityOriginManager.removeEventListener(\n        SDK.SecurityOriginManager.Events.MainSecurityOriginChanged, this.originChanged, this);\n    const storageKeyManager =\n        target.model(SDK.StorageKeyManager.StorageKeyManager) as SDK.StorageKeyManager.StorageKeyManager;\n    storageKeyManager.removeEventListener(\n        SDK.StorageKeyManager.Events.MAIN_STORAGE_KEY_CHANGED, this.storageKeyChanged, this);\n  }\n\n  private originChanged(\n      event: Common.EventTarget.EventTargetEvent<SDK.SecurityOriginManager.MainSecurityOriginChangedEvent>): void {\n    const {mainSecurityOrigin, unreachableMainSecurityOrigin} = event.data;\n    this.updateOrigin(mainSecurityOrigin, unreachableMainSecurityOrigin);\n  }\n\n  private storageKeyChanged(\n      event: Common.EventTarget.EventTargetEvent<SDK.StorageKeyManager.MainStorageKeyChangedEvent>): void {\n    const {mainStorageKey} = event.data;\n    this.updateStorageKey(mainStorageKey);\n  }\n\n  private updateOrigin(mainOrigin: string, unreachableMainOrigin: string|null): void {\n    const oldOrigin = this.securityOrigin;\n    if (unreachableMainOrigin) {\n      this.securityOrigin = unreachableMainOrigin;\n      this.reportView.setSubtitle(i18nString(UIStrings.sFailedToLoad, {PH1: unreachableMainOrigin}));\n    } else {\n      this.securityOrigin = mainOrigin;\n      this.reportView.setSubtitle(mainOrigin);\n    }\n\n    if (oldOrigin !== this.securityOrigin) {\n      this.quotaOverrideControlRow.classList.add('hidden');\n      this.quotaOverrideCheckbox.checked = false;\n      this.quotaOverrideErrorMessage.textContent = '';\n    }\n    void this.doUpdate();\n  }\n\n  private updateStorageKey(mainStorageKey: string): void {\n    const oldStorageKey = this.storageKey;\n\n    this.storageKey = mainStorageKey;\n    this.reportView.setSubtitle(mainStorageKey);\n\n    if (oldStorageKey !== this.storageKey) {\n      this.quotaOverrideControlRow.classList.add('hidden');\n      this.quotaOverrideCheckbox.checked = false;\n      this.quotaOverrideErrorMessage.textContent = '';\n    }\n    void this.doUpdate();\n  }\n\n  private async applyQuotaOverrideFromInputField(): Promise<void> {\n    if (!this.target || !this.securityOrigin) {\n      this.quotaOverrideErrorMessage.textContent = i18nString(UIStrings.internalError);\n      return;\n    }\n    this.quotaOverrideErrorMessage.textContent = '';\n    const editorString = this.quotaOverrideEditor.value;\n    if (editorString === '') {\n      await this.clearQuotaForOrigin(this.target, this.securityOrigin);\n      this.previousOverrideFieldValue = '';\n      return;\n    }\n    const quota = parseFloat(editorString);\n    if (!Number.isFinite(quota)) {\n      this.quotaOverrideErrorMessage.textContent = i18nString(UIStrings.pleaseEnterANumber);\n      return;\n    }\n    if (quota < 0) {\n      this.quotaOverrideErrorMessage.textContent = i18nString(UIStrings.numberMustBeNonNegative);\n      return;\n    }\n    const cutoff = 9_000_000_000_000;\n    if (quota >= cutoff) {\n      this.quotaOverrideErrorMessage.textContent =\n          i18nString(UIStrings.numberMustBeSmaller, {PH1: cutoff.toLocaleString()});\n      return;\n    }\n    const bytesPerMB = 1000 * 1000;\n    const quotaInBytes = Math.round(quota * bytesPerMB);\n    const quotaFieldValue = `${quotaInBytes / bytesPerMB}`;\n    this.quotaOverrideEditor.value = quotaFieldValue;\n    this.previousOverrideFieldValue = quotaFieldValue;\n    await this.target.storageAgent().invoke_overrideQuotaForOrigin(\n        {origin: this.securityOrigin, quotaSize: quotaInBytes});\n  }\n\n  private async clearQuotaForOrigin(target: SDK.Target.Target, origin: string): Promise<void> {\n    await target.storageAgent().invoke_overrideQuotaForOrigin({origin});\n  }\n\n  private async onClickCheckbox(): Promise<void> {\n    if (this.quotaOverrideControlRow.classList.contains('hidden')) {\n      this.quotaOverrideControlRow.classList.remove('hidden');\n      this.quotaOverrideCheckbox.checked = true;\n      this.quotaOverrideEditor.value = this.previousOverrideFieldValue;\n      this.quotaOverrideEditor.focus();\n    } else if (this.target && this.securityOrigin) {\n      this.quotaOverrideControlRow.classList.add('hidden');\n      this.quotaOverrideCheckbox.checked = false;\n      await this.clearQuotaForOrigin(this.target, this.securityOrigin);\n      this.quotaOverrideErrorMessage.textContent = '';\n    }\n  }\n\n  private clear(): void {\n    if (!this.securityOrigin) {\n      return;\n    }\n    const selectedStorageTypes = [];\n    for (const type of this.settings.keys()) {\n      const setting = this.settings.get(type);\n      if (setting?.get()) {\n        selectedStorageTypes.push(type);\n      }\n    }\n\n    if (this.target) {\n      const includeThirdPartyCookies = this.includeThirdPartyCookiesSetting.get();\n      StorageView.clear(\n          this.target, this.storageKey, this.securityOrigin, selectedStorageTypes, includeThirdPartyCookies);\n    }\n\n    this.clearButton.disabled = true;\n    const label = this.clearButton.textContent;\n    this.clearButton.textContent = i18nString(UIStrings.clearing);\n    window.setTimeout(() => {\n      this.clearButton.disabled = false;\n      this.clearButton.textContent = label;\n      this.clearButton.focus();\n    }, 500);\n\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.SiteDataCleared));\n  }\n\n  static clear(\n      target: SDK.Target.Target, storageKey: string|null, originForCookies: string|null, selectedStorageTypes: string[],\n      includeThirdPartyCookies: boolean): void {\n    console.assert(Boolean(storageKey));\n    if (!storageKey) {\n      return;\n    }\n    void target.storageAgent().invoke_clearDataForStorageKey(\n        {storageKey, storageTypes: selectedStorageTypes.join(',')});\n\n    const set = new Set(selectedStorageTypes);\n    const hasAll = set.has(Protocol.Storage.StorageType.All);\n\n    if (set.has(Protocol.Storage.StorageType.Local_storage) || hasAll) {\n      const storageModel = target.model(DOMStorageModel);\n      if (storageModel) {\n        storageModel.clearForStorageKey(storageKey);\n      }\n    }\n\n    if (set.has(Protocol.Storage.StorageType.Indexeddb) || hasAll) {\n      for (const target of SDK.TargetManager.TargetManager.instance().targets()) {\n        const indexedDBModel = target.model(IndexedDBModel);\n        if (indexedDBModel) {\n          indexedDBModel.clearForStorageKey(storageKey);\n        }\n      }\n    }\n\n    if (originForCookies && (set.has(Protocol.Storage.StorageType.Cookies) || hasAll)) {\n      void target.storageAgent().invoke_clearDataForOrigin(\n          {origin: originForCookies, storageTypes: Protocol.Storage.StorageType.Cookies});\n      const cookieModel = target.model(SDK.CookieModel.CookieModel);\n      if (cookieModel) {\n        void cookieModel.clear(undefined, includeThirdPartyCookies ? undefined : originForCookies);\n      }\n    }\n\n    if (set.has(Protocol.Storage.StorageType.Cache_storage) || hasAll) {\n      const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n      const model = target?.model(SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel);\n      if (model) {\n        model.clearForStorageKey(storageKey);\n      }\n    }\n  }\n\n  override async doUpdate(): Promise<void> {\n    if (!this.securityOrigin || !this.target) {\n      this.quotaRow.textContent = '';\n      this.populatePieChart(0, []);\n      return;\n    }\n\n    const securityOrigin = this.securityOrigin;\n    const response = await this.target.storageAgent().invoke_getUsageAndQuota({origin: securityOrigin});\n    this.quotaRow.textContent = '';\n    if (response.getError()) {\n      this.populatePieChart(0, []);\n      return;\n    }\n    const quotaOverridden = response.overrideActive;\n    const quotaAsString = i18n.ByteUtilities.bytesToString(response.quota);\n    const usageAsString = i18n.ByteUtilities.bytesToString(response.usage);\n    const formattedQuotaAsString = i18nString(UIStrings.storageWithCustomMarker, {PH1: quotaAsString});\n    const quota =\n        quotaOverridden ? UI.Fragment.Fragment.build`<b>${formattedQuotaAsString}</b>`.element() : quotaAsString;\n    const element =\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.storageQuotaUsed, {PH1: usageAsString, PH2: quota});\n    this.quotaRow.appendChild(element);\n    UI.Tooltip.Tooltip.install(\n        this.quotaRow,\n        i18nString(\n            UIStrings.storageQuotaUsedWithBytes,\n            {PH1: response.usage.toLocaleString(), PH2: response.quota.toLocaleString()}));\n\n    if (!response.overrideActive && response.quota < 125829120) {  // 120 MB\n      const icon = new IconButton.Icon.Icon();\n      icon.name = 'info';\n      icon.style.color = 'var(--icon-info)';\n      icon.classList.add('small');\n      UI.Tooltip.Tooltip.install(this.quotaRow, i18nString(UIStrings.storageQuotaIsLimitedIn));\n      this.quotaRow.appendChild(icon);\n    }\n\n    if (this.quotaUsage === null || this.quotaUsage !== response.usage) {\n      this.quotaUsage = response.usage;\n      const slices: PerfUI.PieChart.Slice[] = [];\n      for (const usageForType of response.usageBreakdown.sort((a, b) => b.usage - a.usage)) {\n        const value = usageForType.usage;\n        if (!value) {\n          continue;\n        }\n        const title = this.getStorageTypeName(usageForType.storageType);\n        const color = this.pieColors.get(usageForType.storageType) || '#ccc';\n        slices.push({value, color, title});\n      }\n      this.populatePieChart(response.usage, slices);\n    }\n\n    this.update();\n  }\n\n  private populatePieChart(total: number, slices: PerfUI.PieChart.Slice[]): void {\n    this.pieChart.data = {\n      chartName: i18nString(UIStrings.storageUsage),\n      size: 110,\n      formatter: i18n.ByteUtilities.bytesToString,\n      showLegend: true,\n      total,\n      slices,\n    };\n  }\n\n  private getStorageTypeName(type: Protocol.Storage.StorageType): string {\n    switch (type) {\n      case Protocol.Storage.StorageType.File_systems:\n        return i18nString(UIStrings.fileSystem);\n      case Protocol.Storage.StorageType.Indexeddb:\n        return i18nString(UIStrings.indexDB);\n      case Protocol.Storage.StorageType.Cache_storage:\n        return i18nString(UIStrings.cacheStorage);\n      case Protocol.Storage.StorageType.Service_workers:\n        return i18nString(UIStrings.serviceWorkers);\n      default:\n        return i18nString(UIStrings.other);\n    }\n  }\n}\n\nexport const AllStorageTypes = [\n  Protocol.Storage.StorageType.Cache_storage,\n  Protocol.Storage.StorageType.Cookies,\n  Protocol.Storage.StorageType.Indexeddb,\n  Protocol.Storage.StorageType.Local_storage,\n  Protocol.Storage.StorageType.Service_workers,\n];\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'resources.clear':\n        return this.handleClear(false);\n      case 'resources.clear-incl-third-party-cookies':\n        return this.handleClear(true);\n    }\n    return false;\n  }\n\n  private handleClear(includeThirdPartyCookies: boolean): boolean {\n    const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    if (!target) {\n      return false;\n    }\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      return false;\n    }\n    const securityOrigin = resourceTreeModel.getMainSecurityOrigin();\n    resourceTreeModel.getMainStorageKey().then(storageKey => {\n      StorageView.clear(target, storageKey, securityOrigin, AllStorageTypes, includeThirdPartyCookies);\n    }, _ => {});\n    return true;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.report-row {\n  display: flex;\n  align-items: center;\n  white-space: normal;\n\n  &:has(.quota-override-error:empty) {\n    margin: 0;\n  }\n}\n\n.clear-storage-button .report-row {\n  display: flex;\n}\n\n.link {\n  margin-left: 10px;\n  display: none;\n}\n\n.report-row:hover .link {\n  display: inline;\n}\n\n.quota-override-editor-with-button {\n  align-items: baseline;\n  display: flex;\n}\n\n.quota-override-notification-editor {\n  border: solid 1px var(--sys-color-neutral-outline);\n  border-radius: 4px;\n  display: flex;\n  flex: auto;\n  margin-right: 4px;\n  max-width: 200px;\n  min-width: 50px;\n  min-height: 19px;\n  padding-left: 4px;\n\n  &:focus {\n    border-color: var(--sys-color-state-focus-ring);\n  }\n\n  &:hover:not(:focus) {\n    background-color: var(--sys-color-state-hover-on-subtle);\n  }\n}\n\n.quota-override-error:not(:empty) {\n  padding-top: 10px;\n  color: var(--sys-color-error);\n}\n\n.usage-breakdown-row {\n  min-width: fit-content;\n}\n\n.clear-storage-container {\n  overflow: auto;\n}\n\n.clear-storage-header {\n  min-width: 400px;\n}\n\n.report-content-box {\n  overflow: initial;\n}\n\n.include-third-party-cookies {\n  flex: 1;\n  min-width: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-left: 10px;\n}\n\n/*# sourceURL=${import.meta.resolve('./storageView.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport * as ApplicationComponents from './components/components.js';\nimport type {ResourcesPanel} from './ResourcesPanel.js';\n\nconst UIStrings = {\n  /**\n   * @description Hover text for an info icon in the Private State Token panel.\n   * Previously known as 'Trust Tokens'.\n   */\n  trustTokens: 'Private state tokens',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/TrustTokensTreeElement.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class TrustTokensTreeElement extends ApplicationPanelTreeElement {\n  private view?: LegacyWrapper.LegacyWrapper\n      .LegacyWrapper<UI.Widget.Widget, ApplicationComponents.TrustTokensView.TrustTokensView>;\n\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, i18nString(UIStrings.trustTokens), false, 'private-state-tokens');\n    const icon = IconButton.Icon.create('database');\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'trustTokens://' as Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = LegacyWrapper.LegacyWrapper.legacyWrapper(\n          UI.Widget.Widget, new ApplicationComponents.TrustTokensView.TrustTokensView(), 'trust-tokens');\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown('trust-tokens');\n    return false;\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2009 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as CookieTable from '../../ui/legacy/components/cookie_table/cookie_table.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport cookieItemsViewStyles from './cookieItemsView.css.js';\nimport {StorageItemsToolbar} from './StorageItemsToolbar.js';\n\nconst UIStrings = {\n  /**\n   * @description Label for checkbox to show URL-decoded cookie values\n   */\n  showUrlDecoded: 'Show URL-decoded',\n  /**\n   * @description Text in Cookie Items View of the Application panel to indicate that no cookie has been selected for preview\n   */\n  noCookieSelected: 'No cookie selected',\n  /**\n   * @description Text in Cookie Items View of the Application panel\n   */\n  selectACookieToPreviewItsValue: 'Select a cookie to preview its value',\n  /**\n   * @description Text for filter in Cookies View of the Application panel\n   */\n  onlyShowCookiesWithAnIssue: 'Only show cookies with an issue',\n  /**\n   * @description Title for filter in the Cookies View of the Application panel\n   */\n  onlyShowCookiesWhichHaveAn: 'Only show cookies that have an associated issue',\n  /**\n   * @description Label to only delete the cookies that are visible after filtering\n   */\n  clearFilteredCookies: 'Clear filtered cookies',\n  /**\n   * @description Label to delete all cookies\n   */\n  clearAllCookies: 'Clear all cookies',\n  /**\n   * @description Alert message for screen reader to announce # of cookies in the table\n   * @example {5} PH1\n   */\n  numberOfCookiesShownInTableS: 'Number of cookies shown in table: {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/CookieItemsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nclass CookiePreviewWidget extends UI.Widget.VBox {\n  private cookie: SDK.Cookie.Cookie|null;\n  private showDecodedSetting: Common.Settings.Setting<boolean>;\n  private toggle: UI.UIUtils.CheckboxLabel;\n  private value: HTMLDivElement;\n\n  constructor() {\n    super({jslog: `${VisualLogging.section('cookie-preview')}`});\n    this.setMinimumSize(230, 45);\n    this.cookie = null;\n    this.showDecodedSetting = Common.Settings.Settings.instance().createSetting('cookie-view-show-decoded', false);\n\n    const header = document.createElement('div');\n    header.classList.add('cookie-preview-widget-header');\n    const span = document.createElement('span');\n    span.classList.add('cookie-preview-widget-header-label');\n    span.textContent = 'Cookie Value';\n    header.appendChild(span);\n    this.contentElement.appendChild(header);\n\n    const toggle = UI.UIUtils.CheckboxLabel.create(\n        i18nString(UIStrings.showUrlDecoded), this.showDecodedSetting.get(), undefined, 'show-url-decoded');\n    toggle.title = i18nString(UIStrings.showUrlDecoded);\n    toggle.classList.add('cookie-preview-widget-toggle');\n    toggle.addEventListener('click', () => this.showDecoded(!this.showDecodedSetting.get()));\n    header.appendChild(toggle);\n    this.toggle = toggle;\n\n    const value = document.createElement('div');\n    value.classList.add('cookie-preview-widget-cookie-value');\n    value.textContent = '';\n    value.addEventListener('dblclick', this.handleDblClickOnCookieValue.bind(this));\n    this.value = value;\n\n    this.contentElement.classList.add('cookie-preview-widget');\n    this.contentElement.appendChild(value);\n  }\n\n  showDecoded(decoded: boolean): void {\n    if (!this.cookie) {\n      return;\n    }\n    this.showDecodedSetting.set(decoded);\n    this.toggle.checked = decoded;\n    this.updatePreview();\n  }\n\n  private updatePreview(): void {\n    if (this.cookie) {\n      this.value.textContent =\n          this.showDecodedSetting.get() ? decodeURIComponent(this.cookie.value()) : this.cookie.value();\n    } else {\n      this.value.textContent = '';\n    }\n  }\n\n  setCookie(cookie: SDK.Cookie.Cookie): void {\n    this.cookie = cookie;\n    this.updatePreview();\n  }\n\n  /**\n   * Select all text even if there a spaces in it\n   */\n  handleDblClickOnCookieValue(event: Event): void {\n    event.preventDefault();\n    const range = document.createRange();\n    range.selectNode(this.value);\n    const selection = window.getSelection();\n    if (!selection) {\n      return;\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport class CookieItemsView extends UI.Widget.VBox {\n  private model: SDK.CookieModel.CookieModel;\n  private cookieDomain: string;\n  private cookiesTable: CookieTable.CookiesTable.CookiesTable;\n  private readonly splitWidget: UI.SplitWidget.SplitWidget;\n  private readonly previewPanel: UI.Widget.VBox;\n  private readonly previewWidget: CookiePreviewWidget;\n  private readonly emptyWidget: UI.EmptyWidget.EmptyWidget;\n  private onlyIssuesFilterUI: UI.Toolbar.ToolbarCheckbox;\n  private allCookies: SDK.Cookie.Cookie[];\n  private shownCookies: SDK.Cookie.Cookie[];\n  private selectedCookie: SDK.Cookie.Cookie|null;\n  #toolbar: StorageItemsToolbar;\n  constructor(model: SDK.CookieModel.CookieModel, cookieDomain: string) {\n    super({jslog: `${VisualLogging.pane('cookies-data')}`});\n    this.registerRequiredCSS(cookieItemsViewStyles);\n\n    this.element.classList.add('storage-view');\n\n    this.model = model;\n    this.cookieDomain = cookieDomain;\n\n    this.#toolbar = new StorageItemsToolbar();\n    this.#toolbar.element.classList.add('flex-none');\n    this.#toolbar.show(this.element);\n\n    this.cookiesTable = new CookieTable.CookiesTable.CookiesTable(\n        /* renderInline */ false, this.saveCookie.bind(this), this.refreshItems.bind(this),\n        this.handleCookieSelected.bind(this), this.deleteCookie.bind(this));\n\n    this.cookiesTable.setMinimumSize(0, 50);\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(\n        /* isVertical: */ false, /* secondIsSidebar: */ true, 'cookie-items-split-view-state');\n    this.splitWidget.show(this.element);\n\n    this.previewPanel = new UI.Widget.VBox();\n    this.previewPanel.element.setAttribute('jslog', `${VisualLogging.pane('preview').track({resize: true})}`);\n    const resizer = this.previewPanel.element.createChild('div', 'preview-panel-resizer');\n\n    this.splitWidget.setMainWidget(this.cookiesTable);\n    this.splitWidget.setSidebarWidget(this.previewPanel);\n    this.splitWidget.installResizer(resizer);\n\n    this.previewWidget = new CookiePreviewWidget();\n    this.emptyWidget = new UI.EmptyWidget.EmptyWidget(\n        i18nString(UIStrings.noCookieSelected), i18nString(UIStrings.selectACookieToPreviewItsValue));\n    this.emptyWidget.show(this.previewPanel.contentElement);\n\n    this.onlyIssuesFilterUI = new UI.Toolbar.ToolbarCheckbox(\n        i18nString(UIStrings.onlyShowCookiesWithAnIssue), i18nString(UIStrings.onlyShowCookiesWhichHaveAn), () => {\n          this.updateWithCookies(this.allCookies);\n        }, 'only-show-cookies-with-issues');\n    this.#toolbar.appendToolbarItem(this.onlyIssuesFilterUI);\n\n    this.allCookies = [];\n    this.shownCookies = [];\n    this.selectedCookie = null;\n\n    this.setCookiesDomain(model, cookieDomain);\n\n    this.#toolbar.addEventListener(StorageItemsToolbar.Events.DELETE_SELECTED, this.deleteSelectedItem, this);\n    this.#toolbar.addEventListener(StorageItemsToolbar.Events.DELETE_ALL, this.deleteAllItems, this);\n    this.#toolbar.addEventListener(StorageItemsToolbar.Events.REFRESH, this.refreshItems, this);\n  }\n\n  setCookiesDomain(model: SDK.CookieModel.CookieModel, domain: string): void {\n    this.model.removeEventListener(SDK.CookieModel.Events.COOKIE_LIST_UPDATED, this.onCookieListUpdate, this);\n    this.model = model;\n    this.cookieDomain = domain;\n    this.refreshItems();\n    this.model.addEventListener(SDK.CookieModel.Events.COOKIE_LIST_UPDATED, this.onCookieListUpdate, this);\n  }\n\n  override wasShown(): void {\n    this.refreshItems();\n  }\n\n  private showPreview(cookie: SDK.Cookie.Cookie|null): void {\n    if (cookie === this.selectedCookie) {\n      return;\n    }\n    this.selectedCookie = cookie;\n\n    if (!cookie) {\n      this.previewWidget.detach();\n      this.emptyWidget.show(this.previewPanel.contentElement);\n    } else {\n      this.emptyWidget.detach();\n      this.previewWidget.setCookie(cookie);\n      this.previewWidget.show(this.previewPanel.contentElement);\n    }\n  }\n\n  private handleCookieSelected(): void {\n    const cookie = this.cookiesTable.selectedCookie();\n    this.#toolbar.setCanDeleteSelected(Boolean(cookie));\n\n    this.showPreview(cookie);\n  }\n\n  private async saveCookie(newCookie: SDK.Cookie.Cookie, oldCookie: SDK.Cookie.Cookie|null): Promise<boolean> {\n    if (oldCookie && newCookie.key() !== oldCookie.key()) {\n      await this.model.deleteCookie(oldCookie);\n    }\n    return await this.model.saveCookie(newCookie);\n  }\n\n  private deleteCookie(cookie: SDK.Cookie.Cookie, callback: () => void): void {\n    void this.model.deleteCookie(cookie).then(callback);\n  }\n\n  private updateWithCookies(allCookies: SDK.Cookie.Cookie[]): void {\n    this.allCookies = allCookies;\n\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(this.cookieDomain);\n    const host = parsedURL ? parsedURL.host : '';\n    this.cookiesTable.setCookieDomain(host);\n\n    this.shownCookies = this.filter(allCookies, cookie => `${cookie.name()} ${cookie.value()} ${cookie.domain()}`);\n    if (this.#toolbar.hasFilter()) {\n      this.#toolbar.setDeleteAllTitle(i18nString(UIStrings.clearFilteredCookies));\n      this.#toolbar.setDeleteAllGlyph('filter-clear');\n    } else {\n      this.#toolbar.setDeleteAllTitle(i18nString(UIStrings.clearAllCookies));\n      this.#toolbar.setDeleteAllGlyph('clear-list');\n    }\n    this.cookiesTable.setCookies(this.shownCookies, this.model.getCookieToBlockedReasonsMap());\n    UI.ARIAUtils.LiveAnnouncer.alert(\n        i18nString(UIStrings.numberOfCookiesShownInTableS, {PH1: this.shownCookies.length}));\n    this.#toolbar.setCanFilter(true);\n    this.#toolbar.setCanDeleteAll(this.shownCookies.length > 0);\n    this.#toolbar.setCanDeleteSelected(Boolean(this.cookiesTable.selectedCookie()));\n\n    if (!this.cookiesTable.selectedCookie()) {\n      this.showPreview(null);\n    }\n  }\n\n  filter<T>(items: T[], keyFunction: (arg0: T) => string): T[] {\n    const predicate = (object: T|null): boolean => {\n      if (!this.onlyIssuesFilterUI.checked()) {\n        return true;\n      }\n      if (object instanceof SDK.Cookie.Cookie) {\n        return IssuesManager.RelatedIssue.hasIssues(object);\n      }\n      return false;\n    };\n    return items.filter(item => this.#toolbar.filterRegex?.test(keyFunction(item)) ?? true).filter(predicate);\n  }\n\n  /**\n   * This will only delete the currently visible cookies.\n   */\n  deleteAllItems(): void {\n    this.showPreview(null);\n    void this.model.deleteCookies(this.shownCookies);\n  }\n\n  deleteSelectedItem(): void {\n    const selectedCookie = this.cookiesTable.selectedCookie();\n    if (selectedCookie) {\n      this.showPreview(null);\n      void this.model.deleteCookie(selectedCookie);\n    }\n  }\n\n  private onCookieListUpdate(): void {\n    void this.model.getCookiesForDomain(this.cookieDomain).then(this.updateWithCookies.bind(this));\n  }\n\n  refreshItems(): void {\n    void this.model.getCookiesForDomain(this.cookieDomain, true).then(this.updateWithCookies.bind(this));\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2019 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.cookie-preview-widget {\n  padding: 2px 6px;\n}\n\n.cookie-preview-widget-header {\n  font-weight: bold;\n  user-select: none;\n  white-space: nowrap;\n  margin-bottom: 4px;\n  flex: 0 0 18px;\n  display: flex;\n  align-items: center;\n}\n\n.cookie-preview-widget-header-label {\n  line-height: 18px;\n  flex-shrink: 0;\n}\n\n.cookie-preview-widget-cookie-value {\n  user-select: text;\n  word-break: break-all;\n  flex: 1;\n  overflow: auto;\n}\n\n.cookie-preview-widget-toggle {\n  margin-left: 12px;\n  font-weight: normal;\n  flex-shrink: 1;\n}\n\n/*# sourceURL=${import.meta.resolve('./cookieItemsView.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2008 Nokia Inc.  All rights reserved.\n * Copyright (C) 2013 Samsung Electronics. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {DOMStorage} from './DOMStorageModel.js';\nimport {KeyValueStorageItemsView} from './KeyValueStorageItemsView.js';\n\nconst UIStrings = {\n  /**\n   * @description Name for the \"DOM Storage Items\" table that shows the content of the DOM Storage.\n   */\n  domStorageItems: 'DOM Storage Items',\n  /**\n   * @description Text for announcing that the \"DOM Storage Items\" table was cleared, that is, all\n   * entries were deleted.\n   */\n  domStorageItemsCleared: 'DOM Storage Items cleared',\n  /**\n   * @description Text for announcing a DOM Storage key/value item has been deleted\n   */\n  domStorageItemDeleted: 'The storage item was deleted.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/DOMStorageItemsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class DOMStorageItemsView extends KeyValueStorageItemsView {\n  private domStorage: DOMStorage;\n  private eventListeners: Common.EventTarget.EventDescriptor[];\n\n  constructor(domStorage: DOMStorage) {\n    super(i18nString(UIStrings.domStorageItems), 'dom-storage', true);\n\n    this.domStorage = domStorage;\n    if (domStorage.storageKey) {\n      this.toolbar?.setStorageKey(domStorage.storageKey);\n    }\n\n    this.element.classList.add('storage-view', 'table');\n\n    this.showPreview(null, null);\n\n    this.eventListeners = [];\n    this.setStorage(domStorage);\n  }\n\n  protected createPreview(key: string, value: string): Promise<UI.Widget.Widget|null> {\n    const protocol = this.domStorage.isLocalStorage ? 'localstorage' : 'sessionstorage';\n    const url = `${protocol}://${key}` as Platform.DevToolsPath.UrlString;\n    const provider = TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n        url,\n        Common.ResourceType.resourceTypes.XHR,\n        value,\n    );\n    return SourceFrame.PreviewFactory.PreviewFactory.createPreview(\n        provider,\n        'text/plain',\n    );\n  }\n\n  setStorage(domStorage: DOMStorage): void {\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n    this.domStorage = domStorage;\n    const storageKind = domStorage.isLocalStorage ? 'local-storage-data' : 'session-storage-data';\n    this.element.setAttribute('jslog', `${VisualLogging.pane().context(storageKind)}`);\n    if (domStorage.storageKey) {\n      this.toolbar?.setStorageKey(domStorage.storageKey);\n    }\n    this.eventListeners = [\n      this.domStorage.addEventListener(DOMStorage.Events.DOM_STORAGE_ITEMS_CLEARED, this.domStorageItemsCleared, this),\n      this.domStorage.addEventListener(DOMStorage.Events.DOM_STORAGE_ITEM_REMOVED, this.domStorageItemRemoved, this),\n      this.domStorage.addEventListener(DOMStorage.Events.DOM_STORAGE_ITEM_ADDED, this.domStorageItemAdded, this),\n      this.domStorage.addEventListener(DOMStorage.Events.DOM_STORAGE_ITEM_UPDATED, this.domStorageItemUpdated, this),\n    ];\n    this.refreshItems();\n  }\n\n  private domStorageItemsCleared(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    this.itemsCleared();\n  }\n\n  override itemsCleared(): void {\n    super.itemsCleared();\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.domStorageItemsCleared));\n  }\n\n  private domStorageItemRemoved(event: Common.EventTarget.EventTargetEvent<DOMStorage.DOMStorageItemRemovedEvent>):\n      void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    this.itemRemoved(event.data.key);\n  }\n\n  override itemRemoved(key: string): void {\n    super.itemRemoved(key);\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.domStorageItemDeleted));\n  }\n\n  private domStorageItemAdded(event: Common.EventTarget.EventTargetEvent<DOMStorage.DOMStorageItemAddedEvent>): void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    this.itemAdded(event.data.key, event.data.value);\n  }\n\n  private domStorageItemUpdated(event: Common.EventTarget.EventTargetEvent<DOMStorage.DOMStorageItemUpdatedEvent>):\n      void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    this.itemUpdated(event.data.key, event.data.value);\n  }\n\n  override refreshItems(): void {\n    void this.#refreshItems();\n  }\n\n  async #refreshItems(): Promise<void> {\n    const items = await this.domStorage.getItems();\n    if (!items || !this.toolbar) {\n      return;\n    }\n    const {filterRegex} = this.toolbar;\n    const filteredItems = items.map(item => ({key: item[0], value: item[1]}))\n                              .filter(item => filterRegex?.test(`${item.key} ${item.value}`) ?? true);\n    this.showItems(filteredItems);\n  }\n\n  override deleteAllItems(): void {\n    this.domStorage.clear();\n    // explicitly clear the view because the event won't be fired when it has no items\n    this.domStorageItemsCleared();\n  }\n\n  protected removeItem(key: string): void {\n    this.domStorage?.removeItem(key);\n  }\n\n  protected setItem(key: string, value: string): void {\n    this.domStorage?.setItem(key, value);\n  }\n}\n", "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2008 Nokia Inc.  All rights reserved.\n * Copyright (C) 2013 Samsung Electronics. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as JSON5 from '../../third_party/json5/json5.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport type {ExtensionStorage} from './ExtensionStorageModel.js';\nimport {KeyValueStorageItemsView, type View as KeyValueStorageItemsViewFunction} from './KeyValueStorageItemsView.js';\n\nconst UIStrings = {\n  /**\n   * @description Name for the \"Extension Storage Items\" table that shows the content of the extension Storage.\n   */\n  extensionStorageItems: 'Extension Storage Items',\n  /**\n   * @description Text for announcing that the \"Extension Storage Items\" table was cleared, that is, all\n   * entries were deleted.\n   */\n  extensionStorageItemsCleared: 'Extension Storage Items cleared',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ExtensionStorageItemsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport namespace ExtensionStorageItemsDispatcher {\n  export const enum Events {\n    ITEM_EDITED = 'ItemEdited',\n    ITEMS_REFRESHED = 'ItemsRefreshed',\n  }\n\n  export interface EventTypes {\n    [Events.ITEM_EDITED]: void;\n    [Events.ITEMS_REFRESHED]: void;\n  }\n}\n\nexport class ExtensionStorageItemsView extends KeyValueStorageItemsView {\n  #extensionStorage!: ExtensionStorage;\n  readonly extensionStorageItemsDispatcher:\n      Common.ObjectWrapper.ObjectWrapper<ExtensionStorageItemsDispatcher.EventTypes>;\n\n  constructor(extensionStorage: ExtensionStorage, view?: KeyValueStorageItemsViewFunction) {\n    super(i18nString(UIStrings.extensionStorageItems), 'extension-storage', true, view);\n\n    this.element.setAttribute('jslog', `${VisualLogging.pane().context('extension-storage-data')}`);\n    this.element.classList.add('storage-view', 'table');\n\n    this.extensionStorageItemsDispatcher =\n        new Common.ObjectWrapper.ObjectWrapper<ExtensionStorageItemsDispatcher.EventTypes>();\n\n    this.setStorage(extensionStorage);\n  }\n\n  get #isEditable(): boolean {\n    // The managed storage area is always read only, since it exposes values\n    // set by enterprise policy.\n    return this.#extensionStorage.storageArea !== Protocol.Extensions.StorageArea.Managed;\n  }\n\n  /**\n   * When parsing a value provided by the user, attempt to treat it as JSON,\n   * falling back to a string otherwise.\n   */\n  parseValue(input: string): unknown {\n    try {\n      return JSON5.parse(input);\n    } catch {\n      return input;\n    }\n  }\n\n  protected removeItem(key: string): void {\n    void this.#extensionStorage.removeItem(key).then(() => {\n      this.refreshItems();\n    });\n  }\n\n  protected setItem(key: string, value: string): void {\n    void this.#extensionStorage.setItem(key, this.parseValue(value)).then(() => {\n      this.refreshItems();\n      this.extensionStorageItemsDispatcher.dispatchEventToListeners(ExtensionStorageItemsDispatcher.Events.ITEM_EDITED);\n    });\n  }\n\n  protected createPreview(key: string, value: string): Promise<UI.Widget.Widget|null> {\n    const url = 'extension-storage://' + this.#extensionStorage.extensionId + '/' + this.#extensionStorage.storageArea +\n            '/preview/' + key as Platform.DevToolsPath.UrlString;\n    const provider = TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n        url,\n        Common.ResourceType.resourceTypes.XHR,\n        value,\n    );\n    return SourceFrame.PreviewFactory.PreviewFactory.createPreview(\n        provider,\n        'text/plain',\n    );\n  }\n\n  setStorage(extensionStorage: ExtensionStorage): void {\n    this.#extensionStorage = extensionStorage;\n\n    this.editable = this.#isEditable;\n\n    this.refreshItems();\n  }\n\n  #extensionStorageItemsCleared(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    this.itemsCleared();\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.extensionStorageItemsCleared));\n  }\n\n  override deleteSelectedItem(): void {\n    if (!this.#isEditable) {\n      return;\n    }\n    this.deleteSelectedItem();\n  }\n\n  override refreshItems(): void {\n    void this.#refreshItems();\n  }\n\n  async #refreshItems(): Promise<void> {\n    const items = await this.#extensionStorage.getItems();\n    if (!items || !this.toolbar) {\n      return;\n    }\n    const filteredItems =\n        Object.entries(items)\n            .map(([key, value]) => ({key, value: typeof value === 'string' ? value : JSON.stringify(value)}))\n            .filter(item => this.toolbar?.filterRegex?.test(`${item.key} ${item.value}`) ?? true);\n    this.showItems(filteredItems);\n    this.extensionStorageItemsDispatcher.dispatchEventToListeners(\n        ExtensionStorageItemsDispatcher.Events.ITEMS_REFRESHED);\n  }\n\n  override deleteAllItems(): void {\n    if (!this.#isEditable) {\n      return;\n    }\n    this.#extensionStorage.clear().then(\n        () => {\n          this.#extensionStorageItemsCleared();\n        },\n        () => {\n          throw new Error('Unable to clear storage.');\n        });\n  }\n}\n", "// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ApplicationPanelSidebar, StorageCategoryView} from './ApplicationPanelSidebar.js';\nimport {CookieItemsView} from './CookieItemsView.js';\nimport {DOMStorageItemsView} from './DOMStorageItemsView.js';\nimport type {DOMStorage} from './DOMStorageModel.js';\nimport {ExtensionStorageItemsView} from './ExtensionStorageItemsView.js';\nimport type {ExtensionStorage} from './ExtensionStorageModel.js';\nimport type * as PreloadingHelper from './preloading/helper/helper.js';\nimport resourcesPanelStyles from './resourcesPanel.css.js';\nimport {StorageItemsToolbar} from './StorageItemsToolbar.js';\n\nlet resourcesPanelInstance: ResourcesPanel;\n\nexport class ResourcesPanel extends UI.Panel.PanelWithSidebar {\n  private readonly resourcesLastSelectedItemSetting: Common.Settings.Setting<Platform.DevToolsPath.UrlString[]>;\n  visibleView: UI.Widget.Widget|null;\n  private pendingViewPromise: Promise<UI.Widget.Widget>|null;\n  private categoryView: StorageCategoryView|null;\n  storageViews: HTMLElement;\n  private readonly storageViewToolbar: UI.Toolbar.Toolbar;\n  private domStorageView: DOMStorageItemsView|null;\n  private extensionStorageView: ExtensionStorageItemsView|null;\n  private cookieView: CookieItemsView|null;\n  private readonly sidebar: ApplicationPanelSidebar;\n\n  private constructor() {\n    super('resources');\n    this.registerRequiredCSS(resourcesPanelStyles);\n\n    this.resourcesLastSelectedItemSetting =\n        Common.Settings.Settings.instance().createSetting('resources-last-selected-element-path', []);\n\n    this.visibleView = null;\n\n    this.pendingViewPromise = null;\n\n    this.categoryView = null;\n\n    const mainContainer = new UI.Widget.VBox();\n    mainContainer.setMinimumSize(100, 0);\n    this.storageViews = mainContainer.element.createChild('div', 'vbox flex-auto');\n    this.storageViewToolbar = mainContainer.element.createChild('devtools-toolbar', 'resources-toolbar');\n    this.splitWidget().setMainWidget(mainContainer);\n\n    this.domStorageView = null;\n    this.extensionStorageView = null;\n\n    this.cookieView = null;\n\n    this.sidebar = new ApplicationPanelSidebar(this);\n    this.sidebar.show(this.panelSidebarElement());\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ResourcesPanel {\n    const {forceNew} = opts;\n    if (!resourcesPanelInstance || forceNew) {\n      resourcesPanelInstance = new ResourcesPanel();\n    }\n\n    return resourcesPanelInstance;\n  }\n\n  private static shouldCloseOnReset(view: UI.Widget.Widget): boolean {\n    const viewClassesToClose = [\n      SourceFrame.ResourceSourceFrame.ResourceSourceFrame,\n      SourceFrame.ImageView.ImageView,\n      SourceFrame.FontView.FontView,\n      StorageItemsToolbar,\n    ];\n    return viewClassesToClose.some(type => view instanceof type);\n  }\n\n  static async showAndGetSidebar(): Promise<ApplicationPanelSidebar> {\n    await UI.ViewManager.ViewManager.instance().showView('resources');\n    return ResourcesPanel.instance().sidebar;\n  }\n\n  override focus(): void {\n    this.sidebar.focus();\n  }\n\n  lastSelectedItemPath(): Platform.DevToolsPath.UrlString[] {\n    return this.resourcesLastSelectedItemSetting.get();\n  }\n\n  setLastSelectedItemPath(path: Platform.DevToolsPath.UrlString[]): void {\n    this.resourcesLastSelectedItemSetting.set(path);\n  }\n\n  resetView(): void {\n    if (this.visibleView && ResourcesPanel.shouldCloseOnReset(this.visibleView)) {\n      this.showView(null);\n    }\n  }\n\n  showView(view: UI.Widget.Widget|null): void {\n    this.pendingViewPromise = null;\n    if (this.visibleView === view) {\n      return;\n    }\n\n    if (this.visibleView) {\n      this.visibleView.detach();\n    }\n\n    if (view) {\n      view.show(this.storageViews);\n    }\n    this.visibleView = view;\n\n    this.storageViewToolbar.removeToolbarItems();\n    this.storageViewToolbar.classList.toggle('hidden', true);\n    if (view instanceof UI.View.SimpleView) {\n      void view.toolbarItems().then(items => {\n        items.map(item => this.storageViewToolbar.appendToolbarItem(item));\n        this.storageViewToolbar.classList.toggle('hidden', !items.length);\n      });\n    }\n  }\n\n  async scheduleShowView(viewPromise: Promise<UI.Widget.Widget>): Promise<UI.Widget.Widget|null> {\n    this.pendingViewPromise = viewPromise;\n    const view = await viewPromise;\n    if (this.pendingViewPromise !== viewPromise) {\n      return null;\n    }\n    this.showView(view);\n    return view;\n  }\n\n  showCategoryView(\n      categoryName: string, categoryHeadline: string, categoryDescription: string,\n      categoryLink: Platform.DevToolsPath.UrlString|null): void {\n    if (!this.categoryView) {\n      this.categoryView = new StorageCategoryView();\n    }\n    this.categoryView.element.setAttribute(\n        'jslog', `${VisualLogging.pane().context(Platform.StringUtilities.toKebabCase(categoryName))}`);\n    this.categoryView.setHeadline(categoryHeadline);\n    this.categoryView.setText(categoryDescription);\n    this.categoryView.setLink(categoryLink);\n    this.showView(this.categoryView);\n  }\n\n  showDOMStorage(domStorage: DOMStorage): void {\n    if (!domStorage) {\n      return;\n    }\n\n    if (!this.domStorageView) {\n      this.domStorageView = new DOMStorageItemsView(domStorage);\n    } else {\n      this.domStorageView.setStorage(domStorage);\n    }\n    this.showView(this.domStorageView);\n  }\n\n  showExtensionStorage(extensionStorage: ExtensionStorage): void {\n    if (!extensionStorage) {\n      return;\n    }\n\n    if (!this.extensionStorageView) {\n      this.extensionStorageView = new ExtensionStorageItemsView(extensionStorage);\n    } else {\n      this.extensionStorageView.setStorage(extensionStorage);\n    }\n    this.showView(this.extensionStorageView);\n  }\n\n  showCookies(cookieFrameTarget: SDK.Target.Target, cookieDomain: string): void {\n    const model = cookieFrameTarget.model(SDK.CookieModel.CookieModel);\n    if (!model) {\n      return;\n    }\n    if (!this.cookieView) {\n      this.cookieView = new CookieItemsView(model, cookieDomain);\n    } else {\n      this.cookieView.setCookiesDomain(model, cookieDomain);\n    }\n    this.showView(this.cookieView);\n  }\n\n  clearCookies(target: SDK.Target.Target, cookieDomain: string): void {\n    const model = (target.model(SDK.CookieModel.CookieModel));\n    if (!model) {\n      return;\n    }\n    void model.clear(cookieDomain).then(() => {\n      if (this.cookieView) {\n        this.cookieView.refreshItems();\n      }\n    });\n  }\n}\n\nexport class ResourceRevealer implements Common.Revealer.Revealer<SDK.Resource.Resource> {\n  async reveal(resource: SDK.Resource.Resource): Promise<void> {\n    const sidebar = await ResourcesPanel.showAndGetSidebar();\n    await sidebar.showResource(resource);\n  }\n}\n\nexport class FrameDetailsRevealer implements Common.Revealer.Revealer<SDK.ResourceTreeModel.ResourceTreeFrame> {\n  async reveal(frame: SDK.ResourceTreeModel.ResourceTreeFrame): Promise<void> {\n    const sidebar = await ResourcesPanel.showAndGetSidebar();\n    sidebar.showFrame(frame);\n  }\n}\n\nexport class RuleSetViewRevealer implements Common.Revealer.Revealer<PreloadingHelper.PreloadingForward.RuleSetView> {\n  async reveal(revealInfo: PreloadingHelper.PreloadingForward.RuleSetView): Promise<void> {\n    const sidebar = await ResourcesPanel.showAndGetSidebar();\n    sidebar.showPreloadingRuleSetView(revealInfo);\n  }\n}\n\nexport class AttemptViewWithFilterRevealer implements\n    Common.Revealer.Revealer<PreloadingHelper.PreloadingForward.AttemptViewWithFilter> {\n  async reveal(filter: PreloadingHelper.PreloadingForward.AttemptViewWithFilter): Promise<void> {\n    const sidebar = await ResourcesPanel.showAndGetSidebar();\n    sidebar.showPreloadingAttemptViewWithFilter(filter);\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Anthony Ricaud <rik@webkit.org>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n.resources-toolbar {\n  border-top: 1px solid var(--sys-color-divider);\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.top-resources-toolbar {\n  border-bottom: 1px solid var(--sys-color-divider);\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.resources.panel .status {\n  float: right;\n  height: 16px;\n  margin-top: 1px;\n  margin-left: 4px;\n  line-height: 1em;\n}\n\n.storage-view {\n  display: flex;\n  overflow: hidden;\n}\n\n.storage-view .data-grid:not(.inline) {\n  border: none;\n  flex: auto;\n}\n\n.storage-view .storage-table-error {\n  color: var(--sys-color-error);\n  font-size: 24px;\n  font-weight: bold;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.storage-view.query {\n  padding: 2px 0;\n  overflow: hidden auto;\n}\n\n.storage-view .filter-bar {\n  border-top: none;\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.database-query-group-messages {\n  overflow-y: auto;\n}\n\n.database-query-prompt-container {\n  position: relative;\n  padding: 1px 22px 1px 24px;\n  min-height: 16px;\n}\n\n.database-query-prompt {\n  white-space: pre-wrap;\n}\n\n.prompt-icon {\n  position: absolute;\n  display: block;\n  left: 7px;\n  top: 9px;\n  margin-top: -7px;\n  user-select: none;\n}\n\n.database-user-query .prompt-icon {\n  margin-top: -10px;\n}\n\n.database-query-prompt-container .prompt-icon {\n  top: 6px;\n}\n\n.database-user-query {\n  position: relative;\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding: 1px 22px 1px 24px;\n  min-height: 16px;\n  flex-shrink: 0;\n}\n\n.database-user-query:focus-visible {\n  background-color: var(--sys-color-state-focus-highlight);\n}\n\n.database-query-text {\n  color: var(--sys-color-primary-bright);\n  user-select: text;\n}\n\n.database-query-result {\n  position: relative;\n  padding: 1px 22px;\n  min-height: 16px;\n  margin-left: -22px;\n  padding-right: 0;\n}\n\n.database-query-result.error {\n  color: var(--sys-color-token-property-special);\n  user-select: text;\n}\n\n.database-query-result.error .prompt-icon {\n  margin-top: -9px;\n}\n\n.resources-sidebar {\n  padding: 0;\n  overflow-x: auto;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n/*# sourceURL=${import.meta.resolve('./resourcesPanel.css')} */`;"],
  "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;AAmCA,YAAYA,cAAY;AACxB,YAAYC,WAAU;AACtB,YAAYC,YAAU;AACtB,YAAYC,eAAc;AAC1B,YAAYC,WAAS;AAErB,YAAY,mBAAmB;AAC/B,YAAYC,kBAAgB;AAC5B,YAAYC,qBAAmB;AAC/B,YAAYC,kBAAiB;AAC7B,YAAYC,UAAQ;;;ACzCpB,YAAY,YAAY;AAExB,YAAY,QAAQ;AAId,IAAO,8BAAP,MAAO,qCAAuC,eAAY,YAAW;EACtD;EAEnB,YAAY,gBAAgC,OAAe,YAAqB,cAAoB;AAClG,UAAM,OAAO,YAAY,YAAY;AACrC,SAAK,iBAAiB;AACtB,IAAG,aAAU,SAAS,KAAK,iBAAiB,KAAK;AACjD,SAAK,gBAAgB,WAAW;EAClC;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,SAAK,gBAAgB,WAAW;EAClC;EAEA,IAAI,UAAO;AACT,UAAM,IAAI,MAAM,sBAAsB;EACxC;EAES,SAAS,gBAAiC;AACjD,QAAI,CAAC,gBAAgB;AACnB,aAAO;IACT;AAEA,UAAM,OAA0C,CAAA;AAChD,aAAS,KAAsC,MAAM,IAAI,KAAK,GAAG,QAAQ;AACvE,YAAM,MAAM,cAAc,gCAA+B,GAAG;AAC5D,UAAI,CAAC,KAAK;AACR;MACF;AACA,WAAK,KAAK,GAAG;IACf;AACA,SAAK,eAAe,wBAAwB,IAAI;AAEhD,WAAO;EACT;EAEA,SAAS,MAA2B;AAClC,SAAK,eAAe,SAAS,IAAI;EACnC;;AAGI,IAAO,wCAAP,cAAqD,4BAA2B;EACjE;EACA;EACT;;;EAIA;EACA;EAEV,YACI,gBAAgC,cAAsB,uBAA+B,qBACrF,aAAqB,kBAAkB,OAAK;AAC9C,UAAM,gBAAgB,cAAc,OAAO,WAAW;AACtD,SAAK,kBACM,gBAAS,SAAS,SAAQ,EAAG,cAAc,eAAe,cAAc,aAAa,eAAe;AAC/G,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,wBAAwB;AAC7B,SAAK,sBAAsB;EAC7B;EAEA,IAAa,UAAO;AAClB,WAAO,gBAAgB,KAAK;EAC9B;EAEA,QAAQC,OAAqC;AAC3C,SAAK,eAAeA;EACtB;EAES,SAAS,gBAAiC;AACjD,UAAM,SAAS,cAAc;AAC7B,SAAK,mBAAkB;AACvB,WAAO;EACT;EAEQ,qBAAkB;AACxB,UAAM,WAAW,KAAK,WAAU,MAAO,IAAI,KAAK,wBAAwB,KAAK;AAC7E,SAAK,eAAe,iBAAiB,KAAK,cAAc,UAAU,KAAK,qBAAqB,KAAK,YAAY;EAC/G;EAES,YACL,OACA,YAAuG;AACzG,UAAM,YAAY,OAAO,UAAU;AAEnC,QAAI,KAAK,YAAY,KAAK,WAAU,MAAO,GAAG;AAC5C,WAAK,mBAAkB;IACzB;EACF;EAES,YAAY,OAAiC;AACpD,UAAM,YAAY,KAAK;AAEvB,QAAI,KAAK,YAAY,KAAK,WAAU,MAAO,GAAG;AAC5C,WAAK,mBAAkB;IACzB;EACF;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,QAAI,KAAK,gBAAgB,IAAG,GAAI;AAC9B,WAAK,OAAM;IACb;EACF;EAES,WAAQ;AACf,SAAK,gBAAgB,IAAI,IAAI;EAC/B;EAES,aAAU;AACjB,SAAK,gBAAgB,IAAI,KAAK;EAChC;;;;AC5HF;;;;AAKA,YAAYC,aAAY;AACxB,YAAY,UAAU;AACtB,YAAY,UAAU;AAEtB,YAAY,SAAS;AAErB,YAAY,aAAa;AACzB,YAAY,gBAAgB;AAC5B,YAAY,kBAAkB;AAC9B,YAAY,gBAAgB;AAC5B,YAAYC,SAAQ;AACpB,YAAY,mBAAmB;;;ACX/B,IAAO,8BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA0CC,YAAY,QAAQ,uBAAuB,CAAC;;;AD5B5D,YAAY,2BAA2B;AAEvC,IAAM,YAAY;;;;EAIhB,mBAAmB;;;;EAInB,gBAAgB;;;;EAIhB,UAAU;;;;EAIV,cAAc;;;;EAId,kBAAkB;;;;EAIlB,OAAO;;;;EAIP,uBAAuB;;;;EAIvB,MAAM;;;;EAIN,WAAW;;;;EAIX,KAAK;;;;EAIL,eAAe;;;;EAIf,gBACI;;;;EAIJ,WAAW;;;;;;EAMX,WACI;;;;EAKJ,iBAAiB;;;;;EAKjB,mBAAmB;;;;EAInB,aAAa;;;;EAIb,UAAU;;;;EAIV,YAAY;;;;EAIZ,iBAAiB;;;;EAIjB,aAAa;;;;;;;EAOb,SAAS;;;;EAIT,YAAY;;;;EAIZ,2BAA2B;;;;EAI3B,4BACI;;;;EAIJ,+BAA+B;;;;EAI/B,8BAA8B;;;;;EAK9B,kBAAkB;;;;;EAKlB,WAAW;;;;;EAKX,+BAA+B;;;;;EAK/B,aAAa;;;;EAIb,+BAA+B;;;;EAI/B,kCAAkC;;;;EAIlC,0BAA0B;;;;EAI1B,kCAAkC;;;;EAIlC,4BAA4B;;;;EAI5B,+BAA+B;;;;EAI/B,kCACI;;;;;EAKJ,iCACI;;;;EAIJ,4BACI;;;;;EAKJ,kCACI;;;;EAIJ,+BAA+B;;;;EAI/B,0BAA0B;;;;EAI1B,iCAAiC;;;;EAIjC,uBAAuB;;;;EAIvB,kCAAkC;;;;EAIlC,0BAA0B;;;;EAI1B,4BAA4B;;;;EAI5B,iCAAiC;;;;EAIjC,wBAAwB;;;;EAIxB,4BAA4B;;;;EAI5B,mBAAmB;;;;EAInB,iCACI;;;;EAIJ,iCACI;;;;;EAKJ,+BACI;;;;;EAKJ,YAAY;;;;EAIZ,YAAY;;;;EAIZ,YAAY;;;;EAIZ,OAAO;;;;EAIP,UAAU;;;;EAIV,MAAM;;;;;;;EAON,cAAc;;;;;;EAMd,oBAAoB;;;;;;EAMpB,gBAAgB;;;;;;EAMhB,8BAA8B;;;;;;EAM9B,0BAA0B;;;;EAI1B,wBACI;;;;;;;;;;EAUJ,gCACI;;;;;;;;EAQJ,gCAAgC;;;;;;;;EAQhC,iCAAiC;;;;;;EAMjC,0BAA0B;;;;;;EAM1B,0BAA0B;;;;;;EAM1B,0CAA0C;;;;;;EAM1C,2CAA2C;;;;;EAK3C,qBACI;;;;EAIJ,2CACI;;;;EAIJ,0CACI;;;;EAIJ,8BAA8B;;;;EAI9B,6BAA6B;;;;EAI7B,oCACI;;;;;;;EAOJ,UAAU;;;;;EAKV,aACI;;;;EAIJ,sBAAsB;;;;;EAKtB,qBAAqB;;;;EAIrB,wCAAwC;;AAE1C,IAAM,OAAY,UAAK,kBAAkB,yCAAyC,SAAS;AAC3F,IAAM,aAAkB,UAAK,mBAAmB,KAAK,QAAW,IAAI;AAoB9D,IAAO,kBAAP,cAAsC,sBAAc,WAAiD,WAAO,IAAI,EAAC;EAEpG;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACT;EACA;EACA;EACS;EACA;EACA;EACT;EACA;EACS;EACA;EACT;EACA;EACA;EACA;EACA;EACA;EAER,YACI,WAAuC,YACvC,WAAqC;AACvC,UAAM;MACJ,OAAO,GAAiB,mBAAK,UAAU,CAAC;MACxC,cAAc;KACf;AACD,SAAK,oBAAoB,2BAAqB;AAE9C,SAAK,eAAe,UAAU,IAAI,oBAAoB;AAEtD,SAAK,YAAY;AACjB,SAAK,UAAU,OAAO;AAEtB,SAAK,UAAU,KAAK,KAAK,cAAc;AACvC,SAAK,UAAU,WAAU;AAEzB,SAAK,aAAa;AAClB,SAAK,WAAW,oBAAoB,2BAAqB;AACzD,SAAK,WAAW,QAAQ,UAAU,IAAI,sBAAsB;AAC5D,SAAK,WAAW,KAAK,KAAK,cAAc;AACxC,SAAK,WAAW,WAAU;AAE1B,SAAK,gBACD,KAAK,WAAW,cAAc,WAAW,UAAU,iBAAiB,GAAG,QAAW,qBAAqB;AAC3G,SAAK,wBACD,KAAK,WAAW,cAAc,WAAW,UAAU,cAAc,GAAG,QAAW,gBAAgB;AACnG,SAAK,kBAAkB,KAAK,WAAW,cAAc,WAAW,UAAU,QAAQ,GAAG,oBAAoB;AACzG,SAAK,sBACD,KAAK,WAAW,cAAc,WAAW,UAAU,YAAY,GAAG,wBAAwB;AAC9F,SAAK,0BACD,KAAK,WAAW,cAAc,WAAW,UAAU,gBAAgB,GAAG,6BAA6B;AACvG,SAAK,uBAAuB,IAA0B,2CAAqB,qBAAoB;AAC/F,SAAK,wBAAwB,0BAA0B,KAAK,oBAAoB;AAChF,SAAK,eAAe,KAAK,WAAW,cAAc,WAAW,UAAU,KAAK,GAAG,wBAAwB,OAAO;AAC9G,SAAK,wBACD,KAAK,WAAW,cAAc,UAAU,uBAAuB,QAAW,yBAAyB;AACvG,SAAK,mBAAmB,CAAA;AACxB,SAAK,sBAAsB,CAAA;AAE3B,SAAK,YAAY,KAAK,gBAAgB,YAAY,WAAW,UAAU,IAAI,CAAC;AAC5E,SAAK,iBAAiB,KAAK,gBAAgB,YAAY,WAAW,UAAU,SAAS,CAAC;AACtF,SAAK,mBAAmB,KAAK,gBAAgB,kBAAkB,WAAW,UAAU,WAAW,CAAC;AAEhG,SAAK,gBAAgB,KAAK,oBAAoB,YAAY,WAAW,UAAU,QAAQ,CAAC;AACxF,IAAG,cAAU,SAAS,KAAK,eAAe,WAAW,UAAU,QAAQ,CAAC;AAExE,UAAM,kBAAkB,KAAK,oBAAoB,YAAY,WAAW,UAAU,UAAU,CAAC;AAC7F,SAAK,mBAAmB,IAAiB,yBAAY,YAAW;AAChE,oBAAgB,YAAY,KAAK,gBAAgB;AAEjD,UAAM,uBAAuB,KAAK,oBAAoB,YAAY,WAAW,UAAU,eAAe,CAAC;AACvG,SAAK,wBAAwB,IAAiB,yBAAY,YAAW;AACrE,yBAAqB,YAAY,KAAK,qBAAqB;AAE3D,SAAK,mBAAmB,KAAK,oBAAoB,YAAY,WAAW,UAAU,WAAW,CAAC;AAC9F,SAAK,eAAe,KAAK,oBAAoB,YAAY,WAAW,UAAU,OAAO,CAAC;AAEtF,SAAK,kBAAkB,KAAK,oBAAoB,YAAY,WAAW,UAAU,UAAU,CAAC;AAE5F,SAAK,YAAY;AACjB,IAAI,kBAAc,cAAc,SAAQ,EAAG,eAAe,IAAI;AAC9D,SAAK,sBAAsB,CAAA;EAC7B;EAEA,oBAAiB;AACf,WAAO;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;;EAET;EAEA,qBAAkB;AAChB,WAAO,KAAK,WAAW,iBAAgB;EACzC;EAEA,YAAY,QAAyB;AACnC,QAAI,WAAe,kBAAc,cAAc,SAAQ,EAAG,kBAAiB,GAAI;AAC7E;IACF;AACA,SAAK,SAAS;AACd,SAAK,oBAAoB,OAAO,MAAU,sBAAkB,iBAAiB;AAC7E,SAAK,uBAAuB,OAAO,MAAU,yBAAqB,oBAAoB;AACtF,SAAK,eAAe,OAAO,MAAU,iBAAa,YAAY;AAC9D,QAAI,CAAC,KAAK,qBAAqB,CAAC,KAAK,wBAAwB,CAAC,KAAK,cAAc;AAC/E;IACF;AAEA,SAAK,KAAK,eAAe,IAAI;AAE7B,SAAK,sBAAsB;MACzB,KAAK,kBAAkB,iBACf,sBAAkB,OAAO,kBAC7B,MAAK;AACH,aAAK,KAAK,eAAe,IAAI;MAC/B,CAAC;MACL,KAAK,qBAAqB,iBAAgB,uBAEtC,MAAK;AACH,aAAK,KAAK,eAAe,KAAK;MAChC,CAAC;;EAET;EAEA,cAAc,QAAyB;AACrC,QAAI,KAAK,WAAW,QAAQ;AAC1B;IACF;AACA,QAAI,CAAC,KAAK,qBAAqB,CAAC,KAAK,wBAAwB,CAAC,KAAK,cAAc;AAC/E;IACF;AACA,WAAO,KAAK;AACZ,WAAO,KAAK;AACZ,WAAO,KAAK;AACZ,IAAO,oBAAY,qBAAqB,KAAK,mBAAmB;EAClE;EAEQ,MAAM,eAAe,aAAoB;AAC/C,QAAI,CAAC,KAAK,mBAAmB;AAC3B;IACF;AACA,UAAM,CAAC,EAAC,KAAK,MAAM,OAAM,GAAG,sBAAsB,KAAK,IAAI,MAAM,QAAQ,IAAI;MAC3E,KAAK,kBAAkB,iBAAgB;MACvC,KAAK,kBAAkB,wBAAuB;MAC9C,KAAK,kBAAkB,SAAQ;KAChC;AAED,SAAK,KAAK,UAAU;MAChB,MAAM,KAAK,eAAe,KAAK,MAAM,QAAQ,sBAAsB,KAAK;MACxE,cAAa,qBAAkD;;IAAoC;EACzG;EAEQ,MAAM,eACV,KAAsC,MAAmB,QACzD,sBACA,eAA6C;AAC/C,UAAM,QAAQ,eAAe,SAAS;AACtC,UAAM,gBAAgB,eAAe,iBAAiB;AACtD,SAAK,CAAC,QAAQ,SAAS,SAAS,CAAC,OAAO,QAAQ;AAC9C,WAAK,UAAU,WAAU;AACzB,WAAK,WAAW,WAAU;AAC1B,WAAK,yBAAwB,oBAA2B,KAAK;AAC7D;IACF;AACA,SAAK,UAAU,WAAU;AACzB,SAAK,WAAW,WAAU;AAC1B,SAAK,yBAAwB,oBAA2B,IAAI;AAE5D,UAAMC,QAAkB,qBAAU,UAAU,WAAW,GAAG;AAC1D,IAAAA,MAAK,WAAW;AAChB,SAAK,WAAW,OAAOA,KAAI;AAC3B,SAAK,cAAc,aAAY;AAC/B,SAAK,cAAc,QAAQ,UAAU,OAAO,UAAU,CAAC,OAAO,MAAM;AACpE,eAAW,SAAS,QAAQ;AAC1B,YAAM,OAAU,YAAQ,gBAAgB;QACtC,OAAO,MAAM;QACb,UAAU,MAAM,WAAW,wBAAwB;QACnD,OAAO,MAAM,WAAW,sBAAsB;OAC/C;AACD,WAAK,cAAc,UAAS,EAAG,YAAY,IAAI;IACjD;AAEA,QAAI,CAAC,MAAM;AACT;IACF;AAEA,QAAI,KAAK,WAAW,CAAC,MAAM,OAAQ;AACjC,aAAO,KAAK,MAAM,CAAC;IACrB;AAEA,UAAM,iBAAiB,KAAK,MAAM,IAAI;AACtC,SAAK,UAAU,cAAc,eAAe,MAAM;AAClD,SAAK,eAAe,cAAc,eAAe,YAAY;AAE7D,UAAM,WAAW,CAAA;AAEjB,UAAM,cAAc,eAAe,aAAa;AAChD,SAAK,iBAAiB,cAAc;AAEpC,QAAI,YAAY,SAAS,KAAK;AAC5B,eAAS,KAAK,WAAW,UAAU,yBAAyB,CAAC;IAC/D;AAEA,UAAM,WAAW,eAAe,WAAW;AAC3C,QAAI,SAAS,eAAe;AAC1B,YAAM,aAAa,KAAK,gBAAgB,YAAY,WAAW,UAAU,aAAa,CAAC;AACvF,MAAG,cAAU,SAAS,YAAY,QAAQ;AAC1C,iBAAW,cAAc;AAEzB,YAAM,WAAsB,gBAAK,OAAO,QAAQ,aAAa;AAC7D,eAAS,QAAQ,WAAW,UAAU,cAAc;AACpD,eAAS,aAAa,SAAS,GAAiB,qBAAO,MAAM,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC,EAAE;AACrF,iBAAW,YAAY,QAAQ;AAE/B,YAAM,gBAAmB,UAAM,MAAM,OACjC,sDAAsD,WAAW,UAAU,SAAS,GAAG,QAAW,QAClG,YAAY;AAChB,iBAAW,YAAY,aAAa;AAEpC,UAAI,CAAC,eAAe,IAAI,GAAG;AACzB,cAAM,kBAAkB,WAAW,YAAY,OAAO,iBAAiB;AACvE,cAAM,kBAAkB,SAAS,cAAc,MAAM;AACrD,wBAAgB,cAAc;AAE9B,cAAM,aAAa,IAAY,eAAO,OAAM;AAC5C,mBAAW,OAAO;UAChB,SAAO;UACP,UAAU;UACV,MAAI;UACJ,cAAc;UACd,OAAO,WAAW,UAAU,eAAe;;AAE7C,mBAAW,YAAY;AACvB,mBAAW,iBAAiB,SAAS,MAAK;AACxC,UAAG,cAAU,cAAc,MAAM,WAAW,UAAU,mBAAmB,EAAC,KAAK,cAAa,CAAC,CAAC;AAC9F,UAAK,2BAAsB,8BAA8B,SAAS,aAAa;QACjF,CAAC;AACD,wBAAgB,YACP,UAAK,yBAAyB,MAAM,UAAU,WAAW,EAAC,KAAK,iBAAiB,KAAK,WAAU,CAAC,CAAC;MAC5G;IACF,OAAO;AACL,WAAK,gBAAgB,YAAY,WAAW,UAAU,aAAa,CAAC;IACtE;AAEA,SAAK,cAAc,eAAc;AACjC,QAAI,UAAU;AACZ,YAAM,cAAqB,kBAAU,UAAU,YAAY,KAAK,QAAQ;AACxE,UAAI,aAAa;AACf,cAAMA,QAAkB,qBAAU,UAAU,WACxC,aAAc,EAAC,MAAM,SAAQ,CAA4C;AAC7E,QAAAA,MAAK,WAAW;AAChB,QAAAA,MAAK,aAAa,SAAS,GAAiB,mBAAK,WAAW,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC,EAAE;AACpF,aAAK,cAAc,YAAYA,KAAI;MACrC;IACF;AAEA,SAAK,iBAAiB,UAAU,OAAO,UAAU,CAAC,eAAe,aAAa,CAAC;AAC/E,UAAM,aAAoB,cAAM,MAAM,eAAe,aAAa,KAAK,OAAO,KAAY,cAAM,MAAM,OAAO;AAC7G,QAAI,YAAY;AACd,WAAK,iBAAiB,YAAY,UAAU;IAC9C;AACA,SAAK,sBAAsB,UAAU,OAAO,UAAU,CAAC,eAAe,kBAAkB,CAAC;AACzF,UAAM,kBACK,cAAM,MAAM,eAAe,kBAAkB,KAAK,OAAO,KAAY,cAAM,MAAM,OAAO;AACnG,QAAI,iBAAiB;AACnB,WAAK,sBAAsB,YAAY,eAAe;IACxD;AAEA,SAAK,iBAAiB,cAAc,eAAe,aAAa;AAChE,UAAM,cAAc,eAAe,SAAS;AAC5C,SAAK,aAAa,cAAc;AAEhC,UAAM,aAAa,eAAe,aAAa,KAAK,CAAA;AACpD,UAAM,aAAa,WAAW,cAAc;AAC5C,UAAM,gBAAgB,OAAO,eAAe;AAC5C,SAAK,gBAAgB,eAAe,UAAU,OAAO,UAAU,CAAC,aAAa;AAC7E,SAAK,gBAAgB,eAAc;AACnC,QAAI,eAAe;AACjB,YAAM,cAAsB,kBAAU,UAAU,YAAY,KAAK,UAAU;AAC3E,YAAMA,QAAkB,qBAAU,UAAU,WACxC,aAAc,EAAC,MAAM,WAAU,CAA4C;AAC/E,MAAAA,MAAK,WAAW;AAChB,WAAK,gBAAgB,YAAYA,KAAI;IACvC;AAEA,UAAM,mBAAmB,eAAe,mBAAmB,KAAK,CAAA;AAChE,SAAK,qBAAqB,OAAO,EAAC,kBAAkB,cAAc,IAAG;AAErE,UAAM,QAAQ,eAAe,OAAO,KAAK,CAAA;AACzC,SAAK,aAAa,aAAY;AAE9B,UAAM,YAAY,eAAe,WAAW,KAAK,CAAA;AACjD,eAAW,oBAAoB,KAAK,kBAAkB;AACpD,uBAAiB;;QAAoC;MAAI;IAC3D;AAEA,UAAM,cAA4B,eAAe,aAAa,KAAK,CAAA;AACnE,eAAW,qBAAqB,KAAK,qBAAqB;AACxD,wBAAkB;;QAAoC;MAAI;IAC5D;AAEA,UAAM,cAAmD,CAAA;AAEzD,UAAM,wBAA2B,YAAQ,cAAc,OAAO,WAAW,UAAU,6BAA6B,CAAC;AACjH,0BAAsB,UAAU,IAAI,eAAe;AACnD,0BAAsB,aAClB,SAAS,GAAiB,qBAAO,2CAA2C,EAAE,MAAM,EAAC,QAAQ,KAAI,CAAC,CAAC,EAAE;AACzG,0BAAsB,iBAAiB,SAAS,MAAK;AACnD,WAAK,aAAa,cAAc,sBAAsB,OAAO;IAC/D,CAAC;AACD,SAAK,aAAa,UAAS,EAAG,YAAY,qBAAqB;AAC/D,UAAM,oBAAuB,UAAM,MAAM,OACrC,kCAAkC,WAAW,UAAU,4BAA4B,GAAG,QAAW,QACjG,YAAY;AAChB,SAAK,aAAa,UAAS,EAAG,YACrB,UAAK,yBAAyB,MAAM,UAAU,kBAAkB,EAAC,KAAK,kBAAiB,CAAC,CAAC;AAElG,QAAI,2BAA2B;AAC/B,eAAW,QAAQ,OAAO;AACxB,YAAM,SAAS,MAAM,KAAK;QAA6B;QAAK;QAAM,KAAK;;QAAmC;MAAK;AAC/G,kBAAY,KAAK,GAAG,OAAO,mBAAmB;AAC9C,iCAA2B,OAAO,4BAA4B;IAChE;AACA,QAAI,CAAC,0BAA0B;AAC7B,kBAAY,KAAK,WAAW,UAAU,sBAAsB,CAAC;IAC/D;AAEA,QAAI,UAAU,SAAS,GAAG;AACxB,eAAS,KAAK,WAAW,UAAU,0BAA0B,CAAC;IAChE;AAEA,QAAI,gBAAgB;AACpB,eAAW,YAAY,WAAW;AAChC,YAAM,kBAAkB,KAAK,WAAW,cAAc,WAAW,UAAU,WAAW,EAAC,KAAK,cAAa,CAAC,CAAC;AAC3G,sBAAgB,QAAQ,aAAa,SAAS,GAAiB,sBAAQ,WAAW,CAAC,EAAE;AACrF,WAAK,iBAAiB,KAAK,eAAe;AAE1C,sBAAgB,kBAAkB,WAAW,UAAU,IAAI,GAAG,SAAS,IAAI;AAC3E,UAAI,SAAS,YAAY;AACvB,wBAAgB,kBAAkB,WAAW,UAAU,SAAS,GAAG,SAAS,UAAU;MACxF;AACA,UAAI,SAAS,aAAa;AACxB,wBAAgB,kBAAkB,WAAW,UAAU,WAAW,GAAG,SAAS,WAAW;MAC3F;AACA,YAAM,WAAW,gBAAgB,kBAAkB,WAAW,UAAU,GAAG,CAAC;AAC5E,YAAM,cAAqB,kBAAU,UAAU,YAAY,KAAK,SAAS,GAAG;AAC5E,YAAMA,QAAkB,qBAAU,UAAU,WACxC,aAAc,EAAC,MAAM,SAAS,IAAG,CAA4C;AACjF,MAAAA,MAAK,aAAa,SAAS,GAAiB,mBAAK,UAAU,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC,EAAE;AACnF,MAAAA,MAAK,WAAW;AAChB,eAAS,YAAYA,KAAI;AAEzB,YAAM,gBAAgB,SAAS,SAAS,CAAA;AACxC,UAAI,6BAA6B;AACjC,iBAAW,gBAAgB,eAAe;AACxC,cAAM,EAAC,qBAAqB,mBAAkB,IAC1C,MAAM,KAAK;UAA6B;UAAK;UAAc;;UAAsC;QAAK;AAC1G,oBAAY,KAAK,GAAG,kBAAkB;AACtC,YAAI,CAAC,8BAA8B,aAAa,OAAO;AACrD,gBAAM,mBAAmB,aAAa,MAAM,MAAM,eAAe;AACjE,cAAI,oBAAoB,iBAAiB,CAAC,KAAK,MAAM,iBAAiB,CAAC,KAAK,IAAI;AAC9E,yCAA6B;UAC/B;QACF;MACF;AACA,UAAI,CAAC,4BAA4B;AAC/B,oBAAY,KAAK,WAAW,UAAU,+BAA+B,EAAC,KAAK,cAAa,CAAC,CAAC;MAC5F;AACA;IACF;AAEA,QAAI,kBAAkB;AACtB,UAAM,iCAAiC,oBAAI,IAAG;AAC9C,QAAI,sCAAsC;AAC1C,eAAW,cAAc,aAAa;AACpC,YAAM,oBACF,KAAK,WAAW,cAAc,WAAW,UAAU,aAAa,EAAC,KAAK,gBAAe,CAAC,CAAC;AAC3F,WAAK,oBAAoB,KAAK,iBAAiB;AAE/C,UAAI,WAAW,aAAa;AAC1B,0BAAkB,kBAAkB,WAAW,UAAU,UAAU,GAAG,WAAW,WAAW;MAC9F;AACA,UAAI,WAAW,OAAO;AACpB,0BAAkB,kBAAkB,WAAW,UAAU,KAAK,GAAG,WAAW,KAAK;MACnF;AACA,UAAI,WAAW,UAAU;AACvB,0BAAkB,kBAAkB,WAAW,UAAU,QAAQ,GAAG,WAAW,QAAQ;MACzF;AAEA,YAAM,EAAC,qBAAqB,kBAAkB,cAAc,OAAO,eAAe,OAAM,IACpF,MAAM,KAAK;QAA6B;QAAK;QAAY;;QAAwC;MAAI;AACzG,kBAAY,KAAK,GAAG,gBAAgB;AAEpC,UAAI,WAAW,eAAe,SAAS,QAAQ;AAC7C,uCAA+B,IAAI,WAAW,WAAW,KACrD,+BAA+B,IAAI,WAAW,aAAa,EAAC,OAAO,OAAM,CAAC;AAC9E,cAAM,sCAAsC,+BAA+B,IAAI,WAAW,WAAW;AACrG,YAAI,qCAAqC;AACvC,gDAAsC,uCACjC,QAAQ,oCAAoC,WAC5C,SAAS,oCAAoC;QACpD;MACF;AAEA;IACF;AAEA,QAAI,qCAAqC;AACvC,eAAS,KAAK,WAAW,UAAU,kCAAkC,CAAC;IACxE;AAEA,UAAM,wBAAwB,YAAY,OAAO,gBAAc,WAAW,gBAAgB,MAAM;AAChG,UAAM,uBAAuB,YAAY,OAAO,gBAAc,WAAW,gBAAgB,MAAM;AAE/F,QAAI,sBAAsB,SAAS,GAAG;AACpC,eAAS,KAAK,WAAW,UAAU,yCAAyC,CAAC;IAC/E;AACA,QAAI,qBAAqB,SAAS,GAAG;AACnC,eAAS,KAAK,WAAW,UAAU,wCAAwC,CAAC;IAC9E;AACA,QAAI,sBAAsB,SAAS,GAAG;AACpC,eAAS,KAAK,WAAW,UAAU,4BAA4B,CAAC;IAClE;AACA,QAAI,qBAAqB,SAAS,GAAG;AACnC,eAAS,KAAK,WAAW,UAAU,2BAA2B,CAAC;IACjE;AAEA,SAAK,sBAAsB,aAAY;AACvC,SAAK,sBAAsB,QAAQ,UAAU,OAAO,UAAU,CAAC,qBAAqB,MAAM;AAC1F,UAAM,gBAAgB,KAAK,+BAA+B,oBAAoB;AAC9E,eAAW,SAAS,eAAe;AACjC,YAAM,aAAa,SAAS,eAAe,KAAK;AAChD,WAAK,sBAAsB,UAAS,EAAG,YAAY,UAAU;IAC/D;AAEA,SAAK,cAAc,QAAQ,UAAU,OAAO,UAAU,CAAC,OAAO,UAAU,CAAC,YAAY,UAAU,CAAC,SAAS,MAAM;AAC/G,eAAW,WAAW,UAAU;AAC9B,YAAM,aAAa,SAAS,eAAe,OAAO;AAClD,WAAK,cAAc,UAAS,EAAG,YAAY,UAAU;IACvD;AACA,eAAW,SAAS,aAAa;AAC/B,YAAM,aAAa,SAAS,eAAe,KAAK;AAChD,WAAK,cAAc,UAAS,EAAG,YAAY,UAAU;IACvD;AAEA,aAAS,eAAe,MAAY;AAClC,YAAM,QAAQ,eAAe,IAAI;AACjC,UAAI,OAAO,UAAU,UAAU;AAC7B,eAAO;MACT;AACA,aAAO;IACT;AAEA,SAAK,sBAAsB,aAAY;AACvC,UAAM,kBAAkB,eAAe,kBAAkB,KAAK,CAAA;AAC9D,UAAM,SAAS,gBAAgB,SAAS,yBAAyB;AAEjE,UAAM,sBAAyB,UAAM,MAAM,OACvC,0EAA0E,oBAAoB,QAC9F,QAAW,kBAAkB;AACjC,UAAM,sBAAsB,SAAS,cAAc,MAAM;AACzD,wBAAoB,YAAY,mBAAmB;AAEnD,UAAM,mBAAmB,KAAK,sBAAsB,UAAS;AAE7D,QAAI,QAAQ;AACV,YAAM,gBAA2B,gBAAK,OAAO,gBAAgB,aAAa;AAC1E,uBAAiB,YAAY,aAAa;AAE1C,YAAM,MAAM,SAAS,cAAc,MAAM;AACzC,UAAI,UAAU,IAAI,KAAK;AACvB,UAAI,cAAc;AAClB,uBAAiB,YAAiB,UAAK,yBACnC,MAAM,UAAU,UAAU,EAAC,KAAK,KAAK,KAAK,qBAAqB,KAAKA,MAAI,CAAC,CAAC;AAE9E,UAAI,KAAK,cAAc;AACrB,cAAM,KAAK,8BAA8B,KAAK,cAAc,KAAK,eAAe,aAAa,CAAC;MAChG;IACF,OAAO;AACL,YAAM,WAAsB,gBAAK,OAAO,QAAQ,aAAa;AAE7D,uBAAiB,YAAY,QAAQ;AAErC,uBAAiB,YACR,UAAK,yBAAyB,MAAM,UAAU,aAAa,EAAC,KAAK,oBAAmB,CAAC,CAAC;IACjG;AAEA,UAAM,uBAA0B,UAAM,MAAM,OACxC,iHACA,WAAW,UAAU,oBAAoB,GAAG,QAAW,QAAW,0BAA0B;AAChG,SAAK,sBAAsB,UAAS,EAAG,YAC9B,UAAK,yBAAyB,MAAM,UAAU,qBAAqB,EAAC,KAAK,qBAAoB,CAAC,CAAC;AAExG,SAAK;MAAwB;;IAAA;EAC/B;EAEA,+BAA+B,sBAAyD;AACtF,UAAM,gBAAgB,CAAA;AACtB,eAAW,uBAAuB,sBAAsB;AACtD,UAAI;AACJ,cAAQ,oBAAoB,SAAS;QACnC,KAAK;AACH,yBAAe,WAAW,UAAU,6BAA6B;AACjE;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,gCAAgC;AACpE;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,wBAAwB;AAC5D;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,gCAAgC;AACpE;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,0BAA0B;AAC9D;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,6BAA6B;AACjE;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,gCAAgC;AACpE;QACF,KAAK;AACH,cAAI,oBAAoB,eAAe,WAAW,KAC9C,oBAAoB,eAAe,CAAC,EAAE,SAAS,+BAA+B;AAChF,oBAAQ,MAAM,+DAA+D;AAC7E;UACF;AACA,yBACI,WAAW,UAAU,iCAAiC,EAAC,KAAK,oBAAoB,eAAe,CAAC,EAAE,MAAK,CAAC;AAC5G;QACF,KAAK;AACH,cAAI,oBAAoB,eAAe,WAAW,KAC9C,oBAAoB,eAAe,CAAC,EAAE,SAAS,+BAA+B;AAChF,oBAAQ,MAAM,+DAA+D;AAC7E;UACF;AACA,yBAAe,WACX,UAAU,kCAAkC,EAAC,KAAK,oBAAoB,eAAe,CAAC,EAAE,MAAK,CAAC;AAClG;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,6BAA6B;AACjE;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,wBAAwB;AAC5D;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,+BAA+B;AACnE;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,qBAAqB;AACzD;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,gCAAgC;AACpE;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,wBAAwB;AAC5D;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,0BAA0B;AAC9D;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,+BAA+B;AACnE;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,sBAAsB;AAC1D;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,0BAA0B;AAC9D;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,iBAAiB;AACrD;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,+BAA+B;AACnE;QACF,KAAK;AACH,yBAAe,WAAW,UAAU,+BAA+B;AACnE;QACF,KAAK;AACH,yBAAe,WACX,UAAU,+BACV,EAAC,KAAK,oEAAmE,CAAC;AAC9E;QACF;AACE,kBAAQ,MAAM,4BAA4B,oBAAoB,OAAO,qBAAqB;AAC1F;MACJ;AACA,UAAI,cAAc;AAChB,sBAAc,KAAK,YAAY;MACjC;IACF;AACA,WAAO;EACT;EAEQ,MAAM,UAAU,KAAoC;AAI1D,UAAM,UAAU,KAAK,mBAAmB,WAAW;AACnD,QAAI,CAAC,KAAK,QAAQ;AAChB,YAAM,IAAI,MAAM,WAAW;IAC7B;AACA,QAAI,CAAC,SAAS;AACZ,YAAM,IAAI,MAAM,qBAAqB;IACvC;AACA,UAAM,EAAC,QAAO,IAAI,MAAU,uBAAmB,mBAAmB,SAAQ,EAAG;MACzE;MAAK;QACH,QAAQ,KAAK;QACb;QACA,cAAc,KAAK,OAAO,aAAY;;;MAEzB;IAAI;AACvB,UAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,YAAQ,UAAU,IAAI,eAAe;AACrC,UAAM,QAAQ,SAAS,cAAc,KAAK;AAC1C,UAAM,SAAS,IAAI,QAAQ,CAAC,SAAS,WAAU;AAC7C,YAAM,SAAS;AACf,YAAM,UAAU;IAClB,CAAC;AAID,UAAM,MAAM,0CAA0C,MAAa,eAAO,OAAO,OAAO;AACxF,UAAM,MAAM,WAAW,UAAU,YAAY,EAAC,KAAK,IAAG,CAAC;AACvD,YAAQ,YAAY,KAAK;AACzB,QAAI;AACF,YAAM;AACN,aAAO,EAAC,SAAS,MAAK;IACxB,QAAQ;IACR;AACA,WAAO;EACT;EAEA,WACI,OAAe,cAAiD,UAChE,qBAAwD;AAC1D,UAAM,eAAe,QAAQ,MAAM,MAAM,KAAK,IAAI,CAAA;AAClD,UAAM,cAA4B,CAAA;AAClC,eAAW,QAAQ,cAAc;AAC/B,UAAI,SAAS,OAAO;AAClB,YAAI,CAAC,YAAY,KAAK,OAAK,SAAS,CAAC,GAAG;AACtC,sBAAY,KAAK,EAAC,KAAK,OAAO,WAAW,MAAK,CAAC;QACjD;AACA;MACF;AACA,YAAM,QAAQ,KAAK,MAAM,mCAAmC;AAC5D,UAAI,OAAO;AACT,cAAM,QAAQ,SAAS,MAAM,QAAQ,SAAS,IAAI,EAAE;AACpD,cAAM,SAAS,SAAS,MAAM,QAAQ,UAAU,IAAI,EAAE;AACtD,cAAM,YAAY,GAAG,KAAK,OAAI,MAAM;AACpC,oBAAY,KAAK,EAAC,OAAO,QAAQ,UAAS,CAAC;MAC7C,OAAO;AACL,4BAAoB,KAAK,WAAW,UAAU,0BAA0B,EAAC,KAAK,cAAc,KAAK,SAAQ,CAAC,CAAC;MAC7G;IACF;AACA,WAAO;EACT;EAEA,iBACI,MAAkB,OAAyB,cAC3C,UAAgB;AAClB,QAAI,SAAS,MAAM;AACjB,aAAO,EAAC,eAAe,MAAM,iBAAiB,MAAM,cAAa;IACnE;AACA,UAAM,gBAAgB,KAAK,UAAU,KAAK;AAC1C,QAAI,MAAM,iBAAiB,KAAK,SAAS,MAAM,kBAAkB,KAAK,QAAQ;AAC5E,aAAO;QACL,OAAO,WAAW,UAAU,gCAAgC;UAC1D,KAAK,MAAM;UACX,KAAK,MAAM;UACX,KAAK;UACL,KAAK;UACL,KAAK,KAAK;UACV,KAAK,KAAK;SACX;QACD;;IAEJ;AACA,QAAI,MAAM,iBAAiB,KAAK,OAAO;AACrC,aAAO;QACL,OAAO,WACH,UAAU,gCACV,EAAC,KAAK,MAAM,cAAc,KAAK,cAAc,KAAK,UAAU,KAAK,KAAK,MAAK,CAAC;QAChF;;IAEJ;AACA,QAAI,MAAM,kBAAkB,KAAK,QAAQ;AACvC,aAAO;QACL,OAAO,WACH,UAAU,iCACV,EAAC,KAAK,MAAM,eAAe,KAAK,cAAc,KAAK,UAAU,KAAK,KAAK,OAAM,CAAC;QAClF;;IAEJ;AACA,WAAO,EAAC,cAAa;EACvB;EAEQ,MAAM,6BAGV,SAA0C,eAAoBC,UAC9D,cAAqB;AAMvB,UAAM,sBAA2D,CAAA;AACjE,UAAM,eAAe,eAAe,WAAW,UAAU,UAAU,IAAI,WAAW,UAAU,IAAI;AAChG,QAAI,CAAC,cAAc,KAAK;AACtB,0BAAoB,KAAK,WAAW,UAAU,cAAc,EAAC,KAAK,aAAY,CAAC,CAAC;AAChF,aAAO,EAAC,oBAAmB;IAC7B;AACA,UAAM,WAAkB,kBAAU,UAAU,YAAY,SAAS,cAAc,KAAK,CAAC;AACrF,QAAI,CAAC,UAAU;AACb,0BAAoB,KAChB,WAAW,UAAU,oBAAoB,EAAC,KAAK,cAAc,KAAK,cAAc,KAAK,EAAC,CAAC,CAAC;AAC5F,aAAO,EAAC,oBAAmB;IAC7B;AACA,UAAM,SAAS,MAAM,KAAK,UAAU,QAAQ;AAC5C,QAAI,CAAC,QAAQ;AACX,0BAAoB,KAAK,WAAW,UAAU,gBAAgB,EAAC,KAAK,cAAc,KAAK,SAAQ,CAAC,CAAC;AACjG,aAAO,EAAC,oBAAmB;IAC7B;AACA,UAAM,EAAC,SAAS,MAAK,IAAI;AACzB,UAAM,EAAC,cAAc,cAAa,IAAI;AACtC,UAAM,QAAQ,KAAK,WAAW,cAAc,OAAO,GAAG,cAAc,UAAU,mBAAmB;AACjG,UAAM,QAAQ,MAAM,IAAI,OAAK,EAAE,SAAS,EAAE,KAAK,GAAG,IAAI,QAAQ,cAAc,MAAM,KAAK;AACvF,UAAM,QAAQA,SAAQ,kBAAkB,KAAK;AAC7C,QAAI,2BAA2B;AAC/B,QAAI,CAAC,cAAc,OAAO;AACxB,0BAAoB,KAAK,WAAW,UAAU,8BAA8B,EAAC,KAAK,cAAc,KAAK,SAAQ,CAAC,CAAC;IACjH,OAAO;AACL,UAAI,gBAAgB,MAAM,SAAS,KAAK,SAAS,MAAM,CAAC,GAAG;AACzD,4BAAoB,KAAK,WAAW,UAAU,qBAAqB,EAAC,KAAK,SAAQ,CAAC,CAAC;MACrF;AACA,iBAAW,QAAQ,OAAO;AACxB,cAAM,EAAC,OAAO,cAAa,IAAI,KAAK,iBAAiB,MAAM,OAAO,cAAc,QAAQ;AACxF,mCAA2B,4BAA4B;AACvD,YAAI,OAAO;AACT,8BAAoB,KAAK,KAAK;QAChC,WAAW,cAAc;AACvB,gBAAM,QAAQ,SAAS,OAAO,MAAM,eAAe,KAAK;AACxD,gBAAM,SAAS,SAAS,OAAO,MAAM,gBAAgB,KAAK;AAC1D,cAAI,QAAQ,OAAO,SAAS,KAAK;AAC/B,gCAAoB,KAChB,WAAW,UAAU,0BAA0B,EAAC,KAAK,cAAc,KAAK,SAAQ,CAAC,CAAC;UACxF,WAAW,QAAQ,QAAQ,SAAS,MAAM;AACxC,gCAAoB,KAChB,WAAW,UAAU,0BAA0B,EAAC,KAAK,cAAc,KAAK,SAAQ,CAAC,CAAC;UACxF,WAAW,QAAS,SAAS,KAAM;AACjC,gCAAoB,KAChB,WAAW,UAAU,0CAA0C,EAAC,KAAK,cAAc,KAAK,SAAQ,CAAC,CAAC;UACxG,WAAW,SAAU,QAAQ,KAAM;AACjC,gCAAoB,KAChB,WAAW,UAAU,2CAA2C,EAAC,KAAK,cAAc,KAAK,SAAQ,CAAC,CAAC;UACzG;QACF;MACF;IACF;AACA,UAAM,QAAQ,MAAM;AAEpB,UAAM,UAAU,OAAO,cAAc,SAAS,MAAM,WAAW,cAAc,SAAS,EAAE,YAAW,IAAK;AACxG,QAAI,QAAQ,SAAS,KAAK,KAAK,QAAQ,SAAS,UAAU,GAAG;AAC3D,0BAAoB,KAAK,WAAW,UAAU,0BAA0B,CAAC;IAC3E;AAEA,UAAM,YAAY,OAAO;AACzB,WAAO,EAAC,qBAAqB,0BAA0B,cAAc,cAAa;EACpF;EAEQ,MAAM,8BACV,cAA6C,KAC7C,YAAkB;AACpB,UAAM,oBAAoB,MAAM,aAAa,kBAAkB,GAAG;AAElE,QAAI,CAAC,mBAAmB;AACtB;IACF;AAEA,UAAM,aAAa,4BAA4B,KAAK;AAEpD,UAAM,gBACC,YAAQ,cAAc,OAAO,WAAW,UAAU,sCAAsC,GAAG,KAAK;AAEvG,kBAAc,iBAAiB,SAAS,YAAW;AACjD,YAAM,KAAK,cAAc,4BAA4B,cAAc,OAAO;IAC5E,CAAC;AAED,UAAM,kBAAkB,cAAc,YAAY,QAAQ;AAC1D,oBAAgB,YAAe,YAAQ,aAAa,WAAS,WAA2C,SAAS,CAAC;AAClH,oBAAgB,YAAe,YAAQ,aAAa,SAAO,OAAuC,OAAO,CAAC;AAC1G,oBAAgB,YAAe,YAAQ,aAAa,SAAO,SAAyC,OAAO,CAAC;AAC5G,oBAAgB,gBAAgB;AAEhC,QAAI,KAAK,cAAc;AACrB,sBAAgB,QAAQ,KAAK,cAAc,wBAAuB,EAAG;IACvE;AAEA,oBAAgB,iBAAiB,UAAU,YAAW;AACpD,YAAM,aACF,gBAAgB,QAAQ,gBAAgB,aAAa,EAAE;AAC3D,UAAI,KAAK,cAAc;AACrB,aAAK,aAAa,0BAA0B,UAAU;AACtD,cAAM,KAAK,aAAa,4BAA4B,cAAc,OAAO;MAC3E;IACF,CAAC;AAED,SAAK,sBAAsB,UAAS,EAAG,YAAY,aAAa;AAEhE,iBAAa,4BAA4B,UAAU;EACrD;;;;AE5vCF,YAAYC,WAAU;AACtB,YAAYC,WAAU;AAEtB,YAAYC,iBAAgB;AAC5B,YAAY,mBAAmB;AAC/B,YAAYC,SAAQ;AAGpB,YAAYC,4BAA2B;AAGvC,IAAMC,aAAY;;;;EAIhB,kBAAkB;;AAEpB,IAAMC,QAAY,WAAK,kBAAkB,qDAAqDD,UAAS;AACvG,IAAME,cAAkB,WAAK,mBAAmB,KAAK,QAAWD,KAAI;AAE9D,IAAO,8BAAP,cAA2C,4BAA2B;EAClE;EAGR,YAAY,gBAA8B;AACxC,UAAM,gBAAgBC,YAAWF,WAAU,gBAAgB,GAAG,OAAO,SAAS;AAC9E,UAAM,OAAkB,iBAAK,OAAO,UAAU;AAC9C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,IAAa,UAAO;AAClB,WAAO;EACT;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAqB,4BAAc,cACjC,WAAO,QAAQ,IAA0B,4CAAqB,qBAAoB,CAAE;IAC7F;AACA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,oBAAoB;AAEhD,WAAO;EACT;;;;AChDF;;;;;AAIA,YAAYG,UAAS;AAIf,IAAO,yBAAP,cAA0C,cAAS,SAAoB;EAE1D;EACA;EAGjB,YAAY,QAAyB;AACnC,UAAM,MAAM;AACZ,SAAK,yBAAyB,OAAO,uBAAsB;AAC3D,WAAO,oCAAoC,IAAI;AAE/C,SAAK,SAAS,oBAAI,IAAG;EACvB;EAEA,OAAO,SAA+C;AACpD,SAAK,OAAO,IAAI,SAAS,CAAA,CAAE;AAC3B,SAAK,KAAK,uBAAuB,sBAAsB,EAAC,QAAO,CAAC;EAClE;EAEA,aAAa,cAAuB,SAA+C;AACjF,SAAK,KAAK,uBAAuB,oBAAoB,EAAC,cAAc,QAAO,CAAC;EAC9E;EAEA,YAAY,SAA+C;AACzD,SAAK,OAAO,IAAI,SAAS,CAAA,CAAE;AAC3B,SAAK,KAAK,uBAAuB,mBAAmB,EAAC,QAAO,CAAC;EAC/D;EAEA,UAAU,SAA+C;AACvD,WAAO,KAAK,OAAO,IAAI,OAAO,KAAK,CAAA;EACrC;EAEA,sBAAsB,EAAC,aAAa,QAAO,GAAwD;AACjG,SAAK,yBAAyB,OAAO,uBAAuB,EAAC,aAAa,aAAa,QAAO,CAAC;EACjG;EAEA,+BAA+B,EAAC,uBAAsB,GAC2C;AAG/F,SAAK,OAAO,IAAI,uBAAuB,OAAO,EAAE,KAAK,sBAAsB;AAC3E,SAAK,yBAAyB,OAAO,gCAAgC,sBAAsB;EAC7F;;AAGE,cAAS,SAAS,SAAS,wBAAwB,EAAC,cAAY,GAAiC,WAAW,MAAK,CAAC;AAEtH,IAAY;CAAZ,SAAYC,SAAM;AAEhB,EAAAA,QAAA,uBAAA,IAAA;AACA,EAAAA,QAAA,gCAAA,IAAA;AAEF,GALY,WAAA,SAAM,CAAA,EAAA;;;ACvDlB;;;;;;AAKA,OAAO;AAGP,YAAYC,WAAU;AACtB,YAAY,cAAc;AAC1B,YAAYC,UAAS;AAErB,YAAY,cAAc;AAC1B,YAAYC,cAAa;AACzB,YAAY,cAAc;;;ACT1B,IAAO,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAUC,YAAY,QAAQ,mBAAmB,CAAC;;;ADExD,YAAYC,SAAQ;AACpB,YAAYC,oBAAmB;;;AEb/B,IAAO,oCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA+EC,YAAY,QAAQ,6BAA6B,CAAC;;;AF7DlE,IAAMC,aAAY;;;;EAIhB,iBAAiB;;;;EAIjB,gBAAgB;;;;EAIhB,eAAe;;;;EAIf,eAAe;;;;EAIf,gBAAgB;;;;EAIhB,wBAAwB;;;;EAIxB,OAAO;;;;EAIP,YAAY;;;;EAIZ,4BAA4B;;;;EAI5B,+BAA+B;;;;EAI/B,qBAAqB;;;;EAIrB,sBAAsB;;;;EAItB,WAAW;;;;EAIX,OAAO;;;;EAIP,QAAQ;;;;EAIR,YAAY;;;;EAIZ,SAAS;;;;EAIT,YAAY;;;;EAIZ,oBAAoB;;;;;EAKpB,iBAAiB;;;;EAIjB,6BAA6B;;;;;EAK7B,oBAAoB;;;;EAIpB,aAAa;;;;;EAKb,gCAAgC;;;;;;;EAOhC,uBAAuB;;;;EAIvB,OAAO;;;;EAIP,wBAAwB;;AAE1B,IAAMC,QAAY,WAAK,kBAAkB,+CAA+CD,UAAS;AACjG,IAAME,cAAkB,WAAK,mBAAmB,KAAK,QAAWD,KAAI;AAC9D,IAAO,wBAAP,MAAO,+BAAiC,WAAO,KAAI;EACtC;EACA;EACA;EACA;EACA;EACT;EACA;EACA;EACA;EACA;EACS;EACA;EACA;EACA;EACT;EACA;EAER,OAAO,YAAY,aAAmB;AACpC,YAAQ,aAAa;MACnB,KAAA;AACE,eAAOC,YAAWF,WAAU,eAAe;MAC7C,KAAA;AACE,eAAOE,YAAWF,WAAU,cAAc;MAC5C,KAAA;AACE,eAAOE,YAAWF,WAAU,aAAa;MAC3C,KAAA;AACE,eAAOE,YAAWF,WAAU,aAAa;MAC3C,KAAA;AACE,eAAOE,YAAWF,WAAU,cAAc;MAC5C,KAAA;AACE,eAAOE,YAAWF,WAAU,sBAAsB;MACpD;AACE,eAAO;IACX;EACF;EAEA,YAAY,aAAqD,OAA6B;AAC5F,UAAM;MACJ,OAAO,GAAiB,oBAAI,EAAG,QAAiB,yBAAgB,YAAY,WAAW,CAAC,CAAC;MACzF,cAAc;KACf;AACD,SAAK,oBAAoB,yBAAmB,iCAA2B;AAEvE,SAAK,cAAc;AAEnB,SAAK,QAAQ;AACb,SAAK,MAAM,iBAAiB,OAAO,uBAAuB,KAAK,yBAAyB,IAAI;AAC5F,SAAK,MAAM,iBAAiB,OAAO,gCAAgC,KAAK,iBAAiB,IAAI;AAC7F,SAAK,MAAM,OAAO,KAAK,WAAW;AAElC,SAAK,uBAAuB,KAAK,MAAM,OAAM,EAAG,MAAU,0BAAqB,oBAAoB;AAEnG,SAAK,wBAAwB,KAAK,MAAM,OAAM,EAAG,MAAU,2BAAsB,qBAAqB;AAEtG,QAAI,CAAC,KAAK,uBAAuB;AAC/B,YAAM,IAAI,MAAM,2CAA2C;IAC7D;AACA,SAAK,sBAAsB,iBACnB,2BAAsB,OAAO,2BAA2B,MAAM,KAAK,gBAAe,CAAE;AAE5F,SAAK,oBACD,KAAK,MAAM,OAAM,EAAG,MAAU,uBAAkB,iBAAiB;AACrE,QAAI,CAAC,KAAK,mBAAmB;AAC3B,YAAM,IAAI,MAAM,uCAAuC;IACzD;AACA,SAAK,kBAAkB,iBAAgB,yBACoB,MAAM,KAAK,oBAAmB,CAAE;AAE3F,SAAK,eAAkB,mBAAe,eAAe,SAAQ,EAAG,UAAU,qCAAqC;AAE/G,SAAK,UAAU,KAAK,eAAe,YAAY,oBAAoB,4BAA4B;AAC/F,SAAK,QAAQ,aAAa,SAAS,GAAiB,uBAAO,CAAE,EAAE;AAC/D,SAAK,KAAK,aAAY;AAMtB,SAAK,cAAc,IAAO,gBAAY;;MAA8B;;MAA8B;IAAI;AACtG,SAAK,YAAY,KAAK,KAAK,cAAc;AAEzC,SAAK,WAAW,KAAK,eAAc;AAEnC,SAAK,eAAe,IAAO,WAAO,KAAI;AACtC,SAAK,aAAa,QAAQ,aAAa,SAAS,GAAiB,oBAAK,SAAS,EAAE,MAAM,EAAC,QAAQ,KAAI,CAAC,CAAC,EAAE;AAExG,SAAK,oBAAoB;AAEzB,SAAK,UAAU;AAEf,SAAK,YAAY,cAAc,KAAK,SAAS,SAAQ,CAAE;AACvD,SAAK,YAAY,iBAAiB,KAAK,YAAY;AACnD,SAAK,YAAY,SAAQ;AAEzB,SAAK,YAAY,IAAI;EACvB;EAEA,cAAW;AACT,WAAO,KAAK;EACd;;;;EAKQ,MAAM,eAAY;AACxB,SAAK,QAAQ,YAAY;AACzB,SAAK,eAAmB,YAAQ,QAAQ,mBAAmB,KAAK,YAAY;AAC5E,SAAK,aAAa,cAAc,KAAK;AACrC,SAAK,QAAQ,kBAAkB,KAAK,YAAY;AAEhD,UAAM,cACF,IAAO,YAAQ,cAAcE,YAAWF,WAAU,KAAK,GAAG,SAAS,QAAW,0BAA0B;AAC5G,gBAAY,iBAAgB,SAAwC,MAAM,KAAK,YAAW,CAAE;AAC5F,SAAK,QAAQ,kBAAkB,WAAW;AAE1C,SAAK,QAAQ,gBAAe;AAE5B,SAAK,aAAa,IAAO,YAAQ,cAC7BE,YAAWF,WAAU,UAAU,GAAG,YAAY,QAAW,gCAAgC;AAC7F,SAAK,WAAW,iBAAgB,SAAwC,YAAS;AAC/E,WAAK,KAAK,WAAU;IACtB,CAAC;AACD,SAAK,WAAW,WAAW,KAAK;AAChC,SAAK,QAAQ,kBAAkB,KAAK,UAAU;AAE9C,SAAK,QAAQ,gBAAe;AAE5B,SAAK,iBAAiB,IAAO,YAAQ,gBACjCE,YAAWF,WAAU,0BAA0B,GAAGE,YAAWF,WAAU,0BAA0B,GACjG,MAAM,KAAK,YAAW,GAAI,gCAAgC;AAC9D,SAAK,QAAQ,kBAAkB,KAAK,cAAc;AAElD,SAAK,qBAAqB,IAAO,YAAQ,gBACrCE,YAAWF,WAAU,6BAA6B,GAAGE,YAAWF,WAAU,6BAA6B,GACvG,MAAM,KAAK,YAAW,GAAI,mCAAmC;AACjE,SAAK,QAAQ,kBAAkB,KAAK,kBAAkB;EACxD;;;;EAKQ,cAAW;AACjB,SAAK,UAAS;AACd,UAAM,SAAS,KAAK,MAAM,UAAU,KAAK,WAAW,EAAE,OAAO,WAAS,KAAK,YAAY,KAAK,CAAC;AAC7F,eAAW,SAAS,QAAQ;AAC1B,WAAK,SAAS,KAAK;IACrB;EACF;;;;EAKQ,YAAS;AACf,SAAK,oBAAoB;AACzB,SAAK,SAAS,SAAQ,EAAG,eAAc;AACvC,SAAK,YAAY,SAAQ;AACzB,SAAK,WAAW,WAAW,KAAK;AAChC,SAAK,YAAY,IAAI;EACvB;;;;EAKA,kBAAe;AACb,SAAK,MAAM,aAAa,CAAC,KAAK,aAAa,UAAS,GAAI,KAAK,WAAW;EAC1E;;;;EAKQ,cAAW;AACjB,SAAK,MAAM,YAAY,KAAK,WAAW;AACvC,SAAK,UAAS;EAChB;EAEQ,wBAAwB,EAAC,MAAM,MAAK,GAAsD;AAChG,QAAI,MAAM,gBAAgB,KAAK,aAAa;AAC1C;IACF;AAEA,QAAI,MAAM,gBAAgB,KAAK,aAAa,UAAS,GAAI;AACvD;IACF;AAEA,SAAK,aAAa,WAAW,MAAM,WAAW;AAC9C,SAAK,0BAAyB;AAC9B,SAAK,YAAY,KAAK,iBAAiB;EACzC;EAEQ,4BAAyB;AAC/B,UAAM,gBAAgB,KAAK,aAAa,UAAS,IAAKE,YAAWF,WAAU,mBAAmB,IACxCE,YAAWF,WAAU,oBAAoB;AAC/F,SAAK,aAAa,SAAS,eAAe,qCAAqC;EACjF;EAEQ,gBAAgB,EACtB,MAAM,aAAY,GACqE;AACvF,QAAI,CAAC,KAAK,YAAY,YAAY,GAAG;AACnC;IACF;AACA,SAAK,SAAS,YAAY;EAC5B;EAEQ,kBAAe;AAErB,QAAI,KAAK,eAAe,QAAO,GAAI;AACjC;IACF;AACA,SAAK,YAAW;EAClB;EAEQ,sBAAmB;AACzB,QAAI,KAAK,mBAAmB,QAAO,GAAI;AACrC;IACF;AACA,SAAK,YAAW;EAClB;EAEQ,SAAS,cAA+D;AAC9E,UAAM,OAAO,KAAK,gBAAgB,YAAY;AAC9C,UAAM,WAAW,IAAI,cAAc,MAAM,aAAa,aAAa;AACnE,SAAK,SAAS,SAAQ,EAAG,YAAY,QAAQ;AAE7C,QAAI,KAAK,YAAY,SAAQ,MAAE,QAAmC;AAChE,WAAK,YAAY,SAAQ;IAC3B;AAEA,QAAI,KAAK,SAAS,SAAQ,EAAG,SAAS,WAAW,GAAG;AAClD,WAAK,WAAW,WAAW,IAAI;AAC/B,WAAK,YAAY,KAAK,iBAAiB;IACzC;EACF;EAEQ,iBAAc;AACpB,UAAM,UAAW;MACf,EAAC,IAAI,MAAM,OAAO,KAAK,QAAQ,EAAC;MAChC,EAAC,IAAI,aAAa,OAAOE,YAAWF,WAAU,SAAS,GAAG,QAAQ,EAAC;MACnE,EAAC,IAAI,cAAc,OAAOE,YAAWF,WAAU,KAAK,GAAG,QAAQ,EAAC;MAChE,EAAC,IAAI,UAAU,OAAOE,YAAWF,WAAU,MAAM,GAAG,QAAQ,EAAC;MAC7D,EAAC,IAAI,eAAe,OAAOE,YAAWF,WAAU,UAAU,GAAG,QAAQ,EAAC;MACtE,EAAC,IAAI,YAAY,OAAOE,YAAWF,WAAU,OAAO,GAAG,QAAQ,EAAC;MAChE,EAAC,IAAI,eAAe,OAAOE,YAAWF,WAAU,UAAU,GAAG,QAAQ,EAAC;;AAExE,UAAM,WAAW,IAAa,kBAAS,aAAa;MAClD,aAAaE,YAAWF,WAAU,kBAAkB;MACpD;MACA,iBAAiB;MACjB,gBAAgB;KACjB;AACD,aAAS,WAAW,IAAI;AAExB,aAAS,iBAAgB,gBACmB,WAAS,KAAK,YAAa,MAAM,IAAsB,CAAC;AAEpG,WAAO;EACT;;;;EAKQ,gBAAgB,cAA+D;AACrF,QAAI,UAAU;AAGd,UAAM,eAAe,KAAK,uBACtB,KAAK,qBAAqB,cAAa,EAAG,IAAI,aAAa,2BAA2B,IACtF;AACJ,QAAI,cAAc;AAChB,gBAAU,aAAa,SAAS,OAAO,aAAa,eAAe,MAAM;IAC3E;AAEA,WAAO;MACL,IAAI,KAAK,SAAS,SAAQ,EAAG,SAAS,SAAS;MAC/C,WAAc,YAAQ;QAAgB,aAAa,YAAY;;QAAkB;MAAI;MACrF,QAAQ,aAAa;MACrB,eAAe,aAAa;MAC5B,YAAY;MACZ,cAAc,aAAa;MAC3B,eAAe,aAAa;;EAEhC;;;;EAKQ,YAAY,OAAwD;AAC1E,QAAI,MAAM,YAAY,KAAK,aAAa;AACtC,aAAO;IACT;AAEA,QAAI,KAAK,eAAe,QAAO,KAAM,KAAK,mBAAmB,QAAO,GAAI;AACtE,aAAO;IACT;AAGA,UAAM,SAAS,MAAM,OAAO,OAAO,GAAG,MAAM,OAAO,SAAS,CAAC;AAC7D,UAAM,aAAa,MAAM;AAEzB,WAAO,KAAK,sBAAsB,gBAAe,EAAG,SAAS,MAAM,KAC/D,KAAK,kBAAkB,YAAW,EAAG,SAAS,UAAU;EAC9D;EAEQ,sBAAmB;AACzB,QAAI,MAAM;AAEV,YAAQ,KAAK,aAAa;MACxB,KAAA;AACE,eAAO;AACP;MACF,KAAA;AACE,eAAO;AACP;MACF,KAAA;AACE,eAAO;AACP;MACF,KAAA;AACE,eAAO;AACP;MACF;AACE;IACJ;AAEA,WAAO;EACT;EAEQ,YAAY,UAA4B;AAC9C,QAAI,KAAK,qBAAqB,KAAK,sBAAsB,UAAU;AACjE;IACF;AAEA,SAAK,oBAAoB;AAEzB,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,OAAM;IACrB;AAEA,QAAI,KAAK,mBAAmB;AAC1B,WAAK,UAAU,KAAK,kBAAkB,cAAa;AACnD,WAAK,QAAQ,KAAK,KAAK,aAAa,cAAc;AAClD;IACF;AAEA,QAAI;AACJ,QAAI,KAAK,SAAS,SAAQ,EAAG,SAAS,QAAQ;AAC5C,oBAAc,IAAO,gBAAY,YAC7BE,YAAWF,WAAU,eAAe,GAAGE,YAAWF,WAAU,2BAA2B,CAAC;IAC9F,WAAW,KAAK,aAAa,UAAS,GAAI;AAExC,YAAM,cAAc,uBAAsB,YAAY,KAAK,WAAW,EAAE,YAAW;AACnF,oBAAc,IAAO,gBAAY,YAC7BE,YAAWF,WAAU,oBAAoB,EAAC,KAAK,YAAW,CAAC,GAC3DE,YAAWF,WAAU,gCAAgC,EAAC,KAAK,YAAW,CAAC,CAAC;IAC9E,OAAO;AACL,YAAM,kBACC,qBAAiB,iBAAiB,SAAQ,EAAG,mBAAmB,qCAAqC,EAAE,CAAC;AAC/G,oBAAc,IAAO,gBAAY,YAC7BE,YAAWF,WAAU,WAAW,GAAGE,YAAWF,WAAU,uBAAuB;QAC7E,KAAKE,YAAWF,WAAU,oBAAoB;QAC9C,KAAK,gBAAgB,MAAK;OAC3B,CAAC;AACN,kBAAY,OAAO,KAAK,oBAAmB;AAE3C,YAAM,SAAY,YAAQ,iBACtBE,YAAWF,WAAU,oBAAoB,GAAG,MAAM,KAAK,gBAAe,GACtE;QAAC,cAAc;QAAmB,SAAO;;MAA8B,CAAC;AAC5E,kBAAY,eAAe,YAAY,MAAM;IAC/C;AAEA,SAAK,UAAU;AACf,SAAK,QAAQ,KAAK,KAAK,aAAa,cAAc;EACpD;;;;EAKQ,MAAM,aAAU;AACtB,UAAM,WAAW,GAAG,KAAK,WAAW,IAAa,uBAAc,iBAAiB,oBAAI,KAAI,CAAE,CAAC;AAE3F,UAAM,SAAS,IAAa,mBAAU,iBAAgB;AAEtD,UAAM,WAAW,MAAM,OAAO,KAAK,QAAQ;AAC3C,QAAI,CAAC,UAAU;AACb;IACF;AAEA,UAAM,SAAS,KAAK,MAAM,UAAU,KAAK,WAAW,EAAE,OAAO,WAAS,KAAK,YAAY,KAAK,CAAC;AAC7F,UAAM,OAAO,MAAM,KAAK,UAAU,QAAQ,QAAW,CAAC,CAAC;AACvD,SAAK,OAAO,MAAK;EACnB;;AAGI,IAAO,gBAAP,cAAsC,kBAAS,aAAuB;EACzD;EAEjB,YAAY,MAAiB,eAAyD;AACpF,UAAM,IAAI;AAEV,SAAK,gBAAgB,cAAc,KAAK,CAAC,IAAI,OAAgB,yBAAgB,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC;EACtG;EAEA,gBAAa;AACX,UAAM,UAAU,IAAO,WAAO,KAAI;AAClC,YAAQ,QAAQ,UAAU,IAAI,6BAA6B;AAC3D,YAAQ,QAAQ,aAAa,SAAS,GAAiB,uBAAQ,UAAU,CAAC,EAAE;AAE5E,eAAW,SAAS,KAAK,eAAe;AACtC,YAAM,MAAM,SAAS,cAAc,KAAK;AACxC,UAAI,UAAU,IAAI,mCAAmC;AACrD,UAAI,YAAY,OAAO,kCAAkC,EAAE,cAAc,MAAM,MAAM;AACrF,UAAI,MAAM,OAAO;AACf,YAAI,YAAY,OAAO,+CAA+C,EAAE,cAAc,MAAM;MAC9F,OAAO;AACL,YAAI,YAAY,OAAO,kEAAkE,EAAE,cACvFE,YAAWF,WAAU,KAAK;MAChC;AACA,cAAQ,QAAQ,YAAY,GAAG;IACjC;AAEA,QAAI,CAAC,QAAQ,QAAQ,SAAS,QAAQ;AACpC,YAAM,MAAM,SAAS,cAAc,KAAK;AACxC,UAAI,UAAU,IAAI,mCAAmC;AACrD,UAAI,YAAY,OAAO,iEAAiE,EAAE,cACtFE,YAAWF,WAAU,sBAAsB;AAC/C,cAAQ,QAAQ,YAAY,GAAG;IACjC;AAEA,WAAO;EACT;;AAGI,IAAO,iBAAP,MAAqB;EACzB,aAAa,SAA6B,UAAgB;AACxD,UAAM,OAAO,QAAQ,OAAO,qBAAqB;AACjD,YAAQ,UAAU;MAChB,KAAK,uCAAuC;AAC1C,YAAI,CAAC,MAAM;AACT,gBAAM,IAAI,MAAM,2CAA2C;QAC7D;AACA,aAAK,gBAAe;AACpB,eAAO;MACT;IACF;AACA,WAAO;EACT;;;;AG1kBF;;;oBAAAG;;AAIA,YAAYC,WAAU;AACtB,YAAYC,WAAU;AAEtB,YAAYC,iBAAgB;AAC5B,YAAYC,oBAAmB;AAC/B,YAAYC,SAAQ;AAGpB,YAAYC,4BAA2B;AAGvC,IAAMC,aAAY;;;;EAIhB,2BAA2B;;AAE7B,IAAMC,QAAY,WAAK,kBAAkB,8DAA8DD,UAAS;AACzG,IAAME,cAAkB,WAAK,mBAAmB,KAAK,QAAWD,KAAI;AAErE,IAAO,uCAAP,cAAoD,4BAA2B;EAC3E;EAGR,YAAY,gBAA8B;AACxC,UAAM,gBAAgBC,YAAWF,WAAU,yBAAyB,GAAG,OAAO,6BAA6B;AAC3G,UAAM,OAAkB,iBAAK,OAAO,UAAU;AAC9C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,IAAa,UAAO;AAClB,WAAO;EACT;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAqB,6BAAc,cACjC,WAAO,QAAQ,IAA0B,qDAA8B,8BAA6B,CAAE;IAC/G;AACA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,6BAA6B;AACzD,WAAO;EACT;;;;ATMF,YAAYG,6BAA2B;;;AUrDvC;;;;;;AAiCA,YAAYC,aAAY;AACxB,YAAYC,UAAS;AAIf,IAAO,aAAP,MAAO,oBAA0B,sBAAc,cAAoC;EACtE;EACR;EACA;EAET,YAAY,OAAwB,YAAoB,gBAAuB;AAC7E,UAAK;AACL,SAAK,QAAQ;AACb,SAAK,cAAc;AACnB,SAAK,kBAAkB;EACzB;EAEA,OAAO,UAAU,YAAoB,gBAAuB;AAC1D,WAAO,EAAC,YAAY,eAAc;EACpC;EAEA,IAAI,KAAE;AACJ,WAAO,YAAW,UAAU,KAAK,aAAa,KAAK,eAAe;EACpE;EAEA,IAAI,aAAU;AACZ,WAAO,KAAK;EACd;EAEA,IAAI,iBAAc;AAChB,WAAO,KAAK;EACd;EAEA,WAAQ;AACN,WAAO,KAAK,MAAM,MAAM,0BAA0B,EAAC,WAAW,KAAK,GAAE,CAAC,EAAE,KAAK,CAAC,EAAC,QAAO,MAAM,OAAO;EACrG;EAEA,QAAQ,KAAa,OAAa;AAChC,SAAK,KAAK,MAAM,MAAM,yBAAyB,EAAC,WAAW,KAAK,IAAI,KAAK,MAAK,CAAC;EACjF;EAEA,WAAW,KAAW;AACpB,SAAK,KAAK,MAAM,MAAM,4BAA4B,EAAC,WAAW,KAAK,IAAI,IAAG,CAAC;EAC7E;EAEA,QAAK;AACH,SAAK,KAAK,MAAM,MAAM,aAAa,EAAC,WAAW,KAAK,GAAE,CAAC;EACzD;;AAkCI,IAAO,kBAAP,cAAmC,cAAS,SAAoB;EAC3D;EACT;EACS;EACD;EAER,YAAY,QAAyB;AACnC,UAAM,MAAM;AAEZ,SAAK,qBAAqB,OAAO,MAAU,uBAAkB,iBAAiB;AAC9E,SAAK,YAAY,CAAA;AACjB,SAAK,QAAQ,OAAO,gBAAe;EACrC;EAEA,SAAM;AACJ,QAAI,KAAK,SAAS;AAChB;IACF;AAEA,SAAK,OAAM,EAAG,6BAA6B,IAAI,qBAAqB,IAAI,CAAC;AACzE,QAAI,KAAK,oBAAoB;AAC3B,WAAK,mBAAmB,iBAAgB,mBACY,KAAK,iBAAiB,IAAI;AAC9E,WAAK,mBAAmB,iBAAgB,qBACc,KAAK,mBAAmB,IAAI;AAElF,iBAAW,cAAc,KAAK,mBAAmB,YAAW,GAAI;AAC9D,aAAK,cAAc,UAAU;MAC/B;IACF;AACA,SAAK,KAAK,MAAM,cAAa;AAE7B,SAAK,UAAU;EACjB;EAEA,mBAAmB,YAAkB;AACnC,QAAI,CAAC,KAAK,SAAS;AACjB;IACF;AACA,eAAW,WAAW,CAAC,MAAM,KAAK,GAAG;AACnC,YAAM,MAAM,KAAK,WAAW,YAAY,OAAO;AAC/C,YAAM,UAAU,KAAK,UAAU,GAAG;AAClC,UAAI,CAAC,SAAS;AACZ;MACF;AACA,cAAQ,MAAK;IACf;AACA,SAAK,iBAAiB,UAAU;AAChC,SAAK,cAAc,UAAU;EAC/B;EAEQ,gBAAgB,OAAkD;AACxE,SAAK,cAAc,MAAM,IAAI;EAC/B;EAEQ,cAAc,YAAkB;AACtC,eAAW,WAAW,CAAC,MAAM,KAAK,GAAG;AACnC,YAAM,MAAM,KAAK,WAAW,YAAY,OAAO;AAC/C,cAAQ,OAAO,CAAC,KAAK,UAAU,GAAG,CAAC;AACnC,YAAM,UAAU,IAAI,WAAW,MAAM,YAAY,OAAO;AACxD,WAAK,UAAU,GAAG,IAAI;AACtB,WAAK,yBAAwB,mBAA2B,OAAO;IACjE;EACF;EAEQ,kBAAkB,OAAkD;AAC1E,SAAK,iBAAiB,MAAM,IAAI;EAClC;EAEQ,iBAAiB,YAAkB;AACzC,eAAW,WAAW,CAAC,MAAM,KAAK,GAAG;AACnC,YAAM,MAAM,KAAK,WAAW,YAAY,OAAO;AAC/C,YAAM,UAAU,KAAK,UAAU,GAAG;AAClC,UAAI,CAAC,SAAS;AACZ;MACF;AACA,aAAO,KAAK,UAAU,GAAG;AACzB,WAAK,yBAAwB,qBAA6B,OAAO;IACnE;EACF;EAEQ,WAAW,YAAoB,gBAAuB;AAC5D,WAAO,KAAK,UAAU,WAAW,UAAU,YAAY,cAAc,CAAC;EACxE;EAEA,uBAAuB,WAAwC;AAC7D,UAAM,aAAa,KAAK,aAAa,SAAS;AAC9C,QAAI,CAAC,YAAY;AACf;IACF;AAEA,eAAW;MAAwB;;IAAA;EACrC;EAEA,sBAAsB,WAA0C,KAAW;AACzE,UAAM,aAAa,KAAK,aAAa,SAAS;AAC9C,QAAI,CAAC,YAAY;AACf;IACF;AAEA,UAAM,YAAY,EAAC,IAAG;AACtB,eAAW,yBAAwB,yBAA6C,SAAS;EAC3F;EAEA,oBAAoB,WAA0C,KAAa,OAAa;AACtF,UAAM,aAAa,KAAK,aAAa,SAAS;AAC9C,QAAI,CAAC,YAAY;AACf;IACF;AAEA,UAAM,YAAY,EAAC,KAAK,MAAK;AAC7B,eAAW,yBAAwB,uBAA2C,SAAS;EACzF;EAEA,sBAAsB,WAA0C,KAAa,UAAkB,OAAa;AAC1G,UAAM,aAAa,KAAK,aAAa,SAAS;AAC9C,QAAI,CAAC,YAAY;AACf;IACF;AAEA,UAAM,YAAY,EAAC,KAAK,UAAU,MAAK;AACvC,eAAW,yBAAwB,yBAA6C,SAAS;EAC3F;EAEA,aAAa,WAAwC;AACnD,YAAQ,OAAO,QAAQ,UAAU,UAAU,CAAC;AAC5C,WAAO,KAAK,UAAU,KAAK,WAAW,UAAU,cAAc,IAAI,UAAU,cAAc,CAAC;EAC7F;EAEA,WAAQ;AACN,UAAM,SAAS,CAAA;AACf,eAAW,MAAM,KAAK,WAAW;AAC/B,aAAO,KAAK,KAAK,UAAU,EAAE,CAAC;IAChC;AACA,WAAO;EACT;;AAGE,cAAS,SAAS,SAAS,iBAAiB,EAAC,cAAY,GAA6B,WAAW,MAAK,CAAC;AAYrG,IAAO,uBAAP,MAA2B;EACd;EACjB,YAAY,OAAsB;AAChC,SAAK,QAAQ;EACf;EAEA,uBAAuB,EAAC,UAAS,GAAkD;AACjF,SAAK,MAAM,uBAAuB,SAAS;EAC7C;EAEA,sBAAsB,EAAC,WAAW,IAAG,GAAiD;AACpF,SAAK,MAAM,sBAAsB,WAAW,GAAG;EACjD;EAEA,oBAAoB,EAAC,WAAW,KAAK,SAAQ,GAA+C;AAC1F,SAAK,MAAM,oBAAoB,WAAW,KAAK,QAAQ;EACzD;EAEA,sBAAsB,EAAC,WAAW,KAAK,UAAU,SAAQ,GAAiD;AACxG,SAAK,MAAM,sBAAsB,WAAW,KAAK,UAAU,QAAQ;EACrE;;;;AC5RF;;;;;AAIA,YAAYC,aAAY;AACxB,YAAYC,UAAS;AAIf,IAAO,mBAAP,cAAuC,sBAAc,cAAoC;EACpF;EACA;EACA;EACA;EAET,YACI,OAA8B,aAAqB,MAAc,aAA4C;AAC/G,UAAK;AACL,SAAK,SAAS;AACd,SAAK,eAAe;AACpB,SAAK,QAAQ;AACb,SAAK,eAAe;EACtB;EAEA,IAAI,QAAK;AACP,WAAO,KAAK;EACd;EAEA,IAAI,cAAW;AACb,WAAO,KAAK;EACd;EAEA,IAAI,OAAI;AACN,WAAO,KAAK;EACd;;;;EAKA,IAAI,MAAG;AACL,WAAO,GAAG,KAAK,WAAW,IAAI,KAAK,WAAW;EAChD;EAEA,IAAI,cAAW;AACb,WAAO,KAAK;EACd;EAEA,MAAM,SAAS,MAAe;AAC5B,UAAM,SAAqD;MACzD,IAAI,KAAK;MACT,aAAa,KAAK;;AAEpB,QAAI,MAAM;AACR,aAAO,OAAO;IAChB;AACA,UAAM,WAAW,MAAM,KAAK,OAAO,MAAM,uBAAuB,MAAM;AACtE,QAAI,SAAS,SAAQ,GAAI;AACvB,YAAM,IAAI,MAAM,SAAS,SAAQ,CAAE;IACrC;AACA,WAAO,SAAS;EAClB;EAEA,MAAM,QAAQ,KAAa,OAAc;AACvC,UAAM,WAAW,MAAM,KAAK,OAAO,MAAM,uBACrC,EAAC,IAAI,KAAK,cAAc,aAAa,KAAK,cAAc,QAAQ,EAAC,CAAC,GAAG,GAAG,MAAK,EAAC,CAAC;AACnF,QAAI,SAAS,SAAQ,GAAI;AACvB,YAAM,IAAI,MAAM,SAAS,SAAQ,CAAE;IACrC;EACF;EAEA,MAAM,WAAW,KAAW;AAC1B,UAAM,WAAW,MAAM,KAAK,OAAO,MAAM,0BACrC,EAAC,IAAI,KAAK,cAAc,aAAa,KAAK,cAAc,MAAM,CAAC,GAAG,EAAC,CAAC;AACxE,QAAI,SAAS,SAAQ,GAAI;AACvB,YAAM,IAAI,MAAM,SAAS,SAAQ,CAAE;IACrC;EACF;EAEA,MAAM,QAAK;AACT,UAAM,WACF,MAAM,KAAK,OAAO,MAAM,yBAAyB,EAAC,IAAI,KAAK,cAAc,aAAa,KAAK,aAAY,CAAC;AAC5G,QAAI,SAAS,SAAQ,GAAI;AACvB,YAAM,IAAI,MAAM,SAAS,SAAQ,CAAE;IACrC;EACF;EAEA,cAAc,QAAmC;AAC/C,QAAI,CAAC,QAAQ;AACX,aAAO;IACT;AACA,UAAM,YAAY,OAAO,WAAU,GAAI;AACvC,UAAM,YAAY,YAAmB,kBAAU,UAAU,WAAW,SAAS,IAAI;AACjF,WAAO,WAAW,WAAW,sBAAsB,WAAW,SAAS,KAAK;EAC9E;;AAGI,IAAO,wBAAP,cAAyC,cAAS,SAAoB;EACjE;EACT;EACS;EACT;EAEA,YAAY,QAAyB;AACnC,UAAM,MAAM;AAEZ,SAAK,gBAAgB,OAAO,MAAU,kBAAa,YAAY;AAC/D,SAAK,YAAY,oBAAI,IAAG;AACxB,SAAK,QAAQ,OAAO,gBAAe;EACrC;EAEA,SAAM;AACJ,QAAI,KAAK,UAAU;AACjB;IACF;AAEA,QAAI,KAAK,eAAe;AACtB,WAAK,cAAc,iBACX,kBAAa,OAAO,yBAAyB,KAAK,4BAA4B,IAAI;AAC1F,WAAK,cAAc,iBACX,kBAAa,OAAO,2BAA2B,KAAK,8BAA8B,IAAI;AAC9F,WAAK,cAAc,kBAAiB,EAAG,QAAQ,KAAK,0BAA0B,IAAI;IACpF;AAEA,SAAK,WAAW;EAClB;EAEA,yBAAyB,IAAU;AACjC,UAAM,mBAAmB,KAAK,UAAU,IAAI,EAAE;AAE9C,QAAI,kBAAkB;AACpB,aAAO;IACT;AAEA,UAAM,cAAc,oBAAI,IAAG;AAC3B,SAAK,UAAU,IAAI,IAAI,WAAW;AAClC,WAAO;EACT;EAEA,cAAc,IAAY,MAAY;AACpC,eAAW,eACC;MAAA;MAAA;;;;OACiF;AAC3F,YAAM,WAAW,KAAK,yBAAyB,EAAE;AACjD,YAAM,UAAU,IAAI,iBAAiB,MAAM,IAAI,MAAM,WAAW;AAEhE,cAAQ,OAAO,CAAC,SAAS,IAAI,WAAW,CAAC;AAEzC,cAAQ,SAAS,CAAA,CAAE,EACd,KAAK,MAAK;AAET,YAAI,KAAK,UAAU,IAAI,EAAE,MAAM,UAAU;AACvC;QACF;AAEA,YAAI,SAAS,IAAI,WAAW,GAAG;AAC7B;QACF;AACA,iBAAS,IAAI,aAAa,OAAO;AACjC,aAAK,yBAAwB,yBAAiC,OAAO;MACvE,CAAC,EACA,MACG,MAAK;MAGL,CAAC;IACX;EACF;EAEA,iBAAiB,IAAU;AACzB,UAAM,WAAW,KAAK,UAAU,IAAI,EAAE;AAEtC,QAAI,CAAC,UAAU;AACb;IACF;AAEA,eAAW,CAAC,KAAK,OAAO,KAAK,UAAU;AAGrC,eAAS,OAAO,GAAG;AACnB,WAAK,yBAAwB,2BAAmC,OAAO;IACzE;AAEA,SAAK,UAAU,OAAO,EAAE;EAC1B;EAEA,yBAAyB,SAA0C;AACjE,UAAM,cAAc,KAAK,uBAAuB,OAAO;AACvD,QAAI,aAAa;AACf,WAAK,cAAc,aAAa,QAAQ,IAAI;IAC9C;EACF;EAEA,2BAA2B,OAA6E;AACtG,SAAK,yBAAyB,MAAM,IAAI;EAC1C;EAEA,uBAAuB,SAA0C;AAC/D,UAAM,MAAa,kBAAU,UAAU,WAAW,QAAQ,MAAM;AAChE,WAAO,OAAO,IAAI,WAAW,qBAAqB,IAAI,OAAO;EAC/D;EAEA,2BAA2B,SAA0C;AACnE,UAAM,cAAc,KAAK,uBAAuB,OAAO;AACvD,QAAI,aAAa;AAEf,UAAI,KAAK,eAAe,kBAAiB,EAAG,KAAK,OAAK,KAAK,uBAAuB,CAAC,MAAM,WAAW,GAAG;AACrG;MACF;AAEA,WAAK,iBAAiB,WAAW;IACnC;EACF;EAEA,6BAA6B,OAA6E;AACxG,SAAK,2BAA2B,MAAM,IAAI;EAC5C;EAEA,oBAAoB,IAAY,aAA4C;AAC1E,WAAO,KAAK,UAAU,IAAI,EAAE,GAAG,IAAI,WAAW;EAChD;EAEA,WAAQ;AACN,UAAM,SAAS,CAAA;AACf,eAAW,YAAY,KAAK,UAAU,OAAM,GAAI;AAC9C,aAAO,KAAK,GAAG,SAAS,OAAM,CAAE;IAClC;AACA,WAAO;EACT;;AAGE,cAAS,SAAS,SAAS,uBAAuB,EAAC,cAAY,GAA4B,WAAW,MAAK,CAAC;;;ACtOhH;;;;;gBAAAC;EAAA;;;;AAIA,YAAYC,aAAY;AACxB,YAAYC,UAAS;AAIrB,IAAM,iBAAiB;AAEjB,IAAO,iBAAP,MAAO,wBAA2B,cAAS,SAAoB;EAClD;EACA;EACA;;EAEA;EACT;EACS;EACA;EACT;EAER,YAAY,QAAyB;AACnC,UAAM,MAAM;AACZ,WAAO,0BAA0B,IAAI;AACrC,SAAK,qBAAqB,OAAO,MAAU,yBAAoB,mBAAmB;AAClF,SAAK,iBAAiB,OAAO,eAAc;AAC3C,SAAK,eAAe,OAAO,aAAY;AAEvC,SAAK,oBAAoB,oBAAI,IAAG;AAChC,SAAK,qCAAqC,oBAAI,IAAG;AAEjD,SAAK,wBAAwB,oBAAI,IAAG;AACpC,SAAK,YAAY,IAAW,kBAAU,UAAU,GAAI;EACtD;;;EAIA,OAAO,cAAc,QAAW;AAC9B,QAAI,OAAQ,WAAY,eAAe,WAAW,MAAM;AACtD,aAAO;IACT;AAEA,QAAI;AACJ,YAAQ,OAAQ,QAAS;MACvB,KAAK;AACH,cAAM;UACJ,MAAI;UACJ,QAAQ;;AAEV;MACF,KAAK;AACH,cAAM;UACJ,MAAI;UACJ,QAAQ;;AAEV;MACF,KAAK;AACH,YAAI,kBAAkB,MAAM;AAC1B,gBAAM;YACJ,MAAI;YACJ,MAAM,OAAO,QAAO;;QAExB,WAAW,MAAM,QAAQ,MAAM,GAAG;AAChC,gBAAM,QAAQ,CAAA;AACd,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACtC,kBAAM,YAAY,gBAAe,cAAc,OAAO,CAAC,CAAC;AACxD,gBAAI,WAAW;AACb,oBAAM,KAAK,SAAS;YACtB;UACF;AACA,gBAAM;YACJ,MAAI;YACJ;;QAEJ,OAAO;AACL,iBAAO;QACT;AACA;MACF;AACE,eAAO;IACX;AACA,WAAO;EACT;EAEQ,OAAO,wBAAwB,aAAwB;AAC7D,WAAO;MACL,OAAO,gBAAe,cAAc,YAAY,KAAK;MACrD,OAAO,gBAAe,cAAc,YAAY,KAAK;MACrD,WAAW,QAAQ,YAAY,SAAS;MACxC,WAAW,QAAQ,YAAY,SAAS;;EAE5C;EAEA,OAAO,sBAAsB,SAAmC;AAC9D,QAAI;AACJ,YAAQ,QAAQ,MAAM;MACpB,KAAA;AACE,qBAAa;AACb;MACF,KAAA;AACE,qBAAa,QAAQ;AACrB;MACF,KAAA;AACE,qBAAa,QAAQ;AACrB;IACJ;AACA,WAAO;EACT;EAEA,OAAO,4BAA4B,YAA0C;AAC3E,QAAI,OAAO,eAAe,UAAU;AAClC,aAAO,MAAM,aAAa;IAC5B;AACA,QAAI,sBAAsB,OAAO;AAC/B,aAAO,OAAO,WAAW,KAAK,MAAM,IAAI;IAC1C;AACA,WAAO;EACT;EAEA,SAAM;AACJ,QAAI,KAAK,SAAS;AAChB;IACF;AAEA,SAAK,KAAK,eAAe,cAAa;AACtC,QAAI,KAAK,oBAAoB;AAC3B,WAAK,mBAAmB,iBAAgB,eACS,KAAK,oBAAoB,IAAI;AAC9E,WAAK,mBAAmB,iBAAgB,iBACW,KAAK,sBAAsB,IAAI;AAClF,iBAAW,EAAC,OAAM,KAAK,KAAK,mBAAmB,WAAU,GAAI;AAC3D,aAAK,iBAAiB,MAAM;MAC9B;IACF;AAEA,SAAK,UAAU;EACjB;EAEA,mBAAmB,YAAkB;AACnC,QAAI,CAAC,KAAK,WAAW,CAAC,KAAK,mCAAmC,IAAI,UAAU,GAAG;AAC7E;IACF;AAEA,eAAW,CAAC,iBAAiB,KAAK,KAAK,mCAAmC,IAAI,UAAU,KAAK,CAAA,GAAI;AAC/F,YAAM,gBACF,KAAK,oBAAoB,gBAAgB,YAAY,qBAAqB,MAAS,GAAG;AAC1F,UAAI,eAAe;AACjB,aAAK,oBAAoB,aAAa;MACxC;IACF;AACA,SAAK,mCAAmC,OAAO,UAAU;AACzD,UAAM,cAAc,KAAK,oBAAoB,wBAAwB,UAAU,KAAK,CAAA;AACpF,eAAW,EAAC,OAAM,KAAK,aAAa;AAClC,WAAK,iBAAiB,MAAM;IAC9B;EACF;EAEA,MAAM,eAAe,YAAsB;AACzC,QAAI,CAAC,KAAK,SAAS;AACjB;IACF;AACA,UAAM,KAAK,eAAe,sBACtB,EAAC,eAAe,WAAW,eAAe,cAAc,WAAW,KAAI,CAAC;AAC5E,SAAK,KAAK,iCAAiC,WAAW,aAAa;EACrE;EAEA,MAAM,uBAAoB;AACxB,eAAW,CAAC,UAAU,KAAK,KAAK,oCAAoC;AAClE,YAAM,qBAAqB,KAAK,mCAAmC,IAAI,UAAU,GAAG,KAAI,KAAM,CAAA;AAC9F,iBAAW,qBAAqB,oBAAoB;AAClD,cAAM,gBACF,KAAK,oBAAoB,gBAAgB,YAAY,qBAAqB,MAAS,GAAG;AAC1F,YAAI,eAAe;AACjB,gBAAM,KAAK,iCAAiC,aAAa;QAC3D;MACF;IACF;AACA,SAAK,yBAAyBF,QAAO,sBAAsB;EAC7D;EAEA,gBAAgB,YAAsB;AACpC,SAAK,KAAK,aAAa,YAAY,IAAI;EACzC;EAEA,MAAM,iBAAiB,YAAwB,iBAAuB;AACpE,UAAM,KAAK,eAAe,wBACtB,EAAC,eAAe,WAAW,eAAe,cAAc,WAAW,MAAM,gBAAe,CAAC;EAC/F;EAEA,MAAM,cAAc,YAAwB,iBAAyB,aAAwB;AAC3F,UAAM,WAAW,gBAAe,wBAAwB,WAAW;AACnE,UAAM,KAAK,eAAe,gCACtB,EAAC,eAAe,WAAW,eAAe,cAAc,WAAW,MAAM,iBAAiB,SAAQ,CAAC;EACzG;EAEQ,mBAAmB,EAAC,MAAM,EAAC,YAAY,EAAC,OAAM,EAAC,EAAC,GAC+C;AACrG,SAAK,iBAAiB,MAAM;EAC9B;EAEQ,qBAAqB,EAAC,MAAM,EAAC,YAAY,EAAC,OAAM,EAAC,EAAC,GAC+C;AACvG,SAAK,oBAAoB,MAAM;EACjC;EAEQ,iBAAiB,eAA6C;AACpE,UAAM,EAAC,WAAU,IAAI;AACrB,QAAI,CAAC,KAAK,mCAAmC,IAAI,UAAU,GAAG;AAC5D,WAAK,mCAAmC,IAAI,YAAY,oBAAI,IAAG,CAAE;AACjE,WAAK,KAAK,aAAa,mCAAmC,EAAC,WAAU,CAAC;IACxE;AACA,UAAM,oBAAoB,KAAK,mCAAmC,IAAI,UAAU,KAAK,oBAAI,IAAG;AAC5F,YAAQ,OAAO,CAAC,kBAAkB,IAAI,cAAc,QAAQ,cAAc,CAAC;AAC3E,sBAAkB,IAAI,cAAc,QAAQ,gBAAgB,oBAAI,IAAG,CAAE;AACrE,SAAK,KAAK,iCAAiC,aAAa;EAC1D;EAEQ,oBAAoB,eAA6C;AACvE,UAAM,EAAC,WAAU,IAAI;AACrB,YAAQ,OAAO,KAAK,mCAAmC,IAAI,UAAU,CAAC;AACtE,UAAM,oBAAoB,KAAK,mCAAmC,IAAI,UAAU,KAAK,oBAAI,IAAG;AAC5F,YAAQ,OAAO,kBAAkB,IAAI,cAAc,QAAQ,cAAc,CAAC;AAC1E,UAAM,cAAc,kBAAkB,IAAI,cAAc,QAAQ,cAAc,KAAK,oBAAI,IAAG;AAC1F,eAAW,cAAc,aAAa;AACpC,WAAK,gCAAgC,UAAU;IACjD;AACA,sBAAkB,OAAO,cAAc,QAAQ,cAAc;AAC7D,QAAI,kBAAkB,SAAS,GAAG;AAChC,WAAK,mCAAmC,OAAO,UAAU;AACzD,WAAK,KAAK,aAAa,qCAAqC,EAAC,WAAU,CAAC;IAC1E;EACF;EAEQ,8BAA8B,eAA+C,eAAuB;AAC1G,UAAM,oBAAoB,KAAK,mCAAmC,IAAI,cAAc,UAAU;AAC9F,QAAI,sBAAsB,QAAW;AACnC;IACF;AAEA,UAAM,eAAe,IAAI,IAAI,cAAc,IAAI,kBAAgB,IAAI,WAAW,eAAe,YAAY,CAAC,CAAC;AAC3G,UAAM,eAAe,IAAI,IAAI,kBAAkB,IAAI,cAAc,QAAQ,cAAc,CAAC;AAExF,sBAAkB,IAAI,cAAc,QAAQ,gBAAgB,YAAY;AAExE,eAAW,YAAY,cAAc;AACnC,UAAI,CAAC,SAAS,MAAM,YAAY,GAAG;AACjC,aAAK,gCAAgC,QAAQ;MAC/C;IACF;AACA,eAAW,YAAY,cAAc;AACnC,UAAI,CAAC,SAAS,MAAM,YAAY,GAAG;AACjC,aAAK,8BAA8B,QAAQ;MAC7C;IACF;EACF;EAEA,YAAS;AACP,UAAM,SAAS,CAAA;AACf,eAAW,CAAC,EAAE,OAAO,KAAK,KAAK,oCAAoC;AACjE,iBAAW,CAAC,EAAE,SAAS,KAAK,SAAS;AACnC,mBAAW,YAAY,WAAW;AAChC,iBAAO,KAAK,QAAQ;QACtB;MACF;IACF;AACA,WAAO;EACT;EAEQ,8BAA8B,YAAsB;AAC1D,SAAK,yBAAyBA,QAAO,eAAe,EAAC,OAAO,MAAM,WAAU,CAAC;EAC/E;EAEQ,gCAAgC,YAAsB;AAC5D,SAAK,yBAAyBA,QAAO,iBAAiB,EAAC,OAAO,MAAM,WAAU,CAAC;EACjF;EAEQ,MAAM,iCAAiC,eAA6C;AAC1F,UAAM,EAAC,WAAU,IAAI;AACrB,UAAM,EAAC,cAAa,IAAI,MAAM,KAAK,eAAe,4BAA4B,EAAC,cAAa,CAAC;AAC7F,QAAI,CAAC,eAAe;AAClB,aAAO,CAAA;IACT;AACA,QAAI,CAAC,KAAK,mCAAmC,IAAI,UAAU,GAAG;AAC5D,aAAO,CAAA;IACT;AACA,UAAM,oBAAoB,KAAK,mCAAmC,IAAI,UAAU,KAAK,oBAAI,IAAG;AAC5F,QAAI,CAAC,kBAAkB,IAAI,cAAc,QAAQ,cAAc,GAAG;AAChE,aAAO,CAAA;IACT;AACA,SAAK,8BAA8B,eAAe,aAAa;AAC/D,WAAO;EACT;EAEQ,MAAM,aAAa,YAAwB,gBAAuB;AACxE,UAAM,4BAA4B,MAAM,KAAK,eAAe,uBAAuB;MAChD,eAAe,WAAW;MAC1B,cAAc,WAAW;KAC1B,GAAG;AACrC,QAAI,CAAC,KAAK,mCAAmC,IAAI,WAAW,cAAc,UAAU,GACzE,IAAI,WAAW,cAAc,QAAQ,cAAc,GAAG;AAC/D;IACF;AACA,QAAI,CAAC,0BAA0B;AAC7B;IACF;AAEA,UAAM,gBAAgB,IAAI,SAAS,YAAY,yBAAyB,OAAO;AAC/E,SAAK,kBAAkB,IAAI,YAAY,aAAa;AACpD,eAAW,eAAe,yBAAyB,cAAc;AAC/D,YAAM,wBAAwB,gBAAe,sBAAsB,YAAY,OAAO;AACtF,YAAM,mBAAmB,IAAI,YAAY,YAAY,MAAM,uBAAuB,YAAY,aAAa;AAC3G,eAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,QAAQ,EAAE,GAAG;AACnD,cAAM,QAAQ,YAAY,QAAQ,CAAC;AACnC,cAAM,kBAAkB,gBAAe,sBAAsB,MAAM,OAAO;AAC1E,cAAM,aAAa,IAAI,MAAM,MAAM,MAAM,iBAAiB,MAAM,QAAQ,MAAM,UAAU;AACxF,yBAAiB,QAAQ,IAAI,WAAW,MAAM,UAAU;MAC1D;AACA,oBAAc,aAAa,IAAI,iBAAiB,MAAM,gBAAgB;IACxE;AAEA,SAAK,yBAAyBA,QAAO,gBAAgB,EAAC,OAAO,MAAM,UAAU,eAAe,eAAc,CAAC;EAC7G;EAEA,oBACI,YAAwB,iBAAyB,aAA+B,WAChF,UAAkB,UAAgD;AACpE,SAAK,KAAK;MACN;MAAY,WAAW;MAAM;;MAAiC;MAAW;MAAa;MAAW;MACjG;IAAQ;EACd;EAEA,cACI,YAAwB,iBAAyB,WAAmB,aACpE,WAAmB,UAAkB,UAAgD;AACvF,SAAK,KAAK,YACN,YAAY,WAAW,MAAM,iBAAiB,WAAW,aAAa,WAAW,UAAU,QAAQ;EACzG;EAEQ,MAAM,YACV,YAAwB,cAAsB,iBAAyB,WACvE,aAA+B,WAAmB,UAClD,UAAgD;AAClD,UAAM,WAAW,cAAc,gBAAe,wBAAwB,WAAW,IAAI;AACrF,UAAM,eAAe,KAAK,OAAM,EAAG,MAAU,kBAAa,YAAY;AACtE,UAAM,WAAW,MAAM,KAAK,eAAe,mBAAmB;MAC5D,eAAe,WAAW;MAC1B;MACA;MACA;MACA;MACA;MACA;KACD;AACD,QAAI,CAAC,gBACD,CAAC,KAAK,mCAAmC,IAAI,WAAW,cAAc,UAAU,GACzE,IAAI,WAAW,cAAc,QAAQ,cAAc,GAAG;AAC/D;IACF;AACA,QAAI,SAAS,SAAQ,GAAI;AACvB,cAAQ,MAAM,2BAA2B,SAAS,SAAQ,CAAE;AAC5D;IACF;AAEA,UAAM,cAAc,SAAS;AAC7B,UAAM,UAAU,CAAA;AAChB,eAAW,aAAa,aAAa;AACnC,YAAM,MAAM,cAAc,mBAAmB,UAAU,GAAG;AAC1D,YAAM,aAAa,cAAc,mBAAmB,UAAU,UAAU;AACxE,YAAM,QAAQ,cAAc,mBAAmB,UAAU,KAAK;AAC9D,UAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO;AACjC;MACF;AACA,cAAQ,KAAK,IAAI,MAAM,KAAK,YAAY,KAAK,CAAC;IAChD;AACA,aAAS,SAAS,SAAS,OAAO;EACpC;EAEA,MAAM,YAAY,YAAwB,aAAwB;AAChE,UAAM,eAAe,WAAW;AAChC,UAAM,kBAAkB,YAAY;AACpC,UAAM,WAAW,MAAM,KAAK,eAAe,mBACvC,EAAC,eAAe,WAAW,eAAe,cAAc,gBAAe,CAAC;AAE5E,QAAI,SAAS,SAAQ,GAAI;AACvB,cAAQ,MAAM,2BAA2B,SAAS,SAAQ,CAAE;AAC5D,aAAO;IACT;AACA,WAAO,EAAC,cAAc,SAAS,cAAc,mBAAmB,SAAS,kBAAiB;EAC5F;EAEQ,MAAM,oCAAoC,eAA6C;AAC7F,UAAM,gBAAgB,MAAM,KAAK,iCAAiC,aAAa;AAC/E,eAAW,gBAAgB,eAAe;AACxC,WAAK,KAAK,aAAa,IAAI,WAAW,eAAe,YAAY,GAAG,KAAK;IAC3E;EACF;EAEA,qBAAqB,EAAC,YAAY,SAAQ,GAA6C;AACrF,UAAM,gBAAgB,KAAK,oBAAoB,cAAc,QAAQ,GAAG;AACxE,QAAI,cAAc,eAAe;AAC/B,WAAK,sBAAsB,IAAI,aAAa;AAC5C,WAAK,KAAK,UAAU,SAAS,MAAK;AAChC,cAAM,WAAW,MAAM,KAAK,KAAK,uBAAuB,CAAAG,mBAAgB;AACtE,eAAK,KAAK,oCAAoCA,cAAa;QAC7D,CAAC;AACD,aAAK,sBAAsB,MAAK;AAChC,eAAO,QAAQ,IAAI,QAAQ;MAC7B,CAAC;IACH;EACF;EAEA,wBAAwB,EAAC,UAAU,cAAc,gBAAe,GAAgD;AAE9G,UAAM,gBAAgB,KAAK,oBAAoB,cAAc,QAAQ,GAAG;AACxE,QAAI,eAAe;AACjB,YAAM,aAAa,IAAI,WAAW,eAAe,YAAY;AAC7D,WAAK,yBAAyBH,QAAO,yBAAyB,EAAC,YAAY,iBAAiB,OAAO,KAAI,CAAC;IAC1G;EACF;EACA,sCAAsC,QAAmE;EACzG;EAEA,wBAAwB,QAAqD;EAC7E;EAEA,2BAA2B,QAAwD;EACnF;EAEA,sBAAsB,QAAmD;EACzE;EAEA,kCAAkC,QAA+D;EACjG;EAEA,0CAA0C,QAAuE;EAEjH;EAEA,sBAAsB,QAAmD;EACzE;EAEA,+CACI,QAA4E;EAChF;EAEA,8BAA8B,QAA2D;EACzF;EAEA,qBAAqB,QAAkD;EACvE;EAEA,qCAAqC,QAAkE;EACvG;EACA,+BAA+B,QAA4D;EAC3F;EACA,2CAA2C,QAAwE;EAEnH;;AAGE,cAAS,SAAS,SAAS,gBAAgB,EAAC,cAAY,MAAiC,WAAW,MAAK,CAAC;AAE9G,IAAYA;CAAZ,SAAYA,SAAM;AAEhB,EAAAA,QAAA,eAAA,IAAA;AACA,EAAAA,QAAA,iBAAA,IAAA;AACA,EAAAA,QAAA,gBAAA,IAAA;AACA,EAAAA,QAAA,wBAAA,IAAA;AACA,EAAAA,QAAA,yBAAA,IAAA;AAEF,GARYA,YAAAA,UAAM,CAAA,EAAA;AAkBZ,IAAO,QAAP,MAAY;EAChB;EACA;EACA;EAEA,YACI,KAAoC,YACpC,OAAoC;AACtC,SAAK,MAAM;AACX,SAAK,aAAa;AAClB,SAAK,QAAQ;EACf;;AAGI,IAAO,aAAP,MAAiB;EACZ;EACT;EACA,YAAY,eAA+C,MAAY;AACrE,SAAK,gBAAgB;AACrB,SAAK,OAAO;EACd;EAEA,SAAS,eAA6C;AACpD,WAAO,KAAK,cAAc,SAAS,cAAc;EACnD;EAEA,OAAO,YAAsB;AAC3B,WAAO,KAAK,SAAS,WAAW,QAAQ,KAAK,cAAc,SAAS,WAAW,cAAc,QACzF,KAAK,cAAc,eAAe,WAAW,cAAc;EACjE;EAEA,MAAM,aAA4B;AAChC,eAAW,YAAY,aAAa;AAClC,UAAI,KAAK,OAAO,QAAQ,GAAG;AACzB,eAAO;MACT;IACF;AACA,WAAO;EACT;;AAGI,IAAO,WAAP,MAAe;EACnB;EACA;EACA;EACA,YAAY,YAAwB,SAAe;AACjD,SAAK,aAAa;AAClB,SAAK,UAAU;AACf,SAAK,eAAe,oBAAI,IAAG;EAC7B;;AAGI,IAAO,cAAP,MAAkB;EACtB;;;EAGA;EACA;EACA;;;EAIA,YAAY,MAAc,SAAc,eAAsB;AAC5D,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,gBAAgB;AACrB,SAAK,UAAU,oBAAI,IAAG;EACxB;EAEA,IAAI,gBAAa;AAGf,WAAO,eAAe,4BAA6B,KAAK,OAAkB;EAC5E;;AAGI,IAAO,QAAP,MAAY;EAChB;;;EAGA;EACA;EACA;;;EAGA,YAAY,MAAc,SAAc,QAAiB,YAAmB;AAC1E,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,aAAa;EACpB;EAEA,IAAI,gBAAa;AACf,WAAO,eAAe,4BAA6B,KAAK,OAAkB;EAC5E;;;;AC/jBF;;;;;;AAKA,OAAO;AACP,OAAO;AAEP,YAAYI,WAAU;AACtB,YAAYC,UAAS;AACrB,YAAYC,cAAa;AACzB,YAAYC,eAAc;AAC1B,YAAY,cAAc;AAC1B,YAAYC,SAAQ;AACpB,YAAY,SAAS;AACrB,YAAYC,oBAAmB;AAE/B,YAAYC,4BAA2B;;;ACZvC,IAAO,6BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAkFC,YAAY,QAAQ,sBAAsB,CAAC;;;AD/D3D,IAAM,EAAC,KAAI,IAAI;AAEf,IAAMC,aAAY;;;;EAIhB,SAAS;;;;EAIT,cAAc;;;;EAId,gBAAgB;;;;EAIhB,iBAAiB;;;;;EAKjB,uBAAuB;;;;EAIvB,uBAAuB;;;;;;EAMvB,yBAAyB;;;;;EAKzB,0BAA0B;;;;EAI1B,KAAK;;;;EAIL,SAAS;;;;EAIT,gBAAgB;;;;EAIhB,kBAAkB;;;;EAIlB,gBAAgB;;;;EAIhB,gCAAgC;;;;EAIhC,WAAW;;;;EAIX,YAAY;;;;EAIZ,aAAa;;;;EAIb,WAAW;;;;EAIX,SAAS;;;;EAIT,kBAAkB;;;;EAIlB,cAAc;;;;EAId,aAAa;;;;EAIb,mBAAmB;;;;EAInB,UAAU;;;;;EAKV,eAAe;;;;;EAKf,oBAAoB;;AAEtB,IAAMC,QAAY,WAAK,kBAAkB,wCAAwCD,UAAS;AAC1F,IAAME,cAAkB,WAAK,mBAAmB,KAAK,QAAWD,KAAI;AAE9D,IAAO,kBAAP,cAAqD,2CAAoB,oBAAmB;EAC/E;EACT;EACR,YAAY,OAAuB,UAAuB;AACxD,UAAK;AAEL,SAAK,QAAQ;AACb,QAAI,UAAU;AACZ,WAAK,OAAO,QAAQ;IACtB;EACF;EAES,WAAQ;AACf,WAAO,KAAK,UAAU,WAAW;EACnC;EAES,MAAM,sBAAmB;AAChC,QAAI,CAAC,KAAK,UAAU;AAClB,aAAW;IACb;AACA,WAAO;QACH,MAAM,MAAM,oBAAmB,CAAE;QACjC,KAAK,IAAIC,YAAWF,WAAU,OAAO,CAAC,CAAC;QACvC,KAAK,MAAM,KAAK,SAAS,QAAQ,SAAQ,CAAE,CAAC;QAC5C,KAAK,IAAIE,YAAWF,WAAU,YAAY,CAAC,CAAC;QAC5C,KAAK,MAAM,KAAK,SAAS,aAAa,KAAK,SAAQ,CAAE,CAAC;;;;uBAIvCE,YAAWF,WAAU,cAAc,CAAC;qBACtC,UAA+B;mBACjC,KAAK,cAAc;kBACN,sBAAO,iBAAiB,EAAE,MAAM;MAC1D,OAAO;KACR,CAAC;UACIE,YAAWF,WAAU,cAAc,CAAC;;;uBAGvBE,YAAWF,WAAU,eAAe,CAAC;qBACvC,UAA+B;mBACjC,KAAK,4BAA4B;kBACpB,sBAAO,kBAAkB,EAAE,MAAM;MAC3D,OAAO;KACR,CAAC;UACIE,YAAWF,WAAU,eAAe,CAAC;;;;EAI7C;EAEQ,+BAA4B;AAClC,SAAK,MAAM,gBAAgB,KAAK,SAAS,UAAU;EACrD;EAEA,OAAO,UAAkB;AACvB,SAAK,WAAW;AAChB,UAAM,aACF,KAAK,MAAM,OAAM,EACZ,MAAU,yBAAoB,mBAAmB,GAChD,gBAAgB,SAAS,WAAW,cAAc,YAAY,SAAS,WAAW,cAAc,IAAI;AAC9G,QAAI,YAAY;AACd,WAAK,iBAAiB,UAAU;IAClC,OAAO;AACL,WAAK,cAAc,SAAS,WAAW,cAAc,UAAU;IACjE;AAEA,SAAK,KAAK,OAAM,EAAG,KAAK,MAAM,KAAK,gBAAe,CAAE;EACtD;EAEQ,kBAAe;EAEvB;EAEQ,MAAM,iBAAc;AAC1B,UAAM,KAAK,MAAS,YAAQ,cAAc,KACtCE,YAAWF,WAAU,qBAAqB,GAC1CE,YAAWF,WAAU,uBAAuB,EAAC,KAAK,KAAK,SAAS,WAAW,KAAI,CAAC,GAAG,MACnF,EAAC,cAAc,+BAA8B,CAAC;AAClD,QAAI,IAAI;AACN,WAAK,KAAK,MAAM,eAAe,KAAK,SAAS,UAAU;IACzD;EACF;EACS,WAAQ;AACf,UAAM,SAAQ;EAChB;;AAGF,eAAe,OAAO,8BAA8B,eAAe;AAO7D,IAAO,cAAP,cAA8B,SAAK,WAAU;EAChC;EACA;EACT;EACS;EACA;EACA;EACA;EACA;EACT;EACA;EACA;;EAEE;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAGA;EACA;EAER,YACI,OAAuB,YAAwB,aAA0B,OACzE,4BAAsC;AACxC,UAAM;MACJ,OAAOE,YAAWF,WAAU,GAAG;MAC/B,QAAQ;MACR,OAAO,GAAiB,oBAAK,sBAAsB,CAAC;KACrD;AACD,SAAK,oBAAoB,0BAAoB;AAE7C,SAAK,QAAQ;AACb,SAAK,aAAa;AAClB,SAAK,UAAU,QAAQ,KAAK;AAC5B,SAAK,6BAA6B;AAElC,SAAK,QAAQ,UAAU,IAAI,wBAAwB,cAAc;AAEjE,SAAK,gBAAgB,IAAO,YAAQ,cAAcE,YAAWF,WAAU,OAAO,GAAG,SAAS;AAC1F,SAAK,cAAc,iBAAgB,SAAwC,KAAK,sBAAsB,IAAI;AAC1G,SAAK,cAAc,QAAQ,aAAa,SAAS,GAAiB,sBAAO,SAAS,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC,EAAE;AAE1G,SAAK,uBAAuB,IAAO,YAAQ,cAAcE,YAAWF,WAAU,cAAc,GAAG,KAAK;AACpG,SAAK,qBAAqB,iBAAgB,SAAwC,YAAS;AACzF,WAAK,KAAK,oBAAoB,IAAI;IACpC,CAAC;AACD,SAAK,qBAAqB,QAAQ,aAC9B,SAAS,GAAiB,sBAAO,iBAAiB,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC,EAAE;AAE9E,SAAK,cAAc,IAAO,YAAQ,cAAcE,YAAWF,WAAU,gBAAgB,GAAG,OAAO;AAC/F,SAAK,YAAY,iBAAgB,SAAwC,MAAK;AAC5E,WAAK,KAAK,mBAAkB;IAC9B,GAAG,IAAI;AACP,SAAK,YAAY,QAAQ,aAAa,SAAS,GAAiB,sBAAO,WAAW,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC,EAAE;AAE1G,UAAM,cAAiB,YAAQ,gBAAgB;MAC7C,OAAOE,YAAWF,WAAU,cAAc;MAC1C,UAAU;MACV,OAAO;MACP,OAAO;MACP,QAAQ;KACT;AACD,SAAK,eAAe,IAAO,YAAQ,YAAY,WAAW;AAC1D,SAAK,aAAa,WAAW,KAAK;AAClC,SAAK,aAAa,SAASE,YAAWF,WAAU,8BAA8B,CAAC;AAC/E,SAAK,sBAAsB;AAE3B,SAAK,oBAAmB;AAExB,SAAK,WAAW;AAChB,SAAK,YAAY;AAEjB,SAAK,OAAO,aAAa,KAAK;AAC9B,SAAK,UAAU,CAAA;EACjB;EAEQ,iBAAc;AACpB,UAAM,UAAU,KAAK,WAAW,KAAK,QAAQ,KAAK,MAAM,UAAU,KAAK,YAAY;AAEnF,UAAM,UAAW,CAAA;AAGjB,UAAM,iBAAiB;MACrB,OAAO;MACP,kBAAkB;MAClB,UAAU;MACV,MAAM;MACN,OAAO;MACP,OAAO;MACP,YAAY;MACZ,UAAU;MACV,eAAe;MACf,UAAU;MACV,YAAY;MACZ,QAAQ;MACR,6BAA6B;MAC7B,UAAU;MACV,eAAe;;AAEjB,YAAQ,KACH,EAAC,GAAG,gBAAgB,IAAI,UAAU,OAAO,KAAK,UAAU,OAAO,OAAO,OAAM,CACzC;AACxC,YAAQ,KAAM;MACZ,GAAG;MACH,IAAI;MACJ,kBAAkB,KAAK,wBAAwBE,YAAWF,WAAU,SAAS,GAAG,OAAO;MACvF,UAAU;KAC4B;AACxC,QAAI,KAAK,SAAS;AAChB,cAAQ,KAAM;QACZ,GAAG;QACH,IAAI;QACJ,kBAAkB,KAAK,wBAAwBE,YAAWF,WAAU,UAAU,GAAG,KAAK,YAAY,OAAO;QACzG,UAAU;OAC4B;IAC1C;AACA,UAAM,QAAQE,YAAWF,WAAU,WAAW;AAC9C,YAAQ,KAAM,EAAC,GAAG,gBAAgB,IAAI,SAAS,OAAO,UAAU,MAAK,CAAwC;AAE7G,UAAM,WAAW,IAAa,mBAAS,aAAa;MAClD,aAAaE,YAAWF,WAAU,SAAS;MAC3C;MACA,gBAAgB,KAAK,oBAAoB,KAAK,IAAI;MAClD,iBAAiB,KAAK,WAAW,KAAK,MAAM,IAAI;KACjD;AACD,aAAS,WAAW,IAAI;AACxB,aAAS,iBAAgB,gBAAyC,MAAK;AACrE,WAAK,wBAAuB;IAC9B,GAAG,IAAI;AACP,WAAO;EACT;;;EAIQ,wBAAwB,QAAgB,SAAY;AAC1D,UAAM,0BAA0B,SAAS,uBAAsB;AAC/D,IAAG,YAAQ,gBAAgB,yBAAyB,MAAM;AAC1D,QAAI,YAAY,MAAM;AACpB,aAAO;IACT;AAEA,IAAG,YAAQ,gBAAgB,yBAAyB,OAAOE,YAAWF,WAAU,OAAO,CAAC;AACxF,QAAI,MAAM,QAAQ,OAAO,GAAG;AAC1B,MAAG,YAAQ,gBAAgB,yBAAyB,GAAG;AACvD,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AACvC,YAAI,MAAM,GAAG;AACX,UAAG,YAAQ,gBAAgB,yBAAyB,IAAI;QAC1D;AACA,gCAAwB,YAAY,KAAK,sBAAsB,QAAQ,CAAC,CAAC,CAAC;MAC5E;AACA,MAAG,YAAQ,gBAAgB,yBAAyB,GAAG;IACzD,OAAO;AACL,YAAM,gBAAiB;AACvB,8BAAwB,YAAY,KAAK,sBAAsB,aAAa,CAAC;IAC/E;AACA,IAAG,YAAQ,gBAAgB,yBAAyB,GAAG;AACvD,WAAO;EACT;EAEQ,sBAAsB,eAAqB;AACjD,UAAM,wBAAwB,SAAS,uBAAsB;AAC7D,IAAG,YAAQ,gBAAgB,uBAAuB,GAAG;AACrD,UAAM,cAAc,sBAAsB,YAAY,QAAQ,iCAAiC;AAC/F,gBAAY,cAAc;AAC1B,IAAG,YAAQ,gBAAgB,uBAAuB,GAAG;AACrD,WAAO;EACT;EAEQ,sBAAmB;AACzB,UAAM,gBAAgB,KAAK,QAAQ,YAAY,oBAAoB,mBAAmB;AACtF,kBAAc,aAAa,SAAS,GAAiB,uBAAO,CAAE,EAAE;AAEhE,kBAAc,kBAAkB,KAAK,aAAa;AAClD,kBAAc,kBAAkB,KAAK,WAAW;AAChD,kBAAc,kBAAkB,KAAK,oBAAoB;AAEzD,kBAAc,kBAAkB,IAAO,YAAQ,iBAAgB,CAAE;AAEjE,SAAK,iBACD,IAAO,YAAQ,cAAcE,YAAWF,WAAU,gBAAgB,GAAG,iBAAiB,QAAW,WAAW;AAChH,SAAK,eAAe,iBAAgB,SAAwC,KAAK,uBAAuB,IAAI;AAC5G,kBAAc,kBAAkB,KAAK,cAAc;AAEnD,SAAK,oBACD,IAAO,YAAQ,cAAcE,YAAWF,WAAU,YAAY,GAAG,kBAAkB,QAAW,WAAW;AAC7G,SAAK,kBAAkB,WAAW,KAAK;AACvC,SAAK,kBAAkB,iBAAgB,SAAwC,KAAK,0BAA0B,IAAI;AAClH,kBAAc,kBAAkB,KAAK,iBAAiB;AAEtD,SAAK,WAAW,IAAO,YAAQ,cAAcE,YAAWF,WAAU,WAAW,GAAG,GAAG;AACnF,SAAK,SAAS,iBAAgB,eAA6C,KAAK,WAAW,KAAK,MAAM,KAAK,CAAC;AAC5G,kBAAc,kBAAkB,KAAK,QAAQ;AAC7C,kBAAc,kBAAkB,IAAO,YAAQ,iBAAgB,CAAE;AAEjE,kBAAc,kBAAkB,KAAK,YAAY;EACnD;EAEQ,wBAAqB;AAC3B,SAAK,YAAY,KAAK,IAAI,GAAG,KAAK,YAAY,KAAK,QAAQ;AAC3D,SAAK,WAAW,KAAK;EACvB;EAEQ,2BAAwB;AAC9B,SAAK,YAAY,KAAK,YAAY,KAAK;AACvC,SAAK,WAAW,KAAK;EACvB;EAEQ,oBACJ,aAAyC,UAAiD;AAC5F,UAAM,OAAQ;AACd,QAAI,KAAK,yBAAyB;AAChC,kBAAY,cAAa,EAAG,WAAWE,YAAWF,WAAU,iBAAiB,GAAG,MAAK;AACnF,YAAI,CAAC,KAAK,yBAAyB;AACjC;QACF;AACA,aAAK,KAAK,wBAAwB,kBAAiB,EAAG,kBAAiB;MACzE,GAAG,EAAC,cAAc,qBAAoB,CAAC;AACvC,kBAAY,cAAa,EAAG,WAAWE,YAAWF,WAAU,QAAQ,GAAG,MAAK;AAC1E,YAAI,CAAC,KAAK,yBAAyB;AACjC;QACF;AACA,aAAK,wBAAwB,kBAAiB,EAAG,SAAQ;MAC3D,GAAG,EAAC,cAAc,WAAU,CAAC;IAC/B;EACF;EAEA,cAAW;AACT,SAAK,WAAW,IAAI;EACtB;EAEA,OAAO,cAAgC,MAAM,QAAoB,MAAI;AACnE,QAAI,CAAC,aAAa;AAChB;IACF;AACA,SAAK,cAAc;AACnB,SAAK,QAAQ;AAEb,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,SAAQ,EAAG,OAAM;IACjC;AACA,SAAK,WAAW,KAAK,eAAc;AACnC,SAAK,SAAS,0BAA0B,KAAK,oBAAoB,KAAK,IAAI,CAAC;AAC3E,SAAK,SAAS,SAAQ,EAAG,KAAK,KAAK,OAAO;AAE1C,SAAK,YAAY;AACjB,SAAK,WAAW,IAAI;EACtB;;;EAIQ,SAAS,WAAiB;AAChC,QAAI;AACJ,QAAI;AACF,eAAS,KAAK,MAAM,SAAS;IAC/B,QAAQ;AACN,eAAS;IACX;AACA,WAAO;EACT;EAEQ,WAAW,OAAc;AAC/B,UAAM,MAAM,KAAK,SAAS,KAAK,SAAS,MAAK,CAAE;AAC/C,UAAM,WAAW,KAAK;AACtB,QAAI,YAAsB,KAAK;AAC/B,QAAI,WAAW,KAAK,SAAS,eAAe,KAAK,SAAS,aAAa,KAAK,QAAQ,IAAI;AACxF,eAAW,KAAK,IAAI,UAAU,KAAK,SAAS;AAC5C,SAAK,YAAY,WAAW,CAAC,KAAK,OAAO;AAEzC,QAAI,CAAC,SAAS,KAAK,YAAY,OAAO,KAAK,iBAAiB,YAAY,KAAK,kBAAkB,WAAW;AACxG;IACF;AAEA,QAAI,KAAK,YAAY,OAAO,KAAK,iBAAiB,UAAU;AAC1D,kBAAY;AACZ,WAAK,YAAY;IACnB;AACA,SAAK,UAAU;AACf,SAAK,eAAe;AACpB,SAAK,gBAAgB;AAErB,aAAS,SAA4B,SAAkB,SAAgB;AACrE,WAAK,MAAK;AACV,WAAK,UAAU;AACf,UAAI,eAAqC;AACzC,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AAGvC,cAAM,OAAY,CAAA;AAClB,aAAK,QAAQ,IAAI,IAAI;AACrB,aAAK,KAAK,IAAI,QAAQ,CAAC,EAAE;AACzB,aAAK,aAAa,IAAI,QAAQ,CAAC,EAAE;AACjC,aAAK,OAAO,IAAI,QAAQ,CAAC,EAAE;AAE3B,cAAM,OAAO,IAAI,gBAAgB,IAAI;AACrC,aAAK,SAAS,SAAQ,EAAG,YAAY,IAAI;AACzC,YAAI,KAAK,QAAQ,KAAK,UAAU;AAC9B,yBAAe;QACjB;MACF;AAEA,UAAI,cAAc;AAChB,qBAAa,OAAM;MACrB;AACA,WAAK,eAAe,WAAW,QAAQ,SAAS,CAAC;AACjD,WAAK,kBAAkB,WAAW,OAAO;AACzC,WAAK,aAAa,WAAW,KAAK;AAClC,WAAK,wBAAuB;AAC5B,WAAK,oBAAmB;IAC1B;AAEA,UAAM,cAAc,MAAM,OAAO,YAAY,WAAW,GAAG,IAAI;AAC/D,QAAI,KAAK,WAAW,KAAK,OAAO;AAC9B,WAAK,MAAM,cACP,KAAK,YAAY,KAAK,YAAY,MAAM,KAAK,MAAM,MAAM,aAAa,WAAW,UACjF,SAAS,KAAK,IAAI,CAAC;IACzB,OAAO;AACL,WAAK,MAAM,oBACP,KAAK,YAAY,KAAK,YAAY,MAAM,aAAa,WAAW,UAAU,SAAS,KAAK,IAAI,CAAC;IACnG;AACA,SAAK,KAAK,MAAM,YAAY,KAAK,YAAY,KAAK,WAAW,EAAE,KAAK,KAAK,iBAAiB,KAAK,IAAI,CAAC;EACtG;EAEQ,iBAAiB,UAAkC;AACzD,QAAI,CAAC,KAAK,mBAAmB;AAC3B,WAAK,oBAAoB,KAAK,QAAQ,YAAY,OAAO,0BAA0B;IACrF;AACA,SAAK,kBAAkB,eAAc;AACrC,QAAI,CAAC,UAAU;AACb;IACF;AAEA,UAAM,YAAY;AAElB,UAAM,OAAO,KAAK,kBAAkB,YAAY,MAAM;AACtD,SAAK,cAAcE,YAAWF,WAAU,eAAe,EAAC,KAAK,OAAO,SAAS,YAAY,EAAC,CAAC;AAE3F,QAAI,KAAK,YAAY,eAAe;AAClC,WAAK,eAAe;AACpB,WAAK,eAAeE,YAAWF,WAAU,oBAAoB,EAAC,KAAK,OAAO,SAAS,iBAAiB,EAAC,CAAC;IACxG;EACF;EAEQ,sBAAmB;EAE3B;EAEQ,uBAAoB;AAC1B,SAAK,WAAW,IAAI;EACtB;EAEQ,MAAM,qBAAkB;AAC9B,UAAM,KAAK,MAAS,YAAQ,cAAc,KACtCE,YAAWF,WAAU,wBAAwB,GAC7CE,YAAWF,WAAU,yBAAyB,EAAC,KAAK,KAAK,YAAY,KAAI,CAAC,GAAG,KAAK,SAClF,EAAC,cAAc,kCAAiC,CAAC;AACrD,QAAI,IAAI;AACN,WAAK,YAAY,WAAW,KAAK;AACjC,WAAK,sBAAsB;AAC3B,YAAM,KAAK,MAAM,iBAAiB,KAAK,YAAY,KAAK,YAAY,IAAI;AACxE,WAAK,sBAAsB;AAC3B,WAAK,YAAY,WAAW,IAAI;AAChC,WAAK,WAAW,IAAI;IACtB;EACF;EAEA,mBAAgB;AAEd,QAAI,KAAK,qBAAqB;AAC5B;IACF;AACA,SAAK,aAAa,WAAW,IAAI;EACnC;EAEQ,MAAM,gBAAgB,KAAkC;AAC9D,UAAM,EAAC,WAAU,IAAI,MAAM,IAAI;MAAiB;;IAA2B;AAC3E,QAAI,CAAC,YAAY;AACf,aAAO,CAAA;IACT;AACA,UAAM,SAAsB,CAAA;AAC5B,UAAM,mBAAmB,WAAW,OAAO,cAAY,CAAC,MAAM,OAAO,SAAS,IAAI,CAAC,CAAC,EAAE,IAAI,OAAM,aAAW;AACzG,YAAM,QAAQ,SAAS;AACvB,UAAI,CAAC,OAAO;AACV;MACF;AACA,UAAI;AACJ,UAAI,MAAM,YAAY,SAAS;AAC7B,wBAAgB,MAAM,KAAK,gBAAgB,KAAK;MAClD,OAAO;AACL,wBAAgB,MAAM;MACxB;AACA,aAAO,OAAO,SAAS,IAAI,CAAC,IAAI;IAClC,CAAC;AACD,UAAM,QAAQ,IAAI,gBAAgB;AAClC,WAAO;EACT;EAEQ,MAAM,oBAAoB,MAAkD;AAClF,QAAI,CAAC,MAAM;AACT,aAAO,KAAK,SAAS;AACrB,UAAI,CAAC,MAAM;AACT;MACF;IACF;AACA,UAAM,MAAO,KAAK,UAAU,KAAK,KAAK,aAAa,IAAI,KAAK,KAAK;AACjE,UAAM,WAAwB,IAAI,YAAY,UAAU,MAAM,KAAK,gBAAgB,GAAG,IAAI,IAAI;AAC9F,UAAM,KAAK,MAAM,cAAc,KAAK,YAAY,KAAK,YAAY,MAAM,OAAO,YAAY,KAAK,QAAQ,CAAC;AACxG,SAAK,2BAA0B;EACjC;EAEA,QAAK;AACH,SAAK,SAAS,SAAQ,EAAG,eAAc;AACvC,SAAK,UAAU,CAAA;EACjB;EAEQ,0BAAuB;AAC7B,UAAM,QAAQ,CAAC,KAAK,YAAY,KAAK,SAAS,SAAQ,EAAG,SAAS,WAAW;AAC7E,SAAK,qBAAqB,WAAW,CAAC,SAAS,KAAK,SAAS,iBAAiB,IAAI;EACpF;;AAGI,IAAO,kBAAP,cAAwC,mBAAS,aAAqB;EACjE;EACT;;EAEA,YAAY,MAAyB;AACnC,UAAM,MAAM,KAAK;AACjB,SAAK,aAAa;AAClB,SAAK,0BAA0B;EACjC;EAES,WAAW,kBAAwB;AAC1C,UAAM,OAAO,MAAM,WAAW,gBAAgB;AAC9C,UAAM,QAAS,KAAK,KAAK,gBAAgB;AAEzC,YAAQ,kBAAkB;MACxB,KAAK,SAAS;AACZ,aAAK,eAAc;AACnB,cAAM,oBACO,iCAAwB,wBAAwB;UACrD;UAAO;UAA2B;UAAsB;;QAAmB;AACnF,aAAK,YAAY,kBAAkB,OAAO;AAC1C,aAAK,0BAA0B;AAC/B;MACF;MACA,KAAK;MACL,KAAK,eAAe;AAClB,aAAK,eAAc;AACnB,cAAM,gBAAyB,iCAAwB,wBAAwB;UAC3E;UAAO;UAA2B;UAAsB;;QAAmB;AAC/E,aAAK,YAAY,aAAa;AAC9B;MACF;IACF;AAEA,WAAO;EACT;;;;AExrBF;;;;AAIA,YAAYG,UAAS;AAIf,IAAO,4BAAP,cAA6C,cAAS,SAAoB;EAE7D;EACT;EAER,YAAY,QAAyB;AACnC,UAAM,MAAM;AACZ,WAAO,0BAA0B,IAAI;AACrC,SAAK,eAAe,OAAO,aAAY;AACvC,SAAK,UAAU;EACjB;EAEA,SAAM;AACJ,QAAI,KAAK,SAAS;AAChB;IACF;AACA,SAAK,KAAK,aAAa,gCAAgC,EAAC,QAAQ,KAAI,CAAC;EACvE;EAEA,UAAO;AACL,QAAI,CAAC,KAAK,SAAS;AACjB;IACF;AACA,SAAK,KAAK,aAAa,gCAAgC,EAAC,QAAQ,MAAK,CAAC;EACxE;EAEA,sBAAsB,OAAkD;AACtE,SAAK,yBAAwB,uBAA+B,KAAK;EACnE;EAEA,sCAAsC,QAAmE;EACzG;EAEA,qBAAqB,QAAkD;EACvE;EAEA,wBAAwB,QAAqD;EAC7E;EAEA,kCAAkC,QAA+D;EACjG;EAEA,0CAA0C,QAAuE;EAEjH;EAEA,wBAAwB,QAAqD;EAC7E;EAEA,2BAA2B,QAAwD;EACnF;EAEA,sBAAsB,QAAmD;EACzE;EAEA,+CACI,QAA4E;EAChF;EAEA,8BAA8B,QAA2D;EACzF;EAEA,qBAAqB,QAAkD;EACvE;EAEA,qCAAqC,QAAkE;EACvG;EACA,+BAA+B,QAA4D;EAC3F;EACA,2CAA2C,QAAwE;EAEnH;;AAGE,cAAS,SAAS,SAClB,2BAA2B,EAAC,cAAY,MAAiC,WAAW,MAAK,CAAC;;;ACnF9F;;;oBAAAC;;AAIA,YAAYC,WAAU;AACtB,YAAYC,YAAU;AAEtB,YAAYC,UAAS;AAErB,YAAYC,iBAAgB;;;ACT5B;;;;AAKA,YAAYC,YAAU;AAEtB,YAAY,iBAAiB;AAC7B,YAAYC,SAAQ;AACpB,YAAYC,oBAAmB;AAE/B,YAAYC,4BAA2B;;;ACNvC,IAAO,uCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAUC,YAAY,QAAQ,gCAAgC,CAAC;;;ADDrE,IAAMC,aAAY;;;;;;;;EAQhB,iBAAiB;;;;;;;;EAQjB,oBAAoB;;;;;EAKpB,iBAAiB;;;;;;;;EAQjB,mBAAmB;;AAErB,IAAMC,QAAY,YAAK,kBAAkB,kDAAkDD,UAAS;AACpG,IAAME,cAAkB,YAAK,mBAAmB,KAAK,QAAWD,KAAI;AAMpE,SAAS,YACL,GAAgD,GAA8C;AAChG,SAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,SAAS,EAAE,QAAQ,EAAE,gBAAgB,EAAE,eAAe,EAAE,SAAS,EAAE;AAChH;AAEM,IAAO,2BAAP,cAA2C,gBAAY,YAAW;EACrD,oBAAoB,IAA0B,+CAAwB,wBAAuB;EACtG,SAAwD,CAAA;EACxD;EACA;EACA;EAER,YAAY,eAAyC;AACnD;;MAAuB;;MAA8B;IAAI;AACzD,SAAK,QAAQ,aAAa,SAAS,GAAiB,oBAAK,iBAAiB,CAAC,EAAE;AAC7E,SAAK,gBAAgB;AAErB,UAAM,WAAW,IAAO,WAAO,KAAI;AACnC,SAAK,gBACD,IAAO,gBAAY,YAAYC,YAAWF,WAAU,eAAe,GAAGE,YAAWF,WAAU,kBAAkB,CAAC;AAClH,SAAK,aACD,IAAO,gBAAY,YAAYE,YAAWF,WAAU,eAAe,GAAGE,YAAWF,WAAU,iBAAiB,CAAC;AAEjH,aAAS,eAAe,GAAG,GAAG;AAC9B,SAAK,cAAc,QAAQ;AAC3B,SAAK,cAAc,eAAe,GAAG,EAAE;AACvC,SAAK,iBAAiB,KAAK,aAAa;AACxC,SAAK,WAAW,eAAe,GAAG,EAAE;AACpC,SAAK,cAAc,eAAe,aAAa,SAAS,GAAiB,oBAAK,SAAS,EAAE,MAAM,EAAC,QAAQ,KAAI,CAAC,CAAC,EAAE;AAChH,SAAK,WAAW,eAAe,aAAa,SAAS,GAAiB,oBAAK,SAAS,EAAE,MAAM,EAAC,QAAQ,KAAI,CAAC,CAAC,EAAE;AAC7G,SAAK,YAAW;AAEhB,aAAS,eAAe,YAAY,KAAK,iBAAiB;AAC1D,SAAK,kBAAkB,iBAAiB,UAAU,KAAK,QAAQ,KAAK,IAAI,CAAC;EAC3E;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,UAAM,aAAa,KAAK,WAAU;AAClC,QAAI,YAAY;AACd,iBAAW,oBAAoB,oCAA8B;IAC/D;EACF;EAEA,SAAS,OAAkD;AACzD,QAAI,KAAK,SAAQ,MAAE,QAAmC;AACpD,WAAK,SAAQ;IACf;AAEA,UAAM,aAAa,KAAK,OAAO,KAAK,OAAK,YAAY,GAAG,KAAK,CAAC;AAC9D,QAAI,CAAC,YAAY;AACf,WAAK,OAAO,KAAK,KAAK;AACtB,WAAK,kBAAkB,OAAO,KAAK;IACrC;EACF;EAEA,cAAW;AACT,SAAK,SAAS,CAAA;AACd,SAAK,kBAAkB,OAAO,KAAK;AACnC,SAAK,iBAAiB,KAAK,aAAa;AACxC,SAAK,yBAAwB;EAC/B;EAEQ,MAAM,QAAQ,OAAY;AAChC,UAAM,eAAe;AACrB,UAAM,EAAC,aAAa,MAAM,MAAM,UAAS,IAAI,aAAa;AAE1D,QAAI,UAAU;AAGd,QAAI,cAAS,mBACT,cAAS,sBACT,cAAS,yBAAqE;AAChF,gBAAU,MAAM,KAAK,cAAc,wBAAwB,aAAa,IAAI;IAC9E;AACA,QAAI,SAAS;AACX,YAAM,WAAW,MAAkB,qBAAS,SAAS,WAAW,KAAK,UAAU,OAAO,CAAC;AACvF,gBAAU,eAAe,GAAG,EAAE;AAC9B,UAAI,UAAU;AACZ,iBAAS,eAAe,aAAa,SAAS,GAAiB,oBAAK,SAAS,EAAE,MAAM,EAAC,QAAQ,KAAI,CAAC,CAAC,EAAE;AACtG,aAAK,iBAAiB,QAAQ;MAChC;IACF,OAAO;AACL,WAAK,iBAAiB,KAAK,UAAU;IACvC;AACA,SAAK,yBAAwB;EAC/B;EAEA,sBAAmB;AACjB,WAAO,KAAK;EACd;EAEA,iCAA8B;AAC5B,WAAO,KAAK;EACd;EAEA,2BAAwB;EACxB;;;;ADtIF,IAAMG,aAAY;;;;;;;EAOhB,gBAAgB;;AAElB,IAAMC,QAAY,YAAK,kBAAkB,kDAAkDD,UAAS;AAC7F,IAAME,cAAkB,YAAK,mBAAmB,KAAK,QAAWD,KAAI;AAErE,IAAO,2BAAP,cAAwC,4BAA2B;EAC/D;EAER,YAAY,cAA4B;AACtC,UAAM,cAAcC,YAAWF,WAAU,cAAc,GAAG,OAAO,iBAAiB;AAClF,UAAM,oBAA+B,iBAAK,OAAO,UAAU;AAC3D,SAAK,gBAAgB,CAAC,iBAAiB,CAAC;AACxC,SAAK,OAAO,IAAI,yBAAyB,IAAI;EAC/C;EAEA,IAAa,UAAO;AAClB,WAAO;EACT;EAEA,MAAM,wBAAwB,OAAe,MAAY;AACvD,UAAM,aAAiB,mBAAc,cAAc,SAAQ,EAAG,kBAAiB;AAC/E,QAAI,CAAC,YAAY;AACf,aAAO;IACT;AACA,UAAM,WAAW,MAAM,WAAW,aAAY,EAAG,+BAA+B,EAAC,aAAa,OAAO,KAAI,CAAC;AAC1G,WAAO,SAAS;EAClB;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,iBAAiB;AAC7C,WAAO;EACT;EAEA,SAAS,OAAkD;AACzD,SAAK,KAAK,SAAS,KAAK;EAC1B;EAEA,cAAW;AACT,SAAK,KAAK,YAAW;EACvB;;;;AG/DF;;;;;AAKA,YAAYG,aAAY;AACxB,YAAYC,YAAU;AACtB,YAAYC,WAAS;AAErB,YAAYC,iBAAgB;AAC5B,YAAYC,SAAQ;;;ACLpB,IAAO,sCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAwEC,YAAY,QAAQ,+BAA+B,CAAC;;;AD/DpE,IAAMC,aAAY;;;;EAIhB,KAAK;;;;EAIL,IAAI;;;;EAIJ,4BAA4B;;;;EAI5B,UAAU;;;;EAIV,KAAK;;;;EAIL,UAAU;;;;EAIV,aAAa;;;;EAIb,gBAAgB;;;;EAIhB,+BAA+B;;;;EAI/B,oBAAoB;;;;EAIpB,QAAQ;;;;EAIR,QAAQ;;;;EAIR,MAAM;;;;EAIN,mBAAmB;;;;EAInB,2BAA2B;;;;EAI3B,WAAW;;;;EAIX,SAAS;;;;;EAKT,aAAa;;AAEf,IAAMC,QAAY,YAAK,kBAAkB,iDAAiDD,UAAS;AACnG,IAAME,cAAkB,YAAK,mBAAmB,KAAK,QAAWD,KAAI;AACpE,IAAM,iBAAiB,CAAC,MACpB,IAAIC,YAAWF,WAAU,GAAG,IAAIE,YAAWF,WAAU,EAAE;AAE3D,SAAS,YAAY,UAAkB,OAAe,cAAwC;AAC5F,QAAM,OAAkB,iBAAK,OAAO,UAAU,yBAAyB;AACvE,QAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,EAAG,YAAQ,QAAQ,QAAQ,QAAQ,KAAK;AACxC,SAAO,UAAU,IAAI,iBAAiB,cAAc,aAAa;AACjE,SAAO,YAAY,IAAI;AACvB,SAAO,iBAAiB,SAAS,WAAQ;AACvC,UAAM,QAAQ,IAAI;AAClB,SAAK,aAAY;EACnB,CAAC;AACD,SAAO;AACT;AAEA,eAAe,+BAA+B,QACS;AACrD,MAAI,cAA6G;AACjH,MAAI,kBAAsB,wBAAkB,mBAAmB;AAC7D,kBAAc;EAChB,WAAW,QAAQ;AACjB,kBAAkB,mBAAa,aAAa,SAAQ,EAAG,SAAS,MAAM;EACxE;AACA,MAAI,CAAC,aAAa;AAChB,WAAO;EACT;AACA,QAAM,oBAAoB,MAAM,YAAY,0BAAyB;AACrE,MAAI,CAAC,mBAAmB;AACtB,WAAO;EACT;AACA,QAAM,cAAc,YAChB,eAAeE,YAAWF,WAAU,0BAA0B,GAAG,MAAa,iBAAS,OAAO,iBAAiB,CAAC;AACpH,QAAM,QAAQ,SAAS,cAAc,MAAM;AAC3C,QAAM,cAAc,IAAI,kBAAkB,SAAQ,EAAG,kBAAiB,CAAE;AACxE,cAAY,aAAa,OAAO,YAAY,UAAU;AACtD,cAAY,iBAAiB,cAAc,MAAK;AAC9C,QAAI,aAAa;AACf,WAAK,YAAY,UAAS;IAC5B;EACF,CAAC;AACD,cAAY,iBAAiB,cAAc,MAAK;AAC9C,IAAI,mBAAa,aAAa,qBAAoB;EACpD,CAAC;AACD,SAAO;AACT;AAEM,IAAO,0BAAP,cAA0C,oBAAgB,gBAAe;EACrE;EACA;EACS;EACA;EACjB;EACiB;EACA;EACT;EAER,YAAY,YAAwC,gBAAuB;AACzE,UAAK;AACL,SAAK,oBAAoB,mCAA6B;AACtD,SAAK,aAAa;AAClB,SAAK,iBAAiB;AAEtB,SAAK,eAAe,UAAU,IAAI,yBAAyB;AAE3D,SAAK,aAAa,IAAO,eAAW,WAAW,KAAK,WAAU,CAAE;AAEhE,SAAK,WAAW,KAAK,KAAK,cAAc;AACxC,SAAK,WAAW,oBAAoB,mCAA6B;AACjE,SAAK,WAAW,QAAQ,UAAU,IAAI,gCAAgC;AAEtE,SAAK,kBAAkB,KAAK,WAAW,cAAcE,YAAWF,WAAU,QAAQ,CAAC;AACnF,SAAK,iBACD,KAAK,gBAAgB,YAAYE,YAAWF,WAAU,GAAG,CAAC,EAAE,YAAY,OAAO,eAAe;AAElG,SAAK,kBAAkB,KAAK,WAAW,cAAcE,YAAWF,WAAU,QAAQ,CAAC;AACnF,SAAK,qBAAqB,KAAK,gBAAgB,YAAYE,YAAWF,WAAU,WAAW,CAAC;AAC5F,SAAK,gBAAgB,gBAAgBE,YAAWF,WAAU,WAAW,GAAG,KAAK;AAC7E,SAAK,oBAAoB,KAAK,gBAAgB,YAAYE,YAAWF,WAAU,cAAc,CAAC;AAC9F,IAAG,YAAQ,QAAQ,QAAQ,KAAK,mBAAmBE,YAAWF,WAAU,6BAA6B,CAAC;AACtG,SAAK,OAAM;EACb;EAES,MAAM,WAAQ;AACrB,SAAK,WAAW,SAAS,KAAK,WAAU,CAAE;AAC1C,SAAK,eAAe,cAAc,KAAK,WAAW;AAClD,SAAK,eAAe,QAAQ,KAAK,WAAW;AAC5C,SAAK,kBAAkB,cAAc,eAAe,KAAK,WAAW,eAAe;AACnF,SAAK,KAAK,wBAAuB;EACnC;EAEA,MAAM,0BAAuB;AAC3B,SAAK,mBAAmB,eAAc;AACtC,UAAM,cAAc,MAAM,+BAA+B,KAAK,WAAW,aAAa;AACtF,QAAI,aAAa;AACf,WAAK,mBAAmB,OAAO,WAAW;AAC1C,WAAK,gBAAgB,gBAAgBE,YAAWF,WAAU,WAAW,GAAG,IAAI;AAC5E;IACF;AACA,SAAK,gBAAgB,gBAAgBE,YAAWF,WAAU,WAAW,GAAG,KAAK;EAC/E;EAEA,aAAU;AACR,QAAI,QAAQ,KAAK,WAAW,SAASE,YAAWF,WAAU,kBAAkB;AAC5E,QAAI,KAAK,gBAAgB;AACvB,eAAS,KAAKE,YAAWF,WAAU,MAAM,CAAC;IAC5C;AACA,WAAO;EACT;EAEA,kBAAkB,gBAAuB;AACvC,SAAK,iBAAiB;EACxB;EAEA,cAAc,YAAsC;AAClD,SAAK,aAAa;EACpB;;AAGI,IAAO,oBAAP,cAAoC,oBAAgB,gBAAe;EACtD;EACA;EACA;EACA;EACA;EAEjB,YAAY,YAAsC;AAChD,UAAK;AACL,SAAK,oBAAoB,mCAA6B;AACtD,SAAK,aAAa;AAElB,SAAK,eAAe,UAAU,IAAI,yBAAyB;AAE3D,SAAK,aACD,IAAO,eAAW,WAAW,KAAK,WAAW,SAAS,KAAK,WAAW,OAAOE,YAAWF,WAAU,MAAM,CAAC;AAE7G,SAAK,WAAW,KAAK,KAAK,cAAc;AACxC,SAAK,WAAW,oBAAoB,mCAA6B;AACjE,SAAK,WAAW,QAAQ,UAAU,IAAI,gCAAgC;AAEtE,SAAK,kBAAkB,KAAK,WAAW,cAAcE,YAAWF,WAAU,QAAQ,CAAC;AACnF,UAAM,gBACF,KAAK,gBAAgB,YAAYE,YAAWF,WAAU,GAAG,CAAC,EAAE,YAAY,OAAO,eAAe;AAClG,kBAAc,cAAc,KAAK,WAAW;AAC5C,kBAAc,QAAQ,KAAK,WAAW;AACtC,UAAM,aAAa,KAAK,gBAAgB,YAAYE,YAAWF,WAAU,IAAI,CAAC;AAC9E,eAAW,cAAc,KAAK,mBAAmB,KAAK,WAAW,IAAI;AAErE,SAAK,mBAAmB,KAAK,WAAW,cAAcE,YAAWF,WAAU,iBAAiB,CAAC;AAC7F,SAAK,aAAa,KAAK,iBAAiB,YAAYE,YAAWF,WAAU,yBAAyB,CAAC;AACnG,SAAK,OAAM;EACb;EAEA,mBAAmB,MAAY;AAC7B,QAAI,SAAS,UAAU;AACrB,aAAOE,YAAWF,WAAU,SAAS;IACvC;AACA,QAAI,SAAS,kBAAkB;AAC7B,aAAY,YAAK,aAAa,gBAAgB;IAChD;AACA,WAAOE,YAAWF,WAAU,OAAO;EACrC;EAEQ,MAAM,uBAAoB;AAChC,UAAM,SAAa,oBAAc,cAAc,SAAQ,EAAG,WAAW,KAAK,WAAW,QAAQ;AAC7F,QAAI,CAAC,QAAQ;AACX;IACF;AACA,UAAM,QAAQ,OAAO,MAAU,qBAAe,cAAc;AAC5D,UAAM,OAAO,SAAS,MAAM,MAAM,2BAA2B,IAAI;AACjE,QAAI,CAAC,MAAM;AACT;IACF;AACA,UAAM,gBACF,CAAC,UACc,UAAK;AACxB,SAAK,sBAAsB,KAAK,YAAY,eAAe,KAAK,IAAI;EACtE;EAEQ,sBACJ,OACA,WAEA,MACS;AACX,QAAI,CAAC,MAAM;AACT,YAAM,cAAc;AACpB;IACF;AACA,UAAM,UAAU,UAAU,KAAK,KAAK;AACpC,UAAM,cAAc,UAAU,KAAK,QAAQ,KAAK;AAChD,QAAI,CAAC,WAAW,UAAU,KAAK,eAAe,GAAG;AAC/C,YAAM,aAAa,SAAS,cAAc,MAAM;AAChD,iBAAW,UAAU,IAAI,gBAAgB;AACzC,iBAAW,cAAc;AACzB,YAAM,YAAY,UAAU;IAC9B;AACA,UAAM,WAAW,UAAU,KAAK,oBAAoB,KAAK;AACzD,QAAI,UAAU;AACZ,YAAM,0BAA0B,MAAM,YAAY,QAAQ,aAAa;AACvE,8BAAwB,cAAcE,YAAWF,WAAU,WAAW;AACtE,YAAM,wBAAwB,MAAM,YAAY,MAAM;AACtD,4BAAsB,cAAc;IACtC;EACF;EAES,MAAM,WAAQ;AACrB,UAAM,KAAK,qBAAoB;EACjC;;;;AE3SF;;;;;AAIA,YAAYG,YAAU;AAGtB,YAAYC,iBAAgB;;;ACP5B;;;;;;;AAMA,OAAO;AAEP,YAAYC,aAAY;AACxB,YAAYC,YAAU;AACtB,YAAYC,eAAc;AAC1B,SAAQ,4BAAAC,iCAA+B;AACvC,YAAYC,WAAS;AAErB,YAAYC,cAAa;AAGzB,YAAYC,SAAQ;AACpB,SAAQ,QAAAC,OAAM,cAAa;AAC3B,YAAYC,oBAAmB;AAE/B,YAAY,0BAA0B;;;AChBtC,YAAYC,YAAU;AAEtB,SAAQ,gCAA+B;AACvC,YAAYC,WAAS;AAErB,YAAYC,eAAc;AAE1B,IAAMC,aAAY;;;;EAIhB,kCAAkC;;;;EAIlC,+BAA+B;;;;EAI/B,gCAAgC;;;;EAIhC,wBAAwB;;;;EAIxB,sBAAsB;;;;EAItB,8BACI;;;;EAIJ,wBACI;;;;EAIJ,iBAAiB;;;;EAIjB,+CACI;;;;EAIJ,qCACI;;;;EAIJ,kCACI;;;;EAIJ,oCACI;;;;EAIJ,+CACI;;;;EAIJ,6DACI;;;;EAIJ,qCAAqC;;;;EAIrC,mCACI;;;;EAIJ,yCACI;;;;EAIJ,+BACI;;;;EAIJ,2BACI;;;;EAIJ,4BAA4B;;;;EAI5B,iCACI;;;;EAIJ,sCACI;;;;EAIJ,wCACI;;;;EAIJ,uCAAuC;;;;EAIvC,yCAAyC;;;;EAKzC,kCACI;;;;EAIJ,2CACI;;;;EAIJ,6CACI;;;;EAIJ,mDACI;;;;;EAKJ,sCACI;;;;EAIJ,4CAA4C;;;;EAI5C,2CAA2C;;;;EAI3C,8BACI;;;;EAIJ,6CACI;;;;EAIJ,yCAAyC;;;;EAIzC,mDAAmD;;;;EAInD,yCAAyC;;;;EAIzC,wCACI;;;;EAIJ,4CAA4C;;;;EAI5C,qCAAqC;;;;EAIrC,gDACI;;;;EAIJ,kCAAkC;;;;EAIlC,yCACI;;;;EAIJ,yCACI;;;;EAIJ,sCACI;;;;EAIJ,qCACI;;;;EAIJ,yCACI;;;;EAIJ,0DACI;;;;EAIJ,4DACI;;;;EAIJ,4EACI;;;;EAIJ,8EACI;;;;EAIJ,2DACI;;;;EAIJ,4DAA4D;;;;EAI5D,2DAA2D;;;;EAI3D,wDACI;;;;EAIJ,wCACI;;;;EAIJ,yCACI;;;;EAIJ,wDACI;;;;EAIJ,4DACI;;;;EAIJ,8DAA8D;;;;EAI9D,8EACI;;;;EAIJ,gFACI;;;;EAIJ,6CACI;;;;EAIJ,kDACI;;;;EAIJ,oDACI;;;;EAIJ,4CACI;;;;EAIJ,4DACI;;;;EAIJ,4DACI;;;;EAIJ,+DACI;;;;EAIJ,+DACI;;;;EAIJ,oDACI;;;;EAIJ,8DACI;;;;EAIJ,kDACI;;;;EAIJ,8CACI;;;;EAIJ,gDACI;;;;EAIJ,6CACI;;;;EAIJ,kCAAkC;;;;EAIlC,yCAAyC;;;;EAKzC,oBAAoB;;;;EAIpB,eAAe;;;;EAIf,eAAe;;;;EAIf,aAAa;;;;EAIb,eAAe;;;;EAIf,eAAe;;AAGjB,IAAMC,QAAY,YAAK,kBAAkB,gEAAgED,UAAS;AAClH,IAAM,iBAAsB,YAAK,iCAAiC,KAAK,QAAWC,KAAI;AACtF,IAAMC,cAAkB,YAAK,mBAAmB,KAAK,QAAWD,KAAI;AAE7D,IAAM,4BAA6F;EACxG,kCAAkC,EAAC,MAAM,eAAeD,WAAU,gCAAgC,EAAC;EACnG,+BAA+B,EAAC,MAAM,eAAeA,WAAU,6BAA6B,EAAC;EAC7F,gCAAgC,EAAC,MAAM,eAAeA,WAAU,8BAA8B,EAAC;EAC/F,wBAAwB,EAAC,MAAM,eAAeA,WAAU,sBAAsB,EAAC;EAC/E,sBAAsB,EAAC,MAAM,eAAeA,WAAU,oBAAoB,EAAC;EAC3E,8BAA8B,EAAC,MAAM,eAAeA,WAAU,4BAA4B,EAAC;EAC3F,wBAAwB,EAAC,MAAM,eAAeA,WAAU,sBAAsB,EAAC;EAC/E,iBAAiB,EAAC,MAAM,eAAeA,WAAU,eAAe,EAAC;EACjE,+CACI,EAAC,MAAM,eAAeA,WAAU,6CAA6C,EAAC;EAClF,qCAAqC,EAAC,MAAM,eAAeA,WAAU,mCAAmC,EAAC;EACzG,kCAAkC,EAAC,MAAM,eAAeA,WAAU,gCAAgC,EAAC;EACnG,oCAAoC,EAAC,MAAM,eAAeA,WAAU,kCAAkC,EAAC;EACvG,+CACI,EAAC,MAAM,eAAeA,WAAU,6CAA6C,EAAC;EAClF,6DACI,EAAC,MAAM,eAAeA,WAAU,2DAA2D,EAAC;EAChG,qCAAqC,EAAC,MAAM,eAAeA,WAAU,mCAAmC,EAAC;EACzG,mCAAmC,EAAC,MAAM,eAAeA,WAAU,iCAAiC,EAAC;EACrG,yCAAyC,EAAC,MAAM,eAAeA,WAAU,uCAAuC,EAAC;EACjH,+BAA+B,EAAC,MAAM,eAAeA,WAAU,6BAA6B,EAAC;EAC7F,2BAA2B,EAAC,MAAM,eAAeA,WAAU,yBAAyB,EAAC;EACrF,4BAA4B,EAAC,MAAM,eAAeA,WAAU,0BAA0B,EAAC;EACvF,iCAAiC,EAAC,MAAM,eAAeA,WAAU,+BAA+B,EAAC;EACjG,sCAAsC,EAAC,MAAM,eAAeA,WAAU,oCAAoC,EAAC;EAC3G,wCAAwC,EAAC,MAAM,eAAeA,WAAU,sCAAsC,EAAC;EAC/G,uCAAuC,EAAC,MAAM,eAAeA,WAAU,qCAAqC,EAAC;EAC7G,uDAAuD,EAAC,MAAM,MAAW,YAAK,aAAa,SAAS,EAAC;EACrG,8CAA8C,EAAC,MAAM,MAAW,YAAK,aAAa,SAAS,EAAC;EAC5F,4CAA4C,EAAC,MAAM,MAAW,YAAK,aAAa,SAAS,EAAC;EAC1F,yCAAyC,EAAC,MAAM,eAAeA,WAAU,uCAAuC,EAAC;;AAiR7G,SAAU,qBACZ,SAAmCG,UAAwC;AAC7E,QAAM,MAAM,QAAQ,QAAQ,SAAYA,WAAU,QAAQ;AAC1D,SAAgB,wBAAc,kBAAkB,GAAG;AACrD;AAEM,SAAU,0BACZ,SAAmCA,UAAwC;AAC7E,MAAI,CAAC,QAAQ,gBAAgB,QAAQ,KAAK;AACxC,WAAO,MAAM,QAAQ,MAAM;EAC7B;AACA,SAAO,qBAAqB,SAASA,QAAO;AAC9C;;;ACptBA,IAAO,6BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA6BC,YAAY,QAAQ,iCAAiC,CAAC;;;AC7BtE,IAAO,qCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAkBC,YAAY,QAAQ,yCAAyC,CAAC;;;AHI9E,IAAMC,cAAY;;;;EAIhB,uBAAuB;;;;EAIvB,mBAAmB;;;;;EAKnB,YAAY;;;;EAIZ,eAAe;;;;EAIf,iBAAiB;;;;EAIjB,0BAA0B;;;;EAI1B,oBAAoB;;;;EAIpB,eAAe;;;;EAIf,eAAe;;;;EAIf,aAAa;;;;EAIb,eAAe;;;;EAIf,eAAe;;;;EAIf,aAAa;;;;EAIb,iBAAiB;;;;EAIjB,kBAAkB;;;;EAIlB,oBAAoB;;;;EAIpB,qBAAqB;;;;EAIrB,WAAW;;AAEb,IAAMC,SAAY,YAAK,kBAAkB,mDAAmDD,WAAS;AACrG,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAEpE,IAAM,8BACF;AAIJ,IAAM,mBAAmB,OAAO,kBAAkB;AAElD,IAAM,oBAAN,MAAuB;EACrB,OAAO,OAAO,QAA4C;AAExD,YAAQ,QAAQ;MACd,KAAA;AACE,eAAOC,aAAWF,YAAU,kBAAkB;MAChD,KAAA;AACE,eAAOE,aAAWF,YAAU,aAAa;MAC3C,KAAA;AACE,eAAOE,aAAWF,YAAU,aAAa;MAC3C,KAAA;AACE,eAAOE,aAAWF,YAAU,WAAW;MACzC,KAAA;AACE,eAAOE,aAAWF,YAAU,aAAa;MAC3C,KAAA;AACE,eAAOE,aAAWF,YAAU,aAAa;;;;;;MAM3C,KAAA;AACE,eAAY,YAAK,aAAa,gBAAgB;IAClD;EACF;EAEA,OAAO,sBAAsB,gBAAiE;AAC5F,UAAM,OAAO;;;;;;;;AASb,WAAO,KAAK,OAAO,aAAW,gBAAgB,IAAI,MAAM,KAAK,KAAK,CAAC,EAC9D,IAAI,aAAW,gBAAgB,IAAI,MAAM,KAAK,KAAK,MAAM,KAAK,OAAO,MAAM,CAAC,EAC5E,KAAK,IAAI,EACT,kBAAiB;EACxB;;EAGA,OAAO,SAAS,EAAC,UAAS,GAA2B;AACnD,YAAQ,WAAW;MACjB,KAAK;AACH,eAAOE,aAAWF,YAAU,aAAa;MAC3C,KAAA;MACA,KAAA;AACE,eAAOE,aAAWF,YAAU,eAAe;MAC7C,KAAA;AACE,eAAOE,aAAWF,YAAU,wBAAwB;IACxD;EACF;;EAGA,OAAO,SAAS,SAAiC;AAC/C,QAAI,QAAQ,kBAAkB,QAAW;AACvC,aAAY,YAAK,aAAa,UAAU;IAC1C;AAEA,QAAI,QAAQ,QAAQ,QAAW;AAC7B,aAAO,QAAQ;IACjB;AAEA,UAAM,IAAI,MAAM,aAAa;EAC/B;EAEA,OAAO,eAAe,IAA8B;AAElD,UAAM,QAAQ,GAAG,QAAQ,GAAG;AAC5B,WAAO,UAAU,KAAK,KAAK,GAAG,MAAM,QAAQ,CAAC;EAC/C;;AAGF,SAAS,UAAO;AACd,SAAW,oBAAc,cAAc,SAAQ,EAAG,YAAW,GAAI,aAAY,KACxE;AACP;AAEM,IAAO,wBAAP,cAAwC,WAAO,KAAI;EAC/C;EACA,mBAAoD;EAE3C;EACA,eAAe,IAAI,uBAAsB;EACzC;EACA,cAAc,IAAyB,iCAAY,YAAW;EAC9D,iBAAiB,IAAyB,wCAAmB,mBAAkB;EAExF,oBAA2B,iBAAS,SAAS,SAAQ,EAAG,cAAc,4BAA4B,EAAE,IAAG;EAE/G,YAAY,OAA0C;AACpD,UAAM,EAAC,cAAc,KAAI,CAAC;AAC1B,SAAK,oBAAoB,yBAAmB,0BAAoB;AAEhE,SAAK,QAAQ;AACb,IAAI,oBAAc,cAAc,SAAQ,EAAG,uBAAuB,KAAK,cAAc,KAAK,IAAI,CAAC;AAC/F,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,sBAAgB,iBAAe,gBAA4C,KAAK,QAAQ,MAC5F,EAAC,QAAQ,KAAI,CAAC;AAClB,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,sBAAgB,iBAAe,mBACnC,KAAK,aAAa,mBAAmB,KAAK,cAAc,EAAC,QAAQ,KAAI,CAAC;AAc1E,SAAK,oBAAoB,SAAS,cAAc,KAAK;AACrD,SAAK,kBAAkB,UAAU,IAAI,WAAW;AAChD,SAAK,eAAe,aAAa,KAAK,mBAAmB,KAAK,eAAe,UAAU;AACvF,SAAK,aAAa,KAAK,KAAK,iBAAiB;AAE7C,SAAK,YAAY,iBAAiB,UAAU,KAAK,0BAA0B,KAAK,IAAI,CAAC;AACrF,UAAM,sBAAsB,MAAW;AACrC,WAAK,oBAAoB,CAAC,KAAK;AAC/B,WAAK,qBAAoB;IAC3B;AAGA,WACIG;;6CAEqCD,aAAWF,YAAU,eAAe,CAAC;;oBAE9DE,aAAWF,YAAU,gBAAgB,CAAC;cACzC,UAAM,MAAM,OAAO,6BAA6BE,aAAWF,YAAU,SAAS,GAAG,UAAU,QAAW,YAAY,CAAC;;;;;cAKtH,KAAK,WAAW;;sCAEsB,uBAAQ,kBAAkB,CAAC;cACjE,KAAK,cAAc;;;;;sBAKX,UAAU;6BACH,UAAU;qBAClB,KAAK,iBAAiB;wBACnB,gBAAiC;mBACtCE,aAAWF,YAAU,WAAW,CAAC;qBAC/B,aAAkC;kBACrC,SAA2B;mBAC1B,mBAAmB;kBACN,sBAAM,EAAG,MAAM,EAAC,OAAO,KAAI,CAAC,EAAE,QAAQ,sCAAsC,CAAC;iBAErG,KAAK,gBAAgB,EAAC,MAAM,KAAI,CAAC;AAErC,SAAK,SAAS,KAAK,eAAe,cAAc,qBAAqB;EACvE;EAES,WAAQ;AACf,UAAM,SAAQ;AAEd,SAAK,aAAa,SAAQ;AAE1B,SAAK,OAAM;EACb;EAEA,gBAAa;AACX,UAAM,QAAY,oBAAc,cAAc,SAAQ,EAAG,YAAW,GAAI,MAAU,sBAAgB,eAAe;AACjH,IAAAI,0BAAyB,KAAK;AAC9B,SAAK,QAAQ;AACb,SAAK,OAAM;EACb;EAEA,cAAc,YAA0D;AACtE,SAAK,mBAAmB,WAAW;AACnC,SAAK,OAAM;EACb;EAEQ,uBAAoB;AAC1B,UAAM,KAAK,KAAK;AAChB,UAAM,UAAU,OAAO,OAAO,OAAO,KAAK,MAAM,eAAe,EAAE;AACjE,SAAK,eAAe,oBAAoB,KAAK;AAC7C,SAAK,eAAe,OAAO;AAE3B,QAAI,YAAY,MAAM;AACpB,WAAK,OAAO,aAAa,sBAAsB,QAAQ;IACzD,OAAO;AACL,WAAK,OAAO,gBAAgB,oBAAoB;IAClD;EACF;EAEA,SAAM;AAEJ,UAAM,oBAAoB,KAAK,MAAM,4BAA2B;AAChE,UAAM,cAAc,KAAK,MAAM,eAAc,EAAG,IAAI,CAAC,EAAC,IAAI,MAAK,MAAK;AAClE,YAAM,iBAAiB,kBAAkB,IAAI,EAAE,KAAK,oBAAI,IAAG;AAC3D,aAAO;QACL,SAAS;QACT,uBAAuB,kBAAkB,sBAAsB,cAAc;;IAEjF,CAAC;AACD,SAAK,YAAY,OAAO,EAAC,MAAM,aAAa,SAAS,QAAO,EAAE,CAAC;AAC/D,SAAK,eAAe,UAAU,OAAO,SAAS,YAAY,WAAW,CAAC;AACtE,SAAK,qBAAoB;EAC3B;EAEQ,0BAA0B,OAAY;AAC5C,UAAM,eAAe;AACrB,SAAK,mBAAmB,aAAa;AACrC,SAAK,OAAM;EACb;EAEA,6BAA0B;AACxB,WAAO,KAAK,aAAa;EAC3B;EAEA,wBAAqB;AACnB,WAAO,KAAK;EACd;EAEA,2BAAwB;AACtB,WAAO,KAAK;EACd;;AAGI,IAAO,wBAAP,cAAwC,WAAO,KAAI;EAC/C;;;EAGA,6BAA2E;EAElE;EACA,eAAe,IAAI,uBAAsB;EACzC,iBAAiB,IAAyB,oCAAe,eAAc;EACvE,oBACb,IAAyB,iDAA4B,4BAA2B;EACnE;EAEjB,YAAY,OAA0C;AACpD,UAAM;MACJ,OAAO,GAAiB,oBAAK,yBAAyB,CAAC;MACvD,cAAc;KACf;AACD,SAAK,oBAAoB,yBAAmB,0BAAoB;AAEhE,SAAK,QAAQ;AACb,IAAI,oBAAc,cAAc,SAAQ,EAAG,uBAAuB,KAAK,cAAc,KAAK,IAAI,CAAC;AAC/F,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,sBAAgB,iBAAe,gBAA4C,KAAK,QAAQ,MAC5F,EAAC,QAAQ,KAAI,CAAC;AAClB,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,sBAAgB,iBAAe,mBACnC,KAAK,aAAa,mBAAmB,KAAK,cAAc,EAAC,QAAQ,KAAI,CAAC;AAgB1E,SAAK,oBAAoB,SAAS,cAAc,KAAK;AACrD,SAAK,kBAAkB,UAAU,IAAI,WAAW;AAChD,SAAK,eAAe,aAAa,KAAK,mBAAmB,KAAK,eAAe,UAAU;AACvF,SAAK,aAAa,KAAK,KAAK,iBAAiB;AAE7C,UAAM,OAAO,IAAO,WAAO,KAAI;AAE/B,UAAMC,WAAU,KAAK,eAAe,YAAY,oBAAoB,oBAAoB;AACxF,IAAAA,SAAQ,aAAa,SAAS,GAAiB,uBAAO,CAAE,EAAE;AAC1D,SAAK,kBAAkB,IAAI,0BAA0B,MAAM,KAAK,OAAM,CAAE;AACxE,IAAAA,SAAQ,kBAAkB,KAAK,gBAAgB,KAAI,CAAE;AAErD,SAAK,eAAe,iBAAiB,UAAU,KAAK,4BAA4B,KAAK,IAAI,CAAC;AAC1F,WACIF;;6CAEqCD,aAAWF,YAAU,kBAAkB,CAAC;;oBAEjEE,aAAWF,YAAU,mBAAmB,CAAC;cAE9C,UAAM,MAAM,OACX,6BAA6BE,aAAWF,YAAU,SAAS,GAAG,UAAU,QAAW,YAAY,CAAC;;;;;cAKlG,KAAK,cAAc;;;cAGnB,KAAK,iBAAiB;;iCAG5B,KAAK,gBAAgB,EAAC,MAAM,KAAI,CAAC;AAErC,SAAK,KAAK,KAAK,cAAc;EAC/B;EAES,WAAQ;AACf,UAAM,SAAQ;AAEd,SAAK,aAAa,SAAQ;AAE1B,SAAK,OAAM;EACb;EAEA,gBAAa;AACX,UAAM,QAAY,oBAAc,cAAc,SAAQ,EAAG,YAAW,GAAI,MAAU,sBAAgB,eAAe;AACjH,IAAAI,0BAAyB,KAAK;AAC9B,SAAK,QAAQ;AACb,SAAK,OAAM;EACb;EAEA,UAAU,QAAgE;AACxE,QAAI,KAAsC,OAAO;AACjD,QAAI,OAAO,QAAQ,KAAK,MAAM,eAAe,EAAE,MAAM,QAAW;AAC9D,WAAK;IACP;AAEA,SAAK,gBAAgB,OAAO,EAAE;EAChC;EAEQ,0BAAuB;AAC7B,UAAM,KAAK,KAAK;AAChB,UAAM,oBAAoB,OAAO,OAAO,OAAO,KAAK,MAAM,yBAAyB,EAAE;AACrF,QAAI,sBAAsB,MAAM;AAC9B,WAAK,kBAAkB,OAAO;IAChC,OAAO;AACL,YAAM,WAAW,KAAK,MAAM,YAAY,iBAAiB;AACzD,YAAM,WAAW,kBAAkB,WAAW,IAAI,CAAAE,QAAM,KAAK,MAAM,eAAeA,GAAE,CAAC,EAAE,OAAO,OAAK,MAAM,IAAI;AAC7G,WAAK,kBAAkB,OAAO;QAC5B;QACA;QACA,SAAS,QAAO;;IAEpB;EACF;EAEA,SAAM;AAEJ,UAAM,qBAAqB,KAAK,gBAAgB,YAAW;AAC3D,UAAM,OAAO,KAAK,MAAM,oCAAoC,kBAAkB,EAAE,IAAI,CAAC,EAAC,IAAI,MAAK,MAAK;AAClG,YAAM,UAAU;AAChB,YAAM,WAAW,KAAK,MAAM,YAAY,OAAO;AAC/C,YAAM,WAAW,QAAQ,WAAW,QAAQ,CAAAA,QAAK;AAC/C,cAAM,UAAU,KAAK,MAAM,eAAeA,GAAE;AAC5C,eAAO,YAAY,OAAO,CAAA,IAAK,CAAC,OAAO;MACzC,CAAC;AACD,aAAO;QACL;QACA;QACA;;IAEJ,CAAC;AACD,SAAK,eAAe,OAAO,EAAC,MAAM,SAAS,QAAO,EAAE,CAAC;AACrD,SAAK,eAAe,UAAU,OAAO,SAAS,KAAK,WAAW,CAAC;AAE/D,SAAK,wBAAuB;EAC9B;EAEQ,4BAA4B,OAAY;AAC9C,UAAM,eAAe;AACrB,SAAK,6BAA6B,aAAa;AAC/C,SAAK,OAAM;EACb;EAEA,uCAAoC;AAClC,WAAO,KAAK,gBAAgB,KAAI;EAClC;EAEA,2BAAwB;AACtB,WAAO,KAAK;EACd;EAEA,8BAA2B;AACzB,WAAO,KAAK;EACd;EAEA,6BAA6B,IAAmC;AAC9D,SAAK,gBAAgB,OAAO,EAAE;EAChC;;AAGI,IAAO,wBAAP,cAAwC,WAAO,KAAI;EAC/C;EAES;EACA,eAAe,IAAI,uBAAsB;EACzC,iBAAiB,IAAyB,wCAAmB,mBAAkB;EAEhG,YAAY,OAA0C;AACpD,UAAM;MACJ,OAAO,GAAiB,oBAAK,mBAAmB,CAAC;MACjD,cAAc;KACf;AACD,SAAK,oBAAoB,yBAAmB,0BAAoB;AAEhE,SAAK,QAAQ;AACb,IAAI,oBAAc,cAAc,SAAQ,EAAG,uBAAuB,KAAK,cAAc,KAAK,IAAI,CAAC;AAC/F,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,sBAAgB,iBAAe,gBAA4C,KAAK,QAAQ,MAC5F,EAAC,QAAQ,KAAI,CAAC;AAClB,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,sBAAgB,iBAAe,mBACnC,KAAK,aAAa,mBAAmB,KAAK,cAAc,EAAC,QAAQ,KAAI,CAAC;AAE1E,SAAK,oBAAoB,SAAS,cAAc,KAAK;AACrD,SAAK,kBAAkB,UAAU,IAAI,WAAW;AAChD,SAAK,eAAe,aAAa,KAAK,mBAAmB,KAAK,eAAe,UAAU;AACvF,SAAK,aAAa,KAAK,KAAK,iBAAiB;AAE7C,UAAM,0BAA0B,IAAO,WAAO,KAAI;AAClD,4BAAwB,eAAe,YAAY,KAAK,cAAc;AACtE,4BAAwB,KAAK,KAAK,cAAc;EAClD;EAES,WAAQ;AACf,UAAM,SAAQ;AAEd,SAAK,aAAa,SAAQ;AAE1B,SAAK,OAAM;EACb;EAEA,gBAAa;AACX,UAAM,QAAY,oBAAc,cAAc,SAAQ,EAAG,YAAW,GAAI,MAAU,sBAAgB,eAAe;AACjH,IAAAF,0BAAyB,KAAK;AAC9B,SAAK,QAAQ;AACb,SAAK,OAAM;EACb;EAEA,SAAM;AACJ,SAAK,eAAe,OAAO;MACzB,SAAa,oBAAc,cAAc,SAAQ,EAAG,YAAW,GAAI,aAAY,KAC1E;MACL,kBAAkB,KAAK,MAAM,kDAAiD,EAAG,IAAI,CAAC,EAAC,MAAK,MAAM,KAAK;MACvG,iBAAiB,KAAK,MAAM,oCAAoC,IAAI,EAAE,IAAI,CAAC,EAAC,MAAK,MAAM,KAAK;;EAEhG;EAEA,2BAAwB;AACtB,WAAO,KAAK;EACd;;AAGF,IAAM,4BAAN,MAA+B;EAErB;EACS,qBAAiC,MAAK;EAAE;EAExC;EAEA;EACA;EAEjB,YAAY,oBAA8B;AACxC,UAAM,QAAY,oBAAc,cAAc,SAAQ,EAAG,YAAW,GAAI,MAAU,sBAAgB,eAAe;AACjH,IAAAA,0BAAyB,KAAK;AAC9B,SAAK,QAAQ;AACb,IAAI,oBAAc,cAAc,SAAQ,EAAG,uBAAuB,KAAK,cAAc,KAAK,IAAI,CAAC;AAC/F,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,sBAAgB,iBAAe,gBAA4C,KAAK,gBAAgB,MACpG,EAAC,QAAQ,KAAI,CAAC;AAElB,SAAK,YAAY,IAAO,cAAU,UAAS;AAE3C,SAAK,WAAW,IAAO,iBAAa,aAAa,KAAK,WAAW,IAAI;AACrE,SAAK,SAAS,aAAa,EAAE;AAC7B,SAAK,SAAS,mBAAmBF,aAAWF,YAAU,iBAAiB,CAAC;AAExE,SAAK,cAAc,IAAO,YAAQ,YAAY,KAAK,SAAS,OAAO;AACnE,SAAK,YAAY,SAASE,aAAWF,YAAU,qBAAqB,CAAC;AACrE,SAAK,YAAY,QAAQ,UAAU,IAAI,sBAAsB;AAC7D,SAAK,YAAY,QAAQ,aACrB,SAAS,GAAiB,sBAAO,oBAAoB,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC,EAAE;AAGjF,SAAK,eAAc;AAGnB,SAAK,qBAAqB;EAC5B;EAEQ,gBAAa;AACnB,UAAM,QAAY,oBAAc,cAAc,SAAQ,EAAG,YAAW,GAAI,MAAU,sBAAgB,eAAe;AACjH,IAAAI,0BAAyB,KAAK;AAC9B,SAAK,QAAQ;AACb,SAAK,eAAc;EACrB;EAEQ,iBAAc;AACpB,UAAM,MAAM,KAAK,MAAM,eAAc,EAAG,IAAI,CAAC,EAAC,GAAE,MAAM,EAAE;AACxD,UAAM,QAAQ,CAAC,kBAAkB,GAAG,GAAG;AACvC,UAAM,WAAW,KAAK,SAAS,gBAAe;AAE9C,UAAM,cAAe,aAAa,QAAQ,CAAC,MAAM,SAAS,QAAQ,IAAK,mBAAmB;AAC1F,SAAK,UAAU,WAAW,KAAK;AAC/B,SAAK,SAAS,WAAW,WAAW;AACpC,SAAK,YAAY,KAAK;EACxB;;EAGQ,YAAY,OAAgE;AAElF,UAAM,gBAAgB;AACtB,UAAM,aAAa,MAAM,IAAI,OAAK,KAAK,SAAS,CAAC,EAAE,MAAM;AACzD,UAAM,YAAY,KAAK,IAAI,GAAG,UAAU;AACxC,UAAM,QAAQ,KAAK,IAAI,YAAY,IAAI,IAAI,aAAa;AACxD,SAAK,SAAS,SAAS,KAAK;EAC9B;;;EAIQ,2BAA2B,IAAsD;AAEvF,QAAI,OAAO,kBAAkB;AAC3B,aAAO;IACT;AACA,WAAO;EACT;EAEA,cAAW;AACT,UAAM,aAAa,KAAK,SAAS,gBAAe;AAChD,QAAI,eAAe,MAAM;AACvB,aAAO;IACT;AACA,WAAO,KAAK,2BAA2B,UAAU;EACnD;EAEA,OAAO,IAAmC;AACxC,SAAK,SAAS,WAAW,EAAE;EAC7B;;EAGA,OAAI;AACF,WAAO,KAAK;EACd;;EAGA,SAAS,IAAsD;AAC7D,UAAM,cAAc,KAAK,2BAA2B,EAAE;AACtD,QAAI,gBAAgB,MAAM;AACxB,aAAOF,aAAWF,YAAU,iBAAiB;IAC/C;AACA,UAAM,UAAU,KAAK,MAAM,eAAe,WAAW;AACrD,QAAI,YAAY,MAAM;AACpB,aAAY,YAAK,aAAa,gBAAgB;IAChD;AAEA,WAAO,0BAA0B,SAAS,QAAO,CAAE;EACrD;EAEA,YAAY,IAAsD;AAChE,UAAM,cAAc,KAAK,2BAA2B,EAAE;AACtD,UAAM,iBAAiB,KAAK,MAAM,4BAA2B,EAAG,IAAI,WAAW,KAC3E,oBAAI,IAAG;AACX,WAAO,kBAAkB,sBAAsB,cAAc,KAAK,IAAIE,aAAWF,YAAU,UAAU,CAAC;EACxG;;EAGA,qBAAqB,IAAsD;AACzE,UAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,UAAM,aAAgB,YAAQ,+BAA+B,SAAS,EAAC,SAAS,mCAA4B,CAAC;AAC7G,UAAM,QAAQ,WAAW,YAAY,OAAO,OAAO;AACnD,IAAG,YAAQ,gBAAgB,OAAgB,0BAAgB,qBAAqB,KAAK,SAAS,EAAE,GAAG,GAAG,CAAC;AACvG,UAAM,WAAW,WAAW,YAAY,OAAO,UAAU;AACzD,IAAG,YAAQ,gBAAgB,UAAU,KAAK,YAAY,EAAE,CAAC;AACzD,WAAO;EACT;;EAGA,iBAAiB,KAAuD;AACtE,WAAO;EACT;;EAGA,aAAa,KAAuD;AAClE,SAAK,mBAAkB;EACzB;;EAGA,uBACI,OACA,KAAyD,cACzD,YAAwB;EAC5B;;AAGI,IAAO,yBAAP,cAAyC,WAAO,KAAI;EACvC,UAAU,IAAyB,+CAA0B,0BAAyB;EAEvG,cAAA;AACE,UAAK;AACL,SAAK,oBAAoB,uBAAiB;EAC5C;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,SAAK,eAAe,OAAO,KAAK,OAAO;EACzC;EAEA,kBAAkB,MAA2F;AAC3G,SAAK,QAAQ,OAAO,KAAK;EAC3B;;;;ADzsBF,IAAMO,cAAY;;;;EAIhB,kBAAkB;;;;EAIlB,OAAO;;;;EAIP,cAAc;;AAEhB,IAAMC,SAAY,YAAK,kBAAkB,+CAA+CD,WAAS;AACjG,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAEpE,IAAM,4BAAN,cACI,4BAA2B;EAC7B;EACA;EACU;EACV;EACA;EAEA,YACI,OAAuB,iBACvB,MAAuC,OAAa;AACtD,UAAM,OAAO,OAAO,OAAO,mBAAmB;AAE9C,SAAK,mBAAmB;AACxB,SAAK,QAAQ;AAEb,UAAM,OAAkB,iBAAK,OAAO,mBAAmB;AACvD,SAAK,gBAAgB,CAAC,IAAI,CAAC;AAC3B,SAAK,YAAY;EAGnB;EAEA,IAAa,UAAO;AAClB,WAAO,KAAK;EACd;EAEA,WAAW,OAA0C;AACnD,SAAK,SAAS;AAGd,QAAI,KAAK,aAAa,CAAC,KAAK,MAAM;AAChC,WAAK,SAAS,KAAK;IACrB;EACF;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,SAAK,YAAY;AAEjB,QAAI,CAAC,KAAK,QAAQ;AAChB,aAAO;IACT;AAEA,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,IAAI,KAAK,iBAAiB,KAAK,MAAM;IACnD;AAEA,SAAK,SAAS,KAAK,IAAI;AAEvB,WAAO;EACT;;AAGI,IAAO,+BAAP,cAA4C,sCAAqC;EACrF;EACA;EACA;EAEA,WAA8C;EAC9C,WAA8C;EAE9C,YAAY,OAAqB;AAC/B,UAAM,OAAOC,aAAWF,YAAU,gBAAgB,GAAG,IAAI,IAAI,YAAY;AAEzE,UAAM,OAAkB,iBAAK,OAAO,mBAAmB;AACvD,SAAK,gBAAgB,CAAC,IAAI,CAAC;AAC3B,SAAK,YAAY;EAGnB;;;;;;;;EASA,kBAAkB,OAAqB;AACrC,SAAK,WAAW,IAAI,6BAA6B,KAAK;AACtD,SAAK,WAAW,IAAI,6BAA6B,KAAK;AACtD,SAAK,YAAY,KAAK,QAAQ;AAC9B,SAAK,YAAY,KAAK,QAAQ;EAChC;EAEA,WAAW,OAA0C;AACnD,QAAI,KAAK,aAAa,QAAQ,KAAK,aAAa,MAAM;AACpD,YAAM,IAAI,MAAM,aAAa;IAC/B;AAEA,SAAK,SAAS;AACd,SAAK,SAAS,WAAW,KAAK;AAC9B,SAAK,SAAS,WAAW,KAAK;AAG9B,QAAI,KAAK,aAAa,CAAC,KAAK,OAAO;AACjC,WAAK,SAAS,KAAK;IACrB;EACF;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,SAAK,YAAY;AAEjB,QAAI,CAAC,KAAK,QAAQ;AAChB,aAAO;IACT;AAEA,QAAI,CAAC,KAAK,OAAO;AACf,WAAK,QAAQ,IAAI,sBAAsB,KAAK,MAAM;IACpD;AAEA,SAAK,SAAS,KAAK,KAAK;AAExB,WAAO;EACT;EAEA,uBAAuB,YAA0D;AAC/E,QAAI,KAAK,aAAa,MAAM;AAC1B,YAAM,IAAI,MAAM,aAAa;IAC/B;AAEA,SAAK,OAAM;AACX,SAAK,SAAS,cAAc,UAAU;EACxC;EAEA,wBAAwB,QAAgE;AACtF,QAAI,KAAK,aAAa,MAAM;AAC1B,YAAM,IAAI,MAAM,aAAa;IAC/B;AAEA,SAAK,OAAM;AACX,SAAK,SAAS,eAAe,MAAM;EACrC;;AAGI,IAAO,+BAAP,cAA4C,0BAAgD;EAChG,YAAY,OAAqB;AAC/B,UACI,OAAO,uBAAuB,yBAC9BE,aAAWF,YAAU,KAAK,CAAC;EACjC;EAEA,cAAc,YAA0D;AACtE,SAAK,OAAM;AAEX,QAAI,KAAK,SAAS,QAAW;AAC3B;IACF;AAEA,SAAK,MAAM,cAAc,UAAU;EACrC;;AAGF,IAAM,+BAAN,cAA2C,0BAAgD;EACzF,YAAY,OAAqB;AAC/B,UACI,OAAO,uBAAuB,wBAC9BE,aAAWF,YAAU,YAAY,CAAC;EACxC;EAEA,eAAe,QAAgE;AAC7E,SAAK,OAAM;AACX,SAAK,MAAM,UAAU,MAAM;EAC7B;;;;AKhMF,YAAYG,WAAU;AACtB,YAAYC,YAAU;AAEtB,YAAYC,iBAAgB;AAG5B,YAAYC,4BAA2B;;;ACVvC;;;;oBAAAC;;AAIA,YAAYC,YAAU;AAEtB,YAAYC,WAAS;AAErB,YAAYC,kBAAiB;AAC7B,YAAYC,UAAQ;AACpB,SAAQ,QAAAC,OAAM,UAAAC,eAAa;AAC3B,YAAYC,oBAAmB;AAE/B,YAAYC,4BAA2B;AAEvC,IAAM,EAAC,aAAY,IAAO;AAE1B,IAAMC,cAAY;;;;;;;EAOhB,oBAAoB;;;;;;;EAOpB,yBAAyB;;;;;EAKzB,kBAAkB;;;;;EAKlB,oBAAoB;;AAEtB,IAAMC,SAAY,YAAK,kBAAkB,0CAA0CD,WAAS;AACrF,IAAMT,eAAkB,YAAK,mBAAmB,KAAK,QAAWU,MAAI;AAE3E,IAAM,gCACF;AAcG,IAAM,eAAqB,CAAC,OAAO,SAAS,WAAU;AAC3D,MAAI,MAAM,cAAc,MAAM,cAAc;AAE1C,IAAAJ,QAAOD;wFAEa,oBAAK,eAAe,CAAC;UACnC,MAAM,aAAaA;;;gBAGb,MAAM,WAAW;;qDAEkC,oBAAK,SAAS,EAAE,MAAM,EAAC,QAAQ,KAAI,CAAC,CAAC;gBACxF,MAAM,gBAAgBA;iDACW,aAC/B,aAAuB,sBAAS,SAAS,eAAe,MAAM,eAAe,QAAQ,IAAI,OAAO,CAAC,CAClG;kBACCA;iDAC+B,aAAgB,iBAAY,aAAa;MACxE,QAAQL,aAAWS,YAAU,gBAAgB;MAC7C,MAAMT,aAAWS,YAAU,kBAAkB;KAC9C,CAAC;eACH;;;YAGHJ;;cAEE,MAAM,WAAW;;SAEtB;;YAEG,MAAM,aAAa;;;OAGxB,MAAM;EAEX,OAAO;AAEL,IAAAC,QAAOD;uCAC4B,aAAgB,iBAAY,aAAa;MACxE,QAAQL,aAAWS,YAAU,kBAAkB;MAC/C,MAAMT,aAAWS,YAAU,uBAAuB;MAClD,MAAM;KACP,CAAC,UAAwB,oBAAK,qBAAqB,CAAC;OACpD,MAAM;EAEX;AACF;AAEM,IAAO,mBAAP,cAAmC,YAAO,KAAI;EAEzC;EACT;EACA;EACA;EACA,eAAe,IAA0B,mCAAY,YAAW;EAChE,WAAkD,CAAA;EAClD;EAEA,YAAY,eAAkE,OAAO,cAAY;AAC/F,UAAK;AACL,SAAK,QAAQ;AACb,SAAK,iBAAiB;AACtB,SAAK,aAAa,oBAAI,IAAG;AACzB,SAAK,aAAa,iBAAiB,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AACrE,IAAI,oBAAc,cAAc,SAAQ,EAAG,cAAkB,qBAAe,gBAAgB,IAAI;AAChG,SAAK,cAAa;EACpB;EAEA,WAAW,gBAAiD;AAC1D,QAAI,eAAe,OAAM,MAAW,oBAAc,cAAc,SAAQ,EAAG,kBAAiB,GAAI;AAC9F;IACF;AACA,SAAK,kBAAkB;AACvB,SAAK,gBAAgB,iBACb,qBAAe,OAAO,uCAAuC,KAAK,8BAA8B,IAAI;AAC5G,SAAK,gBAAgB,iBAAqB,qBAAe,OAAO,yBAAyB,KAAK,gBAAgB,IAAI;AAClH,SAAK,gBAAgB,iBACb,qBAAe,OAAO,2BAA2B,KAAK,kBAAkB,IAAI;AACpF,SAAK,KAAK,gBAAgB,mBAAkB;AAC5C,SAAK,cAAa;EACpB;EAEA,aAAa,gBAAiD;AAC5D,QAAI,CAAC,KAAK,mBAAmB,KAAK,oBAAoB,gBAAgB;AACpE;IACF;AACA,SAAK,gBAAgB,oBACb,qBAAe,OAAO,uCAAuC,KAAK,8BAA8B,IAAI;AAC5G,SAAK,gBAAgB,oBACb,qBAAe,OAAO,yBAAyB,KAAK,gBAAgB,IAAI;AAChF,SAAK,gBAAgB,oBACb,qBAAe,OAAO,2BAA2B,KAAK,kBAAkB,IAAI;AACpF,SAAK,kBAAkB;EACzB;EAES,gBAAa;AACpB,UAAM,YAAY;MAChB,YAAY,KAAK,SAAS,SAAS;MACnC,cAAc,KAAK,WAAW,OAAO;MACrC,eAAe,KAAK;MACpB,aAAa,KAAK;MAClB,eAAe,KAAK;;AAEtB,SAAK,MAAM,WAAW,CAAA,GAAI,KAAK,OAAO;EACxC;EAEA,6BAA6B,EAAC,KAAI,GAAsE;AACtG,SAAK,WAAW,IAAI,KAAK,QAAQ,KAAK,SAAS;AAC/C,SAAK,eAAe,OAAO,EAAC,WAAW,KAAK,WAAU;AACtD,SAAK,cAAa;EACpB;EAEA,eAAe,EAAC,MAAM,OAAM,GAA8C;AACxE,SAAK,SAAS,KAAK,MAAM;AACzB,SAAK,aAAa,OAAO,EAAC,SAAS,KAAK,SAAQ;AAChD,SAAK,cAAa;EACpB;EAEA,iBAAiB,EAAC,MAAM,OAAM,GAA8C;AAC1E,UAAM,QAAQ,KAAK,SAAS,UAAU,eAAa,UAAU,OAAO,OAAO,EAAE;AAC7E,SAAK,SAAS,KAAK,IAAI;AACvB,SAAK,aAAa,OAAO,EAAC,SAAS,KAAK,SAAQ;AAChD,SAAK,cAAa;EACpB;EAEA,MAAM,SAAS,OAAY;AACzB,UAAM,cAAc;AACpB,UAAM,SAAS,KAAK,SAAS,KAAK,CAAAE,YAAUA,QAAO,OAAO,YAAY,MAAM;AAC5E,QAAI,QAAQ;AACV,WAAK,iBAAiB;AACtB,WAAK,cAAa;IACpB;EACF;;;;ADnLF,IAAMC,cAAY;;;;EAIhB,cAAc;;AAEhB,IAAMC,SAAY,YAAK,kBAAkB,iDAAiDD,WAAS;AAC5F,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAErE,IAAO,0BAAP,cAAuC,4BAA2B;EAC9D;EAER,YAAY,cAA4B;AACtC,UAAM,cAAcC,aAAWF,YAAU,YAAY,GAAG,OAAO,eAAe;AAC9E,UAAM,OAAkB,iBAAK,OAAO,UAAU;AAC9C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,IAAa,UAAO;AAClB,WAAO;EACT;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,IAAI,iBAAiB,IAA0B,qCAAc,cAAa,CAAE;IAC1F;AACA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,eAAe;AAC3C,WAAO;EACT;;;;AEvCF,IAAO,+BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA2DC,YAAY,QAAQ,wBAAwB,CAAC;;;AC3D7D,YAAYG,WAAU;AACtB,YAAYC,YAAU;AAEtB,YAAYC,WAAS;AAErB,YAAYC,iBAAgB;AAC5B,YAAYC,UAAQ;;;ACXpB;;;;;;AAKA,OAAO;AAEP,YAAYC,aAAY;AACxB,YAAYC,YAAU;AACtB,YAAYC,eAAc;AAC1B,YAAYC,WAAS;AAErB,YAAY,eAAe;AAC3B,YAAYC,oBAAmB;AAC/B,YAAYC,eAAc;AAC1B,YAAYC,UAAQ;AACpB,YAAYC,oBAAmB;AAC/B,YAAY,uBAAuB;AACnC,YAAY,aAAa;AAEzB,YAAYC,4BAA2B;;;ACfvC,IAAO,sCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAkEC,YAAY,QAAQ,+BAA+B,CAAC;;;ADhDpE,IAAMC,cAAY;;;;EAIhB,OAAO;;;;EAIP,SAAS;;;;EAIT,gBAAgB;;;;EAIhB,cAAc;;;;EAId,sBAAsB;;;;EAItB,iCAAiC;;;;EAIjC,MAAM;;;;EAIN,YAAY;;;;EAIZ,mBAAmB;;;;EAInB,oBAAoB;;;;;EAKpB,kBAAkB;;;;;EAKlB,eAAe;;;;EAIf,SAAS;;;;EAIT,SAAS;;AAEX,IAAMC,SAAY,YAAK,kBAAkB,iDAAiDD,WAAS;AACnG,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAC9D,IAAO,yBAAP,cAAyC,UAAK,WAAU;EACpD;EACE;EACO;EACA;EACT;EACA;EACA;EACS;EACA;EACA;EACT;EACA;EACA;EACA;EAIS,eAAe,IAA0B,2CAAoB,oBAAmB;EAEjG,YAAY,OAA4D,OAAwC;AAC9G,UAAM;MACJ,OAAOC,aAAWF,YAAU,KAAK;MACjC,QAAQ;MACR,OAAO,GAAiB,oBAAK,oBAAoB,CAAC;KACnD;AACD,SAAK,oBAAoB,mCAA6B;AAEtD,SAAK,QAAQ;AACb,SAAK,iBAAiB;AAEtB,SAAK,QAAQ,UAAU,IAAI,gCAAgC;AAC3D,SAAK,QAAQ,UAAU,IAAI,cAAc;AAEzC,UAAM,gBAAgB,KAAK,QAAQ,YAAY,oBAAoB,mBAAmB;AACtF,kBAAc,aAAa,SAAS,GAAiB,uBAAO,CAAE,EAAE;AAChE,SAAK,QAAQ,YAAY,KAAK,YAAY;AAC1C,SAAK,cAAc,IAAO,iBAAY,YAAY,OAAO,KAAK;AAC9D,SAAK,YAAY,KAAK,KAAK,OAAO;AAElC,SAAK,eAAe,IAAO,YAAO,KAAI;AACtC,UAAM,UAAU,KAAK,aAAa,QAAQ,YAAY,OAAO,6BAA6B;AAC1F,SAAK,YAAY,cAAc,KAAK,YAAY;AAChD,SAAK,YAAY,eAAe,OAAO;AAEvC,SAAK,UAAU;AAEf,SAAK,QAAQ;AACb,UAAM,aAAa,KAAK,MAAM,OAAM,EACZ,MAAU,0BAAoB,mBAAmB,GAChD,gBAAgB,MAAM,cAAc,YAAY,MAAM,cAAc,IAAI;AACjG,QAAI,YAAY;AACd,WAAK,aAAa,iBAAiB,UAAU;IAC/C,WAAW,MAAM,YAAY;AAC3B,WAAK,aAAa,cAAc,MAAM,UAAU;IAClD;AACA,SAAK,WAAW;AAChB,SAAK,mBAAmB,IAAW,kBAAU,UAAU,GAAG;AAC1D,SAAK,gBACD,IAAO,aAAQ,cAAcE,aAAWF,YAAU,OAAO,GAAG,WAAW,QAAW,uBAAuB;AAC7G,SAAK,cAAc,iBAAgB,SAAwC,KAAK,sBAAsB,IAAI;AAC1G,kBAAc,kBAAkB,KAAK,aAAa;AAElD,SAAK,uBAAuB,IAAO,aAAQ,cACvCE,aAAWF,YAAU,cAAc,GAAG,SAAS,QAAW,+BAA+B;AAC7F,SAAK,qBAAqB,iBAAgB,SAAwC,YAAS;AACzF,WAAK,KAAK,oBAAoB,IAAI;IACpC,CAAC;AACD,kBAAc,kBAAkB,KAAK,oBAAoB;AAEzD,UAAM,qBAAqB,IAAO,aAAQ,cAAcE,aAAWF,YAAU,YAAY,GAAG,CAAC;AAC7F,kBAAc,kBAAkB,kBAAkB;AAClD,UAAM,2BAA2B,IAAW,kBAAU,UAAU,GAAG;AACnE,SAAK,kBAAkB;AACvB,uBAAmB,iBAAgB,eAA6C,MAAK;AACnF,WAAK,yBAAyB,SAAS,MAAK;AAC1C,aAAK,kBAAkB,mBAAmB,MAAK;AAC/C,eAAO,KAAK,WAAW,IAAI;MAC7B,CAAC;IACH,CAAC;AACD,SAAK,cAAe;AACpB,SAAK,oBAAqB;AAC1B,SAAK,iBAAiB;AAEtB,SAAK,OAAO,KAAK;EACnB;EAEQ,gBAAa;AACnB,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,SAAQ,EAAG,OAAM;IACjC;AACA,SAAK,WAAW,KAAK,eAAc;AACnC,UAAM,iBAAiB,KAAK,SAAS,SAAQ;AAC7C,SAAK,YAAY,iBAAiB,cAAc;AAChD,mBAAe,eAAe,GAAG,GAAG;EACtC;EAES,WAAQ;AACf,SAAK,MAAM,iBAAgB,8BAC2C,KAAK,qBAAqB,IAAI;AACpG,SAAK,KAAK,WAAW,IAAI;EAC3B;EAES,WAAQ;AACf,SAAK,MAAM,oBAAmB,8BACwC,KAAK,qBAAqB,IAAI;EACtG;EAEQ,YAAY,SAA8B;AAChD,QAAI,WAAW,KAAK,YAAY,SAAS;AACvC;IACF;AACA,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,OAAM;IACrB;AACA,QAAI,CAAC,SAAS;AACZ,gBAAU,IAAO,iBAAY,YACzBE,aAAWF,YAAU,oBAAoB,GAAGE,aAAWF,YAAU,+BAA+B,CAAC;IACvG;AACA,SAAK,UAAU;AACf,SAAK,QAAQ,KAAK,KAAK,aAAa,OAAO;EAC7C;EAEQ,iBAAc;AACpB,UAAM,UAAW;MACf,EAAC,IAAI,UAAU,OAAO,KAAK,UAAU,OAAO,OAAO,MAAK;MACxD,EAAC,IAAI,QAAQ,OAAOE,aAAWF,YAAU,IAAI,GAAG,QAAQ,GAAG,UAAU,KAAI;MACzE;QACE,IAAI;QACJ,OAAY,YAAK,aAAa,eAAe;QAC7C,QAAQ;QACR,OAAK;QACL,UAAU;;MAEZ,EAAC,IAAI,gBAAgB,OAAY,YAAK,aAAa,cAAc,GAAG,QAAQ,GAAG,UAAU,KAAI;MAC7F;QACE,IAAI;QACJ,OAAY,YAAK,aAAa,gBAAgB;QAC9C,QAAQ;QACR,OAAK;QACL,UAAU;;MAEZ;QACE,IAAI;QACJ,OAAOE,aAAWF,YAAU,UAAU;QACtC,OAAO;QACP,QAAQ;QACR,OAAK;QACL,UAAU;;MAEZ,EAAC,IAAI,eAAe,OAAY,YAAK,aAAa,aAAa,GAAG,QAAQ,GAAG,UAAU,KAAI;;AAE7F,UAAM,WAAW,IAAa,mBAAS,aAAa;MAClD,aAAaE,aAAWF,YAAU,kBAAkB;MACpD;MACA,gBAAgB,KAAK,oBAAoB,KAAK,IAAI;MAClD,iBAAiB,KAAK,WAAW,KAAK,MAAM,IAAI;KACjD;AAED,aAAS,iBAAgB,kBAA2C,KAAK,gBAAgB,IAAI;AAE7F,aAAS,iBAAgB,gBAAyC,WAAQ;AACxE,WAAK,KAAK,sBAAsB,MAAM,KAAK,IAAyC;IACtF,GAAG,IAAI;AACP,aAAS,WAAW,IAAI;AACxB,WAAO;EACT;EAEQ,iBAAc;AACpB,QAAI,CAAC,KAAK,UAAU;AAClB;IACF;AAEA,UAAM,WAAW,KAAK;AAEtB,UAAM,YAAY,SAAS,qBAAoB;AAC/C,UAAM,WAAW,SAAS,aAAY;AACtC,QAAI;AACJ,QAAI,aAAa,QAAQ;AACvB,mBAAa,CAAC,GAAiB,MAAoB,EAAE,KAAK,cAAc,EAAE,IAAI;IAChF,WAAW,aAAa,gBAAgB;AACtC,mBAAa,CAAC,GAAiB,MAAoB,EAAE,KAAK,SAAS,cAAc,EAAE,KAAK,QAAQ;IAClG,WAAW,aAAa,kBAAkB;AACxC,mBAAa,CAAC,GAAiB,MAAoB,EAAE,KAAK,eAAe,EAAE,KAAK;IAClF,WAAW,aAAa,iBAAiB;AACvC,mBAAa,CAAC,GAAiB,MAAoB,EAAE,KAAK,UAAU,EAAE,KAAK;IAC7E,WAAW,aAAa,iBAAiB;AACvC,mBAAa,CAAC,GAAiB,MAAoB,EAAE,aAAa,cAAc,EAAE,YAAY;IAChG,WAAW,aAAa,eAAe;AACrC,mBAAa,CAAC,GAAiB,MAAoB,EAAE,WAAW,cAAc,EAAE,UAAU;IAC5F;AAEA,UAAM,WAAW,SAAS,SAAQ,EAAG,SAAS,MAAK;AACnD,aAAS,SAAQ,EAAG,eAAc;AAClC,aAAS,KAAK,CAAC,GAAG,MAAK;AACrB,YAAM,SAAS,WAAY,GAAqB,CAAkB;AAClE,aAAO,YAAY,SAAS,CAAC;IAC/B,CAAC;AACD,aAAS,QAAQ,WAAS,SAAS,SAAQ,EAAG,YAAY,KAAK,CAAC;EAClE;EAEQ,MAAM,oBAAoB,MAAuD;AACvF,QAAI,CAAC,MAAM;AACT,aAAO,KAAK,UAAU,gBAAgB;AACtC,UAAI,CAAC,MAAM;AACT;MACF;IACF;AACA,UAAM,KAAK,MAAM,iBAAiB,KAAK,OAAQ,KAAK,KAAK,IAAG,CAAa;AACzE,SAAK,OAAM;EACb;EAEA,OAAO,QAAgD,MAAI;AACzD,QAAI,CAAC,OAAO;AACV;IACF;AACA,SAAK,QAAQ;AACb,SAAK,cAAa;AAClB,SAAK,KAAK,WAAW,IAAI;EAC3B;EAEQ,mBAAgB;AACtB,QAAI,CAAC,KAAK,mBAAmB;AAC3B,WAAK,oBAAoB,KAAK,QAAQ,YAAY,OAAO,2BAA2B;IACtF;AACA,SAAK,kBAAkB,eAAc;AAErC,UAAM,OAAO,KAAK,kBAAkB,YAAY,MAAM;AACtD,QAAI,KAAK,iBAAiB;AACxB,WAAK,cAAcE,aAAWF,YAAU,kBAAkB,EAAC,KAAK,OAAO,KAAK,WAAW,EAAC,CAAC;IAC3F,OAAO;AACL,WAAK,cAAcE,aAAWF,YAAU,eAAe,EAAC,KAAK,OAAO,KAAK,WAAW,EAAC,CAAC;IACxF;EACF;EAEQ,mBAAmB,SAA4C,aAAmB;AACxF,QAAI,CAAC,KAAK,UAAU;AAClB;IACF;AACA,UAAM,WAAW,KAAK,SAAS,cAAc,KAAK,IAAG;AACrD,SAAK,cAAc,WAAW,IAAI;AAClC,SAAK,iBAAiB;AACtB,SAAK,cAAc;AACnB,SAAK,iBAAgB;AAErB,UAAM,aAAa,oBAAI,IAAG;AAC1B,UAAM,WAAW,KAAK,SAAS,SAAQ;AACvC,eAAW,QAAQ,SAAS,UAAU;AACpC,iBAAW,IAAI,KAAK,KAAK,KAAM,IAAqB;IACtD;AACA,aAAS,eAAc;AACvB,QAAI,eAAkC;AACtC,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AACvC,YAAM,QAAQ,QAAQ,CAAC;AACvB,UAAI,OAAO,WAAW,IAAI,MAAM,UAAU;AAC1C,UAAI,CAAC,QAAQ,KAAK,KAAK,iBAAiB,MAAM,cAAc;AAC1D,eAAO,IAAI,aAAa,GAAG,KAAK,cAAc,KAAK,GAAG,MAAM,YAAY;AACxE,aAAK,aAAa;MACpB,OAAO;AACL,aAAK,KAAK,SAAS;MACrB;AACA,eAAS,YAAY,IAAI;AACzB,UAAI,MAAM,eAAe,UAAU;AACjC,uBAAe;MACjB;IACF;AACA,QAAI,CAAC,cAAc;AACjB,WAAK,YAAY,IAAI;IACvB,OAAO;AACL,mBAAa,gBAAe;IAC9B;AACA,SAAK,eAAc;EACrB;EAEQ,MAAM,WAAW,OAAc;AAIrC,QAAI,CAAC,SAAS,KAAK,gBAAgB;AACjC,aAAO,MAAM,KAAK;IACpB;AACA,SAAK,cAAc,WAAW,KAAK;AAEnC,QAAI,KAAK,gBAAgB;AACvB,aAAO,MAAM,KAAK;IACpB;AAEA,SAAK,iBAAiB,IAAI,QAAQ,aAAU;AAC1C,WAAK,MAAM,iBACP,KAAK,OAAO,KAAK,iBAAiB,CAACG,UAA4CC,iBAAuB;AACpG,gBAAQ,EAAC,SAAAD,UAAS,aAAAC,aAAW,CAAC;MAChC,CAAC;IACP,CAAC;AAED,UAAM,EAAC,SAAS,YAAW,IAAI,MAAM,KAAK;AAC1C,SAAK,mBAAmB,SAAS,WAAW;AAC5C,SAAK,iBAAiB;AACtB;EACF;EAEQ,uBAAoB;AAC1B,SAAK,KAAK,WAAW,IAAI;EAC3B;EAEQ,oBACJ,OAAuG;AACzG,UAAM,EAAC,WAAW,cAAa,IAAI,MAAM;AACzC,QAAK,CAAC,KAAK,MAAM,SAAS,aAAa,KAAK,KAAK,MAAM,cAAc,WAAY;AAC/E;IACF;AACA,SAAK,KAAK,iBAAiB;MACvB,MAAM,QAAQ,QAAQ,KAAK,WAAW,IAAI,CAAC;MAAC;;IAAA;EAClD;EAEQ,MAAM,sBAAsB,SAA0C;AAC5E,QAAI,UAAU,wBAAwB,IAAI,OAAO;AACjD,QAAI,CAAC,SAAS;AACZ,gBAAU,IAAI,YAAY,OAAO;AACjC,8BAAwB,IAAI,SAAS,OAAO;IAC9C;AAGA,QAAI,KAAK,UAAU,gBAAgB,YAAY,KAAK,SAAS,aAAa,MAAM;AAC9E,WAAK,YAAY,OAAO;IAC1B;EACF;EAEQ,cAAc,OAAsC;AAC1D,UAAM,UAAc,qBAAe,eAAe,4BAC9C,mBAAmB,MAAM,YAAY,MAAM,YAClC,uBAAa,gBAAgB,IAAI;AAC9C,YAAQ,gBAAgB,MAAM;AAC9B,YAAQ,kBAAkB,MAAM,cAAc;AAC9C,YAAQ,aAAa,MAAM;AAC3B,YAAQ,aAAa,MAAM;AAC3B,YAAQ,WAAW,IAAW,kBAAU,UAAU,MAAM,UAAU,EAAE;AACpE,YAAQ,kBAAkB,MAAM;AAChC,YAAQ,sBAAsB,EAAE;AAChC,YAAQ,UAAU,MAAM;AAExB,QAAI,SAAS,MAAM,gBAAgB,KAAK,CAAAC,YAAUA,QAAO,KAAK,YAAW,MAAO,cAAc;AAC9F,QAAI,WAAQ;AACZ,QAAI,QAAQ;AACV,YAAM,SAAkB,mBAAS,iBAAiB,OAAO,KAAK;AAC9D,UAAI,OAAO,UAAU;AACnB,mBAAW,OAAO;MACpB;IACF;AACA,YAAQ,WAAW;AAEnB,aAAS,MAAM,gBAAgB,KAAK,CAAAA,YAAUA,QAAO,KAAK,YAAW,MAAO,gBAAgB;AAC5F,YAAQ,eAAgB,UAAU,OAAO,OAAO,KAAK,KAAM;AAE3D,QAAI,eAAsB,qBAAa,aAAa,aAAa,QAAQ;AACzE,QAAI,CAAC,cAAc;AACjB,qBACW,qBAAa,aAAa,QAAQ,MAAM,UAAU,KAAY,qBAAa,cAAc;IACtG;AACA,YAAQ,gBAAgB,YAAY;AACpC,YAAQ,uBAAuB,KAAK,eAAe,KAAK,MAAM,OAAO,CAAC;AACtE,WAAO;EACT;EAEQ,MAAM,eAAe,SAA0C;AAErE,UAAM,WAAW,MAAM,KAAK,MAAM,sBAAsB,QAAQ,IAAG,GAAI,QAAQ,eAAc,CAAE;AAC/F,QAAI,CAAC,UAAU;AACb,aAAO,EAAC,OAAO,2BAA0B;IAC3C;AACA,WAAO,IAAc,sBAAY;MAC7B,SAAS;;MAAqB;MAAM,QAAQ;MAAU,QAAQ,QAAO,KAAM;IAAS;EAC1F;EAEQ,iBAAc;EACtB;;AAGF,IAAM,0BAA0B,oBAAI,QAAO;AAErC,IAAO,eAAP,cAAqC,mBAAS,aAA0B;EACpE;EACR;EACQ;EACR;EACA;EAEA,YACI,QAAgB,SAChB,cAAsD;AACxD,UAAM,OAAO;AACb,SAAK,SAAS;AACd,UAAM,SAAS,IAAW,kBAAU,UAAU,QAAQ,IAAG,CAAE;AAC3D,QAAI,OAAO,SAAS;AAClB,WAAK,OAAgB,0BAAgB,QAAQ,QAAQ,IAAG,GAAI,OAAO,OAAM,CAAE;IAC7E,OAAO;AACL,WAAK,OAAO,QAAQ,IAAG;IACzB;AACA,SAAK,UAAU;AACf,SAAK,eAAe;AACpB,SAAK,aAAa,QAAQ,gBAAgB,KAAK,YAAU,OAAO,KAAK,YAAW,MAAO,MAAM,GAAG,SAAS;EAC3G;EAES,WAAW,UAAgB;AAClC,UAAM,OAAO,KAAK,SAAS,QAAQ;AACnC,QAAI;AACJ,QAAI,UAAU,KAAK,QAAQ,IAAG;AAC9B,QAAI,aAAa,UAAU;AACzB,cAAQ,OAAO,KAAK,MAAM;IAC5B,WAAW,aAAa,QAAQ;AAC9B,cAAQ,KAAK;IACf,WAAW,aAAa,iBAAiB;AACvC,UAAI,KAAK,iBAAiB,kBAAkB;AAC1C,gBAAQ;MACV,WAAW,KAAK,iBAAiB,kBAAkB;AACjD,gBAAQ;MACV,OAAO;AACL,gBAAQ,KAAK;MACf;IACF,WAAW,aAAa,gBAAgB;AACtC,cAAQ,KAAK,QAAQ;IACvB,WAAW,aAAa,kBAAkB;AACxC,eAAS,KAAK,QAAQ,eAAe,GAAG,eAAe,OAAO;IAChE,WAAW,aAAa,iBAAiB;AACvC,cAAQ,IAAI,KAAK,KAAK,QAAQ,UAAU,GAAI,EAAE,eAAc;IAC9D,WAAW,aAAa,eAAe;AACrC,cAAQ,KAAK;AACb,UAAI,KAAK,YAAY;AACnB,kBAAUH,aAAWF,YAAU,iBAAiB;MAClD;IACF;AACA,UAAM,gBAAgB,KAAK;AAC3B,QAAI;AACJ,QAAI,iBAAiB,KAAK,UAAU;AAClC,iBAAW,KAAK,SAAS,sBAAsB,IAAI,aAAa;IAClE;AACA,IAAS,mBAAS,aAAa;MAAe;MAAM,SAAS;;MAAoB;MAAM;IAAQ;AAC/F,IAAG,aAAQ,QAAQ,QAAQ,MAAM,OAAO;AACxC,WAAO;EACT;;AAGI,IAAO,cAAP,cAA8B,YAAO,KAAI;EACrC;EACA;EAER,YAAY,SAA0C;AACpD,UAAK;AAEL,SAAK,aAAa,IAAO,gBAAW,WAAU;AAC9C,SAAK,WAAW,QAAQ,aAAa,SAAS,GAAiB,uBAAQ,sBAAsB,CAAC,EAAE;AAChG,SAAK,WAAW,iBAAoB,gBAAW,OAAO,aAAa,KAAK,aAAa,IAAI;AACzF,SAAK,yBACM,iBAAS,SAAS,SAAQ,EAAG,cAAc,0BAA0B,SAAS;AAEzF,SAAK,WAAW,UACZ,WAAWE,aAAWF,YAAU,OAAO,GACzB,6BAAc,cACrB,YAAO,MAAM,IAAsB,qCAAmB,mBAAmB,OAAO,CAAC,CAAC;AAC7F,SAAK,WAAW,UACZ,WAAWE,aAAWF,YAAU,OAAO,GAAG,IAAY,2BAAmB,mBAAmB,OAAO,CAAC;AACxG,SAAK,WAAW,KAAK,KAAK,OAAO;EACnC;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,SAAK,UAAS;EAChB;EAEQ,UAAU,OAAc;AAC9B,QAAI,CAAC,OAAO;AACV,cAAQ,KAAK,uBAAuB,IAAG;IACzC;AACA,QAAI,SAAS,CAAC,KAAK,WAAW,UAAU,KAAK,GAAG;AAC9C,WAAK,WAAW,UAAU,SAAS;IACrC;EACF;EAEQ,YAAY,OAAmE;AACrF,QAAI,CAAC,MAAM,KAAK,eAAe;AAC7B;IACF;AACA,SAAK,uBAAuB,IAAI,MAAM,KAAK,KAAK;EAClD;;;;ADtiBF,IAAMM,cAAY;;;;EAIhB,cAAc;;;;EAId,gBAAgB;;;;EAIhB,yBAAyB;;;;EAIzB,eAAe;;;;EAIf,QAAQ;;AAEV,IAAMC,SAAY,YAAK,kBAAkB,uDAAuDD,WAAS;AACzG,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAC9D,IAAO,gCAAP,cAA6C,sCAAqC;EAC9E;EACA;EACA;EAER,YAAY,gBAAgC,eAA8C;AACxF,UACI,gBAAgBC,aAAWF,YAAU,YAAY,GAAGE,aAAWF,YAAU,cAAc,GACvFE,aAAWF,YAAU,uBAAuB,GAAG,eAAe;AAClE,UAAM,OAAkB,iBAAK,OAAO,UAAU;AAC9C,SAAK,QAAQ,2DAA8F;AAC3G,SAAK,gBAAgB,CAAC,IAAI,CAAC;AAC3B,SAAK,gBAAgB,oBAAI,IAAG;AAC5B,SAAK,sBAAsB,oBAAI,IAAG;AAClC,SAAK,gBAAgB;EACvB;EAEA,aAAU;AACR,SAAK,cAAc,MAAK;AACxB,SAAK,oBAAoB,MAAK;AAC9B,IAAI,oBAAc,cAAc,SAAQ,EAAG,cAAkB,8BAAwB,yBAAyB;MAC5G,YAAY,CAAC,UACT,KAAK,6BAA6B,KAAK;MAC3C,cAAc,CAAC,UACX,KAAK,+BAA+B,KAAK;KAC9C;EACH;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,SAAK,gBAAgB,iBAAiB,eAAe,KAAK,uBAAuB,KAAK,IAAI,GAAG,IAAI;EACnG;EAEQ,uBAAuB,OAAiB;AAC9C,UAAM,cAAc,IAAO,iBAAY,YAAY,KAAK;AACxD,gBAAY,eAAc,EAAG,WACzBE,aAAWF,YAAU,aAAa,GAAG,KAAK,cAAc,KAAK,IAAI,GAAG,EAAC,cAAc,iBAAgB,CAAC;AACxG,SAAK,YAAY,KAAI;EACvB;EAEQ,gBAAa;AACnB,eAAW,gBAAgB,KAAK,eAAe;AAC7C,mBAAa,kBAAiB;IAChC;EACF;EAEQ,6BAA6B,OAA0D;AAC7F,UAAM,OAAM;AACZ,SAAK,cAAc,IAAI,KAAK;AAC5B,eAAW,SAAS,MAAM,OAAM,GAAI;AAClC,WAAK,SAAS,OAAO,KAAK;IAC5B;AACA,UAAM,iBAAgB,cAAiD,KAAK,YAAY,IAAI;AAC5F,UAAM,iBAAgB,gBAAmD,KAAK,cAAc,IAAI;EAClG;EAEQ,+BAA+B,OAA0D;AAC/F,eAAW,SAAS,MAAM,OAAM,GAAI;AAClC,WAAK,YAAY,OAAO,KAAK;IAC/B;AACA,UAAM,oBAAmB,cAAiD,KAAK,YAAY,IAAI;AAC/F,UAAM,oBAAmB,gBAAmD,KAAK,cAAc,IAAI;AACnG,SAAK,cAAc,OAAO,KAAK;EACjC;EAEQ,WAAW,OAAkF;AACnG,UAAM,EAAC,OAAO,MAAK,IAAI,MAAM;AAC7B,SAAK,SAAS,OAAO,KAAK;EAC5B;EAEQ,YAAY,OAAwC;AAC1D,QAAI,KAAK,eAAe;AACtB,aAAO,MAAM,SAAS,KAAK,aAAa;IAC1C;AACA,WAAO;EACT;EAEQ,SACJ,OAA4D,OAAwC;AACtG,QAAI,KAAK,YAAY,KAAK,GAAG;AAC3B,YAAM,qBACF,IAAI,mBAAmB,KAAK,gBAAgB,OAAO,OAAO,KAAK,kBAAkB,MAAS;AAC9F,WAAK,oBAAoB,IAAI,kBAAkB;AAC/C,WAAK,YAAY,kBAAkB;IACrC;EACF;EAEQ,aAAa,OAAkF;AACrG,UAAM,EAAC,OAAO,MAAK,IAAI,MAAM;AAC7B,QAAI,KAAK,YAAY,KAAK,GAAG;AAC3B,WAAK,YAAY,OAAO,KAAK;IAC/B;EACF;EAEQ,YACJ,OAA4D,OAAwC;AACtG,UAAM,qBAAqB,KAAK,iBAAiB,OAAO,KAAK;AAC7D,QAAI,CAAC,oBAAoB;AACvB;IACF;AAEA,SAAK,YAAY,kBAAkB;AACnC,SAAK,oBAAoB,OAAO,kBAAkB;AAClD,SAAK,cAAc,KAAK,WAAU,IAAK,CAAC;EAC1C;EAEQ,iBACJ,OACA,OAAwC;AAC1C,eAAW,oBAAoB,KAAK,qBAAqB;AACvD,UAAI,iBAAiB,iBAAiB,OAAO,KAAK,GAAG;AACnD,eAAO;MACT;IACF;AACA,WAAO;EACT;;AAGI,IAAO,qBAAP,cAAkC,4BAA2B;EAChD;EACT;EACA;EAER,YACI,gBAAgC,OAChC,OAA0C,kBAAyB;AACrE,QAAI;AACJ,QAAI,kBAAkB;AACpB,kBAAY,MAAM,YAAY,QAAQ,MAAM;IAC9C,OAAO;AACL,kBAAY,MAAM;IACpB;AACA,UAAM,gBAAgB,WAAW,OAAO,wBAAwB;AAChE,SAAK,QAAQ;AACb,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,UAAM,OAAkB,iBAAK,OAAO,OAAO;AAC3C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,IAAa,UAAO;AAElB,WAAO,aAAa,KAAK,MAAM;EACjC;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,SAAK,gBAAgB,iBAAiB,eAAe,KAAK,uBAAuB,KAAK,IAAI,GAAG,IAAI;EACnG;EAEQ,uBAAuB,OAAiB;AAC9C,UAAM,cAAc,IAAO,iBAAY,YAAY,KAAK;AACxD,gBAAY,eAAc,EAAG,WACzBE,aAAWF,YAAU,MAAM,GAAG,KAAK,WAAW,KAAK,IAAI,GAAG,EAAC,cAAc,SAAQ,CAAC;AACtF,SAAK,YAAY,KAAI;EACvB;EAEQ,aAAU;AAChB,SAAK,KAAK,MAAM,YAAY,KAAK,KAAK;EACxC;EAEA,OAAO,OAAwC;AAC7C,SAAK,QAAQ;AACb,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,OAAO,KAAK;IACxB;EACF;EAES,SAAS,gBAAiC;AACjD,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,IAAI,uBAAuB,KAAK,OAAO,KAAK,KAAK;IAC/D;AAEA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,sBAAsB;AAClD,WAAO;EACT;EAEA,iBACI,OAA4D,OAAwC;AACtG,WAAO,KAAK,MAAM,OAAO,KAAK,KAAK,KAAK,UAAU;EACpD;;;;AG/NF;;;;;;AAKA,YAAYG,aAAY;AACxB,YAAYC,WAAU;AACtB,YAAYC,YAAU;AACtB,YAAYC,WAAS;AAErB,YAAY,oBAAoB;AAChC,YAAYC,cAAa;AACzB,YAAYC,iBAAgB;AAC5B,YAAYC,UAAQ;AACpB,YAAYC,oBAAmB;AAC/B,YAAY,sBAAsB;AAElC,YAAYC,4BAA2B;;;ACZvC,IAAO,iCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA6JC,YAAY,QAAQ,0BAA0B,CAAC;;;AC7J/D,IAAO,2CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA8GC,YAAY,QAAQ,oCAAoC,CAAC;;;ACnHzE;;;;AAKA,YAAYC,YAAU;AACtB,YAAYC,WAAS;AAErB,YAAYC,UAAQ;AACpB,YAAYC,oBAAmB;AAE/B,IAAMC,cAAY;;;;EAIhB,SAAS;;;;EAIT,gBAAgB;;;;EAIhB,UAAU;;;;;EAKV,YAAY;;;;;EAKZ,UAAU;;AAEZ,IAAMC,SAAY,YAAK,kBAAkB,sDAAsDD,WAAS;AACxG,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAC9D,IAAO,+BAAP,MAAmC;EAC/B;EACA;EACA;EACR;EACA,YAAY,cAAgE;AAC1E,SAAK,eAAe;AACpB,SAAK,OAAO,CAAA;AACZ,SAAK,mBAAmB;AACxB,SAAK,eAAe,SAAS,cAAc,OAAO;AAClD,SAAK,kBAAiB;EACxB;EAEA,qCAAkC;AAChC,aAAS,SAAS,QAAoC,OAA+B;AACnF,UAAI,MAAM,QAAQ,OAAO,aAAa,MAAM,SAAS,MAAM,KAAK;AAC9D,eAAO,KAAK,KAAK;MACnB;IACF;AAKA,aAAS,oBACL,QAAoC,IAAY,kBAA0B,gBAC1E,mBAA2B,iBAC3B,QAAyD;AAC3D,eAAS,QAAQ,EAAC,IAAI,OAAK,WAAoC,OAAO,kBAAkB,KAAK,eAAc,CAAC;AAC5G,UAAI,WAAM,gBACN,WAAM,eACN,WAAM,aAAkE;AAC1E,iBAAS,QAAQ;UACf;UACA,OAAK;UACL,OAAO;UACP,KAAK;SACN;AACD,iBACI,QAAQ,EAAC,IAAI,OAAK,YAAqC,OAAO,mBAAmB,KAAK,gBAAe,CAAC;MAC5G;IACF;AAEA,aAAS,iBAAiB,SAAsD;AAC9E,UAAI,QAAiE,QAAQ;AAC7E,UAAI,kBAAkB;AACtB,UAAI,oBAAoB;AACxB,UAAI,iBAAiB;AACrB,UAAI,mBAAmB;AACvB,YAAM,gBAAgB,MAAM;AAC5B,UAAI,kBAAa,OAA4D;AAC3E,eAAO,CAAA;MACT;AAEA,aAAO,OAAO;AAEZ,YAAI,MAAM,WAAM,aAAkE;AAChF,4BAAkB,MAAM;QAC1B,WAAW,MAAM,WAAM,cAAmE;AACxF,cAAI,oBAAoB,GAAG;AACzB,8BAAkB,MAAM;UAC1B;AACA,8BAAoB,MAAM;QAC5B,WAAW,MAAM,WAAM,aAAkE;AACvF,2BAAiB,MAAM;QACzB,WAAW,MAAM,WAAM,cAAmE;AACxF,cAAI,mBAAmB,GAAG;AACxB,6BAAiB,MAAM;UACzB;AACA,6BAAmB,MAAM;QAC3B;AACA,gBAAQ,MAAM;MAChB;AACA,YAAM,SAAqC,CAAA;AAC3C,0BACI,QAAQ,QAAQ,IAAI,kBAAkB,gBAAgB,mBAAmB,iBAAiB,aAAa;AAC3G,aAAO;IACT;AAEA,UAAM,WAAW,KAAK,aAAa,eAAc;AACjD,UAAM,QAAQ;;;;;;AAOd,eAAW,QAAQ,OAAO;AACxB,YAAM,UAAU,SAAS,IAAI,IAAI;AACjC,UAAI,SAAS;AACX,cAAM,SAAS,iBAAiB,OAAO;AACvC,eAAO;MACT;IACF;AAEA,WAAO,CAAA;EACT;EAEQ,oBAAiB;AACvB,SAAK,aAAa,UAAU,IAAI,oCAAoC;AACpE,SAAK,aAAa,aAAa,SAAS,GAAiB,oBAAK,qBAAqB,CAAC,EAAE;AACtF,UAAM,aAAa,KAAK,mCAAkC;AAC1D,SAAK,kBAAkB,UAAU;EACnC;EAEQ,wBAAqB;AAC3B,UAAM,eAAe,KAAK,aAAa,YAAY,MAAM,2CAA2C;AACpG,IAAG,aAAQ,gBAAgB,aAAa,YAAY,IAAI,GAAGC,aAAWF,YAAU,OAAO,CAAC;AACxF,IAAG,aAAQ,gBAAgB,aAAa,YAAY,IAAI,GAAGE,aAAWF,YAAU,cAAc,CAAC;AAC/F,IAAG,aAAQ,gBAAgB,aAAa,YAAY,IAAI,GAAGE,aAAWF,YAAU,QAAQ,CAAC;EAC3F;EAEQ,aAAU;AAChB,UAAM,OAAO,KAAK,aAAa,qBAAqB,IAAI;AACxD,WAAO,KAAK,CAAC,GAAG;AACd,UAAI,KAAK,CAAC,EAAE,YAAY;AACtB,aAAK,CAAC,EAAE,WAAW,YAAY,KAAK,CAAC,CAAC;MACxC;IACF;AACA,SAAK,OAAO,CAAA;EACd;EAEQ,kBAAkB,YAAsC;AAC9D,SAAK,mBAAmB;AACxB,SAAK,WAAU;AACf,SAAK,sBAAqB;AAC1B,UAAM,iBAAiB;AACvB,QAAI,eAAe,WAAW,GAAG;AAC/B;IACF;AAEA,UAAM,aAAa,eAAe,IAAI,OAAK,EAAE,KAAK;AAClD,UAAM,WAAW,eAAe,IAAI,OAAK,EAAE,GAAG;AAC9C,UAAM,YAAY,WAAW,OAAO,CAAC,GAAG,MAAM,KAAK,IAAI,GAAG,CAAC,CAAC;AAC5D,UAAM,UAAU,SAAS,OAAO,CAAC,GAAG,MAAM,KAAK,IAAI,GAAG,CAAC,CAAC;AACxD,UAAM,QAAQ,OAAO,UAAU;AAE/B,eAAW,SAAS,gBAAgB;AAClC,YAAM,YAAY,MAAM;AAExB,YAAM,OAAQ,SAAS,MAAM,QAAQ;AACrC,YAAM,QAAS,SAAS,UAAU,MAAM;AAExC,YAAM,KAAK,KAAK,aAAa,YAAY,MAAM,gCAAgC;AAC/E,SAAG,aAAa,SAAS,GAAiB,wBAAS,iBAAiB,EAAE,MAAM;QAC1D,OAAO;QACP,SAAS;OACV,CAAC,EAAE;AACpB,WAAK,KAAK,KAAK,EAAE;AACjB,YAAM,0BAA0B,GAAG,YAAY,IAAI;AACnD,MAAG,aAAQ,gBAAgB,yBAAyB,MAAM,MAAM,EAAE;AAClE,8BAAwB,UAAU,IAAI,4CAA4C;AAClF,8BAAwB,aAAa,YAAY,GAAG;AACpD,8BAAwB,aAAa,QAAQ,QAAQ;AACrD,8BAAwB,iBAAiB,SAAS,CAAC,UAAgB;AACjE,aAAK,QAAQ,KAAK;MACpB,CAAC;AACD,8BAAwB,aAAa,SAAS,GAAiB,sBAAO,aAAa,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC,EAAE;AAC3G,MAAG,eAAU,WAAW,yBAAyB,KAAK;AACtD,YAAM,wBAAwB,GAAG,YAAY,IAAI;AACjD,MAAG,aAAQ,gBAAgB,uBAAuB,SAAS;AAC3D,YAAM,eAAe,GAAG,YAAY,IAAI,EAAE,YAAY,OAAO,kCAAkC;AAE/F,YAAM,MAAM,aAAa,YAAY,QAAQ,sCAAsC,UAAU,YAAW,CAAE;AAE1G,UAAI,MAAM,OAAO,OAAO;AACxB,UAAI,MAAM,QAAQ,QAAQ;AAC1B,UAAI,cAAc;AAElB,WAAK,uBAAuB,IAAI,KAAK;IACvC;EACF;;;;EAKQ,uBAAuB,IAAiB,OAA+B;AAC7E,UAAM,WAAW,KAAK,aAAa,YAAY,MAAM,0CAA0C;AAC/F,aAAS,UAAU,IAAI,oDAAoD;AAC3E,UAAM,gBAAgB,SAAS,YAAY,IAAI;AAC/C,kBAAc,UAAU;AACxB,UAAM,YAAa,IAAI,KAAK,MAAM,KAAK,EAAG,YAAW;AACrD,IAAG,aAAQ,gBAAgB,cAAc,YAAY,MAAM,GAAGE,aAAWF,YAAU,YAAY,EAAC,KAAK,UAAS,CAAC,CAAC;AAChH,aAAS,WAAW;AAEpB,UAAM,SAAS,KAAK,aAAa,YAAY,MAAM,0CAA0C;AAC7F,WAAO,UAAU,IAAI,oDAAoD;AACzE,UAAM,cAAc,OAAO,YAAY,IAAI;AAC3C,gBAAY,UAAU;AACtB,UAAM,UAAW,IAAI,KAAK,MAAM,GAAG,EAAG,YAAW;AACjD,IAAG,aAAQ,gBAAgB,YAAY,YAAY,MAAM,GAAGE,aAAWF,YAAU,UAAU,EAAC,KAAK,QAAO,CAAC,CAAC;AAC1G,WAAO,WAAW;AAElB,OAAG,iBAAiB,WAAW,CAAC,UAAgB;AAC9C,WAAK,UAAU,OAAO,UAAU,MAAM;IACxC,CAAC;AAED,OAAG,iBAAiB,SAAS,CAAC,UAAgB;AAC5C,WAAK,QAAQ,OAAO,UAAU,MAAM;IACtC,CAAC;EACH;EAEQ,OAAO,UAAmB,QAAiB,QAAiB,UAAiB;AACnF,QAAI,OAAO,UAAU,SAAS,4CAA4C,GAAG;AAC3E,eAAS,UAAU,OAAO,oDAAoD;AAC9E,eAAS,UAAU,OAAO,mDAAmD;AAC7E,aAAO,UAAU,OAAO,oDAAoD;AAC5E,aAAO,UAAU,OAAO,mDAAmD;AAC3E,MAAG,eAAU,WAAW,QAAQ,CAAC,QAAQ;IAC3C;EACF;EAEQ,QAAQ,OAAY;AAC1B,UAAM,SAAS,MAAM;AACrB,QAAI,CAAC,QAAQ;AACX;IACF;AACA,UAAM,KAAK,OAAO;AAClB,QAAI,CAAC,IAAI;AACP;IACF;AAEA,SAAK,mBAAmB,KAAK,KAAK,QAAQ,EAAE;EAC9C;EAEQ,UAAU,OAAc,UAAuB,QAAmB;AACxE,QAAI,CAAC,MAAM,QAAQ;AACjB;IACF;AACA,UAAM,SAAsB,MAAM;AAClC,UAAM,gBAAgB;AACtB,UAAM,WAAW,OAAO,aAAa,cAAc,MAAM;AAEzD,QAAI,cAAc,QAAQ,WAAW,cAAc,QAAQ,KAAK;AAC9D,WAAK,OAAO,UAAU,QAAQ,QAAQ,QAAQ;AAC9C,YAAM,eAAc;AACpB;IACF;AACA,QAAK,CAAC,YAAY,cAAc,QAAQ,gBAAkB,YAAY,cAAc,QAAQ,aAAc;AACxG,WAAK,OAAO,UAAU,QAAQ,QAAQ,QAAQ;AAC9C,YAAM,eAAc;AACpB;IACF;AACA,QAAI,cAAc,QAAQ,aAAa;AACrC,UAAI,KAAK,oBAAoB,GAAG;AAC9B,aAAK,cAAa;MACpB,OAAO;AACL,aAAK,eAAc;MACrB;AACA,YAAM,eAAc;IACtB;AACA,QAAI,cAAc,QAAQ,WAAW;AACnC,UAAI,KAAK,oBAAoB,GAAG;AAC9B,aAAK,kBAAiB;MACxB,OAAO;AACL,aAAK,cAAa;MACpB;AACA,YAAM,eAAc;IACtB;EACF;EAEQ,SAAS,KAAwB;AACvC,QAAI,MAAM,CAAC,EAAE,MAAK;EACpB;EAEQ,QAAQ,KAAwB;AACtC,QAAI,MAAM,CAAC,EAAE,KAAI;EACnB;EAEQ,iBAAc;AACpB,QAAI,KAAK,KAAK,WAAW,GAAG;AAC1B;IACF;AACA,SAAK,mBAAmB;AACxB,SAAK,SAAS,KAAK,KAAK,CAAC,CAAC;EAC5B;EAEQ,gBAAa;AACnB,QAAI,KAAK,KAAK,WAAW,GAAG;AAC1B;IACF;AACA,SAAK,mBAAmB,KAAK,KAAK,SAAS;AAC3C,SAAK,SAAS,KAAK,KAAK,KAAK,gBAAgB,CAAC;EAChD;EAEQ,gBAAa;AACnB,QAAI,KAAK,KAAK,WAAW,GAAG;AAC1B;IACF;AACA,UAAM,mBAAmB,KAAK;AAC9B,SAAK;AACL,QAAI,KAAK,oBAAoB,KAAK,KAAK,QAAQ;AAC7C,WAAK,mBAAmB;IAC1B;AACA,SAAK,QAAQ,KAAK,KAAK,gBAAgB,CAAC;AACxC,SAAK,SAAS,KAAK,KAAK,KAAK,gBAAgB,CAAC;EAChD;EAEQ,oBAAiB;AACvB,QAAI,KAAK,KAAK,WAAW,GAAG;AAC1B;IACF;AACA,UAAM,mBAAmB,KAAK;AAC9B,SAAK;AACL,QAAI,KAAK,mBAAmB,GAAG;AAC7B,WAAK,mBAAmB,KAAK,KAAK,SAAS;IAC7C;AACA,SAAK,QAAQ,KAAK,KAAK,gBAAgB,CAAC;AACxC,SAAK,SAAS,KAAK,KAAK,KAAK,gBAAgB,CAAC;EAChD;EAEQ,QAAQ,OAAc,UAAmB,QAAe;AAC9D,UAAM,KAAK,MAAM;AACjB,QAAI,CAAC,IAAI;AACP;IACF;AAEA,UAAM,WAAW,GAAG,aAAa,cAAc,MAAM;AACrD,SAAK,OAAO,UAAU,QAAQ,IAAI,QAAQ;AAC1C,UAAM,eAAc;EACtB;EAEA,UAAO;AACL,UAAM,aAAa,KAAK,mCAAkC;AAC1D,SAAK,kBAAkB,UAAU;EACnC;;;;AHnVF,IAAMG,cAAY;;;;EAIhB,gCAAgC;;;;EAIhC,gBAAgB;;;;EAIhB,6BAA6B;;;;EAI7B,kBAAkB;;;;EAIlB,+BAA+B;;;;;EAK/B,mBAAmB;;;;EAInB,6BAA6B;;;;EAI7B,iBAAiB;;;;;EAKjB,QAAQ;;;;EAIR,yBAAyB;;;;EAIzB,YAAY;;;;EAIZ,QAAQ;;;;EAIR,QAAQ;;;;EAIR,SAAS;;;;;EAKT,YAAY;;;;;;EAMZ,UAAU;;;;EAIV,YAAY;;;;EAIZ,SAAS;;;;EAIT,cAAc;;;;EAId,iBAAiB;;;;;EAKjB,qBAAqB;;;;;;EAMrB,WAAW;;;;EAIX,SAAS;;;;;EAKT,UAAU;;;;;;EAMV,kBAAkB;;;;EAIlB,YAAY;;;;EAIZ,aAAa;;;;;;;EAOb,cAAc;;;;;EAKd,oBAAoB;;;;;EAKpB,kBAAkB;;;;EAIlB,aAAa;;;;;EAKb,SAAS;;;;;EAKT,OAAO;;;;EAIP,qBAAqB;;AAEvB,IAAMC,SAAY,YAAK,kBAAkB,4CAA4CD,WAAS;AAC9F,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AACpE,IAAI,+BAA+B;AAC5B,IAAM,kCAAkC,CAAC,WAAyB;AACvE,iCAA+B;AACjC;AAEM,IAAO,qBAAP,cAAqC,YAAO,KAAI;EAEpD;EACiB;EACA;EACT;EACA;EACS;EAEA;EAGjB,cAAA;AACE,UAAM;MACJ,OAAO,GAAiB,oBAAK,iBAAiB,CAAC;MAC/C,cAAc;KACf;AACD,SAAK,oBAAoB,8BAAwB;AAGjD,SAAK,qBAAqB,IAAO,gBAAW,WAAgB,YAAK,aAAa,iBAAiB,CAAC;AAChG,SAAK,mBAAmB,kBAAkB,KAAK;AAC/C,SAAK,eAAe,UAAU,IAAI,qBAAqB;AACvD,SAAK,mBAAmB,KAAK,KAAK,cAAc;AAChD,SAAK,mBAAmB,QAAQ,UAAU,IAAI,6BAA6B;AAC3E,SAAK,mBAAmB,QAAQ,aAAa,SAAS,GAAiB,uBAAQ,aAAa,CAAC,EAAE;AAE/F,SAAK,UAAU,KAAK,mBAAmB,cAAa;AAEpD,SAAK,WAAW,oBAAI,IAAG;AAEvB,SAAK,UAAU;AACf,SAAK,wBAAwB;AAE7B,SAAK,wBAAwB,oBAAI,QAAO;AAExC,UAAM,YAAY,KAAK,eAAe,YAAY,OAAO,8BAA8B;AACvF,cAAU,aAAa,SAAS,GAAiB,uBAAQ,cAAc,CAAC,EAAE;AAE1E,UAAM,aAAa,IAAO,gBAAW,WAAU;AAC/C,eAAW,iBAAiB,KAAK;AACjC,eAAW,KAAK,SAAS;AACzB,UAAM,gBAAgB,WAAW,cAAcC,aAAWF,YAAU,8BAA8B,CAAC;AACnG,UAAM,mBAAmB,cAAc,UAAS;AAChD,UAAM,YACC,cACE,2JACGE,aAAWF,YAAU,mBAAmB,CAAC;AACrD,cAAU,aAAa,SAAS,GAAiB,oBAAK,UAAU,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC,EAAE;AACxF,SAAK,gBAAgB,WAAW,WAAQ;AACtC,YAAM,aAAiB,oBAAc,cAAc,SAAQ,EAAG,WAAU;AACxE,oBACI,KAAK,WAAW,YAAW,EAAG,oBAAoB,EAAC,KAAK,4CAA2C,CAAC;AACxG,YAAM,QAAQ,IAAI;IACpB,CAAC;AACD,qBAAiB,YAAY,SAAS;AAEtC,SAAK,QAAQ,kBACQ,mCAAkB,kBAAiB,EAAG,6BAA4B,CAAE;AACzF,UAAM,wBACK,iBAAS,SAAS,SAAQ,EAAG,cAAc,mCAAmC,KAAK;AAC9F,0BAAsB,SAASE,aAAWF,YAAU,cAAc,CAAC;AACnE,UAAM,cACF,IAAO,aAAQ,uBAAuB,uBAAuBE,aAAWF,YAAU,2BAA2B,CAAC;AAClH,SAAK,QAAQ,kBAAkB,WAAW;AAC1C,UAAM,6BACK,iBAAS,SAAS,SAAQ,EAAG,cAAc,yBAAyB,KAAK;AACpF,+BAA2B,SAASE,aAAWF,YAAU,gBAAgB,CAAC;AAC1E,UAAM,oBAAoB,IAAO,aAAQ,uBACrC,4BAA4BE,aAAWF,YAAU,6BAA6B,CAAC;AACnF,SAAK,QAAQ,kBAAkB,iBAAiB;AAEhD,SAAK,iBAAiB,oBAAI,IAAG;AAC7B,IAAI,oBAAc,cAAc,SAAQ,EAAG,cAAkB,2BAAqB,sBAAsB,IAAI;AAC5G,SAAK,qBAAoB;EAC3B;EAEA,WAAW,sBAAmE;AAC5E,QAAI,qBAAqB,OAAM,MAAW,oBAAc,cAAc,SAAQ,EAAG,kBAAiB,GAAI;AACpG;IACF;AACA,SAAK,UAAU;AACf,SAAK,wBACA,qBAAqB,OAAM,EAAG,MAAU,4BAAsB,qBAAqB;AAGxF,eAAW,gBAAgB,KAAK,QAAQ,cAAa,EAAG,OAAM,GAAI;AAChE,WAAK,mBAAmB,YAAY;IACtC;AAEA,SAAK,eAAe,IAAI,sBAAsB;MAC5C,KAAK,QAAQ,iBAAgB,uBAC6B,KAAK,qBAAqB,IAAI;MACxF,KAAK,QAAQ,iBAAgB,uBAC6B,KAAK,qBAAqB,IAAI;MACxF,KAAK,sBAAsB,iBACnB,4BAAsB,OAAO,qBAAqB,KAAK,yBAAyB,IAAI;MAC5F,KAAK,sBAAsB,iBACnB,4BAAsB,OAAO,uBAAuB,KAAK,yBAAyB,IAAI;KAC/F;EACH;EAEA,aAAa,sBAAmE;AAC9E,QAAI,CAAC,KAAK,WAAW,KAAK,YAAY,sBAAsB;AAC1D;IACF;AAEA,IAAO,oBAAY,qBAAqB,KAAK,eAAe,IAAI,oBAAoB,KAAK,CAAA,CAAE;AAC3F,SAAK,eAAe,OAAO,oBAAoB;AAC/C,SAAK,UAAU;AACf,SAAK,wBAAwB;EAC/B;EAEQ,aAAa,cAAgE;AACnF,UAAM,WAAW,aAAa,eAAc;AAE5C,QAAI,YAA8B;AAElC,UAAM,SAAS,SAAS;MAAG;;IAAA;AAC3B,UAAM,aAAa,SAAS;MAAG;;IAAA;AAC/B,UAAM,UAAU,SAAS;MAAG;;IAAA;AAC5B,UAAM,YAAY,SAAS;MAAG;;IAAA;AAE9B,QAAI,QAAQ;AACV,kBAAY,OAAO;IACrB,WAAW,SAAS;AAClB,kBAAY,QAAQ;IACtB,WAAW,YAAY;AACrB,kBAAY,WAAW;IACzB,WAAW,WAAW;AACpB,kBAAY,UAAU;IACxB;AAEA,WAAO,aAAa;EACtB;EAEQ,0BAAuB;AAC7B,QAAI,UAAU;AACd,UAAM,gBAAgB,CAAA;AACtB,eAAWG,YAAW,KAAK,SAAS,OAAM,GAAI;AAC5C,YAAM,eAAe,KAAK,uBAAuBA,SAAQ,aAAa,cAAc;AACpF,gBAAU,WAAW,iBAAiB,KAAK;AAC3C,UAAIA,SAAQ,QAAQ,aAAY,MAAO,cAAc;AACnD,sBAAc,KAAKA,QAAO;MAC5B;IACF;AAEA,eAAWA,YAAW,eAAe;AACnC,YAAM,eAAeA,SAAQ;AAC7B,WAAK,2BAA2B,YAAY;AAC5C,WAAK,mBAAmB,cAAc,IAAI;IAC5C;AAEA,SAAK,mBAAmB,aAAa,CAAC,UAAU,aAAY;AAC1D,YAAM,gBAAgB,KAAK,sBAAsB,IAAI,QAAQ;AAC7D,YAAM,gBAAgB,KAAK,sBAAsB,IAAI,QAAQ;AAC7D,YAAM,aAAa,gBAAgB,KAAK,aAAa,aAAa,IAAI;AACtE,YAAM,aAAa,gBAAgB,KAAK,aAAa,aAAa,IAAI;AAEtE,aAAO,aAAa;IACtB,CAAC;AAED,eAAWA,YAAW,KAAK,SAAS,OAAM,GAAI;AAC5C,UAAIA,SAAQ,QAAQ,aAAY,MAAO,KAAK,sBACxC,KAAK,sBAAsBA,SAAQ,YAAY,GAAG;AACpD,QAAAA,SAAQ,QAAQ,WAAU;MAC5B,OAAO;AACL,QAAAA,SAAQ,QAAQ,WAAU;MAC5B;IACF;AACA,SAAK,eAAe,UAAU,OAAO,8BAA8B,QAAQ,OAAO,CAAC;AACnF,SAAK,qBAAoB;EAC3B;EAEQ,oBACJ,OAA8F;AAChG,SAAK,mBAAmB,MAAM,IAAI;AAClC,SAAK,gBAAe;EACtB;EAEQ,kBAAe;AACrB,QAAI,CAAC,KAAK,WAAW,CAAC,KAAK,uBAAuB;AAChD;IACF;AACA,QAAI,6BAA6B;AACjC,UAAM,kBAAkB,IAAI,IAAY,KAAK,sBAAsB,gBAAe,CAAE;AACpF,eAAW,gBAAgB,KAAK,QAAQ,cAAa,EAAG,OAAM,GAAI;AAChE,UAAI,CAAC,gBAAgB,IAAI,aAAa,cAAc,KAAK,CAAC,KAAK,sBAAsB,YAAY,GAAG;AAClG;MACF;AACA,UAAI,CAAC,aAAa,aAAY,GAAI;AAChC,qCAA6B;AAC7B;MACF;IACF;AAEA,QAAI,CAAC,4BAA4B;AAC/B;IACF;AAEA,eAAW,gBAAgB,KAAK,QAAQ,cAAa,EAAG,OAAM,GAAI;AAChE,YAAM,UAAU,gBAAgB,IAAI,aAAa,cAAc,KAAK,KAAK,sBAAsB,YAAY;AAC3G,UAAI,CAAC,WAAW,aAAa,aAAY,GAAI;AAC3C,aAAK,2BAA2B,YAAY;MAC9C;IACF;EACF;EAEQ,uBAAuB,QAAc;AAC3C,QAAI,KAAK,0BACJ,KAAK,sBAAsB,gBAAe,EAAG,SAAS,MAAM,KAC5D,KAAK,sBAAsB,8BAA6B,MAAO,SAAS;AAC3E,aAAO,KAAK;IACd;AACA,WAAO;EACT;EAEQ,mBAAmB,cAAkE,YAAoB;AAE/G,QAAIA,WAAU,KAAK,SAAS,IAAI,YAAY;AAC5C,QAAI,CAACA,UAAS;AACZ,YAAM,QAAQ,aAAa;AAC3B,YAAM,aAAa,KAAK,uBAAuB,aAAa,cAAc;AAC1E,UAAI,CAAC,YAAY;AACf;MACF;AACA,YAAM,YAAY,WAAW,cAAc,KAAK;AAChD,gBAAU,gBAAgBD,aAAWF,YAAU,mBAAmB,EAAC,KAAK,MAAK,CAAC,CAAC;AAC/E,WAAK,sBAAsB,IAAI,WAAW,YAAY;AACtD,MAAAG,WAAU,IAAI,QAAS,KAAK,SAA2D,WAAW,YAAY;AAC9G,WAAK,SAAS,IAAI,cAAcA,QAAO;IACzC;AACA,QAAI,YAAY;AACd;IACF;AACA,SAAK,wBAAuB;AAC5B,IAAAA,SAAQ,eAAc;EACxB;EAEQ,oBACJ,OAA8F;AAChG,SAAK,2BAA2B,MAAM,IAAI;EAC5C;EAEQ,2BAA2B,cAAgE;AACjG,UAAMA,WAAU,KAAK,SAAS,IAAI,YAAY;AAC9C,QAAIA,UAAS;AACX,MAAAA,SAAQ,QAAQ,OAAM;IACxB;AACA,SAAK,SAAS,OAAO,YAAY;AACjC,SAAK,wBAAuB;EAC9B;EAEQ,sBAAsB,cAAgE;AAC5F,QAAI,CAAC,aAAa,UAAU;AAC1B,aAAO;IACT;AACA,WAAO;EACT;EAEQ,uBAAoB;AAC1B,SAAK,eAAe,UAAU,OAAO,6BAA6B,KAAK,SAAS,SAAS,CAAC;EAC5F;;AAGI,IAAO,UAAP,MAAc;EACV;EACR;EACA;EACQ;EACS;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACT;EACS;EACA;EACA;EACA;EACT;EACA;EAER,YACI,SAAwDA,UACxD,cAAgE;AAClE,SAAK,UAAU;AACf,SAAK,UAAUA;AACf,SAAK,eAAe;AACpB,SAAK,cAAc;AACnB,SAAK,8BAAqC,iBAAS,SAAS,SAAQ,EAAG,mBACnE,aAAaD,aAAWF,YAAU,2BAA2B,CAAC;AAClE,SAAK,qBACM,iBAAS,SAAS,SAAQ,EAAG,mBAAmB,iBAAiB,wBAAwB;AACpG,SAAK,6BACM,iBAAS,SAAS,SAAQ,EAAG,mBAAmB,0BAA0B,wBAAwB;AAE7G,SAAK,kBAAkB,IAAI,6BAA6B,YAAY;AACpE,SAAK,aAAa,IAA0B,+CAAwB,wBAAuB;AAC3F,SAAK,kBAAkB,IAAY,gBAAO,OAAM;AAChD,SAAK,gBAAgB,OAAO;MAC1B,SAAO;MACP,OAAOE,aAAWF,YAAU,eAAe;MAC3C,cAAc;;AAEhB,SAAK,gBAAgB,cAAcE,aAAWF,YAAU,eAAe;AACvE,SAAK,gBAAgB,iBAAiB,SAAS,KAAK,uBAAuB,KAAK,IAAI,CAAC;AACrF,SAAK,QAAQ,qBAAqB,KAAK,eAAe;AACtD,SAAK,eAAkB,aAAQ,iBAC3BE,aAAWF,YAAU,MAAM,GAAG,KAAK,oBAAoB,KAAK,IAAI,GAChE,EAAC,SAAO,QAA+B,OAAOE,aAAWF,YAAU,MAAM,GAAG,cAAc,SAAQ,CAAC;AACvG,SAAK,QAAQ,qBAAqB,KAAK,YAAY;AACnD,SAAK,eACE,aAAQ,iBAAiBE,aAAWF,YAAU,UAAU,GAAG,KAAK,wBAAwB,KAAK,IAAI,GAAG;MACrG,SAAO;MACP,OAAOE,aAAWF,YAAU,uBAAuB;MACnD,cAAc;KACf;AACL,SAAK,QAAQ,qBAAqB,KAAK,YAAY;AAGnD,SAAK,cAAc,KAAK,WAAW,KAAK,QAAQ,YAAYE,aAAWF,YAAU,MAAM,CAAC,CAAC;AACzF,SAAK,cAAc,KAAK,WAAW,KAAK,QAAQ,YAAYE,aAAWF,YAAU,MAAM,CAAC,CAAC;AACzF,SAAK,eAAe,KAAK,WAAW,KAAK,QAAQ,YAAYE,aAAWF,YAAU,OAAO,CAAC,CAAC;AAC3F,SAAK,4BACDE,aAAWF,YAAU,UAAU,GAAG,KAAK,4BAA4B,IAAG,GAAIE,aAAWF,YAAU,QAAQ,GACvG,KAAK,KAAK,KAAK,IAAI,GAAG,cAAc;AACxC,SAAK,4BACDE,aAAWF,YAAU,UAAU,GAAG,KAAK,mBAAmB,IAAG,GAAIE,aAAWF,YAAU,OAAO,GAC7F,KAAK,KAAK,KAAK,IAAI,GAAG,UAAU;AACpC,SAAK,4BACDE,aAAWF,YAAU,YAAY,GAAG,KAAK,2BAA2B,IAAG,GACvEE,aAAWF,YAAU,eAAe,GAAG,SAAO,KAAK,aAAa,GAAG,GAAG,mBAAmB;AAC7F,SAAK,uBAAsB;AAC3B,SAAK,uBAAsB;AAE3B,SAAK,kBAAkB,oBAAI,IAAG;AAC9B,SAAK,YAAY,IAAW,kBAAU,UAAU,GAAG;EACrD;EAEQ,4BACJ,OAAe,cAAsB,aAAqB,UAC1D,cAAoB;AACtB,UAAM,OACF,KAAK,WAAW,KAAK,QAAQ,YAAY,KAAK,CAAC,EAAE,YAAY,QAAQ,mCAAmC;AAC5G,UAAM,SAAY,aAAQ,YAAY,gDAAgD;AACtF,WAAO,aAAa,SAAS,GAAiB,yBAAS,EAAG,MAAM,EAAC,QAAQ,KAAI,CAAC,EAAE,QAAQ,YAAY,CAAC,EAAE;AACvG,SAAK,YAAY,MAAM;AACvB,UAAM,SAAY,aAAQ,iBAAiB,OAAO,QAAW,EAAC,aAAY,CAAC;AAC3E,WAAO,OAAO;AACd,SAAK,YAAY,MAAM;AAEvB,WAAO,QAAQ;AACf,WAAO,cAAc;AACrB,IAAG,eAAU,SAAS,QAAQ,KAAK;AAEnC,SAAK,iBAAiB,UAAU,CAAC,MAAY;AAC3C,eAAS,OAAO,SAAS,EAAE;AAC3B,QAAE,QAAQ,IAAI;IAChB,CAAC;EACH;EAEA,iBAAc;AACZ,QAAI,8BAA8B;AAChC,WAAK,KAAK,OAAM;AAChB;IACF;AACA,SAAK,KAAK,UAAU,SAAS,KAAK,OAAO,KAAK,IAAI,CAAC;EACrD;EAEQ,WAAW,eAAwB,MAAc,OAAa;AACpE,UAAM,kBAAkB,cAAc,YAAY,OAAO,wBAAwB;AACjF,oBAAgB,YAAY,OAAO,IAAI;AACvC,UAAM,eAAe,gBAAgB,YAAY,QAAQ,+BAA+B;AACxF,iBAAa,cAAc;AAC3B,IAAG,eAAU,YAAY,YAAY;AACrC,WAAO;EACT;EAEQ,mBAAmB,SAAsD;AAC/E,SAAK,aAAa,eAAc;AAChC,SAAK,QAAQ,gBAAgBE,aAAWF,YAAU,OAAO,GAAG,QAAQ,QAAQ,kBAAkB,MAAM,CAAC;AACrG,eAAW,UAAU,QAAQ,mBAAmB;AAC9C,YAAM,kBAAkB,KAAK,aAAa,YAAY,OAAO,uBAAuB;AACpF,YAAM,OAAO,KAAK,gBAAgB,IAAI,MAAM;AAC5C,UAAI,MAAM;AACR,aAAK,iBAAiB,iBAAiB,IAAI;MAC7C;AACA,WAAK,KAAK,QAAQ,OAAM,EACnB,YAAW,EACX,qBAAqB,EAAC,UAAU,OAAM,CAAC,EACvC,KAAK,KAAK,aAAa,KAAK,MAAM,eAAe,CAAC;IACzD;EACF;EAEQ,kBAAkB,SAAsD;AAC9E,SAAK,YAAY,eAAc;AAC/B,UAAM,WAAkB,kBAAU,UAAU,YAAY,QAAQ,SAAS;AACzE,UAAM,OAAO,KAAK,YAAY,YAAY,OAAO,6BAA6B;AAC9E,UAAMI,QAAkB,sBAAU,UAAU,WACxC,QAAQ,WAAY,EAAC,MAAM,SAAQ,CAA4C;AACnF,IAAAA,MAAK,WAAW;AAChB,IAAAA,MAAK,aAAa,SAAS,GAAiB,oBAAK,iBAAiB,EAAE,MAAM,EAAC,OAAO,KAAI,CAAC,CAAC,EAAE;AAC1F,SAAK,YAAYA,KAAI;AACrB,QAAI,KAAK,aAAa,OAAO,QAAQ;AACnC,YAAM,cAAiB,aAAQ,gBAAgB;QAC7C,OAAO,OAAO,KAAK,aAAa,OAAO,MAAM;QAC7C,UAAU;QACV,OAAO;OACR;AACD,kBAAY,UAAU,IAAI,iBAAiB,MAAM;AACjD,kBAAY,WAAW;AACvB,MAAG,eAAU,SACT,aAAaF,aAAWF,YAAU,qBAAqB,EAAC,KAAK,KAAK,aAAa,OAAO,OAAM,CAAC,CAAC;AAClG,WAAK,gBAAgB,aAAa,MAAa,gBAAQ,QAAQ,SAAQ,EAAG,KAAI,CAAE;AAChF,WAAK,YAAY,WAAW;IAC9B;AACA,QAAI,QAAQ,uBAAuB,QAAW;AAC5C,WAAK,YAAY,YAAY,OAAO,6BAA6B,EAAE,cAC/DE,aAAWF,YAAU,WAAW,EAAC,KAAK,IAAI,KAAK,QAAQ,qBAAqB,GAAI,EAAE,eAAc,EAAE,CAAC;IACzG;EACF;EAEQ,SAAM;AACZ,UAAM,cAAc,KAAK,aAAa,YAAW;AACjD,QAAI,gBAAgB,KAAK,aAAa;AACpC,aAAO,QAAQ,QAAO;IACxB;AACA,SAAK,cAAc;AAEnB,SAAK,QAAQ,sBAAsB,KAAK,aAAa,SAAS;AAE9D,UAAM,WAAW,KAAK,aAAa,eAAc;AACjD,UAAM,WAAW,KAAK,aAAa;AACnC,UAAM,QAAQ,KAAK,aAAa,YAAYE,aAAWF,YAAU,UAAU,EAAC,KAAK,SAAQ,CAAC,IAAI;AAC9F,SAAK,QAAQ,SAAS,KAAK;AAE3B,UAAM,SAAS,SAAS;MAAG;;IAAA;AAC3B,UAAM,UAAU,SAAS;MAAG;;IAAA;AAC5B,UAAM,aAAa,SAAS;MAAG;;IAAA;AAC/B,UAAM,YAAY,SAAS;MAAG;;IAAA;AAE9B,SAAK,YAAY,eAAc;AAC/B,UAAM,gBAAgB,KAAK,YAAY,YAAY,OAAO,8BAA8B;AACxF,kBAAc,YAAY,OAAO,kCAAkC;AAEnE,QAAI,QAAQ;AACV,WAAK,kBAAkB,MAAM;AAC7B,YAAM,yBACE,2BAAqB,qBAAqB,cAAc,OAAO,aAAa,aAAa,EAAC;AAElG,YAAM,cAAc,KAAK,WACrB,eAAe,gCACfE,aAAWF,YAAU,kBAAkB,EAAC,KAAK,OAAO,IAAI,KAAK,uBAAsB,CAAC,CAAC;AAEzF,UAAI,OAAO,UAAS,KAAM,OAAO,WAAU,GAAI;AAC7C,cAAM,aAAgB,aAAQ,iBAC1BE,aAAWF,YAAU,UAAU,GAAG,KAAK,kBAAkB,KAAK,MAAM,OAAO,EAAE,GAAG,EAAC,cAAc,OAAM,CAAC;AAC1G,oBAAY,YAAY,UAAU;MACpC,WAAW,OAAO,YAAW,GAAI;AAC/B,cAAM,cAAiB,aAAQ,iBAC3BE,aAAWF,YAAU,WAAW,GAAG,KAAK,mBAAmB,KAAK,IAAI,GAAG,EAAC,cAAc,QAAO,CAAC;AAClG,oBAAY,YAAY,WAAW;MACrC;AACA,WAAK,mBAAmB,MAAM;AAC9B,WAAK,uBAAsB;IAC7B,WAAW,WAAW;AACpB,WAAK,kBAAkB,SAAS;AAChC,WAAK,WACD,eAAe,mCAAmCE,aAAWF,YAAU,cAAc,EAAC,KAAK,UAAU,GAAE,CAAC,CAAC;AAC7G,WAAK,mBAAmB,SAAS;IACnC;AAEA,QAAI,SAAS;AACX,YAAM,eAAe,KAAK,WACtB,eAAe,iCAAiCE,aAAWF,YAAU,oBAAoB,EAAC,KAAK,QAAQ,GAAE,CAAC,CAAC;AAC/G,YAAM,oBACC,aAAQ,iBAAsB,YAAK,aAAa,aAAa,GAAG,KAAK,kBAAkB,KAAK,IAAI,GAAG;QACpG,OAAY,YAAK,aAAa,aAAa;QAC3C,cAAc;OACf;AACL,mBAAa,YAAY,iBAAiB;AAC1C,UAAI,QAAQ,uBAAuB,QAAW;AAC5C,qBAAa,YAAY,OAAO,yBAAyB,EAAE,cACvDE,aAAWF,YAAU,WAAW,EAAC,KAAK,IAAI,KAAK,QAAQ,qBAAqB,GAAI,EAAE,eAAc,EAAE,CAAC;MACzG;IACF;AACA,QAAI,YAAY;AACd,YAAM,kBAAkB,KAAK,WACzB,eAAe,oCACfE,aAAWF,YAAU,kBAAkB,EAAC,KAAK,WAAW,GAAE,CAAC,CAAC;AAChE,UAAI,WAAW,uBAAuB,QAAW;AAC/C,wBAAgB,YAAY,OAAO,yBAAyB,EAAE,cAAcE,aAAWF,YAAU,WAAW;UAC1G,KAAK,IAAI,KAAK,WAAW,qBAAqB,GAAI,EAAE,eAAc;SACnE;MACH;IACF;AAEA,SAAK,gBAAgB,QAAO;AAE5B,WAAO,QAAQ,QAAO;EACxB;EAEQ,0BAAuB;AAC7B,SAAK,QAAQ,mBAAmB,KAAK,aAAa,EAAE;EACtD;EAEQ,yBAAsB;AAC5B,SAAK,mBAAmB,KAAK,WAAW,KAAK,QAAQ,YAAYE,aAAWF,YAAU,WAAW,CAAC,CAAC;AACnG,SAAK,iBAAiB,YAAY,KAAK,gBAAgB,YAAY;EACrE;EAEQ,yBAAsB;AAC5B,UAAM,WAAW,KAAK,aAAa,eAAc;AACjD,UAAM,SAAS,SAAS;MAAG;;IAAA;AAC3B,UAAM,QAAQE,aAAWF,YAAU,OAAO;AAC1C,QAAI,QAAQ,eAAe,OAAO,YAAY,SAAS,GAAG;AAExD,UAAI,CAAC,KAAK,aAAa;AACrB,aAAK,cAAc,KAAK,WAAW,KAAK,QAAQ,YAAY,KAAK,CAAC;MACpE;AACA,UAAI,CAAC,KAAK,YAAY,kBAAkB;AACtC,aAAK,YAAY,YAAY,KAAK,UAAU;MAC9C;AACA,WAAK,WAAW,OAAO,OAAO,WAAW;IAC3C,OAAO;AAEL,WAAK,QAAQ,YAAY,KAAK;AAC9B,WAAK,cAAc;IACrB;EACF;EAEQ,sBAAmB;AACzB,SAAK,KAAK,QAAQ,mBAAmB,KAAK,aAAa,EAAE;EAC3D;EAEQ,yBAAsB;AAC5B,SAAY,iBAAS,OAAsB,wBAAS,gBAAgB,QAAQ;MAC1E;QACE,YAA2B,wBAAS,WAAW;QAC/C,aAAW;;KAEd,CAAC;AAEF,IAAK,kBAAY,YAAiB,kBAAY,OAAO,kCAAkC;EACzF;EAEQ,KAAK,MAAY;AACvB,SAAK,4BAA4B,IAAI,IAAI;AACzC,SAAK,KAAK,QAAQ,mBAAmB,KAAK,aAAa,IAAI,IAAI;EACjE;EAEQ,KAAK,KAAW;AACtB,SAAK,mBAAmB,IAAI,GAAG;AAC/B,SAAK,KAAK,QAAQ,kBAAkB,KAAK,aAAa,IAAI,KAAK,IAAI;EACrE;EAEQ,aAAa,KAAW;AAC9B,SAAK,2BAA2B,IAAI,GAAG;AACvC,SAAK,KAAK,QAAQ,0BAA0B,KAAK,aAAa,IAAI,GAAG;EACvE;EAEQ,aAAa,SAAkB,oBAAyD;AAC9F,UAAM,aAAa,mBAAmB;AACtC,QAAI,CAAC,YAAY;AACf;IACF;AACA,SAAK,gBAAgB,IAAI,WAAW,UAAU,UAAU;AACxD,SAAK,iBAAiB,SAAS,UAAU;EAC3C;EAEQ,iBAAiB,SAAkB,YAAsC;AAC/E,QAAI,WAAW,SAAS,UAAU,WAAW,SAAS,UAAU;AAC9D,YAAMK,gBAAe,QAAQ,YAAY,QAAQ,8BAA8B;AAC/E,MAAG,aAAQ,gBAAgBA,eAAcH,aAAWF,YAAU,SAAS,EAAC,KAAK,WAAW,IAAG,CAAC,CAAC;AAC7F;IACF;AACA,YAAQ,eAAc;AACtB,UAAM,eAAe,QAAQ,YAAY,QAAQ,8BAA8B;AAC/E,IAAG,aAAQ,gBAAgB,cAAc,WAAW,GAAG;AAEvD,UAAM,cAAc,IAAY,gBAAO,OAAM;AAC7C,gBAAY,OAAO;MACjB,UAAU;MACV,SAAO;MACP,MAAI;MACJ,OAAOE,aAAWF,YAAU,KAAK;MACjC,cAAc;;AAEhB,gBAAY,YAAY;AACxB,gBAAY,iBAAiB,SAAS,KAAK,eAAe,KAAK,MAAM,WAAW,QAAQ,CAAC;AACzF,YAAQ,YAAY,WAAW;EACjC;EAEQ,eAAe,UAAkC;AACvD,SAAK,KAAK,QAAQ,OAAM,EAAG,YAAW,EAAG,sBAAsB,EAAC,SAAQ,CAAC;EAC3E;EAEQ,qBAAkB;AACxB,SAAK,KAAK,QAAQ,YAAY,KAAK,aAAa,QAAQ;EAC1D;EAEQ,oBAAiB;AACvB,SAAK,KAAK,QAAQ,YAAY,KAAK,aAAa,QAAQ;EAC1D;EAEQ,kBAAkB,WAAiB;AACzC,SAAK,KAAK,QAAQ,WAAW,SAAS;EACxC;EAEQ,WAAW,WAAkB;AACnC,UAAM,aAAgB,aAAQ,+BAA+B,WAAW;MACtE,SAAS;QACP;;;QAGA;;KAEH;AACD,UAAM,iBAAiB,SAAS,cAAc,KAAK;AACnD,eAAW,YAAY,cAAc;AACrC,WAAO;EACT;;;;AI1yBF;;;;AAIA,YAAYM,cAAY;AACxB,YAAYC,YAAU;AAGtB,YAAYC,iBAAgB;;;ACR5B;;;;AAKA,YAAYC,YAAU;AACtB,YAAYC,WAAS;AAErB,YAAYC,kBAAiB;AAC7B,YAAYC,UAAQ;AACpB,YAAYC,qBAAmB;AAE/B,YAAYC,6BAA2B;;;ACPvC,IAAO,sCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAUC,YAAY,QAAQ,+BAA+B,CAAC;;;ADApE,IAAMC,cAAY;;;;;;EAMhB,iBAAiB;;;;;;;EAOjB,oBAAoB;;AAEtB,IAAMC,SAAY,YAAK,kBAAkB,iDAAiDD,WAAS;AACnG,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAEpE,SAASE,aACL,GAAgD,GAA8C;AAChG,SAAO,KAAK,UAAU,CAAC,MAAM,KAAK,UAAU,CAAC;AAC/C;AAEM,IAAO,0BAAP,cAA0C,iBAAY,YAAW;EAC5D,0BAA0B,IAA0B,gDAAwB,wBAAuB;EAC5G,UAAyD,CAAA;EACzD;EACA,aAAoC;EAEpC,cAAA;AACE;;MAAuB;;MAA8B;IAAI;AAEzD,SAAK,QAAQ,aAAa,SAAS,GAAiB,qBAAK,uBAAuB,CAAC,EAAE;AAEnF,SAAK,iBACD,IAAO,iBAAY,YAAYD,aAAWF,YAAU,eAAe,GAAGE,aAAWF,YAAU,kBAAkB,CAAC;AAClH,SAAK,eAAe,eAAe,GAAG,EAAE;AACxC,SAAK,wBAAwB,eAAe,GAAG,EAAE;AACjD,SAAK,wBAAwB,WAAW,KAAK,SAAS,KAAK,IAAI;AAE/D,SAAK,cAAc,KAAK,uBAAuB;AAC/C,SAAK,iBAAiB,KAAK,cAAc;AACzC,SAAK,YAAW;AAEhB,SAAK,+BAA8B,GAAI,iBAC/B,wBAAkB,OAAO,oBAAoB,KAAK,aAAa,IAAI;EAC7E;EAEA,iCAA8B;AAC5B,UAAM,oBAAwB,oBAAc,cAAc,SAAQ,EAAG,kBAAiB;AACtF,WAAO,mBAAmB,MAAU,wBAAkB,iBAAiB,KAAK;EAC9E;EAEA,gBAAa;AACX,WAAO,KAAK,+BAA8B,GAAI,aAAa;EAC7D;EAEA,IAAI,KAAE;AACJ,WAAO,KAAK,cAAa,GAAI,MAAM,KAAK;EAC1C;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,UAAM,UAAU,KAAK,cAAa;AAClC,QAAI,SAAS;AACX,cAAQ,oBAAoB,mCAA6B;IAC3D;EACF;EAEA,SAAS,OAAkD;AAEzD,QAAI,MAAM,gBAAgB,KAAK,IAAI;AACjC;IACF;AAGA,QAAI,KAAK,QAAQ,KAAK,OAAKG,aAAY,GAAG,KAAK,CAAC,GAAG;AACjD;IACF;AAEA,QAAI,KAAK,SAAQ,MAAE,QAAmC;AACpD,WAAK,SAAQ;IACf;AAEA,SAAK,QAAQ,KAAK,KAAK;AACvB,SAAK,wBAAwB,SAAS,KAAK;EAC7C;EAEA,cAAW;AACT,SAAK,UAAU,CAAA;AACf,SAAK,wBAAwB,SAAS,KAAK;AAC3C,SAAK,iBAAiB,KAAK,cAAc;AACzC,SAAK,YAAW;EAClB;EAEA,SAAS,OAAkD;AACzD,UAAM,WAAuB,sBAAS,SAAS,eAAe,KAAK;AACnE,aAAS,eAAe,GAAG,EAAE;AAC7B,SAAK,iBAAiB,QAAQ;EAChC;EAEA,uBAAuB,IAAyB;AAC9C,SAAK,aAAa;EACpB;EAEA,sBAAmB;AACjB,WAAO,KAAK;EACd;EAEA,uCAAoC;AAClC,WAAO,KAAK;EACd;;;;ADhHF,IAAMC,cAAY;;;;EAIhB,eAAe;;AAEjB,IAAMC,SAAY,YAAK,kBAAkB,sDAAsDD,WAAS;AACxG,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAE9D,IAAO,+BAAP,cAA4C,4BAA2B;EAClE;EACA;EAET,YAAY,gBAAgC,0BAA0B,OAAK;AACzE,UAAM,gBAAgBC,aAAWF,YAAU,aAAa,GAAG,OAAO,gBAAgB;AAClF,SAAK,mBACM,kBAAS,SAAS,SAAQ,EAAG,cAAc,qCAAqC,uBAAuB;AAClH,UAAM,oBAA+B,iBAAK,OAAO,UAAU;AAC3D,SAAK,gBAAgB,CAAC,iBAAiB,CAAC;AACxC,SAAK,OAAO,IAAI,wBAAuB;EACzC;EAEA,IAAa,UAAO;AAClB,WAAO;EACT;EAES,SAAS,gBAAiC;AACjD,UAAM,SAAS,cAAc;AAC7B,SAAK,eAAe,SAAS,KAAK,IAAI;AACtC,WAAO;EACT;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,QAAI,KAAK,iBAAiB,IAAG,GAAI;AAC/B,WAAK,OAAM;IACb;EACF;EAES,WAAQ;AACf,SAAK,iBAAiB,IAAI,IAAI;EAChC;EAES,aAAU;AACjB,SAAK,iBAAiB,IAAI,KAAK;EACjC;EAEA,SAAS,OAAkD;AACzD,SAAK,KAAK,SAAS,KAAK;EAC1B;;;;AG/DF;;;;;AAIA,YAAYG,cAAY;AACxB,YAAYC,WAAS;AAIf,IAAO,yBAAP,cAA6C,uBAAc,cAAgD;EACtG;EACA;EAET,YAAY,OAA2B,gBAAsB;AAC3D,UAAK;AACL,SAAK,SAAS;AACd,SAAK,kBAAkB;EACzB;EAEA,IAAI,iBAAc;AAChB,WAAO,KAAK;EACd;EAEA,MAAM,cAAW;AACf,WAAO,MAAM,KAAK,OAAO,aAAa,gCAAgC,EAAC,aAAa,KAAK,eAAc,CAAC,EACnG,KAAK,CAAC,EAAC,SAAQ,MAAM,QAAQ;EACpC;EAEA,MAAM,aAAU;AACd,WAAO,MAAM,KAAK,OAAO,aAAa,+BAA+B,EAAC,aAAa,KAAK,eAAc,CAAC,EAClG,KAAK,CAAC,EAAC,QAAO,MAAM,OAAO;EAClC;EAEA,MAAM,SAAS,KAAa,OAAe,iBAAwB;AACjE,UAAM,KAAK,OAAO,aAAa,6BAC3B,EAAC,aAAa,KAAK,gBAAgB,KAAK,OAAO,gBAAe,CAAC;EACrE;EAEA,MAAM,YAAY,KAAW;AAC3B,UAAM,KAAK,OAAO,aAAa,gCAAgC,EAAC,aAAa,KAAK,gBAAgB,IAAG,CAAC;EACxG;EAEA,MAAM,QAAK;AACT,UAAM,KAAK,OAAO,aAAa,iCAAiC,EAAC,aAAa,KAAK,eAAc,CAAC;EACpG;EAEA,MAAM,cAAW;AACf,UAAM,KAAK,OAAO,aAAa,gCAAgC,EAAC,aAAa,KAAK,eAAc,CAAC;EACnG;;AAsBI,IAAO,qBAAP,cAAsC,eAAS,SAAoB;EAE9D;EACT;EACS;EACT;EAEA,YAAY,QAAyB;AACnC,UAAM,MAAM;AACZ,WAAO,0BAA0B,IAAI;AACrC,SAAK,yBAAyB,OAAO,MAAU,4BAAsB,qBAAqB;AAE1F,SAAK,YAAY,oBAAI,IAAG;AACxB,SAAK,eAAe,OAAO,aAAY;AACvC,SAAK,WAAW;EAClB;EAEA,MAAM,SAAM;AACV,QAAI,KAAK,UAAU;AACjB;IACF;AAEA,SAAK,uBAAuB,iBACpB,4BAAsB,OAAO,qBAAqB,KAAK,sBAAsB,IAAI;AACzF,SAAK,uBAAuB,iBACpB,4BAAsB,OAAO,uBAAuB,KAAK,wBAAwB,IAAI;AAE7F,UAAM,KAAK,aAAa,gCAAgC,EAAC,QAAQ,KAAI,CAAC;AACtE,SAAK,eAAc;AACnB,SAAK,WAAW;EAClB;EAEA,UAAO;AACL,QAAI,CAAC,KAAK,UAAU;AAClB;IACF;AAEA,SAAK,uBAAuB,oBACpB,4BAAsB,OAAO,qBAAqB,KAAK,sBAAsB,IAAI;AACzF,SAAK,uBAAuB,oBACpB,4BAAsB,OAAO,uBAAuB,KAAK,wBAAwB,IAAI;AAE7F,SAAK,KAAK,aAAa,gCAAgC,EAAC,QAAQ,MAAK,CAAC;AACtE,SAAK,kBAAiB;AACtB,SAAK,WAAW;EAClB;EAES,UAAO;AACd,SAAK,QAAO;EACd;EAEA,iBAAc;AACZ,eAAW,kBAAkB,KAAK,uBAAuB,gBAAe,GAAI;AAC1E,WAAK,KAAK,gBAAgB,cAAc;IAC1C;EACF;EAEA,oBAAiB;AACf,eAAW,kBAAkB,KAAK,UAAU,KAAI,GAAI;AAClD,WAAK,cAAc,cAAc;IACnC;EACF;EAEA,qBAAqB,OAAkD;AACrE,SAAK,gBAAgB,MAAM,IAAI;EACjC;EAEA,gBAAgB,gBAAsB;AACpC,UAAM,uBAAuB,IAAW,mBAAU,UAAU,cAAc;AAE1E,QAAI,CAAC,qBAAqB,WAAW,qBAAqB,WAAW,UACjE,qBAAqB,WAAW,WAAW,qBAAqB,WAAW,cAAc;AAC3F;IACF;AAGA,QAAI,KAAK,UAAU,IAAI,cAAc,GAAG;AACtC;IACF;AAEA,UAAM,UAAU,IAAI,uBAAuB,MAAM,cAAc;AAC/D,SAAK,UAAU,IAAI,gBAAgB,OAAO;AAC1C,SAAK,yBAAwB,sBAA8B,OAAO;EACpE;EAEA,uBAAuB,OAAkD;AACvE,SAAK,cAAc,MAAM,IAAI;EAC/B;EAEA,cAAc,gBAAsB;AAClC,UAAM,UAAU,KAAK,iBAAiB,cAAc;AACpD,QAAI,CAAC,SAAS;AACZ;IACF;AACA,SAAK,UAAU,OAAO,cAAc;AACpC,SAAK,yBAAwB,wBAAgC,OAAO;EACtE;EAEA,WAAQ;AACN,WAAO,KAAK,UAAU,OAAM;EAC9B;EAEA,iBAAiB,QAAc;AAC7B,WAAO,KAAK,UAAU,IAAI,MAAM,KAAK;EACvC;EAEA,wBAAqB;AACnB,WAAO,KAAK,UAAU;EACxB;EAEA,cAAc,OAAkD;AAC9D,WAAO;;;;;MAKL,SAAS,MAAM,MAAM;EACzB;EAEA,sBAAsB,OAAkD;AACtE,QAAI,KAAK,cAAc,KAAK,GAAG;AAC7B,YAAM,gBAAgB,KAAK,iBAAiB,MAAM,WAAW;AAE7D,UAAI,eAAe;AACjB,cAAM,YAAY;UAChB,YAAY,MAAM;UAClB,QAAQ,MAAM;UACd,aAAa,MAAM;UACnB,WAAW,MAAM;UACjB,QAAQ,MAAM;UACd,OAAO,MAAM;;AAIf,sBAAc,yBAAwB,wBAAuD,SAAS;MACxG,OAAO;AACL,aAAK,KAAK,gBAAgB,MAAM,WAAW;MAC7C;IACF;AAEA,SAAK,yBAAwB,uBAA+B,KAAK;EACnE;EAEA,+CACI,QAA4E;EAChF;EAEA,sCAAsC,QAAmE;EACzG;EAEA,qBAAqB,QAAkD;EACvE;EAEA,wBAAwB,QAAqD;EAC7E;EAEA,wBAAwB,QAAqD;EAC7E;EAEA,2BAA2B,QAAwD;EACnF;EAEA,sBAAsB,QAAmD;EACzE;EAEA,kCAAkC,QAA+D;EACjG;EAEA,0CAA0C,QAAuE;EAEjH;EAEA,8BAA8B,QAA2D;EACzF;EAEA,qBAAqB,QAAkD;EACvE;EAEA,qCAAqC,QAAkE;EACvG;EACA,+BAA+B,QAA4D;EAC3F;EACA,2CAA2C,QAAwE;EAEnH;;AAGE,eAAS,SAAS,SAAS,oBAAoB,EAAC,cAAY,MAAiC,WAAW,MAAK,CAAC;;;ACjQlH;;;;AAKA,YAAYC,qBAAmB;;;ACL/B;;;;AAIA,YAAYC,cAAY;AACxB,YAAYC,YAAU;AAEtB,YAAYC,kBAAiB;AAC7B,YAAYC,UAAQ;AAEpB,YAAYC,6BAA2B;;;ACVvC;;;;AA8BA,YAAYC,YAAU;AACtB,YAAY,cAAc;AAC1B,YAAYC,UAAQ;AACpB,SAAQ,cAAc,eAAe,QAAAC,OAAM,WAAAC,UAAS,UAAAC,eAAa;AACjE,YAAYC,qBAAmB;AAE/B,YAAYC,6BAA2B;;;ACpCvC;;sBAAAC;EAAA;;AAIA,OAAO;AAEP,YAAYC,cAAY;AACxB,YAAYC,YAAU;AACtB,YAAYC,eAAc;AAC1B,YAAYC,cAAa;AACzB,YAAYC,UAAQ;AACpB,YAAYC,UAAS;AACrB,YAAYC,qBAAmB;AAE/B,YAAYC,6BAA2B;AAEvC,IAAMC,cAAY;;;;EAIhB,SAAS;;;;EAIT,UAAU;;;;EAIV,gBAAgB;;;;EAIhB,iBAAiB;;AAGnB,IAAMC,SAAY,YAAK,kBAAkB,6CAA6CD,WAAS;AAC/F,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AACpE,IAAM,EAAC,MAAAE,OAAM,QAAAC,QAAM,IAAIP;AAgBhB,IAAMN,gBAAe,CAAC,OAAkB,SAAiB,WAA6B;AAC3F,EAAAa;;IAEID;;gCAEwC,wBAAO,CAAE;iCACtBD,aAAWF,YAAU,OAAO,CAAC;iCACf,uBAAO,4BAA4B,EAAE,MAAM;MAClF,OAAO;KACR,CAAC;kCAC0B,MAAM,SAAS;qCACZ,SAAS;oCACV,SAA8B;;4CAEtB,CAAC,MAAM,iBAAiB;0CAC1B,MAAM,eAAe;;UAErD,IAAO,aAAQ,iBAAgB,EAAG,OAAO;iCAClB,MAAM,oBAAoB;kCACzB,MAAM,WAAW;;qCAEd,CAAC,MAAM,sBAAsB;iCACnB,uBAAO,8BAA8B,EAAE,MAAM;MACpF,OAAO;KACR,CAAC;qCAC6B,MAAM,uBAAuB;oCAC9B,SAA8B;iCACjCE,aAAWF,YAAU,cAAc,CAAC;kCACnC,MAAM,gBAAgB;qCACnB,CAAC,MAAM,4BAA4B;iCACzB,uBAAO,oCAAoC,EAAE,MAAM;MAC1F,OAAO;KACR,CAAC;qCAC6B,OAAO;oCACR,SAA8B;UACxD,MAAM,iBAAiB,IAAI,UAAQ,KAAK,OAAO,CAAC;;QAElD,MAAM,YAAY;;IAEpB;EAAM;AACZ;AAIM,IAAO,sBAAP,cACK,uBAAc,WAAqE,YAAO,IAAI,EAAC;EACxG;EACA;EACS;EACT,0BAA0B;EAC1B,gCAAgC;EAChC,qBAAqB;EACrB,2BAA2B;EAC3B,wBAAgCE,aAAWF,YAAU,QAAQ;EAC7D,oBAA8C,CAAA;EAE9C,YAAY,SAAuB,OAAaT,eAAY;AAC1D,UAAM,OAAO;AACb,SAAK,QAAQ;AACb,SAAK,cAAc;EACrB;EAEA,IAAI,aAAa,MAAmE;AAClF,SAAK,gBAAgB;EACvB;EAEA,IAAI,eAAY;AACd,QAAI,CAAC,KAAK,eAAe;AACvB,WAAK,gBAAgB,IAA0B,4CAAoB,oBAAmB;IACxF;AACA,WAAO,KAAK;EACd;EAES,gBAAa;AACpB,UAAM,YAAuB;MAC3B,wBAAwB,KAAK;MAC7B,8BAA8B,KAAK;MACnC,mBAAmB,KAAK;MACxB,yBAAyB,KAAK;MAC9B,sBAAsB,KAAK;MAC3B,kBAAkB,KAAK;MACvB,cAAc,KAAK;MACnB,iBAAiB,KAAK,cAAc,KAAK,IAAI;MAC7C,WAAW,MAAK;AACd,aAAK;UAAwB;;QAAA;AAC7B,QAAG,eAAU,cAAc,MAAMW,aAAWF,YAAU,eAAe,CAAC;MACxE;MACA,aAAa,MAAM,KAAK;QAAwB;;MAAA;MAChD,kBAAkB,MAAM,KAAK;QAAwB;;MAAA;;AAEvD,SAAK,MAAM,WAAW,CAAA,GAAI,KAAK,cAAc;EAC/C;EAEA,kBAAkB,OAAa;AAC7B,SAAK,wBAAwB;AAC7B,SAAK,cAAa;EACpB;EAEA,kBAAkB,OAAa;AAC7B,SAAK,2BAA2B;AAChC,SAAK,cAAa;EACpB;EAEA,kBAAkB,MAA4B;AAC5C,SAAK,kBAAkB,KAAK,IAAI;AAChC,SAAK,cAAa;EACpB;EAEA,cAAc,YAAkB;AAC9B,SAAK,aAAa,cAAc,UAAU;EAC5C;EAEA,cAAc,EAAC,QAAQ,KAAI,GAA2B;AACpD,SAAK,cAAc,OAAO,IAAI,OAAgB,0BAAgB,gBAAgB,IAAI,GAAG,GAAG,IAAI;AAC5F,SAAK;MAAwB;;IAAA;EAC/B;EAEA,YAAS;AACP,WAAO,QAAQ,KAAK,WAAW;EACjC;EAEA,gBAAgB,SAAgB;AAC9B,SAAK,0BAA0B;AAC/B,SAAK,cAAa;EACpB;EAEA,qBAAqB,SAAgB;AACnC,SAAK,gCAAgC;AACrC,SAAK,cAAa;EACpB;EAEA,aAAa,SAAgB;AAC3B,SAAK,qBAAqB;AAC1B,SAAK,cAAa;EACpB;;;;ADpJF,IAAM,EAAC,WAAAK,WAAS,IAAIC;AACpB,IAAM,EAAC,aAAAC,aAAW,IAAO;AACzB,IAAM,EAAC,MAAM,cAAAC,cAAY,IAAO;AAChC,IAAM,EAAC,KAAI,IAAI;AACf,IAAM,EAAC,OAAM,IAAI;AAKjB,IAAMC,cAAY;;;;EAIhB,mBAAmB;;;;EAInB,uBAAuB;;;;;EAKvB,eAAe;;;;EAIf,KAAK;;;;EAIL,OAAO;;AAET,IAAMC,SAAY,YAAK,kBAAkB,kDAAkDD,WAAS;AACpG,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAoBpE,IAAM,mBAAmB;AAOnB,IAAgB,2BAAhB,cAAoD,YAAO,KAAI;EACnE;EACA;EAEA,SAA8C,CAAA;EAC9C,eAA4B;EAC5B;EACA,wBAAwB;EACxB;EACA;EACS;EAET,YACI,OAAe,IAAY,UAAmB,MAC9C,cAA4E;AAC9E,qBAAiB,IAA0B,4CAAoB,oBAAmB;AAClF,QAAI,CAAC,MAAM;AACT,aAAO,CAAC,OAAkB,QAAoB,WAAuB;AAEnE,QAAAE;UAAOC;;8BAEeL,cAAa,qBAAqB,EAAC,aAAY,CAAC,CAAC;;gBAE5D,YAAO,UAAU,qBAAqB,CAAAM,UAAO;AAAE,mBAAO,UAAUA;UAAK,CAAC,CAAC;;mEAEvB,EAAE;;;kCAGnCN,cAAa,MAAM,EAAC,aAAa,IAAI,KAAK,GAAG,EAAE,EAAC,CAAC,CAAC;;0BAE1D,GAAG,EAAE,wBAAwB;;;4BAG3B,MAAM,QAAQ;0BAChB,MAAM,MAAM;6BACT,MAAM,UAAU;4BACjB,MAAM,QAAQ;0BAChB,MAAM,MAAM;4BACV,MAAM,QAAQ;;;;wDAIc,MAAM,QAAQ;0BAC5CG,aAAWF,YAAU,GAAG,CAAC;;iDAEF,MAAM,QAAQ;0BACrCE,aAAWF,YAAU,KAAK,CAAC;;;sBAG/B,OAAO,MAAM,OAAO,UAAQ,KAAK,KAAK,UAAQI;qCAC/B,KAAK,GAAG,eAAe,KAAK,KAAK;qCAChC,MAAM,gBAAgB,KAAK,OAAQE,QAAO;8BAClD,KAAK,GAAG;8BACR,KAAK,MAAM,OAAO,GAAG,gBAAgB,CAAC;4BACxC,CAAC;;;;;;;kCAOKP,cAAa,MAAM,EAAC,aAAa,IAAI,KAAK,GAAG,EAAE,EAAC,CAAC,CAAC;0BAC5C,qBAAK,SAAS,EAAE,MAAM,EAAC,QAAQ,KAAI,CAAC,CAAC;iBAC5D,MAAM,SAAS,OAAO;;;;UAI3B;QAAM;MACZ;IACF;AACA,UAAK;AACL,SAAK,eAAe;AACpB,SAAK,YAAY;AACjB,SAAK,QAAQ;AACb,SAAK,cAAa;AAElB,SAAK,WACD,IAAID,aAAYI,aAAWF,YAAU,iBAAiB,GAAGE,aAAWF,YAAU,qBAAqB,CAAC;AACxG,SAAK,gBAAgB;AAErB,SAAK,YAAY,MAAM,IAAI;EAC7B;EAES,WAAQ;AACf,SAAK,aAAY;EACnB;EAES,gBAAa;AACpB,UAAM,OAAO;AACb,UAAM,aAAa;MACjB,IAAI,QAAQO,UAA4B;AACtC,aAAK,UAAU,oBAAmB,kBAA6C,KAAK,oBAAoB,IAAI;AAC5G,aAAK,UAAU,oBAAmB,aAAwC,KAAK,gBAAgB,IAAI;AACnG,aAAK,UAAU,oBAAmB,WAAqC,KAAK,cAAc,IAAI;AAC9F,aAAK,WAAWA;AAChB,aAAK,SAAS,iBAAgB,kBAA6C,KAAK,oBAAoB,IAAI;AACxG,aAAK,SAAS,iBAAgB,aAAwC,KAAK,gBAAgB,IAAI;AAC/F,aAAK,SAAS,iBAAgB,WAAqC,KAAK,cAAc,IAAI;MAC5F;;AAEF,UAAM,YAAY;MAChB,OAAO,KAAK;MACZ,aAAa,KAAK;MAClB,UAAU,KAAK;MACf,SAAS,KAAK;MACd,UAAU,CAAC,UAAwC;AACjD,aAAK,UAAU,qBAAqB,QAAQ,MAAM,MAAM,CAAC;AACzD,YAAI,CAAC,MAAM,QAAQ;AACjB,eAAK,KAAK,cAAc,IAAI;QAC9B,OAAO;AACL,eAAK,KAAK,cAAc,EAAC,KAAK,MAAM,OAAO,QAAQ,OAAO,IAAI,OAAO,MAAM,OAAO,QAAQ,SAAS,GAAE,CAAC;QACxG;MACF;MACA,QAAQ,CAAC,UAA8D;AACrE,aAAK,wBAAwB,MAAM,OAAO;MAC5C;MACA,UAAU,CAAC,UAAoD;AAC7D,aAAK,gBAAgB,MAAM,OAAO,KAAK,MAAM,OAAO,SAAS,EAAE;MACjE;MACA,QACI,CAAC,UAA0G;AACzG,aAAK,iBACD,MAAM,OAAO,MAAM,MAAM,OAAO,UAAU,MAAM,OAAO,oBAAoB,MAAM,OAAO,OAAO;MACrG;MACJ,UAAU,CAAC,UAAmC;AAC5C,aAAK,gBAAgB,MAAM,OAAO,QAAQ,OAAO,EAAE;MACrD;MACA,YAAY,MAAK;AACf,aAAK,aAAY;MACnB;;AAEF,SAAK,MAAM,WAAW,YAAY,KAAK,cAAc;EACvD;EAEA,IAAc,UAAO;AACnB,WAAO,KAAK;EACd;EAEA,eAAY;EACZ;EAEA,iBAAc;EACd;EAEA,eAAY;AACV,SAAK,SAAS,CAAA;AACd,SAAK,cAAa;AAClB,SAAK,UAAU,qBAAqB,KAAK;EAC3C;EAEA,YAAY,KAAW;AACrB,UAAM,QAAQ,KAAK,OAAO,UAAU,UAAQ,KAAK,QAAQ,GAAG;AAC5D,QAAI,UAAU,IAAI;AAChB;IACF;AACA,SAAK,OAAO,OAAO,OAAO,CAAC;AAC3B,SAAK,cAAa;AAClB,SAAK,UAAU,qBAAqB,KAAK,OAAO,SAAS,CAAC;EAC5D;EAEA,UAAU,KAAa,OAAa;AAClC,QAAI,KAAK,OAAO,KAAK,UAAQ,KAAK,QAAQ,GAAG,GAAG;AAC9C;IACF;AACA,SAAK,OAAO,KAAK,EAAC,KAAK,MAAK,CAAC;AAC7B,SAAK,cAAa;EACpB;EAEA,YAAY,KAAa,OAAa;AACpC,UAAM,OAAO,KAAK,OAAO,KAAK,CAAAC,UAAQA,MAAK,QAAQ,GAAG;AACtD,QAAI,CAAC,MAAM;AACT;IACF;AACA,QAAI,KAAK,UAAU,OAAO;AACxB;IACF;AACA,SAAK,QAAQ;AACb,SAAK,cAAa;AAClB,QAAI,KAAK,iBAAiB,KAAK;AAC7B;IACF;AACA,QAAI,KAAK,kBAAkB,OAAO;AAChC,WAAK,KAAK,cAAc,EAAC,KAAK,MAAK,CAAC;IACtC;AACA,SAAK,UAAU,qBAAqB,IAAI;EAC1C;EAEA,UAAU,OAA0C;AAClD,UAAM,gBAAgB,KAAK,wBAAwB,IAAI;AACvD,SAAK,SAAS,CAAC,GAAG,KAAK,EAAE,KAAK,CAAC,OAAO,UAAU,iBAAiB,MAAM,MAAM,MAAM,MAAM,IAAI,GAAG;AAChG,UAAM,eAAe,KAAK,OAAO,KAAK,UAAQ,KAAK,QAAQ,KAAK,YAAY;AAC5E,QAAI,CAAC,cAAc;AACjB,WAAK,eAAe;IACtB,OAAO;AACL,WAAK,KAAK,cAAc,YAAY;IACtC;AACA,SAAK,cAAa;AAClB,SAAK,UAAU,qBAAqB,QAAQ,KAAK,YAAY,CAAC;AAC9D,IAAAZ,WAAU,cAAc,MAAMM,aAAWF,YAAU,eAAe,EAAC,KAAK,KAAK,OAAO,OAAM,CAAC,CAAC;EAC9F;EAEA,qBAAkB;AAChB,QAAI,CAAC,KAAK,cAAc;AACtB;IACF;AAEA,SAAK,gBAAgB,KAAK,YAAY;EACxC;EAEA,gBAAgB,KAAa,OAAa;AACxC,SAAK,QAAQ,KAAK,KAAK;AACvB,SAAK,aAAa,KAAK,KAAK;AAC5B,SAAK,KAAK,cAAc,EAAC,KAAK,MAAK,CAAC;EACtC;EAEU,cAAc,mBAA2B,UAAkB,UAAgB;AACnF,WAAO;EACT;EAEA,iBAAiB,aAA0B,kBAA0B,SAAiB,SAAe;AACnG,QAAI,CAAC,KAAK,cAAc,kBAAkB,SAAS,OAAO,GAAG;AAC3D;IACF;AACA,QAAI,qBAAqB,OAAO;AAC9B,UAAI,OAAO,YAAY,UAAU;AAC/B,aAAK,WAAW,OAAO;MACzB;AACA,WAAK,QAAQ,SAAS,YAAY,QAAQ,SAAS,EAAE;AACrD,WAAK,aAAa,SAAS,YAAY,QAAQ,SAAS,EAAE;AAC1D,kBAAY,QAAQ,MAAM;AAC1B,WAAK,KAAK,cAAc,EAAC,KAAK,SAAS,OAAO,YAAY,QAAQ,SAAS,GAAE,CAAC;IAChF,OAAO;AACL,WAAK,QAAQ,YAAY,QAAQ,OAAO,IAAI,OAAO;AACnD,WAAK,KAAK,cAAc,EAAC,KAAK,YAAY,QAAQ,OAAO,IAAI,OAAO,QAAO,CAAC;IAC9E;EACF;EAEA,aAAa,KAAa,OAAa;AACrC,aAAS,IAAI,KAAK,OAAO,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAChD,YAAM,QAAQ,KAAK,OAAO,CAAC;AAC3B,UAAK,MAAM,QAAQ,OAAS,UAAU,MAAM,OAAQ;AAClD,aAAK,OAAO,OAAO,GAAG,CAAC;MACzB;IACF;EACF;EAEA,gBAAgB,KAAW;AACzB,SAAK,WAAW,GAAG;EACrB;EAEA,YAAY,SAAsB,OAAkB;AAClD,QAAI,KAAK,YAAY,KAAK,kBAAkB,OAAO;AACjD;IACF;AACA,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,OAAM;IACtB;AACA,QAAI,CAAC,SAAS;AACZ,gBAAU,IAAIF,aAAYI,aAAWF,YAAU,iBAAiB,GAAGE,aAAWF,YAAU,qBAAqB,CAAC;IAChH;AACA,SAAK,gBAAgB;AACrB,SAAK,WAAW;AAChB,SAAK,cAAa;EACpB;EAEA,MAAM,cAAc,OAAwC;AAC1D,QAAI,OAAO,OAAO;AAChB,WAAK,eAAe,MAAM;AAC1B,YAAM,UAAU,MAAM,KAAK,cAAc,MAAM,KAAK,MAAM,KAAK;AAE/D,UAAI,KAAK,iBAAiB,MAAM,KAAK;AACnC,aAAK,YAAY,SAAS,MAAM,KAAK;MACvC;IACF,OAAO;AACL,WAAK,eAAe;AACpB,WAAK,YAAY,MAAM,IAAI;IAC7B;EACF;EAEA,IAAI,SAAS,UAAiB;AAC5B,SAAK,YAAY;AACjB,SAAK,cAAa;EACpB;EAEU,OAAI;AACZ,WAAO,KAAK,OAAO,IAAI,UAAQ,KAAK,GAAG;EACzC;;;;ADnXF,IAAMS,cAAY;;;;EAIhB,eAAe;;;;;EAKf,2BAA2B;;;;;EAK3B,mCAAmC;;;;EAInC,0BAA0B;;;;EAI1B,yBAAyB;;;;EAIzB,+BAA+B;;AAEjC,IAAMC,SAAY,YAAK,kBAAkB,gDAAgDD,WAAS;AAClG,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAmC9D,IAAO,yBAAP,MAAO,gCAA+B,yBAAwB;EAClE;EACS;EAET,YAAY,eAAuC,MAAmB;AACpE;MACIC,aAAWF,YAAU,aAAa;MAAG;;MAA4C;MAAM;MACvF,IAA0B,kDAA0B,0BAChD,eAAe,cAAc,cAAc;IAAC;AAEpD,SAAK,iBAAiB;AACtB,SAAK,cAAa;AAElB,SAAK,eAAe,iBAAgB,wBACsB,KAAK,uBAAuB,IAAI;AAE1F,SAAK,+BACD,IAAW,uBAAc,cAAa;EAC5C;;EAGA,aAAa,WAAW,eAAuC,cAA2B;AAExF,UAAM,OAAO,IAAI,wBAAuB,eAAe,YAAY;AACnE,UAAM,KAAK,kBAAiB;AAC5B,WAAO;EACT;EAEA,MAAM,oBAAiB;AACrB,UAAM,UAAU,MAAM,KAAK,eAAe,WAAU;AACpD,QAAI,SAAS;AACX,WAAK,wBAAwB,OAAO;IACtC;EACF;EAEA,MAAM,wBAAqB;AACzB,UAAM,KAAK,aAAY;EACzB;EAES,MAAM,eAAY;AACzB,UAAM,KAAK,cAAc,OAAM;AAC/B,UAAM,KAAK,kBAAiB;AAC5B,SAAK,6BAA6B;MAAwB;;IAAA;EAC5D;EAES,MAAM,iBAAc;AAC3B,QAAI,CAAC,KAAK,SAAS,UAAS,GAAI;AAC9B,YAAM,KAAK,eAAe,MAAK;AAC/B,YAAM,KAAK,aAAY;AACvB,WAAK,6BAA6B;QAAwB;;MAAA;AAC1D,MAAG,eAAU,cAAc,MAAME,aAAWF,YAAU,yBAAyB,CAAC;AAChF;IACF;AAEA,UAAM,QAAQ,IAAI,KAAK,KAAI,EAAG,IAAI,SAAO,KAAK,eAAe,YAAY,GAAG,CAAC,CAAC;AAE9E,UAAM,KAAK,aAAY;AACvB,SAAK,6BAA6B;MAAwB;;IAAA;AAE1D,IAAG,eAAU,cAAc,MAAME,aAAWF,YAAU,iCAAiC,CAAC;EAC1F;EAEmB,cAAc,kBAA0B,UAAkB,SAAe;AAC1F,QAAI,qBAAqB,SAAS,YAAY,IAAI;AAEhD,WAAK,KAAK,aAAY,EAAG,KAAK,MAAK;AACjC,QAAG,eAAU,cAAc,MAAME,aAAWF,YAAU,6BAA6B,CAAC;MACtF,CAAC;AACD,aAAO;IACT;AACA,WAAO;EACT;EAEU,MAAM,QAAQ,KAAa,OAAa;AAChD,UAAM,KAAK,eAAe,SAAS,KAAK,OAAO,KAAK;AAEpD,UAAM,KAAK,aAAY;AACvB,SAAK,6BAA6B;MAAwB;;IAAA;AAC1D,IAAG,eAAU,cAAc,MAAME,aAAWF,YAAU,uBAAuB,CAAC;EAChF;EAEA,wBAAwB,OAA4C;AAClE,QAAI,KAAK,SAAS;AAChB,YAAM,eAAe,MAAM,OAAO,UAAQ,KAAK,SAAS,aAAa,KAAK,GAAG,KAAK,GAAG,IAAI,KAAK,KAAK,EAAE,KAAK,IAAI;AAC9G,WAAK,UAAU,YAAY;IAC7B;EACF;EAEU,MAAM,WAAW,KAAW;AACpC,UAAM,KAAK,eAAe,YAAY,GAAG;AACzC,UAAM,KAAK,aAAY;AACvB,SAAK,6BAA6B,yBAAwB,eACJ,EAAC,IAAG,CAAkD;AAC5G,IAAG,eAAU,cAAc,MAAME,aAAWF,YAAU,wBAAwB,CAAC;EACjF;EAEU,MAAM,cAAc,KAAa,OAAa;AACtD,UAAM,eAAe,OAAO,EAAC,KAAK,OAAO,SAAS,GAAE;AACpD,WAAmB,sBAAS,SAAS,eAAe,YAAY;EAClE;;;;ADrKI,IAAO,2BAAP,MAAO,kCAAiC,4BAA2B;EACvE;EAEA,YAAY,gBAAgC,eAAqC;AAC/E,UAAM,gBAAgB,cAAc,gBAAgB,OAAO,yBAAyB;EACtF;EAEA,aAAa,cAAc,gBAAgC,eAAqC;AAE9F,UAAM,cAAc,IAAI,0BAAyB,gBAAgB,aAAa;AAC9E,gBAAY,OAAO,MAAM,uBAAuB,WAAW,aAAa;AACxE,gBAAY,KAAK,QAAQ,aAAa,SAAS,GAAiB,qBAAK,qBAAqB,CAAC,EAAE;AAC7F,WAAO;EACT;EAEA,IAAa,UAAO;AAClB,WAAO;EACT;EAES,SAAS,gBAAiC;AACjD,UAAM,SAAS,cAAc;AAC7B,SAAK,eAAe,SAAS,KAAK,IAAI;AACtC,WAAO;EACT;;;;AInCF;;;;oBAAAG;;AAKA,YAAYC,YAAU;AAEtB,YAAYC,WAAS;AAErB,YAAYC,kBAAgB;AAC5B,YAAYC,oBAAmB;AAC/B,YAAYC,UAAQ;AAIpB,SAAQ,uBAAAC,4BAA0B;AAIlC,IAAMC,cAAY;;;;;;EAMhB,gBAAgB;;;;;;;EAOhB,kBAAkB;;;;;;EAMlB,2BACI;;AAEN,IAAMC,SAAY,YAAK,kBAAkB,mDAAmDD,WAAS;AAC9F,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAErE,IAAO,kCAAP,cAA+C,sCAAqC;EAChF,qBAAqB,oBAAI,IAAG;EAEpC,YAAY,cAA4B;AACtC,UACI,cAAcC,aAAWF,YAAU,cAAc,GAAGE,aAAWF,YAAU,gBAAgB,GACzFE,aAAWF,YAAU,yBAAyB,GAAG,iBAAiB;AACtE,UAAM,OAAkB,kBAAK,OAAO,QAAQ;AAC5C,SAAK,gBAAgB,CAAC,IAAI,CAAC;AAC3B,SAAK,QACD,oEAAuG;EAC7G;EAEA,aAAU;AACR,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,0BAAoB,qBAAmB,eAA+C,KAAK,aAC/F,IAAI;AACR,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,0BAAoB,qBAAmB,iBAAiD,KAAK,eACjG,IAAI;AACR,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,0BAAoB,qBAAmB,iBAAiD,KAAK,eACjG,IAAI;AAER,eAAW,gBAAoB,oBAAc,cAAc,SAAQ,EAAG,OACzD,0BAAoB,mBAAmB,GAAG;AACrD,YAAM,UAAU,aAAa,WAAU;AACvC,iBAAW,UAAU,SAAS;AAC5B,aAAK,qBAAqB,cAAc,MAAM;MAChD;IACF;EACF;EAEA,sBAAsB,OAAkD;AACtE,eAAW,qBAAqB,KAAK,oBAAoB;AACvD,UAAI,kBAAkB,UAAU,OAAO;AACrC,aAAK,wBAAwB,iBAAiB;MAChD;IACF;EACF;EAEQ,YAAY,EAAC,MAAM,EAAC,OAAO,WAAU,EAAC,GACkD;AAC9F,SAAK,qBAAqB,OAAO,UAAU;EAC7C;EAEQ,cAAc,EAAC,MAAM,EAAC,OAAO,WAAU,EAAC,GACkD;AAChG,UAAM,yBAAyB,KAAK,qBAAqB,OAAO,UAAU;AAC1E,QAAI,CAAC,wBAAwB;AAC3B;IACF;AACA,SAAK,wBAAwB,sBAAsB;EACrD;EAEQ,cAAc,EAAC,MAAM,EAAC,OAAO,WAAU,EAAC,GACkD;AAChG,UAAM,yBAAyB,KAAK,qBAAqB,OAAO,UAAU;AAC1E,QAAI,CAAC,wBAAwB;AAC3B;IACF;AACA,2BAAuB,aAAa;EACtC;EAEQ,qBACJ,OAAoD,YAA8C;AACpG,QAAI,WAAW,OAAO,SAAS,QAAW;AACxC;IACF;AACA,UAAM,0BAA0B,IAAI,0BAA0B,KAAK,gBAAgB,OAAO,UAAU;AACpG,SAAK,mBAAmB,IAAI,uBAAuB;AACnD,SAAK,YAAY,uBAAuB;AACxC,4BAAwB,WAAU;EACpC;EAEQ,wBAAwB,mBAA4C;AAC1E,SAAK,YAAY,iBAAiB;AAClC,SAAK,mBAAmB,OAAO,iBAAiB;AAChD,SAAK,cAAc,KAAK,mBAAmB,OAAO,CAAC;EACrD;EAEA,IAAa,UAAO;AAClB,WAAO;EACT;EAEA,qBAAqB,OAAoD,EACvE,QAAQ,EAAC,YAAY,KAAI,EAAC,GACS;AACnC,eAAW,qBAAqB,KAAK,oBAAoB;AACvD,UAAI,kBAAkB,UAAU,SAAS,kBAAkB,WAAW,OAAO,eAAe,cACxF,kBAAkB,WAAW,OAAO,SAAS,MAAM;AACrD,eAAO;MACT;IACF;AACA,WAAO;EACT;;AAGI,IAAO,4BAAP,cAAyC,sCAAqC;EAC1E;EACA;EACA;EAER,YACI,gBAAgC,OAChC,YAA8C;AAChD,UAAM,EAAC,OAAM,IAAI;AACjB,UAAM,EAAC,OAAM,IAAQ,wBAAkB,gBAAgB,WAAW,OAAO,UAAU;AACnF,UAAM,gBAAgB,GAAG,OAAO,IAAI,MAAM,MAAM,IAAI,IAAI,IAAI,gBAAgB;AAC5E,SAAK,cAAc;AACnB,SAAK,oBAAoB;AACzB,UAAM,OAAkB,kBAAK,OAAO,UAAU;AAC9C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,aAAU;AACR,UAAM,EAAC,OAAM,IAAI,KAAK;AACtB,UAAM,uBAAuB,IAAI,qBAAqB,KAAK,gBAAgB,MAAM;AACjF,SAAK,YAAY,oBAAoB;AACrC,UAAM,gCAAgC,IAAI,8BAA8B,KAAK,gBAAgB,MAAM;AACnG,SAAK,YAAY,6BAA6B;AAC9C,kCAA8B,WAAU;EAC1C;EAEA,IAAa,UAAO;AAClB,UAAM,EAAC,OAAM,IAAI,KAAK;AACtB,WAAO,2BAA2B,OAAO,IAAI,IAAI,OAAO,UAAU;EACpE;EAEA,IAAI,QAAK;AACP,WAAO,KAAK;EACd;EAEA,IAAI,aAAU;AACZ,WAAO,KAAK;EACd;EAEA,IAAI,WAAW,YAA8C;AAC3D,SAAK,oBAAoB;AACzB,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,aAAY,EAAG,iBAAiB,KAAK,iBAAiB;IAClE;EACF;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OACa,6BAAc,cAAiB,YAAO,QAAQ,IAAIG,qBAAoB,oBAAmB,CAAE;AAC7G,WAAK,KAAK,aAAY,EAAG,4BAA4B,KAAK,KAAK;AAC/D,WAAK,KAAK,aAAY,EAAG,iBAAiB,KAAK,iBAAiB;IAClE;AACA,SAAK,SAAS,KAAK,IAAI;AACvB,WAAO;EACT;;;;ACtMF;;wBAAAC;EAAA;;;AAKA,YAAYC,cAAY;AACxB,YAAYC,YAAU;AACtB,YAAYC,eAAc;AAC1B,YAAYC,WAAS;AAGrB,YAAYC,kBAAgB;AAC5B,YAAY,YAAY;AACxB,YAAYC,UAAQ;AACpB,YAAYC,qBAAmB;;;ACT/B,IAAO,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAoFC,YAAY,QAAQ,mBAAmB,CAAC;;;ADrExD,IAAMC,cAAY;;;;;;EAMhB,kBAAkB;;;;;;EAMlB,2BAA2B;;;;;EAK3B,yBAAyB;;;;EAIzB,cAAc;;;;EAId,OAAO;;;;EAIP,IAAI;;;;EAIJ,WAAW;;;;EAIX,eAAe;;;;EAIf,iBAAiB;;;;EAIjB,aAAa;;;;EAIb,yBAAyB;;;;EAIzB,wBAAwB;;;;EAIxB,SAAS;;;;EAIT,SAAS;;;;EAIT,cAAc;;;;EAId,4BAA4B;;;;;EAK5B,eAAe;;;;EAIf,eAAe;;;;EAIf,oBAAoB;;;;EAIpB,yBAAyB;;;;;EAKzB,qBAAqB;;;;EAIrB,UAAU;;;;EAIV,yBAAyB;;;;EAIzB,YAAY;;;;EAIZ,OAAO;;;;EAIP,cAAc;;;;EAId,gBAAgB;;;;;EAKhB,uBAAuB;;AAEzB,IAAMC,SAAY,YAAK,kBAAkB,qCAAqCD,WAAS;AACvF,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAK9D,IAAO,cAAP,MAAO,qBAAuB,qBAAgB,gBAAe;EACzD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAER,cAAA;AACE,UAAM,MAAM,GAAI;AAChB,SAAK,oBAAoB,uBAAiB;AAE1C,SAAK,eAAe,UAAU,IAAI,yBAAyB;AAC3D,SAAK,eAAe,aAAa,SAAS,GAAiB,qBAAK,eAAe,CAAC,EAAE;AAClF,SAAK,YAAY,oBAAI,IAAI;MACvB,CAAA,iBAA6C,oBAAoB;;MACjE,CAAA,WAAuC,mBAAmB;;MAC1D,CAAA,aAAyC,oBAAoB;;MAC7D,CAAA,iBAA6C,oBAAoB;;MACjE,CAAA,mBAA+C,mBAAmB;;KACnE;AAGD,SAAK,aAAa,IAAO,gBAAW,WAAWC,aAAWF,YAAU,YAAY,CAAC;AACjF,SAAK,WAAW,oBAAoB,uBAAiB;AAErD,SAAK,WAAW,QAAQ,UAAU,IAAI,sBAAsB;AAC5D,SAAK,WAAW,KAAK,KAAK,cAAc;AACxC,SAAK,SAAS;AACd,SAAK,iBAAiB;AACtB,SAAK,aAAa;AAElB,SAAK,WAAW,oBAAI,IAAG;AACvB,eAAW,QAAQ,iBAAiB;AAClC,WAAK,SAAS,IACV,MACO,kBAAS,SAAS,SAAQ,EAAG,cAChC,mBAA4B,0BAAgB,YAAY,IAAI,GAAG,IAAI,CAAC;IAC9E;AAEA,SAAK,kCACM,kBAAS,SAAS,SAAQ,EAAG,cAAc,6CAA6C,KAAK;AAExG,UAAM,qBAAqB,KAAK,WAAW,cAAc,IAAI,sBAAsB,EAAE,UAAS;AAC9F,SAAK,cAAiB,aAAQ,iBAC1BE,aAAWF,YAAU,aAAa,GAAG,KAAK,MAAM,KAAK,IAAI,GAAG,EAAC,cAAc,0BAAyB,CAAC;AACzG,SAAK,YAAY,KAAK;AACtB,uBAAmB,YAAY,KAAK,WAAW;AAE/C,UAAM,mCAAsC,gBAAW,sBACnDE,aAAWF,YAAU,0BAA0B,GAAG,KAAK,+BAA+B;AAC1F,qCAAiC,UAAU,IAAI,6BAA6B;AAC5E,uBAAmB,YAAY,gCAAgC;AAE/D,UAAM,QAAQ,KAAK,WAAW,cAAcE,aAAWF,YAAU,KAAK,CAAC;AACvE,UAAM,QAAQ,aAAa,SAAS,GAAiB,wBAAQ,OAAO,CAAC,EAAE;AACvE,SAAK,WAAW,MAAM,oBAAmB;AACzC,SAAK,SAAS,UAAU,IAAI,iBAAiB;AAC7C,UAAM,eAAe,MAAM,UAAS;AACpC,UAAM,YAAe,WAAM,MAAM,OAC7B,oFACAE,aAAWF,YAAU,SAAS,GAAG,QAAW,QAAW,YAAY;AACvE,iBAAa,YAAY,SAAS;AAClC,SAAK,aAAa;AAClB,SAAK,WAAW,IAAW,gBAAS,SAAQ;AAC5C,SAAK,iBAAiB,GAAG,CAAA,CAAE;AAC3B,UAAM,oBAAoB,MAAM,UAAS;AACzC,sBAAkB,UAAU,IAAI,qBAAqB;AACrD,sBAAkB,YAAY,KAAK,QAAQ;AAE3C,SAAK,6BAA6B;AAClC,UAAM,2BAA2B,MAAM,UAAS;AAChD,6BAAyB,UAAU,IAAI,oBAAoB;AAC3D,SAAK,wBAA2B,aAAQ,cAAc,OAAOE,aAAWF,YAAU,qBAAqB,GAAG,KAAK;AAC/G,SAAK,sBAAsB,aACvB,SAAS,GAAiB,uBAAO,uBAAuB,EAAE,MAAM,EAAC,QAAQ,KAAI,CAAC,CAAC,EAAE;AACrF,6BAAyB,YAAY,KAAK,qBAAqB;AAC/D,SAAK,sBAAsB,iBAAiB,SAAS,KAAK,gBAAgB,KAAK,IAAI,GAAG,KAAK;AAC3F,SAAK,0BAA0B,MAAM,UAAS;AAC9C,SAAK,sBAAsB,KAAK,wBAAwB,YAAY,SAAS,oCAAoC;AACjH,SAAK,oBAAoB,aACrB,SAAS,GAAiB,0BAAU,gBAAgB,EAAE,MAAM,EAAC,QAAQ,KAAI,CAAC,CAAC,EAAE;AACjF,SAAK,wBAAwB,YAAe,aAAQ,YAAYE,aAAWF,YAAU,EAAE,CAAC,CAAC;AACzF,SAAK,wBAAwB,UAAU,IAAI,QAAQ;AACnD,SAAK,oBAAoB,iBAAiB,SAAS,WAAQ;AACzD,UAAI,MAAM,QAAQ,SAAS;AACzB,aAAK,KAAK,iCAAgC;AAC1C,cAAM,QAAQ,IAAI;MACpB;IACF,CAAC;AACD,SAAK,oBAAoB,iBAAiB,YAAY,WAAQ;AAC5D,WAAK,KAAK,iCAAgC;AAC1C,YAAM,QAAQ,IAAI;IACpB,CAAC;AAED,UAAM,kBAAkB,MAAM,UAAS;AACvC,SAAK,4BAA4B,gBAAgB,YAAY,OAAO,sBAAsB;AAE1F,UAAM,cAAc,KAAK,WAAW,cAAcE,aAAWF,YAAU,WAAW,CAAC;AACnF,gBAAY,QAAQ,aAAa,SAAS,GAAiB,wBAAQ,aAAa,CAAC,EAAE;AACnF,SAAK;MACD;MAAaE,aAAWF,YAAU,uBAAuB;MAAC;;IAAA;AAC9D,gBAAY,qBAAoB;AAEhC,UAAM,UAAU,KAAK,WAAW,cAAcE,aAAWF,YAAU,YAAY,CAAC;AAChF,YAAQ,QAAQ,aAAa,SAAS,GAAiB,wBAAQ,SAAS,CAAC,EAAE;AAC3E,SAAK;MAAW;MAASE,aAAWF,YAAU,sBAAsB;MAAC;;IAAA;AACrE,SAAK;MAAW;MAASE,aAAWF,YAAU,OAAO;MAAC;;IAAA;AACtD,SAAK;MAAW;MAASE,aAAWF,YAAU,OAAO;MAAC;;IAAA;AACtD,SAAK;MAAW;MAASE,aAAWF,YAAU,YAAY;MAAC;;IAAA;AAC3D,YAAQ,qBAAoB;AAE5B,IAAI,oBAAc,cAAc,SAAQ,EAAG,eAAe,IAAI;EAChE;EAEQ,WACJG,UAAgC,OAChC,aAAyC;AAC3C,UAAM,MAAMA,SAAQ,UAAS;AAC7B,UAAM,UAAU,KAAK,SAAS,IAAI,WAAW;AAC7C,QAAI,SAAS;AACX,UAAI,YAAe,gBAAW,sBAAsB,OAAO,OAAO,CAAC;IACrE;EACF;EAEA,YAAY,QAAyB;AACnC,QAAI,WAAe,oBAAc,cAAc,SAAQ,EAAG,kBAAiB,GAAI;AAC7E;IACF;AACA,SAAK,SAAS;AACd,UAAM,wBAAwB,OAAO,MAAU,4BAAsB,qBAAqB;AAE1F,SAAK,aACD,sBAAsB,mBAAkB,GAAI,sBAAsB,8BAA6B,CAAE;AACrG,0BAAsB,iBACd,4BAAsB,OAAO,2BAA2B,KAAK,eAAe,IAAI;AACxF,UAAM,oBACF,OAAO,MAAU,wBAAkB,iBAAiB;AACxD,SAAK,iBAAiB,kBAAkB,eAAc,CAAE;AACxD,sBAAkB,iBAAgB,yBACyB,KAAK,mBAAmB,IAAI;EACzF;EAEA,cAAc,QAAyB;AACrC,QAAI,KAAK,WAAW,QAAQ;AAC1B;IACF;AACA,UAAM,wBAAwB,OAAO,MAAU,4BAAsB,qBAAqB;AAE1F,0BAAsB,oBACd,4BAAsB,OAAO,2BAA2B,KAAK,eAAe,IAAI;AACxF,UAAM,oBACF,OAAO,MAAU,wBAAkB,iBAAiB;AACxD,sBAAkB,oBAAmB,yBACsB,KAAK,mBAAmB,IAAI;EACzF;EAEQ,cACJ,OAAoG;AACtG,UAAM,EAAC,oBAAoB,8BAA6B,IAAI,MAAM;AAClE,SAAK,aAAa,oBAAoB,6BAA6B;EACrE;EAEQ,kBACJ,OAA4F;AAC9F,UAAM,EAAC,eAAc,IAAI,MAAM;AAC/B,SAAK,iBAAiB,cAAc;EACtC;EAEQ,aAAa,YAAoB,uBAAkC;AACzE,UAAM,YAAY,KAAK;AACvB,QAAI,uBAAuB;AACzB,WAAK,iBAAiB;AACtB,WAAK,WAAW,YAAYD,aAAWF,YAAU,eAAe,EAAC,KAAK,sBAAqB,CAAC,CAAC;IAC/F,OAAO;AACL,WAAK,iBAAiB;AACtB,WAAK,WAAW,YAAY,UAAU;IACxC;AAEA,QAAI,cAAc,KAAK,gBAAgB;AACrC,WAAK,wBAAwB,UAAU,IAAI,QAAQ;AACnD,WAAK,sBAAsB,UAAU;AACrC,WAAK,0BAA0B,cAAc;IAC/C;AACA,SAAK,KAAK,SAAQ;EACpB;EAEQ,iBAAiB,gBAAsB;AAC7C,UAAM,gBAAgB,KAAK;AAE3B,SAAK,aAAa;AAClB,SAAK,WAAW,YAAY,cAAc;AAE1C,QAAI,kBAAkB,KAAK,YAAY;AACrC,WAAK,wBAAwB,UAAU,IAAI,QAAQ;AACnD,WAAK,sBAAsB,UAAU;AACrC,WAAK,0BAA0B,cAAc;IAC/C;AACA,SAAK,KAAK,SAAQ;EACpB;EAEQ,MAAM,mCAAgC;AAC5C,QAAI,CAAC,KAAK,UAAU,CAAC,KAAK,gBAAgB;AACxC,WAAK,0BAA0B,cAAcE,aAAWF,YAAU,aAAa;AAC/E;IACF;AACA,SAAK,0BAA0B,cAAc;AAC7C,UAAM,eAAe,KAAK,oBAAoB;AAC9C,QAAI,iBAAiB,IAAI;AACvB,YAAM,KAAK,oBAAoB,KAAK,QAAQ,KAAK,cAAc;AAC/D,WAAK,6BAA6B;AAClC;IACF;AACA,UAAM,QAAQ,WAAW,YAAY;AACrC,QAAI,CAAC,OAAO,SAAS,KAAK,GAAG;AAC3B,WAAK,0BAA0B,cAAcE,aAAWF,YAAU,kBAAkB;AACpF;IACF;AACA,QAAI,QAAQ,GAAG;AACb,WAAK,0BAA0B,cAAcE,aAAWF,YAAU,uBAAuB;AACzF;IACF;AACA,UAAM,SAAS;AACf,QAAI,SAAS,QAAQ;AACnB,WAAK,0BAA0B,cAC3BE,aAAWF,YAAU,qBAAqB,EAAC,KAAK,OAAO,eAAc,EAAE,CAAC;AAC5E;IACF;AACA,UAAM,aAAa,MAAO;AAC1B,UAAM,eAAe,KAAK,MAAM,QAAQ,UAAU;AAClD,UAAM,kBAAkB,GAAG,eAAe,UAAU;AACpD,SAAK,oBAAoB,QAAQ;AACjC,SAAK,6BAA6B;AAClC,UAAM,KAAK,OAAO,aAAY,EAAG,8BAC7B,EAAC,QAAQ,KAAK,gBAAgB,WAAW,aAAY,CAAC;EAC5D;EAEQ,MAAM,oBAAoB,QAA2B,QAAc;AACzE,UAAM,OAAO,aAAY,EAAG,8BAA8B,EAAC,OAAM,CAAC;EACpE;EAEQ,MAAM,kBAAe;AAC3B,QAAI,KAAK,wBAAwB,UAAU,SAAS,QAAQ,GAAG;AAC7D,WAAK,wBAAwB,UAAU,OAAO,QAAQ;AACtD,WAAK,sBAAsB,UAAU;AACrC,WAAK,oBAAoB,QAAQ,KAAK;AACtC,WAAK,oBAAoB,MAAK;IAChC,WAAW,KAAK,UAAU,KAAK,gBAAgB;AAC7C,WAAK,wBAAwB,UAAU,IAAI,QAAQ;AACnD,WAAK,sBAAsB,UAAU;AACrC,YAAM,KAAK,oBAAoB,KAAK,QAAQ,KAAK,cAAc;AAC/D,WAAK,0BAA0B,cAAc;IAC/C;EACF;EAEQ,QAAK;AACX,QAAI,CAAC,KAAK,gBAAgB;AACxB;IACF;AACA,UAAM,uBAAuB,CAAA;AAC7B,eAAW,QAAQ,KAAK,SAAS,KAAI,GAAI;AACvC,YAAM,UAAU,KAAK,SAAS,IAAI,IAAI;AACtC,UAAI,SAAS,IAAG,GAAI;AAClB,6BAAqB,KAAK,IAAI;MAChC;IACF;AAEA,QAAI,KAAK,QAAQ;AACf,YAAM,2BAA2B,KAAK,gCAAgC,IAAG;AACzE,mBAAY,MACR,KAAK,QAAQ,KAAK,YAAY,KAAK,gBAAgB,sBAAsB,wBAAwB;IACvG;AAEA,SAAK,YAAY,WAAW;AAC5B,UAAM,QAAQ,KAAK,YAAY;AAC/B,SAAK,YAAY,cAAcE,aAAWF,YAAU,QAAQ;AAC5D,WAAO,WAAW,MAAK;AACrB,WAAK,YAAY,WAAW;AAC5B,WAAK,YAAY,cAAc;AAC/B,WAAK,YAAY,MAAK;IACxB,GAAG,GAAG;AAEN,IAAG,eAAU,cAAc,MAAME,aAAWF,YAAU,eAAe,CAAC;EACxE;EAEA,OAAO,MACH,QAA2B,YAAyB,kBAA+B,sBACnF,0BAAiC;AACnC,YAAQ,OAAO,QAAQ,UAAU,CAAC;AAClC,QAAI,CAAC,YAAY;AACf;IACF;AACA,SAAK,OAAO,aAAY,EAAG,8BACvB,EAAC,YAAY,cAAc,qBAAqB,KAAK,GAAG,EAAC,CAAC;AAE9D,UAAM,MAAM,IAAI,IAAI,oBAAoB;AACxC,UAAM,SAAS,IAAI;MAAG;;IAAA;AAEtB,QAAI,IAAI;MAAG;;IAAA,KAAgD,QAAQ;AACjE,YAAM,eAAe,OAAO,MAAM,eAAe;AACjD,UAAI,cAAc;AAChB,qBAAa,mBAAmB,UAAU;MAC5C;IACF;AAEA,QAAI,IAAI;MAAG;;IAAA,KAA4C,QAAQ;AAC7D,iBAAWI,WAAc,oBAAc,cAAc,SAAQ,EAAG,QAAO,GAAI;AACzE,cAAM,iBAAiBA,QAAO,MAAM,cAAc;AAClD,YAAI,gBAAgB;AAClB,yBAAe,mBAAmB,UAAU;QAC9C;MACF;IACF;AAEA,QAAI,qBAAqB,IAAI;MAAG;;IAAA,KAA0C,SAAS;AACjF,WAAK,OAAO,aAAY,EAAG,0BACvB;QAAC,QAAQ;QAAkB,cAAY;;MAAsC,CAAC;AAClF,YAAM,cAAc,OAAO,MAAU,kBAAY,WAAW;AAC5D,UAAI,aAAa;AACf,aAAK,YAAY,MAAM,QAAW,2BAA2B,SAAY,gBAAgB;MAC3F;IACF;AAEA,QAAI,IAAI;MAAG;;IAAA,KAAgD,QAAQ;AACjE,YAAMA,UAAa,oBAAc,cAAc,SAAQ,EAAG,kBAAiB;AAC3E,YAAM,QAAQA,SAAQ,MAAU,8BAAwB,uBAAuB;AAC/E,UAAI,OAAO;AACT,cAAM,mBAAmB,UAAU;MACrC;IACF;EACF;EAES,MAAM,WAAQ;AACrB,QAAI,CAAC,KAAK,kBAAkB,CAAC,KAAK,QAAQ;AACxC,WAAK,SAAS,cAAc;AAC5B,WAAK,iBAAiB,GAAG,CAAA,CAAE;AAC3B;IACF;AAEA,UAAM,iBAAiB,KAAK;AAC5B,UAAM,WAAW,MAAM,KAAK,OAAO,aAAY,EAAG,wBAAwB,EAAC,QAAQ,eAAc,CAAC;AAClG,SAAK,SAAS,cAAc;AAC5B,QAAI,SAAS,SAAQ,GAAI;AACvB,WAAK,iBAAiB,GAAG,CAAA,CAAE;AAC3B;IACF;AACA,UAAM,kBAAkB,SAAS;AACjC,UAAM,gBAAqB,qBAAc,cAAc,SAAS,KAAK;AACrE,UAAM,gBAAqB,qBAAc,cAAc,SAAS,KAAK;AACrE,UAAM,yBAAyBF,aAAWF,YAAU,yBAAyB,EAAC,KAAK,cAAa,CAAC;AACjG,UAAM,QACF,kBAAqB,cAAS,SAAS,WAAW,sBAAsB,OAAO,QAAO,IAAK;AAC/F,UAAM,UACG,YAAK,yBAAyBC,QAAMD,YAAU,kBAAkB,EAAC,KAAK,eAAe,KAAK,MAAK,CAAC;AACzG,SAAK,SAAS,YAAY,OAAO;AACjC,IAAG,aAAQ,QAAQ,QACf,KAAK,UACLE,aACIF,YAAU,2BACV,EAAC,KAAK,SAAS,MAAM,eAAc,GAAI,KAAK,SAAS,MAAM,eAAc,EAAE,CAAC,CAAC;AAErF,QAAI,CAAC,SAAS,kBAAkB,SAAS,QAAQ,WAAW;AAC1D,YAAM,OAAO,IAAe,kBAAK,KAAI;AACrC,WAAK,OAAO;AACZ,WAAK,MAAM,QAAQ;AACnB,WAAK,UAAU,IAAI,OAAO;AAC1B,MAAG,aAAQ,QAAQ,QAAQ,KAAK,UAAUE,aAAWF,YAAU,uBAAuB,CAAC;AACvF,WAAK,SAAS,YAAY,IAAI;IAChC;AAEA,QAAI,KAAK,eAAe,QAAQ,KAAK,eAAe,SAAS,OAAO;AAClE,WAAK,aAAa,SAAS;AAC3B,YAAM,SAAkC,CAAA;AACxC,iBAAW,gBAAgB,SAAS,eAAe,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK,GAAG;AACpF,cAAM,QAAQ,aAAa;AAC3B,YAAI,CAAC,OAAO;AACV;QACF;AACA,cAAM,QAAQ,KAAK,mBAAmB,aAAa,WAAW;AAC9D,cAAM,QAAQ,KAAK,UAAU,IAAI,aAAa,WAAW,KAAK;AAC9D,eAAO,KAAK,EAAC,OAAO,OAAO,MAAK,CAAC;MACnC;AACA,WAAK,iBAAiB,SAAS,OAAO,MAAM;IAC9C;AAEA,SAAK,OAAM;EACb;EAEQ,iBAAiB,OAAe,QAA+B;AACrE,SAAK,SAAS,OAAO;MACnB,WAAWE,aAAWF,YAAU,YAAY;MAC5C,MAAM;MACN,WAAgB,qBAAc;MAC9B,YAAY;MACZ;MACA;;EAEJ;EAEQ,mBAAmB,MAAkC;AAC3D,YAAQ,MAAM;MACZ,KAAA;AACE,eAAOE,aAAWF,YAAU,UAAU;MACxC,KAAA;AACE,eAAOE,aAAWF,YAAU,OAAO;MACrC,KAAA;AACE,eAAOE,aAAWF,YAAU,YAAY;MAC1C,KAAA;AACE,eAAOE,aAAWF,YAAU,cAAc;MAC5C;AACE,eAAOE,aAAWF,YAAU,KAAK;IACrC;EACF;;AAGK,IAAM,kBAAkB;;;;;;;AAQzB,IAAOK,kBAAP,MAAqB;EACzB,aAAa,UAA8B,UAAgB;AACzD,YAAQ,UAAU;MAChB,KAAK;AACH,eAAO,KAAK,YAAY,KAAK;MAC/B,KAAK;AACH,eAAO,KAAK,YAAY,IAAI;IAChC;AACA,WAAO;EACT;EAEQ,YAAY,0BAAiC;AACnD,UAAM,SAAa,oBAAc,cAAc,SAAQ,EAAG,kBAAiB;AAC3E,QAAI,CAAC,QAAQ;AACX,aAAO;IACT;AACA,UAAM,oBAAoB,OAAO,MAAU,wBAAkB,iBAAiB;AAC9E,QAAI,CAAC,mBAAmB;AACtB,aAAO;IACT;AACA,UAAM,iBAAiB,kBAAkB,sBAAqB;AAC9D,sBAAkB,kBAAiB,EAAG,KAAK,gBAAa;AACtD,kBAAY,MAAM,QAAQ,YAAY,gBAAgB,iBAAiB,wBAAwB;IACjG,GAAG,OAAI;IAAE,CAAC;AACV,WAAO;EACT;;;;AE9lBF;;;oBAAAC;;AAIA,YAAYC,WAAU;AACtB,YAAYC,YAAU;AAEtB,YAAYC,kBAAgB;AAC5B,YAAYC,oBAAmB;AAC/B,YAAYC,UAAQ;AAGpB,YAAYC,6BAA2B;AAGvC,IAAMC,cAAY;;;;;EAKhB,aAAa;;AAEf,IAAMC,SAAY,YAAK,kBAAkB,gDAAgDD,WAAS;AAC3F,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAErE,IAAO,yBAAP,cAAsC,4BAA2B;EAC7D;EAGR,YAAY,cAA4B;AACtC,UAAM,cAAcC,aAAWF,YAAU,WAAW,GAAG,OAAO,sBAAsB;AACpF,UAAM,OAAkB,kBAAK,OAAO,UAAU;AAC9C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,IAAa,UAAO;AAClB,WAAO;EACT;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAqB,6BAAc,cACjC,YAAO,QAAQ,IAA0B,wCAAgB,gBAAe,GAAI,cAAc;IACnG;AACA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,cAAc;AAC1C,WAAO;EACT;;;;A/C4CF,IAAMG,cAAY;;;;EAIhB,aAAa;;;;EAIb,SAAS;;;;;EAKT,gBAAgB;;;;EAIhB,cAAc;;;;EAId,yBAAyB;;;;EAIzB,gBAAgB;;;;EAIhB,kBAAkB;;;;EAIlB,2BAA2B;;;;EAI3B,kBAAkB;;;;EAIlB,oBAAoB;;;;EAIpB,6BAA6B;;;;EAI7B,yBAAyB;;;;EAIzB,uBAAuB;;;;EAIvB,sBAAsB;;;;EAItB,yBAAyB;;;;EAIzB,SAAS;;;;EAIT,WAAW;;;;EAIX,oBAAoB;;;;EAIpB,oBAAoB;;;;EAIpB,QAAQ;;;;EAIR,UAAU;;;;EAIV,oBAAoB;;;;EAIpB,qBACI;;;;EAIJ,aAAa;;;;EAIb,WAAW;;;;EAIX,aAAa;;;;EAIb,sBAAsB;;;;EAItB,kBAAkB;;;;;EAKlB,eAAe;;;;;EAKf,UAAU;;;;EAIV,OAAO;;;;;EAKP,UAAU;;;;EAIV,YAAY;;;;;EAKZ,0BAA0B;;;;EAI1B,eAAe;;;;EAIf,0BAA0B;;;;EAI1B,YAAY;;;;EAIZ,sBAAsB;;;;EAItB,iCACI;;;;EAIJ,oBAAoB;;;;EAIpB,QAAQ;;;;EAIR,mBAAmB;;;;EAInB,uBAAuB;;;;;EAKvB,mBAAmB;;;;;EAKnB,eAAe;;;;EAIf,yBAAyB;;;;;EAKzB,oBAAoB;;;;EAIpB,qBAAqB;;AAEvB,IAAMC,SAAY,YAAK,kBAAkB,iDAAiDD,WAAS;AACnG,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAEpE,SAAS,oBAAoB,UAAyC;AACpE,MAAI,aAAa,QAAQ;AACvB,UAAM,IAAI,MAAM,2BAA2B;EAC7C;AACF;AAEA,SAAS,4BAA4B,aAA4C;AAC/E,UAAQ,aAAa;IACnB,KAAA;AACE,aAAOC,aAAWF,YAAU,uBAAuB;IACrD,KAAA;AACE,aAAOE,aAAWF,YAAU,qBAAqB;IACnD,KAAA;AACE,aAAOE,aAAWF,YAAU,oBAAoB;IAClD,KAAA;AACE,aAAOE,aAAWF,YAAU,uBAAuB;IACrD;AACE,YAAM,IAAI,MAAM,8BAA8B,WAAW,EAAE;EAC/D;AACF;AAgBM,IAAO,0BAAP,cAA0C,YAAO,KAAI;EACzD;EACiB;EACA;EACjB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACQ;EACR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACiB;EACT;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACC;EAGT,YAAY,OAAqB;AAC/B,UAAK;AACL,SAAK,QAAQ;AAEb,SAAK,cAAc,IAAO,iBAAY;MAAmB;;IAAA;AACzD,SAAK,YAAY,oBAAoB,4BAAsB;AAC3D,SAAK,YAAY,QAAQ,UAAU,IAAI,mBAAmB;AAC1D,SAAK,YAAY,gBAAgB,IAAI;AAErC,SAAK,YAAY,QAAQ,UAAU,IAAI,YAAY;AAEnD,SAAK,YAAY,iBAAoB,iBAAY,OAAO,iBAAiB,KAAK,kBAAkB,IAAI;AAEpG,SAAK,eAAe,YAAY,KAAK,YAAY,OAAO;AAExD,UAAM,0BAA0BE,aAAWF,YAAU,WAAW;AAChE,SAAK,yBAAyB,KAAK,kBAAkB,yBAAyB,aAAa;AAC3F,UAAM,0BAA0B,KAAK,uBAAuB,aAAa;AACzE,QAAI,yBAAyB;AAC3B,8BAAwB,YAAYE,aAAWF,YAAU,uBAAuB;IAClF;AACA,UAAM,sBAAsB,IAAI,uBAAuB,KAAK;AAC5D,SAAK,uBAAuB,YAAY,mBAAmB;AAC3D,wBAAoB,iBAAgB;AACpC,SAAK,4BAA4B,IAAI,0BAA0B,KAAK;AACpE,SAAK,uBAAuB,YAAY,KAAK,yBAAyB;AACtE,UAAM,0BAA0B,IAAI,wBAAwB,KAAK;AACjE,SAAK,uBAAuB,YAAY,uBAAuB;AAE/D,UAAM,sBAAsBE,aAAWF,YAAU,OAAO;AACxD,UAAM,qBAAqB,KAAK,kBAAkB,qBAAqB,SAAS;AAChF,SAAK,8BAA8B,IAAI,sCACnC,OAAOE,aAAWF,YAAU,YAAY,GAAGE,aAAWF,YAAU,cAAc,GAC9EE,aAAWF,YAAU,uBAAuB,GAAG,eAAe;AAClE,SAAK,4BAA4B,QAC7B,kEAAqG;AACzG,UAAM,mBAA8B,kBAAK,OAAO,OAAO;AACvD,SAAK,4BAA4B,gBAAgB,CAAC,gBAAgB,CAAC;AAEnE,uBAAmB,YAAY,KAAK,2BAA2B;AAC/D,SAAK,gCAAgC,IAAI,sCACrC,OAAOE,aAAWF,YAAU,cAAc,GAAGE,aAAWF,YAAU,gBAAgB,GAClFE,aAAWF,YAAU,yBAAyB,GAAG,iBAAiB;AACtE,SAAK,8BAA8B,QAC/B,oEAAuG;AAC3G,UAAM,qBAAgC,kBAAK,OAAO,OAAO;AACzD,SAAK,8BAA8B,gBAAgB,CAAC,kBAAkB,CAAC;AAEvE,uBAAmB,YAAY,KAAK,6BAA6B;AAEjE,SAAK,kCAAkC,IAAI,sCACvC,OAAOE,aAAWF,YAAU,gBAAgB,GAAGE,aAAWF,YAAU,kBAAkB,GACtFE,aAAWF,YAAU,2BAA2B,GAAG,mBAAmB;AAC1E,SAAK,gCAAgC,QACjC,qEAAwG;AAC5G,UAAM,uBAAkC,kBAAK,OAAO,OAAO;AAC3D,SAAK,gCAAgC,gBAAgB,CAAC,oBAAoB,CAAC;AAE3E,uBAAmB,YAAY,KAAK,+BAA+B;AAEnE,SAAK,2BAA2B,IAAI,qBAAqB,KAAK;AAC9D,SAAK,yBAAyB,QAC1B,+DAAkG;AACtG,uBAAmB,YAAY,KAAK,wBAAwB;AAE5D,SAAK,wBAAwB,IAAI,sCAC7B,OAAOE,aAAWF,YAAU,OAAO,GAAGE,aAAWF,YAAU,SAAS,GAAGE,aAAWF,YAAU,kBAAkB,GAC9G,SAAS;AACb,SAAK,sBAAsB,QACvB,6DAAgG;AACpG,UAAM,aAAwB,kBAAK,OAAO,QAAQ;AAClD,SAAK,sBAAsB,gBAAgB,CAAC,UAAU,CAAC;AACvD,uBAAmB,YAAY,KAAK,qBAAqB;AAEzD,SAAK,yBAAyB,IAAI,uBAAuB,KAAK;AAC9D,uBAAmB,YAAY,KAAK,sBAAsB;AAE1D,SAAK,2BAA2B,IAAI,yBAAyB,KAAK;AAClE,uBAAmB,YAAY,KAAK,wBAAwB;AAE5D,SAAK,+BAA+B,IAAI,6BAA6B,KAAK;AAC1E,uBAAmB,YAAY,KAAK,4BAA4B;AAEhE,SAAK,8BAA8B,IAAI,8BAA8B,KAAK;AAC1E,uBAAmB,YAAY,KAAK,2BAA2B;AAE/D,SAAK,4BAA4B,IAAI,gCAAgC,KAAK;AAC1E,uBAAmB,YAAY,KAAK,yBAAyB;AAE7D,UAAM,gCAAgCE,aAAWF,YAAU,kBAAkB;AAC7E,UAAM,+BAA+B,KAAK,kBAAkB,+BAA+B,qBAAqB;AAEhH,SAAK,kCAAkC,IAAI,4BAA4B,KAAK;AAC5E,iCAA6B,YAAY,KAAK,+BAA+B;AAC7E,SAAK,6BACD,IAAI;MAA6B;MAAK;;IAAA;AAC1C,iCAA6B,YAAY,KAAK,0BAA0B;AACxE,SAAK,4BACD,IAAI;MAA6B;MAAK;;IAAA;AAC1C,iCAA6B,YAAY,KAAK,yBAAyB;AAEvE,SAAK,uCAAuC,IAAI,qCAAqC,KAAK;AAC1F,iCAA6B,YAAY,KAAK,oCAAoC;AAElF,SAAK,2BACD,IAAI;MAA6B;MAAK;;IAAA;AAC1C,iCAA6B,YAAY,KAAK,wBAAwB;AACtE,SAAK,4BACD,IAAI;MAA6B;MAAK;;IAAA;AAC1C,iCAA6B,YAAY,KAAK,yBAAyB;AACvE,SAAK,oCACD,IAAI;MAA6B;MAAK;;IAAA;AAC1C,iCAA6B,YAAY,KAAK,iCAAiC;AAE/E,SAAK,+BAA+B,IAAI,6BAA6B,KAAK;AAC1E,iCAA6B,YAAY,KAAK,4BAA4B;AAC1E,SAAK,6BAA6B,kBAAkB,KAAK;AAEzD,SAAK,2BACD,IAAI;MAA6B;MAAK;;IAAA;AAC1C,iCAA6B,YAAY,KAAK,wBAAwB;AACtE,SAAK,0BAA0B,IAAI,wBAAwB,KAAK;AAChE,iCAA6B,YAAY,KAAK,uBAAuB;AAErE,UAAM,wBAAwBE,aAAWF,YAAU,MAAM;AACzD,UAAM,uBAAuB,KAAK,kBAAkB,uBAAuB,QAAQ;AACnF,SAAK,mBAAmB,IAAI,iBAAiB,OAAO,oBAAoB;AAExE,SAAK,yBAAyB,oBAAI,IAAG;AACrC,SAAK,wCAAwC,oBAAI,IAAG;AACpD,SAAK,+BAA+B,oBAAI,IAAG;AAC3C,SAAK,yBAAyB,CAAA;AAC9B,SAAK,4BAA4B,oBAAI,IAAG;AACxC,SAAK,UAAU,CAAA;AAEf,SAAK,YAAY,eAAe,iBAAiB,aAAa,KAAK,YAAY,KAAK,IAAI,GAAG,KAAK;AAChG,SAAK,YAAY,eAAe,iBAAiB,cAAc,KAAK,aAAa,KAAK,IAAI,GAAG,KAAK;AAElG,IAAI,oBAAc,cAAc,SAAQ,EAAG,eAAe,MAAM,EAAC,QAAQ,KAAI,CAAC;AAC9E,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,wBAAkB,mBAAuB,wBAAkB,OAAO,gBAAgB,KAAK,gBAAgB,MAC3G,EAAC,QAAQ,KAAI,CAAC;AAElB,UAAM,YAAY,KAAK,MAAM,qBAAoB;AACjD,QAAI,CAAC,UAAU,QAAQ;AACrB,0BAAoB,OAAM;IAC5B;AAEA,IAAI,oBAAc,cAAc,SAAQ,EAAG,cACvC,iBAAiB;MACf,YAAY,CAAC,UAA2B,KAAK,qBAAqB,KAAK;MACvE,cAAc,CAAC,UAA2B,KAAK,uBAAuB,KAAK;OAE7E,EAAC,QAAQ,KAAI,CAAC;AAElB,IAAI,oBAAc,cAAc,SAAQ,EAAG,cACvC,uBAAuB;MACrB,YAAY,CAAC,UAAiC,KAAK,2BAA2B,KAAK;MACnF,cAAc,CAAC,UAAiC,KAAK,6BAA6B,KAAK;OAEzF,EAAC,QAAQ,KAAI,CAAC;AAElB,IAAI,oBAAc,cAAc,SAAQ,EAAG,cACvC,gBAAgB;MACd,YAAY,CAAC,UAA0B,KAAK,oBAAoB,KAAK;MACrE,cAAc,CAAC,UAA0B,KAAK,sBAAsB,KAAK;OAE3E,EAAC,QAAQ,KAAI,CAAC;AAClB,IAAI,oBAAc,cAAc,SAAQ,EAAG,cACvC,2BAA2B;MACzB,YAAY,CAAC,UAAqC,KAAK,wBAAwB,KAAK;MACpF,cAAc,CAAC,UAAqC,KAAK,0BAA0B,KAAK;OAE1F,EAAC,QAAQ,KAAI,CAAC;AAClB,IAAI,oBAAc,cAAc,SAAQ,EAAG,cACvC,oBAAoB;MAClB,YAAY,CAAC,UAA8B,KAAK,wBAAwB,KAAK,EAAE,MAAM,SAAM;AACzF,gBAAQ,MAAM,GAAG;MACnB,CAAC;MACD,cAAc,CAAC,UAA8B,KAAK,0BAA0B,KAAK;OAEnF,EAAC,QAAQ,KAAI,CAAC;AAClB,IAAI,oBAAc,cAAc,SAAQ,EAAG,cACnC,0BAAoB,qBAAqB;MAC3C,YAAY,CAAC,UAAuD,KAAK,yBAAyB,KAAK;MACvG,cAAc,CAAC,UAAuD,KAAK,2BAA2B,KAAK;OAE7G,EAAC,QAAQ,KAAI,CAAC;AAElB,SAAK,qCACD,IAAW,uBAAc,cAAa;AAE1C,SAAK,eAAe,MAAM,UAAU;EACtC;EAEQ,kBAAkB,OAAe,cAAoB;AAC3D,UAAM,cAAc,IAAO,iBAAY,YAAY,OAAO,MAAM,YAAY;AAC5E,gBAAY,gBAAgB,UAAU,IAAI,yBAAyB;AACnE,gBAAY,eAAe,KAAK;AAChC,gBAAY,aAAa;AACzB,SAAK,YAAY,YAAY,WAAW;AACxC,IAAG,eAAU,cAAc,YAAY,iBAAiB,CAAC;AACzD,IAAG,eAAU,SAAS,YAAY,qBAAqB,KAAK;AAC5D,WAAO;EACT;EAEA,YAAY,QAAyB;AACnC,QAAI,WAAW,OAAO,gBAAe,GAAI;AACvC;IACF;AAEA,SAAK,SAAS;AAEd,UAAM,qBAAqB,OAAO,MAAM,yBAAyB;AACjE,QAAI,oBAAoB;AACtB,yBAAmB,iBAAgB,uBACiB,KAAK,qBAAqB,IAAI;IACpF;AAEA,UAAM,oBAAoB,OAAO,MAAU,wBAAkB,iBAAiB;AAC9E,QAAI,CAAC,mBAAmB;AACtB;IACF;AAEA,QAAI,kBAAkB,sBAAqB,GAAI;AAC7C,WAAK,WAAU;IACjB;AAEA,sBAAkB,iBAAqB,wBAAkB,OAAO,uBAAuB,KAAK,YAAY,IAAI;AAC5G,sBAAkB,iBACV,wBAAkB,OAAO,yBAAyB,KAAK,iBAAiB,IAAI;EACtF;EAEA,cAAc,QAAyB;AACrC,QAAI,WAAW,KAAK,QAAQ;AAC1B;IACF;AACA,WAAO,KAAK;AAEZ,UAAM,oBAAoB,OAAO,MAAU,wBAAkB,iBAAiB;AAC9E,QAAI,mBAAmB;AACrB,wBAAkB,oBAAwB,wBAAkB,OAAO,uBAAuB,KAAK,YAAY,IAAI;AAC/G,wBAAkB,oBACV,wBAAkB,OAAO,yBAAyB,KAAK,iBAAiB,IAAI;IACtF;AAEA,UAAM,qBAAqB,OAAO,MAAM,yBAAyB;AACjE,QAAI,oBAAoB;AACtB,yBAAmB,oBAAmB,uBACc,KAAK,qBAAqB,IAAI;IACpF;AAEA,SAAK,gBAAe;EACtB;EAES,QAAK;AACZ,SAAK,YAAY,MAAK;EACxB;EAEQ,aAAU;AAChB,eAAW,SAAa,wBAAkB,kBAAkB,OAAM,GAAI;AACpE,WAAK,kBAAkB,KAAK;IAC9B;AACA,UAAM,qBAAqB,KAAK,QAAQ,MAAM,yBAAyB;AACvE,QAAI,oBAAoB;AACtB,yBAAmB,OAAM;IAC3B;AAEA,SAAK,4BAA4B,WAAU;AAC3C,UAAM,yBAAyB,KAAK,QAAQ,MAAM,sBAAsB,KAAK;AAC7E,SAAK,2BAA2B,WAAW,sBAAsB;AACjE,SAAK,0BAA0B,WAAW,sBAAsB;AAChE,SAAK,yBAAyB,WAAW,sBAAsB;AAC/D,SAAK,0BAA0B,WAAW,sBAAsB;AAChE,SAAK,kCAAkC,WAAW,sBAAsB;AACxE,SAAK,yBAAyB,WAAW,sBAAsB;AAC/D,SAAK,2BAA2B,WAAU;AAE1C,UAAM,kBAAkB,KAAK,QAAQ,MAAU,sBAAgB,eAAe;AAC9E,QAAI,iBAAiB;AACnB,WAAK,8BAA8B,WAAW,eAAe;IAC/D;EACF;EAEQ,qBAAqB,OAAsB;AACjD,UAAM,OAAM;AACZ,UAAM,SAAQ,EAAG,QAAQ,KAAK,cAAc,KAAK,IAAI,CAAC;AACtD,UAAM,iBAAgB,mBAA0C,KAAK,iBAAiB,IAAI;AAC1F,UAAM,iBAAgB,qBAA4C,KAAK,mBAAmB,IAAI;EAChG;EAEQ,uBAAuB,OAAsB;AACnD,UAAM,SAAQ,EAAG,QAAQ,KAAK,iBAAiB,KAAK,IAAI,CAAC;AACzD,UAAM,oBAAmB,mBAA0C,KAAK,iBAAiB,IAAI;AAC7F,UAAM,oBAAmB,qBAA4C,KAAK,mBAAmB,IAAI;EACnG;EAEQ,2BAA2B,OAA4B;AAC7D,SAAK,uBAAuB,KAAK,KAAK;AACtC,UAAM,OAAM;AACZ,UAAM,SAAQ,EAAG,QAAQ,KAAK,oBAAoB,KAAK,IAAI,CAAC;AAC5D,UAAM,iBAAgB,yBAAsD,KAAK,uBAAuB,IAAI;AAC5G,UAAM,iBAAgB,2BAAwD,KAAK,yBAAyB,IAAI;EAClH;EAEQ,6BAA6B,OAA4B;AAC/D,YAAQ,OAAO,KAAK,uBAAuB,SAAS,KAAK,CAAC;AAC1D,SAAK,uBAAuB,OAAO,KAAK,uBAAuB,QAAQ,KAAK,GAAG,CAAC;AAChF,UAAM,SAAQ,EAAG,QAAQ,KAAK,uBAAuB,KAAK,IAAI,CAAC;AAC/D,UAAM,oBAAmB,yBAAsD,KAAK,uBAAuB,IAAI;AAC/G,UAAM,oBAAmB,2BACkC,KAAK,yBAAyB,IAAI;EAC/F;EAEQ,oBAAoB,OAAqB;AAC/C,UAAM,OAAM;AACZ,SAAK,yBAAyB,qBAAqB,KAAK;EAC1D;EAEQ,sBAAsB,OAAqB;AACjD,SAAK,yBAAyB,wBAAwB,KAAK;EAC7D;EAEQ,wBAAwB,OAAgC;AAC9D,UAAM,OAAM;AACZ,UAAM,iBAAgB,uBAAiD,KAAK,qBAAqB,IAAI;EACvG;EAEQ,0BAA0B,OAAgC;AAChE,UAAM,QAAO;AACb,UAAM,oBAAmB,uBAAiD,KAAK,qBAAqB,IAAI;EAC1G;EAEQ,MAAM,wBAAwB,OAAyB;AAC7D,UAAM,MAAM,OAAM;AAClB,eAAW,WAAW,MAAM,SAAQ,GAAI;AACtC,YAAM,KAAK,iBAAiB,OAAO;IACrC;AACA,UAAM,iBAAgB,sBAAgD,KAAK,oBAAoB,IAAI;AACnG,UAAM,iBAAgB,wBAAkD,KAAK,sBAAsB,IAAI;AACvG,UAAM,iBAAgB,uBAAiD,KAAK,qBAAqB,IAAI;EACvG;EAEQ,0BAA0B,OAAyB;AACzD,UAAM,QAAO;AACb,eAAW,WAAW,MAAM,SAAQ,GAAI;AACtC,WAAK,oBAAoB,OAAO;IAClC;AACA,UAAM,oBAAmB,sBAAgD,KAAK,oBAAoB,IAAI;AACtG,UAAM,oBAAmB,wBAAkD,KAAK,sBAAsB,IAAI;AAC1G,UAAM,oBAAmB,uBAAiD,KAAK,qBAAqB,IAAI;EAC1G;EAEQ,yBAAyB,OAAkD;AACjF,UAAM,OAAM;EACd;EAEQ,2BAA2B,OAAkD;AACnF,SAAK,2BAA2B,sBAAsB,KAAK;EAC7D;EAEQ,kBAAe;AACrB,SAAK,iBAAiB,MAAK;AAC3B,SAAK,MAAK;EACZ;EAEQ,iBAAiB,OAAsE;AAM7F,UAAM,YAAY,KAAK,MAAM,qBAAoB;AACjD,QAAI,CAAC,UAAU,QAAQ;AACrB;IACF;AACA,UAAM,UAAU,MAAM;AACtB,UAAM,cAAc,CAAC,OAAmE;AACxF,aAAS,SAAS,QAAQ,QACrB,UAAU,aAAa,UAAU,OAAO,SAAS,SAAS,OAAO,QAAQ;AAC5E,kBAAY,KAAK,MAAM;IACzB;AAEA,QAAI,IAAI,UAAU,SAAS;AAC3B,QAAI,IAAI,YAAY,SAAS;AAC7B,WAAO,KAAK,KAAK,KAAK,KAAK,UAAU,CAAC,MAAO,YAAY,CAAC,EAAkC,SAAS;AACnG,UAAI,CAAC,YAAY,CAAC,EAAE,UAAU;AAC5B,YAAI,IAAI,GAAG;AACT,sBAAY,CAAC,EAAE,OAAM;QACvB;AACA,YAAI,CAAC,YAAY,CAAC,EAAE,UAAU;AAC5B,sBAAY,CAAC,EAAE,OAAM;QACvB;MACF;AACA;AACA;IACF;EACF;EAEQ,QAAK;AACX,SAAK,UAAU,CAAA;AACf,SAAK,sBAAsB,eAAc;AACzC,SAAK,yBAAyB,YAAW;EAC3C;EAEQ,eAAe,OAAmF;AACxG,UAAM,QAAQ,MAAM;AAEpB,QAAI,MAAM,iBAAgB,GAAI;AAC5B,WAAK,MAAK;IACZ;AACA,SAAK,kBAAkB,KAAK;EAC9B;EAEQ,oBAAoB,OAAuF;AAEjH,SAAK,yBAAyB,SAAS,MAAM,IAAI;EACnD;EAEQ,kBAAkB,OAA8C;AAItE,UAAM,aAAa,MAAM,eAAc,KAAM,MAAM;AACnD,UAAM,YAAmB,mBAAU,UAAU,WAAW,UAAU;AAClE,QAAI,CAAC,aAAc,UAAU,WAAW,UAAU,UAAU,WAAW,WAAW,UAAU,WAAW,QAAS;AAC9G;IACF;AAEA,UAAM,SAAS,UAAU,eAAc;AACvC,QAAI,CAAC,KAAK,QAAQ,MAAM,GAAG;AACzB,WAAK,QAAQ,MAAM,IAAI;AACvB,YAAM,0BAA0B,IAAI,kBAAkB,KAAK,OAAO,OAAO,SAAS;AAClF,WAAK,sBAAsB,YAAY,uBAAuB;IAChE;EACF;EAEQ,gBAAgB,OAAsD;AAC5E,UAAM,aAAc,MAAM;AAC1B,SAAK,cAAc,UAAU;EAC/B;EAEQ,cAAc,YAAsB;AAC1C,YAAQ,OAAO,CAAC,KAAK,uBAAuB,IAAI,UAAU,CAAC;AAC3D,YAAQ,OAAO,QAAQ,WAAW,UAAU,CAAC;AAE7C,UAAM,wBAAwB,IAAI,sBAAsB,KAAK,OAAO,UAAU;AAC9E,SAAK,uBAAuB,IAAI,YAAY,qBAAqB;AACjE,QAAI,WAAW,gBAAgB;AAC7B,WAAK,4BAA4B,YAAY,uBAAuB,UAAU;IAChF,OAAO;AACL,WAAK,8BAA8B,YAAY,uBAAuB,UAAU;IAClF;AAEA,aAAS,WAAW,GAA+B,GAA6B;AAC9E,YAAM,SAAS,EAAE,YAAW,EAAG,kBAAiB;AAChD,YAAM,SAAS,EAAE,YAAW,EAAG,kBAAiB;AAChD,aAAO,OAAO,cAAc,MAAM;IACpC;EACF;EAEQ,kBAAkB,OAAsD;AAC9E,UAAM,aAAc,MAAM;AAC1B,SAAK,iBAAiB,UAAU;EAClC;EAEQ,iBAAiB,YAAsB;AAC7C,UAAM,cAAc,KAAK,uBAAuB,IAAI,UAAU;AAC9D,QAAI,CAAC,aAAa;AAChB;IACF;AACA,UAAM,cAAc,YAAY;AAChC,UAAM,wBAAwB,YAAY;AAC1C,QAAI,uBAAuB;AACzB,4BAAsB,YAAY,WAAW;AAC7C,UAAI,aAAa;AACf,8BAAsB,OAAM;MAC9B;IACF;AACA,SAAK,uBAAuB,OAAO,UAAU;EAC/C;EAEQ,sBAAsB,OAA4D;AACxF,UAAM,mBAAmB,MAAM;AAC/B,SAAK,oBAAoB,gBAAgB;EAC3C;EAEQ,+BAA+B,kBAAkC;AAQvE,WAAO,CAAC,iBAAiB,cAAc,KAAK,MAAM;EACpD;EAEQ,8BAA8B,kBAAkC;AACtE,QAAI,CAAC,KAAK,+BAA+B,gBAAgB,GAAG;AAC1D,aAAO,KAAK;IACd;AAEA,UAAM,iBAAiB,KAAK,sCAAsC,IAAI,iBAAiB,WAAW;AAClG,QAAI,gBAAgB;AAClB,aAAO;IACT;AAEA,UAAM,SACF,IAAI,kCAAkC,KAAK,OAAO,iBAAiB,aAAa,iBAAiB,IAAI;AACzG,SAAK,sCAAsC,IAAI,iBAAiB,aAAa,MAAM;AACnF,SAAK,iCAAiC,YAAY,MAAM;AACxD,WAAO;EACT;EAEQ,oBAAoB,kBAAkC;AAC5D,QAAI,KAAK,uBAAuB,KACxB,OAAK,MAAM,iBAAiB,SACxB,EAAE,oBAAoB,iBAAiB,aAAa,iBAAiB,WAAW,CAAC,GAAG;AAG9F;IACF;AAEA,YAAQ,OAAO,QAAQ,KAAK,+BAA+B,CAAC;AAC5D,YAAQ,OAAO,CAAC,KAAK,6BAA6B,IAAI,iBAAiB,GAAG,CAAC;AAE3E,UAAM,8BAA8B,IAAI,4BAA4B,KAAK,OAAO,gBAAgB;AAChG,SAAK,6BAA6B,IAAI,iBAAiB,KAAK,2BAA2B;AACvF,SAAK,8BAA8B,gBAAgB,GAAG,YAAY,6BAA6B,UAAU;AAEzG,aAAS,WAAW,GAA+B,GAA6B;AAC9E,YAAM,iBAAiB,CAAC,MACnB,EAAkC;AACvC,YAAM,QAAQ;;;;;;AAMd,aAAO,MAAM,QAAQ,eAAe,CAAC,CAAC,IAAI,MAAM,QAAQ,eAAe,CAAC,CAAC;IAC3E;EACF;EAEQ,wBAAwB,OAA4D;AAC1F,UAAM,mBAAmB,MAAM;AAC/B,SAAK,uBAAuB,gBAAgB;EAC9C;EAEQ,uBAAuB,kBAAkC;AAC/D,QAAI,KAAK,uBAAuB,KACvB,OAAK,EAAE,oBAAoB,iBAAiB,aAAa,iBAAiB,WAAW,CAAE,GAAG;AAGjG;IACF;AAEA,UAAM,cAAc,KAAK,6BAA6B,IAAI,iBAAiB,GAAG;AAC9E,QAAI,CAAC,aAAa;AAChB;IACF;AACA,UAAM,cAAc,YAAY;AAChC,UAAM,wBAAwB,YAAY;AAC1C,QAAI,uBAAuB;AACzB,4BAAsB,YAAY,WAAW;AAC7C,UAAI,KAAK,+BAA+B,gBAAgB,KAAK,sBAAsB,WAAU,MAAO,GAAG;AACrG,aAAK,iCAAiC,YAAY,qBAAqB;AACvE,aAAK,sCAAsC,OAAO,iBAAiB,WAAW;MAChF,WAAW,aAAa;AACtB,8BAAsB,OAAM;MAC9B;IACF;AACA,SAAK,6BAA6B,OAAO,iBAAiB,GAAG;EAC/D;EAEQ,MAAM,mBAAmB,OAAkE;AACjG,UAAM,KAAK,iBAAiB,MAAM,IAAI;EACxC;EAEQ,MAAM,iBAAiB,eAAqC;AAClE,UAAM,2BAA2B,MAAM,yBAAyB,cAAc,KAAK,OAAO,aAAa;AAGvG,QAAI,KAAK,0BAA0B,IAAI,cAAc,cAAc,GAAG;AACpE;IACF;AACA,SAAK,0BAA0B,IAAI,cAAc,gBAAgB,wBAAwB;AACzF,SAAK,6BAA6B,YAAY,wBAAwB;AACtE,SAAK,mCAAmC,yBAAwB,iCAE5D,EAAC,QAAQ,cAAc,eAAc,CAAC;EAC5C;EAEQ,qBAAqB,OAAkE;AAC7F,SAAK,oBAAoB,MAAM,IAAI;EACrC;EAEQ,oBAAoB,eAAqC;AAC/D,UAAM,cAAc,KAAK,0BAA0B,IAAI,cAAc,cAAc;AACnF,QAAI,CAAC,aAAa;AAChB;IACF;AACA,UAAM,cAAc,YAAY;AAChC,UAAM,wBAAwB,YAAY;AAC1C,QAAI,uBAAuB;AACzB,4BAAsB,YAAY,WAAW;AAC7C,4BAAsB,cAAc,sBAAsB,WAAU,IAAK,CAAC;AAC1E,UAAI,aAAa;AACf,8BAAsB,OAAM;MAC9B;IACF;AACA,SAAK,0BAA0B,OAAO,cAAc,cAAc;EACpE;EAEQ,oBAAoB,OAAuF;AAEjH,SAAK,6BAA6B,SAAS,MAAM,IAAI;EACvD;EAEA,MAAM,aAAa,UAAiC,MAAe,QAAe;AAChF,UAAM,KAAK,iBAAiB,eAAe,UAAU,MAAM,MAAM;EACnE;EAEA,UAAU,OAA8C;AACtD,SAAK,iBAAiB,qBAAqB,KAAK;EAClD;EAEA,0BAA0B,YAA0D;AAClF,QAAI,KAAK,8BAA8B;AACrC,WAAK,6BAA6B,uBAAuB,UAAU;IACrE;EACF;EAEA,oCAAoC,QAAgE;AAClG,QAAI,KAAK,8BAA8B;AACrC,WAAK,6BAA6B,wBAAwB,MAAM;IAClE;EACF;EAEQ,YAAY,OAAiB;AACnC,UAAM,iBAAkB,MAAM;AAC9B,QAAI,CAAC,gBAAgB;AACnB;IACF;AAEA,UAAM,WAAc,aAAQ,gCAAgC,gBAAgB,IAAI;AAChF,QAAI,CAAC,UAAU;AACb;IACF;AAEA,UAAM,UAAa,iBAAY,YAAY,6BAA6B,QAAQ;AAChF,QAAI,KAAK,2BAA2B,SAAS;AAC3C;IACF;AAEA,QAAI,KAAK,wBAAwB;AAC/B,WAAK,uBAAuB,UAAU;AACtC,aAAO,KAAK;IACd;AAEA,QAAI,mBAAmB,kBAAkB;AACvC,WAAK,yBAAyB;AAC9B,cAAQ,UAAU;IACpB;EACF;EAEQ,aAAa,QAAkB;AACrC,QAAI,KAAK,wBAAwB;AAC/B,WAAK,uBAAuB,UAAU;AACtC,aAAO,KAAK;IACd;EACF;;AAGI,IAAO,+BAAP,cAA4C,4BAA2B;EACnE;EACA;EACA;EACR;EAEA,YAAY,cAA8B,aAAmD;AAC3F,UACI,cAAc,sBAAsB,YAAY,WAAW,GAAG,OACrD,0BAAgB,YAAY,WAAW,CAAC;AAErD,SAAK,cAAc;AAGnB,SAAK,YAAY;AAEjB,SAAK,OAAO;AAEZ,SAAK,QAAQ;AAEb,UAAM,wBAAmC,kBAAK,OAAO,KAAK,YAAW,CAAE;AACvE,SAAK,gBAAgB,CAAC,qBAAqB,CAAC;EAC9C;EAEQ,cAAW;AACjB,YAAQ,KAAK,aAAa;MACxB,KAAA;AACE,eAAO;MACT,KAAA;AACE,eAAO;MACT,KAAA;AACE,eAAO;MACT,KAAA;AACE,eAAO;MACT,KAAA;AACE,eAAO;MACT,KAAA;AACE,eAAO;MACT;AACE,gBAAQ,MAAM,WAAW,KAAK,WAAW,iCAAiC;AAC1E,eAAO;IACX;EACF;EAEA,WAAW,OAAkC;AAC3C,SAAK,QAAQ;AAEb,QAAI,KAAK,aAAa,CAAC,KAAK,MAAM;AAChC,WAAK,SAAS,KAAK;IACrB;EACF;EAEA,IAAa,UAAO;AAClB,WAAO,wBAAwB,KAAK,WAAW;EACjD;EAEA,IAAa,aAAU;AACrB,QAAI,CAAC,KAAK,OAAO;AACf,aAAO;IACT;AACA,WAAO,MAAM;EACf;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,SAAK,YAAY;AAEjB,QAAI,CAAC,KAAK,OAAO;AACf,aAAO;IACT;AAEA,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,IAAI,sBAAsB,KAAK,aAAa,KAAK,KAAK;IACpE;AACA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAG,aAAQ,QAAQ,SAAQ,EAAG,UAAU,uBAAuB,KAAK,IAAI;AACxE,IAAK,kBAAY,WAAW,wBAAwB,KAAK,WAAW;AACpE,WAAO;EACT;;AAGI,IAAO,4BAAP,cAAyC,4BAA2B;EAChE;EAER,YAAY,cAA4B;AACtC,UAAM,cAAmB,YAAK,aAAa,iBAAiB,GAAG,OAAO,iBAAiB;AACvF,UAAM,OAAkB,kBAAK,OAAO,OAAO;AAC3C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,IAAa,UAAO;AAClB,WAAO;EACT;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,IAAI,mBAAkB;IACpC;AACA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,iBAAiB;AAC7C,WAAO;EACT;;AAGI,IAAO,yBAAP,cAAsC,4BAA2B;EAC7D;EACR,YAAY,cAA4B;AACtC,UAAM,cAAcE,aAAWF,YAAU,QAAQ,GAAG,MAAM,UAAU;AACpE,UAAM,OAAkB,kBAAK,OAAO,UAAU;AAC9C,SAAK,gBAAgB,CAAC,IAAI,CAAC;AAC3B,SAAK,gBAAgB,KAAK,iBAAiB,KAAK,SAAS,KAAK,IAAI,CAAC;AACnE,UAAM,YAAY,IAAO,iBAAY,YACjCE,aAAWF,YAAU,kBAAkB,GAAGE,aAAWF,YAAU,mBAAmB,CAAC;AAEvF,UAAM,aAAa,IAAO,gBAAW,WAAWE,aAAWF,YAAU,WAAW,CAAC;AACjF,SAAK,OAAO,IAAI,gBAAgB,WAAW,YAAY,IAAW,mBAAU,UAAU,GAAI,CAAC;AAC3F,IAAG,eAAU,SAAS,KAAK,iBAAiBE,aAAWF,YAAU,qBAAqB,CAAC;AACvF,UAAM,kBAAkB,CAAC,gBAA8B;AACrD,WAAK,cAAc,WAAW;IAChC;AACA,SAAK,KAAK,iBAAgB,oBAA0C,WAAS,gBAAgB,MAAM,IAAI,CAAC;EAC1G;EAEA,IAAa,UAAO;AAClB,WAAO;EACT;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,cAAc;AAC1C,WAAO;EACT;EAEA,mBAAgB;AACd,UAAM,iBAAiB,KAAK,KAAK,kBAAiB;AAClD,eAAWG,YAAW,gBAAgB;AACpC,YAAM,iBAAiBA,SAAQ,gBAAe;AAC9C,YAAM,aAAaA,SAAQ,MAAK;AAChC,YAAM,sBAAsBA,SAAQ,gBAAe;AACnD,YAAM,QAAQ,IAAI,yBACd,KAAK,gBAAgB,gBAAgB,YAAY,qBAAqBA,SAAQ,gBAAgB,EAAE;AACpG,WAAK,YAAY,KAAK;IACxB;EACF;EAEA,WAAQ;AACN,SAAK,KAAK,mBAAkB,EAAG,eAAc;AAC7C,IAAG,eAAU,cAAc,MAAMD,aAAWF,YAAU,eAAe,EAAC,KAAK,KAAK,gBAAgB,MAAK,CAAC,CAAC;EACzG;EAEA,mBAAgB;AACd,SAAK,SAAS,KAAK,IAAI;EACzB;;AAGI,IAAO,2BAAP,cAAwC,4BAA2B;EACvE;EACA;EACA,YACI,cAA8B,SAAkB,YAAoB,cACpE,cAAoB;AACtB,UAAM,cAAc,YAAY,OAAO,YAAY;AACnD,UAAM,OAAkB,kBAAK,OAAO,UAAU;AAC9C,SAAK,gBAAgB,CAAC,IAAI,CAAC;AAC3B,SAAK,kBAAkB;AACvB,SAAK,uBAAuB;AAC5B,SAAK,gBAAgB,KAAK,iBAAiB,KAAK,SAAS,KAAK,IAAI,CAAC;AACnE,SAAK,gBAAgB,iBAAiB,WAAW,KAAK,uBAAuB,KAAK,IAAI,CAAC;AACvF,IAAG,eAAU,SACT,KAAK,iBAAiBE,aAAWF,YAAU,mBAAmB,EAAC,KAAK,KAAK,gBAAgB,MAAK,CAAC,CAAC;EACtG;EAEA,IAAa,UAAO;AAClB,WAAO,gBAAgB,KAAK;EAC9B;EAEA,WAAQ;AACL,SAAK,QAAmC,iBAAgB;AACzD,SAAK,gBAAgB,eAAc;AACnC,IAAG,eAAU,cAAc,MAAME,aAAWF,YAAU,eAAe,EAAC,KAAK,KAAK,gBAAgB,MAAK,CAAC,CAAC;EACzG;;EAEA,uBAAuB,OAAoB;AACzC,QAAI,MAAM,QAAQ,SAAS,MAAM,UAAU;AACzC;IACF;AACA,UAAM,kBAAkB,KAAK,qBAAqB,cAAc,gBAAgB;AAChF,QAAI,mBAAqC,KAAK,qBAAqB,cAAc,gBAAgB;AACjG,QAAI,iBAAiB,YAAY;AAC/B,yBAAmB,gBAAgB,WAAW,cAAc,OAAO,KAAK;IAC1E,WAAW,CAAC,kBAAkB;AAE5B,yBAAmB,KAAK,qBAAqB,cAAc,iCAAiC,GACnE,YAAY,cAAc,gBAAgB,KAC/D;IACN;AACA,QAAI,kBAAkB;AACpB,wBAAkB,MAAK;AACvB,YAAM,QAAQ,IAAI;IACpB;EACF;;AAGI,IAAO,0BAAP,cAAuC,4BAA2B;EAC9D;EACR,YAAY,cAA4B;AACtC,UAAM,cAAcE,aAAWF,YAAU,OAAO,GAAG,OAAO,SAAS;AACnE,UAAM,OAAkB,kBAAK,OAAO,UAAU;AAC9C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,IAAa,UAAO;AAClB,WAAO;EACT;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,IAAI,YAAW;IAC7B;AACA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAgB,kBAAY,WAAgB,kBAAY,WAAW,OAAO,CAAC;AAC5F,WAAO;EACT;;AAGI,IAAO,uBAAP,cAAoC,sCAAqC;EACrE;EACA;EACR,YAAY,cAA8B,eAA8C;AACtF,UACI,cAAcE,aAAWF,YAAU,SAAS,GAAGE,aAAWF,YAAU,WAAW,GAC/EE,aAAWF,YAAU,oBAAoB,GAAG,YAAY;AAC5D,UAAM,OAAkB,kBAAK,OAAO,UAAU;AAC9C,SAAK,gBAAgB,CAAC,IAAI,CAAC;AAC3B,SAAK,0BAA0B,CAAA;AAC/B,SAAK,gBAAgB;AACrB,SAAK,WAAU;EACjB;EAEQ,aAAU;AAChB,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACvC,gBAAgBI,QAAqB,eAAe,KAAK,gBAAgB,MAAM,EAAC,QAAQ,KAAI,CAAC;AACjG,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACvC,gBAAgBA,QAAqB,iBAAiB,KAAK,kBAAkB,MAAM,EAAC,QAAQ,KAAI,CAAC;AACrG,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACvC,gBAAgBA,QAAqB,gBAAgB,KAAK,iBAAiB,MAAM,EAAC,QAAQ,KAAI,CAAC;AACnG,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACvC,gBAAgBA,QAAqB,yBAAyB,KAAK,yBAAyB,MAC5F,EAAC,QAAQ,KAAI,CAAC;AAGlB,SAAK,0BAA0B,CAAA;AAE/B,eAAW,kBAAsB,oBAAc,cAAc,SAAQ,EAAG,OAAO,gBAAgB,EAAC,QAAQ,KAAI,CAAC,GAAG;AAC9G,YAAM,YAAY,eAAe,UAAS;AAC1C,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,EAAE,GAAG;AACzC,aAAK,aAAa,gBAAgB,UAAU,CAAC,CAAC;MAChD;IACF;EACF;EAEA,qBAAqB,OAAqB;AACxC,eAAW,cAAc,MAAM,UAAS,GAAI;AAC1C,WAAK,aAAa,OAAO,UAAU;IACrC;EACF;EAEA,wBAAwB,OAAqB;AAC3C,UAAM,0BAA0B,KAAK,wBAAwB,OAAO,aAAW,QAAQ,UAAU,KAAK;AACtG,eAAW,0BAA0B,yBAAyB;AAC5D,WAAK,6BAA6B,sBAAsB;IAC1D;EACF;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,SAAK,gBAAgB,iBAAiB,eAAe,KAAK,uBAAuB,KAAK,IAAI,GAAG,IAAI;EACnG;EAEQ,uBAAuB,OAAiB;AAC9C,UAAM,cAAc,IAAO,iBAAY,YAAY,KAAK;AACxD,gBAAY,eAAc,EAAG,WACzBF,aAAWF,YAAU,gBAAgB,GAAG,KAAK,iBAAiB,KAAK,IAAI,GAAG,EAAC,cAAc,oBAAmB,CAAC;AACjH,SAAK,YAAY,KAAI;EACvB;EAEA,mBAAgB;AACd,eAAW,kBAAsB,oBAAc,cAAc,SAAQ,EAAG,OAAO,gBAAgB,EAAC,QAAQ,KAAI,CAAC,GAAG;AAC9G,WAAK,eAAe,qBAAoB;IAC1C;EACF;EAEQ,eAAe,YAAsB;AAC3C,QAAI,KAAK,eAAe;AACtB,aAAO,WAAW,SAAS,KAAK,aAAa;IAC/C;AACA,WAAO;EACT;EAEQ,eAAe,EACrB,MAAM,EAAC,YAAY,MAAK,EAAC,GAC4D;AACrF,SAAK,aAAa,OAAO,UAAU;EACrC;EAEQ,aAAa,OAAuB,YAAsB;AAChE,QAAI,CAAC,KAAK,eAAe,UAAU,GAAG;AACpC;IACF;AACA,UAAM,yBAAyB,IAAI,uBAAuB,KAAK,gBAAgB,OAAO,UAAU;AAChG,SAAK,wBAAwB,KAAK,sBAAsB;AACxD,SAAK,YAAY,sBAAsB;AACvC,UAAM,gBAAgB,UAAU;EAClC;EAEQ,iBAAiB,EACvB,MAAM,EAAC,YAAY,MAAK,EAAC,GAC4D;AACrF,UAAM,yBAAyB,KAAK,uBAAuB,OAAO,UAAU;AAC5E,QAAI,CAAC,wBAAwB;AAC3B;IACF;AACA,SAAK,6BAA6B,sBAAsB;EAC1D;EAEQ,6BAA6B,wBAA8C;AACjF,2BAAuB,MAAK;AAC5B,SAAK,YAAY,sBAAsB;AACvC,IAAS,yBAAe,cAAc,KAAK,yBAAyB,sBAAsB;AAC1F,SAAK,cAAc,KAAK,WAAU,IAAK,CAAC;EAC1C;EAEQ,gBACJ,EAAC,MAAM,EAAC,UAAU,OAAO,eAAc,EAAC,GACiE;AAC3G,UAAM,yBAAyB,KAAK,uBAAuB,OAAO,SAAS,UAAU;AACrF,QAAI,CAAC,wBAAwB;AAC3B;IACF;AACA,2BAAuB,OAAO,UAAU,cAAc;AACtD,SAAK,uBAAsB;EAC7B;EAEQ,yBAAsB;EAE9B;EAEQ,wBAAwB,EAC9B,MAAM,EAAC,YAAY,iBAAiB,MAAK,EAAC,GACoE;AAE9G,UAAM,yBAAyB,KAAK,uBAAuB,OAAO,UAAU;AAC5E,QAAI,CAAC,wBAAwB;AAC3B;IACF;AACA,2BAAuB,wBAAwB,eAAe;EAChE;EAEQ,uBAAuB,OAAuB,YAAsB;AAC1E,WAAO,KAAK,wBAAwB,KAAK,OAAK,EAAE,WAAW,OAAO,UAAU,KAAK,EAAE,UAAU,KAAK,KAAK;EACzG;;AAGI,IAAO,yBAAP,cAAsC,4BAA2B;EACrE;EACA;EACiB;EACT;EACA;EAER,YAAY,cAA8B,OAAuB,YAAsB;AACrF,UAAM,cAAc,WAAW,MAAM,OAAO,qBAAqB;AACjE,SAAK,QAAQ;AACb,SAAK,aAAa;AAClB,SAAK,6BAA6B,oBAAI,IAAG;AACzC,UAAM,OAAkB,kBAAK,OAAO,UAAU;AAC9C,SAAK,gBAAgB,CAAC,IAAI,CAAC;AAC3B,SAAK,MAAM,iBAAiBI,QAAqB,wBAAwB,KAAK,kBAAkB,IAAI;EACtG;EAEA,IAAa,UAAO;AAClB,WAAO,iBAAiB,KAAK,WAAW,cAAc,aAAa,OAC9D,KAAK,WAAW,cAAc,QAAQ,MAAM,MAAM,KAAK,WAAW;EACzE;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,SAAK,gBAAgB,iBAAiB,eAAe,KAAK,uBAAuB,KAAK,IAAI,GAAG,IAAI;EACnG;EAEQ,uBAAuB,OAAiB;AAC9C,UAAM,cAAc,IAAO,iBAAY,YAAY,KAAK;AACxD,gBAAY,eAAc,EAAG,WACzBF,aAAWF,YAAU,gBAAgB,GAAG,KAAK,iBAAiB,KAAK,IAAI,GAAG,EAAC,cAAc,oBAAmB,CAAC;AACjH,SAAK,YAAY,KAAI;EACvB;EAEQ,mBAAgB;AACtB,SAAK,MAAM,gBAAgB,KAAK,UAAU;EAC5C;EAEA,wBAAwB,iBAAuB;AAC7C,UAAM,cAAc,KAAK,2BAA2B,IAAI,eAAe;AACvE,QAAI,aAAa;AACf,kBAAY,iBAAgB;IAC9B;EACF;EAEA,OAAO,UAAkC,gBAAuB;AAC9D,SAAK,WAAW;AAChB,UAAM,mBAAmB,oBAAI,IAAG;AAChC,eAAW,mBAAmB,CAAC,GAAG,KAAK,SAAS,aAAa,KAAI,CAAE,EAAE,KAAI,GAAI;AAC3E,YAAM,cAAc,KAAK,SAAS,aAAa,IAAI,eAAe;AAClE,UAAI,CAAC,aAAa;AAChB;MACF;AACA,uBAAiB,IAAI,YAAY,IAAI;AACrC,UAAI,cAAc,KAAK,2BAA2B,IAAI,YAAY,IAAI;AACtE,UAAI,CAAC,aAAa;AAChB,sBAAc,IAAI,0BAA0B,KAAK,gBAAgB,KAAK,OAAO,KAAK,YAAY,WAAW;AACzG,aAAK,2BAA2B,IAAI,YAAY,MAAM,WAAW;AACjE,aAAK,YAAY,WAAW;MAC9B;AACA,kBAAY,OAAO,aAAa,cAAc;IAChD;AACA,eAAW,mBAAmB,KAAK,2BAA2B,KAAI,GAAI;AACpE,UAAI,CAAC,iBAAiB,IAAI,eAAe,GAAG;AAC1C,aAAK,mBAAmB,eAAe;MACzC;IACF;AAEA,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,aAAY,EAAG,OAAO,QAAQ;IAC1C;AAEA,SAAK,cAAa;EACpB;EAEQ,gBAAa;AACnB,UAAM,UAAU,KAAK,WAAW,KAAK,SAAS,UAAU;AACxD,QAAI,OAAO,KAAK,KAAK,0BAA0B,EAAE,WAAW,GAAG;AAC7D,WAAK,UAAUE,aAAWF,YAAU,eAAe,EAAC,KAAK,QAAO,CAAC;IACnE,OAAO;AACL,WAAK,UAAUE,aAAWF,YAAU,UAAU,EAAC,KAAK,QAAO,CAAC;IAC9D;EACF;EAEA,IAAa,aAAU;AACrB,QAAI,CAAC,KAAK,UAAU;AAClB,aAAO;IACT;AACA,WAAO,MAAM;EACf;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,UAAU;AAClB,aAAO;IACT;AACA,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAqB,8BAAc,cACjC,YAAO,MAAM,IAAI,gBAAgB,KAAK,OAAO,KAAK,QAAQ,GAAG,gBAAgB;IACtF;AAEA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,YAAY;AACxC,WAAO;EACT;EAEQ,mBAAmB,iBAAuB;AAChD,UAAM,yBAAyB,KAAK,2BAA2B,IAAI,eAAe;AAClF,QAAI,wBAAwB;AAC1B,6BAAuB,MAAK;AAC5B,WAAK,YAAY,sBAAsB;IACzC;AACA,SAAK,2BAA2B,OAAO,eAAe;AACtD,SAAK,cAAa;EACpB;EAEA,QAAK;AACH,eAAW,mBAAmB,KAAK,2BAA2B,KAAI,GAAI;AACpE,WAAK,mBAAmB,eAAe;IACzC;EACF;;AAGI,IAAO,4BAAP,cAAyC,4BAA2B;EAChE;EACA;EACS;EACT;EACA;EAER,YAAY,cAA8B,OAAuB,YAAwB,aAAwB;AAC/G,UAAM,cAAc,YAAY,MAAM,OAAO,yBAAyB;AACtE,SAAK,QAAQ;AACb,SAAK,aAAa;AAClB,SAAK,uBAAuB,oBAAI,IAAG;AACnC,SAAK,cAAc;AACnB,SAAK,OAAO;AACZ,UAAM,OAAkB,kBAAK,OAAO,OAAO;AAC3C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,IAAa,UAAO;AAClB,WAAO,iBAAiB,KAAK,WAAW,cAAc,aAAa,OAC9D,KAAK,WAAW,cAAc,QAAQ,MAAM,MAAM,KAAK,WAAW,OAAO,MAC1E,KAAK,YAAY;EACvB;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,SAAK,gBAAgB,iBAAiB,eAAe,KAAK,uBAAuB,KAAK,IAAI,GAAG,IAAI;EACnG;EAEA,mBAAgB;AACd,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,iBAAgB;IAC5B;AACA,eAAW,eAAe,KAAK,qBAAqB,OAAM,GAAI;AAC5D,kBAAY,iBAAgB;IAC9B;EACF;EAEQ,uBAAuB,OAAiB;AAC9C,UAAM,cAAc,IAAO,iBAAY,YAAY,KAAK;AACxD,gBAAY,eAAc,EAAG,WACzBE,aAAWF,YAAU,KAAK,GAAG,KAAK,iBAAiB,KAAK,IAAI,GAAG,EAAC,cAAc,QAAO,CAAC;AAC1F,SAAK,YAAY,KAAI;EACvB;EAEQ,qBAAkB;AACxB,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,YAAW;IACvB;AACA,eAAW,eAAe,KAAK,qBAAqB,OAAM,GAAI;AAC5D,kBAAY,aAAY;IAC1B;EACF;EAEQ,MAAM,mBAAgB;AAC5B,UAAM,KAAK,MAAM,iBAAiB,KAAK,YAAY,KAAK,YAAY,IAAI;AACxE,SAAK,OAAO,KAAK,aAAa,IAAI;EACpC;EAEA,OAAO,aAA0B,gBAAuB;AACtD,SAAK,cAAc;AAEnB,UAAM,aAAa,oBAAI,IAAG;AAC1B,eAAW,SAAS,KAAK,YAAY,QAAQ,OAAM,GAAI;AACrD,iBAAW,IAAI,MAAM,IAAI;AACzB,UAAI,cAAc,KAAK,qBAAqB,IAAI,MAAM,IAAI;AAC1D,UAAI,CAAC,aAAa;AAChB,sBAAc,IAAI,oBACd,KAAK,gBAAgB,KAAK,OAAO,KAAK,YAAY,KAAK,aAAa,OACpE,KAAK,mBAAmB,KAAK,IAAI,CAAC;AACtC,aAAK,qBAAqB,IAAI,MAAM,MAAM,WAAW;AACrD,aAAK,YAAY,WAAW;MAC9B;AACA,kBAAY,OAAO,KAAK,aAAa,OAAO,cAAc;IAC5D;AACA,eAAW,aAAa,KAAK,qBAAqB,KAAI,GAAI;AACxD,UAAI,CAAC,WAAW,IAAI,SAAS,GAAG;AAC9B,aAAK,aAAa,SAAS;MAC7B;IACF;AACA,eAAW,CAAC,WAAW,WAAW,KAAK,KAAK,qBAAqB,QAAO,GAAI;AAC1E,UAAI,CAAC,WAAW,IAAI,SAAS,GAAG;AAC9B,aAAK,YAAa,WAAY;AAC9B,aAAK,qBAAqB,OAAQ,SAAU;MAC9C;IACF;AAEA,QAAI,KAAK,WAAU,GAAI;AACrB,WAAK,OAAM;IACb;AAEA,QAAI,KAAK,QAAQ,gBAAgB;AAC/B,WAAK,KAAK,OAAO,KAAK,aAAa,IAAI;IACzC;AAEA,SAAK,cAAa;EACpB;EAEQ,gBAAa;AACnB,UAAM,gBAAgB,KAAK,YAAY;AACvC,QAAI,gBAAgB,kBAAkB,OAAOE,aAAWF,YAAU,UAAU,EAAC,KAAK,cAAa,CAAC,IAAI;AACpG,QAAI,KAAK,YAAY,eAAe;AAClC,uBAAiB,OAAY,YAAK,aAAa,eAAe;IAChE;AACA,SAAK,UAAU;EACjB;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OACD,IAAI,YAAY,KAAK,OAAO,KAAK,YAAY,KAAK,aAAa,MAAM,KAAK,mBAAmB,KAAK,IAAI,CAAC;IAC7G;AAEA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,YAAY;AACxC,WAAO;EACT;EAEQ,aAAa,WAAiB;AACpC,UAAM,mBAAmB,KAAK,qBAAqB,IAAI,SAAS;AAChE,QAAI,kBAAkB;AACpB,uBAAiB,MAAK;AACtB,WAAK,YAAY,gBAAgB;IACnC;AACA,SAAK,qBAAqB,OAAO,SAAS;EAC5C;EAEA,QAAK;AACH,eAAW,aAAa,KAAK,qBAAqB,KAAI,GAAI;AACxD,WAAK,aAAa,SAAS;IAC7B;AACA,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,MAAK;IACjB;EACF;;AAGI,IAAO,sBAAP,cAAmC,4BAA2B;EAC1D;EACA;EACA;EACA;EACA;EACA;EAER,YACI,cAA8B,OAAuB,YAAwB,aAC7E,OAAc,oBAA8B;AAC9C,UAAM,cAAc,MAAM,MAAM,OAAO,YAAY;AACnD,SAAK,QAAQ;AACb,SAAK,aAAa;AAClB,SAAK,cAAc;AACnB,SAAK,QAAQ;AACb,SAAK,qBAAqB;EAC5B;EAEA,IAAa,UAAO;AAClB,WAAO,iBAAiB,KAAK,WAAW,cAAc,aAAa,OAC9D,KAAK,WAAW,cAAc,QAAQ,MAAM,MAAM,KAAK,WAAW,OAAO,MAAM,KAAK,YAAY,OAAO,MACxG,KAAK,MAAM;EACjB;EAEA,mBAAgB;AACd,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,iBAAgB;IAC5B;EACF;EAEA,eAAY;AACV,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,YAAW;IACvB;EACF;EAEA,OAAO,aAA0B,OAAc,gBAAuB;AACpE,SAAK,cAAc;AACnB,SAAK,QAAQ;AAEb,QAAI,KAAK,QAAQ,gBAAgB;AAC/B,WAAK,KAAK,OAAO,KAAK,aAAa,KAAK,KAAK;IAC/C;AAEA,SAAK,cAAa;EACpB;EAEQ,gBAAa;AACnB,UAAM,eAAe,CAAA;AACrB,UAAM,gBAAgB,KAAK,MAAM;AACjC,iBAAa,KAAKE,aAAWF,YAAU,UAAU,EAAC,KAAK,cAAa,CAAC,CAAC;AACtE,QAAI,KAAK,MAAM,QAAQ;AACrB,mBAAa,KAAU,YAAK,aAAa,QAAQ,CAAC;IACpD;AACA,QAAI,KAAK,MAAM,YAAY;AACzB,mBAAa,KAAU,YAAK,aAAa,YAAY,CAAC;IACxD;AACA,SAAK,UAAU,aAAa,KAAK,IAAI;EACvC;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,IAAI,YAAY,KAAK,OAAO,KAAK,YAAY,KAAK,aAAa,KAAK,OAAO,KAAK,kBAAkB;IAChH;AAEA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,YAAY;AACxC,WAAO;EACT;EAEA,QAAK;AACH,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,MAAK;IACjB;EACF;;AAGI,IAAO,wBAAP,cAAqC,4BAA2B;EACnD;EACjB,YAAY,cAA8B,YAAsB;AAC9D,UACI,cACA,WAAW,aAAiB,wBAAkB,gBAAgB,WAAW,UAAU,EAAE,SAC7DE,aAAWF,YAAU,UAAU,GACvD,OAAO,WAAW,iBAAiB,6BAA6B,4BAA4B;AAChG,SAAK,aAAa;AAClB,UAAM,OAAkB,kBAAK,OAAO,OAAO;AAC3C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,IAAa,UAAO;AAClB,WAAO,eAAe,KAAK,WAAW,aAAa,OAAO,KAAK,WAAW,iBAAiB,UAAU;EAEvG;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,IAAK,kBAAY,WAAW,aAAa;AACzC,SAAK,eAAe,eAAe,KAAK,UAAU;AAClD,WAAO;EACT;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,SAAK,gBAAgB,iBAAiB,eAAe,KAAK,uBAAuB,KAAK,IAAI,GAAG,IAAI;EACnG;EAEQ,uBAAuB,OAAiB;AAC9C,UAAM,cAAc,IAAO,iBAAY,YAAY,KAAK;AACxD,gBAAY,eAAc,EAAG,WACzBE,aAAWF,YAAU,KAAK,GAAG,MAAM,KAAK,WAAW,MAAK,GAAI,EAAC,cAAc,QAAO,CAAC;AACvF,SAAK,YAAY,KAAI;EACvB;;AAGI,IAAO,8BAAP,cAA2C,4BAA2B;EACzD;EACjB,YAAY,cAA8B,kBAAkC;AAC1E,UACI,cAAc,4BAA4B,iBAAiB,WAAW,GAAG,OAAO,8BAA8B;AAClH,SAAK,mBAAmB;AACxB,UAAM,OAAkB,kBAAK,OAAO,OAAO;AAC3C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,IAAI,cAAW;AACb,WAAO,KAAK,iBAAiB;EAC/B;EAEA,IAAa,UAAO;AAClB,WAAO,yBAAyB,KAAK,iBAAiB,cAAc,MAAM,KAAK,iBAAiB;EAElG;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,SAAK,eAAe,qBAAqB,KAAK,gBAAgB;AAC9D,IAAK,kBAAY,WAAW,mBAAmB;AAC/C,WAAO;EACT;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,SAAK,gBAAgB,iBAAiB,eAAe,KAAK,uBAAuB,KAAK,IAAI,GAAG,IAAI;EACnG;EAEQ,uBAAuB,OAAiB;AAC9C,UAAM,cAAc,IAAO,iBAAY,YAAY,KAAK;AACxD,gBAAY,eAAc,EAAG,WACzBE,aAAWF,YAAU,KAAK,GAAG,MAAM,KAAK,iBAAiB,MAAK,GAAI,EAAC,cAAc,QAAO,CAAC;AAC7F,SAAK,YAAY,KAAI;EACvB;;AAGI,IAAO,oCAAP,cAAiD,4BAA2B;EAC/D;EACjB,YAAY,cAA8B,aAAqB,eAAqB;AAClF,UAAM,cAAc,iBAAiB,aAAa,MAAM,8BAA8B;AACtF,SAAK,cAAc;AACnB,UAAM,OAAkB,kBAAK,OAAO,OAAO;AAC3C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,IAAa,UAAO;AAClB,WAAO,yBAAyB,KAAK;EACvC;;AAGI,IAAO,oBAAP,cAAiC,4BAA2B;EAC/C;EACR;EAET,YACI,cAA8B,OAC9B,WAAqC;AACvC,UAAM,cAAc,UAAU,eAAc,KAAME,aAAWF,YAAU,UAAU,GAAG,OAAO,mBAAmB;AAC9G,SAAK,SAAS,MAAM,kBAAiB,EAAG,OAAM;AAC9C,SAAK,gBAAgB,UAAU,eAAc;AAC7C,SAAK,UAAUE,aAAWF,YAAU,0BAA0B,EAAC,KAAK,KAAK,cAAa,CAAC;AACvF,UAAM,OAAkB,kBAAK,OAAO,QAAQ;AAE5C,QAAkB,2BAAa,0CAA0C,UAAU,OAAM,CAAE,GAAG;AAC5F,WAAK,OAAO;AACZ,WAAK,UAAUE,aAAWF,YAAU,oBAAoB,EAAC,KAAK,KAAK,cAAa,CAAC;IACnF;AACA,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,IAAa,UAAO;AAClB,WAAO,eAAe,KAAK;EAC7B;EAEA,eAAY;AACV,WAAO,KAAK;EACd;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,SAAK,gBAAgB,iBAAiB,eAAe,KAAK,uBAAuB,KAAK,IAAI,GAAG,IAAI;EACnG;EAEQ,uBAAuB,OAAY;AACzC,UAAM,cAAc,IAAO,iBAAY,YAAY,KAAK;AACxD,gBAAY,eAAc,EAAG,WACzBE,aAAWF,YAAU,KAAK,GAAG,MAAM,KAAK,eAAe,aAAa,KAAK,QAAQ,KAAK,aAAa,GACnG,EAAC,cAAc,QAAO,CAAC;AAC3B,SAAK,YAAY,KAAI;EACvB;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,SAAK,eAAe,YAAY,KAAK,QAAQ,KAAK,aAAa;AAC/D,IAAK,kBAAY,WAAgB,kBAAY,WAAgB,kBAAY,WAAW,OAAO,CAAC;AAC5F,WAAO;EACT;;AAGI,IAAO,sBAAP,cAAsC,YAAO,KAAI;EAC7C;EAER,cAAA;AACE,UAAK;AAEL,SAAK,QAAQ,UAAU,IAAI,cAAc;AACzC,SAAK,cAAc,IAAO,iBAAY,YAAY,IAAI,EAAE;AACxD,SAAK,YAAY,KAAK,KAAK,OAAO;EACpC;EAEA,QAAQ,MAAY;AAClB,SAAK,YAAY,OAAO;EAC1B;EAEA,YAAY,QAAc;AACxB,SAAK,YAAY,SAAS;EAC5B;EAEA,QAAQK,OAA0C;AAChD,SAAK,YAAY,OAAOA;EAC1B;;AAGI,IAAO,mBAAP,MAAuB;EAC3B;EACiB;EACT;EACA;EAER,YAAY,cAA8B,aAAuC;AAC/E,SAAK,QAAQ;AACb,SAAK,cAAc;AACnB,IAAG,eAAU,SAAS,KAAK,YAAY,cAAc,mBAAmB;AACxE,SAAK,wBAAwB,oBAAI,IAAG;AACpC,SAAK,yBAAyB,oBAAI,IAAG;AAErC,UAAM,eAAmB,mBAAa,aAAa,SAAQ;AAC3D,iBAAa,iBAAgB,sBACsB,WAAS,KAAK,WAAW,MAAM,KAAK,KAAK,GAAG,IAAI;AACnG,iBAAa,iBAAgB,gBACc,WAAS,KAAK,cAAc,MAAM,KAAK,OAAO,GAAG,IAAI;AAChG,iBAAa,iBAAgB,kBACgB,WAAS,KAAK,eAAe,MAAM,KAAK,KAAK,GAAG,IAAI;AACjG,iBAAa,iBAAgB,iBACe,WAAS,KAAK,cAAc,MAAM,KAAK,QAAQ,GAAG,IAAI;AAElG,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,yBAAmB,oBAAkB,iBAAgD,KAAK,cAC9F,MAAM,EAAC,QAAQ,KAAI,CAAC;AACxB,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,yBAAmB,oBAAkB,qBACzC,KAAK,eAAe,MAAM,EAAC,QAAQ,KAAI,CAAC;AAC5C,IAAI,oBAAc,cAAc,SAAQ,EAAG,iBACnC,yBAAmB,oBAAkB,mBAAkD,KAAK,iBAChG,MAAM,EAAC,QAAQ,KAAI,CAAC;AAExB,IAAI,oBAAc,cAAc,SAAQ,EAAG,eAAe,MAAM,EAAC,QAAQ,KAAI,CAAC;EAChF;EAEQ,aAAU;AAChB,UAAM,eAAmB,mBAAa,aAAa,SAAQ;AAC3D,eAAW,SAAS,aAAa,aAAY,GAAI;AAC/C,UAAI,CAAC,KAAK,sBAAsB,IAAI,MAAM,EAAE,GAAG;AAC7C,aAAK,mBAAmB,KAAK;MAC/B;AACA,YAAM,qBAAqB,MAAM,kBAAiB,EAAG,OAAM,EAAG,MAAU,yBAAmB,kBAAkB;AAC7G,UAAI,oBAAoB;AACtB,mBAAW,cAAc,mBAAmB,YAAW,GAAI;AACzD,eAAK,aAAa,EAAC,MAAM,WAAU,CAAC;QACtC;MACF;IACF;EACF;EAEA,YAAY,QAAyB;AACnC,QAAI,OAAO,KAAI,MAAW,aAAO,KAAK,UAAU,OAAO,KAAI,MAAW,aAAO,KAAK,eAAe;AAC/F,WAAK,KAAK,YAAY,MAAM;IAC9B;AACA,QAAI,OAAO,KAAI,MAAW,aAAO,KAAK,SAAS,WAAW,OAAO,gBAAe,GAAI;AAGlF,WAAK,WAAU;IACjB;EACF;EAEQ,MAAM,YAAY,QAAyB;AACjD,UAAM,eAAe,OAAO,aAAY;AACxC,QAAI,CAAC,cAAc;AACjB;IACF;AACA,UAAM,iBAAiB,aAAa,GAAE;AACtC,UAAM,mBAAmB,KAAK,uBAAuB,IAAI,cAAc;AACvE,UAAM,WAAW,OAAO,GAAE;AAC1B,wBAAoB,QAAQ;AAC5B,UAAM,EAAC,WAAU,IAAI,MAAM,aAAa,YAAW,EAAG,qBAAqB,EAAC,SAAQ,CAAC;AACrF,QAAI,oBAAoB,YAAY;AAClC,uBAAiB,cAAc,UAAU;IAC3C;EACF;EAEA,cAAc,SAA0B;EACxC;EAEQ,mBAAmB,OAA8C;AACvE,UAAM,cAAc,MAAM,YAAW;AACrC,QAAI,eAAe,CAAC,KAAK,sBAAsB,IAAI,YAAY,EAAE,GAAG;AAClE,WAAK,mBAAmB,WAAW;IACrC;AACA,SAAK,WAAW,KAAK;EACvB;EAEQ,YAAY,OAAmD;AACrE,QAAI,CAAC,OAAO;AACV,aAAO;IACT;AACA,QAAI,cAAc,KAAK,sBAAsB,IAAI,MAAM,EAAE;AACzD,QAAI,CAAC,eAAe,CAAC,KAAK,YAAY,MAAM,YAAW,CAAE,GAAG;AAC1D,aAAO;IACT;AACA,kBAAc,KAAK,sBAAsB,IAAI,MAAM,EAAE;AACrD,QAAI,CAAC,aAAa;AAChB,aAAO;IACT;AACA,gBAAY,OAAM;AAClB,WAAO;EACT;EAEA,MAAM,eAAe,UAAiC,MAAe,QAAe;AAClF,QAAI,CAAC,KAAK,YAAY,SAAS,MAAK,CAAE,GAAG;AACvC;IACF;AACA,UAAM,sBAAsB,yBAAyB,YAAY,QAAQ;AACzE,QAAI,qBAAqB;AACvB,YAAM,oBAAoB,eAAe,MAAM,MAAM;IACvD;EACF;EAEA,qBAAqB,OAA8C;AACjE,UAAM,mBAAmB,KAAK,sBAAsB,IAAI,MAAM,EAAE;AAChE,sBAAkB,OAAM;AACxB,sBAAkB,OAAM;EAC1B;EAEQ,WAAW,OAA8C;AAC/D,QAAI,CAAK,oBAAc,cAAc,SAAQ,EAAG,UAAU,MAAM,kBAAiB,CAAE,GAAG;AACpF;IACF;AACA,UAAM,cAAc,MAAM,YAAW;AACrC,UAAM,oBAAoB,cAAc,KAAK,sBAAsB,IAAI,YAAY,EAAE,IAAI,KAAK;AAC9F,QAAI,CAAC,mBAAmB;AACtB;IACF;AAEA,UAAM,kBAAkB,KAAK,sBAAsB,IAAI,MAAM,EAAE;AAC/D,QAAI,iBAAiB;AACnB,WAAK,sBAAsB,OAAO,MAAM,EAAE;AAC1C,UAAI,gBAAgB,QAAQ;AAC1B,wBAAgB,OAAO,YAAY,eAAe;MACpD;IACF;AAEA,UAAM,mBAAmB,IAAI,iBAAiB,MAAM,KAAK;AACzD,SAAK,sBAAsB,IAAI,MAAM,IAAI,gBAAgB;AACzD,UAAM,WAAW,MAAM,kBAAiB,EAAG,OAAM,EAAG,GAAE;AACtD,QAAI,CAAC,KAAK,uBAAuB,IAAI,QAAQ,GAAG;AAC9C,WAAK,uBAAuB,IAAI,UAAU,gBAAgB;IAC5D;AACA,sBAAkB,YAAY,gBAAgB;AAE9C,eAAW,YAAY,MAAM,UAAS,GAAI;AACxC,WAAK,cAAc,QAAQ;IAC7B;EACF;EAEQ,cAAc,SAA8B;AAClD,UAAM,mBAAmB,KAAK,sBAAsB,IAAI,OAAO;AAC/D,QAAI,CAAC,kBAAkB;AACrB;IACF;AAEA,SAAK,sBAAsB,OAAO,OAAO;AACzC,QAAI,iBAAiB,QAAQ;AAC3B,uBAAiB,OAAO,YAAY,gBAAgB;IACtD;EACF;EAEQ,eAAe,OAA8C;AACnE,QAAI,CAAK,oBAAc,cAAc,SAAQ,EAAG,UAAU,MAAM,kBAAiB,CAAE,GAAG;AACpF;IACF;AACA,UAAM,mBAAmB,KAAK,sBAAsB,IAAI,MAAM,EAAE;AAChE,QAAI,kBAAkB;AACpB,WAAK,iBAAiB,eAAe,KAAK;IAC5C;EACF;EAEQ,cAAc,UAA+B;AACnD,UAAM,QAAQ,SAAS,MAAK;AAC5B,QAAI,CAAC,OAAO;AACV;IACF;AACA,QAAI,CAAK,oBAAc,cAAc,SAAQ,EAAG,UAAU,MAAM,kBAAiB,CAAE,GAAG;AACpF;IACF;AACA,UAAM,mBAAmB,KAAK,sBAAsB,IAAI,MAAM,EAAE;AAChE,QAAI,CAAC,kBAAkB;AAGrB;IACF;AACA,qBAAiB,eAAe,QAAQ;EAC1C;EAEQ,aAAa,OAAsE;AACzF,UAAM,aAAa,MAAM;AAEzB,QAAI,WAAW,YAAY,WAAW,SAAS,QAAQ;AACrD,YAAM,mBAAmB,KAAK,sBAAsB,IAAI,WAAW,QAAQ;AAC3E,UAAI,kBAAkB;AACpB,aAAK,uBAAuB,IAAI,WAAW,UAAU,gBAAgB;AACrE,yBAAiB,aAAa,UAAU;MAC1C;IACF;EACF;EAEQ,gBAAgB,OAAoE;AAC1F,UAAM,WAAW,MAAM;AACvB,UAAM,mBAAmB,KAAK,uBAAuB,IAAI,QAAQ;AACjE,QAAI,kBAAkB;AACpB,uBAAiB,gBAAgB,QAAQ;AACzC,WAAK,uBAAuB,OAAO,QAAQ;IAC7C;EACF;EAEQ,cAAc,OAAsE;AAC1F,UAAM,aAAa,MAAM;AAEzB,QAAI,WAAW,YAAY,WAAW,SAAS,QAAQ;AACrD,YAAM,mBAAmB,KAAK,sBAAsB,IAAI,WAAW,QAAQ;AAC3E,UAAI,kBAAkB;AACpB,yBAAiB,cAAc,UAAU;MAC3C;IACF;EACF;EAEA,QAAK;AACH,SAAK,YAAY,eAAc;AAC/B,SAAK,sBAAsB,MAAK;AAChC,SAAK,uBAAuB,MAAK;EACnC;;AAGI,IAAO,mBAAP,MAAO,0BAAyB,4BAA2B;EACvD;EACA;EACS;EACA;EACT;EACA;EACA;EAGR,YAAYF,UAA2B,OAA8C;AACnF,UAAMA,SAAQ,OAAO,IAAI,OAAO,OAAO;AACvC,SAAK,UAAUA;AACf,SAAK,QAAQ;AACb,SAAK,mBAAmB,oBAAI,IAAG;AAC/B,SAAK,yBAAyB,oBAAI,IAAG;AACrC,SAAK,uBAAuB,oBAAI,IAAG;AACnC,SAAK,uBAAuB,oBAAI,IAAG;AACnC,SAAK,KAAK,eAAe,KAAK;AAC9B,SAAK,OAAO;EACd;EAEA,oBAAoB,OAA8C;AAEhE,QAAI,MAAM,iBAAgB,GAAI;AAC5B,aAAO,MAAM,eAAc,IAAK,kBAAkB;IACpD;AACA,WAAO,MAAM,eAAc,IAAK,mBAAmB;EACrD;EAEA,MAAM,eAAe,OAA8C;AACjE,UAAM,OAAkB,kBAAK,OAAO,KAAK,oBAAoB,KAAK,CAAC;AACnE,QAAI,MAAM,eAAc,GAAI;AAC1B,WAAK,UAAU,IAAI,UAAU;IAC/B;AACA,SAAK,gBAAgB,CAAC,IAAI,CAAC;AAC3B,SAAK,mBAAkB;AAEvB,QAAI,KAAK,UAAU,MAAM,YAAW,GAAI;AACtC,WAAK,QAAQ,MAAM,YAAW;AAC9B,MAAG,eAAU,SAAS,KAAK,iBAAiB,KAAK,KAAK;AACtD,UAAI,KAAK,QAAQ;AACf,cAAM,SAAS,KAAK;AAEpB,eAAO,YAAY,IAAI;AACvB,eAAO,YAAY,IAAI;MACzB;IACF;AACA,SAAK,iBAAiB,MAAK;AAC3B,SAAK,uBAAuB,MAAK;AACjC,SAAK,qBAAqB,MAAK;AAE/B,QAAI,KAAK,UAAU;AACjB,WAAK,OAAqB,8BAAc,cACjC,YAAO,QAAQ,IAA0B,yCAAiB,uBAAuB,KAAK,KAAK,CAAC;AACnG,WAAK,SAAS,KAAK,IAAI;IACzB,OAAO;AACL,WAAK,OAAO;IACd;AAKA,QAAI,MAAM,iBAAgB,GAAI;AAC5B,YAAM,UAAc,oBAAc,cAAc,SAAQ,EAAG,QAAO;AAClE,iBAAW,UAAU,SAAS;AAC5B,YAAI,OAAO,KAAI,MAAW,aAAO,KAAK,iBAC9B,oBAAc,cAAc,SAAQ,EAAG,UAAU,MAAM,GAAG;AAChE,gBAAM,WAAW,OAAO,GAAE;AAC1B,8BAAoB,QAAQ;AAC5B,gBAAM,QAAQ,MAAM,kBAAiB,EAAG,OAAM,EAAG,YAAW;AAC5D,gBAAM,cAAc,MAAM,MAAM,qBAAqB,EAAC,SAAQ,CAAC,GAAG;AAClE,eAAK,cAAc,UAAU;QAC/B;MACF;IACF;EACF;EAEA,IAAa,UAAO;AAIlB,QAAI,KAAK,MAAM,iBAAgB,GAAI;AACjC,aAAO;IACT;AACA,WAAO,aAAa,UAAU,KAAK,MAAM,GAAG;EAC9C;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAqB,8BAAc,cACjC,YAAO,QAAQ,IAA0B,yCAAiB,uBAAuB,KAAK,KAAK,CAAC;IACrG;AACA,IAAK,kBAAY,WAAW,eAAe;AAC3C,SAAK,SAAS,KAAK,IAAI;AAEvB,SAAK,gBAAgB,UAAU,OAAO,SAAS;AAC/C,IAAI,mBAAa,aAAa,qBAAoB;AAClD,WAAO;EACT;EAEA,IAAI,QAAQ,SAAgB;AAC1B,QAAI,SAAS;AACX,WAAK,gBAAgB,UAAU,IAAI,SAAS;AAC5C,WAAK,KAAK,MAAM,UAAS;IAC3B,OAAO;AACL,WAAK,gBAAgB,UAAU,OAAO,SAAS;AAC/C,MAAI,mBAAa,aAAa,qBAAoB;IACpD;EACF;EAEA,eAAe,UAA+B;AAC5C,UAAM,aAAa,SAAS,WAAU;AACtC,QAAI,cAAc,OAAO,cAAc,KAAK;AAC1C;IACF;AAEA,UAAM,eAAe,SAAS,aAAY;AAC1C,UAAM,eAAe,aAAa,KAAI;AACtC,QAAI,kBACA,iBAAwB,sBAAa,cAAc,WAAW,OAAO,KAAK,iBAAiB,IAAI,YAAY;AAC/G,QAAI,CAAC,iBAAiB;AACpB,wBAAkB,IAAI,sCAClB,KAAK,QAAQ,OAAO,SAAS,aAAY,EAAG,SAAQ,EAAG,MAAK,GAAI,IAAID,aAAWF,YAAU,mBAAmB,GAC5G,cAAc,iBAAiB,QAAQ;AAC3C,WAAK,iBAAiB,IAAI,aAAa,KAAI,GAAI,eAAe;AAC9D,WAAK,YAAY,iBAAiB,kBAAiB,wBAAwB;IAC7E;AACA,UAAM,sBAAsB,IAAI,yBAAyB,KAAK,QAAQ,OAAO,QAAQ;AACrF,oBAAgB,YAAY,qBAAqB,kBAAiB,wBAAwB;AAC1F,SAAK,uBAAuB,IAAI,SAAS,KAAK,mBAAmB;EACnE;EAEA,aAAa,YAAsC;AACjD,UAAM,cAAc;AACpB,QAAI,kBAAkB,KAAK,iBAAiB,IAAI,WAAW;AAC3D,QAAI,CAAC,iBAAiB;AACpB,wBAAkB,IAAI,sCAClB,KAAK,QAAQ,OAAOE,aAAWF,YAAU,aAAa,GAAG,IAAIE,aAAWF,YAAU,wBAAwB,GAC1G,WAAW;AACf,WAAK,iBAAiB,IAAI,aAAa,eAAe;AACtD,WAAK,YAAY,iBAAiB,kBAAiB,wBAAwB;IAC7E;AACA,QAAI,CAAC,KAAK,qBAAqB,IAAI,WAAW,QAAQ,GAAG;AACvD,YAAM,oBAAoB,IAAI,uBAAuB,KAAK,QAAQ,OAAO,UAAU;AACnF,sBAAgB,YAAY,iBAAiB;AAC7C,WAAK,qBAAqB,IAAI,WAAW,UAAU,iBAAiB;IACtE;EACF;EAEA,cAAc,YAAsC;AAClD,UAAM,cAAc,WAAW,SAAS,mBAAmB,oBAAoB;AAC/E,UAAM,eAAe,WAAW,SAAS,mBAAwB,YAAK,aAAa,iBAAiB,IACxCE,aAAWF,YAAU,UAAU;AAC3F,QAAI,kBAAkB,KAAK,iBAAiB,IAAI,WAAW;AAC3D,QAAI,CAAC,iBAAiB;AACpB,wBAAkB,IAAI,sCAClB,KAAK,QAAQ,OAAO,cAAc,IAAIE,aAAWF,YAAU,iBAAiB,GAAG,WAAW;AAC9F,WAAK,iBAAiB,IAAI,aAAa,eAAe;AACtD,WAAK,YAAY,iBAAiB,kBAAiB,wBAAwB;IAC7E;AACA,QAAI,CAAC,KAAK,qBAAqB,IAAI,WAAW,QAAQ,GAAG;AACvD,YAAM,oBAAoB,IAAI,kBAAkB,KAAK,QAAQ,OAAO,UAAU;AAC9E,sBAAgB,YAAY,iBAAiB;AAC7C,WAAK,qBAAqB,IAAI,WAAW,UAAU,iBAAiB;IACtE;EACF;EAEA,cAAc,YAAsC;AAClD,UAAM,oBAAoB,KAAK,qBAAqB,IAAI,WAAW,QAAQ;AAC3E,QAAI,CAAC,mBAAmB;AACtB;IACF;AACA,QAAI,kBAAkB,UAAU,WAAW,OAAO;AAChD,wBAAkB,QAAQ,WAAW;IACvC;AACA,sBAAkB,OAAO,UAAU;EACrC;EAEA,gBAAgB,UAAkC;AAChD,UAAM,oBAAoB,KAAK,qBAAqB,IAAI,QAAQ;AAChE,QAAI,mBAAmB;AACrB,wBAAkB,aAAY;IAChC;EACF;EAES,YACL,aACA,aACY,kBAAiB,0BAAwB;AACvD,UAAM,YAAY,aAAa,UAAU;EAC3C;;;;;EAMQ,OAAO,yBACX,cAA0C,cAAwC;AACpF,aAAS,WAAW,aAAuC;AACzD,UAAI,uBAAuB,uCAAuC;AAChE,eAAO;MACT;AACA,UAAI,uBAAuB,mBAAkB;AAC3C,eAAO;MACT;AACA,aAAO;IACT;AAEA,UAAM,cAAc,WAAW,YAAY;AAC3C,UAAM,cAAc,WAAW,YAAY;AAC3C,WAAO,cAAc,eAAe,aAAa,YAAW,EAAG,cAAc,aAAa,YAAW,CAAE;EACzG;;AAGF,IAAM,qCAAqC,oBAAI,QAAO;AAEhD,IAAO,2BAAP,cAAwC,4BAA2B;EACtD;EACT;EACA;EAER,YAAY,cAA8B,UAA+B;AACvE,UACI,cAAc,SAAS,cAAcE,aAAWF,YAAU,oBAAoB,IAAI,SAAS,aAAa,OACxG,gBAAgB;AACpB,SAAK,QAAQ;AACb,SAAK,WAAW;AAChB,SAAK,iBAAiB;AACtB,SAAK,UAAU,SAAS;AACxB,uCAAmC,IAAI,KAAK,UAAU,IAAI;AAE1D,UAAM,OAAkB,kBAAK,OAAO,YAAY,0BAA0B;AAC1E,SAAK,UAAU,IAAI,eAAe,SAAS,aAAY,EAAG,KAAI,IAAK,YAAY;AAC/E,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,OAAO,YAAY,UAA+B;AAChD,WAAO,mCAAmC,IAAI,QAAQ;EACxD;EAEA,IAAa,UAAO;AAClB,WAAO,KAAK,SAAS;EACvB;EAEQ,iBAAc;AACpB,QAAI,KAAK,gBAAgB;AACvB,aAAO,KAAK;IACd;AACA,UAAM,cAA0B,4BAAe,eAAe,cAAc,KAAK,UAAU,KAAK,SAAS,QAAQ;AACjH,SAAK,iBAAiB,YAAY,KAAK,UAAO;AAC5C,UAAI,MAAM;AACR,eAAO;MACT;AACA,aAAO,IAAO,iBAAY,YAAY,IAAI,KAAK,SAAS,GAAG;IAC7D,CAAC;AACD,WAAO,KAAK;EACd;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,KAAK,SAAS,aAAa;AAC7B,WAAK,MAAM,iBACP,IAAIE,aAAWF,YAAU,oBAAoB,GAAGE,aAAWF,YAAU,+BAA+B,GAAG,IAAI;IACjH,OAAO;AACL,WAAK,KAAK,MAAM,iBAAiB,KAAK,eAAc,CAAE;IACxD;AACA,IAAK,kBAAY,WAAW,gBAAgB;AAC5C,WAAO;EACT;EAES,WAAW,QAAa;AAC/B,IAAK,4BAAsB,8BAA8B,aAAa,KAAK,SAAS,GAAG;AACvF,WAAO;EACT;EAES,WAAQ;AACf,UAAM,SAAQ;AACd,SAAK,gBAAgB,YAAY;AACjC,SAAK,gBAAgB,iBAAiB,aAAa,KAAK,YAAY,KAAK,IAAI,GAAG,KAAK;AACrF,SAAK,gBAAgB,iBAAiB,eAAe,KAAK,uBAAuB,KAAK,IAAI,GAAG,IAAI;EACnG;EAEQ,YAAY,OAAgB;AAClC,QAAI,CAAC,MAAM,cAAc;AACvB,aAAO;IACT;AACA,UAAM,aAAa,QAAQ,cAAc,KAAK,SAAS,WAAW,EAAE;AACpE,UAAM,aAAa,gBAAgB;AACnC,WAAO;EACT;EAEQ,uBAAuB,OAAiB;AAC9C,UAAM,cAAc,IAAO,iBAAY,YAAY,KAAK;AACxD,gBAAY,sBAAsB,KAAK,QAAQ;AAC/C,SAAK,YAAY,KAAI;EACvB;EAEA,MAAM,eAAe,YAAqB,cAAqB;AAC7D,SAAK,gBAAgB,IAAI;AACzB,UAAM,OAAO,MAAM,KAAK,MAAM,iBAAiB,KAAK,eAAc,CAAE;AACpE,QAAI,EAAE,gBAA4B,iCAAoB,wBAAwB,OAAO,eAAe,UAAU;AAC5G;IACF;AACA,SAAK,eAAe,EAAC,YAAY,aAAY,GAAG,IAAI;EACtD;;AAGF,IAAM,yBAAN,cAAqC,4BAA2B;EACtD;EACA;EACA;EAER,YAAY,cAA8B,YAAsC;AAC9E,UAAM,cAAc,WAAW,SAASE,aAAWF,YAAU,kBAAkB,GAAG,OAAO,QAAQ;AACjG,SAAK,aAAa;AAClB,SAAK,iBAAiB;AACtB,SAAK,OAAO;AACZ,SAAK,WAAW,WAAW,eAAe;EAC5C;EAEA,WAAW,iBAAwB;AACjC,UAAM,WAAW,kBAAkB,UAAU;AAC7C,UAAM,OAAkB,kBAAK,OAAO,QAAQ;AAC5C,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAEA,OAAO,YAAsC;AAC3C,QAAI,WAAW,oBAAoB,KAAK,WAAW,iBAAiB;AAClE,WAAK,WAAW,WAAW,eAAe;IAC5C;AACA,SAAK,aAAa;AAClB,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,cAAc,UAAU;AAClC,WAAK,KAAK,OAAM;IAClB;EACF;EAEA,eAAY;AACV,SAAK,gBAAgB,UAAU,IAAI,eAAe;AAClD,SAAK,iBAAiB;AACtB,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,kBAAkB,IAAI;AAChC,WAAK,KAAK,OAAM;IAClB;EACF;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,IAAI,wBAAwB,KAAK,YAAY,KAAK,cAAc;IAC9E,OAAO;AACL,WAAK,KAAK,OAAM;IAClB;AACA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,cAAc;AAC1C,WAAO;EACT;EAEA,IAAa,UAAO;AAClB,WAAO,KAAK,WAAW;EACzB;;AAGF,IAAM,oBAAN,cAAgC,4BAA2B;EACjD;EACA;EAER,YAAY,cAA8B,YAAsC;AAC9E,UAAM,cAAc,WAAW,SAAS,WAAW,OAAOE,aAAWF,YAAU,MAAM,GAAG,OAAO,QAAQ;AACvG,SAAK,aAAa;AAClB,SAAK,OAAO;AACZ,UAAM,OAAkB,kBAAK,OAAO,SAAS,0BAA0B;AACvE,SAAK,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAES,SAAS,gBAAwB;AACxC,UAAM,SAAS,cAAc;AAC7B,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,IAAI,kBAAkB,KAAK,UAAU;IACnD,OAAO;AACL,WAAK,KAAK,OAAM;IAClB;AACA,SAAK,SAAS,KAAK,IAAI;AACvB,IAAK,kBAAY,WAAW,cAAc;AAC1C,WAAO;EACT;EAEA,IAAa,UAAO;AAClB,WAAO,KAAK,WAAW;EACzB;;;;AgDx+EF;;;;AAkCA,YAAYM,cAAY;AACxB,YAAYC,YAAU;AACtB,YAAYC,WAAS;AACrB,YAAYC,oBAAmB;AAC/B,YAAY,iBAAiB;AAC7B,YAAYC,UAAQ;AACpB,YAAYC,qBAAmB;;;ACnC/B,IAAO,8BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAsCC,YAAY,QAAQ,uBAAuB,CAAC;;;ADE5D,IAAMC,cAAY;;;;EAIhB,gBAAgB;;;;EAIhB,kBAAkB;;;;EAIlB,gCAAgC;;;;EAIhC,4BAA4B;;;;EAI5B,4BAA4B;;;;EAI5B,sBAAsB;;;;EAItB,iBAAiB;;;;;EAKjB,8BAA8B;;AAEhC,IAAMC,SAAY,YAAK,kBAAkB,yCAAyCD,WAAS;AAC3F,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AACpE,IAAM,sBAAN,cAAqC,YAAO,KAAI;EACtC;EACA;EACA;EACA;EAER,cAAA;AACE,UAAM,EAAC,OAAO,GAAiB,wBAAQ,gBAAgB,CAAC,GAAE,CAAC;AAC3D,SAAK,eAAe,KAAK,EAAE;AAC3B,SAAK,SAAS;AACd,SAAK,qBAA4B,kBAAS,SAAS,SAAQ,EAAG,cAAc,4BAA4B,KAAK;AAE7G,UAAM,SAAS,SAAS,cAAc,KAAK;AAC3C,WAAO,UAAU,IAAI,8BAA8B;AACnD,UAAM,OAAO,SAAS,cAAc,MAAM;AAC1C,SAAK,UAAU,IAAI,oCAAoC;AACvD,SAAK,cAAc;AACnB,WAAO,YAAY,IAAI;AACvB,SAAK,eAAe,YAAY,MAAM;AAEtC,UAAME,UAAY,aAAQ,cAAc,OACpCD,aAAWF,YAAU,cAAc,GAAG,KAAK,mBAAmB,IAAG,GAAI,QAAW,kBAAkB;AACtG,IAAAG,QAAO,QAAQD,aAAWF,YAAU,cAAc;AAClD,IAAAG,QAAO,UAAU,IAAI,8BAA8B;AACnD,IAAAA,QAAO,iBAAiB,SAAS,MAAM,KAAK,YAAY,CAAC,KAAK,mBAAmB,IAAG,CAAE,CAAC;AACvF,WAAO,YAAYA,OAAM;AACzB,SAAK,SAASA;AAEd,UAAM,QAAQ,SAAS,cAAc,KAAK;AAC1C,UAAM,UAAU,IAAI,oCAAoC;AACxD,UAAM,cAAc;AACpB,UAAM,iBAAiB,YAAY,KAAK,4BAA4B,KAAK,IAAI,CAAC;AAC9E,SAAK,QAAQ;AAEb,SAAK,eAAe,UAAU,IAAI,uBAAuB;AACzD,SAAK,eAAe,YAAY,KAAK;EACvC;EAEA,YAAY,SAAgB;AAC1B,QAAI,CAAC,KAAK,QAAQ;AAChB;IACF;AACA,SAAK,mBAAmB,IAAI,OAAO;AACnC,SAAK,OAAO,UAAU;AACtB,SAAK,cAAa;EACpB;EAEQ,gBAAa;AACnB,QAAI,KAAK,QAAQ;AACf,WAAK,MAAM,cACP,KAAK,mBAAmB,IAAG,IAAK,mBAAmB,KAAK,OAAO,MAAK,CAAE,IAAI,KAAK,OAAO,MAAK;IACjG,OAAO;AACL,WAAK,MAAM,cAAc;IAC3B;EACF;EAEA,UAAU,QAAyB;AACjC,SAAK,SAAS;AACd,SAAK,cAAa;EACpB;;;;EAKA,4BAA4B,OAAY;AACtC,UAAM,eAAc;AACpB,UAAM,QAAQ,SAAS,YAAW;AAClC,UAAM,WAAW,KAAK,KAAK;AAC3B,UAAM,YAAY,OAAO,aAAY;AACrC,QAAI,CAAC,WAAW;AACd;IACF;AACA,cAAU,gBAAe;AACzB,cAAU,SAAS,KAAK;EAC1B;;AAGI,IAAO,kBAAP,cAAkC,YAAO,KAAI;EACzC;EACA;EACA;EACS;EACA;EACA;EACA;EACT;EACA;EACA;EACA;EACR;EACA,YAAY,OAAoC,cAAoB;AAClE,UAAM,EAAC,OAAO,GAAiB,qBAAK,cAAc,CAAC,GAAE,CAAC;AACtD,SAAK,oBAAoB,2BAAqB;AAE9C,SAAK,QAAQ,UAAU,IAAI,cAAc;AAEzC,SAAK,QAAQ;AACb,SAAK,eAAe;AAEpB,SAAK,WAAW,IAAI,oBAAmB;AACvC,SAAK,SAAS,QAAQ,UAAU,IAAI,WAAW;AAC/C,SAAK,SAAS,KAAK,KAAK,OAAO;AAE/B,SAAK,eAAe,IAAgB,yBAAa;;MAC1B;MAAO,KAAK,WAAW,KAAK,IAAI;MAAG,KAAK,aAAa,KAAK,IAAI;MACjF,KAAK,qBAAqB,KAAK,IAAI;MAAG,KAAK,aAAa,KAAK,IAAI;IAAC;AAEtE,SAAK,aAAa,eAAe,GAAG,EAAE;AAEtC,SAAK,cAAc,IAAO,iBAAY;;MAChB;;MAA8B;MAAM;IAA+B;AACzF,SAAK,YAAY,KAAK,KAAK,OAAO;AAElC,SAAK,eAAe,IAAO,YAAO,KAAI;AACtC,SAAK,aAAa,QAAQ,aAAa,SAAS,GAAiB,qBAAK,SAAS,EAAE,MAAM,EAAC,QAAQ,KAAI,CAAC,CAAC,EAAE;AACxG,UAAM,UAAU,KAAK,aAAa,QAAQ,YAAY,OAAO,uBAAuB;AAEpF,SAAK,YAAY,cAAc,KAAK,YAAY;AAChD,SAAK,YAAY,iBAAiB,KAAK,YAAY;AACnD,SAAK,YAAY,eAAe,OAAO;AAEvC,SAAK,gBAAgB,IAAI,oBAAmB;AAC5C,SAAK,cAAc,IAAO,iBAAY,YAClCD,aAAWF,YAAU,gBAAgB,GAAGE,aAAWF,YAAU,8BAA8B,CAAC;AAChG,SAAK,YAAY,KAAK,KAAK,aAAa,cAAc;AAEtD,SAAK,qBAAqB,IAAO,aAAQ,gBACrCE,aAAWF,YAAU,0BAA0B,GAAGE,aAAWF,YAAU,0BAA0B,GAAG,MAAK;AACvG,WAAK,kBAAkB,KAAK,UAAU;IACxC,GAAG,+BAA+B;AACtC,SAAK,SAAS,kBAAkB,KAAK,kBAAkB;AAEvD,SAAK,aAAa,CAAA;AAClB,SAAK,eAAe,CAAA;AACpB,SAAK,iBAAiB;AAEtB,SAAK,iBAAiB,OAAO,YAAY;AAEzC,SAAK,SAAS,iBAAgB,kBAA6C,KAAK,oBAAoB,IAAI;AACxG,SAAK,SAAS,iBAAgB,aAAwC,KAAK,gBAAgB,IAAI;AAC/F,SAAK,SAAS,iBAAgB,WAAqC,KAAK,cAAc,IAAI;EAC5F;EAEA,iBAAiB,OAAoC,QAAc;AACjE,SAAK,MAAM,oBAAmB,qBAA6C,KAAK,oBAAoB,IAAI;AACxG,SAAK,QAAQ;AACb,SAAK,eAAe;AACpB,SAAK,aAAY;AACjB,SAAK,MAAM,iBAAgB,qBAA6C,KAAK,oBAAoB,IAAI;EACvG;EAES,WAAQ;AACf,SAAK,aAAY;EACnB;EAEQ,YAAY,QAA8B;AAChD,QAAI,WAAW,KAAK,gBAAgB;AAClC;IACF;AACA,SAAK,iBAAiB;AAEtB,QAAI,CAAC,QAAQ;AACX,WAAK,cAAc,OAAM;AACzB,WAAK,YAAY,KAAK,KAAK,aAAa,cAAc;IACxD,OAAO;AACL,WAAK,YAAY,OAAM;AACvB,WAAK,cAAc,UAAU,MAAM;AACnC,WAAK,cAAc,KAAK,KAAK,aAAa,cAAc;IAC1D;EACF;EAEQ,uBAAoB;AAC1B,UAAM,SAAS,KAAK,aAAa,eAAc;AAC/C,SAAK,SAAS,qBAAqB,QAAQ,MAAM,CAAC;AAElD,SAAK,YAAY,MAAM;EACzB;EAEQ,MAAM,WAAW,WAA8B,WAAiC;AACtF,QAAI,aAAa,UAAU,IAAG,MAAO,UAAU,IAAG,GAAI;AACpD,YAAM,KAAK,MAAM,aAAa,SAAS;IACzC;AACA,WAAO,MAAM,KAAK,MAAM,WAAW,SAAS;EAC9C;EAEQ,aAAa,QAA2B,UAAoB;AAClE,SAAK,KAAK,MAAM,aAAa,MAAM,EAAE,KAAK,QAAQ;EACpD;EAEQ,kBAAkB,YAA+B;AACvD,SAAK,aAAa;AAElB,UAAM,YAAmB,mBAAU,UAAU,WAAW,KAAK,YAAY;AACzE,UAAM,OAAO,YAAY,UAAU,OAAO;AAC1C,SAAK,aAAa,gBAAgB,IAAI;AAEtC,SAAK,eAAe,KAAK,OAAO,YAAY,YAAU,GAAG,OAAO,KAAI,CAAE,IAAI,OAAO,MAAK,CAAE,IAAI,OAAO,OAAM,CAAE,EAAE;AAC7G,QAAI,KAAK,SAAS,UAAS,GAAI;AAC7B,WAAK,SAAS,kBAAkBE,aAAWF,YAAU,oBAAoB,CAAC;AAC1E,WAAK,SAAS,kBAAkB,cAAc;IAChD,OAAO;AACL,WAAK,SAAS,kBAAkBE,aAAWF,YAAU,eAAe,CAAC;AACrE,WAAK,SAAS,kBAAkB,YAAY;IAC9C;AACA,SAAK,aAAa,WAAW,KAAK,cAAc,KAAK,MAAM,6BAA4B,CAAE;AACzF,IAAG,eAAU,cAAc,MACvBE,aAAWF,YAAU,8BAA8B,EAAC,KAAK,KAAK,aAAa,OAAM,CAAC,CAAC;AACvF,SAAK,SAAS,aAAa,IAAI;AAC/B,SAAK,SAAS,gBAAgB,KAAK,aAAa,SAAS,CAAC;AAC1D,SAAK,SAAS,qBAAqB,QAAQ,KAAK,aAAa,eAAc,CAAE,CAAC;AAE9E,QAAI,CAAC,KAAK,aAAa,eAAc,GAAI;AACvC,WAAK,YAAY,IAAI;IACvB;EACF;EAEA,OAAU,OAAY,aAAgC;AACpD,UAAM,YAAY,CAAC,WAA2B;AAC5C,UAAI,CAAC,KAAK,mBAAmB,QAAO,GAAI;AACtC,eAAO;MACT;AACA,UAAI,kBAAsB,aAAO,QAAQ;AACvC,eAAqB,4BAAa,UAAU,MAAM;MACpD;AACA,aAAO;IACT;AACA,WAAO,MAAM,OAAO,UAAQ,KAAK,SAAS,aAAa,KAAK,YAAY,IAAI,CAAC,KAAK,IAAI,EAAE,OAAO,SAAS;EAC1G;;;;EAKA,iBAAc;AACZ,SAAK,YAAY,IAAI;AACrB,SAAK,KAAK,MAAM,cAAc,KAAK,YAAY;EACjD;EAEA,qBAAkB;AAChB,UAAM,iBAAiB,KAAK,aAAa,eAAc;AACvD,QAAI,gBAAgB;AAClB,WAAK,YAAY,IAAI;AACrB,WAAK,KAAK,MAAM,aAAa,cAAc;IAC7C;EACF;EAEQ,qBAAkB;AACxB,SAAK,KAAK,MAAM,oBAAoB,KAAK,YAAY,EAAE,KAAK,KAAK,kBAAkB,KAAK,IAAI,CAAC;EAC/F;EAEA,eAAY;AACV,SAAK,KAAK,MAAM,oBAAoB,KAAK,cAAc,IAAI,EAAE,KAAK,KAAK,kBAAkB,KAAK,IAAI,CAAC;EACrG;;;;AE7UF;;;;AA+BA,YAAYI,cAAY;AACxB,YAAYC,YAAU;AAEtB,YAAYC,gBAAe;AAC3B,YAAYC,kBAAiB;AAC7B,YAAYC,UAAQ;AACpB,YAAYC,qBAAmB;AAK/B,IAAMC,cAAY;;;;EAIhB,iBAAiB;;;;;EAKjB,wBAAwB;;;;EAIxB,uBAAuB;;AAEzB,IAAMC,SAAY,YAAK,kBAAkB,6CAA6CD,WAAS;AAC/F,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAC9D,IAAO,sBAAP,cAAmC,yBAAwB;EACvD;EACA;EAER,YAAY,YAAsB;AAChC,UAAMC,aAAWF,YAAU,eAAe,GAAG,eAAe,IAAI;AAEhE,SAAK,aAAa;AAClB,QAAI,WAAW,YAAY;AACzB,WAAK,SAAS,cAAc,WAAW,UAAU;IACnD;AAEA,SAAK,QAAQ,UAAU,IAAI,gBAAgB,OAAO;AAElD,SAAK,YAAY,MAAM,IAAI;AAE3B,SAAK,iBAAiB,CAAA;AACtB,SAAK,WAAW,UAAU;EAC5B;EAEU,cAAc,KAAa,OAAa;AAChD,UAAM,WAAW,KAAK,WAAW,iBAAiB,iBAAiB;AACnE,UAAM,MAAM,GAAG,QAAQ,MAAM,GAAG;AAChC,UAAM,WAAqB,iCAAsB,sBAAsB,WACnE,KACO,sBAAa,cAAc,KAClC,KAAK;AAET,WAAmB,4BAAe,eAAe,cAC7C,UACA,YAAY;EAElB;EAEA,WAAW,YAAsB;AAC/B,IAAO,qBAAY,qBAAqB,KAAK,cAAc;AAC3D,SAAK,aAAa;AAClB,UAAM,cAAc,WAAW,iBAAiB,uBAAuB;AACvE,SAAK,QAAQ,aAAa,SAAS,GAAiB,qBAAI,EAAG,QAAQ,WAAW,CAAC,EAAE;AACjF,QAAI,WAAW,YAAY;AACzB,WAAK,SAAS,cAAc,WAAW,UAAU;IACnD;AACA,SAAK,iBAAiB;MACpB,KAAK,WAAW,iBAAgB,0BAA8C,KAAK,wBAAwB,IAAI;MAC/G,KAAK,WAAW,iBAAgB,yBAA6C,KAAK,uBAAuB,IAAI;MAC7G,KAAK,WAAW,iBAAgB,uBAA2C,KAAK,qBAAqB,IAAI;MACzG,KAAK,WAAW,iBAAgB,yBAA6C,KAAK,uBAAuB,IAAI;;AAE/G,SAAK,aAAY;EACnB;EAEQ,yBAAsB;AAC5B,QAAI,CAAC,KAAK,UAAS,GAAI;AACrB;IACF;AAEA,SAAK,aAAY;EACnB;EAES,eAAY;AACnB,UAAM,aAAY;AAClB,IAAG,eAAU,cAAc,MAAME,aAAWF,YAAU,sBAAsB,CAAC;EAC/E;EAEQ,sBAAsB,OAAiF;AAE7G,QAAI,CAAC,KAAK,UAAS,GAAI;AACrB;IACF;AAEA,SAAK,YAAY,MAAM,KAAK,GAAG;EACjC;EAES,YAAY,KAAW;AAC9B,UAAM,YAAY,GAAG;AACrB,IAAG,eAAU,cAAc,MAAME,aAAWF,YAAU,qBAAqB,CAAC;EAC9E;EAEQ,oBAAoB,OAA+E;AACzG,QAAI,CAAC,KAAK,UAAS,GAAI;AACrB;IACF;AAEA,SAAK,UAAU,MAAM,KAAK,KAAK,MAAM,KAAK,KAAK;EACjD;EAEQ,sBAAsB,OAAiF;AAE7G,QAAI,CAAC,KAAK,UAAS,GAAI;AACrB;IACF;AAEA,SAAK,YAAY,MAAM,KAAK,KAAK,MAAM,KAAK,KAAK;EACnD;EAES,eAAY;AACnB,SAAK,KAAK,cAAa;EACzB;EAEA,MAAM,gBAAa;AACjB,UAAM,QAAQ,MAAM,KAAK,WAAW,SAAQ;AAC5C,QAAI,CAAC,SAAS,CAAC,KAAK,SAAS;AAC3B;IACF;AACA,UAAM,EAAC,YAAW,IAAI,KAAK;AAC3B,UAAM,gBAAgB,MAAM,IAAI,WAAS,EAAC,KAAK,KAAK,CAAC,GAAG,OAAO,KAAK,CAAC,EAAC,EAAE,EAC7C,OAAO,UAAQ,aAAa,KAAK,GAAG,KAAK,GAAG,IAAI,KAAK,KAAK,EAAE,KAAK,IAAI;AAChG,SAAK,UAAU,aAAa;EAC9B;EAES,iBAAc;AACrB,SAAK,WAAW,MAAK;AAErB,SAAK,uBAAsB;EAC7B;EAEU,WAAW,KAAW;AAC9B,SAAK,YAAY,WAAW,GAAG;EACjC;EAEU,QAAQ,KAAa,OAAa;AAC1C,SAAK,YAAY,QAAQ,KAAK,KAAK;EACrC;;;;ACrLF;;;;AA+BA,YAAYG,cAAY;AACxB,YAAYC,YAAU;AAGtB,YAAYC,gBAAe;AAC3B,YAAY,WAAW;AACvB,YAAYC,kBAAiB;AAC7B,YAAYC,UAAQ;AACpB,YAAYC,qBAAmB;AAK/B,IAAMC,cAAY;;;;EAIhB,uBAAuB;;;;;EAKvB,8BAA8B;;AAEhC,IAAMC,SAAY,YAAK,kBAAkB,mDAAmDD,WAAS;AACrG,IAAME,eAAkB,YAAK,mBAAmB,KAAK,QAAWD,MAAI;AAc9D,IAAO,4BAAP,cAAyC,yBAAwB;EACrE;EACS;EAGT,YAAY,kBAAoC,MAAuC;AACrF,UAAMC,aAAWF,YAAU,qBAAqB,GAAG,qBAAqB,MAAM,IAAI;AAElF,SAAK,QAAQ,aAAa,SAAS,GAAiB,qBAAI,EAAG,QAAQ,wBAAwB,CAAC,EAAE;AAC9F,SAAK,QAAQ,UAAU,IAAI,gBAAgB,OAAO;AAElD,SAAK,kCACD,IAAW,uBAAc,cAAa;AAE1C,SAAK,WAAW,gBAAgB;EAClC;EAEA,IAAI,cAAW;AAGb,WAAO,KAAK,kBAAkB,gBAAW;EAC3C;;;;;EAMA,WAAW,OAAa;AACtB,QAAI;AACF,aAAa,YAAM,KAAK;IAC1B,QAAQ;AACN,aAAO;IACT;EACF;EAEU,WAAW,KAAW;AAC9B,SAAK,KAAK,kBAAkB,WAAW,GAAG,EAAE,KAAK,MAAK;AACpD,WAAK,aAAY;IACnB,CAAC;EACH;EAEU,QAAQ,KAAa,OAAa;AAC1C,SAAK,KAAK,kBAAkB,QAAQ,KAAK,KAAK,WAAW,KAAK,CAAC,EAAE,KAAK,MAAK;AACzE,WAAK,aAAY;AACjB,WAAK,gCAAgC;QAAwB;;MAAA;IAC/D,CAAC;EACH;EAEU,cAAc,KAAa,OAAa;AAChD,UAAM,MAAM,yBAAyB,KAAK,kBAAkB,cAAc,MAAM,KAAK,kBAAkB,cAC/F,cAAc;AACtB,UAAM,WAAqB,iCAAsB,sBAAsB,WACnE,KACO,sBAAa,cAAc,KAClC,KAAK;AAET,WAAmB,4BAAe,eAAe,cAC7C,UACA,YAAY;EAElB;EAEA,WAAW,kBAAkC;AAC3C,SAAK,oBAAoB;AAEzB,SAAK,WAAW,KAAK;AAErB,SAAK,aAAY;EACnB;EAEA,gCAA6B;AAC3B,QAAI,CAAC,KAAK,UAAS,GAAI;AACrB;IACF;AAEA,SAAK,aAAY;AACjB,IAAG,eAAU,cAAc,MAAME,aAAWF,YAAU,4BAA4B,CAAC;EACrF;EAES,qBAAkB;AACzB,QAAI,CAAC,KAAK,aAAa;AACrB;IACF;AACA,SAAK,mBAAkB;EACzB;EAES,eAAY;AACnB,SAAK,KAAK,cAAa;EACzB;EAEA,MAAM,gBAAa;AACjB,UAAM,QAAQ,MAAM,KAAK,kBAAkB,SAAQ;AACnD,QAAI,CAAC,SAAS,CAAC,KAAK,SAAS;AAC3B;IACF;AACA,UAAM,gBACF,OAAO,QAAQ,KAAK,EACf,IAAI,CAAC,CAAC,KAAK,KAAK,OAAO,EAAC,KAAK,OAAO,OAAO,UAAU,WAAW,QAAQ,KAAK,UAAU,KAAK,EAAC,EAAE,EAC/F,OAAO,UAAQ,KAAK,SAAS,aAAa,KAAK,GAAG,KAAK,GAAG,IAAI,KAAK,KAAK,EAAE,KAAK,IAAI;AAC5F,SAAK,UAAU,aAAa;AAC5B,SAAK,gCAAgC;MAAwB;;IAAA;EAE/D;EAES,iBAAc;AACrB,QAAI,CAAC,KAAK,aAAa;AACrB;IACF;AACA,SAAK,kBAAkB,MAAK,EAAG,KAC3B,MAAK;AACH,WAAK,8BAA6B;IACpC,GACA,MAAK;AACH,YAAM,IAAI,MAAM,0BAA0B;IAC5C,CAAC;EACP;;;;ACzLF;;;;;;;;AAIA,OAAO;AAEP,YAAYG,cAAY;AACxB,YAAYC,eAAc;AAC1B,YAAYC,WAAS;AACrB,YAAYC,kBAAiB;AAC7B,YAAYC,UAAQ;AACpB,YAAYC,qBAAmgBAoJC,YAAY,QAAQ,sBAAsB,CAAC;;;ADlI3D,IAAI;AAEE,IAAO,iBAAP,MAAO,wBAA0B,WAAM,iBAAgB;EAC1C;EACjB;EACQ;EACA;EACR;EACiB;EACT;EACA;EACA;EACS;EAEjB,cAAA;AACE,UAAM,WAAW;AACjB,SAAK,oBAAoB,0BAAoB;AAE7C,SAAK,mCACM,kBAAS,SAAS,SAAQ,EAAG,cAAc,wCAAwC,CAAA,CAAE;AAEhG,SAAK,cAAc;AAEnB,SAAK,qBAAqB;AAE1B,SAAK,eAAe;AAEpB,UAAM,gBAAgB,IAAO,YAAO,KAAI;AACxC,kBAAc,eAAe,KAAK,CAAC;AACnC,SAAK,eAAe,cAAc,QAAQ,YAAY,OAAO,gBAAgB;AAC7E,SAAK,qBAAqB,cAAc,QAAQ,YAAY,oBAAoB,mBAAmB;AACnG,SAAK,YAAW,EAAG,cAAc,aAAa;AAE9C,SAAK,iBAAiB;AACtB,SAAK,uBAAuB;AAE5B,SAAK,aAAa;AAElB,SAAK,UAAU,IAAI,wBAAwB,IAAI;AAC/C,SAAK,QAAQ,KAAK,KAAK,oBAAmB,CAAE;EAC9C;EAEA,OAAO,SAAS,OAEZ,EAAC,UAAU,KAAI,GAAC;AAClB,UAAM,EAAC,SAAQ,IAAI;AACnB,QAAI,CAAC,0BAA0B,UAAU;AACvC,+BAAyB,IAAI,gBAAc;IAC7C;AAEA,WAAO;EACT;EAEQ,OAAO,mBAAmB,MAAsB;AACtD,UAAM,qBAAqB;MACb,iCAAoB;MACpB,uBAAU;MACV,sBAAS;MACrB;;AAEF,WAAO,mBAAmB,KAAK,UAAQ,gBAAgB,IAAI;EAC7D;EAEA,aAAa,oBAAiB;AAC5B,UAAS,iBAAY,YAAY,SAAQ,EAAG,SAAS,WAAW;AAChE,WAAO,gBAAe,SAAQ,EAAG;EACnC;EAES,QAAK;AACZ,SAAK,QAAQ,MAAK;EACpB;EAEA,uBAAoB;AAClB,WAAO,KAAK,iCAAiC,IAAG;EAClD;EAEA,wBAAwB,MAAuC;AAC7D,SAAK,iCAAiC,IAAI,IAAI;EAChD;EAEA,YAAS;AACP,QAAI,KAAK,eAAe,gBAAe,mBAAmB,KAAK,WAAW,GAAG;AAC3E,WAAK,SAAS,IAAI;IACpB;EACF;EAEA,SAAS,MAA2B;AAClC,SAAK,qBAAqB;AAC1B,QAAI,KAAK,gBAAgB,MAAM;AAC7B;IACF;AAEA,QAAI,KAAK,aAAa;AACpB,WAAK,YAAY,OAAM;IACzB;AAEA,QAAI,MAAM;AACR,WAAK,KAAK,KAAK,YAAY;IAC7B;AACA,SAAK,cAAc;AAEnB,SAAK,mBAAmB,mBAAkB;AAC1C,SAAK,mBAAmB,UAAU,OAAO,UAAU,IAAI;AACvD,QAAI,gBAAmB,UAAK,YAAY;AACtC,WAAK,KAAK,aAAY,EAAG,KAAK,WAAQ;AACpC,cAAM,IAAI,UAAQ,KAAK,mBAAmB,kBAAkB,IAAI,CAAC;AACjE,aAAK,mBAAmB,UAAU,OAAO,UAAU,CAAC,MAAM,MAAM;MAClE,CAAC;IACH;EACF;EAEA,MAAM,iBAAiB,aAAsC;AAC3D,SAAK,qBAAqB;AAC1B,UAAM,OAAO,MAAM;AACnB,QAAI,KAAK,uBAAuB,aAAa;AAC3C,aAAO;IACT;AACA,SAAK,SAAS,IAAI;AAClB,WAAO;EACT;EAEA,iBACI,cAAsB,kBAA0B,qBAChD,cAAkD;AACpD,QAAI,CAAC,KAAK,cAAc;AACtB,WAAK,eAAe,IAAI,oBAAmB;IAC7C;AACA,SAAK,aAAa,QAAQ,aACtB,SAAS,GAAiB,qBAAI,EAAG,QAAiB,0BAAgB,YAAY,YAAY,CAAC,CAAC,EAAE;AAClG,SAAK,aAAa,YAAY,gBAAgB;AAC9C,SAAK,aAAa,QAAQ,mBAAmB;AAC7C,SAAK,aAAa,QAAQ,YAAY;AACtC,SAAK,SAAS,KAAK,YAAY;EACjC;EAEA,eAAe,YAAsB;AACnC,QAAI,CAAC,YAAY;AACf;IACF;AAEA,QAAI,CAAC,KAAK,gBAAgB;AACxB,WAAK,iBAAiB,IAAI,oBAAoB,UAAU;IAC1D,OAAO;AACL,WAAK,eAAe,WAAW,UAAU;IAC3C;AACA,SAAK,SAAS,KAAK,cAAc;EACnC;EAEA,qBAAqB,kBAAkC;AACrD,QAAI,CAAC,kBAAkB;AACrB;IACF;AAEA,QAAI,CAAC,KAAK,sBAAsB;AAC9B,WAAK,uBAAuB,IAAI,0BAA0B,gBAAgB;IAC5E,OAAO;AACL,WAAK,qBAAqB,WAAW,gBAAgB;IACvD;AACA,SAAK,SAAS,KAAK,oBAAoB;EACzC;EAEA,YAAY,mBAAsC,cAAoB;AACpE,UAAM,QAAQ,kBAAkB,MAAU,kBAAY,WAAW;AACjE,QAAI,CAAC,OAAO;AACV;IACF;AACA,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,IAAI,gBAAgB,OAAO,YAAY;IAC3D,OAAO;AACL,WAAK,WAAW,iBAAiB,OAAO,YAAY;IACtD;AACA,SAAK,SAAS,KAAK,UAAU;EAC/B;EAEA,aAAa,QAA2B,cAAoB;AAC1D,UAAM,QAAS,OAAO,MAAU,kBAAY,WAAW;AACvD,QAAI,CAAC,OAAO;AACV;IACF;AACA,SAAK,MAAM,MAAM,YAAY,EAAE,KAAK,MAAK;AACvC,UAAI,KAAK,YAAY;AACnB,aAAK,WAAW,aAAY;MAC9B;IACF,CAAC;EACH;;AAGI,IAAO,mBAAP,MAAuB;EAC3B,MAAM,OAAO,UAA+B;AAC1C,UAAM,UAAU,MAAM,eAAe,kBAAiB;AACtD,UAAM,QAAQ,aAAa,QAAQ;EACrC;;AAGI,IAAO,uBAAP,MAA2B;EAC/B,MAAM,OAAO,OAA8C;AACzD,UAAM,UAAU,MAAM,eAAe,kBAAiB;AACtD,YAAQ,UAAU,KAAK;EACzB;;AAGI,IAAO,sBAAP,MAA0B;EAC9B,MAAM,OAAO,YAA0D;AACrE,UAAM,UAAU,MAAM,eAAe,kBAAiB;AACtD,YAAQ,0BAA0B,UAAU;EAC9C;;AAGI,IAAO,gCAAP,MAAoC;EAExC,MAAM,OAAO,QAAgE;AAC3E,UAAM,UAAU,MAAM,eAAe,kBAAiB;AACtD,YAAQ,oCAAoC,MAAM;EACpD;;",
  "names": ["Common", "Host", "i18n", "Platform", "SDK", "IconButton", "LegacyWrapper", "SourceFrame", "UI", "link", "Common", "UI", "link", "section", "Host", "i18n", "IconButton", "UI", "ApplicationComponents", "UIStrings", "str_", "i18nString", "SDK", "Events", "i18n", "SDK", "Buttons", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "i18nString", "Host", "i18n", "IconButton", "LegacyWrapper", "UI", "ApplicationComponents", "UIStrings", "str_", "i18nString", "ApplicationComponents", "Common", "SDK", "Common", "SDK", "Events", "Common", "SDK", "storageBucket", "i18n", "SDK", "Buttons", "DataGrid", "UI", "VisualLogging", "ApplicationComponents", "UIStrings", "str_", "i18nString", "SDK", "i18nString", "Host", "i18n", "SDK", "IconButton", "i18n", "UI", "VisualLogging", "ApplicationComponents", "UIStrings", "str_", "i18nString", "UIStrings", "str_", "i18nString", "Common", "i18n", "SDK", "IconButton", "UI", "UIStrings", "str_", "i18nString", "i18n", "IconButton", "Common", "i18n", "Platform", "assertNotNullOrUndefined", "SDK", "Buttons", "UI", "html", "VisualLogging", "i18n", "SDK", "Bindings", "UIStrings", "str_", "i18nString", "pageURL", "UIStrings", "str_", "i18nString", "html", "assertNotNullOrUndefined", "toolbar", "id", "UIStrings", "str_", "i18nString", "Host", "i18n", "IconButton", "ApplicationComponents", "i18nString", "i18n", "SDK", "SourceFrame", "UI", "html", "render", "VisualLogging", "ApplicationComponents", "UIStrings", "str_", "report", "UIStrings", "str_", "i18nString", "Host", "i18n", "SDK", "IconButton", "UI", "Common", "i18n", "Platform", "SDK", "LegacyWrapper", "DataGrid", "UI", "VisualLogging", "ApplicationComponents", "UIStrings", "str_", "i18nString", "entries", "returnCount", "header", "UIStrings", "str_", "i18nString", "Common", "Host", "i18n", "SDK", "Buttons", "Components", "UI", "VisualLogging", "ApplicationComponents", "i18n", "SDK", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "UIStrings", "str_", "i18nString", "section", "link", "clientString", "Common", "i18n", "IconButton", "i18n", "SDK", "SourceFrame", "UI", "VisualLogging", "ApplicationComponents", "UIStrings", "str_", "i18nString", "eventEquals", "UIStrings", "str_", "i18nString", "Common", "SDK", "VisualLogging", "Common", "i18n", "SourceFrame", "UI", "ApplicationComponents", "i18n", "UI", "html", "nothing", "render", "VisualLogging", "ApplicationComponents", "DEFAULT_VIEW", "Common", "i18n", "Platform", "Buttons", "UI", "Lit", "VisualLogging", "ApplicationComponents", "UIStrings", "str_", "i18nString", "html", "render", "ARIAUtils", "UI", "EmptyWidget", "widgetConfig", "UIStrings", "str_", "i18nString", "render", "html", "view", "nothing", "toolbar", "item", "UIStrings", "str_", "i18nString", "i18nString", "i18n", "SDK", "IconButton", "LegacyWrapper", "UI", "StorageMetadataView", "UIStrings", "str_", "i18nString", "StorageMetadataView", "ActionDelegate", "Common", "i18n", "Platform", "SDK", "IconButton", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "section", "target", "ActionDelegate", "i18nString", "Host", "i18n", "IconButton", "LegacyWrapper", "UI", "ApplicationComponents", "UIStrings", "str_", "i18nString", "UIStrings", "str_", "i18nString", "section", "Events", "link", "Common", "i18n", "SDK", "IssuesManager", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "toggle", "Common", "i18n", "TextUtils", "SourceFrame", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "Common", "i18n", "TextUtils", "SourceFrame", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "Common", "Platform", "SDK", "SourceFrame", "UI", "VisualLogging"]
}
