{"version":3,"file":"ExtensionStorageModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ExtensionStorageModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nexport class ExtensionStorage extends Common.ObjectWrapper.ObjectWrapper<Record<string, never>> {\n  readonly #model: ExtensionStorageModel;\n  readonly #extensionIdInternal: string;\n  readonly #nameInternal: string;\n  readonly #storageAreaInternal: Protocol.Extensions.StorageArea;\n\n  constructor(\n      model: ExtensionStorageModel, extensionId: string, name: string, storageArea: Protocol.Extensions.StorageArea) {\n    super();\n    this.#model = model;\n    this.#extensionIdInternal = extensionId;\n    this.#nameInternal = name;\n    this.#storageAreaInternal = storageArea;\n  }\n\n  get model(): ExtensionStorageModel {\n    return this.#model;\n  }\n\n  get extensionId(): string {\n    return this.#extensionIdInternal;\n  }\n\n  get name(): string {\n    return this.#nameInternal;\n  }\n\n  // Returns a key that uniquely identifies this extension ID and storage area,\n  // but which is not unique across targets, so we can identify two identical\n  // storage areas across frames.\n  get key(): string {\n    return `${this.extensionId}-${this.storageArea}`;\n  }\n\n  get storageArea(): Protocol.Extensions.StorageArea {\n    return this.#storageAreaInternal;\n  }\n\n  async getItems(keys?: string[]): Promise<{[key: string]: unknown}> {\n    const params: Protocol.Extensions.GetStorageItemsRequest = {\n      id: this.#extensionIdInternal,\n      storageArea: this.#storageAreaInternal,\n    };\n    if (keys) {\n      params.keys = keys;\n    }\n    const response = await this.#model.agent.invoke_getStorageItems(params);\n    if (response.getError()) {\n      throw new Error(response.getError());\n    }\n    return response.data;\n  }\n\n  async setItem(key: string, value: unknown): Promise<void> {\n    const response = await this.#model.agent.invoke_setStorageItems(\n        {id: this.#extensionIdInternal, storageArea: this.#storageAreaInternal, values: {[key]: value}});\n    if (response.getError()) {\n      throw new Error(response.getError());\n    }\n  }\n\n  async removeItem(key: string): Promise<void> {\n    const response = await this.#model.agent.invoke_removeStorageItems(\n        {id: this.#extensionIdInternal, storageArea: this.#storageAreaInternal, keys: [key]});\n    if (response.getError()) {\n      throw new Error(response.getError());\n    }\n  }\n\n  async clear(): Promise<void> {\n    const response = await this.#model.agent.invoke_clearStorageItems(\n        {id: this.#extensionIdInternal, storageArea: this.#storageAreaInternal});\n    if (response.getError()) {\n      throw new Error(response.getError());\n    }\n  }\n\n  matchesTarget(target: SDK.Target.Target|undefined): boolean {\n    if (!target) {\n      return false;\n    }\n    const targetURL = target.targetInfo()?.url;\n    const parsedURL = targetURL ? Common.ParsedURL.ParsedURL.fromString(targetURL) : null;\n    return parsedURL?.scheme === 'chrome-extension' && parsedURL?.host === this.extensionId;\n  }\n}\n\nexport class ExtensionStorageModel extends SDK.SDKModel.SDKModel<EventTypes> {\n  readonly #runtimeModelInternal: SDK.RuntimeModel.RuntimeModel|null;\n  #storagesInternal: Map<string, Map<Protocol.Extensions.StorageArea, ExtensionStorage>>;\n  readonly agent: ProtocolProxyApi.ExtensionsApi;\n  #enabled?: boolean;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n\n    this.#runtimeModelInternal = target.model(SDK.RuntimeModel.RuntimeModel);\n    this.#storagesInternal = new Map();\n    this.agent = target.extensionsAgent();\n  }\n\n  enable(): void {\n    if (this.#enabled) {\n      return;\n    }\n\n    if (this.#runtimeModelInternal) {\n      this.#runtimeModelInternal.addEventListener(\n          SDK.RuntimeModel.Events.ExecutionContextCreated, this.#onExecutionContextCreated, this);\n      this.#runtimeModelInternal.addEventListener(\n          SDK.RuntimeModel.Events.ExecutionContextDestroyed, this.#onExecutionContextDestroyed, this);\n      this.#runtimeModelInternal.executionContexts().forEach(this.#executionContextCreated, this);\n    }\n\n    this.#enabled = true;\n  }\n\n  #getStoragesForExtension(id: string): Map<Protocol.Extensions.StorageArea, ExtensionStorage> {\n    const existingStorages = this.#storagesInternal.get(id);\n\n    if (existingStorages) {\n      return existingStorages;\n    }\n\n    const newStorages = new Map();\n    this.#storagesInternal.set(id, newStorages);\n    return newStorages;\n  }\n\n  #addExtension(id: string, name: string): void {\n    for (const storageArea\n             of [Protocol.Extensions.StorageArea.Session, Protocol.Extensions.StorageArea.Local,\n                 Protocol.Extensions.StorageArea.Sync, Protocol.Extensions.StorageArea.Managed]) {\n      const storages = this.#getStoragesForExtension(id);\n      const storage = new ExtensionStorage(this, id, name, storageArea);\n\n      console.assert(!storages.get(storageArea));\n\n      storage.getItems([])\n          .then(() => {\n            // The extension may have been removed in the meantime.\n            if (this.#storagesInternal.get(id) !== storages) {\n              return;\n            }\n            // The storage area may have been added in the meantime.\n            if (storages.get(storageArea)) {\n              return;\n            }\n            storages.set(storageArea, storage);\n            this.dispatchEventToListeners(Events.EXTENSION_STORAGE_ADDED, storage);\n          })\n          .catch(\n              () => {\n                  // Storage area is inaccessible (extension may have restricted access\n                  // or not enabled the API).\n              });\n    }\n  }\n\n  #removeExtension(id: string): void {\n    const storages = this.#storagesInternal.get(id);\n\n    if (!storages) {\n      return;\n    }\n\n    for (const [key, storage] of storages) {\n      // Delete this before firing the event, since this matches the behavior\n      // of other models and meets expectations for a removed event.\n      storages.delete(key);\n      this.dispatchEventToListeners(Events.EXTENSION_STORAGE_REMOVED, storage);\n    }\n\n    this.#storagesInternal.delete(id);\n  }\n\n  #executionContextCreated(context: SDK.RuntimeModel.ExecutionContext): void {\n    const extensionId = this.#extensionIdForContext(context);\n    if (extensionId) {\n      this.#addExtension(extensionId, context.name);\n    }\n  }\n\n  #onExecutionContextCreated(event: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext>): void {\n    this.#executionContextCreated(event.data);\n  }\n\n  #extensionIdForContext(context: SDK.RuntimeModel.ExecutionContext): string|undefined {\n    const url = Common.ParsedURL.ParsedURL.fromString(context.origin);\n    return url && url.scheme === 'chrome-extension' ? url.host : undefined;\n  }\n\n  #executionContextDestroyed(context: SDK.RuntimeModel.ExecutionContext): void {\n    const extensionId = this.#extensionIdForContext(context);\n    if (extensionId) {\n      // Ignore event if there is still another context for this extension.\n      if (this.#runtimeModelInternal?.executionContexts().some(c => this.#extensionIdForContext(c) === extensionId)) {\n        return;\n      }\n\n      this.#removeExtension(extensionId);\n    }\n  }\n\n  #onExecutionContextDestroyed(event: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext>): void {\n    this.#executionContextDestroyed(event.data);\n  }\n\n  storageForIdAndArea(id: string, storageArea: Protocol.Extensions.StorageArea): ExtensionStorage|undefined {\n    return this.#storagesInternal.get(id)?.get(storageArea);\n  }\n\n  storages(): ExtensionStorage[] {\n    const result = [];\n    for (const storages of this.#storagesInternal.values()) {\n      result.push(...storages.values());\n    }\n    return result;\n  }\n}\n\nSDK.SDKModel.SDKModel.register(ExtensionStorageModel, {capabilities: SDK.Target.Capability.JS, autostart: false});\n\nexport const enum Events {\n  EXTENSION_STORAGE_ADDED = 'ExtensionStorageAdded',\n  EXTENSION_STORAGE_REMOVED = 'ExtensionStorageRemoved',\n}\n\nexport interface EventTypes {\n  [Events.EXTENSION_STORAGE_ADDED]: ExtensionStorage;\n  [Events.EXTENSION_STORAGE_REMOVED]: ExtensionStorage;\n}\n"]}