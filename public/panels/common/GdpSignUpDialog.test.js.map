{"version":3,"file":"GdpSignUpDialog.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/common/GdpSignUpDialog.test.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,MAAM,MAAM,+BAA+B,CAAC;AACxD,OAAO,EACL,oBAAoB,GACrB,MAAM,6BAA6B,CAAC;AACrC,OAAO,EAAC,uBAAuB,EAAC,MAAM,qCAAqC,CAAC;AAC5E,OAAO,EAAC,sBAAsB,EAAC,MAAM,sCAAsC,CAAC;AAC5E,OAAO,KAAK,SAAS,MAAM,4CAA4C,CAAC;AACxE,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,KAAK,WAAW,MAAM,aAAa,CAAC;AAE3C,SAAS,8BAA8B;IACrC,MAAM,EAAC,OAAO,EAAE,oBAAoB,EAAE,OAAO,EAAE,oBAAoB,EAAC,GAAG,OAAO,CAAC,aAAa,EAAuB,CAAC;IACpH,MAAM,iBAAiB,GACnB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,eAAe,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;IACnG,OAAO,EAAC,iBAAiB,EAAE,oBAAoB,EAAE,oBAAoB,EAAC,CAAC;AACzE,CAAC;AAED,uBAAuB,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC9C,KAAK,UAAU,YAAY;QACzB,MAAM,IAAI,GAAG,sBAAsB,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QACjE,MAAM,MAAM,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACtC,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC1C,MAAM,MAAM,GAAG,IAAI,WAAW,CAAC,eAAe,CAAC,EAAC,MAAM,EAAC,EAAE,IAAI,CAAC,CAAC;QAC/D,MAAM,CAAC,UAAU,EAAE,CAAC;QACpB,oBAAoB,CAAC,MAAM,CAAC,CAAC;QAC7B,MAAM,IAAI,CAAC,SAAS,CAAC;QACrB,OAAO,EAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,CAAC;IACjC,CAAC;IAED,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,YAAY,EAAE,CAAC;QACpC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACzC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,YAAY,EAAE,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACvC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;QACxC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,EAAC,IAAI,EAAE,OAAO,EAAC,GAAG,MAAM,YAAY,EAAE,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC3B,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,IAAI,wBAAyC,CAAC;QAC9C,IAAI,0BAA2C,CAAC;QAChD,IAAI,gBAAiC,CAAC;QAEtC,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YAC7C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,EAAE,oBAAoB,CAAC;iBACrF,SAAS,CAAC,CAAC,QAAuE,EAAE,EAAE;gBACrF,QAAQ,CAAC,EAAC,YAAY,EAAE,iBAAiB,EAAE,eAAe,EAAE,WAAW,EAAE,YAAY,EAAE,KAAK,EAAC,CAAC,CAAC;YACjG,CAAC,CAAC,CAAC;YAEP,wBAAwB,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC7F,0BAA0B,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,cAAc,CAAC,CAAC;YACtF,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAEnE,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,MAAM,EAAC,iBAAiB,EAAE,oBAAoB,EAAE,oBAAoB,EAAC,GAAG,8BAA8B,EAAE,CAAC;YACzG,MAAM,EAAC,IAAI,EAAE,OAAO,EAAC,GAAG,MAAM,YAAY,EAAE,CAAC;YAE7C,KAAK,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAEhC,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;YACvC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YAErC,oBAAoB,CAAC,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC,CAAC;YAC1C,MAAM,oBAAoB,CAAC;YAC3B,iEAAiE;YACjE,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;YAErD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YAC1E,KAAK,CAAC,MAAM,CAAC,qBAAqB,CAC9B,iBAAiB,EAAE,EAAC,IAAI,EAAE,WAAW,EAAE,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ,EAAC,CAAC,CAAC;YACtG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;YAClD,KAAK,CAAC,MAAM,CAAC,qBAAqB,CAAC,0BAA0B,EAAE,MAAM,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;YACxG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;YAChE,MAAM,EAAC,iBAAiB,EAAE,oBAAoB,EAAE,oBAAoB,EAAC,GAAG,8BAA8B,EAAE,CAAC;YACzG,MAAM,EAAC,IAAI,EAAE,OAAO,EAAC,GAAG,MAAM,YAAY,EAAE,CAAC;YAE7C,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;YACvC,MAAM,IAAI,CAAC,SAAS,CAAC;YAErB,KAAK,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAEhC,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;YACvC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YAErC,oBAAoB,CAAC,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC,CAAC;YAC1C,MAAM,oBAAoB,CAAC;YAC3B,iEAAiE;YACjE,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;YAErD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YAC1E,KAAK,CAAC,MAAM,CAAC,qBAAqB,CAC9B,iBAAiB,EAAE,EAAC,IAAI,EAAE,WAAW,EAAE,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,EAAC,CAAC,CAAC;YACrG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;YAClD,KAAK,CAAC,MAAM,CAAC,qBAAqB,CAAC,0BAA0B,EAAE,MAAM,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;YACxG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;YACtC,MAAM,EAAC,iBAAiB,EAAE,oBAAoB,EAAE,oBAAoB,EAAC,GAAG,8BAA8B,EAAE,CAAC;YACzG,MAAM,EAAC,IAAI,EAAE,OAAO,EAAC,GAAG,MAAM,YAAY,EAAE,CAAC;YAE7C,KAAK,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAEhC,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;YACvC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YAErC,oBAAoB,CAAC,IAAI,CAAC,CAAC;YAC3B,MAAM,oBAAoB,CAAC;YAC3B,iEAAiE;YACjE,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;YAErD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YAC3E,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;YAC3C,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;YAC1C,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;YACjD,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;YACnD,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YAEhC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;YACxC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Badges from '../../models/badges/badges.js';\nimport {\n  renderElementIntoDOM,\n} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {createViewFunctionStub} from '../../testing/ViewFunctionHelpers.js';\nimport * as Snackbars from '../../ui/components/snackbars/snackbars.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as PanelCommon from './common.js';\n\nfunction stubCreateProfileWithResolvers() {\n  const {promise: createProfilePromise, resolve: resolveCreateProfile} = Promise.withResolvers<{name: string}|null>();\n  const createProfileStub =\n      sinon.stub(Host.GdpClient.GdpClient.instance(), 'createProfile').returns(createProfilePromise);\n  return {createProfileStub, createProfilePromise, resolveCreateProfile};\n}\n\ndescribeWithEnvironment('GdpSignUpDialog', () => {\n  async function createWidget() {\n    const view = createViewFunctionStub(PanelCommon.GdpSignUpDialog);\n    const dialog = new UI.Dialog.Dialog();\n    const hideSpy = sinon.spy(dialog, 'hide');\n    const widget = new PanelCommon.GdpSignUpDialog({dialog}, view);\n    widget.markAsRoot();\n    renderElementIntoDOM(widget);\n    await view.nextInput;\n    return {view, widget, hideSpy};\n  }\n\n  it('renders with initial state', async () => {\n    const {view} = await createWidget();\n    assert.isFalse(view.input.keepMeUpdated);\n    assert.isFalse(view.input.isSigningUp);\n  });\n\n  it('updates keepMeUpdated state on change', async () => {\n    const {view} = await createWidget();\n    view.input.onKeepMeUpdatedChange(true);\n    const finalInput = await view.nextInput;\n    assert.isTrue(finalInput.keepMeUpdated);\n  });\n\n  it('hides the dialog on cancel', async () => {\n    const {view, hideSpy} = await createWidget();\n    view.input.onCancelClick();\n    sinon.assert.calledOnce(hideSpy);\n  });\n\n  describe('onSignUpClick', () => {\n    let userBadgesInitializeStub: sinon.SinonStub;\n    let userBadgesRecordActionStub: sinon.SinonStub;\n    let snackbarShowStub: sinon.SinonStub;\n\n    beforeEach(() => {\n      Badges.UserBadges.instance({forceNew: true});\n      sinon.stub(Host.InspectorFrontendHost.InspectorFrontendHostInstance, 'getSyncInformation')\n          .callsFake((callback: (info: Host.InspectorFrontendHostAPI.SyncInformation) => void) => {\n            callback({accountEmail: 'test@google.com', accountFullName: 'Test User', isSyncActive: false});\n          });\n\n      userBadgesInitializeStub = sinon.stub(Badges.UserBadges.instance(), 'initialize').resolves();\n      userBadgesRecordActionStub = sinon.stub(Badges.UserBadges.instance(), 'recordAction');\n      snackbarShowStub = sinon.stub(Snackbars.Snackbar.Snackbar, 'show');\n\n      Common.Settings.settingForTest('receive-gdp-badges').set(false);\n    });\n\n    it('handles successful sign up', async () => {\n      const {createProfileStub, createProfilePromise, resolveCreateProfile} = stubCreateProfileWithResolvers();\n      const {view, hideSpy} = await createWidget();\n\n      void view.input.onSignUpClick();\n\n      const nextInput = await view.nextInput;\n      assert.isTrue(nextInput.isSigningUp);\n\n      resolveCreateProfile({name: 'test/name'});\n      await createProfilePromise;\n      // Wait for `Badges.UserBadges.instance().initialize` to resolve.\n      await new Promise(resolve => setTimeout(resolve, 0));\n\n      assert.isTrue(Common.Settings.settingForTest('receive-gdp-badges').get());\n      sinon.assert.calledOnceWithExactly(\n          createProfileStub, {user: 'Test User', emailPreference: Host.GdpClient.EmailPreference.DISABLED});\n      sinon.assert.calledOnce(userBadgesInitializeStub);\n      sinon.assert.calledOnceWithExactly(userBadgesRecordActionStub, Badges.BadgeAction.GDP_SIGN_UP_COMPLETE);\n      sinon.assert.calledOnce(hideSpy);\n    });\n\n    it('handles successful sign up with email preference', async () => {\n      const {createProfileStub, createProfilePromise, resolveCreateProfile} = stubCreateProfileWithResolvers();\n      const {view, hideSpy} = await createWidget();\n\n      view.input.onKeepMeUpdatedChange(true);\n      await view.nextInput;\n\n      void view.input.onSignUpClick();\n\n      const nextInput = await view.nextInput;\n      assert.isTrue(nextInput.isSigningUp);\n\n      resolveCreateProfile({name: 'user/name'});\n      await createProfilePromise;\n      // Wait for `Badges.UserBadges.instance().initialize` to resolve.\n      await new Promise(resolve => setTimeout(resolve, 0));\n\n      assert.isTrue(Common.Settings.settingForTest('receive-gdp-badges').get());\n      sinon.assert.calledOnceWithExactly(\n          createProfileStub, {user: 'Test User', emailPreference: Host.GdpClient.EmailPreference.ENABLED});\n      sinon.assert.calledOnce(userBadgesInitializeStub);\n      sinon.assert.calledOnceWithExactly(userBadgesRecordActionStub, Badges.BadgeAction.GDP_SIGN_UP_COMPLETE);\n      sinon.assert.calledOnce(hideSpy);\n    });\n\n    it('handles failed sign up', async () => {\n      const {createProfileStub, createProfilePromise, resolveCreateProfile} = stubCreateProfileWithResolvers();\n      const {view, hideSpy} = await createWidget();\n\n      void view.input.onSignUpClick();\n\n      const nextInput = await view.nextInput;\n      assert.isTrue(nextInput.isSigningUp);\n\n      resolveCreateProfile(null);\n      await createProfilePromise;\n      // Wait for `Badges.UserBadges.instance().initialize` to resolve.\n      await new Promise(resolve => setTimeout(resolve, 0));\n\n      assert.isFalse(Common.Settings.settingForTest('receive-gdp-badges').get());\n      sinon.assert.calledOnce(createProfileStub);\n      sinon.assert.calledOnce(snackbarShowStub);\n      sinon.assert.notCalled(userBadgesInitializeStub);\n      sinon.assert.notCalled(userBadgesRecordActionStub);\n      sinon.assert.notCalled(hideSpy);\n\n      const finalInput = await view.nextInput;\n      assert.isFalse(finalInput.isSigningUp);\n    });\n  });\n});\n"]}