{
  "version": 3,
  "sources": ["common.prebundle.ts", "common.css.js", "../../../../../../front_end/panels/common/AiCodeCompletionTeaser.ts", "aiCodeCompletionTeaser.css.js", "../../../../../../front_end/panels/common/FreDialog.ts", "freDialog.css.js", "../../../../../../front_end/panels/common/AiCodeCompletionDisclaimer.ts", "aiCodeCompletionDisclaimer.css.js", "../../../../../../front_end/panels/common/AiCodeCompletionSummaryToolbar.ts", "aiCodeCompletionSummaryToolbar.css.js"],
  "sourcesContent": ["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport commonStyles from './common.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text for the cancel button in the dialog.\n   */\n  cancel: 'Cancel',\n  /**\n   * @description Text for the allow button in the \"type to allow\" dialog.\n   */\n  allow: 'Allow',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/common/common.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class TypeToAllowDialog {\n  static async show(options: {\n    jslogContext: {\n      dialog: string,\n      input: string,\n    },\n    header: Platform.UIString.LocalizedString,\n    message: Platform.UIString.LocalizedString,\n    typePhrase: Platform.UIString.LocalizedString,\n    inputPlaceholder: Platform.UIString.LocalizedString,\n  }): Promise<boolean> {\n    const dialog = new UI.Dialog.Dialog(options.jslogContext.dialog);\n    dialog.setMaxContentSize(new UI.Geometry.Size(504, 340));\n    dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.SET_EXACT_WIDTH_MAX_HEIGHT);\n    dialog.setDimmed(true);\n    const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(dialog.contentElement, {cssFile: commonStyles});\n    const content = shadowRoot.createChild('div', 'type-to-allow-dialog');\n\n    const result = await new Promise<boolean>(resolve => {\n      const header = content.createChild('div', 'header');\n      header.createChild('div', 'title').textContent = options.header;\n\n      const closeButton = header.createChild('dt-close-button', 'dialog-close-button');\n      closeButton.setTabbable(true);\n      self.onInvokeElement(closeButton, event => {\n        dialog.hide();\n        event.consume(true);\n        resolve(false);\n      });\n      closeButton.setSize(Buttons.Button.Size.SMALL);\n\n      content.createChild('div', 'message').textContent = options.message;\n\n      const input = UI.UIUtils.createInput('text-input', 'text', options.jslogContext.input);\n      input.placeholder = options.inputPlaceholder;\n      content.appendChild(input);\n\n      const buttonsBar = content.createChild('div', 'button');\n      const cancelButton =\n          UI.UIUtils.createTextButton(i18nString(UIStrings.cancel), () => resolve(false), {jslogContext: 'cancel'});\n\n      const allowButton = UI.UIUtils.createTextButton(i18nString(UIStrings.allow), () => {\n        resolve(input.value === options.typePhrase);\n      }, {jslogContext: 'confirm', variant: Buttons.Button.Variant.PRIMARY});\n      allowButton.disabled = true;\n\n      buttonsBar.appendChild(allowButton);\n      buttonsBar.appendChild(cancelButton);\n\n      input.addEventListener('input', () => {\n        allowButton.disabled = !Boolean(input.value);\n      }, false);\n      input.addEventListener('paste', e => e.preventDefault());\n      input.addEventListener('drop', e => e.preventDefault());\n\n      dialog.setOutsideClickCallback(event => {\n        event.consume();\n        resolve(false);\n      });\n      dialog.show();\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelfXssWarningDialogShown);\n    });\n    dialog.hide();\n    return result;\n  }\n}\n\nexport {AiCodeCompletionTeaser} from './AiCodeCompletionTeaser.js';\nexport {FreDialog} from './FreDialog.js';\nexport {AiCodeCompletionDisclaimer} from './AiCodeCompletionDisclaimer.js';\nexport {AiCodeCompletionSummaryToolbar} from './AiCodeCompletionSummaryToolbar.js';\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.type-to-allow-dialog {\n  width: 100%;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    font: var(--sys-typescale-body2-medium);\n    margin: var(--sys-size-5) var(--sys-size-5) var(--sys-size-5) var(--sys-size-8);\n  }\n\n  .title {\n    padding-top: var(--sys-size-3);\n  }\n\n  .dialog-close-button {\n    margin: var(--sys-size-3);\n    z-index: 1;\n  }\n\n  .message,\n  .text-input {\n    margin: 0 var(--sys-size-8);\n  }\n\n  .text-input {\n    margin-top: var(--sys-size-5);\n  }\n\n  .button {\n    text-align: right;\n    margin: var(--sys-size-6) var(--sys-size-8) var(--sys-size-8) var(--sys-size-8);\n    gap: var(--sys-size-5);\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: flex-start;\n  }\n\n  .button button {\n    min-width: var(--sys-size-19);\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./common.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Snackbars from '../../ui/components/snackbars/snackbars.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport styles from './aiCodeCompletionTeaser.css.js';\nimport {FreDialog} from './FreDialog.js';\n\nconst UIStringsNotTranslate = {\n  /**\n   * @description Text for `ctrl` key.\n   */\n  ctrl: 'ctrl',\n  /**\n   * @description Text for `cmd` key.\n   */\n  cmd: 'cmd',\n  /**\n   * @description Text for `i` key.\n   */\n  i: 'i',\n  /**\n   * @description Text for `x` key.\n   */\n  x: 'x',\n  /**\n   * @description Text for dismissing teaser.\n   */\n  dontShowAgain: 'Don\\'t show again',\n  /**\n   * @description Text for teaser to turn on code suggestions.\n   */\n  toTurnOnCodeSuggestions: 'to turn on code suggestions.',\n  /**\n   * @description Text for snackbar notification on dismissing the teaser.\n   */\n  turnOnCodeSuggestionsAtAnyTimeInSettings: 'Turn on code suggestions at any time in Settings',\n  /**\n   * @description Text for snackbar action button to manage settings.\n   */\n  manage: 'Manage',\n  /**\n   * @description The footer disclaimer that links to more information\n   * about the AI feature.\n   */\n  learnMore: 'Learn more about AI code completion',\n  /**\n   * @description Header text for the AI-powered suggestions disclaimer dialog.\n   */\n  freDisclaimerHeader: 'Code faster with AI-powered suggestions',\n  /**\n   * @description First disclaimer item text for the fre dialog.\n   */\n  freDisclaimerTextAiWontAlwaysGetItRight: 'This feature uses AI and won’t always get it right',\n  /**\n   * @description Second disclaimer item text for the fre dialog.\n   */\n  freDisclaimerTextPrivacy:\n      'To generate code suggestions, your console input, the history of your current console session, the currently inspected CSS, and the contents of the currently open file are shared with Google. This data may be seen by human reviewers to improve this feature.',\n  /**\n   * @description Second disclaimer item text for the fre dialog when enterprise logging is off.\n   */\n  freDisclaimerTextPrivacyNoLogging:\n      'To generate code suggestions, your console input, the history of your current console session, the currently inspected CSS, and the contents of the currently open file are shared with Google. This data will not be used to improve Google’s AI models. Your organization may change these settings at any time.',\n  /**\n   * @description Third disclaimer item text for the fre dialog.\n   */\n  freDisclaimerTextUseWithCaution: 'Use generated code snippets with caution',\n  /**\n   *@description Text for ARIA label for the teaser.\n   */\n  press: 'Press',\n  /**\n   *@description Text for ARIA label for the teaser.\n   */\n  toDisableCodeSuggestions: 'to disable code suggestions.',\n} as const;\n\nconst lockedString = i18n.i18n.lockedString;\nconst CODE_SNIPPET_WARNING_URL = 'https://support.google.com/legal/answer/13505487';\n\nexport interface ViewInput {\n  aidaAvailability: Host.AidaClient.AidaAccessPreconditions;\n  onAction: (event: Event) => void;\n  onDismiss: (event: Event) => void;\n}\n\nexport type View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  if (input.aidaAvailability !== Host.AidaClient.AidaAccessPreconditions.AVAILABLE) {\n    render(nothing, target);\n    return;\n  }\n  const cmdOrCtrl =\n      Host.Platform.isMac() ? lockedString(UIStringsNotTranslate.cmd) : lockedString(UIStringsNotTranslate.ctrl);\n  const teaserAriaLabel = lockedString(UIStringsNotTranslate.press) + ' ' + cmdOrCtrl + ' ' +\n      lockedString(UIStringsNotTranslate.i) + ' ' + lockedString(UIStringsNotTranslate.toTurnOnCodeSuggestions) + ' ' +\n      lockedString(UIStringsNotTranslate.press) + ' ' + cmdOrCtrl + ' ' + lockedString(UIStringsNotTranslate.x) + ' ' +\n      lockedString(UIStringsNotTranslate.toDisableCodeSuggestions);\n  // clang-format off\n  render(\n        html`\n          <style>${styles}</style>\n          <div class=\"ai-code-completion-teaser-screen-reader-only\">${teaserAriaLabel}</div>\n          <div class=\"ai-code-completion-teaser\" aria-hidden=\"true\">\n            <span class=\"ai-code-completion-teaser-action\">\n              <span>${cmdOrCtrl}</span>\n              <span>${lockedString(UIStringsNotTranslate.i)}</span>\n            </span>\n            </span>&nbsp;${lockedString(UIStringsNotTranslate.toTurnOnCodeSuggestions)}&nbsp;\n            <span role=\"button\" class=\"ai-code-completion-teaser-dismiss\" @click=${input.onDismiss}\n              jslog=${VisualLogging.action('ai-code-completion-teaser.dismiss').track({click: true})}>\n                ${lockedString(UIStringsNotTranslate.dontShowAgain)}\n            </span>\n          </div>\n        `, target\n      );\n  // clang-format on\n};\n\ninterface AiCodeCompletionTeaserConfig {\n  onDetach: () => void;\n}\n\nexport class AiCodeCompletionTeaser extends UI.Widget.Widget {\n  readonly #view: View;\n\n  #aidaAvailability = Host.AidaClient.AidaAccessPreconditions.NO_ACCOUNT_EMAIL;\n  #boundOnAidaAvailabilityChange: () => Promise<void>;\n  #onDetach: () => void;\n\n  // Whether the user completed first run experience dialog or not.\n  #aiCodeCompletionFreCompletedSetting =\n      Common.Settings.Settings.instance().createSetting('ai-code-completion-enabled', false);\n  // Whether the user dismissed the teaser or not.\n  #aiCodeCompletionTeaserDismissedSetting =\n      Common.Settings.Settings.instance().createSetting('ai-code-completion-teaser-dismissed', false);\n\n  #noLogging: boolean;  // Whether the enterprise setting is `ALLOW_WITHOUT_LOGGING` or not.\n\n  constructor(config: AiCodeCompletionTeaserConfig, view?: View) {\n    super();\n    this.markAsExternallyManaged();\n    this.#onDetach = config.onDetach;\n    this.#view = view ?? DEFAULT_VIEW;\n    this.#boundOnAidaAvailabilityChange = this.#onAidaAvailabilityChange.bind(this);\n    this.#noLogging = Root.Runtime.hostConfig.aidaAvailability?.enterprisePolicyValue ===\n        Root.Runtime.GenAiEnterprisePolicyValue.ALLOW_WITHOUT_LOGGING;\n    this.requestUpdate();\n  }\n\n  #showReminderSnackbar(): void {\n    Snackbars.Snackbar.Snackbar.show({\n      message: lockedString(UIStringsNotTranslate.turnOnCodeSuggestionsAtAnyTimeInSettings),\n      actionProperties: {\n        label: lockedString(UIStringsNotTranslate.manage),\n        onClick: () => {\n          void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n        },\n      },\n      closable: true,\n    });\n  }\n\n  async #onAidaAvailabilityChange(): Promise<void> {\n    const currentAidaAvailability = await Host.AidaClient.AidaClient.checkAccessPreconditions();\n    if (currentAidaAvailability !== this.#aidaAvailability) {\n      this.#aidaAvailability = currentAidaAvailability;\n      this.requestUpdate();\n    }\n  }\n\n  onAction = async(event: Event): Promise<void> => {\n    event.preventDefault();\n    const result = await FreDialog.show({\n      header: {iconName: 'smart-assistant', text: lockedString(UIStringsNotTranslate.freDisclaimerHeader)},\n      reminderItems: [\n        {\n          iconName: 'psychiatry',\n          content: lockedString(UIStringsNotTranslate.freDisclaimerTextAiWontAlwaysGetItRight),\n        },\n        {\n          iconName: 'google',\n          content: this.#noLogging ? lockedString(UIStringsNotTranslate.freDisclaimerTextPrivacyNoLogging) :\n                                     lockedString(UIStringsNotTranslate.freDisclaimerTextPrivacy),\n        },\n        {\n          iconName: 'warning',\n          // clang-format off\n          content: html`<x-link\n            href=${CODE_SNIPPET_WARNING_URL}\n            class=\"link devtools-link\"\n            jslog=${VisualLogging.link('code-snippets-explainer.ai-code-completion-teaser').track({\n              click: true\n            })}\n          >${lockedString(UIStringsNotTranslate.freDisclaimerTextUseWithCaution)}</x-link>`,\n          // clang-format on\n        }\n      ],\n      onLearnMoreClick: () => {\n        void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n      },\n      ariaLabel: lockedString(UIStringsNotTranslate.freDisclaimerHeader),\n      learnMoreButtonAriaLabel: lockedString(UIStringsNotTranslate.learnMore),\n    });\n\n    if (result) {\n      this.#aiCodeCompletionFreCompletedSetting.set(true);\n      this.detach();\n    } else {\n      this.requestUpdate();\n    }\n  };\n\n  onDismiss = (event: Event): void => {\n    event.preventDefault();\n    this.#aiCodeCompletionTeaserDismissedSetting.set(true);\n    this.#showReminderSnackbar();\n    this.detach();\n  };\n\n  override performUpdate(): void {\n    const output = {};\n    this.#view(\n        {\n          aidaAvailability: this.#aidaAvailability,\n          onAction: this.onAction,\n          onDismiss: this.onDismiss,\n        },\n        output, this.contentElement);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    Host.AidaClient.HostConfigTracker.instance().addEventListener(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.#boundOnAidaAvailabilityChange);\n    void this.#onAidaAvailabilityChange();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    Host.AidaClient.HostConfigTracker.instance().removeEventListener(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.#boundOnAidaAvailabilityChange);\n  }\n\n  override onDetach(): void {\n    this.#onDetach();\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n    .ai-code-completion-teaser-screen-reader-only {\n        position: absolute;\n        overflow: hidden;\n        clip: rect(0 0 0 0);\n        height: var(--sys-size-1);\n        width: var(--sys-size-1);\n        margin: -1 * var(--sys-size-1);;\n        padding: 0;\n        border: 0;\n    }\n\n    .ai-code-completion-teaser {\n        padding-left: var(--sys-size-3);\n        line-height: normal;\n        pointer-events: all;\n        align-items: center;\n        font-style: italic;\n\n        .ai-code-completion-teaser-dismiss {\n            text-decoration: underline;\n            cursor: pointer;\n        }\n\n        .ai-code-completion-teaser-action {\n            display: inline-flex;\n            gap: var(--sys-size-2);\n\n            span {\n                border: var(--sys-size-1) solid var(--sys-color-neutral-outline);\n                border-radius: var(--sys-shape-corner-extra-small);\n                padding: 0 var(--sys-size-3);\n            }\n        }\n    }\n}\n\n/*# sourceURL=${import.meta.resolve('./aiCodeCompletionTeaser.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\n\nimport styles from './freDialog.css.js';\n\nconst {html, Directives: {ifDefined}} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Header text for the feature reminder dialog.\n   */\n  thingsToConsider: 'Things to consider',\n  /**\n   * @description Text for the learn more button in the feature reminder dialog.\n   */\n  learnMore: 'Learn more',\n  /**\n   * @description Text for the cancel button in the feature reminder dialog.\n   */\n  cancel: 'Cancel',\n  /**\n   * @description Text for the got it button in the feature reminder dialog.\n   */\n  gotIt: 'Got it',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/common/FreDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class FreDialog {\n  static show({header, reminderItems, onLearnMoreClick, ariaLabel, learnMoreButtonTitle, learnMoreButtonAriaLabel}: {\n    header: {\n      iconName: string,\n      text: Platform.UIString.LocalizedString,\n    },\n    reminderItems: Array<{\n      iconName: string,\n      content: Platform.UIString.LocalizedString|Lit.LitTemplate,\n    }>,\n    onLearnMoreClick: () => void,\n    ariaLabel?: string,\n    learnMoreButtonTitle?: string,\n    learnMoreButtonAriaLabel?: string,\n  }): Promise<boolean> {\n    const dialog = new UI.Dialog.Dialog();\n    if (ariaLabel) {\n      dialog.setAriaLabel(ariaLabel);\n    }\n    const result = Promise.withResolvers<boolean>();\n    // clang-format off\n    Lit.render(html`\n      <div class=\"fre-disclaimer\">\n        <style>\n          ${styles}\n        </style>\n        <header>\n          <div class=\"header-icon-container\">\n            <devtools-icon name=${header.iconName}></devtools-icon>\n          </div>\n          <h2 tabindex=\"-1\">\n            ${header.text}\n          </h2>\n        </header>\n        <main class=\"reminder-container\">\n          <h3>${i18nString(UIStrings.thingsToConsider)}</h3>\n          ${reminderItems.map(reminderItem => html`\n            <div class=\"reminder-item\">\n              <devtools-icon class=\"reminder-icon\" name=${reminderItem.iconName}></devtools-icon>\n              <span>${reminderItem.content}</span>\n            </div>\n          `)}\n        </main>\n        <footer>\n          <devtools-button\n            @click=${onLearnMoreClick}\n            .jslogContext=${'fre-disclaimer.learn-more'}\n            .variant=${Buttons.Button.Variant.OUTLINED}\n            aria-label=${ifDefined(learnMoreButtonAriaLabel)}>\n            ${learnMoreButtonTitle ?? i18nString(UIStrings.learnMore)}\n          </devtools-button>\n          <div class=\"right-buttons\">\n            <devtools-button\n              @click=${() => {\n                // The order of operations are important here as hiding the dialog by\n                // itself causes the promise to be resolved with `false` in `onHideCallback`.\n                result.resolve(false);\n                dialog.hide();\n              }}\n              .jslogContext=${'fre-disclaimer.cancel'}\n              .variant=${Buttons.Button.Variant.TONAL}>\n              ${i18nString(UIStrings.cancel)}\n            </devtools-button>\n            <devtools-button\n              @click=${() => {\n                // The order of operations are important here as hiding the dialog by\n                // itself causes the promise to be resolved with `false` in `onHideCallback`.\n                result.resolve(true);\n                dialog.hide();\n              }}\n              .jslogContext=${'fre-disclaimer.continue'}\n              .variant=${Buttons.Button.Variant.PRIMARY}>\n              ${i18nString(UIStrings.gotIt)}\n            </devtools-button>\n          </div>\n        </footer>\n      </div>`, dialog.contentElement);\n    // clang-format on\n\n    dialog.setOutsideClickCallback(ev => {\n      ev.consume(true);  // true = preventDefault()\n      dialog.hide();\n      result.resolve(false);\n    });\n\n    // This ensures that if the dialog gets hidden for any unexpected reason,\n    // or if the user goes to another panel and comes back, that we resolve\n    // rather than leave the promise dangling.\n    dialog.setOnHideCallback(() => {\n      result.resolve(false);\n    });\n\n    dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.MEASURE_CONTENT);\n    dialog.setDimmed(true);\n    dialog.show();\n\n    return result.promise;\n  }\n\n  private constructor() {\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n\n.fre-disclaimer {\n  width: var(--sys-size-33);\n  padding: var(--sys-size-9);\n\n  header {\n    display: flex;\n    gap: var(--sys-size-8);\n    margin-bottom: var(--sys-size-6);\n    align-items: center;\n\n    h2 {\n      margin: 0;\n      color: var(--sys-color-on-surface);\n      font: var(--sys-typescale-headline5);\n    }\n\n    .header-icon-container {\n      background: linear-gradient(\n        135deg,\n        var(--sys-color-gradient-primary),\n        var(--sys-color-gradient-tertiary)\n      );\n      border-radius: var(--sys-size-4);\n      min-height: var(--sys-size-14);\n      min-width: var(--sys-size-14);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      devtools-icon {\n        width: var(--sys-size-9);\n        height: var(--sys-size-9);\n      }\n    }\n  }\n\n  .reminder-container {\n    border-radius: var(--sys-size-6);\n    background-color: var(--sys-color-surface4);\n    padding: var(--sys-size-9);\n\n    h3 {\n      color: var(--sys-color-on-surface);\n      font: var(--sys-typescale-body4-medium);\n      margin: 0;\n    }\n\n    .reminder-item {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      gap: var(--sys-size-5);\n      margin-top: var(--sys-size-6);\n      font: var(--sys-typescale-body5-regular);\n\n      devtools-icon.reminder-icon {\n        width: var(--sys-size-8);\n        height: var(--sys-size-8);\n      }\n\n      .link {\n        color: var(--sys-color-primary);\n        text-decoration-line: underline;\n      }\n    }\n  }\n\n  footer {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: var(--sys-size-8);\n    min-width: var(--sys-size-28);\n\n    .right-buttons {\n      display: flex;\n      gap: var(--sys-size-5);\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./freDialog.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/spinners/spinners.js';\nimport '../../ui/components/tooltips/tooltips.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives, html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport styles from './aiCodeCompletionDisclaimer.css.js';\n\nconst UIStringsNotTranslate = {\n  /**\n   * @description Disclaimer text for AI code completion\n   */\n  relevantData: 'Relevant data',\n  /**\n   * @description Disclaimer text for AI code completion\n   */\n  isSentToGoogle: 'is sent to Google',\n  /**\n   * @description Text for tooltip shown on hovering over \"Relevant Data\" in the disclaimer text for AI code completion.\n   */\n  tooltipDisclaimerTextForAiCodeCompletion:\n      'To generate code suggestions, your console input and the history of your current console session are shared with Google. This data may be seen by human reviewers to improve this feature.',\n  /**\n   * @description Text for tooltip shown on hovering over \"Relevant Data\" in the disclaimer text for AI code completion.\n   */\n  tooltipDisclaimerTextForAiCodeCompletionNoLogging:\n      'To generate code suggestions, your console input and the history of your current console session are shared with Google. This data will not be used to improve Google’s AI models.',\n  /**\n   * @description Text for tooltip button which redirects to AI settings\n   */\n  manageInSettings: 'Manage in settings',\n  /**\n   *@description Text announced when request is sent to AIDA and the spinner is loading\n   */\n  dataIsBeingSentToGoogle: 'Data is being sent to Google',\n} as const;\n\nconst lockedString = i18n.i18n.lockedString;\n\nexport interface ViewInput {\n  disclaimerTooltipId?: string;\n  panelName?: string;\n  noLogging: boolean;\n  onManageInSettingsTooltipClick: () => void;\n}\n\nexport interface ViewOutput {\n  hideTooltip?: () => void;\n  setLoading?: (isLoading: boolean) => void;\n}\n\nexport type View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nexport const DEFAULT_SUMMARY_TOOLBAR_VIEW: View = (input, output, target) => {\n  if (!input.disclaimerTooltipId || !input.panelName) {\n    render(nothing, target);\n    return;\n  }\n  // clang-format off\n  render(\n    html`\n        <style>${styles}</style>\n        <div class=\"ai-code-completion-disclaimer\"><devtools-spinner\n          .active=${false}\n          ${Directives.ref(el => {\n            if (el instanceof HTMLElement) {\n              output.setLoading = (isLoading: boolean) => {\n                el.toggleAttribute('active', isLoading);\n              };\n            }\n          })}></devtools-spinner>\n          <span\n              tabIndex=\"0\"\n              class=\"link\"\n              role=\"link\"\n              jslog=${VisualLogging.link('open-ai-settings').track({\n                click: true,\n              })}\n              aria-details=${input.disclaimerTooltipId}\n              aria-describedby=${input.disclaimerTooltipId}\n              @click=${() => {\n                void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n              }}\n          >${lockedString(UIStringsNotTranslate.relevantData)}</span>${lockedString(UIStringsNotTranslate.isSentToGoogle)}\n          <devtools-tooltip\n              id=${input.disclaimerTooltipId}\n              variant=${'rich'}\n              jslogContext=${input.panelName + '.ai-code-completion-disclaimer'}\n              ${Directives.ref(el => {\n                if (el instanceof HTMLElement) {\n                  output.hideTooltip = () => {\n                    el.hidePopover();\n                  };\n                }\n              })}>\n            <div class=\"disclaimer-tooltip-container\"><div class=\"tooltip-text\">\n                ${input.noLogging ? lockedString(UIStringsNotTranslate.tooltipDisclaimerTextForAiCodeCompletionNoLogging) : lockedString(UIStringsNotTranslate.tooltipDisclaimerTextForAiCodeCompletion)}\n                </div>\n                <span\n                    class=\"link\"\n                    role=\"link\"\n                    jslog=${VisualLogging.link('open-ai-settings').track({\n                      click: true,\n                    })}\n                    @click=${input.onManageInSettingsTooltipClick}\n                >${lockedString(UIStringsNotTranslate.manageInSettings)}</span></div></devtools-tooltip>\n          </div class=\"ai-code-completion-disclaimer\">\n        `, target);\n  // clang-format on\n};\n\nconst MINIMUM_LOADING_STATE_TIMEOUT = 1000;\n\nexport class AiCodeCompletionDisclaimer extends UI.Widget.Widget {\n  readonly #view: View;\n  #viewOutput: ViewOutput = {};\n\n  #disclaimerTooltipId?: string;\n  #panelName?: string;\n  #noLogging: boolean;  // Whether the enterprise setting is `ALLOW_WITHOUT_LOGGING` or not.\n  #loading = false;\n  #loadingStartTime = 0;\n  #spinnerLoadingTimeout: number|undefined;\n\n  constructor(element?: HTMLElement, view: View = DEFAULT_SUMMARY_TOOLBAR_VIEW) {\n    super(element);\n    this.#noLogging = Root.Runtime.hostConfig.aidaAvailability?.enterprisePolicyValue ===\n        Root.Runtime.GenAiEnterprisePolicyValue.ALLOW_WITHOUT_LOGGING;\n    this.#view = view;\n  }\n\n  set disclaimerTooltipId(disclaimerTooltipId: string) {\n    this.#disclaimerTooltipId = disclaimerTooltipId;\n    this.requestUpdate();\n  }\n\n  set panelName(panelName: string) {\n    this.#panelName = panelName;\n    this.requestUpdate();\n  }\n\n  set loading(loading: boolean) {\n    if (!loading && !this.#loading) {\n      return;\n    }\n\n    if (loading) {\n      if (!this.#loading) {\n        this.#viewOutput.setLoading?.(true);\n        UI.ARIAUtils.LiveAnnouncer.status(lockedString(UIStringsNotTranslate.dataIsBeingSentToGoogle));\n      }\n      if (this.#spinnerLoadingTimeout) {\n        clearTimeout(this.#spinnerLoadingTimeout);\n        this.#spinnerLoadingTimeout = undefined;\n      }\n      this.#loadingStartTime = performance.now();\n      this.#loading = true;\n    } else {\n      this.#loading = false;\n      const duration = performance.now() - this.#loadingStartTime;\n      const remainingTime = Math.max(MINIMUM_LOADING_STATE_TIMEOUT - duration, 0);\n      this.#spinnerLoadingTimeout = window.setTimeout(() => {\n        this.#viewOutput.setLoading?.(false);\n        this.#spinnerLoadingTimeout = undefined;\n      }, remainingTime);\n    }\n  }\n\n  #onManageInSettingsTooltipClick(): void {\n    this.#viewOutput.hideTooltip?.();\n    void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n  }\n\n  override performUpdate(): void {\n    this.#view(\n        {\n          disclaimerTooltipId: this.#disclaimerTooltipId,\n          panelName: this.#panelName,\n          noLogging: this.#noLogging,\n          onManageInSettingsTooltipClick: this.#onManageInSettingsTooltipClick.bind(this),\n        },\n        this.#viewOutput, this.contentElement);\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n    .ai-code-completion-disclaimer {\n        gap: 5px;\n        display: flex;\n        white-space: nowrap;\n        overflow: hidden;\n        flex-shrink: 0;\n\n        span.link {\n            color: var(--sys-color-on-surface-subtle);\n\n            &:focus-visible {\n            outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n            outline-offset: 0;\n            border-radius: var(--sys-shape-corner-extra-small);\n            }\n        }\n\n        devtools-spinner {\n            margin-top: var(--sys-size-2);\n            padding: var(--sys-size-1);\n            height: var(--sys-size-6);\n            width: var(--sys-size-6);\n        }\n\n        devtools-tooltip:popover-open {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n\n            .disclaimer-tooltip-container {\n                padding: var(--sys-size-4) 0;\n                max-width: var(--sys-size-30);\n                white-space: normal;\n\n                .tooltip-text {\n                    color: var(--sys-color-on-surface-subtle);\n                    padding: 0 var(--sys-size-5);\n                    align-items: flex-start;\n                    gap: 10px;\n                }\n\n                .link {\n                    margin: var(--sys-size-5) var(--sys-size-8) 0 var(--sys-size-5);\n                    display: inline-block;\n                }\n            }\n        }\n    }\n}\n\n/*# sourceURL=${import.meta.resolve('./aiCodeCompletionDisclaimer.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/spinners/spinners.js';\nimport '../../ui/components/tooltips/tooltips.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives, html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {AiCodeCompletionDisclaimer} from './AiCodeCompletionDisclaimer.js';\nimport styles from './aiCodeCompletionSummaryToolbar.css.js';\n\nconst UIStringsNotTranslate = {\n  /**\n   * @description Text for recitation notice\n   */\n  generatedCodeMayBeSubjectToALicense: 'Generated code may be subject to a license.',\n  /**\n   * @description Text for citations\n   */\n  viewSources: 'View Sources',\n} as const;\n\nconst lockedString = i18n.i18n.lockedString;\n\nexport interface AiCodeCompletionSummaryToolbarProps {\n  citationsTooltipId: string;\n  panelName: string;\n  disclaimerTooltipId?: string;\n}\n\nexport interface ViewInput {\n  disclaimerTooltipId?: string;\n  panelName: string;\n  citations?: string[];\n  citationsTooltipId: string;\n  loading: boolean;\n}\n\nexport type View = (input: ViewInput, output: undefined, target: HTMLElement) => void;\n\nexport const DEFAULT_SUMMARY_TOOLBAR_VIEW: View = (input, _output, target) => {\n  const toolbarClasses = Directives.classMap({\n    'ai-code-completion-summary-toolbar': true,\n    'has-disclaimer': Boolean(input.disclaimerTooltipId),\n    'has-recitation-notice': Boolean(input.citations && input.citations.length > 0),\n  });\n\n  // clang-format off\n  const disclaimer = input.disclaimerTooltipId ?\n    html`<devtools-widget\n            .widgetConfig=${UI.Widget.widgetConfig(AiCodeCompletionDisclaimer, {\n      disclaimerTooltipId: input.disclaimerTooltipId,\n      panelName: input.panelName,\n      loading: input.loading,\n    })} class=\"disclaimer-widget\"></devtools-widget>` : nothing;\n\n  const recitationNotice = input.citations && input.citations.length > 0 ?\n    html`<div class=\"ai-code-completion-recitation-notice\">${lockedString(UIStringsNotTranslate.generatedCodeMayBeSubjectToALicense)}\n                <span class=\"link\"\n                    role=\"link\"\n                    aria-details=${input.citationsTooltipId}\n                    aria-describedby=${input.citationsTooltipId}\n                    tabIndex=\"0\">\n                  ${lockedString(UIStringsNotTranslate.viewSources)}&nbsp;${lockedString('(' + input.citations.length + ')')}</span>\n                <devtools-tooltip\n                    id=${input.citationsTooltipId}\n                    variant=${'rich'}\n                    jslogContext=${input.panelName + '.ai-code-completion-citations'}\n                ><div class=\"citations-tooltip-container\">\n                    ${Directives.repeat(input.citations, citation => html`<x-link\n                        tabIndex=\"0\"\n                        href=${citation}\n                        jslog=${VisualLogging.link(input.panelName + '.ai-code-completion-citations.citation-link').track({\n      click: true\n    })}>${citation}</x-link>`)}</div></devtools-tooltip>\n            </div>` : nothing;\n\n  render(\n    html`\n        <style>${styles}</style>\n        <div class=${toolbarClasses}>\n          ${disclaimer}\n          ${recitationNotice}\n        </div>\n        `, target);\n  // clang-format on\n};\n\nexport class AiCodeCompletionSummaryToolbar extends UI.Widget.Widget {\n  readonly #view: View;\n\n  #disclaimerTooltipId?: string;\n  #citationsTooltipId: string;\n  #panelName: string;\n  #citations: string[] = [];\n  #loading = false;\n\n  constructor(props: AiCodeCompletionSummaryToolbarProps, view?: View) {\n    super();\n    this.#disclaimerTooltipId = props.disclaimerTooltipId;\n    this.#citationsTooltipId = props.citationsTooltipId;\n    this.#panelName = props.panelName;\n    this.#view = view ?? DEFAULT_SUMMARY_TOOLBAR_VIEW;\n    this.requestUpdate();\n  }\n\n  setLoading(loading: boolean): void {\n    this.#loading = loading;\n    this.requestUpdate();\n  }\n\n  updateCitations(citations: string[]): void {\n    citations.forEach(citation => {\n      if (!this.#citations.includes(citation)) {\n        this.#citations.push(citation);\n      }\n    });\n    this.requestUpdate();\n  }\n\n  clearCitations(): void {\n    this.#citations = [];\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    this.#view(\n        {\n          disclaimerTooltipId: this.#disclaimerTooltipId,\n          citations: this.#citations,\n          citationsTooltipId: this.#citationsTooltipId,\n          panelName: this.#panelName,\n          loading: this.#loading,\n        },\n        undefined, this.contentElement);\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n  .ai-code-completion-summary-toolbar {\n    display: flex;\n    height: 26px;\n    border-top: var(--sys-size-1) solid var(--sys-color-divider);\n    background-color: var(--sys-color-cdt-base-container);\n    padding: var(--sys-size-2) var(--sys-size-5);\n    align-items: center;\n    gap: var(--sys-size-5);\n    flex-shrink: 0;\n    color: var(--sys-color-on-surface-subtle);\n\n    devtools-widget.disclaimer-widget {\n      flex: none;\n    }\n\n    span.link {\n      color: var(--sys-color-on-surface-subtle);\n\n      &:focus-visible {\n        outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n        outline-offset: 0;\n        border-radius: var(--sys-shape-corner-extra-small);\n      }\n    }\n\n    .ai-code-completion-recitation-notice {\n      padding-left: var(--sys-size-5);\n      border-left: var(--sys-size-1) solid var(--sys-color-divider);\n      white-space: nowrap;\n      overflow: hidden;\n\n      span.link {\n        padding-left: var(--sys-size-3);\n      }\n    }\n\n    @media (width < 545px) {\n      &.has-disclaimer.has-recitation-notice {\n        height: 46px;\n        flex-direction: column;\n        align-items: flex-start;\n\n        .ai-code-completion-disclaimer {\n          height: 26px;\n          margin-bottom: -3px;\n          margin-top: var(--sys-size-2);\n          flex-shrink: 1;\n        }\n\n        .ai-code-completion-recitation-notice {\n          height: 26px;\n          padding-left: 0;\n          border-left: 0;\n          margin-top: -3px;\n        }\n      }\n    }\n\n    devtools-tooltip:popover-open {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        .citations-tooltip-container {\n            display: inline-flex;\n            padding: var(--sys-size-4) var(--sys-size-5);\n            flex-direction: column;\n            align-items: flex-start;\n            justify-content: center;\n            gap: var(--sys-size-2);\n            white-space: normal;\n\n            x-link {\n                color: var(--sys-color-primary);\n                text-decoration: underline;\n\n              &:focus-visible {\n                outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n                outline-offset: 0;\n                border-radius: var(--sys-shape-corner-extra-small);\n              }\n          }\n      }\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./aiCodeCompletionSummaryToolbar.css')} */`;"],
  "mappings": "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",
  "names": ["Host", "i18n", "Buttons", "UI", "i18n", "UI", "html", "render", "render", "html", "i18n", "Root", "UI", "html", "nothing", "render", "VisualLogging", "UIStringsNotTranslate", "lockedString", "render", "nothing", "html", "i18n", "UI", "Directives", "html", "nothing", "render", "VisualLogging", "UIStringsNotTranslate", "lockedString", "DEFAULT_SUMMARY_TOOLBAR_VIEW", "Directives", "html", "nothing", "render", "UIStrings", "str_", "i18nString"]
}
