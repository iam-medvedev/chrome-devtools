{
  "version": 3,
  "sources": ["common.prebundle.ts", "common.css.js", "../../../../../../front_end/panels/common/AiCodeCompletionTeaser.ts", "aiCodeCompletionTeaser.css.js", "../../../../../../front_end/panels/common/FreDialog.ts", "freDialog.css.js", "../../../../../../front_end/panels/common/GdpSignUpDialog.ts", "gdpSignUpDialog.css.js", "../../../../../../front_end/panels/common/AiCodeCompletionDisclaimer.ts", "aiCodeCompletionDisclaimer.css.js", "../../../../../../front_end/panels/common/AiCodeCompletionSummaryToolbar.ts", "aiCodeCompletionSummaryToolbar.css.js", "../../../../../../front_end/panels/common/BadgeNotification.ts", "badgeNotification.css.js"],
  "sourcesContent": ["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Geometry from '../../models/geometry/geometry.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport commonStyles from './common.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text for the cancel button in the dialog.\n   */\n  cancel: 'Cancel',\n  /**\n   * @description Text for the allow button in the \"type to allow\" dialog.\n   */\n  allow: 'Allow',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/common/common.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class TypeToAllowDialog {\n  static async show(options: {\n    jslogContext: {\n      dialog: string,\n      input: string,\n    },\n    header: Platform.UIString.LocalizedString,\n    message: Platform.UIString.LocalizedString,\n    typePhrase: Platform.UIString.LocalizedString,\n    inputPlaceholder: Platform.UIString.LocalizedString,\n  }): Promise<boolean> {\n    const dialog = new UI.Dialog.Dialog(options.jslogContext.dialog);\n    dialog.setMaxContentSize(new Geometry.Size(504, 340));\n    dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.SET_EXACT_WIDTH_MAX_HEIGHT);\n    dialog.setDimmed(true);\n    const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(dialog.contentElement, {cssFile: commonStyles});\n    const content = shadowRoot.createChild('div', 'type-to-allow-dialog');\n\n    const result = await new Promise<boolean>(resolve => {\n      const header = content.createChild('div', 'header');\n      header.createChild('div', 'title').textContent = options.header;\n\n      const closeButton = header.createChild('dt-close-button', 'dialog-close-button');\n      closeButton.setTabbable(true);\n      self.onInvokeElement(closeButton, event => {\n        dialog.hide();\n        event.consume(true);\n        resolve(false);\n      });\n      closeButton.setSize(Buttons.Button.Size.SMALL);\n\n      content.createChild('div', 'message').textContent = options.message;\n\n      const input = UI.UIUtils.createInput('text-input', 'text', options.jslogContext.input);\n      input.placeholder = options.inputPlaceholder;\n      content.appendChild(input);\n\n      const buttonsBar = content.createChild('div', 'button');\n      const cancelButton =\n          UI.UIUtils.createTextButton(i18nString(UIStrings.cancel), () => resolve(false), {jslogContext: 'cancel'});\n\n      const allowButton = UI.UIUtils.createTextButton(i18nString(UIStrings.allow), () => {\n        resolve(input.value === options.typePhrase);\n      }, {jslogContext: 'confirm', variant: Buttons.Button.Variant.PRIMARY});\n      allowButton.disabled = true;\n\n      buttonsBar.appendChild(allowButton);\n      buttonsBar.appendChild(cancelButton);\n\n      input.addEventListener('input', () => {\n        allowButton.disabled = !Boolean(input.value);\n      }, false);\n      input.addEventListener('paste', e => e.preventDefault());\n      input.addEventListener('drop', e => e.preventDefault());\n\n      dialog.setOutsideClickCallback(event => {\n        event.consume();\n        resolve(false);\n      });\n      dialog.show();\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelfXssWarningDialogShown);\n    });\n    dialog.hide();\n    return result;\n  }\n}\n\nexport {AiCodeCompletionTeaser} from './AiCodeCompletionTeaser.js';\nexport {FreDialog} from './FreDialog.js';\nexport {GdpSignUpDialog} from './GdpSignUpDialog.js';\nexport {AiCodeCompletionDisclaimer} from './AiCodeCompletionDisclaimer.js';\nexport {AiCodeCompletionSummaryToolbar} from './AiCodeCompletionSummaryToolbar.js';\nexport * from './BadgeNotification.js';\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.type-to-allow-dialog {\n  width: 100%;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    font: var(--sys-typescale-body2-medium);\n    margin: var(--sys-size-5) var(--sys-size-5) var(--sys-size-5) var(--sys-size-8);\n  }\n\n  .title {\n    padding-top: var(--sys-size-3);\n  }\n\n  .dialog-close-button {\n    margin: var(--sys-size-3);\n    z-index: 1;\n  }\n\n  .message,\n  .text-input {\n    margin: 0 var(--sys-size-8);\n  }\n\n  .text-input {\n    margin-top: var(--sys-size-5);\n  }\n\n  .button {\n    text-align: right;\n    margin: var(--sys-size-6) var(--sys-size-8) var(--sys-size-8) var(--sys-size-8);\n    gap: var(--sys-size-5);\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: flex-start;\n  }\n\n  .button button {\n    min-width: var(--sys-size-19);\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./common.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Snackbars from '../../ui/components/snackbars/snackbars.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport styles from './aiCodeCompletionTeaser.css.js';\nimport {FreDialog} from './FreDialog.js';\n\nconst UIStringsNotTranslate = {\n  /**\n   * @description Text for `ctrl` key.\n   */\n  ctrl: 'ctrl',\n  /**\n   * @description Text for `cmd` key.\n   */\n  cmd: 'cmd',\n  /**\n   * @description Text for `i` key.\n   */\n  i: 'i',\n  /**\n   * @description Text for `x` key.\n   */\n  x: 'x',\n  /**\n   * @description Text for dismissing teaser.\n   */\n  dontShowAgain: 'Don\\'t show again',\n  /**\n   * @description Text for teaser to turn on code suggestions.\n   */\n  toTurnOnCodeSuggestions: 'to turn on code suggestions.',\n  /**\n   * @description Text for snackbar notification on dismissing the teaser.\n   */\n  turnOnCodeSuggestionsAtAnyTimeInSettings: 'Turn on code suggestions at any time in Settings',\n  /**\n   * @description Text for snackbar action button to manage settings.\n   */\n  manage: 'Manage',\n  /**\n   * @description The footer disclaimer that links to more information\n   * about the AI feature.\n   */\n  learnMore: 'Learn more about AI code completion',\n  /**\n   * @description Header text for the AI-powered suggestions disclaimer dialog.\n   */\n  freDisclaimerHeader: 'Code faster with AI-powered suggestions',\n  /**\n   * @description First disclaimer item text for the fre dialog.\n   */\n  freDisclaimerTextAiWontAlwaysGetItRight: 'This feature uses AI and won’t always get it right',\n  /**\n   * @description Second disclaimer item text for the fre dialog.\n   */\n  freDisclaimerTextPrivacy:\n      'To generate code suggestions, your console input, the history of your current console session, the currently inspected CSS, and the contents of the currently open file are shared with Google. This data may be seen by human reviewers to improve this feature.',\n  /**\n   * @description Second disclaimer item text for the fre dialog when enterprise logging is off.\n   */\n  freDisclaimerTextPrivacyNoLogging:\n      'To generate code suggestions, your console input, the history of your current console session, the currently inspected CSS, and the contents of the currently open file are shared with Google. This data will not be used to improve Google’s AI models. Your organization may change these settings at any time.',\n  /**\n   * @description Third disclaimer item text for the fre dialog.\n   */\n  freDisclaimerTextUseWithCaution: 'Use generated code snippets with caution',\n  /**\n   *@description Text for ARIA label for the teaser.\n   */\n  press: 'Press',\n  /**\n   *@description Text for ARIA label for the teaser.\n   */\n  toDisableCodeSuggestions: 'to disable code suggestions.',\n} as const;\n\nconst lockedString = i18n.i18n.lockedString;\nconst CODE_SNIPPET_WARNING_URL = 'https://support.google.com/legal/answer/13505487';\nconst PROMOTION_ID = 'ai-code-completion';\n\nexport interface ViewInput {\n  aidaAvailability?: Host.AidaClient.AidaAccessPreconditions;\n  onAction: (event: Event) => void;\n  onDismiss: (event: Event) => void;\n}\n\nexport type View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  if (input.aidaAvailability !== Host.AidaClient.AidaAccessPreconditions.AVAILABLE) {\n    render(nothing, target);\n    return;\n  }\n  const cmdOrCtrl =\n      Host.Platform.isMac() ? lockedString(UIStringsNotTranslate.cmd) : lockedString(UIStringsNotTranslate.ctrl);\n  const teaserAriaLabel = lockedString(UIStringsNotTranslate.press) + ' ' + cmdOrCtrl + ' ' +\n      lockedString(UIStringsNotTranslate.i) + ' ' + lockedString(UIStringsNotTranslate.toTurnOnCodeSuggestions) + ' ' +\n      lockedString(UIStringsNotTranslate.press) + ' ' + cmdOrCtrl + ' ' + lockedString(UIStringsNotTranslate.x) + ' ' +\n      lockedString(UIStringsNotTranslate.toDisableCodeSuggestions);\n  const newBadge = UI.UIUtils.maybeCreateNewBadge(PROMOTION_ID);\n  const newBadgeTemplate = newBadge ? html`&nbsp;${newBadge}` : nothing;\n  // clang-format off\n  render(\n        html`\n          <style>${styles}</style>\n          <style>@scope to (devtools-widget > *) { ${UI.inspectorCommonStyles} }</style>\n          <div class=\"ai-code-completion-teaser-screen-reader-only\">${teaserAriaLabel}</div>\n          <div class=\"ai-code-completion-teaser\" aria-hidden=\"true\">\n            <span class=\"ai-code-completion-teaser-action\">\n              <span>${cmdOrCtrl}</span>\n              <span>${lockedString(UIStringsNotTranslate.i)}</span>\n            </span>\n            </span>&nbsp;${lockedString(UIStringsNotTranslate.toTurnOnCodeSuggestions)}&nbsp;\n            <span role=\"button\" class=\"ai-code-completion-teaser-dismiss\" @click=${input.onDismiss}\n              jslog=${VisualLogging.action('ai-code-completion-teaser.dismiss').track({click: true})}>\n                ${lockedString(UIStringsNotTranslate.dontShowAgain)}\n            </span>\n            ${newBadgeTemplate}\n          </div>\n        `, target\n      );\n  // clang-format on\n};\n\ninterface AiCodeCompletionTeaserConfig {\n  onDetach: () => void;\n}\n\nexport class AiCodeCompletionTeaser extends UI.Widget.Widget {\n  readonly #view: View;\n\n  #aidaAvailability?: Host.AidaClient.AidaAccessPreconditions;\n  #boundOnAidaAvailabilityChange: () => Promise<void>;\n  #boundOnAiCodeCompletionSettingChanged: () => void;\n  #onDetach: () => void;\n\n  // Whether the user completed first run experience dialog or not.\n  #aiCodeCompletionFreCompletedSetting =\n      Common.Settings.Settings.instance().createSetting('ai-code-completion-enabled', false);\n  // Whether the user dismissed the teaser or not.\n  #aiCodeCompletionTeaserDismissedSetting =\n      Common.Settings.Settings.instance().createSetting('ai-code-completion-teaser-dismissed', false);\n\n  #noLogging: boolean;  // Whether the enterprise setting is `ALLOW_WITHOUT_LOGGING` or not.\n\n  constructor(config: AiCodeCompletionTeaserConfig, view?: View) {\n    super();\n    this.markAsExternallyManaged();\n    this.#onDetach = config.onDetach;\n    this.#view = view ?? DEFAULT_VIEW;\n    this.#boundOnAidaAvailabilityChange = this.#onAidaAvailabilityChange.bind(this);\n    this.#boundOnAiCodeCompletionSettingChanged = this.#onAiCodeCompletionSettingChanged.bind(this);\n    this.#noLogging = Root.Runtime.hostConfig.aidaAvailability?.enterprisePolicyValue ===\n        Root.Runtime.GenAiEnterprisePolicyValue.ALLOW_WITHOUT_LOGGING;\n    this.requestUpdate();\n  }\n\n  #showReminderSnackbar(): void {\n    Snackbars.Snackbar.Snackbar.show({\n      message: lockedString(UIStringsNotTranslate.turnOnCodeSuggestionsAtAnyTimeInSettings),\n      actionProperties: {\n        label: lockedString(UIStringsNotTranslate.manage),\n        onClick: () => {\n          void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n        },\n      },\n      closable: true,\n    });\n  }\n\n  async #onAidaAvailabilityChange(): Promise<void> {\n    const currentAidaAvailability = await Host.AidaClient.AidaClient.checkAccessPreconditions();\n    if (currentAidaAvailability !== this.#aidaAvailability) {\n      this.#aidaAvailability = currentAidaAvailability;\n      this.requestUpdate();\n    }\n  }\n\n  #onAiCodeCompletionSettingChanged(): void {\n    if (this.#aiCodeCompletionFreCompletedSetting.get() || this.#aiCodeCompletionTeaserDismissedSetting.get()) {\n      this.detach();\n    }\n  }\n\n  onAction = async(event: Event): Promise<void> => {\n    event.preventDefault();\n    const result = await FreDialog.show({\n      header: {iconName: 'smart-assistant', text: lockedString(UIStringsNotTranslate.freDisclaimerHeader)},\n      reminderItems: [\n        {\n          iconName: 'psychiatry',\n          content: lockedString(UIStringsNotTranslate.freDisclaimerTextAiWontAlwaysGetItRight),\n        },\n        {\n          iconName: 'google',\n          content: this.#noLogging ? lockedString(UIStringsNotTranslate.freDisclaimerTextPrivacyNoLogging) :\n                                     lockedString(UIStringsNotTranslate.freDisclaimerTextPrivacy),\n        },\n        {\n          iconName: 'warning',\n          // clang-format off\n          content: html`<x-link\n            href=${CODE_SNIPPET_WARNING_URL}\n            class=\"link devtools-link\"\n            jslog=${VisualLogging.link('code-snippets-explainer.ai-code-completion-teaser').track({\n              click: true\n            })}\n          >${lockedString(UIStringsNotTranslate.freDisclaimerTextUseWithCaution)}</x-link>`,\n          // clang-format on\n        }\n      ],\n      onLearnMoreClick: () => {\n        void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n      },\n      ariaLabel: lockedString(UIStringsNotTranslate.freDisclaimerHeader),\n      learnMoreButtonAriaLabel: lockedString(UIStringsNotTranslate.learnMore),\n    });\n\n    if (result) {\n      this.#aiCodeCompletionFreCompletedSetting.set(true);\n      this.detach();\n    } else {\n      this.requestUpdate();\n    }\n  };\n\n  onDismiss = (event: Event): void => {\n    event.preventDefault();\n    this.#aiCodeCompletionTeaserDismissedSetting.set(true);\n    this.#showReminderSnackbar();\n    this.detach();\n  };\n\n  override performUpdate(): void {\n    const output = {};\n    this.#view(\n        {\n          aidaAvailability: this.#aidaAvailability,\n          onAction: this.onAction,\n          onDismiss: this.onDismiss,\n        },\n        output, this.contentElement);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    Host.AidaClient.HostConfigTracker.instance().addEventListener(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.#boundOnAidaAvailabilityChange);\n    this.#aiCodeCompletionFreCompletedSetting.addChangeListener(this.#boundOnAiCodeCompletionSettingChanged);\n    this.#aiCodeCompletionTeaserDismissedSetting.addChangeListener(this.#boundOnAiCodeCompletionSettingChanged);\n    void this.#onAidaAvailabilityChange();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    Host.AidaClient.HostConfigTracker.instance().removeEventListener(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.#boundOnAidaAvailabilityChange);\n    this.#aiCodeCompletionFreCompletedSetting.removeChangeListener(this.#boundOnAiCodeCompletionSettingChanged);\n    this.#aiCodeCompletionTeaserDismissedSetting.removeChangeListener(this.#boundOnAiCodeCompletionSettingChanged);\n  }\n\n  override onDetach(): void {\n    this.#onDetach();\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n    .ai-code-completion-teaser-screen-reader-only {\n        position: absolute;\n        overflow: hidden;\n        clip-path: rect(0 0 0 0);\n        height: var(--sys-size-1);\n        width: var(--sys-size-1);\n        margin: -1 * var(--sys-size-1);;\n        padding: 0;\n        border: 0;\n    }\n\n    .ai-code-completion-teaser {\n        padding-left: var(--sys-size-3);\n        line-height: var(--sys-size-7);\n        pointer-events: all;\n        align-items: center;\n        font-style: italic;\n\n        .ai-code-completion-teaser-dismiss {\n            text-decoration: underline;\n            cursor: pointer;\n        }\n\n        .ai-code-completion-teaser-action {\n            display: inline-flex;\n            gap: var(--sys-size-2);\n\n            span {\n                border: var(--sys-size-1) solid var(--sys-color-neutral-outline);\n                border-radius: var(--sys-shape-corner-extra-small);\n                padding: 0 var(--sys-size-3);\n            }\n        }\n\n        .new-badge {\n            font-style: normal;\n            display: inline-block;\n        }\n    }\n}\n\n/*# sourceURL=${import.meta.resolve('./aiCodeCompletionTeaser.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\n\nimport styles from './freDialog.css.js';\n\nconst {html, Directives: {ifDefined}} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Header text for the feature reminder dialog.\n   */\n  thingsToConsider: 'Things to consider',\n  /**\n   * @description Text for the learn more button in the feature reminder dialog.\n   */\n  learnMore: 'Learn more',\n  /**\n   * @description Text for the cancel button in the feature reminder dialog.\n   */\n  cancel: 'Cancel',\n  /**\n   * @description Text for the got it button in the feature reminder dialog.\n   */\n  gotIt: 'Got it',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/common/FreDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class FreDialog {\n  static show({header, reminderItems, onLearnMoreClick, ariaLabel, learnMoreButtonText, learnMoreButtonAriaLabel}: {\n    header: {\n      iconName: string,\n      text: Platform.UIString.LocalizedString,\n    },\n    reminderItems: Array<{\n      iconName: string,\n      content: Platform.UIString.LocalizedString|Lit.LitTemplate,\n    }>,\n    onLearnMoreClick: () => void,\n    ariaLabel?: string,\n    learnMoreButtonText?: string,\n    learnMoreButtonAriaLabel?: string,\n  }): Promise<boolean> {\n    const dialog = new UI.Dialog.Dialog();\n    if (ariaLabel) {\n      dialog.setAriaLabel(ariaLabel);\n    }\n    const result = Promise.withResolvers<boolean>();\n    // clang-format off\n    Lit.render(html`\n      <div class=\"fre-disclaimer\">\n        <style>\n          ${styles}\n        </style>\n        <header>\n          <div class=\"header-icon-container\">\n            <devtools-icon name=${header.iconName}></devtools-icon>\n          </div>\n          <h2 tabindex=\"-1\">\n            ${header.text}\n          </h2>\n        </header>\n        <main class=\"reminder-container\">\n          <h3>${i18nString(UIStrings.thingsToConsider)}</h3>\n          ${reminderItems.map(reminderItem => html`\n            <div class=\"reminder-item\">\n              <devtools-icon class=\"reminder-icon\" name=${reminderItem.iconName}></devtools-icon>\n              <span>${reminderItem.content}</span>\n            </div>\n          `)}\n        </main>\n        <footer>\n          <devtools-button\n            @click=${onLearnMoreClick}\n            .jslogContext=${'fre-disclaimer.learn-more'}\n            .variant=${Buttons.Button.Variant.OUTLINED}\n            .title=${learnMoreButtonAriaLabel ?? i18nString(UIStrings.learnMore)}\n            aria-label=${ifDefined(learnMoreButtonAriaLabel)}>\n            ${learnMoreButtonText ?? i18nString(UIStrings.learnMore)}\n          </devtools-button>\n          <div class=\"right-buttons\">\n            <devtools-button\n              @click=${() => {\n                // The order of operations are important here as hiding the dialog by\n                // itself causes the promise to be resolved with `false` in `onHideCallback`.\n                result.resolve(false);\n                dialog.hide();\n              }}\n              .jslogContext=${'fre-disclaimer.cancel'}\n              .variant=${Buttons.Button.Variant.TONAL}>\n              ${i18nString(UIStrings.cancel)}\n            </devtools-button>\n            <devtools-button\n              @click=${() => {\n                // The order of operations are important here as hiding the dialog by\n                // itself causes the promise to be resolved with `false` in `onHideCallback`.\n                result.resolve(true);\n                dialog.hide();\n              }}\n              .jslogContext=${'fre-disclaimer.continue'}\n              .variant=${Buttons.Button.Variant.PRIMARY}>\n              ${i18nString(UIStrings.gotIt)}\n            </devtools-button>\n          </div>\n        </footer>\n      </div>`, dialog.contentElement);\n    // clang-format on\n\n    dialog.setOutsideClickCallback(ev => {\n      ev.consume(true);  // true = preventDefault()\n      dialog.hide();\n      result.resolve(false);\n    });\n\n    // This ensures that if the dialog gets hidden for any unexpected reason,\n    // or if the user goes to another panel and comes back, that we resolve\n    // rather than leave the promise dangling.\n    dialog.setOnHideCallback(() => {\n      result.resolve(false);\n    });\n\n    dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.MEASURE_CONTENT);\n    dialog.setDimmed(true);\n    dialog.show();\n\n    return result.promise;\n  }\n\n  private constructor() {\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n\n.fre-disclaimer {\n  width: var(--sys-size-33);\n  padding: var(--sys-size-9);\n\n  header {\n    display: flex;\n    gap: var(--sys-size-8);\n    margin-bottom: var(--sys-size-6);\n    align-items: center;\n\n    h2 {\n      margin: 0;\n      color: var(--sys-color-on-surface);\n      font: var(--sys-typescale-headline5);\n    }\n\n    .header-icon-container {\n      background: linear-gradient(\n        135deg,\n        var(--sys-color-gradient-primary),\n        var(--sys-color-gradient-tertiary)\n      );\n      border-radius: var(--sys-size-4);\n      min-height: var(--sys-size-14);\n      min-width: var(--sys-size-14);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      devtools-icon {\n        width: var(--sys-size-9);\n        height: var(--sys-size-9);\n      }\n    }\n  }\n\n  .reminder-container {\n    border-radius: var(--sys-size-6);\n    background-color: var(--sys-color-surface4);\n    padding: var(--sys-size-9);\n\n    h3 {\n      color: var(--sys-color-on-surface);\n      font: var(--sys-typescale-body4-medium);\n      margin: 0;\n    }\n\n    .reminder-item {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      gap: var(--sys-size-5);\n      margin-top: var(--sys-size-6);\n      font: var(--sys-typescale-body5-regular);\n\n      devtools-icon.reminder-icon {\n        width: var(--sys-size-8);\n        height: var(--sys-size-8);\n      }\n\n      .link {\n        color: var(--sys-color-primary);\n        text-decoration-line: underline;\n      }\n    }\n  }\n\n  footer {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: var(--sys-size-8);\n    min-width: var(--sys-size-28);\n\n    .right-buttons {\n      display: flex;\n      gap: var(--sys-size-5);\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./freDialog.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../ui/components/switch/switch.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Badges from '../../models/badges/badges.js';\nimport * as Geometry from '../../models/geometry/geometry.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as Snackbars from '../../ui/components/snackbars/snackbars.js';\nimport type * as Switch from '../../ui/components/switch/switch.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\n\nimport styles from './gdpSignUpDialog.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Aria label for the Google Developer Program sign up dialog\n   */\n  gdpDialogAriaLabel: 'Google Developer Program sign up dialog',\n  /**\n   *\n   * @description Button text for canceling GDP sign up.\n   */\n  cancel: 'Cancel',\n  /**\n   * @description Button text for confirming GDP sign up.\n   */\n  signUp: 'Sign up',\n  /**\n   * @description Title for the first section of the GDP sign up dialog.\n   */\n  designedForSuccess: 'Designed for your success',\n  /**\n   * @description Body for the first section of the GDP sign up dialog.\n   */\n  designedForSuccessBody: 'Grow your skills, build with AI, and earn badges you can showcase in your developer profile',\n  /**\n   * @description Title for the second section of the GDP sign up dialog.\n   */\n  keepUpdated: 'Keep me updated',\n  /**\n   * @description Body for the second section of the GDP sign up dialog.\n   */\n  keepUpdatedBody: 'The latest DevTools features, event invites, and tailored insights land directly in your inbox',\n  /**\n   * @description Title for the third section of the GDP sign up dialog.\n   */\n  tailorProfile: 'Tailor your profile',\n  /**\n   * @description Body for the third section of the GDP sign up dialog.\n   */\n  tailorProfileBody:\n      'The name on your Google Account and your interests will be used in your Google Developer Profile. Your name may appear where you contribute and can be changed at any time.',\n  /**\n   * @description Body for the third section of the GDP sign up dialog.\n   * @example {Content Policy} PH1\n   * @example {Terms of Service} PH2\n   * @example {Privacy Policy} PH3\n   */\n  tailorProfileBodyDisclaimer:\n      'By creating a Developer Profile, you agree to the {PH1}. Google’s {PH2} and {PH3} apply to your use of this service.',\n  /**\n   * @description Button text for learning more about the Google Developer Program.\n   */\n  learnMore: 'Learn more',\n  /**\n   * @description Accessible text for learning more about the Google Developer Program.\n   */\n  learnMoreAccessibleText: 'Learn more about the Google Developer Program',\n  /**\n   * @description Link text for Content Policy.\n   */\n  contentPolicy: 'Content Policy',\n  /**\n   * @description Link text for Terms of Service.\n   */\n  termsOfService: 'Terms of Service',\n  /**\n   * @description Link text for Privacy Policy.\n   */\n  privacyPolicy: 'Privacy Policy',\n  /**\n   * @description Error message shown in a snackbar when GDP sign up fails.\n   */\n  signUpFailed: 'Your Google Developer Program profile couldn’t be created. Please try again later.'\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/common/GdpSignUpDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst TERMS_OF_SERVICE_URL = 'https://policies.google.com/terms';\nconst PRIVACY_POLICY_URL = 'https://policies.google.com/privacy';\nconst CONTENT_POLICY_URL = 'https://developers.google.com/profile/content-policy';\nconst GDP_PROGRAM_URL = 'https://developers.google.com/program';\n\ninterface ViewInput {\n  onSignUpClick: () => void;\n  onCancelClick: () => void;\n  keepMeUpdated: boolean;\n  onKeepMeUpdatedChange: (value: boolean) => void;\n  isSigningUp: boolean;\n}\n\ntype View = (input: ViewInput, output: undefined, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target): void => {\n  // clang-format off\n  render(\n    html`\n      <style>${styles}</style>\n      <div class=\"gdp-sign-up-dialog-header\" role=\"img\" aria-label=\"Google Developer Program\"></div>\n      <div class=\"main-content\">\n        <div class=\"section\">\n          <div class=\"icon-container\">\n            <devtools-icon name=\"trophy\"></devtools-icon>\n          </div>\n          <div class=\"text-container\">\n            <h2 class=\"section-title\">${i18nString(UIStrings.designedForSuccess)}</h2>\n            <div class=\"section-text\">${i18nString(UIStrings.designedForSuccessBody)}</div>\n          </div>\n        </div>\n        <div class=\"section\">\n          <div class=\"icon-container\">\n            <devtools-icon name=\"mark-email-unread\"></devtools-icon>\n          </div>\n          <div class=\"text-container\">\n            <h2 class=\"section-title\">${i18nString(UIStrings.keepUpdated)}</h2>\n            <div class=\"section-text\">${i18nString(UIStrings.keepUpdatedBody)}</div>\n          </div>\n          <div class=\"switch-container\">\n            <devtools-switch\n            .checked=${input.keepMeUpdated}\n            .jslogContext=${'keep-me-updated'}\n            .label=${i18nString(UIStrings.keepUpdated)}\n            @switchchange=${(e: Switch.Switch.SwitchChangeEvent) => input.onKeepMeUpdatedChange(e.checked)}\n          >\n            </devtools-switch>\n          </div>\n          </div>\n        <div class=\"section\">\n          <div class=\"icon-container\">\n            <devtools-icon name=\"google\"></devtools-icon>\n          </div>\n          <div class=\"text-container\">\n            <h2 class=\"section-title\">${i18nString(UIStrings.tailorProfile)}</h2>\n            <div class=\"section-text\">\n              <div>${i18nString(UIStrings.tailorProfileBody)}</div><br/>\n              <div>${i18n.i18n.getFormatLocalizedString(str_, UIStrings.tailorProfileBodyDisclaimer, {\n      PH1: UI.XLink.XLink.create(CONTENT_POLICY_URL, i18nString(UIStrings.contentPolicy), 'link', undefined, 'content-policy'),\n      PH2: UI.XLink.XLink.create(TERMS_OF_SERVICE_URL, i18nString(UIStrings.termsOfService), 'link',\n        undefined, 'terms-of-service'),\n      PH3: UI.XLink.XLink.create(PRIVACY_POLICY_URL, i18nString(UIStrings.privacyPolicy), 'link',\n        undefined, 'privacy-policy'),\n    })}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"buttons\">\n        <devtools-button\n          aria-label=${i18nString(UIStrings.learnMoreAccessibleText)}\n          .title=${i18nString(UIStrings.learnMoreAccessibleText)}\n          .variant=${Buttons.Button.Variant.OUTLINED}\n          .jslogContext=${'learn-more'}\n          @click=${() => UI.UIUtils.openInNewTab(GDP_PROGRAM_URL as Platform.DevToolsPath.UrlString)}>${i18nString(UIStrings.learnMore)}</devtools-button>\n        <div class=\"right-buttons\">\n          <devtools-button\n            .variant=${Buttons.Button.Variant.TONAL}\n            .jslogContext=${'cancel'}\n            @click=${input.onCancelClick}>${i18nString(UIStrings.cancel)}</devtools-button>\n          <devtools-button\n            .variant=${Buttons.Button.Variant.PRIMARY}\n            .jslogContext=${'sign-up'}\n            .spinner=${input.isSigningUp}\n            .disabled=${input.isSigningUp}\n            @click=${input.onSignUpClick}>${i18nString(UIStrings.signUp)}</devtools-button>\n        </div>\n      </div>\n    `,\n    target\n  );\n  // clang-format on\n};\n\nexport class GdpSignUpDialog extends UI.Widget.VBox {\n  #view: View;\n  #dialog: UI.Dialog.Dialog;\n  #keepMeUpdated = false;\n  #isSigningUp = false;\n  #onSuccess?: () => void;\n  #onCancel?: () => void;\n\n  constructor(\n      options: {\n        dialog: UI.Dialog.Dialog,\n        onSuccess?: () => void,\n        onCancel?: () => void,\n      },\n      view?: View) {\n    super();\n    this.#dialog = options.dialog;\n    this.#onSuccess = options.onSuccess;\n    this.#onCancel = options.onCancel;\n    this.#view = view ?? DEFAULT_VIEW;\n    this.requestUpdate();\n  }\n\n  async #onSignUpClick(): Promise<void> {\n    this.#isSigningUp = true;\n    this.requestUpdate();\n\n    const syncInfo = await new Promise<Host.InspectorFrontendHostAPI.SyncInformation>(\n        resolve => Host.InspectorFrontendHost.InspectorFrontendHostInstance.getSyncInformation(resolve));\n    const user = syncInfo.accountFullName ?? '';\n    const emailPreference =\n        this.#keepMeUpdated ? Host.GdpClient.EmailPreference.ENABLED : Host.GdpClient.EmailPreference.DISABLED;\n    const result = await Host.GdpClient.GdpClient.instance().createProfile({user, emailPreference});\n    if (result) {\n      Common.Settings.Settings.instance().moduleSetting('receive-gdp-badges').set(true);\n      await Badges.UserBadges.instance().initialize();\n      Badges.UserBadges.instance().recordAction(Badges.BadgeAction.GDP_SIGN_UP_COMPLETE);\n      this.#onSuccess?.();\n      this.#dialog.hide();\n    } else {\n      Snackbars.Snackbar.Snackbar.show({message: i18nString(UIStrings.signUpFailed)}, this.#dialog.contentElement);\n      this.#isSigningUp = false;\n      this.requestUpdate();\n    }\n  }\n\n  override performUpdate(): void {\n    const viewInput = {\n      onSignUpClick: this.#onSignUpClick.bind(this),\n      onCancelClick: () => {\n        this.#dialog.hide();\n        this.#onCancel?.();\n      },\n      keepMeUpdated: this.#keepMeUpdated,\n      onKeepMeUpdatedChange: (value: boolean) => {\n        this.#keepMeUpdated = value;\n        this.requestUpdate();\n      },\n      isSigningUp: this.#isSigningUp,\n    };\n\n    this.#view(viewInput, undefined, this.contentElement);\n  }\n\n  static show({onSuccess, onCancel}: {onSuccess?: () => void, onCancel?: () => void} = {}): void {\n    const dialog = new UI.Dialog.Dialog('gdp-sign-up-dialog');\n    dialog.setAriaLabel(i18nString(UIStrings.gdpDialogAriaLabel));\n    dialog.setMaxContentSize(new Geometry.Size(384, 500));\n    dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.SET_EXACT_WIDTH_MAX_HEIGHT);\n    dialog.setDimmed(true);\n\n    new GdpSignUpDialog({dialog, onSuccess, onCancel}).show(dialog.contentElement);\n    dialog.show(undefined, /* stack */ true);\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n    :scope {\n        width: 100%;\n        box-shadow: none;\n        padding: var(--sys-size-8);\n    }\n\n    .gdp-sign-up-dialog-header {\n        background-image: var(--image-file-gdp-logo-light);\n        height: 20px;\n        background-repeat: no-repeat;\n        background-size: contain;\n        margin: 0;\n\n        &:focus-visible {\n            outline: 2px solid var(--sys-color-state-focus-ring);\n        }\n    }\n\n    :host-context(.theme-with-dark-background) & .gdp-sign-up-dialog-header {\n        background-image: var(--image-file-gdp-logo-dark);\n    }\n\n    .main-content {\n        display: flex;\n        flex-direction: column;\n        margin: var(--sys-size-6) 0;\n        gap: var(--sys-size-3);\n    }\n\n    .section {\n        display: flex;\n        gap: var(--sys-size-6);\n        padding: 12px 16px 12px 12px;\n        background-color: var(--sys-color-surface4);\n        align-self: stretch;\n    }\n\n    .icon-container {\n        flex-shrink: 0;\n    }\n\n    .section:first-child {\n        border-top-left-radius: var(--sys-shape-corner-medium-small);\n        border-top-right-radius: var(--sys-shape-corner-medium-small);\n    }\n\n    .section:last-child {\n        border-bottom-left-radius: var(--sys-shape-corner-medium-small);\n        border-bottom-right-radius: var(--sys-shape-corner-medium-small);\n    }\n\n    .section .icon-container devtools-icon {\n        width: var(--sys-size-8);\n        height: var(--sys-size-8);\n    }\n\n    .text-container {\n        display: flex;\n        flex-direction: column;\n    }\n\n    .section-title {\n        margin: 0;\n        font: var(--sys-typescale-body4-medium);\n        color: var(--sys-color-on-surface);\n    }\n\n    .section-text {\n        font: var(--sys-typescale-body4-regular);\n        color: var(--sys-color-on-surface-subtle);\n        line-height: 18px;\n    }\n\n    .switch-container {\n        display: flex;\n        align-items: center;\n        flex-shrink: 0;\n    }\n\n    .buttons {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    .right-buttons {\n        display: flex;\n        gap: var(--sys-size-5);\n    }\n}\n\n/*# sourceURL=${import.meta.resolve('./gdpSignUpDialog.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/spinners/spinners.js';\nimport '../../ui/components/tooltips/tooltips.js';\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives, html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport styles from './aiCodeCompletionDisclaimer.css.js';\n\nconst UIStringsNotTranslate = {\n  /**\n   * @description Disclaimer text for AI code completion\n   */\n  relevantData: 'Relevant data',\n  /**\n   * @description Disclaimer text for AI code completion\n   */\n  isSentToGoogle: 'is sent to Google',\n  /**\n   * @description Text for tooltip shown on hovering over \"Relevant Data\" in the disclaimer text for AI code completion.\n   */\n  tooltipDisclaimerTextForAiCodeCompletion:\n      'To generate code suggestions, your console input and the history of your current console session are shared with Google. This data may be seen by human reviewers to improve this feature.',\n  /**\n   * @description Text for tooltip shown on hovering over \"Relevant Data\" in the disclaimer text for AI code completion.\n   */\n  tooltipDisclaimerTextForAiCodeCompletionNoLogging:\n      'To generate code suggestions, your console input and the history of your current console session are shared with Google. This data will not be used to improve Google’s AI models.',\n  /**\n   * Text for tooltip shown on hovering over spinner.\n   */\n  tooltipTextForSpinner: 'Shows when data is being sent to Google to generate code suggestions',\n  /**\n   * @description Text for tooltip button which redirects to AI settings\n   */\n  manageInSettings: 'Manage in settings',\n  /**\n   *@description Text announced when request is sent to AIDA and the spinner is loading\n   */\n  dataIsBeingSentToGoogle: 'Data is being sent to Google',\n} as const;\n\nconst lockedString = i18n.i18n.lockedString;\n\nexport interface ViewInput {\n  disclaimerTooltipId?: string;\n  spinnerTooltipId?: string;\n  noLogging: boolean;\n  aidaAvailability?: Host.AidaClient.AidaAccessPreconditions;\n  onManageInSettingsTooltipClick: () => void;\n}\n\nexport interface ViewOutput {\n  hideTooltip?: () => void;\n  setLoading?: (isLoading: boolean) => void;\n}\n\nexport type View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nexport const DEFAULT_SUMMARY_TOOLBAR_VIEW: View =\n    (input, output, target) => {\n      if (input.aidaAvailability !== Host.AidaClient.AidaAccessPreconditions.AVAILABLE || !input.disclaimerTooltipId ||\n          !input.spinnerTooltipId) {\n        render(nothing, target);\n        return;\n      }\n      // clang-format off\n  render(\n    html`\n        <style>${styles}</style>\n        <div class=\"ai-code-completion-disclaimer\"><devtools-spinner\n          .active=${false}\n          ${Directives.ref(el => {\n            if (el instanceof HTMLElement) {\n              output.setLoading = (isLoading: boolean) => {\n                el.toggleAttribute('active', isLoading);\n              };\n            }\n          })}\n          aria-details=${input.spinnerTooltipId}\n          aria-describedby=${input.spinnerTooltipId}></devtools-spinner>\n          <devtools-tooltip\n              id=${input.spinnerTooltipId}\n              variant=${'rich'}\n              jslogContext=${'ai-code-completion-spinner-tooltip'}>\n          <div class=\"disclaimer-tooltip-container\"><div class=\"tooltip-text\">\n            ${lockedString(UIStringsNotTranslate.tooltipTextForSpinner)}\n          </div></div></devtools-tooltip>\n          <span\n              tabIndex=\"0\"\n              class=\"link\"\n              role=\"link\"\n              jslog=${VisualLogging.link('open-ai-settings').track({\n                click: true,\n              })}\n              aria-details=${input.disclaimerTooltipId}\n              aria-describedby=${input.disclaimerTooltipId}\n              @click=${() => {\n                void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n              }}\n          >${lockedString(UIStringsNotTranslate.relevantData)}</span>${lockedString(UIStringsNotTranslate.isSentToGoogle)}\n          <devtools-tooltip\n              id=${input.disclaimerTooltipId}\n              variant=${'rich'}\n              jslogContext=${'ai-code-completion-disclaimer'}\n              ${Directives.ref(el => {\n                if (el instanceof HTMLElement) {\n                  output.hideTooltip = () => {\n                    el.hidePopover();\n                  };\n                }\n              })}>\n            <div class=\"disclaimer-tooltip-container\"><div class=\"tooltip-text\">\n                ${input.noLogging ? lockedString(UIStringsNotTranslate.tooltipDisclaimerTextForAiCodeCompletionNoLogging) : lockedString(UIStringsNotTranslate.tooltipDisclaimerTextForAiCodeCompletion)}\n                </div>\n                <span\n                    tabIndex=\"0\"\n                    class=\"link\"\n                    role=\"link\"\n                    jslog=${VisualLogging.link('open-ai-settings').track({\n                      click: true,\n                    })}\n                    @click=${input.onManageInSettingsTooltipClick}\n                >${lockedString(UIStringsNotTranslate.manageInSettings)}</span></div></devtools-tooltip>\n          </div>\n        `, target);\n      // clang-format on\n    };\n\nconst MINIMUM_LOADING_STATE_TIMEOUT = 1000;\n\nexport class AiCodeCompletionDisclaimer extends UI.Widget.Widget {\n  readonly #view: View;\n  #viewOutput: ViewOutput = {};\n\n  #spinnerTooltipId?: string;\n  #disclaimerTooltipId?: string;\n  #noLogging: boolean;  // Whether the enterprise setting is `ALLOW_WITHOUT_LOGGING` or not.\n  #loading = false;\n  #loadingStartTime = 0;\n  #spinnerLoadingTimeout: number|undefined;\n\n  #aidaAvailability?: Host.AidaClient.AidaAccessPreconditions;\n  #boundOnAidaAvailabilityChange: () => Promise<void>;\n\n  constructor(element?: HTMLElement, view: View = DEFAULT_SUMMARY_TOOLBAR_VIEW) {\n    super(element);\n    this.markAsExternallyManaged();\n    this.#noLogging = Root.Runtime.hostConfig.aidaAvailability?.enterprisePolicyValue ===\n        Root.Runtime.GenAiEnterprisePolicyValue.ALLOW_WITHOUT_LOGGING;\n    this.#boundOnAidaAvailabilityChange = this.#onAidaAvailabilityChange.bind(this);\n    this.#view = view;\n  }\n\n  set disclaimerTooltipId(disclaimerTooltipId: string) {\n    this.#disclaimerTooltipId = disclaimerTooltipId;\n    this.requestUpdate();\n  }\n\n  set spinnerTooltipId(spinnerTooltipId: string) {\n    this.#spinnerTooltipId = spinnerTooltipId;\n    this.requestUpdate();\n  }\n\n  set loading(loading: boolean) {\n    if (!loading && !this.#loading) {\n      return;\n    }\n\n    if (loading) {\n      if (!this.#loading) {\n        this.#viewOutput.setLoading?.(true);\n        UI.ARIAUtils.LiveAnnouncer.status(lockedString(UIStringsNotTranslate.dataIsBeingSentToGoogle));\n      }\n      if (this.#spinnerLoadingTimeout) {\n        clearTimeout(this.#spinnerLoadingTimeout);\n        this.#spinnerLoadingTimeout = undefined;\n      }\n      this.#loadingStartTime = performance.now();\n      this.#loading = true;\n    } else {\n      this.#loading = false;\n      const duration = performance.now() - this.#loadingStartTime;\n      const remainingTime = Math.max(MINIMUM_LOADING_STATE_TIMEOUT - duration, 0);\n      this.#spinnerLoadingTimeout = window.setTimeout(() => {\n        this.#viewOutput.setLoading?.(false);\n        this.#spinnerLoadingTimeout = undefined;\n      }, remainingTime);\n    }\n  }\n\n  async #onAidaAvailabilityChange(): Promise<void> {\n    const currentAidaAvailability = await Host.AidaClient.AidaClient.checkAccessPreconditions();\n    if (currentAidaAvailability !== this.#aidaAvailability) {\n      this.#aidaAvailability = currentAidaAvailability;\n      this.requestUpdate();\n    }\n  }\n\n  #onManageInSettingsTooltipClick(): void {\n    this.#viewOutput.hideTooltip?.();\n    void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n  }\n\n  override performUpdate(): void {\n    this.#view(\n        {\n          disclaimerTooltipId: this.#disclaimerTooltipId,\n          spinnerTooltipId: this.#spinnerTooltipId,\n          noLogging: this.#noLogging,\n          aidaAvailability: this.#aidaAvailability,\n          onManageInSettingsTooltipClick: this.#onManageInSettingsTooltipClick.bind(this),\n        },\n        this.#viewOutput, this.contentElement);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    Host.AidaClient.HostConfigTracker.instance().addEventListener(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.#boundOnAidaAvailabilityChange);\n    void this.#onAidaAvailabilityChange();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    Host.AidaClient.HostConfigTracker.instance().removeEventListener(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.#boundOnAidaAvailabilityChange);\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n    /* stylelint-disable-next-line no-invalid-position-declaration */\n    display: flex;\n\n    .ai-code-completion-disclaimer {\n        gap: 5px;\n        display: flex;\n        flex-shrink: 0;\n\n        span.link {\n            color: var(--sys-color-on-surface-subtle);\n\n            &:focus-visible {\n                outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n                outline-offset: 0;\n                border-radius: var(--sys-shape-corner-extra-small);\n            }\n        }\n\n        devtools-spinner {\n            margin-top: var(--sys-size-2);\n            padding: var(--sys-size-1);\n            height: var(--sys-size-6);\n            width: var(--sys-size-6);\n        }\n\n        devtools-tooltip:popover-open {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n\n            .disclaimer-tooltip-container {\n                padding: var(--sys-size-4) 0;\n                max-width: var(--sys-size-30);\n                white-space: normal;\n\n                .tooltip-text {\n                    color: var(--sys-color-on-surface-subtle);\n                    padding: 0 var(--sys-size-5);\n                    align-items: flex-start;\n                    gap: 10px;\n                }\n\n                .link {\n                    margin: var(--sys-size-5) var(--sys-size-8) 0 var(--sys-size-5);\n                    display: inline-block;\n                }\n            }\n        }\n    }\n}\n\n/*# sourceURL=${import.meta.resolve('./aiCodeCompletionDisclaimer.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/spinners/spinners.js';\nimport '../../ui/components/tooltips/tooltips.js';\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives, html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {AiCodeCompletionDisclaimer} from './AiCodeCompletionDisclaimer.js';\nimport styles from './aiCodeCompletionSummaryToolbar.css.js';\n\nconst UIStringsNotTranslate = {\n  /**\n   * @description Text for recitation notice\n   */\n  generatedCodeMayBeSubjectToALicense: 'Generated code may be subject to a license.',\n  /**\n   * @description Text for citations\n   */\n  viewSources: 'View Sources',\n} as const;\n\nconst lockedString = i18n.i18n.lockedString;\n\nexport interface AiCodeCompletionSummaryToolbarProps {\n  citationsTooltipId: string;\n  disclaimerTooltipId?: string;\n  spinnerTooltipId?: string;\n  hasTopBorder?: boolean;\n}\n\nexport interface ViewInput {\n  disclaimerTooltipId?: string;\n  spinnerTooltipId?: string;\n  citations?: Set<string>;\n  citationsTooltipId: string;\n  loading: boolean;\n  hasTopBorder: boolean;\n  aidaAvailability?: Host.AidaClient.AidaAccessPreconditions;\n}\n\nexport type View = (input: ViewInput, output: undefined, target: HTMLElement) => void;\n\nexport const DEFAULT_SUMMARY_TOOLBAR_VIEW: View = (input, _output, target) => {\n  if (input.aidaAvailability !== Host.AidaClient.AidaAccessPreconditions.AVAILABLE) {\n    render(nothing, target);\n    return;\n  }\n  const toolbarClasses = Directives.classMap({\n    'ai-code-completion-summary-toolbar': true,\n    'has-disclaimer': Boolean(input.disclaimerTooltipId),\n    'has-recitation-notice': Boolean(input.citations && input.citations.size > 0),\n    'has-top-border': input.hasTopBorder,\n  });\n\n  // clang-format off\n  const disclaimer = input.disclaimerTooltipId && input.spinnerTooltipId ?\n    html`<devtools-widget\n            .widgetConfig=${UI.Widget.widgetConfig(AiCodeCompletionDisclaimer, {\n      disclaimerTooltipId: input.disclaimerTooltipId,\n      spinnerTooltipId: input.spinnerTooltipId,\n      loading: input.loading,\n    })} class=\"disclaimer-widget\"></devtools-widget>` : nothing;\n\n  const recitationNotice = input.citations && input.citations.size > 0 ?\n    html`<div class=\"ai-code-completion-recitation-notice\">\n                ${lockedString(UIStringsNotTranslate.generatedCodeMayBeSubjectToALicense)}\n                <span class=\"link\"\n                    role=\"link\"\n                    aria-details=${input.citationsTooltipId}\n                    aria-describedby=${input.citationsTooltipId}\n                    tabIndex=\"0\">\n                  ${lockedString(UIStringsNotTranslate.viewSources)}&nbsp;${lockedString('(' + input.citations.size + ')')}\n                </span>\n                <devtools-tooltip\n                    id=${input.citationsTooltipId}\n                    variant=${'rich'}\n                    jslogContext=${'ai-code-completion-citations'}\n                ><div class=\"citations-tooltip-container\">\n                    ${Directives.repeat(input.citations, citation => html`<x-link\n                        tabIndex=\"0\"\n                        href=${citation}\n                        jslog=${VisualLogging.link('ai-code-completion-citations.citation-link').track({\n      click: true\n    })}>${citation}</x-link>`)}</div></devtools-tooltip>\n            </div>` : nothing;\n\n  render(\n    html`\n        <style>${styles}</style>\n        <div class=${toolbarClasses}>\n          ${disclaimer}\n          ${recitationNotice}\n        </div>\n        `, target);\n  // clang-format on\n};\n\nexport class AiCodeCompletionSummaryToolbar extends UI.Widget.Widget {\n  readonly #view: View;\n\n  #disclaimerTooltipId?: string;\n  #spinnerTooltipId?: string;\n  #citationsTooltipId: string;\n  #citations = new Set<string>();\n  #loading = false;\n  #hasTopBorder = false;\n\n  #aidaAvailability?: Host.AidaClient.AidaAccessPreconditions;\n  #boundOnAidaAvailabilityChange: () => Promise<void>;\n\n  constructor(props: AiCodeCompletionSummaryToolbarProps, view?: View) {\n    super();\n    this.#disclaimerTooltipId = props.disclaimerTooltipId;\n    this.#spinnerTooltipId = props.spinnerTooltipId;\n    this.#citationsTooltipId = props.citationsTooltipId;\n    this.#hasTopBorder = props.hasTopBorder ?? false;\n    this.#boundOnAidaAvailabilityChange = this.#onAidaAvailabilityChange.bind(this);\n    this.#view = view ?? DEFAULT_SUMMARY_TOOLBAR_VIEW;\n    this.requestUpdate();\n  }\n\n  async #onAidaAvailabilityChange(): Promise<void> {\n    const currentAidaAvailability = await Host.AidaClient.AidaClient.checkAccessPreconditions();\n    if (currentAidaAvailability !== this.#aidaAvailability) {\n      this.#aidaAvailability = currentAidaAvailability;\n      this.requestUpdate();\n    }\n  }\n\n  setLoading(loading: boolean): void {\n    this.#loading = loading;\n    this.requestUpdate();\n  }\n\n  updateCitations(citations: string[]): void {\n    citations.forEach(citation => this.#citations.add(citation));\n    this.requestUpdate();\n  }\n\n  clearCitations(): void {\n    this.#citations.clear();\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    this.#view(\n        {\n          disclaimerTooltipId: this.#disclaimerTooltipId,\n          spinnerTooltipId: this.#spinnerTooltipId,\n          citations: this.#citations,\n          citationsTooltipId: this.#citationsTooltipId,\n          loading: this.#loading,\n          hasTopBorder: this.#hasTopBorder,\n          aidaAvailability: this.#aidaAvailability,\n        },\n        undefined, this.contentElement);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    Host.AidaClient.HostConfigTracker.instance().addEventListener(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.#boundOnAidaAvailabilityChange);\n    void this.#onAidaAvailabilityChange();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    Host.AidaClient.HostConfigTracker.instance().removeEventListener(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.#boundOnAidaAvailabilityChange);\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n  .ai-code-completion-summary-toolbar {\n    display: flex;\n    height: 26px;\n    background-color: var(--sys-color-cdt-base-container);\n    padding: var(--sys-size-2) var(--sys-size-5);\n    align-items: center;\n    gap: var(--sys-size-5);\n    flex-shrink: 0;\n    color: var(--sys-color-on-surface-subtle);\n\n    &:not(.has-top-border) {\n      border-top: var(--sys-size-1) solid var(--sys-color-divider);\n    }\n\n    devtools-widget.disclaimer-widget {\n      flex: none;\n    }\n\n    span.link {\n      color: var(--sys-color-on-surface-subtle);\n      /* Inside the code mirror editor, the cursor and text-decoration styling need to be provided explicitly */\n      cursor: pointer;\n      text-decoration: underline;\n\n      &:focus-visible {\n        outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n        outline-offset: 0;\n        border-radius: var(--sys-shape-corner-extra-small);\n      }\n    }\n\n    .ai-code-completion-recitation-notice {\n      white-space: nowrap;\n\n      span.link {\n        padding-left: var(--sys-size-3);\n      }\n    }\n\n    &.has-disclaimer .ai-code-completion-recitation-notice {\n      padding-left: var(--sys-size-5);\n      border-left: var(--sys-size-1) solid var(--sys-color-divider);\n    }\n\n    @media (width < 545px) {\n      &.has-disclaimer.has-recitation-notice {\n        height: 46px;\n        flex-direction: column;\n        align-items: flex-start;\n\n        .ai-code-completion-disclaimer {\n          height: 26px;\n          margin-bottom: -3px;\n          margin-top: var(--sys-size-2);\n          flex-shrink: 1;\n        }\n\n        .ai-code-completion-recitation-notice {\n          height: 26px;\n          padding-left: 0;\n          border-left: 0;\n          margin-top: -3px;\n        }\n      }\n    }\n\n    devtools-tooltip:popover-open {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        .citations-tooltip-container {\n            display: inline-flex;\n            padding: var(--sys-size-4) var(--sys-size-5);\n            flex-direction: column;\n            align-items: flex-start;\n            justify-content: center;\n            gap: var(--sys-size-2);\n            white-space: normal;\n\n            x-link {\n                color: var(--sys-color-primary);\n                text-decoration: underline;\n\n              &:focus-visible {\n                outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n                outline-offset: 0;\n                border-radius: var(--sys-shape-corner-extra-small);\n              }\n          }\n      }\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./aiCodeCompletionSummaryToolbar.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Badges from '../../models/badges/badges.js';\nimport * as WindowBoundsService from '../../services/window_bounds/window_bounds.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport badgeNotificationStyles from './badgeNotification.css.js';\nimport * as GdpSignUpDialog from './GdpSignUpDialog.js';\n\nconst {html, render} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Title for close button\n   */\n  close: 'Close',\n  /**\n   * @description Activity based badge award notification text\n   * @example {Badge Title} PH1\n   */\n  activityBasedBadgeAwardMessage: 'You earned the {PH1} badge! It’s been added to your Developer Profile.',\n  /**\n   * @description Action title for navigating to the badge settings in Google Developer Profile section\n   */\n  manageSettings: 'Manage settings',\n  /**\n   * @description Action title for opening the Google Developer Program profile page of the user in a new tab\n   */\n  viewProfile: 'View profile',\n  /**\n   * @description Starter badge award notification text when the user has a Google Developer Program profile but did not enable receiving badges in DevTools yet\n   * @example {Badge Title} PH1\n   * @example {Google Developer Program link} PH2\n   */\n  starterBadgeAwardMessageSettingDisabled: 'You earned the {PH1} badge for the {PH2}! Turn on badges to claim it.',\n  /**\n   * @description Starter badge award notification text when the user does not have a Google Developer Program profile.\n   * @example {Badge Title} PH1\n   * @example {Google Developer Program link} PH2\n   */\n  starterBadgeAwardMessageNoGdpProfile:\n      'You earned the {PH1} badge for the {PH2}! Create a profile to claim your badge.',\n  /**\n   * @description Action title for snoozing the starter badge.\n   */\n  remindMeLater: 'Remind me later',\n  /**\n   * @description Action title for enabling the \"Receive badges\" setting\n   */\n  receiveBadges: 'Turn on badges',\n  /**\n   * @description Action title for creating a Google Developer Program profle\n   */\n  createProfile: 'Create profile',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/common/BadgeNotification.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nFormatString = i18n.i18n.getFormatLocalizedString.bind(undefined, str_);\nconst lockedString = i18n.i18n.lockedString;\n\nconst LEFT_OFFSET = 5;\nconst BOTTOM_OFFSET = 5;\nconst AUTO_CLOSE_TIME_IN_MS = 30000;\n\nexport interface BadgeNotificationAction {\n  label: string;\n  jslogContext: string;\n  title?: string;\n  onClick: () => void;\n}\n\nexport interface BadgeNotificationProperties {\n  message: HTMLElement|string;\n  jslogContext: string;\n  imageUri: string;\n  actions: BadgeNotificationAction[];\n  isStarterBadge: boolean;\n}\n\nexport interface ViewInput extends BadgeNotificationProperties {\n  onDismissClick: () => void;\n}\n\n// clang-format off\nconst DEFAULT_VIEW = (input: ViewInput, _output: undefined, target: HTMLElement): void => {\n  const actionButtons = input.actions.map(property => {\n    return html`<devtools-button\n        class=\"notification-button\"\n        @click=${() => property.onClick()}\n        jslog=${VisualLogging.action(property.jslogContext).track({click: true})}\n        .variant=${Buttons.Button.Variant.TEXT}\n        .title=${property.title ?? ''}\n        .inverseColorTheme=${true}\n    >${property.label}</devtools-button>`;\n  });\n\n  const crossButton = html`<devtools-button\n        class=\"dismiss notification-button\"\n        @click=${input.onDismissClick}\n        jslog=${VisualLogging.action('badge-notification.dismiss').track({click: true})}\n        aria-label=${i18nString(UIStrings.close)}\n        .iconName=${'cross'}\n        .variant=${Buttons.Button.Variant.ICON}\n        .title=${i18nString(UIStrings.close)}\n        .inverseColorTheme=${true}\n    ></devtools-button>`;\n\n  render(html`\n    <style>${badgeNotificationStyles}</style>\n    <div class=\"container\" jslog=${VisualLogging.dialog('badge-notification')}>\n      <div class=\"badge-container\" jslog=${VisualLogging.item(input.jslogContext)}>\n        <img class=\"badge-image\" role=\"presentation\" src=${input.imageUri}>\n      </div>\n      <div class=\"action-and-text-container\">\n        <div class=\"label-container\">\n            <div class=\"message\">${input.message}</div>\n            ${crossButton}\n        </div>\n        <div class=\"long-action-container\">${actionButtons}</div>\n      </div>\n    </div>\n  `, target);\n};\n// clang-format on\n\ntype View = typeof DEFAULT_VIEW;\n\nfunction revealBadgeSettings(): void {\n  void Common.Revealer.reveal(Common.Settings.moduleSetting('receive-gdp-badges'));\n}\n\nexport class BadgeNotification extends UI.Widget.Widget {\n  jslogContext = '';\n  message: HTMLElement|string = '';\n  imageUri = '';\n  actions: BadgeNotificationAction[] = [];\n  isStarterBadge = false;\n\n  #autoCloseTimeout?: number;\n  #view: View;\n  constructor(element?: HTMLElement, view: View = DEFAULT_VIEW) {\n    super(element);\n    this.#view = view;\n\n    // eslint-disable-next-line\n    this.contentElement.role = 'alert';\n    this.markAsRoot();\n  }\n\n  async present(badge: Badges.Badge): Promise<void> {\n    if (badge.isStarterBadge) {\n      await this.#presentStarterBadge(badge);\n    } else {\n      this.#presentActivityBasedBadge(badge);\n    }\n  }\n\n  #positionNotification(): void {\n    const boundingRect = this.contentElement.getBoundingClientRect();\n    const container =\n        WindowBoundsService.WindowBoundsService.WindowBoundsServiceImpl.instance().getDevToolsBoundingElement();\n    this.contentElement.positionAt(\n        LEFT_OFFSET, container.clientHeight - boundingRect.height - BOTTOM_OFFSET, container);\n  }\n\n  #show(properties: BadgeNotificationProperties): void {\n    this.message = properties.message;\n    this.imageUri = properties.imageUri;\n    this.actions = properties.actions;\n    this.isStarterBadge = properties.isStarterBadge;\n    this.jslogContext = properties.jslogContext;\n    this.requestUpdate();\n    this.show(document.body);\n\n    void this.updateComplete.then(() => {\n      this.#positionNotification();\n    });\n\n    if (this.#autoCloseTimeout) {\n      window.clearTimeout(this.#autoCloseTimeout);\n    }\n    this.#autoCloseTimeout = window.setTimeout(this.#onAutoClose, AUTO_CLOSE_TIME_IN_MS);\n  }\n\n  async #presentStarterBadge(badge: Badges.Badge): Promise<void> {\n    const getProfileResponse = await Host.GdpClient.GdpClient.instance().getProfile();\n    // The `getProfile` call failed and returned a `null`.\n    // For that case, we don't show anything.\n    if (!getProfileResponse) {\n      return;\n    }\n\n    const hasGdpProfile = Boolean(getProfileResponse.profile);\n    const receiveBadgesSettingEnabled = Badges.UserBadges.instance().isReceiveBadgesSettingEnabled();\n    const googleDeveloperProgramLink = UI.XLink.XLink.create(\n        'https://developers.google.com/program', lockedString('Google Developer Program'), 'badge-link', undefined,\n        'program-link');\n\n    // If the user already has a GDP profile and the receive badges setting enabled,\n    // starter badge behaves as if it's an activity based badge.\n    if (hasGdpProfile && receiveBadgesSettingEnabled) {\n      this.#presentActivityBasedBadge(badge);\n      return;\n    }\n\n    // If the user already has a GDP profile and the receive badges setting disabled,\n    // starter badge behaves as a nudge for opting into receiving badges.\n    if (hasGdpProfile && !receiveBadgesSettingEnabled) {\n      this.#show({\n        message: i18nFormatString(\n            UIStrings.starterBadgeAwardMessageSettingDisabled, {PH1: badge.title, PH2: googleDeveloperProgramLink}),\n        jslogContext: badge.jslogContext,\n        actions: [\n          {\n            label: i18nString(UIStrings.remindMeLater),\n            jslogContext: 'remind-me-later',\n            onClick: () => {\n              this.detach();\n              Badges.UserBadges.instance().snoozeStarterBadge();\n            },\n          },\n          {\n            label: i18nString(UIStrings.receiveBadges),\n            jslogContext: 'receive-badges',\n            onClick: () => {\n              this.detach();\n              revealBadgeSettings();\n            }\n          }\n        ],\n        imageUri: badge.imageUri,\n        isStarterBadge: true,\n      });\n      return;\n    }\n\n    // The user does not have a GDP profile, starter badge acts as a nudge for creating a GDP profile.\n    this.#show({\n      message: i18nFormatString(\n          UIStrings.starterBadgeAwardMessageNoGdpProfile, {PH1: badge.title, PH2: googleDeveloperProgramLink}),\n      jslogContext: badge.jslogContext,\n      actions: [\n        {\n          label: i18nString(UIStrings.remindMeLater),\n          jslogContext: 'remind-me-later',\n          onClick: () => {\n            this.detach();\n            Badges.UserBadges.instance().snoozeStarterBadge();\n          },\n        },\n        {\n          label: i18nString(UIStrings.createProfile),\n          jslogContext: 'create-profile',\n          onClick: () => {\n            this.detach();\n            GdpSignUpDialog.GdpSignUpDialog.show({\n              // We want to consider cancelling from the starter badge as a \"snooze\" for starter badge.\n              onCancel: () => Badges.UserBadges.instance().snoozeStarterBadge(),\n            });\n          }\n        }\n      ],\n      imageUri: badge.imageUri,\n      isStarterBadge: true,\n    });\n  }\n\n  #presentActivityBasedBadge(badge: Badges.Badge): void {\n    this.#show({\n      message: i18nString(UIStrings.activityBasedBadgeAwardMessage, {PH1: badge.title}),\n      jslogContext: badge.jslogContext,\n      actions: [\n        {\n          label: i18nString(UIStrings.manageSettings),\n          jslogContext: 'manage-settings',\n          onClick: () => {\n            this.detach();\n            revealBadgeSettings();\n          },\n        },\n        {\n          label: i18nString(UIStrings.viewProfile),\n          jslogContext: 'view-profile',\n          onClick: () => {\n            UI.UIUtils.openInNewTab(Host.GdpClient.GOOGLE_DEVELOPER_PROGRAM_PROFILE_LINK);\n          }\n        }\n      ],\n      imageUri: badge.imageUri,\n      isStarterBadge: badge.isStarterBadge,\n    });\n  }\n\n  override onDetach(): void {\n    window.clearTimeout(this.#autoCloseTimeout);\n  }\n\n  #onDismissClick = (): void => {\n    this.detach();\n\n    if (this.isStarterBadge) {\n      Badges.UserBadges.instance().dismissStarterBadge();\n    }\n  };\n\n  #onAutoClose = (): void => {\n    this.detach();\n\n    if (this.isStarterBadge) {\n      Badges.UserBadges.instance().snoozeStarterBadge();\n    }\n  };\n\n  override wasShown(): void {\n    super.wasShown();\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    const viewInput: ViewInput = {\n      message: this.message,\n      imageUri: this.imageUri,\n      actions: this.actions,\n      isStarterBadge: this.isStarterBadge,\n      onDismissClick: this.#onDismissClick,\n      jslogContext: this.jslogContext,\n    };\n    this.#view(viewInput, undefined, this.contentElement);\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n  :scope {\n    position: fixed;\n    z-index: 9999;\n    /* subtract var(--sys-size-5) * 2 so that there is equal space on the left and on the right in small screens */\n    max-width: calc(100% - 2 * var(--sys-size-5));\n  }\n\n  .container {\n    display: flex;\n    align-items: center;\n    overflow: hidden;\n    width: 485px;\n    background: var(--sys-color-inverse-surface);\n    box-shadow: var(--sys-elevation-level3);\n    border-radius: var(--sys-shape-corner-small);\n    font: var(--sys-typescale-body4-regular);\n    animation: slideIn 100ms cubic-bezier(0, 0, 0.3, 1);\n    box-sizing: border-box;\n    max-width: 100%;\n    padding: var(--sys-size-5) var(--sys-size-6) var(--sys-size-6) var(--sys-size-6);\n  }\n\n  .action-and-text-container {\n    display: flex;\n    flex-direction: column;\n    gap: var(--sys-size-3);\n  }\n\n  .long-action-container {\n    margin-left: auto;\n    /*\n    * Buttons have a 24px total height, which includes padding for the hover area.\n    * We apply a -3px vertical margin to compensate for this extra space.\n    * This ensures the component aligns based on the visual text height,\n    * not the full clickable bounding box.\n    */\n    margin-block: -3px;\n  }\n\n  .label-container {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    padding-block: var(--sys-size-3);\n    line-height: 18px;\n  }\n\n  .badge-container {\n    margin-right: 10px;\n    min-width: 64px;\n    height: 64px;\n  }\n\n  .badge-image {\n    width: 100%;\n    height: 100%;\n    border-radius: var(--sys-shape-corner-full);\n  }\n\n  .badge-link {\n    color: var(--sys-color-inverse-primary);\n  }\n\n  .message {\n    width: 100%;\n    color: var(--sys-color-inverse-on-surface);\n    flex: 1 0 0;\n    text-wrap: pretty;\n    user-select: text;\n  }\n\n  devtools-button.dismiss {\n    padding: 3px;\n  }\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateY(var(--sys-size-5));\n    opacity: 0%;\n  }\n\n  to {\n    opacity: 100%;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./badgeNotification.css')} */`;"],
  "mappings": "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",
  "names": ["Host", "i18n", "Geometry", "Buttons", "UI", "i18n", "UI", "html", "render", "dialog", "render", "html", "Common", "Host", "i18n", "Buttons", "Snackbars", "UI", "html", "render", "UIStrings", "str_", "i18nString", "DEFAULT_VIEW", "render", "html", "dialog", "Host", "i18n", "Root", "UI", "html", "nothing", "render", "VisualLogging", "UIStringsNotTranslate", "lockedString", "render", "nothing", "html", "Host", "i18n", "UI", "Directives", "html", "nothing", "render", "VisualLogging", "UIStringsNotTranslate", "lockedString", "DEFAULT_SUMMARY_TOOLBAR_VIEW", "render", "nothing", "Directives", "html", "Common", "Host", "i18n", "Badges", "Buttons", "UI", "Lit", "VisualLogging", "html", "render", "Lit", "UIStrings", "str_", "i18nString", "lockedString", "DEFAULT_VIEW", "UIStrings", "str_", "i18nString", "dialog"]
}
