{"version":3,"file":"BadgeNotification.js","sourceRoot":"","sources":["../../../../../../front_end/panels/common/BadgeNotification.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,MAAM,MAAM,+BAA+B,CAAC;AACxD,OAAO,KAAK,mBAAmB,MAAM,+CAA+C,CAAC;AACrF,OAAO,KAAK,OAAO,MAAM,wCAAwC,CAAC;AAClE,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,KAAK,GAAG,MAAM,qBAAqB,CAAC;AAC3C,OAAO,KAAK,aAAa,MAAM,2CAA2C,CAAC;AAE3E,OAAO,uBAAuB,MAAM,4BAA4B,CAAC;AACjE,OAAO,KAAK,eAAe,MAAM,sBAAsB,CAAC;AAExD,MAAM,EAAC,IAAI,EAAE,MAAM,EAAC,GAAG,GAAG,CAAC;AAE3B,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,KAAK,EAAE,OAAO;IACd;;;OAGG;IACH,8BAA8B,EAAE,wEAAwE;IACxG;;OAEG;IACH,cAAc,EAAE,iBAAiB;IACjC;;OAEG;IACH,WAAW,EAAE,cAAc;IAC3B;;;;OAIG;IACH,uCAAuC,EAAE,uEAAuE;IAChH;;;;OAIG;IACH,oCAAoC,EAChC,iFAAiF;IACrF;;OAEG;IACH,aAAa,EAAE,iBAAiB;IAChC;;OAEG;IACH,aAAa,EAAE,gBAAgB;IAC/B;;OAEG;IACH,aAAa,EAAE,gBAAgB;CACvB,CAAC;AAEX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,oCAAoC,EAAE,SAAS,CAAC,CAAC;AAC1F,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACtE,MAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAClF,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;AAE5C,MAAM,WAAW,GAAG,CAAC,CAAC;AACtB,MAAM,aAAa,GAAG,CAAC,CAAC;AACxB,MAAM,qBAAqB,GAAG,KAAK,CAAC;AAqBpC,mBAAmB;AACnB,MAAM,YAAY,GAAG,CAAC,KAAgB,EAAE,OAAkB,EAAE,MAAmB,EAAQ,EAAE;IACvF,MAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;QACjD,OAAO,IAAI,CAAA;;iBAEE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE;gBACzB,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;mBAC7D,wCAA2B;iBAC7B,QAAQ,CAAC,KAAK,IAAI,EAAE;6BACR,IAAI;OAC1B,QAAQ,CAAC,KAAK,oBAAoB,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,IAAI,CAAA;;iBAET,KAAK,CAAC,cAAc;gBACrB,aAAa,CAAC,MAAM,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;qBAClE,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;oBAC5B,OAAO;mBACR,wCAA2B;iBAC7B,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;6BACf,IAAI;wBACT,CAAC;IAEvB,MAAM,CAAC,IAAI,CAAA;aACA,uBAAuB;mCACD,aAAa,CAAC,MAAM,CAAC,oBAAoB,CAAC;2CAClC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;2DACtB,KAAK,CAAC,QAAQ;;;;mCAItC,KAAK,CAAC,OAAO;cAClC,WAAW;;6CAEoB,aAAa;;;GAGvD,EAAE,MAAM,CAAC,CAAC;AACb,CAAC,CAAC;AAKF,SAAS,mBAAmB;IAC1B,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;AACnF,CAAC;AAED,MAAM,OAAO,iBAAkB,SAAQ,EAAE,CAAC,MAAM,CAAC,MAAM;IACrD,YAAY,GAAG,EAAE,CAAC;IAClB,OAAO,GAAuB,EAAE,CAAC;IACjC,QAAQ,GAAG,EAAE,CAAC;IACd,OAAO,GAA8B,EAAE,CAAC;IACxC,cAAc,GAAG,KAAK,CAAC;IAEvB,iBAAiB,CAAU;IAC3B,KAAK,CAAO;IACZ,YAAY,OAAqB,EAAE,OAAa,YAAY;QAC1D,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,2BAA2B;QAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,OAAO,CAAC;QACnC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,KAAmB;QAC/B,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC;IACH,CAAC;IAED,qBAAqB;QACnB,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;QACjE,MAAM,SAAS,GACX,mBAAmB,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,QAAQ,EAAE,CAAC,0BAA0B,EAAE,CAAC;QAC5G,IAAI,CAAC,cAAc,CAAC,UAAU,CAC1B,WAAW,EAAE,SAAS,CAAC,YAAY,GAAG,YAAY,CAAC,MAAM,GAAG,aAAa,EAAE,SAAS,CAAC,CAAC;IAC5F,CAAC;IAED,KAAK,CAAC,UAAuC;QAC3C,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;QACpC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC,cAAc,CAAC;QAChD,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEzB,KAAK,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3B,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC9C,CAAC;QACD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,qBAAqB,CAAC,CAAC;IACvF,CAAC;IAED,KAAK,CAAC,oBAAoB,CAAC,KAAmB;QAC5C,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC;QAC1E,MAAM,2BAA2B,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,6BAA6B,EAAE,CAAC;QACjG,MAAM,0BAA0B,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CACpD,uCAAuC,EAAE,YAAY,CAAC,0BAA0B,CAAC,EAAE,YAAY,EAAE,SAAS,EAC1G,cAAc,CAAC,CAAC;QAEpB,gFAAgF;QAChF,4DAA4D;QAC5D,IAAI,UAAU,IAAI,2BAA2B,EAAE,CAAC;YAC9C,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;YACvC,OAAO;QACT,CAAC;QAED,iFAAiF;QACjF,qEAAqE;QACrE,IAAI,UAAU,IAAI,CAAC,2BAA2B,EAAE,CAAC;YAC/C,IAAI,CAAC,KAAK,CAAC;gBACT,OAAO,EAAE,gBAAgB,CACrB,SAAS,CAAC,uCAAuC,EAAE,EAAC,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,0BAA0B,EAAC,CAAC;gBAC3G,YAAY,EAAE,KAAK,CAAC,YAAY;gBAChC,OAAO,EAAE;oBACP;wBACE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;wBAC1C,YAAY,EAAE,iBAAiB;wBAC/B,OAAO,EAAE,GAAG,EAAE;4BACZ,IAAI,CAAC,MAAM,EAAE,CAAC;4BACd,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,kBAAkB,EAAE,CAAC;wBACpD,CAAC;qBACF;oBACD;wBACE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;wBAC1C,YAAY,EAAE,gBAAgB;wBAC9B,OAAO,EAAE,GAAG,EAAE;4BACZ,IAAI,CAAC,MAAM,EAAE,CAAC;4BACd,mBAAmB,EAAE,CAAC;wBACxB,CAAC;qBACF;iBACF;gBACD,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,cAAc,EAAE,IAAI;aACrB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,kGAAkG;QAClG,IAAI,CAAC,KAAK,CAAC;YACT,OAAO,EAAE,gBAAgB,CACrB,SAAS,CAAC,oCAAoC,EAAE,EAAC,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,0BAA0B,EAAC,CAAC;YACxG,YAAY,EAAE,KAAK,CAAC,YAAY;YAChC,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;oBAC1C,YAAY,EAAE,iBAAiB;oBAC/B,OAAO,EAAE,GAAG,EAAE;wBACZ,IAAI,CAAC,MAAM,EAAE,CAAC;wBACd,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,kBAAkB,EAAE,CAAC;oBACpD,CAAC;iBACF;gBACD;oBACE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;oBAC1C,YAAY,EAAE,gBAAgB;oBAC9B,OAAO,EAAE,GAAG,EAAE;wBACZ,IAAI,CAAC,MAAM,EAAE,CAAC;wBACd,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC;4BACnC,yFAAyF;4BACzF,QAAQ,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,kBAAkB,EAAE;yBAClE,CAAC,CAAC;oBACL,CAAC;iBACF;aACF;YACD,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC;IACL,CAAC;IAED,0BAA0B,CAAC,KAAmB;QAC5C,IAAI,CAAC,KAAK,CAAC;YACT,OAAO,EAAE,UAAU,CAAC,SAAS,CAAC,8BAA8B,EAAE,EAAC,GAAG,EAAE,KAAK,CAAC,KAAK,EAAC,CAAC;YACjF,YAAY,EAAE,KAAK,CAAC,YAAY;YAChC,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC;oBAC3C,YAAY,EAAE,iBAAiB;oBAC/B,OAAO,EAAE,GAAG,EAAE;wBACZ,IAAI,CAAC,MAAM,EAAE,CAAC;wBACd,mBAAmB,EAAE,CAAC;oBACxB,CAAC;iBACF;gBACD;oBACE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC;oBACxC,YAAY,EAAE,cAAc;oBAC5B,OAAO,EAAE,GAAG,EAAE;wBACZ,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,qCAAqC,CAAC,CAAC;oBAChF,CAAC;iBACF;aACF;YACD,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,cAAc,EAAE,KAAK,CAAC,cAAc;SACrC,CAAC,CAAC;IACL,CAAC;IAEQ,QAAQ;QACf,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC9C,CAAC;IAED,eAAe,GAAG,GAAS,EAAE;QAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,mBAAmB,EAAE,CAAC;QACrD,CAAC;IACH,CAAC,CAAC;IAEF,YAAY,GAAG,GAAS,EAAE;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,kBAAkB,EAAE,CAAC;QACpD,CAAC;IACH,CAAC,CAAC;IAEO,QAAQ;QACf,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEQ,aAAa;QACpB,MAAM,SAAS,GAAc;YAC3B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,cAAc,EAAE,IAAI,CAAC,eAAe;YACpC,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACxD,CAAC;CACF","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Badges from '../../models/badges/badges.js';\nimport * as WindowBoundsService from '../../services/window_bounds/window_bounds.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport badgeNotificationStyles from './badgeNotification.css.js';\nimport * as GdpSignUpDialog from './GdpSignUpDialog.js';\n\nconst {html, render} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Title for close button\n   */\n  close: 'Close',\n  /**\n   * @description Activity based badge award notification text\n   * @example {Badge Title} PH1\n   */\n  activityBasedBadgeAwardMessage: 'You earned the {PH1} badge! Itâ€™s been added to your Developer Profile.',\n  /**\n   * @description Action title for navigating to the badge settings in Google Developer Profile section\n   */\n  manageSettings: 'Manage settings',\n  /**\n   * @description Action title for opening the Google Developer Program profile page of the user in a new tab\n   */\n  viewProfile: 'View profile',\n  /**\n   * @description Starter badge award notification text when the user has a Google Developer Program profile but did not enable receiving badges in DevTools yet\n   * @example {Badge Title} PH1\n   * @example {Google Developer Program link} PH2\n   */\n  starterBadgeAwardMessageSettingDisabled: 'You earned the {PH1} badge for the {PH2}! Turn on badges to claim it.',\n  /**\n   * @description Starter badge award notification text when the user does not have a Google Developer Program profile.\n   * @example {Badge Title} PH1\n   * @example {Google Developer Program link} PH2\n   */\n  starterBadgeAwardMessageNoGdpProfile:\n      'You earned the {PH1} badge for the {PH2}! Create a profile to claim your badge.',\n  /**\n   * @description Action title for snoozing the starter badge.\n   */\n  remindMeLater: 'Remind me later',\n  /**\n   * @description Action title for enabling the \"Receive badges\" setting\n   */\n  receiveBadges: 'Turn on badges',\n  /**\n   * @description Action title for creating a Google Developer Program profle\n   */\n  createProfile: 'Create profile',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/common/BadgeNotification.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nFormatString = i18n.i18n.getFormatLocalizedString.bind(undefined, str_);\nconst lockedString = i18n.i18n.lockedString;\n\nconst LEFT_OFFSET = 5;\nconst BOTTOM_OFFSET = 5;\nconst AUTO_CLOSE_TIME_IN_MS = 30000;\n\nexport interface BadgeNotificationAction {\n  label: string;\n  jslogContext: string;\n  title?: string;\n  onClick: () => void;\n}\n\nexport interface BadgeNotificationProperties {\n  message: HTMLElement|string;\n  jslogContext: string;\n  imageUri: string;\n  actions: BadgeNotificationAction[];\n  isStarterBadge: boolean;\n}\n\nexport interface ViewInput extends BadgeNotificationProperties {\n  onDismissClick: () => void;\n}\n\n// clang-format off\nconst DEFAULT_VIEW = (input: ViewInput, _output: undefined, target: HTMLElement): void => {\n  const actionButtons = input.actions.map(property => {\n    return html`<devtools-button\n        class=\"notification-button\"\n        @click=${() => property.onClick()}\n        jslog=${VisualLogging.action(property.jslogContext).track({click: true})}\n        .variant=${Buttons.Button.Variant.TEXT}\n        .title=${property.title ?? ''}\n        .inverseColorTheme=${true}\n    >${property.label}</devtools-button>`;\n  });\n\n  const crossButton = html`<devtools-button\n        class=\"dismiss notification-button\"\n        @click=${input.onDismissClick}\n        jslog=${VisualLogging.action('badge-notification.dismiss').track({click: true})}\n        aria-label=${i18nString(UIStrings.close)}\n        .iconName=${'cross'}\n        .variant=${Buttons.Button.Variant.ICON}\n        .title=${i18nString(UIStrings.close)}\n        .inverseColorTheme=${true}\n    ></devtools-button>`;\n\n  render(html`\n    <style>${badgeNotificationStyles}</style>\n    <div class=\"container\" jslog=${VisualLogging.dialog('badge-notification')}>\n      <div class=\"badge-container\" jslog=${VisualLogging.item(input.jslogContext)}>\n        <img class=\"badge-image\" role=\"presentation\" src=${input.imageUri}>\n      </div>\n      <div class=\"action-and-text-container\">\n        <div class=\"label-container\">\n            <div class=\"message\">${input.message}</div>\n            ${crossButton}\n        </div>\n        <div class=\"long-action-container\">${actionButtons}</div>\n      </div>\n    </div>\n  `, target);\n};\n// clang-format on\n\ntype View = typeof DEFAULT_VIEW;\n\nfunction revealBadgeSettings(): void {\n  void Common.Revealer.reveal(Common.Settings.moduleSetting('receive-gdp-badges'));\n}\n\nexport class BadgeNotification extends UI.Widget.Widget {\n  jslogContext = '';\n  message: HTMLElement|string = '';\n  imageUri = '';\n  actions: BadgeNotificationAction[] = [];\n  isStarterBadge = false;\n\n  #autoCloseTimeout?: number;\n  #view: View;\n  constructor(element?: HTMLElement, view: View = DEFAULT_VIEW) {\n    super(element);\n    this.#view = view;\n\n    // eslint-disable-next-line\n    this.contentElement.role = 'alert';\n    this.markAsRoot();\n  }\n\n  async present(badge: Badges.Badge): Promise<void> {\n    if (badge.isStarterBadge) {\n      await this.#presentStarterBadge(badge);\n    } else {\n      this.#presentActivityBasedBadge(badge);\n    }\n  }\n\n  #positionNotification(): void {\n    const boundingRect = this.contentElement.getBoundingClientRect();\n    const container =\n        WindowBoundsService.WindowBoundsService.WindowBoundsServiceImpl.instance().getDevToolsBoundingElement();\n    this.contentElement.positionAt(\n        LEFT_OFFSET, container.clientHeight - boundingRect.height - BOTTOM_OFFSET, container);\n  }\n\n  #show(properties: BadgeNotificationProperties): void {\n    this.message = properties.message;\n    this.imageUri = properties.imageUri;\n    this.actions = properties.actions;\n    this.isStarterBadge = properties.isStarterBadge;\n    this.jslogContext = properties.jslogContext;\n    this.requestUpdate();\n    this.show(document.body);\n\n    void this.updateComplete.then(() => {\n      this.#positionNotification();\n    });\n\n    if (this.#autoCloseTimeout) {\n      window.clearTimeout(this.#autoCloseTimeout);\n    }\n    this.#autoCloseTimeout = window.setTimeout(this.#onAutoClose, AUTO_CLOSE_TIME_IN_MS);\n  }\n\n  async #presentStarterBadge(badge: Badges.Badge): Promise<void> {\n    const gdpProfile = await Host.GdpClient.GdpClient.instance().getProfile();\n    const receiveBadgesSettingEnabled = Badges.UserBadges.instance().isReceiveBadgesSettingEnabled();\n    const googleDeveloperProgramLink = UI.XLink.XLink.create(\n        'https://developers.google.com/program', lockedString('Google Developer Program'), 'badge-link', undefined,\n        'program-link');\n\n    // If the user already has a GDP profile and the receive badges setting enabled,\n    // starter badge behaves as if it's an activity based badge.\n    if (gdpProfile && receiveBadgesSettingEnabled) {\n      this.#presentActivityBasedBadge(badge);\n      return;\n    }\n\n    // If the user already has a GDP profile and the receive badges setting disabled,\n    // starter badge behaves as a nudge for opting into receiving badges.\n    if (gdpProfile && !receiveBadgesSettingEnabled) {\n      this.#show({\n        message: i18nFormatString(\n            UIStrings.starterBadgeAwardMessageSettingDisabled, {PH1: badge.title, PH2: googleDeveloperProgramLink}),\n        jslogContext: badge.jslogContext,\n        actions: [\n          {\n            label: i18nString(UIStrings.remindMeLater),\n            jslogContext: 'remind-me-later',\n            onClick: () => {\n              this.detach();\n              Badges.UserBadges.instance().snoozeStarterBadge();\n            },\n          },\n          {\n            label: i18nString(UIStrings.receiveBadges),\n            jslogContext: 'receive-badges',\n            onClick: () => {\n              this.detach();\n              revealBadgeSettings();\n            }\n          }\n        ],\n        imageUri: badge.imageUri,\n        isStarterBadge: true,\n      });\n      return;\n    }\n\n    // The user does not have a GDP profile, starter badge acts as a nudge for creating a GDP profile.\n    this.#show({\n      message: i18nFormatString(\n          UIStrings.starterBadgeAwardMessageNoGdpProfile, {PH1: badge.title, PH2: googleDeveloperProgramLink}),\n      jslogContext: badge.jslogContext,\n      actions: [\n        {\n          label: i18nString(UIStrings.remindMeLater),\n          jslogContext: 'remind-me-later',\n          onClick: () => {\n            this.detach();\n            Badges.UserBadges.instance().snoozeStarterBadge();\n          },\n        },\n        {\n          label: i18nString(UIStrings.createProfile),\n          jslogContext: 'create-profile',\n          onClick: () => {\n            this.detach();\n            GdpSignUpDialog.GdpSignUpDialog.show({\n              // We want to consider cancelling from the starter badge as a \"snooze\" for starter badge.\n              onCancel: () => Badges.UserBadges.instance().snoozeStarterBadge(),\n            });\n          }\n        }\n      ],\n      imageUri: badge.imageUri,\n      isStarterBadge: true,\n    });\n  }\n\n  #presentActivityBasedBadge(badge: Badges.Badge): void {\n    this.#show({\n      message: i18nString(UIStrings.activityBasedBadgeAwardMessage, {PH1: badge.title}),\n      jslogContext: badge.jslogContext,\n      actions: [\n        {\n          label: i18nString(UIStrings.manageSettings),\n          jslogContext: 'manage-settings',\n          onClick: () => {\n            this.detach();\n            revealBadgeSettings();\n          },\n        },\n        {\n          label: i18nString(UIStrings.viewProfile),\n          jslogContext: 'view-profile',\n          onClick: () => {\n            UI.UIUtils.openInNewTab(Host.GdpClient.GOOGLE_DEVELOPER_PROGRAM_PROFILE_LINK);\n          }\n        }\n      ],\n      imageUri: badge.imageUri,\n      isStarterBadge: badge.isStarterBadge,\n    });\n  }\n\n  override onDetach(): void {\n    window.clearTimeout(this.#autoCloseTimeout);\n  }\n\n  #onDismissClick = (): void => {\n    this.detach();\n\n    if (this.isStarterBadge) {\n      Badges.UserBadges.instance().dismissStarterBadge();\n    }\n  };\n\n  #onAutoClose = (): void => {\n    this.detach();\n\n    if (this.isStarterBadge) {\n      Badges.UserBadges.instance().snoozeStarterBadge();\n    }\n  };\n\n  override wasShown(): void {\n    super.wasShown();\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    const viewInput: ViewInput = {\n      message: this.message,\n      imageUri: this.imageUri,\n      actions: this.actions,\n      isStarterBadge: this.isStarterBadge,\n      onDismissClick: this.#onDismissClick,\n      jslogContext: this.jslogContext,\n    };\n    this.#view(viewInput, undefined, this.contentElement);\n  }\n}\n"]}