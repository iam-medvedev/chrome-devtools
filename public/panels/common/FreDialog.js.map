{"version":3,"file":"FreDialog.js","sourceRoot":"","sources":["../../../../../../front_end/panels/common/FreDialog.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\n\nimport styles from './freDialog.css.js';\n\nconst {html, Directives: {ifDefined}} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Header text for the feature reminder dialog.\n   */\n  thingsToConsider: 'Things to consider',\n  /**\n   * @description Text for the learn more button in the feature reminder dialog.\n   */\n  learnMore: 'Learn more',\n  /**\n   * @description Text for the cancel button in the feature reminder dialog.\n   */\n  cancel: 'Cancel',\n  /**\n   * @description Text for the got it button in the feature reminder dialog.\n   */\n  gotIt: 'Got it',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/common/FreDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class FreDialog {\n  static show({header, reminderItems, onLearnMoreClick, ariaLabel, learnMoreButtonTitle, learnMoreButtonAriaLabel}: {\n    header: {\n      iconName: string,\n      text: Platform.UIString.LocalizedString,\n    },\n    reminderItems: Array<{\n      iconName: string,\n      content: Platform.UIString.LocalizedString|Lit.LitTemplate,\n    }>,\n    onLearnMoreClick: () => void,\n    ariaLabel?: string,\n    learnMoreButtonTitle?: string,\n    learnMoreButtonAriaLabel?: string,\n  }): Promise<boolean> {\n    const dialog = new UI.Dialog.Dialog();\n    if (ariaLabel) {\n      dialog.setAriaLabel(ariaLabel);\n    }\n    const result = Promise.withResolvers<boolean>();\n    // clang-format off\n    Lit.render(html`\n      <div class=\"fre-disclaimer\">\n        <style>\n          ${styles}\n        </style>\n        <header>\n          <div class=\"header-icon-container\">\n            <devtools-icon name=${header.iconName}></devtools-icon>\n          </div>\n          <h2 tabindex=\"-1\">\n            ${header.text}\n          </h2>\n        </header>\n        <main class=\"reminder-container\">\n          <h3>${i18nString(UIStrings.thingsToConsider)}</h3>\n          ${reminderItems.map(reminderItem => html`\n            <div class=\"reminder-item\">\n              <devtools-icon class=\"reminder-icon\" name=${reminderItem.iconName}></devtools-icon>\n              <span>${reminderItem.content}</span>\n            </div>\n          `)}\n        </main>\n        <footer>\n          <devtools-button\n            @click=${onLearnMoreClick}\n            .jslogContext=${'fre-disclaimer.learn-more'}\n            .variant=${Buttons.Button.Variant.OUTLINED}\n            aria-label=${ifDefined(learnMoreButtonAriaLabel)}>\n            ${learnMoreButtonTitle ?? i18nString(UIStrings.learnMore)}\n          </devtools-button>\n          <div class=\"right-buttons\">\n            <devtools-button\n              @click=${() => {\n                // The order of operations are important here as hiding the dialog by\n                // itself causes the promise to be resolved with `false` in `onHideCallback`.\n                result.resolve(false);\n                dialog.hide();\n              }}\n              .jslogContext=${'fre-disclaimer.cancel'}\n              .variant=${Buttons.Button.Variant.TONAL}>\n              ${i18nString(UIStrings.cancel)}\n            </devtools-button>\n            <devtools-button\n              @click=${() => {\n                // The order of operations are important here as hiding the dialog by\n                // itself causes the promise to be resolved with `false` in `onHideCallback`.\n                result.resolve(true);\n                dialog.hide();\n              }}\n              .jslogContext=${'fre-disclaimer.continue'}\n              .variant=${Buttons.Button.Variant.PRIMARY}>\n              ${i18nString(UIStrings.gotIt)}\n            </devtools-button>\n          </div>\n        </footer>\n      </div>`, dialog.contentElement);\n    // clang-format on\n\n    dialog.setOutsideClickCallback(ev => {\n      ev.consume(true);  // true = preventDefault()\n      dialog.hide();\n      result.resolve(false);\n    });\n\n    // This ensures that if the dialog gets hidden for any unexpected reason,\n    // or if the user goes to another panel and comes back, that we resolve\n    // rather than leave the promise dangling.\n    dialog.setOnHideCallback(() => {\n      result.resolve(false);\n    });\n\n    dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.MEASURE_CONTENT);\n    dialog.setDimmed(true);\n    dialog.show();\n\n    return result.promise;\n  }\n\n  private constructor() {\n  }\n}\n"]}