{"version":3,"file":"ConsoleViewMessage.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/console/ConsoleViewMessage.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {\n  createConsoleViewMessageWithStubDeps,\n  createStackTrace,\n} from '../../testing/ConsoleHelpers.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Console from './console.js';\n// The css files aren't exported by the bundle, so we need to import it directly.\n// eslint-disable-next-line rulesdir/es-modules-import\nimport consoleViewStyles from './consoleView.css.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\ndescribe('ConsoleViewMessage', () => {\n  describe('concatErrorDescriptionAndIssueSummary', () => {\n    const {concatErrorDescriptionAndIssueSummary} = Console.ConsoleViewMessage;\n\n    it('correctly appends the issue summary in case of single line error descriptions', () => {\n      assert.strictEqual(\n          concatErrorDescriptionAndIssueSummary(\n              'TypeError: Failed to fetch',\n              'Access blocked by CORS policy: Cross origin requests are not allowed by request mode.'),\n          'TypeError: Failed to fetch. Access blocked by CORS policy: Cross origin requests are not allowed by request mode.',\n      );\n    });\n\n    it('correctly inserts the issue summary in case of multi-line error descriptions', () => {\n      assert.strictEqual(\n          concatErrorDescriptionAndIssueSummary(\n              'TypeError: Failed to fetch\\n  at (index):25:5',\n              'Access blocked by CORS policy: Cross origin requests are not allowed by request mode.'),\n          'TypeError: Failed to fetch. Access blocked by CORS policy: Cross origin requests are not allowed by request mode.\\n  at (index):25:5',\n      );\n    });\n  });\n});\n\ndescribeWithMockConnection('ConsoleViewMessage', () => {\n  describe('anchor rendering', () => {\n    it('links to the top frame for normal console message', () => {\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const stackTrace = createStackTrace([\n        'USER_ID::userNestedFunction::http://example.com/script.js::40::15',\n        'USER_ID::userFunction::http://example.com/script.js::10::2',\n        'APP_ID::entry::http://example.com/app.js::25::10',\n      ]);\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n        stackTrace,\n      };\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, /* level */ null, 'got here', messageDetails);\n      const {message, linkifier} = createConsoleViewMessageWithStubDeps(rawMessage);\n\n      message.toMessageElement();  // Trigger rendering.\n\n      sinon.assert.calledOnceWithExactly(linkifier.linkifyStackTraceTopFrame, target, stackTrace);\n    });\n\n    it('links to the frame with the logpoint/breakpoint if the stack trace contains the \"marker sourceURL\"', () => {\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const stackTrace = createStackTrace([\n        `LOG_ID::eval::${SDK.DebuggerModel.LOGPOINT_SOURCE_URL}::0::15`,\n        'USER_ID::userFunction::http://example.com/script.js::10::2',\n        'APP_ID::entry::http://example.com/app.js::25::10',\n      ]);\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n        stackTrace,\n      };\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, /* level */ null, 'value of x is 42',\n          messageDetails);\n      const {message, linkifier} = createConsoleViewMessageWithStubDeps(rawMessage);\n\n      message.toMessageElement();  // Trigger rendering.\n\n      const expectedCallFrame = stackTrace.callFrames[1];  // userFunction.\n      sinon.assert.calledOnceWithExactly(\n          linkifier.maybeLinkifyConsoleCallFrame, target, expectedCallFrame,\n          {inlineFrameIndex: 0, revealBreakpoint: true, userMetric: undefined});\n    });\n\n    it('uses the last \"marker sourceURL\" frame when searching for the breakpoint/logpoint frame', () => {\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const stackTrace = createStackTrace([\n        `LOG_ID::leakedClosure::${SDK.DebuggerModel.LOGPOINT_SOURCE_URL}::2::3`,\n        'USER_ID::callback::http://example.com/script.js::5::42',\n        `LOG_ID::eval::${SDK.DebuggerModel.LOGPOINT_SOURCE_URL}::0::15`,\n        'USER_ID::userFunction::http://example.com/script.js::10::2',\n        'APP_ID::entry::http://example.com/app.js::25::10',\n      ]);\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n        stackTrace,\n      };\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, /* level */ null, 'value of x is 42',\n          messageDetails);\n      const {message, linkifier} = createConsoleViewMessageWithStubDeps(rawMessage);\n\n      message.toMessageElement();  // Trigger rendering.\n\n      const expectedCallFrame = stackTrace.callFrames[3];  // userFunction.\n      sinon.assert.calledOnceWithExactly(\n          linkifier.maybeLinkifyConsoleCallFrame, target, expectedCallFrame,\n          {inlineFrameIndex: 0, revealBreakpoint: true, userMetric: undefined});\n    });\n  });\n\n  describe('console insights', () => {\n    it('shows a hover button', () => {\n      sinon.stub(UI.ActionRegistry.ActionRegistry.instance(), 'hasAction')\n          .withArgs('explain.console-message.hover')\n          .returns(true);\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, Protocol.Log.LogEntryLevel.Error, 'got here');\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const messageElement = message.toMessageElement();  // Trigger rendering.\n      const button = messageElement.querySelector('[aria-label=\\'Understand this error. Powered by AI.\\']');\n      assert.strictEqual(button?.textContent, 'Understand this error');\n    });\n\n    it('does not show a hover button if the console message text is empty', () => {\n      sinon.stub(UI.ActionRegistry.ActionRegistry.instance(), 'hasAction')\n          .withArgs('explain.console-message.hover')\n          .returns(true);\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, Protocol.Log.LogEntryLevel.Error, '');\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const messageElement = message.toMessageElement();  // Trigger rendering.\n      const button = messageElement.querySelector('[aria-label=\\'Understand this error. Powered by AI.\\']');\n      assert.isNull(button);\n    });\n\n    it('does not show a hover button for the self-XSS warning message', () => {\n      sinon.stub(UI.ActionRegistry.ActionRegistry.instance(), 'hasAction')\n          .withArgs('explain.console-message.hover')\n          .returns(true);\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.SELF_XSS, Protocol.Log.LogEntryLevel.Warning,\n          'Don’t paste code...');\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const messageElement = message.toMessageElement();  // Trigger rendering.\n      const button = messageElement.querySelector('[aria-label=\\'Understand this warning. Powered by AI.\\']');\n      assert.isNull(button);\n    });\n  });\n\n  describe('with ignore listing', () => {\n    const IGNORE_LIST_LINK = 'ignore-list-link';\n\n    function findStackPreviewContainer(element: HTMLElement) {\n      const outer = element.querySelector('span.stack-preview-container');\n      assert.isNotNull(outer);\n      const inner = outer.shadowRoot;\n      assert.isNotNull(inner);\n      return inner;\n    }\n\n    function findLinks(element: HTMLElement) {\n      const root = findStackPreviewContainer(element);\n      const showAll = root.querySelector('.show-all-link');\n      assert.isNotNull(showAll);\n      const showLess = root.querySelector('.show-less-link');\n      assert.isNotNull(showLess);\n      return {showAll, showLess};\n    }\n\n    function assertNoLinks(element: HTMLElement) {\n      const {showAll, showLess} = findLinks(element);\n      assert.isFalse(showAll.checkVisibility());\n      assert.isFalse(showLess.checkVisibility());\n    }\n\n    function assertShowAllLink(element: HTMLElement) {\n      const {showAll, showLess} = findLinks(element);\n      assert.isTrue(showAll.checkVisibility());\n      assert.isFalse(showLess.checkVisibility());\n    }\n\n    function assertShowLessLink(element: HTMLElement) {\n      const {showAll, showLess} = findLinks(element);\n      assert.isFalse(showAll.checkVisibility());\n      assert.isTrue(showLess.checkVisibility());\n    }\n\n    function errorMessageForStack(stack: Protocol.Runtime.StackTrace, withBuiltinFrames?: boolean) {\n      const lines = [\n        'Error:',\n        ...(stack.callFrames.flatMap(frame => {\n          const line = `    at ${frame.functionName} (${frame.url}:${frame.lineNumber}:${frame.columnNumber})`;\n          if (withBuiltinFrames) {\n            return [line, '    at JSON.parse (<anonymous>)'];\n          }\n          return [line];\n        })),\n      ];\n      return lines.join('\\n');\n    }\n\n    function getCallFrames(element: HTMLElement): string[] {\n      const results = [];\n      for (const line of element.querySelectorAll('.formatted-stack-frame,.formatted-builtin-stack-frame')) {\n        if (line.checkVisibility()) {\n          results.push(line.textContent ?? 'Error: line was null or undefined');\n        }\n      }\n      return results;\n    }\n\n    function getStructuredCallFrames(element: HTMLElement): string[] {\n      const results = [];\n      for (const line of findStackPreviewContainer(element).querySelectorAll('tbody tr')) {\n        if (line.checkVisibility()) {\n          results.push(line.textContent ?? 'Error: line was null or undefined');\n        }\n      }\n      return results;\n    }\n\n    function expandStructuredTrace(element: HTMLElement) {\n      (element.querySelector('.console-message-stack-trace-wrapper > div') as HTMLElement).click();\n    }\n\n    function expandIgnored(element: HTMLElement) {\n      const {showAll} = findLinks(element);\n      (showAll.querySelector('.link') as HTMLElement).click();\n    }\n\n    function collapseIgnored(element: HTMLElement) {\n      const {showLess} = findLinks(element);\n      (showLess.querySelector('.link') as HTMLElement).click();\n    }\n\n    async function createConsoleMessageWithIgnoreListing(\n        ignoreListFn: (url: string) => Boolean, withBuiltinFrames?: boolean): Promise<HTMLElement> {\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const stackTrace = createStackTrace([\n        'USER_ID::userNestedFunction::http://example.com/script.js::40::15',\n        'USER_ID::userFunction::http://example.com/script.js::10::2',\n        'APP_ID::entry::http://example.com/app.js::25::10',\n      ]);\n      const stackTraceMessage = errorMessageForStack(stackTrace, withBuiltinFrames);\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Error,\n        stackTrace,\n        parameters: [{\n          type: 'object',\n          subtype: 'error',\n          className: 'Error',\n          description: stackTraceMessage,\n        } as Protocol.Runtime.RemoteObject],\n      };\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, Protocol.Log.LogEntryLevel.Error,\n          stackTraceMessage, messageDetails);\n      const {message, linkifier} = createConsoleViewMessageWithStubDeps(rawMessage);\n\n      linkifier.linkifyScriptLocation.callsFake((target, scriptId, sourceURL, lineNumber, options) => {\n        const link = Components.Linkifier.Linkifier.linkifyURL(sourceURL, {lineNumber, ...options});\n        if (ignoreListFn(sourceURL)) {\n          link.classList.add(IGNORE_LIST_LINK);\n        }\n        return link;\n      });\n      linkifier.maybeLinkifyConsoleCallFrame.callsFake((target, callFrame, options) => {\n        const link = Components.Linkifier.Linkifier.linkifyURL(\n            urlString`${callFrame.url}`, {lineNumber: callFrame.lineNumber, ...options});\n        if (ignoreListFn(callFrame.url)) {\n          link.classList.add(IGNORE_LIST_LINK);\n        }\n        return link;\n      });\n      const element = message.toMessageElement();  // Trigger rendering.\n      await message.formatErrorStackPromiseForTest();\n\n      const wrapperElement = document.createElement('div');\n      const shadowElement = UI.UIUtils.createShadowRootWithCoreStyles(wrapperElement, {cssFile: consoleViewStyles});\n      shadowElement.appendChild(element);\n      renderElementIntoDOM(wrapperElement);\n      assert.isTrue(element.checkVisibility());\n      return element;\n    }\n\n    const EXPANDED_UNSTRUCTURED = [\n      '    at userNestedFunction (/script.js:40:15)\\n',\n      '    at userFunction (/script.js:10:2)\\n',\n      '    at entry (/app.js:25:10)',\n    ];\n    const COLLAPSED_UNSTRUCTURED = [\n      '    at userNestedFunction (/script.js:40:15)\\n',\n      '    at userFunction (/script.js:10:2)\\n',\n    ];\n    const EXPANDED_UNSTRUCTURED_WITH_BUILTIN = [\n      '    at userNestedFunction (/script.js:40:15)\\n',\n      '    at JSON.parse (<anonymous>)\\n',\n      '    at userFunction (/script.js:10:2)\\n',\n      '    at JSON.parse (<anonymous>)\\n',\n      '    at entry (/app.js:25:10)\\n',\n      '    at JSON.parse (<anonymous>)',\n    ];\n    const COLLAPSED_UNSTRUCTURED_WITH_BUILTIN = [\n      '    at userNestedFunction (/script.js:40:15)\\n',\n      '    at JSON.parse (<anonymous>)\\n',\n      '    at userFunction (/script.js:10:2)\\n',\n      '    at JSON.parse (<anonymous>)\\n',\n    ];\n    const EXPANDED_STRUCTURED = [\n      '\\nuserNestedFunction @ example.com/script.js:41',\n      '\\nuserFunction @ example.com/script.js:11',\n      '\\nentry @ example.com/app.js:26',\n    ];\n    const COLLAPSED_STRUCTURED = [\n      '\\nuserNestedFunction @ example.com/script.js:41',\n      '\\nuserFunction @ example.com/script.js:11',\n    ];\n\n    it('shows everything with no links when nothing is ignore listed', async () => {\n      const element = await createConsoleMessageWithIgnoreListing(_ => false);\n      assertNoLinks(element);\n      assert.deepEqual(getCallFrames(element), EXPANDED_UNSTRUCTURED);\n      assert.deepEqual(getStructuredCallFrames(element), []);\n      expandStructuredTrace(element);\n      assertNoLinks(element);\n      assert.deepEqual(getStructuredCallFrames(element), EXPANDED_STRUCTURED);\n    });\n\n    it('shows everything with no links when everything is ignore listed', async () => {\n      const element = await createConsoleMessageWithIgnoreListing(_ => true);\n      assertNoLinks(element);\n      assert.deepEqual(getCallFrames(element), EXPANDED_UNSTRUCTURED);\n      assert.deepEqual(getStructuredCallFrames(element), []);\n      expandStructuredTrace(element);\n      assertNoLinks(element);\n      assert.deepEqual(getStructuredCallFrames(element), EXPANDED_STRUCTURED);\n    });\n\n    it('shows expandable list when something is ignore listed', async () => {\n      const element = await createConsoleMessageWithIgnoreListing(url => url.includes('/app.js'));\n      assertShowAllLink(element);\n      assert.deepEqual(getStructuredCallFrames(element), []);\n      assert.deepEqual(getCallFrames(element), COLLAPSED_UNSTRUCTURED);\n      expandIgnored(element);\n      assertShowLessLink(element);\n      assert.deepEqual(getCallFrames(element), EXPANDED_UNSTRUCTURED);\n      collapseIgnored(element);\n      assertShowAllLink(element);\n\n      expandStructuredTrace(element);\n\n      assertShowAllLink(element);\n      assert.deepEqual(getStructuredCallFrames(element), COLLAPSED_STRUCTURED);\n      assert.deepEqual(getCallFrames(element), COLLAPSED_UNSTRUCTURED);\n      expandIgnored(element);\n      assertShowLessLink(element);\n      assert.deepEqual(getCallFrames(element), EXPANDED_UNSTRUCTURED);\n      assert.deepEqual(getStructuredCallFrames(element), EXPANDED_STRUCTURED);\n      collapseIgnored(element);\n      assertShowAllLink(element);\n      assert.deepEqual(getStructuredCallFrames(element), COLLAPSED_STRUCTURED);\n      assert.deepEqual(getCallFrames(element), COLLAPSED_UNSTRUCTURED);\n    });\n\n    it('shows everything with no links when nothing is ignore listed, including builtin frames', async () => {\n      const element = await createConsoleMessageWithIgnoreListing(_ => false, true);\n      assertNoLinks(element);\n      assert.deepEqual(getCallFrames(element), EXPANDED_UNSTRUCTURED_WITH_BUILTIN);\n      assert.deepEqual(getStructuredCallFrames(element), []);\n      expandStructuredTrace(element);\n      assertNoLinks(element);\n      assert.deepEqual(getStructuredCallFrames(element), EXPANDED_STRUCTURED);\n    });\n\n    it('shows everything with no links when everything is ignore listed, including builtin frames', async () => {\n      const element = await createConsoleMessageWithIgnoreListing(_ => true, true);\n      assertNoLinks(element);\n      assert.deepEqual(getCallFrames(element), EXPANDED_UNSTRUCTURED_WITH_BUILTIN);\n      assert.deepEqual(getStructuredCallFrames(element), []);\n      expandStructuredTrace(element);\n      assertNoLinks(element);\n      assert.deepEqual(getStructuredCallFrames(element), EXPANDED_STRUCTURED);\n    });\n\n    it('shows expandable list when something is ignore listed, collapsing builtin frames', async () => {\n      const element = await createConsoleMessageWithIgnoreListing(url => url.includes('/app.js'), true);\n      assertShowAllLink(element);\n      assert.deepEqual(getStructuredCallFrames(element), []);\n      assert.deepEqual(getCallFrames(element), COLLAPSED_UNSTRUCTURED_WITH_BUILTIN);\n      expandIgnored(element);\n      assertShowLessLink(element);\n      assert.deepEqual(getCallFrames(element), EXPANDED_UNSTRUCTURED_WITH_BUILTIN);\n      collapseIgnored(element);\n      assertShowAllLink(element);\n\n      expandStructuredTrace(element);\n\n      assertShowAllLink(element);\n      assert.deepEqual(getStructuredCallFrames(element), COLLAPSED_STRUCTURED);\n      assert.deepEqual(getCallFrames(element), COLLAPSED_UNSTRUCTURED_WITH_BUILTIN);\n      expandIgnored(element);\n      assertShowLessLink(element);\n      assert.deepEqual(getCallFrames(element), EXPANDED_UNSTRUCTURED_WITH_BUILTIN);\n      assert.deepEqual(getStructuredCallFrames(element), EXPANDED_STRUCTURED);\n      collapseIgnored(element);\n      assertShowAllLink(element);\n      assert.deepEqual(getStructuredCallFrames(element), COLLAPSED_STRUCTURED);\n      assert.deepEqual(getCallFrames(element), COLLAPSED_UNSTRUCTURED_WITH_BUILTIN);\n    });\n  });\n});\n"]}