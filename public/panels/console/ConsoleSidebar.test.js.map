{"version":3,"file":"ConsoleSidebar.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/console/ConsoleSidebar.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {createViewFunctionStub, type ViewFunctionStub} from '../../testing/ViewFunctionHelpers.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\n\nimport * as Console from './console.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\nfunction addMessage(\n    sidebar: Console.ConsoleSidebar.ConsoleSidebar, level: Protocol.Log.LogEntryLevel, text: string,\n    url: Platform.DevToolsPath.UrlString): Console.ConsoleViewMessage.ConsoleViewMessage {\n  const message = new SDK.ConsoleModel.ConsoleMessage(null, Protocol.Log.LogEntrySource.Javascript, level, text, {url});\n\n  const consoleViewMessage = new Console.ConsoleViewMessage.ConsoleViewMessage(\n      message, sinon.createStubInstance(Components.Linkifier.Linkifier),\n      sinon.createStubInstance(Logs.RequestResolver.RequestResolver),\n      sinon.createStubInstance(IssuesManager.IssueResolver.IssueResolver), () => {});\n\n  sidebar.onMessageAdded(consoleViewMessage);\n  return consoleViewMessage;\n}\n\nasync function getGroups(view: ViewFunctionStub<typeof Console.ConsoleSidebar.ConsoleSidebar>):\n    Promise<Record<string, {count: number, urls?: Record<string, number>}>> {\n  const input = await view.nextInput;\n  return Object.fromEntries(\n      input.groups.map(group => [group.name, {\n                         count: group.messageCount,\n                         urls: Object.fromEntries(group.urlGroups.entries().map(([title, {count}]) => ([title, count])))\n                       }]));\n}\n\ndescribeWithMockConnection('ConsoleSidebar', () => {\n  it('groups logs by URL', async () => {\n    const view = createViewFunctionStub(Console.ConsoleSidebar.ConsoleSidebar);\n    const sidebar = new Console.ConsoleSidebar.ConsoleSidebar(undefined, view);\n    addMessage(sidebar, Protocol.Log.LogEntryLevel.Info, 'message 1', urlString`https://www.example.com/a.html`);\n    addMessage(sidebar, Protocol.Log.LogEntryLevel.Info, 'message 2', urlString`https://www.example.com/b.html`);\n    addMessage(sidebar, Protocol.Log.LogEntryLevel.Info, 'message 3', urlString`https://www.example.com/a.html`);\n    assert.deepEqual(await getGroups(view), {\n      error: {count: 0, urls: {}},\n      info: {\n        count: 3,\n        urls: {\n          'https://www.example.com/a.html': 2,\n          'https://www.example.com/b.html': 1,\n        }\n      },\n      message: {\n        count: 3,\n        urls: {\n          'https://www.example.com/a.html': 2,\n          'https://www.example.com/b.html': 1,\n        }\n      },\n      'user message': {count: 0, urls: {}},\n      verbose: {count: 0, urls: {}},\n      warning: {count: 0, urls: {}},\n    });\n  });\n\n  it('groups logs by level', async () => {\n    const view = createViewFunctionStub(Console.ConsoleSidebar.ConsoleSidebar);\n    const sidebar = new Console.ConsoleSidebar.ConsoleSidebar(undefined, view);\n    addMessage(sidebar, Protocol.Log.LogEntryLevel.Verbose, 'message 1', urlString`https://www.example.com/a.html`);\n    addMessage(sidebar, Protocol.Log.LogEntryLevel.Error, 'message 2', urlString`https://www.example.com/b.html`);\n    addMessage(sidebar, Protocol.Log.LogEntryLevel.Error, 'message 3', urlString`https://www.example.com/a.html`);\n    assert.deepEqual(await getGroups(view), {\n      error: {count: 2, urls: {'https://www.example.com/a.html': 1, 'https://www.example.com/b.html': 1}},\n      info: {count: 0, urls: {}},\n      message: {count: 3, urls: {'https://www.example.com/a.html': 2, 'https://www.example.com/b.html': 1}},\n      'user message': {count: 0, urls: {}},\n      verbose: {count: 1, urls: {'https://www.example.com/a.html': 1}},\n      warning: {count: 0, urls: {}}\n    });\n  });\n\n  it('filters by groups', async () => {\n    const view = createViewFunctionStub(Console.ConsoleSidebar.ConsoleSidebar);\n    const sidebar = new Console.ConsoleSidebar.ConsoleSidebar(undefined, view);\n    const messages = [\n      addMessage(sidebar, Protocol.Log.LogEntryLevel.Verbose, 'message 1', urlString`https://www.example.com/a.html`),\n      addMessage(sidebar, Protocol.Log.LogEntryLevel.Error, 'message 2', urlString`https://www.example.com/b.html`),\n      addMessage(sidebar, Protocol.Log.LogEntryLevel.Error, 'message 3', urlString`https://www.example.com/a.html`),\n    ];\n    const input = await view.nextInput;\n\n    const filter = input.groups.find(group => group.name === 'error')?.filter;\n    assert.exists(filter);\n    const filterSelected = sinon.stub();\n    sidebar.addEventListener(Console.ConsoleSidebar.Events.FILTER_SELECTED, filterSelected);\n    input.onSelectionChanged(filter);\n    sinon.assert.calledOnce(filterSelected);\n\n    assert.deepEqual(messages.map(message => sidebar.shouldBeVisible(message)), [false, true, true]);\n  });\n\n  it('allows clearing messages', async () => {\n    const view = createViewFunctionStub(Console.ConsoleSidebar.ConsoleSidebar);\n    const sidebar = new Console.ConsoleSidebar.ConsoleSidebar(undefined, view);\n    addMessage(sidebar, Protocol.Log.LogEntryLevel.Verbose, 'message 1', urlString`https://www.example.com/a.html`);\n    assert.deepEqual(await getGroups(view), {\n      error: {count: 0, urls: {}},\n      info: {count: 0, urls: {}},\n      message: {count: 1, urls: {'https://www.example.com/a.html': 1}},\n      'user message': {count: 0, urls: {}},\n      verbose: {count: 1, urls: {'https://www.example.com/a.html': 1}},\n      warning: {count: 0, urls: {}}\n    });\n\n    sidebar.clear();\n    assert.deepEqual(await getGroups(view), {\n      error: {count: 0, urls: {}},\n      info: {count: 0, urls: {}},\n      message: {count: 0, urls: {}},\n      'user message': {count: 0, urls: {}},\n      verbose: {count: 0, urls: {}},\n      warning: {count: 0, urls: {}}\n    });\n  });\n});\n"]}