{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/console/ConsoleContextSelector.ts", "consoleContextSelector.css.js", "../../../../../../front_end/panels/console/ConsoleFilter.ts", "../../../../../../front_end/panels/console/ConsoleFormat.ts", "../../../../../../front_end/panels/console/ConsolePinPane.ts", "../../ui/legacy/components/object_ui/objectValue.css.js", "consolePinPane.css.js", "../../../../../../front_end/panels/console/ConsoleSidebar.ts", "consoleSidebar.css.js", "../../../../../../front_end/panels/console/ConsoleViewport.ts", "../../../../../../front_end/panels/console/ConsoleViewMessage.ts", "consoleView.css.js", "../../../../../../front_end/panels/console/ErrorStackParser.ts", "../../../../../../front_end/panels/console/ConsolePrompt.ts", "../../../../../../front_end/panels/console/ConsolePanel.ts", "../../../../../../front_end/panels/console/ConsoleView.ts", "consolePrompt.css.js"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport consoleContextSelectorStyles from './consoleContextSelector.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of toolbar item in console context selector of the console panel\n   */\n  javascriptContextNotSelected: 'JavaScript context: Not selected',\n  /**\n   * @description Text in Console Context Selector of the Console panel\n   */\n  extension: 'Extension',\n  /**\n   * @description Text in Console Context Selector of the Console panel\n   * @example {top} PH1\n   */\n  javascriptContextS: 'JavaScript context: {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/console/ConsoleContextSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ConsoleContextSelector implements SDK.TargetManager.SDKModelObserver<SDK.RuntimeModel.RuntimeModel>,\n                                               UI.SoftDropDown.Delegate<SDK.RuntimeModel.ExecutionContext> {\n  readonly items: UI.ListModel.ListModel<SDK.RuntimeModel.ExecutionContext>;\n  private readonly dropDown: UI.SoftDropDown.SoftDropDown<SDK.RuntimeModel.ExecutionContext>;\n  private readonly toolbarItemInternal: UI.Toolbar.ToolbarItem;\n\n  constructor() {\n    this.items = new UI.ListModel.ListModel();\n    this.dropDown = new UI.SoftDropDown.SoftDropDown(this.items, this, 'javascript-context');\n    this.dropDown.setRowHeight(36);\n    this.toolbarItemInternal = new UI.Toolbar.ToolbarItem(this.dropDown.element);\n    this.toolbarItemInternal.setEnabled(false);\n    this.toolbarItemInternal.setTitle(i18nString(UIStrings.javascriptContextNotSelected));\n    this.items.addEventListener(\n        UI.ListModel.Events.ITEMS_REPLACED, () => this.toolbarItemInternal.setEnabled(Boolean(this.items.length)));\n\n    this.toolbarItemInternal.element.classList.add('toolbar-has-dropdown');\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.RuntimeModel.RuntimeModel, SDK.RuntimeModel.Events.ExecutionContextCreated, this.onExecutionContextCreated,\n        this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.RuntimeModel.RuntimeModel, SDK.RuntimeModel.Events.ExecutionContextChanged, this.onExecutionContextChanged,\n        this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.RuntimeModel.RuntimeModel, SDK.RuntimeModel.Events.ExecutionContextDestroyed,\n        this.onExecutionContextDestroyed, this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.FrameNavigated, this.frameNavigated, this,\n        {scoped: true});\n\n    UI.Context.Context.instance().addFlavorChangeListener(\n        SDK.RuntimeModel.ExecutionContext, this.executionContextChangedExternally, this);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        SDK.DebuggerModel.CallFrame, this.callFrameSelectedInUI, this);\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.RuntimeModel.RuntimeModel, this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.CallFrameSelected, this.callFrameSelectedInModel,\n        this);\n  }\n\n  toolbarItem(): UI.Toolbar.ToolbarItem {\n    return this.toolbarItemInternal;\n  }\n\n  highlightedItemChanged(\n      _from: SDK.RuntimeModel.ExecutionContext|null, to: SDK.RuntimeModel.ExecutionContext|null,\n      fromElement: Element|null, toElement: Element|null): void {\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    if (to?.frameId) {\n      const frame = SDK.FrameManager.FrameManager.instance().getFrame(to.frameId);\n      if (frame && !frame.isOutermostFrame()) {\n        void frame.highlight();\n      }\n    }\n    if (fromElement) {\n      fromElement.classList.remove('highlighted');\n    }\n    if (toElement) {\n      toElement.classList.add('highlighted');\n    }\n  }\n\n  titleFor(executionContext: SDK.RuntimeModel.ExecutionContext): string {\n    const target = executionContext.target();\n    const maybeLabel = executionContext.label();\n    let label: string = maybeLabel ? target.decorateLabel(maybeLabel) : '';\n    if (executionContext.frameId) {\n      const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      const frame = resourceTreeModel?.frameForId(executionContext.frameId);\n      if (frame) {\n        label = label || frame.displayName();\n      }\n    }\n    label = label || executionContext.origin;\n\n    return label;\n  }\n\n  private depthFor(executionContext: SDK.RuntimeModel.ExecutionContext): number {\n    let target = executionContext.target();\n    let depth = 0;\n    if (!executionContext.isDefault) {\n      depth++;\n    }\n    if (executionContext.frameId) {\n      let frame = SDK.FrameManager.FrameManager.instance().getFrame(executionContext.frameId);\n      while (frame) {\n        frame = frame.parentFrame();\n        if (frame) {\n          depth++;\n          target = frame.resourceTreeModel().target();\n        }\n      }\n    }\n    let targetDepth = 0;\n    let parentTarget = target.parentTarget();\n    // Special casing service workers to be top-level.\n    while (parentTarget && target.type() !== SDK.Target.Type.ServiceWorker) {\n      targetDepth++;\n      target = parentTarget;\n      parentTarget = target.parentTarget();\n    }\n    depth += targetDepth;\n    return depth;\n  }\n\n  private executionContextCreated(executionContext: SDK.RuntimeModel.ExecutionContext): void {\n    this.items.insertWithComparator(executionContext, executionContext.runtimeModel.executionContextComparator());\n\n    if (executionContext === UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext)) {\n      this.dropDown.selectItem(executionContext);\n    }\n  }\n\n  private onExecutionContextCreated(event: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext>):\n      void {\n    const executionContext = event.data;\n    this.executionContextCreated(executionContext);\n  }\n\n  private onExecutionContextChanged(event: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext>):\n      void {\n    const executionContext = event.data;\n    if (this.items.indexOf(executionContext) === -1) {\n      return;\n    }\n    this.executionContextDestroyed(executionContext);\n    this.executionContextCreated(executionContext);\n  }\n\n  private executionContextDestroyed(executionContext: SDK.RuntimeModel.ExecutionContext): void {\n    const index = this.items.indexOf(executionContext);\n    if (index === -1) {\n      return;\n    }\n    this.items.remove(index);\n  }\n\n  private onExecutionContextDestroyed(event: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext>):\n      void {\n    const executionContext = event.data;\n    this.executionContextDestroyed(executionContext);\n  }\n\n  private executionContextChangedExternally({\n    data: executionContext,\n  }: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext|null>): void {\n    if (executionContext && !SDK.TargetManager.TargetManager.instance().isInScope(executionContext.target())) {\n      return;\n    }\n    this.dropDown.selectItem(executionContext);\n  }\n\n  private isTopContext(executionContext: SDK.RuntimeModel.ExecutionContext|null): boolean {\n    if (!executionContext?.isDefault) {\n      return false;\n    }\n    const resourceTreeModel = executionContext.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n    const frame = executionContext.frameId && resourceTreeModel?.frameForId(executionContext.frameId);\n    if (!frame) {\n      return false;\n    }\n    return frame.isOutermostFrame();\n  }\n\n  private hasTopContext(): boolean {\n    return this.items.some(executionContext => this.isTopContext(executionContext));\n  }\n\n  modelAdded(runtimeModel: SDK.RuntimeModel.RuntimeModel): void {\n    runtimeModel.executionContexts().forEach(this.executionContextCreated, this);\n  }\n\n  modelRemoved(runtimeModel: SDK.RuntimeModel.RuntimeModel): void {\n    for (let i = this.items.length - 1; i >= 0; i--) {\n      if (this.items.at(i).runtimeModel === runtimeModel) {\n        this.executionContextDestroyed(this.items.at(i));\n      }\n    }\n  }\n\n  createElementForItem(item: SDK.RuntimeModel.ExecutionContext): Element {\n    const element = document.createElement('div');\n    const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(element, {cssFile: consoleContextSelectorStyles});\n    const title = shadowRoot.createChild('div', 'title');\n    UI.UIUtils.createTextChild(title, Platform.StringUtilities.trimEndWithMaxLength(this.titleFor(item), 100));\n    const subTitle = shadowRoot.createChild('div', 'subtitle');\n    UI.UIUtils.createTextChild(subTitle, this.subtitleFor(item));\n    element.style.paddingLeft = (8 + this.depthFor(item) * 15) + 'px';\n    return element;\n  }\n\n  private subtitleFor(executionContext: SDK.RuntimeModel.ExecutionContext): string {\n    const target = executionContext.target();\n    let frame: SDK.ResourceTreeModel.ResourceTreeFrame|null = null;\n    if (executionContext.frameId) {\n      const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      frame = resourceTreeModel?.frameForId(executionContext.frameId) ?? null;\n    }\n    if (Common.ParsedURL.schemeIs(executionContext.origin, 'chrome-extension:')) {\n      return i18nString(UIStrings.extension);\n    }\n    const sameTargetParentFrame = frame?.sameTargetParentFrame();\n    // TODO(crbug.com/1159332): Understand why condition involves the sameTargetParentFrame.\n    if (!frame || !sameTargetParentFrame || sameTargetParentFrame.securityOrigin !== executionContext.origin) {\n      const url = Common.ParsedURL.ParsedURL.fromString(executionContext.origin);\n      if (url) {\n        return url.domain();\n      }\n    }\n\n    if (frame?.securityOrigin) {\n      const domain = new Common.ParsedURL.ParsedURL(frame.securityOrigin).domain();\n      if (domain) {\n        return domain;\n      }\n    }\n    return 'IFrame';\n  }\n\n  isItemSelectable(item: SDK.RuntimeModel.ExecutionContext): boolean {\n    const callFrame = item.debuggerModel.selectedCallFrame();\n    const callFrameContext = callFrame?.script.executionContext();\n    return !callFrameContext || item === callFrameContext;\n  }\n\n  itemSelected(item: SDK.RuntimeModel.ExecutionContext|null): void {\n    this.toolbarItemInternal.element.classList.toggle('highlight', !this.isTopContext(item) && this.hasTopContext());\n    const title = item ? i18nString(UIStrings.javascriptContextS, {PH1: this.titleFor(item)}) :\n                         i18nString(UIStrings.javascriptContextNotSelected);\n    this.toolbarItemInternal.setTitle(title);\n    UI.Context.Context.instance().setFlavor(SDK.RuntimeModel.ExecutionContext, item);\n  }\n\n  private callFrameSelectedInUI(): void {\n    const callFrame = UI.Context.Context.instance().flavor(SDK.DebuggerModel.CallFrame);\n    const callFrameContext = callFrame?.script.executionContext();\n    if (callFrameContext) {\n      UI.Context.Context.instance().setFlavor(SDK.RuntimeModel.ExecutionContext, callFrameContext);\n    }\n  }\n\n  private callFrameSelectedInModel(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    const debuggerModel = event.data;\n    for (const executionContext of this.items) {\n      if (executionContext.debuggerModel === debuggerModel) {\n        this.dropDown.refreshItem(executionContext);\n      }\n    }\n  }\n\n  private frameNavigated(event: Common.EventTarget.EventTargetEvent<SDK.ResourceTreeModel.ResourceTreeFrame>): void {\n    const frame = event.data;\n    const runtimeModel = frame.resourceTreeModel().target().model(SDK.RuntimeModel.RuntimeModel);\n    if (!runtimeModel) {\n      return;\n    }\n    for (const executionContext of runtimeModel.executionContexts()) {\n      if (frame.id === executionContext.frameId) {\n        this.dropDown.refreshItem(executionContext);\n      }\n    }\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  padding: 2px 1px 2px 2px;\n  white-space: nowrap;\n  display: flex;\n  flex-direction: column;\n  height: 36px;\n  justify-content: center;\n  overflow-y: auto;\n}\n\n.title {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex-grow: 0;\n}\n\n.badge {\n  pointer-events: none;\n  margin-right: 4px;\n  display: inline-block;\n  height: 15px;\n}\n\n.subtitle {\n  color: var(--sys-color-token-subtle);\n  margin-right: 3px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex-grow: 0;\n}\n\n:host(.highlighted) .subtitle {\n  color: inherit;\n}\n\n/*# sourceURL=${import.meta.resolve('./consoleContextSelector.css')} */`;", "// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\n\nimport type {ConsoleGroupViewMessage, ConsoleViewMessage} from './ConsoleViewMessage.js';\n\nexport type LevelsMask = Record<string, boolean>;\n\nexport class ConsoleFilter {\n  name: string;\n  parsedFilters: TextUtils.TextUtils.ParsedFilter[];\n  executionContext: SDK.RuntimeModel.ExecutionContext|null;\n  levelsMask: LevelsMask;\n\n  constructor(\n      name: string, parsedFilters: TextUtils.TextUtils.ParsedFilter[],\n      executionContext: SDK.RuntimeModel.ExecutionContext|null, levelsMask?: LevelsMask) {\n    this.name = name;\n    this.parsedFilters = parsedFilters;\n    this.executionContext = executionContext;\n    this.levelsMask = levelsMask || ConsoleFilter.defaultLevelsFilterValue();\n  }\n\n  static allLevelsFilterValue(): LevelsMask {\n    const result: LevelsMask = {};\n    const logLevels: Protocol.EnumerableEnum<typeof Protocol.Log.LogEntryLevel> = {\n      Verbose: Protocol.Log.LogEntryLevel.Verbose,\n      Info: Protocol.Log.LogEntryLevel.Info,\n      Warning: Protocol.Log.LogEntryLevel.Warning,\n      Error: Protocol.Log.LogEntryLevel.Error,\n    };\n    for (const name of Object.values(logLevels)) {\n      result[name] = true;\n    }\n    return result;\n  }\n\n  static defaultLevelsFilterValue(): LevelsMask {\n    const result = ConsoleFilter.allLevelsFilterValue();\n    result[Protocol.Log.LogEntryLevel.Verbose] = false;\n    return result;\n  }\n\n  static singleLevelMask(level: string): LevelsMask {\n    const result: LevelsMask = {};\n    result[level] = true;\n    return result;\n  }\n\n  clone(): ConsoleFilter {\n    const parsedFilters = this.parsedFilters.map(TextUtils.TextUtils.FilterParser.cloneFilter);\n    const levelsMask = Object.assign({}, this.levelsMask);\n    return new ConsoleFilter(this.name, parsedFilters, this.executionContext, levelsMask);\n  }\n\n  shouldBeVisible(viewMessage: ConsoleViewMessage): boolean {\n    const message = viewMessage.consoleMessage();\n    if (this.executionContext &&\n        (this.executionContext.runtimeModel !== message.runtimeModel() ||\n         this.executionContext.id !== message.getExecutionContextId())) {\n      return false;\n    }\n\n    if (message.type === SDK.ConsoleModel.FrontendMessageType.Command ||\n        message.type === SDK.ConsoleModel.FrontendMessageType.Result ||\n        message.type === Protocol.Runtime.ConsoleAPICalledEventType.EndGroup) {\n      return true;\n    }\n\n    if (message.level && !this.levelsMask[message.level as string]) {\n      return false;\n    }\n\n    return this.applyFilter(viewMessage) || this.parentGroupHasMatch(viewMessage.consoleGroup());\n  }\n\n  // A message is visible if there is a match in any of the parent groups' titles.\n  parentGroupHasMatch(viewMessage: ConsoleGroupViewMessage|null): boolean {\n    if (viewMessage === null) {\n      return false;\n    }\n    return this.applyFilter(viewMessage) || this.parentGroupHasMatch(viewMessage.consoleGroup());\n  }\n\n  applyFilter(viewMessage: ConsoleViewMessage): boolean {\n    const message = viewMessage.consoleMessage();\n    for (const filter of this.parsedFilters) {\n      if (!filter.key) {\n        if (filter.regex && viewMessage.matchesFilterRegex(filter.regex) === filter.negative) {\n          return false;\n        }\n        if (filter.text && viewMessage.matchesFilterText(filter.text) === filter.negative) {\n          return false;\n        }\n      } else {\n        switch (filter.key) {\n          case FilterType.Context: {\n            if (!passesFilter(filter, message.context, false /* exactMatch */)) {\n              return false;\n            }\n            break;\n          }\n          case FilterType.Source: {\n            const sourceNameForMessage =\n                message.source ? SDK.ConsoleModel.MessageSourceDisplayName.get((message.source)) : message.source;\n            if (!passesFilter(filter, sourceNameForMessage, true /* exactMatch */)) {\n              return false;\n            }\n            break;\n          }\n          case FilterType.Url: {\n            if (!passesFilter(filter, message.url, false /* exactMatch */)) {\n              return false;\n            }\n            break;\n          }\n        }\n      }\n    }\n    return true;\n\n    function passesFilter(\n        filter: TextUtils.TextUtils.ParsedFilter, value: string|null|undefined, exactMatch: boolean): boolean {\n      if (!filter.text) {\n        return Boolean(value) === filter.negative;\n      }\n      if (!value) {\n        return !filter.text === !filter.negative;\n      }\n      const filterText = (filter.text).toLowerCase();\n      const lowerCaseValue = value.toLowerCase();\n      if (exactMatch && (lowerCaseValue === filterText) === filter.negative) {\n        return false;\n      }\n      if (!exactMatch && lowerCaseValue.includes(filterText) === filter.negative) {\n        return false;\n      }\n      return true;\n    }\n  }\n}\n\nexport enum FilterType {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  Context = 'context',\n  Source = 'source',\n  Url = 'url',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n", "// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\n\n// VGA color palette\nconst ANSI_COLORS = ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'gray'];\nconst ANSI_BRIGHT_COLORS =\n    ['darkgray', 'lightred', 'lightgreen', 'lightyellow', 'lightblue', 'lightmagenta', 'lightcyan', 'white'];\n\nexport type FormatToken = {\n  type: 'generic'|'optimal',\n  value: SDK.RemoteObject.RemoteObject,\n}|{\n  type: 'string' | 'style',\n  value: string,\n};\n\n/**\n * This is the front-end part of the Formatter function specified in the\n * Console Standard (https://console.spec.whatwg.org/#formatter). Here we\n * assume that all type conversions have already happened in V8 before and\n * are only concerned with performing the actual substitutions and dealing\n * with generic and optimal object formatting as well as styling.\n *\n * @param fmt the format string.\n * @param args the substitution arguments for `fmt`.\n * @returns a list of `FormatToken`s as well as the unused arguments.\n */\nexport const format = (fmt: string, args: SDK.RemoteObject.RemoteObject[]): {\n  tokens: FormatToken[],\n  args: SDK.RemoteObject.RemoteObject[],\n} => {\n  const tokens: FormatToken[] = [];\n\n  // Current maintained style for ANSI color codes.\n  const currentStyle = new Map<string, string>();\n  function addTextDecoration(value: string): void {\n    const textDecoration = currentStyle.get('text-decoration') ?? '';\n    if (!textDecoration.includes(value)) {\n      currentStyle.set('text-decoration', `${textDecoration} ${value}`);\n    }\n  }\n  function removeTextDecoration(value: string): void {\n    const textDecoration = currentStyle.get('text-decoration')?.replace(` ${value}`, '');\n    if (textDecoration) {\n      currentStyle.set('text-decoration', textDecoration);\n    } else {\n      currentStyle.delete('text-decoration');\n    }\n  }\n\n  function addStringToken(value: string): void {\n    if (!value) {\n      return;\n    }\n    if (tokens.length && tokens[tokens.length - 1].type === 'string') {\n      tokens[tokens.length - 1].value += value;\n      return;\n    }\n    tokens.push({type: 'string', value});\n  }\n\n  let argIndex = 0;\n  const re = /%([%_Oocsdfi])|\\x1B\\[([\\d;]*)m/;\n  for (let match = re.exec(fmt); match !== null; match = re.exec(fmt)) {\n    addStringToken(match.input.substring(0, match.index));\n    let substitution: number|string|undefined = undefined;\n    const specifier = match[1];\n    switch (specifier) {\n      case '%':\n        addStringToken('%');\n        substitution = '';\n        break;\n      case 's':\n        if (argIndex < args.length) {\n          const {description} = args[argIndex++];\n          substitution = description ?? '';\n        }\n        break;\n      case 'c':\n        if (argIndex < args.length) {\n          const type = 'style';\n          const value = args[argIndex++].description ?? '';\n          tokens.push({type, value});\n          substitution = '';\n        }\n        break;\n      case 'o':\n      case 'O':\n        if (argIndex < args.length) {\n          const type = specifier === 'O' ? 'generic' : 'optimal';\n          const value = args[argIndex++];\n          tokens.push({type, value});\n          substitution = '';\n        }\n        break;\n      case '_':\n        if (argIndex < args.length) {\n          argIndex++;\n          substitution = '';\n        }\n        break;\n      case 'd':\n      case 'f':\n      case 'i':\n        if (argIndex < args.length) {\n          const {value} = args[argIndex++];\n          substitution = typeof value !== 'number' ? NaN : value;\n          if (specifier !== 'f') {\n            substitution = Math.floor(substitution);\n          }\n        }\n        break;\n      case undefined: {\n        const codes = (match[2] || '0').split(';').map(code => code ? parseInt(code, 10) : 0);\n        while (codes.length) {\n          const code = codes.shift() as number;\n          switch (code) {\n            case 0:\n              currentStyle.clear();\n              break;\n            case 1:\n              currentStyle.set('font-weight', 'bold');\n              break;\n            case 2:\n              currentStyle.set('font-weight', 'lighter');\n              break;\n            case 3:\n              currentStyle.set('font-style', 'italic');\n              break;\n            case 4:\n              addTextDecoration('underline');\n              break;\n            case 9:\n              addTextDecoration('line-through');\n              break;\n            case 22:\n              currentStyle.delete('font-weight');\n              break;\n            case 23:\n              currentStyle.delete('font-style');\n              break;\n            case 24:\n              removeTextDecoration('underline');\n              break;\n            case 29:\n              removeTextDecoration('line-through');\n              break;\n            case 38:\n            case 48:\n              if (codes.shift() === 2) {\n                const r = codes.shift() ?? 0, g = codes.shift() ?? 0, b = codes.shift() ?? 0;\n                currentStyle.set(code === 38 ? 'color' : 'background-color', `rgb(${r},${g},${b})`);\n              }\n              break;\n            case 39:\n            case 49:\n              currentStyle.delete(code === 39 ? 'color' : 'background-color');\n              break;\n            case 53:\n              addTextDecoration('overline');\n              break;\n            case 55:\n              removeTextDecoration('overline');\n              break;\n            default: {\n              const color = ANSI_COLORS[code - 30] ?? ANSI_BRIGHT_COLORS[code - 90];\n              if (color !== undefined) {\n                currentStyle.set('color', `var(--console-color-${color})`);\n              } else {\n                const background = ANSI_COLORS[code - 40] ?? ANSI_BRIGHT_COLORS[code - 100];\n                if (background !== undefined) {\n                  currentStyle.set('background-color', `var(--console-color-${background})`);\n                }\n              }\n              break;\n            }\n          }\n        }\n        const value = [...currentStyle.entries()].map(([key, val]) => `${key}:${val.trimStart()}`).join(';');\n        const type = 'style';\n        tokens.push({type, value});\n        substitution = '';\n        break;\n      }\n    }\n    if (substitution === undefined) {\n      // If there's no substitution, emit the original specifier / sequence verbatim.\n      addStringToken(match[0]);\n      substitution = '';\n    }\n    fmt = substitution + match.input.substring(match.index + match[0].length);\n  }\n  addStringToken(fmt);\n  return {tokens, args: args.slice(argIndex)};\n};\n\nexport const updateStyle = (currentStyle: Map<string, {value: string, priority: string}>, styleToAdd: string): void => {\n  const ALLOWED_PROPERTY_PREFIXES = ['background', 'border', 'color', 'font', 'line', 'margin', 'padding', 'text'];\n  // We only allow data URLs with the `url()` CSS function.\n  // The capture group is not intended to grab the whole URL exactly, just enough so we can check the scheme.\n  const URL_REGEX = /url\\([\\'\\\"]?([^\\)]*)/g;\n\n  currentStyle.clear();\n  const buffer = document.createElement('span');\n  buffer.setAttribute('style', styleToAdd);\n  for (const property of buffer.style) {\n    if (!ALLOWED_PROPERTY_PREFIXES.some(\n            prefix => property.startsWith(prefix) || property.startsWith(`-webkit-${prefix}`))) {\n      continue;\n    }\n\n    // There could be multiple `url()` functions, so we check them all.\n    // If any of them is not a `data` URL, we skip the whole property.\n    const value = buffer.style.getPropertyValue(property);\n    const potentialUrls = [...value.matchAll(URL_REGEX)].map(match => match[1]);\n    if (potentialUrls.some(\n            potentialUrl => !Common.ParsedURL.schemeIs(potentialUrl as Platform.DevToolsPath.UrlString, 'data:'))) {\n      continue;\n    }\n    currentStyle.set(property, {\n      value,\n      priority: buffer.style.getPropertyPriority(property),\n    });\n  }\n};\n", "// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as TextEditor from '../../ui/components/text_editor/text_editor.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\n// eslint-disable-next-line rulesdir/es-modules-import\nimport objectValueStyles from '../../ui/legacy/components/object_ui/objectValue.css.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport consolePinPaneStyles from './consolePinPane.css.js';\n\nconst UIStrings = {\n  /**\n   * @description A context menu item in the Console Pin Pane of the Console panel\n   */\n  removeExpression: 'Remove expression',\n  /**\n   * @description A context menu item in the Console Pin Pane of the Console panel\n   */\n  removeAllExpressions: 'Remove all expressions',\n  /**\n   * @description Screen reader label for delete button on a non-blank live expression\n   * @example {document} PH1\n   */\n  removeExpressionS: 'Remove expression: {PH1}',\n  /**\n   * @description Screen reader label for delete button on a blank live expression\n   */\n  removeBlankExpression: 'Remove blank expression',\n  /**\n   * @description Text in Console Pin Pane of the Console panel\n   */\n  liveExpressionEditor: 'Live expression editor',\n  /**\n   * @description Text in Console Pin Pane of the Console panel\n   */\n  expression: 'Expression',\n  /**\n   * @description Side effect label title in Console Pin Pane of the Console panel\n   */\n  evaluateAllowingSideEffects: 'Evaluate, allowing side effects',\n  /**\n   * @description Text of a DOM element in Console Pin Pane of the Console panel\n   */\n  notAvailable: 'not available',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/console/ConsolePinPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst elementToConsolePin = new WeakMap<Element, ConsolePin>();\n\nexport class ConsolePinPane extends UI.ThrottledWidget.ThrottledWidget {\n  private pins: Set<ConsolePin>;\n  private readonly pinsSetting: Common.Settings.Setting<string[]>;\n  constructor(private readonly liveExpressionButton: UI.Toolbar.ToolbarButton, private readonly focusOut: () => void) {\n    super(true, 250);\n    this.registerRequiredCSS(consolePinPaneStyles, objectValueStyles);\n    this.contentElement.classList.add('console-pins', 'monospace');\n    this.contentElement.addEventListener('contextmenu', this.contextMenuEventFired.bind(this), false);\n    this.contentElement.setAttribute('jslog', `${VisualLogging.pane('console-pins')}`);\n\n    this.pins = new Set();\n    this.pinsSetting = Common.Settings.Settings.instance().createLocalSetting('console-pins', []);\n    for (const expression of this.pinsSetting.get()) {\n      this.addPin(expression);\n    }\n  }\n\n  override willHide(): void {\n    super.willHide();\n    for (const pin of this.pins) {\n      pin.setHovered(false);\n    }\n  }\n\n  savePins(): void {\n    const toSave = Array.from(this.pins).map(pin => pin.expression());\n    this.pinsSetting.set(toSave);\n  }\n\n  private contextMenuEventFired(event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const target = UI.UIUtils.deepElementFromEvent(event);\n    if (target) {\n      const targetPinElement = target.enclosingNodeOrSelfWithClass('console-pin');\n      if (targetPinElement) {\n        const targetPin = elementToConsolePin.get(targetPinElement);\n        if (targetPin) {\n          contextMenu.editSection().appendItem(\n              i18nString(UIStrings.removeExpression), this.removePin.bind(this, targetPin),\n              {jslogContext: 'remove-expression'});\n          targetPin.appendToContextMenu(contextMenu);\n        }\n      }\n    }\n    contextMenu.editSection().appendItem(\n        i18nString(UIStrings.removeAllExpressions), this.removeAllPins.bind(this),\n        {jslogContext: 'remove-all-expressions'});\n    void contextMenu.show();\n  }\n\n  private removeAllPins(): void {\n    for (const pin of this.pins) {\n      this.removePin(pin);\n    }\n  }\n\n  removePin(pin: ConsolePin): void {\n    pin.element().remove();\n    const newFocusedPin = this.focusedPinAfterDeletion(pin);\n    this.pins.delete(pin);\n    this.savePins();\n    if (newFocusedPin) {\n      void newFocusedPin.focus();\n    } else {\n      this.liveExpressionButton.focus();\n    }\n  }\n\n  addPin(expression: string, userGesture?: boolean): void {\n    const pin = new ConsolePin(expression, this, this.focusOut);\n    this.contentElement.appendChild(pin.element());\n    this.pins.add(pin);\n    this.savePins();\n    if (userGesture) {\n      void pin.focus();\n    }\n    this.update();\n  }\n\n  private focusedPinAfterDeletion(deletedPin: ConsolePin): ConsolePin|null {\n    const pinArray = Array.from(this.pins);\n    for (let i = 0; i < pinArray.length; i++) {\n      if (pinArray[i] === deletedPin) {\n        if (pinArray.length === 1) {\n          return null;\n        }\n        if (i === pinArray.length - 1) {\n          return pinArray[i - 1];\n        }\n        return pinArray[i + 1];\n      }\n    }\n    return null;\n  }\n\n  override async doUpdate(): Promise<void> {\n    if (!this.pins.size || !this.isShowing()) {\n      return;\n    }\n    if (this.isShowing()) {\n      this.update();\n    }\n    const updatePromises = Array.from(this.pins, pin => pin.updatePreview());\n    await Promise.all(updatePromises);\n    this.updatedForTest();\n  }\n\n  private updatedForTest(): void {\n  }\n}\n\nexport class ConsolePin {\n  private readonly pinElement: Element;\n  private readonly pinPreview: HTMLElement;\n  private lastResult: SDK.RuntimeModel.EvaluationResult|null;\n  private lastExecutionContext: SDK.RuntimeModel.ExecutionContext|null;\n  private editor: TextEditor.TextEditor.TextEditor;\n  private committedExpression: string;\n  private hovered: boolean;\n  private lastNode: SDK.RemoteObject.RemoteObject|null;\n  private deletePinIcon: Buttons.Button.Button;\n\n  constructor(expression: string, private readonly pinPane: ConsolePinPane, private readonly focusOut: () => void) {\n    this.deletePinIcon = new Buttons.Button.Button();\n    this.deletePinIcon\n        .data = {variant: Buttons.Button.Variant.ICON, iconName: 'cross', size: Buttons.Button.Size.MICRO};\n    this.deletePinIcon.classList.add('close-button');\n    this.deletePinIcon.setAttribute('jslog', `${VisualLogging.close().track({click: true})}`);\n    this.deletePinIcon.tabIndex = 0;\n\n    if (expression.length) {\n      UI.ARIAUtils.setLabel(this.deletePinIcon, i18nString(UIStrings.removeExpressionS, {PH1: expression}));\n    } else {\n      UI.ARIAUtils.setLabel(this.deletePinIcon, i18nString(UIStrings.removeBlankExpression));\n    }\n    self.onInvokeElement(this.deletePinIcon, event => {\n      pinPane.removePin(this);\n      event.consume(true);\n    });\n\n    const fragment = UI.Fragment.Fragment.build`\n  <div class='console-pin'>\n  ${this.deletePinIcon}\n  <div class='console-pin-name' $='name' jslog=\"${VisualLogging.textField().track({\n      change: true,\n    })}\"></div>\n  <div class='console-pin-preview' $='preview'></div>\n  </div>`;\n    this.pinElement = fragment.element();\n    this.pinPreview = (fragment.$('preview') as HTMLElement);\n    const nameElement = (fragment.$('name') as HTMLElement);\n    UI.Tooltip.Tooltip.install(nameElement, expression);\n    elementToConsolePin.set(this.pinElement, this);\n\n    this.lastResult = null;\n    this.lastExecutionContext = null;\n    this.committedExpression = expression;\n    this.hovered = false;\n    this.lastNode = null;\n    this.editor = this.createEditor(expression, nameElement);\n\n    this.pinPreview.addEventListener('mouseenter', this.setHovered.bind(this, true), false);\n    this.pinPreview.addEventListener('mouseleave', this.setHovered.bind(this, false), false);\n    this.pinPreview.addEventListener('click', (event: Event) => {\n      if (this.lastNode) {\n        void Common.Revealer.reveal(this.lastNode);\n        event.consume();\n      }\n    }, false);\n\n    // Prevent Esc from toggling the drawer\n    nameElement.addEventListener('keydown', event => {\n      if (event.key === 'Escape') {\n        event.consume();\n      }\n    });\n  }\n\n  createEditor(doc: string, parent: HTMLElement): TextEditor.TextEditor.TextEditor {\n    const extensions = [\n      CodeMirror.EditorView.contentAttributes.of({'aria-label': i18nString(UIStrings.liveExpressionEditor)}),\n      CodeMirror.EditorView.lineWrapping,\n      CodeMirror.javascript.javascriptLanguage,\n      TextEditor.Config.showCompletionHint,\n      CodeMirror.placeholder(i18nString(UIStrings.expression)),\n      CodeMirror.keymap.of([\n        {\n          key: 'Escape',\n          run: (view: CodeMirror.EditorView) => {\n            view.dispatch({changes: {from: 0, to: view.state.doc.length, insert: this.committedExpression}});\n            this.focusOut();\n            return true;\n          },\n        },\n        {\n          key: 'Enter',\n          run: () => {\n            this.focusOut();\n            return true;\n          },\n        },\n        {\n          key: 'Mod-Enter',\n          run: () => {\n            this.focusOut();\n            return true;\n          },\n        },\n        {\n          key: 'Tab',\n          run: (view: CodeMirror.EditorView) => {\n            if (CodeMirror.completionStatus(this.editor.state) !== null) {\n              return false;\n            }\n            // User should be able to tab out of edit field after auto complete is done\n            view.dispatch({changes: {from: 0, to: view.state.doc.length, insert: this.committedExpression}});\n            this.focusOut();\n            return true;\n          },\n        },\n        {\n          key: 'Shift-Tab',\n          run: (view: CodeMirror.EditorView) => {\n            if (CodeMirror.completionStatus(this.editor.state) !== null) {\n              return false;\n            }\n            // User should be able to tab out of edit field after auto complete is done\n            view.dispatch({changes: {from: 0, to: view.state.doc.length, insert: this.committedExpression}});\n            this.editor.blur();\n            this.deletePinIcon.focus();\n            return true;\n          },\n        },\n      ]),\n      CodeMirror.EditorView.domEventHandlers({blur: (_e, view) => this.onBlur(view)}),\n      TextEditor.Config.baseConfiguration(doc),\n      TextEditor.Config.closeBrackets.instance(),\n      TextEditor.Config.autocompletion.instance(),\n    ];\n    if (Root.Runtime.Runtime.queryParam('noJavaScriptCompletion') !== 'true') {\n      extensions.push(TextEditor.JavaScript.completion());\n    }\n    const editor = new TextEditor.TextEditor.TextEditor(CodeMirror.EditorState.create({doc, extensions}));\n    parent.appendChild(editor);\n    return editor;\n  }\n\n  onBlur(editor: CodeMirror.EditorView): void {\n    const text = editor.state.doc.toString();\n    const trimmedText = text.trim();\n    this.committedExpression = trimmedText;\n    this.pinPane.savePins();\n    if (this.committedExpression.length) {\n      UI.ARIAUtils.setLabel(\n          this.deletePinIcon, i18nString(UIStrings.removeExpressionS, {PH1: this.committedExpression}));\n    } else {\n      UI.ARIAUtils.setLabel(this.deletePinIcon, i18nString(UIStrings.removeBlankExpression));\n    }\n    editor.dispatch({\n      selection: {anchor: trimmedText.length},\n      changes: trimmedText !== text ? {from: 0, to: text.length, insert: trimmedText} : undefined,\n    });\n  }\n\n  setHovered(hovered: boolean): void {\n    if (this.hovered === hovered) {\n      return;\n    }\n    this.hovered = hovered;\n    if (!hovered && this.lastNode) {\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n  }\n\n  expression(): string {\n    return this.committedExpression;\n  }\n\n  element(): Element {\n    return this.pinElement;\n  }\n\n  async focus(): Promise<void> {\n    const editor = this.editor;\n    editor.editor.focus();\n    editor.dispatch({selection: {anchor: editor.state.doc.length}});\n  }\n\n  appendToContextMenu(contextMenu: UI.ContextMenu.ContextMenu): void {\n    if (this.lastResult && !('error' in this.lastResult) && this.lastResult.object) {\n      contextMenu.appendApplicableItems(this.lastResult.object);\n      // Prevent result from being released automatically, since it may be used by\n      // the context menu action. It will be released when the console is cleared,\n      // where we release the 'live-expression' object group.\n      this.lastResult = null;\n    }\n  }\n\n  async updatePreview(): Promise<void> {\n    if (!this.editor) {\n      return;\n    }\n    const text = TextEditor.Config.contentIncludingHint(this.editor.editor);\n    const isEditing = this.pinElement.hasFocus();\n    const throwOnSideEffect = isEditing && text !== this.committedExpression;\n    const timeout = throwOnSideEffect ? 250 : undefined;\n    const executionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n    const {preview, result} = await ObjectUI.JavaScriptREPL.JavaScriptREPL.evaluateAndBuildPreview(\n        text, throwOnSideEffect, true /* replMode */, timeout, !isEditing /* allowErrors */, 'live-expression',\n        true /* awaitPromise */, true /* silent */);\n    if (this.lastResult && this.lastExecutionContext) {\n      this.lastExecutionContext.runtimeModel.releaseEvaluationResult(this.lastResult);\n    }\n    this.lastResult = result || null;\n    this.lastExecutionContext = executionContext || null;\n\n    const previewText = preview.deepTextContent();\n    if (!previewText || previewText !== this.pinPreview.deepTextContent()) {\n      this.pinPreview.removeChildren();\n      if (result && SDK.RuntimeModel.RuntimeModel.isSideEffectFailure(result)) {\n        const sideEffectLabel = this.pinPreview.createChild('span', 'object-value-calculate-value-button');\n        sideEffectLabel.textContent = '(…)';\n        UI.Tooltip.Tooltip.install(sideEffectLabel, i18nString(UIStrings.evaluateAllowingSideEffects));\n      } else if (previewText) {\n        this.pinPreview.appendChild(preview);\n      } else if (!isEditing) {\n        UI.UIUtils.createTextChild(this.pinPreview, i18nString(UIStrings.notAvailable));\n      }\n      UI.Tooltip.Tooltip.install(this.pinPreview, previewText);\n    }\n\n    let node: SDK.RemoteObject.RemoteObject|null = null;\n    if (result && !('error' in result) && result.object.type === 'object' && result.object.subtype === 'node') {\n      node = result.object;\n    }\n    if (this.hovered) {\n      if (node) {\n        SDK.OverlayModel.OverlayModel.highlightObjectAsDOMNode(node);\n      } else if (this.lastNode) {\n        SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n      }\n    }\n    this.lastNode = node || null;\n\n    const isError = result && !('error' in result) && result.exceptionDetails &&\n        !SDK.RuntimeModel.RuntimeModel.isSideEffectFailure(result);\n    this.pinElement.classList.toggle('error-level', Boolean(isError));\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.value.object-value-node:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.object-value-function-prefix,\n.object-value-boolean {\n  color: var(--sys-color-token-attribute-value);\n}\n\n.object-value-function {\n  font-style: italic;\n}\n\n.object-value-function.linkified:hover {\n  --override-linkified-hover-background: rgb(0 0 0 / 10%);\n\n  background-color: var(--override-linkified-hover-background);\n  cursor: pointer;\n}\n\n.theme-with-dark-background .object-value-function.linkified:hover,\n:host-context(.theme-with-dark-background) .object-value-function.linkified:hover {\n  --override-linkified-hover-background: rgb(230 230 230 / 10%);\n}\n\n.object-value-number {\n  color: var(--sys-color-token-attribute-value);\n}\n\n.object-value-bigint {\n  color: var(--sys-color-token-comment);\n}\n\n.object-value-string,\n.object-value-regexp,\n.object-value-symbol {\n  white-space: pre;\n  unicode-bidi: -webkit-isolate;\n  color: var(--sys-color-token-property-special);\n}\n\n.object-value-node {\n  position: relative;\n  vertical-align: baseline;\n  color: var(--sys-color-token-variable);\n  white-space: nowrap;\n}\n\n.object-value-null,\n.object-value-undefined {\n  color: var(--sys-color-state-disabled);\n}\n\n.object-value-unavailable {\n  color: var(--sys-color-token-tag);\n}\n\n.object-value-calculate-value-button:hover {\n  text-decoration: underline;\n}\n\n.object-properties-section-custom-section {\n  display: inline-flex;\n  flex-direction: column;\n}\n\n.theme-with-dark-background .object-value-number,\n:host-context(.theme-with-dark-background) .object-value-number,\n.theme-with-dark-background .object-value-boolean,\n:host-context(.theme-with-dark-background) .object-value-boolean {\n  --override-primitive-dark-mode-color: hsl(252deg 100% 75%);\n\n  color: var(--override-primitive-dark-mode-color);\n}\n\n.object-properties-section .object-description {\n  color: var(--sys-color-token-subtle);\n}\n\n.value .object-properties-preview {\n  white-space: nowrap;\n}\n\n.name {\n  color: var(--sys-color-token-tag);\n  flex-shrink: 0;\n}\n\n.object-properties-preview .name {\n  color: var(--sys-color-token-subtle);\n}\n\n@media (forced-colors: active) {\n  .object-value-calculate-value-button:hover {\n    forced-color-adjust: none;\n    color: Highlight;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./objectValue.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2018 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.close-button {\n  position: absolute;\n  top: var(--sys-size-4);\n  left: var(--sys-size-2);\n}\n\n.console-pins {\n  max-height: 200px;\n  overflow-y: auto;\n  background: var(--sys-color-cdt-base-container);\n\n  --override-error-text-color: var(--sys-color-on-error-container);\n}\n\n.console-pins:not(:empty) {\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.console-pin {\n  position: relative;\n  user-select: text;\n  flex: none;\n  padding: 2px 0 6px 24px;\n}\n\n.console-pin:not(:last-child) {\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.console-pin.error-level:not(:focus-within) {\n  background-color: var(--sys-color-surface-error);\n  color: var(--override-error-text-color);\n}\n\n.console-pin:not(:last-child).error-level:not(:focus-within) {\n  border-top: 1px solid var(--sys-color-error-outline);\n  border-bottom: 1px solid var(--sys-color-error-outline);\n  margin-top: -1px;\n}\n\n.console-pin-name {\n  margin-left: -5px;\n  margin-bottom: 1px;\n  height: auto;\n}\n\n.console-pin-name,\n.console-pin-preview {\n  width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  min-height: 13px;\n}\n\n.console-pin-preview {\n  overflow: hidden;\n}\n\n.console-pin-name:focus-within {\n  background: var(--sys-color-cdt-base-container);\n  border-radius: 4px;\n  border: 1px solid var(--sys-color-state-focus-ring);\n}\n\n.console-pin:focus-within .console-pin-preview,\n.console-pin-name:not(:focus-within, :hover) {\n  opacity: 60%;\n}\n\n/*# sourceURL=${import.meta.resolve('./consolePinPane.css')} */`;", "// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport type * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ConsoleFilter, FilterType, type LevelsMask} from './ConsoleFilter.js';\nimport consoleSidebarStyles from './consoleSidebar.css.js';\nimport type {ConsoleViewMessage} from './ConsoleViewMessage.js';\n\nconst UIStrings = {\n  /**\n   * @description Filter name in Console Sidebar of the Console panel. This is shown when we fail to\n   * parse a URL when trying to display console messages from each URL separately. This might be\n   * because the console message does not come from any particular URL. This should be translated as\n   * a term that indicates 'not one of the other URLs listed here'.\n   */\n  other: '<other>',\n  /**\n   * @description Text in Console Sidebar of the Console panel to show how many user messages exist.\n   */\n  dUserMessages: '{n, plural, =0 {No user messages} =1 {# user message} other {# user messages}}',\n  /**\n   * @description Text in Console Sidebar of the Console panel to show how many messages exist.\n   */\n  dMessages: '{n, plural, =0 {No messages} =1 {# message} other {# messages}}',\n  /**\n   * @description Text in Console Sidebar of the Console panel to show how many errors exist.\n   */\n  dErrors: '{n, plural, =0 {No errors} =1 {# error} other {# errors}}',\n  /**\n   * @description Text in Console Sidebar of the Console panel to show how many warnings exist.\n   */\n  dWarnings: '{n, plural, =0 {No warnings} =1 {# warning} other {# warnings}}',\n  /**\n   * @description Text in Console Sidebar of the Console panel to show how many info messages exist.\n   */\n  dInfo: '{n, plural, =0 {No info} =1 {# info} other {# info}}',\n  /**\n   * @description Text in Console Sidebar of the Console panel to show how many verbose messages exist.\n   */\n  dVerbose: '{n, plural, =0 {No verbose} =1 {# verbose} other {# verbose}}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/console/ConsoleSidebar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst {render, html, nothing, Directives} = Lit;\n\nconst enum GroupName {\n  CONSOLE_API = 'user message',\n  ALL = 'message',\n  ERROR = 'error',\n  WARNING = 'warning',\n  INFO = 'info',\n  VERBOSE = 'verbose',\n}\n\nconst GROUP_ICONS = {\n  [GroupName.ALL]: {icon: 'list', label: UIStrings.dMessages},\n  [GroupName.CONSOLE_API]: {icon: 'profile', label: UIStrings.dUserMessages},\n  [GroupName.ERROR]: {icon: 'cross-circle', label: UIStrings.dErrors},\n  [GroupName.WARNING]: {icon: 'warning', label: UIStrings.dWarnings},\n  [GroupName.INFO]: {icon: 'info', label: UIStrings.dInfo},\n  [GroupName.VERBOSE]: {icon: 'bug', label: UIStrings.dVerbose},\n};\n\ninterface ViewInput {\n  groups: ConsoleFilterGroup[];\n  selectedFilter: ConsoleFilter;\n  onSelectionChanged: (selectedFilter: ConsoleFilter) => void;\n}\n\nexport type View = (input: ViewInput, output: object, target: HTMLElement) => void;\nexport const DEFAULT_VIEW: View = (input, output, target) => {\n  const nodeFilterMap = new WeakMap<Element, ConsoleFilter>();\n  const onSelectionChanged = (event: UI.TreeOutline.TreeViewElement.SelectEvent): void => {\n    const filter = nodeFilterMap.get(event.detail);\n    if (filter) {\n      input.onSelectionChanged(filter);\n    }\n  };\n  render(\n      html`<devtools-tree\n        navigation-variant\n        hide-overflow\n        @select=${onSelectionChanged}\n        .template=${\n          html`\n          <ul role=\"tree\">\n            ${\n              input.groups.map(\n                  group => html`\n              <li\n                role=\"treeitem\"\n                ${Directives.ref(element => element && nodeFilterMap.set(element, group.filter))}\n                ?selected=${group.filter === input.selectedFilter}>\n                  <style>${consoleSidebarStyles}</style>\n                  <devtools-icon name=${GROUP_ICONS[group.name].icon}></devtools-icon>\n                  ${\n                      /* eslint-disable-next-line rulesdir/l10n-i18nString-call-only-with-uistrings */\n                      i18nString(GROUP_ICONS[group.name].label, {\n\n                        n: group.messageCount\n                      })}\n                  ${group.messageCount === 0 ? nothing : html`\n                  <ul role=\"group\" ?hidden=${group.filter !== input.selectedFilter}>\n                    ${group.urlGroups.values().map(urlGroup => html`\n                      <li\n                        ${Directives.ref(element => element && nodeFilterMap.set(element, group.filter))}\n                        role=\"treeitem\"\n                        ?selected=${urlGroup.filter === input.selectedFilter}\n                        title=${urlGroup.url ?? ''}>\n                          <devtools-icon name=document></devtools-icon>\n                          ${urlGroup.filter.name} <span class=count>${urlGroup.count}</span>\n                      </li>`)}\n                  </ul>`}\n              </li>`)}\n        </ul>`}\n        ></devtools-tree>`,\n      target);\n};\n\nclass ConsoleFilterGroup {\n  readonly urlGroups = new Map<string|null, {filter: ConsoleFilter, url: string|null, count: number}>();\n  messageCount = 0;\n  readonly name: GroupName;\n  readonly filter: ConsoleFilter;\n  constructor(name: GroupName, parsedFilters: TextUtils.TextUtils.ParsedFilter[], levelsMask: LevelsMask) {\n    this.name = name;\n    this.filter = new ConsoleFilter(name, parsedFilters, null, levelsMask);\n  }\n\n  onMessage(viewMessage: ConsoleViewMessage): void {\n    const message = viewMessage.consoleMessage();\n    const shouldIncrementCounter = message.type !== SDK.ConsoleModel.FrontendMessageType.Command &&\n        message.type !== SDK.ConsoleModel.FrontendMessageType.Result && !message.isGroupMessage();\n    if (!this.filter.shouldBeVisible(viewMessage) || !shouldIncrementCounter) {\n      return;\n    }\n    const child = this.#getUrlGroup(message.url || null);\n    child.count++;\n    this.messageCount++;\n  }\n\n  clear(): void {\n    this.messageCount = 0;\n    this.urlGroups.clear();\n  }\n\n  #getUrlGroup(url: string|null): {filter: ConsoleFilter, url: string|null, count: number} {\n    let child = this.urlGroups.get(url);\n    if (child) {\n      return child;\n    }\n\n    const filter = this.filter.clone();\n    child = {filter, url, count: 0};\n    const parsedURL = url ? Common.ParsedURL.ParsedURL.fromString(url) : null;\n    if (url) {\n      filter.name = parsedURL ? parsedURL.displayName : url;\n    } else {\n      filter.name = i18nString(UIStrings.other);\n    }\n    filter.parsedFilters.push({key: FilterType.Url, text: url, negative: false, regex: undefined});\n\n    this.urlGroups.set(url, child);\n    return child;\n  }\n}\n\nconst CONSOLE_API_PARSED_FILTERS = [{\n  key: FilterType.Source,\n  text: Common.Console.FrontendMessageSource.ConsoleAPI,\n  negative: false,\n  regex: undefined,\n}];\n\nexport class ConsoleSidebar extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox) {\n  #view: View;\n  readonly #groups = [\n    new ConsoleFilterGroup(GroupName.ALL, [], ConsoleFilter.allLevelsFilterValue()),\n    new ConsoleFilterGroup(GroupName.CONSOLE_API, CONSOLE_API_PARSED_FILTERS, ConsoleFilter.allLevelsFilterValue()),\n    new ConsoleFilterGroup(GroupName.ERROR, [], ConsoleFilter.singleLevelMask(Protocol.Log.LogEntryLevel.Error)),\n    new ConsoleFilterGroup(GroupName.WARNING, [], ConsoleFilter.singleLevelMask(Protocol.Log.LogEntryLevel.Warning)),\n    new ConsoleFilterGroup(GroupName.INFO, [], ConsoleFilter.singleLevelMask(Protocol.Log.LogEntryLevel.Info)),\n    new ConsoleFilterGroup(GroupName.VERBOSE, [], ConsoleFilter.singleLevelMask(Protocol.Log.LogEntryLevel.Verbose)),\n  ];\n  readonly #selectedFilterSetting =\n      Common.Settings.Settings.instance().createSetting<string|null>('console.sidebar-selected-filter', null);\n  #selectedFilter = this.#groups.find(group => group.name === this.#selectedFilterSetting.get())?.filter;\n\n  constructor(element?: HTMLElement, view = DEFAULT_VIEW) {\n    super(element, {\n      jslog: `${VisualLogging.pane('sidebar').track({resize: true})}`,\n      useShadowDom: true,\n    });\n    this.#view = view;\n    this.setMinimumSize(125, 0);\n\n    this.performUpdate();\n  }\n\n  override performUpdate(): void {\n    const input: ViewInput = {\n      groups: this.#groups,\n      selectedFilter: this.#selectedFilter ?? this.#groups[0].filter,\n      onSelectionChanged: filter => {\n        this.#selectedFilter = filter;\n        this.#selectedFilterSetting.set(filter.name);\n        this.dispatchEventToListeners(Events.FILTER_SELECTED);\n      },\n    };\n    this.#view(input, {}, this.contentElement);\n  }\n\n  clear(): void {\n    for (const group of this.#groups) {\n      group.clear();\n    }\n    this.requestUpdate();\n  }\n\n  onMessageAdded(viewMessage: ConsoleViewMessage): void {\n    for (const group of this.#groups) {\n      group.onMessage(viewMessage);\n    }\n    this.requestUpdate();\n  }\n\n  shouldBeVisible(viewMessage: ConsoleViewMessage): boolean {\n    return this.#selectedFilter?.shouldBeVisible(viewMessage) ?? true;\n  }\n}\n\nexport const enum Events {\n  FILTER_SELECTED = 'FilterSelected',\n}\n\nexport interface EventTypes {\n  [Events.FILTER_SELECTED]: void;\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: auto;\n}\n\n.count {\n  flex: none;\n  margin: 0 var(--sys-size-3);\n}\n\ndevtools-icon {\n  margin-right: var(--sys-size-3);\n\n  &[name=\"cross-circle\"] {\n    color: var(--sys-color-error-bright);\n  }\n\n  &[name=\"warning\"] {\n    color: var(--icon-warning);\n  }\n\n  &[name=\"info\"] {\n    color: var(--icon-info);\n  }\n}\n\n.tree-element-title {\n  flex-grow: 1;\n}\n\n/*# sourceURL=${import.meta.resolve('./consoleSidebar.css')} */`;", "/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ConsoleViewMessage, getMessageForElement} from './ConsoleViewMessage.js';\n\ninterface SelectionModel {\n  item: number;\n  node: Node;\n  offset: number;\n}\n\nexport class ConsoleViewport {\n  element: HTMLElement;\n  private topGapElement: HTMLElement;\n  private topGapElementActive: boolean;\n  private contentElementInternal: HTMLElement;\n  private bottomGapElement: HTMLElement;\n  private bottomGapElementActive: boolean;\n  private provider: ConsoleViewportProvider;\n  private virtualSelectedIndex: number;\n  private firstActiveIndex: number;\n  private lastActiveIndex: number;\n  private renderedItems: ConsoleViewportElement[];\n  private anchorSelection: SelectionModel|null;\n  private headSelection: SelectionModel|null;\n  private itemCount: number;\n  private cumulativeHeights: Int32Array;\n  private muteCopyHandler: boolean;\n  private readonly observer: MutationObserver;\n  private readonly observerConfig: {\n    childList: boolean,\n    subtree: boolean,\n  };\n  private stickToBottomInternal: boolean;\n  private selectionIsBackward: boolean;\n  private lastSelectedElement?: HTMLElement|null;\n  private cachedProviderElements?: Array<ConsoleViewportElement|null>;\n\n  constructor(provider: ConsoleViewportProvider) {\n    this.element = document.createElement('div');\n    this.element.style.overflow = 'auto';\n    this.topGapElement = this.element.createChild('div');\n    this.topGapElement.style.height = '0px';\n    this.topGapElement.style.color = 'transparent';\n    this.topGapElementActive = false;\n    this.contentElementInternal = this.element.createChild('div');\n    this.bottomGapElement = this.element.createChild('div');\n    this.bottomGapElement.style.height = '0px';\n    this.bottomGapElement.style.color = 'transparent';\n    this.bottomGapElementActive = false;\n\n    // Text content needed for range intersection checks in updateSelectionModel.\n    // Use Unicode ZERO WIDTH NO-BREAK SPACE, which avoids contributing any height to the element's layout overflow.\n    this.topGapElement.textContent = '\\uFEFF';\n    this.bottomGapElement.textContent = '\\uFEFF';\n\n    UI.ARIAUtils.setHidden(this.topGapElement, true);\n    UI.ARIAUtils.setHidden(this.bottomGapElement, true);\n\n    this.provider = provider;\n    this.element.addEventListener('scroll', this.onScroll.bind(this), false);\n    this.element.addEventListener('copy', (this.onCopy.bind(this) as EventListener), false);\n    this.element.addEventListener('dragstart', (this.onDragStart.bind(this) as (arg0: Event) => unknown), false);\n    this.contentElementInternal.addEventListener('focusin', (this.onFocusIn.bind(this) as EventListener), false);\n    this.contentElementInternal.addEventListener('focusout', (this.onFocusOut.bind(this) as EventListener), false);\n    this.contentElementInternal.addEventListener('keydown', (this.onKeyDown.bind(this) as EventListener), false);\n    this.virtualSelectedIndex = -1;\n    this.contentElementInternal.tabIndex = -1;\n\n    this.firstActiveIndex = -1;\n    this.lastActiveIndex = -1;\n    this.renderedItems = [];\n    this.anchorSelection = null;\n    this.headSelection = null;\n    this.itemCount = 0;\n    this.cumulativeHeights = new Int32Array(0);\n    this.muteCopyHandler = false;\n\n    // Listen for any changes to descendants and trigger a refresh. This ensures\n    // that items updated asynchronously will not break stick-to-bottom behavior\n    // if they change the scroll height.\n    this.observer = new MutationObserver(this.refresh.bind(this));\n    this.observerConfig = {childList: true, subtree: true};\n    this.stickToBottomInternal = false;\n    this.selectionIsBackward = false;\n  }\n\n  stickToBottom(): boolean {\n    return this.stickToBottomInternal;\n  }\n\n  setStickToBottom(value: boolean): void {\n    this.stickToBottomInternal = value;\n    if (this.stickToBottomInternal) {\n      this.observer.observe(this.contentElementInternal, this.observerConfig);\n    } else {\n      this.observer.disconnect();\n    }\n  }\n\n  hasVirtualSelection(): boolean {\n    return this.virtualSelectedIndex !== -1;\n  }\n\n  copyWithStyles(): void {\n    this.muteCopyHandler = true;\n    this.element.ownerDocument.execCommand('copy');\n    this.muteCopyHandler = false;\n  }\n\n  private onCopy(event: ClipboardEvent): void {\n    if (this.muteCopyHandler) {\n      return;\n    }\n\n    const text = this.selectedText();\n    if (!text) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (this.selectionContainsTable()) {\n      this.copyWithStyles();\n    } else if (event.clipboardData) {\n      event.clipboardData.setData('text/plain', text);\n    }\n  }\n\n  private onFocusIn(event: FocusEvent): void {\n    const renderedIndex =\n        this.renderedItems.findIndex(item => item.element().isSelfOrAncestor((event.target as Node | null)));\n    if (renderedIndex !== -1) {\n      this.virtualSelectedIndex = this.firstActiveIndex + renderedIndex;\n    }\n    let focusLastChild = false;\n    // Make default selection when moving from external (e.g. prompt) to the container.\n    if (this.virtualSelectedIndex === -1 && this.isOutsideViewport((event.relatedTarget as Element | null)) &&\n        event.target === this.contentElementInternal && this.itemCount) {\n      focusLastChild = true;\n      this.virtualSelectedIndex = this.itemCount - 1;\n\n      // Update stick to bottom before scrolling into view.\n      this.refresh();\n      this.scrollItemIntoView(this.virtualSelectedIndex);\n    }\n    this.updateFocusedItem(focusLastChild);\n  }\n\n  private onFocusOut(event: FocusEvent): void {\n    if (this.isOutsideViewport((event.relatedTarget as Element | null))) {\n      this.virtualSelectedIndex = -1;\n    }\n    this.updateFocusedItem();\n  }\n\n  private isOutsideViewport(element: Element|null): boolean {\n    return element !== null && !element.isSelfOrDescendant(this.contentElementInternal);\n  }\n\n  private onDragStart(event: DragEvent): boolean {\n    const text = this.selectedText();\n    if (!text) {\n      return false;\n    }\n    if (event.dataTransfer) {\n      event.dataTransfer.clearData();\n      event.dataTransfer.setData('text/plain', text);\n      event.dataTransfer.effectAllowed = 'copy';\n    }\n    return true;\n  }\n\n  private onKeyDown(event: KeyboardEvent): void {\n    if (UI.UIUtils.isEditing() || !this.itemCount || event.shiftKey) {\n      return;\n    }\n    let isArrowUp = false;\n    switch (event.key) {\n      case 'ArrowUp':\n        if (this.virtualSelectedIndex > 0) {\n          isArrowUp = true;\n          this.virtualSelectedIndex--;\n        } else {\n          return;\n        }\n        break;\n      case 'ArrowDown':\n        if (this.virtualSelectedIndex < this.itemCount - 1) {\n          this.virtualSelectedIndex++;\n        } else {\n          return;\n        }\n        break;\n      case 'Home':\n        this.virtualSelectedIndex = 0;\n        break;\n      case 'End':\n        this.virtualSelectedIndex = this.itemCount - 1;\n        break;\n      default:\n        return;\n    }\n    event.consume(true);\n    this.scrollItemIntoView(this.virtualSelectedIndex);\n    this.updateFocusedItem(isArrowUp);\n  }\n\n  private updateFocusedItem(focusLastChild?: boolean): void {\n    const selectedElement = this.renderedElementAt(this.virtualSelectedIndex);\n    const changed = this.lastSelectedElement !== selectedElement;\n    const containerHasFocus =\n        this.contentElementInternal === Platform.DOMUtilities.deepActiveElement(this.element.ownerDocument);\n    if (this.lastSelectedElement && changed) {\n      this.lastSelectedElement.classList.remove('console-selected');\n    }\n    if (selectedElement && (focusLastChild || changed || containerHasFocus) && this.element.hasFocus()) {\n      selectedElement.classList.add('console-selected');\n      const consoleViewMessage = getMessageForElement(selectedElement);\n      if (consoleViewMessage) {\n        UI.Context.Context.instance().setFlavor(ConsoleViewMessage, consoleViewMessage);\n      }\n      // Do not focus the message if something within holds focus (e.g. object).\n      if (focusLastChild) {\n        this.setStickToBottom(false);\n        this.renderedItems[this.virtualSelectedIndex - this.firstActiveIndex].focusLastChildOrSelf();\n      } else if (!selectedElement.hasFocus()) {\n        selectedElement.focus({preventScroll: true});\n      }\n    }\n    if (this.itemCount && !this.contentElementInternal.hasFocus()) {\n      this.contentElementInternal.tabIndex = 0;\n    } else {\n      this.contentElementInternal.tabIndex = -1;\n    }\n    this.lastSelectedElement = selectedElement;\n  }\n\n  contentElement(): Element {\n    return this.contentElementInternal;\n  }\n\n  invalidate(): void {\n    delete this.cachedProviderElements;\n    this.itemCount = this.provider.itemCount();\n    if (this.virtualSelectedIndex > this.itemCount - 1) {\n      this.virtualSelectedIndex = this.itemCount - 1;\n    }\n    this.rebuildCumulativeHeights();\n    this.refresh();\n  }\n\n  private providerElement(index: number): ConsoleViewportElement|null {\n    if (!this.cachedProviderElements) {\n      this.cachedProviderElements = new Array(this.itemCount);\n    }\n    let element = this.cachedProviderElements[index];\n    if (!element) {\n      element = this.provider.itemElement(index);\n      this.cachedProviderElements[index] = element;\n    }\n    return element;\n  }\n\n  private rebuildCumulativeHeights(): void {\n    const firstActiveIndex = this.firstActiveIndex;\n    const lastActiveIndex = this.lastActiveIndex;\n    let height = 0;\n    this.cumulativeHeights = new Int32Array(this.itemCount);\n    for (let i = 0; i < this.itemCount; ++i) {\n      if (firstActiveIndex <= i && i - firstActiveIndex < this.renderedItems.length && i <= lastActiveIndex) {\n        height += this.renderedItems[i - firstActiveIndex].element().offsetHeight;\n      } else {\n        height += this.provider.fastHeight(i);\n      }\n      this.cumulativeHeights[i] = height;\n    }\n  }\n\n  private rebuildCumulativeHeightsIfNeeded(): void {\n    let totalCachedHeight = 0;\n    let totalMeasuredHeight = 0;\n    // Check whether current items in DOM have changed heights. Tolerate 1-pixel\n    // error due to double-to-integer rounding errors.\n    for (let i = 0; i < this.renderedItems.length; ++i) {\n      const cachedItemHeight = this.cachedItemHeight(this.firstActiveIndex + i);\n      const measuredHeight = this.renderedItems[i].element().offsetHeight;\n      if (Math.abs(cachedItemHeight - measuredHeight) > 1) {\n        this.rebuildCumulativeHeights();\n        return;\n      }\n      totalMeasuredHeight += measuredHeight;\n      totalCachedHeight += cachedItemHeight;\n      if (Math.abs(totalCachedHeight - totalMeasuredHeight) > 1) {\n        this.rebuildCumulativeHeights();\n        return;\n      }\n    }\n  }\n\n  private cachedItemHeight(index: number): number {\n    return index === 0 ? this.cumulativeHeights[0] : this.cumulativeHeights[index] - this.cumulativeHeights[index - 1];\n  }\n\n  private isSelectionBackwards(selection: Selection|null): boolean {\n    if (!selection?.rangeCount || !selection.anchorNode || !selection.focusNode) {\n      return false;\n    }\n    const range = document.createRange();\n    range.setStart(selection.anchorNode, selection.anchorOffset);\n    range.setEnd(selection.focusNode, selection.focusOffset);\n    return range.collapsed;\n  }\n\n  private createSelectionModel(itemIndex: number, node: Node, offset: number): {\n    item: number,\n    node: Node,\n    offset: number,\n  } {\n    return {item: itemIndex, node, offset};\n  }\n\n  private updateSelectionModel(selection: Selection|null): boolean {\n    const range = selection?.rangeCount ? selection.getRangeAt(0) : null;\n    if (!range || (!selection || selection.isCollapsed) || !this.element.hasSelection()) {\n      this.headSelection = null;\n      this.anchorSelection = null;\n      return false;\n    }\n\n    let firstSelectedIndex: number = Number.MAX_VALUE;\n    let lastSelectedIndex = -1;\n\n    let hasVisibleSelection = false;\n    for (let i = 0; i < this.renderedItems.length; ++i) {\n      if (range.intersectsNode(this.renderedItems[i].element())) {\n        const index = i + this.firstActiveIndex;\n        firstSelectedIndex = Math.min(firstSelectedIndex, index);\n        lastSelectedIndex = Math.max(lastSelectedIndex, index);\n        hasVisibleSelection = true;\n      }\n    }\n    const topOverlap = range.intersectsNode(this.topGapElement) && this.topGapElementActive;\n    const bottomOverlap = range.intersectsNode(this.bottomGapElement) && this.bottomGapElementActive;\n    if (!topOverlap && !bottomOverlap && !hasVisibleSelection) {\n      this.headSelection = null;\n      this.anchorSelection = null;\n      return false;\n    }\n\n    if (!this.anchorSelection || !this.headSelection) {\n      this.anchorSelection = this.createSelectionModel(0, this.element, 0);\n      this.headSelection = this.createSelectionModel(this.itemCount - 1, this.element, this.element.children.length);\n      this.selectionIsBackward = false;\n    }\n\n    const isBackward = this.isSelectionBackwards(selection);\n    const startSelection = this.selectionIsBackward ? this.headSelection : this.anchorSelection;\n    const endSelection = this.selectionIsBackward ? this.anchorSelection : this.headSelection;\n    let firstSelected: SelectionModel|null = null;\n    let lastSelected: SelectionModel|null = null;\n    if (hasVisibleSelection) {\n      firstSelected = this.createSelectionModel(firstSelectedIndex, (range.startContainer), range.startOffset);\n      lastSelected = this.createSelectionModel(lastSelectedIndex, (range.endContainer), range.endOffset);\n    }\n    if (topOverlap && bottomOverlap && hasVisibleSelection) {\n      firstSelected = (firstSelected && firstSelected.item < startSelection.item) ? firstSelected : startSelection;\n      lastSelected = (lastSelected && lastSelected.item > endSelection.item) ? lastSelected : endSelection;\n    } else if (!hasVisibleSelection) {\n      firstSelected = startSelection;\n      lastSelected = endSelection;\n    } else if (topOverlap) {\n      firstSelected = isBackward ? this.headSelection : this.anchorSelection;\n    } else if (bottomOverlap) {\n      lastSelected = isBackward ? this.anchorSelection : this.headSelection;\n    }\n\n    if (isBackward) {\n      this.anchorSelection = lastSelected;\n      this.headSelection = firstSelected;\n    } else {\n      this.anchorSelection = firstSelected;\n      this.headSelection = lastSelected;\n    }\n    this.selectionIsBackward = isBackward;\n    return true;\n  }\n\n  private restoreSelection(selection: Selection|null): void {\n    if (!selection || !this.anchorSelection || !this.headSelection) {\n      return;\n    }\n\n    const clampSelection = (selection: SelectionModel, isSelectionBackwards: boolean): {\n      element: Node,\n      offset: number,\n    } => {\n      if (this.firstActiveIndex <= selection.item && selection.item <= this.lastActiveIndex) {\n        return {element: selection.node, offset: selection.offset};\n      }\n\n      const element = selection.item < this.firstActiveIndex ? this.topGapElement : this.bottomGapElement;\n      return {element, offset: isSelectionBackwards ? 1 : 0};\n    };\n\n    const {element: anchorElement, offset: anchorOffset} =\n        clampSelection(this.anchorSelection, Boolean(this.selectionIsBackward));\n    const {element: headElement, offset: headOffset} = clampSelection(this.headSelection, !this.selectionIsBackward);\n    selection.setBaseAndExtent(anchorElement, anchorOffset, headElement, headOffset);\n  }\n\n  private selectionContainsTable(): boolean {\n    if (!this.anchorSelection || !this.headSelection) {\n      return false;\n    }\n\n    const start = this.selectionIsBackward ? this.headSelection.item : this.anchorSelection.item;\n    const end = this.selectionIsBackward ? this.anchorSelection.item : this.headSelection.item;\n\n    for (let i = start; i <= end; i++) {\n      const element = (this.providerElement(i) as ConsoleViewMessage);\n      if (element && element.consoleMessage().type === 'table') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  refresh(): void {\n    this.observer.disconnect();\n    this.innerRefresh();\n    if (this.stickToBottomInternal) {\n      this.observer.observe(this.contentElementInternal, this.observerConfig);\n    }\n  }\n\n  private innerRefresh(): void {\n    if (!this.visibleHeight()) {\n      return;\n    }  // Do nothing for invisible controls.\n\n    if (!this.itemCount) {\n      for (let i = 0; i < this.renderedItems.length; ++i) {\n        this.renderedItems[i].willHide();\n      }\n      this.renderedItems = [];\n      this.contentElementInternal.removeChildren();\n      this.topGapElement.style.height = '0px';\n      this.bottomGapElement.style.height = '0px';\n      this.firstActiveIndex = -1;\n      this.lastActiveIndex = -1;\n      this.updateFocusedItem();\n      return;\n    }\n\n    const selection = this.element.getComponentSelection();\n    const shouldRestoreSelection = this.updateSelectionModel(selection);\n\n    const visibleFrom = this.element.scrollTop;\n    const visibleHeight = this.visibleHeight();\n    const activeHeight = visibleHeight * 2;\n    this.rebuildCumulativeHeightsIfNeeded();\n\n    // When the viewport is scrolled to the bottom, using the cumulative heights estimate is not\n    // precise enough to determine next visible indices. This stickToBottom check avoids extra\n    // calls to refresh in those cases.\n    if (this.stickToBottomInternal) {\n      this.firstActiveIndex = Math.max(this.itemCount - Math.ceil(activeHeight / this.provider.minimumRowHeight()), 0);\n      this.lastActiveIndex = this.itemCount - 1;\n    } else {\n      this.firstActiveIndex = Math.max(\n          Platform.ArrayUtilities.lowerBound(\n              this.cumulativeHeights, visibleFrom + 1 - (activeHeight - visibleHeight) / 2,\n              Platform.ArrayUtilities.DEFAULT_COMPARATOR),\n          0);\n      // Proactively render more rows in case some of them will be collapsed without triggering refresh. @see crbug.com/390169\n      this.lastActiveIndex = this.firstActiveIndex + Math.ceil(activeHeight / this.provider.minimumRowHeight()) - 1;\n      this.lastActiveIndex = Math.min(this.lastActiveIndex, this.itemCount - 1);\n    }\n\n    const topGapHeight = this.cumulativeHeights[this.firstActiveIndex - 1] || 0;\n    const bottomGapHeight =\n        this.cumulativeHeights[this.cumulativeHeights.length - 1] - this.cumulativeHeights[this.lastActiveIndex];\n\n    function prepare(this: ConsoleViewport): void {\n      this.topGapElement.style.height = topGapHeight + 'px';\n      this.bottomGapElement.style.height = bottomGapHeight + 'px';\n      this.topGapElementActive = Boolean(topGapHeight);\n      this.bottomGapElementActive = Boolean(bottomGapHeight);\n      this.contentElementInternal.style.setProperty('height', '10000000px');\n    }\n\n    this.partialViewportUpdate(prepare.bind(this));\n    this.contentElementInternal.style.removeProperty('height');\n    // Should be the last call in the method as it might force layout.\n    if (shouldRestoreSelection) {\n      this.restoreSelection(selection);\n    }\n    if (this.stickToBottomInternal) {\n      this.element.scrollTop = 10000000;\n    }\n  }\n\n  private partialViewportUpdate(prepare: () => void): void {\n    const itemsToRender = new Set<ConsoleViewportElement>();\n    for (let i = this.firstActiveIndex; i <= this.lastActiveIndex; ++i) {\n      const providerElement = this.providerElement(i);\n      console.assert(Boolean(providerElement), 'Expected provider element to be defined');\n      if (providerElement) {\n        itemsToRender.add(providerElement);\n      }\n    }\n    const willBeHidden = this.renderedItems.filter(item => !itemsToRender.has(item));\n    for (let i = 0; i < willBeHidden.length; ++i) {\n      willBeHidden[i].willHide();\n    }\n    prepare();\n    let hadFocus = false;\n    for (let i = 0; i < willBeHidden.length; ++i) {\n      hadFocus = hadFocus || willBeHidden[i].element().hasFocus();\n      willBeHidden[i].element().remove();\n    }\n\n    const wasShown = [];\n    let anchor: (ChildNode|null) = this.contentElementInternal.firstChild;\n    for (const viewportElement of itemsToRender) {\n      const element = viewportElement.element();\n      if (element !== anchor) {\n        const shouldCallWasShown = !element.parentElement;\n        if (shouldCallWasShown) {\n          wasShown.push(viewportElement);\n        }\n        this.contentElementInternal.insertBefore(element, anchor);\n      } else {\n        anchor = anchor.nextSibling;\n      }\n    }\n    for (let i = 0; i < wasShown.length; ++i) {\n      wasShown[i].wasShown();\n    }\n    this.renderedItems = Array.from(itemsToRender);\n\n    if (hadFocus) {\n      this.contentElementInternal.focus();\n    }\n    this.updateFocusedItem();\n  }\n\n  private selectedText(): string|null {\n    this.updateSelectionModel(this.element.getComponentSelection());\n    if (!this.headSelection || !this.anchorSelection) {\n      return null;\n    }\n\n    let startSelection: SelectionModel|null = null;\n    let endSelection: SelectionModel|null = null;\n    if (this.selectionIsBackward) {\n      startSelection = this.headSelection;\n      endSelection = this.anchorSelection;\n    } else {\n      startSelection = this.anchorSelection;\n      endSelection = this.headSelection;\n    }\n\n    const textLines = [];\n    for (let i = startSelection.item; i <= endSelection.item; ++i) {\n      const providerElement = this.providerElement(i);\n      console.assert(Boolean(providerElement));\n      if (!providerElement) {\n        continue;\n      }\n      const element = providerElement.element();\n      const lineContent = element.childTextNodes().map(Components.Linkifier.Linkifier.untruncatedNodeText).join('');\n      textLines.push(lineContent);\n    }\n\n    const endProviderElement = this.providerElement(endSelection.item);\n    const endSelectionElement = endProviderElement?.element();\n    if (endSelectionElement && endSelection.node?.isSelfOrDescendant(endSelectionElement)) {\n      const itemTextOffset = this.textOffsetInNode(endSelectionElement, endSelection.node, endSelection.offset);\n      if (textLines.length > 0) {\n        textLines[textLines.length - 1] = textLines[textLines.length - 1].substring(0, itemTextOffset);\n      }\n    }\n\n    const startProviderElement = this.providerElement(startSelection.item);\n    const startSelectionElement = startProviderElement?.element();\n    if (startSelectionElement && startSelection.node?.isSelfOrDescendant(startSelectionElement)) {\n      const itemTextOffset = this.textOffsetInNode(startSelectionElement, startSelection.node, startSelection.offset);\n      textLines[0] = textLines[0].substring(itemTextOffset);\n    }\n\n    return textLines.join('\\n');\n  }\n\n  private textOffsetInNode(itemElement: Element, selectionNode: Node, offset: number): number {\n    // If the selectionNode is not a TextNode, we may need to convert a child offset into a character offset.\n    const textContentLength = selectionNode.textContent ? selectionNode.textContent.length : 0;\n    if (selectionNode.nodeType !== Node.TEXT_NODE) {\n      if (offset < selectionNode.childNodes.length) {\n        selectionNode = (selectionNode.childNodes.item(offset) as Node);\n        offset = 0;\n      } else {\n        offset = textContentLength;\n      }\n    }\n\n    let chars = 0;\n    let node: Node|null = itemElement;\n    while ((node = node.traverseNextNode(itemElement)) && node !== selectionNode) {\n      if (node.nodeType !== Node.TEXT_NODE ||\n          (node.parentNode &&\n           (node.parentNode.nodeName === 'STYLE' || node.parentNode.nodeName === 'SCRIPT' ||\n            node.parentNode.nodeName === '#document-fragment'))) {\n        continue;\n      }\n      chars += Components.Linkifier.Linkifier.untruncatedNodeText(node).length;\n    }\n    // If the selected node text was truncated, treat any non-zero offset as the full length.\n    const untruncatedContainerLength = Components.Linkifier.Linkifier.untruncatedNodeText(selectionNode).length;\n    if (offset > 0 && untruncatedContainerLength !== textContentLength) {\n      offset = untruncatedContainerLength;\n    }\n    return chars + offset;\n  }\n\n  private onScroll(_event: Event): void {\n    this.refresh();\n  }\n\n  firstVisibleIndex(): number {\n    if (!this.cumulativeHeights.length) {\n      return -1;\n    }\n    this.rebuildCumulativeHeightsIfNeeded();\n    return Platform.ArrayUtilities.lowerBound(\n        this.cumulativeHeights, this.element.scrollTop + 1, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n  }\n\n  lastVisibleIndex(): number {\n    if (!this.cumulativeHeights.length) {\n      return -1;\n    }\n    this.rebuildCumulativeHeightsIfNeeded();\n    const scrollBottom = this.element.scrollTop + this.element.clientHeight;\n    const right = this.itemCount - 1;\n    return Platform.ArrayUtilities.lowerBound(\n        this.cumulativeHeights, scrollBottom, Platform.ArrayUtilities.DEFAULT_COMPARATOR, undefined, right);\n  }\n\n  renderedElementAt(index: number): HTMLElement|null {\n    if (index === -1 || index < this.firstActiveIndex || index > this.lastActiveIndex) {\n      return null;\n    }\n    return this.renderedItems[index - this.firstActiveIndex].element();\n  }\n\n  scrollItemIntoView(index: number, makeLast?: boolean): void {\n    const firstVisibleIndex = this.firstVisibleIndex();\n    const lastVisibleIndex = this.lastVisibleIndex();\n    if (index > firstVisibleIndex && index < lastVisibleIndex) {\n      return;\n    }\n    // If the prompt is visible, then the last item must be fully on screen.\n    if (index === lastVisibleIndex && this.cumulativeHeights[index] <= this.element.scrollTop + this.visibleHeight()) {\n      return;\n    }\n    if (makeLast) {\n      this.forceScrollItemToBeLast(index);\n    } else if (index <= firstVisibleIndex) {\n      this.forceScrollItemToBeFirst(index);\n    } else if (index >= lastVisibleIndex) {\n      this.forceScrollItemToBeLast(index);\n    }\n  }\n\n  forceScrollItemToBeFirst(index: number): void {\n    console.assert(index >= 0 && index < this.itemCount, 'Cannot scroll item at invalid index');\n    this.setStickToBottom(false);\n    this.rebuildCumulativeHeightsIfNeeded();\n    this.element.scrollTop = index > 0 ? this.cumulativeHeights[index - 1] : 0;\n    if (UI.UIUtils.isScrolledToBottom(this.element)) {\n      this.setStickToBottom(true);\n    }\n    this.refresh();\n    // After refresh, the item is in DOM, but may not be visible (items above were larger than expected).\n    const renderedElement = this.renderedElementAt(index);\n    if (renderedElement) {\n      renderedElement.scrollIntoView(true /* alignTop */);\n    }\n  }\n\n  forceScrollItemToBeLast(index: number): void {\n    console.assert(index >= 0 && index < this.itemCount, 'Cannot scroll item at invalid index');\n    this.setStickToBottom(false);\n    this.rebuildCumulativeHeightsIfNeeded();\n    this.element.scrollTop = this.cumulativeHeights[index] - this.visibleHeight();\n    if (UI.UIUtils.isScrolledToBottom(this.element)) {\n      this.setStickToBottom(true);\n    }\n    this.refresh();\n    // After refresh, the item is in DOM, but may not be visible (items above were larger than expected).\n    const renderedElement = this.renderedElementAt(index);\n    if (renderedElement) {\n      renderedElement.scrollIntoView(false /* alignTop */);\n    }\n  }\n\n  private visibleHeight(): number {\n    // Use offsetHeight instead of clientHeight to avoid being affected by horizontal scroll.\n    return this.element.offsetHeight;\n  }\n}\n\nexport interface ConsoleViewportProvider {\n  fastHeight(index: number): number;\n  itemCount(): number;\n  minimumRowHeight(): number;\n  itemElement(index: number): ConsoleViewportElement|null;\n}\n\nexport interface ConsoleViewportElement {\n  willHide(): void;\n  wasShown(): void;\n  element(): HTMLElement;\n  focusLastChildOrSelf(): void;\n}\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2011 Google Inc.  All rights reserved.\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type {Chrome} from '../../../extension-api/ExtensionAPI.js';\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport type * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as CodeHighlighter from '../../ui/components/code_highlighter/code_highlighter.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as RequestLinkIcon from '../../ui/components/request_link_icon/request_link_icon.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\n// eslint-disable-next-line rulesdir/es-modules-import\nimport objectValueStyles from '../../ui/legacy/components/object_ui/objectValue.css.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as Security from '../security/security.js';\n\nimport {format, updateStyle} from './ConsoleFormat.js';\nimport consoleViewStyles from './consoleView.css.js';\nimport type {ConsoleViewportElement} from './ConsoleViewport.js';\nimport {augmentErrorStackWithScriptIds, parseSourcePositionsFromErrorStack} from './ErrorStackParser.js';\n\nconst UIStrings = {\n  /**\n   * @description Message element text content in Console View Message of the Console panel. Shown\n   * when the user tried to run console.clear() but the 'Preserve log' option is enabled, which stops\n   * the log from being cleared.\n   */\n  consoleclearWasPreventedDueTo: '`console.clear()` was prevented due to \\'Preserve log\\'',\n  /**\n   * @description Text shown in the Console panel after the user has cleared the console, which\n   * removes all messages from the console so that it is empty.\n   */\n  consoleWasCleared: 'Console was cleared',\n  /**\n   * @description Message element title in Console View Message of the Console panel\n   * @example {Ctrl+L} PH1\n   */\n  clearAllMessagesWithS: 'Clear all messages with {PH1}',\n  /**\n   * @description Message prefix in Console View Message of the Console panel\n   */\n  assertionFailed: 'Assertion failed: ',\n  /**\n   * @description Message text in Console View Message of the Console panel\n   * @example {console.log(1)} PH1\n   */\n  violationS: '`[Violation]` {PH1}',\n  /**\n   * @description Message text in Console View Message of the Console panel\n   * @example {console.log(1)} PH1\n   */\n  interventionS: '`[Intervention]` {PH1}',\n  /**\n   * @description Message text in Console View Message of the Console panel\n   * @example {console.log(1)} PH1\n   */\n  deprecationS: '`[Deprecation]` {PH1}',\n  /**\n   * @description Note title in Console View Message of the Console panel\n   */\n  thisValueWillNotBeCollectedUntil: 'This value will not be collected until console is cleared.',\n  /**\n   * @description Note title in Console View Message of the Console panel\n   */\n  thisValueWasEvaluatedUponFirst: 'This value was evaluated upon first expanding. It may have changed since then.',\n  /**\n   * @description Note title in Console View Message of the Console panel\n   */\n  functionWasResolvedFromBound: 'Function was resolved from bound function.',\n  /**\n   * @description Shown in the Console panel when an exception is thrown when trying to access a\n   * property on an object. Should be translated.\n   */\n  exception: '<exception>',\n  /**\n   * @description Text to indicate an item is a warning\n   */\n  warning: 'Warning',\n  /**\n   * @description Text for errors\n   */\n  error: 'Error',\n  /**\n   * @description Accessible label for an icon. The icon is used to mark console messages that\n   * originate from a logpoint. Logpoints are special breakpoints that log a user-provided JavaScript\n   * expression to the DevTools console.\n   */\n  logpoint: 'Logpoint',\n  /**\n   * @description Accessible label for an icon. The icon is used to mark console messages that\n   * originate from conditional breakpoints.\n   */\n  cndBreakpoint: 'Conditional Breakpoint',\n  /**\n   * @description Announced by the screen reader to indicate how many times a particular message in\n   * the console was repeated.\n   */\n  repeatS: '{n, plural, =1 {Repeated # time} other {Repeated # times}}',\n  /**\n   * @description Announced by the screen reader to indicate how many times a particular warning\n   * message in the console was repeated.\n   */\n  warningS: '{n, plural, =1 {Warning, Repeated # time} other {Warning, Repeated # times}}',\n  /**\n   * @description Announced by the screen reader to indicate how many times a particular error\n   * message in the console was repeated.\n   */\n  errorS: '{n, plural, =1 {Error, Repeated # time} other {Error, Repeated # times}}',\n  /**\n   * @description Text appended to grouped console messages that are related to URL requests\n   */\n  url: '<URL>',\n  /**\n   * @description Text appended to grouped console messages about tasks that took longer than N ms\n   */\n  tookNms: 'took <N>ms',\n  /**\n   * @description Text appended to grouped console messages about tasks that are related to some DOM event\n   */\n  someEvent: '<some> event',\n  /**\n   * @description Text appended to grouped console messages about tasks that are related to a particular milestone\n   */\n  Mxx: ' M<XX>',\n  /**\n   * @description Text appended to grouped console messages about tasks that are related to autofill completions\n   */\n  attribute: '<attribute>',\n  /**\n   * @description Text for the index of something\n   */\n  index: '(index)',\n  /**\n   * @description Text for the value of something\n   */\n  value: 'Value',\n  /**\n   * @description Title of the Console tool\n   */\n  console: 'Console',\n  /**\n   * @description Message to indicate a console message with a stack table is expanded\n   */\n  stackMessageExpanded: 'Stack table expanded',\n  /**\n   * @description Message to indicate a console message with a stack table is collapsed\n   */\n  stackMessageCollapsed: 'Stack table collapsed',\n  /**\n   * @description Message to offer insights for a console error message\n   */\n  explainThisError: 'Understand this error',\n  /**\n   * @description Message to offer insights for a console warning message\n   */\n  explainThisWarning: 'Understand this warning',\n  /**\n   * @description Message to offer insights for a console message\n   */\n  explainThisMessage: 'Understand this message',\n  /**\n   * @description Message to offer insights for a console error message\n   */\n  explainThisErrorWithAI: 'Understand this error. Powered by AI.',\n  /**\n   * @description Message to offer insights for a console warning message\n   */\n  explainThisWarningWithAI: 'Understand this warning. Powered by AI.',\n  /**\n   * @description Message to offer insights for a console message\n   */\n  explainThisMessageWithAI: 'Understand this message. Powered by AI',\n  /**\n   * @description Tooltip shown when user hovers over the cookie icon to explain that the button will bring the user to the cookie report\n   */\n  SeeIssueInCookieReport: 'Click to open privacy and security panel and show third-party cookie report',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/console/ConsoleViewMessage.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst elementToMessage = new WeakMap<Element, ConsoleViewMessage>();\n\nexport const getMessageForElement = (element: Element): ConsoleViewMessage|undefined => {\n  return elementToMessage.get(element);\n};\n\n/**\n * Combines the error description (essentially the `Error#stack` property value)\n * with the `issueSummary`.\n *\n * @param description the `description` property of the `Error` remote object.\n * @param issueSummary the optional `issueSummary` of the `exceptionMetaData`.\n * @returns the enriched description.\n * @see https://goo.gle/devtools-reduce-network-noise-design\n */\nexport const concatErrorDescriptionAndIssueSummary = (description: string, issueSummary: string): string => {\n  // Insert the issue summary right after the error message.\n  const pos = description.indexOf('\\n');\n  const prefix = pos === -1 ? description : description.substring(0, pos);\n  const suffix = pos === -1 ? '' : description.substring(pos);\n  description = `${prefix}. ${issueSummary}${suffix}`;\n  return description;\n};\n\n// This value reflects the 18px min-height of .console-message, plus the\n// 1px border of .console-message-wrapper. Keep in sync with consoleView.css.\nconst defaultConsoleRowHeight = 19;\n\nconst parameterToRemoteObject = (runtimeModel: SDK.RuntimeModel.RuntimeModel|null):\n    (parameter?: SDK.RemoteObject.RemoteObject|Protocol.Runtime.RemoteObject|string) => SDK.RemoteObject.RemoteObject =>\n        (parameter?: string|SDK.RemoteObject.RemoteObject|Protocol.Runtime.RemoteObject) => {\n          if (parameter instanceof SDK.RemoteObject.RemoteObject) {\n            return parameter;\n          }\n          if (!runtimeModel) {\n            return SDK.RemoteObject.RemoteObject.fromLocalObject(parameter);\n          }\n          if (typeof parameter === 'object') {\n            return runtimeModel.createRemoteObject(parameter);\n          }\n          return runtimeModel.createRemoteObjectFromPrimitiveValue(parameter);\n        };\n\nconst EXPLAIN_HOVER_ACTION_ID = 'explain.console-message.hover';\nconst EXPLAIN_CONTEXT_ERROR_ACTION_ID = 'explain.console-message.context.error';\nconst EXPLAIN_CONTEXT_WARNING_ACTION_ID = 'explain.console-message.context.warning';\nconst EXPLAIN_CONTEXT_OTHER_ACTION_ID = 'explain.console-message.context.other';\n\nconst hoverButtonObserver = new IntersectionObserver(results => {\n  for (const result of results) {\n    if (result.intersectionRatio > 0) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightHoverButtonShown);\n    }\n  }\n});\n\nexport class ConsoleViewMessage implements ConsoleViewportElement {\n  protected message: SDK.ConsoleModel.ConsoleMessage;\n  private readonly linkifier: Components.Linkifier.Linkifier;\n  private repeatCountInternal: number;\n  private closeGroupDecorationCount: number;\n  private consoleGroupInternal: ConsoleGroupViewMessage|null;\n  private selectableChildren: Array<{\n    element: HTMLElement,\n    forceSelect: () => void,\n  }>;\n  private readonly messageResized:\n      (arg0: Common.EventTarget.EventTargetEvent<HTMLElement|UI.TreeOutline.TreeElement>) => void;\n  // The wrapper that contains consoleRowWrapper and other elements in a column.\n  protected elementInternal: HTMLElement|null;\n  // The element that wraps console message elements in a row.\n  protected consoleRowWrapper: HTMLElement|null = null;\n  private readonly previewFormatter: ObjectUI.RemoteObjectPreviewFormatter.RemoteObjectPreviewFormatter;\n  private searchRegexInternal: RegExp|null;\n  protected messageIcon: IconButton.Icon.Icon|null;\n  private traceExpanded: boolean;\n  private expandTrace: ((arg0: boolean) => void)|null;\n  protected anchorElement: HTMLElement|null;\n  protected contentElementInternal: HTMLElement|null;\n  private nestingLevelMarkers: HTMLElement[]|null;\n  private searchHighlightNodes: Element[];\n  private searchHighlightNodeChanges: UI.UIUtils.HighlightChange[];\n  private isVisibleInternal: boolean;\n  private cachedHeight: number;\n  private messagePrefix: string;\n  private timestampElement: HTMLElement|null;\n  private inSimilarGroup: boolean;\n  private similarGroupMarker: HTMLElement|null;\n  private lastInSimilarGroup: boolean;\n  private groupKeyInternal: string;\n  protected repeatCountElement: UI.UIUtils.DevToolsSmallBubble|null;\n  private requestResolver: Logs.RequestResolver.RequestResolver;\n  private issueResolver: IssuesManager.IssueResolver.IssueResolver;\n  #adjacentUserCommandResult = false;\n\n  /** Formatting Error#stack is asynchronous. Allow tests to wait for the result */\n  #formatErrorStackPromiseForTest = Promise.resolve();\n\n  constructor(\n      consoleMessage: SDK.ConsoleModel.ConsoleMessage, linkifier: Components.Linkifier.Linkifier,\n      requestResolver: Logs.RequestResolver.RequestResolver, issueResolver: IssuesManager.IssueResolver.IssueResolver,\n      onResize: (arg0: Common.EventTarget.EventTargetEvent<HTMLElement|UI.TreeOutline.TreeElement>) => void) {\n    this.message = consoleMessage;\n    this.linkifier = linkifier;\n    this.requestResolver = requestResolver;\n    this.issueResolver = issueResolver;\n    this.repeatCountInternal = 1;\n    this.closeGroupDecorationCount = 0;\n    this.selectableChildren = [];\n    this.messageResized = onResize;\n    this.elementInternal = null;\n\n    this.previewFormatter = new ObjectUI.RemoteObjectPreviewFormatter.RemoteObjectPreviewFormatter();\n    this.searchRegexInternal = null;\n    this.messageIcon = null;\n    this.traceExpanded = false;\n    this.expandTrace = null;\n    this.anchorElement = null;\n    this.contentElementInternal = null;\n    this.nestingLevelMarkers = null;\n    this.searchHighlightNodes = [];\n    this.searchHighlightNodeChanges = [];\n    this.isVisibleInternal = false;\n    this.cachedHeight = 0;\n    this.messagePrefix = '';\n    this.timestampElement = null;\n    this.inSimilarGroup = false;\n    this.similarGroupMarker = null;\n    this.lastInSimilarGroup = false;\n    this.groupKeyInternal = '';\n    this.repeatCountElement = null;\n    this.consoleGroupInternal = null;\n  }\n\n  setInsight(insight: HTMLElement): void {\n    this.elementInternal?.querySelector('devtools-console-insight')?.remove();\n    this.elementInternal?.append(insight);\n    this.elementInternal?.classList.toggle('has-insight', true);\n    insight.addEventListener('close', () => {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightClosed);\n      this.elementInternal?.classList.toggle('has-insight', false);\n      this.elementInternal?.removeChild(insight);\n    }, {once: true});\n  }\n\n  element(): HTMLElement {\n    return this.toMessageElement();\n  }\n\n  wasShown(): void {\n    this.isVisibleInternal = true;\n  }\n\n  onResize(): void {\n  }\n\n  willHide(): void {\n    this.isVisibleInternal = false;\n    this.cachedHeight = this.element().offsetHeight;\n  }\n\n  isVisible(): boolean {\n    return this.isVisibleInternal;\n  }\n\n  fastHeight(): number {\n    if (this.cachedHeight) {\n      return this.cachedHeight;\n    }\n    return this.approximateFastHeight();\n  }\n\n  approximateFastHeight(): number {\n    return defaultConsoleRowHeight;\n  }\n\n  consoleMessage(): SDK.ConsoleModel.ConsoleMessage {\n    return this.message;\n  }\n\n  formatErrorStackPromiseForTest(): Promise<void> {\n    return this.#formatErrorStackPromiseForTest;\n  }\n\n  protected buildMessage(): HTMLElement {\n    let messageElement;\n    let messageText: Common.UIString.LocalizedString|string = this.message.messageText;\n    if (this.message.source === Common.Console.FrontendMessageSource.ConsoleAPI) {\n      switch (this.message.type) {\n        case Protocol.Runtime.ConsoleAPICalledEventType.Trace:\n          messageElement = this.format(this.message.parameters || ['console.trace']);\n          break;\n        case Protocol.Runtime.ConsoleAPICalledEventType.Clear:\n          messageElement = document.createElement('span');\n          messageElement.classList.add('console-info');\n          if (Common.Settings.Settings.instance().moduleSetting('preserve-console-log').get()) {\n            messageElement.textContent = i18nString(UIStrings.consoleclearWasPreventedDueTo);\n          } else {\n            messageElement.textContent = i18nString(UIStrings.consoleWasCleared);\n          }\n          UI.Tooltip.Tooltip.install(\n              messageElement, i18nString(UIStrings.clearAllMessagesWithS, {\n                PH1: String(UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutTitleForAction('console.clear')),\n              }));\n          break;\n        case Protocol.Runtime.ConsoleAPICalledEventType.Dir: {\n          const obj = this.message.parameters ? this.message.parameters[0] : undefined;\n          const args = ['%O', obj];\n          messageElement = this.format(args);\n          break;\n        }\n        case Protocol.Runtime.ConsoleAPICalledEventType.Profile:\n        case Protocol.Runtime.ConsoleAPICalledEventType.ProfileEnd:\n          messageElement = this.format([messageText]);\n          break;\n        default: {\n          if (this.message.type === Protocol.Runtime.ConsoleAPICalledEventType.Assert) {\n            this.messagePrefix = i18nString(UIStrings.assertionFailed);\n          }\n          if (this.message.parameters && this.message.parameters.length === 1) {\n            const parameter = this.message.parameters[0];\n            if (typeof parameter !== 'string' && parameter.type === 'string') {\n              messageElement = this.tryFormatAsError((parameter.value as string));\n            }\n          }\n          const args = this.message.parameters || [messageText];\n          messageElement = messageElement || this.format(args);\n        }\n      }\n    } else if (this.message.source === Protocol.Log.LogEntrySource.Network) {\n      messageElement = this.formatAsNetworkRequest() || this.format([messageText]);\n    } else {\n      const messageInParameters = this.message.parameters && messageText === (this.message.parameters[0] as string);\n      // These terms are locked because the console message will not be translated anyway.\n      if (this.message.source === Protocol.Log.LogEntrySource.Violation) {\n        messageText = i18nString(UIStrings.violationS, {PH1: messageText});\n      } else if (this.message.source === Protocol.Log.LogEntrySource.Intervention) {\n        messageText = i18nString(UIStrings.interventionS, {PH1: messageText});\n      } else if (this.message.source === Protocol.Log.LogEntrySource.Deprecation) {\n        messageText = i18nString(UIStrings.deprecationS, {PH1: messageText});\n      }\n      const args = this.message.parameters || [messageText];\n      if (messageInParameters) {\n        args[0] = messageText;\n      }\n      messageElement = this.format(args);\n    }\n    messageElement.classList.add('console-message-text');\n\n    const formattedMessage = document.createElement('span');\n    formattedMessage.classList.add('source-code');\n    this.anchorElement = this.buildMessageAnchor();\n    if (this.anchorElement) {\n      formattedMessage.appendChild(this.anchorElement);\n    }\n    formattedMessage.appendChild(messageElement);\n    return formattedMessage;\n  }\n\n  private formatAsNetworkRequest(): HTMLElement|null {\n    const request = Logs.NetworkLog.NetworkLog.requestForConsoleMessage(this.message);\n    if (!request) {\n      return null;\n    }\n    const messageElement = document.createElement('span');\n    if (this.message.level === Protocol.Log.LogEntryLevel.Error) {\n      UI.UIUtils.createTextChild(messageElement, request.requestMethod + ' ');\n      const linkElement = Components.Linkifier.Linkifier.linkifyRevealable(\n          request, request.url(), request.url(), undefined, undefined, 'network-request');\n      // Focus is handled by the viewport.\n      linkElement.tabIndex = -1;\n      this.selectableChildren.push({element: linkElement, forceSelect: () => linkElement.focus()});\n      messageElement.appendChild(linkElement);\n      if (request.failed) {\n        UI.UIUtils.createTextChildren(messageElement, ' ', request.localizedFailDescription || '');\n      }\n      if (request.statusCode !== 0) {\n        UI.UIUtils.createTextChildren(messageElement, ' ', String(request.statusCode));\n      }\n      const statusText = request.getInferredStatusText();\n      if (statusText) {\n        UI.UIUtils.createTextChildren(messageElement, ' (', statusText, ')');\n      }\n    } else {\n      const messageText = this.message.messageText;\n      const fragment = this.linkifyWithCustomLinkifier(messageText, (text, url, lineNumber, columnNumber) => {\n        const linkElement = url === request.url() ?\n            Components.Linkifier.Linkifier.linkifyRevealable(\n                (request), url, request.url(), undefined, undefined, 'network-request') :\n            Components.Linkifier.Linkifier.linkifyURL(\n                url, ({text, lineNumber, columnNumber} as Components.Linkifier.LinkifyURLOptions));\n        linkElement.tabIndex = -1;\n        this.selectableChildren.push({element: linkElement, forceSelect: () => linkElement.focus()});\n        return linkElement;\n      });\n      messageElement.appendChild(fragment);\n    }\n    return messageElement;\n  }\n\n  private createAffectedResourceLinks(): HTMLElement[] {\n    const elements = [];\n    const requestId = this.message.getAffectedResources()?.requestId;\n    if (requestId) {\n      const icon = new RequestLinkIcon.RequestLinkIcon.RequestLinkIcon();\n      icon.classList.add('resource-links');\n      icon.data = {\n        affectedRequest: {requestId},\n        requestResolver: this.requestResolver,\n        displayURL: false,\n      };\n      elements.push(icon);\n    }\n    const issueId = this.message.getAffectedResources()?.issueId;\n    if (issueId) {\n      const icon = new IssueCounter.IssueLinkIcon.IssueLinkIcon();\n      icon.classList.add('resource-links');\n      icon.data = {issueId, issueResolver: this.issueResolver};\n      elements.push(icon);\n    }\n    return elements;\n  }\n\n  #appendCookieReportButtonToElem(elem: HTMLElement): void {\n    const button = new Buttons.Button.Button();\n    button.data = {\n      size: Buttons.Button.Size.SMALL,\n      variant: Buttons.Button.Variant.ICON,\n      iconName: 'cookie',\n      jslogContext: 'privacy',\n      title: i18nString(UIStrings.SeeIssueInCookieReport)\n    };\n\n    button.addEventListener('click', () => {\n      void Common.Revealer.reveal(new Security.CookieReportView.CookieReportView());\n    });\n\n    elem.appendChild(button);\n  }\n\n  #getLinkifierMetric(): Host.UserMetrics.Action|undefined {\n    const request = Logs.NetworkLog.NetworkLog.requestForConsoleMessage(this.message);\n    if (request?.resourceType().isStyleSheet()) {\n      return Host.UserMetrics.Action.StyleSheetInitiatorLinkClicked;\n    }\n    return undefined;\n  }\n\n  protected buildMessageAnchor(): HTMLElement|null {\n    const runtimeModel = this.message.runtimeModel();\n    if (!runtimeModel) {\n      return null;\n    }\n\n    const linkify = ({stackFrameWithBreakpoint, scriptId, stackTrace, url, line, column}:\n                         SDK.ConsoleModel.ConsoleMessage): HTMLElement|null => {\n      const userMetric = this.#getLinkifierMetric();\n      if (stackFrameWithBreakpoint) {\n        return this.linkifier.maybeLinkifyConsoleCallFrame(runtimeModel.target(), stackFrameWithBreakpoint, {\n          inlineFrameIndex: 0,\n          revealBreakpoint: true,\n          userMetric,\n        });\n      }\n      if (scriptId) {\n        return this.linkifier.linkifyScriptLocation(\n            runtimeModel.target(), scriptId, url || Platform.DevToolsPath.EmptyUrlString, line,\n            {columnNumber: column, inlineFrameIndex: 0, userMetric});\n      }\n      if (stackTrace?.callFrames.length) {\n        return this.linkifier.linkifyStackTraceTopFrame(runtimeModel.target(), stackTrace);\n      }\n      if (url && url !== 'undefined') {\n        return this.linkifier.linkifyScriptLocation(\n            runtimeModel.target(), /* scriptId */ null, url, line,\n            {columnNumber: column, inlineFrameIndex: 0, userMetric});\n      }\n      return null;\n    };\n\n    if (this.message.isCookieReportIssue && Root.Runtime.hostConfig.devToolsPrivacyUI?.enabled) {\n      const anchorWrapperElement = document.createElement('span');\n      anchorWrapperElement.classList.add('console-message-anchor', 'cookie-report-anchor');\n      this.#appendCookieReportButtonToElem(anchorWrapperElement);\n      UI.UIUtils.createTextChild(anchorWrapperElement, ' ');\n      return anchorWrapperElement;\n    }\n\n    const anchorElement = linkify(this.message);\n    // Append a space to prevent the anchor text from being glued to the console message when the user selects and copies the console messages.\n    if (anchorElement) {\n      anchorElement.tabIndex = -1;\n      this.selectableChildren.push({\n        element: anchorElement,\n        forceSelect: () => anchorElement.focus(),\n      });\n      const anchorWrapperElement = document.createElement('span');\n      anchorWrapperElement.classList.add('console-message-anchor');\n      anchorWrapperElement.appendChild(anchorElement);\n\n      for (const element of this.createAffectedResourceLinks()) {\n        UI.UIUtils.createTextChild(anchorWrapperElement, ' ');\n        anchorWrapperElement.append(element);\n      }\n\n      UI.UIUtils.createTextChild(anchorWrapperElement, ' ');\n      return anchorWrapperElement;\n    }\n    return null;\n  }\n\n  private buildMessageWithStackTrace(runtimeModel: SDK.RuntimeModel.RuntimeModel): HTMLElement {\n    const icon = IconButton.Icon.create('triangle-right', 'console-message-expand-icon');\n    const {stackTraceElement, contentElement, messageElement, clickableElement, toggleElement} =\n        this.buildMessageHelper(runtimeModel.target(), this.message.stackTrace, icon);\n    // We debounce the trace expansion metric in case this was accidental.\n    const DEBOUNCE_MS = 300;\n    let debounce: number|undefined;\n    this.expandTrace = (expand: boolean) => {\n      if (expand) {\n        debounce = window.setTimeout(() => {\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.TraceExpanded);\n        }, DEBOUNCE_MS);\n      } else {\n        clearTimeout(debounce);\n      }\n      icon.name = expand ? 'triangle-down' : 'triangle-right';\n      stackTraceElement.classList.toggle('hidden-stack-trace', !expand);\n      const stackTableState =\n          expand ? i18nString(UIStrings.stackMessageExpanded) : i18nString(UIStrings.stackMessageCollapsed);\n      UI.ARIAUtils.setLabel(contentElement, `${messageElement.textContent} ${stackTableState}`);\n      UI.ARIAUtils.LiveAnnouncer.alert(stackTableState);\n      UI.ARIAUtils.setExpanded(clickableElement, expand);\n      this.traceExpanded = expand;\n    };\n\n    const toggleStackTrace = (event: Event): void => {\n      if (UI.UIUtils.isEditing() || contentElement.hasSelection()) {\n        return;\n      }\n      this.expandTrace?.(stackTraceElement.classList.contains('hidden-stack-trace'));\n      event.consume();\n    };\n\n    clickableElement.addEventListener('click', toggleStackTrace, false);\n    if (this.message.type === Protocol.Runtime.ConsoleAPICalledEventType.Trace &&\n        Common.Settings.Settings.instance().moduleSetting('console-trace-expand').get()) {\n      this.expandTrace(true);\n    }\n\n    // @ts-expect-error\n    toggleElement._expandStackTraceForTest = this.expandTrace.bind(this, true);\n    return toggleElement;\n  }\n\n  private buildMessageWithIgnoreLinks(): HTMLElement {\n    const {toggleElement} = this.buildMessageHelper(null, undefined, null);\n    return toggleElement;\n  }\n\n  private buildMessageHelper(\n      target: SDK.Target.Target|null, stackTrace: Protocol.Runtime.StackTrace|undefined,\n      icon: IconButton.Icon.Icon|null): {\n    stackTraceElement: HTMLElement,\n    contentElement: HTMLElement,\n    messageElement: HTMLElement,\n    clickableElement: HTMLElement,\n    toggleElement: HTMLElement,\n  } {\n    const toggleElement = document.createElement('div');\n    toggleElement.classList.add('console-message-stack-trace-toggle');\n    const contentElement = toggleElement.createChild('div', 'console-message-stack-trace-wrapper');\n\n    const messageElement = this.buildMessage();\n    const clickableElement = contentElement.createChild('div');\n    UI.ARIAUtils.setExpanded(clickableElement, false);\n    if (icon) {\n      clickableElement.appendChild(icon);\n    }\n    // Intercept focus to avoid highlight on click.\n    clickableElement.tabIndex = -1;\n    clickableElement.appendChild(messageElement);\n    const stackTraceElement = contentElement.createChild('div');\n    const stackTracePreview = new Components.JSPresentationUtils.StackTracePreviewContent(\n        undefined, target ?? undefined, this.linkifier, {stackTrace, widthConstrained: true});\n    stackTracePreview.markAsRoot();\n    stackTracePreview.show(stackTraceElement);\n    for (const linkElement of stackTracePreview.linkElements) {\n      this.selectableChildren.push({element: linkElement, forceSelect: () => linkElement.focus()});\n    }\n    stackTraceElement.classList.add('hidden-stack-trace');\n    UI.ARIAUtils.setLabel(\n        contentElement, `${messageElement.textContent} ${i18nString(UIStrings.stackMessageCollapsed)}`);\n    UI.ARIAUtils.markAsGroup(stackTraceElement);\n\n    return {stackTraceElement, contentElement, messageElement, clickableElement, toggleElement};\n  }\n\n  private format(rawParameters: Array<string|SDK.RemoteObject.RemoteObject|Protocol.Runtime.RemoteObject|undefined>):\n      HTMLElement {\n    // This node is used like a Builder. Values are continually appended onto it.\n    const formattedResult = document.createElement('span');\n    if (this.messagePrefix) {\n      formattedResult.createChild('span').textContent = this.messagePrefix;\n    }\n    if (!rawParameters.length) {\n      return formattedResult;\n    }\n\n    // Formatting code below assumes that parameters are all wrappers whereas frontend console\n    // API allows passing arbitrary values as messages (strings, numbers, etc.). Wrap them here.\n    // FIXME: Only pass runtime wrappers here.\n    let parameters = rawParameters.map(parameterToRemoteObject(this.message.runtimeModel()));\n\n    // There can be string log and string eval result. We distinguish between them based on message type.\n    const shouldFormatMessage = SDK.RemoteObject.RemoteObject.type((parameters)[0]) === 'string' &&\n        (this.message.type !== SDK.ConsoleModel.FrontendMessageType.Result ||\n         this.message.level === Protocol.Log.LogEntryLevel.Error);\n\n    // Multiple parameters with the first being a format string. Save unused substitutions.\n    if (shouldFormatMessage) {\n      parameters = this.formatWithSubstitutionString(\n          (parameters[0].description as string), parameters.slice(1), formattedResult);\n      if (parameters.length) {\n        UI.UIUtils.createTextChild(formattedResult, ' ');\n      }\n    }\n\n    // Single parameter, or unused substitutions from above.\n    for (let i = 0; i < parameters.length; ++i) {\n      // Inline strings when formatting.\n      if (shouldFormatMessage && parameters[i].type === 'string') {\n        formattedResult.appendChild(this.linkifyStringAsFragment(parameters[i].description || ''));\n      } else {\n        formattedResult.appendChild(this.formatParameter(parameters[i], false, true));\n      }\n      if (i < parameters.length - 1) {\n        UI.UIUtils.createTextChild(formattedResult, ' ');\n      }\n    }\n    return formattedResult;\n  }\n\n  protected formatParameter(\n      output: SDK.RemoteObject.RemoteObject, forceObjectFormat?: boolean, includePreview?: boolean): HTMLElement {\n    if (output.customPreview()) {\n      return new ObjectUI.CustomPreviewComponent.CustomPreviewComponent(output).element as HTMLElement;\n    }\n\n    const outputType = forceObjectFormat ? 'object' : (output.subtype || output.type);\n    let element;\n    switch (outputType) {\n      case 'error':\n        element = this.formatParameterAsError(output);\n        break;\n      case 'function':\n        element = this.formatParameterAsFunction(output, includePreview);\n        break;\n      case 'array':\n      case 'arraybuffer':\n      case 'blob':\n      case 'dataview':\n      case 'generator':\n      case 'iterator':\n      case 'map':\n      case 'object':\n      case 'promise':\n      case 'proxy':\n      case 'set':\n      case 'typedarray':\n      case 'wasmvalue':\n      case 'weakmap':\n      case 'weakset':\n      case 'webassemblymemory':\n        element = this.formatParameterAsObject(output, includePreview);\n        break;\n      case 'node':\n        element = output.isNode() ? this.formatParameterAsNode(output) : this.formatParameterAsObject(output, false);\n        break;\n      case 'trustedtype':\n        element = this.formatParameterAsObject(output, false);\n        break;\n      case 'string':\n        element = this.formatParameterAsString(output);\n        break;\n      case 'boolean':\n      case 'date':\n      case 'null':\n      case 'number':\n      case 'regexp':\n      case 'symbol':\n      case 'undefined':\n      case 'bigint':\n        element = this.formatParameterAsValue(output);\n        break;\n      default:\n        element = this.formatParameterAsValue(output);\n        console.error(`Tried to format remote object of unknown type ${outputType}.`);\n    }\n    element.classList.add(`object-value-${outputType}`);\n    element.classList.add('source-code');\n    return element;\n  }\n\n  private formatParameterAsValue(obj: SDK.RemoteObject.RemoteObject): HTMLElement {\n    const result = document.createElement('span');\n    const description = obj.description || '';\n    if (description.length > getMaxTokenizableStringLength()) {\n      const propertyValue = new ObjectUI.ObjectPropertiesSection.ExpandableTextPropertyValue(\n          document.createElement('span'), description, getLongStringVisibleLength());\n      result.appendChild(propertyValue.element);\n    } else {\n      UI.UIUtils.createTextChild(result, description);\n    }\n    result.addEventListener('contextmenu', this.contextMenuEventFired.bind(this, obj), false);\n    return result;\n  }\n\n  private formatParameterAsTrustedType(obj: SDK.RemoteObject.RemoteObject): HTMLElement {\n    const result = document.createElement('span');\n    const trustedContentSpan = document.createElement('span');\n    trustedContentSpan.appendChild(this.formatParameterAsString(obj));\n    trustedContentSpan.classList.add('object-value-string');\n    UI.UIUtils.createTextChild(result, `${obj.className} `);\n    result.appendChild(trustedContentSpan);\n    return result;\n  }\n\n  private formatParameterAsObject(obj: SDK.RemoteObject.RemoteObject, includePreview?: boolean): HTMLElement {\n    const titleElement = document.createElement('span');\n    titleElement.classList.add('console-object');\n    if (includePreview && obj.preview) {\n      titleElement.classList.add('console-object-preview');\n      this.previewFormatter.appendObjectPreview(titleElement, obj.preview, false /* isEntry */);\n      ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.appendMemoryIcon(titleElement, obj);\n    } else if (obj.type === 'function') {\n      const functionElement = titleElement.createChild('span');\n      void ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.formatObjectAsFunction(obj, functionElement, false);\n      titleElement.classList.add('object-value-function');\n    } else if (obj.subtype === 'trustedtype') {\n      titleElement.appendChild(this.formatParameterAsTrustedType(obj));\n    } else {\n      UI.UIUtils.createTextChild(titleElement, obj.description || '');\n    }\n\n    if (!obj.hasChildren || obj.customPreview()) {\n      return titleElement;\n    }\n\n    const note = titleElement.createChild('span', 'object-state-note info-note');\n    if (this.message.type === SDK.ConsoleModel.FrontendMessageType.QueryObjectResult) {\n      UI.Tooltip.Tooltip.install(note, i18nString(UIStrings.thisValueWillNotBeCollectedUntil));\n    } else {\n      UI.Tooltip.Tooltip.install(note, i18nString(UIStrings.thisValueWasEvaluatedUponFirst));\n    }\n\n    const section = new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection(obj, titleElement, this.linkifier);\n    section.element.classList.add('console-view-object-properties-section');\n    section.enableContextMenu();\n    section.setShowSelectionOnKeyboardFocus(true, true);\n    this.selectableChildren.push(section);\n    section.addEventListener(UI.TreeOutline.Events.ElementAttached, this.messageResized);\n    section.addEventListener(UI.TreeOutline.Events.ElementExpanded, this.messageResized);\n    section.addEventListener(UI.TreeOutline.Events.ElementCollapsed, this.messageResized);\n    return section.element;\n  }\n\n  private formatParameterAsFunction(originalFunction: SDK.RemoteObject.RemoteObject, includePreview?: boolean):\n      HTMLElement {\n    const result = document.createElement('span');\n    void SDK.RemoteObject.RemoteFunction.objectAsFunction(originalFunction)\n        .targetFunction()\n        .then(formatTargetFunction.bind(this));\n    return result;\n\n    function formatTargetFunction(this: ConsoleViewMessage, targetFunction: SDK.RemoteObject.RemoteObject): void {\n      const functionElement = document.createElement('span');\n      const promise = ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.formatObjectAsFunction(\n          targetFunction, functionElement, true, includePreview);\n      result.appendChild(functionElement);\n      if (targetFunction !== originalFunction) {\n        const note = result.createChild('span', 'object-state-note info-note');\n        UI.Tooltip.Tooltip.install(note, i18nString(UIStrings.functionWasResolvedFromBound));\n      }\n      result.addEventListener('contextmenu', this.contextMenuEventFired.bind(this, originalFunction), false);\n      void promise.then(() => this.formattedParameterAsFunctionForTest());\n    }\n  }\n\n  private formattedParameterAsFunctionForTest(): void {\n  }\n\n  private contextMenuEventFired(obj: SDK.RemoteObject.RemoteObject, event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.appendApplicableItems(obj);\n    void contextMenu.show();\n  }\n\n  protected renderPropertyPreviewOrAccessor(\n      object: SDK.RemoteObject.RemoteObject|null, property: Protocol.Runtime.PropertyPreview, propertyPath: Array<{\n        name: (string | symbol),\n      }>): HTMLElement {\n    if (property.type === 'accessor') {\n      return this.formatAsAccessorProperty(object, propertyPath.map(property => property.name.toString()), false);\n    }\n    return this.previewFormatter.renderPropertyPreview(\n        property.type, 'subtype' in property ? property.subtype : undefined, null, property.value);\n  }\n\n  private formatParameterAsNode(remoteObject: SDK.RemoteObject.RemoteObject): HTMLElement {\n    const result = document.createElement('span');\n\n    const domModel = remoteObject.runtimeModel().target().model(SDK.DOMModel.DOMModel);\n    if (!domModel) {\n      return result;\n    }\n    void domModel.pushObjectAsNodeToFrontend(remoteObject).then(async (node: SDK.DOMModel.DOMNode|null) => {\n      if (!node) {\n        result.appendChild(this.formatParameterAsObject(remoteObject, false));\n        return;\n      }\n      const renderResult = await UI.UIUtils.Renderer.render(node);\n      if (renderResult) {\n        this.selectableChildren.push(renderResult);\n        const resizeObserver = new ResizeObserver(() => {\n          this.messageResized({data: renderResult.element});\n        });\n        resizeObserver.observe(renderResult.element);\n        result.appendChild(renderResult.element);\n      } else {\n        result.appendChild(this.formatParameterAsObject(remoteObject, false));\n      }\n      this.formattedParameterAsNodeForTest();\n    });\n\n    return result;\n  }\n\n  private formattedParameterAsNodeForTest(): void {\n  }\n\n  private formatParameterAsString(output: SDK.RemoteObject.RemoteObject): HTMLElement {\n    const description = output.description ?? '';\n    const text = Platform.StringUtilities.formatAsJSLiteral(description);\n    const result = document.createElement('span');\n    result.addEventListener('contextmenu', this.contextMenuEventFired.bind(this, output), false);\n    result.appendChild(this.linkifyStringAsFragment(text));\n    return result;\n  }\n\n  private formatParameterAsError(output: SDK.RemoteObject.RemoteObject): HTMLElement {\n    const result = document.createElement('span');\n\n    // Combine the ExceptionDetails for this error object with the parsed Error#stack.\n    // The Exceptiondetails include script IDs for stack frames, which allows more accurate\n    // linking.\n    const formatErrorStack =\n        async(errorObj: SDK.RemoteObject.RemoteObject, includeCausedByPrefix: boolean): Promise<void> => {\n      const error = SDK.RemoteObject.RemoteError.objectAsError(errorObj);\n      const [details, cause] = await Promise.all([error.exceptionDetails(), error.cause()]);\n      let errorElement = this.tryFormatAsError(error.errorStack, details);\n      if (!errorElement) {\n        errorElement = document.createElement('span');\n        errorElement.append(this.linkifyStringAsFragment(error.errorStack));\n      }\n\n      if (includeCausedByPrefix) {\n        const causeElement = document.createElement('div');\n        causeElement.append('Caused by: ', errorElement);\n        result.appendChild(causeElement);\n      } else {\n        result.appendChild(errorElement);\n      }\n\n      if (cause && cause.subtype === 'error') {\n        await formatErrorStack(cause, /* includeCausedByPrefix */ true);\n      } else if (cause && cause.type === 'string') {\n        const stringCauseElement = document.createElement('div');\n        stringCauseElement.append(`Caused by: ${cause.value}`);\n        result.append(stringCauseElement);\n      }\n    };\n\n    this.#formatErrorStackPromiseForTest = formatErrorStack(output, /* includeCausedByPrefix */ false);\n\n    return result;\n  }\n\n  private formatAsArrayEntry(output: SDK.RemoteObject.RemoteObject): HTMLElement {\n    return this.previewFormatter.renderPropertyPreview(\n        output.type, output.subtype, output.className, output.description);\n  }\n\n  private formatAsAccessorProperty(\n      object: SDK.RemoteObject.RemoteObject|null, propertyPath: string[], isArrayEntry: boolean): HTMLElement {\n    const rootElement =\n        ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement.createRemoteObjectAccessorPropertySpan(\n            object, propertyPath, onInvokeGetterClick.bind(this));\n\n    function onInvokeGetterClick(this: ConsoleViewMessage, result: SDK.RemoteObject.CallFunctionResult): void {\n      const wasThrown = result.wasThrown;\n      const object = result.object;\n      if (!object) {\n        return;\n      }\n      rootElement.removeChildren();\n      if (wasThrown) {\n        const element = rootElement.createChild('span');\n        element.textContent = i18nString(UIStrings.exception);\n        UI.Tooltip.Tooltip.install(element, (object.description as string));\n      } else if (isArrayEntry) {\n        rootElement.appendChild(this.formatAsArrayEntry(object));\n      } else {\n        // Make a PropertyPreview from the RemoteObject similar to the backend logic.\n        const maxLength = 100;\n        const type = object.type;\n        const subtype = object.subtype;\n        let description = '';\n        if (type !== 'function' && object.description) {\n          if (type === 'string' || subtype === 'regexp' || subtype === 'trustedtype') {\n            description = Platform.StringUtilities.trimMiddle(object.description, maxLength);\n          } else {\n            description = Platform.StringUtilities.trimEndWithMaxLength(object.description, maxLength);\n          }\n        }\n        rootElement.appendChild(\n            this.previewFormatter.renderPropertyPreview(type, subtype, object.className, description));\n      }\n    }\n\n    return rootElement;\n  }\n\n  private formatWithSubstitutionString(\n      formatString: string, parameters: SDK.RemoteObject.RemoteObject[],\n      formattedResult: HTMLElement): SDK.RemoteObject.RemoteObject[] {\n    const currentStyle = new Map();\n    const {tokens, args} = format(formatString, parameters);\n    for (const token of tokens) {\n      switch (token.type) {\n        case 'generic': {\n          formattedResult.append(this.formatParameter(token.value, true /* force */, false /* includePreview */));\n          break;\n        }\n        case 'optimal': {\n          formattedResult.append(this.formatParameter(token.value, false /* force */, true /* includePreview */));\n          break;\n        }\n        case 'string': {\n          if (currentStyle.size === 0) {\n            formattedResult.append(this.linkifyStringAsFragment(token.value));\n          } else {\n            const lines = token.value.split('\\n');\n            for (let i = 0; i < lines.length; i++) {\n              if (i > 0) {\n                formattedResult.append(document.createElement('br'));\n              }\n              const wrapper = document.createElement('span');\n              wrapper.style.setProperty('contain', 'paint');\n              wrapper.style.setProperty('display', 'inline-block');\n              wrapper.style.setProperty('max-width', '100%');\n              wrapper.appendChild(this.linkifyStringAsFragment(lines[i]));\n              for (const [property, {value, priority}] of currentStyle) {\n                wrapper.style.setProperty(property, value, priority);\n              }\n              formattedResult.append(wrapper);\n            }\n          }\n          break;\n        }\n        case 'style':\n          // Make sure that allowed properties do not interfere with link visibility.\n          updateStyle(currentStyle, token.value);\n          break;\n      }\n    }\n    return args;\n  }\n\n  matchesFilterRegex(regexObject: RegExp): boolean {\n    regexObject.lastIndex = 0;\n    const contentElement = this.contentElement();\n    const anchorText = this.anchorElement ? this.anchorElement.deepTextContent() : '';\n    return (Boolean(anchorText) && regexObject.test(anchorText.trim())) ||\n        regexObject.test(contentElement.deepTextContent().slice(anchorText.length));\n  }\n\n  matchesFilterText(filter: string): boolean {\n    const text = this.contentElement().deepTextContent();\n    return text.toLowerCase().includes(filter.toLowerCase());\n  }\n\n  updateTimestamp(): void {\n    if (!this.contentElementInternal) {\n      return;\n    }\n\n    if (Common.Settings.Settings.instance().moduleSetting('console-timestamps-enabled').get()) {\n      if (!this.timestampElement) {\n        this.timestampElement = document.createElement('span');\n        this.timestampElement.classList.add('console-timestamp');\n      }\n      this.timestampElement.textContent = UI.UIUtils.formatTimestamp(this.message.timestamp, false) + ' ';\n      UI.Tooltip.Tooltip.install(this.timestampElement, UI.UIUtils.formatTimestamp(this.message.timestamp, true));\n      this.contentElementInternal.insertBefore(this.timestampElement, this.contentElementInternal.firstChild);\n    } else if (this.timestampElement) {\n      this.timestampElement.remove();\n      this.timestampElement = null;\n    }\n  }\n\n  nestingLevel(): number {\n    let nestingLevel = 0;\n    for (let group = this.consoleGroup(); group !== null; group = group.consoleGroup()) {\n      nestingLevel++;\n    }\n    return nestingLevel;\n  }\n\n  setConsoleGroup(group: ConsoleGroupViewMessage): void {\n    // TODO(crbug.com/1477675): Figure out why `this.consoleGroupInternal` is\n    //     not null here and add an assertion.\n    this.consoleGroupInternal = group;\n  }\n\n  clearConsoleGroup(): void {\n    this.consoleGroupInternal = null;\n  }\n\n  consoleGroup(): ConsoleGroupViewMessage|null {\n    return this.consoleGroupInternal;\n  }\n\n  setInSimilarGroup(inSimilarGroup: boolean, isLast?: boolean): void {\n    this.inSimilarGroup = inSimilarGroup;\n    this.lastInSimilarGroup = inSimilarGroup && Boolean(isLast);\n    if (this.similarGroupMarker && !inSimilarGroup) {\n      this.similarGroupMarker.remove();\n      this.similarGroupMarker = null;\n    } else if (this.elementInternal && !this.similarGroupMarker && inSimilarGroup) {\n      this.similarGroupMarker = document.createElement('div');\n      this.similarGroupMarker.classList.add('nesting-level-marker');\n      this.consoleRowWrapper?.insertBefore(this.similarGroupMarker, this.consoleRowWrapper.firstChild);\n      this.similarGroupMarker.classList.toggle('group-closed', this.lastInSimilarGroup);\n    }\n  }\n\n  isLastInSimilarGroup(): boolean {\n    return Boolean(this.inSimilarGroup) && Boolean(this.lastInSimilarGroup);\n  }\n\n  resetCloseGroupDecorationCount(): void {\n    if (!this.closeGroupDecorationCount) {\n      return;\n    }\n    this.closeGroupDecorationCount = 0;\n    this.updateCloseGroupDecorations();\n  }\n\n  incrementCloseGroupDecorationCount(): void {\n    ++this.closeGroupDecorationCount;\n    this.updateCloseGroupDecorations();\n  }\n\n  private updateCloseGroupDecorations(): void {\n    if (!this.nestingLevelMarkers) {\n      return;\n    }\n    for (let i = 0, n = this.nestingLevelMarkers.length; i < n; ++i) {\n      const marker = this.nestingLevelMarkers[i];\n      marker.classList.toggle('group-closed', n - i <= this.closeGroupDecorationCount);\n    }\n  }\n\n  protected focusedChildIndex(): number {\n    if (!this.selectableChildren.length) {\n      return -1;\n    }\n    return this.selectableChildren.findIndex(child => child.element.hasFocus());\n  }\n\n  private onKeyDown(event: KeyboardEvent): void {\n    if (UI.UIUtils.isEditing() || !this.elementInternal || !this.elementInternal.hasFocus() ||\n        this.elementInternal.hasSelection()) {\n      return;\n    }\n    if (this.maybeHandleOnKeyDown(event)) {\n      event.consume(true);\n    }\n  }\n\n  maybeHandleOnKeyDown(event: KeyboardEvent): boolean {\n    // Handle trace expansion.\n    const focusedChildIndex = this.focusedChildIndex();\n    const isWrapperFocused = focusedChildIndex === -1;\n    if (this.expandTrace && isWrapperFocused) {\n      if ((event.key === 'ArrowLeft' && this.traceExpanded) || (event.key === 'ArrowRight' && !this.traceExpanded)) {\n        this.expandTrace(!this.traceExpanded);\n        return true;\n      }\n    }\n    if (!this.selectableChildren.length) {\n      return false;\n    }\n\n    if (event.key === 'ArrowLeft') {\n      this.elementInternal?.focus();\n      return true;\n    }\n    if (event.key === 'ArrowRight') {\n      if (isWrapperFocused && this.selectNearestVisibleChild(0)) {\n        return true;\n      }\n    }\n    if (event.key === 'ArrowUp') {\n      const firstVisibleChild = this.nearestVisibleChild(0);\n      if (this.selectableChildren[focusedChildIndex] === firstVisibleChild && firstVisibleChild) {\n        this.elementInternal?.focus();\n        return true;\n      }\n      if (this.selectNearestVisibleChild(focusedChildIndex - 1, true /* backwards */)) {\n        return true;\n      }\n    }\n    if (event.key === 'ArrowDown') {\n      if (isWrapperFocused && this.selectNearestVisibleChild(0)) {\n        return true;\n      }\n      if (!isWrapperFocused && this.selectNearestVisibleChild(focusedChildIndex + 1)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private selectNearestVisibleChild(fromIndex: number, backwards?: boolean): boolean {\n    const nearestChild = this.nearestVisibleChild(fromIndex, backwards);\n    if (nearestChild) {\n      nearestChild.forceSelect();\n      return true;\n    }\n    return false;\n  }\n\n  private nearestVisibleChild(fromIndex: number, backwards?: boolean): {\n    element: Element,\n    forceSelect: () => void,\n  }|null {\n    const childCount = this.selectableChildren.length;\n    if (fromIndex < 0 || fromIndex >= childCount) {\n      return null;\n    }\n    const direction = backwards ? -1 : 1;\n    let index = fromIndex;\n\n    while (!this.selectableChildren[index].element.offsetParent) {\n      index += direction;\n      if (index < 0 || index >= childCount) {\n        return null;\n      }\n    }\n    return this.selectableChildren[index];\n  }\n\n  focusLastChildOrSelf(): void {\n    if (this.elementInternal &&\n        !this.selectNearestVisibleChild(this.selectableChildren.length - 1, true /* backwards */)) {\n      this.elementInternal.focus();\n    }\n  }\n\n  setContentElement(element: HTMLElement): void {\n    console.assert(!this.contentElementInternal, 'Cannot set content element twice');\n    this.contentElementInternal = element;\n  }\n\n  getContentElement(): HTMLElement|null {\n    return this.contentElementInternal;\n  }\n\n  contentElement(): HTMLElement {\n    if (this.contentElementInternal) {\n      return this.contentElementInternal;\n    }\n\n    const contentElement = document.createElement('div');\n    contentElement.classList.add('console-message');\n    if (this.messageIcon) {\n      contentElement.appendChild(this.messageIcon);\n    }\n    this.contentElementInternal = contentElement;\n\n    const runtimeModel = this.message.runtimeModel();\n    let formattedMessage;\n    const shouldIncludeTrace = Boolean(this.message.stackTrace) &&\n        (this.message.source === Protocol.Log.LogEntrySource.Network ||\n         this.message.source === Protocol.Log.LogEntrySource.Violation ||\n         this.message.level === Protocol.Log.LogEntryLevel.Error ||\n         this.message.level === Protocol.Log.LogEntryLevel.Warning ||\n         this.message.type === Protocol.Runtime.ConsoleAPICalledEventType.Trace);\n    if (runtimeModel && shouldIncludeTrace) {\n      formattedMessage = this.buildMessageWithStackTrace(runtimeModel);\n    } else {\n      formattedMessage = this.buildMessageWithIgnoreLinks();\n    }\n    contentElement.appendChild(formattedMessage);\n\n    this.updateTimestamp();\n    return this.contentElementInternal;\n  }\n\n  toMessageElement(): HTMLElement {\n    if (this.elementInternal) {\n      return this.elementInternal;\n    }\n    this.elementInternal = document.createElement('div');\n    this.elementInternal.tabIndex = -1;\n    this.elementInternal.addEventListener('keydown', (this.onKeyDown.bind(this) as EventListener));\n    this.updateMessageElement();\n    this.elementInternal.classList.toggle('console-adjacent-user-command-result', this.#adjacentUserCommandResult);\n    return this.elementInternal;\n  }\n\n  updateMessageElement(): void {\n    if (!this.elementInternal) {\n      return;\n    }\n\n    this.elementInternal.className = 'console-message-wrapper';\n    this.elementInternal.setAttribute('jslog', `${VisualLogging.item('console-message').track({\n                                        click: true,\n                                        keydown: 'ArrowUp|ArrowDown|ArrowLeft|ArrowRight|Enter|Space|Home|End',\n                                      })}`);\n    this.elementInternal.removeChildren();\n    this.consoleRowWrapper = this.elementInternal.createChild('div');\n    this.consoleRowWrapper.classList.add('console-row-wrapper');\n    if (this.message.isGroupStartMessage()) {\n      this.elementInternal.classList.add('console-group-title');\n    }\n    if (this.message.source === Common.Console.FrontendMessageSource.ConsoleAPI) {\n      this.elementInternal.classList.add('console-from-api');\n    }\n    if (this.inSimilarGroup) {\n      this.similarGroupMarker = this.consoleRowWrapper.createChild('div', 'nesting-level-marker');\n      this.similarGroupMarker.classList.toggle('group-closed', this.lastInSimilarGroup);\n    }\n\n    this.nestingLevelMarkers = [];\n    for (let i = 0; i < this.nestingLevel(); ++i) {\n      this.nestingLevelMarkers.push(this.consoleRowWrapper.createChild('div', 'nesting-level-marker'));\n    }\n    this.updateCloseGroupDecorations();\n    elementToMessage.set(this.elementInternal, this);\n\n    switch (this.message.level) {\n      case Protocol.Log.LogEntryLevel.Verbose:\n        this.elementInternal.classList.add('console-verbose-level');\n        UI.ARIAUtils.setLabel(this.elementInternal, this.text);\n        break;\n      case Protocol.Log.LogEntryLevel.Info:\n        this.elementInternal.classList.add('console-info-level');\n        if (this.message.type === SDK.ConsoleModel.FrontendMessageType.System) {\n          this.elementInternal.classList.add('console-system-type');\n        }\n        UI.ARIAUtils.setLabel(this.elementInternal, this.text);\n        break;\n      case Protocol.Log.LogEntryLevel.Warning:\n        this.elementInternal.classList.add('console-warning-level');\n        this.elementInternal.role = 'log';\n        UI.ARIAUtils.setLabel(this.elementInternal, this.text);\n        break;\n      case Protocol.Log.LogEntryLevel.Error:\n        this.elementInternal.classList.add('console-error-level');\n        this.elementInternal.role = 'log';\n        UI.ARIAUtils.setLabel(this.elementInternal, this.text);\n        break;\n    }\n    this.updateMessageIcon();\n    if (this.shouldRenderAsWarning()) {\n      this.elementInternal.classList.add('console-warning-level');\n    }\n\n    this.consoleRowWrapper.appendChild(this.contentElement());\n\n    if (UI.ActionRegistry.ActionRegistry.instance().hasAction(EXPLAIN_HOVER_ACTION_ID) && this.shouldShowInsights()) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightConsoleMessageShown);\n      this.consoleRowWrapper.append(this.#createHoverButton());\n    }\n\n    if (this.repeatCountInternal > 1) {\n      this.showRepeatCountElement();\n    }\n  }\n\n  shouldShowInsights(): boolean {\n    if (this.message.source === Common.Console.FrontendMessageSource.ConsoleAPI &&\n        this.message.stackTrace?.callFrames[0]?.url === '') {\n      // Do not show insights for direct calls to Console APIs from within DevTools Console.\n      return false;\n    }\n    if (this.message.messageText === '' || this.message.source === Common.Console.FrontendMessageSource.SELF_XSS) {\n      return false;\n    }\n    return this.message.level === Protocol.Log.LogEntryLevel.Error ||\n        this.message.level === Protocol.Log.LogEntryLevel.Warning;\n  }\n\n  getExplainLabel(): string {\n    if (this.message.level === Protocol.Log.LogEntryLevel.Error) {\n      return i18nString(UIStrings.explainThisError);\n    }\n    if (this.message.level === Protocol.Log.LogEntryLevel.Warning) {\n      return i18nString(UIStrings.explainThisWarning);\n    }\n    return i18nString(UIStrings.explainThisMessage);\n  }\n\n  #getExplainAriaLabel(): string {\n    if (this.message.level === Protocol.Log.LogEntryLevel.Error) {\n      return i18nString(UIStrings.explainThisErrorWithAI);\n    }\n    if (this.message.level === Protocol.Log.LogEntryLevel.Warning) {\n      return i18nString(UIStrings.explainThisWarningWithAI);\n    }\n    return i18nString(UIStrings.explainThisMessageWithAI);\n  }\n\n  getExplainActionId(): string {\n    if (this.message.level === Protocol.Log.LogEntryLevel.Error) {\n      return EXPLAIN_CONTEXT_ERROR_ACTION_ID;\n    }\n    if (this.message.level === Protocol.Log.LogEntryLevel.Warning) {\n      return EXPLAIN_CONTEXT_WARNING_ACTION_ID;\n    }\n    return EXPLAIN_CONTEXT_OTHER_ACTION_ID;\n  }\n\n  #createHoverButton(): HTMLButtonElement {\n    const icon = new IconButton.Icon.Icon();\n    icon.name = 'lightbulb-spark';\n    icon.style.color = 'var(--devtools-icon-color)';\n    icon.classList.add('medium');\n    const button = document.createElement('button');\n    button.append(icon);\n    button.onclick = (event: Event) => {\n      event.stopPropagation();\n      UI.Context.Context.instance().setFlavor(ConsoleViewMessage, this);\n      const action = UI.ActionRegistry.ActionRegistry.instance().getAction(EXPLAIN_HOVER_ACTION_ID);\n      void action.execute();\n    };\n    const label = document.createElement('div');\n    label.classList.add('button-label');\n    const text = document.createElement('div');\n    text.innerText = this.getExplainLabel();\n    label.append(text);\n    button.append(label);\n    button.classList.add('hover-button');\n    button.ariaLabel = this.#getExplainAriaLabel();\n    button.tabIndex = 0;\n    button.setAttribute('jslog', `${VisualLogging.action(EXPLAIN_HOVER_ACTION_ID).track({click: true})}`);\n    hoverButtonObserver.observe(button);\n    return button;\n  }\n\n  private shouldRenderAsWarning(): boolean {\n    return (this.message.level === Protocol.Log.LogEntryLevel.Verbose ||\n            this.message.level === Protocol.Log.LogEntryLevel.Info) &&\n        (this.message.source === Protocol.Log.LogEntrySource.Violation ||\n         this.message.source === Protocol.Log.LogEntrySource.Deprecation ||\n         this.message.source === Protocol.Log.LogEntrySource.Intervention ||\n         this.message.source === Protocol.Log.LogEntrySource.Recommendation);\n  }\n\n  private updateMessageIcon(): void {\n    if (this.messageIcon) {\n      // Instead of updating the existing icon, we simply re-render. This happens only for\n      // revoked exceptions so it doesn't need to be terribly efficient.\n      this.messageIcon.remove();\n      this.messageIcon = null;\n    }\n\n    const color = '';\n    let iconName = '';\n    let accessibleName = '';\n    if (this.message.level === Protocol.Log.LogEntryLevel.Warning) {\n      iconName = 'warning-filled';\n      accessibleName = i18nString(UIStrings.warning);\n    } else if (this.message.level === Protocol.Log.LogEntryLevel.Error) {\n      iconName = 'cross-circle-filled';\n      accessibleName = i18nString(UIStrings.error);\n    } else if (this.message.originatesFromLogpoint) {\n      iconName = 'console-logpoint';\n      accessibleName = i18nString(UIStrings.logpoint);\n    } else if (this.message.originatesFromConditionalBreakpoint) {\n      iconName = 'console-conditional-breakpoint';\n      accessibleName = i18nString(UIStrings.cndBreakpoint);\n    }\n    if (!iconName) {\n      return;\n    }\n\n    this.messageIcon = new IconButton.Icon.Icon();\n    this.messageIcon.name = iconName;\n    this.messageIcon.style.color = color;\n    this.messageIcon.classList.add('message-level-icon', 'small');\n    if (this.contentElementInternal) {\n      this.contentElementInternal.insertBefore(this.messageIcon, this.contentElementInternal.firstChild);\n    }\n    UI.ARIAUtils.setLabel(this.messageIcon, accessibleName);\n  }\n\n  setAdjacentUserCommandResult(adjacentUserCommandResult: boolean): void {\n    this.#adjacentUserCommandResult = adjacentUserCommandResult;\n    this.elementInternal?.classList.toggle('console-adjacent-user-command-result', this.#adjacentUserCommandResult);\n  }\n\n  repeatCount(): number {\n    return this.repeatCountInternal || 1;\n  }\n\n  resetIncrementRepeatCount(): void {\n    this.repeatCountInternal = 1;\n    if (!this.repeatCountElement) {\n      return;\n    }\n\n    this.repeatCountElement.remove();\n    if (this.contentElementInternal) {\n      this.contentElementInternal.classList.remove('repeated-message');\n    }\n    this.repeatCountElement = null;\n  }\n\n  incrementRepeatCount(): void {\n    this.repeatCountInternal++;\n    this.showRepeatCountElement();\n  }\n\n  setRepeatCount(repeatCount: number): void {\n    this.repeatCountInternal = repeatCount;\n    this.showRepeatCountElement();\n  }\n\n  showRepeatCountElement(): void {\n    if (!this.elementInternal) {\n      return;\n    }\n\n    if (!this.repeatCountElement) {\n      this.repeatCountElement = document.createElement('dt-small-bubble');\n      this.repeatCountElement.classList.add('console-message-repeat-count');\n      switch (this.message.level) {\n        case Protocol.Log.LogEntryLevel.Warning:\n          this.repeatCountElement.type = 'warning';\n          break;\n        case Protocol.Log.LogEntryLevel.Error:\n          this.repeatCountElement.type = 'error';\n          break;\n        case Protocol.Log.LogEntryLevel.Verbose:\n          this.repeatCountElement.type = 'verbose';\n          break;\n        default:\n          this.repeatCountElement.type = 'info';\n      }\n      if (this.shouldRenderAsWarning()) {\n        this.repeatCountElement.type = 'warning';\n      }\n\n      this.consoleRowWrapper?.insertBefore(this.repeatCountElement, this.contentElementInternal);\n      this.contentElement().classList.add('repeated-message');\n    }\n    this.repeatCountElement.textContent = `${this.repeatCountInternal}`;\n\n    let accessibleName;\n    if (this.message.level === Protocol.Log.LogEntryLevel.Warning) {\n      accessibleName = i18nString(UIStrings.warningS, {n: this.repeatCountInternal});\n    } else if (this.message.level === Protocol.Log.LogEntryLevel.Error) {\n      accessibleName = i18nString(UIStrings.errorS, {n: this.repeatCountInternal});\n    } else {\n      accessibleName = i18nString(UIStrings.repeatS, {n: this.repeatCountInternal});\n    }\n    UI.ARIAUtils.setLabel(this.repeatCountElement, accessibleName);\n  }\n\n  get text(): string {\n    return this.message.messageText;\n  }\n\n  toExportString(): string {\n    const lines = [];\n    const nodes = this.contentElement().childTextNodes();\n    const messageContent = nodes.map(Components.Linkifier.Linkifier.untruncatedNodeText).join('');\n    for (let i = 0; i < this.repeatCount(); ++i) {\n      lines.push(messageContent);\n    }\n    return lines.join('\\n');\n  }\n\n  toMessageTextString(): string {\n    const root = this.contentElement();\n    const consoleText = root.querySelector('.console-message-text');\n    if (consoleText) {\n      return consoleText.deepTextContent().trim();\n    }\n    // Fallback to SDK's message text.\n    return this.consoleMessage().messageText;\n  }\n\n  setSearchRegex(regex: RegExp|null): void {\n    if (this.searchHighlightNodeChanges?.length) {\n      UI.UIUtils.revertDomChanges(this.searchHighlightNodeChanges);\n    }\n    this.searchRegexInternal = regex;\n    this.searchHighlightNodes = [];\n    this.searchHighlightNodeChanges = [];\n    if (!this.searchRegexInternal) {\n      return;\n    }\n\n    const text = this.contentElement().deepTextContent();\n    let match;\n    this.searchRegexInternal.lastIndex = 0;\n    const sourceRanges = [];\n    while ((match = this.searchRegexInternal.exec(text)) && match[0]) {\n      sourceRanges.push(new TextUtils.TextRange.SourceRange(match.index, match[0].length));\n    }\n\n    if (sourceRanges.length) {\n      this.searchHighlightNodes =\n          UI.UIUtils.highlightSearchResults(this.contentElement(), sourceRanges, this.searchHighlightNodeChanges);\n    }\n  }\n\n  searchRegex(): RegExp|null {\n    return this.searchRegexInternal;\n  }\n\n  searchCount(): number {\n    return this.searchHighlightNodes.length;\n  }\n\n  searchHighlightNode(index: number): Element {\n    return this.searchHighlightNodes[index];\n  }\n\n  private async getInlineFrames(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, url: Platform.DevToolsPath.UrlString,\n      lineNumber: number|undefined, columnNumber: number|undefined): Promise<{frames: Chrome.DevTools.FunctionInfo[]}> {\n    const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n    const projects = Workspace.Workspace.WorkspaceImpl.instance().projects();\n    const uiSourceCodes = projects.map(project => project.uiSourceCodeForURL(url)).flat().filter(f => !!f);\n    const scripts =\n        uiSourceCodes.map(uiSourceCode => debuggerWorkspaceBinding.scriptsForUISourceCode(uiSourceCode)).flat();\n    if (scripts.length) {\n      const location =\n          new SDK.DebuggerModel.Location(debuggerModel, scripts[0].scriptId, lineNumber || 0, columnNumber);\n      const functionInfo = await debuggerWorkspaceBinding.pluginManager.getFunctionInfo(scripts[0], location);\n      return functionInfo && 'frames' in functionInfo ? functionInfo : {frames: []};\n    }\n\n    return {frames: []};\n  }\n\n  // Expand inline stack frames in the formatted error in the stackTrace element, inserting new elements before the\n  // insertBefore anchor.\n  private async expandInlineStackFrames(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, prefix: string, suffix: string,\n      url: Platform.DevToolsPath.UrlString, lineNumber: number|undefined, columnNumber: number|undefined,\n      stackTrace: HTMLElement, insertBefore: HTMLElement): Promise<boolean> {\n    const {frames} = await this.getInlineFrames(debuggerModel, url, lineNumber, columnNumber);\n    if (!frames.length) {\n      return false;\n    }\n\n    for (let f = 0; f < frames.length; ++f) {\n      const {name} = frames[f];\n      const formattedLine = document.createElement('span');\n      formattedLine.appendChild(this.linkifyStringAsFragment(`${prefix} ${name} (`));\n      const scriptLocationLink = this.linkifier.linkifyScriptLocation(\n          debuggerModel.target(), null, url, lineNumber, {columnNumber, inlineFrameIndex: f});\n      scriptLocationLink.tabIndex = -1;\n      this.selectableChildren.push({element: scriptLocationLink, forceSelect: () => scriptLocationLink.focus()});\n      formattedLine.appendChild(scriptLocationLink);\n      formattedLine.appendChild(this.linkifyStringAsFragment(suffix));\n      formattedLine.classList.add('formatted-stack-frame');\n      stackTrace.insertBefore(formattedLine, insertBefore);\n    }\n    return true;\n  }\n\n  private createScriptLocationLinkForSyntaxError(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, exceptionDetails: Protocol.Runtime.ExceptionDetails): HTMLElement\n      |undefined {\n    const {scriptId, lineNumber, columnNumber} = exceptionDetails;\n    if (!scriptId) {\n      return;\n    }\n\n    // SyntaxErrors might not populate the URL field. Try to resolve it via scriptId.\n    const url =\n        exceptionDetails.url as Platform.DevToolsPath.UrlString || debuggerModel.scriptForId(scriptId)?.sourceURL;\n    if (!url) {\n      return;\n    }\n\n    const scriptLocationLink = this.linkifier.linkifyScriptLocation(\n        debuggerModel.target(), exceptionDetails.scriptId || null, url, lineNumber, {\n          columnNumber,\n          inlineFrameIndex: 0,\n          showColumnNumber: true,\n        });\n    scriptLocationLink.tabIndex = -1;\n    return scriptLocationLink;\n  }\n\n  private tryFormatAsError(string: string, exceptionDetails?: Protocol.Runtime.ExceptionDetails): HTMLElement|null {\n    const runtimeModel = this.message.runtimeModel();\n    if (!runtimeModel) {\n      return null;\n    }\n\n    const issueSummary = exceptionDetails?.exceptionMetaData?.issueSummary;\n    if (typeof issueSummary === 'string') {\n      string = concatErrorDescriptionAndIssueSummary(string, issueSummary);\n    }\n\n    const linkInfos = parseSourcePositionsFromErrorStack(runtimeModel, string);\n    if (!linkInfos?.length) {\n      return null;\n    }\n    if (exceptionDetails?.stackTrace) {\n      augmentErrorStackWithScriptIds(linkInfos, exceptionDetails.stackTrace);\n    }\n\n    const debuggerModel = runtimeModel.debuggerModel();\n    const formattedResult = document.createElement('span');\n\n    for (let i = 0; i < linkInfos.length; ++i) {\n      const newline = i < linkInfos.length - 1 ? '\\n' : '';\n      const {line, link, isCallFrame} = linkInfos[i];\n      // Syntax errors don't have a stack frame that points to the source position\n      // where the error occurred. We use the source location from the\n      // exceptionDetails and append it to the end of the message instead.\n      if (!link && exceptionDetails && line.startsWith('SyntaxError')) {\n        formattedResult.appendChild(this.linkifyStringAsFragment(line));\n        const maybeScriptLocation = this.createScriptLocationLinkForSyntaxError(debuggerModel, exceptionDetails);\n        if (maybeScriptLocation) {\n          formattedResult.append(' (at ');\n          formattedResult.appendChild(maybeScriptLocation);\n          formattedResult.append(')');\n        }\n        formattedResult.append(newline);\n        continue;\n      }\n      if (!isCallFrame) {\n        formattedResult.appendChild(this.linkifyStringAsFragment(`${line}${newline}`));\n        continue;\n      }\n      const formattedLine = document.createElement('span');\n      if (!link) {\n        formattedLine.appendChild(this.linkifyStringAsFragment(`${line}${newline}`));\n        formattedLine.classList.add('formatted-builtin-stack-frame');\n        formattedResult.appendChild(formattedLine);\n        continue;\n      }\n      const suffix = `${link.suffix}${newline}`;\n      formattedLine.appendChild(this.linkifyStringAsFragment(link.prefix));\n      const scriptLocationLink = this.linkifier.linkifyScriptLocation(\n          debuggerModel.target(), link.scriptId || null, link.url, link.lineNumber, {\n            columnNumber: link.columnNumber,\n            inlineFrameIndex: 0,\n            showColumnNumber: true,\n          });\n      scriptLocationLink.tabIndex = -1;\n      this.selectableChildren.push({element: scriptLocationLink, forceSelect: () => scriptLocationLink.focus()});\n      formattedLine.appendChild(scriptLocationLink);\n      formattedLine.appendChild(this.linkifyStringAsFragment(suffix));\n      formattedLine.classList.add('formatted-stack-frame');\n      formattedResult.appendChild(formattedLine);\n\n      if (!link.enclosedInBraces) {\n        continue;\n      }\n\n      const prefixWithoutFunction = link.prefix.substring(0, link.prefix.lastIndexOf(' ', link.prefix.length - 3));\n\n      // If we were able to parse the function name from the stack trace line, try to replace it with an expansion of\n      // any inline frames.\n      const selectableChildIndex = this.selectableChildren.length - 1;\n      void this\n          .expandInlineStackFrames(\n              debuggerModel, prefixWithoutFunction, suffix, link.url, link.lineNumber, link.columnNumber,\n              formattedResult, formattedLine)\n          .then(modified => {\n            if (modified) {\n              formattedResult.removeChild(formattedLine);\n              this.selectableChildren.splice(selectableChildIndex, 1);\n            }\n          });\n    }\n\n    return formattedResult;\n  }\n\n  private linkifyWithCustomLinkifier(\n      string: string,\n      linkifier: (arg0: string, arg1: Platform.DevToolsPath.UrlString, arg2?: number, arg3?: number) => Node):\n      DocumentFragment {\n    if (string.length > getMaxTokenizableStringLength()) {\n      const propertyValue = new ObjectUI.ObjectPropertiesSection.ExpandableTextPropertyValue(\n          document.createElement('span'), string, getLongStringVisibleLength());\n      const fragment = document.createDocumentFragment();\n      fragment.appendChild(propertyValue.element);\n      return fragment;\n    }\n    const container = document.createDocumentFragment();\n    const tokens = ConsoleViewMessage.tokenizeMessageText(string);\n    let isBlob = false;\n    for (const token of tokens) {\n      if (!token.text) {\n        continue;\n      }\n      if (isBlob) {\n        token.text = `blob:${token.text}`;\n        isBlob = !isBlob;\n      }\n      if (token.text === '\\'blob:' && token === tokens[0]) {\n        isBlob = true;\n        token.text = '\\'';\n      }\n      switch (token.type) {\n        case 'url': {\n          const realURL = (token.text.startsWith('www.') ? 'http://' + token.text : token.text);\n          const splitResult = Common.ParsedURL.ParsedURL.splitLineAndColumn(realURL);\n          const sourceURL = Common.ParsedURL.ParsedURL.removeWasmFunctionInfoFromURL(splitResult.url);\n          let linkNode;\n          if (splitResult) {\n            linkNode = linkifier(token.text, sourceURL, splitResult.lineNumber, splitResult.columnNumber);\n          } else {\n            linkNode = linkifier(token.text, Platform.DevToolsPath.EmptyUrlString);\n          }\n          container.appendChild(linkNode);\n          break;\n        }\n        default:\n          container.appendChild(document.createTextNode(token.text));\n          break;\n      }\n    }\n    return container;\n  }\n\n  private linkifyStringAsFragment(string: string): DocumentFragment {\n    return this.linkifyWithCustomLinkifier(string, (text, url, lineNumber, columnNumber) => {\n      const options = {text, lineNumber, columnNumber};\n      const linkElement =\n          Components.Linkifier.Linkifier.linkifyURL(url, (options as Components.Linkifier.LinkifyURLOptions));\n      linkElement.tabIndex = -1;\n      this.selectableChildren.push({element: linkElement, forceSelect: () => linkElement.focus()});\n      return linkElement;\n    });\n  }\n\n  private static tokenizeMessageText(string: string): Array<{\n    text: string,\n    type?: string,\n  }> {\n    const {tokenizerRegexes, tokenizerTypes} = getOrCreateTokenizers();\n    if (string.length > getMaxTokenizableStringLength()) {\n      return [{text: string, type: undefined}];\n    }\n    const results = TextUtils.TextUtils.Utils.splitStringByRegexes(string, tokenizerRegexes);\n    return results.map(result => ({text: result.value, type: tokenizerTypes[result.regexIndex]}));\n  }\n\n  groupKey(): string {\n    if (!this.groupKeyInternal) {\n      this.groupKeyInternal = this.message.groupCategoryKey() + ':' + this.groupTitle();\n    }\n    return this.groupKeyInternal;\n  }\n\n  groupTitle(): string {\n    const tokens = ConsoleViewMessage.tokenizeMessageText(this.message.messageText);\n    const result = tokens.reduce((acc, token) => {\n      let text: Common.UIString.LocalizedString|string = token.text;\n      if (token.type === 'url') {\n        text = i18nString(UIStrings.url);\n      } else if (token.type === 'time') {\n        text = i18nString(UIStrings.tookNms);\n      } else if (token.type === 'event') {\n        text = i18nString(UIStrings.someEvent);\n      } else if (token.type === 'milestone') {\n        text = i18nString(UIStrings.Mxx);\n      } else if (token.type === 'autofill') {\n        text = i18nString(UIStrings.attribute);\n      }\n      return acc + text;\n    }, '');\n    return result.replace(/[%]o/g, '');\n  }\n}\n\nlet tokenizerRegexes: RegExp[]|null = null;\nlet tokenizerTypes: string[]|null = null;\n\nfunction getOrCreateTokenizers(): {\n  tokenizerRegexes: RegExp[],\n  tokenizerTypes: string[],\n} {\n  if (!tokenizerRegexes || !tokenizerTypes) {\n    const controlCodes = '\\\\u0000-\\\\u0020\\\\u007f-\\\\u009f';\n    const linkStringRegex = new RegExp(\n        '(?:[a-zA-Z][a-zA-Z0-9+.-]{2,}:\\\\/\\\\/|data:|www\\\\.)[^\\\\s' + controlCodes + '\"]{2,}[^\\\\s' + controlCodes +\n            '\"\\')}\\\\],:;.!?]',\n        'u');\n    const pathLineRegex = /(?:\\/[\\w\\.-]*)+\\:[\\d]+/;\n    const timeRegex = /took [\\d]+ms/;\n    const eventRegex = /'\\w+' event/;\n    const milestoneRegex = /\\sM[6-7]\\d/;\n    const autofillRegex = /\\(suggested: \\\"[\\w-]+\\\"\\)/;\n    const handlers = new Map<RegExp, string>();\n    handlers.set(linkStringRegex, 'url');\n    handlers.set(pathLineRegex, 'url');\n    handlers.set(timeRegex, 'time');\n    handlers.set(eventRegex, 'event');\n    handlers.set(milestoneRegex, 'milestone');\n    handlers.set(autofillRegex, 'autofill');\n    tokenizerRegexes = Array.from(handlers.keys());\n    tokenizerTypes = Array.from(handlers.values());\n    return {tokenizerRegexes, tokenizerTypes};\n  }\n  return {tokenizerRegexes, tokenizerTypes};\n}\n\nexport class ConsoleGroupViewMessage extends ConsoleViewMessage {\n  private collapsedInternal: boolean;\n  private expandGroupIcon: IconButton.Icon.Icon|null;\n  private readonly onToggle: () => void;\n  private groupEndMessageInternal: ConsoleViewMessage|null;\n\n  constructor(\n      consoleMessage: SDK.ConsoleModel.ConsoleMessage, linkifier: Components.Linkifier.Linkifier,\n      requestResolver: Logs.RequestResolver.RequestResolver, issueResolver: IssuesManager.IssueResolver.IssueResolver,\n      onToggle: () => void,\n      onResize: (arg0: Common.EventTarget.EventTargetEvent<HTMLElement|UI.TreeOutline.TreeElement>) => void) {\n    console.assert(consoleMessage.isGroupStartMessage());\n    super(consoleMessage, linkifier, requestResolver, issueResolver, onResize);\n    this.collapsedInternal = consoleMessage.type === Protocol.Runtime.ConsoleAPICalledEventType.StartGroupCollapsed;\n    this.expandGroupIcon = null;\n    this.onToggle = onToggle;\n    this.groupEndMessageInternal = null;\n  }\n\n  private setCollapsed(collapsed: boolean): void {\n    this.collapsedInternal = collapsed;\n    if (this.expandGroupIcon) {\n      this.expandGroupIcon.name = this.collapsedInternal ? 'triangle-right' : 'triangle-down';\n    }\n    this.onToggle.call(null);\n  }\n\n  collapsed(): boolean {\n    return this.collapsedInternal;\n  }\n\n  override maybeHandleOnKeyDown(event: KeyboardEvent): boolean {\n    const focusedChildIndex = this.focusedChildIndex();\n    if (focusedChildIndex === -1) {\n      if ((event.key === 'ArrowLeft' && !this.collapsedInternal) ||\n          (event.key === 'ArrowRight' && this.collapsedInternal)) {\n        this.setCollapsed(!this.collapsedInternal);\n        return true;\n      }\n    }\n    return super.maybeHandleOnKeyDown(event);\n  }\n\n  override toMessageElement(): HTMLElement {\n    let element: HTMLElement|null = this.elementInternal || null;\n    if (!element) {\n      element = super.toMessageElement();\n      const iconType = this.collapsedInternal ? 'triangle-right' : 'triangle-down';\n      this.expandGroupIcon = IconButton.Icon.create(iconType, 'expand-group-icon');\n      // Intercept focus to avoid highlight on click.\n      this.contentElement().tabIndex = -1;\n      if (this.repeatCountElement) {\n        this.repeatCountElement.insertBefore(this.expandGroupIcon, this.repeatCountElement.firstChild);\n      } else {\n        this.consoleRowWrapper?.insertBefore(this.expandGroupIcon, this.contentElementInternal);\n      }\n      element.addEventListener('click', () => this.setCollapsed(!this.collapsedInternal));\n    }\n    return element;\n  }\n\n  override showRepeatCountElement(): void {\n    super.showRepeatCountElement();\n    if (this.repeatCountElement && this.expandGroupIcon) {\n      this.repeatCountElement.insertBefore(this.expandGroupIcon, this.repeatCountElement.firstChild);\n    }\n  }\n\n  messagesHidden(): boolean {\n    if (this.collapsed()) {\n      return true;\n    }\n    const parent = this.consoleGroup();\n    return Boolean(parent?.messagesHidden());\n  }\n\n  setGroupEnd(viewMessage: ConsoleViewMessage): void {\n    if (viewMessage.consoleMessage().type !== Protocol.Runtime.ConsoleAPICalledEventType.EndGroup) {\n      throw new Error('Invalid console message as group end');\n    }\n    if (this.groupEndMessageInternal !== null) {\n      throw new Error('Console group already has an end');\n    }\n    this.groupEndMessageInternal = viewMessage;\n  }\n\n  groupEnd(): ConsoleViewMessage|null {\n    return this.groupEndMessageInternal;\n  }\n}\n\nexport class ConsoleCommand extends ConsoleViewMessage {\n  private formattedCommand: HTMLElement|null;\n\n  constructor(\n      consoleMessage: SDK.ConsoleModel.ConsoleMessage, linkifier: Components.Linkifier.Linkifier,\n      requestResolver: Logs.RequestResolver.RequestResolver, issueResolver: IssuesManager.IssueResolver.IssueResolver,\n      onResize: (arg0: Common.EventTarget.EventTargetEvent<HTMLElement|UI.TreeOutline.TreeElement>) => void) {\n    super(consoleMessage, linkifier, requestResolver, issueResolver, onResize);\n    this.formattedCommand = null;\n  }\n\n  override contentElement(): HTMLElement {\n    const contentElement = this.getContentElement();\n    if (contentElement) {\n      return contentElement;\n    }\n    const newContentElement = document.createElement('div');\n    this.setContentElement(newContentElement);\n    newContentElement.classList.add('console-user-command');\n    const userCommandIcon = new IconButton.Icon.Icon();\n    userCommandIcon.name = 'chevron-right';\n    userCommandIcon.classList.add('command-result-icon', 'medium');\n    newContentElement.appendChild(userCommandIcon);\n\n    elementToMessage.set(newContentElement, this);\n    this.formattedCommand = document.createElement('span');\n    this.formattedCommand.classList.add('source-code');\n    this.formattedCommand.textContent = Platform.StringUtilities.replaceControlCharacters(this.text);\n    newContentElement.appendChild(this.formattedCommand);\n\n    if (this.formattedCommand.textContent.length < MaxLengthToIgnoreHighlighter) {\n      void CodeHighlighter.CodeHighlighter.highlightNode(this.formattedCommand, 'text/javascript')\n          .then(this.updateSearch.bind(this));\n    } else {\n      this.updateSearch();\n    }\n\n    this.updateTimestamp();\n    return newContentElement;\n  }\n\n  private updateSearch(): void {\n    this.setSearchRegex(this.searchRegex());\n  }\n}\n\nexport class ConsoleCommandResult extends ConsoleViewMessage {\n  override contentElement(): HTMLElement {\n    const element = super.contentElement();\n    if (!element.classList.contains('console-user-command-result')) {\n      element.classList.add('console-user-command-result');\n      if (this.consoleMessage().level === Protocol.Log.LogEntryLevel.Info) {\n        const icon = new IconButton.Icon.Icon();\n        icon.name = 'chevron-left-dot';\n        icon.classList.add('command-result-icon', 'medium');\n        element.insertBefore(icon, element.firstChild);\n      }\n    }\n    return element;\n  }\n}\n\nexport class ConsoleTableMessageView extends ConsoleViewMessage {\n  private dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<unknown>|null;\n\n  constructor(\n      consoleMessage: SDK.ConsoleModel.ConsoleMessage, linkifier: Components.Linkifier.Linkifier,\n      requestResolver: Logs.RequestResolver.RequestResolver, issueResolver: IssuesManager.IssueResolver.IssueResolver,\n      onResize: (arg0: Common.EventTarget.EventTargetEvent<HTMLElement|UI.TreeOutline.TreeElement>) => void) {\n    super(consoleMessage, linkifier, requestResolver, issueResolver, onResize);\n    console.assert(consoleMessage.type === Protocol.Runtime.ConsoleAPICalledEventType.Table);\n    this.dataGrid = null;\n  }\n\n  override wasShown(): void {\n    if (this.dataGrid) {\n      this.dataGrid.updateWidths();\n    }\n    super.wasShown();\n  }\n\n  override onResize(): void {\n    if (!this.isVisible()) {\n      return;\n    }\n    if (this.dataGrid) {\n      this.dataGrid.onResize();\n    }\n  }\n\n  override contentElement(): HTMLElement {\n    const contentElement = this.getContentElement();\n    if (contentElement) {\n      return contentElement;\n    }\n\n    const newContentElement = document.createElement('div');\n    newContentElement.classList.add('console-message');\n    if (this.messageIcon) {\n      newContentElement.appendChild(this.messageIcon);\n    }\n    this.setContentElement(newContentElement);\n\n    newContentElement.appendChild(this.buildTableMessage());\n    this.updateTimestamp();\n    return newContentElement;\n  }\n\n  private buildTableMessage(): HTMLElement {\n    const formattedMessage = document.createElement('span');\n    formattedMessage.classList.add('source-code');\n    this.anchorElement = this.buildMessageAnchor();\n    if (this.anchorElement) {\n      formattedMessage.appendChild(this.anchorElement);\n    }\n\n    const table = this.message.parameters?.length ? this.message.parameters[0] : null;\n    if (!table) {\n      return this.buildMessage();\n    }\n    const actualTable = parameterToRemoteObject(this.message.runtimeModel())(table);\n    if (!actualTable?.preview) {\n      return this.buildMessage();\n    }\n\n    const rawValueColumnSymbol = Symbol('rawValueColumn');\n    const columnNames: Array<string|symbol> = [];\n    const preview = actualTable.preview;\n    const rows = [];\n    for (let i = 0; i < preview.properties.length; ++i) {\n      const rowProperty = preview.properties[i];\n      let rowSubProperties: Protocol.Runtime.PropertyPreview[];\n      if (rowProperty.valuePreview?.properties.length) {\n        rowSubProperties = rowProperty.valuePreview.properties;\n      } else if (rowProperty.value || rowProperty.value === '') {\n        rowSubProperties =\n            [{name: rawValueColumnSymbol as unknown as string, type: rowProperty.type, value: rowProperty.value}];\n      } else {\n        continue;\n      }\n\n      const rowValue = new Map<string|symbol, HTMLElement>();\n      const maxColumnsToRender = 20;\n      for (let j = 0; j < rowSubProperties.length; ++j) {\n        const cellProperty = rowSubProperties[j];\n        let columnRendered: true|boolean = columnNames.indexOf(cellProperty.name) !== -1;\n        if (!columnRendered) {\n          if (columnNames.length === maxColumnsToRender) {\n            continue;\n          }\n          columnRendered = true;\n          columnNames.push(cellProperty.name);\n        }\n\n        if (columnRendered) {\n          const cellElement =\n              this.renderPropertyPreviewOrAccessor(actualTable, cellProperty, [rowProperty, cellProperty]);\n          cellElement.classList.add('console-message-nowrap-below');\n          rowValue.set(cellProperty.name, cellElement);\n        }\n      }\n      rows.push({rowName: rowProperty.name, rowValue});\n    }\n\n    const flatValues = [];\n    for (const {rowName, rowValue} of rows) {\n      flatValues.push(rowName);\n      for (let j = 0; j < columnNames.length; ++j) {\n        flatValues.push(rowValue.get(columnNames[j]));\n      }\n    }\n    columnNames.unshift(i18nString(UIStrings.index));\n    const columnDisplayNames =\n        columnNames.map(name => name === rawValueColumnSymbol ? i18nString(UIStrings.value) : name.toString());\n\n    if (flatValues.length) {\n      this.dataGrid = DataGrid.SortableDataGrid.SortableDataGrid.create(\n          columnDisplayNames, flatValues, i18nString(UIStrings.console));\n      if (this.dataGrid) {\n        this.dataGrid.setStriped(true);\n        this.dataGrid.setFocusable(false);\n\n        const formattedResult = document.createElement('span');\n        formattedResult.classList.add('console-message-text');\n        const tableElement = formattedResult.createChild('div', 'console-message-formatted-table');\n        const dataGridContainer = tableElement.createChild('span');\n        tableElement.appendChild(this.formatParameter(actualTable, true, false));\n        const shadowRoot = dataGridContainer.attachShadow({mode: 'open'});\n        const dataGridWidget = this.dataGrid.asWidget();\n        dataGridWidget.markAsRoot();\n        dataGridWidget.show(shadowRoot as unknown as Element);\n        dataGridWidget.registerRequiredCSS(consoleViewStyles, objectValueStyles);\n        formattedMessage.appendChild(formattedResult);\n        this.dataGrid.renderInline();\n      }\n    }\n    return formattedMessage;\n  }\n\n  override approximateFastHeight(): number {\n    const table = this.message.parameters?.[0];\n    if (table && typeof table !== 'string' && table.preview) {\n      return defaultConsoleRowHeight * table.preview.properties.length;\n    }\n    return defaultConsoleRowHeight;\n  }\n}\n\n/**\n * The maximum length before strings are considered too long for syntax highlighting.\n * @constant\n */\nconst MaxLengthToIgnoreHighlighter = 10000;\n\n/**\n * @constant\n */\nexport const MaxLengthForLinks = 40;\n\nlet maxTokenizableStringLength = 10000;\nlet longStringVisibleLength = 5000;\n\nexport const getMaxTokenizableStringLength = (): number => {\n  return maxTokenizableStringLength;\n};\n\nexport const setMaxTokenizableStringLength = (length: number): void => {\n  maxTokenizableStringLength = length;\n};\n\nexport const getLongStringVisibleLength = (): number => {\n  return longStringVisibleLength;\n};\n\nexport const setLongStringVisibleLength = (length: number): void => {\n  longStringVisibleLength = length;\n};\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Anthony Ricaud <rik@webkit.org>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n.console-view {\n  background-color: var(--sys-color-cdt-base-container);\n  overflow: hidden;\n\n  --override-error-text-color: var(--sys-color-on-error-container);\n  --message-corner-rounder-background: var(--sys-color-cdt-base-container);\n}\n\n.console-toolbar-container {\n  display: flex;\n  flex: none;\n}\n\n.console-main-toolbar {\n  flex: 1 1 auto;\n}\n\n.console-sidebar-levels-info {\n  margin-left: var(--sys-size-3);\n  width: var(--sys-size-8);\n  height: var(--sys-size-8);\n}\n\n#console-issues-counter {\n  margin-top: 0;\n}\n\n.console-toolbar-container > devtools-toolbar {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.console-view-fix-select-all {\n  height: 0;\n  overflow: hidden;\n}\n\n.console-settings-pane {\n  display: grid;\n  grid-template-columns: 50% 50%;\n  flex: none;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n#console-messages {\n  flex: 1 1;\n  overflow-y: auto;\n  overflow-wrap: break-word;\n  user-select: text;\n  transform: translateZ(0);\n  overflow-anchor: none;  /* Chrome-specific scroll-anchoring opt-out */\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n#console-prompt {\n  clear: right;\n  position: relative;\n  margin: 0 22px 0 20px;\n}\n\n.console-prompt-editor-container {\n  min-height: 21px;\n}\n\n.console-message,\n.console-user-command {\n  clear: right;\n  position: relative;\n  padding: 3px 22px 1px 0;\n  margin-left: 24px;\n  min-height: 17px;  /* Sync with ConsoleViewMessage.js */\n  flex: auto;\n  display: flex;\n}\n\n.console-message > * {\n  flex: auto;\n}\n\n.console-timestamp {\n  color: var(--sys-color-token-subtle);\n  user-select: none;\n  flex: none;\n  margin-right: 5px;\n}\n\n.message-level-icon,\n.command-result-icon {\n  position: absolute;\n  left: -17px;\n  top: 2px;\n  user-select: none;\n}\n\n.console-message-repeat-count {\n  margin: 1.4px 0 0 10px;\n  flex: none;\n}\n\n.repeated-message {\n  margin-left: 4px;\n}\n\n.repeated-message .message-level-icon {\n  display: none;\n}\n\n.console-message-stack-trace-toggle {\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  margin-top: -1px;\n}\n\n.console-error-level .repeated-message,\n.console-warning-level .repeated-message,\n.console-verbose-level .repeated-message,\n.console-info-level .repeated-message {\n  display: flex;\n}\n\n.console-info {\n  color: var(--sys-color-token-subtle);\n  font-style: italic;\n  padding-bottom: 2px;\n}\n\n.console-group .console-group > .console-group-messages {\n  margin-left: 16px;\n}\n\n.console-group-title.console-from-api {\n  font-weight: bold;\n}\n\n.console-group-title .console-message {\n  margin-left: 12px;\n}\n\n.expand-group-icon {\n  user-select: none;\n  flex: none;\n  position: relative;\n  left: 8px;\n  top: 3px;\n  margin-right: 2px;\n}\n\n.console-group-title .message-level-icon {\n  display: none;\n}\n\n.console-message-repeat-count .expand-group-icon {\n  position: static;\n  color: var(--sys-color-cdt-base-container);\n  margin-left: -1px;\n}\n\n.console-group {\n  position: relative;\n}\n\n.console-message-wrapper {\n  display: flex;\n  flex-direction: column;\n  margin: 4px;\n  border-radius: 5px;\n\n  /* Console ANSI color */\n  --console-color-black: #000;\n  --console-color-red: #a00;\n  --console-color-green: #0a0;\n  --console-color-yellow: #a50;\n  --console-color-blue: #00a;\n  --console-color-magenta: #a0a;\n  --console-color-cyan: #0aa;\n  --console-color-gray: #aaa;\n  --console-color-darkgray: #555;\n  --console-color-lightred: #f55;\n  --console-color-lightgreen: #5f5;\n  --console-color-lightyellow: #ff5;\n  --console-color-lightblue: #55f;\n  --console-color-ightmagenta: #f5f;\n  --console-color-lightcyan: #5ff;\n  --console-color-white: #fff;\n\n  &.console-selected {\n    background-color: var(--sys-color-tonal-container);\n  }\n}\n\n.console-row-wrapper {\n  display: flex;\n  flex-direction: row;\n}\n\n.theme-with-dark-background .console-message-wrapper {\n  /* Dark theme console ANSI color */\n  --console-color-red: rgb(237 78 76);\n  --console-color-green: rgb(1 200 1);\n  --console-color-yellow: rgb(210 192 87);\n  --console-color-blue: rgb(39 116 240);\n  --console-color-magenta: rgb(161 66 244);\n  --console-color-cyan: rgb(18 181 203);\n  --console-color-gray: rgb(207 208 208);\n  --console-color-darkgray: rgb(137 137 137);\n  --console-color-lightred: rgb(242 139 130);\n  --console-color-lightgreen: rgb(161 247 181);\n  --console-color-lightyellow: rgb(221 251 85);\n  --console-color-lightblue: rgb(102 157 246);\n  --console-color-lightmagenta: rgb(214 112 214);\n  --console-color-lightcyan: rgb(132 240 255);\n}\n\n.console-message-wrapper.console-warning-level + .console-message-wrapper,\n.console-message-wrapper.console-error-level + .console-message-wrapper {\n  & .console-message::before,\n  & .console-user-command::before {\n    display: none !important; /* stylelint-disable-line declaration-no-important */\n  }\n}\n\n.console-message-wrapper:not(.console-error-level, .console-warning-level) {\n  & .console-message::before,\n  & .console-user-command::before {\n    width: calc(100% - 25px);\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: -2px;\n    border-top: 1px solid var(--sys-color-divider);\n  }\n\n  &:first-of-type .console-message::before,\n  &:first-of-type .console-user-command::before {\n    display: none;\n  }\n}\n\n.console-message-wrapper.console-adjacent-user-command-result:not(.console-error-level, .console-warning-level) {\n  border-top-width: 0;\n}\n\n.console-message-wrapper:focus + .console-message-wrapper {\n  border-top-color: transparent;\n}\n\n.console-message-wrapper.console-adjacent-user-command-result:not(.console-error-level, .console-warning-level):focus {\n  border-top-width: 1px;\n}\n\n.console-message-wrapper.console-adjacent-user-command-result:not(.console-error-level, .console-warning-level):focus .console-message {\n  padding-top: 2px;\n  min-height: 16px;\n}\n\n.console-message-wrapper.console-adjacent-user-command-result:not(.console-error-level, .console-warning-level):focus .command-result-icon {\n  top: 3px;\n}\n\n.console-message-wrapper .nesting-level-marker {\n  width: 14px;\n  flex: 0 0 auto;\n  position: relative;\n  margin-bottom: -1px;\n  margin-top: -1px;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.console-message-wrapper .nesting-level-marker + .console-message::after {\n  position: absolute;\n  left: -30px;\n  top: 0;\n  width: 6px;\n  height: 100%;\n  box-sizing: border-box;\n  background-color: var(--sys-color-surface-yellow);\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  content: \"\";\n}\n\n.console-error-level {\n  background-color: var(--sys-color-surface-error);\n\n  --message-corner-rounder-background: var(--sys-color-surface-error);\n}\n\n.console-warning-level {\n  background-color: var(--sys-color-surface-yellow);\n\n  --message-corner-rounder-background: var(--sys-color-surface-yellow);\n}\n\n.console-view-object-properties-section {\n  padding: 0;\n  position: relative;\n  vertical-align: top;\n  color: inherit;\n  display: inline-block;\n  overflow-wrap: break-word;\n  max-width: 100%;\n  margin-top: -1.5px;\n}\n\n.info-note {\n  background-color: var(--sys-color-tonal-container);\n}\n\n.info-note::before {\n  content: \"i\";\n}\n\n.console-view-object-properties-section:not(.expanded) .info-note {\n  display: none;\n}\n\n.console-system-type.console-info-level {\n  color: var(--sys-color-primary);\n}\n\n#console-messages .link {\n  cursor: pointer;\n  text-decoration: underline;\n}\n\n#console-messages .link,\n#console-messages .devtools-link:not(.invalid-link) {\n  color: var(--sys-color-primary);\n  word-break: break-all;\n}\n\n#console-messages .devtools-link:focus-visible {\n  background-color: transparent;\n}\n\n#console-messages .resource-links {\n  margin-top: -1px;\n  margin-bottom: -2px;\n}\n\n.console-object-preview {\n  white-space: normal;\n  overflow-wrap: break-word;\n  font-style: italic;\n}\n\n.console-object-preview .name {\n  flex-shrink: 0;\n}\n\n.console-message-text {\n  .object-value-node {\n    display: inline-block;\n  }\n\n  .object-value-string,\n  .object-value-regexp,\n  .object-value-symbol {\n    white-space: pre-wrap;\n    word-break: break-all;\n  }\n\n  .formatted-stack-frame {\n    display: var(--display-formatted-stack-frame-default);\n\n    &:has(.ignore-list-link) {\n      display: var(--display-ignored-formatted-stack-frame);\n      opacity: 60%;\n\n      /* Subsequent builtin stack frames are also treated as ignored */\n      & + .formatted-builtin-stack-frame {\n        display: var(--display-ignored-formatted-stack-frame);\n        opacity: 60%;\n      }\n    }\n  }\n}\n\n.console-message-stack-trace-wrapper {\n  --override-display-stack-preview-toggle-link: none;\n  --display-formatted-stack-frame-default: block;\n\n  flex: 1 1 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  &:has(div > .stack-preview-container.show-hidden-rows) {\n    --display-ignored-formatted-stack-frame: var(--display-formatted-stack-frame-default);\n  }\n\n  &:has(.formatted-stack-frame .ignore-list-link):has(.formatted-stack-frame .devtools-link:not(.ignore-list-link)) {\n    /* If there are ignored frames and unignored frames, then we want\n    to enable the show more/less links. To do that we override some\n    variables to always display the structured stack trace, but possibly\n    only the links at the bottom of it, as we share its show more/less links. */\n    --override-display-stack-preview-toggle-link: table-row;\n    --override-display-stack-preview-hidden-div: block;\n\n    &:not(:has(div > .stack-preview-container.show-hidden-rows)) {\n      --display-ignored-formatted-stack-frame: none;\n    }\n  }\n\n  & > .hidden-stack-trace {\n    /* Always hide the body of the structured stack trace if this class\n    is set, but we may still show it for the Show more/less links at the bottom. */\n    display: var(--override-display-stack-preview-hidden-div, none);\n\n    --override-display-stack-preview-tbody: none;\n  }\n}\n\n.repeated-message .console-message-stack-trace-toggle,\n.repeated-message > .console-message-text {\n  flex: 1;\n}\n\n.console-warning-level .console-message-text {\n  color: var(--sys-color-on-surface-yellow);\n}\n\n.console-error-level .console-message-text,\n.console-error-level .console-view-object-properties-section {\n  color: var(--override-error-text-color) !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.console-message-formatted-table {\n  clear: both;\n}\n\n.console-message .source-code {\n  line-height: 1.2;\n}\n\n.console-message-anchor {\n  float: right;\n  text-align: right;\n  max-width: 100%;\n  margin-left: 4px;\n}\n\n.cookie-report-anchor {\n  margin-top: -3px;\n  margin-bottom: -5px;\n}\n\n.console-message-nowrap-below,\n.console-message-nowrap-below div,\n.console-message-nowrap-below span {\n  white-space: nowrap !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.object-state-note {\n  display: inline-block;\n  width: 11px;\n  height: 11px;\n  color: var(--sys-color-on-tonal-container);\n  text-align: center;\n  border-radius: 3px;\n  line-height: 13px;\n  margin: 0 6px;\n  font-size: 9px;\n}\n\n.console-object {\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.console-message-stack-trace-wrapper > * {\n  flex: none;\n}\n\n.console-message-expand-icon {\n  margin-bottom: -4px;\n}\n\n.console-searchable-view {\n  max-height: 100%;\n}\n\n.console-view-pinpane {\n  flex: none;\n  max-height: 50%;\n}\n\n/* We are setting width and height to 0px to essentially hide the html element on the UI but visible to the screen reader.\n This html element is used by screen readers when console messages are filtered, instead of screen readers reading\n contents of the filtered messages we only want the screen readers to read the count of filtered messages. */\n.message-count {\n  width: 0;\n  height: 0;\n}\n\ndevtools-console-insight {\n  margin: 9px 22px 11px 24px;\n}\n\n.hover-button {\n  --width: 24px;\n\n  align-items: center;\n  border-radius: 50%;\n  border: none;\n  /* todo: extract to global styles and make it work with dark mode. */\n  box-shadow: 0 1px 3px 1px rgb(0 0 0 / 15%), 0 1px 2px 0 rgb(0 0 0 / 30%); /* stylelint-disable-line plugin/use_theme_colors */\n  box-sizing: border-box;\n  background-color: var(--sys-color-tonal-container);\n  color: var(--sys-color-on-tonal-container);\n  font: var(--sys-typescale-body4-medium);\n  height: var(--width);\n  justify-content: center;\n  margin: 0;\n  max-height: var(--width);\n  max-width: var(--width);\n  min-height: var(--width);\n  min-width: var(--width);\n  overflow: hidden;\n  padding: var(--sys-size-3) var(--sys-size-4);\n  position: absolute;\n  right: 6px;\n  display: none;\n  width: var(--width);\n  z-index: 1;\n\n  .theme-with-dark-background & {\n    border: 1px solid var(--sys-color-neutral-outline);\n    background-color: var(--sys-color-primary);\n    color: var(--sys-color-on-primary);\n  }\n\n  & devtools-icon {\n    box-sizing: border-box;\n    flex-shrink: 0;\n    height: var(--sys-size-8);\n    min-height: var(--sys-size-8);\n    min-width: var(--sys-size-8);\n    width: var(--sys-size-8);\n\n    --devtools-icon-color: var(--sys-color-on-tonal-container);\n  }\n\n  .theme-with-dark-background & devtools-icon {\n    --devtools-icon-color: var(--sys-color-on-primary);\n  }\n}\n\n.hover-button:focus,\n.hover-button:hover {\n  border-radius: 4px;\n  max-width: 200px;\n  transition:\n    max-width var(--sys-motion-duration-short4) var(--sys-motion-easing-emphasized),\n    border-radius 50ms linear;\n  width: fit-content;\n  gap: var(--sys-size-3);\n}\n\n.hover-button:focus-visible {\n  outline: 2px solid var(--sys-color-primary);\n  outline-offset: 2px;\n}\n\n.button-label {\n  display: block;\n  overflow: hidden;\n  white-space: nowrap;\n\n  & div {\n    display: inline-block;\n    vertical-align: -1px;\n  }\n}\n\n.console-message-wrapper:not(.has-insight) {\n  &:hover,\n  &:focus,\n  &.console-selected {\n    .hover-button {\n      display: flex;\n\n      &:focus,\n      &:hover {\n        display: inline-flex;\n      }\n    }\n  }\n}\n\n@media (forced-colors: active) {\n  .console-message-expand-icon,\n  .console-warning-level .expand-group-icon {\n    forced-color-adjust: none;\n    color: ButtonText;\n  }\n\n  .console-message-wrapper:focus,\n  .console-message-wrapper:focus:last-of-type {\n    forced-color-adjust: none;\n    background-color: Highlight;\n    border-top-color: Highlight;\n    border-bottom-color: Highlight;\n  }\n\n  .console-message-wrapper:focus *,\n  .console-message-wrapper:focus:last-of-type *,\n  .console-message-wrapper:focus .devtools-link,\n  .console-message-wrapper:focus:last-of-type .devtools-link {\n    color: HighlightText !important; /* stylelint-disable-line declaration-no-important */\n  }\n\n  #console-messages .devtools-link,\n  #console-messages .devtools-link:hover {\n    color: linktext;\n  }\n\n  #console-messages .link:focus-visible,\n  #console-messages .devtools-link:focus-visible {\n    background: Highlight;\n    color: HighlightText;\n  }\n\n  .console-message-wrapper:focus devtools-icon {\n    color: HighlightText;\n  }\n\n  .console-message-wrapper.console-error-level:focus,\n  .console-message-wrapper.console-error-level:focus:last-of-type {\n    --override-error-text-color: HighlightText;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./consoleView.css')} */`;", "// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport interface ParsedErrorFrame {\n  line: string;\n  isCallFrame?: boolean;\n  link?: {\n    url: Platform.DevToolsPath.UrlString,\n    prefix: string,\n    suffix: string,\n    enclosedInBraces: boolean,\n    lineNumber?: number,\n    columnNumber?: number,\n    scriptId?: Protocol.Runtime.ScriptId,\n  };\n}\n\n/**\n * Takes a V8 Error#stack string and extracts source position information.\n *\n * The result includes the url, line and column number, as well as where\n * the url is found in the raw line.\n *\n * @returns Null if the provided string has an unexpected format. A\n *          populated `ParsedErrorFrame[]` otherwise.\n */\nexport function parseSourcePositionsFromErrorStack(\n    runtimeModel: SDK.RuntimeModel.RuntimeModel, stack: string): ParsedErrorFrame[]|null {\n  if (!(/\\n\\s*at\\s/.test(stack) || stack.startsWith('SyntaxError:'))) {\n    return null;\n  }\n  const debuggerModel = runtimeModel.debuggerModel();\n  const baseURL = runtimeModel.target().inspectedURL();\n\n  const lines = stack.split('\\n');\n  const linkInfos = [];\n  for (const line of lines) {\n    const match = /^\\s*at\\s(async\\s)?/.exec(line);\n    if (!match) {\n      if (linkInfos.length && linkInfos[linkInfos.length - 1].isCallFrame) {\n        return null;\n      }\n      linkInfos.push({line});\n      continue;\n    }\n\n    const isCallFrame = true;\n    let left = match[0].length;\n    let right = line.length;\n    let enclosedInBraces = false;\n    while (line[right - 1] === ')') {\n      right--;\n      enclosedInBraces = true;\n      do {\n        left = line.indexOf('(', left);\n        if (left < 0) {\n          return null;\n        }\n        left++;\n        if (!line.substring(left).startsWith('eval at ')) {\n          break;\n        }\n        left += 8;\n        right = line.lastIndexOf(', ', right) - 1;\n        if (right < 0) {\n          return null;\n        }\n      } while (true);\n    }\n\n    const linkCandidate = line.substring(left, right);\n    const splitResult = Common.ParsedURL.ParsedURL.splitLineAndColumn(linkCandidate);\n    if (splitResult.url === '<anonymous>') {\n      if (linkInfos.length && linkInfos[linkInfos.length - 1].isCallFrame && !linkInfos[linkInfos.length - 1].link) {\n        // Combine builtin frames.\n        linkInfos[linkInfos.length - 1].line += `\\n${line}`;\n      } else {\n        linkInfos.push({line, isCallFrame});\n      }\n      continue;\n    }\n    let url = parseOrScriptMatch(debuggerModel, splitResult.url);\n    if (!url && Common.ParsedURL.ParsedURL.isRelativeURL(splitResult.url)) {\n      url = parseOrScriptMatch(debuggerModel, Common.ParsedURL.ParsedURL.completeURL(baseURL, splitResult.url));\n    }\n    if (!url) {\n      return null;\n    }\n\n    linkInfos.push({\n      line,\n      isCallFrame,\n      link: {\n        url,\n        prefix: line.substring(0, left),\n        suffix: line.substring(right),\n        enclosedInBraces,\n        lineNumber: splitResult.lineNumber,\n        columnNumber: splitResult.columnNumber,\n      },\n    });\n  }\n  return linkInfos;\n}\n\nfunction parseOrScriptMatch(debuggerModel: SDK.DebuggerModel.DebuggerModel, url: Platform.DevToolsPath.UrlString|null):\n    Platform.DevToolsPath.UrlString|null {\n  if (!url) {\n    return null;\n  }\n  if (Common.ParsedURL.ParsedURL.isValidUrlString(url)) {\n    return url;\n  }\n  if (debuggerModel.scriptsForSourceURL(url).length) {\n    return url;\n  }\n  // nodejs stack traces contain (absolute) file paths, but v8 reports them as file: urls.\n  const fileUrl = new URL(url, 'file://');\n  if (debuggerModel.scriptsForSourceURL(fileUrl.href).length) {\n    return fileUrl.href as Platform.DevToolsPath.UrlString;\n  }\n  return null;\n}\n\n/**\n * Error#stack output only contains script URLs. In some cases we are able to\n * retrieve additional exception details from V8 that we can use to augment\n * the parsed Error#stack with script IDs.\n * This function sets the `scriptId` field in `ParsedErrorFrame` when it finds\n * the corresponding info in `Protocol.Runtime.StackTrace`.\n */\nexport function augmentErrorStackWithScriptIds(\n    parsedFrames: ParsedErrorFrame[], protocolStackTrace: Protocol.Runtime.StackTrace): void {\n  // Note that the number of frames between the two stack traces can differ. The\n  // parsed Error#stack can contain Builtin frames which are not present in the protocol\n  // stack. This means its easier to always search the whole protocol stack for a matching\n  // frame rather then trying to detect the Builtin frames and skipping them.\n  for (const parsedFrame of parsedFrames) {\n    const protocolFrame = protocolStackTrace.callFrames.find(frame => framesMatch(parsedFrame, frame));\n    if (protocolFrame && parsedFrame.link) {\n      parsedFrame.link.scriptId = protocolFrame.scriptId;\n    }\n  }\n}\n\n/** Returns true iff both stack frames have the same url and line/column numbers. The function name is ignored */\nfunction framesMatch(parsedFrame: ParsedErrorFrame, protocolFrame: Protocol.Runtime.CallFrame): boolean {\n  if (!parsedFrame.link) {\n    return false;\n  }\n\n  const {url, lineNumber, columnNumber} = parsedFrame.link;\n  return url === protocolFrame.url && lineNumber === protocolFrame.lineNumber &&\n      columnNumber === protocolFrame.columnNumber;\n}\n", "// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as AiCodeCompletion from '../../models/ai_code_completion/ai_code_completion.js';\nimport * as Formatter from '../../models/formatter/formatter.js';\nimport * as SourceMapScopes from '../../models/source_map_scopes/source_map_scopes.js';\nimport * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as TextEditor from '../../ui/components/text_editor/text_editor.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as PanelCommon from '../common/common.js';\n\nimport {ConsolePanel} from './ConsolePanel.js';\nimport consolePromptStyles from './consolePrompt.css.js';\n\nconst {Direction} = TextEditor.TextEditorHistory;\n\nconst UIStrings = {\n  /**\n   * @description Text in Console Prompt of the Console panel\n   */\n  consolePrompt: 'Console prompt',\n  /**\n   * @description Warning shown to users when pasting text into the DevTools console.\n   * @example {allow pasting} PH1\n   */\n  selfXssWarning:\n      'Warning: Don’t paste code into the DevTools Console that you don’t understand or haven’t reviewed yourself. This could allow attackers to steal your identity or take control of your computer. Please type ‘{PH1}’ below and press Enter to allow pasting.',\n  /**\n   * @description Text a user needs to type in order to confirm that they are aware of the danger of pasting code into the DevTools console.\n   */\n  allowPasting: 'allow pasting',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/console/ConsolePrompt.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst AI_CODE_COMPLETION_CHARACTER_LIMIT = 20_000;\n\nexport class ConsolePrompt extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.Widget>(\n    UI.Widget.Widget) {\n  private addCompletionsFromHistory: boolean;\n  private historyInternal: TextEditor.AutocompleteHistory.AutocompleteHistory;\n  private initialText: string;\n  private editor: TextEditor.TextEditor.TextEditor;\n  private readonly eagerPreviewElement: HTMLDivElement;\n  private textChangeThrottler: Common.Throttler.Throttler;\n  private requestPreviewBound: () => Promise<void>;\n  private requestPreviewCurrent = 0;\n  private readonly innerPreviewElement: HTMLElement;\n  private readonly promptIcon: IconButton.Icon.Icon;\n  private readonly iconThrottler: Common.Throttler.Throttler;\n  private readonly eagerEvalSetting: Common.Settings.Setting<boolean>;\n  protected previewRequestForTest: Promise<void>|null;\n  private highlightingNode: boolean;\n  // The CodeMirror state field that controls whether the argument hints are showing.\n  // If they are, the escape key will clear them. However, if they aren't, then the\n  // console drawer should be hidden as a whole.\n  #argumentHintsState: CodeMirror.StateField<CodeMirror.Tooltip|null>;\n\n  #editorHistory: TextEditor.TextEditorHistory.TextEditorHistory;\n  #selfXssWarningShown = false;\n  #javaScriptCompletionCompartment: CodeMirror.Compartment = new CodeMirror.Compartment();\n\n  private aidaClient?: Host.AidaClient.AidaClient;\n  private aidaAvailability?: Host.AidaClient.AidaAccessPreconditions;\n  private boundOnAidaAvailabilityChange?: () => Promise<void>;\n  private aiCodeCompletion?: AiCodeCompletion.AiCodeCompletion.AiCodeCompletion;\n  private teaser?: PanelCommon.AiCodeCompletionTeaser;\n  private placeholderCompartment: CodeMirror.Compartment = new CodeMirror.Compartment();\n  private aiCodeCompletionSetting =\n      Common.Settings.Settings.instance().createSetting('ai-code-completion-enabled', false);\n  private aiCodeCompletionCitations?: Host.AidaClient.Citation[] = [];\n\n  #getJavaScriptCompletionExtensions(): CodeMirror.Extension {\n    if (this.#selfXssWarningShown) {\n      // No (JavaScript) completions at all while showing the self-XSS warning.\n      return [];\n    }\n    if (Root.Runtime.Runtime.queryParam('noJavaScriptCompletion') !== 'true') {\n      return [\n        CodeMirror.javascript.javascript(),\n        TextEditor.JavaScript.completion(),\n      ];\n    }\n    return [CodeMirror.javascript.javascriptLanguage];\n  }\n\n  #updateJavaScriptCompletionCompartment(): void {\n    const extensions = this.#getJavaScriptCompletionExtensions();\n    const effects = this.#javaScriptCompletionCompartment.reconfigure(extensions);\n    this.editor.dispatch({effects});\n  }\n\n  constructor() {\n    super({\n      jslog: `${VisualLogging.textField('console-prompt').track({\n        change: true,\n        keydown: 'Enter|ArrowUp|ArrowDown|PageUp',\n      })}`,\n    });\n    this.registerRequiredCSS(consolePromptStyles);\n    this.addCompletionsFromHistory = true;\n    this.historyInternal = new TextEditor.AutocompleteHistory.AutocompleteHistory(\n        Common.Settings.Settings.instance().createLocalSetting('console-history', []));\n\n    this.initialText = '';\n    this.eagerPreviewElement = document.createElement('div');\n    this.eagerPreviewElement.classList.add('console-eager-preview');\n    this.textChangeThrottler = new Common.Throttler.Throttler(150);\n    this.requestPreviewBound = this.requestPreview.bind(this);\n    this.innerPreviewElement = this.eagerPreviewElement.createChild('div', 'console-eager-inner-preview');\n    const previewIcon = new IconButton.Icon.Icon();\n    previewIcon.name = 'chevron-left-dot';\n    previewIcon.classList.add('preview-result-icon', 'medium');\n    this.eagerPreviewElement.appendChild(previewIcon);\n\n    const editorContainerElement = this.element.createChild('div', 'console-prompt-editor-container');\n    this.element.appendChild(this.eagerPreviewElement);\n\n    this.promptIcon = new IconButton.Icon.Icon();\n    this.promptIcon.name = 'chevron-right';\n    this.promptIcon.style.color = 'var(--icon-action)';\n    this.promptIcon.classList.add('console-prompt-icon', 'medium');\n    this.element.appendChild(this.promptIcon);\n    this.iconThrottler = new Common.Throttler.Throttler(0);\n\n    this.eagerEvalSetting = Common.Settings.Settings.instance().moduleSetting('console-eager-eval');\n    this.eagerEvalSetting.addChangeListener(this.eagerSettingChanged.bind(this));\n    this.eagerPreviewElement.classList.toggle('hidden', !this.eagerEvalSetting.get());\n\n    this.element.tabIndex = 0;\n    this.previewRequestForTest = null;\n    this.highlightingNode = false;\n    const argumentHints = TextEditor.JavaScript.argumentHints();\n    this.#argumentHintsState = argumentHints[0];\n\n    const autocompleteOnEnter = TextEditor.Config.DynamicSetting.bool(\n        'console-autocomplete-on-enter', [], TextEditor.Config.conservativeCompletion);\n\n    const extensions = [\n      CodeMirror.keymap.of(this.editorKeymap()),\n      CodeMirror.EditorView.updateListener.of(update => this.editorUpdate(update)),\n      argumentHints,\n      autocompleteOnEnter.instance(),\n      TextEditor.Config.showCompletionHint,\n      TextEditor.Config.baseConfiguration(this.initialText),\n      TextEditor.Config.autocompletion.instance(),\n      CodeMirror.javascript.javascriptLanguage.data.of({\n        autocomplete: (context: CodeMirror.CompletionContext) =>\n            this.addCompletionsFromHistory ? this.#editorHistory.historyCompletions(context) : null,\n      }),\n      CodeMirror.EditorView.contentAttributes.of({'aria-label': i18nString(UIStrings.consolePrompt)}),\n      CodeMirror.EditorView.lineWrapping,\n      CodeMirror.autocompletion({aboveCursor: true}),\n      this.#javaScriptCompletionCompartment.of(this.#getJavaScriptCompletionExtensions()),\n    ];\n\n    if (this.isAiCodeCompletionEnabled()) {\n      const aiCodeCompletionTeaserDismissedSetting =\n          Common.Settings.Settings.instance().createSetting('ai-code-completion-teaser-dismissed', false);\n      if (!this.aiCodeCompletionSetting.get() && !aiCodeCompletionTeaserDismissedSetting.get()) {\n        this.teaser = new PanelCommon.AiCodeCompletionTeaser({onDetach: this.detachAiCodeCompletionTeaser.bind(this)});\n        extensions.push(this.placeholderCompartment.of(\n            TextEditor.AiCodeCompletionTeaserPlaceholder.aiCodeCompletionTeaserPlaceholder(this.teaser)));\n      }\n      extensions.push(TextEditor.Config.aiAutoCompleteSuggestion);\n    }\n\n    const doc = this.initialText;\n    const editorState = CodeMirror.EditorState.create({doc, extensions});\n\n    this.editor = new TextEditor.TextEditor.TextEditor(editorState);\n\n    this.editor.addEventListener('keydown', event => {\n      if (event.defaultPrevented) {\n        event.stopPropagation();\n      }\n    });\n    editorContainerElement.appendChild(this.editor);\n    this.#editorHistory = new TextEditor.TextEditorHistory.TextEditorHistory(this.editor, this.historyInternal);\n\n    if (this.hasFocus()) {\n      this.focus();\n    }\n    this.element.removeAttribute('tabindex');\n\n    this.editorSetForTest();\n\n    // Record the console tool load time after the console prompt constructor is complete.\n    Host.userMetrics.panelLoaded('console', 'DevTools.Launch.Console');\n\n    if (this.isAiCodeCompletionEnabled()) {\n      this.aiCodeCompletionSetting.addChangeListener(this.onAiCodeCompletionSettingChanged.bind(this));\n      this.onAiCodeCompletionSettingChanged();\n      this.boundOnAidaAvailabilityChange = this.onAidaAvailabilityChange.bind(this);\n      Host.AidaClient.HostConfigTracker.instance().addEventListener(\n          Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.boundOnAidaAvailabilityChange);\n      void this.onAidaAvailabilityChange();\n    }\n  }\n\n  private eagerSettingChanged(): void {\n    const enabled = this.eagerEvalSetting.get();\n    this.eagerPreviewElement.classList.toggle('hidden', !enabled);\n    if (enabled) {\n      void this.requestPreview();\n    }\n  }\n\n  belowEditorElement(): Element {\n    return this.eagerPreviewElement;\n  }\n\n  private onTextChanged(docContentChanged?: boolean): void {\n    // ConsoleView and prompt both use a throttler, so we clear the preview\n    // ASAP to avoid inconsistency between a fresh viewport and stale preview.\n    if (this.eagerEvalSetting.get()) {\n      const asSoonAsPossible = !TextEditor.Config.contentIncludingHint(this.editor.editor);\n      this.previewRequestForTest = this.textChangeThrottler.schedule(\n          this.requestPreviewBound,\n          asSoonAsPossible ? Common.Throttler.Scheduling.AS_SOON_AS_POSSIBLE : Common.Throttler.Scheduling.DEFAULT);\n    }\n    if (docContentChanged && this.aiCodeCompletion && this.isAiCodeCompletionEnabled()) {\n      // Only trigger when doc content changes.\n      // This ensures that it is not triggered when user is going through the options in existing completion menu.\n      this.triggerAiCodeCompletion();\n    }\n    this.updatePromptIcon();\n    this.dispatchEventToListeners(Events.TEXT_CHANGED);\n  }\n\n  triggerAiCodeCompletion(): void {\n    const {doc, selection} = this.editor.state;\n    const query = doc.toString();\n    const cursor = selection.main.head;\n    const currentExecutionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n    let prefix = query.substring(0, cursor);\n    if (currentExecutionContext) {\n      const consoleModel = currentExecutionContext.target().model(SDK.ConsoleModel.ConsoleModel);\n      if (consoleModel) {\n        let lastMessage = '';\n        let consoleMessages = '';\n        for (const message of consoleModel.messages()) {\n          if (message.type !== SDK.ConsoleModel.FrontendMessageType.Command || message.messageText === lastMessage) {\n            continue;\n          }\n          lastMessage = message.messageText;\n          consoleMessages = consoleMessages + message.messageText + '\\n\\n';\n        }\n        prefix = consoleMessages + prefix;\n      }\n    }\n    let suffix = query.substring(cursor);\n    if (prefix.length > AI_CODE_COMPLETION_CHARACTER_LIMIT) {\n      prefix = prefix.substring(prefix.length - AI_CODE_COMPLETION_CHARACTER_LIMIT);\n    }\n    if (suffix.length > AI_CODE_COMPLETION_CHARACTER_LIMIT) {\n      suffix = suffix.substring(0, AI_CODE_COMPLETION_CHARACTER_LIMIT);\n    }\n    this.aiCodeCompletion?.onTextChanged(prefix, suffix, cursor);\n  }\n\n  private async requestPreview(): Promise<void> {\n    const id = ++this.requestPreviewCurrent;\n    const text = TextEditor.Config.contentIncludingHint(this.editor.editor).trim();\n    const executionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n    const {preview, result} = await ObjectUI.JavaScriptREPL.JavaScriptREPL.evaluateAndBuildPreview(\n        text, true /* throwOnSideEffect */, true /* replMode */, 500 /* timeout */);\n    if (this.requestPreviewCurrent !== id) {\n      return;\n    }\n    this.innerPreviewElement.removeChildren();\n    if (preview.deepTextContent() !== TextEditor.Config.contentIncludingHint(this.editor.editor).trim()) {\n      this.innerPreviewElement.appendChild(preview);\n    }\n    if (result && 'object' in result && result.object && result.object.subtype === 'node') {\n      this.highlightingNode = true;\n      SDK.OverlayModel.OverlayModel.highlightObjectAsDOMNode(result.object);\n    } else if (this.highlightingNode) {\n      this.highlightingNode = false;\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n    if (result && executionContext) {\n      executionContext.runtimeModel.releaseEvaluationResult(result);\n    }\n  }\n\n  override willHide(): void {\n    super.willHide();\n    if (this.highlightingNode) {\n      this.highlightingNode = false;\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n    if (this.boundOnAidaAvailabilityChange) {\n      Host.AidaClient.HostConfigTracker.instance().removeEventListener(\n          Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.boundOnAidaAvailabilityChange);\n    }\n  }\n\n  history(): TextEditor.AutocompleteHistory.AutocompleteHistory {\n    return this.historyInternal;\n  }\n\n  clearAutocomplete(): void {\n    CodeMirror.closeCompletion(this.editor.editor);\n  }\n\n  moveCaretToEndOfPrompt(): void {\n    this.editor.dispatch({\n      selection: CodeMirror.EditorSelection.cursor(this.editor.state.doc.length),\n    });\n  }\n\n  clear(): void {\n    this.editor.dispatch({\n      changes: {from: 0, to: this.editor.state.doc.length},\n    });\n  }\n\n  text(): string {\n    return this.editor.state.doc.toString();\n  }\n\n  setAddCompletionsFromHistory(value: boolean): void {\n    this.addCompletionsFromHistory = value;\n  }\n\n  private editorKeymap(): readonly CodeMirror.KeyBinding[] {\n    const keymap = [\n      {key: 'ArrowUp', run: () => this.#editorHistory.moveHistory(Direction.BACKWARD)},\n      {key: 'ArrowDown', run: () => this.#editorHistory.moveHistory(Direction.FORWARD)},\n      {mac: 'Ctrl-p', run: () => this.#editorHistory.moveHistory(Direction.BACKWARD, true)},\n      {mac: 'Ctrl-n', run: () => this.#editorHistory.moveHistory(Direction.FORWARD, true)},\n      {\n        key: 'Escape',\n        run: () => this.runOnEscape(),\n      },\n      {\n        key: 'Ctrl-Enter',\n        run: () => {\n          void this.handleEnter(/* forceEvaluate */ true);\n          return true;\n        },\n      },\n      {\n        key: 'Enter',\n        run: () => {\n          void this.handleEnter();\n          return true;\n        },\n        shift: CodeMirror.insertNewlineAndIndent,\n      },\n    ];\n\n    if (this.isAiCodeCompletionEnabled()) {\n      keymap.push({\n        key: 'Tab',\n        run: (): boolean => {\n          const {accepted, suggestion} = TextEditor.Config.acceptAiAutoCompleteSuggestion(this.editor.editor);\n          if (accepted) {\n            this.dispatchEventToListeners(\n                Events.AI_CODE_COMPLETION_SUGGESTION_ACCEPTED, {citations: this.aiCodeCompletionCitations});\n            if (suggestion?.rpcGlobalId && suggestion?.sampleId) {\n              this.aiCodeCompletion?.registerUserAcceptance(suggestion.rpcGlobalId, suggestion.sampleId);\n            }\n          }\n          return accepted;\n        },\n      });\n    }\n\n    return keymap;\n  }\n\n  private runOnEscape(): boolean {\n    if (TextEditor.JavaScript.closeArgumentsHintsTooltip(this.editor.editor, this.#argumentHintsState)) {\n      return true;\n    }\n    if (this.aiCodeCompletion && TextEditor.Config.hasActiveAiSuggestion(this.editor.state)) {\n      this.editor.dispatch({\n        effects: TextEditor.Config.setAiAutoCompleteSuggestion.of(null),\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private async enterWillEvaluate(forceEvaluate?: boolean): Promise<boolean> {\n    const {doc, selection} = this.editor.state;\n    if (!doc.length) {\n      return false;\n    }\n    if (forceEvaluate || selection.main.head < doc.length) {\n      return true;\n    }\n    const currentExecutionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n    const isExpressionComplete = await TextEditor.JavaScript.isExpressionComplete(doc.toString());\n    if (currentExecutionContext !== UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext)) {\n      // We should not evaluate if the current context has changed since user action\n      return false;\n    }\n    return isExpressionComplete;\n  }\n\n  showSelfXssWarning(): void {\n    Common.Console.Console.instance().warn(\n        i18nString(UIStrings.selfXssWarning, {PH1: i18nString(UIStrings.allowPasting)}),\n        Common.Console.FrontendMessageSource.SELF_XSS);\n    this.#selfXssWarningShown = true;\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelfXssWarningConsoleMessageShown);\n    this.#updateJavaScriptCompletionCompartment();\n  }\n\n  private async handleEnter(forceEvaluate?: boolean): Promise<void> {\n    if (this.#selfXssWarningShown && this.text() === i18nString(UIStrings.allowPasting)) {\n      Common.Console.Console.instance().log(this.text());\n      this.editor.dispatch({\n        changes: {from: 0, to: this.editor.state.doc.length},\n        scrollIntoView: true,\n      });\n      Common.Settings.Settings.instance()\n          .createSetting('disable-self-xss-warning', false, Common.Settings.SettingStorageType.SYNCED)\n          .set(true);\n      this.#selfXssWarningShown = false;\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelfXssAllowPastingInConsole);\n      this.#updateJavaScriptCompletionCompartment();\n      return;\n    }\n\n    if (await this.enterWillEvaluate(forceEvaluate)) {\n      this.appendCommand(this.text(), true);\n      TextEditor.JavaScript.closeArgumentsHintsTooltip(this.editor.editor, this.#argumentHintsState);\n      this.editor.dispatch({\n        changes: {from: 0, to: this.editor.state.doc.length},\n        scrollIntoView: true,\n      });\n      if (this.teaser) {\n        this.detachAiCodeCompletionTeaser();\n        this.teaser = undefined;\n      }\n    } else if (this.editor.state.doc.length) {\n      CodeMirror.insertNewlineAndIndent(this.editor.editor);\n    } else {\n      this.editor.dispatch({scrollIntoView: true});\n    }\n  }\n\n  private updatePromptIcon(): void {\n    void this.iconThrottler.schedule(async () => {\n      this.promptIcon.classList.toggle('console-prompt-incomplete', !(await this.enterWillEvaluate()));\n    });\n  }\n\n  private appendCommand(text: string, useCommandLineAPI: boolean): void {\n    const currentExecutionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n    if (currentExecutionContext) {\n      const executionContext = currentExecutionContext;\n      const consoleModel = executionContext.target().model(SDK.ConsoleModel.ConsoleModel);\n      if (consoleModel) {\n        const message = consoleModel.addCommandMessage(executionContext, text);\n        const expression = ObjectUI.JavaScriptREPL.JavaScriptREPL.wrapObjectLiteral(text);\n        void this.evaluateCommandInConsole(executionContext, message, expression, useCommandLineAPI);\n        if (ConsolePanel.instance().isShowing()) {\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.CommandEvaluatedInConsolePanel);\n        }\n      }\n    }\n  }\n\n  private async evaluateCommandInConsole(\n      executionContext: SDK.RuntimeModel.ExecutionContext, message: SDK.ConsoleModel.ConsoleMessage, expression: string,\n      useCommandLineAPI: boolean): Promise<void> {\n    const callFrame = executionContext.debuggerModel.selectedCallFrame();\n    if (callFrame?.script.isJavaScript()) {\n      const nameMap = await SourceMapScopes.NamesResolver.allVariablesInCallFrame(callFrame);\n      expression = await this.substituteNames(expression, nameMap);\n    }\n\n    await executionContext.target()\n        .model(SDK.ConsoleModel.ConsoleModel)\n        ?.evaluateCommandInConsole(executionContext, message, expression, useCommandLineAPI);\n  }\n\n  private async substituteNames(expression: string, mapping: Map<string, string|null>): Promise<string> {\n    try {\n      return await Formatter.FormatterWorkerPool.formatterWorkerPool().javaScriptSubstitute(expression, mapping);\n    } catch {\n      return expression;\n    }\n  }\n\n  private editorUpdate(update: CodeMirror.ViewUpdate): void {\n    if (update.docChanged ||\n        CodeMirror.selectedCompletion(update.state) !== CodeMirror.selectedCompletion(update.startState)) {\n      const docContentChanged = update.state.doc !== update.startState.doc;\n      this.onTextChanged(docContentChanged);\n    } else if (update.selectionSet) {\n      this.updatePromptIcon();\n    }\n  }\n\n  override focus(): void {\n    this.editor.focus();\n  }\n\n  // TODO(b/435654172): Refactor and move aiCodeCompletion model one level up to avoid\n  // defining additional listeners and events.\n  private setAiCodeCompletion(): void {\n    if (this.aiCodeCompletion) {\n      return;\n    }\n    if (!this.aidaClient) {\n      this.aidaClient = new Host.AidaClient.AidaClient();\n    }\n    if (this.teaser) {\n      this.detachAiCodeCompletionTeaser();\n      this.teaser = undefined;\n    }\n    this.aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: this.aidaClient}, this.editor, AiCodeCompletion.AiCodeCompletion.Panel.CONSOLE);\n    this.aiCodeCompletion.addEventListener(AiCodeCompletion.AiCodeCompletion.Events.RESPONSE_RECEIVED, event => {\n      this.aiCodeCompletionCitations = event.data.citations;\n      this.dispatchEventToListeners(Events.AI_CODE_COMPLETION_RESPONSE_RECEIVED, event.data);\n    });\n    this.aiCodeCompletion.addEventListener(AiCodeCompletion.AiCodeCompletion.Events.REQUEST_TRIGGERED, event => {\n      this.dispatchEventToListeners(Events.AI_CODE_COMPLETION_REQUEST_TRIGGERED, event.data);\n    });\n  }\n\n  private onAiCodeCompletionSettingChanged(): void {\n    if (this.aiCodeCompletionSetting.get() && this.isAiCodeCompletionEnabled()) {\n      this.setAiCodeCompletion();\n    } else if (this.aiCodeCompletion) {\n      this.aiCodeCompletion.remove();\n      this.aiCodeCompletion = undefined;\n    }\n  }\n\n  private async onAidaAvailabilityChange(): Promise<void> {\n    const currentAidaAvailability = await Host.AidaClient.AidaClient.checkAccessPreconditions();\n    if (currentAidaAvailability !== this.aidaAvailability) {\n      this.aidaAvailability = currentAidaAvailability;\n      if (this.aidaAvailability === Host.AidaClient.AidaAccessPreconditions.AVAILABLE) {\n        this.onAiCodeCompletionSettingChanged();\n      } else if (this.aiCodeCompletion) {\n        this.aiCodeCompletion.remove();\n        this.aiCodeCompletion = undefined;\n      }\n    }\n  }\n\n  async onAiCodeCompletionTeaserActionKeyDown(event: Event): Promise<void> {\n    if (this.teaser?.isShowing()) {\n      await this.teaser?.onAction(event);\n      void VisualLogging.logKeyDown(event.currentTarget, event, 'ai-code-completion-teaser.fre');\n    }\n  }\n\n  onAiCodeCompletionTeaserDismissKeyDown(event: Event): void {\n    if (this.teaser?.isShowing()) {\n      this.teaser?.onDismiss(event);\n      void VisualLogging.logKeyDown(event.currentTarget, event, 'ai-code-completion-teaser.dismiss');\n    }\n  }\n\n  private detachAiCodeCompletionTeaser(): void {\n    this.editor.dispatch({\n      effects: this.placeholderCompartment.reconfigure([]),\n    });\n  }\n\n  private isAiCodeCompletionEnabled(): boolean {\n    return Boolean(Root.Runtime.hostConfig.devToolsAiCodeCompletion?.enabled);\n  }\n\n  private editorSetForTest(): void {\n  }\n\n  setAidaClientForTest(aidaClient: Host.AidaClient.AidaClient): void {\n    this.aidaClient = aidaClient;\n  }\n}\n\nexport const enum Events {\n  TEXT_CHANGED = 'TextChanged',\n  AI_CODE_COMPLETION_SUGGESTION_ACCEPTED = 'AiCodeCompletionSuggestionAccepted',\n  AI_CODE_COMPLETION_RESPONSE_RECEIVED = 'AiCodeCompletionResponseReceived',\n  AI_CODE_COMPLETION_REQUEST_TRIGGERED = 'AiCodeCompletionRequestTriggered'\n}\n\nexport interface EventTypes {\n  [Events.TEXT_CHANGED]: void;\n  [Events.AI_CODE_COMPLETION_SUGGESTION_ACCEPTED]: AiCodeCompletion.AiCodeCompletion.ResponseReceivedEvent;\n  [Events.AI_CODE_COMPLETION_RESPONSE_RECEIVED]: AiCodeCompletion.AiCodeCompletion.ResponseReceivedEvent;\n  // eslint-disable-next-line @typescript-eslint/no-empty-object-type\n  [Events.AI_CODE_COMPLETION_REQUEST_TRIGGERED]: {};\n}\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ConsoleView} from './ConsoleView.js';\n\nlet consolePanelInstance: ConsolePanel;\n\nexport class ConsolePanel extends UI.Panel.Panel {\n  private readonly view: ConsoleView;\n  constructor() {\n    super('console');\n    this.view = ConsoleView.instance();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ConsolePanel {\n    const {forceNew} = opts;\n    if (!consolePanelInstance || forceNew) {\n      consolePanelInstance = new ConsolePanel();\n    }\n\n    return consolePanelInstance;\n  }\n\n  static updateContextFlavor(): void {\n    const consoleView = ConsolePanel.instance().view;\n    UI.Context.Context.instance().setFlavor(ConsoleView, consoleView.isShowing() ? consoleView : null);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    const wrapper = wrapperViewInstance;\n    if (wrapper?.isShowing()) {\n      UI.InspectorView.InspectorView.instance().setDrawerMinimized(true);\n    }\n    this.view.show(this.element);\n    ConsolePanel.updateContextFlavor();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    // The minimized drawer has 0 height, and showing Console inside may set\n    // Console's scrollTop to 0. Unminimize before calling show to avoid this.\n    UI.InspectorView.InspectorView.instance().setDrawerMinimized(false);\n    if (wrapperViewInstance) {\n      wrapperViewInstance.showViewInWrapper();\n    }\n    ConsolePanel.updateContextFlavor();\n  }\n\n  override searchableView(): UI.SearchableView.SearchableView|null {\n    return ConsoleView.instance().searchableView();\n  }\n}\n\nlet wrapperViewInstance: WrapperView|null = null;\n\nexport class WrapperView extends UI.Widget.VBox {\n  private readonly view: ConsoleView;\n\n  private constructor() {\n    super({jslog: `${VisualLogging.panel('console').track({resize: true})}`});\n    this.view = ConsoleView.instance();\n  }\n\n  static instance(): WrapperView {\n    if (!wrapperViewInstance) {\n      wrapperViewInstance = new WrapperView();\n    }\n    return wrapperViewInstance;\n  }\n\n  override wasShown(): void {\n    if (!ConsolePanel.instance().isShowing()) {\n      this.showViewInWrapper();\n    } else {\n      UI.InspectorView.InspectorView.instance().setDrawerMinimized(true);\n    }\n    ConsolePanel.updateContextFlavor();\n  }\n\n  override willHide(): void {\n    UI.InspectorView.InspectorView.instance().setDrawerMinimized(false);\n    ConsolePanel.updateContextFlavor();\n  }\n\n  showViewInWrapper(): void {\n    this.view.show(this.element);\n  }\n}\n\nexport class ConsoleRevealer implements Common.Revealer.Revealer<Common.Console.Console> {\n  async reveal(_object: Common.Console.Console): Promise<void> {\n    const consoleView = ConsoleView.instance();\n    if (consoleView.isShowing()) {\n      consoleView.focus();\n      return;\n    }\n    await UI.ViewManager.ViewManager.instance().showView('console-view');\n  }\n}\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport type * as AiCodeCompletion from '../../models/ai_code_completion/ai_code_completion.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as CodeHighlighter from '../../ui/components/code_highlighter/code_highlighter.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\n// eslint-disable-next-line rulesdir/es-modules-import\nimport objectValueStyles from '../../ui/legacy/components/object_ui/objectValue.css.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport {AiCodeCompletionSummaryToolbar} from '../common/common.js';\n\nimport {ConsoleContextSelector} from './ConsoleContextSelector.js';\nimport {ConsoleFilter, FilterType, type LevelsMask} from './ConsoleFilter.js';\nimport {ConsolePinPane} from './ConsolePinPane.js';\nimport {ConsolePrompt, Events as ConsolePromptEvents} from './ConsolePrompt.js';\nimport {ConsoleSidebar, Events} from './ConsoleSidebar.js';\nimport consoleViewStyles from './consoleView.css.js';\nimport {\n  ConsoleCommand,\n  ConsoleCommandResult,\n  ConsoleGroupViewMessage,\n  ConsoleTableMessageView,\n  ConsoleViewMessage,\n  getMessageForElement,\n  MaxLengthForLinks,\n} from './ConsoleViewMessage.js';\nimport {ConsoleViewport, type ConsoleViewportElement, type ConsoleViewportProvider} from './ConsoleViewport.js';\n\nconst UIStrings = {\n  /**\n   * @description Label for button which links to Issues tab, specifying how many issues there are.\n   */\n  issuesWithColon: '{n, plural, =0 {No Issues} =1 {# Issue:} other {# Issues:}}',\n  /**\n   * @description Text for the tooltip of the issue counter toolbar item\n   */\n  issueToolbarTooltipGeneral: 'Some problems no longer generate console messages, but are surfaced in the issues tab.',\n  /**\n   * @description Text for the tooltip of the issue counter toolbar item. The placeholder indicates how many issues\n   * there are in the Issues tab broken down by kind.\n   * @example {1 page error, 2 breaking changes} issueEnumeration\n   */\n  issueToolbarClickToView: 'Click to view {issueEnumeration}',\n  /**\n   * @description Text for the tooltip of the issue counter toolbar item. The placeholder indicates how many issues\n   * there are in the Issues tab broken down by kind.\n   */\n  issueToolbarClickToGoToTheIssuesTab: 'Click to go to the issues tab',\n  /**\n   * @description Text in Console View of the Console panel\n   */\n  findStringInLogs: 'Find string in logs',\n  /**\n   * @description Tooltip text that appears when hovering over the largeicon settings gear in show settings pane setting in console view of the console panel\n   */\n  consoleSettings: 'Console settings',\n  /**\n   * @description Title of a setting under the Console category that can be invoked through the Command Menu\n   */\n  groupSimilarMessagesInConsole: 'Group similar messages in console',\n  /**\n   * @description Title of a setting under the Console category that can be invoked through the Command Menu\n   */\n  showCorsErrorsInConsole: 'Show `CORS` errors in console',\n  /**\n   * @description Tooltip for the the console sidebar toggle in the Console panel. Command to\n   * open/show the sidebar.\n   */\n  showConsoleSidebar: 'Show console sidebar',\n  /**\n   * @description Tooltip for the the console sidebar toggle in the Console panel. Command to\n   * open/show the sidebar.\n   */\n  hideConsoleSidebar: 'Hide console sidebar',\n  /**\n   * @description Screen reader announcement when the sidebar is shown in the Console panel.\n   */\n  consoleSidebarShown: 'Console sidebar shown',\n  /**\n   * @description Screen reader announcement when the sidebar is hidden in the Console panel.\n   */\n  consoleSidebarHidden: 'Console sidebar hidden',\n  /**\n   * @description Tooltip text that appears on the setting to preserve log when hovering over the item\n   */\n  doNotClearLogOnPageReload: 'Do not clear log on page reload / navigation',\n  /**\n   * @description Text to preserve the log after refreshing\n   */\n  preserveLog: 'Preserve log',\n  /**\n   * @description Text in Console View of the Console panel\n   */\n  hideNetwork: 'Hide network',\n  /**\n   * @description Tooltip text that appears on the setting when hovering over it in Console View of the Console panel\n   */\n  onlyShowMessagesFromTheCurrentContext:\n      'Only show messages from the current context (`top`, `iframe`, `worker`, extension)',\n  /**\n   * @description Alternative title text of a setting in Console View of the Console panel\n   */\n  selectedContextOnly: 'Selected context only',\n  /**\n   * @description Description of a setting that controls whether XMLHttpRequests are logged in the console.\n   */\n  logXMLHttpRequests: 'Log XMLHttpRequests',\n  /**\n   * @description Tooltip text that appears on the setting when hovering over it in Console View of the Console panel\n   */\n  eagerlyEvaluateTextInThePrompt: 'Eagerly evaluate text in the prompt',\n  /**\n   * @description Description of a setting that controls whether text typed in the console should be autocompleted from commands executed in the local console history.\n   */\n  autocompleteFromHistory: 'Autocomplete from history',\n  /**\n   * @description Description of a setting that controls whether user activation is triggered by evaluation'.\n   */\n  treatEvaluationAsUserActivation: 'Treat evaluation as user activation',\n  /**\n   * @description Text in Console View of the Console panel, indicating that a number of console\n   * messages have been hidden.\n   */\n  sHidden: '{n, plural, =1 {# hidden} other {# hidden}}',\n  /**\n   * @description Alert message for screen readers when the console is cleared\n   */\n  consoleCleared: 'Console cleared',\n  /**\n   * @description Text in Console View of the Console panel\n   * @example {index.js} PH1\n   */\n  hideMessagesFromS: 'Hide messages from {PH1}',\n  /**\n   * @description Text to save content as a specific file type\n   */\n  saveAs: 'Save as…',\n  /**\n   * @description Text to copy Console log to clipboard\n   */\n  copyConsole: 'Copy console',\n  /**\n   * @description A context menu item in the Console View of the Console panel\n   */\n  copyVisibleStyledSelection: 'Copy visible styled selection',\n  /**\n   * @description Text to replay an XHR request\n   */\n  replayXhr: 'Replay XHR',\n  /**\n   * @description Text to indicate DevTools is writing to a file\n   */\n  writingFile: 'Writing file…',\n  /**\n   * @description Text to indicate the searching is in progress\n   */\n  searching: 'Searching…',\n  /**\n   * @description Text in Console View of the Console panel\n   */\n  egEventdCdnUrlacom: 'e.g. `/event\\d/ -cdn url:a.com`',\n  /**\n   * @description Sdk console message message level verbose of level Labels in Console View of the Console panel\n   */\n  verbose: 'Verbose',\n  /**\n   * @description Sdk console message message level info of level Labels in Console View of the Console panel\n   */\n  info: 'Info',\n  /**\n   * @description Sdk console message message level warning of level Labels in Console View of the Console panel\n   */\n  warnings: 'Warnings',\n  /**\n   * @description Text for errors\n   */\n  errors: 'Errors',\n  /**\n   * @description Tooltip text of the info icon shown next to the filter drop down\n   *              in the Console panels main toolbar when the sidebar is active.\n   */\n  overriddenByFilterSidebar: 'Log levels are controlled by the console sidebar.',\n  /**\n   * @description Text in Console View of the Console panel\n   */\n  customLevels: 'Custom levels',\n  /**\n   * @description Text in Console View of the Console panel\n   * @example {Warnings} PH1\n   */\n  sOnly: '{PH1} only',\n  /**\n   * @description Text in Console View of the Console panel\n   */\n  allLevels: 'All levels',\n  /**\n   * @description Text in Console View of the Console panel\n   */\n  defaultLevels: 'Default levels',\n  /**\n   * @description Text in Console View of the Console panel\n   */\n  hideAll: 'Hide all',\n  /**\n   * @description Title of level menu button in console view of the console panel\n   * @example {All levels} PH1\n   */\n  logLevelS: 'Log level: {PH1}',\n  /**\n   * @description A context menu item in the Console View of the Console panel\n   */\n  default: 'Default',\n  /**\n   * @description Text summary to indicate total number of messages in console for accessibility/screen readers.\n   * @example {5} PH1\n   */\n  filteredMessagesInConsole: '{PH1} messages in console',\n\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/console/ConsoleView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet consoleViewInstance: ConsoleView;\n\nconst MIN_HISTORY_LENGTH_FOR_DISABLING_SELF_XSS_WARNING = 5;\nconst DISCLAIMER_TOOLTIP_ID = 'console-ai-code-completion-disclaimer-tooltip';\nconst CITATIONS_TOOLTIP_ID = 'console-ai-code-completion-citations-tooltip';\n\nexport class ConsoleView extends UI.Widget.VBox implements\n    UI.SearchableView.Searchable, ConsoleViewportProvider,\n    SDK.TargetManager.SDKModelObserver<SDK.ConsoleModel.ConsoleModel> {\n  private readonly searchableViewInternal: UI.SearchableView.SearchableView;\n  private readonly sidebar: ConsoleSidebar;\n  private isSidebarOpen: boolean;\n  private filter: ConsoleViewFilter;\n  private readonly consoleToolbarContainer: HTMLElement;\n  private readonly splitWidget: UI.SplitWidget.SplitWidget;\n  private readonly contentsElement: typeof UI.Widget.Widget.prototype.element;\n  private visibleViewMessages: ConsoleViewMessage[];\n  private hiddenByFilterCount: number;\n  private shouldBeHiddenCache: Set<ConsoleViewMessage>;\n  private lastShownHiddenByFilterCount!: number;\n  private currentMatchRangeIndex!: number;\n  private searchRegex!: RegExp|null;\n  private groupableMessages: Map<string, ConsoleViewMessage[]>;\n  private readonly groupableMessageTitle: Map<string, ConsoleViewMessage>;\n  private readonly shortcuts: Map<number, (e: KeyboardEvent) => void>;\n  private regexMatchRanges: RegexMatchRange[];\n  private readonly consoleContextSelector: ConsoleContextSelector;\n  private readonly filterStatusText: UI.Toolbar.ToolbarText;\n  private readonly showSettingsPaneSetting: Common.Settings.Setting<boolean>;\n  private readonly showSettingsPaneButton: UI.Toolbar.ToolbarSettingToggle;\n  private readonly progressToolbarItem: UI.Toolbar.ToolbarItem;\n  private readonly groupSimilarSetting: Common.Settings.Setting<boolean>;\n  private readonly showCorsErrorsSetting: Common.Settings.Setting<boolean>;\n  private readonly timestampsSetting: Common.Settings.Setting<unknown>;\n  private readonly consoleHistoryAutocompleteSetting: Common.Settings.Setting<boolean>;\n  private selfXssWarningDisabledSetting: Common.Settings.Setting<boolean>;\n  readonly pinPane: ConsolePinPane;\n  private viewport: ConsoleViewport;\n  private messagesElement: HTMLElement;\n  private messagesCountElement: HTMLElement;\n  private viewportThrottler: Common.Throttler.Throttler;\n  private pendingBatchResize: boolean;\n  private readonly onMessageResizedBound:\n      (e: Common.EventTarget.EventTargetEvent<HTMLElement|UI.TreeOutline.TreeElement>) => void;\n  private readonly promptElement: HTMLElement;\n  private readonly linkifier: Components.Linkifier.Linkifier;\n  private consoleMessages: ConsoleViewMessage[];\n  private consoleGroupStarts: ConsoleGroupViewMessage[];\n  private prompt: ConsolePrompt;\n  private immediatelyFilterMessagesForTest?: boolean;\n  private maybeDirtyWhileMuted?: boolean;\n  private scheduledRefreshPromiseForTest?: Promise<void>;\n  private needsFullUpdate?: boolean;\n  private buildHiddenCacheTimeout?: number;\n  private searchShouldJumpBackwards?: boolean;\n  private searchProgressIndicator?: UI.ProgressIndicator.ProgressIndicator;\n  private innerSearchTimeoutId?: number;\n  private muteViewportUpdates?: boolean;\n  private waitForScrollTimeout?: number;\n  private issueCounter: IssueCounter.IssueCounter.IssueCounter;\n  private pendingSidebarMessages: ConsoleViewMessage[] = [];\n  private userHasOpenedSidebarAtLeastOnce = false;\n  private issueToolbarThrottle: Common.Throttler.Throttler;\n  private requestResolver = new Logs.RequestResolver.RequestResolver();\n  private issueResolver = new IssuesManager.IssueResolver.IssueResolver();\n  #isDetached = false;\n  #onIssuesCountUpdateBound = this.#onIssuesCountUpdate.bind(this);\n  private aiCodeCompletionSetting =\n      Common.Settings.Settings.instance().createSetting('ai-code-completion-enabled', false);\n  private aiCodeCompletionSummaryToolbarContainer?: HTMLElement;\n  private aiCodeCompletionSummaryToolbar?: AiCodeCompletionSummaryToolbar;\n\n  constructor(viewportThrottlerTimeout: number) {\n    super();\n    this.setMinimumSize(0, 35);\n    this.registerRequiredCSS(consoleViewStyles, objectValueStyles, CodeHighlighter.codeHighlighterStyles);\n\n    this.searchableViewInternal = new UI.SearchableView.SearchableView(this, null);\n    this.searchableViewInternal.element.classList.add('console-searchable-view');\n    this.searchableViewInternal.setPlaceholder(i18nString(UIStrings.findStringInLogs));\n    this.searchableViewInternal.setMinimalSearchQuerySize(0);\n    this.sidebar = new ConsoleSidebar();\n    this.sidebar.addEventListener(Events.FILTER_SELECTED, this.onFilterChanged.bind(this));\n    this.isSidebarOpen = false;\n    this.filter = new ConsoleViewFilter(this.onFilterChanged.bind(this));\n\n    this.consoleToolbarContainer = this.element.createChild('div', 'console-toolbar-container');\n    this.consoleToolbarContainer.role = 'toolbar';\n    this.splitWidget = new UI.SplitWidget.SplitWidget(\n        true /* isVertical */, false /* secondIsSidebar */, 'console.sidebar.width', 100);\n    this.splitWidget.setMainWidget(this.searchableViewInternal);\n    this.splitWidget.setSidebarWidget(this.sidebar);\n    this.splitWidget.show(this.element);\n    this.splitWidget.hideSidebar();\n    this.splitWidget.enableShowModeSaving();\n    this.isSidebarOpen = this.splitWidget.showMode() === UI.SplitWidget.ShowMode.BOTH;\n    this.filter.setLevelMenuOverridden(this.isSidebarOpen);\n    this.splitWidget.addEventListener(UI.SplitWidget.Events.SHOW_MODE_CHANGED, event => {\n      this.isSidebarOpen = event.data === UI.SplitWidget.ShowMode.BOTH;\n\n      if (this.isSidebarOpen) {\n        if (!this.userHasOpenedSidebarAtLeastOnce) {\n          /**\n           * We only want to know if the user opens the sidebar once, not how\n           * many times in a given session they might open and close it, hence\n           * the userHasOpenedSidebarAtLeastOnce variable to track this.\n           */\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.ConsoleSidebarOpened);\n          this.userHasOpenedSidebarAtLeastOnce = true;\n        }\n\n        // If the user has now opened the sidebar, we need to update it, so send\n        // through all the pending messages.\n        this.pendingSidebarMessages.forEach(message => {\n          this.sidebar.onMessageAdded(message);\n        });\n        this.pendingSidebarMessages = [];\n      }\n      this.filter.setLevelMenuOverridden(this.isSidebarOpen);\n      this.onFilterChanged();\n    });\n    this.contentsElement = this.searchableViewInternal.element;\n    this.element.classList.add('console-view');\n\n    this.visibleViewMessages = [];\n    this.hiddenByFilterCount = 0;\n    this.shouldBeHiddenCache = new Set();\n\n    this.groupableMessages = new Map();\n    this.groupableMessageTitle = new Map();\n    this.shortcuts = new Map();\n\n    this.regexMatchRanges = [];\n\n    this.consoleContextSelector = new ConsoleContextSelector();\n\n    this.filterStatusText = new UI.Toolbar.ToolbarText();\n    this.filterStatusText.element.classList.add('dimmed');\n    this.showSettingsPaneSetting =\n        Common.Settings.Settings.instance().createSetting('console-show-settings-toolbar', false);\n    this.showSettingsPaneButton = new UI.Toolbar.ToolbarSettingToggle(\n        this.showSettingsPaneSetting, 'gear', i18nString(UIStrings.consoleSettings), 'gear-filled');\n    this.showSettingsPaneButton.element.setAttribute(\n        'jslog', `${VisualLogging.toggleSubpane('console-settings').track({click: true})}`);\n    this.progressToolbarItem = new UI.Toolbar.ToolbarItem(document.createElement('div'));\n    this.groupSimilarSetting = Common.Settings.Settings.instance().moduleSetting('console-group-similar');\n    this.groupSimilarSetting.addChangeListener(() => this.updateMessageList());\n\n    this.showCorsErrorsSetting = Common.Settings.Settings.instance().moduleSetting('console-shows-cors-errors');\n    this.showCorsErrorsSetting.addChangeListener(() => this.updateMessageList());\n\n    const toolbar = this.consoleToolbarContainer.createChild('devtools-toolbar', 'console-main-toolbar');\n    toolbar.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n    toolbar.role = 'presentation';\n    toolbar.wrappable = true;\n    toolbar.appendToolbarItem(this.splitWidget.createShowHideSidebarButton(\n        i18nString(UIStrings.showConsoleSidebar), i18nString(UIStrings.hideConsoleSidebar),\n        i18nString(UIStrings.consoleSidebarShown), i18nString(UIStrings.consoleSidebarHidden), 'console-sidebar'));\n    toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton('console.clear'));\n    toolbar.appendSeparator();\n    toolbar.appendToolbarItem(this.consoleContextSelector.toolbarItem());\n    toolbar.appendSeparator();\n    const liveExpressionButton = UI.Toolbar.Toolbar.createActionButton('console.create-pin');\n    toolbar.appendToolbarItem(liveExpressionButton);\n    toolbar.appendSeparator();\n    toolbar.appendToolbarItem(this.filter.textFilterUI);\n    toolbar.appendToolbarItem(this.filter.levelMenuButton);\n    toolbar.appendToolbarItem(this.filter.levelMenuButtonInfo);\n    toolbar.appendToolbarItem(this.progressToolbarItem);\n    toolbar.appendSeparator();\n    this.issueCounter = new IssueCounter.IssueCounter.IssueCounter();\n    this.issueCounter.id = 'console-issues-counter';\n    this.issueCounter.setAttribute('jslog', `${VisualLogging.counter('issues').track({click: true})}`);\n    const issuesToolbarItem = new UI.Toolbar.ToolbarItem(this.issueCounter);\n    this.issueCounter.data = {\n      clickHandler: () => {\n        Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.STATUS_BAR_ISSUES_COUNTER);\n        void UI.ViewManager.ViewManager.instance().showView('issues-pane');\n      },\n      issuesManager: IssuesManager.IssuesManager.IssuesManager.instance(),\n      accessibleName: i18nString(UIStrings.issueToolbarTooltipGeneral),\n      displayMode: IssueCounter.IssueCounter.DisplayMode.OMIT_EMPTY,\n    };\n    toolbar.appendToolbarItem(issuesToolbarItem);\n    toolbar.appendSeparator();\n    toolbar.appendToolbarItem(this.filterStatusText);\n    toolbar.appendToolbarItem(this.showSettingsPaneButton);\n\n    const monitoringXHREnabledSetting = Common.Settings.Settings.instance().moduleSetting('monitoring-xhr-enabled');\n    this.timestampsSetting = Common.Settings.Settings.instance().moduleSetting('console-timestamps-enabled');\n    this.consoleHistoryAutocompleteSetting =\n        Common.Settings.Settings.instance().moduleSetting('console-history-autocomplete');\n    this.selfXssWarningDisabledSetting = Common.Settings.Settings.instance().createSetting(\n        'disable-self-xss-warning', false, Common.Settings.SettingStorageType.SYNCED);\n\n    const settingsPane = this.contentsElement.createChild('div', 'console-settings-pane');\n    UI.ARIAUtils.setLabel(settingsPane, i18nString(UIStrings.consoleSettings));\n    UI.ARIAUtils.markAsGroup(settingsPane);\n\n    const consoleEagerEvalSetting = Common.Settings.Settings.instance().moduleSetting('console-eager-eval');\n    const preserveConsoleLogSetting = Common.Settings.Settings.instance().moduleSetting('preserve-console-log');\n    const userActivationEvalSetting = Common.Settings.Settings.instance().moduleSetting('console-user-activation-eval');\n    settingsPane.append(\n        UI.SettingsUI.createSettingCheckbox(\n            i18nString(UIStrings.hideNetwork), this.filter.hideNetworkMessagesSetting,\n            this.filter.hideNetworkMessagesSetting.title()),\n        UI.SettingsUI.createSettingCheckbox(i18nString(UIStrings.logXMLHttpRequests), monitoringXHREnabledSetting),\n        UI.SettingsUI.createSettingCheckbox(\n            i18nString(UIStrings.preserveLog), preserveConsoleLogSetting,\n            i18nString(UIStrings.doNotClearLogOnPageReload)),\n        UI.SettingsUI.createSettingCheckbox(\n            consoleEagerEvalSetting.title(), consoleEagerEvalSetting,\n            i18nString(UIStrings.eagerlyEvaluateTextInThePrompt)),\n        UI.SettingsUI.createSettingCheckbox(\n            i18nString(UIStrings.selectedContextOnly), this.filter.filterByExecutionContextSetting,\n            i18nString(UIStrings.onlyShowMessagesFromTheCurrentContext)),\n        UI.SettingsUI.createSettingCheckbox(\n            this.consoleHistoryAutocompleteSetting.title(), this.consoleHistoryAutocompleteSetting,\n            i18nString(UIStrings.autocompleteFromHistory)),\n        UI.SettingsUI.createSettingCheckbox(\n            this.groupSimilarSetting.title(), this.groupSimilarSetting,\n            i18nString(UIStrings.groupSimilarMessagesInConsole)),\n        UI.SettingsUI.createSettingCheckbox(\n            userActivationEvalSetting.title(), userActivationEvalSetting,\n            i18nString(UIStrings.treatEvaluationAsUserActivation)),\n        UI.SettingsUI.createSettingCheckbox(\n            this.showCorsErrorsSetting.title(), this.showCorsErrorsSetting,\n            i18nString(UIStrings.showCorsErrorsInConsole)),\n    );\n\n    if (!this.showSettingsPaneSetting.get()) {\n      settingsPane.classList.add('hidden');\n    }\n    this.showSettingsPaneSetting.addChangeListener(\n        () => settingsPane.classList.toggle('hidden', !this.showSettingsPaneSetting.get()));\n\n    this.pinPane = new ConsolePinPane(liveExpressionButton, () => this.prompt.focus());\n    this.pinPane.element.classList.add('console-view-pinpane');\n    this.pinPane.show(this.contentsElement);\n\n    this.viewport = new ConsoleViewport(this);\n    this.viewport.setStickToBottom(true);\n    this.viewport.contentElement().classList.add('console-group', 'console-group-messages');\n    this.contentsElement.appendChild(this.viewport.element);\n    this.messagesElement = this.viewport.element;\n    this.messagesElement.id = 'console-messages';\n    this.messagesElement.classList.add('monospace');\n    this.messagesElement.addEventListener('click', this.messagesClicked.bind(this), false);\n    ['paste', 'clipboard-paste', 'drop'].forEach(type => {\n      this.messagesElement.addEventListener(type, this.messagesPasted.bind(this), true);\n    });\n\n    this.messagesCountElement = this.consoleToolbarContainer.createChild('div', 'message-count');\n    UI.ARIAUtils.markAsPoliteLiveRegion(this.messagesCountElement, false);\n\n    this.viewportThrottler = new Common.Throttler.Throttler(viewportThrottlerTimeout);\n    this.pendingBatchResize = false;\n    this.onMessageResizedBound = (e: Common.EventTarget.EventTargetEvent<HTMLElement|UI.TreeOutline.TreeElement>) => {\n      void this.onMessageResized(e);\n    };\n\n    this.promptElement = this.messagesElement.createChild('div', 'source-code');\n    this.promptElement.id = 'console-prompt';\n\n    // FIXME: This is a workaround for the selection machinery bug. See crbug.com/410899\n    const selectAllFixer = this.messagesElement.createChild('div', 'console-view-fix-select-all');\n    selectAllFixer.textContent = '.';\n    UI.ARIAUtils.setHidden(selectAllFixer, true);\n\n    this.registerShortcuts();\n\n    this.messagesElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), false);\n\n    // Filters need to be re-applied to a console message when the message's live location changes.\n    // All relevant live locations are created by the same linkifier, so it is enough to subscribe to\n    // the linkifiers live location change event.\n    const throttler = new Common.Throttler.Throttler(100);\n    const refilterMessages = (): Promise<void> => throttler.schedule(async () => this.onFilterChanged());\n    this.linkifier = new Components.Linkifier.Linkifier(MaxLengthForLinks);\n    this.linkifier.addEventListener(Components.Linkifier.Events.LIVE_LOCATION_UPDATED, refilterMessages);\n\n    this.consoleMessages = [];\n    this.consoleGroupStarts = [];\n\n    this.prompt = new ConsolePrompt();\n    this.prompt.show(this.promptElement);\n    this.prompt.element.addEventListener('keydown', this.promptKeyDown.bind(this), true);\n    this.prompt.addEventListener(ConsolePromptEvents.TEXT_CHANGED, this.promptTextChanged, this);\n\n    if (this.isAiCodeCompletionEnabled()) {\n      this.aiCodeCompletionSetting.addChangeListener(this.onAiCodeCompletionSettingChanged.bind(this));\n      this.onAiCodeCompletionSettingChanged();\n      this.prompt.addEventListener(\n          ConsolePromptEvents.AI_CODE_COMPLETION_SUGGESTION_ACCEPTED, this.#onAiCodeCompletionSuggestionAccepted, this);\n      this.prompt.addEventListener(\n          ConsolePromptEvents.AI_CODE_COMPLETION_REQUEST_TRIGGERED, this.#onAiCodeCompletionRequestTriggered, this);\n      this.prompt.addEventListener(\n          ConsolePromptEvents.AI_CODE_COMPLETION_RESPONSE_RECEIVED, this.#onAiCodeCompletionResponseReceived, this);\n      this.element.addEventListener('keydown', this.keyDown.bind(this));\n    }\n\n    this.messagesElement.addEventListener('keydown', this.messagesKeyDown.bind(this), false);\n    this.prompt.element.addEventListener('focusin', () => {\n      if (this.isScrolledToBottom()) {\n        this.viewport.setStickToBottom(true);\n      }\n    });\n\n    this.consoleHistoryAutocompleteSetting.addChangeListener(this.consoleHistoryAutocompleteChanged, this);\n\n    this.consoleHistoryAutocompleteChanged();\n\n    this.updateFilterStatus();\n    this.timestampsSetting.addChangeListener(this.consoleTimestampsSettingChanged, this);\n\n    this.registerWithMessageSink();\n\n    UI.Context.Context.instance().addFlavorChangeListener(\n        SDK.RuntimeModel.ExecutionContext, this.executionContextChanged, this);\n\n    this.messagesElement.addEventListener(\n        'mousedown', (event: Event) => this.updateStickToBottomOnPointerDown((event as MouseEvent).button === 2),\n        false);\n    this.messagesElement.addEventListener('mouseup', this.updateStickToBottomOnPointerUp.bind(this), false);\n    this.messagesElement.addEventListener('mouseleave', this.updateStickToBottomOnPointerUp.bind(this), false);\n    this.messagesElement.addEventListener('wheel', this.updateStickToBottomOnWheel.bind(this), false);\n    this.messagesElement.addEventListener('touchstart', this.updateStickToBottomOnPointerDown.bind(this, false), false);\n    this.messagesElement.addEventListener('touchend', this.updateStickToBottomOnPointerUp.bind(this), false);\n    this.messagesElement.addEventListener('touchcancel', this.updateStickToBottomOnPointerUp.bind(this), false);\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.ConsoleCleared, this.consoleCleared, this,\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageAdded, this.onConsoleMessageAdded, this,\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageUpdated, this.onConsoleMessageUpdated, this,\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.CommandEvaluated, this.commandEvaluated, this,\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.ConsoleModel.ConsoleModel, this, {scoped: true});\n\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    this.issueToolbarThrottle = new Common.Throttler.Throttler(100);\n    issuesManager.addEventListener(\n        IssuesManager.IssuesManager.Events.ISSUES_COUNT_UPDATED, this.#onIssuesCountUpdateBound);\n  }\n\n  static instance(opts?: {forceNew: boolean, viewportThrottlerTimeout?: number}): ConsoleView {\n    if (!consoleViewInstance || opts?.forceNew) {\n      consoleViewInstance = new ConsoleView(opts?.viewportThrottlerTimeout ?? 50);\n    }\n    return consoleViewInstance;\n  }\n\n  createAiCodeCompletionSummaryToolbar(): void {\n    this.aiCodeCompletionSummaryToolbar = new AiCodeCompletionSummaryToolbar(\n        {citationsTooltipId: CITATIONS_TOOLTIP_ID, disclaimerTooltipId: DISCLAIMER_TOOLTIP_ID});\n    this.aiCodeCompletionSummaryToolbarContainer = this.element.createChild('div');\n    this.aiCodeCompletionSummaryToolbar.show(this.aiCodeCompletionSummaryToolbarContainer, undefined, true);\n  }\n\n  #onAiCodeCompletionSuggestionAccepted(\n      event: Common.EventTarget.EventTargetEvent<AiCodeCompletion.AiCodeCompletion.ResponseReceivedEvent>): void {\n    if (!this.aiCodeCompletionSummaryToolbar || !event.data.citations || event.data.citations.length === 0) {\n      return;\n    }\n    const citations: string[] = [];\n    event.data.citations.forEach(citation => {\n      const uri = citation.uri;\n      if (uri) {\n        citations.push(uri);\n      }\n    });\n    this.aiCodeCompletionSummaryToolbar.updateCitations(citations);\n  }\n\n  #onAiCodeCompletionRequestTriggered(): void {\n    this.aiCodeCompletionSummaryToolbar?.setLoading(true);\n  }\n\n  #onAiCodeCompletionResponseReceived(): void {\n    this.aiCodeCompletionSummaryToolbar?.setLoading(false);\n  }\n\n  static clearConsole(): void {\n    SDK.ConsoleModel.ConsoleModel.requestClearMessages();\n  }\n\n  #onIssuesCountUpdate(): void {\n    void this.issueToolbarThrottle.schedule(async () => this.updateIssuesToolbarItem());\n    this.issuesCountUpdatedForTest();\n  }\n\n  issuesCountUpdatedForTest(): void {\n  }\n\n  modelAdded(model: SDK.ConsoleModel.ConsoleModel): void {\n    model.messages().forEach(this.addConsoleMessage, this);\n  }\n\n  modelRemoved(model: SDK.ConsoleModel.ConsoleModel): void {\n    if (!Common.Settings.Settings.instance().moduleSetting('preserve-console-log').get() &&\n        model.target().outermostTarget() === model.target()) {\n      this.consoleCleared();\n    }\n  }\n\n  private onFilterChanged(): void {\n    this.filter.currentFilter.levelsMask =\n        this.isSidebarOpen ? ConsoleFilter.allLevelsFilterValue() : this.filter.messageLevelFiltersSetting.get();\n    this.cancelBuildHiddenCache();\n    if (this.immediatelyFilterMessagesForTest) {\n      for (const viewMessage of this.consoleMessages) {\n        this.computeShouldMessageBeVisible(viewMessage);\n      }\n      this.updateMessageList();\n      return;\n    }\n    this.buildHiddenCache(0, this.consoleMessages.slice());\n  }\n\n  protected setImmediatelyFilterMessagesForTest(): void {\n    this.immediatelyFilterMessagesForTest = true;\n  }\n\n  searchableView(): UI.SearchableView.SearchableView {\n    return this.searchableViewInternal;\n  }\n\n  clearHistory(): void {\n    this.prompt.history().clear();\n  }\n\n  private consoleHistoryAutocompleteChanged(): void {\n    this.prompt.setAddCompletionsFromHistory(this.consoleHistoryAutocompleteSetting.get());\n  }\n\n  itemCount(): number {\n    return this.visibleViewMessages.length;\n  }\n\n  itemElement(index: number): ConsoleViewportElement|null {\n    return this.visibleViewMessages[index];\n  }\n\n  fastHeight(index: number): number {\n    return this.visibleViewMessages[index].fastHeight();\n  }\n\n  minimumRowHeight(): number {\n    return 16;\n  }\n\n  private registerWithMessageSink(): void {\n    Common.Console.Console.instance().messages().forEach(this.addSinkMessage, this);\n    Common.Console.Console.instance().addEventListener(Common.Console.Events.MESSAGE_ADDED, ({data: message}) => {\n      this.addSinkMessage(message);\n    }, this);\n  }\n\n  private addSinkMessage(message: Common.Console.Message): void {\n    let level: Protocol.Log.LogEntryLevel = Protocol.Log.LogEntryLevel.Verbose;\n    switch (message.level) {\n      case Common.Console.MessageLevel.INFO:\n        level = Protocol.Log.LogEntryLevel.Info;\n        break;\n      case Common.Console.MessageLevel.ERROR:\n        level = Protocol.Log.LogEntryLevel.Error;\n        break;\n      case Common.Console.MessageLevel.WARNING:\n        level = Protocol.Log.LogEntryLevel.Warning;\n        break;\n    }\n\n    const source = message.source || Protocol.Log.LogEntrySource.Other;\n    const consoleMessage = new SDK.ConsoleModel.ConsoleMessage(\n        null, source, level, message.text,\n        {type: SDK.ConsoleModel.FrontendMessageType.System, timestamp: message.timestamp});\n    this.addConsoleMessage(consoleMessage);\n  }\n\n  private consoleTimestampsSettingChanged(): void {\n    this.updateMessageList();\n    this.consoleMessages.forEach(viewMessage => viewMessage.updateTimestamp());\n    this.groupableMessageTitle.forEach(viewMessage => viewMessage.updateTimestamp());\n  }\n\n  private executionContextChanged(): void {\n    this.prompt.clearAutocomplete();\n  }\n\n  override willHide(): void {\n    this.hidePromptSuggestBox();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    if (this.#isDetached) {\n      const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n      issuesManager.addEventListener(\n          IssuesManager.IssuesManager.Events.ISSUES_COUNT_UPDATED, this.#onIssuesCountUpdateBound);\n    }\n    this.#isDetached = false;\n    this.updateIssuesToolbarItem();\n    this.viewport.refresh();\n  }\n\n  override focus(): void {\n    if (this.viewport.hasVirtualSelection()) {\n      (this.viewport.contentElement() as HTMLElement).focus();\n    } else {\n      this.focusPrompt();\n    }\n  }\n\n  focusPrompt(): void {\n    if (!this.prompt.hasFocus()) {\n      const oldStickToBottom = this.viewport.stickToBottom();\n      const oldScrollTop = this.viewport.element.scrollTop;\n      this.prompt.focus();\n      this.viewport.setStickToBottom(oldStickToBottom);\n      this.viewport.element.scrollTop = oldScrollTop;\n    }\n  }\n\n  override restoreScrollPositions(): void {\n    if (this.viewport.stickToBottom()) {\n      this.immediatelyScrollToBottom();\n    } else {\n      super.restoreScrollPositions();\n    }\n  }\n\n  override onResize(): void {\n    this.scheduleViewportRefresh();\n    this.hidePromptSuggestBox();\n    if (this.viewport.stickToBottom()) {\n      this.immediatelyScrollToBottom();\n    }\n    for (let i = 0; i < this.visibleViewMessages.length; ++i) {\n      this.visibleViewMessages[i].onResize();\n    }\n  }\n\n  private hidePromptSuggestBox(): void {\n    this.prompt.clearAutocomplete();\n  }\n\n  private async invalidateViewport(): Promise<void> {\n    this.updateIssuesToolbarItem();\n    if (this.muteViewportUpdates) {\n      this.maybeDirtyWhileMuted = true;\n      return;\n    }\n    if (this.needsFullUpdate) {\n      this.updateMessageList();\n      delete this.needsFullUpdate;\n    } else {\n      this.viewport.invalidate();\n    }\n    return;\n  }\n\n  override onDetach(): void {\n    this.#isDetached = true;\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    issuesManager.removeEventListener(\n        IssuesManager.IssuesManager.Events.ISSUES_COUNT_UPDATED, this.#onIssuesCountUpdateBound);\n  }\n\n  private updateIssuesToolbarItem(): void {\n    if (this.#isDetached) {\n      return;\n    }\n    const manager = IssuesManager.IssuesManager.IssuesManager.instance();\n    const issueEnumeration = IssueCounter.IssueCounter.getIssueCountsEnumeration(manager);\n    const issuesTitleGotoIssues = manager.numberOfIssues() === 0 ?\n        i18nString(UIStrings.issueToolbarClickToGoToTheIssuesTab) :\n        i18nString(UIStrings.issueToolbarClickToView, {issueEnumeration});\n    const issuesTitleGeneral = i18nString(UIStrings.issueToolbarTooltipGeneral);\n    const issuesTitle = `${issuesTitleGeneral} ${issuesTitleGotoIssues}`;\n    UI.Tooltip.Tooltip.install(this.issueCounter, issuesTitle);\n    this.issueCounter.data = {\n      ...this.issueCounter.data,\n      leadingText: i18nString(UIStrings.issuesWithColon, {n: manager.numberOfIssues()}),\n      accessibleName: issuesTitle,\n    };\n  }\n\n  private scheduleViewportRefresh(): void {\n    if (this.muteViewportUpdates) {\n      this.maybeDirtyWhileMuted = true;\n      return;\n    }\n\n    this.scheduledRefreshPromiseForTest = this.viewportThrottler.schedule(this.invalidateViewport.bind(this));\n  }\n\n  getScheduledRefreshPromiseForTest(): Promise<void>|undefined {\n    return this.scheduledRefreshPromiseForTest;\n  }\n\n  private immediatelyScrollToBottom(): void {\n    // This will scroll viewport and trigger its refresh.\n    this.viewport.setStickToBottom(true);\n    this.promptElement.scrollIntoView(true);\n  }\n\n  private updateFilterStatus(): void {\n    if (this.hiddenByFilterCount === this.lastShownHiddenByFilterCount) {\n      return;\n    }\n    this.filterStatusText.setText(i18nString(UIStrings.sHidden, {n: this.hiddenByFilterCount}));\n    this.filterStatusText.setVisible(Boolean(this.hiddenByFilterCount));\n    this.lastShownHiddenByFilterCount = this.hiddenByFilterCount;\n  }\n\n  private onConsoleMessageAdded(event: Common.EventTarget.EventTargetEvent<SDK.ConsoleModel.ConsoleMessage>): void {\n    const message = event.data;\n    this.addConsoleMessage(message);\n  }\n\n  private addConsoleMessage(message: SDK.ConsoleModel.ConsoleMessage): void {\n    const viewMessage = this.createViewMessage(message);\n    consoleMessageToViewMessage.set(message, viewMessage);\n    if (message.type === SDK.ConsoleModel.FrontendMessageType.Command ||\n        message.type === SDK.ConsoleModel.FrontendMessageType.Result) {\n      const lastMessage = this.consoleMessages[this.consoleMessages.length - 1];\n      const newTimestamp = lastMessage && messagesSortedBySymbol.get(lastMessage) || 0;\n      messagesSortedBySymbol.set(viewMessage, newTimestamp);\n    } else {\n      messagesSortedBySymbol.set(viewMessage, viewMessage.consoleMessage().timestamp);\n    }\n\n    let insertAt;\n    if (!this.consoleMessages.length ||\n        timeComparator(viewMessage, this.consoleMessages[this.consoleMessages.length - 1]) > 0) {\n      insertAt = this.consoleMessages.length;\n    } else {\n      insertAt = Platform.ArrayUtilities.upperBound(this.consoleMessages, viewMessage, timeComparator);\n    }\n    const insertedInMiddle = insertAt < this.consoleMessages.length;\n    this.consoleMessages.splice(insertAt, 0, viewMessage);\n\n    if (message.type === SDK.ConsoleModel.FrontendMessageType.Command) {\n      this.prompt.history().pushHistoryItem(message.messageText);\n      if (this.prompt.history().length() >= MIN_HISTORY_LENGTH_FOR_DISABLING_SELF_XSS_WARNING &&\n          !this.selfXssWarningDisabledSetting.get()) {\n        this.selfXssWarningDisabledSetting.set(true);\n      }\n    } else if (message.type !== SDK.ConsoleModel.FrontendMessageType.Result) {\n      // Maintain group tree.\n      // Find parent group.\n      const consoleGroupStartIndex =\n          Platform.ArrayUtilities.upperBound(this.consoleGroupStarts, viewMessage, timeComparator) - 1;\n      if (consoleGroupStartIndex >= 0) {\n        const currentGroup = this.consoleGroupStarts[consoleGroupStartIndex];\n        addToGroup(viewMessage, currentGroup);\n      }\n      // Add new group.\n      if (message.isGroupStartMessage()) {\n        insertAt = Platform.ArrayUtilities.upperBound(this.consoleGroupStarts, viewMessage, timeComparator);\n        this.consoleGroupStarts.splice(insertAt, 0, viewMessage as ConsoleGroupViewMessage);\n      }\n    }\n\n    this.filter.onMessageAdded(message);\n    if (this.isSidebarOpen) {\n      this.sidebar.onMessageAdded(viewMessage);\n    } else {\n      this.pendingSidebarMessages.push(viewMessage);\n    }\n\n    // If we already have similar messages, go slow path.\n    let shouldGoIntoGroup = false;\n    const shouldGroupSimilar = this.groupSimilarSetting.get();\n    if (message.isGroupable()) {\n      const groupKey = viewMessage.groupKey();\n      shouldGoIntoGroup = shouldGroupSimilar && this.groupableMessages.has(groupKey);\n      let list = this.groupableMessages.get(groupKey);\n      if (!list) {\n        list = [];\n        this.groupableMessages.set(groupKey, list);\n      }\n      list.push(viewMessage);\n    }\n\n    this.computeShouldMessageBeVisible(viewMessage);\n    if (!shouldGoIntoGroup && !insertedInMiddle) {\n      this.appendMessageToEnd(\n          viewMessage,\n          !shouldGroupSimilar /* crbug.com/1082963: prevent collapse of same messages when \"Group similar\" is false */);\n      this.updateFilterStatus();\n      this.searchableViewInternal.updateSearchMatchesCount(this.regexMatchRanges.length);\n    } else {\n      this.needsFullUpdate = true;\n    }\n\n    this.scheduleViewportRefresh();\n    this.consoleMessageAddedForTest(viewMessage);\n\n    // Figure out whether the message should belong into this group or the parent group based on group end timestamp.\n    function addToGroup(viewMessage: ConsoleViewMessage, currentGroup: ConsoleGroupViewMessage): void {\n      const currentEnd = currentGroup.groupEnd();\n      if (currentEnd !== null) {\n        // Exceeds this group's end. It should belong into parent group.\n        if (timeComparator(viewMessage, currentEnd) > 0) {\n          const parent = currentGroup.consoleGroup();\n          // No parent group. We reached ungrouped messages. Don't establish group links.\n          if (parent === null) {\n            return;\n          }  // Add to parent group.\n          addToGroup(viewMessage, parent);\n          return;\n        }\n      }\n      // Add message to this group, and set group of the message.\n      if (viewMessage.consoleMessage().type === Protocol.Runtime.ConsoleAPICalledEventType.EndGroup) {\n        currentGroup.setGroupEnd(viewMessage);\n      } else {\n        viewMessage.setConsoleGroup(currentGroup);\n      }\n    }\n\n    function timeComparator(viewMessage1: ConsoleViewMessage, viewMessage2: ConsoleViewMessage): number {\n      return (messagesSortedBySymbol.get(viewMessage1) || 0) - (messagesSortedBySymbol.get(viewMessage2) || 0);\n    }\n  }\n\n  private onConsoleMessageUpdated(event: Common.EventTarget.EventTargetEvent<SDK.ConsoleModel.ConsoleMessage>): void {\n    const message = event.data;\n    const viewMessage = consoleMessageToViewMessage.get(message);\n    if (viewMessage) {\n      viewMessage.updateMessageElement();\n      this.computeShouldMessageBeVisible(viewMessage);\n      this.updateMessageList();\n    }\n  }\n\n  private consoleMessageAddedForTest(_viewMessage: ConsoleViewMessage): void {\n  }\n\n  private shouldMessageBeVisible(viewMessage: ConsoleViewMessage): boolean {\n    return !this.shouldBeHiddenCache.has(viewMessage);\n  }\n\n  private computeShouldMessageBeVisible(viewMessage: ConsoleViewMessage): void {\n    if (this.filter.shouldBeVisible(viewMessage) &&\n        (!this.isSidebarOpen || this.sidebar.shouldBeVisible(viewMessage))) {\n      this.shouldBeHiddenCache.delete(viewMessage);\n    } else {\n      this.shouldBeHiddenCache.add(viewMessage);\n    }\n  }\n\n  private appendMessageToEnd(viewMessage: ConsoleViewMessage, preventCollapse?: boolean): void {\n    if (viewMessage.consoleMessage().category === Protocol.Log.LogEntryCategory.Cors &&\n        !this.showCorsErrorsSetting.get()) {\n      return;\n    }\n\n    const lastMessage = this.visibleViewMessages[this.visibleViewMessages.length - 1];\n    if (viewMessage.consoleMessage().type === Protocol.Runtime.ConsoleAPICalledEventType.EndGroup) {\n      if (lastMessage) {\n        const group = lastMessage.consoleGroup();\n        if (group && !group.messagesHidden()) {\n          lastMessage.incrementCloseGroupDecorationCount();\n        }\n      }\n      return;\n    }\n\n    if (!this.shouldMessageBeVisible(viewMessage)) {\n      this.hiddenByFilterCount++;\n      return;\n    }\n\n    if (!preventCollapse &&\n        this.tryToCollapseMessages(viewMessage, this.visibleViewMessages[this.visibleViewMessages.length - 1])) {\n      return;\n    }\n\n    // Track any adjacent messages.\n    const originatingMessage = viewMessage.consoleMessage().originatingMessage();\n    const adjacent = Boolean(originatingMessage && lastMessage?.consoleMessage() === originatingMessage);\n    viewMessage.setAdjacentUserCommandResult(adjacent);\n\n    // Ensure any parent groups for this message are shown.\n    const currentGroup = viewMessage.consoleGroup();\n    showGroup(currentGroup, this.visibleViewMessages);\n\n    // Determine whether this message should actually be visible.\n    const shouldShowMessage = !currentGroup?.messagesHidden();\n    if (shouldShowMessage) {\n      this.visibleViewMessages.push(viewMessage);\n      this.searchMessage(this.visibleViewMessages.length - 1);\n    }\n\n    this.messageAppendedForTests();\n\n    // Show the group the message belongs to, and also show parent groups.\n    function showGroup(currentGroup: ConsoleGroupViewMessage|null, visibleViewMessages: ConsoleViewMessage[]): void {\n      if (currentGroup === null) {\n        return;\n      }\n      // Group is already being shown, no need to traverse to\n      // parent groups since they are also already being shown.\n      if (visibleViewMessages.includes(currentGroup)) {\n        return;\n      }\n      const parentGroup = currentGroup.consoleGroup();\n      if (parentGroup) {\n        showGroup(parentGroup, visibleViewMessages);\n      }\n      visibleViewMessages.push(currentGroup);\n    }\n  }\n\n  private messageAppendedForTests(): void {\n    // This method is sniffed in tests.\n  }\n\n  private createViewMessage(message: SDK.ConsoleModel.ConsoleMessage): ConsoleViewMessage {\n    switch (message.type) {\n      case SDK.ConsoleModel.FrontendMessageType.Command:\n        return new ConsoleCommand(\n            message, this.linkifier, this.requestResolver, this.issueResolver, this.onMessageResizedBound);\n      case SDK.ConsoleModel.FrontendMessageType.Result:\n        return new ConsoleCommandResult(\n            message, this.linkifier, this.requestResolver, this.issueResolver, this.onMessageResizedBound);\n      case Protocol.Runtime.ConsoleAPICalledEventType.StartGroupCollapsed:\n      case Protocol.Runtime.ConsoleAPICalledEventType.StartGroup:\n        return new ConsoleGroupViewMessage(\n            message, this.linkifier, this.requestResolver, this.issueResolver, this.updateMessageList.bind(this),\n            this.onMessageResizedBound);\n      case Protocol.Runtime.ConsoleAPICalledEventType.Table:\n        return new ConsoleTableMessageView(\n            message, this.linkifier, this.requestResolver, this.issueResolver, this.onMessageResizedBound);\n      default:\n        return new ConsoleViewMessage(\n            message, this.linkifier, this.requestResolver, this.issueResolver, this.onMessageResizedBound);\n    }\n  }\n\n  private async onMessageResized(event: Common.EventTarget.EventTargetEvent<HTMLElement|UI.TreeOutline.TreeElement>):\n      Promise<void> {\n    const treeElement = event.data instanceof UI.TreeOutline.TreeElement ? event.data.treeOutline?.element : event.data;\n    if (this.pendingBatchResize || !treeElement) {\n      return;\n    }\n    this.pendingBatchResize = true;\n    await Promise.resolve();\n    this.viewport.setStickToBottom(this.isScrolledToBottom());\n    // Scroll, in case mutations moved the element below the visible area.\n    if (treeElement.offsetHeight <= this.messagesElement.offsetHeight) {\n      treeElement.scrollIntoViewIfNeeded();\n    }\n\n    this.pendingBatchResize = false;\n  }\n\n  private consoleCleared(): void {\n    const hadFocus = this.viewport.element.hasFocus();\n    this.cancelBuildHiddenCache();\n    this.currentMatchRangeIndex = -1;\n    this.consoleMessages = [];\n    this.groupableMessages.clear();\n    this.groupableMessageTitle.clear();\n    this.sidebar.clear();\n    this.pendingSidebarMessages = [];\n    this.updateMessageList();\n    this.hidePromptSuggestBox();\n    this.viewport.setStickToBottom(true);\n    this.linkifier.reset();\n    this.filter.clear();\n    this.requestResolver.clear();\n    this.consoleGroupStarts = [];\n    this.aiCodeCompletionSummaryToolbar?.clearCitations();\n    if (hadFocus) {\n      this.prompt.focus();\n    }\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.consoleCleared));\n  }\n\n  private handleContextMenuEvent(event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const eventTarget = (event.target as Node);\n    if (eventTarget.isSelfOrDescendant(this.promptElement)) {\n      void contextMenu.show();\n      return;\n    }\n\n    const sourceElement = eventTarget.enclosingNodeOrSelfWithClass('console-message-wrapper');\n    const consoleViewMessage = sourceElement && getMessageForElement(sourceElement);\n    const consoleMessage = consoleViewMessage ? consoleViewMessage.consoleMessage() : null;\n\n    if (consoleViewMessage) {\n      UI.Context.Context.instance().setFlavor(ConsoleViewMessage, consoleViewMessage);\n    }\n\n    if (consoleMessage && !consoleViewMessage?.element()?.matches('.has-insight') &&\n        consoleViewMessage?.shouldShowInsights()) {\n      contextMenu.headerSection().appendAction(\n          consoleViewMessage?.getExplainActionId(), undefined, /* optional=*/ true);\n    }\n\n    if (consoleMessage?.url) {\n      const menuTitle = i18nString(\n          UIStrings.hideMessagesFromS, {PH1: new Common.ParsedURL.ParsedURL(consoleMessage.url).displayName});\n      contextMenu.headerSection().appendItem(\n          menuTitle, this.filter.addMessageURLFilter.bind(this.filter, consoleMessage.url),\n          {jslogContext: 'hide-messages-from'});\n    }\n\n    contextMenu.defaultSection().appendAction('console.clear');\n    contextMenu.defaultSection().appendAction('console.clear.history');\n    contextMenu.saveSection().appendItem(\n        i18nString(UIStrings.copyConsole), this.copyConsole.bind(this), {jslogContext: 'copy-console'});\n    contextMenu.saveSection().appendItem(\n        i18nString(UIStrings.saveAs), this.saveConsole.bind(this), {jslogContext: 'save-as'});\n    if (this.element.hasSelection()) {\n      contextMenu.clipboardSection().appendItem(\n          i18nString(UIStrings.copyVisibleStyledSelection), this.viewport.copyWithStyles.bind(this.viewport),\n          {jslogContext: 'copy-visible-styled-selection'});\n    }\n\n    if (consoleMessage) {\n      const request = Logs.NetworkLog.NetworkLog.requestForConsoleMessage(consoleMessage);\n      if (request && SDK.NetworkManager.NetworkManager.canReplayRequest(request)) {\n        contextMenu.debugSection().appendItem(\n            i18nString(UIStrings.replayXhr), SDK.NetworkManager.NetworkManager.replayRequest.bind(null, request),\n            {jslogContext: 'replay-xhr'});\n      }\n    }\n\n    void contextMenu.show();\n  }\n\n  private async saveConsole(): Promise<void> {\n    const url = (SDK.TargetManager.TargetManager.instance().scopeTarget() as SDK.Target.Target).inspectedURL();\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(url);\n    const filename =\n        Platform.StringUtilities.sprintf('%s-%d.log', parsedURL ? parsedURL.host : 'console', Date.now()) as\n        Platform.DevToolsPath.RawPathString;\n    const stream = new Bindings.FileUtils.FileOutputStream();\n\n    const progressIndicator = document.createElement('devtools-progress');\n    progressIndicator.setTitle(i18nString(UIStrings.writingFile));\n    progressIndicator.setTotalWork(this.itemCount());\n\n    const chunkSize = 350;\n\n    if (!await stream.open(filename)) {\n      return;\n    }\n    this.progressToolbarItem.element.appendChild(progressIndicator);\n\n    let messageIndex = 0;\n    while (messageIndex < this.itemCount() && !progressIndicator.isCanceled()) {\n      const messageContents = [];\n      let i;\n      for (i = 0; i < chunkSize && i + messageIndex < this.itemCount(); ++i) {\n        const message = (this.itemElement(messageIndex + i) as ConsoleViewMessage);\n        messageContents.push(message.toExportString());\n      }\n      messageIndex += i;\n      await stream.write(messageContents.join('\\n') + '\\n');\n      progressIndicator.setWorked(messageIndex);\n    }\n\n    void stream.close();\n    progressIndicator.done();\n  }\n\n  private async copyConsole(): Promise<void> {\n    const messageContents: string[] = [];\n    for (let i = 0; i < this.itemCount(); i++) {\n      const message = (this.itemElement(i) as ConsoleViewMessage);\n      messageContents.push(message.toExportString());\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(messageContents.join('\\n') + '\\n');\n  }\n\n  private tryToCollapseMessages(viewMessage: ConsoleViewMessage, lastMessage?: ConsoleViewMessage): boolean {\n    const timestampsShown = this.timestampsSetting.get();\n    if (!timestampsShown && lastMessage && !viewMessage.consoleMessage().isGroupMessage() &&\n        viewMessage.consoleMessage().type !== SDK.ConsoleModel.FrontendMessageType.Command &&\n        viewMessage.consoleMessage().type !== SDK.ConsoleModel.FrontendMessageType.Result &&\n        viewMessage.consoleMessage().isEqual(lastMessage.consoleMessage())) {\n      lastMessage.incrementRepeatCount();\n      if (viewMessage.isLastInSimilarGroup()) {\n        lastMessage.setInSimilarGroup(true, true);\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  private buildHiddenCache(startIndex: number, viewMessages: ConsoleViewMessage[]): void {\n    const startTime = Date.now();\n    let i;\n    for (i = startIndex; i < viewMessages.length; ++i) {\n      this.computeShouldMessageBeVisible(viewMessages[i]);\n      if (i % 10 === 0 && Date.now() - startTime > 12) {\n        break;\n      }\n    }\n\n    if (i === viewMessages.length) {\n      this.updateMessageList();\n      return;\n    }\n    this.buildHiddenCacheTimeout =\n        this.element.window().requestAnimationFrame(this.buildHiddenCache.bind(this, i + 1, viewMessages));\n  }\n\n  private cancelBuildHiddenCache(): void {\n    this.shouldBeHiddenCache.clear();\n    if (this.buildHiddenCacheTimeout) {\n      this.element.window().cancelAnimationFrame(this.buildHiddenCacheTimeout);\n      delete this.buildHiddenCacheTimeout;\n    }\n  }\n\n  private updateMessageList(): void {\n    this.regexMatchRanges = [];\n    this.hiddenByFilterCount = 0;\n    for (const visibleViewMessage of this.visibleViewMessages) {\n      visibleViewMessage.resetCloseGroupDecorationCount();\n      visibleViewMessage.resetIncrementRepeatCount();\n    }\n    this.visibleViewMessages = [];\n    if (this.groupSimilarSetting.get()) {\n      this.addGroupableMessagesToEnd();\n    } else {\n      for (const consoleMessage of this.consoleMessages) {\n        consoleMessage.setInSimilarGroup(false);\n        if (consoleMessage.consoleMessage().isGroupable()) {\n          // Since grouping similar messages is disabled, we need clear the\n          // reference to the artificial console group start.\n          consoleMessage.clearConsoleGroup();\n        }\n        this.appendMessageToEnd(\n            consoleMessage,\n            true /* crbug.com/1082963: prevent collaps`e of same messages when \"Group similar\" is false */);\n      }\n    }\n    this.updateFilterStatus();\n    this.searchableViewInternal.updateSearchMatchesCount(this.regexMatchRanges.length);\n    this.jumpToMatch(this.currentMatchRangeIndex);  // Re-highlight current match.\n    this.viewport.invalidate();\n    this.messagesCountElement.setAttribute(\n        'aria-label', i18nString(UIStrings.filteredMessagesInConsole, {PH1: this.visibleViewMessages.length}));\n  }\n\n  private addGroupableMessagesToEnd(): void {\n    const alreadyAdded = new Set<SDK.ConsoleModel.ConsoleMessage>();\n    const processedGroupKeys = new Set<string>();\n    for (const viewMessage of this.consoleMessages) {\n      const message = viewMessage.consoleMessage();\n      if (alreadyAdded.has(message)) {\n        continue;\n      }\n\n      if (!message.isGroupable()) {\n        this.appendMessageToEnd(viewMessage);\n        alreadyAdded.add(message);\n        continue;\n      }\n\n      const key = viewMessage.groupKey();\n      const viewMessagesInGroup = this.groupableMessages.get(key);\n      if (!viewMessagesInGroup || viewMessagesInGroup.length < 5) {\n        viewMessage.setInSimilarGroup(false);\n        this.appendMessageToEnd(viewMessage);\n        alreadyAdded.add(message);\n        continue;\n      }\n\n      if (processedGroupKeys.has(key)) {\n        continue;\n      }\n\n      if (!viewMessagesInGroup.find(x => this.shouldMessageBeVisible(x))) {\n        // Optimize for speed.\n        for (const viewMessageInGroup of viewMessagesInGroup) {\n          alreadyAdded.add(viewMessageInGroup.consoleMessage());\n        }\n        processedGroupKeys.add(key);\n        continue;\n      }\n\n      // Create artificial group start and end messages.\n      let startGroupViewMessage = this.groupableMessageTitle.get(key);\n      if (!startGroupViewMessage) {\n        const startGroupMessage = new SDK.ConsoleModel.ConsoleMessage(\n            null, message.source, message.level, viewMessage.groupTitle(),\n            {type: Protocol.Runtime.ConsoleAPICalledEventType.StartGroupCollapsed});\n        startGroupViewMessage = this.createViewMessage(startGroupMessage);\n        this.groupableMessageTitle.set(key, startGroupViewMessage);\n      }\n      startGroupViewMessage.setRepeatCount(viewMessagesInGroup.length);\n      this.appendMessageToEnd(startGroupViewMessage);\n\n      for (const viewMessageInGroup of viewMessagesInGroup) {\n        viewMessageInGroup.setInSimilarGroup(\n            true, viewMessagesInGroup[viewMessagesInGroup.length - 1] === viewMessageInGroup);\n        viewMessageInGroup.setConsoleGroup(startGroupViewMessage as ConsoleGroupViewMessage);\n        this.appendMessageToEnd(viewMessageInGroup, true);\n        alreadyAdded.add(viewMessageInGroup.consoleMessage());\n      }\n\n      const endGroupMessage = new SDK.ConsoleModel.ConsoleMessage(\n          null, message.source, message.level, message.messageText,\n          {type: Protocol.Runtime.ConsoleAPICalledEventType.EndGroup});\n      this.appendMessageToEnd(this.createViewMessage(endGroupMessage));\n    }\n  }\n\n  private messagesClicked(event: Event): void {\n    const target = (event.target as Node | null);\n    // Do not focus prompt if messages have selection.\n    if (!this.messagesElement.hasSelection()) {\n      const clickedOutsideMessageList =\n          target === this.messagesElement || this.prompt.belowEditorElement().isSelfOrAncestor(target);\n      if (clickedOutsideMessageList) {\n        this.prompt.moveCaretToEndOfPrompt();\n        this.focusPrompt();\n      }\n    }\n  }\n\n  private messagesKeyDown(event: Event): void {\n    const keyEvent = (event as KeyboardEvent);\n    const hasActionModifier = keyEvent.ctrlKey || keyEvent.altKey || keyEvent.metaKey;\n    if (hasActionModifier || keyEvent.key.length !== 1 || UI.UIUtils.isEditing() ||\n        this.messagesElement.hasSelection()) {\n      return;\n    }\n    this.prompt.moveCaretToEndOfPrompt();\n    this.focusPrompt();\n  }\n\n  private messagesPasted(event: Event): void {\n    if (!Root.Runtime.Runtime.queryParam('isChromeForTesting') &&\n        !Root.Runtime.Runtime.queryParam('disableSelfXssWarnings') && !this.selfXssWarningDisabledSetting.get()) {\n      event.preventDefault();\n      this.prompt.showSelfXssWarning();\n    }\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n    this.prompt.focus();\n  }\n\n  private registerShortcuts(): void {\n    this.shortcuts.set(\n        UI.KeyboardShortcut.KeyboardShortcut.makeKey('u', UI.KeyboardShortcut.Modifiers.Ctrl.value),\n        this.clearPromptBackwards.bind(this));\n  }\n\n  private clearPromptBackwards(e: KeyboardEvent): void {\n    this.prompt.clear();\n    void VisualLogging.logKeyDown(e.currentTarget, e, 'clear-prompt');\n  }\n\n  private promptKeyDown(event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    if (keyboardEvent.key === 'PageUp') {\n      this.updateStickToBottomOnWheel();\n      return;\n    }\n\n    const shortcut = UI.KeyboardShortcut.KeyboardShortcut.makeKeyFromEvent(keyboardEvent);\n    const handler = this.shortcuts.get(shortcut);\n    if (handler) {\n      handler(keyboardEvent);\n      keyboardEvent.preventDefault();\n    }\n  }\n\n  private async keyDown(event: Event): Promise<void> {\n    const keyboardEvent = (event as KeyboardEvent);\n    if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(keyboardEvent)) {\n      if (keyboardEvent.key === 'i') {\n        keyboardEvent.consume(true);\n        await this.prompt.onAiCodeCompletionTeaserActionKeyDown(event);\n      } else if (keyboardEvent.key === 'x') {\n        keyboardEvent.consume(true);\n        this.prompt.onAiCodeCompletionTeaserDismissKeyDown(event);\n      }\n    }\n  }\n\n  private printResult(\n      result: SDK.RemoteObject.RemoteObject|null, originatingConsoleMessage: SDK.ConsoleModel.ConsoleMessage,\n      exceptionDetails?: Protocol.Runtime.ExceptionDetails): void {\n    if (!result) {\n      return;\n    }\n\n    const level = Boolean(exceptionDetails) ? Protocol.Log.LogEntryLevel.Error : Protocol.Log.LogEntryLevel.Info;\n    let message;\n    if (!exceptionDetails) {\n      message = new SDK.ConsoleModel.ConsoleMessage(\n          result.runtimeModel(), Protocol.Log.LogEntrySource.Javascript, level, '',\n          {type: SDK.ConsoleModel.FrontendMessageType.Result, parameters: [result]});\n    } else {\n      message = SDK.ConsoleModel.ConsoleMessage.fromException(\n          result.runtimeModel(), exceptionDetails, SDK.ConsoleModel.FrontendMessageType.Result, undefined, undefined);\n    }\n    message.setOriginatingMessage(originatingConsoleMessage);\n    result.runtimeModel().target().model(SDK.ConsoleModel.ConsoleModel)?.addMessage(message);\n  }\n\n  private commandEvaluated(event: Common.EventTarget.EventTargetEvent<SDK.ConsoleModel.CommandEvaluatedEvent>): void {\n    const {data} = event;\n    this.printResult(data.result, data.commandMessage, data.exceptionDetails);\n  }\n\n  override elementsToRestoreScrollPositionsFor(): Element[] {\n    return [this.messagesElement];\n  }\n\n  onSearchCanceled(): void {\n    this.cleanupAfterSearch();\n    for (const message of this.visibleViewMessages) {\n      message.setSearchRegex(null);\n    }\n    this.currentMatchRangeIndex = -1;\n    this.regexMatchRanges = [];\n    this.searchRegex = null;\n    this.viewport.refresh();\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void {\n    this.onSearchCanceled();\n    this.searchableViewInternal.updateSearchMatchesCount(0);\n\n    this.searchRegex = searchConfig.toSearchRegex(true).regex;\n\n    this.regexMatchRanges = [];\n    this.currentMatchRangeIndex = -1;\n\n    if (shouldJump) {\n      this.searchShouldJumpBackwards = Boolean(jumpBackwards);\n    }\n\n    this.searchProgressIndicator = document.createElement('devtools-progress');\n    this.searchProgressIndicator.setTitle(i18nString(UIStrings.searching));\n    this.searchProgressIndicator.setTotalWork(this.visibleViewMessages.length);\n    this.progressToolbarItem.element.appendChild(this.searchProgressIndicator);\n\n    this.innerSearch(0);\n  }\n\n  private cleanupAfterSearch(): void {\n    delete this.searchShouldJumpBackwards;\n    if (this.innerSearchTimeoutId) {\n      clearTimeout(this.innerSearchTimeoutId);\n      delete this.innerSearchTimeoutId;\n    }\n    if (this.searchProgressIndicator) {\n      this.searchProgressIndicator.done();\n      delete this.searchProgressIndicator;\n    }\n  }\n\n  private searchFinishedForTests(): void {\n    // This method is sniffed in tests.\n  }\n\n  private innerSearch(index: number): void {\n    delete this.innerSearchTimeoutId;\n    if (this.searchProgressIndicator?.isCanceled()) {\n      this.cleanupAfterSearch();\n      return;\n    }\n\n    const startTime = Date.now();\n    for (; index < this.visibleViewMessages.length && Date.now() - startTime < 100; ++index) {\n      this.searchMessage(index);\n    }\n\n    this.searchableViewInternal.updateSearchMatchesCount(this.regexMatchRanges.length);\n    if (typeof this.searchShouldJumpBackwards !== 'undefined' && this.regexMatchRanges.length) {\n      this.jumpToMatch(this.searchShouldJumpBackwards ? -1 : 0);\n      delete this.searchShouldJumpBackwards;\n    }\n\n    if (index === this.visibleViewMessages.length) {\n      this.cleanupAfterSearch();\n      window.setTimeout(this.searchFinishedForTests.bind(this), 0);\n      return;\n    }\n\n    this.innerSearchTimeoutId = window.setTimeout(this.innerSearch.bind(this, index), 100);\n    if (this.searchProgressIndicator) {\n      this.searchProgressIndicator.setWorked(index);\n    }\n  }\n\n  private searchMessage(index: number): void {\n    const message = this.visibleViewMessages[index];\n    message.setSearchRegex(this.searchRegex);\n    for (let i = 0; i < message.searchCount(); ++i) {\n      this.regexMatchRanges.push({messageIndex: index, matchIndex: i});\n    }\n  }\n\n  jumpToNextSearchResult(): void {\n    this.jumpToMatch(this.currentMatchRangeIndex + 1);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    this.jumpToMatch(this.currentMatchRangeIndex - 1);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return true;\n  }\n\n  private jumpToMatch(index: number): void {\n    if (!this.regexMatchRanges.length) {\n      return;\n    }\n\n    let matchRange;\n    if (this.currentMatchRangeIndex >= 0) {\n      matchRange = this.regexMatchRanges[this.currentMatchRangeIndex];\n      const message = this.visibleViewMessages[matchRange.messageIndex];\n      message.searchHighlightNode(matchRange.matchIndex)\n          .classList.remove(UI.UIUtils.highlightedCurrentSearchResultClassName);\n    }\n\n    index = Platform.NumberUtilities.mod(index, this.regexMatchRanges.length);\n    this.currentMatchRangeIndex = index;\n    this.searchableViewInternal.updateCurrentMatchIndex(index);\n    matchRange = this.regexMatchRanges[index];\n    const message = this.visibleViewMessages[matchRange.messageIndex];\n    const highlightNode = message.searchHighlightNode(matchRange.matchIndex);\n    highlightNode.classList.add(UI.UIUtils.highlightedCurrentSearchResultClassName);\n    this.viewport.scrollItemIntoView(matchRange.messageIndex);\n    highlightNode.scrollIntoViewIfNeeded();\n  }\n\n  private updateStickToBottomOnPointerDown(isRightClick?: boolean): void {\n    this.muteViewportUpdates = !isRightClick;\n    this.viewport.setStickToBottom(false);\n    if (this.waitForScrollTimeout) {\n      clearTimeout(this.waitForScrollTimeout);\n      delete this.waitForScrollTimeout;\n    }\n  }\n\n  private updateStickToBottomOnPointerUp(): void {\n    if (!this.muteViewportUpdates) {\n      return;\n    }\n\n    // Delay querying isScrolledToBottom to give time for smooth scroll\n    // events to arrive. The value for the longest timeout duration is\n    // retrieved from crbug.com/575409.\n    this.waitForScrollTimeout = window.setTimeout(updateViewportState.bind(this), 200);\n\n    function updateViewportState(this: ConsoleView): void {\n      this.muteViewportUpdates = false;\n      if (this.isShowing()) {\n        this.viewport.setStickToBottom(this.isScrolledToBottom());\n      }\n      if (this.maybeDirtyWhileMuted) {\n        this.scheduleViewportRefresh();\n        delete this.maybeDirtyWhileMuted;\n      }\n      delete this.waitForScrollTimeout;\n      this.updateViewportStickinessForTest();\n    }\n  }\n\n  private updateViewportStickinessForTest(): void {\n    // This method is sniffed in tests.\n  }\n\n  private updateStickToBottomOnWheel(): void {\n    this.updateStickToBottomOnPointerDown();\n    this.updateStickToBottomOnPointerUp();\n  }\n\n  private promptTextChanged(): void {\n    const oldStickToBottom = this.viewport.stickToBottom();\n    const willStickToBottom = this.isScrolledToBottom();\n    this.viewport.setStickToBottom(willStickToBottom);\n    if (willStickToBottom && !oldStickToBottom) {\n      this.scheduleViewportRefresh();\n    }\n    this.promptTextChangedForTest();\n  }\n\n  private promptTextChangedForTest(): void {\n    // This method is sniffed in tests.\n  }\n\n  private isScrolledToBottom(): boolean {\n    const distanceToPromptEditorBottom = this.messagesElement.scrollHeight - this.messagesElement.scrollTop -\n        this.messagesElement.clientHeight - (this.prompt.belowEditorElement() as HTMLElement).offsetHeight;\n    return distanceToPromptEditorBottom <= 2;\n  }\n\n  private onAiCodeCompletionSettingChanged(): void {\n    if (this.aiCodeCompletionSetting.get() && this.isAiCodeCompletionEnabled()) {\n      this.createAiCodeCompletionSummaryToolbar();\n    } else if (this.aiCodeCompletionSummaryToolbarContainer) {\n      this.aiCodeCompletionSummaryToolbarContainer.remove();\n      this.aiCodeCompletionSummaryToolbarContainer = undefined;\n      this.aiCodeCompletionSummaryToolbar = undefined;\n    }\n  }\n\n  private isAiCodeCompletionEnabled(): boolean {\n    return Boolean(Root.Runtime.hostConfig.devToolsAiCodeCompletion?.enabled);\n  }\n}\n\n// @ts-expect-error exported for Tests.js\nglobalThis.Console = globalThis.Console || {};\n// @ts-expect-error exported for Tests.js\nglobalThis.Console.ConsoleView = ConsoleView;\n\nexport class ConsoleViewFilter {\n  private readonly filterChanged: () => void;\n  messageLevelFiltersSetting: Common.Settings.Setting<LevelsMask>;\n  hideNetworkMessagesSetting: Common.Settings.Setting<boolean>;\n  filterByExecutionContextSetting: Common.Settings.Setting<boolean>;\n  private readonly suggestionBuilder: UI.FilterSuggestionBuilder.FilterSuggestionBuilder;\n  readonly textFilterUI: UI.Toolbar.ToolbarInput;\n  private readonly textFilterSetting: Common.Settings.Setting<string>;\n  private readonly filterParser: TextUtils.TextUtils.FilterParser;\n  currentFilter: ConsoleFilter;\n  private levelLabels: Map<Protocol.Log.LogEntryLevel, string>;\n  readonly levelMenuButton: UI.Toolbar.ToolbarMenuButton;\n  readonly levelMenuButtonInfo: UI.Toolbar.ToolbarItem;\n\n  constructor(filterChangedCallback: () => void) {\n    this.filterChanged = filterChangedCallback;\n\n    this.messageLevelFiltersSetting = ConsoleViewFilter.levelFilterSetting();\n    this.hideNetworkMessagesSetting = Common.Settings.Settings.instance().moduleSetting('hide-network-messages');\n    this.filterByExecutionContextSetting =\n        Common.Settings.Settings.instance().moduleSetting('selected-context-filter-enabled');\n\n    this.messageLevelFiltersSetting.addChangeListener(this.onFilterChanged.bind(this));\n    this.hideNetworkMessagesSetting.addChangeListener(this.onFilterChanged.bind(this));\n    this.filterByExecutionContextSetting.addChangeListener(this.onFilterChanged.bind(this));\n    UI.Context.Context.instance().addFlavorChangeListener(\n        SDK.RuntimeModel.ExecutionContext, this.onFilterChanged, this);\n\n    const filterKeys = Object.values(FilterType);\n    this.suggestionBuilder = new UI.FilterSuggestionBuilder.FilterSuggestionBuilder(filterKeys);\n    this.textFilterUI = new UI.Toolbar.ToolbarFilter(\n        undefined, 1, 1, i18nString(UIStrings.egEventdCdnUrlacom),\n        this.suggestionBuilder.completions.bind(this.suggestionBuilder), true);\n    this.textFilterSetting = Common.Settings.Settings.instance().createSetting('console.text-filter', '');\n    if (this.textFilterSetting.get()) {\n      this.textFilterUI.setValue(this.textFilterSetting.get());\n    }\n    this.textFilterUI.addEventListener(UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED, () => {\n      this.textFilterSetting.set(this.textFilterUI.value());\n      this.onFilterChanged();\n    });\n    this.filterParser = new TextUtils.TextUtils.FilterParser(filterKeys);\n    this.currentFilter = new ConsoleFilter('', [], null, this.messageLevelFiltersSetting.get());\n    this.updateCurrentFilter();\n    this.levelLabels = new Map(([\n      [Protocol.Log.LogEntryLevel.Verbose, i18nString(UIStrings.verbose)],\n      [Protocol.Log.LogEntryLevel.Info, i18nString(UIStrings.info)],\n      [Protocol.Log.LogEntryLevel.Warning, i18nString(UIStrings.warnings)],\n      [Protocol.Log.LogEntryLevel.Error, i18nString(UIStrings.errors)],\n    ]));\n\n    this.levelMenuButton =\n        new UI.Toolbar.ToolbarMenuButton(this.appendLevelMenuItems.bind(this), undefined, undefined, 'log-level');\n    const levelMenuButtonInfoIcon = IconButton.Icon.create('info', 'console-sidebar-levels-info');\n    levelMenuButtonInfoIcon.title = i18nString(UIStrings.overriddenByFilterSidebar);\n    this.levelMenuButtonInfo = new UI.Toolbar.ToolbarItem(levelMenuButtonInfoIcon);\n    this.levelMenuButtonInfo.setVisible(false);\n\n    this.updateLevelMenuButtonText();\n    this.messageLevelFiltersSetting.addChangeListener(this.updateLevelMenuButtonText.bind(this));\n  }\n\n  onMessageAdded(message: SDK.ConsoleModel.ConsoleMessage): void {\n    if (message.type === SDK.ConsoleModel.FrontendMessageType.Command ||\n        message.type === SDK.ConsoleModel.FrontendMessageType.Result || message.isGroupMessage()) {\n      return;\n    }\n    if (message.context) {\n      this.suggestionBuilder.addItem(FilterType.Context, message.context);\n    }\n    if (message.source) {\n      this.suggestionBuilder.addItem(FilterType.Source, message.source);\n    }\n    if (message.url) {\n      this.suggestionBuilder.addItem(FilterType.Url, message.url);\n    }\n  }\n\n  setLevelMenuOverridden(overridden: boolean): void {\n    this.levelMenuButton.setEnabled(!overridden);\n    this.levelMenuButtonInfo.setVisible(overridden);\n    if (overridden) {\n      this.levelMenuButton.setText(i18nString(UIStrings.customLevels));\n    } else {\n      this.updateLevelMenuButtonText();\n    }\n  }\n\n  static levelFilterSetting(): Common.Settings.Setting<LevelsMask> {\n    return Common.Settings.Settings.instance().createSetting(\n        'message-level-filters', ConsoleFilter.defaultLevelsFilterValue());\n  }\n\n  private updateCurrentFilter(): void {\n    const parsedFilters = this.filterParser.parse(this.textFilterUI.value());\n    for (const {key} of parsedFilters) {\n      switch (key) {\n        case FilterType.Context:\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.ConsoleFilterByContext);\n          break;\n        case FilterType.Source:\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.ConsoleFilterBySource);\n          break;\n        case FilterType.Url:\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.ConsoleFilterByUrl);\n          break;\n      }\n    }\n    if (this.hideNetworkMessagesSetting.get()) {\n      parsedFilters.push(\n          {key: FilterType.Source, text: Protocol.Log.LogEntrySource.Network, negative: true, regex: undefined});\n    }\n\n    this.currentFilter.executionContext = this.filterByExecutionContextSetting.get() ?\n        UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext) :\n        null;\n    this.currentFilter.parsedFilters = parsedFilters;\n    this.currentFilter.levelsMask = this.messageLevelFiltersSetting.get();\n  }\n\n  private onFilterChanged(): void {\n    this.updateCurrentFilter();\n    this.filterChanged();\n  }\n\n  private updateLevelMenuButtonText(): void {\n    let isAll = true;\n    let isDefault = true;\n    const allValue = ConsoleFilter.allLevelsFilterValue();\n    const defaultValue = ConsoleFilter.defaultLevelsFilterValue();\n\n    let text: Common.UIString.LocalizedString|null = null;\n    const levels = this.messageLevelFiltersSetting.get();\n    const allLevels: Protocol.EnumerableEnum<typeof Protocol.Log.LogEntryLevel> = {\n      Verbose: Protocol.Log.LogEntryLevel.Verbose,\n      Info: Protocol.Log.LogEntryLevel.Info,\n      Warning: Protocol.Log.LogEntryLevel.Warning,\n      Error: Protocol.Log.LogEntryLevel.Error,\n    };\n    for (const name of Object.values(allLevels)) {\n      isAll = isAll && levels[name] === allValue[name];\n      isDefault = isDefault && levels[name] === defaultValue[name];\n      if (levels[name]) {\n        text = text ? i18nString(UIStrings.customLevels) :\n                      i18nString(UIStrings.sOnly, {PH1: String(this.levelLabels.get(name))});\n      }\n    }\n    if (isAll) {\n      text = i18nString(UIStrings.allLevels);\n    } else if (isDefault) {\n      text = i18nString(UIStrings.defaultLevels);\n    } else {\n      text = text || i18nString(UIStrings.hideAll);\n    }\n    this.levelMenuButton.element.classList.toggle('warning', !isAll && !isDefault);\n    this.levelMenuButton.setText(text);\n    this.levelMenuButton.setTitle(i18nString(UIStrings.logLevelS, {PH1: text}));\n  }\n\n  private appendLevelMenuItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    const setting = this.messageLevelFiltersSetting;\n    const levels = setting.get();\n\n    contextMenu.headerSection().appendItem(\n        i18nString(UIStrings.default), () => setting.set(ConsoleFilter.defaultLevelsFilterValue()),\n        {jslogContext: 'default'});\n    for (const [level, levelText] of this.levelLabels.entries()) {\n      contextMenu.defaultSection().appendCheckboxItem(\n          levelText, toggleShowLevel.bind(null, level), {checked: levels[level], jslogContext: level});\n    }\n\n    function toggleShowLevel(level: string): void {\n      levels[level] = !levels[level];\n      setting.set(levels);\n    }\n  }\n\n  addMessageURLFilter(url: Platform.DevToolsPath.UrlString): void {\n    if (!url) {\n      return;\n    }\n    const suffix = this.textFilterUI.value() ? ` ${this.textFilterUI.value()}` : '';\n    this.textFilterUI.setValue(`-url:${url}${suffix}`);\n    this.textFilterSetting.set(this.textFilterUI.value());\n    this.onFilterChanged();\n  }\n\n  shouldBeVisible(viewMessage: ConsoleViewMessage): boolean {\n    return this.currentFilter.shouldBeVisible(viewMessage);\n  }\n\n  clear(): void {\n    this.suggestionBuilder.clear();\n  }\n\n  reset(): void {\n    this.messageLevelFiltersSetting.set(ConsoleFilter.defaultLevelsFilterValue());\n    this.filterByExecutionContextSetting.set(false);\n    this.hideNetworkMessagesSetting.set(false);\n    this.textFilterUI.setValue('');\n    this.onFilterChanged();\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'console.toggle':\n        if (ConsoleView.instance().hasFocus() && UI.InspectorView.InspectorView.instance().drawerVisible()) {\n          UI.InspectorView.InspectorView.instance().closeDrawer();\n          return true;\n        }\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n        Common.Console.Console.instance().show();\n        ConsoleView.instance().focusPrompt();\n        return true;\n      case 'console.clear':\n        ConsoleView.clearConsole();\n        return true;\n      case 'console.clear.history':\n        ConsoleView.instance().clearHistory();\n        return true;\n      case 'console.create-pin':\n        ConsoleView.instance().pinPane.addPin('', true /* userGesture */);\n        return true;\n    }\n    return false;\n  }\n}\n\nconst messagesSortedBySymbol = new WeakMap<ConsoleViewMessage, number>();\nconst consoleMessageToViewMessage = new WeakMap<SDK.ConsoleModel.ConsoleMessage, ConsoleViewMessage>();\nexport interface RegexMatchRange {\n  messageIndex: number;\n  matchIndex: number;\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2018 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n#console-prompt .CodeMirror {\n  padding: 3px 0 1px;\n}\n\n#console-prompt .CodeMirror-line {\n  padding-top: 0;\n}\n\n#console-prompt .CodeMirror-lines {\n  padding-top: 0;\n}\n\n#console-prompt .console-prompt-icon {\n  position: absolute;\n  left: -13px;\n  top: 2px;\n  user-select: none;\n}\n\n.console-eager-preview {\n  padding-bottom: 2px;\n  opacity: 60%;\n  position: relative;\n}\n\n.console-eager-inner-preview {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  margin-left: 4px;\n  height: 100%;\n  white-space: nowrap;\n}\n\n.preview-result-icon {\n  position: absolute;\n  left: -13px;\n  top: -1px;\n}\n\n.console-eager-inner-preview:empty,\n.console-eager-inner-preview:empty + .preview-result-icon {\n  opacity: 0%;\n}\n\n.console-prompt-icon.console-prompt-incomplete {\n  opacity: 65%;\n}\n\n/*# sourceURL=${import.meta.resolve('./consolePrompt.css')} */`;"],
  "mappings": "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",
  "names": ["item", "SDK", "FilterType", "Common", "Common", "i18n", "SDK", "UI", "UIStrings", "str_", "i18nString", "Common", "i18n", "SDK", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "Platform", "Components", "UI", "Common", "i18n", "Platform", "Root", "SDK", "TextUtils", "Buttons", "ObjectUI", "UI", "VisualLogging", "Common", "UIStrings", "str_", "i18nString", "property", "object", "action", "tokenizerRegexes", "tokenizerTypes", "item", "selection", "Common", "Host", "i18n", "Root", "SDK", "CodeMirror", "IconButton", "TextEditor", "ObjectUI", "UI", "VisualLogging", "UI", "VisualLogging", "Common", "Host", "i18n", "Platform", "Root", "SDK", "Bindings", "Logs", "TextUtils", "CodeHighlighter", "IconButton", "IssueCounter", "Components", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "toolbar", "viewMessage", "currentGroup", "message", "UIStrings", "str_", "i18nString", "keymap"]
}
