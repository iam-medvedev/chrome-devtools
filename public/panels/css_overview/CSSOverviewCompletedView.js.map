{"version":3,"file":"CSSOverviewCompletedView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/css_overview/CSSOverviewCompletedView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/components/data_grid/data_grid.js';\nimport '../../ui/components/icon_button/icon_button.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives, html, nothing, render, type TemplateResult} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport cssOverviewCompletedViewStyles from './cssOverviewCompletedView.css.js';\nimport type {GlobalStyleStats} from './CSSOverviewModel.js';\nimport {CSSOverviewSidebarPanel} from './CSSOverviewSidebarPanel.js';\nimport type {UnusedDeclaration} from './CSSOverviewUnusedDeclarations.js';\n\nconst {styleMap, ref} = Directives;\nconst {widgetConfig} = UI.Widget;\n\nconst UIStrings = {\n  /**\n   * @description Label for the summary in the CSS overview report\n   */\n  overviewSummary: 'Overview summary',\n  /**\n   * @description Title of colors subsection in the CSS overview panel\n   */\n  colors: 'Colors',\n  /**\n   * @description Title of font info subsection in the CSS overview panel\n   */\n  fontInfo: 'Font info',\n  /**\n   * @description Label to denote unused declarations in the target page\n   */\n  unusedDeclarations: 'Unused declarations',\n  /**\n   * @description Label for the number of media queries in the CSS overview report\n   */\n  mediaQueries: 'Media queries',\n  /**\n   * @description Title of the Elements Panel\n   */\n  elements: 'Elements',\n  /**\n   * @description Label for the number of External stylesheets in the CSS overview report\n   */\n  externalStylesheets: 'External stylesheets',\n  /**\n   * @description Label for the number of inline style elements in the CSS overview report\n   */\n  inlineStyleElements: 'Inline style elements',\n  /**\n   * @description Label for the number of style rules in CSS overview report\n   */\n  styleRules: 'Style rules',\n  /**\n   * @description Label for the number of type selectors in the CSS overview report\n   */\n  typeSelectors: 'Type selectors',\n  /**\n   * @description Label for the number of ID selectors in the CSS overview report\n   */\n  idSelectors: 'ID selectors',\n  /**\n   * @description Label for the number of class selectors in the CSS overview report\n   */\n  classSelectors: 'Class selectors',\n  /**\n   * @description Label for the number of universal selectors in the CSS overview report\n   */\n  universalSelectors: 'Universal selectors',\n  /**\n   * @description Label for the number of Attribute selectors in the CSS overview report\n   */\n  attributeSelectors: 'Attribute selectors',\n  /**\n   * @description Label for the number of non-simple selectors in the CSS overview report\n   */\n  nonsimpleSelectors: 'Non-simple selectors',\n  /**\n   * @description Label for unique background colors in the CSS overview panel\n   * @example {32} PH1\n   */\n  backgroundColorsS: 'Background colors: {PH1}',\n  /**\n   * @description Label for unique text colors in the CSS overview panel\n   * @example {32} PH1\n   */\n  textColorsS: 'Text colors: {PH1}',\n  /**\n   * @description Label for unique fill colors in the CSS overview panel\n   * @example {32} PH1\n   */\n  fillColorsS: 'Fill colors: {PH1}',\n  /**\n   * @description Label for unique border colors in the CSS overview panel\n   * @example {32} PH1\n   */\n  borderColorsS: 'Border colors: {PH1}',\n  /**\n   * @description Label to indicate that there are no fonts in use\n   */\n  thereAreNoFonts: 'There are no fonts.',\n  /**\n   * @description Message to show when no unused declarations in the target page\n   */\n  thereAreNoUnusedDeclarations: 'There are no unused declarations.',\n  /**\n   * @description Message to show when no media queries are found in the target page\n   */\n  thereAreNoMediaQueries: 'There are no media queries.',\n  /**\n   * @description Title of the Drawer for contrast issues in the CSS overview panel\n   */\n  contrastIssues: 'Contrast issues',\n  /**\n   * @description Text to indicate how many times this CSS rule showed up.\n   */\n  nOccurrences: '{n, plural, =1 {# occurrence} other {# occurrences}}',\n  /**\n   * @description Section header for contrast issues in the CSS overview panel\n   * @example {1} PH1\n   */\n  contrastIssuesS: 'Contrast issues: {PH1}',\n  /**\n   * @description Title of the button for a contrast issue in the CSS overview panel\n   * @example {#333333} PH1\n   * @example {#333333} PH2\n   * @example {2} PH3\n   */\n  textColorSOverSBackgroundResults: 'Text color {PH1} over {PH2} background results in low contrast for {PH3} elements',\n  /**\n   * @description Label aa text content in Contrast Details of the Color Picker\n   */\n  aa: 'AA',\n  /**\n   * @description Label aaa text content in Contrast Details of the Color Picker\n   */\n  aaa: 'AAA',\n  /**\n   * @description Label for the APCA contrast in Color Picker\n   */\n  apca: 'APCA',\n  /**\n   * @description Label for the column in the element list in the CSS overview report\n   */\n  element: 'Element',\n  /**\n   * @description Column header title denoting which declaration is unused\n   */\n  declaration: 'Declaration',\n  /**\n   * @description Text for the source of something\n   */\n  source: 'Source',\n  /**\n   * @description Text of a DOM element in Contrast Details of the Color Picker\n   */\n  contrastRatio: 'Contrast ratio',\n  /**\n   * @description Accessible title of a table in the CSS overview elements.\n   */\n  cssOverviewElements: 'CSS overview elements',\n  /**\n   * @description Title of the button to show the element in the CSS overview panel\n   */\n  showElement: 'Show element',\n  /**\n   * @description Text to show in a table if the link to the style could not be created.\n   */\n  unableToLink: '(unable to link)',\n  /**\n   * @description Text to show in a table if the link to the inline style could not be created.\n   */\n  unableToLinkToInlineStyle: '(unable to link to inline style)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewCompletedView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type NodeStyleStats = Map<string, Set<number>>;\n\nexport interface ContrastIssue {\n  nodeId: Protocol.DOM.BackendNodeId;\n  contrastRatio: number;\n  textColor: Common.Color.Color;\n  backgroundColor: Common.Color.Color;\n  thresholdsViolated: {\n    aa: boolean,\n    aaa: boolean,\n    apca: boolean,\n  };\n}\nexport interface OverviewData {\n  backgroundColors: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  textColors: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  textColorContrastIssues: Map<string, ContrastIssue[]>;\n  fillColors: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  borderColors: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  globalStyleStats: {\n    styleRules: number,\n    inlineStyles: number,\n    externalSheets: number,\n    stats: {type: number, class: number, id: number, universal: number, attribute: number, nonSimple: number},\n  };\n  fontInfo: Map<string, Map<string, Map<string, Protocol.DOM.BackendNodeId[]>>>;\n  elementCount: number;\n  mediaQueries: Map<string, Protocol.CSS.CSSMedia[]>;\n  unusedDeclarations: Map<string, UnusedDeclaration[]>;\n}\n\nexport type FontInfo = Map<string, Map<string, Map<string, number[]>>>;\ninterface FontMetric {\n  label: string;\n  values: Array<{title: string, nodes: number[]}>;\n}\n\nfunction getBorderString(color: Common.Color.Color): string {\n  let {h, s, l} = color.as(Common.Color.Format.HSL);\n  h = Math.round(h * 360);\n  s = Math.round(s * 100);\n  l = Math.round(l * 100);\n\n  // Reduce the lightness of the border to make sure that there's always a visible outline.\n  l = Math.max(0, l - 15);\n\n  return `1px solid hsl(${h}deg ${s}% ${l}%)`;\n}\n\ninterface ViewInput {\n  elementCount: number;\n  backgroundColors: string[];\n  textColors: string[];\n  textColorContrastIssues: Map<string, ContrastIssue[]>;\n  fillColors: string[];\n  borderColors: string[];\n  globalStyleStats: GlobalStyleStats;\n  mediaQueries: Array<{title: string, nodes: Protocol.CSS.CSSMedia[]}>;\n  unusedDeclarations: Array<{title: string, nodes: UnusedDeclaration[]}>;\n  fontInfo: Array<{font: string, fontMetrics: FontMetric[]}>;\n  selectedSection: string;\n  onClick: (evt: Event) => void;\n  onSectionSelected: (section: string, withKeyboard: boolean) => void;\n  onReset: () => void;\n}\n\ninterface ViewOutput {\n  revealSection: Map<string, (setFocus: boolean) => void>;\n  closeAllTabs: () => void;\n  addTab: (id: string, tabTitle: string, view: UI.Widget.Widget, jslogContext: string) => void;\n}\n\nconst formatter = new Intl.NumberFormat('en-US');\n\ntype View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, output, target) => {\n  function revealSection(section: Element|undefined, setFocus: boolean): void {\n    if (!section) {\n      return;\n    }\n    section.scrollIntoView();\n    // Set focus for keyboard invoked event\n    if (setFocus) {\n      const focusableElement: HTMLElement|null = section.querySelector('button, [tabindex=\"0\"]');\n      focusableElement?.focus();\n    }\n  }\n\n  // clang-format off\n  render(html`\n      <style>${cssOverviewCompletedViewStyles}</style>\n      <devtools-split-view direction=\"column\" sidebar-position=\"first\" sidebar-initial-size=\"200\">\n        <devtools-widget slot=\"sidebar\" .widgetConfig=${widgetConfig(CSSOverviewSidebarPanel, {\n          minimumSize: new UI.Geometry.Size(100, 25),\n          items: [\n            {name: i18nString(UIStrings.overviewSummary), id: 'summary'},\n            {name: i18nString(UIStrings.colors), id: 'colors'},\n            {name: i18nString(UIStrings.fontInfo), id: 'font-info'},\n            {name: i18nString(UIStrings.unusedDeclarations), id: 'unused-declarations'},\n            {name: i18nString(UIStrings.mediaQueries), id: 'media-queries'}\n          ],\n          selectedId: input.selectedSection,\n          onItemSelected: input.onSectionSelected,\n          onReset: input.onReset,\n        })}>\n        </devtools-widget>\n        <devtools-split-view sidebar-position=\"second\" slot=\"main\" direction=\"row\" sidebar-initial-size=\"minimized\">\n          <div class=\"vbox overview-completed-view\" slot=\"main\" @click=${input.onClick}>\n            <!-- Dupe the styles into the main container because of the shadow root will prevent outer styles. -->\n            <style>${cssOverviewCompletedViewStyles}</style>\n            <div class=\"results-section horizontally-padded summary\"\n                  ${ref(e => { output.revealSection.set('summary', revealSection.bind(null, e));})}>\n              <h1>${i18nString(UIStrings.overviewSummary)}</h1>\n              ${renderSummary(input.elementCount, input.globalStyleStats, input.mediaQueries)}\n            </div>\n            <div class=\"results-section horizontally-padded colors\"\n                ${ref(e => { output.revealSection.set('colors', revealSection.bind(null, e));})}>\n                <h1>${i18nString(UIStrings.colors)}</h1>\n                ${renderColors(input.backgroundColors, input.textColors, input.textColorContrastIssues, input.fillColors, input.borderColors)}\n              </div>\n              <div class=\"results-section font-info\"\n                    ${ref(e => { output.revealSection.set('font-info', revealSection.bind(null, e));})}>\n                <h1>${i18nString(UIStrings.fontInfo)}</h1>\n                ${renderFontInfo(input.fontInfo)}\n              </div>\n              <div class=\"results-section unused-declarations\"\n                    ${ref(e => { output.revealSection.set('unused-declarations', revealSection.bind(null, e));})}>\n                <h1>${i18nString(UIStrings.unusedDeclarations)}</h1>\n                ${renderUnusedDeclarations(input.unusedDeclarations)}\n              </div>\n              <div class=\"results-section media-queries\"\n                    ${ref(e => { output.revealSection.set('media-queries', revealSection.bind(null, e));})}>\n              <h1>${i18nString(UIStrings.mediaQueries)}</h1>\n              ${renderMediaQueries(input.mediaQueries)}\n            </div>\n          </div>\n          <devtools-widget slot=\"sidebar\" .widgetConfig=${widgetConfig(e => {\n              const tabbedPane = new UI.TabbedPane.TabbedPane(e);\n              output.closeAllTabs = () => { tabbedPane.closeTabs(tabbedPane.tabIds()); };\n              output.addTab = (id: string, tabTitle: string, view: UI.Widget.Widget, jslogContext: string) => {\n                if (!tabbedPane.hasTab(id)) {\n                  tabbedPane.appendTab(id, tabTitle, view, undefined, undefined,\n                                        /* isCloseable */ true, undefined, undefined, jslogContext);\n                }\n                tabbedPane.selectTab(id);\n                const splitView = tabbedPane.parentWidget() as UI.SplitWidget.SplitWidget;\n                splitView.setSidebarMinimized(false);\n              };\n              tabbedPane.addEventListener(UI.TabbedPane.Events.TabClosed, _ => {\n                if (tabbedPane.tabIds().length === 0) {\n                  const splitView = tabbedPane.parentWidget() as UI.SplitWidget.SplitWidget;\n                  splitView.setSidebarMinimized(true);\n                }\n              });\n              return tabbedPane;\n            })}>\n          </devtools-widget>\n        </devtools-split-view>\n      </devtools-split-view>`,\n      target);\n  // clang-format on\n};\n\nfunction renderSummary(\n    elementCount: number, globalStyleStats: GlobalStyleStats,\n    mediaQueries: Array<{title: string, nodes: Protocol.CSS.CSSMedia[]}>): TemplateResult {\n  const renderSummaryItem = (label: string, value: number): TemplateResult => html`\n    <li>\n      <div class=\"label\">${label}</div>\n      <div class=\"value\">${formatter.format(value)}</div>\n    </li>`;\n  return html`<ul>\n    ${renderSummaryItem(i18nString(UIStrings.elements), elementCount)}\n    ${renderSummaryItem(i18nString(UIStrings.externalStylesheets), globalStyleStats.externalSheets)}\n    ${renderSummaryItem(i18nString(UIStrings.inlineStyleElements), globalStyleStats.inlineStyles)}\n    ${renderSummaryItem(i18nString(UIStrings.styleRules), globalStyleStats.styleRules)}\n    ${renderSummaryItem(i18nString(UIStrings.mediaQueries), mediaQueries.length)}\n    ${renderSummaryItem(i18nString(UIStrings.typeSelectors), globalStyleStats.stats.type)}\n    ${renderSummaryItem(i18nString(UIStrings.idSelectors), globalStyleStats.stats.id)}\n    ${renderSummaryItem(i18nString(UIStrings.classSelectors), globalStyleStats.stats.class)}\n    ${renderSummaryItem(i18nString(UIStrings.universalSelectors), globalStyleStats.stats.universal)}\n    ${renderSummaryItem(i18nString(UIStrings.attributeSelectors), globalStyleStats.stats.attribute)}\n    ${renderSummaryItem(i18nString(UIStrings.nonsimpleSelectors), globalStyleStats.stats.nonSimple)}\n  </ul>`;\n}\n\nfunction renderColors(\n    backgroundColors: string[], textColors: string[], textColorContrastIssues: Map<string, ContrastIssue[]>,\n    fillColors: string[], borderColors: string[]): TemplateResult {\n  // clang-format off\n  return html`\n    <h2>${i18nString(UIStrings.backgroundColorsS, {PH1: backgroundColors.length})}</h2>\n    <ul>${backgroundColors.map(c => renderColor('background', c))}</ul>\n\n    <h2>${i18nString(UIStrings.textColorsS, {PH1: textColors.length})}</h2>\n    <ul>${textColors.map(c => renderColor('text', c))}</ul>\n\n    ${textColorContrastIssues.size > 0 ? renderContrastIssues(textColorContrastIssues) : ''}\n\n    <h2>${i18nString(UIStrings.fillColorsS, {PH1: fillColors.length})}</h2>\n    <ul>${fillColors.map(c => renderColor('fill', c))}</ul>\n\n    <h2>${i18nString(UIStrings.borderColorsS, {PH1: borderColors.length})}</h2>\n    <ul>${borderColors.map(c => renderColor('border', c))}</ul>`;\n  // clang-format on\n}\n\nfunction renderUnusedDeclarations(unusedDeclarations: Array<{title: string, nodes: UnusedDeclaration[]}>):\n    TemplateResult {\n  return unusedDeclarations.length > 0 ?\n      renderGroup(unusedDeclarations, 'unused-declarations') :\n      html`<div class=\"horizontally-padded\">${i18nString(UIStrings.thereAreNoUnusedDeclarations)}</div>`;\n}\n\nfunction renderMediaQueries(mediaQueries: Array<{title: string, nodes: Protocol.CSS.CSSMedia[]}>): TemplateResult {\n  return mediaQueries.length > 0 ?\n      renderGroup(mediaQueries, 'media-queries') :\n      html`<div class=\"horizontally-padded\">${i18nString(UIStrings.thereAreNoMediaQueries)}</div>`;\n}\n\nfunction renderFontInfo(fonts: Array<{font: string, fontMetrics: FontMetric[]}>): TemplateResult {\n  return fonts.length > 0 ? html`${fonts.map(({font, fontMetrics}) => html`\n    <section class=\"font-family\">\n      <h2>${font}</h2>\n      ${renderFontMetrics(font, fontMetrics)}\n    </section>`)}` :\n                            html`<div>${i18nString(UIStrings.thereAreNoFonts)}</div>`;\n}\n\nfunction renderFontMetrics(font: string, fontMetricInfo: FontMetric[]): TemplateResult {\n  return html`\n    <div class=\"font-metric\">\n      ${fontMetricInfo.map(({label, values}) => html`\n        <div>\n          <h3>${label}</h3>\n          ${renderGroup(values, 'font-info', `${font}/${label}`)}\n        </div>`)}\n    </div>`;\n}\n\nfunction renderGroup(\n    values: Array<{title: string, nodes: Array<number|UnusedDeclaration|Protocol.CSS.CSSMedia>}>, type: string,\n    path = ''): TemplateResult {\n  const total = values.reduce((prev, curr) => prev + curr.nodes.length, 0);\n\n  // clang-format off\n  return html`\n      <ul aria-label=${type}>\n        ${values.map(({title, nodes}) => {\n          const width = 100 * nodes.length / total;\n          const itemLabel = i18nString(UIStrings.nOccurrences, {n: nodes.length});\n\n          return html`<li>\n            <div class=\"title\">${title}</div>\n            <button data-type=${type} data-path=${path} data-label=${title}\n            jslog=${VisualLogging.action().track({click: true}).context(`css-overview.${type}`)}\n            aria-label=${`${title}: ${itemLabel}`}>\n              <div class=\"details\">${itemLabel}</div>\n              <div class=\"bar-container\">\n                <div class=\"bar\" style=${styleMap({width})}></div>\n              </div>\n            </button>\n          </li>`;\n        })}\n  </ul>`;\n  // clang-format on\n}\n\nfunction renderContrastIssues(issues: Map<string, ContrastIssue[]>): TemplateResult {\n  // clang-format off\n  return html`\n    <h2>${i18nString(UIStrings.contrastIssuesS, {PH1: issues.size})}</h2>\n    <ul>\n      ${[...issues.entries()].map(([key, value]) => renderContrastIssue(key, value))}\n    </ul>`;\n  // clang-format on\n}\n\nfunction renderContrastIssue(key: string, issues: ContrastIssue[]): TemplateResult {\n  console.assert(issues.length > 0);\n\n  let minContrastIssue: ContrastIssue = issues[0];\n  for (const issue of issues) {\n    // APCA contrast can be a negative value that is to be displayed. But the\n    // absolute value is used to compare against the threshold. Therefore, the min\n    // absolute value is the worst contrast.\n    if (Math.abs(issue.contrastRatio) < Math.abs(minContrastIssue.contrastRatio)) {\n      minContrastIssue = issue;\n    }\n  }\n\n  const color = (minContrastIssue.textColor.asString(Common.Color.Format.HEXA));\n  const backgroundColor = (minContrastIssue.backgroundColor.asString(Common.Color.Format.HEXA));\n\n  const showAPCA = Root.Runtime.experiments.isEnabled('apca');\n\n  const title = i18nString(UIStrings.textColorSOverSBackgroundResults, {\n    PH1: color,\n    PH2: backgroundColor,\n    PH3: issues.length,\n  });\n  const border = getBorderString(minContrastIssue.backgroundColor.asLegacyColor());\n\n  // clang-format off\n  return html`<li>\n    <button\n      title=${title} aria-label=${title}\n      data-type=\"contrast\" data-key=${key} data-section=\"contrast\" class=\"block\"\n      style=${styleMap({color, backgroundColor, border})}\n      jslog=${VisualLogging.action('css-overview.contrast').track({click: true})}>\n      Text\n    </button>\n    <div class=\"block-title\">\n      ${showAPCA ? html`\n        <div class=\"contrast-warning hidden\" $=\"apca\">\n          <span class=\"threshold-label\">${i18nString(UIStrings.apca)}</span>\n          ${minContrastIssue.thresholdsViolated.apca ? createClearIcon() : createCheckIcon()}\n        </div>` : html`\n        <div class=\"contrast-warning hidden\">\n          <span class=\"threshold-label\">${i18nString(UIStrings.aa)}</span>\n          ${minContrastIssue.thresholdsViolated.aa ? createClearIcon() : createCheckIcon()}\n        </div>\n        <div class=\"contrast-warning hidden\" $=\"aaa\">\n          <span class=\"threshold-label\">${i18nString(UIStrings.aaa)}</span>\n          ${minContrastIssue.thresholdsViolated.aaa ? createClearIcon() : createCheckIcon()}\n        </div>`}\n    </div>\n  </li>`;\n  // clang-format on\n}\n\nfunction renderColor(section: string, color: string): TemplateResult {\n  const borderColor = Common.Color.parse(color)?.asLegacyColor();\n  if (!borderColor) {\n    return html``;\n  }\n  // clang-format off\n  return html`<li>\n    <button title=${color} data-type=\"color\" data-color=${color}\n      data-section=${section} class=\"block\"\n      style=${styleMap({backgroundColor: color, border: getBorderString(borderColor)})}\n      jslog=${VisualLogging.action('css-overview.color').track({click: true})}>\n    </button>\n    <div class=\"block-title color-text\">${color}</div>\n  </li>`;\n  // clang-format on\n}\n\ntype PopulateNodesEvent = {\n  type: 'contrast',\n  key: string,\n  section: string|undefined,\n  nodes: ContrastIssue[],\n}|{\n  type: 'color',\n  color: string,\n  section: string | undefined,\n  nodes: Array<{nodeId: Protocol.DOM.BackendNodeId}>,\n}|{\n  type: 'unused-declarations',\n  declaration: string,\n  nodes: UnusedDeclaration[],\n}|{\n  type: 'media-queries',\n  text: string,\n  nodes: Protocol.CSS.CSSMedia[],\n}|{\n  type: 'font-info',\n  name: string,\n  nodes: Array<{nodeId: Protocol.DOM.BackendNodeId}>,\n};\n\nexport type PopulateNodesEventNodes = PopulateNodesEvent['nodes'];\nexport type PopulateNodesEventNodeTypes = PopulateNodesEventNodes[0];\n\nexport class CSSOverviewCompletedView extends UI.Widget.VBox {\n  onReset = (): void => {};\n  #selectedSection = 'summary';\n  #cssModel?: SDK.CSSModel.CSSModel;\n  #domModel?: SDK.DOMModel.DOMModel;\n  #linkifier: Components.Linkifier.Linkifier;\n  #viewMap: Map<string, ElementDetailsView>;\n  #data: OverviewData|null;\n  #view: View;\n  #viewOutput: ViewOutput = {\n    revealSection: new Map(),\n    closeAllTabs: () => {},\n    addTab: (_id, _tabTitle, _view, _jslogContext) => {}\n  };\n\n  constructor(element?: HTMLElement, view = DEFAULT_VIEW) {\n    super(element);\n    this.#view = view;\n    this.registerRequiredCSS(cssOverviewCompletedViewStyles);\n    this.#linkifier = new Components.Linkifier.Linkifier(/* maxLinkLength */ 20, /* useLinkDecorator */ true);\n    this.#viewMap = new Map();\n    this.#data = null;\n  }\n\n  set target(target: SDK.Target.Target|undefined) {\n    if (!target) {\n      return;\n    }\n    const cssModel = target.model(SDK.CSSModel.CSSModel);\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    if (!cssModel || !domModel) {\n      throw new Error('Target must provide CSS and DOM models');\n    }\n    this.#cssModel = cssModel;\n    this.#domModel = domModel;\n  }\n\n  #onSectionSelected(sectionId: string, withKeyboard: boolean): void {\n    const revealSection = this.#viewOutput.revealSection.get(sectionId);\n    if (!revealSection) {\n      return;\n    }\n\n    revealSection(withKeyboard);\n  }\n\n  #onReset(): void {\n    this.#reset();\n    this.onReset();\n  }\n\n  #reset(): void {\n    this.#viewOutput.closeAllTabs();\n    this.#viewMap = new Map();\n    CSSOverviewCompletedView.pushedNodes.clear();\n    this.#selectedSection = 'summary';\n    this.requestUpdate();\n  }\n\n  #onClick(evt: Event): void {\n    if (!evt.target) {\n      return;\n    }\n    const target = (evt.target as HTMLElement);\n    const dataset = target.dataset;\n\n    const type = dataset.type;\n    if (!type || !this.#data) {\n      return;\n    }\n\n    let payload: PopulateNodesEvent;\n    switch (type) {\n      case 'contrast': {\n        const section = dataset.section;\n        const key = dataset.key;\n\n        if (!key) {\n          return;\n        }\n\n        // Remap the Set to an object that is the same shape as the unused declarations.\n        const nodes = this.#data.textColorContrastIssues.get(key) || [];\n        payload = {type, key, nodes, section};\n        break;\n      }\n      case 'color': {\n        const color = dataset.color;\n        const section = dataset.section;\n        if (!color) {\n          return;\n        }\n\n        let nodes;\n        switch (section) {\n          case 'text':\n            nodes = this.#data.textColors.get(color);\n            break;\n\n          case 'background':\n            nodes = this.#data.backgroundColors.get(color);\n            break;\n\n          case 'fill':\n            nodes = this.#data.fillColors.get(color);\n            break;\n\n          case 'border':\n            nodes = this.#data.borderColors.get(color);\n            break;\n        }\n\n        if (!nodes) {\n          return;\n        }\n\n        // Remap the Set to an object that is the same shape as the unused declarations.\n        nodes = Array.from(nodes).map(nodeId => ({nodeId}));\n        payload = {type, color, nodes, section};\n        break;\n      }\n\n      case 'unused-declarations': {\n        const declaration = dataset.label;\n        if (!declaration) {\n          return;\n        }\n        const nodes = this.#data.unusedDeclarations.get(declaration);\n        if (!nodes) {\n          return;\n        }\n\n        payload = {type, declaration, nodes};\n        break;\n      }\n\n      case 'media-queries': {\n        const text = dataset.label;\n        if (!text) {\n          return;\n        }\n        const nodes = this.#data.mediaQueries.get(text);\n        if (!nodes) {\n          return;\n        }\n\n        payload = {type, text, nodes};\n        break;\n      }\n\n      case 'font-info': {\n        const value = dataset.label;\n        if (!dataset.path) {\n          return;\n        }\n\n        const [fontFamily, fontMetric] = dataset.path.split('/');\n        if (!value) {\n          return;\n        }\n\n        const fontFamilyInfo = this.#data.fontInfo.get(fontFamily);\n        if (!fontFamilyInfo) {\n          return;\n        }\n\n        const fontMetricInfo = fontFamilyInfo.get(fontMetric);\n        if (!fontMetricInfo) {\n          return;\n        }\n\n        const nodesIds = fontMetricInfo.get(value);\n        if (!nodesIds) {\n          return;\n        }\n\n        const nodes = nodesIds.map(nodeId => ({nodeId}));\n        const name = `${value} (${fontFamily}, ${fontMetric})`;\n        payload = {type, name, nodes};\n        break;\n      }\n\n      default:\n        return;\n    }\n\n    evt.consume();\n    this.#createElementsView(payload);\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    if (!this.#data || !('backgroundColors' in this.#data) || !('textColors' in this.#data)) {\n      return;\n    }\n\n    const viewInput = {\n      elementCount: this.#data.elementCount,\n      backgroundColors: this.#sortColorsByLuminance(this.#data.backgroundColors),\n      textColors: this.#sortColorsByLuminance(this.#data.textColors),\n      textColorContrastIssues: this.#data.textColorContrastIssues,\n      fillColors: this.#sortColorsByLuminance(this.#data.fillColors),\n      borderColors: this.#sortColorsByLuminance(this.#data.borderColors),\n      globalStyleStats: this.#data.globalStyleStats,\n      mediaQueries: this.#sortGroupBySize(this.#data.mediaQueries),\n      unusedDeclarations: this.#sortGroupBySize(this.#data.unusedDeclarations),\n      fontInfo: this.#sortFontInfo(this.#data.fontInfo),\n      selectedSection: this.#selectedSection,\n      onClick: this.#onClick.bind(this),\n      onSectionSelected: this.#onSectionSelected.bind(this),\n      onReset: this.#onReset.bind(this),\n    };\n    this.#view(viewInput, this.#viewOutput, this.element);\n  }\n\n  #createElementsView(payload: PopulateNodesEvent): void {\n    let id = '';\n    let tabTitle = '';\n\n    switch (payload.type) {\n      case 'contrast': {\n        const {section, key} = payload;\n        id = `${section}-${key}`;\n        tabTitle = i18nString(UIStrings.contrastIssues);\n        break;\n      }\n\n      case 'color': {\n        const {section, color} = payload;\n        id = `${section}-${color}`;\n        tabTitle = `${color.toUpperCase()} (${section})`;\n        break;\n      }\n\n      case 'unused-declarations': {\n        const {declaration} = payload;\n        id = `${declaration}`;\n        tabTitle = `${declaration}`;\n        break;\n      }\n\n      case 'media-queries': {\n        const {text} = payload;\n        id = `${text}`;\n        tabTitle = `${text}`;\n        break;\n      }\n\n      case 'font-info': {\n        const {name} = payload;\n        id = `${name}`;\n        tabTitle = `${name}`;\n        break;\n      }\n    }\n\n    let view = this.#viewMap.get(id);\n    if (!view) {\n      if (!this.#domModel || !this.#cssModel) {\n        throw new Error('Unable to initialize CSS overview, missing models');\n      }\n      view = new ElementDetailsView(this.#domModel, this.#cssModel, this.#linkifier);\n      view.data = payload.nodes;\n      this.#viewMap.set(id, view);\n    }\n\n    this.#viewOutput.addTab(id, tabTitle, view, payload.type);\n  }\n\n  #sortColorsByLuminance(srcColors: Map<string, Set<number>>): string[] {\n    return Array.from(srcColors.keys()).sort((colA, colB) => {\n      const colorA = Common.Color.parse(colA)?.asLegacyColor();\n      const colorB = Common.Color.parse(colB)?.asLegacyColor();\n      if (!colorA || !colorB) {\n        return 0;\n      }\n      return Common.ColorUtils.luminance(colorB.rgba()) - Common.ColorUtils.luminance(colorA.rgba());\n    });\n  }\n\n  #sortFontInfo(fontInfo: Map<string, Map<string, Map<string, number[]>>>):\n      Array<{font: string, fontMetrics: FontMetric[]}> {\n    const fonts = Array.from(fontInfo.entries());\n    return fonts.map(([font, fontMetrics]) => {\n      const fontMetricInfo = Array.from(fontMetrics.entries());\n      return {\n        font,\n        fontMetrics: fontMetricInfo.map(([label, values]) => {\n          return {label, values: this.#sortGroupBySize(values)};\n        })\n      };\n    });\n  }\n\n  #sortGroupBySize<T extends number|UnusedDeclaration|Protocol.CSS.CSSMedia>(items: Map<string, T[]>):\n      Array<{title: string, nodes: T[]}> {\n    // Sort by number of items descending.\n    return Array.from(items.entries())\n        .sort((d1, d2) => {\n          const v1Nodes = d1[1];\n          const v2Nodes = d2[1];\n          return v2Nodes.length - v1Nodes.length;\n        })\n        .map(([title, nodes]) => ({title, nodes}));\n  }\n\n  set overviewData(data: OverviewData) {\n    this.#data = data;\n    this.requestUpdate();\n  }\n\n  static readonly pushedNodes = new Set<Protocol.DOM.BackendNodeId>();\n}\n\ninterface ElementDetailsViewInput {\n  items: Array<{\n    data: PopulateNodesEventNodeTypes,\n    link?: HTMLElement,\n    showNode?: () => void,\n  }>;\n  visibility: Set<string>;\n}\ntype ElementDetailsViewFunction = (input: ElementDetailsViewInput, output: object, target: HTMLElement) => void;\n\nexport const ELEMENT_DETAILS_DEFAULT_VIEW: ElementDetailsViewFunction = (input, _output, target) => {\n  const {items, visibility} = input;\n  // clang-format off\n  render(html`\n    <div>\n      <devtools-data-grid class=\"element-grid\" striped inline\n         name=${i18nString(UIStrings.cssOverviewElements)}>\n        <table>\n          <tr>\n            ${visibility.has('node-id') ? html`\n              <th id=\"node-id\" weight=\"50\" sortable>\n                ${i18nString(UIStrings.element)}\n              </th>` : nothing}\n            ${visibility.has('declaration') ? html`\n              <th id=\"declaration\" weight=\"50\" sortable>\n                ${i18nString(UIStrings.declaration)}\n              </th>` : nothing}\n            ${visibility.has('source-url') ? html`\n              <th id=\"source-url\" weight=\"100\">\n                ${i18nString(UIStrings.source)}\n              </th>` : nothing}\n            ${visibility.has('contrast-ratio') ? html`\n              <th id=\"contrast-ratio\" weight=\"25\" width=\"150px\" sortable fixed>\n                ${i18nString(UIStrings.contrastRatio)}\n              </th>` : nothing}\n          </tr>\n          ${items.map(({data, link, showNode}) => html`\n            <tr>\n              ${visibility.has('node-id') ? renderNode(data, link, showNode) : nothing}\n              ${visibility.has('declaration') ? renderDeclaration(data) : nothing}\n              ${visibility.has('source-url') ? renderSourceURL(data, link) : nothing}\n              ${visibility.has('contrast-ratio') ? renderContrastRatio(data) : nothing}\n            </tr>`)}\n        </table>\n      </devtools-data-grid>\n    </div>`,\n    target);\n  // clang-format on\n};\n\nexport class ElementDetailsView extends UI.Widget.Widget {\n  #domModel: SDK.DOMModel.DOMModel;\n  readonly #cssModel: SDK.CSSModel.CSSModel;\n  readonly #linkifier: Components.Linkifier.Linkifier;\n  #data: PopulateNodesEventNodes;\n  readonly #view: ElementDetailsViewFunction;\n\n  constructor(\n      domModel: SDK.DOMModel.DOMModel, cssModel: SDK.CSSModel.CSSModel, linkifier: Components.Linkifier.Linkifier,\n      view: ElementDetailsViewFunction = ELEMENT_DETAILS_DEFAULT_VIEW) {\n    super();\n\n    this.#domModel = domModel;\n    this.#cssModel = cssModel;\n    this.#linkifier = linkifier;\n    this.#view = view;\n    this.#data = [];\n  }\n\n  set data(data: PopulateNodesEventNodes) {\n    this.#data = data;\n    this.requestUpdate();\n  }\n\n  override async performUpdate(): Promise<void> {\n    const visibility = new Set<string>();\n    if (!this.#data.length) {\n      this.#view({items: [], visibility}, {}, this.element);\n      return;\n    }\n\n    const [firstItem] = this.#data;\n    'nodeId' in firstItem && firstItem.nodeId && visibility.add('node-id');\n    'declaration' in firstItem && firstItem.declaration && visibility.add('declaration');\n    'sourceURL' in firstItem && firstItem.sourceURL && visibility.add('source-url');\n    'contrastRatio' in firstItem && firstItem.contrastRatio && visibility.add('contrast-ratio');\n\n    let relatedNodesMap: Map<Protocol.DOM.BackendNodeId, SDK.DOMModel.DOMNode|null>|null|undefined;\n    if ('nodeId' in firstItem && visibility.has('node-id')) {\n      // Grab the nodes from the frontend, but only those that have not been\n      // retrieved already.\n      const nodeIds = (this.#data as Array<{nodeId: Protocol.DOM.BackendNodeId}>).reduce((prev, curr) => {\n        const nodeId = curr.nodeId;\n        if (CSSOverviewCompletedView.pushedNodes.has(nodeId)) {\n          return prev;\n        }\n        CSSOverviewCompletedView.pushedNodes.add(nodeId);\n        return prev.add(nodeId);\n      }, new Set<Protocol.DOM.BackendNodeId>());\n      relatedNodesMap = await this.#domModel.pushNodesByBackendIdsToFrontend(nodeIds);\n    }\n\n    const items = await Promise.all(this.#data.map(async item => {\n      let link, showNode;\n      if ('nodeId' in item && visibility.has('node-id')) {\n        const frontendNode = relatedNodesMap?.get(item.nodeId) ?? null;\n        if (frontendNode) {\n          link = await Common.Linkifier.Linkifier.linkify(frontendNode) as HTMLElement;\n          showNode = () => frontendNode.scrollIntoView();\n        }\n      }\n      if ('range' in item && item.range && item.styleSheetId && visibility.has('source-url')) {\n        const ruleLocation = TextUtils.TextRange.TextRange.fromObject(item.range);\n        const styleSheetHeader = this.#cssModel.styleSheetHeaderForId(item.styleSheetId);\n        if (styleSheetHeader) {\n          const lineNumber = styleSheetHeader.lineNumberInSource(ruleLocation.startLine);\n          const columnNumber = styleSheetHeader.columnNumberInSource(ruleLocation.startLine, ruleLocation.startColumn);\n          const matchingSelectorLocation = new SDK.CSSModel.CSSLocation(styleSheetHeader, lineNumber, columnNumber);\n          link = this.#linkifier.linkifyCSSLocation(matchingSelectorLocation) as HTMLElement;\n        }\n      }\n\n      return {data: item, link, showNode};\n    }));\n\n    this.#view({items, visibility}, {}, this.element);\n  }\n}\n\nfunction renderNode(data: PopulateNodesEventNodeTypes, link?: HTMLElement, showNode?: () => void): TemplateResult {\n  if (!link) {\n    return html``;\n  }\n  return html`\n    <td>\n      ${link}\n      <devtools-icon part=\"show-element\" name=\"select-element\"\n          title=${i18nString(UIStrings.showElement)} tabindex=\"0\"\n          @click=${() => showNode && showNode()}></devtools-icon>\n    </td>`;\n}\n\nfunction renderDeclaration(data: PopulateNodesEventNodeTypes): TemplateResult {\n  if (!('declaration' in data)) {\n    throw new Error('Declaration entry is missing a declaration.');\n  }\n  return html`<td>${data.declaration}</td>`;\n}\n\nfunction renderSourceURL(data: PopulateNodesEventNodeTypes, link?: HTMLElement): TemplateResult {\n  if ('range' in data && data.range) {\n    if (!link) {\n      return html`<td>${i18nString(UIStrings.unableToLink)}</td>`;\n    }\n    return html`<td>${link}</td>`;\n  }\n  return html`<td>${i18nString(UIStrings.unableToLinkToInlineStyle)}</td>`;\n}\n\nfunction renderContrastRatio(data: PopulateNodesEventNodeTypes): TemplateResult {\n  if (!('contrastRatio' in data)) {\n    throw new Error('Contrast ratio entry is missing a contrast ratio.');\n  }\n  const showAPCA = Root.Runtime.experiments.isEnabled('apca');\n  const contrastRatio = Platform.NumberUtilities.floor(data.contrastRatio, 2);\n  const contrastRatioString = showAPCA ? contrastRatio + '%' : contrastRatio;\n  const border = getBorderString(data.backgroundColor);\n  const color = data.textColor.asString();\n  const backgroundColor = data.backgroundColor.asString();\n\n  // clang-format off\n  return html`\n    <td>\n      <div class=\"contrast-container-in-grid\">\n          <span class=\"contrast-preview\" style=${styleMap({border, color, backgroundColor})}>Aa</span>\n          <span>${contrastRatioString}</span>\n          ${showAPCA ?\n            html`\n            <span>${i18nString(UIStrings.apca)}</span>${data.thresholdsViolated.apca ? createClearIcon() : createCheckIcon()}`\n          : html`\n            <span>${i18nString(UIStrings.aa)}</span>${data.thresholdsViolated.aa ? createClearIcon() : createCheckIcon()}\n            <span>${i18nString(UIStrings.aaa)}</span>${data.thresholdsViolated.aaa ? createClearIcon() : createCheckIcon()}`\n          }\n      </div>\n    </td>`;\n  // clang-format on\n}\n\nfunction createClearIcon(): TemplateResult {\n  return html`\n    <devtools-icon name=\"clear\" style=\"color:var(--icon-error); width:14px; height:14px\"></devtools-icon>`;\n}\n\nfunction createCheckIcon(): TemplateResult {\n  return html`\n    <devtools-icon name=\"checkmark\"\n        style=\"color:var(--icon-checkmark-green); width:14px; height:14px\"></devtools-icon>`;\n}\n"]}