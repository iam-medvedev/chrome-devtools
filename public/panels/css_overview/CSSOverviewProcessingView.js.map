{"version":3,"file":"CSSOverviewProcessingView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/css_overview/CSSOverviewProcessingView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,OAAO,MAAM,wCAAwC,CAAC;AAClE,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,EAAC,IAAI,EAAE,MAAM,EAAC,MAAM,qBAAqB,CAAC;AAGjD,OAAO,+BAA+B,MAAM,oCAAoC,CAAC;AAEjF,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,MAAM,EAAE,QAAQ;CACR,CAAC;AACX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,kDAAkD,EAAE,SAAS,CAAC,CAAC;AACxG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAQtE,MAAM,CAAC,MAAM,YAAY,GAAS,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;IAC3D,mBAAmB;IACnB,MAAM,CAAC,IAAI,CAAA;aACA,+BAA+B,CAAC,OAAO;;;;;;uBAM7B,KAAK,CAAC,QAAQ;8BACP,gCAAgC;yBACrC,gDAA+B,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;;;WAG7E,EACP,MAAM,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;IACzB,kBAAkB;AACpB,CAAC,CAAC;AAEF,MAAM,OAAO,yBAA0B,SAAQ,EAAE,CAAC,MAAM,CAAC,MAAM;IACpD,WAAW,CAAqB;IACzC,QAAQ,CAAwB;IAChC,YAAY,UAA8B,EAAE,OAAa,YAAY;QACnE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,MAAM,KAAK,GAAG;YACZ,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,wBAAwB,8DAAgC;SAC1F,CAAC;QACF,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACvC,CAAC;CACF","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\n\nimport {Events, type OverviewController} from './CSSOverviewController.js';\nimport cssOverviewProcessingViewStyles from './cssOverviewProcessingView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text to cancel something\n   */\n  cancel: 'Cancel',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewProcessingView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ViewInput {\n  onCancel: () => void;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  // clang-format off\n  render(html`\n    <style>${cssOverviewProcessingViewStyles.cssText}</style>\n    <div style=\"overflow:auto\">\n      <div class=\"vbox overview-processing-view\">\n        <h1>Processing page</h1>\n        <div>\n          <devtools-button\n              @click=${input.onCancel}\n              .jslogContext=${'css-overview.cancel-processing'}\n              .variant=${Buttons.Button.Variant.OUTLINED}>${i18nString(UIStrings.cancel)}</devtools-button>\n        </div>\n      </div>\n    </div>`,\n    target, {host: input});\n  // clang-format on\n};\n\nexport class CSSOverviewProcessingView extends UI.Widget.Widget {\n  readonly #controller: OverviewController;\n  fragment?: UI.Fragment.Fragment;\n  constructor(controller: OverviewController, view: View = DEFAULT_VIEW) {\n    super();\n\n    this.#controller = controller;\n    const input = {\n      onCancel: () => this.#controller.dispatchEventToListeners(Events.REQUEST_OVERVIEW_CANCEL),\n    };\n    view(input, {}, this.contentElement);\n  }\n}\n"]}