{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/css_overview/CSSOverviewUnusedDeclarations.ts", "../../../../../../front_end/panels/css_overview/CSSOverviewModel.ts", "../../../../../../front_end/panels/css_overview/CSSOverviewProcessingView.ts", "cssOverviewProcessingView.css.js", "../../../../../../front_end/panels/css_overview/CSSOverviewCompletedView.ts", "cssOverviewCompletedView.css.js", "../../../../../../front_end/panels/css_overview/CSSOverviewSidebarPanel.ts", "cssOverviewSidebarPanel.css.js", "../../../../../../front_end/panels/css_overview/CSSOverviewPanel.ts", "../../../../../../front_end/panels/css_overview/CSSOverviewStartView.ts", "cssOverviewStartView.css.js"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nconst UIStrings = {\n  /**\n   * @description Label to explain why top values are ignored\n   */\n  topAppliedToAStatically: '`Top` applied to a statically positioned element',\n  /**\n   * @description Label to explain why left (opposite to right) values are ignored.\n   */\n  leftAppliedToAStatically: '`Left` applied to a statically positioned element',\n  /**\n   * @description Label to explain why right values are ignored\n   */\n  rightAppliedToAStatically: '`Right` applied to a statically positioned element',\n  /**\n   * @description Label to explain why bottom values are ignored\n   */\n  bottomAppliedToAStatically: '`Bottom` applied to a statically positioned element',\n  /**\n   * @description Label to explain why width values are ignored\n   */\n  widthAppliedToAnInlineElement: '`Width` applied to an inline element',\n  /**\n   * @description Label to explain why height values are ignored\n   */\n  heightAppliedToAnInlineElement: '`Height` applied to an inline element',\n  /**\n   * @description Label to explain why vertical-align values are ignored\n   */\n  verticalAlignmentAppliedTo: 'Vertical alignment applied to element which is neither `inline` nor `table-cell`',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewUnusedDeclarations.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport interface UnusedDeclaration {\n  declaration: string;\n  nodeId: Protocol.DOM.BackendNodeId;\n}\n\nexport class CSSOverviewUnusedDeclarations {\n  private static add(target: Map<string, UnusedDeclaration[]>, key: string, item: {\n    declaration: string,\n    nodeId: Protocol.DOM.BackendNodeId,\n  }): void {\n    const values = target.get(key) || [];\n    values.push(item);\n    target.set(key, values);\n  }\n\n  static checkForUnusedPositionValues(\n      unusedDeclarations: Map<string, UnusedDeclaration[]>, nodeId: Protocol.DOM.BackendNodeId, strings: string[],\n      positionIdx: number, topIdx: number, leftIdx: number, rightIdx: number, bottomIdx: number): void {\n    if (strings[positionIdx] !== 'static') {\n      return;\n    }\n\n    if (strings[topIdx] !== 'auto') {\n      const reason = i18nString(UIStrings.topAppliedToAStatically);\n      this.add(unusedDeclarations, reason, {\n        declaration: `top: ${strings[topIdx]}`,\n        nodeId,\n      });\n    }\n\n    if (strings[leftIdx] !== 'auto') {\n      const reason = i18nString(UIStrings.leftAppliedToAStatically);\n      this.add(unusedDeclarations, reason, {\n        declaration: `left: ${strings[leftIdx]}`,\n        nodeId,\n      });\n    }\n\n    if (strings[rightIdx] !== 'auto') {\n      const reason = i18nString(UIStrings.rightAppliedToAStatically);\n      this.add(unusedDeclarations, reason, {\n        declaration: `right: ${strings[rightIdx]}`,\n        nodeId,\n      });\n    }\n\n    if (strings[bottomIdx] !== 'auto') {\n      const reason = i18nString(UIStrings.bottomAppliedToAStatically);\n      this.add(unusedDeclarations, reason, {\n        declaration: `bottom: ${strings[bottomIdx]}`,\n        nodeId,\n      });\n    }\n  }\n\n  static checkForUnusedWidthAndHeightValues(\n      unusedDeclarations: Map<string, UnusedDeclaration[]>, nodeId: Protocol.DOM.BackendNodeId, strings: string[],\n      displayIdx: number, widthIdx: number, heightIdx: number): void {\n    if (strings[displayIdx] !== 'inline') {\n      return;\n    }\n\n    if (strings[widthIdx] !== 'auto') {\n      const reason = i18nString(UIStrings.widthAppliedToAnInlineElement);\n      this.add(unusedDeclarations, reason, {\n        declaration: `width: ${strings[widthIdx]}`,\n        nodeId,\n      });\n    }\n\n    if (strings[heightIdx] !== 'auto') {\n      const reason = i18nString(UIStrings.heightAppliedToAnInlineElement);\n      this.add(unusedDeclarations, reason, {\n        declaration: `height: ${strings[heightIdx]}`,\n        nodeId,\n      });\n    }\n  }\n\n  static checkForInvalidVerticalAlignment(\n      unusedDeclarations: Map<string, UnusedDeclaration[]>, nodeId: Protocol.DOM.BackendNodeId, strings: string[],\n      displayIdx: number, verticalAlignIdx: number): void {\n    if (!strings[displayIdx] || strings[displayIdx].startsWith('inline') || strings[displayIdx].startsWith('table')) {\n      return;\n    }\n\n    if (strings[verticalAlignIdx] !== 'baseline') {\n      const reason = i18nString(UIStrings.verticalAlignmentAppliedTo);\n      this.add(unusedDeclarations, reason, {\n        declaration: `vertical-align: ${strings[verticalAlignIdx]}`,\n        nodeId,\n      });\n    }\n  }\n}\n", "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as ColorPicker from '../../ui/legacy/components/color_picker/color_picker.js';\n\nimport type {ContrastIssue} from './CSSOverviewCompletedView.js';\nimport {CSSOverviewUnusedDeclarations, type UnusedDeclaration} from './CSSOverviewUnusedDeclarations.js';\n\ninterface NodeStyleStats {\n  elementCount: number;\n  backgroundColors: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  textColors: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  textColorContrastIssues: Map<string, ContrastIssue[]>;\n  fillColors: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  borderColors: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  fontInfo: Map<string, Map<string, Map<string, Protocol.DOM.BackendNodeId[]>>>;\n  unusedDeclarations: Map<string, UnusedDeclaration[]>;\n}\n\nexport interface GlobalStyleStats {\n  styleRules: number;\n  inlineStyles: number;\n  externalSheets: number;\n  stats: {\n    // Simple.\n    type: number,\n    class: number,\n    id: number,\n    universal: number,\n    attribute: number,\n\n    // Non-simple.\n    nonSimple: number,\n  };\n}\n\nexport class CSSOverviewModel extends SDK.SDKModel.SDKModel<void> {\n  readonly #runtimeAgent: ProtocolProxyApi.RuntimeApi;\n  readonly #cssAgent: ProtocolProxyApi.CSSApi;\n  readonly #domSnapshotAgent: ProtocolProxyApi.DOMSnapshotApi;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n\n    this.#runtimeAgent = target.runtimeAgent();\n    this.#cssAgent = target.cssAgent();\n    this.#domSnapshotAgent = target.domsnapshotAgent();\n  }\n\n  async getNodeStyleStats(): Promise<NodeStyleStats> {\n    const backgroundColors = new Map<string, Set<Protocol.DOM.BackendNodeId>>();\n    const textColors = new Map<string, Set<Protocol.DOM.BackendNodeId>>();\n    const textColorContrastIssues = new Map<string, ContrastIssue[]>();\n    const fillColors = new Map<string, Set<Protocol.DOM.BackendNodeId>>();\n    const borderColors = new Map<string, Set<Protocol.DOM.BackendNodeId>>();\n    const fontInfo = new Map<string, Map<string, Map<string, Protocol.DOM.BackendNodeId[]>>>();\n    const unusedDeclarations = new Map<string, UnusedDeclaration[]>();\n    const snapshotConfig = {\n      computedStyles: [\n        'background-color',\n        'color',\n        'fill',\n        'border-top-width',\n        'border-top-color',\n        'border-bottom-width',\n        'border-bottom-color',\n        'border-left-width',\n        'border-left-color',\n        'border-right-width',\n        'border-right-color',\n        'font-family',\n        'font-size',\n        'font-weight',\n        'line-height',\n        'position',\n        'top',\n        'right',\n        'bottom',\n        'left',\n        'display',\n        'width',\n        'height',\n        'vertical-align',\n      ],\n      includeTextColorOpacities: true,\n      includeBlendedBackgroundColors: true,\n    };\n\n    const formatColor = (color: Common.Color.Color): string|null => {\n      if (color instanceof Common.Color.Legacy) {\n        return color.hasAlpha() ? color.asString(Common.Color.Format.HEXA) : color.asString(Common.Color.Format.HEX);\n      }\n\n      return color.asString();\n    };\n\n    const storeColor = (id: number, nodeId: number, target: Map<string, Set<number>>): Common.Color.Color|undefined => {\n      if (id === -1) {\n        return;\n      }\n\n      // Parse the color, discard transparent ones.\n      const colorText = strings[id];\n      if (!colorText) {\n        return;\n      }\n\n      const color = Common.Color.parse(colorText);\n      if (!color || color.asLegacyColor().rgba()[3] === 0) {\n        return;\n      }\n\n      // Format the color and use as the key.\n      const colorFormatted = formatColor(color);\n      if (!colorFormatted) {\n        return;\n      }\n\n      // Get the existing set of nodes with the color, or create a new set.\n      const colorValues = target.get(colorFormatted) || new Set();\n      colorValues.add(nodeId);\n\n      // Store.\n      target.set(colorFormatted, colorValues);\n\n      return color;\n    };\n\n    const isSVGNode = (nodeName: string): boolean => {\n      const validNodes = new Set([\n        'altglyph',\n        'circle',\n        'ellipse',\n        'path',\n        'polygon',\n        'polyline',\n        'rect',\n        'svg',\n        'text',\n        'textpath',\n        'tref',\n        'tspan',\n      ]);\n      return validNodes.has(nodeName.toLowerCase());\n    };\n\n    const isReplacedContent = (nodeName: string): boolean => {\n      const validNodes = new Set(['iframe', 'video', 'embed', 'img']);\n      return validNodes.has(nodeName.toLowerCase());\n    };\n\n    const isTableElementWithDefaultStyles = (nodeName: string, display: string): boolean => {\n      const validNodes = new Set(['tr', 'td', 'thead', 'tbody']);\n      return validNodes.has(nodeName.toLowerCase()) && display.startsWith('table');\n    };\n\n    let elementCount = 0;\n\n    const {documents, strings} = await this.#domSnapshotAgent.invoke_captureSnapshot(snapshotConfig);\n    for (const {nodes, layout} of documents) {\n      // Track the number of elements in the documents.\n      elementCount += layout.nodeIndex.length;\n\n      for (let idx = 0; idx < layout.styles.length; idx++) {\n        const styles = layout.styles[idx];\n        const nodeIdx = layout.nodeIndex[idx];\n        if (!nodes.backendNodeId || !nodes.nodeName) {\n          continue;\n        }\n        const nodeId = nodes.backendNodeId[nodeIdx];\n        const nodeName = nodes.nodeName[nodeIdx];\n\n        const [backgroundColorIdx, textColorIdx, fillIdx, borderTopWidthIdx, borderTopColorIdx, borderBottomWidthIdx, borderBottomColorIdx, borderLeftWidthIdx, borderLeftColorIdx, borderRightWidthIdx, borderRightColorIdx, fontFamilyIdx, fontSizeIdx, fontWeightIdx, lineHeightIdx, positionIdx, topIdx, rightIdx, bottomIdx, leftIdx, displayIdx, widthIdx, heightIdx, verticalAlignIdx] =\n            styles;\n\n        storeColor(backgroundColorIdx, nodeId, backgroundColors);\n        const textColor = storeColor(textColorIdx, nodeId, textColors);\n\n        if (isSVGNode(strings[nodeName])) {\n          storeColor(fillIdx, nodeId, fillColors);\n        }\n\n        if (strings[borderTopWidthIdx] !== '0px') {\n          storeColor(borderTopColorIdx, nodeId, borderColors);\n        }\n\n        if (strings[borderBottomWidthIdx] !== '0px') {\n          storeColor(borderBottomColorIdx, nodeId, borderColors);\n        }\n\n        if (strings[borderLeftWidthIdx] !== '0px') {\n          storeColor(borderLeftColorIdx, nodeId, borderColors);\n        }\n\n        if (strings[borderRightWidthIdx] !== '0px') {\n          storeColor(borderRightColorIdx, nodeId, borderColors);\n        }\n\n        /**\n         * Create a structure like this for font info:\n         *\n         *                 / size (Map) -- nodes (Array)\n         *                /\n         * Font family (Map) ----- weight (Map) -- nodes (Array)\n         *                \\\n         *                 \\ line-height (Map) -- nodes (Array)\n         */\n        if (fontFamilyIdx && fontFamilyIdx !== -1) {\n          const fontFamily = strings[fontFamilyIdx];\n          const fontFamilyInfo = fontInfo.get(fontFamily) || new Map();\n\n          const sizeLabel = 'font-size';\n          const weightLabel = 'font-weight';\n          const lineHeightLabel = 'line-height';\n\n          const size = fontFamilyInfo.get(sizeLabel) || new Map();\n          const weight = fontFamilyInfo.get(weightLabel) || new Map();\n          const lineHeight = fontFamilyInfo.get(lineHeightLabel) || new Map();\n\n          if (fontSizeIdx !== -1) {\n            const fontSizeValue = strings[fontSizeIdx];\n            const nodes = size.get(fontSizeValue) || [];\n            nodes.push(nodeId);\n            size.set(fontSizeValue, nodes);\n          }\n\n          if (fontWeightIdx !== -1) {\n            const fontWeightValue = strings[fontWeightIdx];\n            const nodes = weight.get(fontWeightValue) || [];\n            nodes.push(nodeId);\n            weight.set(fontWeightValue, nodes);\n          }\n\n          if (lineHeightIdx !== -1) {\n            const lineHeightValue = strings[lineHeightIdx];\n            const nodes = lineHeight.get(lineHeightValue) || [];\n            nodes.push(nodeId);\n            lineHeight.set(lineHeightValue, nodes);\n          }\n\n          // Set the data back.\n          fontFamilyInfo.set(sizeLabel, size);\n          fontFamilyInfo.set(weightLabel, weight);\n          fontFamilyInfo.set(lineHeightLabel, lineHeight);\n          fontInfo.set(fontFamily, fontFamilyInfo);\n        }\n\n        const blendedBackgroundColor =\n            textColor && layout.blendedBackgroundColors && layout.blendedBackgroundColors[idx] !== -1 ?\n            Common.Color.parse(strings[layout.blendedBackgroundColors[idx]]) :\n            null;\n        if (textColor && blendedBackgroundColor) {\n          const contrastInfo = new ColorPicker.ContrastInfo.ContrastInfo({\n            backgroundColors: [blendedBackgroundColor.asString(Common.Color.Format.HEXA)],\n            computedFontSize: fontSizeIdx !== -1 ? strings[fontSizeIdx] : '',\n            computedFontWeight: fontWeightIdx !== -1 ? strings[fontWeightIdx] : '',\n          });\n          const blendedTextColor =\n              textColor.asLegacyColor().blendWithAlpha(layout.textColorOpacities ? layout.textColorOpacities[idx] : 1);\n          contrastInfo.setColor(blendedTextColor);\n          const formattedTextColor = formatColor(blendedTextColor);\n          const formattedBackgroundColor = formatColor(blendedBackgroundColor.asLegacyColor());\n          const key = `${formattedTextColor}_${formattedBackgroundColor}`;\n          if (Root.Runtime.experiments.isEnabled('apca')) {\n            const contrastRatio = contrastInfo.contrastRatioAPCA();\n            const threshold = contrastInfo.contrastRatioAPCAThreshold();\n            const passes = contrastRatio && threshold ? Math.abs(contrastRatio) >= threshold : false;\n            if (!passes && contrastRatio) {\n              const issue = {\n                nodeId,\n                contrastRatio,\n                textColor: blendedTextColor,\n                backgroundColor: blendedBackgroundColor,\n                thresholdsViolated: {\n                  aa: false,\n                  aaa: false,\n                  apca: true,\n                },\n              };\n              if (textColorContrastIssues.has(key)) {\n                (textColorContrastIssues.get(key) as ContrastIssue[]).push(issue);\n              } else {\n                textColorContrastIssues.set(key, [issue]);\n              }\n            }\n          } else {\n            const aaThreshold = contrastInfo.contrastRatioThreshold('aa') || 0;\n            const aaaThreshold = contrastInfo.contrastRatioThreshold('aaa') || 0;\n            const contrastRatio = contrastInfo.contrastRatio() || 0;\n            if (aaThreshold > contrastRatio || aaaThreshold > contrastRatio) {\n              const issue = {\n                nodeId,\n                contrastRatio,\n                textColor: blendedTextColor,\n                backgroundColor: blendedBackgroundColor,\n                thresholdsViolated: {\n                  aa: aaThreshold > contrastRatio,\n                  aaa: aaaThreshold > contrastRatio,\n                  apca: false,\n                },\n              };\n              if (textColorContrastIssues.has(key)) {\n                (textColorContrastIssues.get(key) as ContrastIssue[]).push(issue);\n              } else {\n                textColorContrastIssues.set(key, [issue]);\n              }\n            }\n          }\n        }\n\n        CSSOverviewUnusedDeclarations.checkForUnusedPositionValues(\n            unusedDeclarations, nodeId, strings, positionIdx, topIdx, leftIdx, rightIdx, bottomIdx);\n\n        // Ignore SVG elements as, despite being inline by default, they can have width & height specified.\n        // Also ignore replaced content, for similar reasons.\n        if (!isSVGNode(strings[nodeName]) && !isReplacedContent(strings[nodeName])) {\n          CSSOverviewUnusedDeclarations.checkForUnusedWidthAndHeightValues(\n              unusedDeclarations, nodeId, strings, displayIdx, widthIdx, heightIdx);\n        }\n\n        if (verticalAlignIdx !== -1 && !isTableElementWithDefaultStyles(strings[nodeName], strings[displayIdx])) {\n          CSSOverviewUnusedDeclarations.checkForInvalidVerticalAlignment(\n              unusedDeclarations, nodeId, strings, displayIdx, verticalAlignIdx);\n        }\n      }\n    }\n\n    return {\n      backgroundColors,\n      textColors,\n      textColorContrastIssues,\n      fillColors,\n      borderColors,\n      fontInfo,\n      unusedDeclarations,\n      elementCount,\n    };\n  }\n\n  getComputedStyleForNode(nodeId: Protocol.DOM.NodeId): Promise<Protocol.CSS.GetComputedStyleForNodeResponse> {\n    return this.#cssAgent.invoke_getComputedStyleForNode({nodeId});\n  }\n\n  async getMediaQueries(): Promise<Map<string, Protocol.CSS.CSSMedia[]>> {\n    const queries = await this.#cssAgent.invoke_getMediaQueries();\n    const queryMap = new Map<string, Protocol.CSS.CSSMedia[]>();\n\n    if (!queries) {\n      return queryMap;\n    }\n\n    for (const query of queries.medias) {\n      // Ignore media queries applied to stylesheets; instead only use declared media rules.\n      if (query.source === 'linkedSheet') {\n        continue;\n      }\n\n      const entries = queryMap.get(query.text) || ([] as Protocol.CSS.CSSMedia[]);\n      entries.push(query);\n      queryMap.set(query.text, entries);\n    }\n\n    return queryMap;\n  }\n\n  async getGlobalStylesheetStats(): Promise<GlobalStyleStats|void> {\n    // There are no ways to pull CSSOM values directly today, due to its unserializable format,\n    // so instead we execute some JS within the page that extracts the relevant data and send that instead.\n    const expression = `(function() {\n      let styleRules = 0;\n      let inlineStyles = 0;\n      let externalSheets = 0;\n      const stats = {\n        // Simple.\n        type: new Set(),\n        class: new Set(),\n        id: new Set(),\n        universal: new Set(),\n        attribute: new Set(),\n\n        // Non-simple.\n        nonSimple: new Set()\n      };\n\n      for (const styleSheet of document.styleSheets) {\n        if (styleSheet.href) {\n          externalSheets++;\n        } else {\n          inlineStyles++;\n        }\n\n        // Attempting to grab rules can trigger a DOMException.\n        // Try it and if it fails skip to the next stylesheet.\n        let rules;\n        try {\n          rules = styleSheet.rules;\n        } catch (err) {\n          continue;\n        }\n\n        for (const rule of rules) {\n          if ('selectorText' in rule) {\n            styleRules++;\n\n            // Each group that was used.\n            for (const selectorGroup of rule.selectorText.split(',')) {\n              // Each selector in the group.\n              for (const selector of selectorGroup.split(\\/[\\\\t\\\\n\\\\f\\\\r ]+\\/g)) {\n                if (selector.startsWith('.')) {\n                  // Class.\n                  stats.class.add(selector);\n                } else if (selector.startsWith('#')) {\n                  // Id.\n                  stats.id.add(selector);\n                } else if (selector.startsWith('*')) {\n                  // Universal.\n                  stats.universal.add(selector);\n                } else if (selector.startsWith('[')) {\n                  // Attribute.\n                  stats.attribute.add(selector);\n                } else {\n                  // Type or non-simple selector.\n                  const specialChars = \\/[#\\.:\\\\[\\\\]|\\\\+>~]\\/;\n                  if (specialChars.test(selector)) {\n                    stats.nonSimple.add(selector);\n                  } else {\n                    stats.type.add(selector);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return {\n        styleRules,\n        inlineStyles,\n        externalSheets,\n        stats: {\n          // Simple.\n          type: stats.type.size,\n          class: stats.class.size,\n          id: stats.id.size,\n          universal: stats.universal.size,\n          attribute: stats.attribute.size,\n\n          // Non-simple.\n          nonSimple: stats.nonSimple.size\n        }\n      }\n    })()`;\n    const {result} = await this.#runtimeAgent.invoke_evaluate({expression, returnByValue: true});\n\n    // TODO(paullewis): Handle errors properly.\n    if (result.type !== 'object') {\n      return;\n    }\n\n    return result.value;\n  }\n}\n\nSDK.SDKModel.SDKModel.register(CSSOverviewModel, {capabilities: SDK.Target.Capability.DOM, autostart: false});\n", "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\n\nimport cssOverviewProcessingViewStyles from './cssOverviewProcessingView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text to cancel something\n   */\n  cancel: 'Cancel',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewProcessingView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ViewInput {\n  onCancel: () => void;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  // clang-format off\n  render(html`\n    <style>${cssOverviewProcessingViewStyles}</style>\n    <div style=\"overflow:auto\">\n      <div class=\"vbox overview-processing-view\">\n        <h1>Processing page</h1>\n        <div>\n          <devtools-button\n              @click=${input.onCancel}\n              .jslogContext=${'css-overview.cancel-processing'}\n              .variant=${Buttons.Button.Variant.OUTLINED}>${i18nString(UIStrings.cancel)}</devtools-button>\n        </div>\n      </div>\n    </div>`,\n    target);\n  // clang-format on\n};\n\nexport class CSSOverviewProcessingView extends UI.Widget.Widget {\n  #onCancel = (): void => {};\n  #view: View;\n\n  constructor(element?: HTMLElement, view: View = DEFAULT_VIEW) {\n    super(element);\n    this.#view = view;\n    this.requestUpdate();\n  }\n\n  set onCancel(onCancel: () => void) {\n    this.#onCancel = onCancel;\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    this.#view({onCancel: this.#onCancel}, {}, this.element);\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/**\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.overview-processing-view {\n  overflow: hidden;\n  padding: 16px;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n}\n\n.overview-processing-view h1 {\n  font-size: 16px;\n  text-align: center;\n  font-weight: normal;\n  margin: 0;\n  padding: 8px;\n}\n\n.overview-processing-view h2 {\n  font-size: 12px;\n  text-align: center;\n  font-weight: normal;\n  margin: 0;\n  padding-top: 32px;\n}\n\n/*# sourceURL=${import.meta.resolve('./cssOverviewProcessingView.css')} */`;", "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/components/data_grid/data_grid.js';\nimport '../../ui/components/icon_button/icon_button.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Geometry from '../../models/geometry/geometry.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives, html, nothing, render, type TemplateResult} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport cssOverviewCompletedViewStyles from './cssOverviewCompletedView.css.js';\nimport type {GlobalStyleStats} from './CSSOverviewModel.js';\nimport {CSSOverviewSidebarPanel} from './CSSOverviewSidebarPanel.js';\nimport type {UnusedDeclaration} from './CSSOverviewUnusedDeclarations.js';\n\nconst {styleMap, ref} = Directives;\nconst {widgetConfig} = UI.Widget;\n\nconst UIStrings = {\n  /**\n   * @description Label for the summary in the CSS overview report\n   */\n  overviewSummary: 'Overview summary',\n  /**\n   * @description Title of colors subsection in the CSS overview panel\n   */\n  colors: 'Colors',\n  /**\n   * @description Title of font info subsection in the CSS overview panel\n   */\n  fontInfo: 'Font info',\n  /**\n   * @description Label to denote unused declarations in the target page\n   */\n  unusedDeclarations: 'Unused declarations',\n  /**\n   * @description Label for the number of media queries in the CSS overview report\n   */\n  mediaQueries: 'Media queries',\n  /**\n   * @description Title of the Elements Panel\n   */\n  elements: 'Elements',\n  /**\n   * @description Label for the number of External stylesheets in the CSS overview report\n   */\n  externalStylesheets: 'External stylesheets',\n  /**\n   * @description Label for the number of inline style elements in the CSS overview report\n   */\n  inlineStyleElements: 'Inline style elements',\n  /**\n   * @description Label for the number of style rules in CSS overview report\n   */\n  styleRules: 'Style rules',\n  /**\n   * @description Label for the number of type selectors in the CSS overview report\n   */\n  typeSelectors: 'Type selectors',\n  /**\n   * @description Label for the number of ID selectors in the CSS overview report\n   */\n  idSelectors: 'ID selectors',\n  /**\n   * @description Label for the number of class selectors in the CSS overview report\n   */\n  classSelectors: 'Class selectors',\n  /**\n   * @description Label for the number of universal selectors in the CSS overview report\n   */\n  universalSelectors: 'Universal selectors',\n  /**\n   * @description Label for the number of Attribute selectors in the CSS overview report\n   */\n  attributeSelectors: 'Attribute selectors',\n  /**\n   * @description Label for the number of non-simple selectors in the CSS overview report\n   */\n  nonsimpleSelectors: 'Non-simple selectors',\n  /**\n   * @description Label for unique background colors in the CSS overview panel\n   * @example {32} PH1\n   */\n  backgroundColorsS: 'Background colors: {PH1}',\n  /**\n   * @description Label for unique text colors in the CSS overview panel\n   * @example {32} PH1\n   */\n  textColorsS: 'Text colors: {PH1}',\n  /**\n   * @description Label for unique fill colors in the CSS overview panel\n   * @example {32} PH1\n   */\n  fillColorsS: 'Fill colors: {PH1}',\n  /**\n   * @description Label for unique border colors in the CSS overview panel\n   * @example {32} PH1\n   */\n  borderColorsS: 'Border colors: {PH1}',\n  /**\n   * @description Label to indicate that there are no fonts in use\n   */\n  thereAreNoFonts: 'There are no fonts.',\n  /**\n   * @description Message to show when no unused declarations in the target page\n   */\n  thereAreNoUnusedDeclarations: 'There are no unused declarations.',\n  /**\n   * @description Message to show when no media queries are found in the target page\n   */\n  thereAreNoMediaQueries: 'There are no media queries.',\n  /**\n   * @description Title of the Drawer for contrast issues in the CSS overview panel\n   */\n  contrastIssues: 'Contrast issues',\n  /**\n   * @description Text to indicate how many times this CSS rule showed up.\n   */\n  nOccurrences: '{n, plural, =1 {# occurrence} other {# occurrences}}',\n  /**\n   * @description Section header for contrast issues in the CSS overview panel\n   * @example {1} PH1\n   */\n  contrastIssuesS: 'Contrast issues: {PH1}',\n  /**\n   * @description Title of the button for a contrast issue in the CSS overview panel\n   * @example {#333333} PH1\n   * @example {#333333} PH2\n   * @example {2} PH3\n   */\n  textColorSOverSBackgroundResults: 'Text color {PH1} over {PH2} background results in low contrast for {PH3} elements',\n  /**\n   * @description Label aa text content in Contrast Details of the Color Picker\n   */\n  aa: 'AA',\n  /**\n   * @description Label aaa text content in Contrast Details of the Color Picker\n   */\n  aaa: 'AAA',\n  /**\n   * @description Label for the APCA contrast in Color Picker\n   */\n  apca: 'APCA',\n  /**\n   * @description Label for the column in the element list in the CSS overview report\n   */\n  element: 'Element',\n  /**\n   * @description Column header title denoting which declaration is unused\n   */\n  declaration: 'Declaration',\n  /**\n   * @description Text for the source of something\n   */\n  source: 'Source',\n  /**\n   * @description Text of a DOM element in Contrast Details of the Color Picker\n   */\n  contrastRatio: 'Contrast ratio',\n  /**\n   * @description Accessible title of a table in the CSS overview elements.\n   */\n  cssOverviewElements: 'CSS overview elements',\n  /**\n   * @description Title of the button to show the element in the CSS overview panel\n   */\n  showElement: 'Show element',\n  /**\n   * @description Text to show in a table if the link to the style could not be created.\n   */\n  unableToLink: '(unable to link)',\n  /**\n   * @description Text to show in a table if the link to the inline style could not be created.\n   */\n  unableToLinkToInlineStyle: '(unable to link to inline style)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewCompletedView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type NodeStyleStats = Map<string, Set<number>>;\n\nexport interface ContrastIssue {\n  nodeId: Protocol.DOM.BackendNodeId;\n  contrastRatio: number;\n  textColor: Common.Color.Color;\n  backgroundColor: Common.Color.Color;\n  thresholdsViolated: {\n    aa: boolean,\n    aaa: boolean,\n    apca: boolean,\n  };\n}\nexport interface OverviewData {\n  backgroundColors: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  textColors: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  textColorContrastIssues: Map<string, ContrastIssue[]>;\n  fillColors: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  borderColors: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  globalStyleStats: {\n    styleRules: number,\n    inlineStyles: number,\n    externalSheets: number,\n    stats: {type: number, class: number, id: number, universal: number, attribute: number, nonSimple: number},\n  };\n  fontInfo: Map<string, Map<string, Map<string, Protocol.DOM.BackendNodeId[]>>>;\n  elementCount: number;\n  mediaQueries: Map<string, Protocol.CSS.CSSMedia[]>;\n  unusedDeclarations: Map<string, UnusedDeclaration[]>;\n}\n\nexport type FontInfo = Map<string, Map<string, Map<string, number[]>>>;\ninterface FontMetric {\n  label: string;\n  values: Array<{title: string, nodes: number[]}>;\n}\n\nfunction getBorderString(color: Common.Color.Color): string {\n  let {h, s, l} = color.as(Common.Color.Format.HSL);\n  h = Math.round(h * 360);\n  s = Math.round(s * 100);\n  l = Math.round(l * 100);\n\n  // Reduce the lightness of the border to make sure that there's always a visible outline.\n  l = Math.max(0, l - 15);\n\n  return `1px solid hsl(${h}deg ${s}% ${l}%)`;\n}\n\ninterface ViewInput {\n  elementCount: number;\n  backgroundColors: string[];\n  textColors: string[];\n  textColorContrastIssues: Map<string, ContrastIssue[]>;\n  fillColors: string[];\n  borderColors: string[];\n  globalStyleStats: GlobalStyleStats;\n  mediaQueries: Array<{title: string, nodes: Protocol.CSS.CSSMedia[]}>;\n  unusedDeclarations: Array<{title: string, nodes: UnusedDeclaration[]}>;\n  fontInfo: Array<{font: string, fontMetrics: FontMetric[]}>;\n  selectedSection: string;\n  onClick: (evt: Event) => void;\n  onSectionSelected: (section: string, withKeyboard: boolean) => void;\n  onReset: () => void;\n}\n\ninterface ViewOutput {\n  revealSection: Map<string, (setFocus: boolean) => void>;\n  closeAllTabs: () => void;\n  addTab: (id: string, tabTitle: string, view: UI.Widget.Widget, jslogContext: string) => void;\n}\n\nconst formatter = new Intl.NumberFormat('en-US');\n\ntype View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, output, target) => {\n  function revealSection(section: Element|undefined, setFocus: boolean): void {\n    if (!section) {\n      return;\n    }\n    section.scrollIntoView();\n    // Set focus for keyboard invoked event\n    if (setFocus) {\n      const focusableElement: HTMLElement|null = section.querySelector('button, [tabindex=\"0\"]');\n      focusableElement?.focus();\n    }\n  }\n\n  // clang-format off\n  render(html`\n      <style>${cssOverviewCompletedViewStyles}</style>\n      <devtools-split-view direction=\"column\" sidebar-position=\"first\" sidebar-initial-size=\"200\">\n        <devtools-widget slot=\"sidebar\" .widgetConfig=${widgetConfig(CSSOverviewSidebarPanel, {\n          minimumSize: new Geometry.Size(100, 25),\n          items: [\n            {name: i18nString(UIStrings.overviewSummary), id: 'summary'},\n            {name: i18nString(UIStrings.colors), id: 'colors'},\n            {name: i18nString(UIStrings.fontInfo), id: 'font-info'},\n            {name: i18nString(UIStrings.unusedDeclarations), id: 'unused-declarations'},\n            {name: i18nString(UIStrings.mediaQueries), id: 'media-queries'}\n          ],\n          selectedId: input.selectedSection,\n          onItemSelected: input.onSectionSelected,\n          onReset: input.onReset,\n        })}>\n        </devtools-widget>\n        <devtools-split-view sidebar-position=\"second\" slot=\"main\" direction=\"row\" sidebar-initial-size=\"minimized\">\n          <div class=\"vbox overview-completed-view\" slot=\"main\" @click=${input.onClick}>\n            <!-- Dupe the styles into the main container because of the shadow root will prevent outer styles. -->\n            <style>${cssOverviewCompletedViewStyles}</style>\n            <div class=\"results-section horizontally-padded summary\"\n                  ${ref(e => { output.revealSection.set('summary', revealSection.bind(null, e));})}>\n              <h1>${i18nString(UIStrings.overviewSummary)}</h1>\n              ${renderSummary(input.elementCount, input.globalStyleStats, input.mediaQueries)}\n            </div>\n            <div class=\"results-section horizontally-padded colors\"\n                ${ref(e => { output.revealSection.set('colors', revealSection.bind(null, e));})}>\n                <h1>${i18nString(UIStrings.colors)}</h1>\n                ${renderColors(input.backgroundColors, input.textColors, input.textColorContrastIssues, input.fillColors, input.borderColors)}\n              </div>\n              <div class=\"results-section font-info\"\n                    ${ref(e => { output.revealSection.set('font-info', revealSection.bind(null, e));})}>\n                <h1>${i18nString(UIStrings.fontInfo)}</h1>\n                ${renderFontInfo(input.fontInfo)}\n              </div>\n              <div class=\"results-section unused-declarations\"\n                    ${ref(e => { output.revealSection.set('unused-declarations', revealSection.bind(null, e));})}>\n                <h1>${i18nString(UIStrings.unusedDeclarations)}</h1>\n                ${renderUnusedDeclarations(input.unusedDeclarations)}\n              </div>\n              <div class=\"results-section media-queries\"\n                    ${ref(e => { output.revealSection.set('media-queries', revealSection.bind(null, e));})}>\n              <h1>${i18nString(UIStrings.mediaQueries)}</h1>\n              ${renderMediaQueries(input.mediaQueries)}\n            </div>\n          </div>\n          <devtools-widget slot=\"sidebar\" .widgetConfig=${widgetConfig(e => {\n              const tabbedPane = new UI.TabbedPane.TabbedPane(e);\n              output.closeAllTabs = () => { tabbedPane.closeTabs(tabbedPane.tabIds()); };\n              output.addTab = (id: string, tabTitle: string, view: UI.Widget.Widget, jslogContext: string) => {\n                if (!tabbedPane.hasTab(id)) {\n                  tabbedPane.appendTab(id, tabTitle, view, undefined, undefined,\n                                        /* isCloseable */ true, undefined, undefined, jslogContext);\n                }\n                tabbedPane.selectTab(id);\n                const splitView = tabbedPane.parentWidget() as UI.SplitWidget.SplitWidget;\n                splitView.setSidebarMinimized(false);\n              };\n              tabbedPane.addEventListener(UI.TabbedPane.Events.TabClosed, _ => {\n                if (tabbedPane.tabIds().length === 0) {\n                  const splitView = tabbedPane.parentWidget() as UI.SplitWidget.SplitWidget;\n                  splitView.setSidebarMinimized(true);\n                }\n              });\n              return tabbedPane;\n            })}>\n          </devtools-widget>\n        </devtools-split-view>\n      </devtools-split-view>`,\n      target);\n  // clang-format on\n};\n\nfunction renderSummary(\n    elementCount: number, globalStyleStats: GlobalStyleStats,\n    mediaQueries: Array<{title: string, nodes: Protocol.CSS.CSSMedia[]}>): TemplateResult {\n  const renderSummaryItem = (label: string, value: number): TemplateResult => html`\n    <li>\n      <div class=\"label\">${label}</div>\n      <div class=\"value\">${formatter.format(value)}</div>\n    </li>`;\n  return html`<ul>\n    ${renderSummaryItem(i18nString(UIStrings.elements), elementCount)}\n    ${renderSummaryItem(i18nString(UIStrings.externalStylesheets), globalStyleStats.externalSheets)}\n    ${renderSummaryItem(i18nString(UIStrings.inlineStyleElements), globalStyleStats.inlineStyles)}\n    ${renderSummaryItem(i18nString(UIStrings.styleRules), globalStyleStats.styleRules)}\n    ${renderSummaryItem(i18nString(UIStrings.mediaQueries), mediaQueries.length)}\n    ${renderSummaryItem(i18nString(UIStrings.typeSelectors), globalStyleStats.stats.type)}\n    ${renderSummaryItem(i18nString(UIStrings.idSelectors), globalStyleStats.stats.id)}\n    ${renderSummaryItem(i18nString(UIStrings.classSelectors), globalStyleStats.stats.class)}\n    ${renderSummaryItem(i18nString(UIStrings.universalSelectors), globalStyleStats.stats.universal)}\n    ${renderSummaryItem(i18nString(UIStrings.attributeSelectors), globalStyleStats.stats.attribute)}\n    ${renderSummaryItem(i18nString(UIStrings.nonsimpleSelectors), globalStyleStats.stats.nonSimple)}\n  </ul>`;\n}\n\nfunction renderColors(\n    backgroundColors: string[], textColors: string[], textColorContrastIssues: Map<string, ContrastIssue[]>,\n    fillColors: string[], borderColors: string[]): TemplateResult {\n  // clang-format off\n  return html`\n    <h2>${i18nString(UIStrings.backgroundColorsS, {PH1: backgroundColors.length})}</h2>\n    <ul>${backgroundColors.map(c => renderColor('background', c))}</ul>\n\n    <h2>${i18nString(UIStrings.textColorsS, {PH1: textColors.length})}</h2>\n    <ul>${textColors.map(c => renderColor('text', c))}</ul>\n\n    ${textColorContrastIssues.size > 0 ? renderContrastIssues(textColorContrastIssues) : ''}\n\n    <h2>${i18nString(UIStrings.fillColorsS, {PH1: fillColors.length})}</h2>\n    <ul>${fillColors.map(c => renderColor('fill', c))}</ul>\n\n    <h2>${i18nString(UIStrings.borderColorsS, {PH1: borderColors.length})}</h2>\n    <ul>${borderColors.map(c => renderColor('border', c))}</ul>`;\n  // clang-format on\n}\n\nfunction renderUnusedDeclarations(unusedDeclarations: Array<{title: string, nodes: UnusedDeclaration[]}>):\n    TemplateResult {\n  return unusedDeclarations.length > 0 ?\n      renderGroup(unusedDeclarations, 'unused-declarations') :\n      html`<div class=\"horizontally-padded\">${i18nString(UIStrings.thereAreNoUnusedDeclarations)}</div>`;\n}\n\nfunction renderMediaQueries(mediaQueries: Array<{title: string, nodes: Protocol.CSS.CSSMedia[]}>): TemplateResult {\n  return mediaQueries.length > 0 ?\n      renderGroup(mediaQueries, 'media-queries') :\n      html`<div class=\"horizontally-padded\">${i18nString(UIStrings.thereAreNoMediaQueries)}</div>`;\n}\n\nfunction renderFontInfo(fonts: Array<{font: string, fontMetrics: FontMetric[]}>): TemplateResult {\n  return fonts.length > 0 ? html`${fonts.map(({font, fontMetrics}) => html`\n    <section class=\"font-family\">\n      <h2>${font}</h2>\n      ${renderFontMetrics(font, fontMetrics)}\n    </section>`)}` :\n                            html`<div>${i18nString(UIStrings.thereAreNoFonts)}</div>`;\n}\n\nfunction renderFontMetrics(font: string, fontMetricInfo: FontMetric[]): TemplateResult {\n  return html`\n    <div class=\"font-metric\">\n      ${fontMetricInfo.map(({label, values}) => html`\n        <div>\n          <h3>${label}</h3>\n          ${renderGroup(values, 'font-info', `${font}/${label}`)}\n        </div>`)}\n    </div>`;\n}\n\nfunction renderGroup(\n    values: Array<{title: string, nodes: Array<number|UnusedDeclaration|Protocol.CSS.CSSMedia>}>, type: string,\n    path = ''): TemplateResult {\n  const total = values.reduce((prev, curr) => prev + curr.nodes.length, 0);\n\n  // clang-format off\n  return html`\n      <ul aria-label=${type}>\n        ${values.map(({title, nodes}) => {\n          const width = 100 * nodes.length / total;\n          const itemLabel = i18nString(UIStrings.nOccurrences, {n: nodes.length});\n\n          return html`<li>\n            <div class=\"title\">${title}</div>\n            <button data-type=${type} data-path=${path} data-label=${title}\n            jslog=${VisualLogging.action().track({click: true}).context(`css-overview.${type}`)}\n            aria-label=${`${title}: ${itemLabel}`}>\n              <div class=\"details\">${itemLabel}</div>\n              <div class=\"bar-container\">\n                <div class=\"bar\" style=${styleMap({width})}></div>\n              </div>\n            </button>\n          </li>`;\n        })}\n  </ul>`;\n  // clang-format on\n}\n\nfunction renderContrastIssues(issues: Map<string, ContrastIssue[]>): TemplateResult {\n  // clang-format off\n  return html`\n    <h2>${i18nString(UIStrings.contrastIssuesS, {PH1: issues.size})}</h2>\n    <ul>\n      ${[...issues.entries()].map(([key, value]) => renderContrastIssue(key, value))}\n    </ul>`;\n  // clang-format on\n}\n\nfunction renderContrastIssue(key: string, issues: ContrastIssue[]): TemplateResult {\n  console.assert(issues.length > 0);\n\n  let minContrastIssue: ContrastIssue = issues[0];\n  for (const issue of issues) {\n    // APCA contrast can be a negative value that is to be displayed. But the\n    // absolute value is used to compare against the threshold. Therefore, the min\n    // absolute value is the worst contrast.\n    if (Math.abs(issue.contrastRatio) < Math.abs(minContrastIssue.contrastRatio)) {\n      minContrastIssue = issue;\n    }\n  }\n\n  const color = (minContrastIssue.textColor.asString(Common.Color.Format.HEXA));\n  const backgroundColor = (minContrastIssue.backgroundColor.asString(Common.Color.Format.HEXA));\n\n  const showAPCA = Root.Runtime.experiments.isEnabled('apca');\n\n  const title = i18nString(UIStrings.textColorSOverSBackgroundResults, {\n    PH1: color,\n    PH2: backgroundColor,\n    PH3: issues.length,\n  });\n  const border = getBorderString(minContrastIssue.backgroundColor.asLegacyColor());\n\n  // clang-format off\n  return html`<li>\n    <button\n      title=${title} aria-label=${title}\n      data-type=\"contrast\" data-key=${key} data-section=\"contrast\" class=\"block\"\n      style=${styleMap({color, backgroundColor, border})}\n      jslog=${VisualLogging.action('css-overview.contrast').track({click: true})}>\n      Text\n    </button>\n    <div class=\"block-title\">\n      ${showAPCA ? html`\n        <div class=\"contrast-warning hidden\" $=\"apca\">\n          <span class=\"threshold-label\">${i18nString(UIStrings.apca)}</span>\n          ${minContrastIssue.thresholdsViolated.apca ? createClearIcon() : createCheckIcon()}\n        </div>` : html`\n        <div class=\"contrast-warning hidden\">\n          <span class=\"threshold-label\">${i18nString(UIStrings.aa)}</span>\n          ${minContrastIssue.thresholdsViolated.aa ? createClearIcon() : createCheckIcon()}\n        </div>\n        <div class=\"contrast-warning hidden\" $=\"aaa\">\n          <span class=\"threshold-label\">${i18nString(UIStrings.aaa)}</span>\n          ${minContrastIssue.thresholdsViolated.aaa ? createClearIcon() : createCheckIcon()}\n        </div>`}\n    </div>\n  </li>`;\n  // clang-format on\n}\n\nfunction renderColor(section: string, color: string): TemplateResult {\n  const borderColor = Common.Color.parse(color)?.asLegacyColor();\n  if (!borderColor) {\n    return html``;\n  }\n  // clang-format off\n  return html`<li>\n    <button title=${color} data-type=\"color\" data-color=${color}\n      data-section=${section} class=\"block\"\n      style=${styleMap({backgroundColor: color, border: getBorderString(borderColor)})}\n      jslog=${VisualLogging.action('css-overview.color').track({click: true})}>\n    </button>\n    <div class=\"block-title color-text\">${color}</div>\n  </li>`;\n  // clang-format on\n}\n\ntype PopulateNodesEvent = {\n  type: 'contrast',\n  key: string,\n  section: string|undefined,\n  nodes: ContrastIssue[],\n}|{\n  type: 'color',\n  color: string,\n  section: string | undefined,\n  nodes: Array<{nodeId: Protocol.DOM.BackendNodeId}>,\n}|{\n  type: 'unused-declarations',\n  declaration: string,\n  nodes: UnusedDeclaration[],\n}|{\n  type: 'media-queries',\n  text: string,\n  nodes: Protocol.CSS.CSSMedia[],\n}|{\n  type: 'font-info',\n  name: string,\n  nodes: Array<{nodeId: Protocol.DOM.BackendNodeId}>,\n};\n\nexport type PopulateNodesEventNodes = PopulateNodesEvent['nodes'];\nexport type PopulateNodesEventNodeTypes = PopulateNodesEventNodes[0];\n\nexport class CSSOverviewCompletedView extends UI.Widget.VBox {\n  onReset = (): void => {};\n  #selectedSection = 'summary';\n  #cssModel?: SDK.CSSModel.CSSModel;\n  #domModel?: SDK.DOMModel.DOMModel;\n  #linkifier: Components.Linkifier.Linkifier;\n  #viewMap: Map<string, ElementDetailsView>;\n  #data: OverviewData|null;\n  #view: View;\n  #viewOutput: ViewOutput = {\n    revealSection: new Map(),\n    closeAllTabs: () => {},\n    addTab: (_id, _tabTitle, _view, _jslogContext) => {}\n  };\n\n  constructor(element?: HTMLElement, view = DEFAULT_VIEW) {\n    super(element);\n    this.#view = view;\n    this.registerRequiredCSS(cssOverviewCompletedViewStyles);\n    this.#linkifier = new Components.Linkifier.Linkifier(/* maxLinkLength */ 20, /* useLinkDecorator */ true);\n    this.#viewMap = new Map();\n    this.#data = null;\n  }\n\n  set target(target: SDK.Target.Target|undefined) {\n    if (!target) {\n      return;\n    }\n    const cssModel = target.model(SDK.CSSModel.CSSModel);\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    if (!cssModel || !domModel) {\n      throw new Error('Target must provide CSS and DOM models');\n    }\n    this.#cssModel = cssModel;\n    this.#domModel = domModel;\n  }\n\n  #onSectionSelected(sectionId: string, withKeyboard: boolean): void {\n    const revealSection = this.#viewOutput.revealSection.get(sectionId);\n    if (!revealSection) {\n      return;\n    }\n\n    revealSection(withKeyboard);\n  }\n\n  #onReset(): void {\n    this.#reset();\n    this.onReset();\n  }\n\n  #reset(): void {\n    this.#viewOutput.closeAllTabs();\n    this.#viewMap = new Map();\n    CSSOverviewCompletedView.pushedNodes.clear();\n    this.#selectedSection = 'summary';\n    this.requestUpdate();\n  }\n\n  #onClick(evt: Event): void {\n    if (!evt.target) {\n      return;\n    }\n    const target = (evt.target as HTMLElement);\n    const dataset = target.dataset;\n\n    const type = dataset.type;\n    if (!type || !this.#data) {\n      return;\n    }\n\n    let payload: PopulateNodesEvent;\n    switch (type) {\n      case 'contrast': {\n        const section = dataset.section;\n        const key = dataset.key;\n\n        if (!key) {\n          return;\n        }\n\n        // Remap the Set to an object that is the same shape as the unused declarations.\n        const nodes = this.#data.textColorContrastIssues.get(key) || [];\n        payload = {type, key, nodes, section};\n        break;\n      }\n      case 'color': {\n        const color = dataset.color;\n        const section = dataset.section;\n        if (!color) {\n          return;\n        }\n\n        let nodes;\n        switch (section) {\n          case 'text':\n            nodes = this.#data.textColors.get(color);\n            break;\n\n          case 'background':\n            nodes = this.#data.backgroundColors.get(color);\n            break;\n\n          case 'fill':\n            nodes = this.#data.fillColors.get(color);\n            break;\n\n          case 'border':\n            nodes = this.#data.borderColors.get(color);\n            break;\n        }\n\n        if (!nodes) {\n          return;\n        }\n\n        // Remap the Set to an object that is the same shape as the unused declarations.\n        nodes = Array.from(nodes).map(nodeId => ({nodeId}));\n        payload = {type, color, nodes, section};\n        break;\n      }\n\n      case 'unused-declarations': {\n        const declaration = dataset.label;\n        if (!declaration) {\n          return;\n        }\n        const nodes = this.#data.unusedDeclarations.get(declaration);\n        if (!nodes) {\n          return;\n        }\n\n        payload = {type, declaration, nodes};\n        break;\n      }\n\n      case 'media-queries': {\n        const text = dataset.label;\n        if (!text) {\n          return;\n        }\n        const nodes = this.#data.mediaQueries.get(text);\n        if (!nodes) {\n          return;\n        }\n\n        payload = {type, text, nodes};\n        break;\n      }\n\n      case 'font-info': {\n        const value = dataset.label;\n        if (!dataset.path) {\n          return;\n        }\n\n        const [fontFamily, fontMetric] = dataset.path.split('/');\n        if (!value) {\n          return;\n        }\n\n        const fontFamilyInfo = this.#data.fontInfo.get(fontFamily);\n        if (!fontFamilyInfo) {\n          return;\n        }\n\n        const fontMetricInfo = fontFamilyInfo.get(fontMetric);\n        if (!fontMetricInfo) {\n          return;\n        }\n\n        const nodesIds = fontMetricInfo.get(value);\n        if (!nodesIds) {\n          return;\n        }\n\n        const nodes = nodesIds.map(nodeId => ({nodeId}));\n        const name = `${value} (${fontFamily}, ${fontMetric})`;\n        payload = {type, name, nodes};\n        break;\n      }\n\n      default:\n        return;\n    }\n\n    evt.consume();\n    this.#createElementsView(payload);\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    if (!this.#data || !('backgroundColors' in this.#data) || !('textColors' in this.#data)) {\n      return;\n    }\n\n    const viewInput = {\n      elementCount: this.#data.elementCount,\n      backgroundColors: this.#sortColorsByLuminance(this.#data.backgroundColors),\n      textColors: this.#sortColorsByLuminance(this.#data.textColors),\n      textColorContrastIssues: this.#data.textColorContrastIssues,\n      fillColors: this.#sortColorsByLuminance(this.#data.fillColors),\n      borderColors: this.#sortColorsByLuminance(this.#data.borderColors),\n      globalStyleStats: this.#data.globalStyleStats,\n      mediaQueries: this.#sortGroupBySize(this.#data.mediaQueries),\n      unusedDeclarations: this.#sortGroupBySize(this.#data.unusedDeclarations),\n      fontInfo: this.#sortFontInfo(this.#data.fontInfo),\n      selectedSection: this.#selectedSection,\n      onClick: this.#onClick.bind(this),\n      onSectionSelected: this.#onSectionSelected.bind(this),\n      onReset: this.#onReset.bind(this),\n    };\n    this.#view(viewInput, this.#viewOutput, this.element);\n  }\n\n  #createElementsView(payload: PopulateNodesEvent): void {\n    let id = '';\n    let tabTitle = '';\n\n    switch (payload.type) {\n      case 'contrast': {\n        const {section, key} = payload;\n        id = `${section}-${key}`;\n        tabTitle = i18nString(UIStrings.contrastIssues);\n        break;\n      }\n\n      case 'color': {\n        const {section, color} = payload;\n        id = `${section}-${color}`;\n        tabTitle = `${color.toUpperCase()} (${section})`;\n        break;\n      }\n\n      case 'unused-declarations': {\n        const {declaration} = payload;\n        id = `${declaration}`;\n        tabTitle = `${declaration}`;\n        break;\n      }\n\n      case 'media-queries': {\n        const {text} = payload;\n        id = `${text}`;\n        tabTitle = `${text}`;\n        break;\n      }\n\n      case 'font-info': {\n        const {name} = payload;\n        id = `${name}`;\n        tabTitle = `${name}`;\n        break;\n      }\n    }\n\n    let view = this.#viewMap.get(id);\n    if (!view) {\n      if (!this.#domModel || !this.#cssModel) {\n        throw new Error('Unable to initialize CSS overview, missing models');\n      }\n      view = new ElementDetailsView(this.#domModel, this.#cssModel, this.#linkifier);\n      view.data = payload.nodes;\n      this.#viewMap.set(id, view);\n    }\n\n    this.#viewOutput.addTab(id, tabTitle, view, payload.type);\n  }\n\n  #sortColorsByLuminance(srcColors: Map<string, Set<number>>): string[] {\n    return Array.from(srcColors.keys()).sort((colA, colB) => {\n      const colorA = Common.Color.parse(colA)?.asLegacyColor();\n      const colorB = Common.Color.parse(colB)?.asLegacyColor();\n      if (!colorA || !colorB) {\n        return 0;\n      }\n      return Common.ColorUtils.luminance(colorB.rgba()) - Common.ColorUtils.luminance(colorA.rgba());\n    });\n  }\n\n  #sortFontInfo(fontInfo: Map<string, Map<string, Map<string, number[]>>>):\n      Array<{font: string, fontMetrics: FontMetric[]}> {\n    const fonts = Array.from(fontInfo.entries());\n    return fonts.map(([font, fontMetrics]) => {\n      const fontMetricInfo = Array.from(fontMetrics.entries());\n      return {\n        font,\n        fontMetrics: fontMetricInfo.map(([label, values]) => {\n          return {label, values: this.#sortGroupBySize(values)};\n        })\n      };\n    });\n  }\n\n  #sortGroupBySize<T extends number|UnusedDeclaration|Protocol.CSS.CSSMedia>(items: Map<string, T[]>):\n      Array<{title: string, nodes: T[]}> {\n    // Sort by number of items descending.\n    return Array.from(items.entries())\n        .sort((d1, d2) => {\n          const v1Nodes = d1[1];\n          const v2Nodes = d2[1];\n          return v2Nodes.length - v1Nodes.length;\n        })\n        .map(([title, nodes]) => ({title, nodes}));\n  }\n\n  set overviewData(data: OverviewData) {\n    this.#data = data;\n    this.requestUpdate();\n  }\n\n  static readonly pushedNodes = new Set<Protocol.DOM.BackendNodeId>();\n}\n\ninterface ElementDetailsViewInput {\n  items: Array<{\n    data: PopulateNodesEventNodeTypes,\n    link?: HTMLElement,\n    showNode?: () => void,\n  }>;\n  visibility: Set<string>;\n}\ntype ElementDetailsViewFunction = (input: ElementDetailsViewInput, output: object, target: HTMLElement) => void;\n\nexport const ELEMENT_DETAILS_DEFAULT_VIEW: ElementDetailsViewFunction = (input, _output, target) => {\n  const {items, visibility} = input;\n  // clang-format off\n  render(html`\n    <div>\n      <devtools-data-grid class=\"element-grid\" striped inline\n         name=${i18nString(UIStrings.cssOverviewElements)}>\n        <table>\n          <tr>\n            ${visibility.has('node-id') ? html`\n              <th id=\"node-id\" weight=\"50\" sortable>\n                ${i18nString(UIStrings.element)}\n              </th>` : nothing}\n            ${visibility.has('declaration') ? html`\n              <th id=\"declaration\" weight=\"50\" sortable>\n                ${i18nString(UIStrings.declaration)}\n              </th>` : nothing}\n            ${visibility.has('source-url') ? html`\n              <th id=\"source-url\" weight=\"100\">\n                ${i18nString(UIStrings.source)}\n              </th>` : nothing}\n            ${visibility.has('contrast-ratio') ? html`\n              <th id=\"contrast-ratio\" weight=\"25\" width=\"150px\" sortable fixed>\n                ${i18nString(UIStrings.contrastRatio)}\n              </th>` : nothing}\n          </tr>\n          ${items.map(({data, link, showNode}) => html`\n            <tr>\n              ${visibility.has('node-id') ? renderNode(data, link, showNode) : nothing}\n              ${visibility.has('declaration') ? renderDeclaration(data) : nothing}\n              ${visibility.has('source-url') ? renderSourceURL(data, link) : nothing}\n              ${visibility.has('contrast-ratio') ? renderContrastRatio(data) : nothing}\n            </tr>`)}\n        </table>\n      </devtools-data-grid>\n    </div>`,\n    target);\n  // clang-format on\n};\n\nexport class ElementDetailsView extends UI.Widget.Widget {\n  #domModel: SDK.DOMModel.DOMModel;\n  readonly #cssModel: SDK.CSSModel.CSSModel;\n  readonly #linkifier: Components.Linkifier.Linkifier;\n  #data: PopulateNodesEventNodes;\n  readonly #view: ElementDetailsViewFunction;\n\n  constructor(\n      domModel: SDK.DOMModel.DOMModel, cssModel: SDK.CSSModel.CSSModel, linkifier: Components.Linkifier.Linkifier,\n      view: ElementDetailsViewFunction = ELEMENT_DETAILS_DEFAULT_VIEW) {\n    super();\n\n    this.#domModel = domModel;\n    this.#cssModel = cssModel;\n    this.#linkifier = linkifier;\n    this.#view = view;\n    this.#data = [];\n  }\n\n  set data(data: PopulateNodesEventNodes) {\n    this.#data = data;\n    this.requestUpdate();\n  }\n\n  override async performUpdate(): Promise<void> {\n    const visibility = new Set<string>();\n    if (!this.#data.length) {\n      this.#view({items: [], visibility}, {}, this.element);\n      return;\n    }\n\n    const [firstItem] = this.#data;\n    'nodeId' in firstItem && firstItem.nodeId && visibility.add('node-id');\n    'declaration' in firstItem && firstItem.declaration && visibility.add('declaration');\n    'sourceURL' in firstItem && firstItem.sourceURL && visibility.add('source-url');\n    'contrastRatio' in firstItem && firstItem.contrastRatio && visibility.add('contrast-ratio');\n\n    let relatedNodesMap: Map<Protocol.DOM.BackendNodeId, SDK.DOMModel.DOMNode|null>|null|undefined;\n    if ('nodeId' in firstItem && visibility.has('node-id')) {\n      // Grab the nodes from the frontend, but only those that have not been\n      // retrieved already.\n      const nodeIds = (this.#data as Array<{nodeId: Protocol.DOM.BackendNodeId}>).reduce((prev, curr) => {\n        const nodeId = curr.nodeId;\n        if (CSSOverviewCompletedView.pushedNodes.has(nodeId)) {\n          return prev;\n        }\n        CSSOverviewCompletedView.pushedNodes.add(nodeId);\n        return prev.add(nodeId);\n      }, new Set<Protocol.DOM.BackendNodeId>());\n      relatedNodesMap = await this.#domModel.pushNodesByBackendIdsToFrontend(nodeIds);\n    }\n\n    const items = await Promise.all(this.#data.map(async item => {\n      let link, showNode;\n      if ('nodeId' in item && visibility.has('node-id')) {\n        const frontendNode = relatedNodesMap?.get(item.nodeId) ?? null;\n        if (frontendNode) {\n          link = await Common.Linkifier.Linkifier.linkify(frontendNode) as HTMLElement;\n          showNode = () => frontendNode.scrollIntoView();\n        }\n      }\n      if ('range' in item && item.range && item.styleSheetId && visibility.has('source-url')) {\n        const ruleLocation = TextUtils.TextRange.TextRange.fromObject(item.range);\n        const styleSheetHeader = this.#cssModel.styleSheetHeaderForId(item.styleSheetId);\n        if (styleSheetHeader) {\n          const lineNumber = styleSheetHeader.lineNumberInSource(ruleLocation.startLine);\n          const columnNumber = styleSheetHeader.columnNumberInSource(ruleLocation.startLine, ruleLocation.startColumn);\n          const matchingSelectorLocation = new SDK.CSSModel.CSSLocation(styleSheetHeader, lineNumber, columnNumber);\n          link = this.#linkifier.linkifyCSSLocation(matchingSelectorLocation) as HTMLElement;\n        }\n      }\n\n      return {data: item, link, showNode};\n    }));\n\n    this.#view({items, visibility}, {}, this.element);\n  }\n}\n\nfunction renderNode(data: PopulateNodesEventNodeTypes, link?: HTMLElement, showNode?: () => void): TemplateResult {\n  if (!link) {\n    return html``;\n  }\n  return html`\n    <td>\n      ${link}\n      <devtools-icon part=\"show-element\" name=\"select-element\"\n          title=${i18nString(UIStrings.showElement)} tabindex=\"0\"\n          @click=${() => showNode?.()}></devtools-icon>\n    </td>`;\n}\n\nfunction renderDeclaration(data: PopulateNodesEventNodeTypes): TemplateResult {\n  if (!('declaration' in data)) {\n    throw new Error('Declaration entry is missing a declaration.');\n  }\n  return html`<td>${data.declaration}</td>`;\n}\n\nfunction renderSourceURL(data: PopulateNodesEventNodeTypes, link?: HTMLElement): TemplateResult {\n  if ('range' in data && data.range) {\n    if (!link) {\n      return html`<td>${i18nString(UIStrings.unableToLink)}</td>`;\n    }\n    return html`<td>${link}</td>`;\n  }\n  return html`<td>${i18nString(UIStrings.unableToLinkToInlineStyle)}</td>`;\n}\n\nfunction renderContrastRatio(data: PopulateNodesEventNodeTypes): TemplateResult {\n  if (!('contrastRatio' in data)) {\n    throw new Error('Contrast ratio entry is missing a contrast ratio.');\n  }\n  const showAPCA = Root.Runtime.experiments.isEnabled('apca');\n  const contrastRatio = Platform.NumberUtilities.floor(data.contrastRatio, 2);\n  const contrastRatioString = showAPCA ? contrastRatio + '%' : contrastRatio;\n  const border = getBorderString(data.backgroundColor);\n  const color = data.textColor.asString();\n  const backgroundColor = data.backgroundColor.asString();\n\n  // clang-format off\n  return html`\n    <td>\n      <div class=\"contrast-container-in-grid\">\n          <span class=\"contrast-preview\" style=${styleMap({border, color, backgroundColor})}>Aa</span>\n          <span>${contrastRatioString}</span>\n          ${showAPCA ?\n            html`\n            <span>${i18nString(UIStrings.apca)}</span>${data.thresholdsViolated.apca ? createClearIcon() : createCheckIcon()}`\n          : html`\n            <span>${i18nString(UIStrings.aa)}</span>${data.thresholdsViolated.aa ? createClearIcon() : createCheckIcon()}\n            <span>${i18nString(UIStrings.aaa)}</span>${data.thresholdsViolated.aaa ? createClearIcon() : createCheckIcon()}`\n          }\n      </div>\n    </td>`;\n  // clang-format on\n}\n\nfunction createClearIcon(): TemplateResult {\n  return html`\n    <devtools-icon name=\"clear\" class=\"small\" style=\"color:var(--icon-error);\"></devtools-icon>`;\n}\n\nfunction createCheckIcon(): TemplateResult {\n  return html`\n    <devtools-icon name=\"checkmark\" class=\"small\"\n        style=\"color:var(--icon-checkmark-green);></devtools-icon>`;\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/**\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n  .overview-completed-view {\n    overflow: auto;\n\n    --overview-default-padding: 28px;\n    --overview-icon-padding: 32px;\n  }\n\n  .overview-completed-view .summary ul,\n  .overview-completed-view .colors ul {\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  .overview-completed-view .summary ul {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 140px);\n    gap: 16px;\n  }\n\n  .overview-completed-view .colors ul li {\n    display: inline-block;\n    margin: 0 0 16px;\n    padding: 0 8px 0 0;\n  }\n\n  .overview-completed-view .summary ul li {\n    display: flex;\n    flex-direction: column;\n    grid-column-start: auto;\n  }\n\n  .overview-completed-view li .label {\n    font-size: 12px;\n    padding-bottom: 2px;\n  }\n\n  .overview-completed-view li .value {\n    font-size: 17px;\n  }\n\n  .overview-completed-view ul li span {\n    font-weight: bold;\n  }\n\n  .unused-rules-grid .header-container,\n  .unused-rules-grid .data-container,\n  .unused-rules-grid table.data {\n    position: relative;\n  }\n\n  .unused-rules-grid .data-container {\n    top: 0;\n    max-height: 350px;\n  }\n\n  .unused-rules-grid {\n    border-left: none;\n    border-right: none;\n  }\n  /** Ensure links are rendered at the correct height */\n\n  .unused-rules-grid .monospace {\n    display: block;\n    height: 18px;\n  }\n\n  .element-grid {\n    flex: 1;\n    border-left: none;\n    border-right: none;\n    overflow: auto;\n  }\n\n  .block {\n    width: 65px;\n    height: 25px;\n    border-radius: 3px;\n    margin-right: 16px;\n  }\n\n  .block-title {\n    padding-top: 4px;\n    font-size: 12px;\n    color: var(--sys-color-on-surface);\n    letter-spacing: 0;\n    text-transform: uppercase;\n  }\n\n  .block-title.color-text {\n    text-transform: none;\n    max-width: 65px;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    cursor: text;\n    user-select: text;\n    overflow: hidden;\n  }\n\n  .results-section {\n    flex-shrink: 0;\n    border-bottom: 1px solid var(--sys-color-divider);\n    padding: var(--overview-default-padding) 0 var(--overview-default-padding) 0;\n  }\n\n  .horizontally-padded {\n    padding-left: var(--overview-default-padding);\n    padding-right: var(--overview-default-padding);\n  }\n\n  .results-section h1 {\n    font-size: 15px;\n    font-weight: normal;\n    padding: 0;\n    margin: 0 0 20px;\n    padding-left: calc(var(--overview-default-padding) + var(--overview-icon-padding));\n    position: relative;\n    height: 26px;\n    line-height: 26px;\n  }\n\n  .results-section h1::before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    left: var(--overview-default-padding);\n    top: 0;\n    width: 26px;\n    height: 26px;\n    /* stylelint-disable-next-line custom-property-pattern */\n    background-image: var(--image-file-cssoverview_icons_2x);\n    background-size: 104px 26px;\n  }\n\n  .results-section.horizontally-padded h1 {\n    padding-left: var(--overview-icon-padding);\n  }\n\n  .results-section.horizontally-padded h1::before {\n    left: 0;\n  }\n\n  .results-section.summary h1 {\n    padding-left: 0;\n  }\n\n  .results-section.summary h1::before {\n    display: none;\n  }\n\n  .results-section.colors h1::before {\n    background-position: 0 0;\n  }\n\n  .results-section.font-info h1::before {\n    background-position: -26px 0;\n  }\n\n  .results-section.unused-declarations h1::before {\n    background-position: -52px 0;\n  }\n\n  .results-section.media-queries h1::before {\n    background-position: -78px 0;\n  }\n\n  .results-section.colors h2 {\n    margin-top: 20px;\n    font-size: 13px;\n    font-weight: normal;\n  }\n\n  .overview-completed-view .font-info ul,\n  .overview-completed-view .media-queries ul,\n  .overview-completed-view .unused-declarations ul {\n    width: 100%;\n    list-style: none;\n    margin: 0;\n    padding: 0 var(--overview-default-padding);\n  }\n\n  .overview-completed-view .font-info ul li,\n  .overview-completed-view .media-queries ul li,\n  .overview-completed-view .unused-declarations ul li {\n    display: grid;\n    grid-template-columns: 2fr 3fr;\n    gap: 12px;\n    margin-bottom: 4px;\n    align-items: center;\n  }\n\n  .overview-completed-view .font-info button .details,\n  .overview-completed-view .media-queries button .details,\n  .overview-completed-view .unused-declarations button .details {\n    min-width: 100px;\n    text-align: right;\n    margin-right: 8px;\n    color: var(--sys-color-primary);\n    pointer-events: none;\n  }\n\n  .overview-completed-view .font-info button .bar-container,\n  .overview-completed-view .media-queries button .bar-container,\n  .overview-completed-view .unused-declarations button .bar-container {\n    flex: 1;\n    pointer-events: none;\n  }\n\n  .overview-completed-view .font-info button .bar,\n  .overview-completed-view .media-queries button .bar,\n  .overview-completed-view .unused-declarations button .bar {\n    height: 8px;\n    background: var(--sys-color-primary-bright);\n    border-radius: 2px;\n    min-width: 2px;\n  }\n\n  .overview-completed-view .font-info button,\n  .overview-completed-view .media-queries button,\n  .overview-completed-view .unused-declarations button {\n    border: none;\n    padding: 0;\n    padding-right: 10px;\n    margin: 0;\n    display: flex;\n    align-items: center;\n    border-radius: 2px;\n    cursor: pointer;\n    height: 28px;\n    background: none;\n\n    &:focus-visible {\n      outline: 2px solid var(--sys-color-state-focus-ring);\n    }\n\n    &:hover {\n      border-radius: 12px;\n      background: var(--sys-color-state-hover-on-subtle);\n    }\n\n    &:hover .details,\n    &:focus .details {\n      color: color-mix(in srgb, var(--sys-color-primary), var(--sys-color-state-hover-on-prominent) 6%);\n    }\n\n    &:hover .bar,\n    &:focus .bar {\n      background-color: color-mix(in srgb, var(--sys-color-primary-bright), var(--sys-color-state-hover-on-prominent) 6%);\n      color: var(--sys-color-on-primary);\n    }\n  }\n\n  .overview-completed-view .font-info .font-metric {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n    gap: 12px;\n  }\n\n  .overview-completed-view .font-info ul {\n    padding: 0;\n  }\n\n  .overview-completed-view .font-info ul li {\n    grid-template-columns: 1fr 4fr;\n  }\n\n  .overview-completed-view .font-info h2 {\n    font-size: 14px;\n    font-weight: bold;\n    margin: 0 0 1em;\n  }\n\n  .overview-completed-view .font-info h3 {\n    font-size: 13px;\n    font-weight: normal;\n    font-style: italic;\n    margin: 0 0 0.5em;\n  }\n\n  .overview-completed-view .font-info {\n    padding-bottom: 0;\n  }\n\n  .overview-completed-view .font-family {\n    padding: var(--overview-default-padding);\n  }\n\n  .overview-completed-view .font-family:nth-child(2n+1) {\n    background: var(--sys-color-cdt-base-container);\n  }\n\n  .overview-completed-view .font-family:first-of-type {\n    padding-top: 0;\n  }\n\n  .contrast-warning {\n    display: flex;\n    align-items: center;\n    margin-top: 2px;\n  }\n\n  .contrast-warning .threshold-label {\n    font-weight: normal;\n    width: 30px;\n  }\n\n  .contrast-warning devtools-icon {\n    margin-left: 2px;\n  }\n\n  .contrast-preview {\n    padding: 0 5px;\n  }\n\n  .contrast-container-in-grid {\n    display: flex;\n    align-items: center;\n  }\n\n  .contrast-container-in-grid > * {\n    margin-right: 5px;\n    min-width: initial;\n  }\n\n  ::part(node-id-column) {\n    align-items: center;\n    height: 20px;\n\n    --show-element-display: none;\n  }\n\n  ::part(node-id-column):focus,\n  ::part(node-id-column):hover {\n    --show-element-display: inline-block;\n  }\n\n  ::part(show-element) {\n    display: var(--show-element-display);\n    height: 16px;\n    width: 16px;\n  }\n\n  .results-section.colors {\n    forced-color-adjust: none; /* show colors in high contrast theme */\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./cssOverviewCompletedView.css')} */`;", "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives, html, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport cssOverviewSidebarPanelStyles from './cssOverviewSidebarPanel.css.js';\n\nconst {classMap} = Directives;\n\nconst UIStrings = {\n  /**\n   * @description Label for the 'Clear overview' button in the CSS overview report\n   */\n  clearOverview: 'Clear overview',\n  /**\n   * @description Accessible label for the CSS overview panel sidebar\n   */\n  cssOverviewPanelSidebar: 'CSS overview panel sidebar',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewSidebarPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ViewInput {\n  items: Array<{name: string, id: string}>;\n  selectedId?: string;\n  onReset: () => void;\n  onItemClick: (id: string) => void;\n  onItemKeyDown: (id: string, key: string) => void;\n}\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  const onClick = (event: Event): void => {\n    if (event.target instanceof HTMLElement) {\n      const id = event.target.dataset.id;\n      if (id) {\n        input.onItemClick(id);\n      }\n    }\n  };\n  const onKeyDown = (event: KeyboardEvent): void => {\n    if (event.key !== 'Enter' && event.key !== 'ArrowUp' && event.key !== 'ArrowDown') {\n      return;\n    }\n    if (event.target instanceof HTMLElement) {\n      const id = event.target.dataset.id;\n      if (id) {\n        input.onItemKeyDown(id, event.key);\n      }\n    }\n\n    event.consume(true);\n  };\n\n  // clang-format off\n  render(html`\n      <style>${cssOverviewSidebarPanelStyles}</style>\n      <div class=\"overview-sidebar-panel\" @click=${onClick} @keydown=${onKeyDown}\n           aria-label=${i18nString(UIStrings.cssOverviewPanelSidebar)} role=\"tree\">\n        <div class=\"overview-toolbar\">\n          <devtools-toolbar>\n            <devtools-button title=${i18nString(UIStrings.clearOverview)} @click=${input.onReset}\n                .iconName=${'clear'} .variant=${Buttons.Button.Variant.TOOLBAR}\n                .jslogContext=${'css-overview.clear-overview'}></devtools-button>\n          </devtools-toolbar>\n        </div>\n        ${input.items.map(({id, name}) => {\n          const selected = id === input.selectedId;\n          return html`\n            <div class=\"overview-sidebar-panel-item ${classMap({selected})}\"\n                ?autofocus=${selected}\n                role=\"treeitem\" data-id=${id} tabindex=\"0\"\n                jslog=${VisualLogging.item(`css-overview.${id}`)\n                          .track({click: true, keydown: 'Enter|ArrowUp|ArrowDown'})}>\n              ${name}\n            </div>`;\n        })}\n      </div>`,\n      target);\n  // clang-format on\n};\n\nexport class CSSOverviewSidebarPanel extends UI.Widget.VBox {\n  #view: View;\n  #items: Array<{name: string, id: string}> = [];\n  #selectedId?: string;\n  #onItemSelected = (_id: string, _shouldFocus: boolean): void => {};\n  #onReset = (): void => {};\n\n  constructor(element?: HTMLElement, view = DEFAULT_VIEW) {\n    super(element, {useShadowDom: true, delegatesFocus: true});\n    this.#view = view;\n  }\n\n  override performUpdate(): void {\n    const viewInput = {\n      items: this.#items,\n      selectedId: this.#selectedId,\n      onReset: this.#onReset,\n      onItemClick: this.#onItemClick.bind(this),\n      onItemKeyDown: this.#onItemKeyDown.bind(this)\n    };\n    this.#view(viewInput, {}, this.contentElement);\n  }\n\n  set items(items: Array<{name: string, id: string}>) {\n    this.#items = items;\n    this.requestUpdate();\n  }\n\n  set selectedId(id: string) {\n    void this.#select(id);\n  }\n\n  set onItemSelected(callback: (id: string, shouldFocus: boolean) => void) {\n    this.#onItemSelected = callback;\n    this.requestUpdate();\n  }\n\n  set onReset(callback: () => void) {\n    this.#onReset = callback;\n    this.requestUpdate();\n  }\n\n  #select(id: string, shouldFocus = false): Promise<boolean> {\n    this.#selectedId = id;\n    this.requestUpdate();\n    this.#onItemSelected(id, shouldFocus);\n    return this.updateComplete;\n  }\n\n  #onItemClick(id: string): void {\n    void this.#select(id, false);\n  }\n\n  #onItemKeyDown(id: string, key: string): void {\n    if (key === 'Enter') {\n      void this.#select(id, true);\n    } else {  // arrow up/down key\n      let currItemIndex = -1;\n      for (let idx = 0; idx < this.#items.length; idx++) {\n        if (this.#items[idx].id === id) {\n          currItemIndex = idx;\n          break;\n        }\n      }\n      if (currItemIndex < 0) {\n        return;\n      }\n\n      const moveTo = (key === 'ArrowDown' ? 1 : -1);\n      const nextItemIndex = (currItemIndex + moveTo) % this.#items.length;\n      const nextItemId = this.#items[nextItemIndex].id;\n      if (!nextItemId) {\n        return;\n      }\n\n      void this.#select(nextItemId, false).then(() => {\n        this.element.blur();\n        this.element.focus();\n      });\n    }\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/**\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n@scope to (devtools-widget > *) {\n  .overview-sidebar-panel {\n    display: flex;\n    background: var(--sys-color-cdt-base-container);\n    min-width: fit-content;\n    flex-direction: column;\n  }\n\n  .overview-sidebar-panel-item {\n    height: 30px;\n    padding-left: 30px;\n    display: flex;\n    align-items: center;\n    color: var(--sys-color-on-surface);\n    white-space: nowrap;\n\n    &:hover {\n      background: var(--sys-color-state-hover-on-subtle);\n    }\n\n    &:focus {\n      background: var(--sys-color-state-focus-highlight);\n    }\n\n    &.selected {\n      background: var(--sys-color-tonal-container);\n      color: var(--sys-color-on-tonal-container);\n    }\n  }\n\n  .overview-toolbar {\n    border-bottom: 1px solid var(--sys-color-divider);\n    flex: 0 0 auto;\n  }\n\n  .overview-sidebar-panel-item:focus-visible {\n    outline-width: unset;\n  }\n\n  @media (forced-colors: active) {\n    .overview-sidebar-panel-item.selected {\n      forced-color-adjust: none; /* crbug.com/1166705 workaround */\n      background: Highlight;\n      color: HighlightText;\n    }\n\n    .overview-sidebar-panel-item:hover {\n      forced-color-adjust: none; /* crbug.com/1166705 workaround */\n      background: Highlight;\n      color: HighlightText;\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./cssOverviewSidebarPanel.css')} */`;", "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\n\nimport {type ContrastIssue, CSSOverviewCompletedView, type OverviewData} from './CSSOverviewCompletedView.js';\nimport {CSSOverviewModel, type GlobalStyleStats} from './CSSOverviewModel.js';\nimport {CSSOverviewProcessingView} from './CSSOverviewProcessingView.js';\nimport {CSSOverviewStartView} from './CSSOverviewStartView.js';\nimport type {UnusedDeclaration} from './CSSOverviewUnusedDeclarations.js';\n\nconst {widgetConfig} = UI.Widget;\n\ninterface ViewInput {\n  state: 'start'|'processing'|'completed';\n  onStartCapture: () => void;\n  onCancel: () => void;\n  onReset: () => void;\n  overviewData: OverviewData;\n  target?: SDK.Target.Target;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  // clang-format off\n  render(input.state === 'start' ?  html`\n      <devtools-widget .widgetConfig=${widgetConfig(CSSOverviewStartView, {onStartCapture: input.onStartCapture})}></devtools-widget>`\n    : input.state === 'processing' ?  html`\n      <devtools-widget .widgetConfig=${widgetConfig(CSSOverviewProcessingView, {onCancel: input.onCancel})}></devtools-widget>`\n    : html`\n      <devtools-widget .widgetConfig=${widgetConfig(CSSOverviewCompletedView, {\n      onReset: input.onReset,\n      overviewData: input.overviewData,\n      target: input.target,\n    })}></devtools-widget>`,\n    target);\n  // clang-format on\n};\n\nexport class CSSOverviewPanel extends UI.Panel.Panel implements SDK.TargetManager.Observer {\n  #currentUrl: string;\n  #model?: CSSOverviewModel;\n  #backgroundColors!: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  #textColors!: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  #fillColors!: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  #borderColors!: Map<string, Set<Protocol.DOM.BackendNodeId>>;\n  #fontInfo!: Map<string, Map<string, Map<string, Protocol.DOM.BackendNodeId[]>>>;\n  #mediaQueries!: Map<string, Protocol.CSS.CSSMedia[]>;\n  #unusedDeclarations!: Map<string, UnusedDeclaration[]>;\n  #elementCount!: number;\n  #globalStyleStats!: GlobalStyleStats;\n  #textColorContrastIssues!: Map<string, ContrastIssue[]>;\n  #state!: 'start'|'processing'|'completed';\n  #view: View;\n\n  constructor(view = DEFAULT_VIEW) {\n    super('css-overview');\n    this.#currentUrl = SDK.TargetManager.TargetManager.instance().inspectedURL();\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.INSPECTED_URL_CHANGED, this.#checkUrlAndResetIfChanged, this);\n\n    this.#view = view;\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n    this.#reset();\n  }\n\n  #onStartCapture(): void {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.CaptureCssOverviewClicked);\n    void this.#startOverview();\n  }\n\n  #checkUrlAndResetIfChanged(): void {\n    if (this.#currentUrl === SDK.TargetManager.TargetManager.instance().inspectedURL()) {\n      return;\n    }\n\n    this.#currentUrl = SDK.TargetManager.TargetManager.instance().inspectedURL();\n    this.#reset();\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    if (target !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.#model = target.model(CSSOverviewModel) ?? undefined;\n  }\n\n  targetRemoved(): void {\n  }\n\n  #getModel(): CSSOverviewModel {\n    if (!this.#model) {\n      throw new Error('Did not retrieve model information yet.');\n    }\n    return this.#model;\n  }\n\n  #reset(): void {\n    this.#backgroundColors = new Map();\n    this.#textColors = new Map();\n    this.#fillColors = new Map();\n    this.#borderColors = new Map();\n    this.#fontInfo = new Map();\n    this.#mediaQueries = new Map();\n    this.#unusedDeclarations = new Map();\n    this.#elementCount = 0;\n    this.#globalStyleStats = {\n      styleRules: 0,\n      inlineStyles: 0,\n      externalSheets: 0,\n      stats: {\n        // Simple.\n        type: 0,\n        class: 0,\n        id: 0,\n        universal: 0,\n        attribute: 0,\n\n        // Non-simple.\n        nonSimple: 0,\n      },\n    };\n    this.#textColorContrastIssues = new Map();\n    this.#renderInitialView();\n  }\n\n  #renderInitialView(): void {\n    this.#state = 'start';\n    this.performUpdate();\n  }\n\n  #renderOverviewStartedView(): void {\n    this.#state = 'processing';\n    this.performUpdate();\n  }\n\n  #renderOverviewCompletedView(): void {\n    this.#state = 'completed';\n    this.performUpdate();\n  }\n\n  override performUpdate(): void {\n    const viewInput = {\n      state: this.#state,\n      onStartCapture: this.#onStartCapture.bind(this),\n      onCancel: this.#reset.bind(this),\n      onReset: this.#reset.bind(this),\n      target: this.#model?.target(),\n      overviewData: {\n        backgroundColors: this.#backgroundColors,\n        textColors: this.#textColors,\n        textColorContrastIssues: this.#textColorContrastIssues,\n        fillColors: this.#fillColors,\n        borderColors: this.#borderColors,\n        globalStyleStats: this.#globalStyleStats,\n        fontInfo: this.#fontInfo,\n        elementCount: this.#elementCount,\n        mediaQueries: this.#mediaQueries,\n        unusedDeclarations: this.#unusedDeclarations,\n      },\n    };\n    this.#view(viewInput, {}, this.contentElement);\n  }\n\n  async #startOverview(): Promise<void> {\n    this.#renderOverviewStartedView();\n\n    const model = this.#getModel();\n    const [globalStyleStats, { elementCount, backgroundColors, textColors, textColorContrastIssues, fillColors, borderColors, fontInfo, unusedDeclarations }, mediaQueries] = await Promise.all([\n      model.getGlobalStylesheetStats(),\n      model.getNodeStyleStats(),\n      model.getMediaQueries(),\n    ]);\n\n    if (elementCount) {\n      this.#elementCount = elementCount;\n    }\n\n    if (globalStyleStats) {\n      this.#globalStyleStats = globalStyleStats;\n    }\n\n    if (mediaQueries) {\n      this.#mediaQueries = mediaQueries;\n    }\n\n    if (backgroundColors) {\n      this.#backgroundColors = backgroundColors;\n    }\n\n    if (textColors) {\n      this.#textColors = textColors;\n    }\n\n    if (textColorContrastIssues) {\n      this.#textColorContrastIssues = textColorContrastIssues;\n    }\n\n    if (fillColors) {\n      this.#fillColors = fillColors;\n    }\n\n    if (borderColors) {\n      this.#borderColors = borderColors;\n    }\n\n    if (fontInfo) {\n      this.#fontInfo = fontInfo;\n    }\n\n    if (unusedDeclarations) {\n      this.#unusedDeclarations = unusedDeclarations;\n    }\n\n    this.#renderOverviewCompletedView();\n  }\n}\n", "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/panel_feedback/panel_feedback.js';\nimport '../../ui/components/panel_introduction_steps/panel_introduction_steps.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\n\nimport cssOverviewStartViewStyles from './cssOverviewStartView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Label for the capture button in the CSS overview panel\n   */\n  captureOverview: 'Capture overview',\n  /**\n   * @description Header for the summary of CSS overview\n   */\n  identifyCSSImprovements: 'Identify potential CSS improvements',\n  /**\n   * @description First point of the summarized features of CSS overview\n   */\n  capturePageCSSOverview: 'Capture an overview of your page’s CSS',\n  /**\n   * @description Second point of the summarized features of CSS overview\n   */\n  identifyCSSImprovementsWithExampleIssues:\n      'Identify potential CSS improvements (e.g. low contrast issues, unused declarations, color or font mismatches)',\n  /**\n   * @description Third point of the summarized features of CSS overview\n   */\n  locateAffectedElements: 'Locate the affected elements in the Elements panel',\n  /**\n   * @description Title of the link to the quick start video and documentation to CSS overview panel\n   */\n  quickStartWithCSSOverview: 'Quick start: get started with the new CSS overview panel',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewStartView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst FEEDBACK_LINK = 'https://g.co/devtools/css-overview-feedback' as Platform.DevToolsPath.UrlString;\nconst DOC_LINK = 'https://developer.chrome.com/docs/devtools/css-overview' as Platform.DevToolsPath.UrlString;\n\ninterface ViewInput {\n  onStartCapture: () => void;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nconst DEFAULT_VIEW: View = (input, output, target) => {\n  // Disabled until https://crbug.com/1079231 is fixed.\n  // clang-format off\n  render(html`\n    <style>${cssOverviewStartViewStyles}</style>\n    <div class=\"css-overview-start-view\">\n      <devtools-panel-introduction-steps>\n        <span slot=\"title\">${i18nString(UIStrings.identifyCSSImprovements)}</span>\n        <span slot=\"step-1\">${i18nString(UIStrings.capturePageCSSOverview)}</span>\n        <span slot=\"step-2\">${i18nString(UIStrings.identifyCSSImprovementsWithExampleIssues)}</span>\n        <span slot=\"step-3\">${i18nString(UIStrings.locateAffectedElements)}</span>\n      </devtools-panel-introduction-steps>\n      <div class=\"start-capture-wrapper\">\n        <devtools-button\n          class=\"start-capture\"\n          autofocus\n          .variant=${Buttons.Button.Variant.PRIMARY}\n          .jslogContext=${'css-overview.capture-overview'}\n          @click=${input.onStartCapture}>\n          ${i18nString(UIStrings.captureOverview)}\n        </devtools-button>\n      </div>\n      <devtools-panel-feedback .data=${{\n          feedbackUrl: FEEDBACK_LINK,\n          quickStartUrl: DOC_LINK,\n          quickStartLinkText: i18nString(UIStrings.quickStartWithCSSOverview),\n        }}>\n      </devtools-panel-feedback>\n      <devtools-feedback-button .data=${{\n        feedbackUrl: FEEDBACK_LINK,\n        }}>\n      </devtools-feedback-button>\n    </div>`,\n    target);\n  // clang-format on\n};\n\nexport class CSSOverviewStartView extends UI.Widget.Widget {\n  #view: View;\n  onStartCapture = (): void => {};\n\n  constructor(element?: HTMLElement, view = DEFAULT_VIEW) {\n    super(element, {useShadowDom: true, delegatesFocus: true});\n    this.#view = view;\n    this.performUpdate();\n  }\n\n  override performUpdate(): void {\n    this.#view({onStartCapture: this.onStartCapture}, {}, this.contentElement);\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/**\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n  h1 {\n    font-weight: normal;\n  }\n\n  .css-overview-start-view {\n    padding: 24px;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--sys-color-cdt-base-container);\n    overflow: auto;\n  }\n\n  .start-capture-wrapper {\n    width: fit-content;\n  }\n\n  .preview-feature {\n    padding: 12px 16px;\n    border: 1px solid var(--sys-color-neutral-outline);\n    color: var(--sys-color-on-surface);\n    font-size: 13px;\n    line-height: 20px;\n    border-radius: 12px;\n    margin: 42px 0;\n    letter-spacing: 0.01em;\n  }\n\n  .preview-header {\n    color: var(--sys-color-primary);\n    font-size: 13px;\n    line-height: 20px;\n    letter-spacing: 0.01em;\n    margin: 9px 0 14px;\n  }\n\n  .preview-icon {\n    vertical-align: middle;\n  }\n\n  .feedback-prompt {\n    margin-bottom: 24px;\n  }\n\n  .feedback-prompt .devtools-link {\n    color: -webkit-link;\n    cursor: pointer;\n    text-decoration: underline;\n  }\n\n  .resources {\n    display: flex;\n    flex-direction: row;\n  }\n\n  .thumbnail-wrapper {\n    width: 144px;\n    height: 92px;\n    margin-right: 20px;\n  }\n\n  .video-doc-header {\n    font-size: 13px;\n    line-height: 20px;\n    letter-spacing: 0.04em;\n    color: var(--sys-color-on-surface);\n    margin-bottom: 2px;\n  }\n\n  devtools-feedback-button {\n    align-self: flex-end;\n  }\n\n  .resources .devtools-link {\n    font-size: 14px;\n    line-height: 22px;\n    letter-spacing: 0.04em;\n    text-decoration-line: underline;\n    color: var(--sys-color-primary);\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./cssOverviewStartView.css')} */`;"],
  "mappings": "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",
  "names": ["item", "nodes", "i18n", "UIStrings", "str_", "i18nString", "DEFAULT_VIEW", "Common", "i18n", "Root", "SDK", "UI", "Directives", "html", "render", "VisualLogging", "DEFAULT_VIEW", "i18n", "Buttons", "UI", "html", "render", "UIStrings", "str_", "i18nString", "DEFAULT_VIEW", "render", "html", "Directives", "UIStrings", "str_", "i18nString", "DEFAULT_VIEW", "render", "html", "item", "DEFAULT_VIEW", "SDK", "UI", "html", "render", "i18n", "Buttons", "UI", "html", "render", "UIStrings", "str_", "i18nString", "DEFAULT_VIEW", "render", "html", "widgetConfig", "DEFAULT_VIEW", "render", "html"]
}
