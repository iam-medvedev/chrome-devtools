{"version":3,"file":"CSSOverviewStartView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/css_overview/CSSOverviewStartView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,sDAAsD,CAAC;AAC9D,OAAO,0EAA0E,CAAC;AAElF,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,KAAK,OAAO,MAAM,wCAAwC,CAAC;AAClE,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,EAAC,IAAI,EAAE,MAAM,EAAC,MAAM,qBAAqB,CAAC;AAEjD,OAAO,0BAA0B,MAAM,+BAA+B,CAAC;AAEvE,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,eAAe,EAAE,kBAAkB;IACnC;;OAEG;IACH,uBAAuB,EAAE,qCAAqC;IAC9D;;OAEG;IACH,sBAAsB,EAAE,wCAAwC;IAChE;;OAEG;IACH,wCAAwC,EACpC,+GAA+G;IACnH;;OAEG;IACH,sBAAsB,EAAE,oDAAoD;IAC5E;;OAEG;IACH,yBAAyB,EAAE,0DAA0D;CAC7E,CAAC;AACX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,6CAA6C,EAAE,SAAS,CAAC,CAAC;AACnG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,aAAa,GAAG,6CAAgF,CAAC;AACvG,MAAM,QAAQ,GAAG,yDAA4F,CAAC;AAQ9G,MAAM,YAAY,GAAS,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE;IACnD,qDAAqD;IACrD,mBAAmB;IACnB,MAAM,CAAC,IAAI,CAAA;aACA,0BAA0B;;;6BAGV,UAAU,CAAC,SAAS,CAAC,uBAAuB,CAAC;8BAC5C,UAAU,CAAC,SAAS,CAAC,sBAAsB,CAAC;8BAC5C,UAAU,CAAC,SAAS,CAAC,wCAAwC,CAAC;8BAC9D,UAAU,CAAC,SAAS,CAAC,sBAAsB,CAAC;;;;;;qBAMrD,8CAA8B;0BACzB,+BAA+B;mBACtC,KAAK,CAAC,cAAc;YAC3B,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC;;;uCAGV;QAC7B,WAAW,EAAE,aAAa;QAC1B,aAAa,EAAE,QAAQ;QACvB,kBAAkB,EAAE,UAAU,CAAC,SAAS,CAAC,yBAAyB,CAAC;KACpE;;wCAE+B;QAChC,WAAW,EAAE,aAAa;KACzB;;WAEE,EACP,MAAM,CAAC,CAAC;IACV,kBAAkB;AACpB,CAAC,CAAC;AAEF,MAAM,OAAO,oBAAqB,SAAQ,EAAE,CAAC,MAAM,CAAC,MAAM;IACxD,KAAK,CAAO;IACZ,cAAc,GAAG,GAAS,EAAE,GAAE,CAAC,CAAC;IAEhC,YAAY,OAAqB,EAAE,IAAI,GAAG,YAAY;QACpD,KAAK,CAAC,OAAO,EAAE,EAAC,YAAY,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEQ,aAAa;QACpB,IAAI,CAAC,KAAK,CAAC,EAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAC,EAAE,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC7E,CAAC;CACF","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/panel_feedback/panel_feedback.js';\nimport '../../ui/components/panel_introduction_steps/panel_introduction_steps.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\n\nimport cssOverviewStartViewStyles from './cssOverviewStartView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Label for the capture button in the CSS overview panel\n   */\n  captureOverview: 'Capture overview',\n  /**\n   * @description Header for the summary of CSS overview\n   */\n  identifyCSSImprovements: 'Identify potential CSS improvements',\n  /**\n   * @description First point of the summarized features of CSS overview\n   */\n  capturePageCSSOverview: 'Capture an overview of your pageâ€™s CSS',\n  /**\n   * @description Second point of the summarized features of CSS overview\n   */\n  identifyCSSImprovementsWithExampleIssues:\n      'Identify potential CSS improvements (e.g. low contrast issues, unused declarations, color or font mismatches)',\n  /**\n   * @description Third point of the summarized features of CSS overview\n   */\n  locateAffectedElements: 'Locate the affected elements in the Elements panel',\n  /**\n   * @description Title of the link to the quick start video and documentation to CSS overview panel\n   */\n  quickStartWithCSSOverview: 'Quick start: get started with the new CSS overview panel',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewStartView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst FEEDBACK_LINK = 'https://g.co/devtools/css-overview-feedback' as Platform.DevToolsPath.UrlString;\nconst DOC_LINK = 'https://developer.chrome.com/docs/devtools/css-overview' as Platform.DevToolsPath.UrlString;\n\ninterface ViewInput {\n  onStartCapture: () => void;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nconst DEFAULT_VIEW: View = (input, output, target) => {\n  // Disabled until https://crbug.com/1079231 is fixed.\n  // clang-format off\n  render(html`\n    <style>${cssOverviewStartViewStyles}</style>\n    <div class=\"css-overview-start-view\">\n      <devtools-panel-introduction-steps>\n        <span slot=\"title\">${i18nString(UIStrings.identifyCSSImprovements)}</span>\n        <span slot=\"step-1\">${i18nString(UIStrings.capturePageCSSOverview)}</span>\n        <span slot=\"step-2\">${i18nString(UIStrings.identifyCSSImprovementsWithExampleIssues)}</span>\n        <span slot=\"step-3\">${i18nString(UIStrings.locateAffectedElements)}</span>\n      </devtools-panel-introduction-steps>\n      <div class=\"start-capture-wrapper\">\n        <devtools-button\n          class=\"start-capture\"\n          autofocus\n          .variant=${Buttons.Button.Variant.PRIMARY}\n          .jslogContext=${'css-overview.capture-overview'}\n          @click=${input.onStartCapture}>\n          ${i18nString(UIStrings.captureOverview)}\n        </devtools-button>\n      </div>\n      <devtools-panel-feedback .data=${{\n          feedbackUrl: FEEDBACK_LINK,\n          quickStartUrl: DOC_LINK,\n          quickStartLinkText: i18nString(UIStrings.quickStartWithCSSOverview),\n        }}>\n      </devtools-panel-feedback>\n      <devtools-feedback-button .data=${{\n        feedbackUrl: FEEDBACK_LINK,\n        }}>\n      </devtools-feedback-button>\n    </div>`,\n    target);\n  // clang-format on\n};\n\nexport class CSSOverviewStartView extends UI.Widget.Widget {\n  #view: View;\n  onStartCapture = (): void => {};\n\n  constructor(element?: HTMLElement, view = DEFAULT_VIEW) {\n    super(element, {useShadowDom: true, delegatesFocus: true});\n    this.#view = view;\n    this.performUpdate();\n  }\n\n  override performUpdate(): void {\n    this.#view({onStartCapture: this.onStartCapture}, {}, this.contentElement);\n  }\n}\n"]}