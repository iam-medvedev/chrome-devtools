{"version":3,"file":"IPProtectionView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/security/IPProtectionView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAC7B,2DAA2D;AAE3D,OAAO,sCAAsC,CAAC;AAC9C,OAAO,oCAAoC,CAAC;AAE5C,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,KAAK,GAAG,MAAM,qBAAqB,CAAC;AAE3C,OAAO,sBAAsB,MAAM,2BAA2B,CAAC;AAE/D,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,GAAG,GAAG,CAAC;AAC3B,MAAM,EAAC,YAAY,EAAC,GAAG,EAAE,CAAC,MAAM,CAAC;AAEjC,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,SAAS,EAAE,8BAA8B;IACzC;;OAEG;IACH,eAAe,EAAE,kEAAkE;IACnF;;OAEG;IACH,SAAS,EAAE,sBAAsB;IACjC;;OAEG;IACH,eAAe,EAAE,4BAA4B;IAC7C;;OAEG;IACH,cAAc,EAAE,sBAAsB;IACtC;;OAEG;IACH,aAAa,EAAE,2EAA2E;CAClF,CAAC;AAEX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,qCAAqC,EAAE,SAAS,CAAC,CAAC;AAC3F,MAAM,CAAC,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC7E,MAAM,CAAC,MAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEzF,MAAM,yBAAyB,GAAG,kFACC,CAAC;AAIpC,MAAM,CAAC,MAAM,YAAY,GAAS,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE;IACrD,mBAAmB;IACnB,MAAM,CAAC,IAAI,CAAA;;QAEL,sBAAsB;;MAExB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAA;;;;kBAIjC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;gCACjB,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC;;;;;;;4CAOzB,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;;wBAEnD,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC;;;;;;;;;;;;KAYxD,CAAC,CAAC,CAAC,IAAI,CAAA;;;;0BAIc,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,EAAE;QACvD,MAAM,EAAE,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC;QAC5C,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;QACzC,IAAI,EAAE,yBAAyB;KAChC,CAAC;;;GAGT;GACA,EAAE,MAAM,CAAC,CAAC;IACX,kBAAkB;AACpB,CAAC,CAAC;AAEF,MAAM,OAAO,gBAAiB,SAAQ,EAAE,CAAC,MAAM,CAAC,IAAI;IAClD,KAAK,CAAO;IAEZ,YAAY,OAAqB,EAAE,OAAa,YAAY;QAC1D,KAAK,CAAC,OAAO,EAAE,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;QACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEQ,aAAa;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC9C,CAAC;CACF","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../ui/components/switch/switch.js';\nimport '../../ui/components/cards/cards.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\n\nimport ipProtectionViewStyles from './ipProtectionView.css.js';\n\nconst {render, html} = Lit;\nconst {widgetConfig} = UI.Widget;\n\nconst UIStrings = {\n  /**\n   *@description Title in the view's header for the IP Protection tool in the Privacy & Security panel\n   */\n  viewTitle: 'IP Protection Proxy Controls',\n  /**\n   *@description Explanation in the view's header about the purpose of this IP Protection tool\n   */\n  viewExplanation: 'Test how this site will perform if IP Proxy is enabled in Chrome',\n  /**\n   *@description Title in the card within the IP Protection tool\n   */\n  cardTitle: 'Bypass IP Protection',\n  /**\n   *@description Description in the card within the IP Protection tool\n   */\n  cardDescription: 'Only when DevTools is open',\n  /**\n   * @description Text informing the user that IP Proxy is not available\n   */\n  notInIncognito: 'IP proxy unavailable',\n  /**\n   * @description Description in the widget instructing users to open site in incognito\n   */\n  openIncognito: 'IP proxy is only available within incognito mode. Open site in incognito.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/security/IPProtectionView.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport const i18nFormatString = i18n.i18n.getFormatLocalizedString.bind(undefined, str_);\n\nconst INCOGNITO_EXPLANATION_URL = 'https://support.google.com/chrome/answer/95464?hl=en&co=GENIE.Platform%3DDesktop' as\n    Platform.DevToolsPath.UrlString;\n\nexport type View = (input: object, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _, target) => {\n  // clang-format off\n  render(html`\n    <style>\n      ${ipProtectionViewStyles}\n    </style>\n    ${Root.Runtime.hostConfig.isOffTheRecord ? html`\n      <div class=\"overflow-auto\">\n        <div class=\"ip-protection\">\n          <div class=\"header\">\n            <h1>${i18nString(UIStrings.viewTitle)}</h1>\n            <div class=\"body\">${i18nString(UIStrings.viewExplanation)}</div>\n          </div>\n          <devtools-card class=\"card-container\">\n            <div class=\"card\">\n              <div class=\"card-header\">\n                <div class=\"lhs\">\n                  <div class=\"text\">\n                    <h2 class=\"main-text\">${i18nString(UIStrings.cardTitle)}</h2>\n                    <div class=\"body-subtext\">\n                      ${i18nString(UIStrings.cardDescription)}\n                    </div>\n                  </div>\n                  <div>\n                    <devtools-switch></devtools-switch>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </devtools-card>\n        </div>\n      </div>\n    ` : html`\n      <div class=\"empty-report\">\n        <devtools-widget\n          class=\"learn-more\"\n          .widgetConfig=${widgetConfig(UI.EmptyWidget.EmptyWidget, {\n            header: i18nString(UIStrings.notInIncognito),\n            text: i18nString(UIStrings.openIncognito),\n            link: INCOGNITO_EXPLANATION_URL,\n          })}>\n        </devtools-widget>\n      </div>\n  `}\n  `, target);\n  // clang-format on\n};\n\nexport class IPProtectionView extends UI.Widget.VBox {\n  #view: View;\n\n  constructor(element?: HTMLElement, view: View = DEFAULT_VIEW) {\n    super(element, {useShadowDom: true});\n    this.#view = view;\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    this.#view(this, this, this.contentElement);\n  }\n}\n"]}