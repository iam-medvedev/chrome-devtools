{"version":3,"file":"IPProtectionView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/security/IPProtectionView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../ui/components/switch/switch.js';\nimport '../../ui/components/cards/cards.js';\nimport '../../ui/legacy/components/data_grid/data_grid.js';\nimport '../../ui/components/buttons/buttons.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\n\nimport ipProtectionViewStyles from './ipProtectionView.css.js';\n\nconst {render, html} = Lit;\nconst {widgetConfig} = UI.Widget;\n\nconst UIStrings = {\n  /**\n   *@description Title in the view's header for the IP Protection tool in the Privacy & Security panel\n   */\n  viewTitle: 'IP Protection Proxy Controls',\n  /**\n   *@description Explanation in the view's header about the purpose of this IP Protection tool\n   */\n  viewExplanation: 'Test how this site will perform if IP Proxy is enabled in Chrome',\n  /**\n   *@description Title in the card within the IP Protection tool\n   */\n  cardTitle: 'IP Protection Proxy Status',\n  /**\n   *@description Subheading for bypassing IP protection toggle\n   */\n  bypassTitle: 'Bypass IP Protection',\n  /**\n   *@description Description of bypass IP protection toggle\n   */\n  bypassDescription: 'Temporarily bypass IP protection for testing',\n  /**\n   * @description Text informing the user that IP Proxy is not available\n   */\n  notInIncognito: 'IP proxy unavailable',\n  /**\n   * @description Description in the widget instructing users to open site in incognito\n   */\n  openIncognito: 'IP proxy is only available within incognito mode. Open site in incognito.',\n  /**\n   * @description Column header for the ID of a proxy request in the Proxy Request View panel.\n   */\n  idColumn: 'ID',\n  /**\n   * @description Column header for the URL of a proxy request in the Proxy Request View panel.\n   */\n  urlColumn: 'URL',\n  /**\n   * @description Column header for the HTTP method of a proxy request in the Proxy Request View panel.\n   */\n  methodColumn: 'Method',\n  /**\n   * @description Column header for the status code of a proxy request in the Proxy Request View panel.\n   */\n  statusColumn: 'Status',\n  /**\n   * @description Title for the grid of proxy requests.\n   */\n  proxyRequests: 'Proxy Requests',\n  /**\n   * @description The status text for the available status of the IP protection proxy.\n   */\n  Available: 'IP Protection is enabled and active.',\n  /**\n   * @description The status text for when the feature is not enabled.\n   */\n  FeatureNotEnabled: 'IP Protection feature is not enabled.',\n  /**\n   * @description The status text for when the masked domain list is not enabled.\n   */\n  MaskedDomainListNotEnabled: 'Masked Domain List feature is not enabled.',\n  /**\n   * @description The status text for when the masked domain list is not populated.\n   */\n  MaskedDomainListNotPopulated: 'Masked Domain List is not populated.',\n  /**\n   * @description The status text for when authentication tokens are unavailable.\n   */\n  AuthTokensUnavailable: 'Limit for authentication tokens was reached. IP Protection will be paused.',\n  /**\n   * @description The status text for when the proxy is unavailable for another reason.\n   */\n  Unavailable: 'IP Protection is unavailable.',\n  /**\n   * @description The status text for when the proxy is bypassed by DevTools.\n   */\n  BypassedByDevTools: 'IP Protection is being bypassed by DevTools.',\n  /**\n   * @description The status text for when the status is unknown or being loaded.\n   */\n  statusUnknown: 'Status unknown',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/security/IPProtectionView.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// Explicitly reference dynamically referenced UIStrings to prevent the linter from removing\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst allStatusStrings = [\n  UIStrings.Available,\n  UIStrings.FeatureNotEnabled,\n  UIStrings.MaskedDomainListNotEnabled,\n  UIStrings.MaskedDomainListNotPopulated,\n  UIStrings.AuthTokensUnavailable,\n  UIStrings.Unavailable,\n  UIStrings.BypassedByDevTools,\n  UIStrings.statusUnknown,\n];\nconst INCOGNITO_EXPLANATION_URL = 'https://support.google.com/chrome/answer/95464?hl=en&co=GENIE.Platform%3DDesktop' as\n    Platform.DevToolsPath.UrlString;\n\n// A simplified representation of a network request for mock data.\ninterface MockNetworkRequest {\n  requestId: string;\n  url: string;\n  requestMethod: string;\n  statusCode: number;\n}\n\nexport interface ViewInput {\n  status: Protocol.Network.IpProxyStatus|null;\n  proxyRequests: readonly MockNetworkRequest[];\n}\nexport type View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _, target) => {\n  const {status} = input;\n  const statusText = status ? i18nString(UIStrings[status]) : i18nString(UIStrings.statusUnknown);\n\n  // clang-format off\n  const cardHeader = html`\n    <div class=\"card-header\">\n      <div class=\"lhs\">\n        <div class=\"text\">\n          <h2 class=\"main-text\">${i18nString(UIStrings.cardTitle)}</h2>\n          <div class=\"body subtext\">${statusText}</div>\n        </div>\n      </div>\n      <div class=\"status-badge\">\n       ${\n      status === Protocol.Network.IpProxyStatus.Available ?\n          html`<devtools-icon class=\"status-icon green-status-icon\" role=\"presentation\" name=\"check-circle\"></devtools-icon>` :\n          html`<devtools-icon class=\"status-icon red-status-icon\" role=\"presentation\" name=\"cross-circle-filled\"></devtools-icon>`}\n      </div>\n    </div>\n  `;\n  render(\n      html`\n    <style>\n      ${ipProtectionViewStyles}\n    </style>\n    ${\n          Root.Runtime.hostConfig.isOffTheRecord ? html`\n      <div class=\"overflow-auto\">\n        <div class=\"ip-protection\">\n          <div class=\"header\">\n            <h1>${i18nString(UIStrings.viewTitle)}</h1>\n            <div class=\"body\">${i18nString(UIStrings.viewExplanation)}</div>\n          </div>\n          <devtools-card class=\"card-container\">\n            <div class=\"card\">\n              ${cardHeader}\n              <div>\n                <div class=\"card-row\">\n                  <div class=\"lhs\">\n                    <h3 class=\"main-text\">${i18nString(UIStrings.bypassTitle)}</h3>\n                    <div class=\"body subtext\">${i18nString(UIStrings.bypassDescription)}</div>\n                  </div>\n                  <div>\n                    <devtools-switch></devtools-switch>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </devtools-card>\n          <devtools-data-grid striped name=${i18nString(UIStrings.proxyRequests)}>\n          <table>\n            <thead>\n              <tr>\n                <th id=\"id\" sortable>${i18nString(UIStrings.idColumn)}</th>\n                <th id=\"url\" sortable>${i18nString(UIStrings.urlColumn)}</th>\n                <th id=\"method\" sortable>${i18nString(UIStrings.methodColumn)}</th>\n                <th id=\"status\" sortable>${i18nString(UIStrings.statusColumn)}</th>\n              </tr>\n            </thead>\n            <tbody id=\"proxy-requests-body\">\n              ${input.proxyRequests.map((request, index) => html`\n                <tr data-request-id=${request.requestId}>\n                  <td>${index + 1}</td>\n                  <td>${request.url}</td>\n                  <td>${request.requestMethod}</td>\n                  <td>${String(request.statusCode)}</td>\n                </tr>\n              `)}\n            </tbody>\n          </table>\n        </devtools-data-grid>\n        </div>\n      </div>\n    ` :\n    html`\n      <div class=\"empty-report\">\n        <devtools-widget\n          class=\"learn-more\"\n          .widgetConfig=${widgetConfig(UI.EmptyWidget.EmptyWidget, {\n                                          header: i18nString(UIStrings.notInIncognito),\n                                          text: i18nString(UIStrings.openIncognito),\n                                          link: INCOGNITO_EXPLANATION_URL,\n                                        })}>\n        </devtools-widget>\n      </div>\n    `}\n  `,\n    target);\n  // clang-format on\n};\nexport class IPProtectionView extends UI.Widget.VBox {\n  #view: View;\n  #proxyRequests: MockNetworkRequest[] = [];\n  #status: Protocol.Network.IpProxyStatus|null = null;\n\n  constructor(element?: HTMLElement, view: View = DEFAULT_VIEW) {\n    super(element, {useShadowDom: true});\n    this.#view = view;\n\n    // TODO(crbug.com/429153435): Replace with real data.\n    this.#proxyRequests = [\n      {requestId: '1', url: 'https://example.com/api/data', requestMethod: 'GET', statusCode: 200},\n      {requestId: '2', url: 'https://example.com/api/submit', requestMethod: 'POST', statusCode: 404},\n      {requestId: '3', url: 'https://example.com/assets/style.css', requestMethod: 'GET', statusCode: 200},\n    ];\n  }\n\n  override async wasShown(): Promise<void> {\n    super.wasShown();\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n        this.#updateIpProtectionStatus, this);\n    await this.#updateIpProtectionStatus();\n  }\n\n  override willHide(): void {\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n        this.#updateIpProtectionStatus, this);\n    super.willHide();\n  }\n\n  async #updateIpProtectionStatus(): Promise<void> {\n    const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    if (!target) {\n      this.#status = null;\n      this.requestUpdate();\n      return;\n    }\n    const model = target.model(SDK.NetworkManager.NetworkManager);\n    if (!model) {\n      this.#status = null;\n      this.requestUpdate();\n      return;\n    }\n    const status = await model.getIpProtectionProxyStatus();\n    this.#status = status;\n    this.requestUpdate();\n  }\n\n  get proxyRequests(): readonly MockNetworkRequest[] {\n    return this.#proxyRequests;\n  }\n\n  override performUpdate(): void {\n    const input = {status: this.#status, proxyRequests: this.#proxyRequests};\n    this.#view(input, this, this.contentElement);\n  }\n}\n"]}