{"version":3,"file":"IPProtectionView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/security/IPProtectionView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../ui/components/switch/switch.js';\nimport '../../ui/components/cards/cards.js';\nimport '../../ui/legacy/components/data_grid/data_grid.js';\nimport '../../ui/components/buttons/buttons.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\n\nimport ipProtectionViewStyles from './ipProtectionView.css.js';\n\nconst {render, html} = Lit;\nconst {widgetConfig} = UI.Widget;\n\nconst UIStrings = {\n  /**\n   *@description Title in the view's header for the IP Protection tool in the Privacy & Security panel\n   */\n  viewTitle: 'IP Protection Proxy Controls',\n  /**\n   *@description Explanation in the view's header about the purpose of this IP Protection tool\n   */\n  viewExplanation: 'Test how this site will perform if IP Proxy is enabled in Chrome',\n  /**\n   *@description Title in the card within the IP Protection tool\n   */\n  cardTitle: 'Bypass IP Protection',\n  /**\n   *@description Description in the card within the IP Protection tool\n   */\n  cardDescription: 'Only when DevTools is open',\n  /**\n   * @description Text informing the user that IP Proxy is not available\n   */\n  notInIncognito: 'IP proxy unavailable',\n  /**\n   * @description Description in the widget instructing users to open site in incognito\n   */\n  openIncognito: 'IP proxy is only available within incognito mode. Open site in incognito.',\n  /**\n   * @description Column header for the ID of a proxy request in the Proxy Request View panel.\n   */\n  idColumn: 'ID',\n  /**\n   * @description Column header for the URL of a proxy request in the Proxy Request View panel.\n   */\n  urlColumn: 'URL',\n  /**\n   * @description Column header for the HTTP method of a proxy request in the Proxy Request View panel.\n   */\n  methodColumn: 'Method',\n  /**\n   * @description Column header for the status code of a proxy request in the Proxy Request View panel.\n   */\n  statusColumn: 'Status',\n  /**\n   * @description Title for the grid of proxy requests.\n   */\n  proxyRequests: 'Proxy Requests',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/security/IPProtectionView.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst INCOGNITO_EXPLANATION_URL = 'https://support.google.com/chrome/answer/95464?hl=en&co=GENIE.Platform%3DDesktop' as\n    Platform.DevToolsPath.UrlString;\n\n// A simplified representation of a network request for mock data.\ninterface MockNetworkRequest {\n  requestId: string;\n  url: string;\n  requestMethod: string;\n  statusCode: number;\n}\n\nexport type View = (input: IPProtectionView, output: IPProtectionView, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _, target) => {\n  // clang-format off\n  render(html`\n    <style>\n      ${ipProtectionViewStyles}\n    </style>\n    <div class=\"ip-protection\">\n      <div class=\"header\">\n        <h1>${i18nString(UIStrings.viewTitle)}</h1>\n        <div class=\"body\">${i18nString(UIStrings.viewExplanation)}</div>\n      </div>\n      ${Root.Runtime.hostConfig.isOffTheRecord ? html`\n        <devtools-card class=\"card-container\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <div class=\"lhs\">\n                <div class=\"text\">\n                  <h2 class=\"main-text\">${i18nString(UIStrings.cardTitle)}</h2>\n                  <div class=\"body-subtext\">\n                    ${i18nString(UIStrings.cardDescription)}\n                  </div>\n                </div>\n                <div>\n                  <devtools-switch></devtools-switch>\n                </div>\n              </div>\n            </div>\n          </div>\n        </devtools-card>\n        <devtools-data-grid striped name=${i18nString(UIStrings.proxyRequests)}>\n          <table>\n            <thead>\n              <tr>\n                <th id=\"id\" sortable>${i18nString(UIStrings.idColumn)}</th>\n                <th id=\"url\" sortable>${i18nString(UIStrings.urlColumn)}</th>\n                <th id=\"method\" sortable>${i18nString(UIStrings.methodColumn)}</th>\n                <th id=\"status\" sortable>${i18nString(UIStrings.statusColumn)}</th>\n              </tr>\n            </thead>\n            <tbody id=\"proxy-requests-body\">\n              ${input.proxyRequests.map((request, index) => html`\n                <tr data-request-id=${request.requestId}>\n                  <td>${index + 1}</td>\n                  <td>${request.url}</td>\n                  <td>${request.requestMethod}</td>\n                  <td>${String(request.statusCode)}</td>\n                </tr>\n              `)}\n            </tbody>\n          </table>\n        </devtools-data-grid>\n        ` : html`\n        <div class=\"empty-report\">\n          <devtools-widget\n            class=\"learn-more\"\n            .widgetConfig=${widgetConfig(UI.EmptyWidget.EmptyWidget, {\n              header: i18nString(UIStrings.notInIncognito),\n              text: i18nString(UIStrings.openIncognito),\n              link: INCOGNITO_EXPLANATION_URL,\n            })}>\n          </devtools-widget>\n        </div>\n      `}\n    </div>\n  `, target, {host: input});\n  // clang-format on\n};\n\nexport class IPProtectionView extends UI.Widget.VBox {\n  #view: View;\n  #proxyRequests: MockNetworkRequest[] = [];\n\n  constructor(element?: HTMLElement, view: View = DEFAULT_VIEW) {\n    super(element, {useShadowDom: true});\n    this.#view = view;\n    this.registerRequiredCSS(ipProtectionViewStyles);\n\n    // TODO(crbug.com/429153435): Replace with real data.\n    this.#proxyRequests = [\n      {requestId: '1', url: 'https://example.com/api/data', requestMethod: 'GET', statusCode: 200},\n      {requestId: '2', url: 'https://example.com/api/submit', requestMethod: 'POST', statusCode: 404},\n      {requestId: '3', url: 'https://example.com/assets/style.css', requestMethod: 'GET', statusCode: 200},\n    ];\n\n    this.requestUpdate();\n  }\n\n  get proxyRequests(): readonly MockNetworkRequest[] {\n    return this.#proxyRequests;\n  }\n\n  override performUpdate(): void {\n    this.#view(this, this, this.contentElement);\n  }\n}\n"]}