{
  "version": 3,
  "sources": ["security-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Security from './security.js';\n\nconst UIStrings = {\n  /**\n   *@description Default Title of the security panel\n   */\n  security: 'Security',\n  /**\n   *@description Title of privacy and security panel. This is used when the kDevToolsPrivacyUI feature flag is enabled.\n   */\n  PrivacyAndSecurity: 'Privacy and security',\n  /**\n   *@description Default command to open the security panel\n   */\n  showSecurity: 'Show Security',\n  /**\n   *@description Command to open the privacy and security panel. This is used when the kDevToolPrivacyUI feature flag is enabled\n   */\n  showPrivacyAndSecurity: 'Show Privacy and security',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/security/security-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedSecurityModule: (typeof Security|undefined);\n\nasync function loadSecurityModule(): Promise<typeof Security> {\n  if (!loadedSecurityModule) {\n    loadedSecurityModule = await import('./security.js');\n  }\n  return loadedSecurityModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'security',\n  title: () => Root.Runtime.hostConfig.devToolsPrivacyUI?.enabled ? i18nLazyString(UIStrings.PrivacyAndSecurity)() :\n                                                                    i18nLazyString(UIStrings.security)(),\n  commandPrompt: () => Root.Runtime.hostConfig.devToolsPrivacyUI?.enabled ?\n      i18nLazyString(UIStrings.showPrivacyAndSecurity)() :\n      i18nLazyString(UIStrings.showSecurity)(),\n  order: 80,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const Security = await loadSecurityModule();\n    return Security.SecurityPanel.SecurityPanel.instance();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      Security.CookieReportView.CookieReportView,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.SECURITY_PANEL,\n  async loadRevealer() {\n    const Security = await loadSecurityModule();\n    return new Security.SecurityPanel.SecurityRevealer();\n  },\n});\n"],
  "mappings": ";AAIA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,QAAQ;AAEpB,YAAY,cAAc;AAE1B,IAAM,YAAY;;;;EAIhB,UAAU;;;;EAIV,oBAAoB;;;;EAIpB,cAAc;;;;EAId,wBAAwB;;AAG1B,IAAM,OAAY,UAAK,kBAAkB,oCAAoC,SAAS;AACtF,IAAM,iBAAsB,UAAK,iCAAiC,KAAK,QAAW,IAAI;AAEtF,IAAI;AAEJ,eAAe,qBAAkB;AAC/B,MAAI,CAAC,sBAAsB;AACzB,2BAAuB,MAAM,OAAO,eAAe;EACrD;AACA,SAAO;AACT;AAEG,eAAY,sBAAsB;EACnC,UAAQ;EACR,IAAI;EACJ,OAAO,MAAW,aAAQ,WAAW,mBAAmB,UAAU,eAAe,UAAU,kBAAkB,EAAC,IAC5C,eAAe,UAAU,QAAQ,EAAC;EACpG,eAAe,MAAW,aAAQ,WAAW,mBAAmB,UAC5D,eAAe,UAAU,sBAAsB,EAAC,IAChD,eAAe,UAAU,YAAY,EAAC;EAC1C,OAAO;EACP,aAAW;EACX,MAAM,WAAQ;AACZ,UAAMA,YAAW,MAAM,mBAAkB;AACzC,WAAOA,UAAS,cAAc,cAAc,SAAQ;EACtD;CACD;AAEM,gBAAS,iBAAiB;EAC/B,eAAY;AACV,WAAO;MACI,0BAAiB;;EAE9B;EACA,aAAoB,gBAAS,oBAAoB;EACjD,MAAM,eAAY;AAChB,UAAMA,YAAW,MAAM,mBAAkB;AACzC,WAAO,IAAIA,UAAS,cAAc,iBAAgB;EACpD;CACD;",
  "names": ["Security"]
}
