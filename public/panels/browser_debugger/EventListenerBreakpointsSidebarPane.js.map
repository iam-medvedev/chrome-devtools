{"version":3,"file":"EventListenerBreakpointsSidebarPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/browser_debugger/EventListenerBreakpointsSidebarPane.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,KAAK,aAAa,MAAM,2CAA2C,CAAC;AAE3E,OAAO,EAAC,iCAAiC,EAAC,MAAM,wCAAwC,CAAC;AAEzF,IAAI,2CAAgF,CAAC;AAErF,MAAM,OAAO,mCAAoC,SAAQ,iCAAiC;IACxF;QACE,IAAI,WAAW,GACX,GAAG,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,wBAAwB,EAAE,CAAC;QAClF,MAAM,iBAAiB,GAAG,GAAG,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,QAAQ,EAAE,CAAC,wBAAwB,EAAE,CAAC;QAClH,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAEpD,KAAK,CACD,WAAW,EAAE,GAAG,aAAa,CAAC,OAAO,CAAC,oCAAoC,CAAC,EAAE,EAC7E,oCAAoC,CAAC,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,QAAQ;QACb,IAAI,CAAC,2CAA2C,EAAE,CAAC;YACjD,2CAA2C,GAAG,IAAI,mCAAmC,EAAE,CAAC;QAC1F,CAAC;QACD,OAAO,2CAA2C,CAAC;IACrD,CAAC;IAEQ,8BAA8B,CAAC,OAAgD;QAEtF,MAAM,OAAO,GAAG,OAAO,CAAC,OAA0E,CAAC;QACnG,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,aAAa,GACf,OAAO,IAAI,GAAG,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,8BAA8B,CAAC,OAAO,CAAC,CAAC;QAC1G,IAAI,aAAa,EAAE,CAAC;YAClB,OAAO,aAAa,CAAC;QACvB,CAAC;QACD,OAAO,GAAG,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,QAAQ,EAAE,CAAC,8BAA8B,CAAC,OAAO,CAAC,CAAC;IAC9G,CAAC;CACF","sourcesContent":["// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {CategorizedBreakpointsSidebarPane} from './CategorizedBreakpointsSidebarPane.js';\n\nlet eventListenerBreakpointsSidebarPaneInstance: EventListenerBreakpointsSidebarPane;\n\nexport class EventListenerBreakpointsSidebarPane extends CategorizedBreakpointsSidebarPane {\n  private constructor() {\n    let breakpoints: SDK.CategorizedBreakpoint.CategorizedBreakpoint[] =\n        SDK.DOMDebuggerModel.DOMDebuggerManager.instance().eventListenerBreakpoints();\n    const nonDomBreakpoints = SDK.EventBreakpointsModel.EventBreakpointsManager.instance().eventListenerBreakpoints();\n    breakpoints = breakpoints.concat(nonDomBreakpoints);\n\n    super(\n        breakpoints, `${VisualLogging.section('sources.event-listener-breakpoints')}`,\n        'sources.event-listener-breakpoints');\n  }\n\n  static instance(): EventListenerBreakpointsSidebarPane {\n    if (!eventListenerBreakpointsSidebarPaneInstance) {\n      eventListenerBreakpointsSidebarPaneInstance = new EventListenerBreakpointsSidebarPane();\n    }\n    return eventListenerBreakpointsSidebarPaneInstance;\n  }\n\n  override getBreakpointFromPausedDetails(details: SDK.DebuggerModel.DebuggerPausedDetails):\n      SDK.CategorizedBreakpoint.CategorizedBreakpoint|null {\n    const auxData = details.auxData as SDK.DebuggerModel.EventListenerPausedDetailsAuxData | undefined;\n    if (!auxData) {\n      return null;\n    }\n    const domBreakpoint =\n        auxData && SDK.DOMDebuggerModel.DOMDebuggerManager.instance().resolveEventListenerBreakpoint(auxData);\n    if (domBreakpoint) {\n      return domBreakpoint;\n    }\n    return SDK.EventBreakpointsModel.EventBreakpointsManager.instance().resolveEventListenerBreakpoint(auxData);\n  }\n}\n"]}