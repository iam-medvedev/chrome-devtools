{"version":3,"file":"CategorizedBreakpointsSidebarPane.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/browser_debugger/CategorizedBreakpointsSidebarPane.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {CategorizedBreakpoint} from '../../core/sdk/CategorizedBreakpoint.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {assertScreenshot, renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {createViewFunctionStub, type ViewFunctionStub} from '../../testing/ViewFunctionHelpers.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as BrowserDebugger from './browser_debugger.js';\n\nclass TestSidebarPane extends BrowserDebugger.CategorizedBreakpointsSidebarPane.CategorizedBreakpointsSidebarPane {\n  readonly view:\n      ViewFunctionStub<typeof BrowserDebugger.CategorizedBreakpointsSidebarPane.CategorizedBreakpointsSidebarPane>;\n  readonly breakpoints: CategorizedBreakpoint[];\n  breakpointFromPausedDetails: CategorizedBreakpoint|null = null;\n\n  constructor() {\n    const breakpoints: SDK.CategorizedBreakpoint.CategorizedBreakpoint[] = [\n      new SDK.CategorizedBreakpoint.CategorizedBreakpoint(SDK.CategorizedBreakpoint.Category.LOAD, 'different'),\n      new SDK.CategorizedBreakpoint.CategorizedBreakpoint(SDK.CategorizedBreakpoint.Category.ANIMATION, 'bnimation'),\n      new SDK.CategorizedBreakpoint.CategorizedBreakpoint(SDK.CategorizedBreakpoint.Category.CANVAS, 'also_animation'),\n      new SDK.CategorizedBreakpoint.CategorizedBreakpoint(SDK.CategorizedBreakpoint.Category.ANIMATION, 'animation'),\n    ];\n    const view =\n        createViewFunctionStub(BrowserDebugger.CategorizedBreakpointsSidebarPane.CategorizedBreakpointsSidebarPane);\n    super(breakpoints, 'view', 'view', view);\n    this.view = view;\n    this.breakpoints = breakpoints;\n  }\n\n  override getBreakpointFromPausedDetails(): SDK.CategorizedBreakpoint.CategorizedBreakpoint|null {\n    return this.breakpointFromPausedDetails;\n  }\n}\n\ndescribeWithMockConnection('CategorizedBreakpointsSidebarPane', () => {\n  it('sorts and groups the breakpoint', async () => {\n    const pane = new TestSidebarPane();\n    pane.update();\n    const input = await pane.view.nextInput;\n    assert.deepEqual(input.sortedCategoryNames, [\n      SDK.CategorizedBreakpoint.Category.ANIMATION,\n      SDK.CategorizedBreakpoint.Category.CANVAS,\n      SDK.CategorizedBreakpoint.Category.LOAD,\n    ]);\n\n    assert.deepEqual(\n        input.categories.get(SDK.CategorizedBreakpoint.Category.ANIMATION), [pane.breakpoints[1], pane.breakpoints[3]]);\n    assert.deepEqual(input.categories.get(SDK.CategorizedBreakpoint.Category.CANVAS), [pane.breakpoints[2]]);\n    assert.deepEqual(input.categories.get(SDK.CategorizedBreakpoint.Category.LOAD), [pane.breakpoints[0]]);\n  });\n\n  it('passes filterText', async () => {\n    const pane = new TestSidebarPane();\n    pane.update();\n    const input = await pane.view.nextInput;\n    assert.isNull(input.filterText);\n    input.onFilterChanged('filter');\n    const postInput = await pane.view.nextInput;\n    assert.strictEqual(postInput.filterText, 'filter');\n  });\n\n  it('enables breakpoints', async () => {\n    const pane = new TestSidebarPane();\n    pane.update();\n    const input = await pane.view.nextInput;\n    assert.isFalse(pane.breakpoints[1].enabled());\n    input.onBreakpointChange(pane.breakpoints[1], true);\n    assert.isTrue(pane.breakpoints[1].enabled());\n  });\n\n  it('highlights the hit breakpoint from debugger paused details', async () => {\n    const pane = new TestSidebarPane();\n    pane.update();\n    const input = await pane.view.nextInput;\n    assert.isNull(input.highlightedItem);\n\n    pane.breakpointFromPausedDetails = pane.breakpoints[0];\n\n    const target = createTarget();\n    UI.Context.Context.instance().setFlavor(SDK.Target.Target, target);\n\n    const model = target.model(SDK.DebuggerModel.DebuggerModel);\n    assert.exists(model);\n    sinon.stub(model, 'debuggerPausedDetails')\n        .returns(sinon.createStubInstance(SDK.DebuggerModel.DebuggerPausedDetails));\n\n    sinon.stub(UI.ViewManager.ViewManager.instance(), 'showView');\n    pane.update();\n\n    const postInput = await pane.view.nextInput;\n    assert.strictEqual(postInput.highlightedItem, pane.breakpoints[0]);\n  });\n\n  describe('View', () => {\n    const categories = new Map([\n      [\n        SDK.CategorizedBreakpoint.Category.ANIMATION,\n        [\n          new SDK.CategorizedBreakpoint.CategorizedBreakpoint(\n              SDK.CategorizedBreakpoint.Category.ANIMATION, 'animation'),\n          new SDK.CategorizedBreakpoint.CategorizedBreakpoint(SDK.CategorizedBreakpoint.Category.ANIMATION, 'bnimation')\n        ]\n      ],\n      [\n        SDK.CategorizedBreakpoint.Category.CANVAS, [new SDK.CategorizedBreakpoint.CategorizedBreakpoint(\n                                                       SDK.CategorizedBreakpoint.Category.CANVAS, 'also_animation')]\n      ],\n      [\n        SDK.CategorizedBreakpoint.Category.LOAD,\n        [new SDK.CategorizedBreakpoint.CategorizedBreakpoint(SDK.CategorizedBreakpoint.Category.LOAD, 'different')]\n      ],\n    ]);\n\n    it('renders the breakpoints view', async () => {\n      const target = document.createElement('div');\n      renderElementIntoDOM(target, {includeCommonStyles: true});\n      BrowserDebugger.CategorizedBreakpointsSidebarPane.DEFAULT_VIEW(\n          {\n            onFilterChanged: function(): void {\n              throw new Error('Function not implemented.');\n            },\n            onBreakpointChange: function(): void {\n              throw new Error('Function not implemented.');\n            },\n            filterText: null,\n            highlightedItem: null,\n            categories,\n            sortedCategoryNames: categories.keys().toArray().toSorted(),\n            userExpandedCategories: new Set(),\n          },\n          {\n            defaultFocus: undefined,\n            userExpandedCategories: new Set(),\n          },\n          target);\n      await assertScreenshot('browser_debugger/categorized_breakpoint_sidebar_pane.png');\n    });\n\n    it('highlights and expands the current breakpoint', async () => {\n      const target = document.createElement('div');\n      renderElementIntoDOM(target, {includeCommonStyles: true});\n      BrowserDebugger.CategorizedBreakpointsSidebarPane.DEFAULT_VIEW(\n          {\n            onFilterChanged: function(): void {\n              throw new Error('Function not implemented.');\n            },\n            onBreakpointChange: function(): void {\n              throw new Error('Function not implemented.');\n            },\n            filterText: null,\n            highlightedItem: categories.get(SDK.CategorizedBreakpoint.Category.CANVAS)![0],\n            categories,\n            sortedCategoryNames: categories.keys().toArray().toSorted(),\n            userExpandedCategories: new Set(),\n          },\n          {\n            defaultFocus: undefined,\n            userExpandedCategories: new Set(),\n          },\n          target);\n      await assertScreenshot('browser_debugger/categorized_breakpoint_sidebar_pane_highlight.png');\n    });\n\n    it('expands selected breakpoints', async () => {\n      const target = document.createElement('div');\n      renderElementIntoDOM(target, {includeCommonStyles: true});\n      categories.get(SDK.CategorizedBreakpoint.Category.CANVAS)?.[0].setEnabled(true);\n      BrowserDebugger.CategorizedBreakpointsSidebarPane.DEFAULT_VIEW(\n          {\n            onFilterChanged: function(): void {\n              throw new Error('Function not implemented.');\n            },\n            onBreakpointChange: function(): void {\n              throw new Error('Function not implemented.');\n            },\n            filterText: null,\n            categories,\n            sortedCategoryNames: categories.keys().toArray().toSorted(),\n            highlightedItem: null,\n            userExpandedCategories: new Set(),\n          },\n          {\n            defaultFocus: undefined,\n            userExpandedCategories: new Set(),\n          },\n          target);\n      await assertScreenshot('browser_debugger/categorized_breakpoint_sidebar_pane_expand.png');\n    });\n  });\n});\n"]}