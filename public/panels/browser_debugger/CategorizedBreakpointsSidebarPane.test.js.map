{"version":3,"file":"CategorizedBreakpointsSidebarPane.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/browser_debugger/CategorizedBreakpointsSidebarPane.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as BrowserDebugger from './browser_debugger.js';\n\nclass TestSidebarPane extends BrowserDebugger.CategorizedBreakpointsSidebarPane.CategorizedBreakpointsSidebarPane {\n  static breakpoints: SDK.CategorizedBreakpoint.CategorizedBreakpoint[] = [\n    new SDK.CategorizedBreakpoint.CategorizedBreakpoint(SDK.CategorizedBreakpoint.Category.ANIMATION, 'animation'),\n    new SDK.CategorizedBreakpoint.CategorizedBreakpoint(SDK.CategorizedBreakpoint.Category.ANIMATION, 'bnimation'),\n    new SDK.CategorizedBreakpoint.CategorizedBreakpoint(SDK.CategorizedBreakpoint.Category.CANVAS, 'also_animation'),\n    new SDK.CategorizedBreakpoint.CategorizedBreakpoint(SDK.CategorizedBreakpoint.Category.LOAD, 'different'),\n  ];\n\n  constructor() {\n    super(TestSidebarPane.breakpoints, 'view', Protocol.Debugger.PausedEventReason.Other);\n    renderElementIntoDOM(this);\n  }\n\n  doPopulate(filterText: string|null): void {\n    const input = this.filterToolbar.contentElement.querySelector('devtools-toolbar-input');\n    input?.setAttribute('value', filterText ?? '');\n  }\n\n  override getBreakpointFromPausedDetails() {\n    return TestSidebarPane.breakpoints[1];\n  }\n\n  * tree(): Generator<UI.TreeOutline.TreeElement> {\n    function* walk(root: UI.TreeOutline.TreeOutline|UI.TreeOutline.TreeElement): Generator<UI.TreeOutline.TreeElement> {\n      let child = root.firstChild();\n      while (child) {\n        yield child;\n        yield* walk(child);\n        child = child.nextSibling;\n      }\n    }\n    yield* walk(this.treeOutline);\n  }\n\n  asObject(): object {\n    function treeAsObject(root: UI.TreeOutline.TreeOutline|UI.TreeOutline.TreeElement): object {\n      const object: Record<string, object> = {};\n      let child = root.firstChild();\n      while (child) {\n        object[(child.title as HTMLElement).title] = treeAsObject(child);\n        child = child.nextSibling;\n      }\n      return object;\n    }\n\n    return treeAsObject(this.treeOutline);\n  }\n}\n\ndescribeWithMockConnection('CategorizedBreakpointsSidebarPane', () => {\n  it('shows a breakpoint tree', () => {\n    const pane = new TestSidebarPane();\n\n    assert.deepEqual(pane.asObject(), {\n      Animation: {\n        animation: {},\n        bnimation: {},\n      },\n      Canvas: {\n        also_animation: {},\n      },\n      Load: {\n        different: {},\n      },\n    });\n  });\n\n  it('filters the breakpoint tree', () => {\n    const pane = new TestSidebarPane();\n    pane.doPopulate('animation');\n\n    assert.deepEqual(pane.asObject(), {\n      Animation: {\n        animation: {},\n      },\n      Canvas: {\n        also_animation: {},\n      },\n    });\n\n    pane.doPopulate(null);\n    assert.deepEqual(pane.asObject(), {\n      Animation: {\n        animation: {},\n        bnimation: {},\n      },\n      Canvas: {\n        also_animation: {},\n      },\n      Load: {\n        different: {},\n      },\n    });\n  });\n\n  // This and the following test check that the paused-on breakpoint is included when filtering even when it's not\n  // matching. They test filtering and pausing in different orders.\n  it('includes the paused breakpoint entry when filtered', async () => {\n    sinon.stub(UI.ViewManager.ViewManager.instance(), 'showView');\n    const pane = new TestSidebarPane();\n    const target = createTarget();\n    UI.Context.Context.instance().setFlavor(SDK.Target.Target, target);\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    assert.exists(debuggerModel);\n    await debuggerModel.pausedScript([], Protocol.Debugger.PausedEventReason.Other, {}, []);\n    // Filter applied first.\n    pane.doPopulate('animation');\n    // Breakpoint hit second.\n    pane.update();\n\n    assert.deepEqual(pane.asObject(), {\n      Animation: {\n        animation: {},\n        bnimation: {},\n      },\n      Canvas: {\n        also_animation: {},\n      },\n    });\n  });\n\n  it('preserves the paused breakpoint entry while filtering', async () => {\n    sinon.stub(UI.ViewManager.ViewManager.instance(), 'showView');\n    const pane = new TestSidebarPane();\n    const target = createTarget();\n    UI.Context.Context.instance().setFlavor(SDK.Target.Target, target);\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    assert.exists(debuggerModel);\n    await debuggerModel.pausedScript([], Protocol.Debugger.PausedEventReason.Other, {}, []);\n    // Breakpoint hit first.\n    pane.update();\n    // Filter applied second.\n    pane.doPopulate('animation');\n\n    assert.deepEqual(pane.asObject(), {\n      Animation: {\n        animation: {},\n        bnimation: {},\n      },\n      Canvas: {\n        also_animation: {},\n      },\n    });\n  });\n\n  it('preseves expanded nodes while filtering', () => {\n    const pane = new TestSidebarPane();\n    const category = pane.tree().find(element => (element.title as HTMLElement).title === 'Canvas');\n    assert.exists(category);\n    category.expand();\n    pane.doPopulate('animation');\n\n    const category2 = pane.tree().find(element => (element.title as HTMLElement).title === 'Canvas');\n    assert.strictEqual(\n        category, category2,\n        'This test assumes the tree element objects do not change. If this fails, update the test.');\n    assert.isTrue(category.expanded);\n    pane.doPopulate(null);\n    assert.isTrue(category.expanded);\n    category.collapse();\n    assert.isFalse(category.expanded);\n    pane.doPopulate('animation');\n    pane.doPopulate(null);\n    assert.isFalse(category.expanded);\n  });\n});\n"]}