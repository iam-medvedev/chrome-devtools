{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/changes/ChangesView.ts", "../../../../../../front_end/panels/changes/ChangesSidebar.ts", "changesSidebar.css.js", "changesView.css.js", "../../../../../../front_end/panels/changes/CombinedDiffView.ts", "combinedDiffView.css.js"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ChangesSidebar, Events} from './ChangesSidebar.js';\nimport changesViewStyles from './changesView.css.js';\nimport * as CombinedDiffView from './CombinedDiffView.js';\n\nconst CHANGES_VIEW_URL = 'https://developer.chrome.com/docs/devtools/changes' as Platform.DevToolsPath.UrlString;\n\nconst UIStrings = {\n  /**\n   * @description Text in Changes View of the Changes tab if no change has been made so far.\n   */\n  noChanges: 'No changes yet',\n  /**\n   * @description Text in Changes View of the Changes tab to explain the Changes panel.\n   */\n  changesViewDescription: 'On this page you can track code changes made within DevTools.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/changes/ChangesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ChangesView extends UI.Widget.VBox {\n  private emptyWidget: UI.EmptyWidget.EmptyWidget;\n  private readonly workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl;\n  readonly changesSidebar: ChangesSidebar;\n  private selectedUISourceCode: Workspace.UISourceCode.UISourceCode|null;\n  private readonly diffContainer: HTMLElement;\n  private readonly combinedDiffView: CombinedDiffView.CombinedDiffView;\n\n  constructor() {\n    super({\n      jslog: `${VisualLogging.panel('changes').track({resize: true})}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(changesViewStyles);\n\n    const splitWidget = new UI.SplitWidget.SplitWidget(true /* vertical */, false /* sidebar on left */);\n    const mainWidget = new UI.Widget.VBox();\n    splitWidget.setMainWidget(mainWidget);\n    splitWidget.show(this.contentElement);\n\n    this.emptyWidget = new UI.EmptyWidget.EmptyWidget('', '');\n    this.emptyWidget.show(mainWidget.element);\n\n    this.workspaceDiff = WorkspaceDiff.WorkspaceDiff.workspaceDiff();\n    this.changesSidebar = new ChangesSidebar(this.workspaceDiff);\n    this.changesSidebar.addEventListener(\n        Events.SELECTED_UI_SOURCE_CODE_CHANGED, this.selectedUISourceCodeChanged, this);\n    splitWidget.setSidebarWidget(this.changesSidebar);\n\n    this.selectedUISourceCode = null;\n\n    this.diffContainer = mainWidget.element.createChild('div', 'diff-container');\n    UI.ARIAUtils.markAsTabpanel(this.diffContainer);\n    this.combinedDiffView = new CombinedDiffView.CombinedDiffView();\n    this.combinedDiffView.workspaceDiff = this.workspaceDiff;\n    this.combinedDiffView.show(this.diffContainer);\n\n    this.hideDiff();\n    this.selectedUISourceCodeChanged();\n  }\n\n  private renderDiffOrEmptyState(): void {\n    // There are modified UI source codes, we should render the combined diff view.\n    if (this.workspaceDiff.modifiedUISourceCodes().length > 0) {\n      this.showDiff();\n    } else {\n      this.hideDiff();\n    }\n  }\n\n  private selectedUISourceCodeChanged(): void {\n    const selectedUISourceCode = this.changesSidebar.selectedUISourceCode();\n    if (!selectedUISourceCode || this.selectedUISourceCode === selectedUISourceCode) {\n      return;\n    }\n\n    this.selectedUISourceCode = selectedUISourceCode;\n    this.combinedDiffView.selectedFileUrl = selectedUISourceCode.url();\n  }\n\n  override wasShown(): void {\n    UI.Context.Context.instance().setFlavor(ChangesView, this);\n    super.wasShown();\n    this.renderDiffOrEmptyState();\n    this.workspaceDiff.addEventListener(\n        WorkspaceDiff.WorkspaceDiff.Events.MODIFIED_STATUS_CHANGED, this.renderDiffOrEmptyState, this);\n  }\n\n  override willHide(): void {\n    super.willHide();\n    UI.Context.Context.instance().setFlavor(ChangesView, null);\n    this.workspaceDiff.removeEventListener(\n        WorkspaceDiff.WorkspaceDiff.Events.MODIFIED_STATUS_CHANGED, this.renderDiffOrEmptyState, this);\n  }\n\n  private hideDiff(): void {\n    this.diffContainer.style.display = 'none';\n    this.emptyWidget.header = i18nString(UIStrings.noChanges);\n    this.emptyWidget.text = i18nString(UIStrings.changesViewDescription);\n\n    this.emptyWidget.link = CHANGES_VIEW_URL;\n    this.emptyWidget.showWidget();\n  }\n\n  private showDiff(): void {\n    this.emptyWidget.hideWidget();\n    this.diffContainer.style.display = 'block';\n  }\n}\n", "// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as Snippets from '../snippets/snippets.js';\n\nimport changesSidebarStyles from './changesSidebar.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Name of an item from source map\n   * @example {compile.html} PH1\n   */\n  sFromSourceMap: '{PH1} (from source map)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/changes/ChangesSidebar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ChangesSidebar extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.Widget>(\n    UI.Widget.Widget) {\n  private treeoutline: UI.TreeOutline.TreeOutlineInShadow;\n  private readonly treeElements: Map<Workspace.UISourceCode.UISourceCode, UISourceCodeTreeElement>;\n  private readonly workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl;\n  constructor(workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl) {\n    super({jslog: `${VisualLogging.pane('sidebar').track({resize: true})}`});\n\n    this.treeoutline = new UI.TreeOutline.TreeOutlineInShadow(UI.TreeOutline.TreeVariant.NAVIGATION_TREE);\n    this.treeoutline.registerRequiredCSS(changesSidebarStyles);\n    this.treeoutline.setFocusable(false);\n    this.treeoutline.hideOverflow();\n    this.treeoutline.addEventListener(UI.TreeOutline.Events.ElementSelected, this.selectionChanged, this);\n    UI.ARIAUtils.markAsTablist(this.treeoutline.contentElement);\n\n    this.element.appendChild(this.treeoutline.element);\n\n    this.treeElements = new Map();\n    this.workspaceDiff = workspaceDiff;\n    this.workspaceDiff.modifiedUISourceCodes().forEach(this.addUISourceCode.bind(this));\n    this.workspaceDiff.addEventListener(\n        WorkspaceDiff.WorkspaceDiff.Events.MODIFIED_STATUS_CHANGED, this.uiSourceCodeModifiedStatusChanged, this);\n  }\n\n  selectedUISourceCode(): Workspace.UISourceCode.UISourceCode|null {\n    // @ts-expect-error uiSourceCode seems to be dynamically attached.\n    return this.treeoutline.selectedTreeElement ? this.treeoutline.selectedTreeElement.uiSourceCode : null;\n  }\n\n  private selectionChanged(): void {\n    this.dispatchEventToListeners(Events.SELECTED_UI_SOURCE_CODE_CHANGED);\n  }\n\n  private uiSourceCodeModifiedStatusChanged(\n      event: Common.EventTarget.EventTargetEvent<WorkspaceDiff.WorkspaceDiff.ModifiedStatusChangedEvent>): void {\n    if (event.data.isModified) {\n      this.addUISourceCode(event.data.uiSourceCode);\n    } else {\n      this.removeUISourceCode(event.data.uiSourceCode);\n    }\n  }\n\n  private removeUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const treeElement = this.treeElements.get(uiSourceCode);\n    this.treeElements.delete(uiSourceCode);\n    if (this.treeoutline.selectedTreeElement === treeElement) {\n      const nextElementToSelect = treeElement.previousSibling || treeElement.nextSibling;\n      if (nextElementToSelect) {\n        nextElementToSelect.select(true);\n      } else {\n        treeElement.deselect();\n        this.selectionChanged();\n      }\n    }\n    if (treeElement) {\n      this.treeoutline.removeChild(treeElement);\n      treeElement.dispose();\n    }\n    if (this.treeoutline.rootElement().childCount() === 0) {\n      this.treeoutline.setFocusable(false);\n    }\n  }\n\n  private addUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const treeElement = new UISourceCodeTreeElement(uiSourceCode);\n    this.treeElements.set(uiSourceCode, treeElement);\n    this.treeoutline.setFocusable(true);\n    this.treeoutline.appendChild(treeElement);\n  }\n}\n\nexport const enum Events {\n  SELECTED_UI_SOURCE_CODE_CHANGED = 'SelectedUISourceCodeChanged',\n}\n\nexport interface EventTypes {\n  [Events.SELECTED_UI_SOURCE_CODE_CHANGED]: void;\n}\n\nexport class UISourceCodeTreeElement extends UI.TreeOutline.TreeElement {\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  private readonly eventListeners: Common.EventTarget.EventDescriptor[];\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super();\n    this.uiSourceCode = uiSourceCode;\n    this.listItemElement.classList.add('navigator-' + uiSourceCode.contentType().name() + '-tree-item');\n    UI.ARIAUtils.markAsTab(this.listItemElement);\n\n    let iconName: 'document'|'snippet' = 'document';\n    if (Snippets.ScriptSnippetFileSystem.isSnippetsUISourceCode(this.uiSourceCode)) {\n      iconName = 'snippet';\n    }\n    const defaultIcon = IconButton.Icon.create(iconName);\n    this.setLeadingIcons([defaultIcon]);\n\n    this.eventListeners = [\n      uiSourceCode.addEventListener(Workspace.UISourceCode.Events.TitleChanged, this.updateTitle, this),\n      uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this.updateTitle, this),\n      uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this.updateTitle, this),\n    ];\n\n    this.updateTitle();\n  }\n\n  private updateTitle(): void {\n    let titleText: string = this.uiSourceCode.displayName();\n    if (this.uiSourceCode.isDirty()) {\n      titleText = '*' + titleText;\n    }\n    this.title = titleText;\n\n    let tooltip: Common.UIString.LocalizedString|string = this.uiSourceCode.url();\n    if (this.uiSourceCode.contentType().isFromSourceMap()) {\n      tooltip = i18nString(UIStrings.sFromSourceMap, {PH1: this.uiSourceCode.displayName()});\n    }\n    this.tooltip = tooltip;\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.tree-outline li {\n  min-height: 20px;\n}\n\ndevtools-icon {\n  color: var(--icon-file-default);\n}\n\n.navigator-sm-script-tree-item devtools-icon,\n.navigator-script-tree-item devtools-icon,\n.navigator-snippet-tree-item devtools-icon {\n  color: var(--icon-file-script);\n}\n\n.navigator-sm-stylesheet-tree-item devtools-icon,\n.navigator-stylesheet-tree-item devtools-icon {\n  color: var(--icon-file-styles);\n}\n\n.navigator-image-tree-item devtools-icon {\n  color: var(--icon-file-image);\n}\n\n.navigator-font-tree-item devtools-icon {\n  color: var(--icon-file-font);\n}\n\n.tree-outline li:hover:not(.selected) .selection {\n  display: block;\n\n  & devtools-icon {\n    color: var(--icon-default-hover);\n  }\n}\n\n@media (forced-colors: active) {\n  li,\n  devtools-icon {\n    forced-color-adjust: none;\n    color: ButtonText !important; /* stylelint-disable-line declaration-no-important */\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./changesSidebar.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n[slot=\"main\"] {\n  flex-direction: column;\n  display: flex;\n}\n\n[slot=\"sidebar\"] {\n  overflow: auto;\n}\n\n.diff-container {\n  flex: 1;\n  overflow: auto;\n\n  & .widget:first-child {\n    height: 100%;\n  }\n\n  .combined-diff-view {\n    padding-inline: var(--sys-size-6);\n    padding-block: var(--sys-size-4);\n  }\n}\n\n:focus.selected {\n  background-color: var(--sys-color-tonal-container);\n  color: var(--sys-color-on-tonal-container);\n}\n\n.changes-toolbar {\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n}\n\n/*# sourceURL=${import.meta.resolve('./changesView.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport type * as Diff from '../../third_party/diff/diff.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as CopyToClipboard from '../../ui/components/copy_to_clipboard/copy_to_clipboard.js';\nimport type * as DiffView from '../../ui/components/diff_view/diff_view.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as PanelUtils from '../utils/utils.js';\n\nimport combinedDiffViewStyles from './combinedDiffView.css.js';\n\nconst COPIED_TO_CLIPBOARD_TEXT_TIMEOUT_MS = 1000;\n\nconst {html, Directives: {classMap}} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description The title of the button after it was pressed and the text was copied to clipboard.\n   */\n  copied: 'Copied to clipboard',\n  /**\n   * @description The title of the copy file to clipboard button\n   * @example {index.css} PH1\n   */\n  copyFile: 'Copy file {PH1} to clipboard',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/changes/CombinedDiffView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface SingleDiffViewInput {\n  // `DiffArray` can be empty for the modified files that\n  // do not have any diff. (e.g. the file content transition was A -> B -> A)\n  diff: Diff.Diff.DiffArray;\n  fileName: string;\n  fileUrl: string;\n  mimeType: string;\n  icon: Lit.TemplateResult;\n  copied: boolean;\n  selectedFileUrl?: string;\n  onCopy: (fileUrl: string) => void;\n  onFileNameClick: (fileUrl: string) => void;\n}\n\nexport interface ViewOutput {\n  scrollToSelectedDiff?: () => void;\n}\n\nexport interface ViewInput {\n  singleDiffViewInputs: SingleDiffViewInput[];\n}\n\ntype View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nfunction renderSingleDiffView(singleDiffViewInput: SingleDiffViewInput): Lit.TemplateResult {\n  const {fileName, fileUrl, mimeType, icon, diff, copied, selectedFileUrl, onCopy, onFileNameClick} =\n      singleDiffViewInput;\n  const classes = classMap({\n    selected: selectedFileUrl === fileUrl,\n  });\n\n  // clang-format off\n  return html`\n    <details open class=${classes}>\n      <summary>\n        <div class=\"summary-left\">\n          <devtools-icon class=\"drop-down-icon\" name=\"arrow-drop-down\"></devtools-icon>\n          ${icon}\n          <button class=\"file-name-link\" jslog=${VisualLogging.action('jump-to-file')} @click=${() => onFileNameClick(fileUrl)}>${fileName}</button>\n        </div>\n        <div class=\"summary-right\">\n          <devtools-button\n            .title=${i18nString(UIStrings.copyFile, { PH1: fileName })}\n            .size=${Buttons.Button.Size.SMALL}\n            .iconName=${'copy'}\n            .jslogContext=${'combined-diff-view.copy'}\n            .variant=${Buttons.Button.Variant.ICON}\n            @click=${() => onCopy(fileUrl)}\n          ></devtools-button>\n          ${copied\n            ? html`<span class=\"copied\">${i18nString(UIStrings.copied)}</span>`\n            : Lit.nothing}\n        </div>\n      </summary>\n      <div class=\"diff-view-container\">\n        <devtools-diff-view\n          .data=${{diff, mimeType} as DiffView.DiffView.DiffViewData}>\n        </devtools-diff-view>\n      </div>\n    </details>\n  `;\n  // clang-format on\n}\n\nexport class CombinedDiffView extends UI.Widget.Widget {\n  /**\n   * Ignores urls that start with any in the list\n   */\n  ignoredUrls: string[] = [];\n  #selectedFileUrl?: string;\n\n  #workspaceDiff?: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl;\n  #modifiedUISourceCodes: Workspace.UISourceCode.UISourceCode[] = [];\n  #copiedFiles: Record<string, boolean> = {};\n  #view: View;\n  #viewOutput: ViewOutput = {};\n  constructor(element?: HTMLElement, view: View = (input, output, target) => {\n    output.scrollToSelectedDiff = () => {\n      target.querySelector('details.selected')?.scrollIntoView();\n    };\n\n    Lit.render(\n        html`\n      <div class=\"combined-diff-view\">\n        ${input.singleDiffViewInputs.map(singleDiffViewInput => renderSingleDiffView(singleDiffViewInput))}\n      </div>\n    `,\n        target, {host: target});\n  }) {\n    super(element);\n    this.registerRequiredCSS(combinedDiffViewStyles);\n    this.#view = view;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.#workspaceDiff?.addEventListener(\n        WorkspaceDiff.WorkspaceDiff.Events.MODIFIED_STATUS_CHANGED, this.#onDiffModifiedStatusChanged, this);\n    void this.#initializeModifiedUISourceCodes();\n  }\n\n  override willHide(): void {\n    this.#workspaceDiff?.removeEventListener(\n        WorkspaceDiff.WorkspaceDiff.Events.MODIFIED_STATUS_CHANGED, this.#onDiffModifiedStatusChanged, this);\n  }\n\n  set workspaceDiff(workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl) {\n    this.#workspaceDiff = workspaceDiff;\n    void this.#initializeModifiedUISourceCodes();\n  }\n\n  set selectedFileUrl(fileUrl: string) {\n    this.#selectedFileUrl = fileUrl;\n    this.requestUpdate();\n    void this.updateComplete.then(() => {\n      this.#viewOutput.scrollToSelectedDiff?.();\n    });\n  }\n\n  async #onCopyFileContent(fileUrl: string): Promise<void> {\n    const file = this.#modifiedUISourceCodes.find(uiSource => uiSource.url() === fileUrl);\n    if (!file) {\n      return;\n    }\n    const content = file.workingCopyContentData();\n    if (!content.isTextContent) {\n      return;\n    }\n\n    CopyToClipboard.copyTextToClipboard(content.text, i18nString(UIStrings.copied));\n    this.#copiedFiles[fileUrl] = true;\n    this.requestUpdate();\n    setTimeout(() => {\n      delete this.#copiedFiles[fileUrl];\n      this.requestUpdate();\n    }, COPIED_TO_CLIPBOARD_TEXT_TIMEOUT_MS);\n  }\n\n  #onFileNameClick(fileUrl: string): void {\n    const uiSourceCode = this.#modifiedUISourceCodes.find(uiSourceCode => uiSourceCode.url() === fileUrl);\n    void Common.Revealer.reveal(uiSourceCode);\n  }\n\n  async #initializeModifiedUISourceCodes(): Promise<void> {\n    if (!this.#workspaceDiff) {\n      return;\n    }\n\n    const currentModifiedUISourceCodes = this.#modifiedUISourceCodes;\n    const nextModifiedUISourceCodes = this.#workspaceDiff.modifiedUISourceCodes();\n\n    // Find the now non modified UI source codes and unsubscribe from their diff changes.\n    const nowNonModifiedUISourceCodes =\n        currentModifiedUISourceCodes.filter(uiSourceCode => !nextModifiedUISourceCodes.includes(uiSourceCode));\n    nowNonModifiedUISourceCodes.forEach(\n        nonModifiedUISourceCode =>\n            this.#workspaceDiff?.unsubscribeFromDiffChange(nonModifiedUISourceCode, this.requestUpdate, this));\n\n    // Find the newly modified UI source codes and subscribe for their diff changes.\n    const newlyModifiedUISourceCodes =\n        nextModifiedUISourceCodes.filter(uiSourceCode => !currentModifiedUISourceCodes.includes(uiSourceCode));\n    newlyModifiedUISourceCodes.forEach(\n        modifiedUISourceCode =>\n            this.#workspaceDiff?.subscribeToDiffChange(modifiedUISourceCode, this.requestUpdate, this));\n    this.#modifiedUISourceCodes = nextModifiedUISourceCodes;\n\n    if (this.isShowing()) {\n      this.requestUpdate();\n    }\n  }\n\n  async #onDiffModifiedStatusChanged(): Promise<void> {\n    if (!this.#workspaceDiff) {\n      return;\n    }\n\n    await this.#initializeModifiedUISourceCodes();\n  }\n\n  override async performUpdate(): Promise<void> {\n    const uiSourceCodeAndDiffs = (await Promise.all(this.#modifiedUISourceCodes.map(async modifiedUISourceCode => {\n                                   for (const ignoredUrl of this.ignoredUrls) {\n                                     if (modifiedUISourceCode.url().startsWith(ignoredUrl)) {\n                                       return;\n                                     }\n                                   }\n\n                                   // `requestDiff` caches the response from the previous `requestDiff` calls if the file did not change\n                                   // so we can safely call it here without concerns for performance.\n                                   const diffResponse = await this.#workspaceDiff?.requestDiff(modifiedUISourceCode);\n                                   return {\n                                     diff: diffResponse?.diff ?? [],\n                                     uiSourceCode: modifiedUISourceCode,\n                                   };\n                                 }))).filter(uiSourceCodeAndDiff => !!uiSourceCodeAndDiff);\n\n    const singleDiffViewInputs = uiSourceCodeAndDiffs.map(({uiSourceCode, diff}) => {\n      let displayText = uiSourceCode.fullDisplayName();\n      // If the UISourceCode is backed by a workspace, we show the path as \"{workspace-name}/path/relative/to/workspace\"\n      const fileSystemUiSourceCode = Persistence.Persistence.PersistenceImpl.instance().fileSystem(uiSourceCode);\n      if (fileSystemUiSourceCode) {\n        displayText = [\n          fileSystemUiSourceCode.project().displayName(),\n          ...Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding.relativePath(fileSystemUiSourceCode)\n        ].join('/');\n      }\n      return {\n        diff,\n        fileName: `${uiSourceCode.isDirty() ? '*' : ''}${displayText}`,\n        fileUrl: uiSourceCode.url(),\n        mimeType: uiSourceCode.mimeType(),\n        icon: PanelUtils.PanelUtils.getIconForSourceFile(uiSourceCode),\n        copied: this.#copiedFiles[uiSourceCode.url()],\n        selectedFileUrl: this.#selectedFileUrl,\n        onCopy: this.#onCopyFileContent.bind(this),\n        onFileNameClick: this.#onFileNameClick.bind(this),\n      };\n    });\n\n    this.#view({singleDiffViewInputs}, this.#viewOutput, this.contentElement);\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.combined-diff-view {\n  display: flex;\n  flex-direction: column;\n  gap: var(--sys-size-5);\n  height: 100%;\n  background-color: var(--sys-color-surface3);\n  overflow: auto;\n\n  details {\n    flex-shrink: 0;\n    border-radius: 12px;\n\n    &.selected {\n      outline: var(--sys-size-2) solid var(--sys-color-divider-on-tonal-container);\n    }\n\n    summary {\n      background-color: var(--sys-color-surface1);\n      border-radius: var(--sys-shape-corner-medium-small);\n      height: var(--sys-size-12);\n      padding: var(--sys-size-3);\n      font: var(--sys-typescale-body5-bold);\n      display: flex;\n      justify-content: space-between;\n      gap: var(--sys-size-2);\n\n      &:focus-visible {\n        outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n        /* Prevents outline clipping by drawing it inside the element's bounds instead of outside. */\n        outline-offset: calc(-1 * var(--sys-size-2));\n      }\n\n      .summary-left {\n        display: flex;\n        align-items: center;\n        min-width: 0;\n        flex-grow: 0;\n\n        .file-name-link {\n          margin-left: var(--sys-size-5);\n          width: 100%;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          text-wrap-mode: nowrap;\n          border: none;\n          background: none;\n          font: inherit;\n          padding: 0;\n\n          &:hover {\n            color: var(--sys-color-primary);\n            text-decoration: underline;\n            cursor: pointer;\n          }\n\n          &:focus-visible {\n            outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n            outline-offset: var(--sys-size-2);\n          }\n        }\n\n        devtools-icon {\n          transform: rotate(270deg);\n        }\n\n        devtools-file-source-icon {\n          height: var(--sys-size-8);\n          width: var(--sys-size-8);\n          flex-shrink: 0;\n        }\n      }\n\n      .summary-right {\n        flex-shrink: 0;\n        display: flex;\n        align-items: center;\n        gap: var(--sys-size-2);\n        padding-right: var(--sys-size-4);\n\n        .copied {\n          font: var(--sys-typescale-body5-regular);\n        }\n      }\n\n      &::marker {\n        content: '';\n      }\n    }\n\n    .diff-view-container {\n      overflow-x: auto;\n      background-color: var(--sys-color-cdt-base-container);\n      border-bottom-left-radius: var(--sys-shape-corner-medium-small);\n      border-bottom-right-radius: var(--sys-shape-corner-medium-small);\n    }\n\n    &[open] {\n      summary {\n        border-radius: 0;\n        border-top-left-radius: var(--sys-shape-corner-medium-small);\n        border-top-right-radius: var(--sys-shape-corner-medium-small);\n\n        devtools-icon {\n          transform: rotate(0deg);\n        }\n      }\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./combinedDiffView.css')} */`;"],
  "mappings": "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",
  "names": ["i18n", "WorkspaceDiff", "UI", "VisualLogging", "Common", "i18n", "WorkspaceDiff", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "uiSourceCode", "UIStrings", "str_", "i18nString"]
}
