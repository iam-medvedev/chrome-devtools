{"version":3,"file":"ChangesSidebar.js","sourceRoot":"","sources":["../../../../../../front_end/panels/changes/ChangesSidebar.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as Snippets from '../snippets/snippets.js';\n\nimport changesSidebarStyles from './changesSidebar.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Name of an item from source map\n   * @example {compile.html} PH1\n   */\n  sFromSourceMap: '{PH1} (from source map)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/changes/ChangesSidebar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst {render, html, Directives: {ref}} = Lit;\ninterface ViewInput {\n  selectedSourceCode: Workspace.UISourceCode.UISourceCode|null;\n  onSelect: (uiSourceCode: Workspace.UISourceCode.UISourceCode|null) => void;\n  sourceCodes: Set<Workspace.UISourceCode.UISourceCode>;\n}\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\nexport const DEFAULT_VIEW: View = (input, output, target) => {\n  const tooltip = (uiSourceCode: Workspace.UISourceCode.UISourceCode): string =>\n      uiSourceCode.contentType().isFromSourceMap() ?\n      i18nString(UIStrings.sFromSourceMap, {PH1: uiSourceCode.displayName()}) :\n      uiSourceCode.url();\n  const icon = (uiSourceCode: Workspace.UISourceCode.UISourceCode): string =>\n      Snippets.ScriptSnippetFileSystem.isSnippetsUISourceCode(uiSourceCode) ? 'snippet' : 'document';\n  const configElements = new WeakMap<HTMLLIElement, Workspace.UISourceCode.UISourceCode>();\n  const onSelect = (e: UI.TreeOutline.TreeViewElement.SelectEvent): void =>\n      input.onSelect(configElements.get(e.detail) ?? null);\n  render(\n      // clang-format off\n      html`<devtools-tree\n             @selected=${onSelect}\n             navigation-variant\n             hide-overflow .template=${html`\n               <ul role=\"tree\">\n                 ${input.sourceCodes.values().map(uiSourceCode => html`\n                   <li\n                     role=\"treeitem\"\n                     ${ref(e => e instanceof HTMLLIElement && configElements.set(e, uiSourceCode))}\n                     ?selected=${uiSourceCode === input.selectedSourceCode}>\n                       <style>${changesSidebarStyles}</style>\n                       <div class=${'navigator-' + uiSourceCode.contentType().name() + '-tree-item'}>\n                         <devtools-icon name=${icon(uiSourceCode)}></devtools-icon>\n                         <span title=${tooltip(uiSourceCode)}>\n                           <span ?hidden=${!uiSourceCode.isDirty()}>*</span>\n                           ${uiSourceCode.displayName()}\n                         </span>\n                       </div>\n                   </li>`)}\n               </ul>`}></devtools-tree>`,\n      // clang-format on\n      target);\n};\n\nexport class ChangesSidebar extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.Widget>(\n    UI.Widget.Widget) {\n  readonly #workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl;\n  readonly #view: View;\n  readonly #sourceCodes = new Set<Workspace.UISourceCode.UISourceCode>();\n  #selectedUISourceCode: Workspace.UISourceCode.UISourceCode|null = null;\n  constructor(workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl, target?: HTMLElement, view = DEFAULT_VIEW) {\n    super({jslog: `${VisualLogging.pane('sidebar').track({resize: true})}`});\n    this.#view = view;\n\n    this.#workspaceDiff = workspaceDiff;\n    this.#workspaceDiff.modifiedUISourceCodes().forEach(this.#addUISourceCode.bind(this));\n    this.#workspaceDiff.addEventListener(\n        WorkspaceDiff.WorkspaceDiff.Events.MODIFIED_STATUS_CHANGED, this.uiSourceCodeModifiedStatusChanged, this);\n    this.requestUpdate();\n  }\n\n  selectedUISourceCode(): Workspace.UISourceCode.UISourceCode|null {\n    return this.#selectedUISourceCode;\n  }\n\n  override performUpdate(): void {\n    const input: ViewInput = {\n      onSelect: uiSourceCode => this.#selectionChanged(uiSourceCode),\n      sourceCodes: this.#sourceCodes,\n      selectedSourceCode: this.#selectedUISourceCode\n    };\n    this.#view(input, {}, this.contentElement);\n  }\n\n  #selectionChanged(selectedUISourceCode: Workspace.UISourceCode.UISourceCode|null): void {\n    this.#selectedUISourceCode = selectedUISourceCode;\n    this.dispatchEventToListeners(Events.SELECTED_UI_SOURCE_CODE_CHANGED);\n    this.requestUpdate();\n  }\n\n  #addUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    this.#sourceCodes.add(uiSourceCode);\n    uiSourceCode.addEventListener(Workspace.UISourceCode.Events.TitleChanged, this.requestUpdate, this);\n    uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this.requestUpdate, this);\n    uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this.requestUpdate, this);\n    this.requestUpdate();\n  }\n\n  #removeUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    uiSourceCode.removeEventListener(Workspace.UISourceCode.Events.TitleChanged, this.requestUpdate, this);\n    uiSourceCode.removeEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this.requestUpdate, this);\n    uiSourceCode.removeEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this.requestUpdate, this);\n    if (uiSourceCode === this.#selectedUISourceCode) {\n      let newSelection;\n      for (const sourceCode of this.#sourceCodes.values()) {\n        if (sourceCode === uiSourceCode) {\n          break;\n        }\n        newSelection = sourceCode;\n      }\n      this.#sourceCodes.delete(uiSourceCode);\n      this.#selectionChanged(newSelection ?? this.#sourceCodes.values().next().value ?? null);\n    } else {\n      this.#sourceCodes.delete(uiSourceCode);\n    }\n    this.requestUpdate();\n  }\n\n  private uiSourceCodeModifiedStatusChanged(\n      event: Common.EventTarget.EventTargetEvent<WorkspaceDiff.WorkspaceDiff.ModifiedStatusChangedEvent>): void {\n    const {isModified, uiSourceCode} = event.data;\n    if (isModified) {\n      this.#addUISourceCode(uiSourceCode);\n    } else {\n      this.#removeUISourceCode(uiSourceCode);\n    }\n    this.requestUpdate();\n  }\n}\n\nexport const enum Events {\n  SELECTED_UI_SOURCE_CODE_CHANGED = 'SelectedUISourceCodeChanged',\n}\n\nexport interface EventTypes {\n  [Events.SELECTED_UI_SOURCE_CODE_CHANGED]: void;\n}\n"]}