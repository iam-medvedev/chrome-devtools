{
  "version": 3,
  "sources": ["../../../../../../../../front_end/panels/settings/emulation/components/UserAgentClientHintsForm.ts", "userAgentClientHintsForm.css.js"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view*/\n\nimport '../../../../ui/legacy/legacy.js';\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as Buttons from '../../../../ui/components/buttons/buttons.js';\nimport * as Input from '../../../../ui/components/input/input.js';\nimport type * as UI from '../../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\nimport * as EmulationUtils from '../utils/utils.js';\n\nimport userAgentClientHintsFormStyles from './userAgentClientHintsForm.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Title for user agent client hints form\n   */\n  title: 'User agent client hints',\n  /**\n   * @description Heading for user agent section.\n   * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n   */\n  useragent: 'User agent (Sec-CH-UA)',\n  /**\n   * @description Heading for full-version-list section.\n   */\n  fullVersionList: 'Full version list (Sec-CH-UA-Full-Version-List)',\n  /**\n   * @description ARIA label for a form with properties for a single brand in a brand list. The form includes a brand name input field, a version\n   * input field and a delete icon. Brand refer to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n   */\n  brandProperties: 'User agent properties',\n  /**\n   * @description Input field placeholder for brands browser name.\n   * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n   */\n  brandName: 'Brand',\n  /**\n   * @description Aria label for brands browser name input field.\n   * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n   * @example {index} PH1\n   */\n  brandNameAriaLabel: 'Brand {PH1}',\n  /**\n   * @description Input field placeholder for significant brand version.\n   * Brands here relate to different browser brands/vendors like Google Chrome (v89), Microsoft Edge (v92) etc.\n   */\n  significantBrandVersionPlaceholder: 'Significant version (e.g. 87)',\n  /**\n   * @description Input field placeholder for brand version.\n   * Brands here relate to different browser brands/vendors like Google Chrome (v89), Microsoft Edge (v92) etc.\n   */\n  brandVersionPlaceholder: 'Version (e.g. 87.0.4280.88)',\n  /**\n   * @description Aria label for brands browser version input field.\n   * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n   * @example {index} PH1\n   */\n  brandVersionAriaLabel: 'Version {PH1}',\n  /**\n   * @description Button title for adding another brand in brands section to client hints.\n   * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n   */\n  addBrand: 'Add Brand',\n  /**\n   * @description Tooltip and aria label for delete icon for deleting browser brand from brands user agent section.\n   * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n   */\n  brandUserAgentDelete: 'Delete brand from user agent section',\n  /**\n   * @description Tooltip and aria label for delete icon for deleting user agent from brands full version list.\n   * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n   */\n  brandFullVersionListDelete: 'Delete brand from full version list',\n\n  /**\n   * @description Heading for the form factors section.\n   */\n  formFactorsTitle: 'Form Factors (Sec-CH-UA-Form-Factors)',\n  /**\n   * @description ARIA label for the group of form factor checkboxes.\n   */\n  formFactorsGroupAriaLabel: 'Available Form Factors',\n  /**\n   * @description Form factor option: Desktop.\n   */\n  formFactorDesktop: 'Desktop',\n  /**\n   * @description Form factor option: Automotive.\n   */\n  formFactorAutomotive: 'Automotive',\n  /**\n   * @description Form factor option: Mobile.\n   */\n  formFactorMobile: 'Mobile',\n  /**\n   * @description Form factor option: Tablet.\n   */\n  formFactorTablet: 'Tablet',\n  /**\n   * @description Form factor option: XR.\n   */\n  formFactorXR: 'XR',\n  /**\n   * @description Form factor option: EInk.\n   */\n  formFactorEInk: 'EInk',\n  /**\n   * @description Form factor option: Watch.\n   */\n  formFactorWatch: 'Watch',\n\n  /**\n   * @description Label for full browser version input field.\n   */\n  fullBrowserVersion: 'Full browser version (Sec-CH-UA-Full-Version)',\n  /**\n   * @description Placeholder for full browser version input field.\n   */\n  fullBrowserVersionPlaceholder: 'Full browser version (e.g. 87.0.4280.88)',\n  /**\n   * @description Label for platform heading section, platform relates to OS like Android, Windows etc.\n   */\n  platformLabel: 'Platform (Sec-CH-UA-Platform / Sec-CH-UA-Platform-Version)',\n  /**\n   * @description Platform row, including platform name and platform version input field.\n   */\n  platformProperties: 'Platform properties',\n  /**\n   * @description Version for platform input field, platform relates to OS like Android, Windows etc.\n   */\n  platformVersion: 'Platform version',\n  /**\n   * @description Placeholder for platform name input field, platform relates to OS like Android, Windows etc.\n   */\n  platformPlaceholder: 'Platform (e.g. Android)',\n  /**\n   * @description Label for architecture (Eg: x86, x64, arm) input field.\n   */\n  architecture: 'Architecture (Sec-CH-UA-Arch)',\n  /**\n   * @description Placeholder for architecture (Eg: x86, x64, arm) input field.\n   */\n  architecturePlaceholder: 'Architecture (e.g. x86)',\n  /**\n   * @description Device model row, including device model input field and mobile checkbox\n   */\n  deviceProperties: 'Device properties',\n  /**\n   * @description Label for Device Model input field.\n   */\n  deviceModel: 'Device model (Sec-CH-UA-Model)',\n  /**\n   * @description Label for Mobile phone checkbox.\n   */\n  mobileCheckboxLabel: 'Mobile',\n  /**\n   * @description Label for button to submit client hints form in DevTools.\n   */\n  update: 'Update',\n  /**\n   * @description Field Error message in the Device settings pane that shows that the entered value has characters that can't be represented in the corresponding User Agent Client Hints\n   */\n  notRepresentable: 'Not representable as structured headers string.',\n  /**\n   * @description Hover text for info icon which explains user agent client hints.\n   */\n  userAgentClientHintsInfo:\n      'User agent client hints are an alternative to the user agent string that identify the browser and the device in a more structured way with better privacy accounting.',\n  /**\n   * @description Success message when brand row is successfully added in client hints form.\n   * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n   */\n  addedBrand: 'Added brand row',\n  /**\n   * @description Success message when brand row is successfully deleted in client hints form.\n   * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n   */\n  deletedBrand: 'Deleted brand row',\n  /**\n   * @description Text that is usually a hyperlink to more documentation\n   */\n  learnMore: 'Learn more',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/emulation/components/UserAgentClientHintsForm.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ClientHintsChangeEvent extends Event {\n  static readonly eventName = 'clienthintschange';\n  constructor() {\n    super(ClientHintsChangeEvent.eventName);\n  }\n}\n\nexport class ClientHintsSubmitEvent extends Event {\n  static readonly eventName = 'clienthintssubmit';\n  detail: {value: Protocol.Emulation.UserAgentMetadata};\n\n  constructor(value: Protocol.Emulation.UserAgentMetadata) {\n    super(ClientHintsSubmitEvent.eventName);\n    this.detail = {value};\n  }\n}\n\nexport interface UserAgentClientHintsFormData {\n  metaData?: Protocol.Emulation.UserAgentMetadata;\n  showMobileCheckbox?: boolean;\n  showSubmitButton?: boolean;\n}\n\nconst DEFAULT_METADATA = {\n  brands: [\n    {\n      brand: '',\n      version: '',\n    },\n  ],\n  fullVersionList: [\n    {\n      brand: '',\n      version: '',\n    },\n  ],\n  fullVersion: '',\n  platform: '',\n  platformVersion: '',\n  architecture: '',\n  model: '',\n  mobile: false,\n  formFactors: []\n};\n\nexport const ALL_PROTOCOL_FORM_FACTORS: string[] = [\n  UIStrings.formFactorDesktop,\n  UIStrings.formFactorAutomotive,\n  UIStrings.formFactorMobile,\n  UIStrings.formFactorTablet,\n  UIStrings.formFactorXR,\n  UIStrings.formFactorEInk,\n  UIStrings.formFactorWatch,\n] as const;\n\n/**\n * Component for user agent client hints form, it is used in device settings panel\n * and network conditions panel. It is customizable through showMobileCheckbox and showSubmitButton.\n */\nexport class UserAgentClientHintsForm extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #isFormOpened = false;\n  #isFormDisabled = false;\n  #metaData: Protocol.Emulation.UserAgentMetadata = DEFAULT_METADATA;\n  #showMobileCheckbox = false;\n  #showSubmitButton = false;\n  #useragentModifiedAriaMessage = '';\n\n  set value(data: UserAgentClientHintsFormData) {\n    const {metaData = DEFAULT_METADATA, showMobileCheckbox = false, showSubmitButton = false} = data;\n    this.#metaData = {\n      ...this.#metaData,\n      ...metaData,\n    };\n    this.#showMobileCheckbox = showMobileCheckbox;\n    this.#showSubmitButton = showSubmitButton;\n    this.#render();\n  }\n\n  get value(): UserAgentClientHintsFormData {\n    return {\n      metaData: this.#metaData,\n    };\n  }\n\n  set disabled(disableForm: boolean) {\n    this.#isFormDisabled = disableForm;\n    this.#isFormOpened = false;\n    this.#render();\n  }\n\n  get disabled(): boolean {\n    return this.#isFormDisabled;\n  }\n\n  #handleTreeExpand = (event: KeyboardEvent): void => {\n    if (event.code === 'Space' || event.code === 'Enter' || event.code === 'ArrowLeft' || event.code === 'ArrowRight') {\n      event.consume(true);\n      this.#handleTreeClick(event.code);\n    }\n  };\n\n  #handleTreeClick = (key: string): void => {\n    if (this.#isFormDisabled) {\n      return;\n    }\n    if ((key === 'ArrowLeft' && !this.#isFormOpened) || (key === 'ArrowRight' && this.#isFormOpened)) {\n      return;\n    }\n    this.#isFormOpened = !this.#isFormOpened;\n    this.#render();\n  };\n\n  #handleUseragentInputChange = (value: string, index: number, brandInputType: 'brandName'|'brandVersion'): void => {\n    const updatedUseragent = this.#metaData.brands?.map((browserBrand, brandIndex) => {\n      if (brandIndex === index) {\n        const {brand, version} = browserBrand;\n        if (brandInputType === 'brandName') {\n          return {\n            brand: value,\n            version,\n          };\n        }\n        return {\n          brand,\n          version: value,\n        };\n      }\n      return browserBrand;\n    });\n    this.#metaData = {\n      ...this.#metaData,\n      brands: updatedUseragent,\n    };\n    this.dispatchEvent(new ClientHintsChangeEvent());\n    this.#render();\n  };\n\n  #handleFullVersionListInputChange =\n      (value: string, index: number, brandInputType: 'brandName'|'brandVersion'): void => {\n        const fullVersionList = this.#metaData.fullVersionList?.map((browserBrand, brandIndex) => {\n          if (brandIndex === index) {\n            const {brand, version} = browserBrand;\n            if (brandInputType === 'brandName') {\n              return {\n                brand: value,\n                version,\n              };\n            }\n            return {\n              brand,\n              version: value,\n            };\n          }\n          return browserBrand;\n        });\n        this.#metaData = {\n          ...this.#metaData,\n          fullVersionList,\n        };\n        this.dispatchEvent(new ClientHintsChangeEvent());\n        this.#render();\n      };\n\n  #handleUseragentDelete = (index: number): void => {\n    const {brands = []} = this.#metaData;\n    brands.splice(index, 1);\n    this.#metaData = {\n      ...this.#metaData,\n      brands,\n    };\n    this.dispatchEvent(new ClientHintsChangeEvent());\n    this.#useragentModifiedAriaMessage = i18nString(UIStrings.deletedBrand);\n    this.#render();\n\n    // after deleting a brand row, focus on next Brand input if available,\n    // otherwise focus on the \"Add Brand\" button\n    let nextFocusElement = this.shadowRoot?.getElementById(`ua-brand-${index + 1}-input`);\n    if (!nextFocusElement) {\n      nextFocusElement = this.shadowRoot?.getElementById('add-brand-button');\n    }\n    (nextFocusElement as HTMLElement)?.focus();\n  };\n\n  #handleFullVersionListDelete = (index: number): void => {\n    const {fullVersionList = []} = this.#metaData;\n    fullVersionList.splice(index, 1);\n    this.#metaData = {\n      ...this.#metaData,\n      fullVersionList,\n    };\n    this.dispatchEvent(new ClientHintsChangeEvent());\n    this.#useragentModifiedAriaMessage = i18nString(UIStrings.deletedBrand);\n    this.#render();\n\n    // after deleting a brand row, focus on next Brand input if available,\n    // otherwise focus on the \"Add Brand\" button\n    let nextFocusElement = this.shadowRoot?.getElementById(`fvl-brand-${index + 1}-input`);\n    if (!nextFocusElement) {\n      nextFocusElement = this.shadowRoot?.getElementById('add-fvl-brand-button');\n    }\n    (nextFocusElement as HTMLElement)?.focus();\n  };\n\n  #handleAddUseragentBrandClick = (): void => {\n    const {brands} = this.#metaData;\n    this.#metaData = {\n      ...this.#metaData,\n      brands: [\n        ...(Array.isArray(brands) ? brands : []),\n        {\n          brand: '',\n          version: '',\n        },\n      ],\n    };\n    this.dispatchEvent(new ClientHintsChangeEvent());\n    this.#useragentModifiedAriaMessage = i18nString(UIStrings.addedBrand);\n    this.#render();\n    const brandInputElements = this.shadowRoot?.querySelectorAll('.ua-brand-name-input');\n    if (brandInputElements) {\n      const lastBrandInputElement = Array.from(brandInputElements).pop();\n      if (lastBrandInputElement) {\n        (lastBrandInputElement as HTMLInputElement).focus();\n      }\n    }\n  };\n\n  #handleAddUseragentBrandKeyPress = (event: KeyboardEvent): void => {\n    if (event.code === 'Space' || event.code === 'Enter') {\n      event.preventDefault();\n      this.#handleAddUseragentBrandClick();\n    }\n  };\n\n  #handleAddFullVersionListBrandClick = (): void => {\n    const {fullVersionList} = this.#metaData;\n    this.#metaData = {\n      ...this.#metaData,\n      fullVersionList: [\n        ...(Array.isArray(fullVersionList) ? fullVersionList : []),\n        {\n          brand: '',\n          version: '',\n        },\n      ],\n    };\n    this.dispatchEvent(new ClientHintsChangeEvent());\n    this.#useragentModifiedAriaMessage = i18nString(UIStrings.addedBrand);\n    this.#render();\n    const brandInputElements = this.shadowRoot?.querySelectorAll('.fvl-brand-name-input');\n    if (brandInputElements) {\n      const lastBrandInputElement = Array.from(brandInputElements).pop();\n      if (lastBrandInputElement) {\n        (lastBrandInputElement as HTMLInputElement).focus();\n      }\n    }\n  };\n\n  #handleAddFullVersionListBrandKeyPress = (event: KeyboardEvent): void => {\n    if (event.code === 'Space' || event.code === 'Enter') {\n      event.preventDefault();\n      this.#handleAddFullVersionListBrandClick();\n    }\n  };\n\n  #handleFormFactorCheckboxChange = (formFactorValue: string, isChecked: boolean): void => {\n    let currentFormFactors = [...(this.#metaData.formFactors || [])];\n    if (isChecked) {\n      if (!currentFormFactors.includes(formFactorValue)) {\n        currentFormFactors.push(formFactorValue);\n      }\n    } else {\n      currentFormFactors = currentFormFactors.filter(ff => ff !== formFactorValue);\n    }\n    this.#metaData = {\n      ...this.#metaData,\n      formFactors: currentFormFactors,\n    };\n    this.dispatchEvent(new ClientHintsChangeEvent());\n    this.#render();\n  };\n\n  #handleInputChange = (stateKey: keyof Protocol.Emulation.UserAgentMetadata, value: string|boolean): void => {\n    if (stateKey in this.#metaData) {\n      this.#metaData = {\n        ...this.#metaData,\n        [stateKey]: value,\n      };\n      this.#render();\n    }\n    this.dispatchEvent(new ClientHintsChangeEvent());\n  };\n\n  #handleLinkPress = (event: KeyboardEvent): void => {\n    if (event.code === 'Space' || event.code === 'Enter') {\n      event.preventDefault();\n      (event.target as HTMLAnchorElement).click();\n    }\n  };\n\n  #handleSubmit = (event: Event): void => {\n    event.preventDefault();\n    if (this.#showSubmitButton) {\n      this.dispatchEvent(new ClientHintsSubmitEvent(this.#metaData));\n      this.#render();\n    }\n  };\n\n  #renderInputWithLabel(\n      label: string, placeholder: string, value: string,\n      stateKey: keyof Protocol.Emulation.UserAgentMetadata): Lit.TemplateResult {\n    const handleInputChange = (event: KeyboardEvent): void => {\n      const value = (event.target as HTMLInputElement).value;\n      this.#handleInputChange(stateKey, value);\n    };\n    return html`\n      <label class=\"full-row label input-field-label-container\">\n        ${label}\n        <input\n          class=\"input-field\"\n          type=\"text\"\n          @input=${handleInputChange}\n          .value=${value}\n          placeholder=${placeholder}\n          jslog=${\n        VisualLogging.textField().track({change: true}).context(Platform.StringUtilities.toKebabCase(stateKey))}\n          />\n      </label>\n    `;\n  }\n\n  #renderPlatformSection(): Lit.TemplateResult {\n    const {platform, platformVersion} = this.#metaData;\n    const handlePlatformNameChange = (event: KeyboardEvent): void => {\n      const value = (event.target as HTMLInputElement).value;\n      this.#handleInputChange('platform', value);\n    };\n    const handlePlatformVersionChange = (event: KeyboardEvent): void => {\n      const value = (event.target as HTMLInputElement).value;\n      this.#handleInputChange('platformVersion', value);\n    };\n    return html`\n      <span class=\"full-row label\">${i18nString(UIStrings.platformLabel)}</span>\n      <div class=\"full-row brand-row\" aria-label=${i18nString(UIStrings.platformProperties)} role=\"group\">\n        <input\n          class=\"input-field half-row\"\n          type=\"text\"\n          @input=${handlePlatformNameChange}\n          .value=${platform}\n          placeholder=${i18nString(UIStrings.platformPlaceholder)}\n          aria-label=${i18nString(UIStrings.platformLabel)}\n          jslog=${VisualLogging.textField('platform').track({\n      change: true,\n    })}\n        />\n        <input\n          class=\"input-field half-row\"\n          type=\"text\"\n          @input=${handlePlatformVersionChange}\n          .value=${platformVersion}\n          placeholder=${i18nString(UIStrings.platformVersion)}\n          aria-label=${i18nString(UIStrings.platformVersion)}\n          jslog=${VisualLogging.textField('platform-version').track({\n      change: true,\n    })}\n        />\n      </div>\n    `;\n  }\n\n  #renderDeviceModelSection(): Lit.TemplateResult {\n    const {model, mobile} = this.#metaData;\n    const handleDeviceModelChange = (event: KeyboardEvent): void => {\n      const value = (event.target as HTMLInputElement).value;\n      this.#handleInputChange('model', value);\n    };\n    const handleMobileChange = (event: KeyboardEvent): void => {\n      const value = (event.target as HTMLInputElement).checked;\n      this.#handleInputChange('mobile', value);\n    };\n    const mobileCheckboxInput = this.#showMobileCheckbox ? html`\n      <label class=\"mobile-checkbox-container\">\n        <input type=\"checkbox\" @input=${handleMobileChange} .checked=${mobile}\n          jslog=${VisualLogging.toggle('mobile').track({\n      click: true,\n    })}\n        />\n        ${i18nString(UIStrings.mobileCheckboxLabel)}\n      </label>\n    ` :\n                                                           Lit.nothing;\n    return html`\n      <span class=\"full-row label\">${i18nString(UIStrings.deviceModel)}</span>\n      <div class=\"full-row brand-row\" aria-label=${i18nString(UIStrings.deviceProperties)} role=\"group\">\n        <input\n          class=\"input-field ${this.#showMobileCheckbox ? 'device-model-input' : 'full-row'}\"\n          type=\"text\"\n          @input=${handleDeviceModelChange}\n          .value=${model}\n          placeholder=${i18nString(UIStrings.deviceModel)}\n          jslog=${VisualLogging.textField('model').track({\n      change: true,\n    })}\n        />\n        ${mobileCheckboxInput}\n      </div>\n    `;\n  }\n\n  #renderUseragent(): Lit.TemplateResult {\n    const {\n      brands =\n          [\n            {\n              brand: '',\n              version: '',\n            },\n          ],\n    } = this.#metaData;\n    const brandElements = brands.map((brandRow, index) => {\n      const {brand, version} = brandRow;\n      const handleDeleteClick = (): void => {\n        this.#handleUseragentDelete(index);\n      };\n      const handleKeyPress = (event: KeyboardEvent): void => {\n        if (event.code === 'Space' || event.code === 'Enter') {\n          event.preventDefault();\n          handleDeleteClick();\n        }\n      };\n      const handleBrandChange = (event: KeyboardEvent): void => {\n        const value = (event.target as HTMLInputElement).value;\n        this.#handleUseragentInputChange(value, index, 'brandName');\n      };\n      const handleVersionChange = (event: KeyboardEvent): void => {\n        const value = (event.target as HTMLInputElement).value;\n        this.#handleUseragentInputChange(value, index, 'brandVersion');\n      };\n      return html`\n        <div class=\"full-row brand-row\" aria-label=${i18nString(UIStrings.brandProperties)} role=\"group\">\n          <input\n            class=\"input-field ua-brand-name-input\"\n            type=\"text\"\n            @input=${handleBrandChange}\n            .value=${brand}\n            id=\"ua-brand-${index + 1}-input\"\n            placeholder=${i18nString(UIStrings.brandName)}\n            aria-label=${i18nString(UIStrings.brandNameAriaLabel, {\n        PH1: index + 1,\n      })}\n            jslog=${VisualLogging.textField('brand-name').track({\n        change: true,\n      })}\n          />\n          <input\n            class=\"input-field\"\n            type=\"text\"\n            @input=${handleVersionChange}\n            .value=${version}\n            placeholder=${i18nString(UIStrings.significantBrandVersionPlaceholder)}\n            aria-label=${i18nString(UIStrings.brandVersionAriaLabel, {\n        PH1: index + 1,\n      })}\n            jslog=${VisualLogging.textField('brand-version').track({\n        change: true,\n      })}\n          />\n          <devtools-icon name=\"bin\" class=\"medium\"\n            title=${i18nString(UIStrings.brandUserAgentDelete)}\n            class=\"delete-icon\"\n            tabindex=\"0\"\n            role=\"button\"\n            @click=${handleDeleteClick}\n            @keypress=${handleKeyPress}\n            aria-label=${i18nString(UIStrings.brandUserAgentDelete)}\n          >\n          </devtools-icon>\n        </div>\n      `;\n    });\n    return html`\n      <span class=\"full-row label\">${i18nString(UIStrings.useragent)}</span>\n      ${brandElements}\n      <div\n        class=\"add-container full-row\"\n        role=\"button\"\n        tabindex=\"0\"\n        id=\"add-brand-button\"\n        aria-label=${i18nString(UIStrings.addBrand)}\n        @click=${this.#handleAddUseragentBrandClick}\n        @keypress=${this.#handleAddUseragentBrandKeyPress}\n      >\n        <devtools-icon\n          aria-hidden=\"true\" name=\"plus\" class=\"medium\">\n        </devtools-icon>\n        ${i18nString(UIStrings.addBrand)}\n      </div>\n    `;\n  }\n\n  #renderFullVersionList(): Lit.TemplateResult {\n    const {\n      fullVersionList =\n          [\n            {\n              brand: '',\n              version: '',\n            },\n          ],\n    } = this.#metaData;\n    const elements = fullVersionList.map((brandRow, index) => {\n      const {brand, version} = brandRow;\n      const handleDeleteClick = (): void => {\n        this.#handleFullVersionListDelete(index);\n      };\n      const handleKeyPress = (event: KeyboardEvent): void => {\n        if (event.code === 'Space' || event.code === 'Enter') {\n          event.preventDefault();\n          handleDeleteClick();\n        }\n      };\n      const handleBrandChange = (event: KeyboardEvent): void => {\n        const value = (event.target as HTMLInputElement).value;\n        this.#handleFullVersionListInputChange(value, index, 'brandName');\n      };\n      const handleVersionChange = (event: KeyboardEvent): void => {\n        const value = (event.target as HTMLInputElement).value;\n        this.#handleFullVersionListInputChange(value, index, 'brandVersion');\n      };\n      return html`\n        <div\n          class=\"full-row brand-row\"\n          aria-label=${i18nString(UIStrings.brandProperties)}\n          jslog=${VisualLogging.section('full-version')}\n          role=\"group\">\n          <input\n            class=\"input-field fvl-brand-name-input\"\n            type=\"text\"\n            @input=${handleBrandChange}\n            .value=${brand}\n            id=\"fvl-brand-${index + 1}-input\"\n            placeholder=${i18nString(UIStrings.brandName)}\n            aria-label=${i18nString(UIStrings.brandNameAriaLabel, {\n        PH1: index + 1,\n      })}\n            jslog=${VisualLogging.textField('brand-name').track({\n        change: true,\n      })}\n          />\n          <input\n            class=\"input-field\"\n            type=\"text\"\n            @input=${handleVersionChange}\n            .value=${version}\n            placeholder=${i18nString(UIStrings.brandVersionPlaceholder)}\n            aria-label=${i18nString(UIStrings.brandVersionAriaLabel, {\n        PH1: index + 1,\n      })}\n            jslog=${VisualLogging.textField('brand-version').track({\n        change: true,\n      })}\n          />\n          <devtools-icon name=\"bin\" class=\"medium\"\n            title=${i18nString(UIStrings.brandFullVersionListDelete)}\n            class=\"delete-icon\"\n            tabindex=\"0\"\n            role=\"button\"\n            @click=${handleDeleteClick}\n            @keypress=${handleKeyPress}\n            aria-label=${i18nString(UIStrings.brandFullVersionListDelete)}\n          >\n          </devtools-icon>\n        </div>\n      `;\n    });\n    return html`\n      <span class=\"full-row label\">${i18nString(UIStrings.fullVersionList)}</span>\n      ${elements}\n      <div\n        class=\"add-container full-row\"\n        role=\"button\"\n        tabindex=\"0\"\n        id=\"add-fvl-brand-button\"\n        aria-label=${i18nString(UIStrings.addBrand)}\n        @click=${this.#handleAddFullVersionListBrandClick}\n        @keypress=${this.#handleAddFullVersionListBrandKeyPress}\n      >\n        <devtools-icon name=\"plus\" class=\"medium\"\n          aria-hidden=\"true\">\n        </devtools-icon>\n        ${i18nString(UIStrings.addBrand)}\n      </div>\n    `;\n  }\n\n  #renderFormFactorsSection(): Lit.TemplateResult {\n    const checkboxElements = ALL_PROTOCOL_FORM_FACTORS.map(ffValue => {\n      const isChecked = this.#metaData.formFactors?.includes(ffValue) || false;\n      const labelStringId = `formFactor${ffValue}` as keyof typeof UIStrings;\n      const label = i18nString(UIStrings[labelStringId]);\n\n      return html`\n        <label class=\"form-factor-checkbox-label\">\n          <input\n            type=\"checkbox\"\n            .checked=${isChecked}\n            value=${ffValue}\n            jslog=${VisualLogging.toggle(Platform.StringUtilities.toKebabCase(ffValue)).track({\n        click: true\n      })}\n            @change=${\n          (e: Event) => this.#handleFormFactorCheckboxChange(ffValue, (e.target as HTMLInputElement).checked)}\n          />\n          ${label}\n        </label>\n      `;\n    });\n\n    return html`\n      <span class=\"full-row label\" jslog=${VisualLogging.sectionHeader('form-factors')}>\n        ${i18nString(UIStrings.formFactorsTitle)}\n      </span>\n      <div class=\"full-row form-factors-checkbox-group\" role=\"group\" aria-label=${\n        i18nString(UIStrings.formFactorsGroupAriaLabel)}>\n        ${checkboxElements}\n      </div>\n    `;\n  }\n\n  #render(): void {\n    const {fullVersion, architecture} = this.#metaData;\n    const useragentSection = this.#renderUseragent();\n    const fullVersionListSection = this.#renderFullVersionList();\n    const fullBrowserInput = this.#renderInputWithLabel(\n        i18nString(UIStrings.fullBrowserVersion), i18nString(UIStrings.fullBrowserVersionPlaceholder),\n        fullVersion || '', 'fullVersion');\n    const formFactorsSection = this.#renderFormFactorsSection();\n    const platformSection = this.#renderPlatformSection();\n    const architectureInput = this.#renderInputWithLabel(\n        i18nString(UIStrings.architecture), i18nString(UIStrings.architecturePlaceholder), architecture,\n        'architecture');\n    const deviceModelSection = this.#renderDeviceModelSection();\n    // clang-format off\n    const submitButton = this.#showSubmitButton ? html`\n      <devtools-button\n        .variant=${Buttons.Button.Variant.OUTLINED}\n        .type=${'submit'}\n      >\n        ${i18nString(UIStrings.update)}\n      </devtools-button>\n    ` : Lit.nothing;\n    // clang-format on\n\n    // clang-format off\n    const output = html`\n      <style>${Input.checkboxStyles}</style>\n      <style>${userAgentClientHintsFormStyles}</style>\n      <section class=\"root\">\n        <div class=\"tree-title\">\n          <div\n            role=button\n            @click=${this.#handleTreeClick}\n            tabindex=${this.#isFormDisabled ? '-1' : '0'}\n            @keydown=${this.#handleTreeExpand}\n            aria-expanded=${this.#isFormOpened}\n            aria-controls=form-container\n            aria-disabled=${this.#isFormDisabled}\n            aria-label=${i18nString(UIStrings.title)}\n            jslog=${VisualLogging.toggleSubpane().track({click: true})}>\n            <devtools-icon name=triangle-right></devtools-icon>\n            <devtools-icon name=triangle-down></devtools-icon>\n            ${i18nString(UIStrings.title)}\n          </div>\n          <devtools-icon class=info-icon name=info title=${i18nString(UIStrings.userAgentClientHintsInfo)}></devtools-icon>\n          <x-link\n           tabindex=${this.#isFormDisabled ? '-1' : '0'}\n           href=\"https://web.dev/user-agent-client-hints/\"\n           target=\"_blank\"\n           class=\"link\"\n           @keypress=${this.#handleLinkPress}\n           aria-label=${i18nString(UIStrings.userAgentClientHintsInfo)}\n           jslog=${VisualLogging.link('learn-more').track({click: true})}\n          >\n            ${i18nString(UIStrings.learnMore)}\n          </x-link>\n        </div>\n        <form\n          id=\"form-container\"\n          class=\"form-container ${this.#isFormOpened ? '' : 'hide-container'}\"\n          @submit=${this.#handleSubmit}\n        >\n          ${useragentSection}\n          <hr class=\"section-separator\">\n          ${fullVersionListSection}\n          <hr class=\"section-separator\">\n          ${fullBrowserInput}\n          <hr class=\"section-separator\">\n          ${formFactorsSection}\n          <hr class=\"section-separator\">\n          ${platformSection}\n          <hr class=\"section-separator\">\n          ${architectureInput}\n          <hr class=\"section-separator\">\n          ${deviceModelSection}\n          ${submitButton}\n        </form>\n        <div aria-live=\"polite\" aria-label=${this.#useragentModifiedAriaMessage}></div>\n      </section>\n    `;\n    // clang-format on\n    Lit.render(output, this.#shadow, {host: this});\n  }\n\n  validate = (): UI.ListWidget.ValidatorResult => {\n    for (const [metaDataKey, metaDataValue] of Object.entries(this.#metaData)) {\n      if (metaDataKey === 'brands' || metaDataKey === 'fullVersionList') {\n        // for structured fields, check each individual brand/version\n        const isBrandValid = this.#metaData.brands?.every(({brand, version}) => {\n          const brandNameResult = EmulationUtils.UserAgentMetadata.validateAsStructuredHeadersString(\n              brand, i18nString(UIStrings.notRepresentable));\n          const brandVersionResult = EmulationUtils.UserAgentMetadata.validateAsStructuredHeadersString(\n              version, i18nString(UIStrings.notRepresentable));\n          return brandNameResult.valid && brandVersionResult.valid;\n        });\n        if (!isBrandValid) {\n          return {valid: false, errorMessage: i18nString(UIStrings.notRepresentable)};\n        }\n      } else if (metaDataKey === 'formFactors') {\n        const formFactors = metaDataValue as string[] | undefined;\n        if (formFactors) {\n          for (const ff of formFactors) {\n            if (!ALL_PROTOCOL_FORM_FACTORS.includes(ff)) {\n              return {\n                valid: false,\n                errorMessage: i18nString(UIStrings.notRepresentable) + ` (Invalid form factor: ${ff})`,\n              };\n            }\n            const ffError = EmulationUtils.UserAgentMetadata.validateAsStructuredHeadersString(\n                ff, i18nString(UIStrings.notRepresentable));\n            if (!ffError.valid) {\n              return ffError;\n            }\n          }\n        }\n      } else {\n        // otherwise, validate the value as a string\n        const metaDataError = EmulationUtils.UserAgentMetadata.validateAsStructuredHeadersString(\n            metaDataValue, i18nString(UIStrings.notRepresentable));\n        if (!metaDataError.valid) {\n          return metaDataError;\n        }\n      }\n    }\n    return {valid: true};\n  };\n}\n\ncustomElements.define('devtools-user-agent-client-hints-form', UserAgentClientHintsForm);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-user-agent-client-hints-form': UserAgentClientHintsForm;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.root {\n  color: var(--sys-color-on-surface);\n  width: 100%;\n}\n\n.tree-title {\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n\n  & > [aria-controls=\"form-container\"] {\n    margin-left: var(--sys-size-2);\n    padding-right: var(--sys-size-3);\n\n    & > [name=\"triangle-right\"],\n    & > [name=\"triangle-down\"] {\n      vertical-align: bottom;\n    }\n\n    &[aria-expanded=\"true\"] > [name=\"triangle-right\"] {\n      display: none;\n    }\n\n    &[aria-expanded=\"false\"] > [name=\"triangle-down\"] {\n      display: none;\n    }\n  }\n}\n\n.form-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr auto;\n  align-items: center;\n  gap: 8px 10px;\n  padding: 0 10px;\n}\n\n.full-row {\n  grid-column: 1 / 5;\n}\n\n.form-factors-checkbox-group {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 6px 10px;\n}\n\n.form-factor-checkbox-label {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  white-space: nowrap;\n}\n\nhr.section-separator {\n  grid-column: 1 / 5; /* Ensures the separator spans all columns */\n  border: none;\n  margin-top: 1px;\n}\n\n.half-row {\n  grid-column: span 2;\n}\n\n.mobile-checkbox-container {\n  display: flex;\n}\n\n.device-model-input {\n  grid-column: 1 / 4;\n}\n\n.input-field {\n  color: var(--sys-color-on-surface);\n  padding: 3px 6px;\n  border-radius: 2px;\n  border: 1px solid var(--sys-color-neutral-outline);\n  background-color: var(--sys-color-cdt-base-container);\n  font-size: inherit;\n  height: 18px;\n}\n\n.input-field:focus {\n  border: 1px solid var(--sys-color-state-focus-ring);\n  outline-width: 0;\n}\n\n.add-container {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.add-icon {\n  margin-right: 5px;\n}\n\n.brand-row {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  justify-content: space-between;\n}\n\n.brand-row > input {\n  width: 100%;\n}\n\n.info-icon {\n  margin-left: 5px;\n  margin-right: 1px;\n  height: var(--sys-size-8);\n  width: var(--sys-size-8);\n}\n\n.link,\n.devtools-link {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n  outline-offset: 2px;\n  font-weight: 400;\n}\n\ndevtools-icon + .link {\n  margin-inline-start: 2px;\n}\n\n.hide-container {\n  display: none;\n}\n\n.input-field-label-container {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n@media (forced-colors: active) {\n  .input-field {\n    border: 1px solid;\n  }\n\n  .tree-title[aria-disabled=\"true\"] {\n    color: GrayText;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./userAgentClientHintsForm.css')} */`;"],
  "mappings": "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",
  "names": ["value"]
}
