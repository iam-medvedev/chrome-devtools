{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/settings/emulation/DevicesSettingsTab.ts", "devicesSettingsTab.css.js"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../../ui/components/cards/cards.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as EmulationModel from '../../../models/emulation/emulation.js';\nimport type * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport * as EmulationComponents from './components/components.js';\nimport devicesSettingsTabStyles from './devicesSettingsTab.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Title for a section of the UI that shows all of the custom devices the user can emulate, in the Device Toolbar.\n   */\n  customDevices: 'Custom devices',\n  /**\n   * @description Title for a section of the UI that shows all of the default devices the user can emulate, in the Device Toolbar.\n   */\n  defaultDevices: 'Default devices',\n  /**\n   * @description Button to add a custom device (e.g. phone, tablet) the Device Toolbar.\n   */\n  addCustomDevice: 'Add custom device',\n  /**\n   * @description Label/title for UI to add a new custom device type. Device means mobile/tablet etc.\n   */\n  device: 'Device',\n  /**\n   * @description Placeholder for text input for the name of a custom device.\n   */\n  deviceName: 'Device Name',\n  /**\n   * @description Placeholder text for text input for the width of a custom device in pixels.\n   */\n  width: 'Width',\n  /**\n   * @description Placeholder text for text input for the height of a custom device in pixels.\n   */\n  height: 'Height',\n  /**\n   * @description Placeholder text for text input for the height/width ratio of a custom device in pixels.\n   */\n  devicePixelRatio: 'Device pixel ratio',\n  /**\n   * @description Label in the Devices settings pane for the user agent string input of a custom device\n   */\n  userAgentString: 'User agent string',\n  /**\n   * @description Tooltip text for a drop-down in the Devices settings pane, for the 'user agent type' input of a custom device.\n   * 'Type' refers to different options e.g. mobile or desktop.\n   */\n  userAgentType: 'User agent type',\n  /**\n   * @description Error message in the Devices settings pane that declares the maximum length of the device name input\n   * @example {50} PH1\n   */\n  deviceNameMustBeLessThanS: 'Device name must be less than {PH1} characters.',\n  /**\n   * @description Error message in the Devices settings pane that declares that the device name input must not be empty\n   */\n  deviceNameCannotBeEmpty: 'Device name cannot be empty.',\n  /**\n   * @description Success message for screen readers when device is added.\n   * @example {TestDevice} PH1\n   */\n  deviceAddedOrUpdated: 'Device {PH1} successfully added/updated.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/emulation/DevicesSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class DevicesSettingsTab extends UI.Widget.VBox implements\n    UI.ListWidget.Delegate<EmulationModel.EmulatedDevices.EmulatedDevice> {\n  containerElement: HTMLElement;\n  private readonly addCustomButton: Buttons.Button.Button;\n  private readonly ariaSuccessMessageElement: HTMLElement;\n  readonly #customDeviceList: UI.ListWidget.ListWidget<EmulationModel.EmulatedDevices.EmulatedDevice>;\n  readonly #defaultDeviceList: UI.ListWidget.ListWidget<EmulationModel.EmulatedDevices.EmulatedDevice>;\n  private muteUpdate: boolean;\n  private emulatedDevicesList: EmulationModel.EmulatedDevices.EmulatedDevicesList;\n  private editor?: UI.ListWidget.Editor<EmulationModel.EmulatedDevices.EmulatedDevice>;\n\n  constructor() {\n    super({jslog: `${VisualLogging.pane('devices')}`});\n    this.registerRequiredCSS(devicesSettingsTabStyles);\n\n    this.containerElement =\n        this.contentElement.createChild('div', 'settings-card-container-wrapper').createChild('div');\n    this.containerElement.classList.add('settings-card-container', 'ignore-list-settings');\n\n    this.#defaultDeviceList = new UI.ListWidget.ListWidget(this, false /* delegatesFocus */);\n    this.#defaultDeviceList.registerRequiredCSS(devicesSettingsTabStyles);\n    this.#defaultDeviceList.element.classList.add('devices-list', 'device-card-content');\n\n    this.muteUpdate = false;\n    this.emulatedDevicesList = EmulationModel.EmulatedDevices.EmulatedDevicesList.instance();\n    this.emulatedDevicesList.addEventListener(\n        EmulationModel.EmulatedDevices.Events.CUSTOM_DEVICES_UPDATED, this.devicesUpdated, this);\n    this.emulatedDevicesList.addEventListener(\n        EmulationModel.EmulatedDevices.Events.STANDARD_DEVICES_UPDATED, this.devicesUpdated, this);\n\n    this.ariaSuccessMessageElement = this.contentElement.createChild('div', 'device-success-message');\n    UI.ARIAUtils.markAsPoliteLiveRegion(this.ariaSuccessMessageElement, false);\n\n    this.addCustomButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.addCustomDevice), this.addCustomDevice.bind(this), {jslogContext: 'add-custom-device'});\n    this.addCustomButton.id = 'custom-device-add-button';\n\n    const customSettings = document.createElement('div');\n    customSettings.classList.add('device-card-content');\n    customSettings.appendChild(this.ariaSuccessMessageElement);\n    const deviceList = customSettings.createChild('div');\n    customSettings.appendChild(this.addCustomButton);\n\n    const customDevicesCard = this.containerElement.createChild('devtools-card');\n    customDevicesCard.heading = i18nString(UIStrings.customDevices);\n    customDevicesCard.append(customSettings);\n\n    this.#customDeviceList = new UI.ListWidget.ListWidget(this, false /* delegatesFocus */);\n    this.#customDeviceList.registerRequiredCSS(devicesSettingsTabStyles);\n    this.#customDeviceList.element.classList.add('devices-list');\n    this.#customDeviceList.show(deviceList);\n\n    const defaultDevicesCard = this.containerElement.createChild('devtools-card');\n    defaultDevicesCard.heading = i18nString(UIStrings.defaultDevices);\n    defaultDevicesCard.append(this.#defaultDeviceList.element);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.devicesUpdated();\n  }\n\n  private devicesUpdated(): void {\n    if (this.muteUpdate) {\n      return;\n    }\n\n    this.#defaultDeviceList.clear();\n    this.#customDeviceList.clear();\n\n    let devices = this.emulatedDevicesList.custom().slice();\n    for (let i = 0; i < devices.length; ++i) {\n      this.#customDeviceList.appendItem(devices[i], true);\n    }\n\n    devices = this.emulatedDevicesList.standard().slice();\n    devices.sort(EmulationModel.EmulatedDevices.EmulatedDevice.deviceComparator);\n    for (let i = 0; i < devices.length; ++i) {\n      this.#defaultDeviceList.appendItem(devices[i], false);\n    }\n  }\n\n  private muteAndSaveDeviceList(custom: boolean): void {\n    this.muteUpdate = true;\n    if (custom) {\n      this.emulatedDevicesList.saveCustomDevices();\n    } else {\n      this.emulatedDevicesList.saveStandardDevices();\n    }\n    this.muteUpdate = false;\n  }\n\n  private addCustomDevice(): void {\n    const device = new EmulationModel.EmulatedDevices.EmulatedDevice();\n    device.deviceScaleFactor = 0;\n    device.horizontal.width = 700;\n    device.horizontal.height = 400;\n    device.vertical.width = 400;\n    device.vertical.height = 700;\n    this.#customDeviceList.addNewItem(this.emulatedDevicesList.custom().length, device);\n  }\n\n  private toNumericInputValue(value: number): string {\n    return value ? String(value) : '';\n  }\n\n  renderItem(device: EmulationModel.EmulatedDevices.EmulatedDevice, editable: boolean): Element {\n    const label = document.createElement('label');\n    label.classList.add('devices-list-item');\n    const checkbox = label.createChild('input', 'devices-list-checkbox');\n    checkbox.type = 'checkbox';\n    checkbox.checked = device.show();\n    checkbox.addEventListener('click', onItemClicked.bind(this), false);\n    checkbox.setAttribute('jslog', `${VisualLogging.toggle().track({click: true})}`);\n    const span = document.createElement('span');\n    span.classList.add('device-name');\n    span.appendChild(document.createTextNode(device.title));\n    label.appendChild(span);\n    return label;\n\n    function onItemClicked(this: DevicesSettingsTab, event: Event): void {\n      const show = checkbox.checked;\n      device.setShow(show);\n      this.muteAndSaveDeviceList(editable);\n      event.consume();\n    }\n  }\n\n  removeItemRequested(item: EmulationModel.EmulatedDevices.EmulatedDevice): void {\n    this.emulatedDevicesList.removeCustomDevice(item);\n  }\n\n  commitEdit(\n      device: EmulationModel.EmulatedDevices.EmulatedDevice,\n      editor: UI.ListWidget.Editor<EmulationModel.EmulatedDevices.EmulatedDevice>, isNew: boolean): void {\n    device.title = editor.control('title').value.trim();\n    device.vertical.width = editor.control('width').value ? parseInt(editor.control('width').value, 10) : 0;\n    device.vertical.height = editor.control('height').value ? parseInt(editor.control('height').value, 10) : 0;\n    device.horizontal.width = device.vertical.height;\n    device.horizontal.height = device.vertical.width;\n    device.deviceScaleFactor = editor.control('scale').value ? parseFloat(editor.control('scale').value) : 0;\n    device.userAgent = editor.control('user-agent').value;\n    device.modes = [];\n    device.modes.push({\n      title: '',\n      orientation: EmulationModel.EmulatedDevices.Vertical,\n      insets: new EmulationModel.DeviceModeModel.Insets(0, 0, 0, 0),\n      image: null,\n    });\n    device.modes.push({\n      title: '',\n      orientation: EmulationModel.EmulatedDevices.Horizontal,\n      insets: new EmulationModel.DeviceModeModel.Insets(0, 0, 0, 0),\n      image: null,\n    });\n    device.capabilities = [];\n    const uaType = editor.control('ua-type').value;\n    if (uaType === EmulationModel.DeviceModeModel.UA.MOBILE ||\n        uaType === EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH) {\n      device.capabilities.push(EmulationModel.EmulatedDevices.Capability.MOBILE);\n    }\n    if (uaType === EmulationModel.DeviceModeModel.UA.MOBILE ||\n        uaType === EmulationModel.DeviceModeModel.UA.DESKTOP_TOUCH) {\n      device.capabilities.push(EmulationModel.EmulatedDevices.Capability.TOUCH);\n    }\n    const userAgentControlValue =\n        (editor.control('ua-metadata') as\n         UI.ListWidget.CustomEditorControl<EmulationComponents.UserAgentClientHintsForm.UserAgentClientHintsFormData>)\n            .value.metaData;\n    if (userAgentControlValue) {\n      device.userAgentMetadata = {\n        ...userAgentControlValue,\n        mobile:\n            (uaType === EmulationModel.DeviceModeModel.UA.MOBILE ||\n             uaType === EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH),\n      };\n    }\n    if (isNew) {\n      this.emulatedDevicesList.addCustomDevice(device);\n    } else {\n      this.emulatedDevicesList.saveCustomDevices();\n    }\n    this.addCustomButton.scrollIntoViewIfNeeded();\n    this.addCustomButton.focus();\n    this.ariaSuccessMessageElement.setAttribute(\n        'aria-label', i18nString(UIStrings.deviceAddedOrUpdated, {PH1: device.title}));\n  }\n\n  beginEdit(device: EmulationModel.EmulatedDevices.EmulatedDevice):\n      UI.ListWidget.Editor<EmulationModel.EmulatedDevices.EmulatedDevice> {\n    const editor = this.createEditor();\n    editor.control('title').value = device.title;\n    editor.control('width').value = this.toNumericInputValue(device.vertical.width);\n    editor.control('height').value = this.toNumericInputValue(device.vertical.height);\n    editor.control('scale').value = this.toNumericInputValue(device.deviceScaleFactor);\n    editor.control('user-agent').value = device.userAgent;\n    let uaType;\n    if (device.mobile()) {\n      uaType =\n          device.touch() ? EmulationModel.DeviceModeModel.UA.MOBILE : EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH;\n    } else {\n      uaType =\n          device.touch() ? EmulationModel.DeviceModeModel.UA.DESKTOP_TOUCH : EmulationModel.DeviceModeModel.UA.DESKTOP;\n    }\n    editor.control('ua-type').value = uaType;\n    (editor.control('ua-metadata') as\n     UI.ListWidget.CustomEditorControl<EmulationComponents.UserAgentClientHintsForm.UserAgentClientHintsFormData>)\n        .value = {metaData: device.userAgentMetadata || undefined};\n    return editor;\n  }\n\n  private createEditor(): UI.ListWidget.Editor<EmulationModel.EmulatedDevices.EmulatedDevice> {\n    if (this.editor) {\n      return this.editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<EmulationModel.EmulatedDevices.EmulatedDevice>();\n    this.editor = editor;\n    const content = editor.contentElement();\n\n    const deviceFields = content.createChild('div', 'devices-edit-fields');\n    UI.UIUtils.createTextChild(deviceFields.createChild('b'), i18nString(UIStrings.device));\n    const deviceNameField = editor.createInput('title', 'text', i18nString(UIStrings.deviceName), titleValidator);\n    deviceFields.createChild('div', 'hbox').appendChild(deviceNameField);\n    deviceNameField.id = 'custom-device-name-field';\n    const screen = deviceFields.createChild('div', 'hbox');\n    screen.appendChild(editor.createInput('width', 'text', i18nString(UIStrings.width), widthValidator));\n    screen.appendChild(editor.createInput('height', 'text', i18nString(UIStrings.height), heightValidator));\n    const dpr = editor.createInput('scale', 'text', i18nString(UIStrings.devicePixelRatio), scaleValidator);\n    dpr.classList.add('device-edit-fixed');\n    screen.appendChild(dpr);\n\n    const uaStringFields = content.createChild('div', 'devices-edit-fields');\n    UI.UIUtils.createTextChild(uaStringFields.createChild('b'), i18nString(UIStrings.userAgentString));\n\n    const ua = uaStringFields.createChild('div', 'hbox');\n    ua.appendChild(editor.createInput('user-agent', 'text', i18nString(UIStrings.userAgentString), () => {\n      return {valid: true, errorMessage: undefined};\n    }));\n    const uaTypeOptions = [\n      EmulationModel.DeviceModeModel.UA.MOBILE,\n      EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH,\n      EmulationModel.DeviceModeModel.UA.DESKTOP,\n      EmulationModel.DeviceModeModel.UA.DESKTOP_TOUCH,\n    ];\n    const uaType = editor.createSelect('ua-type', uaTypeOptions, () => {\n      return {valid: true, errorMessage: undefined};\n    }, i18nString(UIStrings.userAgentType));\n    uaType.classList.add('device-edit-fixed');\n    ua.appendChild(uaType);\n\n    const uaMetadata = editor.createCustomControl(\n        'ua-metadata', EmulationComponents.UserAgentClientHintsForm.UserAgentClientHintsForm,\n        userAgentMetadataValidator);\n    uaMetadata.value = {};\n    uaMetadata.addEventListener('clienthintschange', () => editor.requestValidation(), false);\n    content.appendChild(uaMetadata);\n\n    return editor;\n\n    function userAgentMetadataValidator(): UI.ListWidget.ValidatorResult {\n      return uaMetadata.validate();\n    }\n\n    function titleValidator(\n        _item: EmulationModel.EmulatedDevices.EmulatedDevice, _index: number,\n        input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      let valid = false;\n      let errorMessage;\n\n      const value = input.value.trim();\n      if (value.length >= EmulationModel.DeviceModeModel.MaxDeviceNameLength) {\n        errorMessage =\n            i18nString(UIStrings.deviceNameMustBeLessThanS, {PH1: EmulationModel.DeviceModeModel.MaxDeviceNameLength});\n      } else if (value.length === 0) {\n        errorMessage = i18nString(UIStrings.deviceNameCannotBeEmpty);\n      } else {\n        valid = true;\n      }\n\n      return {valid, errorMessage};\n    }\n\n    function widthValidator(\n        _item: EmulationModel.EmulatedDevices.EmulatedDevice, _index: number,\n        input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      return EmulationModel.DeviceModeModel.DeviceModeModel.widthValidator(input.value);\n    }\n\n    function heightValidator(\n        _item: EmulationModel.EmulatedDevices.EmulatedDevice, _index: number,\n        input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      return EmulationModel.DeviceModeModel.DeviceModeModel.heightValidator(input.value);\n    }\n\n    function scaleValidator(\n        _item: EmulationModel.EmulatedDevices.EmulatedDevice, _index: number,\n        input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      return EmulationModel.DeviceModeModel.DeviceModeModel.scaleValidator(input.value);\n    }\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.device-card-content {\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.list {\n  &:has(div) {\n    border: none;\n  }\n}\n\n#custom-device-add-button {\n  padding: var(--sys-size-5) var(--sys-size-6);\n}\n\n.devices-settings-tab .devices-button-row {\n  flex: none;\n  display: flex;\n\n  devtools-button {\n    margin: 4px 0 0 5px;\n  }\n}\n\n.devices-settings-tab .devices-list {\n  width: min(350px, 100%);\n  margin-top: 10px;\n}\n\n.devices-list-item {\n  padding: var(--sys-size-3) var(--sys-size-6);\n  height: var(--sys-size-13);\n  display: flex;\n  align-items: center;\n  flex: auto 1 1;\n  overflow: hidden;\n  color: var(--sys-color-on-surface);\n  user-select: none;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n.devices-list-checkbox {\n  height: 12px;\n  width: 12px;\n  margin: 2px 5px 2px 2px;\n  flex: none;\n  pointer-events: none;\n}\n\n.device-name {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.devices-edit-fields {\n  flex: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding-left: 4px;\n  margin-bottom: 5px;\n}\n\n.devices-edit-fields b {\n  margin-top: 8px;\n  margin-bottom: 0;\n}\n\n.devices-edit-client-hints-heading {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 5px;\n}\n/* Don't want the bottom margin in the specific case of the folding one;\n * it messes with alignment with the arrow (which is a ::before) and  it's\n * spaced reasonably without it anyway\n */\nli .devices-edit-client-hints-heading {\n  margin-bottom: 0;\n}\n\n.devices-edit-client-hints-heading b {\n  margin-inline-end: 2px;\n}\n\n.devices-edit-client-hints-heading .help-icon {\n  margin-left: 2px;\n  margin-right: 2px;\n  vertical-align: middle;\n}\n\n.devices-edit-client-hints-heading a:focus {\n  box-shadow: var(--sys-color-state-focus-ring);\n}\n\n.devices-edit-fields input {\n  flex: auto;\n  margin: 8px 5px 0;\n}\n\nli.devices-edit-client-hints-field {\n  /* Cancel out padding from treeview's .tree-outline ol */\n  left: -12px;\n}\n\n.devices-edit-client-hints-field input {\n  flex: auto;\n  margin: 8px 5px 0;\n}\n\n.devices-edit-fields .device-edit-fixed {\n  flex: 0 0 140px;\n}\n\n.devices-edit-fields select {\n  margin: 8px 5px 0;\n}\n\n/*# sourceURL=${import.meta.resolve('./devicesSettingsTab.css')} */`;"],
  "mappings": "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",
  "names": []
}
