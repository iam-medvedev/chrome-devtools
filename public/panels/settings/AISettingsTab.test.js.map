{"version":3,"file":"AISettingsTab.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/settings/AISettingsTab.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment, getGetHostConfigStub} from '../../testing/EnvironmentHelpers.js';\nimport * as Switch from '../../ui/components/switch/switch.js';\n\nimport * as Settings from './settings.js';\n\nasync function drainMicroTasks() {\n  await new Promise(resolve => setTimeout(resolve, 0));\n}\n\ndescribeWithEnvironment('AISettingsTab', () => {\n  let view: Settings.AISettingsTab.AISettingsTab|undefined;\n\n  afterEach(async () => {\n    await drainMicroTasks();\n    view?.remove();\n  });\n\n  function mockHostConfigWithExplainThisResourceEnabled() {\n    getGetHostConfigStub({\n      devToolsExplainThisResourceDogfood: {\n        enabled: true,\n        modelId: 'test',\n      },\n    });\n  }\n\n  function isExpanded(details: Element): boolean {\n    return details.classList.contains('open');\n  }\n\n  async function renderAISettings(): Promise<{\n    switches: Switch.Switch.Switch[],\n    details: Element[],\n    dropdownButtons: HTMLElement[],\n    toggleContainers: HTMLElement[],\n  }> {\n    Common.Settings.moduleSetting('console-insights-enabled').set(false);\n    Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n\n    view = new Settings.AISettingsTab.AISettingsTab();\n    renderElementIntoDOM(view);\n    await view.render();\n    assert.isNotNull(view.shadowRoot);\n\n    const switches = Array.from(view.shadowRoot.querySelectorAll('devtools-switch')) as Switch.Switch.Switch[];\n    assert.strictEqual(switches.length, 2);\n    const details = Array.from(view.shadowRoot.querySelectorAll('.whole-row'));\n    assert.strictEqual(details.length, 2);\n    const dropdownButtons = Array.from(view.shadowRoot.querySelectorAll('.dropdown devtools-button')) as HTMLElement[];\n    assert.strictEqual(dropdownButtons.length, 2);\n    const toggleContainers =\n        Array.from(view.shadowRoot.querySelectorAll('.toggle-container')) as Switch.Switch.Switch[];\n    assert.strictEqual(toggleContainers.length, 2);\n    return {switches, details, dropdownButtons, toggleContainers};\n  }\n\n  it('renders', async () => {\n    Common.Settings.moduleSetting('console-insights-enabled').set(true);\n    Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n\n    view = new Settings.AISettingsTab.AISettingsTab();\n    renderElementIntoDOM(view);\n    await view.render();\n    assert.isNotNull(view.shadowRoot);\n\n    const sharedDisclaimerHeader = view.shadowRoot.querySelector('.shared-disclaimer h2');\n    assert.strictEqual(sharedDisclaimerHeader?.textContent, 'Boost your productivity with AI');\n\n    const settingCards = view.shadowRoot.querySelectorAll('.setting-card h2');\n    const settingNames = Array.from(settingCards).map(element => element.textContent);\n    assert.deepEqual(settingNames, ['Console Insights', 'AI assistance']);\n\n    const settingCardDesc = view.shadowRoot.querySelectorAll('.setting-description');\n    assert.strictEqual(settingCardDesc[1].textContent, 'Get help with understanding CSS styles');\n  });\n\n  it('renders with explain this resource enabled', async () => {\n    mockHostConfigWithExplainThisResourceEnabled();\n    Common.Settings.moduleSetting('console-insights-enabled').set(true);\n    Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n\n    view = new Settings.AISettingsTab.AISettingsTab();\n    renderElementIntoDOM(view);\n    await view.render();\n    assert.isNotNull(view.shadowRoot);\n\n    const settingCardDesc = view.shadowRoot.querySelectorAll('.setting-description');\n    assert.strictEqual(settingCardDesc[1].textContent, 'Get help with understanding CSS styles, and network requests');\n  });\n\n  it('can turn feature on, which automatically expands it', async () => {\n    const {switches, details} = await renderAISettings();\n    assert.isFalse(Common.Settings.moduleSetting('console-insights-enabled').get());\n    assert.isFalse(isExpanded(details[0]));\n\n    switches[0].dispatchEvent(new Switch.Switch.SwitchChangeEvent(true));\n    assert.isTrue(Common.Settings.moduleSetting('console-insights-enabled').get());\n    assert.isTrue(isExpanded(details[0]));\n  });\n\n  it('can expand and collaps details via click', async () => {\n    const {details, dropdownButtons} = await renderAISettings();\n    assert.isFalse(isExpanded(details[0]));\n    assert.isFalse(Common.Settings.moduleSetting('console-insights-enabled').get());\n\n    dropdownButtons[0].click();\n    assert.isTrue(isExpanded(details[0]));\n    assert.isFalse(Common.Settings.moduleSetting('console-insights-enabled').get());\n\n    dropdownButtons[0].click();\n    assert.isFalse(isExpanded(details[0]));\n    assert.isFalse(Common.Settings.moduleSetting('console-insights-enabled').get());\n  });\n\n  it('can turn feature off without collapsing it', async () => {\n    const {switches, details, dropdownButtons} = await renderAISettings();\n    dropdownButtons[1].click();\n    assert.isTrue(Common.Settings.moduleSetting('ai-assistance-enabled').get());\n    assert.isTrue(isExpanded(details[1]));\n\n    (switches[1].parentElement as HTMLElement).click();\n    assert.isFalse(Common.Settings.moduleSetting('ai-assistance-enabled').get());\n    assert.isTrue(isExpanded(details[1]));\n  });\n\n  it('disables switches if blocked by age', async () => {\n    const underAgeExplainer = 'This feature is only available to users who are 18 years of age or older';\n    const aidaAccessStub = sinon.stub(Host.AidaClient.AidaClient, 'checkAccessPreconditions');\n    aidaAccessStub.returns(Promise.resolve(Host.AidaClient.AidaAccessPreconditions.AVAILABLE));\n    const hostConfigStub = getGetHostConfigStub({\n      aidaAvailability: {\n        blockedByAge: true,\n      },\n      devToolsConsoleInsights: {\n        enabled: true,\n      },\n      devToolsFreestyler: {\n        enabled: true,\n      },\n    });\n\n    const {switches, toggleContainers} = await renderAISettings();\n    assert.isTrue(switches[0].disabled);\n    assert.strictEqual(toggleContainers[0].title, underAgeExplainer);\n    assert.isTrue(switches[1].disabled);\n    assert.strictEqual(toggleContainers[1].title, underAgeExplainer);\n\n    aidaAccessStub.restore();\n    hostConfigStub.restore();\n  });\n\n  it('updates when the user logs in', async () => {\n    const notLoggedInExplainer = 'This feature is only available when you sign into Chrome with your Google account.';\n    const aidaAccessStub = sinon.stub(Host.AidaClient.AidaClient, 'checkAccessPreconditions');\n    aidaAccessStub.returns(Promise.resolve(Host.AidaClient.AidaAccessPreconditions.NO_ACCOUNT_EMAIL));\n\n    const {switches, toggleContainers} = await renderAISettings();\n    assert.isTrue(switches[0].disabled);\n    assert.strictEqual(toggleContainers[0].title, notLoggedInExplainer);\n    assert.isTrue(switches[1].disabled);\n    assert.strictEqual(toggleContainers[1].title, notLoggedInExplainer);\n\n    aidaAccessStub.returns(Promise.resolve(Host.AidaClient.AidaAccessPreconditions.AVAILABLE));\n    Host.AidaClient.HostConfigTracker.instance().dispatchEventToListeners(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED);\n    await drainMicroTasks();\n    assert.isFalse(switches[0].disabled);\n    assert.isFalse(switches[1].disabled);\n    aidaAccessStub.restore();\n  });\n\n  it('renders disabled switch component with reason', async () => {\n    Common.Settings.moduleSetting('console-insights-enabled').setRegistration({\n      settingName: 'console-insights-enabled',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: false,\n      disabledCondition: () => {\n        return {disabled: true, reason: 'reason 1'};\n      },\n    });\n    Common.Settings.moduleSetting('ai-assistance-enabled').setRegistration({\n      settingName: 'ai-assistance-enabled',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: true,\n      disabledCondition: () => {\n        return {disabled: true, reason: 'reason 2'};\n      },\n    });\n    const stub = sinon.stub(Host.AidaClient.AidaClient, 'checkAccessPreconditions');\n    stub.returns(Promise.resolve(Host.AidaClient.AidaAccessPreconditions.AVAILABLE));\n\n    const {switches, toggleContainers} = await renderAISettings();\n    assert.isTrue(switches[0].disabled);\n    assert.strictEqual(toggleContainers[0].title, 'reason 1');\n    assert.isTrue(switches[1].disabled);\n    assert.strictEqual(toggleContainers[1].title, 'reason 2');\n    stub.restore();\n  });\n});\n"]}