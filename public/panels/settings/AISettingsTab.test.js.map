{"version":3,"file":"AISettingsTab.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/settings/AISettingsTab.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport * as Switch from '../../ui/components/switch/switch.js';\n\nimport * as Settings from './settings.js';\n\ndescribeWithEnvironment('AISettingsTab', () => {\n  function isExpanded(details: Element): boolean {\n    return details.classList.contains('open');\n  }\n\n  async function renderAISettings(): Promise<{\n    switches: Switch.Switch.Switch[],\n    details: Element[],\n    dropdownButtons: HTMLElement[],\n  }> {\n    Common.Settings.moduleSetting('console-insights-enabled').set(false);\n    Common.Settings.moduleSetting('freestyler-enabled').set(true);\n\n    const view = new Settings.AISettingsTab.AISettingsTab();\n    renderElementIntoDOM(view);\n    await view.render();\n    assert.isNotNull(view.shadowRoot);\n\n    const switches = Array.from(view.shadowRoot.querySelectorAll('devtools-switch')) as Switch.Switch.Switch[];\n    assert.strictEqual(switches.length, 2);\n    const details = Array.from(view.shadowRoot.querySelectorAll('.whole-row'));\n    assert.strictEqual(details.length, 2);\n    const dropdownButtons = Array.from(view.shadowRoot.querySelectorAll('.dropdown devtools-button')) as HTMLElement[];\n    assert.strictEqual(dropdownButtons.length, 2);\n    return {switches, details, dropdownButtons};\n  }\n\n  it('renders', async () => {\n    Common.Settings.moduleSetting('console-insights-enabled').set(true);\n    Common.Settings.moduleSetting('freestyler-enabled').set(true);\n\n    const view = new Settings.AISettingsTab.AISettingsTab();\n    renderElementIntoDOM(view);\n    await view.render();\n    assert.isNotNull(view.shadowRoot);\n\n    const sharedDisclaimerHeader = view.shadowRoot.querySelector('.shared-disclaimer h2');\n    assert.strictEqual(sharedDisclaimerHeader?.textContent, 'Boost your productivity with Chrome AI');\n\n    const settingCards = view.shadowRoot.querySelectorAll('.setting-card div:first-child');\n    const settingNames = Array.from(settingCards).map(element => element.textContent);\n    assert.deepEqual(settingNames, ['Console Insights', 'Freestyler']);\n  });\n\n  it('can turn feature on, which automatically expands it', async () => {\n    const {switches, details} = await renderAISettings();\n    assert.isFalse(Common.Settings.moduleSetting('console-insights-enabled').get());\n    assert.isFalse(isExpanded(details[0]));\n\n    switches[0].dispatchEvent(new Switch.Switch.SwitchChangeEvent(true));\n    assert.isTrue(Common.Settings.moduleSetting('console-insights-enabled').get());\n    assert.isTrue(isExpanded(details[0]));\n  });\n\n  it('can expand and collaps details via click', async () => {\n    const {details, dropdownButtons} = await renderAISettings();\n    assert.isFalse(isExpanded(details[0]));\n    assert.isFalse(Common.Settings.moduleSetting('console-insights-enabled').get());\n\n    dropdownButtons[0].click();\n    assert.isTrue(isExpanded(details[0]));\n    assert.isFalse(Common.Settings.moduleSetting('console-insights-enabled').get());\n\n    dropdownButtons[0].click();\n    assert.isFalse(isExpanded(details[0]));\n    assert.isFalse(Common.Settings.moduleSetting('console-insights-enabled').get());\n  });\n\n  it('can turn feature off without collapsing it', async () => {\n    const {switches, details, dropdownButtons} = await renderAISettings();\n    dropdownButtons[1].click();\n    assert.isTrue(Common.Settings.moduleSetting('freestyler-enabled').get());\n    assert.isTrue(isExpanded(details[1]));\n\n    (switches[1].parentElement as HTMLElement).click();\n    assert.isFalse(Common.Settings.moduleSetting('freestyler-enabled').get());\n    assert.isTrue(isExpanded(details[1]));\n  });\n\n  it('renders disabled switch component with reason', async () => {\n    Common.Settings.moduleSetting('console-insights-enabled').setRegistration({\n      settingName: 'console-insights-enabled',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: false,\n      disabledCondition: () => {\n        return {disabled: true, reason: 'reason 1'};\n      },\n    });\n    Common.Settings.moduleSetting('freestyler-enabled').setRegistration({\n      settingName: 'freestyler-enabled',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: true,\n      disabledCondition: () => {\n        return {disabled: true, reason: 'reason 2'};\n      },\n    });\n    const {switches} = await renderAISettings();\n    assert.isTrue(switches[0].disabled);\n    assert.strictEqual(switches[0].title, 'reason 1');\n    assert.isTrue(switches[1].disabled);\n    assert.strictEqual(switches[1].title, 'reason 2');\n  });\n});\n"]}