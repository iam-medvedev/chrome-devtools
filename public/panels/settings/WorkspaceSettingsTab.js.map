{"version":3,"file":"WorkspaceSettingsTab.js","sourceRoot":"","sources":["../../../../../../front_end/panels/settings/WorkspaceSettingsTab.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/legacy.js';\nimport '../../ui/components/buttons/buttons.js';\nimport '../../ui/components/cards/cards.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport workspaceSettingsTabStyles from './workspaceSettingsTab.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text of a DOM element in Workspace Settings Tab of the Workspace settings in Settings\n   */\n  workspace: 'Workspace',\n  /**\n   * @description Text of a DOM element in Workspace Settings Tab of the Workspace settings in Settings\n   */\n  mappingsAreInferredAutomatically: 'Mappings are inferred automatically.',\n  /**\n   * @description Text of the add button in Workspace Settings Tab of the Workspace settings in Settings\n   */\n  addFolder: 'Add folder',\n  /**\n   * @description Label element text content in Workspace Settings Tab of the Workspace settings in Settings\n   */\n  folderExcludePattern: 'Exclude from workspace',\n  /**\n   * @description Label for an item to remove something\n   */\n  remove: 'Remove',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/WorkspaceSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface WorkspaceSettingsTabInput {\n  excludePatternSetting: Common.Settings.RegExpSetting;\n  fileSystems: Array<{displayName: string, fileSystem: Persistence.IsolatedFileSystem.IsolatedFileSystem}>;\n  onAddClicked: () => void;\n  onRemoveClicked: (fileSystem: Persistence.IsolatedFileSystem.IsolatedFileSystem) => void;\n}\nexport type View = (input: WorkspaceSettingsTabInput, output: object, target: HTMLElement) => void;\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  // clang-format off\n  render(html`\n    <style>${workspaceSettingsTabStyles}</style>\n    <div class=\"settings-card-container-wrapper\" jslog=${VisualLogging.pane('workspace')}>\n      <div class=\"settings-card-container\">\n        <devtools-card heading=${i18nString(UIStrings.workspace)}>\n          <div class=\"folder-exclude-pattern\">\n            <label for=\"workspace-setting-folder-exclude-pattern\">${i18nString(UIStrings.folderExcludePattern)}</label>\n            <input\n              class=\"harmony-input\"\n              jslog=${VisualLogging.textField().track({keydown: 'Enter', change: true}).context(input.excludePatternSetting.name)}\n              ${UI.SettingsUI.bindToSetting(input.excludePatternSetting)}\n              id=\"workspace-setting-folder-exclude-pattern\"></input>\n          </div>\n          <div class=\"mappings-info\">${i18nString(UIStrings.mappingsAreInferredAutomatically)}</div>\n        </devtools-card>\n        ${input.fileSystems.map(fileSystem => html`\n          <devtools-card heading=${fileSystem.displayName}>\n            <devtools-icon name=\"folder\" slot=\"heading-prefix\"></devtools-icon>\n            <div class=\"mapping-view-container\">\n              <devtools-widget .widgetConfig=${\n                  UI.Widget.widgetConfig(\n                      Persistence.EditFileSystemView.EditFileSystemView,\n                      {fileSystem: fileSystem.fileSystem})}>\n              </devtools-widget>\n            </div>\n            <devtools-button\n              slot=\"heading-suffix\"\n              .variant=${Buttons.Button.Variant.OUTLINED}\n              jslog=${VisualLogging.action().track({click: true}).context('settings.remove-file-system')}\n              @click=${input.onRemoveClicked.bind(null, fileSystem.fileSystem)}>${\n      i18nString(UIStrings.remove)}</devtools-button>\n          </devtools-card>\n        `)}\n        <div class=\"add-button-container\">\n          <devtools-button\n            class=\"add-folder\"\n            .variant=${Buttons.Button.Variant.OUTLINED}\n            jslog=${VisualLogging.action().track({click: true}).context('sources.add-folder-to-workspace')}\n            @click=${input.onAddClicked}>${i18nString(UIStrings.addFolder)}</devtools-button>\n        </div>\n      </div>\n    </div>`,\n         target);\n  // clang-format on\n};\n\nexport class WorkspaceSettingsTab extends UI.Widget.VBox {\n  readonly #view: View;\n  #eventListeners: Common.EventTarget.EventDescriptor[] = [];\n\n  constructor(view: View = DEFAULT_VIEW) {\n    super();\n    this.#view = view;\n  }\n\n  override wasShown(): void {\n    this.#eventListeners = [\n      Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance().addEventListener(\n          Persistence.IsolatedFileSystemManager.Events.FileSystemAdded, this.requestUpdate.bind(this)),\n      Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance().addEventListener(\n          Persistence.IsolatedFileSystemManager.Events.FileSystemRemoved, this.requestUpdate.bind(this)),\n    ];\n\n    this.requestUpdate();\n  }\n\n  override willHide(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.#eventListeners = [];\n  }\n\n  override performUpdate(): void {\n    const input: WorkspaceSettingsTabInput = {\n      excludePatternSetting: Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance()\n                                 .workspaceFolderExcludePatternSetting(),\n      onAddClicked: () => Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance().addFileSystem(),\n      onRemoveClicked: fs =>\n          Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance().removeFileSystem(fs),\n      fileSystems: Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance()\n                       .fileSystems()\n                       .filter(fileSystem => {\n                         const networkPersistenceProject =\n                             Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().project();\n                         return fileSystem instanceof Persistence.IsolatedFileSystem.IsolatedFileSystem &&\n                             (!networkPersistenceProject ||\n                              Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance().fileSystem(\n                                  (networkPersistenceProject as Persistence.FileSystemWorkspaceBinding.FileSystem)\n                                      .fileSystemPath()) !== fileSystem);\n                       })\n                       .map(fileSystem => {\n                         const displayName = WorkspaceSettingsTab.#getFilename(fileSystem);\n                         return {\n                           displayName,\n                           fileSystem: fileSystem as Persistence.IsolatedFileSystem.IsolatedFileSystem,\n                         };\n                       })\n                       .sort((fs1, fs2) => fs1.displayName.localeCompare(fs2.displayName)),\n    };\n    this.#view(input, {}, this.contentElement);\n  }\n\n  static #getFilename(fileSystem: Persistence.PlatformFileSystem.PlatformFileSystem): string {\n    const fileSystemPath = fileSystem.path();\n    const lastIndexOfSlash = fileSystemPath.lastIndexOf('/');\n    const lastPathComponent = fileSystemPath.substring(lastIndexOfSlash + 1);\n    return decodeURIComponent(lastPathComponent);\n  }\n}\n"]}