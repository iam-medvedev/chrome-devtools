{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/settings/components/SyncSection.ts", "syncSection.css.js"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/chrome_link/chrome_link.js';\nimport '../../../ui/components/settings/settings.js';\nimport '../../../ui/components/tooltips/tooltips.js';\n\nimport type * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as PanelCommon from '../../common/common.js';\n\nimport syncSectionStyles from './syncSection.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text shown to the user in the Settings UI. 'This setting' refers\n   * to a checkbox that is disabled.\n   */\n  syncDisabled: 'To turn this setting on, you must enable Chrome sync.',\n  /**\n   * @description Text shown to the user in the Settings UI. 'This setting' refers\n   * to a checkbox that is disabled.\n   */\n  preferencesSyncDisabled: 'To turn this setting on, you must first enable settings sync in Chrome.',\n  /**\n   * @description Label for the account email address. Shown in the DevTools Settings UI in\n   * front of the email address currently used for Chrome Sync.\n   */\n  signedIn: 'Signed into Chrome as:',\n  /**\n   * @description Label for the account settings. Shown in the DevTools Settings UI in\n   * case the user is not logged in to Chrome.\n   */\n  notSignedIn: 'You\\'re not signed into Chrome.',\n  /**\n   * @description Label for the Google Developer Program profile status that corresponds to\n   * standard plan (No subscription).\n   */\n  gdpStandardPlan: 'Standard plan',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds to\n   * `PREMIUM_ANNUAL` plan.\n   */\n  gdpPremiumAnnualSubscription: 'Premium (Annual)',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds to\n   * `PREMIUM_MONTHLY` plan.\n   */\n  gdpPremiumMonthlySubscription: 'Premium (Monthly)',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds to\n   * `PRO_ANNUAL` plan.\n   */\n  gdpProAnnualSubscription: 'Pro (Annual)',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds to\n   * `PRO_MONTHLY` plan.\n   */\n  gdpProMonthlySubscription: 'Pro (Monthly)',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds\n   * to a plan not known by the client.\n   */\n  gdpUnknownSubscription: 'Unknown plan',\n  /**\n   * @description Label for Sign-Up button for the Google Developer Program profiles.\n   */\n  signUp: 'Sign up',\n  /**\n   * @description Text for the data notice right after the settings checkbox.\n   */\n  relevantDataDisclaimer: '(Relevant data is sent to Google)',\n  /**\n   * @description Link text for opening the Google Developer Program profile page.\n   */\n  viewProfile: 'View profile',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/components/SyncSection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst lockedString = i18n.i18n.lockedString;\n\nconst {html} = Lit;\n\nfunction getGdpSubscriptionText(profile: Host.GdpClient.Profile): Platform.UIString.LocalizedString {\n  if (!profile.activeSubscription ||\n      profile.activeSubscription.subscriptionStatus !== Host.GdpClient.SubscriptionStatus.ENABLED) {\n    return i18nString(UIStrings.gdpStandardPlan);\n  }\n\n  switch (profile.activeSubscription.subscriptionTier) {\n    case Host.GdpClient.SubscriptionTier.PREMIUM_ANNUAL:\n      return i18nString(UIStrings.gdpPremiumAnnualSubscription);\n    case Host.GdpClient.SubscriptionTier.PREMIUM_MONTHLY:\n      return i18nString(UIStrings.gdpPremiumMonthlySubscription);\n    case Host.GdpClient.SubscriptionTier.PRO_ANNUAL:\n      return i18nString(UIStrings.gdpProAnnualSubscription);\n    case Host.GdpClient.SubscriptionTier.PRO_MONTHLY:\n      return i18nString(UIStrings.gdpProMonthlySubscription);\n    default:\n      return i18nString(UIStrings.gdpUnknownSubscription);\n  }\n}\n\nconst GDP_LOGO_IMAGE_URL = new URL('../../../Images/gdp-logo-standalone.svg', import.meta.url).toString();\n// TODO(crbug.com/441679275): Update once the API is enabled for prod.\nconst GOOGLE_DEVELOPER_PROGRAM_PROFILE_LINK = 'https://developers.devsite.corp.google.com/profile/u/';\n\nexport interface SyncSectionData {\n  syncInfo: Host.InspectorFrontendHostAPI.SyncInformation;\n  syncSetting: Common.Settings.Setting<boolean>;\n  receiveBadgesSetting: Common.Settings.Setting<boolean>;\n  gdpProfile?: Host.GdpClient.Profile;\n}\n\nexport class SyncSection extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #syncInfo: Host.InspectorFrontendHostAPI.SyncInformation = {isSyncActive: false};\n  #syncSetting?: Common.Settings.Setting<boolean>;\n  #receiveBadgesSetting?: Common.Settings.Setting<boolean>;\n  #gdpProfile?: Host.GdpClient.Profile;\n\n  set data(data: SyncSectionData) {\n    this.#syncInfo = data.syncInfo;\n    this.#syncSetting = data.syncSetting;\n    this.#receiveBadgesSetting = data.receiveBadgesSetting;\n    this.#gdpProfile = data.gdpProfile;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #render(): void {\n    if (!this.#syncSetting) {\n      throw new Error('SyncSection is not properly initialized');\n    }\n\n    // TODO: this should not probably happen in render, instead, the setting\n    // should be disabled.\n    const checkboxDisabled = !this.#syncInfo.isSyncActive || !this.#syncInfo.arePreferencesSynced;\n    this.#syncSetting?.setDisabled(checkboxDisabled);\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    Lit.render(html`\n      <style>${syncSectionStyles}</style>\n      <fieldset>\n        ${renderAccountInfo(this.#syncInfo)}\n        ${renderSettingCheckboxIfNeeded(this.#syncInfo, this.#syncSetting)}\n        ${renderGdpSectionIfNeeded({ receiveBadgesSetting: this.#receiveBadgesSetting, gdpProfile: this.#gdpProfile })}\n      </fieldset>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nfunction renderSettingCheckboxIfNeeded(\n    syncInfo: Host.InspectorFrontendHostAPI.SyncInformation,\n    syncSetting: Common.Settings.Setting<boolean>): Lit.LitTemplate {\n  if (!syncInfo.accountEmail) {\n    return Lit.nothing;\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"setting-checkbox-container\">\n      <setting-checkbox class=\"setting-checkbox\" .data=${{setting: syncSetting}}>\n      </setting-checkbox>\n      ${renderWarningIfNeeded(syncInfo)}\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderWarningIfNeeded(syncInfo: Host.InspectorFrontendHostAPI.SyncInformation): Lit.LitTemplate {\n  const hasWarning = !syncInfo.isSyncActive || !syncInfo.arePreferencesSynced;\n  if (!hasWarning) {\n    return Lit.nothing;\n  }\n\n  const warningLink = !syncInfo.isSyncActive ?\n      'chrome://settings/syncSetup' as Platform.DevToolsPath.UrlString :\n      'chrome://settings/syncSetup/advanced' as Platform.DevToolsPath.UrlString;\n  const warningText =\n      !syncInfo.isSyncActive ? i18nString(UIStrings.syncDisabled) : i18nString(UIStrings.preferencesSyncDisabled);\n  // clang-format off\n  return html`\n    <devtools-chrome-link .href=${warningLink}>\n      <devtools-button\n        aria-describedby=settings-sync-info\n        .iconName=${'info'}\n        .variant=${Buttons.Button.Variant.ICON}\n        .size=${Buttons.Button.Size.SMALL}>\n      </devtools-button>\n    </devtools-chrome-link>\n    <devtools-tooltip\n        id=settings-sync-info\n        variant=simple>\n      ${warningText}\n    </devtools-tooltip>\n  `;\n  // clang-format on\n}\n\nfunction renderAccountInfo(syncInfo: Host.InspectorFrontendHostAPI.SyncInformation): Lit.LitTemplate {\n  if (!syncInfo.accountEmail) {\n    // clang-format off\n    return html`\n      <div class=\"not-signed-in\">${i18nString(UIStrings.notSignedIn)}</div>\n    `;\n    // clang-format on\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"account-info\">\n      <img src=\"data:image/png;base64, ${syncInfo.accountImage}\" alt=\"Account avatar\" />\n      <div class=\"account-email\">\n        <span>${i18nString(UIStrings.signedIn)}</span>\n        <span>${syncInfo.accountEmail}</span>\n      </div>\n    </div>`;\n  // clang-format on\n}\n\nfunction renderGdpSectionIfNeeded({\n  receiveBadgesSetting,\n  gdpProfile,\n}: {\n  receiveBadgesSetting?: Common.Settings.Setting<boolean>,\n  gdpProfile?: Host.GdpClient.Profile,\n}): Lit.LitTemplate {\n  // clang-format off\n  if (!Root.Runtime.hostConfig.devToolsGdpProfiles?.enabled) {\n    return Lit.nothing;\n  }\n\n  function renderBrand(): Lit.LitTemplate {\n    return html`\n      <div class=\"gdp-profile-header\">\n        <img src=${GDP_LOGO_IMAGE_URL} class=\"gdp-logo\" alt=\"Google Developer Program\">\n        ${lockedString('Google Developer Program')}\n      </div>\n    `;\n  }\n\n  return html`\n    <div class=\"gdp-profile-container\">\n      <div class=\"divider\"></div>\n      ${gdpProfile ? html`\n        <div class=\"gdp-profile-details-content\">\n          ${renderBrand()}\n          <div class=\"plan-details\">\n            ${getGdpSubscriptionText(gdpProfile)}\n            &nbsp;·&nbsp;\n            <x-link class=\"link\" href=${GOOGLE_DEVELOPER_PROGRAM_PROFILE_LINK}>\n              ${i18nString(UIStrings.viewProfile)}\n            </x-link></div>\n            ${receiveBadgesSetting ? html`\n              <div class=\"setting-container\">\n                <setting-checkbox class=\"setting-checkbox\" .data=${{setting: receiveBadgesSetting}}></setting-checkbox>\n                <span>${i18nString(UIStrings.relevantDataDisclaimer)}</span>\n              </div>` : Lit.nothing}\n        </div>\n      ` : html`\n        <div class=\"gdp-profile-sign-up-content\">\n          ${renderBrand()}\n          <devtools-button\n            @click=${() => PanelCommon.GdpSignUpDialog.show()}\n            .jslogContext=${'gdp.sign-up-dialog-open'}\n            .variant=${Buttons.Button.Variant.OUTLINED}>\n              ${i18nString(UIStrings.signUp)}\n          </devtools-button>\n        </div>\n      `}\n    </div>\n  `;\n}\n// clang-format on\n\ncustomElements.define('devtools-sync-section', SyncSection);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-sync-section': SyncSection;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  break-inside: avoid;\n  display: block;\n  width: 100%;\n  position: relative;\n}\n\nfieldset {\n  border: 0;\n  padding: 0;\n  padding: 4px 0 0;\n}\n\n.link {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n  outline-offset: 2px;\n}\n\nimg {\n  border: 0;\n  border-radius: var(--sys-shape-corner-full);\n  display: block;\n  height: var(--sys-size-9);\n  width: var(--sys-size-9);\n}\n\n.account-info {\n  display: flex;\n  align-items: center;\n}\n\n.account-email {\n  display: flex;\n  flex-direction: column;\n  margin-left: 8px;\n}\n\n.not-signed-in {\n  padding-bottom: 4px;\n}\n\n.setting-checkbox-container {\n  display: flex;\n  align-items: center;\n  gap: var(--sys-size-2);\n}\n\n.setting-checkbox {\n  display: inline-block;\n}\n\n.gdp-profile-container {\n  padding-bottom: var(--sys-size-4);\n\n  & .divider {\n    left: 0;\n    position: absolute;\n    width: 100%;\n    height: var(--sys-size-1);\n    background: var(--sys-color-divider);\n  }\n\n  & .gdp-profile-header {\n    display: flex;\n    align-items: center;\n    gap: var(--sys-size-5);\n    font-family: \"Google Sans\", system-ui;\n    font-size: var(--sys-typescale-body3-size);\n    height: var(--sys-size-11);\n\n    .gdp-logo {\n      width: 34px;\n      height: fit-content;\n    }\n  }\n\n  & .gdp-profile-sign-up-content {\n    padding-top: var(--sys-size-7);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  & .gdp-profile-details-content {\n    padding-top: var(--sys-size-7);\n    font: var(--sys-typescale-body4-regular);\n\n    & .plan-details {\n      margin-top: var(--sys-size-3);\n      height: 18px;\n      display: flex;\n      align-items: center;\n    }\n\n    & .setting-container {\n      /* \\\\'<settigns-checkbox>\\\\' already provides 6px margin and we want to get rid of it here */\n      margin: calc(var(--sys-size-3) - 6px) -6px -6px;\n      display: flex;\n      align-items: center;\n      gap: var(--sys-size-2);\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./syncSection.css')} */`;"],
  "mappings": "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",
  "names": []
}
