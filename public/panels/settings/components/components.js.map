{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/settings/components/SyncSection.ts", "syncSection.css.js"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/chrome_link/chrome_link.js';\nimport '../../../ui/components/settings/settings.js';\nimport '../../../ui/components/tooltips/tooltips.js';\n\nimport type * as Common from '../../../core/common/common.js';\nimport type * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport syncSectionStyles from './syncSection.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text shown to the user in the Settings UI. 'This setting' refers\n   * to a checkbox that is disabled.\n   */\n  syncDisabled: 'To turn this setting on, you must enable Chrome sync.',\n  /**\n   * @description Text shown to the user in the Settings UI. 'This setting' refers\n   * to a checkbox that is disabled.\n   */\n  preferencesSyncDisabled: 'To turn this setting on, you must first enable settings sync in Chrome.',\n  /**\n   * @description Label for the account email address. Shown in the DevTools Settings UI in\n   * front of the email address currently used for Chrome Sync.\n   */\n  signedIn: 'Signed into Chrome as:',\n  /**\n   * @description Label for the account settings. Shown in the DevTools Settings UI in\n   * case the user is not logged in to Chrome.\n   */\n  notSignedIn: 'You\\'re not signed into Chrome.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/components/SyncSection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface SyncSectionData {\n  syncInfo: Host.InspectorFrontendHostAPI.SyncInformation;\n  syncSetting: Common.Settings.Setting<boolean>;\n}\n\nexport class SyncSection extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #syncInfo: Host.InspectorFrontendHostAPI.SyncInformation = {isSyncActive: false};\n  #syncSetting?: Common.Settings.Setting<boolean>;\n\n  set data(data: SyncSectionData) {\n    this.#syncInfo = data.syncInfo;\n    this.#syncSetting = data.syncSetting;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #render(): void {\n    if (!this.#syncSetting) {\n      throw new Error('SyncSection is not properly initialized');\n    }\n\n    // TODO: this should not probably happen in render, instead, the setting\n    // should be disabled.\n    const checkboxDisabled = !this.#syncInfo.isSyncActive || !this.#syncInfo.arePreferencesSynced;\n    this.#syncSetting?.setDisabled(checkboxDisabled);\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    Lit.render(html`\n      <style>${syncSectionStyles}</style>\n      <fieldset>\n        ${renderAccountInfo(this.#syncInfo)}\n        ${renderSettingCheckboxIfNeeded(this.#syncInfo, this.#syncSetting)}\n      </fieldset>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nfunction renderSettingCheckboxIfNeeded(\n    syncInfo: Host.InspectorFrontendHostAPI.SyncInformation,\n    syncSetting: Common.Settings.Setting<boolean>): Lit.LitTemplate {\n  if (!syncInfo.accountEmail) {\n    return Lit.nothing;\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"setting-checkbox-container\">\n      <setting-checkbox class=\"setting-checkbox\" .data=${{setting: syncSetting}}>\n      </setting-checkbox>\n      ${renderWarningIfNeeded(syncInfo)}\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderWarningIfNeeded(syncInfo: Host.InspectorFrontendHostAPI.SyncInformation): Lit.LitTemplate {\n  const hasWarning = !syncInfo.isSyncActive || !syncInfo.arePreferencesSynced;\n  if (!hasWarning) {\n    return Lit.nothing;\n  }\n\n  const warningLink = !syncInfo.isSyncActive ?\n      'chrome://settings/syncSetup' as Platform.DevToolsPath.UrlString :\n      'chrome://settings/syncSetup/advanced' as Platform.DevToolsPath.UrlString;\n  const warningText =\n      !syncInfo.isSyncActive ? i18nString(UIStrings.syncDisabled) : i18nString(UIStrings.preferencesSyncDisabled);\n  // clang-format off\n  return html`\n    <devtools-chrome-link .href=${warningLink}>\n      <devtools-button\n        aria-describedby=settings-sync-info\n        .iconName=${'info'}\n        .variant=${Buttons.Button.Variant.ICON}\n        .size=${Buttons.Button.Size.SMALL}>\n      </devtools-button>\n    </devtools-chrome-link>\n    <devtools-tooltip\n        id=settings-sync-info\n        variant=simple>\n      ${warningText}\n    </devtools-tooltip>\n  `;\n  // clang-format on\n}\n\nfunction renderAccountInfo(syncInfo: Host.InspectorFrontendHostAPI.SyncInformation): Lit.LitTemplate {\n  if (!syncInfo.accountEmail) {\n    // clang-format off\n    return html`\n      <div class=\"not-signed-in\">${i18nString(UIStrings.notSignedIn)}</div>\n    `;\n    // clang-format on\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"account-info\">\n      <img src=\"data:image/png;base64, ${syncInfo.accountImage}\" alt=\"Account avatar\" />\n      <div class=\"account-email\">\n        <span>${i18nString(UIStrings.signedIn)}</span>\n        <span>${syncInfo.accountEmail}</span>\n      </div>\n    </div>`;\n  // clang-format on\n}\n\ncustomElements.define('devtools-sync-section', SyncSection);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-sync-section': SyncSection;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  break-inside: avoid;\n  display: block;\n  width: 100%;\n}\n\nfieldset {\n  border: 0;\n  padding: 0;\n  padding: 4px 0 0;\n}\n\n.link {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n  outline-offset: 2px;\n}\n\nimg {\n  border: 0;\n  border-radius: var(--sys-shape-corner-full);\n  display: block;\n  height: var(--sys-size-9);\n  width: var(--sys-size-9);\n}\n\n.account-info {\n  display: flex;\n  align-items: center;\n}\n\n.account-email {\n  display: flex;\n  flex-direction: column;\n  margin-left: 8px;\n}\n\n.not-signed-in {\n  padding-bottom: 4px;\n}\n\n.setting-checkbox-container {\n  display: flex;\n  align-items: center;\n  gap: var(--sys-size-2);\n}\n\n.setting-checkbox {\n  display: inline-block;\n}\n\n/*# sourceURL=${import.meta.resolve('./syncSection.css')} */`;"],
  "mappings": ";;;;;;;AAAA;;;;AAKA,OAAO;AACP,OAAO;AACP,OAAO;AAIP,YAAY,UAAU;AAEtB,YAAY,aAAa;AACzB,YAAY,sBAAsB;AAClC,YAAY,SAAS;;;ACVrB,IAAO,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA0DC,YAAY,QAAQ,mBAAmB,CAAC;;;AD5CxD,IAAM,EAAC,KAAI,IAAI;AAEf,IAAM,YAAY;;;;;EAKhB,cAAc;;;;;EAKd,yBAAyB;;;;;EAKzB,UAAU;;;;;EAKV,aAAa;;AAEf,IAAM,OAAY,UAAK,kBAAkB,6CAA6C,SAAS;AAC/F,IAAM,aAAkB,UAAK,mBAAmB,KAAK,QAAW,IAAI;AAO9D,IAAO,cAAP,cAA2B,YAAW;EACjC,UAAU,KAAK,aAAa,EAAC,MAAM,OAAM,CAAC;EAEnD,YAA2D,EAAC,cAAc,MAAK;EAC/E;EAEA,IAAI,KAAK,MAAqB;AAC5B,SAAK,YAAY,KAAK;AACtB,SAAK,eAAe,KAAK;AACzB,SAAsB,iCAAgB,eAAe,MAAM,KAAK,OAAO;EACzE;EAEA,UAAO;AACL,QAAI,CAAC,KAAK,cAAc;AACtB,YAAM,IAAI,MAAM,yCAAyC;IAC3D;AAIA,UAAM,mBAAmB,CAAC,KAAK,UAAU,gBAAgB,CAAC,KAAK,UAAU;AACzE,SAAK,cAAc,YAAY,gBAAgB;AAG/C,IAAI,WAAO;eACA,uBAAiB;;UAEtB,kBAAkB,KAAK,SAAS,CAAC;UACjC,8BAA8B,KAAK,WAAW,KAAK,YAAY,CAAC;;OAEnE,KAAK,SAAS,EAAC,MAAM,KAAI,CAAC;EAE/B;;AAGF,SAAS,8BACL,UACA,aAA6C;AAC/C,MAAI,CAAC,SAAS,cAAc;AAC1B,WAAW;EACb;AAGA,SAAO;;yDAEgD,EAAC,SAAS,YAAW,CAAC;;QAEvE,sBAAsB,QAAQ,CAAC;;;AAIvC;AAEA,SAAS,sBAAsB,UAAuD;AACpF,QAAM,aAAa,CAAC,SAAS,gBAAgB,CAAC,SAAS;AACvD,MAAI,CAAC,YAAY;AACf,WAAW;EACb;AAEA,QAAM,cAAc,CAAC,SAAS,eAC1B,gCACA;AACJ,QAAM,cACF,CAAC,SAAS,eAAe,WAAW,UAAU,YAAY,IAAI,WAAW,UAAU,uBAAuB;AAE9G,SAAO;kCACyB,WAAW;;;oBAGzB,MAAM;mBACP,MAA2B;gBAC9B,OAAyB;;;;;;QAMjC,WAAW;;;AAInB;AAEA,SAAS,kBAAkB,UAAuD;AAChF,MAAI,CAAC,SAAS,cAAc;AAE1B,WAAO;mCACwB,WAAW,UAAU,WAAW,CAAC;;EAGlE;AAGA,SAAO;;yCAEgC,SAAS,YAAY;;gBAE9C,WAAW,UAAU,QAAQ,CAAC;gBAC9B,SAAS,YAAY;;;AAIrC;AAEA,eAAe,OAAO,yBAAyB,WAAW;",
  "names": []
}
