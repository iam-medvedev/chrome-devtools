{"version":3,"file":"SyncSection.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/settings/components/SyncSection.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/chrome_link/chrome_link.js';\nimport '../../../ui/components/settings/settings.js';\nimport '../../../ui/components/tooltips/tooltips.js';\n\nimport type * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as Badges from '../../../models/badges/badges.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport type * as SettingsComponents from '../../../ui/components/settings/settings.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as PanelCommon from '../../common/common.js';\nimport * as PanelUtils from '../../utils/utils.js';\n\nimport syncSectionStyles from './syncSection.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text shown to the user in the Settings UI. 'This setting' refers\n   * to a checkbox that is disabled.\n   */\n  syncDisabled: 'To turn this setting on, you must enable Chrome sync.',\n  /**\n   * @description Text shown to the user in the Settings UI. 'This setting' refers\n   * to a checkbox that is disabled.\n   */\n  preferencesSyncDisabled: 'To turn this setting on, you must first enable settings sync in Chrome.',\n  /**\n   * @description Label for the account email address. Shown in the DevTools Settings UI in\n   * front of the email address currently used for Chrome Sync.\n   */\n  signedIn: 'Signed into Chrome as:',\n  /**\n   * @description Label for the account settings. Shown in the DevTools Settings UI in\n   * case the user is not logged in to Chrome.\n   */\n  notSignedIn: 'You\\'re not signed into Chrome.',\n  /**\n   * @description Label for the Google Developer Program profile status that corresponds to\n   * standard plan (No subscription).\n   */\n  gdpStandardPlan: 'Standard plan',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds to\n   * `PREMIUM_ANNUAL` plan.\n   */\n  gdpPremiumAnnualSubscription: 'Premium (Annual)',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds to\n   * `PREMIUM_MONTHLY` plan.\n   */\n  gdpPremiumMonthlySubscription: 'Premium (Monthly)',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds to\n   * `PRO_ANNUAL` plan.\n   */\n  gdpProAnnualSubscription: 'Pro (Annual)',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds to\n   * `PRO_MONTHLY` plan.\n   */\n  gdpProMonthlySubscription: 'Pro (Monthly)',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds\n   * to a plan not known by the client.\n   */\n  gdpUnknownSubscription: 'Unknown plan',\n  /**\n   * @description Label for Sign-Up button for the Google Developer Program profiles.\n   */\n  signUp: 'Sign up',\n  /**\n   * @description Text for the data notice right after the settings checkbox.\n   */\n  relevantDataDisclaimer: '(Relevant data is sent to Google)',\n  /**\n   * @description Link text for opening the Google Developer Program profile page.\n   */\n  viewProfile: 'View profile',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/components/SyncSection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst lockedString = i18n.i18n.lockedString;\n\nconst {html, Directives: {ref, createRef}} = Lit;\n\nfunction getGdpSubscriptionText(profile: Host.GdpClient.Profile): Platform.UIString.LocalizedString {\n  if (!profile.activeSubscription ||\n      profile.activeSubscription.subscriptionStatus !== Host.GdpClient.SubscriptionStatus.ENABLED) {\n    return i18nString(UIStrings.gdpStandardPlan);\n  }\n\n  switch (profile.activeSubscription.subscriptionTier) {\n    case Host.GdpClient.SubscriptionTier.PREMIUM_ANNUAL:\n      return i18nString(UIStrings.gdpPremiumAnnualSubscription);\n    case Host.GdpClient.SubscriptionTier.PREMIUM_MONTHLY:\n      return i18nString(UIStrings.gdpPremiumMonthlySubscription);\n    case Host.GdpClient.SubscriptionTier.PRO_ANNUAL:\n      return i18nString(UIStrings.gdpProAnnualSubscription);\n    case Host.GdpClient.SubscriptionTier.PRO_MONTHLY:\n      return i18nString(UIStrings.gdpProMonthlySubscription);\n    default:\n      return i18nString(UIStrings.gdpUnknownSubscription);\n  }\n}\n\nconst GDP_LOGO_IMAGE_URL = new URL('../../../Images/gdp-logo-standalone.svg', import.meta.url).toString();\n\nexport interface SyncSectionData {\n  syncInfo: Host.InspectorFrontendHostAPI.SyncInformation;\n  syncSetting: Common.Settings.Setting<boolean>;\n  receiveBadgesSetting: Common.Settings.Setting<boolean>;\n}\n\nexport class SyncSection extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #syncInfo: Host.InspectorFrontendHostAPI.SyncInformation = {isSyncActive: false};\n  #syncSetting?: Common.Settings.Setting<boolean>;\n  #receiveBadgesSetting?: Common.Settings.Setting<boolean>;\n  #receiveBadgesSettingContainerRef = createRef<HTMLElement>();\n  #gdpProfile?: Host.GdpClient.Profile;\n\n  set data(data: SyncSectionData) {\n    this.#syncInfo = data.syncInfo;\n    this.#syncSetting = data.syncSetting;\n    this.#receiveBadgesSetting = data.receiveBadgesSetting;\n    void this.#updateGdpProfile();\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  async highlightReceiveBadgesSetting(): Promise<void> {\n    await ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    const element = this.#receiveBadgesSettingContainerRef.value;\n    if (element) {\n      PanelUtils.PanelUtils.highlightElement(element);\n    }\n  }\n\n  #render(): void {\n    if (!this.#syncSetting) {\n      throw new Error('SyncSection is not properly initialized');\n    }\n\n    // TODO: this should not probably happen in render, instead, the setting\n    // should be disabled.\n    const checkboxDisabled = !this.#syncInfo.isSyncActive || !this.#syncInfo.arePreferencesSynced;\n    this.#syncSetting?.setDisabled(checkboxDisabled);\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    Lit.render(html`\n      <style>${syncSectionStyles}</style>\n      <fieldset>\n        ${renderAccountInfo(this.#syncInfo)}\n        ${renderSettingCheckboxIfNeeded(this.#syncInfo, this.#syncSetting)}\n        ${renderGdpSectionIfNeeded({\n          receiveBadgesSetting: this.#receiveBadgesSetting,\n          receiveBadgesSettingContainerRef: this.#receiveBadgesSettingContainerRef,\n          gdpProfile: this.#gdpProfile\n        })}\n      </fieldset>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  async #updateGdpProfile(): Promise<void> {\n    this.#gdpProfile = await Host.GdpClient.GdpClient.instance().getProfile() ?? undefined;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n}\n\nfunction renderSettingCheckboxIfNeeded(\n    syncInfo: Host.InspectorFrontendHostAPI.SyncInformation,\n    syncSetting: Common.Settings.Setting<boolean>): Lit.LitTemplate {\n  if (!syncInfo.accountEmail) {\n    return Lit.nothing;\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"setting-checkbox-container\">\n      <setting-checkbox class=\"setting-checkbox\" .data=${{setting: syncSetting}}>\n      </setting-checkbox>\n      ${renderWarningIfNeeded(syncInfo)}\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderWarningIfNeeded(syncInfo: Host.InspectorFrontendHostAPI.SyncInformation): Lit.LitTemplate {\n  const hasWarning = !syncInfo.isSyncActive || !syncInfo.arePreferencesSynced;\n  if (!hasWarning) {\n    return Lit.nothing;\n  }\n\n  const warningLink = !syncInfo.isSyncActive ?\n      'chrome://settings/syncSetup' as Platform.DevToolsPath.UrlString :\n      'chrome://settings/syncSetup/advanced' as Platform.DevToolsPath.UrlString;\n  const warningText =\n      !syncInfo.isSyncActive ? i18nString(UIStrings.syncDisabled) : i18nString(UIStrings.preferencesSyncDisabled);\n  // clang-format off\n  return html`\n    <devtools-chrome-link .href=${warningLink}>\n      <devtools-button\n        aria-describedby=settings-sync-info\n        .iconName=${'info'}\n        .variant=${Buttons.Button.Variant.ICON}\n        .size=${Buttons.Button.Size.SMALL}>\n      </devtools-button>\n    </devtools-chrome-link>\n    <devtools-tooltip\n        id=settings-sync-info\n        variant=simple>\n      ${warningText}\n    </devtools-tooltip>\n  `;\n  // clang-format on\n}\n\nfunction renderAccountInfo(syncInfo: Host.InspectorFrontendHostAPI.SyncInformation): Lit.LitTemplate {\n  if (!syncInfo.accountEmail) {\n    // clang-format off\n    return html`\n      <div class=\"not-signed-in\">${i18nString(UIStrings.notSignedIn)}</div>\n    `;\n    // clang-format on\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"account-info\">\n      <img src=\"data:image/png;base64, ${syncInfo.accountImage}\" alt=\"Account avatar\" />\n      <div class=\"account-email\">\n        <span>${i18nString(UIStrings.signedIn)}</span>\n        <span>${syncInfo.accountEmail}</span>\n      </div>\n    </div>`;\n  // clang-format on\n}\n\nfunction renderGdpSectionIfNeeded({\n  receiveBadgesSetting,\n  receiveBadgesSettingContainerRef,\n  gdpProfile,\n}: {\n  receiveBadgesSettingContainerRef: Lit.Directives.Ref<HTMLElement>,\n  receiveBadgesSetting?: Common.Settings.Setting<boolean>,\n  gdpProfile?: Host.GdpClient.Profile,\n}): Lit.LitTemplate {\n  // clang-format off\n  if (!Root.Runtime.hostConfig.devToolsGdpProfiles?.enabled) {\n    return Lit.nothing;\n  }\n\n  function renderBrand(): Lit.LitTemplate {\n    return html`\n      <div class=\"gdp-profile-header\">\n        <img src=${GDP_LOGO_IMAGE_URL} class=\"gdp-logo\" alt=\"Google Developer Program\">\n        ${lockedString('Google Developer Program')}\n      </div>\n    `;\n  }\n\n  return html`\n    <div class=\"gdp-profile-container\">\n      <div class=\"divider\"></div>\n      ${gdpProfile ? html`\n        <div class=\"gdp-profile-details-content\">\n          ${renderBrand()}\n          <div class=\"plan-details\">\n            ${getGdpSubscriptionText(gdpProfile)}\n            &nbsp;·&nbsp;\n            <x-link class=\"link\" href=${Host.GdpClient.GOOGLE_DEVELOPER_PROGRAM_PROFILE_LINK}>\n              ${i18nString(UIStrings.viewProfile)}\n            </x-link></div>\n            ${receiveBadgesSetting ? html`\n              <div class=\"setting-container\"  ${ref(receiveBadgesSettingContainerRef)}>\n                <setting-checkbox class=\"setting-checkbox\" .data=${{setting: receiveBadgesSetting}} @change=${(e: Event) => {\n                  const settingCheckbox = e.target as SettingsComponents.SettingCheckbox.SettingCheckbox;\n                  void Badges.UserBadges.instance().initialize().then(() => {\n                    if (!settingCheckbox.checked) {\n                      return;\n                    }\n\n                    Badges.UserBadges.instance().recordAction(Badges.BadgeAction.RECEIVE_BADGES_SETTING_ENABLED);\n                  });\n                }}></setting-checkbox>\n                <span>${i18nString(UIStrings.relevantDataDisclaimer)}</span>\n              </div>` : Lit.nothing}\n        </div>\n      ` : html`\n        <div class=\"gdp-profile-sign-up-content\">\n          ${renderBrand()}\n          <devtools-button\n            @click=${() => PanelCommon.GdpSignUpDialog.show()}\n            .jslogContext=${'gdp.sign-up-dialog-open'}\n            .variant=${Buttons.Button.Variant.OUTLINED}>\n              ${i18nString(UIStrings.signUp)}\n          </devtools-button>\n        </div>\n      `}\n    </div>\n  `;\n}\n// clang-format on\n\ncustomElements.define('devtools-sync-section', SyncSection);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-sync-section': SyncSection;\n  }\n}\n"]}