{"version":3,"file":"SyncSection.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/settings/components/SyncSection.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/chrome_link/chrome_link.js';\nimport '../../../ui/components/settings/settings.js';\nimport '../../../ui/components/tooltips/tooltips.js';\n\nimport type * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Badges from '../../../models/badges/badges.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport type * as SettingsComponents from '../../../ui/components/settings/settings.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as PanelCommon from '../../common/common.js';\nimport * as PanelUtils from '../../utils/utils.js';\n\nimport syncSectionStyles from './syncSection.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text shown to the user in the Settings UI. 'This setting' refers\n   * to a checkbox that is disabled.\n   */\n  syncDisabled: 'To turn this setting on, you must enable Chrome sync.',\n  /**\n   * @description Text shown to the user in the Settings UI. Explains why the checkbox\n   * for saving DevTools settings to the user's Google account is inactive.\n   */\n  preferencesSyncDisabled: 'You need to first enable saving `Chrome` settings in your `Google` account.',\n  /**\n   * @description Label for the account email address. Shown in the DevTools Settings UI in\n   * front of the email address currently used for Chrome Sync.\n   */\n  signedIn: 'Signed into Chrome as:',\n  /**\n   * @description Label for the account settings. Shown in the DevTools Settings UI in\n   * case the user is not logged in to Chrome.\n   */\n  notSignedIn: 'You\\'re not signed into Chrome.',\n  /**\n   * @description Label for the Google Developer Program profile status that corresponds to\n   * standard plan (No subscription).\n   */\n  gdpStandardPlan: 'Standard plan',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds to\n   * `PREMIUM_ANNUAL` plan.\n   */\n  gdpPremiumSubscription: 'Premium',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds to\n   * `PRO_ANNUAL` plan.\n   */\n  gdpProSubscription: 'Pro',\n  /**\n   * @description Label for the Google Developer Program subscription status that corresponds\n   * to a plan not known by the client.\n   */\n  gdpUnknownSubscription: 'Unknown plan',\n  /**\n   * @description Label for Sign-Up button for the Google Developer Program profiles.\n   */\n  signUp: 'Sign up',\n  /**\n   * @description Link text for opening the Google Developer Program profile page.\n   */\n  viewProfile: 'View profile',\n  /**\n   * @description Text for tooltip shown on hovering over \"Relevant Data\" in the disclaimer text for AI code completion.\n   */\n  tooltipDisclaimerText:\n      'When you qualify for a badge, the badge’s identifier and the type of activity you did to earn it are sent to Google',\n  /**\n   * @description Text for the data notice right after the settings checkbox.\n   */\n  relevantData: 'Relevant data',\n  /**\n   * @description Text for the data notice right after the settings checkbox.\n   * @example {Relevant data} PH1\n   */\n  dataDisclaimer: '({PH1} is sent to Google)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/components/SyncSection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {html, Directives: {ref, createRef}} = Lit;\n\nlet cachedTooltipElement: HTMLElement|undefined;\n\nfunction renderDataDisclaimer(): HTMLElement {\n  if (cachedTooltipElement) {\n    return cachedTooltipElement;\n  }\n\n  const relevantDataTooltipTemplate = html`\n    <span\n      tabIndex=\"0\"\n      class=\"link\"\n      aria-details=\"gdp-profile-tooltip\"\n      aria-describedby=\"gdp-profile-tooltip\"\n      >${i18nString(UIStrings.relevantData)}</span>\n    <devtools-tooltip id=\"gdp-profile-tooltip\" variant=${'rich'}>\n      <div class=\"tooltip-content\" tabindex=\"0\">${i18nString(UIStrings.tooltipDisclaimerText)}</div>\n    </devtools-tooltip>`;\n\n  const container = document.createElement('span');\n  Lit.render(relevantDataTooltipTemplate, container);\n  cachedTooltipElement = i18n.i18n.getFormatLocalizedString(str_, UIStrings.dataDisclaimer, {\n    PH1: container,\n  });\n  return cachedTooltipElement;\n}\n\nfunction getGdpSubscriptionText(profile: Host.GdpClient.Profile): Platform.UIString.LocalizedString {\n  if (!profile.activeSubscription ||\n      profile.activeSubscription.subscriptionStatus !== Host.GdpClient.SubscriptionStatus.ENABLED) {\n    return i18nString(UIStrings.gdpStandardPlan);\n  }\n\n  switch (profile.activeSubscription.subscriptionTier) {\n    case Host.GdpClient.SubscriptionTier.PREMIUM_ANNUAL:\n    case Host.GdpClient.SubscriptionTier.PREMIUM_MONTHLY:\n      return i18nString(UIStrings.gdpPremiumSubscription);\n    case Host.GdpClient.SubscriptionTier.PRO_ANNUAL:\n    case Host.GdpClient.SubscriptionTier.PRO_MONTHLY:\n      return i18nString(UIStrings.gdpProSubscription);\n    default:\n      return i18nString(UIStrings.gdpUnknownSubscription);\n  }\n}\n\nexport interface SyncSectionData {\n  syncInfo: Host.InspectorFrontendHostAPI.SyncInformation;\n  syncSetting: Common.Settings.Setting<boolean>;\n  receiveBadgesSetting: Common.Settings.Setting<boolean>;\n}\n\nexport class SyncSection extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #syncInfo: Host.InspectorFrontendHostAPI.SyncInformation = {isSyncActive: false};\n  #syncSetting?: Common.Settings.Setting<boolean>;\n  #receiveBadgesSetting?: Common.Settings.Setting<boolean>;\n  #receiveBadgesSettingContainerRef = createRef<HTMLElement>();\n  #isEligibleToCreateGdpProfile = false;\n  #gdpProfile?: Host.GdpClient.Profile;\n\n  set data(data: SyncSectionData) {\n    this.#syncInfo = data.syncInfo;\n    this.#syncSetting = data.syncSetting;\n    this.#receiveBadgesSetting = data.receiveBadgesSetting;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n\n    // Trigger fetching GDP profile if the user is signed in.\n    if (data.syncInfo.accountEmail) {\n      void this.#fetchGdpDetails();\n    }\n  }\n\n  async highlightReceiveBadgesSetting(): Promise<void> {\n    await ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    const element = this.#receiveBadgesSettingContainerRef.value;\n    if (element) {\n      PanelUtils.PanelUtils.highlightElement(element);\n    }\n  }\n\n  #render(): void {\n    if (!this.#syncSetting) {\n      throw new Error('SyncSection is not properly initialized');\n    }\n\n    // TODO: this should not probably happen in render, instead, the setting\n    // should be disabled.\n    const checkboxDisabled = !this.#syncInfo.isSyncActive || !this.#syncInfo.arePreferencesSynced;\n    this.#syncSetting?.setDisabled(checkboxDisabled);\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    Lit.render(html`\n      <style>${syncSectionStyles}</style>\n      <fieldset>\n        ${renderAccountInfo(this.#syncInfo)}\n        ${renderSettingCheckboxIfNeeded(this.#syncInfo, this.#syncSetting)}\n        ${renderGdpSectionIfNeeded({\n          receiveBadgesSetting: this.#receiveBadgesSetting,\n          receiveBadgesSettingContainerRef: this.#receiveBadgesSettingContainerRef,\n          gdpProfile: this.#gdpProfile,\n          isEligibleToCreateProfile: this.#isEligibleToCreateGdpProfile,\n          onSignUpSuccess: this.#fetchGdpDetails.bind(this),\n        })}\n      </fieldset>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  async #fetchGdpDetails(): Promise<void> {\n    if (!Host.GdpClient.isGdpProfilesAvailable()) {\n      return;\n    }\n\n    const getProfileResponse = await Host.GdpClient.GdpClient.instance().getProfile();\n    if (!getProfileResponse) {\n      return;\n    }\n\n    this.#gdpProfile = getProfileResponse.profile ?? undefined;\n    this.#isEligibleToCreateGdpProfile = getProfileResponse.isEligible;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n}\n\nfunction renderSettingCheckboxIfNeeded(\n    syncInfo: Host.InspectorFrontendHostAPI.SyncInformation,\n    syncSetting: Common.Settings.Setting<boolean>): Lit.LitTemplate {\n  if (!syncInfo.accountEmail) {\n    return Lit.nothing;\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"setting-checkbox-container\">\n      <setting-checkbox class=\"setting-checkbox\" .data=${{setting: syncSetting}}>\n      </setting-checkbox>\n      ${renderWarningIfNeeded(syncInfo)}\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderWarningIfNeeded(syncInfo: Host.InspectorFrontendHostAPI.SyncInformation): Lit.LitTemplate {\n  const hasWarning = !syncInfo.isSyncActive || !syncInfo.arePreferencesSynced;\n  if (!hasWarning) {\n    return Lit.nothing;\n  }\n\n  const warningLink = !syncInfo.isSyncActive ?\n      'chrome://settings/syncSetup' as Platform.DevToolsPath.UrlString :\n      'chrome://settings/syncSetup/advanced' as Platform.DevToolsPath.UrlString;\n  const warningText =\n      !syncInfo.isSyncActive ? i18nString(UIStrings.syncDisabled) : i18nString(UIStrings.preferencesSyncDisabled);\n  const handleClick = (event: Event): void => {\n    const rootTarget = SDK.TargetManager.TargetManager.instance().rootTarget();\n    if (rootTarget === null) {\n      return;\n    }\n\n    void rootTarget.targetAgent().invoke_createTarget({url: warningLink}).then(result => {\n      if (result.getError()) {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(warningLink);\n      }\n    });\n    event.consume();\n  };\n  // clang-format off\n  return html`\n    <devtools-button\n      aria-describedby=settings-sync-info\n      .title=${warningText}\n      .iconName=${'info'}\n      .variant=${Buttons.Button.Variant.ICON}\n      .size=${Buttons.Button.Size.SMALL}\n      @click=${handleClick}>\n    </devtools-button>\n    <devtools-tooltip\n        id=settings-sync-info\n        variant=simple>\n      ${warningText}\n    </devtools-tooltip>\n  `;\n  // clang-format on\n}\n\nfunction renderAccountInfo(syncInfo: Host.InspectorFrontendHostAPI.SyncInformation): Lit.LitTemplate {\n  if (!syncInfo.accountEmail) {\n    // clang-format off\n    return html`\n      <div class=\"not-signed-in\">${i18nString(UIStrings.notSignedIn)}</div>\n    `;\n    // clang-format on\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"account-info\">\n      <img class=\"account-avatar\" src=\"data:image/png;base64, ${syncInfo.accountImage}\" alt=\"Account avatar\" />\n      <div class=\"account-email\">\n        <span>${i18nString(UIStrings.signedIn)}</span>\n        <span>${syncInfo.accountEmail}</span>\n      </div>\n    </div>`;\n  // clang-format on\n}\n\nfunction renderGdpSectionIfNeeded({\n  receiveBadgesSetting,\n  receiveBadgesSettingContainerRef,\n  gdpProfile,\n  isEligibleToCreateProfile,\n  onSignUpSuccess,\n}: {\n  receiveBadgesSettingContainerRef: Lit.Directives.Ref<HTMLElement>,\n  onSignUpSuccess: () => void,\n  receiveBadgesSetting?: Common.Settings.Setting<boolean>,\n  gdpProfile?: Host.GdpClient.Profile,\n  isEligibleToCreateProfile?: boolean,\n}): Lit.LitTemplate {\n  if (!Host.GdpClient.isGdpProfilesAvailable() || (!gdpProfile && !isEligibleToCreateProfile)) {\n    return Lit.nothing;\n  }\n  const hasReceiveBadgesCheckbox = Host.GdpClient.isBadgesEnabled() && receiveBadgesSetting;\n  function renderBrand(): Lit.LitTemplate {\n    // clang-format off\n    return html`\n      <div class=\"gdp-profile-header\">\n        <div class=\"gdp-logo\" role=\"img\" aria-label=\"Google Developer Program\"></div>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"gdp-profile-container\" jslog=${VisualLogging.section().context('gdp-profile')}>\n      <div class=\"divider\"></div>\n      ${gdpProfile ? html`\n        <div class=\"gdp-profile-details-content\">\n          ${renderBrand()}\n          <div class=\"plan-details\">\n            ${getGdpSubscriptionText(gdpProfile)}\n            &nbsp;·&nbsp;\n            <x-link\n              jslog=${VisualLogging.link().track({click: true, keydown:'Enter|Space'}).context('view-profile')}\n              class=\"link\"\n              href=${Host.GdpClient.GOOGLE_DEVELOPER_PROGRAM_PROFILE_LINK}>\n              ${i18nString(UIStrings.viewProfile)}\n            </x-link></div>\n            ${hasReceiveBadgesCheckbox ? html`\n              <div class=\"setting-container\"  ${ref(receiveBadgesSettingContainerRef)}>\n                <setting-checkbox class=\"setting-checkbox\" .data=${{setting: receiveBadgesSetting}} @change=${(e: Event) => {\n                  const settingCheckbox = e.target as SettingsComponents.SettingCheckbox.SettingCheckbox;\n                  void Badges.UserBadges.instance().initialize().then(() => {\n                    if (!settingCheckbox.checked) {\n                      return;\n                    }\n\n                    Badges.UserBadges.instance().recordAction(Badges.BadgeAction.RECEIVE_BADGES_SETTING_ENABLED);\n                  });\n                }}></setting-checkbox>\n                ${renderDataDisclaimer()}\n              </div>` : Lit.nothing}\n        </div>\n      ` : html`\n        <div class=\"gdp-profile-sign-up-content\">\n          ${renderBrand()}\n          <devtools-button\n            @click=${() => PanelCommon.GdpSignUpDialog.show({\n              onSuccess: onSignUpSuccess\n            })}\n            .jslogContext=${'open-sign-up-dialog'}\n            .variant=${Buttons.Button.Variant.OUTLINED}>\n              ${i18nString(UIStrings.signUp)}\n          </devtools-button>\n        </div>\n      `}\n    </div>\n  `;\n  // clang-format on\n}\n\ncustomElements.define('devtools-sync-section', SyncSection);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-sync-section': SyncSection;\n  }\n}\n"]}