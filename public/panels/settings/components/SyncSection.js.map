{"version":3,"file":"SyncSection.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/settings/components/SyncSection.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/chrome_link/chrome_link.js';\nimport '../../../ui/components/settings/settings.js';\nimport '../../../ui/components/tooltips/tooltips.js';\n\nimport type * as Common from '../../../core/common/common.js';\nimport type * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport syncSectionStyles from './syncSection.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text shown to the user in the Settings UI. 'This setting' refers\n   * to a checkbox that is disabled.\n   */\n  syncDisabled: 'To turn this setting on, you must enable Chrome sync.',\n  /**\n   * @description Text shown to the user in the Settings UI. 'This setting' refers\n   * to a checkbox that is disabled.\n   */\n  preferencesSyncDisabled: 'To turn this setting on, you must first enable settings sync in Chrome.',\n  /**\n   * @description Label for the account email address. Shown in the DevTools Settings UI in\n   * front of the email address currently used for Chrome Sync.\n   */\n  signedIn: 'Signed into Chrome as:',\n  /**\n   * @description Label for the account settings. Shown in the DevTools Settings UI in\n   * case the user is not logged in to Chrome.\n   */\n  notSignedIn: 'You\\'re not signed into Chrome.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/components/SyncSection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface SyncSectionData {\n  syncInfo: Host.InspectorFrontendHostAPI.SyncInformation;\n  syncSetting: Common.Settings.Setting<boolean>;\n}\n\nexport class SyncSection extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #syncInfo: Host.InspectorFrontendHostAPI.SyncInformation = {isSyncActive: false};\n  #syncSetting?: Common.Settings.Setting<boolean>;\n\n  set data(data: SyncSectionData) {\n    this.#syncInfo = data.syncInfo;\n    this.#syncSetting = data.syncSetting;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #render(): void {\n    if (!this.#syncSetting) {\n      throw new Error('SyncSection is not properly initialized');\n    }\n\n    // TODO: this should not probably happen in render, instead, the setting\n    // should be disabled.\n    const checkboxDisabled = !this.#syncInfo.isSyncActive || !this.#syncInfo.arePreferencesSynced;\n    this.#syncSetting?.setDisabled(checkboxDisabled);\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    Lit.render(html`\n      <style>${syncSectionStyles}</style>\n      <fieldset>\n        ${renderAccountInfo(this.#syncInfo)}\n        ${renderSettingCheckboxIfNeeded(this.#syncInfo, this.#syncSetting)}\n      </fieldset>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nfunction renderSettingCheckboxIfNeeded(\n    syncInfo: Host.InspectorFrontendHostAPI.SyncInformation,\n    syncSetting: Common.Settings.Setting<boolean>): Lit.LitTemplate {\n  if (!syncInfo.accountEmail) {\n    return Lit.nothing;\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"setting-checkbox-container\">\n      <setting-checkbox class=\"setting-checkbox\" .data=${{setting: syncSetting}}>\n      </setting-checkbox>\n      ${renderWarningIfNeeded(syncInfo)}\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderWarningIfNeeded(syncInfo: Host.InspectorFrontendHostAPI.SyncInformation): Lit.LitTemplate {\n  const hasWarning = !syncInfo.isSyncActive || !syncInfo.arePreferencesSynced;\n  if (!hasWarning) {\n    return Lit.nothing;\n  }\n\n  const warningLink = !syncInfo.isSyncActive ?\n      'chrome://settings/syncSetup' as Platform.DevToolsPath.UrlString :\n      'chrome://settings/syncSetup/advanced' as Platform.DevToolsPath.UrlString;\n  const warningText =\n      !syncInfo.isSyncActive ? i18nString(UIStrings.syncDisabled) : i18nString(UIStrings.preferencesSyncDisabled);\n  // clang-format off\n  return html`\n    <devtools-chrome-link .href=${warningLink}>\n      <devtools-button\n        aria-describedby=settings-sync-info\n        .iconName=${'info'}\n        .variant=${Buttons.Button.Variant.ICON}\n        .size=${Buttons.Button.Size.SMALL}>\n      </devtools-button>\n    </devtools-chrome-link>\n    <devtools-tooltip\n        id=settings-sync-info\n        variant=simple>\n      ${warningText}\n    </devtools-tooltip>\n  `;\n  // clang-format on\n}\n\nfunction renderAccountInfo(syncInfo: Host.InspectorFrontendHostAPI.SyncInformation): Lit.LitTemplate {\n  if (!syncInfo.accountEmail) {\n    // clang-format off\n    return html`\n      <div class=\"not-signed-in\">${i18nString(UIStrings.notSignedIn)}</div>\n    `;\n    // clang-format on\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"account-info\">\n      <img src=\"data:image/png;base64, ${syncInfo.accountImage}\" alt=\"Account avatar\" />\n      <div class=\"account-email\">\n        <span>${i18nString(UIStrings.signedIn)}</span>\n        <span>${syncInfo.accountEmail}</span>\n      </div>\n    </div>`;\n  // clang-format on\n}\n\ncustomElements.define('devtools-sync-section', SyncSection);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-sync-section': SyncSection;\n  }\n}\n"]}