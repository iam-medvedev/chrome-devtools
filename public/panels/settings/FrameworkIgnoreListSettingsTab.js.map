{"version":3,"file":"FrameworkIgnoreListSettingsTab.js","sourceRoot":"","sources":["../../../../../../front_end/panels/settings/FrameworkIgnoreListSettingsTab.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/cards/cards.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport frameworkIgnoreListSettingsTabStyles from './frameworkIgnoreListSettingsTab.css.js';\nimport settingsScreenStyles from './settingsScreen.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Header text content in Framework Ignore List Settings Tab of the Settings for enabling or disabling ignore listing\n   */\n  frameworkIgnoreList: 'Ignore listing',\n  /**\n   *@description Checkbox label in Framework Ignore List Settings Tab of the Settings\n   */\n  ignoreListingDescription:\n      'When enabled, the debugger will skip over ignore-listed scripts and will ignore exceptions that only affect them and the Performance panel will collapse matching flamechart items.',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  ignoreListContentScripts: 'Content scripts injected by extensions',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  ignoreListAnonymousScripts: 'Anonymous scripts from eval or console',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  automaticallyIgnoreListKnownThirdPartyScripts: 'Known third-party scripts from source maps',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  enableIgnoreListing: 'Enable ignore listing',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  enableIgnoreListingTooltip: 'Uncheck to disable all ignore listing',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  generalExclusionRules: 'General exclusion rules',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  customExclusionRules: 'Custom exclusion rules',\n  /**\n   *@description Text of the add pattern button in Framework Ignore List Settings Tab of the Settings\n   */\n  addPattern: 'Add regex rule',\n  /**\n   *@description Aria accessible name in Framework Ignore List Settings Tab of the Settings\n   */\n  addFilenamePattern: 'Add a regular expression rule for the script\\'s URL',\n  /**\n   *@description Pattern title in Framework Ignore List Settings Tab of the Settings\n   *@example {ad.*?} PH1\n   */\n  ignoreScriptsWhoseNamesMatchS: 'Ignore scripts whose names match \\'\\'{PH1}\\'\\'',\n  /**\n   *@description Aria accessible name in Framework Ignore List Settings Tab of the Settings. It labels the input\n   * field used to add new or edit existing regular expressions that match file names to ignore in the debugger.\n   */\n  pattern: 'Add a regular expression rule for the script\\'s URL',\n  /**\n   *@description Error message in Framework Ignore List settings pane that declares pattern must not be empty\n   */\n  patternCannotBeEmpty: 'Rule can\\'t be empty',\n  /**\n   *@description Error message in Framework Ignore List settings pane that declares pattern already exits\n   */\n  patternAlreadyExists: 'Rule already exists',\n  /**\n   *@description Error message in Framework Ignore List settings pane that declares pattern must be a valid regular expression\n   */\n  patternMustBeAValidRegular: 'Rule must be a valid regular expression',\n  /**\n   *@description Text that is usually a hyperlink to more documentation\n   */\n  learnMore: 'Learn more',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/FrameworkIgnoreListSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class FrameworkIgnoreListSettingsTab extends UI.Widget.VBox implements\n    UI.ListWidget.Delegate<Common.Settings.RegExpSettingItem> {\n  private readonly list: UI.ListWidget.ListWidget<Common.Settings.RegExpSettingItem>;\n  private readonly setting: Common.Settings.RegExpSetting;\n  private editor?: UI.ListWidget.Editor<Common.Settings.RegExpSettingItem>;\n\n  constructor() {\n    super(true);\n    this.registerRequiredCSS(frameworkIgnoreListSettingsTabStyles, settingsScreenStyles);\n    this.element.setAttribute('jslog', `${VisualLogging.pane('blackbox')}`);\n\n    const settingsContent =\n        this.contentElement.createChild('div', 'settings-card-container-wrapper').createChild('div');\n    settingsContent.classList.add('settings-card-container', 'ignore-list-settings');\n\n    const ignoreListingDescription = document.createElement('span');\n    ignoreListingDescription.textContent = i18nString(UIStrings.ignoreListingDescription);\n    const enabledSetting = Common.Settings.Settings.instance().moduleSetting('enable-ignore-listing');\n    const enableIgnoreListing = this.contentElement.createChild('div', 'enable-ignore-listing');\n    enableIgnoreListing.appendChild(\n        UI.SettingsUI.createSettingCheckbox(i18nString(UIStrings.enableIgnoreListing), enabledSetting));\n    UI.Tooltip.Tooltip.install(enableIgnoreListing, i18nString(UIStrings.enableIgnoreListingTooltip));\n\n    const enableIgnoreListingCard = settingsContent.createChild('devtools-card');\n    enableIgnoreListingCard.heading = i18nString(UIStrings.frameworkIgnoreList);\n    enableIgnoreListingCard.append(ignoreListingDescription, enableIgnoreListing);\n\n    const generalExclusionGroup = this.createSettingGroup();\n    generalExclusionGroup.classList.add('general-exclusion-group');\n    const ignoreListContentScripts = generalExclusionGroup.createChild('div', 'ignore-list-option');\n    ignoreListContentScripts.appendChild(UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.ignoreListContentScripts),\n        Common.Settings.Settings.instance().moduleSetting('skip-content-scripts')));\n\n    const automaticallyIgnoreList = generalExclusionGroup.createChild('div', 'ignore-list-option');\n    automaticallyIgnoreList.appendChild(UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.automaticallyIgnoreListKnownThirdPartyScripts),\n        Common.Settings.Settings.instance().moduleSetting('automatically-ignore-list-known-third-party-scripts')));\n\n    const automaticallyIgnoreLinkButton = new Buttons.Button.Button();\n    automaticallyIgnoreLinkButton.data = {\n      iconName: 'help',\n      variant: Buttons.Button.Variant.ICON,\n      size: Buttons.Button.Size.SMALL,\n      jslogContext: 'learn-more',\n      title: i18nString(UIStrings.learnMore),\n    };\n    automaticallyIgnoreLinkButton.addEventListener(\n        'click',\n        () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(\n            'http://goo.gle/skip-third-party' as Platform.DevToolsPath.UrlString));\n    automaticallyIgnoreList.appendChild(automaticallyIgnoreLinkButton);\n\n    const ignoreListAnonymousScripts = generalExclusionGroup.createChild('div', 'ignore-list-option');\n    ignoreListAnonymousScripts.appendChild(UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.ignoreListAnonymousScripts),\n        Common.Settings.Settings.instance().moduleSetting('skip-anonymous-scripts')));\n\n    const generalExclusionGroupCard = settingsContent.createChild('devtools-card', 'ignore-list-options');\n    generalExclusionGroupCard.heading = i18nString(UIStrings.generalExclusionRules);\n    generalExclusionGroupCard.append(generalExclusionGroup);\n\n    const customExclusionGroup = this.createSettingGroup();\n    customExclusionGroup.classList.add('custom-exclusion-group');\n    const customExclusionGroupCard = settingsContent.createChild('devtools-card', 'ignore-list-options');\n    customExclusionGroupCard.heading = i18nString(UIStrings.customExclusionRules);\n    customExclusionGroupCard.append(customExclusionGroup);\n\n    this.list = new UI.ListWidget.ListWidget(this);\n    this.list.element.classList.add('ignore-list');\n    this.list.registerRequiredCSS(frameworkIgnoreListSettingsTabStyles);\n\n    const placeholder = document.createElement('div');\n    placeholder.classList.add('ignore-list-empty');\n    this.list.setEmptyPlaceholder(placeholder);\n    this.list.show(customExclusionGroup);\n    const addPatternButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.addPattern), this.addButtonClicked.bind(this),\n        {className: 'add-button', jslogContext: 'settings.add-ignore-list-pattern'});\n    UI.ARIAUtils.setLabel(addPatternButton, i18nString(UIStrings.addFilenamePattern));\n    customExclusionGroup.appendChild(addPatternButton);\n    this.setting =\n        Common.Settings.Settings.instance().moduleSetting('skip-stack-frames-pattern') as Common.Settings.RegExpSetting;\n    this.setting.addChangeListener(this.settingUpdated, this);\n\n    enabledSetting.addChangeListener(enabledChanged);\n    enabledChanged();\n\n    function enabledChanged(): void {\n      const enabled = enabledSetting.get();\n      if (enabled) {\n        settingsContent.classList.remove('ignore-listing-disabled');\n      } else {\n        settingsContent.classList.add('ignore-listing-disabled');\n      }\n    }\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.settingUpdated();\n  }\n\n  private settingUpdated(): void {\n    this.list.clear();\n    const patterns = this.setting.getAsArray();\n    for (let i = 0; i < patterns.length; ++i) {\n      this.list.appendItem(patterns[i], true);\n    }\n  }\n\n  private addButtonClicked(): void {\n    this.list.addNewItem(this.setting.getAsArray().length, {pattern: '', disabled: false});\n  }\n\n  private createSettingGroup(): HTMLElement {\n    const group = document.createElement('div');\n    group.classList.add('ignore-list-option-group');\n    UI.ARIAUtils.markAsGroup(group);\n    return group;\n  }\n\n  renderItem(item: Common.Settings.RegExpSettingItem, _editable: boolean): Element {\n    const element = document.createElement('div');\n\n    const listSetting = this.setting;\n\n    const checkbox = UI.UIUtils.CheckboxLabel.createWithStringLiteral(\n        item.pattern, !item.disabled, undefined, 'settings.ignore-list-pattern');\n    const helpText = i18nString(UIStrings.ignoreScriptsWhoseNamesMatchS, {PH1: item.pattern});\n    UI.Tooltip.Tooltip.install(checkbox, helpText);\n    checkbox.checkboxElement.ariaLabel = helpText;\n    checkbox.checkboxElement.addEventListener('change', inputChanged, false);\n    element.appendChild(checkbox);\n    element.classList.add('ignore-list-item');\n\n    return element;\n\n    function inputChanged(): void {\n      const disabled = !checkbox.checkboxElement.checked;\n      if (item.disabled !== disabled) {\n        item.disabled = disabled;\n        item.disabledForUrl = undefined;\n        // Send changed event\n        listSetting.setAsArray(listSetting.getAsArray());\n      }\n    }\n  }\n\n  removeItemRequested(item: Common.Settings.RegExpSettingItem, index: number): void {\n    const patterns = this.setting.getAsArray();\n    patterns.splice(index, 1);\n    this.setting.setAsArray(patterns);\n  }\n\n  commitEdit(\n      item: Common.Settings.RegExpSettingItem, editor: UI.ListWidget.Editor<Common.Settings.RegExpSettingItem>,\n      isNew: boolean): void {\n    item.pattern = editor.control('pattern').value.trim();\n\n    const list = this.setting.getAsArray();\n    if (isNew) {\n      list.push(item);\n    }\n    this.setting.setAsArray(list);\n  }\n\n  beginEdit(item: Common.Settings.RegExpSettingItem): UI.ListWidget.Editor<Common.Settings.RegExpSettingItem> {\n    const editor = this.createEditor();\n    editor.control('pattern').value = item.pattern;\n    return editor;\n  }\n\n  private createEditor(): UI.ListWidget.Editor<Common.Settings.RegExpSettingItem> {\n    if (this.editor) {\n      return this.editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<Common.Settings.RegExpSettingItem>();\n    this.editor = editor;\n    const content = editor.contentElement();\n\n    const titles = content.createChild('div', 'ignore-list-edit-row');\n    titles.createChild('div', 'ignore-list-pattern').textContent = i18nString(UIStrings.pattern);\n\n    const fields = content.createChild('div', 'ignore-list-edit-row');\n    const pattern = editor.createInput('pattern', 'text', '/framework\\\\.js$', patternValidator.bind(this));\n    UI.ARIAUtils.setLabel(pattern, i18nString(UIStrings.pattern));\n    fields.createChild('div', 'ignore-list-pattern').appendChild(pattern);\n\n    return editor;\n\n    function patternValidator(\n        this: FrameworkIgnoreListSettingsTab, item: Common.Settings.RegExpSettingItem, index: number,\n        input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const pattern = input.value.trim();\n      const patterns = this.setting.getAsArray();\n\n      if (!pattern.length) {\n        return {valid: false, errorMessage: i18nString(UIStrings.patternCannotBeEmpty)};\n      }\n\n      for (let i = 0; i < patterns.length; ++i) {\n        if (i !== index && patterns[i].pattern === pattern) {\n          return {valid: false, errorMessage: i18nString(UIStrings.patternAlreadyExists)};\n        }\n      }\n\n      let regex;\n      try {\n        regex = new RegExp(pattern);\n      } catch {\n      }\n      if (!regex) {\n        return {valid: false, errorMessage: i18nString(UIStrings.patternMustBeAValidRegular)};\n      }\n      return {valid: true, errorMessage: undefined};\n    }\n  }\n}\n"]}