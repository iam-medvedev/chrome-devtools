{
  "version": 3,
  "sources": ["utils.prebundle.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/icon_button/icon_button.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Formatter from '../../models/formatter/formatter.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport type * as Diff from '../../third_party/diff/diff.js';\nimport * as DiffView from '../../ui/components/diff_view/diff_view.js';\nimport {Directives, html, type TemplateResult} from '../../ui/lit/lit.js';\nimport * as Snippets from '../snippets/snippets.js';\n\nconst {ref, styleMap, ifDefined} = Directives;\n\nconst UIStrings = {\n  /**\n   * @description Tooltip to explain the resource's overridden status\n   */\n  requestContentHeadersOverridden: 'Both request content and headers are overridden',\n  /**\n   * @description Tooltip to explain the resource's overridden status\n   */\n  requestContentOverridden: 'Request content is overridden',\n  /**\n   * @description Tooltip to explain the resource's overridden status\n   */\n  requestHeadersOverridden: 'Request headers are overridden',\n  /**\n   * @description Tooltip to explain why the request has warning icon\n   */\n  thirdPartyPhaseout:\n      'Cookies for this request are blocked either because of Chrome flags or browser configuration. Learn more in the Issues panel.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/utils/utils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// These utilities are packaged in a class to allow unittests to stub or spy the implementation.\nexport class PanelUtils {\n  static isFailedNetworkRequest(request: SDK.NetworkRequest.NetworkRequest|null): boolean {\n    if (!request) {\n      return false;\n    }\n    if (request.failed && !request.statusCode) {\n      return true;\n    }\n    if (request.statusCode >= 400) {\n      return true;\n    }\n    const signedExchangeInfo = request.signedExchangeInfo();\n    if (signedExchangeInfo !== null && Boolean(signedExchangeInfo.errors)) {\n      return true;\n    }\n    if (request.webBundleInfo()?.errorMessage || request.webBundleInnerRequestInfo()?.errorMessage) {\n      return true;\n    }\n    if (request.corsErrorStatus()) {\n      return true;\n    }\n    return false;\n  }\n\n  static getIconForNetworkRequest(request: SDK.NetworkRequest.NetworkRequest): TemplateResult {\n    let type = request.resourceType();\n\n    if (PanelUtils.isFailedNetworkRequest(request)) {\n      let iconName: string;\n      // Failed prefetch network requests are displayed as warnings instead of errors.\n      if (request.resourceType() === Common.ResourceType.resourceTypes.Prefetch) {\n        iconName = 'warning-filled';\n      } else {\n        iconName = 'cross-circle-filled';\n      }\n\n      // clang-format off\n      return html`<devtools-icon\n          class=\"icon\" name=${iconName} title=${type.title()}>\n        </devtools-icon>`;\n      // clang-format on\n    }\n\n    if (request.hasThirdPartyCookiePhaseoutIssue()) {\n      // clang-format off\n      return html`<devtools-icon\n          class=\"icon\" name=\"warning-filled\" title=${i18nString(UIStrings.thirdPartyPhaseout)}\n        </devtools-icon>`;\n      // clang-format on\n    }\n\n    const isHeaderOverridden = request.hasOverriddenHeaders();\n    const isContentOverridden = request.hasOverriddenContent;\n    if (isHeaderOverridden || isContentOverridden) {\n      let title: Common.UIString.LocalizedString;\n      if (isHeaderOverridden && isContentOverridden) {\n        title = i18nString(UIStrings.requestContentHeadersOverridden);\n      } else if (isContentOverridden) {\n        title = i18nString(UIStrings.requestContentOverridden);\n      } else {\n        title = i18nString(UIStrings.requestHeadersOverridden);\n      }\n\n      // clang-format off\n      return html`<div class=\"network-override-marker\">\n          <devtools-icon class=\"icon\" name=\"document\" title=${title}></devtools-icon>\n        </div>`;\n      // clang-format on\n    }\n\n    // Pick icon based on MIME type in the following cases:\n    // - If the MIME type is 'image': some images have request type of 'fetch' or etc.\n    // - If the request type is 'fetch': everything fetched by service worker has request type 'fetch'.\n    // - If the request type is 'other' and MIME type is 'script', e.g. for wasm files\n    const typeFromMime = Common.ResourceType.ResourceType.fromMimeType(request.mimeType);\n\n    if (typeFromMime !== type && typeFromMime !== Common.ResourceType.resourceTypes.Other) {\n      if (type === Common.ResourceType.resourceTypes.Fetch) {\n        type = typeFromMime;\n      } else if (typeFromMime === Common.ResourceType.resourceTypes.Image) {\n        type = typeFromMime;\n      } else if (\n          type === Common.ResourceType.resourceTypes.Other &&\n          typeFromMime === Common.ResourceType.resourceTypes.Script) {\n        type = typeFromMime;\n      }\n    }\n\n    if (type === Common.ResourceType.resourceTypes.Image) {\n      return html`<div class=\"image icon\">\n          <img class=\"image-network-icon-preview\" alt=${request.resourceType().title()}\n              ${ref(e => request.populateImageSource(e as HTMLImageElement))}>\n        </div>`;\n    }\n\n    // Exclude Manifest here because it has mimeType:application/json but it has its own icon\n    if (type !== Common.ResourceType.resourceTypes.Manifest &&\n        Common.ResourceType.ResourceType.simplifyContentType(request.mimeType) === 'application/json') {\n      // clang-format off\n      return html`<devtools-icon\n          class=\"icon\" name=\"file-json\" title=${request.resourceType().title()}\n          style=\"color:var(--icon-file-script)\">\n        </devtools-icon>`;\n      // clang-format on\n    }\n\n    // Others\n    const {iconName, color} = PanelUtils.iconDataForResourceType(type);\n    // clang-format off\n    return html`<devtools-icon\n        class=\"icon\" name=${iconName} title=${request.resourceType().title()}\n        style=${styleMap({color})}>\n      </devtools-icon>`;\n    // clang-format on\n  }\n\n  static iconDataForResourceType(resourceType: Common.ResourceType.ResourceType): {iconName: string, color?: string} {\n    if (resourceType.isDocument()) {\n      return {iconName: 'file-document'};\n    }\n    if (resourceType.isImage()) {\n      return {iconName: 'file-image', color: 'var(--icon-file-image)'};\n    }\n    if (resourceType.isFont()) {\n      return {iconName: 'file-font'};\n    }\n    if (resourceType.isScript()) {\n      return {iconName: 'file-script'};\n    }\n    if (resourceType.isStyleSheet()) {\n      return {iconName: 'file-stylesheet'};\n    }\n    if (resourceType.name() === Common.ResourceType.resourceTypes.Manifest.name()) {\n      return {iconName: 'file-manifest'};\n    }\n    if (resourceType.name() === Common.ResourceType.resourceTypes.Wasm.name()) {\n      return {iconName: 'file-wasm'};\n    }\n    if (resourceType.name() === Common.ResourceType.resourceTypes.WebSocket.name() ||\n        resourceType.name() === Common.ResourceType.resourceTypes.DirectSocket.name()) {\n      return {iconName: 'file-websocket'};\n    }\n    if (resourceType.name() === Common.ResourceType.resourceTypes.Media.name()) {\n      return {iconName: 'file-media'};\n    }\n    if (resourceType.isWebbundle()) {\n      return {iconName: 'bundle'};\n    }\n\n    if (resourceType.name() === Common.ResourceType.resourceTypes.Fetch.name() ||\n        resourceType.name() === Common.ResourceType.resourceTypes.XHR.name()) {\n      return {iconName: 'file-fetch-xhr'};\n    }\n\n    return {iconName: 'file-generic'};\n  }\n\n  static getIconForSourceFile(uiSourceCode: Workspace.UISourceCode.UISourceCode): TemplateResult {\n    const binding = Persistence.Persistence.PersistenceImpl.instance().binding(uiSourceCode);\n    const networkPersistenceManager = Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance();\n    let iconType = 'document';\n    let hasDotBadge = false;\n    let isDotPurple = false;\n    if (binding) {\n      if (Snippets.ScriptSnippetFileSystem.isSnippetsUISourceCode(binding.fileSystem)) {\n        iconType = 'snippet';\n      }\n      hasDotBadge = true;\n      isDotPurple = networkPersistenceManager.project() === binding.fileSystem.project();\n    } else if (networkPersistenceManager.isActiveHeaderOverrides(uiSourceCode)) {\n      hasDotBadge = true;\n      isDotPurple = true;\n    } else if (Snippets.ScriptSnippetFileSystem.isSnippetsUISourceCode(uiSourceCode)) {\n      iconType = 'snippet';\n    }\n\n    const title =\n        binding ? Persistence.PersistenceUtils.PersistenceUtils.tooltipForUISourceCode(uiSourceCode) : undefined;\n    // clang-format off\n    return html`<devtools-file-source-icon\n        name=${iconType} title=${ifDefined(title)} .data=${{\n          contentType: uiSourceCode.contentType().name(), hasDotBadge, isDotPurple, iconType}}>\n      </devtools-file-source-icon>`;\n    // clang-format on\n  }\n\n  static async formatCSSChangesFromDiff(diff: Diff.Diff.DiffArray): Promise<string> {\n    const indent = '  ';\n    const {originalLines, currentLines, rows} = DiffView.DiffView.buildDiffRows(diff);\n    const originalRuleMaps = await buildStyleRuleMaps(originalLines.join('\\n'));\n    const currentRuleMaps = await buildStyleRuleMaps(currentLines.join('\\n'));\n\n    let changes = '';\n    let recordedOriginalSelector, recordedCurrentSelector;\n    let hasOpenDeclarationBlock = false;\n    for (const {currentLineNumber, originalLineNumber, type} of rows) {\n      if (type !== DiffView.DiffView.RowType.DELETION && type !== DiffView.DiffView.RowType.ADDITION) {\n        continue;\n      }\n\n      const isDeletion = type === DiffView.DiffView.RowType.DELETION;\n      const lines = isDeletion ? originalLines : currentLines;\n      // Diff line arrays starts at 0, but line numbers start at 1.\n      const lineIndex = isDeletion ? originalLineNumber - 1 : currentLineNumber - 1;\n      const line = lines[lineIndex].trim();\n      const {declarationIDToStyleRule, styleRuleIDToStyleRule} = isDeletion ? originalRuleMaps : currentRuleMaps;\n      let styleRule;\n      let prefix = '';\n      if (declarationIDToStyleRule.has(lineIndex)) {\n        styleRule = declarationIDToStyleRule.get(lineIndex) as FormattableStyleRule;\n        const selector = styleRule.selector;\n        // Use the equality of selector strings as a best-effort check for the equality of style rules.\n        if (selector !== recordedOriginalSelector && selector !== recordedCurrentSelector) {\n          prefix += `${selector} {\\n`;\n        }\n        prefix += indent;\n        hasOpenDeclarationBlock = true;\n      } else {\n        if (hasOpenDeclarationBlock) {\n          prefix = '}\\n\\n';\n          hasOpenDeclarationBlock = false;\n        }\n        if (styleRuleIDToStyleRule.has(lineIndex)) {\n          styleRule = styleRuleIDToStyleRule.get(lineIndex);\n        }\n      }\n\n      const processedLine = isDeletion ? `/* ${line} */` : line;\n      changes += prefix + processedLine + '\\n';\n      if (isDeletion) {\n        recordedOriginalSelector = styleRule?.selector;\n      } else {\n        recordedCurrentSelector = styleRule?.selector;\n      }\n    }\n\n    if (changes.length > 0) {\n      changes += '}';\n    }\n    return changes;\n  }\n\n  static highlightElement(element: HTMLElement): void {\n    element.scrollIntoViewIfNeeded();\n    element.animate(\n        [\n          {offset: 0, backgroundColor: 'rgba(255, 255, 0, 0.2)'},\n          {offset: 0.1, backgroundColor: 'rgba(255, 255, 0, 0.7)'},\n          {offset: 1, backgroundColor: 'transparent'},\n        ],\n        {duration: 2000, easing: 'cubic-bezier(0, 0, 0.2, 1)'});\n  }\n}\n\ninterface FormattableStyleRule {\n  rule: Formatter.FormatterWorkerPool.CSSRule;\n  selector: string;\n}\n\nasync function buildStyleRuleMaps(content: string): Promise<{\n  declarationIDToStyleRule: Map<number, FormattableStyleRule>,\n  styleRuleIDToStyleRule: Map<number, FormattableStyleRule>,\n}> {\n  const rules = await new Promise<Formatter.FormatterWorkerPool.CSSRule[]>(res => {\n    const rules: Formatter.FormatterWorkerPool.CSSRule[] = [];\n    Formatter.FormatterWorkerPool.formatterWorkerPool().parseCSS(content, (isLastChunk, currentRules) => {\n      rules.push(...currentRules);\n      if (isLastChunk) {\n        res(rules);\n      }\n    });\n  });\n\n  // We use line numbers as unique IDs for rules and declarations\n  const declarationIDToStyleRule = new Map<number, FormattableStyleRule>();\n  const styleRuleIDToStyleRule = new Map<number, FormattableStyleRule>();\n  for (const rule of rules) {\n    if ('styleRange' in rule) {\n      const selector = rule.selectorText.split('\\n').pop()?.trim();\n      if (!selector) {\n        continue;\n      }\n      const styleRule = {rule, selector};\n      styleRuleIDToStyleRule.set(rule.styleRange.startLine, styleRule);\n      for (const property of rule.properties) {\n        declarationIDToStyleRule.set(property.range.startLine, styleRule);\n      }\n    }\n  }\n  return {declarationIDToStyleRule, styleRuleIDToStyleRule};\n}\n"],
  "mappings": "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",
  "names": ["iconName", "rules"]
}
