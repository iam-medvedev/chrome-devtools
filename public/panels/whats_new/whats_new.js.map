{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/whats_new/ReleaseNoteText.ts", "../../../../../../front_end/panels/whats_new/ReleaseNoteView.ts", "releaseNoteView.css.js", "../../../../../../front_end/panels/whats_new/WhatsNewImpl.ts"],
  "sourcesContent": ["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// NOTE: need to be careful about adding release notes early otherwise it'll\n// be shown in Canary (e.g. make sure the release notes are accurate).\n// https://github.com/ChromeDevTools/devtools-frontend/wiki/Release-Notes\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as MarkdownView from '../../ui/components/markdown_view/markdown_view.js';\n\nlet registeredLinks = false;\n\nexport interface ReleaseNote {\n  version: number;\n  header: string;\n  markdownLinks: Array<{key: string, link: string}>;\n  videoLinks: Array<{description: string, link: Platform.DevToolsPath.UrlString, type?: VideoType}>;\n  link: string;\n}\n\nexport const enum VideoType {\n  WHATS_NEW = 'WhatsNew',\n  DEVTOOLS_TIPS = 'DevtoolsTips',\n  OTHER = 'Other',\n}\n\nexport function setReleaseNoteForTest(testReleaseNote: ReleaseNote): void {\n  releaseNote = testReleaseNote;\n}\n\nexport function getReleaseNote(): ReleaseNote {\n  if (!registeredLinks) {\n    for (const {key, link} of releaseNote.markdownLinks) {\n      MarkdownView.MarkdownLinksMap.markdownLinks.set(key, link);\n    }\n    registeredLinks = true;\n  }\n  return releaseNote;\n}\n\nlet releaseNote: ReleaseNote = {\n  version: 81,\n  header: 'What\\'s new in DevTools 140',\n  markdownLinks: [\n    {\n      key: 'ai-insights',\n      link: 'https://developer.chrome.com/blog/new-in-devtools-140/#ai-insights',\n    },\n    {\n      key: 'save-data',\n      link: 'https://developer.chrome.com/blog/new-in-devtools-140/#save-data',\n    },\n    {\n      key: 'debug-css',\n      link: 'https://developer.chrome.com/blog/new-in-devtools-138#debug-css-values',\n    },\n  ],\n  videoLinks: [\n    {\n      description: 'See past highlights from Chrome 139',\n      link: 'https://developer.chrome.com/blog/new-in-devtools-139' as Platform.DevToolsPath.UrlString,\n      type: VideoType.WHATS_NEW,\n    },\n  ],\n  link: 'https://developer.chrome.com/blog/new-in-devtools-140/',\n};\n", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/markdown_view/markdown_view.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Marked from '../../third_party/marked/marked.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {getReleaseNote, type ReleaseNote, VideoType} from './ReleaseNoteText.js';\nimport releaseNoteViewStyles from './releaseNoteView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text that is usually a hyperlink to more documentation\n   */\n  seeFeatures: 'See all new features',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/whats_new/ReleaseNoteView.ts', UIStrings);\n\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport const WHATS_NEW_THUMBNAIL = '../../Images/whatsnew.svg' as Platform.DevToolsPath.RawPathString;\nexport const DEVTOOLS_TIPS_THUMBNAIL = '../../Images/devtools-tips.svg' as Platform.DevToolsPath.RawPathString;\nexport const GENERAL_THUMBNAIL = '../../Images/devtools-thumbnail.svg' as Platform.DevToolsPath.RawPathString;\n\nexport interface ViewInput {\n  markdownContent: Marked.Marked.Token[][];\n  getReleaseNote: () => ReleaseNote;\n  openNewTab: (link: string) => void;\n  getThumbnailPath: (type: VideoType) => Platform.DevToolsPath.UrlString;\n}\nexport type View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\nexport type ViewOutput = unknown;\n\nexport async function getMarkdownContent(): Promise<Marked.Marked.Token[][]> {\n  const markdown = await ReleaseNoteView.getFileContent();\n  const markdownAst = Marked.Marked.lexer(markdown);\n  const splitMarkdownAst: Marked.Marked.Token[][] = [];\n\n  // Split markdown content into groups of content to be rendered together.\n  // Each topic is supposed to be rendered in a separate card.\n  let groupStartDepth = Number.MAX_SAFE_INTEGER;\n  markdownAst.forEach((token: Marked.Marked.Token) => {\n    if (token.type === 'heading' && groupStartDepth >= token.depth) {\n      splitMarkdownAst.push([token]);\n      groupStartDepth = token.depth;\n    } else if (splitMarkdownAst.length > 0) {\n      splitMarkdownAst[splitMarkdownAst.length - 1].push(token);\n    } else {\n      // Missing a heading. Add to a separate section.\n      splitMarkdownAst.push([token]);\n    }\n  });\n  return splitMarkdownAst;\n}\n\nexport class ReleaseNoteView extends UI.Panel.Panel {\n  #view: View;\n\n  constructor(view: View = (input, _output, target) => {\n    const releaseNote = input.getReleaseNote();\n    const markdownContent = input.markdownContent;\n    // clang-format off\n    render(html`\n      <style>${releaseNoteViewStyles}</style>\n      <div class=\"whatsnew\" jslog=${VisualLogging.section().context('release-notes')}>\n        <div class=\"whatsnew-content\">\n          <div class=\"header\">\n            ${releaseNote.header}\n          </div>\n          <div>\n            <devtools-button\n                  .variant=${Buttons.Button.Variant.PRIMARY}\n                  .jslogContext=${'learn-more'}\n                  @click=${() => input.openNewTab(releaseNote.link)}\n              >${i18nString(UIStrings.seeFeatures)}</devtools-button>\n          </div>\n\n          <div class=\"feature-container\">\n            <div class=\"video-container\">\n              ${releaseNote.videoLinks.map((value: {description: string, link: Platform.DevToolsPath.UrlString, type?: VideoType}) => {\n                return html`\n                  <x-link\n                  href=${value.link}\n                  jslog=${VisualLogging.link().track({click: true}).context('learn-more')}>\n                    <div class=\"video\">\n                      <img class=\"thumbnail\" src=${input.getThumbnailPath(value.type ?? VideoType.WHATS_NEW)}>\n                      <div class=\"thumbnail-description\"><span>${value.description}</span></div>\n                    </div>\n                </x-link>\n                `;\n              })}\n            </div>\n            ${markdownContent.map((markdown: Marked.Marked.Token[]) => {\n              return html`\n                  <div class=\"feature\">\n                    <devtools-markdown-view slot=\"content\" .data=${{tokens: markdown}}>\n                    </devtools-markdown-view>\n                  </div>`;\n            })}\n          </div>\n        </div>\n      </div>\n    `, target);\n    // clang-format on\n  }) {\n    super('whats-new', true);\n    this.#view = view;\n    this.requestUpdate();\n  }\n\n  static async getFileContent(): Promise<string> {\n    const url = new URL('./resources/WNDT.md', import.meta.url);\n    try {\n      const response = await fetch(url.toString());\n      return await response.text();\n    } catch {\n      throw new Error(`Markdown file ${\n          url.toString()} not found. Make sure it is correctly listed in the relevant BUILD.gn files.`);\n    }\n  }\n\n  override async performUpdate(): Promise<void> {\n    const markdownContent = await getMarkdownContent();\n    this.#view(\n        {\n          getReleaseNote,\n          openNewTab: UI.UIUtils.openInNewTab,\n          markdownContent,\n          getThumbnailPath: this.#getThumbnailPath,\n        },\n        this, this.contentElement);\n  }\n\n  #getThumbnailPath(type: VideoType): Platform.DevToolsPath.UrlString {\n    let img;\n    switch (type) {\n      case VideoType.WHATS_NEW:\n        img = WHATS_NEW_THUMBNAIL;\n        break;\n      case VideoType.DEVTOOLS_TIPS:\n        img = DEVTOOLS_TIPS_THUMBNAIL;\n        break;\n      case VideoType.OTHER:\n        img = GENERAL_THUMBNAIL;\n        break;\n    }\n    return new URL(img, import.meta.url).toString() as Platform.DevToolsPath.UrlString;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n@scope to (devtools-widget > *) {\n  .whatsnew {\n    background: var(--sys-color-header-container);\n    flex-grow: 1;\n    flex-shrink: 0;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    justify-content: center;\n  }\n\n  .whatsnew-content {\n    max-width: var(--sys-size-35);\n    padding: var(--sys-size-9) 0 0;\n\n    >* {\n      padding: 0 var(--sys-size-9) var(--sys-size-9) var(--sys-size-9);\n    }\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    font: var(--sys-typescale-headline4);\n\n    &::before {\n      content: \"\";\n      width: var(--sys-size-9);\n      height: var(--sys-size-9);\n      transform: scale(1.6);\n      margin: 0 var(--sys-size-8) 0 var(--sys-size-4);\n      background-image: var(--image-file-devtools);\n      flex-shrink: 0;\n    }\n  }\n\n  .feature-container {\n    flex-grow: 1;\n    padding: 0;\n    background-color: var(--sys-color-surface);\n    border-radius: var(--sys-shape-corner-large) var(--sys-shape-corner-large) 0 0;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .feature {\n    background-color: var(--sys-color-surface3);\n    padding: 0 var(--sys-size-8) var(--sys-size-8);\n    border-radius: var(--sys-shape-corner-medium);\n    margin: 0 var(--sys-size-9) var(--sys-size-9);\n  }\n\n  .video-container {\n    margin-bottom: var(--sys-size-9);\n\n    &:has(.video) {\n      --video-bottom-padding: var(--sys-size-6);\n\n      overflow: auto;\n      display: flex;\n      flex-direction: row;\n      gap: var(--sys-size-5);\n      padding: var(--sys-size-9) var(--sys-size-9) var(--video-bottom-padding);\n\n      /* This extra margin makes sure that we have some space between\n        the scrollable container for videos and the cards below it. */\n      margin-bottom: calc(var(--sys-size-9) - var(--video-bottom-padding));\n\n      > * {\n        min-width: auto;\n      }\n    }\n  }\n\n  .video {\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    border-radius: var(--sys-shape-corner-medium);\n    background-color: var(--sys-color-surface3);\n    font: var(--sys-typescale-body5-regular);\n    min-width: var(--sys-size-29);\n    max-width: var(--sys-size-32);\n    overflow: hidden;\n    height: 72px;\n\n    &:hover {\n      box-shadow: var(--sys-elevation-level3);\n    }\n\n    .thumbnail {\n      border-radius: var(--sys-shape-corner-medium) 0 0 var(--sys-shape-corner-medium);\n      flex-shrink: 0;\n    }\n\n    .thumbnail-description {\n      --description-margin: var(--sys-size-6);\n\n      margin: var(--description-margin);\n      height: calc(100% - var(--description-margin) * 2);\n      overflow: hidden;\n    }\n  }\n\n  x-link:focus .video {\n    outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n  }\n\n  @media (forced-colors: active) {\n    .feature,\n    .video {\n      border: var(--sys-size-1) solid ButtonText;\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./releaseNoteView.css')} */`;", "// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {getReleaseNote} from './ReleaseNoteText.js';\n\nexport const releaseVersionSeen = 'releaseNoteVersionSeen';\n\nexport const releaseNoteViewId = 'release-note';\n\nlet releaseNoteVersionSetting: Common.Settings.Setting<number>;\n\nexport function showReleaseNoteIfNeeded(): boolean {\n  const releaseNoteVersionSetting = Common.Settings.Settings.instance().createSetting(releaseVersionSeen, 0);\n  const releaseNoteVersionSettingValue = releaseNoteVersionSetting.get();\n  const releaseNote = getReleaseNote();\n  return innerShowReleaseNoteIfNeeded(\n      releaseNoteVersionSettingValue, releaseNote.version,\n      Common.Settings.Settings.instance().moduleSetting('help.show-release-note').get());\n}\n\nexport function getReleaseNoteVersionSetting(): Common.Settings.Setting<number> {\n  if (!releaseNoteVersionSetting) {\n    releaseNoteVersionSetting = Common.Settings.Settings.instance().createSetting(releaseVersionSeen, 0);\n  }\n  return releaseNoteVersionSetting;\n}\n\nfunction innerShowReleaseNoteIfNeeded(\n    lastSeenVersion: number, latestVersion: number, showReleaseNoteSettingEnabled: boolean): boolean {\n  const releaseNoteVersionSetting = Common.Settings.Settings.instance().createSetting(releaseVersionSeen, 0);\n  if (!lastSeenVersion) {\n    releaseNoteVersionSetting.set(latestVersion);\n    return false;\n  }\n  if (!showReleaseNoteSettingEnabled) {\n    return false;\n  }\n  if (lastSeenVersion >= latestVersion) {\n    return false;\n  }\n  releaseNoteVersionSetting.set(latestVersion);\n  void UI.ViewManager.ViewManager.instance().showView(releaseNoteViewId, true);\n  return true;\n}\n\nlet helpLateInitializationInstance: HelpLateInitialization;\nexport class HelpLateInitialization implements Common.Runnable.Runnable {\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): HelpLateInitialization {\n    const {forceNew} = opts;\n    if (!helpLateInitializationInstance || forceNew) {\n      helpLateInitializationInstance = new HelpLateInitialization();\n    }\n    return helpLateInitializationInstance;\n  }\n\n  async run(): Promise<void> {\n    if (!Host.InspectorFrontendHost.isUnderTest()) {\n      showReleaseNoteIfNeeded();\n    }\n  }\n}\n\nlet releaseNotesActionDelegateInstance: ReleaseNotesActionDelegate;\nexport class ReleaseNotesActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, _actionId: string): boolean {\n    const releaseNote = getReleaseNote();\n    UI.UIUtils.openInNewTab(releaseNote.link);\n    return true;\n  }\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): ReleaseNotesActionDelegate {\n    const {forceNew} = opts;\n    if (!releaseNotesActionDelegateInstance || forceNew) {\n      releaseNotesActionDelegateInstance = new ReleaseNotesActionDelegate();\n    }\n\n    return releaseNotesActionDelegateInstance;\n  }\n}\n\nlet reportIssueActionDelegateInstance: ReportIssueActionDelegate;\nexport class ReportIssueActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, _actionId: string): boolean {\n    UI.UIUtils.openInNewTab('https://goo.gle/devtools-bug');\n    return true;\n  }\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): ReportIssueActionDelegate {\n    const {forceNew} = opts;\n    if (!reportIssueActionDelegateInstance || forceNew) {\n      reportIssueActionDelegateInstance = new ReportIssueActionDelegate();\n    }\n\n    return reportIssueActionDelegateInstance;\n  }\n}\n"],
  "mappings": "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",
  "names": ["link", "releaseNote", "UI", "releaseNoteVersionSetting", "releaseNote"]
}
