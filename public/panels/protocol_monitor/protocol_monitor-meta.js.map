{
  "version": 3,
  "sources": ["protocol_monitor-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as ProtocolMonitor from './protocol_monitor.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of the 'Protocol monitor' tool in the bottom drawer. This is a tool for\n   * viewing and inspecting 'protocol' messages which are sent/received by DevTools. 'protocol' here\n   * could be left untranslated as this refers to the Chrome DevTools Protocol (CDP) which is a\n   * specific API name.\n   */\n  protocolMonitor: 'Protocol monitor',\n  /**\n   *@description Command for showing the 'Protocol monitor' tool in the bottom drawer\n   */\n  showProtocolMonitor: 'Show Protocol monitor',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/protocol_monitor/protocol_monitor-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedProtocolMonitorModule: (typeof ProtocolMonitor|undefined);\n\nasync function loadProtocolMonitorModule(): Promise<typeof ProtocolMonitor> {\n  if (!loadedProtocolMonitorModule) {\n    loadedProtocolMonitorModule = await import('./protocol_monitor.js');\n  }\n  return loadedProtocolMonitorModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'protocol-monitor',\n  title: i18nLazyString(UIStrings.protocolMonitor),\n  commandPrompt: i18nLazyString(UIStrings.showProtocolMonitor),\n  order: 100,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const ProtocolMonitor = await loadProtocolMonitorModule();\n    return new ProtocolMonitor.ProtocolMonitor.ProtocolMonitorImpl();\n  },\n  experiment: Root.Runtime.ExperimentName.PROTOCOL_MONITOR,\n});\n"],
  "mappings": ";AAIA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,QAAQ;AAIpB,IAAM,YAAY;;;;;;;EAOhB,iBAAiB;;;;EAIjB,qBAAqB;;AAEvB,IAAM,OAAY,UAAK,kBAAkB,oDAAoD,SAAS;AACtG,IAAM,iBAAsB,UAAK,iCAAiC,KAAK,QAAW,IAAI;AAEtF,IAAI;AAEJ,eAAe,4BAAyB;AACtC,MAAI,CAAC,6BAA6B;AAChC,kCAA8B,MAAM,OAAO,uBAAuB;EACpE;AACA,SAAO;AACT;AAEG,eAAY,sBAAsB;EACnC,UAAQ;EACR,IAAI;EACJ,OAAO,eAAe,UAAU,eAAe;EAC/C,eAAe,eAAe,UAAU,mBAAmB;EAC3D,OAAO;EACP,aAAW;EACX,MAAM,WAAQ;AACZ,UAAM,kBAAkB,MAAM,0BAAyB;AACvD,WAAO,IAAI,gBAAgB,gBAAgB,oBAAmB;EAChE;EACA,YAAU;CACX;",
  "names": []
}
