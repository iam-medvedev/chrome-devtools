{"version":3,"file":"JSONEditor.js","sourceRoot":"","sources":["../../../../../../front_end/panels/protocol_monitor/JSONEditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/icon_button/icon_button.js';\nimport '../../ui/components/menus/menus.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as Dialogs from '../../ui/components/dialogs/dialogs.js';\nimport type * as Menus from '../../ui/components/menus/menus.js';\nimport * as SuggestionInput from '../../ui/components/suggestion_input/suggestion_input.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as ElementsComponents from '../elements/components/components.js';\n\nimport editorWidgetStyles from './JSONEditor.css.js';\n\nconst {html, render, Directives, nothing} = Lit;\nconst {live, classMap, repeat} = Directives;\n\nconst UIStrings = {\n  /**\n   *@description The title of a button that deletes a parameter.\n   */\n  deleteParameter: 'Delete parameter',\n  /**\n   *@description The title of a button that adds a parameter.\n   */\n  addParameter: 'Add a parameter',\n  /**\n   *@description The title of a button that reset the value of a paremeters to its default value.\n   */\n  resetDefaultValue: 'Reset to default value',\n  /**\n   *@description The title of a button to add custom key/value pairs to object parameters with no keys defined\n   */\n  addCustomProperty: 'Add custom property',\n  /**\n   * @description The title of a the button that sends a CDP command.\n   */\n  sendCommandCtrlEnter: 'Send command - Ctrl+Enter',\n  /**\n   * @description The title of a the button that sends a CDP command.\n   */\n  sendCommandCmdEnter: 'Send command - ⌘+Enter',\n  /**\n   * @description he title of a the button that copies a CDP command.\n   */\n  copyCommand: 'Copy command',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/protocol_monitor/JSONEditor.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport const enum ParameterType {\n  STRING = 'string',\n  NUMBER = 'number',\n  BOOLEAN = 'boolean',\n  ARRAY = 'array',\n  OBJECT = 'object',\n}\n\ninterface BaseParameter {\n  optional: boolean;\n  name: string;\n  typeRef?: string;\n  description: string;\n  isCorrectType?: boolean;\n  isKeyEditable?: boolean;\n}\n\ninterface ArrayParameter extends BaseParameter {\n  type: ParameterType.ARRAY;\n  value?: Parameter[];\n}\n\ninterface NumberParameter extends BaseParameter {\n  type: ParameterType.NUMBER;\n  value?: number;\n}\n\ninterface StringParameter extends BaseParameter {\n  type: ParameterType.STRING;\n  value?: string;\n}\n\ninterface BooleanParameter extends BaseParameter {\n  type: ParameterType.BOOLEAN;\n  value?: boolean;\n}\n\ninterface ObjectParameter extends BaseParameter {\n  type: ParameterType.OBJECT;\n  value?: Parameter[];\n}\n\nexport type Parameter = ArrayParameter|NumberParameter|StringParameter|BooleanParameter|ObjectParameter;\n\nexport interface Command {\n  command: string;\n  parameters: {[x: string]: unknown};\n  targetId?: string;\n}\n\nconst splitDescription = (description: string): [string, string] => {\n  // If the description is too long we make the UI a bit better by highlighting the first sentence\n  // which contains the most informations.\n  // The number 150 has been chosen arbitrarily\n  if (description.length > 150) {\n    const [firstSentence, restOfDescription] = description.split('.');\n    // To make the UI nicer, we add a dot at the end of the first sentence.\n    firstSentence + '.';\n    return [firstSentence, restOfDescription];\n  }\n  return [description, ''];\n};\n\nconst defaultValueByType = new Map<string, string|number|boolean>([\n  ['string', ''],\n  ['number', 0],\n  ['boolean', false],\n]);\n\nconst DUMMY_DATA = 'dummy';\nconst EMPTY_STRING = '<empty_string>';\n\nexport function suggestionFilter(option: string, query: string): boolean {\n  return option.toLowerCase().includes(query.toLowerCase());\n}\n\nexport const enum Events {\n  SUBMIT_EDITOR = 'submiteditor',\n}\n\nexport interface EventTypes {\n  [Events.SUBMIT_EDITOR]: Command;\n}\n\nexport class JSONEditor extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox) {\n  #metadataByCommand: Map<string, {parameters: Parameter[], description: string, replyArgs: string[]}>;\n  #typesByName: Map<string, Parameter[]>;\n  #enumsByName: Map<string, Record<string, string>>;\n  #parameters: Parameter[] = [];\n  #targets: SDK.Target.Target[] = [];\n  #command = '';\n  #targetId?: string;\n  #hintPopoverHelper?: UI.PopoverHelper.PopoverHelper;\n\n  constructor(element: HTMLElement) {\n    super(/* useShadowDom=*/ true, undefined, element);\n    this.registerRequiredCSS(editorWidgetStyles);\n    this.#metadataByCommand = new Map();\n    this.#typesByName = new Map();\n    this.#enumsByName = new Map();\n    this.element.setAttribute('jslog', `${VisualLogging.pane('command-editor').track({resize: true})}`);\n    this.contentElement.addEventListener('keydown', event => {\n      if (event.key === 'Enter' && (event.ctrlKey || event.metaKey)) {\n        this.#handleParameterInputKeydown(event);\n        this.#handleCommandSend();\n      }\n    });\n  }\n\n  get metadataByCommand(): Map<string, {parameters: Parameter[], description: string, replyArgs: string[]}> {\n    return this.#metadataByCommand;\n  }\n\n  set metadataByCommand(\n      metadataByCommand: Map<string, {parameters: Parameter[], description: string, replyArgs: string[]}>) {\n    this.#metadataByCommand = metadataByCommand;\n    this.requestUpdate();\n  }\n\n  get typesByName(): Map<string, Parameter[]> {\n    return this.#typesByName;\n  }\n\n  set typesByName(typesByName: Map<string, Parameter[]>) {\n    this.#typesByName = typesByName;\n    this.requestUpdate();\n  }\n\n  get enumsByName(): Map<string, Record<string, string>> {\n    return this.#enumsByName;\n  }\n\n  set enumsByName(enumsByName: Map<string, Record<string, string>>) {\n    this.#enumsByName = enumsByName;\n    this.requestUpdate();\n  }\n\n  get parameters(): Parameter[] {\n    return this.#parameters;\n  }\n\n  set parameters(parameters: Parameter[]) {\n    this.#parameters = parameters;\n    this.requestUpdate();\n  }\n\n  get targets(): SDK.Target.Target[] {\n    return this.#targets;\n  }\n\n  set targets(targets: SDK.Target.Target[]) {\n    this.#targets = targets;\n    this.requestUpdate();\n  }\n\n  get command(): string {\n    return this.#command;\n  }\n\n  set command(command: string) {\n    if (this.#command !== command) {\n      this.#command = command;\n      this.requestUpdate();\n    }\n  }\n\n  get targetId(): string|undefined {\n    return this.#targetId;\n  }\n\n  set targetId(targetId: string|undefined) {\n    if (this.#targetId !== targetId) {\n      this.#targetId = targetId;\n      this.requestUpdate();\n    }\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.#hintPopoverHelper = new UI.PopoverHelper.PopoverHelper(\n        this.contentElement, event => this.#handlePopoverDescriptions(event), 'protocol-monitor.hint');\n    this.#hintPopoverHelper.setDisableOnClick(true);\n    this.#hintPopoverHelper.setTimeout(300);\n    this.#hintPopoverHelper.setHasPadding(true);\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    targetManager.addEventListener(\n        SDK.TargetManager.Events.AVAILABLE_TARGETS_CHANGED, this.#handleAvailableTargetsChanged, this);\n    this.#handleAvailableTargetsChanged();\n    this.requestUpdate();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    this.#hintPopoverHelper?.hidePopover();\n    this.#hintPopoverHelper?.dispose();\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    targetManager.removeEventListener(\n        SDK.TargetManager.Events.AVAILABLE_TARGETS_CHANGED, this.#handleAvailableTargetsChanged, this);\n  }\n\n  #handleAvailableTargetsChanged(): void {\n    this.targets = SDK.TargetManager.TargetManager.instance().targets();\n    if (this.targets.length && this.targetId === undefined) {\n      this.targetId = this.targets[0].id();\n    }\n  }\n\n  getParameters(): {[key: string]: unknown} {\n    const formatParameterValue = (parameter: Parameter): unknown => {\n      if (parameter.value === undefined) {\n        return;\n      }\n      switch (parameter.type) {\n        case ParameterType.NUMBER: {\n          return Number(parameter.value);\n        }\n        case ParameterType.BOOLEAN: {\n          return Boolean(parameter.value);\n        }\n        case ParameterType.OBJECT: {\n          const nestedParameters: {[key: string]: unknown} = {};\n          for (const subParameter of parameter.value) {\n            const formattedValue = formatParameterValue(subParameter);\n            if (formattedValue !== undefined) {\n              nestedParameters[subParameter.name] = formatParameterValue(subParameter);\n            }\n          }\n          if (Object.keys(nestedParameters).length === 0) {\n            return undefined;\n          }\n          return nestedParameters;\n        }\n        case ParameterType.ARRAY: {\n          const nestedArrayParameters = [];\n          for (const subParameter of parameter.value) {\n            nestedArrayParameters.push(formatParameterValue(subParameter));\n          }\n          return nestedArrayParameters.length === 0 ? [] : nestedArrayParameters;\n        }\n        default: {\n          return parameter.value;\n        }\n      }\n    };\n\n    const formattedParameters: {[key: string]: unknown} = {};\n    for (const parameter of this.parameters) {\n      formattedParameters[parameter.name] = formatParameterValue(parameter);\n    }\n    return formatParameterValue({\n             type: ParameterType.OBJECT,\n             name: DUMMY_DATA,\n             optional: true,\n             value: this.parameters,\n             description: '',\n           }) as {[key: string]: unknown};\n  }\n\n  // Displays a command entered in the input bar inside the editor\n  displayCommand(command: string, parameters: Record<string, unknown>, targetId?: string): void {\n    this.targetId = targetId;\n    this.command = command;\n    const schema = this.metadataByCommand.get(this.command);\n    if (!schema?.parameters) {\n      return;\n    }\n    this.populateParametersForCommandWithDefaultValues();\n\n    const displayedParameters = this.#convertObjectToParameterSchema(\n                                        '', parameters, {\n                                          typeRef: DUMMY_DATA,\n                                          type: ParameterType.OBJECT,\n                                          name: '',\n                                          description: '',\n                                          optional: true,\n                                          value: [],\n                                        },\n                                        schema.parameters)\n                                    .value as Parameter[];\n\n    const valueByName = new Map(this.parameters.map(param => [param.name, param]));\n    for (const param of displayedParameters) {\n      const existingParam = valueByName.get(param.name);\n      if (existingParam) {\n        existingParam.value = param.value;\n      }\n    }\n\n    this.requestUpdate();\n  }\n\n  #convertObjectToParameterSchema(key: string, value: unknown, schema?: Parameter, initialSchema?: Parameter[]):\n      Parameter {\n    const type = schema?.type || typeof value;\n    const description = schema?.description ?? '';\n    const optional = schema?.optional ?? true;\n\n    switch (type) {\n      case ParameterType.STRING:\n      case ParameterType.BOOLEAN:\n      case ParameterType.NUMBER:\n        return this.#convertPrimitiveParameter(key, value, schema);\n      case ParameterType.OBJECT:\n        return this.#convertObjectParameter(key, value, schema, initialSchema);\n      case ParameterType.ARRAY:\n        return this.#convertArrayParameter(key, value, schema);\n    }\n    return {\n      type,\n      name: key,\n      optional,\n      typeRef: schema?.typeRef,\n      value,\n      description,\n    } as Parameter;\n  }\n\n  #convertPrimitiveParameter(key: string, value: unknown, schema?: Parameter): Parameter {\n    const type = schema?.type || typeof value;\n    const description = schema?.description ?? '';\n    const optional = schema?.optional ?? true;\n    return {\n      type,\n      name: key,\n      optional,\n      typeRef: schema?.typeRef,\n      value,\n      description,\n      isCorrectType: schema ? this.#isValueOfCorrectType(schema, String(value)) : true,\n    } as Parameter;\n  }\n\n  #convertObjectParameter(key: string, value: unknown, schema?: Parameter, initialSchema?: Parameter[]): Parameter {\n    const description = schema?.description ?? '';\n    if (typeof value !== 'object' || value === null) {\n      throw new Error('The value is not an object');\n    }\n    const typeRef = schema?.typeRef;\n    if (!typeRef) {\n      throw new Error('Every object parameters should have a type ref');\n    }\n\n    const nestedType = typeRef === DUMMY_DATA ? initialSchema : this.typesByName.get(typeRef);\n\n    if (!nestedType) {\n      throw new Error('No nested type for keys were found');\n    }\n    const objectValues = [];\n    for (const objectKey of Object.keys(value)) {\n      const objectType = nestedType.find(param => param.name === objectKey);\n      objectValues.push(\n          this.#convertObjectToParameterSchema(objectKey, (value as Record<string, unknown>)[objectKey], objectType));\n    }\n    return {\n      type: ParameterType.OBJECT,\n      name: key,\n      optional: schema.optional,\n      typeRef: schema.typeRef,\n      value: objectValues,\n      description,\n      isCorrectType: true,\n    };\n  }\n\n  #convertArrayParameter(key: string, value: unknown, schema?: Parameter): Parameter {\n    const description = schema?.description ?? '';\n    const optional = schema?.optional ?? true;\n    const typeRef = schema?.typeRef;\n    if (!typeRef) {\n      throw new Error('Every array parameters should have a type ref');\n    }\n\n    if (!Array.isArray(value)) {\n      throw new Error('The value is not an array');\n    }\n    const nestedType = this.#isTypePrimitive(typeRef) ? undefined : {\n      optional: true,\n      type: ParameterType.OBJECT as ParameterType.OBJECT,\n      value: [],\n      typeRef,\n      description: '',\n      name: '',\n    };\n\n    const objectValues = [];\n\n    for (let i = 0; i < value.length; i++) {\n      const temp = this.#convertObjectToParameterSchema(`${i}`, value[i], nestedType);\n      objectValues.push(temp);\n    }\n    return {\n      type: ParameterType.ARRAY,\n      name: key,\n      optional,\n      typeRef: schema?.typeRef,\n      value: objectValues,\n      description,\n      isCorrectType: true,\n    };\n  }\n\n  #handlePopoverDescriptions(event: MouseEvent|KeyboardEvent):\n      {box: AnchorBox, show: (popover: UI.GlassPane.GlassPane) => Promise<boolean>}|null {\n    const hintElement = event.composedPath()[0] as HTMLElement;\n    const elementData = this.#getDescriptionAndTypeForElement(hintElement);\n    if (!elementData?.description) {\n      return null;\n    }\n    const [head, tail] = splitDescription(elementData.description);\n    const type = elementData.type;\n    const replyArgs = elementData.replyArgs;\n    let popupContent = '';\n    // replyArgs and type cannot get into conflict because replyArgs is attached to a command and type to a parameter\n    if (replyArgs) {\n      popupContent = tail + `Returns: ${replyArgs}<br>`;\n    } else if (type) {\n      popupContent = tail + `<br>Type: ${type}<br>`;\n    } else {\n      popupContent = tail;\n    }\n\n    return {\n      box: hintElement.boxInWindow(),\n      show: async (popover: UI.GlassPane.GlassPane) => {\n        const popupElement = new ElementsComponents.CSSHintDetailsView.CSSHintDetailsView({\n          getMessage: () => `<code><span>${head}</span></code>`,\n          getPossibleFixMessage: () => popupContent,\n          getLearnMoreLink: () =>\n              `https://chromedevtools.github.io/devtools-protocol/tot/${this.command.split('.')[0]}/`,\n        });\n        popover.contentElement.appendChild(popupElement);\n        return true;\n      },\n    };\n  }\n\n  #getDescriptionAndTypeForElement(hintElement: HTMLElement):\n      {description: string, type?: ParameterType, replyArgs?: string[]}|undefined {\n    if (hintElement.matches('.command')) {\n      const metadata = this.metadataByCommand.get(this.command);\n      if (metadata) {\n        return {description: metadata.description, replyArgs: metadata.replyArgs};\n      }\n    }\n    if (hintElement.matches('.parameter')) {\n      const id = hintElement.dataset.paramid;\n      if (!id) {\n        return;\n      }\n      const pathArray = id.split('.');\n      const {parameter} = this.#getChildByPath(pathArray);\n      if (!parameter.description) {\n        return;\n      }\n      return {description: parameter.description, type: parameter.type};\n    }\n    return;\n  }\n\n  getCommandJson(): string {\n    return this.command !== '' ? JSON.stringify({command: this.command, parameters: this.getParameters()}) : '';\n  }\n\n  #copyToClipboard(): void {\n    const commandJson = this.getCommandJson();\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(commandJson);\n  }\n\n  #handleCommandSend(): void {\n    this.dispatchEventToListeners(Events.SUBMIT_EDITOR, {\n      command: this.command,\n      parameters: this.getParameters(),\n      targetId: this.targetId,\n    });\n  }\n\n  populateParametersForCommandWithDefaultValues(): void {\n    const commandParameters = this.metadataByCommand.get(this.command)?.parameters;\n    if (!commandParameters) {\n      return;\n    }\n\n    this.parameters = commandParameters.map((parameter: Parameter) => {\n      return this.#populateParameterDefaults(parameter);\n    });\n  }\n\n  #populateParameterDefaults(parameter: Parameter): Parameter {\n    if (parameter.type === ParameterType.OBJECT) {\n      let typeRef = parameter.typeRef;\n      if (!typeRef) {\n        typeRef = DUMMY_DATA;\n      }\n\n      // Fallback to empty array is extremely rare.\n      // It happens when the keys for an object are not registered like for Tracing.MemoryDumpConfig or headers for instance.\n      const nestedTypes = this.typesByName.get(typeRef) ?? [];\n\n      const nestedParameters = nestedTypes.map(nestedType => {\n        return this.#populateParameterDefaults(nestedType);\n      });\n\n      return {\n        ...parameter,\n        value: parameter.optional ? undefined : nestedParameters,\n        isCorrectType: true,\n      } as Parameter;\n    }\n    if (parameter.type === ParameterType.ARRAY) {\n      return {\n        ...parameter,\n        value: parameter?.optional ? undefined :\n                                     parameter.value?.map(param => this.#populateParameterDefaults(param)) || [],\n        isCorrectType: true,\n      };\n    }\n    return {\n      ...parameter,\n      value: parameter.optional ? undefined : defaultValueByType.get(parameter.type),\n      isCorrectType: true,\n    } as Parameter;\n  }\n\n  #getChildByPath(pathArray: string[]): {parameter: Parameter, parentParameter: Parameter} {\n    let parameters = this.parameters;\n    let parentParameter;\n    for (let i = 0; i < pathArray.length; i++) {\n      const name = pathArray[i];\n      const parameter = parameters.find(param => param.name === name);\n      if (i === pathArray.length - 1) {\n        return {parameter, parentParameter} as {parameter: Parameter, parentParameter: Parameter};\n      }\n      if (parameter?.type === ParameterType.ARRAY || parameter?.type === ParameterType.OBJECT) {\n        if (parameter.value) {\n          parameters = parameter.value;\n        }\n      } else {\n        throw new Error('Parameter on the path in not an object or an array');\n      }\n      parentParameter = parameter;\n    }\n    throw new Error('Not found');\n  }\n\n  #isValueOfCorrectType(parameter: Parameter, value: string): boolean {\n    if (parameter.type === ParameterType.NUMBER && isNaN(Number(value))) {\n      return false;\n    }\n    // For boolean or array parameters, this will create an array of the values the user can enter\n    const acceptedValues = this.#computeDropdownValues(parameter);\n    // Check to see if the entered value by the user is indeed part of the values accepted by the enum or boolean parameter\n    if (acceptedValues.length !== 0 && !acceptedValues.includes(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  #saveParameterValue = (event: Event): void => {\n    if (!(event.target instanceof SuggestionInput.SuggestionInput.SuggestionInput)) {\n      return;\n    }\n    let value: string;\n    if (event instanceof KeyboardEvent) {\n      const editableContent = event.target.renderRoot.querySelector('devtools-editable-content');\n      if (!editableContent) {\n        return;\n      }\n      value = editableContent.innerText;\n    } else {\n      value = event.target.value;\n    }\n    const paramId = event.target.getAttribute('data-paramid');\n    if (!paramId) {\n      return;\n    }\n    const pathArray = paramId.split('.');\n    const object = this.#getChildByPath(pathArray).parameter;\n    if (value === '') {\n      object.value = defaultValueByType.get(object.type);\n    } else {\n      object.value = value;\n      object.isCorrectType = this.#isValueOfCorrectType(object, value);\n    }\n    // Needed to render the delete button for object parameters\n    this.requestUpdate();\n  };\n\n  #saveNestedObjectParameterKey = (event: Event): void => {\n    if (!(event.target instanceof SuggestionInput.SuggestionInput.SuggestionInput)) {\n      return;\n    }\n    const value = event.target.value;\n    const paramId = event.target.getAttribute('data-paramid');\n    if (!paramId) {\n      return;\n    }\n    const pathArray = paramId.split('.');\n    const {parameter} = this.#getChildByPath(pathArray);\n    parameter.name = value;\n    // Needed to render the delete button for object parameters\n    this.requestUpdate();\n  };\n\n  #handleParameterInputKeydown = (event: KeyboardEvent): void => {\n    if (!(event.target instanceof SuggestionInput.SuggestionInput.SuggestionInput)) {\n      return;\n    }\n    if (event.key === 'Enter' && (event.ctrlKey || event.metaKey)) {\n      this.#saveParameterValue(event);\n    }\n  };\n\n  #handleFocusParameter(event: Event): void {\n    if (!(event.target instanceof SuggestionInput.SuggestionInput.SuggestionInput)) {\n      return;\n    }\n    const paramId = event.target.getAttribute('data-paramid');\n    if (!paramId) {\n      return;\n    }\n    const pathArray = paramId.split('.');\n    const object = this.#getChildByPath(pathArray).parameter;\n    object.isCorrectType = true;\n\n    this.requestUpdate();\n  }\n\n  #handleCommandInputBlur = async(event: Event): Promise<void> => {\n    if (event.target instanceof SuggestionInput.SuggestionInput.SuggestionInput) {\n      this.command = event.target.value;\n    }\n    this.populateParametersForCommandWithDefaultValues();\n  };\n\n  #computeTargetLabel(target: SDK.Target.Target): string|undefined {\n    if (!target) {\n      return undefined;\n    }\n    return `${target.name()} (${target.inspectedURL()})`;\n  }\n\n  #isTypePrimitive(type: string): boolean {\n    if (type === ParameterType.STRING || type === ParameterType.BOOLEAN || type === ParameterType.NUMBER) {\n      return true;\n    }\n    return false;\n  }\n\n  #createNestedParameter(type: Parameter, name: string): Parameter {\n    if (type.type === ParameterType.OBJECT) {\n      let typeRef = type.typeRef;\n      if (!typeRef) {\n        typeRef = DUMMY_DATA;\n      }\n      const nestedTypes = this.typesByName.get(typeRef) ?? [];\n\n      const nestedValue: Parameter[] =\n          nestedTypes.map(nestedType => this.#createNestedParameter(nestedType, nestedType.name));\n\n      return {\n        type: ParameterType.OBJECT,\n        name,\n        optional: type.optional,\n        typeRef,\n        value: nestedValue,\n        isCorrectType: true,\n        description: type.description,\n      };\n    }\n    return {\n      type: type.type,\n      name,\n      optional: type.optional,\n      isCorrectType: true,\n      typeRef: type.typeRef,\n      value: type.optional ? undefined : defaultValueByType.get(type.type),\n      description: type.description,\n    } as Parameter;\n  }\n\n  #handleAddParameter(parameterId: string): void {\n    const pathArray = parameterId.split('.');\n    const {parameter, parentParameter} = this.#getChildByPath(pathArray);\n    if (!parameter) {\n      return;\n    }\n\n    switch (parameter.type) {\n      case ParameterType.ARRAY: {\n        const typeRef = parameter.typeRef;\n        if (!typeRef) {\n          throw new Error('Every array parameter must have a typeRef');\n        }\n\n        const nestedType = this.typesByName.get(typeRef) ?? [];\n        const nestedValue: Parameter[] = nestedType.map(type => this.#createNestedParameter(type, type.name));\n\n        let type = this.#isTypePrimitive(typeRef) ? typeRef : ParameterType.OBJECT;\n\n        // If the typeRef is actually a ref to an enum type, the type of the nested param should be a string\n        if (nestedType.length === 0) {\n          if (this.enumsByName.get(typeRef)) {\n            type = ParameterType.STRING;\n          }\n        }\n        // In case the parameter is an optional array, its value will be undefined so before pushing new value inside,\n        // we reset it to empty array\n        if (!parameter.value) {\n          parameter.value = [];\n        }\n        parameter.value.push({\n          type,\n          name: String(parameter.value.length),\n          optional: true,\n          typeRef,\n          value: nestedValue.length !== 0 ? nestedValue : '',\n          description: '',\n          isCorrectType: true,\n        } as Parameter);\n        break;\n      }\n      case ParameterType.OBJECT: {\n        let typeRef = parameter.typeRef;\n        if (!typeRef) {\n          typeRef = DUMMY_DATA;\n        }\n        if (!parameter.value) {\n          parameter.value = [];\n        }\n        if (!this.typesByName.get(typeRef)) {\n          parameter.value.push({\n            type: ParameterType.STRING,\n            name: '',\n            optional: true,\n            value: '',\n            isCorrectType: true,\n            description: '',\n            isKeyEditable: true,\n          });\n          break;\n        }\n        const nestedTypes = this.typesByName.get(typeRef) ?? [];\n        const nestedValue: Parameter[] =\n            nestedTypes.map(nestedType => this.#createNestedParameter(nestedType, nestedType.name));\n        const nestedParameters = nestedTypes.map(nestedType => {\n          return this.#populateParameterDefaults(nestedType);\n        });\n\n        if (parentParameter) {\n          parameter.value.push({\n            type: ParameterType.OBJECT,\n            name: '',\n            optional: true,\n            typeRef,\n            value: nestedValue,\n            isCorrectType: true,\n            description: '',\n          });\n        } else {\n          parameter.value = nestedParameters;\n        }\n        break;\n      }\n      default:\n        // For non-array and non-object parameters, set the value to the default value if available.\n        parameter.value = defaultValueByType.get(parameter.type);\n        break;\n    }\n    this.requestUpdate();\n  }\n\n  #handleClearParameter(parameter: Parameter, isParentArray?: boolean): void {\n    if (parameter?.value === undefined) {\n      return;\n    }\n\n    switch (parameter.type) {\n      case ParameterType.OBJECT:\n        if (parameter.optional && !isParentArray) {\n          parameter.value = undefined;\n          break;\n        }\n        if (!parameter.typeRef || !this.typesByName.get(parameter.typeRef)) {\n          parameter.value = [];\n        } else {\n          parameter.value.forEach(param => this.#handleClearParameter(param, isParentArray));\n        }\n        break;\n\n      case ParameterType.ARRAY:\n        parameter.value = parameter.optional ? undefined : [];\n        break;\n\n      default:\n        parameter.value = parameter.optional ? undefined : defaultValueByType.get(parameter.type);\n        parameter.isCorrectType = true;\n        break;\n    }\n\n    this.requestUpdate();\n  }\n\n  #handleDeleteParameter(parameter: Parameter, parentParameter: Parameter): void {\n    if (!parameter) {\n      return;\n    }\n    if (!Array.isArray(parentParameter.value)) {\n      return;\n    }\n    parentParameter.value.splice(parentParameter.value.findIndex(p => p === parameter), 1);\n\n    if (parentParameter.type === ParameterType.ARRAY) {\n      for (let i = 0; i < parentParameter.value.length; i++) {\n        parentParameter.value[i].name = String(i);\n      }\n    }\n    this.requestUpdate();\n  }\n\n  #renderTargetSelectorRow(): Lit.TemplateResult|undefined {\n    const target = this.targets.find(el => el.id() === this.targetId);\n    const targetLabel = target ? this.#computeTargetLabel(target) : this.#computeTargetLabel(this.targets[0]);\n\n    // clang-format off\n    return html`\n    <div class=\"row attribute padded\">\n      <div>target<span class=\"separator\">:</span></div>\n      <devtools-select-menu\n            class=\"target-select-menu\"\n            @selectmenuselected=${this.#onTargetSelected}\n            .showDivider=${true}\n            .showArrow=${true}\n            .sideButton=${false}\n            .showSelectedItem=${true}\n            .position=${Dialogs.Dialog.DialogVerticalPosition.BOTTOM}\n            .buttonTitle=${targetLabel || ''}\n            jslog=${VisualLogging.dropDown('targets').track({click: true})}\n          >\n          ${repeat(this.targets, target => {\n          return html`\n                <devtools-menu-item\n                  class=\"no-checkmark\"\n                  .value=${target.id()}>\n                    ${this.#computeTargetLabel(target)}\n                </devtools-menu-item>\n              `;\n        },\n    )}\n          </devtools-select-menu>\n    </div>\n  `;\n    // clang-format on\n  }\n\n  #onTargetSelected(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void {\n    this.targetId = event.itemValue as string;\n    this.requestUpdate();\n  }\n\n  #computeDropdownValues(parameter: Parameter): string[] {\n    // The suggestion box should only be shown for parameters of type string and boolean\n    if (parameter.type === ParameterType.STRING) {\n      const enums = this.enumsByName.get(`${parameter.typeRef}`) ?? {};\n      return Object.values(enums);\n    }\n    if (parameter.type === ParameterType.BOOLEAN) {\n      return ['true', 'false'];\n    }\n    return [];\n  }\n\n  #renderInlineButton(opts: {\n    title: string,\n    iconName: string,\n    classMap: {[name: string]: string|boolean|number},\n    onClick: (event: MouseEvent) => void,\n    jslogContext: string,\n  }): Lit.TemplateResult|undefined {\n    return html`\n          <devtools-button\n            title=${opts.title}\n            .size=${Buttons.Button.Size.SMALL}\n            .iconName=${opts.iconName}\n            .variant=${Buttons.Button.Variant.ICON}\n            class=${classMap(opts.classMap)}\n            @click=${opts.onClick}\n            .jslogContext=${opts.jslogContext}\n          ></devtools-button>\n        `;\n  }\n\n  #renderWarningIcon(): Lit.TemplateResult|undefined {\n    return html`<devtools-icon\n    .data=${{\n      iconName: 'warning-filled', color: 'var(--icon-warning)', width: '14px', height: '14px',\n    }\n    }\n    class=${classMap({\n      'warning-icon': true,\n    })}\n  >\n  </devtools-icon>`;\n  }\n\n  /**\n   * Renders the parameters list corresponding to a specific CDP command.\n   */\n  #renderParameters(parameters: Parameter[], id?: string, parentParameter?: Parameter, parentParameterId?: string):\n      Lit.TemplateResult|undefined {\n    parameters.sort((a, b) => Number(a.optional) - Number(b.optional));\n\n    // clang-format off\n    return html`\n      <ul>\n        ${repeat(parameters, parameter => {\n          const parameterId = parentParameter ? `${parentParameterId}` + '.' + `${parameter.name}` : parameter.name;\n          const subparameters: Parameter[] = parameter.type === ParameterType.ARRAY || parameter.type === ParameterType.OBJECT ? (parameter.value ?? []) : [];\n          const handleInputOnBlur = (event: Event): void => {\n            this.#saveParameterValue(event);\n          };\n          const handleKeydown = (event: KeyboardEvent): void => {\n            this.#handleParameterInputKeydown(event);\n          };\n          const handleFocus = (event: Event): void => {\n            this.#handleFocusParameter(event);\n          };\n          const handleParamKeyOnBlur = (event: Event): void => {\n            this.#saveNestedObjectParameterKey(event);\n          };\n          const isPrimitive = this.#isTypePrimitive(parameter.type);\n          const isArray = parameter.type === ParameterType.ARRAY;\n          const isParentArray = parentParameter && parentParameter.type === ParameterType.ARRAY;\n          const isParentObject = parentParameter && parentParameter.type === ParameterType.OBJECT;\n\n          const isObject = parameter.type === ParameterType.OBJECT;\n          const isParamValueUndefined = parameter.value === undefined;\n          const isParamOptional = parameter.optional;\n          const hasTypeRef = isObject && parameter.typeRef && this.typesByName.get(parameter.typeRef) !== undefined;\n          // This variable indicates that this parameter is a parameter nested inside an object parameter\n          // that no keys defined inside the CDP documentation.\n          const hasNoKeys = parameter.isKeyEditable;\n          const isCustomEditorDisplayed = isObject && !hasTypeRef;\n          const hasOptions = parameter.type === ParameterType.STRING || parameter.type === ParameterType.BOOLEAN;\n          const canClearParameter = (isArray && !isParamValueUndefined && parameter.value?.length !== 0) || (isObject && !isParamValueUndefined);\n          const parametersClasses = {\n            'optional-parameter': parameter.optional,\n            parameter: true,\n            'undefined-parameter': parameter.value === undefined && parameter.optional,\n          };\n          const inputClasses = {\n            'json-input': true,\n          };\n          return html`\n                <li class=\"row\">\n                  <div class=\"row-icons\">\n                      ${!parameter.isCorrectType ? html`${this.#renderWarningIcon()}` : nothing}\n\n                      <!-- If an object parameter has no predefined keys, show an input to enter the key, otherwise show the name of the parameter -->\n                      <div class=${classMap(parametersClasses)} data-paramId=${parameterId}>\n                          ${hasNoKeys ?\n                            html`<devtools-suggestion-input\n                              data-paramId=${parameterId}\n                              isKey=${true}\n                              .isCorrectInput=${live(parameter.isCorrectType)}\n                              .options=${hasOptions ? this.#computeDropdownValues(parameter) : []}\n                              .autocomplete=${false}\n                              .value=${live(parameter.name ?? '')}\n                              .placeholder=${parameter.value === '' ? EMPTY_STRING : `<${defaultValueByType.get(parameter.type)}>`}\n                              @blur=${handleParamKeyOnBlur}\n                              @focus=${handleFocus}\n                              @keydown=${handleKeydown}\n                            ></devtools-suggestion-input>`:\n                            html`${parameter.name}`} <span class=\"separator\">:</span>\n                      </div>\n\n                      <!-- Render button to add values inside an array parameter -->\n                      ${isArray ? html`\n                        ${this.#renderInlineButton({\n                            title: i18nString(UIStrings.addParameter),\n                            iconName: 'plus',\n                            onClick: () => this.#handleAddParameter(parameterId),\n                            classMap: { 'add-button': true },\n                            jslogContext: 'protocol-monitor.add-parameter',\n                          })}\n                      `: nothing}\n\n                      <!-- Render button to complete reset an array parameter or an object parameter-->\n                      ${canClearParameter ?\n                      this.#renderInlineButton({\n                        title: i18nString(UIStrings.resetDefaultValue),\n                        iconName: 'clear',\n                        onClick: () => this.#handleClearParameter(parameter, isParentArray),\n                        classMap: {'clear-button': true},\n                        jslogContext: 'protocol-monitor.reset-to-default-value',\n                      }) : nothing}\n\n                      <!-- Render the buttons to change the value from undefined to empty string for optional primitive parameters -->\n                      ${isPrimitive && !isParentArray && isParamOptional && isParamValueUndefined ?\n                          html`  ${this.#renderInlineButton({\n                            title: i18nString(UIStrings.addParameter),\n                            iconName: 'plus',\n                            onClick: () => this.#handleAddParameter(parameterId),\n                            classMap: { 'add-button': true },\n                            jslogContext: 'protocol-monitor.add-parameter',\n                      })}` : nothing}\n\n                      <!-- Render the buttons to change the value from undefined to populate the values inside object with their default values -->\n                      ${isObject && isParamOptional && isParamValueUndefined && hasTypeRef ?\n                          html`  ${this.#renderInlineButton({\n                            title: i18nString(UIStrings.addParameter),\n                            iconName: 'plus',\n                            onClick: () => this.#handleAddParameter(parameterId),\n                            classMap: { 'add-button': true },\n                            jslogContext: 'protocol-monitor.add-parameter',\n                          })}` : nothing}\n                  </div>\n\n                  <div class=\"row-icons\">\n                      <!-- If an object has no predefined keys, show an input to enter the value, and a delete icon to delete the whole key/value pair -->\n                      ${hasNoKeys && isParentObject ?  html`\n                      <!-- @ts-ignore -->\n                      <devtools-suggestion-input\n                          data-paramId=${parameterId}\n                          .isCorrectInput=${live(parameter.isCorrectType)}\n                          .options=${hasOptions ? this.#computeDropdownValues(parameter) : []}\n                          .autocomplete=${false}\n                          .value=${live(parameter.value ?? '')}\n                          .placeholder=${parameter.value === '' ? EMPTY_STRING : `<${defaultValueByType.get(parameter.type)}>`}\n                          .jslogContext=${'parameter-value'}\n                          @blur=${handleInputOnBlur}\n                          @focus=${handleFocus}\n                          @keydown=${handleKeydown}\n                        ></devtools-suggestion-input>\n\n                        ${this.#renderInlineButton({\n                        title: i18nString(UIStrings.deleteParameter),\n                        iconName: 'bin',\n                        onClick: () => this.#handleDeleteParameter(parameter, parentParameter),\n                        classMap: { deleteButton: true, deleteIcon: true },\n                        jslogContext: 'protocol-monitor.delete-parameter',\n                      })}`: nothing}\n\n                    <!-- In case  the parameter is not optional or its value is not undefined render the input -->\n                    ${isPrimitive && !hasNoKeys && (!isParamValueUndefined || !isParamOptional) && (!isParentArray) ?\n                      html`\n                        <!-- @ts-ignore -->\n                        <devtools-suggestion-input\n                          data-paramId=${parameterId}\n                          .strikethrough=${live(parameter.isCorrectType)}\n                          .options=${hasOptions ? this.#computeDropdownValues(parameter) : []}\n                          .autocomplete=${false}\n                          .value=${live(parameter.value ?? '')}\n                          .placeholder=${parameter.value === '' ? EMPTY_STRING : `<${defaultValueByType.get(parameter.type)}>`}\n                          .jslogContext=${'parameter-value'}\n                          @blur=${handleInputOnBlur}\n                          @focus=${handleFocus}\n                          @keydown=${handleKeydown}\n                        ></devtools-suggestion-input>` : nothing}\n\n                    <!-- Render the buttons to change the value from empty string to undefined for optional primitive parameters -->\n                    ${isPrimitive &&!hasNoKeys && !isParentArray && isParamOptional && !isParamValueUndefined ?\n                        html`  ${this.#renderInlineButton({\n                          title: i18nString(UIStrings.resetDefaultValue),\n                          iconName: 'clear',\n                          onClick: () => this.#handleClearParameter(parameter),\n                          classMap: { 'clear-button': true },\n                          jslogContext: 'protocol-monitor.reset-to-default-value',\n                        })}` : nothing}\n\n                    <!-- If the parameter is an object with no predefined keys, renders a button to add key/value pairs to it's value -->\n                    ${isCustomEditorDisplayed ? html`\n                      ${this.#renderInlineButton({\n                        title: i18nString(UIStrings.addCustomProperty),\n                        iconName: 'plus',\n                        onClick: () => this.#handleAddParameter(parameterId),\n                        classMap: { 'add-button': true },\n                        jslogContext: 'protocol-monitor.add-custom-property',\n                      })}\n                    ` : nothing}\n\n                    <!-- In case the parameter is nested inside an array we render the input field as well as a delete button -->\n                    ${isParentArray ? html`\n                    <!-- If the parameter is an object we don't want to display the input field we just want the delete button-->\n                    ${!isObject ? html`\n                    <!-- @ts-ignore -->\n                    <devtools-suggestion-input\n                      data-paramId=${parameterId}\n                      .options=${hasOptions ? this.#computeDropdownValues(parameter) : []}\n                      .autocomplete=${false}\n                      .value=${live(parameter.value ?? '')}\n                      .placeholder=${parameter.value === '' ? EMPTY_STRING : `<${defaultValueByType.get(parameter.type)}>`}\n                      .jslogContext=${'parameter'}\n                      @blur=${handleInputOnBlur}\n                      @keydown=${handleKeydown}\n                      class=${classMap(inputClasses)}\n                    ></devtools-suggestion-input>` : nothing}\n\n                    ${this.#renderInlineButton({\n                        title: i18nString(UIStrings.deleteParameter),\n                        iconName: 'bin',\n                        onClick: () => this.#handleDeleteParameter(parameter, parentParameter),\n                        classMap: { 'delete-button': true },\n                        jslogContext: 'protocol-monitor.delete-parameter',\n                      })}` : nothing}\n                  </div>\n                </li>\n                ${this.#renderParameters(subparameters, id, parameter, parameterId)}\n              `;\n          })}\n      </ul>\n    `;\n    // clang-format on\n  }\n\n  override performUpdate(): void {\n    // clang-format off\n    render(html`\n    <div class=\"wrapper\">\n      ${this.#renderTargetSelectorRow()}\n      <div class=\"row attribute padded\">\n        <div class=\"command\">command<span class=\"separator\">:</span></div>\n        <devtools-suggestion-input\n          .options=${[...this.metadataByCommand.keys()]}\n          .value=${this.command}\n          .placeholder=${'Enter your command...'}\n          .suggestionFilter=${suggestionFilter}\n          .jslogContext=${'command'}\n          @blur=${this.#handleCommandInputBlur}\n          class=${classMap({'json-input': true})}\n        ></devtools-suggestion-input>\n      </div>\n      ${this.parameters.length ? html`\n      <div class=\"row attribute padded\">\n        <div>parameters<span class=\"separator\">:</span></div>\n      </div>\n        ${this.#renderParameters(this.parameters)}\n      ` : nothing}\n    </div>\n    <devtools-toolbar class=\"protocol-monitor-sidebar-toolbar\">\n      <devtools-button title=${i18nString(UIStrings.copyCommand)}\n                       .iconName=${'copy'}\n                       .jslogContext=${'protocol-monitor.copy-command'}\n                       .variant=${Buttons.Button.Variant.TOOLBAR}\n                       @click=${this.#copyToClipboard}></devtools-button>\n        <div class=toolbar-spacer></div>\n      <devtools-button title=${Host.Platform.isMac() ? i18nString(UIStrings.sendCommandCmdEnter) : i18nString(UIStrings.sendCommandCtrlEnter)}\n                       .iconName=${'send'}\n                       jslogContext=${'protocol-monitor.send-command'}\n                       .variant=${Buttons.Button.Variant.PRIMARY_TOOLBAR}\n                       @click=${this.#handleCommandSend}></devtools-button>\n    </devtools-toolbar>`, this.contentElement, {host: this});\n    // clang-format on\n  }\n}\n"]}