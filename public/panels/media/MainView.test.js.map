{"version":3,"file":"MainView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/media/MainView.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAI7B,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,OAAO,EAAC,YAAY,EAAC,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAC3E,OAAO,KAAK,iBAAiB,MAAM,8DAA8D,CAAC;AAElG,OAAO,KAAK,KAAK,MAAM,YAAY,CAAC;AAEpC,MAAM,SAAS,GAAG,WAAsC,CAAC;AAEzD,0BAA0B,CAAC,eAAe,EAAE,GAAG,EAAE;IAC/C,IAAI,MAAyB,CAAC;IAE9B,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,GAAG,YAAY,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,MAAM,YAAY,GAAG,CACjB,KAA8C,EAAE,cAA8D,EAC9G,OAAgB,EAAE,EAAE,CAAC,KAAK,IAAI,EAAE;QAClC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACnF,MAAM,aAAa,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,yBAAyB,EAAE,CAAC;QACrE,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC,OAAO,EAAE,CAAC;QACzE,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC5D,QAAQ,CAAC,UAAU,EAAE,CAAC;QACtB,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7B,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACxD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACrB,KAAK,CAAC,wBAAwB,iEAA0C,CAAC,SAAS,CAAC,CAAC,CAAC;QACrF,MAAM,KAAK,GAAG,CAAC,EAAC,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC,CAAC;QACnF,MAAM,IAAI,GAAG,EAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC;QACrG,KAAK,CAAC,wBAAwB,CAC1B,KAAK,EAAE,GAAG,CAAC,IAAI,CAA+F,CAAC,CAAC;QACpH,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjD,MAAM,iBAAiB,CAAC,IAAI,EAAE,CAAC;QAC/B,QAAQ,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC,CAAC;IAEF,EAAE,CAAC,wCAAwC,EACxC,YAAY,oFAAoD,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;IACxF,EAAE,CAAC,oDAAoD,EACpD,YAAY,oFAAoD,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;IACzF,EAAE,CAAC,mCAAmC,EAAE,YAAY,wEAA8C,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;IACpH,EAAE,CAAC,+CAA+C,EAC/C,YAAY,wEAA8C,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;IAChF,EAAE,CAAC,sCAAsC,EACtC,YAAY,8EAAiD,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;IACpF,EAAE,CAAC,kDAAkD,EAClD,YAAY,8EAAiD,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;IACrF,EAAE,CAAC,mCAAmC,EAAE,YAAY,0EAA+C,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;IACrH,EAAE,CAAC,+CAA+C,EAC/C,YAAY,0EAA+C,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as RenderCoordinator from '../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as Media from './media.js';\n\nconst PLAYER_ID = 'PLAYER_ID' as Protocol.Media.PlayerId;\n\ndescribeWithMockConnection('MediaMainView', () => {\n  let target: SDK.Target.Target;\n\n  beforeEach(() => {\n    target = createTarget();\n  });\n\n  const testUiUpdate = <T extends keyof Media.MediaModel.EventTypes>(\n      event: Platform.TypeScriptUtilities.NoUnion<T>, expectedMethod: keyof Media.MainView.PlayerDataDownloadManager,\n      inScope: boolean) => async () => {\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n    const downloadStore = new Media.MainView.PlayerDataDownloadManager();\n    const expectedCall = sinon.stub(downloadStore, expectedMethod).returns();\n    const mainView = new Media.MainView.MainView(downloadStore);\n    mainView.markAsRoot();\n    mainView.show(document.body);\n    const model = target.model(Media.MediaModel.MediaModel);\n    assert.exists(model);\n    model.dispatchEventToListeners(Media.MediaModel.Events.PLAYERS_CREATED, [PLAYER_ID]);\n    const field = [{name: 'kResolution', value: '{}', data: {}, stack: [], cause: []}];\n    const data = {playerId: PLAYER_ID, properties: field, events: field, messages: field, errors: field};\n    model.dispatchEventToListeners(\n        event, ...[data] as unknown as Common.EventTarget.EventPayloadToRestParameters<Media.MediaModel.EventTypes, T>);\n    await new Promise(resolve => setTimeout(resolve, 0));\n    assert.strictEqual(expectedCall.called, inScope);\n    await RenderCoordinator.done();\n    mainView.detach();\n  };\n\n  it('reacts to properties on in scope event',\n     testUiUpdate(Media.MediaModel.Events.PLAYER_PROPERTIES_CHANGED, 'onProperty', true));\n  it('does not react to properties on out of scope event',\n     testUiUpdate(Media.MediaModel.Events.PLAYER_PROPERTIES_CHANGED, 'onProperty', false));\n  it('reacts to event on in scope event', testUiUpdate(Media.MediaModel.Events.PLAYER_EVENTS_ADDED, 'onEvent', true));\n  it('does not react to event on out of scope event',\n     testUiUpdate(Media.MediaModel.Events.PLAYER_EVENTS_ADDED, 'onEvent', false));\n  it('reacts to messages on in scope event',\n     testUiUpdate(Media.MediaModel.Events.PLAYER_MESSAGES_LOGGED, 'onMessage', true));\n  it('does not react to messages on out of scope event',\n     testUiUpdate(Media.MediaModel.Events.PLAYER_MESSAGES_LOGGED, 'onMessage', false));\n  it('reacts to error on in scope event', testUiUpdate(Media.MediaModel.Events.PLAYER_ERRORS_RAISED, 'onError', true));\n  it('does not react to error on out of scope event',\n     testUiUpdate(Media.MediaModel.Events.PLAYER_ERRORS_RAISED, 'onError', false));\n});\n"]}