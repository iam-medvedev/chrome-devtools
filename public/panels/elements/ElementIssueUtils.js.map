{"version":3,"file":"ElementIssueUtils.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ElementIssueUtils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\n\nconst UIStrings = {\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formLabelForNameError: 'Incorrect use of <label for=FORM_ELEMENT>',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formDuplicateIdForInputError: 'Duplicate form field id in the same form',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formInputWithNoLabelError: 'Form field without valid aria-labelledby attribute or associated label',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formAutocompleteAttributeEmptyError: 'Incorrect use of autocomplete attribute',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formEmptyIdAndNameAttributesForInputError: 'A form field element should have an id or name attribute',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formAriaLabelledByToNonExistingId: 'An aria-labelledby attribute doesn\\'t match any element id',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formInputAssignedAutocompleteValueToIdOrNameAttributeError: 'An element doesn\\'t have an autocomplete attribute',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formLabelHasNeitherForNorNestedInput: 'No label associated with a form field',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formLabelForMatchesNonExistingIdError: 'Incorrect use of <label for=FORM_ELEMENT>',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formInputHasWrongButWellIntendedAutocompleteValueError: 'Non-standard autocomplete attribute value',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  disallowedSelectChild: 'Invalid element or text node within <select>',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  disallowedOptGroupChild: 'Invalid element or text node within <optgroup>',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  nonPhrasingContentOptionChild: 'Non-phrasing content used within an <option> element',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  interactiveContentOptionChild: 'Interactive element inside of an <option> element',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  interactiveContentLegendChild: 'Interactive element inside of a <legend> element',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementIssueUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface ElementIssueDetails {\n  tooltip: string;\n  nodeId?: Protocol.DOM.BackendNodeId;\n  attribute?: string;\n}\n\nexport function getElementIssueDetails(issue: IssuesManager.Issue.Issue): ElementIssueDetails|undefined {\n  if (issue instanceof IssuesManager.GenericIssue.GenericIssue) {\n    const issueDetails = issue.details();\n    return {\n      tooltip: getTooltipFromGenericIssue(issueDetails.errorType),\n      nodeId: issueDetails.violatingNodeId,\n      attribute: issueDetails.violatingNodeAttribute,\n    };\n  }\n  if (issue instanceof IssuesManager.SelectElementAccessibilityIssue.SelectElementAccessibilityIssue) {\n    const issueDetails = issue.details();\n    return {\n      tooltip: getTooltipFromSelectElementAccessibilityIssue(issueDetails.selectElementAccessibilityIssueReason),\n      nodeId: issueDetails.nodeId,\n    };\n  }\n\n  return undefined;\n}\n\nfunction getTooltipFromGenericIssue(errorType: Protocol.Audits.GenericIssueErrorType): string {\n  switch (errorType) {\n    case Protocol.Audits.GenericIssueErrorType.FormLabelForNameError:\n      return i18nString(UIStrings.formLabelForNameError);\n    case Protocol.Audits.GenericIssueErrorType.FormDuplicateIdForInputError:\n      return i18nString(UIStrings.formDuplicateIdForInputError);\n    case Protocol.Audits.GenericIssueErrorType.FormInputWithNoLabelError:\n      return i18nString(UIStrings.formInputWithNoLabelError);\n    case Protocol.Audits.GenericIssueErrorType.FormAutocompleteAttributeEmptyError:\n      return i18nString(UIStrings.formAutocompleteAttributeEmptyError);\n    case Protocol.Audits.GenericIssueErrorType.FormEmptyIdAndNameAttributesForInputError:\n      return i18nString(UIStrings.formEmptyIdAndNameAttributesForInputError);\n    case Protocol.Audits.GenericIssueErrorType.FormAriaLabelledByToNonExistingId:\n      return i18nString(UIStrings.formAriaLabelledByToNonExistingId);\n    case Protocol.Audits.GenericIssueErrorType.FormInputAssignedAutocompleteValueToIdOrNameAttributeError:\n      return i18nString(UIStrings.formInputAssignedAutocompleteValueToIdOrNameAttributeError);\n    case Protocol.Audits.GenericIssueErrorType.FormLabelHasNeitherForNorNestedInput:\n      return i18nString(UIStrings.formLabelHasNeitherForNorNestedInput);\n    case Protocol.Audits.GenericIssueErrorType.FormLabelForMatchesNonExistingIdError:\n      return i18nString(UIStrings.formLabelForMatchesNonExistingIdError);\n    case Protocol.Audits.GenericIssueErrorType.FormInputHasWrongButWellIntendedAutocompleteValueError:\n      return i18nString(UIStrings.formInputHasWrongButWellIntendedAutocompleteValueError);\n    default:\n      return '';\n  }\n}\n\nfunction getTooltipFromSelectElementAccessibilityIssue(reason: Protocol.Audits.SelectElementAccessibilityIssueReason):\n    string {\n  switch (reason) {\n    case Protocol.Audits.SelectElementAccessibilityIssueReason.DisallowedSelectChild:\n      return i18nString(UIStrings.disallowedSelectChild);\n    case Protocol.Audits.SelectElementAccessibilityIssueReason.DisallowedOptGroupChild:\n      return i18nString(UIStrings.disallowedOptGroupChild);\n    case Protocol.Audits.SelectElementAccessibilityIssueReason.NonPhrasingContentOptionChild:\n      return i18nString(UIStrings.nonPhrasingContentOptionChild);\n    case Protocol.Audits.SelectElementAccessibilityIssueReason.InteractiveContentOptionChild:\n      return i18nString(UIStrings.interactiveContentOptionChild);\n    case Protocol.Audits.SelectElementAccessibilityIssueReason.InteractiveContentLegendChild:\n      return i18nString(UIStrings.interactiveContentLegendChild);\n    default:\n      return '';\n  }\n}\n"]}