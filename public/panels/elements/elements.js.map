{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/elements/InspectElementModeController.ts", "../../../../../../front_end/panels/elements/ElementsPanel.ts", "../../../../../../front_end/panels/elements/AccessibilityTreeView.ts", "../../../../../../front_end/panels/elements/AccessibilityTreeUtils.ts", "accessibilityTreeView.css.js", "../../../../../../front_end/panels/elements/ColorSwatchPopoverIcon.ts", "../../../../../../front_end/panels/elements/ComputedStyleModel.ts", "../../../../../../front_end/panels/elements/ComputedStyleWidget.ts", "computedStyleSidebarPane.css.js", "../../../../../../front_end/panels/elements/ImagePreviewPopover.ts", "../../../../../../front_end/panels/elements/PlatformFontsWidget.ts", "platformFontsWidget.css.js", "../../../../../../front_end/panels/elements/PropertyNameCategories.ts", "../../../../../../front_end/panels/elements/PropertyRenderer.ts", "../../../../../../front_end/panels/elements/StylesSidebarPane.ts", "../../../../../../front_end/panels/elements/ElementsSidebarPane.ts", "../../../../../../front_end/panels/elements/LayersWidget.ts", "layersWidget.css.js", "../../../../../../front_end/panels/elements/StyleEditorWidget.ts", "../../../../../../front_end/panels/elements/StylePropertyTreeElement.ts", "../../../../../../front_end/panels/elements/CSSRuleValidator.ts", "../../../../../../front_end/panels/elements/CSSRuleValidatorHelper.ts", "../../../../../../front_end/panels/elements/CSSValueTraceView.ts", "cssValueTraceView.css.js", "stylePropertiesTreeOutline.css.js", "../../../../../../front_end/panels/elements/StylePropertyUtils.ts", "../../../../../../front_end/panels/elements/StylePropertiesSection.ts", "../../../../../../front_end/panels/elements/DOMLinkifier.ts", "domLinkifier.css.js", "../../../../../../front_end/panels/elements/StylePropertyHighlighter.ts", "stylesSidebarPane.css.js", "../../../../../../front_end/panels/elements/WebCustomData.ts", "elementsPanel.css.js", "../../../../../../front_end/panels/elements/ElementsTreeOutline.ts", "../../../../../../front_end/panels/elements/ElementIssueUtils.ts", "../../../../../../front_end/panels/elements/ElementsTreeElement.ts", "../../../../../../front_end/panels/elements/DOMPath.ts", "../../../../../../front_end/panels/elements/MarkerDecorator.ts", "elementsTreeOutline.css.js", "../../../../../../front_end/panels/elements/ShortcutTreeElement.ts", "../../../../../../front_end/panels/elements/TopLayerContainer.ts", "../../../../../../front_end/panels/elements/LayoutPane.ts", "layoutPane.css.js", "../../../../../../front_end/panels/elements/MetricsSidebarPane.ts", "metricsSidebarPane.css.js", "../../../../../../front_end/panels/elements/EventListenersWidget.ts", "../../../../../../front_end/panels/elements/PropertiesWidget.ts", "propertiesWidget.css.js", "../../../../../../front_end/panels/elements/NodeStackTraceWidget.ts", "nodeStackTraceWidget.css.js", "../../../../../../front_end/panels/elements/ClassesPaneWidget.ts", "classesPaneWidget.css.js", "../../../../../../front_end/panels/elements/ElementStatePaneWidget.ts", "elementStatePaneWidget.css.js", "../../../../../../front_end/panels/elements/ElementsTreeOutlineRenderer.ts"],
  "sourcesContent": ["// Copyright 2013 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ElementsPanel} from './ElementsPanel.js';\n\nlet inspectElementModeController: InspectElementModeController;\n\nexport class InspectElementModeController implements SDK.TargetManager.SDKModelObserver<SDK.OverlayModel.OverlayModel> {\n  private readonly toggleSearchAction: UI.ActionRegistration.Action;\n  private mode: Protocol.Overlay.InspectMode;\n  private readonly showDetailedInspectTooltipSetting: Common.Settings.Setting<boolean>;\n\n  constructor() {\n    this.toggleSearchAction = UI.ActionRegistry.ActionRegistry.instance().getAction('elements.toggle-element-search');\n    this.mode = Protocol.Overlay.InspectMode.None;\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.SUSPEND_STATE_CHANGED, this.suspendStateChanged, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.OverlayModel.OverlayModel, SDK.OverlayModel.Events.EXITED_INSPECT_MODE,\n        () => this.setMode(Protocol.Overlay.InspectMode.None), undefined, {scoped: true});\n    SDK.OverlayModel.OverlayModel.setInspectNodeHandler(this.inspectNode.bind(this));\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.OverlayModel.OverlayModel, this, {scoped: true});\n\n    this.showDetailedInspectTooltipSetting =\n        Common.Settings.Settings.instance().moduleSetting('show-detailed-inspect-tooltip');\n    this.showDetailedInspectTooltipSetting.addChangeListener(this.showDetailedInspectTooltipChanged.bind(this));\n\n    document.addEventListener('keydown', event => {\n      if (event.keyCode !== UI.KeyboardShortcut.Keys.Esc.code) {\n        return;\n      }\n      if (!this.isInInspectElementMode()) {\n        return;\n      }\n      this.setMode(Protocol.Overlay.InspectMode.None);\n      event.consume(true);\n      void VisualLogging.logKeyDown(null, event, 'cancel-inspect-mode');\n    }, true);\n  }\n\n  static instance({forceNew}: {\n    forceNew: boolean,\n  } = {forceNew: false}): InspectElementModeController {\n    if (!inspectElementModeController || forceNew) {\n      inspectElementModeController = new InspectElementModeController();\n    }\n\n    return inspectElementModeController;\n  }\n\n  modelAdded(overlayModel: SDK.OverlayModel.OverlayModel): void {\n    // When DevTools are opening in the inspect element mode, the first target comes in\n    // much later than the InspectorFrontendAPI.enterInspectElementMode event.\n    if (this.mode === Protocol.Overlay.InspectMode.None) {\n      return;\n    }\n    void overlayModel.setInspectMode(this.mode, this.showDetailedInspectTooltipSetting.get());\n  }\n\n  modelRemoved(_overlayModel: SDK.OverlayModel.OverlayModel): void {\n  }\n\n  private isInInspectElementMode(): boolean {\n    return this.mode !== Protocol.Overlay.InspectMode.None;\n  }\n\n  toggleInspectMode(): void {\n    let mode;\n    if (this.isInInspectElementMode()) {\n      mode = Protocol.Overlay.InspectMode.None;\n    } else {\n      mode = Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom').get() ?\n          Protocol.Overlay.InspectMode.SearchForUAShadowDOM :\n          Protocol.Overlay.InspectMode.SearchForNode;\n    }\n    this.setMode(mode);\n  }\n\n  captureScreenshotMode(): void {\n    this.setMode(Protocol.Overlay.InspectMode.CaptureAreaScreenshot);\n  }\n\n  private setMode(mode: Protocol.Overlay.InspectMode): void {\n    if (SDK.TargetManager.TargetManager.instance().allTargetsSuspended()) {\n      return;\n    }\n    this.mode = mode;\n    for (const overlayModel of SDK.TargetManager.TargetManager.instance().models(\n             SDK.OverlayModel.OverlayModel, {scoped: true})) {\n      void overlayModel.setInspectMode(mode, this.showDetailedInspectTooltipSetting.get());\n    }\n    this.toggleSearchAction.setToggled(this.isInInspectElementMode());\n  }\n\n  private suspendStateChanged(): void {\n    if (!SDK.TargetManager.TargetManager.instance().allTargetsSuspended()) {\n      return;\n    }\n\n    this.mode = Protocol.Overlay.InspectMode.None;\n    this.toggleSearchAction.setToggled(false);\n  }\n\n  private inspectNode(node: SDK.DOMModel.DOMNode): Promise<void> {\n    const returnToPanel = UI.Context.Context.instance().flavor(Common.ReturnToPanel.ReturnToPanelFlavor);\n    UI.Context.Context.instance().setFlavor(Common.ReturnToPanel.ReturnToPanelFlavor, null);\n\n    if (returnToPanel) {\n      return ElementsPanel.instance()\n          .revealAndSelectNode(node, {showPanel: false, highlightInOverlay: false})\n          .then(() => {\n            void UI.ViewManager.ViewManager.instance().showView(returnToPanel.viewId, false, false);\n          });\n    }\n    return ElementsPanel.instance().revealAndSelectNode(\n        node, {showPanel: true, focusNode: true, highlightInOverlay: false});\n  }\n\n  private showDetailedInspectTooltipChanged(): void {\n    this.setMode(this.mode);\n  }\n}\n\nexport class ToggleSearchActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    if (Root.Runtime.Runtime.queryParam('isSharedWorker')) {\n      return false;\n    }\n\n    inspectElementModeController = InspectElementModeController.instance();\n    if (!inspectElementModeController) {\n      return false;\n    }\n    if (actionId === 'elements.toggle-element-search') {\n      inspectElementModeController.toggleInspectMode();\n    } else if (actionId === 'elements.capture-area-screenshot') {\n      inspectElementModeController.captureScreenshotMode();\n    }\n    return true;\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Extensions from '../../models/extensions/extensions.js';\nimport type * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as TreeOutline from '../../ui/components/tree_outline/tree_outline.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport type {AXTreeNodeData} from './AccessibilityTreeUtils.js';\nimport {AccessibilityTreeView} from './AccessibilityTreeView.js';\nimport {ColorSwatchPopoverIcon} from './ColorSwatchPopoverIcon.js';\nimport * as ElementsComponents from './components/components.js';\nimport {ComputedStyleModel} from './ComputedStyleModel.js';\nimport {ComputedStyleWidget} from './ComputedStyleWidget.js';\nimport elementsPanelStyles from './elementsPanel.css.js';\nimport {DOMTreeWidget, type ElementsTreeOutline} from './ElementsTreeOutline.js';\nimport {LayoutPane} from './LayoutPane.js';\nimport type {MarkerDecorator} from './MarkerDecorator.js';\nimport {MetricsSidebarPane} from './MetricsSidebarPane.js';\nimport {\n  Events as StylesSidebarPaneEvents,\n  StylesSidebarPane,\n  type StylesUpdateCompletedEvent,\n} from './StylesSidebarPane.js';\n\nconst UIStrings = {\n  /**\n   * @description Placeholder text for the search box the Elements Panel. Selector refers to CSS\n   * selectors.\n   */\n  findByStringSelectorOrXpath: 'Find by string, selector, or `XPath`',\n  /**\n   * @description Button text for a button that takes the user to the Accessibility Tree View from the\n   * DOM tree view, in the Elements panel.\n   */\n  switchToAccessibilityTreeView: 'Switch to Accessibility Tree view',\n  /**\n   * @description Button text for a button that takes the user to the DOM tree view from the\n   * Accessibility Tree View, in the Elements panel.\n   */\n  switchToDomTreeView: 'Switch to DOM Tree view',\n  /**\n   * @description Tooltip for the the Computed Styles sidebar toggle in the Styles pane. Command to\n   * open/show the sidebar.\n   */\n  showComputedStylesSidebar: 'Show Computed Styles sidebar',\n  /**\n   * @description Tooltip for the the Computed Styles sidebar toggle in the Styles pane. Command to\n   * close/hide the sidebar.\n   */\n  hideComputedStylesSidebar: 'Hide Computed Styles sidebar',\n  /**\n   * @description Screen reader announcement when the computed styles sidebar is shown in the Elements panel.\n   */\n  computedStylesShown: 'Computed Styles sidebar shown',\n  /**\n   * @description Screen reader announcement when the computed styles sidebar is hidden in the Elements panel.\n   */\n  computedStylesHidden: 'Computed Styles sidebar hidden',\n  /**\n   * @description Title of a pane in the Elements panel that shows computed styles for the selected\n   * HTML element. Computed styles are the final, actual styles of the element, including all\n   * implicit and specified styles.\n   */\n  computed: 'Computed',\n  /**\n   * @description Title of a pane in the Elements panel that shows the CSS styles for the selected\n   * HTML element.\n   */\n  styles: 'Styles',\n  /**\n   * @description A context menu item to reveal a node in the DOM tree of the Elements Panel\n   */\n  openInElementsPanel: 'Open in Elements panel',\n  /**\n   * @description Warning/error text displayed when a node cannot be found in the current page.\n   */\n  nodeCannotBeFoundInTheCurrent: 'Node cannot be found in the current page.',\n  /**\n   * @description Console warning when a user tries to reveal a non-node type Remote Object. A remote\n   * object is a JavaScript object that is not stored in DevTools, that DevTools has a connection to.\n   * It should correspond to a local node.\n   */\n  theRemoteObjectCouldNotBe: 'The remote object could not be resolved to a valid node.',\n  /**\n   * @description Console warning when the user tries to reveal a deferred DOM Node that resolves as\n   * null. A deferred DOM node is a node we know about but have not yet fetched from the backend (we\n   * defer the work until later).\n   */\n  theDeferredDomNodeCouldNotBe: 'The deferred `DOM` Node could not be resolved to a valid node.',\n  /**\n   * @description Text in Elements Panel of the Elements panel. Shows the current CSS Pseudo-classes\n   * applicable to the selected HTML element.\n   * @example {::after, ::before} PH1\n   */\n  elementStateS: 'Element state: {PH1}',\n  /**\n   * @description Accessible name for side panel toolbar.\n   */\n  sidePanelToolbar: 'Side panel toolbar',\n  /**\n   * @description Accessible name for side panel contents.\n   */\n  sidePanelContent: 'Side panel content',\n  /**\n   * @description Accessible name for the DOM tree explorer view.\n   */\n  domTreeExplorer: 'DOM tree explorer',\n  /**\n   * @description A context menu item to reveal a submenu with badge settings.\n   */\n  adornerSettings: 'Badge settings',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementsPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * These strings need to match the `SidebarPaneCodes` in UserMetrics.ts. DevTools\n * collects usage metrics for the different sidebar tabs.\n */\nexport const enum SidebarPaneTabId {\n  COMPUTED = 'computed',\n  STYLES = 'styles',\n}\n\ntype RevealAndSelectNodeOptsSelectionAndFocus = {\n  showPanel?: false,\n  focusNode?: never,\n}|{\n  showPanel: true,\n  focusNode?: boolean,\n};\n\ntype RevealAndSelectNodeOpts = RevealAndSelectNodeOptsSelectionAndFocus&{\n  highlightInOverlay?: boolean,\n};\n\nconst createAccessibilityTreeToggleButton = (isActive: boolean): HTMLElement => {\n  const button = new Buttons.Button.Button();\n  const title =\n      isActive ? i18nString(UIStrings.switchToDomTreeView) : i18nString(UIStrings.switchToAccessibilityTreeView);\n  button.data = {\n    active: isActive,\n    variant: Buttons.Button.Variant.TOOLBAR,\n    iconName: 'person',\n    title,\n    jslogContext: 'toggle-accessibility-tree',\n  };\n  button.tabIndex = 0;\n  button.classList.add('axtree-button');\n  if (isActive) {\n    button.classList.add('active');\n  }\n  return button;\n};\n\nlet elementsPanelInstance: ElementsPanel;\n\nexport class ElementsPanel extends UI.Panel.Panel implements UI.SearchableView.Searchable,\n                                                             SDK.TargetManager.SDKModelObserver<SDK.DOMModel.DOMModel>,\n                                                             UI.View.ViewLocationResolver {\n  private splitWidget: UI.SplitWidget.SplitWidget;\n  readonly #searchableView: UI.SearchableView.SearchableView;\n  private mainContainer: HTMLDivElement;\n  private domTreeContainer: HTMLDivElement;\n  private splitMode: SplitMode|null;\n  private readonly accessibilityTreeView: AccessibilityTreeView|undefined;\n  private breadcrumbs: ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs;\n  stylesWidget: StylesSidebarPane;\n  private readonly computedStyleWidget: ComputedStyleWidget;\n  private readonly metricsWidget: MetricsSidebarPane;\n  private searchResults!: Array<{\n    domModel: SDK.DOMModel.DOMModel,\n    index: number,\n    node: ((SDK.DOMModel.DOMNode | undefined)|null),\n  }>|undefined;\n  private currentSearchResultIndex: number;\n  pendingNodeReveal: boolean;\n  private readonly adornerManager: ElementsComponents.AdornerManager.AdornerManager;\n  private readonly adornersByName: Map<string, Set<Adorners.Adorner.Adorner>>;\n  accessibilityTreeButton?: HTMLElement;\n  domTreeButton?: HTMLElement;\n  private selectedNodeOnReset?: SDK.DOMModel.DOMNode;\n  private hasNonDefaultSelectedNode?: boolean;\n  private searchConfig?: UI.SearchableView.SearchConfig;\n  private omitDefaultSelection?: boolean;\n  private notFirstInspectElement?: boolean;\n  sidebarPaneView?: UI.View.TabbedViewLocation;\n  private stylesViewToReveal?: UI.View.SimpleView;\n  private nodeInsertedTaskRunner = {\n    queue: Promise.resolve(),\n    run(task: () => Promise<void>):\n        void {\n          this.queue = this.queue.then(task);\n        },\n  };\n\n  private cssStyleTrackerByCSSModel: Map<SDK.CSSModel.CSSModel, SDK.CSSModel.CSSPropertyTracker>;\n  #domTreeWidget: DOMTreeWidget;\n\n  getTreeOutlineForTesting(): ElementsTreeOutline|undefined {\n    return this.#domTreeWidget.getTreeOutlineForTesting();\n  }\n\n  constructor() {\n    super('elements');\n    this.registerRequiredCSS(elementsPanelStyles);\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(true, true, 'elements-panel-split-view-state', 325, 325);\n    this.splitWidget.addEventListener(\n        UI.SplitWidget.Events.SIDEBAR_SIZE_CHANGED, this.updateTreeOutlineVisibleWidth.bind(this));\n    this.splitWidget.show(this.element);\n\n    this.#searchableView = new UI.SearchableView.SearchableView(this, null);\n    this.#searchableView.setMinimalSearchQuerySize(0);\n    this.#searchableView.setMinimumSize(25, 28);\n    this.#searchableView.setPlaceholder(i18nString(UIStrings.findByStringSelectorOrXpath));\n    const stackElement = this.#searchableView.element;\n\n    this.mainContainer = document.createElement('div');\n    this.domTreeContainer = document.createElement('div');\n    const crumbsContainer = document.createElement('div');\n    if (Root.Runtime.experiments.isEnabled('full-accessibility-tree')) {\n      this.initializeFullAccessibilityTreeView();\n    }\n    this.mainContainer.appendChild(this.domTreeContainer);\n    stackElement.appendChild(this.mainContainer);\n    stackElement.appendChild(crumbsContainer);\n\n    UI.ARIAUtils.markAsMain(this.domTreeContainer);\n    UI.ARIAUtils.setLabel(this.domTreeContainer, i18nString(UIStrings.domTreeExplorer));\n\n    this.splitWidget.setMainWidget(this.#searchableView);\n    this.splitMode = null;\n\n    this.mainContainer.id = 'main-content';\n    this.domTreeContainer.id = 'elements-content';\n    this.domTreeContainer.tabIndex = -1;\n    // FIXME: crbug.com/425984\n    if (Common.Settings.Settings.instance().moduleSetting('dom-word-wrap').get()) {\n      this.domTreeContainer.classList.add('elements-wrap');\n    }\n    Common.Settings.Settings.instance()\n        .moduleSetting('dom-word-wrap')\n        .addChangeListener(this.domWordWrapSettingChanged.bind(this));\n\n    crumbsContainer.id = 'elements-crumbs';\n    if (this.domTreeButton) {\n      this.accessibilityTreeView =\n          new AccessibilityTreeView(this.domTreeButton, new TreeOutline.TreeOutline.TreeOutline<AXTreeNodeData>());\n    }\n    this.breadcrumbs = new ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs();\n    this.breadcrumbs.addEventListener('breadcrumbsnodeselected', event => {\n      this.crumbNodeSelected(event);\n    });\n\n    crumbsContainer.appendChild(this.breadcrumbs);\n\n    const computedStyleModel = new ComputedStyleModel();\n    this.stylesWidget = new StylesSidebarPane(computedStyleModel);\n    this.computedStyleWidget = new ComputedStyleWidget(computedStyleModel);\n    this.metricsWidget = new MetricsSidebarPane(computedStyleModel);\n\n    Common.Settings.Settings.instance()\n        .moduleSetting('sidebar-position')\n        .addChangeListener(this.updateSidebarPosition.bind(this));\n    this.updateSidebarPosition();\n\n    this.cssStyleTrackerByCSSModel = new Map();\n    this.currentSearchResultIndex = -1;  // -1 represents the initial invalid state\n\n    this.pendingNodeReveal = false;\n\n    this.adornerManager = new ElementsComponents.AdornerManager.AdornerManager(\n        Common.Settings.Settings.instance().moduleSetting('adorner-settings'));\n    this.adornersByName = new Map();\n\n    this.#domTreeWidget = new DOMTreeWidget();\n    this.#domTreeWidget.omitRootDOMNode = true;\n    this.#domTreeWidget.selectEnabled = true;\n    this.#domTreeWidget.onSelectedNodeChanged = this.selectedNodeChanged.bind(this);\n    this.#domTreeWidget.onElementsTreeUpdated = this.updateBreadcrumbIfNeeded.bind(this);\n    this.#domTreeWidget.onDocumentUpdated = this.documentUpdated.bind(this);\n    this.#domTreeWidget.setWordWrap(Common.Settings.Settings.instance().moduleSetting('dom-word-wrap').get());\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.DOMModel.DOMModel, this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.NAME_CHANGED, event => this.targetNameChanged(event.data));\n    Common.Settings.Settings.instance()\n        .moduleSetting('show-ua-shadow-dom')\n        .addChangeListener(this.showUAShadowDOMChanged.bind(this));\n    Extensions.ExtensionServer.ExtensionServer.instance().addEventListener(\n        Extensions.ExtensionServer.Events.SidebarPaneAdded, this.extensionSidebarPaneAdded, this);\n  }\n\n  private initializeFullAccessibilityTreeView(): void {\n    this.accessibilityTreeButton = createAccessibilityTreeToggleButton(false);\n    this.accessibilityTreeButton.addEventListener('click', this.showAccessibilityTree.bind(this));\n\n    this.domTreeButton = createAccessibilityTreeToggleButton(true);\n    this.domTreeButton.addEventListener('click', this.showDOMTree.bind(this));\n\n    this.mainContainer.appendChild(this.accessibilityTreeButton);\n  }\n\n  private showAccessibilityTree(): void {\n    if (this.accessibilityTreeView) {\n      this.splitWidget.setMainWidget(this.accessibilityTreeView);\n    }\n  }\n\n  private showDOMTree(): void {\n    this.splitWidget.setMainWidget(this.#searchableView);\n    const selectedNode = this.selectedDOMNode();\n    if (!selectedNode) {\n      return;\n    }\n    this.#domTreeWidget.selectDOMNodeWithoutReveal(selectedNode);\n  }\n\n  toggleAccessibilityTree(): void {\n    if (!this.domTreeButton) {\n      return;\n    }\n    if (this.splitWidget.mainWidget() === this.accessibilityTreeView) {\n      this.showDOMTree();\n    } else {\n      this.showAccessibilityTree();\n    }\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): ElementsPanel {\n    const {forceNew} = opts;\n    if (!elementsPanelInstance || forceNew) {\n      elementsPanelInstance = new ElementsPanel();\n    }\n\n    return elementsPanelInstance;\n  }\n\n  revealProperty(cssProperty: SDK.CSSProperty.CSSProperty): Promise<void> {\n    if (!this.sidebarPaneView || !this.stylesViewToReveal) {\n      return Promise.resolve();\n    }\n\n    return this.sidebarPaneView.showView(this.stylesViewToReveal).then(() => {\n      this.stylesWidget.revealProperty((cssProperty));\n    });\n  }\n\n  resolveLocation(_locationName: string): UI.View.ViewLocation|null {\n    return this.sidebarPaneView || null;\n  }\n\n  showToolbarPane(widget: UI.Widget.Widget|null, toggle: UI.Toolbar.ToolbarToggle|null): void {\n    // TODO(luoe): remove this function once its providers have an alternative way to reveal their views.\n    this.stylesWidget.showToolbarPane(widget, toggle);\n  }\n\n  modelAdded(domModel: SDK.DOMModel.DOMModel): void {\n    this.setupStyleTracking(domModel.cssModel());\n    this.#domTreeWidget.modelAdded(domModel);\n    // Perform attach if necessary.\n    if (this.isShowing()) {\n      this.wasShown();\n    }\n    if (this.domTreeContainer.hasFocus()) {\n      this.#domTreeWidget.focus();\n    }\n    domModel.addEventListener(SDK.DOMModel.Events.DocumentUpdated, this.documentUpdatedEvent, this);\n    domModel.addEventListener(SDK.DOMModel.Events.NodeInserted, this.handleNodeInserted, this);\n  }\n\n  modelRemoved(domModel: SDK.DOMModel.DOMModel): void {\n    domModel.removeEventListener(SDK.DOMModel.Events.DocumentUpdated, this.documentUpdatedEvent, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.NodeInserted, this.handleNodeInserted, this);\n\n    this.#domTreeWidget.modelRemoved(domModel);\n    if (!domModel.parentModel()) {\n      this.#domTreeWidget.detach();\n    }\n\n    this.removeStyleTracking(domModel.cssModel());\n  }\n\n  private handleNodeInserted(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    // Queue the task for the case when all the view transitions are added\n    // around the same time. Otherwise there is a race condition on\n    // accessing `cssText` of inspector stylesheet causing some rules\n    // to be not added.\n    this.nodeInsertedTaskRunner.run(async () => {\n      const node = event.data;\n      if (!node.isViewTransitionPseudoNode()) {\n        return;\n      }\n\n      const cssModel = node.domModel().cssModel();\n      const styleSheetHeader = await cssModel.requestViaInspectorStylesheet(node.frameId());\n      if (!styleSheetHeader) {\n        return;\n      }\n\n      const cssText = await cssModel.getStyleSheetText(styleSheetHeader.id);\n      // Do not add a rule for the view transition pseudo if there already is a rule for it.\n      if (cssText?.includes(`${node.simpleSelector()} {`)) {\n        return;\n      }\n\n      await cssModel.setStyleSheetText(styleSheetHeader.id, `${cssText}\\n${node.simpleSelector()} {}`, false);\n    });\n  }\n\n  private targetNameChanged(target: SDK.Target.Target): void {\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    if (!domModel) {\n      return;\n    }\n  }\n\n  private updateTreeOutlineVisibleWidth(): void {\n    let width = this.splitWidget.element.offsetWidth;\n    if (this.splitWidget.isVertical()) {\n      width -= this.splitWidget.sidebarSize();\n    }\n    this.#domTreeWidget.visibleWidth = width;\n  }\n\n  override focus(): void {\n    if (this.#domTreeWidget.empty()) {\n      this.domTreeContainer.focus();\n    } else {\n      this.#domTreeWidget.focus();\n    }\n  }\n\n  override searchableView(): UI.SearchableView.SearchableView {\n    return this.#searchableView;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    UI.Context.Context.instance().setFlavor(ElementsPanel, this);\n    this.#domTreeWidget.show(this.domTreeContainer);\n  }\n\n  override willHide(): void {\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    this.#domTreeWidget.detach();\n    super.willHide();\n    UI.Context.Context.instance().setFlavor(ElementsPanel, null);\n  }\n\n  override onResize(): void {\n    this.element.window().requestAnimationFrame(this.updateSidebarPosition.bind(this));  // Do not force layout.\n    this.updateTreeOutlineVisibleWidth();\n  }\n\n  private selectedNodeChanged(\n      event: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode | null, focus: boolean}>): void {\n    let selectedNode = event.data.node;\n\n    // If the selectedNode is a pseudoNode, we want to ensure that it has a valid parentNode\n    if (selectedNode?.pseudoType() && !selectedNode.parentNode) {\n      selectedNode = null;\n    }\n    const {focus} = event.data;\n    if (!selectedNode) {\n      this.#domTreeWidget.selectDOMNode(null);\n    }\n\n    if (selectedNode) {\n      const activeNode = ElementsComponents.Helper.legacyNodeToElementsComponentsNode(selectedNode);\n      const crumbs = [activeNode];\n\n      for (let current: (SDK.DOMModel.DOMNode|null) = selectedNode.parentNode; current; current = current.parentNode) {\n        crumbs.push(ElementsComponents.Helper.legacyNodeToElementsComponentsNode(current));\n      }\n\n      this.breadcrumbs.data = {\n        crumbs,\n        selectedNode: ElementsComponents.Helper.legacyNodeToElementsComponentsNode(selectedNode),\n      };\n\n      if (this.accessibilityTreeView) {\n        void this.accessibilityTreeView.selectedNodeChanged(selectedNode);\n      }\n    } else {\n      this.breadcrumbs.data = {crumbs: [], selectedNode: null};\n    }\n\n    UI.Context.Context.instance().setFlavor(SDK.DOMModel.DOMNode, selectedNode);\n\n    if (!selectedNode) {\n      return;\n    }\n    void selectedNode.setAsInspectedNode();\n    if (focus) {\n      this.selectedNodeOnReset = selectedNode;\n      this.hasNonDefaultSelectedNode = true;\n    }\n\n    const executionContexts = selectedNode.domModel().runtimeModel().executionContexts();\n    const nodeFrameId = selectedNode.frameId();\n    for (const context of executionContexts) {\n      if (context.frameId === nodeFrameId) {\n        UI.Context.Context.instance().setFlavor(SDK.RuntimeModel.ExecutionContext, context);\n        break;\n      }\n    }\n  }\n\n  private documentUpdatedEvent(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMModel>): void {\n    const domModel = event.data;\n    this.documentUpdated(domModel);\n    this.removeStyleTracking(domModel.cssModel());\n    this.setupStyleTracking(domModel.cssModel());\n  }\n\n  private documentUpdated(domModel: SDK.DOMModel.DOMModel): void {\n    this.#searchableView.cancelSearch();\n\n    if (!domModel.existingDocument()) {\n      if (this.isShowing()) {\n        void domModel.requestDocument();\n      }\n      return;\n    }\n\n    this.hasNonDefaultSelectedNode = false;\n\n    if (this.omitDefaultSelection) {\n      return;\n    }\n\n    const savedSelectedNodeOnReset = this.selectedNodeOnReset;\n    void restoreNode.call(this, domModel, this.selectedNodeOnReset || null);\n\n    async function restoreNode(\n        this: ElementsPanel, domModel: SDK.DOMModel.DOMModel, staleNode: SDK.DOMModel.DOMNode|null): Promise<void> {\n      const nodePath = staleNode ? staleNode.path() : null;\n      const restoredNodeId = nodePath ? await domModel.pushNodeByPathToFrontend(nodePath) : null;\n\n      if (savedSelectedNodeOnReset !== this.selectedNodeOnReset) {\n        return;\n      }\n      let node = domModel.nodeForId(restoredNodeId);\n      if (!node) {\n        const inspectedDocument = domModel.existingDocument();\n        node = inspectedDocument ? inspectedDocument.body || inspectedDocument.documentElement : null;\n      }\n      // If `node` is null here, the document hasn't been transmitted from the backend yet\n      // and isn't in a valid state to have a default-selected node. Another document update\n      // should be forthcoming. In the meantime, don't set the default-selected node or notify\n      // the test that it's ready, because it isn't.\n      if (node) {\n        this.setDefaultSelectedNode(node);\n        this.lastSelectedNodeSelectedForTest();\n      }\n    }\n  }\n\n  private lastSelectedNodeSelectedForTest(): void {\n  }\n\n  private setDefaultSelectedNode(node: SDK.DOMModel.DOMNode|null): void {\n    if (!node || this.hasNonDefaultSelectedNode || this.pendingNodeReveal) {\n      return;\n    }\n    this.selectDOMNode(node);\n    this.#domTreeWidget.expand();\n  }\n\n  onSearchClosed(): void {\n    const selectedNode = this.selectedDOMNode();\n    if (!selectedNode) {\n      return;\n    }\n    this.#domTreeWidget.selectDOMNodeWithoutReveal(selectedNode);\n  }\n\n  onSearchCanceled(): void {\n    this.searchConfig = undefined;\n    this.hideSearchHighlights();\n\n    this.#searchableView.updateSearchMatchesCount(0);\n\n    this.currentSearchResultIndex = -1;\n    delete this.searchResults;\n\n    SDK.DOMModel.DOMModel.cancelSearch();\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void {\n    const query = searchConfig.query;\n\n    const whitespaceTrimmedQuery = query.trim();\n    if (!whitespaceTrimmedQuery.length) {\n      return;\n    }\n\n    if (!this.searchConfig || this.searchConfig.query !== query) {\n      this.onSearchCanceled();\n    } else {\n      this.hideSearchHighlights();\n    }\n\n    this.searchConfig = searchConfig;\n\n    const showUAShadowDOM = Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom').get();\n    const domModels = SDK.TargetManager.TargetManager.instance().models(SDK.DOMModel.DOMModel, {scoped: true});\n    const promises = domModels.map(domModel => domModel.performSearch(whitespaceTrimmedQuery, showUAShadowDOM));\n    void Promise.all(promises).then(resultCounts => {\n      this.searchResults = [];\n      for (let i = 0; i < resultCounts.length; ++i) {\n        const resultCount = resultCounts[i];\n        for (let j = 0; j < resultCount; ++j) {\n          this.searchResults.push({domModel: domModels[i], index: j, node: undefined});\n        }\n      }\n      this.#searchableView.updateSearchMatchesCount(this.searchResults.length);\n      if (!this.searchResults.length) {\n        return;\n      }\n      if (this.currentSearchResultIndex >= this.searchResults.length) {\n        this.currentSearchResultIndex = -1;\n      }\n\n      let index: (0|- 1)|number = this.currentSearchResultIndex;\n\n      if (shouldJump) {\n        if (this.currentSearchResultIndex === -1) {\n          index = jumpBackwards ? -1 : 0;\n        } else {\n          index = jumpBackwards ? index - 1 : index + 1;\n        }\n        this.jumpToSearchResult(index);\n      }\n    });\n  }\n\n  private domWordWrapSettingChanged(event: Common.EventTarget.EventTargetEvent<boolean>): void {\n    this.domTreeContainer.classList.toggle('elements-wrap', event.data);\n    this.#domTreeWidget.setWordWrap(event.data);\n  }\n\n  private jumpToSearchResult(index: number): void {\n    if (!this.searchResults) {\n      return;\n    }\n\n    this.currentSearchResultIndex = (index + this.searchResults.length) % this.searchResults.length;\n    this.highlightCurrentSearchResult();\n  }\n\n  jumpToNextSearchResult(): void {\n    if (!this.searchResults || !this.searchConfig) {\n      return;\n    }\n    this.performSearch(this.searchConfig, true);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    if (!this.searchResults || !this.searchConfig) {\n      return;\n    }\n    this.performSearch(this.searchConfig, true, true);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return false;\n  }\n\n  supportsRegexSearch(): boolean {\n    return false;\n  }\n\n  private highlightCurrentSearchResult(): void {\n    const index = this.currentSearchResultIndex;\n    const searchResults = this.searchResults;\n    if (!searchResults) {\n      return;\n    }\n    const searchResult = searchResults[index];\n\n    this.#searchableView.updateCurrentMatchIndex(index);\n    if (searchResult.node === null) {\n      return;\n    }\n\n    if (typeof searchResult.node === 'undefined') {\n      // No data for slot, request it.\n      void searchResult.domModel.searchResult(searchResult.index).then(node => {\n        searchResult.node = node;\n\n        // If any of these properties are undefined or reset to an invalid value,\n        // this means the search/highlight request is outdated.\n        const highlightRequestValid = this.searchConfig && this.searchResults && (this.currentSearchResultIndex !== -1);\n        if (highlightRequestValid) {\n          this.highlightCurrentSearchResult();\n        }\n      });\n      return;\n    }\n\n    void searchResult.node.scrollIntoView();\n    if (searchResult.node) {\n      this.#domTreeWidget.highlightMatch(searchResult.node, this.searchConfig?.query);\n    }\n  }\n\n  private hideSearchHighlights(): void {\n    if (!this.searchResults?.length || this.currentSearchResultIndex === -1) {\n      return;\n    }\n    const searchResult = this.searchResults[this.currentSearchResultIndex];\n    if (!searchResult.node) {\n      return;\n    }\n    this.#domTreeWidget.hideMatchHighlights(searchResult.node);\n  }\n\n  selectedDOMNode(): SDK.DOMModel.DOMNode|null {\n    return this.#domTreeWidget.selectedDOMNode();\n  }\n\n  selectDOMNode(node: SDK.DOMModel.DOMNode, focus?: boolean): void {\n    this.#domTreeWidget.selectDOMNode(node, focus);\n  }\n\n  selectAndShowSidebarTab(tabId: SidebarPaneTabId): void {\n    if (!this.sidebarPaneView) {\n      return;\n    }\n\n    this.sidebarPaneView.tabbedPane().selectTab(tabId);\n\n    if (!this.isShowing()) {\n      void UI.ViewManager.ViewManager.instance().showView('elements');\n    }\n  }\n\n  private updateBreadcrumbIfNeeded(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode[]>): void {\n    const nodes = event.data;\n    /* If we don't have a selected node then we can tell the breadcrumbs that & bail. */\n    const selectedNode = this.selectedDOMNode();\n    if (!selectedNode) {\n      this.breadcrumbs.data = {\n        crumbs: [],\n        selectedNode: null,\n      };\n      return;\n    }\n\n    /* This function gets called whenever the tree outline is updated\n     * and contains any nodes that have changed.\n     * What we need to do is construct the new set of breadcrumb nodes, combining the Nodes\n     * that we had before with the new nodes, and pass them into the breadcrumbs component.\n     */\n\n    // Get the current set of active crumbs\n    const activeNode = ElementsComponents.Helper.legacyNodeToElementsComponentsNode(selectedNode);\n    const existingCrumbs = [activeNode];\n    for (let current: (SDK.DOMModel.DOMNode|null) = selectedNode.parentNode; current; current = current.parentNode) {\n      existingCrumbs.push(ElementsComponents.Helper.legacyNodeToElementsComponentsNode(current));\n    }\n\n    /* Get the change nodes from the event & convert them to breadcrumb nodes */\n    const newNodes = nodes.map(ElementsComponents.Helper.legacyNodeToElementsComponentsNode);\n    const nodesThatHaveChangedMap = new Map<number, ElementsComponents.Helper.DOMNode>();\n    newNodes.forEach(crumb => nodesThatHaveChangedMap.set(crumb.id, crumb));\n\n    /* Loop over our existing crumbs, and if any have an ID that matches an ID from the new nodes\n     * that we have, use the new node, rather than the one we had, because it's changed.\n     */\n    const newSetOfCrumbs = existingCrumbs.map(crumb => {\n      const replacement = nodesThatHaveChangedMap.get(crumb.id);\n      return replacement || crumb;\n    });\n\n    this.breadcrumbs.data = {\n      crumbs: newSetOfCrumbs,\n      selectedNode: activeNode,\n    };\n  }\n\n  private crumbNodeSelected(event: ElementsComponents.ElementsBreadcrumbs.NodeSelectedEvent): void {\n    this.selectDOMNode(event.legacyDomNode, true);\n  }\n\n  private leaveUserAgentShadowDOM(node: SDK.DOMModel.DOMNode): SDK.DOMModel.DOMNode {\n    let userAgentShadowRoot;\n    while ((userAgentShadowRoot = node.ancestorUserAgentShadowRoot()) && userAgentShadowRoot.parentNode) {\n      node = userAgentShadowRoot.parentNode;\n    }\n    return node;\n  }\n\n  async revealAndSelectNode(nodeToReveal: SDK.DOMModel.DOMNode, opts?: RevealAndSelectNodeOpts): Promise<void> {\n    const {showPanel = true, focusNode = false, highlightInOverlay = true} = opts ?? {};\n    this.omitDefaultSelection = true;\n\n    const node = Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom').get() ?\n        nodeToReveal :\n        this.leaveUserAgentShadowDOM(nodeToReveal);\n    if (highlightInOverlay) {\n      node.highlightForTwoSeconds();\n    }\n\n    if (this.accessibilityTreeView) {\n      void this.accessibilityTreeView.revealAndSelectNode(nodeToReveal);\n    }\n\n    if (showPanel) {\n      await UI.ViewManager.ViewManager.instance().showView('elements', false, !focus);\n    }\n    this.selectDOMNode(node, focusNode);\n    delete this.omitDefaultSelection;\n    if (!this.notFirstInspectElement) {\n      ElementsPanel.firstInspectElementNodeNameForTest = node.nodeName();\n      ElementsPanel.firstInspectElementCompletedForTest();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.inspectElementCompleted();\n    }\n    this.notFirstInspectElement = true;\n  }\n\n  private showUAShadowDOMChanged(): void {\n    this.#domTreeWidget.reload();\n  }\n\n  private setupTextSelectionHack(stylePaneWrapperElement: HTMLElement): void {\n    // We \"extend\" the sidebar area when dragging, in order to keep smooth text\n    // selection. It should be replaced by 'user-select: contain' in the future.\n    const uninstallHackBound = uninstallHack.bind(this);\n\n    // Fallback to cover unforeseen cases where text selection has ended.\n    const uninstallHackOnMousemove = (event: Event): void => {\n      if ((event as MouseEvent).buttons === 0) {\n        uninstallHack.call(this);\n      }\n    };\n\n    stylePaneWrapperElement.addEventListener('mousedown', (event: Event) => {\n      if ((event as MouseEvent).button !== 0) {\n        return;\n      }\n      this.splitWidget.element.classList.add('disable-resizer-for-elements-hack');\n      stylePaneWrapperElement.style.setProperty('height', `${stylePaneWrapperElement.offsetHeight}px`);\n      const largeLength = 1000000;\n      stylePaneWrapperElement.style.setProperty('left', `${- 1 * largeLength}px`);\n      stylePaneWrapperElement.style.setProperty('padding-left', `${largeLength}px`);\n      stylePaneWrapperElement.style.setProperty('width', `calc(100% + ${largeLength}px)`);\n      stylePaneWrapperElement.style.setProperty('position', 'fixed');\n\n      stylePaneWrapperElement.window().addEventListener('blur', uninstallHackBound);\n      stylePaneWrapperElement.window().addEventListener('contextmenu', uninstallHackBound, true);\n      stylePaneWrapperElement.window().addEventListener('dragstart', uninstallHackBound, true);\n      stylePaneWrapperElement.window().addEventListener('mousemove', uninstallHackOnMousemove, true);\n      stylePaneWrapperElement.window().addEventListener('mouseup', uninstallHackBound, true);\n      stylePaneWrapperElement.window().addEventListener('visibilitychange', uninstallHackBound);\n    }, true);\n\n    function uninstallHack(this: ElementsPanel): void {\n      this.splitWidget.element.classList.remove('disable-resizer-for-elements-hack');\n      stylePaneWrapperElement.style.removeProperty('left');\n      stylePaneWrapperElement.style.removeProperty('padding-left');\n      stylePaneWrapperElement.style.removeProperty('width');\n      stylePaneWrapperElement.style.removeProperty('position');\n\n      stylePaneWrapperElement.window().removeEventListener('blur', uninstallHackBound);\n      stylePaneWrapperElement.window().removeEventListener('contextmenu', uninstallHackBound, true);\n      stylePaneWrapperElement.window().removeEventListener('dragstart', uninstallHackBound, true);\n      stylePaneWrapperElement.window().removeEventListener('mousemove', uninstallHackOnMousemove, true);\n      stylePaneWrapperElement.window().removeEventListener('mouseup', uninstallHackBound, true);\n      stylePaneWrapperElement.window().removeEventListener('visibilitychange', uninstallHackBound);\n    }\n  }\n\n  private initializeSidebarPanes(splitMode: SplitMode): void {\n    this.splitWidget.setVertical(splitMode === SplitMode.VERTICAL);\n    this.showToolbarPane(null /* widget */, null /* toggle */);\n\n    const matchedStylePanesWrapper = new UI.Widget.VBox();\n    matchedStylePanesWrapper.element.classList.add('style-panes-wrapper');\n    matchedStylePanesWrapper.element.setAttribute('jslog', `${VisualLogging.pane('styles').track({resize: true})}`);\n    this.stylesWidget.show(matchedStylePanesWrapper.element);\n    this.setupTextSelectionHack(matchedStylePanesWrapper.element);\n\n    const computedStylePanesWrapper = new UI.Widget.VBox();\n    computedStylePanesWrapper.element.classList.add('style-panes-wrapper');\n    computedStylePanesWrapper.element.setAttribute('jslog', `${VisualLogging.pane('computed').track({resize: true})}`);\n    this.computedStyleWidget.show(computedStylePanesWrapper.element);\n\n    const stylesSplitWidget = new UI.SplitWidget.SplitWidget(\n        true /* isVertical */, true /* secondIsSidebar */, 'elements.styles.sidebar.width', 100);\n    stylesSplitWidget.setMainWidget(matchedStylePanesWrapper);\n    stylesSplitWidget.hideSidebar();\n    stylesSplitWidget.enableShowModeSaving();\n    stylesSplitWidget.addEventListener(UI.SplitWidget.Events.SHOW_MODE_CHANGED, () => {\n      showMetricsWidgetInStylesPane();\n    });\n    this.stylesWidget.addEventListener(StylesSidebarPaneEvents.INITIAL_UPDATE_COMPLETED, () => {\n      this.stylesWidget.appendToolbarItem(stylesSplitWidget.createShowHideSidebarButton(\n          i18nString(UIStrings.showComputedStylesSidebar), i18nString(UIStrings.hideComputedStylesSidebar),\n          i18nString(UIStrings.computedStylesShown), i18nString(UIStrings.computedStylesHidden), 'computed-styles'));\n    });\n\n    const showMetricsWidgetInComputedPane = (): void => {\n      this.metricsWidget.show(computedStylePanesWrapper.element, this.computedStyleWidget.element);\n      this.metricsWidget.toggleVisibility(true /* visible */);\n      this.stylesWidget.removeEventListener(StylesSidebarPaneEvents.STYLES_UPDATE_COMPLETED, toggleMetricsWidget);\n    };\n\n    const showMetricsWidgetInStylesPane = (): void => {\n      const showMergedComputedPane = stylesSplitWidget.showMode() === UI.SplitWidget.ShowMode.BOTH;\n      if (showMergedComputedPane) {\n        showMetricsWidgetInComputedPane();\n      } else {\n        this.metricsWidget.show(matchedStylePanesWrapper.element);\n        if (!this.stylesWidget.hasMatchedStyles) {\n          this.metricsWidget.toggleVisibility(false /* invisible */);\n        }\n        this.stylesWidget.addEventListener(StylesSidebarPaneEvents.STYLES_UPDATE_COMPLETED, toggleMetricsWidget);\n      }\n    };\n\n    const toggleMetricsWidget = (event: Common.EventTarget.EventTargetEvent<StylesUpdateCompletedEvent>): void => {\n      this.metricsWidget.toggleVisibility(event.data.hasMatchedStyles);\n    };\n\n    const tabSelected = (event: Common.EventTarget.EventTargetEvent<UI.TabbedPane.EventData>): void => {\n      const {tabId} = event.data;\n      if (tabId === SidebarPaneTabId.COMPUTED) {\n        computedStylePanesWrapper.show(computedView.element);\n        showMetricsWidgetInComputedPane();\n      } else if (tabId === SidebarPaneTabId.STYLES) {\n        stylesSplitWidget.setSidebarWidget(computedStylePanesWrapper);\n        showMetricsWidgetInStylesPane();\n      }\n    };\n\n    this.sidebarPaneView = UI.ViewManager.ViewManager.instance().createTabbedLocation(\n        () => UI.ViewManager.ViewManager.instance().showView('elements'), 'styles-pane-sidebar', true, true);\n    const tabbedPane = this.sidebarPaneView.tabbedPane();\n    tabbedPane.headerElement().setAttribute(\n        'jslog',\n        `${VisualLogging.toolbar('sidebar').track({keydown: 'ArrowUp|ArrowLeft|ArrowDown|ArrowRight|Enter|Space'})}`);\n    if (this.splitMode !== SplitMode.VERTICAL) {\n      this.splitWidget.installResizer(tabbedPane.headerElement());\n    }\n\n    const headerElement = tabbedPane.headerElement();\n    UI.ARIAUtils.markAsNavigation(headerElement);\n    UI.ARIAUtils.setLabel(headerElement, i18nString(UIStrings.sidePanelToolbar));\n\n    const contentElement = tabbedPane.tabbedPaneContentElement();\n    UI.ARIAUtils.markAsComplementary(contentElement);\n    UI.ARIAUtils.setLabel(contentElement, i18nString(UIStrings.sidePanelContent));\n\n    const stylesView = new UI.View.SimpleView({\n      title: i18nString(UIStrings.styles),\n      viewId: SidebarPaneTabId.STYLES as Lowercase<string>,\n    });\n    this.sidebarPaneView.appendView(stylesView);\n    stylesView.element.classList.add('flex-auto');\n    stylesSplitWidget.show(stylesView.element);\n\n    const computedView = new UI.View.SimpleView({\n      title: i18nString(UIStrings.computed),\n      viewId: SidebarPaneTabId.COMPUTED as Lowercase<string>,\n    });\n    computedView.element.classList.add('composite', 'fill');\n\n    tabbedPane.addEventListener(UI.TabbedPane.Events.TabSelected, tabSelected, this);\n    this.sidebarPaneView.appendView(computedView);\n    this.stylesViewToReveal = stylesView;\n\n    this.sidebarPaneView.appendApplicableItems('elements-sidebar');\n    const extensionSidebarPanes = Extensions.ExtensionServer.ExtensionServer.instance().sidebarPanes();\n    for (let i = 0; i < extensionSidebarPanes.length; ++i) {\n      this.addExtensionSidebarPane(extensionSidebarPanes[i]);\n    }\n\n    this.splitWidget.setSidebarWidget(this.sidebarPaneView.tabbedPane());\n  }\n\n  private updateSidebarPosition(): void {\n    if (this.sidebarPaneView?.tabbedPane().shouldHideOnDetach()) {\n      return;\n    }  // We can't reparent extension iframes.\n\n    const position = Common.Settings.Settings.instance().moduleSetting('sidebar-position').get();\n    let splitMode = SplitMode.HORIZONTAL;\n    if (position === 'right' || (position === 'auto' && this.splitWidget.element.offsetWidth > 680)) {\n      splitMode = SplitMode.VERTICAL;\n    }\n    if (!this.sidebarPaneView) {\n      this.initializeSidebarPanes(splitMode);\n      return;\n    }\n    if (splitMode === this.splitMode) {\n      return;\n    }\n    this.splitMode = splitMode;\n\n    const tabbedPane = this.sidebarPaneView.tabbedPane();\n    this.splitWidget.uninstallResizer(tabbedPane.headerElement());\n\n    this.splitWidget.setVertical(this.splitMode === SplitMode.VERTICAL);\n    this.showToolbarPane(null /* widget */, null /* toggle */);\n\n    if (this.splitMode !== SplitMode.VERTICAL) {\n      this.splitWidget.installResizer(tabbedPane.headerElement());\n    }\n  }\n\n  private extensionSidebarPaneAdded(\n      event: Common.EventTarget.EventTargetEvent<Extensions.ExtensionPanel.ExtensionSidebarPane>): void {\n    this.addExtensionSidebarPane(event.data);\n  }\n\n  private addExtensionSidebarPane(pane: Extensions.ExtensionPanel.ExtensionSidebarPane): void {\n    if (this.sidebarPaneView && pane.panelName() === this.name) {\n      this.sidebarPaneView.appendView(pane);\n    }\n  }\n\n  getComputedStyleWidget(): ComputedStyleWidget {\n    return this.computedStyleWidget;\n  }\n\n  private setupStyleTracking(cssModel: SDK.CSSModel.CSSModel): void {\n    const cssPropertyTracker = cssModel.createCSSPropertyTracker(TrackedCSSProperties);\n    cssPropertyTracker.start();\n    this.cssStyleTrackerByCSSModel.set(cssModel, cssPropertyTracker);\n    cssPropertyTracker.addEventListener(\n        SDK.CSSModel.CSSPropertyTrackerEvents.TRACKED_CSS_PROPERTIES_UPDATED, this.trackedCSSPropertiesUpdated, this);\n  }\n\n  private removeStyleTracking(cssModel: SDK.CSSModel.CSSModel): void {\n    const cssPropertyTracker = this.cssStyleTrackerByCSSModel.get(cssModel);\n    if (!cssPropertyTracker) {\n      return;\n    }\n\n    cssPropertyTracker.stop();\n    this.cssStyleTrackerByCSSModel.delete(cssModel);\n    cssPropertyTracker.removeEventListener(\n        SDK.CSSModel.CSSPropertyTrackerEvents.TRACKED_CSS_PROPERTIES_UPDATED, this.trackedCSSPropertiesUpdated, this);\n  }\n\n  private trackedCSSPropertiesUpdated({data: domNodes}:\n                                          Common.EventTarget.EventTargetEvent<Array<SDK.DOMModel.DOMNode|null>>): void {\n    for (const domNode of domNodes) {\n      if (!domNode) {\n        continue;\n      }\n      this.#domTreeWidget.updateNodeAdorners(domNode);\n    }\n    LayoutPane.instance().requestUpdate();\n  }\n\n  populateAdornerSettingsContextMenu(contextMenu: UI.ContextMenu.ContextMenu): void {\n    const adornerSubMenu = contextMenu.viewSection().appendSubMenuItem(\n        i18nString(UIStrings.adornerSettings), false, 'show-adorner-settings');\n    const adornerSettings = this.adornerManager.getSettings();\n    for (const [adorner, isEnabled] of adornerSettings) {\n      adornerSubMenu.defaultSection().appendCheckboxItem(adorner, () => {\n        const updatedIsEnabled = !isEnabled;\n        const adornersToUpdate = this.adornersByName.get(adorner);\n        if (adornersToUpdate) {\n          for (const adornerToUpdate of adornersToUpdate) {\n            updatedIsEnabled ? adornerToUpdate.show() : adornerToUpdate.hide();\n          }\n        }\n        this.adornerManager.getSettings().set(adorner, updatedIsEnabled);\n        this.adornerManager.updateSettings(adornerSettings);\n      }, {checked: isEnabled, jslogContext: adorner});\n    }\n  }\n\n  isAdornerEnabled(adornerText: string): boolean {\n    return this.adornerManager.isAdornerEnabled(adornerText);\n  }\n\n  registerAdorner(adorner: Adorners.Adorner.Adorner): void {\n    let adornerSet = this.adornersByName.get(adorner.name);\n    if (!adornerSet) {\n      adornerSet = new Set();\n      this.adornersByName.set(adorner.name, adornerSet);\n    }\n    adornerSet.add(adorner);\n    if (!this.isAdornerEnabled(adorner.name)) {\n      adorner.hide();\n    }\n  }\n\n  deregisterAdorner(adorner: Adorners.Adorner.Adorner): void {\n    const adornerSet = this.adornersByName.get(adorner.name);\n    if (!adornerSet) {\n      return;\n    }\n    adornerSet.delete(adorner);\n  }\n\n  toggleHideElement(node: SDK.DOMModel.DOMNode): void {\n    this.#domTreeWidget.toggleHideElement(node);\n  }\n\n  toggleEditAsHTML(node: SDK.DOMModel.DOMNode): void {\n    this.#domTreeWidget.toggleEditAsHTML(node);\n  }\n\n  duplicateNode(node: SDK.DOMModel.DOMNode): void {\n    this.#domTreeWidget.duplicateNode(node);\n  }\n\n  copyStyles(node: SDK.DOMModel.DOMNode): void {\n    this.#domTreeWidget.copyStyles(node);\n  }\n\n  protected static firstInspectElementCompletedForTest = function(): void {};\n  protected static firstInspectElementNodeNameForTest = '';\n}\n\n// @ts-expect-error exported for Tests.js\nglobalThis.Elements = globalThis.Elements || {};\n// @ts-expect-error exported for Tests.js\nglobalThis.Elements.ElementsPanel = ElementsPanel;\n\nconst enum SplitMode {\n  VERTICAL = 'Vertical',\n  HORIZONTAL = 'Horizontal',\n}\n\nconst TrackedCSSProperties = [\n  {\n    name: 'display',\n    value: 'grid',\n  },\n  {\n    name: 'display',\n    value: 'inline-grid',\n  },\n  {\n    name: 'display',\n    value: 'flex',\n  },\n  {\n    name: 'display',\n    value: 'inline-flex',\n  },\n  {\n    name: 'container-type',\n    value: 'inline-size',\n  },\n  {\n    name: 'container-type',\n    value: 'block-size',\n  },\n  {\n    name: 'container-type',\n    value: 'size',\n  },\n];\n\nexport class ContextMenuProvider implements\n    UI.ContextMenu.Provider<SDK.RemoteObject.RemoteObject|SDK.DOMModel.DOMNode|SDK.DOMModel.DeferredDOMNode> {\n  appendApplicableItems(\n      event: Event, contextMenu: UI.ContextMenu.ContextMenu,\n      object: SDK.RemoteObject.RemoteObject|SDK.DOMModel.DOMNode|SDK.DOMModel.DeferredDOMNode): void {\n    if (object instanceof SDK.RemoteObject.RemoteObject && !object.isNode()) {\n      return;\n    }\n    if (ElementsPanel.instance().element.isAncestor(event.target as (Node | null))) {\n      return;\n    }\n    contextMenu.revealSection().appendItem(\n        i18nString(UIStrings.openInElementsPanel), () => Common.Revealer.reveal(object),\n        {jslogContext: 'elements.reveal-node'});\n  }\n}\n\nexport class DOMNodeRevealer implements\n    Common.Revealer.Revealer<SDK.DOMModel.DOMNode|SDK.DOMModel.DeferredDOMNode|SDK.RemoteObject.RemoteObject> {\n  reveal(node: SDK.DOMModel.DOMNode|SDK.DOMModel.DeferredDOMNode|SDK.RemoteObject.RemoteObject, omitFocus?: boolean):\n      Promise<void> {\n    const panel = ElementsPanel.instance();\n    panel.pendingNodeReveal = true;\n\n    return (new Promise<void>(revealPromise)).catch((reason: Error) => {\n      let message: string;\n      if (Platform.UserVisibleError.isUserVisibleError(reason)) {\n        message = reason.message;\n      } else {\n        message = i18nString(UIStrings.nodeCannotBeFoundInTheCurrent);\n      }\n\n      Common.Console.Console.instance().warn(message);\n      // Blink tests expect an exception to be raised and unhandled here to detect that the node\n      // was actually not successfully viewed.\n      throw reason;\n    });\n\n    function revealPromise(\n        resolve: () => void, reject: (arg0: Platform.UserVisibleError.UserVisibleError) => void): void {\n      if (node instanceof SDK.DOMModel.DOMNode) {\n        onNodeResolved((node));\n      } else if (node instanceof SDK.DOMModel.DeferredDOMNode) {\n        (node).resolve(checkDeferredDOMNodeThenReveal);\n      } else {\n        const domModel = node.runtimeModel().target().model(SDK.DOMModel.DOMModel);\n        if (domModel) {\n          void domModel.pushObjectAsNodeToFrontend(node).then(checkRemoteObjectThenReveal);\n        } else {\n          const msg = i18nString(UIStrings.nodeCannotBeFoundInTheCurrent);\n          reject(new Platform.UserVisibleError.UserVisibleError(msg));\n        }\n      }\n\n      function onNodeResolved(resolvedNode: SDK.DOMModel.DOMNode): void {\n        panel.pendingNodeReveal = false;\n\n        // A detached node could still have a parent and ownerDocument\n        // properties, which means stepping up through the hierarchy to ensure\n        // that the root node is the document itself. Any break implies\n        // detachment.\n        let currentNode: SDK.DOMModel.DOMNode = resolvedNode;\n        while (currentNode.parentNode) {\n          currentNode = currentNode.parentNode;\n        }\n        const isDetached = !(currentNode instanceof SDK.DOMModel.DOMDocument);\n\n        const isDocument = node instanceof SDK.DOMModel.DOMDocument;\n        if (!isDocument && isDetached) {\n          const msg = i18nString(UIStrings.nodeCannotBeFoundInTheCurrent);\n          reject(new Platform.UserVisibleError.UserVisibleError(msg));\n          return;\n        }\n\n        if (resolvedNode) {\n          void panel.revealAndSelectNode(resolvedNode, {showPanel: true, focusNode: !omitFocus}).then(resolve);\n          return;\n        }\n        const msg = i18nString(UIStrings.nodeCannotBeFoundInTheCurrent);\n        reject(new Platform.UserVisibleError.UserVisibleError(msg));\n      }\n\n      function checkRemoteObjectThenReveal(resolvedNode: SDK.DOMModel.DOMNode|null): void {\n        if (!resolvedNode) {\n          const msg = i18nString(UIStrings.theRemoteObjectCouldNotBe);\n          reject(new Platform.UserVisibleError.UserVisibleError(msg));\n          return;\n        }\n        onNodeResolved(resolvedNode);\n      }\n\n      function checkDeferredDOMNodeThenReveal(resolvedNode: SDK.DOMModel.DOMNode|null): void {\n        if (!resolvedNode) {\n          const msg = i18nString(UIStrings.theDeferredDomNodeCouldNotBe);\n          reject(new Platform.UserVisibleError.UserVisibleError(msg));\n          return;\n        }\n        onNodeResolved(resolvedNode);\n      }\n    }\n  }\n}\n\nexport class CSSPropertyRevealer implements Common.Revealer.Revealer<SDK.CSSProperty.CSSProperty> {\n  reveal(property: SDK.CSSProperty.CSSProperty): Promise<void> {\n    const panel = ElementsPanel.instance();\n    return panel.revealProperty(property);\n  }\n}\n\nexport class ElementsActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const node = context.flavor(SDK.DOMModel.DOMNode);\n    if (!node) {\n      return true;\n    }\n\n    switch (actionId) {\n      case 'elements.hide-element':\n        ElementsPanel.instance().toggleHideElement(node);\n        return true;\n      case 'elements.edit-as-html':\n        ElementsPanel.instance().toggleEditAsHTML(node);\n        return true;\n      case 'elements.duplicate-element':\n        ElementsPanel.instance().duplicateNode(node);\n        return true;\n      case 'elements.copy-styles':\n        ElementsPanel.instance().copyStyles(node);\n        return true;\n      case 'elements.undo':\n        void SDK.DOMModel.DOMModelUndoStack.instance().undo();\n        ElementsPanel.instance().stylesWidget.forceUpdate();\n        return true;\n      case 'elements.redo':\n        void SDK.DOMModel.DOMModelUndoStack.instance().redo();\n        ElementsPanel.instance().stylesWidget.forceUpdate();\n        return true;\n      case 'elements.toggle-a11y-tree':\n        ElementsPanel.instance().toggleAccessibilityTree();\n        return true;\n      case 'elements.toggle-word-wrap': {\n        const setting = Common.Settings.Settings.instance().moduleSetting<boolean>('dom-word-wrap');\n        setting.set(!setting.get());\n        return true;\n      }\n      case 'elements.show-styles':\n        ElementsPanel.instance().selectAndShowSidebarTab(SidebarPaneTabId.STYLES);\n        return true;\n      case 'elements.show-computed':\n        ElementsPanel.instance().selectAndShowSidebarTab(SidebarPaneTabId.COMPUTED);\n        return true;\n      case 'elements.toggle-eye-dropper': {\n        const colorSwatchPopoverIcon = UI.Context.Context.instance().flavor(ColorSwatchPopoverIcon);\n        if (!colorSwatchPopoverIcon) {\n          return false;\n        }\n\n        void colorSwatchPopoverIcon.toggleEyeDropper();\n      }\n    }\n    return false;\n  }\n}\n\nlet pseudoStateMarkerDecoratorInstance: PseudoStateMarkerDecorator;\nexport class PseudoStateMarkerDecorator implements MarkerDecorator {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): PseudoStateMarkerDecorator {\n    const {forceNew} = opts;\n    if (!pseudoStateMarkerDecoratorInstance || forceNew) {\n      pseudoStateMarkerDecoratorInstance = new PseudoStateMarkerDecorator();\n    }\n\n    return pseudoStateMarkerDecoratorInstance;\n  }\n\n  decorate(node: SDK.DOMModel.DOMNode): {\n    title: string,\n    color: string,\n  }|null {\n    const pseudoState = node.domModel().cssModel().pseudoState(node);\n    if (!pseudoState) {\n      return null;\n    }\n    return {\n      color: '--sys-color-orange-bright',\n      title: i18nString(UIStrings.elementStateS, {PH1: ':' + pseudoState.join(', :')}),\n    };\n  }\n}\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TreeOutline from '../../ui/components/tree_outline/tree_outline.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as AccessibilityTreeUtils from './AccessibilityTreeUtils.js';\nimport accessibilityTreeViewStyles from './accessibilityTreeView.css.js';\nimport {ElementsPanel} from './ElementsPanel.js';\n\nexport class AccessibilityTreeView extends UI.Widget.VBox implements\n    SDK.TargetManager.SDKModelObserver<SDK.AccessibilityModel.AccessibilityModel> {\n  private accessibilityTreeComponent: TreeOutline.TreeOutline.TreeOutline<AccessibilityTreeUtils.AXTreeNodeData>;\n  private readonly toggleButton: HTMLElement;\n  private inspectedDOMNode: SDK.DOMModel.DOMNode|null = null;\n  private root: SDK.AccessibilityModel.AccessibilityNode|null = null;\n\n  constructor(\n      toggleButton: HTMLElement,\n      accessibilityTreeComponent: TreeOutline.TreeOutline.TreeOutline<AccessibilityTreeUtils.AXTreeNodeData>) {\n    super();\n    this.registerRequiredCSS(accessibilityTreeViewStyles);\n    // toggleButton is bound to a click handler on ElementsPanel to switch between the DOM tree\n    // and accessibility tree views.\n    this.toggleButton = toggleButton;\n    this.accessibilityTreeComponent = accessibilityTreeComponent;\n\n    const container = this.contentElement.createChild('div');\n\n    container.classList.add('accessibility-tree-view-container');\n    container.setAttribute('jslog', `${VisualLogging.tree('full-accessibility')}`);\n    container.appendChild(this.toggleButton);\n    container.appendChild(this.accessibilityTreeComponent);\n\n    SDK.TargetManager.TargetManager.instance().observeModels(\n        SDK.AccessibilityModel.AccessibilityModel, this, {scoped: true});\n\n    // The DOM tree and accessibility are kept in sync as much as possible, so\n    // on node selection, update the currently inspected node and reveal in the\n    // DOM tree.\n    this.accessibilityTreeComponent.addEventListener('itemselected', (event: Event) => {\n      const evt = event as TreeOutline.TreeOutline.ItemSelectedEvent<AccessibilityTreeUtils.AXTreeNodeData>;\n      const axNode = evt.data.node.treeNodeData;\n      if (!axNode.isDOMNode()) {\n        return;\n      }\n      const deferredNode = axNode.deferredDOMNode();\n      if (deferredNode) {\n        deferredNode.resolve(domNode => {\n          if (domNode) {\n            this.inspectedDOMNode = domNode;\n            void ElementsPanel.instance().revealAndSelectNode(\n                domNode, {showPanel: true, focusNode: true, highlightInOverlay: true});\n          }\n        });\n      }\n    });\n\n    this.accessibilityTreeComponent.addEventListener('itemmouseover', (event: Event) => {\n      const evt = event as TreeOutline.TreeOutline.ItemMouseOverEvent<AccessibilityTreeUtils.AXTreeNodeData>;\n      evt.data.node.treeNodeData.highlightDOMNode();\n    });\n\n    this.accessibilityTreeComponent.addEventListener('itemmouseout', () => {\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    });\n  }\n\n  override async wasShown(): Promise<void> {\n    super.wasShown();\n    await this.refreshAccessibilityTree();\n    if (this.inspectedDOMNode) {\n      await this.loadSubTreeIntoAccessibilityModel(this.inspectedDOMNode);\n    }\n  }\n\n  async refreshAccessibilityTree(): Promise<void> {\n    if (!this.root) {\n      const frameId = SDK.FrameManager.FrameManager.instance().getOutermostFrame()?.id;\n      if (!frameId) {\n        throw new Error('No top frame');\n      }\n      this.root = await AccessibilityTreeUtils.getRootNode(frameId);\n      if (!this.root) {\n        throw new Error('No root');\n      }\n    }\n    await this.renderTree();\n    await this.accessibilityTreeComponent.expandRecursively(1);\n  }\n\n  async renderTree(): Promise<void> {\n    if (!this.root) {\n      return;\n    }\n    const treeData = await AccessibilityTreeUtils.sdkNodeToAXTreeNodes(this.root);\n    this.accessibilityTreeComponent.data = {\n      defaultRenderer: AccessibilityTreeUtils.accessibilityNodeRenderer,\n      tree: treeData,\n      filter: node => {\n        return node.ignored() || (node.role()?.value === 'generic' && !node.name()?.value) ?\n            TreeOutline.TreeOutline.FilterOption.FLATTEN :\n            TreeOutline.TreeOutline.FilterOption.SHOW;\n      },\n    };\n  }\n\n  // Given a selected DOM node, asks the model to load the missing subtree from the root to the\n  // selected node and then re-renders the tree.\n  async loadSubTreeIntoAccessibilityModel(selectedNode: SDK.DOMModel.DOMNode): Promise<void> {\n    const ancestors = await AccessibilityTreeUtils.getNodeAndAncestorsFromDOMNode(selectedNode);\n    const inspectedAXNode = ancestors.find(node => node.backendDOMNodeId() === selectedNode.backendNodeId());\n    if (!inspectedAXNode) {\n      return;\n    }\n    await this.accessibilityTreeComponent.expandNodeIds(ancestors.map(node => node.getFrameId() + '#' + node.id()));\n    await this.accessibilityTreeComponent.focusNodeId(AccessibilityTreeUtils.getNodeId(inspectedAXNode));\n  }\n\n  // A node was revealed through the elements picker.\n  async revealAndSelectNode(inspectedNode: SDK.DOMModel.DOMNode): Promise<void> {\n    if (inspectedNode === this.inspectedDOMNode) {\n      return;\n    }\n    this.inspectedDOMNode = inspectedNode;\n    // We only want to load nodes into the model when the AccessibilityTree is visible.\n    if (this.isShowing()) {\n      await this.loadSubTreeIntoAccessibilityModel(inspectedNode);\n    }\n  }\n\n  // Selected node in the DOM tree has changed.\n  async selectedNodeChanged(inspectedNode: SDK.DOMModel.DOMNode): Promise<void> {\n    if (this.isShowing() || (inspectedNode === this.inspectedDOMNode)) {\n      return;\n    }\n    if (inspectedNode.ownerDocument && (inspectedNode.nodeName() === 'HTML' || inspectedNode.nodeName() === 'BODY')) {\n      this.inspectedDOMNode = inspectedNode.ownerDocument;\n    } else {\n      this.inspectedDOMNode = inspectedNode;\n    }\n  }\n\n  treeUpdated({data}: Common.EventTarget\n                  .EventTargetEvent<SDK.AccessibilityModel.EventTypes[SDK.AccessibilityModel.Events.TREE_UPDATED]>):\n      void {\n    if (!this.isShowing()) {\n      return;\n    }\n    if (!data.root) {\n      void this.renderTree();\n      return;\n    }\n    const outermostFrameId = SDK.FrameManager.FrameManager.instance().getOutermostFrame()?.id;\n    if (data.root?.getFrameId() !== outermostFrameId) {\n      void this.renderTree();\n      return;\n    }\n    this.root = data.root;\n    void this.accessibilityTreeComponent.collapseAllNodes();\n\n    void this.refreshAccessibilityTree();\n  }\n\n  modelAdded(model: SDK.AccessibilityModel.AccessibilityModel): void {\n    model.addEventListener(SDK.AccessibilityModel.Events.TREE_UPDATED, this.treeUpdated, this);\n  }\n\n  modelRemoved(model: SDK.AccessibilityModel.AccessibilityModel): void {\n    model.removeEventListener(SDK.AccessibilityModel.Events.TREE_UPDATED, this.treeUpdated, this);\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './components/components.js';\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as TreeOutline from '../../ui/components/tree_outline/tree_outline.js';\nimport * as Lit from '../../ui/lit/lit.js';\n\nconst {html} = Lit;\n\nexport type AXTreeNodeData = SDK.AccessibilityModel.AccessibilityNode;\nexport type AXTreeNode = TreeOutline.TreeOutlineUtils.TreeNode<AXTreeNodeData>;\n\nfunction isLeafNode(node: SDK.AccessibilityModel.AccessibilityNode): boolean {\n  return node.numChildren() === 0 && node.role()?.value !== 'Iframe';\n}\n\nfunction getModel(frameId: Protocol.Page.FrameId): SDK.AccessibilityModel.AccessibilityModel {\n  const frame = SDK.FrameManager.FrameManager.instance().getFrame(frameId);\n  const model = frame?.resourceTreeModel().target().model(SDK.AccessibilityModel.AccessibilityModel);\n  if (!model) {\n    throw new Error('Could not instantiate model for frameId');\n  }\n  return model;\n}\n\nexport async function getRootNode(frameId: Protocol.Page.FrameId): Promise<SDK.AccessibilityModel.AccessibilityNode> {\n  const model = getModel(frameId);\n  const root = await model.requestRootNode(frameId);\n  if (!root) {\n    throw new Error('No accessibility root for frame');\n  }\n  return root;\n}\n\nfunction getFrameIdForNodeOrDocument(node: SDK.DOMModel.DOMNode): Protocol.Page.FrameId {\n  let frameId;\n  if (node instanceof SDK.DOMModel.DOMDocument) {\n    frameId = node.body?.frameId();\n  } else {\n    frameId = node.frameId();\n  }\n  if (!frameId) {\n    throw new Error('No frameId for DOM node');\n  }\n  return frameId;\n}\n\nexport async function getNodeAndAncestorsFromDOMNode(domNode: SDK.DOMModel.DOMNode):\n    Promise<SDK.AccessibilityModel.AccessibilityNode[]> {\n  let frameId = getFrameIdForNodeOrDocument(domNode);\n  const model = getModel(frameId);\n  const result = await model.requestAndLoadSubTreeToNode(domNode);\n  if (!result) {\n    throw new Error('Could not retrieve accessibility node for inspected DOM node');\n  }\n\n  const outermostFrameId = SDK.FrameManager.FrameManager.instance().getOutermostFrame()?.id;\n  if (!outermostFrameId) {\n    return result;\n  }\n  while (frameId !== outermostFrameId) {\n    const node = await SDK.FrameManager.FrameManager.instance().getFrame(frameId)?.getOwnerDOMNodeOrDocument();\n    if (!node) {\n      break;\n    }\n    frameId = getFrameIdForNodeOrDocument(node);\n    const model = getModel(frameId);\n    const ancestors = await model.requestAndLoadSubTreeToNode(node);\n    result.push(...ancestors || []);\n  }\n  return result;\n}\n\nasync function getChildren(node: SDK.AccessibilityModel.AccessibilityNode):\n    Promise<SDK.AccessibilityModel.AccessibilityNode[]> {\n  if (node.role()?.value === 'Iframe') {\n    const domNode = await node.deferredDOMNode()?.resolvePromise();\n    if (!domNode) {\n      throw new Error('Could not find corresponding DOMNode');\n    }\n    const frameId = domNode.frameOwnerFrameId();\n    if (!frameId) {\n      throw new Error('No owner frameId on iframe node');\n    }\n    const localRoot = await getRootNode(frameId);\n    return [localRoot];\n  }\n  return await node.accessibilityModel().requestAXChildren(node.id(), node.getFrameId() || undefined);\n}\n\nexport async function sdkNodeToAXTreeNodes(sdkNode: SDK.AccessibilityModel.AccessibilityNode): Promise<AXTreeNode[]> {\n  const treeNodeData = sdkNode;\n  if (isLeafNode(sdkNode)) {\n    return [{\n      treeNodeData,\n      id: getNodeId(sdkNode),\n    }];\n  }\n\n  return [{\n    treeNodeData,\n    children: async () => {\n      const childNodes = await getChildren(sdkNode);\n      const childTreeNodes = await Promise.all(childNodes.map(childNode => sdkNodeToAXTreeNodes(childNode)));\n      return childTreeNodes.flat(1);\n    },\n    id: getNodeId(sdkNode),\n  }];\n}\n\nexport function accessibilityNodeRenderer(node: AXTreeNode): Lit.TemplateResult {\n  const sdkNode = node.treeNodeData;\n  const name = sdkNode.name()?.value || '';\n  const role = sdkNode.role()?.value || '';\n  const properties = sdkNode.properties() || [];\n  const ignored = sdkNode.ignored();\n  const id = getNodeId(sdkNode);\n  return html`<devtools-accessibility-tree-node .data=${{\n    name, role, ignored, properties, id,\n  }\n  }></devtools-accessibility-tree-node>`;\n}\n\nexport function getNodeId(node: SDK.AccessibilityModel.AccessibilityNode): string {\n  return node.getFrameId() + '#' + node.id();\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/**\n * Copyright 2022 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.accessibility-tree-view-container {\n  height: 100%;\n  overflow: auto;\n}\n\n/*# sourceURL=${import.meta.resolve('./accessibilityTreeView.css')} */`;", "// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport type * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as ColorPicker from '../../ui/legacy/components/color_picker/color_picker.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {StylePropertiesSection} from './StylePropertiesSection.js';\nimport type {StylePropertyTreeElement} from './StylePropertyTreeElement.js';\nimport type {StylesSidebarPane} from './StylesSidebarPane.js';\n\nconst UIStrings = {\n  /**\n   * @description Tooltip text for an icon that opens the cubic bezier editor, which is a tool that\n   * allows the user to edit cubic-bezier CSS properties directly.\n   */\n  openCubicBezierEditor: 'Open cubic bezier editor',\n  /**\n   * @description Tooltip text for an icon that opens shadow editor. The shadow editor is a tool\n   * which allows the user to edit CSS shadow properties.\n   */\n  openShadowEditor: 'Open shadow editor',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ColorSwatchPopoverIcon.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface BezierPopoverIconParams {\n  treeElement: StylePropertyTreeElement;\n  swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper;\n  swatch: IconButton.Icon.Icon;\n  bezierText: HTMLElement;\n}\n\nexport class BezierPopoverIcon {\n  private treeElement: StylePropertyTreeElement;\n  private readonly swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper;\n  private readonly swatch: IconButton.Icon.Icon;\n  private readonly bezierText: HTMLElement;\n  private readonly boundBezierChanged: (event: Common.EventTarget.EventTargetEvent<string>) => void;\n  private readonly boundOnScroll: (event: Event) => void;\n  private bezierEditor?: InlineEditor.BezierEditor.BezierEditor;\n  private scrollerElement?: Element;\n  private originalPropertyText?: string|null;\n\n  constructor({\n    treeElement,\n    swatchPopoverHelper,\n    swatch,\n    bezierText,\n  }: BezierPopoverIconParams) {\n    this.treeElement = treeElement;\n    this.swatchPopoverHelper = swatchPopoverHelper;\n    this.swatch = swatch;\n    this.bezierText = bezierText;\n\n    UI.Tooltip.Tooltip.install(this.swatch, i18nString(UIStrings.openCubicBezierEditor));\n    this.swatch.addEventListener('click', this.iconClick.bind(this), false);\n    this.swatch.addEventListener('keydown', this.iconClick.bind(this), false);\n    this.swatch.addEventListener('mousedown', (event: Event) => event.consume(), false);\n\n    this.boundBezierChanged = this.bezierChanged.bind(this);\n    this.boundOnScroll = this.onScroll.bind(this);\n  }\n\n  private iconClick(event: MouseEvent|KeyboardEvent): void {\n    if (event instanceof KeyboardEvent && !Platform.KeyboardUtilities.isEnterOrSpaceKey(event)) {\n      return;\n    }\n    event.consume(true);\n    if (this.swatchPopoverHelper.isShowing()) {\n      this.swatchPopoverHelper.hide(true);\n      return;\n    }\n\n    const model = InlineEditor.AnimationTimingModel.AnimationTimingModel.parse(this.bezierText.innerText) ||\n        InlineEditor.AnimationTimingModel.LINEAR_BEZIER;\n    this.bezierEditor = new InlineEditor.BezierEditor.BezierEditor(model);\n    this.bezierEditor.addEventListener(InlineEditor.BezierEditor.Events.BEZIER_CHANGED, this.boundBezierChanged);\n    this.swatchPopoverHelper.show(this.bezierEditor, this.swatch, this.onPopoverHidden.bind(this));\n    this.scrollerElement = this.swatch.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n    if (this.scrollerElement) {\n      this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    this.originalPropertyText = this.treeElement.property.propertyText;\n    this.treeElement.parentPane().setEditingStyle(true);\n    const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(\n        this.treeElement.property, false /* forName */);\n    if (uiLocation) {\n      void Common.Revealer.reveal(uiLocation, true /* omitFocus */);\n    }\n  }\n\n  private bezierChanged(event: Common.EventTarget.EventTargetEvent<string>): void {\n    this.bezierText.textContent = event.data;\n    void this.treeElement.applyStyleText(this.treeElement.renderedPropertyText(), false);\n  }\n\n  private onScroll(_event: Event): void {\n    this.swatchPopoverHelper.hide(true);\n  }\n\n  private onPopoverHidden(commitEdit: boolean): void {\n    if (this.scrollerElement) {\n      this.scrollerElement.removeEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    if (this.bezierEditor) {\n      this.bezierEditor.removeEventListener(InlineEditor.BezierEditor.Events.BEZIER_CHANGED, this.boundBezierChanged);\n    }\n    this.bezierEditor = undefined;\n\n    const propertyText = commitEdit ? this.treeElement.renderedPropertyText() : this.originalPropertyText || '';\n    void this.treeElement.applyStyleText(propertyText, true);\n    this.treeElement.parentPane().setEditingStyle(false);\n    delete this.originalPropertyText;\n  }\n}\n\nexport const enum ColorSwatchPopoverIconEvents {\n  COLOR_CHANGED = 'colorchanged',\n}\n\nexport interface ColorSwatchPopoverIconEventTypes {\n  [ColorSwatchPopoverIconEvents.COLOR_CHANGED]: Common.Color.Color;\n}\n\nexport class ColorSwatchPopoverIcon extends Common.ObjectWrapper.ObjectWrapper<ColorSwatchPopoverIconEventTypes> {\n  private treeElement: StylePropertyTreeElement;\n  private readonly swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper;\n  private swatch: InlineEditor.ColorSwatch.ColorSwatch;\n  private contrastInfo: ColorPicker.ContrastInfo.ContrastInfo|null;\n  private readonly boundSpectrumChanged: (event: Common.EventTarget.EventTargetEvent<string>) => void;\n  private readonly boundOnScroll: (event: Event) => void;\n  private spectrum?: ColorPicker.Spectrum.Spectrum;\n  private scrollerElement?: Element;\n  private originalPropertyText?: string|null;\n\n  constructor(\n      treeElement: StylePropertyTreeElement, swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper,\n      swatch: InlineEditor.ColorSwatch.ColorSwatch) {\n    super();\n\n    this.treeElement = treeElement;\n    this.swatchPopoverHelper = swatchPopoverHelper;\n    this.swatch = swatch;\n    this.swatch.addEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, this.iconClick.bind(this));\n    this.contrastInfo = null;\n\n    this.boundSpectrumChanged = this.spectrumChanged.bind(this);\n    this.boundOnScroll = this.onScroll.bind(this);\n  }\n\n  private generateCSSVariablesPalette(): ColorPicker.Spectrum.Palette {\n    const matchedStyles = this.treeElement.matchedStyles();\n    const style = this.treeElement.property.ownerStyle;\n    const cssVariables = matchedStyles.availableCSSVariables(style);\n    const colors = [];\n    const colorNames = [];\n    for (const cssVariable of cssVariables) {\n      if (cssVariable === this.treeElement.property.name) {\n        continue;\n      }\n      const value = matchedStyles.computeCSSVariable(style, cssVariable);\n      if (!value) {\n        continue;\n      }\n      const color = Common.Color.parse(value.value);\n      if (!color) {\n        continue;\n      }\n      colors.push(value.value);\n      colorNames.push(cssVariable);\n    }\n    return {title: 'CSS Variables', mutable: false, matchUserFormat: true, colors, colorNames};\n  }\n\n  setContrastInfo(contrastInfo: ColorPicker.ContrastInfo.ContrastInfo): void {\n    this.contrastInfo = contrastInfo;\n  }\n\n  private iconClick(event: Event): void {\n    event.consume(true);\n    this.showPopover();\n  }\n\n  async toggleEyeDropper(): Promise<void> {\n    await this.spectrum?.toggleColorPicker();\n  }\n\n  showPopover(): void {\n    if (this.swatchPopoverHelper.isShowing()) {\n      this.swatchPopoverHelper.hide(true);\n      return;\n    }\n\n    const color = this.swatch.getColor();\n    if (!color) {\n      return;\n    }\n\n    this.spectrum = new ColorPicker.Spectrum.Spectrum(this.contrastInfo);\n    this.spectrum.setColor(color);\n    this.spectrum.addPalette(this.generateCSSVariablesPalette());\n\n    this.spectrum.addEventListener(ColorPicker.Spectrum.Events.SIZE_CHANGED, this.spectrumResized, this);\n    this.spectrum.addEventListener(ColorPicker.Spectrum.Events.COLOR_CHANGED, this.boundSpectrumChanged);\n    this.swatchPopoverHelper.show(this.spectrum, this.swatch, this.onPopoverHidden.bind(this));\n    this.scrollerElement = this.swatch.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n    if (this.scrollerElement) {\n      this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    this.originalPropertyText = this.treeElement.property.propertyText;\n    this.treeElement.parentPane().setEditingStyle(true);\n    const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(\n        this.treeElement.property, false /* forName */);\n    if (uiLocation) {\n      void Common.Revealer.reveal(uiLocation, true /* omitFocus */);\n    }\n\n    UI.Context.Context.instance().setFlavor(ColorSwatchPopoverIcon, this);\n  }\n\n  private spectrumResized(): void {\n    this.swatchPopoverHelper.reposition();\n  }\n\n  private async spectrumChanged(event: Common.EventTarget.EventTargetEvent<string>): Promise<void> {\n    const getColor = (colorText: string): Common.Color.Color|null => {\n      const color = Common.Color.parse(colorText);\n      const customProperty = this.spectrum?.colorName()?.startsWith('--') && `var(${this.spectrum.colorName()})`;\n      if (!color || !customProperty) {\n        return color;\n      }\n      if (color.is(Common.Color.Format.HEX) || color.is(Common.Color.Format.HEXA) ||\n          color.is(Common.Color.Format.RGB) || color.is(Common.Color.Format.RGBA)) {\n        return new Common.Color.Legacy(color.rgba(), color.format(), customProperty);\n      }\n      if (color.is(Common.Color.Format.HSL)) {\n        return new Common.Color.HSL(color.h, color.s, color.l, color.alpha, customProperty);\n      }\n      if (color.is(Common.Color.Format.HWB)) {\n        return new Common.Color.HWB(color.h, color.w, color.b, color.alpha, customProperty);\n      }\n      if (color.is(Common.Color.Format.LCH)) {\n        return new Common.Color.LCH(color.l, color.c, color.h, color.alpha, customProperty);\n      }\n      if (color.is(Common.Color.Format.OKLCH)) {\n        return new Common.Color.Oklch(color.l, color.c, color.h, color.alpha, customProperty);\n      }\n      if (color.is(Common.Color.Format.LAB)) {\n        return new Common.Color.Lab(color.l, color.a, color.b, color.alpha, customProperty);\n      }\n      if (color.is(Common.Color.Format.OKLAB)) {\n        return new Common.Color.Oklab(color.l, color.a, color.b, color.alpha, customProperty);\n      }\n      if (color.is(Common.Color.Format.SRGB) || color.is(Common.Color.Format.SRGB_LINEAR) ||\n          color.is(Common.Color.Format.DISPLAY_P3) || color.is(Common.Color.Format.A98_RGB) ||\n          color.is(Common.Color.Format.PROPHOTO_RGB) || color.is(Common.Color.Format.REC_2020) ||\n          color.is(Common.Color.Format.XYZ) || color.is(Common.Color.Format.XYZ_D50) ||\n          color.is(Common.Color.Format.XYZ_D65)) {\n        return new Common.Color.ColorFunction(\n            color.colorSpace, color.p0, color.p1, color.p2, color.alpha, customProperty);\n      }\n      throw new Error(`Forgot to handle color format ${color.format()}`);\n    };\n\n    const color = getColor(event.data);\n    if (!color) {\n      return;\n    }\n\n    this.swatch.renderColor(color);\n    this.dispatchEventToListeners(ColorSwatchPopoverIconEvents.COLOR_CHANGED, color);\n  }\n\n  private onScroll(_event: Event): void {\n    this.swatchPopoverHelper.hide(true);\n  }\n\n  private onPopoverHidden(commitEdit: boolean): void {\n    if (this.scrollerElement) {\n      this.scrollerElement.removeEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    if (this.spectrum) {\n      this.spectrum.removeEventListener(ColorPicker.Spectrum.Events.COLOR_CHANGED, this.boundSpectrumChanged);\n    }\n    this.spectrum = undefined;\n\n    const propertyText = commitEdit ? this.treeElement.renderedPropertyText() : this.originalPropertyText || '';\n    void this.treeElement.applyStyleText(propertyText, true);\n    this.treeElement.parentPane().setEditingStyle(false);\n    delete this.originalPropertyText;\n\n    UI.Context.Context.instance().setFlavor(ColorSwatchPopoverIcon, null);\n  }\n}\n\nexport const enum ShadowEvents {\n  SHADOW_CHANGED = 'shadowChanged',\n}\n\nexport interface ShadowEventTypes {\n  [ShadowEvents.SHADOW_CHANGED]: InlineEditor.CSSShadowEditor.CSSShadowModel;\n}\n\nexport class ShadowSwatchPopoverHelper extends Common.ObjectWrapper.ObjectWrapper<ShadowEventTypes> {\n  private treeElement: StylePropertyTreeElement;\n  private readonly swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper;\n  private readonly shadowSwatch: InlineEditor.Swatches.CSSShadowSwatch;\n  private iconElement: HTMLSpanElement;\n  private readonly boundShadowChanged:\n      (event: Common.EventTarget.EventTargetEvent<InlineEditor.CSSShadowEditor.CSSShadowModel>) => void;\n  private readonly boundOnScroll: (event: Event) => void;\n  private cssShadowEditor?: InlineEditor.CSSShadowEditor.CSSShadowEditor;\n  private scrollerElement?: Element;\n  private originalPropertyText?: string|null;\n  constructor(\n      treeElement: StylePropertyTreeElement, swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper,\n      shadowSwatch: InlineEditor.Swatches.CSSShadowSwatch) {\n    super();\n    this.treeElement = treeElement;\n    this.swatchPopoverHelper = swatchPopoverHelper;\n    this.shadowSwatch = shadowSwatch;\n    this.iconElement = shadowSwatch.iconElement();\n\n    UI.Tooltip.Tooltip.install(this.iconElement, i18nString(UIStrings.openShadowEditor));\n    this.iconElement.addEventListener('click', this.iconClick.bind(this), false);\n    this.iconElement.addEventListener('keydown', this.keyDown.bind(this), false);\n    this.iconElement.addEventListener('mousedown', event => event.consume(), false);\n\n    this.boundShadowChanged = this.shadowChanged.bind(this);\n    this.boundOnScroll = this.onScroll.bind(this);\n  }\n\n  private keyDown(event: KeyboardEvent): void {\n    if (Platform.KeyboardUtilities.isEnterOrSpaceKey(event)) {\n      event.consume(true);\n      this.showPopover();\n    }\n  }\n\n  private iconClick(event: Event): void {\n    event.consume(true);\n    this.showPopover();\n  }\n\n  showPopover(): void {\n    if (this.swatchPopoverHelper.isShowing()) {\n      this.swatchPopoverHelper.hide(true);\n      return;\n    }\n\n    this.cssShadowEditor = new InlineEditor.CSSShadowEditor.CSSShadowEditor();\n    this.cssShadowEditor.element.classList.toggle('with-padding', true);\n    this.cssShadowEditor.setModel(this.shadowSwatch.model());\n    this.cssShadowEditor.addEventListener(InlineEditor.CSSShadowEditor.Events.SHADOW_CHANGED, this.boundShadowChanged);\n    this.swatchPopoverHelper.show(this.cssShadowEditor, this.iconElement, this.onPopoverHidden.bind(this));\n    this.scrollerElement = this.iconElement.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n    if (this.scrollerElement) {\n      this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    this.originalPropertyText = this.treeElement.property.propertyText;\n    this.treeElement.parentPane().setEditingStyle(true);\n    const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(\n        this.treeElement.property, false /* forName */);\n    if (uiLocation) {\n      void Common.Revealer.reveal(uiLocation, true /* omitFocus */);\n    }\n  }\n\n  private shadowChanged(event: Common.EventTarget.EventTargetEvent<InlineEditor.CSSShadowEditor.CSSShadowModel>): void {\n    this.dispatchEventToListeners(ShadowEvents.SHADOW_CHANGED, event.data);\n  }\n\n  private onScroll(_event: Event): void {\n    this.swatchPopoverHelper.hide(true);\n  }\n\n  private onPopoverHidden(commitEdit: boolean): void {\n    if (this.scrollerElement) {\n      this.scrollerElement.removeEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    if (this.cssShadowEditor) {\n      this.cssShadowEditor.removeEventListener(\n          InlineEditor.CSSShadowEditor.Events.SHADOW_CHANGED, this.boundShadowChanged);\n    }\n    this.cssShadowEditor = undefined;\n\n    const propertyText = commitEdit ? this.treeElement.renderedPropertyText() : this.originalPropertyText || '';\n    void this.treeElement.applyStyleText(propertyText, true);\n    this.treeElement.parentPane().setEditingStyle(false);\n    delete this.originalPropertyText;\n  }\n}\n\nexport class FontEditorSectionManager {\n  private readonly treeElementMap: Map<string, StylePropertyTreeElement>;\n  private readonly swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper;\n  private readonly section: StylePropertiesSection;\n  private parentPane: StylesSidebarPane|null;\n  private fontEditor: InlineEditor.FontEditor.FontEditor|null;\n  private scrollerElement: Element|null;\n  private readonly boundFontChanged:\n      (event: Common.EventTarget.EventTargetEvent<InlineEditor.FontEditor.FontChangedEvent>) => void;\n  private readonly boundOnScroll: () => void;\n  private readonly boundResized: () => void;\n  constructor(\n      swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper, section: StylePropertiesSection) {\n    this.treeElementMap = new Map();\n\n    this.swatchPopoverHelper = swatchPopoverHelper;\n\n    this.section = section;\n\n    this.parentPane = null;\n\n    this.fontEditor = null;\n\n    this.scrollerElement = null;\n\n    this.boundFontChanged = this.fontChanged.bind(this);\n    this.boundOnScroll = this.onScroll.bind(this);\n    this.boundResized = this.fontEditorResized.bind(this);\n  }\n\n  private fontChanged(event: Common.EventTarget.EventTargetEvent<InlineEditor.FontEditor.FontChangedEvent>): void {\n    const {propertyName, value} = event.data;\n    const treeElement = this.treeElementMap.get(propertyName);\n    void this.updateFontProperty(propertyName, value, treeElement);\n  }\n\n  private async updateFontProperty(propertyName: string, value: string, treeElement?: StylePropertyTreeElement):\n      Promise<void> {\n    if (treeElement?.treeOutline && treeElement.valueElement && treeElement.property.parsedOk &&\n        treeElement.property.range) {\n      let elementRemoved = false;\n      treeElement.valueElement.textContent = value;\n      treeElement.property.value = value;\n      let styleText;\n      const propertyName = treeElement.property.name;\n      if (value.length) {\n        styleText = treeElement.renderedPropertyText();\n      } else {\n        styleText = '';\n        elementRemoved = true;\n        this.fixIndex(treeElement.property.index);\n      }\n      this.treeElementMap.set(propertyName, treeElement);\n      await treeElement.applyStyleText(styleText, true);\n      if (elementRemoved) {\n        this.treeElementMap.delete(propertyName);\n      }\n    } else if (value.length) {\n      const newProperty = this.section.addNewBlankProperty();\n      if (newProperty) {\n        newProperty.property.name = propertyName;\n        newProperty.property.value = value;\n        newProperty.updateTitle();\n        await newProperty.applyStyleText(newProperty.renderedPropertyText(), true);\n        this.treeElementMap.set(newProperty.property.name, newProperty);\n      }\n    }\n    this.section.onpopulate();\n    this.swatchPopoverHelper.reposition();\n    return;\n  }\n\n  private fontEditorResized(): void {\n    this.swatchPopoverHelper.reposition();\n  }\n\n  private fixIndex(removedIndex: number): void {\n    for (const treeElement of this.treeElementMap.values()) {\n      if (treeElement.property.index > removedIndex) {\n        treeElement.property.index -= 1;\n      }\n    }\n  }\n\n  private createPropertyValueMap(): Map<string, string> {\n    const propertyMap = new Map<string, string>();\n    for (const fontProperty of this.treeElementMap) {\n      const propertyName = (fontProperty[0]);\n      const treeElement = fontProperty[1];\n      if (treeElement.property.value.length) {\n        propertyMap.set(propertyName, treeElement.property.value);\n      } else {\n        this.treeElementMap.delete(propertyName);\n      }\n    }\n    return propertyMap;\n  }\n\n  registerFontProperty(treeElement: StylePropertyTreeElement): void {\n    const propertyName = treeElement.property.name;\n    if (this.treeElementMap.has(propertyName)) {\n      const treeElementFromMap = this.treeElementMap.get(propertyName);\n      if (!treeElement.overloaded() || (treeElementFromMap?.overloaded())) {\n        this.treeElementMap.set(propertyName, treeElement);\n      }\n    } else {\n      this.treeElementMap.set(propertyName, treeElement);\n    }\n  }\n\n  async showPopover(iconElement: Element, parentPane: StylesSidebarPane): Promise<void> {\n    if (this.swatchPopoverHelper.isShowing()) {\n      this.swatchPopoverHelper.hide(true);\n      return;\n    }\n    this.parentPane = parentPane;\n    const propertyValueMap = this.createPropertyValueMap();\n    this.fontEditor = new InlineEditor.FontEditor.FontEditor(propertyValueMap);\n    this.fontEditor.addEventListener(InlineEditor.FontEditor.Events.FONT_CHANGED, this.boundFontChanged);\n    this.fontEditor.addEventListener(InlineEditor.FontEditor.Events.FONT_EDITOR_RESIZED, this.boundResized);\n    this.swatchPopoverHelper.show(this.fontEditor, iconElement, this.onPopoverHidden.bind(this));\n    this.scrollerElement = iconElement.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n    if (this.scrollerElement) {\n      this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    this.parentPane.setEditingStyle(true);\n  }\n\n  private onScroll(): void {\n    this.swatchPopoverHelper.hide(true);\n  }\n\n  private onPopoverHidden(): void {\n    if (this.scrollerElement) {\n      this.scrollerElement.removeEventListener('scroll', this.boundOnScroll, false);\n    }\n    this.section.onpopulate();\n    if (this.fontEditor) {\n      this.fontEditor.removeEventListener(InlineEditor.FontEditor.Events.FONT_CHANGED, this.boundFontChanged);\n    }\n    this.fontEditor = null;\n    if (this.parentPane) {\n      this.parentPane.setEditingStyle(false);\n    }\n    this.section.resetToolbars();\n    this.section.onpopulate();\n  }\n}\n", "// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ComputedStyleWidget} from './ComputedStyleWidget.js';\nimport {StylesSidebarPane} from './StylesSidebarPane.js';\n\nexport class ComputedStyleModel extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  #node: SDK.DOMModel.DOMNode|null;\n  #cssModel: SDK.CSSModel.CSSModel|null;\n  private eventListeners: Common.EventTarget.EventDescriptor[];\n  private frameResizedTimer?: number;\n  private computedStylePromise?: Promise<ComputedStyle|null>;\n  private currentTrackedNodeId?: number;\n\n  constructor() {\n    super();\n    this.#cssModel = null;\n    this.eventListeners = [];\n    this.#node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.onNodeChanged, this);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        StylesSidebarPane, this.evaluateTrackingComputedStyleUpdatesForNode, this);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        ComputedStyleWidget, this.evaluateTrackingComputedStyleUpdatesForNode, this);\n  }\n\n  dispose(): void {\n    UI.Context.Context.instance().removeFlavorChangeListener(SDK.DOMModel.DOMNode, this.onNodeChanged, this);\n    UI.Context.Context.instance().removeFlavorChangeListener(\n        StylesSidebarPane, this.evaluateTrackingComputedStyleUpdatesForNode, this);\n    UI.Context.Context.instance().removeFlavorChangeListener(\n        ComputedStyleWidget, this.evaluateTrackingComputedStyleUpdatesForNode, this);\n  }\n\n  node(): SDK.DOMModel.DOMNode|null {\n    return this.#node;\n  }\n\n  cssModel(): SDK.CSSModel.CSSModel|null {\n    return this.#cssModel?.isEnabled() ? this.#cssModel : null;\n  }\n\n  // This is a debounced method because the user might be navigated from Styles tab to Computed Style tab and vice versa.\n  // For that case, we want to only run this function once.\n  private evaluateTrackingComputedStyleUpdatesForNode = Common.Debouncer.debounce((): void => {\n    if (!this.#node) {\n      // There isn't a node selected now, so let's stop tracking computed style updates for the previously tracked node.\n      if (this.currentTrackedNodeId) {\n        void this.cssModel()?.trackComputedStyleUpdatesForNode(undefined);\n        this.currentTrackedNodeId = undefined;\n      }\n      return;\n    }\n\n    const isComputedStyleWidgetVisible = Boolean(UI.Context.Context.instance().flavor(ComputedStyleWidget));\n    const isStylesTabVisible = Boolean(UI.Context.Context.instance().flavor(StylesSidebarPane));\n    const shouldTrackComputedStyleUpdates = isComputedStyleWidgetVisible ||\n        (isStylesTabVisible && Root.Runtime.hostConfig.devToolsAnimationStylesInStylesTab?.enabled);\n    // There is a selected node but not the computed style widget nor the styles tab is visible.\n    // If there is a previously tracked node let's stop tracking computed style updates for that node.\n    if (!shouldTrackComputedStyleUpdates) {\n      if (this.currentTrackedNodeId) {\n        void this.cssModel()?.trackComputedStyleUpdatesForNode(undefined);\n        this.currentTrackedNodeId = undefined;\n      }\n      return;\n    }\n\n    // Either computed style widget or styles tab is visible\n    // if the currently tracked node id is not the same as the selected node\n    // let's start tracking the currently selected node.\n    if (this.currentTrackedNodeId !== this.#node.id) {\n      void this.cssModel()?.trackComputedStyleUpdatesForNode(this.#node.id);\n      this.currentTrackedNodeId = this.#node.id;\n    }\n  }, 100);\n\n  private onNodeChanged(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode|null>): void {\n    this.#node = event.data;\n    this.updateModel(this.#node ? this.#node.domModel().cssModel() : null);\n    this.onCSSModelChanged(null);\n    this.evaluateTrackingComputedStyleUpdatesForNode();\n  }\n\n  private updateModel(cssModel: SDK.CSSModel.CSSModel|null): void {\n    if (this.#cssModel === cssModel) {\n      return;\n    }\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n    this.#cssModel = cssModel;\n    const domModel = cssModel ? cssModel.domModel() : null;\n    const resourceTreeModel = cssModel ? cssModel.target().model(SDK.ResourceTreeModel.ResourceTreeModel) : null;\n    if (cssModel && domModel && resourceTreeModel) {\n      this.eventListeners = [\n        cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetAdded, this.onCSSModelChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetRemoved, this.onCSSModelChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.onCSSModelChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.FontsUpdated, this.onCSSModelChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.MediaQueryResultChanged, this.onCSSModelChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.PseudoStateForced, this.onCSSModelChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.ModelWasEnabled, this.onCSSModelChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.ComputedStyleUpdated, this.onComputedStyleChanged, this),\n        domModel.addEventListener(SDK.DOMModel.Events.DOMMutated, this.onDOMModelChanged, this),\n        resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameResized, this.onFrameResized, this),\n      ];\n    }\n  }\n\n  private onCSSModelChanged(event: Common.EventTarget.EventTargetEvent<CSSModelChangedEvent>|null): void {\n    delete this.computedStylePromise;\n    this.dispatchEventToListeners(Events.CSS_MODEL_CHANGED, event?.data ?? null);\n  }\n\n  private onComputedStyleChanged(\n      event: Common.EventTarget.EventTargetEvent<SDK.CSSModel.ComputedStyleUpdatedEvent>|null): void {\n    delete this.computedStylePromise;\n    // If the event contains `nodeId` and that's not the same as this node's id\n    // we don't emit the COMPUTED_STYLE_CHANGED event.\n    if (event?.data && 'nodeId' in event.data && event.data.nodeId !== this.#node?.id) {\n      return;\n    }\n\n    this.dispatchEventToListeners(Events.COMPUTED_STYLE_CHANGED);\n  }\n\n  private onDOMModelChanged(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    // Any attribute removal or modification can affect the styles of \"related\" nodes.\n    const node = event.data;\n    if (!this.#node ||\n        this.#node !== node && node.parentNode !== this.#node.parentNode && !node.isAncestor(this.#node)) {\n      return;\n    }\n    this.onCSSModelChanged(null);\n  }\n\n  private onFrameResized(): void {\n    function refreshContents(this: ComputedStyleModel): void {\n      this.onCSSModelChanged(null);\n      delete this.frameResizedTimer;\n    }\n\n    if (this.frameResizedTimer) {\n      clearTimeout(this.frameResizedTimer);\n    }\n\n    this.frameResizedTimer = window.setTimeout(refreshContents.bind(this), 100);\n  }\n\n  private elementNode(): SDK.DOMModel.DOMNode|null {\n    const node = this.node();\n    if (!node) {\n      return null;\n    }\n    return node.enclosingElementOrSelf();\n  }\n\n  async fetchComputedStyle(): Promise<ComputedStyle|null> {\n    const elementNode = this.elementNode();\n    const cssModel = this.cssModel();\n    if (!elementNode || !cssModel) {\n      return null;\n    }\n    const nodeId = elementNode.id;\n    if (!nodeId) {\n      return null;\n    }\n\n    if (!this.computedStylePromise) {\n      this.computedStylePromise = cssModel.getComputedStyle(nodeId).then(verifyOutdated.bind(this, elementNode));\n    }\n\n    return await this.computedStylePromise;\n\n    function verifyOutdated(\n        this: ComputedStyleModel, elementNode: SDK.DOMModel.DOMNode, style: Map<string, string>|null): ComputedStyle|\n        null {\n      return elementNode === this.elementNode() && style ? new ComputedStyle(elementNode, style) :\n                                                           null as ComputedStyle | null;\n    }\n  }\n}\n\nexport const enum Events {\n  CSS_MODEL_CHANGED = 'CSSModelChanged',\n  COMPUTED_STYLE_CHANGED = 'ComputedStyleChanged',\n}\n\nexport type CSSModelChangedEvent = SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|SDK.CSSModel.StyleSheetChangedEvent|\n                                   SDK.CSSModel.PseudoStateForcedEvent|null|void;\n\nexport interface EventTypes {\n  [Events.CSS_MODEL_CHANGED]: CSSModelChangedEvent;\n  [Events.COMPUTED_STYLE_CHANGED]: void;\n}\n\nexport class ComputedStyle {\n  node: SDK.DOMModel.DOMNode;\n  computedStyle: Map<string, string>;\n  constructor(node: SDK.DOMModel.DOMNode, computedStyle: Map<string, string>) {\n    this.node = node;\n    this.computedStyle = computedStyle;\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TreeOutline from '../../ui/components/tree_outline/tree_outline.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\n\nimport * as ElementsComponents from './components/components.js';\nimport {type ComputedStyle, type ComputedStyleModel, Events} from './ComputedStyleModel.js';\nimport computedStyleSidebarPaneStyles from './computedStyleSidebarPane.css.js';\nimport {ImagePreviewPopover} from './ImagePreviewPopover.js';\nimport {PlatformFontsWidget} from './PlatformFontsWidget.js';\nimport {categorizePropertyName, type Category, DefaultCategoryOrder} from './PropertyNameCategories.js';\nimport {Renderer, rendererBase, type RenderingContext, StringRenderer, URLRenderer} from './PropertyRenderer.js';\nimport {StylePropertiesSection} from './StylePropertiesSection.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text for a checkbox setting that controls whether the user-supplied filter text\n   * excludes all CSS propreties which are filtered out, or just greys them out. In Computed Style\n   * Widget of the Elements panel\n   */\n  showAll: 'Show all',\n  /**\n   * @description Text for a checkbox setting that controls whether similar CSS properties should be\n   * grouped together or not. In Computed Style Widget of the Elements panel.\n   */\n  group: 'Group',\n  /**\n   * [\n   * @description Text shown to the user when a filter is applied to the computed CSS properties, but\n   * no properties matched the filter and thus no results were returned.\n   */\n  noMatchingProperty: 'No matching property',\n  /**\n   * @description Context menu item in Elements panel to navigate to the source code location of the\n   * CSS selector that was clicked on.\n   */\n  navigateToSelectorSource: 'Navigate to selector source',\n  /**\n   * @description Context menu item in Elements panel to navigate to the corresponding CSS style rule\n   * for this computed property.\n   */\n  navigateToStyle: 'Navigate to style',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ComputedStyleWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * Rendering a property's name and value is expensive, and each time we do it\n * it generates a new HTML element. If we call this directly from our Lit\n * components, we will generate a brand new DOM element on each single render.\n * This is very expensive and unnecessary - for the majority of re-renders a\n * property's name and value does not change. So we cache the rest of rendering\n * the name and value in a map, where the key used is a combination of the\n * property's name and value. This ensures that we only re-generate this element\n * if the node itself changes.\n * The resulting Element nodes are inserted into the ComputedStyleProperty\n * component via <slot>s, ensuring that Lit doesn't directly render/re-render\n * the element.\n */\nconst propertyContentsCache = new Map<string, {name: Element, value: Element}>();\n\nfunction matchProperty(name: string, value: string): SDK.CSSPropertyParser.BottomUpTreeMatching|null {\n  return SDK.CSSPropertyParser.matchDeclaration(name, value, [\n    new SDK.CSSPropertyParserMatchers.ColorMatcher(), new SDK.CSSPropertyParserMatchers.URLMatcher(),\n    new SDK.CSSPropertyParserMatchers.StringMatcher()\n  ]);\n}\n\nfunction renderPropertyContents(\n    node: SDK.DOMModel.DOMNode, propertyName: string, propertyValue: string): {name: Element, value: Element} {\n  const cacheKey = propertyName + ':' + propertyValue;\n  const valueFromCache = propertyContentsCache.get(cacheKey);\n  if (valueFromCache) {\n    return valueFromCache;\n  }\n  const name = Renderer.renderNameElement(propertyName);\n  name.slot = 'name';\n  const value = Renderer\n                    .renderValueElement(\n                        {name: propertyName, value: propertyValue}, matchProperty(propertyName, propertyValue),\n                        [new ColorRenderer(), new URLRenderer(null, node), new StringRenderer()])\n                    .valueElement;\n  value.slot = 'value';\n  propertyContentsCache.set(cacheKey, {name, value});\n  return {name, value};\n}\n\n/**\n * Note: this function is called for each tree node on each render, so we need\n * to ensure nothing expensive runs here, or if it does it is safely cached.\n **/\nconst createPropertyElement =\n    (node: SDK.DOMModel.DOMNode, propertyName: string, propertyValue: string, traceable: boolean, inherited: boolean,\n     activeProperty: SDK.CSSProperty.CSSProperty|undefined,\n     onContextMenu: ((event: Event) => void)): Lit.TemplateResult => {\n      const {name, value} = renderPropertyContents(node, propertyName, propertyValue);\n      // clang-format off\n      return html`<devtools-computed-style-property\n        .traceable=${traceable}\n        .inherited=${inherited}\n        @oncontextmenu=${onContextMenu}\n        @onnavigatetosource=${(event: ElementsComponents.ComputedStyleProperty.NavigateToSourceEvent):void => {\n          if (activeProperty) {\n            navigateToSource(activeProperty, event);\n          }\n        }}>\n          ${name}\n          ${value}\n      </devtools-computed-style-property>`;\n      // clang-format on\n    };\n\nconst createTraceElement =\n    (node: SDK.DOMModel.DOMNode, property: SDK.CSSProperty.CSSProperty, isPropertyOverloaded: boolean,\n     matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n     linkifier: Components.Linkifier.Linkifier): ElementsComponents.ComputedStyleTrace.ComputedStyleTrace => {\n      const trace = new ElementsComponents.ComputedStyleTrace.ComputedStyleTrace();\n\n      const {valueElement} = Renderer.renderValueElement(\n          property, matchProperty(property.name, property.value),\n          [new ColorRenderer(), new URLRenderer(null, node), new StringRenderer()]);\n      valueElement.slot = 'trace-value';\n      trace.appendChild(valueElement);\n\n      const rule = (property.ownerStyle.parentRule as SDK.CSSRule.CSSStyleRule | null);\n      let ruleOriginNode;\n      if (rule) {\n        ruleOriginNode = StylePropertiesSection.createRuleOriginNode(matchedStyles, linkifier, rule);\n      }\n\n      let selector = 'element.style';\n      if (rule) {\n        selector = rule.selectorText();\n      } else if (property.ownerStyle.type === SDK.CSSStyleDeclaration.Type.Animation) {\n        selector = property.ownerStyle.animationName() ? `${property.ownerStyle.animationName()} animation` :\n                                                         'animation style';\n      } else if (property.ownerStyle.type === SDK.CSSStyleDeclaration.Type.Transition) {\n        selector = 'transitions style';\n      }\n\n      trace.data = {\n        selector,\n        active: !isPropertyOverloaded,\n        onNavigateToSource: navigateToSource.bind(null, property),\n        ruleOriginNode,\n      };\n\n      return trace;\n    };\n\n// clang-format off\nclass ColorRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.ColorMatch) {\n  // clang-format on\n  override render(match: SDK.CSSPropertyParserMatchers.ColorMatch, context: RenderingContext): Node[] {\n    const color = Common.Color.parse(match.text);\n    if (!color) {\n      return [document.createTextNode(match.text)];\n    }\n\n    const swatch = new InlineEditor.ColorSwatch.ColorSwatch();\n    swatch.setReadonly(true);\n    swatch.renderColor(color);\n    const valueElement = document.createElement('span');\n    valueElement.textContent = match.text;\n    swatch.append(valueElement);\n\n    swatch.addEventListener(\n        InlineEditor.ColorSwatch.ColorChangedEvent.eventName, (event: InlineEditor.ColorSwatch.ColorChangedEvent) => {\n          const {data: {color}} = event;\n          valueElement.textContent = color.getAuthoredText() ?? color.asString();\n        });\n\n    context.addControl('color', swatch);\n    return [swatch];\n  }\n\n  matcher(): SDK.CSSPropertyParserMatchers.ColorMatcher {\n    return new SDK.CSSPropertyParserMatchers.ColorMatcher();\n  }\n}\n\nconst navigateToSource = (cssProperty: SDK.CSSProperty.CSSProperty, event?: Event): void => {\n  if (!event) {\n    return;\n  }\n  void Common.Revealer.reveal(cssProperty);\n  event.consume(true);\n};\n\nconst propertySorter = (propA: string, propB: string): number => {\n  if (propA.startsWith('--') !== propB.startsWith('--')) {\n    return propA.startsWith('--') ? 1 : -1;\n  }\n  if (propA.startsWith('-webkit') !== propB.startsWith('-webkit')) {\n    return propA.startsWith('-webkit') ? 1 : -1;\n  }\n  const canonicalA = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propA);\n  const canonicalB = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propB);\n  return Platform.StringUtilities.compare(canonicalA, canonicalB);\n};\n\ntype ComputedStyleData = {\n  tag: 'property',\n  propertyName: string,\n  propertyValue: string,\n  inherited: boolean,\n}|{\n  tag: 'traceElement',\n  property: SDK.CSSProperty.CSSProperty,\n  rule: SDK.CSSRule.CSSRule | null,\n}|{\n  tag: 'category',\n  name: string,\n};\n\nexport class ComputedStyleWidget extends UI.ThrottledWidget.ThrottledWidget {\n  private computedStyleModel: ComputedStyleModel;\n  private readonly showInheritedComputedStylePropertiesSetting: Common.Settings.Setting<boolean>;\n  private readonly groupComputedStylesSetting: Common.Settings.Setting<boolean>;\n  input: UI.Toolbar.ToolbarInput;\n  private filterRegex: RegExp|null;\n  private readonly noMatchesElement: HTMLElement;\n  private readonly linkifier: Components.Linkifier.Linkifier;\n  private readonly imagePreviewPopover: ImagePreviewPopover;\n\n  #computedStylesTree = new TreeOutline.TreeOutline.TreeOutline<ComputedStyleData>();\n  #treeData?: TreeOutline.TreeOutline.TreeOutlineData<ComputedStyleData>;\n\n  constructor(computedStyleModel: ComputedStyleModel) {\n    super(true);\n    this.registerRequiredCSS(computedStyleSidebarPaneStyles);\n\n    this.contentElement.classList.add('styles-sidebar-computed-style-widget');\n\n    this.computedStyleModel = computedStyleModel;\n    this.computedStyleModel.addEventListener(Events.CSS_MODEL_CHANGED, this.update, this);\n    this.computedStyleModel.addEventListener(Events.COMPUTED_STYLE_CHANGED, this.update, this);\n\n    this.showInheritedComputedStylePropertiesSetting =\n        Common.Settings.Settings.instance().createSetting('show-inherited-computed-style-properties', false);\n    this.showInheritedComputedStylePropertiesSetting.addChangeListener(this.update.bind(this));\n\n    this.groupComputedStylesSetting = Common.Settings.Settings.instance().createSetting('group-computed-styles', false);\n    this.groupComputedStylesSetting.addChangeListener(() => {\n      this.update();\n    });\n\n    const hbox = this.contentElement.createChild('div', 'hbox styles-sidebar-pane-toolbar');\n    const toolbar = hbox.createChild('devtools-toolbar', 'styles-pane-toolbar');\n    const filterInput = new UI.Toolbar.ToolbarFilter(undefined, 1, 1, undefined, undefined, false);\n    filterInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED, this.onFilterChanged, this);\n    toolbar.appendToolbarItem(filterInput);\n    this.input = filterInput;\n    this.filterRegex = null;\n\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        this.showInheritedComputedStylePropertiesSetting, undefined, i18nString(UIStrings.showAll)));\n    toolbar.appendToolbarItem(\n        new UI.Toolbar.ToolbarSettingCheckbox(this.groupComputedStylesSetting, undefined, i18nString(UIStrings.group)));\n\n    this.noMatchesElement = this.contentElement.createChild('div', 'gray-info-message');\n    this.noMatchesElement.textContent = i18nString(UIStrings.noMatchingProperty);\n\n    this.contentElement.appendChild(this.#computedStylesTree);\n\n    this.linkifier = new Components.Linkifier.Linkifier(maxLinkLength);\n\n    this.imagePreviewPopover = new ImagePreviewPopover(this.contentElement, event => {\n      const link = event.composedPath()[0];\n      if (link instanceof Element) {\n        return link;\n      }\n      return null;\n    }, () => this.computedStyleModel.node());\n\n    const fontsWidget = new PlatformFontsWidget(this.computedStyleModel);\n    fontsWidget.show(this.contentElement);\n  }\n\n  override onResize(): void {\n    const isNarrow = this.contentElement.offsetWidth < 260;\n    this.#computedStylesTree.classList.toggle('computed-narrow', isNarrow);\n  }\n\n  override wasShown(): void {\n    UI.Context.Context.instance().setFlavor(ComputedStyleWidget, this);\n    super.wasShown();\n  }\n\n  override willHide(): void {\n    UI.Context.Context.instance().setFlavor(ComputedStyleWidget, null);\n  }\n\n  override async doUpdate(): Promise<void> {\n    const [nodeStyles, matchedStyles] =\n        await Promise.all([this.computedStyleModel.fetchComputedStyle(), this.fetchMatchedCascade()]);\n    if (!nodeStyles || !matchedStyles) {\n      this.noMatchesElement.classList.remove('hidden');\n      return;\n    }\n    const shouldGroupComputedStyles = this.groupComputedStylesSetting.get();\n    if (shouldGroupComputedStyles) {\n      await this.rebuildGroupedList(nodeStyles, matchedStyles);\n    } else {\n      await this.rebuildAlphabeticalList(nodeStyles, matchedStyles);\n    }\n  }\n\n  private async fetchMatchedCascade(): Promise<SDK.CSSMatchedStyles.CSSMatchedStyles|null> {\n    const node = this.computedStyleModel.node();\n    if (!node || !this.computedStyleModel.cssModel()) {\n      return null;\n    }\n\n    const cssModel = this.computedStyleModel.cssModel();\n    if (!cssModel) {\n      return null;\n    }\n\n    return await cssModel.cachedMatchedCascadeForNode(node).then(validateStyles.bind(this));\n\n    function validateStyles(this: ComputedStyleWidget, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles|null):\n        SDK.CSSMatchedStyles.CSSMatchedStyles|null {\n      return matchedStyles && matchedStyles.node() === this.computedStyleModel.node() ? matchedStyles : null;\n    }\n  }\n\n  private async rebuildAlphabeticalList(nodeStyle: ComputedStyle, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles):\n      Promise<void> {\n    this.imagePreviewPopover.hide();\n    this.linkifier.reset();\n    const cssModel = this.computedStyleModel.cssModel();\n    if (!cssModel) {\n      return;\n    }\n\n    const uniqueProperties = [...nodeStyle.computedStyle.keys()];\n    uniqueProperties.sort(propertySorter);\n\n    const node = nodeStyle.node;\n    const propertyTraces = this.computePropertyTraces(matchedStyles);\n    const nonInheritedProperties = this.computeNonInheritedProperties(matchedStyles);\n    const showInherited = this.showInheritedComputedStylePropertiesSetting.get();\n    const tree: Array<TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData>> = [];\n    for (const propertyName of uniqueProperties) {\n      const propertyValue = nodeStyle.computedStyle.get(propertyName) || '';\n      const canonicalName = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propertyName);\n      const isInherited = !nonInheritedProperties.has(canonicalName);\n      if (!showInherited && isInherited && !alwaysShownComputedProperties.has(propertyName)) {\n        continue;\n      }\n      if (!showInherited && propertyName.startsWith('--')) {\n        continue;\n      }\n      if (propertyName !== canonicalName && propertyValue === nodeStyle.computedStyle.get(canonicalName)) {\n        continue;\n      }\n      tree.push(this.buildTreeNode(propertyTraces, propertyName, propertyValue, isInherited));\n    }\n\n    const defaultRenderer = this.createTreeNodeRenderer(propertyTraces, node, matchedStyles);\n    this.#treeData = {\n      tree,\n      compact: true,\n      defaultRenderer,\n    };\n    this.filterAlphabeticalList();\n  }\n\n  private async rebuildGroupedList(\n      nodeStyle: ComputedStyle|null, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles|null): Promise<void> {\n    this.imagePreviewPopover.hide();\n    this.linkifier.reset();\n    const cssModel = this.computedStyleModel.cssModel();\n    if (!nodeStyle || !matchedStyles || !cssModel) {\n      this.noMatchesElement.classList.remove('hidden');\n      return;\n    }\n\n    const node = nodeStyle.node;\n    const propertyTraces = this.computePropertyTraces(matchedStyles);\n    const nonInheritedProperties = this.computeNonInheritedProperties(matchedStyles);\n    const showInherited = this.showInheritedComputedStylePropertiesSetting.get();\n\n    const propertiesByCategory = new Map<Category, string[]>();\n\n    const tree: Array<TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData>> = [];\n    for (const [propertyName, propertyValue] of nodeStyle.computedStyle) {\n      const canonicalName = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propertyName);\n      const isInherited = !nonInheritedProperties.has(canonicalName);\n      if (!showInherited && isInherited && !alwaysShownComputedProperties.has(propertyName)) {\n        continue;\n      }\n      if (!showInherited && propertyName.startsWith('--')) {\n        continue;\n      }\n      if (propertyName !== canonicalName && propertyValue === nodeStyle.computedStyle.get(canonicalName)) {\n        continue;\n      }\n\n      const categories = categorizePropertyName(propertyName);\n      for (const category of categories) {\n        if (!propertiesByCategory.has(category)) {\n          propertiesByCategory.set(category, []);\n        }\n        propertiesByCategory.get(category)?.push(propertyName);\n      }\n    }\n\n    this.#computedStylesTree.removeChildren();\n    for (const category of DefaultCategoryOrder) {\n      const properties = propertiesByCategory.get(category);\n      if (properties && properties.length > 0) {\n        const propertyNodes: Array<TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData>> = [];\n        for (const propertyName of properties) {\n          const propertyValue = nodeStyle.computedStyle.get(propertyName) || '';\n          const canonicalName = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propertyName);\n          const isInherited = !nonInheritedProperties.has(canonicalName);\n          propertyNodes.push(this.buildTreeNode(propertyTraces, propertyName, propertyValue, isInherited));\n        }\n        tree.push({id: category, treeNodeData: {tag: 'category', name: category}, children: async () => propertyNodes});\n      }\n    }\n    const defaultRenderer = this.createTreeNodeRenderer(propertyTraces, node, matchedStyles);\n    this.#treeData = {\n      tree,\n      compact: true,\n      defaultRenderer,\n    };\n    return await this.filterGroupLists();\n  }\n\n  private buildTraceNode(property: SDK.CSSProperty.CSSProperty):\n      TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData> {\n    const rule = property.ownerStyle.parentRule;\n    return {\n      treeNodeData: {\n        tag: 'traceElement',\n        property,\n        rule,\n      },\n      id: (rule?.origin || '') + ': ' + property.ownerStyle.styleSheetId + (property.range || property.name),\n    };\n  }\n\n  private createTreeNodeRenderer(\n      propertyTraces: Map<string, SDK.CSSProperty.CSSProperty[]>,\n      domNode: SDK.DOMModel.DOMNode,\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      ):\n      (node: TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData>,\n       state: {isExpanded: boolean}) => Lit.TemplateResult {\n    return node => {\n      const data = node.treeNodeData;\n      if (data.tag === 'property') {\n        const trace = propertyTraces.get(data.propertyName);\n        const activeProperty = trace?.find(\n            property => matchedStyles.propertyState(property) === SDK.CSSMatchedStyles.PropertyState.ACTIVE);\n        const propertyElement = createPropertyElement(\n            domNode, data.propertyName, data.propertyValue, propertyTraces.has(data.propertyName), data.inherited,\n            activeProperty, event => {\n              if (activeProperty) {\n                this.handleContextMenuEvent(matchedStyles, activeProperty, event);\n              }\n            });\n        return propertyElement;\n      }\n      if (data.tag === 'traceElement') {\n        const isPropertyOverloaded =\n            matchedStyles.propertyState(data.property) === SDK.CSSMatchedStyles.PropertyState.OVERLOADED;\n        const traceElement =\n            createTraceElement(domNode, data.property, isPropertyOverloaded, matchedStyles, this.linkifier);\n        traceElement.addEventListener(\n            'contextmenu', this.handleContextMenuEvent.bind(this, matchedStyles, data.property));\n        return html`${traceElement}`;\n      }\n      return html`<span style=\"cursor: text; color: var(--sys-color-on-surface-subtle);\">${data.name}</span>`;\n    };\n  }\n\n  private buildTreeNode(\n      propertyTraces: Map<string, SDK.CSSProperty.CSSProperty[]>, propertyName: string, propertyValue: string,\n      isInherited: boolean): TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData> {\n    const treeNodeData: ComputedStyleData = {\n      tag: 'property',\n      propertyName,\n      propertyValue,\n      inherited: isInherited,\n    };\n    const trace = propertyTraces.get(propertyName);\n    const jslogContext = propertyName.startsWith('--') ? 'custom-property' : propertyName;\n    if (!trace) {\n      return {\n        treeNodeData,\n        jslogContext,\n        id: propertyName,\n      };\n    }\n    return {\n      treeNodeData,\n      jslogContext,\n      id: propertyName,\n      children: async () => trace.map(this.buildTraceNode),\n    };\n  }\n\n  private handleContextMenuEvent(\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, property: SDK.CSSProperty.CSSProperty, event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const rule = property.ownerStyle.parentRule;\n\n    if (rule) {\n      const header = rule.header;\n      if (header && !header.isAnonymousInlineStyleSheet()) {\n        contextMenu.defaultSection().appendItem(i18nString(UIStrings.navigateToSelectorSource), () => {\n          StylePropertiesSection.tryNavigateToRuleLocation(matchedStyles, rule);\n        }, {jslogContext: 'navigate-to-selector-source'});\n      }\n    }\n\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.navigateToStyle), () => Common.Revealer.reveal(property),\n        {jslogContext: 'navigate-to-style'});\n    void contextMenu.show();\n  }\n\n  private computePropertyTraces(matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles):\n      Map<string, SDK.CSSProperty.CSSProperty[]> {\n    const result = new Map<string, SDK.CSSProperty.CSSProperty[]>();\n    for (const style of matchedStyles.nodeStyles()) {\n      const allProperties = style.allProperties();\n      for (const property of allProperties) {\n        if (!property.activeInStyle() || !matchedStyles.propertyState(property)) {\n          continue;\n        }\n        if (!result.has(property.name)) {\n          result.set(property.name, []);\n        }\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // @ts-expect-error\n        result.get(property.name).push(property);\n      }\n    }\n    return result;\n  }\n\n  private computeNonInheritedProperties(matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles): Set<string> {\n    const result = new Set<string>();\n    for (const style of matchedStyles.nodeStyles()) {\n      for (const property of style.allProperties()) {\n        if (!matchedStyles.propertyState(property)) {\n          continue;\n        }\n        result.add(SDK.CSSMetadata.cssMetadata().canonicalPropertyName(property.name));\n      }\n    }\n    return result;\n  }\n\n  private onFilterChanged(event: Common.EventTarget.EventTargetEvent<string>): void {\n    void this.filterComputedStyles(\n        event.data ? new RegExp(Platform.StringUtilities.escapeForRegExp(event.data), 'i') : null);\n  }\n\n  async filterComputedStyles(regex: RegExp|null): Promise<void> {\n    this.filterRegex = regex;\n    if (this.groupComputedStylesSetting.get()) {\n      return await this.filterGroupLists();\n    }\n    return this.filterAlphabeticalList();\n  }\n\n  private nodeFilter(node: TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData>): boolean {\n    const regex = this.filterRegex;\n    const data = node.treeNodeData;\n    if (data.tag === 'property') {\n      const matched = !regex || regex.test(data.propertyName) || regex.test(data.propertyValue);\n      return matched;\n    }\n    return true;\n  }\n\n  private filterAlphabeticalList(): void {\n    if (!this.#treeData) {\n      return;\n    }\n    const tree = this.#treeData.tree.filter(this.nodeFilter.bind(this));\n    this.#computedStylesTree.data = {\n      tree,\n      defaultRenderer: this.#treeData.defaultRenderer,\n      compact: this.#treeData.compact,\n    };\n    this.noMatchesElement.classList.toggle('hidden', Boolean(tree.length));\n  }\n\n  private async filterGroupLists(): Promise<void> {\n    if (!this.#treeData) {\n      return;\n    }\n    const tree: Array<TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData>> = [];\n    for (const group of this.#treeData.tree) {\n      const data = group.treeNodeData;\n      if (data.tag !== 'category' || !group.children) {\n        continue;\n      }\n      const properties = await group.children();\n      const filteredChildren = properties.filter(this.nodeFilter.bind(this));\n      if (filteredChildren.length) {\n        tree.push(\n            {id: data.name, treeNodeData: {tag: 'category', name: data.name}, children: async () => filteredChildren});\n      }\n    }\n\n    this.#computedStylesTree.data = {\n      tree,\n      defaultRenderer: this.#treeData.defaultRenderer,\n      compact: this.#treeData.compact,\n    };\n    await this.#computedStylesTree.expandRecursively(0);\n    this.noMatchesElement.classList.toggle('hidden', Boolean(tree.length));\n  }\n}\n\nconst maxLinkLength = 30;\nconst alwaysShownComputedProperties = new Set<string>(['display', 'height', 'width']);\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2015 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.styles-sidebar-pane-toolbar {\n  border-bottom: 1px solid var(--sys-color-divider);\n  flex-shrink: 0;\n}\n\n.styles-sidebar-computed-style-widget {\n  min-height: auto;\n}\n\n.styles-pane-toolbar {\n  width: 100%;\n}\n\n/*# sourceURL=${import.meta.resolve('./computedStyleSidebarPane.css')} */`;", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n/**\n * ImagePreviewPopover sets listeners on the container element to display\n * an image preview if needed. The image URL comes from the event (mouseover) target\n * in a property identified by HrefSymbol. To enable preview for any child element\n * set the property HrefSymbol.\n */\nexport class ImagePreviewPopover {\n  private readonly getLinkElement: (arg0: Event) => Element | null;\n  private readonly getDOMNode: (arg0: Element) => SDK.DOMModel.DOMNode | null;\n  private readonly popover: UI.PopoverHelper.PopoverHelper;\n  constructor(\n      container: HTMLElement, getLinkElement: (arg0: Event) => Element | null,\n      getDOMNode: (arg0: Element) => SDK.DOMModel.DOMNode | null) {\n    this.getLinkElement = getLinkElement;\n    this.getDOMNode = getDOMNode;\n    this.popover =\n        new UI.PopoverHelper.PopoverHelper(container, this.handleRequest.bind(this), 'elements.image-preview');\n    this.popover.setTimeout(0, 100);\n  }\n\n  private handleRequest(event: Event): UI.PopoverHelper.PopoverRequest|null {\n    const link = this.getLinkElement(event);\n    if (!link) {\n      return null;\n    }\n    const href = elementToURLMap.get(link);\n    if (!href) {\n      return null;\n    }\n    return {\n      box: link.boxInWindow(),\n      hide: undefined,\n      show: async (popover: UI.GlassPane.GlassPane) => {\n        const node = this.getDOMNode((link));\n        if (!node) {\n          return false;\n        }\n        const precomputedFeatures = await Components.ImagePreview.ImagePreview.loadDimensionsForNode(node);\n        const preview = await Components.ImagePreview.ImagePreview.build(href, true, {\n          imageAltText: undefined,\n          precomputedFeatures,\n          align: Components.ImagePreview.Align.CENTER,\n        });\n        if (preview) {\n          popover.contentElement.appendChild(preview);\n        }\n        return Boolean(preview);\n      },\n    };\n  }\n\n  hide(): void {\n    this.popover.hidePopover();\n  }\n\n  static setImageUrl(element: Element, url: Platform.DevToolsPath.UrlString): Element {\n    elementToURLMap.set(element, url);\n    return element;\n  }\n\n  static getImageURL(element: Element): Platform.DevToolsPath.UrlString|undefined {\n    return elementToURLMap.get(element);\n  }\n}\n\nconst elementToURLMap = new WeakMap<Element, Platform.DevToolsPath.UrlString>();\n", "// Copyright 2013 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\n\nimport {type ComputedStyleModel, Events as ComputedStyleModelEvents} from './ComputedStyleModel.js';\nimport platformFontsWidgetStyles from './platformFontsWidget.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Section title text content in Platform Fonts Widget of the Elements panel\n   */\n  renderedFonts: 'Rendered Fonts',\n  /**\n   * @description Font property title text content in Platform Fonts Widget of the Elements panel\n   */\n  familyName: 'Family name',\n  /**\n   * @description Font property title text content in Platform Fonts Widget of the Elements panel\n   */\n  postScriptName: 'PostScript name',\n  /**\n   * @description Font property title text content in Platform Fonts Widget of the Elements panel\n   */\n  fontOrigin: 'Font origin',\n  /**\n   * @description Text in Platform Fonts Widget of the Elements panel\n   */\n  networkResource: 'Network resource',\n  /**\n   * @description Text in Platform Fonts Widget of the Elements panel\n   */\n  localFile: 'Local file',\n  /**\n   * @description Text in Platform Fonts Widget of the Elements panel. Indicates a number of glyphs (characters) .\n   */\n  dGlyphs: '{n, plural, =1 {(# glyph)} other {(# glyphs)}}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/PlatformFontsWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface PlatformFontsWidgetInput {\n  platformFonts: Protocol.CSS.PlatformFontUsage[]|null;\n}\n\ntype View = (input: PlatformFontsWidgetInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  const isEmptySection = !input.platformFonts?.length;\n\n  // clang-format off\n  render(html`\n    <style>${platformFontsWidgetStyles}</style>\n    <div class=\"platform-fonts\">\n      ${isEmptySection ? '' : html`\n        <div class=\"title\">${i18nString(UIStrings.renderedFonts)}</div>\n        <div class=\"stats-section\">\n          ${input.platformFonts?.map(platformFont => {\n            const fontOrigin = platformFont.isCustomFont ? i18nString(UIStrings.networkResource) : i18nString(UIStrings.localFile);\n            const usage = platformFont.glyphCount;\n            return html`\n              <div class=\"font-stats-item\">\n                <div><span class=\"font-property-name\">${i18nString(UIStrings.familyName)}</span>: ${platformFont.familyName}</div>\n                <div><span class=\"font-property-name\">${i18nString(UIStrings.postScriptName)}</span>: ${platformFont.postScriptName}</div>\n                <div><span class=\"font-property-name\">${i18nString(UIStrings.fontOrigin)}</span>: ${fontOrigin}<span class=\"font-usage\">${i18nString(UIStrings.dGlyphs, {n: usage})}</span></div>\n              </div>\n            `;\n          })}\n        </div>\n      `}\n    </div>`,\n    target);\n  // clang-format on\n};\n\nexport class PlatformFontsWidget extends UI.ThrottledWidget.ThrottledWidget {\n  private readonly sharedModel: ComputedStyleModel;\n  readonly #view: View;\n\n  constructor(sharedModel: ComputedStyleModel, view: View = DEFAULT_VIEW) {\n    super(true);\n    this.#view = view;\n    this.registerRequiredCSS(platformFontsWidgetStyles);\n\n    this.sharedModel = sharedModel;\n    this.sharedModel.addEventListener(ComputedStyleModelEvents.CSS_MODEL_CHANGED, this.update, this);\n    this.sharedModel.addEventListener(ComputedStyleModelEvents.COMPUTED_STYLE_CHANGED, this.update, this);\n  }\n\n  override async doUpdate(): Promise<void> {\n    const cssModel = this.sharedModel.cssModel();\n    const node = this.sharedModel.node();\n    if (!node || !cssModel) {\n      this.#view({platformFonts: null}, {}, this.contentElement);\n      return;\n    }\n\n    const platformFonts = await cssModel.getPlatformFonts(node.id);\n    const sortedPlatformFonts = platformFonts?.sort((a, b) => b.glyphCount - a.glyphCount) || null;\n    this.#view({platformFonts: sortedPlatformFonts}, {}, this.contentElement);\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/**\n * Copyright 2016 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n@scope to (devtools-widget > *) {\n  :scope {\n    user-select: text;\n  }\n\n  .platform-fonts {\n    flex-shrink: 0;\n  }\n\n  .font-usage {\n    color: var(--sys-color-token-subtle);\n    padding-left: 3px;\n  }\n\n  .title {\n    padding: 0 5px;\n    border-top: 1px solid;\n    border-bottom: 1px solid;\n    border-color: var(--sys-color-divider);\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    height: 24px;\n    background-color: var(--sys-color-surface2);\n    display: flex;\n    align-items: center;\n  }\n\n  .font-stats-item {\n    padding: 5px 1em;\n\n    div {\n      margin-bottom: 2px;\n    }\n\n    &:not(:last-child) {\n      border-bottom: 1px solid var(--sys-color-divider);\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./platformFontsWidget.css')} */`;", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\n\nexport const enum Category {\n  LAYOUT = 'Layout',\n  TEXT = 'Text',\n  APPEARANCE = 'Appearance',\n  ANIMATION = 'Animation',\n  GRID = 'Grid',\n  FLEX = 'Flex',\n  TABLE = 'Table',\n  CSS_VARIABLES = 'CSS Variables',\n  GENERATED_CONTENT = 'Generated Content',\n  OTHER = 'Other',\n}\n\nexport const DefaultCategoryOrder = [\n  Category.LAYOUT,\n  Category.TEXT,\n  Category.APPEARANCE,\n  Category.ANIMATION,\n  Category.CSS_VARIABLES,\n  Category.GRID,\n  Category.FLEX,\n  Category.TABLE,\n  Category.GENERATED_CONTENT,\n  Category.OTHER,\n];\n\n// These categories are manually updated for now. In the future\n// we can try to find a way to automatically categorize them\n// or find an authoritative source for the categorization:\n// https://crbug.com/1117405\nconst CategorizedProperties = new Map([\n  [\n    Category.LAYOUT,\n    [\n      'display',       'margin',      'padding',         'height',         'width',           'position',\n      'top',           'right',       'bottom',          'left',           'z-index',         'float',\n      'clear',         'overflow',    'resize',          'clip',           'visibility',      'box-sizing',\n      'align-content', 'align-items', 'align-self',      'flex',           'flex-basis',      'flex-direction',\n      'flex-flow',     'flex-grow',   'flex-shrink',     'flex-wrap',      'justify-content', 'order',\n      'inline-size',   'block-size',  'min-inline-size', 'min-block-size', 'max-inline-size', 'max-block-size',\n      'min-width',     'max-width',   'min-height',      'max-height',\n    ],\n  ],\n  [\n    Category.TEXT,\n    [\n      'font',\n      'font-family',\n      'font-size',\n      'font-size-adjust',\n      'font-stretch',\n      'font-style',\n      'font-variant',\n      'font-weight',\n      'font-smoothing',\n      'direction',\n      'tab-size',\n      'text-align',\n      'text-align-last',\n      'text-decoration',\n      'text-decoration-color',\n      'text-decoration-line',\n      'text-decoration-style',\n      'text-indent',\n      'text-justify',\n      'text-overflow',\n      'text-shadow',\n      'text-transform',\n      'text-size-adjust',\n      'line-height',\n      'vertical-align',\n      'letter-spacing',\n      'word-spacing',\n      'white-space',\n      'word-break',\n      'word-wrap',\n    ],\n  ],\n  [\n    Category.APPEARANCE,\n    [\n      'color',\n      'outline',\n      'outline-color',\n      'outline-offset',\n      'outline-style',\n      'Outline-width',\n      'border',\n      'border-image',\n      'background',\n      'cursor',\n      'box-shadow',\n      '≈',\n      'tap-highlight-color',\n    ],\n  ],\n  [\n    Category.ANIMATION,\n    [\n      'animation',\n      'animation-delay',\n      'animation-direction',\n      'animation-duration',\n      'animation-fill-mode',\n      'animation-iteration-count',\n      'animation-name',\n      'animation-play-state',\n      'animation-timing-function',\n      'transition',\n      'transition-delay',\n      'transition-duration',\n      'transition-property',\n      'transition-timing-function',\n    ],\n  ],\n  [\n    Category.GRID,\n    [\n      'grid',\n      'grid-column',\n      'grid-row',\n      'order',\n      'place-items',\n      'place-content',\n      'place-self',\n    ],\n  ],\n  [\n    Category.FLEX,\n    [\n      'flex',\n      'order',\n      'place-items',\n      'place-content',\n      'place-self',\n    ],\n  ],\n  [\n    Category.TABLE,\n    [\n      'border-collapse',\n      'border-spacing',\n      'caption-side',\n      'empty-cells',\n      'table-layout',\n    ],\n  ],\n  [\n    Category.GENERATED_CONTENT,\n    [\n      'content',\n      'quotes',\n      'counter-reset',\n      'counter-increment',\n    ],\n  ],\n]);\n\nconst CategoriesByPropertyName = new Map<string, never[]>();\n\nfor (const [category, styleNames] of CategorizedProperties) {\n  for (const styleName of styleNames) {\n    if (!CategoriesByPropertyName.has(styleName)) {\n      CategoriesByPropertyName.set(styleName, []);\n    }\n    const categories = (CategoriesByPropertyName.get(styleName) as Category[]);\n    categories.push(category);\n  }\n}\n\nconst matchCategoriesByPropertyName = (propertyName: string): Category[] => {\n  if (CategoriesByPropertyName.has(propertyName)) {\n    return CategoriesByPropertyName.get(propertyName) as Category[];\n  }\n  if (propertyName.startsWith('--')) {\n    return [Category.CSS_VARIABLES];\n  }\n  return [];\n};\n\n/**\n * Categorize a given property name to one or more categories.\n *\n * It matches against the static CategoriesByPropertyName first. It then\n * matches against several dynamic rules. It then tries to use the canonical\n * name's shorthands for matching. If nothing matches, it returns the \"Other\"\n * category.\n */\nexport const categorizePropertyName = (propertyName: string): Category[] => {\n  const cssMetadata = SDK.CSSMetadata.cssMetadata();\n  const canonicalName = cssMetadata.canonicalPropertyName(propertyName);\n  const categories = matchCategoriesByPropertyName(canonicalName);\n  if (categories.length > 0) {\n    return categories;\n  }\n\n  const shorthands = cssMetadata.getShorthands(canonicalName);\n  if (shorthands) {\n    for (const shorthand of shorthands) {\n      const shorthandCategories = matchCategoriesByPropertyName(shorthand);\n      if (shorthandCategories.length > 0) {\n        return shorthandCategories;\n      }\n    }\n  }\n\n  return [Category.OTHER];\n};\n", "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ImagePreviewPopover} from './ImagePreviewPopover.js';\nimport {unescapeCssString} from './StylesSidebarPane.js';\n\nconst UIStrings = {\n  /**\n   * @description Text that is announced by the screen reader when the user focuses on an input field for entering the name of a CSS property in the Styles panel\n   * @example {margin} PH1\n   */\n  cssPropertyName: '`CSS` property name: {PH1}',\n  /**\n   * @description Text that is announced by the screen reader when the user focuses on an input field for entering the value of a CSS property in the Styles panel\n   * @example {10px} PH1\n   */\n  cssPropertyValue: '`CSS` property value: {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/PropertyRenderer.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction mergeWithSpacing(nodes: Node[], merge: Node[]): Node[] {\n  const result = [...nodes];\n  if (SDK.CSSPropertyParser.requiresSpace(nodes, merge)) {\n    result.push(document.createTextNode(' '));\n  }\n  result.push(...merge);\n  return result;\n}\n\nexport interface MatchRenderer<MatchT extends SDK.CSSPropertyParser.Match> {\n  readonly matchType: Platform.Constructor.Constructor<MatchT>;\n  render(match: MatchT, context: RenderingContext): Node[];\n}\n\n// A mixin to automatically expose the match type on specific renrerers\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function rendererBase<MatchT extends SDK.CSSPropertyParser.Match>(\n    matchT: Platform.Constructor.Constructor<MatchT>) {\n  abstract class RendererBase implements MatchRenderer<MatchT> {\n    readonly matchType = matchT;\n    render(_match: MatchT, _context: RenderingContext): Node[] {\n      return [];\n    }\n  }\n  return RendererBase;\n}\n\n// This class implements highlighting for rendered nodes in value traces. On hover, all nodes belonging to the same\n// Match (using object identity) are highlighted.\nexport class Highlighting {\n  static readonly REGISTRY_NAME = 'css-value-tracing';\n  // This holds a stack of active ranges, the top-stack is the currently highlighted set. mouseenter and mouseleave\n  // push and pop range sets, respectively.\n  readonly #activeHighlights: Range[][] = [];\n  // We hold a bidirectional mapping between nodes and matches. A node can belong to multiple matches when matches are\n  // nested (via function arguments for instance).\n  readonly #nodesForMatches = new Map<SDK.CSSPropertyParser.Match, Node[][]>();\n  readonly #matchesForNodes = new Map<Node, SDK.CSSPropertyParser.Match[]>();\n  readonly #registry: Highlight;\n  readonly #boundOnEnter: (e: Event) => void;\n  readonly #boundOnExit: (e: Event) => void;\n\n  constructor() {\n    const registry = CSS.highlights.get(Highlighting.REGISTRY_NAME);\n    this.#registry = registry ?? new Highlight();\n    if (!registry) {\n      CSS.highlights.set(Highlighting.REGISTRY_NAME, this.#registry);\n    }\n    this.#boundOnExit = this.#onExit.bind(this);\n    this.#boundOnEnter = this.#onEnter.bind(this);\n  }\n\n  addMatch(match: SDK.CSSPropertyParser.Match, nodes: Node[]): void {\n    if (nodes.length > 0) {\n      const ranges = this.#nodesForMatches.get(match);\n      if (ranges) {\n        ranges.push(nodes);\n      } else {\n        this.#nodesForMatches.set(match, [nodes]);\n      }\n    }\n    for (const node of nodes) {\n      const matches = this.#matchesForNodes.get(node);\n      if (matches) {\n        matches.push(match);\n      } else {\n        this.#matchesForNodes.set(node, [match]);\n      }\n      if (node instanceof HTMLElement) {\n        node.onmouseenter = this.#boundOnEnter;\n        node.onmouseleave = this.#boundOnExit;\n        node.onfocus = this.#boundOnEnter;\n        node.onblur = this.#boundOnExit;\n        node.tabIndex = 0;\n      }\n    }\n  }\n\n  * #nodeRangesHitByMouseEvent(e: Event): Generator<Node[]> {\n    for (const node of e.composedPath()) {\n      const matches = this.#matchesForNodes.get(node as Node);\n      if (matches) {\n        for (const match of matches) {\n          yield* this.#nodesForMatches.get(match) ?? [];\n        }\n        break;\n      }\n    }\n  }\n\n  #onEnter(e: Event): void {\n    this.#registry.clear();\n    this.#activeHighlights.push([]);\n    for (const nodeRange of this.#nodeRangesHitByMouseEvent(e)) {\n      const range = new Range();\n      const begin = nodeRange[0];\n      const end = nodeRange[nodeRange.length - 1];\n      if (begin.parentNode && end.parentNode) {\n        range.setStartBefore(begin);\n        range.setEndAfter(end);\n        this.#activeHighlights[this.#activeHighlights.length - 1].push(range);\n        this.#registry.add(range);\n      }\n    }\n  }\n\n  #onExit(): void {\n    this.#registry.clear();\n    this.#activeHighlights.pop();\n    if (this.#activeHighlights.length > 0) {\n      this.#activeHighlights[this.#activeHighlights.length - 1].forEach(range => this.#registry.add(range));\n    }\n  }\n}\n\n// This class is used to guide value tracing when passed to the Renderer. Tracing has two phases. First, substitutions\n// such as var() are applied step by step. In each step, all vars in the value are replaced by their definition until no\n// vars remain. In the second phase, we evaluate other functions such as calc() or min() or color-mix(). Which CSS\n// function types are actually substituted or evaluated is not relevant here, rather it is decided by an individual\n// MatchRenderer.\n//\n// Callers don't need to keep track of the tracing depth (i.e., the number of substitution/evaluation steps).\n// TracingContext is stateful and keeps track of the depth, so callers can progressively produce steps by calling\n// TracingContext#nextSubstitution or TracingContext#nextEvaluation. Calling Renderer with the tracing context will then\n// produce the next step of tracing. The tracing depth is passed to the individual MatchRenderers by way of\n// TracingContext#substitution or TracingContext#applyEvaluation/TracingContext#evaluation (see function-level comments\n// about how these two play together), which MatchRenderers call to request a fresh TracingContext for the next level of\n// substitution/evaluation.\nexport class TracingContext {\n  #substitutionDepth = 0;\n  #hasMoreSubstitutions: boolean;\n  #parent: TracingContext|null = null;\n  #evaluationCount = 0;\n  #appliedEvaluations = 0;\n  #hasMoreEvaluations = true;\n  #longhandOffset: number;\n  readonly #highlighting: Highlighting;\n  #parsedValueCache = new Map<SDK.CSSProperty.CSSProperty|SDK.CSSMatchedStyles.CSSRegisteredProperty, {\n    matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n    computedStyles: Map<string, string>,\n    parsedValue: SDK.CSSPropertyParser.BottomUpTreeMatching|null,\n  }>();\n  #root: {match: SDK.CSSPropertyParser.Match, context: RenderingContext}|null = null;\n  #propertyName: string|null;\n  #asyncEvalCallbacks: Array<(() => Promise<boolean>)|undefined> = [];\n  readonly expandPercentagesInShorthands: boolean;\n\n  constructor(\n      highlighting: Highlighting, expandPercentagesInShorthands: boolean, initialLonghandOffset = 0,\n      matchedResult?: SDK.CSSPropertyParser.BottomUpTreeMatching) {\n    this.#highlighting = highlighting;\n    this.#hasMoreSubstitutions =\n        matchedResult?.hasMatches(\n            SDK.CSSPropertyParserMatchers.VariableMatch, SDK.CSSPropertyParserMatchers.BaseVariableMatch,\n            SDK.CSSPropertyParserMatchers.AttributeMatch, SDK.CSSPropertyParserMatchers.EnvFunctionMatch) ??\n        false;\n    this.#propertyName = matchedResult?.ast.propertyName ?? null;\n    this.#longhandOffset = initialLonghandOffset;\n    this.expandPercentagesInShorthands = expandPercentagesInShorthands;\n  }\n\n  get highlighting(): Highlighting {\n    return this.#highlighting;\n  }\n\n  get root(): {match: SDK.CSSPropertyParser.Match, context: RenderingContext}|null {\n    return this.#root;\n  }\n\n  get propertyName(): string|null {\n    return this.#propertyName;\n  }\n\n  get longhandOffset(): number {\n    return this.#longhandOffset;\n  }\n\n  renderingContext(context: RenderingContext): RenderingContext {\n    return new RenderingContext(\n        context.ast, context.property, context.renderers, context.matchedResult, context.cssControls, context.options,\n        this);\n  }\n\n  nextSubstitution(): boolean {\n    if (!this.#hasMoreSubstitutions) {\n      return false;\n    }\n    this.#substitutionDepth++;\n    this.#hasMoreSubstitutions = false;\n    this.#asyncEvalCallbacks = [];\n    return true;\n  }\n\n  nextEvaluation(): boolean {\n    if (this.#hasMoreSubstitutions) {\n      throw new Error('Need to apply substitutions first');\n    }\n    if (!this.#hasMoreEvaluations) {\n      return false;\n    }\n    this.#appliedEvaluations = 0;\n    this.#hasMoreEvaluations = false;\n    this.#evaluationCount++;\n    this.#asyncEvalCallbacks = [];\n    return true;\n  }\n\n  #setHasMoreEvaluations(value: boolean): void {\n    if (this.#parent) {\n      this.#parent.#setHasMoreEvaluations(value);\n    }\n    this.#hasMoreEvaluations = value;\n  }\n\n  // Evaluations are applied bottom up, i.e., innermost sub-expressions are evaluated first before evaluating any\n  // function call. This function produces TracingContexts for each of the arguments of the function call which should\n  // be passed to the Renderer calls for the respective subtrees.\n  evaluation(args: unknown[], root: {match: SDK.CSSPropertyParser.Match, context: RenderingContext}|null = null):\n      TracingContext[]|null {\n    const childContexts = args.map(() => {\n      const child = new TracingContext(this.#highlighting, this.expandPercentagesInShorthands);\n      child.#parent = this;\n      child.#substitutionDepth = this.#substitutionDepth;\n      child.#evaluationCount = this.#evaluationCount;\n      child.#hasMoreSubstitutions = this.#hasMoreSubstitutions;\n      child.#parsedValueCache = this.#parsedValueCache;\n      child.#root = root;\n      child.#propertyName = this.propertyName;\n      return child;\n    });\n    return childContexts;\n  }\n\n  #setAppliedEvaluations(value: number): void {\n    if (this.#parent) {\n      this.#parent.#setAppliedEvaluations(value);\n    }\n    this.#appliedEvaluations = Math.max(this.#appliedEvaluations, value);\n  }\n\n  // After rendering the arguments of a function call, the TracingContext produced by TracingContext#evaluation need to\n  // be passed here to determine whether the \"current\" function call should be evaluated or not. If so, the\n  // evaluation callback is run. The callback should return synchronously an array of Nodes as placeholder to be\n  // rendered immediately and optionally a callback for asynchronous updates of the placeholder nodes. The callback\n  // returns a boolean indicating whether the update was successful or not.\n  applyEvaluation(\n      children: TracingContext[],\n      evaluation: () => ({placeholder: Node[], asyncEvalCallback?: () => Promise<boolean>})): Node[]|null {\n    if (this.#evaluationCount === 0 || children.some(child => child.#appliedEvaluations >= this.#evaluationCount)) {\n      this.#setHasMoreEvaluations(true);\n      children.forEach(child => this.#asyncEvalCallbacks.push(...child.#asyncEvalCallbacks));\n      return null;\n    }\n    this.#setAppliedEvaluations(\n        children.map(child => child.#appliedEvaluations).reduce((a, b) => Math.max(a, b), 0) + 1);\n    const {placeholder, asyncEvalCallback} = evaluation();\n    this.#asyncEvalCallbacks.push(asyncEvalCallback);\n    return placeholder;\n  }\n\n  #setHasMoreSubstitutions(): void {\n    if (this.#parent) {\n      this.#parent.#setHasMoreSubstitutions();\n    }\n    this.#hasMoreSubstitutions = true;\n  }\n\n  // Request a tracing context for the next level of substitutions. If this returns null, no further substitution should\n  // be applied on this branch of the AST. Otherwise, the TracingContext should be passed to the Renderer call for the\n  // substitution subtree.\n  substitution(root: {match: SDK.CSSPropertyParser.Match, context: RenderingContext}|null = null): TracingContext|null {\n    if (this.#substitutionDepth <= 0) {\n      this.#setHasMoreSubstitutions();\n      return null;\n    }\n    const child = new TracingContext(this.#highlighting, this.expandPercentagesInShorthands);\n    child.#parent = this;\n    child.#substitutionDepth = this.#substitutionDepth - 1;\n    child.#evaluationCount = this.#evaluationCount;\n    child.#hasMoreSubstitutions = false;\n    child.#parsedValueCache = this.#parsedValueCache;\n    child.#root = root;\n    // Async evaluation callbacks need to be gathered across substitution contexts so that they bubble to the root. That\n    // is not the case for evaluation contexts since `applyEvaluation` conditionally collects callbacks for its subtree\n    // already.\n    child.#asyncEvalCallbacks = this.#asyncEvalCallbacks;\n    child.#longhandOffset =\n        this.#longhandOffset + (root?.context.matchedResult.getComputedLonghandName(root?.match.node) ?? 0);\n    child.#propertyName = this.propertyName;\n    return child;\n  }\n\n  cachedParsedValue(\n      declaration: SDK.CSSProperty.CSSProperty|SDK.CSSMatchedStyles.CSSRegisteredProperty,\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      computedStyles: Map<string, string>): SDK.CSSPropertyParser.BottomUpTreeMatching|null {\n    const cachedValue = this.#parsedValueCache.get(declaration);\n    if (cachedValue?.matchedStyles === matchedStyles && cachedValue?.computedStyles === computedStyles) {\n      return cachedValue.parsedValue;\n    }\n    const parsedValue = declaration.parseValue(matchedStyles, computedStyles);\n    this.#parsedValueCache.set(declaration, {matchedStyles, computedStyles, parsedValue});\n    return parsedValue;\n  }\n\n  // If this returns `false`, all evaluations for this trace line have failed.\n  async runAsyncEvaluations(): Promise<boolean> {\n    const results = await Promise.all(this.#asyncEvalCallbacks.map(callback => callback?.()));\n    return results.some(result => result !== false);\n  }\n}\n\nexport class RenderingContext {\n  constructor(\n      readonly ast: SDK.CSSPropertyParser.SyntaxTree, readonly property: SDK.CSSProperty.CSSProperty|null,\n      readonly renderers:\n          Map<Platform.Constructor.Constructor<SDK.CSSPropertyParser.Match>,\n              MatchRenderer<SDK.CSSPropertyParser.Match>>,\n      readonly matchedResult: SDK.CSSPropertyParser.BottomUpTreeMatching,\n      readonly cssControls?: SDK.CSSPropertyParser.CSSControlMap, readonly options: {readonly?: boolean} = {},\n      readonly tracing?: TracingContext) {\n  }\n\n  addControl(cssType: string, control: HTMLElement): void {\n    if (this.cssControls) {\n      const controls = this.cssControls.get(cssType);\n      if (!controls) {\n        this.cssControls.set(cssType, [control]);\n      } else {\n        controls.push(control);\n      }\n    }\n  }\n\n  getComputedLonghandName(node: CodeMirror.SyntaxNode): string|null {\n    if (!this.matchedResult.ast.propertyName) {\n      return null;\n    }\n    const longhands =\n        SDK.CSSMetadata.cssMetadata().getLonghands(this.tracing?.propertyName ?? this.matchedResult.ast.propertyName);\n    if (!longhands) {\n      return null;\n    }\n    const index = this.matchedResult.getComputedLonghandName(node);\n    return longhands[index + (this.tracing?.longhandOffset ?? 0)] ?? null;\n  }\n\n  findParent<MatchT extends SDK.CSSPropertyParser.Match>(\n      node: CodeMirror.SyntaxNode|null, matchType: Platform.Constructor.Constructor<MatchT>): MatchT|null {\n    while (node) {\n      const match = this.matchedResult.getMatch(node);\n      if (match instanceof matchType) {\n        return match;\n      }\n      node = node.parent;\n    }\n    if (this.tracing?.root) {\n      return this.tracing.root.context.findParent(this.tracing.root.match.node, matchType);\n    }\n    return null;\n  }\n}\n\nexport class Renderer extends SDK.CSSPropertyParser.TreeWalker {\n  readonly #matchedResult: SDK.CSSPropertyParser.BottomUpTreeMatching;\n  #output: Node[] = [];\n  readonly #context: RenderingContext;\n\n  constructor(\n      ast: SDK.CSSPropertyParser.SyntaxTree,\n      property: SDK.CSSProperty.CSSProperty|null,\n      renderers:\n          Map<Platform.Constructor.Constructor<SDK.CSSPropertyParser.Match>,\n              MatchRenderer<SDK.CSSPropertyParser.Match>>,\n      matchedResult: SDK.CSSPropertyParser.BottomUpTreeMatching,\n      cssControls: SDK.CSSPropertyParser.CSSControlMap,\n      options: {\n        readonly?: boolean,\n      },\n      tracing: TracingContext|undefined,\n  ) {\n    super(ast);\n    this.#matchedResult = matchedResult;\n    this.#context =\n        new RenderingContext(this.ast, property, renderers, this.#matchedResult, cssControls, options, tracing);\n  }\n\n  static render(nodeOrNodes: CodeMirror.SyntaxNode|CodeMirror.SyntaxNode[], context: RenderingContext):\n      {nodes: Node[], cssControls: SDK.CSSPropertyParser.CSSControlMap} {\n    if (!Array.isArray(nodeOrNodes)) {\n      return this.render([nodeOrNodes], context);\n    }\n    const cssControls = new SDK.CSSPropertyParser.CSSControlMap();\n    const renderers = nodeOrNodes.map(\n        node => this.walkExcludingSuccessors(\n            context.ast.subtree(node), context.property, context.renderers, context.matchedResult, cssControls,\n            context.options, context.tracing));\n    const nodes = renderers.map(node => node.#output).reduce(mergeWithSpacing, []);\n    return {nodes, cssControls};\n  }\n\n  static renderInto(\n      nodeOrNodes: CodeMirror.SyntaxNode|CodeMirror.SyntaxNode[], context: RenderingContext,\n      parent: Node): {nodes: Node[], cssControls: SDK.CSSPropertyParser.CSSControlMap} {\n    const {nodes, cssControls} = this.render(nodeOrNodes, context);\n    if (parent.lastChild && SDK.CSSPropertyParser.requiresSpace([parent.lastChild], nodes)) {\n      parent.appendChild(document.createTextNode(' '));\n    }\n    nodes.map(n => parent.appendChild(n));\n    return {nodes, cssControls};\n  }\n\n  renderedMatchForTest(_nodes: Node[], _match: SDK.CSSPropertyParser.Match): void {\n  }\n\n  protected override enter({node}: SDK.CSSPropertyParser.SyntaxNodeRef): boolean {\n    const match = this.#matchedResult.getMatch(node);\n    const renderer = match &&\n        this.#context.renderers.get(match.constructor as Platform.Constructor.Constructor<SDK.CSSPropertyParser.Match>);\n    if (renderer || match instanceof SDK.CSSPropertyParserMatchers.TextMatch) {\n      const output = renderer ? renderer.render(match, this.#context) :\n                                (match as SDK.CSSPropertyParserMatchers.TextMatch).render();\n      this.#context.tracing?.highlighting.addMatch(match, output);\n      this.renderedMatchForTest(output, match);\n      this.#output = mergeWithSpacing(this.#output, output);\n      return false;\n    }\n\n    return true;\n  }\n\n  static renderNameElement(name: string): HTMLElement {\n    const nameElement = document.createElement('span');\n    nameElement.setAttribute(\n        'jslog', `${VisualLogging.key().track({\n          change: true,\n          keydown: 'ArrowLeft|ArrowUp|PageUp|Home|PageDown|ArrowRight|ArrowDown|End|Space|Tab|Enter|Escape',\n        })}`);\n    UI.ARIAUtils.setLabel(nameElement, i18nString(UIStrings.cssPropertyName, {PH1: name}));\n    nameElement.className = 'webkit-css-property';\n    nameElement.textContent = name;\n    nameElement.normalize();\n    nameElement.tabIndex = -1;\n    return nameElement;\n  }\n\n  // This function renders a property value as HTML, customizing the presentation with a set of given AST matchers. This\n  // comprises the following steps:\n  // 1. Build an AST of the property.\n  // 2. Apply tree matchers during bottom up traversal.\n  // 3. Render the value from left to right into HTML, deferring rendering of matched subtrees to the matchers\n  //\n  // More general, longer matches take precedence over shorter, more specific matches. Whitespaces are normalized, for\n  // unmatched text and around rendered matching results.\n  static renderValueElement(\n      property: SDK.CSSProperty.CSSProperty|{name: string, value: string},\n      matchedResult: SDK.CSSPropertyParser.BottomUpTreeMatching|null,\n      renderers: Array<MatchRenderer<SDK.CSSPropertyParser.Match>>,\n      tracing?: TracingContext): {valueElement: HTMLElement, cssControls: SDK.CSSPropertyParser.CSSControlMap} {\n    const valueElement = document.createElement('span');\n    valueElement.setAttribute(\n        'jslog', `${VisualLogging.value().track({\n          change: true,\n          keydown: 'ArrowLeft|ArrowUp|PageUp|Home|PageDown|ArrowRight|ArrowDown|End|Space|Tab|Enter|Escape',\n        })}`);\n    UI.ARIAUtils.setLabel(valueElement, i18nString(UIStrings.cssPropertyValue, {PH1: property.value}));\n    valueElement.className = 'value';\n    valueElement.tabIndex = -1;\n    const {nodes, cssControls} = this.renderValueNodes(property, matchedResult, renderers, tracing);\n    nodes.forEach(node => valueElement.appendChild(node));\n    valueElement.normalize();\n    return {valueElement, cssControls};\n  }\n\n  static renderValueNodes(\n      property: SDK.CSSProperty.CSSProperty|{name: string, value: string},\n      matchedResult: SDK.CSSPropertyParser.BottomUpTreeMatching|null,\n      renderers: Array<MatchRenderer<SDK.CSSPropertyParser.Match>>,\n      tracing?: TracingContext): {nodes: Node[], cssControls: SDK.CSSPropertyParser.CSSControlMap} {\n    if (!matchedResult) {\n      return {nodes: [document.createTextNode(property.value)], cssControls: new Map()};\n    }\n    const rendererMap = new Map<\n        Platform.Constructor.Constructor<SDK.CSSPropertyParser.Match>, MatchRenderer<SDK.CSSPropertyParser.Match>>();\n    for (const renderer of renderers) {\n      rendererMap.set(renderer.matchType, renderer);\n    }\n\n    const context = new RenderingContext(\n        matchedResult.ast, property instanceof SDK.CSSProperty.CSSProperty ? property : null, rendererMap,\n        matchedResult, undefined, {}, tracing);\n    return Renderer.render([matchedResult.ast.tree, ...matchedResult.ast.trailingNodes], context);\n  }\n}\n\n// clang-format off\nexport class URLRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.URLMatch) {\n  // clang-format on\n  constructor(private readonly rule: SDK.CSSRule.CSSRule|null, private readonly node: SDK.DOMModel.DOMNode|null) {\n    super();\n  }\n  override render(match: SDK.CSSPropertyParserMatchers.URLMatch): Node[] {\n    const url = unescapeCssString(match.url) as Platform.DevToolsPath.UrlString;\n    const container = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(container, 'url(');\n    let hrefUrl: Platform.DevToolsPath.UrlString|null = null;\n    if (this.rule?.resourceURL()) {\n      hrefUrl = Common.ParsedURL.ParsedURL.completeURL(this.rule.resourceURL(), url);\n    } else if (this.node) {\n      hrefUrl = this.node.resolveURL(url);\n    }\n    const link = ImagePreviewPopover.setImageUrl(\n        Components.Linkifier.Linkifier.linkifyURL(hrefUrl || url, {\n          text: url,\n          preventClick: false,\n          // crbug.com/1027168\n          // We rely on CSS text-overflow: ellipsis to hide long URLs in the Style panel,\n          // so that we don't have to keep two versions (original vs. trimmed) of URL\n          // at the same time, which complicates both StylesSidebarPane and StylePropertyTreeElement.\n          bypassURLTrimming: true,\n          showColumnNumber: false,\n          inlineFrameIndex: 0,\n        }),\n        hrefUrl || url);\n    container.appendChild(link);\n    UI.UIUtils.createTextChild(container, ')');\n    return [container];\n  }\n}\n\n// clang-format off\nexport class StringRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.StringMatch) {\n  // clang-format on\n  override render(match: SDK.CSSPropertyParserMatchers.StringMatch): Node[] {\n    const element = document.createElement('span');\n    element.innerText = match.text;\n    UI.Tooltip.Tooltip.install(element, unescapeCssString(match.text));\n    return [element];\n  }\n}\n\n// clang-format off\nexport class BinOpRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.BinOpMatch) {\n  // clang-format on\n  override render(match: SDK.CSSPropertyParserMatchers.BinOpMatch, context: RenderingContext): Node[] {\n    const [lhs, binop, rhs] = SDK.CSSPropertyParser.ASTUtils.children(match.node).map(child => {\n      const span = document.createElement('span');\n      Renderer.renderInto(child, context, span);\n      return span;\n    });\n\n    return [lhs, document.createTextNode(' '), binop, document.createTextNode(' '), rhs];\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ElementsComponents from './components/components.js';\nimport type {ComputedStyleModel, CSSModelChangedEvent} from './ComputedStyleModel.js';\nimport {ElementsPanel} from './ElementsPanel.js';\nimport {ElementsSidebarPane} from './ElementsSidebarPane.js';\nimport {ImagePreviewPopover} from './ImagePreviewPopover.js';\nimport * as LayersWidget from './LayersWidget.js';\nimport {StyleEditorWidget} from './StyleEditorWidget.js';\nimport {\n  BlankStylePropertiesSection,\n  FontPaletteValuesRuleSection,\n  FunctionRuleSection,\n  HighlightPseudoStylePropertiesSection,\n  KeyframePropertiesSection,\n  PositionTryRuleSection,\n  RegisteredPropertiesSection,\n  StylePropertiesSection,\n} from './StylePropertiesSection.js';\nimport {StylePropertyHighlighter} from './StylePropertyHighlighter.js';\nimport type {StylePropertyTreeElement} from './StylePropertyTreeElement.js';\nimport stylesSidebarPaneStyles from './stylesSidebarPane.css.js';\nimport {WebCustomData} from './WebCustomData.js';\n\nconst UIStrings = {\n  /**\n   * @description No matches element text content in Styles Sidebar Pane of the Elements panel\n   */\n  noMatchingSelectorOrStyle: 'No matching selector or style',\n  /**\n   * /**\n   * @description Text to announce the result of the filter input in the Styles Sidebar Pane of the Elements panel\n   */\n  visibleSelectors: '{n, plural, =1 {# visible selector listed below} other {# visible selectors listed below}}',\n  /**\n   * @description Separator element text content in Styles Sidebar Pane of the Elements panel\n   * @example {scrollbar-corner} PH1\n   */\n  pseudoSElement: 'Pseudo ::{PH1} element',\n  /**\n   * @description Text of a DOM element in Styles Sidebar Pane of the Elements panel\n   */\n  inheritedFroms: 'Inherited from ',\n  /**\n   * @description Text of an inherited pseudo element in Styles Sidebar Pane of the Elements panel\n   * @example {highlight} PH1\n   */\n  inheritedFromSPseudoOf: 'Inherited from ::{PH1} pseudo of ',\n  /**\n   * @description Title of  in styles sidebar pane of the elements panel\n   * @example {Ctrl} PH1\n   * @example {Alt} PH2\n   */\n  incrementdecrementWithMousewheelOne:\n      'Increment/decrement with mousewheel or up/down keys. {PH1}: R ±1, Shift: G ±1, {PH2}: B ±1',\n  /**\n   * @description Title of  in styles sidebar pane of the elements panel\n   * @example {Ctrl} PH1\n   * @example {Alt} PH2\n   */\n  incrementdecrementWithMousewheelHundred:\n      'Increment/decrement with mousewheel or up/down keys. {PH1}: ±100, Shift: ±10, {PH2}: ±0.1',\n  /**\n   * @description Tooltip text that appears when hovering over the rendering button in the Styles Sidebar Pane of the Elements panel\n   */\n  toggleRenderingEmulations: 'Toggle common rendering emulations',\n  /**\n   * @description Rendering emulation option for toggling the automatic dark mode\n   */\n  automaticDarkMode: 'Automatic dark mode',\n  /**\n   * @description Text displayed on layer separators in the styles sidebar pane.\n   */\n  layer: 'Layer',\n  /**\n   * @description Tooltip text for the link in the sidebar pane layer separators that reveals the layer in the layer tree view.\n   */\n  clickToRevealLayer: 'Click to reveal layer in layer tree',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/StylesSidebarPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// Number of ms elapsed with no keypresses to determine is the input is finished, to announce results\nconst FILTER_IDLE_PERIOD = 500;\n// Minimum number of @property rules for the @property section block to be folded initially\nconst MIN_FOLDED_SECTIONS_COUNT = 5;\n// Title of the registered properties section\nexport const REGISTERED_PROPERTY_SECTION_NAME = '@property';\n// Title of the function section\nexport const FUNCTION_SECTION_NAME = '@function';\n\n// Highlightable properties are those that can be hovered in the sidebar to trigger a specific\n// highlighting mode on the current element.\nconst HIGHLIGHTABLE_PROPERTIES = [\n  {mode: 'padding', properties: ['padding']},\n  {mode: 'border', properties: ['border']},\n  {mode: 'margin', properties: ['margin']},\n  {mode: 'gap', properties: ['gap', 'grid-gap']},\n  {mode: 'column-gap', properties: ['column-gap', 'grid-column-gap']},\n  {mode: 'row-gap', properties: ['row-gap', 'grid-row-gap']},\n  {mode: 'grid-template-columns', properties: ['grid-template-columns']},\n  {mode: 'grid-template-rows', properties: ['grid-template-rows']},\n  {mode: 'grid-template-areas', properties: ['grid-areas']},\n  {mode: 'justify-content', properties: ['justify-content']},\n  {mode: 'align-content', properties: ['align-content']},\n  {mode: 'align-items', properties: ['align-items']},\n  {mode: 'flexibility', properties: ['flex', 'flex-basis', 'flex-grow', 'flex-shrink']},\n];\n\nexport class StylesSidebarPane extends Common.ObjectWrapper.eventMixin<EventTypes, typeof ElementsSidebarPane>(\n    ElementsSidebarPane) {\n  private matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles|null = null;\n  private currentToolbarPane: UI.Widget.Widget|null = null;\n  private animatedToolbarPane: UI.Widget.Widget|null = null;\n  private pendingWidget: UI.Widget.Widget|null = null;\n  private pendingWidgetToggle: UI.Toolbar.ToolbarToggle|null = null;\n  private toolbar: UI.Toolbar.Toolbar|null = null;\n  private toolbarPaneElement: HTMLElement;\n  private lastFilterChange: number|null = null;\n  private visibleSections: number|null = null;\n  private noMatchesElement: HTMLElement;\n  private sectionsContainer: UI.Widget.Widget;\n  sectionByElement = new WeakMap<Node, StylePropertiesSection>();\n  readonly #swatchPopoverHelper = new InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper();\n  readonly linkifier = new Components.Linkifier.Linkifier(MAX_LINK_LENGTH, /* useLinkDecorator */ true);\n\n  private readonly decorator: StylePropertyHighlighter;\n\n  private lastRevealedProperty: SDK.CSSProperty.CSSProperty|null = null;\n  private userOperation = false;\n  isEditingStyle = false;\n  #filterRegex: RegExp|null = null;\n  private isActivePropertyHighlighted = false;\n  private initialUpdateCompleted = false;\n  hasMatchedStyles = false;\n  private sectionBlocks: SectionBlock[] = [];\n  private idleCallbackManager: IdleCallbackManager|null = null;\n  private needsForceUpdate = false;\n  private readonly resizeThrottler = new Common.Throttler.Throttler(100);\n  private readonly resetUpdateThrottler = new Common.Throttler.Throttler(500);\n  private readonly computedStyleUpdateThrottler = new Common.Throttler.Throttler(500);\n\n  private scrollerElement?: Element;\n  private readonly boundOnScroll: (event: Event) => void;\n\n  private readonly imagePreviewPopover: ImagePreviewPopover;\n  #webCustomData?: WebCustomData;\n\n  activeCSSAngle: InlineEditor.CSSAngle.CSSAngle|null = null;\n  #updateAbortController?: AbortController;\n  #updateComputedStylesAbortController?: AbortController;\n\n  constructor(computedStyleModel: ComputedStyleModel) {\n    super(computedStyleModel, true /* delegatesFocus */);\n    this.setMinimumSize(96, 26);\n    this.registerRequiredCSS(stylesSidebarPaneStyles);\n    Common.Settings.Settings.instance().moduleSetting('text-editor-indent').addChangeListener(this.update.bind(this));\n    this.toolbarPaneElement = this.createStylesSidebarToolbar();\n    this.noMatchesElement = this.contentElement.createChild('div', 'gray-info-message hidden');\n    this.noMatchesElement.textContent = i18nString(UIStrings.noMatchingSelectorOrStyle);\n    this.sectionsContainer = new UI.Widget.VBox();\n    this.sectionsContainer.show(this.contentElement);\n    UI.ARIAUtils.markAsList(this.sectionsContainer.contentElement);\n    this.sectionsContainer.contentElement.addEventListener('keydown', this.sectionsContainerKeyDown.bind(this), false);\n    this.sectionsContainer.contentElement.addEventListener(\n        'focusin', this.sectionsContainerFocusChanged.bind(this), false);\n    this.sectionsContainer.contentElement.addEventListener(\n        'focusout', this.sectionsContainerFocusChanged.bind(this), false);\n\n    this.#swatchPopoverHelper.addEventListener(\n        InlineEditor.SwatchPopoverHelper.Events.WILL_SHOW_POPOVER, this.hideAllPopovers, this);\n    this.decorator = new StylePropertyHighlighter(this);\n    this.contentElement.classList.add('styles-pane');\n\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.forceUpdate, this);\n    this.contentElement.addEventListener('copy', this.clipboardCopy.bind(this));\n\n    this.boundOnScroll = this.onScroll.bind(this);\n    this.imagePreviewPopover = new ImagePreviewPopover(this.contentElement, event => {\n      const link = event.composedPath()[0];\n      if (link instanceof Element) {\n        return link;\n      }\n      return null;\n    }, () => this.node());\n  }\n\n  get webCustomData(): WebCustomData|undefined {\n    if (!this.#webCustomData &&\n        Common.Settings.Settings.instance().moduleSetting('show-css-property-documentation-on-hover').get()) {\n      // WebCustomData.create() fetches the property docs, so this must happen lazily.\n      this.#webCustomData = WebCustomData.create();\n    }\n    return this.#webCustomData;\n  }\n\n  private onScroll(_event: Event): void {\n    this.hideAllPopovers();\n  }\n\n  swatchPopoverHelper(): InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper {\n    return this.#swatchPopoverHelper;\n  }\n\n  setUserOperation(userOperation: boolean): void {\n    this.userOperation = userOperation;\n  }\n\n  static ignoreErrorsForProperty(property: SDK.CSSProperty.CSSProperty): boolean {\n    function hasUnknownVendorPrefix(string: string): boolean {\n      return !string.startsWith('-webkit-') && /^[-_][\\w\\d]+-\\w/.test(string);\n    }\n\n    const name = property.name.toLowerCase();\n\n    // IE hack.\n    if (name.charAt(0) === '_') {\n      return true;\n    }\n\n    // IE has a different format for this.\n    if (name === 'filter') {\n      return true;\n    }\n\n    // Common IE-specific property prefix.\n    if (name.startsWith('scrollbar-')) {\n      return true;\n    }\n    if (hasUnknownVendorPrefix(name)) {\n      return true;\n    }\n\n    const value = property.value.toLowerCase();\n\n    // IE hack.\n    if (value.endsWith('\\\\9')) {\n      return true;\n    }\n    if (hasUnknownVendorPrefix(value)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  static formatLeadingProperties(section: StylePropertiesSection): {\n    allDeclarationText: string,\n    ruleText: string,\n  } {\n    const selectorText = section.headerText();\n    const indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n\n    const style = section.style();\n    const lines: string[] = [];\n\n    // Invalid property should also be copied.\n    // For example: *display: inline.\n    for (const property of style.leadingProperties()) {\n      if (property.disabled) {\n        lines.push(`${indent}/* ${property.name}: ${property.value}; */`);\n      } else {\n        lines.push(`${indent}${property.name}: ${property.value};`);\n      }\n    }\n\n    const allDeclarationText: string = lines.join('\\n');\n    const ruleText = `${selectorText} {\\n${allDeclarationText}\\n}`;\n\n    return {\n      allDeclarationText,\n      ruleText,\n    };\n  }\n\n  revealProperty(cssProperty: SDK.CSSProperty.CSSProperty): void {\n    void this.decorator.highlightProperty(cssProperty);\n    this.lastRevealedProperty = cssProperty;\n    this.update();\n  }\n\n  jumpToProperty(propertyName: string, sectionName?: string, blockName?: string): boolean {\n    return this.decorator.findAndHighlightPropertyName(propertyName, sectionName, blockName);\n  }\n\n  jumpToDeclaration(valueSource: SDK.CSSMatchedStyles.CSSValueSource): void {\n    if (valueSource.declaration instanceof SDK.CSSProperty.CSSProperty) {\n      this.revealProperty(valueSource.declaration);\n    } else {\n      this.jumpToProperty('initial-value', valueSource.name, REGISTERED_PROPERTY_SECTION_NAME);\n    }\n  }\n\n  jumpToSection(sectionName: string, blockName: string): void {\n    this.decorator.findAndHighlightSection(sectionName, blockName);\n  }\n\n  jumpToSectionBlock(section: string): void {\n    this.decorator.findAndHighlightSectionBlock(section);\n  }\n\n  jumpToFunctionDefinition(functionName: string): void {\n    this.jumpToSection(functionName, FUNCTION_SECTION_NAME);\n  }\n\n  forceUpdate(): void {\n    this.needsForceUpdate = true;\n    this.#swatchPopoverHelper.hide();\n    this.#updateAbortController?.abort();\n    this.resetCache();\n    this.update();\n  }\n\n  private sectionsContainerKeyDown(event: Event): void {\n    const activeElement = Platform.DOMUtilities.deepActiveElement(this.sectionsContainer.contentElement.ownerDocument);\n    if (!activeElement) {\n      return;\n    }\n    const section = this.sectionByElement.get(activeElement);\n    if (!section) {\n      return;\n    }\n    let sectionToFocus: (StylePropertiesSection|null)|null = null;\n    let willIterateForward = false;\n    switch ((event as KeyboardEvent).key) {\n      case 'ArrowUp':\n      case 'ArrowLeft': {\n        sectionToFocus = section.previousSibling() || section.lastSibling();\n        willIterateForward = false;\n        break;\n      }\n      case 'ArrowDown':\n      case 'ArrowRight': {\n        sectionToFocus = section.nextSibling() || section.firstSibling();\n        willIterateForward = true;\n        break;\n      }\n      case 'Home': {\n        sectionToFocus = section.firstSibling();\n        willIterateForward = true;\n        break;\n      }\n      case 'End': {\n        sectionToFocus = section.lastSibling();\n        willIterateForward = false;\n        break;\n      }\n    }\n\n    if (sectionToFocus && this.#filterRegex) {\n      sectionToFocus = sectionToFocus.findCurrentOrNextVisible(/* willIterateForward= */ willIterateForward);\n    }\n    if (sectionToFocus) {\n      sectionToFocus.element.focus();\n      event.consume(true);\n    }\n  }\n\n  private sectionsContainerFocusChanged(): void {\n    this.resetFocus();\n  }\n\n  resetFocus(): void {\n    // When a styles section is focused, shift+tab should leave the section.\n    // Leaving tabIndex = 0 on the first element would cause it to be focused instead.\n    if (!this.noMatchesElement.classList.contains('hidden')) {\n      return;\n    }\n    if (this.sectionBlocks[0]?.sections[0]) {\n      const firstVisibleSection =\n          this.sectionBlocks[0].sections[0].findCurrentOrNextVisible(/* willIterateForward= */ true);\n      if (firstVisibleSection) {\n        firstVisibleSection.element.tabIndex = this.sectionsContainer.hasFocus() ? -1 : 0;\n      }\n    }\n  }\n\n  onAddButtonLongClick(event: Event): void {\n    const cssModel = this.cssModel();\n    if (!cssModel) {\n      return;\n    }\n    const headers = cssModel.styleSheetHeaders().filter(styleSheetResourceHeader);\n\n    const contextMenuDescriptors: Array<{\n      text: string,\n      handler: () => Promise<void>,\n    }> = [];\n    for (let i = 0; i < headers.length; ++i) {\n      const header = headers[i];\n      const handler = this.createNewRuleInStyleSheet.bind(this, header);\n      contextMenuDescriptors.push({text: Bindings.ResourceUtils.displayNameForURL(header.resourceURL()), handler});\n    }\n\n    contextMenuDescriptors.sort(compareDescriptors);\n\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    for (let i = 0; i < contextMenuDescriptors.length; ++i) {\n      const descriptor = contextMenuDescriptors[i];\n      contextMenu.defaultSection().appendItem(\n          descriptor.text, descriptor.handler, {jslogContext: 'style-sheet-header'});\n    }\n    contextMenu.footerSection().appendItem(\n        'inspector-stylesheet', this.createNewRuleInViaInspectorStyleSheet.bind(this),\n        {jslogContext: 'inspector-stylesheet'});\n    void contextMenu.show();\n\n    function compareDescriptors(\n        descriptor1: {\n          text: string,\n          handler: () => Promise<void>,\n        },\n        descriptor2: {\n          text: string,\n          handler: () => Promise<void>,\n        }): number {\n      return Platform.StringUtilities.naturalOrderComparator(descriptor1.text, descriptor2.text);\n    }\n\n    function styleSheetResourceHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): boolean {\n      return !header.isViaInspector() && !header.isInline && Boolean(header.resourceURL());\n    }\n  }\n\n  private onFilterChanged(event: Common.EventTarget.EventTargetEvent<string>): void {\n    const regex = event.data ? new RegExp(Platform.StringUtilities.escapeForRegExp(event.data), 'i') : null;\n    this.lastFilterChange = Date.now();\n    this.#filterRegex = regex;\n    this.updateFilter();\n    this.resetFocus();\n    setTimeout(() => {\n      if (this.lastFilterChange) {\n        const stillTyping = Date.now() - this.lastFilterChange < FILTER_IDLE_PERIOD;\n        if (!stillTyping) {\n          UI.ARIAUtils.LiveAnnouncer.alert(\n              this.visibleSections ? i18nString(UIStrings.visibleSelectors, {n: this.visibleSections}) :\n                                     i18nString(UIStrings.noMatchingSelectorOrStyle));\n        }\n      }\n    }, FILTER_IDLE_PERIOD);\n  }\n\n  refreshUpdate(editedSection: StylePropertiesSection, editedTreeElement?: StylePropertyTreeElement): void {\n    if (editedTreeElement) {\n      for (const section of this.allSections()) {\n        if (section instanceof BlankStylePropertiesSection && section.isBlank) {\n          continue;\n        }\n        section.updateVarFunctions(editedTreeElement);\n      }\n    }\n\n    if (this.isEditingStyle) {\n      return;\n    }\n    const node = this.node();\n    if (!node) {\n      return;\n    }\n\n    for (const section of this.allSections()) {\n      if (section instanceof BlankStylePropertiesSection && section.isBlank) {\n        continue;\n      }\n      section.update(section === editedSection);\n    }\n\n    if (this.#filterRegex) {\n      this.updateFilter();\n    }\n    this.swatchPopoverHelper().reposition();\n    this.nodeStylesUpdatedForTest(node, false);\n  }\n\n  override async doUpdate(): Promise<void> {\n    this.#updateAbortController?.abort();\n    this.#updateAbortController = new AbortController();\n    await this.#innerDoUpdate(this.#updateAbortController.signal);\n\n    // Hide all popovers when scrolling.\n    // Styles and Computed panels both have popover (e.g. imagePreviewPopover),\n    // so we need to bind both scroll events.\n    const scrollerElementLists =\n        this?.contentElement?.enclosingNodeOrSelfWithClass('style-panes-wrapper')\n            ?.parentElement?.querySelectorAll('.style-panes-wrapper') as unknown as NodeListOf<Element>;\n    if (scrollerElementLists.length > 0) {\n      for (const element of scrollerElementLists) {\n        this.scrollerElement = element;\n        this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n      }\n    }\n  }\n\n  async #innerDoUpdate(signal: AbortSignal): Promise<void> {\n    if (!this.initialUpdateCompleted) {\n      window.setTimeout(() => {\n        if (signal.aborted) {\n          return;\n        }\n        if (!this.initialUpdateCompleted) {\n          // the spinner will get automatically removed when innerRebuildUpdate is called\n          this.sectionsContainer.contentElement.createChild('span', 'spinner');\n        }\n      }, 200 /* only spin for loading time > 200ms to avoid unpleasant render flashes */);\n    }\n\n    const matchedStyles = await this.fetchMatchedCascade();\n\n    if (signal.aborted) {\n      return;\n    }\n\n    this.matchedStyles = matchedStyles;\n    const nodeId = this.node()?.id;\n    const parentNodeId = this.matchedStyles?.getParentLayoutNodeId();\n\n    const [computedStyles, parentsComputedStyles] =\n        await Promise.all([this.fetchComputedStylesFor(nodeId), this.fetchComputedStylesFor(parentNodeId)]);\n\n    if (signal.aborted) {\n      return;\n    }\n\n    await this.innerRebuildUpdate(signal, this.matchedStyles, computedStyles, parentsComputedStyles);\n\n    if (signal.aborted) {\n      return;\n    }\n\n    if (!this.initialUpdateCompleted) {\n      this.initialUpdateCompleted = true;\n      this.appendToolbarItem(this.createRenderingShortcuts());\n      this.dispatchEventToListeners(Events.INITIAL_UPDATE_COMPLETED);\n    }\n\n    this.nodeStylesUpdatedForTest((this.node() as SDK.DOMModel.DOMNode), true);\n\n    this.dispatchEventToListeners(Events.STYLES_UPDATE_COMPLETED, {hasMatchedStyles: this.hasMatchedStyles});\n  }\n\n  #getRegisteredPropertyDetails(matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, variableName: string):\n      ElementsComponents.CSSVariableValueView.RegisteredPropertyDetails|undefined {\n    const registration = matchedStyles.getRegisteredProperty(variableName);\n    const goToDefinition = (): void => this.jumpToSection(variableName, REGISTERED_PROPERTY_SECTION_NAME);\n    return registration ? {registration, goToDefinition} : undefined;\n  }\n\n  getVariableParserError(matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, variableName: string):\n      ElementsComponents.CSSVariableValueView.CSSVariableParserError|null {\n    const registrationDetails = this.#getRegisteredPropertyDetails(matchedStyles, variableName);\n    return registrationDetails ?\n        new ElementsComponents.CSSVariableValueView.CSSVariableParserError(registrationDetails) :\n        null;\n  }\n\n  getVariablePopoverContents(\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, variableName: string,\n      computedValue: string|null): ElementsComponents.CSSVariableValueView.CSSVariableValueView {\n    return new ElementsComponents.CSSVariableValueView.CSSVariableValueView({\n      variableName,\n      value: computedValue ?? undefined,\n      details: this.#getRegisteredPropertyDetails(matchedStyles, variableName),\n    });\n  }\n\n  private async fetchComputedStylesFor(nodeId: Protocol.DOM.NodeId|undefined): Promise<Map<string, string>|null> {\n    const node = this.node();\n    if (node === null || nodeId === undefined) {\n      return null;\n    }\n    return await node.domModel().cssModel().getComputedStyle(nodeId);\n  }\n\n  override onResize(): void {\n    void this.resizeThrottler.schedule(this.innerResize.bind(this));\n  }\n\n  private innerResize(): Promise<void> {\n    const width = this.contentElement.getBoundingClientRect().width + 'px';\n    this.allSections().forEach(section => {\n      section.propertiesTreeOutline.element.style.width = width;\n    });\n    this.hideAllPopovers();\n    return Promise.resolve();\n  }\n\n  private resetCache(): void {\n    const cssModel = this.cssModel();\n    if (cssModel) {\n      cssModel.discardCachedMatchedCascade();\n    }\n  }\n\n  private fetchMatchedCascade(): Promise<SDK.CSSMatchedStyles.CSSMatchedStyles|null> {\n    const node = this.node();\n    if (!node || !this.cssModel()) {\n      return Promise.resolve((null as SDK.CSSMatchedStyles.CSSMatchedStyles | null));\n    }\n\n    const cssModel = this.cssModel();\n    if (!cssModel) {\n      return Promise.resolve(null);\n    }\n    return cssModel.cachedMatchedCascadeForNode(node).then(validateStyles.bind(this));\n\n    function validateStyles(this: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles|null):\n        SDK.CSSMatchedStyles.CSSMatchedStyles|null {\n      return matchedStyles && matchedStyles.node() === this.node() ? matchedStyles : null;\n    }\n  }\n\n  setEditingStyle(editing: boolean): void {\n    if (this.isEditingStyle === editing) {\n      return;\n    }\n    this.contentElement.classList.toggle('is-editing-style', editing);\n    this.isEditingStyle = editing;\n    this.setActiveProperty(null);\n  }\n\n  setActiveProperty(treeElement: StylePropertyTreeElement|null): void {\n    if (this.isActivePropertyHighlighted) {\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n    this.isActivePropertyHighlighted = false;\n\n    if (!this.node()) {\n      return;\n    }\n\n    if (!treeElement || treeElement.overloaded() || treeElement.inherited()) {\n      return;\n    }\n\n    const rule = treeElement.property.ownerStyle.parentRule;\n    const selectorList = (rule instanceof SDK.CSSRule.CSSStyleRule) ? rule.selectorText() : undefined;\n    for (const {properties, mode} of HIGHLIGHTABLE_PROPERTIES) {\n      if (!properties.includes(treeElement.name)) {\n        continue;\n      }\n      const node = this.node();\n      if (!node) {\n        continue;\n      }\n      node.domModel().overlayModel().highlightInOverlay(\n          {node: (this.node() as SDK.DOMModel.DOMNode), selectorList}, mode);\n      this.isActivePropertyHighlighted = true;\n      break;\n    }\n  }\n\n  override onCSSModelChanged(event: Common.EventTarget.EventTargetEvent<CSSModelChangedEvent>): void {\n    const edit = event?.data && 'edit' in event.data ? event.data.edit : null;\n    if (edit) {\n      for (const section of this.allSections()) {\n        section.styleSheetEdited(edit);\n      }\n      void this.#refreshComputedStyles();\n      return;\n    }\n\n    this.#resetUpdateIfNotEditing();\n  }\n\n  override onComputedStyleChanged(): void {\n    if (!Root.Runtime.hostConfig.devToolsAnimationStylesInStylesTab?.enabled) {\n      return;\n    }\n\n    void this.computedStyleUpdateThrottler.schedule(async () => {\n      await this.#updateAnimatedStyles();\n      this.handledComputedStyleChangedForTest();\n    });\n  }\n\n  handledComputedStyleChangedForTest(): void {\n  }\n\n  #resetUpdateIfNotEditing(): void {\n    if (this.userOperation || this.isEditingStyle) {\n      void this.#refreshComputedStyles();\n      return;\n    }\n\n    this.resetCache();\n    this.update();\n  }\n\n  #scheduleResetUpdateIfNotEditing(): void {\n    this.scheduleResetUpdateIfNotEditingCalledForTest();\n\n    void this.resetUpdateThrottler.schedule(async () => {\n      this.#resetUpdateIfNotEditing();\n    });\n  }\n\n  scheduleResetUpdateIfNotEditingCalledForTest(): void {\n  }\n\n  async #updateAnimatedStyles(): Promise<void> {\n    if (!this.matchedStyles) {\n      return;\n    }\n\n    const nodeId = this.node()?.id;\n    if (!nodeId) {\n      return;\n    }\n\n    const animatedStyles = await this.cssModel()?.getAnimatedStylesForNode(nodeId);\n    if (!animatedStyles) {\n      return;\n    }\n\n    const updateStyleSection =\n        (currentStyle: SDK.CSSStyleDeclaration.CSSStyleDeclaration|null, newStyle: Protocol.CSS.CSSStyle|null):\n            void => {\n              // The newly fetched matched styles contain a new style.\n              if (newStyle) {\n                // If the number of CSS properties in the new style\n                // differs from the current style, it indicates a potential change\n                // in property overrides. In this case, re-fetch the entire style\n                // cascade to ensure accurate updates.\n                if (currentStyle?.allProperties().length !== newStyle.cssProperties.length) {\n                  this.#scheduleResetUpdateIfNotEditing();\n                  return;\n                }\n\n                // If the number of properties remains the same, update the\n                // existing style properties with the new values from the\n                // fetched style.\n                currentStyle.allProperties().forEach((property, index) => {\n                  const newProperty = newStyle.cssProperties[index];\n                  if (!newProperty) {\n                    return;\n                  }\n\n                  property.setLocalValue(newProperty.value);\n                });\n              } else if (currentStyle) {\n                // If no new style is fetched while a current style exists,\n                // it implies the style has been removed (e.g., animation or\n                // transition ended). Trigger a reset and update the UI to\n                // reflect this change.\n                this.#scheduleResetUpdateIfNotEditing();\n                return;\n              }\n            };\n\n    updateStyleSection(this.matchedStyles.transitionsStyle() ?? null, animatedStyles.transitionsStyle ?? null);\n\n    const animationStyles = this.matchedStyles.animationStyles() ?? [];\n    const animationStylesPayload = animatedStyles.animationStyles ?? [];\n    // There either is a new animation or a previous animation is ended.\n    if (animationStyles.length !== animationStylesPayload.length) {\n      this.#scheduleResetUpdateIfNotEditing();\n      return;\n    }\n\n    for (let i = 0; i < animationStyles.length; i++) {\n      const currentAnimationStyle = animationStyles[i];\n      const nextAnimationStyle = animationStylesPayload[i].style;\n      updateStyleSection(currentAnimationStyle ?? null, nextAnimationStyle);\n    }\n\n    const inheritedStyles = this.matchedStyles.inheritedStyles() ?? [];\n    const currentInheritedTransitionsStyles =\n        inheritedStyles.filter(style => style.type === SDK.CSSStyleDeclaration.Type.Transition);\n    const newInheritedTransitionsStyles =\n        animatedStyles.inherited?.map(inherited => inherited.transitionsStyle)\n            .filter(\n                style => style?.cssProperties.some(\n                    cssProperty => SDK.CSSMetadata.cssMetadata().isPropertyInherited(cssProperty.name))) ??\n        [];\n    if (currentInheritedTransitionsStyles.length !== newInheritedTransitionsStyles.length) {\n      this.#scheduleResetUpdateIfNotEditing();\n      return;\n    }\n\n    for (let i = 0; i < currentInheritedTransitionsStyles.length; i++) {\n      const currentInheritedTransitionsStyle = currentInheritedTransitionsStyles[i];\n      const newInheritedTransitionsStyle = newInheritedTransitionsStyles[i];\n      updateStyleSection(currentInheritedTransitionsStyle, newInheritedTransitionsStyle ?? null);\n    }\n\n    const currentInheritedAnimationsStyles =\n        inheritedStyles.filter(style => style.type === SDK.CSSStyleDeclaration.Type.Animation);\n    const newInheritedAnimationsStyles =\n        animatedStyles.inherited?.flatMap(inherited => inherited.animationStyles)\n            .filter(\n                animationStyle => animationStyle?.style.cssProperties.some(\n                    cssProperty => SDK.CSSMetadata.cssMetadata().isPropertyInherited(cssProperty.name))) ??\n        [];\n    if (currentInheritedAnimationsStyles.length !== newInheritedAnimationsStyles.length) {\n      this.#scheduleResetUpdateIfNotEditing();\n      return;\n    }\n\n    for (let i = 0; i < currentInheritedAnimationsStyles.length; i++) {\n      const currentInheritedAnimationsStyle = currentInheritedAnimationsStyles[i];\n      const newInheritedAnimationsStyle = newInheritedAnimationsStyles[i]?.style;\n      updateStyleSection(currentInheritedAnimationsStyle, newInheritedAnimationsStyle ?? null);\n    }\n  }\n\n  async #refreshComputedStyles(): Promise<void> {\n    this.#updateComputedStylesAbortController?.abort();\n    this.#updateAbortController = new AbortController();\n    const signal = this.#updateAbortController.signal;\n    const matchedStyles = await this.fetchMatchedCascade();\n    const nodeId = this.node()?.id;\n    const parentNodeId = matchedStyles?.getParentLayoutNodeId();\n\n    const [computedStyles, parentsComputedStyles] =\n        await Promise.all([this.fetchComputedStylesFor(nodeId), this.fetchComputedStylesFor(parentNodeId)]);\n\n    if (signal.aborted) {\n      return;\n    }\n\n    for (const section of this.allSections()) {\n      section.setComputedStyles(computedStyles);\n      section.setParentsComputedStyles(parentsComputedStyles);\n      section.updateAuthoringHint();\n    }\n  }\n\n  focusedSectionIndex(): number {\n    let index = 0;\n    for (const block of this.sectionBlocks) {\n      for (const section of block.sections) {\n        if (section.element.hasFocus()) {\n          return index;\n        }\n        index++;\n      }\n    }\n    return -1;\n  }\n\n  continueEditingElement(sectionIndex: number, propertyIndex: number): void {\n    const section = this.allSections()[sectionIndex];\n    if (section) {\n      const element = (section.closestPropertyForEditing(propertyIndex) as StylePropertyTreeElement | null);\n      if (!element) {\n        section.element.focus();\n        return;\n      }\n      element.startEditingName();\n    }\n  }\n\n  private async innerRebuildUpdate(\n      signal: AbortSignal, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles|null,\n      computedStyles: Map<string, string>|null, parentsComputedStyles: Map<string, string>|null): Promise<void> {\n    // ElementsSidebarPane's throttler schedules this method. Usually,\n    // rebuild is suppressed while editing (see onCSSModelChanged()), but we need a\n    // 'force' flag since the currently running throttler process cannot be canceled.\n    if (this.needsForceUpdate) {\n      this.needsForceUpdate = false;\n    } else if (this.isEditingStyle || this.userOperation) {\n      return;\n    }\n\n    const focusedIndex = this.focusedSectionIndex();\n\n    this.linkifier.reset();\n    const prevSections = this.sectionBlocks.map(block => block.sections).flat();\n    this.sectionBlocks = [];\n\n    const node = this.node();\n    this.hasMatchedStyles = matchedStyles !== null && node !== null;\n    if (!this.hasMatchedStyles) {\n      this.sectionsContainer.contentElement.removeChildren();\n      this.sectionsContainer.detachChildWidgets();\n      this.noMatchesElement.classList.remove('hidden');\n      return;\n    }\n\n    const blocks = await this.rebuildSectionsForMatchedStyleRules(\n        (matchedStyles as SDK.CSSMatchedStyles.CSSMatchedStyles), computedStyles, parentsComputedStyles);\n\n    if (signal.aborted) {\n      return;\n    }\n\n    this.sectionBlocks = blocks;\n\n    // Style sections maybe re-created when flexbox editor is activated.\n    // With the following code we re-bind the flexbox editor to the new\n    // section with the same index as the previous section had.\n    const newSections = this.sectionBlocks.map(block => block.sections).flat();\n    const styleEditorWidget = StyleEditorWidget.instance();\n    const boundSection = styleEditorWidget.getSection();\n    if (boundSection) {\n      styleEditorWidget.unbindContext();\n      for (const [index, prevSection] of prevSections.entries()) {\n        if (boundSection === prevSection && index < newSections.length) {\n          styleEditorWidget.bindContext(this, newSections[index]);\n        }\n      }\n    }\n\n    this.sectionsContainer.contentElement.removeChildren();\n    this.sectionsContainer.detachChildWidgets();\n    const fragment = document.createDocumentFragment();\n\n    let index = 0;\n    let elementToFocus: HTMLDivElement|null = null;\n    for (const block of this.sectionBlocks) {\n      const titleElement = block.titleElement();\n      if (titleElement) {\n        fragment.appendChild(titleElement);\n      }\n      for (const section of block.sections) {\n        fragment.appendChild(section.element);\n        if (index === focusedIndex) {\n          elementToFocus = section.element;\n        }\n        index++;\n      }\n    }\n\n    this.sectionsContainer.contentElement.appendChild(fragment);\n\n    if (elementToFocus) {\n      elementToFocus.focus();\n    }\n\n    if (focusedIndex >= index) {\n      this.sectionBlocks[0].sections[0].element.focus();\n    }\n\n    this.sectionsContainerFocusChanged();\n\n    if (this.#filterRegex) {\n      this.updateFilter();\n    } else {\n      this.noMatchesElement.classList.toggle('hidden', this.sectionBlocks.length > 0);\n    }\n    if (this.lastRevealedProperty) {\n      void this.decorator.highlightProperty(this.lastRevealedProperty);\n      this.lastRevealedProperty = null;\n    }\n\n    this.swatchPopoverHelper().reposition();\n\n    // Record the elements tool load time after the sidepane has loaded.\n    Host.userMetrics.panelLoaded('elements', 'DevTools.Launch.Elements');\n\n    this.dispatchEventToListeners(Events.STYLES_UPDATE_COMPLETED, {hasMatchedStyles: false});\n  }\n\n  private nodeStylesUpdatedForTest(_node: SDK.DOMModel.DOMNode, _rebuild: boolean): void {\n    // For sniffing in tests.\n  }\n\n  setMatchedStylesForTest(matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles): void {\n    this.matchedStyles = matchedStyles;\n  }\n\n  rebuildSectionsForMatchedStyleRulesForTest(\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, computedStyles: Map<string, string>|null,\n      parentsComputedStyles: Map<string, string>|null): Promise<SectionBlock[]> {\n    return this.rebuildSectionsForMatchedStyleRules(matchedStyles, computedStyles, parentsComputedStyles);\n  }\n\n  private async rebuildSectionsForMatchedStyleRules(\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, computedStyles: Map<string, string>|null,\n      parentsComputedStyles: Map<string, string>|null): Promise<SectionBlock[]> {\n    if (this.idleCallbackManager) {\n      this.idleCallbackManager.discard();\n    }\n\n    this.idleCallbackManager = new IdleCallbackManager();\n\n    const blocks = [new SectionBlock(null)];\n    let sectionIdx = 0;\n    let lastParentNode: SDK.DOMModel.DOMNode|null = null;\n\n    let lastLayers: SDK.CSSLayer.CSSLayer[]|null = null;\n    let sawLayers = false;\n\n    const addLayerSeparator = (style: SDK.CSSStyleDeclaration.CSSStyleDeclaration): void => {\n      const parentRule = style.parentRule;\n      if (parentRule instanceof SDK.CSSRule.CSSStyleRule) {\n        const layers = parentRule.layers;\n        if ((layers.length || lastLayers) && lastLayers !== layers) {\n          const block = SectionBlock.createLayerBlock(parentRule);\n          blocks.push(block);\n          sawLayers = true;\n          lastLayers = layers;\n        }\n      }\n    };\n\n    // We disable the layer widget initially. If we see a layer in\n    // the matched styles we reenable the button.\n    LayersWidget.ButtonProvider.instance().item().setVisible(false);\n\n    for (const style of matchedStyles.nodeStyles()) {\n      const parentNode = matchedStyles.isInherited(style) ? matchedStyles.nodeForStyle(style) : null;\n      if (parentNode && parentNode !== lastParentNode) {\n        lastParentNode = parentNode;\n        const block = await SectionBlock.createInheritedNodeBlock(lastParentNode);\n        blocks.push(block);\n      }\n\n      addLayerSeparator(style);\n\n      const lastBlock = blocks[blocks.length - 1];\n      const isTransitionOrAnimationStyle = style.type === SDK.CSSStyleDeclaration.Type.Transition ||\n          style.type === SDK.CSSStyleDeclaration.Type.Animation;\n      if (lastBlock && (!isTransitionOrAnimationStyle || style.allProperties().length > 0)) {\n        this.idleCallbackManager.schedule(() => {\n          const section =\n              new StylePropertiesSection(this, matchedStyles, style, sectionIdx, computedStyles, parentsComputedStyles);\n          sectionIdx++;\n          lastBlock.sections.push(section);\n        });\n      }\n    }\n\n    const customHighlightPseudoRulesets: Array<{\n      highlightName: string | null,\n      pseudoType: Protocol.DOM.PseudoType,\n      pseudoStyles: SDK.CSSStyleDeclaration.CSSStyleDeclaration[],\n    }> = Array.from(matchedStyles.customHighlightPseudoNames()).map(highlightName => {\n      return {\n        highlightName,\n        pseudoType: Protocol.DOM.PseudoType.Highlight,\n        pseudoStyles: matchedStyles.customHighlightPseudoStyles(highlightName),\n      };\n    });\n\n    const otherPseudoRulesets: Array<{\n      highlightName: string | null,\n      pseudoType: Protocol.DOM.PseudoType,\n      pseudoStyles: SDK.CSSStyleDeclaration.CSSStyleDeclaration[],\n    }> = [...matchedStyles.pseudoTypes()].map(pseudoType => {\n      return {highlightName: null, pseudoType, pseudoStyles: matchedStyles.pseudoStyles(pseudoType)};\n    });\n\n    const pseudoRulesets = customHighlightPseudoRulesets.concat(otherPseudoRulesets).sort((a, b) => {\n      // We want to show the ::before pseudos first, followed by the remaining pseudos\n      // in alphabetical order.\n      if (a.pseudoType === Protocol.DOM.PseudoType.Before && b.pseudoType !== Protocol.DOM.PseudoType.Before) {\n        return -1;\n      }\n      if (a.pseudoType !== Protocol.DOM.PseudoType.Before && b.pseudoType === Protocol.DOM.PseudoType.Before) {\n        return 1;\n      }\n      if (a.pseudoType < b.pseudoType) {\n        return -1;\n      }\n      if (a.pseudoType > b.pseudoType) {\n        return 1;\n      }\n      return 0;\n    });\n\n    for (const pseudo of pseudoRulesets) {\n      lastParentNode = null;\n      for (let i = 0; i < pseudo.pseudoStyles.length; ++i) {\n        const style = pseudo.pseudoStyles[i];\n        const parentNode = matchedStyles.isInherited(style) ? matchedStyles.nodeForStyle(style) : null;\n\n        // Start a new SectionBlock if this is the first rule for this pseudo type, or if this\n        // rule is inherited from a different parent than the previous rule.\n        if (i === 0 || parentNode !== lastParentNode) {\n          lastLayers = null;\n          if (parentNode) {\n            const block =\n                await SectionBlock.createInheritedPseudoTypeBlock(pseudo.pseudoType, pseudo.highlightName, parentNode);\n            blocks.push(block);\n          } else {\n            const block = SectionBlock.createPseudoTypeBlock(pseudo.pseudoType, pseudo.highlightName);\n            blocks.push(block);\n          }\n        }\n        lastParentNode = parentNode;\n\n        addLayerSeparator(style);\n        const lastBlock = blocks[blocks.length - 1];\n        this.idleCallbackManager.schedule(() => {\n          const section = new HighlightPseudoStylePropertiesSection(\n              this, matchedStyles, style, sectionIdx, computedStyles, parentsComputedStyles);\n          sectionIdx++;\n          lastBlock.sections.push(section);\n        });\n      }\n    }\n\n    for (const keyframesRule of matchedStyles.keyframes()) {\n      const block = SectionBlock.createKeyframesBlock(keyframesRule.name().text);\n      for (const keyframe of keyframesRule.keyframes()) {\n        this.idleCallbackManager.schedule(() => {\n          block.sections.push(new KeyframePropertiesSection(this, matchedStyles, keyframe.style, sectionIdx));\n          sectionIdx++;\n        });\n      }\n      blocks.push(block);\n    }\n\n    const fontPaletteValuesRule = matchedStyles.fontPaletteValuesRule();\n    if (fontPaletteValuesRule) {\n      const block = SectionBlock.createFontPaletteValuesRuleBlock(fontPaletteValuesRule.name().text);\n      this.idleCallbackManager.schedule(() => {\n        block.sections.push(\n            new FontPaletteValuesRuleSection(this, matchedStyles, fontPaletteValuesRule.style, sectionIdx));\n        sectionIdx++;\n      });\n      blocks.push(block);\n    }\n\n    for (const positionTryRule of matchedStyles.positionTryRules()) {\n      const block = SectionBlock.createPositionTryBlock(positionTryRule.name().text);\n      this.idleCallbackManager.schedule(() => {\n        block.sections.push(new PositionTryRuleSection(\n            this, matchedStyles, positionTryRule.style, sectionIdx, positionTryRule.active()));\n        sectionIdx++;\n      });\n      blocks.push(block);\n    }\n\n    if (matchedStyles.registeredProperties().length > 0) {\n      const expandedByDefault = matchedStyles.registeredProperties().length <= MIN_FOLDED_SECTIONS_COUNT;\n      const block = SectionBlock.createRegisteredPropertiesBlock(expandedByDefault);\n      for (const propertyRule of matchedStyles.registeredProperties()) {\n        this.idleCallbackManager.schedule(() => {\n          block.sections.push(new RegisteredPropertiesSection(\n              this, matchedStyles, propertyRule.style(), sectionIdx, propertyRule.propertyName(), expandedByDefault));\n          sectionIdx++;\n        });\n      }\n      blocks.push(block);\n    }\n\n    if (matchedStyles.functionRules().length > 0) {\n      const expandedByDefault = matchedStyles.functionRules().length <= MIN_FOLDED_SECTIONS_COUNT;\n      const block = SectionBlock.createFunctionBlock(expandedByDefault);\n      for (const functionRule of matchedStyles.functionRules()) {\n        this.idleCallbackManager.schedule(() => {\n          block.sections.push(new FunctionRuleSection(\n              this, matchedStyles, functionRule.style, functionRule.children(), sectionIdx,\n              functionRule.nameWithParameters(), expandedByDefault));\n          sectionIdx++;\n        });\n      }\n      blocks.push(block);\n    }\n\n    // If we have seen a layer in matched styles we enable\n    // the layer widget button.\n    if (sawLayers) {\n      LayersWidget.ButtonProvider.instance().item().setVisible(true);\n    } else if (LayersWidget.LayersWidget.instance().isShowing()) {\n      // Since the button for toggling the layers view is now hidden\n      // we ensure that the layers view is not currently toggled.\n      ElementsPanel.instance().showToolbarPane(null, LayersWidget.ButtonProvider.instance().item());\n    }\n\n    await this.idleCallbackManager.awaitDone();\n\n    return blocks;\n  }\n\n  async createNewRuleInViaInspectorStyleSheet(): Promise<void> {\n    const cssModel = this.cssModel();\n    const node = this.node();\n    if (!cssModel || !node) {\n      return;\n    }\n    this.setUserOperation(true);\n\n    const styleSheetHeader = await cssModel.requestViaInspectorStylesheet(node.frameId());\n\n    this.setUserOperation(false);\n    await this.createNewRuleInStyleSheet(styleSheetHeader);\n  }\n\n  private async createNewRuleInStyleSheet(styleSheetHeader: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|null):\n      Promise<void> {\n    if (!styleSheetHeader) {\n      return;\n    }\n\n    const contentDataOrError = await styleSheetHeader.requestContentData();\n    const lines = TextUtils.ContentData.ContentData.textOr(contentDataOrError, '').split('\\n');\n    const range = TextUtils.TextRange.TextRange.createFromLocation(lines.length - 1, lines[lines.length - 1].length);\n\n    if (this.sectionBlocks && this.sectionBlocks.length > 0) {\n      this.addBlankSection(this.sectionBlocks[0].sections[0], styleSheetHeader, range);\n    }\n  }\n\n  addBlankSection(\n      insertAfterSection: StylePropertiesSection, styleSheetHeader: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader,\n      ruleLocation: TextUtils.TextRange.TextRange): void {\n    const node = this.node();\n    const blankSection = new BlankStylePropertiesSection(\n        this, insertAfterSection.matchedStyles, node ? node.simpleSelector() : '', styleSheetHeader, ruleLocation,\n        insertAfterSection.style(), 0);\n\n    this.sectionsContainer.contentElement.insertBefore(blankSection.element, insertAfterSection.element.nextSibling);\n\n    for (const block of this.sectionBlocks) {\n      const index = block.sections.indexOf(insertAfterSection);\n      if (index === -1) {\n        continue;\n      }\n      block.sections.splice(index + 1, 0, blankSection);\n      blankSection.startEditingSelector();\n    }\n    let sectionIdx = 0;\n    for (const block of this.sectionBlocks) {\n      for (const section of block.sections) {\n        section.setSectionIdx(sectionIdx);\n        sectionIdx++;\n      }\n    }\n  }\n\n  removeSection(section: StylePropertiesSection): void {\n    for (const block of this.sectionBlocks) {\n      const index = block.sections.indexOf(section);\n      if (index === -1) {\n        continue;\n      }\n      block.sections.splice(index, 1);\n      section.element.remove();\n    }\n  }\n\n  filterRegex(): RegExp|null {\n    return this.#filterRegex;\n  }\n\n  private updateFilter(): void {\n    let hasAnyVisibleBlock = false;\n    let visibleSections = 0;\n    for (const block of this.sectionBlocks) {\n      visibleSections += block.updateFilter();\n      hasAnyVisibleBlock = Boolean(visibleSections) || hasAnyVisibleBlock;\n    }\n    this.noMatchesElement.classList.toggle('hidden', Boolean(hasAnyVisibleBlock));\n\n    this.visibleSections = visibleSections;\n  }\n\n  override wasShown(): void {\n    UI.Context.Context.instance().setFlavor(StylesSidebarPane, this);\n    super.wasShown();\n  }\n\n  override willHide(): void {\n    this.hideAllPopovers();\n    super.willHide();\n    UI.Context.Context.instance().setFlavor(StylesSidebarPane, null);\n  }\n\n  hideAllPopovers(): void {\n    this.#swatchPopoverHelper.hide();\n    this.imagePreviewPopover.hide();\n    if (this.activeCSSAngle) {\n      this.activeCSSAngle.minify();\n      this.activeCSSAngle = null;\n    }\n  }\n\n  getSectionBlockByName(name: string): SectionBlock|undefined {\n    return this.sectionBlocks.find(block => block.titleElement()?.textContent === name);\n  }\n\n  allSections(): StylePropertiesSection[] {\n    let sections: StylePropertiesSection[] = [];\n    for (const block of this.sectionBlocks) {\n      sections = sections.concat(block.sections);\n    }\n    return sections;\n  }\n\n  private clipboardCopy(_event: Event): void {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.StyleRuleCopied);\n  }\n\n  private createStylesSidebarToolbar(): HTMLElement {\n    const container = this.contentElement.createChild('div', 'styles-sidebar-pane-toolbar-container');\n    container.role = 'toolbar';\n    const hbox = container.createChild('div', 'hbox styles-sidebar-pane-toolbar');\n    const toolbar = hbox.createChild('devtools-toolbar', 'styles-pane-toolbar');\n    toolbar.role = 'presentation';\n    const filterInput = new UI.Toolbar.ToolbarFilter(undefined, 1, 1, undefined, undefined, false);\n    filterInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED, this.onFilterChanged, this);\n    toolbar.appendToolbarItem(filterInput);\n    void toolbar.appendItemsAtLocation('styles-sidebarpane-toolbar');\n    this.toolbar = toolbar;\n\n    const toolbarPaneContainer = container.createChild('div', 'styles-sidebar-toolbar-pane-container');\n    const toolbarPaneContent = toolbarPaneContainer.createChild('div', 'styles-sidebar-toolbar-pane');\n\n    return toolbarPaneContent;\n  }\n\n  showToolbarPane(widget: UI.Widget.Widget|null, toggle: UI.Toolbar.ToolbarToggle|null): void {\n    if (this.pendingWidgetToggle) {\n      this.pendingWidgetToggle.setToggled(false);\n    }\n    this.pendingWidgetToggle = toggle;\n\n    if (this.animatedToolbarPane) {\n      this.pendingWidget = widget;\n    } else {\n      this.startToolbarPaneAnimation(widget);\n    }\n\n    if (widget && toggle) {\n      toggle.setToggled(true);\n    }\n  }\n\n  appendToolbarItem(item: UI.Toolbar.ToolbarItem): void {\n    if (this.toolbar) {\n      this.toolbar.appendToolbarItem(item);\n    }\n  }\n\n  private startToolbarPaneAnimation(widget: UI.Widget.Widget|null): void {\n    if (widget === this.currentToolbarPane) {\n      return;\n    }\n\n    if (widget && this.currentToolbarPane) {\n      this.currentToolbarPane.detach();\n      widget.show(this.toolbarPaneElement);\n      this.currentToolbarPane = widget;\n      this.currentToolbarPane.focus();\n      return;\n    }\n\n    this.animatedToolbarPane = widget;\n\n    if (this.currentToolbarPane) {\n      this.toolbarPaneElement.style.animationName = 'styles-element-state-pane-slideout';\n    } else if (widget) {\n      this.toolbarPaneElement.style.animationName = 'styles-element-state-pane-slidein';\n    }\n\n    if (widget) {\n      widget.show(this.toolbarPaneElement);\n    }\n\n    const listener = onAnimationEnd.bind(this);\n    this.toolbarPaneElement.addEventListener('animationend', listener, false);\n\n    function onAnimationEnd(this: StylesSidebarPane): void {\n      this.toolbarPaneElement.style.removeProperty('animation-name');\n      this.toolbarPaneElement.removeEventListener('animationend', listener, false);\n\n      if (this.currentToolbarPane) {\n        this.currentToolbarPane.detach();\n      }\n\n      this.currentToolbarPane = this.animatedToolbarPane;\n      if (this.currentToolbarPane) {\n        this.currentToolbarPane.focus();\n      }\n      this.animatedToolbarPane = null;\n\n      if (this.pendingWidget) {\n        this.startToolbarPaneAnimation(this.pendingWidget);\n        this.pendingWidget = null;\n      }\n    }\n  }\n\n  private createRenderingShortcuts(): UI.Toolbar.ToolbarButton {\n    const prefersColorSchemeSetting =\n        Common.Settings.Settings.instance().moduleSetting<string>('emulated-css-media-feature-prefers-color-scheme');\n    const autoDarkModeSetting = Common.Settings.Settings.instance().moduleSetting('emulate-auto-dark-mode');\n    const decorateStatus = (condition: boolean, title: string): string => `${condition ? '✓ ' : ''}${title}`;\n\n    const button = new UI.Toolbar.ToolbarToggle(\n        i18nString(UIStrings.toggleRenderingEmulations), 'brush', 'brush-filled', undefined, false);\n    button.element.setAttribute('jslog', `${VisualLogging.dropDown('rendering-emulations').track({click: true})}`);\n    button.element.addEventListener('click', event => {\n      const boundingRect = button.element.getBoundingClientRect();\n      const menu = new UI.ContextMenu.ContextMenu(event, {\n        x: boundingRect.left,\n        y: boundingRect.bottom,\n      });\n      const preferredColorScheme = prefersColorSchemeSetting.get();\n      const isLightColorScheme = preferredColorScheme === 'light';\n      const isDarkColorScheme = preferredColorScheme === 'dark';\n      const isAutoDarkEnabled = autoDarkModeSetting.get();\n      const lightColorSchemeOption = decorateStatus(isLightColorScheme, 'prefers-color-scheme: light');\n      const darkColorSchemeOption = decorateStatus(isDarkColorScheme, 'prefers-color-scheme: dark');\n      const autoDarkModeOption = decorateStatus(isAutoDarkEnabled, i18nString(UIStrings.automaticDarkMode));\n\n      menu.defaultSection().appendItem(lightColorSchemeOption, () => {\n        autoDarkModeSetting.set(false);\n        prefersColorSchemeSetting.set(isLightColorScheme ? '' : 'light');\n        button.setToggled(Boolean(prefersColorSchemeSetting.get()));\n      }, {jslogContext: 'prefer-light-color-scheme'});\n      menu.defaultSection().appendItem(darkColorSchemeOption, () => {\n        autoDarkModeSetting.set(false);\n        prefersColorSchemeSetting.set(isDarkColorScheme ? '' : 'dark');\n        button.setToggled(Boolean(prefersColorSchemeSetting.get()));\n      }, {jslogContext: 'prefer-dark-color-scheme'});\n      menu.defaultSection().appendItem(autoDarkModeOption, () => {\n        autoDarkModeSetting.set(!isAutoDarkEnabled);\n        button.setToggled(Boolean(prefersColorSchemeSetting.get()));\n      }, {jslogContext: 'emulate-auto-dark-mode'});\n\n      void menu.show();\n      event.stopPropagation();\n    }, {capture: true});\n\n    return button;\n  }\n}\n\nexport const enum Events {\n  INITIAL_UPDATE_COMPLETED = 'InitialUpdateCompleted',\n  STYLES_UPDATE_COMPLETED = 'StylesUpdateCompleted',\n}\n\nexport interface StylesUpdateCompletedEvent {\n  hasMatchedStyles: boolean;\n}\n\ninterface CompletionResult extends UI.SuggestBox.Suggestion {\n  isCSSVariableColor?: boolean;\n}\n\nexport interface EventTypes {\n  [Events.INITIAL_UPDATE_COMPLETED]: void;\n  [Events.STYLES_UPDATE_COMPLETED]: StylesUpdateCompletedEvent;\n}\n\nconst MAX_LINK_LENGTH = 23;\n\nexport class SectionBlock {\n  readonly #titleElement: Element|null;\n  sections: StylePropertiesSection[];\n  #expanded = false;\n  #icon: IconButton.Icon.Icon|undefined;\n  constructor(titleElement: Element|null, expandable?: boolean, expandedByDefault?: boolean) {\n    this.#titleElement = titleElement;\n    this.sections = [];\n    this.#expanded = expandedByDefault ?? false;\n\n    if (expandable && titleElement instanceof HTMLElement) {\n      this.#icon =\n          IconButton.Icon.create(this.#expanded ? 'triangle-down' : 'triangle-right', 'section-block-expand-icon');\n      titleElement.classList.toggle('empty-section', !this.#expanded);\n      UI.ARIAUtils.setExpanded(titleElement, this.#expanded);\n      titleElement.appendChild(this.#icon);\n      // Intercept focus to avoid highlight on click.\n      titleElement.tabIndex = -1;\n      titleElement.addEventListener('click', () => this.expand(!this.#expanded), false);\n    }\n  }\n\n  expand(expand: boolean): void {\n    if (!this.#titleElement || !this.#icon) {\n      return;\n    }\n    this.#titleElement.classList.toggle('empty-section', !expand);\n    this.#icon.name = expand ? 'triangle-down' : 'triangle-right';\n    UI.ARIAUtils.setExpanded(this.#titleElement, expand);\n    this.#expanded = expand;\n    this.sections.forEach(section => section.element.classList.toggle('hidden', !expand));\n  }\n\n  static createPseudoTypeBlock(pseudoType: Protocol.DOM.PseudoType, pseudoArgument: string|null): SectionBlock {\n    const separatorElement = document.createElement('div');\n    separatorElement.className = 'sidebar-separator';\n    separatorElement.setAttribute('jslog', `${VisualLogging.sectionHeader('pseudotype')}`);\n    const pseudoArgumentString = pseudoArgument ? `(${pseudoArgument})` : '';\n    const pseudoTypeString = `${pseudoType}${pseudoArgumentString}`;\n    separatorElement.textContent = i18nString(UIStrings.pseudoSElement, {PH1: pseudoTypeString});\n    return new SectionBlock(separatorElement);\n  }\n\n  static async createInheritedPseudoTypeBlock(\n      pseudoType: Protocol.DOM.PseudoType, pseudoArgument: string|null,\n      node: SDK.DOMModel.DOMNode): Promise<SectionBlock> {\n    const separatorElement = document.createElement('div');\n    separatorElement.className = 'sidebar-separator';\n    separatorElement.setAttribute('jslog', `${VisualLogging.sectionHeader('inherited-pseudotype')}`);\n    const pseudoArgumentString = pseudoArgument ? `(${pseudoArgument})` : '';\n    const pseudoTypeString = `${pseudoType}${pseudoArgumentString}`;\n    UI.UIUtils.createTextChild(separatorElement, i18nString(UIStrings.inheritedFromSPseudoOf, {PH1: pseudoTypeString}));\n    const link = await Common.Linkifier.Linkifier.linkify(node, {\n      preventKeyboardFocus: true,\n      tooltip: undefined,\n    });\n    separatorElement.appendChild(link);\n    return new SectionBlock(separatorElement);\n  }\n\n  static createRegisteredPropertiesBlock(expandedByDefault: boolean): SectionBlock {\n    const separatorElement = document.createElement('div');\n    const block = new SectionBlock(separatorElement, true, expandedByDefault);\n    separatorElement.className = 'sidebar-separator';\n    separatorElement.appendChild(document.createTextNode(REGISTERED_PROPERTY_SECTION_NAME));\n    return block;\n  }\n\n  static createFunctionBlock(expandedByDefault: boolean): SectionBlock {\n    const separatorElement = document.createElement('div');\n    const block = new SectionBlock(separatorElement, true, expandedByDefault);\n    separatorElement.className = 'sidebar-separator';\n    separatorElement.appendChild(document.createTextNode(FUNCTION_SECTION_NAME));\n    return block;\n  }\n\n  static createKeyframesBlock(keyframesName: string): SectionBlock {\n    const separatorElement = document.createElement('div');\n    separatorElement.className = 'sidebar-separator';\n    separatorElement.setAttribute('jslog', `${VisualLogging.sectionHeader('keyframes')}`);\n    separatorElement.textContent = `@keyframes ${keyframesName}`;\n    return new SectionBlock(separatorElement);\n  }\n\n  static createFontPaletteValuesRuleBlock(name: string): SectionBlock {\n    const separatorElement = document.createElement('div');\n    separatorElement.className = 'sidebar-separator';\n    separatorElement.textContent = `@font-palette-values ${name}`;\n    return new SectionBlock(separatorElement);\n  }\n\n  static createPositionTryBlock(positionTryName: string): SectionBlock {\n    const separatorElement = document.createElement('div');\n    separatorElement.className = 'sidebar-separator';\n    separatorElement.setAttribute('jslog', `${VisualLogging.sectionHeader('position-try')}`);\n    separatorElement.textContent = `@position-try ${positionTryName}`;\n    return new SectionBlock(separatorElement);\n  }\n\n  static async createInheritedNodeBlock(node: SDK.DOMModel.DOMNode): Promise<SectionBlock> {\n    const separatorElement = document.createElement('div');\n    separatorElement.className = 'sidebar-separator';\n    separatorElement.setAttribute('jslog', `${VisualLogging.sectionHeader('inherited')}`);\n    UI.UIUtils.createTextChild(separatorElement, i18nString(UIStrings.inheritedFroms));\n    const link = await Common.Linkifier.Linkifier.linkify(node, {\n      preventKeyboardFocus: true,\n      tooltip: undefined,\n    });\n    separatorElement.appendChild(link);\n    return new SectionBlock(separatorElement);\n  }\n\n  static createLayerBlock(rule: SDK.CSSRule.CSSStyleRule): SectionBlock {\n    const separatorElement = document.createElement('div');\n    separatorElement.className = 'sidebar-separator layer-separator';\n    separatorElement.setAttribute('jslog', `${VisualLogging.sectionHeader('layer')}`);\n    UI.UIUtils.createTextChild(separatorElement.createChild('div'), i18nString(UIStrings.layer));\n    const layers = rule.layers;\n    if (!layers.length && rule.origin === Protocol.CSS.StyleSheetOrigin.UserAgent) {\n      const name = rule.origin === Protocol.CSS.StyleSheetOrigin.UserAgent ? '\\xa0user\\xa0agent\\xa0stylesheet' :\n                                                                             '\\xa0implicit\\xa0outer\\xa0layer';\n      UI.UIUtils.createTextChild(separatorElement.createChild('div'), name);\n      return new SectionBlock(separatorElement);\n    }\n    const layerLink = separatorElement.createChild('button');\n    layerLink.className = 'link';\n    layerLink.title = i18nString(UIStrings.clickToRevealLayer);\n    const name = layers.map(layer => SDK.CSSModel.CSSModel.readableLayerName(layer.text)).join('.');\n    layerLink.textContent = name;\n    layerLink.onclick = () => LayersWidget.LayersWidget.instance().revealLayer(name);\n    return new SectionBlock(separatorElement);\n  }\n\n  updateFilter(): number {\n    let hasAnyVisibleSection = false;\n    let numVisibleSections = 0;\n    for (const section of this.sections) {\n      numVisibleSections += section.updateFilter() ? 1 : 0;\n      hasAnyVisibleSection = section.updateFilter() || hasAnyVisibleSection;\n    }\n    if (this.#titleElement) {\n      this.#titleElement.classList.toggle('hidden', !hasAnyVisibleSection);\n    }\n    return numVisibleSections;\n  }\n\n  titleElement(): Element|null {\n    return this.#titleElement;\n  }\n}\n\nexport class IdleCallbackManager {\n  private discarded: boolean;\n  private readonly promises: Array<Promise<void>>;\n  private readonly queue: Array<{fn: () => void, resolve: () => void, reject: (err: unknown) => void}>;\n  constructor() {\n    this.discarded = false;\n    this.promises = [];\n    this.queue = [];\n  }\n\n  discard(): void {\n    this.discarded = true;\n  }\n\n  schedule(fn: () => void): void {\n    if (this.discarded) {\n      return;\n    }\n    const promise = new Promise<void>((resolve, reject) => {\n      this.queue.push({fn, resolve, reject});\n    });\n    this.promises.push(promise);\n    this.scheduleIdleCallback(/* timeout=*/ 100);\n  }\n\n  protected scheduleIdleCallback(timeout: number): void {\n    window.requestIdleCallback(() => {\n      const next = this.queue.shift();\n      assertNotNullOrUndefined(next);\n\n      try {\n        if (!this.discarded) {\n          next.fn();\n        }\n        next.resolve();\n      } catch (err) {\n        next.reject(err);\n      }\n    }, {timeout});\n  }\n\n  awaitDone(): Promise<void[]> {\n    return Promise.all(this.promises);\n  }\n}\n\nexport function quoteFamilyName(familyName: string): string {\n  return `'${familyName.replaceAll('\\'', '\\\\\\'')}'`;\n}\n\nexport class CSSPropertyPrompt extends UI.TextPrompt.TextPrompt {\n  private readonly isColorAware: boolean;\n  private readonly cssCompletions: string[];\n  private selectedNodeComputedStyles: Map<string, string>|null;\n  private parentNodeComputedStyles: Map<string, string>|null;\n  private treeElement: StylePropertyTreeElement;\n  private isEditingName: boolean;\n  private readonly cssVariables: string[];\n\n  constructor(treeElement: StylePropertyTreeElement, isEditingName: boolean, completions: string[] = []) {\n    // Use the same callback both for applyItemCallback and acceptItemCallback.\n    super();\n    this.initialize(this.buildPropertyCompletions.bind(this), UI.UIUtils.StyleValueDelimiters);\n    const cssMetadata = SDK.CSSMetadata.cssMetadata();\n    this.isColorAware = SDK.CSSMetadata.cssMetadata().isColorAwareProperty(treeElement.property.name);\n    this.cssCompletions = [];\n    const node = treeElement.node();\n    if (isEditingName) {\n      this.cssCompletions = cssMetadata.allProperties();\n      if (node && !node.isSVGNode()) {\n        this.cssCompletions = this.cssCompletions.filter(property => !cssMetadata.isSVGProperty(property));\n      }\n    } else {\n      this.cssCompletions = [...completions, ...cssMetadata.getPropertyValues(treeElement.property.name)];\n      if (node && cssMetadata.isFontFamilyProperty(treeElement.property.name)) {\n        const fontFamilies = node.domModel().cssModel().fontFaces().map(font => quoteFamilyName(font.getFontFamily()));\n        this.cssCompletions.unshift(...fontFamilies);\n      }\n    }\n\n    /**\n     * Computed styles cache populated for flexbox features.\n     */\n    this.selectedNodeComputedStyles = null;\n    /**\n     * Computed styles cache populated for flexbox features.\n     */\n    this.parentNodeComputedStyles = null;\n    this.treeElement = treeElement;\n    this.isEditingName = isEditingName;\n    this.cssVariables = treeElement.matchedStyles().availableCSSVariables(treeElement.property.ownerStyle);\n    if (this.cssVariables.length < 1000) {\n      this.cssVariables.sort(Platform.StringUtilities.naturalOrderComparator);\n    } else {\n      this.cssVariables.sort();\n    }\n\n    if (!isEditingName) {\n      this.disableDefaultSuggestionForEmptyInput();\n\n      // If a CSS value is being edited that has a numeric or hex substring, hint that precision modifier shortcuts are available.\n      if (treeElement?.valueElement) {\n        const cssValueText = treeElement.valueElement.textContent;\n        const cmdOrCtrl = Host.Platform.isMac() ? 'Cmd' : 'Ctrl';\n        const optionOrAlt = Host.Platform.isMac() ? 'Option' : 'Alt';\n        if (cssValueText !== null) {\n          if (cssValueText.match(/#[\\da-f]{3,6}$/i)) {\n            this.setTitle(\n                i18nString(UIStrings.incrementdecrementWithMousewheelOne, {PH1: cmdOrCtrl, PH2: optionOrAlt}));\n          } else if (cssValueText.match(/\\d+/)) {\n            this.setTitle(\n                i18nString(UIStrings.incrementdecrementWithMousewheelHundred, {PH1: cmdOrCtrl, PH2: optionOrAlt}));\n          }\n        }\n      }\n    }\n  }\n\n  override onKeyDown(event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    switch (keyboardEvent.key) {\n      case 'ArrowUp':\n      case 'ArrowDown':\n      case 'PageUp':\n      case 'PageDown':\n        if (!this.isSuggestBoxVisible() && this.handleNameOrValueUpDown(keyboardEvent)) {\n          keyboardEvent.preventDefault();\n          return;\n        }\n        break;\n      case 'Enter':\n        if (keyboardEvent.shiftKey) {\n          return;\n        }\n        // Accept any available autocompletions and advance to the next field.\n        this.tabKeyPressed();\n        keyboardEvent.preventDefault();\n        return;\n      case ' ':\n        if (this.isEditingName) {\n          // Since property names cannot contain a space\n          // we accept available autocompletions for property name when the user presses space.\n          this.tabKeyPressed();\n          keyboardEvent.preventDefault();\n          return;\n        }\n    }\n\n    super.onKeyDown(keyboardEvent);\n  }\n\n  override onMouseWheel(event: Event): void {\n    if (this.handleNameOrValueUpDown(event)) {\n      event.consume(true);\n      return;\n    }\n    super.onMouseWheel(event);\n  }\n\n  override tabKeyPressed(): boolean {\n    this.acceptAutoComplete();\n\n    // Always tab to the next field.\n    return false;\n  }\n\n  private handleNameOrValueUpDown(event: Event): boolean {\n    function finishHandler(this: CSSPropertyPrompt, _originalValue: string, _replacementString: string): void {\n      // Synthesize property text disregarding any comments, custom whitespace etc.\n      if (this.treeElement.nameElement && this.treeElement.valueElement) {\n        void this.treeElement.applyStyleText(\n            this.treeElement.nameElement.textContent + ': ' + this.treeElement.valueElement.textContent, false);\n      }\n    }\n\n    function customNumberHandler(this: CSSPropertyPrompt, prefix: string, number: number, suffix: string): string {\n      if (number !== 0 && !suffix.length &&\n          SDK.CSSMetadata.cssMetadata().isLengthProperty(this.treeElement.property.name) &&\n          !this.treeElement.property.value.toLowerCase().startsWith('calc(')) {\n        suffix = 'px';\n      }\n      return prefix + number + suffix;\n    }\n\n    // Handle numeric value increment/decrement only at this point.\n    if (!this.isEditingName && this.treeElement.valueElement &&\n        UI.UIUtils.handleElementValueModifications(\n            event, this.treeElement.valueElement, finishHandler.bind(this), this.isValueSuggestion.bind(this),\n            customNumberHandler.bind(this))) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private isValueSuggestion(word: string): boolean {\n    if (!word) {\n      return false;\n    }\n    word = word.toLowerCase();\n    return this.cssCompletions.indexOf(word) !== -1 || word.startsWith('--');\n  }\n\n  private async buildPropertyCompletions(expression: string, query: string, force?: boolean):\n      Promise<UI.SuggestBox.Suggestions> {\n    const lowerQuery = query.toLowerCase();\n    const editingVariable = !this.isEditingName && expression.trim().endsWith('var(');\n    if (!query && !force && !editingVariable && (this.isEditingName || expression)) {\n      return await Promise.resolve([]);\n    }\n\n    const prefixResults: CompletionResult[] = [];\n    const anywhereResults: CompletionResult[] = [];\n    if (!editingVariable) {\n      this.cssCompletions.forEach(completion => filterCompletions.call(this, completion, false /* variable */));\n      // When and only when editing property names, we also include aliases for autocomplete.\n      if (this.isEditingName) {\n        SDK.CSSMetadata.cssMetadata().aliasesFor().forEach((canonicalProperty, alias) => {\n          const index = alias.toLowerCase().indexOf(lowerQuery);\n          if (index !== 0) {\n            return;\n          }\n          const aliasResult: CompletionResult = {\n            text: alias,\n            priority: SDK.CSSMetadata.cssMetadata().propertyUsageWeight(alias),\n            isCSSVariableColor: false,\n          };\n          const canonicalPropertyResult: CompletionResult = {\n            text: canonicalProperty,\n            priority: SDK.CSSMetadata.cssMetadata().propertyUsageWeight(canonicalProperty),\n            subtitle: `= ${alias}`,  // This explains why this canonicalProperty is prompted.\n            isCSSVariableColor: false,\n          };\n          // We add aliasResult *before* the canonicalProperty one because we want to prompt\n          // the alias one first, since it corresponds to what the user has typed.\n          prefixResults.push(aliasResult, canonicalPropertyResult);\n        });\n      }\n    }\n    const node = this.treeElement.node();\n    if (this.isEditingName && node) {\n      const nameValuePresets = SDK.CSSMetadata.cssMetadata().nameValuePresets(node.isSVGNode());\n      nameValuePresets.forEach(\n          preset => filterCompletions.call(this, preset, false /* variable */, true /* nameValue */));\n    }\n    if (this.isEditingName || editingVariable) {\n      this.cssVariables.forEach(variable => filterCompletions.call(this, variable, true /* variable */));\n    }\n\n    const results = prefixResults.concat(anywhereResults);\n    if (!this.isEditingName && !results.length && query.length > 1 && '!important'.startsWith(lowerQuery)) {\n      results.push({\n        text: '!important',\n        title: undefined,\n        subtitle: undefined,\n        priority: undefined,\n        isSecondary: undefined,\n        subtitleRenderer: undefined,\n        selectionRange: undefined,\n        hideGhostText: undefined,\n        iconElement: undefined,\n      });\n    }\n    const userEnteredText = query.replace('-', '');\n    if (userEnteredText && (userEnteredText === userEnteredText.toUpperCase())) {\n      for (let i = 0; i < results.length; ++i) {\n        if (!results[i].text.startsWith('--')) {\n          results[i].text = results[i].text.toUpperCase();\n        }\n      }\n    }\n\n    for (const result of results) {\n      if (editingVariable) {\n        result.title = result.text;\n        result.text += ')';\n        continue;\n      }\n      const valuePreset = SDK.CSSMetadata.cssMetadata().getValuePreset(this.treeElement.name, result.text);\n      if (!this.isEditingName && valuePreset) {\n        result.title = result.text;\n        result.text = valuePreset.text;\n        result.selectionRange = {startColumn: valuePreset.startColumn, endColumn: valuePreset.endColumn};\n      }\n    }\n\n    const ensureComputedStyles = async(): Promise<void> => {\n      if (!node || this.selectedNodeComputedStyles) {\n        return;\n      }\n      this.selectedNodeComputedStyles = await node.domModel().cssModel().getComputedStyle(node.id);\n      const parentNode = node.parentNode;\n      if (parentNode) {\n        this.parentNodeComputedStyles = await parentNode.domModel().cssModel().getComputedStyle(parentNode.id);\n      }\n    };\n    for (const result of results) {\n      await ensureComputedStyles();\n      // Using parent node's computed styles does not work in all cases. For example:\n      //\n      // <div id=\"container\" style=\"display: flex;\">\n      //  <div id=\"useless\" style=\"display: contents;\">\n      //    <div id=\"item\">item</div>\n      //  </div>\n      // </div>\n      // TODO(crbug/1139945): Find a better way to get the flex container styles.\n      const iconInfo = ElementsComponents.CSSPropertyIconResolver.findIcon(\n          this.isEditingName ? result.text : `${this.treeElement.property.name}: ${result.text}`,\n          this.selectedNodeComputedStyles, this.parentNodeComputedStyles);\n      if (!iconInfo) {\n        continue;\n      }\n      const icon = new IconButton.Icon.Icon();\n      icon.name = iconInfo.iconName;\n      icon.classList.add('extra-small');\n      icon.style.transform = `rotate(${iconInfo.rotate}deg) scale(${iconInfo.scaleX * 1.1}, ${iconInfo.scaleY * 1.1})`;\n      icon.style.maxHeight = 'var(--sys-size-6)';\n      icon.style.maxWidth = 'var(--sys-size-6)';\n      result.iconElement = icon;\n    }\n\n    if (this.isColorAware && !this.isEditingName) {\n      results.sort((a, b) => {\n        if (a.isCSSVariableColor && b.isCSSVariableColor) {\n          return 0;\n        }\n        return a.isCSSVariableColor ? -1 : 1;\n      });\n    }\n    return await Promise.resolve(results);\n\n    function filterCompletions(\n        this: CSSPropertyPrompt, completion: string, variable: boolean, nameValue?: boolean): void {\n      const index = completion.toLowerCase().indexOf(lowerQuery);\n      const result: CompletionResult = {\n        text: completion,\n        title: undefined,\n        subtitle: undefined,\n        priority: undefined,\n        isSecondary: undefined,\n        subtitleRenderer: undefined,\n        selectionRange: undefined,\n        hideGhostText: undefined,\n        iconElement: undefined,\n        isCSSVariableColor: false,\n      };\n      if (variable) {\n        const computedValue =\n            this.treeElement.matchedStyles().computeCSSVariable(this.treeElement.property.ownerStyle, completion);\n        if (computedValue) {\n          const color = Common.Color.parse(computedValue.value);\n          if (color) {\n            result.subtitleRenderer = colorSwatchRenderer.bind(null, color);\n            result.isCSSVariableColor = true;\n          } else {\n            result.subtitleRenderer = computedValueSubtitleRenderer.bind(null, computedValue.value);\n          }\n        }\n      }\n      if (nameValue) {\n        result.hideGhostText = true;\n      }\n      if (index === 0) {\n        result.priority = this.isEditingName ? SDK.CSSMetadata.cssMetadata().propertyUsageWeight(completion) : 1;\n        prefixResults.push(result);\n      } else if (index > -1) {\n        anywhereResults.push(result);\n      }\n    }\n\n    function colorSwatchRenderer(color: Common.Color.Color): Element {\n      const swatch = new InlineEditor.ColorSwatch.ColorSwatch();\n      swatch.renderColor(color);\n      swatch.style.pointerEvents = 'none';\n      return swatch;\n    }\n    function computedValueSubtitleRenderer(computedValue: string): Element {\n      const subtitleElement = document.createElement('span');\n      subtitleElement.className = 'suggestion-subtitle';\n      subtitleElement.textContent = `${computedValue}`;\n      subtitleElement.style.maxWidth = '100px';\n      subtitleElement.title = `${computedValue}`;\n      return subtitleElement;\n    }\n  }\n}\n\nexport function unescapeCssString(input: string): string {\n  // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\n  const reCssEscapeSequence = /(?<!\\\\)\\\\(?:([a-fA-F0-9]{1,6})|(.))[\\n\\t\\x20]?/gs;\n  return input.replace(reCssEscapeSequence, (_, $1, $2) => {\n    if ($2) {  // Handle the single-character escape sequence.\n      return $2;\n    }\n    // Otherwise, handle the code point escape sequence.\n    const codePoint = parseInt($1, 16);\n    const isSurrogate = 0xD800 <= codePoint && codePoint <= 0xDFFF;\n    if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\n      return '\\uFFFD';\n    }\n    return String.fromCodePoint(codePoint);\n  });\n}\n\nexport function escapeUrlAsCssComment(urlText: string): string {\n  const url = new URL(urlText);\n  if (url.search) {\n    return `${url.origin}${url.pathname}${url.search.replaceAll('*/', '*%2F')}${url.hash}`;\n  }\n  return url.toString();\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'elements.new-style-rule': {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.NewStyleRuleAdded);\n        void ElementsPanel.instance().stylesWidget.createNewRuleInViaInspectorStyleSheet();\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nlet buttonProviderInstance: ButtonProvider;\nexport class ButtonProvider implements UI.Toolbar.Provider {\n  private readonly button: UI.Toolbar.ToolbarButton;\n  private constructor() {\n    this.button = UI.Toolbar.Toolbar.createActionButton('elements.new-style-rule');\n    this.button.setLongClickable(true);\n\n    new UI.UIUtils.LongClickController(this.button.element, this.longClicked.bind(this));\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, onNodeChanged.bind(this));\n    onNodeChanged.call(this);\n\n    function onNodeChanged(this: ButtonProvider): void {\n      let node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n      node = node ? node.enclosingElementOrSelf() : null;\n      this.button.setEnabled(Boolean(node));\n    }\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ButtonProvider {\n    const {forceNew} = opts;\n    if (!buttonProviderInstance || forceNew) {\n      buttonProviderInstance = new ButtonProvider();\n    }\n\n    return buttonProviderInstance;\n  }\n\n  private longClicked(event: Event): void {\n    ElementsPanel.instance().stylesWidget.onAddButtonLongClick(event);\n  }\n\n  item(): UI.Toolbar.ToolbarItem {\n    return this.button;\n  }\n}\n", "// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {type ComputedStyleModel, type CSSModelChangedEvent, Events} from './ComputedStyleModel.js';\n\nexport class ElementsSidebarPane extends UI.Widget.VBox {\n  protected computedStyleModelInternal: ComputedStyleModel;\n  private readonly updateThrottler: Common.Throttler.Throttler;\n  private updateWhenVisible: boolean;\n  constructor(computedStyleModel: ComputedStyleModel, delegatesFocus?: boolean) {\n    super({useShadowDom: true, delegatesFocus});\n    this.element.classList.add('flex-none');\n    this.computedStyleModelInternal = computedStyleModel;\n    this.computedStyleModelInternal.addEventListener(Events.CSS_MODEL_CHANGED, this.onCSSModelChanged, this);\n    this.computedStyleModelInternal.addEventListener(Events.COMPUTED_STYLE_CHANGED, this.onComputedStyleChanged, this);\n\n    this.updateThrottler = new Common.Throttler.Throttler(100);\n    this.updateWhenVisible = false;\n  }\n\n  node(): SDK.DOMModel.DOMNode|null {\n    return this.computedStyleModelInternal.node();\n  }\n\n  cssModel(): SDK.CSSModel.CSSModel|null {\n    return this.computedStyleModelInternal.cssModel();\n  }\n\n  computedStyleModel(): ComputedStyleModel {\n    return this.computedStyleModelInternal;\n  }\n\n  async doUpdate(): Promise<void> {\n    return;\n  }\n\n  update(): void {\n    this.updateWhenVisible = !this.isShowing();\n    if (this.updateWhenVisible) {\n      return;\n    }\n    void this.updateThrottler.schedule(innerUpdate.bind(this));\n\n    function innerUpdate(this: ElementsSidebarPane): Promise<void> {\n      return this.isShowing() ? this.doUpdate() : Promise.resolve();\n    }\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    if (this.updateWhenVisible) {\n      this.update();\n    }\n  }\n\n  onCSSModelChanged(_event: Common.EventTarget.EventTargetEvent<CSSModelChangedEvent|null>): void {\n  }\n\n  onComputedStyleChanged(): void {\n  }\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Lit from '../../third_party/lit/lit.js';\nimport * as TreeOutline from '../../ui/components/tree_outline/tree_outline.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ElementsPanel} from './ElementsPanel.js';\nimport layersWidgetStyles from './layersWidget.css.js';\n\nconst {render, html, Directives: {ref}} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Title of a section in the Element State Pane Widget of the Elements panel.\n   * The widget shows the layers present in the context of the currently selected node.\n   * */\n  cssLayersTitle: 'CSS layers',\n  /**\n   * @description Tooltip text in Element State Pane Widget of the Elements panel.\n   * For a button that opens a tool that shows the layers present in the current document.\n   */\n  toggleCSSLayers: 'Toggle CSS Layers view',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/LayersWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ViewInput {\n  rootLayer: Protocol.CSS.CSSLayerData;\n}\n\ninterface ViewOutput {\n  treeOutline: TreeOutline.TreeOutline.TreeOutline<string>|undefined;\n}\n\ntype View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nconst DEFAULT_VIEW: View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => {\n  const makeTreeNode = (parentId: string) => (layer: Protocol.CSS.CSSLayerData) => {\n    const subLayers = layer.subLayers;\n    const name = SDK.CSSModel.CSSModel.readableLayerName(layer.name);\n    const treeNodeData = layer.order + ': ' + name;\n    const id = parentId ? parentId + '.' + name : name;\n    if (!subLayers) {\n      return {treeNodeData, id};\n    }\n    return {\n      treeNodeData,\n      id,\n      children: async () => subLayers.sort((layer1, layer2) => layer1.order - layer2.order).map(makeTreeNode(id)),\n    };\n  };\n  const {defaultRenderer} = TreeOutline.TreeOutline;\n  const tree = [makeTreeNode('')(input.rootLayer)];\n  const data: TreeOutline.TreeOutline.TreeOutlineData<string> = {\n    defaultRenderer,\n    tree,\n  };\n  const captureTreeOutline = (e?: Element): void => {\n    output.treeOutline = e as typeof output.treeOutline;\n  };\n  const template = html`\n  <style>${layersWidgetStyles}</style>\n  <div class=\"layers-widget\">\n    <div class=\"layers-widget-title\">${UIStrings.cssLayersTitle}</div>\n    <devtools-tree-outline ${ref(captureTreeOutline)}\n                           .data=${data}></devtools-tree-outline>\n  </div>\n  `;\n  render(template, target);\n};\n\nlet layersWidgetInstance: LayersWidget;\n\nexport class LayersWidget extends UI.Widget.Widget {\n  #node: SDK.DOMModel.DOMNode|null = null;\n  #view: View;\n  #layerToReveal: string|null = null;\n\n  constructor(view: View = DEFAULT_VIEW) {\n    super({jslog: `${VisualLogging.pane('css-layers')}`});\n    this.#view = view;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.#onDOMNodeChanged, this);\n    this.#onDOMNodeChanged({data: UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode)});\n  }\n\n  override wasHidden(): void {\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.#onDOMNodeChanged, this);\n    this.#onDOMNodeChanged({data: null});\n    super.wasHidden();\n  }\n\n  #onDOMNodeChanged(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode|null>): void {\n    const node = event.data?.enclosingElementOrSelf();\n    if (this.#node === node) {\n      return;\n    }\n    if (this.#node) {\n      this.#node.domModel().cssModel().removeEventListener(\n          SDK.CSSModel.Events.StyleSheetChanged, this.requestUpdate, this);\n    }\n    this.#node = event.data;\n    if (this.#node) {\n      this.#node.domModel().cssModel().addEventListener(\n          SDK.CSSModel.Events.StyleSheetChanged, this.requestUpdate, this);\n    }\n    if (this.isShowing()) {\n      this.requestUpdate();\n    }\n  }\n\n  override async performUpdate(): Promise<void> {\n    if (!this.#node) {\n      return;\n    }\n\n    const rootLayer = await this.#node.domModel().cssModel().getRootLayer(this.#node.id);\n    const input = {rootLayer};\n    const output: ViewOutput = {treeOutline: undefined};\n    this.#view(input, output, this.contentElement);\n\n    if (output.treeOutline) {\n      // We only expand the first 5 user-defined layers to not make the\n      // view too overwhelming.\n      await output.treeOutline.expandRecursively(5);\n      if (this.#layerToReveal) {\n        await output.treeOutline.expandToAndSelectTreeNodeId(this.#layerToReveal);\n        this.#layerToReveal = null;\n      }\n    }\n  }\n\n  async revealLayer(layerName: string): Promise<void> {\n    if (!this.isShowing()) {\n      ElementsPanel.instance().showToolbarPane(this, ButtonProvider.instance().item());\n    }\n    this.#layerToReveal = `implicit outer layer.${layerName}`;\n    this.requestUpdate();\n    await this.updateComplete;\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): LayersWidget {\n    const {forceNew} = opts;\n    if (!layersWidgetInstance || forceNew) {\n      layersWidgetInstance = new LayersWidget();\n    }\n\n    return layersWidgetInstance;\n  }\n}\n\nlet buttonProviderInstance: ButtonProvider;\n\nexport class ButtonProvider implements UI.Toolbar.Provider {\n  private readonly button: UI.Toolbar.ToolbarToggle;\n  private constructor() {\n    this.button = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleCSSLayers), 'layers', 'layers-filled');\n    this.button.setVisible(false);\n    this.button.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.clicked, this);\n    this.button.element.classList.add('monospace');\n    this.button.element.setAttribute('jslog', `${VisualLogging.toggleSubpane('css-layers').track({click: true})}`);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ButtonProvider {\n    const {forceNew} = opts;\n    if (!buttonProviderInstance || forceNew) {\n      buttonProviderInstance = new ButtonProvider();\n    }\n\n    return buttonProviderInstance;\n  }\n\n  private clicked(): void {\n    const view = LayersWidget.instance();\n    ElementsPanel.instance().showToolbarPane(!view.isShowing() ? view : null, this.button);\n  }\n\n  item(): UI.Toolbar.ToolbarToggle {\n    return this.button;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/**\n * Copyright 2022 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.layers-widget {\n  overflow: hidden;\n  padding-left: 2px;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n  margin-top: 0;\n  padding-bottom: 2px;\n}\n\n.layers-widget > .layers-widget-title {\n  font-weight: bold;\n  margin: 8px 4px 6px;\n}\n\n/*# sourceURL=${import.meta.resolve('./layersWidget.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as ElementsComponents from './components/components.js';\nimport type {StylePropertiesSection} from './StylePropertiesSection.js';\nimport {StylePropertyTreeElement} from './StylePropertyTreeElement.js';\nimport type {StylesSidebarPane} from './StylesSidebarPane.js';\n\ntype PropertySelectedEvent = ElementsComponents.StylePropertyEditor.PropertySelectedEvent;\ntype PropertyDeselectedEvent = ElementsComponents.StylePropertyEditor.PropertyDeselectedEvent;\n\nlet instance: StyleEditorWidget|null = null;\ninterface Editor extends HTMLElement {\n  data: {\n    authoredProperties: Map<String, String>,\n    computedProperties: Map<String, String>,\n  };\n  getEditableProperties(): Array<{propertyName: string}>;\n  jslogContext: string;\n}\n\n/**\n * Thin UI.Widget wrapper around style editors to allow using it as a popover.\n */\nexport class StyleEditorWidget extends UI.Widget.VBox {\n  private editor?: Editor;\n  private pane?: StylesSidebarPane;\n  private section?: StylePropertiesSection;\n  private editorContainer: HTMLElement;\n\n  #triggerKey: string|undefined;\n\n  constructor() {\n    super({useShadowDom: true});\n    this.contentElement.tabIndex = 0;\n    this.setDefaultFocusedElement(this.contentElement);\n    this.editorContainer = document.createElement('div');\n    this.contentElement.appendChild(this.editorContainer);\n    this.onPropertySelected = this.onPropertySelected.bind(this);\n    this.onPropertyDeselected = this.onPropertyDeselected.bind(this);\n  }\n\n  getSection(): StylePropertiesSection|undefined {\n    return this.section;\n  }\n\n  async onPropertySelected(event: PropertySelectedEvent): Promise<void> {\n    if (!this.section) {\n      return;\n    }\n    const target = ensureTreeElementForProperty(this.section, event.data.name);\n    target.property.value = event.data.value;\n    target.updateTitle();\n    await target.applyStyleText(target.renderedPropertyText(), false);\n    await this.render();\n  }\n\n  async onPropertyDeselected(event: PropertyDeselectedEvent): Promise<void> {\n    if (!this.section) {\n      return;\n    }\n    const target = ensureTreeElementForProperty(this.section, event.data.name);\n    await target.applyStyleText('', false);\n    await this.render();\n  }\n\n  bindContext(pane: StylesSidebarPane, section: StylePropertiesSection): void {\n    this.pane = pane;\n    this.section = section;\n    this.editor?.addEventListener('propertyselected', this.onPropertySelected);\n    this.editor?.addEventListener('propertydeselected', this.onPropertyDeselected);\n  }\n\n  setTriggerKey(value: string): void {\n    this.#triggerKey = value;\n  }\n\n  getTriggerKey(): string|undefined {\n    return this.#triggerKey;\n  }\n\n  unbindContext(): void {\n    this.pane = undefined;\n    this.section = undefined;\n    this.editor?.removeEventListener('propertyselected', this.onPropertySelected);\n    this.editor?.removeEventListener('propertydeselected', this.onPropertyDeselected);\n  }\n\n  async render(): Promise<void> {\n    if (!this.editor) {\n      return;\n    }\n    this.editor.data = {\n      authoredProperties: this.section ? getAuthoredStyles(this.section, this.editor.getEditableProperties()) :\n                                         new Map(),\n      computedProperties: this.pane ? await fetchComputedStyles(this.pane) : new Map(),\n    };\n  }\n\n  static instance(): StyleEditorWidget {\n    if (!instance) {\n      instance = new StyleEditorWidget();\n    }\n    return instance;\n  }\n\n  setEditor(editorClass: {new(): Editor}): void {\n    if (!(this.editor instanceof editorClass)) {\n      this.contentElement.removeChildren();\n      this.editor = new editorClass();\n      this.contentElement.appendChild(this.editor);\n    }\n  }\n\n  static createTriggerButton(\n      pane: StylesSidebarPane, section: StylePropertiesSection, editorClass: {new(): Editor}, buttonTitle: string,\n      triggerKey: string): HTMLElement {\n    const triggerButton = createButton(buttonTitle);\n\n    triggerButton.onclick = async event => {\n      event.stopPropagation();\n      const popoverHelper = pane.swatchPopoverHelper();\n      const widget = StyleEditorWidget.instance();\n      widget.element.classList.toggle('with-padding', true);\n      widget.setEditor(editorClass);\n      widget.bindContext(pane, section);\n      widget.setTriggerKey(triggerKey);\n      await widget.render();\n      widget.focus();\n      const scrollerElement = triggerButton.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n      const onScroll = (): void => {\n        popoverHelper.hide(true);\n      };\n      popoverHelper.show(widget, triggerButton, () => {\n        widget.unbindContext();\n        if (scrollerElement) {\n          scrollerElement.removeEventListener('scroll', onScroll);\n        }\n      });\n      if (scrollerElement) {\n        scrollerElement.addEventListener('scroll', onScroll);\n      }\n    };\n\n    return triggerButton;\n  }\n}\n\nfunction createButton(buttonTitle: string): Buttons.Button.Button {\n  const button = new Buttons.Button.Button();\n  button.data = {\n    variant: Buttons.Button.Variant.ICON,\n    size: Buttons.Button.Size.SMALL,\n    iconName: 'flex-wrap',\n    title: buttonTitle,\n    jslogContext: 'flex-wrap',\n  };\n  button.classList.add('styles-pane-button');\n  button.onmouseup = event => {\n    // Stop propagation to prevent the property editor from being activated.\n    event.stopPropagation();\n  };\n  return button;\n}\n\nfunction ensureTreeElementForProperty(section: StylePropertiesSection, propertyName: string): StylePropertyTreeElement {\n  const target = section.propertiesTreeOutline.rootElement().children().find(\n      child => child instanceof StylePropertyTreeElement && child.property.name === propertyName);\n  if (target) {\n    return target as StylePropertyTreeElement;\n  }\n  const newTarget = section.addNewBlankProperty();\n  newTarget.property.name = propertyName;\n  return newTarget;\n}\n\nasync function fetchComputedStyles(pane: StylesSidebarPane): Promise<Map<string, string>> {\n  const computedStyleModel = pane.computedStyleModel();\n  const style = await computedStyleModel.fetchComputedStyle();\n  return style ? style.computedStyle : new Map();\n}\n\nfunction getAuthoredStyles(\n    section: StylePropertiesSection, editableProperties: Array<{propertyName: string}>): Map<string, string> {\n  const authoredProperties = new Map();\n  const editablePropertiesSet = new Set(editableProperties.map(prop => prop.propertyName));\n  for (const prop of section.style().leadingProperties()) {\n    if (editablePropertiesSet.has(prop.name)) {\n      authoredProperties.set(prop.name, prop.value);\n    }\n  }\n  return authoredProperties;\n}\n", "// Copyright 2018 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Badges from '../../models/badges/badges.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport type * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as Tooltips from '../../ui/components/tooltips/tooltips.js';\nimport * as ColorPicker from '../../ui/legacy/components/color_picker/color_picker.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {\n  BezierPopoverIcon,\n  ColorSwatchPopoverIcon,\n  ColorSwatchPopoverIconEvents,\n  ShadowEvents,\n  ShadowSwatchPopoverHelper,\n} from './ColorSwatchPopoverIcon.js';\nimport * as ElementsComponents from './components/components.js';\nimport {cssRuleValidatorsMap} from './CSSRuleValidator.js';\nimport {CSSValueTraceView} from './CSSValueTraceView.js';\nimport {ElementsPanel} from './ElementsPanel.js';\nimport {\n  BinOpRenderer,\n  type MatchRenderer,\n  Renderer,\n  rendererBase,\n  RenderingContext,\n  StringRenderer,\n  type TracingContext,\n  URLRenderer\n} from './PropertyRenderer.js';\nimport {StyleEditorWidget} from './StyleEditorWidget.js';\nimport type {StylePropertiesSection} from './StylePropertiesSection.js';\nimport {getCssDeclarationAsJavascriptProperty} from './StylePropertyUtils.js';\nimport {\n  CSSPropertyPrompt,\n  REGISTERED_PROPERTY_SECTION_NAME,\n  StylesSidebarPane,\n} from './StylesSidebarPane.js';\n\nconst {html, nothing, render, Directives: {classMap, ifDefined}} = Lit;\nconst ASTUtils = SDK.CSSPropertyParser.ASTUtils;\nconst FlexboxEditor = ElementsComponents.StylePropertyEditor.FlexboxEditor;\nconst GridEditor = ElementsComponents.StylePropertyEditor.GridEditor;\n\nconst UIStrings = {\n  /**\n   * @description Text in Color Swatch Popover Icon of the Elements panel\n   */\n  shiftClickToChangeColorFormat: 'Shift + Click to change color format.',\n  /**\n   * @description Swatch icon element title in Color Swatch Popover Icon of the Elements panel\n   * @example {Shift + Click to change color format.} PH1\n   */\n  openColorPickerS: 'Open color picker. {PH1}',\n  /**\n   * @description Context menu item for style property in edit mode\n   */\n  togglePropertyAndContinueEditing: 'Toggle property and continue editing',\n  /**\n   * @description Context menu item for style property in edit mode\n   */\n  openInSourcesPanel: 'Open in Sources panel',\n  /**\n   * @description A context menu item in Styles panel to copy CSS declaration\n   */\n  copyDeclaration: 'Copy declaration',\n  /**\n   * @description A context menu item in Styles panel to copy CSS property\n   */\n  copyProperty: 'Copy property',\n  /**\n   * @description A context menu item in the Watch Expressions Sidebar Pane of the Sources panel and Network pane request.\n   */\n  copyValue: 'Copy value',\n  /**\n   * @description A context menu item in Styles panel to copy CSS rule\n   */\n  copyRule: 'Copy rule',\n  /**\n   * @description A context menu item in Styles panel to copy all CSS declarations\n   */\n  copyAllDeclarations: 'Copy all declarations',\n  /**\n   * @description A context menu item in Styles panel to view the computed CSS property value.\n   */\n  viewComputedValue: 'View computed value',\n  /**\n   * @description Title of the button that opens the flexbox editor in the Styles panel.\n   */\n  flexboxEditorButton: 'Open `flexbox` editor',\n  /**\n   * @description Title of the button that opens the CSS Grid editor in the Styles panel.\n   */\n  gridEditorButton: 'Open `grid` editor',\n  /**\n   * @description A context menu item in Styles panel to copy CSS declaration as JavaScript property.\n   */\n  copyCssDeclarationAsJs: 'Copy declaration as JS',\n  /**\n   * @description A context menu item in Styles panel to copy all declarations of CSS rule as JavaScript properties.\n   */\n  copyAllCssDeclarationsAsJs: 'Copy all declarations as JS',\n  /**\n   * @description Title of the link in Styles panel to jump to the Animations panel.\n   */\n  jumpToAnimationsPanel: 'Jump to Animations panel',\n  /**\n   * @description Text displayed in a tooltip shown when hovering over a CSS property value references a name that's not\n   *             defined and can't be linked to.\n   * @example {--my-linkable-name} PH1\n   */\n  sIsNotDefined: '{PH1} is not defined',\n  /**\n   * @description Text in Styles Sidebar Pane of the Elements panel\n   */\n  invalidPropertyValue: 'Invalid property value',\n  /**\n   * @description Text in Styles Sidebar Pane of the Elements panel\n   */\n  unknownPropertyName: 'Unknown property name',\n  /**\n   * @description Announcement string for invalid properties.\n   * @example {Invalid property value} PH1\n   * @example {font-size} PH2\n   * @example {invalidValue} PH3\n   */\n  invalidString: '{PH1}, property name: {PH2}, property value: {PH3}',\n  /**\n   * @description Title in the styles tab for the icon button for jumping to the anchor node.\n   */\n  jumpToAnchorNode: 'Jump to anchor node',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/StylePropertyTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst parentMap = new WeakMap<StylesSidebarPane, StylePropertyTreeElement>();\n\ninterface StylePropertyTreeElementParams {\n  stylesPane: StylesSidebarPane;\n  section: StylePropertiesSection;\n  matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles;\n  property: SDK.CSSProperty.CSSProperty;\n  isShorthand: boolean;\n  inherited: boolean;\n  overloaded: boolean;\n  newProperty: boolean;\n}\n\n// clang-format off\nexport class EnvFunctionRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.EnvFunctionMatch) {\n  // clang-format on\n  constructor(\n      readonly treeElement: StylePropertyTreeElement|null,\n      readonly matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, readonly computedStyles: Map<string, string>) {\n    super();\n  }\n  override render(match: SDK.CSSPropertyParserMatchers.EnvFunctionMatch, context: RenderingContext): Node[] {\n    const [, fallbackNodes] = ASTUtils.callArgs(match.node);\n    if (match.value) {\n      const substitution = context.tracing?.substitution();\n      if (substitution) {\n        if (match.varNameIsValid) {\n          return [document.createTextNode(match.value)];\n        }\n        return Renderer.render(fallbackNodes, substitution.renderingContext(context)).nodes;\n      }\n    }\n\n    const span = document.createElement('span');\n    const func =\n        this.treeElement?.getTracingTooltip('env', match.node, this.matchedStyles, this.computedStyles, context) ??\n        'env';\n    const valueClass = classMap({'inactive-value': !match.varNameIsValid});\n    const fallbackClass = classMap({'inactive-value': match.varNameIsValid});\n    render(\n        html`${func}(<span class=${valueClass}>${match.varName}</span>${\n            fallbackNodes ?\n                html`, <span class=${fallbackClass}>${Renderer.render(fallbackNodes, context).nodes}</span>` :\n                nothing})`,\n        span, {host: span});\n    return [span];\n  }\n}\n// clang-format off\nexport class FlexGridRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.FlexGridMatch) {\n  // clang-format on\n  readonly #treeElement: StylePropertyTreeElement|null;\n  readonly #stylesPane: StylesSidebarPane;\n  constructor(stylesPane: StylesSidebarPane, treeElement: StylePropertyTreeElement|null) {\n    super();\n    this.#treeElement = treeElement;\n    this.#stylesPane = stylesPane;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.FlexGridMatch, context: RenderingContext): Node[] {\n    const children = Renderer.render(ASTUtils.siblings(ASTUtils.declValue(match.node)), context).nodes;\n    if (!this.#treeElement?.editable()) {\n      return children;\n    }\n    const key =\n        `${this.#treeElement.section().getSectionIdx()}_${this.#treeElement.section().nextEditorTriggerButtonIdx}`;\n    const button = StyleEditorWidget.createTriggerButton(\n        this.#stylesPane, this.#treeElement.section(), match.isFlex ? FlexboxEditor : GridEditor,\n        match.isFlex ? i18nString(UIStrings.flexboxEditorButton) : i18nString(UIStrings.gridEditorButton), key);\n    button.tabIndex = -1;\n    button.setAttribute(\n        'jslog', `${VisualLogging.showStyleEditor().track({click: true}).context(match.isFlex ? 'flex' : 'grid')}`);\n    this.#treeElement.section().nextEditorTriggerButtonIdx++;\n    button.addEventListener('click', () => {\n      Host.userMetrics.swatchActivated(\n          match.isFlex ? Host.UserMetrics.SwatchType.FLEX : Host.UserMetrics.SwatchType.GRID);\n    });\n    const helper = this.#stylesPane.swatchPopoverHelper();\n    if (helper.isShowing(StyleEditorWidget.instance()) && StyleEditorWidget.instance().getTriggerKey() === key) {\n      helper.setAnchorElement(button);\n    }\n    return [...children, button];\n  }\n}\n\n// clang-format off\nexport class CSSWideKeywordRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.CSSWideKeywordMatch) {\n  // clang-format on\n  readonly #treeElement: StylePropertyTreeElement|null;\n  readonly #stylesPane: StylesSidebarPane;\n  constructor(stylesPane: StylesSidebarPane, treeElement: StylePropertyTreeElement|null) {\n    super();\n    this.#treeElement = treeElement;\n    this.#stylesPane = stylesPane;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.CSSWideKeywordMatch, context: RenderingContext): Node[] {\n    const resolvedProperty = match.resolveProperty();\n    if (!resolvedProperty) {\n      return [document.createTextNode(match.text)];\n    }\n\n    const swatch = new InlineEditor.LinkSwatch.LinkSwatch();\n    swatch.data = {\n      text: match.text,\n      tooltip: resolvedProperty ? undefined : {title: i18nString(UIStrings.sIsNotDefined, {PH1: match.text})},\n      isDefined: Boolean(resolvedProperty),\n      onLinkActivate: () => resolvedProperty && this.#stylesPane.jumpToDeclaration(resolvedProperty),\n      jslogContext: 'css-wide-keyword-link',\n    };\n\n    if (SDK.CSSMetadata.cssMetadata().isColorAwareProperty(resolvedProperty.name) ||\n        SDK.CSSMetadata.cssMetadata().isCustomProperty(resolvedProperty.name)) {\n      const color = Common.Color.parse(context.matchedResult.getComputedText(match.node));\n      if (color) {\n        return [new ColorRenderer(this.#stylesPane, this.#treeElement).renderColorSwatch(color, swatch), swatch];\n      }\n    }\n\n    return [swatch];\n  }\n}\n\n// clang-format off\nexport class VariableRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.VariableMatch) {\n  // clang-format on\n  readonly #stylesPane: StylesSidebarPane;\n  readonly #treeElement: StylePropertyTreeElement|null;\n  readonly #matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles;\n  readonly #computedStyles: Map<string, string>;\n  constructor(\n      stylesPane: StylesSidebarPane, treeElement: StylePropertyTreeElement|null,\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, computedStyles: Map<string, string>) {\n    super();\n    this.#treeElement = treeElement;\n    this.#stylesPane = stylesPane;\n    this.#matchedStyles = matchedStyles;\n    this.#computedStyles = computedStyles;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.VariableMatch, context: RenderingContext): Node[] {\n    if (this.#treeElement?.property.ownerStyle.parentRule instanceof SDK.CSSRule.CSSFunctionRule) {\n      return Renderer.render(ASTUtils.children(match.node), context).nodes;\n    }\n\n    const {declaration, value: variableValue} = match.resolveVariable() ?? {};\n    const fromFallback = variableValue === undefined;\n    const computedValue = variableValue ?? match.fallbackValue();\n    const onLinkActivate = (name: string): void => this.#handleVarDefinitionActivate(declaration ?? name);\n    const varSwatch = document.createElement('span');\n\n    const substitution = context.tracing?.substitution({match, context});\n    if (substitution) {\n      if (declaration?.declaration) {\n        const {nodes, cssControls} = Renderer.renderValueNodes(\n            {name: declaration.name, value: declaration.value ?? ''},\n            substitution.cachedParsedValue(declaration.declaration, this.#matchedStyles, this.#computedStyles),\n            getPropertyRenderers(\n                declaration.name, declaration.style, this.#stylesPane, this.#matchedStyles, null, this.#computedStyles),\n            substitution);\n        cssControls.forEach((value, key) => value.forEach(control => context.addControl(key, control)));\n        return nodes;\n      }\n      if (!declaration && match.fallback) {\n        return Renderer.render(match.fallback, substitution.renderingContext(context)).nodes;\n      }\n    }\n\n    const renderedFallback = match.fallback ? Renderer.render(match.fallback, context) : undefined;\n\n    const varCall =\n        this.#treeElement?.getTracingTooltip('var', match.node, this.#matchedStyles, this.#computedStyles, context);\n    const tooltipContents =\n        this.#stylesPane.getVariablePopoverContents(this.#matchedStyles, match.name, variableValue ?? null);\n    const tooltipId = this.#treeElement?.getTooltipId('custom-property-var');\n    const tooltip = tooltipId ? {tooltipId} : undefined;\n    // clang-format off\n    render(html`\n        <span data-title=${computedValue || ''}\n              jslog=${VisualLogging.link('css-variable').track({click: true, hover: true})}>\n          ${varCall ?? 'var'}(\n          <devtools-link-swatch class=css-var-link .data=${{\n              tooltip,\n              text: match.name,\n              isDefined: computedValue !== null && !fromFallback,\n              onLinkActivate,\n            }}>\n           </devtools-link-swatch>\n           ${renderedFallback ? html`, ${renderedFallback.nodes}` : nothing})\n        </span>\n        ${tooltipId ? html`\n          <devtools-tooltip\n            id=${tooltipId}\n            variant=rich\n            jslogContext=elements.css-var\n          >\n            ${tooltipContents}\n          </devtools-tooltip>\n        ` : ''}\n    `, varSwatch);\n    // clang-format on\n\n    const color = computedValue && Common.Color.parse(computedValue);\n    if (!color) {\n      return [varSwatch];\n    }\n\n    const colorSwatch = new ColorRenderer(this.#stylesPane, this.#treeElement).renderColorSwatch(color, varSwatch);\n    context.addControl('color', colorSwatch);\n\n    if (fromFallback) {\n      renderedFallback?.cssControls.get('color')?.forEach(\n          innerSwatch => innerSwatch.addEventListener(InlineEditor.ColorSwatch.ColorChangedEvent.eventName, ev => {\n            colorSwatch.setColor(ev.data.color);\n          }));\n    }\n\n    return [colorSwatch, varSwatch];\n  }\n\n  #handleVarDefinitionActivate(variable: string|SDK.CSSMatchedStyles.CSSValueSource): void {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.CustomPropertyLinkClicked);\n    Host.userMetrics.swatchActivated(Host.UserMetrics.SwatchType.VAR_LINK);\n\n    if (typeof variable === 'string') {\n      this.#stylesPane.jumpToProperty(variable) ||\n          this.#stylesPane.jumpToProperty('initial-value', variable, REGISTERED_PROPERTY_SECTION_NAME);\n    } else if (variable.declaration instanceof SDK.CSSProperty.CSSProperty) {\n      this.#stylesPane.revealProperty(variable.declaration);\n    } else if (variable.declaration instanceof SDK.CSSMatchedStyles.CSSRegisteredProperty) {\n      this.#stylesPane.jumpToProperty('initial-value', variable.name, REGISTERED_PROPERTY_SECTION_NAME);\n    }\n  }\n}\n\n// clang-format off\nexport class AttributeRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.AttributeMatch) {\n  // clang-format on\n  readonly #stylesPane: StylesSidebarPane;\n  readonly #treeElement: StylePropertyTreeElement|null;\n  readonly #matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles;\n  readonly #computedStyles: Map<string, string>;\n  constructor(\n      stylesPane: StylesSidebarPane, treeElement: StylePropertyTreeElement|null,\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, computedStyles: Map<string, string>) {\n    super();\n    this.#treeElement = treeElement;\n    this.#stylesPane = stylesPane;\n    this.#matchedStyles = matchedStyles;\n    this.#computedStyles = computedStyles;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.AttributeMatch, context: RenderingContext): Node[] {\n    if (this.#treeElement?.property.ownerStyle.parentRule instanceof SDK.CSSRule.CSSFunctionRule) {\n      return Renderer.render(ASTUtils.children(match.node), context).nodes;\n    }\n\n    const rawValue = match.rawAttributeValue();\n    const attributeValue = match.resolveAttributeValue();\n    const fromFallback = attributeValue === null;\n    const attributeMissing = rawValue === null;\n    const typeError = fromFallback && !attributeMissing;\n    const attributeClass = attributeMissing ? 'inactive' : '';\n    const typeClass = typeError ? 'inactive' : '';\n    const fallbackClass = fromFallback ? '' : 'inactive';\n    const computedValue = attributeValue ?? match.fallbackValue();\n    const varSwatch = document.createElement('span');\n\n    const substitution = context.tracing?.substitution({match, context});\n    if (substitution) {\n      // TODO(b/441945435): If we combine these conditions, we can, when no fallback is\n      // specified but the type check fails, render a series of substitutions\n      // which may help debug why the type check failed. However, we can't\n      // distinguish ordinary type mismatch from cycles, and we need a way\n      // to handle cycles. And we may want UI for showing the substitutions\n      // anyway, even when a fallback is specified.\n      if (fromFallback) {\n        if (match.fallback) {\n          return Renderer.render(match.fallback, substitution.renderingContext(context)).nodes;\n        }\n      } else if (match.substitutionText !== null) {\n        const matching = SDK.CSSPropertyParser.matchDeclaration(\n            '--property', match.substitutionText,\n            this.#matchedStyles.propertyMatchers(match.style, this.#computedStyles));\n        return Renderer\n            .renderValueNodes(\n                {name: '--property', value: match.substitutionText}, matching,\n                getPropertyRenderers(\n                    '--property', match.style, this.#stylesPane, this.#matchedStyles, null, this.#computedStyles),\n                substitution)\n            .nodes;\n      }\n    }\n\n    const renderedFallback = match.fallback ? Renderer.render(match.fallback, context) : undefined;\n\n    const attrCall =\n        this.#treeElement?.getTracingTooltip('attr', match.node, this.#matchedStyles, this.#computedStyles, context);\n    const tooltipId = attributeMissing ? undefined : this.#treeElement?.getTooltipId('custom-attribute');\n    // clang-format off\n    render(html`\n        <span data-title=${computedValue || ''}\n              jslog=${VisualLogging.link('css-variable').track({click: true, hover: true})}\n        >${attrCall ?? 'attr'}(<span class=${attributeClass} aria-details=${ifDefined(tooltipId)}>${match.name}</span>${\n            match.type ? html` <span class=${typeClass}>${match.type}</span>` : nothing\n        }${renderedFallback ? html`, <span class=${fallbackClass}>${renderedFallback.nodes}</span>` : nothing\n        })</span>${tooltipId ? html`\n          <devtools-tooltip\n            id=${tooltipId}\n            variant=rich\n            jslogContext=elements.css-var\n          >${JSON.stringify(rawValue)}</devtools-tooltip>` : ''}`, varSwatch);\n    // clang-format on\n\n    const color = computedValue && Common.Color.parse(computedValue);\n    if (!color) {\n      return [varSwatch];\n    }\n\n    const colorSwatch = new ColorRenderer(this.#stylesPane, this.#treeElement).renderColorSwatch(color, varSwatch);\n    context.addControl('color', colorSwatch);\n\n    if (fromFallback) {\n      renderedFallback?.cssControls.get('color')?.forEach(\n          innerSwatch => innerSwatch.addEventListener(InlineEditor.ColorSwatch.ColorChangedEvent.eventName, ev => {\n            colorSwatch.setColor(ev.data.color);\n          }));\n    }\n\n    return [colorSwatch, varSwatch];\n  }\n}\n\n// clang-format off\nexport class LinearGradientRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.LinearGradientMatch) {\n  // clang-format on\n  override render(match: SDK.CSSPropertyParserMatchers.LinearGradientMatch, context: RenderingContext): Node[] {\n    const children = ASTUtils.children(match.node);\n    const {nodes, cssControls} = Renderer.render(children, context);\n    const angles = cssControls.get('angle');\n    const angle = angles?.length === 1 ? angles[0] : null;\n\n    if (angle instanceof InlineEditor.CSSAngle.CSSAngle) {\n      angle.updateProperty(context.matchedResult.getComputedText(match.node));\n      const args = ASTUtils.callArgs(match.node);\n      const angleNode = args[0]?.find(\n          node => context.matchedResult.getMatch(node) instanceof SDK.CSSPropertyParserMatchers.AngleMatch);\n      const angleMatch = angleNode && context.matchedResult.getMatch(angleNode);\n      if (angleMatch) {\n        angle.addEventListener(InlineEditor.InlineEditorUtils.ValueChangedEvent.eventName, ev => {\n          angle.updateProperty(\n              context.matchedResult.getComputedText(match.node, match => match === angleMatch ? ev.data.value : null));\n        });\n      }\n    }\n    return nodes;\n  }\n}\n\n// clang-format off\nexport class RelativeColorChannelRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.RelativeColorChannelMatch) {\n  // clang-format on\n  readonly #treeElement: StylePropertyTreeElement|null;\n  constructor(treeElement: StylePropertyTreeElement|null) {\n    super();\n    this.#treeElement = treeElement;\n  }\n  override render(match: SDK.CSSPropertyParserMatchers.RelativeColorChannelMatch, context: RenderingContext): Node[] {\n    const color = context.findParent(match.node, SDK.CSSPropertyParserMatchers.ColorMatch);\n    if (!color?.relativeColor) {\n      return [document.createTextNode(match.text)];\n    }\n\n    const value = match.getColorChannelValue(color.relativeColor);\n\n    if (value === null) {\n      return [document.createTextNode(match.text)];\n    }\n\n    const evaluation =\n        context.tracing?.applyEvaluation([], () => ({placeholder: [document.createTextNode(value.toFixed(3))]}));\n    if (evaluation) {\n      return evaluation;\n    }\n\n    const span = document.createElement('span');\n    span.append(match.text);\n    const tooltipId = this.#treeElement?.getTooltipId('relative-color-channel');\n    if (!tooltipId) {\n      return [span];\n    }\n    span.setAttribute('aria-details', tooltipId);\n    const tooltip = new Tooltips.Tooltip.Tooltip({\n      id: tooltipId,\n      variant: 'rich',\n      anchor: span,\n      jslogContext: 'elements.relative-color-channel',\n    });\n    tooltip.append(value.toFixed(3));\n\n    return [span, tooltip];\n  }\n}\n\n// clang-format off\nexport class ColorRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.ColorMatch) {\n  // clang-format on\n  readonly #treeElement: StylePropertyTreeElement|null;\n  readonly #stylesPane: StylesSidebarPane;\n  constructor(stylesPane: StylesSidebarPane, treeElement: StylePropertyTreeElement|null) {\n    super();\n    this.#treeElement = treeElement;\n    this.#stylesPane = stylesPane;\n  }\n\n  #getValueChild(match: SDK.CSSPropertyParserMatchers.ColorMatch, context: RenderingContext): {\n    valueChild: HTMLSpanElement,\n    cssControls?: SDK.CSSPropertyParser.CSSControlMap,\n    childTracingContexts?: TracingContext[],\n  } {\n    const valueChild = document.createElement('span');\n    if (match.node.name !== 'CallExpression') {\n      valueChild.appendChild(document.createTextNode(match.text));\n      return {valueChild};\n    }\n\n    const func = context.matchedResult.ast.text(match.node.getChild('Callee'));\n    const args = ASTUtils.siblings(match.node.getChild('ArgList'));\n\n    const childTracingContexts = context.tracing?.evaluation([args], {match, context}) ?? undefined;\n    const renderingContext = childTracingContexts?.at(0)?.renderingContext(context) ?? context;\n    const {nodes, cssControls} = Renderer.renderInto(args, renderingContext, valueChild);\n    render(\n        html`${\n            this.#treeElement?.getTracingTooltip(\n                func, match.node, this.#treeElement.matchedStyles(), this.#treeElement.getComputedStyles() ?? new Map(),\n                renderingContext) ??\n            func}${nodes}`,\n        valueChild);\n\n    return {valueChild, cssControls, childTracingContexts};\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.ColorMatch, context: RenderingContext): Node[] {\n    const {valueChild, cssControls, childTracingContexts} = this.#getValueChild(match, context);\n    let colorText = context.matchedResult.getComputedText(match.node);\n\n    if (match.relativeColor) {\n      const fakeSpan = document.body.appendChild(document.createElement('span'));\n      fakeSpan.style.backgroundColor = colorText;\n      colorText = window.getComputedStyle(fakeSpan).backgroundColor?.toString() || colorText;\n      fakeSpan.remove();\n    }\n\n    // Now try render a color swatch if the result is parsable.\n    const color = Common.Color.parse(colorText);\n    if (!color) {\n      if (match.node.name === 'CallExpression') {\n        return Renderer.render(ASTUtils.children(match.node), context).nodes;\n      }\n      return [document.createTextNode(colorText)];\n    }\n\n    if (match.node.name === 'CallExpression' && childTracingContexts) {\n      const evaluation = context.tracing?.applyEvaluation(childTracingContexts, () => {\n        const displayColor = color.as(((color.alpha ?? 1) !== 1) ? Common.Color.Format.HEXA : Common.Color.Format.HEX);\n        const colorText = document.createElement('span');\n        colorText.textContent = displayColor.asString();\n        const swatch =\n            new ColorRenderer(this.#stylesPane, null)\n                .renderColorSwatch(\n                    displayColor.isGamutClipped() ? color : (displayColor.nickname() ?? displayColor), colorText);\n        swatch.addEventListener(InlineEditor.ColorSwatch.ColorChangedEvent.eventName, ev => {\n          colorText.textContent = ev.data.color.asString();\n        });\n        context.addControl('color', swatch);\n        return {placeholder: [swatch, colorText]};\n      });\n      if (evaluation) {\n        return evaluation;\n      }\n    }\n\n    const swatch = this.renderColorSwatch(color, valueChild);\n    context.addControl('color', swatch);\n\n    // For hsl/hwb colors, hook up the angle swatch for the hue.\n    if (cssControls && match.node.name === 'CallExpression' &&\n        context.ast.text(match.node.getChild('Callee')).match(/^(hsla?|hwba?)/)) {\n      const [angle] = cssControls.get('angle') ?? [];\n      if (angle instanceof InlineEditor.CSSAngle.CSSAngle) {\n        angle.updateProperty(swatch.getColor()?.asString() ?? '');\n        angle.addEventListener(InlineEditor.InlineEditorUtils.ValueChangedEvent.eventName, ev => {\n          const hue = Common.Color.parseHueNumeric(ev.data.value);\n          const color = swatch.getColor();\n          if (!hue || !color) {\n            return;\n          }\n          if (color.is(Common.Color.Format.HSL) || color.is(Common.Color.Format.HSLA)) {\n            swatch.setColor(new Common.Color.HSL(hue, color.s, color.l, color.alpha));\n          } else if (color.is(Common.Color.Format.HWB) || color.is(Common.Color.Format.HWBA)) {\n            swatch.setColor(new Common.Color.HWB(hue, color.w, color.b, color.alpha));\n          }\n          angle.updateProperty(swatch.getColor()?.asString() ?? '');\n        });\n      }\n    }\n    return [swatch, valueChild];\n  }\n\n  renderColorSwatch(color: Common.Color.Color|undefined, valueChild: Node): InlineEditor.ColorSwatch.ColorSwatch {\n    const editable = this.#treeElement?.editable();\n    const shiftClickMessage = i18nString(UIStrings.shiftClickToChangeColorFormat);\n    const tooltip = editable ? i18nString(UIStrings.openColorPickerS, {PH1: shiftClickMessage}) : '';\n\n    const swatch = new InlineEditor.ColorSwatch.ColorSwatch(tooltip);\n    swatch.setReadonly(!editable);\n    if (color) {\n      swatch.renderColor(color);\n    }\n\n    if (this.#treeElement?.editable()) {\n      const treeElement = this.#treeElement;\n      const onColorChanged = (): void => {\n        void treeElement.applyStyleText(treeElement.renderedPropertyText(), false);\n      };\n\n      const onColorFormatChanged = (e: InlineEditor.ColorSwatch.ColorFormatChangedEvent): void => {\n        valueChild.textContent = e.data.color.getAuthoredText() ?? e.data.color.asString();\n        void treeElement.applyStyleText(treeElement.renderedPropertyText(), false);\n      };\n\n      swatch.addEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, () => {\n        Host.userMetrics.swatchActivated(Host.UserMetrics.SwatchType.COLOR);\n      });\n      swatch.addEventListener(InlineEditor.ColorSwatch.ColorChangedEvent.eventName, onColorChanged);\n      swatch.addEventListener(InlineEditor.ColorSwatch.ColorFormatChangedEvent.eventName, onColorFormatChanged);\n\n      const swatchIcon =\n          new ColorSwatchPopoverIcon(treeElement, treeElement.parentPane().swatchPopoverHelper(), swatch);\n      swatchIcon.addEventListener(ColorSwatchPopoverIconEvents.COLOR_CHANGED, ev => {\n        valueChild.textContent = ev.data.getAuthoredText() ?? ev.data.asString();\n        swatch.setColor(ev.data);\n      });\n      if (treeElement.property.name === 'color') {\n        void this.#addColorContrastInfo(swatchIcon);\n      }\n    }\n\n    return swatch;\n  }\n\n  async #addColorContrastInfo(swatchIcon: ColorSwatchPopoverIcon): Promise<void> {\n    const cssModel = this.#stylesPane.cssModel();\n    const node = this.#stylesPane.node();\n    if (!cssModel || typeof node?.id === 'undefined') {\n      return;\n    }\n    const contrastInfo = new ColorPicker.ContrastInfo.ContrastInfo(await cssModel.getBackgroundColors(node.id));\n    swatchIcon.setContrastInfo(contrastInfo);\n  }\n}\n\n// clang-format off\nexport class LightDarkColorRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.LightDarkColorMatch) {\n  // clang-format on\n  readonly #treeElement: StylePropertyTreeElement|null;\n  readonly #stylesPane: StylesSidebarPane;\n  readonly #matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles;\n  constructor(\n      stylesPane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      treeElement: StylePropertyTreeElement|null) {\n    super();\n    this.#treeElement = treeElement;\n    this.#stylesPane = stylesPane;\n    this.#matchedStyles = matchedStyles;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.LightDarkColorMatch, context: RenderingContext): Node[] {\n    const content = document.createElement('span');\n    content.appendChild(document.createTextNode('light-dark('));\n    const light = content.appendChild(document.createElement('span'));\n    content.appendChild(document.createTextNode(', '));\n    const dark = content.appendChild(document.createElement('span'));\n    content.appendChild(document.createTextNode(')'));\n    const {cssControls: lightControls} = Renderer.renderInto(match.light, context, light);\n    const {cssControls: darkControls} = Renderer.renderInto(match.dark, context, dark);\n\n    if (context.matchedResult.hasUnresolvedSubstitutions(match.node)) {\n      return [content];\n    }\n\n    const color = Common.Color.parse(\n        context.matchedResult.getComputedTextRange(match.light[0], match.light[match.light.length - 1]));\n    if (!color) {\n      return [content];\n    }\n\n    // Pass an undefined color here to insert a placeholder swatch that will be filled in from the async\n    // applyColorScheme below.\n    const colorSwatch = new ColorRenderer(this.#stylesPane, this.#treeElement).renderColorSwatch(undefined, content);\n    context.addControl('color', colorSwatch);\n    void this.applyColorScheme(match, context, colorSwatch, light, dark, lightControls, darkControls);\n\n    return [colorSwatch, content];\n  }\n\n  async applyColorScheme(\n      match: SDK.CSSPropertyParserMatchers.LightDarkColorMatch, context: RenderingContext,\n      colorSwatch: InlineEditor.ColorSwatch.ColorSwatch, light: HTMLSpanElement, dark: HTMLSpanElement,\n      lightControls: SDK.CSSPropertyParser.CSSControlMap,\n      darkControls: SDK.CSSPropertyParser.CSSControlMap): Promise<void> {\n    const activeColor = await this.#activeColor(match);\n    if (!activeColor) {\n      return;\n    }\n\n    const activeColorSwatches = (activeColor === match.light ? lightControls : darkControls).get('color');\n    activeColorSwatches?.forEach(\n        swatch => swatch.addEventListener(\n            InlineEditor.ColorSwatch.ColorChangedEvent.eventName, ev => colorSwatch.setColor(ev.data.color)));\n    const inactiveColor = (activeColor === match.light) ? dark : light;\n    const colorText = context.matchedResult.getComputedTextRange(activeColor[0], activeColor[activeColor.length - 1]);\n    const color = colorText && Common.Color.parse(colorText);\n    inactiveColor.classList.add('inactive-value');\n    if (color) {\n      colorSwatch.renderColor(color);\n    }\n  }\n\n  // Returns the syntax node group corresponding the active color scheme:\n  // If the element has color-scheme set to light or dark, return the respective group.\n  // If the element has color-scheme set to both light and dark, we check the prefers-color-scheme media query.\n  async #activeColor(match: SDK.CSSPropertyParserMatchers.LightDarkColorMatch):\n      Promise<CodeMirror.SyntaxNode[]|undefined> {\n    const activeColorSchemes = this.#matchedStyles.resolveProperty('color-scheme', match.style)\n                                   ?.parseValue(this.#matchedStyles, new Map())\n                                   ?.getComputedPropertyValueText()\n                                   .split(' ') ??\n        [];\n    const hasLight = activeColorSchemes.includes(SDK.CSSModel.ColorScheme.LIGHT);\n    const hasDark = activeColorSchemes.includes(SDK.CSSModel.ColorScheme.DARK);\n\n    if (!hasDark && !hasLight) {\n      return match.light;\n    }\n    if (!hasLight) {\n      return match.dark;\n    }\n    if (!hasDark) {\n      return match.light;\n    }\n\n    switch (await this.#stylesPane.cssModel()?.colorScheme()) {\n      case SDK.CSSModel.ColorScheme.DARK:\n        return match.dark;\n      case SDK.CSSModel.ColorScheme.LIGHT:\n        return match.light;\n      default:\n        return undefined;\n    }\n  }\n}\n\n// clang-format off\nexport class ColorMixRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.ColorMixMatch) {\n  // clang-format on\n  readonly #pane: StylesSidebarPane;\n  readonly #matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles;\n  readonly #computedStyles: Map<string, string>;\n  readonly #treeElement: StylePropertyTreeElement|null;\n\n  constructor(\n      pane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      computedStyles: Map<string, string>, treeElement: StylePropertyTreeElement|null) {\n    super();\n    this.#pane = pane;\n    this.#matchedStyles = matchedStyles;\n    this.#computedStyles = computedStyles;\n    this.#treeElement = treeElement;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.ColorMixMatch, context: RenderingContext): Node[] {\n    const hookUpColorArg = (node: Node, onChange: (newColorText: string) => void): boolean => {\n      if (node instanceof InlineEditor.ColorMixSwatch.ColorMixSwatch ||\n          node instanceof InlineEditor.ColorSwatch.ColorSwatch) {\n        if (node instanceof InlineEditor.ColorSwatch.ColorSwatch) {\n          node.addEventListener(\n              InlineEditor.ColorSwatch.ColorChangedEvent.eventName,\n              ev => onChange(ev.data.color.getAuthoredText() ?? ev.data.color.asString()));\n        } else {\n          node.addEventListener(\n              InlineEditor.ColorMixSwatch.ColorMixChangedEvent.eventName, ev => onChange(ev.data.text));\n        }\n        const color = node.getText();\n        if (color) {\n          onChange(color);\n          return true;\n        }\n      }\n      return false;\n    };\n\n    const childTracingContexts =\n        context.tracing?.evaluation([match.space, match.color1, match.color2], {match, context});\n    const childRenderingContexts =\n        childTracingContexts?.map(ctx => ctx.renderingContext(context)) ?? [context, context, context];\n\n    const contentChild = document.createElement('span');\n    const color1 = Renderer.renderInto(match.color1, childRenderingContexts[1], contentChild);\n    const color2 = Renderer.renderInto(match.color2, childRenderingContexts[2], contentChild);\n    render(\n        html`${\n            this.#treeElement?.getTracingTooltip(\n                'color-mix', match.node, this.#matchedStyles, this.#computedStyles, context) ??\n            'color-mix'}(${Renderer.render(match.space, childRenderingContexts[0]).nodes}, ${color1.nodes}, ${\n            color2.nodes})`,\n        contentChild);\n\n    const color1Controls = color1.cssControls.get('color') ?? [];\n    const color2Controls = color2.cssControls.get('color') ?? [];\n\n    if (context.matchedResult.hasUnresolvedSubstitutions(match.node) || color1Controls.length !== 1 ||\n        color2Controls.length !== 1) {\n      return [contentChild];\n    }\n\n    const space = match.space.map(space => context.matchedResult.getComputedText(space)).join(' ');\n    const color1Text = match.color1.map(color => context.matchedResult.getComputedText(color)).join(' ');\n    const color2Text = match.color2.map(color => context.matchedResult.getComputedText(color)).join(' ');\n    const colorMixText = `color-mix(${space}, ${color1Text}, ${color2Text})`;\n\n    const nodeId = this.#pane.node()?.id;\n    if (nodeId !== undefined && childTracingContexts) {\n      const evaluation = context.tracing?.applyEvaluation(childTracingContexts, () => {\n        const initialColor = Common.Color.parse('#000') as Common.Color.Color;\n        const colorText = document.createElement('span');\n        colorText.textContent = initialColor.asString();\n        const swatch = new ColorRenderer(this.#pane, null).renderColorSwatch(initialColor, colorText);\n        swatch.addEventListener(InlineEditor.ColorSwatch.ColorChangedEvent.eventName, ev => {\n          colorText.textContent = ev.data.color.asString();\n        });\n        context.addControl('color', swatch);\n        const asyncEvalCallback = async(): Promise<boolean> => {\n          const results = await this.#pane.cssModel()?.resolveValues(undefined, nodeId, colorMixText);\n          if (results) {\n            const color = Common.Color.parse(results[0]);\n            if (color) {\n              swatch.setColor(color.as(Common.Color.Format.HEXA));\n              return true;\n            }\n          }\n          return false;\n        };\n        return {placeholder: [swatch, colorText], asyncEvalCallback};\n      });\n      if (evaluation) {\n        return evaluation;\n      }\n    }\n\n    const swatch = new InlineEditor.ColorMixSwatch.ColorMixSwatch();\n    if (!hookUpColorArg(color1Controls[0], text => swatch.setFirstColor(text)) ||\n        !hookUpColorArg(color2Controls[0], text => swatch.setSecondColor(text))) {\n      return [contentChild];\n    }\n    swatch.tabIndex = -1;\n    swatch.setColorMixText(colorMixText);\n    UI.ARIAUtils.setLabel(swatch, colorMixText);\n    context.addControl('color', swatch);\n\n    if (context.tracing) {\n      return [swatch, contentChild];\n    }\n\n    const tooltipId = this.#treeElement?.getTooltipId('color-mix');\n    if (!tooltipId) {\n      return [swatch, contentChild];\n    }\n    swatch.setAttribute('aria-details', tooltipId);\n    const tooltip = new Tooltips.Tooltip.Tooltip({\n      id: tooltipId,\n      variant: 'rich',\n      anchor: swatch,\n      jslogContext: 'elements.css-color-mix',\n    });\n    const colorTextSpan = tooltip.appendChild(document.createElement('span'));\n    tooltip.onbeforetoggle = e => {\n      if ((e as ToggleEvent).newState !== 'open') {\n        return;\n      }\n      const color = swatch.mixedColor();\n      if (!color) {\n        return;\n      }\n      const rgb = color.as(Common.Color.Format.HEX);\n      colorTextSpan.textContent = rgb.isGamutClipped() ? color.asString() : rgb.asString();\n    };\n\n    return [swatch, contentChild, tooltip];\n  }\n}\n\n// clang-format off\nexport class AngleRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.AngleMatch) {\n  // clang-format on\n  readonly #treeElement: StylePropertyTreeElement|null;\n  constructor(treeElement: StylePropertyTreeElement|null) {\n    super();\n    this.#treeElement = treeElement;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.AngleMatch, context: RenderingContext): Node[] {\n    const angleText = match.text;\n    if (!this.#treeElement?.editable()) {\n      return [document.createTextNode(angleText)];\n    }\n    const cssAngle = new InlineEditor.CSSAngle.CSSAngle();\n    cssAngle.setAttribute('jslog', `${VisualLogging.showStyleEditor().track({click: true}).context('css-angle')}`);\n    const valueElement = document.createElement('span');\n    valueElement.textContent = angleText;\n    cssAngle.data = {\n      angleText,\n      containingPane:\n          (this.#treeElement.parentPane().element.enclosingNodeOrSelfWithClass('style-panes-wrapper') as HTMLElement),\n    };\n    cssAngle.append(valueElement);\n\n    const treeElement = this.#treeElement;\n    cssAngle.addEventListener('popovertoggled', ({data}) => {\n      const section = treeElement.section();\n      if (!section) {\n        return;\n      }\n\n      if (data.open) {\n        treeElement.parentPane().hideAllPopovers();\n        treeElement.parentPane().activeCSSAngle = cssAngle;\n        Host.userMetrics.swatchActivated(Host.UserMetrics.SwatchType.ANGLE);\n      }\n\n      section.element.classList.toggle('has-open-popover', data.open);\n      treeElement.parentPane().setEditingStyle(data.open);\n\n      // Commit the value as a major change after the angle popover is closed.\n      if (!data.open) {\n        void treeElement.applyStyleText(treeElement.renderedPropertyText(), true);\n      }\n    });\n    cssAngle.addEventListener('valuechanged', async ({data}) => {\n      valueElement.textContent = data.value;\n      await treeElement.applyStyleText(treeElement.renderedPropertyText(), false);\n    });\n    cssAngle.addEventListener('unitchanged', ({data}) => {\n      valueElement.textContent = data.value;\n    });\n\n    context.addControl('angle', cssAngle);\n    return [cssAngle];\n  }\n}\n\n// clang-format off\nexport class LinkableNameRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.LinkableNameMatch) {\n  // clang-format on\n  readonly #matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles;\n  readonly #stylesPane: StylesSidebarPane;\n  constructor(matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, stylesSidebarPane: StylesSidebarPane) {\n    super();\n    this.#matchedStyles = matchedStyles;\n    this.#stylesPane = stylesSidebarPane;\n  }\n\n  #getLinkData(match: SDK.CSSPropertyParserMatchers.LinkableNameMatch):\n      {jslogContext: string, metric: null|Host.UserMetrics.SwatchType, ruleBlock: string, isDefined: boolean} {\n    switch (match.propertyName) {\n      case SDK.CSSPropertyParserMatchers.LinkableNameProperties.ANIMATION:\n      case SDK.CSSPropertyParserMatchers.LinkableNameProperties.ANIMATION_NAME:\n        return {\n          jslogContext: 'css-animation-name',\n          metric: Host.UserMetrics.SwatchType.ANIMATION_NAME_LINK,\n          ruleBlock: '@keyframes',\n          isDefined: Boolean(this.#matchedStyles.keyframes().find(kf => kf.name().text === match.text)),\n        };\n      case SDK.CSSPropertyParserMatchers.LinkableNameProperties.FONT_PALETTE:\n        return {\n          jslogContext: 'css-font-palette',\n          metric: null,\n          ruleBlock: '@font-palette-values',\n          isDefined: this.#matchedStyles.fontPaletteValuesRule()?.name().text === match.text,\n        };\n      case SDK.CSSPropertyParserMatchers.LinkableNameProperties.POSITION_TRY:\n      case SDK.CSSPropertyParserMatchers.LinkableNameProperties.POSITION_TRY_FALLBACKS:\n        return {\n          jslogContext: 'css-position-try',\n          metric: Host.UserMetrics.SwatchType.POSITION_TRY_LINK,\n          ruleBlock: '@position-try',\n          isDefined: Boolean(this.#matchedStyles.positionTryRules().find(pt => pt.name().text === match.text)),\n        };\n      case SDK.CSSPropertyParserMatchers.LinkableNameProperties.FUNCTION:\n        return {\n          jslogContext: 'css-function',\n          metric: null,\n          ruleBlock: '@function',\n          isDefined: Boolean(this.#matchedStyles.getRegisteredFunction(match.text)),\n        };\n    }\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.LinkableNameMatch): Node[] {\n    const swatch = new InlineEditor.LinkSwatch.LinkSwatch();\n    const {metric, jslogContext, ruleBlock, isDefined} = this.#getLinkData(match);\n    swatch.data = {\n      text: match.text,\n      tooltip: isDefined ? undefined : {title: i18nString(UIStrings.sIsNotDefined, {PH1: match.text})},\n      isDefined,\n      onLinkActivate: (): void => {\n        metric && Host.userMetrics.swatchActivated(metric);\n        if (match.propertyName === SDK.CSSPropertyParserMatchers.LinkableNameProperties.FUNCTION) {\n          const functionName = this.#matchedStyles.getRegisteredFunction(match.text);\n          if (!functionName) {\n            return;\n          }\n          this.#stylesPane.jumpToFunctionDefinition(functionName);\n        } else {\n          this.#stylesPane.jumpToSectionBlock(`${ruleBlock} ${match.text}`);\n        }\n      },\n      jslogContext,\n    };\n\n    if (match.propertyName === SDK.CSSPropertyParserMatchers.LinkableNameProperties.ANIMATION ||\n        match.propertyName === SDK.CSSPropertyParserMatchers.LinkableNameProperties.ANIMATION_NAME) {\n      const el = document.createElement('span');\n      el.appendChild(swatch);\n\n      const node = this.#stylesPane.node();\n      if (node) {\n        const animationModel = node.domModel().target().model(SDK.AnimationModel.AnimationModel);\n        void animationModel?.getAnimationGroupForAnimation(match.text, node.id).then(maybeAnimationGroup => {\n          if (!maybeAnimationGroup) {\n            return;\n          }\n\n          const icon = IconButton.Icon.create('animation', 'open-in-animations-panel');\n          icon.setAttribute('jslog', `${VisualLogging.link('open-in-animations-panel').track({click: true})}`);\n          icon.setAttribute('role', 'button');\n          icon.setAttribute('title', i18nString(UIStrings.jumpToAnimationsPanel));\n          icon.addEventListener('mouseup', ev => {\n            ev.consume(true);\n\n            void Common.Revealer.reveal(maybeAnimationGroup);\n          });\n          el.insertBefore(icon, swatch);\n        });\n      }\n      return [el];\n    }\n\n    return [swatch];\n  }\n}\n\n// clang-format off\nexport class BezierRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.BezierMatch) {\n  // clang-format on\n  readonly #treeElement: StylePropertyTreeElement|null;\n  constructor(treeElement: StylePropertyTreeElement|null) {\n    super();\n    this.#treeElement = treeElement;\n  }\n  override render(match: SDK.CSSPropertyParserMatchers.BezierMatch, context: RenderingContext): Node[] {\n    const nodes = match.node.name === 'CallExpression' ? Renderer.render(ASTUtils.children(match.node), context).nodes :\n                                                         [document.createTextNode(match.text)];\n    if (!this.#treeElement?.editable() ||\n        !InlineEditor.AnimationTimingModel.AnimationTimingModel.parse(\n            context.matchedResult.getComputedText(match.node))) {\n      return nodes;\n    }\n    const swatchPopoverHelper = this.#treeElement.parentPane().swatchPopoverHelper();\n    const icon = IconButton.Icon.create('bezier-curve-filled', 'bezier-swatch-icon');\n    icon.setAttribute('jslog', `${VisualLogging.showStyleEditor('bezier')}`);\n    icon.tabIndex = -1;\n    icon.addEventListener('click', () => {\n      Host.userMetrics.swatchActivated(Host.UserMetrics.SwatchType.ANIMATION_TIMING);\n    });\n    const bezierText = document.createElement('span');\n    bezierText.append(...nodes);\n    new BezierPopoverIcon({treeElement: this.#treeElement, swatchPopoverHelper, swatch: icon, bezierText});\n    return [icon, bezierText];\n  }\n}\n\n// clang-format off\nexport class AutoBaseRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.AutoBaseMatch) {\n  readonly #computedStyle: Map<string, string>;\n  // clang-format on\n\n  constructor(computedStyle: Map<string, string>) {\n    super();\n    this.#computedStyle = computedStyle;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.AutoBaseMatch, context: RenderingContext): Node[] {\n    const content = document.createElement('span');\n    content.appendChild(document.createTextNode('-internal-auto-base('));\n    const auto = content.appendChild(document.createElement('span'));\n    content.appendChild(document.createTextNode(', '));\n    const base = content.appendChild(document.createElement('span'));\n    content.appendChild(document.createTextNode(')'));\n\n    Renderer.renderInto(match.auto, context, auto);\n    Renderer.renderInto(match.base, context, base);\n\n    const activeAppearance = this.#computedStyle.get('appearance');\n    if (activeAppearance?.startsWith('base')) {\n      auto.classList.add('inactive-value');\n    } else {\n      base.classList.add('inactive-value');\n    }\n\n    return [content];\n  }\n}\n\nexport const enum ShadowPropertyType {\n  X = 'x',\n  Y = 'y',\n  SPREAD = 'spread',\n  BLUR = 'blur',\n  INSET = 'inset',\n  COLOR = 'color',\n}\n\ninterface ShadowProperty {\n  value: string|CodeMirror.SyntaxNode;\n  source: CodeMirror.SyntaxNode|null;\n  expansionContext: RenderingContext|null;\n  propertyType: ShadowPropertyType;\n}\n\ntype ShadowLengthProperty = ShadowProperty&{\n  length: InlineEditor.CSSShadowEditor.CSSLength,\n  propertyType: Exclude<ShadowPropertyType, ShadowPropertyType.INSET|ShadowPropertyType.COLOR>,\n};\n\n// The shadow model is an abstraction over the various shadow properties on the one hand and the order they were defined\n// in on the other, so that modifications through the shadow editor can retain the property order in the authored text.\n// The model also looks through var()s by keeping a mapping between individual properties and any var()s they are coming\n// from, replacing the var() functions as needed with concrete values when edited.\nexport class ShadowModel implements InlineEditor.CSSShadowEditor.CSSShadowModel {\n  readonly #properties: ShadowProperty[];\n  readonly #shadowType: SDK.CSSPropertyParserMatchers.ShadowType;\n  readonly #context: RenderingContext;\n\n  constructor(\n      shadowType: SDK.CSSPropertyParserMatchers.ShadowType, properties: ShadowProperty[], context: RenderingContext) {\n    this.#shadowType = shadowType;\n    this.#properties = properties;\n    this.#context = context;\n  }\n  isBoxShadow(): boolean {\n    return this.#shadowType === SDK.CSSPropertyParserMatchers.ShadowType.BOX_SHADOW;\n  }\n  inset(): boolean {\n    return Boolean(this.#properties.find(property => property.propertyType === ShadowPropertyType.INSET));\n  }\n  #length(lengthType: ShadowLengthProperty['propertyType']): InlineEditor.CSSShadowEditor.CSSLength {\n    return this.#properties.find((property): property is ShadowLengthProperty => property.propertyType === lengthType)\n               ?.length ??\n        InlineEditor.CSSShadowEditor.CSSLength.zero();\n  }\n  offsetX(): InlineEditor.CSSShadowEditor.CSSLength {\n    return this.#length(ShadowPropertyType.X);\n  }\n  offsetY(): InlineEditor.CSSShadowEditor.CSSLength {\n    return this.#length(ShadowPropertyType.Y);\n  }\n  blurRadius(): InlineEditor.CSSShadowEditor.CSSLength {\n    return this.#length(ShadowPropertyType.BLUR);\n  }\n  spreadRadius(): InlineEditor.CSSShadowEditor.CSSLength {\n    return this.#length(ShadowPropertyType.SPREAD);\n  }\n\n  #needsExpansion(property: ShadowProperty): boolean {\n    return Boolean(property.expansionContext && property.source);\n  }\n\n  #expandPropertyIfNeeded(property: ShadowProperty): void {\n    if (this.#needsExpansion(property)) {\n      // Rendering prefers `source` if present. It's sufficient to clear it in order to switch rendering to render the\n      // individual properties directly.\n      const source = property.source;\n      this.#properties.filter(property => property.source === source).forEach(property => {\n        property.source = null;\n      });\n    }\n  }\n\n  #expandOrGetProperty(propertyType: Exclude<ShadowPropertyType, ShadowLengthProperty['propertyType']>):\n      {property: ShadowProperty|undefined, index: number};\n  #expandOrGetProperty(propertyType: ShadowLengthProperty['propertyType']):\n      {property: ShadowLengthProperty|undefined, index: number};\n  #expandOrGetProperty(propertyType: ShadowPropertyType): {property: ShadowProperty|undefined, index: number} {\n    const index = this.#properties.findIndex(property => property.propertyType === propertyType);\n    const property = index >= 0 ? this.#properties[index] : undefined;\n    property && this.#expandPropertyIfNeeded(property);\n    return {property, index};\n  }\n\n  setInset(inset: boolean): void {\n    if (!this.isBoxShadow()) {\n      return;\n    }\n\n    const {property, index} = this.#expandOrGetProperty(ShadowPropertyType.INSET);\n    if (property) {\n      // For `inset`, remove the entry if value is false, otherwise don't touch it.\n      if (!inset) {\n        this.#properties.splice(index, 1);\n      }\n    } else {\n      this.#properties.unshift(\n          {value: 'inset', source: null, expansionContext: null, propertyType: ShadowPropertyType.INSET});\n    }\n  }\n  #setLength(value: InlineEditor.CSSShadowEditor.CSSLength, propertyType: ShadowLengthProperty['propertyType']): void {\n    const {property} = this.#expandOrGetProperty(propertyType);\n    if (property) {\n      property.value = value.asCSSText();\n      property.length = value;\n      property.source = null;\n    } else {\n      // Lengths are ordered X, Y, Blur, Spread, with the latter two being optional. When inserting an optional property\n      // we need to insert it after Y or after Blur, depending on what's being inserted and which properties are\n      // present.\n      const insertionIdx = 1 +\n          this.#properties.findLastIndex(\n              property => property.propertyType === ShadowPropertyType.Y ||\n                  (propertyType === ShadowPropertyType.SPREAD && property.propertyType === ShadowPropertyType.BLUR));\n      if (insertionIdx > 0 && insertionIdx < this.#properties.length &&\n          this.#needsExpansion(this.#properties[insertionIdx]) &&\n          this.#properties[insertionIdx - 1].source === this.#properties[insertionIdx].source) {\n        // This prevents the edge case where insertion after the last length would break up a group of values that\n        // require expansion.\n        this.#expandPropertyIfNeeded(this.#properties[insertionIdx]);\n      }\n      this.#properties.splice(\n          insertionIdx, 0,\n          {value: value.asCSSText(), length: value, source: null, expansionContext: null, propertyType} as\n              ShadowLengthProperty);\n    }\n  }\n  setOffsetX(value: InlineEditor.CSSShadowEditor.CSSLength): void {\n    this.#setLength(value, ShadowPropertyType.X);\n  }\n  setOffsetY(value: InlineEditor.CSSShadowEditor.CSSLength): void {\n    this.#setLength(value, ShadowPropertyType.Y);\n  }\n  setBlurRadius(value: InlineEditor.CSSShadowEditor.CSSLength): void {\n    this.#setLength(value, ShadowPropertyType.BLUR);\n  }\n  setSpreadRadius(value: InlineEditor.CSSShadowEditor.CSSLength): void {\n    if (this.isBoxShadow()) {\n      this.#setLength(value, ShadowPropertyType.SPREAD);\n    }\n  }\n\n  renderContents(span: HTMLSpanElement): void {\n    span.removeChildren();\n    let previousSource = null;\n    for (const property of this.#properties) {\n      if (!property.source || property.source !== previousSource) {\n        if (property !== this.#properties[0]) {\n          span.append(' ');\n        }\n        // If `source` is present on the property that means it came from a var() and we'll use that to render.\n        if (property.source) {\n          span.append(...Renderer.render(property.source, this.#context).nodes);\n        } else if (typeof property.value === 'string') {\n          span.append(property.value);\n        } else {\n          span.append(...Renderer.render(property.value, property.expansionContext ?? this.#context).nodes);\n        }\n      }\n      previousSource = property.source;\n    }\n  }\n}\n\n// clang-format off\nexport class ShadowRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.ShadowMatch) {\n  readonly #treeElement: StylePropertyTreeElement|null;\n  // clang-format on\n  constructor(treeElement: StylePropertyTreeElement|null) {\n    super();\n    this.#treeElement = treeElement;\n  }\n\n  shadowModel(\n      shadow: CodeMirror.SyntaxNode[], shadowType: SDK.CSSPropertyParserMatchers.ShadowType,\n      context: RenderingContext): null|ShadowModel {\n    const properties: Array<ShadowProperty|ShadowLengthProperty> = [];\n    const missingLengths: Array<ShadowLengthProperty['propertyType']> =\n        [ShadowPropertyType.SPREAD, ShadowPropertyType.BLUR, ShadowPropertyType.Y, ShadowPropertyType.X];\n    let stillAcceptsLengths = true;\n\n    // We're parsing the individual shadow properties into an array here retaining the ordering. This also looks through\n    // var() functions by re-parsing the variable values on the fly. For properties coming from a var() we're keeping\n    // track of their origin to allow for adhoc expansion when one of those properties is edited.\n\n    const queue: Array<{\n      value: CodeMirror.SyntaxNode,\n      source: CodeMirror.SyntaxNode,\n      match: SDK.CSSPropertyParser.Match | undefined,\n      expansionContext: RenderingContext | null,\n    }> =\n        shadow.map(\n            value => ({value, source: value, match: context.matchedResult.getMatch(value), expansionContext: null}));\n    for (let item = queue.shift(); item; item = queue.shift()) {\n      const {value, source, match, expansionContext} = item;\n      const text = (expansionContext ?? context).ast.text(value);\n      if (value.name === 'NumberLiteral') {\n        if (!stillAcceptsLengths) {\n          return null;\n        }\n        const propertyType = missingLengths.pop();\n        if (propertyType === undefined ||\n            (propertyType === ShadowPropertyType.SPREAD &&\n             shadowType === SDK.CSSPropertyParserMatchers.ShadowType.TEXT_SHADOW)) {\n          return null;\n        }\n        const length = InlineEditor.CSSShadowEditor.CSSLength.parse(text);\n        if (!length) {\n          return null;\n        }\n        properties.push({value, source, length, propertyType, expansionContext});\n      } else if (match instanceof SDK.CSSPropertyParserMatchers.VariableMatch) {\n        // This doesn't come from any computed text, so we can rely on context here\n        const computedValue = context.matchedResult.getComputedText(value);\n        const computedValueAst = SDK.CSSPropertyParser.tokenizeDeclaration('--property', computedValue);\n        if (!computedValueAst) {\n          return null;\n        }\n        const matches = SDK.CSSPropertyParser.BottomUpTreeMatching.walkExcludingSuccessors(\n            computedValueAst, [new SDK.CSSPropertyParserMatchers.ColorMatcher()]);\n        if (matches.hasUnresolvedSubstitutions(matches.ast.tree)) {\n          return null;\n        }\n        queue.unshift(\n            ...ASTUtils.siblings(ASTUtils.declValue(matches.ast.tree))\n                .map(matchedNode => ({\n                       value: matchedNode,\n                       source: value,\n                       match: matches.getMatch(matchedNode),\n                       expansionContext: new RenderingContext(computedValueAst, null, context.renderers, matches),\n                     })));\n      } else {\n        // The length properties must come in one block, so if there were any lengths before, followed by a non-length\n        // property, we will not allow any future lengths.\n        stillAcceptsLengths = missingLengths.length === 4;\n        if (value.name === 'ValueName' && text.toLowerCase() === 'inset') {\n          if (shadowType === SDK.CSSPropertyParserMatchers.ShadowType.TEXT_SHADOW ||\n              properties.find(({propertyType}) => propertyType === ShadowPropertyType.INSET)) {\n            return null;\n          }\n          properties.push({value, source, propertyType: ShadowPropertyType.INSET, expansionContext});\n        } else if (\n            match instanceof SDK.CSSPropertyParserMatchers.ColorMatch ||\n            match instanceof SDK.CSSPropertyParserMatchers.ColorMixMatch) {\n          if (properties.find(({propertyType}) => propertyType === ShadowPropertyType.COLOR)) {\n            return null;\n          }\n          properties.push({value, source, propertyType: ShadowPropertyType.COLOR, expansionContext});\n        } else if (value.name !== 'Comment' && value.name !== 'Important') {\n          return null;\n        }\n      }\n    }\n    if (missingLengths.length > 2) {\n      // X and Y are mandatory\n      return null;\n    }\n    return new ShadowModel(shadowType, properties, context);\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.ShadowMatch, context: RenderingContext): Node[] {\n    const shadows = ASTUtils.split(ASTUtils.siblings(ASTUtils.declValue(match.node)));\n    const result: Node[] = [];\n\n    for (const shadow of shadows) {\n      const model = this.shadowModel(shadow, match.shadowType, context);\n      const isImportant = shadow.find(node => node.name === 'Important');\n\n      if (shadow !== shadows[0]) {\n        result.push(document.createTextNode(', '));\n      }\n\n      if (!model || !this.#treeElement?.editable()) {\n        const {nodes} = Renderer.render(shadow, context);\n        result.push(...nodes);\n        continue;\n      }\n\n      const swatch = new InlineEditor.Swatches.CSSShadowSwatch(model);\n      swatch.setAttribute('jslog', `${VisualLogging.showStyleEditor('css-shadow').track({click: true})}`);\n      swatch.iconElement().addEventListener('click', () => {\n        Host.userMetrics.swatchActivated(Host.UserMetrics.SwatchType.SHADOW);\n      });\n\n      const contents = document.createElement('span');\n      model.renderContents(contents);\n      const popoverHelper = new ShadowSwatchPopoverHelper(\n          this.#treeElement, this.#treeElement.parentPane().swatchPopoverHelper(), swatch);\n      const treeElement = this.#treeElement;\n      popoverHelper.addEventListener(ShadowEvents.SHADOW_CHANGED, () => {\n        model.renderContents(contents);\n        void treeElement.applyStyleText(treeElement.renderedPropertyText(), false);\n      });\n      result.push(swatch, contents);\n\n      if (isImportant) {\n        result.push(...[document.createTextNode(' '), ...Renderer.render(isImportant, context).nodes]);\n      }\n    }\n\n    return result;\n  }\n}\n\n// clang-format off\nexport class FontRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.FontMatch) {\n  // clang-format on\n  constructor(readonly treeElement: StylePropertyTreeElement) {\n    super();\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.FontMatch, context: RenderingContext): Node[] {\n    this.treeElement.section().registerFontProperty(this.treeElement);\n    const {nodes} = Renderer.render(ASTUtils.siblings(ASTUtils.declValue(match.node)), context);\n    return nodes;\n  }\n}\n\n// clang-format off\nexport class GridTemplateRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.GridTemplateMatch) {\n  // clang-format on\n  override render(match: SDK.CSSPropertyParserMatchers.GridTemplateMatch, context: RenderingContext): Node[] {\n    if (match.lines.length <= 1) {\n      return Renderer.render(ASTUtils.siblings(ASTUtils.declValue(match.node)), context).nodes;\n    }\n\n    const indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n    const container = document.createDocumentFragment();\n    for (const line of match.lines) {\n      const value = Renderer.render(line, context);\n      const lineBreak = UI.Fragment.html`<br /><span class='styles-clipboard-only'>${indent.repeat(2)}</span>`;\n      container.append(lineBreak, ...value.nodes);\n    }\n    return [container];\n  }\n}\n\nexport const SHORTHANDS_FOR_PERCENTAGES = new Set([\n  'inset',\n  'inset-block',\n  'inset-inline',\n  'margin',\n  'margin-block',\n  'margin-inline',\n  'padding',\n  'padding-block',\n  'padding-inline',\n]);\n\nasync function resolveValues(\n    stylesPane: StylesSidebarPane, propertyName: string, match: SDK.CSSPropertyParser.Match, context: RenderingContext,\n    ...values: string[]): Promise<string[]|null|undefined> {\n  // We want to resolve values against the original property we're tracing and not the property we're substituting,\n  // so try to look up the original name.\n  propertyName = context.tracing?.propertyName ?? context.matchedResult.ast.propertyName ?? propertyName;\n\n  if (SHORTHANDS_FOR_PERCENTAGES.has(propertyName) &&\n      (context.tracing?.expandPercentagesInShorthands ?? context.matchedResult.getLonghandValuesCount() > 1)) {\n    propertyName = context.getComputedLonghandName(match.node) ?? propertyName;\n  }\n  const nodeId = stylesPane.node()?.id;\n  if (nodeId === undefined) {\n    return null;\n  }\n\n  return (await stylesPane.cssModel()?.resolveValues(propertyName, nodeId, ...values)) ??\n      (await stylesPane.cssModel()?.resolveValues(undefined, nodeId, ...values));\n}\n\n// clang-format off\nexport class LengthRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.LengthMatch) {\n  // clang-format on\n  readonly #stylesPane: StylesSidebarPane;\n  readonly #treeElement: StylePropertyTreeElement|null;\n  readonly #propertyName: string;\n  constructor(stylesPane: StylesSidebarPane, propertyName: string, treeElement: StylePropertyTreeElement|null) {\n    super();\n    this.#stylesPane = stylesPane;\n    this.#treeElement = treeElement;\n    this.#propertyName = propertyName;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.LengthMatch, context: RenderingContext): Node[] {\n    const valueElement = document.createElement('span');\n    valueElement.tabIndex = -1;\n    valueElement.textContent = match.text;\n\n    if (!context.tracing) {\n      void this.#attachPopover(valueElement, match, context);\n    }\n    const evaluation = context.tracing?.applyEvaluation([], () => {\n      return {\n        placeholder: [valueElement],\n        asyncEvalCallback: () => this.#applyEvaluation(valueElement, match, context)\n      };\n    });\n\n    return evaluation ?? [valueElement];\n  }\n\n  async #applyEvaluation(\n      valueElement: HTMLElement, match: SDK.CSSPropertyParser.Match, context: RenderingContext): Promise<boolean> {\n    const pixelValue = await resolveValues(this.#stylesPane, this.#propertyName, match, context, match.text);\n\n    if (pixelValue?.[0] && pixelValue?.[0] !== match.text) {\n      valueElement.textContent = pixelValue[0];\n      return true;\n    }\n\n    return false;\n  }\n\n  async #attachPopover(\n      valueElement: HTMLElement, match: SDK.CSSPropertyParser.Match, context: RenderingContext): Promise<void> {\n    const pixelValue = await resolveValues(this.#stylesPane, this.#propertyName, match, context, match.text);\n    if (!pixelValue) {\n      return;\n    }\n\n    const tooltipId = this.#treeElement?.getTooltipId('length');\n    if (tooltipId) {\n      valueElement.setAttribute('aria-details', tooltipId);\n      const tooltip = new Tooltips.Tooltip.Tooltip(\n          {anchor: valueElement, variant: 'rich', id: tooltipId, jslogContext: 'length-popover'});\n      tooltip.appendChild(document.createTextNode(pixelValue[0]));\n      valueElement.insertAdjacentElement('afterend', tooltip);\n    }\n    this.popOverAttachedForTest();\n  }\n\n  popOverAttachedForTest(): void {\n  }\n}\n\n// clang-format off\nexport class MathFunctionRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.MathFunctionMatch) {\n  // clang-format on\n  readonly #stylesPane: StylesSidebarPane;\n  readonly #matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles;\n  readonly #computedStyles: Map<string, string>;\n  readonly #treeElement: StylePropertyTreeElement|null;\n  readonly #propertyName: string;\n  constructor(\n      stylesPane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      computedStyles: Map<string, string>, propertyName: string, treeElement: StylePropertyTreeElement|null) {\n    super();\n    this.#matchedStyles = matchedStyles;\n    this.#computedStyles = computedStyles;\n    this.#stylesPane = stylesPane;\n    this.#treeElement = treeElement;\n    this.#propertyName = propertyName;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.MathFunctionMatch, context: RenderingContext): Node[] {\n    const childTracingContexts = context.tracing?.evaluation(match.args, {match, context});\n    const renderedArgs = match.args.map((arg, idx) => {\n      const span = document.createElement('span');\n      Renderer.renderInto(\n          arg, childTracingContexts ? childTracingContexts[idx].renderingContext(context) : context, span);\n      return span;\n    });\n\n    const span = document.createElement('span');\n    render(\n        html`${\n            this.#treeElement?.getTracingTooltip(\n                match.func, match.node, this.#matchedStyles, this.#computedStyles, context) ??\n            match.func}(${renderedArgs.map((arg, idx) => idx === 0 ? [arg] : [html`, `, arg]).flat()})`,\n        span);\n\n    if (childTracingContexts) {\n      const evaluation = context.tracing?.applyEvaluation(\n          childTracingContexts,\n          () => ({placeholder: [span], asyncEvalCallback: () => this.applyEvaluation(span, match, context)}));\n      if (evaluation) {\n        return evaluation;\n      }\n    } else if (!match.isArithmeticFunctionCall()) {\n      void this.applyMathFunction(renderedArgs, match, context);\n    }\n\n    return [span];\n  }\n\n  async applyEvaluation(\n      span: HTMLSpanElement, match: SDK.CSSPropertyParserMatchers.MathFunctionMatch,\n      context: RenderingContext): Promise<boolean> {\n    const value = context.matchedResult.getComputedText(match.node, match => {\n      if (match instanceof SDK.CSSPropertyParserMatchers.RelativeColorChannelMatch) {\n        const relativeColor =\n            context.findParent(match.node, SDK.CSSPropertyParserMatchers.ColorMatch)?.relativeColor ?? null;\n        return (relativeColor && match.getColorChannelValue(relativeColor)?.toFixed(3)) ?? null;\n      }\n      return null;\n    });\n    const evaled = await resolveValues(this.#stylesPane, this.#propertyName, match, context, value);\n    if (!evaled?.[0] || evaled[0] === value) {\n      return false;\n    }\n    span.textContent = evaled[0];\n    return true;\n  }\n\n  async applyMathFunction(\n      renderedArgs: HTMLElement[], match: SDK.CSSPropertyParserMatchers.MathFunctionMatch,\n      context: RenderingContext): Promise<void> {\n    // To understand which argument was selected by the function, we evaluate the function as well as all the arguments\n    // and compare the function result to the values of all its arguments. Evaluating the arguments eliminates nested\n    // function calls and normalizes all units to px.\n    const values = match.args.map(arg => context.matchedResult.getComputedTextRange(arg[0], arg[arg.length - 1]));\n    values.unshift(context.matchedResult.getComputedText(match.node));\n    const evaledArgs = await resolveValues(this.#stylesPane, this.#propertyName, match, context, ...values);\n    if (!evaledArgs) {\n      return;\n    }\n    const functionResult = evaledArgs.shift();\n    if (!functionResult) {\n      return;\n    }\n    for (let i = 0; i < renderedArgs.length; ++i) {\n      if (evaledArgs[i] !== functionResult) {\n        renderedArgs[i].classList.add('inactive-value');\n      }\n    }\n  }\n}\n\n// clang-format off\nexport class AnchorFunctionRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.AnchorFunctionMatch) {\n  // clang-format on\n  readonly #stylesPane: StylesSidebarPane;\n\n  static async decorateAnchorForAnchorLink(\n      stylesPane: StylesSidebarPane, container: HTMLElement,\n      {identifier, needsSpace}: {identifier?: string, needsSpace?: boolean}): Promise<void> {\n    if (identifier) {\n      render(html`${identifier}`, container, {host: container});\n    }\n\n    const anchorNode = await stylesPane.node()?.getAnchorBySpecifier(identifier) ?? undefined;\n\n    if (!identifier && !anchorNode) {\n      return;\n    }\n\n    const onLinkActivate = (): void => {\n      if (!anchorNode) {\n        return;\n      }\n      void Common.Revealer.reveal(anchorNode, false);\n    };\n    const handleIconClick = (ev: MouseEvent): void => {\n      ev.stopPropagation();\n      onLinkActivate();\n    };\n    const onMouseEnter = (): void => {\n      anchorNode?.highlight();\n    };\n    const onMouseLeave = (): void => {\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    };\n\n    if (identifier) {\n      render(\n          // clang-format off\n          html`<devtools-link-swatch\n                @mouseenter=${onMouseEnter}\n                @mouseleave=${onMouseLeave}\n                .data=${{\n                  text: identifier,\n                  tooltip: anchorNode ? undefined :\n                   {title:  i18nString(UIStrings.sIsNotDefined, {PH1: identifier})},\n                  isDefined: Boolean(anchorNode),\n                  jslogContext: 'anchor-link',\n                  onLinkActivate,\n                } as InlineEditor.LinkSwatch.LinkSwatchRenderData}\n                ></devtools-link-swatch>${needsSpace ? ' ' : ''}`,\n          // clang-format on\n          container, {host: container});\n    } else {\n      // clang-format off\n      render(html`<devtools-icon\n                   role='button'\n                   title=${i18nString(UIStrings.jumpToAnchorNode)}\n                   class='icon-link'\n                   name='open-externally'\n                   jslog=${VisualLogging.action('jump-to-anchor-node').track({click: true})}\n                   @mouseenter=${onMouseEnter}\n                   @mouseleave=${onMouseLeave}\n                   @mousedown=${(ev: MouseEvent) => ev.stopPropagation()}\n                   @click=${handleIconClick}\n                  ></devtools-icon>${needsSpace ? ' ' : ''}`, container, {host: container});\n      // clang-format on\n    }\n  }\n\n  constructor(stylesPane: StylesSidebarPane) {\n    super();\n    this.#stylesPane = stylesPane;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.AnchorFunctionMatch, context: RenderingContext): Node[] {\n    const content = document.createElement('span');\n    if (match.node.name === 'VariableName') {\n      // Link an anchor double-dashed ident to its matching anchor element.\n      void AnchorFunctionRenderer.decorateAnchorForAnchorLink(this.#stylesPane, content, {identifier: match.text});\n    } else {\n      // The matcher passes a 'CallExpression' node with a functionName\n      // ('anchor' or 'anchor-size') if the arguments need to have an implicit\n      // anchor link swatch rendered.\n      content.appendChild(document.createTextNode(`${match.functionName}(`));\n      const swatchContainer = document.createElement('span');\n      content.appendChild(swatchContainer);\n      const args = ASTUtils.children(match.node.getChild('ArgList'));\n      const remainingArgs = args.splice(1);\n      void AnchorFunctionRenderer.decorateAnchorForAnchorLink(\n          this.#stylesPane, swatchContainer, {needsSpace: remainingArgs.length > 1});\n      Renderer.renderInto(remainingArgs, context, content);\n    }\n    return [content];\n  }\n}\n\n// clang-format off\nexport class PositionAnchorRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.PositionAnchorMatch) {\n  readonly #stylesPane: StylesSidebarPane;\n  // clang-format on\n\n  constructor(stylesPane: StylesSidebarPane) {\n    super();\n    this.#stylesPane = stylesPane;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.PositionAnchorMatch): Node[] {\n    const content = document.createElement('span');\n    void AnchorFunctionRenderer.decorateAnchorForAnchorLink(this.#stylesPane, content, {identifier: match.text});\n    return [content];\n  }\n}\n\n// clang-format off\nexport class PositionTryRenderer extends rendererBase(SDK.CSSPropertyParserMatchers.PositionTryMatch) {\n  readonly #matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles;\n  // clang-format on\n\n  constructor(matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles) {\n    super();\n    this.#matchedStyles = matchedStyles;\n  }\n\n  override render(match: SDK.CSSPropertyParserMatchers.PositionTryMatch, context: RenderingContext): Node[] {\n    const content = [];\n    if (match.preamble.length > 0) {\n      const {nodes} = Renderer.render(match.preamble, context);\n      content.push(...nodes);\n    }\n    for (const [i, fallback] of match.fallbacks.entries()) {\n      const fallbackContent = document.createElement('span');\n      if (i > 0) {\n        fallbackContent.appendChild(document.createTextNode(', '));\n      }\n      if (i !== this.#matchedStyles.activePositionFallbackIndex()) {\n        fallbackContent.classList.add('inactive-value');\n      }\n      Renderer.renderInto(fallback, context, fallbackContent);\n\n      content.push(fallbackContent);\n    }\n    return content;\n  }\n}\n\nexport function getPropertyRenderers(\n    propertyName: string, style: SDK.CSSStyleDeclaration.CSSStyleDeclaration, stylesPane: StylesSidebarPane,\n    matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, treeElement: StylePropertyTreeElement|null,\n    computedStyles: Map<string, string>): Array<MatchRenderer<SDK.CSSPropertyParser.Match>> {\n  return [\n    new VariableRenderer(stylesPane, treeElement, matchedStyles, computedStyles),\n    new ColorRenderer(stylesPane, treeElement),\n    new ColorMixRenderer(stylesPane, matchedStyles, computedStyles, treeElement),\n    new URLRenderer(style.parentRule, stylesPane.node()),\n    new AngleRenderer(treeElement),\n    new LinkableNameRenderer(matchedStyles, stylesPane),\n    new BezierRenderer(treeElement),\n    new StringRenderer(),\n    new ShadowRenderer(treeElement),\n    new CSSWideKeywordRenderer(stylesPane, treeElement),\n    new LightDarkColorRenderer(stylesPane, matchedStyles, treeElement),\n    new GridTemplateRenderer(),\n    new LinearGradientRenderer(),\n    new AnchorFunctionRenderer(stylesPane),\n    new PositionAnchorRenderer(stylesPane),\n    new FlexGridRenderer(stylesPane, treeElement),\n    new EnvFunctionRenderer(treeElement, matchedStyles, computedStyles),\n    new PositionTryRenderer(matchedStyles),\n    new LengthRenderer(stylesPane, propertyName, treeElement),\n    new MathFunctionRenderer(stylesPane, matchedStyles, computedStyles, propertyName, treeElement),\n    new AutoBaseRenderer(computedStyles),\n    new BinOpRenderer(),\n    new RelativeColorChannelRenderer(treeElement),\n    new AttributeRenderer(stylesPane, treeElement, matchedStyles, computedStyles),\n  ];\n}\n\nexport class StylePropertyTreeElement extends UI.TreeOutline.TreeElement {\n  private readonly style: SDK.CSSStyleDeclaration.CSSStyleDeclaration;\n  #matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles;\n  property: SDK.CSSProperty.CSSProperty;\n  readonly #inherited: boolean;\n  #overloaded: boolean;\n  #parentPane: StylesSidebarPane;\n  #parentSection: StylePropertiesSection;\n  isShorthand: boolean;\n  private readonly applyStyleThrottler = new Common.Throttler.Throttler(0);\n  private newProperty: boolean;\n  private expandedDueToFilter = false;\n  valueElement: HTMLElement|null = null;\n  nameElement: HTMLElement|null = null;\n  private expandElement: IconButton.Icon.Icon|null = null;\n  private originalPropertyText = '';\n  private hasBeenEditedIncrementally = false;\n  private prompt: CSSPropertyPrompt|null = null;\n  private lastComputedValue: string|null = null;\n  private computedStyles: Map<string, string>|null = null;\n  private parentsComputedStyles: Map<string, string>|null = null;\n  private contextForTest!: Context|undefined;\n  #gridNames: Set<string>|undefined = undefined;\n  #tooltipKeyCounts = new Map<string, number>();\n\n  constructor(\n      {stylesPane, section, matchedStyles, property, isShorthand, inherited, overloaded, newProperty}:\n          StylePropertyTreeElementParams,\n  ) {\n    // Pass an empty title, the title gets made later in onattach.\n    const jslogContext = property.name.startsWith('--') ? 'custom-property' : property.name;\n    super('', isShorthand, jslogContext);\n    this.style = property.ownerStyle;\n    this.#matchedStyles = matchedStyles;\n    this.property = property;\n    this.#inherited = inherited;\n    this.#overloaded = overloaded;\n    this.selectable = false;\n    this.#parentPane = stylesPane;\n    this.#parentSection = section;\n    this.isShorthand = isShorthand;\n    this.newProperty = newProperty;\n    if (this.newProperty) {\n      this.listItemElement.textContent = '';\n    }\n\n    this.property.addEventListener(SDK.CSSProperty.Events.LOCAL_VALUE_UPDATED, () => {\n      this.updateTitle();\n    });\n  }\n\n  async gridNames(): Promise<Set<string>> {\n    if (!SDK.CSSMetadata.cssMetadata().isGridNameAwareProperty(this.name)) {\n      return new Set();\n    }\n    for (let node = this.#parentPane.node()?.parentNode; node; node = node?.parentNode) {\n      const style = await this.#parentPane.cssModel()?.getComputedStyle(node.id);\n      const display = style?.get('display');\n      const isGrid = display === 'grid' || display === 'inline-grid';\n      if (!isGrid) {\n        continue;\n      }\n      const getNames = (propertyName: string, predicate: (node: CodeMirror.SyntaxNode) => boolean): string[] => {\n        const propertyValue = style?.get(propertyName);\n        if (!propertyValue) {\n          return [];\n        }\n        const ast = SDK.CSSPropertyParser.tokenizeDeclaration(propertyName, propertyValue);\n        if (!ast) {\n          return [];\n        }\n        return SDK.CSSPropertyParser.TreeSearch.findAll(ast, predicate).map(node => ast.text(node));\n      };\n      if (SDK.CSSMetadata.cssMetadata().isGridAreaNameAwareProperty(this.name)) {\n        return new Set(\n            getNames('grid-template-areas', node => node.name === 'StringLiteral')\n                ?.flatMap(row => row.substring(1, row.length - 1).split(/\\s+/).filter(cell => !cell.match(/^\\.*$/))));\n      }\n      if (SDK.CSSMetadata.cssMetadata().isGridColumnNameAwareProperty(this.name)) {\n        return new Set(getNames(\n            'grid-template-columns', node => node.name === 'ValueName' && node.parent?.name === 'BracketedValue'));\n      }\n      return new Set(\n          getNames('grid-template-rows', node => node.name === 'ValueName' && node.parent?.name === 'BracketedValue'));\n    }\n    return new Set();\n  }\n\n  matchedStyles(): SDK.CSSMatchedStyles.CSSMatchedStyles {\n    return this.#matchedStyles;\n  }\n\n  getLonghand(): StylePropertyTreeElement|null {\n    return this.parent instanceof StylePropertyTreeElement && this.parent.isShorthand ? this.parent : null;\n  }\n\n  editable(): boolean {\n    const hasSourceData = Boolean(this.style.styleSheetId && this.style.range);\n    return !this.getLonghand() && hasSourceData;\n  }\n\n  inherited(): boolean {\n    return this.#inherited;\n  }\n\n  overloaded(): boolean {\n    return this.#overloaded;\n  }\n\n  setOverloaded(x: boolean): void {\n    if (x === this.#overloaded) {\n      return;\n    }\n    this.#overloaded = x;\n    this.updateState();\n  }\n\n  setComputedStyles(computedStyles: Map<string, string>|null): void {\n    this.computedStyles = computedStyles;\n  }\n\n  getComputedStyle(property: string): string|null {\n    return this.computedStyles?.get(property) ?? null;\n  }\n\n  getComputedStyles(): Map<string, string>|null {\n    return this.computedStyles;\n  }\n\n  setParentsComputedStyles(parentsComputedStyles: Map<string, string>|null): void {\n    this.parentsComputedStyles = parentsComputedStyles;\n  }\n\n  get name(): string {\n    return this.property.name;\n  }\n\n  get value(): string {\n    return this.property.value;\n  }\n\n  updateFilter(): boolean {\n    const regex = this.#parentPane.filterRegex();\n    const matches = regex !== null && (regex.test(this.property.name) || regex.test(this.property.value));\n    this.listItemElement.classList.toggle('filter-match', matches);\n\n    void this.onpopulate();\n    let hasMatchingChildren = false;\n\n    for (let i = 0; i < this.childCount(); ++i) {\n      const child = (this.childAt(i) as StylePropertyTreeElement | null);\n      if (!child || (child && !child.updateFilter())) {\n        continue;\n      }\n      hasMatchingChildren = true;\n    }\n\n    if (!regex) {\n      if (this.expandedDueToFilter) {\n        this.collapse();\n      }\n      this.expandedDueToFilter = false;\n    } else if (hasMatchingChildren && !this.expanded) {\n      this.expand();\n      this.expandedDueToFilter = true;\n    } else if (!hasMatchingChildren && this.expanded && this.expandedDueToFilter) {\n      this.collapse();\n      this.expandedDueToFilter = false;\n    }\n    return matches;\n  }\n\n  renderedPropertyText(): string {\n    if (!this.nameElement || !this.valueElement) {\n      return '';\n    }\n    return this.nameElement.innerText + ': ' + this.valueElement.innerText;\n  }\n\n  private updateState(): void {\n    if (!this.listItemElement) {\n      return;\n    }\n\n    if (this.style.isPropertyImplicit(this.name)) {\n      this.listItemElement.classList.add('implicit');\n    } else {\n      this.listItemElement.classList.remove('implicit');\n    }\n\n    const hasIgnorableError = !this.property.parsedOk && StylesSidebarPane.ignoreErrorsForProperty(this.property);\n    if (hasIgnorableError) {\n      this.listItemElement.classList.add('has-ignorable-error');\n    } else {\n      this.listItemElement.classList.remove('has-ignorable-error');\n    }\n\n    if (this.inherited()) {\n      this.listItemElement.classList.add('inherited');\n    } else {\n      this.listItemElement.classList.remove('inherited');\n    }\n\n    if (this.overloaded()) {\n      this.listItemElement.classList.add('overloaded');\n    } else {\n      this.listItemElement.classList.remove('overloaded');\n    }\n\n    if (this.property.disabled) {\n      this.listItemElement.classList.add('disabled');\n    } else {\n      this.listItemElement.classList.remove('disabled');\n    }\n  }\n\n  node(): SDK.DOMModel.DOMNode|null {\n    return this.#parentPane.node();\n  }\n\n  parentPane(): StylesSidebarPane {\n    return this.#parentPane;\n  }\n\n  section(): StylePropertiesSection {\n    return this.#parentSection;\n  }\n\n  private updatePane(): void {\n    this.#parentSection.refreshUpdate(this);\n  }\n\n  private async toggleDisabled(disabled: boolean): Promise<void> {\n    const oldStyleRange = this.style.range;\n    if (!oldStyleRange) {\n      return;\n    }\n\n    this.#parentPane.setUserOperation(true);\n    const success = await this.property.setDisabled(disabled);\n    this.#parentPane.setUserOperation(false);\n\n    if (!success) {\n      return;\n    }\n    this.#matchedStyles.resetActiveProperties();\n    this.updatePane();\n    this.styleTextAppliedForTest();\n  }\n\n  async #getLonghandProperties(): Promise<SDK.CSSProperty.CSSProperty[]> {\n    const staticLonghandProperties = this.property.getLonghandProperties();\n\n    if (staticLonghandProperties.some(property => property.value !== '')) {\n      return staticLonghandProperties;\n    }\n\n    const parsedProperty = this.#computeCSSExpression(this.style, this.property.value);\n    if (!parsedProperty || parsedProperty === this.property.value) {\n      return staticLonghandProperties;\n    }\n\n    const parsedLonghands = await this.#parentPane.cssModel()?.agent.invoke_getLonghandProperties(\n        {shorthandName: this.property.name, value: parsedProperty});\n    if (!parsedLonghands || parsedLonghands.getError()) {\n      return staticLonghandProperties;\n    }\n\n    return parsedLonghands.longhandProperties.map(p => SDK.CSSProperty.CSSProperty.parsePayload(this.style, -1, p));\n  }\n\n  override async onpopulate(): Promise<void> {\n    if (!this.#gridNames) {\n      this.#gridNames = await this.gridNames();\n    }\n\n    // Only populate once and if this property is a shorthand.\n    if (this.childCount() || !this.isShorthand) {\n      return;\n    }\n\n    const longhandProperties = await this.#getLonghandProperties();\n    const leadingProperties = this.style.leadingProperties();\n\n    // Re-check child count to avoid any races of concurrent onpopulate calls\n    if (this.childCount()) {\n      return;\n    }\n\n    for (const property of longhandProperties) {\n      const name = property.name;\n      let inherited = false;\n      let overloaded = false;\n\n      inherited = this.#parentSection.isPropertyInherited(name);\n      overloaded = this.#matchedStyles.propertyState(property) === SDK.CSSMatchedStyles.PropertyState.OVERLOADED;\n\n      const leadingProperty = leadingProperties.find(property => property.name === name && property.activeInStyle());\n      if (leadingProperty) {\n        overloaded = true;\n      }\n\n      const item = new StylePropertyTreeElement({\n        stylesPane: this.#parentPane,\n        section: this.#parentSection,\n        matchedStyles: this.#matchedStyles,\n        property,\n        isShorthand: false,\n        inherited,\n        overloaded,\n        newProperty: false,\n      });\n      item.setComputedStyles(this.computedStyles);\n      item.setParentsComputedStyles(this.parentsComputedStyles);\n      this.appendChild(item);\n    }\n  }\n\n  override onattach(): void {\n    this.updateTitle();\n\n    this.listItemElement.addEventListener('mousedown', event => {\n      if (event.button === 0) {\n        parentMap.set(this.#parentPane, this);\n      }\n    }, false);\n    this.listItemElement.addEventListener('mouseup', this.mouseUp.bind(this));\n    this.listItemElement.addEventListener('click', event => {\n      if (!event.target) {\n        return;\n      }\n\n      const node = (event.target as HTMLElement);\n      if (!node.hasSelection() && event.target !== this.listItemElement) {\n        event.consume(true);\n      }\n    });\n\n    // Copy context menu.\n    this.listItemElement.addEventListener('contextmenu', this.handleCopyContextMenuEvent.bind(this));\n  }\n\n  override onexpand(): void {\n    this.updateExpandElement();\n  }\n\n  override oncollapse(): void {\n    this.updateExpandElement();\n  }\n\n  private updateExpandElement(): void {\n    if (!this.expandElement) {\n      return;\n    }\n    if (this.expanded) {\n      this.expandElement.name = 'triangle-down';\n    } else {\n      this.expandElement.name = 'triangle-right';\n    }\n  }\n\n  // Resolves a CSS expression to its computed value with `var()` and `attr()` calls updated.\n  // Still returns the string even when a `var()` or `attr()` call is not resolved.\n  #computeCSSExpression(style: SDK.CSSStyleDeclaration.CSSStyleDeclaration, text: string): string|null {\n    const ast = SDK.CSSPropertyParser.tokenizeDeclaration('--unused', text);\n    if (!ast) {\n      return null;\n    }\n\n    const matching: SDK.CSSPropertyParser.BottomUpTreeMatching = SDK.CSSPropertyParser.BottomUpTreeMatching.walk(ast, [\n      new SDK.CSSPropertyParserMatchers.VariableMatcher(this.#matchedStyles, style),\n      new SDK.CSSPropertyParserMatchers.AttributeMatcher(this.#matchedStyles, style),\n      new SDK.CSSPropertyParserMatchers.EnvFunctionMatcher(this.#matchedStyles),\n    ]);\n\n    const decl = SDK.CSSPropertyParser.ASTUtils.siblings(SDK.CSSPropertyParser.ASTUtils.declValue(matching.ast.tree));\n    return decl.length > 0 ? matching.getComputedTextRange(decl[0], decl[decl.length - 1]) : '';\n  }\n\n  refreshIfComputedValueChanged(): void {\n    this.#gridNames = undefined;\n    const computedValue = this.#computeCSSExpression(this.property.ownerStyle, this.property.value);\n    if (computedValue === this.lastComputedValue) {\n      return;\n    }\n    this.lastComputedValue = computedValue;\n    this.innerUpdateTitle();\n  }\n\n  updateTitle(): void {\n    this.lastComputedValue = this.#computeCSSExpression(this.property.ownerStyle, this.property.value);\n    this.innerUpdateTitle();\n  }\n\n  private innerUpdateTitle(): void {\n    this.#tooltipKeyCounts.clear();\n    this.updateState();\n    if (this.isExpandable()) {\n      this.expandElement = IconButton.Icon.create('triangle-right', 'expand-icon');\n      this.expandElement.setAttribute('jslog', `${VisualLogging.expand().track({click: true})}`);\n    }\n\n    const renderers = this.property.parsedOk ?\n        getPropertyRenderers(\n            this.name, this.style, this.#parentPane, this.#matchedStyles, this, this.getComputedStyles() ?? new Map()) :\n        [];\n\n    if (Root.Runtime.experiments.isEnabled('font-editor') && this.property.parsedOk) {\n      renderers.push(new FontRenderer(this));\n    }\n    this.listItemElement.removeChildren();\n    const matchedResult = this.property.parseValue(this.matchedStyles(), this.computedStyles);\n    this.valueElement = Renderer.renderValueElement(this.property, matchedResult, renderers).valueElement;\n    this.nameElement = Renderer.renderNameElement(this.name);\n\n    if (!this.treeOutline) {\n      return;\n    }\n\n    const indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n    UI.UIUtils.createTextChild(\n        this.listItemElement.createChild('span', 'styles-clipboard-only'),\n        indent.repeat(this.section().nestingLevel + 1) + (this.property.disabled ? '/* ' : ''));\n    this.listItemElement.appendChild(this.nameElement);\n\n    if (this.property.name.startsWith('--') &&\n        !(this.property.ownerStyle.parentRule instanceof SDK.CSSRule.CSSFunctionRule)) {\n      const contents = this.#parentPane.getVariablePopoverContents(\n          this.matchedStyles(), this.property.name,\n          this.#matchedStyles.computeCSSVariable(this.style, this.property.name)?.value ?? null);\n      const tooltipId = this.getTooltipId('custom-property-decl');\n      this.nameElement.setAttribute('aria-details', tooltipId);\n      const tooltip = new Tooltips.Tooltip.Tooltip(\n          {anchor: this.nameElement, variant: 'rich', id: tooltipId, jslogContext: 'elements.css-var'});\n      tooltip.appendChild(contents);\n      tooltip.onbeforetoggle = (e: Event) => {\n        if ((e as ToggleEvent).newState === 'open') {\n          contents.value = this.#matchedStyles.computeCSSVariable(this.style, this.property.name)?.value;\n        }\n      };\n      this.listItemElement.appendChild(tooltip);\n    } else if (Common.Settings.Settings.instance().moduleSetting('show-css-property-documentation-on-hover').get()) {\n      const tooltipId = this.getTooltipId('property-doc');\n      this.nameElement.setAttribute('aria-details', tooltipId);\n      const tooltip = new Tooltips.Tooltip.Tooltip({\n        anchor: this.nameElement,\n        variant: 'rich',\n        padding: 'large',\n        id: tooltipId,\n        jslogContext: 'elements.css-property-doc',\n      });\n      tooltip.onbeforetoggle = event => {\n        if ((event as ToggleEvent).newState !== 'open') {\n          return;\n        }\n        if (!Common.Settings.Settings.instance().moduleSetting('show-css-property-documentation-on-hover').get()) {\n          event.consume(true);\n          return;\n        }\n\n        const cssProperty = this.#parentPane.webCustomData?.findCssProperty(this.name);\n        if (!cssProperty) {\n          event.consume(true);\n          return;\n        }\n        tooltip.removeChildren();\n        tooltip.appendChild(new ElementsComponents.CSSPropertyDocsView.CSSPropertyDocsView(cssProperty));\n      };\n      this.listItemElement.appendChild(tooltip);\n    }\n\n    if (this.valueElement) {\n      const lineBreakValue =\n          this.valueElement.firstElementChild && this.valueElement.firstElementChild.tagName === 'BR';\n      const separator = lineBreakValue ? ':' : ': ';\n      this.listItemElement.createChild('span', 'styles-name-value-separator').textContent = separator;\n      if (this.expandElement) {\n        this.listItemElement.appendChild(this.expandElement);\n        this.updateExpandElement();\n      }\n      this.listItemElement.appendChild(this.valueElement);\n      const semicolon = this.listItemElement.createChild('span', 'styles-semicolon');\n      semicolon.textContent = ';';\n      semicolon.onmouseup = this.mouseUp.bind(this);\n      if (this.property.disabled) {\n        UI.UIUtils.createTextChild(this.listItemElement.createChild('span', 'styles-clipboard-only'), ' */');\n      }\n    }\n\n    if (this.property.parsedOk) {\n      this.updateAuthoringHint();\n    } else {\n      // Avoid having longhands under an invalid shorthand.\n      this.listItemElement.classList.add('not-parsed-ok');\n      // Add a separate exclamation mark IMG element with a tooltip.\n      this.listItemElement.insertBefore(\n          this.createExclamationMark(\n              this.property, this.#parentPane.getVariableParserError(this.matchedStyles(), this.property.name)),\n          this.listItemElement.firstChild);\n\n      // When the property is valid but the property value is invalid,\n      // add line-through only to the property value.\n      const invalidPropertyValue = SDK.CSSMetadata.cssMetadata().isCSSPropertyName(this.property.name);\n      if (invalidPropertyValue) {\n        this.listItemElement.classList.add('invalid-property-value');\n      }\n    }\n\n    if (!this.property.activeInStyle()) {\n      this.listItemElement.classList.add('inactive');\n    }\n    this.updateFilter();\n\n    if (this.property.parsedOk && this.parent?.root) {\n      const enabledCheckboxElement = document.createElement('input');\n      enabledCheckboxElement.classList.add('enabled-button', 'small');\n      enabledCheckboxElement.type = 'checkbox';\n      enabledCheckboxElement.checked = !this.property.disabled;\n      enabledCheckboxElement.setAttribute('jslog', `${VisualLogging.toggle().track({click: true})}`);\n      enabledCheckboxElement.addEventListener('mousedown', event => event.consume(), false);\n      enabledCheckboxElement.addEventListener('click', event => {\n        void this.toggleDisabled(!this.property.disabled);\n        event.consume();\n      }, false);\n      if (this.nameElement && this.valueElement) {\n        UI.ARIAUtils.setLabel(enabledCheckboxElement, `${this.name} ${this.value}`);\n      }\n      this.listItemElement.insertBefore(enabledCheckboxElement, this.listItemElement.firstChild);\n    }\n\n    const that = this;\n    this.valueElement.addEventListener('keydown', nonEditingNameValueKeyDown);\n    this.nameElement.addEventListener('keydown', nonEditingNameValueKeyDown);\n\n    function nonEditingNameValueKeyDown(this: HTMLElement, event: KeyboardEvent): void {\n      if (UI.UIUtils.isBeingEdited(this)) {\n        return;\n      }\n      if (event.key !== Platform.KeyboardUtilities.ENTER_KEY && event.key !== ' ') {\n        return;\n      }\n      if (this === that.valueElement) {\n        that.startEditingValue();\n        event.consume(true);\n      } else if (this === that.nameElement) {\n        that.startEditingName();\n        event.consume(true);\n      }\n    }\n  }\n\n  createExclamationMark(property: SDK.CSSProperty.CSSProperty, title: HTMLElement|null): Element {\n    const container = document.createElement('span');\n    const exclamationElement = container.createChild('span');\n    exclamationElement.tabIndex = -1;\n    exclamationElement.classList.add('exclamation-mark');\n    const invalidMessage = SDK.CSSMetadata.cssMetadata().isCSSPropertyName(property.name) ?\n        i18nString(UIStrings.invalidPropertyValue) :\n        i18nString(UIStrings.unknownPropertyName);\n    if (title === null) {\n      UI.Tooltip.Tooltip.install(exclamationElement, invalidMessage);\n    } else {\n      const tooltipId = this.getTooltipId('property-warning');\n      exclamationElement.setAttribute('aria-describedby', tooltipId);\n      const tooltip = new Tooltips.Tooltip.Tooltip({\n        anchor: exclamationElement,\n        variant: 'simple',\n        id: tooltipId,\n        jslogContext: 'elements.invalid-property-decl-popover'\n      });\n      tooltip.appendChild(title);\n      container.appendChild(tooltip);\n    }\n    const invalidString =\n        i18nString(UIStrings.invalidString, {PH1: invalidMessage, PH2: property.name, PH3: property.value});\n\n    // Storing the invalidString for future screen reader support when editing the property\n    property.setDisplayedStringForInvalidProperty(invalidString);\n\n    return container;\n  }\n\n  getTracingTooltip(\n      functionName: string, node: CodeMirror.SyntaxNode, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      computedStyles: Map<string, string>, context: RenderingContext): Lit.TemplateResult {\n    if (context.tracing || !context.property) {\n      return html`${functionName}`;\n    }\n    const text = context.ast.text(node);\n    const expandPercentagesInShorthands = context.matchedResult.getLonghandValuesCount() > 1;\n    const shorthandPositionOffset = context.matchedResult.getComputedLonghandName(node);\n    const {property} = context;\n    const stylesPane = this.parentPane();\n    const tooltipId = this.getTooltipId(`${functionName}-trace`);\n    // clang-format off\n    return html`\n        <span tabIndex=-1 class=tracing-anchor aria-details=${tooltipId}>${functionName}</span>\n        <devtools-tooltip\n            id=${tooltipId}\n            use-hotkey\n            variant=rich\n            jslogContext=elements.css-value-trace\n            @beforetoggle=${function(this: Tooltips.Tooltip.Tooltip, e: ToggleEvent) {\n              if (e.newState === 'open') {\n                void (this.querySelector('devtools-widget') as UI.Widget.WidgetElement<CSSValueTraceView>| null)\n                  ?.getWidget()\n                  ?.showTrace(\n                    property, text, matchedStyles, computedStyles,\n                    getPropertyRenderers(property.name,\n                      property.ownerStyle, stylesPane, matchedStyles, null, computedStyles),\n                    expandPercentagesInShorthands, shorthandPositionOffset, this.openedViaHotkey);\n              }\n            }}\n            @toggle=${function(this: Tooltips.Tooltip.Tooltip, e: ToggleEvent) {\n              if (e.newState !== 'open') {\n                (this.querySelector('devtools-widget') as UI.Widget.WidgetElement<CSSValueTraceView>| null)\n                  ?.getWidget()\n                  ?.resetPendingFocus();\n              }\n            }}>\n          <devtools-widget\n            @keydown=${(e: KeyboardEvent) => {\n              const maybeTooltip = (e.target as Element).parentElement ;\n              if (!(maybeTooltip instanceof Tooltips.Tooltip.Tooltip)) {\n                return;\n              }\n              if (e.key === 'Escape' || (e.altKey && e.key === 'ArrowDown')){\n                maybeTooltip.hideTooltip();\n                maybeTooltip.anchor?.focus();\n                e.consume(true);\n              }\n            }}\n            .widgetConfig=${UI.Widget.widgetConfig(CSSValueTraceView)}>\n          </devtools-widget>\n        </devtools-tooltip>`;\n    // clang-format on\n  }\n\n  // Returns an id for <devtools-tooltips> that's stable across re-rendering of property values but unique across\n  // sections and across switches between different nodes.\n  getTooltipId(key: string): string {\n    const sectionId = this.section().sectionTooltipIdPrefix;\n    const tooltipKeyCount = this.#tooltipKeyCounts.get(key) ?? 0;\n    this.#tooltipKeyCounts.set(key, tooltipKeyCount + 1);\n    const propertyNameForCounting = this.getLonghand()?.name ?? this.name;\n    const ownIndex = this.style.allProperties().indexOf(this.property);\n    const propertyCount = this.style.allProperties().reduce<number>(\n        (value, property, index) =>\n            index < ownIndex && (property.name === this.name || property.name === propertyNameForCounting) ? value + 1 :\n                                                                                                             value,\n        0);\n    return `swatch-tooltip-${sectionId}-${this.name}-${propertyCount}-${key}-${tooltipKeyCount}`;\n  }\n\n  updateAuthoringHint(): void {\n    this.listItemElement.classList.remove('inactive-property');\n    const existingElement = this.listItemElement.querySelector('.hint');\n    if (existingElement) {\n      existingElement?.closest('.hint-wrapper')?.remove();\n    }\n    const propertyName = this.property.name;\n\n    if (!cssRuleValidatorsMap.has(propertyName)) {\n      return;\n    }\n\n    // Different rules apply to SVG nodes altogether. We currently don't have SVG-specific hints.\n    if (this.node()?.isSVGNode()) {\n      return;\n    }\n\n    const cssModel = this.#parentPane.cssModel();\n    const fontFaces = cssModel?.fontFaces() || [];\n\n    const localName = this.node()?.localName();\n    for (const validator of cssRuleValidatorsMap.get(propertyName) || []) {\n      const hint = validator.getHint(\n          propertyName, this.computedStyles || undefined, this.parentsComputedStyles || undefined,\n          localName?.toLowerCase(), fontFaces);\n      if (hint) {\n        const wrapper = document.createElement('span');\n        wrapper.classList.add('hint-wrapper');\n        const hintIcon = new IconButton.Icon.Icon();\n        hintIcon.name = 'info';\n        hintIcon.classList.add('hint', 'small');\n        hintIcon.tabIndex = -1;\n        wrapper.append(hintIcon);\n        this.listItemElement.append(wrapper);\n        this.listItemElement.classList.add('inactive-property');\n        const tooltipId = this.getTooltipId('css-hint');\n        hintIcon.setAttribute('aria-details', tooltipId);\n        const tooltip = new Tooltips.Tooltip.Tooltip(\n            {anchor: hintIcon, variant: 'rich', padding: 'large', id: tooltipId, jslogContext: 'elements.css-hint'});\n        tooltip.appendChild(new ElementsComponents.CSSHintDetailsView.CSSHintDetailsView(hint));\n        this.listItemElement.appendChild(tooltip);\n        break;\n      }\n    }\n  }\n\n  private mouseUp(event: MouseEvent): void {\n    const activeTreeElement = parentMap.get(this.#parentPane);\n    parentMap.delete(this.#parentPane);\n    if (!activeTreeElement) {\n      return;\n    }\n    if (this.listItemElement.hasSelection()) {\n      return;\n    }\n    if (UI.UIUtils.isBeingEdited((event.target as Node))) {\n      return;\n    }\n    if (event.composedPath()[0] instanceof HTMLButtonElement) {\n      return;\n    }\n\n    event.consume(true);\n\n    if (event.target === this.listItemElement) {\n      return;\n    }\n\n    let selectedElement = event.target as Element;\n    if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(event) && this.#parentSection.navigable) {\n      this.navigateToSource(selectedElement);\n      return;\n    }\n\n    if (this.expandElement && selectedElement === this.expandElement) {\n      return;\n    }\n\n    if (!this.#parentSection.editable) {\n      return;\n    }\n\n    selectedElement = selectedElement.enclosingNodeOrSelfWithClass('webkit-css-property') ||\n        selectedElement.enclosingNodeOrSelfWithClass('value') ||\n        selectedElement.enclosingNodeOrSelfWithClass('styles-semicolon');\n    if (!selectedElement || selectedElement === this.nameElement) {\n      VisualLogging.logClick(this.nameElement as Element, event);\n      this.startEditingName();\n    } else {\n      VisualLogging.logClick(this.valueElement as Element, event);\n      this.startEditingValue();\n    }\n  }\n\n  private handleContextMenuEvent(context: Context, event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    if (this.property.parsedOk && this.parent?.root) {\n      const sectionIndex = this.#parentPane.focusedSectionIndex();\n      contextMenu.defaultSection().appendCheckboxItem(\n          i18nString(UIStrings.togglePropertyAndContinueEditing), async () => {\n            if (this.treeOutline) {\n              const propertyIndex = this.treeOutline.rootElement().indexOfChild(this);\n              // order matters here: this.editingCancelled may invalidate this.treeOutline.\n              this.editingCancelled(context);\n              await this.toggleDisabled(!this.property.disabled);\n              event.consume();\n              this.#parentPane.continueEditingElement(sectionIndex, propertyIndex);\n            }\n          }, {checked: !this.property.disabled, jslogContext: 'toggle-property-and-continue-editing'});\n    }\n    const revealCallback = this.navigateToSource.bind(this) as () => void;\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.openInSourcesPanel), revealCallback, {jslogContext: 'reveal-in-sources-panel'});\n    void contextMenu.show();\n  }\n\n  private handleCopyContextMenuEvent(event: Event): void {\n    const target = (event.target as Element | null);\n\n    if (!target) {\n      return;\n    }\n\n    const contextMenu = this.createCopyContextMenu(event);\n    void contextMenu.show();\n  }\n\n  createCopyContextMenu(event: Event): UI.ContextMenu.ContextMenu {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.headerSection().appendItem(i18nString(UIStrings.copyDeclaration), () => {\n      const propertyText = `${this.property.name}: ${this.property.value};`;\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(propertyText);\n    }, {jslogContext: 'copy-declaration'});\n\n    contextMenu.headerSection().appendItem(i18nString(UIStrings.copyProperty), () => {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.property.name);\n    }, {jslogContext: 'copy-property'});\n\n    contextMenu.headerSection().appendItem(i18nString(UIStrings.copyValue), () => {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.property.value);\n    }, {jslogContext: 'copy-value'});\n\n    contextMenu.headerSection().appendItem(i18nString(UIStrings.copyRule), () => {\n      const ruleText = StylesSidebarPane.formatLeadingProperties(this.#parentSection).ruleText;\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(ruleText);\n    }, {jslogContext: 'copy-rule'});\n\n    contextMenu.headerSection().appendItem(\n        i18nString(UIStrings.copyCssDeclarationAsJs), this.copyCssDeclarationAsJs.bind(this),\n        {jslogContext: 'copy-css-declaration-as-js'});\n\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyAllDeclarations), () => {\n      const allDeclarationText = StylesSidebarPane.formatLeadingProperties(this.#parentSection).allDeclarationText;\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(allDeclarationText);\n    }, {jslogContext: 'copy-all-declarations'});\n\n    contextMenu.clipboardSection().appendItem(\n        i18nString(UIStrings.copyAllCssDeclarationsAsJs), this.copyAllCssDeclarationAsJs.bind(this),\n        {jslogContext: 'copy-all-css-declarations-as-js'});\n\n    contextMenu.footerSection().appendItem(i18nString(UIStrings.viewComputedValue), () => {\n      void this.viewComputedValue();\n    }, {jslogContext: 'view-computed-value'});\n\n    return contextMenu;\n  }\n\n  private async viewComputedValue(): Promise<void> {\n    const computedStyleWidget = ElementsPanel.instance().getComputedStyleWidget();\n\n    if (!computedStyleWidget.isShowing()) {\n      await UI.ViewManager.ViewManager.instance().showView('computed');\n    }\n\n    let propertyNamePattern = '';\n    if (this.isShorthand) {\n      propertyNamePattern = '^' + this.property.name + '-';\n    } else {\n      propertyNamePattern = '^' + this.property.name + '$';\n    }\n    const regex = new RegExp(propertyNamePattern, 'i');\n    await computedStyleWidget.filterComputedStyles(regex);\n\n    computedStyleWidget.input.setValue(this.property.name);\n    computedStyleWidget.input.element.focus();\n  }\n\n  private copyCssDeclarationAsJs(): void {\n    const cssDeclarationValue = getCssDeclarationAsJavascriptProperty(this.property);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(cssDeclarationValue);\n  }\n\n  private copyAllCssDeclarationAsJs(): void {\n    const leadingProperties = this.#parentSection.style().leadingProperties();\n    const cssDeclarationsAsJsProperties =\n        leadingProperties.filter(property => !property.disabled).map(getCssDeclarationAsJavascriptProperty);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(cssDeclarationsAsJsProperties.join(',\\n'));\n  }\n\n  private navigateToSource(element: Element, omitFocus?: boolean): void {\n    if (!this.#parentSection.navigable) {\n      return;\n    }\n    const propertyNameClicked = element === this.nameElement;\n    const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(\n        this.property, propertyNameClicked);\n    if (uiLocation) {\n      void Common.Revealer.reveal(uiLocation, omitFocus);\n    }\n  }\n\n  startEditingValue(): void {\n    const context: Context = {\n      expanded: this.expanded,\n      hasChildren: this.isExpandable(),\n      isEditingName: false,\n      originalProperty: this.property,\n      previousContent: this.value,\n    };\n\n    // Grid definitions are often multiline. Instead of showing the authored text reformat it a little bit nicer.\n    if (SDK.CSSMetadata.cssMetadata().isGridAreaDefiningProperty(this.name)) {\n      const splitResult =\n          TextUtils.TextUtils.Utils.splitStringByRegexes(this.value, [SDK.CSSMetadata.GridAreaRowRegex]);\n      context.previousContent = splitResult.map(result => result.value.trim()).join('\\n');\n    }\n\n    this.#startEditing(context);\n  }\n\n  startEditingName(): void {\n    const context: Context = {\n      expanded: this.expanded,\n      hasChildren: this.isExpandable(),\n      isEditingName: true,\n      originalProperty: this.property,\n      previousContent: this.name.split('\\n').map(l => l.trim()).join('\\n'),\n    };\n\n    this.#startEditing(context);\n  }\n\n  #startEditing(context: Context): void {\n    this.contextForTest = context;\n\n    // FIXME: we don't allow editing of longhand properties under a shorthand right now.\n    if (this.parent instanceof StylePropertyTreeElement && this.parent.isShorthand) {\n      return;\n    }\n\n    const selectedElement = context.isEditingName ? this.nameElement : this.valueElement;\n    if (!selectedElement) {\n      return;\n    }\n\n    if (UI.UIUtils.isBeingEdited(selectedElement)) {\n      return;\n    }\n\n    // Lie about our children to prevent expanding on double click and to collapse shorthands.\n    this.setExpandable(false);\n\n    selectedElement.parentElement?.classList.add('child-editing');\n    selectedElement.textContent = context.previousContent;  // remove color swatch and the like\n\n    function pasteHandler(this: StylePropertyTreeElement, context: Context, event: Event): void {\n      const clipboardEvent = (event as ClipboardEvent);\n      const clipboardData = clipboardEvent.clipboardData;\n      if (!clipboardData) {\n        return;\n      }\n\n      const data = clipboardData.getData('Text');\n      if (!data) {\n        return;\n      }\n      const colonIdx = data.indexOf(':');\n      if (colonIdx < 0) {\n        return;\n      }\n      const name = data.substring(0, colonIdx).trim();\n      const value = data.substring(colonIdx + 1).trim();\n\n      event.preventDefault();\n\n      if (typeof context.originalName === 'undefined') {\n        if (this.nameElement) {\n          context.originalName = this.nameElement.textContent || '';\n        }\n\n        if (this.valueElement) {\n          context.originalValue = this.valueElement.textContent || '';\n        }\n      }\n      this.property.name = name;\n      this.property.value = value;\n      if (this.nameElement) {\n        this.nameElement.textContent = name;\n        this.nameElement.normalize();\n      }\n\n      if (this.valueElement) {\n        this.valueElement.textContent = value;\n        this.valueElement.normalize();\n      }\n\n      const target = (event.target as HTMLElement);\n      void this.editingCommitted(target.textContent || '', context, 'forward');\n    }\n\n    function blurListener(this: StylePropertyTreeElement, context: Context, event: Event): void {\n      const target = (event.target as HTMLElement);\n      let text: (string|null) = target.textContent;\n      if (!context.isEditingName) {\n        text = this.value || text;\n      }\n      void this.editingCommitted(text || '', context, '');\n    }\n\n    this.originalPropertyText = this.property.propertyText || '';\n\n    this.#parentPane.setEditingStyle(true);\n    selectedElement.parentElement?.scrollIntoViewIfNeeded(false);\n\n    this.prompt = new CSSPropertyPrompt(this, context.isEditingName, Array.from(this.#gridNames ?? []));\n    this.prompt.setAutocompletionTimeout(0);\n\n    this.prompt.addEventListener(UI.TextPrompt.Events.TEXT_CHANGED, () => {\n      void this.applyFreeFlowStyleTextEdit(context);\n    });\n\n    const invalidString = this.property.getInvalidStringForInvalidProperty();\n    if (invalidString) {\n      UI.ARIAUtils.LiveAnnouncer.alert(invalidString);\n    }\n\n    const proxyElement = this.prompt.attachAndStartEditing(selectedElement, blurListener.bind(this, context));\n    this.navigateToSource(selectedElement, true);\n\n    proxyElement.addEventListener('keydown', this.editingNameValueKeyDown.bind(this, context), false);\n    proxyElement.addEventListener('keypress', this.editingNameValueKeyPress.bind(this, context), false);\n    if (context.isEditingName) {\n      proxyElement.addEventListener('paste', pasteHandler.bind(this, context), false);\n      proxyElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this, context), false);\n    }\n\n    selectedElement.getComponentSelection()?.selectAllChildren(selectedElement);\n  }\n\n  private editingNameValueKeyDown(context: Context, event: Event): void {\n    if (event.handled) {\n      return;\n    }\n\n    const keyboardEvent = (event as KeyboardEvent);\n    const target = (keyboardEvent.target as HTMLElement);\n    let result;\n    if ((keyboardEvent.key === 'Enter' && !keyboardEvent.shiftKey) ||\n        (context.isEditingName && keyboardEvent.key === ' ')) {\n      result = 'forward';\n    } else if (\n        keyboardEvent.keyCode === UI.KeyboardShortcut.Keys.Esc.code ||\n        keyboardEvent.key === Platform.KeyboardUtilities.ESCAPE_KEY) {\n      result = 'cancel';\n    } else if (\n        !context.isEditingName && this.newProperty &&\n        keyboardEvent.keyCode === UI.KeyboardShortcut.Keys.Backspace.code) {\n      // For a new property, when Backspace is pressed at the beginning of new property value, move back to the property name.\n      const selection = target.getComponentSelection();\n      if (selection && selection.isCollapsed && !selection.focusOffset) {\n        event.preventDefault();\n        result = 'backward';\n      }\n    } else if (keyboardEvent.key === 'Tab') {\n      result = keyboardEvent.shiftKey ? 'backward' : 'forward';\n      event.preventDefault();\n    }\n\n    if (result) {\n      switch (result) {\n        case 'cancel':\n          this.editingCancelled(context);\n          if (context.isEditingName) {\n            this.nameElement?.focus();\n          } else {\n            this.valueElement?.focus();\n          }\n          break;\n        case 'forward':\n        case 'backward':\n          void this.editingCommitted(target.textContent || '', context, result);\n          break;\n      }\n\n      event.consume();\n      return;\n    }\n  }\n\n  static shouldCommitValueSemicolon(text: string, cursorPosition: number): boolean {\n    // FIXME: should this account for semicolons inside comments?\n    let openQuote = '';\n    const openParens: string[] = [];\n    for (let i = 0; i < cursorPosition; ++i) {\n      const ch = text[i];\n      if (ch === '\\\\' && openQuote !== '') {\n        ++i;\n      }  // skip next character inside string\n      else if (!openQuote && (ch === '\"' || ch === '\\'')) {\n        openQuote = ch;\n      } else if (ch === '[') {\n        openParens.push(']');\n      } else if (ch === '{') {\n        openParens.push('}');\n      } else if (ch === '(') {\n        openParens.push(')');\n      } else if (openQuote === ch) {\n        openQuote = '';\n      } else if (openParens.at(-1) === ch && !openQuote) {\n        openParens.pop();\n      }\n    }\n    return !openQuote && openParens.length === 0;\n  }\n\n  private editingNameValueKeyPress(context: Context, event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    const target = (keyboardEvent.target as HTMLElement);\n    const keyChar = String.fromCharCode(keyboardEvent.charCode);\n    const selectionLeftOffset = this.#selectionLeftOffset(target);\n    const isFieldInputTerminated =\n        (context.isEditingName ? keyChar === ':' :\n                                 keyChar === ';' && selectionLeftOffset !== null &&\n                 StylePropertyTreeElement.shouldCommitValueSemicolon(target.textContent || '', selectionLeftOffset));\n    if (isFieldInputTerminated) {\n      // Enter or colon (for name)/semicolon outside of string (for value).\n      event.consume(true);\n      void this.editingCommitted(target.textContent || '', context, 'forward');\n      return;\n    }\n  }\n\n  /** @returns Selection offset relative to `element` */\n  #selectionLeftOffset(element: HTMLElement): number|null {\n    const selection = element.getComponentSelection();\n    if (!selection?.containsNode(element, true)) {\n      return null;\n    }\n\n    let leftOffset = selection.anchorOffset;\n    let node: ChildNode|(Node | null) = selection.anchorNode;\n\n    while (node !== element) {\n      while (node?.previousSibling) {\n        node = node.previousSibling;\n        leftOffset += node.textContent?.length ?? 0;\n      }\n      node = node?.parentNodeOrShadowHost() ?? null;\n    }\n\n    return leftOffset;\n  }\n\n  private async applyFreeFlowStyleTextEdit(context: Context): Promise<void> {\n    if (!this.prompt || !this.#parentPane.node()) {\n      return;\n    }\n\n    const enteredText = this.prompt.text();\n    if (context.isEditingName && enteredText.includes(':')) {\n      void this.editingCommitted(enteredText, context, 'forward');\n      return;\n    }\n\n    const valueText = this.prompt.textWithCurrentSuggestion();\n    if (valueText.includes(';')) {\n      return;\n    }\n    // Prevent destructive side-effects during live-edit. crbug.com/433889\n    const parentNode = this.#parentPane.node();\n    if (parentNode) {\n      const isPseudo = Boolean(parentNode.pseudoType());\n      if (isPseudo) {\n        if (this.name.toLowerCase() === 'content') {\n          return;\n        }\n        const lowerValueText = valueText.trim().toLowerCase();\n        if (lowerValueText.startsWith('content:') || lowerValueText === 'display: none') {\n          return;\n        }\n      }\n    }\n\n    if (context.isEditingName) {\n      if (valueText.includes(':')) {\n        await this.applyStyleText(valueText, false);\n      } else if (this.hasBeenEditedIncrementally) {\n        await this.applyOriginalStyle(context);\n      }\n    } else if (this.nameElement) {\n      await this.applyStyleText(`${this.nameElement.textContent}: ${valueText}`, false);\n    }\n  }\n\n  kickFreeFlowStyleEditForTest(): Promise<void> {\n    const context = this.contextForTest;\n    return this.applyFreeFlowStyleTextEdit((context as Context));\n  }\n\n  editingEnded(context: Context): void {\n    this.setExpandable(context.hasChildren);\n    if (context.expanded) {\n      this.expand();\n    }\n    const editedElement = context.isEditingName ? this.nameElement : this.valueElement;\n    // The proxyElement has been deleted, no need to remove listener.\n    if (editedElement?.parentElement) {\n      editedElement.parentElement.classList.remove('child-editing');\n    }\n\n    this.#parentPane.setEditingStyle(false);\n  }\n\n  editingCancelled(context: Context): void {\n    this.removePrompt();\n\n    if (this.hasBeenEditedIncrementally) {\n      void this.applyOriginalStyle(context);\n    } else if (this.newProperty && this.treeOutline) {\n      this.treeOutline.removeChild(this);\n    }\n    this.updateTitle();\n\n    // This should happen last, as it clears the info necessary to restore the property value after [Page]Up/Down changes.\n    this.editingEnded(context);\n  }\n\n  private async applyOriginalStyle(context: Context): Promise<void> {\n    await this.applyStyleText(this.originalPropertyText, false, context.originalProperty);\n  }\n\n  private findSibling(moveDirection: string): StylePropertyTreeElement|null {\n    let target: (StylePropertyTreeElement|null)|this = this;\n    do {\n      const sibling: UI.TreeOutline.TreeElement|null =\n          moveDirection === 'forward' ? target.nextSibling : target.previousSibling;\n      target = sibling instanceof StylePropertyTreeElement ? sibling : null;\n    } while (target?.inherited());\n\n    return target;\n  }\n\n  private async editingCommitted(userInput: string, context: Context, moveDirection: string): Promise<void> {\n    this.removePrompt();\n    this.editingEnded(context);\n    const isEditingName = context.isEditingName;\n    // If the underlying property has been ripped out, always assume that the value having been entered was\n    // a name-value pair and attempt to process it via the SDK.\n    if (!this.nameElement || !this.valueElement) {\n      return;\n    }\n\n    const nameElementValue = this.nameElement.textContent || '';\n    const nameValueEntered = (isEditingName && nameElementValue.includes(':')) || !this.property;\n\n    // Determine where to move to before making changes\n    let createNewProperty = false;\n    let moveToSelector = false;\n    const isDataPasted = typeof context.originalName !== 'undefined';\n    const isDirtyViaPaste = isDataPasted &&\n        (this.nameElement.textContent !== context.originalName ||\n         this.valueElement.textContent !== context.originalValue);\n    const isPropertySplitPaste =\n        isDataPasted && isEditingName && this.valueElement.textContent !== context.originalValue;\n    let moveTo: (StylePropertyTreeElement|null)|this = this;\n    const moveToOther = (isEditingName !== (moveDirection === 'forward'));\n    const abandonNewProperty = this.newProperty && !userInput && (moveToOther || isEditingName);\n    if (moveDirection === 'forward' && (!isEditingName || isPropertySplitPaste) ||\n        moveDirection === 'backward' && isEditingName) {\n      moveTo = moveTo.findSibling(moveDirection);\n      if (!moveTo) {\n        if (moveDirection === 'forward' && (!this.newProperty || userInput)) {\n          createNewProperty = true;\n        } else if (moveDirection === 'backward') {\n          moveToSelector = true;\n        }\n      }\n    }\n\n    // Make the Changes and trigger the moveToNextCallback after updating.\n    let moveToIndex = -1;\n    if (moveTo !== null && this.treeOutline) {\n      moveToIndex = this.treeOutline.rootElement().indexOfChild((moveTo as UI.TreeOutline.TreeElement));\n    }\n    const blankInput = Platform.StringUtilities.isWhitespace(userInput);\n    const shouldCommitNewProperty = this.newProperty &&\n        (isPropertySplitPaste || moveToOther || (!moveDirection && !isEditingName) || (isEditingName && blankInput) ||\n         nameValueEntered);\n    if (((userInput !== context.previousContent || isDirtyViaPaste) && !this.newProperty) || shouldCommitNewProperty) {\n      let propertyText;\n      if (nameValueEntered) {\n        propertyText = this.nameElement.textContent;\n      } else if (\n          blankInput ||\n          (this.newProperty && Platform.StringUtilities.isWhitespace(this.valueElement.textContent || ''))) {\n        propertyText = '';\n      } else if (isEditingName) {\n        propertyText = userInput + ': ' + this.property.value;\n      } else {\n        propertyText = this.property.name + ': ' + userInput;\n      }\n      await this.applyStyleText(propertyText || '', true);\n      moveToNextCallback.call(this, this.newProperty, !blankInput, this.#parentSection);\n    } else {\n      if (isEditingName) {\n        this.property.name = userInput;\n      } else {\n        this.property.value = userInput;\n      }\n      if (!isDataPasted && !this.newProperty) {\n        this.updateTitle();\n      }\n      moveToNextCallback.call(this, this.newProperty, false, this.#parentSection);\n    }\n\n    /**\n     * The Callback to start editing the next/previous property/selector.\n     */\n    function moveToNextCallback(\n        this: StylePropertyTreeElement, alreadyNew: boolean, valueChanged: boolean,\n        section: StylePropertiesSection): void {\n      if (!moveDirection) {\n        this.#parentPane.resetFocus();\n        return;\n      }\n\n      // User just tabbed through without changes.\n      if (moveTo && moveTo.parent) {\n        if (isEditingName) {\n          moveTo.startEditingValue();\n        } else {\n          moveTo.startEditingName();\n        }\n        return;\n      }\n\n      // User has made a change then tabbed, wiping all the original treeElements.\n      // Recalculate the new treeElement for the same property we were going to edit next.\n      if (moveTo && !moveTo.parent) {\n        const rootElement = section.propertiesTreeOutline.rootElement();\n        if (moveDirection === 'forward' && blankInput && !isEditingName) {\n          --moveToIndex;\n        }\n        if (moveToIndex >= rootElement.childCount() && !this.newProperty) {\n          createNewProperty = true;\n        } else {\n          const treeElement =\n              (moveToIndex >= 0 ? rootElement.childAt(moveToIndex) : null) as StylePropertyTreeElement | null;\n          if (treeElement) {\n            if (alreadyNew && blankInput) {\n              if (moveDirection === 'forward') {\n                treeElement.startEditingName();\n              } else {\n                treeElement.startEditingValue();\n              }\n            } else if (!isEditingName || isPropertySplitPaste) {\n              treeElement.startEditingName();\n            } else {\n              treeElement.startEditingValue();\n            }\n            return;\n          }\n          if (!alreadyNew) {\n            moveToSelector = true;\n          }\n        }\n      }\n\n      // Create a new attribute in this section (or move to next editable selector if possible).\n      if (createNewProperty) {\n        if (alreadyNew && !valueChanged && (isEditingName !== (moveDirection === 'backward'))) {\n          return;\n        }\n\n        section.addNewBlankProperty().startEditingName();\n        return;\n      }\n\n      if (abandonNewProperty) {\n        moveTo = this.findSibling(moveDirection);\n        const sectionToEdit = (moveTo || moveDirection === 'backward') ? section : section.nextEditableSibling();\n        if (sectionToEdit) {\n          if (sectionToEdit.style().parentRule) {\n            sectionToEdit.startEditingSelector();\n          } else {\n            sectionToEdit.moveEditorFromSelector(moveDirection);\n          }\n        }\n        return;\n      }\n\n      if (moveToSelector) {\n        if (section.style().parentRule) {\n          section.startEditingSelector();\n        } else {\n          section.moveEditorFromSelector(moveDirection);\n        }\n      }\n    }\n  }\n\n  private removePrompt(): void {\n    // BUG 53242. This cannot go into editingEnded(), as it should always happen first for any editing outcome.\n    if (this.prompt) {\n      this.prompt.detach();\n      this.prompt = null;\n    }\n  }\n\n  styleTextAppliedForTest(): void {\n  }\n\n  applyStyleText(styleText: string, majorChange: boolean, property?: SDK.CSSProperty.CSSProperty|null): Promise<void> {\n    return this.applyStyleThrottler.schedule(this.innerApplyStyleText.bind(this, styleText, majorChange, property));\n  }\n\n  private async innerApplyStyleText(\n      styleText: string, majorChange: boolean, property?: SDK.CSSProperty.CSSProperty|null): Promise<void> {\n    // this.property might have been nulled at the end of the last innerApplyStyleText.\n    if (!this.treeOutline || !this.property) {\n      return;\n    }\n\n    const oldStyleRange = this.style.range;\n    if (!oldStyleRange) {\n      return;\n    }\n\n    const hasBeenEditedIncrementally = this.hasBeenEditedIncrementally;\n    styleText = styleText.replace(/[\\xA0\\t]/g, ' ').trim();  // Replace &nbsp; with whitespace.\n    if (!styleText.length && majorChange && this.newProperty && !hasBeenEditedIncrementally) {\n      // The user deleted everything and never applied a new property value via Up/Down scrolling/live editing, so remove the tree element and update.\n      this.parent?.removeChild(this);\n      return;\n    }\n\n    const currentNode = this.#parentPane.node();\n    this.#parentPane.setUserOperation(true);\n\n    styleText += Platform.StringUtilities.findUnclosedCssQuote(styleText);\n    styleText += ')'.repeat(Platform.StringUtilities.countUnmatchedLeftParentheses(styleText));\n\n    // Append a \";\" if the new text does not end in \";\".\n    // FIXME: this does not handle trailing comments.\n    if (styleText.length && !/;\\s*$/.test(styleText)) {\n      styleText += ';';\n    }\n\n    const overwriteProperty = !this.newProperty || hasBeenEditedIncrementally;\n    let success: boolean = await this.property.setText(styleText, majorChange, overwriteProperty);\n    if (success && majorChange) {\n      Badges.UserBadges.instance().recordAction(Badges.BadgeAction.CSS_RULE_MODIFIED);\n    }\n\n    // Revert to the original text if applying the new text failed\n    if (hasBeenEditedIncrementally && majorChange && !success) {\n      majorChange = false;\n      success = await this.property.setText(this.originalPropertyText, majorChange, overwriteProperty);\n    }\n    this.#parentPane.setUserOperation(false);\n\n    // TODO: using this.property.index to access its containing StyleDeclaration's property will result in\n    // off-by-1 errors when the containing StyleDeclaration's respective property has already been deleted.\n    // These referencing logic needs to be updated to be more robust.\n    const updatedProperty = property || this.style.propertyAt(this.property.index);\n    const isPropertyWithinBounds = this.property.index < this.style.allProperties().length;\n    if (!success || (!updatedProperty && isPropertyWithinBounds)) {\n      if (majorChange) {\n        // It did not apply, cancel editing.\n        if (this.newProperty) {\n          this.treeOutline.removeChild(this);\n        } else {\n          this.updateTitle();\n        }\n      }\n      this.styleTextAppliedForTest();\n      return;\n    }\n\n    this.#matchedStyles.resetActiveProperties();\n    this.hasBeenEditedIncrementally = true;\n\n    // null check for updatedProperty before setting this.property as the code never expects this.property to be undefined or null.\n    // This occurs when deleting the last index of a StylePropertiesSection as this.style._allProperties array gets updated\n    // before we index it when setting the value for updatedProperty\n    const deleteProperty = majorChange && !styleText.length;\n    if (deleteProperty) {\n      this.#parentSection.resetToolbars();\n    } else if (!deleteProperty && updatedProperty) {\n      this.property = updatedProperty;\n    }\n\n    if (currentNode === this.node()) {\n      this.updatePane();\n    }\n\n    this.styleTextAppliedForTest();\n  }\n\n  override ondblclick(): boolean {\n    return true;  // handled\n  }\n\n  override isEventWithinDisclosureTriangle(event: Event): boolean {\n    return event.target === this.expandElement;\n  }\n}\nexport interface Context {\n  expanded: boolean;\n  hasChildren: boolean;\n  isEditingName: boolean;\n  originalProperty?: SDK.CSSProperty.CSSProperty;\n  originalName?: string;\n  originalValue?: string;\n  previousContent: string;\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n\nimport {\n  buildPropertyDefinitionText,\n  buildPropertyName,\n  buildPropertyValue,\n  isBlockContainer,\n  isFlexContainer,\n  isGridContainer,\n  isInlineElement,\n  isMasonryContainer,\n  isMulticolContainer,\n  isPossiblyReplacedElement,\n} from './CSSRuleValidatorHelper.js';\n\nconst UIStrings = {\n  /**\n   * @description The message shown in the Style pane when the user hovers over a property that has no effect due to some other property.\n   * @example {flex-wrap: nowrap} REASON_PROPERTY_DECLARATION_CODE\n   * @example {align-content} AFFECTED_PROPERTY_DECLARATION_CODE\n   */\n  ruleViolatedBySameElementRuleReason:\n      'The {REASON_PROPERTY_DECLARATION_CODE} property prevents {AFFECTED_PROPERTY_DECLARATION_CODE} from having an effect.',\n  /**\n   * @description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to some other property.\n   * @example {flex-wrap} PROPERTY_NAME\n   * @example {nowrap} PROPERTY_VALUE\n   */\n  ruleViolatedBySameElementRuleFix: 'Try setting {PROPERTY_NAME} to something other than {PROPERTY_VALUE}.',\n  /**\n   * @description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to not being a flex or grid container.\n   * @example {display: grid} DISPLAY_GRID_RULE\n   * @example {display: flex} DISPLAY_FLEX_RULE\n   */\n  ruleViolatedBySameElementRuleChangeFlexOrGrid:\n      'Try adding {DISPLAY_GRID_RULE} or {DISPLAY_FLEX_RULE} to make this element into a container.',\n  /**\n   * @description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to the current property value.\n   * @example {display: block} EXISTING_PROPERTY_DECLARATION\n   * @example {display: flex} TARGET_PROPERTY_DECLARATION\n   */\n  ruleViolatedBySameElementRuleChangeSuggestion:\n      'Try setting the {EXISTING_PROPERTY_DECLARATION} property to {TARGET_PROPERTY_DECLARATION}.',\n  /**\n   * @description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to properties of the parent element.\n   * @example {display: block} REASON_PROPERTY_DECLARATION_CODE\n   * @example {flex} AFFECTED_PROPERTY_DECLARATION_CODE\n   */\n  ruleViolatedByParentElementRuleReason:\n      'The {REASON_PROPERTY_DECLARATION_CODE} property on the parent element prevents {AFFECTED_PROPERTY_DECLARATION_CODE} from having an effect.',\n  /**\n   * @description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to the properties of the parent element.\n   * @example {display: block} EXISTING_PARENT_ELEMENT_RULE\n   * @example {display: flex} TARGET_PARENT_ELEMENT_RULE\n   */\n  ruleViolatedByParentElementRuleFix:\n      'Try setting the {EXISTING_PARENT_ELEMENT_RULE} property on the parent to {TARGET_PARENT_ELEMENT_RULE}.',\n\n  /**\n   * @description The warning text shown in Elements panel when font-variation-settings don't match allowed values\n   * @example {wdth} PH1\n   * @example {100} PH2\n   * @example {10} PH3\n   * @example {20} PH4\n   * @example {Arial} PH5\n   */\n  fontVariationSettingsWarning:\n      'Value for setting “{PH1}” {PH2} is outside the supported range [{PH3}, {PH4}] for font-family “{PH5}”.',\n  /**\n   * @description The message shown in the Style pane when the user hovers over a property declaration that has no effect on flex or grid child items.\n   * @example {flex} CONTAINER_DISPLAY_NAME\n   * @example {align-contents} PROPERTY_NAME\n   */\n  flexGridContainerPropertyRuleReason:\n      'This element is a {CONTAINER_DISPLAY_NAME} item, i.e. a child of a {CONTAINER_DISPLAY_NAME} container, but {PROPERTY_NAME} only applies to containers.',\n  /**\n   * @description The message shown in the Style pane when the user hovers over a property declaration that has no effect on flex or grid child items.\n   * @example {align-contents} PROPERTY_NAME\n   * @example {align-self} ALTERNATIVE_PROPERTY_NAME\n   */\n  flexGridContainerPropertyRuleFix:\n      'Try setting the {PROPERTY_NAME} on the container element or use {ALTERNATIVE_PROPERTY_NAME} instead.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/CSSRuleValidator.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport const enum HintType {\n  INACTIVE_PROPERTY = 'ruleValidation',\n  DEPRECATED_PROPERTY = 'deprecatedProperty',\n}\n\nexport class Hint {\n  readonly #hintMessage: string;\n  readonly #possibleFixMessage: string|null;\n  readonly #learnMoreLink: string|undefined;\n\n  constructor(hintMessage: string, possibleFixMessage: string|null, learnMoreLink?: string) {\n    this.#hintMessage = hintMessage;\n    this.#possibleFixMessage = possibleFixMessage;\n    this.#learnMoreLink = learnMoreLink;\n  }\n\n  getMessage(): string {\n    return this.#hintMessage;\n  }\n\n  getPossibleFixMessage(): string|null {\n    return this.#possibleFixMessage;\n  }\n\n  getLearnMoreLink(): string|undefined {\n    return this.#learnMoreLink;\n  }\n}\n\nexport abstract class CSSRuleValidator {\n  readonly #affectedProperties: string[];\n\n  constructor(affectedProperties: string[]) {\n    this.#affectedProperties = affectedProperties;\n  }\n\n  getApplicableProperties(): string[] {\n    return this.#affectedProperties;\n  }\n\n  abstract getHint(\n      propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>,\n      nodeName?: string, fontFaces?: SDK.CSSFontFace.CSSFontFace[]): Hint|undefined;\n}\n\nexport class AlignContentValidator extends CSSRuleValidator {\n  constructor() {\n    super(['align-content', 'place-content']);\n  }\n\n  getHint(_propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (!computedStyles) {\n      return;\n    }\n    const isFlex = isFlexContainer(computedStyles);\n    if (!isFlex && !isBlockContainer(computedStyles) && !isGridContainer(computedStyles) &&\n        !isMasonryContainer(computedStyles)) {\n      const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n      const affectedPropertyDeclarationCode = buildPropertyName('align-content');\n\n      return new Hint(\n          i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n          }),\n          i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n            PROPERTY_NAME: buildPropertyName('display'),\n            PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display') as string),\n          }),\n      );\n    }\n\n    if (!isFlex) {\n      return;\n    }\n    if (computedStyles.get('flex-wrap') !== 'nowrap') {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('flex-wrap', 'nowrap');\n    const affectedPropertyDeclarationCode = buildPropertyName('align-content');\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n          AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('flex-wrap'),\n          PROPERTY_VALUE: buildPropertyValue('nowrap'),\n        }),\n    );\n  }\n}\n\nexport class FlexItemValidator extends CSSRuleValidator {\n  constructor() {\n    super(['flex', 'flex-basis', 'flex-grow', 'flex-shrink']);\n  }\n\n  getHint(propertyName: string, _computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    if (!parentComputedStyles) {\n      return;\n    }\n    if (isFlexContainer(parentComputedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', parentComputedStyles?.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n    const targetParentPropertyDeclaration = buildPropertyDefinitionText('display', 'flex');\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedByParentElementRuleReason, {\n          REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n          AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedByParentElementRuleFix, {\n          EXISTING_PARENT_ELEMENT_RULE: reasonPropertyDeclaration,\n          TARGET_PARENT_ELEMENT_RULE: targetParentPropertyDeclaration,\n        }),\n    );\n  }\n}\n\nexport class FlexContainerValidator extends CSSRuleValidator {\n  constructor() {\n    super(['flex-direction', 'flex-flow', 'flex-wrap']);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (!computedStyles) {\n      return;\n    }\n    if (isFlexContainer(computedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const targetRuleCode = buildPropertyDefinitionText('display', 'flex');\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n          AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleChangeSuggestion, {\n          EXISTING_PROPERTY_DECLARATION: reasonPropertyDeclaration,\n          TARGET_PROPERTY_DECLARATION: targetRuleCode,\n        }),\n    );\n  }\n}\n\nexport class GridContainerValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'grid',\n      'grid-auto-columns',\n      'grid-auto-flow',\n      'grid-auto-rows',\n      'grid-template',\n      'grid-template-areas',\n      'grid-template-columns',\n      'grid-template-rows',\n    ]);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (isGridContainer(computedStyles) || isMasonryContainer(computedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const targetRuleCode = buildPropertyDefinitionText('display', 'grid');\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n          AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleChangeSuggestion, {\n          EXISTING_PROPERTY_DECLARATION: reasonPropertyDeclaration,\n          TARGET_PROPERTY_DECLARATION: targetRuleCode,\n        }),\n    );\n  }\n}\n\nexport class GridItemValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'grid-area',\n      'grid-column',\n      'grid-row',\n      'grid-row-end',\n      'grid-row-start',\n    ]);\n  }\n\n  getHint(propertyName: string, _computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    if (!parentComputedStyles) {\n      return;\n    }\n    if (isGridContainer(parentComputedStyles) || isMasonryContainer(parentComputedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', parentComputedStyles?.get('display'));\n    const targetParentPropertyDeclaration = buildPropertyDefinitionText('display', 'grid');\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedByParentElementRuleReason, {\n          REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n          AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedByParentElementRuleFix, {\n          EXISTING_PARENT_ELEMENT_RULE: reasonPropertyDeclaration,\n          TARGET_PARENT_ELEMENT_RULE: targetParentPropertyDeclaration,\n        }),\n    );\n  }\n}\n\nexport class FlexOrGridItemValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'order',\n    ]);\n  }\n\n  getHint(propertyName: string, _computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    if (!parentComputedStyles) {\n      return;\n    }\n    if (isFlexContainer(parentComputedStyles) || isGridContainer(parentComputedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', parentComputedStyles?.get('display'));\n    const targetParentPropertyDeclaration =\n        `${buildPropertyDefinitionText('display', 'flex')} or ${buildPropertyDefinitionText('display', 'grid')}`;\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedByParentElementRuleReason, {\n          REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n          AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedByParentElementRuleFix, {\n          EXISTING_PARENT_ELEMENT_RULE: reasonPropertyDeclaration,\n          TARGET_PARENT_ELEMENT_RULE: targetParentPropertyDeclaration,\n        }),\n    );\n  }\n}\n\nexport class FlexGridValidator extends CSSRuleValidator {\n  constructor() {\n    // justify-content is specified to affect multicol, but we don't implement that yet.\n    super(['justify-content']);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    if (!computedStyles) {\n      return;\n    }\n\n    if (isFlexContainer(computedStyles) || isGridContainer(computedStyles) || isMasonryContainer(computedStyles)) {\n      return;\n    }\n\n    if (parentComputedStyles &&\n        (isFlexContainer(parentComputedStyles) || isGridContainer(parentComputedStyles) ||\n         isMasonryContainer(parentComputedStyles))) {\n      const reasonContainerDisplayName = buildPropertyValue(parentComputedStyles.get('display') as string);\n      const reasonPropertyName = buildPropertyName(propertyName);\n      const reasonAlternativePropertyName = buildPropertyName('justify-self');\n      return new Hint(\n          i18nString(UIStrings.flexGridContainerPropertyRuleReason, {\n            CONTAINER_DISPLAY_NAME: reasonContainerDisplayName,\n            PROPERTY_NAME: reasonPropertyName,\n          }),\n          i18nString(UIStrings.flexGridContainerPropertyRuleFix, {\n            PROPERTY_NAME: reasonPropertyName,\n            ALTERNATIVE_PROPERTY_NAME: reasonAlternativePropertyName,\n          }),\n      );\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n          AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleChangeFlexOrGrid, {\n          DISPLAY_GRID_RULE: buildPropertyDefinitionText('display', 'grid'),\n          DISPLAY_FLEX_RULE: buildPropertyDefinitionText('display', 'flex'),\n        }),\n    );\n  }\n}\n\nexport class MulticolFlexGridValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'gap',\n      'column-gap',\n      'row-gap',\n      'grid-gap',\n      'grid-column-gap',\n      'grid-row-gap',\n    ]);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (!computedStyles) {\n      return;\n    }\n\n    if (isMulticolContainer(computedStyles) || isFlexContainer(computedStyles) || isGridContainer(computedStyles) ||\n        isMasonryContainer(computedStyles)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n          AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('display'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display') as string),\n        }),\n    );\n  }\n}\n\nexport class PaddingValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'padding',\n      'padding-top',\n      'padding-right',\n      'padding-bottom',\n      'padding-left',\n    ]);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    const display = computedStyles?.get('display');\n    if (!display) {\n      return;\n    }\n    const tableAttributes = [\n      'table-row-group',\n      'table-header-group',\n      'table-footer-group',\n      'table-row',\n      'table-column-group',\n      'table-column',\n    ];\n    if (!tableAttributes.includes(display)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n          AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('display'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display') as string),\n        }),\n    );\n  }\n}\n\nexport class PositionValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'top',\n      'right',\n      'bottom',\n      'left',\n    ]);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    const position = computedStyles?.get('position');\n    if (!position) {\n      return;\n    }\n    if (position !== 'static') {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('position', computedStyles?.get('position'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n          AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('position'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('position') as string),\n        }),\n    );\n  }\n}\n\nexport class ZIndexValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'z-index',\n    ]);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    const position = computedStyles?.get('position');\n    if (!position) {\n      return;\n    }\n    if (['absolute', 'relative', 'fixed', 'sticky'].includes(position) || isFlexContainer(parentComputedStyles) ||\n        isGridContainer(parentComputedStyles)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('position', computedStyles?.get('position'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n          AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('position'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('position') as string),\n        }),\n    );\n  }\n}\n\n/**\n * Validates if CSS width/height are having an effect on an element.\n * See \"Applies to\" in https://www.w3.org/TR/css-sizing-3/#propdef-width.\n * See \"Applies to\" in https://www.w3.org/TR/css-sizing-3/#propdef-height.\n */\nexport class SizingValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'width',\n      'height',\n    ]);\n  }\n\n  getHint(\n      propertyName: string, computedStyles?: Map<string, string>, _parentComputedStyles?: Map<string, string>,\n      nodeName?: string): Hint|undefined {\n    if (!computedStyles || !nodeName) {\n      return;\n    }\n    if (!isInlineElement(computedStyles)) {\n      return;\n    }\n    // See https://html.spec.whatwg.org/multipage/rendering.html#replaced-elements.\n    if (isPossiblyReplacedElement(nodeName)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n          AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('display'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display') as string),\n        }),\n    );\n  }\n}\n\n/**\n * Checks that font variation settings are applicable to the actual font.\n */\nexport class FontVariationSettingsValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'font-variation-settings',\n    ]);\n  }\n\n  getHint(\n      _propertyName: string, computedStyles?: Map<string, string>, _parentComputedStyles?: Map<string, string>,\n      _nodeName?: string, fontFaces?: SDK.CSSFontFace.CSSFontFace[]): Hint|undefined {\n    if (!computedStyles) {\n      return;\n    }\n    const value = computedStyles.get('font-variation-settings');\n    if (!value) {\n      return;\n    }\n    const fontFamily = computedStyles.get('font-family');\n    if (!fontFamily) {\n      return;\n    }\n    const fontFamilies = new Set<string>(SDK.CSSPropertyParser.parseFontFamily(fontFamily));\n    const matchingFontFaces = (fontFaces || []).filter(f => fontFamilies.has(f.getFontFamily()));\n    const variationSettings = SDK.CSSPropertyParser.parseFontVariationSettings(value);\n    const warnings = [];\n    for (const elementSetting of variationSettings) {\n      for (const font of matchingFontFaces) {\n        const fontSetting = font.getVariationAxisByTag(elementSetting.tag);\n        if (!fontSetting) {\n          continue;\n        }\n        if (elementSetting.value < fontSetting.minValue || elementSetting.value > fontSetting.maxValue) {\n          warnings.push(i18nString(UIStrings.fontVariationSettingsWarning, {\n            PH1: elementSetting.tag,\n            PH2: elementSetting.value,\n            PH3: fontSetting.minValue,\n            PH4: fontSetting.maxValue,\n            PH5: font.getFontFamily(),\n          }));\n        }\n      }\n    }\n\n    if (!warnings.length) {\n      return;\n    }\n\n    return new Hint(\n        warnings.join(' '),\n        '',\n    );\n  }\n}\n\nconst CSS_RULE_VALIDATORS = [\n  AlignContentValidator,\n  FlexContainerValidator,\n  FlexGridValidator,\n  FlexItemValidator,\n  FlexOrGridItemValidator,\n  FontVariationSettingsValidator,\n  GridContainerValidator,\n  GridItemValidator,\n  MulticolFlexGridValidator,\n  PaddingValidator,\n  PositionValidator,\n  SizingValidator,\n  ZIndexValidator,\n];\n\nconst setupCSSRulesValidators = (): Map<string, CSSRuleValidator[]> => {\n  const validatorsMap = new Map<string, CSSRuleValidator[]>();\n  for (const validatorClass of CSS_RULE_VALIDATORS) {\n    const validator = new validatorClass();\n    const affectedProperties = validator.getApplicableProperties();\n\n    for (const affectedProperty of affectedProperties) {\n      let propertyValidators = validatorsMap.get(affectedProperty);\n      if (propertyValidators === undefined) {\n        propertyValidators = [];\n      }\n      propertyValidators.push(validator);\n\n      validatorsMap.set(affectedProperty, propertyValidators);\n    }\n  }\n  return validatorsMap;\n};\n\nexport const cssRuleValidatorsMap: Map<string, CSSRuleValidator[]> = setupCSSRulesValidators();\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport const buildPropertyDefinitionText = (property: string, value?: string): string => {\n  if (value === undefined) {\n    return buildPropertyName(property);\n  }\n  return '<code class=\"unbreakable-text\"><span class=\"property\">' + property + '</span>: ' + value + '</code>';\n};\n\nexport const buildPropertyName = (property: string): string => {\n  return '<code class=\"unbreakable-text\"><span class=\"property\">' + property + '</span></code>';\n};\n\nexport const buildPropertyValue = (property: string): string => {\n  return '<code class=\"unbreakable-text\">' + property + '</code>';\n};\n\nexport const isFlexContainer = (computedStyles?: Map<string, string>): boolean => {\n  if (!computedStyles) {\n    return false;\n  }\n  const display = computedStyles.get('display');\n  return display === 'flex' || display === 'inline-flex';\n};\n\nconst blockContainerDisplayValueSet = new Set([\n  'block',\n  'flow-root',\n  'inline-block',\n  'list-item',\n  'table-caption',\n  'table-cell',\n]);\n\nexport const isBlockContainer = (computedStyles?: Map<string, string>): boolean => {\n  if (!computedStyles) {\n    return false;\n  }\n  const displayValue = computedStyles.get('display');\n  if (!displayValue) {\n    return false;\n  }\n  const split = displayValue.split(' ');\n  if (split.length > 3) {\n    return false;\n  }\n  // The order of keywords is canonicalized to \"outside? inside? list-item?\"\n  // If the number of keywords is 3, it must be 'inline flow-root list-item'.\n  if (split.length === 3) {\n    return split[2] === 'list-item';\n  }\n  if (split.length === 2) {\n    return split[1] === 'list-item' && split[0] !== 'inline';\n  }\n  return blockContainerDisplayValueSet.has(split[0]);\n};\n\nexport const isInlineElement = (computedStyles?: Map<string, string>): boolean => {\n  if (!computedStyles) {\n    return false;\n  }\n  return computedStyles.get('display') === 'inline';\n};\n\n// See https://html.spec.whatwg.org/multipage/rendering.html#replaced-elements\nconst possiblyReplacedElements = new Set([\n  'audio',\n  'canvas',\n  'embed',\n  'iframe',\n  'img',\n  'input',\n  'object',\n  'video',\n]);\n\nexport const isPossiblyReplacedElement = (nodeName?: string): boolean => {\n  if (!nodeName) {\n    return false;\n  }\n  return possiblyReplacedElements.has(nodeName);\n};\n\nexport const isGridContainer = (computedStyles?: Map<string, string>): boolean => {\n  if (!computedStyles) {\n    return false;\n  }\n  const display = computedStyles.get('display');\n  return display === 'grid' || display === 'inline-grid';\n};\n\nexport const isMasonryContainer = (computedStyles?: Map<string, string>): boolean => {\n  if (!computedStyles) {\n    return false;\n  }\n  const display = computedStyles.get('display');\n  return display === 'masonry' || display === 'inline-masonry';\n};\n\nexport const isMulticolContainer = (computedStyles?: Map<string, string>): boolean => {\n  if (!computedStyles) {\n    return false;\n  }\n  const columnWidth = computedStyles.get('column-width');\n  const columnCount = computedStyles.get('column-count');\n\n  return columnWidth !== 'auto' || columnCount !== 'auto';\n};\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Lit from '../../third_party/lit/lit.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport cssValueTraceViewStyles from './cssValueTraceView.css.js';\nimport {\n  Highlighting,\n  type MatchRenderer,\n  Renderer,\n  RenderingContext,\n  TracingContext,\n} from './PropertyRenderer.js';\nimport stylePropertiesTreeOutlineStyles from './stylePropertiesTreeOutline.css.js';\n\nconst {html, render, Directives: {classMap, ifDefined}} = Lit;\n\nexport interface ViewInput {\n  substitutions: Node[][];\n  evaluations: Node[][];\n  onToggle: () => void;\n}\n\nexport type View = (\n    input: ViewInput,\n    output: object,\n    target: HTMLElement,\n    ) => void;\n\nfunction defaultView(input: ViewInput, output: object, target: HTMLElement): void {\n  const substitutions = [...input.substitutions];\n  const evaluations = [...input.evaluations];\n  const finalResult = evaluations.pop() ?? substitutions.pop();\n  const [firstEvaluation, ...intermediateEvaluations] = evaluations;\n\n  const hiddenSummary = !firstEvaluation || intermediateEvaluations.length === 0;\n  const summaryTabIndex = hiddenSummary ? undefined : 0;\n  const singleResult = evaluations.length === 0 && substitutions.length === 0;\n  // clang-format off\n  render(\n    html`\n      <div role=dialog class=\"css-value-trace monospace\" @keydown=${onKeyDown}>\n        ${substitutions.map(line => html`\n          <span class=\"trace-line-icon\" aria-label=\"is equal to\">↳</span>\n          <span class=\"trace-line\">${line}</span>`,\n        )}\n        ${firstEvaluation && intermediateEvaluations.length === 0 ? html`\n          <span class=\"trace-line-icon\" aria-label=\"is equal to\">↳</span>\n          <span class=\"trace-line\">${firstEvaluation}</span>`\n            : html`\n          <details @toggle=${input.onToggle} ?hidden=${hiddenSummary}>\n            <summary tabindex=${ifDefined(summaryTabIndex)}>\n              <span class=\"trace-line-icon\" aria-label=\"is equal to\">↳</span>\n              <devtools-icon class=\"marker\"></devtools-icon>\n              <span class=\"trace-line\">${firstEvaluation}</span>\n            </summary>\n            <div>\n              ${intermediateEvaluations.map(\n                evaluation => html`\n                  <span class=\"trace-line-icon\" aria-label=\"is equal to\" >↳</span>\n                  <span class=\"trace-line\">${evaluation}</span>`,\n              )}\n            </div>\n          </details>`}\n        ${finalResult ? html`\n          <span class=\"trace-line-icon\" aria-label=\"is equal to\" ?hidden=${singleResult}>↳</span>\n          <span class=${classMap({ 'trace-line': true, 'full-row': singleResult})}>\n            ${finalResult}\n          </span>`: ''}\n      </div>`, target);\n  // clang-format on\n\n  function onKeyDown(this: HTMLDivElement, e: KeyboardEvent): void {\n    // prevent styles-tab keyboard navigation\n    if (!e.altKey) {\n      if (e.key.startsWith('Arrow') || e.key === ' ' || e.key === 'Enter') {\n        e.consume();\n      }\n    }\n\n    // Capture tab focus within\n    if (e.key === 'Tab') {\n      const tabstops = this.querySelectorAll('[tabindex]') ?? [];\n      const firstTabStop = tabstops[0];\n      const lastTabStop = tabstops[tabstops.length - 1];\n      if (e.target === lastTabStop && !e.shiftKey) {\n        e.consume(true);\n        if (firstTabStop instanceof HTMLElement) {\n          firstTabStop.focus();\n        }\n      }\n      if (e.target === firstTabStop && e.shiftKey) {\n        e.consume(true);\n        if (lastTabStop instanceof HTMLElement) {\n          lastTabStop.focus();\n        }\n      }\n    }\n  }\n}\n\nexport class CSSValueTraceView extends UI.Widget.VBox {\n  #highlighting: Highlighting|undefined;\n  readonly #view: View;\n  #evaluations: Node[][] = [];\n  #substitutions: Node[][] = [];\n  #pendingFocus = false;\n\n  constructor(element?: HTMLElement, view: View = defaultView) {\n    super(element, {useShadowDom: true});\n    this.registerRequiredCSS(\n        cssValueTraceViewStyles,\n        stylePropertiesTreeOutlineStyles,\n    );\n    this.#view = view;\n    this.requestUpdate();\n  }\n\n  async showTrace(\n      property: SDK.CSSProperty.CSSProperty,\n      subexpression: string|null,\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      computedStyles: Map<string, string>|null,\n      renderers: Array<MatchRenderer<SDK.CSSPropertyParser.Match>>,\n      expandPercentagesInShorthands: boolean,\n      shorthandPositionOffset: number,\n      focus: boolean,\n      ): Promise<void> {\n    const matchedResult = subexpression === null ?\n        property.parseValue(matchedStyles, computedStyles) :\n        property.parseExpression(subexpression, matchedStyles, computedStyles);\n    if (!matchedResult) {\n      return undefined;\n    }\n    return await this.#showTrace(\n        property, matchedResult, renderers, expandPercentagesInShorthands, shorthandPositionOffset, focus);\n  }\n\n  async #showTrace(\n      property: SDK.CSSProperty.CSSProperty,\n      matchedResult: SDK.CSSPropertyParser.BottomUpTreeMatching,\n      renderers: Array<MatchRenderer<SDK.CSSPropertyParser.Match>>,\n      expandPercentagesInShorthands: boolean,\n      shorthandPositionOffset: number,\n      focus: boolean,\n      ): Promise<void> {\n    this.#highlighting = new Highlighting();\n    const rendererMap = new Map(renderers.map(r => [r.matchType, r]));\n\n    // Compute all trace lines\n    // 1st: Apply substitutions for var() functions\n    const substitutions = [];\n    const evaluations = [];\n    const tracing =\n        new TracingContext(this.#highlighting, expandPercentagesInShorthands, shorthandPositionOffset, matchedResult);\n    while (tracing.nextSubstitution()) {\n      const context = new RenderingContext(\n          matchedResult.ast,\n          property,\n          rendererMap,\n          matchedResult,\n          /* cssControls */ undefined,\n          /* options */ {},\n          tracing,\n      );\n      substitutions.push(Renderer.render(matchedResult.ast.tree, context).nodes);\n    }\n\n    // 2nd: Apply evaluations for calc, min, max, etc.\n    const asyncCallbackResults = [];\n    while (tracing.nextEvaluation()) {\n      const context = new RenderingContext(\n          matchedResult.ast,\n          property,\n          rendererMap,\n          matchedResult,\n          /* cssControls */ undefined,\n          /* options */ {},\n          tracing,\n      );\n      evaluations.push(Renderer.render(matchedResult.ast.tree, context).nodes);\n      asyncCallbackResults.push(tracing.runAsyncEvaluations());\n    }\n\n    this.#substitutions = substitutions;\n    this.#evaluations = [];\n    for (const [index, success] of (await Promise.all(asyncCallbackResults)).entries()) {\n      if (success) {\n        this.#evaluations.push(evaluations[index]);\n      }\n    }\n\n    if (this.#substitutions.length === 0 && this.#evaluations.length === 0) {\n      const context = new RenderingContext(\n          matchedResult.ast,\n          property,\n          rendererMap,\n          matchedResult,\n      );\n      this.#evaluations.push(Renderer.render(matchedResult.ast.tree, context).nodes);\n    }\n\n    this.#pendingFocus = focus;\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    const viewInput: ViewInput = {\n      substitutions: this.#substitutions,\n      evaluations: this.#evaluations,\n      onToggle: () => this.onResize(),\n    };\n    this.#view(viewInput, {}, this.contentElement);\n    const tabStop = this.contentElement.querySelector('[tabindex]');\n    this.setDefaultFocusedElement(tabStop);\n    if (tabStop && this.#pendingFocus) {\n      this.focus();\n      this.resetPendingFocus();\n    }\n  }\n\n  resetPendingFocus(): void {\n    this.#pendingFocus = false;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n:host(:focus-within) {\n  /* stylelint-disable-next-line declaration-no-important */\n  outline: none !important;\n}\n\n.css-value-trace {\n  --cell-width: 1.5em;\n  --padding: var(--sys-size-3);\n  --padding-left: var(--sys-size-4);\n\n  display: grid;\n  grid-template-columns: var(--cell-width) 1fr;\n  margin: calc(-1 * var(--padding));\n  margin-left: calc(-1 * var(--padding-left));\n\n  & .trace-line-icon {\n    grid-column-start: 1;\n    width: var(--sys-size-9);\n    height: var(--sys-size-9);\n    text-align: center;\n    color: var(--icon-default);\n    padding-top: var(--sys-size-2);\n  }\n\n  :focus {\n    border-radius: var(--sys-size-2);\n    outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n  }\n\n  details {\n    height: min-content;\n    grid-column: 1 / 4;\n\n    summary {\n      display: grid;\n      grid-template-columns: var(--cell-width) var(--cell-width) 1fr;\n\n      &::marker {\n        display: none;\n        content: \"\";\n      }\n    }\n\n    div {\n      devtools-icon, .trace-line-icon {\n        grid-column-start: 2;\n      }\n\n      display: grid;\n      grid-template-columns: var(--cell-width) var(--cell-width) 1fr;\n    }\n\n    .trace-line {\n      grid-column: 3 / 4;\n    }\n\n    .marker {\n      grid-column-start: 2;\n\n      --icon-url: var(--image-file-triangle-right);\n\n      padding-top: var(--sys-size-3);\n    }\n\n    &[open] .marker {\n      --icon-url: var(--image-file-triangle-down);\n    }\n  }\n\n  & .trace-line {\n    place-self: center start;\n    padding: var(--padding);\n    grid-column: 2 / 3;\n    margin: 0;\n    padding-left: var(--padding-left);\n  }\n\n  .full-row {\n    grid-column-start: 1;\n  }\n}\n\n::highlight(css-value-tracing) {\n  background-color: var(--sys-color-tonal-container);\n}\n\n/*# sourceURL=${import.meta.resolve('./cssValueTraceView.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.has-ignorable-error .webkit-css-property {\n  color: inherit;\n}\n\n.inactive-value:not(:hover,:focus,:focus-within) {\n  text-decoration: line-through;\n}\n\n.tree-outline {\n  padding: 0;\n}\n\n.tree-outline li {\n  margin-left: 12px;\n  padding-left: 22px;\n  white-space: normal;\n  text-overflow: ellipsis;\n  cursor: auto;\n  display: block;\n\n  &::before {\n    display: none;\n  }\n\n  .webkit-css-property {\n    margin-left: -22px; /* outdent the first line of longhand properties (in an expanded shorthand) to compensate for the \"padding-left\" shift in .tree-outline li */\n  }\n\n  &.not-parsed-ok {\n    margin-left: 0;\n\n    .exclamation-mark {\n      display: inline-block;\n      position: relative;\n      width: 11px;\n      height: 10px;\n      margin: 0 7px 0 0;\n      top: 1px;\n      left: -36px; /* outdent to compensate for the top-level property indent */\n      user-select: none;\n      cursor: default;\n      z-index: 1;\n      mask: var(--image-file-warning-filled) center / 14px no-repeat;\n      background-color: var(--icon-warning);\n    }\n\n    &.has-ignorable-error .exclamation-mark {\n      background-color: unset;\n    }\n  }\n\n  &.filter-match {\n    background-color: var(--sys-color-tonal-container);\n  }\n\n  &.editing {\n    margin-left: 10px;\n    text-overflow: clip;\n  }\n\n  &.editing-sub-part {\n    padding: 3px 6px 8px 18px;\n    margin: -1px -6px -8px;\n    text-overflow: clip;\n  }\n\n  &.child-editing {\n    overflow-wrap: break-word !important; /* stylelint-disable-line declaration-no-important */\n    white-space: normal !important; /* stylelint-disable-line declaration-no-important */\n    padding-left: 0;\n  }\n\n  .info {\n    padding-top: 4px;\n    padding-bottom: 3px;\n  }\n}\n\n.tree-outline > li {\n  padding-left: 38px;\n  clear: both;\n  min-height: 14px;\n\n  .webkit-css-property {\n    margin-left: -38px; /* outdent the first line of the top-level properties to compensate for the \"padding-left\" shift in .tree-outline > li */\n  }\n\n  &.child-editing {\n    .text-prompt {\n      white-space: pre-wrap;\n    }\n\n    .webkit-css-property {\n      margin-left: 0;\n    }\n  }\n}\n\nol:not(.tree-outline) {\n  display: none;\n  margin: 0;\n  list-style: none;\n}\n\n.tree-outline > ol {\n  padding-inline-start: 16px;\n\n  ol {\n    padding-left: 0;\n  }\n}\n\nol.expanded {\n  display: block;\n}\n\n.enabled-button {\n  visibility: hidden;\n  float: left;\n  font-size: 10px;\n  margin: 0;\n  vertical-align: top;\n  position: relative;\n  z-index: 1;\n  width: 18px;\n  left: -40px; /* original -2px + (-38px) to compensate for the first line outdent */\n  top: 0.5px;\n  height: 13px;\n}\n\ninput.enabled-button.small {\n  &:hover::after,\n  &:active::before {\n    left: 3px;\n  }\n}\n\ndevtools-icon.icon-link {\n  color: var(--text-link);\n  width: 13px;\n  height: 13px;\n\n  &:hover {\n    cursor: pointer;\n  }\n}\n\n.overloaded:not(.has-ignorable-error, .invalid-property-value),\n.inactive:not(.invalid-property-value),\n.disabled,\n.not-parsed-ok:not(.has-ignorable-error, .invalid-property-value),\n.not-parsed-ok.invalid-property-value .value {\n  text-decoration: line-through;\n}\n\n.implicit,\n.inherited,\n.inactive-property {\n  opacity: 50%;\n}\n\n.hint-wrapper {\n  align-items: center;\n  display: inline-block;\n  margin-left: 3px;\n  max-height: 13px;\n  max-width: 13px;\n  vertical-align: middle;\n}\n\n.hint {\n  cursor: pointer;\n  display: block;\n  position: relative;\n  left: -1.5px;\n  top: -1.5px;\n}\n\n.has-ignorable-error {\n  color: var(--sys-color-state-disabled);\n}\n\n:host-context(.no-affect) .tree-outline li {\n  opacity: 50%;\n\n  &.editing {\n    opacity: 100%;\n  }\n}\n\n:host-context(.styles-panel-hovered:not(.read-only)) .webkit-css-property:hover,\n:host-context(.styles-panel-hovered:not(.read-only)) .value:hover {\n  text-decoration: underline;\n  cursor: default;\n}\n\n.styles-name-value-separator {\n  display: inline-block;\n  width: 14px;\n  text-decoration: inherit;\n  white-space: pre;\n}\n\n.styles-clipboard-only {\n  display: inline-block;\n  width: 0;\n  opacity: 0%;\n  pointer-events: none;\n  white-space: pre;\n\n  .tree-outline li.child-editing & {\n    display: none;\n  }\n}\n\n.styles-pane-button {\n  height: 15px;\n  margin: 0 0 0 6px;\n  position: absolute;\n  top: -1px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n}\n/* Matched styles */\n\n:host-context(.matched-styles) .tree-outline li {\n  margin-left: 0 !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.expand-icon {\n  user-select: none;\n  margin-left: -6px;\n  margin-right: 2px;\n  margin-bottom: -4px;\n\n  .tree-outline li:not(.parent) & {\n    display: none;\n  }\n}\n\n:host-context(.matched-styles:not(.read-only):hover) li:not(.child-editing) .enabled-button,\n:host-context(.matched-styles:not(.read-only)) .tree-outline li.disabled:not(.child-editing) .enabled-button {\n  visibility: visible;\n}\n\n:host-context(.matched-styles) {\n  ol.expanded {\n    margin-left: 16px;\n  }\n\n  :focus-visible {\n    border-radius: var(--sys-size-2);\n    outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n  }\n}\n\n.devtools-link-styled-trim {\n  display: inline-block;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 80%;\n  vertical-align: bottom;\n}\n\ndevtools-css-angle,\ndevtools-css-length {\n  display: inline-block;\n}\n\ndevtools-css-length {\n  margin-left: 1px;\n}\n\ndevtools-icon.open-in-animations-panel {\n  position: relative;\n  transform: scale(0.7);\n  margin: -5px -2px -3px -4px;\n  user-select: none;\n  color: var(--icon-css);\n  cursor: default;\n\n  &:hover {\n    color: var(--icon-css-hover);\n  }\n}\n\n.css-function-inline-block {\n  display: inline-block;\n  padding-left: 18px;  /* should match enabled-button width */\n  margin-left: -38px;  /* should match .webkit-css-property margin-left */\n  color: var(--app-color-element-sidebar-subtitle);\n}\n\n.tracing-anchor {\n  text-decoration: underline dotted var(--sys-color-token-meta);\n}\n\n/*# sourceURL=${import.meta.resolve('./stylePropertiesTreeOutline.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../core/sdk/sdk.js';\n\nexport function getCssDeclarationAsJavascriptProperty(declaration: SDK.CSSProperty.CSSProperty): string {\n  const {name, value} = declaration;\n  const declarationNameAsJs =\n      name.startsWith('--') ? `'${name}'` : name.replace(/-([a-z])/gi, (_str, group) => group.toUpperCase());\n  const declarationAsJs = `'${value.replaceAll('\\'', '\\\\\\'')}'`;\n  return `${declarationNameAsJs}: ${declarationAsJs}`;\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Badges from '../../models/badges/badges.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as Tooltips from '../../ui/components/tooltips/tooltips.js';\nimport type * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {FontEditorSectionManager} from './ColorSwatchPopoverIcon.js';\nimport * as ElementsComponents from './components/components.js';\nimport {DeferredDOMNodeLink} from './DOMLinkifier.js';\nimport {ElementsPanel} from './ElementsPanel.js';\nimport stylePropertiesTreeOutlineStyles from './stylePropertiesTreeOutline.css.js';\nimport {type Context, StylePropertyTreeElement} from './StylePropertyTreeElement.js';\nimport {StylesSidebarPane} from './StylesSidebarPane.js';\n\nconst UIStrings = {\n  /**\n   * @description Tooltip text that appears when hovering over the largeicon add button in the Styles Sidebar Pane of the Elements panel\n   */\n  insertStyleRuleBelow: 'Insert style rule below',\n  /**\n   * @description Text in Styles Sidebar Pane of the Elements panel\n   */\n  constructedStylesheet: 'constructed stylesheet',\n  /**\n   * @description Text in Styles Sidebar Pane of the Elements panel\n   */\n  userAgentStylesheet: 'user agent stylesheet',\n  /**\n   * @description Text in Styles Sidebar Pane of the Elements panel\n   */\n  injectedStylesheet: 'injected stylesheet',\n  /**\n   * @description Text in Styles Sidebar Pane of the Elements panel\n   */\n  viaInspector: 'via inspector',\n  /**\n   * @description Text in Styles Sidebar Pane of the Elements panel\n   */\n  styleAttribute: '`style` attribute',\n  /**\n   * @description Text in Styles Sidebar Pane of the Elements panel\n   * @example {html} PH1\n   */\n  sattributesStyle: '{PH1}[Attributes Style]',\n  /**\n   * @description Show all button text content in Styles Sidebar Pane of the Elements panel\n   * @example {3} PH1\n   */\n  showAllPropertiesSMore: 'Show all properties ({PH1} more)',\n  /**\n   * @description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n   */\n  copySelector: 'Copy `selector`',\n  /**\n   * @description A context menu item in Styles panel to copy CSS rule\n   */\n  copyRule: 'Copy rule',\n  /**\n   * @description A context menu item in Styles panel to copy all CSS declarations\n   */\n  copyAllDeclarations: 'Copy all declarations',\n  /**\n   * @description Text that is announced by the screen reader when the user focuses on an input field for editing the name of a CSS selector in the Styles panel\n   */\n  cssSelector: '`CSS` selector',\n  /**\n   * @description Text displayed in tooltip that shows specificity information.\n   * @example {(0,0,1)} PH1\n   */\n  specificity: 'Specificity: {PH1}',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/StylePropertiesSection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst STYLE_TAG = '<style>';\nconst DEFAULT_MAX_PROPERTIES = 50;\n\nexport class StylePropertiesSection {\n  protected parentPane: StylesSidebarPane;\n  styleInternal: SDK.CSSStyleDeclaration.CSSStyleDeclaration;\n  readonly matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles;\n  private computedStyles: Map<string, string>|null;\n  private parentsComputedStyles: Map<string, string>|null;\n  editable: boolean;\n  private hoverTimer: number|null = null;\n  private willCauseCancelEditing = false;\n  private forceShowAll = false;\n  private readonly originalPropertiesCount: number;\n  element: HTMLDivElement;\n  readonly #styleRuleElement: HTMLElement;\n  private readonly titleElement: HTMLElement;\n  propertiesTreeOutline: UI.TreeOutline.TreeOutlineInShadow = new UI.TreeOutline.TreeOutlineInShadow();\n  private showAllButton: Buttons.Button.Button;\n  protected selectorElement: HTMLSpanElement;\n  private readonly newStyleRuleToolbar: UI.Toolbar.Toolbar|undefined;\n  private readonly fontEditorToolbar: UI.Toolbar.Toolbar|undefined;\n  private readonly fontEditorSectionManager: FontEditorSectionManager|undefined;\n  private readonly fontEditorButton: UI.Toolbar.ToolbarButton|undefined;\n  private selectedSinceMouseDown: boolean;\n  private readonly elementToSelectorIndex = new WeakMap<Element, number>();\n  navigable: boolean|null|undefined;\n  protected readonly selectorRefElement: HTMLElement;\n  private hoverableSelectorsMode: boolean;\n  #isHidden: boolean;\n  protected customPopulateCallback: () => void;\n\n  nestingLevel = 0;\n  #ancestorRuleListElement: HTMLElement;\n  #ancestorClosingBracesElement: HTMLElement;\n\n  // Used to identify buttons that trigger a flexbox or grid editor.\n  nextEditorTriggerButtonIdx = 1;\n  private sectionIdx = 0;\n\n  #customHeaderText: string|undefined;\n  readonly #specificityTooltips: HTMLSpanElement;\n  static #nextSpecificityTooltipId = 0;\n  static #nextSectionTooltipIdPrefix = 0;\n  readonly sectionTooltipIdPrefix = StylePropertiesSection.#nextSectionTooltipIdPrefix++;\n\n  constructor(\n      parentPane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      style: SDK.CSSStyleDeclaration.CSSStyleDeclaration, sectionIdx: number, computedStyles: Map<string, string>|null,\n      parentsComputedStyles: Map<string, string>|null, customHeaderText?: string) {\n    this.#customHeaderText = customHeaderText;\n    this.parentPane = parentPane;\n    this.sectionIdx = sectionIdx;\n    this.styleInternal = style;\n    this.matchedStyles = matchedStyles;\n    this.computedStyles = computedStyles;\n    this.parentsComputedStyles = parentsComputedStyles;\n    this.editable = Boolean(style.styleSheetId && style.range);\n    this.originalPropertiesCount = style.leadingProperties().length;\n    this.customPopulateCallback = () => this.populateStyle(this.styleInternal, this.propertiesTreeOutline);\n\n    const rule = style.parentRule;\n    const headerText = this.headerText();\n    this.element = document.createElement('div');\n    this.element.classList.add('styles-section');\n    this.element.classList.add('matched-styles');\n    this.element.classList.add('monospace');\n    this.element.setAttribute('jslog', `${VisualLogging.section('style-properties').track({\n                                keydown: 'ArrowUp|ArrowDown|ArrowLeft|ArrowRight|Enter|Space',\n                              })}`);\n    UI.ARIAUtils.setLabel(this.element, `${headerText}, css selector`);\n    this.element.tabIndex = -1;\n    UI.ARIAUtils.markAsListitem(this.element);\n    this.element.addEventListener('keydown', this.onKeyDown.bind(this), false);\n    parentPane.sectionByElement.set(this.element, this);\n    this.#styleRuleElement = this.element.createChild('div', 'style-rule');\n\n    this.#ancestorRuleListElement = document.createElement('div');\n    this.#ancestorRuleListElement.classList.add('ancestor-rule-list');\n    this.element.prepend(this.#ancestorRuleListElement);\n    this.#ancestorClosingBracesElement = document.createElement('div');\n    this.#ancestorClosingBracesElement.classList.add('ancestor-closing-braces');\n    this.element.append(this.#ancestorClosingBracesElement);\n    this.updateAncestorRuleList();\n\n    this.titleElement =\n        this.#styleRuleElement.createChild('div', 'styles-section-title ' + (rule ? 'styles-selector' : ''));\n\n    this.propertiesTreeOutline.setFocusable(false);\n    this.propertiesTreeOutline.registerRequiredCSS(stylePropertiesTreeOutlineStyles);\n    this.propertiesTreeOutline.element.classList.add('style-properties', 'matched-styles', 'monospace');\n    this.#styleRuleElement.appendChild(this.propertiesTreeOutline.element);\n\n    this.showAllButton = UI.UIUtils.createTextButton('', this.showAllItems.bind(this), {\n      className: 'styles-show-all',\n      jslogContext: 'elements.show-all-style-properties',\n    });\n    this.#styleRuleElement.appendChild(this.showAllButton);\n\n    const indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n    const selectorContainer = document.createElement('div');\n    selectorContainer.createChild('span', 'styles-clipboard-only').textContent = indent.repeat(this.nestingLevel);\n    selectorContainer.classList.add('selector-container');\n    this.selectorElement = document.createElement('span');\n    UI.ARIAUtils.setLabel(this.selectorElement, i18nString(UIStrings.cssSelector));\n    this.selectorElement.classList.add('selector');\n    this.selectorElement.textContent = headerText;\n    selectorContainer.appendChild(this.selectorElement);\n    this.selectorElement.addEventListener('mouseenter', this.onMouseEnterSelector.bind(this), false);\n    this.selectorElement.addEventListener('mouseleave', this.onMouseOutSelector.bind(this), false);\n    this.#specificityTooltips = selectorContainer.createChild('span');\n\n    // We only add braces for style rules with selectors and non-style rules, which create their own sections.\n    if (headerText.length > 0 || !(rule instanceof SDK.CSSRule.CSSStyleRule)) {\n      const openBrace = selectorContainer.createChild('span', 'sidebar-pane-open-brace');\n      openBrace.textContent = headerText.length > 0 ? ' {' : '{';  // We don't add spacing when there is no selector.\n\n      const closeBrace = this.#styleRuleElement.createChild('div', 'sidebar-pane-closing-brace');\n      closeBrace.createChild('span', 'styles-clipboard-only').textContent = indent.repeat(this.nestingLevel);\n      closeBrace.createChild('span').textContent = '}';\n    } else {\n      this.titleElement.classList.add('hidden');\n    }\n\n    if (rule) {\n      const newRuleButton = new UI.Toolbar.ToolbarButton(\n          i18nString(UIStrings.insertStyleRuleBelow), 'plus', undefined, 'elements.new-style-rule');\n      newRuleButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.onNewRuleClick, this);\n      newRuleButton.setSize(Buttons.Button.Size.SMALL);\n      newRuleButton.element.tabIndex = -1;\n      if (!this.newStyleRuleToolbar) {\n        this.newStyleRuleToolbar =\n            this.element.createChild('devtools-toolbar', 'sidebar-pane-section-toolbar new-rule-toolbar');\n      }\n      this.newStyleRuleToolbar.appendToolbarItem(newRuleButton);\n      UI.ARIAUtils.setHidden(this.newStyleRuleToolbar, true);\n    }\n\n    if (Root.Runtime.experiments.isEnabled('font-editor') && this.editable) {\n      this.fontEditorToolbar = this.#styleRuleElement.createChild('devtools-toolbar', 'sidebar-pane-section-toolbar');\n      this.fontEditorSectionManager = new FontEditorSectionManager(this.parentPane.swatchPopoverHelper(), this);\n      this.fontEditorButton =\n          new UI.Toolbar.ToolbarButton('Font Editor', 'custom-typography', undefined, 'font-editor');\n      this.fontEditorButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n        this.onFontEditorButtonClicked();\n      }, this);\n      this.fontEditorButton.element.addEventListener('keydown', event => {\n        if (Platform.KeyboardUtilities.isEnterOrSpaceKey(event)) {\n          event.consume(true);\n          this.onFontEditorButtonClicked();\n        }\n      }, false);\n      this.fontEditorToolbar.appendToolbarItem(this.fontEditorButton);\n\n      if (this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Inline) {\n        if (this.newStyleRuleToolbar) {\n          this.newStyleRuleToolbar.classList.add('shifted-toolbar');\n        }\n      } else {\n        this.fontEditorToolbar.classList.add('font-toolbar-hidden');\n      }\n    }\n\n    this.selectorElement.addEventListener('click', this.handleSelectorClick.bind(this), false);\n    this.selectorElement.setAttribute(\n        'jslog', `${VisualLogging.cssRuleHeader('selector').track({click: true, change: true})}`);\n    this.element.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), false);\n    this.element.addEventListener('mousedown', this.handleEmptySpaceMouseDown.bind(this), false);\n    this.element.addEventListener('click', this.handleEmptySpaceClick.bind(this), false);\n    this.element.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n    this.element.addEventListener('mouseleave', this.onMouseLeave.bind(this), false);\n    this.selectedSinceMouseDown = false;\n\n    if (rule) {\n      // Prevent editing the user agent and user rules.\n      if (rule.isUserAgent() || rule.isInjected()) {\n        this.editable = false;\n        // Check this is a real CSSRule, not a bogus object coming from BlankStylePropertiesSection.\n      } else if (rule.header) {\n        this.navigable = !rule.header.isAnonymousInlineStyleSheet();\n      }\n    }\n\n    this.selectorRefElement = document.createElement('div');\n    this.selectorRefElement.classList.add('styles-section-subtitle');\n    this.element.prepend(this.selectorRefElement);\n    this.updateRuleOrigin();\n    this.titleElement.appendChild(selectorContainer);\n\n    if (this.navigable) {\n      this.element.classList.add('navigable');\n    }\n\n    if (!this.editable) {\n      this.element.classList.add('read-only');\n      this.propertiesTreeOutline.element.classList.add('read-only');\n    }\n    this.hoverableSelectorsMode = false;\n    this.#isHidden = false;\n    this.markSelectorMatches();\n    this.onpopulate();\n  }\n\n  setComputedStyles(computedStyles: Map<string, string>|null): void {\n    this.computedStyles = computedStyles;\n  }\n\n  setParentsComputedStyles(parentsComputedStyles: Map<string, string>|null): void {\n    this.parentsComputedStyles = parentsComputedStyles;\n  }\n\n  updateAuthoringHint(): void {\n    let child = this.propertiesTreeOutline.firstChild();\n    while (child) {\n      if (child instanceof StylePropertyTreeElement) {\n        child.setComputedStyles(this.computedStyles);\n        child.setParentsComputedStyles(this.parentsComputedStyles);\n        child.updateAuthoringHint();\n      }\n      child = child.nextSibling;\n    }\n  }\n\n  setSectionIdx(sectionIdx: number): void {\n    this.sectionIdx = sectionIdx;\n    this.onpopulate();\n  }\n\n  getSectionIdx(): number {\n    return this.sectionIdx;\n  }\n\n  registerFontProperty(treeElement: StylePropertyTreeElement): void {\n    if (this.fontEditorSectionManager) {\n      this.fontEditorSectionManager.registerFontProperty(treeElement);\n    }\n    if (this.fontEditorToolbar) {\n      this.fontEditorToolbar.classList.remove('font-toolbar-hidden');\n      if (this.newStyleRuleToolbar) {\n        this.newStyleRuleToolbar.classList.add('shifted-toolbar');\n      }\n    }\n  }\n\n  resetToolbars(): void {\n    if (this.parentPane.swatchPopoverHelper().isShowing() ||\n        this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Inline) {\n      return;\n    }\n    if (this.fontEditorToolbar) {\n      this.fontEditorToolbar.classList.add('font-toolbar-hidden');\n    }\n    if (this.newStyleRuleToolbar) {\n      this.newStyleRuleToolbar.classList.remove('shifted-toolbar');\n    }\n  }\n\n  static createRuleOriginNode(\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, linkifier: Components.Linkifier.Linkifier,\n      rule: SDK.CSSRule.CSSRule|null): Node {\n    if (!rule) {\n      return document.createTextNode('');\n    }\n\n    const ruleLocation = StylePropertiesSection.getRuleLocationFromCSSRule(rule);\n\n    const header = rule.header;\n\n    function linkifyRuleLocation(): Node|null {\n      if (!rule) {\n        return null;\n      }\n      if (ruleLocation && header &&\n          (!header.isAnonymousInlineStyleSheet() ||\n           matchedStyles.cssModel().sourceMapManager().sourceMapForClient(header))) {\n        return StylePropertiesSection.linkifyRuleLocation(\n            matchedStyles.cssModel(), linkifier, rule.header, ruleLocation);\n      }\n      return null;\n    }\n\n    function linkifyNode(label: string): Node|null {\n      if (header?.ownerNode) {\n        const link = document.createElement('devtools-widget') as UI.Widget.WidgetElement<DeferredDOMNodeLink>;\n        link.widgetConfig = UI.Widget.widgetConfig(e => new DeferredDOMNodeLink(e, header.ownerNode));\n        link.textContent = label;\n        return link;\n      }\n      return null;\n    }\n\n    if (header?.isMutable && !header.isViaInspector()) {\n      const location = header.isConstructedByNew() && !header.sourceMapURL ? null : linkifyRuleLocation();\n      if (location) {\n        return location;\n      }\n      const label = header.isConstructedByNew() ? i18nString(UIStrings.constructedStylesheet) : STYLE_TAG;\n      const node = linkifyNode(label);\n      if (node) {\n        return node;\n      }\n      return document.createTextNode(label);\n    }\n\n    const location = linkifyRuleLocation();\n    if (location) {\n      return location;\n    }\n\n    if (rule.isUserAgent()) {\n      return document.createTextNode(i18nString(UIStrings.userAgentStylesheet));\n    }\n    if (rule.isInjected()) {\n      return document.createTextNode(i18nString(UIStrings.injectedStylesheet));\n    }\n    if (rule.isViaInspector()) {\n      return document.createTextNode(i18nString(UIStrings.viaInspector));\n    }\n\n    const node = linkifyNode(STYLE_TAG);\n    if (node) {\n      return node;\n    }\n\n    return document.createTextNode('');\n  }\n\n  protected createRuleOriginNode(\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, linkifier: Components.Linkifier.Linkifier,\n      rule: SDK.CSSRule.CSSRule|null): Node {\n    return StylePropertiesSection.createRuleOriginNode(matchedStyles, linkifier, rule);\n  }\n\n  private static getRuleLocationFromCSSRule(rule: SDK.CSSRule.CSSRule): TextUtils.TextRange.TextRange|null|undefined {\n    let ruleLocation;\n    if (rule instanceof SDK.CSSRule.CSSStyleRule) {\n      ruleLocation = rule.style.range;\n    } else if (rule instanceof SDK.CSSRule.CSSKeyframeRule) {\n      ruleLocation = rule.key().range;\n    }\n    return ruleLocation;\n  }\n\n  static tryNavigateToRuleLocation(\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, rule: SDK.CSSRule.CSSRule|null): void {\n    if (!rule) {\n      return;\n    }\n\n    const ruleLocation = this.getRuleLocationFromCSSRule(rule);\n    const header = rule.header;\n\n    if (ruleLocation && header && !header.isAnonymousInlineStyleSheet()) {\n      const matchingSelectorLocation = this.getCSSSelectorLocation(matchedStyles.cssModel(), rule.header, ruleLocation);\n      this.revealSelectorSource(matchingSelectorLocation, true);\n    }\n  }\n\n  protected static linkifyRuleLocation(\n      cssModel: SDK.CSSModel.CSSModel, linkifier: Components.Linkifier.Linkifier,\n      styleSheetHeader: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader,\n      ruleLocation: TextUtils.TextRange.TextRange): Node {\n    const matchingSelectorLocation = this.getCSSSelectorLocation(cssModel, styleSheetHeader, ruleLocation);\n    return linkifier.linkifyCSSLocation(matchingSelectorLocation);\n  }\n\n  private static getCSSSelectorLocation(\n      cssModel: SDK.CSSModel.CSSModel, styleSheetHeader: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader,\n      ruleLocation: TextUtils.TextRange.TextRange): SDK.CSSModel.CSSLocation {\n    const lineNumber = styleSheetHeader.lineNumberInSource(ruleLocation.startLine);\n    const columnNumber = styleSheetHeader.columnNumberInSource(ruleLocation.startLine, ruleLocation.startColumn);\n    return new SDK.CSSModel.CSSLocation(styleSheetHeader, lineNumber, columnNumber);\n  }\n\n  private getFocused(): HTMLElement|null {\n    return (this.propertiesTreeOutline.shadowRoot.activeElement as HTMLElement) || null;\n  }\n\n  private focusNext(element: HTMLElement): void {\n    // Clear remembered focused item (if any).\n    const focused = this.getFocused();\n    if (focused) {\n      focused.tabIndex = -1;\n    }\n\n    // Focus the next item and remember it (if in our subtree).\n    element.focus();\n    if (this.propertiesTreeOutline.shadowRoot.contains(element)) {\n      element.tabIndex = 0;\n    }\n  }\n\n  private ruleNavigation(keyboardEvent: KeyboardEvent): void {\n    if (keyboardEvent.altKey || keyboardEvent.ctrlKey || keyboardEvent.metaKey || keyboardEvent.shiftKey) {\n      return;\n    }\n\n    const focused = this.getFocused();\n\n    let focusNext: HTMLElement|null = null;\n    const focusable =\n        Array.from((this.propertiesTreeOutline.shadowRoot.querySelectorAll('[tabindex]') as NodeListOf<HTMLElement>))\n            .filter(e => e.checkVisibility());\n\n    if (focusable.length === 0) {\n      return;\n    }\n\n    const focusedIndex = focused ? focusable.indexOf(focused) : -1;\n\n    if (keyboardEvent.key === 'ArrowLeft') {\n      focusNext = focusable[focusedIndex - 1] || this.element;\n    } else if (keyboardEvent.key === 'ArrowRight') {\n      focusNext = focusable[focusedIndex + 1] || this.element;\n    } else if (keyboardEvent.key === 'ArrowUp' || keyboardEvent.key === 'ArrowDown') {\n      this.focusNext(this.element);\n      return;\n    }\n\n    if (focusNext) {\n      this.focusNext(focusNext);\n      keyboardEvent.consume(true);\n    }\n  }\n\n  private onKeyDown(event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    if (UI.UIUtils.isEditing() || !this.editable || keyboardEvent.altKey || keyboardEvent.ctrlKey ||\n        keyboardEvent.metaKey) {\n      return;\n    }\n    switch (keyboardEvent.key) {\n      case 'Enter':\n      case ' ':\n        this.startEditingAtFirstPosition();\n        keyboardEvent.consume(true);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'ArrowUp':\n      case 'ArrowDown':\n        this.ruleNavigation(keyboardEvent);\n        break;\n      default:\n        // Filter out non-printable key strokes.\n        if (keyboardEvent.key.length === 1) {\n          this.addNewBlankProperty(0).startEditingName();\n        }\n        break;\n    }\n  }\n\n  private setSectionHovered(isHovered: boolean): void {\n    this.element.classList.toggle('styles-panel-hovered', isHovered);\n    this.propertiesTreeOutline.element.classList.toggle('styles-panel-hovered', isHovered);\n    if (this.hoverableSelectorsMode !== isHovered) {\n      this.hoverableSelectorsMode = isHovered;\n      this.markSelectorMatches();\n    }\n  }\n\n  private onMouseLeave(_event: Event): void {\n    this.setSectionHovered(false);\n    this.parentPane.setActiveProperty(null);\n  }\n\n  private onMouseMove(event: MouseEvent): void {\n    const hasCtrlOrMeta = UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(event);\n    this.setSectionHovered(hasCtrlOrMeta);\n\n    const treeElement = this.propertiesTreeOutline.treeElementFromEvent(event);\n    if (treeElement instanceof StylePropertyTreeElement) {\n      this.parentPane.setActiveProperty((treeElement));\n    } else {\n      this.parentPane.setActiveProperty(null);\n    }\n    const selection = this.element.getComponentSelection();\n    if (!this.selectedSinceMouseDown && selection?.toString()) {\n      this.selectedSinceMouseDown = true;\n    }\n  }\n\n  private onFontEditorButtonClicked(): void {\n    if (this.fontEditorSectionManager && this.fontEditorButton) {\n      void this.fontEditorSectionManager.showPopover(this.fontEditorButton.element, this.parentPane);\n    }\n  }\n\n  style(): SDK.CSSStyleDeclaration.CSSStyleDeclaration {\n    return this.styleInternal;\n  }\n\n  headerText(): string {\n    if (this.#customHeaderText) {\n      return this.#customHeaderText;\n    }\n    const node = this.matchedStyles.nodeForStyle(this.styleInternal);\n    if (this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Inline) {\n      return this.matchedStyles.isInherited(this.styleInternal) ? i18nString(UIStrings.styleAttribute) :\n                                                                  'element.style';\n    }\n    if (this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Transition) {\n      return 'transitions style';\n    }\n\n    if (this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Animation) {\n      return this.styleInternal.animationName() ? `${this.styleInternal.animationName()} animation` : 'animation style';\n    }\n    if (node && this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Attributes) {\n      return i18nString(UIStrings.sattributesStyle, {PH1: node.nodeNameInCorrectCase()});\n    }\n    if (this.styleInternal.parentRule instanceof SDK.CSSRule.CSSStyleRule) {\n      return this.styleInternal.parentRule.selectorText();\n    }\n    return '';\n  }\n\n  private onMouseOutSelector(): void {\n    if (this.hoverTimer) {\n      clearTimeout(this.hoverTimer);\n    }\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n  }\n\n  private onMouseEnterSelector(): void {\n    if (this.hoverTimer) {\n      clearTimeout(this.hoverTimer);\n    }\n    this.hoverTimer = window.setTimeout(this.highlight.bind(this), 300);\n  }\n\n  highlight(mode: string|undefined = 'all'): void {\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    const node = this.parentPane.node();\n    if (!node) {\n      return;\n    }\n    const selectorList =\n        this.styleInternal.parentRule && this.styleInternal.parentRule instanceof SDK.CSSRule.CSSStyleRule ?\n        this.styleInternal.parentRule.selectorText() :\n        undefined;\n    node.domModel().overlayModel().highlightInOverlay({node, selectorList}, mode);\n  }\n\n  firstSibling(): StylePropertiesSection|null {\n    const parent = this.element.parentElement;\n    if (!parent) {\n      return null;\n    }\n\n    let childElement: (ChildNode|null) = parent.firstChild;\n    while (childElement) {\n      const childSection = this.parentPane.sectionByElement.get(childElement);\n      if (childSection) {\n        return childSection;\n      }\n      childElement = childElement.nextSibling;\n    }\n\n    return null;\n  }\n\n  findCurrentOrNextVisible(willIterateForward: boolean, originalSection?: StylePropertiesSection):\n      StylePropertiesSection|null {\n    if (!this.isHidden()) {\n      return this;\n    }\n    if (this === originalSection) {\n      return null;\n    }\n    if (!originalSection) {\n      originalSection = this;\n    }\n    let visibleSibling: (StylePropertiesSection|null)|null = null;\n    const nextSibling = willIterateForward ? this.nextSibling() : this.previousSibling();\n    if (nextSibling) {\n      visibleSibling = nextSibling.findCurrentOrNextVisible(willIterateForward, originalSection);\n    } else {\n      const loopSibling = willIterateForward ? this.firstSibling() : this.lastSibling();\n      if (loopSibling) {\n        visibleSibling = loopSibling.findCurrentOrNextVisible(willIterateForward, originalSection);\n      }\n    }\n\n    return visibleSibling;\n  }\n\n  lastSibling(): StylePropertiesSection|null {\n    const parent = this.element.parentElement;\n    if (!parent) {\n      return null;\n    }\n\n    let childElement: (ChildNode|null) = parent.lastChild;\n    while (childElement) {\n      const childSection = this.parentPane.sectionByElement.get(childElement);\n      if (childSection) {\n        return childSection;\n      }\n      childElement = childElement.previousSibling;\n    }\n\n    return null;\n  }\n\n  nextSibling(): StylePropertiesSection|undefined {\n    let curElement: (ChildNode|null)|HTMLDivElement = this.element;\n    do {\n      curElement = curElement.nextSibling;\n    } while (curElement && !this.parentPane.sectionByElement.has(curElement));\n\n    if (curElement) {\n      return this.parentPane.sectionByElement.get(curElement);\n    }\n    return;\n  }\n\n  previousSibling(): StylePropertiesSection|undefined {\n    let curElement: (ChildNode|null)|HTMLDivElement = this.element;\n    do {\n      curElement = curElement.previousSibling;\n    } while (curElement && !this.parentPane.sectionByElement.has(curElement));\n\n    if (curElement) {\n      return this.parentPane.sectionByElement.get(curElement);\n    }\n    return;\n  }\n\n  private onNewRuleClick(event: Common.EventTarget.EventTargetEvent<Event>): void {\n    event.data.consume();\n    const rule = this.styleInternal.parentRule;\n    if (!rule?.style.range || !rule.header) {\n      return;\n    }\n    const range =\n        TextUtils.TextRange.TextRange.createFromLocation(rule.style.range.endLine, rule.style.range.endColumn + 1);\n    this.parentPane.addBlankSection(this, rule.header, range);\n  }\n\n  styleSheetEdited(edit: SDK.CSSModel.Edit): void {\n    const rule = this.styleInternal.parentRule;\n    if (rule) {\n      rule.rebase(edit);\n    } else {\n      this.styleInternal.rebase(edit);\n    }\n\n    this.updateAncestorRuleList();\n    this.updateRuleOrigin();\n  }\n\n  protected createAncestorRules(rule: SDK.CSSRule.CSSStyleRule): void {\n    let mediaIndex = 0;\n    let containerIndex = 0;\n    let scopeIndex = 0;\n    let supportsIndex = 0;\n    let nestingIndex = 0;\n    this.nestingLevel = 0;\n    for (const ruleType of rule.ruleTypes) {\n      let ancestorRuleElement;\n      switch (ruleType) {\n        case Protocol.CSS.CSSRuleType.MediaRule:\n          ancestorRuleElement = this.createMediaElement(rule.media[mediaIndex++]);\n          break;\n        case Protocol.CSS.CSSRuleType.ContainerRule:\n          ancestorRuleElement = this.createContainerQueryElement(rule.containerQueries[containerIndex++]);\n          break;\n        case Protocol.CSS.CSSRuleType.ScopeRule:\n          ancestorRuleElement = this.createScopeElement(rule.scopes[scopeIndex++]);\n          break;\n        case Protocol.CSS.CSSRuleType.SupportsRule:\n          ancestorRuleElement = this.createSupportsElement(rule.supports[supportsIndex++]);\n          break;\n        case Protocol.CSS.CSSRuleType.StyleRule:\n          ancestorRuleElement = this.createNestingElement(rule.nestingSelectors?.[nestingIndex++]);\n          break;\n      }\n      if (ancestorRuleElement) {\n        this.#ancestorRuleListElement.prepend(ancestorRuleElement);\n        this.#ancestorClosingBracesElement.prepend(this.indentElement(this.createClosingBrace(), this.nestingLevel));\n        this.nestingLevel++;\n      }\n    }\n\n    if (this.headerText().length === 0) {\n      // We reduce one level since no selector means one less pair of braces are added for declarations.\n      this.nestingLevel--;\n    }\n\n    let curNestingLevel = 0;\n    for (const element of this.#ancestorRuleListElement.children) {\n      this.indentElement(element as HTMLElement, curNestingLevel);\n      curNestingLevel++;\n    }\n  }\n\n  protected createClosingBrace(): HTMLElement {\n    const closingBrace = document.createElement('div');\n    closingBrace.append('}');\n    return closingBrace;\n  }\n\n  protected indentElement(element: HTMLElement, nestingLevel: number, clipboardOnly?: boolean): HTMLElement {\n    const indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n    const indentElement = document.createElement('span');\n    indentElement.classList.add('styles-clipboard-only');\n    indentElement.setAttribute('slot', 'indent');\n    indentElement.textContent = indent.repeat(nestingLevel);\n    element.prepend(indentElement);\n    if (!clipboardOnly) {\n      element.style.paddingLeft = `${nestingLevel}ch`;\n    }\n    return element;\n  }\n\n  protected createMediaElement(media: SDK.CSSMedia.CSSMedia): ElementsComponents.CSSQuery.CSSQuery|undefined {\n    // Don't display trivial non-print media types.\n    const isMedia = !media.text || !media.text.includes('(') && media.text !== 'print';\n    if (isMedia) {\n      return;\n    }\n\n    let queryPrefix = '';\n    let queryText = '';\n    let onQueryTextClick;\n    switch (media.source) {\n      case SDK.CSSMedia.Source.LINKED_SHEET:\n      case SDK.CSSMedia.Source.INLINE_SHEET: {\n        queryText = `media=\"${media.text}\"`;\n        break;\n      }\n      case SDK.CSSMedia.Source.MEDIA_RULE: {\n        queryPrefix = '@media';\n        queryText = media.text;\n        if (media.styleSheetId) {\n          onQueryTextClick = this.handleQueryRuleClick.bind(this, media);\n        }\n        break;\n      }\n      case SDK.CSSMedia.Source.IMPORT_RULE: {\n        queryText = `@import ${media.text}`;\n        break;\n      }\n    }\n\n    const mediaQueryElement = new ElementsComponents.CSSQuery.CSSQuery();\n    mediaQueryElement.data = {\n      queryPrefix,\n      queryText,\n      onQueryTextClick,\n      jslogContext: 'media-query',\n    };\n    return mediaQueryElement;\n  }\n\n  protected createContainerQueryElement(containerQuery: SDK.CSSContainerQuery.CSSContainerQuery):\n      ElementsComponents.CSSQuery.CSSQuery|undefined {\n    if (!containerQuery.text) {\n      return;\n    }\n\n    let onQueryTextClick;\n    if (containerQuery.styleSheetId) {\n      onQueryTextClick = this.handleQueryRuleClick.bind(this, containerQuery);\n    }\n\n    const containerQueryElement = new ElementsComponents.CSSQuery.CSSQuery();\n    containerQueryElement.data = {\n      queryPrefix: '@container',\n      queryName: containerQuery.name,\n      queryText: containerQuery.text,\n      onQueryTextClick,\n      jslogContext: 'container-query',\n    };\n    if (!/^style\\(.*\\)/.test(containerQuery.text)) {\n      // We only add container element for non-style queries.\n      void this.addContainerForContainerQuery(containerQuery);\n    }\n    return containerQueryElement;\n  }\n\n  protected createScopeElement(scope: SDK.CSSScope.CSSScope): ElementsComponents.CSSQuery.CSSQuery|undefined {\n    let onQueryTextClick;\n    if (scope.styleSheetId) {\n      onQueryTextClick = this.handleQueryRuleClick.bind(this, scope);\n    }\n\n    const scopeElement = new ElementsComponents.CSSQuery.CSSQuery();\n    scopeElement.data = {\n      queryPrefix: '@scope',\n      queryText: scope.text,\n      onQueryTextClick,\n      jslogContext: 'scope',\n    };\n    return scopeElement;\n  }\n\n  protected createSupportsElement(supports: SDK.CSSSupports.CSSSupports): ElementsComponents.CSSQuery.CSSQuery\n      |undefined {\n    if (!supports.text) {\n      return;\n    }\n\n    let onQueryTextClick;\n    if (supports.styleSheetId) {\n      onQueryTextClick = this.handleQueryRuleClick.bind(this, supports);\n    }\n\n    const supportsElement = new ElementsComponents.CSSQuery.CSSQuery();\n    supportsElement.data = {\n      queryPrefix: '@supports',\n      queryText: supports.text,\n      onQueryTextClick,\n      jslogContext: 'supports',\n    };\n    return supportsElement;\n  }\n\n  protected createNestingElement(nestingSelector?: string): HTMLElement|undefined {\n    if (!nestingSelector) {\n      return;\n    }\n    const nestingElement = document.createElement('div');\n    nestingElement.textContent = `${nestingSelector} {`;\n    return nestingElement;\n  }\n\n  private async addContainerForContainerQuery(containerQuery: SDK.CSSContainerQuery.CSSContainerQuery): Promise<void> {\n    const container = await containerQuery.getContainerForNode(this.matchedStyles.node().id);\n    if (!container) {\n      return;\n    }\n\n    const containerElement = new ElementsComponents.QueryContainer.QueryContainer();\n    containerElement.data = {\n      container: ElementsComponents.Helper.legacyNodeToElementsComponentsNode(container.containerNode),\n      queryName: containerQuery.name,\n      onContainerLinkClick: event => {\n        event.preventDefault();\n        void ElementsPanel.instance().revealAndSelectNode(\n            container.containerNode, {showPanel: true, focusNode: true, highlightInOverlay: false});\n        void container.containerNode.scrollIntoView();\n      },\n    };\n\n    containerElement.addEventListener('queriedsizerequested', async () => {\n      const details = await container.getContainerSizeDetails();\n      if (details) {\n        containerElement.updateContainerQueriedSizeDetails(details);\n      }\n    });\n\n    this.#ancestorRuleListElement.prepend(containerElement);\n  }\n\n  private updateAncestorRuleList(): void {\n    this.#ancestorRuleListElement.removeChildren();\n    this.#ancestorClosingBracesElement.removeChildren();\n    if (this.styleInternal.parentRule && this.styleInternal.parentRule instanceof SDK.CSSRule.CSSStyleRule) {\n      this.createAncestorRules(this.styleInternal.parentRule);\n    }\n    this.#styleRuleElement.style.paddingLeft = `${this.nestingLevel}ch`;\n  }\n\n  isPropertyInherited(propertyName: string): boolean {\n    if (this.matchedStyles.isInherited(this.styleInternal)) {\n      // While rendering inherited stylesheet, reverse meaning of this property.\n      // Render truly inherited properties with black, i.e. return them as non-inherited.\n      return !SDK.CSSMetadata.cssMetadata().isPropertyInherited(propertyName);\n    }\n    return false;\n  }\n\n  nextEditableSibling(): StylePropertiesSection|null {\n    let curSection: (StylePropertiesSection|undefined)|(StylePropertiesSection | null)|this = this;\n    do {\n      curSection = curSection.nextSibling();\n    } while (curSection && !curSection.editable);\n\n    if (!curSection) {\n      curSection = this.firstSibling();\n      while (curSection && !curSection.editable) {\n        curSection = curSection.nextSibling();\n      }\n    }\n\n    return (curSection?.editable) ? curSection : null;\n  }\n\n  previousEditableSibling(): StylePropertiesSection|null {\n    let curSection: (StylePropertiesSection|undefined)|(StylePropertiesSection | null)|this = this;\n    do {\n      curSection = curSection.previousSibling();\n    } while (curSection && !curSection.editable);\n\n    if (!curSection) {\n      curSection = this.lastSibling();\n      while (curSection && !curSection.editable) {\n        curSection = curSection.previousSibling();\n      }\n    }\n\n    return (curSection?.editable) ? curSection : null;\n  }\n\n  refreshUpdate(editedTreeElement: StylePropertyTreeElement): void {\n    this.parentPane.refreshUpdate(this, editedTreeElement);\n  }\n\n  updateVarFunctions(editedTreeElement: StylePropertyTreeElement): void {\n    if (!editedTreeElement.property.name.startsWith('--')) {\n      return;\n    }\n    let child = this.propertiesTreeOutline.firstChild();\n    while (child) {\n      if (child !== editedTreeElement && child instanceof StylePropertyTreeElement) {\n        child.refreshIfComputedValueChanged();\n      }\n      child = child.traverseNextTreeElement(false /* skipUnrevealed */, null /* stayWithin */, true /* dontPopulate */);\n    }\n  }\n\n  update(full: boolean): void {\n    const headerText = this.headerText();\n    this.selectorElement.textContent = headerText;\n    this.titleElement.classList.toggle('hidden', headerText.length === 0);\n    this.markSelectorMatches();\n    if (full) {\n      this.onpopulate();\n    } else {\n      let child = this.propertiesTreeOutline.firstChild();\n      while (child && child instanceof StylePropertyTreeElement) {\n        child.setOverloaded(this.isPropertyOverloaded(child.property));\n        child =\n            child.traverseNextTreeElement(false /* skipUnrevealed */, null /* stayWithin */, true /* dontPopulate */);\n      }\n    }\n  }\n\n  showAllItems(event?: Event): void {\n    if (event) {\n      event.consume();\n    }\n    if (this.forceShowAll) {\n      return;\n    }\n    this.forceShowAll = true;\n    this.onpopulate();\n  }\n\n  onpopulate(): void {\n    this.parentPane.setActiveProperty(null);\n    this.nextEditorTriggerButtonIdx = 1;\n    this.propertiesTreeOutline.removeChildren();\n    this.customPopulateCallback();\n  }\n\n  populateStyle(style: SDK.CSSStyleDeclaration.CSSStyleDeclaration, parent: TreeElementParent): void {\n    let count = 0;\n    const properties = style.leadingProperties();\n    const maxProperties = DEFAULT_MAX_PROPERTIES + properties.length - this.originalPropertiesCount;\n\n    for (const property of properties) {\n      if (!this.forceShowAll && count >= maxProperties) {\n        break;\n      }\n      count++;\n      const isShorthand = property.getLonghandProperties().length > 0;\n      const inherited = this.isPropertyInherited(property.name);\n      const overloaded = this.isPropertyOverloaded(property);\n      if (style.parentRule && style.parentRule.isUserAgent() && inherited) {\n        continue;\n      }\n      const item = new StylePropertyTreeElement({\n        stylesPane: this.parentPane,\n        section: this,\n        matchedStyles: this.matchedStyles,\n        property,\n        isShorthand,\n        inherited,\n        overloaded,\n        newProperty: false,\n      });\n      item.setComputedStyles(this.computedStyles);\n      item.setParentsComputedStyles(this.parentsComputedStyles);\n      parent.appendChild(item);\n    }\n\n    if (count < properties.length) {\n      this.showAllButton.classList.remove('hidden');\n      this.showAllButton.textContent = i18nString(UIStrings.showAllPropertiesSMore, {PH1: properties.length - count});\n    } else {\n      this.showAllButton.classList.add('hidden');\n    }\n  }\n\n  isPropertyOverloaded(property: SDK.CSSProperty.CSSProperty): boolean {\n    return this.matchedStyles.propertyState(property) === SDK.CSSMatchedStyles.PropertyState.OVERLOADED;\n  }\n\n  updateFilter(): boolean {\n    let hasMatchingChild = false;\n    this.showAllItems();\n    for (const child of this.propertiesTreeOutline.rootElement().children()) {\n      if (child instanceof StylePropertyTreeElement) {\n        const childHasMatches = child.updateFilter();\n        hasMatchingChild = hasMatchingChild || childHasMatches;\n      }\n    }\n\n    const regex = this.parentPane.filterRegex();\n    const hideRule = !hasMatchingChild && regex !== null && !regex.test(this.element.deepTextContent());\n    this.#isHidden = hideRule;\n    this.element.classList.toggle('hidden', hideRule);\n    if (!hideRule && this.styleInternal.parentRule) {\n      this.markSelectorHighlights();\n    }\n    return !hideRule;\n  }\n\n  isHidden(): boolean {\n    return this.#isHidden;\n  }\n\n  markSelectorMatches(): void {\n    const rule = this.styleInternal.parentRule;\n    if (!rule || !(rule instanceof SDK.CSSRule.CSSStyleRule)) {\n      return;\n    }\n\n    const matchingSelectorIndexes = this.matchedStyles.getMatchingSelectors(rule);\n    const matchingSelectors = (new Array(rule.selectors.length).fill(false) as boolean[]);\n    for (const matchingIndex of matchingSelectorIndexes) {\n      matchingSelectors[matchingIndex] = true;\n    }\n\n    if (this.parentPane.isEditingStyle) {\n      return;\n    }\n\n    this.renderSelectors(rule.selectors, matchingSelectors, this.elementToSelectorIndex);\n    this.markSelectorHighlights();\n  }\n\n  static getNextSpecificityTooltipId(): string {\n    return `specificity-tooltip-${this.#nextSpecificityTooltipId++}`;\n  }\n\n  renderSelectors(\n      selectors: Array<{text: string, specificity?: Protocol.CSS.Specificity}>, matchingSelectors: boolean[],\n      elementToSelectorIndex: WeakMap<Element, number>): void {\n    this.selectorElement.removeChildren();\n    this.#specificityTooltips.removeChildren();\n    for (const [i, selector] of selectors.entries()) {\n      if (i > 0) {\n        this.selectorElement.append(', ');\n      }\n      const specificityTooltipId = selector.specificity ? StylePropertiesSection.getNextSpecificityTooltipId() : null;\n      const span = this.selectorElement.createChild('span', 'simple-selector');\n      span.classList.toggle('selector-matches', matchingSelectors[i]);\n      elementToSelectorIndex.set(span, i);\n      span.textContent = selectors[i].text;\n      if (specificityTooltipId && selector.specificity) {\n        span.setAttribute('aria-describedby', specificityTooltipId);\n        const PH1 = `(${selector.specificity.a},${selector.specificity.b},${selector.specificity.c})`;\n        const tooltip = this.#specificityTooltips.appendChild(new Tooltips.Tooltip.Tooltip({\n          id: specificityTooltipId,\n          anchor: span,\n          jslogContext: 'elements.css-selector-specificity',\n        }));\n        tooltip.textContent = i18nString(UIStrings.specificity, {PH1});\n      }\n    }\n  }\n\n  markSelectorHighlights(): void {\n    const selectors = this.selectorElement.getElementsByClassName('simple-selector');\n    const regex = this.parentPane.filterRegex();\n    for (let i = 0; i < selectors.length; ++i) {\n      const selectorMatchesFilter = regex?.test(selectors[i].textContent || '');\n      selectors[i].classList.toggle('filter-match', selectorMatchesFilter);\n    }\n  }\n\n  addNewBlankProperty(index: number|undefined = this.propertiesTreeOutline.rootElement().childCount()):\n      StylePropertyTreeElement {\n    const property = this.styleInternal.newBlankProperty(index);\n    const item = new StylePropertyTreeElement({\n      stylesPane: this.parentPane,\n      section: this,\n      matchedStyles: this.matchedStyles,\n      property,\n      isShorthand: false,\n      inherited: false,\n      overloaded: false,\n      newProperty: true,\n    });\n    this.propertiesTreeOutline.insertChild(item, property.index);\n    return item;\n  }\n\n  private handleEmptySpaceMouseDown(): void {\n    this.willCauseCancelEditing = this.parentPane.isEditingStyle;\n    this.selectedSinceMouseDown = false;\n  }\n\n  private handleEmptySpaceClick(event: Event): void {\n    // `this.willCauseCancelEditing` is a hacky way to understand whether we should\n    // create a new property or not on empty space click.\n    // For empty space clicks, the order of events are:\n    // when there isn't an edit operation going on:\n    //     * empty space mousedown -> empty space click\n    // when there is an edit operation going on:\n    //     * empty space mousedown -> text prompt blur -> empty space click\n    // text prompt blur sets the `isEditingStyle` to be `false` in parent pane.\n    // If we check `isEditingStyle` inside empty space click handler, it will\n    // always say `false` and will always cause a new blank property to be added.\n    // Because of this, we're checking and saving whether there is an ongoing\n    // edit operation inside empty space mousedown handler.\n    if (!this.editable || this.element.hasSelection() || this.willCauseCancelEditing || this.selectedSinceMouseDown) {\n      return;\n    }\n\n    const target = (event.target as Element);\n\n    if (target.classList.contains('header') || this.element.classList.contains('read-only') ||\n        target.enclosingNodeOrSelfWithClass('ancestor-rule-list')) {\n      event.consume();\n      return;\n    }\n    const deepTarget = UI.UIUtils.deepElementFromEvent(event);\n    const treeElement = deepTarget && UI.TreeOutline.TreeElement.getTreeElementBylistItemNode(deepTarget);\n    if (treeElement && treeElement instanceof StylePropertyTreeElement) {\n      this.addNewBlankProperty(treeElement.property.index + 1).startEditingName();\n    } else if (\n        target.classList.contains('selector-container') || target.classList.contains('styles-section-subtitle')) {\n      this.addNewBlankProperty(0).startEditingName();\n    } else {\n      this.addNewBlankProperty().startEditingName();\n    }\n    event.consume(true);\n  }\n\n  private handleQueryRuleClick(query: SDK.CSSQuery.CSSQuery, event: Event): void {\n    const element = event.currentTarget as Element;\n    if (UI.UIUtils.isBeingEdited(element)) {\n      return;\n    }\n\n    if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(event as MouseEvent) && this.navigable) {\n      const location = query.rawLocation();\n      if (!location) {\n        event.consume(true);\n        return;\n      }\n      const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().rawLocationToUILocation(location);\n      if (uiLocation) {\n        void Common.Revealer.reveal(uiLocation);\n      }\n      event.consume(true);\n      return;\n    }\n\n    if (!this.editable) {\n      return;\n    }\n\n    const config = new UI.InplaceEditor.Config(\n        this.editingMediaCommitted.bind(this, query), this.editingMediaCancelled.bind(this, element), undefined,\n        this.editingMediaBlurHandler.bind(this));\n    UI.InplaceEditor.InplaceEditor.startEditing(element, config);\n\n    const selection = element.getComponentSelection();\n    if (selection) {\n      selection.selectAllChildren(element);\n    }\n    this.parentPane.setEditingStyle(true);\n    const parentMediaElement = element.enclosingNodeOrSelfWithClass('query');\n    parentMediaElement.classList.add('editing-query');\n\n    event.consume(true);\n  }\n\n  private editingMediaFinished(element: Element): void {\n    this.parentPane.setEditingStyle(false);\n    const parentMediaElement = element.enclosingNodeOrSelfWithClass('query');\n    parentMediaElement.classList.remove('editing-query');\n  }\n\n  private editingMediaCancelled(element: Element): void {\n    this.editingMediaFinished(element);\n    // Mark the selectors in group if necessary.\n    // This is overridden by BlankStylePropertiesSection.\n    this.markSelectorMatches();\n    const selection = element.getComponentSelection();\n    if (selection) {\n      selection.collapse(element, 0);\n    }\n  }\n\n  private editingMediaBlurHandler(): boolean {\n    return true;\n  }\n\n  private async editingMediaCommitted(\n      query: SDK.CSSQuery.CSSQuery,\n      element: Element,\n      newContent: string,\n      _oldContent: string|null,\n      _context: Context|undefined,\n      _moveDirection: string,\n      ): Promise<void> {\n    this.parentPane.setEditingStyle(false);\n    this.editingMediaFinished(element);\n\n    if (newContent) {\n      newContent = newContent.trim();\n    }\n\n    // This gets deleted in finishOperation(), which is called both on success and failure.\n    this.parentPane.setUserOperation(true);\n    const cssModel = this.parentPane.cssModel();\n    if (cssModel && query.styleSheetId) {\n      const range = query.range as TextUtils.TextRange.TextRange;\n      let success = false;\n      if (query instanceof SDK.CSSContainerQuery.CSSContainerQuery) {\n        success = await cssModel.setContainerQueryText(query.styleSheetId, range, newContent);\n      } else if (query instanceof SDK.CSSSupports.CSSSupports) {\n        success = await cssModel.setSupportsText(query.styleSheetId, range, newContent);\n      } else if (query instanceof SDK.CSSScope.CSSScope) {\n        success = await cssModel.setScopeText(query.styleSheetId, range, newContent);\n      } else {\n        success = await cssModel.setMediaText(query.styleSheetId, range, newContent);\n      }\n\n      if (success) {\n        this.matchedStyles.resetActiveProperties();\n        this.parentPane.refreshUpdate(this);\n      }\n      this.parentPane.setUserOperation(false);\n      this.editingMediaTextCommittedForTest();\n    }\n  }\n\n  private editingMediaTextCommittedForTest(): void {\n  }\n\n  private handleSelectorClick(event: Event): void {\n    const target = (event.target as Element | null);\n    if (!target) {\n      return;\n    }\n    if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey((event as MouseEvent)) && this.navigable &&\n        target.classList.contains('simple-selector')) {\n      const selectorIndex = this.elementToSelectorIndex.get(target);\n      if (selectorIndex) {\n        this.navigateToSelectorSource(selectorIndex, true);\n      }\n      event.consume(true);\n      return;\n    }\n    if (this.element.hasSelection()) {\n      return;\n    }\n    this.startEditingAtFirstPosition();\n    event.consume(true);\n  }\n\n  private handleContextMenuEvent(event: Event): void {\n    const target = (event.target as Element | null);\n    if (!target) {\n      return;\n    }\n\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copySelector), () => {\n      const selectorText = this.headerText();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(selectorText);\n    }, {jslogContext: 'copy-selector'});\n\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyRule), () => {\n      const ruleText = StylesSidebarPane.formatLeadingProperties(this).ruleText;\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(ruleText);\n    }, {jslogContext: 'copy-rule'});\n\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyAllDeclarations), () => {\n      const allDeclarationText = StylesSidebarPane.formatLeadingProperties(this).allDeclarationText;\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(allDeclarationText);\n    }, {jslogContext: 'copy-all-declarations'});\n\n    void contextMenu.show();\n  }\n\n  private navigateToSelectorSource(index: number, focus: boolean): void {\n    const cssModel = this.parentPane.cssModel();\n    if (!cssModel) {\n      return;\n    }\n    const rule = (this.styleInternal.parentRule as SDK.CSSRule.CSSStyleRule | null);\n    if (!rule?.header) {\n      return;\n    }\n    const header = cssModel.styleSheetHeaderForId(rule.header.id);\n    if (!header) {\n      return;\n    }\n    const rawLocation =\n        new SDK.CSSModel.CSSLocation(header, rule.lineNumberInSource(index), rule.columnNumberInSource(index));\n    StylePropertiesSection.revealSelectorSource(rawLocation, focus);\n  }\n\n  private static revealSelectorSource(rawLocation: SDK.CSSModel.CSSLocation, focus: boolean): void {\n    const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().rawLocationToUILocation(rawLocation);\n    if (uiLocation) {\n      void Common.Revealer.reveal(uiLocation, !focus);\n    }\n  }\n\n  private startEditingAtFirstPosition(): void {\n    if (!this.editable) {\n      return;\n    }\n\n    if (!this.styleInternal.parentRule) {\n      this.moveEditorFromSelector('forward');\n      return;\n    }\n\n    this.startEditingSelector();\n  }\n\n  startEditingSelector(): void {\n    const element = this.selectorElement;\n    if (UI.UIUtils.isBeingEdited(element) || this.titleElement.classList.contains('hidden')) {\n      return;\n    }\n\n    element.scrollIntoViewIfNeeded(false);\n    // Reset selector marks in group, and normalize whitespace.\n    const textContent = element.textContent;\n    if (textContent !== null) {\n      this.#specificityTooltips.querySelectorAll('devtools-tooltip')?.forEach(tooltip => tooltip.hidePopover());\n      element.textContent = textContent.replace(/\\s+/g, ' ').trim();\n    }\n\n    const config = new UI.InplaceEditor.Config(\n        this.editingSelectorCommitted.bind(this), this.editingSelectorCancelled.bind(this), undefined);\n    UI.InplaceEditor.InplaceEditor.startEditing(this.selectorElement, config);\n\n    const selection = element.getComponentSelection();\n    if (selection) {\n      selection.selectAllChildren(element);\n    }\n    this.parentPane.setEditingStyle(true);\n    if (element.classList.contains('simple-selector')) {\n      this.navigateToSelectorSource(0, false);\n    }\n  }\n\n  moveEditorFromSelector(moveDirection: string): void {\n    this.markSelectorMatches();\n\n    if (!moveDirection) {\n      return;\n    }\n\n    if (moveDirection === 'forward') {\n      const firstChild = (this.propertiesTreeOutline.firstChild() as StylePropertyTreeElement);\n      let currentChild: (StylePropertyTreeElement|null)|StylePropertyTreeElement = firstChild;\n      while (currentChild?.inherited()) {\n        const sibling: UI.TreeOutline.TreeElement|null = currentChild.nextSibling;\n        currentChild = sibling instanceof StylePropertyTreeElement ? sibling : null;\n      }\n      if (!currentChild) {\n        this.addNewBlankProperty().startEditingName();\n      } else {\n        currentChild.startEditingName();\n      }\n    } else {\n      const previousSection = this.previousEditableSibling();\n      if (!previousSection) {\n        return;\n      }\n\n      previousSection.addNewBlankProperty().startEditingName();\n    }\n  }\n\n  editingSelectorCommitted(\n      _element: Element,\n      newContent: string,\n      oldContent: string|null,\n      _context: Context|undefined,\n      moveDirection: string,\n      ): void {\n    this.editingSelectorEnded();\n    if (newContent) {\n      newContent = newContent.trim();\n    }\n    if (newContent === oldContent) {\n      // Revert to a trimmed version of the selector if need be.\n      this.selectorElement.textContent = newContent;\n      this.moveEditorFromSelector(moveDirection);\n      return;\n    }\n    const rule = this.styleInternal.parentRule;\n    if (!rule) {\n      return;\n    }\n\n    function headerTextCommitted(this: StylePropertiesSection): void {\n      this.parentPane.setUserOperation(false);\n      this.moveEditorFromSelector(moveDirection);\n      this.editingSelectorCommittedForTest();\n    }\n\n    // This gets deleted in finishOperationAndMoveEditor(), which is called both on success and failure.\n    this.parentPane.setUserOperation(true);\n    void this.setHeaderText(rule, newContent).then(headerTextCommitted.bind(this));\n  }\n\n  setHeaderText(rule: SDK.CSSRule.CSSRule, newContent: string): Promise<void> {\n    function onSelectorsUpdated(\n        this: StylePropertiesSection, rule: SDK.CSSRule.CSSStyleRule, success: boolean): Promise<void> {\n      if (!success) {\n        return Promise.resolve();\n      }\n\n      Badges.UserBadges.instance().recordAction(Badges.BadgeAction.CSS_RULE_MODIFIED);\n      return this.matchedStyles.recomputeMatchingSelectors(rule).then(updateSourceRanges.bind(this, rule));\n    }\n\n    function updateSourceRanges(this: StylePropertiesSection, rule: SDK.CSSRule.CSSStyleRule): void {\n      const doesAffectSelectedNode = this.matchedStyles.getMatchingSelectors(rule).length > 0;\n      this.propertiesTreeOutline.element.classList.toggle('no-affect', !doesAffectSelectedNode);\n      this.matchedStyles.resetActiveProperties();\n      this.parentPane.refreshUpdate(this);\n    }\n\n    if (!(rule instanceof SDK.CSSRule.CSSStyleRule)) {\n      return Promise.resolve();\n    }\n    const oldSelectorRange = rule.selectorRange();\n    if (!oldSelectorRange) {\n      return Promise.resolve();\n    }\n    this.#customHeaderText = undefined;\n    return rule.setSelectorText(newContent).then(onSelectorsUpdated.bind(this, rule, Boolean(oldSelectorRange)));\n  }\n\n  protected editingSelectorCommittedForTest(): void {\n  }\n\n  protected updateRuleOrigin(): void {\n    this.selectorRefElement.removeChildren();\n    this.selectorRefElement.appendChild(\n        this.createRuleOriginNode(this.matchedStyles, this.parentPane.linkifier, this.styleInternal.parentRule));\n  }\n\n  protected editingSelectorEnded(): void {\n    this.parentPane.setEditingStyle(false);\n  }\n\n  editingSelectorCancelled(): void {\n    this.editingSelectorEnded();\n\n    // Mark the selectors in group if necessary.\n    // This is overridden by BlankStylePropertiesSection.\n    this.markSelectorMatches();\n  }\n\n  /**\n   * A property at or near an index and suitable for subsequent editing.\n   * Either the last property, if index out-of-upper-bound,\n   * or property at index, if such a property exists,\n   * or otherwise, null.\n   */\n  closestPropertyForEditing(propertyIndex: number): UI.TreeOutline.TreeElement|null {\n    const rootElement = this.propertiesTreeOutline.rootElement();\n    if (propertyIndex >= rootElement.childCount()) {\n      return rootElement.lastChild();\n    }\n    return rootElement.childAt(propertyIndex);\n  }\n}\n\nexport class BlankStylePropertiesSection extends StylePropertiesSection {\n  private normal: boolean;\n  private readonly ruleLocation: TextUtils.TextRange.TextRange;\n  private readonly styleSheetHeader;\n\n  constructor(\n      stylesPane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, defaultSelectorText: string,\n      styleSheetHeader: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, ruleLocation: TextUtils.TextRange.TextRange,\n      insertAfterStyle: SDK.CSSStyleDeclaration.CSSStyleDeclaration, sectionIdx: number) {\n    const cssModel = (stylesPane.cssModel() as SDK.CSSModel.CSSModel);\n    const rule = SDK.CSSRule.CSSStyleRule.createDummyRule(cssModel, defaultSelectorText);\n    super(stylesPane, matchedStyles, rule.style, sectionIdx, null, null);\n    this.normal = false;\n    this.ruleLocation = ruleLocation;\n    this.styleSheetHeader = styleSheetHeader;\n    this.selectorRefElement.removeChildren();\n    this.selectorRefElement.appendChild(StylePropertiesSection.linkifyRuleLocation(\n        cssModel, this.parentPane.linkifier, styleSheetHeader, this.actualRuleLocation()));\n    if (insertAfterStyle?.parentRule && insertAfterStyle.parentRule instanceof SDK.CSSRule.CSSStyleRule) {\n      this.createAncestorRules(insertAfterStyle.parentRule);\n    }\n    this.element.classList.add('blank-section');\n  }\n\n  private actualRuleLocation(): TextUtils.TextRange.TextRange {\n    const prefix = this.rulePrefix();\n    const lines = prefix.split('\\n');\n    const lastLine = lines[lines.length - 1];\n    const editRange = new TextUtils.TextRange.TextRange(0, 0, lines.length - 1, lastLine ? lastLine.length : 0);\n    return this.ruleLocation.rebaseAfterTextEdit(TextUtils.TextRange.TextRange.createFromLocation(0, 0), editRange);\n  }\n\n  private rulePrefix(): string {\n    return this.ruleLocation.startLine === 0 && this.ruleLocation.startColumn === 0 ? '' : '\\n\\n';\n  }\n\n  get isBlank(): boolean {\n    return !this.normal;\n  }\n\n  override editingSelectorCommitted(\n      element: Element, newContent: string, oldContent: string, context: Context|undefined,\n      moveDirection: string): void {\n    if (!this.isBlank) {\n      super.editingSelectorCommitted(element, newContent, oldContent, context, moveDirection);\n      return;\n    }\n\n    function onRuleAdded(this: BlankStylePropertiesSection, newRule: SDK.CSSRule.CSSStyleRule|null): Promise<void> {\n      if (!newRule) {\n        this.editingSelectorCancelled();\n        this.editingSelectorCommittedForTest();\n        return Promise.resolve();\n      }\n      return this.matchedStyles.addNewRule(newRule, this.matchedStyles.node())\n          .then(onAddedToCascade.bind(this, newRule));\n    }\n\n    function onAddedToCascade(this: BlankStylePropertiesSection, newRule: SDK.CSSRule.CSSStyleRule): void {\n      const doesSelectorAffectSelectedNode = this.matchedStyles.getMatchingSelectors(newRule).length > 0;\n      this.makeNormal(newRule);\n\n      if (!doesSelectorAffectSelectedNode) {\n        this.propertiesTreeOutline.element.classList.add('no-affect');\n      }\n\n      this.updateRuleOrigin();\n\n      this.parentPane.setUserOperation(false);\n      this.editingSelectorEnded();\n      if (this.element.parentElement)  // Might have been detached already.\n      {\n        this.moveEditorFromSelector(moveDirection);\n      }\n      this.markSelectorMatches();\n\n      this.editingSelectorCommittedForTest();\n    }\n\n    if (newContent) {\n      newContent = newContent.trim();\n    }\n    this.parentPane.setUserOperation(true);\n\n    const cssModel = this.parentPane.cssModel();\n    const ruleText = this.rulePrefix() + newContent + ' {}';\n    if (cssModel) {\n      void cssModel.addRule(this.styleSheetHeader.id, ruleText, this.ruleLocation).then(onRuleAdded.bind(this));\n    }\n  }\n\n  override editingSelectorCancelled(): void {\n    this.parentPane.setUserOperation(false);\n    if (!this.isBlank) {\n      super.editingSelectorCancelled();\n      return;\n    }\n\n    this.editingSelectorEnded();\n    this.parentPane.removeSection(this);\n  }\n\n  private makeNormal(newRule: SDK.CSSRule.CSSRule): void {\n    this.element.classList.remove('blank-section');\n    this.styleInternal = newRule.style;\n    // FIXME: replace this instance by a normal StylePropertiesSection.\n    this.normal = true;\n  }\n}\n\nexport class RegisteredPropertiesSection extends StylePropertiesSection {\n  constructor(\n      stylesPane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      style: SDK.CSSStyleDeclaration.CSSStyleDeclaration, sectionIdx: number, propertyName: string,\n      expandedByDefault: boolean) {\n    super(stylesPane, matchedStyles, style, sectionIdx, null, null, propertyName);\n    if (!expandedByDefault) {\n      this.element.classList.add('hidden');\n    }\n    this.selectorElement.className = 'property-registration-key';\n  }\n\n  override async setHeaderText(rule: SDK.CSSRule.CSSRule, newContent: string): Promise<void> {\n    if (!(rule instanceof SDK.CSSRule.CSSPropertyRule)) {\n      return;\n    }\n    const oldRange = rule.propertyName().range;\n    if (!oldRange) {\n      return;\n    }\n    if (await rule.setPropertyName(newContent)) {\n      this.parentPane.forceUpdate();\n    }\n  }\n\n  override createRuleOriginNode(\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, linkifier: Components.Linkifier.Linkifier,\n      rule: SDK.CSSRule.CSSRule|null): Node {\n    if (rule) {\n      return super.createRuleOriginNode(matchedStyles, linkifier, rule);\n    }\n    return document.createTextNode('CSS.registerProperty');\n  }\n}\n\nexport class FunctionRuleSection extends StylePropertiesSection {\n  constructor(\n      stylesPane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      style: SDK.CSSStyleDeclaration.CSSStyleDeclaration, children: SDK.CSSRule.CSSNestedStyle[], sectionIdx: number,\n      functionName: string, expandedByDefault: boolean) {\n    super(stylesPane, matchedStyles, style, sectionIdx, null, null, functionName);\n    if (!expandedByDefault) {\n      this.element.classList.add('hidden');\n    }\n    this.selectorElement.className = 'function-key';\n    this.customPopulateCallback = () => this.addChildren(children, this.propertiesTreeOutline);\n    this.onpopulate();\n  }\n\n  createConditionElement(condition: SDK.CSSRule.CSSNestedStyleCondition): HTMLElement|undefined {\n    if ('media' in condition) {\n      return this.createMediaElement(condition.media);\n    }\n    if ('container' in condition) {\n      return this.createContainerQueryElement(condition.container);\n    }\n    if ('supports' in condition) {\n      return this.createSupportsElement(condition.supports);\n    }\n    return;\n  }\n\n  positionNestingElement(element: HTMLElement): HTMLElement {\n    // Add this class to get the same margins as a property and syntax highlighting.\n    element.classList.add('css-function-inline-block');\n    // Also add the clipboard text, but don't add additional margins because\n    // the tree nesting takes care of that.\n    return this.indentElement(element, this.nestingLevel, true);\n  }\n\n  addChildren(children: SDK.CSSRule.CSSNestedStyle[], parent: TreeElementParent): void {\n    for (const child of children) {\n      if ('style' in child) {\n        this.populateStyle(child.style, parent);\n      } else if ('children' in child) {\n        const conditionElement = this.createConditionElement(child);\n        let newParent = parent;\n        this.nestingLevel++;\n        if (conditionElement) {\n          const treeElement = new UI.TreeOutline.TreeElement();\n          treeElement.listItemElement.appendChild(this.positionNestingElement(conditionElement));\n          treeElement.setExpandable(true);\n          treeElement.setCollapsible(false);\n          parent.appendChild(treeElement);\n          newParent = treeElement;\n        }\n        this.addChildren(child.children, newParent);\n        if (conditionElement) {\n          const treeElement = new UI.TreeOutline.TreeElement();\n          treeElement.listItemElement.appendChild(this.positionNestingElement(this.createClosingBrace()));\n          parent.appendChild(treeElement);\n        }\n        this.nestingLevel--;\n      }\n    }\n  }\n}\n\nexport class FontPaletteValuesRuleSection extends StylePropertiesSection {\n  constructor(\n      stylesPane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      style: SDK.CSSStyleDeclaration.CSSStyleDeclaration, sectionIdx: number) {\n    super(stylesPane, matchedStyles, style, sectionIdx, null, null);\n    this.selectorElement.className = 'font-palette-values-key';\n  }\n}\n\nexport class PositionTryRuleSection extends StylePropertiesSection {\n  constructor(\n      stylesPane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      style: SDK.CSSStyleDeclaration.CSSStyleDeclaration, sectionIdx: number, active: boolean) {\n    super(stylesPane, matchedStyles, style, sectionIdx, null, null);\n    this.selectorElement.className = 'position-try-values-key';\n    this.propertiesTreeOutline.element.classList.toggle('no-affect', !active);\n  }\n}\n\nexport class KeyframePropertiesSection extends StylePropertiesSection {\n  constructor(\n      stylesPane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      style: SDK.CSSStyleDeclaration.CSSStyleDeclaration, sectionIdx: number) {\n    super(stylesPane, matchedStyles, style, sectionIdx, null, null);\n    this.selectorElement.className = 'keyframe-key';\n  }\n\n  override headerText(): string {\n    if (this.styleInternal.parentRule instanceof SDK.CSSRule.CSSKeyframeRule) {\n      return this.styleInternal.parentRule.key().text;\n    }\n    return '';\n  }\n\n  override setHeaderText(rule: SDK.CSSRule.CSSRule, newContent: string): Promise<void> {\n    function updateSourceRanges(this: KeyframePropertiesSection, success: boolean): void {\n      if (!success) {\n        return;\n      }\n      this.parentPane.refreshUpdate(this);\n    }\n\n    if (!(rule instanceof SDK.CSSRule.CSSKeyframeRule)) {\n      return Promise.resolve();\n    }\n    const oldRange = rule.key().range;\n    if (!oldRange) {\n      return Promise.resolve();\n    }\n    return rule.setKeyText(newContent).then(updateSourceRanges.bind(this));\n  }\n\n  override isPropertyInherited(_propertyName: string): boolean {\n    return false;\n  }\n\n  override isPropertyOverloaded(_property: SDK.CSSProperty.CSSProperty): boolean {\n    return false;\n  }\n\n  override markSelectorHighlights(): void {\n  }\n\n  override markSelectorMatches(): void {\n    if (this.styleInternal.parentRule instanceof SDK.CSSRule.CSSKeyframeRule) {\n      this.selectorElement.textContent = this.styleInternal.parentRule.key().text;\n    }\n  }\n\n  override highlight(): void {\n  }\n}\n\nexport class HighlightPseudoStylePropertiesSection extends StylePropertiesSection {\n  override isPropertyInherited(_propertyName: string): boolean {\n    // For highlight pseudos, all valid properties are treated as inherited.\n    // Note that the meaning is reversed in this context; the result of\n    // returning false here is that properties of inherited pseudos will never\n    // be shown in the darker style of non-inherited properties.\n    return false;\n  }\n}\n\ninterface TreeElementParent {\n  appendChild(child: UI.TreeOutline.TreeElement): void;\n}\n", "// Copyright 2018 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives, html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport domLinkifierStyles from './domLinkifier.css.js';\n\nconst {classMap} = Directives;\n\nconst UIStrings = {\n  /**\n   * @description Text displayed when trying to create a link to a node in the UI, but the node\n   * location could not be found so we display this placeholder instead. Node refers to a DOM node.\n   * This should be translated if appropriate.\n   */\n  node: '<node>',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/DOMLinkifier.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface Options extends Common.Linkifier.Options {\n  hiddenClassList?: string[];\n  disabled?: boolean;\n}\n\ninterface ViewInput {\n  dynamic?: boolean;\n  disabled?: boolean;\n  preventKeyboardFocus?: boolean;\n  tagName?: string;\n  id?: string;\n  classes: string[];\n  pseudo?: string;\n  onClick: () => void;\n  onMouseOver: () => void;\n  onMouseLeave: () => void;\n}\n\nexport type View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nconst DEFAULT_VIEW: View = (input, _output, target: HTMLElement) => {\n  // clang-format off\n  render(html`${(input.tagName || input.pseudo) ?  html`\n    <style>${domLinkifierStyles}</style>\n    <span class=\"monospace\">\n      <button class=\"node-link text-button link-style ${classMap({\n            'dynamic-link': Boolean(input.dynamic),\n            disabled: Boolean(input.disabled)\n          })}\"\n          jslog=${VisualLogging.link('node').track({click: true, keydown: 'Enter'})}\n          tabindex=${input.preventKeyboardFocus ? -1 : 0}\n          @click=${input.onClick}\n          @mouseover=${input.onMouseOver}\n          @mouseleave=${input.onMouseLeave}\n          title=${[\n            input.tagName ?? '',\n            input.id ? `#${input.id}` : '',\n            ...input.classes.map(c => `.${c}`),\n            input.pseudo ? `::${input.pseudo}` : '',\n          ].join(' ')}>${\n         [\n          input.tagName ? html`<span class=\"node-label-name\">${input.tagName}</span>` : nothing,\n          input.id ? html`<span class=\"node-label-id\">#${input.id}</span>` : nothing,\n          ...input.classes.map(className => html`<span class=\"extra node-label-class\">.${className}</span>`),\n          input.pseudo ? html`<span class=\"extra node-label-pseudo\">${input.pseudo}</span>` : nothing,\n        ]\n      }</button>\n    </span>` : i18nString(UIStrings.node)}`, target);\n  // clang-format on\n};\n\nexport class DOMNodeLink extends UI.Widget.Widget {\n  #node: SDK.DOMModel.DOMNode|undefined = undefined;\n  #options: Options|undefined = undefined;\n  #view: View;\n\n  constructor(element?: HTMLElement, node?: SDK.DOMModel.DOMNode, options?: Options, view = DEFAULT_VIEW) {\n    super(element, {useShadowDom: true});\n    this.element.classList.remove('vbox');\n    this.#node = node;\n    this.#options = options;\n    this.#view = view;\n    this.performUpdate();\n  }\n\n  set node(node: SDK.DOMModel.DOMNode|undefined) {\n    this.#node = node;\n    this.performUpdate();\n  }\n\n  set options(options: Options|undefined) {\n    this.#options = options;\n    this.performUpdate();\n  }\n\n  override performUpdate(): void {\n    const options = this.#options ?? {\n      tooltip: undefined,\n      preventKeyboardFocus: undefined,\n      textContent: undefined,\n      isDynamicLink: false,\n      disabled: false,\n    };\n    const viewInput: ViewInput = {\n      dynamic: options.isDynamicLink,\n      disabled: options.disabled,\n      preventKeyboardFocus: options.preventKeyboardFocus,\n      classes: [],\n      onClick: () => {\n        void Common.Revealer.reveal(this.#node);\n        void this.#node?.scrollIntoView();\n        return false;\n      },\n      onMouseOver: () => {\n        this.#node?.highlight?.();\n      },\n      onMouseLeave: () => {\n        SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n      },\n    };\n    if (!this.#node) {\n      this.#view(viewInput, {}, this.contentElement);\n      return;\n    }\n\n    let node = this.#node;\n    const isPseudo = node.nodeType() === Node.ELEMENT_NODE && node.pseudoType();\n    if (isPseudo && node.parentNode) {\n      node = node.parentNode;\n    }\n\n    // Special case rendering the node links for view transition pseudo elements.\n    // We don't include the ancestor name in the node link because\n    // they always have the same ancestor. See crbug.com/340633630.\n    if (node.isViewTransitionPseudoNode()) {\n      viewInput.pseudo = `::${this.#node.pseudoType()}(${this.#node.pseudoIdentifier()})`;\n      this.#view(viewInput, {}, this.contentElement);\n      return;\n    }\n\n    if (options.textContent) {\n      viewInput.tagName = options.textContent;\n      this.#view(viewInput, {}, this.contentElement);\n      return;\n    }\n\n    viewInput.tagName = node.nodeNameInCorrectCase();\n\n    const idAttribute = node.getAttribute('id');\n    if (idAttribute) {\n      viewInput.id = idAttribute;\n    }\n\n    const classAttribute = node.getAttribute('class');\n    if (classAttribute) {\n      const classes = classAttribute.split(/\\s+/);\n      if (classes.length) {\n        const foundClasses = new Set<string>();\n        for (let i = 0; i < classes.length; ++i) {\n          const className = classes[i];\n          if (className && !options.hiddenClassList?.includes(className) && !foundClasses.has(className)) {\n            foundClasses.add(className);\n          }\n        }\n        viewInput.classes = [...foundClasses];\n      }\n    }\n    if (isPseudo) {\n      const pseudoIdentifier = this.#node.pseudoIdentifier();\n      let pseudoText = '::' + this.#node.pseudoType();\n      if (pseudoIdentifier) {\n        pseudoText += `(${pseudoIdentifier})`;\n      }\n      viewInput.pseudo = pseudoText;\n    }\n    this.#view(viewInput, {}, this.contentElement);\n  }\n}\n\ninterface DeferredViewInput {\n  preventKeyboardFocus?: boolean;\n  onClick: () => void;\n}\n\ntype DeferredView = (input: DeferredViewInput, output: object, target: HTMLElement) => void;\n\nconst DEFERRED_DEFAULT_VIEW: DeferredView = (input, _output, target: HTMLElement) => {\n  // clang-format off\n  render(html`\n      <style>${domLinkifierStyles}</style>\n      <button class=\"node-link text-button link-style\"\n          jslog=${VisualLogging.link('node').track({click: true})}\n          tabindex=${input.preventKeyboardFocus ? -1 : 0}\n          @click=${input.onClick}\n          @mousedown=${(e: Event) => e.consume()}>\n        <slot></slot>\n      </button>`, target);\n  // clang-format on\n};\n\nexport class DeferredDOMNodeLink extends UI.Widget.Widget {\n  #deferredNode: SDK.DOMModel.DeferredDOMNode|undefined = undefined;\n  #options: Options|undefined = undefined;\n  #view: DeferredView;\n\n  constructor(\n      element?: HTMLElement, deferredNode?: SDK.DOMModel.DeferredDOMNode, options?: Options,\n      view: DeferredView = DEFERRED_DEFAULT_VIEW) {\n    super(element, {useShadowDom: true});\n    this.element.classList.remove('vbox');\n    this.#deferredNode = deferredNode;\n    this.#options = options;\n    this.#view = view;\n    this.performUpdate();\n  }\n\n  override performUpdate(): void {\n    const viewInput = {\n      preventKeyboardFocus: this.#options?.preventKeyboardFocus,\n      onClick: () => {\n        this.#deferredNode?.resolve?.(node => {\n          void Common.Revealer.reveal(node);\n          void node?.scrollIntoView();\n        });\n      },\n    };\n    this.#view(viewInput, {}, this.contentElement);\n  }\n}\n\nlet linkifierInstance: Linkifier;\n\nexport class Linkifier implements Common.Linkifier.Linkifier {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): Linkifier {\n    const {forceNew} = opts;\n    if (!linkifierInstance || forceNew) {\n      linkifierInstance = new Linkifier();\n    }\n\n    return linkifierInstance;\n  }\n  linkify(object: Object, options?: Options): Node {\n    if (object instanceof SDK.DOMModel.DOMNode) {\n      const link = document.createElement('devtools-widget') as UI.Widget.WidgetElement<DOMNodeLink>;\n      link.widgetConfig = UI.Widget.widgetConfig(e => new DOMNodeLink(e, object, options));\n      return link;\n    }\n    if (object instanceof SDK.DOMModel.DeferredDOMNode) {\n      const link = document.createElement('devtools-widget') as UI.Widget.WidgetElement<DeferredDOMNodeLink>;\n      link.widgetConfig = UI.Widget.widgetConfig(e => new DeferredDOMNodeLink(e, object, options));\n      return link;\n    }\n    throw new Error('Can\\'t linkify non-node');\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2018 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n  :scope {\n    display: inline;\n  }\n\n  .node-link {\n    cursor: pointer;\n    display: inline;\n    pointer-events: auto;\n    outline-offset: 2px;\n\n    /* If the element has lots of classes, don't let the label get too wide */\n    text-overflow: ellipsis;\n    overflow: hidden;\n    max-width: min(100%, 550px);\n\n    &:focus-visible {\n      outline-width: unset;\n    }\n\n    &.dynamic-link:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .node-link.disabled {\n    .node-label-name,\n    .node-label-class,\n    .node-label-pseudo,\n    .node-label-name .dynamic-link,\n    .node-label-id {\n      color: var(--sys-color-state-disabled);\n    }\n  }\n\n  .node-label-name {\n    color: var(--sys-color-token-tag);\n\n    .dynamic-link & {\n      color: var(--text-link);\n    }\n  }\n\n  .node-label-class,\n  .node-label-pseudo {\n    color: var(--sys-color-token-attribute);\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./domLinkifier.css')} */`;", "// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport {PanelUtils} from '../utils/utils.js';\n\nimport type {StylePropertiesSection} from './StylePropertiesSection.js';\nimport {StylePropertyTreeElement} from './StylePropertyTreeElement.js';\nimport type {StylesSidebarPane} from './StylesSidebarPane.js';\n\nexport class StylePropertyHighlighter {\n  private readonly styleSidebarPane: StylesSidebarPane;\n  constructor(ssp: StylesSidebarPane) {\n    this.styleSidebarPane = ssp;\n  }\n\n  /**\n   * Expand all shorthands, find the given property, scroll to it and highlight it.\n   */\n  async highlightProperty(cssProperty: SDK.CSSProperty.CSSProperty): Promise<void> {\n    const section =\n        this.styleSidebarPane.allSections().find(section => section.style().allProperties().includes(cssProperty));\n    if (!section) {\n      return;\n    }\n    section.showAllItems();\n    const populatePromises: Array<Promise<void>> = [];\n    for (let treeElement = section.propertiesTreeOutline.firstChild(); treeElement;\n         treeElement = treeElement.nextSibling) {\n      populatePromises.push(treeElement.onpopulate());\n    }\n    await Promise.all(populatePromises);\n\n    const treeElement = this.findTreeElementFromSection(treeElement => treeElement.property === cssProperty, section);\n    if (treeElement) {\n      treeElement.parent?.expand();\n      this.scrollAndHighlightTreeElement(treeElement);\n      section.element.focus();\n    }\n  }\n\n  findAndHighlightSectionBlock(sectionBlockName: string): void {\n    const block = this.styleSidebarPane.getSectionBlockByName(sectionBlockName);\n    if (!block || block.sections.length === 0) {\n      return;\n    }\n    const [section] = block.sections;\n    section.showAllItems();\n    PanelUtils.highlightElement(block.titleElement() as HTMLElement);\n  }\n\n  findAndHighlightSection(sectionName: string, blockName: string): void {\n    const block = this.styleSidebarPane.getSectionBlockByName(blockName);\n    const section = block?.sections.find(section => section.headerText() === sectionName);\n    if (!section || !block) {\n      return;\n    }\n    block.expand(true);\n    section.showAllItems();\n    PanelUtils.highlightElement(section.element);\n  }\n\n  /**\n   * Find the first non-overridden property that matches the provided name, scroll to it and highlight it.\n   */\n  findAndHighlightPropertyName(propertyName: string, sectionName?: string, blockName?: string): boolean {\n    const block = blockName ? this.styleSidebarPane.getSectionBlockByName(blockName) : undefined;\n    const sections = block?.sections ?? this.styleSidebarPane.allSections();\n    if (!sections) {\n      return false;\n    }\n    for (const section of sections) {\n      if (sectionName && section.headerText() !== sectionName) {\n        continue;\n      }\n      if (!section.style().hasActiveProperty(propertyName)) {\n        continue;\n      }\n      block?.expand(true);\n      section.showAllItems();\n      const treeElement = this.findTreeElementFromSection(\n          treeElement => treeElement.property.name === propertyName && !treeElement.overloaded(), section);\n      if (treeElement) {\n        this.scrollAndHighlightTreeElement(treeElement);\n        section.element.focus();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private findTreeElementFromSection(\n      compareCb: (arg0: StylePropertyTreeElement) => boolean, section: StylePropertiesSection): StylePropertyTreeElement\n      |null {\n    let treeElement = section.propertiesTreeOutline.firstChild();\n    while (treeElement && (treeElement instanceof StylePropertyTreeElement)) {\n      if (compareCb(treeElement)) {\n        return treeElement;\n      }\n      treeElement = treeElement.traverseNextTreeElement(false, null, true);\n    }\n    return null;\n  }\n\n  private scrollAndHighlightTreeElement(treeElement: StylePropertyTreeElement): void {\n    PanelUtils.highlightElement(treeElement.listItemElement);\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/**\n * Copyright 2017 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.styles-section {\n  min-height: 18px;\n  white-space: nowrap;\n  user-select: text;\n  border-bottom: 1px solid var(--sys-color-divider);\n  position: relative;\n  overflow: hidden;\n  padding: 2px 2px 4px 4px;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  &.has-open-popover {\n    z-index: 1;\n  }\n\n  &.read-only {\n    background-color: var(--sys-color-cdt-base-container);\n    font-style: italic;\n  }\n\n  &:focus-visible,\n  &.read-only:focus-visible {\n    background-color: var(--sys-color-state-focus-highlight);\n  }\n\n  .simple-selector.filter-match {\n    background-color: var(--sys-color-tonal-container);\n    color: var(--sys-color-on-surface);\n  }\n\n  .devtools-link {\n    user-select: none;\n  }\n\n  .styles-section-subtitle devtools-icon {\n    margin-bottom: -4px;\n  }\n\n  .styles-section-subtitle .devtools-link {\n    color: var(--sys-color-on-surface);\n    text-decoration-color: var(--sys-color-neutral-bright);\n    outline-offset: 0;\n  }\n\n  .selector,\n  .try-rule-selector-element,\n  .ancestor-rule-list,\n  .ancestor-closing-braces {\n    color: var(--app-color-element-sidebar-subtitle);\n  }\n\n  .ancestor-rule-list,\n  .styles-section-title {\n    overflow-wrap: break-word;\n    white-space: normal;\n  }\n\n  .ancestor-rule-list devtools-css-query {\n    display: block;\n  }\n\n  .simple-selector.selector-matches,\n  &.keyframe-key {\n    color: var(--sys-color-on-surface);\n  }\n\n  .style-properties {\n    margin: 0;\n    padding: 2px 4px 0 0;\n    list-style: none;\n    clear: both;\n    display: flex;\n  }\n\n  &.matched-styles .style-properties {\n    padding-left: 0;\n  }\n\n  & span.simple-selector:hover {\n    text-decoration: var(--override-styles-section-text-hover-text-decoration);\n    cursor: var(--override-styles-section-text-hover-cursor);\n  }\n\n  &.styles-panel-hovered:not(.read-only),\n  &.styles-panel-hovered:not(.read-only) devtools-css-query {\n    --override-styles-section-text-hover-text-decoration: underline;\n    --override-styles-section-text-hover-cursor: default;\n  }\n}\n\n.sidebar-pane-closing-brace {\n  clear: both;\n}\n\n.styles-section-subtitle {\n  color: var(--sys-color-on-surface-subtle);\n  float: right;\n  padding: var(--sys-size-2) var(--sys-size-2) 0 var(--sys-size-8);\n  max-width: 100%;\n  height: 15px;\n  margin-bottom: -1px;\n}\n\n.styles-section-subtitle * {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 100%;\n}\n\n.sidebar-pane-open-brace,\n.sidebar-pane-closing-brace {\n  color: var(--sys-color-on-surface);\n}\n\n@keyframes styles-element-state-pane-slidein {\n  from {\n    margin-top: -60px;\n  }\n\n  to {\n    margin-top: 0;\n  }\n}\n\n@keyframes styles-element-state-pane-slideout {\n  from {\n    margin-top: 0;\n  }\n\n  to {\n    margin-top: -60px;\n  }\n}\n\n.styles-sidebar-toolbar-pane {\n  position: relative;\n  animation-duration: 0.1s;\n  animation-direction: normal;\n}\n\n.styles-sidebar-toolbar-pane-container {\n  position: relative;\n  overflow: hidden;\n  flex-shrink: 0;\n}\n\n.styles-selector {\n  cursor: text;\n}\n\n/* TODO(changhaohan): restructure this in relation to stylePropertiesTreeOutline.css. */\n.styles-clipboard-only {\n  display: inline-block;\n  width: 0;\n  opacity: 0%;\n  pointer-events: none;\n  white-space: pre;\n}\n\n.styles-sidebar-pane-toolbar-container {\n  flex-shrink: 0;\n  overflow: hidden;\n  position: sticky;\n  top: 0;\n  background-color: var(--sys-color-cdt-base-container);\n  z-index: 2;\n}\n\n.styles-sidebar-pane-toolbar {\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.styles-pane-toolbar {\n  width: 100%;\n}\n\n.font-toolbar-hidden {\n  visibility: hidden;\n}\n\n.sidebar-separator {\n  background-color: var(--sys-color-surface2);\n  padding: 0 5px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  color: var(--sys-color-on-surface-subtle);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  line-height: 22px;\n\n  > span.monospace {\n    max-width: 180px;\n    display: inline-block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    vertical-align: middle;\n    margin-left: 2px;\n  }\n\n  &.layer-separator {\n    display: flex;\n    align-items: baseline;\n  }\n\n  &.empty-section {\n    border-bottom: none;\n  }\n}\n\n.sidebar-pane-section-toolbar {\n  position: absolute;\n  right: 0;\n  bottom: -1px;\n  z-index: 0;\n\n  &.new-rule-toolbar {\n    visibility: hidden;\n    margin-bottom: 5px;\n\n    --toolbar-height: 16px;\n  }\n\n  &.shifted-toolbar {\n    padding-right: 32px;\n  }\n}\n\n.styles-pane:not(.is-editing-style)\n  .styles-section.matched-styles:not(.read-only):hover\n  .sidebar-pane-section-toolbar.new-rule-toolbar {\n  visibility: visible;\n}\n\n.styles-show-all {\n  padding: 4px;\n  margin-left: 16px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: -webkit-fill-available;\n}\n\n@media (forced-colors: active) {\n  .sidebar-pane-section-toolbar {\n    forced-color-adjust: none;\n    border: 1px solid ButtonText;\n    background-color: ButtonFace;\n  }\n\n  .styles-section {\n    &:focus-visible,\n    &.read-only:focus-visible {\n      forced-color-adjust: none;\n      background-color: Highlight;\n    }\n\n    .styles-section-subtitle {\n      .devtools-link {\n        color: linktext;\n        text-decoration-color: linktext;\n\n        &:focus-visible {\n          color: HighlightText;\n        }\n      }\n    }\n\n    &:focus-visible *,\n    &.read-only:focus-visible *,\n    &:focus-visible .styles-section-subtitle .devtools-link {\n      color: HighlightText;\n      text-decoration-color: HighlightText;\n    }\n\n    &:focus-visible .sidebar-pane-section-toolbar {\n      background-color: ButtonFace;\n    }\n\n    &:focus-visible {\n      --webkit-css-property-color: HighlightText;\n    }\n  }\n}\n\n.spinner::before {\n  --dimension: 24px;\n\n  margin-top: 2em;\n  left: calc(50% - var(--dimension) / 2);\n}\n\n.section-block-expand-icon {\n  margin-bottom: -4px;\n}\n\n/*# sourceURL=${import.meta.resolve('./stylesSidebarPane.css')} */`;", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../../core/root/root.js';\n\n/**\n * Lazily loads the vscode.web-custom-data/browser.css-data.json and allows\n * lookup by property name.\n *\n * The class intentionally doesn't return any promise to the loaded data.\n * Otherwise clients would need to Promise.race against a timeout to handle\n * the case where the data is not yet available.\n */\nexport class WebCustomData {\n  #data = new Map<string, CSSProperty>();\n\n  /** The test actually needs to wait for the result */\n  readonly fetchPromiseForTest: Promise<unknown>;\n\n  constructor(remoteBase: string) {\n    if (!remoteBase) {\n      this.fetchPromiseForTest = Promise.resolve();\n      return;\n    }\n    this.fetchPromiseForTest = fetch(`${remoteBase}third_party/vscode.web-custom-data/browsers.css-data.json`)\n                                   .then(response => response.json())\n                                   .then((json: CSSBrowserData) => {\n                                     for (const property of json.properties) {\n                                       this.#data.set(property.name, property);\n                                     }\n                                   })\n                                   .catch();\n  }\n\n  /**\n   * Creates a fresh `WebCustomData` instance using the standard\n   * DevTools remote base.\n   * Throws if no valid remoteBase was found.\n   */\n  static create(): WebCustomData {\n    const remoteBase = Root.Runtime.getRemoteBase();\n    // Silently skip loading of the CSS data if remoteBase is not set properly.\n    return new WebCustomData(remoteBase?.base ?? '');\n  }\n\n  /**\n   * Returns the documentation for the CSS property `name` or `undefined` if\n   * no such property is documented. Also returns `undefined` if data hasn't\n   * finished loading or failed to load.\n   */\n  findCssProperty(name: string): CSSProperty|undefined {\n    return this.#data.get(name);\n  }\n}\n\ninterface CSSBrowserData {\n  properties: CSSProperty[];\n}\n\nexport interface CSSProperty {\n  name: string;\n  description?: string;\n  references?: Array<{\n    name: string,\n    url: string,\n  }>;\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Anthony Ricaud <rik@webkit.org>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n#main-content {\n  position: relative;\n  flex: 1 1;\n}\n\n#elements-content {\n  overflow: auto;\n  padding: 2px 0 0;\n  height: 100%;\n}\n\n.style-panes-wrapper {\n  overflow: hidden scroll;\n  background-color: var(--sys-color-cdt-base-container);\n\n  & > div:not(:last-child) {\n    border-bottom: 1px solid var(--sys-color-divider);\n  }\n}\n\n#elements-content:not(.elements-wrap) > div {\n  display: inline-block;\n  min-width: 100%;\n}\n\n#elements-crumbs {\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n  overflow: hidden;\n  width: 100%;\n}\n\ndevtools-adorner-settings-pane {\n  margin-bottom: 10px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  overflow: auto;\n}\n\ndevtools-tree-outline {\n  overflow: auto;\n}\n\n.axtree-button {\n  position: absolute;\n  top: var(--sys-size-8);\n  right: var(--sys-size-9);\n  background-color: var(--sys-color-cdt-base-container);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n  border-radius: var(--sys-shape-corner-full);\n  box-shadow: var(--sys-elevation-level1);\n}\n\n/*# sourceURL=${import.meta.resolve('./elementsPanel.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Badges from '../../models/badges/badges.js';\nimport * as Elements from '../../models/elements/elements.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as CodeHighlighter from '../../ui/components/code_highlighter/code_highlighter.js';\nimport * as CopyToClipboard from '../../ui/components/copy_to_clipboard/copy_to_clipboard.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {getElementIssueDetails} from './ElementIssueUtils.js';\nimport {ElementsPanel} from './ElementsPanel.js';\nimport {ElementsTreeElement, InitialChildrenLimit, isOpeningTag} from './ElementsTreeElement.js';\nimport elementsTreeOutlineStyles from './elementsTreeOutline.css.js';\nimport {ImagePreviewPopover} from './ImagePreviewPopover.js';\nimport type {MarkerDecoratorRegistration} from './MarkerDecorator.js';\nimport {ShortcutTreeElement} from './ShortcutTreeElement.js';\nimport {TopLayerContainer} from './TopLayerContainer.js';\n\nconst UIStrings = {\n  /**\n   * @description ARIA accessible name in Elements Tree Outline of the Elements panel\n   */\n  pageDom: 'Page DOM',\n  /**\n   * @description A context menu item to store a value as a global variable the Elements Panel\n   */\n  storeAsGlobalVariable: 'Store as global variable',\n  /**\n   * @description Tree element expand all button element button text content in Elements Tree Outline of the Elements panel\n   * @example {3} PH1\n   */\n  showAllNodesDMore: 'Show all nodes ({PH1} more)',\n  /**\n   * @description Text for popover that directs to Issues panel\n   */\n  viewIssue: 'View Issue:',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementsTreeOutline.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst elementsTreeOutlineByDOMModel = new WeakMap<SDK.DOMModel.DOMModel, ElementsTreeOutline>();\n\nconst populatedTreeElements = new Set<ElementsTreeElement>();\n\nexport type View = typeof DEFAULT_VIEW;\n\ninterface ViewInput {\n  omitRootDOMNode: boolean;\n  selectEnabled: boolean;\n  hideGutter: boolean;\n  visibleWidth?: number;\n  visible?: boolean;\n  wrap: boolean;\n  showSelectionOnKeyboardFocus: boolean;\n  preventTabOrder: boolean;\n  deindentSingleNode: boolean;\n  currentHighlightedNode: SDK.DOMModel.DOMNode|null;\n\n  onSelectedNodeChanged:\n      (event: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode | null, focus: boolean}>) => void;\n  onElementsTreeUpdated: (event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode[]>) => void;\n  onElementCollapsed: () => void;\n  onElementExpanded: () => void;\n}\n\ninterface ViewOutput {\n  elementsTreeOutline?: ElementsTreeOutline;\n  highlightedTreeElement: ElementsTreeElement|null;\n  alreadyExpandedParentTreeElement: ElementsTreeElement|null;\n}\n\nexport const DEFAULT_VIEW = (input: ViewInput, output: ViewOutput, target: HTMLElement): void => {\n  if (!output.elementsTreeOutline) {\n    // FIXME: this is basically a ref to existing imperative\n    // implementation. Once this is declarative the ref should not be\n    // needed.\n    output.elementsTreeOutline = new ElementsTreeOutline(input.omitRootDOMNode, input.selectEnabled, input.hideGutter);\n    output.elementsTreeOutline.addEventListener(\n        ElementsTreeOutline.Events.SelectedNodeChanged, input.onSelectedNodeChanged, this);\n    output.elementsTreeOutline.addEventListener(\n        ElementsTreeOutline.Events.ElementsTreeUpdated, input.onElementsTreeUpdated, this);\n    output.elementsTreeOutline.addEventListener(UI.TreeOutline.Events.ElementExpanded, input.onElementCollapsed, this);\n    output.elementsTreeOutline.addEventListener(UI.TreeOutline.Events.ElementCollapsed, input.onElementExpanded, this);\n    target.appendChild(output.elementsTreeOutline.element);\n  }\n  if (input.visibleWidth !== undefined) {\n    output.elementsTreeOutline.setVisibleWidth(input.visibleWidth);\n  }\n  if (input.visible !== undefined) {\n    output.elementsTreeOutline.setVisible(input.visible);\n  }\n  output.elementsTreeOutline.setWordWrap(input.wrap);\n  output.elementsTreeOutline.setShowSelectionOnKeyboardFocus(input.showSelectionOnKeyboardFocus, input.preventTabOrder);\n  if (input.deindentSingleNode) {\n    output.elementsTreeOutline.deindentSingleNode();\n  }\n  // Node highlighting logic. FIXME: express as a lit template.\n  const previousHighlightedNode = output.highlightedTreeElement?.node() ?? null;\n  if (previousHighlightedNode !== input.currentHighlightedNode) {\n    let treeElement: ElementsTreeElement|null = null;\n\n    if (output.highlightedTreeElement) {\n      let currentTreeElement: ElementsTreeElement|null = output.highlightedTreeElement;\n      while (currentTreeElement && currentTreeElement !== output.alreadyExpandedParentTreeElement) {\n        if (currentTreeElement.expanded) {\n          currentTreeElement.collapse();\n        }\n\n        const parent: UI.TreeOutline.TreeElement|null = currentTreeElement.parent;\n        currentTreeElement = parent instanceof ElementsTreeElement ? parent : null;\n      }\n    }\n\n    output.highlightedTreeElement = null;\n    output.alreadyExpandedParentTreeElement = null;\n    if (input.currentHighlightedNode) {\n      let deepestExpandedParent: SDK.DOMModel.DOMNode|null = input.currentHighlightedNode;\n      const treeElementByNode = output.elementsTreeOutline.treeElementByNode;\n\n      const treeIsNotExpanded = (deepestExpandedParent: SDK.DOMModel.DOMNode): boolean => {\n        const element = treeElementByNode.get(deepestExpandedParent);\n        return element ? !element.expanded : true;\n      };\n      while (deepestExpandedParent && treeIsNotExpanded(deepestExpandedParent)) {\n        deepestExpandedParent = deepestExpandedParent.parentNode;\n      }\n\n      output.alreadyExpandedParentTreeElement =\n          (deepestExpandedParent ? treeElementByNode.get(deepestExpandedParent) :\n                                   output.elementsTreeOutline.rootElement()) as ElementsTreeElement;\n      treeElement = output.elementsTreeOutline.createTreeElementFor(input.currentHighlightedNode);\n    }\n\n    output.highlightedTreeElement = treeElement;\n    output.elementsTreeOutline.setHoverEffect(treeElement);\n    treeElement?.reveal(true);\n  }\n};\n\n/**\n * The main goal of this presenter is to wrap ElementsTreeOutline until\n * ElementsTreeOutline can be fully integrated into DOMTreeWidget.\n *\n * FIXME: once TreeOutline is declarative, this file needs to be renamed\n * to DOMTreeWidget.ts.\n */\nexport class DOMTreeWidget extends UI.Widget.Widget {\n  omitRootDOMNode = false;\n  selectEnabled = false;\n  hideGutter = false;\n  showSelectionOnKeyboardFocus = false;\n  preventTabOrder = false;\n  deindentSingleNode = false;\n  onSelectedNodeChanged:\n      (event:\n           Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode | null, focus: boolean}>) => void = () => {};\n  onElementsTreeUpdated: (event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode[]>) => void = () => {};\n  onDocumentUpdated: (domModel: SDK.DOMModel.DOMModel) => void = () => {};\n\n  #visible = false;\n  #visibleWidth?: number;\n  #wrap = false;\n\n  set visibleWidth(width: number) {\n    this.#visibleWidth = width;\n    this.performUpdate();\n  }\n\n  // FIXME: this is not declarative because ElementsTreeOutline can\n  // change root node internally.\n  set rootDOMNode(node: SDK.DOMModel.DOMNode|null) {\n    this.performUpdate();\n    if (!this.#viewOutput.elementsTreeOutline) {\n      throw new Error('Unexpected: missing elementsTreeOutline');\n    }\n    this.#viewOutput.elementsTreeOutline.rootDOMNode = node;\n    this.performUpdate();\n  }\n  get rootDOMNode(): SDK.DOMModel.DOMNode|null {\n    return this.#viewOutput.elementsTreeOutline?.rootDOMNode ?? null;\n  }\n\n  #currentHighlightedNode: SDK.DOMModel.DOMNode|null = null;\n\n  #view: View;\n  #viewOutput: ViewOutput = {\n    highlightedTreeElement: null,\n    alreadyExpandedParentTreeElement: null,\n  };\n  #highlightThrottler = new Common.Throttler.Throttler(100);\n\n  constructor(element?: HTMLElement, view?: View) {\n    super(element, {\n      useShadowDom: false,\n      delegatesFocus: false,\n    });\n    this.#view = view ?? DEFAULT_VIEW;\n    if (Common.Settings.Settings.instance().moduleSetting('highlight-node-on-hover-in-overlay').get()) {\n      SDK.TargetManager.TargetManager.instance().addModelListener(\n          SDK.OverlayModel.OverlayModel, SDK.OverlayModel.Events.HIGHLIGHT_NODE_REQUESTED, this.#highlightNode, this,\n          {scoped: true});\n      SDK.TargetManager.TargetManager.instance().addModelListener(\n          SDK.OverlayModel.OverlayModel, SDK.OverlayModel.Events.INSPECT_MODE_WILL_BE_TOGGLED, this.#clearState, this,\n          {scoped: true});\n    }\n  }\n\n  #highlightNode(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    void this.#highlightThrottler.schedule(() => {\n      this.#currentHighlightedNode = event.data;\n      this.requestUpdate();\n    });\n  }\n\n  #clearState(): void {\n    this.#currentHighlightedNode = null;\n    this.requestUpdate();\n  }\n\n  selectDOMNode(node: SDK.DOMModel.DOMNode|null, focus?: boolean): void {\n    this.#viewOutput?.elementsTreeOutline?.selectDOMNode(node, focus);\n  }\n\n  setWordWrap(wrap: boolean): void {\n    this.#wrap = wrap;\n    this.performUpdate();\n  }\n\n  selectedDOMNode(): SDK.DOMModel.DOMNode|null {\n    return this.#viewOutput.elementsTreeOutline?.selectedDOMNode() ?? null;\n  }\n\n  /**\n   * FIXME: this is called to re-render everything from scratch, for\n   * example, if global settings changed. Instead, the setting values\n   * should be the input for the view function.\n   */\n  reload(): void {\n    this.#viewOutput.elementsTreeOutline?.update();\n  }\n\n  /**\n   * Used by layout tests.\n   */\n  getTreeOutlineForTesting(): ElementsTreeOutline|undefined {\n    return this.#viewOutput.elementsTreeOutline;\n  }\n\n  override performUpdate(): void {\n    this.#view(\n        {\n          omitRootDOMNode: this.omitRootDOMNode,\n          selectEnabled: this.selectEnabled,\n          hideGutter: this.hideGutter,\n          visibleWidth: this.#visibleWidth,\n          visible: this.#visible,\n          wrap: this.#wrap,\n          showSelectionOnKeyboardFocus: this.showSelectionOnKeyboardFocus,\n          preventTabOrder: this.preventTabOrder,\n          deindentSingleNode: this.deindentSingleNode,\n\n          currentHighlightedNode: this.#currentHighlightedNode,\n          onElementsTreeUpdated: this.onElementsTreeUpdated.bind(this),\n          onSelectedNodeChanged: event => {\n            this.#clearState();\n            this.onSelectedNodeChanged(event);\n          },\n          onElementCollapsed: this.#clearState.bind(this),\n          onElementExpanded: this.#clearState.bind(this),\n        },\n        this.#viewOutput, this.contentElement);\n  }\n\n  modelAdded(domModel: SDK.DOMModel.DOMModel): void {\n    this.performUpdate();\n    if (!this.#viewOutput.elementsTreeOutline) {\n      throw new Error('Unexpected: missing elementsTreeOutline');\n    }\n    this.#viewOutput.elementsTreeOutline.wireToDOMModel(domModel);\n    this.performUpdate();\n  }\n\n  modelRemoved(domModel: SDK.DOMModel.DOMModel): void {\n    this.#viewOutput.elementsTreeOutline?.unwireFromDOMModel(domModel);\n    this.performUpdate();\n  }\n\n  /**\n   * FIXME: which node is expanded should be part of the view input.\n   */\n  expand(): void {\n    if (this.#viewOutput.elementsTreeOutline?.selectedTreeElement) {\n      this.#viewOutput.elementsTreeOutline.selectedTreeElement.expand();\n    }\n  }\n\n  /**\n   * FIXME: which node is selected should be part of the view input.\n   */\n  selectDOMNodeWithoutReveal(node: SDK.DOMModel.DOMNode): void {\n    this.#viewOutput.elementsTreeOutline?.findTreeElement(node)?.select();\n  }\n\n  /**\n   * FIXME: adorners should be part of the view input.\n   */\n  updateNodeAdorners(node: SDK.DOMModel.DOMNode): void {\n    void this.#viewOutput.elementsTreeOutline?.findTreeElement(node)?.updateStyleAdorners();\n  }\n\n  highlightMatch(node: SDK.DOMModel.DOMNode, query?: string): void {\n    const treeElement = this.#viewOutput.elementsTreeOutline?.findTreeElement(node);\n    if (!treeElement) {\n      return;\n    }\n    if (query) {\n      treeElement.highlightSearchResults(query);\n    }\n    treeElement.reveal();\n    const matches = treeElement.listItemElement.getElementsByClassName(UI.UIUtils.highlightedSearchResultClassName);\n    if (matches.length) {\n      matches[0].scrollIntoViewIfNeeded(false);\n    }\n    treeElement.select(/* omitFocus */ true);\n  }\n\n  hideMatchHighlights(node: SDK.DOMModel.DOMNode): void {\n    const treeElement = this.#viewOutput.elementsTreeOutline?.findTreeElement(node);\n    if (!treeElement) {\n      return;\n    }\n    treeElement.hideSearchHighlights();\n  }\n\n  toggleHideElement(node: SDK.DOMModel.DOMNode): void {\n    void this.#viewOutput.elementsTreeOutline?.toggleHideElement(node);\n  }\n\n  toggleEditAsHTML(node: SDK.DOMModel.DOMNode): void {\n    this.#viewOutput.elementsTreeOutline?.toggleEditAsHTML(node);\n  }\n\n  duplicateNode(node: SDK.DOMModel.DOMNode): void {\n    this.#viewOutput.elementsTreeOutline?.duplicateNode(node);\n  }\n\n  copyStyles(node: SDK.DOMModel.DOMNode): void {\n    void this.#viewOutput.elementsTreeOutline?.findTreeElement(node)?.copyStyles();\n  }\n\n  /**\n   * FIXME: used to determine focus state, probably we can have a better\n   * way to do it.\n   */\n  empty(): boolean {\n    return !this.#viewOutput.elementsTreeOutline;\n  }\n\n  override focus(): void {\n    super.focus();\n    this.#viewOutput.elementsTreeOutline?.focus();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.#visible = true;\n    this.performUpdate();\n  }\n\n  override detach(overrideHideOnDetach?: boolean): void {\n    super.detach(overrideHideOnDetach);\n    this.#visible = false;\n    this.performUpdate();\n  }\n\n  override show(parentElement: Element, insertBefore?: Node|null, suppressOrphanWidgetError = false): void {\n    this.performUpdate();\n    const domModels = SDK.TargetManager.TargetManager.instance().models(SDK.DOMModel.DOMModel, {scoped: true});\n    for (const domModel of domModels) {\n      if (domModel.parentModel()) {\n        continue;\n      }\n      if (!this.rootDOMNode) {\n        if (domModel.existingDocument()) {\n          this.rootDOMNode = domModel.existingDocument();\n          this.onDocumentUpdated(domModel);\n        } else {\n          void domModel.requestDocument();\n        }\n      }\n    }\n    super.show(parentElement, insertBefore, suppressOrphanWidgetError);\n  }\n}\n\nexport class ElementsTreeOutline extends\n    Common.ObjectWrapper.eventMixin<ElementsTreeOutline.EventTypes, typeof UI.TreeOutline.TreeOutline>(\n        UI.TreeOutline.TreeOutline) {\n  treeElementByNode: WeakMap<SDK.DOMModel.DOMNode, ElementsTreeElement>;\n  private readonly shadowRoot: ShadowRoot;\n  readonly elementInternal: HTMLElement;\n  private includeRootDOMNode: boolean;\n  private selectEnabled: boolean|undefined;\n  private rootDOMNodeInternal: SDK.DOMModel.DOMNode|null;\n  selectedDOMNodeInternal: SDK.DOMModel.DOMNode|null;\n  private visible: boolean;\n  private readonly imagePreviewPopover: ImagePreviewPopover;\n  private updateRecords: Map<SDK.DOMModel.DOMNode, Elements.ElementUpdateRecord.ElementUpdateRecord>;\n  private treeElementsBeingUpdated: Set<ElementsTreeElement>;\n  decoratorExtensions: MarkerDecoratorRegistration[]|null;\n  private showHTMLCommentsSetting: Common.Settings.Setting<boolean>;\n  private multilineEditing?: MultilineEditorController|null;\n  private visibleWidthInternal?: number;\n  private clipboardNodeData?: ClipboardData;\n  private isXMLMimeTypeInternal?: boolean|null;\n  suppressRevealAndSelect = false;\n  private previousHoveredElement?: UI.TreeOutline.TreeElement;\n  private treeElementBeingDragged?: ElementsTreeElement;\n  private dragOverTreeElement?: ElementsTreeElement;\n  private updateModifiedNodesTimeout?: number;\n  #topLayerContainerByParent = new Map<UI.TreeOutline.TreeElement, TopLayerContainer>();\n  #issuesManager?: IssuesManager.IssuesManager.IssuesManager;\n  #popupHelper?: UI.PopoverHelper.PopoverHelper;\n  #nodeElementToIssues = new Map<Element, IssuesManager.Issue.Issue[]>();\n\n  constructor(omitRootDOMNode?: boolean, selectEnabled?: boolean, hideGutter?: boolean) {\n    super();\n\n    this.#issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    this.#issuesManager.addEventListener(IssuesManager.IssuesManager.Events.ISSUE_ADDED, this.#onIssueAdded, this);\n\n    this.treeElementByNode = new WeakMap();\n    const shadowContainer = document.createElement('div');\n    this.shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(\n        shadowContainer, {cssFile: [elementsTreeOutlineStyles, CodeHighlighter.codeHighlighterStyles]});\n    const outlineDisclosureElement = this.shadowRoot.createChild('div', 'elements-disclosure');\n\n    this.elementInternal = this.element;\n    this.elementInternal.classList.add('elements-tree-outline', 'source-code');\n    if (hideGutter) {\n      this.elementInternal.classList.add('elements-hide-gutter');\n    }\n    UI.ARIAUtils.setLabel(this.elementInternal, i18nString(UIStrings.pageDom));\n    this.elementInternal.addEventListener('focusout', this.onfocusout.bind(this), false);\n    this.elementInternal.addEventListener('mousedown', this.onmousedown.bind(this), false);\n    this.elementInternal.addEventListener('mousemove', this.onmousemove.bind(this), false);\n    this.elementInternal.addEventListener('mouseleave', this.onmouseleave.bind(this), false);\n    this.elementInternal.addEventListener('dragstart', this.ondragstart.bind(this), false);\n    this.elementInternal.addEventListener('dragover', this.ondragover.bind(this), false);\n    this.elementInternal.addEventListener('dragleave', this.ondragleave.bind(this), false);\n    this.elementInternal.addEventListener('drop', this.ondrop.bind(this), false);\n    this.elementInternal.addEventListener('dragend', this.ondragend.bind(this), false);\n    this.elementInternal.addEventListener('contextmenu', this.contextMenuEventFired.bind(this), false);\n    this.elementInternal.addEventListener('clipboard-beforecopy', this.onBeforeCopy.bind(this), false);\n    this.elementInternal.addEventListener('clipboard-copy', this.onCopyOrCut.bind(this, false), false);\n    this.elementInternal.addEventListener('clipboard-cut', this.onCopyOrCut.bind(this, true), false);\n    this.elementInternal.addEventListener('clipboard-paste', this.onPaste.bind(this), false);\n    this.elementInternal.addEventListener('keydown', this.onKeyDown.bind(this), false);\n\n    outlineDisclosureElement.appendChild(this.elementInternal);\n    this.element = shadowContainer;\n    this.contentElement.setAttribute('jslog', `${VisualLogging.tree('elements')}`);\n\n    this.includeRootDOMNode = !omitRootDOMNode;\n    this.selectEnabled = selectEnabled;\n    this.rootDOMNodeInternal = null;\n    this.selectedDOMNodeInternal = null;\n\n    this.visible = false;\n\n    this.imagePreviewPopover = new ImagePreviewPopover(\n        this.contentElement,\n        event => {\n          let link: (Element|null) = (event.target as Element | null);\n          while (link && !ImagePreviewPopover.getImageURL(link)) {\n            link = link.parentElementOrShadowHost();\n          }\n          return link;\n        },\n        link => {\n          const listItem = UI.UIUtils.enclosingNodeOrSelfWithNodeName(link, 'li');\n          if (!listItem) {\n            return null;\n          }\n\n          const treeElement =\n              (UI.TreeOutline.TreeElement.getTreeElementBylistItemNode(listItem) as ElementsTreeElement | undefined);\n          if (!treeElement) {\n            return null;\n          }\n          return treeElement.node();\n        });\n\n    this.updateRecords = new Map();\n    this.treeElementsBeingUpdated = new Set();\n\n    this.decoratorExtensions = null;\n\n    this.showHTMLCommentsSetting = Common.Settings.Settings.instance().moduleSetting('show-html-comments');\n    this.showHTMLCommentsSetting.addChangeListener(this.onShowHTMLCommentsChange.bind(this));\n    this.setUseLightSelectionColor(true);\n    // TODO(changhaohan): refactor the popover to use tooltip component.\n    this.#popupHelper = new UI.PopoverHelper.PopoverHelper(this.elementInternal, event => {\n      const hoveredNode = event.composedPath()[0] as Element;\n      if (!hoveredNode?.matches('.violating-element')) {\n        return null;\n      }\n\n      const issues = this.#nodeElementToIssues.get(hoveredNode);\n      if (!issues) {\n        return null;\n      }\n\n      return {\n        box: hoveredNode.boxInWindow(),\n        show: async (popover: UI.GlassPane.GlassPane) => {\n          popover.setIgnoreLeftMargin(true);\n          // clang-format off\n          render(html`\n            <div class=\"squiggles-content\">\n              ${issues.map(issue => {\n                const elementIssueDetails = getElementIssueDetails(issue);\n                if (!elementIssueDetails) {\n                  // This shouldn't happen, but add this if check to pass ts check.\n                  return nothing;\n                }\n                const issueKindIconName = IssueCounter.IssueCounter.getIssueKindIconName(issue.getKind());\n                const openIssueEvent = (): Promise<void> => Common.Revealer.reveal(issue);\n                return html`\n                  <div class=\"squiggles-content-item\">\n                  <devtools-icon .name=${issueKindIconName} @click=${openIssueEvent}></devtools-icon>\n                  <x-link class=\"link\" @click=${openIssueEvent}>${i18nString(UIStrings.viewIssue)}</x-link>\n                  <span>${elementIssueDetails.tooltip}</span>\n                  </div>`;})}\n            </div>`, popover.contentElement);\n          // clang-format on\n          return true;\n        },\n      };\n    }, 'elements.issue');\n    this.#popupHelper.setTimeout(300);\n  }\n\n  static forDOMModel(domModel: SDK.DOMModel.DOMModel): ElementsTreeOutline|null {\n    return elementsTreeOutlineByDOMModel.get(domModel) || null;\n  }\n\n  #onIssueAdded(event: Common.EventTarget.EventTargetEvent<IssuesManager.IssuesManager.IssueAddedEvent>): void {\n    void this.#addTreeElementIssue(event.data.issue);\n  }\n\n  #addAllElementIssues(): void {\n    if (!this.#issuesManager) {\n      return;\n    }\n    for (const issue of this.#issuesManager.issues()) {\n      void this.#addTreeElementIssue(issue);\n    }\n  }\n\n  async #addTreeElementIssue(issue: IssuesManager.Issue.Issue): Promise<void> {\n    const elementIssueDetails = getElementIssueDetails(issue);\n    if (!elementIssueDetails) {\n      return;\n    }\n    const {nodeId} = elementIssueDetails;\n    if (!this.rootDOMNode || !nodeId) {\n      return;\n    }\n    const deferredDOMNode = new SDK.DOMModel.DeferredDOMNode(this.rootDOMNode.domModel().target(), nodeId);\n    const node = await deferredDOMNode.resolvePromise();\n\n    if (!node) {\n      return;\n    }\n\n    const treeElement = this.findTreeElement(node);\n    if (treeElement) {\n      treeElement.addIssue(issue);\n      const treeElementNodeElementsToIssues = treeElement.issuesByNodeElement;\n      // This element could be the treeElement tags name or an attribute.\n      for (const [element, issues] of treeElementNodeElementsToIssues) {\n        this.#nodeElementToIssues.set(element, issues);\n      }\n    }\n  }\n\n  deindentSingleNode(): void {\n    const firstChild = this.firstChild();\n    if (!firstChild || (firstChild && !firstChild.isExpandable())) {\n      this.shadowRoot.querySelector('.elements-disclosure')?.classList.add('single-node');\n    }\n  }\n\n  updateNodeElementToIssue(element: Element, issues: IssuesManager.Issue.Issue[]): void {\n    this.#nodeElementToIssues.set(element, issues);\n  }\n\n  private onShowHTMLCommentsChange(): void {\n    const selectedNode = this.selectedDOMNode();\n    if (selectedNode && selectedNode.nodeType() === Node.COMMENT_NODE && !this.showHTMLCommentsSetting.get()) {\n      this.selectDOMNode(selectedNode.parentNode);\n    }\n    this.update();\n  }\n\n  setWordWrap(wrap: boolean): void {\n    this.elementInternal.classList.toggle('elements-tree-nowrap', !wrap);\n  }\n\n  setMultilineEditing(multilineEditing: MultilineEditorController|null): void {\n    this.multilineEditing = multilineEditing;\n  }\n\n  visibleWidth(): number {\n    return this.visibleWidthInternal || 0;\n  }\n\n  setVisibleWidth(width: number): void {\n    this.visibleWidthInternal = width;\n    if (this.multilineEditing) {\n      this.multilineEditing.resize();\n    }\n  }\n\n  private setClipboardData(data: ClipboardData|null): void {\n    if (this.clipboardNodeData) {\n      const treeElement = this.findTreeElement(this.clipboardNodeData.node);\n      if (treeElement) {\n        treeElement.setInClipboard(false);\n      }\n      delete this.clipboardNodeData;\n    }\n\n    if (data) {\n      const treeElement = this.findTreeElement(data.node);\n      if (treeElement) {\n        treeElement.setInClipboard(true);\n      }\n      this.clipboardNodeData = data;\n    }\n  }\n\n  resetClipboardIfNeeded(removedNode: SDK.DOMModel.DOMNode): void {\n    if (this.clipboardNodeData && this.clipboardNodeData.node === removedNode) {\n      this.setClipboardData(null);\n    }\n  }\n\n  private onBeforeCopy(event: Event): void {\n    event.handled = true;\n  }\n\n  private onCopyOrCut(isCut: boolean, event: Event): void {\n    this.setClipboardData(null);\n    // @ts-expect-error this bound in the main entry point\n    const originalEvent = event['original'];\n\n    if (!originalEvent?.target) {\n      return;\n    }\n\n    // Don't prevent the normal copy if the user has a selection.\n    if (originalEvent.target instanceof Node && originalEvent.target.hasSelection()) {\n      return;\n    }\n\n    // Do not interfere with text editing.\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n\n    const targetNode = this.selectedDOMNode();\n    if (!targetNode) {\n      return;\n    }\n\n    if (!originalEvent.clipboardData) {\n      return;\n    }\n    originalEvent.clipboardData.clearData();\n    event.handled = true;\n\n    this.performCopyOrCut(isCut, targetNode);\n  }\n\n  performCopyOrCut(isCut: boolean, node: SDK.DOMModel.DOMNode|null, includeShadowRoots = false): void {\n    if (!node) {\n      return;\n    }\n    if (isCut && (node.isShadowRoot() || node.ancestorUserAgentShadowRoot())) {\n      return;\n    }\n    void node.getOuterHTML(includeShadowRoots).then(outerHTML => {\n      if (outerHTML !== null) {\n        CopyToClipboard.copyTextToClipboard(outerHTML);\n      }\n    });\n    this.setClipboardData({node, isCut});\n  }\n\n  canPaste(targetNode: SDK.DOMModel.DOMNode): boolean {\n    if (targetNode.isShadowRoot() || targetNode.ancestorUserAgentShadowRoot()) {\n      return false;\n    }\n\n    if (!this.clipboardNodeData) {\n      return false;\n    }\n\n    const node = this.clipboardNodeData.node;\n    if (this.clipboardNodeData.isCut && (node === targetNode || node.isAncestor(targetNode))) {\n      return false;\n    }\n\n    if (targetNode.domModel() !== node.domModel()) {\n      return false;\n    }\n    return true;\n  }\n\n  pasteNode(targetNode: SDK.DOMModel.DOMNode): void {\n    if (this.canPaste(targetNode)) {\n      this.performPaste(targetNode);\n    }\n  }\n\n  duplicateNode(targetNode: SDK.DOMModel.DOMNode): void {\n    this.performDuplicate(targetNode);\n  }\n\n  private onPaste(event: Event): void {\n    // Do not interfere with text editing.\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n\n    const targetNode = this.selectedDOMNode();\n    if (!targetNode || !this.canPaste(targetNode)) {\n      return;\n    }\n\n    event.handled = true;\n    this.performPaste(targetNode);\n  }\n\n  private performPaste(targetNode: SDK.DOMModel.DOMNode): void {\n    if (!this.clipboardNodeData) {\n      return;\n    }\n    if (this.clipboardNodeData.isCut) {\n      this.clipboardNodeData.node.moveTo(targetNode, null, expandCallback.bind(this));\n      this.setClipboardData(null);\n    } else {\n      this.clipboardNodeData.node.copyTo(targetNode, null, expandCallback.bind(this));\n    }\n\n    function expandCallback(\n        this: ElementsTreeOutline, error: string|null, pastedNode: SDK.DOMModel.DOMNode|null): void {\n      if (error || !pastedNode) {\n        return;\n      }\n      this.selectDOMNode(pastedNode);\n    }\n  }\n\n  private performDuplicate(targetNode: SDK.DOMModel.DOMNode): void {\n    if (targetNode.isInShadowTree()) {\n      return;\n    }\n\n    const parentNode = targetNode.parentNode ? targetNode.parentNode : targetNode;\n    if (parentNode.nodeName() === '#document') {\n      return;\n    }\n\n    targetNode.copyTo(parentNode, targetNode.nextSibling);\n  }\n\n  setVisible(visible: boolean): void {\n    if (visible === this.visible) {\n      return;\n    }\n    this.visible = visible;\n    if (!this.visible) {\n      this.imagePreviewPopover.hide();\n      if (this.multilineEditing) {\n        this.multilineEditing.cancel();\n      }\n      return;\n    }\n\n    this.runPendingUpdates();\n    if (this.selectedDOMNodeInternal) {\n      this.revealAndSelectNode(this.selectedDOMNodeInternal, false);\n    }\n  }\n\n  get rootDOMNode(): SDK.DOMModel.DOMNode|null {\n    return this.rootDOMNodeInternal;\n  }\n\n  set rootDOMNode(x: SDK.DOMModel.DOMNode|null) {\n    if (this.rootDOMNodeInternal === x) {\n      return;\n    }\n\n    this.rootDOMNodeInternal = x;\n\n    this.isXMLMimeTypeInternal = x?.isXMLNode();\n\n    this.update();\n  }\n\n  get isXMLMimeType(): boolean {\n    return Boolean(this.isXMLMimeTypeInternal);\n  }\n\n  selectedDOMNode(): SDK.DOMModel.DOMNode|null {\n    return this.selectedDOMNodeInternal;\n  }\n\n  selectDOMNode(node: SDK.DOMModel.DOMNode|null, focus?: boolean): void {\n    if (this.selectedDOMNodeInternal === node) {\n      this.revealAndSelectNode(node, !focus);\n      return;\n    }\n\n    this.selectedDOMNodeInternal = node;\n    this.revealAndSelectNode(node, !focus);\n\n    // The revealAndSelectNode() method might find a different element if there is inlined text,\n    // and the select() call would change the selectedDOMNode and reenter this setter. So to\n    // avoid calling selectedNodeChanged() twice, first check if selectedDOMNodeInternal is the same\n    // node as the one passed in.\n    if (this.selectedDOMNodeInternal === node) {\n      this.selectedNodeChanged(Boolean(focus));\n    }\n  }\n\n  editing(): boolean {\n    const node = this.selectedDOMNode();\n    if (!node) {\n      return false;\n    }\n    const treeElement = this.findTreeElement(node);\n    if (!treeElement) {\n      return false;\n    }\n    return treeElement.isEditing() || false;\n  }\n\n  update(): void {\n    const selectedNode = this.selectedDOMNode();\n    this.removeChildren();\n    if (!this.rootDOMNode) {\n      return;\n    }\n\n    if (this.includeRootDOMNode) {\n      const treeElement = this.createElementTreeElement(this.rootDOMNode);\n      this.appendChild(treeElement);\n    } else {\n      // FIXME: this could use findTreeElement to reuse a tree element if it already exists\n      const children = this.visibleChildren(this.rootDOMNode);\n      for (const child of children) {\n        const treeElement = this.createElementTreeElement(child);\n        this.appendChild(treeElement);\n      }\n    }\n    if (this.rootDOMNode instanceof SDK.DOMModel.DOMDocument) {\n      void this.createTopLayerContainer(this.rootElement(), this.rootDOMNode);\n    }\n\n    if (selectedNode) {\n      this.revealAndSelectNode(selectedNode, true);\n    }\n  }\n\n  selectedNodeChanged(focus: boolean): void {\n    this.dispatchEventToListeners(\n        ElementsTreeOutline.Events.SelectedNodeChanged, {node: this.selectedDOMNodeInternal, focus});\n  }\n\n  private fireElementsTreeUpdated(nodes: SDK.DOMModel.DOMNode[]): void {\n    this.dispatchEventToListeners(ElementsTreeOutline.Events.ElementsTreeUpdated, nodes);\n  }\n\n  findTreeElement(node: SDK.DOMModel.DOMNode): ElementsTreeElement|null {\n    let treeElement = this.lookUpTreeElement(node);\n    if (!treeElement && node.nodeType() === Node.TEXT_NODE) {\n      // The text node might have been inlined if it was short, so try to find the parent element.\n      treeElement = this.lookUpTreeElement(node.parentNode);\n    }\n\n    return treeElement as ElementsTreeElement | null;\n  }\n\n  private lookUpTreeElement(node: SDK.DOMModel.DOMNode|null): UI.TreeOutline.TreeElement|null {\n    if (!node) {\n      return null;\n    }\n\n    const cachedElement = this.treeElementByNode.get(node);\n    if (cachedElement) {\n      return cachedElement;\n    }\n\n    // Walk up the parent pointers from the desired node\n    const ancestors = [];\n    let currentNode;\n    for (currentNode = node.parentNode; currentNode; currentNode = currentNode.parentNode) {\n      ancestors.push(currentNode);\n      if (this.treeElementByNode.has(currentNode)) {  // stop climbing as soon as we hit\n        break;\n      }\n    }\n\n    if (!currentNode) {\n      return null;\n    }\n\n    // Walk down to populate each ancestor's children, to fill in the tree and the cache.\n    for (let i = ancestors.length - 1; i >= 0; --i) {\n      const child = ancestors[i - 1] || node;\n      const treeElement = this.treeElementByNode.get(ancestors[i]);\n      if (treeElement) {\n        void treeElement.onpopulate();  // fill the cache with the children of treeElement\n        if (child.index && child.index >= treeElement.expandedChildrenLimit()) {\n          this.setExpandedChildrenLimit(treeElement, child.index + 1);\n        }\n      }\n    }\n\n    return this.treeElementByNode.get(node) || null;\n  }\n\n  createTreeElementFor(node: SDK.DOMModel.DOMNode): ElementsTreeElement|null {\n    let treeElement = this.findTreeElement(node);\n    if (treeElement) {\n      return treeElement;\n    }\n    if (!node.parentNode) {\n      return null;\n    }\n\n    treeElement = this.createTreeElementFor(node.parentNode);\n    return treeElement ? this.showChild(treeElement, node) : null;\n  }\n\n  private revealAndSelectNode(node: SDK.DOMModel.DOMNode|null, omitFocus: boolean): void {\n    if (this.suppressRevealAndSelect) {\n      return;\n    }\n\n    if (!this.includeRootDOMNode && node === this.rootDOMNode && this.rootDOMNode) {\n      node = this.rootDOMNode.firstChild;\n    }\n    if (!node) {\n      return;\n    }\n    const treeElement = this.createTreeElementFor(node);\n    if (!treeElement) {\n      return;\n    }\n\n    treeElement.revealAndSelect(omitFocus);\n  }\n\n  treeElementFromEventInternal(event: MouseEvent): UI.TreeOutline.TreeElement|null {\n    const scrollContainer = this.element.parentElement;\n    if (!scrollContainer) {\n      return null;\n    }\n\n    const x = event.pageX;\n    const y = event.pageY;\n\n    // Our list items have 1-pixel cracks between them vertically. We avoid\n    // the cracks by checking slightly above and slightly below the mouse\n    // and seeing if we hit the same element each time.\n    const elementUnderMouse = this.treeElementFromPoint(x, y);\n    const elementAboveMouse = this.treeElementFromPoint(x, y - 2);\n    let element;\n    if (elementUnderMouse === elementAboveMouse) {\n      element = elementUnderMouse;\n    } else {\n      element = this.treeElementFromPoint(x, y + 2);\n    }\n\n    return element;\n  }\n\n  private onfocusout(_event: Event): void {\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n  }\n\n  private onmousedown(event: MouseEvent): void {\n    const element = this.treeElementFromEventInternal(event);\n    if (element) {\n      element.select();\n    }\n  }\n\n  setHoverEffect(treeElement: UI.TreeOutline.TreeElement|null): void {\n    if (this.previousHoveredElement === treeElement) {\n      return;\n    }\n\n    if (this.previousHoveredElement instanceof ElementsTreeElement) {\n      this.previousHoveredElement.hovered = false;\n      delete this.previousHoveredElement;\n    }\n\n    if (treeElement instanceof ElementsTreeElement) {\n      treeElement.hovered = true;\n      this.previousHoveredElement = treeElement;\n    }\n  }\n\n  private onmousemove(event: MouseEvent): void {\n    const element = this.treeElementFromEventInternal(event);\n    if (element && this.previousHoveredElement === element) {\n      return;\n    }\n\n    this.setHoverEffect(element);\n    this.highlightTreeElement(\n        (element as UI.TreeOutline.TreeElement), !UI.KeyboardShortcut.KeyboardShortcut.eventHasEitherCtrlOrMeta(event));\n  }\n\n  private highlightTreeElement(element: UI.TreeOutline.TreeElement, showInfo: boolean): void {\n    if (element instanceof ElementsTreeElement) {\n      element.node().domModel().overlayModel().highlightInOverlay(\n          {node: element.node(), selectorList: undefined}, 'all', showInfo);\n      return;\n    }\n\n    if (element instanceof ShortcutTreeElement) {\n      element.domModel().overlayModel().highlightInOverlay(\n          {deferredNode: element.deferredNode(), selectorList: undefined}, 'all', showInfo);\n    }\n  }\n\n  private onmouseleave(_event: MouseEvent): void {\n    this.setHoverEffect(null);\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n  }\n\n  private ondragstart(event: DragEvent): boolean|undefined {\n    const node = (event.target as Node | null);\n    if (!node || node.hasSelection()) {\n      return false;\n    }\n    if (node.nodeName === 'A') {\n      return false;\n    }\n\n    const treeElement = this.validDragSourceOrTarget(this.treeElementFromEventInternal(event));\n    if (!treeElement) {\n      return false;\n    }\n\n    if (treeElement.node().nodeName() === 'BODY' || treeElement.node().nodeName() === 'HEAD') {\n      return false;\n    }\n\n    if (!event.dataTransfer || !treeElement.listItemElement.textContent) {\n      return;\n    }\n    event.dataTransfer.setData('text/plain', treeElement.listItemElement.textContent.replace(/\\u200b/g, ''));\n    event.dataTransfer.effectAllowed = 'copyMove';\n    this.treeElementBeingDragged = treeElement;\n\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n\n    return true;\n  }\n\n  private ondragover(event: DragEvent): boolean {\n    if (!this.treeElementBeingDragged) {\n      return false;\n    }\n\n    const treeElement = this.validDragSourceOrTarget(this.treeElementFromEventInternal(event));\n    if (!treeElement) {\n      return false;\n    }\n\n    let node: (SDK.DOMModel.DOMNode|null) = (treeElement.node() as SDK.DOMModel.DOMNode | null);\n    while (node) {\n      if (node === this.treeElementBeingDragged.nodeInternal) {\n        return false;\n      }\n      node = node.parentNode;\n    }\n\n    treeElement.listItemElement.classList.add('elements-drag-over');\n    this.dragOverTreeElement = treeElement;\n    event.preventDefault();\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'move';\n    }\n    return false;\n  }\n\n  private ondragleave(event: DragEvent): boolean {\n    this.clearDragOverTreeElementMarker();\n    event.preventDefault();\n    return false;\n  }\n\n  private validDragSourceOrTarget(treeElement: UI.TreeOutline.TreeElement|null): ElementsTreeElement|null {\n    if (!treeElement) {\n      return null;\n    }\n\n    if (!(treeElement instanceof ElementsTreeElement)) {\n      return null;\n    }\n    const elementsTreeElement = (treeElement);\n\n    const node = elementsTreeElement.node();\n    if (!node.parentNode || node.parentNode.nodeType() !== Node.ELEMENT_NODE) {\n      return null;\n    }\n\n    return elementsTreeElement;\n  }\n\n  private ondrop(event: DragEvent): void {\n    event.preventDefault();\n    const treeElement = this.treeElementFromEventInternal(event);\n    if (treeElement instanceof ElementsTreeElement) {\n      this.doMove(treeElement);\n    }\n  }\n\n  private doMove(treeElement: ElementsTreeElement): void {\n    if (!this.treeElementBeingDragged) {\n      return;\n    }\n\n    let parentNode;\n    let anchorNode;\n\n    if (treeElement.isClosingTag()) {\n      // Drop onto closing tag -> insert as last child.\n      parentNode = treeElement.node();\n      anchorNode = null;\n    } else {\n      const dragTargetNode = treeElement.node();\n      parentNode = dragTargetNode.parentNode;\n      anchorNode = dragTargetNode;\n    }\n\n    if (!parentNode) {\n      return;\n    }\n    const wasExpanded = this.treeElementBeingDragged.expanded;\n    this.treeElementBeingDragged.nodeInternal.moveTo(\n        parentNode, anchorNode, this.selectNodeAfterEdit.bind(this, wasExpanded));\n\n    delete this.treeElementBeingDragged;\n  }\n\n  private ondragend(event: DragEvent): void {\n    event.preventDefault();\n    this.clearDragOverTreeElementMarker();\n    delete this.treeElementBeingDragged;\n  }\n\n  private clearDragOverTreeElementMarker(): void {\n    if (this.dragOverTreeElement) {\n      this.dragOverTreeElement.listItemElement.classList.remove('elements-drag-over');\n      delete this.dragOverTreeElement;\n    }\n  }\n\n  private contextMenuEventFired(event: MouseEvent): void {\n    // The context menu construction may be async. In order to\n    // make sure that no other (default) context menu shows up, we need\n    // to stop propagating and prevent the default action.\n    event.stopPropagation();\n    event.preventDefault();\n    const treeElement = this.treeElementFromEventInternal(event);\n    if (treeElement instanceof ElementsTreeElement) {\n      void this.showContextMenu(treeElement, event);\n    }\n  }\n\n  async showContextMenu(treeElement: ElementsTreeElement, event: Event): Promise<void> {\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const isPseudoElement = Boolean(treeElement.node().pseudoType());\n    const isTag = treeElement.node().nodeType() === Node.ELEMENT_NODE && !isPseudoElement;\n    const node = (event.target as Node | null);\n    if (!node) {\n      return;\n    }\n    let textNode: Element|null = node.enclosingNodeOrSelfWithClass('webkit-html-text-node');\n    if (textNode?.classList.contains('bogus')) {\n      textNode = null;\n    }\n    const commentNode = node.enclosingNodeOrSelfWithClass('webkit-html-comment');\n    contextMenu.saveSection().appendItem(\n        i18nString(UIStrings.storeAsGlobalVariable), this.saveNodeToTempVariable.bind(this, treeElement.node()),\n        {jslogContext: 'store-as-global-variable'});\n    if (textNode) {\n      await treeElement.populateTextContextMenu(contextMenu, textNode);\n    } else if (isTag) {\n      await treeElement.populateTagContextMenu(contextMenu, event);\n    } else if (commentNode) {\n      await treeElement.populateNodeContextMenu(contextMenu);\n    } else if (isPseudoElement) {\n      treeElement.populatePseudoElementContextMenu(contextMenu);\n    }\n\n    ElementsPanel.instance().populateAdornerSettingsContextMenu(contextMenu);\n\n    contextMenu.appendApplicableItems(treeElement.node());\n    void contextMenu.show();\n  }\n\n  private async saveNodeToTempVariable(node: SDK.DOMModel.DOMNode): Promise<void> {\n    const remoteObjectForConsole = await node.resolveToObject();\n    const consoleModel = remoteObjectForConsole?.runtimeModel().target()?.model(SDK.ConsoleModel.ConsoleModel);\n    await consoleModel?.saveToTempVariable(\n        UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext), remoteObjectForConsole);\n  }\n\n  runPendingUpdates(): void {\n    this.updateModifiedNodes();\n  }\n\n  private onKeyDown(event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n    const node = this.selectedDOMNode();\n    if (!node) {\n      return;\n    }\n    const treeElement = this.treeElementByNode.get(node);\n    if (!treeElement) {\n      return;\n    }\n\n    if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(keyboardEvent) && node.parentNode) {\n      if (keyboardEvent.key === 'ArrowUp' && node.previousSibling) {\n        node.moveTo(node.parentNode, node.previousSibling, this.selectNodeAfterEdit.bind(this, treeElement.expanded));\n        keyboardEvent.consume(true);\n        return;\n      }\n      if (keyboardEvent.key === 'ArrowDown' && node.nextSibling) {\n        node.moveTo(\n            node.parentNode, node.nextSibling.nextSibling, this.selectNodeAfterEdit.bind(this, treeElement.expanded));\n        keyboardEvent.consume(true);\n        return;\n      }\n    }\n  }\n\n  toggleEditAsHTML(node: SDK.DOMModel.DOMNode, startEditing?: boolean, callback?: (() => void)): void {\n    const treeElement = this.treeElementByNode.get(node);\n    if (!treeElement?.hasEditableNode()) {\n      return;\n    }\n\n    if (node.pseudoType()) {\n      return;\n    }\n\n    const parentNode = node.parentNode;\n    const index = node.index;\n    const wasExpanded = treeElement.expanded;\n\n    treeElement.toggleEditAsHTML(editingFinished.bind(this), startEditing);\n\n    function editingFinished(this: ElementsTreeOutline, success: boolean): void {\n      if (callback) {\n        callback();\n      }\n      if (!success) {\n        return;\n      }\n\n      Badges.UserBadges.instance().recordAction(Badges.BadgeAction.DOM_ELEMENT_OR_ATTRIBUTE_EDITED);\n\n      // Select it and expand if necessary. We force tree update so that it processes dom events and is up to date.\n      this.runPendingUpdates();\n\n      if (!index) {\n        return;\n      }\n\n      const children = parentNode?.children();\n      const newNode = children ? children[index] || parentNode : parentNode;\n      if (!newNode) {\n        return;\n      }\n\n      this.selectDOMNode(newNode, true);\n\n      if (wasExpanded) {\n        const newTreeItem = this.findTreeElement(newNode);\n        if (newTreeItem) {\n          newTreeItem.expand();\n        }\n      }\n    }\n  }\n\n  selectNodeAfterEdit(wasExpanded: boolean, error: string|null, newNode: SDK.DOMModel.DOMNode|null): ElementsTreeElement\n      |null {\n    if (error) {\n      return null;\n    }\n\n    // Select it and expand if necessary. We force tree update so that it processes dom events and is up to date.\n    this.runPendingUpdates();\n\n    if (!newNode) {\n      return null;\n    }\n\n    this.selectDOMNode(newNode, true);\n\n    const newTreeItem = this.findTreeElement(newNode);\n    if (wasExpanded) {\n      if (newTreeItem) {\n        newTreeItem.expand();\n      }\n    }\n    return newTreeItem;\n  }\n\n  /**\n   * Runs a script on the node's remote object that toggles a class name on\n   * the node and injects a stylesheet into the head of the node's document\n   * containing a rule to set \"visibility: hidden\" on the class and all it's\n   * ancestors.\n   */\n  async toggleHideElement(node: SDK.DOMModel.DOMNode): Promise<void> {\n    let pseudoElementName = node.pseudoType() ? node.nodeName() : null;\n    if (pseudoElementName && node.pseudoIdentifier()) {\n      pseudoElementName += `(${node.pseudoIdentifier()})`;\n    }\n\n    let effectiveNode: SDK.DOMModel.DOMNode|null = node;\n    while (effectiveNode?.pseudoType()) {\n      if (effectiveNode !== node && effectiveNode.pseudoType() === 'column') {\n        // Ideally we would select the specific column pseudo element, but\n        // we don't have a way to do that at the moment.\n        pseudoElementName = '::column' + pseudoElementName;\n      }\n      effectiveNode = effectiveNode.parentNode;\n    }\n    if (!effectiveNode) {\n      return;\n    }\n\n    const hidden = node.marker('hidden-marker');\n    const object = await effectiveNode.resolveToObject('');\n\n    if (!object) {\n      return;\n    }\n\n    await object.callFunction(\n        (toggleClassAndInjectStyleRule as (this: Object, ...arg1: unknown[]) => void),\n        [{value: pseudoElementName}, {value: !hidden}]);\n    object.release();\n    node.setMarker('hidden-marker', hidden ? null : true);\n\n    function toggleClassAndInjectStyleRule(this: Element, pseudoElementName: string|null, hidden: boolean): void {\n      const classNamePrefix = '__web-inspector-hide';\n      const classNameSuffix = '-shortcut__';\n      const styleTagId = '__web-inspector-hide-shortcut-style__';\n      const pseudoElementNameEscaped = pseudoElementName ? pseudoElementName.replace(/[\\(\\)\\:]/g, '_') : '';\n      const className = classNamePrefix + pseudoElementNameEscaped + classNameSuffix;\n      this.classList.toggle(className, hidden);\n\n      let localRoot: Element|HTMLHeadElement = this;\n      while (localRoot.parentNode) {\n        localRoot = (localRoot.parentNode as Element);\n      }\n      if (localRoot.nodeType === Node.DOCUMENT_NODE) {\n        localRoot = document.head;\n      }\n\n      let style = localRoot.querySelector('style#' + styleTagId);\n      if (!style) {\n        const selectors = [];\n        selectors.push('.__web-inspector-hide-shortcut__');\n        selectors.push('.__web-inspector-hide-shortcut__ *');\n        const selector = selectors.join(', ');\n        const ruleBody = '    visibility: hidden !important;';\n        const rule = '\\n' + selector + '\\n{\\n' + ruleBody + '\\n}\\n';\n\n        style = document.createElement('style');\n        style.id = styleTagId;\n        style.textContent = rule;\n\n        localRoot.appendChild(style);\n      }\n\n      // In addition to putting them on the element we want to hide, we will\n      // also add pseudo element classes to the style element to keep track of\n      // which pseudo elements we have style rules for.\n      if (pseudoElementName && !style.classList.contains(className)) {\n        style.classList.add(className);\n        style.textContent = `.${className}${pseudoElementName}, ${style.textContent}`;\n      }\n    }\n  }\n\n  isToggledToHidden(node: SDK.DOMModel.DOMNode): boolean {\n    return Boolean(node.marker('hidden-marker'));\n  }\n\n  private reset(): void {\n    this.rootDOMNode = null;\n    this.selectDOMNode(null, false);\n    this.imagePreviewPopover.hide();\n    delete this.clipboardNodeData;\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    this.updateRecords.clear();\n  }\n\n  wireToDOMModel(domModel: SDK.DOMModel.DOMModel): void {\n    elementsTreeOutlineByDOMModel.set(domModel, this);\n    domModel.addEventListener(SDK.DOMModel.Events.MarkersChanged, this.markersChanged, this);\n    domModel.addEventListener(SDK.DOMModel.Events.NodeInserted, this.nodeInserted, this);\n    domModel.addEventListener(SDK.DOMModel.Events.NodeRemoved, this.nodeRemoved, this);\n    domModel.addEventListener(SDK.DOMModel.Events.AttrModified, this.attributeModified, this);\n    domModel.addEventListener(SDK.DOMModel.Events.AttrRemoved, this.attributeRemoved, this);\n    domModel.addEventListener(SDK.DOMModel.Events.CharacterDataModified, this.characterDataModified, this);\n    domModel.addEventListener(SDK.DOMModel.Events.DocumentUpdated, this.documentUpdated, this);\n    domModel.addEventListener(SDK.DOMModel.Events.ChildNodeCountUpdated, this.childNodeCountUpdated, this);\n    domModel.addEventListener(SDK.DOMModel.Events.DistributedNodesChanged, this.distributedNodesChanged, this);\n    domModel.addEventListener(SDK.DOMModel.Events.TopLayerElementsChanged, this.topLayerElementsChanged, this);\n    domModel.addEventListener(SDK.DOMModel.Events.ScrollableFlagUpdated, this.scrollableFlagUpdated, this);\n  }\n\n  unwireFromDOMModel(domModel: SDK.DOMModel.DOMModel): void {\n    domModel.removeEventListener(SDK.DOMModel.Events.MarkersChanged, this.markersChanged, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.NodeInserted, this.nodeInserted, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.NodeRemoved, this.nodeRemoved, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.AttrModified, this.attributeModified, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.AttrRemoved, this.attributeRemoved, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.CharacterDataModified, this.characterDataModified, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.DocumentUpdated, this.documentUpdated, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.ChildNodeCountUpdated, this.childNodeCountUpdated, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.DistributedNodesChanged, this.distributedNodesChanged, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.TopLayerElementsChanged, this.topLayerElementsChanged, this);\n    domModel.removeEventListener(SDK.DOMModel.Events.ScrollableFlagUpdated, this.scrollableFlagUpdated, this);\n    elementsTreeOutlineByDOMModel.delete(domModel);\n  }\n\n  private addUpdateRecord(node: SDK.DOMModel.DOMNode): Elements.ElementUpdateRecord.ElementUpdateRecord {\n    let record = this.updateRecords.get(node);\n    if (!record) {\n      record = new Elements.ElementUpdateRecord.ElementUpdateRecord();\n      this.updateRecords.set(node, record);\n    }\n    return record;\n  }\n\n  private updateRecordForHighlight(node: SDK.DOMModel.DOMNode): Elements.ElementUpdateRecord.ElementUpdateRecord|null {\n    if (!this.visible) {\n      return null;\n    }\n    return this.updateRecords.get(node) || null;\n  }\n\n  private documentUpdated(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMModel>): void {\n    const domModel = event.data;\n    this.reset();\n    if (domModel.existingDocument()) {\n      this.rootDOMNode = domModel.existingDocument();\n      this.#addAllElementIssues();\n    }\n  }\n\n  private attributeModified(event: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode, name: string}>):\n      void {\n    const {node} = event.data;\n    this.addUpdateRecord(node).attributeModified(event.data.name);\n    this.updateModifiedNodesSoon();\n  }\n\n  private attributeRemoved(event: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode, name: string}>):\n      void {\n    const {node} = event.data;\n    this.addUpdateRecord(node).attributeRemoved(event.data.name);\n    this.updateModifiedNodesSoon();\n  }\n\n  private characterDataModified(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    const node = event.data;\n    this.addUpdateRecord(node).charDataModified();\n    // Text could be large and force us to render itself as the child in the tree outline.\n    if (node.parentNode && node.parentNode.firstChild === node.parentNode.lastChild) {\n      this.addUpdateRecord(node.parentNode).childrenModified();\n    }\n    this.updateModifiedNodesSoon();\n  }\n\n  private nodeInserted(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    const node = event.data;\n    this.addUpdateRecord((node.parentNode as SDK.DOMModel.DOMNode)).nodeInserted(node);\n    this.updateModifiedNodesSoon();\n  }\n\n  private nodeRemoved(\n      event: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode, parent: SDK.DOMModel.DOMNode}>): void {\n    const {node, parent} = event.data;\n    this.resetClipboardIfNeeded(node);\n    this.addUpdateRecord(parent).nodeRemoved(node);\n    this.updateModifiedNodesSoon();\n  }\n\n  private childNodeCountUpdated(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    const node = event.data;\n    this.addUpdateRecord(node).childrenModified();\n    this.updateModifiedNodesSoon();\n  }\n\n  private distributedNodesChanged(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    const node = event.data;\n    this.addUpdateRecord(node).childrenModified();\n    this.updateModifiedNodesSoon();\n  }\n\n  private updateModifiedNodesSoon(): void {\n    if (!this.updateRecords.size) {\n      return;\n    }\n    if (this.updateModifiedNodesTimeout) {\n      return;\n    }\n    this.updateModifiedNodesTimeout = window.setTimeout(this.updateModifiedNodes.bind(this), 50);\n  }\n\n  /**\n   * TODO: this is made public for unit tests until the ElementsTreeOutline is\n   * migrated into DOMTreeWidget and highlights are declarative.\n   */\n  updateModifiedNodes(): void {\n    if (this.updateModifiedNodesTimeout) {\n      clearTimeout(this.updateModifiedNodesTimeout);\n      delete this.updateModifiedNodesTimeout;\n    }\n\n    const updatedNodes = [...this.updateRecords.keys()];\n    const hidePanelWhileUpdating = updatedNodes.length > 10;\n\n    let treeOutlineContainerElement;\n    let originalScrollTop;\n    if (hidePanelWhileUpdating) {\n      treeOutlineContainerElement = (this.element.parentNode as Element | null);\n      originalScrollTop = treeOutlineContainerElement ? treeOutlineContainerElement.scrollTop : 0;\n      this.elementInternal.classList.add('hidden');\n    }\n    const rootNodeUpdateRecords = this.rootDOMNodeInternal && this.updateRecords.get(this.rootDOMNodeInternal);\n    if (rootNodeUpdateRecords?.hasChangedChildren()) {\n      // Document's children have changed, perform total update.\n      this.update();\n    } else {\n      for (const [node, record] of this.updateRecords) {\n        if (record.hasChangedChildren()) {\n          this.updateModifiedParentNode((node));\n        } else {\n          this.updateModifiedNode((node));\n        }\n      }\n    }\n\n    if (hidePanelWhileUpdating) {\n      this.elementInternal.classList.remove('hidden');\n      if (treeOutlineContainerElement && originalScrollTop) {\n        treeOutlineContainerElement.scrollTop = originalScrollTop;\n      }\n    }\n\n    this.updateRecords.clear();\n    this.fireElementsTreeUpdated(updatedNodes);\n  }\n\n  private updateModifiedNode(node: SDK.DOMModel.DOMNode): void {\n    const treeElement = this.findTreeElement(node);\n    if (treeElement) {\n      treeElement.updateTitle(this.updateRecordForHighlight(node));\n    }\n  }\n\n  private updateModifiedParentNode(node: SDK.DOMModel.DOMNode): void {\n    const parentTreeElement = this.findTreeElement(node);\n    if (parentTreeElement) {\n      parentTreeElement.setExpandable(this.hasVisibleChildren(node));\n      parentTreeElement.updateTitle(this.updateRecordForHighlight(node));\n      if (populatedTreeElements.has(parentTreeElement)) {\n        this.updateChildren(parentTreeElement);\n      }\n    }\n  }\n\n  populateTreeElement(treeElement: ElementsTreeElement): Promise<void> {\n    if (treeElement.childCount() || !treeElement.isExpandable()) {\n      return Promise.resolve();\n    }\n\n    return new Promise<void>(resolve => {\n      treeElement.node().getChildNodes(() => {\n        populatedTreeElements.add(treeElement);\n        this.updateModifiedParentNode(treeElement.node());\n        resolve();\n      });\n    });\n  }\n\n  async createTopLayerContainer(parent: UI.TreeOutline.TreeElement, document: SDK.DOMModel.DOMDocument): Promise<void> {\n    if (!parent.treeOutline || !(parent.treeOutline instanceof ElementsTreeOutline)) {\n      return;\n    }\n    const container = new TopLayerContainer(parent.treeOutline, document);\n    await container.throttledUpdateTopLayerElements();\n    if (container.currentTopLayerDOMNodes.size > 0) {\n      parent.appendChild(container);\n    }\n    this.#topLayerContainerByParent.set(parent, container);\n  }\n\n  private createElementTreeElement(node: SDK.DOMModel.DOMNode, isClosingTag?: boolean): ElementsTreeElement {\n    const treeElement = new ElementsTreeElement(node, isClosingTag);\n    treeElement.setExpandable(!isClosingTag && this.hasVisibleChildren(node));\n    if (node.nodeType() === Node.ELEMENT_NODE && node.parentNode && node.parentNode.nodeType() === Node.DOCUMENT_NODE &&\n        !node.parentNode.parentNode) {\n      treeElement.setCollapsible(false);\n    }\n\n    if (node.hasAssignedSlot()) {\n      treeElement.createSlotLink(node.assignedSlot);\n    }\n\n    treeElement.selectable = Boolean(this.selectEnabled);\n    return treeElement;\n  }\n\n  private showChild(treeElement: ElementsTreeElement, child: SDK.DOMModel.DOMNode): ElementsTreeElement|null {\n    if (treeElement.isClosingTag()) {\n      return null;\n    }\n\n    const index = this.visibleChildren(treeElement.node()).indexOf(child);\n    if (index === -1) {\n      return null;\n    }\n\n    if (index >= treeElement.expandedChildrenLimit()) {\n      this.setExpandedChildrenLimit(treeElement, index + 1);\n    }\n    return treeElement.childAt(index) as ElementsTreeElement;\n  }\n\n  private visibleChildren(node: SDK.DOMModel.DOMNode): SDK.DOMModel.DOMNode[] {\n    let visibleChildren = ElementsTreeElement.visibleShadowRoots(node);\n\n    const contentDocument = node.contentDocument();\n    if (contentDocument) {\n      visibleChildren.push(contentDocument);\n    }\n\n    const templateContent = node.templateContent();\n    if (templateContent) {\n      visibleChildren.push(templateContent);\n    }\n\n    visibleChildren.push(...node.viewTransitionPseudoElements());\n\n    const markerPseudoElement = node.markerPseudoElement();\n    if (markerPseudoElement) {\n      visibleChildren.push(markerPseudoElement);\n    }\n\n    const checkmarkPseudoElement = node.checkmarkPseudoElement();\n    if (checkmarkPseudoElement) {\n      visibleChildren.push(checkmarkPseudoElement);\n    }\n\n    const beforePseudoElement = node.beforePseudoElement();\n    if (beforePseudoElement) {\n      visibleChildren.push(beforePseudoElement);\n    }\n\n    visibleChildren.push(...node.carouselPseudoElements());\n\n    if (node.childNodeCount()) {\n      // Children may be stale when the outline is not wired to receive DOMModel updates.\n      let children: SDK.DOMModel.DOMNode[] = node.children() || [];\n      if (!this.showHTMLCommentsSetting.get()) {\n        children = children.filter(n => n.nodeType() !== Node.COMMENT_NODE);\n      }\n      visibleChildren = visibleChildren.concat(children);\n    }\n\n    const afterPseudoElement = node.afterPseudoElement();\n    if (afterPseudoElement) {\n      visibleChildren.push(afterPseudoElement);\n    }\n\n    const pickerIconPseudoElement = node.pickerIconPseudoElement();\n    if (pickerIconPseudoElement) {\n      visibleChildren.push(pickerIconPseudoElement);\n    }\n\n    const backdropPseudoElement = node.backdropPseudoElement();\n    if (backdropPseudoElement) {\n      visibleChildren.push(backdropPseudoElement);\n    }\n\n    return visibleChildren;\n  }\n\n  private hasVisibleChildren(node: SDK.DOMModel.DOMNode): boolean {\n    if (node.isIframe()) {\n      return true;\n    }\n    if (node.contentDocument()) {\n      return true;\n    }\n    if (node.templateContent()) {\n      return true;\n    }\n    if (ElementsTreeElement.visibleShadowRoots(node).length) {\n      return true;\n    }\n    if (node.hasPseudoElements()) {\n      return true;\n    }\n    if (node.isInsertionPoint()) {\n      return true;\n    }\n    return Boolean(node.childNodeCount()) && !ElementsTreeElement.canShowInlineText(node);\n  }\n\n  private createExpandAllButtonTreeElement(treeElement: ElementsTreeElement): UI.TreeOutline.TreeElement {\n    const button = UI.UIUtils.createTextButton('', handleLoadAllChildren.bind(this));\n    button.value = '';\n    const expandAllButtonElement = new UI.TreeOutline.TreeElement(button);\n    expandAllButtonElement.selectable = false;\n    expandAllButtonElement.button = button;\n    return expandAllButtonElement;\n\n    function handleLoadAllChildren(this: ElementsTreeOutline, event: Event): void {\n      const visibleChildCount = this.visibleChildren(treeElement.node()).length;\n      this.setExpandedChildrenLimit(\n          treeElement, Math.max(visibleChildCount, treeElement.expandedChildrenLimit() + InitialChildrenLimit));\n      event.consume();\n    }\n  }\n\n  setExpandedChildrenLimit(treeElement: ElementsTreeElement, expandedChildrenLimit: number): void {\n    if (treeElement.expandedChildrenLimit() === expandedChildrenLimit) {\n      return;\n    }\n\n    treeElement.setExpandedChildrenLimit(expandedChildrenLimit);\n    if (treeElement.treeOutline && !this.treeElementsBeingUpdated.has(treeElement)) {\n      this.updateModifiedParentNode(treeElement.node());\n    }\n  }\n\n  private updateChildren(treeElement: ElementsTreeElement): void {\n    if (!treeElement.isExpandable()) {\n      if (!treeElement.treeOutline) {\n        return;\n      }\n      const selectedTreeElement = treeElement.treeOutline.selectedTreeElement;\n      if (selectedTreeElement?.hasAncestor(treeElement)) {\n        treeElement.select(true);\n      }\n      treeElement.removeChildren();\n      return;\n    }\n\n    console.assert(!treeElement.isClosingTag());\n\n    this.innerUpdateChildren(treeElement);\n  }\n\n  insertChildElement(\n      treeElement: ElementsTreeElement|TopLayerContainer, child: SDK.DOMModel.DOMNode, index: number,\n      isClosingTag?: boolean): ElementsTreeElement {\n    const newElement = this.createElementTreeElement(child, isClosingTag);\n    treeElement.insertChild(newElement, index);\n    if (child instanceof SDK.DOMModel.DOMDocument) {\n      void this.createTopLayerContainer(newElement, child);\n    }\n    return newElement;\n  }\n\n  private moveChild(treeElement: ElementsTreeElement, child: ElementsTreeElement, targetIndex: number): void {\n    if (treeElement.indexOfChild(child) === targetIndex) {\n      return;\n    }\n    const wasSelected = child.selected;\n    if (child.parent) {\n      child.parent.removeChild(child);\n    }\n    treeElement.insertChild(child, targetIndex);\n    if (wasSelected) {\n      child.select();\n    }\n  }\n\n  private innerUpdateChildren(treeElement: ElementsTreeElement): void {\n    if (this.treeElementsBeingUpdated.has(treeElement)) {\n      return;\n    }\n\n    this.treeElementsBeingUpdated.add(treeElement);\n\n    const node = treeElement.node();\n    const visibleChildren = this.visibleChildren(node);\n    const visibleChildrenSet = new Set<SDK.DOMModel.DOMNode>(visibleChildren);\n\n    // Remove any tree elements that no longer have this node as their parent and save\n    // all existing elements that could be reused. This also removes closing tag element.\n    const existingTreeElements = new Map<SDK.DOMModel.DOMNode, UI.TreeOutline.TreeElement&ElementsTreeElement>();\n    for (let i = treeElement.childCount() - 1; i >= 0; --i) {\n      const existingTreeElement = treeElement.childAt(i);\n      if (!(existingTreeElement instanceof ElementsTreeElement)) {\n        // Remove expand all button and shadow host toolbar.\n        treeElement.removeChildAtIndex(i);\n        continue;\n      }\n      const elementsTreeElement = (existingTreeElement);\n      const existingNode = elementsTreeElement.node();\n\n      if (visibleChildrenSet.has(existingNode)) {\n        existingTreeElements.set(existingNode, existingTreeElement);\n        continue;\n      }\n\n      treeElement.removeChildAtIndex(i);\n    }\n\n    for (let i = 0; i < visibleChildren.length && i < treeElement.expandedChildrenLimit(); ++i) {\n      const child = visibleChildren[i];\n      const existingTreeElement = existingTreeElements.get(child) || this.findTreeElement(child);\n      if (existingTreeElement && existingTreeElement !== treeElement) {\n        // If an existing element was found, just move it.\n        this.moveChild(treeElement, existingTreeElement, i);\n      } else {\n        // No existing element found, insert a new element.\n        const newElement = this.insertChildElement(treeElement, child, i);\n        if (this.updateRecordForHighlight(node) && treeElement.expanded) {\n          ElementsTreeElement.animateOnDOMUpdate(newElement);\n        }\n        // If a node was inserted in the middle of existing list dynamically we might need to increase the limit.\n        if (treeElement.childCount() > treeElement.expandedChildrenLimit()) {\n          this.setExpandedChildrenLimit(treeElement, treeElement.expandedChildrenLimit() + 1);\n        }\n      }\n    }\n\n    // Update expand all button.\n    const expandedChildCount = treeElement.childCount();\n    if (visibleChildren.length > expandedChildCount) {\n      const targetButtonIndex = expandedChildCount;\n      if (!treeElement.expandAllButtonElement) {\n        treeElement.expandAllButtonElement = this.createExpandAllButtonTreeElement(treeElement);\n      }\n      treeElement.insertChild(treeElement.expandAllButtonElement, targetButtonIndex);\n      treeElement.expandAllButtonElement.title =\n          i18nString(UIStrings.showAllNodesDMore, {PH1: visibleChildren.length - expandedChildCount});\n    } else if (treeElement.expandAllButtonElement) {\n      treeElement.expandAllButtonElement = null;\n    }\n\n    // Insert shortcuts to distributed children.\n    if (node.isInsertionPoint()) {\n      for (const distributedNode of node.distributedNodes()) {\n        treeElement.appendChild(new ShortcutTreeElement(distributedNode));\n      }\n    }\n\n    // Insert close tag.\n    if (node.nodeType() === Node.ELEMENT_NODE && !node.pseudoType() && treeElement.isExpandable()) {\n      this.insertChildElement(treeElement, node, treeElement.childCount(), true);\n    }\n\n    this.treeElementsBeingUpdated.delete(treeElement);\n  }\n\n  private markersChanged(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    const node = event.data;\n    const treeElement = this.treeElementByNode.get(node);\n    if (treeElement) {\n      treeElement.updateDecorations();\n    }\n  }\n\n  private async topLayerElementsChanged(): Promise<void> {\n    for (const [parent, container] of this.#topLayerContainerByParent) {\n      await container.throttledUpdateTopLayerElements();\n      if (container.currentTopLayerDOMNodes.size > 0 && container.parent !== parent) {\n        parent.appendChild(container);\n      }\n      container.hidden = container.currentTopLayerDOMNodes.size === 0;\n    }\n  }\n\n  private scrollableFlagUpdated(event: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode}>): void {\n    let {node} = event.data;\n    if (node.nodeName() === '#document') {\n      // We show the scroll badge of the document on the <html> element.\n      if (!node.ownerDocument?.documentElement) {\n        return;\n      }\n      node = node.ownerDocument.documentElement;\n    }\n    const treeElement = this.treeElementByNode.get(node);\n    if (treeElement && isOpeningTag(treeElement.tagTypeContext)) {\n      void treeElement.tagTypeContext.adornersThrottler.schedule(async () => treeElement.updateScrollAdorner());\n    }\n  }\n}\n\nexport namespace ElementsTreeOutline {\n  export enum Events {\n    /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n    SelectedNodeChanged = 'SelectedNodeChanged',\n    ElementsTreeUpdated = 'ElementsTreeUpdated',\n    /* eslint-enable @typescript-eslint/naming-convention */\n  }\n\n  export interface EventTypes {\n    [Events.SelectedNodeChanged]: {node: SDK.DOMModel.DOMNode|null, focus: boolean};\n    [Events.ElementsTreeUpdated]: SDK.DOMModel.DOMNode[];\n  }\n}\n\n// clang-format off\nexport const MappedCharToEntity = new Map<string, string>([\n  ['\\xA0', 'nbsp'],\n  ['\\xAD', 'shy'],\n  ['\\u2002', 'ensp'],\n  ['\\u2003', 'emsp'],\n  ['\\u2009', 'thinsp'],\n  ['\\u200A', 'hairsp'],\n  ['\\u200B', 'ZeroWidthSpace'],\n  ['\\u200C', 'zwnj'],\n  ['\\u200D', 'zwj'],\n  ['\\u200E', 'lrm'],\n  ['\\u200F', 'rlm'],\n  ['\\u202A', '#x202A'],\n  ['\\u202B', '#x202B'],\n  ['\\u202C', '#x202C'],\n  ['\\u202D', '#x202D'],\n  ['\\u202E', '#x202E'],\n  ['\\u2060', 'NoBreak'],\n  ['\\uFEFF', '#xFEFF'],\n]);\n// clang-format on\n\nexport interface MultilineEditorController {\n  cancel: () => void;\n  commit: () => void;\n  resize: () => void;\n}\n\nexport interface ClipboardData {\n  node: SDK.DOMModel.DOMNode;\n  isCut: boolean;\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\n\nconst UIStrings = {\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formLabelForNameError: 'Incorrect use of <label for=FORM_ELEMENT>',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formDuplicateIdForInputError: 'Duplicate form field id in the same form',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formInputWithNoLabelError: 'Form field without valid aria-labelledby attribute or associated label',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formAutocompleteAttributeEmptyError: 'Incorrect use of autocomplete attribute',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formEmptyIdAndNameAttributesForInputError: 'A form field element should have an id or name attribute',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formAriaLabelledByToNonExistingId: 'An aria-labelledby attribute doesn\\'t match any element id',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formInputAssignedAutocompleteValueToIdOrNameAttributeError: 'An element doesn\\'t have an autocomplete attribute',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formLabelHasNeitherForNorNestedInput: 'No label associated with a form field',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formLabelForMatchesNonExistingIdError: 'Incorrect use of <label for=FORM_ELEMENT>',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  formInputHasWrongButWellIntendedAutocompleteValueError: 'Non-standard autocomplete attribute value',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  disallowedSelectChild: 'Invalid element or text node within <select>',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  disallowedOptGroupChild: 'Invalid element or text node within <optgroup>',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  nonPhrasingContentOptionChild: 'Non-phrasing content used within an <option> element',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  interactiveContentOptionChild: 'Interactive element inside of an <option> element',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  interactiveContentLegendChild: 'Interactive element inside of a <legend> element',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  interactiveContentAttributesSelectDescendant: 'Element with invalid attributes within a <select> element',\n  /**\n   * @description Tooltip text shown in the Elements panel when an element has an error.\n   */\n  interactiveContentSummaryDescendant: 'Interactive element inside of a <summary> element',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementIssueUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface ElementIssueDetails {\n  tooltip: string;\n  nodeId?: Protocol.DOM.BackendNodeId;\n  attribute?: string;\n}\n\nexport function getElementIssueDetails(issue: IssuesManager.Issue.Issue): ElementIssueDetails|undefined {\n  if (issue instanceof IssuesManager.GenericIssue.GenericIssue) {\n    const issueDetails = issue.details();\n    return {\n      tooltip: getTooltipFromGenericIssue(issueDetails.errorType),\n      nodeId: issueDetails.violatingNodeId,\n      attribute: issueDetails.violatingNodeAttribute,\n    };\n  }\n  if (issue instanceof IssuesManager.ElementAccessibilityIssue.ElementAccessibilityIssue) {\n    const issueDetails = issue.details();\n    if (issue.isInteractiveContentAttributesSelectDescendantIssue()) {\n      return {\n        tooltip: i18nString(UIStrings.interactiveContentAttributesSelectDescendant),\n        nodeId: issueDetails.nodeId,\n      };\n    }\n    return {\n      tooltip: getTooltipFromElementAccessibilityIssue(issueDetails.elementAccessibilityIssueReason),\n      nodeId: issueDetails.nodeId,\n    };\n  }\n\n  return undefined;\n}\n\nfunction getTooltipFromGenericIssue(errorType: Protocol.Audits.GenericIssueErrorType): string {\n  switch (errorType) {\n    case Protocol.Audits.GenericIssueErrorType.FormLabelForNameError:\n      return i18nString(UIStrings.formLabelForNameError);\n    case Protocol.Audits.GenericIssueErrorType.FormDuplicateIdForInputError:\n      return i18nString(UIStrings.formDuplicateIdForInputError);\n    case Protocol.Audits.GenericIssueErrorType.FormInputWithNoLabelError:\n      return i18nString(UIStrings.formInputWithNoLabelError);\n    case Protocol.Audits.GenericIssueErrorType.FormAutocompleteAttributeEmptyError:\n      return i18nString(UIStrings.formAutocompleteAttributeEmptyError);\n    case Protocol.Audits.GenericIssueErrorType.FormEmptyIdAndNameAttributesForInputError:\n      return i18nString(UIStrings.formEmptyIdAndNameAttributesForInputError);\n    case Protocol.Audits.GenericIssueErrorType.FormAriaLabelledByToNonExistingId:\n      return i18nString(UIStrings.formAriaLabelledByToNonExistingId);\n    case Protocol.Audits.GenericIssueErrorType.FormInputAssignedAutocompleteValueToIdOrNameAttributeError:\n      return i18nString(UIStrings.formInputAssignedAutocompleteValueToIdOrNameAttributeError);\n    case Protocol.Audits.GenericIssueErrorType.FormLabelHasNeitherForNorNestedInput:\n      return i18nString(UIStrings.formLabelHasNeitherForNorNestedInput);\n    case Protocol.Audits.GenericIssueErrorType.FormLabelForMatchesNonExistingIdError:\n      return i18nString(UIStrings.formLabelForMatchesNonExistingIdError);\n    case Protocol.Audits.GenericIssueErrorType.FormInputHasWrongButWellIntendedAutocompleteValueError:\n      return i18nString(UIStrings.formInputHasWrongButWellIntendedAutocompleteValueError);\n    default:\n      return '';\n  }\n}\n\nfunction getTooltipFromElementAccessibilityIssue(reason: Protocol.Audits.ElementAccessibilityIssueReason): string {\n  switch (reason) {\n    case Protocol.Audits.ElementAccessibilityIssueReason.DisallowedSelectChild:\n      return i18nString(UIStrings.disallowedSelectChild);\n    case Protocol.Audits.ElementAccessibilityIssueReason.DisallowedOptGroupChild:\n      return i18nString(UIStrings.disallowedOptGroupChild);\n    case Protocol.Audits.ElementAccessibilityIssueReason.NonPhrasingContentOptionChild:\n      return i18nString(UIStrings.nonPhrasingContentOptionChild);\n    case Protocol.Audits.ElementAccessibilityIssueReason.InteractiveContentOptionChild:\n      return i18nString(UIStrings.interactiveContentOptionChild);\n    case Protocol.Audits.ElementAccessibilityIssueReason.InteractiveContentLegendChild:\n      return i18nString(UIStrings.interactiveContentLegendChild);\n    case Protocol.Audits.ElementAccessibilityIssueReason.InteractiveContentSummaryDescendant:\n      return i18nString(UIStrings.interactiveContentSummaryDescendant);\n    default:\n      return '';\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Badges from '../../models/badges/badges.js';\nimport type * as Elements from '../../models/elements/elements.js';\nimport type * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as CodeHighlighter from '../../ui/components/code_highlighter/code_highlighter.js';\nimport * as Highlighting from '../../ui/components/highlighting/highlighting.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as TextEditor from '../../ui/components/text_editor/text_editor.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as Emulation from '../emulation/emulation.js';\nimport * as Media from '../media/media.js';\n\nimport * as ElementsComponents from './components/components.js';\nimport {canGetJSPath, cssPath, jsPath, xPath} from './DOMPath.js';\nimport {getElementIssueDetails} from './ElementIssueUtils.js';\nimport {ElementsPanel} from './ElementsPanel.js';\nimport {type ElementsTreeOutline, MappedCharToEntity} from './ElementsTreeOutline.js';\nimport {ImagePreviewPopover} from './ImagePreviewPopover.js';\nimport {getRegisteredDecorators, type MarkerDecorator, type MarkerDecoratorRegistration} from './MarkerDecorator.js';\n\nconst UIStrings = {\n  /**\n   * @description Title for Ad adorner. This iframe is marked as advertisement frame.\n   */\n  thisFrameWasIdentifiedAsAnAd: 'This frame was identified as an ad frame',\n  /**\n   * @description A context menu item in the Elements panel. Force is used as a verb, indicating intention to make the state change.\n   */\n  forceState: 'Force state',\n  /**\n   * @description Hint element title in Elements Tree Element of the Elements panel\n   * @example {0} PH1\n   */\n  useSInTheConsoleToReferToThis: 'Use {PH1} in the console to refer to this element.',\n  /**\n   * @description A context menu item in the Elements Tree Element of the Elements panel\n   */\n  addAttribute: 'Add attribute',\n  /**\n   * @description Text to modify the attribute of an item\n   */\n  editAttribute: 'Edit attribute',\n  /**\n   * @description Text to focus on something\n   */\n  focus: 'Focus',\n  /**\n   * @description Text to scroll the displayed content into view\n   */\n  scrollIntoView: 'Scroll into view',\n  /**\n   * @description A context menu item in the Elements Tree Element of the Elements panel\n   */\n  editText: 'Edit text',\n  /**\n   * @description A context menu item in the Elements Tree Element of the Elements panel\n   */\n  editAsHtml: 'Edit as HTML',\n  /**\n   * @description Text to cut an element, cut should be used as a verb\n   */\n  cut: 'Cut',\n  /**\n   * @description Text for copying, copy should be used as a verb\n   */\n  copy: 'Copy',\n  /**\n   * @description Text to paste an element, paste should be used as a verb\n   */\n  paste: 'Paste',\n  /**\n   * @description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n   */\n  copyOuterhtml: 'Copy outerHTML',\n  /**\n   * @description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n   */\n  copySelector: 'Copy `selector`',\n  /**\n   * @description Text in Elements Tree Element of the Elements panel\n   */\n  copyJsPath: 'Copy JS path',\n  /**\n   * @description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n   */\n  copyStyles: 'Copy styles',\n  /**\n   * @description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n   */\n  copyXpath: 'Copy XPath',\n  /**\n   * @description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n   */\n  copyFullXpath: 'Copy full XPath',\n  /**\n   * @description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n   */\n  copyElement: 'Copy element',\n  /**\n   * @description A context menu item in the Elements Tree Element of the Elements panel\n   */\n  duplicateElement: 'Duplicate element',\n  /**\n   * @description Text to hide an element\n   */\n  hideElement: 'Hide element',\n  /**\n   * @description A context menu item in the Elements Tree Element of the Elements panel\n   */\n  deleteElement: 'Delete element',\n  /**\n   * @description Text to expand something recursively\n   */\n  expandRecursively: 'Expand recursively',\n  /**\n   * @description Text to collapse children of a parent group\n   */\n  collapseChildren: 'Collapse children',\n  /**\n   * @description Title of an action in the emulation tool to capture node screenshot\n   */\n  captureNodeScreenshot: 'Capture node screenshot',\n  /**\n   * @description Title of a context menu item. When clicked DevTools goes to the Application panel and shows this specific iframe's details\n   */\n  showFrameDetails: 'Show `iframe` details',\n  /**\n   * @description Text in Elements Tree Element of the Elements panel\n   */\n  valueIsTooLargeToEdit: '<value is too large to edit>',\n  /**\n   * @description Element text content in Elements Tree Element of the Elements panel\n   */\n  children: 'Children:',\n  /**\n   * @description ARIA label for Elements Tree adorners\n   */\n  enableGridMode: 'Enable grid mode',\n  /**\n   * @description ARIA label for Elements Tree adorners\n   */\n  disableGridMode: 'Disable grid mode',\n  /**\n   * @description ARIA label for Elements Tree adorners\n   */\n  enableMasonryMode: 'Enable masonry mode',\n  /**\n   * @description ARIA label for Elements Tree adorners\n   */\n  disableMasonryMode: 'Disable masonry mode',\n  /**\n   * @description ARIA label for an elements tree adorner\n   */\n  forceOpenPopover: 'Keep this popover open',\n  /**\n   * @description ARIA label for an elements tree adorner\n   */\n  stopForceOpenPopover: 'Stop keeping this popover open',\n  /**\n   * @description Label of the adorner for flex elements in the Elements panel\n   */\n  enableFlexMode: 'Enable flex mode',\n  /**\n   * @description Label of the adorner for flex elements in the Elements panel\n   */\n  disableFlexMode: 'Disable flex mode',\n  /**\n   * @description Label of an adorner in the Elements panel. When clicked, it enables\n   * the overlay showing CSS scroll snapping for the current element.\n   */\n  enableScrollSnap: 'Enable scroll-snap overlay',\n  /**\n   * @description Label of an adorner in the Elements panel. When clicked, it disables\n   * the overlay showing CSS scroll snapping for the current element.\n   */\n  disableScrollSnap: 'Disable scroll-snap overlay',\n  /**\n   * @description Label of an adorner in the Elements panel. When clicked, it redirects\n   * to the Media Panel.\n   */\n  openMediaPanel: 'Jump to Media panel',\n  /**\n   * @description Text of a tooltip to redirect to another element in the Elements panel\n   */\n  showPopoverTarget: 'Show element associated with the `popovertarget` attribute',\n  /**\n   * @description Text of a tooltip to redirect to another element in the Elements panel, associated with the `interesttarget` attribute\n   */\n  showInterestTarget: 'Show element associated with the `interesttarget` attribute',\n  /**\n   * @description Text of a tooltip to redirect to another element in the Elements panel, associated with the `commandfor` attribute\n   */\n  showCommandForTarget: 'Show element associated with the `commandfor` attribute',\n  /**\n   * @description Text of the tooltip for scroll adorner.\n   */\n  elementHasScrollableOverflow: 'This element has a scrollable overflow',\n  /**\n   * @description Text of a context menu item to redirect to the AI assistance panel and to start a chat.\n   */\n  startAChat: 'Start a chat',\n  /**\n   * @description Context menu item in Elements panel to assess visibility of an element via AI.\n   */\n  assessVisibility: 'Assess visibility',\n  /**\n   * @description Context menu item in Elements panel to center an element via AI.\n   */\n  centerElement: 'Center element',\n  /**\n   * @description Context menu item in Elements panel to wrap flex items via AI.\n   */\n  wrapTheseItems: 'Wrap these items',\n  /**\n   * @description Context menu item in Elements panel to distribute flex items evenly via AI.\n   */\n  distributeItemsEvenly: 'Distribute items evenly',\n  /**\n   * @description Context menu item in Elements panel to explain flexbox via AI.\n   */\n  explainFlexbox: 'Explain flexbox',\n  /**\n   * @description Context menu item in Elements panel to align grid items via AI.\n   */\n  alignItems: 'Align items',\n  /**\n   * @description Context menu item in Elements panel to add padding/gap to grid via AI.\n   */\n  addPadding: 'Add padding',\n  /**\n   * @description Context menu item in Elements panel to explain grid layout via AI.\n   */\n  explainGridLayout: 'Explain grid layout',\n  /**\n   * @description Context menu item in Elements panel to find grid definition for a subgrid item via AI.\n   */\n  findGridDefinition: 'Find grid definition',\n  /**\n   * @description Context menu item in Elements panel to change parent grid properties for a subgrid item via AI.\n   */\n  changeParentProperties: 'Change parent properties',\n  /**\n   * @description Context menu item in Elements panel to explain subgrids via AI.\n   */\n  explainSubgrids: 'Explain subgrids',\n  /**\n   * @description Context menu item in Elements panel to remove scrollbars via AI.\n   */\n  removeScrollbars: 'Remove scrollbars',\n  /**\n   * @description Context menu item in Elements panel to style scrollbars via AI.\n   */\n  styleScrollbars: 'Style scrollbars',\n  /**\n   * @description Context menu item in Elements panel to explain scrollbars via AI.\n   */\n  explainScrollbars: 'Explain scrollbars',\n  /**\n   * @description Context menu item in Elements panel to explain container queries via AI.\n   */\n  explainContainerQueries: 'Explain container queries',\n  /**\n   * @description Context menu item in Elements panel to explain container types via AI.\n   */\n  explainContainerTypes: 'Explain container types',\n  /**\n   * @description Context menu item in Elements panel to explain container context via AI.\n   */\n  explainContainerContext: 'Explain container context',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementsTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst enum TagType {\n  OPENING = 'OPENING_TAG',\n  CLOSING = 'CLOSING_TAG',\n}\n\ninterface OpeningTagContext {\n  tagType: TagType.OPENING;\n  readonly adornerContainer: HTMLElement;\n  adorners: Set<Adorners.Adorner.Adorner>;\n  styleAdorners: Set<Adorners.Adorner.Adorner>;\n  readonly adornersThrottler: Common.Throttler.Throttler;\n  canAddAttributes: boolean;\n  slot?: Adorners.Adorner.Adorner;\n}\n\ninterface ClosingTagContext {\n  tagType: TagType.CLOSING;\n}\n\nexport type TagTypeContext = OpeningTagContext|ClosingTagContext;\n\nexport function isOpeningTag(context: TagTypeContext): context is OpeningTagContext {\n  return context.tagType === TagType.OPENING;\n}\n\nexport class ElementsTreeElement extends UI.TreeOutline.TreeElement {\n  nodeInternal: SDK.DOMModel.DOMNode;\n  override treeOutline: ElementsTreeOutline|null;\n  private gutterContainer: HTMLElement;\n  private readonly decorationsElement: HTMLElement;\n  private searchQuery: string|null;\n  #expandedChildrenLimit: number;\n  private readonly decorationsThrottler: Common.Throttler.Throttler;\n  private inClipboard: boolean;\n  #hovered: boolean;\n  private editing: EditorHandles|null;\n  private htmlEditElement?: HTMLElement;\n  expandAllButtonElement: UI.TreeOutline.TreeElement|null;\n  selectionElement?: HTMLDivElement;\n  private hintElement?: HTMLElement;\n  private aiButtonContainer?: HTMLElement;\n  private contentElement: HTMLElement;\n  #elementIssues = new Map<string, IssuesManager.Issue.Issue>();\n  #nodeElementToIssue = new Map<Element, IssuesManager.Issue.Issue[]>();\n  #highlights: Range[] = [];\n\n  readonly tagTypeContext: TagTypeContext;\n\n  constructor(node: SDK.DOMModel.DOMNode, isClosingTag?: boolean) {\n    // The title will be updated in onattach.\n    super();\n    this.nodeInternal = node;\n    this.treeOutline = null;\n    this.listItemElement.setAttribute(\n        'jslog', `${VisualLogging.treeItem().parent('elementsTreeOutline').track({\n          keydown: 'ArrowUp|ArrowDown|ArrowLeft|ArrowRight|Backspace|Delete|Enter|Space|Home|End',\n          drag: true,\n          click: true,\n        })}`);\n    this.contentElement = this.listItemElement.createChild('div');\n    this.gutterContainer = this.contentElement.createChild('div', 'gutter-container');\n    this.gutterContainer.addEventListener('click', this.showContextMenu.bind(this));\n    const gutterMenuIcon = new IconButton.Icon.Icon();\n    gutterMenuIcon.name = 'dots-horizontal';\n    this.gutterContainer.append(gutterMenuIcon);\n    this.decorationsElement = this.gutterContainer.createChild('div', 'hidden');\n\n    this.searchQuery = null;\n    this.#expandedChildrenLimit = InitialChildrenLimit;\n    this.decorationsThrottler = new Common.Throttler.Throttler(100);\n\n    this.inClipboard = false;\n    this.#hovered = false;\n\n    this.editing = null;\n\n    if (isClosingTag) {\n      this.tagTypeContext = {tagType: TagType.CLOSING};\n    } else {\n      this.tagTypeContext = {\n        tagType: TagType.OPENING,\n        adornerContainer: this.contentElement.createChild('div', 'adorner-container hidden'),\n        adorners: new Set(),\n        styleAdorners: new Set(),\n        adornersThrottler: new Common.Throttler.Throttler(100),\n        canAddAttributes: this.nodeInternal.nodeType() === Node.ELEMENT_NODE,\n      };\n      void this.updateStyleAdorners();\n\n      if (node.isAdFrameNode()) {\n        const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n            ElementsComponents.AdornerManager.RegisteredAdorners.AD);\n        const adorner = this.adorn(config);\n        UI.Tooltip.Tooltip.install(adorner, i18nString(UIStrings.thisFrameWasIdentifiedAsAnAd));\n      }\n\n      void this.updateScrollAdorner();\n    }\n    this.expandAllButtonElement = null;\n\n    if (this.nodeInternal.retained && !this.isClosingTag()) {\n      const icon = new IconButton.Icon.Icon();\n      icon.name = 'small-status-dot';\n      icon.style.color = 'var(--icon-error)';\n      icon.classList.add('extra-small');\n      icon.style.setProperty('vertical-align', 'middle');\n      this.setLeadingIcons([icon]);\n      this.listItemNode.classList.add('detached-elements-detached-node');\n      this.listItemNode.style.setProperty('display', '-webkit-box');\n      this.listItemNode.setAttribute('title', 'Retained Node');\n    }\n\n    if (this.nodeInternal.detached && !this.isClosingTag()) {\n      this.listItemNode.setAttribute('title', 'Detached Tree Node');\n    }\n  }\n\n  static animateOnDOMUpdate(treeElement: ElementsTreeElement): void {\n    const tagName = treeElement.listItemElement.querySelector('.webkit-html-tag-name');\n    UI.UIUtils.runCSSAnimationOnce(tagName || treeElement.listItemElement, 'dom-update-highlight');\n  }\n\n  static visibleShadowRoots(node: SDK.DOMModel.DOMNode): SDK.DOMModel.DOMNode[] {\n    let roots = node.shadowRoots();\n    if (roots.length && !Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom').get()) {\n      roots = roots.filter(filter);\n    }\n\n    function filter(root: SDK.DOMModel.DOMNode): boolean {\n      return root.shadowRootType() !== SDK.DOMModel.DOMNode.ShadowRootTypes.UserAgent;\n    }\n    return roots;\n  }\n\n  static canShowInlineText(node: SDK.DOMModel.DOMNode): boolean {\n    if (node.contentDocument() || node.templateContent() || ElementsTreeElement.visibleShadowRoots(node).length ||\n        node.hasPseudoElements()) {\n      return false;\n    }\n    if (node.nodeType() !== Node.ELEMENT_NODE) {\n      return false;\n    }\n    if (!node.firstChild || node.firstChild !== node.lastChild || node.firstChild.nodeType() !== Node.TEXT_NODE) {\n      return false;\n    }\n    const textChild = node.firstChild;\n    const maxInlineTextChildLength = 80;\n    if (textChild.nodeValue().length < maxInlineTextChildLength) {\n      return true;\n    }\n    return false;\n  }\n\n  static populateForcedPseudoStateItems(contextMenu: UI.ContextMenu.ContextMenu, node: SDK.DOMModel.DOMNode): void {\n    const pseudoClasses = ['active', 'hover', 'focus', 'visited', 'focus-within', 'focus-visible'];\n    const forcedPseudoState = node.domModel().cssModel().pseudoState(node);\n    const stateMenu =\n        contextMenu.debugSection().appendSubMenuItem(i18nString(UIStrings.forceState), false, 'force-state');\n    for (const pseudoClass of pseudoClasses) {\n      const pseudoClassForced = forcedPseudoState ? forcedPseudoState.indexOf(pseudoClass) >= 0 : false;\n      stateMenu.defaultSection().appendCheckboxItem(\n          ':' + pseudoClass, setPseudoStateCallback.bind(null, pseudoClass, !pseudoClassForced),\n          {checked: pseudoClassForced, jslogContext: pseudoClass});\n    }\n\n    function setPseudoStateCallback(pseudoState: string, enabled: boolean): void {\n      node.domModel().cssModel().forcePseudoState(node, pseudoState, enabled);\n    }\n  }\n\n  isClosingTag(): boolean {\n    return !isOpeningTag(this.tagTypeContext);\n  }\n\n  node(): SDK.DOMModel.DOMNode {\n    return this.nodeInternal;\n  }\n\n  isEditing(): boolean {\n    return Boolean(this.editing);\n  }\n\n  highlightSearchResults(searchQuery: string): void {\n    this.searchQuery = searchQuery;\n    if (!this.editing) {\n      this.#highlightSearchResults();\n    }\n  }\n\n  hideSearchHighlights(): void {\n    Highlighting.HighlightManager.HighlightManager.instance().removeHighlights(this.#highlights);\n    this.#highlights = [];\n  }\n\n  setInClipboard(inClipboard: boolean): void {\n    if (this.inClipboard === inClipboard) {\n      return;\n    }\n    this.inClipboard = inClipboard;\n    this.listItemElement.classList.toggle('in-clipboard', inClipboard);\n  }\n\n  get hovered(): boolean {\n    return this.#hovered;\n  }\n\n  set hovered(isHovered: boolean) {\n    if (this.#hovered === isHovered) {\n      return;\n    }\n\n    if (isHovered && !this.aiButtonContainer) {\n      this.createAiButton();\n    } else if (!isHovered && this.aiButtonContainer) {\n      this.aiButtonContainer.remove();\n      delete this.aiButtonContainer;\n    }\n\n    this.#hovered = isHovered;\n\n    if (this.listItemElement) {\n      if (isHovered) {\n        this.createSelection();\n        this.listItemElement.classList.add('hovered');\n      } else {\n        this.listItemElement.classList.remove('hovered');\n      }\n    }\n  }\n\n  addIssue(newIssue: IssuesManager.Issue.Issue): void {\n    if (this.#elementIssues.has(newIssue.primaryKey())) {\n      return;\n    }\n\n    this.#elementIssues.set(newIssue.primaryKey(), newIssue);\n    this.#applyIssueStyleAndTooltip(newIssue);\n  }\n\n  #applyIssueStyleAndTooltip(issue: IssuesManager.Issue.Issue): void {\n    const elementIssueDetails = getElementIssueDetails(issue);\n    if (!elementIssueDetails) {\n      return;\n    }\n\n    if (elementIssueDetails.attribute) {\n      this.#highlightViolatingAttr(elementIssueDetails.attribute, issue);\n    } else {\n      this.#highlightTagAsViolating(issue);\n    }\n  }\n\n  get issuesByNodeElement(): Map<Element, IssuesManager.Issue.Issue[]> {\n    return this.#nodeElementToIssue;\n  }\n\n  #highlightViolatingAttr(name: string, issue: IssuesManager.Issue.Issue): void {\n    const tag = this.listItemElement.getElementsByClassName('webkit-html-tag')[0];\n    const attributes = tag.getElementsByClassName('webkit-html-attribute');\n    for (const attribute of attributes) {\n      if (attribute.getElementsByClassName('webkit-html-attribute-name')[0].textContent === name) {\n        const attributeElement = attribute.getElementsByClassName('webkit-html-attribute-name')[0];\n        attributeElement.classList.add('violating-element');\n        this.#updateNodeElementToIssue(attributeElement, issue);\n      }\n    }\n  }\n\n  #highlightTagAsViolating(issue: IssuesManager.Issue.Issue): void {\n    const tagElement = this.listItemElement.getElementsByClassName('webkit-html-tag-name')[0];\n    tagElement.classList.add('violating-element');\n    this.#updateNodeElementToIssue(tagElement, issue);\n  }\n\n  #updateNodeElementToIssue(nodeElement: Element, issue: IssuesManager.Issue.Issue): void {\n    let issues = this.#nodeElementToIssue.get(nodeElement);\n    if (!issues) {\n      issues = [];\n      this.#nodeElementToIssue.set(nodeElement, issues);\n    }\n    issues.push(issue);\n    this.treeOutline?.updateNodeElementToIssue(nodeElement, issues);\n  }\n\n  expandedChildrenLimit(): number {\n    return this.#expandedChildrenLimit;\n  }\n\n  setExpandedChildrenLimit(expandedChildrenLimit: number): void {\n    this.#expandedChildrenLimit = expandedChildrenLimit;\n  }\n\n  createSlotLink(nodeShortcut: SDK.DOMModel.DOMNodeShortcut|null): void {\n    if (!isOpeningTag(this.tagTypeContext)) {\n      return;\n    }\n    if (nodeShortcut) {\n      const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n          ElementsComponents.AdornerManager.RegisteredAdorners.SLOT);\n      this.tagTypeContext.slot = this.adornSlot(config, this.tagTypeContext);\n      const deferredNode = nodeShortcut.deferredNode;\n      this.tagTypeContext.slot.addEventListener('click', () => {\n        deferredNode.resolve(node => {\n          void Common.Revealer.reveal(node);\n        });\n      });\n      this.tagTypeContext.slot.addEventListener('mousedown', e => e.consume(), false);\n    }\n  }\n\n  private createSelection(): void {\n    const contentElement = this.contentElement;\n    if (!contentElement) {\n      return;\n    }\n\n    if (!this.selectionElement) {\n      this.selectionElement = document.createElement('div');\n      this.selectionElement.className = 'selection fill';\n      this.selectionElement.style.setProperty('margin-left', (-this.computeLeftIndent()) + 'px');\n      contentElement.prepend(this.selectionElement);\n    }\n  }\n\n  private createHint(): void {\n    if (this.contentElement && !this.hintElement) {\n      this.hintElement = this.contentElement.createChild('span', 'selected-hint');\n      const selectedElementCommand = '$0';\n      UI.Tooltip.Tooltip.install(\n          this.hintElement, i18nString(UIStrings.useSInTheConsoleToReferToThis, {PH1: selectedElementCommand}));\n      UI.ARIAUtils.setHidden(this.hintElement, true);\n    }\n  }\n\n  private createAiButton(): void {\n    const isElementNode = this.node().nodeType() === Node.ELEMENT_NODE;\n    if (!isElementNode ||\n        !UI.ActionRegistry.ActionRegistry.instance().hasAction('freestyler.elements-floating-button')) {\n      return;\n    }\n\n    const action = UI.ActionRegistry.ActionRegistry.instance().getAction('freestyler.elements-floating-button');\n    if (this.contentElement && !this.aiButtonContainer) {\n      this.aiButtonContainer = this.contentElement.createChild('span', 'ai-button-container');\n      const floatingButton = Buttons.FloatingButton.create('smart-assistant', action.title(), 'ask-ai');\n      floatingButton.addEventListener('click', ev => {\n        ev.stopPropagation();\n        this.select(true, false);\n        void action.execute();\n      }, {capture: true});\n      floatingButton.addEventListener('mousedown', ev => {\n        ev.stopPropagation();\n      }, {capture: true});\n      this.aiButtonContainer.appendChild(floatingButton);\n    }\n  }\n\n  override onbind(): void {\n    if (this.treeOutline && !this.isClosingTag()) {\n      this.treeOutline.treeElementByNode.set(this.nodeInternal, this);\n    }\n  }\n\n  override onunbind(): void {\n    if (this.editing) {\n      this.editing.cancel();\n    }\n    if (this.treeOutline && this.treeOutline.treeElementByNode.get(this.nodeInternal) === this) {\n      this.treeOutline.treeElementByNode.delete(this.nodeInternal);\n    }\n  }\n\n  override onattach(): void {\n    if (this.#hovered) {\n      this.createSelection();\n      this.listItemElement.classList.add('hovered');\n    }\n\n    this.updateTitle();\n    this.listItemElement.draggable = true;\n  }\n\n  override async onpopulate(): Promise<void> {\n    if (this.treeOutline) {\n      return await this.treeOutline.populateTreeElement(this);\n    }\n  }\n\n  override async expandRecursively(): Promise<void> {\n    await this.nodeInternal.getSubtree(-1, true);\n    await super.expandRecursively(Number.MAX_VALUE);\n  }\n\n  override onexpand(): void {\n    if (this.isClosingTag()) {\n      return;\n    }\n\n    this.updateTitle();\n  }\n\n  override oncollapse(): void {\n    if (this.isClosingTag()) {\n      return;\n    }\n\n    this.updateTitle();\n  }\n\n  override select(omitFocus?: boolean, selectedByUser?: boolean): boolean {\n    if (this.editing) {\n      return false;\n    }\n    return super.select(omitFocus, selectedByUser);\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    if (!this.treeOutline) {\n      return false;\n    }\n    this.treeOutline.suppressRevealAndSelect = true;\n    this.treeOutline.selectDOMNode(this.nodeInternal, selectedByUser);\n    if (selectedByUser) {\n      this.nodeInternal.highlight();\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.ChangeInspectedNodeInElementsPanel);\n    }\n    this.createSelection();\n    this.createHint();\n    this.treeOutline.suppressRevealAndSelect = false;\n    return true;\n  }\n\n  override ondelete(): boolean {\n    if (!this.treeOutline) {\n      return false;\n    }\n    const startTagTreeElement = this.treeOutline.findTreeElement(this.nodeInternal);\n    startTagTreeElement ? (void startTagTreeElement.remove()) : (void this.remove());\n    return true;\n  }\n\n  override onenter(): boolean {\n    // On Enter or Return start editing the first attribute\n    // or create a new attribute on the selected element.\n    if (this.editing) {\n      return false;\n    }\n\n    this.startEditing();\n\n    // prevent a newline from being immediately inserted\n    return true;\n  }\n\n  override selectOnMouseDown(event: MouseEvent): void {\n    super.selectOnMouseDown(event);\n\n    if (this.editing) {\n      return;\n    }\n\n    // Prevent selecting the nearest word on double click.\n    if (event.detail >= 2) {\n      event.preventDefault();\n    }\n  }\n\n  override ondblclick(event: Event): boolean {\n    if (this.editing || this.isClosingTag()) {\n      return false;\n    }\n    if (this.startEditingTarget((event.target as Element))) {\n      return false;\n    }\n\n    if (this.isExpandable() && !this.expanded) {\n      this.expand();\n    }\n    return false;\n  }\n\n  hasEditableNode(): boolean {\n    return !this.nodeInternal.isShadowRoot() && !this.nodeInternal.ancestorUserAgentShadowRoot();\n  }\n\n  private insertInLastAttributePosition(tag: Element, node: Element): void {\n    if (tag.getElementsByClassName('webkit-html-attribute').length > 0) {\n      tag.insertBefore(node, tag.lastChild);\n    } else if (tag.textContent !== null) {\n      const matchResult = tag.textContent.match(/^<(.*?)>$/);\n      if (!matchResult) {\n        return;\n      }\n      const nodeName = matchResult[1];\n      tag.textContent = '';\n      UI.UIUtils.createTextChild(tag, '<' + nodeName);\n      tag.appendChild(node);\n      UI.UIUtils.createTextChild(tag, '>');\n    }\n  }\n\n  private startEditingTarget(eventTarget: Element): boolean {\n    if (!this.treeOutline || this.treeOutline.selectedDOMNode() !== this.nodeInternal) {\n      return false;\n    }\n\n    if (this.nodeInternal.nodeType() !== Node.ELEMENT_NODE && this.nodeInternal.nodeType() !== Node.TEXT_NODE) {\n      return false;\n    }\n\n    const textNode = eventTarget.enclosingNodeOrSelfWithClass('webkit-html-text-node');\n    if (textNode) {\n      return this.startEditingTextNode(textNode);\n    }\n\n    const attribute = eventTarget.enclosingNodeOrSelfWithClass('webkit-html-attribute');\n    if (attribute) {\n      return this.startEditingAttribute(attribute, eventTarget);\n    }\n\n    const tagName = eventTarget.enclosingNodeOrSelfWithClass('webkit-html-tag-name');\n    if (tagName) {\n      return this.startEditingTagName(tagName);\n    }\n\n    const newAttribute = eventTarget.enclosingNodeOrSelfWithClass('add-attribute');\n    if (newAttribute) {\n      return this.addNewAttribute();\n    }\n\n    return false;\n  }\n\n  private showContextMenu(event: Event): void {\n    this.treeOutline && void this.treeOutline.showContextMenu(this, event);\n  }\n\n  async populateTagContextMenu(contextMenu: UI.ContextMenu.ContextMenu, event: Event): Promise<void> {\n    // Add attribute-related actions.\n    const treeElement =\n        this.isClosingTag() && this.treeOutline ? this.treeOutline.findTreeElement(this.nodeInternal) : this;\n    if (!treeElement) {\n      return;\n    }\n    contextMenu.editSection().appendItem(\n        i18nString(UIStrings.addAttribute), treeElement.addNewAttribute.bind(treeElement),\n        {jslogContext: 'add-attribute'});\n\n    const target = (event.target as Element);\n    const attribute = target.enclosingNodeOrSelfWithClass('webkit-html-attribute');\n    const newAttribute = target.enclosingNodeOrSelfWithClass('add-attribute');\n    if (attribute && !newAttribute) {\n      contextMenu.editSection().appendItem(\n          i18nString(UIStrings.editAttribute), this.startEditingAttribute.bind(this, attribute, target),\n          {jslogContext: 'edit-attribute'});\n    }\n    await this.populateNodeContextMenu(contextMenu);\n    ElementsTreeElement.populateForcedPseudoStateItems(contextMenu, treeElement.node());\n    this.populateScrollIntoView(contextMenu);\n    contextMenu.viewSection().appendItem(i18nString(UIStrings.focus), async () => {\n      await this.nodeInternal.focus();\n    }, {jslogContext: 'focus'});\n  }\n\n  populatePseudoElementContextMenu(contextMenu: UI.ContextMenu.ContextMenu): void {\n    if (this.childCount() !== 0) {\n      this.populateExpandRecursively(contextMenu);\n    }\n\n    this.populateScrollIntoView(contextMenu);\n  }\n\n  private populateExpandRecursively(contextMenu: UI.ContextMenu.ContextMenu): void {\n    contextMenu.viewSection().appendItem(\n        i18nString(UIStrings.expandRecursively), this.expandRecursively.bind(this),\n        {jslogContext: 'expand-recursively'});\n  }\n\n  private populateScrollIntoView(contextMenu: UI.ContextMenu.ContextMenu): void {\n    contextMenu.viewSection().appendItem(\n        i18nString(UIStrings.scrollIntoView), () => this.nodeInternal.scrollIntoView(),\n        {jslogContext: 'scroll-into-view'});\n  }\n\n  async populateTextContextMenu(contextMenu: UI.ContextMenu.ContextMenu, textNode: Element): Promise<void> {\n    if (!this.editing) {\n      contextMenu.editSection().appendItem(\n          i18nString(UIStrings.editText), this.startEditingTextNode.bind(this, textNode), {jslogContext: 'edit-text'});\n    }\n    return await this.populateNodeContextMenu(contextMenu);\n  }\n\n  async populateNodeContextMenu(contextMenu: UI.ContextMenu.ContextMenu): Promise<void> {\n    // Add free-form node-related actions.\n    const isEditable = this.hasEditableNode();\n    // clang-format off\n    if (isEditable && !this.editing) {\n      contextMenu.editSection().appendItem(i18nString(UIStrings.editAsHtml), this.editAsHTML.bind(this), {jslogContext: 'elements.edit-as-html'});\n    }\n    // clang-format on\n    const isShadowRoot = this.nodeInternal.isShadowRoot();\n\n    const createShortcut = UI.KeyboardShortcut.KeyboardShortcut.shortcutToString.bind(null);\n    const modifier = UI.KeyboardShortcut.Modifiers.CtrlOrMeta.value;\n    const treeOutline = this.treeOutline;\n    if (!treeOutline) {\n      return;\n    }\n    let menuItem;\n\n    const openAiAssistanceId = 'freestyler.element-panel-context';\n    if (UI.ActionRegistry.ActionRegistry.instance().hasAction(openAiAssistanceId)) {\n      function appendSubmenuPromptAction(\n          submenu: UI.ContextMenu.SubMenu, action: UI.ActionRegistration.Action, label: Common.UIString.LocalizedString,\n          prompt: string, jslogContext: string): void {\n        submenu.defaultSection().appendItem(label, () => {\n          void action.execute({prompt});\n          UI.UIUtils.PromotionManager.instance().recordFeatureInteraction(openAiAssistanceId);\n        }, {disabled: !action.enabled(), jslogContext});\n      }\n\n      UI.Context.Context.instance().setFlavor(SDK.DOMModel.DOMNode, this.nodeInternal);\n      if (Root.Runtime.hostConfig.devToolsAiSubmenuPrompts?.enabled) {\n        const action = UI.ActionRegistry.ActionRegistry.instance().getAction(openAiAssistanceId);\n        // Register new badge under the `devToolsAiSubmenuPrompts` feature, as the freestyler one is already used in ViewManager.\n        // Additionally register with the PromotionManager. Since we use two features for freeestyler here (submenu or debug with ai),\n        // the back-end will not be able to identify them as one as soon as we launch, and show the new badge\n        // on the 'Debug with Ai' item even if the user was already seeing it during the study if they were in the other study group.\n        const featureName = UI.UIUtils.PromotionManager.instance().maybeShowPromotion(openAiAssistanceId) ?\n            Root.Runtime.hostConfig.devToolsAiSubmenuPrompts?.featureName :\n            undefined;\n        const submenu =\n            contextMenu.footerSection().appendSubMenuItem(action.title(), false, openAiAssistanceId, featureName);\n        submenu.defaultSection().appendAction(openAiAssistanceId, i18nString(UIStrings.startAChat));\n\n        const submenuConfigs = [\n          {\n            condition: (props: SDK.CSSModel.LayoutProperties|null): boolean => Boolean(props?.isFlex),\n            items: [\n              {\n                label: i18nString(UIStrings.wrapTheseItems),\n                prompt: 'How can I make flex items wrap?',\n                jslogContextSuffix: '.flex-wrap',\n              },\n              {\n                label: i18nString(UIStrings.distributeItemsEvenly),\n                prompt: 'How do I distribute flex items evenly?',\n                jslogContextSuffix: '.flex-distribute',\n              },\n              {\n                label: i18nString(UIStrings.explainFlexbox),\n                prompt: 'What is flexbox?',\n                jslogContextSuffix: '.flex-what',\n              },\n            ],\n          },\n          {\n            condition: (props: SDK.CSSModel.LayoutProperties|null): boolean =>\n                Boolean(props?.isGrid && !props?.isSubgrid),\n            items: [\n              {\n                label: i18nString(UIStrings.alignItems),\n                prompt: 'How do I align items in a grid?',\n                jslogContextSuffix: '.grid-align',\n              },\n              {\n                label: i18nString(UIStrings.addPadding),\n                prompt: 'How to add spacing between grid items?',\n                jslogContextSuffix: '.grid-gap',\n              },\n              {\n                label: i18nString(UIStrings.explainGridLayout),\n                prompt: 'How does grid layout work?',\n                jslogContextSuffix: '.grid-how',\n              },\n            ],\n          },\n          {\n            condition: (props: SDK.CSSModel.LayoutProperties|null): boolean => Boolean(props?.isSubgrid),\n            items: [\n              {\n                label: i18nString(UIStrings.findGridDefinition),\n                prompt: 'Where is this grid defined?',\n                jslogContextSuffix: '.subgrid-where',\n              },\n              {\n                label: i18nString(UIStrings.changeParentProperties),\n                prompt: 'How to overwrite parent grid properties?',\n                jslogContextSuffix: '.subgrid-override',\n              },\n              {\n                label: i18nString(UIStrings.explainSubgrids),\n                prompt: 'How do subgrids work?',\n                jslogContextSuffix: '.subgrid-how',\n              },\n            ],\n          },\n          {\n            condition: (props: SDK.CSSModel.LayoutProperties|null): boolean => Boolean(props?.hasScroll),\n            items: [\n              {\n                label: i18nString(UIStrings.removeScrollbars),\n                prompt: 'How do I remove scrollbars for this element?',\n                jslogContextSuffix: '.scroll-remove',\n              },\n              {\n                label: i18nString(UIStrings.styleScrollbars),\n                prompt: 'How can I style a scrollbar?',\n                jslogContextSuffix: '.scroll-style',\n              },\n              {\n                label: i18nString(UIStrings.explainScrollbars),\n                prompt: 'Why does this element scroll?',\n                jslogContextSuffix: '.scroll-why',\n              },\n            ],\n          },\n          {\n            condition: (props: SDK.CSSModel.LayoutProperties|null): boolean => Boolean(props?.isContainer),\n            items: [\n              {\n                label: i18nString(UIStrings.explainContainerQueries),\n                prompt: 'What are container queries?',\n                jslogContextSuffix: '.container-what',\n              },\n              {\n                label: i18nString(UIStrings.explainContainerTypes),\n                prompt: 'How do I use container-type?',\n                jslogContextSuffix: '.container-how',\n              },\n              {\n                label: i18nString(UIStrings.explainContainerContext),\n                prompt: 'What\\'s the container context for this element?',\n                jslogContextSuffix: '.container-context',\n              },\n            ],\n          },\n          {\n            // Default items\n            condition: (): boolean => true,\n            items: [\n              {\n                label: i18nString(UIStrings.assessVisibility),\n                prompt: 'Why isn’t this element visible?',\n                jslogContextSuffix: '.visibility',\n              },\n              {\n                label: i18nString(UIStrings.centerElement),\n                prompt: 'How do I center this element?',\n                jslogContextSuffix: '.center',\n              },\n            ],\n          },\n        ];\n\n        const layoutProps =\n            await this.nodeInternal.domModel().cssModel().getLayoutPropertiesFromComputedStyle(this.nodeInternal.id);\n        const config = submenuConfigs.find(c => c.condition(layoutProps));\n        if (config) {\n          for (const item of config.items) {\n            appendSubmenuPromptAction(\n                submenu, action, item.label, item.prompt, openAiAssistanceId + item.jslogContextSuffix);\n          }\n        }\n      } else if (Root.Runtime.hostConfig.devToolsAiDebugWithAi?.enabled) {\n        // Register new badge under the `devToolsAiDebugWithAi` feature, as the freestyler one is already used in ViewManager.\n        // Additionally register with the PromotionManager. Since we use two different features for freeestyler here (submenu or debug with ai),\n        // the back-end will not be able to identify them as one as soon as we launch, and show the new badge\n        // on the 'Debug with Ai' item even if the user was already seeing it during the study if they were in the other study group.\n        const featureName = UI.UIUtils.PromotionManager.instance().maybeShowPromotion(openAiAssistanceId) ?\n            Root.Runtime.hostConfig.devToolsAiDebugWithAi?.featureName :\n            undefined;\n        const action = UI.ActionRegistry.ActionRegistry.instance().getAction(openAiAssistanceId);\n        contextMenu.footerSection().appendItem(action.title(), () => {\n          void action.execute();\n          UI.UIUtils.PromotionManager.instance().recordFeatureInteraction(openAiAssistanceId);\n        }, {jslogContext: openAiAssistanceId, disabled: !action.enabled(), featureName});\n\n      } else {\n        contextMenu.footerSection().appendAction(openAiAssistanceId);\n      }\n    }\n\n    menuItem = contextMenu.clipboardSection().appendItem(\n        i18nString(UIStrings.cut), treeOutline.performCopyOrCut.bind(treeOutline, true, this.nodeInternal),\n        {disabled: !this.hasEditableNode(), jslogContext: 'cut'});\n    menuItem.setShortcut(createShortcut('X', modifier));\n\n    // Place it here so that all \"Copy\"-ing items stick together.\n    const copyMenu = contextMenu.clipboardSection().appendSubMenuItem(i18nString(UIStrings.copy), false, 'copy');\n    const section = copyMenu.section();\n    if (!isShadowRoot) {\n      menuItem = section.appendItem(\n          i18nString(UIStrings.copyOuterhtml), treeOutline.performCopyOrCut.bind(treeOutline, false, this.nodeInternal),\n          {jslogContext: 'copy-outer-html'});\n      menuItem.setShortcut(createShortcut('V', modifier));\n    }\n    if (this.nodeInternal.nodeType() === Node.ELEMENT_NODE) {\n      section.appendItem(\n          i18nString(UIStrings.copySelector), this.copyCSSPath.bind(this), {jslogContext: 'copy-selector'});\n      section.appendItem(\n          i18nString(UIStrings.copyJsPath), this.copyJSPath.bind(this),\n          {disabled: !canGetJSPath(this.nodeInternal), jslogContext: 'copy-js-path'});\n      section.appendItem(\n          i18nString(UIStrings.copyStyles), this.copyStyles.bind(this), {jslogContext: 'elements.copy-styles'});\n    }\n    if (!isShadowRoot) {\n      section.appendItem(i18nString(UIStrings.copyXpath), this.copyXPath.bind(this), {jslogContext: 'copy-xpath'});\n      section.appendItem(\n          i18nString(UIStrings.copyFullXpath), this.copyFullXPath.bind(this), {jslogContext: 'copy-full-xpath'});\n    }\n\n    menuItem = copyMenu.clipboardSection().appendItem(\n        i18nString(UIStrings.copyElement),\n        treeOutline.performCopyOrCut.bind(treeOutline, false, this.nodeInternal, true), {jslogContext: 'copy-element'});\n    menuItem.setShortcut(createShortcut('C', modifier));\n\n    if (!isShadowRoot) {\n      // Duplicate element, disabled on root element and ShadowDOM.\n      const isRootElement = !this.nodeInternal.parentNode || this.nodeInternal.parentNode.nodeName() === '#document';\n      menuItem = contextMenu.editSection().appendItem(\n          i18nString(UIStrings.duplicateElement), treeOutline.duplicateNode.bind(treeOutline, this.nodeInternal), {\n            disabled: (this.nodeInternal.isInShadowTree() || isRootElement),\n            jslogContext: 'elements.duplicate-element',\n          });\n    }\n\n    menuItem = contextMenu.clipboardSection().appendItem(\n        i18nString(UIStrings.paste), treeOutline.pasteNode.bind(treeOutline, this.nodeInternal),\n        {disabled: !treeOutline.canPaste(this.nodeInternal), jslogContext: 'paste'});\n    menuItem.setShortcut(createShortcut('V', modifier));\n\n    menuItem = contextMenu.debugSection().appendCheckboxItem(\n        i18nString(UIStrings.hideElement), treeOutline.toggleHideElement.bind(treeOutline, this.nodeInternal),\n        {checked: treeOutline.isToggledToHidden(this.nodeInternal), jslogContext: 'elements.hide-element'});\n    menuItem.setShortcut(\n        UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutTitleForAction('elements.hide-element') || '');\n\n    if (isEditable) {\n      contextMenu.editSection().appendItem(\n          i18nString(UIStrings.deleteElement), this.remove.bind(this), {jslogContext: 'delete-element'});\n    }\n\n    this.populateExpandRecursively(contextMenu);\n    contextMenu.viewSection().appendItem(\n        i18nString(UIStrings.collapseChildren), this.collapseChildren.bind(this), {jslogContext: 'collapse-children'});\n    const deviceModeWrapperAction = new Emulation.DeviceModeWrapper.ActionDelegate();\n    contextMenu.viewSection().appendItem(\n        i18nString(UIStrings.captureNodeScreenshot),\n        deviceModeWrapperAction.handleAction.bind(\n            null, UI.Context.Context.instance(), 'emulation.capture-node-screenshot'),\n        {jslogContext: 'emulation.capture-node-screenshot'});\n    if (this.nodeInternal.frameOwnerFrameId()) {\n      contextMenu.viewSection().appendItem(i18nString(UIStrings.showFrameDetails), () => {\n        const frameOwnerFrameId = this.nodeInternal.frameOwnerFrameId();\n        if (frameOwnerFrameId) {\n          const frame = SDK.FrameManager.FrameManager.instance().getFrame(frameOwnerFrameId);\n          void Common.Revealer.reveal(frame);\n        }\n      }, {jslogContext: 'show-frame-details'});\n    }\n  }\n\n  private startEditing(): boolean|undefined {\n    if (!this.treeOutline || this.treeOutline.selectedDOMNode() !== this.nodeInternal) {\n      return;\n    }\n\n    const listItem = this.listItemElement;\n\n    if (isOpeningTag(this.tagTypeContext) && this.tagTypeContext.canAddAttributes) {\n      const attribute = listItem.getElementsByClassName('webkit-html-attribute')[0];\n      if (attribute) {\n        return this.startEditingAttribute(\n            attribute, attribute.getElementsByClassName('webkit-html-attribute-value')[0]);\n      }\n\n      return this.addNewAttribute();\n    }\n\n    if (this.nodeInternal.nodeType() === Node.TEXT_NODE) {\n      const textNode = listItem.getElementsByClassName('webkit-html-text-node')[0];\n      if (textNode) {\n        return this.startEditingTextNode(textNode);\n      }\n    }\n\n    return;\n  }\n\n  private addNewAttribute(): boolean {\n    // Cannot just convert the textual html into an element without\n    // a parent node. Use a temporary span container for the HTML.\n    const container = document.createElement('span');\n    const attr = this.buildAttributeDOM(container, ' ', '', null);\n    attr.style.marginLeft = '2px';   // overrides the .editing margin rule\n    attr.style.marginRight = '2px';  // overrides the .editing margin rule\n    attr.setAttribute('jslog', `${VisualLogging.value('new-attribute').track({change: true, resize: true})}`);\n\n    const tag = this.listItemElement.getElementsByClassName('webkit-html-tag')[0];\n    this.insertInLastAttributePosition(tag, attr);\n    attr.scrollIntoViewIfNeeded(true);\n    return this.startEditingAttribute(attr, attr);\n  }\n\n  private triggerEditAttribute(attributeName: string): boolean|undefined {\n    const attributeElements = this.listItemElement.getElementsByClassName('webkit-html-attribute-name');\n    for (let i = 0, len = attributeElements.length; i < len; ++i) {\n      if (attributeElements[i].textContent === attributeName) {\n        for (let elem: (ChildNode|null) = attributeElements[i].nextSibling; elem; elem = elem.nextSibling) {\n          if (elem.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          if ((elem as Element).classList.contains('webkit-html-attribute-value')) {\n            return this.startEditingAttribute((elem.parentElement as HTMLElement), (elem as Element));\n          }\n        }\n      }\n    }\n\n    return;\n  }\n\n  private startEditingAttribute(attribute: Element, elementForSelection: Element): boolean {\n    console.assert(this.listItemElement.isAncestor(attribute));\n\n    if (UI.UIUtils.isBeingEdited(attribute)) {\n      return true;\n    }\n\n    const attributeNameElement = attribute.getElementsByClassName('webkit-html-attribute-name')[0];\n    if (!attributeNameElement) {\n      return false;\n    }\n\n    const attributeName = attributeNameElement.textContent;\n    const attributeValueElement = attribute.getElementsByClassName('webkit-html-attribute-value')[0];\n\n    // Make sure elementForSelection is not a child of attributeValueElement.\n    elementForSelection =\n        attributeValueElement.isAncestor(elementForSelection) ? attributeValueElement : elementForSelection;\n\n    function removeZeroWidthSpaceRecursive(node: Node): void {\n      if (node.nodeType === Node.TEXT_NODE) {\n        node.nodeValue = node.nodeValue ? node.nodeValue.replace(/\\u200B/g, '') : '';\n        return;\n      }\n\n      if (node.nodeType !== Node.ELEMENT_NODE) {\n        return;\n      }\n\n      for (let child: (ChildNode|null) = node.firstChild; child; child = child.nextSibling) {\n        removeZeroWidthSpaceRecursive(child);\n      }\n    }\n\n    const attributeValue = attributeName && attributeValueElement ?\n        this.nodeInternal.getAttribute(attributeName)?.replaceAll('\"', '&quot;') :\n        undefined;\n    if (attributeValue !== undefined) {\n      attributeValueElement.setTextContentTruncatedIfNeeded(\n          attributeValue, i18nString(UIStrings.valueIsTooLargeToEdit));\n    }\n\n    // Remove zero-width spaces that were added by nodeTitleInfo.\n    removeZeroWidthSpaceRecursive(attribute);\n\n    const config = new UI.InplaceEditor.Config(\n        this.attributeEditingCommitted.bind(this), this.editingCancelled.bind(this), attributeName);\n\n    function postKeyDownFinishHandler(event: Event): string {\n      UI.UIUtils.handleElementValueModifications(event, attribute);\n      return '';\n    }\n\n    if (!Common.ParsedURL.ParsedURL.fromString(attributeValueElement.textContent || '')) {\n      config.setPostKeydownFinishHandler(postKeyDownFinishHandler);\n    }\n\n    this.updateEditorHandles(attribute, config);\n\n    const componentSelection = this.listItemElement.getComponentSelection();\n    componentSelection?.selectAllChildren(elementForSelection);\n\n    return true;\n  }\n\n  private startEditingTextNode(textNodeElement: Element): boolean {\n    if (UI.UIUtils.isBeingEdited(textNodeElement)) {\n      return true;\n    }\n\n    let textNode: SDK.DOMModel.DOMNode = this.nodeInternal;\n    // We only show text nodes inline in elements if the element only\n    // has a single child, and that child is a text node.\n    if (textNode.nodeType() === Node.ELEMENT_NODE && textNode.firstChild) {\n      textNode = textNode.firstChild;\n    }\n\n    const container = textNodeElement.enclosingNodeOrSelfWithClass('webkit-html-text-node');\n    if (container) {\n      container.textContent = textNode.nodeValue();\n    }  // Strip the CSS or JS highlighting if present.\n    const config = new UI.InplaceEditor.Config(\n        this.textNodeEditingCommitted.bind(this, textNode), this.editingCancelled.bind(this), null);\n    this.updateEditorHandles(textNodeElement, config);\n    const componentSelection = this.listItemElement.getComponentSelection();\n    componentSelection?.selectAllChildren(textNodeElement);\n\n    return true;\n  }\n\n  private startEditingTagName(tagNameElement?: Element): boolean {\n    if (!tagNameElement) {\n      tagNameElement = this.listItemElement.getElementsByClassName('webkit-html-tag-name')[0];\n      if (!tagNameElement) {\n        return false;\n      }\n    }\n\n    const tagName = tagNameElement.textContent;\n    if (tagName !== null && EditTagBlocklist.has(tagName.toLowerCase())) {\n      return false;\n    }\n\n    if (UI.UIUtils.isBeingEdited(tagNameElement)) {\n      return true;\n    }\n\n    const closingTagElement = this.distinctClosingTagElement();\n\n    function keyupListener(): void {\n      if (closingTagElement && tagNameElement) {\n        closingTagElement.textContent = '</' + tagNameElement.textContent + '>';\n      }\n    }\n\n    const keydownListener = (event: Event): void => {\n      if ((event as KeyboardEvent).key !== ' ') {\n        return;\n      }\n      this.editing?.commit();\n      event.consume(true);\n    };\n\n    function editingCommitted(\n        this: ElementsTreeElement,\n        element: Element,\n        newTagName: string,\n        oldText: string|null,\n        tagName: string|null,\n        moveDirection: string,\n        ): void {\n      if (!tagNameElement) {\n        return;\n      }\n      tagNameElement.removeEventListener('keyup', keyupListener, false);\n      tagNameElement.removeEventListener('keydown', keydownListener, false);\n      this.tagNameEditingCommitted(element, newTagName, oldText, tagName, moveDirection);\n    }\n\n    function editingCancelled(this: ElementsTreeElement, element: Element, tagName: string|null): void {\n      if (!tagNameElement) {\n        return;\n      }\n      tagNameElement.removeEventListener('keyup', keyupListener, false);\n      tagNameElement.removeEventListener('keydown', keydownListener, false);\n      this.editingCancelled(element, tagName);\n    }\n\n    tagNameElement.addEventListener('keyup', keyupListener, false);\n    tagNameElement.addEventListener('keydown', keydownListener, false);\n\n    const config =\n        new UI.InplaceEditor.Config<string|null>(editingCommitted.bind(this), editingCancelled.bind(this), tagName);\n    this.updateEditorHandles(tagNameElement, config);\n    const componentSelection = this.listItemElement.getComponentSelection();\n    componentSelection?.selectAllChildren(tagNameElement);\n    return true;\n  }\n\n  private updateEditorHandles<T>(element: Element, config: UI.InplaceEditor.Config<T>): void {\n    const editorHandles = UI.InplaceEditor.InplaceEditor.startEditing(element, config);\n    if (!editorHandles) {\n      this.editing = null;\n    } else {\n      this.editing = {\n        commit: editorHandles.commit,\n        cancel: editorHandles.cancel,\n        editor: undefined,\n        resize: () => {},\n      };\n    }\n  }\n\n  private async startEditingAsHTML(\n      commitCallback: (arg0: string, arg1: string) => void, disposeCallback: () => void,\n      maybeInitialValue: string|null): Promise<void> {\n    if (maybeInitialValue === null) {\n      return;\n    }\n    if (this.editing) {\n      return;\n    }\n\n    const initialValue = convertUnicodeCharsToHTMLEntities(maybeInitialValue).text;\n    this.htmlEditElement = document.createElement('div');\n    this.htmlEditElement.className = 'source-code elements-tree-editor';\n\n    // Hide header items.\n    let child: (ChildNode|null) = this.listItemElement.firstChild;\n    while (child) {\n      (child as HTMLElement).style.display = 'none';\n      child = child.nextSibling;\n    }\n    // Hide children item.\n    if (this.childrenListElement) {\n      this.childrenListElement.style.display = 'none';\n    }\n    // Append editor.\n    this.listItemElement.append(this.htmlEditElement);\n    this.htmlEditElement.addEventListener('keydown', event => {\n      if (event.key === 'Escape') {\n        event.consume(true);\n      }\n    });\n\n    const editor = new TextEditor.TextEditor.TextEditor(CodeMirror.EditorState.create({\n      doc: initialValue,\n      extensions: [\n        CodeMirror.keymap.of([\n          {\n            key: 'Mod-Enter',\n            run: () => {\n              this.editing?.commit();\n              return true;\n            },\n          },\n          {\n            key: 'Escape',\n            run: () => {\n              this.editing?.cancel();\n              return true;\n            },\n          },\n        ]),\n        TextEditor.Config.baseConfiguration(initialValue),\n        TextEditor.Config.closeBrackets.instance(),\n        TextEditor.Config.autocompletion.instance(),\n        CodeMirror.html.html({autoCloseTags: false, selfClosingTags: true}),\n        TextEditor.Config.domWordWrap.instance(),\n        CodeMirror.EditorView.theme({\n          '&.cm-editor': {maxHeight: '300px'},\n          '.cm-scroller': {overflowY: 'auto'},\n        }),\n        CodeMirror.EditorView.domEventHandlers({\n          focusout: event => {\n            // The relatedTarget is null when no element gains focus, e.g. switching windows.\n            const relatedTarget = (event.relatedTarget as Node | null);\n            if (relatedTarget && !relatedTarget.isSelfOrDescendant(editor)) {\n              this.editing?.commit();\n            }\n          },\n        }),\n      ],\n    }));\n    this.editing = {commit: commit.bind(this), cancel: dispose.bind(this), editor, resize: resize.bind(this)};\n    resize.call(this);\n    this.htmlEditElement.appendChild(editor);\n    editor.editor.focus();\n\n    this.treeOutline?.setMultilineEditing(this.editing);\n\n    function resize(this: ElementsTreeElement): void {\n      if (this.treeOutline && this.htmlEditElement) {\n        this.htmlEditElement.style.width = this.treeOutline.visibleWidth() - this.computeLeftIndent() - 30 + 'px';\n      }\n    }\n\n    function commit(this: ElementsTreeElement): void {\n      if (this.editing?.editor) {\n        commitCallback(initialValue, this.editing.editor.state.doc.toString());\n      }\n      dispose.call(this);\n    }\n\n    function dispose(this: ElementsTreeElement): void {\n      if (!this.editing?.editor) {\n        return;\n      }\n      this.editing = null;\n\n      // Remove editor.\n      if (this.htmlEditElement) {\n        this.listItemElement.removeChild(this.htmlEditElement);\n      }\n      this.htmlEditElement = undefined;\n      // Unhide children item.\n      if (this.childrenListElement) {\n        this.childrenListElement.style.removeProperty('display');\n      }\n      // Unhide header items.\n      let child: (ChildNode|null) = this.listItemElement.firstChild;\n      while (child) {\n        (child as HTMLElement).style.removeProperty('display');\n        child = child.nextSibling;\n      }\n\n      if (this.treeOutline) {\n        this.treeOutline.setMultilineEditing(null);\n        this.treeOutline.focus();\n      }\n\n      disposeCallback();\n    }\n  }\n\n  private attributeEditingCommitted(\n      element: Element,\n      newText: string,\n      oldText: string|null,\n      attributeName: string|null,\n      moveDirection: string,\n      ): void {\n    this.editing = null;\n\n    const treeOutline = this.treeOutline;\n\n    function moveToNextAttributeIfNeeded(this: ElementsTreeElement, error?: string|null): void {\n      if (error) {\n        this.editingCancelled(element, attributeName);\n      }\n\n      if (!moveDirection) {\n        return;\n      }\n\n      if (treeOutline) {\n        treeOutline.runPendingUpdates();\n        treeOutline.focus();\n      }\n\n      // Search for the attribute's position, and then decide where to move to.\n      const attributes = this.nodeInternal.attributes();\n      for (let i = 0; i < attributes.length; ++i) {\n        if (attributes[i].name !== attributeName) {\n          continue;\n        }\n\n        if (moveDirection === 'backward') {\n          if (i === 0) {\n            this.startEditingTagName();\n          } else {\n            this.triggerEditAttribute(attributes[i - 1].name);\n          }\n        } else if (i === attributes.length - 1) {\n          this.addNewAttribute();\n        } else {\n          this.triggerEditAttribute(attributes[i + 1].name);\n        }\n        return;\n      }\n\n      // Moving From the \"New Attribute\" position.\n      if (moveDirection === 'backward') {\n        if (newText === ' ') {\n          // Moving from \"New Attribute\" that was not edited\n          if (attributes.length > 0) {\n            this.triggerEditAttribute(attributes[attributes.length - 1].name);\n          }\n          // Moving from \"New Attribute\" that holds new value\n        } else if (attributes.length > 1) {\n          this.triggerEditAttribute(attributes[attributes.length - 2].name);\n        }\n      } else if (moveDirection === 'forward') {\n        if (!Platform.StringUtilities.isWhitespace(newText)) {\n          this.addNewAttribute();\n        } else {\n          this.startEditingTagName();\n        }\n      }\n    }\n\n    if (attributeName !== null && (attributeName.trim() || newText.trim()) && oldText !== newText) {\n      this.nodeInternal.setAttribute(attributeName, newText, moveToNextAttributeIfNeeded.bind(this));\n      Badges.UserBadges.instance().recordAction(Badges.BadgeAction.DOM_ELEMENT_OR_ATTRIBUTE_EDITED);\n      return;\n    }\n\n    this.updateTitle();\n    moveToNextAttributeIfNeeded.call(this);\n  }\n\n  private tagNameEditingCommitted(\n      element: Element,\n      newText: string,\n      oldText: string|null,\n      tagName: string|null,\n      moveDirection: string,\n      ): void {\n    this.editing = null;\n    const self = this;\n\n    function cancel(): void {\n      const closingTagElement = self.distinctClosingTagElement();\n      if (closingTagElement) {\n        closingTagElement.textContent = '</' + tagName + '>';\n      }\n\n      self.editingCancelled(element, tagName);\n      moveToNextAttributeIfNeeded.call(self);\n    }\n\n    function moveToNextAttributeIfNeeded(this: ElementsTreeElement): void {\n      if (moveDirection !== 'forward') {\n        this.addNewAttribute();\n        return;\n      }\n\n      const attributes = this.nodeInternal.attributes();\n      if (attributes.length > 0) {\n        this.triggerEditAttribute(attributes[0].name);\n      } else {\n        this.addNewAttribute();\n      }\n    }\n\n    newText = newText.trim();\n    if (newText === oldText) {\n      cancel();\n      return;\n    }\n\n    const treeOutline = this.treeOutline;\n    const wasExpanded = this.expanded;\n\n    this.nodeInternal.setNodeName(newText, (error, newNode) => {\n      if (error || !newNode) {\n        cancel();\n        return;\n      }\n      if (!treeOutline) {\n        return;\n      }\n\n      Badges.UserBadges.instance().recordAction(Badges.BadgeAction.DOM_ELEMENT_OR_ATTRIBUTE_EDITED);\n      const newTreeItem = treeOutline.selectNodeAfterEdit(wasExpanded, error, newNode);\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // @ts-expect-error\n      moveToNextAttributeIfNeeded.call(newTreeItem);\n    });\n  }\n\n  private textNodeEditingCommitted(textNode: SDK.DOMModel.DOMNode, _element: Element, newText: string): void {\n    this.editing = null;\n\n    function callback(this: ElementsTreeElement): void {\n      this.updateTitle();\n    }\n    textNode.setNodeValue(newText, callback.bind(this));\n  }\n\n  private editingCancelled(_element: Element, _tagName: string|null): void {\n    this.editing = null;\n\n    // Need to restore attributes structure.\n    this.updateTitle();\n  }\n\n  private distinctClosingTagElement(): Element|null {\n    // FIXME: Improve the Tree Element / Outline Abstraction to prevent crawling the DOM\n\n    // For an expanded element, it will be the last element with class \"close\"\n    // in the child element list.\n    if (this.expanded) {\n      const closers = this.childrenListElement.querySelectorAll('.close');\n      return closers[closers.length - 1];\n    }\n\n    // Remaining cases are single line non-expanded elements with a closing\n    // tag, or HTML elements without a closing tag (such as <br>). Return\n    // null in the case where there isn't a closing tag.\n    const tags = this.listItemElement.getElementsByClassName('webkit-html-tag');\n    return tags.length === 1 ? null : tags[tags.length - 1];\n  }\n\n  updateTitle(updateRecord?: Elements.ElementUpdateRecord.ElementUpdateRecord|null): void {\n    // If we are editing, return early to prevent canceling the edit.\n    // After editing is committed updateTitle will be called.\n    if (this.editing) {\n      return;\n    }\n\n    const nodeInfo = this.nodeTitleInfo(updateRecord || null);\n    if (this.nodeInternal.nodeType() === Node.DOCUMENT_FRAGMENT_NODE && this.nodeInternal.isInShadowTree() &&\n        this.nodeInternal.shadowRootType()) {\n      this.childrenListElement.classList.add('shadow-root');\n      let depth = 4;\n      for (let node: (SDK.DOMModel.DOMNode|null) = (this.nodeInternal as SDK.DOMModel.DOMNode | null); depth && node;\n           node = node.parentNode) {\n        if (node.nodeType() === Node.DOCUMENT_FRAGMENT_NODE) {\n          depth--;\n        }\n      }\n      if (!depth) {\n        this.childrenListElement.classList.add('shadow-root-deep');\n      } else {\n        this.childrenListElement.classList.add('shadow-root-depth-' + depth);\n      }\n    }\n    this.contentElement.removeChildren();\n    const highlightElement = this.contentElement.createChild('span', 'highlight');\n    highlightElement.append(nodeInfo);\n    // fixme: make it clear that `this.title = x` is a setter with significant side effects\n    this.title = this.contentElement;\n    this.updateDecorations();\n    this.contentElement.prepend(this.gutterContainer);\n    if (isOpeningTag(this.tagTypeContext)) {\n      this.contentElement.append(this.tagTypeContext.adornerContainer);\n    }\n    delete this.selectionElement;\n    delete this.hintElement;\n    delete this.aiButtonContainer;\n    if (this.selected) {\n      this.createSelection();\n      this.createHint();\n    }\n\n    // If there is an issue with this node, make sure to update it.\n    for (const issue of this.#elementIssues.values()) {\n      this.#applyIssueStyleAndTooltip(issue);\n    }\n\n    this.#highlightSearchResults();\n  }\n\n  private computeLeftIndent(): number {\n    let treeElement: (UI.TreeOutline.TreeElement|null) = this.parent;\n    let depth = 0;\n    while (treeElement !== null) {\n      depth++;\n      treeElement = treeElement.parent;\n    }\n\n    /** Keep it in sync with elementsTreeOutline.css **/\n    return 12 * (depth - 2) + (this.isExpandable() && this.isCollapsible() ? 1 : 12);\n  }\n\n  updateDecorations(): void {\n    const indent = this.computeLeftIndent();\n    this.gutterContainer.style.left = (-indent) + 'px';\n    this.listItemElement.style.setProperty('--indent', indent + 'px');\n\n    if (this.isClosingTag()) {\n      return;\n    }\n\n    if (this.nodeInternal.nodeType() !== Node.ELEMENT_NODE) {\n      return;\n    }\n\n    void this.decorationsThrottler.schedule(this.#updateDecorations.bind(this));\n  }\n\n  #updateDecorations(): Promise<void> {\n    if (!this.treeOutline) {\n      return Promise.resolve();\n    }\n\n    const node = this.nodeInternal;\n\n    if (!this.treeOutline.decoratorExtensions) {\n      this.treeOutline.decoratorExtensions = getRegisteredDecorators();\n    }\n\n    const markerToExtension = new Map<string, MarkerDecoratorRegistration>();\n    for (const decoratorExtension of this.treeOutline.decoratorExtensions) {\n      markerToExtension.set(decoratorExtension.marker, decoratorExtension);\n    }\n\n    const promises: Array<Promise<void>> = [];\n    const decorations: Array<{\n      title: string,\n      color: string,\n    }> = [];\n    const descendantDecorations: Array<{\n      title: string,\n      color: string,\n    }> = [];\n    node.traverseMarkers(visitor);\n\n    function visitor(n: SDK.DOMModel.DOMNode, marker: string): void {\n      const extension = markerToExtension.get(marker);\n      if (!extension) {\n        return;\n      }\n      promises.push(Promise.resolve(extension.decorator()).then(collectDecoration.bind(null, n)));\n    }\n\n    function collectDecoration(n: SDK.DOMModel.DOMNode, decorator: MarkerDecorator): void {\n      const decoration = decorator.decorate(n);\n      if (!decoration) {\n        return;\n      }\n      (n === node ? decorations : descendantDecorations).push(decoration);\n    }\n\n    return Promise.all(promises).then(updateDecorationsUI.bind(this));\n\n    function updateDecorationsUI(this: ElementsTreeElement): void {\n      this.decorationsElement.removeChildren();\n      this.decorationsElement.classList.add('hidden');\n      this.gutterContainer.classList.toggle(\n          'has-decorations', Boolean(decorations.length || descendantDecorations.length));\n      UI.ARIAUtils.setLabel(this.decorationsElement, '');\n\n      if (!decorations.length && !descendantDecorations.length) {\n        return;\n      }\n\n      const colors = new Set<string>();\n      const titles = document.createElement('div');\n\n      for (const decoration of decorations) {\n        const titleElement = titles.createChild('div');\n        titleElement.textContent = decoration.title;\n        colors.add(decoration.color);\n      }\n      if (this.expanded && !decorations.length) {\n        return;\n      }\n\n      const descendantColors = new Set<string>();\n      if (descendantDecorations.length) {\n        let element = titles.createChild('div');\n        element.textContent = i18nString(UIStrings.children);\n        for (const decoration of descendantDecorations) {\n          element = titles.createChild('div');\n          element.style.marginLeft = '15px';\n          element.textContent = decoration.title;\n          descendantColors.add(decoration.color);\n        }\n      }\n\n      let offset = 0;\n      processColors.call(this, colors, 'elements-gutter-decoration');\n      if (!this.expanded) {\n        processColors.call(this, descendantColors, 'elements-gutter-decoration elements-has-decorated-children');\n      }\n      UI.Tooltip.Tooltip.install(this.decorationsElement, titles.textContent);\n      UI.ARIAUtils.setLabel(this.decorationsElement, titles.textContent || '');\n\n      function processColors(this: ElementsTreeElement, colors: Set<string>, className: string): void {\n        for (const color of colors) {\n          const child = this.decorationsElement.createChild('div', className);\n          this.decorationsElement.classList.remove('hidden');\n          child.style.backgroundColor = color;\n          child.style.borderColor = color;\n          if (offset) {\n            child.style.marginLeft = offset + 'px';\n          }\n          offset += 3;\n        }\n      }\n    }\n  }\n\n  private buildAttributeDOM(\n      parentElement: Element|DocumentFragment, name: string, value: string,\n      updateRecord: Elements.ElementUpdateRecord.ElementUpdateRecord|null, forceValue?: boolean,\n      node?: SDK.DOMModel.DOMNode): HTMLElement {\n    const closingPunctuationRegex = /[\\/;:\\)\\]\\}]/g;\n    let highlightIndex = 0;\n    let highlightCount = 0;\n    let additionalHighlightOffset = 0;\n\n    function setValueWithEntities(this: ElementsTreeElement, element: Element, value: string): void {\n      const result = convertUnicodeCharsToHTMLEntities(value);\n      highlightCount = result.entityRanges.length;\n      value = result.text.replace(closingPunctuationRegex, (match, replaceOffset) => {\n        while (highlightIndex < highlightCount && result.entityRanges[highlightIndex].offset < replaceOffset) {\n          result.entityRanges[highlightIndex].offset += additionalHighlightOffset;\n          ++highlightIndex;\n        }\n        additionalHighlightOffset += 1;\n        return match + '\\u200B';\n      });\n\n      while (highlightIndex < highlightCount) {\n        result.entityRanges[highlightIndex].offset += additionalHighlightOffset;\n        ++highlightIndex;\n      }\n      element.setTextContentTruncatedIfNeeded(value);\n      UI.UIUtils.highlightRangesWithStyleClass(element, result.entityRanges, 'webkit-html-entity-value');\n    }\n\n    const hasText = (forceValue || value.length > 0);\n    const attrSpanElement = parentElement.createChild('span', 'webkit-html-attribute');\n    attrSpanElement.setAttribute(\n        'jslog', `${VisualLogging.value(name === 'style' ? 'style-attribute' : 'attribute').track({\n          change: true,\n          dblclick: true,\n        })}`);\n\n    const attrNameElement = attrSpanElement.createChild('span', 'webkit-html-attribute-name');\n    attrNameElement.textContent = name;\n\n    if (hasText) {\n      UI.UIUtils.createTextChild(attrSpanElement, '=\\u200B\"');\n    }\n\n    const attrValueElement = attrSpanElement.createChild('span', 'webkit-html-attribute-value');\n\n    if (updateRecord?.isAttributeModified(name)) {\n      UI.UIUtils.runCSSAnimationOnce(hasText ? attrValueElement : attrNameElement, 'dom-update-highlight');\n    }\n\n    function linkifyValue(this: ElementsTreeElement, value: string): Element {\n      const rewrittenHref = node ? node.resolveURL(value) : null;\n      if (rewrittenHref === null) {\n        const span = document.createElement('span');\n        setValueWithEntities.call(this, span, value);\n        return span;\n      }\n      value = value.replace(closingPunctuationRegex, '$&\\u200B');\n      if (value.startsWith('data:')) {\n        value = Platform.StringUtilities.trimMiddle(value, 60);\n      }\n      const link = node && node.nodeName().toLowerCase() === 'a' ?\n          UI.XLink.XLink.create(rewrittenHref, value, '', true /* preventClick */, 'image-url') :\n          Components.Linkifier.Linkifier.linkifyURL(rewrittenHref, {\n            text: value,\n            preventClick: true,\n            showColumnNumber: false,\n            inlineFrameIndex: 0,\n          });\n      return ImagePreviewPopover.setImageUrl(link, rewrittenHref);\n    }\n\n    const nodeName = node ? node.nodeName().toLowerCase() : '';\n    // If the href/src attribute has a value, attempt to link it.\n    // There's no point trying to link it if the value is empty (e.g. <a href=''>).\n    if (nodeName && (name === 'src' || name === 'href') && value) {\n      attrValueElement.appendChild(linkifyValue.call(this, value));\n    } else if ((nodeName === 'img' || nodeName === 'source') && name === 'srcset') {\n      attrValueElement.appendChild(linkifySrcset.call(this, value));\n    } else if (nodeName === 'image' && (name === 'xlink:href' || name === 'href')) {\n      attrValueElement.appendChild(linkifySrcset.call(this, value));\n    } else {\n      setValueWithEntities.call(this, attrValueElement, value);\n    }\n\n    switch (name) {\n      case 'popovertarget': {\n        const linkedPart = value ? attrValueElement : attrNameElement;\n        void this.linkifyElementByRelation(\n            linkedPart, Protocol.DOM.GetElementByRelationRequestRelation.PopoverTarget,\n            i18nString(UIStrings.showPopoverTarget));\n        break;\n      }\n      case 'interesttarget': {\n        const linkedPart = value ? attrValueElement : attrNameElement;\n        void this.linkifyElementByRelation(\n            linkedPart, Protocol.DOM.GetElementByRelationRequestRelation.InterestTarget,\n            i18nString(UIStrings.showInterestTarget));\n        break;\n      }\n      case 'commandfor': {\n        const linkedPart = value ? attrValueElement : attrNameElement;\n        void this.linkifyElementByRelation(\n            linkedPart, Protocol.DOM.GetElementByRelationRequestRelation.CommandFor,\n            i18nString(UIStrings.showCommandForTarget));\n        break;\n      }\n    }\n\n    if (hasText) {\n      UI.UIUtils.createTextChild(attrSpanElement, '\"');\n    }\n\n    function linkifySrcset(this: ElementsTreeElement, value: string): DocumentFragment {\n      // Splitting normally on commas or spaces will break on valid srcsets \"foo 1x,bar 2x\" and \"data:,foo 1x\".\n      // 1) Let the index of the next space be `indexOfSpace`.\n      // 2a) If the character at `indexOfSpace - 1` is a comma, collect the preceding characters up to\n      //     `indexOfSpace - 1` as a URL and repeat step 1).\n      // 2b) Else, collect the preceding characters as a URL.\n      // 3) Collect the characters from `indexOfSpace` up to the next comma as the size descriptor and repeat step 1).\n      // https://html.spec.whatwg.org/C/#parse-a-srcset-attribute\n      const fragment = document.createDocumentFragment();\n      let i = 0;\n      while (value.length) {\n        if (i++ > 0) {\n          UI.UIUtils.createTextChild(fragment, ' ');\n        }\n        value = value.trim();\n        // The url and descriptor may end with a separating comma.\n        let url = '';\n        let descriptor = '';\n        const indexOfSpace = value.search(/\\s/);\n        if (indexOfSpace === -1) {\n          url = value;\n        } else if (indexOfSpace > 0 && value[indexOfSpace - 1] === ',') {\n          url = value.substring(0, indexOfSpace);\n        } else {\n          url = value.substring(0, indexOfSpace);\n          const indexOfComma = value.indexOf(',', indexOfSpace);\n          if (indexOfComma !== -1) {\n            descriptor = value.substring(indexOfSpace, indexOfComma + 1);\n          } else {\n            descriptor = value.substring(indexOfSpace);\n          }\n        }\n\n        if (url) {\n          // Up to one trailing comma should be removed from `url`.\n          if (url.endsWith(',')) {\n            fragment.appendChild(linkifyValue.call(this, url.substring(0, url.length - 1)));\n            UI.UIUtils.createTextChild(fragment, ',');\n          } else {\n            fragment.appendChild(linkifyValue.call(this, url));\n          }\n        }\n        if (descriptor) {\n          UI.UIUtils.createTextChild(fragment, descriptor);\n        }\n        value = value.substring(url.length + descriptor.length);\n      }\n      return fragment;\n    }\n\n    return attrSpanElement;\n  }\n\n  private async linkifyElementByRelation(\n      linkContainer: Element, relation: Protocol.DOM.GetElementByRelationRequestRelation,\n      tooltip: string): Promise<void> {\n    const relatedElementId = await this.nodeInternal.domModel().getElementByRelation(this.nodeInternal.id, relation);\n    const relatedElement = this.nodeInternal.domModel().nodeForId(relatedElementId);\n    if (!relatedElement) {\n      return;\n    }\n    const link = await Common.Linkifier.Linkifier.linkify(relatedElement, {\n      preventKeyboardFocus: true,\n      tooltip,\n      textContent: linkContainer.textContent || undefined,\n      isDynamicLink: true,\n    });\n    linkContainer.removeChildren();\n    linkContainer.append(link);\n  }\n\n  private buildPseudoElementDOM(parentElement: DocumentFragment, pseudoElementName: string): void {\n    const pseudoElement = parentElement.createChild('span', 'webkit-html-pseudo-element');\n    pseudoElement.textContent = pseudoElementName;\n    UI.UIUtils.createTextChild(parentElement, '\\u200B');\n  }\n\n  private buildTagDOM(\n      parentElement: DocumentFragment, tagName: string, isClosingTag: boolean, isDistinctTreeElement: boolean,\n      updateRecord: Elements.ElementUpdateRecord.ElementUpdateRecord|null): void {\n    const node = this.nodeInternal;\n    const classes = ['webkit-html-tag'];\n    if (isClosingTag && isDistinctTreeElement) {\n      classes.push('close');\n    }\n    const tagElement = parentElement.createChild('span', classes.join(' '));\n    UI.UIUtils.createTextChild(tagElement, '<');\n    const tagNameElement =\n        tagElement.createChild('span', isClosingTag ? 'webkit-html-close-tag-name' : 'webkit-html-tag-name');\n    if (!isClosingTag) {\n      tagNameElement.setAttribute('jslog', `${VisualLogging.value('tag-name').track({change: true, dblclick: true})}`);\n    }\n    tagNameElement.textContent = (isClosingTag ? '/' : '') + tagName;\n    if (!isClosingTag) {\n      if (node.hasAttributes()) {\n        const attributes = node.attributes();\n        for (let i = 0; i < attributes.length; ++i) {\n          const attr = attributes[i];\n          UI.UIUtils.createTextChild(tagElement, ' ');\n          this.buildAttributeDOM(tagElement, attr.name, attr.value, updateRecord, false, node);\n        }\n      }\n      if (updateRecord) {\n        let hasUpdates: boolean = updateRecord.hasRemovedAttributes() || updateRecord.hasRemovedChildren();\n        hasUpdates = hasUpdates || (!this.expanded && updateRecord.hasChangedChildren());\n        if (hasUpdates) {\n          UI.UIUtils.runCSSAnimationOnce(tagNameElement, 'dom-update-highlight');\n        }\n      }\n    }\n\n    UI.UIUtils.createTextChild(tagElement, '>');\n    UI.UIUtils.createTextChild(parentElement, '\\u200B');\n    if (tagElement.textContent) {\n      UI.ARIAUtils.setLabel(tagElement, tagElement.textContent);\n    }\n  }\n\n  private nodeTitleInfo(updateRecord: Elements.ElementUpdateRecord.ElementUpdateRecord|null): DocumentFragment {\n    const node = this.nodeInternal;\n    const titleDOM = document.createDocumentFragment();\n    const updateSearchHighlight = (): void => {\n      this.#highlightSearchResults();\n    };\n\n    switch (node.nodeType()) {\n      case Node.ATTRIBUTE_NODE:\n        this.buildAttributeDOM(titleDOM, (node.name as string), (node.value as string), updateRecord, true);\n        break;\n\n      case Node.ELEMENT_NODE: {\n        if (node.pseudoType()) {\n          let pseudoElementName = node.nodeName();\n          const pseudoIdentifier = node.pseudoIdentifier();\n          if (pseudoIdentifier) {\n            pseudoElementName += `(${pseudoIdentifier})`;\n          }\n          this.buildPseudoElementDOM(titleDOM, pseudoElementName);\n          break;\n        }\n\n        const tagName = node.nodeNameInCorrectCase();\n        if (this.isClosingTag()) {\n          this.buildTagDOM(titleDOM, tagName, true, true, updateRecord);\n          break;\n        }\n\n        this.buildTagDOM(titleDOM, tagName, false, false, updateRecord);\n\n        if (this.isExpandable()) {\n          if (!this.expanded) {\n            const expandButton = new ElementsComponents.ElementsTreeExpandButton.ElementsTreeExpandButton();\n            expandButton.data = {\n              clickHandler: () => this.expand(),\n            };\n            titleDOM.appendChild(expandButton);\n\n            // This hidden span with … is for blink layout tests.\n            // The method dumpElementsTree(front_end/legacy_test_runner/elements_test_runner/ElementsTestRunner.js)\n            // dumps … to identify expandable element.\n            const hidden = document.createElement('span');\n            hidden.textContent = '…';\n            hidden.style.fontSize = '0';\n            titleDOM.appendChild(hidden);\n\n            UI.UIUtils.createTextChild(titleDOM, '\\u200B');\n            this.buildTagDOM(titleDOM, tagName, true, false, updateRecord);\n          }\n          break;\n        }\n\n        if (ElementsTreeElement.canShowInlineText(node)) {\n          const textNodeElement = titleDOM.createChild('span', 'webkit-html-text-node');\n          textNodeElement.setAttribute(\n              'jslog', `${VisualLogging.value('text-node').track({change: true, dblclick: true})}`);\n          const firstChild = node.firstChild;\n          if (!firstChild) {\n            throw new Error('ElementsTreeElement._nodeTitleInfo expects node.firstChild to be defined.');\n          }\n          const result = convertUnicodeCharsToHTMLEntities(firstChild.nodeValue());\n          textNodeElement.textContent = Platform.StringUtilities.collapseWhitespace(result.text);\n          UI.UIUtils.highlightRangesWithStyleClass(textNodeElement, result.entityRanges, 'webkit-html-entity-value');\n          UI.UIUtils.createTextChild(titleDOM, '\\u200B');\n          this.buildTagDOM(titleDOM, tagName, true, false, updateRecord);\n          if (updateRecord?.hasChangedChildren()) {\n            UI.UIUtils.runCSSAnimationOnce(textNodeElement, 'dom-update-highlight');\n          }\n          if (updateRecord?.isCharDataModified()) {\n            UI.UIUtils.runCSSAnimationOnce(textNodeElement, 'dom-update-highlight');\n          }\n          break;\n        }\n\n        if (this.treeOutline?.isXMLMimeType || !ForbiddenClosingTagElements.has(tagName)) {\n          this.buildTagDOM(titleDOM, tagName, true, false, updateRecord);\n        }\n        break;\n      }\n\n      case Node.TEXT_NODE:\n        if (node.parentNode && node.parentNode.nodeName().toLowerCase() === 'script') {\n          const newNode = titleDOM.createChild('span', 'webkit-html-text-node webkit-html-js-node');\n          newNode.setAttribute(\n              'jslog', `${VisualLogging.value('script-text-node').track({change: true, dblclick: true})}`);\n          const text = node.nodeValue();\n          newNode.textContent = text.replace(/^[\\n\\r]+|\\s+$/g, '');\n          void CodeHighlighter.CodeHighlighter.highlightNode(newNode, 'text/javascript').then(updateSearchHighlight);\n        } else if (node.parentNode && node.parentNode.nodeName().toLowerCase() === 'style') {\n          const newNode = titleDOM.createChild('span', 'webkit-html-text-node webkit-html-css-node');\n          newNode.setAttribute(\n              'jslog', `${VisualLogging.value('css-text-node').track({change: true, dblclick: true})}`);\n          const text = node.nodeValue();\n          newNode.textContent = text.replace(/^[\\n\\r]+|\\s+$/g, '');\n          void CodeHighlighter.CodeHighlighter.highlightNode(newNode, 'text/css').then(updateSearchHighlight);\n        } else {\n          UI.UIUtils.createTextChild(titleDOM, '\"');\n          const textNodeElement = titleDOM.createChild('span', 'webkit-html-text-node');\n          textNodeElement.setAttribute(\n              'jslog', `${VisualLogging.value('text-node').track({change: true, dblclick: true})}`);\n          const result = convertUnicodeCharsToHTMLEntities(node.nodeValue());\n          textNodeElement.textContent = Platform.StringUtilities.collapseWhitespace(result.text);\n          UI.UIUtils.highlightRangesWithStyleClass(textNodeElement, result.entityRanges, 'webkit-html-entity-value');\n          UI.UIUtils.createTextChild(titleDOM, '\"');\n          if (updateRecord?.isCharDataModified()) {\n            UI.UIUtils.runCSSAnimationOnce(textNodeElement, 'dom-update-highlight');\n          }\n        }\n        break;\n\n      case Node.COMMENT_NODE: {\n        const commentElement = titleDOM.createChild('span', 'webkit-html-comment');\n        UI.UIUtils.createTextChild(commentElement, '<!--' + node.nodeValue() + '-->');\n        break;\n      }\n\n      case Node.DOCUMENT_TYPE_NODE: {\n        const docTypeElement = titleDOM.createChild('span', 'webkit-html-doctype');\n        UI.UIUtils.createTextChild(docTypeElement, '<!DOCTYPE ' + node.nodeName());\n        if (node.publicId) {\n          UI.UIUtils.createTextChild(docTypeElement, ' PUBLIC \"' + node.publicId + '\"');\n          if (node.systemId) {\n            UI.UIUtils.createTextChild(docTypeElement, ' \"' + node.systemId + '\"');\n          }\n        } else if (node.systemId) {\n          UI.UIUtils.createTextChild(docTypeElement, ' SYSTEM \"' + node.systemId + '\"');\n        }\n\n        if (node.internalSubset) {\n          UI.UIUtils.createTextChild(docTypeElement, ' [' + node.internalSubset + ']');\n        }\n\n        UI.UIUtils.createTextChild(docTypeElement, '>');\n        break;\n      }\n\n      case Node.CDATA_SECTION_NODE: {\n        const cdataElement = titleDOM.createChild('span', 'webkit-html-text-node');\n        UI.UIUtils.createTextChild(cdataElement, '<![CDATA[' + node.nodeValue() + ']]>');\n        break;\n      }\n\n      case Node.DOCUMENT_NODE: {\n        const documentElement = titleDOM.createChild('span');\n        UI.UIUtils.createTextChild(documentElement, '#document (');\n        const text = (node as SDK.DOMModel.DOMDocument).documentURL;\n        documentElement.appendChild(Components.Linkifier.Linkifier.linkifyURL(text, {\n          text,\n          preventClick: true,\n          showColumnNumber: false,\n          inlineFrameIndex: 0,\n        }));\n        UI.UIUtils.createTextChild(documentElement, ')');\n        break;\n      }\n\n      case Node.DOCUMENT_FRAGMENT_NODE: {\n        const fragmentElement = titleDOM.createChild('span', 'webkit-html-fragment');\n        fragmentElement.textContent = Platform.StringUtilities.collapseWhitespace(node.nodeNameInCorrectCase());\n        break;\n      }\n\n      default: {\n        const nameWithSpaceCollapsed = Platform.StringUtilities.collapseWhitespace(node.nodeNameInCorrectCase());\n        UI.UIUtils.createTextChild(titleDOM, nameWithSpaceCollapsed);\n      }\n    }\n\n    return titleDOM;\n  }\n\n  async remove(): Promise<void> {\n    if (this.treeOutline?.isToggledToHidden(this.nodeInternal)) {\n      // Unhide the node before removing. This avoids inconsistent state if the node is restored via undo.\n      await this.treeOutline.toggleHideElement(this.nodeInternal);\n    }\n    if (this.nodeInternal.pseudoType()) {\n      return;\n    }\n    const parentElement = this.parent;\n    if (!parentElement) {\n      return;\n    }\n\n    if (!this.nodeInternal.parentNode || this.nodeInternal.parentNode.nodeType() === Node.DOCUMENT_NODE) {\n      return;\n    }\n    void this.nodeInternal.removeNode();\n  }\n\n  toggleEditAsHTML(callback?: ((arg0: boolean) => void), startEditing?: boolean): void {\n    if (this.editing && this.htmlEditElement) {\n      this.editing.commit();\n      return;\n    }\n\n    if (startEditing === false) {\n      return;\n    }\n\n    function selectNode(error: string|null): void {\n      if (callback) {\n        callback(!error);\n      }\n    }\n\n    function commitChange(initialValue: string, value: string): void {\n      if (initialValue !== value) {\n        node.setOuterHTML(value, selectNode);\n      }\n    }\n\n    function disposeCallback(): void {\n      if (callback) {\n        callback(false);\n      }\n    }\n\n    const node = this.nodeInternal;\n    void node.getOuterHTML().then(this.startEditingAsHTML.bind(this, commitChange, disposeCallback));\n  }\n\n  private copyCSSPath(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(cssPath(this.nodeInternal, true));\n  }\n\n  private copyJSPath(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(jsPath(this.nodeInternal, true));\n  }\n\n  private copyXPath(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(xPath(this.nodeInternal, true));\n  }\n\n  private copyFullXPath(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(xPath(this.nodeInternal, false));\n  }\n\n  async copyStyles(): Promise<void> {\n    const node = this.nodeInternal;\n    const cssModel = node.domModel().cssModel();\n    const cascade = await cssModel.cachedMatchedCascadeForNode(node);\n    if (!cascade) {\n      return;\n    }\n\n    const indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n    const lines: string[] = [];\n    for (const style of cascade.nodeStyles().reverse()) {\n      for (const property of style.leadingProperties()) {\n        if (!property.parsedOk || property.disabled || !property.activeInStyle() || property.implicit) {\n          continue;\n        }\n        if (cascade.isInherited(style) && !SDK.CSSMetadata.cssMetadata().isPropertyInherited(property.name)) {\n          continue;\n        }\n        if (style.parentRule?.isUserAgent()) {\n          continue;\n        }\n        if (cascade.propertyState(property) !== SDK.CSSMatchedStyles.PropertyState.ACTIVE) {\n          continue;\n        }\n        lines.push(`${indent}${property.name}: ${property.value};`);\n      }\n    }\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(lines.join('\\n'));\n  }\n\n  #highlightSearchResults(): void {\n    this.hideSearchHighlights();\n\n    if (!this.searchQuery) {\n      return;\n    }\n\n    const text = this.listItemElement.textContent || '';\n    const regexObject = Platform.StringUtilities.createPlainTextSearchRegex(this.searchQuery, 'gi');\n\n    const matchRanges = [];\n    let match = regexObject.exec(text);\n    while (match) {\n      matchRanges.push(new TextUtils.TextRange.SourceRange(match.index, match[0].length));\n      match = regexObject.exec(text);\n    }\n\n    // Fall back for XPath, etc. matches.\n    if (!matchRanges.length) {\n      matchRanges.push(new TextUtils.TextRange.SourceRange(0, text.length));\n    }\n\n    this.#highlights = Highlighting.HighlightManager.HighlightManager.instance().highlightOrderedTextRanges(\n        this.listItemElement, matchRanges);\n  }\n\n  private editAsHTML(): void {\n    const promise = Common.Revealer.reveal(this.node());\n    void promise.then(() => {\n      const action = UI.ActionRegistry.ActionRegistry.instance().getAction('elements.edit-as-html');\n      return action.execute();\n    });\n  }\n\n  // TODO: add unit tests for adorner-related methods after component and TypeScript works are done\n  adorn({name}: {name: string}, content?: HTMLElement): Adorners.Adorner.Adorner {\n    let adornerContent = content;\n    if (!adornerContent) {\n      adornerContent = document.createElement('span');\n      adornerContent.textContent = name;\n    }\n    const adorner = new Adorners.Adorner.Adorner();\n    adorner.data = {\n      name,\n      content: adornerContent,\n      jslogContext: name,\n    };\n    if (isOpeningTag(this.tagTypeContext)) {\n      this.tagTypeContext.adorners.add(adorner);\n      ElementsPanel.instance().registerAdorner(adorner);\n      this.updateAdorners(this.tagTypeContext);\n    }\n    return adorner;\n  }\n\n  adornSlot({name}: {name: string}, context: OpeningTagContext): Adorners.Adorner.Adorner {\n    const linkIcon = IconButton.Icon.create('select-element');\n    const slotText = document.createElement('span');\n    slotText.textContent = name;\n    const adornerContent = document.createElement('span');\n    adornerContent.append(linkIcon);\n    adornerContent.append(slotText);\n    adornerContent.classList.add('adorner-with-icon');\n    const adorner = new Adorners.Adorner.Adorner();\n    adorner.data = {\n      name,\n      content: adornerContent,\n      jslogContext: 'slot',\n    };\n    context.adorners.add(adorner);\n    ElementsPanel.instance().registerAdorner(adorner);\n    this.updateAdorners(context);\n    return adorner;\n  }\n\n  adornMedia({name}: {name: string}): Adorners.Adorner.Adorner {\n    const adornerContent = document.createElement('span');\n\n    adornerContent.textContent = name;\n    adornerContent.classList.add('adorner-with-icon');\n\n    const linkIcon = IconButton.Icon.create('select-element');\n    adornerContent.append(linkIcon);\n\n    const adorner = new Adorners.Adorner.Adorner();\n    adorner.data = {\n      name,\n      content: adornerContent,\n      jslogContext: 'media',\n    };\n    if (isOpeningTag(this.tagTypeContext)) {\n      this.tagTypeContext.adorners.add(adorner);\n      ElementsPanel.instance().registerAdorner(adorner);\n      this.updateAdorners(this.tagTypeContext);\n    }\n    return adorner;\n  }\n\n  removeAdorner(adornerToRemove: Adorners.Adorner.Adorner, context: OpeningTagContext): void {\n    ElementsPanel.instance().deregisterAdorner(adornerToRemove);\n    adornerToRemove.remove();\n    context.adorners.delete(adornerToRemove);\n    context.styleAdorners.delete(adornerToRemove);\n    this.updateAdorners(context);\n  }\n\n  /**\n   * @param adornerType optional type of adorner to remove. If not provided, remove all adorners.\n   */\n  removeAdornersByType(adornerType?: ElementsComponents.AdornerManager.RegisteredAdorners): void {\n    if (!isOpeningTag(this.tagTypeContext)) {\n      return;\n    }\n\n    for (const adorner of this.tagTypeContext.adorners) {\n      if (adorner.name === adornerType || !adornerType) {\n        this.removeAdorner(adorner, this.tagTypeContext);\n      }\n    }\n  }\n\n  private updateAdorners(context: OpeningTagContext): void {\n    void context.adornersThrottler.schedule(this.#updateAdorners.bind(null, context));\n  }\n\n  #updateAdorners(context: OpeningTagContext): Promise<void> {\n    const adornerContainer = context.adornerContainer;\n    if (!adornerContainer) {\n      return Promise.resolve();\n    }\n    const adorners = [...context.adorners].sort(adornerComparator);\n    if (context.slot) {\n      adorners.push(context.slot);\n    }\n\n    adornerContainer.removeChildren();\n    for (const adorner of adorners) {\n      adornerContainer.appendChild(adorner);\n    }\n    adornerContainer.classList.toggle('hidden', adorners.length === 0);\n    return Promise.resolve();\n  }\n\n  async updateStyleAdorners(): Promise<void> {\n    if (!isOpeningTag(this.tagTypeContext)) {\n      return;\n    }\n\n    const node = this.node();\n    const nodeId = node.id;\n    if (node.nodeType() === Node.COMMENT_NODE || node.nodeType() === Node.DOCUMENT_FRAGMENT_NODE ||\n        node.nodeType() === Node.TEXT_NODE || nodeId === undefined) {\n      return;\n    }\n\n    const layout = await node.domModel().cssModel().getLayoutPropertiesFromComputedStyle(nodeId);\n    for (const styleAdorner of this.tagTypeContext.styleAdorners) {\n      this.removeAdorner(styleAdorner, this.tagTypeContext);\n    }\n    if (layout) {\n      if (layout.isGrid) {\n        this.pushGridAdorner(this.tagTypeContext, layout.isSubgrid);\n      }\n      if (layout.isMasonry) {\n        this.pushMasonryAdorner(this.tagTypeContext);\n      }\n      if (layout.isFlex) {\n        this.pushFlexAdorner(this.tagTypeContext);\n      }\n      if (layout.hasScroll) {\n        this.pushScrollSnapAdorner(this.tagTypeContext);\n      }\n      if (layout.isContainer) {\n        this.pushContainerAdorner(this.tagTypeContext);\n      }\n    }\n\n    if (node.isMediaNode()) {\n      this.pushMediaAdorner(this.tagTypeContext);\n    }\n\n    if (node.attributes().find(attr => attr.name === 'popover')) {\n      this.pushPopoverAdorner(this.tagTypeContext);\n    }\n  }\n\n  pushPopoverAdorner(context: OpeningTagContext): void {\n    if (!Root.Runtime.hostConfig.devToolsAllowPopoverForcing?.enabled) {\n      return;\n    }\n    const node = this.node();\n    const nodeId = node.id;\n\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.POPOVER);\n    const adorner = this.adorn(config);\n    const onClick = async(): Promise<void> => {\n      const {nodeIds} = await node.domModel().agent.invoke_forceShowPopover({nodeId, enable: adorner.isActive()});\n      if (adorner.isActive()) {\n        Badges.UserBadges.instance().recordAction(Badges.BadgeAction.MODERN_DOM_BADGE_CLICKED);\n      }\n      for (const closedPopoverNodeId of nodeIds) {\n        const node = this.node().domModel().nodeForId(closedPopoverNodeId);\n        const treeElement = node && this.treeOutline?.treeElementByNode.get(node);\n        if (!treeElement || !isOpeningTag(treeElement.tagTypeContext)) {\n          return;\n        }\n        const adorner = treeElement.tagTypeContext.adorners.values().find(adorner => adorner.name === config.name);\n        adorner?.toggle(false);\n      }\n    };\n    adorner.addInteraction(onClick, {\n      isToggle: true,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.forceOpenPopover),\n      ariaLabelActive: i18nString(UIStrings.stopForceOpenPopover),\n    });\n\n    context.styleAdorners.add(adorner);\n  }\n\n  pushGridAdorner(context: OpeningTagContext, isSubgrid: boolean): void {\n    const node = this.node();\n    const nodeId = node.id;\n    if (!nodeId) {\n      return;\n    }\n\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        isSubgrid ? ElementsComponents.AdornerManager.RegisteredAdorners.SUBGRID :\n                    ElementsComponents.AdornerManager.RegisteredAdorners.GRID);\n    const adorner = this.adorn(config);\n    adorner.classList.add('grid');\n\n    const onClick = ((() => {\n                       if (adorner.isActive()) {\n                         node.domModel().overlayModel().highlightGridInPersistentOverlay(nodeId);\n                         if (isSubgrid) {\n                           Badges.UserBadges.instance().recordAction(Badges.BadgeAction.MODERN_DOM_BADGE_CLICKED);\n                         }\n                       } else {\n                         node.domModel().overlayModel().hideGridInPersistentOverlay(nodeId);\n                       }\n                     }) as EventListener);\n    adorner.addInteraction(onClick, {\n      isToggle: true,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.enableGridMode),\n      ariaLabelActive: i18nString(UIStrings.disableGridMode),\n    });\n\n    node.domModel().overlayModel().addEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED, event => {\n          const {nodeId: eventNodeId, enabled} = event.data;\n          if (eventNodeId !== nodeId) {\n            return;\n          }\n          adorner.toggle(enabled);\n        });\n\n    context.styleAdorners.add(adorner);\n    if (node.domModel().overlayModel().isHighlightedGridInPersistentOverlay(nodeId)) {\n      adorner.toggle(true);\n    }\n  }\n\n  pushMasonryAdorner(context: OpeningTagContext): void {\n    const node = this.node();\n    const nodeId = node.id;\n    if (!nodeId) {\n      return;\n    }\n\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.MASONRY);\n    const adorner = this.adorn(config);\n    adorner.classList.add('masonry');\n\n    const onClick = ((() => {\n                       if (adorner.isActive()) {\n                         node.domModel().overlayModel().highlightGridInPersistentOverlay(nodeId);\n                         Badges.UserBadges.instance().recordAction(Badges.BadgeAction.MODERN_DOM_BADGE_CLICKED);\n                       } else {\n                         node.domModel().overlayModel().hideGridInPersistentOverlay(nodeId);\n                       }\n                     }) as EventListener);\n    adorner.addInteraction(onClick, {\n      isToggle: true,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.enableMasonryMode),\n      ariaLabelActive: i18nString(UIStrings.disableMasonryMode),\n    });\n\n    node.domModel().overlayModel().addEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED, event => {\n          const {nodeId: eventNodeId, enabled} = event.data;\n          if (eventNodeId !== nodeId) {\n            return;\n          }\n          adorner.toggle(enabled);\n        });\n\n    context.styleAdorners.add(adorner);\n    if (node.domModel().overlayModel().isHighlightedGridInPersistentOverlay(nodeId)) {\n      adorner.toggle(true);\n    }\n  }\n\n  pushScrollSnapAdorner(context: OpeningTagContext): void {\n    const node = this.node();\n    const nodeId = node.id;\n    if (!nodeId) {\n      return;\n    }\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.SCROLL_SNAP);\n    const adorner = this.adorn(config);\n    adorner.classList.add('scroll-snap');\n\n    const onClick = ((() => {\n                       const model = node.domModel().overlayModel();\n                       if (adorner.isActive()) {\n                         model.highlightScrollSnapInPersistentOverlay(nodeId);\n                       } else {\n                         model.hideScrollSnapInPersistentOverlay(nodeId);\n                       }\n                     }) as EventListener);\n\n    adorner.addInteraction(onClick, {\n      isToggle: true,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.enableScrollSnap),\n      ariaLabelActive: i18nString(UIStrings.disableScrollSnap),\n    });\n\n    node.domModel().overlayModel().addEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_SCROLL_SNAP_OVERLAY_STATE_CHANGED, event => {\n          const {nodeId: eventNodeId, enabled} = event.data;\n          if (eventNodeId !== nodeId) {\n            return;\n          }\n          adorner.toggle(enabled);\n        });\n\n    context.styleAdorners.add(adorner);\n\n    if (node.domModel().overlayModel().isHighlightedScrollSnapInPersistentOverlay(nodeId)) {\n      adorner.toggle(true);\n    }\n  }\n\n  pushFlexAdorner(context: OpeningTagContext): void {\n    const node = this.node();\n    const nodeId = node.id;\n    if (!nodeId) {\n      return;\n    }\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.FLEX);\n    const adorner = this.adorn(config);\n    adorner.classList.add('flex');\n\n    const onClick = ((() => {\n                       const model = node.domModel().overlayModel();\n                       if (adorner.isActive()) {\n                         model.highlightFlexContainerInPersistentOverlay(nodeId);\n                       } else {\n                         model.hideFlexContainerInPersistentOverlay(nodeId);\n                       }\n                     }) as EventListener);\n\n    adorner.addInteraction(onClick, {\n      isToggle: true,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.enableFlexMode),\n      ariaLabelActive: i18nString(UIStrings.disableFlexMode),\n    });\n\n    node.domModel().overlayModel().addEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED, event => {\n          const {nodeId: eventNodeId, enabled} = event.data;\n          if (eventNodeId !== nodeId) {\n            return;\n          }\n\n          adorner.toggle(enabled);\n        });\n\n    context.styleAdorners.add(adorner);\n\n    if (node.domModel().overlayModel().isHighlightedFlexContainerInPersistentOverlay(nodeId)) {\n      adorner.toggle(true);\n    }\n  }\n\n  pushContainerAdorner(context: OpeningTagContext): void {\n    const node = this.node();\n    const nodeId = node.id;\n    if (!nodeId) {\n      return;\n    }\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.CONTAINER);\n    const adorner = this.adorn(config);\n    adorner.classList.add('container');\n\n    const onClick = ((() => {\n                       const model = node.domModel().overlayModel();\n                       if (adorner.isActive()) {\n                         model.highlightContainerQueryInPersistentOverlay(nodeId);\n                         Badges.UserBadges.instance().recordAction(Badges.BadgeAction.MODERN_DOM_BADGE_CLICKED);\n                       } else {\n                         model.hideContainerQueryInPersistentOverlay(nodeId);\n                       }\n                     }) as EventListener);\n\n    adorner.addInteraction(onClick, {\n      isToggle: true,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.enableScrollSnap),\n      ariaLabelActive: i18nString(UIStrings.disableScrollSnap),\n    });\n\n    node.domModel().overlayModel().addEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_CONTAINER_QUERY_OVERLAY_STATE_CHANGED, event => {\n          const {nodeId: eventNodeId, enabled} = event.data;\n          if (eventNodeId !== nodeId) {\n            return;\n          }\n          adorner.toggle(enabled);\n        });\n\n    context.styleAdorners.add(adorner);\n    if (node.domModel().overlayModel().isHighlightedContainerQueryInPersistentOverlay(nodeId)) {\n      adorner.toggle(true);\n    }\n  }\n\n  pushMediaAdorner(context: OpeningTagContext): void {\n    const node = this.node();\n    const nodeId = node.id;\n    if (!nodeId) {\n      return;\n    }\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.MEDIA);\n    const adorner = this.adornMedia(config);\n    adorner.classList.add('media');\n    const onClick = (async(): Promise<void> => {\n                      await UI.ViewManager.ViewManager.instance().showView('medias');\n                      const view = UI.ViewManager.ViewManager.instance().view('medias');\n                      if (view) {\n                        const widget = await view.widget();\n                        if (widget instanceof Media.MainView.MainView) {\n                          await widget.waitForInitialPlayers();\n                          widget.selectPlayerByDOMNodeId(node.backendNodeId());\n                        }\n                      }\n                    }) as EventListener;\n\n    adorner.addInteraction(onClick, {\n      isToggle: false,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.openMediaPanel),\n      ariaLabelActive: i18nString(UIStrings.openMediaPanel),\n    });\n\n    context.styleAdorners.add(adorner);\n  }\n\n  updateScrollAdorner(): void {\n    if (!isOpeningTag(this.tagTypeContext)) {\n      return;\n    }\n    const scrollAdorner = this.tagTypeContext.adorners.values().find(\n        x => x.name === ElementsComponents.AdornerManager.RegisteredAdorners.SCROLL);\n    // Check if the node is scrollable, or if it's the <html> element and the document is scrollable\n    // because the top-level document (#document) doesn't have a corresponding tree element.\n    const needsAScrollAdorner = (this.node().nodeName() === 'HTML' && this.node().ownerDocument?.isScrollable()) ||\n        (this.node().nodeName() !== '#document' && this.node().isScrollable());\n    if (needsAScrollAdorner && !scrollAdorner) {\n      this.pushScrollAdorner();\n    } else if (!needsAScrollAdorner && scrollAdorner) {\n      this.removeAdorner(scrollAdorner, this.tagTypeContext);\n    }\n  }\n\n  pushScrollAdorner(): void {\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.SCROLL);\n    const adorner = this.adorn(config);\n    UI.Tooltip.Tooltip.install(adorner, i18nString(UIStrings.elementHasScrollableOverflow));\n    adorner.classList.add('scroll');\n  }\n}\n\nexport const InitialChildrenLimit = 500;\n\n// A union of HTML4 and HTML5-Draft elements that explicitly\n// or implicitly (for HTML5) forbid the closing tag.\nexport const ForbiddenClosingTagElements = new Set<string>([\n  'area', 'base',  'basefont', 'br',   'canvas',   'col',  'command', 'embed',  'frame', 'hr',\n  'img',  'input', 'keygen',   'link', 'menuitem', 'meta', 'param',   'source', 'track', 'wbr',\n]);\n\n// These tags we do not allow editing their tag name.\nexport const EditTagBlocklist = new Set<string>(['html', 'head', 'body']);\n\nexport function adornerComparator(adornerA: Adorners.Adorner.Adorner, adornerB: Adorners.Adorner.Adorner): number {\n  const compareCategories =\n      ElementsComponents.AdornerManager.compareAdornerNamesByCategory(adornerB.name, adornerB.name);\n  if (compareCategories === 0) {\n    return adornerA.name.localeCompare(adornerB.name);\n  }\n  return compareCategories;\n}\n\nexport function convertUnicodeCharsToHTMLEntities(text: string): {\n  text: string,\n  entityRanges: TextUtils.TextRange.SourceRange[],\n} {\n  let result = '';\n  let lastIndexAfterEntity = 0;\n  const entityRanges = [];\n  const charToEntity = MappedCharToEntity;\n  for (let i = 0, size = text.length; i < size; ++i) {\n    const char = text.charAt(i);\n    if (charToEntity.has(char)) {\n      result += text.substring(lastIndexAfterEntity, i);\n      const entityValue = '&' + charToEntity.get(char) + ';';\n      entityRanges.push(new TextUtils.TextRange.SourceRange(result.length, entityValue.length));\n      result += entityValue;\n      lastIndexAfterEntity = i + 1;\n    }\n  }\n  if (result) {\n    result += text.substring(lastIndexAfterEntity);\n  }\n  return {text: result || text, entityRanges};\n}\n\nexport interface EditorHandles {\n  commit: () => void;\n  cancel: () => void;\n  editor?: TextEditor.TextEditor.TextEditor;\n  resize: () => void;\n}\n\n// As a privacy measure we are logging elements tree outline as a flat list where every tree item is a\n// child of a tree outline.\nfunction loggingParentProvider(e: Element): Element|undefined {\n  const treeElement = UI.TreeOutline.TreeElement.getTreeElementBylistItemNode(e);\n  return treeElement?.treeOutline?.contentElement;\n}\n\nVisualLogging.registerParentProvider('elementsTreeOutline', loggingParentProvider);\n", "// Copyright 2018 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\n\nexport const fullQualifiedSelector = function(node: SDK.DOMModel.DOMNode, justSelector?: boolean): string {\n  if (node.nodeType() !== Node.ELEMENT_NODE) {\n    return node.localName() || node.nodeName().toLowerCase();\n  }\n  return cssPath(node, justSelector);\n};\n\nexport const cssPath = function(node: SDK.DOMModel.DOMNode, optimized?: boolean): string {\n  if (node.nodeType() !== Node.ELEMENT_NODE) {\n    return '';\n  }\n\n  const steps = [];\n  let contextNode: SDK.DOMModel.DOMNode|null = node;\n  while (contextNode) {\n    const step = cssPathStep(contextNode, Boolean(optimized), contextNode === node);\n    if (!step) {\n      break;\n    }  // Error - bail out early.\n    steps.push(step);\n    if (step.optimized) {\n      break;\n    }\n    contextNode = contextNode.parentNode;\n  }\n\n  steps.reverse();\n  return steps.join(' > ');\n};\n\nexport const canGetJSPath = function(node: SDK.DOMModel.DOMNode): boolean {\n  let wp: (SDK.DOMModel.DOMNode|null)|SDK.DOMModel.DOMNode = node;\n  while (wp) {\n    const shadowRoot = wp.ancestorShadowRoot();\n    if (shadowRoot && shadowRoot.shadowRootType() !== SDK.DOMModel.DOMNode.ShadowRootTypes.Open) {\n      return false;\n    }\n    wp = wp.ancestorShadowHost();\n  }\n  return true;\n};\n\nexport const jsPath = function(node: SDK.DOMModel.DOMNode, optimized?: boolean): string {\n  if (node.nodeType() !== Node.ELEMENT_NODE) {\n    return '';\n  }\n\n  const path = [];\n  let wp: (SDK.DOMModel.DOMNode|null)|SDK.DOMModel.DOMNode = node;\n  while (wp) {\n    path.push(cssPath(wp, optimized));\n    wp = wp.ancestorShadowHost();\n  }\n  path.reverse();\n  let result = '';\n  for (let i = 0; i < path.length; ++i) {\n    const string = JSON.stringify(path[i]);\n    if (i) {\n      result += `.shadowRoot.querySelector(${string})`;\n    } else {\n      result += `document.querySelector(${string})`;\n    }\n  }\n  return result;\n};\n\nconst cssPathStep = function(node: SDK.DOMModel.DOMNode, optimized: boolean, isTargetNode: boolean): Step|null {\n  if (node.nodeType() !== Node.ELEMENT_NODE) {\n    return null;\n  }\n\n  const id = node.getAttribute('id');\n  if (optimized) {\n    if (id) {\n      return new Step(idSelector(id), true);\n    }\n    const nodeNameLower = node.nodeName().toLowerCase();\n    if (nodeNameLower === 'body' || nodeNameLower === 'head' || nodeNameLower === 'html') {\n      return new Step(node.nodeNameInCorrectCase(), true);\n    }\n  }\n  const nodeName = node.nodeNameInCorrectCase();\n\n  if (id) {\n    return new Step(nodeName + idSelector(id), true);\n  }\n  const parent = node.parentNode;\n  if (!parent || parent.nodeType() === Node.DOCUMENT_NODE) {\n    return new Step(nodeName, true);\n  }\n\n  function prefixedElementClassNames(node: SDK.DOMModel.DOMNode): string[] {\n    const classAttribute = node.getAttribute('class');\n    if (!classAttribute) {\n      return [];\n    }\n\n    return classAttribute.split(/\\s+/g).filter(Boolean).map(function(name) {\n      // The prefix is required to store \"__proto__\" in a object-based map.\n      return '$' + name;\n    });\n  }\n\n  function idSelector(id: string): string {\n    return '#' + CSS.escape(id);\n  }\n\n  const prefixedOwnClassNamesArray = prefixedElementClassNames(node);\n  let needsClassNames = false;\n  let needsNthChild = false;\n  let ownIndex = -1;\n  let elementIndex = -1;\n  const siblings = parent.children();\n  for (let i = 0; siblings && (ownIndex === -1 || !needsNthChild) && i < siblings.length; ++i) {\n    const sibling = siblings[i];\n    if (sibling.nodeType() !== Node.ELEMENT_NODE) {\n      continue;\n    }\n    elementIndex += 1;\n    if (sibling === node) {\n      ownIndex = elementIndex;\n      continue;\n    }\n    if (needsNthChild) {\n      continue;\n    }\n    if (sibling.nodeNameInCorrectCase() !== nodeName) {\n      continue;\n    }\n\n    needsClassNames = true;\n    const ownClassNames = new Set<string>(prefixedOwnClassNamesArray);\n    if (!ownClassNames.size) {\n      needsNthChild = true;\n      continue;\n    }\n    const siblingClassNamesArray = prefixedElementClassNames(sibling);\n    for (let j = 0; j < siblingClassNamesArray.length; ++j) {\n      const siblingClass = siblingClassNamesArray[j];\n      if (!ownClassNames.has(siblingClass)) {\n        continue;\n      }\n      ownClassNames.delete(siblingClass);\n      if (!ownClassNames.size) {\n        needsNthChild = true;\n        break;\n      }\n    }\n  }\n\n  let result = nodeName;\n  if (isTargetNode && nodeName.toLowerCase() === 'input' && node.getAttribute('type') && !node.getAttribute('id') &&\n      !node.getAttribute('class')) {\n    result += '[type=' + CSS.escape((node.getAttribute('type')) || '') + ']';\n  }\n  if (needsNthChild) {\n    result += ':nth-child(' + (ownIndex + 1) + ')';\n  } else if (needsClassNames) {\n    for (const prefixedName of prefixedOwnClassNamesArray) {\n      result += '.' + CSS.escape(prefixedName.slice(1));\n    }\n  }\n\n  return new Step(result, false);\n};\n\nexport const xPath = function(node: SDK.DOMModel.DOMNode, optimized?: boolean): string {\n  if (node.nodeType() === Node.DOCUMENT_NODE) {\n    return '/';\n  }\n\n  const steps = [];\n  let contextNode: SDK.DOMModel.DOMNode|null = node;\n  while (contextNode) {\n    const step = xPathValue(contextNode, optimized);\n    if (!step) {\n      break;\n    }  // Error - bail out early.\n    steps.push(step);\n    if (step.optimized) {\n      break;\n    }\n    contextNode = contextNode.parentNode;\n  }\n\n  steps.reverse();\n  return (steps.length && steps[0].optimized ? '' : '/') + steps.join('/');\n};\n\nconst xPathValue = function(node: SDK.DOMModel.DOMNode, optimized?: boolean): Step|null {\n  let ownValue;\n  const ownIndex = xPathIndex(node);\n  if (ownIndex === -1) {\n    return null;\n  }  // Error.\n\n  switch (node.nodeType()) {\n    case Node.ELEMENT_NODE:\n      if (optimized && node.getAttribute('id')) {\n        return new Step('//*[@id=\"' + node.getAttribute('id') + '\"]', true);\n      }\n      ownValue = node.localName();\n      break;\n    case Node.ATTRIBUTE_NODE:\n      ownValue = '@' + node.nodeName();\n      break;\n    case Node.TEXT_NODE:\n    case Node.CDATA_SECTION_NODE:\n      ownValue = 'text()';\n      break;\n    case Node.PROCESSING_INSTRUCTION_NODE:\n      ownValue = 'processing-instruction()';\n      break;\n    case Node.COMMENT_NODE:\n      ownValue = 'comment()';\n      break;\n    case Node.DOCUMENT_NODE:\n      ownValue = '';\n      break;\n    default:\n      ownValue = '';\n      break;\n  }\n\n  if (ownIndex > 0) {\n    ownValue += '[' + ownIndex + ']';\n  }\n\n  return new Step(ownValue, node.nodeType() === Node.DOCUMENT_NODE);\n};\n\nconst xPathIndex = function(node: SDK.DOMModel.DOMNode): number {\n  /**\n   * Returns -1 in case of error, 0 if no siblings matching the same expression,\n   * <XPath index among the same expression-matching sibling nodes> otherwise.\n   */\n  function areNodesSimilar(left: SDK.DOMModel.DOMNode, right: SDK.DOMModel.DOMNode): boolean {\n    if (left === right) {\n      return true;\n    }\n\n    if (left.nodeType() === Node.ELEMENT_NODE && right.nodeType() === Node.ELEMENT_NODE) {\n      return left.localName() === right.localName();\n    }\n\n    if (left.nodeType() === right.nodeType()) {\n      return true;\n    }\n\n    // XPath treats CDATA as text nodes.\n    const leftType = left.nodeType() === Node.CDATA_SECTION_NODE ? Node.TEXT_NODE : left.nodeType();\n    const rightType = right.nodeType() === Node.CDATA_SECTION_NODE ? Node.TEXT_NODE : right.nodeType();\n    return leftType === rightType;\n  }\n\n  const siblings = node.parentNode ? node.parentNode.children() : null;\n  if (!siblings) {\n    return 0;\n  }  // Root node - no siblings.\n  let hasSameNamedElements;\n  for (let i = 0; i < siblings.length; ++i) {\n    if (areNodesSimilar(node, siblings[i]) && siblings[i] !== node) {\n      hasSameNamedElements = true;\n      break;\n    }\n  }\n  if (!hasSameNamedElements) {\n    return 0;\n  }\n  let ownIndex = 1;  // XPath indices start with 1.\n  for (let i = 0; i < siblings.length; ++i) {\n    if (areNodesSimilar(node, siblings[i])) {\n      if (siblings[i] === node) {\n        return ownIndex;\n      }\n      ++ownIndex;\n    }\n  }\n  return -1;  // An error occurred: |node| not found in parent's children.\n};\n\nexport class Step {\n  value: string;\n  optimized: boolean;\n  constructor(value: string, optimized: boolean) {\n    this.value = value;\n    this.optimized = optimized || false;\n  }\n\n  toString(): string {\n    return this.value;\n  }\n}\n", "// Copyright 2018 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\n\nimport {PseudoStateMarkerDecorator} from './ElementsPanel.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of the Marker Decorator of Elements\n   */\n  domBreakpoint: 'DOM Breakpoint',\n  /**\n   * @description Title of the Marker Decorator of Elements\n   */\n  elementIsHidden: 'Element is hidden',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/MarkerDecorator.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport interface MarkerDecorator {\n  decorate(node: SDK.DOMModel.DOMNode): {\n    title: string,\n    color: string,\n  }|null;\n}\n\nexport class GenericDecorator implements MarkerDecorator {\n  private readonly title: string;\n  private readonly color: string;\n\n  constructor(extension: {\n    marker: string,\n    title: () => string,\n    color: string,\n  }) {\n    if (!extension.title || !extension.color) {\n      throw new Error(`Generic decorator requires a color and a title: ${extension.marker}`);\n    }\n    this.title = extension.title();\n    this.color = (extension.color);\n  }\n\n  decorate(_node: SDK.DOMModel.DOMNode): {\n    title: string,\n    color: string,\n  }|null {\n    return {title: this.title, color: this.color};\n  }\n}\n\nconst domBreakpointData = {\n  marker: 'breakpoint-marker',\n  title: i18nLazyString(UIStrings.domBreakpoint),\n  color: 'var(--sys-color-primary-bright)',\n};\n\nconst elementIsHiddenData = {\n  marker: 'hidden-marker',\n  title: i18nLazyString(UIStrings.elementIsHidden),\n  color: 'var(--sys-color-neutral-bright)',\n};\n\nexport function getRegisteredDecorators(): MarkerDecoratorRegistration[] {\n  return [\n    {\n      ...domBreakpointData,\n      decorator: () => new GenericDecorator(domBreakpointData),\n    },\n    {\n      ...elementIsHiddenData,\n      decorator: () => new GenericDecorator(elementIsHiddenData),\n    },\n    {\n      decorator: PseudoStateMarkerDecorator.instance,\n      marker: 'pseudo-state-marker',\n      title: undefined,\n      color: undefined,\n    },\n  ];\n}\nexport interface MarkerDecoratorRegistration {\n  decorator: () => MarkerDecorator;\n  marker: string;\n  color?: string;\n  title?: (() => Platform.UIString.LocalizedString);\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2014 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.editing {\n  box-shadow: var(--drop-shadow);\n  background-color: var(--sys-color-cdt-base-container);\n  text-overflow: clip !important; /* stylelint-disable-line declaration-no-important */\n  padding-left: 2px;\n  margin-left: -2px;\n  padding-right: 2px;\n  margin-right: -2px;\n  margin-bottom: -1px;\n  padding-bottom: 1px;\n  opacity: 100% !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.editing,\n.editing * {\n  color: var(--sys-color-on-surface) !important; /* stylelint-disable-line declaration-no-important */\n  text-decoration: none !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.editing br {\n  display: none;\n}\n\n.adorner-reveal {\n  vertical-align: middle;\n  margin: 0 3px;\n}\n\n.adorner-with-icon {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  height: 100%;\n\n  devtools-icon {\n    width: var(--sys-size-6);\n    height: var(--sys-size-6);\n    color: var(--icon-primary);\n  }\n}\n\n.adorner-with-icon *:not(:last-child) {\n  margin-right: 2px;\n}\n\n.elements-disclosure {\n  width: 100%;\n  display: inline-block;\n  line-height: normal;\n}\n\n.elements-disclosure li {\n  /** Keep margin-left & padding-left in sync with ElementsTreeElements.updateDecorations **/\n  padding: 1px 0 0 14px;\n  margin-left: -2px;\n  word-break: normal;\n  position: relative;\n  min-height: 15px;\n  line-height: 1.36;\n  min-width: 200px;\n}\n\n.elements-disclosure li::after {\n  content: \"\";\n  position: absolute;\n  inset: 0;\n  left: calc(var(--indent) * -1);\n  width: var(--indent);\n}\n\n.elements-disclosure li.parent {\n  display: flex;\n}\n\n.elements-disclosure li.parent:not(.always-parent) {\n  /** Keep it in sync with ElementsTreeElements.updateDecorations **/\n  margin-left: -12px;\n}\n\n.elements-disclosure li .ai-button-container {\n  display: none;\n  margin-left: 1ch;\n  overflow: visible;\n  max-height: var(--sys-size-6);\n  vertical-align: top;\n  margin-top: -1px;\n  position: absolute;\n  right: var(--sys-size-3);\n  bottom: 5px;\n  z-index: 999;\n}\n\n.elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) li.hovered .ai-button-container {\n  display: inline-flex;\n}\n\n.elements-disclosure li .selected-hint::before {\n  font-style: italic;\n  content: \" == $0\";\n  opacity: 0%;\n  position: absolute;\n  white-space: pre;\n}\n\n.elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) li.selected .selected-hint::before {\n  position: static;\n  opacity: 60%;\n}\n\n.elements-disclosure li.parent:not(.always-parent)::before {\n  box-sizing: border-box;\n  user-select: none;\n  mask-image: var(--image-file-arrow-collapse);\n  height: 14px;\n  width: 14px;\n  content: \"\\\\A0\\\\A0\";\n  color: transparent;\n  text-shadow: none;\n  margin: -3px var(--sys-size-2) 0 -3px;\n  background-color: var(--icon-default);\n}\n\n.elements-disclosure li.parent.expanded::before {\n  mask-image: var(--image-file-arrow-drop-down);\n}\n\n.elements-disclosure li .selection {\n  display: none;\n  z-index: -1;\n}\n\n.elements-disclosure li.selected .selection {\n  display: block;\n}\n\n.elements-disclosure li.elements-drag-over .selection {\n  display: block;\n  margin-top: -2px;\n  border-top: 2px solid var(--sys-color-primary);\n}\n\n.elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) .selection {\n  background-color: var(--sys-color-neutral-container);\n}\n\n.elements-disclosure li.hovered:not(.selected) .selection {\n  display: block;\n  left: 3px;\n  right: 3px;\n  background-color: var(--sys-color-state-hover-on-subtle);\n  border-radius: 5px;\n}\n\n.elements-disclosure li .webkit-html-tag.close {\n  margin-left: -12px;\n}\n\n.elements-disclosure .elements-tree-outline.hide-selection-when-blurred .selected:focus-visible .highlight > * {\n  background: var(--sys-color-state-focus-highlight);\n  border-radius: 2px;\n  outline: 2px solid var(--sys-color-state-focus-ring);\n}\n\n.elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) li.selected:focus .selection {\n  background-color: var(--sys-color-tonal-container);\n}\n\n.elements-disclosure ol {\n  list-style-type: none;\n  /** Keep it in sync with ElementsTreeElements.updateDecorations **/\n  padding-inline-start: 12px;\n  margin: 0;\n}\n\n.elements-disclosure ol.children {\n  display: none;\n  min-width: 100%;\n}\n\n.elements-disclosure ol.children.expanded {\n  display: inline-block;\n}\n\n.elements-disclosure > ol {\n  position: relative;\n  margin: 0;\n  min-width: 100%;\n  min-height: 100%;\n  padding-left: 2px;\n}\n\n.elements-disclosure li.in-clipboard .highlight {\n  outline: 1px dotted var(--sys-color-divider);\n}\n\n.elements-tree-outline ol.shadow-root-deep {\n  background-color: transparent;\n}\n\n.elements-tree-editor {\n  box-shadow: var(--drop-shadow);\n  margin-right: 4px;\n}\n\nbutton,\ninput,\nselect {\n  font-family: inherit;\n  font-size: inherit;\n}\n\n.elements-gutter-decoration {\n  position: absolute;\n  top: 3px;\n  left: 2px;\n  height: 9px;\n  width: 9px;\n  border-radius: 5px;\n  border: 1px solid var(--sys-color-orange-bright);\n  background-color: var(--sys-color-orange-bright);\n}\n\n.elements-gutter-decoration.elements-has-decorated-children {\n  opacity: 50%;\n}\n\n.add-attribute {\n  margin-left: 1px;\n  margin-right: 1px;\n  white-space: nowrap;\n}\n\n.elements-tree-nowrap,\n.elements-tree-nowrap .li {\n  white-space: pre !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.elements-disclosure .elements-tree-nowrap li {\n  overflow-wrap: normal;\n}\n/* DOM update highlight */\n@keyframes dom-update-highlight-animation {\n  0% {\n    background-color: var(--sys-color-token-tag);\n    color: var(--sys-color-cdt-base-container);\n  }\n\n  80% {\n    background-color: var(--sys-color-token-meta);\n  }\n\n  100% {\n    background-color: inherit;\n  }\n}\n\n@keyframes dom-update-highlight-animation-dark {\n  0% {\n    background-color: var(--sys-color-token-tag);\n    color: var(--sys-color-cdt-base-container);\n  }\n\n  80% {\n    background-color: var(--sys-color-cdt-base-container);\n    color: inherit;\n  }\n\n  100% {\n    background-color: inherit;\n  }\n}\n\n.dom-update-highlight {\n  animation: dom-update-highlight-animation 1.4s 1 cubic-bezier(0, 0, 0.2, 1);\n  border-radius: 2px;\n}\n\n:host-context(.theme-with-dark-background) .dom-update-highlight {\n  animation: dom-update-highlight-animation-dark 1.4s 1 cubic-bezier(0, 0, 0.2, 1);\n}\n\n.elements-disclosure.single-node li {\n  padding-left: 2px;\n}\n\n.elements-tree-shortcut-title,\n.elements-tree-shortcut-link {\n  color: var(--sys-color-token-subtle);\n}\n\n.elements-disclosure .gutter-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 15px;\n  height: 15px;\n  z-index: 1;\n}\n\n.elements-hide-gutter .gutter-container {\n  display: none;\n}\n\n.gutter-container > devtools-icon {\n  display: block;\n  visibility: hidden;\n  position: relative;\n  left: -1px;\n  width: 16px;\n  height: 16px;\n}\n\n.elements-disclosure li.selected .gutter-container:not(.has-decorations) > devtools-icon {\n  visibility: visible;\n}\n/** Guide line */\n\nli.hovered:not(.always-parent) + ol.children,\n.elements-tree-outline ol.shadow-root,\nli.selected:not(.always-parent) + ol.children {\n  background: linear-gradient(to right, var(--override-indentation-level-border-color), var(--override-indentation-level-border-color) 0.5px, transparent 0);\n  background-position-x: 5px;\n  background-size: 0.5px 100%;\n  background-repeat: no-repeat;\n}\n\nli.selected:not(.always-parent) + ol.children {\n  --override-indentation-level-border-color: var(--sys-color-divider) !important; /* stylelint-disable-line declaration-no-important */\n}\n\nli.hovered:not(.always-parent) + ol.children:not(.shadow-root) {\n  --override-indentation-level-border-color: color-mix(in srgb, var(--ref-palette-neutral0) 10%, transparent);\n}\n\n.elements-tree-outline ol.shadow-root {\n  --override-indentation-level-border-color: var(--ref-palette-orange95);\n}\n\n@media (forced-colors: active) {\n  .elements-disclosure li.parent::before {\n    forced-color-adjust: none;\n    background-color: ButtonText !important; /* stylelint-disable-line declaration-no-important */\n  }\n\n  .elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) li.selected .selected-hint::before {\n    opacity: unset;\n  }\n\n  .elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) .selection,\n  .elements-disclosure li.hovered:not(.selected) .selection,\n  .elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) li.selected:focus .selection {\n    forced-color-adjust: none;\n    background: canvas !important; /* stylelint-disable-line declaration-no-important */\n    border: 1px solid Highlight !important; /* stylelint-disable-line declaration-no-important */\n  }\n\n  .gutter-container > devtools-icon {\n    forced-color-adjust: none;\n  }\n}\n\n.violating-element {\n  /* stylelint-disable-next-line custom-property-pattern */\n  background-image: var(--image-file-errorWave);\n  background-repeat: repeat-x;\n  background-position: bottom;\n  padding-bottom: 1px;\n}\n\n/*# sourceURL=${import.meta.resolve('./elementsTreeOutline.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as ElementsComponents from './components/components.js';\nimport {ElementsPanel} from './ElementsPanel.js';\nimport {ElementsTreeElement} from './ElementsTreeElement.js';\nimport {ElementsTreeOutline} from './ElementsTreeOutline.js';\n\nconst UIStrings = {\n  /**\n   * @description Link text content in Elements Tree Outline of the Elements panel\n   */\n  reveal: 'reveal',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ShortcutTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ShortcutTreeElement extends UI.TreeOutline.TreeElement {\n  private readonly nodeShortcut: SDK.DOMModel.DOMNodeShortcut;\n  #hovered?: boolean;\n  constructor(nodeShortcut: SDK.DOMModel.DOMNodeShortcut) {\n    super('');\n    this.listItemElement.createChild('div', 'selection fill');\n    const title = this.listItemElement.createChild('span', 'elements-tree-shortcut-title');\n    let text = nodeShortcut.nodeName.toLowerCase();\n    if (nodeShortcut.nodeType === Node.ELEMENT_NODE) {\n      text = '<' + text + '>';\n    }\n    title.textContent = '\\u21AA ' + text;\n    this.nodeShortcut = nodeShortcut;\n    this.addRevealAdorner();\n  }\n\n  addRevealAdorner(): void {\n    const adorner = new Adorners.Adorner.Adorner();\n    adorner.classList.add('adorner-reveal');\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.REVEAL);\n    const name = config.name;\n    const adornerContent = document.createElement('span');\n    const linkIcon = IconButton.Icon.create('select-element');\n    const slotText = document.createElement('span');\n    slotText.textContent = name;\n    adornerContent.append(linkIcon);\n    adornerContent.append(slotText);\n    adornerContent.classList.add('adorner-with-icon');\n    adorner.data = {\n      name,\n      content: adornerContent,\n      jslogContext: 'reveal',\n    };\n    this.listItemElement.appendChild(adorner);\n    const onClick = ((() => {\n                       this.nodeShortcut.deferredNode.resolve(\n                           node => {\n                             void Common.Revealer.reveal(node);\n                           },\n                       );\n                     }) as EventListener);\n    adorner.addInteraction(onClick, {\n      isToggle: false,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.reveal),\n      ariaLabelActive: i18nString(UIStrings.reveal),\n    });\n    adorner.addEventListener('mousedown', e => e.consume(), false);\n    ElementsPanel.instance().registerAdorner(adorner);\n  }\n\n  get hovered(): boolean {\n    return Boolean(this.#hovered);\n  }\n\n  set hovered(x: boolean) {\n    if (this.#hovered === x) {\n      return;\n    }\n    this.#hovered = x;\n    this.listItemElement.classList.toggle('hovered', x);\n  }\n\n  deferredNode(): SDK.DOMModel.DeferredDOMNode {\n    return this.nodeShortcut.deferredNode;\n  }\n\n  domModel(): SDK.DOMModel.DOMModel {\n    return this.nodeShortcut.deferredNode.domModel();\n  }\n\n  private setLeftIndentOverlay(): void {\n    // We use parent's `--indent` value and add 24px to account for an extra level of indent.\n    let indent = 24;\n    if (this.parent && this.parent instanceof ElementsTreeElement) {\n      const parentIndent = parseFloat(this.parent.listItemElement.style.getPropertyValue('--indent')) || 0;\n      indent += parentIndent;\n    }\n    this.listItemElement.style.setProperty('--indent', indent + 'px');\n  }\n\n  override onattach(): void {\n    this.setLeftIndentOverlay();\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    if (!selectedByUser) {\n      return true;\n    }\n    this.nodeShortcut.deferredNode.highlight();\n    this.nodeShortcut.deferredNode.resolve(resolved.bind(this));\n    function resolved(this: ShortcutTreeElement, node: SDK.DOMModel.DOMNode|null): void {\n      if (node && this.treeOutline instanceof ElementsTreeOutline) {\n        this.treeOutline.selectedDOMNodeInternal = node;\n        this.treeOutline.selectedNodeChanged(false);\n      }\n    }\n    return true;\n  }\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as ElementsComponents from './components/components.js';\nimport type {ElementsTreeElement} from './ElementsTreeElement.js';\nimport type {ElementsTreeOutline} from './ElementsTreeOutline.js';\nimport {ShortcutTreeElement} from './ShortcutTreeElement.js';\n\nconst UIStrings = {\n  /**\n   * @description Link text content in Elements Tree Outline of the Elements panel. When clicked, it \"reveals\" the true location of an element.\n   */\n  reveal: 'reveal',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/TopLayerContainer.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class TopLayerContainer extends UI.TreeOutline.TreeElement {\n  tree: ElementsTreeOutline;\n  document: SDK.DOMModel.DOMDocument;\n  currentTopLayerDOMNodes = new Set<SDK.DOMModel.DOMNode>();\n  topLayerUpdateThrottler: Common.Throttler.Throttler;\n\n  constructor(tree: ElementsTreeOutline, document: SDK.DOMModel.DOMDocument) {\n    super('#top-layer');\n    this.tree = tree;\n    this.document = document;\n    this.topLayerUpdateThrottler = new Common.Throttler.Throttler(1);\n  }\n\n  async throttledUpdateTopLayerElements(): Promise<void> {\n    await this.topLayerUpdateThrottler.schedule(() => this.updateTopLayerElements());\n  }\n\n  async updateTopLayerElements(): Promise<void> {\n    this.removeChildren();\n    this.removeCurrentTopLayerElementsAdorners();\n    this.currentTopLayerDOMNodes = new Set();\n    const domModel = this.document.domModel();\n    const newTopLayerElementsIDs = await domModel.getTopLayerElements();\n    if (!newTopLayerElementsIDs || newTopLayerElementsIDs.length === 0) {\n      return;\n    }\n\n    let topLayerElementIndex = 0;\n    for (let i = 0; i < newTopLayerElementsIDs.length; i++) {\n      const topLayerDOMNode = domModel.idToDOMNode.get(newTopLayerElementsIDs[i]);\n      if (!topLayerDOMNode || topLayerDOMNode.ownerDocument !== this.document) {\n        continue;\n      }\n\n      if (topLayerDOMNode.nodeName() !== '::backdrop') {\n        const topLayerElementShortcut = new SDK.DOMModel.DOMNodeShortcut(\n            domModel.target(), topLayerDOMNode.backendNodeId(), 0, topLayerDOMNode.nodeName());\n        const topLayerElementRepresentation = new ShortcutTreeElement(topLayerElementShortcut);\n        this.appendChild(topLayerElementRepresentation);\n        this.currentTopLayerDOMNodes.add(topLayerDOMNode);\n\n        // Add the element's backdrop if previous top layer element is a backdrop.\n        const previousTopLayerDOMNode = (i > 0) ? domModel.idToDOMNode.get(newTopLayerElementsIDs[i - 1]) : undefined;\n        if (previousTopLayerDOMNode && previousTopLayerDOMNode.nodeName() === '::backdrop') {\n          const backdropElementShortcut = new SDK.DOMModel.DOMNodeShortcut(\n              domModel.target(), previousTopLayerDOMNode.backendNodeId(), 0, previousTopLayerDOMNode.nodeName());\n          const backdropElementRepresentation = new ShortcutTreeElement(backdropElementShortcut);\n          topLayerElementRepresentation.appendChild(backdropElementRepresentation);\n        }\n\n        // TODO(changhaohan): store not-yet-inserted DOMNodes and adorn them when inserted.\n        const topLayerTreeElement = this.tree.treeElementByNode.get(topLayerDOMNode);\n        if (topLayerTreeElement) {\n          this.addTopLayerAdorner(topLayerTreeElement, topLayerElementRepresentation, ++topLayerElementIndex);\n        }\n      }\n    }\n  }\n\n  private removeCurrentTopLayerElementsAdorners(): void {\n    for (const node of this.currentTopLayerDOMNodes) {\n      const topLayerTreeElement = this.tree.treeElementByNode.get(node);\n      topLayerTreeElement?.removeAdornersByType(ElementsComponents.AdornerManager.RegisteredAdorners.TOP_LAYER);\n    }\n  }\n\n  private addTopLayerAdorner(\n      element: ElementsTreeElement, topLayerElementRepresentation: ShortcutTreeElement,\n      topLayerElementIndex: number): void {\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.TOP_LAYER);\n    const adornerContent = document.createElement('span');\n    adornerContent.classList.add('adorner-with-icon');\n    const linkIcon = IconButton.Icon.create('select-element');\n    const adornerText = document.createElement('span');\n    adornerText.textContent = `top-layer (${topLayerElementIndex})`;\n    adornerContent.append(linkIcon);\n    adornerContent.append(adornerText);\n    const adorner = element?.adorn(config, adornerContent);\n    if (adorner) {\n      const onClick = ((() => {\n                         topLayerElementRepresentation.revealAndSelect();\n                       }) as EventListener);\n      adorner.addInteraction(onClick, {\n        isToggle: false,\n        shouldPropagateOnKeydown: false,\n        ariaLabelDefault: i18nString(UIStrings.reveal),\n        ariaLabelActive: i18nString(UIStrings.reveal),\n      });\n      adorner.addEventListener('mousedown', e => e.consume(), false);\n    }\n  }\n}\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/node_text/node_text.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport layoutPaneStyles from './layoutPane.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of the input to select the overlay color for an element using the color picker\n   */\n  chooseElementOverlayColor: 'Choose the overlay color for this element',\n  /**\n   * @description Title of the show element button in the Layout pane of the Elements panel\n   */\n  showElementInTheElementsPanel: 'Show element in the Elements panel',\n  /**\n   * @description Title of a section on CSS Grid/Masonry tooling\n   */\n  gridOrMasonry: 'Grid / Masonry',\n  /**\n   * @description Title of a section in the Layout Sidebar pane of the Elements panel\n   */\n  overlayDisplaySettings: 'Overlay display settings',\n  /**\n   * @description Title of a section in Layout sidebar pane\n   */\n  gridOrMasonryOverlays: 'Grid / Masonry overlays',\n  /**\n   * @description Message in the Layout panel informing users that no CSS Grid/Masonry layouts were found on the page\n   */\n  noGridOrMasonryLayoutsFoundOnThisPage: 'No grid or masonry layouts found on this page',\n  /**\n   * @description Title of the Flexbox section in the Layout panel\n   */\n  flexbox: 'Flexbox',\n  /**\n   * @description Title of a section in the Layout panel\n   */\n  flexboxOverlays: 'Flexbox overlays',\n  /**\n   * @description Text in the Layout panel, when no flexbox elements are found\n   */\n  noFlexboxLayoutsFoundOnThisPage: 'No flexbox layouts found on this page',\n  /**\n   * @description Screen reader announcement when opening color picker tool.\n   */\n  colorPickerOpened: 'Color picker opened.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/LayoutPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html} = Lit;\n\ninterface BaseSettingOption {\n  title: string;\n}\n\ninterface BooleanSettingOption extends BaseSettingOption {\n  value: boolean;\n}\n\ninterface EnumSettingOption extends BaseSettingOption {\n  value: string;\n}\n\ninterface BaseSetting {\n  name: string;\n  type: Common.Settings.SettingType.BOOLEAN|Common.Settings.SettingType.ENUM;\n  title: string;\n}\n\ntype BooleanSetting = BaseSetting&{options: BooleanSettingOption[], value: boolean};\ntype EnumSetting = BaseSetting&{options: EnumSettingOption[], value: string};\ntype Setting = EnumSetting|BooleanSetting;\n\ninterface LayoutElement {\n  id: number;\n  color: string;\n  name: string;\n  domId?: string;\n  domClasses?: string[];\n  enabled: boolean;\n  reveal: () => void;\n  toggle: (value: boolean) => void;\n  setColor: (value: string) => void;\n  highlight: () => void;\n  hideHighlight: () => void;\n}\n\nconst nodeToLayoutElement = (node: SDK.DOMModel.DOMNode): LayoutElement => {\n  const className = node.getAttribute('class');\n  const nodeId = node.id;\n  return {\n    id: nodeId,\n    color: 'var(--sys-color-inverse-surface)',\n    name: node.localName(),\n    domId: node.getAttribute('id'),\n    domClasses: className ? className.split(/\\s+/).filter(s => !!s) : undefined,\n    enabled: false,\n    reveal: () => {\n      void Common.Revealer.reveal(node);\n      void node.scrollIntoView();\n    },\n    highlight: () => {\n      node.highlight();\n    },\n    hideHighlight: () => {\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    },\n    toggle: (_value: boolean) => {\n      throw new Error('Not implemented');\n    },\n    setColor(_value: string): never {\n      throw new Error('Not implemented');\n    },\n  };\n};\n\nconst gridNodesToElements = (nodes: SDK.DOMModel.DOMNode[]): LayoutElement[] => {\n  return nodes.map(node => {\n    const layoutElement = nodeToLayoutElement(node);\n    const nodeId = node.id;\n    return {\n      ...layoutElement,\n      color:\n          node.domModel().overlayModel().colorOfGridInPersistentOverlay(nodeId) || 'var(--sys-color-inverse-surface)',\n      enabled: node.domModel().overlayModel().isHighlightedGridInPersistentOverlay(nodeId),\n      toggle: (value: boolean) => {\n        if (value) {\n          node.domModel().overlayModel().highlightGridInPersistentOverlay(nodeId);\n        } else {\n          node.domModel().overlayModel().hideGridInPersistentOverlay(nodeId);\n        }\n      },\n      setColor(value: string): void {\n        this.color = value;\n        node.domModel().overlayModel().setColorOfGridInPersistentOverlay(nodeId, value);\n      },\n    };\n  });\n};\n\nconst flexContainerNodesToElements = (nodes: SDK.DOMModel.DOMNode[]): LayoutElement[] => {\n  return nodes.map(node => {\n    const layoutElement = nodeToLayoutElement(node);\n    const nodeId = node.id;\n    return {\n      ...layoutElement,\n      color:\n          node.domModel().overlayModel().colorOfFlexInPersistentOverlay(nodeId) || 'var(--sys-color-inverse-surface)',\n      enabled: node.domModel().overlayModel().isHighlightedFlexContainerInPersistentOverlay(nodeId),\n      toggle: (value: boolean) => {\n        if (value) {\n          node.domModel().overlayModel().highlightFlexContainerInPersistentOverlay(nodeId);\n        } else {\n          node.domModel().overlayModel().hideFlexContainerInPersistentOverlay(nodeId);\n        }\n      },\n      setColor(value: string): void {\n        this.color = value;\n        node.domModel().overlayModel().setColorOfFlexInPersistentOverlay(nodeId, value);\n      },\n    };\n  });\n};\n\ninterface HTMLInputElementEvent extends InputEvent {\n  target: HTMLInputElement;\n}\n\nfunction isEnumSetting(setting: Setting): setting is EnumSetting {\n  return setting.type === Common.Settings.SettingType.ENUM;\n}\n\nfunction isBooleanSetting(setting: Setting): setting is BooleanSetting {\n  return setting.type === Common.Settings.SettingType.BOOLEAN;\n}\n\nexport interface LayoutPaneData {\n  settings: Setting[];\n  gridElements: LayoutElement[];\n  flexContainerElements?: LayoutElement[];\n}\n\nlet layoutPaneInstance: LayoutPane;\n\ninterface ViewInput {\n  onEnumSettingChange(setting: EnumSetting, e: Event): unknown;\n  flexContainerElements: LayoutElement[]|undefined;\n  onElementClick(element: LayoutElement, e: MouseEvent): unknown;\n  onColorChange(element: LayoutElement, e: Event): unknown;\n  onMouseLeave(element: LayoutElement, e: MouseEvent): unknown;\n  onMouseEnter(element: LayoutElement, e: MouseEvent): unknown;\n  onElementToggle(element: LayoutElement, e: Event): unknown;\n  onBooleanSettingChange(setting: BooleanSetting, e: Event): unknown;\n  enumSettings: EnumSetting[];\n  booleanSettings: BooleanSetting[];\n  gridElements: LayoutElement[]|undefined;\n  onSummaryKeyDown(e: KeyboardEvent): unknown;\n}\n\nconst DEFAULT_VIEW: View = (input, output, target) => {\n  const onColorLabelKeyUp = (event: KeyboardEvent): void => {\n    // Handle Enter and Space events to make the color picker accessible.\n    if (event.key !== 'Enter' && event.key !== ' ') {\n      return;\n    }\n    const target = event.target as HTMLLabelElement;\n    const input = target.querySelector('input') as HTMLInputElement;\n    input.click();\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.colorPickerOpened));\n    event.preventDefault();\n  };\n  const onColorLabelKeyDown = (event: KeyboardEvent): void => {\n    // Prevent default scrolling when the Space key is pressed.\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n  };\n  const renderElement = (element: LayoutElement): Lit.LitTemplate => html`<div\n          class=\"element\"\n          jslog=${VisualLogging.item()}>\n        <devtools-checkbox\n          data-element=\"true\"\n          class=\"checkbox-label\"\n          .checked=${element.enabled}\n          @change=${(e: Event) => input.onElementToggle(element, e)}\n          jslog=${VisualLogging.toggle().track({\n    click: true\n  })}>\n          <span\n              class=\"node-text-container\"\n              data-label=\"true\"\n              @mouseenter=${(e: MouseEvent) => input.onMouseEnter(element, e)}\n              @mouseleave=${(e: MouseEvent) => input.onMouseLeave(element, e)}>\n            <devtools-node-text .data=${{\n    nodeId: element.domId, nodeTitle: element.name, nodeClasses: element.domClasses,\n  }\n  }></devtools-node-text>\n          </span>\n        </devtools-checkbox>\n        <label\n            @keyup=${onColorLabelKeyUp}\n            @keydown=${onColorLabelKeyDown}\n            class=\"color-picker-label\"\n            style=\"background: ${element.color};\"\n            jslog=${\n      VisualLogging.showStyleEditor('color')\n          .track({\n            click: true\n          })}>\n          <input\n              @change=${(e: Event) => input.onColorChange(element, e)}\n              @input=${(e: InputEvent) => input.onColorChange(element, e)}\n              title=${i18nString(UIStrings.chooseElementOverlayColor)}\n              tabindex=\"0\"\n              class=\"color-picker\"\n              type=\"color\"\n              value=${element.color} />\n        </label>\n        <devtools-button class=\"show-element\"\n           .title=${i18nString(UIStrings.showElementInTheElementsPanel)}\n           aria-label=${i18nString(UIStrings.showElementInTheElementsPanel)}\n           .iconName=${'select-element'}\n           .jslogContext=${'elements.select-element'}\n           .size=${Buttons.Button.Size.SMALL}\n           .variant=${Buttons.Button.Variant.ICON}\n           @click=${(e: MouseEvent) => input.onElementClick(element, e)}\n           ></devtools-button>\n      </div>`;\n\n  // clang-format off\n  render(html`\n      <div style=\"min-width: min-content;\" jslog=${VisualLogging.pane('layout').track({resize: true})}>\n        <style>${layoutPaneStyles}</style>\n        <style>${UI.inspectorCommonStyles}</style>\n        <details open>\n          <summary class=\"header\"\n            @keydown=${input.onSummaryKeyDown}\n            jslog=${VisualLogging.sectionHeader('grid-settings').track({click: true})}>\n            ${i18nString(UIStrings.gridOrMasonry)}\n          </summary>\n          <div class=\"content-section\" jslog=${VisualLogging.section('grid-settings')}>\n            <h3 class=\"content-section-title\">${i18nString(UIStrings.overlayDisplaySettings)}</h3>\n            <div class=\"select-settings\">\n              ${input.enumSettings.map(setting =>\n                  html`<label data-enum-setting=\"true\" class=\"select-label\" title=${setting.title}>\n                      <select\n                        data-input=\"true\"\n                        jslog=${VisualLogging.dropDown().track({change: true}).context(setting.name)}\n                        @change=${(e: Event) => input.onEnumSettingChange(setting, e)}>\n                        ${setting.options.map(opt =>\n                        html`<option\n                                value=${opt.value}\n                                .selected=${setting.value === opt.value}\n                                jslog=${\n                                  VisualLogging.item(Platform.StringUtilities.toKebabCase(opt.value)).track({\n                                    click: true})}>${opt.title}</option>`)}\n                      </select>\n                    </label>`)}\n            </div>\n            <div class=\"checkbox-settings\">\n              ${input.booleanSettings.map(setting =>\n                  html`<devtools-checkbox\n                      data-boolean-setting=\"true\"\n                      class=\"checkbox-label\"\n                      title=${setting.title}\n                      .checked=${setting.value}\n                      @change=${(e: Event) => input.onBooleanSettingChange(setting, e)}\n                      jslog=${VisualLogging.toggle().track({click: true}).context(setting.name)}>\n                    ${setting.title}\n                  </devtools-checkbox>`)}\n            </div>\n          </div>\n          ${input.gridElements ?\n            html`<div class=\"content-section\" jslog=${VisualLogging.section('grid-overlays')}>\n              <h3 class=\"content-section-title\">\n                ${input.gridElements.length ?\n                    i18nString(UIStrings.gridOrMasonryOverlays) :\n                    i18nString(UIStrings.noGridOrMasonryLayoutsFoundOnThisPage)}\n              </h3>\n              ${input.gridElements.length ?\n                  html`<div class=\"elements\">${input.gridElements.map(renderElement)}</div>` :\n                  ''}\n            </div>` : ''}\n        </details>\n        ${input.flexContainerElements !== undefined ?\n          html`\n          <details open>\n            <summary\n                class=\"header\"\n                @keydown=${input.onSummaryKeyDown}\n                jslog=${VisualLogging.sectionHeader('flexbox-overlays').track({click: true})}>\n              ${i18nString(UIStrings.flexbox)}\n            </summary>\n            ${input.flexContainerElements ?\n              html`<div class=\"content-section\" jslog=${VisualLogging.section('flexbox-overlays')}>\n                <h3 class=\"content-section-title\">\n                  ${input.flexContainerElements.length ?\n                      i18nString(UIStrings.flexboxOverlays) :\n                      i18nString(UIStrings.noFlexboxLayoutsFoundOnThisPage)}\n                </h3>\n                ${input.flexContainerElements.length ?\n                    html`<div class=\"elements\">${input.flexContainerElements.map(renderElement)}</div>` :\n                    ''}\n              </div>` : ''}\n          </details>`\n        : ''}\n      </div>`,\n      // clang-format on\n      target);\n};\n\ntype View = (input: ViewInput, output: object, element: HTMLElement) => void;\nexport class LayoutPane extends UI.Widget.Widget {\n  readonly #settings: readonly Setting[] = [];\n  readonly #uaShadowDOMSetting: Common.Settings.Setting<boolean>;\n  #domModels: SDK.DOMModel.DOMModel[];\n  readonly #view: View;\n\n  constructor(element?: HTMLElement, view: View = DEFAULT_VIEW) {\n    super(element);\n    this.#settings = this.#makeSettings();\n    this.#uaShadowDOMSetting = Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom');\n    this.#domModels = [];\n    this.#view = view;\n  }\n\n  static instance(): LayoutPane {\n    if (!layoutPaneInstance) {\n      layoutPaneInstance = new LayoutPane();\n    }\n    return layoutPaneInstance;\n  }\n\n  modelAdded(domModel: SDK.DOMModel.DOMModel): void {\n    const overlayModel = domModel.overlayModel();\n    overlayModel.addEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED, this.requestUpdate, this);\n    overlayModel.addEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED, this.requestUpdate, this);\n    this.#domModels.push(domModel);\n  }\n\n  modelRemoved(domModel: SDK.DOMModel.DOMModel): void {\n    const overlayModel = domModel.overlayModel();\n    overlayModel.removeEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED, this.requestUpdate, this);\n    overlayModel.removeEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED, this.requestUpdate, this);\n    this.#domModels = this.#domModels.filter(model => model !== domModel);\n  }\n\n  async #fetchNodesByStyle(style: Array<{\n    name: string,\n    value: string,\n  }>): Promise<SDK.DOMModel.DOMNode[]> {\n    const showUAShadowDOM = this.#uaShadowDOMSetting.get();\n\n    const nodes = [];\n    for (const domModel of this.#domModels) {\n      try {\n        const nodeIds = await domModel.getNodesByStyle(style, true /* pierce */);\n        for (const nodeId of nodeIds) {\n          const node = domModel.nodeForId(nodeId);\n          if (node !== null && (showUAShadowDOM || !node.ancestorUserAgentShadowRoot())) {\n            nodes.push(node);\n          }\n        }\n      } catch (error) {\n        // TODO(crbug.com/1167706): Sometimes in E2E tests the layout panel is updated after a DOM node\n        // has been removed. This causes an error that a node has not been found.\n        // We can skip nodes that resulted in an error.\n        console.warn(error);\n      }\n    }\n\n    return nodes;\n  }\n\n  async #fetchGridNodes(): Promise<SDK.DOMModel.DOMNode[]> {\n    return await this.#fetchNodesByStyle([\n      {name: 'display', value: 'grid'}, {name: 'display', value: 'inline-grid'}, {name: 'display', value: 'masonry'},\n      {name: 'display', value: 'inline-masonry'}\n    ]);\n  }\n\n  async #fetchFlexContainerNodes(): Promise<SDK.DOMModel.DOMNode[]> {\n    return await this.#fetchNodesByStyle([{name: 'display', value: 'flex'}, {name: 'display', value: 'inline-flex'}]);\n  }\n\n  #makeSettings(): Setting[] {\n    const settings = [];\n    for (const settingName\n             of ['show-grid-line-labels', 'show-grid-track-sizes', 'show-grid-areas', 'extend-grid-lines']) {\n      const setting = Common.Settings.Settings.instance().moduleSetting(settingName);\n      const settingValue = setting.get();\n      const settingType = setting.type();\n      if (!settingType) {\n        throw new Error('A setting provided to LayoutSidebarPane does not have a setting type');\n      }\n      if (settingType !== Common.Settings.SettingType.BOOLEAN && settingType !== Common.Settings.SettingType.ENUM) {\n        throw new Error('A setting provided to LayoutSidebarPane does not have a supported setting type');\n      }\n      const mappedSetting = {\n        type: settingType,\n        name: setting.name,\n        title: setting.title(),\n      };\n      if (typeof settingValue === 'boolean') {\n        settings.push({\n          ...mappedSetting,\n          value: settingValue,\n          options: setting.options().map(opt => ({\n                                           ...opt,\n                                           value: (opt.value as boolean),\n                                         })),\n        });\n      } else if (typeof settingValue === 'string') {\n        settings.push({\n          ...mappedSetting,\n          value: settingValue,\n          options: setting.options().map(opt => ({\n                                           ...opt,\n                                           value: (opt.value as string),\n                                         })),\n        });\n      }\n    }\n    return settings;\n  }\n\n  onSettingChanged(setting: string, value: string|boolean): void {\n    Common.Settings.Settings.instance().moduleSetting(setting).set(value);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    for (const setting of this.#settings) {\n      Common.Settings.Settings.instance().moduleSetting(setting.name).addChangeListener(this.requestUpdate, this);\n    }\n    for (const domModel of this.#domModels) {\n      this.modelRemoved(domModel);\n    }\n    this.#domModels = [];\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.DOMModel.DOMModel, this, {scoped: true});\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.requestUpdate, this);\n    this.#uaShadowDOMSetting.addChangeListener(this.requestUpdate, this);\n    this.requestUpdate();\n  }\n\n  override willHide(): void {\n    for (const setting of this.#settings) {\n      Common.Settings.Settings.instance().moduleSetting(setting.name).removeChangeListener(this.requestUpdate, this);\n    }\n    SDK.TargetManager.TargetManager.instance().unobserveModels(SDK.DOMModel.DOMModel, this);\n    UI.Context.Context.instance().removeFlavorChangeListener(SDK.DOMModel.DOMNode, this.requestUpdate, this);\n    this.#uaShadowDOMSetting.removeChangeListener(this.requestUpdate, this);\n  }\n\n  #onSummaryKeyDown(event: KeyboardEvent): void {\n    if (!event.target) {\n      return;\n    }\n    const summaryElement = event.target as HTMLElement;\n    const detailsElement = summaryElement.parentElement as HTMLDetailsElement;\n    if (!detailsElement) {\n      throw new Error('<details> element is not found for a <summary> element');\n    }\n    switch (event.key) {\n      case 'ArrowLeft':\n        detailsElement.open = false;\n        break;\n      case 'ArrowRight':\n        detailsElement.open = true;\n        break;\n    }\n  }\n\n  override async performUpdate(): Promise<void> {\n    const input: ViewInput = {\n      gridElements: gridNodesToElements(await this.#fetchGridNodes()),\n      flexContainerElements: flexContainerNodesToElements(await this.#fetchFlexContainerNodes()),\n      onEnumSettingChange: this.#onEnumSettingChange.bind(this),\n      onElementClick: this.#onElementClick.bind(this),\n      onColorChange: this.#onColorChange.bind(this),\n      onMouseLeave: this.#onElementMouseLeave.bind(this),\n      onMouseEnter: this.#onElementMouseEnter.bind(this),\n      onElementToggle: this.#onElementToggle.bind(this),\n      onBooleanSettingChange: this.#onBooleanSettingChange.bind(this),\n      enumSettings: this.#getEnumSettings(),\n      booleanSettings: this.#getBooleanSettings(),\n      onSummaryKeyDown: this.#onSummaryKeyDown.bind(this),\n    };\n\n    this.#view(input, {}, this.contentElement);\n  }\n\n  #getEnumSettings(): EnumSetting[] {\n    return this.#settings.filter(isEnumSetting);\n  }\n\n  #getBooleanSettings(): BooleanSetting[] {\n    return this.#settings.filter(isBooleanSetting);\n  }\n\n  #onBooleanSettingChange(setting: BooleanSetting, event: Event): void {\n    event.preventDefault();\n    this.onSettingChanged(setting.name, (event.target as UI.UIUtils.CheckboxLabel).checked);\n  }\n\n  #onEnumSettingChange(setting: EnumSetting, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    this.onSettingChanged(setting.name, event.target.value);\n  }\n\n  #onElementToggle(element: LayoutElement, event: Event): void {\n    event.preventDefault();\n    element.toggle((event.target as UI.UIUtils.CheckboxLabel).checked);\n  }\n\n  #onElementClick(element: LayoutElement, event: MouseEvent): void {\n    event.preventDefault();\n    element.reveal();\n  }\n\n  #onColorChange(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.setColor(event.target.value);\n    this.requestUpdate();\n  }\n\n  #onElementMouseEnter(element: LayoutElement, event: MouseEvent): void {\n    event.preventDefault();\n    element.highlight();\n  }\n\n  #onElementMouseLeave(element: LayoutElement, event: MouseEvent): void {\n    event.preventDefault();\n    element.hideHighlight();\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n  * {\n    box-sizing: border-box;\n    font-size: 12px;\n  }\n\n  .header {\n    background-color: var(--sys-color-surface2);\n    border-bottom: 1px solid var(--sys-color-divider);\n    line-height: 1.6;\n    overflow: hidden;\n    padding: 0 5px;\n    white-space: nowrap;\n  }\n\n  .header::marker {\n    color: var(--sys-color-on-surface-subtle);\n    font-size: 11px;\n    line-height: 1;\n  }\n\n  .header:focus {\n    background-color: var(--sys-color-tonal-container);\n  }\n\n  .content-section {\n    padding: 16px;\n    border-bottom: 1px solid var(--sys-color-divider);\n    overflow-x: hidden;\n  }\n\n  .content-section-title {\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 1.1;\n    margin: 0;\n    padding: 0;\n  }\n\n  .checkbox-settings {\n    margin-top: 8px;\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: 5px;\n  }\n\n  .checkbox-settings devtools-checkbox {\n    margin-bottom: 8px;\n  }\n\n  .checkbox-settings devtools-checkbox:last-child {\n    margin-bottom: 0;\n  }\n\n  devtools-checkbox {\n    /* Allows label text to get ellipsed */\n    flex-shrink: unset;\n    margin: 0 6px 0 0;\n    padding: 0;\n  }\n\n  .select-settings {\n    margin-top: 16px;\n    width: fit-content;\n  }\n\n  .select-label {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .select-label span {\n    margin-bottom: 4px;\n  }\n\n  .elements {\n    margin-top: 12px;\n    color: var(--sys-color-token-tag);\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(min(250px, 100%), 1fr));\n    gap: 8px;\n  }\n\n  .element {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 8px;\n  }\n\n  .show-element {\n    flex: none;\n  }\n\n  select {\n    min-width: 0;\n    max-width: 150px;\n  }\n\n  .color-picker {\n    opacity: 0%;\n  }\n\n  .color-picker-label {\n    border: 1px solid var(--sys-color-neutral-outline);\n    cursor: default;\n    display: inline-block;\n    flex: none;\n    height: 10px;\n    width: 10px;\n    position: relative;\n\n    &:focus-within {\n      outline: 2px solid var(--sys-color-state-focus-ring);\n      outline-offset: 2px;\n      border-radius: 2px;\n    }\n  }\n  /* We set dimensions for the invisible input to support quick highlight a11y feature\n  that uses the dimensions to draw an outline around the element. */\n  .color-picker-label input[type=\"color\"] {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n  }\n\n  .color-picker-label:hover,\n  .color-picker-label:focus {\n    border: 1px solid var(--sys-color-outline);\n    transform: scale(1.2);\n  }\n\n  .node-text-container {\n    line-height: 16px;\n    padding: 0 0.5ex;\n    border-radius: 5px;\n  }\n\n}\n\n/*# sourceURL=${import.meta.resolve('./layoutPane.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport type {ComputedStyleModel} from './ComputedStyleModel.js';\nimport {ElementsSidebarPane} from './ElementsSidebarPane.js';\nimport metricsSidebarPaneStyles from './metricsSidebarPane.css.js';\n\nexport class MetricsSidebarPane extends ElementsSidebarPane {\n  originalPropertyData: SDK.CSSProperty.CSSProperty|null;\n  previousPropertyDataCandidate: SDK.CSSProperty.CSSProperty|null;\n  private inlineStyle: SDK.CSSStyleDeclaration.CSSStyleDeclaration|null;\n  private highlightMode: string;\n  private boxElements: Array<{\n    element: HTMLElement,\n    name: string,\n    backgroundColor: string,\n  }>;\n  private isEditingMetrics?: boolean;\n\n  constructor(computedStyleModel: ComputedStyleModel) {\n    super(computedStyleModel);\n    this.registerRequiredCSS(metricsSidebarPaneStyles);\n\n    this.originalPropertyData = null;\n    this.previousPropertyDataCandidate = null;\n    this.inlineStyle = null;\n    this.highlightMode = '';\n    this.boxElements = [];\n    this.contentElement.setAttribute('jslog', `${VisualLogging.pane('styles-metrics')}`);\n  }\n\n  override doUpdate(): Promise<void> {\n    // \"style\" attribute might have changed. Update metrics unless they are being edited\n    // (if a CSS property is added, a StyleSheetChanged event is dispatched).\n    if (this.isEditingMetrics) {\n      return Promise.resolve();\n    }\n\n    // FIXME: avoid updates of a collapsed pane.\n    const node = this.node();\n    const cssModel = this.cssModel();\n    if (!node || node.nodeType() !== Node.ELEMENT_NODE || !cssModel) {\n      this.contentElement.removeChildren();\n      this.element.classList.add('collapsed');\n      return Promise.resolve();\n    }\n\n    function callback(this: MetricsSidebarPane, style: Map<string, string>|null): void {\n      if (!style || this.node() !== node) {\n        return;\n      }\n      this.updateMetrics(style);\n    }\n\n    if (!node.id) {\n      return Promise.resolve();\n    }\n\n    const promises = [\n      cssModel.getComputedStyle(node.id).then(callback.bind(this)),\n      cssModel.getInlineStyles(node.id).then(inlineStyleResult => {\n        if (inlineStyleResult && this.node() === node) {\n          this.inlineStyle = inlineStyleResult.inlineStyle;\n        }\n      }),\n    ];\n    return Promise.all(promises) as unknown as Promise<void>;\n  }\n\n  override onCSSModelChanged(): void {\n    this.update();\n  }\n\n  /**\n   * Toggle the visibility of the Metrics pane. This toggle allows external\n   * callers to control the visibility of this pane, but toggling this on does\n   * not guarantee the pane will always show up, because the pane's visibility\n   * is also controlled by the internal condition that style cannot be empty.\n   */\n  toggleVisibility(isVisible: boolean): void {\n    this.element.classList.toggle('invisible', !isVisible);\n  }\n\n  private getPropertyValueAsPx(style: Map<string, string>, propertyName: string): number {\n    const propertyValue = style.get(propertyName);\n    if (!propertyValue) {\n      return 0;\n    }\n    return Number(propertyValue.replace(/px$/, '') || 0);\n  }\n\n  private getBox(computedStyle: Map<string, string>, componentName: string): {\n    left: number,\n    top: number,\n    right: number,\n    bottom: number,\n  } {\n    const suffix = componentName === 'border' ? '-width' : '';\n    const left = this.getPropertyValueAsPx(computedStyle, componentName + '-left' + suffix);\n    const top = this.getPropertyValueAsPx(computedStyle, componentName + '-top' + suffix);\n    const right = this.getPropertyValueAsPx(computedStyle, componentName + '-right' + suffix);\n    const bottom = this.getPropertyValueAsPx(computedStyle, componentName + '-bottom' + suffix);\n    return {left, top, right, bottom};\n  }\n\n  private highlightDOMNode(showHighlight: boolean, mode: string, event: Event): void {\n    event.consume();\n    const node = this.node();\n    if (showHighlight && node) {\n      if (this.highlightMode === mode) {\n        return;\n      }\n      this.highlightMode = mode;\n      node.highlight(mode);\n    } else {\n      this.highlightMode = '';\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n\n    for (const {element, name, backgroundColor} of this.boxElements) {\n      const shouldHighlight = !node || mode === 'all' || name === mode;\n      element.style.backgroundColor = shouldHighlight ? backgroundColor : '';\n      element.classList.toggle('highlighted', shouldHighlight);\n    }\n  }\n\n  private updateMetrics(style: Map<string, string>): void {\n    // Updating with computed style.\n    const metricsElement = document.createElement('div');\n    metricsElement.className = 'metrics';\n    const self = this;\n\n    function createBoxPartElement(\n        this: MetricsSidebarPane, style: Map<string, string>, name: string, side: string,\n        suffix: string): HTMLDivElement {\n      const element = document.createElement('div');\n      element.className = side;\n\n      const propertyName = (name !== 'position' ? name + '-' : '') + side + suffix;\n      let value = style.get(propertyName);\n      if (value === undefined) {\n        return element;\n      }\n\n      if (value === '' || (name !== 'position' && value === 'unset')) {\n        value = '\\u2012';\n      } else if (name === 'position' && value === 'auto') {\n        value = '\\u2012';\n      }\n      value = value.replace(/px$/, '');\n      value = Platform.NumberUtilities.toFixedIfFloating(value);\n\n      element.textContent = value;\n      element.setAttribute('jslog', `${VisualLogging.value(propertyName).track({\n                             dblclick: true,\n                             keydown: 'Enter|Escape|ArrowUp|ArrowDown|PageUp|PageDown',\n                             change: true,\n                           })}`);\n      element.addEventListener('dblclick', this.startEditing.bind(this, element, name, propertyName, style), false);\n      return element;\n    }\n\n    function getContentAreaWidthPx(style: Map<string, string>): string {\n      let width = style.get('width');\n      if (!width) {\n        return '';\n      }\n      width = width.replace(/px$/, '');\n      const widthValue = Number(width);\n      if (!isNaN(widthValue) && style.get('box-sizing') === 'border-box') {\n        const borderBox = self.getBox(style, 'border');\n        const paddingBox = self.getBox(style, 'padding');\n\n        width = (widthValue - borderBox.left - borderBox.right - paddingBox.left - paddingBox.right).toString();\n      }\n\n      return Platform.NumberUtilities.toFixedIfFloating(width);\n    }\n\n    function getContentAreaHeightPx(style: Map<string, string>): string {\n      let height = style.get('height');\n      if (!height) {\n        return '';\n      }\n      height = height.replace(/px$/, '');\n      const heightValue = Number(height);\n      if (!isNaN(heightValue) && style.get('box-sizing') === 'border-box') {\n        const borderBox = self.getBox(style, 'border');\n        const paddingBox = self.getBox(style, 'padding');\n\n        height = (heightValue - borderBox.top - borderBox.bottom - paddingBox.top - paddingBox.bottom).toString();\n      }\n\n      return Platform.NumberUtilities.toFixedIfFloating(height);\n    }\n\n    // Display types for which margin is ignored.\n    const noMarginDisplayType = new Set<string>([\n      'table-cell',\n      'table-column',\n      'table-column-group',\n      'table-footer-group',\n      'table-header-group',\n      'table-row',\n      'table-row-group',\n    ]);\n\n    // Display types for which padding is ignored.\n    const noPaddingDisplayType = new Set<string>([\n      'table-column',\n      'table-column-group',\n      'table-footer-group',\n      'table-header-group',\n      'table-row',\n      'table-row-group',\n    ]);\n\n    // Position types for which top, left, bottom and right are ignored.\n    const noPositionType = new Set<string>(['static']);\n\n    const boxes = ['content', 'padding', 'border', 'margin', 'position'];\n    const boxColors = [\n      Common.Color.PageHighlight.Content,\n      Common.Color.PageHighlight.Padding,\n      Common.Color.PageHighlight.Border,\n      Common.Color.PageHighlight.Margin,\n      Common.Color.Legacy.fromRGBA([0, 0, 0, 0]),\n    ];\n    const boxLabels = ['content', 'padding', 'border', 'margin', 'position'];\n    let previousBox: HTMLDivElement|null = null;\n    this.boxElements = [];\n    for (let i = 0; i < boxes.length; ++i) {\n      const name = boxes[i];\n      const display = style.get('display');\n      const position = style.get('position');\n      if (!display || !position) {\n        continue;\n      }\n      if (name === 'margin' && noMarginDisplayType.has(display)) {\n        continue;\n      }\n      if (name === 'padding' && noPaddingDisplayType.has(display)) {\n        continue;\n      }\n      if (name === 'position' && noPositionType.has(position)) {\n        continue;\n      }\n\n      const boxElement = document.createElement('div');\n      boxElement.className = `${name} highlighted`;\n      const backgroundColor = boxColors[i].asString(Common.Color.Format.RGBA) || '';\n      boxElement.style.backgroundColor = backgroundColor;\n      boxElement.setAttribute('jslog', `${VisualLogging.metricsBox().context(name).track({hover: true})}`);\n      boxElement.addEventListener(\n          'mouseover', this.highlightDOMNode.bind(this, true, name === 'position' ? 'all' : name), false);\n      this.boxElements.push({element: boxElement, name, backgroundColor});\n\n      if (name === 'content') {\n        const widthElement = document.createElement('span');\n        widthElement.textContent = getContentAreaWidthPx(style);\n        widthElement.addEventListener(\n            'dblclick', this.startEditing.bind(this, widthElement, 'width', 'width', style), false);\n        widthElement.setAttribute('jslog', `${VisualLogging.value('width').track({\n                                    dblclick: true,\n                                    keydown: 'Enter|Escape|ArrowUp|ArrowDown|PageUp|PageDown',\n                                    change: true,\n                                  })}`);\n\n        const heightElement = document.createElement('span');\n        heightElement.textContent = getContentAreaHeightPx(style);\n        heightElement.addEventListener(\n            'dblclick', this.startEditing.bind(this, heightElement, 'height', 'height', style), false);\n        heightElement.setAttribute('jslog', `${VisualLogging.value('height').track({\n                                     dblclick: true,\n                                     keydown: 'Enter|Escape|ArrowUp|ArrowDown|PageUp|PageDown',\n                                     change: true,\n                                   })}`);\n\n        const timesElement = document.createElement('span');\n        timesElement.textContent = ' × ';\n\n        boxElement.appendChild(widthElement);\n        boxElement.appendChild(timesElement);\n        boxElement.appendChild(heightElement);\n      } else {\n        const suffix = (name === 'border' ? '-width' : '');\n\n        const labelElement = document.createElement('div');\n        labelElement.className = 'label';\n        labelElement.textContent = boxLabels[i];\n        boxElement.appendChild(labelElement);\n\n        boxElement.appendChild(createBoxPartElement.call(this, style, name, 'top', suffix));\n        boxElement.appendChild(document.createElement('br'));\n        boxElement.appendChild(createBoxPartElement.call(this, style, name, 'left', suffix));\n\n        if (previousBox) {\n          boxElement.appendChild(previousBox);\n        }\n\n        boxElement.appendChild(createBoxPartElement.call(this, style, name, 'right', suffix));\n        boxElement.appendChild(document.createElement('br'));\n        boxElement.appendChild(createBoxPartElement.call(this, style, name, 'bottom', suffix));\n      }\n\n      previousBox = boxElement;\n    }\n    metricsElement.appendChild((previousBox as HTMLDivElement));\n    metricsElement.addEventListener('mouseover', this.highlightDOMNode.bind(this, false, 'all'), false);\n    metricsElement.addEventListener('mouseleave', this.highlightDOMNode.bind(this, false, 'all'), false);\n    this.contentElement.removeChildren();\n    this.contentElement.appendChild(metricsElement);\n    this.element.classList.remove('collapsed');\n  }\n\n  startEditing(targetElement: Element, box: string, styleProperty: string, computedStyle: Map<string, string>): void {\n    if (UI.UIUtils.isBeingEdited(targetElement)) {\n      return;\n    }\n\n    const context: {\n      box: string,\n      styleProperty: string,\n      computedStyle: Map<string, string>,\n      keyDownHandler: (arg0: Event) => void,\n    } = {box, styleProperty, computedStyle, keyDownHandler: () => {}};\n    const boundKeyDown = this.handleKeyDown.bind(this, context);\n    context.keyDownHandler = boundKeyDown;\n    targetElement.addEventListener('keydown', boundKeyDown, false);\n\n    this.isEditingMetrics = true;\n\n    const config =\n        new UI.InplaceEditor.Config(this.editingCommitted.bind(this), this.editingCancelled.bind(this), context);\n    UI.InplaceEditor.InplaceEditor.startEditing(targetElement, config);\n\n    const selection = targetElement.getComponentSelection();\n    selection?.selectAllChildren(targetElement);\n  }\n\n  private handleKeyDown(\n      context: {\n        box: string,\n        styleProperty: string,\n        computedStyle: Map<string, string>,\n        keyDownHandler: (arg0: Event) => void,\n      },\n      event: Event): void {\n    const element = (event.currentTarget as Element);\n\n    function finishHandler(this: MetricsSidebarPane, originalValue: string, replacementString: string): void {\n      this.applyUserInput(element, replacementString, originalValue, context, false);\n    }\n\n    function customNumberHandler(prefix: string, number: number, suffix: string): string {\n      if (context.styleProperty !== 'margin' && number < 0) {\n        number = 0;\n      }\n      return prefix + number + suffix;\n    }\n\n    UI.UIUtils.handleElementValueModifications(\n        event, element, finishHandler.bind(this), undefined, customNumberHandler);\n  }\n\n  editingEnded(element: Element, context: {\n    keyDownHandler: (arg0: Event) => void,\n  }): void {\n    this.originalPropertyData = null;\n    this.previousPropertyDataCandidate = null;\n    element.removeEventListener('keydown', context.keyDownHandler, false);\n    delete this.isEditingMetrics;\n  }\n\n  editingCancelled(element: Element, context: {\n    box: string,\n    styleProperty: string,\n    computedStyle: Map<string, string>,\n    keyDownHandler: (arg0: Event) => void,\n  }): void {\n    if (this.inlineStyle) {\n      if (!this.originalPropertyData) {\n        // An added property, remove the last property in the style.\n        const pastLastSourcePropertyIndex = this.inlineStyle.pastLastSourcePropertyIndex();\n        if (pastLastSourcePropertyIndex) {\n          void this.inlineStyle.allProperties()[pastLastSourcePropertyIndex - 1].setText('', false);\n        }\n      } else {\n        void this.inlineStyle.allProperties()[this.originalPropertyData.index].setText(\n            this.originalPropertyData.propertyText || '', false);\n      }\n    }\n    this.editingEnded(element, context);\n    this.update();\n  }\n\n  private applyUserInput(\n      element: Element, userInput: string, previousContent: string|null, context: {\n        box: string,\n        styleProperty: string,\n        computedStyle: Map<string, string>,\n        keyDownHandler: (arg0: Event) => void,\n      },\n      commitEditor: boolean): void {\n    if (!this.inlineStyle) {\n      // Element has no renderer.\n      return this.editingCancelled(element, context);  // nothing changed, so cancel\n    }\n\n    if (commitEditor && userInput === previousContent) {\n      return this.editingCancelled(element, context);\n    }  // nothing changed, so cancel\n\n    if (context.box !== 'position' && (!userInput || userInput === '\\u2012' || userInput === '-')) {\n      userInput = 'unset';\n    } else if (context.box === 'position' && (!userInput || userInput === '\\u2012' || userInput === '-')) {\n      userInput = 'auto';\n    }\n\n    userInput = userInput.toLowerCase();\n    // Append a \"px\" unit if the user input was just a number.\n    if (/^\\d+$/.test(userInput)) {\n      userInput += 'px';\n    }\n\n    const styleProperty = context.styleProperty;\n    const computedStyle = context.computedStyle;\n\n    if (computedStyle.get('box-sizing') === 'border-box' && (styleProperty === 'width' || styleProperty === 'height')) {\n      if (!userInput.match(/px$/)) {\n        Common.Console.Console.instance().error(\n            'For elements with box-sizing: border-box, only absolute content area dimensions can be applied');\n        return;\n      }\n\n      const borderBox = this.getBox(computedStyle, 'border');\n      const paddingBox = this.getBox(computedStyle, 'padding');\n      let userValuePx = Number(userInput.replace(/px$/, ''));\n      if (isNaN(userValuePx)) {\n        return;\n      }\n      if (styleProperty === 'width') {\n        userValuePx += borderBox.left + borderBox.right + paddingBox.left + paddingBox.right;\n      } else {\n        userValuePx += borderBox.top + borderBox.bottom + paddingBox.top + paddingBox.bottom;\n      }\n\n      userInput = userValuePx + 'px';\n    }\n\n    this.previousPropertyDataCandidate = null;\n\n    const allProperties = this.inlineStyle.allProperties();\n    for (let i = 0; i < allProperties.length; ++i) {\n      const property = allProperties[i];\n      if (property.name !== context.styleProperty || (property.parsedOk && !property.activeInStyle())) {\n        continue;\n      }\n\n      this.previousPropertyDataCandidate = property;\n      property.setValue(userInput, commitEditor, true, callback.bind(this));\n      return;\n    }\n\n    this.inlineStyle.appendProperty(context.styleProperty, userInput, callback.bind(this));\n\n    function callback(this: MetricsSidebarPane, success: boolean): void {\n      if (!success) {\n        return;\n      }\n      if (!this.originalPropertyData) {\n        this.originalPropertyData = this.previousPropertyDataCandidate;\n      }\n\n      if (this.highlightMode) {\n        const node = this.node();\n        if (!node) {\n          return;\n        }\n        node.highlight(this.highlightMode);\n      }\n\n      if (commitEditor) {\n        this.update();\n      }\n    }\n  }\n\n  private editingCommitted(\n      element: Element,\n      userInput: string,\n      previousContent: string|null,\n      context: {\n        box: string,\n        styleProperty: string,\n        computedStyle: Map<string, string>,\n        keyDownHandler: (arg0: Event) => void,\n      },\n      ): void {\n    this.editingEnded(element, context);\n    this.applyUserInput(element, userInput, previousContent, context, true);\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/**\n * Copyright 2017 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n.metrics {\n  padding: 8px;\n  font-size: 10px;\n  text-align: center;\n  white-space: nowrap;\n  min-height: var(--metrics-height);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  /* Colors in the metrics panel need special treatment. The color of the\n  various box-model regions (margin, border, padding, content) are set in JS\n  by using the ones from the in-page overlay. They, therefore, do not depend on\n  the theme.\n  To ensure proper contrast between those colors and the 1px borders between\n  them, we use these local variables, not theme variables. */\n  --override-box-model-separator-color: var(--ref-palette-neutral0);\n  --override-box-model-text-color: var(--ref-palette-neutral10);\n}\n\n:host {\n  --metrics-height: 190px;\n\n  height: var(--metrics-height);\n  contain: strict;\n}\n\n:host(.invisible) {\n  visibility: hidden;\n  height: 0;\n}\n\n:host(.collapsed) {\n  visibility: collapse;\n  height: 0;\n}\n/* The font we use on Windows takes up more vertical space, so adjust\n * the height of the metrics sidebar pane accordingly.\n */\n:host-context(.platform-windows) {\n  --metrics-height: 214px;\n}\n\n.metrics .label {\n  position: absolute;\n  font-size: 10px;\n  left: 4px;\n}\n\n.metrics .position {\n  /* This border is different from the ones displayed between the box-model\n  regions because it is displayed against the pane background, so needs to be\n  visible in both light and dark theme. We therefore use a theme variable. */\n  border: 1px var(--sys-color-token-subtle) dotted;\n  background-color: var(--sys-color-cdt-base-container);\n  display: inline-block;\n  text-align: center;\n  padding: 3px;\n  margin: 3px;\n  position: relative;\n}\n\n.metrics .margin {\n  border: 1px dashed var(--override-box-model-separator-color);\n  background-color: var(--sys-color-cdt-base-container);\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  padding: 3px 6px;\n  margin: 3px;\n  position: relative;\n}\n\n.metrics .border {\n  border: 1px solid var(--override-box-model-separator-color);\n  background-color: var(--sys-color-cdt-base-container);\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  padding: 3px 6px;\n  margin: 3px;\n  position: relative;\n}\n\n.metrics .padding {\n  border: 1px dashed var(--override-box-model-separator-color);\n  background-color: var(--sys-color-cdt-base-container);\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  padding: 3px 6px;\n  margin: 3px;\n  position: relative;\n  min-width: 120px;\n}\n\n.metrics .content {\n  position: static;\n  border: 1px solid var(--override-box-model-separator-color);\n  background-color: var(--sys-color-cdt-base-container);\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  padding: 3px;\n  margin: 3px;\n  min-width: 80px;\n  overflow: visible;\n}\n\n.metrics .content span {\n  display: inline-block;\n}\n\n.metrics .editing {\n  position: relative;\n  z-index: 100;\n  cursor: text;\n}\n\n.metrics .left {\n  display: inline-block;\n  vertical-align: middle;\n}\n\n.metrics .right {\n  display: inline-block;\n  vertical-align: middle;\n}\n\n.metrics .top {\n  display: inline-block;\n}\n\n.metrics .bottom {\n  display: inline-block;\n}\n\n/* In dark theme, when a specific box-model region is hovered, the other regions\nlose their background colors, so we need to give them a lighter border color so\nthat region separators remain visible against the dark panel background. */\n:host-context(.theme-with-dark-background) .margin:hover,\n:host-context(.theme-with-dark-background) .margin:hover * {\n  border-color: var(--sys-color-token-subtle);\n}\n\n/* With the exception of the position labels, labels are displayed on top of\nthe box-model region colors, so need to use the following color to remain\nvisible. */\n.metrics .highlighted:not(.position) > *:not(.border, .padding, .content) {\n  color: var(--override-box-model-text-color);\n}\n\n/*# sourceURL=${import.meta.resolve('./metricsSidebarPane.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as EventListeners from '../event_listeners/event_listeners.js';\n\nconst {bindToSetting} = UI.SettingsUI;\nconst {bindToAction} = UI.UIUtils;\n\nconst UIStrings = {\n  /**\n   * @description Title of show framework listeners setting in event listeners widget of the elements panel\n   */\n  frameworkListeners: 'Resolve `Framework` listeners',\n  /**\n   * @description Tooltip text that appears on the setting when hovering over it in Event Listeners Widget of the Elements panel\n   */\n  showListenersOnTheAncestors: 'Show listeners on the ancestors',\n  /**\n   * @description Alternative title text of a setting in Event Listeners Widget of the Elements panel\n   */\n  ancestors: 'Ancestors',\n  /**\n   * @description Title of dispatch filter in event listeners widget of the elements panel\n   */\n  eventListenersCategory: 'Event listeners category',\n  /**\n   * @description Text for everything\n   */\n  all: 'All',\n  /**\n   * @description Text in Event Listeners Widget of the Elements panel\n   */\n  passive: 'Passive',\n  /**\n   * @description Text in Event Listeners Widget of the Elements panel\n   */\n  blocking: 'Blocking',\n  /**\n   * @description Tooltip text that appears on the setting when hovering over it in Event Listeners Widget of the Elements panel\n   */\n  resolveEventListenersBoundWith: 'Resolve event listeners bound with framework',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/EventListenersWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet eventListenersWidgetInstance: EventListenersWidget;\n\ninterface ViewInput {\n  refreshEventListenersActionName: string;\n  showForAncestorsSetting: Common.Settings.Setting<boolean>;\n  dispatchFilterBySetting: Common.Settings.Setting<string>;\n  showFrameworkListenersSetting: Common.Settings.Setting<boolean>;\n  onDispatchFilterTypeChange: (value: string) => void;\n  onEventListenersViewChange: () => void;\n  dispatchFilters: Array<{name: string, value: string}>;\n  selectedDispatchFilter: string;\n  eventListenerObjects: Array<SDK.RemoteObject.RemoteObject|null>;\n  filter: {\n    showFramework: boolean,\n    showPassive: boolean,\n    showBlocking: boolean,\n  };\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  // clang-format off\n  render(html`\n    <div jslog=${VisualLogging.pane('elements.event-listeners').track({ resize: true })}>\n      <devtools-toolbar class=\"event-listener-toolbar\" role=\"presentation\">\n        <devtools-button ${bindToAction(input.refreshEventListenersActionName)}></devtools-button>\n        <devtools-checkbox title=${i18nString(UIStrings.showListenersOnTheAncestors)}\n          ${bindToSetting(input.showForAncestorsSetting)}\n          jslog=${VisualLogging.toggle('show-event-listeners-for-ancestors').track({ change: true })}>\n          ${i18nString(UIStrings.ancestors)}\n        </devtools-checkbox>\n        <select class=\"dispatch-filter\"\n          title=${i18nString(UIStrings.eventListenersCategory)}\n          aria-label=${i18nString(UIStrings.eventListenersCategory)}\n          jslog=${VisualLogging.filterDropdown().track({ change: true })}\n          @change=${(e: Event) => input.onDispatchFilterTypeChange((e.target as HTMLSelectElement).value)}>\n          ${input.dispatchFilters.map(filter => html`\n            <option value=${filter.value} ?selected=${filter.value === input.selectedDispatchFilter}>\n              ${filter.name}\n            </option>`)}\n        </select>\n        <devtools-checkbox title=${i18nString(UIStrings.resolveEventListenersBoundWith)}\n          ${bindToSetting(input.showFrameworkListenersSetting)}\n          jslog=${VisualLogging.toggle('show-frameowkr-listeners').track({ change: true })}>\n          ${i18nString(UIStrings.frameworkListeners)}\n        </devtools-checkbox>\n      </devtools-toolbar>\n      <devtools-widget .widgetConfig=${UI.Widget.widgetConfig(EventListeners.EventListenersView.EventListenersView, {\n        changeCallback: input.onEventListenersViewChange,\n        objects: input.eventListenerObjects,\n        filter: input.filter,\n      })}></devtools-widget>\n    </div>`, target);\n  // clang-format on\n};\n\nexport class EventListenersWidget extends UI.ThrottledWidget.ThrottledWidget {\n  private showForAncestorsSetting: Common.Settings.Setting<boolean>;\n  private readonly dispatchFilterBySetting: Common.Settings.Setting<string>;\n  private readonly showFrameworkListenersSetting: Common.Settings.Setting<boolean>;\n  private lastRequestedNode?: SDK.DOMModel.DOMNode;\n  readonly #view: View;\n\n  constructor(view: View = DEFAULT_VIEW) {\n    super();\n    this.#view = view;\n    this.showForAncestorsSetting =\n        Common.Settings.Settings.instance().moduleSetting('show-event-listeners-for-ancestors');\n    this.showForAncestorsSetting.addChangeListener(this.update.bind(this));\n\n    this.dispatchFilterBySetting =\n        Common.Settings.Settings.instance().createSetting('event-listener-dispatch-filter-type', DispatchFilterBy.All);\n    this.dispatchFilterBySetting.addChangeListener(this.update.bind(this));\n\n    this.showFrameworkListenersSetting =\n        Common.Settings.Settings.instance().createSetting('show-frameowkr-listeners', true);\n    this.showFrameworkListenersSetting.setTitle(i18nString(UIStrings.frameworkListeners));\n    this.showFrameworkListenersSetting.addChangeListener(this.update.bind(this));\n\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n    this.update();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): EventListenersWidget {\n    const {forceNew} = opts;\n    if (!eventListenersWidgetInstance || forceNew) {\n      eventListenersWidgetInstance = new EventListenersWidget();\n    }\n\n    return eventListenersWidgetInstance;\n  }\n\n  override async doUpdate(): Promise<void> {\n    const dispatchFilter = this.dispatchFilterBySetting.get();\n    const showPassive = dispatchFilter === DispatchFilterBy.All || dispatchFilter === DispatchFilterBy.Passive;\n    const showBlocking = dispatchFilter === DispatchFilterBy.All || dispatchFilter === DispatchFilterBy.Blocking;\n\n    const input = {\n      refreshEventListenersActionName: 'elements.refresh-event-listeners',\n      showForAncestorsSetting: this.showForAncestorsSetting,\n      dispatchFilterBySetting: this.dispatchFilterBySetting,\n      showFrameworkListenersSetting: this.showFrameworkListenersSetting,\n      onDispatchFilterTypeChange: (value: string) => {\n        this.dispatchFilterBySetting.set(value);\n      },\n      onEventListenersViewChange: this.update.bind(this),\n      dispatchFilters: [\n        {name: i18nString(UIStrings.all), value: DispatchFilterBy.All},\n        {name: i18nString(UIStrings.passive), value: DispatchFilterBy.Passive},\n        {name: i18nString(UIStrings.blocking), value: DispatchFilterBy.Blocking},\n      ],\n      selectedDispatchFilter: dispatchFilter,\n      eventListenerObjects: [] as Array<SDK.RemoteObject.RemoteObject|null>,\n      filter: {showFramework: this.showFrameworkListenersSetting.get(), showPassive, showBlocking},\n    };\n\n    if (this.lastRequestedNode) {\n      this.lastRequestedNode.domModel().runtimeModel().releaseObjectGroup(objectGroupName);\n      delete this.lastRequestedNode;\n    }\n    const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (node) {\n      this.lastRequestedNode = node;\n      const selectedNodeOnly = !this.showForAncestorsSetting.get();\n      const promises = [];\n      promises.push(node.resolveToObject(objectGroupName));\n      if (!selectedNodeOnly) {\n        let currentNode: (SDK.DOMModel.DOMNode|null) = node.parentNode;\n        while (currentNode) {\n          promises.push(currentNode.resolveToObject(objectGroupName));\n          currentNode = currentNode.parentNode;\n        }\n        promises.push(this.windowObjectInNodeContext(node));\n      }\n      input.eventListenerObjects = await Promise.all(promises);\n    }\n\n    this.#view(input, {}, this.contentElement);\n  }\n\n  override wasShown(): void {\n    UI.Context.Context.instance().setFlavor(EventListenersWidget, this);\n    super.wasShown();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    UI.Context.Context.instance().setFlavor(EventListenersWidget, null);\n  }\n\n  private windowObjectInNodeContext(node: SDK.DOMModel.DOMNode): Promise<SDK.RemoteObject.RemoteObject|null> {\n    const executionContexts = node.domModel().runtimeModel().executionContexts();\n    let context: SDK.RuntimeModel.ExecutionContext = executionContexts[0];\n    if (node.frameId()) {\n      for (let i = 0; i < executionContexts.length; ++i) {\n        const executionContext = executionContexts[i];\n        if (executionContext.frameId === node.frameId() && executionContext.isDefault) {\n          context = executionContext;\n        }\n      }\n    }\n\n    return context\n        .evaluate(\n            {\n              expression: 'self',\n              objectGroup: objectGroupName,\n              includeCommandLineAPI: false,\n              silent: true,\n              returnByValue: false,\n              generatePreview: false,\n            },\n            /* userGesture */ false,\n            /* awaitPromise */ false)\n        .then(result => {\n          if ('object' in result) {\n            return result.object;\n          }\n          return null;\n        });\n  }\n\n  eventListenersArrivedForTest(): void {\n  }\n}\n\nexport const DispatchFilterBy = {\n  All: 'All',\n  Blocking: 'Blocking',\n  Passive: 'Passive',\n};\n\nconst objectGroupName = 'event-listeners-panel';\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'elements.refresh-event-listeners': {\n        EventListenersWidget.instance().update();\n        return true;\n      }\n    }\n    return false;\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport propertiesWidgetStyles from './propertiesWidget.css.js';\n\nconst OBJECT_GROUP_NAME = 'properties-sidebar-pane';\n\nconst {bindToSetting} = UI.SettingsUI;\n\nconst UIStrings = {\n  /**\n   * @description Text on the checkbox in the Properties tab of the Elements panel, which controls whether\n   * all properties of the currently selected DOM element are shown, or only meaningful properties (i.e.\n   * excluding properties whose values aren't set for example).\n   */\n  showAll: 'Show all',\n  /**\n   * @description Tooltip on the checkbox in the Properties tab of the Elements panel, which controls whether\n   * all properties of the currently selected DOM element are shown, or only meaningful properties (i.e.\n   * excluding properties whose values aren't set for example).\n   */\n  showAllTooltip: 'When unchecked, only properties whose values are neither null nor undefined will be shown',\n  /**\n   * @description Text shown to the user when a filter is applied in the Properties tab of the Elements panel, but\n   * no properties matched the filter and thus no results were returned.\n   */\n  noMatchingProperty: 'No matching property',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/PropertiesWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface PropertiesWidgetInput {\n  onFilterChanged: (e: CustomEvent<string>) => void;\n  treeOutlineElement: HTMLElement;\n  displayNoMatchingPropertyMessage: boolean;\n}\n\ntype View = (input: PropertiesWidgetInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  // clang-format off\n  render(html`\n    <div jslog=${VisualLogging.pane('element-properties').track({resize: true})}>\n      <div class=\"hbox properties-widget-toolbar\">\n        <devtools-toolbar class=\"styles-pane-toolbar\" role=\"presentation\">\n          <devtools-toolbar-input type=\"filter\" @change=${input.onFilterChanged} style=\"flex-grow:1; flex-shrink:1\"></devtools-toolbar-input>\n          <devtools-checkbox title=${i18nString(UIStrings.showAllTooltip)} ${bindToSetting(getShowAllPropertiesSetting())}\n              jslog=${VisualLogging.toggle('show-all-properties').track({change: true})}>\n            ${i18nString(UIStrings.showAll)}\n          </devtools-checkbox>\n        </devtools-toolbar>\n      </div>\n      ${input.displayNoMatchingPropertyMessage ? html`\n        <div class=\"gray-info-message\">${i18nString(UIStrings.noMatchingProperty)}</div>\n      ` : nothing}\n      ${input.treeOutlineElement}\n    </div>`, target);\n  // clang-format on\n};\n\nconst getShowAllPropertiesSetting = (): Common.Settings.Setting<boolean> =>\n    Common.Settings.Settings.instance().createSetting('show-all-properties', /* defaultValue */ false);\n\nexport class PropertiesWidget extends UI.ThrottledWidget.ThrottledWidget {\n  private node: SDK.DOMModel.DOMNode|null;\n  private readonly showAllPropertiesSetting: Common.Settings.Setting<boolean>;\n  private filterRegex: RegExp|null = null;\n  private readonly treeOutline: ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeOutline;\n  private lastRequestedNode?: SDK.DOMModel.DOMNode;\n  readonly #view: View;\n  #displayNoMatchingPropertyMessage = false;\n\n  constructor(throttlingTimeout?: number, view: View = DEFAULT_VIEW) {\n    super(true /* isWebComponent */, throttlingTimeout);\n    this.registerRequiredCSS(propertiesWidgetStyles);\n\n    this.showAllPropertiesSetting = getShowAllPropertiesSetting();\n    this.showAllPropertiesSetting.addChangeListener(this.filterAndScheduleUpdate.bind(this));\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.AttrModified, this.onNodeChange, this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.AttrRemoved, this.onNodeChange, this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.CharacterDataModified, this.onNodeChange, this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.ChildNodeCountUpdated, this.onNodeChange, this, {scoped: true});\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.setNode, this);\n    this.node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n\n    this.#view = view;\n    this.treeOutline = new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeOutline({readOnly: true});\n    this.treeOutline.setShowSelectionOnKeyboardFocus(/* show */ true, /* preventTabOrder */ false);\n\n    this.treeOutline.addEventListener(UI.TreeOutline.Events.ElementExpanded, () => {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.DOMPropertiesExpanded);\n    });\n\n    void this.doUpdate();\n  }\n\n  private onFilterChanged(event: CustomEvent<string>): void {\n    this.filterRegex = event.detail ? new RegExp(Platform.StringUtilities.escapeForRegExp(event.detail), 'i') : null;\n    this.filterAndScheduleUpdate();\n  }\n\n  private filterAndScheduleUpdate(): void {\n    const previousDisplay = this.#displayNoMatchingPropertyMessage;\n    this.internalFilterProperties();\n    if (previousDisplay !== this.#displayNoMatchingPropertyMessage) {\n      this.update();\n    }\n  }\n\n  private internalFilterProperties(): void {\n    this.#displayNoMatchingPropertyMessage = true;\n    for (const element of this.treeOutline.rootElement().children()) {\n      const {property} = element as ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement;\n      const hidden = !property?.match({\n        includeNullOrUndefinedValues: this.showAllPropertiesSetting.get(),\n        regex: this.filterRegex,\n      });\n      this.#displayNoMatchingPropertyMessage = this.#displayNoMatchingPropertyMessage && hidden;\n      element.hidden = hidden;\n    }\n  }\n\n  private setNode(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode|null>): void {\n    this.node = event.data;\n    this.update();\n  }\n\n  override async doUpdate(): Promise<void> {\n    if (this.lastRequestedNode) {\n      this.lastRequestedNode.domModel().runtimeModel().releaseObjectGroup(OBJECT_GROUP_NAME);\n      delete this.lastRequestedNode;\n    }\n\n    if (!this.node) {\n      this.treeOutline.removeChildren();\n      this.#displayNoMatchingPropertyMessage = false;\n    } else {\n      this.lastRequestedNode = this.node;\n      const object = await this.node.resolveToObject(OBJECT_GROUP_NAME);\n      if (!object) {\n        return;\n      }\n\n      const treeElement = this.treeOutline.rootElement();\n      let {properties} = await SDK.RemoteObject.RemoteObject.loadFromObjectPerProto(object, true /* generatePreview */);\n      treeElement.removeChildren();\n      if (properties === null) {\n        properties = [];\n      }\n      ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement.populateWithProperties(\n          treeElement, properties, null, true /* skipProto */, true /* skipGettersAndSetters */, object);\n      this.internalFilterProperties();\n    }\n    this.#view(\n        {\n          onFilterChanged: this.onFilterChanged.bind(this),\n          treeOutlineElement: this.treeOutline.element,\n          displayNoMatchingPropertyMessage: this.#displayNoMatchingPropertyMessage,\n        },\n        {}, this.contentElement);\n  }\n\n  private onNodeChange(\n      event: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode, name: string}|SDK.DOMModel.DOMNode>,\n      ): void {\n    if (!this.node) {\n      return;\n    }\n    const data = event.data;\n    const node = (data instanceof SDK.DOMModel.DOMNode ? data : data.node);\n    if (this.node !== node) {\n      return;\n    }\n    this.update();\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2017 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.properties-widget-section {\n  padding: 2px 0 2px 5px;\n  flex: none;\n}\n\n.properties-widget-toolbar {\n  border-bottom: 1px solid var(--sys-color-divider);\n  flex-shrink: 0;\n}\n\n.styles-pane-toolbar {\n  width: 100%;\n}\n\n/*# sourceURL=${import.meta.resolve('./propertiesWidget.css')} */`;", "// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\n\nimport nodeStackTraceWidgetStyles from './nodeStackTraceWidget.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Message displayed when no JavaScript stack trace is available for the DOM node in the Stack Trace widget of the Elements panel\n   */\n  noStackTraceAvailable: 'No stack trace available',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/NodeStackTraceWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ViewInput {\n  target?: SDK.Target.Target;\n  linkifier: Components.Linkifier.Linkifier;\n  options: Components.JSPresentationUtils.Options;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  const {target: sdkTarget, linkifier, options} = input;\n  // clang-format off\n  render(html`\n    <style>${nodeStackTraceWidgetStyles}</style>\n    ${target && options.stackTrace ?\n         html`<devtools-widget\n                class=\"stack-trace\"\n                .widgetConfig=${UI.Widget.widgetConfig(Components.JSPresentationUtils.StackTracePreviewContent, {target: sdkTarget, linkifier, options})}>\n              </devtools-widget>` :\n         html`<div class=\"gray-info-message\">${i18nString(UIStrings.noStackTraceAvailable)}</div>`}`,\n    target);\n  // clang-format on\n};\n\nexport class NodeStackTraceWidget extends UI.ThrottledWidget.ThrottledWidget {\n  readonly #linkifier = new Components.Linkifier.Linkifier(MaxLengthForLinks);\n  readonly #view: View;\n\n  constructor(view = DEFAULT_VIEW) {\n    super(true /* isWebComponent */);\n    this.#view = view;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n    this.update();\n  }\n\n  override willHide(): void {\n    UI.Context.Context.instance().removeFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n  }\n\n  override async doUpdate(): Promise<void> {\n    const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n\n    const stackTrace = await node?.creationStackTrace() ?? undefined;\n    const input: ViewInput = {\n      target: node?.domModel().target(),\n      linkifier: this.#linkifier,\n      options: {stackTrace},\n    };\n    this.#view(input, {}, this.contentElement);\n  }\n}\n\nexport const MaxLengthForLinks = 40;\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2019 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n@scope to (devtools-widget > *) {\n  .stack-trace {\n    font-size: 11px !important; /* stylelint-disable-line declaration-no-important */\n    font-family: Menlo, monospace;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./nodeStackTraceWidget.css')} */`;", "// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport classesPaneWidgetStyles from './classesPaneWidget.css.js';\nimport {ElementsPanel} from './ElementsPanel.js';\n\nconst UIStrings = {\n  /**\n   * @description Prompt text for a text field in the Classes Pane Widget of the Elements panel.\n   * Class refers to a CSS class.\n   */\n  addNewClass: 'Add new class',\n  /**\n   * @description Screen reader announcement string when adding a CSS class via the Classes Pane Widget.\n   * @example {vbox flex-auto} PH1\n   */\n  classesSAdded: 'Classes {PH1} added',\n  /**\n   * @description Screen reader announcement string when adding a class via the Classes Pane Widget.\n   * @example {title-container} PH1\n   */\n  classSAdded: 'Class {PH1} added',\n  /**\n   * @description Accessible title read by screen readers for the Classes Pane Widget of the Elements\n   * panel. Element is a HTML DOM Element and classes refers to CSS classes.\n   */\n  elementClasses: 'Element Classes',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ClassesPaneWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ClassesPaneWidget extends UI.Widget.Widget {\n  private input: HTMLElement;\n  private readonly classesContainer: HTMLElement;\n  private readonly prompt: ClassNamePrompt;\n  private readonly mutatingNodes: Set<SDK.DOMModel.DOMNode>;\n  private readonly pendingNodeClasses: Map<SDK.DOMModel.DOMNode, string>;\n  private readonly updateNodeThrottler: Common.Throttler.Throttler;\n  private previousTarget: SDK.DOMModel.DOMNode|null;\n\n  constructor() {\n    super({\n      jslog: `${VisualLogging.pane('elements-classes')}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(classesPaneWidgetStyles);\n    this.contentElement.className = 'styles-element-classes-pane';\n    const container = this.contentElement.createChild('div', 'title-container');\n    this.input = container.createChild('div', 'new-class-input monospace');\n    this.setDefaultFocusedElement(this.input);\n    this.classesContainer = this.contentElement.createChild('div', 'source-code');\n    this.classesContainer.classList.add('styles-element-classes-container');\n    this.prompt = new ClassNamePrompt(this.nodeClasses.bind(this));\n    this.prompt.setAutocompletionTimeout(0);\n    this.prompt.renderAsBlock();\n\n    const proxyElement = (this.prompt.attach(this.input) as HTMLElement);\n    this.prompt.setPlaceholder(i18nString(UIStrings.addNewClass));\n    this.prompt.addEventListener(UI.TextPrompt.Events.TEXT_CHANGED, this.onTextChanged, this);\n    proxyElement.addEventListener('keydown', this.onKeyDown.bind(this), false);\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.DOMMutated, this.onDOMMutated, this, {scoped: true});\n    this.mutatingNodes = new Set();\n    this.pendingNodeClasses = new Map();\n    this.updateNodeThrottler = new Common.Throttler.Throttler(0);\n    this.previousTarget = null;\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.onSelectedNodeChanged, this);\n  }\n\n  private splitTextIntoClasses(text: string): string[] {\n    return text.split(/[,\\s]/).map(className => className.trim()).filter(className => className.length);\n  }\n\n  private onKeyDown(event: KeyboardEvent): void {\n    if (!(event.key === 'Enter') && !Platform.KeyboardUtilities.isEscKey(event)) {\n      return;\n    }\n\n    if (event.key === 'Enter') {\n      event.consume();\n      if (this.prompt.acceptAutoComplete()) {\n        return;\n      }\n    }\n\n    const eventTarget = (event.target as HTMLElement);\n    let text = eventTarget.textContent;\n    if (Platform.KeyboardUtilities.isEscKey(event)) {\n      if (!Platform.StringUtilities.isWhitespace(text)) {\n        event.consume(true);\n      }\n      text = '';\n    }\n\n    this.prompt.clearAutocomplete();\n    eventTarget.textContent = '';\n\n    const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (!node) {\n      return;\n    }\n\n    const classNames = this.splitTextIntoClasses(text);\n    if (!classNames.length) {\n      this.installNodeClasses(node);\n      return;\n    }\n\n    for (const className of classNames) {\n      this.toggleClass(node, className, true);\n    }\n\n    // annoucementString is used for screen reader to announce that the class(es) has been added successfully.\n    const joinClassString = classNames.join(' ');\n    const announcementString = classNames.length > 1 ? i18nString(UIStrings.classesSAdded, {PH1: joinClassString}) :\n                                                       i18nString(UIStrings.classSAdded, {PH1: joinClassString});\n    UI.ARIAUtils.LiveAnnouncer.alert(announcementString);\n\n    this.installNodeClasses(node);\n    this.update();\n  }\n\n  private onTextChanged(): void {\n    const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (!node) {\n      return;\n    }\n    this.installNodeClasses(node);\n  }\n\n  private onDOMMutated(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    const node = event.data;\n    if (this.mutatingNodes.has(node)) {\n      return;\n    }\n    cachedClassesMap.delete(node);\n    this.update();\n  }\n\n  private onSelectedNodeChanged(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode|null>): void {\n    if (this.previousTarget && this.prompt.text()) {\n      this.input.textContent = '';\n      this.installNodeClasses(this.previousTarget);\n    }\n    this.previousTarget = event.data;\n    this.update();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.update();\n  }\n\n  update(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    let node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (node) {\n      node = node.enclosingElementOrSelf();\n    }\n\n    this.classesContainer.removeChildren();\n    // @ts-expect-error this.input is a div, not an input element. So this line makes no sense at all\n    this.input.disabled = !node;\n\n    if (!node) {\n      return;\n    }\n\n    const classes = this.nodeClasses(node);\n    const keys = [...classes.keys()];\n    keys.sort(Platform.StringUtilities.caseInsensetiveComparator);\n    for (const className of keys) {\n      const checkbox =\n          UI.UIUtils.CheckboxLabel.createWithStringLiteral(className, classes.get(className), 'element-class', true);\n      checkbox.classList.add('monospace');\n      checkbox.addEventListener('click', this.onClick.bind(this, className), false);\n      this.classesContainer.appendChild(checkbox);\n    }\n  }\n\n  private onClick(className: string, event: Event): void {\n    const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (!node) {\n      return;\n    }\n    const enabled = (event.target as HTMLInputElement).checked;\n    this.toggleClass(node, className, enabled);\n    this.installNodeClasses(node);\n  }\n\n  private nodeClasses(node: SDK.DOMModel.DOMNode): Map<string, boolean> {\n    let result = cachedClassesMap.get(node);\n    if (!result) {\n      const classAttribute = node.getAttribute('class') || '';\n      const classes = classAttribute.split(/\\s/);\n      result = new Map();\n      for (let i = 0; i < classes.length; ++i) {\n        const className = classes[i].trim();\n        if (!className.length) {\n          continue;\n        }\n        result.set(className, true);\n      }\n      cachedClassesMap.set(node, result);\n    }\n    return result;\n  }\n\n  private toggleClass(node: SDK.DOMModel.DOMNode, className: string, enabled: boolean): void {\n    const classes = this.nodeClasses(node);\n    classes.set(className, enabled);\n    ButtonProvider.instance().item().setChecked([...classes.values()].includes(true));\n  }\n\n  private installNodeClasses(node: SDK.DOMModel.DOMNode): void {\n    const classes = this.nodeClasses(node);\n    const activeClasses = new Set<string>();\n    for (const className of classes.keys()) {\n      if (classes.get(className)) {\n        activeClasses.add(className);\n      }\n    }\n\n    const additionalClasses = this.splitTextIntoClasses(this.prompt.textWithCurrentSuggestion());\n    for (const className of additionalClasses) {\n      activeClasses.add(className);\n    }\n\n    const newClasses = [...activeClasses.values()].sort();\n\n    this.pendingNodeClasses.set(node, newClasses.join(' '));\n    void this.updateNodeThrottler.schedule(this.flushPendingClasses.bind(this));\n  }\n\n  private async flushPendingClasses(): Promise<void> {\n    const promises = [];\n    for (const node of this.pendingNodeClasses.keys()) {\n      this.mutatingNodes.add(node);\n      const promise = node.setAttributeValuePromise('class', (this.pendingNodeClasses.get(node) as string))\n                          .then(onClassValueUpdated.bind(this, node));\n      promises.push(promise);\n    }\n    this.pendingNodeClasses.clear();\n    await Promise.all(promises);\n\n    function onClassValueUpdated(this: ClassesPaneWidget, node: SDK.DOMModel.DOMNode): void {\n      this.mutatingNodes.delete(node);\n    }\n  }\n}\n\nconst cachedClassesMap = new WeakMap<SDK.DOMModel.DOMNode, Map<string, boolean>>();\n\nlet buttonProviderInstance: ButtonProvider;\n\nexport class ButtonProvider implements UI.Toolbar.Provider {\n  private readonly button: UI.Toolbar.ToolbarToggle;\n  private view: ClassesPaneWidget;\n  private constructor() {\n    this.button = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.elementClasses), 'class');\n    this.button.element.style.setProperty('--dot-toggle-top', '12px');\n    this.button.element.style.setProperty('--dot-toggle-left', '18px');\n    this.button.element.setAttribute(\n        'jslog', `${VisualLogging.toggleSubpane('elements-classes').track({click: true})}`);\n    this.button.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.clicked, this);\n    this.view = new ClassesPaneWidget();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ButtonProvider {\n    const {forceNew} = opts;\n    if (!buttonProviderInstance || forceNew) {\n      buttonProviderInstance = new ButtonProvider();\n    }\n\n    return buttonProviderInstance;\n  }\n\n  private clicked(): void {\n    ElementsPanel.instance().showToolbarPane(!this.view.isShowing() ? this.view : null, this.button);\n  }\n\n  item(): UI.Toolbar.ToolbarToggle {\n    return this.button;\n  }\n}\n\nexport class ClassNamePrompt extends UI.TextPrompt.TextPrompt {\n  private readonly nodeClasses: (arg0: SDK.DOMModel.DOMNode) => Map<string, boolean>;\n  private selectedFrameId: string|null;\n  private classNamesPromise: Promise<string[]>|null;\n  constructor(nodeClasses: (arg0: SDK.DOMModel.DOMNode) => Map<string, boolean>) {\n    super();\n    this.nodeClasses = nodeClasses;\n    this.initialize(this.buildClassNameCompletions.bind(this), ' ');\n    this.disableDefaultSuggestionForEmptyInput();\n    this.selectedFrameId = '';\n    this.classNamesPromise = null;\n  }\n\n  private async getClassNames(selectedNode: SDK.DOMModel.DOMNode): Promise<string[]> {\n    const promises = [];\n    const completions = new Set<string>();\n    this.selectedFrameId = selectedNode.frameId();\n\n    const cssModel = selectedNode.domModel().cssModel();\n    const allStyleSheets = cssModel.allStyleSheets();\n    for (const stylesheet of allStyleSheets) {\n      if (stylesheet.frameId !== this.selectedFrameId) {\n        continue;\n      }\n      const cssPromise = cssModel.getClassNames(stylesheet.id).then(classes => {\n        for (const className of classes) {\n          completions.add(className);\n        }\n      });\n      promises.push(cssPromise);\n    }\n\n    const ownerDocumentId = ((selectedNode.ownerDocument as SDK.DOMModel.DOMDocument).id);\n\n    const domPromise = selectedNode.domModel().classNamesPromise(ownerDocumentId).then(classes => {\n      for (const className of classes) {\n        completions.add(className);\n      }\n    });\n    promises.push(domPromise);\n    await Promise.all(promises);\n    return [...completions];\n  }\n\n  private async buildClassNameCompletions(expression: string, prefix: string, force?: boolean):\n      Promise<UI.SuggestBox.Suggestions> {\n    if (!prefix || force) {\n      this.classNamesPromise = null;\n    }\n\n    const selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (!selectedNode || (!prefix && !force && !expression.trim())) {\n      return [];\n    }\n\n    if (!this.classNamesPromise || this.selectedFrameId !== selectedNode.frameId()) {\n      this.classNamesPromise = this.getClassNames(selectedNode);\n    }\n\n    let completions: string[] = await this.classNamesPromise;\n    const classesMap = this.nodeClasses((selectedNode));\n    completions = completions.filter(value => !classesMap.get(value));\n\n    if (prefix[0] === '.') {\n      completions = completions.map(value => '.' + value);\n    }\n    return completions.filter(value => value.startsWith(prefix)).sort().map(completion => {\n      return {\n        text: completion,\n        title: undefined,\n        subtitle: undefined,\n        priority: undefined,\n        isSecondary: undefined,\n        subtitleRenderer: undefined,\n        selectionRange: undefined,\n        hideGhostText: undefined,\n        iconElement: undefined,\n      };\n    });\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/**\n * Copyright 2017 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.styles-element-classes-pane {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding: 6px 2px 2px;\n}\n\n.styles-element-classes-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n}\n\n.styles-element-classes-pane devtools-checkbox {\n  margin-right: 15px;\n}\n\n.styles-element-classes-pane .title-container {\n  padding-bottom: 2px;\n}\n\n.styles-element-classes-pane .new-class-input {\n  padding-left: 3px;\n  padding-right: 3px;\n  overflow: hidden;\n  border: 1px solid var(--sys-color-neutral-outline);\n  border-radius: 4px;\n  line-height: 15px;\n  margin-left: 3px;\n  width: calc(100% - 7px);\n  background-color: var(--sys-color-cdt-base-container);\n  cursor: text;\n\n  &:hover {\n    box-shadow: 0 0 0 1px var(--ref-palette-neutral90);\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./classesPaneWidget.css')} */`;", "// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render, type TemplateResult} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ElementsPanel} from './ElementsPanel.js';\nimport elementStatePaneWidgetStyles from './elementStatePaneWidget.css.js';\n\nconst {bindToSetting} = UI.SettingsUI;\n\nconst UIStrings = {\n  /**\n   * @description Title of a section in the Element State Pane Widget of the Elements panel. The\n   * controls in this section allow users to force a particular state on the selected element, e.g. a\n   * focused state via :focus or a hover state via :hover.\n   */\n  forceElementState: 'Force element state',\n  /**\n   * @description Tooltip text in Element State Pane Widget of the Elements panel. For a button that\n   * opens a tool that toggles the various states of the selected element on/off.\n   */\n  toggleElementState: 'Toggle Element State',\n  /**\n   * @description The name of a checkbox setting in the Element & Page State Pane Widget of the Elements panel.. This setting\n   * emulates/pretends that the webpage is focused.\n   */\n  emulateFocusedPage: 'Emulate a focused page',\n  /**\n   * @description Explanation text for the 'Emulate a focused page' setting in the Rendering tool.\n   */\n  emulatesAFocusedPage: 'Keep page focused. Commonly used for debugging disappearing elements.',\n  /**\n   * @description Similar with forceElementState but allows users to force specific state of the selected element.\n   */\n  forceElementSpecificStates: 'Force specific element state',\n  /**\n   * @description Text that is usually a hyperlink to more documentation\n   */\n  learnMore: 'Learn more',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementStatePaneWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nenum SpecificPseudoStates {\n  ENABLED = 'enabled',\n  DISABLED = 'disabled',\n  VALID = 'valid',\n  INVALID = 'invalid',\n  USER_VALID = 'user-valid',\n  USER_INVALID = 'user-invalid',\n  REQUIRED = 'required',\n  OPTIONAL = 'optional',\n  READ_ONLY = 'read-only',\n  READ_WRITE = 'read-write',\n  IN_RANGE = 'in-range',\n  OUT_OF_RANGE = 'out-of-range',\n  VISITED = 'visited',\n  LINK = 'link',\n  CHECKED = 'checked',\n  INDETERMINATE = 'indeterminate',\n  PLACEHOLDER_SHOWN = 'placeholder-shown',\n  AUTOFILL = 'autofill',\n  OPEN = 'open',\n}\n\ninterface ElementState {\n  state: string;\n  checked?: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  type: 'persistent'|'specific';\n}\n\ninterface ViewInput {\n  states: ElementState[];\n  onStateCheckboxClicked: (event: MouseEvent) => void;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  const createElementStateCheckbox = (state: ElementState): TemplateResult => {\n    // clang-format off\n    return html`\n        <div id=${state.state}>\n          <devtools-checkbox class=\"small\" @click=${input.onStateCheckboxClicked}\n              jslog=${VisualLogging.toggle(state.state).track({change: true})} ?checked=${state.checked} ?disabled=${state.disabled}\n              title=${':' + state.state}>\n          <span class=\"source-code\">${':' + state.state}</span>\n        </devtools-checkbox>\n        </div>`;\n    // clang-format on\n  };\n\n  // clang-format off\n  render(html`\n    <style>${elementStatePaneWidgetStyles}</style>\n    <div class=\"styles-element-state-pane\"\n        jslog=${VisualLogging.pane('element-states')}>\n      <div class=\"page-state-checkbox\">\n        <devtools-checkbox class=\"small\" title=${i18nString(UIStrings.emulatesAFocusedPage)}\n            jslog=${VisualLogging.toggle('emulate-page-focus').track({change: true})} ${bindToSetting('emulate-page-focus')}>${\n          i18nString(UIStrings.emulateFocusedPage)}</devtools-checkbox>\n        <devtools-button\n            @click=${() => UI.UIUtils.openInNewTab('https://developer.chrome.com/docs/devtools/rendering/apply-effects#emulate_a_focused_page')}\n           .data=${{\n              variant: Buttons.Button.Variant.ICON,\n              iconName: 'help',\n              size: Buttons.Button.Size.SMALL,\n              jslogContext: 'learn-more',\n              title: i18nString(UIStrings.learnMore),\n            } as Buttons.Button.ButtonData}></devtools-button>\n      </div>\n      <div class=\"section-header\">\n        <span>${i18nString(UIStrings.forceElementState)}</span>\n      </div>\n      <div class=\"pseudo-states-container\" role=\"presentation\">\n        ${input.states.filter(({type}) => type === 'persistent').map(state => createElementStateCheckbox(state))}\n      </div>\n      <details class=\"specific-details\" ?hidden=${input.states.filter(({type}) => type === 'specific') .every(state => state.hidden)}>\n        <summary class=\"force-specific-element-header section-header\">\n          <span>${i18nString(UIStrings.forceElementSpecificStates)}</span>\n        </summary>\n        <div class=\"pseudo-states-container specific-pseudo-states\" role=\"presentation\">\n          ${input.states\n              .filter(({type, hidden}) => type === 'specific' && !hidden)\n              .map(state => createElementStateCheckbox(state))}\n        </div>\n      </details>\n    </div>`, target);\n  // clang-format on\n};\n\nexport class ElementStatePaneWidget extends UI.Widget.Widget {\n  readonly #duals: Map<SpecificPseudoStates, SpecificPseudoStates>;\n  #cssModel?: SDK.CSSModel.CSSModel|null;\n  readonly #states = new Map<string, ElementState>();\n  readonly #view: View;\n\n  constructor(view: View = DEFAULT_VIEW) {\n    super({useShadowDom: true});\n    this.#view = view;\n    this.#duals = new Map();\n    const setDualStateCheckboxes = (first: SpecificPseudoStates, second: SpecificPseudoStates): void => {\n      this.#duals.set(first, second);\n      this.#duals.set(second, first);\n    };\n\n    // Populate element states\n    this.#states.set('active', {state: 'active', type: 'persistent'});\n    this.#states.set('hover', {state: 'hover', type: 'persistent'});\n    this.#states.set('focus', {state: 'focus', type: 'persistent'});\n    this.#states.set('focus-within', {state: 'focus-within', type: 'persistent'});\n    this.#states.set('focus-visible', {state: 'focus-visible', type: 'persistent'});\n    this.#states.set('target', {state: 'target', type: 'persistent'});\n\n    this.#states.set(SpecificPseudoStates.ENABLED, {state: SpecificPseudoStates.ENABLED, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.DISABLED, {state: SpecificPseudoStates.DISABLED, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.VALID, {state: SpecificPseudoStates.VALID, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.INVALID, {state: SpecificPseudoStates.INVALID, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.USER_VALID, {state: SpecificPseudoStates.USER_VALID, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.USER_INVALID, {state: SpecificPseudoStates.USER_INVALID, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.REQUIRED, {state: SpecificPseudoStates.REQUIRED, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.OPTIONAL, {state: SpecificPseudoStates.OPTIONAL, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.READ_ONLY, {state: SpecificPseudoStates.READ_ONLY, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.READ_WRITE, {state: SpecificPseudoStates.READ_WRITE, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.IN_RANGE, {state: SpecificPseudoStates.IN_RANGE, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.OUT_OF_RANGE, {state: SpecificPseudoStates.OUT_OF_RANGE, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.VISITED, {state: SpecificPseudoStates.VISITED, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.LINK, {state: SpecificPseudoStates.LINK, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.CHECKED, {state: SpecificPseudoStates.CHECKED, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.INDETERMINATE, {state: SpecificPseudoStates.INDETERMINATE, type: 'specific'});\n    this.#states.set(\n        SpecificPseudoStates.PLACEHOLDER_SHOWN, {state: SpecificPseudoStates.PLACEHOLDER_SHOWN, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.AUTOFILL, {state: SpecificPseudoStates.AUTOFILL, type: 'specific'});\n    this.#states.set(SpecificPseudoStates.OPEN, {state: SpecificPseudoStates.OPEN, type: 'specific'});\n\n    setDualStateCheckboxes(SpecificPseudoStates.VALID, SpecificPseudoStates.INVALID);\n    setDualStateCheckboxes(SpecificPseudoStates.USER_VALID, SpecificPseudoStates.USER_INVALID);\n    setDualStateCheckboxes(SpecificPseudoStates.READ_ONLY, SpecificPseudoStates.READ_WRITE);\n    setDualStateCheckboxes(SpecificPseudoStates.IN_RANGE, SpecificPseudoStates.OUT_OF_RANGE);\n    setDualStateCheckboxes(SpecificPseudoStates.ENABLED, SpecificPseudoStates.DISABLED);\n    setDualStateCheckboxes(SpecificPseudoStates.VISITED, SpecificPseudoStates.LINK);\n\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.requestUpdate, this);\n  }\n\n  private onStateCheckboxClicked(event: MouseEvent): void {\n    const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (!node || !(event.target instanceof UI.UIUtils.CheckboxLabel)) {\n      return;\n    }\n    const state = event.target.title.slice(1);\n    if (!state) {\n      return;\n    }\n    const checked = event.target.checked;\n    const dual = this.#duals.get(state as SpecificPseudoStates);\n    if (checked && dual) {\n      node.domModel().cssModel().forcePseudoState(node, dual, false);\n    }\n    node.domModel().cssModel().forcePseudoState(node, state, checked);\n  }\n\n  private updateModel(cssModel: SDK.CSSModel.CSSModel|null): void {\n    if (this.#cssModel === cssModel) {\n      return;\n    }\n    if (this.#cssModel) {\n      this.#cssModel.removeEventListener(SDK.CSSModel.Events.PseudoStateForced, this.requestUpdate, this);\n    }\n    this.#cssModel = cssModel;\n    if (this.#cssModel) {\n      this.#cssModel.addEventListener(SDK.CSSModel.Events.PseudoStateForced, this.requestUpdate, this);\n    }\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.requestUpdate();\n  }\n\n  override async performUpdate(): Promise<void> {\n    let node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (node) {\n      node = node.enclosingElementOrSelf();\n    }\n    this.updateModel(node ? node.domModel().cssModel() : null);\n    if (node) {\n      const nodePseudoState = node.domModel().cssModel().pseudoState(node);\n      for (const state of this.#states.values()) {\n        state.disabled = Boolean(node.pseudoType());\n        state.checked = Boolean(nodePseudoState && nodePseudoState.indexOf(state.state) >= 0);\n      }\n    } else {\n      for (const state of this.#states.values()) {\n        state.disabled = true;\n        state.checked = false;\n      }\n    }\n    await this.#updateElementSpecificStatesTable(node);\n    ButtonProvider.instance().item().setToggled([...this.#states.values()].some(input => input.checked));\n    const viewInput = {\n      states: [...this.#states.values()],\n      onStateCheckboxClicked: this.onStateCheckboxClicked.bind(this),\n    };\n    this.#view(viewInput, {}, this.contentElement);\n  }\n\n  async #updateElementSpecificStatesTable(node: SDK.DOMModel.DOMNode|null = null): Promise<void> {\n    if (!node || node.nodeType() !== Node.ELEMENT_NODE) {\n      [...this.#states.values()].filter(({type}) => type === 'specific').forEach(state => {\n        state.hidden = true;\n      });\n      return;\n    }\n    const hideSpecificCheckbox = (pseudoClass: SpecificPseudoStates, hide: boolean): void => {\n      const state = this.#states.get(pseudoClass);\n      if (state) {\n        state.hidden = hide;\n      }\n    };\n    const isElementOfTypes = (node: SDK.DOMModel.DOMNode, types: string[]): boolean => {\n      return types.includes(node.nodeName()?.toLowerCase());\n    };\n    const isInputWithTypeRadioOrCheckbox = (node: SDK.DOMModel.DOMNode): boolean => {\n      return isElementOfTypes(node, ['input']) &&\n          (node.getAttribute('type') === 'checkbox' || node.getAttribute('type') === 'radio');\n    };\n    const isContentEditable = (node: SDK.DOMModel.DOMNode): boolean => {\n      return node.getAttribute('contenteditable') !== undefined ||\n          Boolean(node.parentNode && isContentEditable(node.parentNode));\n    };\n    const isDisabled = (node: SDK.DOMModel.DOMNode): boolean => {\n      return node.getAttribute('disabled') !== undefined;\n    };\n    const isMutable = (node: SDK.DOMModel.DOMNode): boolean => {\n      if (isElementOfTypes(node, ['input', 'textarea'])) {\n        return node.getAttribute('readonly') === undefined && !isDisabled(node);\n      }\n      return isContentEditable(node);\n    };\n    // An autonomous custom element is called a form-associated custom element if the element is associated with a custom element definition whose form-associated field is set to true.\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#form-associated-custom-element\n    const isFormAssociatedCustomElement = async(node: SDK.DOMModel.DOMNode): Promise<boolean> => {\n      function getFormAssociatedField(this: HTMLElement): boolean {\n        return ('formAssociated' in this.constructor && this.constructor.formAssociated === true);\n      }\n      const response = await node.callFunction(getFormAssociatedField);\n      return response ? response.value : false;\n    };\n    const isFormAssociated = await isFormAssociatedCustomElement(node);\n\n    if (isElementOfTypes(node, ['button', 'input', 'select', 'textarea', 'optgroup', 'option', 'fieldset']) ||\n        isFormAssociated) {\n      hideSpecificCheckbox(SpecificPseudoStates.ENABLED, !isDisabled(node));\n      hideSpecificCheckbox(SpecificPseudoStates.DISABLED, isDisabled(node));\n    } else {\n      hideSpecificCheckbox(SpecificPseudoStates.ENABLED, true);\n      hideSpecificCheckbox(SpecificPseudoStates.DISABLED, true);\n    }\n\n    if (isElementOfTypes(node, ['button', 'fieldset', 'input', 'object', 'output', 'select', 'textarea', 'img']) ||\n        isFormAssociated) {\n      hideSpecificCheckbox(SpecificPseudoStates.VALID, false);\n      hideSpecificCheckbox(SpecificPseudoStates.INVALID, false);\n    } else {\n      hideSpecificCheckbox(SpecificPseudoStates.VALID, true);\n      hideSpecificCheckbox(SpecificPseudoStates.INVALID, true);\n    }\n\n    if (isElementOfTypes(node, ['input', 'select', 'textarea'])) {\n      hideSpecificCheckbox(SpecificPseudoStates.USER_VALID, false);\n      hideSpecificCheckbox(SpecificPseudoStates.USER_INVALID, false);\n      if (node.getAttribute('required') === undefined) {\n        hideSpecificCheckbox(SpecificPseudoStates.REQUIRED, false);\n        hideSpecificCheckbox(SpecificPseudoStates.OPTIONAL, true);\n      } else {\n        hideSpecificCheckbox(SpecificPseudoStates.REQUIRED, true);\n        hideSpecificCheckbox(SpecificPseudoStates.OPTIONAL, false);\n      }\n    } else {\n      hideSpecificCheckbox(SpecificPseudoStates.USER_VALID, true);\n      hideSpecificCheckbox(SpecificPseudoStates.USER_INVALID, true);\n      hideSpecificCheckbox(SpecificPseudoStates.REQUIRED, true);\n      hideSpecificCheckbox(SpecificPseudoStates.OPTIONAL, true);\n    }\n\n    if (isMutable(node)) {\n      hideSpecificCheckbox(SpecificPseudoStates.READ_WRITE, true);\n      hideSpecificCheckbox(SpecificPseudoStates.READ_ONLY, false);\n    } else {\n      hideSpecificCheckbox(SpecificPseudoStates.READ_WRITE, false);\n      hideSpecificCheckbox(SpecificPseudoStates.READ_ONLY, true);\n    }\n\n    if (isElementOfTypes(node, ['input']) &&\n        (node.getAttribute('min') !== undefined || node.getAttribute('max') !== undefined)) {\n      hideSpecificCheckbox(SpecificPseudoStates.IN_RANGE, false);\n      hideSpecificCheckbox(SpecificPseudoStates.OUT_OF_RANGE, false);\n    } else {\n      hideSpecificCheckbox(SpecificPseudoStates.IN_RANGE, true);\n      hideSpecificCheckbox(SpecificPseudoStates.OUT_OF_RANGE, true);\n    }\n\n    if (isElementOfTypes(node, ['a', 'area']) && node.getAttribute('href') !== undefined) {\n      hideSpecificCheckbox(SpecificPseudoStates.VISITED, false);\n      hideSpecificCheckbox(SpecificPseudoStates.LINK, false);\n    } else {\n      hideSpecificCheckbox(SpecificPseudoStates.VISITED, true);\n      hideSpecificCheckbox(SpecificPseudoStates.LINK, true);\n    }\n\n    if (isInputWithTypeRadioOrCheckbox(node) || isElementOfTypes(node, ['option'])) {\n      hideSpecificCheckbox(SpecificPseudoStates.CHECKED, false);\n    } else {\n      hideSpecificCheckbox(SpecificPseudoStates.CHECKED, true);\n    }\n\n    if (isInputWithTypeRadioOrCheckbox(node) || isElementOfTypes(node, ['progress'])) {\n      hideSpecificCheckbox(SpecificPseudoStates.INDETERMINATE, false);\n    } else {\n      hideSpecificCheckbox(SpecificPseudoStates.INDETERMINATE, true);\n    }\n\n    if (isElementOfTypes(node, ['input', 'textarea'])) {\n      hideSpecificCheckbox(SpecificPseudoStates.PLACEHOLDER_SHOWN, false);\n    } else {\n      hideSpecificCheckbox(SpecificPseudoStates.PLACEHOLDER_SHOWN, true);\n    }\n\n    if (isElementOfTypes(node, ['input'])) {\n      hideSpecificCheckbox(SpecificPseudoStates.AUTOFILL, false);\n    } else {\n      hideSpecificCheckbox(SpecificPseudoStates.AUTOFILL, true);\n    }\n\n    if (isElementOfTypes(node, ['input', 'select', 'dialog', 'details'])) {\n      hideSpecificCheckbox(SpecificPseudoStates.OPEN, false);\n    } else {\n      hideSpecificCheckbox(SpecificPseudoStates.OPEN, true);\n    }\n  }\n}\n\nlet buttonProviderInstance: ButtonProvider;\nexport class ButtonProvider implements UI.Toolbar.Provider {\n  private readonly button: UI.Toolbar.ToolbarToggle;\n  private view: ElementStatePaneWidget;\n  private constructor() {\n    this.button = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleElementState), 'hover');\n    this.button.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.clicked, this);\n    this.button.element.classList.add('element-state');\n    this.button.element.setAttribute('jslog', `${VisualLogging.toggleSubpane('element-states').track({click: true})}`);\n    this.button.element.style.setProperty('--dot-toggle-top', '12px');\n    this.button.element.style.setProperty('--dot-toggle-left', '18px');\n    this.view = new ElementStatePaneWidget();\n  }\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ButtonProvider {\n    const {forceNew} = opts;\n    if (!buttonProviderInstance || forceNew) {\n      buttonProviderInstance = new ButtonProvider();\n    }\n    return buttonProviderInstance;\n  }\n  private clicked(): void {\n    ElementsPanel.instance().showToolbarPane(!this.view.isShowing() ? this.view : null, this.button);\n  }\n  item(): UI.Toolbar.ToolbarToggle {\n    return this.button;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/**\n * Copyright 2017 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n@scope to (devtools-widget > *) {\n  .styles-element-state-pane {\n    overflow: hidden;\n    padding-left: 2px;\n    background-color: var(--sys-color-cdt-base-container);\n    border-bottom: 1px solid var(--sys-color-divider);\n    margin-top: 0;\n    padding-bottom: 2px;\n  }\n\n  .styles-element-state-pane > .page-state-checkbox {\n    margin-block: 6px;\n    display: flex;\n    align-items: center;\n    gap: 2px;\n  }\n\n  .styles-element-state-pane .section-header {\n    margin: 8px 4px 6px;\n    color: var(--color-text-secondary);\n  }\n\n  .styles-element-state-pane > table {\n    width: 100%;\n    border-spacing: 0;\n  }\n\n  .styles-element-state-pane td {\n    padding: 0;\n  }\n\n  .pseudo-states-container {\n    display: grid;\n    column-gap: 12px;\n    grid-template-columns: repeat(2, 1fr);\n    grid-auto-flow: row;\n  }\n\n  .pseudo-states-container.specific-pseudo-states {\n    grid-template-columns: repeat(2, 1fr);\n    margin-bottom: 4px;\n  }\n\n  .force-specific-element-header:focus {\n    background-color: var(--sys-color-state-hover-on-subtle);\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./elementStatePaneWidget.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as UI from '../../ui/legacy/legacy.js';\n\nimport {ElementsTreeOutline} from './ElementsTreeOutline.js';\n\nlet rendererInstance: Renderer;\n\nexport class Renderer implements UI.UIUtils.Renderer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): Renderer {\n    const {forceNew} = opts;\n    if (!rendererInstance || forceNew) {\n      rendererInstance = new Renderer();\n    }\n    return rendererInstance;\n  }\n\n  async render(object: Object, options?: UI.UIUtils.Options): Promise<UI.UIUtils.RenderedObject|null> {\n    let node: SDK.DOMModel.DOMNode|(SDK.DOMModel.DOMNode | null)|null = null;\n\n    if (object instanceof SDK.DOMModel.DOMNode) {\n      node = (object);\n    } else if (object instanceof SDK.DOMModel.DeferredDOMNode) {\n      node = await (object).resolvePromise();\n    }\n\n    if (!node) {\n      // Can't render not-a-node, or couldn't resolve deferred node.\n      return null;\n    }\n\n    const treeOutline = new ElementsTreeOutline(\n        /* omitRootDOMNode: */ false, /* selectEnabled: */ true, /* hideGutter: */ true);\n    treeOutline.rootDOMNode = node;\n    treeOutline.deindentSingleNode();\n    treeOutline.setVisible(true);\n    // @ts-expect-error used in console_test_runner\n    treeOutline.element.treeElementForTest = treeOutline.firstChild();\n    treeOutline.setShowSelectionOnKeyboardFocus(/* show: */ true, /* preventTabOrder: */ true);\n    if (options?.expand) {\n      treeOutline.firstChild()?.expand();\n    }\n    return {\n      element: treeOutline.element,\n      forceSelect: treeOutline.forceSelect.bind(treeOutline),\n    };\n  }\n}\n"],
  "mappings": "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",
  "names": ["Common", "Root", "SDK", "UI", "VisualLogging", "Common", "Host", "i18n", "Platform", "Root", "SDK", "Buttons", "TreeOutline", "UI", "VisualLogging", "SDK", "model", "UI", "value", "color", "section", "propertyName", "ElementsComponents", "Common", "Root", "SDK", "UI", "Common", "i18n", "Platform", "SDK", "TreeOutline", "InlineEditor", "Components", "UI", "Lit", "ElementsComponents", "UI", "link", "i18n", "UI", "html", "UIStrings", "str_", "i18nString", "html", "SDK", "Common", "i18n", "SDK", "Components", "UI", "VisualLogging", "ButtonProvider", "Common", "Host", "i18n", "Platform", "Root", "SDK", "Bindings", "TextUtils", "IconButton", "InlineEditor", "Components", "UI", "VisualLogging", "ElementsComponents", "Common", "UI", "i18n", "SDK", "Lit", "TreeOutline", "UI", "VisualLogging", "render", "html", "Lit", "UIStrings", "str_", "i18nString", "DEFAULT_VIEW", "tree", "UI", "Common", "i18n", "Platform", "SDK", "Bindings", "ColorPicker", "InlineEditor", "UI", "Lit", "VisualLogging", "i18n", "SDK", "value", "UIStrings", "str_", "i18nString", "reasonPropertyDeclaration", "affectedPropertyDeclarationCode", "value", "Lit", "UI", "html", "render", "Lit", "focus", "value", "html", "render", "classMap", "ifDefined", "Lit", "UIStrings", "str_", "i18nString", "key", "value", "match", "colorText", "swatch", "color", "pane", "space", "section", "property", "item", "span", "node", "context", "pane", "section", "value", "Common", "Host", "i18n", "Platform", "Root", "SDK", "Badges", "Bindings", "TextUtils", "Buttons", "Tooltips", "UI", "VisualLogging", "ElementsComponents", "Common", "i18n", "SDK", "UI", "html", "nothing", "render", "VisualLogging", "classMap", "UIStrings", "str_", "i18nString", "DEFAULT_VIEW", "render", "html", "nothing", "link", "UIStrings", "str_", "i18nString", "link", "location", "node", "item", "focus", "rule", "section", "treeElement", "Root", "UIStrings", "str_", "i18nString", "link", "value", "section", "index", "toolbar", "toggle", "item", "expand", "name", "buttonProviderInstance", "ButtonProvider", "UIStrings", "str_", "i18nString", "value", "link", "html", "Lit", "UIStrings", "str_", "i18nString", "value", "ColorRenderer", "color", "toolbar", "link", "tree", "elementNode", "DEFAULT_VIEW", "Common", "i18n", "SDK", "Badges", "IssuesManager", "CodeHighlighter", "UI", "html", "nothing", "render", "VisualLogging", "i18n", "UIStrings", "str_", "i18nString", "Common", "Host", "i18n", "Platform", "Root", "SDK", "Badges", "TextUtils", "Buttons", "Highlighting", "IconButton", "Components", "UI", "VisualLogging", "ElementsComponents", "SDK", "node", "id", "value", "i18n", "UIStrings", "str_", "UIStrings", "str_", "i18nString", "action", "item", "section", "tagName", "child", "colors", "value", "link", "node", "adorner", "Common", "i18n", "Adorners", "IconButton", "UI", "ElementsComponents", "UIStrings", "str_", "i18nString", "Common", "i18n", "SDK", "IconButton", "UI", "ElementsComponents", "UIStrings", "str_", "i18nString", "tree", "document", "UIStrings", "str_", "i18nString", "DEFAULT_VIEW", "deepestExpandedParent", "focus", "link", "render", "html", "nothing", "pseudoElementName", "hidden", "document", "ElementsTreeOutline", "Events", "Common", "i18n", "Platform", "SDK", "Buttons", "UI", "Lit", "VisualLogging", "UIStrings", "str_", "i18nString", "render", "html", "Lit", "value", "DEFAULT_VIEW", "target", "input", "Common", "Platform", "SDK", "UI", "VisualLogging", "style", "value", "UIStrings", "str_", "i18nString", "toggle", "focus", "domModel", "pane", "msg", "ActionDelegate", "DEFAULT_VIEW", "Common", "i18n", "SDK", "UI", "html", "render", "VisualLogging", "UIStrings", "str_", "i18nString", "value", "DEFAULT_VIEW", "Common", "Host", "i18n", "Platform", "SDK", "UI", "html", "nothing", "render", "VisualLogging", "bindToSetting", "UIStrings", "str_", "i18nString", "DEFAULT_VIEW", "render", "html", "nothing", "DEFAULT_VIEW", "i18n", "SDK", "Components", "UI", "html", "render", "UIStrings", "str_", "i18nString", "DEFAULT_VIEW", "render", "html", "ButtonProvider", "Common", "i18n", "Platform", "SDK", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "ButtonProvider", "buttonProviderInstance", "value", "ButtonProvider", "DEFAULT_VIEW", "i18n", "SDK", "Buttons", "UI", "html", "render", "VisualLogging", "bindToSetting", "UIStrings", "str_", "i18nString", "SpecificPseudoStates", "DEFAULT_VIEW", "html", "render", "ButtonProvider", "node", "buttonProviderInstance", "Renderer", "SDK", "Renderer"]
}
