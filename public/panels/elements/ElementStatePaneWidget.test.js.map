{"version":3,"file":"ElementStatePaneWidget.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ElementStatePaneWidget.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {createTarget, stubNoopSettings} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n} from '../../testing/MockConnection.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Elements from './elements.js';\n\ndescribeWithMockConnection('ElementStatePaneWidget', () => {\n  let target: SDK.Target.Target;\n  let view: Elements.ElementStatePaneWidget.ElementStatePaneWidget;\n\n  const pseudoClasses = [\n    'enabled',       'disabled',          'valid',    'invalid',   'user-valid',\n    'user-invalid',  'required',          'optional', 'read-only', 'read-write',\n    'in-range',      'out-of-range',      'visited',  'link',      'checked',\n    'indeterminate', 'placeholder-shown', 'autofill', 'open',\n  ];\n\n  beforeEach(() => {\n    stubNoopSettings();\n    target = createTarget();\n  });\n\n  const assertExpectedPseudoClasses = async (\n      nodeName: string, expectedPseudoClasses: string[], formAssociated = false, attribute?: [string, string]) => {\n    view = new Elements.ElementStatePaneWidget.ElementStatePaneWidget();\n    const tableUpdatedPromise = new Promise<void>(\n        resolve => sinon.stub(view, 'updateElementSpecificStatesTableForTest').callsFake(resolve),\n    );\n\n    const model = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(model);\n\n    const node = new SDK.DOMModel.DOMNode(model);\n\n    sinon.stub(node, 'nodeType').returns(Node.ELEMENT_NODE);\n    sinon.stub(node, 'nodeName').returns(nodeName);\n    sinon.stub(node, 'enclosingElementOrSelf').returns(node);\n    sinon.stub(node, 'callFunction').resolves({value: formAssociated});\n    if (attribute) {\n      sinon.stub(node, 'getAttribute').withArgs(attribute[0]).returns(attribute[1]);\n    }\n\n    const header = view.contentElement.querySelector('.force-specific-element-header');\n    assert.instanceOf(header, HTMLElement);\n    header.click();\n\n    UI.Context.Context.instance().setFlavor(SDK.DOMModel.DOMNode, node);\n\n    await tableUpdatedPromise;\n\n    for (const pseudoClass of pseudoClasses) {\n      const div = view.contentElement.querySelector(`#${pseudoClass}`);\n      assert.instanceOf(div, HTMLDivElement);\n      const shouldShow = expectedPseudoClasses.includes(pseudoClass);\n      assert.strictEqual(\n          !div.hidden, shouldShow, `Checkbox for ${pseudoClass} should be ${shouldShow ? 'shown' : 'hidden'}`);\n    }\n  };\n\n  it('Calls the right backend functions', async () => {\n    view = new Elements.ElementStatePaneWidget.ElementStatePaneWidget();\n\n    const model = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(model);\n\n    const node = new SDK.DOMModel.DOMNode(model);\n\n    sinon.stub(node, 'nodeType').returns(Node.ELEMENT_NODE);\n    sinon.stub(node, 'nodeName').returns('input');\n    sinon.stub(node, 'enclosingElementOrSelf').returns(node);\n    const checkboxes = sinon.spy(node.domModel().cssModel(), 'forcePseudoState');\n\n    UI.Context.Context.instance().setFlavor(SDK.DOMModel.DOMNode, node);\n\n    for (const pseudoClass of pseudoClasses) {\n      const div = view.contentElement.querySelector(`#${pseudoClass}`);\n      assert.exists(div);\n      const span = div.children[0];\n      const shadowRoot = span.shadowRoot;\n      const input = shadowRoot?.querySelector('input');\n      assert.exists(input, 'The span element doesn\\'t have an input element');\n      input.click();\n\n      const args = checkboxes.lastCall.args;\n      assert.strictEqual(args[0], node, 'Called forcePseudoState with wrong node');\n      assert.strictEqual(args[1], pseudoClass, 'Called forcePseudoState with wrong pseudo-state');\n      assert.isTrue(args[2], 'Called forcePseudoState with wrong enable state');\n    }\n  });\n\n  it('Hidden state for not ELEMENT_NODE type', async () => {\n    view = new Elements.ElementStatePaneWidget.ElementStatePaneWidget();\n    const tableUpdatedPromise = new Promise<void>(\n        resolve => sinon.stub(view, 'updateElementSpecificStatesTableForTest').callsFake(resolve),\n    );\n\n    const model = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(model);\n    const node = new SDK.DOMModel.DOMNode(model);\n    sinon.stub(node, 'nodeType').returns(Node.TEXT_NODE);\n\n    UI.Context.Context.instance().setFlavor(SDK.DOMModel.DOMNode, node);\n    await tableUpdatedPromise;\n\n    const details = view.contentElement.querySelector('.specific-details');\n    assert.exists(details, 'The details element doesn\\'t exist');\n    assert.instanceOf(details, HTMLDetailsElement, 'The details element is not an instance of HTMLDetailsElement');\n    assert.isTrue(details.hidden, 'The details element is not hidden');\n  });\n\n  it('Hidden state for not supported element type', async () => {\n    view = new Elements.ElementStatePaneWidget.ElementStatePaneWidget();\n    const tableUpdatedPromise = new Promise<void>(\n        resolve => sinon.stub(view, 'updateElementSpecificStatesTableForTest').callsFake(resolve),\n    );\n\n    const model = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(model);\n    const node = new SDK.DOMModel.DOMNode(model);\n    sinon.stub(node, 'nodeName').returns('not supported');\n    sinon.stub(node, 'enclosingElementOrSelf').returns(node);\n    sinon.stub(node, 'callFunction').resolves({value: false});\n\n    UI.Context.Context.instance().setFlavor(SDK.DOMModel.DOMNode, node);\n    await tableUpdatedPromise;\n\n    const details = view.contentElement.querySelector('.specific-details');\n    assert.exists(details, 'The details element doesn\\'t exist');\n    assert.instanceOf(details, HTMLDetailsElement, 'The details element is not an instance of HTMLDetailsElement');\n    assert.isTrue(details.hidden, 'The details element is not hidden');\n  });\n\n  it('Shows the specific pseudo-classes for input', async () => {\n    await assertExpectedPseudoClasses(\n        'input',\n        [\n          'disabled',\n          'valid',\n          'invalid',\n          'user-valid',\n          'user-invalid',\n          'required',\n          'read-only',\n          'placeholder-shown',\n          'autofill',\n          'open',\n        ],\n    );\n  });\n\n  it('Shows the specific pseudo-classes for button', async () => {\n    await assertExpectedPseudoClasses(\n        'button',\n        ['disabled', 'valid', 'invalid', 'read-write'],\n    );\n  });\n\n  it('Shows the specific pseudo-classes for fieldset', async () => {\n    await assertExpectedPseudoClasses(\n        'fieldset',\n        ['disabled', 'valid', 'invalid', 'read-write'],\n    );\n  });\n\n  it('Shows the specific pseudo-classes for textarea', async () => {\n    await assertExpectedPseudoClasses(\n        'textarea',\n        [\n          'disabled',\n          'valid',\n          'invalid',\n          'user-valid',\n          'user-invalid',\n          'required',\n          'read-only',\n          'placeholder-shown',\n        ],\n    );\n    await assertExpectedPseudoClasses(\n        'textarea',\n        [\n          'disabled',\n          'valid',\n          'invalid',\n          'user-valid',\n          'user-invalid',\n          'required',\n          'read-write',\n          'placeholder-shown',\n        ],\n        false, ['readonly', '']);\n    await assertExpectedPseudoClasses(\n        'textarea',\n        [\n          'enabled',\n          'valid',\n          'invalid',\n          'user-valid',\n          'user-invalid',\n          'required',\n          'read-write',\n          'placeholder-shown',\n        ],\n        false, ['disabled', '']);\n    await assertExpectedPseudoClasses(\n        'textarea',\n        [\n          'disabled',\n          'valid',\n          'invalid',\n          'user-valid',\n          'user-invalid',\n          'optional',\n          'read-only',\n          'placeholder-shown',\n        ],\n        false, ['required', '']);\n  });\n\n  it('Shows the specific pseudo-classes for select', async () => {\n    await assertExpectedPseudoClasses(\n        'select',\n        ['disabled', 'valid', 'invalid', 'user-valid', 'user-invalid', 'required', 'read-write', 'open'],\n    );\n  });\n\n  it('Shows the specific pseudo-classes for option', async () => {\n    await assertExpectedPseudoClasses(\n        'option',\n        ['disabled', 'checked', 'read-write'],\n    );\n  });\n\n  it('Shows the specific pseudo-classes for optgroup', async () => {\n    await assertExpectedPseudoClasses(\n        'optgroup',\n        ['disabled', 'read-write'],\n    );\n  });\n\n  it('Shows the specific pseudo-classes for FormAssociated', async () => {\n    await assertExpectedPseudoClasses(\n        'CustomFormAssociatedElement',\n        ['disabled', 'valid', 'invalid', 'read-write'],\n        true,\n    );\n  });\n\n  it('Shows the specific pseudo-classes for object, output and img', async () => {\n    await assertExpectedPseudoClasses(\n        'object',\n        ['valid', 'invalid', 'read-write'],\n    );\n\n    await assertExpectedPseudoClasses(\n        'output',\n        ['valid', 'invalid', 'read-write'],\n    );\n\n    await assertExpectedPseudoClasses(\n        'img',\n        ['valid', 'invalid', 'read-write'],\n    );\n  });\n  it('Shows the specific pseudo-classes for progress', async () => {\n    await assertExpectedPseudoClasses(\n        'progress',\n        ['read-write', 'indeterminate'],\n    );\n  });\n\n  it('Shows the specific pseudo-classes for a and area with href', async () => {\n    await assertExpectedPseudoClasses(\n        'a',\n        ['visited', 'link', 'read-write'],\n        false,\n        ['href', 'www.google.com'],\n    );\n\n    await assertExpectedPseudoClasses(\n        'area',\n        ['visited', 'link', 'read-write'],\n        false,\n        ['href', 'www.google.com'],\n    );\n  });\n\n  it('Shows the specific pseudo-classes for a and area without href', async () => {\n    await assertExpectedPseudoClasses(\n        'a',\n        ['read-write'],\n    );\n\n    await assertExpectedPseudoClasses(\n        'area',\n        ['read-write'],\n    );\n  });\n\n  it('Shows the specific pseudo-classes for contenteditable div', async () => {\n    await assertExpectedPseudoClasses(\n        'div',\n        ['read-only'],\n        false,\n        ['contenteditable', ''],\n    );\n  });\n\n  it('Shows the specific pseudo-classes for radio or checkbox inputs', async () => {\n    await assertExpectedPseudoClasses(\n        'input',\n        [\n          'disabled',\n          'valid',\n          'invalid',\n          'user-valid',\n          'user-invalid',\n          'required',\n          'read-only',\n          'placeholder-shown',\n          'autofill',\n          'checked',\n          'indeterminate',\n          'open',\n        ],\n        false,\n        ['type', 'checkbox'],\n    );\n    await assertExpectedPseudoClasses(\n        'input',\n        [\n          'disabled',\n          'valid',\n          'invalid',\n          'user-valid',\n          'user-invalid',\n          'required',\n          'read-only',\n          'placeholder-shown',\n          'autofill',\n          'checked',\n          'indeterminate',\n          'open',\n        ],\n        false,\n        ['type', 'radio'],\n    );\n  });\n\n  it('Shows the specific pseudo-classes for datalist, label, legend and meter', async () => {\n    await assertExpectedPseudoClasses(\n        'datalist',\n        ['read-write'],\n    );\n    await assertExpectedPseudoClasses(\n        'label',\n        ['read-write'],\n    );\n    await assertExpectedPseudoClasses(\n        'legend',\n        ['read-write'],\n    );\n    await assertExpectedPseudoClasses(\n        'meter',\n        ['read-write'],\n    );\n  });\n});\n"]}