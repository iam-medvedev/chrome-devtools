{"version":3,"file":"ShortcutTreeElement.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ShortcutTreeElement.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as ElementsComponents from './components/components.js';\nimport {ElementsPanel} from './ElementsPanel.js';\nimport {ElementsTreeElement} from './ElementsTreeElement.js';\nimport {ElementsTreeOutline} from './ElementsTreeOutline.js';\n\nconst UIStrings = {\n  /**\n   * @description Link text content in Elements Tree Outline of the Elements panel\n   */\n  reveal: 'reveal',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ShortcutTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ShortcutTreeElement extends UI.TreeOutline.TreeElement {\n  private readonly nodeShortcut: SDK.DOMModel.DOMNodeShortcut;\n  #hovered?: boolean;\n  constructor(nodeShortcut: SDK.DOMModel.DOMNodeShortcut) {\n    super('');\n    this.listItemElement.createChild('div', 'selection fill');\n    const title = this.listItemElement.createChild('span', 'elements-tree-shortcut-title');\n    let text = nodeShortcut.nodeName.toLowerCase();\n    if (nodeShortcut.nodeType === Node.ELEMENT_NODE) {\n      text = '<' + text + '>';\n    }\n    title.textContent = '\\u21AA ' + text;\n    this.nodeShortcut = nodeShortcut;\n    this.addRevealAdorner();\n  }\n\n  addRevealAdorner(): void {\n    const adorner = new Adorners.Adorner.Adorner();\n    adorner.classList.add('adorner-reveal');\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.REVEAL);\n    const name = config.name;\n    const adornerContent = document.createElement('span');\n    const linkIcon = IconButton.Icon.create('select-element');\n    const slotText = document.createElement('span');\n    slotText.textContent = name;\n    adornerContent.append(linkIcon);\n    adornerContent.append(slotText);\n    adornerContent.classList.add('adorner-with-icon');\n    adorner.data = {\n      name,\n      content: adornerContent,\n      jslogContext: 'reveal',\n    };\n    this.listItemElement.appendChild(adorner);\n    const onClick = ((() => {\n                       this.nodeShortcut.deferredNode.resolve(\n                           node => {\n                             void Common.Revealer.reveal(node);\n                           },\n                       );\n                     }) as EventListener);\n    adorner.addInteraction(onClick, {\n      isToggle: false,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.reveal),\n      ariaLabelActive: i18nString(UIStrings.reveal),\n    });\n    adorner.addEventListener('mousedown', e => e.consume(), false);\n    ElementsPanel.instance().registerAdorner(adorner);\n  }\n\n  get hovered(): boolean {\n    return Boolean(this.#hovered);\n  }\n\n  set hovered(x: boolean) {\n    if (this.#hovered === x) {\n      return;\n    }\n    this.#hovered = x;\n    this.listItemElement.classList.toggle('hovered', x);\n  }\n\n  deferredNode(): SDK.DOMModel.DeferredDOMNode {\n    return this.nodeShortcut.deferredNode;\n  }\n\n  domModel(): SDK.DOMModel.DOMModel {\n    return this.nodeShortcut.deferredNode.domModel();\n  }\n\n  private setLeftIndentOverlay(): void {\n    // We use parent's `--indent` value and add 24px to account for an extra level of indent.\n    let indent = 24;\n    if (this.parent && this.parent instanceof ElementsTreeElement) {\n      const parentIndent = parseFloat(this.parent.listItemElement.style.getPropertyValue('--indent')) || 0;\n      indent += parentIndent;\n    }\n    this.listItemElement.style.setProperty('--indent', indent + 'px');\n  }\n\n  override onattach(): void {\n    this.setLeftIndentOverlay();\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    if (!selectedByUser) {\n      return true;\n    }\n    this.nodeShortcut.deferredNode.highlight();\n    this.nodeShortcut.deferredNode.resolve(resolved.bind(this));\n    function resolved(this: ShortcutTreeElement, node: SDK.DOMModel.DOMNode|null): void {\n      if (node && this.treeOutline instanceof ElementsTreeOutline) {\n        this.treeOutline.selectedDOMNodeInternal = node;\n        this.treeOutline.selectedNodeChanged(false);\n      }\n    }\n    return true;\n  }\n}\n"]}