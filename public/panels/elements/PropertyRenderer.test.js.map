{"version":3,"file":"PropertyRenderer.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/PropertyRenderer.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {Printer} from '../../testing/PropertyParser.js';\nimport * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\n\nimport * as Elements from './elements.js';\n\ndescribeWithEnvironment('PropertyRenderer', () => {\n  function renderValueElement(name: string, value: string) {\n    return Elements.PropertyRenderer.Renderer.renderValueElement(\n        {name, value}, SDK.CSSPropertyParser.matchDeclaration(name, value, []), []);\n  }\n\n  describe('Renderer', () => {\n    function textFragments(nodes: Node[]): Array<string|null> {\n      return nodes.map(n => n.textContent);\n    }\n\n    it('parses text', () => {\n      // Prevent normalization to get an accurate representation of the parser result.\n      sinon.stub(Element.prototype, 'normalize');\n      assert.deepEqual(\n          textFragments(Array.from(renderValueElement('--p', 'var(--v)').valueElement.childNodes)),\n          ['var', '(', '--v', ')']);\n\n      assert.deepEqual(\n          textFragments(\n              Array.from(renderValueElement('--p', '/* comments are text */ 1px solid 4').valueElement.childNodes)),\n          ['/* comments are text */', ' ', '1px', ' ', 'solid', ' ', '4']);\n      assert.deepEqual(\n          textFragments(Array.from(\n              renderValueElement('--p', '2px var(--double, var(--fallback, black)) #32a1ce rgb(124 125 21 0)')\n                  .valueElement.childNodes)),\n          [\n            '2px', ' ', 'var',     '(', '--double', ',', ' ',   'var', '(',   '--fallback', ',',  ' ', 'black', ')',\n            ')',   ' ', '#32a1ce', ' ', 'rgb',      '(', '124', ' ',   '125', ' ',          '21', ' ', '0',     ')',\n          ]);\n    });\n\n    const cssParser = CodeMirror.css.cssLanguage.parser;\n    it('reproduces the input if nothing matched', () => {\n      const property = '2px var(--double, var(--fallback, black)) #32a1ce rgb(124 125 21 0)';\n      const rule = `*{--property: ${property};}`;\n      const tree = cssParser.parse(rule).topNode;\n      const ast = new SDK.CSSPropertyParser.SyntaxTree(property, rule, tree);\n      const matchedResult = SDK.CSSPropertyParser.BottomUpTreeMatching.walk(ast, []);\n      const context = new Elements.PropertyRenderer.RenderingContext(ast, null, new Map(), matchedResult);\n      assert.deepEqual(\n          textFragments(Elements.PropertyRenderer.Renderer.render(tree, context).nodes).join(''), rule,\n          Printer.walk(ast).get());\n    });\n\n    it('nicely formats binary expressions', () => {\n      const property = 'calc((50 -(0* 4))* 1vmin)';\n      const rule = `*{--property: ${property};}`;\n      const tree = cssParser.parse(rule).topNode;\n      const ast = new SDK.CSSPropertyParser.SyntaxTree(property, rule, tree);\n      const matchedResult =\n          SDK.CSSPropertyParser.BottomUpTreeMatching.walk(ast, [new SDK.CSSPropertyParserMatchers.BinOpMatcher()]);\n      const renderer = new Elements.PropertyRenderer.BinOpRenderer();\n      const context = new Elements.PropertyRenderer.RenderingContext(\n          ast, null, new Map([[renderer.matchType, renderer]]), matchedResult);\n      assert.deepEqual(\n          textFragments(Elements.PropertyRenderer.Renderer.render(tree, context).nodes).join(''),\n          '*{--property: calc((50 - (0 * 4)) * 1vmin);}', Printer.walk(ast).get());\n    });\n\n    it('correctly renders subtrees', () => {\n      const property = '2px var(--double, var(--fallback, black)) #32a1ce rgb(124 125 21 0)';\n      const rule = `*{--property: ${property};}`;\n      const tree = cssParser.parse(rule).topNode.firstChild?.firstChild?.nextSibling?.firstChild?.nextSibling;\n      assert.exists(tree);\n      const ast = new SDK.CSSPropertyParser.SyntaxTree(property, rule, tree);\n      const matchedResult = SDK.CSSPropertyParser.BottomUpTreeMatching.walk(ast, []);\n      const context = new Elements.PropertyRenderer.RenderingContext(ast, null, new Map(), matchedResult);\n      assert.deepEqual(\n          textFragments(Elements.PropertyRenderer.Renderer.render(tree, context).nodes).join(''), property,\n          Printer.walk(ast).get());\n    });\n\n    it('renders trailing comments', () => {\n      const property = '/* color: red */ blue /* color: red */';\n      assert.strictEqual(\n          textFragments(Array.from(renderValueElement('--p', property).valueElement.childNodes)).join(''), property);\n    });\n\n    it('renders malformed comments', () => {\n      const property = 'red /* foo: bar';\n      assert.strictEqual(\n          textFragments(Array.from(renderValueElement('--p', property).valueElement.childNodes)).join(''), property);\n    });\n  });\n});\n\ndescribe('TracingContext', () => {\n  it('assumes no substitutions by default', () => {\n    const matchedResult = SDK.CSSPropertyParser.matchDeclaration('prop', 'value', []);\n    assert.exists(matchedResult);\n    const context = new Elements.PropertyRenderer.TracingContext(\n        new Elements.PropertyRenderer.Highlighting(), false, 0, matchedResult);\n    assert.isFalse(context.nextSubstitution());\n\n    sinon.stub(matchedResult, 'hasMatches').returns(true);\n    const context2 = new Elements.PropertyRenderer.TracingContext(\n        new Elements.PropertyRenderer.Highlighting(), false, 0, matchedResult);\n    assert.isTrue(context2.nextSubstitution());\n\n    const context3 = new Elements.PropertyRenderer.TracingContext(new Elements.PropertyRenderer.Highlighting(), false);\n    assert.isFalse(context3.nextSubstitution());\n  });\n\n  it('controls substitution by creating \"nested\" tracing contexts', () => {\n    const matchedResult = SDK.CSSPropertyParser.matchDeclaration('prop', 'value', []);\n    assert.exists(matchedResult);\n    sinon.stub(matchedResult, 'hasMatches').returns(true);\n    const context = new Elements.PropertyRenderer.TracingContext(\n        new Elements.PropertyRenderer.Highlighting(), false, 0, matchedResult);\n\n    assert.isTrue(context.nextSubstitution());\n    assert.exists(context.substitution());\n    assert.notExists(context.substitution()?.substitution());\n    assert.notExists(context.substitution()?.substitution()?.substitution());\n\n    assert.isTrue(context.nextSubstitution());\n    assert.exists(context.substitution());\n    assert.exists(context.substitution()?.substitution());\n    assert.notExists(context.substitution()?.substitution()?.substitution());\n\n    assert.isTrue(context.nextSubstitution());\n    assert.exists(context.substitution());\n    assert.exists(context.substitution()?.substitution());\n    assert.exists(context.substitution()?.substitution()?.substitution());\n\n    assert.isFalse(context.nextSubstitution());\n    assert.exists(context.substitution());\n    assert.exists(context.substitution()?.substitution());\n    assert.exists(context.substitution()?.substitution()?.substitution());\n  });\n\n  it('does not allow tracing evaluations until substitutions are exhausted', () => {\n    const matchedResult = SDK.CSSPropertyParser.matchDeclaration('prop', 'value', []);\n    assert.exists(matchedResult);\n    sinon.stub(matchedResult, 'hasMatches').returns(true);\n    const context = new Elements.PropertyRenderer.TracingContext(\n        new Elements.PropertyRenderer.Highlighting(), false, 0, matchedResult);\n\n    assert.throw(() => context.nextEvaluation());\n    context.nextSubstitution();\n    assert.doesNotThrow(() => context.nextEvaluation());\n  });\n\n  it('controls evaluations creating nested context', () => {\n    const matchedResult = SDK.CSSPropertyParser.matchDeclaration('prop', 'value', []);\n    assert.exists(matchedResult);\n    const context = new Elements.PropertyRenderer.TracingContext(\n        new Elements.PropertyRenderer.Highlighting(), false, 0, matchedResult);\n\n    const evaluation = () => ({placeholder: []});\n    // Evaluations are applied bottom up\n    assert.isTrue(context.nextEvaluation());\n    {\n      // Top-down pass: first prepare evaluations for outermost scopes with nested expressions [1, 2] and [4, 5, 6]\n      const childContexts = context.evaluation([1, 2]);\n      assert.exists(childContexts);\n      assert.lengthOf(childContexts, 2);\n      const [firstChild, secondChild] = childContexts;\n      const [firstGrandChild, secondGrandChild, thirdGrandChild] = secondChild.evaluation([4, 5, 6]) ?? [];\n      assert.exists(firstGrandChild);\n      assert.exists(secondGrandChild);\n      assert.exists(thirdGrandChild);\n      // Bottom-up pass: actually apply evaluations \"from the inside out\".\n      // Grand children don't have any inner expressions to be evaluated, no need to request evaluation and no inner\n      // tracing contexts to be passed here.\n      assert.isOk(firstGrandChild.applyEvaluation([], evaluation));\n      assert.isOk(secondGrandChild.applyEvaluation([], evaluation));\n      assert.isOk(thirdGrandChild.applyEvaluation([], evaluation));\n      assert.isOk(secondChild.applyEvaluation([], evaluation));\n      // firstChild has inner expressions (the grand children), so pass the inner tracing contexts here.\n      assert.isNotOk(firstChild.applyEvaluation([firstGrandChild, secondGrandChild, thirdGrandChild], evaluation));\n      assert.isNotOk(context.applyEvaluation([firstChild, secondChild], evaluation));\n    }\n\n    assert.isTrue(context.nextEvaluation());\n    {\n      const [firstChild, secondChild] = context.evaluation([1, 2]) ?? [];\n      assert.exists(firstChild);\n      assert.exists(secondChild);\n      const [firstGrandChild, secondGrandChild, thirdGrandChild] = secondChild.evaluation([4, 5, 6]) ?? [];\n      assert.exists(firstGrandChild);\n      assert.exists(secondGrandChild);\n      assert.exists(thirdGrandChild);\n      assert.isOk(firstGrandChild.applyEvaluation([], evaluation));\n      assert.isOk(secondGrandChild.applyEvaluation([], evaluation));\n      assert.isOk(thirdGrandChild.applyEvaluation([], evaluation));\n      assert.isOk(secondChild.applyEvaluation([], evaluation));\n      assert.isOk(firstChild.applyEvaluation([firstGrandChild, secondGrandChild, thirdGrandChild], evaluation));\n      assert.isNotOk(context.applyEvaluation([firstChild, secondChild], evaluation));\n    }\n\n    assert.isTrue(context.nextEvaluation());\n    {\n      const [firstChild, secondChild] = context.evaluation([1, 2]) ?? [];\n      assert.exists(firstChild);\n      assert.exists(secondChild);\n      const [firstGrandChild, secondGrandChild, thirdGrandChild] = secondChild.evaluation([4, 5, 6]) ?? [];\n      assert.exists(firstGrandChild);\n      assert.exists(secondGrandChild);\n      assert.exists(thirdGrandChild);\n      assert.isOk(firstGrandChild.applyEvaluation([], evaluation));\n      assert.isOk(secondGrandChild.applyEvaluation([], evaluation));\n      assert.isOk(thirdGrandChild.applyEvaluation([], evaluation));\n      assert.isOk(secondChild.applyEvaluation([], evaluation));\n      assert.isOk(firstChild.applyEvaluation([firstGrandChild, secondGrandChild, thirdGrandChild], evaluation));\n      assert.isOk(context.applyEvaluation([firstChild, secondChild], evaluation));\n    }\n\n    assert.isFalse(context.nextEvaluation());\n  });\n\n  it('can inject itself into a RenderingContext', () => {\n    const tracingContext =\n        new Elements.PropertyRenderer.TracingContext(new Elements.PropertyRenderer.Highlighting(), false);\n    const renderingContext = sinon.createStubInstance(Elements.PropertyRenderer.RenderingContext);\n    assert.strictEqual(tracingContext.renderingContext(renderingContext).tracing, tracingContext);\n  });\n\n  it('keeps track of longhand offsets', () => {\n    // The property name isn't relevant, but we need something with sufficiently many longhands. `animation` has lots\n    // of longhands.\n    const matchedResult = SDK.CSSPropertyParser.matchDeclaration(\n        'animation', 'a b var(--c)',\n        [new SDK.CSSPropertyParserMatchers.BaseVariableMatcher(match => match.name === '--c' ? 'ddd' : null)]);\n    assert.exists(matchedResult);\n    const tracingContext = new Elements.PropertyRenderer.TracingContext(\n        new Elements.PropertyRenderer.Highlighting(), false, 0, matchedResult);\n\n    // The initial offset is 0.\n    assert.strictEqual(tracingContext.longhandOffset, 0);\n    const varNode = matchedResult.ast.tree.lastChild;\n    const match = varNode && matchedResult.getMatch(varNode);\n    assert.exists(match);\n    // Apply one level of substitutions (for the var(--c)).\n    assert.isTrue(tracingContext.nextSubstitution());\n    const childTracingContext = tracingContext.substitution({\n      match,\n      context: new Elements.PropertyRenderer.RenderingContext(matchedResult.ast, null, new Map(), matchedResult)\n    });\n    assert.exists(childTracingContext);\n    // The var(--c) appears in the longhand position #2.\n    assert.strictEqual(childTracingContext?.longhandOffset, 2);\n\n    // Now test that the offset of the var(--c) gets passed down to what the var gets substituted with.\n    const innerMatchedResult = SDK.CSSPropertyParser.matchDeclaration('--c', 'c1 c2 c3', []);\n    assert.exists(innerMatchedResult);\n    const lastNode = innerMatchedResult.ast.tree.lastChild;  // c3\n    assert.exists(lastNode);\n    const renderingContext = new Elements.PropertyRenderer.RenderingContext(\n        innerMatchedResult.ast, null, new Map(), innerMatchedResult, undefined, undefined, childTracingContext);\n\n    const longhands = SDK.CSSMetadata.cssMetadata().getLonghands(matchedResult.ast.propertyName ?? '');\n    assert.exists(longhands);\n    // In the fully substituted value, c3 appears in the fifth position.\n    const expectedLonghand = longhands.at(4);\n    assert.exists(expectedLonghand);\n    assert.strictEqual(renderingContext.getComputedLonghandName(lastNode), expectedLonghand);\n  });\n});\n\ndescribe('Highlighting', () => {\n  const node = (id: string) => {\n    const span = document.createElement('span');\n    span.textContent = id;\n    span.id = `node-${id}`;\n    renderElementIntoDOM(span, {allowMultipleChildren: true});\n    return span;\n  };\n\n  beforeEach(() => {\n    const highlighting = new Elements.PropertyRenderer.Highlighting();\n    const match1 = sinon.createStubInstance(SDK.CSSPropertyParserMatchers.TextMatch);\n    const match2 = sinon.createStubInstance(SDK.CSSPropertyParserMatchers.TextMatch);\n    highlighting.addMatch(match1, [node('1'), node('2'), node('3')]);\n    highlighting.addMatch(match1, [node('4'), node('5'), node('6'), node('7')]);\n    highlighting.addMatch(match1, [node('8')]);\n    highlighting.addMatch(match2, [node('a'), node('b'), node('c')]);\n  });\n\n  it('adds highlights on mouseenter', () => {\n    const registry = CSS.highlights.get(Elements.PropertyRenderer.Highlighting.REGISTRY_NAME);\n    assert.exists(registry);\n\n    document.querySelector('#node-6')?.dispatchEvent(new MouseEvent('mouseenter'));\n    assert.deepEqual(\n        Array.from(registry.keys().map(value => (value as Range).cloneContents().textContent)), ['123', '4567', '8']);\n  });\n\n  it('removes highlights on mouseexit', () => {\n    const registry = CSS.highlights.get(Elements.PropertyRenderer.Highlighting.REGISTRY_NAME);\n    assert.exists(registry);\n\n    document.querySelector('#node-6')?.dispatchEvent(new MouseEvent('mouseenter'));\n    assert.deepEqual(\n        Array.from(registry.keys().map(value => (value as Range).cloneContents().textContent)), ['123', '4567', '8']);\n    document.querySelector('#node-6')?.dispatchEvent(new MouseEvent('mouseleave'));\n    assert.deepEqual(Array.from(registry.keys().map(value => (value as Range).cloneContents().textContent)), []);\n  });\n\n  it('replaces highlights on subsequent mouseenter', () => {\n    const registry = CSS.highlights.get(Elements.PropertyRenderer.Highlighting.REGISTRY_NAME);\n    assert.exists(registry);\n\n    document.querySelector('#node-6')?.dispatchEvent(new MouseEvent('mouseenter'));\n    assert.deepEqual(\n        Array.from(registry.keys().map(value => (value as Range).cloneContents().textContent)), ['123', '4567', '8']);\n\n    document.querySelector('#node-a')?.dispatchEvent(new MouseEvent('mouseenter'));\n    assert.deepEqual(Array.from(registry.keys().map(value => (value as Range).cloneContents().textContent)), ['abc']);\n  });\n\n  it('restores previous highlights on mouseexit', () => {\n    const registry = CSS.highlights.get(Elements.PropertyRenderer.Highlighting.REGISTRY_NAME);\n    assert.exists(registry);\n\n    document.querySelector('#node-6')?.dispatchEvent(new MouseEvent('mouseenter'));\n    assert.deepEqual(\n        Array.from(registry.keys().map(value => (value as Range).cloneContents().textContent)), ['123', '4567', '8']);\n\n    document.querySelector('#node-a')?.dispatchEvent(new MouseEvent('mouseenter'));\n    assert.deepEqual(Array.from(registry.keys().map(value => (value as Range).cloneContents().textContent)), ['abc']);\n\n    document.querySelector('#node-a')?.dispatchEvent(new MouseEvent('mouseleave'));\n    assert.deepEqual(\n        Array.from(registry.keys().map(value => (value as Range).cloneContents().textContent)), ['123', '4567', '8']);\n  });\n});\n"]}