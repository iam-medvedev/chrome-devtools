{"version":3,"file":"PropertyRenderer.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/PropertyRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ImagePreviewPopover} from './ImagePreviewPopover.js';\nimport {\n  BottomUpTreeMatching,\n  type Constructor,\n  CSSControlMap,\n  type Match,\n  type Matcher,\n  requiresSpace,\n  type StringMatch,\n  StringMatcher,\n  type SyntaxNodeRef,\n  type SyntaxTree,\n  TextMatch,\n  tokenizeDeclaration,\n  TreeWalker,\n  type URLMatch,\n  URLMatcher,\n} from './PropertyParser.js';\nimport {unescapeCssString} from './StylesSidebarPane.js';\n\nconst UIStrings = {\n  /**\n   *@description Text that is announced by the screen reader when the user focuses on an input field for entering the name of a CSS property in the Styles panel\n   *@example {margin} PH1\n   */\n  cssPropertyName: '`CSS` property name: {PH1}',\n  /**\n   *@description Text that is announced by the screen reader when the user focuses on an input field for entering the value of a CSS property in the Styles panel\n   *@example {10px} PH1\n   */\n  cssPropertyValue: '`CSS` property value: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/PropertyRenderer.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction mergeWithSpacing(nodes: Node[], merge: Node[]): Node[] {\n  const result = [...nodes];\n  if (requiresSpace(nodes, merge)) {\n    result.push(document.createTextNode(' '));\n  }\n  result.push(...merge);\n  return result;\n}\n\nexport interface MatchRenderer<MatchT extends Match> {\n  matcher(): Matcher<MatchT>;\n  render(match: MatchT, context: RenderingContext): Node[];\n}\n\nexport class RenderingContext {\n  constructor(\n      readonly ast: SyntaxTree, readonly renderers: Map<Constructor<Match>, MatchRenderer<Match>>,\n      readonly matchedResult: BottomUpTreeMatching, readonly cssControls?: CSSControlMap,\n      readonly options: {readonly: boolean} = {readonly: false}) {\n  }\n  addControl(cssType: string, control: HTMLElement): void {\n    if (this.cssControls) {\n      const controls = this.cssControls.get(cssType);\n      if (!controls) {\n        this.cssControls.set(cssType, [control]);\n      } else {\n        controls.push(control);\n      }\n    }\n  }\n}\n\nexport class Renderer extends TreeWalker {\n  readonly #matchedResult: BottomUpTreeMatching;\n  #output: Node[] = [];\n  readonly #context: RenderingContext;\n\n  constructor(\n      ast: SyntaxTree, renderers: Map<Constructor<Match>, MatchRenderer<Match>>, matchedResult: BottomUpTreeMatching,\n      cssControls: CSSControlMap, options: {\n        readonly: boolean,\n      }) {\n    super(ast);\n    this.#matchedResult = matchedResult;\n    this.#context = new RenderingContext(this.ast, renderers, this.#matchedResult, cssControls, options);\n  }\n\n  static render(nodeOrNodes: CodeMirror.SyntaxNode|CodeMirror.SyntaxNode[], context: RenderingContext):\n      {nodes: Node[], cssControls: CSSControlMap} {\n    if (!Array.isArray(nodeOrNodes)) {\n      return this.render([nodeOrNodes], context);\n    }\n    const cssControls = new CSSControlMap();\n    const renderers = nodeOrNodes.map(\n        node => this.walkExcludingSuccessors(\n            context.ast.subtree(node), context.renderers, context.matchedResult, cssControls, context.options));\n    const nodes = renderers.map(node => node.#output).reduce(mergeWithSpacing);\n    return {nodes, cssControls};\n  }\n\n  static renderInto(\n      nodeOrNodes: CodeMirror.SyntaxNode|CodeMirror.SyntaxNode[], context: RenderingContext,\n      parent: Node): {nodes: Node[], cssControls: CSSControlMap} {\n    const {nodes, cssControls} = this.render(nodeOrNodes, context);\n    if (parent.lastChild && requiresSpace([parent.lastChild], nodes)) {\n      parent.appendChild(document.createTextNode(' '));\n    }\n    nodes.map(n => parent.appendChild(n));\n    return {nodes, cssControls};\n  }\n\n  renderedMatchForTest(_nodes: Node[], _match: Match): void {\n  }\n\n  protected override enter({node}: SyntaxNodeRef): boolean {\n    const match = this.#matchedResult.getMatch(node);\n    const renderer = match && this.#context.renderers.get(match.constructor as Constructor<Match>);\n    if (renderer || match instanceof TextMatch) {\n      const output = renderer ? renderer.render(match, this.#context) : (match as TextMatch).render();\n      this.renderedMatchForTest(output, match);\n      this.#output = mergeWithSpacing(this.#output, output);\n      return false;\n    }\n\n    return true;\n  }\n\n  static renderNameElement(name: string): HTMLElement {\n    const nameElement = document.createElement('span');\n    nameElement.setAttribute(\n        'jslog', `${VisualLogging.key().track({\n          change: true,\n          keydown: 'ArrowLeft|ArrowUp|PageUp|Home|PageDown|ArrowRight|ArrowDown|End|Space|Tab|Enter|Escape',\n        })}`);\n    UI.ARIAUtils.setLabel(nameElement, i18nString(UIStrings.cssPropertyName, {PH1: name}));\n    nameElement.className = 'webkit-css-property';\n    nameElement.textContent = name;\n    nameElement.normalize();\n    return nameElement;\n  }\n\n  // This function renders a property value as HTML, customizing the presentation with a set of given AST matchers. This\n  // comprises the following steps:\n  // 1. Build an AST of the property.\n  // 2. Apply tree matchers during bottom up traversal.\n  // 3. Render the value from left to right into HTML, deferring rendering of matched subtrees to the matchers\n  //\n  // More general, longer matches take precedence over shorter, more specific matches. Whitespaces are normalized, for\n  // unmatched text and around rendered matching results.\n  static renderValueElement(propertyName: string, propertyValue: string, renderers: MatchRenderer<Match>[]):\n      HTMLElement {\n    const valueElement = document.createElement('span');\n    valueElement.setAttribute(\n        'jslog', `${VisualLogging.value().track({\n          change: true,\n          keydown: 'ArrowLeft|ArrowUp|PageUp|Home|PageDown|ArrowRight|ArrowDown|End|Space|Tab|Enter|Escape',\n        })}`);\n    UI.ARIAUtils.setLabel(valueElement, i18nString(UIStrings.cssPropertyValue, {PH1: propertyValue}));\n    valueElement.className = 'value';\n\n    const ast = tokenizeDeclaration(propertyName, propertyValue);\n    if (!ast) {\n      valueElement.appendChild(document.createTextNode(propertyValue));\n      return valueElement;\n    }\n    const matchers = [];\n    const rendererMap = new Map<Constructor<Match>, MatchRenderer<Match>>();\n    for (const renderer of renderers) {\n      const matcher = renderer.matcher();\n      matchers.push(matcher);\n      rendererMap.set(matcher.matchType, renderer);\n    }\n    const matchedResult = BottomUpTreeMatching.walk(ast, matchers);\n    ast.trailingNodes.forEach(n => matchedResult.matchText(n));\n    const context = new RenderingContext(ast, rendererMap, matchedResult);\n    Renderer.render([ast.tree, ...ast.trailingNodes], context).nodes.forEach(node => valueElement.appendChild(node));\n    valueElement.normalize();\n    return valueElement;\n  }\n}\nexport class URLRenderer implements MatchRenderer<URLMatch> {\n  constructor(private readonly rule: SDK.CSSRule.CSSRule|null, private readonly node: SDK.DOMModel.DOMNode|null) {\n  }\n  render(match: URLMatch): Node[] {\n    const url = unescapeCssString(match.url) as Platform.DevToolsPath.UrlString;\n    const container = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(container, 'url(');\n    let hrefUrl: Platform.DevToolsPath.UrlString|null = null;\n    if (this.rule && this.rule.resourceURL()) {\n      hrefUrl = Common.ParsedURL.ParsedURL.completeURL(this.rule.resourceURL(), url);\n    } else if (this.node) {\n      hrefUrl = this.node.resolveURL(url);\n    }\n    const link = ImagePreviewPopover.setImageUrl(\n        Components.Linkifier.Linkifier.linkifyURL(hrefUrl || url, {\n          text: url,\n          preventClick: false,\n          // crbug.com/1027168\n          // We rely on CSS text-overflow: ellipsis to hide long URLs in the Style panel,\n          // so that we don't have to keep two versions (original vs. trimmed) of URL\n          // at the same time, which complicates both StylesSidebarPane and StylePropertyTreeElement.\n          bypassURLTrimming: true,\n          showColumnNumber: false,\n          inlineFrameIndex: 0,\n        }),\n        hrefUrl || url);\n    container.appendChild(link);\n    UI.UIUtils.createTextChild(container, ')');\n    return [container];\n  }\n\n  matcher(): URLMatcher {\n    return new URLMatcher();\n  }\n}\n\nexport class StringRenderer implements MatchRenderer<StringMatch> {\n  render(match: StringMatch): Node[] {\n    const element = document.createElement('span');\n    element.innerText = match.text;\n    UI.Tooltip.Tooltip.install(element, unescapeCssString(match.text));\n    return [element];\n  }\n\n  matcher(): StringMatcher {\n    return new StringMatcher();\n  }\n}\n"]}