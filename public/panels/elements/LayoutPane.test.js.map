{"version":3,"file":"LayoutPane.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/LayoutPane.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {spyCall} from '../../testing/ExpectStubCall.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Elements from './elements.js';\n\ndescribeWithMockConnection('LayoutPane', () => {\n  let target: SDK.Target.Target;\n  let domModel: SDK.DOMModel.DOMModel;\n  let overlayModel: SDK.OverlayModel.OverlayModel;\n  let getNodesByStyle: sinon.SinonStub;\n  beforeEach(() => {\n    target = createTarget();\n    domModel = target.model(SDK.DOMModel.DOMModel) as SDK.DOMModel.DOMModel;\n    assert.exists(domModel);\n    getNodesByStyle = sinon.stub(domModel, 'getNodesByStyle').resolves([]);\n    overlayModel = target.model(SDK.OverlayModel.OverlayModel) as SDK.OverlayModel.OverlayModel;\n    assert.exists(overlayModel);\n  });\n\n  async function renderComponent() {\n    const component = new Elements.LayoutPane.LayoutPane();\n    const performUpdateSpy = spyCall(component, 'performUpdate');\n    renderElementIntoDOM(component);\n    component.wasShown();\n    await (await performUpdateSpy).result;\n    return component;\n  }\n\n  function queryLabels(component: HTMLElement, selector: string) {\n    return Array.from(component.querySelectorAll(selector)).map(label => {\n      const input = label.querySelector('[data-input]');\n      assert.instanceOf(input, HTMLElement);\n\n      return {\n        label: label.getAttribute('title'),\n        input: input.tagName,\n      };\n    });\n  }\n\n  it('renders settings', async () => {\n    Common.Settings.Settings.instance()\n        .moduleSetting('show-grid-line-labels')\n        .setTitle('Enum setting title' as Platform.UIString.LocalizedString);\n    Common.Settings.Settings.instance()\n        .moduleSetting('show-grid-track-sizes')\n        .setTitle('Boolean setting title' as Platform.UIString.LocalizedString);\n\n    const component = await renderComponent();\n    assert.deepEqual(\n        queryLabels(component.contentElement, '[data-enum-setting]'), [{label: 'Enum setting title', input: 'SELECT'}]);\n    const checkboxesTitles =\n        Array.from(component.contentElement.querySelectorAll('[data-boolean-setting]')).map(checkbox => {\n          assert.instanceOf(checkbox, UI.UIUtils.CheckboxLabel);\n          return checkbox.title;\n        });\n    assert.deepEqual(checkboxesTitles, ['Boolean setting title', '', '']);\n  });\n\n  it('stores a setting when changed', async () => {\n    const component = await renderComponent();\n\n    assert.isTrue(Common.Settings.Settings.instance().moduleSetting('show-grid-track-sizes').get());\n    const input = component.contentElement.querySelector('[data-boolean-setting]');\n    assert.instanceOf(input, UI.UIUtils.CheckboxLabel);\n\n    input.click();\n\n    assert.isFalse(Common.Settings.Settings.instance().moduleSetting('show-grid-track-sizes').get());\n  });\n\n  function makeNode(id: Protocol.DOM.NodeId) {\n    return {\n      id,\n      path: () => 'body > div',\n      ancestorUserAgentShadowRoot: () => false,\n      localName: () => 'div',\n      getAttribute: () => '',\n      scrollIntoView: () => {},\n      highlight: () => {},\n      domModel: () => domModel,\n    } as unknown as SDK.DOMModel.DOMNode;\n  }\n\n  const ID_1 = 1 as Protocol.DOM.NodeId;\n  const ID_2 = 2 as Protocol.DOM.NodeId;\n  const ID_3 = 3 as Protocol.DOM.NodeId;\n\n  it('renders grid elements', async () => {\n    getNodesByStyle\n        .withArgs([\n          {name: 'display', value: 'grid'}, {name: 'display', value: 'inline-grid'},\n          {name: 'display', value: 'masonry'}, {name: 'display', value: 'inline-masonry'}\n        ])\n        .resolves([\n          ID_1,\n          ID_2,\n          ID_3,\n        ]);\n    sinon.stub(domModel, 'nodeForId')\n        .withArgs(ID_1)\n        .returns(makeNode(ID_1))\n        .withArgs(ID_2)\n        .returns(makeNode(ID_2))\n        .withArgs(ID_3)\n        .returns(makeNode(ID_2));\n\n    const component = await renderComponent();\n\n    assert.lengthOf(component.contentElement.querySelectorAll('[data-element]'), 3);\n  });\n\n  it('renders flex elements', async () => {\n    getNodesByStyle.withArgs([{name: 'display', value: 'flex'}, {name: 'display', value: 'inline-flex'}]).resolves([\n      ID_1,\n      ID_2,\n      ID_3,\n    ]);\n    sinon.stub(domModel, 'nodeForId')\n        .withArgs(ID_1)\n        .returns(makeNode(ID_1))\n        .withArgs(ID_2)\n        .returns(makeNode(ID_2))\n        .withArgs(ID_3)\n        .returns(makeNode(ID_3));\n\n    const component = await renderComponent();\n\n    assert.lengthOf(component.contentElement.querySelectorAll('[data-element]'), 3);\n  });\n\n  it('send an event when an element overlay is toggled', async () => {\n    getNodesByStyle\n        .withArgs([\n          {name: 'display', value: 'grid'}, {name: 'display', value: 'inline-grid'},\n          {name: 'display', value: 'masonry'}, {name: 'display', value: 'inline-masonry'}\n        ])\n        .resolves([\n          ID_1,\n        ]);\n    sinon.stub(domModel, 'nodeForId').withArgs(ID_1).returns(makeNode(ID_1));\n    const highlightGrid = sinon.spy(overlayModel, 'highlightGridInPersistentOverlay');\n\n    const component = await renderComponent();\n\n    const input = component.contentElement.querySelector('[data-element]');\n    assert.instanceOf(input, UI.UIUtils.CheckboxLabel);\n    input.click();\n    assert.isTrue(highlightGrid.calledOnceWith(ID_1));\n  });\n\n  it('send an event when an element’s Show element button is pressed', async () => {\n    getNodesByStyle\n        .withArgs([\n          {name: 'display', value: 'grid'}, {name: 'display', value: 'inline-grid'},\n          {name: 'display', value: 'masonry'}, {name: 'display', value: 'inline-masonry'}\n        ])\n        .resolves([\n          ID_1,\n        ]);\n    const node = makeNode(ID_1);\n    sinon.stub(domModel, 'nodeForId').withArgs(ID_1).returns(node);\n    const reveal = sinon.stub(Common.Revealer.RevealerRegistry.prototype, 'reveal').resolves();\n\n    const component = await renderComponent();\n\n    const button = component.contentElement.querySelector('.show-element');\n    assert.instanceOf(button, HTMLElement);\n    button.click();\n    assert.isTrue(reveal.calledOnceWith(node, false));\n  });\n\n  it('expands/collapses <details> using ArrowLeft/ArrowRight keys', async () => {\n    const component = await renderComponent();\n    const details = component.contentElement.querySelector('details');\n    assert.instanceOf(details, HTMLDetailsElement);\n    const summary = details.querySelector('summary');\n    assert.instanceOf(summary, HTMLElement);\n    assert(details.open, 'The first details were not expanded by default');\n    summary.dispatchEvent(new KeyboardEvent('keydown', {bubbles: true, cancelable: true, key: 'ArrowLeft'}));\n    assert.isNotOk(details.open, 'The details were not collapsed after sending ArrowLeft');\n    summary.dispatchEvent(new KeyboardEvent('keydown', {bubbles: true, cancelable: true, key: 'ArrowRight'}));\n    assert(details.open, 'The details were not expanded after sending ArrowRight');\n  });\n\n  const updatesUiOnEvent = <T extends keyof SDK.OverlayModel.EventTypes>(\n      event: Platform.TypeScriptUtilities.NoUnion<T>, inScope: boolean) => async () => {\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n    const renderSpy = sinon.spy(Elements.LayoutPane.LayoutPane.prototype, 'requestUpdate');\n    await renderComponent();\n\n    renderSpy.resetHistory();\n    overlayModel.dispatchEventToListeners(\n        event,\n        ...[{nodeId: 42, enabled: true}] as unknown as\n            Common.EventTarget.EventPayloadToRestParameters<SDK.OverlayModel.EventTypes, T>);\n    assert.strictEqual(renderSpy.called, inScope);\n  };\n\n  it('updates UI on in scope grid overlay update event',\n     updatesUiOnEvent(SDK.OverlayModel.Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED, true));\n  it('does not update UI on out of scope grid overlay update event',\n     updatesUiOnEvent(SDK.OverlayModel.Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED, false));\n  it('updates UI on in scope flex overlay update event',\n     updatesUiOnEvent(SDK.OverlayModel.Events.PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED, true));\n  it('does not update UI on out of scope flex overlay update event',\n     updatesUiOnEvent(SDK.OverlayModel.Events.PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED, false));\n});\n"]}