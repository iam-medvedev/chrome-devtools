{"version":3,"file":"CSSQuery.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/CSSQuery.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAC7B,2DAA2D;AAE3D,OAAO,KAAK,EAAE,MAAM,8BAA8B,CAAC;AACnD,OAAO,KAAK,GAAG,MAAM,wBAAwB,CAAC;AAC9C,OAAO,KAAK,aAAa,MAAM,8CAA8C,CAAC;AAE9E,OAAO,cAAc,MAAM,mBAAmB,CAAC;AAE/C,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,GAAG,GAAG,CAAC;AAU3B,MAAM,OAAO,QAAS,SAAQ,WAAW;IAE9B,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IACrD,YAAY,GAAG,EAAE,CAAC;IAClB,UAAU,CAAU;IACpB,UAAU,GAAG,EAAE,CAAC;IAChB,iBAAiB,CAA0B;IAC3C,aAAa,CAAU;IAEvB,IAAI,IAAI,CAAC,IAAkB;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,MAAM,YAAY,GAAG,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC3C,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC;SAC1C,CAAC,CAAC;QAEH,qDAAqD;QACrD,mBAAmB;QACnB,MAAM,SAAS,GAAG,IAAI,CAAA;wCACc,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,UAAU;KAC5E,CAAC;QAEF,MAAM,CAAC,IAAI,CAAA;iBACE,cAAc;iBACd,EAAE,CAAC,qBAAqB;qBACpB,YAAY,UACrB,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;;YAEjF,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAA,SAAS,IAAI,CAAC,YAAY,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO;YAC/E,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAA,SAAS,IAAI,CAAC,UAAU,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO;YAC3E,SAAS;eACN,EACP,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAChC,kBAAkB;IACpB,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport cssQueryStyles from './cssQuery.css.js';\n\nconst {render, html} = Lit;\n\nexport interface CSSQueryData {\n  queryPrefix: string;\n  queryName?: string;\n  queryText: string;\n  onQueryTextClick?: (event: Event) => void;\n  jslogContext: string;\n}\n\nexport class CSSQuery extends HTMLElement {\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #queryPrefix = '';\n  #queryName?: string;\n  #queryText = '';\n  #onQueryTextClick?: (event: Event) => void;\n  #jslogContext?: string;\n\n  set data(data: CSSQueryData) {\n    this.#queryPrefix = data.queryPrefix;\n    this.#queryName = data.queryName;\n    this.#queryText = data.queryText;\n    this.#onQueryTextClick = data.onQueryTextClick;\n    this.#jslogContext = data.jslogContext;\n    this.#render();\n  }\n\n  #render(): void {\n    const queryClasses = Lit.Directives.classMap({\n      query: true,\n      editable: Boolean(this.#onQueryTextClick),\n    });\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    const queryText = html`\n      <span class=\"query-text\" @click=${this.#onQueryTextClick}>${this.#queryText}</span>\n    `;\n\n    render(html`\n        <style>${cssQueryStyles}</style>\n        <style>${UI.inspectorCommonStyles}</style>\n        <div class=${queryClasses} jslog=${\n            VisualLogging.cssRuleHeader(this.#jslogContext).track({click:true, change: true})}>\n          <slot name=\"indent\"></slot>\n          ${this.#queryPrefix ? html`<span>${this.#queryPrefix + ' '}</span>` : Lit.nothing}\n          ${this.#queryName ? html`<span>${this.#queryName + ' '}</span>` : Lit.nothing}\n          ${queryText} {\n        </div>`,\n        this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-css-query', CSSQuery);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-css-query': CSSQuery;\n  }\n}\n"]}