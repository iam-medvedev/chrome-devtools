{"version":3,"file":"CSSHintDetailsView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/CSSHintDetailsView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,8BAA8B,CAAC;AAEtC,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AACnD,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,MAAM,EAAC,MAAM,wBAAwB,CAAC;AAEhE,OAAO,2BAA2B,MAAM,6BAA6B,CAAC;AAEtE,4EAA4E;AAC5E,MAAM,wBAAwB,GAAG,IAAI,aAAa,EAAE,CAAC;AACrD,wBAAwB,CAAC,WAAW,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC;AAE7E,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,SAAS,EAAE,YAAY;CACf,CAAC;AACX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,kDAAkD,EAAE,SAAS,CAAC,CAAC;AACxG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAQtE,MAAM,OAAO,kBAAmB,SAAQ,WAAW;IACtC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAC5C,cAAc,CAAO;IAE9B,YAAY,aAAmB;QAC3B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,wBAAwB,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,OAAO;QACL,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QACpD,mBAAmB;QACnB,MAAM,CAAC,IAAI,CAAA;;;cAGH,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;;YAEzD,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAA;;oBAE1C,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;oBAClE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAA;qDACsB,IAAI;4BAC7B,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;;mBAExC,CAAA,CAAC,CAAC,EAAE;;WAEZ,CAAC,CAAC,CAAC,EAAE;;OAET,EAAE,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QACH,kBAAkB;IACpB,CAAC;CACJ;AAED,cAAc,CAAC,MAAM,CAAC,gCAAgC,EAAE,kBAAkB,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/legacy/legacy.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport {Directives, html, render} from '../../../ui/lit/lit.js';\n\nimport cssHintDetailsViewStylesRaw from './cssHintDetailsView.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst cssHintDetailsViewStyles = new CSSStyleSheet();\ncssHintDetailsViewStyles.replaceSync(cssHintDetailsViewStylesRaw.cssContent);\n\nconst UIStrings = {\n  /**\n   *@description Text for button that redirects to CSS property documentation.\n   */\n  learnMore: 'Learn More',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/components/CSSHintDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface Hint {\n  getMessage(): string;\n  getPossibleFixMessage(): string|null;\n  getLearnMoreLink(): string|undefined;\n}\n\nexport class CSSHintDetailsView extends HTMLElement {\n    readonly #shadow = this.attachShadow({mode: 'open'});\n    readonly #authoringHint: Hint;\n\n    constructor(authoringHint: Hint) {\n        super();\n        this.#authoringHint = authoringHint;\n        this.#shadow.adoptedStyleSheets = [cssHintDetailsViewStyles];\n        this.#render();\n    }\n\n    #render(): void {\n      const link = this.#authoringHint.getLearnMoreLink();\n      // clang-format off\n      render(html`\n        <div class=\"hint-popup-wrapper\">\n          <div class=\"hint-popup-reason\">\n            ${Directives.unsafeHTML(this.#authoringHint.getMessage())}\n          </div>\n          ${this.#authoringHint.getPossibleFixMessage() ? html`\n              <div class=\"hint-popup-possible-fix\">\n                  ${Directives.unsafeHTML(this.#authoringHint.getPossibleFixMessage())}\n                  ${link ? html`\n                      <x-link id=\"learn-more\" href=${link} class=\"clickable underlined unbreakable-text\">\n                          ${i18nString(UIStrings.learnMore)}\n                      </x-link>\n                  `: ''}\n              </div>\n          ` : ''}\n        </div>\n      `, this.#shadow, {\n        host: this,\n      });\n      // clang-format on\n    }\n}\n\ncustomElements.define('devtools-css-hint-details-view', CSSHintDetailsView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-css-hint-details-view': CSSHintDetailsView;\n  }\n}\n"]}