{"version":3,"file":"ElementsTreeOutlineRenderer.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ElementsTreeOutlineRenderer.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAEH,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAG7C,OAAO,EAAC,mBAAmB,EAAC,MAAM,0BAA0B,CAAC;AAE7D,IAAI,gBAA0B,CAAC;AAE/B,MAAM,OAAO,QAAQ;IACnB,MAAM,CAAC,QAAQ,CAAC,OAEZ,EAAC,QAAQ,EAAE,IAAI,EAAC;QAClB,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,gBAAgB,IAAI,QAAQ,EAAE,CAAC;YAClC,gBAAgB,GAAG,IAAI,QAAQ,EAAE,CAAC;QACpC,CAAC;QACD,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,MAAc,EAAE,OAA4B;QAIvD,IAAI,IAAI,GAA4D,IAAI,CAAC;QAEzE,IAAI,MAAM,YAAY,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YAC3C,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC;QAClB,CAAC;aAAM,IAAI,MAAM,YAAY,GAAG,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;YAC1D,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;QACzC,CAAC;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,8DAA8D;YAC9D,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,WAAW,GAAG,IAAI,mBAAmB;QACvC,sBAAsB,CAAC,KAAK,EAAE,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACrF,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;QAC/B,WAAW,CAAC,kBAAkB,EAAE,CAAC;QACjC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC7B,+CAA+C;QAC/C,WAAW,CAAC,OAAO,CAAC,kBAAkB,GAAG,WAAW,CAAC,UAAU,EAAE,CAAC;QAClE,WAAW,CAAC,+BAA+B,CAAC,WAAW,CAAC,IAAI,EAAE,sBAAsB,CAAC,IAAI,CAAC,CAAC;QAC3F,IAAI,OAAO,EAAE,MAAM,EAAE,CAAC;YACpB,WAAW,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,CAAC;QACrC,CAAC;QACD,OAAO,EAAC,IAAI,EAAE,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,WAAW,EAAC,CAAC;IACxD,CAAC;CACF","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as UI from '../../ui/legacy/legacy.js';\n\nimport {ElementsTreeOutline} from './ElementsTreeOutline.js';\n\nlet rendererInstance: Renderer;\n\nexport class Renderer implements UI.UIUtils.Renderer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): Renderer {\n    const {forceNew} = opts;\n    if (!rendererInstance || forceNew) {\n      rendererInstance = new Renderer();\n    }\n    return rendererInstance;\n  }\n\n  async render(object: Object, options?: UI.UIUtils.Options): Promise<{\n    node: Node,\n    tree: UI.TreeOutline.TreeOutline|null,\n  }|null> {\n    let node: SDK.DOMModel.DOMNode|(SDK.DOMModel.DOMNode | null)|null = null;\n\n    if (object instanceof SDK.DOMModel.DOMNode) {\n      node = (object);\n    } else if (object instanceof SDK.DOMModel.DeferredDOMNode) {\n      node = await (object).resolvePromise();\n    }\n\n    if (!node) {\n      // Can't render not-a-node, or couldn't resolve deferred node.\n      return null;\n    }\n\n    const treeOutline = new ElementsTreeOutline(\n        /* omitRootDOMNode: */ false, /* selectEnabled: */ true, /* hideGutter: */ true);\n    treeOutline.rootDOMNode = node;\n    treeOutline.deindentSingleNode();\n    treeOutline.setVisible(true);\n    // @ts-expect-error used in console_test_runner\n    treeOutline.element.treeElementForTest = treeOutline.firstChild();\n    treeOutline.setShowSelectionOnKeyboardFocus(/* show: */ true, /* preventTabOrder: */ true);\n    if (options?.expand) {\n      treeOutline.firstChild()?.expand();\n    }\n    return {node: treeOutline.element, tree: treeOutline};\n  }\n}\n"]}