{"version":3,"file":"ElementsTreeElement.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ElementsTreeElement.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as UI from '../../../front_end/ui/legacy/legacy.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {createTarget, registerActions, updateHostConfig} from '../../testing/EnvironmentHelpers.js';\nimport {spyCall} from '../../testing/ExpectStubCall.js';\nimport {describeWithMockConnection, setMockConnectionResponseHandler} from '../../testing/MockConnection.js';\n\nimport * as Elements from './elements.js';\n\ndescribe('ElementsTreeElement', () => {\n  describe('convertUnicodeCharsToHTMLEntities', () => {\n    it('converts unicode characters to HTML entities', () => {\n      const input = '\\u2002\\u2002This string has spaces\\xA0\\xA0and other\\u202Aunicode characters\\u200A.';\n      const expected = {\n        text: '&ensp;&ensp;This string has spaces&nbsp;&nbsp;and other&#x202A;unicode characters&hairsp;.',\n        entityRanges: [\n          new TextUtils.TextRange.SourceRange(0, 6),\n          new TextUtils.TextRange.SourceRange(6, 6),\n          new TextUtils.TextRange.SourceRange(34, 6),\n          new TextUtils.TextRange.SourceRange(40, 6),\n          new TextUtils.TextRange.SourceRange(55, 8),\n          new TextUtils.TextRange.SourceRange(81, 8),\n        ],\n      };\n\n      const result = Elements.ElementsTreeElement.convertUnicodeCharsToHTMLEntities(input);\n      assert.strictEqual(result.text, expected.text);\n      assert.deepEqual(result.entityRanges, expected.entityRanges);\n    });\n\n    it('returns the original string if no unicode characters are present', () => {\n      const input = 'ThisStringHasNoWhitespace';\n      const expected = {\n        text: 'ThisStringHasNoWhitespace',\n        entityRanges: [],\n      };\n\n      const result = Elements.ElementsTreeElement.convertUnicodeCharsToHTMLEntities(input);\n      assert.strictEqual(result.text, expected.text);\n      assert.deepEqual(result.entityRanges, expected.entityRanges);\n    });\n  });\n});\n\ndescribeWithMockConnection('ElementsTreeElement', () => {\n  let nodeIdCounter = 0;\n  function getTreeElement(model: SDK.DOMModel.DOMModel, treeOutline: Elements.ElementsTreeOutline.ElementsTreeOutline) {\n    const node = new SDK.DOMModel.DOMNode(model);\n    node.id = nodeIdCounter++ as Protocol.DOM.NodeId;\n    model.registerNode(node);\n    const treeElement = new Elements.ElementsTreeElement.ElementsTreeElement(node);\n    node.setAttributesPayload(['popover', 'manual']);\n    treeOutline.bindTreeElement(treeElement);\n    return treeElement;\n  }\n\n  async function getAdorner(treeElement: Elements.ElementsTreeElement.ElementsTreeElement) {\n    await treeElement.updateStyleAdorners();\n    const {tagTypeContext} = treeElement;\n    const adorners = 'adorners' in tagTypeContext ? tagTypeContext.adorners : undefined;\n    assert.exists(adorners);\n    assert.lengthOf(adorners, 1);\n    const {value} = adorners.values().next();\n    assert.exists(value);\n    assert.strictEqual(value.name, 'popover');\n    return value;\n  }\n\n  beforeEach(() => {\n    updateHostConfig({devToolsAllowPopoverForcing: {enabled: true}});\n    setMockConnectionResponseHandler('CSS.enable', () => ({}));\n    setMockConnectionResponseHandler('CSS.getComputedStyleForNode', () => ({}));\n  });\n  it('popoverAdorner supports force-opening popovers', async () => {\n    const model = new SDK.DOMModel.DOMModel(createTarget());\n\n    const responseHandlerStub = sinon.stub<[Protocol.DOM.ForceShowPopoverRequest]>();\n    setMockConnectionResponseHandler('DOM.forceShowPopover', responseHandlerStub);\n\n    const treeElement = getTreeElement(model, new Elements.ElementsTreeOutline.ElementsTreeOutline());\n    const adorner = await getAdorner(treeElement);\n    adorner.dispatchEvent(new MouseEvent('click'));\n    sinon.assert.calledOnce(responseHandlerStub);\n    assert.isTrue(responseHandlerStub.args[0][0].enable);\n    assert.strictEqual(responseHandlerStub.args[0][0].nodeId, treeElement.node().id);\n\n    adorner.dispatchEvent(new MouseEvent('click'));\n    sinon.assert.calledTwice(responseHandlerStub);\n    assert.isFalse(responseHandlerStub.args[1][0].enable);\n    assert.strictEqual(responseHandlerStub.args[1][0].nodeId, treeElement.node().id);\n  });\n\n  it('popoverAdorner gets toggled off when a popover is force-closed by another forceShowPopover call', async () => {\n    const model = new SDK.DOMModel.DOMModel(createTarget());\n    const treeOutline = new Elements.ElementsTreeOutline.ElementsTreeOutline();\n    const treeElement1 = getTreeElement(model, treeOutline);\n    const treeElement2 = getTreeElement(model, treeOutline);\n\n    const adorner1 = await getAdorner(treeElement1);\n    const adorner2 = await getAdorner(treeElement2);\n\n    setMockConnectionResponseHandler(\n        'DOM.forceShowPopover', () => ({nodeIds: adorner2.isActive() ? [treeElement2.node().id] : []}));\n\n    adorner2.dispatchEvent(new MouseEvent('click'));\n    assert.isTrue(adorner2.isActive());\n\n    const toggleStub = spyCall(adorner2, 'toggle');\n\n    adorner1.dispatchEvent(new MouseEvent('click'));\n    await toggleStub;\n    assert.isTrue(adorner1.isActive());\n    assert.isFalse(adorner2.isActive());\n  });\n});\n\ndescribeWithMockConnection('ElementsTreeElement ', () => {\n  const DEFAULT_LAYOUT_PROPERTIES = {\n    isFlex: false,\n    isGrid: false,\n    isSubgrid: false,\n    isMasonry: false,\n    isContainer: false,\n    hasScroll: false,\n  };\n\n  beforeEach(() => {\n    updateHostConfig({\n      devToolsAiSubmenuPrompts: {\n        enabled: true,\n      },\n    });\n\n    registerActions([{\n      actionId: 'freestyler.element-panel-context',\n      title: () => 'Debug with AI' as Platform.UIString.LocalizedString,\n      category: UI.ActionRegistration.ActionCategory.GLOBAL,\n    }]);\n  });\n\n  async function getContextMenuForElementWithLayoutProperties(layoutProperties: SDK.CSSModel.LayoutProperties|null):\n      Promise<UI.ContextMenu.ContextMenu> {\n    const target = createTarget();\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    const cssModel = target.model(SDK.CSSModel.CSSModel);\n    assert.exists(domModel);\n    assert.exists(cssModel);\n\n    sinon.stub(cssModel, 'getLayoutPropertiesFromComputedStyle').resolves(layoutProperties);\n\n    const node = new SDK.DOMModel.DOMNode(domModel);\n    const treeOutline = new Elements.ElementsTreeOutline.ElementsTreeOutline();\n    const treeElement = new Elements.ElementsTreeElement.ElementsTreeElement(node);\n    treeElement.treeOutline = treeOutline;\n\n    const event = new Event('contextmenu');\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    await treeElement.populateNodeContextMenu(contextMenu);\n    return contextMenu;\n  }\n\n  it('shows default submenu items', async () => {\n    const contextMenu = await getContextMenuForElementWithLayoutProperties(null);\n    const debugWithAiItem = contextMenu.buildDescriptor().subItems?.find(item => item.label === 'Debug with AI');\n    assert.exists(debugWithAiItem);\n    assert.deepEqual(\n        debugWithAiItem?.subItems?.map(item => item.label), ['Start a chat', 'Assess visibility', 'Center element']);\n  });\n\n  it('shows flexbox submenu items', async () => {\n    const contextMenu =\n        await getContextMenuForElementWithLayoutProperties({...DEFAULT_LAYOUT_PROPERTIES, isFlex: true});\n    const debugWithAiItem = contextMenu.buildDescriptor().subItems?.find(item => item.label === 'Debug with AI');\n    assert.exists(debugWithAiItem);\n    assert.deepEqual(\n        debugWithAiItem?.subItems?.map(item => item.label),\n        ['Start a chat', 'Wrap these items', 'Distribute items evenly', 'Explain flexbox']);\n  });\n\n  it('shows grid submenu items', async () => {\n    const contextMenu =\n        await getContextMenuForElementWithLayoutProperties({...DEFAULT_LAYOUT_PROPERTIES, isGrid: true});\n    const debugWithAiItem = contextMenu.buildDescriptor().subItems?.find(item => item.label === 'Debug with AI');\n    assert.exists(debugWithAiItem);\n    assert.deepEqual(\n        debugWithAiItem?.subItems?.map(item => item.label),\n        ['Start a chat', 'Align items', 'Add padding', 'Explain grid layout']);\n  });\n\n  it('shows subgrid submenu items', async () => {\n    const contextMenu = await getContextMenuForElementWithLayoutProperties(\n        {...DEFAULT_LAYOUT_PROPERTIES, isGrid: true, isSubgrid: true});\n    const debugWithAiItem = contextMenu.buildDescriptor().subItems?.find(item => item.label === 'Debug with AI');\n    assert.exists(debugWithAiItem);\n    assert.deepEqual(\n        debugWithAiItem?.subItems?.map(item => item.label),\n        ['Start a chat', 'Find grid definition', 'Change parent properties', 'Explain subgrids']);\n  });\n\n  it('shows scroll submenu items', async () => {\n    const contextMenu =\n        await getContextMenuForElementWithLayoutProperties({...DEFAULT_LAYOUT_PROPERTIES, hasScroll: true});\n    const debugWithAiItem = contextMenu.buildDescriptor().subItems?.find(item => item.label === 'Debug with AI');\n    assert.exists(debugWithAiItem);\n    assert.deepEqual(\n        debugWithAiItem?.subItems?.map(item => item.label),\n        ['Start a chat', 'Remove scrollbars', 'Style scrollbars', 'Explain scrollbars']);\n  });\n\n  it('shows container submenu items', async () => {\n    const contextMenu =\n        await getContextMenuForElementWithLayoutProperties({...DEFAULT_LAYOUT_PROPERTIES, isContainer: true});\n    const debugWithAiItem = contextMenu.buildDescriptor().subItems?.find(item => item.label === 'Debug with AI');\n    assert.exists(debugWithAiItem);\n    assert.deepEqual(\n        debugWithAiItem?.subItems?.map(item => item.label),\n        ['Start a chat', 'Explain container queries', 'Explain container types', 'Explain container context']);\n  });\n});\n\ndescribeWithMockConnection('ElementsTreeElement highlighting', () => {\n  let domModel: SDK.DOMModel.DOMModel;\n  let treeOutline: Elements.ElementsTreeOutline.ElementsTreeOutline;\n  let containerNode: SDK.DOMModel.DOMNode;\n  let attrTestNode: SDK.DOMModel.DOMNode;\n  let childTestNode: SDK.DOMModel.DOMNode;\n  let textTestNode: SDK.DOMModel.DOMNode;\n  let attrTestTreeElement: Elements.ElementsTreeElement.ElementsTreeElement;\n  let childTestTreeElement: Elements.ElementsTreeElement.ElementsTreeElement;\n  let textTestTreeElement: Elements.ElementsTreeElement.ElementsTreeElement;\n  let nodeId = 0;\n\n  function createDOMNodePayload(name: string, attrs: Record<string, string> = {}): Protocol.DOM.Node {\n    const attrList: string[] = [];\n    for (const [key, value] of Object.entries(attrs)) {\n      attrList.push(key, value);\n    }\n    return {\n      nodeId: ++nodeId as Protocol.DOM.NodeId,\n      backendNodeId: ++nodeId as Protocol.DOM.BackendNodeId,\n      nodeType: Node.ELEMENT_NODE,\n      nodeName: name.toUpperCase(),\n      localName: name,\n      nodeValue: '',\n      attributes: attrList,\n      childNodeCount: 0,\n    };\n  }\n\n  function createTextNodePayload(text: string): Protocol.DOM.Node {\n    return {\n      nodeId: ++nodeId as Protocol.DOM.NodeId,\n      backendNodeId: ++nodeId as Protocol.DOM.BackendNodeId,\n      nodeType: Node.TEXT_NODE,\n      nodeName: '#text',\n      localName: '',\n      nodeValue: text,\n      childNodeCount: 0,\n    };\n  }\n\n  beforeEach(async () => {\n    const target = createTarget();\n    domModel = target.model(SDK.DOMModel.DOMModel)!;\n\n    const containerPayload = createDOMNodePayload('div', {id: 'container'});\n    const attrTestPayload = createDOMNodePayload('div', {id: 'attrTest', attrFoo: 'foo'});\n    const childTestPayload = createDOMNodePayload('div', {id: 'childTest'});\n    const textTestPayload = createDOMNodePayload('div', {id: 'textTest'});\n\n    containerNode = SDK.DOMModel.DOMNode.create(domModel, null, false, containerPayload);\n    containerNode.setChildrenPayload([attrTestPayload, childTestPayload, textTestPayload]);\n\n    attrTestNode = containerNode.children()![0];\n    childTestNode = containerNode.children()![1];\n    textTestNode = containerNode.children()![2];\n\n    treeOutline = new Elements.ElementsTreeOutline.ElementsTreeOutline();\n    treeOutline.wireToDOMModel(domModel);\n\n    const containerTreeElement = new Elements.ElementsTreeElement.ElementsTreeElement(containerNode);\n    attrTestTreeElement = new Elements.ElementsTreeElement.ElementsTreeElement(attrTestNode);\n    containerTreeElement.appendChild(attrTestTreeElement);\n    childTestTreeElement = new Elements.ElementsTreeElement.ElementsTreeElement(childTestNode);\n    containerTreeElement.appendChild(childTestTreeElement);\n    textTestTreeElement = new Elements.ElementsTreeElement.ElementsTreeElement(textTestNode);\n    containerTreeElement.appendChild(textTestTreeElement);\n    treeOutline.appendChild(containerTreeElement);\n\n    treeOutline.setVisible(true);\n    renderElementIntoDOM(treeOutline.element);\n    containerTreeElement.expand();\n  });\n\n  afterEach(() => {\n    treeOutline.removeChildren();\n    treeOutline.setVisible(false);\n  });\n\n  let stub: sinon.SinonStub<[], void>|undefined;\n  async function waitForHighlights(element: Elements.ElementsTreeElement.ElementsTreeElement) {\n    stub?.restore();\n    return await new Promise(resolve => {\n      stub = sinon.stub(treeOutline, 'updateModifiedNodes');\n      stub.callsFake(() => {\n        stub?.wrappedMethod.call(treeOutline);\n        resolve(element.listItemElement.querySelectorAll('.dom-update-highlight').length);\n      });\n    });\n  }\n\n  it('highlights attribute value change', async () => {\n    const highlights = waitForHighlights(attrTestTreeElement);\n    domModel.attributeModified(attrTestNode.id, 'attrFoo', 'bar');\n    assert.strictEqual(await highlights, 1);\n  });\n\n  it('highlights attribute set to empty', async () => {\n    const highlights = waitForHighlights(attrTestTreeElement);\n    domModel.attributeModified(attrTestNode.id, 'attrFoo', '');\n    assert.strictEqual(await highlights, 1);\n  });\n\n  it('highlights new attribute', async () => {\n    const highlights = waitForHighlights(attrTestTreeElement);\n    domModel.attributeModified(attrTestNode.id, 'attrBar', 'bar');\n    assert.strictEqual(await highlights, 1);\n  });\n\n  it('highlights attribute removal', async () => {\n    const highlights = waitForHighlights(attrTestTreeElement);\n    domModel.attributeRemoved(attrTestNode.id, 'attrFoo');\n    assert.strictEqual(await highlights, 1);\n  });\n\n  it('highlights appending child to an empty node', async () => {\n    const highlights = waitForHighlights(childTestTreeElement);\n    const child1Payload = createDOMNodePayload('span', {id: 'child1'});\n    const child1Node = SDK.DOMModel.DOMNode.create(domModel, childTestNode.ownerDocument, false, child1Payload);\n    child1Node.parentNode = childTestNode;\n    domModel.dispatchEventToListeners(SDK.DOMModel.Events.NodeInserted, child1Node);\n    assert.strictEqual(await highlights, 1);\n  });\n\n  it('highlights appending child to an expanded node', async () => {\n    childTestTreeElement.expand();\n    const child1Payload = createDOMNodePayload('span', {id: 'child1'});\n    const child1Node = SDK.DOMModel.DOMNode.create(domModel, childTestNode.ownerDocument, false, child1Payload);\n    child1Node.parentNode = childTestNode;\n    childTestNode.setChildrenPayload([child1Payload]);\n    const child1TreeElement = new Elements.ElementsTreeElement.ElementsTreeElement(child1Node);\n    childTestTreeElement.appendChild(child1TreeElement);\n\n    const highlights = waitForHighlights(childTestTreeElement);\n    const child2Payload = createDOMNodePayload('span', {id: 'child2'});\n    const child2Node = SDK.DOMModel.DOMNode.create(domModel, childTestNode.ownerDocument, false, child2Payload);\n    child2Node.parentNode = childTestNode;\n    domModel.dispatchEventToListeners(SDK.DOMModel.Events.NodeInserted, child2Node);\n    assert.strictEqual(await highlights, 1);\n  });\n\n  it('highlights child removal', async () => {\n    const child1Payload = createDOMNodePayload('span', {id: 'child1'});\n    const child1Node = SDK.DOMModel.DOMNode.create(domModel, childTestNode.ownerDocument, false, child1Payload);\n    child1Node.parentNode = childTestNode;\n    childTestNode.setChildrenPayload([child1Payload]);\n    const child1TreeElement = new Elements.ElementsTreeElement.ElementsTreeElement(child1Node);\n    childTestTreeElement.appendChild(child1TreeElement);\n\n    const highlights = waitForHighlights(childTestTreeElement);\n    domModel.dispatchEventToListeners(SDK.DOMModel.Events.NodeRemoved, {node: child1Node, parent: childTestNode});\n    assert.strictEqual(await highlights, 1);\n  });\n\n  it('highlights setting text content', async () => {\n    const highlights = waitForHighlights(textTestTreeElement);\n    const textNodePayload = createTextNodePayload('Text');\n    const textNode = SDK.DOMModel.DOMNode.create(domModel, textTestNode.ownerDocument, false, textNodePayload);\n    textNode.parentNode = textTestNode;\n    domModel.dispatchEventToListeners(SDK.DOMModel.Events.NodeInserted, textNode);\n    assert.strictEqual(await highlights, 1);\n  });\n\n  it('highlights changing text node content', async () => {\n    const textNodePayload = createTextNodePayload('Text');\n    const textNode = SDK.DOMModel.DOMNode.create(domModel, textTestNode.ownerDocument, false, textNodePayload);\n    textTestNode.setChildrenPayload([textNodePayload]);\n    textNode.parentNode = textTestNode;\n    const textNodeTreeElement = new Elements.ElementsTreeElement.ElementsTreeElement(textNode);\n    textTestTreeElement.appendChild(textNodeTreeElement);\n\n    const highlights = waitForHighlights(textTestTreeElement);\n    domModel.characterDataModified(textNode.id, 'Changed');\n    assert.strictEqual(await highlights, 2);\n  });\n\n  it('highlights removing a text node', async () => {\n    const textNodePayload = createTextNodePayload('Text');\n    const textNode = SDK.DOMModel.DOMNode.create(domModel, textTestNode.ownerDocument, false, textNodePayload);\n    textNode.parentNode = textTestNode;\n    textTestNode.setChildrenPayload([textNodePayload]);\n    const textNodeTreeElement = new Elements.ElementsTreeElement.ElementsTreeElement(textNode);\n    textTestTreeElement.appendChild(textNodeTreeElement);\n\n    const highlights = waitForHighlights(textTestTreeElement);\n    domModel.childNodeRemoved(textTestNode.id, textNode.id);\n    assert.strictEqual(await highlights, 1);\n  });\n\n  it('highlights clearing text node content', async () => {\n    const textNodePayload = createTextNodePayload('Text');\n    const textNode = SDK.DOMModel.DOMNode.create(domModel, textTestNode.ownerDocument, false, textNodePayload);\n    textTestNode.setChildrenPayload([textNodePayload]);\n    textNode.parentNode = textTestNode;\n    const textNodeTreeElement = new Elements.ElementsTreeElement.ElementsTreeElement(textNode);\n    textTestTreeElement.appendChild(textNodeTreeElement);\n\n    const highlights = waitForHighlights(textTestTreeElement);\n    domModel.characterDataModified(textNode.id, '');\n    assert.strictEqual(await highlights, 2);\n  });\n\n  it('does not highlight when panel is hidden', async () => {\n    treeOutline.setVisible(false);\n    attrTestNode.setAttribute('attrFoo', 'bar');\n    let highlights = waitForHighlights(attrTestTreeElement);\n    domModel.dispatchEventToListeners(SDK.DOMModel.Events.AttrModified, {node: attrTestNode, name: 'attrFoo'});\n    assert.strictEqual(await highlights, 0);\n\n    treeOutline.setVisible(true);\n    highlights = waitForHighlights(attrTestTreeElement);\n    attrTestNode.setAttribute('attrFoo', 'baz');\n    domModel.dispatchEventToListeners(SDK.DOMModel.Events.AttrModified, {node: attrTestNode, name: 'attrFoo'});\n    assert.strictEqual(await highlights, 1);\n  });\n});\n"]}