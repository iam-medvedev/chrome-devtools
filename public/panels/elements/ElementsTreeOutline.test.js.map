{"version":3,"file":"ElementsTreeOutline.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ElementsTreeOutline.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,OAAO,EAAC,YAAY,EAAC,MAAM,qCAAqC,CAAC;AACjE,OAAO,EACL,0BAA0B,GAC3B,MAAM,iCAAiC,CAAC;AAEzC,OAAO,KAAK,QAAQ,MAAM,eAAe,CAAC;AAE1C,0BAA0B,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACrD,IAAI,MAAyB,CAAC;IAC9B,IAAI,KAA4B,CAAC;IACjC,IAAI,WAA6D,CAAC;IAElE,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,GAAG,YAAY,EAAE,CAAC;QAExB,WAAW,GAAG,IAAI,QAAQ,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAC/F,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAA0B,CAAC,CAAC;QAEzF,MAAM,oBAAoB,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACjE,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;QACpC,KAAK,GAAG,oBAAoB,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,MAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;YACjE,MAAM,EAAE,CAAwB;YAChC,aAAa,EAAE,CAA+B;YAC9C,QAAQ,EAAE,IAAI,CAAC,YAAY;YAC3B,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,QAAQ;YACnB,SAAS,EAAE,WAAW;YACtB,cAAc,EAAE,CAAC;YACjB,cAAc,EAAE,CAAC;oBACf,QAAQ,EAAE,CAAwB;oBAClC,MAAM,EAAE,CAAwB;oBAChC,aAAa,EAAE,CAA+B;oBAC9C,QAAQ,EAAE,IAAI,CAAC,YAAY;oBAC3B,UAAU,qDAAmC;oBAC7C,gBAAgB,EAAE,aAAa;oBAC/B,QAAQ,EAAE,aAAa;oBACvB,SAAS,EAAE,aAAa;oBACxB,SAAS,EAAE,GAAG;iBACf,CAAC;SACH,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAE7B,MAAM,aAAa,GAAG,UAAU,CAAC,sBAAsB,EAAE,CAAC;QAC1D,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAEhC,WAAW,CAAC,WAAW,GAAG,UAAU,CAAC;QACrC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC,aAAc,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;QACzD,MAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;YACjE,MAAM,EAAE,CAAwB;YAChC,aAAa,EAAE,CAA+B;YAC9C,QAAQ,EAAE,IAAI,CAAC,YAAY;YAC3B,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,QAAQ;YACnB,SAAS,EAAE,UAAU;YACrB,cAAc,EAAE,CAAC;YACjB,cAAc,EAAE,CAAC;oBACf,QAAQ,EAAE,CAAwB;oBAClC,MAAM,EAAE,CAAwB;oBAChC,aAAa,EAAE,CAA+B;oBAC9C,QAAQ,EAAE,IAAI,CAAC,YAAY;oBAC3B,UAAU,wDAAoC;oBAC9C,gBAAgB,EAAE,eAAe;oBACjC,QAAQ,EAAE,eAAe;oBACzB,SAAS,EAAE,eAAe;oBAC1B,SAAS,EAAE,GAAG;iBACf,CAAC;SACH,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAE7B,MAAM,cAAc,GAAG,UAAU,CAAC,uBAAuB,EAAE,CAAC;QAC5D,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAEjC,WAAW,CAAC,WAAW,GAAG,UAAU,CAAC;QACrC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC,cAAe,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n} from '../../testing/MockConnection.js';\n\nimport * as Elements from './elements.js';\n\ndescribeWithMockConnection('ElementsTreeOutline', () => {\n  let target: SDK.Target.Target;\n  let model: SDK.DOMModel.DOMModel;\n  let treeOutline: Elements.ElementsTreeOutline.ElementsTreeOutline;\n\n  beforeEach(() => {\n    target = createTarget();\n\n    treeOutline = new Elements.ElementsTreeOutline.ElementsTreeOutline(/* omitRootDOMNode */ true);\n    treeOutline.wireToDOMModel(target.model(SDK.DOMModel.DOMModel) as SDK.DOMModel.DOMModel);\n\n    const modelBeforeAssertion = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(modelBeforeAssertion);\n    model = modelBeforeAssertion;\n  });\n\n  afterEach(() => {\n    target.dispose('NO_REASON');\n  });\n\n  it('should include the ::checkmark pseudo element', () => {\n    const optionNode = SDK.DOMModel.DOMNode.create(model, null, false, {\n      nodeId: 1 as Protocol.DOM.NodeId,\n      backendNodeId: 1 as Protocol.DOM.BackendNodeId,\n      nodeType: Node.ELEMENT_NODE,\n      nodeName: 'option',\n      localName: 'option',\n      nodeValue: 'An Option',\n      childNodeCount: 1,\n      pseudoElements: [{\n        parentId: 1 as Protocol.DOM.NodeId,\n        nodeId: 2 as Protocol.DOM.NodeId,\n        backendNodeId: 2 as Protocol.DOM.BackendNodeId,\n        nodeType: Node.ELEMENT_NODE,\n        pseudoType: Protocol.DOM.PseudoType.Checkmark,\n        pseudoIdentifier: '::checkmark',\n        nodeName: '::checkmark',\n        localName: '::checkmark',\n        nodeValue: '*',\n      }],\n    });\n    assert.isNotNull(optionNode);\n\n    const checkmarkNode = optionNode.checkmarkPseudoElement();\n    assert.isNotNull(checkmarkNode);\n\n    treeOutline.rootDOMNode = optionNode;\n    assert.isNotNull(treeOutline.findTreeElement(checkmarkNode!));\n  });\n\n  it('should include the ::picker-icon pseudo element', () => {\n    const selectNode = SDK.DOMModel.DOMNode.create(model, null, false, {\n      nodeId: 1 as Protocol.DOM.NodeId,\n      backendNodeId: 1 as Protocol.DOM.BackendNodeId,\n      nodeType: Node.ELEMENT_NODE,\n      nodeName: 'select',\n      localName: 'select',\n      nodeValue: 'A Select',\n      childNodeCount: 1,\n      pseudoElements: [{\n        parentId: 1 as Protocol.DOM.NodeId,\n        nodeId: 2 as Protocol.DOM.NodeId,\n        backendNodeId: 2 as Protocol.DOM.BackendNodeId,\n        nodeType: Node.ELEMENT_NODE,\n        pseudoType: Protocol.DOM.PseudoType.PickerIcon,\n        pseudoIdentifier: '::picker-icon',\n        nodeName: '::picker-icon',\n        localName: '::picker-icon',\n        nodeValue: '^',\n      }],\n    });\n    assert.isNotNull(selectNode);\n\n    const pickerIconNode = selectNode.pickerIconPseudoElement();\n    assert.isNotNull(pickerIconNode);\n\n    treeOutline.rootDOMNode = selectNode;\n    assert.isNotNull(treeOutline.findTreeElement(pickerIconNode!));\n  });\n});\n"]}