{"version":3,"file":"NodeStackTraceWidget.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/NodeStackTraceWidget.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\n\nimport nodeStackTraceWidgetStyles from './nodeStackTraceWidget.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Message displayed when no JavaScript stack trace is available for the DOM node in the Stack Trace widget of the Elements panel\n   */\n  noStackTraceAvailable: 'No stack trace available',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/NodeStackTraceWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ViewInput {\n  target?: SDK.Target.Target;\n  linkifier: Components.Linkifier.Linkifier;\n  options: Components.JSPresentationUtils.Options;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  const {target: sdkTarget, linkifier, options} = input;\n  // clang-format off\n  render(html`\n    <style>${nodeStackTraceWidgetStyles}</style>\n    ${target && options.stackTrace ?\n         html`<devtools-widget\n                class=\"stack-trace\"\n                .widgetConfig=${UI.Widget.widgetConfig(Components.JSPresentationUtils.StackTracePreviewContent, {target: sdkTarget, linkifier, options})}>\n              </devtools-widget>` :\n         html`<div class=\"gray-info-message\">${i18nString(UIStrings.noStackTraceAvailable)}</div>`}`,\n    target);\n  // clang-format on\n};\n\nexport class NodeStackTraceWidget extends UI.ThrottledWidget.ThrottledWidget {\n  readonly #linkifier = new Components.Linkifier.Linkifier(MaxLengthForLinks);\n  readonly #view: View;\n\n  constructor(view = DEFAULT_VIEW) {\n    super(true /* isWebComponent */);\n    this.#view = view;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n    this.update();\n  }\n\n  override willHide(): void {\n    UI.Context.Context.instance().removeFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n  }\n\n  override async doUpdate(): Promise<void> {\n    const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n\n    const stackTrace = await node?.creationStackTrace() ?? undefined;\n    const input: ViewInput = {\n      target: node?.domModel().target(),\n      linkifier: this.#linkifier,\n      options: {stackTrace},\n    };\n    this.#view(input, {}, this.contentElement);\n  }\n}\n\nexport const MaxLengthForLinks = 40;\n"]}