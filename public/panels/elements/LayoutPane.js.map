{"version":3,"file":"LayoutPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/LayoutPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/components/node_text/node_text.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport layoutPaneStyles from './layoutPane.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of the input to select the overlay color for an element using the color picker\n   */\n  chooseElementOverlayColor: 'Choose the overlay color for this element',\n  /**\n   * @description Title of the show element button in the Layout pane of the Elements panel\n   */\n  showElementInTheElementsPanel: 'Show element in the Elements panel',\n  /**\n   * @description Title of a section on CSS Grid/Masonry tooling\n   */\n  gridOrMasonry: 'Grid / Masonry',\n  /**\n   * @description Title of a section in the Layout Sidebar pane of the Elements panel\n   */\n  overlayDisplaySettings: 'Overlay display settings',\n  /**\n   * @description Title of a section in Layout sidebar pane\n   */\n  gridOrMasonryOverlays: 'Grid / Masonry overlays',\n  /**\n   * @description Message in the Layout panel informing users that no CSS Grid/Masonry layouts were found on the page\n   */\n  noGridOrMasonryLayoutsFoundOnThisPage: 'No grid or masonry layouts found on this page',\n  /**\n   * @description Title of the Flexbox section in the Layout panel\n   */\n  flexbox: 'Flexbox',\n  /**\n   * @description Title of a section in the Layout panel\n   */\n  flexboxOverlays: 'Flexbox overlays',\n  /**\n   * @description Text in the Layout panel, when no flexbox elements are found\n   */\n  noFlexboxLayoutsFoundOnThisPage: 'No flexbox layouts found on this page',\n  /**\n   * @description Screen reader announcement when opening color picker tool.\n   */\n  colorPickerOpened: 'Color picker opened.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/LayoutPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html} = Lit;\n\ninterface BaseSettingOption {\n  title: string;\n}\n\ninterface BooleanSettingOption extends BaseSettingOption {\n  value: boolean;\n}\n\ninterface EnumSettingOption extends BaseSettingOption {\n  value: string;\n}\n\ninterface BaseSetting {\n  name: string;\n  type: Common.Settings.SettingType.BOOLEAN|Common.Settings.SettingType.ENUM;\n  title: string;\n}\n\ntype BooleanSetting = BaseSetting&{options: BooleanSettingOption[], value: boolean};\ntype EnumSetting = BaseSetting&{options: EnumSettingOption[], value: string};\ntype Setting = EnumSetting|BooleanSetting;\n\ninterface LayoutElement {\n  id: number;\n  color: string;\n  name: string;\n  domId?: string;\n  domClasses?: string[];\n  enabled: boolean;\n  reveal: () => void;\n  toggle: (value: boolean) => void;\n  setColor: (value: string) => void;\n  highlight: () => void;\n  hideHighlight: () => void;\n}\n\nconst nodeToLayoutElement = (node: SDK.DOMModel.DOMNode): LayoutElement => {\n  const className = node.getAttribute('class');\n  const nodeId = node.id;\n  return {\n    id: nodeId,\n    color: 'var(--sys-color-inverse-surface)',\n    name: node.localName(),\n    domId: node.getAttribute('id'),\n    domClasses: className ? className.split(/\\s+/).filter(s => !!s) : undefined,\n    enabled: false,\n    reveal: () => {\n      void Common.Revealer.reveal(node);\n      void node.scrollIntoView();\n    },\n    highlight: () => {\n      node.highlight();\n    },\n    hideHighlight: () => {\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    },\n    toggle: (_value: boolean) => {\n      throw new Error('Not implemented');\n    },\n    setColor(_value: string): never {\n      throw new Error('Not implemented');\n    },\n  };\n};\n\nconst gridNodesToElements = (nodes: SDK.DOMModel.DOMNode[]): LayoutElement[] => {\n  return nodes.map(node => {\n    const layoutElement = nodeToLayoutElement(node);\n    const nodeId = node.id;\n    return {\n      ...layoutElement,\n      color:\n          node.domModel().overlayModel().colorOfGridInPersistentOverlay(nodeId) || 'var(--sys-color-inverse-surface)',\n      enabled: node.domModel().overlayModel().isHighlightedGridInPersistentOverlay(nodeId),\n      toggle: (value: boolean) => {\n        if (value) {\n          node.domModel().overlayModel().highlightGridInPersistentOverlay(nodeId);\n        } else {\n          node.domModel().overlayModel().hideGridInPersistentOverlay(nodeId);\n        }\n      },\n      setColor(value: string): void {\n        this.color = value;\n        node.domModel().overlayModel().setColorOfGridInPersistentOverlay(nodeId, value);\n      },\n    };\n  });\n};\n\nconst flexContainerNodesToElements = (nodes: SDK.DOMModel.DOMNode[]): LayoutElement[] => {\n  return nodes.map(node => {\n    const layoutElement = nodeToLayoutElement(node);\n    const nodeId = node.id;\n    return {\n      ...layoutElement,\n      color:\n          node.domModel().overlayModel().colorOfFlexInPersistentOverlay(nodeId) || 'var(--sys-color-inverse-surface)',\n      enabled: node.domModel().overlayModel().isHighlightedFlexContainerInPersistentOverlay(nodeId),\n      toggle: (value: boolean) => {\n        if (value) {\n          node.domModel().overlayModel().highlightFlexContainerInPersistentOverlay(nodeId);\n        } else {\n          node.domModel().overlayModel().hideFlexContainerInPersistentOverlay(nodeId);\n        }\n      },\n      setColor(value: string): void {\n        this.color = value;\n        node.domModel().overlayModel().setColorOfFlexInPersistentOverlay(nodeId, value);\n      },\n    };\n  });\n};\n\ninterface HTMLInputElementEvent extends InputEvent {\n  target: HTMLInputElement;\n}\n\nfunction isEnumSetting(setting: Setting): setting is EnumSetting {\n  return setting.type === Common.Settings.SettingType.ENUM;\n}\n\nfunction isBooleanSetting(setting: Setting): setting is BooleanSetting {\n  return setting.type === Common.Settings.SettingType.BOOLEAN;\n}\n\nexport interface LayoutPaneData {\n  settings: Setting[];\n  gridElements: LayoutElement[];\n  flexContainerElements?: LayoutElement[];\n}\n\nlet layoutPaneInstance: LayoutPane;\n\ninterface ViewInput {\n  onEnumSettingChange(setting: EnumSetting, e: Event): unknown;\n  flexContainerElements: LayoutElement[]|undefined;\n  onElementClick(element: LayoutElement, e: MouseEvent): unknown;\n  onColorChange(element: LayoutElement, e: Event): unknown;\n  onMouseLeave(element: LayoutElement, e: MouseEvent): unknown;\n  onMouseEnter(element: LayoutElement, e: MouseEvent): unknown;\n  onElementToggle(element: LayoutElement, e: Event): unknown;\n  onBooleanSettingChange(setting: BooleanSetting, e: Event): unknown;\n  enumSettings: EnumSetting[];\n  booleanSettings: BooleanSetting[];\n  gridElements: LayoutElement[]|undefined;\n  onSummaryKeyDown(e: KeyboardEvent): unknown;\n}\n\nconst DEFAULT_VIEW: View = (input, output, target) => {\n  const onColorLabelKeyUp = (event: KeyboardEvent): void => {\n    // Handle Enter and Space events to make the color picker accessible.\n    if (event.key !== 'Enter' && event.key !== ' ') {\n      return;\n    }\n    const target = event.target as HTMLLabelElement;\n    const input = target.querySelector('input') as HTMLInputElement;\n    input.click();\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.colorPickerOpened));\n    event.preventDefault();\n  };\n  const onColorLabelKeyDown = (event: KeyboardEvent): void => {\n    // Prevent default scrolling when the Space key is pressed.\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n  };\n  const renderElement = (element: LayoutElement): Lit.LitTemplate => html`<div\n          class=\"element\"\n          jslog=${VisualLogging.item()}>\n        <devtools-checkbox\n          data-element=\"true\"\n          class=\"checkbox-label\"\n          .checked=${element.enabled}\n          @change=${(e: Event) => input.onElementToggle(element, e)}\n          jslog=${VisualLogging.toggle().track({\n    click: true\n  })}>\n          <span\n              class=\"node-text-container\"\n              data-label=\"true\"\n              @mouseenter=${(e: MouseEvent) => input.onMouseEnter(element, e)}\n              @mouseleave=${(e: MouseEvent) => input.onMouseLeave(element, e)}>\n            <devtools-node-text .data=${{\n    nodeId: element.domId, nodeTitle: element.name, nodeClasses: element.domClasses,\n  }\n  }></devtools-node-text>\n          </span>\n        </devtools-checkbox>\n        <label\n            @keyup=${onColorLabelKeyUp}\n            @keydown=${onColorLabelKeyDown}\n            class=\"color-picker-label\"\n            style=\"background: ${element.color};\"\n            jslog=${\n      VisualLogging.showStyleEditor('color')\n          .track({\n            click: true\n          })}>\n          <input\n              @change=${(e: Event) => input.onColorChange(element, e)}\n              @input=${(e: InputEvent) => input.onColorChange(element, e)}\n              title=${i18nString(UIStrings.chooseElementOverlayColor)}\n              tabindex=\"0\"\n              class=\"color-picker\"\n              type=\"color\"\n              value=${element.color} />\n        </label>\n        <devtools-button class=\"show-element\"\n           .title=${i18nString(UIStrings.showElementInTheElementsPanel)}\n           aria-label=${i18nString(UIStrings.showElementInTheElementsPanel)}\n           .iconName=${'select-element'}\n           .jslogContext=${'elements.select-element'}\n           .size=${Buttons.Button.Size.SMALL}\n           .variant=${Buttons.Button.Variant.ICON}\n           @click=${(e: MouseEvent) => input.onElementClick(element, e)}\n           ></devtools-button>\n      </div>`;\n\n  // clang-format off\n  render(html`\n      <div style=\"min-width: min-content;\" jslog=${VisualLogging.pane('layout').track({resize: true})}>\n        <style>${layoutPaneStyles}</style>\n        <style>@scope to (devtools-widget > *) { ${UI.inspectorCommonStyles} }</style>\n        <details open>\n          <summary class=\"header\"\n            @keydown=${input.onSummaryKeyDown}\n            jslog=${VisualLogging.sectionHeader('grid-settings').track({click: true})}>\n            ${i18nString(UIStrings.gridOrMasonry)}\n          </summary>\n          <div class=\"content-section\" jslog=${VisualLogging.section('grid-settings')}>\n            <h3 class=\"content-section-title\">${i18nString(UIStrings.overlayDisplaySettings)}</h3>\n            <div class=\"select-settings\">\n              ${input.enumSettings.map(setting =>\n                  html`<label data-enum-setting=\"true\" class=\"select-label\" title=${setting.title}>\n                      <select\n                        data-input=\"true\"\n                        jslog=${VisualLogging.dropDown().track({change: true}).context(setting.name)}\n                        @change=${(e: Event) => input.onEnumSettingChange(setting, e)}>\n                        ${setting.options.map(opt =>\n                        html`<option\n                                value=${opt.value}\n                                .selected=${setting.value === opt.value}\n                                jslog=${\n                                  VisualLogging.item(Platform.StringUtilities.toKebabCase(opt.value)).track({\n                                    click: true})}>${opt.title}</option>`)}\n                      </select>\n                    </label>`)}\n            </div>\n            <div class=\"checkbox-settings\">\n              ${input.booleanSettings.map(setting =>\n                  html`<devtools-checkbox\n                      data-boolean-setting=\"true\"\n                      class=\"checkbox-label\"\n                      title=${setting.title}\n                      .checked=${setting.value}\n                      @change=${(e: Event) => input.onBooleanSettingChange(setting, e)}\n                      jslog=${VisualLogging.toggle().track({click: true}).context(setting.name)}>\n                    ${setting.title}\n                  </devtools-checkbox>`)}\n            </div>\n          </div>\n          ${input.gridElements ?\n            html`<div class=\"content-section\" jslog=${VisualLogging.section('grid-overlays')}>\n              <h3 class=\"content-section-title\">\n                ${input.gridElements.length ?\n                    i18nString(UIStrings.gridOrMasonryOverlays) :\n                    i18nString(UIStrings.noGridOrMasonryLayoutsFoundOnThisPage)}\n              </h3>\n              ${input.gridElements.length ?\n                  html`<div class=\"elements\">${input.gridElements.map(renderElement)}</div>` :\n                  ''}\n            </div>` : ''}\n        </details>\n        ${input.flexContainerElements !== undefined ?\n          html`\n          <details open>\n            <summary\n                class=\"header\"\n                @keydown=${input.onSummaryKeyDown}\n                jslog=${VisualLogging.sectionHeader('flexbox-overlays').track({click: true})}>\n              ${i18nString(UIStrings.flexbox)}\n            </summary>\n            ${input.flexContainerElements ?\n              html`<div class=\"content-section\" jslog=${VisualLogging.section('flexbox-overlays')}>\n                <h3 class=\"content-section-title\">\n                  ${input.flexContainerElements.length ?\n                      i18nString(UIStrings.flexboxOverlays) :\n                      i18nString(UIStrings.noFlexboxLayoutsFoundOnThisPage)}\n                </h3>\n                ${input.flexContainerElements.length ?\n                    html`<div class=\"elements\">${input.flexContainerElements.map(renderElement)}</div>` :\n                    ''}\n              </div>` : ''}\n          </details>`\n        : ''}\n      </div>`,\n      // clang-format on\n      target);\n};\n\ntype View = (input: ViewInput, output: object, element: HTMLElement) => void;\nexport class LayoutPane extends UI.Widget.Widget {\n  readonly #settings: readonly Setting[] = [];\n  readonly #uaShadowDOMSetting: Common.Settings.Setting<boolean>;\n  #domModels: SDK.DOMModel.DOMModel[];\n  readonly #view: View;\n\n  constructor(element?: HTMLElement, view: View = DEFAULT_VIEW) {\n    super(element);\n    this.#settings = this.#makeSettings();\n    this.#uaShadowDOMSetting = Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom');\n    this.#domModels = [];\n    this.#view = view;\n  }\n\n  static instance(): LayoutPane {\n    if (!layoutPaneInstance) {\n      layoutPaneInstance = new LayoutPane();\n    }\n    return layoutPaneInstance;\n  }\n\n  modelAdded(domModel: SDK.DOMModel.DOMModel): void {\n    const overlayModel = domModel.overlayModel();\n    overlayModel.addEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED, this.requestUpdate, this);\n    overlayModel.addEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED, this.requestUpdate, this);\n    this.#domModels.push(domModel);\n  }\n\n  modelRemoved(domModel: SDK.DOMModel.DOMModel): void {\n    const overlayModel = domModel.overlayModel();\n    overlayModel.removeEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED, this.requestUpdate, this);\n    overlayModel.removeEventListener(\n        SDK.OverlayModel.Events.PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED, this.requestUpdate, this);\n    this.#domModels = this.#domModels.filter(model => model !== domModel);\n  }\n\n  async #fetchNodesByStyle(style: Array<{\n    name: string,\n    value: string,\n  }>): Promise<SDK.DOMModel.DOMNode[]> {\n    const showUAShadowDOM = this.#uaShadowDOMSetting.get();\n\n    const nodes = [];\n    for (const domModel of this.#domModels) {\n      try {\n        const nodeIds = await domModel.getNodesByStyle(style, true /* pierce */);\n        for (const nodeId of nodeIds) {\n          const node = domModel.nodeForId(nodeId);\n          if (node !== null && (showUAShadowDOM || !node.ancestorUserAgentShadowRoot())) {\n            nodes.push(node);\n          }\n        }\n      } catch (error) {\n        // TODO(crbug.com/1167706): Sometimes in E2E tests the layout panel is updated after a DOM node\n        // has been removed. This causes an error that a node has not been found.\n        // We can skip nodes that resulted in an error.\n        console.warn(error);\n      }\n    }\n\n    return nodes;\n  }\n\n  async #fetchGridNodes(): Promise<SDK.DOMModel.DOMNode[]> {\n    return await this.#fetchNodesByStyle([\n      {name: 'display', value: 'grid'}, {name: 'display', value: 'inline-grid'}, {name: 'display', value: 'masonry'},\n      {name: 'display', value: 'inline-masonry'}\n    ]);\n  }\n\n  async #fetchFlexContainerNodes(): Promise<SDK.DOMModel.DOMNode[]> {\n    return await this.#fetchNodesByStyle([{name: 'display', value: 'flex'}, {name: 'display', value: 'inline-flex'}]);\n  }\n\n  #makeSettings(): Setting[] {\n    const settings = [];\n    for (const settingName\n             of ['show-grid-line-labels', 'show-grid-track-sizes', 'show-grid-areas', 'extend-grid-lines']) {\n      const setting = Common.Settings.Settings.instance().moduleSetting(settingName);\n      const settingValue = setting.get();\n      const settingType = setting.type();\n      if (!settingType) {\n        throw new Error('A setting provided to LayoutSidebarPane does not have a setting type');\n      }\n      if (settingType !== Common.Settings.SettingType.BOOLEAN && settingType !== Common.Settings.SettingType.ENUM) {\n        throw new Error('A setting provided to LayoutSidebarPane does not have a supported setting type');\n      }\n      const mappedSetting = {\n        type: settingType,\n        name: setting.name,\n        title: setting.title(),\n      };\n      if (typeof settingValue === 'boolean') {\n        settings.push({\n          ...mappedSetting,\n          value: settingValue,\n          options: setting.options().map(opt => ({\n                                           ...opt,\n                                           value: (opt.value as boolean),\n                                         })),\n        });\n      } else if (typeof settingValue === 'string') {\n        settings.push({\n          ...mappedSetting,\n          value: settingValue,\n          options: setting.options().map(opt => ({\n                                           ...opt,\n                                           value: (opt.value as string),\n                                         })),\n        });\n      }\n    }\n    return settings;\n  }\n\n  onSettingChanged(setting: string, value: string|boolean): void {\n    Common.Settings.Settings.instance().moduleSetting(setting).set(value);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    for (const setting of this.#settings) {\n      Common.Settings.Settings.instance().moduleSetting(setting.name).addChangeListener(this.requestUpdate, this);\n    }\n    for (const domModel of this.#domModels) {\n      this.modelRemoved(domModel);\n    }\n    this.#domModels = [];\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.DOMModel.DOMModel, this, {scoped: true});\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.requestUpdate, this);\n    this.#uaShadowDOMSetting.addChangeListener(this.requestUpdate, this);\n    this.requestUpdate();\n  }\n\n  override willHide(): void {\n    for (const setting of this.#settings) {\n      Common.Settings.Settings.instance().moduleSetting(setting.name).removeChangeListener(this.requestUpdate, this);\n    }\n    SDK.TargetManager.TargetManager.instance().unobserveModels(SDK.DOMModel.DOMModel, this);\n    UI.Context.Context.instance().removeFlavorChangeListener(SDK.DOMModel.DOMNode, this.requestUpdate, this);\n    this.#uaShadowDOMSetting.removeChangeListener(this.requestUpdate, this);\n  }\n\n  #onSummaryKeyDown(event: KeyboardEvent): void {\n    if (!event.target) {\n      return;\n    }\n    const summaryElement = event.target as HTMLElement;\n    const detailsElement = summaryElement.parentElement as HTMLDetailsElement;\n    if (!detailsElement) {\n      throw new Error('<details> element is not found for a <summary> element');\n    }\n    switch (event.key) {\n      case 'ArrowLeft':\n        detailsElement.open = false;\n        break;\n      case 'ArrowRight':\n        detailsElement.open = true;\n        break;\n    }\n  }\n\n  override async performUpdate(): Promise<void> {\n    const input: ViewInput = {\n      gridElements: gridNodesToElements(await this.#fetchGridNodes()),\n      flexContainerElements: flexContainerNodesToElements(await this.#fetchFlexContainerNodes()),\n      onEnumSettingChange: this.#onEnumSettingChange.bind(this),\n      onElementClick: this.#onElementClick.bind(this),\n      onColorChange: this.#onColorChange.bind(this),\n      onMouseLeave: this.#onElementMouseLeave.bind(this),\n      onMouseEnter: this.#onElementMouseEnter.bind(this),\n      onElementToggle: this.#onElementToggle.bind(this),\n      onBooleanSettingChange: this.#onBooleanSettingChange.bind(this),\n      enumSettings: this.#getEnumSettings(),\n      booleanSettings: this.#getBooleanSettings(),\n      onSummaryKeyDown: this.#onSummaryKeyDown.bind(this),\n    };\n\n    this.#view(input, {}, this.contentElement);\n  }\n\n  #getEnumSettings(): EnumSetting[] {\n    return this.#settings.filter(isEnumSetting);\n  }\n\n  #getBooleanSettings(): BooleanSetting[] {\n    return this.#settings.filter(isBooleanSetting);\n  }\n\n  #onBooleanSettingChange(setting: BooleanSetting, event: Event): void {\n    event.preventDefault();\n    this.onSettingChanged(setting.name, (event.target as UI.UIUtils.CheckboxLabel).checked);\n  }\n\n  #onEnumSettingChange(setting: EnumSetting, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    this.onSettingChanged(setting.name, event.target.value);\n  }\n\n  #onElementToggle(element: LayoutElement, event: Event): void {\n    event.preventDefault();\n    element.toggle((event.target as UI.UIUtils.CheckboxLabel).checked);\n  }\n\n  #onElementClick(element: LayoutElement, event: MouseEvent): void {\n    event.preventDefault();\n    element.reveal();\n  }\n\n  #onColorChange(element: LayoutElement, event: HTMLInputElementEvent): void {\n    event.preventDefault();\n    element.setColor(event.target.value);\n    this.requestUpdate();\n  }\n\n  #onElementMouseEnter(element: LayoutElement, event: MouseEvent): void {\n    event.preventDefault();\n    element.highlight();\n  }\n\n  #onElementMouseLeave(element: LayoutElement, event: MouseEvent): void {\n    event.preventDefault();\n    element.hideHighlight();\n  }\n}\n"]}