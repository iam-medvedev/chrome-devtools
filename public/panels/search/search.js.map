{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/search/SearchResultsPane.ts", "searchResultsPane.css.js", "../../../../../../front_end/panels/search/SearchScope.ts", "../../../../../../front_end/panels/search/SearchView.ts", "searchView.css.js"],
  "sourcesContent": ["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport searchResultsPaneStyles from './searchResultsPane.css.js';\nimport type {SearchResult} from './SearchScope.js';\n\nconst UIStrings = {\n  /**\n   * @description Accessibility label for number of matches in each file in search results pane\n   * @example {2} PH1\n   */\n  matchesCountS: 'Matches Count {PH1}',\n  /**\n   * @description Search result label for results in the Search tool\n   * @example {2} PH1\n   */\n  lineS: 'Line {PH1}',\n  /**\n   * @description Text in Search Results Pane of the Search tab\n   * @example {2} PH1\n   */\n  showDMore: 'Show {PH1} more',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/search/SearchResultsPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SearchResultsPane extends UI.Widget.VBox {\n  private readonly searchConfig: Workspace.SearchConfig.SearchConfig;\n  private readonly searchResults: SearchResult[];\n  private readonly treeElements: SearchResultsTreeElement[];\n  private treeOutline: UI.TreeOutline.TreeOutlineInShadow;\n  private matchesExpandedCount: number;\n\n  constructor(searchConfig: Workspace.SearchConfig.SearchConfig) {\n    super({useShadowDom: true});\n    this.searchConfig = searchConfig;\n\n    this.searchResults = [];\n    this.treeElements = [];\n    this.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    this.treeOutline.registerRequiredCSS(searchResultsPaneStyles);\n    this.treeOutline.hideOverflow();\n\n    this.contentElement.appendChild(this.treeOutline.element);\n\n    this.matchesExpandedCount = 0;\n  }\n\n  addSearchResult(searchResult: SearchResult): void {\n    this.searchResults.push(searchResult);\n    this.addTreeElement(searchResult);\n  }\n\n  showAllMatches(): void {\n    this.treeElements.forEach(treeElement => {\n      treeElement.expand();\n      treeElement.showAllMatches();\n    });\n  }\n\n  collapseAllResults(): void {\n    this.treeElements.forEach(treeElement => {\n      treeElement.collapse();\n    });\n  }\n\n  private addTreeElement(searchResult: SearchResult): void {\n    const treeElement = new SearchResultsTreeElement(this.searchConfig, searchResult);\n    this.treeOutline.appendChild(treeElement);\n    if (!this.treeOutline.selectedTreeElement) {\n      treeElement.select(/* omitFocus */ true, /* selectedByUser */ true);\n    }\n    // Expand until at least a certain number of matches is expanded.\n    if (this.matchesExpandedCount < matchesExpandedByDefault) {\n      treeElement.expand();\n    }\n    this.matchesExpandedCount += searchResult.matchesCount();\n    this.treeElements.push(treeElement);\n  }\n}\n\nexport const matchesExpandedByDefault = 200;\nexport const matchesShownAtOnce = 20;\n\nexport class SearchResultsTreeElement extends UI.TreeOutline.TreeElement {\n  private searchConfig: Workspace.SearchConfig.SearchConfig;\n  private searchResult: SearchResult;\n  private initialized: boolean;\n  override toggleOnClick: boolean;\n\n  constructor(searchConfig: Workspace.SearchConfig.SearchConfig, searchResult: SearchResult) {\n    super('', true);\n    this.searchConfig = searchConfig;\n    this.searchResult = searchResult;\n    this.initialized = false;\n    this.toggleOnClick = true;\n  }\n\n  override onexpand(): void {\n    if (this.initialized) {\n      return;\n    }\n\n    this.updateMatchesUI();\n    this.initialized = true;\n  }\n\n  showAllMatches(): void {\n    this.removeChildren();\n    this.appendSearchMatches(0, this.searchResult.matchesCount());\n  }\n\n  private updateMatchesUI(): void {\n    this.removeChildren();\n    const toIndex = Math.min(this.searchResult.matchesCount(), matchesShownAtOnce);\n    if (toIndex < this.searchResult.matchesCount()) {\n      this.appendSearchMatches(0, toIndex - 1);\n      this.appendShowMoreMatchesElement(toIndex - 1);\n    } else {\n      this.appendSearchMatches(0, toIndex);\n    }\n  }\n\n  override onattach(): void {\n    this.updateSearchMatches();\n  }\n\n  private updateSearchMatches(): void {\n    this.listItemElement.classList.add('search-result');\n\n    const fileNameSpan = span(this.searchResult.label(), 'search-result-file-name');\n    fileNameSpan.appendChild(span('\\u2014', 'search-result-dash'));\n    fileNameSpan.appendChild(span(this.searchResult.description(), 'search-result-qualifier'));\n\n    this.tooltip = this.searchResult.description();\n    this.listItemElement.appendChild(fileNameSpan);\n    const matchesCountSpan = document.createElement('span');\n    matchesCountSpan.className = 'search-result-matches-count';\n\n    matchesCountSpan.textContent = `${this.searchResult.matchesCount()}`;\n    UI.ARIAUtils.setLabel(\n        matchesCountSpan, i18nString(UIStrings.matchesCountS, {PH1: this.searchResult.matchesCount()}));\n\n    this.listItemElement.appendChild(matchesCountSpan);\n    if (this.expanded) {\n      this.updateMatchesUI();\n    }\n\n    function span(text: string, className: string): Element {\n      const span = document.createElement('span');\n      span.className = className;\n      span.textContent = text;\n      return span;\n    }\n  }\n\n  private appendSearchMatches(fromIndex: number, toIndex: number): void {\n    const searchResult = this.searchResult;\n\n    const queries = this.searchConfig.queries();\n    const regexes = [];\n    for (let i = 0; i < queries.length; ++i) {\n      regexes.push(Platform.StringUtilities.createSearchRegex(\n          queries[i], !this.searchConfig.ignoreCase(), this.searchConfig.isRegex()));\n    }\n\n    for (let i = fromIndex; i < toIndex; ++i) {\n      let lineContent = searchResult.matchLineContent(i);\n      let matchRanges: TextUtils.TextRange.SourceRange[] = [];\n      // Searching in scripts and network response bodies produces one result entry per match. We can skip re-doing the\n      // search since we have the exact match range.\n      // For matches found in headers or the request URL we re-do the search to find all match ranges.\n      const column = searchResult.matchColumn(i);\n      const matchLength = searchResult.matchLength(i);\n      if (column !== undefined && matchLength !== undefined) {\n        const {matchRange, lineSegment} =\n            lineSegmentForMatch(lineContent, new TextUtils.TextRange.SourceRange(column, matchLength));\n        lineContent = lineSegment;\n        matchRanges = [matchRange];\n      } else {\n        lineContent = lineContent.trim();\n        for (let j = 0; j < regexes.length; ++j) {\n          matchRanges = matchRanges.concat(this.regexMatchRanges(lineContent, regexes[j]));\n        }\n        ({lineSegment: lineContent, matchRanges} = lineSegmentForMultipleMatches(lineContent, matchRanges));\n      }\n\n      const anchor = Components.Linkifier.Linkifier.linkifyRevealable(\n          searchResult.matchRevealable(i), '', undefined, undefined, undefined, 'search-match');\n      anchor.classList.add('search-match-link');\n      anchor.tabIndex = 0;\n      const labelSpan = document.createElement('span');\n      labelSpan.classList.add('search-match-line-number');\n      const resultLabel = searchResult.matchLabel(i);\n      labelSpan.textContent = resultLabel;\n      if (typeof resultLabel === 'number' && !isNaN(resultLabel)) {\n        UI.ARIAUtils.setLabel(labelSpan, i18nString(UIStrings.lineS, {PH1: resultLabel}));\n      } else {\n        UI.ARIAUtils.setLabel(labelSpan, resultLabel);\n      }\n      anchor.appendChild(labelSpan);\n\n      const contentSpan = this.createContentSpan(lineContent, matchRanges);\n      anchor.appendChild(contentSpan);\n\n      const searchMatchElement = new UI.TreeOutline.TreeElement();\n      this.appendChild(searchMatchElement);\n      searchMatchElement.listItemElement.className = 'search-match';\n      searchMatchElement.listItemElement.appendChild(anchor);\n      searchMatchElement.listItemElement.addEventListener('keydown', event => {\n        if (event.key === 'Enter') {\n          event.consume(true);\n          void Common.Revealer.reveal(searchResult.matchRevealable(i));\n        }\n      });\n      searchMatchElement.tooltip = lineContent;\n    }\n  }\n\n  private appendShowMoreMatchesElement(startMatchIndex: number): void {\n    const matchesLeftCount = this.searchResult.matchesCount() - startMatchIndex;\n    const showMoreMatchesText = i18nString(UIStrings.showDMore, {PH1: matchesLeftCount});\n    const showMoreMatchesTreeElement = new UI.TreeOutline.TreeElement(showMoreMatchesText);\n    this.appendChild(showMoreMatchesTreeElement);\n    showMoreMatchesTreeElement.listItemElement.classList.add('show-more-matches');\n    showMoreMatchesTreeElement.onselect =\n        this.showMoreMatchesElementSelected.bind(this, showMoreMatchesTreeElement, startMatchIndex);\n  }\n\n  private createContentSpan(lineContent: string, matchRanges: TextUtils.TextRange.SourceRange[]): Element {\n    const contentSpan = document.createElement('span');\n    contentSpan.className = 'search-match-content';\n    contentSpan.textContent = lineContent;\n    UI.ARIAUtils.setLabel(contentSpan, `${lineContent} line`);\n    UI.UIUtils.highlightRangesWithStyleClass(contentSpan, matchRanges, 'highlighted-search-result');\n    return contentSpan;\n  }\n\n  private regexMatchRanges(lineContent: string, regex: RegExp): TextUtils.TextRange.SourceRange[] {\n    regex.lastIndex = 0;\n    let match;\n    const matchRanges = [];\n    while ((regex.lastIndex < lineContent.length) && (match = regex.exec(lineContent))) {\n      matchRanges.push(new TextUtils.TextRange.SourceRange(match.index, match[0].length));\n    }\n\n    return matchRanges;\n  }\n\n  private showMoreMatchesElementSelected(\n      showMoreMatchesTreeElement: UI.TreeOutline.TreeElement, startMatchIndex: number): boolean {\n    this.removeChild(showMoreMatchesTreeElement);\n    this.appendSearchMatches(startMatchIndex, this.searchResult.matchesCount());\n    return false;\n  }\n}\n\nconst DEFAULT_OPTS = {\n  prefixLength: 25,\n  maxLength: 1000,\n};\n\n/**\n * Takes a whole line and calculates the substring we want to actually display in the UI.\n * Also returns a translated {matchRange} (the parameter is relative to {lineContent} but the\n * caller needs it relative to {lineSegment}).\n *\n * {lineContent} is modified in the following way:\n *\n *   * Whitespace is trimmed from the beginning (unless the match includes it).\n *   * We only leave {options.prefixLength} characters before the match (and add an ellipsis in\n *     case we removed anything)\n *   * Truncate the remainder to {options.maxLength} characters.\n */\nexport function lineSegmentForMatch(\n    lineContent: string, range: TextUtils.TextRange.SourceRange,\n    optionsArg: Partial<typeof DEFAULT_OPTS> =\n        DEFAULT_OPTS): {lineSegment: string, matchRange: TextUtils.TextRange.SourceRange} {\n  const options = {...DEFAULT_OPTS, ...optionsArg};\n\n  // Remove the whitespace at the beginning, but stop where the match starts.\n  const attemptedTrimmedLine = lineContent.trimStart();\n  const potentiallyRemovedWhitespaceLength = lineContent.length - attemptedTrimmedLine.length;\n  const actuallyRemovedWhitespaceLength = Math.min(range.offset, potentiallyRemovedWhitespaceLength);\n\n  // Apply {options.prefixLength} and {options.maxLength}.\n  const lineSegmentBegin = Math.max(actuallyRemovedWhitespaceLength, range.offset - options.prefixLength);\n  const lineSegmentEnd = Math.min(lineContent.length, lineSegmentBegin + options.maxLength);\n  const lineSegmentPrefix = lineSegmentBegin > actuallyRemovedWhitespaceLength ? '…' : '';\n\n  // Build the resulting line segment and match range.\n  const lineSegment = lineSegmentPrefix + lineContent.substring(lineSegmentBegin, lineSegmentEnd);\n  const rangeOffset = range.offset - lineSegmentBegin + lineSegmentPrefix.length;\n  const rangeLength = Math.min(range.length, lineSegment.length - rangeOffset);\n  const matchRange = new TextUtils.TextRange.SourceRange(rangeOffset, rangeLength);\n\n  return {lineSegment, matchRange};\n}\n\n/**\n * Takes a line and multiple match ranges and trims/cuts the line accordingly.\n * The match ranges are then adjusted to reflect the transformation.\n *\n * Ideally prefer `lineSegmentForMatch`, it can center the line on the match\n * whereas this method risks cutting matches out of the string.\n */\nfunction lineSegmentForMultipleMatches(lineContent: string, ranges: TextUtils.TextRange.SourceRange[]):\n    {lineSegment: string, matchRanges: TextUtils.TextRange.SourceRange[]} {\n  let trimBy = 0;\n  let matchRanges = ranges;\n  if (matchRanges.length > 0 && matchRanges[0].offset > 20) {\n    trimBy = 15;\n  }\n  let lineSegment = lineContent.substring(trimBy, 1000 + trimBy);\n  if (trimBy) {\n    matchRanges =\n        matchRanges.map(range => new TextUtils.TextRange.SourceRange(range.offset - trimBy + 1, range.length));\n    lineSegment = '…' + lineSegment;\n  }\n  return {lineSegment, matchRanges};\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  padding: 0;\n  margin: 0;\n  overflow-y: auto;\n}\n\n.tree-outline {\n  padding: 0;\n}\n\n.tree-outline ol {\n  padding: 0;\n}\n\n.tree-outline li {\n  height: 16px;\n}\n\nli.search-result {\n  cursor: pointer;\n  font-size: 12px;\n  margin-top: 8px;\n  padding: 2px 0 2px 4px;\n  word-wrap: normal;\n  white-space: pre;\n}\n\nli.search-result:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\nli.search-result .search-result-file-name {\n  color: var(--sys-color-on-surface);\n  flex: 1 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\nli.search-result .search-result-matches-count {\n  color: var(--sys-color-token-subtle);\n  margin: 0 8px;\n}\n\nli.search-result.expanded .search-result-matches-count {\n  display: none;\n}\n\nli.show-more-matches {\n  color: var(--sys-color-on-surface);\n  cursor: pointer;\n  margin: 8px 0 0 -4px;\n}\n\nli.show-more-matches:hover {\n  text-decoration: underline;\n}\n\nli.search-match {\n  margin: 2px 0;\n  word-wrap: normal;\n  white-space: pre;\n}\n\nli.search-match.selected:focus-visible {\n  background: var(--sys-color-tonal-container);\n}\n\nli.search-match::before {\n  display: none;\n}\n\nli.search-match .search-match-line-number {\n  color: var(--sys-color-token-subtle);\n  text-align: right;\n  vertical-align: top;\n  word-break: normal;\n  padding: 2px 4px 2px 6px;\n  margin-right: 5px;\n}\n\n.tree-outline .devtools-link {\n  text-decoration: none;\n  display: block;\n  flex: auto;\n}\n\nli.search-match .search-match-content {\n  color: var(--sys-color-on-surface);\n}\n\nol.children.expanded {\n  padding-bottom: 4px;\n}\n\nli.search-match .link-style.search-match-link {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-left: 9px;\n  text-align: left;\n}\n\n.search-result-qualifier {\n  color: var(--sys-color-token-subtle);\n}\n\n.search-result-dash {\n  color: var(--sys-color-surface-variant);\n  margin: 0 4px;\n}\n\n/*# sourceURL=${import.meta.resolve('./searchResultsPane.css')} */`;", "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\n\nexport interface SearchResult {\n  label(): string;\n\n  description(): string;\n\n  matchesCount(): number;\n\n  matchLabel(index: number): string;\n\n  matchLineContent(index: number): string;\n\n  matchRevealable(index: number): Object;\n\n  matchColumn(index: number): number|undefined;\n\n  matchLength(index: number): number|undefined;\n}\n\nexport interface SearchScope {\n  performSearch(\n      searchConfig: Workspace.SearchConfig.SearchConfig, progress: Common.Progress.Progress,\n      searchResultCallback: (arg0: SearchResult) => void,\n      searchFinishedCallback: (arg0: boolean) => void): void|Promise<void>;\n\n  performIndexing(progress: Common.Progress.Progress): void;\n\n  stopSearch(): void;\n}\n", "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {SearchResultsPane} from './SearchResultsPane.js';\nimport type {SearchResult, SearchScope} from './SearchScope.js';\nimport searchViewStyles from './searchView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Placeholder text of a search bar\n   */\n  find: 'Find',\n  /**\n   * @description Tooltip text on a toggle to enable search by matching case of the input\n   */\n  enableCaseSensitive: 'Enable case sensitive search',\n  /**\n   * @description Tooltip text on a toggle to disable search by matching case of the input\n   */\n  disableCaseSensitive: 'Disable case sensitive search',\n  /**\n   * @description Tooltip text on a toggle to enable searching with regular expression\n   */\n  enableRegularExpression: 'Enable regular expressions',\n  /**\n   * @description Tooltip text on a toggle to disable searching with regular expression\n   */\n  disableRegularExpression: 'Disable regular expressions',\n  /**\n   * @description Text to refresh the page\n   */\n  refresh: 'Refresh',\n  /**\n   * @description Tooltip text to clear the search input field\n   */\n  clearInput: 'Clear',\n  /**\n   * @description Text to clear content\n   */\n  clear: 'Clear search',\n  /**\n   * @description Search message element text content in Search View of the Search tab\n   */\n  indexing: 'Indexing…',\n  /**\n   * @description Text to indicate the searching is in progress\n   */\n  searching: 'Searching…',\n  /**\n   * @description Text in Search View of the Search tab\n   */\n  indexingInterrupted: 'Indexing interrupted.',\n  /**\n   * @description Search results message element text content in Search View of the Search tab\n   */\n  foundMatchingLineInFile: 'Found 1 matching line in 1 file.',\n  /**\n   * @description Search results message element text content in Search View of the Search tab\n   * @example {2} PH1\n   */\n  foundDMatchingLinesInFile: 'Found {PH1} matching lines in 1 file.',\n  /**\n   * @description Search results message element text content in Search View of the Search tab\n   * @example {2} PH1\n   * @example {2} PH2\n   */\n  foundDMatchingLinesInDFiles: 'Found {PH1} matching lines in {PH2} files.',\n  /**\n   * @description Search results message element text content in Search View of the Search tab\n   */\n  noMatchesFound: 'No matches found',\n  /**\n   * @description Search results message element text content in Search View of the Search tab\n   */\n  nothingMatchedTheQuery: 'Nothing matched your search query',\n  /**\n   * @description Text in Search View of the Search tab\n   */\n  searchFinished: 'Search finished.',\n  /**\n   * @description Text in Search View of the Search tab\n   */\n  searchInterrupted: 'Search interrupted.',\n  /**\n   * @description Text in Search View of the Search tab if user hasn't started the search\n   * @example {Enter} PH1\n   */\n  typeAndPressSToSearch: 'Type and press {PH1} to search',\n  /**\n   * @description Text in Search view of the Search tab if user hasn't started the search\n   */\n  noSearchResult: 'No search results',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/search/SearchView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction createSearchToggleButton(iconName: string, jslogContext: string): Buttons.Button.Button {\n  const button = new Buttons.Button.Button();\n  button.data = {\n    variant: Buttons.Button.Variant.ICON_TOGGLE,\n    iconName,\n    toggledIconName: iconName,\n    toggleType: Buttons.Button.ToggleType.PRIMARY,\n    size: Buttons.Button.Size.SMALL,\n    toggled: false,\n    jslogContext,\n  };\n  return button;\n}\nexport class SearchView extends UI.Widget.VBox {\n  private focusOnShow: boolean;\n  private isIndexing: boolean;\n  private searchId: number;\n  private searchMatchesCount: number;\n  private searchResultsCount: number;\n  private nonEmptySearchResultsCount: number;\n  private searchingView: UI.Widget.Widget|null;\n  private notFoundView: UI.Widget.Widget|null;\n  private searchConfig: Workspace.SearchConfig.SearchConfig|null;\n  private pendingSearchConfig: Workspace.SearchConfig.SearchConfig|null;\n  private searchResultsPane: SearchResultsPane|null;\n  private progressIndicator: UI.ProgressIndicator.ProgressIndicator|null;\n  private visiblePane: UI.Widget.Widget|null;\n  private readonly searchPanelElement: HTMLElement;\n  private readonly searchResultsElement: HTMLElement;\n  protected readonly search: HTMLInputElement;\n  protected readonly matchCaseButton: Buttons.Button.Button;\n  protected readonly regexButton: Buttons.Button.Button;\n  private searchMessageElement: HTMLElement;\n  private readonly searchProgressPlaceholderElement: HTMLElement;\n  private searchResultsMessageElement: HTMLElement;\n  private readonly advancedSearchConfig: Common.Settings.Setting<{\n    query: string,\n    ignoreCase: boolean,\n    isRegex: boolean,\n  }>;\n  private searchScope: SearchScope|null;\n\n  // We throttle adding search results, otherwise we trigger DOM layout for each\n  // result added.\n  #throttler: Common.Throttler.Throttler;\n  #pendingSearchResults: SearchResult[] = [];\n  #emptyStartView: UI.EmptyWidget.EmptyWidget;\n\n  constructor(settingKey: string, throttler: Common.Throttler.Throttler) {\n    super({\n      jslog: `${VisualLogging.panel('search').track({resize: true})}`,\n      useShadowDom: true,\n    });\n    this.setMinimumSize(0, 40);\n    this.registerRequiredCSS(searchViewStyles);\n\n    this.focusOnShow = false;\n    this.isIndexing = false;\n    this.searchId = 1;\n    this.searchMatchesCount = 0;\n    this.searchResultsCount = 0;\n    this.nonEmptySearchResultsCount = 0;\n    this.searchingView = null;\n    this.notFoundView = null;\n    this.searchConfig = null;\n    this.pendingSearchConfig = null;\n    this.searchResultsPane = null;\n    this.progressIndicator = null;\n    this.visiblePane = null;\n    this.#throttler = throttler;\n\n    this.contentElement.classList.add('search-view');\n    this.contentElement.addEventListener('keydown', event => {\n      this.onKeyDownOnPanel((event));\n    });\n\n    this.searchPanelElement = this.contentElement.createChild('div', 'search-drawer-header');\n    this.searchResultsElement = this.contentElement.createChild('div');\n    this.searchResultsElement.className = 'search-results';\n\n    const searchContainer = document.createElement('div');\n    searchContainer.classList.add('search-container');\n    const searchElements = searchContainer.createChild('div', 'toolbar-item-search');\n\n    const searchIcon = IconButton.Icon.create('search');\n    searchElements.appendChild(searchIcon);\n\n    this.search = UI.UIUtils.createHistoryInput('search', 'search-toolbar-input');\n    this.search.addEventListener('keydown', event => {\n      this.onKeyDown((event));\n    });\n    this.search.setAttribute(\n        'jslog', `${VisualLogging.textField().track({change: true, keydown: 'ArrowUp|ArrowDown|Enter'})}`);\n    searchElements.appendChild(this.search);\n    this.search.placeholder = i18nString(UIStrings.find);\n    this.search.setAttribute('results', '0');\n    this.search.setAttribute('size', '100');\n    UI.ARIAUtils.setLabel(this.search, this.search.placeholder);\n\n    const clearInputFieldButton = new Buttons.Button.Button();\n    clearInputFieldButton.data = {\n      variant: Buttons.Button.Variant.ICON,\n      iconName: 'cross-circle-filled',\n      jslogContext: 'clear-input',\n      size: Buttons.Button.Size.SMALL,\n      title: i18nString(UIStrings.clearInput),\n    };\n    clearInputFieldButton.classList.add('clear-button');\n    clearInputFieldButton.addEventListener('click', () => {\n      this.onSearchInputClear();\n    });\n    clearInputFieldButton.tabIndex = -1;\n    searchElements.appendChild(clearInputFieldButton);\n\n    const regexIconName = 'regular-expression';\n    this.regexButton = createSearchToggleButton(regexIconName, regexIconName);\n    this.regexButton.addEventListener('click', () => this.regexButtonToggled());\n    searchElements.appendChild(this.regexButton);\n\n    const matchCaseIconName = 'match-case';\n    this.matchCaseButton = createSearchToggleButton(matchCaseIconName, matchCaseIconName);\n    this.matchCaseButton.addEventListener('click', () => this.matchCaseButtonToggled());\n    searchElements.appendChild(this.matchCaseButton);\n\n    this.searchPanelElement.appendChild(searchContainer);\n    const toolbar = this.searchPanelElement.createChild('devtools-toolbar', 'search-toolbar');\n    toolbar.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n    const refreshButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.refresh), 'refresh', undefined, 'search.refresh');\n    const clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clear), 'clear', undefined, 'search.clear');\n    toolbar.appendToolbarItem(refreshButton);\n    toolbar.appendToolbarItem(clearButton);\n    refreshButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => this.onAction());\n    clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      this.resetSearch();\n      this.onSearchInputClear();\n    });\n\n    const searchStatusBarElement = this.contentElement.createChild('div', 'search-toolbar-summary');\n    this.searchMessageElement = searchStatusBarElement.createChild('div', 'search-message');\n    this.searchProgressPlaceholderElement = searchStatusBarElement.createChild('div', 'flex-centered');\n    this.searchResultsMessageElement = searchStatusBarElement.createChild('div', 'search-message');\n\n    this.advancedSearchConfig = Common.Settings.Settings.instance().createLocalSetting(\n        settingKey + '-search-config', new Workspace.SearchConfig.SearchConfig('', true, false).toPlainObject());\n\n    this.load();\n    this.searchScope = null;\n\n    this.#emptyStartView = new UI.EmptyWidget.EmptyWidget(\n        i18nString(UIStrings.noSearchResult), i18nString(UIStrings.typeAndPressSToSearch, {\n          PH1: UI.KeyboardShortcut.KeyboardShortcut.shortcutToString(UI.KeyboardShortcut.Keys.Enter)\n        }));\n    this.showPane(this.#emptyStartView);\n  }\n\n  regexButtonToggled(): void {\n    this.regexButton.title = this.regexButton.toggled ? i18nString(UIStrings.disableRegularExpression) :\n                                                        i18nString(UIStrings.enableRegularExpression);\n  }\n\n  matchCaseButtonToggled(): void {\n    this.matchCaseButton.title = this.matchCaseButton.toggled ? i18nString(UIStrings.disableCaseSensitive) :\n                                                                i18nString(UIStrings.enableCaseSensitive);\n  }\n\n  private buildSearchConfig(): Workspace.SearchConfig.SearchConfig {\n    return new Workspace.SearchConfig.SearchConfig(\n        this.search.value, !this.matchCaseButton.toggled, this.regexButton.toggled);\n  }\n\n  toggle(queryCandidate: string, searchImmediately?: boolean): void {\n    this.search.value = queryCandidate;\n    if (this.isShowing()) {\n      this.focus();\n    } else {\n      this.focusOnShow = true;\n    }\n\n    this.initScope();\n    if (searchImmediately) {\n      this.onAction();\n    } else {\n      this.startIndexing();\n    }\n  }\n\n  createScope(): SearchScope {\n    throw new Error('Not implemented');\n  }\n\n  private initScope(): void {\n    this.searchScope = this.createScope();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    if (this.focusOnShow) {\n      this.focus();\n      this.focusOnShow = false;\n    }\n  }\n\n  private onIndexingFinished(): void {\n    if (!this.progressIndicator) {\n      return;\n    }\n\n    const finished = !this.progressIndicator.isCanceled();\n    this.progressIndicator.done();\n    this.progressIndicator = null;\n    this.isIndexing = false;\n    this.searchMessageElement.textContent = finished ? '' : i18nString(UIStrings.indexingInterrupted);\n    if (!finished) {\n      this.pendingSearchConfig = null;\n    }\n    if (!this.pendingSearchConfig) {\n      return;\n    }\n    const searchConfig = this.pendingSearchConfig;\n    this.pendingSearchConfig = null;\n    this.innerStartSearch(searchConfig);\n  }\n\n  private startIndexing(): void {\n    this.isIndexing = true;\n    if (this.progressIndicator) {\n      this.progressIndicator.done();\n    }\n    this.progressIndicator = new UI.ProgressIndicator.ProgressIndicator();\n    this.searchMessageElement.textContent = i18nString(UIStrings.indexing);\n    this.progressIndicator.show(this.searchProgressPlaceholderElement);\n    if (this.searchScope) {\n      this.searchScope.performIndexing(\n          new Common.Progress.ProgressProxy(this.progressIndicator, this.onIndexingFinished.bind(this)));\n    }\n  }\n\n  private onSearchInputClear(): void {\n    this.search.value = '';\n    this.save();\n    this.focus();\n    this.showPane(this.#emptyStartView);\n  }\n\n  private onSearchResult(searchId: number, searchResult: SearchResult): void {\n    if (searchId !== this.searchId || !this.progressIndicator) {\n      return;\n    }\n    if (this.progressIndicator?.isCanceled()) {\n      this.onIndexingFinished();\n      return;\n    }\n    if (!this.searchResultsPane) {\n      this.searchResultsPane = new SearchResultsPane((this.searchConfig as Workspace.SearchConfig.SearchConfig));\n      this.showPane(this.searchResultsPane);\n    }\n    this.#pendingSearchResults.push(searchResult);\n    void this.#throttler.schedule(async () => this.#addPendingSearchResults());\n  }\n\n  #addPendingSearchResults(): void {\n    for (const searchResult of this.#pendingSearchResults) {\n      this.addSearchResult(searchResult);\n      if (searchResult.matchesCount()) {\n        this.searchResultsPane?.addSearchResult(searchResult);\n      }\n    }\n    this.#pendingSearchResults = [];\n  }\n\n  private onSearchFinished(searchId: number, finished: boolean): void {\n    if (searchId !== this.searchId || !this.progressIndicator) {\n      return;\n    }\n    if (!this.searchResultsPane) {\n      this.nothingFound();\n    }\n    this.searchFinished(finished);\n    this.searchConfig = null;\n    UI.ARIAUtils.LiveAnnouncer.alert(\n        this.searchMessageElement.textContent + ' ' + this.searchResultsMessageElement.textContent);\n  }\n\n  private innerStartSearch(searchConfig: Workspace.SearchConfig.SearchConfig): void {\n    this.searchConfig = searchConfig;\n    if (this.progressIndicator) {\n      this.progressIndicator.done();\n    }\n    this.progressIndicator = new UI.ProgressIndicator.ProgressIndicator();\n    this.searchStarted(this.progressIndicator);\n    if (this.searchScope) {\n      void this.searchScope.performSearch(\n          searchConfig, this.progressIndicator, this.onSearchResult.bind(this, this.searchId),\n          this.onSearchFinished.bind(this, this.searchId));\n    }\n  }\n\n  private resetSearch(): void {\n    this.stopSearch();\n    this.showPane(null);\n    this.searchResultsPane = null;\n    this.searchMessageElement.textContent = '';\n    this.searchResultsMessageElement.textContent = '';\n  }\n\n  private stopSearch(): void {\n    if (this.progressIndicator && !this.isIndexing) {\n      this.progressIndicator.cancel();\n    }\n    if (this.searchScope) {\n      this.searchScope.stopSearch();\n    }\n    this.searchConfig = null;\n  }\n\n  private searchStarted(progressIndicator: UI.ProgressIndicator.ProgressIndicator): void {\n    this.searchMatchesCount = 0;\n    this.searchResultsCount = 0;\n    this.nonEmptySearchResultsCount = 0;\n    if (!this.searchingView) {\n      this.searchingView = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.searching), '');\n    }\n    this.showPane(this.searchingView);\n    this.searchMessageElement.textContent = i18nString(UIStrings.searching);\n    progressIndicator.show(this.searchProgressPlaceholderElement);\n    this.updateSearchResultsMessage();\n  }\n\n  private updateSearchResultsMessage(): void {\n    if (this.searchMatchesCount && this.searchResultsCount) {\n      if (this.searchMatchesCount === 1 && this.nonEmptySearchResultsCount === 1) {\n        this.searchResultsMessageElement.textContent = i18nString(UIStrings.foundMatchingLineInFile);\n      } else if (this.searchMatchesCount > 1 && this.nonEmptySearchResultsCount === 1) {\n        this.searchResultsMessageElement.textContent =\n            i18nString(UIStrings.foundDMatchingLinesInFile, {PH1: this.searchMatchesCount});\n      } else {\n        this.searchResultsMessageElement.textContent = i18nString(\n            UIStrings.foundDMatchingLinesInDFiles,\n            {PH1: this.searchMatchesCount, PH2: this.nonEmptySearchResultsCount});\n      }\n    } else {\n      this.searchResultsMessageElement.textContent = '';\n    }\n  }\n\n  private showPane(panel: UI.Widget.Widget|null): void {\n    if (this.visiblePane) {\n      this.visiblePane.detach();\n    }\n    if (panel) {\n      panel.show(this.searchResultsElement);\n    }\n    this.visiblePane = panel;\n  }\n\n  private nothingFound(): void {\n    if (!this.notFoundView) {\n      this.notFoundView = new UI.EmptyWidget.EmptyWidget(\n          i18nString(UIStrings.noMatchesFound), i18nString(UIStrings.nothingMatchedTheQuery));\n    }\n    this.showPane(this.notFoundView);\n  }\n\n  private addSearchResult(searchResult: SearchResult): void {\n    const matchesCount = searchResult.matchesCount();\n    this.searchMatchesCount += matchesCount;\n    this.searchResultsCount++;\n    if (matchesCount) {\n      this.nonEmptySearchResultsCount++;\n    }\n    this.updateSearchResultsMessage();\n  }\n\n  private searchFinished(finished: boolean): void {\n    this.searchMessageElement.textContent =\n        finished ? i18nString(UIStrings.searchFinished) : i18nString(UIStrings.searchInterrupted);\n  }\n\n  override focus(): void {\n    this.search.focus();\n    this.search.select();\n  }\n\n  override willHide(): void {\n    this.stopSearch();\n  }\n\n  private onKeyDown(event: KeyboardEvent): void {\n    this.save();\n    switch (event.keyCode) {\n      case UI.KeyboardShortcut.Keys.Enter.code:\n        this.onAction();\n        break;\n    }\n  }\n\n  /**\n   * Handles keydown event on panel itself for handling expand/collapse all shortcut\n   *\n   * We use `event.code` instead of `event.key` here to check whether the shortcut is triggered.\n   * The reason is, `event.key` is dependent on the modification keys, locale and keyboard layout.\n   * Usually it is useful when we care about the character that needs to be printed.\n   *\n   * However, our aim in here is to assign a shortcut to the physical key combination on the keyboard\n   * not on the character that the key combination prints.\n   *\n   * For example, `Cmd + [` shortcut in global shortcuts map to focusing on previous panel.\n   * In Turkish - Q keyboard layout, the key combination that triggers the shortcut prints `ğ`\n   * character. Whereas in Turkish - Q Legacy keyboard layout, the shortcut that triggers focusing\n   * on previous panel prints `[` character. So, if we use `event.key` and check\n   * whether it is `[`, we break the shortcut in Turkish - Q keyboard layout.\n   *\n   * @param event KeyboardEvent\n   */\n  private onKeyDownOnPanel(event: KeyboardEvent): void {\n    const isMac = Host.Platform.isMac();\n    // \"Command + Alt + ]\" for Mac\n    const shouldShowAllForMac =\n        isMac && event.metaKey && !event.ctrlKey && event.altKey && event.code === 'BracketRight';\n    // \"Ctrl + Shift + }\" for other platforms\n    const shouldShowAllForOtherPlatforms =\n        !isMac && event.ctrlKey && !event.metaKey && event.shiftKey && event.code === 'BracketRight';\n    // \"Command + Alt + [\" for Mac\n    const shouldCollapseAllForMac =\n        isMac && event.metaKey && !event.ctrlKey && event.altKey && event.code === 'BracketLeft';\n    // \"Command + Alt + {\" for other platforms\n    const shouldCollapseAllForOtherPlatforms =\n        !isMac && event.ctrlKey && !event.metaKey && event.shiftKey && event.code === 'BracketLeft';\n\n    if (shouldShowAllForMac || shouldShowAllForOtherPlatforms) {\n      this.searchResultsPane?.showAllMatches();\n      void VisualLogging.logKeyDown(event.currentTarget, event, 'show-all-matches');\n    } else if (shouldCollapseAllForMac || shouldCollapseAllForOtherPlatforms) {\n      this.searchResultsPane?.collapseAllResults();\n      void VisualLogging.logKeyDown(event.currentTarget, event, 'collapse-all-results');\n    }\n  }\n\n  private save(): void {\n    this.advancedSearchConfig.set(this.buildSearchConfig().toPlainObject());\n  }\n\n  private load(): void {\n    const searchConfig = Workspace.SearchConfig.SearchConfig.fromPlainObject(this.advancedSearchConfig.get());\n    this.search.value = searchConfig.query();\n\n    this.matchCaseButton.toggled = !searchConfig.ignoreCase();\n    this.matchCaseButtonToggled();\n\n    this.regexButton.toggled = searchConfig.isRegex();\n    this.regexButtonToggled();\n  }\n\n  private onAction(): void {\n    const searchConfig = this.buildSearchConfig();\n    if (!searchConfig.query()?.length) {\n      return;\n    }\n    this.resetSearch();\n    ++this.searchId;\n    this.initScope();\n    if (!this.isIndexing) {\n      this.startIndexing();\n    }\n    this.pendingSearchConfig = searchConfig;\n  }\n\n  get throttlerForTest(): Common.Throttler.Throttler {\n    return this.#throttler;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2014 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.search-drawer-header {\n  align-items: center;\n  flex-shrink: 0;\n  overflow: hidden;\n  display: inline-flex;\n  min-width: 150px;\n\n  .search-container {\n    border-bottom: 1px solid var(--sys-color-divider);\n    display: flex;\n    height: 100%;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  .toolbar-item-search {\n    flex-grow: 1;\n    box-shadow: inset 0 0 0 2px transparent;\n    box-sizing: border-box;\n    height: var(--sys-size-9);\n    margin-left: var(--sys-size-3);\n    padding: 0 var(--sys-size-2) 0 var(--sys-size-5);\n    border-radius: 100px;\n    position: relative;\n    display: flex;\n    align-items: center;\n    background-color: var(--sys-color-cdt-base);\n\n    &:has(input:focus) {\n      box-shadow: inset 0 0 0 2px var(--sys-color-state-focus-ring);\n    }\n\n    &:has(input:hover)::before {\n      content: \"\";\n      box-sizing: inherit;\n      height: 100%;\n      width: 100%;\n      position: absolute;\n      border-radius: 100px;\n      left: 0;\n      background-color: var(--sys-color-state-hover-on-subtle);\n    }\n\n    & > devtools-icon {\n      color: var(--sys-color-on-surface-subtle);\n      width: var(--sys-size-8);\n      height: var(--sys-size-8);\n      margin-right: var(--sys-size-3);\n    }\n\n    & > devtools-button:last-child {\n      margin-right: var(--sys-size-4);\n    }\n  }\n\n  .search-toolbar-input {\n    appearance: none;\n    color: var(--sys-color-on-surface);\n    background-color: transparent;\n    border: 0;\n    z-index: 1;\n    flex: 1;\n\n    &::placeholder {\n      color: var(--sys-color-on-surface-subtle);\n    }\n\n    &:placeholder-shown + .clear-button {\n      display: none;\n    }\n\n    &::-webkit-search-cancel-button {\n      display: none;\n    }\n  }\n}\n\n.search-toolbar {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.search-toolbar-summary {\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n  padding-left: 5px;\n  flex: 0 0 19px;\n  display: flex;\n  padding-right: 5px;\n}\n\n.search-results:has(.empty-state) + .search-toolbar-summary {\n  display: none;\n}\n\n.search-toolbar-summary .search-message {\n  padding-top: 2px;\n  padding-left: 1ex;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.search-view .search-results {\n  overflow-y: auto;\n  display: flex;\n  flex: auto;\n}\n\n.search-view .search-results > div {\n  flex: auto;\n}\n\n/*# sourceURL=${import.meta.resolve('./searchView.css')} */`;"],
  "mappings": "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",
  "names": ["span", "Common", "i18n", "UI", "UIStrings", "str_", "i18nString", "toolbar", "panel"]
}
