{
  "version": 3,
  "sources": ["recorder-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Actions from './recorder-actions/recorder-actions.js';\nimport type * as Recorder from './recorder.js';\n\nconst UIStrings = {\n  /**\n   *@description Title of the Recorder Panel\n   */\n  recorder: 'Recorder',\n  /**\n   *@description Title of the Recorder Panel\n   */\n  showRecorder: 'Show Recorder',\n  /**\n   *@description Title of start/stop recording action in command menu\n   */\n  startStopRecording: 'Start/Stop recording',\n  /**\n   *@description Title of create a new recording action in command menu\n   */\n  createRecording: 'Create a new recording',\n  /**\n   *@description Title of start a new recording action in command menu\n   */\n  replayRecording: 'Replay recording',\n  /**\n   * @description Title for toggling code action in command menu\n   */\n  toggleCode: 'Toggle code view',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings(\n    'panels/recorder/recorder-meta.ts',\n    UIStrings,\n);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(\n    undefined,\n    str_,\n);\n\nlet loadedRecorderModule: typeof Recorder|undefined;\n\nasync function loadRecorderModule(): Promise<typeof Recorder> {\n  if (!loadedRecorderModule) {\n    loadedRecorderModule = await import('./recorder.js');\n  }\n  return loadedRecorderModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(\n    getClassCallBack: (loadedRecorderModule: typeof Recorder) => T[],\n    actionId: string,\n    ): T[] {\n  if (loadedRecorderModule === undefined) {\n    return [];\n  }\n  if (actionId &&\n      loadedRecorderModule.RecorderPanel.RecorderPanel.instance().isActionPossible(\n          actionId as Actions.RecorderActions,\n          )) {\n    return getClassCallBack(loadedRecorderModule);\n  }\n  return [];\n}\n\nconst viewId = 'chrome-recorder';\n(UI.ViewManager.defaultOptionsForTabs as Record<string, boolean>)[viewId] = true;\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: viewId,\n  commandPrompt: i18nLazyString(UIStrings.showRecorder),\n  title: i18nLazyString(UIStrings.recorder),\n  order: 90,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const Recorder = await loadRecorderModule();\n    return Recorder.RecorderPanel.RecorderPanel.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.RECORDER,\n  actionId: Actions.RecorderActions.CREATE_RECORDING,\n  title: i18nLazyString(UIStrings.createRecording),\n  async loadActionDelegate() {\n    const Recorder = await loadRecorderModule();\n    return new Recorder.RecorderPanel.ActionDelegate();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.RECORDER,\n  actionId: Actions.RecorderActions.START_RECORDING,\n  title: i18nLazyString(UIStrings.startStopRecording),\n  contextTypes() {\n    return maybeRetrieveContextTypes(\n        Recorder => [Recorder.RecorderPanel.RecorderPanel],\n        Actions.RecorderActions.START_RECORDING,\n    );\n  },\n  async loadActionDelegate() {\n    const Recorder = await loadRecorderModule();\n    return new Recorder.RecorderPanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      shortcut: 'Ctrl+E',\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n    },\n    {shortcut: 'Meta+E', platform: UI.ActionRegistration.Platforms.MAC},\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.RECORDER,\n  actionId: Actions.RecorderActions.REPLAY_RECORDING,\n  title: i18nLazyString(UIStrings.replayRecording),\n  contextTypes() {\n    return maybeRetrieveContextTypes(\n        Recorder => [Recorder.RecorderPanel.RecorderPanel],\n        Actions.RecorderActions.REPLAY_RECORDING,\n    );\n  },\n  async loadActionDelegate() {\n    const Recorder = await loadRecorderModule();\n    return new Recorder.RecorderPanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      shortcut: 'Ctrl+Enter',\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n    },\n    {shortcut: 'Meta+Enter', platform: UI.ActionRegistration.Platforms.MAC},\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.RECORDER,\n  actionId: Actions.RecorderActions.TOGGLE_CODE_VIEW,\n  title: i18nLazyString(UIStrings.toggleCode),\n  contextTypes() {\n    return maybeRetrieveContextTypes(\n        Recorder => [Recorder.RecorderPanel.RecorderPanel],\n        Actions.RecorderActions.TOGGLE_CODE_VIEW,\n    );\n  },\n  async loadActionDelegate() {\n    const Recorder = await loadRecorderModule();\n    return new Recorder.RecorderPanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      shortcut: 'Ctrl+B',\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n    },\n    {shortcut: 'Meta+B', platform: UI.ActionRegistration.Platforms.MAC},\n  ],\n});\n"],
  "mappings": ";AAIA,YAAY,UAAU;AACtB,YAAY,QAAQ;AAKpB,IAAM,YAAY;;;;EAIhB,UAAU;;;;EAIV,cAAc;;;;EAId,oBAAoB;;;;EAIpB,iBAAiB;;;;EAIjB,iBAAiB;;;;EAIjB,YAAY;;AAGd,IAAM,OAAY,UAAK,kBACnB,oCACA,SAAS;AAEb,IAAM,iBAAsB,UAAK,iCAAiC,KAC9D,QACA,IAAI;AAGR,IAAI;AAEJ,eAAe,qBAAkB;AAC/B,MAAI,CAAC,sBAAsB;AACzB,2BAAuB,MAAM,OAAO,eAAe;EACrD;AACA,SAAO;AACT;AAEA,SAAS,0BACL,kBACA,UAAgB;AAElB,MAAI,yBAAyB,QAAW;AACtC,WAAO,CAAA;EACT;AACA,MAAI,YACA,qBAAqB,cAAc,cAAc,SAAQ,EAAG,iBACxD,QAAmC,GAChC;AACT,WAAO,iBAAiB,oBAAoB;EAC9C;AACA,SAAO,CAAA;AACT;AAEA,IAAM,SAAS;AACX,eAAY,sBAAkD,MAAM,IAAI;AACzE,eAAY,sBAAsB;EACnC,UAAQ;EACR,IAAI;EACJ,eAAe,eAAe,UAAU,YAAY;EACpD,OAAO,eAAe,UAAU,QAAQ;EACxC,OAAO;EACP,aAAW;EACX,MAAM,WAAQ;AACZ,UAAM,WAAW,MAAM,mBAAkB;AACzC,WAAO,SAAS,cAAc,cAAc,SAAQ;EACtD;CACD;AAEE,sBAAmB,wBAAwB;EAC5C,UAAQ;EACR,UAAQ;EACR,OAAO,eAAe,UAAU,eAAe;EAC/C,MAAM,qBAAkB;AACtB,UAAM,WAAW,MAAM,mBAAkB;AACzC,WAAO,IAAI,SAAS,cAAc,eAAc;EAClD;CACD;AAEE,sBAAmB,wBAAwB;EAC5C,UAAQ;EACR,UAAQ;EACR,OAAO,eAAe,UAAU,kBAAkB;EAClD,eAAY;AACV,WAAO;MACH,cAAY,CAAC,SAAS,cAAc,aAAa;MAAC;;IAAA;EAGxD;EACA,MAAM,qBAAkB;AACtB,UAAM,WAAW,MAAM,mBAAkB;AACzC,WAAO,IAAI,SAAS,cAAc,eAAc;EAClD;EACA,UAAU;IACR;MACE,UAAU;MACV,UAAQ;;IAEV;MAAC,UAAU;MAAU,UAAQ;;IAAqC;;CAErE;AAEE,sBAAmB,wBAAwB;EAC5C,UAAQ;EACR,UAAQ;EACR,OAAO,eAAe,UAAU,eAAe;EAC/C,eAAY;AACV,WAAO;MACH,cAAY,CAAC,SAAS,cAAc,aAAa;MAAC;;IAAA;EAGxD;EACA,MAAM,qBAAkB;AACtB,UAAM,WAAW,MAAM,mBAAkB;AACzC,WAAO,IAAI,SAAS,cAAc,eAAc;EAClD;EACA,UAAU;IACR;MACE,UAAU;MACV,UAAQ;;IAEV;MAAC,UAAU;MAAc,UAAQ;;IAAqC;;CAEzE;AAEE,sBAAmB,wBAAwB;EAC5C,UAAQ;EACR,UAAQ;EACR,OAAO,eAAe,UAAU,UAAU;EAC1C,eAAY;AACV,WAAO;MACH,cAAY,CAAC,SAAS,cAAc,aAAa;MAAC;;IAAA;EAGxD;EACA,MAAM,qBAAkB;AACtB,UAAM,WAAW,MAAM,mBAAkB;AACzC,WAAO,IAAI,SAAS,cAAc,eAAc;EAClD;EACA,UAAU;IACR;MACE,UAAU;MACV,UAAQ;;IAEV;MAAC,UAAU;MAAU,UAAQ;;IAAqC;;CAErE;",
  "names": []
}
