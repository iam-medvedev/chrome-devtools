{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/recorder/controllers/SelectorPicker.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport type * as Lit from '../../../ui/lit/lit.js';\nimport * as Models from '../models/models.js';\nimport * as Util from '../util/util.js';\n\nconst BINDING_NAME = 'captureSelectors';\n\nexport class SelectorPickedEvent extends Event {\n  static readonly eventName = 'selectorpicked';\n  data: Models.Schema.StepWithSelectors&Pick<Models.Schema.ClickAttributes, 'offsetX'|'offsetY'>;\n\n  constructor(\n      data: Models.Schema.StepWithSelectors&Pick<Models.Schema.ClickAttributes, 'offsetX'|'offsetY'>,\n  ) {\n    super(SelectorPickedEvent.eventName, {bubbles: true, composed: true});\n    this.data = data;\n  }\n}\n\nexport class RequestSelectorAttributeEvent extends Event {\n  static readonly eventName = 'requestselectorattribute';\n  send: (attribute?: string) => void;\n\n  constructor(send: (attribute?: string) => void) {\n    super(RequestSelectorAttributeEvent.eventName, {\n      bubbles: true,\n      composed: true,\n    });\n    this.send = send;\n  }\n}\n\nexport class SelectorPicker implements SDK.TargetManager.Observer {\n  static get #targetManager(): SDK.TargetManager.TargetManager {\n    return SDK.TargetManager.TargetManager.instance();\n  }\n\n  readonly #element: Lit.LitElement;\n\n  #selectorAttribute?: string;\n\n  readonly #activeMutex = new Common.Mutex.Mutex();\n  active = false;\n\n  constructor(element: Lit.LitElement) {\n    this.#element = element;\n  }\n\n  start = (): Promise<void> => {\n    return this.#activeMutex.run(async () => {\n      if (this.active) {\n        return;\n      }\n      this.active = true;\n\n      this.#selectorAttribute = await new Promise<string|undefined>(\n          (resolve, reject) => {\n            const timeout = setTimeout(reject, 1000);\n            this.#element.dispatchEvent(\n                new RequestSelectorAttributeEvent(attribute => {\n                  clearTimeout(timeout);\n                  resolve(attribute);\n                }),\n            );\n          },\n      );\n\n      SelectorPicker.#targetManager.observeTargets(this);\n\n      this.#element.requestUpdate();\n    });\n  };\n\n  stop = (): Promise<void> => {\n    return this.#activeMutex.run(async () => {\n      if (!this.active) {\n        return;\n      }\n      this.active = false;\n\n      SelectorPicker.#targetManager.unobserveTargets(this);\n      SelectorPicker.#targetManager.targets().map(this.targetRemoved.bind(this));\n\n      this.#selectorAttribute = undefined;\n\n      this.#element.requestUpdate();\n    });\n  };\n\n  toggle = (): Promise<void> => {\n    if (!this.active) {\n      return this.start();\n    }\n    return this.stop();\n  };\n\n  readonly #targetMutexes = new Map<SDK.Target.Target, Common.Mutex.Mutex>();\n  targetAdded(target: SDK.Target.Target): void {\n    if (target.type() !== SDK.Target.Type.FRAME) {\n      return;\n    }\n    let mutex = this.#targetMutexes.get(target);\n    if (!mutex) {\n      mutex = new Common.Mutex.Mutex();\n      this.#targetMutexes.set(target, mutex);\n    }\n    void mutex.run(async () => {\n      await this.#addBindings(target);\n      await this.#injectApplicationScript(target);\n    });\n  }\n  targetRemoved(target: SDK.Target.Target): void {\n    const mutex = this.#targetMutexes.get(target);\n    if (!mutex) {\n      return;\n    }\n    void mutex.run(async () => {\n      try {\n        await this.#injectCleanupScript(target);\n        await this.#removeBindings(target);\n      } catch {\n      }\n    });\n  }\n\n  #handleBindingCalledEvent = (\n      event: Common.EventTarget.EventTargetEvent<Protocol.Runtime.BindingCalledEvent>,\n      ): void => {\n    if (event.data.name !== BINDING_NAME) {\n      return;\n    }\n    const contextId = event.data.executionContextId;\n    const frames = SDK.TargetManager.TargetManager.instance().targets();\n    const contextTarget = Models.SDKUtils.findTargetByExecutionContext(\n        frames,\n        contextId,\n    );\n    const frameId = Models.SDKUtils.findFrameIdByExecutionContext(\n        frames,\n        contextId,\n    );\n    if (!contextTarget || !frameId) {\n      throw new Error(\n          `No execution context found for the binding call + ${\n              JSON.stringify(\n                  event.data,\n                  )}`,\n      );\n    }\n    const model = contextTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!model) {\n      throw new Error(\n          `ResourceTreeModel instance is missing for the target: ${contextTarget.id()}`,\n      );\n    }\n    const frame = model.frameForId(frameId);\n    if (!frame) {\n      throw new Error('Frame is not found');\n    }\n    this.#element.dispatchEvent(\n        new SelectorPickedEvent({\n          ...JSON.parse(event.data.payload),\n          ...Models.SDKUtils.getTargetFrameContext(contextTarget, frame),\n        }),\n    );\n    void this.stop();\n  };\n\n  readonly #scriptIdentifier = new Map<SDK.Target.Target, Protocol.Page.ScriptIdentifier>();\n  async #injectApplicationScript(target: SDK.Target.Target): Promise<void> {\n    const injectedScript = await Util.InjectedScript.get();\n    const script = `${injectedScript};DevToolsRecorder.startSelectorPicker({getAccessibleName, getAccessibleRole}, ${\n        JSON.stringify(this.#selectorAttribute ? this.#selectorAttribute : undefined)}, ${Util.isDebugBuild})`;\n    const [{identifier}] = await Promise.all([\n      target.pageAgent().invoke_addScriptToEvaluateOnNewDocument({\n        source: script,\n        worldName: Util.DEVTOOLS_RECORDER_WORLD_NAME,\n        includeCommandLineAPI: true,\n      }),\n      Models.SDKUtils.evaluateInAllFrames(Util.DEVTOOLS_RECORDER_WORLD_NAME, target, script),\n    ]);\n    this.#scriptIdentifier.set(target, identifier);\n  }\n  async #injectCleanupScript(target: SDK.Target.Target): Promise<void> {\n    const identifier = this.#scriptIdentifier.get(target);\n    Platform.assertNotNullOrUndefined(identifier);\n    this.#scriptIdentifier.delete(target);\n    await target.pageAgent().invoke_removeScriptToEvaluateOnNewDocument({identifier});\n    const script = 'DevToolsRecorder.stopSelectorPicker()';\n    await Models.SDKUtils.evaluateInAllFrames(Util.DEVTOOLS_RECORDER_WORLD_NAME, target, script);\n  }\n\n  async #addBindings(target: SDK.Target.Target): Promise<void> {\n    const model = target.model(SDK.RuntimeModel.RuntimeModel);\n    Platform.assertNotNullOrUndefined(model);\n    model.addEventListener(SDK.RuntimeModel.Events.BindingCalled, this.#handleBindingCalledEvent);\n    await model.addBinding({\n      name: BINDING_NAME,\n      executionContextName: Util.DEVTOOLS_RECORDER_WORLD_NAME,\n    });\n  }\n  async #removeBindings(target: SDK.Target.Target): Promise<void> {\n    await target.runtimeAgent().invoke_removeBinding({name: BINDING_NAME});\n    const model = target.model(SDK.RuntimeModel.RuntimeModel);\n    Platform.assertNotNullOrUndefined(model);\n    model.removeEventListener(SDK.RuntimeModel.Events.BindingCalled, this.#handleBindingCalledEvent);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
