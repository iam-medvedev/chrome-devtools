{"version":3,"file":"RecordingListView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/components/RecordingListView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/icon_button/icon_button.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Models from '../models/models.js';\nimport * as Actions from '../recorder-actions/recorder-actions.js';\n\nimport recordingListViewStyles from './recordingListView.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description The title of the page that contains a list of saved recordings that the user has..\n   */\n  savedRecordings: 'Saved recordings',\n  /**\n   * @description The title of the button that leads to create a new recording page.\n   */\n  createRecording: 'Create a new recording',\n  /**\n   * @description The title of the button that is shown next to each of the recordings and that triggers playing of the recording.\n   */\n  playRecording: 'Play recording',\n  /**\n   * @description The title of the button that is shown next to each of the recordings and that triggers deletion of the recording.\n   */\n  deleteRecording: 'Delete recording',\n  /**\n   * @description The title of the row corresponding to a recording. By clicking on the row, the user open the recording for editing.\n   */\n  openRecording: 'Open recording',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings(\n    'panels/recorder/components/RecordingListView.ts',\n    UIStrings,\n);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-recording-list-view': RecordingListView;\n  }\n\n  interface HTMLElementEventMap {\n    openrecording: OpenRecordingEvent;\n    deleterecording: DeleteRecordingEvent;\n  }\n}\n\nexport class CreateRecordingEvent extends Event {\n  static readonly eventName = 'createrecording';\n  constructor() {\n    super(CreateRecordingEvent.eventName, {composed: true, bubbles: true});\n  }\n}\n\nexport class DeleteRecordingEvent extends Event {\n  static readonly eventName = 'deleterecording';\n  constructor(public storageName: string) {\n    super(DeleteRecordingEvent.eventName, {composed: true, bubbles: true});\n  }\n}\n\nexport class OpenRecordingEvent extends Event {\n  static readonly eventName = 'openrecording';\n  constructor(public storageName: string) {\n    super(OpenRecordingEvent.eventName, {composed: true, bubbles: true});\n  }\n}\n\nexport class PlayRecordingEvent extends Event {\n  static readonly eventName = 'playrecording';\n  constructor(public storageName: string) {\n    super(PlayRecordingEvent.eventName, {composed: true, bubbles: true});\n  }\n}\n\ninterface Recording {\n  storageName: string;\n  name: string;\n}\n\ninterface ViewInput {\n  recordings: readonly Recording[];\n  replayAllowed: boolean;\n  onCreateClick: () => void;\n  onDeleteClick: (storageName: string, event: Event) => void;\n  onOpenClick: (storageName: string, event: Event) => void;\n  onPlayRecordingClick: (storageName: string, event: Event) => void;\n  onKeyDown: (storageName: string, event: Event) => void;\n}\n\nexport type ViewOutput = object;\n\nexport const DEFAULT_VIEW = (input: ViewInput, _output: ViewOutput, target: HTMLElement): void => {\n  const {\n    recordings,\n    replayAllowed,\n    onCreateClick,\n    onDeleteClick,\n    onOpenClick,\n    onPlayRecordingClick,\n    onKeyDown,\n  } = input;\n  // clang-format off\n  Lit.render(\n    html`\n      <style>${recordingListViewStyles}</style>\n      <div class=\"wrapper\">\n        <div class=\"header\">\n          <h1>${i18nString(UIStrings.savedRecordings)}</h1>\n          <devtools-button\n            .variant=${Buttons.Button.Variant.PRIMARY}\n            @click=${onCreateClick}\n            title=${Models.Tooltip.getTooltipForActions(\n              i18nString(UIStrings.createRecording),\n              Actions.RecorderActions.CREATE_RECORDING,\n            )}\n            .jslogContext=${'create-recording'}\n          >\n            ${i18nString(UIStrings.createRecording)}\n          </devtools-button>\n        </div>\n        <div class=\"table\">\n          ${recordings.map(recording => {\n            return html`\n                <div\n                  role=\"button\"\n                  tabindex=\"0\"\n                  aria-label=${i18nString(UIStrings.openRecording)}\n                  class=\"row\"\n                  @keydown=${(event: Event) => onKeyDown(recording.storageName, event)}\n                  @click=${(event: Event) => onOpenClick(recording.storageName, event)}\n                  jslog=${VisualLogging.item()\n                    .track({ click: true })\n                    .context('recording')}>\n                  <div class=\"icon\">\n                    <devtools-icon name=\"flow\">\n                    </devtools-icon>\n                  </div>\n                  <div class=\"title\">${recording.name}</div>\n                  <div class=\"actions\">\n                    ${\n                      replayAllowed\n                        ? html`\n                              <devtools-button\n                                title=${i18nString(UIStrings.playRecording)}\n                                .data=${\n                                  {\n                                    variant: Buttons.Button.Variant.ICON,\n                                    iconName: 'play',\n                                     jslogContext: 'play-recording',\n                                  } as Buttons.Button.ButtonData\n                                }\n                                @click=${(event: Event) => onPlayRecordingClick(recording.storageName, event)}\n                                @keydown=${(event: Event) => event.stopPropagation()}\n                              ></devtools-button>\n                              <div class=\"divider\"></div>`\n                        : ''\n                    }\n                    <devtools-button\n                      class=\"delete-recording-button\"\n                      title=${i18nString(UIStrings.deleteRecording)}\n                      .data=${\n                        {\n                          variant: Buttons.Button.Variant.ICON,\n                          iconName: 'bin',\n                          jslogContext: 'delete-recording',\n                        } as Buttons.Button.ButtonData\n                      }\n                      @click=${(event: Event) => onDeleteClick(recording.storageName, event)}\n                      @keydown=${(event: Event) => event.stopPropagation()}\n                    ></devtools-button>\n                  </div>\n                </div>\n              `;\n          })}\n        </div>\n      </div>\n    `,\n    target,\n  );\n  // clang-format on\n};\n\nexport class RecordingListView extends UI.Widget.Widget {\n  #recordings: readonly Recording[] = [];\n  #replayAllowed = true;\n  #view: typeof DEFAULT_VIEW;\n\n  constructor(element?: HTMLElement, view?: typeof DEFAULT_VIEW) {\n    super(element, {useShadowDom: true});\n    this.#view = view || DEFAULT_VIEW;\n  }\n\n  set recordings(recordings: readonly Recording[]) {\n    this.#recordings = recordings;\n    this.performUpdate();\n  }\n\n  set replayAllowed(value: boolean) {\n    this.#replayAllowed = value;\n    this.performUpdate();\n  }\n\n  #onCreateClick(): void {\n    this.contentElement.dispatchEvent(new CreateRecordingEvent());\n  }\n\n  #onDeleteClick(storageName: string, event: Event): void {\n    event.stopPropagation();\n    this.contentElement.dispatchEvent(new DeleteRecordingEvent(storageName));\n  }\n\n  #onOpenClick(storageName: string, event: Event): void {\n    event.stopPropagation();\n    this.contentElement.dispatchEvent(new OpenRecordingEvent(storageName));\n  }\n\n  #onPlayRecordingClick(storageName: string, event: Event): void {\n    event.stopPropagation();\n    this.contentElement.dispatchEvent(new PlayRecordingEvent(storageName));\n  }\n\n  #onKeyDown(storageName: string, event: Event): void {\n    if ((event as KeyboardEvent).key !== 'Enter') {\n      return;\n    }\n    this.#onOpenClick(storageName, event);\n  }\n\n  override performUpdate(): void {\n    this.#view(\n        {\n          recordings: this.#recordings,\n          replayAllowed: this.#replayAllowed,\n          onCreateClick: this.#onCreateClick.bind(this),\n          onDeleteClick: this.#onDeleteClick.bind(this),\n          onOpenClick: this.#onOpenClick.bind(this),\n          onPlayRecordingClick: this.#onPlayRecordingClick.bind(this),\n          onKeyDown: this.#onKeyDown.bind(this),\n        },\n        {}, this.contentElement);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.performUpdate();\n  }\n}\n"]}