{"version":3,"file":"RecordingView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/components/RecordingView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/icon_button/icon_button.js';\nimport './ExtensionView.js';\nimport './ControlButton.js';\nimport './ReplaySection.js';\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport type * as PublicExtensions from '../../../models/extensions/extensions.js';\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\nimport type * as PuppeteerReplay from '../../../third_party/puppeteer-replay/puppeteer-replay.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as CodeHighlighter from '../../../ui/components/code_highlighter/code_highlighter.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport type * as Menus from '../../../ui/components/menus/menus.js';\nimport * as TextEditor from '../../../ui/components/text_editor/text_editor.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport type * as Converters from '../converters/converters.js';\nimport type * as Extensions from '../extensions/extensions.js';\nimport * as Models from '../models/models.js';\nimport {PlayRecordingSpeed} from '../models/RecordingPlayer.js';\nimport * as Actions from '../recorder-actions/recorder-actions.js';\n\nimport recordingViewStyles from './recordingView.css.js';\nimport type {ReplaySectionData, StartReplayEvent} from './ReplaySection.js';\nimport {\n  type CopyStepEvent,\n  State,\n  type StepView,\n  type StepViewData,\n} from './StepView.js';\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Depicts that the recording was done on a mobile device (e.g., a smartphone or tablet).\n   */\n  mobile: 'Mobile',\n  /**\n   * @description Depicts that the recording was done on a desktop device (e.g., on a PC or laptop).\n   */\n  desktop: 'Desktop',\n  /**\n   * @description Network latency in milliseconds.\n   * @example {10} value\n   */\n  latency: 'Latency: {value} ms',\n  /**\n   * @description Upload speed.\n   * @example {42 kB} value\n   */\n  upload: 'Upload: {value}',\n  /**\n   * @description Download speed.\n   * @example {8 kB} value\n   */\n  download: 'Download: {value}',\n  /**\n   * @description Title of the button to edit replay settings.\n   */\n  editReplaySettings: 'Edit replay settings',\n  /**\n   * @description Title of the section that contains replay settings.\n   */\n  replaySettings: 'Replay settings',\n  /**\n   * @description The string is shown when a default value is used for some replay settings.\n   */\n  default: 'Default',\n  /**\n   * @description The title of the section with environment settings.\n   */\n  environment: 'Environment',\n  /**\n   * @description The title of the screenshot image that is shown for every section in the recordign view.\n   */\n  screenshotForSection: 'Screenshot for this section',\n  /**\n   * @description The title of the button that edits the current recording's title.\n   */\n  editTitle: 'Edit title',\n  /**\n   * @description The error for when the title is missing.\n   */\n  requiredTitleError: 'Title is required',\n  /**\n   * @description The status text that is shown while the recording is ongoing.\n   */\n  recording: 'Recording…',\n  /**\n   * @description The title of the button to end the current recording.\n   */\n  endRecording: 'End recording',\n  /**\n   * @description The title of the button while the recording is being ended.\n   */\n  recordingIsBeingStopped: 'Stopping recording…',\n  /**\n   * @description The text that describes a timeout setting of {value} milliseconds.\n   * @example {1000} value\n   */\n  timeout: 'Timeout: {value} ms',\n  /**\n   * @description The label for the input that allows entering network throttling configuration.\n   */\n  network: 'Network',\n  /**\n   * @description The label for the input that allows entering timeout (a number in ms) configuration.\n   */\n  timeoutLabel: 'Timeout',\n  /**\n   * @description The text in a tooltip for the timeout input that explains what timeout settings do.\n   */\n  timeoutExplanation:\n      'The timeout setting (in milliseconds) applies to every action when replaying the recording. For example, if a DOM element identified by a CSS selector does not appear on the page within the specified timeout, the replay fails with an error.',\n  /**\n   * @description The label for the button that cancels replaying.\n   */\n  cancelReplay: 'Cancel replay',\n  /**\n   * @description Button title that shows the code view when clicked.\n   */\n  showCode: 'Show code',\n  /**\n   * @description Button title that hides the code view when clicked.\n   */\n  hideCode: 'Hide code',\n  /**\n   * @description Button title that adds an assertion to the step editor.\n   */\n  addAssertion: 'Add assertion',\n  /**\n   * @description The title of the button that open current recording in Performance panel.\n   */\n  performancePanel: 'Performance panel',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings(\n    'panels/recorder/components/RecordingView.ts',\n    UIStrings,\n);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-recording-view': RecordingView;\n  }\n}\n\nexport interface ReplayState {\n  isPlaying: boolean;             // Replay is in progress\n  isPausedOnBreakpoint: boolean;  // Replay is in progress and is in stopped state\n}\n\nexport const enum TargetPanel {\n  PERFORMANCE_PANEL = 'timeline',\n  DEFAULT = 'chrome-recorder',\n}\n\nexport interface PlayRecordingEvent {\n  targetPanel: TargetPanel;\n  speed: PlayRecordingSpeed;\n  extension?: Extensions.ExtensionManager.Extension;\n}\n\nconst networkConditionPresets = [\n  SDK.NetworkManager.NoThrottlingConditions,\n  SDK.NetworkManager.OfflineConditions,\n  SDK.NetworkManager.Slow3GConditions,\n  SDK.NetworkManager.Slow4GConditions,\n  SDK.NetworkManager.Fast4GConditions,\n];\n\nfunction converterIdToFlowMetric(\n    converterId: string,\n    ): Host.UserMetrics.RecordingCopiedToClipboard {\n  switch (converterId) {\n    case Models.ConverterIds.ConverterIds.PUPPETEER:\n    case Models.ConverterIds.ConverterIds.PUPPETEER_FIREFOX:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_RECORDING_WITH_PUPPETEER;\n    case Models.ConverterIds.ConverterIds.JSON:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_RECORDING_WITH_JSON;\n    case Models.ConverterIds.ConverterIds.REPLAY:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_RECORDING_WITH_REPLAY;\n    default:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_RECORDING_WITH_EXTENSION;\n  }\n}\n\nfunction converterIdToStepMetric(\n    converterId: string,\n    ): Host.UserMetrics.RecordingCopiedToClipboard {\n  switch (converterId) {\n    case Models.ConverterIds.ConverterIds.PUPPETEER:\n    case Models.ConverterIds.ConverterIds.PUPPETEER_FIREFOX:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_STEP_WITH_PUPPETEER;\n    case Models.ConverterIds.ConverterIds.JSON:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_STEP_WITH_JSON;\n    case Models.ConverterIds.ConverterIds.REPLAY:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_STEP_WITH_REPLAY;\n    default:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_STEP_WITH_EXTENSION;\n  }\n}\n\nfunction renderSettings({\n  settings,\n  replaySettingsExpanded,\n  onSelectMenuLabelClick,\n  onNetworkConditionsChange,\n  onTimeoutInput,\n  isRecording,\n  replayState,\n  onReplaySettingsKeydown,\n  onToggleReplaySettings\n}: ViewInput): Lit.TemplateResult {\n  if (!settings) {\n    return html``;\n  }\n  const environmentFragments = [];\n  if (settings.viewportSettings) {\n    // clang-format off\n    environmentFragments.push(\n      html`<div>${\n        settings.viewportSettings.isMobile\n          ? i18nString(UIStrings.mobile)\n          : i18nString(UIStrings.desktop)\n      }</div>`,\n    );\n    environmentFragments.push(html`<div class=\"separator\"></div>`);\n    environmentFragments.push(\n      html`<div>${settings.viewportSettings.width}×${\n        settings.viewportSettings.height\n      } px</div>`,\n    );\n    // clang-format on\n  }\n  const replaySettingsFragments = [];\n  if (!replaySettingsExpanded) {\n    if (settings.networkConditionsSettings) {\n      if (settings.networkConditionsSettings.title) {\n        // clang-format off\n        replaySettingsFragments.push(\n          html`<div>${\n            settings.networkConditionsSettings.title\n          }</div>`,\n        );\n        // clang-format on\n      } else {\n        // clang-format off\n        replaySettingsFragments.push(html`<div>\n          ${i18nString(UIStrings.download, {\n            value: i18n.ByteUtilities.bytesToString(\n              settings.networkConditionsSettings.download,\n            ),\n          })},\n          ${i18nString(UIStrings.upload, {\n            value: i18n.ByteUtilities.bytesToString(\n              settings.networkConditionsSettings.upload,\n            ),\n          })},\n          ${i18nString(UIStrings.latency, {\n            value: settings.networkConditionsSettings.latency,\n          })}\n        </div>`);\n        // clang-format on\n      }\n    } else {\n      // clang-format off\n      replaySettingsFragments.push(\n        html`<div>${\n          SDK.NetworkManager.NoThrottlingConditions.title instanceof Function\n            ? SDK.NetworkManager.NoThrottlingConditions.title()\n            : SDK.NetworkManager.NoThrottlingConditions.title\n        }</div>`,\n      );\n      // clang-format on\n    }\n    // clang-format off\n    replaySettingsFragments.push(html`<div class=\"separator\"></div>`);\n    replaySettingsFragments.push(\n      html`<div>${i18nString(UIStrings.timeout, {\n        value: settings.timeout || Models.RecordingPlayer.defaultTimeout,\n      })}</div>`,\n    );\n    // clang-format on\n  } else {\n    // clang-format off\n    const selectedOption =\n      settings.networkConditionsSettings?.i18nTitleKey ||\n      SDK.NetworkManager.NoThrottlingConditions.i18nTitleKey;\n    const selectedOptionTitle = networkConditionPresets.find(\n      preset => preset.i18nTitleKey === selectedOption,\n    );\n    let menuButtonTitle = '';\n    if (selectedOptionTitle) {\n      menuButtonTitle =\n        selectedOptionTitle.title instanceof Function\n          ? selectedOptionTitle.title()\n          : selectedOptionTitle.title;\n    }\n\n    replaySettingsFragments.push(html`<div class=\"editable-setting\">\n      <label class=\"wrapping-label\" @click=${onSelectMenuLabelClick}>\n        ${i18nString(UIStrings.network)}\n        <select\n            title=${menuButtonTitle}\n            jslog=${VisualLogging.dropDown('network-conditions').track({change: true})}\n            @change=${onNetworkConditionsChange}>\n      ${networkConditionPresets.map(condition => html`\n        <option jslog=${VisualLogging.item(Platform.StringUtilities.toKebabCase(condition.i18nTitleKey || ''))}\n                value=${condition.i18nTitleKey || ''} ?selected=${selectedOption === condition.i18nTitleKey}>\n                ${\n                  condition.title instanceof Function\n                    ? condition.title()\n                    : condition.title\n                }\n        </option>`)}\n    </select>\n      </label>\n    </div>`);\n    replaySettingsFragments.push(html`<div class=\"editable-setting\">\n      <label class=\"wrapping-label\" title=${i18nString(\n        UIStrings.timeoutExplanation,\n      )}>\n        ${i18nString(UIStrings.timeoutLabel)}\n        <input\n          @input=${onTimeoutInput}\n          required\n          min=${Models.SchemaUtils.minTimeout}\n          max=${Models.SchemaUtils.maxTimeout}\n          value=${\n            settings.timeout || Models.RecordingPlayer.defaultTimeout\n          }\n          jslog=${VisualLogging.textField('timeout').track({change: true})}\n          class=\"devtools-text-input\"\n          type=\"number\">\n      </label>\n    </div>`);\n    // clang-format on\n  }\n  const isEditable = !isRecording && !replayState.isPlaying;\n  const replaySettingsButtonClassMap = {\n    'settings-title': true,\n    expanded: replaySettingsExpanded,\n  };\n  const replaySettingsClassMap = {\n    expanded: replaySettingsExpanded,\n    settings: true,\n  };\n  // clang-format off\n  return html`\n    <div class=\"settings-row\">\n      <div class=\"settings-container\">\n        <div\n          class=${Lit.Directives.classMap(replaySettingsButtonClassMap)}\n          @keydown=${isEditable && onReplaySettingsKeydown}\n          @click=${isEditable && onToggleReplaySettings}\n          tabindex=\"0\"\n          role=\"button\"\n          jslog=${VisualLogging.action('replay-settings').track({click: true})}\n          aria-label=${i18nString(UIStrings.editReplaySettings)}>\n          <span>${i18nString(UIStrings.replaySettings)}</span>\n          ${\n            isEditable\n              ? html`<devtools-icon\n                  class=\"chevron\"\n                  name=\"triangle-down\">\n                </devtools-icon>`\n              : ''\n          }\n        </div>\n        <div class=${Lit.Directives.classMap(replaySettingsClassMap)}>\n          ${\n            replaySettingsFragments.length\n              ? replaySettingsFragments\n              : html`<div>${i18nString(UIStrings.default)}</div>`\n          }\n        </div>\n      </div>\n      <div class=\"settings-container\">\n        <div class=\"settings-title\">${i18nString(UIStrings.environment)}</div>\n        <div class=\"settings\">\n          ${\n            environmentFragments.length\n              ? environmentFragments\n              : html`<div>${i18nString(UIStrings.default)}</div>`\n          }\n        </div>\n      </div>\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderTimelineArea(input: ViewInput, output: ViewOutput): Lit.LitTemplate {\n  if (input.extensionDescriptor) {\n    // clang-format off\n      return html`\n        <devtools-recorder-extension-view .descriptor=${input.extensionDescriptor}>\n        </devtools-recorder-extension-view>\n      `;\n    // clang-format on\n  }\n  // clang-format off\n    /* eslint-disable rulesdir/no-deprecated-component-usages */\n    return html`\n        <devtools-split-view\n          direction=\"auto\"\n          sidebar-position=\"second\"\n          sidebar-initial-size=\"300\"\n          sidebar-visibility=${input.showCodeView ? '' : 'hidden'}\n        >\n          <div slot=\"main\">\n            ${renderSections(input)}\n          </div>\n          <div slot=\"sidebar\" jslog=${VisualLogging.pane('source-code').track({resize: true})}>\n            ${input.showCodeView ? html`\n            <div class=\"section-toolbar\" jslog=${VisualLogging.toolbar()}>\n              <devtools-select-menu\n                @selectmenuselected=${input.onCodeFormatChange}\n                .showDivider=${true}\n                .showArrow=${true}\n                .sideButton=${false}\n                .showSelectedItem=${true}\n                .position=${Dialogs.Dialog.DialogVerticalPosition.BOTTOM}\n                .buttonTitle=${input.converterName || ''}\n                .jslogContext=${'code-format'}\n              >\n                ${input.builtInConverters.map(converter => {\n                  return html`<devtools-menu-item\n                    .value=${converter.getId()}\n                    .selected=${input.converterId === converter.getId()}\n                    jslog=${VisualLogging.action().track({click: true}).context(`converter-${Platform.StringUtilities.toKebabCase(converter.getId())}`)}\n                  >\n                    ${converter.getFormatName()}\n                  </devtools-menu-item>`;\n                })}\n                ${input.extensionConverters.map(converter => {\n                  return html`<devtools-menu-item\n                    .value=${converter.getId()}\n                    .selected=${input.converterId === converter.getId()}\n                    jslog=${VisualLogging.action().track({click: true}).context('converter-extension')}\n                  >\n                    ${converter.getFormatName()}\n                  </devtools-menu-item>`;\n                })}\n              </devtools-select-menu>\n              <devtools-button\n                title=${Models.Tooltip.getTooltipForActions(\n                  i18nString(UIStrings.hideCode),\n                  Actions.RecorderActions.TOGGLE_CODE_VIEW,\n                )}\n                .data=${\n                  {\n                    variant: Buttons.Button.Variant.ICON,\n                    size: Buttons.Button.Size.SMALL,\n                    iconName: 'cross',\n                  } as Buttons.Button.ButtonData\n                }\n                @click=${input.showCodeToggle}\n                jslog=${VisualLogging.close().track({click: true})}\n              ></devtools-button>\n            </div>\n            ${renderTextEditor(input, output)}`\n            : Lit.nothing}\n          </div>\n        </devtools-split-view>\n      `;\n    /* eslint-enable rulesdir/no-deprecated-component-usages */\n  // clang-format on\n}\n\nfunction renderTextEditor(input: ViewInput, output: ViewOutput): Lit.TemplateResult {\n  if (!input.editorState) {\n    throw new Error('Unexpected: trying to render the text editor without editorState');\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"text-editor\" jslog=${VisualLogging.textField().track({change: true})}>\n      <devtools-text-editor .state=${input.editorState} ${Lit.Directives.ref((editor: Element | undefined) => {\n        if (!editor || !(editor instanceof TextEditor.TextEditor.TextEditor)) {\n          return;\n        }\n        output.highlightLinesInEditor = (line: number, length: number, scroll = false) => {\n          const cm = editor.editor;\n          let selection = editor.createSelection(\n              {lineNumber: line + length, columnNumber: 0},\n              {lineNumber: line, columnNumber: 0},\n          );\n          const lastLine = editor.state.doc.lineAt(selection.main.anchor);\n          selection = editor.createSelection(\n              {lineNumber: line + length - 1, columnNumber: lastLine.length + 1},\n              {lineNumber: line, columnNumber: 0},\n          );\n\n          cm.dispatch({\n            selection,\n            effects: scroll ?\n                [\n                  CodeMirror.EditorView.scrollIntoView(selection.main, {\n                    y: 'nearest',\n                  }),\n                ] :\n                undefined,\n          });\n        };\n      })}></devtools-text-editor>\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderScreenshot(\n    section: Models.Section.Section,\n    ): Lit.TemplateResult|null {\n  if (!section.screenshot) {\n    return null;\n  }\n\n  // clang-format off\n    return html`\n      <img class=\"screenshot\" src=${section.screenshot} alt=${i18nString(\n      UIStrings.screenshotForSection,\n    )} />\n    `;\n  // clang-format on\n}\n\nfunction renderReplayOrAbortButton(input: ViewInput): Lit.LitTemplate {\n  if (input.replayState.isPlaying) {\n    return html`\n        <devtools-button .jslogContext=${'abort-replay'} @click=${input.onAbortReplay} .iconName=${'pause'} .variant=${\n        Buttons.Button.Variant.OUTLINED}>\n          ${i18nString(UIStrings.cancelReplay)}\n        </devtools-button>`;\n  }\n\n  if (!input.recorderSettings) {\n    return Lit.nothing;\n  }\n\n  // clang-format off\n    return html`<devtools-replay-section\n        .data=${\n          {\n            settings: input.recorderSettings,\n            replayExtensions: input.replayExtensions,\n          } as ReplaySectionData\n        }\n        .disabled=${input.replayState.isPlaying}\n        @startreplay=${input.onTogglePlaying}\n        >\n      </devtools-replay-section>`;\n  // clang-format on\n}\n\nfunction renderSections(input: ViewInput): Lit.LitTemplate {\n  // clang-format off\n    return html`\n      <div class=\"sections\">\n      ${\n        !input.showCodeView\n          ? html`<div class=\"section-toolbar\">\n        <devtools-button\n          @click=${input.showCodeToggle}\n          class=\"show-code\"\n          .data=${\n            {\n              variant: Buttons.Button.Variant.OUTLINED,\n              title: Models.Tooltip.getTooltipForActions(\n                i18nString(UIStrings.showCode),\n                Actions.RecorderActions.TOGGLE_CODE_VIEW,\n              ),\n            } as Buttons.Button.ButtonData\n          }\n          jslog=${VisualLogging.toggleSubpane(Actions.RecorderActions.TOGGLE_CODE_VIEW).track({click: true})}\n        >\n          ${i18nString(UIStrings.showCode)}\n        </devtools-button>\n      </div>`\n          : ''\n      }\n      ${input.sections.map(\n        (section, i) => html`\n            <div class=\"section\">\n              <div class=\"screenshot-wrapper\">\n                ${renderScreenshot(section)}\n              </div>\n              <div class=\"content\">\n                <div class=\"steps\">\n                  <devtools-step-view\n                    @click=${input.onStepClick}\n                    @mouseover=${input.onStepHover}\n                    .data=${\n                      {\n                        section,\n                        state: input.getSectionState(section),\n                        isStartOfGroup: true,\n                        isEndOfGroup: section.steps.length === 0,\n                        isFirstSection: i === 0,\n                        isLastSection:\n                          i === input.sections.length - 1 &&\n                          section.steps.length === 0,\n                        isSelected:\n                          input.selectedStep === (section.causingStep || null),\n                        sectionIndex: i,\n                        isRecording: input.isRecording,\n                        isPlaying: input.replayState.isPlaying,\n                        error:\n                          input.getSectionState(section) === State.ERROR\n                            ? input.currentError\n                            : undefined,\n                        hasBreakpoint: false,\n                        removable: input.recording.steps.length > 1 && section.causingStep,\n                      } as StepViewData\n                    }\n                  >\n                  </devtools-step-view>\n                  ${section.steps.map(step => {\n                    const stepIndex = input.recording.steps.indexOf(step);\n                    return html`\n                      <devtools-step-view\n                      @click=${input.onStepClick}\n                      @mouseover=${input.onStepHover}\n                      @copystep=${input.onCopyStep}\n                      .data=${\n                        {\n                          step,\n                          state: input.getStepState(step),\n                          error: input.currentStep === step ? input.currentError : undefined,\n                          isFirstSection: false,\n                          isLastSection:\n                            i === input.sections.length - 1 && input.recording.steps[input.recording.steps.length - 1] === step,\n                          isStartOfGroup: false,\n                          isEndOfGroup: section.steps[section.steps.length - 1] === step,\n                          stepIndex,\n                          hasBreakpoint: input.breakpointIndexes.has(stepIndex),\n                          sectionIndex: -1,\n                          isRecording: input.isRecording,\n                          isPlaying: input.replayState.isPlaying,\n                          removable: input.recording.steps.length > 1,\n                          builtInConverters: input.builtInConverters,\n                          extensionConverters: input.extensionConverters,\n                          isSelected: input.selectedStep === step,\n                          recorderSettings: input.recorderSettings,\n                        } as StepViewData\n                      }\n                      jslog=${VisualLogging.section('step').track({click: true})}\n                      ></devtools-step-view>\n                    `;\n                  })}\n                  ${!input.recordingTogglingInProgress && input.isRecording && i === input.sections.length - 1 ? html`<devtools-button\n                    class=\"step add-assertion-button\"\n                    .data=${\n                      {\n                        variant: Buttons.Button.Variant.OUTLINED,\n                        title: i18nString(UIStrings.addAssertion),\n                        jslogContext: 'add-assertion',\n                      } as Buttons.Button.ButtonData\n                    }\n                    @click=${input.onAddAssertion}\n                  >${i18nString(UIStrings.addAssertion)}</devtools-button>` : undefined}\n                  ${\n                    input.isRecording && i === input.sections.length - 1\n                      ? html`<div class=\"step recording\">${i18nString(\n                          UIStrings.recording,\n                        )}</div>`\n                      : null\n                  }\n                </div>\n              </div>\n            </div>\n      `,\n      )}\n      </div>\n    `;\n        // clang-format on\n}\n\nfunction renderHeader(input: ViewInput): Lit.LitTemplate {\n  if (!input.recording) {\n    return Lit.nothing;\n  }\n  const {title} = input.recording;\n  const isTitleEditable = !input.replayState.isPlaying && !input.isRecording;\n  // clang-format off\n  return html`\n    <div class=\"header\">\n      <div class=\"header-title-wrapper\">\n        <div class=\"header-title\">\n          <input @blur=${input.onTitleBlur}\n                @keydown=${input.onTitleInputKeyDown}\n                id=\"title-input\"\n                jslog=${VisualLogging.value('title').track({change: true})}\n                class=${Lit.Directives.classMap({\n                  'has-error': input.isTitleInvalid,\n                  disabled: !isTitleEditable,\n                })}\n                .value=${Lit.Directives.live(title)}\n                .disabled=${!isTitleEditable}\n                >\n          <div class=\"title-button-bar\">\n            <devtools-button\n              @click=${input.onEditTitleButtonClick}\n              .data=${\n                {\n                  disabled: !isTitleEditable,\n                  variant: Buttons.Button.Variant.TOOLBAR,\n                  iconName: 'edit',\n                  title: i18nString(UIStrings.editTitle),\n                  jslogContext: 'edit-title',\n                } as Buttons.Button.ButtonData\n              }\n            ></devtools-button>\n          </div>\n        </div>\n        ${\n          input.isTitleInvalid\n            ? html`<div class=\"title-input-error-text\">\n          ${\n            i18nString(UIStrings.requiredTitleError)\n          }\n        </div>`\n            : Lit.nothing\n        }\n      </div>\n      ${\n        !input.isRecording && input.replayAllowed\n          ? html`<div class=\"actions\">\n              <devtools-button\n                @click=${input.onMeasurePerformanceClick}\n                .data=${\n                  {\n                    disabled: input.replayState.isPlaying,\n                    variant: Buttons.Button.Variant.OUTLINED,\n                    iconName: 'performance',\n                    title: i18nString(UIStrings.performancePanel),\n                    jslogContext: 'measure-performance',\n                  } as Buttons.Button.ButtonData\n                }\n              >\n                ${i18nString(UIStrings.performancePanel)}\n              </devtools-button>\n              <div class=\"separator\"></div>\n              ${renderReplayOrAbortButton(input)}\n            </div>`\n          : Lit.nothing\n      }\n    </div>`;\n  // clang-format on\n}\n\ninterface ViewInput {\n  breakpointIndexes: Set<number>;\n  builtInConverters: readonly Converters.Converter.Converter[];\n  converterId: string;\n  converterName: string|null;\n  currentError: Error|null;\n  currentStep: Models.Schema.Step|null;\n  editorState: CodeMirror.EditorState|null;\n  extensionConverters: readonly Converters.Converter.Converter[];\n  extensionDescriptor?: PublicExtensions.RecorderPluginManager.ViewDescriptor;\n  isRecording: boolean;\n  isTitleInvalid: boolean;\n  lastReplayResult: Models.RecordingPlayer.ReplayResult|null;\n  recorderSettings: Models.RecorderSettings.RecorderSettings|null;\n  recording: Models.Schema.UserFlow;\n  recordingTogglingInProgress: boolean;\n  replayAllowed: boolean;\n  replayExtensions: Extensions.ExtensionManager.Extension[];\n  replaySettingsExpanded: boolean;\n  replayState: ReplayState;\n  sections: Models.Section.Section[];\n  selectedStep: Models.Schema.Step|null;\n  settings: Models.RecordingSettings.RecordingSettings|null;\n  showCodeView: boolean;\n\n  onAddAssertion: () => void;\n  onRecordingFinished: () => void;\n  getSectionState: (section: Models.Section.Section) => State;\n  getStepState: (step: Models.Schema.Step) => State;\n  onAbortReplay: () => void;\n  onMeasurePerformanceClick: (event: Event) => void;\n  onTogglePlaying: (event: StartReplayEvent) => void;\n  onCodeFormatChange: (event: Menus.SelectMenu.SelectMenuItemSelectedEvent) => void;\n  onCopyStep: (event: CopyStepEvent) => void;\n  onEditTitleButtonClick: (event: Event) => void;\n  onNetworkConditionsChange: (event: Event) => void;\n  onReplaySettingsKeydown: (event: Event) => void;\n  onSelectMenuLabelClick: (event: Event) => void;\n  onStepClick: (event: Event) => void;\n  onStepHover: (event: MouseEvent) => void;\n  onTimeoutInput: (event: Event) => void;\n  onTitleBlur: (event: Event) => void;\n  onTitleInputKeyDown: (event: KeyboardEvent) => void;\n  onToggleReplaySettings: (event: Event) => void;\n  onWrapperClick: () => void;\n  showCodeToggle: () => void;\n}\n\nexport interface ViewOutput {\n  highlightLinesInEditor?: (line: number, length: number, scroll?: boolean) => void;\n}\n\nexport const DEFAULT_VIEW = (input: ViewInput, output: ViewOutput, target: HTMLElement): void => {\n  const classNames = {\n    wrapper: true,\n    'is-recording': input.isRecording,\n    'is-playing': input.replayState.isPlaying,\n    'was-successful': input.lastReplayResult === Models.RecordingPlayer.ReplayResult.SUCCESS,\n    'was-failure': input.lastReplayResult === Models.RecordingPlayer.ReplayResult.FAILURE,\n  };\n\n  const footerButtonTitle = input.recordingTogglingInProgress ? i18nString(UIStrings.recordingIsBeingStopped) :\n                                                                i18nString(UIStrings.endRecording);\n  // clang-format off\n  Lit.render(\n    html`\n    <style>${UI.inspectorCommonStyles}</style>\n    <style>${recordingViewStyles}</style>\n    <style>${Input.textInputStyles}</style>\n    <div @click=${input.onWrapperClick} class=${Lit.Directives.classMap(\n      classNames,\n    )}>\n      <div class=\"recording-view main\">\n        ${renderHeader(input)}\n        ${\n          input.extensionDescriptor\n            ? html`\n            <devtools-recorder-extension-view .descriptor=${\n              input.extensionDescriptor\n            }></devtools-recorder-extension-view>` : html`\n          ${renderSettings(input)}\n          ${renderTimelineArea(input, output)}\n        `}\n        ${input.isRecording ? html`<div class=\"footer\">\n          <div class=\"controls\">\n            <devtools-control-button\n              jslog=${VisualLogging.toggle('toggle-recording').track({click: true})}\n              @click=${input.onRecordingFinished}\n              .disabled=${input.recordingTogglingInProgress}\n              .shape=${'square'}\n              .label=${footerButtonTitle}\n              title=${Models.Tooltip.getTooltipForActions(\n                footerButtonTitle,\n                Actions.RecorderActions.START_RECORDING,\n              )}\n            >\n            </devtools-control-button>\n          </div>\n        </div>`: Lit.nothing}\n      </div>\n    </div>\n  `,\n    target,\n    { host: input },\n  );\n  // clang-format on\n};\n\nexport class RecordingView extends UI.Widget.Widget {\n  replayState: ReplayState = {isPlaying: false, isPausedOnBreakpoint: false};\n  isRecording = false;\n  recordingTogglingInProgress = false;\n  recording: Models.Schema.UserFlow = {\n    title: '',\n    steps: [],\n  };\n  currentStep?: Models.Schema.Step;\n  currentError?: Error;\n  sections: Models.Section.Section[] = [];\n  settings?: Models.RecordingSettings.RecordingSettings;\n  lastReplayResult?: Models.RecordingPlayer.ReplayResult;\n  replayAllowed = false;\n  breakpointIndexes = new Set<number>();\n  extensionConverters: readonly Converters.Converter.Converter[] = [];\n  replayExtensions?: Extensions.ExtensionManager.Extension[];\n  extensionDescriptor?: PublicExtensions.RecorderPluginManager.ViewDescriptor;\n\n  addAssertion?: () => void;\n  abortReplay?: () => void;\n  recordingFinished?: () => void;\n  playRecording?: (event: PlayRecordingEvent) => void;\n  networkConditionsChanged?: (data?: SDK.NetworkManager.Conditions) => void;\n  timeoutChanged?: (timeout?: number) => void;\n  titleChanged?: (title: string) => void;\n\n  #recorderSettings?: Models.RecorderSettings.RecorderSettings;\n  get recorderSettings(): Models.RecorderSettings.RecorderSettings|undefined {\n    return this.#recorderSettings;\n  }\n  set recorderSettings(settings: Models.RecorderSettings.RecorderSettings|undefined) {\n    this.#recorderSettings = settings;\n    this.#converterId = this.recorderSettings?.preferredCopyFormat ?? this.#builtInConverters[0]?.getId();\n    void this.#convertToCode();\n  }\n\n  #builtInConverters: readonly Converters.Converter.Converter[] = [];\n  get builtInConverters(): readonly Converters.Converter.Converter[] {\n    return this.#builtInConverters;\n  }\n  set builtInConverters(converters: readonly Converters.Converter.Converter[]) {\n    this.#builtInConverters = converters;\n    this.#converterId = this.recorderSettings?.preferredCopyFormat ?? this.#builtInConverters[0]?.getId();\n    void this.#convertToCode();\n  }\n\n  #isTitleInvalid = false;\n  #selectedStep?: Models.Schema.Step|null;\n  #replaySettingsExpanded = false;\n  #showCodeView = false;\n  #code = '';\n  #converterId = '';\n  #sourceMap: PuppeteerReplay.SourceMap|undefined;\n  #editorState?: CodeMirror.EditorState;\n\n  #onCopyBound = this.#onCopy.bind(this);\n  #view: typeof DEFAULT_VIEW;\n  #viewOutput: ViewOutput = {};\n\n  constructor(element?: HTMLElement, view?: typeof DEFAULT_VIEW) {\n    super(element, {useShadowDom: true});\n    this.#view = view || DEFAULT_VIEW;\n  }\n\n  override performUpdate(): void {\n    const converter =\n        [\n          ...(this.builtInConverters || []),\n          ...(this.extensionConverters || []),\n        ].find(converter => converter.getId() === this.#converterId) ??\n        this.builtInConverters[0];\n\n    this.#view(\n        {\n          breakpointIndexes: this.breakpointIndexes,\n          builtInConverters: this.builtInConverters,\n          converterId: this.#converterId,\n          converterName: converter?.getFormatName(),\n          currentError: this.currentError ?? null,\n          currentStep: this.currentStep ?? null,\n          editorState: this.#editorState ?? null,\n          extensionConverters: this.extensionConverters,\n          extensionDescriptor: this.extensionDescriptor,\n          isRecording: this.isRecording,\n          isTitleInvalid: this.#isTitleInvalid,\n          lastReplayResult: this.lastReplayResult ?? null,\n          recorderSettings: this.#recorderSettings ?? null,\n          recording: this.recording,\n          recordingTogglingInProgress: this.recordingTogglingInProgress,\n          replayAllowed: this.replayAllowed,\n          replayExtensions: this.replayExtensions ?? [],\n          replaySettingsExpanded: this.#replaySettingsExpanded,\n          replayState: this.replayState,\n          sections: this.sections,\n          selectedStep: this.#selectedStep ?? null,\n          settings: this.settings ?? null,\n          showCodeView: this.#showCodeView,\n\n          onAddAssertion: () => {\n            this.addAssertion?.();\n          },\n          onRecordingFinished: () => {\n            this.recordingFinished?.();\n          },\n          getSectionState: this.#getSectionState.bind(this),\n          getStepState: this.#getStepState.bind(this),\n          onAbortReplay: () => {\n            this.abortReplay?.();\n          },\n          onMeasurePerformanceClick: this.#handleMeasurePerformanceClickEvent.bind(this),\n          onTogglePlaying: (event: StartReplayEvent) => {\n            this.playRecording?.({\n              targetPanel: TargetPanel.DEFAULT,\n              speed: event.speed,\n              extension: event.extension,\n            });\n          },\n          onCodeFormatChange: this.#onCodeFormatChange.bind(this),\n          onCopyStep: this.#onCopyStepEvent.bind(this),\n          onEditTitleButtonClick: this.#onEditTitleButtonClick.bind(this),\n          onNetworkConditionsChange: this.#onNetworkConditionsChange.bind(this),\n          onReplaySettingsKeydown: this.#onReplaySettingsKeydown.bind(this),\n          onSelectMenuLabelClick: this.#onSelectMenuLabelClick.bind(this),\n          onStepClick: this.#onStepClick.bind(this),\n          onStepHover: this.#onStepHover.bind(this),\n          onTimeoutInput: this.#onTimeoutInput.bind(this),\n          onTitleBlur: this.#onTitleBlur.bind(this),\n          onTitleInputKeyDown: this.#onTitleInputKeyDown.bind(this),\n          onToggleReplaySettings: this.#onToggleReplaySettings.bind(this),\n          onWrapperClick: this.#onWrapperClick.bind(this),\n          showCodeToggle: this.showCodeToggle.bind(this),\n        },\n        this.#viewOutput, this.contentElement);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    document.addEventListener('copy', this.#onCopyBound);\n    this.performUpdate();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    document.removeEventListener('copy', this.#onCopyBound);\n  }\n\n  scrollToBottom(): void {\n    const wrapper = this.contentElement?.querySelector('.sections');\n    if (!wrapper) {\n      return;\n    }\n    wrapper.scrollTop = wrapper.scrollHeight;\n  }\n\n  #getStepState(step: Models.Schema.Step): State {\n    if (!this.currentStep) {\n      return State.DEFAULT;\n    }\n    if (step === this.currentStep) {\n      if (this.currentError) {\n        return State.ERROR;\n      }\n      if (!this.replayState?.isPlaying) {\n        return State.SUCCESS;\n      }\n\n      if (this.replayState?.isPausedOnBreakpoint) {\n        return State.STOPPED;\n      }\n\n      return State.CURRENT;\n    }\n    const currentIndex = this.recording.steps.indexOf(this.currentStep);\n    if (currentIndex === -1) {\n      return State.DEFAULT;\n    }\n\n    const index = this.recording.steps.indexOf(step);\n    return index < currentIndex ? State.SUCCESS : State.OUTSTANDING;\n  }\n\n  #getSectionState(section: Models.Section.Section): State {\n    const currentStep = this.currentStep;\n    if (!currentStep) {\n      return State.DEFAULT;\n    }\n\n    const currentSection = this.sections.find(\n                               section => section.steps.includes(currentStep),\n                               ) as Models.Section.Section;\n\n    if (!currentSection) {\n      if (this.currentError) {\n        return State.ERROR;\n      }\n    }\n\n    if (section === currentSection) {\n      return State.SUCCESS;\n    }\n\n    const index = this.sections.indexOf(currentSection);\n    const ownIndex = this.sections.indexOf(section);\n    return index >= ownIndex ? State.SUCCESS : State.OUTSTANDING;\n  }\n\n  #onStepHover = (event: MouseEvent): void => {\n    const stepView = event.target as StepView;\n    const step = stepView.step || stepView.section?.causingStep;\n    if (!step || this.#selectedStep) {\n      return;\n    }\n    this.#highlightCodeForStep(step);\n  };\n\n  #onStepClick(event: Event): void {\n    event.stopPropagation();\n    const stepView = event.target as StepView;\n    const selectedStep = stepView.step || stepView.section?.causingStep || null;\n    if (this.#selectedStep === selectedStep) {\n      return;\n    }\n    this.#selectedStep = selectedStep;\n    this.performUpdate();\n    if (selectedStep) {\n      this.#highlightCodeForStep(selectedStep, /* scroll=*/ true);\n    }\n  }\n\n  #onWrapperClick(): void {\n    if (this.#selectedStep === undefined) {\n      return;\n    }\n    this.#selectedStep = undefined;\n    this.performUpdate();\n  }\n\n  #onReplaySettingsKeydown(event: Event): void {\n    if ((event as KeyboardEvent).key !== 'Enter') {\n      return;\n    }\n    event.preventDefault();\n    this.#onToggleReplaySettings(event);\n  }\n\n  #onToggleReplaySettings(event: Event): void {\n    event.stopPropagation();\n    this.#replaySettingsExpanded = !this.#replaySettingsExpanded;\n    this.performUpdate();\n  }\n\n  #onNetworkConditionsChange(event: Event): void {\n    const throttlingMenu = event.target;\n    if (throttlingMenu instanceof HTMLSelectElement) {\n      const preset = networkConditionPresets.find(\n          preset => preset.i18nTitleKey === throttlingMenu.value,\n      );\n      this.networkConditionsChanged?.(\n          preset?.i18nTitleKey === SDK.NetworkManager.NoThrottlingConditions.i18nTitleKey ? undefined : preset,\n      );\n    }\n  }\n\n  #onTimeoutInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    if (!target.checkValidity()) {\n      target.reportValidity();\n      return;\n    }\n    this.timeoutChanged?.(Number(target.value));\n  }\n\n  #onTitleBlur = (event: Event): void => {\n    const target = event.target as HTMLInputElement;\n    const title = target.value.trim();\n    if (!title) {\n      this.#isTitleInvalid = true;\n      this.performUpdate();\n      return;\n    }\n    this.titleChanged?.(title);\n  };\n\n  #onTitleInputKeyDown = (event: KeyboardEvent): void => {\n    switch (event.code) {\n      case 'Escape':\n      case 'Enter':\n        (event.target as HTMLElement).blur();\n        event.stopPropagation();\n        break;\n    }\n  };\n\n  #onEditTitleButtonClick = (): void => {\n    const input = this.contentElement.querySelector<HTMLInputElement>('#title-input');\n    if (!input) {\n      throw new Error('Missing #title-input');\n    }\n    input.focus();\n  };\n\n  #onSelectMenuLabelClick = (event: Event): void => {\n    const target = event.target as HTMLElement;\n    if (target.matches('.wrapping-label')) {\n      target.querySelector('devtools-select-menu')?.click();\n    }\n  };\n\n  async #copyCurrentSelection(step?: Models.Schema.Step|null): Promise<void> {\n    let converter =\n        [\n          ...this.builtInConverters,\n          ...this.extensionConverters,\n        ]\n            .find(\n                converter => converter.getId() === this.recorderSettings?.preferredCopyFormat,\n            );\n    if (!converter) {\n      converter = this.builtInConverters[0];\n    }\n    if (!converter) {\n      throw new Error('No default converter found');\n    }\n\n    let text = '';\n    if (step) {\n      text = await converter.stringifyStep(step);\n    } else if (this.recording) {\n      [text] = await converter.stringify(this.recording);\n    }\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(text);\n    const metric = step ? converterIdToStepMetric(converter.getId()) : converterIdToFlowMetric(converter.getId());\n    Host.userMetrics.recordingCopiedToClipboard(metric);\n  }\n\n  #onCopyStepEvent(event: CopyStepEvent): void {\n    event.stopPropagation();\n    void this.#copyCurrentSelection(event.step);\n  }\n\n  async #onCopy(event: ClipboardEvent): Promise<void> {\n    if (event.target !== document.body) {\n      return;\n    }\n\n    event.preventDefault();\n    await this.#copyCurrentSelection(this.#selectedStep);\n    Host.userMetrics.keyboardShortcutFired(Actions.RecorderActions.COPY_RECORDING_OR_STEP);\n  }\n\n  #handleMeasurePerformanceClickEvent(event: Event): void {\n    event.stopPropagation();\n\n    this.playRecording?.({\n      targetPanel: TargetPanel.PERFORMANCE_PANEL,\n      speed: PlayRecordingSpeed.NORMAL,\n    });\n  }\n\n  showCodeToggle = (): void => {\n    this.#showCodeView = !this.#showCodeView;\n    Host.userMetrics.recordingCodeToggled(\n        this.#showCodeView ? Host.UserMetrics.RecordingCodeToggled.CODE_SHOWN :\n                             Host.UserMetrics.RecordingCodeToggled.CODE_HIDDEN,\n    );\n    void this.#convertToCode();\n  };\n\n  #convertToCode = async(): Promise<void> => {\n    if (!this.recording) {\n      return;\n    }\n    const converter =\n        [\n          ...(this.builtInConverters || []),\n          ...(this.extensionConverters || []),\n        ].find(converter => converter.getId() === this.#converterId) ??\n        this.builtInConverters[0];\n\n    if (!converter) {\n      return;\n    }\n\n    const [code, sourceMap] = await converter.stringify(this.recording);\n    this.#code = code;\n    this.#sourceMap = sourceMap;\n    this.#sourceMap?.shift();\n    const mediaType = converter.getMediaType();\n    const languageSupport = mediaType ? await CodeHighlighter.CodeHighlighter.languageFromMIME(mediaType) : null;\n    this.#editorState = CodeMirror.EditorState.create({\n      doc: this.#code,\n      extensions: [\n        TextEditor.Config.baseConfiguration(this.#code),\n        CodeMirror.EditorState.readOnly.of(true),\n        CodeMirror.EditorView.lineWrapping,\n        languageSupport ? languageSupport : [],\n      ],\n    });\n    this.performUpdate();\n    // Used by tests.\n    this.contentElement.dispatchEvent(new Event('code-generated'));\n  };\n\n  #highlightCodeForStep = (step: Models.Schema.Step, scroll = false): void => {\n    if (!this.#sourceMap) {\n      return;\n    }\n\n    const stepIndex = this.recording.steps.indexOf(step);\n    if (stepIndex === -1) {\n      return;\n    }\n\n    const line = this.#sourceMap[stepIndex * 2];\n    const length = this.#sourceMap[stepIndex * 2 + 1];\n\n    this.#viewOutput.highlightLinesInEditor?.(line, length, scroll);\n  };\n\n  #onCodeFormatChange = (event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void => {\n    this.#converterId = event.itemValue as string;\n    if (this.recorderSettings) {\n      this.recorderSettings.preferredCopyFormat = event.itemValue as string;\n    }\n\n    void this.#convertToCode();\n  };\n}\n"]}