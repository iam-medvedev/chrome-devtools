{"version":3,"file":"ControlButton.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/components/ControlButton.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;;;;;;;AAE7B,OAAO,KAAK,GAAG,MAAM,wBAAwB,CAAC;AAE9C,OAAO,mBAAmB,MAAM,wBAAwB,CAAC;AAEzD,MAAM,EAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAC,GAAG,GAAG,CAAC;AAC3C,MAAM,EAAC,aAAa,EAAE,QAAQ,EAAC,GAAG,UAAU,CAAC;AAStC,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAK3C;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,iBAAiB,GAAG,CAAC,KAAY,EAAQ,EAAE;QACzC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,KAAK,CAAC,cAAc,EAAE,CAAC;QACzB,CAAC;IACH,CAAC,CAAC;IAEiB,MAAM;QACvB,mBAAmB;QACnB,OAAO,IAAI,CAAA;qBACM,mBAAmB;;yBAEf,IAAI,CAAC,iBAAiB;4BACnB,IAAI,CAAC,QAAQ;;iCAER,IAAI,CAAC,KAAK;mCACR,IAAI,CAAC,KAAK;;SAEpC,CAAC;QACN,kBAAkB;IACpB,CAAC;CACF,CAAA;AAhCqB;IAAnB,QAAQ,EAAE;4CAAuB;AACd;IAAnB,QAAQ,EAAE;4CAAuB;AACC;IAAlC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;+CAA2B;AAH1C,aAAa;IADzB,aAAa,CAAC,yBAAyB,CAAC;GAC5B,aAAa,CAiCzB","sourcesContent":["// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport controlButtonStyles from './controlButton.css.js';\n\nconst {html, Decorators, LitElement} = Lit;\nconst {customElement, property} = Decorators;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-control-button': ControlButton;\n  }\n}\n\n@customElement('devtools-control-button')\nexport class ControlButton extends LitElement {\n  @property() declare label: string;\n  @property() declare shape: string;\n  @property({type: Boolean}) declare disabled: boolean;\n\n  constructor() {\n    super();\n    this.label = '';\n    this.shape = 'square';\n    this.disabled = false;\n  }\n\n  #handleClickEvent = (event: Event): void => {\n    if (this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  };\n\n  protected override render(): unknown {\n    // clang-format off\n    return html`\n            <style>${controlButtonStyles}</style>\n            <button\n                @click=${this.#handleClickEvent}\n                .disabled=${this.disabled}\n                class=\"control\">\n              <div class=\"icon ${this.shape}\"></div>\n              <div class=\"label\">${this.label}</div>\n            </button>\n        `;\n    // clang-format on\n  }\n}\n"]}