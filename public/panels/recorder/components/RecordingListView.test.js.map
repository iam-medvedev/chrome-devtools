{"version":3,"file":"RecordingListView.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/components/RecordingListView.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EACL,uBAAuB,EACvB,mBAAmB,GACpB,MAAM,wCAAwC,CAAC;AAChD,OAAO,EACL,sBAAsB,GAEvB,MAAM,yCAAyC,CAAC;AAEjD,OAAO,KAAK,UAAU,MAAM,iBAAiB,CAAC;AAE9C,uBAAuB,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAChD,mBAAmB,EAAE,CAAC;IAEtB,MAAM,KAAK,GAAqD,EAAE,CAAC;IAEnE,SAAS,CAAC,GAAG,EAAE;QACb,4DAA4D;QAC5D,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,KAAK,UAAU,UAAU,CAAC,MAAgD;QAIxE,MAAM,IAAI,GAAG,sBAAsB,CAAC,UAAU,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;QAC5F,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACtF,SAAS,CAAC,UAAU,GAAG,CAAC,EAAC,WAAW,EAAE,cAAc,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;QACrE,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;QAC/B,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACtB,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3B,CAAC;IAED,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,MAAM,UAAU,EAAE,CAAC;QAC7C,MAAM,gBAAgB,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;QAE9E,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,EAAE,IAAI,aAAa,CAAC,SAAS,EAAE,EAAC,GAAG,EAAE,OAAO,EAAC,CAAC,CAAC,CAAC;QAEnF,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;QAC1C,MAAM,KAAK,GAAG,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;QAC1E,MAAM,CAAC,WAAW,CAAE,KAAyD,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;IAC7G,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,MAAM,UAAU,EAAE,CAAC;QAC7C,MAAM,gBAAgB,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;QAE9E,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,cAAc,EAAE,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QAElE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;QAC1C,MAAM,KAAK,GAAG,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;QAC5E,MAAM,CAAC,WAAW,CAAE,KAA2D,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;IAC/G,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  describeWithEnvironment,\n  setupActionRegistry,\n} from '../../../testing/EnvironmentHelpers.js';\nimport {\n  createViewFunctionStub,\n  type ViewFunctionStub,\n} from '../../../testing/ViewFunctionHelpers.js';\n\nimport * as Components from './components.js';\n\ndescribeWithEnvironment('RecordingListView', () => {\n  setupActionRegistry();\n\n  const views: Components.RecordingListView.RecordingListView[] = [];\n\n  afterEach(() => {\n    // Unregister global listeners in willHide to prevent leaks.\n    for (const view of views) {\n      view.willHide();\n    }\n  });\n\n  async function createView(output?: Components.RecordingListView.ViewOutput): Promise<[\n    ViewFunctionStub<typeof Components.RecordingListView.RecordingListView>,\n    Components.RecordingListView.RecordingListView\n  ]> {\n    const view = createViewFunctionStub(Components.RecordingListView.RecordingListView, output);\n    const component = new Components.RecordingListView.RecordingListView(undefined, view);\n    component.recordings = [{storageName: 'storage-test', name: 'test'}];\n    component.replayAllowed = true;\n    component.wasShown();\n    views.push(component);\n    return [view, component];\n  }\n\n  it('should open a recording on Enter', async () => {\n    const [view, component] = await createView();\n    const dispatchEventSpy = sinon.spy(component.contentElement, 'dispatchEvent');\n\n    view.input.onKeyDown('storage-test', new KeyboardEvent('keydown', {key: 'Enter'}));\n\n    sinon.assert.calledOnce(dispatchEventSpy);\n    const event = dispatchEventSpy.firstCall.args[0];\n    assert.instanceOf(event, Components.RecordingListView.OpenRecordingEvent);\n    assert.strictEqual((event as Components.RecordingListView.OpenRecordingEvent).storageName, 'storage-test');\n  });\n\n  it('should delete a recording', async () => {\n    const [view, component] = await createView();\n    const dispatchEventSpy = sinon.spy(component.contentElement, 'dispatchEvent');\n\n    view.input.onDeleteClick('storage-test', new MouseEvent('click'));\n\n    sinon.assert.calledOnce(dispatchEventSpy);\n    const event = dispatchEventSpy.firstCall.args[0];\n    assert.instanceOf(event, Components.RecordingListView.DeleteRecordingEvent);\n    assert.strictEqual((event as Components.RecordingListView.DeleteRecordingEvent).storageName, 'storage-test');\n  });\n});\n"]}