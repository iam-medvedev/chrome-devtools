{"version":3,"file":"TimelineSection.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/components/TimelineSection.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,wBAAwB,CAAC;AAE9C,OAAO,wBAAwB,MAAM,0BAA0B,CAAC;AAEhE,4EAA4E;AAC5E,MAAM,qBAAqB,GAAG,IAAI,aAAa,EAAE,CAAC;AAClD,qBAAqB,CAAC,WAAW,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;AAEvE,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAgBnB,MAAM,OAAO,eAAgB,SAAQ,WAAW;IAE9C,aAAa,GAAG,KAAK,CAAC;IACtB,eAAe,GAAG,KAAK,CAAC;IACxB,eAAe,GAAG,KAAK,CAAC;IACxB,cAAc,GAAG,KAAK,CAAC;IACvB,WAAW,GAAG,KAAK,CAAC;IAEpB;QACE,KAAK,EAAE,CAAC;QAER,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;QACrD,UAAU,CAAC,kBAAkB,GAAG,CAAC,qBAAqB,CAAC,CAAC;IAC1D,CAAC;IAED,IAAI,IAAI,CAAC,IAAyB;QAChC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;QAC3C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QAEnC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,MAAM,OAAO,GAAG;YACd,kBAAkB,EAAE,IAAI;YACxB,iBAAiB,EAAE,IAAI,CAAC,aAAa;YACrC,mBAAmB,EAAE,IAAI,CAAC,eAAe;YACzC,kBAAkB,EAAE,IAAI,CAAC,eAAe;YACxC,iBAAiB,EAAE,IAAI,CAAC,cAAc;YACtC,aAAa,EAAE,IAAI,CAAC,WAAW;SAChC,CAAC;QAEF,mBAAmB;QACnB,GAAG,CAAC,MAAM,CACR,IAAI,CAAA;mBACS,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;;;;;;;;KAQ9C,EACC,IAAI,CAAC,UAAwB,EAC7B,EAAE,IAAI,EAAE,IAAI,EAAE,CACf,CAAC;QACF,kBAAkB;IACpB,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CACjB,2BAA2B,EAC3B,eAAe,CAClB,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport timelineSectionStylesRaw from './timelineSection.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst timelineSectionStyles = new CSSStyleSheet();\ntimelineSectionStyles.replaceSync(timelineSectionStylesRaw.cssContent);\n\nconst {html} = Lit;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-timeline-section': TimelineSection;\n  }\n}\n\nexport interface TimelineSectionData {\n  isFirstSection: boolean;\n  isLastSection: boolean;\n  isStartOfGroup: boolean;\n  isEndOfGroup: boolean;\n  isSelected: boolean;\n}\n\nexport class TimelineSection extends HTMLElement {\n\n  #isEndOfGroup = false;\n  #isStartOfGroup = false;\n  #isFirstSection = false;\n  #isLastSection = false;\n  #isSelected = false;\n\n  constructor() {\n    super();\n\n    const shadowRoot = this.attachShadow({mode: 'open'});\n    shadowRoot.adoptedStyleSheets = [timelineSectionStyles];\n  }\n\n  set data(data: TimelineSectionData) {\n    this.#isFirstSection = data.isFirstSection;\n    this.#isLastSection = data.isLastSection;\n    this.#isEndOfGroup = data.isEndOfGroup;\n    this.#isStartOfGroup = data.isStartOfGroup;\n    this.#isSelected = data.isSelected;\n\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  #render(): void {\n    const classes = {\n      'timeline-section': true,\n      'is-end-of-group': this.#isEndOfGroup,\n      'is-start-of-group': this.#isStartOfGroup,\n      'is-first-section': this.#isFirstSection,\n      'is-last-section': this.#isLastSection,\n      'is-selected': this.#isSelected,\n    };\n\n    // clang-format off\n    Lit.render(\n      html`\n      <div class=${Lit.Directives.classMap(classes)}>\n        <div class=\"overlay\"></div>\n        <div class=\"icon\"><slot name=\"icon\"></slot></div>\n        <svg width=\"24\" height=\"100%\" class=\"bar\">\n          <rect class=\"line\" x=\"7\" y=\"0\" width=\"2\" height=\"100%\" />\n        </svg>\n        <slot></slot>\n      </div>\n    `,\n      this.shadowRoot as ShadowRoot,\n      { host: this },\n    );\n    // clang-format on\n  }\n}\n\ncustomElements.define(\n    'devtools-timeline-section',\n    TimelineSection,\n);\n"]}