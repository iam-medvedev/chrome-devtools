{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/recorder/components/ControlButton.ts", "controlButton.css.js", "../../../../../../../front_end/panels/recorder/components/CreateRecordingView.ts", "createRecordingView.css.js", "../../../../../../../front_end/panels/recorder/components/RecordingListView.ts", "recordingListView.css.js", "../../../../../../../front_end/panels/recorder/components/RecordingView.ts", "../../../../../../../front_end/panels/recorder/components/ExtensionView.ts", "extensionView.css.js", "../../../../../../../front_end/panels/recorder/components/ReplaySection.ts", "recordingView.css.js", "../../../../../../../front_end/panels/recorder/components/SelectButton.ts", "selectButton.css.js", "../../../../../../../front_end/panels/recorder/components/StepEditor.ts", "stepEditor.css.js", "../../../../../../../front_end/panels/recorder/components/util.ts", "../../../../../../../front_end/panels/recorder/components/StepView.ts", "../../../../../../../front_end/panels/recorder/components/TimelineSection.ts", "timelineSection.css.js", "stepView.css.js"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport controlButtonStyles from './controlButton.css.js';\n\nconst {html, Decorators, LitElement} = Lit;\nconst {customElement, property} = Decorators;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-control-button': ControlButton;\n  }\n}\n\n@customElement('devtools-control-button')\nexport class ControlButton extends LitElement {\n  @property() declare label: string;\n  @property() declare shape: string;\n  @property({type: Boolean}) declare disabled: boolean;\n\n  constructor() {\n    super();\n    this.label = '';\n    this.shape = 'square';\n    this.disabled = false;\n  }\n\n  #handleClickEvent = (event: Event): void => {\n    if (this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  };\n\n  protected override render(): unknown {\n    // clang-format off\n    return html`\n            <style>${controlButtonStyles}</style>\n            <button\n                @click=${this.#handleClickEvent}\n                .disabled=${this.disabled}\n                class=\"control\">\n              <div class=\"icon ${this.shape}\"></div>\n              <div class=\"label\">${this.label}</div>\n            </button>\n        `;\n    // clang-format on\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-size: inherit;\n}\n\n.control {\n  background: none;\n  border: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.control[disabled] {\n  filter: grayscale(100%);\n  cursor: auto;\n}\n\n.icon {\n  display: flex;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: var(--sys-color-error-bright);\n  margin-bottom: 8px;\n  position: relative;\n  transition: background 200ms;\n  place-content: center center;\n  align-items: center;\n}\n\n.icon::before {\n  --override-white: #fff;\n\n  box-sizing: border-box;\n  content: \"\";\n  display: block;\n  width: 14px;\n  height: 14px;\n  border: 1px solid var(--override-white);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--override-white);\n}\n\n.icon.square::before {\n  border-radius: 0;\n}\n\n.icon.circle::before {\n  border-radius: 50%;\n}\n\n.icon:hover {\n  background: color-mix(in srgb, var(--sys-color-error-bright), var(--sys-color-state-hover-on-prominent) 10%);\n}\n\n.icon:active {\n  background: color-mix(in srgb, var(--sys-color-error-bright), var(--sys-color-state-ripple-neutral-on-prominent) 16%);\n}\n\n.control[disabled] .icon:hover {\n  background: var(--sys-color-error);\n}\n\n.label {\n  font-size: 12px;\n  line-height: 16px;\n  text-align: center;\n  letter-spacing: 0.02em;\n  color: var(--sys-color-on-surface);\n}\n\n/*# sourceURL=${import.meta.resolve('./controlButton.css')} */`;", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/legacy/legacy.js';\nimport '../../../ui/components/icon_button/icon_button.js';\nimport './ControlButton.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Models from '../models/models.js';\nimport * as Actions from '../recorder-actions/recorder-actions.js';\n\nimport createRecordingViewStyles from './createRecordingView.css.js';\n\nconst {html, Directives: {ifDefined}} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description The label for the input where the user enters a name for the new recording.\n   */\n  recordingName: 'Recording name',\n  /**\n   * @description The button that start the recording with selected options.\n   */\n  startRecording: 'Start recording',\n  /**\n   * @description The title of the page that contains the form for creating a new recording.\n   */\n  createRecording: 'Create a new recording',\n  /**\n   * @description The error message that is shown if the user tries to create a recording without a name.\n   */\n  recordingNameIsRequired: 'Recording name is required',\n  /**\n   * @description The label for the input where the user enters an attribute to be used for selector generation.\n   */\n  selectorAttribute: 'Selector attribute',\n  /**\n   * @description The title for the close button where the user cancels a recording and returns back to previous view.\n   */\n  cancelRecording: 'Cancel recording',\n  /**\n   * @description Label indicating a CSS (Cascading Style Sheets) selector type\n   * (https://developer.mozilla.org/en-US/docs/Web/CSS). The label is used on a\n   * checkbox which users can tick if they are interesting in recording CSS\n   * selectors.\n   */\n  selectorTypeCSS: 'CSS',\n  /**\n   * @description Label indicating a piercing CSS (Cascading Style Sheets)\n   * selector type\n   * (https://pptr.dev/guides/query-selectors#pierce-selectors-pierce). These\n   * type of selectors behave like CSS selectors, but can pierce through\n   * ShadowDOM. The label is used on a checkbox which users can tick if they are\n   * interesting in recording CSS selectors.\n   */\n  selectorTypePierce: 'Pierce',\n  /**\n   * @description Label indicating a ARIA (Accessible Rich Internet\n   * Applications) selector type\n   * (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA). The\n   * label is used on a checkbox which users can tick if they are interesting in\n   * recording ARIA selectors.\n   */\n  selectorTypeARIA: 'ARIA',\n  /**\n   * @description Label indicating a text selector type. The label is used on a\n   * checkbox which users can tick if they are interesting in recording text\n   * selectors.\n   */\n  selectorTypeText: 'Text',\n  /**\n   * @description Label indicating a XPath (XML Path Language) selector type\n   * (https://en.wikipedia.org/wiki/XPath). The label is used on a checkbox\n   * which users can tick if they are interesting in recording text selectors.\n   */\n  selectorTypeXPath: 'XPath',\n  /**\n   * @description The label for the input that allows specifying selector types\n   * that should be used during the recording.\n   */\n  selectorTypes: 'Selector types to record',\n  /**\n   * @description The error message that shows up if the user turns off\n   * necessary selectors.\n   */\n  includeNecessarySelectors:\n      'You must choose CSS, Pierce, or XPath as one of your options. Only these selectors are guaranteed to be recorded since ARIA and text selectors may not be unique.',\n  /**\n   * @description Title of a link to the developer documentation.\n   */\n  learnMore: 'Learn more',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings(\n    'panels/recorder/components/CreateRecordingView.ts',\n    UIStrings,\n);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-create-recording-view': CreateRecordingView;\n  }\n  interface HTMLElementEventMap {\n    recordingstarted: RecordingStartedEvent;\n    recordingcancelled: RecordingCancelledEvent;\n  }\n}\n\nexport class RecordingStartedEvent extends Event {\n  static readonly eventName = 'recordingstarted';\n  name: string;\n  selectorAttribute?: string;\n  selectorTypesToRecord: Models.Schema.SelectorType[];\n\n  constructor(\n      name: string,\n      selectorTypesToRecord: Models.Schema.SelectorType[],\n      selectorAttribute?: string,\n  ) {\n    super(RecordingStartedEvent.eventName, {});\n    this.name = name;\n    this.selectorAttribute = selectorAttribute || undefined;\n    this.selectorTypesToRecord = selectorTypesToRecord;\n  }\n}\n\nexport class RecordingCancelledEvent extends Event {\n  static readonly eventName = 'recordingcancelled';\n  constructor() {\n    super(RecordingCancelledEvent.eventName);\n  }\n}\n\nexport interface CreateRecordingViewData {\n  recorderSettings: Models.RecorderSettings.RecorderSettings;\n}\n\nexport class CreateRecordingView extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #defaultRecordingName = '';\n  #error?: Error;\n  #recorderSettings?: Models.RecorderSettings.RecorderSettings;\n\n  constructor() {\n    super();\n    this.setAttribute('jslog', `${VisualLogging.section('create-recording-view')}`);\n  }\n\n  connectedCallback(): void {\n    this.#render();\n    this.#shadow.querySelector('input')?.focus();\n  }\n\n  set data(data: CreateRecordingViewData) {\n    this.#recorderSettings = data.recorderSettings;\n    this.#defaultRecordingName = this.#recorderSettings.defaultTitle;\n  }\n\n  #onKeyDown(event: Event): void {\n    if (this.#error) {\n      this.#error = undefined;\n      this.#render();\n    }\n\n    const keyboardEvent = event as KeyboardEvent;\n    if (keyboardEvent.key === 'Enter') {\n      this.startRecording();\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  startRecording(): void {\n    const nameInput = this.#shadow.querySelector<HTMLInputElement>('#user-flow-name');\n    if (!nameInput) {\n      throw new Error('input#user-flow-name not found');\n    }\n    if (!this.#recorderSettings) {\n      throw new Error('settings not set');\n    }\n\n    if (!nameInput.value.trim()) {\n      this.#error = new Error(i18nString(UIStrings.recordingNameIsRequired));\n      this.#render();\n      return;\n    }\n\n    const selectorTypeElements = this.#shadow.querySelectorAll(\n        '.selector-type input[type=checkbox]',\n    );\n    const selectorTypesToRecord: Models.Schema.SelectorType[] = [];\n    for (const selectorType of selectorTypeElements) {\n      const checkbox = selectorType as HTMLInputElement;\n      const checkboxValue = checkbox.value as Models.Schema.SelectorType;\n      if (checkbox.checked) {\n        selectorTypesToRecord.push(checkboxValue);\n      }\n    }\n\n    if (!selectorTypesToRecord.includes(Models.Schema.SelectorType.CSS) &&\n        !selectorTypesToRecord.includes(Models.Schema.SelectorType.XPath) &&\n        !selectorTypesToRecord.includes(Models.Schema.SelectorType.Pierce)) {\n      this.#error = new Error(i18nString(UIStrings.includeNecessarySelectors));\n      this.#render();\n      return;\n    }\n\n    for (const selectorType of Object.values(Models.Schema.SelectorType)) {\n      this.#recorderSettings.setSelectorByType(\n          selectorType,\n          selectorTypesToRecord.includes(selectorType),\n      );\n    }\n\n    const selectorAttributeEl = this.#shadow.querySelector(\n                                    '#selector-attribute',\n                                    ) as HTMLInputElement;\n    const selectorAttribute = selectorAttributeEl.value.trim();\n    this.#recorderSettings.selectorAttribute = selectorAttribute;\n\n    this.dispatchEvent(\n        new RecordingStartedEvent(\n            nameInput.value.trim(),\n            selectorTypesToRecord,\n            selectorAttribute,\n            ),\n    );\n  }\n\n  #dispatchRecordingCancelled(): void {\n    this.dispatchEvent(new RecordingCancelledEvent());\n  }\n\n  #onInputFocus = (): void => {\n    (this.#shadow.querySelector('#user-flow-name') as HTMLInputElement)?.select();\n  };\n\n  #render(): void {\n    const selectorTypeToLabel = new Map([\n      [Models.Schema.SelectorType.ARIA, i18nString(UIStrings.selectorTypeARIA)],\n      [Models.Schema.SelectorType.CSS, i18nString(UIStrings.selectorTypeCSS)],\n      [Models.Schema.SelectorType.Text, i18nString(UIStrings.selectorTypeText)],\n      [\n        Models.Schema.SelectorType.XPath,\n        i18nString(UIStrings.selectorTypeXPath),\n      ],\n      [\n        Models.Schema.SelectorType.Pierce,\n        i18nString(UIStrings.selectorTypePierce),\n      ],\n    ]);\n    // clang-format off\n    Lit.render(\n      html`\n        <style>${createRecordingViewStyles}</style>\n        <style>${Input.textInputStyles}</style>\n        <style>${Input.checkboxStyles}</style>\n        <div class=\"wrapper\">\n          <div class=\"header-wrapper\">\n            <h1>${i18nString(UIStrings.createRecording)}</h1>\n            <devtools-button\n              title=${i18nString(UIStrings.cancelRecording)}\n              jslog=${VisualLogging.close().track({click: true})}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.ICON,\n                  size: Buttons.Button.Size.SMALL,\n                  iconName: 'cross',\n                } as Buttons.Button.ButtonData\n              }\n              @click=${this.#dispatchRecordingCancelled}\n            ></devtools-button>\n          </div>\n          <label class=\"row-label\" for=\"user-flow-name\">${i18nString(\n            UIStrings.recordingName,\n          )}</label>\n          <input\n            value=${this.#defaultRecordingName}\n            @focus=${this.#onInputFocus}\n            @keydown=${this.#onKeyDown}\n            jslog=${VisualLogging.textField('user-flow-name').track({change: true})}\n            class=\"devtools-text-input\"\n            id=\"user-flow-name\"\n          />\n          <label class=\"row-label\" for=\"selector-attribute\">\n            <span>${i18nString(UIStrings.selectorAttribute)}</span>\n            <x-link\n              class=\"link\" href=\"https://g.co/devtools/recorder#selector\"\n              title=${i18nString(UIStrings.learnMore)}\n              jslog=${VisualLogging.link('recorder-selector-help').track({click: true})}>\n              <devtools-icon name=\"help\">\n              </devtools-icon>\n            </x-link>\n          </label>\n          <input\n            value=${ifDefined(this.#recorderSettings?.selectorAttribute)}\n            placeholder=\"data-testid\"\n            @keydown=${this.#onKeyDown}\n            jslog=${VisualLogging.textField('selector-attribute').track({change: true})}\n            class=\"devtools-text-input\"\n            id=\"selector-attribute\"\n          />\n          <label class=\"row-label\">\n            <span>${i18nString(UIStrings.selectorTypes)}</span>\n            <x-link\n              class=\"link\" href=\"https://g.co/devtools/recorder#selector\"\n              title=${i18nString(UIStrings.learnMore)}\n              jslog=${VisualLogging.link('recorder-selector-help').track({click: true})}>\n              <devtools-icon name=\"help\">\n              </devtools-icon>\n            </x-link>\n          </label>\n          <div class=\"checkbox-container\">\n            ${Object.values(Models.Schema.SelectorType).map(selectorType => {\n              const checked =\n                this.#recorderSettings?.getSelectorByType(selectorType);\n              return html`\n                  <label class=\"checkbox-label selector-type\">\n                    <input\n                      @keydown=${this.#onKeyDown}\n                      .value=${selectorType}\n                      jslog=${VisualLogging.toggle().track({click: true}).context(`selector-${selectorType}`)}\n                      ?checked=${checked}\n                      type=\"checkbox\"\n                    />\n                    ${selectorTypeToLabel.get(selectorType) || selectorType}\n                  </label>\n                `;\n            })}\n          </div>\n\n          ${\n            this.#error &&\n            html`\n          <div class=\"error\" role=\"alert\">\n            ${this.#error.message}\n          </div>\n        `\n          }\n        </div>\n        <div class=\"footer\">\n          <div class=\"controls\">\n            <devtools-control-button\n              @click=${this.startRecording}\n              .label=${i18nString(UIStrings.startRecording)}\n              .shape=${'circle'}\n              jslog=${VisualLogging.action(Actions.RecorderActions.START_RECORDING).track({click: true})}\n              title=${Models.Tooltip.getTooltipForActions(\n                i18nString(UIStrings.startRecording),\n                Actions.RecorderActions.START_RECORDING,\n              )}\n            ></devtools-control-button>\n          </div>\n        </div>\n      `,\n      this.#shadow,\n      { host: this },\n    );\n    // clang-format on\n  }\n}\n\ncustomElements.define(\n    'devtools-create-recording-view',\n    CreateRecordingView,\n);\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n* {\n  margin: 0;\n  padding: 0;\n  outline: none;\n  box-sizing: border-box;\n  font-size: inherit;\n}\n\n.wrapper {\n  padding: 24px;\n  flex: 1;\n}\n\nh1 {\n  font-size: 18px;\n  line-height: 24px;\n  letter-spacing: 0.02em;\n  color: var(--sys-color-on-surface);\n  margin: 0;\n  font-weight: normal;\n}\n\n.row-label {\n  font-weight: 500;\n  font-size: 11px;\n  line-height: 16px;\n  letter-spacing: 0.8px;\n  text-transform: uppercase;\n  color: var(--sys-color-secondary);\n  margin-bottom: 8px;\n  margin-top: 32px;\n  display: flex;\n  align-items: center;\n  gap: 3px;\n}\n\n.footer {\n  display: flex;\n  justify-content: center;\n  border-top: 1px solid var(--sys-color-divider);\n  padding: 12px;\n  background: var(--sys-color-cdt-base-container);\n}\n\n.controls {\n  display: flex;\n}\n\n.error {\n  margin: 16px 0 0;\n  padding: 8px;\n  background: var(--sys-color-error-container);\n  color: var(--sys-color-error);\n}\n\n.row-label .link:focus-visible {\n  outline: var(--sys-color-state-focus-ring) auto 1px;\n}\n\n.header-wrapper {\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n}\n\n.checkbox-label {\n  display: inline-flex;\n  align-items: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  gap: 4px;\n  line-height: 1.1;\n  padding: 4px;\n}\n\n.checkbox-container {\n  display: flex;\n  flex-flow: row wrap;\n  gap: 10px;\n}\n\ninput[type=\"checkbox\"]:focus-visible {\n  outline: var(--sys-color-state-focus-ring) auto 1px;\n}\n\ndevtools-icon[name=\"help\"] {\n  width: 16px;\n  height: 16px;\n}\n\n/*# sourceURL=${import.meta.resolve('./createRecordingView.css')} */`;", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/icon_button/icon_button.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Models from '../models/models.js';\nimport * as Actions from '../recorder-actions/recorder-actions.js';\n\nimport recordingListViewStyles from './recordingListView.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description The title of the page that contains a list of saved recordings that the user has..\n   */\n  savedRecordings: 'Saved recordings',\n  /**\n   * @description The title of the button that leads to create a new recording page.\n   */\n  createRecording: 'Create a new recording',\n  /**\n   * @description The title of the button that is shown next to each of the recordings and that triggers playing of the recording.\n   */\n  playRecording: 'Play recording',\n  /**\n   * @description The title of the button that is shown next to each of the recordings and that triggers deletion of the recording.\n   */\n  deleteRecording: 'Delete recording',\n  /**\n   * @description The title of the row corresponding to a recording. By clicking on the row, the user open the recording for editing.\n   */\n  openRecording: 'Open recording',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings(\n    'panels/recorder/components/RecordingListView.ts',\n    UIStrings,\n);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-recording-list-view': RecordingListView;\n  }\n\n  interface HTMLElementEventMap {\n    openrecording: OpenRecordingEvent;\n    deleterecording: DeleteRecordingEvent;\n  }\n}\n\nexport class CreateRecordingEvent extends Event {\n  static readonly eventName = 'createrecording';\n  constructor() {\n    super(CreateRecordingEvent.eventName);\n  }\n}\n\nexport class DeleteRecordingEvent extends Event {\n  static readonly eventName = 'deleterecording';\n  constructor(public storageName: string) {\n    super(DeleteRecordingEvent.eventName);\n  }\n}\n\nexport class OpenRecordingEvent extends Event {\n  static readonly eventName = 'openrecording';\n  constructor(public storageName: string) {\n    super(OpenRecordingEvent.eventName);\n  }\n}\n\nexport class PlayRecordingEvent extends Event {\n  static readonly eventName = 'playrecording';\n  constructor(public storageName: string) {\n    super(PlayRecordingEvent.eventName);\n  }\n}\n\ninterface Recording {\n  storageName: string;\n  name: string;\n}\n\nexport class RecordingListView extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #props: {recordings: Recording[], replayAllowed: boolean} = {\n    recordings: [],\n    replayAllowed: true,\n  };\n\n  connectedCallback(): void {\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  set recordings(recordings: Recording[]) {\n    this.#props.recordings = recordings;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  set replayAllowed(value: boolean) {\n    this.#props.replayAllowed = value;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #onCreateClick(): void {\n    this.dispatchEvent(new CreateRecordingEvent());\n  }\n\n  #onDeleteClick(storageName: string, event: Event): void {\n    event.stopPropagation();\n    this.dispatchEvent(new DeleteRecordingEvent(storageName));\n  }\n\n  #onOpenClick(storageName: string, event: Event): void {\n    event.stopPropagation();\n    this.dispatchEvent(new OpenRecordingEvent(storageName));\n  }\n\n  #onPlayRecordingClick(storageName: string, event: Event): void {\n    event.stopPropagation();\n    this.dispatchEvent(new PlayRecordingEvent(storageName));\n  }\n\n  #onKeyDown(storageName: string, event: Event): void {\n    if ((event as KeyboardEvent).key !== 'Enter') {\n      return;\n    }\n    this.#onOpenClick(storageName, event);\n  }\n\n  #stopPropagation(event: Event): void {\n    event.stopPropagation();\n  }\n\n  #render = (): void => {\n    // clang-format off\n    Lit.render(\n      html`\n        <style>${recordingListViewStyles}</style>\n        <div class=\"wrapper\">\n          <div class=\"header\">\n            <h1>${i18nString(UIStrings.savedRecordings)}</h1>\n            <devtools-button\n              .variant=${Buttons.Button.Variant.PRIMARY}\n              @click=${this.#onCreateClick}\n              title=${Models.Tooltip.getTooltipForActions(\n                i18nString(UIStrings.createRecording),\n                Actions.RecorderActions.CREATE_RECORDING,\n              )}\n              .jslogContext=${'create-recording'}\n            >\n              ${i18nString(UIStrings.createRecording)}\n            </devtools-button>\n          </div>\n          <div class=\"table\">\n            ${this.#props.recordings.map(recording => {\n              return html`\n                  <div\n                    role=\"button\"\n                    tabindex=\"0\"\n                    aria-label=${i18nString(UIStrings.openRecording)}\n                    class=\"row\"\n                    @keydown=${this.#onKeyDown.bind(\n                      this,\n                      recording.storageName,\n                    )}\n                    @click=${this.#onOpenClick.bind(\n                      this,\n                      recording.storageName,\n                    )}\n                    jslog=${VisualLogging.item()\n                      .track({ click: true })\n                      .context('recording')}>\n                    <div class=\"icon\">\n                      <devtools-icon name=\"flow\">\n                      </devtools-icon>\n                    </div>\n                    <div class=\"title\">${recording.name}</div>\n                    <div class=\"actions\">\n                      ${\n                        this.#props.replayAllowed\n                          ? html`\n                              <devtools-button\n                                title=${i18nString(UIStrings.playRecording)}\n                                .data=${\n                                  {\n                                    variant: Buttons.Button.Variant.ICON,\n                                    iconName: 'play',\n                                     jslogContext: 'play-recording',\n                                  } as Buttons.Button.ButtonData\n                                }\n                                @click=${this.#onPlayRecordingClick.bind(\n                                  this,\n                                  recording.storageName,\n                                )}\n                                @keydown=${this.#stopPropagation}\n                              ></devtools-button>\n                              <div class=\"divider\"></div>`\n                          : ''\n                      }\n                      <devtools-button\n                        class=\"delete-recording-button\"\n                        title=${i18nString(UIStrings.deleteRecording)}\n                        .data=${\n                          {\n                            variant: Buttons.Button.Variant.ICON,\n                            iconName: 'bin',\n                            jslogContext: 'delete-recording',\n                          } as Buttons.Button.ButtonData\n                        }\n                        @click=${this.#onDeleteClick.bind(\n                          this,\n                          recording.storageName,\n                        )}\n                        @keydown=${this.#stopPropagation}\n                      ></devtools-button>\n                    </div>\n                  </div>\n                `;\n            })}\n          </div>\n        </div>\n      `,\n      this.#shadow,\n      { host: this },\n    );\n    // clang-format on\n  };\n}\n\ncustomElements.define(\n    'devtools-recording-list-view',\n    RecordingListView,\n);\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-size: inherit;\n}\n\n*:focus,\n*:focus-visible {\n  outline: none;\n}\n\n.wrapper {\n  padding: 24px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\nh1 {\n  font-size: 16px;\n  line-height: 19px;\n  color: var(--sys-color-on-surface);\n  font-weight: normal;\n}\n\n.icon,\n.icon devtools-icon {\n  width: 20px;\n  height: 20px;\n  color: var(--sys-color-primary);\n}\n\n.table {\n  margin-top: 35px;\n}\n\n.title {\n  font-size: 13px;\n  color: var(--sys-color-on-surface);\n  margin-left: 10px;\n  flex: 1;\n  overflow-x: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n.row {\n  display: flex;\n  align-items: center;\n  padding-right: 5px;\n  height: 28px;\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.row:focus-within,\n.row:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.row:last-child {\n  border-bottom: none;\n}\n\n.actions {\n  display: flex;\n  align-items: center;\n}\n\n.actions button {\n  border: none;\n  background-color: transparent;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n}\n\n.actions .divider {\n  width: 1px;\n  height: 17px;\n  background-color: var(--sys-color-divider);\n  margin: 0 6px;\n}\n\n/*# sourceURL=${import.meta.resolve('./recordingListView.css')} */`;", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/icon_button/icon_button.js';\nimport './ExtensionView.js';\nimport './ControlButton.js';\nimport './ReplaySection.js';\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport type * as PublicExtensions from '../../../models/extensions/extensions.js';\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\nimport type * as PuppeteerReplay from '../../../third_party/puppeteer-replay/puppeteer-replay.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as CodeHighlighter from '../../../ui/components/code_highlighter/code_highlighter.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport type * as Menus from '../../../ui/components/menus/menus.js';\nimport * as TextEditor from '../../../ui/components/text_editor/text_editor.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport type * as Converters from '../converters/converters.js';\nimport type * as Extensions from '../extensions/extensions.js';\nimport * as Models from '../models/models.js';\nimport {PlayRecordingSpeed} from '../models/RecordingPlayer.js';\nimport * as Actions from '../recorder-actions/recorder-actions.js';\n\nimport recordingViewStyles from './recordingView.css.js';\nimport type {ReplaySectionData, StartReplayEvent} from './ReplaySection.js';\nimport {\n  type CopyStepEvent,\n  State,\n  type StepView,\n  type StepViewData,\n} from './StepView.js';\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Depicts that the recording was done on a mobile device (e.g., a smartphone or tablet).\n   */\n  mobile: 'Mobile',\n  /**\n   * @description Depicts that the recording was done on a desktop device (e.g., on a PC or laptop).\n   */\n  desktop: 'Desktop',\n  /**\n   * @description Network latency in milliseconds.\n   * @example {10} value\n   */\n  latency: 'Latency: {value} ms',\n  /**\n   * @description Upload speed.\n   * @example {42 kB} value\n   */\n  upload: 'Upload: {value}',\n  /**\n   * @description Download speed.\n   * @example {8 kB} value\n   */\n  download: 'Download: {value}',\n  /**\n   * @description Title of the button to edit replay settings.\n   */\n  editReplaySettings: 'Edit replay settings',\n  /**\n   * @description Title of the section that contains replay settings.\n   */\n  replaySettings: 'Replay settings',\n  /**\n   * @description The string is shown when a default value is used for some replay settings.\n   */\n  default: 'Default',\n  /**\n   * @description The title of the section with environment settings.\n   */\n  environment: 'Environment',\n  /**\n   * @description The title of the screenshot image that is shown for every section in the recordign view.\n   */\n  screenshotForSection: 'Screenshot for this section',\n  /**\n   * @description The title of the button that edits the current recording's title.\n   */\n  editTitle: 'Edit title',\n  /**\n   * @description The error for when the title is missing.\n   */\n  requiredTitleError: 'Title is required',\n  /**\n   * @description The status text that is shown while the recording is ongoing.\n   */\n  recording: 'Recording…',\n  /**\n   * @description The title of the button to end the current recording.\n   */\n  endRecording: 'End recording',\n  /**\n   * @description The title of the button while the recording is being ended.\n   */\n  recordingIsBeingStopped: 'Stopping recording…',\n  /**\n   * @description The text that describes a timeout setting of {value} milliseconds.\n   * @example {1000} value\n   */\n  timeout: 'Timeout: {value} ms',\n  /**\n   * @description The label for the input that allows entering network throttling configuration.\n   */\n  network: 'Network',\n  /**\n   * @description The label for the input that allows entering timeout (a number in ms) configuration.\n   */\n  timeoutLabel: 'Timeout',\n  /**\n   * @description The text in a tooltip for the timeout input that explains what timeout settings do.\n   */\n  timeoutExplanation:\n      'The timeout setting (in milliseconds) applies to every action when replaying the recording. For example, if a DOM element identified by a CSS selector does not appear on the page within the specified timeout, the replay fails with an error.',\n  /**\n   * @description The label for the button that cancels replaying.\n   */\n  cancelReplay: 'Cancel replay',\n  /**\n   * @description Button title that shows the code view when clicked.\n   */\n  showCode: 'Show code',\n  /**\n   * @description Button title that hides the code view when clicked.\n   */\n  hideCode: 'Hide code',\n  /**\n   * @description Button title that adds an assertion to the step editor.\n   */\n  addAssertion: 'Add assertion',\n  /**\n   * @description The title of the button that open current recording in Performance panel.\n   */\n  performancePanel: 'Performance panel',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings(\n    'panels/recorder/components/RecordingView.ts',\n    UIStrings,\n);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-recording-view': RecordingView;\n  }\n}\n\nexport interface ReplayState {\n  isPlaying: boolean;             // Replay is in progress\n  isPausedOnBreakpoint: boolean;  // Replay is in progress and is in stopped state\n}\n\nexport const enum TargetPanel {\n  PERFORMANCE_PANEL = 'timeline',\n  DEFAULT = 'chrome-recorder',\n}\n\nexport interface PlayRecordingEvent {\n  targetPanel: TargetPanel;\n  speed: PlayRecordingSpeed;\n  extension?: Extensions.ExtensionManager.Extension;\n}\n\nconst networkConditionPresets = [\n  SDK.NetworkManager.NoThrottlingConditions,\n  SDK.NetworkManager.OfflineConditions,\n  SDK.NetworkManager.Slow3GConditions,\n  SDK.NetworkManager.Slow4GConditions,\n  SDK.NetworkManager.Fast4GConditions,\n];\n\nfunction converterIdToFlowMetric(\n    converterId: string,\n    ): Host.UserMetrics.RecordingCopiedToClipboard {\n  switch (converterId) {\n    case Models.ConverterIds.ConverterIds.PUPPETEER:\n    case Models.ConverterIds.ConverterIds.PUPPETEER_FIREFOX:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_RECORDING_WITH_PUPPETEER;\n    case Models.ConverterIds.ConverterIds.JSON:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_RECORDING_WITH_JSON;\n    case Models.ConverterIds.ConverterIds.REPLAY:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_RECORDING_WITH_REPLAY;\n    default:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_RECORDING_WITH_EXTENSION;\n  }\n}\n\nfunction converterIdToStepMetric(\n    converterId: string,\n    ): Host.UserMetrics.RecordingCopiedToClipboard {\n  switch (converterId) {\n    case Models.ConverterIds.ConverterIds.PUPPETEER:\n    case Models.ConverterIds.ConverterIds.PUPPETEER_FIREFOX:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_STEP_WITH_PUPPETEER;\n    case Models.ConverterIds.ConverterIds.JSON:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_STEP_WITH_JSON;\n    case Models.ConverterIds.ConverterIds.REPLAY:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_STEP_WITH_REPLAY;\n    default:\n      return Host.UserMetrics.RecordingCopiedToClipboard.COPIED_STEP_WITH_EXTENSION;\n  }\n}\n\nfunction renderSettings({\n  settings,\n  replaySettingsExpanded,\n  onSelectMenuLabelClick,\n  onNetworkConditionsChange,\n  onTimeoutInput,\n  isRecording,\n  replayState,\n  onReplaySettingsKeydown,\n  onToggleReplaySettings\n}: ViewInput): Lit.TemplateResult {\n  if (!settings) {\n    return html``;\n  }\n  const environmentFragments = [];\n  if (settings.viewportSettings) {\n    // clang-format off\n    environmentFragments.push(\n      html`<div>${\n        settings.viewportSettings.isMobile\n          ? i18nString(UIStrings.mobile)\n          : i18nString(UIStrings.desktop)\n      }</div>`,\n    );\n    environmentFragments.push(html`<div class=\"separator\"></div>`);\n    environmentFragments.push(\n      html`<div>${settings.viewportSettings.width}×${\n        settings.viewportSettings.height\n      } px</div>`,\n    );\n    // clang-format on\n  }\n  const replaySettingsFragments = [];\n  if (!replaySettingsExpanded) {\n    if (settings.networkConditionsSettings) {\n      if (settings.networkConditionsSettings.title) {\n        // clang-format off\n        replaySettingsFragments.push(\n          html`<div>${\n            settings.networkConditionsSettings.title\n          }</div>`,\n        );\n        // clang-format on\n      } else {\n        // clang-format off\n        replaySettingsFragments.push(html`<div>\n          ${i18nString(UIStrings.download, {\n            value: i18n.ByteUtilities.bytesToString(\n              settings.networkConditionsSettings.download,\n            ),\n          })},\n          ${i18nString(UIStrings.upload, {\n            value: i18n.ByteUtilities.bytesToString(\n              settings.networkConditionsSettings.upload,\n            ),\n          })},\n          ${i18nString(UIStrings.latency, {\n            value: settings.networkConditionsSettings.latency,\n          })}\n        </div>`);\n        // clang-format on\n      }\n    } else {\n      // clang-format off\n      replaySettingsFragments.push(\n        html`<div>${\n          SDK.NetworkManager.NoThrottlingConditions.title instanceof Function\n            ? SDK.NetworkManager.NoThrottlingConditions.title()\n            : SDK.NetworkManager.NoThrottlingConditions.title\n        }</div>`,\n      );\n      // clang-format on\n    }\n    // clang-format off\n    replaySettingsFragments.push(html`<div class=\"separator\"></div>`);\n    replaySettingsFragments.push(\n      html`<div>${i18nString(UIStrings.timeout, {\n        value: settings.timeout || Models.RecordingPlayer.defaultTimeout,\n      })}</div>`,\n    );\n    // clang-format on\n  } else {\n    // clang-format off\n    const selectedOption =\n      settings.networkConditionsSettings?.i18nTitleKey ||\n      SDK.NetworkManager.NoThrottlingConditions.i18nTitleKey;\n    const selectedOptionTitle = networkConditionPresets.find(\n      preset => preset.i18nTitleKey === selectedOption,\n    );\n    let menuButtonTitle = '';\n    if (selectedOptionTitle) {\n      menuButtonTitle =\n        selectedOptionTitle.title instanceof Function\n          ? selectedOptionTitle.title()\n          : selectedOptionTitle.title;\n    }\n\n    replaySettingsFragments.push(html`<div class=\"editable-setting\">\n      <label class=\"wrapping-label\" @click=${onSelectMenuLabelClick}>\n        ${i18nString(UIStrings.network)}\n        <select\n            title=${menuButtonTitle}\n            jslog=${VisualLogging.dropDown('network-conditions').track({change: true})}\n            @change=${onNetworkConditionsChange}>\n      ${networkConditionPresets.map(condition => html`\n        <option jslog=${VisualLogging.item(Platform.StringUtilities.toKebabCase(condition.i18nTitleKey || ''))}\n                value=${condition.i18nTitleKey || ''} ?selected=${selectedOption === condition.i18nTitleKey}>\n                ${\n                  condition.title instanceof Function\n                    ? condition.title()\n                    : condition.title\n                }\n        </option>`)}\n    </select>\n      </label>\n    </div>`);\n    replaySettingsFragments.push(html`<div class=\"editable-setting\">\n      <label class=\"wrapping-label\" title=${i18nString(\n        UIStrings.timeoutExplanation,\n      )}>\n        ${i18nString(UIStrings.timeoutLabel)}\n        <input\n          @input=${onTimeoutInput}\n          required\n          min=${Models.SchemaUtils.minTimeout}\n          max=${Models.SchemaUtils.maxTimeout}\n          value=${\n            settings.timeout || Models.RecordingPlayer.defaultTimeout\n          }\n          jslog=${VisualLogging.textField('timeout').track({change: true})}\n          class=\"devtools-text-input\"\n          type=\"number\">\n      </label>\n    </div>`);\n    // clang-format on\n  }\n  const isEditable = !isRecording && !replayState.isPlaying;\n  const replaySettingsButtonClassMap = {\n    'settings-title': true,\n    expanded: replaySettingsExpanded,\n  };\n  const replaySettingsClassMap = {\n    expanded: replaySettingsExpanded,\n    settings: true,\n  };\n  // clang-format off\n  return html`\n    <div class=\"settings-row\">\n      <div class=\"settings-container\">\n        <div\n          class=${Lit.Directives.classMap(replaySettingsButtonClassMap)}\n          @keydown=${isEditable && onReplaySettingsKeydown}\n          @click=${isEditable && onToggleReplaySettings}\n          tabindex=\"0\"\n          role=\"button\"\n          jslog=${VisualLogging.action('replay-settings').track({click: true})}\n          aria-label=${i18nString(UIStrings.editReplaySettings)}>\n          <span>${i18nString(UIStrings.replaySettings)}</span>\n          ${\n            isEditable\n              ? html`<devtools-icon\n                  class=\"chevron\"\n                  name=\"triangle-down\">\n                </devtools-icon>`\n              : ''\n          }\n        </div>\n        <div class=${Lit.Directives.classMap(replaySettingsClassMap)}>\n          ${\n            replaySettingsFragments.length\n              ? replaySettingsFragments\n              : html`<div>${i18nString(UIStrings.default)}</div>`\n          }\n        </div>\n      </div>\n      <div class=\"settings-container\">\n        <div class=\"settings-title\">${i18nString(UIStrings.environment)}</div>\n        <div class=\"settings\">\n          ${\n            environmentFragments.length\n              ? environmentFragments\n              : html`<div>${i18nString(UIStrings.default)}</div>`\n          }\n        </div>\n      </div>\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderTimelineArea(input: ViewInput, output: ViewOutput): Lit.LitTemplate {\n  if (input.extensionDescriptor) {\n    // clang-format off\n      return html`\n        <devtools-recorder-extension-view .descriptor=${input.extensionDescriptor}>\n        </devtools-recorder-extension-view>\n      `;\n    // clang-format on\n  }\n  // clang-format off\n    /* eslint-disable rulesdir/no-deprecated-component-usages */\n    return html`\n        <devtools-split-view\n          direction=\"auto\"\n          sidebar-position=\"second\"\n          sidebar-initial-size=\"300\"\n          sidebar-visibility=${input.showCodeView ? '' : 'hidden'}\n        >\n          <div slot=\"main\">\n            ${renderSections(input)}\n          </div>\n          <div slot=\"sidebar\" jslog=${VisualLogging.pane('source-code').track({resize: true})}>\n            ${input.showCodeView ? html`\n            <div class=\"section-toolbar\" jslog=${VisualLogging.toolbar()}>\n              <devtools-select-menu\n                @selectmenuselected=${input.onCodeFormatChange}\n                .showDivider=${true}\n                .showArrow=${true}\n                .sideButton=${false}\n                .showSelectedItem=${true}\n                .position=${Dialogs.Dialog.DialogVerticalPosition.BOTTOM}\n                .buttonTitle=${input.converterName || ''}\n                .jslogContext=${'code-format'}\n              >\n                ${input.builtInConverters.map(converter => {\n                  return html`<devtools-menu-item\n                    .value=${converter.getId()}\n                    .selected=${input.converterId === converter.getId()}\n                    jslog=${VisualLogging.action().track({click: true}).context(`converter-${Platform.StringUtilities.toKebabCase(converter.getId())}`)}\n                  >\n                    ${converter.getFormatName()}\n                  </devtools-menu-item>`;\n                })}\n                ${input.extensionConverters.map(converter => {\n                  return html`<devtools-menu-item\n                    .value=${converter.getId()}\n                    .selected=${input.converterId === converter.getId()}\n                    jslog=${VisualLogging.action().track({click: true}).context('converter-extension')}\n                  >\n                    ${converter.getFormatName()}\n                  </devtools-menu-item>`;\n                })}\n              </devtools-select-menu>\n              <devtools-button\n                title=${Models.Tooltip.getTooltipForActions(\n                  i18nString(UIStrings.hideCode),\n                  Actions.RecorderActions.TOGGLE_CODE_VIEW,\n                )}\n                .data=${\n                  {\n                    variant: Buttons.Button.Variant.ICON,\n                    size: Buttons.Button.Size.SMALL,\n                    iconName: 'cross',\n                  } as Buttons.Button.ButtonData\n                }\n                @click=${input.showCodeToggle}\n                jslog=${VisualLogging.close().track({click: true})}\n              ></devtools-button>\n            </div>\n            ${renderTextEditor(input, output)}`\n            : Lit.nothing}\n          </div>\n        </devtools-split-view>\n      `;\n    /* eslint-enable rulesdir/no-deprecated-component-usages */\n  // clang-format on\n}\n\nfunction renderTextEditor(input: ViewInput, output: ViewOutput): Lit.TemplateResult {\n  if (!input.editorState) {\n    throw new Error('Unexpected: trying to render the text editor without editorState');\n  }\n\n  // clang-format off\n  return html`\n    <div class=\"text-editor\" jslog=${VisualLogging.textField().track({change: true})}>\n      <devtools-text-editor .state=${input.editorState} ${Lit.Directives.ref((editor: Element | undefined) => {\n        if (!editor || !(editor instanceof TextEditor.TextEditor.TextEditor)) {\n          return;\n        }\n        output.highlightLinesInEditor = (line: number, length: number, scroll = false) => {\n          const cm = editor.editor;\n          let selection = editor.createSelection(\n              {lineNumber: line + length, columnNumber: 0},\n              {lineNumber: line, columnNumber: 0},\n          );\n          const lastLine = editor.state.doc.lineAt(selection.main.anchor);\n          selection = editor.createSelection(\n              {lineNumber: line + length - 1, columnNumber: lastLine.length + 1},\n              {lineNumber: line, columnNumber: 0},\n          );\n\n          cm.dispatch({\n            selection,\n            effects: scroll ?\n                [\n                  CodeMirror.EditorView.scrollIntoView(selection.main, {\n                    y: 'nearest',\n                  }),\n                ] :\n                undefined,\n          });\n        };\n      })}></devtools-text-editor>\n    </div>\n  `;\n  // clang-format on\n}\n\nfunction renderScreenshot(\n    section: Models.Section.Section,\n    ): Lit.TemplateResult|null {\n  if (!section.screenshot) {\n    return null;\n  }\n\n  // clang-format off\n    return html`\n      <img class=\"screenshot\" src=${section.screenshot} alt=${i18nString(\n      UIStrings.screenshotForSection,\n    )} />\n    `;\n  // clang-format on\n}\n\nfunction renderReplayOrAbortButton(input: ViewInput): Lit.LitTemplate {\n  if (input.replayState.isPlaying) {\n    return html`\n        <devtools-button .jslogContext=${'abort-replay'} @click=${input.onAbortReplay} .iconName=${'pause'} .variant=${\n        Buttons.Button.Variant.OUTLINED}>\n          ${i18nString(UIStrings.cancelReplay)}\n        </devtools-button>`;\n  }\n\n  if (!input.recorderSettings) {\n    return Lit.nothing;\n  }\n\n  // clang-format off\n    return html`<devtools-replay-section\n        .data=${\n          {\n            settings: input.recorderSettings,\n            replayExtensions: input.replayExtensions,\n          } as ReplaySectionData\n        }\n        .disabled=${input.replayState.isPlaying}\n        @startreplay=${input.onTogglePlaying}\n        >\n      </devtools-replay-section>`;\n  // clang-format on\n}\n\nfunction renderSections(input: ViewInput): Lit.LitTemplate {\n  // clang-format off\n    return html`\n      <div class=\"sections\">\n      ${\n        !input.showCodeView\n          ? html`<div class=\"section-toolbar\">\n        <devtools-button\n          @click=${input.showCodeToggle}\n          class=\"show-code\"\n          .data=${\n            {\n              variant: Buttons.Button.Variant.OUTLINED,\n              title: Models.Tooltip.getTooltipForActions(\n                i18nString(UIStrings.showCode),\n                Actions.RecorderActions.TOGGLE_CODE_VIEW,\n              ),\n            } as Buttons.Button.ButtonData\n          }\n          jslog=${VisualLogging.toggleSubpane(Actions.RecorderActions.TOGGLE_CODE_VIEW).track({click: true})}\n        >\n          ${i18nString(UIStrings.showCode)}\n        </devtools-button>\n      </div>`\n          : ''\n      }\n      ${input.sections.map(\n        (section, i) => html`\n            <div class=\"section\">\n              <div class=\"screenshot-wrapper\">\n                ${renderScreenshot(section)}\n              </div>\n              <div class=\"content\">\n                <div class=\"steps\">\n                  <devtools-step-view\n                    @click=${input.onStepClick}\n                    @mouseover=${input.onStepHover}\n                    .data=${\n                      {\n                        section,\n                        state: input.getSectionState(section),\n                        isStartOfGroup: true,\n                        isEndOfGroup: section.steps.length === 0,\n                        isFirstSection: i === 0,\n                        isLastSection:\n                          i === input.sections.length - 1 &&\n                          section.steps.length === 0,\n                        isSelected:\n                          input.selectedStep === (section.causingStep || null),\n                        sectionIndex: i,\n                        isRecording: input.isRecording,\n                        isPlaying: input.replayState.isPlaying,\n                        error:\n                          input.getSectionState(section) === State.ERROR\n                            ? input.currentError\n                            : undefined,\n                        hasBreakpoint: false,\n                        removable: input.recording.steps.length > 1 && section.causingStep,\n                      } as StepViewData\n                    }\n                  >\n                  </devtools-step-view>\n                  ${section.steps.map(step => {\n                    const stepIndex = input.recording.steps.indexOf(step);\n                    return html`\n                      <devtools-step-view\n                      @click=${input.onStepClick}\n                      @mouseover=${input.onStepHover}\n                      @copystep=${input.onCopyStep}\n                      .data=${\n                        {\n                          step,\n                          state: input.getStepState(step),\n                          error: input.currentStep === step ? input.currentError : undefined,\n                          isFirstSection: false,\n                          isLastSection:\n                            i === input.sections.length - 1 && input.recording.steps[input.recording.steps.length - 1] === step,\n                          isStartOfGroup: false,\n                          isEndOfGroup: section.steps[section.steps.length - 1] === step,\n                          stepIndex,\n                          hasBreakpoint: input.breakpointIndexes.has(stepIndex),\n                          sectionIndex: -1,\n                          isRecording: input.isRecording,\n                          isPlaying: input.replayState.isPlaying,\n                          removable: input.recording.steps.length > 1,\n                          builtInConverters: input.builtInConverters,\n                          extensionConverters: input.extensionConverters,\n                          isSelected: input.selectedStep === step,\n                          recorderSettings: input.recorderSettings,\n                        } as StepViewData\n                      }\n                      jslog=${VisualLogging.section('step').track({click: true})}\n                      ></devtools-step-view>\n                    `;\n                  })}\n                  ${!input.recordingTogglingInProgress && input.isRecording && i === input.sections.length - 1 ? html`<devtools-button\n                    class=\"step add-assertion-button\"\n                    .data=${\n                      {\n                        variant: Buttons.Button.Variant.OUTLINED,\n                        title: i18nString(UIStrings.addAssertion),\n                        jslogContext: 'add-assertion',\n                      } as Buttons.Button.ButtonData\n                    }\n                    @click=${input.onAddAssertion}\n                  >${i18nString(UIStrings.addAssertion)}</devtools-button>` : undefined}\n                  ${\n                    input.isRecording && i === input.sections.length - 1\n                      ? html`<div class=\"step recording\">${i18nString(\n                          UIStrings.recording,\n                        )}</div>`\n                      : null\n                  }\n                </div>\n              </div>\n            </div>\n      `,\n      )}\n      </div>\n    `;\n    // clang-format on\n}\n\nfunction renderHeader(input: ViewInput): Lit.LitTemplate {\n  if (!input.recording) {\n    return Lit.nothing;\n  }\n  const {title} = input.recording;\n  const isTitleEditable = !input.replayState.isPlaying && !input.isRecording;\n  // clang-format off\n  return html`\n    <div class=\"header\">\n      <div class=\"header-title-wrapper\">\n        <div class=\"header-title\">\n          <input @blur=${input.onTitleBlur}\n                @keydown=${input.onTitleInputKeyDown}\n                id=\"title-input\"\n                jslog=${VisualLogging.value('title').track({change: true})}\n                class=${Lit.Directives.classMap({\n                  'has-error': input.isTitleInvalid,\n                  disabled: !isTitleEditable,\n                })}\n                .value=${Lit.Directives.live(title)}\n                .disabled=${!isTitleEditable}\n                >\n          <div class=\"title-button-bar\">\n            <devtools-button\n              @click=${input.onEditTitleButtonClick}\n              .data=${\n                {\n                  disabled: !isTitleEditable,\n                  variant: Buttons.Button.Variant.TOOLBAR,\n                  iconName: 'edit',\n                  title: i18nString(UIStrings.editTitle),\n                  jslogContext: 'edit-title',\n                } as Buttons.Button.ButtonData\n              }\n            ></devtools-button>\n          </div>\n        </div>\n        ${\n          input.isTitleInvalid\n            ? html`<div class=\"title-input-error-text\">\n          ${\n            i18nString(UIStrings.requiredTitleError)\n          }\n        </div>`\n            : Lit.nothing\n        }\n      </div>\n      ${\n        !input.isRecording && input.replayAllowed\n          ? html`<div class=\"actions\">\n              <devtools-button\n                @click=${input.onMeasurePerformanceClick}\n                .data=${\n                  {\n                    disabled: input.replayState.isPlaying,\n                    variant: Buttons.Button.Variant.OUTLINED,\n                    iconName: 'performance',\n                    title: i18nString(UIStrings.performancePanel),\n                    jslogContext: 'measure-performance',\n                  } as Buttons.Button.ButtonData\n                }\n              >\n                ${i18nString(UIStrings.performancePanel)}\n              </devtools-button>\n              <div class=\"separator\"></div>\n              ${renderReplayOrAbortButton(input)}\n            </div>`\n          : Lit.nothing\n      }\n    </div>`;\n  // clang-format on\n}\n\ninterface ViewInput {\n  breakpointIndexes: Set<number>;\n  builtInConverters: readonly Converters.Converter.Converter[];\n  converterId: string;\n  converterName: string|null;\n  currentError: Error|null;\n  currentStep: Models.Schema.Step|null;\n  editorState: CodeMirror.EditorState|null;\n  extensionConverters: readonly Converters.Converter.Converter[];\n  extensionDescriptor?: PublicExtensions.RecorderPluginManager.ViewDescriptor;\n  isRecording: boolean;\n  isTitleInvalid: boolean;\n  lastReplayResult: Models.RecordingPlayer.ReplayResult|null;\n  recorderSettings: Models.RecorderSettings.RecorderSettings|null;\n  recording: Models.Schema.UserFlow;\n  recordingTogglingInProgress: boolean;\n  replayAllowed: boolean;\n  replayExtensions: Extensions.ExtensionManager.Extension[];\n  replaySettingsExpanded: boolean;\n  replayState: ReplayState;\n  sections: Models.Section.Section[];\n  selectedStep: Models.Schema.Step|null;\n  settings: Models.RecordingSettings.RecordingSettings|null;\n  showCodeView: boolean;\n\n  onAddAssertion: () => void;\n  onRecordingFinished: () => void;\n  getSectionState: (section: Models.Section.Section) => State;\n  getStepState: (step: Models.Schema.Step) => State;\n  onAbortReplay: () => void;\n  onMeasurePerformanceClick: (event: Event) => void;\n  onTogglePlaying: (event: StartReplayEvent) => void;\n  onCodeFormatChange: (event: Menus.SelectMenu.SelectMenuItemSelectedEvent) => void;\n  onCopyStep: (event: CopyStepEvent) => void;\n  onEditTitleButtonClick: (event: Event) => void;\n  onNetworkConditionsChange: (event: Event) => void;\n  onReplaySettingsKeydown: (event: Event) => void;\n  onSelectMenuLabelClick: (event: Event) => void;\n  onStepClick: (event: Event) => void;\n  onStepHover: (event: MouseEvent) => void;\n  onTimeoutInput: (event: Event) => void;\n  onTitleBlur: (event: Event) => void;\n  onTitleInputKeyDown: (event: KeyboardEvent) => void;\n  onToggleReplaySettings: (event: Event) => void;\n  onWrapperClick: () => void;\n  showCodeToggle: () => void;\n}\n\nexport interface ViewOutput {\n  highlightLinesInEditor?: (line: number, length: number, scroll?: boolean) => void;\n}\n\nexport const DEFAULT_VIEW = (input: ViewInput, output: ViewOutput, target: HTMLElement): void => {\n  const classNames = {\n    wrapper: true,\n    'is-recording': input.isRecording,\n    'is-playing': input.replayState.isPlaying,\n    'was-successful': input.lastReplayResult === Models.RecordingPlayer.ReplayResult.SUCCESS,\n    'was-failure': input.lastReplayResult === Models.RecordingPlayer.ReplayResult.FAILURE,\n  };\n\n  const footerButtonTitle = input.recordingTogglingInProgress ? i18nString(UIStrings.recordingIsBeingStopped) :\n                                                                i18nString(UIStrings.endRecording);\n  // clang-format off\n  Lit.render(\n    html`\n    <style>${UI.inspectorCommonStyles}</style>\n    <style>${recordingViewStyles}</style>\n    <style>${Input.textInputStyles}</style>\n    <div @click=${input.onWrapperClick} class=${Lit.Directives.classMap(\n      classNames,\n    )}>\n      <div class=\"recording-view main\">\n        ${renderHeader(input)}\n        ${\n          input.extensionDescriptor\n            ? html`\n            <devtools-recorder-extension-view .descriptor=${\n              input.extensionDescriptor\n            }></devtools-recorder-extension-view>` : html`\n          ${renderSettings(input)}\n          ${renderTimelineArea(input, output)}\n        `}\n        ${input.isRecording ? html`<div class=\"footer\">\n          <div class=\"controls\">\n            <devtools-control-button\n              jslog=${VisualLogging.toggle('toggle-recording').track({click: true})}\n              @click=${input.onRecordingFinished}\n              .disabled=${input.recordingTogglingInProgress}\n              .shape=${'square'}\n              .label=${footerButtonTitle}\n              title=${Models.Tooltip.getTooltipForActions(\n                footerButtonTitle,\n                Actions.RecorderActions.START_RECORDING,\n              )}\n            >\n            </devtools-control-button>\n          </div>\n        </div>`: Lit.nothing}\n      </div>\n    </div>\n  `,\n    target,\n    { host: input },\n  );\n  // clang-format on\n};\n\nexport class RecordingView extends UI.Widget.Widget {\n  replayState: ReplayState = {isPlaying: false, isPausedOnBreakpoint: false};\n  isRecording = false;\n  recordingTogglingInProgress = false;\n  recording: Models.Schema.UserFlow = {\n    title: '',\n    steps: [],\n  };\n  currentStep?: Models.Schema.Step;\n  currentError?: Error;\n  sections: Models.Section.Section[] = [];\n  settings?: Models.RecordingSettings.RecordingSettings;\n  lastReplayResult?: Models.RecordingPlayer.ReplayResult;\n  replayAllowed = false;\n  breakpointIndexes = new Set<number>();\n  extensionConverters: readonly Converters.Converter.Converter[] = [];\n  replayExtensions?: Extensions.ExtensionManager.Extension[];\n  extensionDescriptor?: PublicExtensions.RecorderPluginManager.ViewDescriptor;\n\n  addAssertion?: () => void;\n  abortReplay?: () => void;\n  recordingFinished?: () => void;\n  playRecording?: (event: PlayRecordingEvent) => void;\n  networkConditionsChanged?: (data?: SDK.NetworkManager.Conditions) => void;\n  timeoutChanged?: (timeout?: number) => void;\n  titleChanged?: (title: string) => void;\n\n  #recorderSettings?: Models.RecorderSettings.RecorderSettings;\n  get recorderSettings(): Models.RecorderSettings.RecorderSettings|undefined {\n    return this.#recorderSettings;\n  }\n  set recorderSettings(settings: Models.RecorderSettings.RecorderSettings|undefined) {\n    this.#recorderSettings = settings;\n    this.#converterId = this.recorderSettings?.preferredCopyFormat ?? this.#builtInConverters[0]?.getId();\n    void this.#convertToCode();\n  }\n\n  #builtInConverters: readonly Converters.Converter.Converter[] = [];\n  get builtInConverters(): readonly Converters.Converter.Converter[] {\n    return this.#builtInConverters;\n  }\n  set builtInConverters(converters: readonly Converters.Converter.Converter[]) {\n    this.#builtInConverters = converters;\n    this.#converterId = this.recorderSettings?.preferredCopyFormat ?? this.#builtInConverters[0]?.getId();\n    void this.#convertToCode();\n  }\n\n  #isTitleInvalid = false;\n  #selectedStep?: Models.Schema.Step|null;\n  #replaySettingsExpanded = false;\n  #showCodeView = false;\n  #code = '';\n  #converterId = '';\n  #sourceMap: PuppeteerReplay.SourceMap|undefined;\n  #editorState?: CodeMirror.EditorState;\n\n  #onCopyBound = this.#onCopy.bind(this);\n  #view: typeof DEFAULT_VIEW;\n  #viewOutput: ViewOutput = {};\n\n  constructor(element?: HTMLElement, view?: typeof DEFAULT_VIEW) {\n    super(true, false, element);\n    this.#view = view || DEFAULT_VIEW;\n  }\n\n  override performUpdate(): void {\n    const converter =\n        [\n          ...(this.builtInConverters || []),\n          ...(this.extensionConverters || []),\n        ].find(converter => converter.getId() === this.#converterId) ??\n        this.builtInConverters[0];\n\n    this.#view(\n        {\n          breakpointIndexes: this.breakpointIndexes,\n          builtInConverters: this.builtInConverters,\n          converterId: this.#converterId,\n          converterName: converter?.getFormatName(),\n          currentError: this.currentError ?? null,\n          currentStep: this.currentStep ?? null,\n          editorState: this.#editorState ?? null,\n          extensionConverters: this.extensionConverters,\n          extensionDescriptor: this.extensionDescriptor,\n          isRecording: this.isRecording,\n          isTitleInvalid: this.#isTitleInvalid,\n          lastReplayResult: this.lastReplayResult ?? null,\n          recorderSettings: this.#recorderSettings ?? null,\n          recording: this.recording,\n          recordingTogglingInProgress: this.recordingTogglingInProgress,\n          replayAllowed: this.replayAllowed,\n          replayExtensions: this.replayExtensions ?? [],\n          replaySettingsExpanded: this.#replaySettingsExpanded,\n          replayState: this.replayState,\n          sections: this.sections,\n          selectedStep: this.#selectedStep ?? null,\n          settings: this.settings ?? null,\n          showCodeView: this.#showCodeView,\n\n          onAddAssertion: () => {\n            this.addAssertion?.();\n          },\n          onRecordingFinished: () => {\n            this.recordingFinished?.();\n          },\n          getSectionState: this.#getSectionState.bind(this),\n          getStepState: this.#getStepState.bind(this),\n          onAbortReplay: () => {\n            this.abortReplay?.();\n          },\n          onMeasurePerformanceClick: this.#handleMeasurePerformanceClickEvent.bind(this),\n          onTogglePlaying: (event: StartReplayEvent) => {\n            this.playRecording?.({\n              targetPanel: TargetPanel.DEFAULT,\n              speed: event.speed,\n              extension: event.extension,\n            });\n          },\n          onCodeFormatChange: this.#onCodeFormatChange.bind(this),\n          onCopyStep: this.#onCopyStepEvent.bind(this),\n          onEditTitleButtonClick: this.#onEditTitleButtonClick.bind(this),\n          onNetworkConditionsChange: this.#onNetworkConditionsChange.bind(this),\n          onReplaySettingsKeydown: this.#onReplaySettingsKeydown.bind(this),\n          onSelectMenuLabelClick: this.#onSelectMenuLabelClick.bind(this),\n          onStepClick: this.#onStepClick.bind(this),\n          onStepHover: this.#onStepHover.bind(this),\n          onTimeoutInput: this.#onTimeoutInput.bind(this),\n          onTitleBlur: this.#onTitleBlur.bind(this),\n          onTitleInputKeyDown: this.#onTitleInputKeyDown.bind(this),\n          onToggleReplaySettings: this.#onToggleReplaySettings.bind(this),\n          onWrapperClick: this.#onWrapperClick.bind(this),\n          showCodeToggle: this.showCodeToggle.bind(this),\n        },\n        this.#viewOutput, this.contentElement);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    document.addEventListener('copy', this.#onCopyBound);\n    this.performUpdate();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    document.removeEventListener('copy', this.#onCopyBound);\n  }\n\n  scrollToBottom(): void {\n    const wrapper = this.contentElement?.querySelector('.sections');\n    if (!wrapper) {\n      return;\n    }\n    wrapper.scrollTop = wrapper.scrollHeight;\n  }\n\n  #getStepState(step: Models.Schema.Step): State {\n    if (!this.currentStep) {\n      return State.DEFAULT;\n    }\n    if (step === this.currentStep) {\n      if (this.currentError) {\n        return State.ERROR;\n      }\n      if (!this.replayState?.isPlaying) {\n        return State.SUCCESS;\n      }\n\n      if (this.replayState?.isPausedOnBreakpoint) {\n        return State.STOPPED;\n      }\n\n      return State.CURRENT;\n    }\n    const currentIndex = this.recording.steps.indexOf(this.currentStep);\n    if (currentIndex === -1) {\n      return State.DEFAULT;\n    }\n\n    const index = this.recording.steps.indexOf(step);\n    return index < currentIndex ? State.SUCCESS : State.OUTSTANDING;\n  }\n\n  #getSectionState(section: Models.Section.Section): State {\n    const currentStep = this.currentStep;\n    if (!currentStep) {\n      return State.DEFAULT;\n    }\n\n    const currentSection = this.sections.find(\n                               section => section.steps.includes(currentStep),\n                               ) as Models.Section.Section;\n\n    if (!currentSection) {\n      if (this.currentError) {\n        return State.ERROR;\n      }\n    }\n\n    if (section === currentSection) {\n      return State.SUCCESS;\n    }\n\n    const index = this.sections.indexOf(currentSection);\n    const ownIndex = this.sections.indexOf(section);\n    return index >= ownIndex ? State.SUCCESS : State.OUTSTANDING;\n  }\n\n  #onStepHover = (event: MouseEvent): void => {\n    const stepView = event.target as StepView;\n    const step = stepView.step || stepView.section?.causingStep;\n    if (!step || this.#selectedStep) {\n      return;\n    }\n    this.#highlightCodeForStep(step);\n  };\n\n  #onStepClick(event: Event): void {\n    event.stopPropagation();\n    const stepView = event.target as StepView;\n    const selectedStep = stepView.step || stepView.section?.causingStep || null;\n    if (this.#selectedStep === selectedStep) {\n      return;\n    }\n    this.#selectedStep = selectedStep;\n    this.performUpdate();\n    if (selectedStep) {\n      this.#highlightCodeForStep(selectedStep, /* scroll=*/ true);\n    }\n  }\n\n  #onWrapperClick(): void {\n    if (this.#selectedStep === undefined) {\n      return;\n    }\n    this.#selectedStep = undefined;\n    this.performUpdate();\n  }\n\n  #onReplaySettingsKeydown(event: Event): void {\n    if ((event as KeyboardEvent).key !== 'Enter') {\n      return;\n    }\n    event.preventDefault();\n    this.#onToggleReplaySettings(event);\n  }\n\n  #onToggleReplaySettings(event: Event): void {\n    event.stopPropagation();\n    this.#replaySettingsExpanded = !this.#replaySettingsExpanded;\n    this.performUpdate();\n  }\n\n  #onNetworkConditionsChange(event: Event): void {\n    const throttlingMenu = event.target;\n    if (throttlingMenu instanceof HTMLSelectElement) {\n      const preset = networkConditionPresets.find(\n          preset => preset.i18nTitleKey === throttlingMenu.value,\n      );\n      this.networkConditionsChanged?.(\n          preset?.i18nTitleKey === SDK.NetworkManager.NoThrottlingConditions.i18nTitleKey ? undefined : preset,\n      );\n    }\n  }\n\n  #onTimeoutInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    if (!target.checkValidity()) {\n      target.reportValidity();\n      return;\n    }\n    this.timeoutChanged?.(Number(target.value));\n  }\n\n  #onTitleBlur = (event: Event): void => {\n    const target = event.target as HTMLInputElement;\n    const title = target.value.trim();\n    if (!title) {\n      this.#isTitleInvalid = true;\n      this.performUpdate();\n      return;\n    }\n    this.titleChanged?.(title);\n  };\n\n  #onTitleInputKeyDown = (event: KeyboardEvent): void => {\n    switch (event.code) {\n      case 'Escape':\n      case 'Enter':\n        (event.target as HTMLElement).blur();\n        event.stopPropagation();\n        break;\n    }\n  };\n\n  #onEditTitleButtonClick = (): void => {\n    const input = this.contentElement.querySelector<HTMLInputElement>('#title-input');\n    if (!input) {\n      throw new Error('Missing #title-input');\n    }\n    input.focus();\n  };\n\n  #onSelectMenuLabelClick = (event: Event): void => {\n    const target = event.target as HTMLElement;\n    if (target.matches('.wrapping-label')) {\n      target.querySelector('devtools-select-menu')?.click();\n    }\n  };\n\n  async #copyCurrentSelection(step?: Models.Schema.Step|null): Promise<void> {\n    let converter =\n        [\n          ...this.builtInConverters,\n          ...this.extensionConverters,\n        ]\n            .find(\n                converter => converter.getId() === this.recorderSettings?.preferredCopyFormat,\n            );\n    if (!converter) {\n      converter = this.builtInConverters[0];\n    }\n    if (!converter) {\n      throw new Error('No default converter found');\n    }\n\n    let text = '';\n    if (step) {\n      text = await converter.stringifyStep(step);\n    } else if (this.recording) {\n      [text] = await converter.stringify(this.recording);\n    }\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(text);\n    const metric = step ? converterIdToStepMetric(converter.getId()) : converterIdToFlowMetric(converter.getId());\n    Host.userMetrics.recordingCopiedToClipboard(metric);\n  }\n\n  #onCopyStepEvent(event: CopyStepEvent): void {\n    event.stopPropagation();\n    void this.#copyCurrentSelection(event.step);\n  }\n\n  async #onCopy(event: ClipboardEvent): Promise<void> {\n    if (event.target !== document.body) {\n      return;\n    }\n\n    event.preventDefault();\n    await this.#copyCurrentSelection(this.#selectedStep);\n    Host.userMetrics.keyboardShortcutFired(Actions.RecorderActions.COPY_RECORDING_OR_STEP);\n  }\n\n  #handleMeasurePerformanceClickEvent(event: Event): void {\n    event.stopPropagation();\n\n    this.playRecording?.({\n      targetPanel: TargetPanel.PERFORMANCE_PANEL,\n      speed: PlayRecordingSpeed.NORMAL,\n    });\n  }\n\n  showCodeToggle = (): void => {\n    this.#showCodeView = !this.#showCodeView;\n    Host.userMetrics.recordingCodeToggled(\n        this.#showCodeView ? Host.UserMetrics.RecordingCodeToggled.CODE_SHOWN :\n                             Host.UserMetrics.RecordingCodeToggled.CODE_HIDDEN,\n    );\n    void this.#convertToCode();\n  };\n\n  #convertToCode = async(): Promise<void> => {\n    if (!this.recording) {\n      return;\n    }\n    const converter =\n        [\n          ...(this.builtInConverters || []),\n          ...(this.extensionConverters || []),\n        ].find(converter => converter.getId() === this.#converterId) ??\n        this.builtInConverters[0];\n\n    if (!converter) {\n      return;\n    }\n\n    const [code, sourceMap] = await converter.stringify(this.recording);\n    this.#code = code;\n    this.#sourceMap = sourceMap;\n    this.#sourceMap?.shift();\n    const mediaType = converter.getMediaType();\n    const languageSupport = mediaType ? await CodeHighlighter.CodeHighlighter.languageFromMIME(mediaType) : null;\n    this.#editorState = CodeMirror.EditorState.create({\n      doc: this.#code,\n      extensions: [\n        TextEditor.Config.baseConfiguration(this.#code),\n        CodeMirror.EditorState.readOnly.of(true),\n        CodeMirror.EditorView.lineWrapping,\n        languageSupport ? languageSupport : [],\n      ],\n    });\n    this.performUpdate();\n    // Used by tests.\n    this.contentElement.dispatchEvent(new Event('code-generated'));\n  };\n\n  #highlightCodeForStep = (step: Models.Schema.Step, scroll = false): void => {\n    if (!this.#sourceMap) {\n      return;\n    }\n\n    const stepIndex = this.recording.steps.indexOf(step);\n    if (stepIndex === -1) {\n      return;\n    }\n\n    const line = this.#sourceMap[stepIndex * 2];\n    const length = this.#sourceMap[stepIndex * 2 + 1];\n\n    this.#viewOutput.highlightLinesInEditor?.(line, length, scroll);\n  };\n\n  #onCodeFormatChange = (event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void => {\n    this.#converterId = event.itemValue as string;\n    if (this.recorderSettings) {\n      this.recorderSettings.preferredCopyFormat = event.itemValue as string;\n    }\n\n    void this.#convertToCode();\n  };\n}\n", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/legacy/legacy.js';\nimport '../../../ui/components/icon_button/icon_button.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as PublicExtensions from '../../../models/extensions/extensions.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Extensions from '../extensions/extensions.js';\n\nimport extensionViewStyles from './extensionView.css.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description The button label that closes the panel that shows the extension content inside the Recorder panel.\n   */\n  closeView: 'Close',\n  /**\n   * @description The label that indicates that the content shown is provided by a browser extension.\n   */\n  extension: 'Content provided by a browser extension',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings(\n    'panels/recorder/components/ExtensionView.ts',\n    UIStrings,\n);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-recorder-extension-view': ExtensionView;\n  }\n  interface HTMLElementEventMap {\n    recorderextensionviewclosed: ClosedEvent;\n  }\n}\n\nexport class ClosedEvent extends Event {\n  static readonly eventName = 'recorderextensionviewclosed';\n  constructor() {\n    super(ClosedEvent.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class ExtensionView extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #descriptor?: PublicExtensions.RecorderPluginManager.ViewDescriptor;\n\n  constructor() {\n    super();\n\n    this.setAttribute('jslog', `${VisualLogging.section('extension-view')}`);\n  }\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  disconnectedCallback(): void {\n    if (!this.#descriptor) {\n      return;\n    }\n    Extensions.ExtensionManager.ExtensionManager.instance().getView(this.#descriptor.id).hide();\n  }\n\n  set descriptor(\n      descriptor: PublicExtensions.RecorderPluginManager.ViewDescriptor,\n  ) {\n    this.#descriptor = descriptor;\n    this.#render();\n    Extensions.ExtensionManager.ExtensionManager.instance().getView(descriptor.id).show();\n  }\n\n  #closeView(): void {\n    this.dispatchEvent(new ClosedEvent());\n  }\n\n  #render(): void {\n    if (!this.#descriptor) {\n      return;\n    }\n    const iframe = Extensions.ExtensionManager.ExtensionManager.instance().getView(this.#descriptor.id).frame();\n    // clang-format off\n    Lit.render(\n      html`\n        <style>${extensionViewStyles}</style>\n        <div class=\"extension-view\">\n          <header>\n            <div class=\"title\">\n              <devtools-icon\n                class=\"icon\"\n                title=${i18nString(UIStrings.extension)}\n                name=\"extension\">\n              </devtools-icon>\n              ${this.#descriptor.title}\n            </div>\n            <devtools-button\n              title=${i18nString(UIStrings.closeView)}\n              jslog=${VisualLogging.close().track({click: true})}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.ICON,\n                  size: Buttons.Button.Size.SMALL,\n                  iconName: 'cross',\n                } as Buttons.Button.ButtonData\n              }\n              @click=${this.#closeView}\n            ></devtools-button>\n          </header>\n          <main>\n            ${iframe}\n          </main>\n      </div>\n    `,\n      this.#shadow,\n      { host: this },\n    );\n    // clang-format on\n  }\n}\n\ncustomElements.define(\n    'devtools-recorder-extension-view',\n    ExtensionView,\n);\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n* {\n  margin: 0;\n  padding: 0;\n  outline: none;\n  box-sizing: border-box;\n  font-size: inherit;\n}\n\n.extension-view {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\nmain {\n  flex: 1;\n}\n\niframe {\n  border: none;\n  height: 100%;\n  width: 100%;\n}\n\nheader {\n  display: flex;\n  padding: 3px 8px;\n  justify-content: space-between;\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\nheader > div {\n  align-self: center;\n}\n\n.icon {\n  display: block;\n  width: 16px;\n  height: 16px;\n  color: var(--sys-color-secondary);\n}\n\n.title {\n  display: flex;\n  flex-direction: row;\n  gap: 6px;\n  color: var(--sys-color-secondary);\n  align-items: center;\n  font-weight: 500;\n}\n\n/*# sourceURL=${import.meta.resolve('./extensionView.css')} */`;", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport type * as Extensions from '../extensions/extensions.js';\nimport type * as Models from '../models/models.js';\nimport {PlayRecordingSpeed} from '../models/RecordingPlayer.js';\nimport * as Actions from '../recorder-actions/recorder-actions.js';\n\nimport {\n  type SelectButtonClickEvent,\n  type SelectButtonItem,\n  type SelectMenuSelectedEvent,\n  Variant as SelectButtonVariant,\n} from './SelectButton.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Replay button label\n   */\n  Replay: 'Replay',\n  /**\n   * @description Button label for the normal speed replay option\n   */\n  ReplayNormalButtonLabel: 'Normal speed',\n  /**\n   * @description Item label for the normal speed replay option\n   */\n  ReplayNormalItemLabel: 'Normal (Default)',\n  /**\n   * @description Button label for the slow speed replay option\n   */\n  ReplaySlowButtonLabel: 'Slow speed',\n  /**\n   * @description Item label for the slow speed replay option\n   */\n  ReplaySlowItemLabel: 'Slow',\n  /**\n   * @description Button label for the very slow speed replay option\n   */\n  ReplayVerySlowButtonLabel: 'Very slow speed',\n  /**\n   * @description Item label for the very slow speed replay option\n   */\n  ReplayVerySlowItemLabel: 'Very slow',\n  /**\n   * @description Button label for the extremely slow speed replay option\n   */\n  ReplayExtremelySlowButtonLabel: 'Extremely slow speed',\n  /**\n   * @description Item label for the slow speed replay option\n   */\n  ReplayExtremelySlowItemLabel: 'Extremely slow',\n  /**\n   * @description Label for a group of items in the replay menu that indicate various replay speeds (e.g., Normal, Fast, Slow).\n   */\n  speedGroup: 'Speed',\n  /**\n   * @description Label for a group of items in the replay menu that indicate various extensions that can be used for replay.\n   */\n  extensionGroup: 'Extensions',\n} as const;\n\nconst items: SelectButtonItem[] = [\n  {\n    value: PlayRecordingSpeed.NORMAL,\n    buttonIconName: 'play',\n    buttonLabel: () => i18nString(UIStrings.ReplayNormalButtonLabel),\n    label: () => i18nString(UIStrings.ReplayNormalItemLabel),\n  },\n  {\n    value: PlayRecordingSpeed.SLOW,\n    buttonIconName: 'play',\n    buttonLabel: () => i18nString(UIStrings.ReplaySlowButtonLabel),\n    label: () => i18nString(UIStrings.ReplaySlowItemLabel),\n  },\n  {\n    value: PlayRecordingSpeed.VERY_SLOW,\n    buttonIconName: 'play',\n    buttonLabel: () => i18nString(UIStrings.ReplayVerySlowButtonLabel),\n    label: () => i18nString(UIStrings.ReplayVerySlowItemLabel),\n  },\n  {\n    value: PlayRecordingSpeed.EXTREMELY_SLOW,\n    buttonIconName: 'play',\n    buttonLabel: () => i18nString(UIStrings.ReplayExtremelySlowButtonLabel),\n    label: () => i18nString(UIStrings.ReplayExtremelySlowItemLabel),\n  },\n];\n\nconst replaySpeedToMetricSpeedMap = {\n  [PlayRecordingSpeed.NORMAL]: Host.UserMetrics.RecordingReplaySpeed.NORMAL,\n  [PlayRecordingSpeed.SLOW]: Host.UserMetrics.RecordingReplaySpeed.SLOW,\n  [PlayRecordingSpeed.VERY_SLOW]: Host.UserMetrics.RecordingReplaySpeed.VERY_SLOW,\n  [PlayRecordingSpeed.EXTREMELY_SLOW]: Host.UserMetrics.RecordingReplaySpeed.EXTREMELY_SLOW,\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings(\n    'panels/recorder/components/ReplaySection.ts',\n    UIStrings,\n);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class StartReplayEvent extends Event {\n  static readonly eventName = 'startreplay';\n\n  constructor(\n      public speed: PlayRecordingSpeed,\n      public extension?: Extensions.ExtensionManager.Extension,\n  ) {\n    super(StartReplayEvent.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport interface ReplaySectionProps {\n  disabled: boolean;\n}\n\nexport interface ReplaySectionData {\n  settings: Models.RecorderSettings.RecorderSettings;\n  replayExtensions: Extensions.ExtensionManager.Extension[];\n}\n\nconst REPLAY_EXTENSION_PREFIX = 'extension';\n\nexport class ReplaySection extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #props: ReplaySectionProps = {disabled: false};\n  #settings?: Models.RecorderSettings.RecorderSettings;\n  #replayExtensions: Extensions.ExtensionManager.Extension[] = [];\n\n  set data(data: ReplaySectionData) {\n    this.#settings = data.settings;\n    this.#replayExtensions = data.replayExtensions;\n  }\n\n  get disabled(): boolean {\n    return this.#props.disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this.#props.disabled = disabled;\n    void ComponentHelpers.ScheduledRender.scheduleRender(\n        this,\n        this.#render,\n    );\n  }\n\n  connectedCallback(): void {\n    void ComponentHelpers.ScheduledRender.scheduleRender(\n        this,\n        this.#render,\n    );\n  }\n\n  #handleSelectMenuSelected(event: SelectMenuSelectedEvent): void {\n    const speed = event.value as PlayRecordingSpeed;\n    if (this.#settings && event.value) {\n      this.#settings.speed = speed;\n      this.#settings.replayExtension = '';\n    }\n\n    Host.userMetrics.recordingReplaySpeed(replaySpeedToMetricSpeedMap[speed]);\n    void ComponentHelpers.ScheduledRender.scheduleRender(\n        this,\n        this.#render,\n    );\n  }\n\n  #handleSelectButtonClick(event: SelectButtonClickEvent): void {\n    event.stopPropagation();\n\n    if (event.value?.startsWith(REPLAY_EXTENSION_PREFIX)) {\n      if (this.#settings) {\n        this.#settings.replayExtension = event.value;\n      }\n      const extensionIdx = Number(\n          event.value.substring(REPLAY_EXTENSION_PREFIX.length),\n      );\n      this.dispatchEvent(\n          new StartReplayEvent(\n              PlayRecordingSpeed.NORMAL,\n              this.#replayExtensions[extensionIdx],\n              ),\n      );\n      void ComponentHelpers.ScheduledRender.scheduleRender(\n          this,\n          this.#render,\n      );\n      return;\n    }\n\n    this.dispatchEvent(new StartReplayEvent(this.#settings ? this.#settings.speed : PlayRecordingSpeed.NORMAL));\n    void ComponentHelpers.ScheduledRender.scheduleRender(\n        this,\n        this.#render,\n    );\n  }\n\n  #render(): void {\n    const groups = [{name: i18nString(UIStrings.speedGroup), items}];\n\n    if (this.#replayExtensions.length) {\n      groups.push({\n        name: i18nString(UIStrings.extensionGroup),\n        items: this.#replayExtensions.map((extension, idx) => {\n          return {\n            value: REPLAY_EXTENSION_PREFIX + idx,\n            buttonIconName: 'play',\n            buttonLabel: () => extension.getName(),\n            label: () => extension.getName(),\n          };\n        }),\n      });\n    }\n\n    // clang-format off\n    Lit.render(\n      html`\n    <devtools-select-button\n      @selectmenuselected=${this.#handleSelectMenuSelected}\n      @selectbuttonclick=${this.#handleSelectButtonClick}\n      .variant=${SelectButtonVariant.PRIMARY}\n      .showItemDivider=${false}\n      .disabled=${this.#props.disabled}\n      .action=${Actions.RecorderActions.REPLAY_RECORDING}\n      .value=${this.#settings?.replayExtension || this.#settings?.speed || ''}\n      .buttonLabel=${i18nString(UIStrings.Replay)}\n      .groups=${groups}\n      jslog=${VisualLogging.action(Actions.RecorderActions.REPLAY_RECORDING).track({click: true})}\n    ></devtools-select-button>`,\n      this.#shadow,\n      { host: this },\n    );\n    // clang-format on\n  }\n}\n\ncustomElements.define(\n    'devtools-replay-section',\n    ReplaySection,\n);\n\ndeclare global {\n  interface HTMLElementEventMap {\n    startreplay: StartReplayEvent;\n  }\n\n  interface HTMLElementTagNameMap {\n    'devtools-replay-section': ReplaySection;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: inherit;\n}\n\n.wrapper {\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  height: 100%;\n}\n\n.main {\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.sections {\n  flex: 1;\n  min-height: 0;\n  overflow: hidden auto;\n  background-color: var(--sys-color-cdt-base-container);\n  z-index: 0;\n  position: relative;\n  container: sections / inline-size;\n}\n\n.section {\n  display: flex;\n  padding: 0 16px;\n  gap: 8px;\n  position: relative;\n}\n\n.section::after {\n  content: '';\n  border-bottom: 1px solid var(--sys-color-divider);\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n}\n\n.section:last-child {\n  /* Make sure there is enough space for the context menu. */\n  margin-bottom: 70px;\n}\n\n.section:last-child::after {\n  content: none;\n}\n\n.screenshot-wrapper {\n  flex: 0 0 80px;\n  padding-top: 32px;\n  /* We want this to be on top of \\\\'.step-overlay\\\\' */\n  z-index: 2;\n}\n\n@container sections (max-width: 400px) {\n  .screenshot-wrapper {\n    display: none;\n  }\n}\n\n.screenshot {\n  object-fit: cover;\n  object-position: top center;\n  max-width: 100%;\n  width: 200px;\n  height: auto;\n  border: 1px solid var(--sys-color-divider);\n  border-radius: 1px;\n}\n\n.content {\n  flex: 1;\n  min-width: 0;\n}\n\n.steps {\n  flex: 1;\n  position: relative;\n  align-self: flex-start;\n  overflow: visible;\n}\n\n.step {\n  position: relative;\n  padding-left: 40px;\n  margin: 16px 0;\n}\n\n.step .action {\n  font-size: 13px;\n  line-height: 16px;\n  letter-spacing: 0.03em;\n}\n\n.recording {\n  color: var(--sys-color-primary);\n  font-style: italic;\n  margin-top: 8px;\n  margin-bottom: 0;\n}\n\n.add-assertion-button {\n  margin-top: 8px;\n}\n\n.details {\n  max-width: 240px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.url {\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0.03em;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: var(--sys-color-secondary);\n  max-width: 100%;\n  margin-bottom: 16px;\n}\n\n.header {\n  flex-shrink: 0;\n  align-items: center;\n  border-bottom: 1px solid var(--sys-color-divider);\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: space-between;\n  padding: 16px;\n}\n\n.header-title-wrapper {\n  max-width: 100%;\n}\n\n.header-title {\n  align-items: center;\n  display: flex;\n  flex: 1;\n  max-width: 100%;\n}\n\n.header-title::before {\n  content: '';\n  min-width: 12px;\n  height: 12px;\n  display: inline-block;\n  background: var(--sys-color-primary);\n  border-radius: 50%;\n  margin-right: 7px;\n}\n\n#title-input {\n  font-family: inherit;\n  field-sizing: content;\n  font-size: 18px;\n  line-height: 22px;\n  letter-spacing: 0.02em;\n  padding: 1px 4px;\n  border: 1px solid transparent;\n  border-radius: 1px;\n  word-break: break-all;\n}\n\n#title-input:hover,\n#title-input:focus-visible {\n  border-color: var(--input-outline);\n}\n\n#title-input.has-error {\n  border-color: var(--sys-color-error);\n}\n\n#title-input.disabled {\n  color: var(--sys-color-state-disabled);\n}\n\n.title-input-error-text {\n  margin-top: 4px;\n  margin-left: 19px;\n  color: var(--sys-color-error);\n}\n\n.title-button-bar {\n  flex-shrink: 0;\n  padding-left: 2px;\n  display: flex;\n}\n\n#title-input:focus + .title-button-bar {\n  display: none;\n}\n\n.settings-row {\n  padding: 16px 28px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n}\n\n.settings-title {\n  font-size: 14px;\n  line-height: 24px;\n  letter-spacing: 0.03em;\n  color: var(--sys-color-on-surface);\n  display: flex;\n  align-items: center;\n  align-content: center;\n  gap: 5px;\n  width: fit-content;\n}\n\n.settings {\n  margin-top: 4px;\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 12px;\n  line-height: 20px;\n  letter-spacing: 0.03em;\n  color: var(--sys-color-on-surface-subtle);\n}\n\n.settings.expanded {\n  gap: 10px;\n}\n\n.settings .separator {\n  width: 1px;\n  height: 20px;\n  background-color: var(--sys-color-divider);\n  margin: 0 5px;\n}\n\n.actions {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 12px;\n}\n\n.actions .separator {\n  width: 1px;\n  height: 24px;\n  background-color: var(--sys-color-divider);\n}\n\n.is-recording .header-title::before {\n  background: var(--sys-color-error-bright);\n}\n\n.footer {\n  display: flex;\n  justify-content: center;\n  border-top: 1px solid var(--sys-color-divider);\n  padding: 12px;\n  background: var(--sys-color-cdt-base-container);\n  z-index: 1;\n}\n\n.controls {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  position: relative;\n  width: 100%;\n}\n\n.chevron {\n  width: 14px;\n  height: 14px;\n  transform: rotate(-90deg);\n  color: var(--sys-color-on-surface);\n}\n\n.expanded .chevron {\n  transform: rotate(0);\n}\n\n.editable-setting {\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n  align-items: center;\n}\n\n.editable-setting .devtools-text-input {\n  width: fit-content;\n  height: var(--sys-size-9);\n}\n\n.wrapping-label {\n  display: inline-flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.text-editor {\n  height: 100%;\n  overflow: auto;\n}\n\n.section-toolbar {\n  display: flex;\n  align-items: center;\n  padding: 3px 5px;\n  justify-content: space-between;\n  gap: 3px;\n}\n\n.section-toolbar > devtools-select-menu {\n  height: 24px;\n  min-width: 50px;\n}\n\n.sections .section-toolbar {\n  justify-content: flex-end;\n}\n\ndevtools-split-view {\n  flex: 1 1 0%;\n  min-height: 0;\n}\n\n[slot='main'] {\n  overflow: hidden auto;\n}\n\n[slot='sidebar'] {\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  height: 100%;\n  width: 100%;\n}\n\n[slot='sidebar'] .section-toolbar {\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.show-code {\n  margin-right: 14px;\n  margin-top: 8px;\n}\n\ndevtools-recorder-extension-view {\n  flex: 1;\n}\n\n/*# sourceURL=${import.meta.resolve('./recordingView.css')} */`;", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../../ui/components/menus/menus.js';\n\nimport * as Platform from '../../../core/platform/platform.js';\nimport type {LocalizedString} from '../../../core/platform/UIString.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Models from '../models/models.js';\nimport type * as Actions from '../recorder-actions/recorder-actions.js';\n\nimport selectButtonStyles from './selectButton.css.js'; // Keep the import for the raw string\n\nconst {html, Directives: {ifDefined, classMap}} = Lit;\n\nexport const enum Variant {\n  PRIMARY = 'primary',\n  OUTLINED = 'outlined',\n}\n\ninterface SelectMenuGroup {\n  name: string;\n  items: SelectButtonItem[];\n}\n\ninterface SelectButtonProps {\n  /**\n   * Whether the button is disabled or not\n   * Defaults to false\n   */\n  disabled: boolean;\n  /**\n   * Current value of the button\n   * The same value must correspond to an item in the `items` array\n   */\n  value: string;\n  /**\n   * Items for the select menu of the button\n   * Selected item is shown in the button itself\n   */\n  items: SelectButtonItem[];\n  /**\n   * Groups for the select menu of the button.\n   */\n  buttonLabel: LocalizedString;\n  /**\n   * Groups for the select menu of the button.\n   */\n  groups: SelectMenuGroup[];\n  /**\n   * Similar to the button variant\n   */\n  variant: Variant;\n  /**\n   * Action that the button is linked to\n   */\n  action?: Actions.RecorderActions;\n}\n\nexport interface SelectButtonItem {\n  /**\n   * Specifies the clicked item\n   */\n  value: string;\n  /**\n   * `icon` to be shown on the button\n   */\n  buttonIconName?: string;\n  /**\n   * Text to be shown in the select menu\n   */\n  label: () => string;\n  /**\n   * Text to be shown in the button when the item is selected for the button\n   */\n  buttonLabel?: () => string;\n}\n\nexport class SelectButtonClickEvent extends Event {\n  static readonly eventName = 'selectbuttonclick';\n\n  constructor(public value?: string) {\n    super(SelectButtonClickEvent.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class SelectMenuSelectedEvent extends Event {\n  static readonly eventName = 'selectmenuselected';\n\n  constructor(public value: string) {\n    super(SelectMenuSelectedEvent.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class SelectButton extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #props: SelectButtonProps = {\n    disabled: false,\n    value: '',\n    items: [],\n    buttonLabel: '' as LocalizedString,\n    groups: [],\n    variant: Variant.PRIMARY,\n  };\n\n  connectedCallback(): void {\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  get disabled(): boolean {\n    return this.#props.disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this.#props.disabled = disabled;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  get items(): SelectButtonItem[] {\n    return this.#props.items;\n  }\n\n  set items(items: SelectButtonItem[]) {\n    this.#props.items = items;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  set buttonLabel(buttonLabel: LocalizedString) {\n    this.#props.buttonLabel = buttonLabel;\n  }\n\n  set groups(groups: SelectMenuGroup[]) {\n    this.#props.groups = groups;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  get value(): string {\n    return this.#props.value;\n  }\n\n  set value(value: string) {\n    this.#props.value = value;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  get variant(): Variant {\n    return this.#props.variant;\n  }\n\n  set variant(variant: Variant) {\n    this.#props.variant = variant;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  set action(value: Actions.RecorderActions) {\n    this.#props.action = value;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #handleClick(ev: Event): void {\n    ev.stopPropagation();\n    this.dispatchEvent(new SelectButtonClickEvent(this.#props.value));\n  }\n\n  #handleSelectMenuSelect(\n      evt: Event,\n      ): void {\n    if (evt.target instanceof HTMLSelectElement) {\n      this.dispatchEvent(new SelectMenuSelectedEvent(evt.target.value as string));\n      void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n  }\n\n  #renderSelectItem(\n      item: SelectButtonItem,\n      selectedItem: SelectButtonItem,\n      ): Lit.TemplateResult {\n    const selected = item.value === selectedItem.value;\n    // clang-format off\n    return html`\n      <option\n      .title=${item.label()}\n      value=${item.value}\n      ?selected=${selected}\n      jslog=${VisualLogging.item(Platform.StringUtilities.toKebabCase(item.value)).track({click: true})}\n      >${\n        (selected && item.buttonLabel) ? item.buttonLabel() : item.label()\n      }</option>\n    `;\n    // clang-format on\n  }\n\n  #renderSelectGroup(\n      group: SelectMenuGroup,\n      selectedItem: SelectButtonItem,\n      ): Lit.TemplateResult {\n    // clang-format off\n    return html`\n      <optgroup label=${group.name}>\n        ${group.items.map(item => this.#renderSelectItem(item, selectedItem))}\n      </optgroup>\n    `;\n    // clang-format on\n  }\n\n  #getTitle(label: string): string {\n    return this.#props.action ? Models.Tooltip.getTooltipForActions(label, this.#props.action) : '';\n  }\n\n  #render = (): void => {\n    const hasGroups = Boolean(this.#props.groups.length);\n    const items = hasGroups ? this.#props.groups.flatMap(group => group.items) : this.#props.items;\n    const selectedItem = items.find(item => item.value === this.#props.value) || items[0];\n    if (!selectedItem) {\n      return;\n    }\n\n    const classes = {\n      primary: this.#props.variant === Variant.PRIMARY,\n      secondary: this.#props.variant === Variant.OUTLINED,\n    };\n\n    const buttonVariant =\n        this.#props.variant === Variant.OUTLINED ? Buttons.Button.Variant.OUTLINED : Buttons.Button.Variant.PRIMARY;\n    const menuLabel = selectedItem.buttonLabel ? selectedItem.buttonLabel() : selectedItem.label();\n\n    // clang-format off\n    Lit.render(\n      html`\n      <style>${UI.inspectorCommonStyles}</style>\n      <style>${selectButtonStyles}</style>\n      <div class=\"select-button\" title=${ifDefined(this.#getTitle(menuLabel))}>\n      <select\n      class=${classMap(classes)}\n      ?disabled=${this.#props.disabled}\n      jslog=${VisualLogging.dropDown('network-conditions').track({change: true})}\n      @change=${this.#handleSelectMenuSelect}>\n        ${\n          hasGroups\n            ? this.#props.groups.map(group =>\n                this.#renderSelectGroup(group, selectedItem),\n              )\n            : this.#props.items.map(item =>\n                this.#renderSelectItem(item, selectedItem),\n              )\n        }\n    </select>\n        ${\n          selectedItem\n            ? html`\n        <devtools-button\n            .disabled=${this.#props.disabled}\n            .variant=${buttonVariant}\n            .iconName=${selectedItem.buttonIconName}\n            @click=${this.#handleClick}>\n            ${this.#props.buttonLabel}\n        </devtools-button>`\n            : ''\n        }\n      </div>`,\n      this.#shadow,\n      { host: this },\n    );\n    // clang-format on\n  };\n}\n\ncustomElements.define(\n    'devtools-select-button',\n    SelectButton,\n);\n\ndeclare global {\n  interface HTMLElementEventMap {\n    selectbuttonclick: SelectButtonClickEvent;\n  }\n\n  interface HTMLElementTagNameMap {\n    'devtools-select-button': SelectButton;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.select-button {\n  display: flex;\n  gap: 12px;\n}\n\n.select-button devtools-button {\n  position: relative; /* Needed for outline to appear on top of the next element */\n}\n\n.select-button devtools-select-menu {\n  position: relative;\n  top: var(--sys-size-1);\n  height: var(--sys-size-9);\n}\n\n.select-menu-item-content-with-icon {\n  display: flex;\n  align-items: center;\n}\n\n/*# sourceURL=${import.meta.resolve('./selectButton.css')} */`;", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport type * as Puppeteer from '../../../third_party/puppeteer/puppeteer.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as SuggestionInput from '../../../ui/components/suggestion_input/suggestion_input.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Controllers from '../controllers/controllers.js';\nimport * as Models from '../models/models.js';\nimport * as Util from '../util/util.js';\n\nimport stepEditorStyles from './stepEditor.css.js';\nimport {\n  ArrayAssignments,\n  assert,\n  type Assignments,\n  deepFreeze,\n  type DeepImmutable,\n  type DeepPartial,\n  immutableDeepAssign,\n  InsertAssignment,\n  type Keys,\n  type OptionalKeys,\n  type RequiredKeys,\n} from './util.js';\n\nconst {html, Decorators, Directives, LitElement} = Lit;\nconst {customElement, property, state} = Decorators;\nconst {live} = Directives;\n\ntype StepFor<Type> = Extract<Models.Schema.Step, {type: Type}>;\ntype Attribute = Keys<Models.Schema.Step>;\n\ntype DataType<A extends Attribute> = ReturnType<typeof typeConverters[typeof dataTypeByAttribute[A]]>;\n\nconst typeConverters = Object.freeze({\n  string: (value: string) => value.trim(),\n  number: (value: string) => {\n    const number = parseFloat(value);\n    if (Number.isNaN(number)) {\n      return 0;\n    }\n    return number;\n  },\n  boolean: (value: string) => {\n    if (value.toLowerCase() === 'true') {\n      return true;\n    }\n    return false;\n  },\n});\n\nconst dataTypeByAttribute = Object.freeze({\n  selectors: 'string',\n  offsetX: 'number',\n  offsetY: 'number',\n  target: 'string',\n  frame: 'number',\n  assertedEvents: 'string',\n  value: 'string',\n  key: 'string',\n  operator: 'string',\n  count: 'number',\n  expression: 'string',\n  x: 'number',\n  y: 'number',\n  url: 'string',\n  type: 'string',\n  timeout: 'number',\n  duration: 'number',\n  button: 'string',\n  deviceType: 'string',\n  width: 'number',\n  height: 'number',\n  deviceScaleFactor: 'number',\n  isMobile: 'boolean',\n  hasTouch: 'boolean',\n  isLandscape: 'boolean',\n  download: 'number',\n  upload: 'number',\n  latency: 'number',\n  name: 'string',\n  parameters: 'string',\n  visible: 'boolean',\n  properties: 'string',\n  attributes: 'string',\n} as const);\n\nconst defaultValuesByAttribute = deepFreeze({\n  selectors: [['.cls']],\n  offsetX: 1,\n  offsetY: 1,\n  target: 'main',\n  frame: [0],\n  assertedEvents: [\n    {type: 'navigation', url: 'https://example.com', title: 'Title'},\n  ],\n  value: 'Value',\n  key: 'Enter',\n  operator: '>=',\n  count: 1,\n  expression: 'true',\n  x: 0,\n  y: 0,\n  url: 'https://example.com',\n  timeout: 5000,\n  duration: 50,\n  deviceType: 'mouse',\n  button: 'primary',\n  type: 'click',\n  width: 800,\n  height: 600,\n  deviceScaleFactor: 1,\n  isMobile: false,\n  hasTouch: false,\n  isLandscape: true,\n  download: 1000,\n  upload: 1000,\n  latency: 25,\n  name: 'customParam',\n  parameters: '{}',\n  properties: '{}',\n  attributes: [{name: 'attribute', value: 'value'}],\n  visible: true,\n});\n\nconst attributesByType = deepFreeze<{\n  [Type in Models.Schema.StepType]:\n      {required: Array<Exclude<RequiredKeys<StepFor<Type>>, 'type'>>, optional: Array<OptionalKeys<StepFor<Type>>>};\n}>({\n  [Models.Schema.StepType.Click]: {\n    required: ['selectors', 'offsetX', 'offsetY'],\n    optional: [\n      'assertedEvents',\n      'button',\n      'deviceType',\n      'duration',\n      'frame',\n      'target',\n      'timeout',\n    ],\n  },\n  [Models.Schema.StepType.DoubleClick]: {\n    required: ['offsetX', 'offsetY', 'selectors'],\n    optional: [\n      'assertedEvents',\n      'button',\n      'deviceType',\n      'frame',\n      'target',\n      'timeout',\n    ],\n  },\n  [Models.Schema.StepType.Hover]: {\n    required: ['selectors'],\n    optional: ['assertedEvents', 'frame', 'target', 'timeout'],\n  },\n  [Models.Schema.StepType.Change]: {\n    required: ['selectors', 'value'],\n    optional: ['assertedEvents', 'frame', 'target', 'timeout'],\n  },\n  [Models.Schema.StepType.KeyDown]: {\n    required: ['key'],\n    optional: ['assertedEvents', 'target', 'timeout'],\n  },\n  [Models.Schema.StepType.KeyUp]: {\n    required: ['key'],\n    optional: ['assertedEvents', 'target', 'timeout'],\n  },\n  [Models.Schema.StepType.Scroll]: {\n    required: [],\n    optional: ['assertedEvents', 'frame', 'target', 'timeout', 'x', 'y'],\n  },\n  [Models.Schema.StepType.Close]: {\n    required: [],\n    optional: ['assertedEvents', 'target', 'timeout'],\n  },\n  [Models.Schema.StepType.Navigate]: {\n    required: ['url'],\n    optional: ['assertedEvents', 'target', 'timeout'],\n  },\n  [Models.Schema.StepType.WaitForElement]: {\n    required: ['selectors'],\n    optional: [\n      'assertedEvents',\n      'attributes',\n      'count',\n      'frame',\n      'operator',\n      'properties',\n      'target',\n      'timeout',\n      'visible',\n    ],\n  },\n  [Models.Schema.StepType.WaitForExpression]: {\n    required: ['expression'],\n    optional: ['assertedEvents', 'frame', 'target', 'timeout'],\n  },\n  [Models.Schema.StepType.CustomStep]: {\n    required: ['name', 'parameters'],\n    optional: ['assertedEvents', 'target', 'timeout'],\n  },\n  [Models.Schema.StepType.EmulateNetworkConditions]: {\n    required: ['download', 'latency', 'upload'],\n    optional: ['assertedEvents', 'target', 'timeout'],\n  },\n  [Models.Schema.StepType.SetViewport]: {\n    required: [\n      'deviceScaleFactor',\n      'hasTouch',\n      'height',\n      'isLandscape',\n      'isMobile',\n      'width',\n    ],\n    optional: ['assertedEvents', 'target', 'timeout'],\n  },\n});\n\nconst UIStrings = {\n  /**\n   *@description The text that is disabled when the steps were not saved due to an error. The error message itself is always in English and not translated.\n   *@example {Saving failed} error\n   */\n  notSaved: 'Not saved: {error}',\n  /**\n   *@description The button title that adds a new attribute to the form.\n   *@example {timeout} attributeName\n   */\n  addAttribute: 'Add {attributeName}',\n  /**\n   *@description The title of a button that deletes an attribute from the form.\n   */\n  deleteRow: 'Delete row',\n  /**\n   *@description The title of a button that allows you to select an element on the page and update CSS/ARIA selectors.\n   */\n  selectorPicker: 'Select an element in the page to update selectors',\n  /**\n   *@description The title of a button that adds a new input field for the entry of the frame index. Frame index is the number of the frame within the page's frame tree.\n   */\n  addFrameIndex: 'Add frame index within the frame tree',\n  /**\n   *@description The title of a button that removes a frame index field from the form.\n   */\n  removeFrameIndex: 'Remove frame index',\n  /**\n   *@description The title of a button that adds a field to input a part of a selector in the editor form.\n   */\n  addSelectorPart: 'Add a selector part',\n  /**\n   *@description The title of a button that removes a field to input a part of a selector in the editor form.\n   */\n  removeSelectorPart: 'Remove a selector part',\n  /**\n   *@description The title of a button that adds a field to input a selector in the editor form.\n   */\n  addSelector: 'Add a selector',\n  /**\n   *@description The title of a button that removes a field to input a selector in the editor form.\n   */\n  removeSelector: 'Remove a selector',\n  /**\n   *@description The error message display when a user enters a type in the input not associates with any existing types.\n   */\n  unknownActionType: 'Unknown action type.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/recorder/components/StepEditor.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-recorder-step-editor': StepEditor;\n    'devtools-recorder-selector-picker-button': RecorderSelectorPickerButton;\n  }\n}\n\nexport class StepEditedEvent extends Event {\n  static readonly eventName = 'stepedited';\n  data: Models.Schema.Step;\n\n  constructor(step: Models.Schema.Step) {\n    super(StepEditedEvent.eventName, {bubbles: true, composed: true});\n    this.data = step;\n  }\n}\n\nexport interface EditorState {\n  type: Models.Schema.StepType;\n  target?: string;\n  selectors?: string[][];\n  frame?: number[];\n  x?: number;\n  y?: number;\n  offsetX?: number;\n  offsetY?: number;\n  key?: string;\n  expression?: string;\n  value?: string;\n  operator?: string;\n  count?: number;\n  assertedEvents?: Models.Schema.AssertedEvent[];\n  url?: string;\n  timeout?: number;\n  button?: string;\n  duration?: number;\n  deviceType?: string;\n  width?: number;\n  height?: number;\n  deviceScaleFactor?: number;\n  isMobile?: boolean;\n  hasTouch?: boolean;\n  isLandscape?: boolean;\n  download?: number;\n  upload?: number;\n  latency?: number;\n  name?: string;\n  parameters?: string;\n  visible?: boolean;\n  properties?: string;\n  attributes?: Array<{name: string, value: string}>;\n}\n\n// Makes use of the fact that JSON values get their undefined values cleaned\n// after stringification.\nconst cleanUndefineds = <T>(value: T): T => {\n  return JSON.parse(JSON.stringify(value));\n};\n\ninterface Puppeteer {\n  page: Puppeteer.Page;\n  browser: Puppeteer.Browser;\n}\n\nexport class EditorState {\n  static #puppeteer: Util.SharedObject.SharedObject<Puppeteer> = new Util.SharedObject.SharedObject(\n      () => Models.RecordingPlayer.RecordingPlayer.connectPuppeteer(),\n      ({browser}) => Models.RecordingPlayer.RecordingPlayer.disconnectPuppeteer(browser));\n\n  static async default(type: Models.Schema.StepType): Promise<DeepImmutable<EditorState>> {\n    const state = {type};\n    const attributes = attributesByType[state.type];\n    let promise: Promise<unknown> = Promise.resolve();\n    for (const attribute of attributes.required) {\n      promise = Promise.all([\n        promise,\n        (async () => Object.assign(state, {\n          [attribute]: await this.defaultByAttribute(state, attribute),\n        }))(),\n      ]);\n    }\n    await promise;\n    return Object.freeze(state);\n  }\n\n  static async defaultByAttribute<Attribute extends keyof typeof defaultValuesByAttribute>(\n      state: DeepImmutable<EditorState>,\n      attribute: Attribute): Promise<DeepImmutable<typeof defaultValuesByAttribute[Attribute]>>;\n  static async defaultByAttribute(_state: DeepImmutable<EditorState>, attribute: keyof typeof defaultValuesByAttribute):\n      Promise<unknown> {\n    return await this.#puppeteer.run(puppeteer => {\n      switch (attribute) {\n        case 'assertedEvents': {\n          return immutableDeepAssign(defaultValuesByAttribute.assertedEvents, new ArrayAssignments({\n                                       0: {\n                                         url: puppeteer.page.url() || defaultValuesByAttribute.assertedEvents[0].url,\n                                       },\n                                     }));\n        }\n        case 'url': {\n          return puppeteer.page.url() || defaultValuesByAttribute.url;\n        }\n        case 'height': {\n          return (\n              puppeteer.page.evaluate(() => (visualViewport as VisualViewport).height) ||\n              defaultValuesByAttribute.height);\n        }\n        case 'width': {\n          return (\n              puppeteer.page.evaluate(() => (visualViewport as VisualViewport).width) ||\n              defaultValuesByAttribute.width);\n        }\n        default: {\n          return defaultValuesByAttribute[attribute];\n        }\n      }\n    });\n  }\n\n  static fromStep(step: DeepImmutable<Models.Schema.Step>): DeepImmutable<EditorState> {\n    const state = structuredClone(step) as EditorState;\n    for (const key of ['parameters', 'properties'] as Array<'properties'>) {\n      if (key in step && step[key] !== undefined) {\n        // @ts-expect-error Potential infinite type instantiation.\n        state[key] = JSON.stringify(step[key]);\n      }\n    }\n    if ('attributes' in step && step.attributes) {\n      state.attributes = [];\n      for (const [name, value] of Object.entries(step.attributes)) {\n        state.attributes.push({name, value});\n      }\n    }\n    if ('selectors' in step) {\n      state.selectors = step.selectors.map(selector => {\n        if (typeof selector === 'string') {\n          return [selector];\n        }\n        return [...selector];\n      });\n    }\n    return deepFreeze(state);\n  }\n\n  static toStep(state: DeepImmutable<EditorState>): Models.Schema.Step {\n    const step = structuredClone(state) as Models.Schema.Step;\n    for (const key of ['parameters', 'properties'] as Array<'properties'>) {\n      const value = state[key];\n      if (value) {\n        Object.assign(step, {[key]: JSON.parse(value)});\n      }\n    }\n    if (state.attributes) {\n      if (state.attributes.length !== 0) {\n        const attributes = {};\n        for (const {name, value} of state.attributes) {\n          Object.assign(attributes, {[name]: value});\n        }\n        Object.assign(step, {attributes});\n      } else if ('attributes' in step) {\n        delete step.attributes;\n      }\n    }\n    if (state.selectors) {\n      const selectors = state.selectors.filter(selector => selector.length > 0).map(selector => {\n        if (selector.length === 1) {\n          return selector[0];\n        }\n        return [...selector];\n      });\n      if (selectors.length !== 0) {\n        Object.assign(step, {selectors});\n      } else if ('selectors' in step) {\n        // @ts-expect-error We want to trigger an error in the parsing phase.\n        delete step.selectors;\n      }\n    }\n    if (state.frame && state.frame.length === 0 && 'frame' in step) {\n      delete step.frame;\n    }\n    return cleanUndefineds(Models.SchemaUtils.parseStep(step));\n  }\n}\n\n/**\n * @fires RequestSelectorAttributeEvent#requestselectorattribute\n * @fires SelectorPickedEvent#selectorpicked\n */\n@customElement('devtools-recorder-selector-picker-button')\nclass RecorderSelectorPickerButton extends LitElement {\n  @property({type: Boolean}) declare disabled: boolean;\n\n  #picker = new Controllers.SelectorPicker.SelectorPicker(this);\n\n  constructor() {\n    super();\n    this.disabled = false;\n  }\n\n  #handleClickEvent = (event: MouseEvent): void => {\n    event.preventDefault();\n    event.stopPropagation();\n    void this.#picker.toggle();\n  };\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n    void this.#picker.stop();\n  }\n\n  protected override render(): Lit.TemplateResult|undefined {\n    if (this.disabled) {\n      return;\n    }\n    // clang-format off\n    return html`<style>${stepEditorStyles}</style><devtools-button\n      @click=${this.#handleClickEvent}\n      .title=${i18nString(UIStrings.selectorPicker)}\n      class=\"selector-picker\"\n      .size=${Buttons.Button.Size.SMALL}\n      .iconName=${'select-element'}\n      .active=${this.#picker.active}\n      .variant=${Buttons.Button.Variant.ICON}\n      jslog=${VisualLogging.toggle('selector-picker').track({\n      click: true,\n    })}\n    ></devtools-button>`;\n    // clang-format on\n  }\n}\n\n/**\n * @fires RequestSelectorAttributeEvent#requestselectorattribute\n * @fires StepEditedEvent#stepedited\n */\n@customElement('devtools-recorder-step-editor')\nexport class StepEditor extends LitElement {\n  @state() private declare state: DeepImmutable<EditorState>;\n  @state() private declare error: string|undefined;\n\n  @property({type: Boolean}) declare isTypeEditable: boolean;\n  @property({type: Boolean}) declare disabled: boolean;\n\n  #renderedAttributes = new Set<Attribute>();\n\n  constructor() {\n    super();\n\n    this.state = {type: Models.Schema.StepType.WaitForElement};\n\n    this.isTypeEditable = true;\n    this.disabled = false;\n  }\n\n  protected override createRenderRoot(): HTMLElement|DocumentFragment {\n    const root = super.createRenderRoot();\n    root.addEventListener('keydown', this.#handleKeyDownEvent);\n    return root;\n  }\n\n  set step(step: DeepImmutable<Models.Schema.Step>) {\n    this.state = deepFreeze(EditorState.fromStep(step));\n    this.error = undefined;\n  }\n\n  #commit(updatedState: DeepImmutable<EditorState>): void {\n    try {\n      this.dispatchEvent(new StepEditedEvent(EditorState.toStep(updatedState)));\n      // Note we don't need to update this variable since it will come from up\n      // the tree, but processing up the tree is asynchronous implying we cannot\n      // reliably know when the state will come back down. Since we need to\n      // focus the DOM elements that may be created as a result of this new\n      // state, we set it here for waiting on the updateComplete promise later.\n      this.state = updatedState;\n    } catch (error) {\n      this.error = error.message;\n    }\n  }\n\n  #handleSelectorPickedEvent = (event: Controllers.SelectorPicker.SelectorPickedEvent): void => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.#commit(immutableDeepAssign(this.state, {\n      target: event.data.target,\n      frame: event.data.frame,\n      selectors: event.data.selectors.map(selector => typeof selector === 'string' ? [selector] : selector),\n      offsetX: event.data.offsetX,\n      offsetY: event.data.offsetY,\n    }));\n  };\n\n  #handleAddOrRemoveClick =\n      (assignments: DeepImmutable<DeepPartial<Assignments<EditorState>>>, query: string,\n       metric: Host.UserMetrics.RecordingEdited): ((event: Event) => void) => event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.#commit(immutableDeepAssign(this.state, assignments));\n\n        this.#ensureFocus(query);\n\n        if (metric) {\n          Host.userMetrics.recordingEdited(metric);\n        }\n      };\n\n  #handleKeyDownEvent = (event: Event): void => {\n    assert(event instanceof KeyboardEvent);\n    if (event.target instanceof SuggestionInput.SuggestionInput.SuggestionInput && event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      const elements = this.renderRoot.querySelectorAll('devtools-suggestion-input');\n      const element = [...elements].findIndex(value => value === event.target);\n      if (element >= 0 && element + 1 < elements.length) {\n        elements[element + 1].focus();\n      } else {\n        event.target.blur();\n      }\n    }\n  };\n\n  #handleInputBlur = <A extends Attribute>(opts: {\n    attribute: A,\n    // If there are not assignments, then we should ignore the event.\n    from(this: StepEditor, value: DataType<A>): DeepImmutable<DeepPartial<Assignments<EditorState>>>|undefined,\n    metric: Host.UserMetrics.RecordingEdited,\n  }): ((event: Event) => void) => event => {\n    assert(event.target instanceof SuggestionInput.SuggestionInput.SuggestionInput);\n    if (event.target.disabled) {\n      return;\n    }\n\n    const dataType = dataTypeByAttribute[opts.attribute];\n    const value = typeConverters[dataType](event.target.value) as DataType<A>;\n    const assignments = opts.from.bind(this)(value);\n    if (!assignments) {\n      return;\n    }\n    this.#commit(immutableDeepAssign(this.state, assignments));\n\n    if (opts.metric) {\n      Host.userMetrics.recordingEdited(opts.metric);\n    }\n  };\n\n  #handleTypeInputBlur = async(event: Event): Promise<void> => {\n    assert(event.target instanceof SuggestionInput.SuggestionInput.SuggestionInput);\n    if (event.target.disabled) {\n      return;\n    }\n\n    const value = event.target.value as Models.Schema.StepType;\n    if (value === this.state.type) {\n      return;\n    }\n    if (!Object.values(Models.Schema.StepType).includes(value)) {\n      this.error = i18nString(UIStrings.unknownActionType);\n      return;\n    }\n    this.#commit(await EditorState.default(value));\n    Host.userMetrics.recordingEdited(Host.UserMetrics.RecordingEdited.TYPE_CHANGED);\n  };\n\n  #handleAddRowClickEvent = async(event: MouseEvent): Promise<void> => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const attribute = (event.target as HTMLElement).dataset.attribute as Attribute;\n\n    this.#commit(immutableDeepAssign(this.state, {\n      [attribute]: await EditorState.defaultByAttribute(this.state, attribute),\n    }));\n\n    this.#ensureFocus(`[data-attribute=${attribute}].attribute devtools-suggestion-input`);\n  };\n\n  #renderInlineButton(opts: {class: string, title: string, iconName: string, onClick: (event: MouseEvent) => void}):\n      Lit.TemplateResult|undefined {\n    if (this.disabled) {\n      return;\n    }\n    return html`\n      <devtools-button\n        title=${opts.title}\n        .size=${Buttons.Button.Size.SMALL}\n        .iconName=${opts.iconName}\n        .variant=${Buttons.Button.Variant.ICON}\n        jslog=${VisualLogging.action(opts.class).track({\n      click: true,\n    })}\n        class=\"inline-button ${opts.class}\"\n        @click=${opts.onClick}\n      ></devtools-button>\n    `;\n  }\n\n  #renderDeleteButton(attribute: Attribute): Lit.TemplateResult|undefined {\n    if (this.disabled) {\n      return;\n    }\n\n    const attributes = attributesByType[this.state.type];\n    const optional = [...attributes.optional].includes(attribute as typeof attributes.optional[number]);\n    if (!optional || this.disabled) {\n      return;\n    }\n\n    // clang-format off\n    return html`<devtools-button\n      .size=${Buttons.Button.Size.SMALL}\n      .iconName=${'bin'}\n      .variant=${Buttons.Button.Variant.ICON}\n      .title=${i18nString(UIStrings.deleteRow)}\n      class=\"inline-button delete-row\"\n      data-attribute=${attribute}\n      jslog=${VisualLogging.action('delete').track({click: true})}\n      @click=${(event: MouseEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.#commit(\n          immutableDeepAssign(this.state, { [attribute]: undefined }),\n        );\n      }}\n    ></devtools-button>`;\n    // clang-format on\n  }\n\n  #renderTypeRow(editable: boolean): Lit.TemplateResult {\n    this.#renderedAttributes.add('type');\n    // clang-format off\n    return html`<div class=\"row attribute\" data-attribute=\"type\" jslog=${VisualLogging.treeItem('type')}>\n      <div>type<span class=\"separator\">:</span></div>\n      <devtools-suggestion-input\n        .disabled=${!editable || this.disabled}\n        .options=${Object.values(Models.Schema.StepType)}\n        .placeholder=${defaultValuesByAttribute.type}\n        .value=${live(this.state.type)}\n        @blur=${this.#handleTypeInputBlur}\n      ></devtools-suggestion-input>\n    </div>`;\n    // clang-format on\n  }\n\n  #renderRow(attribute: Attribute): Lit.TemplateResult|undefined {\n    this.#renderedAttributes.add(attribute);\n    const attributeValue = this.state[attribute]?.toString();\n    if (attributeValue === undefined) {\n      return;\n    }\n    // clang-format off\n    return html`<div class=\"row attribute\" data-attribute=${attribute} jslog=${VisualLogging.treeItem(Platform.StringUtilities.toKebabCase(attribute))}>\n      <div>${attribute}<span class=\"separator\">:</span></div>\n      <devtools-suggestion-input\n        .disabled=${this.disabled}\n        .placeholder=${defaultValuesByAttribute[attribute].toString()}\n        .value=${live(attributeValue)}\n        .mimeType=${(() => {\n          switch (attribute) {\n            case 'expression':\n              return 'text/javascript';\n            case 'properties':\n              return 'application/json';\n            default:\n              return '';\n          }\n        })()}\n        @blur=${this.#handleInputBlur({\n      attribute,\n      from(value) {\n        if (this.state[attribute] === undefined) {\n          return;\n        }\n        switch (attribute) {\n          case 'properties':\n            Host.userMetrics.recordingAssertion(Host.UserMetrics.RecordingAssertion.PROPERTY_ASSERTION_EDITED);\n            break;\n        }\n        return {[attribute]: value};\n      },\n      metric: Host.UserMetrics.RecordingEdited.OTHER_EDITING,\n    })}\n      ></devtools-suggestion-input>\n      ${this.#renderDeleteButton(attribute)}\n    </div>`;\n    // clang-format on\n  }\n\n  #renderFrameRow(): Lit.TemplateResult|undefined {\n    this.#renderedAttributes.add('frame');\n    if (this.state.frame === undefined) {\n      return;\n    }\n    // clang-format off\n    return html`\n      <div class=\"attribute\" data-attribute=\"frame\" jslog=${VisualLogging.treeItem('frame')}>\n        <div class=\"row\">\n          <div>frame<span class=\"separator\">:</span></div>\n          ${this.#renderDeleteButton('frame')}\n        </div>\n        ${this.state.frame.map((frame, index, frames) => {\n          return html`\n            <div class=\"padded row\">\n              <devtools-suggestion-input\n                .disabled=${this.disabled}\n                .placeholder=${defaultValuesByAttribute.frame[0].toString()}\n                .value=${live(frame.toString())}\n                data-path=${`frame.${index}`}\n                @blur=${this.#handleInputBlur({\n                  attribute: 'frame',\n                  from(value) {\n                    if (this.state.frame?.[index] === undefined) {\n                      return;\n                    }\n                    return {\n                      frame: new ArrayAssignments({ [index]: value }),\n                    };\n                  },\n                  metric: Host.UserMetrics.RecordingEdited.OTHER_EDITING,\n                })}\n              ></devtools-suggestion-input>\n              ${this.#renderInlineButton({\n                class: 'add-frame',\n                title: i18nString(UIStrings.addFrameIndex),\n                iconName: 'plus',\n                onClick: this.#handleAddOrRemoveClick(\n                  {\n                    frame: new ArrayAssignments({\n                      [index + 1]: new InsertAssignment(\n                        defaultValuesByAttribute.frame[0],\n                      ),\n                    }),\n                  },\n                  `devtools-suggestion-input[data-path=\"frame.${index + 1}\"]`,\n                  Host.UserMetrics.RecordingEdited.OTHER_EDITING,\n                ),\n              })}\n              ${this.#renderInlineButton({\n                class: 'remove-frame',\n                title: i18nString(UIStrings.removeFrameIndex),\n                iconName: 'minus',\n                onClick: this.#handleAddOrRemoveClick(\n                  {\n                    frame: new ArrayAssignments({ [index]: undefined }),\n                  },\n                  `devtools-suggestion-input[data-path=\"frame.${Math.min(\n                    index,\n                    frames.length - 2,\n                  )}\"]`,\n                  Host.UserMetrics.RecordingEdited.OTHER_EDITING,\n                ),\n              })}\n            </div>\n          `;\n        })}\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #renderSelectorsRow(): Lit.TemplateResult|undefined {\n    this.#renderedAttributes.add('selectors');\n    if (this.state.selectors === undefined) {\n      return;\n    }\n    // clang-format off\n    return html`<div class=\"attribute\" data-attribute=\"selectors\" jslog=${VisualLogging.treeItem('selectors')}>\n      <div class=\"row\">\n        <div>selectors<span class=\"separator\">:</span></div>\n        <devtools-recorder-selector-picker-button\n          @selectorpicked=${this.#handleSelectorPickedEvent}\n          .disabled=${this.disabled}\n        ></devtools-recorder-selector-picker-button>\n        ${this.#renderDeleteButton('selectors')}\n      </div>\n      ${this.state.selectors.map((selector, index, selectors) => {\n        return html`<div class=\"padded row\" data-selector-path=${index}>\n            <div>selector #${index + 1}<span class=\"separator\">:</span></div>\n            ${this.#renderInlineButton({\n              class: 'add-selector',\n              title: i18nString(UIStrings.addSelector),\n              iconName: 'plus',\n              onClick: this.#handleAddOrRemoveClick(\n                {\n                  selectors: new ArrayAssignments({\n                    [index + 1]: new InsertAssignment(\n                      structuredClone(defaultValuesByAttribute.selectors[0]),\n                    ),\n                  }),\n                },\n                `devtools-suggestion-input[data-path=\"selectors.${index + 1}.0\"]`,\n                Host.UserMetrics.RecordingEdited.SELECTOR_ADDED,\n              ),\n            })}\n            ${this.#renderInlineButton({\n              class: 'remove-selector',\n              title: i18nString(UIStrings.removeSelector),\n              iconName: 'minus',\n              onClick: this.#handleAddOrRemoveClick(\n                { selectors: new ArrayAssignments({ [index]: undefined }) },\n                `devtools-suggestion-input[data-path=\"selectors.${Math.min(\n                  index,\n                  selectors.length - 2,\n                )}.0\"]`,\n                Host.UserMetrics.RecordingEdited.SELECTOR_REMOVED,\n              ),\n            })}\n          </div>\n          ${selector.map((part, partIndex, parts) => {\n            return html`<div\n              class=\"double padded row\"\n              data-selector-path=\"${index}.${partIndex}\"\n            >\n              <devtools-suggestion-input\n                .disabled=${this.disabled}\n                .placeholder=${defaultValuesByAttribute.selectors[0][0]}\n                .value=${live(part)}\n                data-path=${`selectors.${index}.${partIndex}`}\n                @blur=${this.#handleInputBlur({\n                  attribute: 'selectors',\n                  from(value) {\n                    if (\n                      this.state.selectors?.[index]?.[partIndex] === undefined\n                    ) {\n                      return;\n                    }\n                    return {\n                      selectors: new ArrayAssignments({\n                        [index]: new ArrayAssignments({\n                          [partIndex]: value,\n                        }),\n                      }),\n                    };\n                  },\n                  metric: Host.UserMetrics.RecordingEdited.SELECTOR_PART_EDITED,\n                })}\n              ></devtools-suggestion-input>\n              ${this.#renderInlineButton({\n                class: 'add-selector-part',\n                title: i18nString(UIStrings.addSelectorPart),\n                iconName: 'plus',\n                onClick: this.#handleAddOrRemoveClick(\n                  {\n                    selectors: new ArrayAssignments({\n                      [index]: new ArrayAssignments({\n                        [partIndex + 1]: new InsertAssignment(\n                          defaultValuesByAttribute.selectors[0][0],\n                        ),\n                      }),\n                    }),\n                  },\n                  `devtools-suggestion-input[data-path=\"selectors.${index}.${\n                    partIndex + 1\n                  }\"]`,\n                  Host.UserMetrics.RecordingEdited.SELECTOR_PART_ADDED,\n                ),\n              })}\n              ${this.#renderInlineButton({\n                class: 'remove-selector-part',\n                title: i18nString(UIStrings.removeSelectorPart),\n                iconName: 'minus',\n                onClick: this.#handleAddOrRemoveClick(\n                  {\n                    selectors: new ArrayAssignments({\n                      [index]: new ArrayAssignments({\n                        [partIndex]: undefined,\n                      }),\n                    }),\n                  },\n                  `devtools-suggestion-input[data-path=\"selectors.${index}.${Math.min(\n                    partIndex,\n                    parts.length - 2,\n                  )}\"]`,\n                  Host.UserMetrics.RecordingEdited.SELECTOR_PART_REMOVED,\n                ),\n              })}\n            </div>`;\n          })}`;\n      })}\n    </div>`;\n    // clang-format on\n  }\n\n  #renderAssertedEvents(): Lit.TemplateResult|undefined {\n    this.#renderedAttributes.add('assertedEvents');\n    if (this.state.assertedEvents === undefined) {\n      return;\n    }\n    // clang-format off\n    return html`<div class=\"attribute\" data-attribute=\"assertedEvents\" jslog=${VisualLogging.treeItem('asserted-events')}>\n      <div class=\"row\">\n        <div>asserted events<span class=\"separator\">:</span></div>\n        ${this.#renderDeleteButton('assertedEvents')}\n      </div>\n      ${this.state.assertedEvents.map((event, index) => {\n        return html` <div class=\"padded row\" jslog=${VisualLogging.treeItem('event-type')}>\n            <div>type<span class=\"separator\">:</span></div>\n            <div>${event.type}</div>\n          </div>\n          <div class=\"padded row\" jslog=${VisualLogging.treeItem('event-title')}>\n            <div>title<span class=\"separator\">:</span></div>\n            <devtools-suggestion-input\n              .disabled=${this.disabled}\n              .placeholder=${defaultValuesByAttribute.assertedEvents[0].title}\n              .value=${live(event.title ?? '')}\n              @blur=${this.#handleInputBlur({\n                attribute: 'assertedEvents',\n                from(value) {\n                  if (this.state.assertedEvents?.[index]?.title === undefined) {\n                    return;\n                  }\n                  return {\n                    assertedEvents: new ArrayAssignments({\n                      [index]: { title: value },\n                    }),\n                  };\n                },\n                metric: Host.UserMetrics.RecordingEdited.OTHER_EDITING,\n              })}\n            ></devtools-suggestion-input>\n          </div>\n          <div class=\"padded row\" jslog=${VisualLogging.treeItem('event-url')}>\n            <div>url<span class=\"separator\">:</span></div>\n            <devtools-suggestion-input\n              .disabled=${this.disabled}\n              .placeholder=${defaultValuesByAttribute.assertedEvents[0].url}\n              .value=${live(event.url ?? '')}\n              @blur=${this.#handleInputBlur({\n                attribute: 'url',\n                from(value) {\n                  if (this.state.assertedEvents?.[index]?.url === undefined) {\n                    return;\n                  }\n                  return {\n                    assertedEvents: new ArrayAssignments({\n                      [index]: { url: value },\n                    }),\n                  };\n                },\n                metric: Host.UserMetrics.RecordingEdited.OTHER_EDITING,\n              })}\n            ></devtools-suggestion-input>\n          </div>`;\n      })}\n    </div> `;\n    // clang-format on\n  }\n\n  #renderAttributesRow(): Lit.TemplateResult|undefined {\n    this.#renderedAttributes.add('attributes');\n    if (this.state.attributes === undefined) {\n      return;\n    }\n    // clang-format off\n    return html`<div class=\"attribute\" data-attribute=\"attributes\" jslog=${VisualLogging.treeItem('attributes')}>\n      <div class=\"row\">\n        <div>attributes<span class=\"separator\">:</span></div>\n        ${this.#renderDeleteButton('attributes')}\n      </div>\n      ${this.state.attributes.map(({ name, value }, index, attributes) => {\n        return html`<div class=\"padded row\" jslog=${VisualLogging.treeItem('attribute')}>\n          <devtools-suggestion-input\n            .disabled=${this.disabled}\n            .placeholder=${defaultValuesByAttribute.attributes[0].name}\n            .value=${live(name)}\n            data-path=${`attributes.${index}.name`}\n            jslog=${VisualLogging.key().track({change: true})}\n            @blur=${this.#handleInputBlur({\n              attribute: 'attributes',\n              from(name) {\n                if (this.state.attributes?.[index]?.name === undefined) {\n                  return;\n                }\n                Host.userMetrics.recordingAssertion(\n                  Host.UserMetrics.RecordingAssertion.ATTRIBUTE_ASSERTION_EDITED,\n                );\n                return {\n                  attributes: new ArrayAssignments({ [index]: { name } }),\n                };\n              },\n              metric: Host.UserMetrics.RecordingEdited.OTHER_EDITING,\n            })}\n          ></devtools-suggestion-input>\n          <span class=\"separator\">:</span>\n          <devtools-suggestion-input\n            .disabled=${this.disabled}\n            .placeholder=${defaultValuesByAttribute.attributes[0].value}\n            .value=${live(value)}\n            data-path=${`attributes.${index}.value`}\n            @blur=${this.#handleInputBlur({\n              attribute: 'attributes',\n              from(value) {\n                if (this.state.attributes?.[index]?.value === undefined) {\n                  return;\n                }\n                Host.userMetrics.recordingAssertion(\n                  Host.UserMetrics.RecordingAssertion.ATTRIBUTE_ASSERTION_EDITED,\n                );\n                return {\n                  attributes: new ArrayAssignments({ [index]: { value } }),\n                };\n              },\n              metric: Host.UserMetrics.RecordingEdited.OTHER_EDITING,\n            })}\n          ></devtools-suggestion-input>\n          ${this.#renderInlineButton({\n            class: 'add-attribute-assertion',\n            title: i18nString(UIStrings.addSelectorPart),\n            iconName: 'plus',\n            onClick: this.#handleAddOrRemoveClick(\n              {\n                attributes: new ArrayAssignments({\n                  [index + 1]: new InsertAssignment(\n                    (() => {\n                      {\n                        const names = new Set(\n                          attributes.map(({ name }) => name),\n                        );\n                        const defaultAttribute =\n                          defaultValuesByAttribute.attributes[0];\n                        let name = defaultAttribute.name;\n                        let i = 0;\n                        while (names.has(name)) {\n                          ++i;\n                          name = `${defaultAttribute.name}-${i}`;\n                        }\n                        return { ...defaultAttribute, name };\n                      }\n                    })(),\n                  ),\n                }),\n              },\n              `devtools-suggestion-input[data-path=\"attributes.${\n                index + 1\n              }.name\"]`,\n              Host.UserMetrics.RecordingEdited.OTHER_EDITING,\n            ),\n          })}\n          ${this.#renderInlineButton({\n            class: 'remove-attribute-assertion',\n            title: i18nString(UIStrings.removeSelectorPart),\n            iconName: 'minus',\n            onClick: this.#handleAddOrRemoveClick(\n              { attributes: new ArrayAssignments({ [index]: undefined }) },\n              `devtools-suggestion-input[data-path=\"attributes.${Math.min(\n                index,\n                attributes.length - 2,\n              )}.value\"]`,\n              Host.UserMetrics.RecordingEdited.OTHER_EDITING,\n            ),\n          })}\n        </div>`;\n      })}\n    </div>`;\n    // clang-format on\n  }\n\n  #renderAddRowButtons(): Array<Lit.TemplateResult|undefined> {\n    const attributes = attributesByType[this.state.type];\n    return [...attributes.optional].filter(attr => this.state[attr] === undefined).map(attr => {\n      // clang-format off\n        return html`<devtools-button\n          .variant=${Buttons.Button.Variant.OUTLINED}\n          class=\"add-row\"\n          data-attribute=${attr}\n          jslog=${VisualLogging.action(`add-${Platform.StringUtilities.toKebabCase(attr)}`)}\n          @click=${this.#handleAddRowClickEvent}\n        >\n          ${i18nString(UIStrings.addAttribute, {\n            attributeName: attr,\n          })}\n        </devtools-button>`;\n      // clang-format on\n    });\n  }\n\n  #ensureFocus = (query: string): void => {\n    void this.updateComplete.then(() => {\n      const node = this.renderRoot.querySelector<HTMLElement>(query);\n      node?.focus();\n    });\n  };\n\n  protected override render(): Lit.TemplateResult {\n    this.#renderedAttributes = new Set();\n\n    // clang-format off\n    const result = html`\n      <style>${stepEditorStyles}</style>\n      <div class=\"wrapper\" jslog=${VisualLogging.tree('step-editor')} >\n        ${this.#renderTypeRow(this.isTypeEditable)} ${this.#renderRow('target')}\n        ${this.#renderFrameRow()} ${this.#renderSelectorsRow()}\n        ${this.#renderRow('deviceType')} ${this.#renderRow('button')}\n        ${this.#renderRow('url')} ${this.#renderRow('x')}\n        ${this.#renderRow('y')} ${this.#renderRow('offsetX')}\n        ${this.#renderRow('offsetY')} ${this.#renderRow('value')}\n        ${this.#renderRow('key')} ${this.#renderRow('operator')}\n        ${this.#renderRow('count')} ${this.#renderRow('expression')}\n        ${this.#renderRow('duration')} ${this.#renderAssertedEvents()}\n        ${this.#renderRow('timeout')} ${this.#renderRow('width')}\n        ${this.#renderRow('height')} ${this.#renderRow('deviceScaleFactor')}\n        ${this.#renderRow('isMobile')} ${this.#renderRow('hasTouch')}\n        ${this.#renderRow('isLandscape')} ${this.#renderRow('download')}\n        ${this.#renderRow('upload')} ${this.#renderRow('latency')}\n        ${this.#renderRow('name')} ${this.#renderRow('parameters')}\n        ${this.#renderRow('visible')} ${this.#renderRow('properties')}\n        ${this.#renderAttributesRow()}\n        ${this.error\n          ? html`\n              <div class=\"error\">\n                ${i18nString(UIStrings.notSaved, {\n                  error: this.error,\n                })}\n              </div>\n            `\n          : undefined}\n        ${!this.disabled\n          ? html`<div\n              class=\"row-buttons wrapped gap row regular-font no-margin\"\n            >\n              ${this.#renderAddRowButtons()}\n            </div>`\n          : undefined}\n      </div>\n    `;\n\n    // clang-format on\n    for (const key of Object.keys(dataTypeByAttribute)) {\n      if (!this.#renderedAttributes.has(key as Attribute)) {\n        throw new Error(`The editable attribute ${key} does not have UI`);\n      }\n    }\n\n    return result;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  font-size: inherit;\n}\n\n:host {\n  display: block;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n  color: var(--sys-color-token-property-special);\n  font-family: var(--monospace-font-family);\n  font-size: var(--monospace-font-size);\n  align-items: center;\n  line-height: 18px;\n  margin-top: 3px;\n}\n\n.row devtools-button {\n  line-height: 1;\n  margin-left: 0.5em;\n}\n\n.separator {\n  margin-right: 0.5em;\n  color: var(--sys-color-on-surface);\n}\n\n.padded {\n  margin-left: 2em;\n}\n\n.padded.double {\n  margin-left: 4em;\n}\n\n.selector-picker {\n  width: 18px;\n  height: 18px;\n}\n\n.inline-button {\n  width: 18px;\n  height: 18px;\n  opacity: 0%;\n  visibility: hidden;\n  transition: opacity 200ms;\n  flex-shrink: 0;\n}\n\n.row:focus-within .inline-button,\n.row:hover .inline-button {\n  opacity: 100%;\n  visibility: visible;\n}\n\n.wrapped.row {\n  flex-wrap: wrap;\n}\n\n.gap.row {\n  gap: 5px;\n}\n\n.gap.row devtools-button {\n  margin-left: 0;\n}\n\n.regular-font {\n  font-family: inherit;\n  font-size: inherit;\n}\n\n.no-margin {\n  margin: 0;\n}\n\n.row-buttons {\n  margin-top: 3px;\n}\n\n.error {\n  margin: 3px 0 6px;\n  padding: 8px 12px;\n  background: var(--sys-color-error-container);\n  color: var(--sys-color-error);\n}\n\n/*# sourceURL=${import.meta.resolve('./stepEditor.css')} */`;", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport const mod = (a: number, n: number): number => {\n  return ((a % n) + n) % n;\n};\n\nexport function assert<T>(\n    predicate: T,\n    message = 'Assertion failed!',\n    ): asserts predicate {\n  if (!predicate) {\n    throw new Error(message);\n  }\n}\n\nexport type Keys<T> = T extends T ? keyof T : never;\n\nexport type RequiredKeys<T> = {\n  [K in keyof T] -?: Record<string|number|symbol, unknown> extends Pick<T, K>? never : K;\n}[keyof T];\n\nexport type OptionalKeys<T> = {\n  [K in keyof T] -?: Record<string|number|symbol, unknown> extends Pick<T, K>? K : never;\n}[keyof T];\n\nexport type DeepImmutable<T> = {\n  readonly[K in keyof T]: DeepImmutable<T[K]>;\n};\n\nexport type DeepMutable<T> = {\n  -readonly[K in keyof T]: DeepMutable<T[K]>;\n};\n\nexport type DeepPartial<T> = {\n  [K in keyof T]?: DeepPartial<Exclude<T[K], undefined>>;\n};\n\nexport type Mutable<T> = {\n  -readonly[K in keyof T]: T[K];\n};\n\nexport const deepFreeze = <T extends object>(object: T): DeepImmutable<T> => {\n  for (const name of Reflect.ownKeys(object)) {\n    const value = object[name as keyof T];\n    if ((value && typeof value === 'object') || typeof value === 'function') {\n      deepFreeze(value);\n    }\n  }\n  return Object.freeze(object);\n};\n\nexport class InsertAssignment<T> {\n  value: T;\n  constructor(value: T) {\n    this.value = value;\n  }\n}\n\nexport class ArrayAssignments<T> {\n  value: Record<number, T>;\n  constructor(value: Record<number, T>) {\n    this.value = value;\n  }\n}\n\nexport type Assignments<T> = T extends Readonly<Array<infer R>>?\n    R[]|ArrayAssignments<Assignments<R>|InsertAssignment<R>>:\n    {[K in keyof T]: Assignments<T[K]>};\n\nexport const immutableDeepAssign = <T>(\n    object: DeepImmutable<T>,\n    assignments: DeepImmutable<DeepPartial<Assignments<T>>>,\n    ): DeepImmutable<T> => {\n  if (assignments instanceof ArrayAssignments) {\n    assert(Array.isArray(object), `Expected an array. Got ${typeof object}.`);\n    const updatedObject = [...object] as Mutable<typeof object>;\n    const keys = Object.keys(assignments.value)\n                     .sort(\n                         (a, b) => Number(b) - Number(a),\n                         ) as Array<keyof typeof updatedObject>;\n    for (const key of keys) {\n      const update = assignments.value[Number(key)];\n      if (update === undefined) {\n        updatedObject.splice(Number(key), 1);\n      } else if (update instanceof InsertAssignment) {\n        updatedObject.splice(Number(key), 0, update.value);\n      } else {\n        updatedObject[Number(key)] = immutableDeepAssign(\n            updatedObject[key],\n            update,\n        );\n      }\n    }\n    return Object.freeze(updatedObject);\n  }\n  if (typeof assignments === 'object' && !Array.isArray(assignments)) {\n    assert(!Array.isArray(object), 'Expected an object. Got an array.');\n    const updatedObject = {...object} as Mutable<typeof object>;\n    const keys = Object.keys(assignments) as Array<keyof typeof assignments&keyof typeof updatedObject>;\n    for (const key of keys) {\n      const update = assignments[key];\n      if (update === undefined) {\n        delete updatedObject[key];\n      } else {\n        updatedObject[key] = immutableDeepAssign(\n            updatedObject[key],\n            update as typeof updatedObject[typeof key],\n        );\n      }\n    }\n    return Object.freeze(updatedObject);\n  }\n  return assignments as DeepImmutable<T>;\n};\n", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\n/* Some view input callbacks might be handled outside of Lit and we\n   bind all of them upfront. We disable the lit_html_host_this since we\n   do not define any host for Lit.render and the rule is not happy\n   about it. */\n\nimport '../../../ui/components/icon_button/icon_button.js';\nimport './StepEditor.js';\nimport './TimelineSection.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Menus from '../../../ui/components/menus/menus.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport type * as Converters from '../converters/converters.js';\nimport * as Models from '../models/models.js';\n\nimport type {StepEditedEvent} from './StepEditor.js';\nimport stepViewStyles from './stepView.css.js';\nimport type {TimelineSectionData} from './TimelineSection.js';\n\nconst {html} = Lit;\n\nconst UIStrings = {\n  /**\n   *@description Title for the step type that configures the viewport\n   */\n  setViewportClickTitle: 'Set viewport',\n  /**\n   *@description Title for the customStep step type\n   */\n  customStepTitle: 'Custom step',\n  /**\n   *@description Title for the click step type\n   */\n  clickStepTitle: 'Click',\n  /**\n   *@description Title for the double click step type\n   */\n  doubleClickStepTitle: 'Double click',\n  /**\n   *@description Title for the hover step type\n   */\n  hoverStepTitle: 'Hover',\n  /**\n   *@description Title for the emulateNetworkConditions step type\n   */\n  emulateNetworkConditionsStepTitle: 'Emulate network conditions',\n  /**\n   *@description Title for the change step type\n   */\n  changeStepTitle: 'Change',\n  /**\n   *@description Title for the close step type\n   */\n  closeStepTitle: 'Close',\n  /**\n   *@description Title for the scroll step type\n   */\n  scrollStepTitle: 'Scroll',\n  /**\n   *@description Title for the key up step type. `up` refers to the state of the keyboard key: it's released, i.e., up. It does not refer to the down arrow key specifically.\n   */\n  keyUpStepTitle: 'Key up',\n  /**\n   *@description Title for the navigate step type\n   */\n  navigateStepTitle: 'Navigate',\n  /**\n   *@description Title for the key down step type. `down` refers to the state of the keyboard key: it's pressed, i.e., down. It does not refer to the down arrow key specifically.\n   */\n  keyDownStepTitle: 'Key down',\n  /**\n   *@description Title for the waitForElement step type\n   */\n  waitForElementStepTitle: 'Wait for element',\n  /**\n   *@description Title for the waitForExpression step type\n   */\n  waitForExpressionStepTitle: 'Wait for expression',\n  /**\n   *@description Title for elements with role button\n   */\n  elementRoleButton: 'Button',\n  /**\n   *@description Title for elements with role input\n   */\n  elementRoleInput: 'Input',\n  /**\n   *@description Default title for elements without a specific role\n   */\n  elementRoleFallback: 'Element',\n  /**\n   *@description The title of the button in the step's context menu that adds a new step before the current one.\n   */\n  addStepBefore: 'Add step before',\n  /**\n   *@description The title of the button in the step's context menu that adds a new step after the current one.\n   */\n  addStepAfter: 'Add step after',\n  /**\n   *@description The title of the button in the step's context menu that removes the step.\n   */\n  removeStep: 'Remove step',\n  /**\n   *@description The title of the button that open the step's context menu.\n   */\n  openStepActions: 'Open step actions',\n  /**\n   *@description The title of the button in the step's context menu that adds a breakpoint.\n   */\n  addBreakpoint: 'Add breakpoint',\n  /**\n   *@description The title of the button in the step's context menu that removes a breakpoint.\n   */\n  removeBreakpoint: 'Remove breakpoint',\n  /**\n   * @description A menu item item in the context menu that expands another menu which list all\n   * the formats the user can copy the recording as.\n   */\n  copyAs: 'Copy as',\n  /**\n   * @description The title of the menu group that holds actions on recording steps.\n   */\n  stepManagement: 'Manage steps',\n  /**\n   * @description The title of the menu group that holds actions related to breakpoints.\n   */\n  breakpoints: 'Breakpoints',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings(\n    'panels/recorder/components/StepView.ts',\n    UIStrings,\n);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-step-view': StepView;\n  }\n}\n\nexport const enum State {\n  DEFAULT = 'default',\n  SUCCESS = 'success',\n  CURRENT = 'current',\n  OUTSTANDING = 'outstanding',\n  ERROR = 'error',\n  STOPPED = 'stopped',\n}\n\nexport interface StepViewData {\n  state: State;\n  step?: Models.Schema.Step;\n  section?: Models.Section.Section;\n  error?: Error;\n  hasBreakpoint: boolean;\n  isEndOfGroup: boolean;\n  isStartOfGroup: boolean;\n  isFirstSection: boolean;\n  isLastSection: boolean;\n  stepIndex: number;\n  sectionIndex: number;\n  isRecording: boolean;\n  isPlaying: boolean;\n  removable: boolean;\n  builtInConverters: Converters.Converter.Converter[];\n  extensionConverters: Converters.Converter.Converter[];\n  isSelected: boolean;\n  recorderSettings?: Models.RecorderSettings.RecorderSettings;\n}\n\nexport class CaptureSelectorsEvent extends Event {\n  static readonly eventName = 'captureselectors';\n  data: Models.Schema.StepWithSelectors&Partial<Models.Schema.ClickAttributes>;\n\n  constructor(\n      step: Models.Schema.StepWithSelectors&Partial<Models.Schema.ClickAttributes>,\n  ) {\n    super(CaptureSelectorsEvent.eventName, {bubbles: true, composed: true});\n    this.data = step;\n  }\n}\n\nexport class StopSelectorsCaptureEvent extends Event {\n  static readonly eventName = 'stopselectorscapture';\n  constructor() {\n    super(StopSelectorsCaptureEvent.eventName, {\n      bubbles: true,\n      composed: true,\n    });\n  }\n}\n\nexport class CopyStepEvent extends Event {\n  static readonly eventName = 'copystep';\n  step: Models.Schema.Step;\n  constructor(step: Models.Schema.Step) {\n    super(CopyStepEvent.eventName, {bubbles: true, composed: true});\n    this.step = step;\n  }\n}\n\nexport class StepChanged extends Event {\n  static readonly eventName = 'stepchanged';\n  currentStep: Models.Schema.Step;\n  newStep: Models.Schema.Step;\n\n  constructor(currentStep: Models.Schema.Step, newStep: Models.Schema.Step) {\n    super(StepChanged.eventName, {bubbles: true, composed: true});\n    this.currentStep = currentStep;\n    this.newStep = newStep;\n  }\n}\n\nexport const enum AddStepPosition {\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport class AddStep extends Event {\n  static readonly eventName = 'addstep';\n  position: AddStepPosition;\n  stepOrSection: Models.Schema.Step|Models.Section.Section;\n\n  constructor(\n      stepOrSection: Models.Schema.Step|Models.Section.Section,\n      position: AddStepPosition,\n  ) {\n    super(AddStep.eventName, {bubbles: true, composed: true});\n    this.stepOrSection = stepOrSection;\n    this.position = position;\n  }\n}\n\nexport class RemoveStep extends Event {\n  static readonly eventName = 'removestep';\n  step: Models.Schema.Step;\n\n  constructor(step: Models.Schema.Step) {\n    super(RemoveStep.eventName, {bubbles: true, composed: true});\n    this.step = step;\n  }\n}\n\nexport class AddBreakpointEvent extends Event {\n  static readonly eventName = 'addbreakpoint';\n  index: number;\n\n  constructor(index: number) {\n    super(AddBreakpointEvent.eventName, {bubbles: true, composed: true});\n    this.index = index;\n  }\n}\n\nexport class RemoveBreakpointEvent extends Event {\n  static readonly eventName = 'removebreakpoint';\n  index: number;\n\n  constructor(index: number) {\n    super(RemoveBreakpointEvent.eventName, {bubbles: true, composed: true});\n    this.index = index;\n  }\n}\n\nconst COPY_ACTION_PREFIX = 'copy-step-as-';\n\ninterface Action {\n  id: string;\n  label: string;\n  group: string;\n  groupTitle: string;\n  jslogContext?: string;\n}\n\nexport interface ViewInput extends StepViewData {\n  step?: Models.Schema.Step;\n  section?: Models.Section.Section;\n  state: State;\n  error?: Error;\n  showDetails: boolean;\n  isEndOfGroup: boolean;\n  isStartOfGroup: boolean;\n  stepIndex: number;\n  sectionIndex: number;\n  isFirstSection: boolean;\n  isLastSection: boolean;\n  isRecording: boolean;\n  isPlaying: boolean;\n  isVisible: boolean;\n  hasBreakpoint: boolean;\n  removable: boolean;\n  builtInConverters: Converters.Converter.Converter[];\n  extensionConverters: Converters.Converter.Converter[];\n  isSelected: boolean;\n  recorderSettings?: Models.RecorderSettings.RecorderSettings;\n  actions: Action[];\n\n  stepEdited: (event: StepEditedEvent) => void;\n  onBreakpointClick: () => void;\n  handleStepAction: (event: Menus.Menu.MenuItemSelectedEvent) => void;\n  toggleShowDetails: () => void;\n  onToggleShowDetailsKeydown: (event: Event) => void;\n  populateStepContextMenu: (contextMenu: UI.ContextMenu.ContextMenu) => void;\n}\n\nexport type ViewOutput = unknown;\n\nfunction getStepTypeTitle(input: {\n  step?: Models.Schema.Step,\n  section?: Models.Section.Section,\n}): string|Lit.TemplateResult {\n  if (input.section) {\n    return input.section.title ? input.section.title : html`<span class=\"fallback\">(No Title)</span>`;\n  }\n  if (!input.step) {\n    throw new Error('Missing both step and section');\n  }\n  switch (input.step.type) {\n    case Models.Schema.StepType.CustomStep:\n      return i18nString(UIStrings.customStepTitle);\n    case Models.Schema.StepType.SetViewport:\n      return i18nString(UIStrings.setViewportClickTitle);\n    case Models.Schema.StepType.Click:\n      return i18nString(UIStrings.clickStepTitle);\n    case Models.Schema.StepType.DoubleClick:\n      return i18nString(UIStrings.doubleClickStepTitle);\n    case Models.Schema.StepType.Hover:\n      return i18nString(UIStrings.hoverStepTitle);\n    case Models.Schema.StepType.EmulateNetworkConditions:\n      return i18nString(UIStrings.emulateNetworkConditionsStepTitle);\n    case Models.Schema.StepType.Change:\n      return i18nString(UIStrings.changeStepTitle);\n    case Models.Schema.StepType.Close:\n      return i18nString(UIStrings.closeStepTitle);\n    case Models.Schema.StepType.Scroll:\n      return i18nString(UIStrings.scrollStepTitle);\n    case Models.Schema.StepType.KeyUp:\n      return i18nString(UIStrings.keyUpStepTitle);\n    case Models.Schema.StepType.KeyDown:\n      return i18nString(UIStrings.keyDownStepTitle);\n    case Models.Schema.StepType.WaitForElement:\n      return i18nString(UIStrings.waitForElementStepTitle);\n    case Models.Schema.StepType.WaitForExpression:\n      return i18nString(UIStrings.waitForExpressionStepTitle);\n    case Models.Schema.StepType.Navigate:\n      return i18nString(UIStrings.navigateStepTitle);\n  }\n}\n\nfunction getElementRoleTitle(role: string): string {\n  switch (role) {\n    case 'button':\n      return i18nString(UIStrings.elementRoleButton);\n    case 'input':\n      return i18nString(UIStrings.elementRoleInput);\n    default:\n      return i18nString(UIStrings.elementRoleFallback);\n  }\n}\n\nfunction getSelectorPreview(step: Models.Schema.Step): string {\n  if (!('selectors' in step)) {\n    return '';\n  }\n\n  const ariaSelector = step.selectors.flat().find(selector => selector.startsWith('aria/'));\n\n  if (!ariaSelector) {\n    return '';\n  }\n\n  const m = ariaSelector.match(/^aria\\/(.+?)(\\[role=\"(.+)\"\\])?$/);\n  if (!m) {\n    return '';\n  }\n\n  return `${getElementRoleTitle(m[3])} \"${m[1]}\"`;\n}\n\nfunction getSectionPreview(section?: Models.Section.Section): string {\n  if (!section) {\n    return '';\n  }\n  return section.url;\n}\n\nfunction renderStepActions(input: ViewInput): Lit.TemplateResult|null {\n  // clang-format off\n  return html`\n    <devtools-menu-button\n      class=\"step-actions\"\n      title=${i18nString(UIStrings.openStepActions)}\n      aria-label=${i18nString(UIStrings.openStepActions)}\n      .populateMenuCall=${input.populateStepContextMenu}\n      @keydown=${(event: Event) => {\n        event.stopPropagation();\n      }}\n      jslog=${VisualLogging.dropDown('step-actions').track({click: true})}\n      .iconName=${'dots-vertical'}\n      }\n    ></devtools-menu-button>\n  `;\n  // clang-format on\n}\n\nfunction viewFunction(input: ViewInput, _output: ViewOutput, target: HTMLElement|ShadowRoot): void {\n  if (!input.step && !input.section) {\n    return;\n  }\n\n  const stepClasses = {\n    step: true,\n    expanded: input.showDetails,\n    'is-success': input.state === State.SUCCESS,\n    'is-current': input.state === State.CURRENT,\n    'is-outstanding': input.state === State.OUTSTANDING,\n    'is-error': input.state === State.ERROR,\n    'is-stopped': input.state === State.STOPPED,\n    'is-start-of-group': input.isStartOfGroup,\n    'is-first-section': input.isFirstSection,\n    'has-breakpoint': input.hasBreakpoint,\n  };\n  const isExpandable = Boolean(input.step);\n  const mainTitle = getStepTypeTitle({\n    step: input.step,\n    section: input.section,\n  });\n  const subtitle = input.step ? getSelectorPreview(input.step) : getSectionPreview();\n\n  // clang-format off\n  Lit.render(\n    html`\n    <style>${stepViewStyles}</style>\n    <devtools-timeline-section .data=${\n      {\n        isFirstSection: input.isFirstSection,\n        isLastSection: input.isLastSection,\n        isStartOfGroup: input.isStartOfGroup,\n        isEndOfGroup: input.isEndOfGroup,\n        isSelected: input.isSelected,\n      } as TimelineSectionData\n    } @contextmenu=${\n        (e: Event) => {\n        const menu = new UI.ContextMenu.ContextMenu(e as MouseEvent);\n        input.populateStepContextMenu(menu);\n        void menu.show();}\n      }\n      data-step-index=${\n      input.stepIndex\n    } data-section-index=${\n      input.sectionIndex\n    } class=${Lit.Directives.classMap(stepClasses)}>\n      <svg slot=\"icon\" width=\"24\" height=\"24\" height=\"100%\" class=\"icon\">\n        <circle class=\"circle-icon\"/>\n        <g class=\"error-icon\">\n          <path d=\"M1.5 1.5L6.5 6.5\" stroke=\"white\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M1.5 6.5L6.5 1.5\" stroke=\"white\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </g>\n        <path @click=${input.onBreakpointClick} jslog=${VisualLogging.action('breakpoint').track({click: true})} class=\"breakpoint-icon\" d=\"M2.5 5.5H17.7098L21.4241 12L17.7098 18.5H2.5V5.5Z\"/>\n      </svg>\n      <div class=\"summary\">\n        <div class=\"title-container ${isExpandable ? 'action' : ''}\"\n          @click=${isExpandable && input.toggleShowDetails}\n          @keydown=${\n            isExpandable && input.onToggleShowDetailsKeydown\n          }\n          tabindex=\"0\"\n          jslog=${VisualLogging.sectionHeader().track({click: true})}\n          aria-role=${isExpandable ? 'button' : ''}\n          aria-label=${isExpandable ? 'Show details for step' : ''}\n        >\n          ${\n            isExpandable\n              ? html`<devtools-icon\n                  class=\"chevron\"\n                  jslog=${VisualLogging.expand().track({click: true})}\n                  name=\"triangle-down\">\n                </devtools-icon>`\n              : ''\n          }\n          <div class=\"title\">\n            <div class=\"main-title\" title=${mainTitle}>${mainTitle}</div>\n            <div class=\"subtitle\" title=${subtitle}>${subtitle}</div>\n          </div>\n        </div>\n        <div class=\"filler\"></div>\n        ${renderStepActions(input)}\n      </div>\n      <div class=\"details\">\n        ${\n          input.step &&\n          html`<devtools-recorder-step-editor\n          class=${input.isSelected ? 'is-selected' : ''}\n          .step=${input.step}\n          .disabled=${input.isPlaying}\n          @stepedited=${input.stepEdited}>\n        </devtools-recorder-step-editor>`\n        }\n        ${\n          input.section?.causingStep &&\n          html`<devtools-recorder-step-editor\n          .step=${input.section.causingStep}\n          .isTypeEditable=${false}\n          .disabled=${input.isPlaying}\n          @stepedited=${input.stepEdited}>\n        </devtools-recorder-step-editor>`\n        }\n      </div>\n      ${\n        input.error &&\n        html`\n        <div class=\"error\" role=\"alert\">\n          ${input.error.message}\n        </div>\n      `\n      }\n    </devtools-timeline-section>\n  `,\n    target,\n  );\n  // clang-format on\n}\n\nexport class StepView extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #observer: IntersectionObserver = new IntersectionObserver(result => {\n    this.#viewInput.isVisible = result[0].isIntersecting;\n  });\n  #viewInput: ViewInput = {\n    state: State.DEFAULT,\n    showDetails: false,\n    isEndOfGroup: false,\n    isStartOfGroup: false,\n    stepIndex: 0,\n    sectionIndex: 0,\n    isFirstSection: false,\n    isLastSection: false,\n    isRecording: false,\n    isPlaying: false,\n    isVisible: false,\n    hasBreakpoint: false,\n    removable: true,\n    builtInConverters: [],\n    extensionConverters: [],\n    isSelected: false,\n    recorderSettings: undefined,\n    actions: [],\n\n    stepEdited: this.#stepEdited.bind(this),\n    onBreakpointClick: this.#onBreakpointClick.bind(this),\n    handleStepAction: this.#handleStepAction.bind(this),\n    toggleShowDetails: this.#toggleShowDetails.bind(this),\n    onToggleShowDetailsKeydown: this.#onToggleShowDetailsKeydown.bind(this),\n    populateStepContextMenu: this.#populateStepContextMenu.bind(this),\n  };\n  #view = viewFunction;\n\n  constructor(view?: typeof viewFunction) {\n    super();\n    if (view) {\n      this.#view = view;\n    }\n    this.setAttribute('jslog', `${VisualLogging.section('step-view')}`);\n  }\n\n  set data(data: StepViewData) {\n    const prevState = this.#viewInput.state;\n    this.#viewInput.step = data.step;\n    this.#viewInput.section = data.section;\n    this.#viewInput.state = data.state;\n    this.#viewInput.error = data.error;\n    this.#viewInput.isEndOfGroup = data.isEndOfGroup;\n    this.#viewInput.isStartOfGroup = data.isStartOfGroup;\n    this.#viewInput.stepIndex = data.stepIndex;\n    this.#viewInput.sectionIndex = data.sectionIndex;\n    this.#viewInput.isFirstSection = data.isFirstSection;\n    this.#viewInput.isLastSection = data.isLastSection;\n    this.#viewInput.isRecording = data.isRecording;\n    this.#viewInput.isPlaying = data.isPlaying;\n    this.#viewInput.hasBreakpoint = data.hasBreakpoint;\n    this.#viewInput.removable = data.removable;\n    this.#viewInput.builtInConverters = data.builtInConverters;\n    this.#viewInput.extensionConverters = data.extensionConverters;\n    this.#viewInput.isSelected = data.isSelected;\n    this.#viewInput.recorderSettings = data.recorderSettings;\n    this.#viewInput.actions = this.#getActions();\n\n    this.#render();\n\n    if (this.#viewInput.state !== prevState && this.#viewInput.state === 'current' && !this.#viewInput.isVisible) {\n      this.scrollIntoView();\n    }\n  }\n\n  get step(): Models.Schema.Step|undefined {\n    return this.#viewInput.step;\n  }\n\n  get section(): Models.Section.Section|undefined {\n    return this.#viewInput.section;\n  }\n\n  connectedCallback(): void {\n    this.#observer.observe(this);\n    this.#render();\n  }\n\n  disconnectedCallback(): void {\n    this.#observer.unobserve(this);\n  }\n\n  #toggleShowDetails(): void {\n    this.#viewInput.showDetails = !this.#viewInput.showDetails;\n    this.#render();\n  }\n\n  #onToggleShowDetailsKeydown(event: Event): void {\n    const keyboardEvent = event as KeyboardEvent;\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      this.#toggleShowDetails();\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  #stepEdited(event: StepEditedEvent): void {\n    const step = this.#viewInput.step || this.#viewInput.section?.causingStep;\n    if (!step) {\n      throw new Error('Expected step.');\n    }\n    this.dispatchEvent(new StepChanged(step, event.data));\n  }\n\n  #handleStepAction(event: Menus.Menu.MenuItemSelectedEvent): void {\n    switch (event.itemValue) {\n      case 'add-step-before': {\n        const stepOrSection = this.#viewInput.step || this.#viewInput.section;\n        if (!stepOrSection) {\n          throw new Error('Expected step or section.');\n        }\n        this.dispatchEvent(new AddStep(stepOrSection, AddStepPosition.BEFORE));\n        break;\n      }\n      case 'add-step-after': {\n        const stepOrSection = this.#viewInput.step || this.#viewInput.section;\n        if (!stepOrSection) {\n          throw new Error('Expected step or section.');\n        }\n        this.dispatchEvent(new AddStep(stepOrSection, AddStepPosition.AFTER));\n        break;\n      }\n      case 'remove-step': {\n        const causingStep = this.#viewInput.section?.causingStep;\n        if (!this.#viewInput.step && !causingStep) {\n          throw new Error('Expected step.');\n        }\n        this.dispatchEvent(\n            new RemoveStep(this.#viewInput.step || (causingStep as Models.Schema.Step)),\n        );\n        break;\n      }\n      case 'add-breakpoint': {\n        if (!this.#viewInput.step) {\n          throw new Error('Expected step');\n        }\n        this.dispatchEvent(new AddBreakpointEvent(this.#viewInput.stepIndex));\n        break;\n      }\n      case 'remove-breakpoint': {\n        if (!this.#viewInput.step) {\n          throw new Error('Expected step');\n        }\n        this.dispatchEvent(new RemoveBreakpointEvent(this.#viewInput.stepIndex));\n        break;\n      }\n      default: {\n        const actionId = event.itemValue as string;\n        if (!actionId.startsWith(COPY_ACTION_PREFIX)) {\n          throw new Error('Unknown step action.');\n        }\n\n        const copyStep = this.#viewInput.step || this.#viewInput.section?.causingStep;\n        if (!copyStep) {\n          throw new Error('Step not found.');\n        }\n\n        const converterId = actionId.substring(COPY_ACTION_PREFIX.length);\n        if (this.#viewInput.recorderSettings) {\n          this.#viewInput.recorderSettings.preferredCopyFormat = converterId;\n        }\n\n        this.dispatchEvent(new CopyStepEvent(structuredClone(copyStep)));\n      }\n    }\n  }\n\n  #onBreakpointClick(): void {\n    if (this.#viewInput.hasBreakpoint) {\n      this.dispatchEvent(new RemoveBreakpointEvent(this.#viewInput.stepIndex));\n    } else {\n      this.dispatchEvent(new AddBreakpointEvent(this.#viewInput.stepIndex));\n    }\n    this.#render();\n  }\n\n  #getActions = (): Action[] => {\n    const actions = [];\n\n    if (!this.#viewInput.isPlaying) {\n      if (this.#viewInput.step) {\n        actions.push({\n          id: 'add-step-before',\n          label: i18nString(UIStrings.addStepBefore),\n          group: 'stepManagement',\n          groupTitle: i18nString(UIStrings.stepManagement),\n        });\n      }\n\n      actions.push({\n        id: 'add-step-after',\n        label: i18nString(UIStrings.addStepAfter),\n        group: 'stepManagement',\n        groupTitle: i18nString(UIStrings.stepManagement),\n      });\n\n      if (this.#viewInput.removable) {\n        actions.push({\n          id: 'remove-step',\n          group: 'stepManagement',\n          groupTitle: i18nString(UIStrings.stepManagement),\n          label: i18nString(UIStrings.removeStep),\n        });\n      }\n    }\n\n    if (this.#viewInput.step && !this.#viewInput.isRecording) {\n      if (this.#viewInput.hasBreakpoint) {\n        actions.push({\n          id: 'remove-breakpoint',\n          label: i18nString(UIStrings.removeBreakpoint),\n          group: 'breakPointManagement',\n          groupTitle: i18nString(UIStrings.breakpoints),\n        });\n      } else {\n        actions.push({\n          id: 'add-breakpoint',\n          label: i18nString(UIStrings.addBreakpoint),\n          group: 'breakPointManagement',\n          groupTitle: i18nString(UIStrings.breakpoints),\n        });\n      }\n    }\n\n    if (this.#viewInput.step) {\n      for (const converter of this.#viewInput.builtInConverters || []) {\n        actions.push({\n          id: COPY_ACTION_PREFIX + Platform.StringUtilities.toKebabCase(converter.getId()),\n          label: converter.getFormatName(),\n          group: 'copy',\n          groupTitle: i18nString(UIStrings.copyAs),\n        });\n      }\n      for (const converter of this.#viewInput.extensionConverters || []) {\n        actions.push({\n          id: COPY_ACTION_PREFIX + Platform.StringUtilities.toKebabCase(converter.getId()),\n          label: converter.getFormatName(),\n          group: 'copy',\n          groupTitle: i18nString(UIStrings.copyAs),\n          jslogContext: COPY_ACTION_PREFIX + 'extension',\n        });\n      }\n    }\n\n    return actions;\n  };\n\n  #populateStepContextMenu(contextMenu: UI.ContextMenu.ContextMenu): void {\n    const actions = this.#getActions();\n    const copyActions = actions.filter(\n        item => item.id.startsWith(COPY_ACTION_PREFIX),\n    );\n    const otherActions = actions.filter(\n        item => !item.id.startsWith(COPY_ACTION_PREFIX),\n    );\n    for (const item of otherActions) {\n      const section = contextMenu.section(item.group);\n      section.appendItem(item.label, () => {\n        this.#handleStepAction(\n            new Menus.Menu.MenuItemSelectedEvent(item.id),\n        );\n      }, {jslogContext: item.id});\n    }\n\n    const preferredCopyAction = copyActions.find(\n        item => item.id === COPY_ACTION_PREFIX + this.#viewInput.recorderSettings?.preferredCopyFormat,\n    );\n\n    if (preferredCopyAction) {\n      contextMenu.section('copy').appendItem(preferredCopyAction.label, () => {\n        this.#handleStepAction(\n            new Menus.Menu.MenuItemSelectedEvent(preferredCopyAction.id),\n        );\n      }, {jslogContext: preferredCopyAction.id});\n    }\n\n    if (copyActions.length) {\n      const copyAs = contextMenu.section('copy').appendSubMenuItem(i18nString(UIStrings.copyAs), false, 'copy');\n      for (const item of copyActions) {\n        if (item === preferredCopyAction) {\n          continue;\n        }\n        copyAs.section(item.group).appendItem(item.label, () => {\n          this.#handleStepAction(\n              new Menus.Menu.MenuItemSelectedEvent(item.id),\n          );\n        }, {jslogContext: item.id});\n      }\n    }\n  }\n\n  #render(): void {\n    const output: ViewOutput = {};\n    this.#view(this.#viewInput, output, this.#shadow);\n  }\n}\n\ncustomElements.define('devtools-step-view', StepView);\n", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Lit from '../../../ui/lit/lit.js';\n\nimport timelineSectionStyles from './timelineSection.css.js';\n\nconst {html} = Lit;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-timeline-section': TimelineSection;\n  }\n}\n\nexport interface TimelineSectionData {\n  isFirstSection: boolean;\n  isLastSection: boolean;\n  isStartOfGroup: boolean;\n  isEndOfGroup: boolean;\n  isSelected: boolean;\n}\n\nexport class TimelineSection extends HTMLElement {\n  #isEndOfGroup = false;\n  #isStartOfGroup = false;\n  #isFirstSection = false;\n  #isLastSection = false;\n  #isSelected = false;\n  readonly #shadowRoot = this.attachShadow({mode: 'open'});\n\n  set data(data: TimelineSectionData) {\n    this.#isFirstSection = data.isFirstSection;\n    this.#isLastSection = data.isLastSection;\n    this.#isEndOfGroup = data.isEndOfGroup;\n    this.#isStartOfGroup = data.isStartOfGroup;\n    this.#isSelected = data.isSelected;\n\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  #render(): void {\n    const classes = {\n      'timeline-section': true,\n      'is-end-of-group': this.#isEndOfGroup,\n      'is-start-of-group': this.#isStartOfGroup,\n      'is-first-section': this.#isFirstSection,\n      'is-last-section': this.#isLastSection,\n      'is-selected': this.#isSelected,\n    };\n\n    // clang-format off\n    Lit.render(\n      html`\n      <style>${timelineSectionStyles}</style>\n      <div class=${Lit.Directives.classMap(classes)}>\n        <div class=\"icon\"><slot name=\"icon\"></slot></div>\n        <svg width=\"24\" height=\"100%\" class=\"bar\">\n          <rect class=\"line\" x=\"7\" y=\"0\" width=\"2\" height=\"100%\" />\n        </svg>\n        <slot></slot>\n      </div>\n    `,\n      this.#shadowRoot,\n      { host: this },\n    );\n    // clang-format on\n  }\n}\n\ncustomElements.define(\n    'devtools-timeline-section',\n    TimelineSection,\n);\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-size: inherit;\n}\n\n.timeline-section {\n  position: relative;\n  padding: 16px 0 16px 40px;\n  margin-left: 8px;\n\n  --override-color-recording-successful-text: #36a854;\n  --override-color-recording-successful-background: #e6f4ea;\n}\n\n.overlay {\n  position: absolute;\n  width: 100vw;\n  height: 100%;\n  /* Offset of 32px for spacing and 80px for screenshot */\n  left: calc(-32px - 80px);\n  top: 0;\n  z-index: -1;\n  pointer-events: none;\n}\n\n@container (max-width: 400px) {\n  .overlay {\n    /* Offset of 32px for spacing */\n    left: -32px;\n  }\n}\n\n:hover .overlay {\n  background: var(--sys-color-state-hover-on-subtle);\n}\n\n.is-selected .overlay {\n  background: var(--sys-color-tonal-container);\n}\n\n:host-context(.is-stopped) .overlay {\n  background: var(--sys-color-state-ripple-primary);\n  outline: 1px solid var(--sys-color-state-focus-ring);\n  z-index: 4;\n}\n\n.is-start-of-group {\n  padding-top: 28px;\n}\n\n.is-end-of-group {\n  padding-bottom: 24px;\n}\n\n.icon {\n  position: absolute;\n  left: 4px;\n  transform: translateX(-50%);\n  z-index: 2;\n}\n\n.bar {\n  position: absolute;\n  left: 4px;\n  display: block;\n  transform: translateX(-50%);\n  top: 18px;\n  height: calc(100% + 8px);\n  z-index: 1; /* We want this to be below of \\\\'.overlay\\\\' for stopped case */\n}\n\n.bar .background {\n  fill: var(--sys-color-state-hover-on-subtle);\n}\n\n.bar .line {\n  fill: var(--sys-color-primary);\n}\n\n.is-first-section .bar {\n  top: 32px;\n  height: calc(100% - 8px);\n  display: none;\n}\n\n.is-first-section:not(.is-last-section) .bar {\n  display: block;\n}\n\n.is-last-section .bar .line {\n  display: none;\n}\n\n.is-last-section .bar .background {\n  display: none;\n}\n\n:host-context(.is-error) .bar .line {\n  fill: var(--sys-color-error);\n}\n\n:host-context(.is-error) .bar .background {\n  fill: var(--sys-color-error-container);\n}\n\n:host-context(.was-successful) .bar .background {\n  animation: flash-background 2s;\n}\n\n:host-context(.was-successful) .bar .line {\n  animation: flash-line 2s;\n}\n\n@keyframes flash-background {\n  25% {\n    fill: var(--override-color-recording-successful-background);\n  }\n\n  75% {\n    fill: var(--override-color-recording-successful-background);\n  }\n}\n\n@keyframes flash-line {\n  25% {\n    fill: var(--override-color-recording-successful-text);\n  }\n\n  75% {\n    fill: var(--override-color-recording-successful-text);\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./timelineSection.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-size: inherit;\n}\n\n.title-container {\n  /* 18px for 3 dot menu icon */\n  max-width: calc(100% - 18px);\n  font-size: 13px;\n  line-height: 16px;\n  letter-spacing: 0.03em;\n  display: flex;\n  flex-direction: row;\n  gap: 3px;\n  outline-offset: 3px;\n}\n\n.action {\n  display: flex;\n  align-items: flex-start;\n}\n\n.title {\n  flex: 1;\n  min-width: 0;\n}\n\n.is-start-of-group .title {\n  font-weight: bold;\n}\n\n.error-icon {\n  display: none;\n}\n\n.breakpoint-icon {\n  visibility: hidden;\n  cursor: pointer;\n  opacity: 0%;\n  fill: var(--sys-color-primary);\n  stroke: #1a73e8; /* stylelint-disable-line plugin/use_theme_colors */\n  transform: translate(-1.92px, -3px);\n}\n\n.circle-icon {\n  fill: var(--sys-color-primary);\n  stroke: var(--sys-color-cdt-base-container);\n  stroke-width: 4px;\n  r: 5px;\n  cx: 8px;\n  cy: 8px;\n}\n\n.is-start-of-group .circle-icon {\n  r: 7px;\n  fill: var(--sys-color-cdt-base-container);\n  stroke: var(--sys-color-primary);\n  stroke-width: 2px;\n}\n\n.step.is-success .circle-icon {\n  fill: var(--sys-color-primary);\n  stroke: var(--sys-color-primary);\n}\n\n.step.is-current .circle-icon {\n  stroke-dasharray: 24 10;\n  animation: rotate 1s linear infinite;\n  fill: var(--sys-color-cdt-base-container);\n  stroke: var(--sys-color-primary);\n  stroke-width: 2px;\n}\n\n.error {\n  margin: 16px 0 0;\n  padding: 8px;\n  background: var(--sys-color-error-container);\n  color: var(--sys-color-error);\n  position: relative;\n}\n\n@keyframes rotate {\n  0% {\n    transform: translate(8px, 8px) rotate(0) translate(-8px, -8px);\n  }\n\n  100% {\n    transform: translate(8px, 8px) rotate(360deg) translate(-8px, -8px);\n  }\n}\n\n.step.is-error .circle-icon {\n  fill: var(--sys-color-error);\n  stroke: var(--sys-color-error);\n}\n\n.step.is-error .error-icon {\n  display: block;\n  transform: translate(4px, 4px);\n}\n\n:host-context(.was-successful) .circle-icon {\n  animation: flash-circle 2s;\n}\n\n:host-context(.was-successful) .breakpoint-icon {\n  animation: flash-breakpoint-icon 2s;\n}\n\n@keyframes flash-circle {\n  25% {\n    fill: var(--override-color-recording-successful-text);\n    stroke: var(--override-color-recording-successful-text);\n  }\n\n  75% {\n    fill: var(--override-color-recording-successful-text);\n    stroke: var(--override-color-recording-successful-text);\n  }\n}\n\n@keyframes flash-breakpoint-icon {\n  25% {\n    fill: var(--override-color-recording-successful-text);\n    stroke: var(--override-color-recording-successful-text);\n  }\n\n  75% {\n    fill: var(--override-color-recording-successful-text);\n    stroke: var(--override-color-recording-successful-text);\n  }\n}\n\n.chevron {\n  width: 14px;\n  height: 14px;\n  transition: 200ms;\n  position: absolute;\n  top: 18px;\n  left: 24px;\n  transform: rotate(-90deg);\n  color: var(--sys-color-on-surface);\n}\n\n.expanded .chevron {\n  transform: rotate(0deg);\n}\n\n.is-start-of-group .chevron {\n  top: 34px;\n}\n\n.details {\n  display: none;\n  margin-top: 8px;\n  position: relative;\n}\n\n.expanded .details {\n  display: block;\n}\n\n.step-details {\n  overflow: auto;\n}\n\ndevtools-recorder-step-editor {\n  border: 1px solid var(--sys-color-neutral-outline);\n  padding: 3px 6px 6px;\n  margin-left: -6px;\n  border-radius: 3px;\n}\n\ndevtools-recorder-step-editor:hover {\n  border: 1px solid var(--sys-color-neutral-outline);\n}\n\ndevtools-recorder-step-editor.is-selected {\n  background-color: color-mix(in srgb, var(--sys-color-tonal-container), var(--sys-color-cdt-base-container) 50%);\n  border: 1px solid var(--sys-color-tonal-outline);\n}\n\n.summary {\n  display: flex;\n  flex-flow: row nowrap;\n}\n\n.filler {\n  flex-grow: 1;\n}\n\n.subtitle {\n  font-weight: normal;\n  color: var(--sys-color-on-surface-subtle);\n  word-break: break-all;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.main-title {\n  word-break: break-all;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.step-actions {\n  border: none;\n  border-radius: 0;\n  height: 24px;\n\n  --override-select-menu-show-button-border-radius: 0;\n  --override-select-menu-show-button-outline: none;\n  --override-select-menu-show-button-padding: 0;\n}\n\n.step.has-breakpoint .circle-icon {\n  visibility: hidden;\n}\n\n.step:not(.is-start-of-group).has-breakpoint .breakpoint-icon {\n  visibility: visible;\n  opacity: 100%;\n}\n\n.step:not(.is-start-of-group, .has-breakpoint) .icon:hover .circle-icon {\n  transition: opacity 0.2s;\n  opacity: 0%;\n}\n\n.step:not(.is-start-of-group, .has-breakpoint) .icon:hover .error-icon {\n  visibility: hidden;\n}\n\n.step:not(.is-start-of-group, .has-breakpoint) .icon:hover .breakpoint-icon {\n  transition: opacity 0.2s;\n  visibility: visible;\n  opacity: 50%;\n}\n\n/*# sourceURL=${import.meta.resolve('./stepView.css')} */`;"],
  "mappings": "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",
  "names": ["ControlButton", "Lit", "html", "Lit", "i18n", "Buttons", "Lit", "VisualLogging", "Models", "html", "Lit", "UIStrings", "str_", "i18nString", "value", "i18n", "Buttons", "Lit", "VisualLogging", "html", "Lit", "UIStrings", "str_", "i18nString", "i18n", "ComponentHelpers", "Lit", "VisualLogging", "html", "UIStrings", "i18nString", "str_", "Host", "i18n", "Buttons", "Input", "Lit", "VisualLogging", "Models", "html", "Lit", "UIStrings", "str_", "i18nString", "section", "converter", "preset", "Platform", "Buttons", "ComponentHelpers", "UI", "Lit", "VisualLogging", "Models", "html", "ifDefined", "Lit", "value", "items", "item", "EditorState", "Host", "i18n", "Platform", "Buttons", "Lit", "VisualLogging", "Models", "value", "key", "html", "Decorators", "Directives", "LitElement", "Lit", "customElement", "property", "value", "UIStrings", "str_", "i18nString", "EditorState", "state", "key", "RecorderSelectorPickerButton", "__decorate", "StepEditor", "name", "Lit", "html", "Lit", "i18n", "Platform", "UI", "Lit", "VisualLogging", "Models", "html", "Lit", "UIStrings", "str_", "i18nString", "section", "item"]
}
