{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/recorder/converters/Converter.ts", "../../../../../../../front_end/panels/recorder/converters/ExtensionConverter.ts", "../../../../../../../front_end/panels/recorder/converters/JSONConverter.ts", "../../../../../../../front_end/panels/recorder/converters/LighthouseConverter.ts", "../../../../../../../front_end/panels/recorder/converters/PuppeteerConverter.ts", "../../../../../../../front_end/panels/recorder/converters/PuppeteerFirefoxConverter.ts", "../../../../../../../front_end/panels/recorder/converters/PuppeteerReplayConverter.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as PuppeteerReplay from '../../../third_party/puppeteer-replay/puppeteer-replay.js';\nimport type * as Models from '../models/models.js';\n\nexport interface Converter {\n  stringify(flow: Models.Schema.UserFlow): Promise<[string, PuppeteerReplay.SourceMap|undefined]>;\n  stringifyStep(step: Models.Schema.Step): Promise<string>;\n  getFormatName(): string;\n  getFilename(flow: Models.Schema.UserFlow): string;\n  getMediaType(): string|undefined;\n  getId(): string;\n}\n", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as PuppeteerReplay from '../../../third_party/puppeteer-replay/puppeteer-replay.js';\nimport type * as Extension from '../extensions/extensions.js';\nimport type * as Models from '../models/models.js';\n\nimport type {Converter} from './Converter.js';\n\nexport const EXTENSION_PREFIX = 'extension_';\n\nexport class ExtensionConverter implements Converter {\n  #idx: number;\n  #extension: Extension.ExtensionManager.Extension;\n\n  constructor(idx: number, extension: Extension.ExtensionManager.Extension) {\n    this.#idx = idx;\n    this.#extension = extension;\n  }\n\n  getId(): string {\n    return EXTENSION_PREFIX + this.#idx;\n  }\n\n  getFormatName(): string {\n    return this.#extension.getName();\n  }\n\n  getMediaType(): string|undefined {\n    return this.#extension.getMediaType();\n  }\n\n  getFilename(flow: Models.Schema.UserFlow): string {\n    const fileExtension = this.#mediaTypeToExtension(\n        this.#extension.getMediaType(),\n    );\n    return `${flow.title}${fileExtension}`;\n  }\n\n  async stringify(\n      flow: Models.Schema.UserFlow,\n      ): Promise<[string, PuppeteerReplay.SourceMap|undefined]> {\n    const text = await this.#extension.stringify(flow);\n    const sourceMap = PuppeteerReplay.parseSourceMap(text);\n    return [PuppeteerReplay.stripSourceMap(text), sourceMap];\n  }\n\n  async stringifyStep(step: Models.Schema.Step): Promise<string> {\n    return await this.#extension.stringifyStep(step);\n  }\n\n  #mediaTypeToExtension(mediaType: string|undefined): string {\n    // See https://www.iana.org/assignments/media-types/media-types.xhtml\n    switch (mediaType) {\n      case 'application/json':\n        return '.json';\n      case 'application/javascript':\n      case 'text/javascript':\n        return '.js';\n      case 'application/typescript':\n      case 'text/typescript':\n        return '.ts';\n      default:\n        // TODO: think of exhaustive mapping once the feature gets traction.\n        return '';\n    }\n  }\n}\n", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as PuppeteerReplay from '../../../third_party/puppeteer-replay/puppeteer-replay.js';\nimport * as Models from '../models/models.js';\n\nimport type {Converter} from './Converter.js';\n\nexport class JSONConverter implements Converter {\n  #indent: string;\n\n  constructor(indent: string) {\n    this.#indent = indent;\n  }\n\n  getId(): string {\n    return Models.ConverterIds.ConverterIds.JSON;\n  }\n\n  getFormatName(): string {\n    return 'JSON';\n  }\n\n  getFilename(flow: Models.Schema.UserFlow): string {\n    return `${flow.title}.json`;\n  }\n\n  async stringify(\n      flow: Models.Schema.UserFlow,\n      ): Promise<[string, PuppeteerReplay.SourceMap|undefined]> {\n    const text = await PuppeteerReplay.stringify(flow, {\n      extension: new PuppeteerReplay.JSONStringifyExtension(),\n      indentation: this.#indent,\n    });\n    const sourceMap = PuppeteerReplay.parseSourceMap(text);\n    return [PuppeteerReplay.stripSourceMap(text), sourceMap];\n  }\n\n  async stringifyStep(step: Models.Schema.Step): Promise<string> {\n    return await PuppeteerReplay.stringifyStep(step, {\n      extension: new PuppeteerReplay.JSONStringifyExtension(),\n      indentation: this.#indent,\n    });\n  }\n\n  getMediaType(): string {\n    return 'application/json';\n  }\n}\n", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as PuppeteerReplay from '../../../third_party/puppeteer-replay/puppeteer-replay.js';\nimport * as Models from '../models/models.js';\n\nimport type {Converter} from './Converter.js';\n\nexport class LighthouseConverter implements Converter {\n  #indent: string;\n\n  constructor(indent: string) {\n    this.#indent = indent;\n  }\n\n  getId(): string {\n    return Models.ConverterIds.ConverterIds.LIGHTHOUSE;\n  }\n\n  getFormatName(): string {\n    return 'Puppeteer (including Lighthouse analysis)';\n  }\n\n  getFilename(flow: Models.Schema.UserFlow): string {\n    return `${flow.title}.js`;\n  }\n\n  async stringify(\n      flow: Models.Schema.UserFlow,\n      ): Promise<[string, PuppeteerReplay.SourceMap|undefined]> {\n    const text = await PuppeteerReplay.stringify(flow, {\n      extension: new PuppeteerReplay.LighthouseStringifyExtension(),\n      indentation: this.#indent,\n    });\n    const sourceMap = PuppeteerReplay.parseSourceMap(text);\n    return [PuppeteerReplay.stripSourceMap(text), sourceMap];\n  }\n\n  async stringifyStep(step: Models.Schema.Step): Promise<string> {\n    // LighthouseStringifyExtension maintains state between steps, it cannot create a Lighthouse flow from a single step.\n    // If we need to stringify a single step, we should return just the Puppeteer code without Lighthouse analysis.\n    return await PuppeteerReplay.stringifyStep(step, {\n      indentation: this.#indent,\n    });\n  }\n\n  getMediaType(): string {\n    return 'text/javascript';\n  }\n}\n", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as PuppeteerReplay from '../../../third_party/puppeteer-replay/puppeteer-replay.js';\nimport * as Models from '../models/models.js';\n\nimport type {Converter} from './Converter.js';\n\nexport class PuppeteerConverter implements Converter {\n  #indent: string;\n  #extension: PuppeteerReplay.PuppeteerStringifyExtension;\n\n  constructor(indent: string) {\n    this.#indent = indent;\n    this.#extension = this.createExtension();\n  }\n\n  getId(): string {\n    return Models.ConverterIds.ConverterIds.PUPPETEER;\n  }\n\n  createExtension(): PuppeteerReplay.PuppeteerStringifyExtension {\n    return new PuppeteerReplay.PuppeteerStringifyExtension();\n  }\n\n  getFormatName(): string {\n    return 'Puppeteer';\n  }\n\n  getFilename(flow: Models.Schema.UserFlow): string {\n    return `${flow.title}.js`;\n  }\n\n  async stringify(\n      flow: Models.Schema.UserFlow,\n      ): Promise<[string, PuppeteerReplay.SourceMap|undefined]> {\n    const text = await PuppeteerReplay.stringify(flow, {\n      indentation: this.#indent,\n      extension: this.#extension,\n    });\n    const sourceMap = PuppeteerReplay.parseSourceMap(text);\n    return [PuppeteerReplay.stripSourceMap(text), sourceMap];\n  }\n\n  async stringifyStep(step: Models.Schema.Step): Promise<string> {\n    return await PuppeteerReplay.stringifyStep(step, {\n      indentation: this.#indent,\n      extension: this.#extension,\n    });\n  }\n\n  getMediaType(): string {\n    return 'text/javascript';\n  }\n}\n", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as PuppeteerReplay from '../../../third_party/puppeteer-replay/puppeteer-replay.js';\nimport * as Models from '../models/models.js';\n\nimport {PuppeteerConverter} from './PuppeteerConverter.js';\n\nexport class PuppeteerFirefoxConverter extends PuppeteerConverter {\n  override getId(): string {\n    return Models.ConverterIds.ConverterIds.PUPPETEER_FIREFOX;\n  }\n\n  override createExtension(): PuppeteerReplay.PuppeteerStringifyExtension {\n    return new PuppeteerReplay.PuppeteerStringifyExtension('firefox');\n  }\n\n  override getFormatName(): string {\n    return 'Puppeteer (for Firefox)';\n  }\n}\n", "// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as PuppeteerReplay from '../../../third_party/puppeteer-replay/puppeteer-replay.js';\nimport * as Models from '../models/models.js';\n\nimport type {Converter} from './Converter.js';\n\nexport class PuppeteerReplayConverter implements Converter {\n  #indent: string;\n\n  constructor(indent: string) {\n    this.#indent = indent;\n  }\n\n  getId(): string {\n    return Models.ConverterIds.ConverterIds.REPLAY;\n  }\n\n  getFormatName(): string {\n    return '@puppeteer/replay';\n  }\n\n  getFilename(flow: Models.Schema.UserFlow): string {\n    return `${flow.title}.js`;\n  }\n\n  async stringify(\n      flow: Models.Schema.UserFlow,\n      ): Promise<[string, PuppeteerReplay.SourceMap|undefined]> {\n    const text = await PuppeteerReplay.stringify(flow, {\n      extension: new PuppeteerReplay.PuppeteerReplayStringifyExtension(),\n      indentation: this.#indent,\n    });\n    const sourceMap = PuppeteerReplay.parseSourceMap(text);\n    return [PuppeteerReplay.stripSourceMap(text), sourceMap];\n  }\n\n  async stringifyStep(step: Models.Schema.Step): Promise<string> {\n    return await PuppeteerReplay.stringifyStep(step, {\n      extension: new PuppeteerReplay.PuppeteerReplayStringifyExtension(),\n    });\n  }\n\n  getMediaType(): string {\n    return 'text/javascript';\n  }\n}\n"],
  "mappings": "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",
  "names": ["PuppeteerReplay", "PuppeteerReplay", "Models", "PuppeteerReplay", "Models", "PuppeteerReplay", "Models", "PuppeteerReplay", "Models"]
}
