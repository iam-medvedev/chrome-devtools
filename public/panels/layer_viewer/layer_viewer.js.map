{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/layer_viewer/LayerDetailsView.ts", "layerDetailsView.css.js", "../../../../../../front_end/panels/layer_viewer/LayerViewHost.ts", "../../../../../../front_end/panels/layer_viewer/LayerTreeOutline.ts", "layerTreeOutline.css.js", "../../../../../../front_end/panels/layer_viewer/Layers3DView.ts", "layers3DView.css.js", "../../../../../../front_end/panels/layer_viewer/TransformController.ts", "../../../../../../front_end/panels/layer_viewer/PaintProfilerView.ts", "paintProfiler.css.js"],
  "sourcesContent": ["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport layerDetailsViewStyles from './layerDetailsView.css.js';\nimport {\n  type LayerView,\n  type LayerViewHost,\n  ScrollRectSelection,\n  type Selection,\n  type SnapshotSelection,\n  Type,\n} from './LayerViewHost.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Layer Details View of the Layers panel\n   */\n  selectALayerToSeeItsDetails: 'Select a layer to see its details',\n  /**\n   *@description Text in Layer Details View of the Layers panel if no layer is selected for viewing its content\n   */\n  noLayerSelected: 'No layer selected',\n  /**\n   *@description Element text content in Layer Details View of the Layers panel\n   *@example {Touch event handler} PH1\n   *@example {10} PH2\n   *@example {10} PH3\n   *@example {10} PH4\n   *@example {10} PH5\n   */\n  scrollRectangleDimensions: '{PH1} {PH2} × {PH3} (at {PH4}, {PH5})',\n  /**\n   * @description Text in Layer Details View of the Layers panel. Used to indicate that a particular\n   * layer of the website is unnamed (was not given a name/doesn't have one).\n   */\n  unnamed: '<unnamed>',\n  /**\n   *@description Text in Layer Details View of the Layers panel\n   *@example {Nearest Layer Shifting Sticky Box} PH1\n   *@example {&lt;unnamed&gt;} PH2\n   *@example {5} PH3\n   */\n  stickyAncenstorLayersS: '{PH1}: {PH2} ({PH3})',\n  /**\n   *@description Sticky box rect element text content in Layer Details View of the Layers panel\n   *@example {10} PH1\n   *@example {10} PH2\n   *@example {10} PH3\n   *@example {10} PH4\n   */\n  stickyBoxRectangleDimensions: 'Sticky Box {PH1} × {PH2} (at {PH3}, {PH4})',\n  /**\n   * @description Containing block rect element text content in Layer Details View of the Layers panel.\n   * The placeholder are width, height, x position, and y position respectively.\n   *@example {10} PH1\n   *@example {10} PH2\n   *@example {10} PH3\n   *@example {10} PH4\n   */\n  containingBlocRectangleDimensions: 'Containing Block {PH1} × {PH2} (at {PH3}, {PH4})',\n  /**\n   * @description Text in Layer Details View of the Layers panel. This also means \"The nearest sticky\n   * box that causes a layer shift\".\n   */\n  nearestLayerShiftingStickyBox: 'Nearest Layer Shifting Sticky Box',\n  /**\n   * @description Text in Layer Details View of the Layers panel. This also means \"The nearest block\n   * that causes a layer shift\".\n   */\n  nearestLayerShiftingContaining: 'Nearest Layer Shifting Containing Block',\n  /**\n   *@description Size cell text content in Layer Details View of the Layers panel\n   *@example {10} PH1\n   *@example {10} PH2\n   *@example {10} PH3\n   *@example {10} PH4\n   */\n  updateRectangleDimensions: '{PH1} × {PH2} (at {PH3}, {PH4})',\n  /**\n   *@description Text for the size of something\n   */\n  size: 'Size',\n  /**\n   *@description Text in Layer Details View of the Layers panel\n   */\n  compositingReasons: 'Compositing Reasons',\n  /**\n   *@description Text in Layer Details View of the Layers panel\n   */\n  memoryEstimate: 'Memory estimate',\n  /**\n   *@description Text in Layer Details View of the Layers panel\n   */\n  paintCount: 'Paint count',\n  /**\n   *@description Text in Layer Details View of the Layers panel\n   */\n  slowScrollRegions: 'Slow scroll regions',\n  /**\n   *@description Text in Layer Details View of the Layers panel\n   */\n  stickyPositionConstraint: 'Sticky position constraint',\n  /**\n   *@description Title of the paint profiler, old name of the performance pane\n   */\n  paintProfiler: 'Paint Profiler',\n  /**\n   *@description Text in Layer Details View of the Layers panel\n   */\n  nonFastScrollable: 'Non fast scrollable',\n  /**\n   *@description Text in Layer Details View of the Layers panel\n   */\n  touchEventHandler: 'Touch event handler',\n  /**\n   *@description Text in Layer Details View of the Layers panel\n   */\n  wheelEventHandler: 'Wheel event handler',\n  /**\n   * @description Text in Layer Details View of the Layers panel. Means that this rectangle needs to\n   * be repainted when the webpage is scrolled. 'repaints' means that the browser engine needs to\n   * draw the pixels for this rectangle to the user's monitor again.\n   */\n  repaintsOnScroll: 'Repaints on scroll',\n  /**\n   *@description Text in Layer Details View of the Layers panel\n   */\n  mainThreadScrollingReason: 'Main thread scrolling reason',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/LayerDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nexport class LayerDetailsView extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.Widget>(\n    UI.Widget.Widget) implements LayerView {\n  private readonly layerViewHost: LayerViewHost;\n  private readonly emptyWidget: UI.EmptyWidget.EmptyWidget;\n  private layerSnapshotMap: Map<SDK.LayerTreeBase.Layer, SnapshotSelection>;\n  private tableElement!: HTMLElement;\n  private tbodyElement!: HTMLElement;\n  private sizeCell!: HTMLElement;\n  private compositingReasonsCell!: HTMLElement;\n  private memoryEstimateCell!: HTMLElement;\n  private paintCountCell!: HTMLElement;\n  private scrollRectsCell!: HTMLElement;\n  private stickyPositionConstraintCell!: HTMLElement;\n  private paintProfilerLink!: HTMLElement;\n  private selection: Selection|null;\n\n  constructor(layerViewHost: LayerViewHost) {\n    super(true);\n    this.registerRequiredCSS(layerDetailsViewStyles);\n    this.element.setAttribute('jslog', `${VisualLogging.pane('layers-details')}`);\n    this.contentElement.classList.add('layer-details-container');\n\n    this.layerViewHost = layerViewHost;\n    this.layerViewHost.registerView(this);\n    this.emptyWidget = new UI.EmptyWidget.EmptyWidget(\n        i18nString(UIStrings.noLayerSelected), i18nString(UIStrings.selectALayerToSeeItsDetails));\n    this.layerSnapshotMap = this.layerViewHost.getLayerSnapshotMap();\n\n    this.buildContent();\n    this.selection = null;\n  }\n\n  hoverObject(_selection: Selection|null): void {\n  }\n\n  selectObject(selection: Selection|null): void {\n    this.selection = selection;\n    if (this.isShowing()) {\n      this.update();\n    }\n  }\n\n  setLayerTree(_layerTree: SDK.LayerTreeBase.LayerTreeBase|null): void {\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.update();\n  }\n\n  private onScrollRectClicked(index: number, event: Event): void {\n    if ((event as KeyboardEvent).which !== 1) {\n      return;\n    }\n    if (!this.selection) {\n      return;\n    }\n    this.layerViewHost.selectObject(new ScrollRectSelection(this.selection.layer(), index));\n  }\n\n  private invokeProfilerLink(): void {\n    if (!this.selection) {\n      return;\n    }\n    const snapshotSelection =\n        this.selection.type() === Type.SNAPSHOT ? this.selection : this.layerSnapshotMap.get(this.selection.layer());\n    if (snapshotSelection) {\n      this.dispatchEventToListeners(Events.PAINT_PROFILER_REQUESTED, snapshotSelection);\n    }\n  }\n\n  private createScrollRectElement(scrollRect: Protocol.LayerTree.ScrollRect, index: number): void {\n    if (index) {\n      UI.UIUtils.createTextChild(this.scrollRectsCell, ', ');\n    }\n    const element = this.scrollRectsCell.createChild('span', 'scroll-rect');\n    if (this.selection && (this.selection as ScrollRectSelection).scrollRectIndex === index) {\n      element.classList.add('active');\n    }\n    element.textContent = i18nString(UIStrings.scrollRectangleDimensions, {\n      PH1: String(slowScrollRectNames.get(scrollRect.type as unknown as SDK.LayerTreeBase.Layer.ScrollRectType)?.()),\n      PH2: scrollRect.rect.width,\n      PH3: scrollRect.rect.height,\n      PH4: scrollRect.rect.x,\n      PH5: scrollRect.rect.y,\n    });\n    element.addEventListener('click', this.onScrollRectClicked.bind(this, index), false);\n    element.setAttribute('jslog', `${VisualLogging.action('layers.select-object').track({click: true})}`);\n  }\n\n  private formatStickyAncestorLayer(title: string, layer: SDK.LayerTreeBase.Layer|null): string {\n    if (!layer) {\n      return '';\n    }\n\n    const node = layer.nodeForSelfOrAncestor();\n    const name = node ? node.simpleSelector() : i18nString(UIStrings.unnamed);\n    return i18nString(UIStrings.stickyAncenstorLayersS, {PH1: title, PH2: name, PH3: layer.id()});\n  }\n\n  private createStickyAncestorChild(title: string, layer: SDK.LayerTreeBase.Layer|null): void {\n    if (!layer) {\n      return;\n    }\n\n    UI.UIUtils.createTextChild(this.stickyPositionConstraintCell, ', ');\n    const child = this.stickyPositionConstraintCell.createChild('span');\n    child.textContent = this.formatStickyAncestorLayer(title, layer);\n  }\n\n  private populateStickyPositionConstraintCell(constraint: SDK.LayerTreeBase.StickyPositionConstraint|null): void {\n    this.stickyPositionConstraintCell.removeChildren();\n    if (!constraint) {\n      return;\n    }\n\n    const stickyBoxRect = constraint.stickyBoxRect();\n    const stickyBoxRectElement = this.stickyPositionConstraintCell.createChild('span');\n    stickyBoxRectElement.textContent = i18nString(\n        UIStrings.stickyBoxRectangleDimensions,\n        {PH1: stickyBoxRect.width, PH2: stickyBoxRect.height, PH3: stickyBoxRect.x, PH4: stickyBoxRect.y});\n\n    UI.UIUtils.createTextChild(this.stickyPositionConstraintCell, ', ');\n\n    const containingBlockRect = constraint.containingBlockRect();\n    const containingBlockRectElement = this.stickyPositionConstraintCell.createChild('span');\n    containingBlockRectElement.textContent = i18nString(UIStrings.containingBlocRectangleDimensions, {\n      PH1: containingBlockRect.width,\n      PH2: containingBlockRect.height,\n      PH3: containingBlockRect.x,\n      PH4: containingBlockRect.y,\n    });\n\n    this.createStickyAncestorChild(\n        i18nString(UIStrings.nearestLayerShiftingStickyBox), constraint.nearestLayerShiftingStickyBox());\n    this.createStickyAncestorChild(\n        i18nString(UIStrings.nearestLayerShiftingContaining), constraint.nearestLayerShiftingContainingBlock());\n  }\n\n  update(): void {\n    const layer = this.selection?.layer();\n    if (!layer) {\n      this.tableElement.remove();\n      this.paintProfilerLink.remove();\n      this.emptyWidget.show(this.contentElement);\n      return;\n    }\n    this.emptyWidget.detach();\n    this.contentElement.appendChild(this.tableElement);\n    this.contentElement.appendChild(this.paintProfilerLink);\n    this.sizeCell.textContent = i18nString(\n        UIStrings.updateRectangleDimensions,\n        {PH1: layer.width(), PH2: layer.height(), PH3: layer.offsetX(), PH4: layer.offsetY()});\n    if (this.paintCountCell.parentElement) {\n      this.paintCountCell.parentElement.classList.toggle('hidden', !layer.paintCount());\n    }\n    this.paintCountCell.textContent = String(layer.paintCount());\n    this.memoryEstimateCell.textContent = i18n.ByteUtilities.bytesToString(layer.gpuMemoryUsage());\n    void layer.requestCompositingReasons().then(this.updateCompositingReasons.bind(this));\n    this.scrollRectsCell.removeChildren();\n    layer.scrollRects().forEach(this.createScrollRectElement.bind(this));\n    this.populateStickyPositionConstraintCell(layer.stickyPositionConstraint());\n    const snapshot = this.selection && this.selection.type() === Type.SNAPSHOT ?\n        (this.selection as SnapshotSelection).snapshot() :\n        null;\n\n    this.paintProfilerLink.classList.toggle('hidden', !(this.layerSnapshotMap.has(layer) || snapshot));\n  }\n\n  private buildContent(): void {\n    this.tableElement = this.contentElement.createChild('table');\n    this.tbodyElement = this.tableElement.createChild('tbody');\n    this.sizeCell = this.createRow(i18nString(UIStrings.size));\n    this.compositingReasonsCell = this.createRow(i18nString(UIStrings.compositingReasons));\n    this.memoryEstimateCell = this.createRow(i18nString(UIStrings.memoryEstimate));\n    this.paintCountCell = this.createRow(i18nString(UIStrings.paintCount));\n    this.scrollRectsCell = this.createRow(i18nString(UIStrings.slowScrollRegions));\n    this.stickyPositionConstraintCell = this.createRow(i18nString(UIStrings.stickyPositionConstraint));\n    this.paintProfilerLink =\n        this.contentElement.createChild('button', 'hidden devtools-link link-margin text-button link-style');\n    UI.ARIAUtils.markAsLink(this.paintProfilerLink);\n    this.paintProfilerLink.textContent = i18nString(UIStrings.paintProfiler);\n    this.paintProfilerLink.tabIndex = 0;\n    this.paintProfilerLink.addEventListener('click', e => {\n      e.consume(true);\n      this.invokeProfilerLink();\n    });\n    this.paintProfilerLink.setAttribute(\n        'jslog', `${VisualLogging.action('layers.paint-profiler').track({click: true, keydown: 'Enter'})}`);\n  }\n\n  private createRow(title: string): HTMLElement {\n    const tr = this.tbodyElement.createChild('tr');\n    const titleCell = tr.createChild('td');\n    titleCell.textContent = title;\n    return tr.createChild('td');\n  }\n\n  private updateCompositingReasons(compositingReasons: string[]): void {\n    if (!compositingReasons?.length) {\n      this.compositingReasonsCell.textContent = 'n/a';\n      return;\n    }\n    this.compositingReasonsCell.removeChildren();\n    const list = this.compositingReasonsCell.createChild('ul');\n    for (const compositingReason of compositingReasons) {\n      list.createChild('li').textContent = compositingReason;\n    }\n  }\n}\n\nexport const enum Events {\n  PAINT_PROFILER_REQUESTED = 'PaintProfilerRequested',\n}\n\nexport interface EventTypes {\n  [Events.PAINT_PROFILER_REQUESTED]: Selection;\n}\n\nexport const slowScrollRectNames = new Map([\n  [SDK.LayerTreeBase.Layer.ScrollRectType.NON_FAST_SCROLLABLE, i18nLazyString(UIStrings.nonFastScrollable)],\n  [SDK.LayerTreeBase.Layer.ScrollRectType.TOUCH_EVENT_HANDLER, i18nLazyString(UIStrings.touchEventHandler)],\n  [SDK.LayerTreeBase.Layer.ScrollRectType.WHEEL_EVENT_HANDLER, i18nLazyString(UIStrings.wheelEventHandler)],\n  [SDK.LayerTreeBase.Layer.ScrollRectType.REPAINTS_ON_SCROLL, i18nLazyString(UIStrings.repaintsOnScroll)],\n  [\n    SDK.LayerTreeBase.Layer.ScrollRectType.MAIN_THREAD_SCROLL_REASON,\n    i18nLazyString(UIStrings.mainThreadScrollingReason),\n  ],\n]);\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.layer-details-container:has(.empty-view-scroller) {\n  display: flex;\n}\n\ntable {\n  border-spacing: 0;\n}\n\ntable td {\n  font: var(--sys-typescale-body4-regular);\n  line-height: 18px;\n  padding: var(--sys-size-3) var(--sys-size-5);\n  vertical-align: top;\n}\n\ntable td:first-child {\n  color: var(--sys-color-on-surface-subtle);\n  font: var(--sys-typescale-body5-medium);\n  line-height:  18px;\n  white-space: nowrap;\n}\n\n.scroll-rect.active {\n  background-color: var(--sys-color-neutral-container);\n}\n\nul {\n  list-style: none;\n  padding-inline-start: 0;\n  margin-block: 0;\n}\n\n.devtools-link.link-margin {\n  margin: 8px;\n  display: inline-block;\n}\n\n/*# sourceURL=${import.meta.resolve('./layerDetailsView.css')} */`;", "// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Layer View Host of the Layers panel\n   */\n  showInternalLayers: 'Show internal layers',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/LayerViewHost.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport abstract class LayerView {\n  abstract hoverObject(selection: Selection|null): void;\n  abstract selectObject(selection: Selection|null): void;\n  abstract setLayerTree(layerTree: SDK.LayerTreeBase.LayerTreeBase|null): void;\n}\n\nexport class Selection {\n  readonly typeInternal: Type;\n  private readonly layerInternal: SDK.LayerTreeBase.Layer;\n\n  constructor(type: Type, layer: SDK.LayerTreeBase.Layer) {\n    this.typeInternal = type;\n    this.layerInternal = layer;\n  }\n\n  static isEqual(a: Selection|null, b: Selection|null): boolean {\n    return a && b ? a.isEqual(b) : a === b;\n  }\n\n  type(): Type {\n    return this.typeInternal;\n  }\n\n  layer(): SDK.LayerTreeBase.Layer {\n    return this.layerInternal;\n  }\n\n  isEqual(_other: Selection): boolean {\n    return false;\n  }\n}\n\nexport const enum Type {\n  LAYER = 'Layer',\n  SCROLL_RECT = 'ScrollRect',\n  SNAPSHOT = 'Snapshot',\n}\n\nexport class LayerSelection extends Selection {\n  constructor(layer: SDK.LayerTreeBase.Layer) {\n    console.assert(Boolean(layer), 'LayerSelection with empty layer');\n    super(Type.LAYER, layer);\n  }\n\n  override isEqual(other: Selection): boolean {\n    return other.typeInternal === Type.LAYER && other.layer().id() === this.layer().id();\n  }\n}\n\nexport class ScrollRectSelection extends Selection {\n  scrollRectIndex: number;\n  constructor(layer: SDK.LayerTreeBase.Layer, scrollRectIndex: number) {\n    super(Type.SCROLL_RECT, layer);\n    this.scrollRectIndex = scrollRectIndex;\n  }\n\n  override isEqual(other: Selection): boolean {\n    return other.typeInternal === Type.SCROLL_RECT && this.layer().id() === other.layer().id() &&\n        this.scrollRectIndex === (other as ScrollRectSelection).scrollRectIndex;\n  }\n}\n\nexport class SnapshotSelection extends Selection {\n  private readonly snapshotInternal: SDK.PaintProfiler.SnapshotWithRect;\n  constructor(layer: SDK.LayerTreeBase.Layer, snapshot: SDK.PaintProfiler.SnapshotWithRect) {\n    super(Type.SNAPSHOT, layer);\n    this.snapshotInternal = snapshot;\n  }\n\n  override isEqual(other: Selection): boolean {\n    return other.typeInternal === Type.SNAPSHOT && this.layer().id() === other.layer().id() &&\n        this.snapshotInternal === (other as SnapshotSelection).snapshotInternal;\n  }\n\n  snapshot(): SDK.PaintProfiler.SnapshotWithRect {\n    return this.snapshotInternal;\n  }\n}\n\nexport class LayerViewHost {\n  private readonly views: LayerView[];\n  private selectedObject: Selection|null;\n  private hoveredObject: Selection|null;\n  private showInternalLayersSettingInternal: Common.Settings.Setting<boolean>;\n  private snapshotLayers: Map<SDK.LayerTreeBase.Layer, SnapshotSelection>;\n  constructor() {\n    this.views = [];\n    this.selectedObject = null;\n    this.hoveredObject = null;\n    this.showInternalLayersSettingInternal =\n        Common.Settings.Settings.instance().createSetting('layers-show-internal-layers', false);\n    this.snapshotLayers = new Map();\n  }\n\n  registerView(layerView: LayerView): void {\n    this.views.push(layerView);\n  }\n\n  setLayerSnapshotMap(snapshotLayers: Map<SDK.LayerTreeBase.Layer, SnapshotSelection>): void {\n    this.snapshotLayers = snapshotLayers;\n  }\n\n  getLayerSnapshotMap(): Map<SDK.LayerTreeBase.Layer, SnapshotSelection> {\n    return this.snapshotLayers;\n  }\n\n  setLayerTree(layerTree: SDK.LayerTreeBase.LayerTreeBase|null): void {\n    if (!layerTree) {\n      return;\n    }\n    const selectedLayer = this.selectedObject?.layer();\n    if (selectedLayer && (!layerTree?.layerById(selectedLayer.id()))) {\n      this.selectObject(null);\n    }\n    const hoveredLayer = this.hoveredObject?.layer();\n    if (hoveredLayer && (!layerTree?.layerById(hoveredLayer.id()))) {\n      this.hoverObject(null);\n    }\n    for (const view of this.views) {\n      view.setLayerTree(layerTree);\n    }\n  }\n\n  hoverObject(selection: Selection|null): void {\n    if (Selection.isEqual(this.hoveredObject, selection)) {\n      return;\n    }\n    this.hoveredObject = selection;\n    const layer = selection?.layer();\n    this.toggleNodeHighlight(layer ? layer.nodeForSelfOrAncestor() : null);\n    for (const view of this.views) {\n      view.hoverObject(selection);\n    }\n  }\n\n  selectObject(selection: Selection|null): void {\n    if (Selection.isEqual(this.selectedObject, selection)) {\n      return;\n    }\n    this.selectedObject = selection;\n    for (const view of this.views) {\n      view.selectObject(selection);\n    }\n  }\n\n  selection(): Selection|null {\n    return this.selectedObject;\n  }\n\n  showContextMenu(contextMenu: UI.ContextMenu.ContextMenu, selection: Selection|null): void {\n    contextMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.showInternalLayers), this.toggleShowInternalLayers.bind(this), {\n          checked: this.showInternalLayersSettingInternal.get(),\n          jslogContext: this.showInternalLayersSettingInternal.name,\n        });\n    const node = selection?.layer()?.nodeForSelfOrAncestor();\n    if (node) {\n      contextMenu.appendApplicableItems(node);\n    }\n    void contextMenu.show();\n  }\n\n  showInternalLayersSetting(): Common.Settings.Setting<boolean> {\n    return this.showInternalLayersSettingInternal;\n  }\n\n  private toggleShowInternalLayers(): void {\n    this.showInternalLayersSettingInternal.set(!this.showInternalLayersSettingInternal.get());\n  }\n\n  private toggleNodeHighlight(node: SDK.DOMModel.DOMNode|null): void {\n    if (node) {\n      node.highlightForTwoSeconds();\n      return;\n    }\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n  }\n}\n", "/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport layerTreeOutlineStyles from './layerTreeOutline.css.js';\nimport {\n  LayerSelection,\n  type LayerView,\n  type LayerViewHost,\n  type Selection,\n  type SnapshotSelection,\n} from './LayerViewHost.js';\n\nconst UIStrings = {\n  /**\n   *@description A count of the number of rendering layers in Layer Tree Outline of the Layers panel\n   *@example {10} PH1\n   */\n  layerCount: '{PH1} layers',\n  /**\n   *@description Label for layers sidepanel tree\n   */\n  layersTreePane: 'Layers Tree Pane',\n  /**\n   *@description A context menu item in the DView of the Layers panel\n   */\n  showPaintProfiler: 'Show Paint Profiler',\n  /**\n   *@description Details text content in Layer Tree Outline of the Layers panel\n   *@example {10} PH1\n   *@example {10} PH2\n   */\n  updateChildDimension: ' ({PH1} × {PH2})',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/LayerTreeOutline.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class LayerTreeOutline extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.TreeOutline.TreeOutline>(\n    UI.TreeOutline.TreeOutline) implements Common.EventTarget.EventTarget<EventTypes>, LayerView {\n  private layerViewHost: LayerViewHost;\n  private treeOutline: UI.TreeOutline.TreeOutlineInShadow;\n  private lastHoveredNode: LayerTreeElement|null;\n  private layerCountElement: HTMLSpanElement;\n  private layerMemoryElement: HTMLSpanElement;\n  override element: HTMLElement;\n  private layerTree?: SDK.LayerTreeBase.LayerTreeBase|null;\n  private layerSnapshotMap?: Map<SDK.LayerTreeBase.Layer, SnapshotSelection>;\n\n  constructor(layerViewHost: LayerViewHost) {\n    super();\n    this.layerViewHost = layerViewHost;\n    this.layerViewHost.registerView(this);\n\n    this.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    this.treeOutline.element.classList.add('layer-tree', 'overflow-auto');\n    this.treeOutline.element.addEventListener('mousemove', this.onMouseMove.bind(this) as EventListener, false);\n    this.treeOutline.element.addEventListener('mouseout', this.onMouseMove.bind(this) as EventListener, false);\n    this.treeOutline.element.addEventListener('contextmenu', this.onContextMenu.bind(this) as EventListener, true);\n    UI.ARIAUtils.setLabel(this.treeOutline.contentElement, i18nString(UIStrings.layersTreePane));\n\n    this.lastHoveredNode = null;\n\n    const summaryElement = document.createElement('div');\n    summaryElement.classList.add('hbox', 'layer-summary');\n    this.layerCountElement = document.createElement('span');\n    this.layerCountElement.classList.add('layer-count');\n    this.layerMemoryElement = document.createElement('span');\n    summaryElement.appendChild(this.layerCountElement);\n    summaryElement.appendChild(this.layerMemoryElement);\n\n    const wrapperElement = document.createElement('div');\n    wrapperElement.classList.add('vbox', 'layer-tree-wrapper');\n    wrapperElement.appendChild(this.treeOutline.element);\n    wrapperElement.appendChild(summaryElement);\n    this.element = wrapperElement;\n    Platform.DOMUtilities.appendStyle(this.element, layerTreeOutlineStyles);\n\n    this.layerViewHost.showInternalLayersSetting().addChangeListener(this.update, this);\n  }\n\n  override focus(): void {\n    this.treeOutline.focus();\n  }\n\n  selectObject(selection: Selection|null): void {\n    this.hoverObject(null);\n    const layer = selection?.layer();\n    const node = layer && layerToTreeElement.get(layer);\n    if (node) {\n      node.revealAndSelect(true);\n    } else if (this.treeOutline.selectedTreeElement) {\n      this.treeOutline.selectedTreeElement.deselect();\n    }\n  }\n\n  hoverObject(selection: Selection|null): void {\n    const layer = selection?.layer();\n    const node = layer && layerToTreeElement.get(layer);\n    if (node === this.lastHoveredNode) {\n      return;\n    }\n    if (this.lastHoveredNode) {\n      this.lastHoveredNode.setHovered(false);\n    }\n    if (node) {\n      node.setHovered(true);\n    }\n    this.lastHoveredNode = node as LayerTreeElement;\n  }\n\n  setLayerTree(layerTree: SDK.LayerTreeBase.LayerTreeBase|null): void {\n    this.layerTree = layerTree;\n    this.update();\n  }\n\n  private update(): void {\n    const showInternalLayers = this.layerViewHost.showInternalLayersSetting().get();\n    const seenLayers = new Map<SDK.LayerTreeBase.Layer, boolean>();\n    let root: (SDK.LayerTreeBase.Layer|null)|null = null;\n    if (this.layerTree) {\n      if (!showInternalLayers) {\n        root = this.layerTree.contentRoot();\n      }\n      if (!root) {\n        root = this.layerTree.root();\n      }\n    }\n\n    let layerCount = 0;\n    let totalLayerMemory = 0;\n\n    function updateLayer(this: LayerTreeOutline, layer: SDK.LayerTreeBase.Layer): void {\n      if (!layer.drawsContent() && !showInternalLayers) {\n        return;\n      }\n      if (seenLayers.get(layer)) {\n        console.assert(false, 'Duplicate layer: ' + layer.id());\n      }\n      seenLayers.set(layer, true);\n\n      layerCount++;\n      totalLayerMemory += layer.gpuMemoryUsage();\n\n      let node: LayerTreeElement|null = layerToTreeElement.get(layer) || null;\n      let parentLayer = layer.parent();\n      // Skip till nearest visible ancestor.\n      while (parentLayer && parentLayer !== root && !parentLayer.drawsContent() && !showInternalLayers) {\n        parentLayer = parentLayer.parent();\n      }\n      const parent =\n          layer === root ? this.treeOutline.rootElement() : parentLayer && layerToTreeElement.get(parentLayer);\n      if (!parent) {\n        console.assert(false, 'Parent is not in the tree');\n        return;\n      }\n      if (!node) {\n        node = new LayerTreeElement(this, layer);\n        parent.appendChild(node);\n        // Expand all new non-content layers to expose content layers better.\n        if (!layer.drawsContent()) {\n          node.expand();\n        }\n      } else {\n        if (node.parent !== parent) {\n          const oldSelection = this.treeOutline.selectedTreeElement;\n          if (node.parent) {\n            node.parent.removeChild(node);\n          }\n          parent.appendChild(node);\n          if (oldSelection && oldSelection !== this.treeOutline.selectedTreeElement) {\n            oldSelection.select();\n          }\n        }\n        node.update();\n      }\n    }\n    if (root && this.layerTree) {\n      this.layerTree.forEachLayer(updateLayer.bind(this), root);\n    }\n    // Clean up layers that don't exist anymore from tree.\n    const rootElement = this.treeOutline.rootElement();\n    for (let node = rootElement.firstChild(); node instanceof LayerTreeElement && !node.root;) {\n      if (seenLayers.get(node.layer)) {\n        node = node.traverseNextTreeElement(false);\n      } else {\n        const nextNode = node.nextSibling || node.parent;\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n        if (node === this.lastHoveredNode) {\n          this.lastHoveredNode = null;\n        }\n        node = nextNode;\n      }\n    }\n    if (!this.treeOutline.selectedTreeElement && this.layerTree) {\n      const elementToSelect = this.layerTree.contentRoot() || this.layerTree.root();\n      if (elementToSelect) {\n        const layer = layerToTreeElement.get(elementToSelect);\n        if (layer) {\n          layer.revealAndSelect(true);\n        }\n      }\n    }\n\n    this.layerCountElement.textContent = i18nString(UIStrings.layerCount, {PH1: layerCount});\n    this.layerMemoryElement.textContent = i18n.ByteUtilities.bytesToString(totalLayerMemory);\n  }\n\n  private onMouseMove(event: MouseEvent): void {\n    const node = this.treeOutline.treeElementFromEvent(event) as LayerTreeElement | null;\n    if (node === this.lastHoveredNode) {\n      return;\n    }\n    this.layerViewHost.hoverObject(this.selectionForNode(node));\n  }\n\n  selectedNodeChanged(node: LayerTreeElement): void {\n    this.layerViewHost.selectObject(this.selectionForNode(node));\n  }\n\n  private onContextMenu(event: MouseEvent): void {\n    const selection = this.selectionForNode(this.treeOutline.treeElementFromEvent(event) as LayerTreeElement | null);\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const layer = selection?.layer();\n    if (selection && layer) {\n      this.layerSnapshotMap = this.layerViewHost.getLayerSnapshotMap();\n      if (this.layerSnapshotMap.has(layer)) {\n        contextMenu.defaultSection().appendItem(\n            i18nString(UIStrings.showPaintProfiler),\n            () => this.dispatchEventToListeners(Events.PAINT_PROFILER_REQUESTED, selection),\n            {jslogContext: 'layers.paint-profiler'});\n      }\n    }\n    this.layerViewHost.showContextMenu(contextMenu, selection);\n  }\n\n  private selectionForNode(node: LayerTreeElement|null): Selection|null {\n    return node?.layer ? new LayerSelection(node.layer) : null;\n  }\n}\n\nexport const enum Events {\n  PAINT_PROFILER_REQUESTED = 'PaintProfilerRequested',\n}\n\nexport interface EventTypes {\n  [Events.PAINT_PROFILER_REQUESTED]: Selection;\n}\n\nexport class LayerTreeElement extends UI.TreeOutline.TreeElement {\n  // Watch out: This is different from treeOutline that\n  // LayerTreeElement inherits from UI.TreeOutline.TreeElement.\n  treeOutlineInternal: LayerTreeOutline;\n  layer: SDK.LayerTreeBase.Layer;\n\n  constructor(tree: LayerTreeOutline, layer: SDK.LayerTreeBase.Layer) {\n    super();\n    this.treeOutlineInternal = tree;\n    this.layer = layer;\n    layerToTreeElement.set(layer, this);\n    this.update();\n  }\n\n  update(): void {\n    const node = this.layer.nodeForSelfOrAncestor();\n    const title = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(title, node ? node.simpleSelector() : '#' + this.layer.id());\n    const details = title.createChild('span', 'dimmed');\n    details.textContent =\n        i18nString(UIStrings.updateChildDimension, {PH1: this.layer.width(), PH2: this.layer.height()});\n    this.title = title;\n  }\n\n  override onselect(): boolean {\n    this.treeOutlineInternal.selectedNodeChanged(this);\n    return false;\n  }\n\n  setHovered(hovered: boolean): void {\n    this.listItemElement.classList.toggle('hovered', hovered);\n  }\n}\n\nexport const layerToTreeElement = new WeakMap<SDK.LayerTreeBase.Layer, LayerTreeElement>();\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.layer-summary {\n  border-top: 1px solid var(--sys-color-divider);\n  justify-content: space-between;\n  padding: 4px 10px;\n  flex-shrink: 0;\n}\n\n.layer-count {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.layer-tree-wrapper {\n  flex-grow: 1;\n}\n\n/*# sourceURL=${import.meta.resolve('./layerTreeOutline.css')} */`;", "/*\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport layers3DViewStyles from './layers3DView.css.js';\nimport {\n  LayerSelection,\n  type LayerView,\n  type LayerViewHost,\n  ScrollRectSelection,\n  Selection,\n  SnapshotSelection,\n  Type,\n} from './LayerViewHost.js';\nimport {Events as TransformControllerEvents, TransformController} from './TransformController.js';\n\nconst UIStrings = {\n  /**\n   *@description Text of a DOM element in DView of the Layers panel\n   */\n  noLayerInformation: 'No layers detected yet',\n  /**\n   *@description Text of a DOM element in DView of the Layers panel that explains the panel\n   */\n  layerExplanation: 'On this page you will be able to view and inspect document layers.',\n  /**\n   *@description Accessibility label for canvas view in Layers tool\n   */\n  dLayersView: '3D Layers View',\n  /**\n   *@description Text in DView of the Layers panel\n   */\n  cantDisplayLayers: 'Can\\'t display layers',\n  /**\n   *@description Text in DView of the Layers panel\n   */\n  webglSupportIsDisabledInYour: 'WebGL support is disabled in your browser.',\n  /**\n   *@description Text in DView of the Layers panel\n   *@example {about:gpu} PH1\n   */\n  checkSForPossibleReasons: 'Check {PH1} for possible reasons.',\n  /**\n   *@description Text for a checkbox in the toolbar of the Layers panel to show the area of slow scroll rect\n   */\n  slowScrollRects: 'Slow scroll rects',\n  /**\n   * @description Text for a checkbox in the toolbar of the Layers panel. This is a noun, for a\n   * setting meaning 'display paints in the layers viewer'. 'Paints' here means 'paint events' i.e.\n   * when the browser draws pixels to the screen.\n   */\n  paints: 'Paints',\n  /**\n   *@description A context menu item in the DView of the Layers panel\n   */\n  resetView: 'Reset View',\n  /**\n   *@description A context menu item in the DView of the Layers panel\n   */\n  showPaintProfiler: 'Show Paint Profiler',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/Layers3DView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst vertexPositionAttributes = new Map<WebGLProgram, number>();\n\nconst vertexColorAttributes = new Map<WebGLProgram, number>();\n\nconst textureCoordAttributes = new Map<WebGLProgram, number>();\n\nconst uniformMatrixLocations = new Map<WebGLProgram, WebGLUniformLocation|null>();\n\nconst uniformSamplerLocations = new Map<WebGLProgram, WebGLUniformLocation|null>();\n\nconst imageForTexture = new Map<WebGLTexture, HTMLImageElement>();\n\nexport class Layers3DView extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox)\n    implements LayerView {\n  private failBanner: UI.EmptyWidget.EmptyWidget;\n  private readonly layerViewHost: LayerViewHost;\n  private transformController: TransformController;\n  private canvasElement: HTMLCanvasElement;\n  private lastSelection: Record<string, Selection|null>;\n  private layerTree: SDK.LayerTreeBase.LayerTreeBase|null;\n  private readonly textureManager: LayerTextureManager;\n  private chromeTextures: Array<WebGLTexture|undefined>;\n  private rects: Rectangle[];\n  private snapshotLayers: Map<SDK.LayerTreeBase.Layer, SnapshotSelection>;\n  private shaderProgram!: WebGLProgram|null;\n  private oldTextureScale!: number|undefined;\n  private depthByLayerId!: Map<string, number>;\n  private visibleLayers!: Set<SDK.LayerTreeBase.Layer>;\n  private maxDepth!: number;\n  private scale!: number;\n  private layerTexture?: {layer: SDK.LayerTreeBase.Layer, texture: WebGLTexture}|null;\n  private projectionMatrix?: DOMMatrix;\n  private whiteTexture?: WebGLTexture|null;\n  private gl?: WebGLRenderingContext|null;\n  private dimensionsForAutoscale?: {width: number, height: number};\n  private needsUpdate?: boolean;\n  private updateScheduled?: boolean;\n  private panelToolbar?: UI.Toolbar.Toolbar;\n  private showSlowScrollRectsSetting?: Common.Settings.Setting<boolean>;\n  private showPaintsSetting?: Common.Settings.Setting<boolean>;\n  private mouseDownX?: number;\n  private mouseDownY?: number;\n\n  constructor(layerViewHost: LayerViewHost) {\n    super(true);\n    this.registerRequiredCSS(layers3DViewStyles);\n    this.element.setAttribute('jslog', `${VisualLogging.pane('layers-3d-view')}`);\n\n    this.contentElement.classList.add('layers-3d-view');\n    this.failBanner = new UI.EmptyWidget.EmptyWidget(\n        i18nString(UIStrings.noLayerInformation), i18nString(UIStrings.layerExplanation));\n\n    this.layerViewHost = layerViewHost;\n    this.layerViewHost.registerView(this);\n    // Install transform controller, but still allow drag events to set focus on the element, which is needed\n    // to correctly listen for keyboard shortcuts.\n    this.transformController =\n        new TransformController(this.contentElement, false, false /* preventDefaultOnMouseDown */);\n\n    this.transformController.addEventListener(TransformControllerEvents.TRANSFORM_CHANGED, this.update, this);\n\n    this.initToolbar();\n    this.canvasElement = this.contentElement.createChild('canvas');\n    this.canvasElement.tabIndex = 0;\n    this.canvasElement.addEventListener('dblclick', this.onDoubleClick.bind(this), false);\n    this.canvasElement.addEventListener('mousedown', this.onMouseDown.bind(this), false);\n    this.canvasElement.addEventListener('mouseup', this.onMouseUp.bind(this), false);\n    this.canvasElement.addEventListener('mouseleave', this.onMouseMove.bind(this), false);\n    this.canvasElement.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n    this.canvasElement.addEventListener('contextmenu', this.onContextMenu.bind(this), false);\n    this.canvasElement.setAttribute('jslog', `${VisualLogging.canvas('layers').track({click: true, drag: true})}`);\n    UI.ARIAUtils.setLabel(this.canvasElement, i18nString(UIStrings.dLayersView));\n\n    this.lastSelection = {};\n    this.layerTree = null;\n    this.updateScheduled = false;\n\n    this.textureManager = new LayerTextureManager(this.update.bind(this));\n\n    this.chromeTextures = [];\n\n    this.rects = [];\n\n    this.snapshotLayers = new Map();\n    this.layerViewHost.setLayerSnapshotMap(this.snapshotLayers);\n\n    this.layerViewHost.showInternalLayersSetting().addChangeListener(this.update, this);\n  }\n\n  setLayerTree(layerTree: SDK.LayerTreeBase.LayerTreeBase|null): void {\n    this.layerTree = layerTree;\n    this.layerTexture = null;\n    delete this.oldTextureScale;\n    if (this.showPaints()) {\n      this.textureManager.setLayerTree(layerTree);\n    }\n    this.update();\n  }\n\n  showImageForLayer(layer: SDK.LayerTreeBase.Layer, imageURL?: string): void {\n    if (!imageURL) {\n      this.layerTexture = null;\n      this.update();\n      return;\n    }\n    void UI.UIUtils.loadImage(imageURL).then(image => {\n      const texture = image && LayerTextureManager.createTextureForImage(this.gl || null, image);\n      this.layerTexture = texture ? {layer, texture} : null;\n      this.update();\n    });\n  }\n\n  override onResize(): void {\n    this.resizeCanvas();\n    this.update();\n  }\n\n  override willHide(): void {\n    this.textureManager.suspend();\n  }\n\n  override wasShown(): void {\n    this.textureManager.resume();\n    if (!this.needsUpdate) {\n      return;\n    }\n    this.resizeCanvas();\n    this.update();\n  }\n\n  updateLayerSnapshot(layer: SDK.LayerTreeBase.Layer): void {\n    this.textureManager.layerNeedsUpdate(layer);\n  }\n\n  private setOutline(type: OutlineType, selection: Selection|null): void {\n    this.lastSelection[type] = selection;\n    this.update();\n  }\n\n  hoverObject(selection: Selection|null): void {\n    this.setOutline(OutlineType.Hovered, selection);\n  }\n\n  selectObject(selection: Selection|null): void {\n    this.setOutline(OutlineType.Hovered, null);\n    this.setOutline(OutlineType.Selected, selection);\n  }\n\n  snapshotForSelection(selection: Selection): Promise<SDK.PaintProfiler.SnapshotWithRect|null> {\n    if (selection.type() === Type.SNAPSHOT) {\n      const snapshotWithRect = (selection as SnapshotSelection).snapshot();\n      snapshotWithRect.snapshot.addReference();\n      return Promise.resolve(snapshotWithRect);\n    }\n    if (selection.layer()) {\n      const promise = selection.layer().snapshots()[0];\n      if (promise !== undefined) {\n        return promise;\n      }\n    }\n    return Promise.resolve(null);\n  }\n\n  private initGL(canvas: HTMLCanvasElement): WebGLRenderingContext|null {\n    const gl = canvas.getContext('webgl');\n    if (!gl) {\n      return null;\n    }\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    gl.enable(gl.BLEND);\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.enable(gl.DEPTH_TEST);\n    return gl;\n  }\n\n  private createShader(type: number, script: string): void {\n    if (!this.gl) {\n      return;\n    }\n\n    const shader = this.gl.createShader(type);\n    if (shader && this.shaderProgram) {\n      this.gl.shaderSource(shader, script);\n      this.gl.compileShader(shader);\n      this.gl.attachShader(this.shaderProgram, shader);\n    }\n  }\n\n  private initShaders(): void {\n    if (!this.gl) {\n      return;\n    }\n\n    this.shaderProgram = this.gl.createProgram();\n    if (!this.shaderProgram) {\n      return;\n    }\n    this.createShader(this.gl.FRAGMENT_SHADER, FragmentShader);\n    this.createShader(this.gl.VERTEX_SHADER, VertexShader);\n    this.gl.linkProgram(this.shaderProgram);\n    this.gl.useProgram(this.shaderProgram);\n\n    const aVertexPositionAttribute = this.gl.getAttribLocation(this.shaderProgram, 'aVertexPosition');\n    this.gl.enableVertexAttribArray(aVertexPositionAttribute);\n    vertexPositionAttributes.set(this.shaderProgram, aVertexPositionAttribute);\n\n    const aVertexColorAttribute = this.gl.getAttribLocation(this.shaderProgram, 'aVertexColor');\n    this.gl.enableVertexAttribArray(aVertexColorAttribute);\n    vertexColorAttributes.set(this.shaderProgram, aVertexColorAttribute);\n\n    const aTextureCoordAttribute = this.gl.getAttribLocation(this.shaderProgram, 'aTextureCoord');\n    this.gl.enableVertexAttribArray(aTextureCoordAttribute);\n    textureCoordAttributes.set(this.shaderProgram, aTextureCoordAttribute);\n\n    const uMatrixLocation = this.gl.getUniformLocation(this.shaderProgram, 'uPMatrix');\n    uniformMatrixLocations.set(this.shaderProgram, uMatrixLocation);\n\n    const uSamplerLocation = this.gl.getUniformLocation(this.shaderProgram, 'uSampler');\n    uniformSamplerLocations.set(this.shaderProgram, uSamplerLocation);\n  }\n\n  private resizeCanvas(): void {\n    this.canvasElement.width = this.canvasElement.offsetWidth * window.devicePixelRatio;\n    this.canvasElement.height = this.canvasElement.offsetHeight * window.devicePixelRatio;\n  }\n\n  private updateTransformAndConstraints(): void {\n    const paddingFraction = 0.1;\n    const dimensionsForAutoscale = this.dimensionsForAutoscale || {width: 0, height: 0};\n    const viewport = this.layerTree ? this.layerTree.viewportSize() : null;\n    const baseWidth = viewport ? viewport.width : dimensionsForAutoscale.width;\n    const baseHeight = viewport ? viewport.height : dimensionsForAutoscale.height;\n    const canvasWidth = this.canvasElement.width;\n    const canvasHeight = this.canvasElement.height;\n    const paddingX = canvasWidth * paddingFraction;\n    const paddingY = canvasHeight * paddingFraction;\n    const scaleX = (canvasWidth - 2 * paddingX) / baseWidth;\n    const scaleY = (canvasHeight - 2 * paddingY) / baseHeight;\n    const viewScale = Math.min(scaleX, scaleY);\n    const minScaleConstraint =\n        Math.min(baseWidth / dimensionsForAutoscale.width, baseHeight / dimensionsForAutoscale.width) / 2;\n    this.transformController.setScaleConstraints(\n        minScaleConstraint,\n        10 / viewScale);  // 1/viewScale is 1:1 in terms of pixels, so allow zooming to 10x of native size\n    const scale = this.transformController.scale();\n    const rotateX = this.transformController.rotateX();\n    const rotateY = this.transformController.rotateY();\n\n    this.scale = scale * viewScale;\n    const textureScale = Platform.NumberUtilities.clamp(this.scale, 0.1, 1);\n    if (textureScale !== this.oldTextureScale) {\n      this.oldTextureScale = textureScale;\n      this.textureManager.setScale(textureScale);\n      this.dispatchEventToListeners(Events.SCALE_CHANGED, textureScale);\n    }\n    const scaleAndRotationMatrix = new WebKitCSSMatrix()\n                                       .scale(scale, scale, scale)\n                                       .translate(canvasWidth / 2, canvasHeight / 2, 0)\n                                       .rotate(rotateX, rotateY, 0)\n                                       .scale(viewScale, viewScale, viewScale)\n                                       .translate(-baseWidth / 2, -baseHeight / 2, 0);\n\n    let bounds;\n    for (let i = 0; i < this.rects.length; ++i) {\n      bounds = UI.Geometry.boundsForTransformedPoints(scaleAndRotationMatrix, this.rects[i].vertices, bounds);\n    }\n\n    if (bounds) {\n      this.transformController.clampOffsets(\n          (paddingX - bounds.maxX) / window.devicePixelRatio,\n          (canvasWidth - paddingX - bounds.minX) / window.devicePixelRatio,\n          (paddingY - bounds.maxY) / window.devicePixelRatio,\n          (canvasHeight - paddingY - bounds.minY) / window.devicePixelRatio);\n    }\n    const offsetX = this.transformController.offsetX() * window.devicePixelRatio;\n    const offsetY = this.transformController.offsetY() * window.devicePixelRatio;\n    // Multiply to translation matrix on the right rather than translate (which would implicitly multiply on the left).\n    this.projectionMatrix = new WebKitCSSMatrix().translate(offsetX, offsetY, 0).multiply(scaleAndRotationMatrix);\n\n    const glProjectionMatrix = new WebKitCSSMatrix()\n                                   .scale(1, -1, -1)\n                                   .translate(-1, -1, 0)\n                                   .scale(2 / this.canvasElement.width, 2 / this.canvasElement.height, 1 / 1000000)\n                                   .multiply(this.projectionMatrix);\n\n    if (this.shaderProgram) {\n      const pMatrixUniform = uniformMatrixLocations.get(this.shaderProgram);\n      if (this.gl && pMatrixUniform) {\n        this.gl.uniformMatrix4fv(pMatrixUniform, false, this.arrayFromMatrix(glProjectionMatrix));\n      }\n    }\n  }\n\n  private arrayFromMatrix(m: DOMMatrix): Float32Array {\n    return new Float32Array([\n      m.m11,\n      m.m12,\n      m.m13,\n      m.m14,\n      m.m21,\n      m.m22,\n      m.m23,\n      m.m24,\n      m.m31,\n      m.m32,\n      m.m33,\n      m.m34,\n      m.m41,\n      m.m42,\n      m.m43,\n      m.m44,\n    ]);\n  }\n\n  private initWhiteTexture(): void {\n    if (!this.gl) {\n      return;\n    }\n\n    this.whiteTexture = this.gl.createTexture();\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.whiteTexture);\n    const whitePixel = new Uint8Array([255, 255, 255, 255]);\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, whitePixel);\n  }\n\n  private initChromeTextures(): void {\n    function loadChromeTexture(this: Layers3DView, index: ChromeTexture, url: string): void {\n      void UI.UIUtils.loadImage(url).then(image => {\n        this.chromeTextures[index] =\n            image && LayerTextureManager.createTextureForImage(this.gl || null, image) || undefined;\n      });\n    }\n    loadChromeTexture.call(this, ChromeTexture.LEFT, 'Images/chromeLeft.avif');\n    loadChromeTexture.call(this, ChromeTexture.MIDDLE, 'Images/chromeMiddle.avif');\n    loadChromeTexture.call(this, ChromeTexture.RIGHT, 'Images/chromeRight.avif');\n  }\n\n  private initGLIfNecessary(): WebGLRenderingContext|null {\n    if (this.gl) {\n      return this.gl;\n    }\n    this.gl = this.initGL(this.canvasElement);\n    if (!this.gl) {\n      return null;\n    }\n    this.initShaders();\n    this.initWhiteTexture();\n    this.initChromeTextures();\n    this.textureManager.setContext(this.gl);\n    return this.gl;\n  }\n\n  private calculateDepthsAndVisibility(): void {\n    this.depthByLayerId = new Map();\n    let depth = 0;\n    const showInternalLayers = this.layerViewHost.showInternalLayersSetting().get();\n    if (!this.layerTree) {\n      return;\n    }\n\n    const root = showInternalLayers ? this.layerTree.root() : (this.layerTree.contentRoot() || this.layerTree.root());\n    if (!root) {\n      return;\n    }\n\n    const queue = [root];\n    this.depthByLayerId.set(root.id(), 0);\n    this.visibleLayers = new Set();\n    while (queue.length > 0) {\n      const layer = queue.shift();\n      if (!layer) {\n        break;\n      }\n\n      if (showInternalLayers || layer.drawsContent()) {\n        this.visibleLayers.add(layer);\n      }\n      const children = layer.children();\n      for (let i = 0; i < children.length; ++i) {\n        this.depthByLayerId.set(children[i].id(), ++depth);\n        queue.push(children[i]);\n      }\n    }\n    this.maxDepth = depth;\n  }\n\n  private depthForLayer(layer: SDK.LayerTreeBase.Layer): number {\n    return (this.depthByLayerId.get(layer.id()) || 0) * LayerSpacing;\n  }\n\n  private calculateScrollRectDepth(layer: SDK.LayerTreeBase.Layer, index: number): number {\n    return this.depthForLayer(layer) + index * ScrollRectSpacing + 1;\n  }\n\n  private updateDimensionsForAutoscale(layer: SDK.LayerTreeBase.Layer): void {\n    // We don't want to be precise, but rather pick something least affected by\n    // animationtransforms, so that we don't change scale too often. So let's\n    // disregard transforms, scrolling and relative layer positioning and choose\n    // the largest dimensions of all layers.\n    if (!this.dimensionsForAutoscale) {\n      this.dimensionsForAutoscale = {width: 0, height: 0};\n    }\n\n    this.dimensionsForAutoscale.width = Math.max(layer.width(), this.dimensionsForAutoscale.width);\n    this.dimensionsForAutoscale.height = Math.max(layer.height(), this.dimensionsForAutoscale.height);\n  }\n\n  private calculateLayerRect(layer: SDK.LayerTreeBase.Layer): void {\n    if (!this.visibleLayers.has(layer)) {\n      return;\n    }\n    const selection = new LayerSelection(layer);\n    const rect = new Rectangle(selection);\n    rect.setVertices(layer.quad(), this.depthForLayer(layer));\n    this.appendRect(rect);\n    this.updateDimensionsForAutoscale(layer);\n  }\n\n  private appendRect(rect: Rectangle): void {\n    const selection = rect.relatedObject;\n    const isSelected = Selection.isEqual(this.lastSelection[OutlineType.Selected], selection);\n    const isHovered = Selection.isEqual(this.lastSelection[OutlineType.Hovered], selection);\n    if (isSelected) {\n      rect.borderColor = SelectedBorderColor;\n    } else if (isHovered) {\n      rect.borderColor = HoveredBorderColor;\n      const fillColor = rect.fillColor || [255, 255, 255, 1];\n      const maskColor = HoveredImageMaskColor;\n      rect.fillColor = [\n        fillColor[0] * maskColor[0] / 255,\n        fillColor[1] * maskColor[1] / 255,\n        fillColor[2] * maskColor[2] / 255,\n        fillColor[3] * maskColor[3],\n      ];\n    } else {\n      rect.borderColor = BorderColor;\n    }\n    rect.lineWidth = isSelected ? SelectedBorderWidth : BorderWidth;\n    this.rects.push(rect);\n  }\n\n  private calculateLayerScrollRects(layer: SDK.LayerTreeBase.Layer): void {\n    const scrollRects = layer.scrollRects();\n    for (let i = 0; i < scrollRects.length; ++i) {\n      const selection = new ScrollRectSelection(layer, i);\n      const rect = new Rectangle(selection);\n      rect.calculateVerticesFromRect(layer, scrollRects[i].rect, this.calculateScrollRectDepth(layer, i));\n      rect.fillColor = ScrollRectBackgroundColor;\n      this.appendRect(rect);\n    }\n  }\n\n  private calculateLayerTileRects(layer: SDK.LayerTreeBase.Layer): void {\n    const tiles = this.textureManager.tilesForLayer(layer);\n    for (let i = 0; i < tiles.length; ++i) {\n      const tile = tiles[i];\n      if (!tile.texture) {\n        continue;\n      }\n      const selection = new SnapshotSelection(layer, {rect: tile.rect, snapshot: tile.snapshot});\n      const rect = new Rectangle(selection);\n      if (!this.snapshotLayers.has(layer)) {\n        this.snapshotLayers.set(layer, selection);\n      }\n\n      rect.calculateVerticesFromRect(layer, tile.rect, this.depthForLayer(layer) + 1);\n      rect.texture = tile.texture;\n      this.appendRect(rect);\n    }\n  }\n\n  private calculateRects(): void {\n    this.rects = [];\n    this.snapshotLayers.clear();\n    this.dimensionsForAutoscale = {width: 0, height: 0};\n    if (this.layerTree) {\n      this.layerTree.forEachLayer(this.calculateLayerRect.bind(this));\n    }\n\n    if (this.showSlowScrollRectsSetting && this.showSlowScrollRectsSetting.get() && this.layerTree) {\n      this.layerTree.forEachLayer(this.calculateLayerScrollRects.bind(this));\n    }\n\n    if (this.layerTexture && this.visibleLayers.has(this.layerTexture.layer)) {\n      const layer = this.layerTexture.layer;\n      const selection = new LayerSelection(layer);\n      const rect = new Rectangle(selection);\n      rect.setVertices(layer.quad(), this.depthForLayer(layer));\n      rect.texture = this.layerTexture.texture;\n      this.appendRect(rect);\n    } else if (this.showPaints() && this.layerTree) {\n      this.layerTree.forEachLayer(this.calculateLayerTileRects.bind(this));\n    }\n  }\n\n  private makeColorsArray(color: number[]): number[] {\n    let colors: number[] = [];\n    const normalizedColor = [color[0] / 255, color[1] / 255, color[2] / 255, color[3]];\n    for (let i = 0; i < 4; i++) {\n      colors = colors.concat(normalizedColor);\n    }\n    return colors;\n  }\n\n  private setVertexAttribute(attribute: number, array: number[], length: number): void {\n    const gl = this.gl;\n    if (!gl) {\n      return;\n    }\n\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(array), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(attribute, length, gl.FLOAT, false, 0, 0);\n  }\n\n  // This view currently draws every rect, every frame\n  // It'd be far more effectient to retain the buffers created in setVertexAttribute,\n  // and manipulate them as needed.\n  // TODO(crbug.com/1473451): consider those optimizations or porting to 3D css transforms\n  private drawRectangle(vertices: number[], mode: number, color?: number[], texture?: Object): void {\n    const gl = this.gl;\n    const white = [255, 255, 255, 1];\n    color = color || white;\n    if (!this.shaderProgram) {\n      return;\n    }\n\n    const vertexPositionAttribute = vertexPositionAttributes.get(this.shaderProgram);\n    const textureCoordAttribute = textureCoordAttributes.get(this.shaderProgram);\n    const vertexColorAttribute = vertexColorAttributes.get(this.shaderProgram);\n    if (typeof vertexPositionAttribute !== 'undefined') {\n      this.setVertexAttribute(vertexPositionAttribute, vertices, 3);\n    }\n    if (typeof textureCoordAttribute !== 'undefined') {\n      this.setVertexAttribute(textureCoordAttribute, [0, 1, 1, 1, 1, 0, 0, 0], 2);\n    }\n    if (typeof vertexColorAttribute !== 'undefined') {\n      this.setVertexAttribute(vertexColorAttribute, this.makeColorsArray(color), color.length);\n    }\n\n    if (!gl) {\n      return;\n    }\n\n    const samplerUniform = uniformSamplerLocations.get(this.shaderProgram);\n    if (texture) {\n      if (samplerUniform) {\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.uniform1i(samplerUniform, 0);\n      }\n    } else if (this.whiteTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, this.whiteTexture);\n    }\n\n    const numberOfVertices = vertices.length / 3;\n    gl.drawArrays(mode, 0, numberOfVertices);\n  }\n\n  private drawTexture(vertices: number[], texture: WebGLTexture, color?: number[]): void {\n    if (!this.gl) {\n      return;\n    }\n\n    this.drawRectangle(vertices, this.gl.TRIANGLE_FAN, color, texture);\n  }\n\n  private drawViewportAndChrome(): void {\n    if (!this.layerTree) {\n      return;\n    }\n\n    const viewport = this.layerTree.viewportSize();\n    if (!viewport) {\n      return;\n    }\n\n    const drawChrome = !Common.Settings.Settings.instance().moduleSetting('frame-viewer-hide-chrome-window').get() &&\n        this.chromeTextures.length >= 3 && this.chromeTextures.indexOf(undefined) < 0;\n    const z = (this.maxDepth + 1) * LayerSpacing;\n    const borderWidth = Math.ceil(ViewportBorderWidth * this.scale);\n    let vertices: number[] = [viewport.width, 0, z, viewport.width, viewport.height, z, 0, viewport.height, z, 0, 0, z];\n    if (!this.gl) {\n      return;\n    }\n\n    this.gl.lineWidth(borderWidth);\n    this.drawRectangle(vertices, drawChrome ? this.gl.LINE_STRIP : this.gl.LINE_LOOP, ViewportBorderColor);\n\n    if (!drawChrome) {\n      return;\n    }\n\n    const viewportSize = this.layerTree.viewportSize();\n    if (!viewportSize) {\n      return;\n    }\n\n    const borderAdjustment = ViewportBorderWidth / 2;\n    const viewportWidth = viewportSize.width + 2 * borderAdjustment;\n    if (this.chromeTextures[0] && this.chromeTextures[2]) {\n      const chromeTextureImage = imageForTexture.get(this.chromeTextures[0]) || {naturalHeight: 0, naturalWidth: 0};\n      const chromeHeight = chromeTextureImage.naturalHeight;\n\n      const middleTextureImage = imageForTexture.get(this.chromeTextures[2]) || {naturalHeight: 0, naturalWidth: 0};\n      const middleFragmentWidth = viewportWidth - chromeTextureImage.naturalWidth - middleTextureImage.naturalWidth;\n      let x = -borderAdjustment;\n      const y = -chromeHeight;\n      for (let i = 0; i < this.chromeTextures.length; ++i) {\n        const texture = this.chromeTextures[i];\n        if (!texture) {\n          continue;\n        }\n\n        const image = imageForTexture.get(texture);\n        if (!image) {\n          continue;\n        }\n        const width = i === ChromeTexture.MIDDLE ? middleFragmentWidth : image.naturalWidth;\n        if (width < 0 || x + width > viewportWidth) {\n          break;\n        }\n        vertices = [x, y, z, x + width, y, z, x + width, y + chromeHeight, z, x, y + chromeHeight, z];\n        this.drawTexture(vertices, this.chromeTextures[i] as WebGLTexture);\n        x += width;\n      }\n    }\n  }\n\n  private drawViewRect(rect: Rectangle): void {\n    if (!this.gl) {\n      return;\n    }\n\n    const vertices = rect.vertices;\n    if (rect.texture) {\n      this.drawTexture(vertices, rect.texture, rect.fillColor || undefined);\n    } else if (rect.fillColor) {\n      this.drawRectangle(vertices, this.gl.TRIANGLE_FAN, rect.fillColor);\n    }\n    this.gl.lineWidth(rect.lineWidth);\n    if (rect.borderColor) {\n      this.drawRectangle(vertices, this.gl.LINE_LOOP, rect.borderColor);\n    }\n  }\n\n  update(): void {\n    if (!this.isShowing()) {\n      this.needsUpdate = true;\n      return;\n    }\n    // Debounce into the next frame (double rAF).\n    // Without this the GPU work can pile up without any backpressure.\n    // A single rAF might be fine, but the GPU work here is so heavy, we prefer\n    // the extra breathing room over lower latency\n    if (!this.updateScheduled) {\n      this.updateScheduled = true;\n      requestAnimationFrame(() => requestAnimationFrame(() => {\n                              this.updateScheduled = false;\n                              this.innerUpdate();\n                            }));\n    }\n  }\n\n  private innerUpdate(): void {\n    if (!this.layerTree?.root()) {\n      this.failBanner.show(this.contentElement);\n      return;\n    }\n    const gl = this.initGLIfNecessary();\n    if (!gl) {\n      this.failBanner.detach();\n      this.failBanner = this.webglDisabledBanner();\n      this.failBanner.show(this.contentElement);\n      return;\n    }\n    this.failBanner.detach();\n    const viewportWidth = this.canvasElement.width;\n    const viewportHeight = this.canvasElement.height;\n\n    this.calculateDepthsAndVisibility();\n    this.calculateRects();\n    this.updateTransformAndConstraints();\n\n    gl.viewport(0, 0, viewportWidth, viewportHeight);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    this.rects.forEach(this.drawViewRect.bind(this));\n    this.drawViewportAndChrome();\n  }\n\n  private webglDisabledBanner(): UI.EmptyWidget.EmptyWidget {\n    const emptyWidget = new UI.EmptyWidget.EmptyWidget(\n        i18nString(UIStrings.cantDisplayLayers), i18nString(UIStrings.webglSupportIsDisabledInYour));\n    emptyWidget.contentElement.appendChild(i18n.i18n.getFormatLocalizedString(\n        str_, UIStrings.checkSForPossibleReasons,\n        {PH1: UI.XLink.XLink.create('about:gpu', undefined, undefined, undefined, 'about-gpu')}));\n    return emptyWidget;\n  }\n\n  private selectionFromEventPoint(event: Event): Selection|null {\n    const mouseEvent = event as MouseEvent;\n    if (!this.layerTree) {\n      return null;\n    }\n    let closestIntersectionPoint = Infinity;\n    let closestObject: Selection|null = null;\n    const projectionMatrix =\n        new WebKitCSSMatrix().scale(1, -1, -1).translate(-1, -1, 0).multiply(this.projectionMatrix);\n    const x0 = (mouseEvent.clientX - this.canvasElement.getBoundingClientRect().left) * window.devicePixelRatio;\n    const y0 = -(mouseEvent.clientY - this.canvasElement.getBoundingClientRect().top) * window.devicePixelRatio;\n\n    function checkIntersection(rect: Rectangle): void {\n      if (!rect.relatedObject) {\n        return;\n      }\n      const t = rect.intersectWithLine(projectionMatrix, x0, y0);\n      if (t && t < closestIntersectionPoint) {\n        closestIntersectionPoint = t;\n        closestObject = rect.relatedObject;\n      }\n    }\n\n    this.rects.forEach(checkIntersection);\n    return closestObject;\n  }\n\n  private createVisibilitySetting(\n      caption: Common.UIString.LocalizedString, name: string, value: boolean,\n      toolbar: UI.Toolbar.Toolbar): Common.Settings.Setting<boolean> {\n    const setting = Common.Settings.Settings.instance().createSetting(name, value);\n    setting.setTitle(caption);\n    setting.addChangeListener(this.update, this);\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(setting));\n    return setting;\n  }\n\n  private initToolbar(): void {\n    this.panelToolbar = this.transformController.toolbar();\n    this.contentElement.appendChild(this.panelToolbar);\n    this.showPaintsSetting = this.createVisibilitySetting(\n        i18nString(UIStrings.paints), 'frame-viewer-show-paints', false, this.panelToolbar);\n    this.showSlowScrollRectsSetting = this.createVisibilitySetting(\n        i18nString(UIStrings.slowScrollRects), 'frame-viewer-show-slow-scroll-rects', true, this.panelToolbar);\n    this.showPaintsSetting.addChangeListener(this.updatePaints, this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('frame-viewer-hide-chrome-window')\n        .addChangeListener(this.update, this);\n  }\n\n  private onContextMenu(event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.resetView), () => this.transformController.resetAndNotify(), {\n          jslogContext: 'layers.3d-center',\n        });\n    const selection = this.selectionFromEventPoint(event);\n    if (selection && selection.type() === Type.SNAPSHOT) {\n      contextMenu.defaultSection().appendItem(\n          i18nString(UIStrings.showPaintProfiler),\n          () => this.dispatchEventToListeners(Events.PAINT_PROFILER_REQUESTED, selection), {\n            jslogContext: 'layers.paint-profiler',\n          });\n    }\n    this.layerViewHost.showContextMenu(contextMenu, selection);\n  }\n\n  private onMouseMove(event: Event): void {\n    const mouseEvent = event as MouseEvent;\n    if (mouseEvent.which) {\n      return;\n    }\n    this.layerViewHost.hoverObject(this.selectionFromEventPoint(event));\n  }\n\n  private onMouseDown(event: Event): void {\n    const mouseEvent = event as MouseEvent;\n    this.mouseDownX = mouseEvent.clientX;\n    this.mouseDownY = mouseEvent.clientY;\n  }\n\n  private onMouseUp(event: Event): void {\n    const mouseEvent = event as MouseEvent;\n    const maxDistanceInPixels = 6;\n    if (this.mouseDownX && Math.abs(mouseEvent.clientX - this.mouseDownX) < maxDistanceInPixels &&\n        Math.abs(mouseEvent.clientY - (this.mouseDownY || 0)) < maxDistanceInPixels) {\n      this.canvasElement.focus();\n      this.layerViewHost.selectObject(this.selectionFromEventPoint(event));\n    }\n    delete this.mouseDownX;\n    delete this.mouseDownY;\n  }\n\n  private onDoubleClick(event: Event): void {\n    const selection = this.selectionFromEventPoint(event);\n    if (selection && (selection.type() === Type.SNAPSHOT || selection.layer())) {\n      this.dispatchEventToListeners(Events.PAINT_PROFILER_REQUESTED, selection);\n    }\n    event.stopPropagation();\n  }\n\n  private updatePaints(): void {\n    if (this.showPaints()) {\n      this.textureManager.setLayerTree(this.layerTree);\n      this.textureManager.forceUpdate();\n    } else {\n      this.textureManager.reset();\n    }\n    this.update();\n  }\n\n  private showPaints(): boolean {\n    return this.showPaintsSetting ? this.showPaintsSetting.get() : false;\n  }\n}\n\nexport enum OutlineType {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  Hovered = 'hovered',\n  Selected = 'selected',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport const enum Events {\n  PAINT_PROFILER_REQUESTED = 'PaintProfilerRequested',\n  SCALE_CHANGED = 'ScaleChanged',\n}\n\nexport interface EventTypes {\n  [Events.PAINT_PROFILER_REQUESTED]: Selection;\n  [Events.SCALE_CHANGED]: number;\n}\n\nexport const enum ChromeTexture {\n  LEFT = 0,\n  MIDDLE = 1,\n  RIGHT = 2,\n}\n\nexport const FragmentShader = '' +\n    'precision mediump float;\\n' +\n    'varying vec4 vColor;\\n' +\n    'varying vec2 vTextureCoord;\\n' +\n    'uniform sampler2D uSampler;\\n' +\n    'void main(void)\\n' +\n    '{\\n' +\n    '    gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t)) * vColor;\\n' +\n    '}';\n\nexport const VertexShader = '' +\n    'attribute vec3 aVertexPosition;\\n' +\n    'attribute vec2 aTextureCoord;\\n' +\n    'attribute vec4 aVertexColor;\\n' +\n    'uniform mat4 uPMatrix;\\n' +\n    'varying vec2 vTextureCoord;\\n' +\n    'varying vec4 vColor;\\n' +\n    'void main(void)\\n' +\n    '{\\n' +\n    'gl_Position = uPMatrix * vec4(aVertexPosition, 1.0);\\n' +\n    'vColor = aVertexColor;\\n' +\n    'vTextureCoord = aTextureCoord;\\n' +\n    '}';\n\nexport const HoveredBorderColor = [0, 0, 255, 1];\nexport const SelectedBorderColor = [0, 255, 0, 1];\nexport const BorderColor = [0, 0, 0, 1];\nexport const ViewportBorderColor = [160, 160, 160, 1];\nexport const ScrollRectBackgroundColor = [178, 100, 100, 0.6];\nexport const HoveredImageMaskColor = [200, 200, 255, 1];\nexport const BorderWidth = 1;\nexport const SelectedBorderWidth = 2;\nexport const ViewportBorderWidth = 3;\n\nexport const LayerSpacing = 20;\nexport const ScrollRectSpacing = 4;\n\nexport class LayerTextureManager {\n  private readonly textureUpdatedCallback: () => void;\n  private readonly throttler: Common.Throttler.Throttler;\n  private scale: number;\n  private active: boolean;\n  private queue!: SDK.LayerTreeBase.Layer[];\n  private tilesByLayer!: Map<SDK.LayerTreeBase.Layer, Tile[]>;\n  private gl?: WebGLRenderingContext;\n  constructor(textureUpdatedCallback: () => void) {\n    this.textureUpdatedCallback = textureUpdatedCallback;\n    this.throttler = new Common.Throttler.Throttler(0);\n    this.scale = 0;\n    this.active = false;\n    this.reset();\n  }\n\n  static createTextureForImage(gl: WebGLRenderingContext|null, image: HTMLImageElement): WebGLTexture {\n    if (!gl) {\n      throw new Error('WebGLRenderingContext not provided');\n    }\n    const texture = gl.createTexture();\n    if (!texture) {\n      throw new Error('Unable to create texture');\n    }\n\n    imageForTexture.set(texture, image);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return texture;\n  }\n\n  reset(): void {\n    if (this.tilesByLayer) {\n      this.setLayerTree(null);\n    }\n\n    this.tilesByLayer = new Map();\n    this.queue = [];\n  }\n\n  setContext(glContext: WebGLRenderingContext): void {\n    this.gl = glContext;\n    if (this.scale) {\n      this.updateTextures();\n    }\n  }\n\n  suspend(): void {\n    this.active = false;\n  }\n\n  resume(): void {\n    this.active = true;\n    if (this.queue.length) {\n      void this.update();\n    }\n  }\n\n  setLayerTree(layerTree: SDK.LayerTreeBase.LayerTreeBase|null): void {\n    const newLayers = new Set<SDK.LayerTreeBase.Layer>();\n    const oldLayers = Array.from(this.tilesByLayer.keys());\n    if (layerTree) {\n      layerTree.forEachLayer(layer => {\n        if (!layer.drawsContent()) {\n          return;\n        }\n        newLayers.add(layer);\n        if (!this.tilesByLayer.has(layer)) {\n          this.tilesByLayer.set(layer, []);\n          this.layerNeedsUpdate(layer);\n        }\n      });\n    }\n    if (!oldLayers.length) {\n      this.forceUpdate();\n    }\n    for (const layer of oldLayers) {\n      if (newLayers.has(layer)) {\n        continue;\n      }\n      const tiles = this.tilesByLayer.get(layer);\n      if (tiles) {\n        tiles.forEach(tile => tile.dispose());\n      }\n      this.tilesByLayer.delete(layer);\n    }\n  }\n\n  private setSnapshotsForLayer(layer: SDK.LayerTreeBase.Layer, snapshots: SDK.PaintProfiler.SnapshotWithRect[]):\n      Promise<void> {\n    const oldSnapshotsToTiles = new Map((this.tilesByLayer.get(layer) || []).map(tile => [tile.snapshot, tile]));\n    const newTiles = [];\n    const reusedTiles = [];\n    for (const snapshot of snapshots) {\n      const oldTile = oldSnapshotsToTiles.get(snapshot.snapshot);\n      if (oldTile) {\n        reusedTiles.push(oldTile);\n        oldSnapshotsToTiles.delete(snapshot.snapshot);\n      } else {\n        newTiles.push(new Tile(snapshot));\n      }\n    }\n    this.tilesByLayer.set(layer, reusedTiles.concat(newTiles));\n    for (const tile of oldSnapshotsToTiles.values()) {\n      tile.dispose();\n    }\n    const gl = this.gl;\n    if (!gl || !this.scale) {\n      return Promise.resolve();\n    }\n    return Promise.all(newTiles.map(tile => tile.update(gl, this.scale))).then(this.textureUpdatedCallback);\n  }\n\n  setScale(scale: number): void {\n    if (this.scale && this.scale >= scale) {\n      return;\n    }\n    this.scale = scale;\n    this.updateTextures();\n  }\n\n  tilesForLayer(layer: SDK.LayerTreeBase.Layer): Tile[] {\n    return this.tilesByLayer.get(layer) || [];\n  }\n\n  layerNeedsUpdate(layer: SDK.LayerTreeBase.Layer): void {\n    if (this.queue.indexOf(layer) < 0) {\n      this.queue.push(layer);\n    }\n    if (this.active) {\n      void this.throttler.schedule(this.update.bind(this));\n    }\n  }\n\n  forceUpdate(): void {\n    this.queue.forEach(layer => this.updateLayer(layer));\n    this.queue = [];\n    void this.update();\n  }\n\n  private update(): Promise<void> {\n    const layer = this.queue.shift();\n    if (!layer) {\n      return Promise.resolve();\n    }\n    if (this.queue.length) {\n      void this.throttler.schedule(this.update.bind(this));\n    }\n    return this.updateLayer(layer);\n  }\n\n  private updateLayer(layer: SDK.LayerTreeBase.Layer): Promise<void> {\n    return Promise.all(layer.snapshots())\n        .then(snapshots => this.setSnapshotsForLayer(layer, snapshots.filter(snapshot => snapshot !== null)));\n  }\n\n  private updateTextures(): void {\n    if (!this.gl) {\n      return;\n    }\n    if (!this.scale) {\n      return;\n    }\n\n    for (const tiles of this.tilesByLayer.values()) {\n      for (const tile of tiles) {\n        const promise = tile.updateScale(this.gl, this.scale);\n        if (promise) {\n          void promise.then(this.textureUpdatedCallback);\n        }\n      }\n    }\n  }\n}\n\nexport class Rectangle {\n  relatedObject: Selection|null;\n  lineWidth: number;\n  borderColor: number[]|null;\n  fillColor: number[]|null;\n  texture: WebGLTexture|null;\n  vertices!: number[];\n  constructor(relatedObject: Selection|null) {\n    this.relatedObject = relatedObject;\n    this.lineWidth = 1;\n    this.borderColor = null;\n    this.fillColor = null;\n    this.texture = null;\n  }\n\n  setVertices(quad: number[], z: number): void {\n    this.vertices = [quad[0], quad[1], z, quad[2], quad[3], z, quad[4], quad[5], z, quad[6], quad[7], z];\n  }\n\n  /**\n   * Finds coordinates of point on layer quad, having offsets (ratioX * width) and (ratioY * height)\n   * from the left corner of the initial layer rect, where width and heigth are layer bounds.\n   */\n  private calculatePointOnQuad(quad: number[], ratioX: number, ratioY: number): number[] {\n    const x0 = quad[0];\n    const y0 = quad[1];\n    const x1 = quad[2];\n    const y1 = quad[3];\n    const x2 = quad[4];\n    const y2 = quad[5];\n    const x3 = quad[6];\n    const y3 = quad[7];\n    // Point on the first quad side clockwise\n    const firstSidePointX = x0 + ratioX * (x1 - x0);\n    const firstSidePointY = y0 + ratioX * (y1 - y0);\n    // Point on the third quad side clockwise\n    const thirdSidePointX = x3 + ratioX * (x2 - x3);\n    const thirdSidePointY = y3 + ratioX * (y2 - y3);\n    const x = firstSidePointX + ratioY * (thirdSidePointX - firstSidePointX);\n    const y = firstSidePointY + ratioY * (thirdSidePointY - firstSidePointY);\n    return [x, y];\n  }\n\n  calculateVerticesFromRect(layer: SDK.LayerTreeBase.Layer, rect: Protocol.DOM.Rect, z: number): void {\n    const quad = layer.quad();\n    const rx1 = rect.x / layer.width();\n    const rx2 = (rect.x + rect.width) / layer.width();\n    const ry1 = rect.y / layer.height();\n    const ry2 = (rect.y + rect.height) / layer.height();\n    const rectQuad = this.calculatePointOnQuad(quad, rx1, ry1)\n                         .concat(this.calculatePointOnQuad(quad, rx2, ry1))\n                         .concat(this.calculatePointOnQuad(quad, rx2, ry2))\n                         .concat(this.calculatePointOnQuad(quad, rx1, ry2));\n    this.setVertices(rectQuad, z);\n  }\n\n  /**\n   * Intersects quad with given transform matrix and line l(t) = (x0, y0, t)\n   */\n  intersectWithLine(matrix: DOMMatrix, x0: number, y0: number): number|undefined {\n    let i;\n    // Vertices of the quad with transform matrix applied\n    const points = [];\n    for (i = 0; i < 4; ++i) {\n      points[i] = UI.Geometry.multiplyVectorByMatrixAndNormalize(\n          new UI.Geometry.Vector(this.vertices[i * 3], this.vertices[i * 3 + 1], this.vertices[i * 3 + 2]), matrix);\n    }\n    // Calculating quad plane normal\n    const normal = UI.Geometry.crossProduct(\n        UI.Geometry.subtract(points[1], points[0]), UI.Geometry.subtract(points[2], points[1]));\n    // General form of the equation of the quad plane: A * x + B * y + C * z + D = 0\n    const A = normal.x;\n    const B = normal.y;\n    const C = normal.z;\n    const D = -(A * points[0].x + B * points[0].y + C * points[0].z);\n    // Finding t from the equation\n    const t = -(D + A * x0 + B * y0) / C;\n    // Point of the intersection\n    const pt = new UI.Geometry.Vector(x0, y0, t);\n    // Vectors from the intersection point to vertices of the quad\n    const tVects = points.map(UI.Geometry.subtract.bind(null, pt));\n    // Intersection point lies inside of the polygon if scalar products of normal of the plane and\n    // cross products of successive tVects are all nonstrictly above or all nonstrictly below zero\n    for (i = 0; i < tVects.length; ++i) {\n      const product =\n          UI.Geometry.scalarProduct(normal, UI.Geometry.crossProduct(tVects[i], tVects[(i + 1) % tVects.length]));\n      if (product < 0) {\n        return undefined;\n      }\n    }\n    return t;\n  }\n}\n\nexport class Tile {\n  snapshot: SDK.PaintProfiler.PaintProfilerSnapshot;\n  rect: Protocol.DOM.Rect;\n  scale: number;\n  texture: WebGLTexture|null;\n  private gl!: WebGLRenderingContext;\n  constructor(snapshotWithRect: SDK.PaintProfiler.SnapshotWithRect) {\n    this.snapshot = snapshotWithRect.snapshot;\n    this.rect = snapshotWithRect.rect;\n    this.scale = 0;\n    this.texture = null;\n  }\n\n  dispose(): void {\n    this.snapshot.release();\n    if (this.texture) {\n      this.gl.deleteTexture(this.texture);\n      this.texture = null;\n    }\n  }\n\n  updateScale(glContext: WebGLRenderingContext, scale: number): Promise<void>|null {\n    if (this.texture && this.scale >= scale) {\n      return null;\n    }\n    return this.update(glContext, scale);\n  }\n\n  async update(glContext: WebGLRenderingContext, scale: number): Promise<void> {\n    this.gl = glContext;\n    this.scale = scale;\n    const imageURL = await this.snapshot.replay(scale);\n    const image = imageURL ? await UI.UIUtils.loadImage(imageURL) : null;\n    this.texture = image ? LayerTextureManager.createTextureForImage(glContext, image) : null;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.layers-3d-view {\n  overflow: hidden;\n  user-select: none;\n\n  > .empty-view-scroller{\n    inset: 0;\n    position: absolute;\n    background-color: var(--sys-color-cdt-base-container);\n  }\n}\n\ndevtools-toolbar {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\ncanvas {\n  flex: 1 1;\n}\n\n.layers-3d-view > canvas:focus-visible {\n  outline: auto 5px -webkit-focus-ring-color;\n}\n\n/*# sourceURL=${import.meta.resolve('./layers3DView.css')} */`;", "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nconst UIStrings = {\n  /**\n   *@description Tooltip text that appears when hovering over largeicon pan button in Transform Controller of the Layers panel\n   */\n  panModeX: 'Pan mode (X)',\n  /**\n   *@description Tooltip text that appears when hovering over largeicon rotate button in Transform Controller of the Layers panel\n   */\n  rotateModeV: 'Rotate mode (V)',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon center button in the Transform Controller of the Layers panel\n   */\n  resetTransform: 'Reset transform (0)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/TransformController.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TransformController extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private mode!: Modes;\n  private scaleInternal: number;\n  private offsetXInternal: number;\n  private offsetYInternal: number;\n  private rotateXInternal: number;\n  private rotateYInternal: number;\n  private oldRotateX: number;\n  private oldRotateY: number;\n  private originX: number;\n  private originY: number;\n  element: HTMLElement;\n  private minScale: number;\n  private maxScale: number;\n  private readonly controlPanelToolbar: UI.Toolbar.Toolbar;\n  private readonly modeButtons: Record<string, UI.Toolbar.ToolbarToggle>;\n  /**\n   * @param element The HTML element to apply transformations to.\n   * @param disableRotate Optional. If true, pan and rotate will be disabled. Defaults to false.\n   * @param preventDefaultOnMousedown Optional. If true, mousedown events will be prevented from their default behavior (including focus). Defaults to true.\n   */\n  constructor(element: HTMLElement, disableRotate?: boolean, preventDefaultOnMouseDown = true) {\n    super();\n    this.scaleInternal = 1;\n    this.offsetXInternal = 0;\n    this.offsetYInternal = 0;\n    this.rotateXInternal = 0;\n    this.rotateYInternal = 0;\n    this.oldRotateX = 0;\n    this.oldRotateY = 0;\n    this.originX = 0;\n    this.originY = 0;\n    this.element = element;\n    this.registerShortcuts();\n    UI.UIUtils.installDragHandle(\n        element, this.onDragStart.bind(this), this.onDrag.bind(this), this.onDragEnd.bind(this), 'move', null, 0,\n        preventDefaultOnMouseDown);\n    element.addEventListener('wheel', this.onMouseWheel.bind(this), false);\n    this.minScale = 0;\n    this.maxScale = Infinity;\n\n    this.controlPanelToolbar = document.createElement('devtools-toolbar');\n    this.controlPanelToolbar.classList.add('transform-control-panel');\n    this.controlPanelToolbar.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n\n    this.modeButtons = {};\n    if (!disableRotate) {\n      const panModeButton = new UI.Toolbar.ToolbarToggle(\n          i18nString(UIStrings.panModeX), '3d-pan', undefined, 'layers.3d-pan', /* toggleOnClick */ false);\n      panModeButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.setMode.bind(this, Modes.PAN));\n      this.modeButtons[Modes.PAN] = panModeButton;\n      this.controlPanelToolbar.appendToolbarItem(panModeButton);\n      const rotateModeButton = new UI.Toolbar.ToolbarToggle(\n          i18nString(UIStrings.rotateModeV), '3d-rotate', undefined, 'layers.3d-rotate', /* toggleOnClick */ false);\n      rotateModeButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.setMode.bind(this, Modes.ROTATE));\n      this.modeButtons[Modes.ROTATE] = rotateModeButton;\n      this.controlPanelToolbar.appendToolbarItem(rotateModeButton);\n    }\n    this.setMode(Modes.PAN);\n\n    const resetButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.resetTransform), '3d-center', undefined, 'layers.3d-center');\n    resetButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.resetAndNotify.bind(this, undefined));\n    this.controlPanelToolbar.appendToolbarItem(resetButton);\n\n    this.reset();\n  }\n\n  toolbar(): UI.Toolbar.Toolbar {\n    return this.controlPanelToolbar;\n  }\n\n  private registerShortcuts(): void {\n    const zoomFactor = 1.1;\n    UI.ShortcutRegistry.ShortcutRegistry.instance().addShortcutListener(this.element, {\n      'layers.reset-view': async () => {\n        this.resetAndNotify();\n        return true;\n      },\n      'layers.pan-mode': async () => {\n        this.setMode(Modes.PAN);\n        return true;\n      },\n      'layers.rotate-mode': async () => {\n        this.setMode(Modes.ROTATE);\n        return true;\n      },\n      'layers.zoom-in': this.onKeyboardZoom.bind(this, zoomFactor),\n      'layers.zoom-out': this.onKeyboardZoom.bind(this, 1 / zoomFactor),\n      'layers.up': this.onKeyboardPanOrRotate.bind(this, 0, -1),\n      'layers.down': this.onKeyboardPanOrRotate.bind(this, 0, 1),\n      'layers.left': this.onKeyboardPanOrRotate.bind(this, -1, 0),\n      'layers.right': this.onKeyboardPanOrRotate.bind(this, 1, 0),\n    });\n  }\n\n  private postChangeEvent(): void {\n    this.dispatchEventToListeners(Events.TRANSFORM_CHANGED);\n  }\n\n  private reset(): void {\n    this.scaleInternal = 1;\n    this.offsetXInternal = 0;\n    this.offsetYInternal = 0;\n    this.rotateXInternal = 0;\n    this.rotateYInternal = 0;\n  }\n\n  private setMode(mode: Modes): void {\n    if (this.mode === mode) {\n      return;\n    }\n    this.mode = mode;\n    this.updateModeButtons();\n  }\n\n  private updateModeButtons(): void {\n    for (const mode in this.modeButtons) {\n      this.modeButtons[mode].setToggled(mode === this.mode);\n    }\n  }\n\n  resetAndNotify(event?: Event): void {\n    this.reset();\n    this.postChangeEvent();\n    if (event) {\n      event.preventDefault();\n    }\n    this.element.focus();\n  }\n\n  setScaleConstraints(minScale: number, maxScale: number): void {\n    this.minScale = minScale;\n    this.maxScale = maxScale;\n    this.scaleInternal = Platform.NumberUtilities.clamp(this.scaleInternal, minScale, maxScale);\n  }\n\n  clampOffsets(minX: number, maxX: number, minY: number, maxY: number): void {\n    this.offsetXInternal = Platform.NumberUtilities.clamp(this.offsetXInternal, minX, maxX);\n    this.offsetYInternal = Platform.NumberUtilities.clamp(this.offsetYInternal, minY, maxY);\n  }\n\n  scale(): number {\n    return this.scaleInternal;\n  }\n\n  offsetX(): number {\n    return this.offsetXInternal;\n  }\n\n  offsetY(): number {\n    return this.offsetYInternal;\n  }\n\n  rotateX(): number {\n    return this.rotateXInternal;\n  }\n\n  rotateY(): number {\n    return this.rotateYInternal;\n  }\n\n  private onScale(scaleFactor: number, x: number, y: number): void {\n    scaleFactor = Platform.NumberUtilities.clamp(this.scaleInternal * scaleFactor, this.minScale, this.maxScale) /\n        this.scaleInternal;\n    this.scaleInternal *= scaleFactor;\n    this.offsetXInternal -= (x - this.offsetXInternal) * (scaleFactor - 1);\n    this.offsetYInternal -= (y - this.offsetYInternal) * (scaleFactor - 1);\n    this.postChangeEvent();\n  }\n\n  private onPan(offsetX: number, offsetY: number): void {\n    this.offsetXInternal += offsetX;\n    this.offsetYInternal += offsetY;\n    this.postChangeEvent();\n  }\n\n  private onRotate(rotateX: number, rotateY: number): void {\n    this.rotateXInternal = rotateX;\n    this.rotateYInternal = rotateY;\n    this.postChangeEvent();\n  }\n\n  private async onKeyboardZoom(zoomFactor: number): Promise<boolean> {\n    this.onScale(zoomFactor, this.element.clientWidth / 2, this.element.clientHeight / 2);\n    return true;\n  }\n\n  private async onKeyboardPanOrRotate(xMultiplier: number, yMultiplier: number): Promise<boolean> {\n    const panStepInPixels = 6;\n    const rotateStepInDegrees = 5;\n\n    if (this.mode === Modes.ROTATE) {\n      // Sic! onRotate treats X and Y as \"rotate around X\" and \"rotate around Y\", so swap X/Y multiplers.\n      this.onRotate(\n          this.rotateXInternal + yMultiplier * rotateStepInDegrees,\n          this.rotateYInternal + xMultiplier * rotateStepInDegrees);\n    } else {\n      this.onPan(xMultiplier * panStepInPixels, yMultiplier * panStepInPixels);\n    }\n    return true;\n  }\n\n  private onMouseWheel(event: Event): void {\n    /** @const */\n    const zoomFactor = 1.1;\n    /** @const */\n    const wheelZoomSpeed = 1 / 53;\n    const mouseEvent = event as WheelEvent;\n    const scaleFactor = Math.pow(zoomFactor, -mouseEvent.deltaY * wheelZoomSpeed);\n    this.onScale(\n        scaleFactor, mouseEvent.clientX - this.element.getBoundingClientRect().left,\n        mouseEvent.clientY - this.element.getBoundingClientRect().top);\n  }\n\n  private onDrag(event: Event): void {\n    const {clientX, clientY} = event as MouseEvent;\n    if (this.mode === Modes.ROTATE) {\n      this.onRotate(\n          this.oldRotateX + (this.originY - clientY) / this.element.clientHeight * 180,\n          this.oldRotateY - (this.originX - clientX) / this.element.clientWidth * 180);\n    } else {\n      this.onPan(clientX - this.originX, clientY - this.originY);\n      this.originX = clientX;\n      this.originY = clientY;\n    }\n  }\n\n  private onDragStart(event: MouseEvent): boolean {\n    this.element.focus();\n    this.originX = event.clientX;\n    this.originY = event.clientY;\n    this.oldRotateX = this.rotateXInternal;\n    this.oldRotateY = this.rotateYInternal;\n    return true;\n  }\n\n  private onDragEnd(): void {\n    this.originX = 0;\n    this.originY = 0;\n    this.oldRotateX = 0;\n    this.oldRotateY = 0;\n  }\n}\n\nexport const enum Events {\n  TRANSFORM_CHANGED = 'TransformChanged',\n}\n\nexport interface EventTypes {\n  [Events.TRANSFORM_CHANGED]: void;\n}\n\nexport const enum Modes {\n  PAN = 'Pan',\n  ROTATE = 'Rotate',\n}\n", "/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport paintProfilerStyles from './paintProfiler.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text to indicate the progress of a profile\n   */\n  profiling: 'Profiling…',\n  /**\n   *@description Text in Paint Profiler View of the Layers panel\n   */\n  shapes: 'Shapes',\n  /**\n   *@description Text in Paint Profiler View of the Layers panel\n   */\n  bitmap: 'Bitmap',\n  /**\n   *@description Generic label for any text\n   */\n  text: 'Text',\n  /**\n   *@description Text in Paint Profiler View of the Layers panel\n   */\n  misc: 'Misc',\n  /**\n   *@description ARIA label for a pie chart that shows the results of the paint profiler\n   */\n  profilingResults: 'Profiling results',\n  /**\n   *@description Label for command log tree in the Profiler tab\n   */\n  commandLog: 'Command Log',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/PaintProfilerView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet categories: Record<string, PaintProfilerCategory>|null = null;\n\nlet logItemCategoriesMap: Record<string, PaintProfilerCategory>|null = null;\n\nexport class PaintProfilerView extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.HBox>(\n    UI.Widget.HBox) {\n  private canvasContainer: HTMLElement;\n  private readonly progressBanner: HTMLElement;\n  private pieChart: PerfUI.PieChart.PieChart;\n  private readonly showImageCallback: (arg0?: string|undefined) => void;\n  private canvas: HTMLCanvasElement;\n  private context: CanvasRenderingContext2D;\n  private readonly selectionWindowInternal: PerfUI.OverviewGrid.Window;\n  private readonly innerBarWidth: number;\n  private minBarHeight: number;\n  private readonly barPaddingWidth: number;\n  private readonly outerBarWidth: number;\n  private pendingScale: number;\n  private scale: number;\n  private samplesPerBar: number;\n  private log: SDK.PaintProfiler.PaintProfilerLogItem[];\n  private snapshot?: SDK.PaintProfiler.PaintProfilerSnapshot|null;\n  private logCategories?: PaintProfilerCategory[];\n  private profiles?: Protocol.LayerTree.PaintProfile[]|null;\n  private updateImageTimer?: number;\n\n  constructor(showImageCallback: (arg0?: string|undefined) => void) {\n    super(true);\n    this.registerRequiredCSS(paintProfilerStyles);\n\n    this.contentElement.classList.add('paint-profiler-overview');\n    this.canvasContainer = this.contentElement.createChild('div', 'paint-profiler-canvas-container');\n    this.progressBanner = this.contentElement.createChild('div', 'empty-state hidden');\n    this.progressBanner.textContent = i18nString(UIStrings.profiling);\n    this.pieChart = new PerfUI.PieChart.PieChart();\n    this.populatePieChart(0, []);\n    this.pieChart.classList.add('paint-profiler-pie-chart');\n    this.contentElement.appendChild(this.pieChart);\n\n    this.showImageCallback = showImageCallback;\n    this.canvas = this.canvasContainer.createChild('canvas', 'fill');\n    this.context = this.canvas.getContext('2d') as CanvasRenderingContext2D;\n    this.selectionWindowInternal = new PerfUI.OverviewGrid.Window(this.canvasContainer);\n    this.selectionWindowInternal.addEventListener(\n        PerfUI.OverviewGrid.Events.WINDOW_CHANGED, this.onWindowChanged, this);\n\n    this.innerBarWidth = 4 * window.devicePixelRatio;\n    this.minBarHeight = window.devicePixelRatio;\n    this.barPaddingWidth = 2 * window.devicePixelRatio;\n    this.outerBarWidth = this.innerBarWidth + this.barPaddingWidth;\n    this.pendingScale = 1;\n    this.scale = this.pendingScale;\n    this.samplesPerBar = 0;\n    this.log = [];\n\n    this.reset();\n  }\n\n  static categories(): Record<string, PaintProfilerCategory> {\n    if (!categories) {\n      categories = {\n        shapes: new PaintProfilerCategory('shapes', i18nString(UIStrings.shapes), 'rgb(255, 161, 129)'),\n        bitmap: new PaintProfilerCategory('bitmap', i18nString(UIStrings.bitmap), 'rgb(136, 196, 255)'),\n        text: new PaintProfilerCategory('text', i18nString(UIStrings.text), 'rgb(180, 255, 137)'),\n        misc: new PaintProfilerCategory('misc', i18nString(UIStrings.misc), 'rgb(206, 160, 255)'),\n      };\n    }\n    return categories;\n  }\n\n  private static initLogItemCategories(): Record<string, PaintProfilerCategory> {\n    if (!logItemCategoriesMap) {\n      const categories = PaintProfilerView.categories();\n\n      const logItemCategories: Record<string, PaintProfilerCategory> = {};\n      logItemCategories['Clear'] = categories['misc'];\n      logItemCategories['DrawPaint'] = categories['misc'];\n      logItemCategories['DrawData'] = categories['misc'];\n      logItemCategories['SetMatrix'] = categories['misc'];\n      logItemCategories['PushCull'] = categories['misc'];\n      logItemCategories['PopCull'] = categories['misc'];\n      logItemCategories['Translate'] = categories['misc'];\n      logItemCategories['Scale'] = categories['misc'];\n      logItemCategories['Concat'] = categories['misc'];\n      logItemCategories['Restore'] = categories['misc'];\n      logItemCategories['SaveLayer'] = categories['misc'];\n      logItemCategories['Save'] = categories['misc'];\n      logItemCategories['BeginCommentGroup'] = categories['misc'];\n      logItemCategories['AddComment'] = categories['misc'];\n      logItemCategories['EndCommentGroup'] = categories['misc'];\n      logItemCategories['ClipRect'] = categories['misc'];\n      logItemCategories['ClipRRect'] = categories['misc'];\n      logItemCategories['ClipPath'] = categories['misc'];\n      logItemCategories['ClipRegion'] = categories['misc'];\n      logItemCategories['DrawPoints'] = categories['shapes'];\n      logItemCategories['DrawRect'] = categories['shapes'];\n      logItemCategories['DrawOval'] = categories['shapes'];\n      logItemCategories['DrawRRect'] = categories['shapes'];\n      logItemCategories['DrawPath'] = categories['shapes'];\n      logItemCategories['DrawVertices'] = categories['shapes'];\n      logItemCategories['DrawDRRect'] = categories['shapes'];\n      logItemCategories['DrawBitmap'] = categories['bitmap'];\n      logItemCategories['DrawBitmapRectToRect'] = categories['bitmap'];\n      logItemCategories['DrawBitmapMatrix'] = categories['bitmap'];\n      logItemCategories['DrawBitmapNine'] = categories['bitmap'];\n      logItemCategories['DrawSprite'] = categories['bitmap'];\n      logItemCategories['DrawPicture'] = categories['bitmap'];\n      logItemCategories['DrawText'] = categories['text'];\n      logItemCategories['DrawPosText'] = categories['text'];\n      logItemCategories['DrawPosTextH'] = categories['text'];\n      logItemCategories['DrawTextOnPath'] = categories['text'];\n\n      logItemCategoriesMap = logItemCategories;\n    }\n\n    return logItemCategoriesMap;\n  }\n\n  private static categoryForLogItem(logItem: SDK.PaintProfiler.PaintProfilerLogItem): PaintProfilerCategory {\n    const method = Platform.StringUtilities.toTitleCase(logItem.method);\n\n    const logItemCategories = PaintProfilerView.initLogItemCategories();\n    let result: PaintProfilerCategory = logItemCategories[method];\n    if (!result) {\n      result = PaintProfilerView.categories()['misc'];\n      logItemCategories[method] = result;\n    }\n    return result;\n  }\n\n  override onResize(): void {\n    this.update();\n  }\n\n  async setSnapshotAndLog(\n      snapshot: SDK.PaintProfiler.PaintProfilerSnapshot|null, log: SDK.PaintProfiler.PaintProfilerLogItem[],\n      clipRect: Protocol.DOM.Rect|null): Promise<void> {\n    this.reset();\n    this.snapshot = snapshot;\n    if (this.snapshot) {\n      this.snapshot.addReference();\n    }\n    this.log = log;\n    this.logCategories = this.log.map(PaintProfilerView.categoryForLogItem);\n\n    if (!snapshot) {\n      this.update();\n      this.populatePieChart(0, []);\n      this.selectionWindowInternal.setResizeEnabled(false);\n      return;\n    }\n\n    this.selectionWindowInternal.setResizeEnabled(true);\n    this.progressBanner.classList.remove('hidden');\n    this.updateImage();\n\n    const profiles = await snapshot.profile(clipRect);\n\n    this.progressBanner.classList.add('hidden');\n    this.profiles = profiles;\n    this.update();\n    this.updatePieChart();\n  }\n\n  setScale(scale: number): void {\n    const needsUpdate = scale > this.scale;\n    const predictiveGrowthFactor = 2;\n    this.pendingScale = Math.min(1, scale * predictiveGrowthFactor);\n    if (needsUpdate && this.snapshot) {\n      this.updateImage();\n    }\n  }\n\n  update(): void {\n    this.canvas.width = this.canvasContainer.clientWidth * window.devicePixelRatio;\n    this.canvas.height = this.canvasContainer.clientHeight * window.devicePixelRatio;\n    this.samplesPerBar = 0;\n    if (!this.profiles?.length || !this.logCategories) {\n      return;\n    }\n\n    const maxBars = Math.floor((this.canvas.width - 2 * this.barPaddingWidth) / this.outerBarWidth);\n    const sampleCount = this.log.length;\n    this.samplesPerBar = Math.ceil(sampleCount / maxBars);\n\n    let maxBarTime = 0;\n    const barTimes = [];\n    const barHeightByCategory = [];\n    let heightByCategory: Record<string, number> = {};\n    for (let i = 0, lastBarIndex = 0, lastBarTime = 0; i < sampleCount;) {\n      let categoryName = (this.logCategories[i]?.name) || 'misc';\n      const sampleIndex = this.log[i].commandIndex;\n      for (let row = 0; row < this.profiles.length; row++) {\n        const sample = this.profiles[row][sampleIndex];\n        lastBarTime += sample;\n        heightByCategory[categoryName] = (heightByCategory[categoryName] || 0) + sample;\n      }\n      ++i;\n      if (i - lastBarIndex === this.samplesPerBar || i === sampleCount) {\n        // Normalize by total number of samples accumulated.\n        const factor = this.profiles.length * (i - lastBarIndex);\n        lastBarTime /= factor;\n        for (categoryName in heightByCategory) {\n          heightByCategory[categoryName] /= factor;\n        }\n\n        barTimes.push(lastBarTime);\n        barHeightByCategory.push(heightByCategory);\n\n        if (lastBarTime > maxBarTime) {\n          maxBarTime = lastBarTime;\n        }\n        lastBarTime = 0;\n        heightByCategory = {};\n        lastBarIndex = i;\n      }\n    }\n\n    const paddingHeight = 4 * window.devicePixelRatio;\n    const scale = (this.canvas.height - paddingHeight - this.minBarHeight) / maxBarTime;\n    for (let i = 0; i < barTimes.length; ++i) {\n      for (const categoryName in barHeightByCategory[i]) {\n        barHeightByCategory[i][categoryName] *= (barTimes[i] * scale + this.minBarHeight) / barTimes[i];\n      }\n      this.renderBar(i, barHeightByCategory[i]);\n    }\n  }\n\n  private renderBar(index: number, heightByCategory: Record<string, number>): void {\n    const categories = PaintProfilerView.categories();\n    let currentHeight = 0;\n    const x = this.barPaddingWidth + index * this.outerBarWidth;\n    for (const categoryName in categories) {\n      if (!heightByCategory[categoryName]) {\n        continue;\n      }\n      currentHeight += heightByCategory[categoryName];\n      const y = this.canvas.height - currentHeight;\n      this.context.fillStyle = categories[categoryName].color;\n      this.context.fillRect(x, y, this.innerBarWidth, heightByCategory[categoryName]);\n    }\n  }\n\n  private onWindowChanged(): void {\n    this.dispatchEventToListeners(Events.WINDOW_CHANGED);\n    this.updatePieChart();\n    if (this.updateImageTimer) {\n      return;\n    }\n    this.updateImageTimer = window.setTimeout(this.updateImage.bind(this), 100);\n  }\n\n  private updatePieChart(): void {\n    const {total, slices} = this.calculatePieChart();\n    this.populatePieChart(total, slices);\n  }\n\n  private calculatePieChart(): {total: number, slices: Array<{value: number, color: string, title: string}>} {\n    const window = this.selectionWindow();\n    if (!this.profiles?.length || !window) {\n      return {total: 0, slices: []};\n    }\n    let totalTime = 0;\n    const timeByCategory: Record<string, number> = {};\n    for (let i = window.left; i < window.right; ++i) {\n      const logEntry = this.log[i];\n      const category = PaintProfilerView.categoryForLogItem(logEntry);\n      timeByCategory[category.color] = timeByCategory[category.color] || 0;\n      for (let j = 0; j < this.profiles.length; ++j) {\n        const time = this.profiles[j][logEntry.commandIndex];\n        totalTime += time;\n        timeByCategory[category.color] += time;\n      }\n    }\n    const slices: PerfUI.PieChart.Slice[] = [];\n    for (const color in timeByCategory) {\n      slices.push({value: timeByCategory[color] / this.profiles.length, color, title: ''});\n    }\n    return {total: totalTime / this.profiles.length, slices};\n  }\n\n  private populatePieChart(total: number, slices: PerfUI.PieChart.Slice[]): void {\n    this.pieChart.data = {\n      chartName: i18nString(UIStrings.profilingResults),\n      size: 55,\n      formatter: this.formatPieChartTime.bind(this),\n      showLegend: false,\n      total,\n      slices,\n    };\n  }\n\n  private formatPieChartTime(value: number): string {\n    return i18n.TimeUtilities.millisToString(value * 1000, true);\n  }\n\n  selectionWindow(): {left: number, right: number}|null {\n    if (!this.log) {\n      return null;\n    }\n\n    const screenLeft = (this.selectionWindowInternal.windowLeftRatio || 0) * this.canvas.width;\n    const screenRight = (this.selectionWindowInternal.windowRightRatio || 0) * this.canvas.width;\n    const barLeft = Math.floor(screenLeft / this.outerBarWidth);\n    const barRight = Math.floor((screenRight + this.innerBarWidth - this.barPaddingWidth / 2) / this.outerBarWidth);\n    const stepLeft = Platform.NumberUtilities.clamp(barLeft * this.samplesPerBar, 0, this.log.length - 1);\n    const stepRight = Platform.NumberUtilities.clamp(barRight * this.samplesPerBar, 0, this.log.length);\n\n    return {left: stepLeft, right: stepRight};\n  }\n\n  private updateImage(): void {\n    delete this.updateImageTimer;\n    let left;\n    let right;\n    const window = this.selectionWindow();\n    if (this.profiles?.length && window) {\n      left = this.log[window.left].commandIndex;\n      right = this.log[window.right - 1].commandIndex;\n    }\n    const scale = this.pendingScale;\n    if (!this.snapshot) {\n      return;\n    }\n    void this.snapshot.replay(scale, left, right).then(image => {\n      if (!image) {\n        return;\n      }\n      this.scale = scale;\n      this.showImageCallback(image);\n    });\n  }\n\n  private reset(): void {\n    if (this.snapshot) {\n      this.snapshot.release();\n    }\n    this.snapshot = null;\n    this.profiles = null;\n    this.selectionWindowInternal.reset();\n    this.selectionWindowInternal.setResizeEnabled(false);\n  }\n}\n\nexport const enum Events {\n  WINDOW_CHANGED = 'WindowChanged',\n}\n\nexport interface EventTypes {\n  [Events.WINDOW_CHANGED]: void;\n}\n\nexport class PaintProfilerCommandLogView extends UI.ThrottledWidget.ThrottledWidget {\n  private readonly treeOutline: UI.TreeOutline.TreeOutlineInShadow;\n  private log: SDK.PaintProfiler.PaintProfilerLogItem[];\n  private readonly treeItemCache: Map<SDK.PaintProfiler.PaintProfilerLogItem, LogTreeElement>;\n  private selectionWindow?: {left: number, right: number}|null;\n  constructor() {\n    super();\n    this.setMinimumSize(100, 25);\n    this.element.classList.add('overflow-auto');\n\n    this.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    UI.ARIAUtils.setLabel(this.treeOutline.contentElement, i18nString(UIStrings.commandLog));\n    this.element.appendChild(this.treeOutline.element);\n    this.setDefaultFocusedElement(this.treeOutline.contentElement);\n\n    this.log = [];\n    this.treeItemCache = new Map();\n  }\n\n  setCommandLog(log: SDK.PaintProfiler.PaintProfilerLogItem[]): void {\n    this.log = log;\n\n    this.updateWindow({left: 0, right: this.log.length});\n  }\n\n  private appendLogItem(logItem: SDK.PaintProfiler.PaintProfilerLogItem): void {\n    let treeElement = this.treeItemCache.get(logItem);\n    if (!treeElement) {\n      treeElement = new LogTreeElement(logItem);\n      this.treeItemCache.set(logItem, treeElement);\n    } else if (treeElement.parent) {\n      return;\n    }\n    this.treeOutline.appendChild(treeElement);\n  }\n\n  updateWindow(selectionWindow: {left: number, right: number}|null): void {\n    this.selectionWindow = selectionWindow;\n    this.update();\n  }\n\n  override doUpdate(): Promise<void> {\n    if (!this.selectionWindow || !this.log.length) {\n      this.treeOutline.removeChildren();\n      return Promise.resolve();\n    }\n    const root = this.treeOutline.rootElement();\n    for (;;) {\n      const child = root.firstChild() as LogTreeElement;\n      if (!child || child.logItem.commandIndex >= this.selectionWindow.left) {\n        break;\n      }\n      root.removeChildAtIndex(0);\n    }\n    for (;;) {\n      const child = root.lastChild() as LogTreeElement;\n      if (!child || child.logItem.commandIndex < this.selectionWindow.right) {\n        break;\n      }\n      root.removeChildAtIndex(root.children().length - 1);\n    }\n    for (let i = this.selectionWindow.left, right = this.selectionWindow.right; i < right; ++i) {\n      this.appendLogItem(this.log[i]);\n    }\n    return Promise.resolve();\n  }\n}\n\nexport class LogTreeElement extends UI.TreeOutline.TreeElement {\n  readonly logItem: SDK.PaintProfiler.PaintProfilerLogItem;\n\n  constructor(logItem: SDK.PaintProfiler.PaintProfilerLogItem) {\n    super('', Boolean(logItem.params));\n    this.logItem = logItem;\n  }\n\n  override onattach(): void {\n    this.update();\n  }\n\n  override async onpopulate(): Promise<void> {\n    for (const param in this.logItem.params) {\n      LogPropertyTreeElement.appendLogPropertyItem(this, param, this.logItem.params[param]);\n    }\n  }\n\n  private paramToString(param: SDK.PaintProfiler.RawPaintProfilerLogItemParamValue, name: string): string {\n    if (typeof param !== 'object') {\n      return typeof param === 'string' && param.length > 100 ? name : JSON.stringify(param);\n    }\n    let str = '';\n    let keyCount = 0;\n    for (const key in param) {\n      const paramKey = param[key];\n      if (++keyCount > 4 || paramKey === 'object' || (paramKey === 'string' && paramKey.length > 100)) {\n        return name;\n      }\n      if (str) {\n        str += ', ';\n      }\n      str += paramKey;\n    }\n    return str;\n  }\n\n  private paramsToString(params: SDK.PaintProfiler.RawPaintProfilerLogItemParams|null): string {\n    let str = '';\n    for (const key in params) {\n      if (str) {\n        str += ', ';\n      }\n      str += this.paramToString(params[key], key);\n    }\n    return str;\n  }\n\n  private update(): void {\n    const title = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(title, this.logItem.method + '(' + this.paramsToString(this.logItem.params) + ')');\n    this.title = title;\n  }\n}\n\nexport class LogPropertyTreeElement extends UI.TreeOutline.TreeElement {\n  private property: {name: string, value: SDK.PaintProfiler.RawPaintProfilerLogItemParamValue};\n\n  constructor(property: {name: string, value: SDK.PaintProfiler.RawPaintProfilerLogItemParamValue}) {\n    super();\n    this.property = property;\n  }\n\n  static appendLogPropertyItem(\n      element: UI.TreeOutline.TreeElement, name: string,\n      value: SDK.PaintProfiler.RawPaintProfilerLogItemParamValue): void {\n    const treeElement = new LogPropertyTreeElement({name, value});\n    element.appendChild(treeElement);\n    if (value && typeof value === 'object') {\n      for (const property in value) {\n        LogPropertyTreeElement.appendLogPropertyItem(treeElement, property, value[property]);\n      }\n    }\n  }\n\n  override onattach(): void {\n    const title = document.createDocumentFragment();\n    const nameElement = title.createChild('span', 'name');\n    nameElement.textContent = this.property.name;\n    const separatorElement = title.createChild('span', 'separator');\n    separatorElement.textContent = ': ';\n    if (this.property.value === null || typeof this.property.value !== 'object') {\n      const valueElement = title.createChild('span', 'value');\n      valueElement.textContent = JSON.stringify(this.property.value);\n      valueElement.classList.add('cm-js-' + (this.property.value === null ? 'null' : typeof this.property.value));\n    }\n    this.title = title;\n  }\n}\n\nexport class PaintProfilerCategory {\n  name: string;\n  title: string;\n  color: string;\n\n  constructor(name: string, title: string, color: string) {\n    this.name = name;\n    this.title = title;\n    this.color = color;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.paint-profiler-overview {\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.paint-profiler-canvas-container {\n  flex: auto;\n  position: relative;\n}\n\n.paint-profiler-pie-chart {\n  width: 60px !important; /* stylelint-disable-line declaration-no-important */\n  height: 60px !important; /* stylelint-disable-line declaration-no-important */\n  padding: 2px;\n  overflow: hidden;\n  font-size: 10px;\n}\n\n.paint-profiler-canvas-container canvas {\n  z-index: 200;\n  background-color: var(--sys-color-cdt-base-container);\n  opacity: 95%;\n  height: 100%;\n  width: 100%;\n}\n\n.paint-profiler-canvas-container .overview-grid-window-resizer {\n  z-index: 2000;\n}\n\n/*# sourceURL=${import.meta.resolve('./paintProfiler.css')} */`;"],
  "mappings": "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",
  "names": ["Common", "i18n", "SDK", "UIStrings", "str_", "i18nString", "Common", "i18n", "UI", "UIStrings", "str_", "i18nString", "Common", "i18n", "Platform", "UI", "VisualLogging", "Common", "i18n", "Platform", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "UIStrings", "str_", "i18nString", "canvas", "toolbar", "OutlineType", "Common", "i18n", "Platform", "UI", "UIStrings", "str_", "i18nString", "categories", "window"]
}
