{"version":3,"file":"ConsoleInsight.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/explain/components/ConsoleInsight.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../../ui/components/spinners/spinners.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as Marked from '../../../third_party/marked/marked.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport type * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as MarkdownView from '../../../ui/components/markdown_view/markdown_view.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Lit from '../../../ui/lit/lit.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport {type PromptBuilder, type Source, SourceType} from '../PromptBuilder.js';\n\nimport stylesRaw from './consoleInsight.css.js';\nimport listStylesRaw from './consoleInsightSourcesList.css.js';\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(stylesRaw.cssContent);\n\n// TODO(crbug.com/391381439): Fully migrate off of constructed style sheets.\nconst listStyles = new CSSStyleSheet();\nlistStyles.replaceSync(listStylesRaw.cssContent);\n\n// Note: privacy and legal notices are not localized so far.\nconst UIStrings = {\n  /**\n   * @description The title of the insight source \"Console message\".\n   */\n  consoleMessage: 'Console message',\n  /**\n   * @description The title of the insight source \"Stacktrace\".\n   */\n  stackTrace: 'Stacktrace',\n  /**\n   * @description The title of the insight source \"Network request\".\n   */\n  networkRequest: 'Network request',\n  /**\n   * @description The title of the insight source \"Related code\".\n   */\n  relatedCode: 'Related code',\n  /**\n   * @description The title that is shown while the insight is being generated.\n   */\n  generating: 'Generating explanation…',\n  /**\n   * @description The header that indicates that the content shown is a console\n   * insight.\n   */\n  insight: 'Explanation',\n  /**\n   * @description The title of the a button that closes the insight pane.\n   */\n  closeInsight: 'Close explanation',\n  /**\n   * @description The title of the list of source data that was used to generate the insight.\n   */\n  inputData: 'Data used to understand this message',\n  /**\n   * @description The title of the button that allows submitting positive\n   * feedback about the console insight.\n   */\n  goodResponse: 'Good response',\n  /**\n   * @description The title of the button that allows submitting negative\n   * feedback about the console insight.\n   */\n  badResponse: 'Bad response',\n  /**\n   * @description The title of the button that opens a page to report a legal\n   * issue with the console insight.\n   */\n  report: 'Report legal issue',\n  /**\n   * @description The text of the header inside the console insight pane when there was an error generating an insight.\n   */\n  error: 'DevTools has encountered an error',\n  /**\n   * @description The message shown when an error has been encountered.\n   */\n  errorBody: 'Something went wrong. Try again.',\n  /**\n   * @description Label for screenreaders that is added to the end of the link\n   * title to indicate that the link will be opened in a new tab.\n   */\n  opensInNewTab: '(opens in a new tab)',\n  /**\n   * @description The title of a link that allows the user to learn more about\n   * the feature.\n   */\n  learnMore: 'Learn more',\n  /**\n   * @description The error message when the user is not logged in into Chrome.\n   */\n  notLoggedIn: 'This feature is only available when you sign into Chrome with your Google account.',\n  /**\n   * @description The title of a button which opens the Chrome SignIn page.\n   */\n  signIn: 'Sign in',\n  /**\n   * @description The header shown when the internet connection is not\n   * available.\n   */\n  offlineHeader: 'DevTools can’t reach the internet',\n  /**\n   * @description Message shown when the user is offline.\n   */\n  offline: 'Check your internet connection and try again.',\n  /**\n   * @description The message shown if the user is not logged in.\n   */\n  signInToUse: 'Sign in to use this feature',\n  /**\n   * @description The title of the button that searches for the console\n   * insight using a search engine instead of using console insights.\n   */\n  search: 'Use search instead',\n  /**\n   * @description Shown to the user when the network request data is not\n   * available and a page reload might populate it.\n   */\n  reloadRecommendation:\n      'Reload the page to capture related network request data for this message in order to create a better insight.',\n  /**\n   * @description Shown to the user when they need to enable the console insights feature in settings in order to use it.\n   * @example {Console insights in Settings} PH1\n   */\n  turnOnInSettings:\n      'Turn on {PH1} to receive AI assistance for understanding and addressing console warnings and errors.',\n  /**\n   * @description Text for a link to Chrome DevTools Settings.\n   */\n  settingsLink: '`Console insights` in Settings',\n  /**\n   * @description The title of the list of references/recitations that were used to generate the insight.\n   */\n  references: 'Sources and related content',\n  /**\n   * @description Sub-heading for a list of links to URLs which are related to the AI-generated response.\n   */\n  relatedContent: 'Related content',\n  /**\n   * @description Error message shown when the request to get an AI response times out.\n   */\n  timedOut: 'Generating a response took too long. Please try again.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/explain/components/ConsoleInsight.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html, Directives} = Lit;\n\nexport class CloseEvent extends Event {\n  static readonly eventName = 'close';\n\n  constructor() {\n    super(CloseEvent.eventName, {composed: true, bubbles: true});\n  }\n}\n\ntype PublicPromptBuilder = Pick<PromptBuilder, 'buildPrompt'|'getSearchQuery'>;\ntype PublicAidaClient = Pick<Host.AidaClient.AidaClient, 'fetch'|'registerClientEvent'>;\n\nfunction localizeType(sourceType: SourceType): string {\n  switch (sourceType) {\n    case SourceType.MESSAGE:\n      return i18nString(UIStrings.consoleMessage);\n    case SourceType.STACKTRACE:\n      return i18nString(UIStrings.stackTrace);\n    case SourceType.NETWORK_REQUEST:\n      return i18nString(UIStrings.networkRequest);\n    case SourceType.RELATED_CODE:\n      return i18nString(UIStrings.relatedCode);\n  }\n}\n\nconst TERMS_OF_SERVICE_URL = 'https://policies.google.com/terms';\nconst PRIVACY_POLICY_URL = 'https://policies.google.com/privacy';\nconst CODE_SNIPPET_WARNING_URL = 'https://support.google.com/legal/answer/13505487';\nconst LEARNMORE_URL = 'https://goo.gle/devtools-console-messages-ai' as Platform.DevToolsPath.UrlString;\nconst REPORT_URL = 'https://support.google.com/legal/troubleshooter/1114905?hl=en#ts=1115658%2C13380504' as\n    Platform.DevToolsPath.UrlString;\nconst SIGN_IN_URL = 'https://accounts.google.com' as Platform.DevToolsPath.UrlString;\n\nconst enum State {\n  INSIGHT = 'insight',\n  LOADING = 'loading',\n  ERROR = 'error',\n  SETTING_IS_NOT_TRUE = 'setting-is-not-true',\n  CONSENT_REMINDER = 'consent-reminder',\n  NOT_LOGGED_IN = 'not-logged-in',\n  SYNC_IS_PAUSED = 'sync-is-paused',\n  OFFLINE = 'offline',\n}\n\ntype StateData = {\n  type: State.LOADING,\n  consentOnboardingCompleted: boolean,\n}|{\n  type: State.INSIGHT,\n  tokens: MarkdownView.MarkdownView.MarkdownViewData['tokens'],\n  validMarkdown: boolean,\n  sources: Source[],\n  isPageReloadRecommended: boolean,\n  completed: boolean,\n  directCitationUrls: string[],\n  timedOut?: boolean,\n}&Host.AidaClient.AidaResponse|{\n  type: State.ERROR,\n  error: string,\n}|{\n  type: State.CONSENT_REMINDER,\n  sources: Source[],\n  isPageReloadRecommended: boolean,\n}|{\n  type: State.SETTING_IS_NOT_TRUE,\n}|{\n  type: State.NOT_LOGGED_IN,\n}|{\n  type: State.SYNC_IS_PAUSED,\n}|{\n  type: State.OFFLINE,\n};\n\nconst markedExtension = {\n  name: 'citation',\n  level: 'inline',\n  start(src: string) {\n    return src.match(/\\[\\^/)?.index;\n  },\n  tokenizer(src: string) {\n    const match = src.match(/^\\[\\^(\\d+)\\]/);\n    if (match) {\n      return {\n        type: 'citation',\n        raw: match[0],\n        linkText: Number(match[1]),\n      };\n    }\n    return false;\n  },\n  renderer: () => '',\n};\n\nexport class ConsoleInsight extends HTMLElement {\n  static async create(promptBuilder: PublicPromptBuilder, aidaClient: PublicAidaClient): Promise<ConsoleInsight> {\n    const aidaAvailability = await Host.AidaClient.AidaClient.checkAccessPreconditions();\n    return new ConsoleInsight(promptBuilder, aidaClient, aidaAvailability);\n  }\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #promptBuilder: PublicPromptBuilder;\n  #aidaClient: PublicAidaClient;\n  #renderer: MarkdownView.MarkdownView.MarkdownInsightRenderer;\n\n  // Main state.\n  #state: StateData;\n  #referenceDetailsRef = Lit.Directives.createRef<HTMLDetailsElement>();\n  #areReferenceDetailsOpen = false;\n\n  // Rating sub-form state.\n  #selectedRating?: boolean;\n\n  #consoleInsightsEnabledSetting: Common.Settings.Setting<boolean>|undefined;\n  #aidaAvailability: Host.AidaClient.AidaAccessPreconditions;\n  #boundOnAidaAvailabilityChange: () => Promise<void>;\n  #marked: Marked.Marked.Marked;\n\n  constructor(\n      promptBuilder: PublicPromptBuilder, aidaClient: PublicAidaClient,\n      aidaAvailability: Host.AidaClient.AidaAccessPreconditions) {\n    super();\n    this.#promptBuilder = promptBuilder;\n    this.#aidaClient = aidaClient;\n    this.#aidaAvailability = aidaAvailability;\n    this.#consoleInsightsEnabledSetting = this.#getConsoleInsightsEnabledSetting();\n    this.#renderer = new MarkdownView.MarkdownView.MarkdownInsightRenderer(this.#citationClickHandler.bind(this));\n    this.#marked = new Marked.Marked.Marked({extensions: [markedExtension]});\n\n    this.#state = this.#getStateFromAidaAvailability();\n    this.#boundOnAidaAvailabilityChange = this.#onAidaAvailabilityChange.bind(this);\n    this.#render();\n    // Stop keyboard event propagation to avoid Console acting on the events\n    // inside the insight component.\n    this.addEventListener('keydown', e => {\n      e.stopPropagation();\n    });\n    this.addEventListener('keyup', e => {\n      e.stopPropagation();\n    });\n    this.addEventListener('keypress', e => {\n      e.stopPropagation();\n    });\n    this.addEventListener('click', e => {\n      e.stopPropagation();\n    });\n    this.focus();\n  }\n\n  #citationClickHandler(index: number): void {\n    if (this.#state.type !== State.INSIGHT || !this.#referenceDetailsRef.value) {\n      return;\n    }\n    const areDetailsAlreadyExpanded = this.#referenceDetailsRef.value.open;\n    this.#areReferenceDetailsOpen = true;\n    this.#render();\n\n    const highlightedElement =\n        this.#shadow.querySelector(`.sources-list x-link[data-index=\"${index}\"]`) as HTMLElement | null;\n    if (highlightedElement) {\n      UI.UIUtils.runCSSAnimationOnce(highlightedElement, 'highlighted');\n      if (areDetailsAlreadyExpanded) {\n        highlightedElement.scrollIntoView({behavior: 'auto'});\n        highlightedElement.focus();\n      } else {  // Wait for the details element to open before scrolling.\n        this.#referenceDetailsRef.value.addEventListener('transitionend', () => {\n          highlightedElement.scrollIntoView({behavior: 'auto'});\n          highlightedElement.focus();\n        }, {once: true});\n      }\n    }\n  }\n\n  #getStateFromAidaAvailability(): StateData {\n    switch (this.#aidaAvailability) {\n      case Host.AidaClient.AidaAccessPreconditions.AVAILABLE: {\n        // Allows skipping the consent reminder if the user enabled the feature via settings in the current session\n        const skipReminder =\n            Common.Settings.Settings.instance()\n                .createSetting('console-insights-skip-reminder', false, Common.Settings.SettingStorageType.SESSION)\n                .get();\n        return {\n          type: State.LOADING,\n          consentOnboardingCompleted: this.#getOnboardingCompletedSetting().get() || skipReminder,\n        };\n      }\n      case Host.AidaClient.AidaAccessPreconditions.NO_ACCOUNT_EMAIL:\n        return {\n          type: State.NOT_LOGGED_IN,\n        };\n      case Host.AidaClient.AidaAccessPreconditions.SYNC_IS_PAUSED:\n        return {\n          type: State.SYNC_IS_PAUSED,\n        };\n      case Host.AidaClient.AidaAccessPreconditions.NO_INTERNET:\n        return {\n          type: State.OFFLINE,\n        };\n    }\n  }\n\n  // off -> entrypoints are shown, and point to the AI setting panel where the setting can be turned on\n  // on -> entrypoints are shown, and console insights can be generated\n  #getConsoleInsightsEnabledSetting(): Common.Settings.Setting<boolean>|undefined {\n    try {\n      return Common.Settings.moduleSetting('console-insights-enabled') as Common.Settings.Setting<boolean>;\n    } catch {\n      return;\n    }\n  }\n\n  // off -> consent reminder is shown, unless the 'console-insights-enabled'-setting has been enabled in the current DevTools session\n  // on -> no consent reminder shown\n  #getOnboardingCompletedSetting(): Common.Settings.Setting<boolean> {\n    return Common.Settings.Settings.instance().createLocalSetting('console-insights-onboarding-finished', false);\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [styles, Input.checkboxStyles];\n    this.classList.add('opening');\n    this.#consoleInsightsEnabledSetting?.addChangeListener(this.#onConsoleInsightsSettingChanged, this);\n    const blockedByAge = Root.Runtime.hostConfig.aidaAvailability?.blockedByAge === true;\n    if (this.#state.type === State.LOADING && this.#consoleInsightsEnabledSetting?.getIfNotDisabled() === true &&\n        !blockedByAge && this.#state.consentOnboardingCompleted) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.GeneratingInsightWithoutDisclaimer);\n    }\n    Host.AidaClient.HostConfigTracker.instance().addEventListener(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.#boundOnAidaAvailabilityChange);\n    // If AIDA availability has changed while the component was disconnected, we need to update.\n    void this.#onAidaAvailabilityChange();\n    // The setting might have been turned on/off while the component was disconnected.\n    // Update the state, unless the current state is already terminal (`INSIGHT` or `ERROR`).\n    if (this.#state.type !== State.INSIGHT && this.#state.type !== State.ERROR) {\n      this.#state = this.#getStateFromAidaAvailability();\n    }\n    void this.#generateInsightIfNeeded();\n  }\n\n  disconnectedCallback(): void {\n    this.#consoleInsightsEnabledSetting?.removeChangeListener(this.#onConsoleInsightsSettingChanged, this);\n    Host.AidaClient.HostConfigTracker.instance().removeEventListener(\n        Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED, this.#boundOnAidaAvailabilityChange);\n  }\n\n  async #onAidaAvailabilityChange(): Promise<void> {\n    const currentAidaAvailability = await Host.AidaClient.AidaClient.checkAccessPreconditions();\n    if (currentAidaAvailability !== this.#aidaAvailability) {\n      this.#aidaAvailability = currentAidaAvailability;\n      this.#state = this.#getStateFromAidaAvailability();\n      void this.#generateInsightIfNeeded();\n    }\n  }\n\n  #onConsoleInsightsSettingChanged(): void {\n    if (this.#consoleInsightsEnabledSetting?.getIfNotDisabled() === true) {\n      this.#getOnboardingCompletedSetting().set(true);\n    }\n    if (this.#state.type === State.SETTING_IS_NOT_TRUE &&\n        this.#consoleInsightsEnabledSetting?.getIfNotDisabled() === true) {\n      this.#transitionTo({\n        type: State.LOADING,\n        consentOnboardingCompleted: true,\n      });\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightsOptInTeaserConfirmedInSettings);\n      void this.#generateInsightIfNeeded();\n    }\n    if (this.#state.type === State.CONSENT_REMINDER &&\n        this.#consoleInsightsEnabledSetting?.getIfNotDisabled() === false) {\n      this.#transitionTo({\n        type: State.LOADING,\n        consentOnboardingCompleted: false,\n      });\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightsReminderTeaserAbortedInSettings);\n      void this.#generateInsightIfNeeded();\n    }\n  }\n\n  #transitionTo(newState: StateData): void {\n    const previousState = this.#state;\n    this.#state = newState;\n    this.#render();\n    if (newState.type !== previousState.type) {\n      this.#focusHeader();\n    }\n  }\n\n  async #generateInsightIfNeeded(): Promise<void> {\n    if (this.#state.type !== State.LOADING) {\n      return;\n    }\n    const blockedByAge = Root.Runtime.hostConfig.aidaAvailability?.blockedByAge === true;\n    if (this.#consoleInsightsEnabledSetting?.getIfNotDisabled() !== true || blockedByAge) {\n      this.#transitionTo({\n        type: State.SETTING_IS_NOT_TRUE,\n      });\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightsOptInTeaserShown);\n      return;\n    }\n    if (!this.#state.consentOnboardingCompleted) {\n      const {sources, isPageReloadRecommended} = await this.#promptBuilder.buildPrompt();\n      this.#transitionTo({\n        type: State.CONSENT_REMINDER,\n        sources,\n        isPageReloadRecommended,\n      });\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightsReminderTeaserShown);\n      return;\n    }\n    await this.#generateInsight();\n  }\n\n  #onClose(): void {\n    if (this.#state.type === State.CONSENT_REMINDER) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightsReminderTeaserCanceled);\n    }\n    this.shadowRoot?.addEventListener('animationend', () => {\n      this.dispatchEvent(new CloseEvent());\n    }, {once: true});\n    this.classList.add('closing');\n  }\n\n  #onRating(event: Event): void {\n    if (this.#state.type !== State.INSIGHT) {\n      throw new Error('Unexpected state');\n    }\n    if (this.#state.metadata?.rpcGlobalId === undefined) {\n      throw new Error('RPC Id not in metadata');\n    }\n    // If it was rated, do not record again.\n    if (this.#selectedRating !== undefined) {\n      return;\n    }\n\n    this.#selectedRating = (event.target as HTMLElement).dataset.rating === 'true';\n    this.#render();\n    if (this.#selectedRating) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightRatedPositive);\n    } else {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightRatedNegative);\n    }\n    const disallowLogging = Root.Runtime.hostConfig.aidaAvailability?.disallowLogging ?? true;\n    void this.#aidaClient.registerClientEvent({\n      corresponding_aida_rpc_global_id: this.#state.metadata.rpcGlobalId,\n      disable_user_content_logging: disallowLogging,\n      do_conversation_client_event: {\n        user_feedback: {\n          sentiment: this.#selectedRating ? Host.AidaClient.Rating.POSITIVE : Host.AidaClient.Rating.NEGATIVE,\n        },\n      },\n    });\n  }\n\n  #onReport(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(REPORT_URL);\n  }\n\n  #onSearch(): void {\n    const query = this.#promptBuilder.getSearchQuery();\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openSearchResultsInNewTab(query);\n  }\n\n  async #onConsentReminderConfirmed(): Promise<void> {\n    this.#getOnboardingCompletedSetting().set(true);\n    this.#transitionTo({\n      type: State.LOADING,\n      consentOnboardingCompleted: true,\n    });\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightsReminderTeaserConfirmed);\n    await this.#generateInsight();\n  }\n\n  #insertCitations(explanation: string, metadata: Host.AidaClient.AidaResponseMetadata):\n      {explanationWithCitations: string, directCitationUrls: string[]} {\n    const directCitationUrls: string[] = [];\n    if (!this.#isSearchRagResponse(metadata) || !metadata.attributionMetadata) {\n      return {explanationWithCitations: explanation, directCitationUrls};\n    }\n\n    const {attributionMetadata} = metadata;\n    const sortedCitations =\n        attributionMetadata.citations\n            .filter(citation => citation.sourceType === Host.AidaClient.CitationSourceType.WORLD_FACTS)\n            .sort((a, b) => (b.endIndex || 0) - (a.endIndex || 0));\n    let explanationWithCitations = explanation;\n    for (const [index, citation] of sortedCitations.entries()) {\n      // Matches optional punctuation mark followed by whitespace.\n      // Ensures citation is placed at the end of a word.\n      const myRegex = /[.,:;!?]*\\s/g;\n      myRegex.lastIndex = citation.endIndex || 0;\n      const result = myRegex.exec(explanationWithCitations);\n      if (result && citation.uri) {\n        explanationWithCitations = explanationWithCitations.slice(0, result.index) +\n            `[^${sortedCitations.length - index}]` + explanationWithCitations.slice(result.index);\n        directCitationUrls.push(citation.uri);\n      }\n    }\n\n    directCitationUrls.reverse();\n    return {explanationWithCitations, directCitationUrls};\n  }\n\n  async #generateInsight(): Promise<void> {\n    try {\n      for await (const {sources, isPageReloadRecommended, explanation, metadata, completed} of this.#getInsight()) {\n        const {explanationWithCitations, directCitationUrls} = this.#insertCitations(explanation, metadata);\n        const tokens = this.#validateMarkdown(explanationWithCitations);\n        const valid = tokens !== false;\n        this.#transitionTo({\n          type: State.INSIGHT,\n          tokens: valid ? tokens : [],\n          validMarkdown: valid,\n          explanation,\n          sources,\n          metadata,\n          isPageReloadRecommended,\n          completed,\n          directCitationUrls,\n        });\n      }\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightGenerated);\n    } catch (err) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightErrored);\n      if (err.message === 'doAidaConversation timed out' && this.#state.type === State.INSIGHT) {\n        this.#state.timedOut = true;\n        this.#transitionTo({...this.#state, completed: true, timedOut: true});\n      } else {\n        this.#transitionTo({\n          type: State.ERROR,\n          error: err.message,\n        });\n      }\n    }\n  }\n\n  /**\n   * Validates the markdown by trying to render it.\n   */\n  #validateMarkdown(text: string): Marked.Marked.TokensList|false {\n    try {\n      const tokens = this.#marked.lexer(text);\n      for (const token of tokens) {\n        this.#renderer.renderToken(token);\n      }\n      return tokens;\n    } catch {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightErroredMarkdown);\n      return false;\n    }\n  }\n\n  async *\n      #getInsight(): AsyncGenerator<\n          {sources: Source[], isPageReloadRecommended: boolean}&Host.AidaClient.AidaResponse, void, void> {\n    const {prompt, sources, isPageReloadRecommended} = await this.#promptBuilder.buildPrompt();\n    try {\n      for await (\n          const response of this.#aidaClient.fetch(Host.AidaClient.AidaClient.buildConsoleInsightsRequest(prompt))) {\n        yield {sources, isPageReloadRecommended, ...response};\n      }\n    } catch (err) {\n      if (err.message === 'Server responded: permission denied') {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightErroredPermissionDenied);\n      } else if (err.message.startsWith('Cannot send request:')) {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightErroredCannotSend);\n      } else if (err.message.startsWith('Request failed:')) {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightErroredRequestFailed);\n      } else if (err.message.startsWith('Cannot parse chunk:')) {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightErroredCannotParseChunk);\n      } else if (err.message === 'Unknown chunk result') {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightErroredUnknownChunk);\n      } else if (err.message.startsWith('Server responded:')) {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightErroredApi);\n      } else {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightErroredOther);\n      }\n      throw err;\n    }\n  }\n\n  #onGoToSignIn(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(SIGN_IN_URL);\n  }\n\n  #focusHeader(): void {\n    this.addEventListener('animationend', () => {\n      (this.#shadow.querySelector('header h2') as HTMLElement | undefined)?.focus();\n    }, {once: true});\n  }\n\n  #renderSearchButton(): Lit.TemplateResult {\n    // clang-format off\n    return html`<devtools-button\n      @click=${this.#onSearch}\n      class=\"search-button\"\n      .data=${\n        {\n          variant: Buttons.Button.Variant.OUTLINED,\n          jslogContext: 'search',\n        } as Buttons.Button.ButtonData\n      }\n    >\n      ${i18nString(UIStrings.search)}\n    </devtools-button>`;\n    // clang-format on\n  }\n\n  #renderLearnMoreAboutInsights(): Lit.TemplateResult {\n    // clang-format off\n    return html`<x-link href=${LEARNMORE_URL} class=\"link\" jslog=${VisualLogging.link('learn-more').track({click: true})}>\n      ${i18nString(UIStrings.learnMore)}\n    </x-link>`;\n    // clang-format on\n  }\n\n  #maybeRenderSources(): Lit.LitTemplate {\n    if (this.#state.type !== State.INSIGHT || !this.#state.directCitationUrls.length) {\n      return Lit.nothing;\n    }\n\n    // clang-format off\n    return html`\n      <ol class=\"sources-list\">\n        ${this.#state.directCitationUrls.map((url, index) => html`\n          <li>\n            <x-link\n              href=${url}\n              class=\"link\"\n              data-index=${index + 1}\n              jslog=${VisualLogging.link('references.console-insights').track({click: true})}\n            >\n              ${url}\n            </x-link>\n          </li>\n        `)}\n      </ol>\n    `;\n    // clang-format on\n  }\n\n  #maybeRenderRelatedContent(): Lit.LitTemplate {\n    if (this.#state.type !== State.INSIGHT || !this.#state.metadata.factualityMetadata?.facts.length) {\n      return Lit.nothing;\n    }\n    const directCitationUrls = this.#state.directCitationUrls;\n    const relatedUrls = this.#state.metadata.factualityMetadata.facts\n                            .filter(fact => fact.sourceUri && !directCitationUrls.includes(fact.sourceUri))\n                            .map(fact => fact.sourceUri as string);\n    const trainingDataUrls =\n        this.#state.metadata.attributionMetadata?.citations\n            .filter(\n                citation => citation.sourceType === Host.AidaClient.CitationSourceType.TRAINING_DATA &&\n                    (citation.uri || citation.repository))\n            .map(citation => citation.uri || `https://www.github.com/${citation.repository}`) ||\n        [];\n    const dedupedTrainingDataUrls =\n        [...new Set(trainingDataUrls.filter(url => !relatedUrls.includes(url) && !directCitationUrls.includes(url)))];\n    relatedUrls.push(...dedupedTrainingDataUrls);\n\n    if (relatedUrls.length === 0) {\n      return Lit.nothing;\n    }\n    // clang-format off\n    return html`\n      ${this.#state.directCitationUrls.length ? html`<h3>${i18nString(UIStrings.relatedContent)}</h3>` : Lit.nothing}\n      <ul class=\"references-list\">\n        ${relatedUrls.map(relatedUrl => html`\n          <li>\n            <x-link\n              href=${relatedUrl}\n              class=\"link\"\n              jslog=${VisualLogging.link('references.console-insights').track({click: true})}\n            >\n              ${relatedUrl}\n            </x-link>\n          </li>\n        `)}\n      </ul>\n    `;\n    // clang-format on\n  }\n\n  #isSearchRagResponse(metadata: Host.AidaClient.AidaResponseMetadata): boolean {\n    return Boolean(metadata.factualityMetadata?.facts.length);\n  }\n\n  #onToggleReferenceDetails(): void {\n    if (this.#referenceDetailsRef.value) {\n      this.#areReferenceDetailsOpen = this.#referenceDetailsRef.value.open;\n    }\n  }\n\n  #renderMain(): Lit.TemplateResult {\n    const jslog = `${VisualLogging.section(this.#state.type).track({resize: true})}`;\n    const noLogging = Root.Runtime.hostConfig.aidaAvailability?.enterprisePolicyValue ===\n        Root.Runtime.GenAiEnterprisePolicyValue.ALLOW_WITHOUT_LOGGING;\n\n    // clang-format off\n    switch (this.#state.type) {\n      case State.LOADING:\n        return html`<main jslog=${jslog}>\n            <div role=\"presentation\" aria-label=\"Loading\" class=\"loader\" style=\"clip-path: url('#clipPath');\">\n              <svg width=\"100%\" height=\"64\">\n                <clipPath id=\"clipPath\">\n                  <rect x=\"0\" y=\"0\" width=\"100%\" height=\"16\" rx=\"8\"></rect>\n                  <rect x=\"0\" y=\"24\" width=\"100%\" height=\"16\" rx=\"8\"></rect>\n                  <rect x=\"0\" y=\"48\" width=\"100%\" height=\"16\" rx=\"8\"></rect>\n                </clipPath>\n              </svg>\n            </div>\n          </main>`;\n      case State.INSIGHT:\n        return html`\n        <main jslog=${jslog}>\n          ${\n            this.#state.validMarkdown ? html`<devtools-markdown-view\n              .data=${{tokens: this.#state.tokens, renderer: this.#renderer, animationEnabled: true} as MarkdownView.MarkdownView.MarkdownViewData}>\n            </devtools-markdown-view>`: this.#state.explanation\n          }\n          ${this.#state.timedOut ? html`<p class=\"error-message\">${i18nString(UIStrings.timedOut)}</p>` : Lit.nothing}\n          ${this.#isSearchRagResponse(this.#state.metadata) ? html`\n            <details class=\"references\" ${Lit.Directives.ref(this.#referenceDetailsRef)} @toggle=${this.#onToggleReferenceDetails} jslog=${VisualLogging.expand('references').track({click: true})}>\n              <summary>${i18nString(UIStrings.references)}</summary>\n              ${this.#maybeRenderSources()}\n              ${this.#maybeRenderRelatedContent()}\n            </details>\n          ` : Lit.nothing}\n          <details jslog=${VisualLogging.expand('sources').track({click: true})}>\n            <summary>${i18nString(UIStrings.inputData)}</summary>\n            <devtools-console-insight-sources-list .sources=${this.#state.sources} .isPageReloadRecommended=${this.#state.isPageReloadRecommended}>\n            </devtools-console-insight-sources-list>\n          </details>\n          <div class=\"buttons\">\n            ${this.#renderSearchButton()}\n          </div>\n        </main>`;\n      case State.ERROR:\n        return html`\n        <main jslog=${jslog}>\n          <div class=\"error\">${i18nString(UIStrings.errorBody)}</div>\n        </main>`;\n      case State.CONSENT_REMINDER:\n        return html`\n          <main class=\"reminder-container\" jslog=${jslog}>\n            <h3>Things to consider</h3>\n            <div class=\"reminder-items\">\n              <div>\n                <devtools-icon .data=${{\n                  iconName: 'google',\n                  width: 'var(--sys-size-8)',\n                  height: 'var(--sys-size-8)',\n                } as IconButton.Icon.IconData}>\n                </devtools-icon>\n              </div>\n              <div>The console message, associated stack trace, related source code, and the associated network headers are sent to Google to generate explanations.\n                ${noLogging\n                  ? 'The content you submit and that is generated by this feature will not be used to improve Google’s AI models.'\n                  : 'This data may be seen by human reviewers to improve this feature. Avoid sharing sensitive or personal information.'}\n              </div>\n              <div>\n                <devtools-icon .data=${{\n                  iconName: 'policy',\n                  width: 'var(--sys-size-8)',\n                  height: 'var(--sys-size-8)',\n                } as IconButton.Icon.IconData}>\n                </devtools-icon>\n              </div>\n              <div>Use of this feature is subject to the\n                <x-link\n                  href=${TERMS_OF_SERVICE_URL}\n                  class=\"link\"\n                  jslog=${VisualLogging.link('terms-of-service.console-insights').track({click: true})}\n                >Google Terms of Service</x-link>\n                and\n                <x-link\n                  href=${PRIVACY_POLICY_URL}\n                  class=\"link\"\n                  jslog=${VisualLogging.link('privacy-policy.console-insights').track({click: true})}\n                >Google Privacy Policy</x-link>\n              </div>\n              <div>\n                <devtools-icon .data=${{\n                  iconName: 'warning',\n                  width: 'var(--sys-size-8)',\n                  height: 'var(--sys-size-8)',\n                } as IconButton.Icon.IconData}>\n                </devtools-icon>\n              </div>\n              <div>\n                <x-link\n                  href=${CODE_SNIPPET_WARNING_URL}\n                  class=\"link\"\n                  jslog=${VisualLogging.link('code-snippets-explainer.console-insights').track({click: true})}\n                >Use generated code snippets with caution</x-link>\n              </div>\n            </div>\n          </main>\n        `;\n      case State.SETTING_IS_NOT_TRUE: {\n        const settingsLink = document.createElement('button');\n        settingsLink.textContent = i18nString(UIStrings.settingsLink);\n        settingsLink.classList.add('link');\n        UI.ARIAUtils.markAsLink(settingsLink);\n        settingsLink.addEventListener('click', () => {\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightsOptInTeaserSettingsLinkClicked);\n          void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n        });\n        settingsLink.setAttribute('jslog', `${VisualLogging.action('open-ai-settings').track({click: true})}`);\n\n        return html`<main class=\"opt-in-teaser\" jslog=${jslog}>\n          <div class=\"badge\">\n            <devtools-icon .data=${{\n              iconName: 'lightbulb-spark',\n              width: 'var(--sys-size-8)',\n              height: 'var(--sys-size-8)',\n            } as IconButton.Icon.IconData}>\n            </devtools-icon>\n          </div>\n          <div>\n            ${i18n.i18n.getFormatLocalizedString(str_, UIStrings.turnOnInSettings, {PH1: settingsLink})}\n            ${this.#renderLearnMoreAboutInsights()}\n          </div>\n        </main>`;\n      }\n      case State.NOT_LOGGED_IN:\n      case State.SYNC_IS_PAUSED:\n        return html`\n          <main jslog=${jslog}>\n            <div class=\"error\">${i18nString(UIStrings.notLoggedIn)}</div>\n          </main>`;\n      case State.OFFLINE:\n        return html`\n          <main jslog=${jslog}>\n            <div class=\"error\">${i18nString(UIStrings.offline)}</div>\n          </main>`;\n    }\n    // clang-format on\n  }\n\n  #renderDisclaimer(): Lit.LitTemplate {\n    const noLogging = Root.Runtime.hostConfig.aidaAvailability?.enterprisePolicyValue ===\n        Root.Runtime.GenAiEnterprisePolicyValue.ALLOW_WITHOUT_LOGGING;\n\n    // clang-format off\n    return html`<span>\n      AI tools may generate inaccurate info that doesn't represent Google's views.\n      ${noLogging\n        ? 'The content you submit and that is generated by this feature will not be used to improve Google’s AI models.'\n        : 'Data sent to Google may be seen by human reviewers to improve this feature.'}\n      <button class=\"link\" role=\"link\" @click=${() => UI.ViewManager.ViewManager.instance().showView('chrome-ai')}\n        jslog=${VisualLogging.action('open-ai-settings').track({click: true})}\n      >Open settings</button>\n      or\n      <x-link href=${LEARNMORE_URL} class=\"link\" jslog=${VisualLogging.link('learn-more').track({click: true})}>learn more</x-link>\n    </span>`;\n    // clang-format on\n  }\n\n  #renderFooter(): Lit.LitTemplate {\n    const showThumbsUpDownButtons = !(Root.Runtime.hostConfig.aidaAvailability?.disallowLogging ?? true);\n    const disclaimer = this.#renderDisclaimer();\n    // clang-format off\n    switch (this.#state.type) {\n      case State.LOADING:\n      case State.SETTING_IS_NOT_TRUE:\n        return Lit.nothing;\n      case State.ERROR:\n      case State.OFFLINE:\n        return html`<footer jslog=${VisualLogging.section('footer')}>\n          <div class=\"disclaimer\">\n            ${disclaimer}\n          </div>\n        </footer>`;\n      case State.NOT_LOGGED_IN:\n      case State.SYNC_IS_PAUSED:\n        return html`<footer jslog=${VisualLogging.section('footer')}>\n        <div class=\"filler\"></div>\n        <div>\n          <devtools-button\n            @click=${this.#onGoToSignIn}\n            .data=${\n              {\n                variant: Buttons.Button.Variant.PRIMARY,\n                jslogContext: 'update-settings',\n              } as Buttons.Button.ButtonData\n            }\n          >\n            ${UIStrings.signIn}\n          </devtools-button>\n        </div>\n      </footer>`;\n      case State.CONSENT_REMINDER:\n        return html`<footer jslog=${VisualLogging.section('footer')}>\n          <div class=\"filler\"></div>\n          <div class=\"buttons\">\n            <devtools-button\n              @click=${() => {\n                Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightsReminderTeaserSettingsLinkClicked);\n                void UI.ViewManager.ViewManager.instance().showView('chrome-ai');\n              }}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.TONAL,\n                  jslogContext: 'settings',\n                  title: 'Settings',\n                } as Buttons.Button.ButtonData\n              }\n            >\n              Settings\n            </devtools-button>\n            <devtools-button\n              class='continue-button'\n              @click=${this.#onConsentReminderConfirmed}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.PRIMARY,\n                  jslogContext: 'continue',\n                  title: 'continue',\n                } as Buttons.Button.ButtonData\n              }\n              >\n              Continue\n            </devtools-button>\n          </div>\n        </footer>`;\n      case State.INSIGHT:\n        return html`<footer jslog=${VisualLogging.section('footer')}>\n        <div class=\"disclaimer\">\n          ${disclaimer}\n        </div>\n        <div class=\"filler\"></div>\n        <div class=\"rating\">\n          ${showThumbsUpDownButtons ? html`\n            <devtools-button\n              data-rating=${'true'}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.ICON_TOGGLE,\n                  size: Buttons.Button.Size.SMALL,\n                  iconName: 'thumb-up',\n                  toggledIconName: 'thumb-up',\n                  toggleOnClick: false,\n                  toggleType: Buttons.Button.ToggleType.PRIMARY,\n                  disabled: this.#selectedRating !== undefined,\n                  toggled: this.#selectedRating === true,\n                  title: i18nString(UIStrings.goodResponse),\n                  jslogContext: 'thumbs-up',\n                } as Buttons.Button.ButtonData\n              }\n              @click=${this.#onRating}\n            ></devtools-button>\n            <devtools-button\n              data-rating=${'false'}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.ICON_TOGGLE,\n                  size: Buttons.Button.Size.SMALL,\n                  iconName: 'thumb-down',\n                  toggledIconName: 'thumb-down',\n                  toggleOnClick: false,\n                  toggleType: Buttons.Button.ToggleType.PRIMARY,\n                  disabled: this.#selectedRating !== undefined,\n                  toggled: this.#selectedRating === false,\n                  title: i18nString(UIStrings.badResponse),\n                  jslogContext: 'thumbs-down',\n                } as Buttons.Button.ButtonData\n              }\n              @click=${this.#onRating}\n            ></devtools-button>\n          ` : Lit.nothing}\n          <devtools-button\n            .data=${\n              {\n                variant: Buttons.Button.Variant.ICON,\n                size: Buttons.Button.Size.SMALL,\n                iconName: 'report',\n                title: i18nString(UIStrings.report),\n                jslogContext: 'report',\n              } as Buttons.Button.ButtonData\n            }\n            @click=${this.#onReport}\n          ></devtools-button>\n        </div>\n\n      </footer>`;\n    }\n    // clang-format on\n  }\n\n  #getHeader(): string {\n    switch (this.#state.type) {\n      case State.NOT_LOGGED_IN:\n      case State.SYNC_IS_PAUSED:\n        return i18nString(UIStrings.signInToUse);\n      case State.OFFLINE:\n        return i18nString(UIStrings.offlineHeader);\n      case State.LOADING:\n        return i18nString(UIStrings.generating);\n      case State.INSIGHT:\n        return i18nString(UIStrings.insight);\n      case State.ERROR:\n        return i18nString(UIStrings.error);\n      case State.CONSENT_REMINDER:\n        return 'Understand console messages with AI';\n      case State.SETTING_IS_NOT_TRUE:\n        return '';  // not reached\n    }\n  }\n\n  #renderSpinner(): Lit.LitTemplate {\n    // clang-format off\n    if (this.#state.type === State.INSIGHT && !this.#state.completed) {\n      return html`<devtools-spinner></devtools-spinner>`;\n    }\n    return Lit.nothing;\n    // clang-format on\n  }\n\n  #renderHeader(): Lit.LitTemplate {\n    if (this.#state.type === State.SETTING_IS_NOT_TRUE) {\n      return Lit.nothing;\n    }\n    const hasIcon = this.#state.type === State.CONSENT_REMINDER;\n    // clang-format off\n    return html`\n      <header>\n        ${hasIcon ? html`\n          <div class=\"header-icon-container\">\n            <devtools-icon .data=${{\n              iconName: 'lightbulb-spark',\n              width: '18px',\n              height: '18px',\n            } as IconButton.Icon.IconData}>\n            </devtools-icon>\n          </div>`\n        : Lit.nothing}\n        <div class=\"filler\">\n          <h2 tabindex=\"-1\">\n            ${this.#getHeader()}\n          </h2>\n          ${this.#renderSpinner()}\n        </div>\n        <div class=\"close-button\">\n          <devtools-button\n            .data=${\n              {\n                variant: Buttons.Button.Variant.ICON,\n                size: Buttons.Button.Size.SMALL,\n                iconName: 'cross',\n                title: i18nString(UIStrings.closeInsight),\n              } as Buttons.Button.ButtonData\n            }\n            jslog=${VisualLogging.close().track({click: true})}\n            @click=${this.#onClose}\n          ></devtools-button>\n        </div>\n      </header>\n    `;\n    // clang-format on\n  }\n\n  #render(): void {\n    // clang-format off\n    render(html`\n      <div class=\"wrapper\" jslog=${VisualLogging.pane('console-insights').track({resize: true})}>\n        <div class=\"animation-wrapper\">\n          ${this.#renderHeader()}\n          ${this.#renderMain()}\n          ${this.#renderFooter()}\n        </div>\n      </div>\n    `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n\n    if (this.#referenceDetailsRef.value) {\n      this.#referenceDetailsRef.value.open = this.#areReferenceDetailsOpen;\n    }\n  }\n}\n\nclass ConsoleInsightSourcesList extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #sources: Source[] = [];\n  #isPageReloadRecommended = false;\n\n  constructor() {\n    super();\n    this.#shadow.adoptedStyleSheets = [listStyles, Input.checkboxStyles];\n  }\n\n  #render(): void {\n    // clang-format off\n     render(html`\n      <ul>\n        ${Directives.repeat(this.#sources, item => item.value, item => {\n          return html`<li><x-link class=\"link\" title=\"${localizeType(item.type)} ${i18nString(UIStrings.opensInNewTab)}\" href=\"data:text/plain,${encodeURIComponent(item.value)}\" jslog=${VisualLogging.link('source-' + item.type).track({click: true})}>\n            <devtools-icon name=\"open-externally\"></devtools-icon>\n            ${localizeType(item.type)}\n          </x-link></li>`;\n        })}\n        ${this.#isPageReloadRecommended ? html`<li class=\"source-disclaimer\">\n          <devtools-icon name=\"warning\"></devtools-icon>\n          ${i18nString(UIStrings.reloadRecommendation)}</li>` : Lit.nothing}\n      </ul>\n    `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n\n  set sources(values: Source[]) {\n    this.#sources = values;\n    this.#render();\n  }\n\n  set isPageReloadRecommended(isPageReloadRecommended: boolean) {\n    this.#isPageReloadRecommended = isPageReloadRecommended;\n    this.#render();\n  }\n}\n\ncustomElements.define('devtools-console-insight', ConsoleInsight);\ncustomElements.define('devtools-console-insight-sources-list', ConsoleInsightSourcesList);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-console-insight': ConsoleInsight;\n    'devtools-console-insight-sources-list': ConsoleInsightSourcesList;\n  }\n}\n"]}