{"version":3,"file":"ConsoleInsight.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/explain/components/ConsoleInsight.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Marked from '../../../third_party/marked/marked.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as MarkdownView from '../../../ui/components/markdown_view/markdown_view.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport {type InsightProvider} from '../InsightProvider.js';\nimport {type PromptBuilder, type Source, SourceType} from '../PromptBuilder.js';\n\nimport styles from './consoleInsight.css.js';\nimport listStyles from './consoleInsightSourcesList.css.js';\n\nconst UIStrings = {\n  /**\n   * @description The title of the insight source \"Console message\".\n   */\n  consoleMessage: 'Console message',\n  /**\n   * @description The title of the insight source \"Stacktrace\".\n   */\n  stackTrace: 'Stacktrace',\n  /**\n   * @description The title of the insight source \"Network request\".\n   */\n  networkRequest: 'Network request',\n  /**\n   * @description The title of the insight source \"Related code\".\n   */\n  relatedCode: 'Related code',\n  /**\n   * @description The title that is shown while the insight is being generated.\n   */\n  generating: 'Coming up with an explanation…',\n  /**\n   * @description The header that indicates that the content shown is a console\n   * insight.\n   */\n  insight: 'Insight',\n  /**\n   * @description The title of the a button that closes the insight pane.\n   */\n  closeInsight: 'Close insight',\n  /**\n   * @description The title of the list of source data that was used to generate the insight.\n   */\n  inputData: 'Data used to create this insight',\n  /**\n   * @description The title of the button that allows submitting positive\n   * feedback about the console insight.\n   */\n  thumbsUp: 'Thumbs up',\n  /**\n   * @description The title of the button that allows submitting negative\n   * feedback about the console insight.\n   */\n  thumbsDown: 'Thumbs down',\n  /**\n   * @description The title of the link that allows submitting more feedback.\n   */\n  submitFeedback: 'Submit feedback',\n  /**\n   * @description The text of the header inside the console insight pane when there was an error generating an insight.\n   */\n  error: 'Something went wrong…',\n  /**\n   * @description Label for screenreaders that is added to the end of the link\n   * title to indicate that the link will be opened in a new tab.\n   */\n  opensInNewTab: '(opens in a new tab)',\n  /**\n   * @description The legal disclaimer for using the Console Insights feature.\n   */\n  disclaimer:\n      'The following data will be sent to Google to find an explanation for the console message. They may be reviewed by humans and used to improve products.',\n  /**\n   * @description The title of the button that records the consent of the user\n   * to send the data to the backend.\n   */\n  consentButton: 'Continue',\n  /**\n   * @description The title of a link that allows the user to learn more about\n   * the feature.\n   */\n  learnMore: 'Learn more about AI in DevTools',\n  /**\n   * @description The title of the message when the console insight is not available for some reason.\n   */\n  notAvailable: 'Console insights is not available',\n  /**\n   * @description The error message when the user is not logged in into Chrome.\n   */\n  notLoggedIn: 'This feature is only available if you are signed into Chrome with your Google account.',\n  /**\n   * @description The error message when the user is not logged in into Chrome.\n   */\n  syncIsOff: 'This feature is only available if you have Chrome sync turned on.',\n  /**\n   * @description The title of the button that opens Chrome settings.\n   */\n  goToSettings: 'Go to settings',\n  /**\n   * @description Fine print to set expectations for users.\n   */\n  finePrint: 'This is an experimental AI insights tool and won’t always get it right.',\n  /**\n   * @description Message shown when the user is offline.\n   */\n  offline: 'Internet connection is currently not available.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/explain/components/ConsoleInsight.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html, Directives} = LitHtml;\n\nexport class CloseEvent extends Event {\n  static readonly eventName = 'close';\n\n  constructor() {\n    super(CloseEvent.eventName, {composed: true, bubbles: true});\n  }\n}\n\ntype PublicPromptBuilder = Pick<PromptBuilder, 'buildPrompt'>;\ntype PublicInsightProvider = Pick<InsightProvider, 'getInsights'>;\n\nfunction localizeType(sourceType: SourceType): string {\n  switch (sourceType) {\n    case SourceType.MESSAGE:\n      return i18nString(UIStrings.consoleMessage);\n    case SourceType.STACKTRACE:\n      return i18nString(UIStrings.stackTrace);\n    case SourceType.NETWORK_REQUEST:\n      return i18nString(UIStrings.networkRequest);\n    case SourceType.RELATED_CODE:\n      return i18nString(UIStrings.relatedCode);\n  }\n}\n\nconst DOGFOODFEEDBACK_URL = 'http://go/console-insights-experiment-general-feedback';\nconst DOGFOODINFO_URL = 'http://go/console-insights-experiment';\n\nfunction buildRatingFormLink(\n    rating: 'Positive'|'Negative', comment: string, explanation: string, consoleMessage: string, stackTrace: string,\n    relatedCode: string, networkData: string): Platform.DevToolsPath.UrlString {\n  const params: {[key: string]: string} = rating === 'Negative' ? {\n    'entry.1465663861': rating,\n    'entry.1232404632': explanation,\n    'entry.37285503': stackTrace,\n    'entry.542010749': consoleMessage,\n    'entry.420621380': relatedCode,\n    'entry.822323774': networkData,\n  } :\n                                                                  {\n                                                                    'entry.1465663861': rating,\n                                                                    'entry.1805879004': explanation,\n                                                                    'entry.720239045': stackTrace,\n                                                                    'entry.623054399': consoleMessage,\n                                                                    'entry.1520357991': relatedCode,\n                                                                    'entry.1966708581': networkData,\n                                                                  };\n  return `http://go/console-insights-experiment-rating?usp=pp_url&${\n             Object.keys(params)\n                 .map(param => {\n                   return `${param}=${encodeURIComponent(params[param])}`;\n                 })\n                 .join('&')}` as Platform.DevToolsPath.UrlString;\n}\n\nconst enum State {\n  INSIGHT = 'insight',\n  LOADING = 'loading',\n  ERROR = 'error',\n  CONSENT = 'consent',\n  NOT_LOGGED_IN = 'not-logged-in',\n  SYNC_IS_OFF = 'sync-is-off',\n  OFFLINE = 'offline',\n}\n\ntype StateData = {\n  type: State.LOADING,\n  consentGiven: boolean,\n}|{\n  type: State.INSIGHT,\n  explanation: string,\n  tokens: MarkdownView.MarkdownView.MarkdownViewData['tokens'],\n  validMarkdown: boolean,\n  sources: Source[],\n}|{\n  type: State.ERROR,\n  error: string,\n}|{\n  type: State.CONSENT,\n  sources: Source[],\n}|{\n  type: State.NOT_LOGGED_IN,\n}|{\n  type: State.SYNC_IS_OFF,\n}|{\n  type: State.OFFLINE,\n};\n\nexport class ConsoleInsight extends HTMLElement {\n  static async create(promptBuilder: PublicPromptBuilder, insightProvider: PublicInsightProvider, actionTitle?: string):\n      Promise<ConsoleInsight> {\n    const syncData = await new Promise<Host.InspectorFrontendHostAPI.SyncInformation>(resolve => {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.getSyncInformation(syncInfo => {\n        resolve(syncInfo);\n      });\n    });\n\n    return new ConsoleInsight(promptBuilder, insightProvider, actionTitle, syncData);\n  }\n\n  static readonly litTagName = LitHtml.literal`devtools-console-insight`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #actionTitle = '';\n\n  #promptBuilder: PublicPromptBuilder;\n  #insightProvider: PublicInsightProvider;\n  #renderer = new MarkdownRenderer();\n\n  // Main state.\n  #state: StateData;\n\n  // Rating sub-form state.\n  #selectedRating?: boolean;\n\n  constructor(\n      promptBuilder: PublicPromptBuilder, insightProvider: PublicInsightProvider, actionTitle?: string,\n      syncInfo?: Host.InspectorFrontendHostAPI.SyncInformation) {\n    super();\n    this.#promptBuilder = promptBuilder;\n    this.#insightProvider = insightProvider;\n    this.#actionTitle = actionTitle ?? '';\n    this.#state = {\n      type: State.NOT_LOGGED_IN,\n    };\n    if (syncInfo?.accountEmail && syncInfo.isSyncActive) {\n      this.#state = {\n        type: State.LOADING,\n        consentGiven: false,\n      };\n    } else if (!syncInfo?.accountEmail) {\n      this.#state = {\n        type: State.NOT_LOGGED_IN,\n      };\n    } else if (!syncInfo?.isSyncActive) {\n      this.#state = {\n        type: State.SYNC_IS_OFF,\n      };\n    }\n    if (!navigator.onLine) {\n      this.#state = {\n        type: State.OFFLINE,\n      };\n    }\n    this.#render();\n    // Stop keyboard event propagation to avoid Console acting on the events\n    // inside the insight component.\n    this.addEventListener('keydown', e => {\n      e.stopPropagation();\n    });\n    this.addEventListener('keyup', e => {\n      e.stopPropagation();\n    });\n    this.addEventListener('keypress', e => {\n      e.stopPropagation();\n    });\n    this.addEventListener('click', e => {\n      e.stopPropagation();\n    });\n    this.tabIndex = 0;\n    this.focus();\n    // Measure the height of the element after an animation. `--actual-height` can\n    // be used as the `from` value for the subsequent animation.\n    this.addEventListener('animationend', () => {\n      this.style.setProperty('--actual-height', `${this.offsetHeight}px`);\n    });\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [styles];\n    this.classList.add('opening');\n    void this.#generateInsightIfNeeded();\n  }\n\n  #transitionTo(newState: StateData): void {\n    const previousState = this.#state;\n    this.#state = newState;\n    if (newState.type !== previousState.type && previousState.type === State.LOADING) {\n      this.classList.add('loaded');\n    }\n    this.#render();\n  }\n\n  async #generateInsightIfNeeded(): Promise<void> {\n    if (this.#state.type !== State.LOADING) {\n      return;\n    }\n    if (this.#state.consentGiven) {\n      return;\n    }\n    const {sources} = await this.#promptBuilder.buildPrompt();\n    this.#transitionTo({\n      type: State.CONSENT,\n      sources,\n    });\n  }\n\n  #onClose(): void {\n    this.dispatchEvent(new CloseEvent());\n    this.classList.add('closing');\n  }\n\n  #openFeedbackFrom(): void {\n    if (this.#state.type !== State.INSIGHT) {\n      throw new Error('Unexpected state');\n    }\n    const link = buildRatingFormLink(\n        this.#selectedRating ? 'Positive' : 'Negative', this.#shadow.querySelector('textarea')?.value || '',\n        this.#state.explanation,\n        this.#state.sources.filter(s => s.type === SourceType.MESSAGE).map(s => s.value).join('\\n'),\n        this.#state.sources.filter(s => s.type === SourceType.STACKTRACE).map(s => s.value).join('\\n'),\n        this.#state.sources.filter(s => s.type === SourceType.RELATED_CODE).map(s => s.value).join('\\n'),\n        this.#state.sources.filter(s => s.type === SourceType.NETWORK_REQUEST).map(s => s.value).join('\\n'));\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(link);\n  }\n\n  #onRating(event: Event): void {\n    this.#selectedRating = (event.target as HTMLElement).dataset.rating === 'true';\n    if (this.#selectedRating) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightRatedPositive);\n    } else {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightRatedNegative);\n    }\n    this.#openFeedbackFrom();\n  }\n\n  async #onConsent(): Promise<void> {\n    this.#transitionTo({\n      type: State.LOADING,\n      consentGiven: true,\n    });\n    try {\n      const {sources, explanation} = await this.#getInsight();\n      const tokens = this.#validateMarkdown(explanation);\n      const valid = tokens !== false;\n      this.#transitionTo({\n        type: State.INSIGHT,\n        tokens: valid ? tokens : [],\n        validMarkdown: valid,\n        explanation,\n        sources,\n      });\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightGenerated);\n    } catch (err) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightErrored);\n      this.#transitionTo({\n        type: State.ERROR,\n        error: err.message,\n      });\n    }\n  }\n\n  /**\n   * Validates the markdown by trying to render it.\n   */\n  #validateMarkdown(text: string): Marked.Marked.TokensList|false {\n    try {\n      const tokens = Marked.Marked.lexer(text);\n      for (const token of tokens) {\n        this.#renderer.renderToken(token);\n      }\n      return tokens;\n    } catch {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightErroredMarkdown);\n      return false;\n    }\n  }\n\n  async #getInsight(): Promise<{sources: Source[], explanation: string}> {\n    try {\n      const {prompt, sources} = await this.#promptBuilder.buildPrompt();\n      const explanation = await this.#insightProvider.getInsights(prompt);\n      return {sources, explanation};\n    } catch (err) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.InsightErroredApi);\n      throw err;\n    }\n  }\n\n  #onGoToSettings(): void {\n    const rootTarget = SDK.TargetManager.TargetManager.instance().rootTarget();\n    if (rootTarget === null) {\n      return;\n    }\n    const url = 'chrome://settings' as Platform.DevToolsPath.UrlString;\n    void rootTarget.targetAgent().invoke_createTarget({url}).then(result => {\n      if (result.getError()) {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(url);\n      }\n    });\n  }\n\n  #renderMain(): LitHtml.TemplateResult {\n    // clang-format off\n    switch (this.#state.type) {\n      case State.LOADING:\n        return html`<main>\n            <div role=\"presentation\" class=\"loader\" style=\"clip-path: url('#clipPath');\">\n              <svg width=\"100%\" height=\"64\">\n                <clipPath id=\"clipPath\">\n                  <rect x=\"0\" y=\"0\" width=\"100%\" height=\"16\" rx=\"8\"></rect>\n                  <rect x=\"0\" y=\"24\" width=\"100%\" height=\"16\" rx=\"8\"></rect>\n                  <rect x=\"0\" y=\"48\" width=\"100%\" height=\"16\" rx=\"8\"></rect>\n                </clipPath>\n              </svg>\n            </div>\n          </main>`;\n      case State.INSIGHT:\n        return html`\n        <main>\n          ${\n            this.#state.validMarkdown ? html`<${MarkdownView.MarkdownView.MarkdownView.litTagName}\n              .data=${{tokens: this.#state.tokens, renderer: this.#renderer} as MarkdownView.MarkdownView.MarkdownViewData}>\n            </${MarkdownView.MarkdownView.MarkdownView.litTagName}>`: this.#state.explanation\n          }\n          <details style=\"--list-height: ${this.#state.sources.length * 20}px;\">\n            <summary>${i18nString(UIStrings.inputData)}</summary>\n            <${ConsoleInsightSourcesList.litTagName} .sources=${this.#state.sources}>\n            </${ConsoleInsightSourcesList.litTagName}>\n          </details>\n        </main>`;\n      case State.ERROR:\n        return html`\n        <main>\n          <div class=\"error\">${this.#state.error}</div>\n        </main>`;\n      case State.CONSENT:\n        return html`\n          <main>\n            <p>${i18nString(UIStrings.disclaimer)}</p>\n            <${ConsoleInsightSourcesList.litTagName} .sources=${this.#state.sources}>\n            </${ConsoleInsightSourcesList.litTagName}>\n          </main>\n        `;\n      case State.NOT_LOGGED_IN:\n        return html`\n          <main>\n            <div class=\"error\">${i18nString(UIStrings.notLoggedIn)}</div>\n          </main>`;\n      case State.SYNC_IS_OFF:\n        return html`\n          <main>\n            <div class=\"error\">${i18nString(UIStrings.syncIsOff)}</div>\n          </main>`;\n      case State.OFFLINE:\n        return html`\n          <main>\n            <div class=\"error\">${i18nString(UIStrings.offline)}</div>\n          </main>`;\n    }\n    // clang-format on\n  }\n\n  #renderFooter(): LitHtml.LitTemplate {\n    // clang-format off\n    switch (this.#state.type) {\n      case State.LOADING:\n      case State.ERROR:\n      case State.OFFLINE:\n        return LitHtml.nothing;\n      case State.NOT_LOGGED_IN:\n      case State.SYNC_IS_OFF:\n        return html`<footer>\n        <div class=\"filler\"></div>\n        <div>\n          <${Buttons.Button.Button.litTagName}\n            @click=${this.#onGoToSettings}\n            .data=${\n              {\n                variant: Buttons.Button.Variant.PRIMARY,\n              } as Buttons.Button.ButtonData\n            }\n          >\n            ${UIStrings.goToSettings}\n          </${Buttons.Button.Button.litTagName}>\n        </div>\n      </footer>`;\n      case State.CONSENT:\n        return html`<footer>\n          <div class=\"disclaimer\">\n            <span>${i18nString(UIStrings.finePrint)}</span>\n            <span><x-link href=${DOGFOODINFO_URL} class=\"link\">${i18nString(UIStrings.learnMore)}</x-link></span>\n          </div>\n          <div class=\"filler\"></div>\n          <div>\n            <${Buttons.Button.Button.litTagName}\n              class=\"consent-button\"\n              @click=${this.#onConsent}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.PRIMARY,\n                  iconName: 'lightbulb-spark',\n                } as Buttons.Button.ButtonData\n              }\n            >\n              ${UIStrings.consentButton}\n            </${Buttons.Button.Button.litTagName}>\n          </div>\n        </footer>`;\n      case State.INSIGHT:\n        return html`<footer>\n        <div class=\"disclaimer\">\n          <span>${i18nString(UIStrings.finePrint)}</span>\n          <span><x-link href=${DOGFOODINFO_URL} class=\"link\">${i18nString(UIStrings.learnMore)}</x-link> - <x-link href=${DOGFOODFEEDBACK_URL} class=\"link\">${i18nString(UIStrings.submitFeedback)}</x-link></span>\n        </div>\n        <div class=\"filler\"></div>\n        <div class=\"rating\">\n          <${Buttons.Button.Button.litTagName}\n            data-rating=${'true'}\n            .data=${\n              {\n                variant: Buttons.Button.Variant.ROUND,\n                size: Buttons.Button.Size.SMALL,\n                iconName: 'thumb-up',\n                active: this.#selectedRating,\n                title: i18nString(UIStrings.thumbsUp),\n              } as Buttons.Button.ButtonData\n            }\n            @click=${this.#onRating}\n          ></${Buttons.Button.Button.litTagName}>\n          <${Buttons.Button.Button.litTagName}\n            data-rating=${'false'}\n            .data=${\n              {\n                variant: Buttons.Button.Variant.ROUND,\n                size: Buttons.Button.Size.SMALL,\n                iconName: 'thumb-down',\n                active: this.#selectedRating !== undefined && !this.#selectedRating,\n                title: i18nString(UIStrings.thumbsDown),\n              } as Buttons.Button.ButtonData\n            }\n            @click=${this.#onRating}\n          ></${Buttons.Button.Button.litTagName}>\n        </div>\n\n      </footer>`;\n    }\n    // clang-format on\n  }\n\n  #getHeader(): string {\n    switch (this.#state.type) {\n      case State.SYNC_IS_OFF:\n      case State.NOT_LOGGED_IN:\n      case State.OFFLINE:\n        return i18nString(UIStrings.notAvailable);\n      case State.LOADING:\n        return i18nString(UIStrings.generating);\n      case State.INSIGHT:\n        return i18nString(UIStrings.insight);\n      case State.ERROR:\n        return i18nString(UIStrings.error);\n      case State.CONSENT:\n        return this.#actionTitle;\n    }\n  }\n\n  #render(): void {\n    // clang-format off\n    render(html`\n      <div class=\"wrapper\">\n        <header>\n          <div class=\"filler\">\n            <h2>\n              ${this.#getHeader()}\n            </h2>\n          </div>\n          <div>\n            <${Buttons.Button.Button.litTagName}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.ROUND,\n                  size: Buttons.Button.Size.SMALL,\n                  iconName: 'cross',\n                  title: i18nString(UIStrings.closeInsight),\n                } as Buttons.Button.ButtonData\n              }\n              jslog=${VisualLogging.close().track({click: true})}\n              @click=${this.#onClose}\n            ></${Buttons.Button.Button.litTagName}>\n          </div>\n        </header>\n        ${this.#renderMain()}\n        ${this.#renderFooter()}\n      </div>\n    `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n}\n\nclass ConsoleInsightSourcesList extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-console-insight-sources-list`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #sources: Source[] = [];\n\n  constructor() {\n    super();\n    this.#shadow.adoptedStyleSheets = [listStyles];\n  }\n\n  #render(): void {\n    // clang-format off\n     render(html`\n      <ul>\n        ${Directives.repeat(this.#sources, item => item.value, item => {\n          return html`<li><x-link class=\"link\" title=\"${localizeType(item.type)} ${i18nString(UIStrings.opensInNewTab)}\" href=${`data:text/plain,${encodeURIComponent(item.value)}`}>\n            <${IconButton.Icon.Icon.litTagName} name=\"open-externally\"></${IconButton.Icon.Icon.litTagName}>\n            ${localizeType(item.type)}\n          </x-link></li>`;\n        })}\n      </ul>\n    `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n\n  set sources(values: Source[]) {\n    this.#sources = values;\n    this.#render();\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-console-insight', ConsoleInsight);\nComponentHelpers.CustomElements.defineComponent('devtools-console-insight-sources-list', ConsoleInsightSourcesList);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-console-insight': ConsoleInsight;\n    'devtools-console-insight-sources-list': ConsoleInsightSourcesList;\n  }\n}\n\nexport class MarkdownRenderer extends MarkdownView.MarkdownView.MarkdownLitRenderer {\n  override renderToken(token: Marked.Marked.Token): LitHtml.TemplateResult {\n    const template = this.templateForToken(token);\n    if (template === null) {\n      return LitHtml.html`${token.raw}`;\n    }\n    return template;\n  }\n\n  override templateForToken(token: Marked.Marked.Token): LitHtml.TemplateResult|null {\n    switch (token.type) {\n      case 'heading':\n        return html`<strong>${this.renderText(token)}</strong>`;\n      case 'link':\n      case 'image':\n        return LitHtml.html`${UI.XLink.XLink.create(token.href, token.text, undefined, undefined, 'token')}`;\n    }\n    return super.templateForToken(token);\n  }\n}\n"]}