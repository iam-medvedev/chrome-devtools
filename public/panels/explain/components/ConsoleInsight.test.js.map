{"version":3,"file":"ConsoleInsight.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/explain/components/ConsoleInsight.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {dispatchClickEvent, renderElementIntoDOM} from '../../../../test/unittests/front_end/helpers/DOMHelpers.js';\nimport {describeWithLocale} from '../../../../test/unittests/front_end/helpers/EnvironmentHelpers.js';\nimport * as Host from '../../../core/host/host.js';\nimport type * as Marked from '../../../third_party/marked/marked.js';\nimport * as Explain from '../explain.js';\n\nconst {assert} = chai;\n\ndescribeWithLocale('ConsoleInsight', () => {\n  describe('Markdown renderer', () => {\n    it('renders link as an x-link', () => {\n      const renderer = new Explain.MarkdownRenderer();\n      const result =\n          renderer.renderToken({type: 'link', text: 'learn more', href: 'exampleLink'} as Marked.Marked.Token);\n      assert((result.values[0] as HTMLElement).tagName === 'X-LINK');\n    });\n    it('renders images as an x-link', () => {\n      const renderer = new Explain.MarkdownRenderer();\n      const result =\n          renderer.renderToken({type: 'image', text: 'learn more', href: 'exampleLink'} as Marked.Marked.Token);\n      assert((result.values[0] as HTMLElement).tagName === 'X-LINK');\n    });\n    it('renders headers as a strong element', () => {\n      const renderer = new Explain.MarkdownRenderer();\n      const result = renderer.renderToken({type: 'heading', text: 'learn more'} as Marked.Marked.Token);\n      assert(result.strings.join('').includes('<strong>'));\n    });\n    it('renders unsupported tokens', () => {\n      const renderer = new Explain.MarkdownRenderer();\n      const result = renderer.renderToken({type: 'html', raw: '<!DOCTYPE html>'} as Marked.Marked.Token);\n      assert(result.values.join('').includes('<!DOCTYPE html>'));\n    });\n  });\n\n  describe('ConsoleInsight', () => {\n    function getTestAidaClient() {\n      return {\n        async *\n            fetch() {\n              yield {explanation: 'test', metadata: {}};\n            },\n      };\n    }\n\n    function getTestPromptBuilder() {\n      return {\n        async buildPrompt() {\n          return {\n            prompt: '',\n            sources: [\n              {\n                type: Explain.SourceType.MESSAGE,\n                value: 'error message',\n              },\n            ],\n          };\n        },\n      };\n    }\n\n    async function drainMicroTasks() {\n      await new Promise(resolve => setTimeout(resolve, 0));\n    }\n\n    it('shows the consent flow for signed-in users', async () => {\n      const component = new Explain.ConsoleInsight(getTestPromptBuilder(), getTestAidaClient(), '', {\n        isSyncActive: true,\n        accountEmail: 'some-email',\n      });\n      renderElementIntoDOM(component);\n      await drainMicroTasks();\n      // Consent button is present.\n      assert(component.shadowRoot!.querySelector('.consent-button'));\n    });\n\n    it('consent can be accepted', async () => {\n      const component = new Explain.ConsoleInsight(getTestPromptBuilder(), getTestAidaClient(), '', {\n        isSyncActive: true,\n        accountEmail: 'some-email',\n      });\n      renderElementIntoDOM(component);\n      await drainMicroTasks();\n      dispatchClickEvent(component.shadowRoot!.querySelector('.consent-button')!, {\n        bubbles: true,\n        composed: true,\n      });\n      // Expected to be rendered in the next task.\n      await new Promise(resolve => setTimeout(resolve, 0));\n      // Rating buttons are shown.\n      assert(component.shadowRoot!.querySelector('.rating'));\n    });\n\n    const reportsRating = (positive: boolean) => async () => {\n      const openInNewTab = sinon.stub(Host.InspectorFrontendHost.InspectorFrontendHostInstance, 'openInNewTab');\n      const actionTaken = sinon.stub(Host.userMetrics, 'actionTaken');\n      const registerAidaClientEvent =\n          sinon.stub(Host.InspectorFrontendHost.InspectorFrontendHostInstance, 'registerAidaClientEvent');\n\n      const component = new Explain.ConsoleInsight(getTestPromptBuilder(), getTestAidaClient(), '', {\n        isSyncActive: true,\n        accountEmail: 'some-email',\n      });\n      renderElementIntoDOM(component);\n      await drainMicroTasks();\n      dispatchClickEvent(component.shadowRoot!.querySelector('.consent-button')!, {\n        bubbles: true,\n        composed: true,\n      });\n      // Expected to be rendered in the next task.\n      await new Promise(resolve => setTimeout(resolve, 0));\n      dispatchClickEvent(component.shadowRoot!.querySelector(`.rating [data-rating=${positive}]`)!, {\n        bubbles: true,\n        composed: true,\n      });\n\n      assert(openInNewTab.calledOnce);\n      assert.include(openInNewTab.firstCall.firstArg, positive ? 'Positive' : 'Negative');\n      assert(registerAidaClientEvent.calledOnce);\n      assert.include(registerAidaClientEvent.firstCall.firstArg, positive ? 'POSITIVE' : 'NEGATIVE');\n      assert(actionTaken.calledWith(\n          positive ? Host.UserMetrics.Action.InsightRatedPositive : Host.UserMetrics.Action.InsightRatedNegative));\n    };\n\n    it('reports positive rating', reportsRating(true));\n    it('reports negative rating', reportsRating(false));\n\n    it('report if the user is not logged in', async () => {\n      const component = new Explain.ConsoleInsight(getTestPromptBuilder(), getTestAidaClient(), '', {\n        isSyncActive: false,\n      });\n      renderElementIntoDOM(component);\n      await drainMicroTasks();\n      const content = component.shadowRoot!.querySelector('main')!.innerText.trim();\n      assert.strictEqual(\n          content, 'This feature is only available if you are signed into Chrome with your Google account.');\n    });\n\n    it('report if the sync is not enabled', async () => {\n      const component = new Explain.ConsoleInsight(getTestPromptBuilder(), getTestAidaClient(), '', {\n        isSyncActive: false,\n        accountEmail: 'some-email',\n      });\n      renderElementIntoDOM(component);\n      await drainMicroTasks();\n      const content = component.shadowRoot!.querySelector('main')!.innerText.trim();\n      assert.strictEqual(content, 'This feature is only available if you have Chrome sync turned on.');\n    });\n\n    it('report if the navigator is offline', async () => {\n      const navigatorDescriptor = Object.getOwnPropertyDescriptor(globalThis, 'navigator')!;\n      Object.defineProperty(globalThis, 'navigator', {\n        get() {\n          return {onLine: false};\n        },\n      });\n\n      try {\n        const component = new Explain.ConsoleInsight(getTestPromptBuilder(), getTestAidaClient(), '', {\n          isSyncActive: false,\n          accountEmail: 'some-email',\n        });\n        renderElementIntoDOM(component);\n        await drainMicroTasks();\n        const content = component.shadowRoot!.querySelector('main')!.innerText.trim();\n        assert.strictEqual(content, 'Internet connection is currently not available.');\n      } finally {\n        Object.defineProperty(globalThis, 'navigator', navigatorDescriptor);\n      }\n    });\n  });\n});\n"]}