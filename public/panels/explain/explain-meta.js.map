{
  "version": 3,
  "sources": ["explain-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as Root from '../../core/root/root.js';\nimport * as Console from '../../panels/console/console.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n   *@description Message to offer insights for a console error message\n   */\n  explainThisError: 'Understand this error',\n  /**\n   *@description Message to offer insights for a console warning message\n   */\n  explainThisWarning: 'Understand this warning',\n  /**\n   *@description Message to offer insights for a console message\n   */\n  explainThisMessage: 'Understand this message',\n  /**\n   * @description The setting title to enable the console insights feature via\n   * the settings tab.\n   */\n  enableConsoleInsights: 'Understand console messages with AI',\n  /**\n   * @description Message shown to the user if the DevTools locale is not\n   * supported.\n   */\n  wrongLocale: 'To use this feature, set your language preference to English in DevTools settings.',\n  /**\n   * @description Message shown to the user if the user's region is not\n   * supported.\n   */\n  geoRestricted: 'This feature is unavailable in your region.',\n  /**\n   * @description Message shown to the user if the enterprise policy does\n   * not allow this feature.\n   */\n  policyRestricted: 'This setting is managed by your administrator.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/explain/explain-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst setting = 'console-insights-enabled';\n\nconst actions = [\n  {\n    actionId: 'explain.console-message.hover',\n    title: i18nLazyString(UIStrings.explainThisMessage),\n    contextTypes(): [typeof Console.ConsoleViewMessage.ConsoleViewMessage] {\n      return [Console.ConsoleViewMessage.ConsoleViewMessage];\n    },\n  },\n  {\n    actionId: 'explain.console-message.context.error',\n    title: i18nLazyString(UIStrings.explainThisError),\n    contextTypes(): [] {\n      return [];\n    },\n  },\n  {\n    actionId: 'explain.console-message.context.warning',\n    title: i18nLazyString(UIStrings.explainThisWarning),\n    contextTypes(): [] {\n      return [];\n    },\n  },\n  {\n    actionId: 'explain.console-message.context.other',\n    title: i18nLazyString(UIStrings.explainThisMessage),\n    contextTypes(): [] {\n      return [];\n    },\n  },\n];\n\nfunction isLocaleRestricted(): boolean {\n  const devtoolsLocale = i18n.DevToolsLocale.DevToolsLocale.instance();\n  return !devtoolsLocale.locale.startsWith('en-');\n}\n\nfunction isGeoRestricted(config?: Root.Runtime.HostConfig): boolean {\n  return config?.aidaAvailability?.blockedByGeo === true;\n}\n\nfunction isPolicyRestricted(config?: Root.Runtime.HostConfig): boolean {\n  return config?.aidaAvailability?.blockedByEnterprisePolicy === true;\n}\n\nfunction isFeatureEnabled(config?: Root.Runtime.HostConfig): boolean {\n  return (config?.aidaAvailability?.enabled && config?.devToolsConsoleInsights?.enabled) === true;\n}\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.AI,\n  settingName: setting,\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  title: i18nLazyString(UIStrings.enableConsoleInsights),\n  defaultValue: false,\n  reloadRequired: false,\n  condition: config => isFeatureEnabled(config),\n  disabledCondition: config => {\n    const reasons: Platform.UIString.LocalizedString[] = [];\n    if (isGeoRestricted(config)) {\n      reasons.push(i18nString(UIStrings.geoRestricted));\n    }\n    if (isPolicyRestricted(config)) {\n      reasons.push(i18nString(UIStrings.policyRestricted));\n    }\n    if (isLocaleRestricted()) {\n      reasons.push(i18nString(UIStrings.wrongLocale));\n    }\n    if (reasons.length > 0) {\n      return {disabled: true, reasons};\n    }\n    return {disabled: false};\n  },\n});\n\nfor (const action of actions) {\n  UI.ActionRegistration.registerActionExtension({\n    ...action,\n    category: UI.ActionRegistration.ActionCategory.CONSOLE,\n    async loadActionDelegate() {\n      const Explain = await import('./explain.js');\n      return new Explain.ActionDelegate();\n    },\n    condition: config => {\n      return isFeatureEnabled(config) && !isPolicyRestricted(config) && !isGeoRestricted(config);\n    },\n  });\n}\n"],
  "mappings": ";AAIA,YAAY,YAAY;AACxB,YAAY,UAAU;AAGtB,YAAY,aAAa;AACzB,YAAY,QAAQ;AAEpB,IAAM,YAAY;;;;EAIhB,kBAAkB;;;;EAIlB,oBAAoB;;;;EAIpB,oBAAoB;;;;;EAKpB,uBAAuB;;;;;EAKvB,aAAa;;;;;EAKb,eAAe;;;;;EAKf,kBAAkB;;AAEpB,IAAM,OAAY,UAAK,kBAAkB,kCAAkC,SAAS;AACpF,IAAM,iBAAsB,UAAK,iCAAiC,KAAK,QAAW,IAAI;AACtF,IAAM,aAAkB,UAAK,mBAAmB,KAAK,QAAW,IAAI;AAEpE,IAAM,UAAU;AAEhB,IAAM,UAAU;EACd;IACE,UAAU;IACV,OAAO,eAAe,UAAU,kBAAkB;IAClD,eAAY;AACV,aAAO,CAAS,2BAAmB,kBAAkB;IACvD;;EAEF;IACE,UAAU;IACV,OAAO,eAAe,UAAU,gBAAgB;IAChD,eAAY;AACV,aAAO,CAAA;IACT;;EAEF;IACE,UAAU;IACV,OAAO,eAAe,UAAU,kBAAkB;IAClD,eAAY;AACV,aAAO,CAAA;IACT;;EAEF;IACE,UAAU;IACV,OAAO,eAAe,UAAU,kBAAkB;IAClD,eAAY;AACV,aAAO,CAAA;IACT;;;AAIJ,SAAS,qBAAkB;AACzB,QAAM,iBAAsB,oBAAe,eAAe,SAAQ;AAClE,SAAO,CAAC,eAAe,OAAO,WAAW,KAAK;AAChD;AAEA,SAAS,gBAAgB,QAAgC;AACvD,SAAO,QAAQ,kBAAkB,iBAAiB;AACpD;AAEA,SAAS,mBAAmB,QAAgC;AAC1D,SAAO,QAAQ,kBAAkB,8BAA8B;AACjE;AAEA,SAAS,iBAAiB,QAAgC;AACxD,UAAQ,QAAQ,kBAAkB,WAAW,QAAQ,yBAAyB,aAAa;AAC7F;AAEO,gBAAS,yBAAyB;EACvC,UAAQ;EACR,aAAa;EACb,aAAW;EACX,OAAO,eAAe,UAAU,qBAAqB;EACrD,cAAc;EACd,gBAAgB;EAChB,WAAW,YAAU,iBAAiB,MAAM;EAC5C,mBAAmB,YAAS;AAC1B,UAAM,UAA+C,CAAA;AACrD,QAAI,gBAAgB,MAAM,GAAG;AAC3B,cAAQ,KAAK,WAAW,UAAU,aAAa,CAAC;IAClD;AACA,QAAI,mBAAmB,MAAM,GAAG;AAC9B,cAAQ,KAAK,WAAW,UAAU,gBAAgB,CAAC;IACrD;AACA,QAAI,mBAAkB,GAAI;AACxB,cAAQ,KAAK,WAAW,UAAU,WAAW,CAAC;IAChD;AACA,QAAI,QAAQ,SAAS,GAAG;AACtB,aAAO,EAAC,UAAU,MAAM,QAAO;IACjC;AACA,WAAO,EAAC,UAAU,MAAK;EACzB;CACD;AAED,WAAW,UAAU,SAAS;AAC5B,EAAG,sBAAmB,wBAAwB;IAC5C,GAAG;IACH,UAAQ;IACR,MAAM,qBAAkB;AACtB,YAAM,UAAU,MAAM,OAAO,cAAc;AAC3C,aAAO,IAAI,QAAQ,eAAc;IACnC;IACA,WAAW,YAAS;AAClB,aAAO,iBAAiB,MAAM,KAAK,CAAC,mBAAmB,MAAM,KAAK,CAAC,gBAAgB,MAAM;IAC3F;GACD;AACH;",
  "names": []
}
