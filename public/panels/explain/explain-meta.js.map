{"version":3,"file":"explain-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/explain/explain-meta.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Console from '../../panels/console/console.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n   *@description Message to offer insights for a console error message\n   */\n  explainThisError: 'Understand this error',\n  /**\n   *@description Message to offer insights for a console warning message\n   */\n  explainThisWarning: 'Understand this warning',\n  /**\n   *@description Message to offer insights for a console message\n   */\n  explainThisMessage: 'Understand this message',\n  /**\n   * @description The setting title to enable the console insights feature via\n   * the settings tab.\n   */\n  enableConsoleInsights: 'Understand console messages with AI',\n  /**\n   * @description Message shown to the user if the DevTools locale is not\n   * supported.\n   */\n  wrongLocale: 'To use this feature, update your Language preference in DevTools Settings to English.',\n  /**\n   * @description Message shown to the user if the age check is not successful.\n   */\n  ageRestricted: 'This feature is only available to users who are 18 years of age or older.',\n  /**\n   * @description Message shown to the user if the user's region is not\n   * supported.\n   */\n  geoRestricted: 'This feature is unavailable in your region.',\n  /**\n   * @description Message shown to the user if the enterprise policy does\n   * not allow this feature.\n   */\n  policyRestricted: 'Your organization turned off this feature. Contact your administrators for more information.',\n  /**\n   * @description  Message shown to the user if the feature roll out is currently happening.\n   */\n  rolloutRestricted: 'This feature is currently being rolled out. Stay tuned.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/explain/explain-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst setting = 'console-insights-enabled';\n\nconst actions = [\n  {\n    actionId: 'explain.console-message.hover',\n    title: i18nLazyString(UIStrings.explainThisMessage),\n    contextTypes(): [typeof Console.ConsoleViewMessage.ConsoleViewMessage] {\n      return [Console.ConsoleViewMessage.ConsoleViewMessage];\n    },\n  },\n  {\n    actionId: 'explain.console-message.context.error',\n    title: i18nLazyString(UIStrings.explainThisError),\n    contextTypes(): [] {\n      return [];\n    },\n  },\n  {\n    actionId: 'explain.console-message.context.warning',\n    title: i18nLazyString(UIStrings.explainThisWarning),\n    contextTypes(): [] {\n      return [];\n    },\n  },\n  {\n    actionId: 'explain.console-message.context.other',\n    title: i18nLazyString(UIStrings.explainThisMessage),\n    contextTypes(): [] {\n      return [];\n    },\n  },\n];\n\nfunction isSettingAvailable(): boolean {\n  return isFeatureEnabled();\n}\n\nfunction isActionAvailable(): boolean {\n  return isSettingAvailable() && !isAgeRestricted() && !isLocaleRestricted() && !isGeoRestricted() &&\n      !isPolicyRestricted() && !isRolloutRestricted();\n}\n\nfunction isLocaleRestricted(): boolean {\n  const devtoolsLocale = i18n.DevToolsLocale.DevToolsLocale.instance();\n  return !devtoolsLocale.locale.startsWith('en-');\n}\n\nfunction isAgeRestricted(): boolean {\n  return Root.Runtime.Runtime.queryParam('ci_blockedByAge') === 'true';\n}\n\nfunction isRolloutRestricted(): boolean {\n  return Root.Runtime.Runtime.queryParam('ci_blockedByRollout') === 'true';\n}\n\nfunction isGeoRestricted(): boolean {\n  return Root.Runtime.Runtime.queryParam('ci_blockedByGeo') === 'true';\n}\n\nfunction isPolicyRestricted(): boolean {\n  return Root.Runtime.Runtime.queryParam('ci_blockedByEnterprisePolicy') === 'true';\n}\n\nfunction isDisabledByDefault(): boolean {\n  return Root.Runtime.Runtime.queryParam('ci_disabledByDefault') === 'true';\n}\n\nfunction isFeatureEnabled(): boolean {\n  return Root.Runtime.Runtime.queryParam('enableAida') === 'true';\n}\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.CONSOLE,\n  settingName: setting,\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  title: i18nLazyString(UIStrings.enableConsoleInsights),\n  defaultValue: isDisabledByDefault() ? false : true,\n  reloadRequired: true,\n  condition: isSettingAvailable,\n  disabledCondition: () => {\n    if (isLocaleRestricted()) {\n      return {disabled: true, reason: i18nString(UIStrings.wrongLocale)};\n    }\n    if (isAgeRestricted()) {\n      return {disabled: true, reason: i18nString(UIStrings.ageRestricted)};\n    }\n    if (isGeoRestricted()) {\n      return {disabled: true, reason: i18nString(UIStrings.geoRestricted)};\n    }\n    if (isPolicyRestricted()) {\n      return {disabled: true, reason: i18nString(UIStrings.policyRestricted)};\n    }\n    if (isRolloutRestricted()) {\n      return {disabled: true, reason: i18nString(UIStrings.rolloutRestricted)};\n    }\n    return {disabled: false};\n  },\n});\n\nfor (const action of actions) {\n  UI.ActionRegistration.registerActionExtension({\n    ...action,\n    setting,\n    category: UI.ActionRegistration.ActionCategory.CONSOLE,\n    async loadActionDelegate() {\n      const Explain = await import('./explain.js');\n      return new Explain.ActionDelegate();\n    },\n    condition: isActionAvailable,\n  });\n}\n"]}