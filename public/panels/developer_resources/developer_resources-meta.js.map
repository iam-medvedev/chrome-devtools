{
  "version": 3,
  "sources": ["developer_resources-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as DeveloperResources from './developer_resources.js';\n\nconst UIStrings = {\n  /**\n   * @description Title for developer resources panel\n   */\n  developerResources: 'Developer resources',\n  /**\n   * @description Command for showing the developer resources panel\n   */\n  showDeveloperResources: 'Show Developer resources',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/developer_resources/developer_resources-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedDeveloperResourcesModule: (typeof DeveloperResources|undefined);\n\nasync function loadDeveloperResourcesModule(): Promise<typeof DeveloperResources> {\n  if (!loadedDeveloperResourcesModule) {\n    loadedDeveloperResourcesModule = await import('./developer_resources.js');\n  }\n  return loadedDeveloperResourcesModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'developer-resources',\n  title: i18nLazyString(UIStrings.developerResources),\n  commandPrompt: i18nLazyString(UIStrings.showDeveloperResources),\n  order: 100,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const DeveloperResources = await loadDeveloperResourcesModule();\n    return new DeveloperResources.DeveloperResourcesView.DeveloperResourcesView();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [SDK.PageResourceLoader.ResourceKey];\n  },\n  destination: Common.Revealer.RevealerDestination.DEVELOPER_RESOURCES_PANEL,\n  async loadRevealer() {\n    const DeveloperResources = await loadDeveloperResourcesModule();\n    return new DeveloperResources.DeveloperResourcesView.DeveloperResourcesRevealer();\n  },\n});\n"],
  "mappings": ";AAIA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,SAAS;AACrB,YAAY,QAAQ;AAIpB,IAAM,YAAY;;;;EAIhB,oBAAoB;;;;EAIpB,wBAAwB;;AAE1B,IAAM,OAAY,UAAK,kBAAkB,0DAA0D,SAAS;AAC5G,IAAM,iBAAsB,UAAK,iCAAiC,KAAK,QAAW,IAAI;AAEtF,IAAI;AAEJ,eAAe,+BAA4B;AACzC,MAAI,CAAC,gCAAgC;AACnC,qCAAiC,MAAM,OAAO,0BAA0B;EAC1E;AACA,SAAO;AACT;AAEG,eAAY,sBAAsB;EACnC,UAAQ;EACR,IAAI;EACJ,OAAO,eAAe,UAAU,kBAAkB;EAClD,eAAe,eAAe,UAAU,sBAAsB;EAC9D,OAAO;EACP,aAAW;EACX,MAAM,WAAQ;AACZ,UAAM,qBAAqB,MAAM,6BAA4B;AAC7D,WAAO,IAAI,mBAAmB,uBAAuB,uBAAsB;EAC7E;CACD;AAEM,gBAAS,iBAAiB;EAC/B,eAAY;AACV,WAAO,CAAK,uBAAmB,WAAW;EAC5C;EACA,aAAoB,gBAAS,oBAAoB;EACjD,MAAM,eAAY;AAChB,UAAM,qBAAqB,MAAM,6BAA4B;AAC7D,WAAO,IAAI,mBAAmB,uBAAuB,2BAA0B;EACjF;CACD;",
  "names": []
}
