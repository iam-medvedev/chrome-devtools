{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/developer_resources/DeveloperResourcesView.ts", "../../../../../../front_end/panels/developer_resources/DeveloperResourcesListView.ts", "developerResourcesListView.css.js", "developerResourcesView.css.js"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/legacy.js';\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {DeveloperResourcesListView} from './DeveloperResourcesListView.js';\nimport developerResourcesViewStyles from './developerResourcesView.css.js';\n\nconst {widgetConfig} = UI.Widget;\nconst {bindToSetting} = UI.SettingsUI;\n\nconst UIStrings = {\n  /**\n   * @description Placeholder for a search field in a toolbar\n   */\n  filterByText: 'Filter by URL and error',\n  /**\n   * @description Tooltip for a checkbox in the toolbar of the developer resources view. The\n   * inspected target is the webpage that DevTools is debugging/inspecting/attached to.\n   */\n  loadHttpsDeveloperResources:\n      'Load `HTTP(S)` developer resources through the website you inspect, not through DevTools',\n  /**\n   * @description Text for a checkbox in the toolbar of the developer resources view. The target is\n   * the webpage that DevTools is debugging/inspecting/attached to. This setting makes it so\n   * developer resources are requested from the webpage itself, and not from the DevTools\n   * application.\n   */\n  enableLoadingThroughTarget: 'Load through website',\n  /**\n   * @description Text for resources load status\n   * @example {1} PH1\n   * @example {1} PH2\n   */\n  resourcesCurrentlyLoading: '{PH1} resources, {PH2} currently loading',\n  /**\n   * @description Status text that appears to tell the developer how many resources were loaded in\n   * total. Resources are files related to the webpage.\n   */\n  resources: '{n, plural, =1 {# resource} other {# resources}}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/developer_resources/DeveloperResourcesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class DeveloperResourcesRevealer implements Common.Revealer.Revealer<SDK.PageResourceLoader.ResourceKey> {\n  async reveal(resourceInitiatorKey: SDK.PageResourceLoader.ResourceKey): Promise<void> {\n    const loader = SDK.PageResourceLoader.PageResourceLoader.instance();\n    const resource = loader.getResourcesLoaded().get(resourceInitiatorKey.key);\n    if (resource) {\n      await UI.ViewManager.ViewManager.instance().showView('developer-resources');\n      const developerResourcesView =\n          await UI.ViewManager.ViewManager.instance().view('developer-resources').widget() as DeveloperResourcesView;\n      return await developerResourcesView.select(resource);\n    }\n  }\n}\n\ninterface ViewInput {\n  onFilterChanged: (e: CustomEvent<string>) => void;\n  items: Iterable<SDK.PageResourceLoader.PageResource>;\n  selectedItem: SDK.PageResourceLoader.PageResource|null;\n  onSelect: (resource: SDK.PageResourceLoader.PageResource|null) => void;\n  filters: TextUtils.TextUtils.ParsedFilter[];\n  numResources: number;\n  numLoading: number;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  // clang-format off\n  render(html`\n    <style>\n      ${developerResourcesViewStyles}\n    </style>\n    <div class=\"vbox flex-auto\" jslog=${VisualLogging.panel('developer-resources').track({resize: true})}>\n      <div class=\"developer-resource-view-toolbar-container\" jslog=${VisualLogging.toolbar()}\n          role=\"toolbar\">\n        <devtools-toolbar class=\"developer-resource-view-toolbar\" role=\"presentation\">\n          <devtools-toolbar-input type=\"filter\" placeholder=${i18nString(UIStrings.filterByText)}\n              @change=${input.onFilterChanged} style=\"flex-grow:1\">\n          </devtools-toolbar-input>\n          <devtools-checkbox\n              title=${i18nString(UIStrings.loadHttpsDeveloperResources)}\n              ${bindToSetting(SDK.PageResourceLoader.getLoadThroughTargetSetting())}>\n            ${i18nString(UIStrings.enableLoadingThroughTarget)}\n          </devtools-checkbox>\n        </devtools-toolbar>\n      </div>\n      <div class=\"developer-resource-view-results\">\n        <devtools-widget\n          .widgetConfig=${widgetConfig(DeveloperResourcesListView, {\n            items: input.items,\n            selectedItem: input.selectedItem,\n            onSelect: input.onSelect,\n            filters: input.filters\n          })}>\n        </devtools-widget>\n      </div>\n      <div class=\"developer-resource-view-toolbar-summary\">\n        <div class=\"developer-resource-view-message\">\n          ${input.numLoading > 0 ?\n              i18nString(UIStrings.resourcesCurrentlyLoading, {PH1: input.numResources, PH2: input.numLoading}) :\n              i18nString(UIStrings.resources, {n: input.numResources})}\n         </div>\n      </div>\n    </div>`, target);\n  // clang-format on\n};\n\nexport class DeveloperResourcesView extends UI.ThrottledWidget.ThrottledWidget {\n  readonly #loader: SDK.PageResourceLoader.PageResourceLoader;\n  readonly #view: View;\n  #selectedItem: SDK.PageResourceLoader.PageResource|null = null;\n  #filters: TextUtils.TextUtils.ParsedFilter[] = [];\n\n  constructor(view: View = DEFAULT_VIEW) {\n    super(true);\n    this.#view = view;\n\n    this.#loader = SDK.PageResourceLoader.PageResourceLoader.instance();\n    this.#loader.addEventListener(SDK.PageResourceLoader.Events.UPDATE, this.update, this);\n    this.update();\n  }\n\n  override async doUpdate(): Promise<void> {\n    const {loading, resources} = this.#loader.getScopedNumberOfResources();\n    const input = {\n      onFilterChanged: (e: CustomEvent<string>) => {\n        this.onFilterChanged(e.detail);\n      },\n      items: this.#loader.getResourcesLoaded().values(),\n      selectedItem: this.#selectedItem,\n      onSelect: (item: SDK.PageResourceLoader.PageResource|null) => {\n        this.#selectedItem = item;\n      },\n      filters: this.#filters,\n      numResources: resources,\n      numLoading: loading,\n    };\n    const output = {};\n    this.#view(input, output, this.contentElement);\n  }\n\n  async select(resource: SDK.PageResourceLoader.PageResource): Promise<void> {\n    await this.lastUpdatePromise;\n    this.#selectedItem = resource;\n    this.update();\n  }\n\n  async selectedItem(): Promise<SDK.PageResourceLoader.PageResource|null> {\n    await this.lastUpdatePromise;\n    return this.#selectedItem;\n  }\n\n  private onFilterChanged(text: string): void {\n    const textFilterRegExp = text ? Platform.StringUtilities.createPlainTextSearchRegex(text, 'i') : null;\n    if (textFilterRegExp) {\n      this.#filters = [\n        {key: 'url,error-message', regex: textFilterRegExp, negative: false},\n      ];\n    } else {\n      this.#filters = [];\n    }\n    this.update();\n  }\n}\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/components/data_grid/data_grid.js';\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives, html, nothing, render} from '../../ui/lit/lit.js';\n\nimport developerResourcesListViewStyles from './developerResourcesListView.css.js';\n\nconst {ref} = Directives;\n\nconst UIStrings = {\n  /**\n   * @description Text for the status of something\n   */\n  status: 'Status',\n  /**\n   * @description Text for web URLs\n   */\n  url: 'URL',\n  /**\n   * @description Text for the initiator of something\n   */\n  initiator: 'Initiator',\n  /**\n   * @description Text in Coverage List View of the Coverage tab\n   */\n  totalBytes: 'Total Bytes',\n  /**\n   * @description Column header. The column contains the time it took to load a resource.\n   */\n  duration: 'Duration',\n  /**\n   * @description Text for errors\n   */\n  error: 'Error',\n  /**\n   * @description Title for the Developer resources tab\n   */\n  developerResources: 'Developer resources',\n  /**\n   * @description Text for a context menu entry\n   */\n  copyUrl: 'Copy URL',\n  /**\n   * @description Text for a context menu entry. Command to copy a URL to the clipboard. The initiator\n   * of a request is the entity that caused this request to be sent.\n   */\n  copyInitiatorUrl: 'Copy initiator URL',\n  /**\n   * @description Text for the status column of a list view\n   */\n  pending: 'pending',\n  /**\n   * @description Text for the status column of a list view\n   */\n  success: 'success',\n  /**\n   * @description Text for the status column of a list view\n   */\n  failure: 'failure',\n  /**\n   * @description Accessible text for the value in bytes in memory allocation.\n   */\n  sBytes: '{n, plural, =1 {# byte} other {# bytes}}',\n  /**\n   * @description Number of resource(s) match\n   */\n  numberOfResourceMatch: '{n, plural, =1 {# resource matches} other {# resources match}}',\n  /**\n   * @description No resource matches\n   */\n  noResourceMatches: 'No resource matches',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/developer_resources/DeveloperResourcesListView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst {withThousandsSeparator} = Platform.NumberUtilities;\n\nexport interface ViewInput {\n  items: SDK.PageResourceLoader.PageResource[];\n  selectedItem: SDK.PageResourceLoader.PageResource|null;\n  highlight: (element: Element|undefined, textContent: string|undefined, columnId: string) => void;\n  filters: TextUtils.TextUtils.ParsedFilter[];\n  onContextMenu: (e: CustomEvent<{menu: UI.ContextMenu.ContextMenu, element: HTMLElement}>) => void;\n  onSelect: (e: CustomEvent<HTMLElement>) => void;\n  onInitiatorMouseEnter: (frameId: Protocol.Page.FrameId|null) => void;\n  onInitiatorMouseLeave: () => void;\n}\n\nexport type View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nconst DEFAULT_VIEW: View = (input, _output, target) => {\n  // clang-format off\n  render(html`\n      <style>${developerResourcesListViewStyles}</style>\n      <devtools-data-grid name=${i18nString(UIStrings.developerResources)} striped class=\"flex-auto\"\n         .filters=${input.filters} @contextmenu=${input.onContextMenu} @selected=${input.onSelect}>\n        <table>\n          <tr>\n            <th id=\"status\" sortable fixed width=\"60px\">\n              ${i18nString(UIStrings.status)}\n            </th>\n            <th id=\"url\" sortable width=\"250px\">\n              ${i18nString(UIStrings.url)}\n            </th>\n            <th id=\"initiator\" sortable width=\"80px\">\n              ${i18nString(UIStrings.initiator)}\n            </th>\n            <th id=\"size\" sortable fixed width=\"80px\" align=\"right\">\n              ${i18nString(UIStrings.totalBytes)}\n            </th>\n            <th id=\"duration\" sortable fixed width=\"80px\" align=\"right\">\n              ${i18nString(UIStrings.duration)}\n            </th>\n            <th id=\"error-message\" sortable width=\"200px\">\n              ${i18nString(UIStrings.error)}\n            </th>\n          </tr>\n          ${input.items.map((item, index) => {\n            const splitURL = /^(.*)(\\/[^/]*)$/.exec(item.url);\n            return html`\n            <tr selected=${(item === input.selectedItem) || nothing}\n                data-url=${item.url ?? nothing}\n                data-initiator-url=${item.initiator.initiatorUrl ?? nothing}\n                data-index=${index}>\n              <td>${item.success === true  ? i18nString(UIStrings.success) :\n                    item.success === false ? i18nString(UIStrings.failure) :\n                                             i18nString(UIStrings.pending)}</td>\n              <td title=${item.url} aria-label=${item.url}>\n                <div aria-hidden=\"true\" part=\"url-outer\"\n                     ${ref(e => input.highlight(e, item.url, 'url'))}>\n                  <div part=\"url-prefix\">${splitURL ? splitURL[1] : item.url}</div>\n                  <div part=\"url-suffix\">${splitURL ? splitURL[2] : ''}</div>\n                </div>\n              </td>\n              <td title=${item.initiator.initiatorUrl || ''}\n                  aria-label=${item.initiator.initiatorUrl || ''}\n                  @mouseenter=${() => input.onInitiatorMouseEnter(item.initiator.frameId)}\n                  @mouseleave=${input.onInitiatorMouseLeave}\n              >${item.initiator.initiatorUrl || ''}</td>\n              <td aria-label=${item.size !== null ? i18nString(UIStrings.sBytes, {n: item.size}) : nothing}\n                  data-value=${item.size ?? nothing}>${\n                item.size !== null ?  html`<span>${withThousandsSeparator(item.size)}</span>` : ''}</td>\n              <td aria-label=${item.duration !== null ? i18n.TimeUtilities.millisToString(item.duration) : nothing}\n                  data-value=${item.duration ?? nothing}>${\n                  item.duration !== null ? html`<span>${i18n.TimeUtilities.millisToString(item.duration)}</span>` : ''}</td>\n              <td class=\"error-message\">\n                ${item.errorMessage ? html`\n                <span ${ref(e => input.highlight(e, item.errorMessage, 'error-message'))}>\n                  ${item.errorMessage}\n                </span>` : nothing}\n              </td>\n            </tr>`;\n          })}\n          </table>\n        </devtools-data-grid>`,\n        target);\n  // clang-format on\n};\n\nexport class DeveloperResourcesListView extends UI.Widget.VBox {\n  #items: SDK.PageResourceLoader.PageResource[] = [];\n  #selectedItem: SDK.PageResourceLoader.PageResource|null = null;\n  #onSelect: ((item: SDK.PageResourceLoader.PageResource|null) => void)|null = null;\n  readonly #view: View;\n  #filters: TextUtils.TextUtils.ParsedFilter[] = [];\n  constructor(element: HTMLElement, view = DEFAULT_VIEW) {\n    super(element, {useShadowDom: true});\n    this.#view = view;\n  }\n\n  set selectedItem(item: SDK.PageResourceLoader.PageResource|null) {\n    this.#selectedItem = item;\n    this.requestUpdate();\n  }\n\n  set onSelect(onSelect: (item: SDK.PageResourceLoader.PageResource|null) => void) {\n    this.#onSelect = onSelect;\n  }\n\n  #populateContextMenu(contextMenu: UI.ContextMenu.ContextMenu, element: HTMLElement): void {\n    const url = element.dataset.url;\n    if (url) {\n      contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyUrl), () => {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(url);\n      }, {jslogContext: 'copy-url'});\n    }\n\n    const initiatorUrl = element.dataset.initiatorUrl;\n    if (initiatorUrl) {\n      contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyInitiatorUrl), () => {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(initiatorUrl);\n      }, {jslogContext: 'copy-initiator-url'});\n    }\n  }\n\n  set items(items: Iterable<SDK.PageResourceLoader.PageResource>) {\n    this.#items = [...items];\n    this.requestUpdate();\n  }\n\n  reset(): void {\n    this.items = [];\n    this.requestUpdate();\n  }\n\n  set filters(filters: TextUtils.TextUtils.ParsedFilter[]) {\n    this.#filters = filters;\n    this.requestUpdate();\n    void this.updateComplete.then(() => {\n      const numberOfResourceMatch =\n          Number(this.contentElement.querySelector('devtools-data-grid')?.getAttribute('aria-rowcount')) ?? 0;\n      let resourceMatch = '';\n      if (numberOfResourceMatch === 0) {\n        resourceMatch = i18nString(UIStrings.noResourceMatches);\n      } else {\n        resourceMatch = i18nString(UIStrings.numberOfResourceMatch, {n: numberOfResourceMatch});\n      }\n      UI.ARIAUtils.LiveAnnouncer.alert(resourceMatch);\n    });\n  }\n\n  override performUpdate(): void {\n    const input = {\n      items: this.#items,\n      selectedItem: this.#selectedItem,\n      filters: this.#filters,\n      highlight: this.#highlight.bind(this),\n      onContextMenu: (e: CustomEvent<{menu: UI.ContextMenu.ContextMenu, element: HTMLElement}>) => {\n        if (e.detail?.element) {\n          this.#populateContextMenu(e.detail.menu, e.detail.element);\n        }\n      },\n      onSelect: (e: CustomEvent<HTMLElement|null>) => {\n        this.#selectedItem = e.detail ? this.#items[Number(e.detail.dataset.index)] : null;\n        this.#onSelect?.(this.#selectedItem);\n      },\n      onInitiatorMouseEnter: (frameId: Protocol.Page.FrameId|null) => {\n        const frame = frameId ? SDK.FrameManager.FrameManager.instance().getFrame(frameId) : null;\n        if (frame) {\n          void frame.highlight();\n        }\n      },\n      onInitiatorMouseLeave: () => {\n        SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n      },\n    };\n    const output = {};\n    this.#view(input, output, this.contentElement);\n  }\n\n  #highlight(element: Element|undefined, textContent: string|undefined, columnId: string): void {\n    if (!element || !textContent) {\n      return;\n    }\n    const highlightContainers =\n        new Set<Element>([...element.querySelectorAll('.filter-highlight')].map(e => e.parentElement as Element));\n    for (const container of highlightContainers) {\n      container.textContent = container.textContent;\n    }\n    const filter = this.#filters.find(filter => filter.key?.split(',')?.includes(columnId));\n    if (!filter?.regex) {\n      return;\n    }\n    const matches = filter.regex.exec(element.textContent ?? '');\n    if (!matches?.length) {\n      return;\n    }\n    const range = new TextUtils.TextRange.SourceRange(matches.index, matches[0].length);\n    UI.UIUtils.highlightRangesWithStyleClass(element, [range], 'filter-highlight');\n    for (const el of element.querySelectorAll('.filter-highlight')) {\n      el.setAttribute('part', 'filter-highlight');\n    }\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2020 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n@scope to (devtools-widget > *) {\n  .data-grid {\n    border: none;\n  }\n\n  ::part(url-outer) {\n    width: 100%;\n    display: inline-flex;\n    justify-content: flex-start;\n  }\n\n  ::part(filter-highlight) {\n    font-weight: bold;\n  }\n\n  ::part(url-prefix) {\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n  }\n\n  ::part(url-suffix) {\n    flex: none;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./developerResourcesListView.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2020 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n  :scope {\n    overflow: hidden;\n  }\n\n  .developer-resource-view-toolbar-container {\n    display: flex;\n    border-bottom: 1px solid var(--sys-color-divider);\n    flex: 0 0 auto;\n  }\n\n  .developer-resource-view-toolbar {\n    width: 100%;\n  }\n\n  .developer-resource-view-toolbar-summary {\n    background-color: var(--sys-color-cdt-base-container);\n    border-top: 1px solid var(--sys-color-divider);\n    padding-left: 5px;\n    flex: 0 0 19px;\n    display: flex;\n    padding-right: 5px;\n  }\n\n  .developer-resource-view-toolbar-summary .developer-resource-view-message {\n    padding-top: 2px;\n    padding-left: 1ex;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n\n  .developer-resource-view-results {\n    overflow-y: auto;\n    display: flex;\n    flex: auto;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./developerResourcesView.css')} */`;"],
  "mappings": "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",
  "names": ["DEFAULT_VIEW", "i18n", "Platform", "SDK", "UI", "html", "render", "filter", "UIStrings", "str_", "i18nString", "DEFAULT_VIEW", "render", "html"]
}
