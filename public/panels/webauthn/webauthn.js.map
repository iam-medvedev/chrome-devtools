{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/webauthn/WebauthnPane.ts", "webauthnPane.css.js"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../ui/legacy/legacy.js';\nimport '../../ui/legacy/components/data_grid/data_grid.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as Input from '../../ui/components/input/input.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport webauthnPaneStyles from './webauthnPane.css.js';\n\nconst {render, html, Directives: {ref, repeat, classMap}} = Lit;\nconst {widgetConfig} = UI.Widget;\n\nconst UIStrings = {\n  /**\n   * @description Label for button that allows user to download the private key related to a credential.\n   */\n  export: 'Export',\n  /**\n   * @description Label for an item to remove something\n   */\n  remove: 'Remove',\n  /**\n   * @description Label for empty credentials table.\n   * @example {navigator.credentials.create()} PH1\n   */\n  noCredentialsTryCallingSFromYour: 'No credentials. Try calling {PH1} from your website.',\n  /**\n   * @description Label for checkbox to toggle the virtual authenticator environment allowing user to interact with software-based virtual authenticators.\n   */\n  enableVirtualAuthenticator: 'Enable virtual authenticator environment',\n  /**\n   * @description Label for ID field for credentials.\n   */\n  id: 'ID',\n  /**\n   * @description Label for field that describes whether a credential is a resident credential.\n   */\n  isResident: 'Is Resident',\n  /**\n   * @description Label for credential field that represents the Relying Party ID that the credential is scoped to.\n   */\n  rpId: 'RP ID',\n  /**\n   * @description Label for a column in a table. A field/unique ID that represents the user a credential is mapped to.\n   */\n  userHandle: 'User Handle',\n  /**\n   * @description Label for signature counter field for credentials which represents the number of successful assertions.\n   * See https://w3c.github.io/webauthn/#signature-counter.\n   */\n  signCount: 'Signature Count',\n  /**\n   * @description Label for column with actions for credentials.\n   */\n  actions: 'Actions',\n  /**\n   * @description Title for the table that holds the credentials that a authenticator has registered.\n   */\n  credentials: 'Credentials',\n  /**\n   * @description Text that shows before the virtual environment is enabled.\n   */\n  noAuthenticator: 'No authenticator set up',\n  /**\n   * @description That that shows before virtual environment is enabled explaining the panel.\n   */\n  useWebauthnForPhishingresistant: 'Use WebAuthn for phishing-resistant authentication.',\n  /**\n   * @description Title for section of interface that allows user to add a new virtual authenticator.\n   */\n  newAuthenticator: 'New authenticator',\n  /**\n   * @description Text for security or network protocol\n   */\n  protocol: 'Protocol',\n  /**\n   * @description Label for input to select which transport option to use on virtual authenticators, e.g. USB or Bluetooth.\n   */\n  transport: 'Transport',\n  /**\n   * @description Label for checkbox that toggles resident key support on virtual authenticators.\n   */\n  supportsResidentKeys: 'Supports resident keys',\n  /**\n   * @description Label for checkbox that toggles large blob support on virtual authenticators. Large blobs are opaque data associated\n   * with a WebAuthn credential that a website can store, like an SSH certificate or a symmetric encryption key.\n   * See https://w3c.github.io/webauthn/#sctn-large-blob-extension\n   */\n  supportsLargeBlob: 'Supports large blob',\n  /**\n   * @description Text to add something\n   */\n  add: 'Add',\n  /**\n   * @description Label for radio button that toggles whether an authenticator is active.\n   */\n  active: 'Active',\n  /**\n   * @description Title for button that enables user to customize name of authenticator.\n   */\n  editName: 'Edit name',\n  /**\n   * @description Placeholder for the input box to customize name of authenticator.\n   */\n  enterNewName: 'Enter new name',\n  /**\n   * @description Title for button that enables user to save name of authenticator after editing it.\n   */\n  saveName: 'Save name',\n  /**\n   * @description Title for a user-added virtual authenticator which is uniquely identified with its AUTHENTICATORID.\n   * @example {8c7873be-0b13-4996-a794-1521331bbd96} PH1\n   */\n  authenticatorS: 'Authenticator {PH1}',\n  /**\n   * @description Name for generated file which user can download. A private key is a secret code which enables encoding and decoding of a credential. .pem is the file extension.\n   */\n  privateKeypem: 'Private key.pem',\n  /**\n   * @description Label for field that holds an authenticator's universally unique identifier (UUID).\n   */\n  uuid: 'UUID',\n  /**\n   * @description Label for checkbox that toggles user verification support on virtual authenticators.\n   */\n  supportsUserVerification: 'Supports user verification',\n  /**\n   * @description Text in Timeline indicating that input has happened recently\n   */\n  yes: 'Yes',\n  /**\n   * @description Text in Timeline indicating that input has not happened recently\n   */\n  no: 'No',\n  /**\n   * @description Title of radio button that sets an authenticator as active.\n   * @example {Authenticator ABCDEF} PH1\n   */\n  setSAsTheActiveAuthenticator: 'Set {PH1} as the active authenticator',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/webauthn/WebauthnPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nTemplate = Lit.i18nTemplate.bind(undefined, str_);\n\nconst WEB_AUTHN_EXPLANATION_URL =\n    'https://developer.chrome.com/docs/devtools/webauthn' as Platform.DevToolsPath.UrlString;\n\nfunction renderCredentialsDataGrid(\n    authenticatorId: Protocol.WebAuthn.AuthenticatorId, credentials: Protocol.WebAuthn.Credential[],\n    onExport: (credential: Protocol.WebAuthn.Credential) => void,\n    onRemove: (credentialId: string) => void): Lit.TemplateResult {\n  // clang-format off\n  return html`\n    <devtools-data-grid name=${i18nString(UIStrings.credentials)} inline striped>\n      <table>\n        <thead>\n          <tr>\n            <th id=\"credentialId\" weight=\"24\" text-overflow=\"ellipsis\">${i18nString(UIStrings.id)}</th>\n            <th id=\"isResidentCredential\" type=\"boolean\" weight=\"10\">${i18nString(UIStrings.isResident)}</th>\n            <th id=\"rpId\" weight=\"16.5\">${i18nString(UIStrings.rpId)}</th>\n            <th id=\"userHandle\" weight=\"16.5\">${i18nString(UIStrings.userHandle)}</th>\n            <th id=\"signCount\" weight=\"16.5\">${i18nString(UIStrings.signCount)}</th>\n            <th id=\"actions\" weight=\"16.5\">${i18nString(UIStrings.actions)}</th>\n          </tr>\n        </thead>\n        <tbody>\n        ${credentials.length ? repeat(credentials, c => c.credentialId, credential => html`\n          <tr>\n            <td>${credential.credentialId}</td>\n            <td>${credential.isResidentCredential}</td>\n            <td>${credential.rpId}</td>\n            <td>${credential.userHandle}</td>\n            <td>${credential.signCount}</td>\n            <td>\n              <devtools-button .variant=${Buttons.Button.Variant.OUTLINED}\n                  part=\"action-button\"\n                  @click=${() => onExport(credential)}\n                  .jslogContext=${'webauthn.export-credential'}>\n                ${i18nString(UIStrings.export)}\n              </devtools-button>\n              <devtools-button .variant=${Buttons.Button.Variant.OUTLINED}\n                  part=\"action-button\"\n                  @click=${() => onRemove(credential.credentialId)}\n                  .jslogContext=${'webauthn.remove-credential'}>\n                ${i18nString(UIStrings.remove)}\n              </devtools-button>\n            </td>\n          </tr>`) : html`\n          <tr>\n            <td class=\"center\" colspan=6>\n              ${i18nTemplate(UIStrings.noCredentialsTryCallingSFromYour,\n                            {PH1: html`<span class=\"code\">navigator.credentials.create()</span>`})}\n            </td>\n          </tr>`}\n        </tbody>\n      </table>\n    </devtools-data-grid>`;\n  // clang-format on\n}\n\ntype AvailableAuthenticatorOptions = Protocol.WebAuthn.VirtualAuthenticatorOptions&{\n  active: boolean,\n  authenticatorId: Protocol.WebAuthn.AuthenticatorId,\n};\n\n// We extrapolate this variable as otherwise git detects a private key, even though we\n// perform string manipulation. If we extract the name, then the regex doesn't match\n// and we can upload as expected.\nconst PRIVATE_NAME = 'PRIVATE';\nconst PRIVATE_KEY_HEADER = `-----BEGIN ${PRIVATE_NAME} KEY-----\n`;\nconst PRIVATE_KEY_FOOTER = `-----END ${PRIVATE_NAME} KEY-----`;\n\nconst PROTOCOL_AUTHENTICATOR_VALUES: Protocol.EnumerableEnum<typeof Protocol.WebAuthn.AuthenticatorProtocol> = {\n  Ctap2: Protocol.WebAuthn.AuthenticatorProtocol.Ctap2,\n  U2f: Protocol.WebAuthn.AuthenticatorProtocol.U2f,\n};\n\ninterface Authenticator {\n  name: string;\n  options: Protocol.WebAuthn.VirtualAuthenticatorOptions;\n  credentials: Protocol.WebAuthn.Credential[];\n}\n\ninterface Authenticator {\n  name: string;\n  options: Protocol.WebAuthn.VirtualAuthenticatorOptions;\n  credentials: Protocol.WebAuthn.Credential[];\n}\n\ninterface ViewInput {\n  enabled: boolean;\n  onToggleEnabled: () => void;\n  authenticators: Map<Protocol.WebAuthn.AuthenticatorId, Authenticator>;\n  activeAuthenticatorId: Protocol.WebAuthn.AuthenticatorId|null;\n  editingAuthenticatorId: Protocol.WebAuthn.AuthenticatorId|null;\n  newAuthenticatorOptions: Protocol.WebAuthn.VirtualAuthenticatorOptions;\n  internalTransportAvailable: boolean;\n  updateNewAuthenticatorOptions: (change: Partial<Protocol.WebAuthn.VirtualAuthenticatorOptions>) => void;\n  addAuthenticator: () => void;\n  onActivateAuthenticator: (id: Protocol.WebAuthn.AuthenticatorId) => void;\n  onEditName: (id: Protocol.WebAuthn.AuthenticatorId) => void;\n  onSaveName: (id: Protocol.WebAuthn.AuthenticatorId, name: string) => void;\n  onRemoveAuthenticator: (id: Protocol.WebAuthn.AuthenticatorId) => void;\n  onExportCredential: (credential: Protocol.WebAuthn.Credential) => void;\n  onRemoveCredential: (id: Protocol.WebAuthn.AuthenticatorId, credentialId: string) => void;\n}\n\ninterface ViewOutput {\n  revealSection: Map<string, () => void>;\n}\n\ntype ViewFunction = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nfunction renderToolbar(enabled: boolean, onToggle: () => void): Lit.TemplateResult {\n  const enableCheckboxTitle = i18nString(UIStrings.enableVirtualAuthenticator);\n  // clang-format off\n  return html`\n    <div class=\"webauthn-toolbar-container\" jslog=${VisualLogging.toolbar()} role=\"toolbar\">\n      <devtools-toolbar class=\"webauthn-toolbar\" role=\"presentation\">\n        <devtools-checkbox title=${enableCheckboxTitle}\n            @click=${onToggle}\n            .jslogContext=${'virtual-authenticators'}\n            .checked=${enabled}>\n          ${enableCheckboxTitle}\n        </devtools-checkbox>\n      </devtools-toolbar>\n    </div>`;\n  // clang-format on\n}\n\nfunction renderLearnMoreView(): Lit.TemplateResult {\n  // clang-format off\n  return html`\n    <devtools-widget class=\"learn-more\" .widgetConfig=${widgetConfig(UI.EmptyWidget.EmptyWidget, {\n        header: i18nString(UIStrings.noAuthenticator),\n        text: i18nString(UIStrings.useWebauthnForPhishingresistant),\n        link: WEB_AUTHN_EXPLANATION_URL})}>\n    </devtools-widget>`;\n  // clang-format on\n}\n\nfunction renderNewAuthenticatorSection(\n    options: Protocol.WebAuthn.VirtualAuthenticatorOptions, internalTransportAvailable: boolean,\n    onUpdate: (change: Partial<Protocol.WebAuthn.VirtualAuthenticatorOptions>) => void,\n    onAdd: () => void): Lit.TemplateResult {\n  const isCtap2 = options.protocol === Protocol.WebAuthn.AuthenticatorProtocol.Ctap2;\n  // clang-format off\n  return html`\n    <div class=\"new-authenticator-container\">\n      <label class=\"new-authenticator-title\">\n        ${i18nString(UIStrings.newAuthenticator)}\n      </label>\n      <div class=\"new-authenticator-form\" jslog=${VisualLogging.section('new-authenticator')}>\n        <div class=\"authenticator-option\">\n          <label class=\"authenticator-option-label\" for=\"protocol\">\n            ${i18nString(UIStrings.protocol)}\n          </label>\n          <select id=\"protocol\" jslog=${VisualLogging.dropDown('protocol').track({change: true})}\n              value=${options.protocol}\n              @change=${(e:Event) => onUpdate({protocol: (e.target as HTMLSelectElement).value as Protocol.WebAuthn.AuthenticatorProtocol})}>\n            ${Object.values(PROTOCOL_AUTHENTICATOR_VALUES).sort().map(option => html`\n              <option value=${option} jslog=${VisualLogging.item(option).track({click: true})}>\n                ${option}\n              </option>`)}\n          </select>\n        </div>\n        <div class=\"authenticator-option\">\n          <label for=\"transport\" class=\"authenticator-option-label\">\n            ${i18nString(UIStrings.transport)}\n          </label>\n          <select id=\"transport\"\n              value=${options.transport}\n              jslog=${VisualLogging.dropDown('transport').track({change: true})}\n              @change=${(e: Event) => onUpdate({transport: (e.target as HTMLSelectElement).value as Protocol.WebAuthn.AuthenticatorTransport})}>\n            ${[\n              Protocol.WebAuthn.AuthenticatorTransport.Usb,\n              Protocol.WebAuthn.AuthenticatorTransport.Ble,\n              Protocol.WebAuthn.AuthenticatorTransport.Nfc,\n                ...(isCtap2 ? [Protocol.WebAuthn.AuthenticatorTransport.Internal] : [])\n            ].map(option => html`\n                <option value=${option} jslog=${VisualLogging.item(option).track({click: true})}\n                        .selected=${options.transport === option}\n                        .disabled=${!internalTransportAvailable\n                            &&  option === Protocol.WebAuthn.AuthenticatorTransport.Internal}>\n                  ${option}\n                </option>`)\n            }\n          </select>\n        </div>\n        <div class=\"authenticator-option\">\n          <label for=\"resident-key\" class=\"authenticator-option-label\">\n            ${i18nString(UIStrings.supportsResidentKeys)}\n          </label>\n          <input id=\"resident-key\" class=\"authenticator-option-checkbox\" type=\"checkbox\"\n              jslog=${VisualLogging.toggle('resident-key').track({change: true})}\n              @change=${(e:Event) => onUpdate({hasResidentKey: (e.target as HTMLInputElement).checked})}\n              .checked=${Boolean(options.hasResidentKey && isCtap2)} .disabled=${!isCtap2}>\n        </div>\n        <div class=\"authenticator-option\">\n          <label for=\"user-verification\" class=\"authenticator-option-label\">\n            ${i18nString(UIStrings.supportsUserVerification)}\n          </label>\n          <input id=\"user-verification\" class=\"authenticator-option-checkbox\" type=\"checkbox\"\n              jslog=${VisualLogging.toggle('user-verification').track({change: true})}\n              @change=${(e: Event) => onUpdate({hasUserVerification: (e.target as HTMLInputElement).checked})}\n              .checked=${Boolean(options.hasUserVerification && isCtap2)}\n              .disabled=${!isCtap2}>\n        </div>\n        <div class=\"authenticator-option\">\n          <label for=\"large-blob\" class=\"authenticator-option-label\">\n            ${i18nString(UIStrings.supportsLargeBlob)}\n          </label>\n          <input id=\"large-blob\" class=\"authenticator-option-checkbox\" type=\"checkbox\"\n              jslog=${VisualLogging.toggle('large-blob').track({change: true})}\n              @change=${(e: Event) => onUpdate({hasLargeBlob: (e.target as HTMLInputElement).checked})}\n              .checked=${Boolean(options.hasLargeBlob && isCtap2 && options.hasResidentKey)}\n              .disabled=${!options.hasResidentKey || !isCtap2}>\n        </div>\n        <div class=\"authenticator-option\">\n          <div class=\"authenticator-option-label\"></div>\n          <devtools-button @click=${onAdd}\n              id=\"add-authenticator\"\n              .jslogContext=${'webauthn.add-authenticator'}\n              .variant=${Buttons.Button.Variant.OUTLINED}>\n            ${i18nString(UIStrings.add)}\n          </devtools-button>\n        </div>\n      </div>\n    </div>`;\n}\n\nfunction renderAuthenticatorSection(\n    authenticatorId: Protocol.WebAuthn.AuthenticatorId,\n    authenticator: Authenticator,  active: boolean, editing: boolean,\n    onActivate: () => void, onEditName: () => void, onSaveName: (name: string) => void, onRemove: () => void,\n    onExportCredential : (credential: Protocol.WebAuthn.Credential) => void,\n    onRemoveCredential : (credentialId: string) => void,\n    output: ViewOutput): Lit.TemplateResult {\n  function revealSection(section: Element|undefined): void {\n    if (!section) {\n      return;\n    }\n    const mediaQueryList = window.matchMedia('(prefers-reduced-motion: reduce)');\n    const prefersReducedMotion = mediaQueryList.matches;\n    section.scrollIntoView({block: 'nearest', behavior: prefersReducedMotion ? 'auto' : 'smooth'});\n  }\n  // clang-format off\n  return html`\n    <div class=\"authenticator-section\" data-authenticator-id=${authenticatorId}\n         jslog=${VisualLogging.section('authenticator')}\n          ${ref(e => { output.revealSection.set(authenticatorId, revealSection.bind(null, e));})}>\n      <div class=\"authenticator-section-header\">\n        <div class=\"authenticator-section-title\" role=\"heading\" aria-level=\"2\">\n          <devtools-toolbar class=\"edit-name-toolbar\">\n            <devtools-button title=${i18nString(UIStrings.editName)}\n                class=${classMap({hidden: editing})}\n                @click=${onEditName}\n                .iconName=${'edit'} .variant=${Buttons.Button.Variant.TOOLBAR}\n                .jslogContext=${'edit-name'}></devtools-button>\n            <devtools-button title=${i18nString(UIStrings.saveName)}\n                @click=${(e: Event) => onSaveName(((e.target as HTMLElement).parentElement?.nextSibling as HTMLInputElement).value)}\n                .iconName=${'checkmark'} .variant=${Buttons.Button.Variant.TOOLBAR}\n                class=${classMap({hidden: !editing})}\n                .jslogContext=${'save-name'}></devtools-button>\n          </devtools-toolbar>\n          <input class=\"authenticator-name-field\"\n              placeholder=${i18nString(UIStrings.enterNewName)}\n              jslog=${VisualLogging.textField('name').track({keydown: 'Enter', change: true})}\n              value=${i18nString(UIStrings.authenticatorS, {PH1: authenticator.name})} .disabled=${!editing}\n              ${ref(e => { if(e instanceof HTMLInputElement && editing) { e.focus(); } })}\n              @focusout=${(e: Event) => onSaveName((e.target as HTMLInputElement).value)}\n              @keydown=${(event: KeyboardEvent) => {\n                if (event.key === 'Enter') {\n                  onSaveName((event.target as HTMLInputElement).value);\n                }\n              }}>\n        </div>\n        <div class=\"active-button-container\">\n          <label title=${i18nString(UIStrings.setSAsTheActiveAuthenticator, {PH1: authenticator.name})}>\n            <input type=\"radio\" .checked=${active} @change=${(e:Event) => { if ((e.target as HTMLInputElement).checked) { onActivate(); }}}\n                  jslog=${VisualLogging.toggle('webauthn.active-authenticator').track({change: true})}>\n            ${i18nString(UIStrings.active)}\n          </label>\n        </div>\n        <button class=\"text-button\" @click=${onRemove}\n            jslog=${VisualLogging.action('webauthn.remove-authenticator').track({click: true})}>\n          ${i18nString(UIStrings.remove)}\n        </button>\n      </div>\n      ${renderAuthenticatorFields(authenticatorId, authenticator.options)}\n      <div class=\"credentials-title\">${i18nString(UIStrings.credentials)}</div>\n      ${renderCredentialsDataGrid(authenticatorId, authenticator.credentials, onExportCredential, onRemoveCredential)}\n      <div class=\"divider\"></div>\n    </div>`;\n  // clang-format on\n}\n\n/**\n * Creates the fields describing the authenticator in the front end.\n */\nfunction renderAuthenticatorFields(\n    authenticatorId: string, options: Protocol.WebAuthn.VirtualAuthenticatorOptions): Lit.TemplateResult {\n  // clang-format off\n  return html`\n    <div class=\"authenticator-fields\">\n      <div class=\"authenticator-field\">\n        <label class=\"authenticator-option-label\">${i18nString(UIStrings.uuid)}</label>\n        <div class=\"authenticator-field-value\">${authenticatorId}</div>\n      </div>\n      <div class=\"authenticator-field\">\n        <label class=\"authenticator-option-label\">${i18nString(UIStrings.protocol)}</label>\n        <div class=\"authenticator-field-value\">${options.protocol}</div>\n      </div>\n      <div class=\"authenticator-field\">\n        <label class=\"authenticator-option-label\">${i18nString(UIStrings.transport)}</label>\n        <div class=\"authenticator-field-value\">${options.transport}</div>\n      </div>\n      <div class=\"authenticator-field\">\n        <label class=\"authenticator-option-label\">\n          ${i18nString(UIStrings.supportsResidentKeys)}\n        </label>\n        <div class=\"authenticator-field-value\">\n          ${options.hasResidentKey ? i18nString(UIStrings.yes) : i18nString(UIStrings.no)}\n        </div>\n      </div>\n      <div class=\"authenticator-field\">\n        <label class=\"authenticator-option-label\">\n          ${i18nString(UIStrings.supportsLargeBlob)}\n        </label>\n        <div class=\"authenticator-field-value\">\n          ${options.hasLargeBlob ? i18nString(UIStrings.yes) : i18nString(UIStrings.no)}\n        </div>\n      </div>\n      <div class=\"authenticator-field\">\n        <label class=\"authenticator-option-label\">\n          ${i18nString(UIStrings.supportsUserVerification)}\n        </label>\n        <div class=\"authenticator-field-value\">\n          ${options.hasUserVerification ? i18nString(UIStrings.yes) : i18nString(UIStrings.no)}\n        </div>\n      </div>\n    </div>`;\n  // clang-format on\n}\n\nexport const DEFAULT_VIEW: ViewFunction = (input, output, target) => {\n  // clang-format off\n  render(html`\n    <style>${Input.checkboxStyles}</style>\n    <style>${webauthnPaneStyles}</style>\n    <div class=\"webauthn-pane flex-auto ${classMap({enabled: input.enabled})}\">\n      ${renderToolbar(input.enabled, input.onToggleEnabled)}\n      <div class=\"authenticators-view\">\n         ${repeat([...input.authenticators.entries()],\n                  ([id]) => id,\n                  ([id, authenticator]) => renderAuthenticatorSection(\n                      id, authenticator,\n                      input.activeAuthenticatorId === id,\n                      input.editingAuthenticatorId === id,\n                      input.onActivateAuthenticator.bind(input, id),\n                      input.onEditName.bind(input, id),\n                      input.onSaveName.bind(input, id),\n                      input.onRemoveAuthenticator.bind(input, id),\n                      input.onExportCredential,\n                      input.onRemoveCredential.bind(input, id),\n                      output))}\n      </div>\n      ${renderLearnMoreView()}\n      ${renderNewAuthenticatorSection(\n          input.newAuthenticatorOptions, input.internalTransportAvailable,  input.updateNewAuthenticatorOptions, input.addAuthenticator)}\n    </div>`,\n    target);\n  // clang-format on\n};\n\nexport class WebauthnPaneImpl extends UI.Panel.Panel implements\n    SDK.TargetManager.SDKModelObserver<SDK.WebAuthnModel.WebAuthnModel> {\n  async #addAuthenticator(options: Protocol.WebAuthn.VirtualAuthenticatorOptions):\n      Promise<Protocol.WebAuthn.AuthenticatorId> {\n    if (!this.#model) {\n      throw new Error('WebAuthn model is not available.');\n    }\n\n    const authenticatorId = await this.#model.addAuthenticator(options);\n    const userFriendlyName = authenticatorId.slice(-5);  // User friendly name defaults to last 5 chars of UUID.\n    this.#authenticators.set(authenticatorId, {\n      name: userFriendlyName,\n      options,\n      credentials: [],\n    });\n    this.requestUpdate();\n    this.#model.addEventListener(\n        SDK.WebAuthnModel.Events.CREDENTIAL_ADDED, this.#addCredential.bind(this, authenticatorId));\n    this.#model.addEventListener(\n        SDK.WebAuthnModel.Events.CREDENTIAL_ASSERTED, this.#updateCredential.bind(this, authenticatorId));\n    this.#model.addEventListener(\n        SDK.WebAuthnModel.Events.CREDENTIAL_UPDATED, this.#updateCredential.bind(this, authenticatorId));\n    this.#model.addEventListener(\n        SDK.WebAuthnModel.Events.CREDENTIAL_DELETED, this.#deleteCredential.bind(this, authenticatorId));\n    return authenticatorId;\n  }\n\n  #activeAuthId: Protocol.WebAuthn.AuthenticatorId|null = null;\n  #editingAuthId: Protocol.WebAuthn.AuthenticatorId|null = null;\n  #hasBeenEnabled = false;\n  readonly #authenticators = new Map<Protocol.WebAuthn.AuthenticatorId, Authenticator>();\n  #enabled = false;\n  readonly #availableAuthenticatorSetting: Common.Settings.Setting<AvailableAuthenticatorOptions[]>;\n  #model?: SDK.WebAuthnModel.WebAuthnModel;\n  #newAuthenticatorOptions: Protocol.WebAuthn.VirtualAuthenticatorOptions = {\n    protocol: Protocol.WebAuthn.AuthenticatorProtocol.Ctap2,\n    ctap2Version: Protocol.WebAuthn.Ctap2Version.Ctap2_1,\n    transport: Protocol.WebAuthn.AuthenticatorTransport.Usb,\n    hasResidentKey: false,\n    hasUserVerification: false,\n    hasLargeBlob: false,\n    automaticPresenceSimulation: true,\n    isUserVerified: true,\n  };\n  #hasInternalAuthenticator = false;\n  #isEnabling?: Promise<void>;\n  #view: ViewFunction;\n  #viewOutput: ViewOutput = {\n    revealSection: new Map(),\n  };\n\n  constructor(view = DEFAULT_VIEW) {\n    super('webauthn');\n\n    this.#view = view;\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.WebAuthnModel.WebAuthnModel, this, {scoped: true});\n\n    this.#availableAuthenticatorSetting =\n        Common.Settings.Settings.instance().createSetting<AvailableAuthenticatorOptions[]>(\n            'webauthn-authenticators', []);\n    this.#updateInternalTransportAvailability();\n\n    this.performUpdate();\n  }\n\n  override performUpdate(): void {\n    const viewInput = {\n      enabled: this.#enabled,\n      onToggleEnabled: this.#handleCheckboxToggle.bind(this),\n      authenticators: this.#authenticators,\n      activeAuthenticatorId: this.#activeAuthId,\n      editingAuthenticatorId: this.#editingAuthId,\n      newAuthenticatorOptions: this.#newAuthenticatorOptions,\n      internalTransportAvailable: !this.#hasInternalAuthenticator,\n      updateNewAuthenticatorOptions: this.#updateNewAuthenticatorSectionOptions.bind(this),\n      addAuthenticator: this.#handleAddAuthenticatorButton.bind(this),\n      onActivateAuthenticator: this.#setActiveAuthenticator.bind(this),\n      onEditName: this.#handleEditNameButton.bind(this),\n      onSaveName: this.#handleSaveNameButton.bind(this),\n      onRemoveAuthenticator: this.removeAuthenticator.bind(this),\n      onExportCredential: this.#exportCredential.bind(this),\n      onRemoveCredential: this.#removeCredential.bind(this),\n    };\n    this.#view(viewInput, this.#viewOutput, this.contentElement);\n  }\n\n  modelAdded(model: SDK.WebAuthnModel.WebAuthnModel): void {\n    if (model.target() === model.target().outermostTarget()) {\n      this.#model = model;\n    }\n  }\n\n  modelRemoved(model: SDK.WebAuthnModel.WebAuthnModel): void {\n    if (model.target() === model.target().outermostTarget()) {\n      this.#model = undefined;\n    }\n  }\n\n  async #loadInitialAuthenticators(): Promise<void> {\n    let activeAuthenticatorId: Protocol.WebAuthn.AuthenticatorId|null = null;\n    const availableAuthenticators = this.#availableAuthenticatorSetting.get();\n    for (const options of availableAuthenticators) {\n      if (!this.#model) {\n        continue;\n      }\n\n      const authenticatorId = await this.#addAuthenticator(options);\n      // Update the authenticatorIds in the options.\n      options.authenticatorId = authenticatorId;\n      if (options.active) {\n        activeAuthenticatorId = authenticatorId;\n      }\n    }\n\n    // Update the settings to reflect the new authenticatorIds.\n    this.#availableAuthenticatorSetting.set(availableAuthenticators);\n    if (activeAuthenticatorId) {\n      void this.#setActiveAuthenticator(activeAuthenticatorId);\n    }\n  }\n\n  override async ownerViewDisposed(): Promise<void> {\n    this.#enabled = false;\n    await this.#setVirtualAuthEnvEnabled(false);\n  }\n\n  #addCredential(authenticatorId: Protocol.WebAuthn.AuthenticatorId, {\n    data: event,\n  }: Common.EventTarget.EventTargetEvent<Protocol.WebAuthn.CredentialAddedEvent>): void {\n    const authenticator = this.#authenticators.get(authenticatorId);\n    if (!authenticator) {\n      return;\n    }\n    authenticator.credentials.push(event.credential);\n    this.requestUpdate();\n  }\n\n  #updateCredential(\n      authenticatorId: Protocol.WebAuthn.AuthenticatorId,\n      {\n        data: event,\n      }: Common.EventTarget\n          .EventTargetEvent<Protocol.WebAuthn.CredentialAssertedEvent&Protocol.WebAuthn.CredentialUpdatedEvent>): void {\n    const authenticator = this.#authenticators.get(authenticatorId);\n    if (!authenticator) {\n      return;\n    }\n    const credential =\n        authenticator.credentials.find(credential => credential.credentialId === event.credential.credentialId);\n    if (!credential) {\n      return;\n    }\n    Object.assign(credential, event.credential);\n    this.requestUpdate();\n  }\n\n  #deleteCredential(authenticatorId: Protocol.WebAuthn.AuthenticatorId, {\n    data: event,\n  }: Common.EventTarget.EventTargetEvent<Protocol.WebAuthn.CredentialDeletedEvent>): void {\n    const authenticator = this.#authenticators.get(authenticatorId);\n    if (!authenticator) {\n      return;\n    }\n    const credentialIndex =\n        authenticator.credentials.findIndex(credential => credential.credentialId === event.credentialId);\n    if (credentialIndex < 0) {\n      return;\n    }\n    authenticator.credentials.splice(credentialIndex, 1);\n    this.requestUpdate();\n  }\n\n  async #setVirtualAuthEnvEnabled(enable: boolean): Promise<void> {\n    await this.#isEnabling;\n    this.#isEnabling = new Promise<void>(async (resolve: (value: void) => void) => {\n      if (enable && !this.#hasBeenEnabled) {\n        // Ensures metric is only tracked once per session.\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.VirtualAuthenticatorEnvironmentEnabled);\n        this.#hasBeenEnabled = true;\n      }\n      if (this.#model) {\n        await this.#model.setVirtualAuthEnvEnabled(enable);\n      }\n\n      if (enable) {\n        await this.#loadInitialAuthenticators();\n      } else {\n        this.#removeAuthenticatorSections();\n      }\n\n      this.#isEnabling = undefined;\n      this.#enabled = enable;\n      this.requestUpdate();\n      resolve();\n    });\n  }\n\n  #removeAuthenticatorSections(): void {\n    this.#authenticators.clear();\n  }\n\n  #handleCheckboxToggle(): void {\n    void this.#setVirtualAuthEnvEnabled(!this.#enabled);\n  }\n\n  #updateNewAuthenticatorSectionOptions(change: Partial<Protocol.WebAuthn.VirtualAuthenticatorOptions>): void {\n    Object.assign(this.#newAuthenticatorOptions, change);\n    this.requestUpdate();\n  }\n\n  #updateInternalTransportAvailability(): void {\n    this.#hasInternalAuthenticator = Boolean(this.#availableAuthenticatorSetting.get().find(\n        authenticator => authenticator.transport === Protocol.WebAuthn.AuthenticatorTransport.Internal));\n    if (this.#hasInternalAuthenticator &&\n        this.#newAuthenticatorOptions.transport === Protocol.WebAuthn.AuthenticatorTransport.Internal) {\n      this.#newAuthenticatorOptions.transport = Protocol.WebAuthn.AuthenticatorTransport.Nfc;\n    }\n    this.requestUpdate();\n  }\n\n  async #handleAddAuthenticatorButton(): Promise<void> {\n    const options = this.#newAuthenticatorOptions;\n    if (this.#model) {\n      const authenticatorId = await this.#addAuthenticator(options);\n      this.#activeAuthId = authenticatorId;  // Newly added authenticator is automatically set as active.\n      const availableAuthenticators = this.#availableAuthenticatorSetting.get();\n      availableAuthenticators.push({authenticatorId, active: true, ...options});\n      this.#availableAuthenticatorSetting.set(\n          availableAuthenticators.map(a => ({...a, active: a.authenticatorId === authenticatorId})));\n      this.#updateInternalTransportAvailability();\n      await this.updateComplete;\n      this.#viewOutput.revealSection.get(authenticatorId)?.();\n    }\n  }\n\n  #exportCredential(credential: Protocol.WebAuthn.Credential): void {\n    let pem = PRIVATE_KEY_HEADER;\n    for (let i = 0; i < credential.privateKey.length; i += 64) {\n      pem += credential.privateKey.substring(i, i + 64) + '\\n';\n    }\n    pem += PRIVATE_KEY_FOOTER;\n\n    /* eslint-disable-next-line rulesdir/no-imperative-dom-api */\n    const link = document.createElement('a');\n    link.download = i18nString(UIStrings.privateKeypem);\n    link.href = 'data:application/x-pem-file,' + encodeURIComponent(pem);\n    link.click();\n  }\n\n  #removeCredential(authenticatorId: Protocol.WebAuthn.AuthenticatorId, credentialId: string): void {\n    const authenticator = this.#authenticators.get(authenticatorId);\n    if (!authenticator) {\n      return;\n    }\n\n    const authenticatorIndex =\n        authenticator.credentials.findIndex(credential => credential.credentialId === credentialId);\n    if (authenticatorIndex < 0) {\n      return;\n    }\n    authenticator.credentials.splice(authenticatorIndex, 1);\n    this.requestUpdate();\n\n    if (this.#model) {\n      void this.#model.removeCredential(authenticatorId, credentialId);\n    }\n  }\n\n  #handleEditNameButton(authenticatorId: Protocol.WebAuthn.AuthenticatorId): void {\n    this.#editingAuthId = authenticatorId;\n    this.requestUpdate();\n  }\n\n  #handleSaveNameButton(authenticatorId: Protocol.WebAuthn.AuthenticatorId, name: string): void {\n    const authenticator = this.#authenticators.get(authenticatorId);\n    if (!authenticator) {\n      return;\n    }\n    authenticator.name = name;\n    this.#editingAuthId = null;\n    this.requestUpdate();\n  }\n\n  /**\n   * Removes both the authenticator and its respective UI element.\n   */\n  removeAuthenticator(authenticatorId: Protocol.WebAuthn.AuthenticatorId): void {\n    this.#authenticators.delete(authenticatorId);\n    this.requestUpdate();\n    if (this.#model) {\n      void this.#model.removeAuthenticator(authenticatorId);\n    }\n\n    // Update available authenticator setting.\n    const prevAvailableAuthenticators = this.#availableAuthenticatorSetting.get();\n    const newAvailableAuthenticators = prevAvailableAuthenticators.filter(a => a.authenticatorId !== authenticatorId);\n    this.#availableAuthenticatorSetting.set(newAvailableAuthenticators);\n\n    if (this.#activeAuthId === authenticatorId) {\n      const availableAuthenticatorIds = Array.from(this.#authenticators.keys());\n      if (availableAuthenticatorIds.length) {\n        void this.#setActiveAuthenticator(availableAuthenticatorIds[0]);\n      } else {\n        this.#activeAuthId = null;\n      }\n    }\n    this.#updateInternalTransportAvailability();\n  }\n\n  /**\n   * Sets the given authenticator as active.\n   * Note that a newly added authenticator will automatically be set as active.\n   */\n  async #setActiveAuthenticator(authenticatorId: Protocol.WebAuthn.AuthenticatorId): Promise<void> {\n    await this.#clearActiveAuthenticator();\n    if (this.#model) {\n      await this.#model.setAutomaticPresenceSimulation(authenticatorId, true);\n    }\n    this.#activeAuthId = authenticatorId;\n\n    const prevAvailableAuthenticators = this.#availableAuthenticatorSetting.get();\n    const newAvailableAuthenticators =\n        prevAvailableAuthenticators.map(a => ({...a, active: a.authenticatorId === authenticatorId}));\n    this.#availableAuthenticatorSetting.set(newAvailableAuthenticators);\n\n    this.requestUpdate();\n  }\n\n  async #clearActiveAuthenticator(): Promise<void> {\n    if (this.#activeAuthId && this.#model) {\n      await this.#model.setAutomaticPresenceSimulation(this.#activeAuthId, false);\n    }\n    this.#activeAuthId = null;\n    this.requestUpdate();\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2020 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n@scope to (devtools-widget > *) {\n  .webauthn-pane {\n    overflow: auto;\n    min-width: 500px;\n  }\n\n  .webauthn-toolbar-container {\n    display: flex;\n    background-color: var(--sys-color-cdt-base-container);\n    border-bottom: 1px solid var(--sys-color-divider);\n    flex: 0 0 auto;\n  }\n\n  .webauthn-toolbar {\n    display: inline-block;\n  }\n\n  .authenticators-view {\n    padding: 0 var(--sys-size-9);\n    min-height: auto;\n    display: none;\n  }\n\n  .webauthn-pane.enabled .authenticators-view {\n    display: block;\n  }\n\n  /* New Authenticator Section */\n  .new-authenticator-title {\n    display: block;\n    padding: var(--sys-size-7) 0 var(--sys-size-5) 0;\n    font: var(--sys-typescale-headline5);\n\n    &:has(devtools-button) {\n      padding-top: var(--sys-size-4);\n    }\n  }\n\n  .new-authenticator-container {\n    display: none;\n    padding-left:  var(--sys-size-9);\n  }\n\n  .authenticator-option {\n    > select {\n      margin: 0 var(--sys-size-9) var(--sys-size-3) var(--sys-size-9);\n    }\n\n    > devtools-button {\n      margin: var(--sys-size-3) var(--sys-size-9);\n    }\n\n    > input[type=\"checkbox\"] {\n      margin: var(--sys-size-5) var(--sys-size-9);\n    }\n  }\n\n  .webauthn-pane.enabled .new-authenticator-container {\n    display: block;\n  }\n\n  .new-authenticator-form {\n    border: none;\n    flex: 0 0 auto;\n    margin: 0;\n    padding-bottom: var(--sys-size-5);\n  }\n\n  .webauthn-pane select {\n    width: 120px;\n  }\n  /* Active Authenticator Section */\n  .authenticator-section {\n    display: block;\n  }\n\n  .divider {\n    border-bottom: var(--sys-size-1) solid var(--sys-color-divider);\n    margin: 10px calc(var(--sys-size-9) * -1) 0;\n  }\n\n  .authenticator-fields {\n    border: none;\n    flex: 0 0 auto;\n    margin-bottom: 10px;\n  }\n\n  .authenticator-section-header {\n    margin: var(--sys-size-4) 0 var(--sys-size-5) calc(var(--sys-size-5) * -1);\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n  }\n\n  .authenticator-section-title {\n    line-height: 24px;\n    display: inline-flex;\n  }\n\n  .authenticator-section-title .authenticator-name-field {\n    display: inline-block;\n    border: none;\n    animation: save-flash 0.2s;\n    text-overflow: ellipsis;\n    font: var(--sys-typescale-headline5);\n  }\n\n  .authenticator-section-title.editing-name .authenticator-name-field {\n    border-bottom: 1px solid var(--sys-color-neutral-outline);\n    font-weight: normal;\n    animation: none;\n  }\n\n  .authenticator-field-value {\n    font: var(--sys-typescale-monospace-regular);\n    line-height: 18px;\n  }\n\n  .authenticator-field {\n    margin: var(--sys-size-3) 0;\n  }\n\n  .authenticator-field,\n  .authenticator-option {\n    display: flex;\n    align-items: center;\n  }\n\n  .authenticator-option-label {\n    color: var(--sys-color-on-surface-subtle);\n    font: var(--sys-typescale-body5-medium);\n    padding-right: var(--sys-size-6);\n    text-align: left;\n    min-width: 152px;\n    line-height: 18px;\n  }\n\n  ::part(action-button) {\n    min-width: 20px;\n    margin: 4px;\n  }\n\n  .active-button-container {\n    display: inline-block;\n    min-width: 28px;\n  }\n\n  .edit-name-toolbar {\n    display: inline-block;\n    vertical-align: middle;\n  }\n\n  @keyframes save-flash {\n    from { opacity: 0%; }\n    to { opacity: 100%; }\n  }\n  /* Credentials Table */\n\n  ::part(credentialId-column),\n  ::part(isResidentCredential-column),\n  ::part(rpId-column),\n  ::part(userHandle-column),\n  ::part(signCount-column),\n  ::part(actions-column) {\n    vertical-align: middle;\n  }\n\n  .credentials-title {\n    display: block;\n    font: var(--sys-typescale-headline5);\n    padding: var(--sys-size-7) 0 var(--sys-size-5) 0;\n    border-top: var(--sys-size-1) solid var(--sys-color-divider);\n    margin-right: calc(var(--sys-size-9) * -1);\n  }\n\n  .code {\n    font-family: monospace;\n  }\n\n  .learn-more {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    text-align: center;\n    overflow: hidden;\n  }\n\n  .webauthn-pane.enabled .learn-more {\n    display: none;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./webauthnPane.css')} */`;"],
  "mappings": "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",
  "names": ["i18nTemplate", "section", "credential"]
}
