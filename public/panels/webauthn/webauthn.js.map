{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/webauthn/WebauthnPane.ts", "webauthnPane.css.js"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api, rulesdir/inject-checkbox-styles */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport webauthnPaneStyles from './webauthnPane.css.js';\nconst {render, html, Directives: {ref}} = Lit;\nconst {widgetConfig} = UI.Widget;\n\nconst UIStrings = {\n  /**\n   *@description Label for button that allows user to download the private key related to a credential.\n   */\n  export: 'Export',\n  /**\n   *@description Label for an item to remove something\n   */\n  remove: 'Remove',\n  /**\n   *@description Label for empty credentials table.\n   *@example {navigator.credentials.create()} PH1\n   */\n  noCredentialsTryCallingSFromYour: 'No credentials. Try calling {PH1} from your website.',\n  /**\n   *@description Label for checkbox to toggle the virtual authenticator environment allowing user to interact with software-based virtual authenticators.\n   */\n  enableVirtualAuthenticator: 'Enable virtual authenticator environment',\n  /**\n   *@description Label for ID field for credentials.\n   */\n  id: 'ID',\n  /**\n   *@description Label for field that describes whether a credential is a resident credential.\n   */\n  isResident: 'Is Resident',\n  /**\n   *@description Label for credential field that represents the Relying Party ID that the credential is scoped to.\n   */\n  rpId: 'RP ID',\n  /**\n   *@description Label for a column in a table. A field/unique ID that represents the user a credential is mapped to.\n   */\n  userHandle: 'User Handle',\n  /**\n   *@description Label for signature counter field for credentials which represents the number of successful assertions.\n   * See https://w3c.github.io/webauthn/#signature-counter.\n   */\n  signCount: 'Signature Count',\n  /**\n   *@description Label for column with actions for credentials.\n   */\n  actions: 'Actions',\n  /**\n   *@description Title for the table that holds the credentials that a authenticator has registered.\n   */\n  credentials: 'Credentials',\n  /**\n   *@description Text that shows before the virtual environment is enabled.\n   */\n  noAuthenticator: 'No authenticator set up',\n  /**\n   *@description That that shows before virtual environment is enabled explaining the panel.\n   */\n  useWebauthnForPhishingresistant: 'Use WebAuthn for phishing-resistant authentication.',\n  /**\n   *@description Title for section of interface that allows user to add a new virtual authenticator.\n   */\n  newAuthenticator: 'New authenticator',\n  /**\n   *@description Text for security or network protocol\n   */\n  protocol: 'Protocol',\n  /**\n   *@description Label for input to select which transport option to use on virtual authenticators, e.g. USB or Bluetooth.\n   */\n  transport: 'Transport',\n  /**\n   *@description Label for checkbox that toggles resident key support on virtual authenticators.\n   */\n  supportsResidentKeys: 'Supports resident keys',\n  /**\n   *@description Label for checkbox that toggles large blob support on virtual authenticators. Large blobs are opaque data associated\n   * with a WebAuthn credential that a website can store, like an SSH certificate or a symmetric encryption key.\n   * See https://w3c.github.io/webauthn/#sctn-large-blob-extension\n   */\n  supportsLargeBlob: 'Supports large blob',\n  /**\n   *@description Text to add something\n   */\n  add: 'Add',\n  /**\n   *@description Label for radio button that toggles whether an authenticator is active.\n   */\n  active: 'Active',\n  /**\n   *@description Title for button that enables user to customize name of authenticator.\n   */\n  editName: 'Edit name',\n  /**\n   *@description Placeholder for the input box to customize name of authenticator.\n   */\n  enterNewName: 'Enter new name',\n  /**\n   *@description Title for button that enables user to save name of authenticator after editing it.\n   */\n  saveName: 'Save name',\n  /**\n   *@description Title for a user-added virtual authenticator which is uniquely identified with its AUTHENTICATORID.\n   *@example {8c7873be-0b13-4996-a794-1521331bbd96} PH1\n   */\n  authenticatorS: 'Authenticator {PH1}',\n  /**\n   *@description Name for generated file which user can download. A private key is a secret code which enables encoding and decoding of a credential. .pem is the file extension.\n   */\n  privateKeypem: 'Private key.pem',\n  /**\n   *@description Label for field that holds an authenticator's universally unique identifier (UUID).\n   */\n  uuid: 'UUID',\n  /**\n   *@description Label for checkbox that toggles user verification support on virtual authenticators.\n   */\n  supportsUserVerification: 'Supports user verification',\n  /**\n   *@description Text in Timeline indicating that input has happened recently\n   */\n  yes: 'Yes',\n  /**\n   *@description Text in Timeline indicating that input has not happened recently\n   */\n  no: 'No',\n  /**\n   *@description Title of radio button that sets an authenticator as active.\n   *@example {Authenticator ABCDEF} PH1\n   */\n  setSAsTheActiveAuthenticator: 'Set {PH1} as the active authenticator',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/webauthn/WebauthnPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nTemplate = Lit.i18nTemplate.bind(undefined, str_);\n\nconst WEB_AUTHN_EXPLANATION_URL =\n    'https://developer.chrome.com/docs/devtools/webauthn' as Platform.DevToolsPath.UrlString;\n\nclass DataGridNode extends DataGrid.DataGrid.DataGridNode<DataGridNode> {\n  constructor(private readonly credential: Protocol.WebAuthn.Credential) {\n    super(credential);\n  }\n\n  override nodeSelfHeight(): number {\n    return 24;\n  }\n\n  override createCell(columnId: string): HTMLElement {\n    const cell = super.createCell(columnId);\n    UI.Tooltip.Tooltip.install(cell, cell.textContent || '');\n\n    if (columnId !== 'actions') {\n      return cell;\n    }\n\n    const onExportCredential = (): void => {\n      if (this.dataGrid) {\n        (this.dataGrid as WebauthnDataGrid).onExportCredential(this.credential);\n      }\n    };\n    const onRemoveCredential = (): void => {\n      if (this.dataGrid) {\n        (this.dataGrid as WebauthnDataGrid).onRemoveCredential(this.credential);\n      }\n    };\n    // clang-format off\n    // eslint-disable-next-line rulesdir/no-lit-render-outside-of-view\n    render(html`\n       <devtools-button .variant=${Buttons.Button.Variant.OUTLINED}\n           @click=${onExportCredential} .jslogContext=${'webauthn.export-credential'}>\n        ${i18nString(UIStrings.export)}\n      </devtools-button>\n      <devtools-button .variant=${Buttons.Button.Variant.OUTLINED}\n          @click=${onRemoveCredential} .jslogContext=${'webauthn.remove-credential'}>\n        ${i18nString(UIStrings.remove)}\n      </devtools-button>`, cell);\n    // clang-format on\n\n    return cell;\n  }\n}\n\nclass WebauthnDataGrid extends DataGrid.DataGrid.DataGridImpl<DataGridNode> {\n  onExportCredential = (_: Protocol.WebAuthn.Credential): void => {};\n  onRemoveCredential = (_: Protocol.WebAuthn.Credential): void => {};\n}\n\nclass EmptyDataGridNode extends DataGrid.DataGrid.DataGridNode<DataGridNode> {\n  override createCells(element: Element): void {\n    element.removeChildren();\n    // clang-format off\n    // eslint-disable-next-line rulesdir/no-lit-render-outside-of-view\n    render(html`\n      <td class=${DataGrid.DataGrid.Align.CENTER} colspan=${this.dataGrid?.visibleColumnsArray.length ?? 1}>\n        ${i18nTemplate(UIStrings.noCredentialsTryCallingSFromYour,\n                       {PH1: html`<span class=\"code\">navigator.credentials.create()</span>`})}\n      </td>`, element as HTMLElement);\n    // clang-format on\n  }\n}\n\ntype AvailableAuthenticatorOptions = Protocol.WebAuthn.VirtualAuthenticatorOptions&{\n  active: boolean,\n  authenticatorId: Protocol.WebAuthn.AuthenticatorId,\n};\n\n// We extrapolate this variable as otherwise git detects a private key, even though we\n// perform string manipulation. If we extract the name, then the regex doesn't match\n// and we can upload as expected.\nconst PRIVATE_NAME = 'PRIVATE';\nconst PRIVATE_KEY_HEADER = `-----BEGIN ${PRIVATE_NAME} KEY-----\n`;\nconst PRIVATE_KEY_FOOTER = `-----END ${PRIVATE_NAME} KEY-----`;\n\nconst PROTOCOL_AUTHENTICATOR_VALUES: Protocol.EnumerableEnum<typeof Protocol.WebAuthn.AuthenticatorProtocol> = {\n  Ctap2: Protocol.WebAuthn.AuthenticatorProtocol.Ctap2,\n  U2f: Protocol.WebAuthn.AuthenticatorProtocol.U2f,\n};\n\nexport class WebauthnPaneImpl extends UI.Widget.VBox implements\n    SDK.TargetManager.SDKModelObserver<SDK.WebAuthnModel.WebAuthnModel> {\n  #createCredentialsDataGrid(authenticatorId: Protocol.WebAuthn.AuthenticatorId):\n      DataGrid.DataGrid.DataGridImpl<DataGridNode> {\n    const columns = ([\n      {\n        id: 'credentialId',\n        title: i18nString(UIStrings.id),\n        longText: true,\n        weight: 24,\n      },\n      {\n        id: 'isResidentCredential',\n        title: i18nString(UIStrings.isResident),\n        dataType: DataGrid.DataGrid.DataType.BOOLEAN,\n        weight: 10,\n      },\n      {\n        id: 'rpId',\n        title: i18nString(UIStrings.rpId),\n      },\n      {\n        id: 'userHandle',\n        title: i18nString(UIStrings.userHandle),\n      },\n      {\n        id: 'signCount',\n        title: i18nString(UIStrings.signCount),\n      },\n      {id: 'actions', title: i18nString(UIStrings.actions)},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n\n    const dataGridConfig = {\n      displayName: i18nString(UIStrings.credentials),\n      columns,\n      editCallback: undefined,\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    };\n    const dataGrid = new WebauthnDataGrid(dataGridConfig);\n    dataGrid.renderInline();\n    dataGrid.setStriped(true);\n    dataGrid.onExportCredential = this.#exportCredential.bind(this);\n    dataGrid.onRemoveCredential = ({credentialId}) => this.#removeCredential(authenticatorId, credentialId);\n    dataGrid.rootNode().appendChild(new EmptyDataGridNode());\n\n    this.dataGrids.set(authenticatorId, dataGrid);\n\n    return dataGrid;\n  }\n\n  #renderToolbar(): Lit.TemplateResult {\n    const enableCheckboxTitle = i18nString(UIStrings.enableVirtualAuthenticator);\n    // clang-format off\n    return html`\n      <div class=\"webauthn-toolbar-container\" jslog=${VisualLogging.toolbar()} role=\"toolbar\">\n        <devtools-toolbar class=\"webauthn-toolbar\" role=\"presentation\">\n          <devtools-checkbox title=${enableCheckboxTitle}\n              @click=${this.#handleCheckboxToggle.bind(this)}\n              .jslogContext=${'virtual-authenticators'}\n              ${ref(e => { this.#enableCheckbox = e as HTMLInputElement; })}>\n            ${enableCheckboxTitle}\n          </devtools-checkbox>\n        </devtools-toolbar>\n      </div>`;\n    // clang-format on\n  }\n\n  #renderLearnMoreView(): Lit.TemplateResult {\n    // clang-format off\n    return html`\n      <devtools-widget class=\"learn-more\" .widgetConfig=${widgetConfig(UI.EmptyWidget.EmptyWidget, {\n          header: i18nString(UIStrings.noAuthenticator),\n          text: i18nString(UIStrings.useWebauthnForPhishingresistant),\n          link: WEB_AUTHN_EXPLANATION_URL})}>\n      </devtools-widget>`;\n    // clang-format on\n  }\n\n  #renderNewAuthenticatorSection(): Lit.TemplateResult {\n    const options = this.#newAuthenticatorOptions;\n    const isCtap2 = options.protocol === Protocol.WebAuthn.AuthenticatorProtocol.Ctap2;\n    // clang-format off\n    return html`\n      <div class=\"new-authenticator-container\">\n        <label class=\"new-authenticator-title\">\n          ${i18nString(UIStrings.newAuthenticator)}\n        </label>\n        <div class=\"new-authenticator-form\" jslog=${VisualLogging.section('new-authenticator')}>\n          <div class=\"authenticator-option\">\n            <label class=\"authenticator-option-label\" for=\"protocol\">\n              ${i18nString(UIStrings.protocol)}\n            </label>\n            <select id=\"protocol\" jslog=${VisualLogging.dropDown('protocol').track({change: true})}\n                value=${options.protocol}\n                @change=${(e:Event) => this.#updateNewAuthenticatorSectionOptions({protocol:\n                    (e.target as HTMLSelectElement).value as Protocol.WebAuthn.AuthenticatorProtocol})}>\n              ${Object.values(PROTOCOL_AUTHENTICATOR_VALUES).sort().map(option => html`\n                <option value=${option} jslog=${VisualLogging.item(option).track({click: true})}\n                        .selected=${options.protocol === option}>\n                  ${option}\n                </option>`)}\n            </select>\n          </div>\n          <div class=\"authenticator-option\">\n            <label for=\"transport\" class=\"authenticator-option-label\">\n              ${i18nString(UIStrings.transport)}\n            </label>\n            <select id=\"transport\"\n                value=${options.transport}\n                jslog=${VisualLogging.dropDown('transport').track({change: true})}\n                @change=${(e:Event) => this.#updateNewAuthenticatorSectionOptions({transport:\n                    (e.target as HTMLSelectElement).value as Protocol.WebAuthn.AuthenticatorTransport})}>\n              ${[\n                Protocol.WebAuthn.AuthenticatorTransport.Usb,\n                Protocol.WebAuthn.AuthenticatorTransport.Ble,\n                Protocol.WebAuthn.AuthenticatorTransport.Nfc,\n                  ...(isCtap2 ? [Protocol.WebAuthn.AuthenticatorTransport.Internal] : [])\n              ].map(option => html`\n                  <option value=${option} jslog=${VisualLogging.item(option).track({click: true})}\n                      .selected=${options.transport === option}\n                      .disabled=${this.#hasInternalAuthenticator\n                          && option === Protocol.WebAuthn.AuthenticatorTransport.Internal}>\n                    ${option}\n                  </option>`)\n              }\n            </select>\n          </div>\n          <div class=\"authenticator-option\">\n            <label for=\"resident-key\" class=\"authenticator-option-label\">\n              ${i18nString(UIStrings.supportsResidentKeys)}\n            </label>\n            <input id=\"resident-key\" class=\"authenticator-option-checkbox\" type=\"checkbox\"\n                jslog=${VisualLogging.toggle('resident-key').track({change: true})}\n                @change=${(e:Event) => this.#updateNewAuthenticatorSectionOptions({hasResidentKey:\n                    (e.target as HTMLInputElement).checked})}\n                .checked=${Boolean(options.hasResidentKey && isCtap2)} .disabled=${!isCtap2}>\n          </div>\n          <div class=\"authenticator-option\">\n            <label for=\"user-verification\" class=\"authenticator-option-label\">\n              ${i18nString(UIStrings.supportsUserVerification)}\n            </label>\n            <input id=\"user-verification\" class=\"authenticator-option-checkbox\" type=\"checkbox\"\n                jslog=${VisualLogging.toggle('user-verification').track({change: true})}\n                @change=${(e: Event) => this.#updateNewAuthenticatorSectionOptions({hasUserVerification:\n                    (e.target as HTMLInputElement).checked})}\n                .checked=${Boolean(options.hasUserVerification && isCtap2)} .disabled=${!isCtap2}>\n          </div>\n          <div class=\"authenticator-option\">\n            <label for=\"large-blob\" class=\"authenticator-option-label\">\n              ${i18nString(UIStrings.supportsLargeBlob)}\n            </label>\n            <input id=\"large-blob\" class=\"authenticator-option-checkbox\" type=\"checkbox\"\n                jslog=${VisualLogging.toggle('large-blob').track({change: true})}\n                @change=${(e: Event) => this.#updateNewAuthenticatorSectionOptions({hasLargeBlob:\n                    (e.target as HTMLInputElement).checked})}\n                .checked=${Boolean(options.hasLargeBlob && isCtap2 && options.hasResidentKey)}\n                .disabled=${!options.hasResidentKey || !isCtap2}>\n          </div>\n          <div class=\"authenticator-option\">\n            <div class=\"authenticator-option-label\"></div>\n            <devtools-button @click=${this.#handleAddAuthenticatorButton}\n                id=\"add-authenticator\"\n                .jslogContext=${'webauthn.add-authenticator'}\n                .variant=${Buttons.Button.Variant.OUTLINED}>\n              ${i18nString(UIStrings.add)}\n            </devtools-button>\n          </div>\n        </div>\n      </div>`;\n    // clang-format on\n  }\n\n  async #addAuthenticatorSection(\n      authenticatorId: Protocol.WebAuthn.AuthenticatorId,\n      options: Protocol.WebAuthn.VirtualAuthenticatorOptions): Promise<HTMLDivElement> {\n    const section = document.createElement('div');\n    section.classList.add('authenticator-section');\n    section.setAttribute('data-authenticator-id', authenticatorId);\n    section.setAttribute('jslog', `${VisualLogging.section('authenticator')}`);\n    this.#authenticatorsView.appendChild(section);\n    await this.#clearActiveAuthenticator();\n    this.#activeAuthId = authenticatorId;  // Newly added authenticator is automatically set as active.\n\n    const userFriendlyName = authenticatorId.slice(-5);  // User friendly name defaults to last 5 chars of UUID.\n    // clang-format off\n    // eslint-disable-next-line rulesdir/no-lit-render-outside-of-view\n    render(html`\n      <div class=\"authenticator-section-header\">\n        <div class=\"authenticator-section-title\" role=\"heading\" aria-level=\"2\">\n          <devtools-toolbar class=\"edit-name-toolbar\">\n            <devtools-button title=${i18nString(UIStrings.editName)}\n                class=\"edit-name\"\n                @click=${(e: Event) => this.#handleEditNameButton(e.target as HTMLElement)}\n                .iconName=${'edit'} .variant=${Buttons.Button.Variant.TOOLBAR}\n                .jslogContext=${'edit-name'}></devtools-button>\n            <devtools-button title=${i18nString(UIStrings.saveName)}\n                @click=${(e: Event) => this.#handleSaveNameButton(e.target as HTMLElement)}\n                .iconName=${'checkmark'} .variant=${Buttons.Button.Variant.TOOLBAR}\n                class=\"save-name hidden\"\n                .jslogContext=${'save-name'}></devtools-button>\n          </devtools-toolbar>\n          <input class=\"authenticator-name-field\"\n              placeholder=${i18nString(UIStrings.enterNewName)}\n              jslog=${VisualLogging.textField('name').track({keydown: 'Enter', change: true})}\n              value=${i18nString(UIStrings.authenticatorS, {PH1: userFriendlyName})} disabled\n              @focusout=${(e: Event) => this.#handleSaveNameButton(e.target as HTMLElement)}\n              @keydown=${(event: KeyboardEvent) => {\n                if (event.key === 'Enter') {\n                  this.#handleSaveNameButton(event.target as HTMLElement);\n                }\n              }}>\n        </div>\n        <div class=\"active-button-container\">\n          <label title=${i18nString(UIStrings.setSAsTheActiveAuthenticator, {PH1: userFriendlyName})}>\n            <input type=\"radio\" checked @change=${this.#setActiveAuthenticator.bind(this, authenticatorId)}\n                  jslog=${VisualLogging.toggle('webauthn.active-authenticator').track({change: true})}>\n            ${i18nString(UIStrings.active)}\n          </label>\n        </div>\n        <button class=\"text-button\" @click=${this.removeAuthenticator.bind(this, authenticatorId)}\n            jslog=${VisualLogging.action('webauthn.remove-authenticator').track({click: true})}>\n          ${i18nString(UIStrings.remove)}\n        </button>\n      </div>\n      ${this.#renderAuthenticatorFields(authenticatorId, options)}\n      <div class=\"credentials-title\">${i18nString(UIStrings.credentials)}</div>\n    `, section, {host: this});\n    // clang-format on\n\n    const dataGrid = this.#createCredentialsDataGrid(authenticatorId);\n    dataGrid.asWidget().show(section);\n    if (this.#model) {\n      this.#model.addEventListener(\n          SDK.WebAuthnModel.Events.CREDENTIAL_ADDED, this.#addCredential.bind(this, authenticatorId));\n      this.#model.addEventListener(\n          SDK.WebAuthnModel.Events.CREDENTIAL_ASSERTED, this.#updateCredential.bind(this, authenticatorId));\n      this.#model.addEventListener(\n          SDK.WebAuthnModel.Events.CREDENTIAL_UPDATED, this.#updateCredential.bind(this, authenticatorId));\n      this.#model.addEventListener(\n          SDK.WebAuthnModel.Events.CREDENTIAL_DELETED, this.#deleteCredential.bind(this, authenticatorId));\n    }\n    section.createChild('div', 'divider');\n\n    return section;\n  }\n\n  /**\n   * Creates the fields describing the authenticator in the front end.\n   */\n  #renderAuthenticatorFields(authenticatorId: string, options: Protocol.WebAuthn.VirtualAuthenticatorOptions):\n      Lit.TemplateResult {\n    return html`\n      <div class=\"authenticator-fields\">\n        <div class=\"authenticator-field\">\n          <label class=\"authenticator-option-label\">${i18nString(UIStrings.uuid)}</label>\n          <div class=\"authenticator-field-value\">${authenticatorId}</div>\n        </div>\n        <div class=\"authenticator-field\">\n          <label class=\"authenticator-option-label\">${i18nString(UIStrings.protocol)}</label>\n          <div class=\"authenticator-field-value\">${options.protocol}</div>\n        </div>\n        <div class=\"authenticator-field\">\n          <label class=\"authenticator-option-label\">${i18nString(UIStrings.transport)}</label>\n          <div class=\"authenticator-field-value\">${options.transport}</div>\n        </div>\n        <div class=\"authenticator-field\">\n          <label class=\"authenticator-option-label\">\n            ${i18nString(UIStrings.supportsResidentKeys)}\n          </label>\n          <div class=\"authenticator-field-value\">\n            ${options.hasResidentKey ? i18nString(UIStrings.yes) : i18nString(UIStrings.no)}\n          </div>\n        </div>\n        <div class=\"authenticator-field\">\n          <label class=\"authenticator-option-label\">\n            ${i18nString(UIStrings.supportsLargeBlob)}\n          </label>\n          <div class=\"authenticator-field-value\">\n           ${options.hasLargeBlob ? i18nString(UIStrings.yes) : i18nString(UIStrings.no)}\n          </div>\n        </div>\n        <div class=\"authenticator-field\">\n          <label class=\"authenticator-option-label\">\n            ${i18nString(UIStrings.supportsUserVerification)}\n          </label>\n          <div class=\"authenticator-field-value\">\n            ${options.hasUserVerification ? i18nString(UIStrings.yes) : i18nString(UIStrings.no)}\n          </div>\n        </div>\n      </div>`;\n  }\n\n  #activeAuthId: Protocol.WebAuthn.AuthenticatorId|null = null;\n  #hasBeenEnabled = false;\n  readonly dataGrids = new Map<Protocol.WebAuthn.AuthenticatorId, DataGrid.DataGrid.DataGridImpl<DataGridNode>>();\n  #enableCheckbox!: HTMLInputElement;\n  readonly #availableAuthenticatorSetting: Common.Settings.Setting<AvailableAuthenticatorOptions[]>;\n  #model?: SDK.WebAuthnModel.WebAuthnModel;\n  #authenticatorsView: HTMLElement;\n  #newAuthenticatorOptions: Protocol.WebAuthn.VirtualAuthenticatorOptions = {\n    protocol: Protocol.WebAuthn.AuthenticatorProtocol.Ctap2,\n    transport: Protocol.WebAuthn.AuthenticatorTransport.Usb,\n    hasResidentKey: false,\n    hasUserVerification: false,\n    hasLargeBlob: false,\n    automaticPresenceSimulation: true,\n    isUserVerified: true,\n  };\n  #hasInternalAuthenticator = false;\n  #isEnabling?: Promise<void>;\n\n  constructor() {\n    super(true);\n    this.registerRequiredCSS(webauthnPaneStyles);\n\n    this.element.setAttribute('jslog', `${VisualLogging.panel('webauthn').track({resize: true})}`);\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.WebAuthnModel.WebAuthnModel, this, {scoped: true});\n\n    this.contentElement.classList.add('webauthn-pane');\n\n    this.#availableAuthenticatorSetting =\n        Common.Settings.Settings.instance().createSetting<AvailableAuthenticatorOptions[]>(\n            'webauthn-authenticators', []);\n    this.#updateInternalTransportAvailability();\n\n    this.#authenticatorsView = this.contentElement.createChild('div', 'authenticators-view');\n    this.performUpdate();\n    this.#updateVisibility(false);\n  }\n\n  override performUpdate(): void {\n    // eslint-disable-next-line rulesdir/no-lit-render-outside-of-view\n    render(\n        [\n          this.#renderToolbar(), this.#authenticatorsView, this.#renderLearnMoreView(),\n          this.#renderNewAuthenticatorSection()\n        ],\n        this.contentElement, {host: this});\n  }\n\n  modelAdded(model: SDK.WebAuthnModel.WebAuthnModel): void {\n    if (model.target() === model.target().outermostTarget()) {\n      this.#model = model;\n    }\n  }\n\n  modelRemoved(model: SDK.WebAuthnModel.WebAuthnModel): void {\n    if (model.target() === model.target().outermostTarget()) {\n      this.#model = undefined;\n    }\n  }\n\n  async #loadInitialAuthenticators(): Promise<void> {\n    let activeAuthenticatorId: Protocol.WebAuthn.AuthenticatorId|null = null;\n    const availableAuthenticators = this.#availableAuthenticatorSetting.get();\n    for (const options of availableAuthenticators) {\n      if (!this.#model) {\n        continue;\n      }\n\n      const authenticatorId = await this.#model.addAuthenticator(options);\n      void this.#addAuthenticatorSection(authenticatorId, options);\n      // Update the authenticatorIds in the options.\n      options.authenticatorId = authenticatorId;\n      if (options.active) {\n        activeAuthenticatorId = authenticatorId;\n      }\n    }\n\n    // Update the settings to reflect the new authenticatorIds.\n    this.#availableAuthenticatorSetting.set(availableAuthenticators);\n    if (activeAuthenticatorId) {\n      void this.#setActiveAuthenticator(activeAuthenticatorId);\n    }\n  }\n\n  override async ownerViewDisposed(): Promise<void> {\n    if (this.#enableCheckbox) {\n      this.#enableCheckbox.checked = false;\n    }\n    await this.#setVirtualAuthEnvEnabled(false);\n  }\n\n  #addCredential(authenticatorId: Protocol.WebAuthn.AuthenticatorId, {\n    data: event,\n  }: Common.EventTarget.EventTargetEvent<Protocol.WebAuthn.CredentialAddedEvent>): void {\n    const dataGrid = this.dataGrids.get(authenticatorId);\n    if (!dataGrid) {\n      return;\n    }\n    const emptyNode = dataGrid.rootNode().children.find(node => !Object.keys(node.data).length);\n    if (emptyNode) {\n      dataGrid.rootNode().removeChild(emptyNode);\n    }\n    const node = new DataGridNode(event.credential);\n    dataGrid.rootNode().appendChild(node);\n  }\n\n  #updateCredential(\n      authenticatorId: Protocol.WebAuthn.AuthenticatorId,\n      {\n        data: event,\n      }: Common.EventTarget\n          .EventTargetEvent<Protocol.WebAuthn.CredentialAssertedEvent&Protocol.WebAuthn.CredentialUpdatedEvent>): void {\n    const dataGrid = this.dataGrids.get(authenticatorId);\n    if (!dataGrid) {\n      return;\n    }\n    const node = dataGrid.rootNode().children.find(node => node.data?.credentialId === event.credential.credentialId);\n    if (!node) {\n      return;\n    }\n    node.data = event.credential;\n  }\n\n  #deleteCredential(authenticatorId: Protocol.WebAuthn.AuthenticatorId, {\n    data: event,\n  }: Common.EventTarget.EventTargetEvent<Protocol.WebAuthn.CredentialDeletedEvent>): void {\n    const dataGrid = this.dataGrids.get(authenticatorId);\n    if (!dataGrid) {\n      return;\n    }\n    const node = dataGrid.rootNode().children.find(node => node.data?.credentialId === event.credentialId);\n    if (!node) {\n      return;\n    }\n    node.remove();\n  }\n\n  async #setVirtualAuthEnvEnabled(enable: boolean): Promise<void> {\n    await this.#isEnabling;\n    this.#isEnabling = new Promise<void>(async (resolve: (value: void) => void) => {\n      if (enable && !this.#hasBeenEnabled) {\n        // Ensures metric is only tracked once per session.\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.VirtualAuthenticatorEnvironmentEnabled);\n        this.#hasBeenEnabled = true;\n      }\n      if (this.#model) {\n        await this.#model.setVirtualAuthEnvEnabled(enable);\n      }\n\n      if (enable) {\n        await this.#loadInitialAuthenticators();\n      } else {\n        this.#removeAuthenticatorSections();\n      }\n\n      this.#updateVisibility(enable);\n      this.#isEnabling = undefined;\n      resolve();\n    });\n  }\n\n  #updateVisibility(enabled: boolean): void {\n    this.contentElement.classList.toggle('enabled', enabled);\n  }\n\n  #removeAuthenticatorSections(): void {\n    this.#authenticatorsView.innerHTML = '';\n    for (const dataGrid of this.dataGrids.values()) {\n      dataGrid.asWidget().detach();\n    }\n    this.dataGrids.clear();\n  }\n\n  #handleCheckboxToggle(e: MouseEvent): void {\n    void this.#setVirtualAuthEnvEnabled((e.target as HTMLInputElement).checked);\n  }\n\n  #updateNewAuthenticatorSectionOptions(change: Partial<Protocol.WebAuthn.VirtualAuthenticatorOptions>): void {\n    Object.assign(this.#newAuthenticatorOptions, change);\n    this.requestUpdate();\n  }\n\n  #updateInternalTransportAvailability(): void {\n    this.#hasInternalAuthenticator = Boolean(this.#availableAuthenticatorSetting.get().find(\n        authenticator => authenticator.transport === Protocol.WebAuthn.AuthenticatorTransport.Internal));\n    if (this.#hasInternalAuthenticator &&\n        this.#newAuthenticatorOptions.transport === Protocol.WebAuthn.AuthenticatorTransport.Internal) {\n      this.#newAuthenticatorOptions.transport = Protocol.WebAuthn.AuthenticatorTransport.Nfc;\n    }\n    this.requestUpdate();\n  }\n\n  async #handleAddAuthenticatorButton(): Promise<void> {\n    const options = this.#newAuthenticatorOptions;\n    if (this.#model) {\n      const authenticatorId = await this.#model.addAuthenticator(options);\n      const availableAuthenticators = this.#availableAuthenticatorSetting.get();\n      availableAuthenticators.push({authenticatorId, active: true, ...options});\n      this.#availableAuthenticatorSetting.set(\n          availableAuthenticators.map(a => ({...a, active: a.authenticatorId === authenticatorId})));\n      const section = await this.#addAuthenticatorSection(authenticatorId, options);\n      const mediaQueryList = window.matchMedia('(prefers-reduced-motion: reduce)');\n      const prefersReducedMotion = mediaQueryList.matches;\n      section.scrollIntoView({block: 'start', behavior: prefersReducedMotion ? 'auto' : 'smooth'});\n      this.#updateInternalTransportAvailability();\n    }\n  }\n\n  #exportCredential(credential: Protocol.WebAuthn.Credential): void {\n    let pem = PRIVATE_KEY_HEADER;\n    for (let i = 0; i < credential.privateKey.length; i += 64) {\n      pem += credential.privateKey.substring(i, i + 64) + '\\n';\n    }\n    pem += PRIVATE_KEY_FOOTER;\n\n    const link = document.createElement('a');\n    link.download = i18nString(UIStrings.privateKeypem);\n    link.href = 'data:application/x-pem-file,' + encodeURIComponent(pem);\n    link.click();\n  }\n\n  #removeCredential(authenticatorId: Protocol.WebAuthn.AuthenticatorId, credentialId: string): void {\n    const dataGrid = this.dataGrids.get(authenticatorId);\n    if (!dataGrid) {\n      return;\n    }\n\n    // @ts-expect-error dataGrid node type is indeterminate.\n    dataGrid.rootNode()\n        .children.find((n: DataGrid.DataGrid.DataGridNode<DataGridNode>) => n.data.credentialId === credentialId)\n        .remove();\n\n    if (!dataGrid.rootNode().children.length) {\n      dataGrid.rootNode().appendChild(new EmptyDataGridNode());\n    }\n\n    if (this.#model) {\n      void this.#model.removeCredential(authenticatorId, credentialId);\n    }\n  }\n\n  #handleEditNameButton(target: HTMLElement): void {\n    const titleElement = target.closest('.authenticator-section-title') as HTMLElement;\n    const nameField = titleElement.querySelector('.authenticator-name-field') as HTMLInputElement;\n    const editName = titleElement.querySelector('.edit-name') as Buttons.Button.Button;\n    const saveName = titleElement.querySelector('.save-name') as Buttons.Button.Button;\n    nameField.disabled = false;\n    titleElement.classList.add('editing-name');\n    nameField.focus();\n    saveName.classList.remove('hidden');\n    editName.classList.add('hidden');\n  }\n\n  #handleSaveNameButton(target: HTMLElement): void {\n    const titleElement = target.closest('.authenticator-section-title') as HTMLElement;\n    const nameField = titleElement.querySelector('.authenticator-name-field') as HTMLInputElement;\n    const editName = titleElement.querySelector('.edit-name') as Buttons.Button.Button;\n    const saveName = titleElement.querySelector('.save-name') as Buttons.Button.Button;\n    const activeLabel = titleElement.querySelector('.active-button-container > label') as HTMLLabelElement;\n    const name = nameField.value;\n    if (!name) {\n      return;\n    }\n    nameField.disabled = true;\n    titleElement.classList.remove('editing-name');\n    editName.classList.remove('hidden');\n    saveName.classList.add('hidden');\n    this.#updateActiveLabelTitle(activeLabel, name);\n  }\n\n  #updateActiveLabelTitle(activeLabel: HTMLLabelElement, authenticatorName: string): void {\n    UI.Tooltip.Tooltip.install(\n        activeLabel, i18nString(UIStrings.setSAsTheActiveAuthenticator, {PH1: authenticatorName}));\n  }\n\n  /**\n   * Removes both the authenticator and its respective UI element.\n   */\n  removeAuthenticator(authenticatorId: Protocol.WebAuthn.AuthenticatorId): void {\n    if (this.#authenticatorsView) {\n      const child = this.#authenticatorsView.querySelector(`[data-authenticator-id=${CSS.escape(authenticatorId)}]`);\n      if (child) {\n        child.remove();\n      }\n    }\n    const dataGrid = this.dataGrids.get(authenticatorId);\n    if (dataGrid) {\n      dataGrid.asWidget().detach();\n      this.dataGrids.delete(authenticatorId);\n    }\n\n    if (this.#model) {\n      void this.#model.removeAuthenticator(authenticatorId);\n    }\n\n    // Update available authenticator setting.\n    const prevAvailableAuthenticators = this.#availableAuthenticatorSetting.get();\n    const newAvailableAuthenticators = prevAvailableAuthenticators.filter(a => a.authenticatorId !== authenticatorId);\n    this.#availableAuthenticatorSetting.set(newAvailableAuthenticators);\n\n    if (this.#activeAuthId === authenticatorId) {\n      const availableAuthenticatorIds = Array.from(this.dataGrids.keys());\n      if (availableAuthenticatorIds.length) {\n        void this.#setActiveAuthenticator(availableAuthenticatorIds[0]);\n      } else {\n        this.#activeAuthId = null;\n      }\n    }\n    this.#updateInternalTransportAvailability();\n  }\n\n  /**\n   * Sets the given authenticator as active.\n   * Note that a newly added authenticator will automatically be set as active.\n   */\n  async #setActiveAuthenticator(authenticatorId: Protocol.WebAuthn.AuthenticatorId): Promise<void> {\n    await this.#clearActiveAuthenticator();\n    if (this.#model) {\n      await this.#model.setAutomaticPresenceSimulation(authenticatorId, true);\n    }\n    this.#activeAuthId = authenticatorId;\n\n    const prevAvailableAuthenticators = this.#availableAuthenticatorSetting.get();\n    const newAvailableAuthenticators =\n        prevAvailableAuthenticators.map(a => ({...a, active: a.authenticatorId === authenticatorId}));\n    this.#availableAuthenticatorSetting.set(newAvailableAuthenticators);\n\n    this.#updateActiveButtons();\n  }\n\n  #updateActiveButtons(): void {\n    const authenticators = this.#authenticatorsView.getElementsByClassName('authenticator-section');\n    Array.from(authenticators).forEach((authenticator: Element) => {\n      const button = (authenticator.querySelector('input[type=\"radio\"]') as HTMLInputElement);\n      if (!button) {\n        return;\n      }\n      button.checked = (authenticator as HTMLElement).dataset.authenticatorId === this.#activeAuthId;\n    });\n  }\n\n  async #clearActiveAuthenticator(): Promise<void> {\n    if (this.#activeAuthId && this.#model) {\n      await this.#model.setAutomaticPresenceSimulation(this.#activeAuthId, false);\n    }\n    this.#activeAuthId = null;\n    this.#updateActiveButtons();\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2020 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.webauthn-pane {\n  overflow: auto;\n  min-width: 500px;\n}\n\n.webauthn-toolbar-container {\n  display: flex;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n  flex: 0 0 auto;\n}\n\n.webauthn-toolbar {\n  display: inline-block;\n}\n\n.authenticators-view {\n  padding: 0 var(--sys-size-9);\n  min-height: auto;\n  display: none;\n}\n\n.webauthn-pane.enabled .authenticators-view {\n  display: block;\n}\n\n/* New Authenticator Section */\n.new-authenticator-title {\n  display: block;\n  padding: var(--sys-size-7) 0 var(--sys-size-5) 0;\n  font: var(--sys-typescale-headline5);\n\n  &:has(devtools-button) {\n    padding-top: var(--sys-size-4);\n  }\n}\n\n.new-authenticator-container {\n  display: none;\n  padding-left:  var(--sys-size-9);\n}\n\n.authenticator-option {\n  > select {\n    margin: 0 var(--sys-size-9) var(--sys-size-3) var(--sys-size-9);\n  }\n\n  > devtools-button {\n    margin: var(--sys-size-3) var(--sys-size-9);\n  }\n\n  > input[type=\"checkbox\"] {\n    margin: var(--sys-size-5) var(--sys-size-9);\n  }\n}\n\n.webauthn-pane.enabled .new-authenticator-container {\n  display: block;\n}\n\n.new-authenticator-form {\n  border: none;\n  flex: 0 0 auto;\n  margin: 0;\n  padding-bottom: var(--sys-size-5);\n}\n\n.webauthn-pane select {\n  width: 120px;\n}\n/* Active Authenticator Section */\n.authenticator-section {\n  display: block;\n}\n\n.divider {\n  border-bottom: var(--sys-size-1) solid var(--sys-color-divider);\n  margin: 10px calc(var(--sys-size-9) * -1) 0;\n}\n\n.authenticator-fields {\n  border: none;\n  flex: 0 0 auto;\n  margin-bottom: 10px;\n}\n\n.authenticator-section-header {\n  margin: var(--sys-size-4) 0 var(--sys-size-5) calc(var(--sys-size-5) * -1);\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n}\n\n.authenticator-section-title {\n  line-height: 24px;\n  display: inline-flex;\n}\n\n.authenticator-section-title .authenticator-name-field {\n  display: inline-block;\n  border: none;\n  animation: save-flash 0.2s;\n  text-overflow: ellipsis;\n  font: var(--sys-typescale-headline5);\n}\n\n.authenticator-section-title.editing-name .authenticator-name-field {\n  border-bottom: 1px solid var(--sys-color-neutral-outline);\n  font-weight: normal;\n  animation: none;\n}\n\n.authenticator-field-value {\n  font: var(--sys-typescale-monospace-regular);\n  line-height: 18px;\n}\n\n.authenticator-field {\n  margin: var(--sys-size-3) 0;\n}\n\n.authenticator-field,\n.authenticator-option {\n  display: flex;\n  align-items: center;\n}\n\n.authenticator-option-label {\n  color: var(--sys-color-on-surface-subtle);\n  font: var(--sys-typescale-body5-medium);\n  padding-right: var(--sys-size-6);\n  text-align: left;\n  min-width: 152px;\n  line-height: 18px;\n}\n\ntd .text-button {\n  min-width: 20px;\n  margin: auto;\n}\n\n.active-button-container {\n  display: inline-block;\n  min-width: 28px;\n}\n\n.edit-name-toolbar {\n  display: inline-block;\n  vertical-align: middle;\n}\n\n@keyframes save-flash {\n  from { opacity: 0%; }\n  to { opacity: 100%; }\n}\n/* Credentials Table */\n\n.data-grid-data-grid-node.centered {\n  text-align: center;\n}\n\n.data-grid td {\n  vertical-align: middle;\n}\n\n.credentials-title {\n  display: block;\n  font: var(--sys-typescale-headline5);\n  padding: var(--sys-size-7) 0 var(--sys-size-5) 0;\n  border-top: var(--sys-size-1) solid var(--sys-color-divider);\n  margin-right: calc(var(--sys-size-9) * -1);\n}\n\n.code {\n  font-family: monospace;\n}\n\n.learn-more {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  text-align: center;\n  overflow: hidden;\n}\n\n.webauthn-pane.enabled .learn-more {\n  display: none;\n}\n\n/*# sourceURL=${import.meta.resolve('./webauthnPane.css')} */`;"],
  "mappings": "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",
  "names": ["i18nTemplate", "section", "node"]
}
