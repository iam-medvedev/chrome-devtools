{"version":3,"file":"WebauthnPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/webauthn/WebauthnPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api, rulesdir/inject-checkbox-styles */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport webauthnPaneStyles from './webauthnPane.css.js';\nconst {render, html, Directives: {ref}} = Lit;\nconst {widgetConfig} = UI.Widget;\n\nconst UIStrings = {\n  /**\n   *@description Label for button that allows user to download the private key related to a credential.\n   */\n  export: 'Export',\n  /**\n   *@description Label for an item to remove something\n   */\n  remove: 'Remove',\n  /**\n   *@description Label for empty credentials table.\n   *@example {navigator.credentials.create()} PH1\n   */\n  noCredentialsTryCallingSFromYour: 'No credentials. Try calling {PH1} from your website.',\n  /**\n   *@description Label for checkbox to toggle the virtual authenticator environment allowing user to interact with software-based virtual authenticators.\n   */\n  enableVirtualAuthenticator: 'Enable virtual authenticator environment',\n  /**\n   *@description Label for ID field for credentials.\n   */\n  id: 'ID',\n  /**\n   *@description Label for field that describes whether a credential is a resident credential.\n   */\n  isResident: 'Is Resident',\n  /**\n   *@description Label for credential field that represents the Relying Party ID that the credential is scoped to.\n   */\n  rpId: 'RP ID',\n  /**\n   *@description Label for a column in a table. A field/unique ID that represents the user a credential is mapped to.\n   */\n  userHandle: 'User Handle',\n  /**\n   *@description Label for signature counter field for credentials which represents the number of successful assertions.\n   * See https://w3c.github.io/webauthn/#signature-counter.\n   */\n  signCount: 'Signature Count',\n  /**\n   *@description Label for column with actions for credentials.\n   */\n  actions: 'Actions',\n  /**\n   *@description Title for the table that holds the credentials that a authenticator has registered.\n   */\n  credentials: 'Credentials',\n  /**\n   *@description Text that shows before the virtual environment is enabled.\n   */\n  noAuthenticator: 'No authenticator set up',\n  /**\n   *@description That that shows before virtual environment is enabled explaining the panel.\n   */\n  useWebauthnForPhishingresistant: 'Use WebAuthn for phishing-resistant authentication.',\n  /**\n   *@description Title for section of interface that allows user to add a new virtual authenticator.\n   */\n  newAuthenticator: 'New authenticator',\n  /**\n   *@description Text for security or network protocol\n   */\n  protocol: 'Protocol',\n  /**\n   *@description Label for input to select which transport option to use on virtual authenticators, e.g. USB or Bluetooth.\n   */\n  transport: 'Transport',\n  /**\n   *@description Label for checkbox that toggles resident key support on virtual authenticators.\n   */\n  supportsResidentKeys: 'Supports resident keys',\n  /**\n   *@description Label for checkbox that toggles large blob support on virtual authenticators. Large blobs are opaque data associated\n   * with a WebAuthn credential that a website can store, like an SSH certificate or a symmetric encryption key.\n   * See https://w3c.github.io/webauthn/#sctn-large-blob-extension\n   */\n  supportsLargeBlob: 'Supports large blob',\n  /**\n   *@description Text to add something\n   */\n  add: 'Add',\n  /**\n   *@description Label for radio button that toggles whether an authenticator is active.\n   */\n  active: 'Active',\n  /**\n   *@description Title for button that enables user to customize name of authenticator.\n   */\n  editName: 'Edit name',\n  /**\n   *@description Placeholder for the input box to customize name of authenticator.\n   */\n  enterNewName: 'Enter new name',\n  /**\n   *@description Title for button that enables user to save name of authenticator after editing it.\n   */\n  saveName: 'Save name',\n  /**\n   *@description Title for a user-added virtual authenticator which is uniquely identified with its AUTHENTICATORID.\n   *@example {8c7873be-0b13-4996-a794-1521331bbd96} PH1\n   */\n  authenticatorS: 'Authenticator {PH1}',\n  /**\n   *@description Name for generated file which user can download. A private key is a secret code which enables encoding and decoding of a credential. .pem is the file extension.\n   */\n  privateKeypem: 'Private key.pem',\n  /**\n   *@description Label for field that holds an authenticator's universally unique identifier (UUID).\n   */\n  uuid: 'UUID',\n  /**\n   *@description Label for checkbox that toggles user verification support on virtual authenticators.\n   */\n  supportsUserVerification: 'Supports user verification',\n  /**\n   *@description Text in Timeline indicating that input has happened recently\n   */\n  yes: 'Yes',\n  /**\n   *@description Text in Timeline indicating that input has not happened recently\n   */\n  no: 'No',\n  /**\n   *@description Title of radio button that sets an authenticator as active.\n   *@example {Authenticator ABCDEF} PH1\n   */\n  setSAsTheActiveAuthenticator: 'Set {PH1} as the active authenticator',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/webauthn/WebauthnPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nTemplate = Lit.i18nTemplate.bind(undefined, str_);\n\nconst WEB_AUTHN_EXPLANATION_URL =\n    'https://developer.chrome.com/docs/devtools/webauthn' as Platform.DevToolsPath.UrlString;\n\nclass DataGridNode extends DataGrid.DataGrid.DataGridNode<DataGridNode> {\n  constructor(private readonly credential: Protocol.WebAuthn.Credential) {\n    super(credential);\n  }\n\n  override nodeSelfHeight(): number {\n    return 24;\n  }\n\n  override createCell(columnId: string): HTMLElement {\n    const cell = super.createCell(columnId);\n    UI.Tooltip.Tooltip.install(cell, cell.textContent || '');\n\n    if (columnId !== 'actions') {\n      return cell;\n    }\n\n    const onExportCredential = (): void => {\n      if (this.dataGrid) {\n        (this.dataGrid as WebauthnDataGrid).onExportCredential(this.credential);\n      }\n    };\n    const onRemoveCredential = (): void => {\n      if (this.dataGrid) {\n        (this.dataGrid as WebauthnDataGrid).onRemoveCredential(this.credential);\n      }\n    };\n    // clang-format off\n    // eslint-disable-next-line rulesdir/no-lit-render-outside-of-view\n    render(html`\n       <devtools-button .variant=${Buttons.Button.Variant.OUTLINED}\n           @click=${onExportCredential} .jslogContext=${'webauthn.export-credential'}>\n        ${i18nString(UIStrings.export)}\n      </devtools-button>\n      <devtools-button .variant=${Buttons.Button.Variant.OUTLINED}\n          @click=${onRemoveCredential} .jslogContext=${'webauthn.remove-credential'}>\n        ${i18nString(UIStrings.remove)}\n      </devtools-button>`, cell);\n    // clang-format on\n\n    return cell;\n  }\n}\n\nclass WebauthnDataGrid extends DataGrid.DataGrid.DataGridImpl<DataGridNode> {\n  onExportCredential = (_: Protocol.WebAuthn.Credential): void => {};\n  onRemoveCredential = (_: Protocol.WebAuthn.Credential): void => {};\n}\n\nclass EmptyDataGridNode extends DataGrid.DataGrid.DataGridNode<DataGridNode> {\n  override createCells(element: Element): void {\n    element.removeChildren();\n    // clang-format off\n    // eslint-disable-next-line rulesdir/no-lit-render-outside-of-view\n    render(html`\n      <td class=${DataGrid.DataGrid.Align.CENTER} colspan=${this.dataGrid?.visibleColumnsArray.length ?? 1}>\n        ${i18nTemplate(UIStrings.noCredentialsTryCallingSFromYour,\n                       {PH1: html`<span class=\"code\">navigator.credentials.create()</span>`})}\n      </td>`, element as HTMLElement);\n    // clang-format on\n  }\n}\n\ntype AvailableAuthenticatorOptions = Protocol.WebAuthn.VirtualAuthenticatorOptions&{\n  active: boolean,\n  authenticatorId: Protocol.WebAuthn.AuthenticatorId,\n};\n\n// We extrapolate this variable as otherwise git detects a private key, even though we\n// perform string manipulation. If we extract the name, then the regex doesn't match\n// and we can upload as expected.\nconst PRIVATE_NAME = 'PRIVATE';\nconst PRIVATE_KEY_HEADER = `-----BEGIN ${PRIVATE_NAME} KEY-----\n`;\nconst PRIVATE_KEY_FOOTER = `-----END ${PRIVATE_NAME} KEY-----`;\n\nconst PROTOCOL_AUTHENTICATOR_VALUES: Protocol.EnumerableEnum<typeof Protocol.WebAuthn.AuthenticatorProtocol> = {\n  Ctap2: Protocol.WebAuthn.AuthenticatorProtocol.Ctap2,\n  U2f: Protocol.WebAuthn.AuthenticatorProtocol.U2f,\n};\n\nexport class WebauthnPaneImpl extends UI.Widget.VBox implements\n    SDK.TargetManager.SDKModelObserver<SDK.WebAuthnModel.WebAuthnModel> {\n  #createCredentialsDataGrid(authenticatorId: Protocol.WebAuthn.AuthenticatorId):\n      DataGrid.DataGrid.DataGridImpl<DataGridNode> {\n    const columns = ([\n      {\n        id: 'credentialId',\n        title: i18nString(UIStrings.id),\n        longText: true,\n        weight: 24,\n      },\n      {\n        id: 'isResidentCredential',\n        title: i18nString(UIStrings.isResident),\n        dataType: DataGrid.DataGrid.DataType.BOOLEAN,\n        weight: 10,\n      },\n      {\n        id: 'rpId',\n        title: i18nString(UIStrings.rpId),\n      },\n      {\n        id: 'userHandle',\n        title: i18nString(UIStrings.userHandle),\n      },\n      {\n        id: 'signCount',\n        title: i18nString(UIStrings.signCount),\n      },\n      {id: 'actions', title: i18nString(UIStrings.actions)},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n\n    const dataGridConfig = {\n      displayName: i18nString(UIStrings.credentials),\n      columns,\n      editCallback: undefined,\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    };\n    const dataGrid = new WebauthnDataGrid(dataGridConfig);\n    dataGrid.renderInline();\n    dataGrid.setStriped(true);\n    dataGrid.onExportCredential = this.#exportCredential.bind(this);\n    dataGrid.onRemoveCredential = ({credentialId}) => this.#removeCredential(authenticatorId, credentialId);\n    dataGrid.rootNode().appendChild(new EmptyDataGridNode());\n\n    this.dataGrids.set(authenticatorId, dataGrid);\n\n    return dataGrid;\n  }\n\n  #renderToolbar(): Lit.TemplateResult {\n    const enableCheckboxTitle = i18nString(UIStrings.enableVirtualAuthenticator);\n    // clang-format off\n    return html`\n      <div class=\"webauthn-toolbar-container\" jslog=${VisualLogging.toolbar()} role=\"toolbar\">\n        <devtools-toolbar class=\"webauthn-toolbar\" role=\"presentation\">\n          <devtools-checkbox title=${enableCheckboxTitle}\n              @click=${this.#handleCheckboxToggle.bind(this)}\n              .jslogContext=${'virtual-authenticators'}\n              ${ref(e => { this.#enableCheckbox = e as HTMLInputElement; })}>\n            ${enableCheckboxTitle}\n          </devtools-checkbox>\n        </devtools-toolbar>\n      </div>`;\n    // clang-format on\n  }\n\n  #renderLearnMoreView(): Lit.TemplateResult {\n    // clang-format off\n    return html`\n      <devtools-widget class=\"learn-more\" .widgetConfig=${widgetConfig(UI.EmptyWidget.EmptyWidget, {\n          header: i18nString(UIStrings.noAuthenticator),\n          text: i18nString(UIStrings.useWebauthnForPhishingresistant),\n          link: WEB_AUTHN_EXPLANATION_URL})}>\n      </devtools-widget>`;\n    // clang-format on\n  }\n\n  #renderNewAuthenticatorSection(): Lit.TemplateResult {\n    const options = this.#newAuthenticatorOptions;\n    const isCtap2 = options.protocol === Protocol.WebAuthn.AuthenticatorProtocol.Ctap2;\n    // clang-format off\n    return html`\n      <div class=\"new-authenticator-container\">\n        <label class=\"new-authenticator-title\">\n          ${i18nString(UIStrings.newAuthenticator)}\n        </label>\n        <div class=\"new-authenticator-form\" jslog=${VisualLogging.section('new-authenticator')}>\n          <div class=\"authenticator-option\">\n            <label class=\"authenticator-option-label\" for=\"protocol\">\n              ${i18nString(UIStrings.protocol)}\n            </label>\n            <select id=\"protocol\" jslog=${VisualLogging.dropDown('protocol').track({change: true})}\n                value=${options.protocol}\n                @change=${(e:Event) => this.#updateNewAuthenticatorSectionOptions({protocol:\n                    (e.target as HTMLSelectElement).value as Protocol.WebAuthn.AuthenticatorProtocol})}>\n              ${Object.values(PROTOCOL_AUTHENTICATOR_VALUES).sort().map(option => html`\n                <option value=${option} jslog=${VisualLogging.item(option).track({click: true})}\n                        .selected=${options.protocol === option}>\n                  ${option}\n                </option>`)}\n            </select>\n          </div>\n          <div class=\"authenticator-option\">\n            <label for=\"transport\" class=\"authenticator-option-label\">\n              ${i18nString(UIStrings.transport)}\n            </label>\n            <select id=\"transport\"\n                value=${options.transport}\n                jslog=${VisualLogging.dropDown('transport').track({change: true})}\n                @change=${(e:Event) => this.#updateNewAuthenticatorSectionOptions({transport:\n                    (e.target as HTMLSelectElement).value as Protocol.WebAuthn.AuthenticatorTransport})}>\n              ${[\n                Protocol.WebAuthn.AuthenticatorTransport.Usb,\n                Protocol.WebAuthn.AuthenticatorTransport.Ble,\n                Protocol.WebAuthn.AuthenticatorTransport.Nfc,\n                  ...(isCtap2 ? [Protocol.WebAuthn.AuthenticatorTransport.Internal] : [])\n              ].map(option => html`\n                  <option value=${option} jslog=${VisualLogging.item(option).track({click: true})}\n                      .selected=${options.transport === option}\n                      .disabled=${this.#hasInternalAuthenticator\n                          && option === Protocol.WebAuthn.AuthenticatorTransport.Internal}>\n                    ${option}\n                  </option>`)\n              }\n            </select>\n          </div>\n          <div class=\"authenticator-option\">\n            <label for=\"resident-key\" class=\"authenticator-option-label\">\n              ${i18nString(UIStrings.supportsResidentKeys)}\n            </label>\n            <input id=\"resident-key\" class=\"authenticator-option-checkbox\" type=\"checkbox\"\n                jslog=${VisualLogging.toggle('resident-key').track({change: true})}\n                @change=${(e:Event) => this.#updateNewAuthenticatorSectionOptions({hasResidentKey:\n                    (e.target as HTMLInputElement).checked})}\n                .checked=${Boolean(options.hasResidentKey && isCtap2)} .disabled=${!isCtap2}>\n          </div>\n          <div class=\"authenticator-option\">\n            <label for=\"user-verification\" class=\"authenticator-option-label\">\n              ${i18nString(UIStrings.supportsUserVerification)}\n            </label>\n            <input id=\"user-verification\" class=\"authenticator-option-checkbox\" type=\"checkbox\"\n                jslog=${VisualLogging.toggle('user-verification').track({change: true})}\n                @change=${(e: Event) => this.#updateNewAuthenticatorSectionOptions({hasUserVerification:\n                    (e.target as HTMLInputElement).checked})}\n                .checked=${Boolean(options.hasUserVerification && isCtap2)} .disabled=${!isCtap2}>\n          </div>\n          <div class=\"authenticator-option\">\n            <label for=\"large-blob\" class=\"authenticator-option-label\">\n              ${i18nString(UIStrings.supportsLargeBlob)}\n            </label>\n            <input id=\"large-blob\" class=\"authenticator-option-checkbox\" type=\"checkbox\"\n                jslog=${VisualLogging.toggle('large-blob').track({change: true})}\n                @change=${(e: Event) => this.#updateNewAuthenticatorSectionOptions({hasLargeBlob:\n                    (e.target as HTMLInputElement).checked})}\n                .checked=${Boolean(options.hasLargeBlob && isCtap2 && options.hasResidentKey)}\n                .disabled=${!options.hasResidentKey || !isCtap2}>\n          </div>\n          <div class=\"authenticator-option\">\n            <div class=\"authenticator-option-label\"></div>\n            <devtools-button @click=${this.#handleAddAuthenticatorButton}\n                id=\"add-authenticator\"\n                .jslogContext=${'webauthn.add-authenticator'}\n                .variant=${Buttons.Button.Variant.OUTLINED}>\n              ${i18nString(UIStrings.add)}\n            </devtools-button>\n          </div>\n        </div>\n      </div>`;\n    // clang-format on\n  }\n\n  async #addAuthenticatorSection(\n      authenticatorId: Protocol.WebAuthn.AuthenticatorId,\n      options: Protocol.WebAuthn.VirtualAuthenticatorOptions): Promise<HTMLDivElement> {\n    const section = document.createElement('div');\n    section.classList.add('authenticator-section');\n    section.setAttribute('data-authenticator-id', authenticatorId);\n    section.setAttribute('jslog', `${VisualLogging.section('authenticator')}`);\n    this.#authenticatorsView.appendChild(section);\n    await this.#clearActiveAuthenticator();\n    this.#activeAuthId = authenticatorId;  // Newly added authenticator is automatically set as active.\n\n    const userFriendlyName = authenticatorId.slice(-5);  // User friendly name defaults to last 5 chars of UUID.\n    // clang-format off\n    // eslint-disable-next-line rulesdir/no-lit-render-outside-of-view\n    render(html`\n      <div class=\"authenticator-section-header\">\n        <div class=\"authenticator-section-title\" role=\"heading\" aria-level=\"2\">\n          <devtools-toolbar class=\"edit-name-toolbar\">\n            <devtools-button title=${i18nString(UIStrings.editName)}\n                class=\"edit-name\"\n                @click=${(e: Event) => this.#handleEditNameButton(e.target as HTMLElement)}\n                .iconName=${'edit'} .variant=${Buttons.Button.Variant.TOOLBAR}\n                .jslogContext=${'edit-name'}></devtools-button>\n            <devtools-button title=${i18nString(UIStrings.saveName)}\n                @click=${(e: Event) => this.#handleSaveNameButton(e.target as HTMLElement)}\n                .iconName=${'checkmark'} .variant=${Buttons.Button.Variant.TOOLBAR}\n                class=\"save-name hidden\"\n                .jslogContext=${'save-name'}></devtools-button>\n          </devtools-toolbar>\n          <input class=\"authenticator-name-field\"\n              placeholder=${i18nString(UIStrings.enterNewName)}\n              jslog=${VisualLogging.textField('name').track({keydown: 'Enter', change: true})}\n              value=${i18nString(UIStrings.authenticatorS, {PH1: userFriendlyName})} disabled\n              @focusout=${(e: Event) => this.#handleSaveNameButton(e.target as HTMLElement)}\n              @keydown=${(event: KeyboardEvent) => {\n                if (event.key === 'Enter') {\n                  this.#handleSaveNameButton(event.target as HTMLElement);\n                }\n              }}>\n        </div>\n        <div class=\"active-button-container\">\n          <label title=${i18nString(UIStrings.setSAsTheActiveAuthenticator, {PH1: userFriendlyName})}>\n            <input type=\"radio\" checked @change=${this.#setActiveAuthenticator.bind(this, authenticatorId)}\n                  jslog=${VisualLogging.toggle('webauthn.active-authenticator').track({change: true})}>\n            ${i18nString(UIStrings.active)}\n          </label>\n        </div>\n        <button class=\"text-button\" @click=${this.removeAuthenticator.bind(this, authenticatorId)}\n            jslog=${VisualLogging.action('webauthn.remove-authenticator').track({click: true})}>\n          ${i18nString(UIStrings.remove)}\n        </button>\n      </div>\n      ${this.#renderAuthenticatorFields(authenticatorId, options)}\n      <div class=\"credentials-title\">${i18nString(UIStrings.credentials)}</div>\n    `, section, {host: this});\n    // clang-format on\n\n    const dataGrid = this.#createCredentialsDataGrid(authenticatorId);\n    dataGrid.asWidget().show(section);\n    if (this.#model) {\n      this.#model.addEventListener(\n          SDK.WebAuthnModel.Events.CREDENTIAL_ADDED, this.#addCredential.bind(this, authenticatorId));\n      this.#model.addEventListener(\n          SDK.WebAuthnModel.Events.CREDENTIAL_ASSERTED, this.#updateCredential.bind(this, authenticatorId));\n      this.#model.addEventListener(\n          SDK.WebAuthnModel.Events.CREDENTIAL_UPDATED, this.#updateCredential.bind(this, authenticatorId));\n      this.#model.addEventListener(\n          SDK.WebAuthnModel.Events.CREDENTIAL_DELETED, this.#deleteCredential.bind(this, authenticatorId));\n    }\n    section.createChild('div', 'divider');\n\n    return section;\n  }\n\n  /**\n   * Creates the fields describing the authenticator in the front end.\n   */\n  #renderAuthenticatorFields(authenticatorId: string, options: Protocol.WebAuthn.VirtualAuthenticatorOptions):\n      Lit.TemplateResult {\n    return html`\n      <div class=\"authenticator-fields\">\n        <div class=\"authenticator-field\">\n          <label class=\"authenticator-option-label\">${i18nString(UIStrings.uuid)}</label>\n          <div class=\"authenticator-field-value\">${authenticatorId}</div>\n        </div>\n        <div class=\"authenticator-field\">\n          <label class=\"authenticator-option-label\">${i18nString(UIStrings.protocol)}</label>\n          <div class=\"authenticator-field-value\">${options.protocol}</div>\n        </div>\n        <div class=\"authenticator-field\">\n          <label class=\"authenticator-option-label\">${i18nString(UIStrings.transport)}</label>\n          <div class=\"authenticator-field-value\">${options.transport}</div>\n        </div>\n        <div class=\"authenticator-field\">\n          <label class=\"authenticator-option-label\">\n            ${i18nString(UIStrings.supportsResidentKeys)}\n          </label>\n          <div class=\"authenticator-field-value\">\n            ${options.hasResidentKey ? i18nString(UIStrings.yes) : i18nString(UIStrings.no)}\n          </div>\n        </div>\n        <div class=\"authenticator-field\">\n          <label class=\"authenticator-option-label\">\n            ${i18nString(UIStrings.supportsLargeBlob)}\n          </label>\n          <div class=\"authenticator-field-value\">\n           ${options.hasLargeBlob ? i18nString(UIStrings.yes) : i18nString(UIStrings.no)}\n          </div>\n        </div>\n        <div class=\"authenticator-field\">\n          <label class=\"authenticator-option-label\">\n            ${i18nString(UIStrings.supportsUserVerification)}\n          </label>\n          <div class=\"authenticator-field-value\">\n            ${options.hasUserVerification ? i18nString(UIStrings.yes) : i18nString(UIStrings.no)}\n          </div>\n        </div>\n      </div>`;\n  }\n\n  #activeAuthId: Protocol.WebAuthn.AuthenticatorId|null = null;\n  #hasBeenEnabled = false;\n  readonly dataGrids = new Map<Protocol.WebAuthn.AuthenticatorId, DataGrid.DataGrid.DataGridImpl<DataGridNode>>();\n  #enableCheckbox!: HTMLInputElement;\n  readonly #availableAuthenticatorSetting: Common.Settings.Setting<AvailableAuthenticatorOptions[]>;\n  #model?: SDK.WebAuthnModel.WebAuthnModel;\n  #authenticatorsView: HTMLElement;\n  #newAuthenticatorOptions: Protocol.WebAuthn.VirtualAuthenticatorOptions = {\n    protocol: Protocol.WebAuthn.AuthenticatorProtocol.Ctap2,\n    transport: Protocol.WebAuthn.AuthenticatorTransport.Usb,\n    hasResidentKey: false,\n    hasUserVerification: false,\n    hasLargeBlob: false,\n    automaticPresenceSimulation: true,\n    isUserVerified: true,\n  };\n  #hasInternalAuthenticator = false;\n  #isEnabling?: Promise<void>;\n\n  constructor() {\n    super(true);\n    this.registerRequiredCSS(webauthnPaneStyles);\n\n    this.element.setAttribute('jslog', `${VisualLogging.panel('webauthn').track({resize: true})}`);\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.WebAuthnModel.WebAuthnModel, this, {scoped: true});\n\n    this.contentElement.classList.add('webauthn-pane');\n\n    this.#availableAuthenticatorSetting =\n        Common.Settings.Settings.instance().createSetting<AvailableAuthenticatorOptions[]>(\n            'webauthn-authenticators', []);\n    this.#updateInternalTransportAvailability();\n\n    this.#authenticatorsView = this.contentElement.createChild('div', 'authenticators-view');\n    this.performUpdate();\n    this.#updateVisibility(false);\n  }\n\n  override performUpdate(): void {\n    // eslint-disable-next-line rulesdir/no-lit-render-outside-of-view\n    render(\n        [\n          this.#renderToolbar(), this.#authenticatorsView, this.#renderLearnMoreView(),\n          this.#renderNewAuthenticatorSection()\n        ],\n        this.contentElement, {host: this});\n  }\n\n  modelAdded(model: SDK.WebAuthnModel.WebAuthnModel): void {\n    if (model.target() === model.target().outermostTarget()) {\n      this.#model = model;\n    }\n  }\n\n  modelRemoved(model: SDK.WebAuthnModel.WebAuthnModel): void {\n    if (model.target() === model.target().outermostTarget()) {\n      this.#model = undefined;\n    }\n  }\n\n  async #loadInitialAuthenticators(): Promise<void> {\n    let activeAuthenticatorId: Protocol.WebAuthn.AuthenticatorId|null = null;\n    const availableAuthenticators = this.#availableAuthenticatorSetting.get();\n    for (const options of availableAuthenticators) {\n      if (!this.#model) {\n        continue;\n      }\n\n      const authenticatorId = await this.#model.addAuthenticator(options);\n      void this.#addAuthenticatorSection(authenticatorId, options);\n      // Update the authenticatorIds in the options.\n      options.authenticatorId = authenticatorId;\n      if (options.active) {\n        activeAuthenticatorId = authenticatorId;\n      }\n    }\n\n    // Update the settings to reflect the new authenticatorIds.\n    this.#availableAuthenticatorSetting.set(availableAuthenticators);\n    if (activeAuthenticatorId) {\n      void this.#setActiveAuthenticator(activeAuthenticatorId);\n    }\n  }\n\n  override async ownerViewDisposed(): Promise<void> {\n    if (this.#enableCheckbox) {\n      this.#enableCheckbox.checked = false;\n    }\n    await this.#setVirtualAuthEnvEnabled(false);\n  }\n\n  #addCredential(authenticatorId: Protocol.WebAuthn.AuthenticatorId, {\n    data: event,\n  }: Common.EventTarget.EventTargetEvent<Protocol.WebAuthn.CredentialAddedEvent>): void {\n    const dataGrid = this.dataGrids.get(authenticatorId);\n    if (!dataGrid) {\n      return;\n    }\n    const emptyNode = dataGrid.rootNode().children.find(node => !Object.keys(node.data).length);\n    if (emptyNode) {\n      dataGrid.rootNode().removeChild(emptyNode);\n    }\n    const node = new DataGridNode(event.credential);\n    dataGrid.rootNode().appendChild(node);\n  }\n\n  #updateCredential(\n      authenticatorId: Protocol.WebAuthn.AuthenticatorId,\n      {\n        data: event,\n      }: Common.EventTarget\n          .EventTargetEvent<Protocol.WebAuthn.CredentialAssertedEvent&Protocol.WebAuthn.CredentialUpdatedEvent>): void {\n    const dataGrid = this.dataGrids.get(authenticatorId);\n    if (!dataGrid) {\n      return;\n    }\n    const node = dataGrid.rootNode().children.find(node => node.data?.credentialId === event.credential.credentialId);\n    if (!node) {\n      return;\n    }\n    node.data = event.credential;\n  }\n\n  #deleteCredential(authenticatorId: Protocol.WebAuthn.AuthenticatorId, {\n    data: event,\n  }: Common.EventTarget.EventTargetEvent<Protocol.WebAuthn.CredentialDeletedEvent>): void {\n    const dataGrid = this.dataGrids.get(authenticatorId);\n    if (!dataGrid) {\n      return;\n    }\n    const node = dataGrid.rootNode().children.find(node => node.data?.credentialId === event.credentialId);\n    if (!node) {\n      return;\n    }\n    node.remove();\n  }\n\n  async #setVirtualAuthEnvEnabled(enable: boolean): Promise<void> {\n    await this.#isEnabling;\n    this.#isEnabling = new Promise<void>(async (resolve: (value: void) => void) => {\n      if (enable && !this.#hasBeenEnabled) {\n        // Ensures metric is only tracked once per session.\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.VirtualAuthenticatorEnvironmentEnabled);\n        this.#hasBeenEnabled = true;\n      }\n      if (this.#model) {\n        await this.#model.setVirtualAuthEnvEnabled(enable);\n      }\n\n      if (enable) {\n        await this.#loadInitialAuthenticators();\n      } else {\n        this.#removeAuthenticatorSections();\n      }\n\n      this.#updateVisibility(enable);\n      this.#isEnabling = undefined;\n      resolve();\n    });\n  }\n\n  #updateVisibility(enabled: boolean): void {\n    this.contentElement.classList.toggle('enabled', enabled);\n  }\n\n  #removeAuthenticatorSections(): void {\n    this.#authenticatorsView.innerHTML = '';\n    for (const dataGrid of this.dataGrids.values()) {\n      dataGrid.asWidget().detach();\n    }\n    this.dataGrids.clear();\n  }\n\n  #handleCheckboxToggle(e: MouseEvent): void {\n    void this.#setVirtualAuthEnvEnabled((e.target as HTMLInputElement).checked);\n  }\n\n  #updateNewAuthenticatorSectionOptions(change: Partial<Protocol.WebAuthn.VirtualAuthenticatorOptions>): void {\n    Object.assign(this.#newAuthenticatorOptions, change);\n    this.requestUpdate();\n  }\n\n  #updateInternalTransportAvailability(): void {\n    this.#hasInternalAuthenticator = Boolean(this.#availableAuthenticatorSetting.get().find(\n        authenticator => authenticator.transport === Protocol.WebAuthn.AuthenticatorTransport.Internal));\n    if (this.#hasInternalAuthenticator &&\n        this.#newAuthenticatorOptions.transport === Protocol.WebAuthn.AuthenticatorTransport.Internal) {\n      this.#newAuthenticatorOptions.transport = Protocol.WebAuthn.AuthenticatorTransport.Nfc;\n    }\n    this.requestUpdate();\n  }\n\n  async #handleAddAuthenticatorButton(): Promise<void> {\n    const options = this.#newAuthenticatorOptions;\n    if (this.#model) {\n      const authenticatorId = await this.#model.addAuthenticator(options);\n      const availableAuthenticators = this.#availableAuthenticatorSetting.get();\n      availableAuthenticators.push({authenticatorId, active: true, ...options});\n      this.#availableAuthenticatorSetting.set(\n          availableAuthenticators.map(a => ({...a, active: a.authenticatorId === authenticatorId})));\n      const section = await this.#addAuthenticatorSection(authenticatorId, options);\n      const mediaQueryList = window.matchMedia('(prefers-reduced-motion: reduce)');\n      const prefersReducedMotion = mediaQueryList.matches;\n      section.scrollIntoView({block: 'start', behavior: prefersReducedMotion ? 'auto' : 'smooth'});\n      this.#updateInternalTransportAvailability();\n    }\n  }\n\n  #exportCredential(credential: Protocol.WebAuthn.Credential): void {\n    let pem = PRIVATE_KEY_HEADER;\n    for (let i = 0; i < credential.privateKey.length; i += 64) {\n      pem += credential.privateKey.substring(i, i + 64) + '\\n';\n    }\n    pem += PRIVATE_KEY_FOOTER;\n\n    const link = document.createElement('a');\n    link.download = i18nString(UIStrings.privateKeypem);\n    link.href = 'data:application/x-pem-file,' + encodeURIComponent(pem);\n    link.click();\n  }\n\n  #removeCredential(authenticatorId: Protocol.WebAuthn.AuthenticatorId, credentialId: string): void {\n    const dataGrid = this.dataGrids.get(authenticatorId);\n    if (!dataGrid) {\n      return;\n    }\n\n    // @ts-expect-error dataGrid node type is indeterminate.\n    dataGrid.rootNode()\n        .children.find((n: DataGrid.DataGrid.DataGridNode<DataGridNode>) => n.data.credentialId === credentialId)\n        .remove();\n\n    if (!dataGrid.rootNode().children.length) {\n      dataGrid.rootNode().appendChild(new EmptyDataGridNode());\n    }\n\n    if (this.#model) {\n      void this.#model.removeCredential(authenticatorId, credentialId);\n    }\n  }\n\n  #handleEditNameButton(target: HTMLElement): void {\n    const titleElement = target.closest('.authenticator-section-title') as HTMLElement;\n    const nameField = titleElement.querySelector('.authenticator-name-field') as HTMLInputElement;\n    const editName = titleElement.querySelector('.edit-name') as Buttons.Button.Button;\n    const saveName = titleElement.querySelector('.save-name') as Buttons.Button.Button;\n    nameField.disabled = false;\n    titleElement.classList.add('editing-name');\n    nameField.focus();\n    saveName.classList.remove('hidden');\n    editName.classList.add('hidden');\n  }\n\n  #handleSaveNameButton(target: HTMLElement): void {\n    const titleElement = target.closest('.authenticator-section-title') as HTMLElement;\n    const nameField = titleElement.querySelector('.authenticator-name-field') as HTMLInputElement;\n    const editName = titleElement.querySelector('.edit-name') as Buttons.Button.Button;\n    const saveName = titleElement.querySelector('.save-name') as Buttons.Button.Button;\n    const activeLabel = titleElement.querySelector('.active-button-container > label') as HTMLLabelElement;\n    const name = nameField.value;\n    if (!name) {\n      return;\n    }\n    nameField.disabled = true;\n    titleElement.classList.remove('editing-name');\n    editName.classList.remove('hidden');\n    saveName.classList.add('hidden');\n    this.#updateActiveLabelTitle(activeLabel, name);\n  }\n\n  #updateActiveLabelTitle(activeLabel: HTMLLabelElement, authenticatorName: string): void {\n    UI.Tooltip.Tooltip.install(\n        activeLabel, i18nString(UIStrings.setSAsTheActiveAuthenticator, {PH1: authenticatorName}));\n  }\n\n  /**\n   * Removes both the authenticator and its respective UI element.\n   */\n  removeAuthenticator(authenticatorId: Protocol.WebAuthn.AuthenticatorId): void {\n    if (this.#authenticatorsView) {\n      const child = this.#authenticatorsView.querySelector(`[data-authenticator-id=${CSS.escape(authenticatorId)}]`);\n      if (child) {\n        child.remove();\n      }\n    }\n    const dataGrid = this.dataGrids.get(authenticatorId);\n    if (dataGrid) {\n      dataGrid.asWidget().detach();\n      this.dataGrids.delete(authenticatorId);\n    }\n\n    if (this.#model) {\n      void this.#model.removeAuthenticator(authenticatorId);\n    }\n\n    // Update available authenticator setting.\n    const prevAvailableAuthenticators = this.#availableAuthenticatorSetting.get();\n    const newAvailableAuthenticators = prevAvailableAuthenticators.filter(a => a.authenticatorId !== authenticatorId);\n    this.#availableAuthenticatorSetting.set(newAvailableAuthenticators);\n\n    if (this.#activeAuthId === authenticatorId) {\n      const availableAuthenticatorIds = Array.from(this.dataGrids.keys());\n      if (availableAuthenticatorIds.length) {\n        void this.#setActiveAuthenticator(availableAuthenticatorIds[0]);\n      } else {\n        this.#activeAuthId = null;\n      }\n    }\n    this.#updateInternalTransportAvailability();\n  }\n\n  /**\n   * Sets the given authenticator as active.\n   * Note that a newly added authenticator will automatically be set as active.\n   */\n  async #setActiveAuthenticator(authenticatorId: Protocol.WebAuthn.AuthenticatorId): Promise<void> {\n    await this.#clearActiveAuthenticator();\n    if (this.#model) {\n      await this.#model.setAutomaticPresenceSimulation(authenticatorId, true);\n    }\n    this.#activeAuthId = authenticatorId;\n\n    const prevAvailableAuthenticators = this.#availableAuthenticatorSetting.get();\n    const newAvailableAuthenticators =\n        prevAvailableAuthenticators.map(a => ({...a, active: a.authenticatorId === authenticatorId}));\n    this.#availableAuthenticatorSetting.set(newAvailableAuthenticators);\n\n    this.#updateActiveButtons();\n  }\n\n  #updateActiveButtons(): void {\n    const authenticators = this.#authenticatorsView.getElementsByClassName('authenticator-section');\n    Array.from(authenticators).forEach((authenticator: Element) => {\n      const button = (authenticator.querySelector('input[type=\"radio\"]') as HTMLInputElement);\n      if (!button) {\n        return;\n      }\n      button.checked = (authenticator as HTMLElement).dataset.authenticatorId === this.#activeAuthId;\n    });\n  }\n\n  async #clearActiveAuthenticator(): Promise<void> {\n    if (this.#activeAuthId && this.#model) {\n      await this.#model.setAutomaticPresenceSimulation(this.#activeAuthId, false);\n    }\n    this.#activeAuthId = null;\n    this.#updateActiveButtons();\n  }\n}\n"]}