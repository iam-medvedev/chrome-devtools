{"version":3,"file":"WebauthnPane.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/webauthn/WebauthnPane.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n} from '../../testing/MockConnection.js';\n\nimport type * as WebauthnModule from './webauthn.js';\n\nconst {assert} = chai;\n\ndescribeWithMockConnection('WebAuthn pane', () => {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  let Webauthn: typeof WebauthnModule;\n\n  before(async () => {\n    Webauthn = await import('./webauthn.js');\n  });\n\n  it('disables the large blob checkbox if resident key is disabled', () => {\n    const panel = new Webauthn.WebauthnPane.WebauthnPaneImpl();\n    const largeBlob = panel.largeBlobCheckbox;\n    const residentKeys = panel.residentKeyCheckbox;\n\n    if (!largeBlob || !residentKeys) {\n      assert.fail('Required checkbox not found');\n      return;\n    }\n\n    // Make sure resident keys is disabled. Large blob should be disabled and\n    // unchecked.\n    residentKeys.checked = false;\n    residentKeys.dispatchEvent(new Event('change'));\n    assert.isTrue(largeBlob.disabled);\n    assert.isFalse(largeBlob.checked);\n\n    // Enable resident keys. Large blob should be enabled but still not\n    // checked.\n    residentKeys.checked = true;\n    residentKeys.dispatchEvent(new Event('change'));\n    assert.isFalse(largeBlob.disabled);\n    assert.isFalse(largeBlob.checked);\n\n    // Manually check large blob.\n    largeBlob.checked = true;\n    assert.isTrue(largeBlob.checked);\n\n    // Disabling resident keys should reset large blob to disabled and\n    // unchecked.\n    residentKeys.checked = false;\n    residentKeys.dispatchEvent(new Event('change'));\n    assert.isTrue(largeBlob.disabled);\n    assert.isFalse(largeBlob.checked);\n  });\n\n  const tests = (targetFactory: () => SDK.Target.Target, inScope: boolean) => {\n    let target: SDK.Target.Target;\n    let model: SDK.WebAuthnModel.WebAuthnModel;\n    let panel: WebauthnModule.WebauthnPane.WebauthnPaneImpl;\n    beforeEach(() => {\n      target = targetFactory();\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n      model = target.model(SDK.WebAuthnModel.WebAuthnModel) as SDK.WebAuthnModel.WebAuthnModel;\n      assertNotNullOrUndefined(model);\n      panel = new Webauthn.WebauthnPane.WebauthnPaneImpl();\n    });\n\n    it('adds an authenticator with large blob option', async () => {\n      const largeBlob = panel.largeBlobCheckbox;\n      const residentKeys = panel.residentKeyCheckbox;\n\n      if (!largeBlob || !residentKeys) {\n        assert.fail('Required checkbox not found');\n        return;\n      }\n      residentKeys.checked = true;\n      largeBlob.checked = true;\n\n      const addAuthenticator = sinon.stub(model, 'addAuthenticator');\n      panel.addAuthenticatorButton?.click();\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.strictEqual(addAuthenticator.called, inScope);\n      if (inScope) {\n        const options = addAuthenticator.firstCall.firstArg;\n        assert.isTrue(options.hasLargeBlob);\n        assert.isTrue(options.hasResidentKey);\n      }\n    });\n\n    it('adds an authenticator without the large blob option', async () => {\n      const largeBlob = panel.largeBlobCheckbox;\n      const residentKeys = panel.residentKeyCheckbox;\n\n      if (!largeBlob || !residentKeys) {\n        assert.fail('Required checkbox not found');\n        return;\n      }\n      residentKeys.checked = true;\n      largeBlob.checked = false;\n\n      const addAuthenticator = sinon.stub(model, 'addAuthenticator');\n      panel.addAuthenticatorButton?.click();\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.strictEqual(addAuthenticator.called, inScope);\n      if (inScope) {\n        const options = addAuthenticator.firstCall.firstArg;\n        assert.isFalse(options.hasLargeBlob);\n        assert.isTrue(options.hasResidentKey);\n      }\n    });\n\n    it('lists and removes credentials', async () => {\n      const authenticatorId = 'authenticator-1' as Protocol.WebAuthn.AuthenticatorId;\n\n      // Add an authenticator.\n      const addAuthenticator = sinon.stub(model, 'addAuthenticator').resolves(authenticatorId);\n      panel.addAuthenticatorButton?.click();\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.strictEqual(addAuthenticator.called, inScope);\n      if (!inScope) {\n        return;\n      }\n\n      // Verify a data grid appeared with a single row to show there is no data.\n      const dataGrid = panel.dataGrids.get(authenticatorId);\n      if (!dataGrid) {\n        assert.fail('Expected dataGrid to be truthy');\n        return;\n      }\n      assert.strictEqual(dataGrid.rootNode().children.length, 1);\n      let emptyNode = dataGrid.rootNode().children[0];\n      assert.isOk(emptyNode);\n      assert.deepEqual(emptyNode.data, {});\n\n      // Add a credential.\n      const credential = {\n        credentialId: 'credential',\n        isResidentCredential: false,\n        rpId: 'talos1.org',\n        userHandle: 'morgan',\n        signCount: 1,\n        privateKey: '',\n      };\n      model.dispatchEventToListeners(SDK.WebAuthnModel.Events.CredentialAdded, {\n        authenticatorId,\n        credential,\n      });\n\n      // Verify the credential appeared and the empty row was removed.\n      assert.strictEqual(dataGrid.rootNode().children.length, 1);\n      const credentialNode = dataGrid.rootNode().children[0];\n      assert.isOk(credentialNode);\n      assert.strictEqual(credentialNode.data, credential);\n\n      // Remove the credential.\n      const removeCredential = sinon.stub(model, 'removeCredential').resolves();\n      dataGrid.element.querySelectorAll('button')[1].click();\n      assert.strictEqual(dataGrid.rootNode().children.length, 1);\n      emptyNode = dataGrid.rootNode().children[0];\n      assert.isOk(emptyNode);\n      assert.deepEqual(emptyNode.data, {});\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.isTrue(removeCredential.called);\n\n      assert.strictEqual(removeCredential.firstCall.firstArg, authenticatorId);\n      assert.strictEqual(removeCredential.firstCall.lastArg, credential.credentialId);\n    });\n\n    it('updates credentials', async () => {\n      const authenticatorId = 'authenticator-1' as Protocol.WebAuthn.AuthenticatorId;\n\n      // Add an authenticator.\n      const addAuthenticator = sinon.stub(model, 'addAuthenticator').resolves(authenticatorId);\n      panel.addAuthenticatorButton?.click();\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.strictEqual(addAuthenticator.called, inScope);\n      if (!inScope) {\n        return;\n      }\n\n      // Add a credential.\n      const credential = {\n        credentialId: 'credential',\n        isResidentCredential: false,\n        rpId: 'talos1.org',\n        userHandle: 'morgan',\n        signCount: 1,\n        privateKey: '',\n      };\n      model.dispatchEventToListeners(SDK.WebAuthnModel.Events.CredentialAdded, {\n        authenticatorId,\n        credential,\n      });\n\n      // Verify the credential appeared.\n      const dataGrid = panel.dataGrids.get(authenticatorId);\n      if (!dataGrid) {\n        assert.fail('Expected dataGrid to be truthy');\n        return;\n      }\n      assert.strictEqual(dataGrid.rootNode().children.length, 1);\n      const credentialNode = dataGrid.rootNode().children[0];\n      assert.isOk(credentialNode);\n      assert.strictEqual(credentialNode.data, credential);\n\n      // Update the credential.\n      const updatedCredential = {\n        credentialId: 'credential',\n        isResidentCredential: false,\n        rpId: 'talos1.org',\n        userHandle: 'morgan',\n        signCount: 2,\n        privateKey: '',\n      };\n      model.dispatchEventToListeners(SDK.WebAuthnModel.Events.CredentialAsserted, {\n        authenticatorId,\n        credential: updatedCredential,\n      });\n\n      // Verify the credential was updated.\n      assert.strictEqual(dataGrid.rootNode().children.length, 1);\n      assert.strictEqual(credentialNode.data, updatedCredential);\n\n      // Updating a different credential should not affect the existing one.\n      const anotherCredential = {\n        credentialId: 'another-credential',\n        isResidentCredential: false,\n        rpId: 'talos1.org',\n        userHandle: 'alex',\n        signCount: 1,\n        privateKey: '',\n      };\n      model.dispatchEventToListeners(SDK.WebAuthnModel.Events.CredentialAsserted, {\n        authenticatorId,\n        credential: anotherCredential,\n      });\n\n      // Verify the credential was unchanged.\n      assert.strictEqual(dataGrid.rootNode().children.length, 1);\n      assert.strictEqual(credentialNode.data, updatedCredential);\n    });\n  };\n\n  describe('without tab target in scope', () => tests(() => createTarget(), true));\n  describe('without tab target out of scope', () => tests(() => createTarget(), false));\n  describe('with tab target in scope', () => tests(() => {\n                                         const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n                                         createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n                                         return createTarget({parentTarget: tabTarget});\n                                       }, true));\n  describe('with tab target out of scope', () => tests(() => {\n                                             const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n                                             createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n                                             return createTarget({parentTarget: tabTarget});\n                                           }, false));\n});\n"]}