{"version":3,"file":"WebauthnPane.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/webauthn/WebauthnPane.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n} from '../../testing/MockConnection.js';\n\nimport type * as WebauthnModule from './webauthn.js';\n\ndescribeWithMockConnection('WebAuthn pane', () => {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  let Webauthn: typeof WebauthnModule;\n\n  before(async () => {\n    Webauthn = await import('./webauthn.js');\n  });\n\n  it('disables the large blob checkbox if resident key is disabled', () => {\n    const panel = new Webauthn.WebauthnPane.WebauthnPaneImpl();\n    const largeBlob = panel.largeBlobCheckbox;\n    const residentKeys = panel.residentKeyCheckbox;\n\n    if (!largeBlob || !residentKeys) {\n      assert.fail('Required checkbox not found');\n      return;\n    }\n\n    // Make sure resident keys is disabled. Large blob should be disabled and\n    // unchecked.\n    residentKeys.checked = false;\n    residentKeys.dispatchEvent(new Event('change'));\n    assert.isTrue(largeBlob.disabled);\n    assert.isFalse(largeBlob.checked);\n\n    // Enable resident keys. Large blob should be enabled but still not\n    // checked.\n    residentKeys.checked = true;\n    residentKeys.dispatchEvent(new Event('change'));\n    assert.isFalse(largeBlob.disabled);\n    assert.isFalse(largeBlob.checked);\n\n    // Manually check large blob.\n    largeBlob.checked = true;\n    assert.isTrue(largeBlob.checked);\n\n    // Disabling resident keys should reset large blob to disabled and\n    // unchecked.\n    residentKeys.checked = false;\n    residentKeys.dispatchEvent(new Event('change'));\n    assert.isTrue(largeBlob.disabled);\n    assert.isFalse(largeBlob.checked);\n  });\n\n  const tests = (inScope: boolean) => {\n    let target: SDK.Target.Target;\n    let model: SDK.WebAuthnModel.WebAuthnModel;\n    let panel: WebauthnModule.WebauthnPane.WebauthnPaneImpl;\n    beforeEach(() => {\n      const tabTarget = createTarget({type: SDK.Target.Type.TAB});\n      createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n      target = createTarget({parentTarget: tabTarget});\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n      model = target.model(SDK.WebAuthnModel.WebAuthnModel) as SDK.WebAuthnModel.WebAuthnModel;\n      assert.exists(model);\n      panel = new Webauthn.WebauthnPane.WebauthnPaneImpl();\n    });\n\n    it('adds an authenticator with large blob option', async () => {\n      const largeBlob = panel.largeBlobCheckbox;\n      const residentKeys = panel.residentKeyCheckbox;\n\n      if (!largeBlob || !residentKeys) {\n        assert.fail('Required checkbox not found');\n        return;\n      }\n      residentKeys.checked = true;\n      largeBlob.checked = true;\n\n      const addAuthenticator = sinon.stub(model, 'addAuthenticator');\n      panel.addAuthenticatorButton?.click();\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.strictEqual(addAuthenticator.called, inScope);\n      if (inScope) {\n        const options = addAuthenticator.firstCall.firstArg;\n        assert.isTrue(options.hasLargeBlob);\n        assert.isTrue(options.hasResidentKey);\n      }\n    });\n\n    it('adds an authenticator without the large blob option', async () => {\n      const largeBlob = panel.largeBlobCheckbox;\n      const residentKeys = panel.residentKeyCheckbox;\n\n      if (!largeBlob || !residentKeys) {\n        assert.fail('Required checkbox not found');\n        return;\n      }\n      residentKeys.checked = true;\n      largeBlob.checked = false;\n\n      const addAuthenticator = sinon.stub(model, 'addAuthenticator');\n      panel.addAuthenticatorButton?.click();\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.strictEqual(addAuthenticator.called, inScope);\n      if (inScope) {\n        const options = addAuthenticator.firstCall.firstArg;\n        assert.isFalse(options.hasLargeBlob);\n        assert.isTrue(options.hasResidentKey);\n      }\n    });\n\n    it('lists and removes credentials', async () => {\n      const authenticatorId = 'authenticator-1' as Protocol.WebAuthn.AuthenticatorId;\n\n      // Add an authenticator.\n      const addAuthenticator = sinon.stub(model, 'addAuthenticator').resolves(authenticatorId);\n      panel.addAuthenticatorButton?.click();\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.strictEqual(addAuthenticator.called, inScope);\n      if (!inScope) {\n        return;\n      }\n\n      // Verify a data grid appeared with a single row to show there is no data.\n      const dataGrid = panel.dataGrids.get(authenticatorId);\n      if (!dataGrid) {\n        assert.fail('Expected dataGrid to be truthy');\n        return;\n      }\n      assert.lengthOf(dataGrid.rootNode().children, 1);\n      let emptyNode = dataGrid.rootNode().children[0];\n      assert.isOk(emptyNode);\n      assert.deepEqual(emptyNode.data, {});\n\n      // Add a credential.\n      const credential = {\n        credentialId: 'credential',\n        isResidentCredential: false,\n        rpId: 'talos1.org',\n        userHandle: 'morgan',\n        signCount: 1,\n        privateKey: '',\n      };\n      model.dispatchEventToListeners(SDK.WebAuthnModel.Events.CREDENTIAL_ADDED, {\n        authenticatorId,\n        credential,\n      });\n\n      // Verify the credential appeared and the empty row was removed.\n      assert.lengthOf(dataGrid.rootNode().children, 1);\n      const credentialNode = dataGrid.rootNode().children[0];\n      assert.isOk(credentialNode);\n      assert.strictEqual(credentialNode.data, credential);\n\n      // Remove the credential.\n      const removeCredential = sinon.stub(model, 'removeCredential').resolves();\n      dataGrid.element.querySelectorAll('devtools-button')[1].click();\n      assert.lengthOf(dataGrid.rootNode().children, 1);\n      emptyNode = dataGrid.rootNode().children[0];\n      assert.isOk(emptyNode);\n      assert.deepEqual(emptyNode.data, {});\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.isTrue(removeCredential.called);\n\n      assert.strictEqual(removeCredential.firstCall.firstArg, authenticatorId);\n      assert.strictEqual(removeCredential.firstCall.lastArg, credential.credentialId);\n    });\n\n    it('updates credentials', async () => {\n      const authenticatorId = 'authenticator-1' as Protocol.WebAuthn.AuthenticatorId;\n\n      // Add an authenticator.\n      const addAuthenticator = sinon.stub(model, 'addAuthenticator').resolves(authenticatorId);\n      panel.addAuthenticatorButton?.click();\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.strictEqual(addAuthenticator.called, inScope);\n      if (!inScope) {\n        return;\n      }\n\n      // Add a credential.\n      const credential = {\n        credentialId: 'credential',\n        isResidentCredential: false,\n        rpId: 'talos1.org',\n        userHandle: 'morgan',\n        signCount: 1,\n        privateKey: '',\n      };\n      model.dispatchEventToListeners(SDK.WebAuthnModel.Events.CREDENTIAL_ADDED, {\n        authenticatorId,\n        credential,\n      });\n\n      // Verify the credential appeared.\n      const dataGrid = panel.dataGrids.get(authenticatorId);\n      if (!dataGrid) {\n        assert.fail('Expected dataGrid to be truthy');\n        return;\n      }\n      assert.lengthOf(dataGrid.rootNode().children, 1);\n      const credentialNode = dataGrid.rootNode().children[0];\n      assert.isOk(credentialNode);\n      assert.strictEqual(credentialNode.data, credential);\n\n      // Update the credential.\n      const updatedCredential1 = {\n        credentialId: 'credential',\n        isResidentCredential: false,\n        rpId: 'talos1.org',\n        userHandle: 'morgan',\n        signCount: 2,\n        privateKey: '',\n      };\n      model.dispatchEventToListeners(SDK.WebAuthnModel.Events.CREDENTIAL_ASSERTED, {\n        authenticatorId,\n        credential: updatedCredential1,\n      });\n\n      // Verify the credential was updated.\n      assert.lengthOf(dataGrid.rootNode().children, 1);\n      assert.strictEqual(credentialNode.data, updatedCredential1);\n\n      // The credential can also be updated through the CREDENTIAL_UPDATED\n      // event.\n      const updatedCredential2 = {\n        credentialId: 'credential',\n        isResidentCredential: false,\n        rpId: 'talos1.org',\n        userHandle: 'danielle',\n        signCount: 2,\n        privateKey: '',\n      };\n      model.dispatchEventToListeners(SDK.WebAuthnModel.Events.CREDENTIAL_UPDATED, {\n        authenticatorId,\n        credential: updatedCredential2,\n      });\n\n      // Verify the credential was updated.\n      assert.lengthOf(dataGrid.rootNode().children, 1);\n      assert.strictEqual(credentialNode.data, updatedCredential2);\n\n      // Updating a different credential should not affect the existing one.\n      const anotherCredential = {\n        credentialId: 'another-credential',\n        isResidentCredential: false,\n        rpId: 'talos1.org',\n        userHandle: 'alex',\n        signCount: 1,\n        privateKey: '',\n      };\n      model.dispatchEventToListeners(SDK.WebAuthnModel.Events.CREDENTIAL_ASSERTED, {\n        authenticatorId,\n        credential: anotherCredential,\n      });\n\n      // Verify the credential was unchanged.\n      assert.lengthOf(dataGrid.rootNode().children, 1);\n      assert.strictEqual(credentialNode.data, updatedCredential2);\n    });\n\n    it('removes credentials that were deleted', async () => {\n      const authenticatorId = 'authenticator-1' as Protocol.WebAuthn.AuthenticatorId;\n\n      // Add an authenticator.\n      const addAuthenticator = sinon.stub(model, 'addAuthenticator').resolves(authenticatorId);\n      panel.addAuthenticatorButton?.click();\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.strictEqual(addAuthenticator.called, inScope);\n      if (!inScope) {\n        return;\n      }\n\n      // Add a credential.\n      const credential = {\n        credentialId: 'credential',\n        isResidentCredential: false,\n        rpId: 'talos1.org',\n        userHandle: 'morgan',\n        signCount: 1,\n        privateKey: '',\n      };\n      model.dispatchEventToListeners(SDK.WebAuthnModel.Events.CREDENTIAL_ADDED, {\n        authenticatorId,\n        credential,\n      });\n\n      // Verify the credential appeared.\n      const dataGrid = panel.dataGrids.get(authenticatorId);\n      if (!dataGrid) {\n        assert.fail('Expected dataGrid to be truthy');\n        return;\n      }\n      assert.lengthOf(dataGrid.rootNode().children, 1);\n      const credentialNode = dataGrid.rootNode().children[0];\n      assert.isOk(credentialNode);\n      assert.strictEqual(credentialNode.data, credential);\n\n      // Delete a credential with a different ID. This should be ignored.\n      model.dispatchEventToListeners(SDK.WebAuthnModel.Events.CREDENTIAL_DELETED, {\n        authenticatorId,\n        credentialId: 'another credential',\n      });\n      assert.lengthOf(dataGrid.rootNode().children, 1);\n\n      // Delete the credential. It should be removed from the list.\n      model.dispatchEventToListeners(SDK.WebAuthnModel.Events.CREDENTIAL_DELETED, {\n        authenticatorId,\n        credentialId: credential.credentialId,\n      });\n      assert.lengthOf(dataGrid.rootNode().children, 0);\n    });\n\n    it('disables \"internal\" if an internal authenticator exists', async () => {\n      const authenticatorId = 'authenticator-1' as Protocol.WebAuthn.AuthenticatorId;\n      let panel = new Webauthn.WebauthnPane.WebauthnPaneImpl();\n      let transport = panel.transportSelect;\n      if (!transport) {\n        assert.fail('Transport select is not present');\n      }\n      let internalTransportIndex = -1;\n      for (let i = 0; i < transport.options.length; ++i) {\n        if (transport.options[i].value === Protocol.WebAuthn.AuthenticatorTransport.Internal) {\n          internalTransportIndex = i;\n          break;\n        }\n      }\n      assert.notEqual(internalTransportIndex, -1);\n      assert.isFalse(transport.options[internalTransportIndex].disabled);\n\n      // Add an internal authenticator.\n      transport.selectedIndex = internalTransportIndex;\n      const addAuthenticator = sinon.stub(model, 'addAuthenticator').resolves(authenticatorId);\n      panel.addAuthenticatorButton?.click();\n      await new Promise(resolve => setTimeout(resolve, 0));\n      assert.strictEqual(addAuthenticator.called, inScope);\n      if (!inScope) {\n        return;\n      }\n\n      // The \"internal\" option should have been disabled, and another option selected.\n      assert.notEqual(transport.selectedIndex, internalTransportIndex);\n      assert.isTrue(transport.options[internalTransportIndex].disabled);\n\n      // Restoring the authenticator when loading the panel again should also cause \"internal\" to be disabled.\n      panel = new Webauthn.WebauthnPane.WebauthnPaneImpl();\n      transport = panel.transportSelect;\n      if (!transport) {\n        assert.fail('Transport select is not present');\n      }\n      assert.isTrue(transport.options[internalTransportIndex].disabled);\n\n      // Removing the internal authenticator should re-enable the option.\n      panel.removeAuthenticator(authenticatorId);\n      assert.isFalse(transport.options[internalTransportIndex].disabled);\n    });\n  };\n\n  describe('in scope', () => tests(true));\n  describe('out of scope', () => tests(false));\n\n  it('shows the placeholder', () => {\n    const panel = new Webauthn.WebauthnPane.WebauthnPaneImpl();\n    assert.exists(panel.contentElement.querySelector('.empty-state'));\n    assert.deepEqual(panel.contentElement.querySelector('.empty-state-header')?.textContent, 'No authenticator set up');\n    assert.deepEqual(\n        panel.contentElement.querySelector('.empty-state-description > span')?.textContent,\n        'Use WebAuthn for phishing-resistant authentication.');\n  });\n});\n"]}