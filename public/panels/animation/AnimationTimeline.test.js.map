{"version":3,"file":"AnimationTimeline.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/animation/AnimationTimeline.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  createTarget,\n  stubNoopSettings,\n} from '../../../test/unittests/front_end/helpers/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../../test/unittests/front_end/helpers/MockConnection.js';\nimport * as Common from '../../core/common/common.js';\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Elements from '../elements/elements.js';\n\nimport * as Animation from './animation.js';\n\nconst {assert} = chai;\n\nconst cancelAllPendingRaf = () => {\n  let rafId = window.requestAnimationFrame(() => {});\n  while (rafId--) {\n    window.cancelAnimationFrame(rafId);\n  }\n};\n\ndescribeWithMockConnection('AnimationTimeline', () => {\n  let target: SDK.Target.Target;\n  let view: Animation.AnimationTimeline.AnimationTimeline;\n\n  beforeEach(() => {\n    Common.Linkifier.registerLinkifier({\n      contextTypes() {\n        return [SDK.DOMModel.DOMNode];\n      },\n      async loadLinkifier() {\n        return Elements.DOMLinkifier.Linkifier.instance();\n      },\n    });\n\n    stubNoopSettings();\n    target = createTarget();\n  });\n\n  afterEach(() => {\n    cancelAllPendingRaf();\n    view.detach();\n  });\n\n  const updatesUiOnEvent = (inScope: boolean) => async () => {\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n    const model = target.model(Animation.AnimationModel.AnimationModel);\n    assertNotNullOrUndefined(model);\n\n    view = Animation.AnimationTimeline.AnimationTimeline.instance({forceNew: true});\n    view.markAsRoot();\n    view.show(document.body);\n    await new Promise<void>(resolve => setTimeout(resolve, 0));\n\n    const previewContainer = (view.contentElement.querySelector('.animation-timeline-buffer') as HTMLElement);\n\n    model.animationStarted({\n      id: 'id',\n      name: 'name',\n      pausedState: false,\n      playState: 'playState',\n      playbackRate: 1,\n      startTime: 42,\n      currentTime: 43,\n      type: Protocol.Animation.AnimationType.CSSAnimation,\n      source: {\n        delay: 0,\n        duration: 1001,\n        backendNodeId: 42 as Protocol.DOM.BackendNodeId,\n      } as Protocol.Animation.AnimationEffect,\n    });\n\n    assert.strictEqual(previewContainer.querySelectorAll('.animation-buffer-preview').length, inScope ? 1 : 0);\n  };\n\n  it('updates UI on in scope animation group start', updatesUiOnEvent(true));\n  it('does not update UI on out of scope animation group start', updatesUiOnEvent(false));\n\n  describe('resizing time controls', () => {\n    it('updates --timeline-controls-width and calls onResize', async () => {\n      view = Animation.AnimationTimeline.AnimationTimeline.instance({forceNew: true});\n      view.markAsRoot();\n      view.show(document.body);\n      const onResizeStub = sinon.stub(view, 'onResize');\n      await new Promise<void>(resolve => setTimeout(resolve, 0));\n\n      const resizer = view.contentElement.querySelector('.timeline-controls-resizer');\n      assertNotNullOrUndefined(resizer);\n\n      const initialWidth = view.element.style.getPropertyValue('--timeline-controls-width');\n      assert.strictEqual(initialWidth, '150px');\n\n      const resizerRect = resizer.getBoundingClientRect();\n      resizer.dispatchEvent(\n          new PointerEvent('pointerdown', {\n            clientX: resizerRect.x + resizerRect.width / 2,\n            clientY: resizerRect.y + resizerRect.height / 2,\n          }),\n      );\n      resizer.ownerDocument.dispatchEvent(\n          new PointerEvent('pointermove', {\n            buttons: 1,\n            clientX: (resizerRect.x + resizerRect.width / 2) + 20,\n            clientY: resizerRect.y + resizerRect.height / 2,\n          }),\n      );\n      resizer.ownerDocument.dispatchEvent(new PointerEvent('pointerup'));\n\n      const afterResizeWidth = view.element.style.getPropertyValue('--timeline-controls-width');\n      assert.notStrictEqual(initialWidth, afterResizeWidth);\n      assert.isTrue(onResizeStub.calledOnce);\n    });\n  });\n\n  describe('Animation group nodes are removed', () => {\n    let domModel: SDK.DOMModel.DOMModel;\n    let animationModel: Animation.AnimationModel.AnimationModel;\n    let contentDocument: SDK.DOMModel.DOMDocument;\n    let waitForAnimationGroupSelected: Promise<void>;\n    beforeEach(() => {\n      view = Animation.AnimationTimeline.AnimationTimeline.instance({forceNew: true});\n      view.markAsRoot();\n      view.show(document.body);\n      waitForAnimationGroupSelected =\n          new Promise<void>(r => sinon.stub(view, 'animationGroupSelectedForTest').callsFake(r));\n\n      const model = target.model(Animation.AnimationModel.AnimationModel);\n      assertNotNullOrUndefined(model);\n      animationModel = model;\n\n      const modelForDom = target.model(SDK.DOMModel.DOMModel);\n      assertNotNullOrUndefined(modelForDom);\n      domModel = modelForDom;\n\n      contentDocument = SDK.DOMModel.DOMDocument.create(domModel, null, false, {\n        nodeId: 0 as Protocol.DOM.NodeId,\n        backendNodeId: 0 as Protocol.DOM.BackendNodeId,\n        nodeType: Node.DOCUMENT_NODE,\n        nodeName: '#document',\n        localName: 'document',\n        nodeValue: '',\n      }) as SDK.DOMModel.DOMDocument;\n\n      animationModel.animationStarted({\n        id: 'animation-id',\n        name: 'animation-name',\n        pausedState: false,\n        playState: 'running',\n        playbackRate: 1,\n        startTime: 42,\n        currentTime: 0,\n        type: Protocol.Animation.AnimationType.CSSAnimation,\n        source: {\n          delay: 0,\n          endDelay: 0,\n          duration: 10000,\n          backendNodeId: 42 as Protocol.DOM.BackendNodeId,\n        } as Protocol.Animation.AnimationEffect,\n      });\n    });\n\n    describe('when the animation group is already selected', () => {\n      it('should hide scrubber, disable control button and make current time empty', async () => {\n        const domNode = SDK.DOMModel.DOMNode.create(domModel, contentDocument, false, {\n          nodeId: 1 as Protocol.DOM.NodeId,\n          backendNodeId: 1 as Protocol.DOM.BackendNodeId,\n          nodeType: Node.ELEMENT_NODE,\n          nodeName: 'div',\n          localName: 'div',\n          nodeValue: '',\n        });\n        sinon.stub(SDK.DOMModel.DeferredDOMNode.prototype, 'resolvePromise').resolves(domNode);\n\n        const preview = view.element.shadowRoot?.querySelector('.animation-buffer-preview') as HTMLElement;\n        assertNotNullOrUndefined(preview);\n        preview.click();\n        await waitForAnimationGroupSelected;\n\n        const gridHeader = view.element.shadowRoot?.querySelector('.animation-grid-header');\n        assertNotNullOrUndefined(gridHeader);\n        assert.isTrue(gridHeader.classList.contains('scrubber-enabled'));\n\n        const scrubber = view.element.shadowRoot?.querySelector('.animation-scrubber');\n        assertNotNullOrUndefined(scrubber);\n        assert.isFalse(scrubber.classList.contains('hidden'));\n\n        const controlButton = view.element.shadowRoot?.querySelector('.animation-controls-toolbar')\n                                  ?.shadowRoot?.querySelector('.toolbar-button') as HTMLButtonElement;\n        assertNotNullOrUndefined(controlButton);\n        assert.isFalse(controlButton.disabled);\n\n        const currentTime = view.element.shadowRoot?.querySelector('.animation-timeline-current-time');\n        assertNotNullOrUndefined(currentTime);\n\n        domModel.dispatchEventToListeners(SDK.DOMModel.Events.NodeRemoved, {node: domNode, parent: contentDocument});\n        assert.isFalse(gridHeader.classList.contains('scrubber-enabled'));\n        assert.isTrue(scrubber.classList.contains('hidden'));\n        assert.isTrue(controlButton.disabled);\n        assert.isTrue(currentTime.textContent === '');\n      });\n\n      it('should mark the animation node as removed in the NodeUI', async () => {\n        const domNode = SDK.DOMModel.DOMNode.create(domModel, contentDocument, false, {\n          nodeId: 1 as Protocol.DOM.NodeId,\n          backendNodeId: 1 as Protocol.DOM.BackendNodeId,\n          nodeType: Node.ELEMENT_NODE,\n          nodeName: 'div',\n          localName: 'div',\n          nodeValue: '',\n        });\n        sinon.stub(SDK.DOMModel.DeferredDOMNode.prototype, 'resolvePromise').resolves(domNode);\n\n        const preview = view.element.shadowRoot?.querySelector('.animation-buffer-preview') as HTMLElement;\n        assertNotNullOrUndefined(preview);\n        preview.click();\n        await waitForAnimationGroupSelected;\n\n        // Wait for the animation group to be fully selected and scrubber enabled.\n        const gridHeader = view.element.shadowRoot?.querySelector('.animation-grid-header');\n        assertNotNullOrUndefined(gridHeader);\n        assert.isTrue(gridHeader.classList.contains('scrubber-enabled'));\n\n        const animationNodeRow = view.element.shadowRoot?.querySelector('.animation-node-row') as HTMLElement;\n        assertNotNullOrUndefined(animationNodeRow);\n        assert.isFalse(animationNodeRow.classList.contains('animation-node-removed'));\n\n        domModel.dispatchEventToListeners(SDK.DOMModel.Events.NodeRemoved, {node: domNode, parent: contentDocument});\n        assert.isTrue(animationNodeRow.classList.contains('animation-node-removed'));\n      });\n    });\n\n    describe('when the animation group is not selected and the nodes are removed', () => {\n      it('should scrubber be hidden, control button be disabled and current time be empty', async () => {\n        // Owner document is null for the resolved deferred nodes that are already removed from the DOM.\n        const domNode = SDK.DOMModel.DOMNode.create(domModel, null, false, {\n          nodeId: 1 as Protocol.DOM.NodeId,\n          backendNodeId: 1 as Protocol.DOM.BackendNodeId,\n          nodeType: Node.ELEMENT_NODE,\n          nodeName: 'div',\n          localName: 'div',\n          nodeValue: '',\n        });\n        sinon.stub(SDK.DOMModel.DeferredDOMNode.prototype, 'resolvePromise').resolves(domNode);\n\n        const preview = view.element.shadowRoot?.querySelector('.animation-buffer-preview') as HTMLElement;\n        assertNotNullOrUndefined(preview);\n        preview.click();\n        await waitForAnimationGroupSelected;\n\n        const gridHeader = view.element.shadowRoot?.querySelector('.animation-grid-header');\n        assertNotNullOrUndefined(gridHeader);\n        assert.isFalse(gridHeader.classList.contains('scrubber-enabled'));\n\n        const scrubber = view.element.shadowRoot?.querySelector('.animation-scrubber');\n        assertNotNullOrUndefined(scrubber);\n        assert.isTrue(scrubber.classList.contains('hidden'));\n\n        const controlButton = view.element.shadowRoot?.querySelector('.animation-controls-toolbar')\n                                  ?.shadowRoot?.querySelector('.toolbar-button') as HTMLButtonElement;\n        assertNotNullOrUndefined(controlButton);\n        assert.isTrue(controlButton.disabled);\n\n        const currentTime = view.element.shadowRoot?.querySelector('.animation-timeline-current-time');\n        assertNotNullOrUndefined(currentTime);\n        assert.isTrue(currentTime.textContent === '');\n      });\n    });\n  });\n});\n"]}