{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/animation/AnimationGroupPreviewUI.ts", "../../../../../../front_end/panels/animation/AnimationUI.ts", "../../../../../../front_end/panels/animation/AnimationTimeline.ts", "animationTimeline.css.js"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {AnimationUI} from './AnimationUI.js';\n\nconst {render, html, svg, Directives: {classMap, ref}} = Lit;\n\nconst VIEW_BOX_HEIGHT = 32;\nconst MAX_ANIMATION_LINES_TO_SHOW = 10;\nconst MIN_ANIMATION_GROUP_DURATION = 750;\n\ninterface ViewInput {\n  isScrollDrivenAnimationGroup: boolean;\n  isPreviewAnimationDisabled: boolean;\n  isSelected: boolean;\n  isPaused: boolean;\n  isFocusable: boolean;\n  label: string;\n  animationGroupDuration: number;\n  animations: SDK.AnimationModel.AnimationImpl[];\n  onPreviewAnimationEnd: () => void;\n  onRemoveAnimationGroup: () => void;\n  onSelectAnimationGroup: () => void;\n  onFocusNextGroup: () => void;\n  onFocusPreviousGroup: () => void;\n}\n\ninterface ViewOutput {\n  replay?: () => void;\n  focus?: () => void;\n}\n\ntype View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nconst DEFAULT_VIEW: View = (input, output, target) => {\n  const classes = classMap({\n    'animation-buffer-preview': true,\n    selected: input.isSelected,\n    paused: input.isPaused,\n    'no-animation': input.isPreviewAnimationDisabled,\n  });\n\n  const handleKeyDown = (event: KeyboardEvent): void => {\n    switch (event.key) {\n      case 'Backspace':\n      case 'Delete':\n        input.onRemoveAnimationGroup();\n        break;\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        input.onFocusPreviousGroup();\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        input.onFocusNextGroup();\n    }\n  };\n\n  const renderAnimationLines = (): Lit.LitTemplate => {\n    const timeToPixelRatio = 100 / Math.max(input.animationGroupDuration, MIN_ANIMATION_GROUP_DURATION);\n    const viewBox = `0 0 100 ${VIEW_BOX_HEIGHT}`;\n    const lines = input.animations.map((animation, index) => {\n      const xStartPoint = animation.delayOrStartTime();\n      const xEndPoint = xStartPoint + animation.iterationDuration();\n      const yPoint = Math.floor(VIEW_BOX_HEIGHT / Math.max(6, input.animations.length) * index + 1);\n      const colorForAnimation = AnimationUI.colorForAnimation(animation);\n      // clang-format off\n      return svg`<line\n        x1=\"${xStartPoint * timeToPixelRatio}\"\n        x2=\"${xEndPoint * timeToPixelRatio}\"\n        y1=\"${yPoint}\"\n        y2=\"${yPoint}\"\n        style=\"stroke: ${colorForAnimation}\"></line>`;\n      // clang-format on\n    });\n\n    // clang-format off\n    return html`\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        viewBox=${viewBox}\n        preserveAspectRatio=\"none\"\n        shape-rendering=\"crispEdges\">\n        ${lines}\n      </svg>\n    `;\n    // clang-format on\n  };\n\n  // clang-format off\n  render(html`\n    <div class=\"animation-group-preview-ui\">\n      <button\n        jslog=${VisualLogging.item(`animations.buffer-preview${input.isScrollDrivenAnimationGroup ? '-sda' : ''}`).track({click: true})}\n        class=${classes}\n        role=\"option\"\n        aria-label=${input.label}\n        tabindex=${input.isFocusable ? 0 : -1}\n        @keydown=${handleKeyDown}\n        @click=${input.onSelectAnimationGroup}\n        @animationend=${input.onPreviewAnimationEnd}\n        ${ref(el => {\n          if (el instanceof HTMLElement) {\n            output.focus = () => {\n              el.focus();\n            };\n          }\n        })}>\n          <div class=\"animation-paused fill\"></div>\n          <devtools-icon name=${input.isScrollDrivenAnimationGroup ? 'mouse' : 'watch'} class=\"preview-icon\"></devtools-icon>\n          <div class=\"animation-buffer-preview-animation\" ${ref(el => {\n            if (el instanceof HTMLElement) {\n              output.replay = () => {\n                el.animate(\n                  [\n                    {offset: 0, width: '0%', opacity: 1},\n                    {offset: 0.9, width: '100%', opacity: 1},\n                    {offset: 1, width: '100%', opacity: 0},\n                  ],\n                  {duration: 200, easing: 'cubic-bezier(0, 0, 0.2, 1)'}\n                );\n              };\n            }\n          })}></div>\n          ${renderAnimationLines()}\n        </button>\n        <button\n          class=\"animation-remove-button\"\n          jslog=${VisualLogging.action('animations.remove-preview').track({click: true})}\n          @click=${input.onRemoveAnimationGroup}>\n            <devtools-icon name=\"cross\"></devtools-icon>\n        </button>\n    </div>\n  `, target);\n  // clang-format on\n};\n\ninterface AnimationGroupPreviewConfig {\n  animationGroup: SDK.AnimationModel.AnimationGroup;\n  label: string;\n  onRemoveAnimationGroup: () => void;\n  onSelectAnimationGroup: () => void;\n  onFocusNextGroup: () => void;\n  onFocusPreviousGroup: () => void;\n}\n\nexport class AnimationGroupPreviewUI extends UI.Widget.Widget {\n  #view: View;\n  #viewOutput: ViewOutput = {};\n  #config: AnimationGroupPreviewConfig;\n  #previewAnimationDisabled = false;\n  #selected = false;\n  #paused = false;\n  #focusable = false;\n\n  constructor(config: AnimationGroupPreviewConfig, view = DEFAULT_VIEW) {\n    super();\n    this.#view = view;\n    this.#config = config;\n    this.requestUpdate();\n  }\n\n  setSelected(selected: boolean): void {\n    if (this.#selected === selected) {\n      return;\n    }\n\n    this.#selected = selected;\n    this.requestUpdate();\n  }\n\n  setPaused(paused: boolean): void {\n    if (this.#paused === paused) {\n      return;\n    }\n\n    this.#paused = paused;\n    this.requestUpdate();\n  }\n\n  setFocusable(focusable: boolean): void {\n    if (this.#focusable === focusable) {\n      return;\n    }\n\n    this.#focusable = focusable;\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    this.#view(\n        {\n          isScrollDrivenAnimationGroup: this.#config.animationGroup.isScrollDriven(),\n          isPreviewAnimationDisabled: this.#previewAnimationDisabled,\n          isSelected: this.#selected,\n          isPaused: this.#paused,\n          isFocusable: this.#focusable,\n          label: this.#config.label,\n          animationGroupDuration: this.#config.animationGroup.groupDuration(),\n          animations: this.#config.animationGroup.animations().slice(0, MAX_ANIMATION_LINES_TO_SHOW),\n          onPreviewAnimationEnd: () => {\n            this.#previewAnimationDisabled = true;\n            this.requestUpdate();\n          },\n          onRemoveAnimationGroup: () => {\n            this.#config.onRemoveAnimationGroup();\n          },\n          onSelectAnimationGroup: () => {\n            this.#config.onSelectAnimationGroup();\n          },\n          onFocusNextGroup: () => {\n            this.#config.onFocusNextGroup();\n          },\n          onFocusPreviousGroup: () => {\n            this.#config.onFocusPreviousGroup();\n          }\n        },\n        this.#viewOutput, this.contentElement);\n  }\n\n  override focus(): void {\n    this.#viewOutput.focus?.();\n  }\n\n  replay(): void {\n    this.#viewOutput.replay?.();\n  }\n}\n", "// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Geometry from '../../models/geometry/geometry.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {type AnimationTimeline, StepTimingFunction} from './AnimationTimeline.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of the first and last points of an animation\n   */\n  animationEndpointSlider: 'Animation Endpoint slider',\n  /**\n   * @description Title of an Animation Keyframe point\n   */\n  animationKeyframeSlider: 'Animation Keyframe slider',\n  /**\n   * @description Title of an animation keyframe group\n   * @example {anilogo} PH1\n   */\n  sSlider: '{PH1} slider',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/animation/AnimationUI.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface CachedElement {\n  group: HTMLElement|null;\n  animationLine: HTMLElement|null;\n  keyframePoints: Record<number, HTMLElement>;\n  keyframeRender: Record<number, HTMLElement>;\n}\n\nexport class AnimationUI {\n  #animation: SDK.AnimationModel.AnimationImpl;\n  #timeline: AnimationTimeline;\n  #keyframes?: SDK.AnimationModel.KeyframeStyle[];\n  #nameElement: HTMLElement;\n  readonly #svg: Element;\n  #activeIntervalGroup: Element;\n  #cachedElements: CachedElement[];\n  #movementInMs: number;\n  #keyboardMovementRateMs: number;\n  #color: string;\n  #node?: SDK.DOMModel.DOMNode|null;\n  #delayLine?: Element;\n  #endDelayLine?: Element;\n  #tailGroup?: Element;\n  #mouseEventType?: Events;\n  #keyframeMoved?: number|null;\n  #downMouseX?: number;\n\n  constructor(animation: SDK.AnimationModel.AnimationImpl, timeline: AnimationTimeline, parentElement: Element) {\n    this.#animation = animation;\n    this.#timeline = timeline;\n\n    const keyframesRule = this.#animation.source().keyframesRule();\n    if (keyframesRule) {\n      this.#keyframes = keyframesRule.keyframes();\n      if (animation.viewOrScrollTimeline() && animation.playbackRate() < 0) {\n        this.#keyframes.reverse();\n      }\n    }\n    this.#nameElement = parentElement.createChild('div', 'animation-name');\n    this.#nameElement.textContent = this.#animation.name();\n\n    this.#svg = UI.UIUtils.createSVGChild(parentElement, 'svg', 'animation-ui');\n    this.#svg.setAttribute('height', Options.AnimationSVGHeight.toString());\n    (this.#svg as HTMLElement).style.marginLeft = '-' + Options.AnimationMargin + 'px';\n    this.#svg.addEventListener('contextmenu', this.onContextMenu.bind(this));\n    this.#activeIntervalGroup = UI.UIUtils.createSVGChild(this.#svg, 'g');\n    this.#activeIntervalGroup.setAttribute('jslog', `${VisualLogging.animationClip().track({drag: true})}`);\n\n    if (!this.#animation.viewOrScrollTimeline()) {\n      UI.UIUtils.installDragHandle(\n          this.#activeIntervalGroup, this.mouseDown.bind(this, Events.ANIMATION_DRAG, null), this.mouseMove.bind(this),\n          this.mouseUp.bind(this), '-webkit-grabbing', '-webkit-grab');\n      AnimationUI.installDragHandleKeyboard(\n          this.#activeIntervalGroup, this.keydownMove.bind(this, Events.ANIMATION_DRAG, null));\n    }\n\n    this.#cachedElements = [];\n\n    this.#movementInMs = 0;\n    this.#keyboardMovementRateMs = 50;\n    this.#color = AnimationUI.colorForAnimation(this.#animation);\n  }\n\n  static colorForAnimation(animation: SDK.AnimationModel.AnimationImpl): string {\n    const names = Array.from(Colors.keys());\n    const hashCode = Platform.StringUtilities.hashCode(animation.name() || animation.id());\n    const cappedHashCode = hashCode % names.length;\n    const colorName = names[cappedHashCode];\n    const color = Colors.get(colorName);\n    if (!color) {\n      throw new Error('Unable to locate color');\n    }\n    return color.asString(Common.Color.Format.RGB) || '';\n  }\n\n  static installDragHandleKeyboard(element: Element, elementDrag: (arg0: Event) => void): void {\n    element.addEventListener('keydown', elementDrag, false);\n  }\n\n  animation(): SDK.AnimationModel.AnimationImpl {\n    return this.#animation;\n  }\n\n  get nameElement(): HTMLElement {\n    return this.#nameElement;\n  }\n\n  get svg(): Element {\n    return this.#svg;\n  }\n\n  setNode(node: SDK.DOMModel.DOMNode|null): void {\n    this.#node = node;\n  }\n\n  private createLine(parentElement: HTMLElement, className: string): Element {\n    const line = UI.UIUtils.createSVGChild(parentElement, 'line', className);\n    line.setAttribute('x1', Options.AnimationMargin.toString());\n    line.setAttribute('y1', Options.AnimationHeight.toString());\n    line.setAttribute('y2', Options.AnimationHeight.toString());\n    (line as HTMLElement).style.stroke = this.#color;\n    return line;\n  }\n\n  private drawAnimationLine(iteration: number, parentElement: HTMLElement): void {\n    const cache = this.#cachedElements[iteration];\n    if (!cache.animationLine) {\n      cache.animationLine = (this.createLine(parentElement, 'animation-line') as HTMLElement);\n    }\n    if (!cache.animationLine) {\n      return;\n    }\n\n    cache.animationLine.setAttribute(\n        'x2', (this.duration() * this.#timeline.pixelTimeRatio() + Options.AnimationMargin).toFixed(2));\n  }\n\n  private drawDelayLine(parentElement: HTMLElement): void {\n    if (!this.#delayLine || !this.#endDelayLine) {\n      this.#delayLine = this.createLine(parentElement, 'animation-delay-line');\n      this.#endDelayLine = this.createLine(parentElement, 'animation-delay-line');\n    }\n    const fill = this.#animation.source().fill();\n    this.#delayLine.classList.toggle('animation-fill', fill === 'backwards' || fill === 'both');\n    const margin = Options.AnimationMargin;\n    this.#delayLine.setAttribute('x1', margin.toString());\n    this.#delayLine.setAttribute('x2', (this.delayOrStartTime() * this.#timeline.pixelTimeRatio() + margin).toFixed(2));\n\n    const forwardsFill = fill === 'forwards' || fill === 'both';\n    this.#endDelayLine.classList.toggle('animation-fill', forwardsFill);\n    const leftMargin = Math.min(\n        this.#timeline.width(),\n        (this.delayOrStartTime() + this.duration() * this.#animation.source().iterations()) *\n            this.#timeline.pixelTimeRatio());\n    (this.#endDelayLine as HTMLElement).style.transform = 'translateX(' + leftMargin.toFixed(2) + 'px)';\n    this.#endDelayLine.setAttribute('x1', margin.toString());\n    this.#endDelayLine.setAttribute(\n        'x2',\n        forwardsFill ? (this.#timeline.width() - leftMargin + margin).toFixed(2) :\n                       (this.#animation.source().endDelay() * this.#timeline.pixelTimeRatio() + margin).toFixed(2));\n  }\n\n  private drawPoint(iteration: number, parentElement: Element, x: number, keyframeIndex: number, attachEvents: boolean):\n      void {\n    if (this.#cachedElements[iteration].keyframePoints[keyframeIndex]) {\n      this.#cachedElements[iteration].keyframePoints[keyframeIndex].setAttribute('cx', x.toFixed(2));\n      return;\n    }\n\n    const circle =\n        (UI.UIUtils.createSVGChild(\n             parentElement, 'circle', keyframeIndex <= 0 ? 'animation-endpoint' : 'animation-keyframe-point') as\n         HTMLElement);\n    circle.setAttribute('cx', x.toFixed(2));\n    circle.setAttribute('cy', Options.AnimationHeight.toString());\n    circle.style.stroke = this.#color;\n    circle.setAttribute('r', (Options.AnimationMargin / 2).toString());\n    circle.setAttribute('jslog', `${VisualLogging.controlPoint('animations.keyframe').track({drag: true})}`);\n    circle.tabIndex = 0;\n    UI.ARIAUtils.setLabel(\n        circle,\n        keyframeIndex <= 0 ? i18nString(UIStrings.animationEndpointSlider) :\n                             i18nString(UIStrings.animationKeyframeSlider));\n\n    if (keyframeIndex <= 0) {\n      circle.style.fill = this.#color;\n    }\n    this.#cachedElements[iteration].keyframePoints[keyframeIndex] = (circle);\n\n    if (!attachEvents) {\n      return;\n    }\n\n    let eventType: Events;\n    if (keyframeIndex === 0) {\n      eventType = Events.START_ENDPOINT_MOVE;\n    } else if (keyframeIndex === -1) {\n      eventType = Events.FINISH_ENDPOINT_MOVE;\n    } else {\n      eventType = Events.KEYFRAME_MOVE;\n    }\n\n    if (!this.animation().viewOrScrollTimeline()) {\n      UI.UIUtils.installDragHandle(\n          circle, this.mouseDown.bind(this, eventType, keyframeIndex), this.mouseMove.bind(this),\n          this.mouseUp.bind(this), 'ew-resize');\n      AnimationUI.installDragHandleKeyboard(circle, this.keydownMove.bind(this, eventType, keyframeIndex));\n    }\n  }\n\n  private renderKeyframe(\n      iteration: number, keyframeIndex: number, parentElement: HTMLElement, leftDistance: number, width: number,\n      easing: string): void {\n    function createStepLine(parentElement: HTMLElement, x: number, strokeColor: string): void {\n      const line = (UI.UIUtils.createSVGChild(parentElement, 'line') as HTMLElement);\n      line.setAttribute('x1', x.toString());\n      line.setAttribute('x2', x.toString());\n      line.setAttribute('y1', Options.AnimationMargin.toString());\n      line.setAttribute('y2', Options.AnimationHeight.toString());\n      line.style.stroke = strokeColor;\n    }\n\n    const bezier = Geometry.CubicBezier.parse(easing);\n    const cache = this.#cachedElements[iteration].keyframeRender;\n    if (!cache[keyframeIndex]) {\n      const svg = bezier ? UI.UIUtils.createSVGChild(parentElement, 'path', 'animation-keyframe') :\n                           UI.UIUtils.createSVGChild(parentElement, 'g', 'animation-keyframe-step');\n      cache[keyframeIndex] = (svg as HTMLElement);\n    }\n    const group = cache[keyframeIndex];\n    group.tabIndex = 0;\n    UI.ARIAUtils.setLabel(group, i18nString(UIStrings.sSlider, {PH1: this.#animation.name()}));\n    group.style.transform = 'translateX(' + leftDistance.toFixed(2) + 'px)';\n\n    if (easing === 'linear') {\n      group.style.fill = this.#color;\n      const height = InlineEditor.BezierUI.Height;\n      group.setAttribute(\n          'd', ['M', 0, height, 'L', 0, 5, 'L', width.toFixed(2), 5, 'L', width.toFixed(2), height, 'Z'].join(' '));\n    } else if (bezier) {\n      group.style.fill = this.#color;\n      InlineEditor.BezierUI.BezierUI.drawVelocityChart(bezier, group, width);\n    } else {\n      const stepFunction = StepTimingFunction.parse(easing);\n      group.removeChildren();\n      const offsetMap: Record<string, number> = {start: 0, middle: 0.5, end: 1};\n      if (stepFunction) {\n        const offsetWeight = offsetMap[stepFunction.stepAtPosition];\n        for (let i = 0; i < stepFunction.steps; i++) {\n          createStepLine(group, (i + offsetWeight) * width / stepFunction.steps, this.#color);\n        }\n      }\n    }\n  }\n\n  redraw(): void {\n    const maxWidth = this.#timeline.width() - Options.AnimationMargin;\n\n    this.#svg.setAttribute('width', (maxWidth + 2 * Options.AnimationMargin).toFixed(2));\n    (this.#activeIntervalGroup as HTMLElement).style.transform =\n        'translateX(' + (this.delayOrStartTime() * this.#timeline.pixelTimeRatio()).toFixed(2) + 'px)';\n\n    this.#nameElement.style.transform = 'translateX(' +\n        (Math.max(this.delayOrStartTime(), 0) * this.#timeline.pixelTimeRatio() + Options.AnimationMargin).toFixed(2) +\n        'px)';\n    this.#nameElement.style.width = (this.duration() * this.#timeline.pixelTimeRatio()).toFixed(2) + 'px';\n    this.drawDelayLine((this.#svg as HTMLElement));\n\n    if (this.#animation.type() === 'CSSTransition') {\n      this.renderTransition();\n      return;\n    }\n\n    this.renderIteration(this.#activeIntervalGroup, 0);\n    if (!this.#tailGroup) {\n      this.#tailGroup = UI.UIUtils.createSVGChild(this.#activeIntervalGroup, 'g', 'animation-tail-iterations');\n    }\n    const iterationWidth = this.duration() * this.#timeline.pixelTimeRatio();\n    let iteration;\n    // Some iterations are getting rendered in an invisible area if the delay is negative.\n    const invisibleAreaWidth =\n        this.delayOrStartTime() < 0 ? -this.delayOrStartTime() * this.#timeline.pixelTimeRatio() : 0;\n    for (iteration = 1; iteration < this.#animation.source().iterations() &&\n         iterationWidth * (iteration - 1) < invisibleAreaWidth + this.#timeline.width() &&\n         (iterationWidth > 0 || this.#animation.source().iterations() !== Infinity);\n         iteration++) {\n      this.renderIteration(this.#tailGroup, iteration);\n    }\n    while (iteration < this.#cachedElements.length) {\n      const poppedElement = this.#cachedElements.pop();\n      if (poppedElement?.group) {\n        poppedElement.group.remove();\n      }\n    }\n  }\n\n  private renderTransition(): void {\n    const activeIntervalGroup = (this.#activeIntervalGroup as HTMLElement);\n    if (!this.#cachedElements[0]) {\n      this.#cachedElements[0] = {animationLine: null, keyframePoints: {}, keyframeRender: {}, group: null};\n    }\n    this.drawAnimationLine(0, activeIntervalGroup);\n    this.renderKeyframe(\n        0, 0, activeIntervalGroup, Options.AnimationMargin, this.duration() * this.#timeline.pixelTimeRatio(),\n        this.#animation.source().easing());\n    this.drawPoint(0, activeIntervalGroup, Options.AnimationMargin, 0, true);\n    this.drawPoint(\n        0, activeIntervalGroup, this.duration() * this.#timeline.pixelTimeRatio() + Options.AnimationMargin, -1, true);\n  }\n\n  private renderIteration(parentElement: Element, iteration: number): void {\n    if (!this.#cachedElements[iteration]) {\n      this.#cachedElements[iteration] = {\n        animationLine: null,\n        keyframePoints: {},\n        keyframeRender: {},\n        group: (UI.UIUtils.createSVGChild(parentElement, 'g') as HTMLElement),\n      };\n    }\n    const group = this.#cachedElements[iteration].group;\n    if (!group) {\n      return;\n    }\n\n    group.style.transform =\n        'translateX(' + (iteration * this.duration() * this.#timeline.pixelTimeRatio()).toFixed(2) + 'px)';\n    this.drawAnimationLine(iteration, group);\n    if (this.#keyframes && this.#keyframes.length > 1) {\n      for (let i = 0; i < this.#keyframes.length - 1; i++) {\n        const leftDistance =\n            this.offset(i) * this.duration() * this.#timeline.pixelTimeRatio() + Options.AnimationMargin;\n        const width = this.duration() * (this.offset(i + 1) - this.offset(i)) * this.#timeline.pixelTimeRatio();\n        this.renderKeyframe(iteration, i, group, leftDistance, width, this.#keyframes[i].easing());\n        if (i || (!i && iteration === 0)) {\n          this.drawPoint(iteration, group, leftDistance, i, iteration === 0);\n        }\n      }\n    }\n    this.drawPoint(\n        iteration, group, this.duration() * this.#timeline.pixelTimeRatio() + Options.AnimationMargin, -1,\n        iteration === 0);\n  }\n\n  private delayOrStartTime(): number {\n    let delay = this.#animation.delayOrStartTime();\n    if (this.#mouseEventType === Events.ANIMATION_DRAG || this.#mouseEventType === Events.START_ENDPOINT_MOVE) {\n      delay += this.#movementInMs;\n    }\n    return delay;\n  }\n\n  private duration(): number {\n    let duration = this.#animation.iterationDuration();\n    if (this.#mouseEventType === Events.FINISH_ENDPOINT_MOVE) {\n      duration += this.#movementInMs;\n    } else if (this.#mouseEventType === Events.START_ENDPOINT_MOVE) {\n      duration -= this.#movementInMs;\n    }\n    return Math.max(0, duration);\n  }\n\n  private offset(i: number): number {\n    if (!this.#keyframes) {\n      throw new Error('Unable to calculate offset; keyframes do not exist');\n    }\n\n    let offset = this.#keyframes[i].offsetAsNumber();\n    if (this.#mouseEventType === Events.KEYFRAME_MOVE && i === this.#keyframeMoved) {\n      console.assert(i > 0 && i < this.#keyframes.length - 1, 'First and last keyframe cannot be moved');\n      offset += this.#movementInMs / this.#animation.iterationDuration();\n      offset = Math.max(offset, this.#keyframes[i - 1].offsetAsNumber());\n      offset = Math.min(offset, this.#keyframes[i + 1].offsetAsNumber());\n    }\n    return offset;\n  }\n\n  private mouseDown(mouseEventType: Events, keyframeIndex: number|null, event: Event): boolean {\n    const mouseEvent = (event as MouseEvent);\n    if (mouseEvent.buttons === 2) {\n      return false;\n    }\n    if (this.#svg.enclosingNodeOrSelfWithClass('animation-node-removed')) {\n      return false;\n    }\n    this.#mouseEventType = mouseEventType;\n    this.#keyframeMoved = keyframeIndex;\n    this.#downMouseX = mouseEvent.clientX;\n    event.consume(true);\n\n    const viewManagerInstance = UI.ViewManager.ViewManager.instance();\n\n    const animationLocation = viewManagerInstance.locationNameForViewId('animations');\n    const elementsLocation = viewManagerInstance.locationNameForViewId('elements');\n\n    // Prevents revealing the node if the animations and elements view share the same view location.\n    // If they share the same view location, the animations view will change to the elements view when editing an animation\n    if (this.#node && animationLocation !== elementsLocation) {\n      void Common.Revealer.reveal(this.#node);\n    }\n    return true;\n  }\n\n  private mouseMove(event: Event): void {\n    const mouseEvent = (event as MouseEvent);\n    this.setMovementAndRedraw((mouseEvent.clientX - (this.#downMouseX || 0)) / this.#timeline.pixelTimeRatio());\n  }\n\n  private setMovementAndRedraw(movement: number): void {\n    this.#movementInMs = movement;\n    if (this.delayOrStartTime() + this.duration() > this.#timeline.duration() * 0.8) {\n      this.#timeline.setDuration(this.#timeline.duration() * 1.2);\n    }\n    this.redraw();\n  }\n\n  private mouseUp(event: Event): void {\n    const mouseEvent = (event as MouseEvent);\n    this.#movementInMs = (mouseEvent.clientX - (this.#downMouseX || 0)) / this.#timeline.pixelTimeRatio();\n\n    // Commit changes\n    if (this.#mouseEventType === Events.KEYFRAME_MOVE) {\n      if (this.#keyframes && this.#keyframeMoved !== null && typeof this.#keyframeMoved !== 'undefined') {\n        this.#keyframes[this.#keyframeMoved].setOffset(this.offset(this.#keyframeMoved));\n      }\n    } else {\n      this.#animation.setTiming(this.duration(), this.delayOrStartTime());\n    }\n\n    this.#movementInMs = 0;\n    this.redraw();\n\n    this.#mouseEventType = undefined;\n    this.#downMouseX = undefined;\n    this.#keyframeMoved = undefined;\n  }\n\n  private keydownMove(mouseEventType: Events, keyframeIndex: number|null, event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    this.#mouseEventType = mouseEventType;\n    this.#keyframeMoved = keyframeIndex;\n    switch (keyboardEvent.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        this.#movementInMs = -this.#keyboardMovementRateMs;\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        this.#movementInMs = this.#keyboardMovementRateMs;\n        break;\n      default:\n        return;\n    }\n    if (this.#mouseEventType === Events.KEYFRAME_MOVE) {\n      if (this.#keyframes && this.#keyframeMoved !== null) {\n        this.#keyframes[this.#keyframeMoved].setOffset(this.offset(this.#keyframeMoved));\n      }\n    } else {\n      this.#animation.setTiming(this.duration(), this.delayOrStartTime());\n    }\n    this.setMovementAndRedraw(0);\n\n    this.#mouseEventType = undefined;\n    this.#keyframeMoved = undefined;\n\n    event.consume(true);\n  }\n\n  private onContextMenu(event: Event): void {\n    function showContextMenu(remoteObject: SDK.RemoteObject.RemoteObject|null): void {\n      if (!remoteObject) {\n        return;\n      }\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      contextMenu.appendApplicableItems(remoteObject);\n      void contextMenu.show();\n    }\n\n    void this.#animation.remoteObjectPromise().then(showContextMenu);\n    event.consume(true);\n  }\n}\n\nexport const enum Events {\n  ANIMATION_DRAG = 'AnimationDrag',\n  KEYFRAME_MOVE = 'KeyframeMove',\n  START_ENDPOINT_MOVE = 'StartEndpointMove',\n  FINISH_ENDPOINT_MOVE = 'FinishEndpointMove',\n}\n\nexport const Options = {\n  AnimationHeight: 26,\n  AnimationSVGHeight: 50,\n  AnimationMargin: 7,\n  EndpointsClickRegionSize: 10,\n  GridCanvasHeight: 40,\n};\n\nexport const Colors = new Map<string, Common.Color.Color|null>([\n  ['Purple', Common.Color.parse('#9C27B0')],\n  ['Light Blue', Common.Color.parse('#03A9F4')],\n  ['Deep Orange', Common.Color.parse('#FF5722')],\n  ['Blue', Common.Color.parse('#5677FC')],\n  ['Lime', Common.Color.parse('#CDDC39')],\n  ['Blue Grey', Common.Color.parse('#607D8B')],\n  ['Pink', Common.Color.parse('#E91E63')],\n  ['Green', Common.Color.parse('#0F9D58')],\n  ['Brown', Common.Color.parse('#795548')],\n  ['Cyan', Common.Color.parse('#00BCD4')],\n]);\n", "// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/* The following disable is needed until all the partial view functions are part of one view function */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {AnimationGroupPreviewUI} from './AnimationGroupPreviewUI.js';\nimport animationTimelineStyles from './animationTimeline.css.js';\nimport {AnimationUI} from './AnimationUI.js';\n\nconst UIStrings = {\n  /**\n   * @description Timeline hint text content in Animation Timeline of the Animation Inspector if no effect\n   * is shown.\n   * Animation effects are the visual effects of an animation on the page.\n   */\n  noEffectSelected: 'No animation effect selected',\n  /**\n   * @description Timeline hint text content in Animation Timeline of the Animation Inspector that instructs\n   * users to select an effect.\n   * Animation effects are the visual effects of an animation on the page.\n   */\n  selectAnEffectAboveToInspectAnd: 'Select an effect above to inspect and modify',\n  /**\n   * @description Text to clear everything\n   */\n  clearAll: 'Clear all',\n  /**\n   * @description Tooltip text that appears when hovering over largeicon pause button in Animation Timeline of the Animation Inspector\n   */\n  pauseAll: 'Pause all',\n  /**\n   * @description Title of the playback rate button listbox\n   */\n  playbackRates: 'Playback rates',\n  /**\n   * @description Text in Animation Timeline of the Animation Inspector\n   * @example {50} PH1\n   */\n  playbackRatePlaceholder: '{PH1}%',\n  /**\n   * @description Text of an item that pause the running task\n   */\n  pause: 'Pause',\n  /**\n   * @description Button title in Animation Timeline of the Animation Inspector\n   * @example {50%} PH1\n   */\n  setSpeedToS: 'Set speed to {PH1}',\n  /**\n   * @description Title of Animation Previews listbox\n   */\n  animationPreviews: 'Animation previews',\n  /**\n   * @description Empty buffer hint text content in Animation Timeline of the Animation Inspector.\n   */\n  waitingForAnimations: 'Currently waiting for animations',\n  /**\n   * @description Empty buffer hint text content in Animation Timeline of the Animation Inspector that explains the panel.\n   */\n  animationDescription: 'On this page you can inspect and modify animations.',\n  /**\n   * @description Tooltip text that appears when hovering over largeicon replay animation button in Animation Timeline of the Animation Inspector\n   */\n  replayTimeline: 'Replay timeline',\n  /**\n   * @description Text in Animation Timeline of the Animation Inspector\n   */\n  resumeAll: 'Resume all',\n  /**\n   * @description Title of control button in animation timeline of the animation inspector\n   */\n  playTimeline: 'Play timeline',\n  /**\n   * @description Title of control button in animation timeline of the animation inspector\n   */\n  pauseTimeline: 'Pause timeline',\n  /**\n   * @description Title of a specific Animation Preview\n   * @example {1} PH1\n   */\n  animationPreviewS: 'Animation Preview {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/animation/AnimationTimeline.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html, Directives: {classMap}} = Lit;\nconst nodeUIsByNode = new WeakMap<SDK.DOMModel.DOMNode, NodeUI>();\n\nconst MIN_TIMELINE_CONTROLS_WIDTH = 120;\nconst DEFAULT_TIMELINE_CONTROLS_WIDTH = 150;\nconst MAX_TIMELINE_CONTROLS_WIDTH = 720;\n\nconst ANIMATION_EXPLANATION_URL =\n    'https://developer.chrome.com/docs/devtools/css/animations' as Platform.DevToolsPath.UrlString;\n\ninterface ToolbarViewInput {\n  selectedPlaybackRate: number;\n  playbackRateButtonsDisabled: boolean;\n  allPaused: boolean;\n  onClearClick: () => void;\n  onTogglePauseAllClick: () => void;\n  onSetPlaybackRateClick: (playbackRate: number) => void;\n}\n\ntype ToolbarView = (input: ToolbarViewInput, output: undefined, target: HTMLElement) => void;\n// clang-format off\nconst DEFAULT_TOOLBAR_VIEW: ToolbarView = (input: ToolbarViewInput, output: undefined, target: HTMLElement): void => {\n  const renderPlaybackRateControl = (): Lit.LitTemplate => {\n    const focusNextPlaybackRateButton = (eventTarget: EventTarget|null, focusPrevious?: boolean): void => {\n      const currentPlaybackRateButton = (eventTarget as HTMLElement);\n      const currentPlaybackRate = Number(currentPlaybackRateButton.dataset.playbackRate);\n      if (Number.isNaN(currentPlaybackRate)) {\n        return;\n      }\n\n      const currentIndex = GlobalPlaybackRates.indexOf(currentPlaybackRate);\n      const nextIndex = focusPrevious ? currentIndex - 1 : currentIndex + 1;\n      if (nextIndex < 0 || nextIndex >= GlobalPlaybackRates.length) {\n        return;\n      }\n      const nextPlaybackRate = GlobalPlaybackRates[nextIndex];\n      const nextPlaybackRateButton = target.querySelector(`[data-playback-rate=\"${nextPlaybackRate}\"]`) as HTMLButtonElement | undefined;\n      if (!nextPlaybackRateButton) {\n        return;\n      }\n\n      currentPlaybackRateButton.tabIndex = -1;\n      nextPlaybackRateButton.tabIndex = 0;\n      nextPlaybackRateButton.focus();\n    };\n\n    const handleKeyDown = (event: Event): void => {\n      const keyboardEvent = (event as KeyboardEvent);\n      switch (keyboardEvent.key) {\n        case 'ArrowLeft':\n        case 'ArrowUp':\n          focusNextPlaybackRateButton(event.target, /* focusPrevious */ true);\n          break;\n        case 'ArrowRight':\n        case 'ArrowDown':\n          focusNextPlaybackRateButton(event.target);\n          break;\n      }\n    };\n\n    return html`\n      <div class=\"animation-playback-rate-control\" role=\"listbox\" aria-label=${i18nString(UIStrings.playbackRates)} @keydown=${handleKeyDown}>\n        ${GlobalPlaybackRates.map(playbackRate => {\n          const isSelected = input.selectedPlaybackRate === playbackRate;\n          const textContent = playbackRate ? i18nString(UIStrings.playbackRatePlaceholder, {PH1: playbackRate * 100}) : i18nString(UIStrings.pause);\n          return html`\n            <button class=\"animation-playback-rate-button\" jslog=${VisualLogging.action().context(`animations.playback-rate-${playbackRate * 100}`).track({\n              click: true,\n              keydown: 'ArrowUp|ArrowDown|ArrowLeft|ArrowRight',\n            })}\n            data-playback-rate=${playbackRate}\n            .disabled=${input.playbackRateButtonsDisabled}\n            class=${classMap({\n              'animation-playback-rate-button': true,\n              selected: isSelected,\n            })}\n            tabindex=${isSelected ? 0 : -1}\n            role=\"option\"\n            title=${i18nString(UIStrings.setSpeedToS, {PH1: textContent})}\n            @click=${() => input.onSetPlaybackRateClick(playbackRate)}>\n            ${textContent}\n          </button>\n          `;\n        })}\n      </div>\n    `;\n  };\n  render(html`\n    <div class=\"animation-timeline-toolbar-container\" role=\"toolbar\" jslog=${VisualLogging.toolbar()}>\n      <devtools-toolbar class=\"animation-timeline-toolbar\" role=\"presentation\">\n        <devtools-button\n          title=${i18nString(UIStrings.clearAll)}\n          aria-label=${i18nString(UIStrings.clearAll)}\n          .iconName=${'clear'}\n          .jslogContext=${'animations.clear'}\n          .variant=${Buttons.Button.Variant.TOOLBAR}\n          @click=${input.onClearClick}>\n        </devtools-button>\n        <div class=\"toolbar-divider\"></div>\n        <devtools-button\n          title=${i18nString(UIStrings.pauseAll)}\n          aria-label=${i18nString(UIStrings.pauseAll)}\n          jslog=${\n            /* Do not use `.jslogContext` here because we want this to be reported as Toggle */\n            VisualLogging.toggle().track({click: true}).context('animations.pause-resume-all')\n          }\n          .iconName=${'pause'}\n          .toggledIconName=${'resume'}\n          .variant=${Buttons.Button.Variant.ICON_TOGGLE}\n          .toggleType=${Buttons.Button.ToggleType.PRIMARY}\n          .toggled=${input.allPaused}\n          @click=${input.onTogglePauseAllClick}>\n        </devtools-button>\n      </devtools-toolbar>\n      ${renderPlaybackRateControl()}\n    </div>\n  `, target, {host: target});\n};\n// clang-format on\n\nlet animationTimelineInstance: AnimationTimeline;\nexport class AnimationTimeline extends UI.Widget.VBox implements\n    SDK.TargetManager.SDKModelObserver<SDK.AnimationModel.AnimationModel> {\n  #gridWrapper: HTMLElement;\n  #grid: Element;\n  #playbackRate: number;\n  #allPaused: boolean;\n  #animationsContainer: HTMLElement;\n  #previewContainer!: HTMLElement;\n  #timelineScrubber!: HTMLElement;\n  #currentTime!: HTMLElement;\n  #clearButton!: UI.Toolbar.ToolbarButton;\n  #selectedGroup!: SDK.AnimationModel.AnimationGroup|null;\n  #renderQueue!: AnimationUI[];\n  #defaultDuration: number;\n  #duration: number;\n  #timelineControlsWidth: number;\n  readonly #nodesMap: Map<number, NodeUI>;\n  #uiAnimations: AnimationUI[];\n  #groupBuffer: SDK.AnimationModel.AnimationGroup[];\n  readonly #previewMap: Map<SDK.AnimationModel.AnimationGroup, AnimationGroupPreviewUI>;\n  readonly #animationsMap: Map<string, SDK.AnimationModel.AnimationImpl>;\n  #timelineScrubberLine?: HTMLElement;\n  #pauseButton?: UI.Toolbar.ToolbarToggle;\n  #controlButton?: UI.Toolbar.ToolbarButton;\n  #controlState?: ControlState;\n  #redrawing?: boolean;\n  #cachedTimelineWidth?: number;\n  #scrubberPlayer?: Animation;\n  #gridOffsetLeft?: number;\n  #originalScrubberTime?: number|null;\n  #animationGroupPausedBeforeScrub: boolean;\n  #originalMousePosition?: number;\n  #timelineControlsResizer: HTMLElement;\n  #gridHeader!: HTMLElement;\n  #scrollListenerId?: number|null;\n  #collectedGroups: SDK.AnimationModel.AnimationGroup[];\n  #createPreviewForCollectedGroupsThrottler = new Common.Throttler.Throttler(10);\n  #animationGroupUpdatedThrottler = new Common.Throttler.Throttler(10);\n\n  /** Container & state for rendering `toolbarView` */\n  #toolbarViewContainer: HTMLElement;\n  #toolbarView: ToolbarView;\n  #playbackRateButtonsDisabled = false;\n\n  constructor(toolbarView: ToolbarView = DEFAULT_TOOLBAR_VIEW) {\n    super({\n      jslog: `${VisualLogging.panel('animations').track({resize: true})}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(animationTimelineStyles);\n\n    this.#toolbarView = toolbarView;\n    this.element.classList.add('animations-timeline');\n\n    this.#timelineControlsResizer = this.contentElement.createChild('div', 'timeline-controls-resizer');\n\n    this.#gridWrapper = this.contentElement.createChild('div', 'grid-overflow-wrapper');\n    this.#grid = UI.UIUtils.createSVGChild(this.#gridWrapper, 'svg', 'animation-timeline-grid');\n\n    this.#playbackRate = 1;\n    this.#allPaused = false;\n    this.#animationGroupPausedBeforeScrub = false;\n    this.#toolbarViewContainer = this.contentElement.createChild('div', 'toolbar-view-container');\n    this.createHeader();\n    this.#animationsContainer = this.contentElement.createChild('div', 'animation-timeline-rows');\n    this.#animationsContainer.setAttribute('jslog', `${VisualLogging.section('animations')}`);\n    const emptyBufferHint = this.contentElement.createChild('div', 'animation-timeline-buffer-hint');\n    const noAnimationsPlaceholder = new UI.EmptyWidget.EmptyWidget(\n        i18nString(UIStrings.waitingForAnimations), i18nString(UIStrings.animationDescription));\n    noAnimationsPlaceholder.link = ANIMATION_EXPLANATION_URL;\n    noAnimationsPlaceholder.show(emptyBufferHint);\n\n    const timelineHint = this.contentElement.createChild('div', 'animation-timeline-rows-hint');\n    const noEffectSelectedPlaceholder = new UI.EmptyWidget.EmptyWidget(\n        i18nString(UIStrings.noEffectSelected), i18nString(UIStrings.selectAnEffectAboveToInspectAnd));\n    noEffectSelectedPlaceholder.show(timelineHint);\n\n    /** @constant */ this.#defaultDuration = 100;\n    this.#duration = this.#defaultDuration;\n    this.#nodesMap = new Map();\n    this.#uiAnimations = [];\n    this.#groupBuffer = [];\n    this.#collectedGroups = [];\n    this.#previewMap = new Map();\n    this.#animationsMap = new Map();\n\n    this.#timelineControlsWidth = DEFAULT_TIMELINE_CONTROLS_WIDTH;\n    this.element.style.setProperty('--timeline-controls-width', `${this.#timelineControlsWidth}px`);\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.NodeRemoved, ev => this.markNodeAsRemoved(ev.data.node), this,\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.AnimationModel.AnimationModel, this, {scoped: true});\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.nodeChanged, this);\n\n    this.#setupTimelineControlsResizer();\n    this.performToolbarViewUpdate();\n  }\n\n  static instance(opts?: {forceNew: boolean}): AnimationTimeline {\n    if (!animationTimelineInstance || opts?.forceNew) {\n      animationTimelineInstance = new AnimationTimeline();\n    }\n    return animationTimelineInstance;\n  }\n\n  #setupTimelineControlsResizer(): void {\n    let resizeOriginX: number|undefined = undefined;\n    UI.UIUtils.installDragHandle(\n        this.#timelineControlsResizer,\n        (ev: MouseEvent) => {\n          resizeOriginX = ev.clientX;\n          return true;\n        },\n        (ev: MouseEvent) => {\n          if (resizeOriginX === undefined) {\n            return;\n          }\n\n          const newWidth = this.#timelineControlsWidth + ev.clientX - resizeOriginX;\n          this.#timelineControlsWidth =\n              Math.min(Math.max(newWidth, MIN_TIMELINE_CONTROLS_WIDTH), MAX_TIMELINE_CONTROLS_WIDTH);\n          resizeOriginX = ev.clientX;\n          this.element.style.setProperty('--timeline-controls-width', this.#timelineControlsWidth + 'px');\n          this.onResize();\n        },\n        () => {\n          resizeOriginX = undefined;\n        },\n        'ew-resize');\n  }\n\n  get previewMap(): Map<SDK.AnimationModel.AnimationGroup, AnimationGroupPreviewUI> {\n    return this.#previewMap;\n  }\n\n  get uiAnimations(): AnimationUI[] {\n    return this.#uiAnimations;\n  }\n\n  get groupBuffer(): SDK.AnimationModel.AnimationGroup[] {\n    return this.#groupBuffer;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    for (const animationModel of SDK.TargetManager.TargetManager.instance().models(\n             SDK.AnimationModel.AnimationModel, {scoped: true})) {\n      this.#addExistingAnimationGroups(animationModel);\n      this.addEventListeners(animationModel);\n    }\n  }\n\n  override willHide(): void {\n    for (const animationModel of SDK.TargetManager.TargetManager.instance().models(\n             SDK.AnimationModel.AnimationModel, {scoped: true})) {\n      this.removeEventListeners(animationModel);\n    }\n  }\n\n  #addExistingAnimationGroups(animationModel: SDK.AnimationModel.AnimationModel): void {\n    for (const animationGroup of animationModel.animationGroups.values()) {\n      if (this.#previewMap.has(animationGroup)) {\n        continue;\n      }\n\n      void this.addAnimationGroup(animationGroup);\n    }\n  }\n\n  #showPanelInDrawer(): void {\n    const viewManager = UI.ViewManager.ViewManager.instance();\n    viewManager.moveView('animations', 'drawer-view', {\n      shouldSelectTab: true,\n      overrideSaving: true,\n    });\n  }\n\n  async revealAnimationGroup(animationGroup: SDK.AnimationModel.AnimationGroup): Promise<void> {\n    if (!this.#previewMap.has(animationGroup)) {\n      await this.addAnimationGroup(animationGroup);\n    }\n\n    this.#showPanelInDrawer();\n    return await this.selectAnimationGroup(animationGroup);\n  }\n\n  modelAdded(animationModel: SDK.AnimationModel.AnimationModel): void {\n    if (this.isShowing()) {\n      this.addEventListeners(animationModel);\n    }\n  }\n\n  modelRemoved(animationModel: SDK.AnimationModel.AnimationModel): void {\n    this.removeEventListeners(animationModel);\n  }\n\n  private addEventListeners(animationModel: SDK.AnimationModel.AnimationModel): void {\n    animationModel.addEventListener(SDK.AnimationModel.Events.AnimationGroupStarted, this.animationGroupStarted, this);\n    animationModel.addEventListener(SDK.AnimationModel.Events.AnimationGroupUpdated, this.animationGroupUpdated, this);\n    animationModel.addEventListener(SDK.AnimationModel.Events.ModelReset, this.reset, this);\n  }\n\n  private removeEventListeners(animationModel: SDK.AnimationModel.AnimationModel): void {\n    animationModel.removeEventListener(\n        SDK.AnimationModel.Events.AnimationGroupStarted, this.animationGroupStarted, this);\n    animationModel.removeEventListener(\n        SDK.AnimationModel.Events.AnimationGroupUpdated, this.animationGroupUpdated, this);\n    animationModel.removeEventListener(SDK.AnimationModel.Events.ModelReset, this.reset, this);\n  }\n\n  private nodeChanged(): void {\n    for (const nodeUI of this.#nodesMap.values()) {\n      nodeUI.nodeChanged();\n    }\n  }\n\n  private createScrubber(): HTMLElement {\n    this.#timelineScrubber = document.createElement('div');\n    this.#timelineScrubber.classList.add('animation-scrubber');\n    this.#timelineScrubber.classList.add('hidden');\n    this.#timelineScrubberLine = this.#timelineScrubber.createChild('div', 'animation-scrubber-line');\n    this.#timelineScrubberLine.createChild('div', 'animation-scrubber-head');\n    this.#timelineScrubber.createChild('div', 'animation-time-overlay');\n    return this.#timelineScrubber;\n  }\n\n  private performToolbarViewUpdate(): void {\n    this.#toolbarView(\n        {\n          selectedPlaybackRate: this.#playbackRate,\n          playbackRateButtonsDisabled: this.#playbackRateButtonsDisabled,\n          allPaused: this.#allPaused,\n          onClearClick: () => {\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.AnimationGroupsCleared);\n            this.reset();\n          },\n          onTogglePauseAllClick: () => {\n            this.#allPaused = !this.#allPaused;\n            Host.userMetrics.actionTaken(\n                this.#allPaused ? Host.UserMetrics.Action.AnimationsPaused : Host.UserMetrics.Action.AnimationsResumed,\n            );\n            this.setPlaybackRate(this.#playbackRate);\n            if (this.#pauseButton) {\n              this.#pauseButton.setTitle(\n                  this.#allPaused ? i18nString(UIStrings.resumeAll) : i18nString(UIStrings.pauseAll));\n            }\n          },\n          onSetPlaybackRateClick: (playbackRate: number) => {\n            this.setPlaybackRate(playbackRate);\n          }\n        },\n        undefined, this.#toolbarViewContainer);\n  }\n\n  private createHeader(): HTMLElement {\n    this.#previewContainer = this.contentElement.createChild('div', 'animation-timeline-buffer');\n    this.#previewContainer.setAttribute('jslog', `${VisualLogging.section('film-strip')}`);\n    UI.ARIAUtils.markAsListBox(this.#previewContainer);\n    UI.ARIAUtils.setLabel(this.#previewContainer, i18nString(UIStrings.animationPreviews));\n    const container = this.contentElement.createChild('div', 'animation-timeline-header');\n    const controls = container.createChild('div', 'animation-controls');\n    this.#currentTime = controls.createChild('div', 'animation-timeline-current-time monospace');\n\n    const toolbar = controls.createChild('devtools-toolbar', 'animation-controls-toolbar');\n    this.#controlButton = new UI.Toolbar.ToolbarButton(\n        i18nString(UIStrings.replayTimeline), 'replay', undefined, 'animations.play-replay-pause-animation-group');\n    this.#controlButton.element.classList.add('toolbar-state-on');\n    this.#controlState = ControlState.REPLAY;\n    this.#controlButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.controlButtonToggle.bind(this));\n    toolbar.appendToolbarItem(this.#controlButton);\n\n    this.#gridHeader = container.createChild('div', 'animation-grid-header');\n    this.#gridHeader.setAttribute(\n        'jslog', `${VisualLogging.timeline('animations.grid-header').track({drag: true, click: true})}`);\n    UI.UIUtils.installDragHandle(\n        this.#gridHeader, this.scrubberDragStart.bind(this), this.scrubberDragMove.bind(this),\n        this.scrubberDragEnd.bind(this), null);\n    this.#gridWrapper.appendChild(this.createScrubber());\n\n    this.clearCurrentTimeText();\n\n    return container;\n  }\n\n  private setPlaybackRate(playbackRate: number): void {\n    if (playbackRate !== this.#playbackRate) {\n      Host.userMetrics.animationPlaybackRateChanged(\n          playbackRate === 0.1      ? Host.UserMetrics.AnimationsPlaybackRate.PERCENT_10 :\n              playbackRate === 0.25 ? Host.UserMetrics.AnimationsPlaybackRate.PERCENT_25 :\n              playbackRate === 1    ? Host.UserMetrics.AnimationsPlaybackRate.PERCENT_100 :\n                                      Host.UserMetrics.AnimationsPlaybackRate.OTHER);\n    }\n\n    this.#playbackRate = playbackRate;\n    for (const animationModel of SDK.TargetManager.TargetManager.instance().models(\n             SDK.AnimationModel.AnimationModel, {scoped: true})) {\n      animationModel.setPlaybackRate(this.#allPaused ? 0 : this.#playbackRate);\n    }\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.AnimationsPlaybackRateChanged);\n    if (this.#scrubberPlayer) {\n      this.#scrubberPlayer.playbackRate = this.effectivePlaybackRate();\n    }\n\n    this.performToolbarViewUpdate();\n  }\n\n  private controlButtonToggle(): void {\n    if (this.#controlState === ControlState.PLAY) {\n      this.togglePause(false);\n    } else if (this.#controlState === ControlState.REPLAY) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.AnimationGroupReplayed);\n      this.replay();\n    } else {\n      this.togglePause(true);\n    }\n  }\n\n  private updateControlButton(): void {\n    if (!this.#controlButton) {\n      return;\n    }\n\n    this.#controlButton.setEnabled(\n        Boolean(this.#selectedGroup) && this.hasAnimationGroupActiveNodes() && !this.#selectedGroup?.isScrollDriven());\n    if (this.#selectedGroup && this.#selectedGroup.paused()) {\n      this.#controlState = ControlState.PLAY;\n      this.#controlButton.element.classList.toggle('toolbar-state-on', true);\n      this.#controlButton.setTitle(i18nString(UIStrings.playTimeline));\n      this.#controlButton.setGlyph('play');\n    } else if (\n        !this.#scrubberPlayer || !this.#scrubberPlayer.currentTime ||\n        typeof this.#scrubberPlayer.currentTime !== 'number' || this.#scrubberPlayer.currentTime >= this.duration()) {\n      this.#controlState = ControlState.REPLAY;\n      this.#controlButton.element.classList.toggle('toolbar-state-on', true);\n      this.#controlButton.setTitle(i18nString(UIStrings.replayTimeline));\n      this.#controlButton.setGlyph('replay');\n    } else {\n      this.#controlState = ControlState.PAUSE;\n      this.#controlButton.element.classList.toggle('toolbar-state-on', false);\n      this.#controlButton.setTitle(i18nString(UIStrings.pauseTimeline));\n      this.#controlButton.setGlyph('pause');\n    }\n  }\n\n  private effectivePlaybackRate(): number {\n    return (this.#allPaused || (this.#selectedGroup && this.#selectedGroup.paused())) ? 0 : this.#playbackRate;\n  }\n\n  private togglePause(pause: boolean): void {\n    if (this.#selectedGroup) {\n      this.#selectedGroup.togglePause(pause);\n      const preview = this.#previewMap.get(this.#selectedGroup);\n      if (preview) {\n        preview.setPaused(pause);\n      }\n    }\n    if (this.#scrubberPlayer) {\n      this.#scrubberPlayer.playbackRate = this.effectivePlaybackRate();\n    }\n    this.updateControlButton();\n  }\n\n  private replay(): void {\n    if (!this.#selectedGroup || !this.hasAnimationGroupActiveNodes() || this.#selectedGroup.isScrollDriven()) {\n      return;\n    }\n    this.#selectedGroup.seekTo(0);\n    this.animateTime(0);\n    this.updateControlButton();\n  }\n\n  duration(): number {\n    return this.#duration;\n  }\n\n  setDuration(duration: number): void {\n    this.#duration = duration;\n    this.scheduleRedraw();\n  }\n\n  private clearTimeline(): void {\n    if (this.#selectedGroup && this.#scrollListenerId) {\n      void this.#selectedGroup.scrollNode().then((node: SDK.AnimationModel.AnimationDOMNode|null) => {\n        void node?.removeScrollEventListener(this.#scrollListenerId as number);\n        this.#scrollListenerId = undefined;\n      });\n    }\n\n    this.#uiAnimations = [];\n    this.#nodesMap.clear();\n    this.#animationsMap.clear();\n    this.#animationsContainer.removeChildren();\n    this.#duration = this.#defaultDuration;\n    this.#timelineScrubber.classList.add('hidden');\n    this.#gridHeader.classList.remove('scrubber-enabled');\n    this.#selectedGroup = null;\n    if (this.#scrubberPlayer) {\n      this.#scrubberPlayer.cancel();\n    }\n    this.#scrubberPlayer = undefined;\n    this.clearCurrentTimeText();\n    this.updateControlButton();\n  }\n\n  private reset(): void {\n    this.clearTimeline();\n    this.setPlaybackRate(this.#playbackRate);\n\n    for (const group of this.#groupBuffer) {\n      group.release();\n    }\n    this.#groupBuffer = [];\n    this.clearPreviews();\n    this.renderGrid();\n  }\n\n  private animationGroupStarted({data}: Common.EventTarget.EventTargetEvent<SDK.AnimationModel.AnimationGroup>): void {\n    void this.addAnimationGroup(data);\n  }\n\n  scheduledRedrawAfterAnimationGroupUpdatedForTest(): void {\n  }\n\n  private animationGroupUpdated({\n    data: group,\n  }: Common.EventTarget.EventTargetEvent<SDK.AnimationModel.AnimationGroup>): void {\n    void this.#animationGroupUpdatedThrottler.schedule(async () => {\n      const preview = this.#previewMap.get(group);\n      if (preview) {\n        preview.replay();\n      }\n\n      if (this.#selectedGroup !== group) {\n        return;\n      }\n\n      if (group.isScrollDriven()) {\n        const animationNode = await group.scrollNode();\n        if (animationNode) {\n          const scrollRange = group.scrollOrientation() === Protocol.DOM.ScrollOrientation.Vertical ?\n              await animationNode.verticalScrollRange() :\n              await animationNode.horizontalScrollRange();\n          const scrollOffset = group.scrollOrientation() === Protocol.DOM.ScrollOrientation.Vertical ?\n              await animationNode.scrollTop() :\n              await animationNode.scrollLeft();\n          if (scrollRange !== null) {\n            this.setDuration(scrollRange);\n          }\n\n          if (scrollOffset !== null) {\n            this.setCurrentTimeText(scrollOffset);\n            this.setTimelineScrubberPosition(scrollOffset);\n          }\n        }\n      } else {\n        this.setDuration(group.finiteDuration());\n      }\n\n      this.updateControlButton();\n      this.scheduleRedraw();\n\n      this.scheduledRedrawAfterAnimationGroupUpdatedForTest();\n    });\n  }\n\n  private clearPreviews(): void {\n    this.#previewMap.clear();\n    this.#previewContainer.removeChildren();\n  }\n\n  private createPreview(group: SDK.AnimationModel.AnimationGroup): void {\n    const preview = new AnimationGroupPreviewUI({\n      animationGroup: group,\n      label: i18nString(UIStrings.animationPreviewS, {PH1: this.#groupBuffer.length + 1}),\n      onRemoveAnimationGroup: () => {\n        this.removeAnimationGroup(group);\n      },\n      onSelectAnimationGroup: () => {\n        void this.selectAnimationGroup(group);\n      },\n      onFocusNextGroup: () => {\n        this.focusNextGroup(group);\n      },\n      onFocusPreviousGroup: () => {\n        this.focusNextGroup(group, /* focusPrevious */ true);\n      }\n    });\n\n    const previewUiContainer = document.createElement('div');\n    previewUiContainer.classList.add('preview-ui-container');\n    preview.markAsRoot();\n    preview.show(previewUiContainer);\n\n    this.#groupBuffer.push(group);\n    this.#previewMap.set(group, preview);\n    this.#previewContainer.appendChild(previewUiContainer);\n\n    // If this is the first preview attached, we want it to be focusable directly.\n    // Otherwise, we don't want the previews to be focusable via Tabbing and manage\n    // their focus via arrow keys.\n    if (this.#previewMap.size === 1) {\n      const preview = this.#previewMap.get(this.#groupBuffer[0]);\n      if (preview) {\n        preview.setFocusable(true);\n      }\n    }\n  }\n\n  previewsCreatedForTest(): void {\n  }\n\n  scrubberOnFinishForTest(): void {\n  }\n\n  private createPreviewForCollectedGroups(): void {\n    this.#collectedGroups.sort((a, b) => {\n      // Scroll driven animations are rendered first.\n      if (a.isScrollDriven() && !b.isScrollDriven()) {\n        return -1;\n      }\n      if (!a.isScrollDriven() && b.isScrollDriven()) {\n        return 1;\n      }\n\n      // Then compare the start times for the same type of animations.\n      if (a.startTime() !== b.startTime()) {\n        return a.startTime() - b.startTime();\n      }\n\n      // If the start times are the same, the one with the more animations take precedence.\n      return a.animations.length - b.animations.length;\n    });\n\n    for (const group of this.#collectedGroups) {\n      this.createPreview(group);\n    }\n\n    this.#collectedGroups = [];\n    this.previewsCreatedForTest();\n  }\n\n  private addAnimationGroup(group: SDK.AnimationModel.AnimationGroup): Promise<void> {\n    const previewGroup = this.#previewMap.get(group);\n    if (previewGroup) {\n      if (this.#selectedGroup === group) {\n        this.syncScrubber();\n      } else {\n        previewGroup.replay();\n      }\n      return Promise.resolve();\n    }\n\n    this.#groupBuffer.sort((left, right) => left.startTime() - right.startTime());\n\n    // Discard oldest groups from buffer if necessary\n    const groupsToDiscard = [];\n    const bufferSize = this.width() / 50;\n    while (this.#groupBuffer.length > bufferSize) {\n      const toDiscard = this.#groupBuffer.splice(this.#groupBuffer[0] === this.#selectedGroup ? 1 : 0, 1);\n      groupsToDiscard.push(toDiscard[0]);\n    }\n    for (const g of groupsToDiscard) {\n      const discardGroup = this.#previewMap.get(g);\n      if (!discardGroup) {\n        continue;\n      }\n      discardGroup.detach();\n      this.#previewMap.delete(g);\n      g.release();\n    }\n\n    // Batch creating preview for arrivals happening closely together to ensure\n    // stable UI sorting in the preview container.\n    this.#collectedGroups.push(group);\n    return this.#createPreviewForCollectedGroupsThrottler.schedule(\n        () => Promise.resolve(this.createPreviewForCollectedGroups()));\n  }\n\n  private focusNextGroup(group: SDK.AnimationModel.AnimationGroup, focusPrevious?: boolean): void {\n    const currentGroupIndex = this.#groupBuffer.indexOf(group);\n    const nextIndex = focusPrevious ? currentGroupIndex - 1 : currentGroupIndex + 1;\n    if (nextIndex < 0 || nextIndex >= this.#groupBuffer.length) {\n      return;\n    }\n    const preview = this.#previewMap.get(this.#groupBuffer[nextIndex]);\n    if (preview) {\n      preview.setFocusable(true);\n      preview.focus();\n    }\n\n    const previousPreview = this.#previewMap.get(group);\n    if (previousPreview) {\n      previousPreview.setFocusable(false);\n    }\n  }\n\n  private removeAnimationGroup(group: SDK.AnimationModel.AnimationGroup): void {\n    const currentGroupIndex = this.#groupBuffer.indexOf(group);\n\n    Platform.ArrayUtilities.removeElement(this.#groupBuffer, group);\n    const previewGroup = this.#previewMap.get(group);\n    if (previewGroup) {\n      previewGroup.detach();\n    }\n    this.#previewMap.delete(group);\n    group.release();\n    if (this.#selectedGroup === group) {\n      this.clearTimeline();\n      this.renderGrid();\n    }\n\n    const groupLength = this.#groupBuffer.length;\n    if (groupLength === 0) {\n      (this.#clearButton.element as HTMLElement).focus();\n      return;\n    }\n    const nextGroup = currentGroupIndex >= this.#groupBuffer.length ?\n        this.#previewMap.get(this.#groupBuffer[this.#groupBuffer.length - 1]) :\n        this.#previewMap.get(this.#groupBuffer[currentGroupIndex]);\n\n    if (nextGroup) {\n      nextGroup.setFocusable(true);\n      nextGroup.focus();\n    }\n  }\n\n  private clearCurrentTimeText(): void {\n    this.#currentTime.textContent = '';\n  }\n\n  private setCurrentTimeText(time: number): void {\n    if (!this.#selectedGroup) {\n      return;\n    }\n\n    this.#currentTime.textContent =\n        this.#selectedGroup?.isScrollDriven() ? `${time.toFixed(0)}px` : i18n.TimeUtilities.millisToString(time);\n  }\n\n  private async selectAnimationGroup(group: SDK.AnimationModel.AnimationGroup): Promise<void> {\n    if (this.#selectedGroup === group) {\n      this.togglePause(false);\n      this.replay();\n      return;\n    }\n    this.clearTimeline();\n    this.#selectedGroup = group;\n    this.#previewMap.forEach((previewUI: AnimationGroupPreviewUI, group: SDK.AnimationModel.AnimationGroup) => {\n      previewUI.setSelected(this.#selectedGroup === group);\n    });\n\n    if (group.isScrollDriven()) {\n      const animationNode = await group.scrollNode();\n      if (!animationNode) {\n        throw new Error('Scroll container is not found for the scroll driven animation');\n      }\n\n      const scrollRange = group.scrollOrientation() === Protocol.DOM.ScrollOrientation.Vertical ?\n          await animationNode.verticalScrollRange() :\n          await animationNode.horizontalScrollRange();\n      const scrollOffset = group.scrollOrientation() === Protocol.DOM.ScrollOrientation.Vertical ?\n          await animationNode.scrollTop() :\n          await animationNode.scrollLeft();\n      if (typeof scrollRange !== 'number' || typeof scrollOffset !== 'number') {\n        throw new Error('Scroll range or scroll offset is not resolved for the scroll driven animation');\n      }\n\n      this.#scrollListenerId = await animationNode.addScrollEventListener(({scrollTop, scrollLeft}) => {\n        const offset = group.scrollOrientation() === Protocol.DOM.ScrollOrientation.Vertical ? scrollTop : scrollLeft;\n        this.setCurrentTimeText(offset);\n        this.setTimelineScrubberPosition(offset);\n      });\n      this.setDuration(scrollRange);\n      this.setCurrentTimeText(scrollOffset);\n      this.setTimelineScrubberPosition(scrollOffset);\n      if (this.#pauseButton) {\n        this.#pauseButton.setEnabled(false);\n      }\n      this.#playbackRateButtonsDisabled = true;\n      this.performToolbarViewUpdate();\n    } else {\n      this.setDuration(group.finiteDuration());\n      if (this.#pauseButton) {\n        this.#pauseButton.setEnabled(true);\n      }\n      this.#playbackRateButtonsDisabled = false;\n      this.performToolbarViewUpdate();\n    }\n\n    // Wait for all animations to be added and nodes to be resolved\n    // until we schedule a redraw.\n    await Promise.all(group.animations().map(anim => this.addAnimation(anim)));\n    this.scheduleRedraw();\n    this.togglePause(false);\n    this.replay();\n    if (this.hasAnimationGroupActiveNodes()) {\n      this.#timelineScrubber.classList.remove('hidden');\n      this.#gridHeader.classList.add('scrubber-enabled');\n    }\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.AnimationGroupSelected);\n    if (this.#selectedGroup.isScrollDriven()) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.ScrollDrivenAnimationGroupSelected);\n    }\n    this.animationGroupSelectedForTest();\n  }\n\n  animationGroupSelectedForTest(): void {\n  }\n\n  private async addAnimation(animation: SDK.AnimationModel.AnimationImpl): Promise<void> {\n    let nodeUI = this.#nodesMap.get(animation.source().backendNodeId());\n    if (!nodeUI) {\n      nodeUI = new NodeUI(animation.source());\n      this.#animationsContainer.appendChild(nodeUI.element);\n      this.#nodesMap.set(animation.source().backendNodeId(), nodeUI);\n    }\n    const nodeRow = nodeUI.createNewRow();\n    const uiAnimation = new AnimationUI(animation, this, nodeRow);\n    const node = await animation.source().deferredNode().resolvePromise();\n    uiAnimation.setNode(node);\n    if (node && nodeUI) {\n      nodeUI.nodeResolved(node);\n      nodeUIsByNode.set(node, nodeUI);\n    }\n    this.#uiAnimations.push(uiAnimation);\n    this.#animationsMap.set(animation.id(), animation);\n  }\n\n  private markNodeAsRemoved(node: SDK.DOMModel.DOMNode): void {\n    nodeUIsByNode.get(node)?.nodeRemoved();\n\n    // Mark nodeUIs of pseudo elements of the node as removed for instance, for view transitions.\n    for (const pseudoElements of node.pseudoElements().values()) {\n      pseudoElements.forEach(pseudoElement => this.markNodeAsRemoved(pseudoElement));\n    }\n\n    // Mark nodeUIs of children as node removed.\n    node.children()?.forEach(child => {\n      this.markNodeAsRemoved(child);\n    });\n\n    // If the user already has a selected animation group and\n    // some of the nodes are removed, we check whether all the nodes\n    // are removed for the currently selected animation. If that's the case\n    // we remove the scrubber and update control button to be disabled.\n    if (!this.hasAnimationGroupActiveNodes()) {\n      this.#gridHeader.classList.remove('scrubber-enabled');\n      this.#timelineScrubber.classList.add('hidden');\n      this.#scrubberPlayer?.cancel();\n      this.#scrubberPlayer = undefined;\n      this.clearCurrentTimeText();\n      this.updateControlButton();\n    }\n  }\n\n  private hasAnimationGroupActiveNodes(): boolean {\n    for (const nodeUI of this.#nodesMap.values()) {\n      if (nodeUI.hasActiveNode()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private renderGrid(): void {\n    const isScrollDriven = this.#selectedGroup?.isScrollDriven();\n    // For scroll driven animations, show divider lines for each 10% progres.\n    // For time based animations, show divider lines for each 250ms progress.\n    const gridSize = isScrollDriven ? this.duration() / 10 : 250;\n    this.#grid.removeChildren();\n    let lastDraw: number|undefined = undefined;\n    for (let time = 0; time < this.duration(); time += gridSize) {\n      const line = UI.UIUtils.createSVGChild(this.#grid, 'rect', 'animation-timeline-grid-line');\n      line.setAttribute('x', (time * this.pixelTimeRatio() + 10).toString());\n      line.setAttribute('y', '23');\n      line.setAttribute('height', '100%');\n      line.setAttribute('width', '1');\n    }\n    for (let time = 0; time < this.duration(); time += gridSize) {\n      const gridWidth = time * this.pixelTimeRatio();\n      if (lastDraw === undefined || gridWidth - lastDraw > 50) {\n        lastDraw = gridWidth;\n        const label = UI.UIUtils.createSVGChild(this.#grid, 'text', 'animation-timeline-grid-label');\n        label.textContent = isScrollDriven ? `${time.toFixed(0)}px` : i18n.TimeUtilities.millisToString(time);\n        label.setAttribute('x', (gridWidth + 12).toString());\n        label.setAttribute('y', '16');\n      }\n    }\n  }\n\n  scheduleRedraw(): void {\n    this.renderGrid();\n    this.#renderQueue = [];\n    for (const ui of this.#uiAnimations) {\n      this.#renderQueue.push(ui);\n    }\n    if (this.#redrawing) {\n      return;\n    }\n    this.#redrawing = true;\n    this.#animationsContainer.window().requestAnimationFrame(this.render.bind(this));\n  }\n\n  private render(timestamp?: number): void {\n    while (this.#renderQueue.length && (!timestamp || window.performance.now() - timestamp < 50)) {\n      const animationUI = this.#renderQueue.shift();\n      if (animationUI) {\n        animationUI.redraw();\n      }\n    }\n    if (this.#renderQueue.length) {\n      this.#animationsContainer.window().requestAnimationFrame(this.render.bind(this));\n    } else {\n      this.#redrawing = undefined;\n    }\n  }\n\n  override onResize(): void {\n    this.#cachedTimelineWidth = Math.max(0, this.contentElement.offsetWidth - this.#timelineControlsWidth) || 0;\n    this.scheduleRedraw();\n    if (this.#scrubberPlayer) {\n      this.syncScrubber();\n    }\n    this.#gridOffsetLeft = undefined;\n  }\n\n  width(): number {\n    return this.#cachedTimelineWidth || 0;\n  }\n\n  private syncScrubber(): void {\n    if (!this.#selectedGroup || !this.hasAnimationGroupActiveNodes()) {\n      return;\n    }\n    void this.#selectedGroup.currentTimePromise()\n        .then(this.animateTime.bind(this))\n        .then(this.updateControlButton.bind(this));\n  }\n\n  private animateTime(currentTime: number): void {\n    // Scroll driven animations are bound to the scroll position of the scroll container\n    // thus we don't animate the scrubber based on time for scroll driven animations.\n    if (this.#selectedGroup?.isScrollDriven()) {\n      return;\n    }\n\n    if (this.#scrubberPlayer) {\n      this.#scrubberPlayer.cancel();\n    }\n\n    this.#scrubberPlayer = this.#timelineScrubber.animate(\n        [{transform: 'translateX(0px)'}, {transform: 'translateX(' + this.width() + 'px)'}],\n        {duration: this.duration(), fill: 'forwards'});\n    this.#scrubberPlayer.playbackRate = this.effectivePlaybackRate();\n    this.#scrubberPlayer.onfinish = () => {\n      this.updateControlButton();\n      this.scrubberOnFinishForTest();\n    };\n    this.#scrubberPlayer.currentTime = currentTime;\n    this.element.window().requestAnimationFrame(this.updateScrubber.bind(this));\n  }\n\n  pixelTimeRatio(): number {\n    return this.width() / this.duration() || 0;\n  }\n\n  private updateScrubber(_timestamp: number): void {\n    if (!this.#scrubberPlayer) {\n      return;\n    }\n\n    this.setCurrentTimeText(this.#scrubberCurrentTime());\n    if (this.#scrubberPlayer.playState.toString() === 'pending' || this.#scrubberPlayer.playState === 'running') {\n      this.element.window().requestAnimationFrame(this.updateScrubber.bind(this));\n    }\n  }\n\n  private scrubberDragStart(event: MouseEvent): boolean {\n    if (!this.#selectedGroup || !this.hasAnimationGroupActiveNodes()) {\n      return false;\n    }\n\n    // Seek to current mouse position.\n    if (!this.#gridOffsetLeft) {\n      this.#gridOffsetLeft = this.#grid.getBoundingClientRect().left + 10;\n    }\n\n    const {x} = event;\n    const seekTime = Math.max(0, x - this.#gridOffsetLeft) / this.pixelTimeRatio();\n    // Interface with scrubber drag.\n    this.#originalScrubberTime = seekTime;\n    this.#originalMousePosition = x;\n    this.setCurrentTimeText(seekTime);\n\n    if (this.#selectedGroup.isScrollDriven()) {\n      this.setTimelineScrubberPosition(seekTime);\n      void this.updateScrollOffsetOnPage(seekTime);\n    } else {\n      const currentTime = this.#scrubberPlayer?.currentTime;\n      this.#animationGroupPausedBeforeScrub =\n          this.#selectedGroup.paused() || typeof currentTime === 'number' && currentTime >= this.duration();\n\n      this.#selectedGroup.seekTo(seekTime);\n      this.togglePause(true);\n      this.animateTime(seekTime);\n    }\n\n    return true;\n  }\n\n  private async updateScrollOffsetOnPage(offset: number): Promise<void> {\n    const node = await this.#selectedGroup?.scrollNode();\n    if (!node) {\n      return;\n    }\n\n    if (this.#selectedGroup?.scrollOrientation() === Protocol.DOM.ScrollOrientation.Vertical) {\n      return await node.setScrollTop(offset);\n    }\n    return await node.setScrollLeft(offset);\n  }\n\n  private setTimelineScrubberPosition(time: number): void {\n    this.#timelineScrubber.style.transform = `translateX(${time * this.pixelTimeRatio()}px)`;\n  }\n\n  private scrubberDragMove(event: MouseEvent): void {\n    const {x} = event;\n    const delta = x - (this.#originalMousePosition || 0);\n    const currentTime =\n        Math.max(0, Math.min((this.#originalScrubberTime || 0) + delta / this.pixelTimeRatio(), this.duration()));\n    if (this.#scrubberPlayer) {\n      this.#scrubberPlayer.currentTime = currentTime;\n    } else {\n      this.setTimelineScrubberPosition(currentTime);\n      void this.updateScrollOffsetOnPage(currentTime);\n    }\n\n    this.setCurrentTimeText(currentTime);\n    if (this.#selectedGroup && !this.#selectedGroup.isScrollDriven()) {\n      this.#selectedGroup.seekTo(currentTime);\n    }\n  }\n\n  #scrubberCurrentTime(): number {\n    return typeof this.#scrubberPlayer?.currentTime === 'number' ? this.#scrubberPlayer.currentTime : 0;\n  }\n\n  private scrubberDragEnd(_event: Event): void {\n    if (this.#scrubberPlayer) {\n      const currentTime = Math.max(0, this.#scrubberCurrentTime());\n      this.#scrubberPlayer.play();\n      this.#scrubberPlayer.currentTime = currentTime;\n    }\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.AnimationGroupScrubbed);\n    if (this.#selectedGroup?.isScrollDriven()) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.ScrollDrivenAnimationGroupScrubbed);\n    }\n    this.#currentTime.window().requestAnimationFrame(this.updateScrubber.bind(this));\n\n    if (!this.#animationGroupPausedBeforeScrub) {\n      this.togglePause(false);\n    }\n  }\n}\n\nexport const GlobalPlaybackRates = [1, 0.25, 0.1];\n\nconst enum ControlState {\n  PLAY = 'play-outline',\n  REPLAY = 'replay-outline',\n  PAUSE = 'pause-outline',\n}\n\nexport class NodeUI {\n  element: HTMLDivElement;\n  readonly #description: HTMLElement;\n  readonly #timelineElement: HTMLElement;\n  #overlayElement?: HTMLElement;\n  #node?: SDK.DOMModel.DOMNode|null;\n\n  constructor(_animationEffect: SDK.AnimationModel.AnimationEffect) {\n    this.element = document.createElement('div');\n    this.element.classList.add('animation-node-row');\n    this.#description = this.element.createChild('div', 'animation-node-description');\n    this.#description.setAttribute('jslog', `${VisualLogging.tableCell('description').track({resize: true})}`);\n    this.#timelineElement = this.element.createChild('div', 'animation-node-timeline');\n    this.#timelineElement.setAttribute('jslog', `${VisualLogging.tableCell('timeline').track({resize: true})}`);\n    UI.ARIAUtils.markAsApplication(this.#timelineElement);\n  }\n\n  nodeResolved(node: SDK.DOMModel.DOMNode|null): void {\n    if (!node) {\n      UI.UIUtils.createTextChild(this.#description, '<node>');\n      return;\n    }\n    this.#node = node;\n    this.nodeChanged();\n    void Common.Linkifier.Linkifier.linkify(node).then(link => {\n      link.addEventListener('click', () => {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.AnimatedNodeDescriptionClicked);\n      });\n\n      this.#description.appendChild(link);\n    });\n    if (!node.ownerDocument) {\n      this.nodeRemoved();\n    }\n  }\n\n  createNewRow(): Element {\n    return this.#timelineElement.createChild('div', 'animation-timeline-row');\n  }\n\n  nodeRemoved(): void {\n    this.element.classList.add('animation-node-removed');\n    if (!this.#overlayElement) {\n      this.#overlayElement = document.createElement('div');\n      this.#overlayElement.classList.add('animation-node-removed-overlay');\n      this.#description.appendChild(this.#overlayElement);\n    }\n    this.#node = null;\n  }\n\n  hasActiveNode(): boolean {\n    return Boolean(this.#node);\n  }\n\n  nodeChanged(): void {\n    let animationNodeSelected = false;\n    if (this.#node) {\n      animationNodeSelected = (this.#node === UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode));\n    }\n\n    this.element.classList.toggle('animation-node-selected', animationNodeSelected);\n  }\n}\n\nexport class StepTimingFunction {\n  steps: number;\n  stepAtPosition: string;\n  constructor(steps: number, stepAtPosition: string) {\n    this.steps = steps;\n    this.stepAtPosition = stepAtPosition;\n  }\n\n  static parse(text: string): StepTimingFunction|null {\n    let match = text.match(/^steps\\((\\d+), (start|middle)\\)$/);\n    if (match) {\n      return new StepTimingFunction(parseInt(match[1], 10), match[2]);\n    }\n    match = text.match(/^steps\\((\\d+)\\)$/);\n    if (match) {\n      return new StepTimingFunction(parseInt(match[1], 10), 'end');\n    }\n    return null;\n  }\n}\n\nexport class AnimationGroupRevealer implements Common.Revealer.Revealer<SDK.AnimationModel.AnimationGroup> {\n  async reveal(animationGroup: SDK.AnimationModel.AnimationGroup): Promise<void> {\n    await AnimationTimeline.instance().revealAnimationGroup(animationGroup);\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2015 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: hidden;\n\n  --timeline-controls-width: 150px;\n}\n\n.toolbar-view-container {\n  min-height: fit-content;\n}\n\n.animation-node-row {\n  width: 100%;\n  display: flex;\n  border-bottom: 1px dashed var(--sys-color-divider);\n}\n\n.animation-node-description {\n  padding-left: 8px;\n  overflow: hidden;\n  position: relative;\n  background-color: var(--sys-color-cdt-base-container);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: flex-start;\n  white-space: nowrap;\n  flex: 0 0 var(--timeline-controls-width);\n  z-index: 1;\n}\n\n.animation-node-description > * {\n  flex: 0 0 auto;\n}\n\n.animation-timeline-row {\n  height: 32px;\n  position: relative;\n}\n\npath.animation-keyframe {\n  /* stylelint-disable-next-line declaration-property-value-no-unknown */\n  fill-opacity: 20%;\n}\n\n.animation-node-selected path.animation-keyframe,\nsvg.animation-ui g:first-child:hover path.animation-keyframe {\n  /* stylelint-disable-next-line declaration-property-value-no-unknown */\n  fill-opacity: 40%;\n}\n\nline.animation-line {\n  stroke-width: 2px;\n  stroke-linecap: round;\n  fill: none;\n}\n\nline.animation-delay-line {\n  stroke-width: 2px;\n  stroke-dasharray: 6, 4;\n}\n\nline.animation-delay-line.animation-fill {\n  stroke-dasharray: none;\n}\n\ncircle.animation-keyframe-point {\n  fill: var(--sys-color-cdt-base-container);\n}\n\ncircle.animation-endpoint,\ncircle.animation-keyframe-point {\n  stroke-width: 2px;\n  transition: transform 100ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(1);\n  transform-box: fill-box;\n  transform-origin: 50% 50%;\n}\n\ncircle.animation-endpoint:active,\ncircle.animation-keyframe-point:active {\n  transform: scale(1);\n}\n\n.animation-ui circle.animation-endpoint:hover,\n.animation-ui circle.animation-keyframe-point:hover {\n  transform: scale(1.2);\n}\n\n.animation-name {\n  position: absolute;\n  top: 8px;\n  color: var(--sys-color-on-surface);\n  text-align: center;\n  margin-left: -8px;\n  white-space: nowrap;\n}\n\n.animation-timeline-toolbar-container {\n  display: flex;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n  flex: 0 0 auto;\n}\n\n.animation-timeline-header {\n  height: 28px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  flex-shrink: 0;\n  display: flex;\n}\n\n.animation-timeline-header::after {\n  content: '';\n  height: calc(100% - 48px - 28px);\n  position: absolute;\n  width: var(--timeline-controls-width);\n  left: 0;\n  margin-top: 28px;\n  background-color: var(--sys-color-cdt-base-container);\n  z-index: 0;\n  border-right: 1px solid var(--sys-color-divider);\n}\n\n.animation-controls {\n  flex: 0 0 var(--timeline-controls-width);\n  position: relative;\n  display: flex;\n  justify-content: flex-end;\n  padding-right: 8px;\n}\n\n.animation-timeline-current-time {\n  flex: 0 0 auto;\n  line-height: 28px;\n  margin-right: 5px;\n}\n\n.animation-grid-header {\n  flex: 1 0 auto;\n  z-index: 2;\n}\n\n.animation-grid-header.scrubber-enabled {\n  cursor: pointer;\n}\n\n.animation-timeline-buffer {\n  height: 48px;\n  flex: 0 0 auto;\n  border-bottom: 1px solid var(--sys-color-divider);\n  display: flex;\n  padding: 0 2px;\n}\n\n.animation-timeline-buffer-hint {\n  display: none;\n}\n\n.animation-time-overlay {\n  background-color: var(--sys-color-on-surface);\n  opacity: 5%;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  z-index: -1;\n}\n\n.animation-timeline-end > .animation-time-overlay {\n  visibility: hidden;\n}\n\n.animation-scrubber {\n  opacity: 100%;\n  position: absolute;\n  left: 10px;\n  height: 100%;\n  width: 100%;\n  top: 28px;\n  border-left: 1px solid var(--sys-color-error);\n  z-index: 2;\n}\n\n.animation-scrubber-line {\n  width: 11px;\n  background: linear-gradient(\n    to right,\n    transparent 5px,\n    var(--sys-color-error) 5px,\n    var(--sys-color-error) 6px,\n    transparent 6px\n  );\n  position: absolute;\n  top: -28px;\n  height: 28px;\n  left: -6px;\n  padding: 0 5px;\n  z-index: 3;\n}\n\n.animation-scrubber-head {\n  width: 7px;\n  height: 7px;\n  transform: rotate(45deg);\n  background: var(--sys-color-error);\n  position: absolute;\n  left: 2px;\n  top: 1px;\n  z-index: 4;\n}\n\n.grid-overflow-wrapper {\n  position: absolute;\n  left: calc(var(--timeline-controls-width) - 10px);\n  top: 76px;\n  z-index: 1;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n}\n\nsvg.animation-timeline-grid {\n  position: absolute;\n  inset: 0;\n  width: 100%;\n  height: 100%;\n}\n\nrect.animation-timeline-grid-line {\n  fill: var(--sys-color-divider);\n}\n\n.animation-timeline-row > svg.animation-ui {\n  position: absolute;\n}\n\n.animation-node-timeline {\n  flex-grow: 1;\n}\n\n.animation-node-description > div {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  max-height: 100%;\n}\n\n.animation-node-removed {\n  filter: saturate(0);\n  cursor: not-allowed;\n}\n\n.animation-node-removed-overlay {\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n  cursor: not-allowed;\n}\n\nsvg.animation-ui g:first-child {\n  opacity: 100%;\n}\n\nsvg.animation-ui circle:focus-visible,\nsvg.animation-ui path:focus-visible {\n  outline: 2px solid -webkit-focus-ring-color;\n}\n\n.animation-tail-iterations {\n  opacity: 50%;\n}\n\n.animation-keyframe-step line {\n  stroke-width: 2;\n  stroke-opacity: 30%;\n}\n\ntext.animation-timeline-grid-label {\n  font-size: 10px;\n  fill: var(--sys-color-token-subtle);\n  text-anchor: middle;\n}\n\n.animation-timeline-rows,\n.animation-timeline-rows-hint,\n.animation-timeline-buffer-hint {\n  flex-grow: 1;\n  overflow: hidden auto;\n  z-index: 1;\n}\n\n.animation-timeline-rows-hint {\n  display: none;\n}\n\n.animation-timeline-buffer:not(:empty) ~ .animation-timeline-rows:empty {\n  flex-grow: 0;\n}\n\n.animation-timeline-rows:empty {\n  display: none;\n}\n\n.animation-timeline-buffer:not(:empty)\n  ~ .animation-timeline-rows:empty\n  ~ .animation-timeline-buffer-hint:not(:empty)\n  ~ .animation-timeline-rows-hint,\n.animation-timeline-buffer:empty ~ .animation-timeline-buffer-hint {\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: var(--timeline-controls-width);\n  padding: 10px;\n}\n\n.animation-controls-toolbar {\n  flex: 0 0 auto;\n}\n\n.animation-node-row.animation-node-selected {\n  background-color: var(--sys-color-state-ripple-primary);\n}\n\n.animation-node-selected > .animation-node-description {\n  background-color: var(--sys-color-tonal-container);\n}\n\n.animation-buffer-preview {\n  height: 40px;\n  margin: 4px 2px;\n  background-color: var(--sys-color-neutral-container);\n  border: 1px solid transparent;\n  border-radius: 2px;\n  flex: 1 1;\n  padding: 4px;\n  max-width: 100px;\n  animation: newGroupAnim 200ms;\n  position: relative;\n}\n\n.animation-buffer-preview.no-animation {\n  animation: none;\n}\n\n.animation-buffer-preview .preview-icon {\n  position: absolute;\n  width: 14px;\n  height: 14px;\n  right: 1px;\n  bottom: 2px;\n  opacity: 60%;\n}\n\n.animation-buffer-preview-animation {\n  width: 100%;\n  height: 100%;\n  border-radius: 2px 0 0 2px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: var(--sys-color-tonal-container);\n  opacity: 0%;\n  border-right: 1px solid var(--sys-color-divider);\n}\n\n.animation-buffer-preview:focus-visible {\n  outline: -webkit-focus-ring-color auto 5px;\n}\n\n.animation-buffer-preview.selected .preview-icon {\n  opacity: 100%;\n}\n\n.animation-buffer-preview:not(.selected):focus-visible,\n.animation-buffer-preview:not(.selected):hover {\n  background-color: var(--sys-color-surface-variant);\n\n  & .preview-icon {\n    opacity: 80%;\n  }\n}\n\n.animation-buffer-preview.selected {\n  background-color: var(--sys-color-tonal-container);\n}\n\n.animation-paused {\n  align-items: center;\n  justify-content: center;\n  display: none;\n}\n\n.animation-paused::before,\n.animation-paused::after {\n  content: '';\n  background: var(--sys-color-cdt-base-container);\n  width: 7px;\n  height: 20px;\n  border-radius: 2px;\n  margin: 2px;\n  border: 1px solid var(--sys-color-divider);\n}\n\n.animation-buffer-preview.paused .animation-paused {\n  display: flex;\n}\n\n.animation-buffer-preview > svg > line {\n  stroke-width: 1px;\n}\n\n.animation-buffer-preview.selected > svg > line {\n  stroke: var(\n    --sys-color-on-tonal-container\n  ) !important; /* stylelint-disable-line declaration-no-important */\n}\n\n@keyframes newGroupAnim {\n  from {\n    clip-path: polygon(0% 0%, 0% 100%, 50% 100%, 50% 0%);\n  }\n\n  to {\n    clip-path: polygon(0% 0%, 0% 100%, 100% 100%, 100% 0%);\n  }\n}\n\n.animation-playback-rate-control {\n  margin: 4px 0 4px 2px;\n  display: flex;\n  width: 120px;\n}\n\n.animation-playback-rate-button {\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--sys-color-tonal-outline);\n  border-right-width: 0;\n  color: var(--sys-color-on-surface);\n  display: inline-block;\n  margin-right: -1px;\n  padding: 1px 4px;\n  background-color: transparent;\n  flex: 1 0 auto;\n  text-align: center;\n}\n\n.animation-playback-rate-button:first-child {\n  border-radius: 4px 0 0 4px;\n}\n\n.animation-playback-rate-button:last-child {\n  border-radius: 0 4px 4px 0;\n  border-right-width: 1px;\n}\n\n.animation-playback-rate-button.selected {\n  color: var(--sys-color-on-tonal-container);\n  background-color: var(--sys-color-tonal-container);\n  border-color: var(--sys-color-tonal-container);\n  z-index: 1;\n}\n\n.animation-playback-rate-button.selected:focus-visible {\n  color: var(--sys-color-on-surface);\n}\n\n.animation-playback-rate-button:focus-visible {\n  outline: 2px solid var(--sys-color-primary);\n  outline-offset: 2px;\n  z-index: 9999;\n}\n\n.animation-playback-rate-button:not(.selected, [disabled]):hover {\n  background: var(--sys-color-state-hover-on-subtle);\n}\n\n.animation-playback-rate-button[disabled] {\n  background: unset;\n  border-color: var(--sys-color-state-disabled);\n  color: var(--sys-color-state-disabled);\n}\n\n.animation-remove-button {\n  position: absolute;\n  top: -3px;\n  right: -3px;\n  background: var(--sys-color-token-subtle);\n  border-radius: 12px;\n  border: 0;\n  height: 16px;\n  width: 16px;\n  z-index: 100;\n  display: none;\n  padding: 0;\n\n  & > devtools-icon {\n    height: 16px;\n    width: 16px;\n    color: var(--sys-color-cdt-base-container);\n  }\n\n  &:hover {\n    background-color: var(--sys-color-on-surface);\n  }\n}\n\n.animation-group-preview-ui {\n  position: relative;\n}\n\n.animation-group-preview-ui:hover .animation-remove-button {\n  display: flex;\n}\n\n.timeline-controls-resizer {\n  position: absolute;\n  width: 6px;\n  height: 100%;\n  left: var(--timeline-controls-width);\n  top: 104px;\n  z-index: 3;\n  /* We put this a bit to the left of the line to allow dragging\n  the delay point of the keyframes */\n  margin-left: -4px;\n}\n\n@media (forced-colors: active) {\n  .animation-playback-rate-button.selected,\n  .animation-playback-rate-button.selected:first-child,\n  .animation-playback-rate-button.selected:first-child:focus-visible,\n  .animation-playback-rate-button:focus-visible {\n    forced-color-adjust: none;\n    color: HighlightText;\n    background-color: Highlight;\n  }\n\n  .animation-node-description:focus-visible {\n    background-color: var(--sys-color-cdt-base-container);\n    forced-color-adjust: none;\n  }\n\n  .monospace {\n    forced-color-adjust: auto;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./animationTimeline.css')} */`;"],
  "mappings": "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",
  "names": ["UI", "Lit", "VisualLogging", "Common", "i18n", "Platform", "UI", "VisualLogging", "toolbar", "preview", "group", "UIStrings", "str_", "i18nString", "timeline", "parentElement", "svg", "render", "html", "classMap", "Lit"]
}
