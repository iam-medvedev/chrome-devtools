{"version":3,"file":"ThrottlingManager.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/mobile_throttling/ThrottlingManager.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {createTarget, describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {spyCall} from '../../testing/ExpectStubCall.js';\nimport {describeWithMockConnection, setMockConnectionResponseHandler} from '../../testing/MockConnection.js';\n\nimport * as MobileThrottling from './mobile_throttling.js';\n\ndescribeWithEnvironment('ThrottlingManager', () => {\n  describe('OfflineToolbarCheckbox', () => {\n    it('has initial checked state which depends on throttling setting', () => {\n      SDK.NetworkManager.MultitargetNetworkManager.instance({forceNew: true});\n      const throttlingManager = MobileThrottling.ThrottlingManager.ThrottlingManager.instance({forceNew: true});\n\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(\n          SDK.NetworkManager.OfflineConditions);\n      let checkbox = throttlingManager.createOfflineToolbarCheckbox();\n      assert.isTrue(checkbox.checked());\n\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.Slow4GConditions);\n      checkbox = throttlingManager.createOfflineToolbarCheckbox();\n      assert.isFalse(checkbox.checked());\n    });\n\n    it('listens to changes in throttling setting', () => {\n      SDK.NetworkManager.MultitargetNetworkManager.instance({forceNew: true});\n      const throttlingManager = MobileThrottling.ThrottlingManager.ThrottlingManager.instance({forceNew: true});\n      const checkbox = throttlingManager.createOfflineToolbarCheckbox();\n      assert.isFalse(checkbox.checked());\n\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(\n          SDK.NetworkManager.OfflineConditions);\n      assert.isTrue(checkbox.checked());\n\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(\n          SDK.NetworkManager.NoThrottlingConditions);\n      assert.isFalse(checkbox.checked());\n    });\n\n    it('updates setting when checkbox is clicked on', () => {\n      const multiTargetNetworkManager = SDK.NetworkManager.MultitargetNetworkManager.instance({forceNew: true});\n      const throttlingManager = MobileThrottling.ThrottlingManager.ThrottlingManager.instance({forceNew: true});\n\n      multiTargetNetworkManager.setNetworkConditions(SDK.NetworkManager.OfflineConditions);\n      const checkbox = throttlingManager.createOfflineToolbarCheckbox();\n      assert.isTrue(checkbox.checked());\n\n      checkbox.element.click();\n      assert.isFalse(checkbox.checked());\n      assert.strictEqual(SDK.NetworkManager.NoThrottlingConditions, multiTargetNetworkManager.networkConditions());\n\n      multiTargetNetworkManager.setNetworkConditions(SDK.NetworkManager.Slow3GConditions);\n      assert.isFalse(checkbox.checked());\n\n      checkbox.element.click();\n      assert.isTrue(checkbox.checked());\n      assert.strictEqual(SDK.NetworkManager.OfflineConditions, multiTargetNetworkManager.networkConditions());\n\n      checkbox.element.click();\n      assert.isFalse(checkbox.checked());\n      assert.strictEqual(SDK.NetworkManager.Slow3GConditions, multiTargetNetworkManager.networkConditions());\n    });\n  });\n  describe('CPU throttling', () => {\n    it('listens to changes in cpu throttling setting', () => {\n      SDK.NetworkManager.MultitargetNetworkManager.instance({forceNew: true});\n      const cpuThrottlingPresets = MobileThrottling.ThrottlingPresets.ThrottlingPresets.cpuThrottlingPresets;\n      const throttlingManager = MobileThrottling.ThrottlingManager.ThrottlingManager.instance({forceNew: true});\n      const selector = throttlingManager.createCPUThrottlingSelector().control;\n      assert.strictEqual(cpuThrottlingPresets[selector.selectedIndex()], SDK.CPUThrottlingManager.NoThrottlingOption);\n\n      SDK.CPUThrottlingManager.CPUThrottlingManager.instance().setCPUThrottlingOption(\n          SDK.CPUThrottlingManager.ExtraSlowThrottlingOption);\n      assert.strictEqual(\n          cpuThrottlingPresets[selector.selectedIndex()], SDK.CPUThrottlingManager.ExtraSlowThrottlingOption);\n\n      SDK.CPUThrottlingManager.CPUThrottlingManager.instance().setCPUThrottlingOption(\n          SDK.CPUThrottlingManager.NoThrottlingOption);\n      assert.strictEqual(cpuThrottlingPresets[selector.selectedIndex()], SDK.CPUThrottlingManager.NoThrottlingOption);\n    });\n  });\n});\n\ndescribeWithMockConnection('ThrottlingManager', () => {\n  describe('DataSaverEmulation', () => {\n    it('creates a select element which sets the data saver emulation mode', async () => {\n      setMockConnectionResponseHandler('Emulation.setDataSaverOverride', () => ({}));\n      const emulationModel = createTarget().model(SDK.EmulationModel.EmulationModel);\n      assert.exists(emulationModel);\n      assert.lengthOf(SDK.TargetManager.TargetManager.instance().models(SDK.EmulationModel.EmulationModel), 1);\n      assert.strictEqual(\n          SDK.TargetManager.TargetManager.instance().models(SDK.EmulationModel.EmulationModel)[0], emulationModel);\n      const select = MobileThrottling.ThrottlingManager.ThrottlingManager.instance({forceNew: true})\n                         .createSaveDataOverrideSelector();\n      const options = select.options();\n      assert.deepEqual(\n          options.map(option => option.textContent),\n          ['\\'Save-Data\\': default', '\\'Save-Data\\': on', '\\'Save-Data\\': off']);\n\n      let emulationModelSpy = spyCall(emulationModel, 'setDataSaverOverride');\n      select.select(options[0]);\n      select.element.dispatchEvent(new Event('change'));\n      assert.strictEqual((await emulationModelSpy).args[0], SDK.EmulationModel.DataSaverOverride.UNSET);\n\n      emulationModelSpy = spyCall(emulationModel, 'setDataSaverOverride');\n      select.select(options[1]);\n      select.element.dispatchEvent(new Event('change'));\n      assert.strictEqual((await emulationModelSpy).args[0], SDK.EmulationModel.DataSaverOverride.ENABLED);\n\n      emulationModelSpy = spyCall(emulationModel, 'setDataSaverOverride');\n      select.select(options[2]);\n      select.element.dispatchEvent(new Event('change'));\n      assert.strictEqual((await emulationModelSpy).args[0], SDK.EmulationModel.DataSaverOverride.DISABLED);\n    });\n  });\n});\n"]}