{"version":3,"file":"ThrottlingSettingsTab.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/mobile_throttling/ThrottlingSettingsTab.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {dispatchClickEvent, raf, renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as MobileThrottling from './mobile_throttling.js';\n\nconst {ThrottlingSettingsTab} = MobileThrottling.ThrottlingSettingsTab;\n\nfunction makeFakeNetworkConditions(index: number): SDK.NetworkManager.Conditions {\n  return {\n    key: `USER_CUSTOM_SETTING_${index + 1}`,\n    title: () => '',\n    download: -1,\n    upload: -1,\n    latency: 0,\n    packetLoss: 0,\n    packetReordering: false\n  };\n}\n\ndescribeWithEnvironment('ThrottlingSettingsTab', () => {\n  it('can add custom network conditions and sets the key correctly', async () => {\n    const customConditionsSetting = SDK.NetworkManager.customUserNetworkConditionsSetting();\n    assert.lengthOf(customConditionsSetting.get(), 0);\n\n    const addNewItemStub = sinon.stub(UI.ListWidget.ListWidget.prototype, 'addNewItem');\n    const widget = new ThrottlingSettingsTab();\n    renderElementIntoDOM(widget);\n    await raf();\n\n    const addButton = widget.contentElement.querySelector('.add-conditions-button');\n    assert.isOk(addButton);\n    dispatchClickEvent(addButton);\n\n    sinon.assert.calledOnce(addNewItemStub);\n    const [indexOfNewItem, newConditions] = addNewItemStub.getCall(0).args as [number, SDK.NetworkManager.Conditions];\n    assert.strictEqual(indexOfNewItem, 0);\n    assert.strictEqual(newConditions.key, 'USER_CUSTOM_SETTING_1');\n  });\n\n  it('uses the right key when custom conditions already exist', async () => {\n    const customConditionsSetting = SDK.NetworkManager.customUserNetworkConditionsSetting();\n    customConditionsSetting.set([\n      makeFakeNetworkConditions(0),\n      // purposefully add a larger key than the index\n      makeFakeNetworkConditions(4),\n    ]);\n\n    const addNewItemStub = sinon.stub(UI.ListWidget.ListWidget.prototype, 'addNewItem');\n    const widget = new ThrottlingSettingsTab();\n    renderElementIntoDOM(widget);\n    await raf();\n\n    const addButton = widget.contentElement.querySelector('.add-conditions-button');\n    assert.isOk(addButton);\n    dispatchClickEvent(addButton);\n\n    sinon.assert.calledOnce(addNewItemStub);\n    const [indexOfNewItem, newConditions] = addNewItemStub.getCall(0).args as [number, SDK.NetworkManager.Conditions];\n    assert.strictEqual(indexOfNewItem, 2);\n    assert.strictEqual(newConditions.key, 'USER_CUSTOM_SETTING_6');\n  });\n\n  it('still increments the key even if an old condition is deleted', async () => {\n    const customConditionsSetting = SDK.NetworkManager.customUserNetworkConditionsSetting();\n    const fakeConditions1 = makeFakeNetworkConditions(0);\n    const fakeConditions2 = makeFakeNetworkConditions(1);\n    customConditionsSetting.set([fakeConditions1, fakeConditions2]);\n\n    const addNewItemStub = sinon.stub(UI.ListWidget.ListWidget.prototype, 'addNewItem');\n    const widget = new ThrottlingSettingsTab();\n    renderElementIntoDOM(widget);\n    await raf();\n\n    // Before we add a new one, delete an old one.\n    customConditionsSetting.set([fakeConditions1]);\n\n    const addButton = widget.contentElement.querySelector('.add-conditions-button');\n    assert.isOk(addButton);\n    dispatchClickEvent(addButton);\n\n    sinon.assert.calledOnce(addNewItemStub);\n    const [indexOfNewItem, newConditions] = addNewItemStub.getCall(0).args as [number, SDK.NetworkManager.Conditions];\n    assert.strictEqual(indexOfNewItem, 1);\n    // The number used in the key is still 3, because it never decrements even\n    // when settings are deleted.\n    assert.strictEqual(newConditions.key, 'USER_CUSTOM_SETTING_3');\n  });\n\n  it('can handle double digit indexes', async () => {\n    const customConditionsSetting = SDK.NetworkManager.customUserNetworkConditionsSetting();\n    const fakeConditions1 = makeFakeNetworkConditions(0);\n    const fakeConditions2 = makeFakeNetworkConditions(9);\n    customConditionsSetting.set([fakeConditions1, fakeConditions2]);\n\n    const addNewItemStub = sinon.stub(UI.ListWidget.ListWidget.prototype, 'addNewItem');\n    const widget = new ThrottlingSettingsTab();\n    renderElementIntoDOM(widget);\n    await raf();\n\n    const addButton = widget.contentElement.querySelector('.add-conditions-button');\n    assert.isOk(addButton);\n    dispatchClickEvent(addButton);\n\n    sinon.assert.calledOnce(addNewItemStub);\n    const [indexOfNewItem, newConditions] = addNewItemStub.getCall(0).args as [number, SDK.NetworkManager.Conditions];\n    assert.strictEqual(indexOfNewItem, 2);\n    assert.strictEqual(newConditions.key, 'USER_CUSTOM_SETTING_11');\n  });\n});\n"]}