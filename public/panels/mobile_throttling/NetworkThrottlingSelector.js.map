{"version":3,"file":"NetworkThrottlingSelector.js","sourceRoot":"","sources":["../../../../../../front_end/panels/mobile_throttling/NetworkThrottlingSelector.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,QAAQ,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,KAAK,MAAM,MAAM,+BAA+B,CAAC;AACxD,OAAO,KAAK,GAAG,MAAM,qBAAqB,CAAC;AAC3C,OAAO,KAAK,aAAa,MAAM,2CAA2C,CAAC;AAE3E,OAAO,EAAC,iBAAiB,EAAC,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAwC,iBAAiB,EAAC,MAAM,wBAAwB,CAAC;AAEhG,MAAM,EAAC,MAAM,EAAE,IAAI,EAAE,UAAU,EAAC,GAAG,GAAG,CAAC;AAEvC,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,QAAQ,EAAE,UAAU;IACpB;;OAEG;IACH,OAAO,EAAE,SAAS;IAClB;;OAEG;IACH,MAAM,EAAE,QAAQ;IAChB;;;;OAIG;IACH,EAAE,EAAE,cAAc;IAClB;;;OAGG;IACH,IAAI,EAAE,WAAW;IACjB;;OAEG;IACH,GAAG,EAAE,MAAM;IACX;;;;OAIG;IACH,qBAAqB,EAAE,qBAAqB;CACpC,CAAC;AACX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,uDAAuD,EAAE,SAAS,CAAC,CAAC;AAC7G,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AActE,MAAM,CAAC,MAAM,YAAY,GAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE;IAClE,gIAAgI;IAChI,MAAM,KAAK,GAAG,CAAC,UAAyC,EAAU,EAAE,CAChE,OAAO,UAAU,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC;IACnF,MAAM,KAAK,GAAG,CAAC,KAAuC,EAAE,SAAwC,EAAU,EAAE,CACxG,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC5G,KAAK,EAAE,IAAI;KACZ,CAAC,EAAE,CAAC;IACT,MAAM,UAAU,GAAG,IAAI,OAAO,EAAoD,CAAC;IACnF,IAAI,kBAAkB,GAAG,KAAK,CAAC,kBAAkB,CAAC;IAClD,SAAS,QAAQ,CAAC,KAAY;QAC5B,MAAM,OAAO,GAAI,KAAK,CAAC,MAAmC,CAAC;QAC3D,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO;QACT,CAAC;QACD,MAAM,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO;QACT,CAAC;QACD,IAAI,MAAM,KAAK,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;YAC3D,KAAK,CAAC,qBAAqB,EAAE,CAAC;YAC9B,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACpB,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAC5C,CAAC;aAAM,CAAC;YACN,MAAM,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC1C,IAAI,UAAU,EAAE,CAAC;gBACf,kBAAkB,GAAG,UAAU,CAAC;gBAChC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC;IACH,CAAC;IACD,MAAM;IACF,mBAAmB;IACrB,IAAI,CAAA;mBACW,KAAK,CAAC,KAAK;cAChB,aAAa,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;gBACxE,QAAQ;YACZ,KAAK,CAAC,gBAAgB,CAAC,GAAG,CAC5B,KAAK,CAAC,EAAE,CACR,IAAI,CAAA;oBACM,KAAK,CAAC,KAAK;cACjB,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAA;gBAC/B,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,IAAI,UAAU,CAAC,GAAG,CAAC,MAA2B,EAAE,SAAS,CAAC,CAAC;0BAChF,GAAG,CAAC,cAAc,CAAC,sBAAsB,CAAC,SAAS,EAAE,kBAAkB,CAAC;sBAC5E,KAAK,CAAC,SAAS,CAAC;2BACX,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,EAAC,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,EAAC,CAAC;sBACxE,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC;kBAC3B,SAAS,KAAK,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC3C,UAAU,CAAC,SAAS,CAAC,qBAAqB,EAAE,EAAC,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,EAAC,CAAC,CAAA,CAAC;QACrE,KAAK,CAAC,SAAS,CAAC;sBACZ,CAAC;oBACH,CAAC;0BACK,KAAK,CAAC,qBAAqB,CAAC,KAAK;YAC/C,KAAK,CAAC,qBAAqB,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAA;gBACnD,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,IAAI,UAAU,CAAC,GAAG,CAAC,MAA2B,EAAE,SAAS,CAAC,CAAC;0BAChF,GAAG,CAAC,cAAc,CAAC,sBAAsB,CAAC,SAAS,EAAE,kBAAkB,CAAC;sBAC5E,KAAK,CAAC,SAAS,CAAC;2BACX,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,EAAC,GAAG,EAAE,KAAK,CAAC,qBAAqB,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,EAAC,CAAC;sBAC9F,aAAa,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;kBAC7E,SAAS,KAAK,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC3C,UAAU,CAAC,SAAS,CAAC,qBAAqB,EAAE,EAAC,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,EAAC,CAAC,CAAA,CAAC;QACrE,KAAK,CAAC,SAAS,CAAC;oBACd,CAAC;;oBAED,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;yBACpB,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,GAAG,EAAE,KAAK,CAAC,qBAAqB,CAAC,KAAK,EAAC,CAAC;oBACzE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;gBACpD,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;;;gBAGzB,EAAG,kBAAkB;IAC/B,MAAM,CAAC,CAAC;AACd,CAAC,CAAC;AAUF,MAAM,OAAO,uBAAwB,SAAQ,MAAM,CAAC,aAAa,CAAC,aAAyB;IACzF,sBAAsB,GAAuC,IAAI,CAAC;IACzD,QAAQ,CAAc;IACtB,aAAa,CAAS;IAC/B,kBAAkB,CAAgC;IACzC,MAAM,CAAS;IACf,KAAK,CAAe;IAE7B,MAAM,CAAC,yBAAyB,CAAC,OAAoB,EAAE,KAAa;QAClE,iBAAiB,CAAC,QAAQ,EAAE,CAAC,CAAE,iFAAiF;QAChH,MAAM,MAAM,GAAG,IAAI,uBAAuB,CACtC,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,cAAc,CAAC,iCAAiC,EAAE,CAAC,IAAI,EAC3E,GAAG,CAAC,cAAc,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAC;QACjF,MAAM,CAAC,gBAAgB,sDAEnB,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC,oBAAoB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QACjG,GAAG,CAAC,cAAc,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC,gBAAgB,mGACI,GAAG,EAAE;YAC3E,MAAM,CAAC,iBAAiB,GAAG,GAAG,CAAC,cAAc,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,CAAC;QACzG,CAAC,CAAC,CAAC;QACP,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,YACI,OAAoB,EAAE,KAAa,EAAE,YAAoB,EAAE,iBAAgD,EAC3G,IAAI,GAAG,YAAY;QACrB,KAAK,EAAE,CAAC;QACR,GAAG,CAAC,cAAc,CAAC,kCAAkC,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QACrG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC5C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,IAAI,qBAAqB,CAAC,qBAAyD;QACjF,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC;QACpD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,IAAI,iBAAiB,CAAC,iBAAgD;QACpE,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC5C,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,MAAM,8BAA8B,GAAG,GAAG,CAAC,cAAc,CAAC,kCAAkC,EAAE,CAAC;QAC/F,MAAM,uBAAuB,GAAG,8BAA8B,CAAC,GAAG,EAAE,CAAC;QACrE,MAAM,qBAAqB,GAAG,GAAS,EAAE;YACvC,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,kCAAkC,EAAE,CAAC,CAAC;QACvF,CAAC,CAAC;QAEF,MAAM,QAAQ,GAAG,CAAC,UAAyC,EAAQ,EAAE;YACnE,IAAI,CAAC,wBAAwB,sDAA4B,UAAU,CAAC,CAAC;YACrE,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;QACxF,CAAC,CAAC;QAEF,MAAM,gBAAgB,GAAG;YACvB,EAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,sBAAsB,CAAC,EAAC;YAC3F,EAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,EAAC;SAChF,CAAC;QACF,MAAM,qBAAqB,GAAG,EAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,uBAAuB,EAAC,CAAC;QACpG,MAAM,SAAS,GAAc;YAC3B,qBAAqB,EAAE,IAAI,CAAC,sBAAsB;YAClD,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;YAC3C,YAAY,EAAE,IAAI,CAAC,aAAa;YAChC,KAAK,EAAE,IAAI,CAAC,MAAM;YAClB,QAAQ;YACR,qBAAqB;YACrB,gBAAgB;YAChB,qBAAqB;SACtB,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;CACF","sourcesContent":["// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Badges from '../../models/badges/badges.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ThrottlingManager} from './ThrottlingManager.js';\nimport {type NetworkThrottlingConditionsGroup, ThrottlingPresets} from './ThrottlingPresets.js';\n\nconst {render, html, Directives} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text to indicate something is not enabled\n   */\n  disabled: 'Disabled',\n  /**\n   * @description Title for a group of configuration options\n   */\n  presets: 'Presets',\n  /**\n   * @description Text in Network Throttling Selector of the Network panel\n   */\n  custom: 'Custom',\n  /**\n   *@description Text with two placeholders separated by a colon\n   *@example {Node removed} PH1\n   *@example {div#id1} PH2\n   */\n  sS: '{PH1}: {PH2}',\n  /**\n   *@description Accessibility label for custom add network throttling option\n   *@example {Custom} PH1\n   */\n  addS: 'Add {PH1}',\n  /**\n   *@description Text in Throttling Manager of the Network panel\n   */\n  add: 'Add…',\n  /**\n   * @description Text label for a selection box showing that a specific option is recommended for CPU or Network throttling.\n   * @example {Fast 4G} PH1\n   * @example {4x slowdown} PH1\n   */\n  recommendedThrottling: '{PH1} – recommended',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/NetworkThrottlingSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ViewInput {\n  recommendedConditions: SDK.NetworkManager.Conditions|null;\n  selectedConditions: SDK.NetworkManager.Conditions;\n  throttlingGroups: NetworkThrottlingConditionsGroup[];\n  customConditionsGroup: NetworkThrottlingConditionsGroup;\n  jslogContext: string;\n  title: string;\n  onSelect: (conditions: SDK.NetworkManager.Conditions) => void;\n  onAddCustomConditions: () => void;\n}\nexport type ViewFunction = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: ViewFunction = (input, output, target) => {\n  // The title is usually an i18nLazyString except for custom values that are stored in the local storage in the form of a string.\n  const title = (conditions: SDK.NetworkManager.Conditions): string =>\n      typeof conditions.title === 'function' ? conditions.title() : conditions.title;\n  const jslog = (group: NetworkThrottlingConditionsGroup, condition: SDK.NetworkManager.Conditions): string =>\n      `${VisualLogging.item(Platform.StringUtilities.toKebabCase(condition.i18nTitleKey || title(condition))).track({\n        click: true\n      })}`;\n  const optionsMap = new WeakMap<HTMLOptionElement, SDK.NetworkManager.Conditions>();\n  let selectedConditions = input.selectedConditions;\n  function onSelect(event: Event): void {\n    const element = (event.target as HTMLSelectElement | null);\n    if (!element) {\n      return;\n    }\n    const option = element.selectedOptions[0];\n    if (!option) {\n      return;\n    }\n    if (option === element.options[element.options.length - 1]) {\n      input.onAddCustomConditions();\n      event.consume(true);\n      element.value = title(selectedConditions);\n    } else {\n      const conditions = optionsMap.get(option);\n      if (conditions) {\n        selectedConditions = conditions;\n        input.onSelect(conditions);\n      }\n    }\n  }\n  render(\n      // clang-format off\n    html`<select\n      aria-label=${input.title}\n      jslog=${VisualLogging.dropDown().track({change: true}).context(input.jslogContext)}\n      @change=${onSelect}>\n          ${input.throttlingGroups.map(\n          group =>\n          html`<optgroup\n            label=${group.title}>\n            ${group.items.map(condition => html`<option\n              ${Directives.ref(option => option && optionsMap.set(option as HTMLOptionElement, condition))}\n              ?selected=${SDK.NetworkManager.networkConditionsEqual(condition, selectedConditions)}\n              value=${title(condition)}\n              aria-label=${i18nString(UIStrings.sS, {PH1: group.title, PH2: title(condition)})}\n              jslog=${jslog(group, condition)}>\n                ${condition === input.recommendedConditions ?\n                  i18nString(UIStrings.recommendedThrottling, {PH1: title(condition)}):\n                  title(condition)}\n            </option>`)}\n        </optgroup>`)}\n        <optgroup label=${input.customConditionsGroup.title}>\n          ${input.customConditionsGroup.items.map(condition => html`<option\n              ${Directives.ref(option => option && optionsMap.set(option as HTMLOptionElement, condition))}\n              ?selected=${SDK.NetworkManager.networkConditionsEqual(condition, selectedConditions)}\n              value=${title(condition)}\n              aria-label=${i18nString(UIStrings.sS, {PH1: input.customConditionsGroup.title, PH2: title(condition)})}\n              jslog=${VisualLogging.item('custom-network-throttling-item').track({click: true})}>\n                ${condition === input.recommendedConditions ?\n                  i18nString(UIStrings.recommendedThrottling, {PH1: title(condition)}):\n                  title(condition)}\n          </option>`)}\n          <option\n            value=${i18nString(UIStrings.add)}\n            aria-label=${i18nString(UIStrings.addS, {PH1: input.customConditionsGroup.title})}\n            jslog=${VisualLogging.action('add').track({click: true})}>\n              ${i18nString(UIStrings.add)}\n          </option>\n        </optgroup>\n      </select>`,  // clang-format on\n      target);\n};\n\nexport const enum Events {\n  CONDITIONS_CHANGED = 'conditionsChanged',\n}\n\nexport interface EventTypes {\n  [Events.CONDITIONS_CHANGED]: SDK.NetworkManager.Conditions;\n}\n\nexport class NetworkThrottlingSelect extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  #recommendedConditions: SDK.NetworkManager.Conditions|null = null;\n  readonly #element: HTMLElement;\n  readonly #jslogContext: string;\n  #currentConditions: SDK.NetworkManager.Conditions;\n  readonly #title: string;\n  readonly #view: ViewFunction;\n\n  static createForGlobalConditions(element: HTMLElement, title: string): NetworkThrottlingSelect {\n    ThrottlingManager.instance();  // Instantiate the throttling manager to connect network manager with the setting\n    const select = new NetworkThrottlingSelect(\n        element, title, SDK.NetworkManager.activeNetworkThrottlingKeySetting().name,\n        SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions());\n    select.addEventListener(\n        Events.CONDITIONS_CHANGED,\n        ev => SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(ev.data));\n    SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED, () => {\n          select.currentConditions = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n        });\n    return select;\n  }\n\n  constructor(\n      element: HTMLElement, title: string, jslogContext: string, currentConditions: SDK.NetworkManager.Conditions,\n      view = DEFAULT_VIEW) {\n    super();\n    SDK.NetworkManager.customUserNetworkConditionsSetting().addChangeListener(this.#performUpdate, this);\n    this.#element = element;\n    this.#jslogContext = jslogContext;\n    this.#currentConditions = currentConditions;\n    this.#title = title;\n    this.#view = view;\n\n    this.#performUpdate();\n  }\n\n  set recommendedConditions(recommendedConditions: SDK.NetworkManager.Conditions|null) {\n    this.#recommendedConditions = recommendedConditions;\n    this.#performUpdate();\n  }\n\n  set currentConditions(currentConditions: SDK.NetworkManager.Conditions) {\n    this.#currentConditions = currentConditions;\n    this.#performUpdate();\n  }\n\n  #performUpdate(): void {\n    const customNetworkConditionsSetting = SDK.NetworkManager.customUserNetworkConditionsSetting();\n    const customNetworkConditions = customNetworkConditionsSetting.get();\n    const onAddCustomConditions = (): void => {\n      void Common.Revealer.reveal(SDK.NetworkManager.customUserNetworkConditionsSetting());\n    };\n\n    const onSelect = (conditions: SDK.NetworkManager.Conditions): void => {\n      this.dispatchEventToListeners(Events.CONDITIONS_CHANGED, conditions);\n      Badges.UserBadges.instance().recordAction(Badges.BadgeAction.NETWORK_SPEED_THROTTLED);\n    };\n\n    const throttlingGroups = [\n      {title: i18nString(UIStrings.disabled), items: [SDK.NetworkManager.NoThrottlingConditions]},\n      {title: i18nString(UIStrings.presets), items: ThrottlingPresets.networkPresets},\n    ];\n    const customConditionsGroup = {title: i18nString(UIStrings.custom), items: customNetworkConditions};\n    const viewInput: ViewInput = {\n      recommendedConditions: this.#recommendedConditions,\n      selectedConditions: this.#currentConditions,\n      jslogContext: this.#jslogContext,\n      title: this.#title,\n      onSelect,\n      onAddCustomConditions,\n      throttlingGroups,\n      customConditionsGroup,\n    };\n    this.#view(viewInput, {}, this.#element);\n  }\n}\n"]}