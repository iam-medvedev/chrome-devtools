{"version":3,"file":"ARIAAttributesView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/accessibility/ARIAAttributesView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {createTarget, stubNoopSettings} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\nimport * as Accessibility from './accessibility.js';\n\ndescribeWithMockConnection('ARIAAttributesView', () => {\n  let target: SDK.Target.Target;\n  let domModel: SDK.DOMModel.DOMModel;\n  let node: SDK.DOMModel.DOMNode;\n  let setAttributeValueSpy: sinon.SinonSpy;\n\n  beforeEach(() => {\n    stubNoopSettings();\n    target = createTarget();\n    domModel = target.model(SDK.DOMModel.DOMModel) as SDK.DOMModel.DOMModel;\n    node = new SDK.DOMModel.DOMNode(domModel);\n    node.setAttributesPayload(['role', 'checkbox', 'aria-checked', 'true']);\n    setAttributeValueSpy = sinon.spy(node, 'setAttributeValue');\n  });\n\n  const modifyAttribute =\n      (view: Accessibility.ARIAAttributesView.ARIAAttributesPane, childIndex: number, newValue: string) => {\n        const treeOutline = view.getTreeOutlineForTesting();\n        assert.exists(treeOutline);\n        const treeElement =\n            treeOutline.rootElement().childAt(childIndex) as Accessibility.ARIAAttributesView.ARIAAttributesTreeElement;\n        assert.exists(treeElement);\n        treeElement.listItemElement.querySelector('span')?.click();\n\n        const prompt = treeElement.getPromptForTesting();\n        assert.exists(prompt);\n        const proxyElement = prompt.element();\n        (proxyElement as HTMLElement).textContent = newValue;\n\n        proxyElement.dispatchEvent(new FocusEvent('blur'));\n      };\n\n  it('can modify an ARIA attribute value', () => {\n    const view = new Accessibility.ARIAAttributesView.ARIAAttributesPane();\n    renderElementIntoDOM(view);\n    view.setNode(node);\n\n    modifyAttribute(view, 1, 'false');\n\n    sinon.assert.calledOnceWithExactly(setAttributeValueSpy, 'aria-checked', 'false');\n  });\n\n  it('can modify an ARIA role', () => {\n    const view = new Accessibility.ARIAAttributesView.ARIAAttributesPane();\n    renderElementIntoDOM(view);\n    view.setNode(node);\n\n    modifyAttribute(view, 0, 'radio');\n\n    sinon.assert.calledOnceWithExactly(setAttributeValueSpy, 'role', 'radio');\n  });\n});\n\ndescribe('ARIAAttributesTreeElement', () => {\n  it('should create a value element with the correct class and text content', () => {\n    const value = 'test value';\n    const element = Accessibility.ARIAAttributesView.ARIAAttributesTreeElement.createARIAValueElement(value);\n    assert.strictEqual(element.textContent, value);\n    assert.isTrue(element.classList.contains('monospace'));\n  });\n\n  it('should append a name element with the correct classes and text content', () => {\n    const parentPane = {} as Accessibility.ARIAAttributesView.ARIAAttributesPane;\n    const attribute = {name: 'aria-label', value: 'test'} as SDK.DOMModel.Attribute;\n    const target = {} as SDK.Target.Target;\n    const treeElement = new Accessibility.ARIAAttributesView.ARIAAttributesTreeElement(parentPane, attribute, target);\n    treeElement.onattach();\n\n    treeElement.appendNameElement('aria-label');\n\n    const nameElement = treeElement.listItemElement.querySelector('.ax-name');\n    assert.exists(nameElement);\n    assert.strictEqual(nameElement.textContent, 'aria-label');\n    assert.isTrue(nameElement.classList.contains('monospace'));\n  });\n\n  it('should append a value element with the correct text content', () => {\n    const parentPane = {} as Accessibility.ARIAAttributesView.ARIAAttributesPane;\n    const attribute = {name: 'aria-label', value: 'test'} as SDK.DOMModel.Attribute;\n    const target = {} as SDK.Target.Target;\n    const treeElement = new Accessibility.ARIAAttributesView.ARIAAttributesTreeElement(parentPane, attribute, target);\n    treeElement.onattach();\n\n    treeElement.appendAttributeValueElement('test');\n\n    const valueElement = treeElement.listItemElement.querySelector('span:not(.ax-name):not(.separator)');\n    assert.exists(valueElement);\n    assert.strictEqual(valueElement.textContent, 'test');\n  });\n});\n"]}