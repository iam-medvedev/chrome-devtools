{"version":3,"file":"ARIAAttributesView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/accessibility/ARIAAttributesView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {assertScreenshot, renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {createTarget, stubNoopSettings} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection, setMockConnectionResponseHandler} from '../../testing/MockConnection.js';\nimport {createViewFunctionStub} from '../../testing/ViewFunctionHelpers.js';\n\nimport * as Accessibility from './accessibility.js';\n\ndescribeWithMockConnection('ARIAAttributesView', () => {\n  let node: SDK.DOMModel.DOMNode;\n\n  beforeEach(() => {\n    setMockConnectionResponseHandler('Debugger.enable', () => ({}));\n    setMockConnectionResponseHandler('Storage.getStorageKeyForFrame', () => ({}));\n    stubNoopSettings();\n    const target = createTarget();\n    const domModel = target.model(SDK.DOMModel.DOMModel) as SDK.DOMModel.DOMModel;\n    node = new SDK.DOMModel.DOMNode(domModel);\n    node.setAttributesPayload(['role', 'checkbox', 'aria-checked', 'true']);\n  });\n\n  it('can modify an ARIA attribute value', async () => {\n    const viewFunction = createViewFunctionStub(Accessibility.ARIAAttributesView.ARIAAttributesPane);\n    const view = new Accessibility.ARIAAttributesView.ARIAAttributesPane(viewFunction);\n    view.setNode(node);\n\n    const input = await viewFunction.nextInput;\n    const ariaChecked = input.attributes.find(attr => attr.name === 'aria-checked');\n    assert.exists(ariaChecked);\n    const setAttributeValueSpy = sinon.spy(node, 'setAttributeValue');\n    input.onCommitEditing(ariaChecked, 'false');\n\n    sinon.assert.calledOnceWithExactly(setAttributeValueSpy, 'aria-checked', 'false');\n  });\n\n  it('can modify an ARIA role', async () => {\n    const viewFunction = createViewFunctionStub(Accessibility.ARIAAttributesView.ARIAAttributesPane);\n    const view = new Accessibility.ARIAAttributesView.ARIAAttributesPane(viewFunction);\n    view.setNode(node);\n\n    const input = await viewFunction.nextInput;\n    const role = input.attributes.find(attr => attr.name === 'role');\n    assert.exists(role);\n    const setAttributeValueSpy = sinon.spy(node, 'setAttributeValue');\n    input.onCommitEditing(role, 'radio');\n\n    sinon.assert.calledOnceWithExactly(setAttributeValueSpy, 'role', 'radio');\n  });\n\n  it('autocompletes attributes', async () => {\n    const viewFunction = createViewFunctionStub(Accessibility.ARIAAttributesView.ARIAAttributesPane);\n    const view = new Accessibility.ARIAAttributesView.ARIAAttributesPane(viewFunction);\n    view.setNode(node);\n\n    const input = await viewFunction.nextInput;\n    const role = input.attributes.find(attr => attr.name === 'role');\n    assert.exists(role);\n    const ariaChecked = input.attributes.find(attr => attr.name === 'aria-checked');\n    assert.exists(ariaChecked);\n    assert.deepEqual(await input.propertyCompletions.get(ariaChecked), ['true', 'false', 'mixed', 'undefined']);\n    assert.isTrue(await input.propertyCompletions.has(role));\n  });\n\n  it('should render attributes', async () => {\n    const container = document.createElement('div');\n    renderElementIntoDOM(container, {includeCommonStyles: true});\n    const input = {\n      onStartEditing: sinon.stub(),\n      onCommitEditing: sinon.stub(),\n      onCancelEditing: sinon.stub(),\n      attributeBeingEdited: null,\n      attributes: node.attributes(),\n      propertyCompletions: new Map(),\n    };\n    Accessibility.ARIAAttributesView.DEFAULT_VIEW(input, {}, container);\n\n    await assertScreenshot('accessibility/aria-attributes.png');\n  });\n});\n"]}