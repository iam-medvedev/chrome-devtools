{"version":3,"file":"ARIAAttributesView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/accessibility/ARIAAttributesView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport accessibilityPropertiesStyles from './accessibilityProperties.css.js';\nimport {AccessibilitySubPane} from './AccessibilitySubPane.js';\nimport {ariaMetadata} from './ARIAMetadata.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in ARIAAttributes View of the Accessibility panel\n   */\n  ariaAttributes: 'ARIA Attributes',\n  /**\n   * @description Text in ARIAAttributes View of the Accessibility panel\n   */\n  noAriaAttributes: 'No ARIA attributes',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/accessibility/ARIAAttributesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst {render, html} = Lit;\n\ninterface ViewInput {\n  propertyCompletions: Map<SDK.DOMModel.Attribute, string[]>;\n  onStartEditing: (attribute: SDK.DOMModel.Attribute) => void;\n  onCommitEditing: (attribute: SDK.DOMModel.Attribute, result: string) => void;\n  onCancelEditing: (attribute: SDK.DOMModel.Attribute) => void;\n  attributeBeingEdited: SDK.DOMModel.Attribute|null;\n  attributes: SDK.DOMModel.Attribute[];\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\nexport const DEFAULT_VIEW: View = (input, output, target) => {\n  const MAX_CONTENT_LENGTH = 10000;\n\n  const onStartEditing = (attribute: SDK.DOMModel.Attribute, e: MouseEvent): void => {\n    e.consume(true);\n    input.onStartEditing(attribute);\n  };\n\n  const propertyCompletions = (attribute: SDK.DOMModel.Attribute): Lit.LitTemplate => {\n    const values = input.propertyCompletions.get(attribute);\n    if (!values?.length) {\n      return Lit.nothing;\n    }\n\n    return html`<datalist id=completions>\n      ${values.map(value => html`<option>${value}</option>`)}\n    </datalist>`;\n  };\n\n  render(\n      // clang-format off\n      input.attributes.length === 0 ?\n         html`\n          <style>${accessibilityPropertiesStyles}</style>\n          <devtools-widget\n            .widgetConfig=${UI.Widget.widgetConfig(UI.EmptyWidget.EmptyWidget,\n                                                   {text: i18nString(UIStrings.noAriaAttributes)})}\n            class=\"gray-info-message info-message-overflow\"></devtools-widget>` :\n         html`<devtools-tree\n           hide-overflow\n           .template=${html`\n             <ul role=\"tree\">\n              ${input.attributes?.map(attribute => html`\n                <li role=\"treeitem\">\n                  <style>${accessibilityPropertiesStyles}</style>\n                  <span class=\"ax-name monospace\" @mousedown=${onStartEditing.bind(null, attribute)}>\n                    ${attribute.name}\n                  </span>\n                  <span class=\"separator\" @mousedown=${onStartEditing.bind(null, attribute)}>${':\\xA0'}</span>\n                  <devtools-prompt\n                    completions=completions\n                    class=\"monospace\"\n                    @mousedown=${onStartEditing.bind(null, attribute)}\n                    .completionTimeout=${0}\n                    ?editing=${input.attributeBeingEdited === attribute}\n                    @commit=${(e: UI.TextPrompt.TextPromptElement.CommitEvent) =>\n                      input.onCommitEditing(attribute, e.detail)}\n                    @cancel=${() => input.onCancelEditing(attribute)}>\n                      ${Platform.StringUtilities.trimMiddle(attribute.value, MAX_CONTENT_LENGTH)}\n                      ${propertyCompletions(attribute)}\n                  </devtools-prompt>\n                </li>`)}\n             </ul>\n           `}></devtools-tree>`,\n      // clang-format on\n      target);\n};\n\nexport class ARIAAttributesPane extends AccessibilitySubPane {\n  readonly #view: View;\n  #attributeBeingEdited: SDK.DOMModel.Attribute|null = null;\n\n  constructor(view = DEFAULT_VIEW) {\n    super({\n      title: i18nString(UIStrings.ariaAttributes),\n      viewId: 'aria-attributes',\n      jslog: `${VisualLogging.section('aria-attributes')}`,\n    });\n\n    this.#view = view;\n  }\n\n  override setNode(node: SDK.DOMModel.DOMNode|null): void {\n    super.setNode(node);\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    const onStartEditing = (attribute: SDK.DOMModel.Attribute): void => {\n      this.#attributeBeingEdited = attribute;\n      this.requestUpdate();\n    };\n    const onCancelEditing = (attribute: SDK.DOMModel.Attribute): void => {\n      if (attribute === this.#attributeBeingEdited) {\n        this.#attributeBeingEdited = null;\n      }\n      this.requestUpdate();\n    };\n\n    const onCommitEditing = (attribute: SDK.DOMModel.Attribute, result: string): void => {\n      // Make the changes to the attribute\n      const node = this.node();\n      if (node && attribute.value !== result) {\n        node.setAttributeValue(attribute.name, result);\n      }\n      if (attribute === this.#attributeBeingEdited) {\n        this.#attributeBeingEdited = null;\n      }\n      this.requestUpdate();\n    };\n\n    const attributes = this.node()?.attributes()?.filter(attribute => this.isARIAAttribute(attribute)) ?? [];\n    const propertyCompletions =\n        new Map(attributes.map(attribute => [attribute, ariaMetadata().valuesForProperty(attribute.name)]));\n\n    const input: ViewInput = {\n      attributeBeingEdited: this.#attributeBeingEdited,\n      attributes,\n      onStartEditing,\n      onCommitEditing,\n      onCancelEditing,\n      propertyCompletions,\n    };\n    this.#view(input, {}, this.contentElement);\n  }\n\n  private isARIAAttribute(attribute: SDK.DOMModel.Attribute): boolean {\n    return SDK.DOMModel.ARIA_ATTRIBUTES.has(attribute.name);\n  }\n}\n"]}