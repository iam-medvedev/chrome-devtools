{"version":3,"file":"LighthousePanel.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/lighthouse/LighthousePanel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget, stubNoopSettings} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\nimport type * as LighthouseModule from './lighthouse.js';\n\ndescribeWithMockConnection('LighthousePanel', () => {\n  const tests = (targetFactory: () => SDK.Target.Target) => {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    let Lighthouse: typeof LighthouseModule;\n    let target: SDK.Target.Target;\n    let resourceTreeModelNavigate: sinon.SinonStub;\n    let protocolService: LighthouseModule.LighthouseProtocolService.ProtocolService;\n    let controller: LighthouseModule.LighthouseController.LighthouseController;\n\n    const URL = 'http://example.com';\n    const LH_REPORT = {\n      lhr: {\n        finalDisplayedUrl: URL,\n        configSettings: {},\n        audits: {},\n        categories: {_: {auditRefs: [], id: ''}},\n        lighthouseVersion: '',\n        userAgent: '',\n        fetchTime: 0,\n        environment: {benchmarkIndex: 0},\n        i18n: {rendererFormattedStrings: {}},\n      },\n    } as unknown as LighthouseModule.LighthouseReporterTypes.RunnerResult;\n\n    beforeEach(async () => {\n      Lighthouse = await import('./lighthouse.js');\n      target = targetFactory();\n      sinon.stub(target.pageAgent(), 'invoke_getNavigationHistory').resolves({\n        currentIndex: 0,\n        entries: [{url: URL}],\n        getError: () => null,\n      } as unknown as Protocol.Page.GetNavigationHistoryResponse);\n\n      const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      assertNotNullOrUndefined(resourceTreeModel);\n      resourceTreeModelNavigate = sinon.stub(resourceTreeModel, 'navigate').resolves();\n      sinon.stub(resourceTreeModel, 'addEventListener')\n          .callThrough()\n          .withArgs(SDK.ResourceTreeModel.Events.Load, sinon.match.any)\n          .callsArgWithAsync(1, {resourceTreeModel, loadTime: 0})\n          .returns({} as Common.EventTarget.EventDescriptor);\n\n      protocolService = new Lighthouse.LighthouseProtocolService.ProtocolService();\n      sinon.stub(protocolService, 'attach').resolves();\n      sinon.stub(protocolService, 'detach').resolves();\n      sinon.stub(protocolService, 'collectLighthouseResults').resolves(LH_REPORT);\n\n      controller = new Lighthouse.LighthouseController.LighthouseController(protocolService);\n\n      stubNoopSettings();\n    });\n\n    // Failing due to StartView not finding settings title.\n    it.skip('[crbug.com/326214132] restores the original URL when done', async () => {\n      const instance =\n          Lighthouse.LighthousePanel.LighthousePanel.instance({forceNew: true, protocolService, controller});\n      void instance.handleCompleteRun();\n\n      await new Promise<void>(resolve => resourceTreeModelNavigate.withArgs(URL).callsFake(() => {\n        resolve();\n        return Promise.resolve();\n      }));\n    });\n\n    // Failing due to StartView not finding settings title.\n    it.skip('[crbug.com/326214132] waits for main taget to load before linkifying', async () => {\n      const instance =\n          Lighthouse.LighthousePanel.LighthousePanel.instance({forceNew: true, protocolService, controller});\n      void instance.handleCompleteRun();\n\n      await new Promise<void>(\n          resolve => sinon.stub(Lighthouse.LighthouseReportRenderer.LighthouseReportRenderer, 'linkifyNodeDetails')\n                         .callsFake((_: Element) => {\n                           resolve();\n                           return Promise.resolve();\n                         }));\n    });\n  };\n\n  describe('without tab taget', () => tests(() => createTarget()));\n  describe('with tab taget', () => tests(() => {\n                               const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n                               createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n                               return createTarget({parentTarget: tabTarget});\n                             }));\n});\n"]}