{"version":3,"file":"LighthouseController.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/lighthouse/LighthouseController.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,wBAAwB,EAAC,MAAM,iCAAiC,CAAC;AACzE,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,EAAC,YAAY,EAAE,gBAAgB,EAAC,MAAM,qCAAqC,CAAC;AACnF,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAI3E,0BAA0B,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACtD,MAAM,KAAK,GAAG,CAAC,aAAsC,EAAE,EAAE;QACvD,gEAAgE;QAChE,IAAI,UAAmC,CAAC;QACxC,IAAI,MAAyB,CAAC;QAE9B,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,gBAAgB,EAAE,CAAC;YACnB,UAAU,GAAG,MAAM,MAAM,CAAC,iBAAiB,CAAC,CAAC;YAC7C,MAAM,GAAG,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;YACvE,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,oBAAoB,CAAC,oBAAoB,CACvE,KAAK,CAAC,kBAAkB,CAAC,UAAU,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC,CAAC;YACpF,MAAM,oBAAoB,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;YACzF,wBAAwB,CAAC,oBAAoB,CAAC,CAAC;YAC/C,MAAM,sBAAsB,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;YAC/G,oBAAoB,CAAC,wBAAwB,kFAEzC,EAAwD,CAAC,CAAC;YAC9D,MAAM,sBAAsB,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1D,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE;QACf,MAAM,SAAS,GAAG,YAAY,CAAC,EAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC;QAC5D,YAAY,CAAC,EAAC,YAAY,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC;QAC9D,OAAO,YAAY,CAAC,EAAC,YAAY,EAAE,SAAS,EAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {createTarget, stubNoopSettings} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\nimport type * as LighthouseModule from './lighthouse.js';\n\ndescribeWithMockConnection('LighthouseController', () => {\n  const tests = (targetFactory: () => SDK.Target.Target) => {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    let Lighthouse: typeof LighthouseModule;\n    let target: SDK.Target.Target;\n\n    beforeEach(async () => {\n      stubNoopSettings();\n      Lighthouse = await import('./lighthouse.js');\n      target = targetFactory();\n    });\n\n    it('updates page auditability on service worker registraion', async () => {\n      const controller = new Lighthouse.LighthouseController.LighthouseController(\n          sinon.createStubInstance(Lighthouse.LighthouseProtocolService.ProtocolService));\n      const serviceWorkerManager = target.model(SDK.ServiceWorkerManager.ServiceWorkerManager);\n      assertNotNullOrUndefined(serviceWorkerManager);\n      const pageAuditabilityChange = controller.once(Lighthouse.LighthouseController.Events.PageAuditabilityChanged);\n      serviceWorkerManager.dispatchEventToListeners(\n          SDK.ServiceWorkerManager.Events.RegistrationUpdated,\n          {} as SDK.ServiceWorkerManager.ServiceWorkerRegistration);\n      await pageAuditabilityChange;\n    });\n  };\n\n  describe('without tab target', () => tests(createTarget));\n  describe('with tab target', () => tests(() => {\n                                const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n                                createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n                                return createTarget({parentTarget: tabTarget});\n                              }));\n});\n"]}