{"version":3,"file":"CoverageListView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/coverage/CoverageListView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {Directives, html, nothing, render} from '../../ui/lit/lit.js';\n\nimport coverageListViewStyles from './coverageListView.css.js';\nimport {CoverageType} from './CoverageModel.js';\n\nexport interface CoverageListItem {\n  url: Platform.DevToolsPath.UrlString;\n  type: CoverageType;\n  size: number;\n  usedSize: number;\n  unusedSize: number;\n  usedPercentage: number;\n  unusedPercentage: number;\n  sources: CoverageListItem[];\n  isContentScript: boolean;\n  generatedUrl?: Platform.DevToolsPath.UrlString;\n}\n\nconst UIStrings = {\n  /**\n   * @description Text that appears on a button for the css resource type filter.\n   */\n  css: 'CSS',\n  /**\n   * @description Text in Coverage List View of the Coverage tab\n   */\n  jsPerFunction: 'JS (per function)',\n  /**\n   * @description Text in Coverage List View of the Coverage tab\n   */\n  jsPerBlock: 'JS (per block)',\n  /**\n   * @description Text for web URLs\n   */\n  url: 'URL',\n  /**\n   * @description Text that refers to some types\n   */\n  type: 'Type',\n  /**\n   * @description Text in Coverage List View of the Coverage tab\n   */\n  totalBytes: 'Total Bytes',\n  /**\n   * @description Text in Coverage List View of the Coverage tab\n   */\n  unusedBytes: 'Unused Bytes',\n  /**\n   * @description Text in the Coverage List View of the Coverage Tab\n   */\n  usageVisualization: 'Usage Visualization',\n  /**\n   * @description Data grid name for Coverage data grids\n   */\n  codeCoverage: 'Code Coverage',\n  /**\n   * @description Cell title in Coverage List View of the Coverage tab. The coverage tool tells\n   *developers which functions (logical groups of lines of code) were actually run/executed. If a\n   *function does get run, then it is marked in the UI to indicate that it was covered.\n   */\n  jsCoverageWithPerFunction:\n      'JS coverage with per function granularity: Once a function was executed, the whole function is marked as covered.',\n  /**\n   * @description Cell title in Coverage List View of the Coverage tab. The coverage tool tells\n   *developers which blocks (logical groups of lines of code, smaller than a function) were actually\n   *run/executed. If a block does get run, then it is marked in the UI to indicate that it was\n   *covered.\n   */\n  jsCoverageWithPerBlock:\n      'JS coverage with per block granularity: Once a block of JavaScript was executed, that block is marked as covered.',\n  /**\n   * @description Accessible text for the value in bytes in memory allocation or coverage view.\n   */\n  sBytes: '{n, plural, =1 {# byte} other {# bytes}}',\n  /**\n   * @description Accessible text for the unused bytes column in the coverage tool that describes the total unused bytes and percentage of the file unused.\n   * @example {88%} percentage\n   */\n  sBytesS: '{n, plural, =1 {# byte, {percentage}} other {# bytes, {percentage}}}',\n  /**\n   * @description Tooltip text for the bar in the coverage list view of the coverage tool that illustrates the relation between used and unused bytes.\n   * @example {1000} PH1\n   * @example {12.34} PH2\n   */\n  sBytesSBelongToFunctionsThatHave: '{PH1} bytes ({PH2}) belong to functions that have not (yet) been executed.',\n  /**\n   * @description Tooltip text for the bar in the coverage list view of the coverage tool that illustrates the relation between used and unused bytes.\n   * @example {1000} PH1\n   * @example {12.34} PH2\n   */\n  sBytesSBelongToBlocksOf: '{PH1} bytes ({PH2}) belong to blocks of JavaScript that have not (yet) been executed.',\n  /**\n   * @description Message in Coverage View of the Coverage tab\n   * @example {1000} PH1\n   * @example {12.34} PH2\n   */\n  sBytesSBelongToFunctionsThatHaveExecuted: '{PH1} bytes ({PH2}) belong to functions that have executed at least once.',\n  /**\n   * @description Message in Coverage View of the Coverage tab\n   * @example {1000} PH1\n   * @example {12.34} PH2\n   */\n  sBytesSBelongToBlocksOfJavascript:\n      '{PH1} bytes ({PH2}) belong to blocks of JavaScript that have executed at least once.',\n  /**\n   * @description Accessible text for the visualization column of coverage tool. Contains percentage of unused bytes to used bytes.\n   * @example {12.3} PH1\n   * @example {12.3} PH2\n   */\n  sOfFileUnusedSOfFileUsed: '{PH1} % of file unused, {PH2} % of file used',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/coverage/CoverageListView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst {styleMap} = Directives;\n\nexport function coverageTypeToString(type: CoverageType): string {\n  const types = [];\n  if (type & CoverageType.CSS) {\n    types.push(i18nString(UIStrings.css));\n  }\n  if (type & CoverageType.JAVA_SCRIPT_PER_FUNCTION) {\n    types.push(i18nString(UIStrings.jsPerFunction));\n  } else if (type & CoverageType.JAVA_SCRIPT) {\n    types.push(i18nString(UIStrings.jsPerBlock));\n  }\n  return types.join('+');\n}\n\nexport class CoverageListView extends UI.Widget.VBox {\n  private readonly nodeForUrl: Map<Platform.DevToolsPath.UrlString, GridNode>;\n  private highlightRegExp: RegExp|null;\n  private dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<GridNode>;\n\n  constructor() {\n    super({useShadowDom: true});\n    this.registerRequiredCSS(coverageListViewStyles);\n    this.nodeForUrl = new Map();\n    this.highlightRegExp = null;\n\n    const columns = [\n      {\n        id: 'url',\n        title: i18nString(UIStrings.url),\n        width: '250px',\n        weight: 3,\n        fixedWidth: false,\n        sortable: true,\n        disclosure: true,\n      },\n      {id: 'type', title: i18nString(UIStrings.type), width: '45px', weight: 1, fixedWidth: true, sortable: true},\n      {\n        id: 'size',\n        title: i18nString(UIStrings.totalBytes),\n        width: '60px',\n        fixedWidth: true,\n        sortable: true,\n        align: DataGrid.DataGrid.Align.RIGHT,\n        weight: 1,\n      },\n      {\n        id: 'unused-size',\n        title: i18nString(UIStrings.unusedBytes),\n        width: '100px',\n        fixedWidth: true,\n        sortable: true,\n        align: DataGrid.DataGrid.Align.RIGHT,\n        sort: DataGrid.DataGrid.Order.Descending,\n        weight: 1,\n      },\n      {\n        id: 'bars',\n        title: i18nString(UIStrings.usageVisualization),\n        width: '250px',\n        fixedWidth: false,\n        sortable: true,\n        weight: 1,\n      },\n    ] as DataGrid.DataGrid.ColumnDescriptor[];\n    this.dataGrid =\n        DataGrid.SortableDataGrid.SortableDataGrid.create(['dummy'], [], i18nString(UIStrings.codeCoverage)) as\n        DataGrid.SortableDataGrid.SortableDataGrid<GridNode>;\n    this.dataGrid.removeColumn('dummy');\n    for (const column of columns) {\n      this.dataGrid.addColumn(column);\n    }\n    this.dataGrid.setColumnsVisibility(new Set(columns.map(column => column.id)));\n    this.dataGrid.setResizeMethod(DataGrid.DataGrid.ResizeMethod.LAST);\n    this.dataGrid.setStriped(true);\n    this.dataGrid.element.classList.add('flex-auto');\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.OPENED_NODE, this.onOpenedNode, this);\n\n    const dataGridWidget = this.dataGrid.asWidget();\n    dataGridWidget.show(this.contentElement);\n    this.setDefaultFocusedChild(dataGridWidget);\n  }\n\n  update(coverageInfo: CoverageListItem[], highlightRegExp: RegExp|null): void {\n    this.highlightRegExp = highlightRegExp;\n    const maxSize = coverageInfo.reduce((acc, entry) => Math.max(acc, entry.size), 0);\n\n    const coverageUrls = new Set(coverageInfo.map(info => info.url));\n    for (const [url, node] of this.nodeForUrl.entries()) {\n      if (!coverageUrls.has(url)) {\n        node.remove();\n        this.nodeForUrl.delete(url);\n      }\n    }\n\n    let hadUpdates = false;\n    for (const entry of coverageInfo) {\n      let node = this.nodeForUrl.get(entry.url);\n      if (node) {\n        hadUpdates = node.refreshIfNeeded(maxSize, entry) || hadUpdates;\n        if (entry.sources.length > 0) {\n          this.updateSourceNodes(entry.sources, maxSize, node);\n        }\n        node.setHighlight(this.highlightRegExp);\n        continue;\n      }\n      node = new GridNode(entry, maxSize);\n      this.nodeForUrl.set(entry.url, node);\n      this.appendNodeByType(node);\n      if (entry.sources.length > 0) {\n        this.updateSourceNodes(entry.sources, maxSize, node);\n      }\n      node.setHighlight(this.highlightRegExp);\n      hadUpdates = true;\n    }\n    if (hadUpdates) {\n      this.dataGrid.dispatchEventToListeners(DataGrid.DataGrid.Events.SORTING_CHANGED);\n    }\n  }\n\n  updateSourceNodes(sources: CoverageListItem[], maxSize: number, node: GridNode): void {\n    for (const coverageInfo of sources) {\n      const sourceNode = this.nodeForUrl.get(coverageInfo.url);\n      if (sourceNode) {\n        sourceNode.refreshIfNeeded(maxSize, coverageInfo);\n      } else {\n        const sourceNode = new GridNode(coverageInfo, maxSize);\n        node.appendChild(sourceNode);\n        this.nodeForUrl.set(coverageInfo.url, sourceNode);\n      }\n    }\n  }\n\n  reset(): void {\n    this.nodeForUrl.clear();\n    this.dataGrid.rootNode().removeChildren();\n  }\n\n  private appendNodeByType(node: GridNode): void {\n    if (node.coverageInfo.generatedUrl) {\n      const parentNode = this.nodeForUrl.get(node.coverageInfo.generatedUrl);\n      parentNode?.appendChild(node);\n    } else {\n      this.dataGrid.rootNode().appendChild(node);\n    }\n  }\n\n  selectByUrl(url: string): void {\n    const node = this.nodeForUrl.get(url as Platform.DevToolsPath.UrlString);\n    if (node) {\n      node.revealAndSelect();\n    }\n  }\n\n  private onOpenedNode(): void {\n    void this.revealSourceForSelectedNode();\n  }\n\n  private async revealSourceForSelectedNode(): Promise<void> {\n    const node = this.dataGrid.selectedNode;\n    if (!node) {\n      return;\n    }\n    const coverageInfo = (node as GridNode).coverageInfo;\n    const sourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(coverageInfo.url);\n    if (!sourceCode) {\n      return;\n    }\n\n    if (this.dataGrid.selectedNode !== node) {\n      return;\n    }\n    void Common.Revealer.reveal(sourceCode);\n  }\n}\n\nlet percentageFormatter: Intl.NumberFormat|null = null;\n\nfunction getPercentageFormatter(): Intl.NumberFormat {\n  if (!percentageFormatter) {\n    percentageFormatter = new Intl.NumberFormat(i18n.DevToolsLocale.DevToolsLocale.instance().locale, {\n      style: 'percent',\n      maximumFractionDigits: 1,\n    });\n  }\n  return percentageFormatter;\n}\n\nlet bytesFormatter: Intl.NumberFormat|null = null;\n\nfunction getBytesFormatter(): Intl.NumberFormat {\n  if (!bytesFormatter) {\n    bytesFormatter = new Intl.NumberFormat(i18n.DevToolsLocale.DevToolsLocale.instance().locale);\n  }\n  return bytesFormatter;\n}\n\nexport class GridNode extends DataGrid.SortableDataGrid.SortableDataGridNode<GridNode> {\n  coverageInfo: CoverageListItem;\n  private lastUsedSize!: number|undefined;\n  private url: Platform.DevToolsPath.UrlString;\n  private maxSize: number;\n  private highlightRegExp: RegExp|null;\n\n  constructor(coverageInfo: CoverageListItem, maxSize: number) {\n    super();\n    this.coverageInfo = coverageInfo;\n    this.url = coverageInfo.url;\n    this.maxSize = maxSize;\n    this.highlightRegExp = null;\n    this.#updateData(coverageInfo);\n  }\n\n  #updateData(coverageInfo: CoverageListItem): void {\n    this.data['url'] = this.url;\n    this.data['type'] = coverageTypeToString(coverageInfo.type);\n    this.data['size'] = coverageInfo.size;\n    this.data['unused-size'] = coverageInfo.unusedSize;\n    this.data['bars'] = coverageInfo.unusedSize;\n    this.coverageInfo = coverageInfo;\n  }\n\n  setHighlight(highlightRegExp: RegExp|null): void {\n    if (this.highlightRegExp === highlightRegExp) {\n      return;\n    }\n    this.highlightRegExp = highlightRegExp;\n    for (const child of this.children) {\n      (child as GridNode).setHighlight(this.highlightRegExp);\n    }\n    this.refresh();\n  }\n\n  refreshIfNeeded(maxSize: number, coverageInfo: CoverageListItem): boolean {\n    if (this.lastUsedSize === coverageInfo.usedSize && maxSize === this.maxSize) {\n      return false;\n    }\n    this.lastUsedSize = coverageInfo.usedSize;\n    this.maxSize = maxSize;\n    this.refresh();\n    this.#updateData(coverageInfo);\n    return true;\n  }\n\n  override createCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId);\n    const info = this.coverageInfo;\n    const formatBytes = (value: number|undefined): string => {\n      return getBytesFormatter().format(value ?? 0);\n    };\n    const formatPercent = (value: number|undefined): string => {\n      return getPercentageFormatter().format(value ?? 0);\n    };\n    switch (columnId) {\n      case 'url': {\n        UI.Tooltip.Tooltip.install(cell, this.url);\n        this.setCellAccessibleName(this.url, cell, columnId);\n        const splitURL = /^(.*)(\\/[^/]*)$/.exec(this.url);\n        render(\n            html`\n          <div class=\"url-outer\">\n            <div class=\"url-prefix\">${splitURL ? splitURL[1] : this.url}</div>\n            <div class=\"url-suffix\">${splitURL ? splitURL[2] : ''}</div>\n          </div>`,\n            cell);\n        if (this.highlightRegExp) {\n          this.highlight(cell, this.url);\n        }\n        break;\n      }\n      case 'type': {\n        UI.Tooltip.Tooltip.install(\n            cell,\n            info.type & CoverageType.JAVA_SCRIPT_PER_FUNCTION ? i18nString(UIStrings.jsCoverageWithPerFunction) :\n                info.type & CoverageType.JAVA_SCRIPT          ? i18nString(UIStrings.jsCoverageWithPerBlock) :\n                                                                '');\n        render(coverageTypeToString(this.coverageInfo.type), cell);\n        break;\n      }\n      case 'size': {\n        this.setCellAccessibleName(i18nString(UIStrings.sBytes, {n: info.size || 0}), cell, columnId);\n        render(html`<span>${formatBytes(info.size)}</span>`, cell);\n        break;\n      }\n      case 'unused-size': {\n        this.setCellAccessibleName(\n            i18nString(UIStrings.sBytesS, {n: info.unusedSize, percentage: formatPercent(info.unusedPercentage)}), cell,\n            columnId);\n        // clang-format off\n        render(html`\n          <span>${formatBytes(info.unusedSize)}</span>\n          <span class=\"percent-value\">\n            ${formatPercent(info.unusedPercentage)}\n          </span>`, cell);\n        // clang-format on\n        break;\n      }\n      case 'bars': {\n        this.setCellAccessibleName(\n            i18nString(\n                UIStrings.sOfFileUnusedSOfFileUsed,\n                {PH1: formatPercent(info.unusedPercentage), PH2: formatPercent(info.usedPercentage)}),\n            cell, columnId);\n        // clang-format off\n        render(html`\n          <div class=\"bar-container\">\n            ${info.unusedSize > 0 ? html`\n              <div class=\"bar bar-unused-size\"\n                  title=${\n                    info.type & CoverageType.JAVA_SCRIPT_PER_FUNCTION ? i18nString(UIStrings.sBytesSBelongToFunctionsThatHave, {PH1: info.unusedSize, PH2: formatPercent(info.unusedPercentage)}) :\n                    info.type & CoverageType.JAVA_SCRIPT              ? i18nString(UIStrings.sBytesSBelongToBlocksOf, {PH1: info.unusedSize, PH2: formatPercent(info.unusedPercentage)}) :\n                                                                          ''}\n                  style=${styleMap({width: ((info.unusedSize / this.maxSize) * 100 || 0) + '%'})}>\n              </div>` : nothing}\n            ${info.usedSize > 0 ? html`\n            <div class=\"bar bar-used-size\"\n                  title=${\n                    info.type & CoverageType.JAVA_SCRIPT_PER_FUNCTION ? i18nString(UIStrings.sBytesSBelongToFunctionsThatHaveExecuted, {PH1: info.usedSize, PH2: formatPercent(info.usedPercentage)}) :\n                    info.type & CoverageType.JAVA_SCRIPT              ? i18nString(UIStrings.sBytesSBelongToBlocksOfJavascript, {PH1: info.usedSize, PH2: formatPercent(info.usedPercentage)}) :\n                                                                          ''}\n                  { PH1: info.usedSize, PH2: formatPercent(info.usedPercentage) })}\n                style=${styleMap({width:((info.usedSize / this.maxSize) * 100 || 0) + '%'})}>\n            </div>` : nothing}\n          </div>`, cell);\n        // clang-format on\n      }\n    }\n    return cell;\n  }\n\n  private highlight(element: Element, textContent: string): void {\n    if (!this.highlightRegExp) {\n      return;\n    }\n    const matches = this.highlightRegExp.exec(textContent);\n    if (!matches?.length) {\n      return;\n    }\n    const range = new TextUtils.TextRange.SourceRange(matches.index, matches[0].length);\n    UI.UIUtils.highlightRangesWithStyleClass(element, [range], 'filter-highlight');\n  }\n}\n"]}