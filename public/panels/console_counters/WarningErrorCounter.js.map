{"version":3,"file":"WarningErrorCounter.js","sourceRoot":"","sources":["../../../../../../front_end/panels/console_counters/WarningErrorCounter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport type * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nconst UIStrings = {\n  /**\n   * @description The console error count in the Warning Error Counter shown in the main toolbar (top-left in DevTools). The error count refers to the number of errors currently present in the JavaScript console.\n   */\n  sErrors: '{n, plural, =1 {# error} other {# errors}}',\n  /**\n   * @description The console warning count in the Warning Error Counter shown in the main toolbar (top-left in DevTools). The warning count refers to the number of warnings currently present in the JavaScript console.\n   */\n  sWarnings: '{n, plural, =1 {# warning} other {# warnings}}',\n  /**\n   * @description Tooltip shown for a main toolbar button that opens the Console panel\n   * @example {2 errors, 1 warning} PH1\n   */\n  openConsoleToViewS: 'Open Console to view {PH1}',\n  /**\n   * @description Title for the issues count in the Issues Error Counter shown in the main toolbar (top-left in DevTools). The issues count refers to the number of issues in the issues tab.\n   */\n  openIssuesToView: '{n, plural, =1 {Open Issues to view # issue:} other {Open Issues to view # issues:}}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/console_counters/WarningErrorCounter.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ViewInput {\n  compact?: boolean;\n  errors: number;\n  warnings: number;\n  issues: number;\n  showIssuesHandler: () => void;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nconst DEFAULT_VIEW: View = (input, _output, target) => {\n  const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n\n  const countToText = (c: number): string|undefined => c === 0 ? undefined : `${c}`;\n  const {errors, warnings, issues, compact} = input;\n\n  /* Update consoleCounter items. */\n  const errorCountTitle = i18nString(UIStrings.sErrors, {n: errors});\n  const warningCountTitle = i18nString(UIStrings.sWarnings, {n: warnings});\n  let consoleSummary = '';\n  if (errors && warnings) {\n    consoleSummary = `${errorCountTitle}, ${warningCountTitle}`;\n  } else if (errors) {\n    consoleSummary = errorCountTitle;\n  } else if (warnings) {\n    consoleSummary = warningCountTitle;\n  }\n  const consoleTitle = i18nString(UIStrings.openConsoleToViewS, {PH1: consoleSummary});\n  const iconData: IconButton.IconButton.IconButtonData = {\n    clickHandler: Common.Console.Console.instance().show.bind(Common.Console.Console.instance()),\n    accessibleName: consoleTitle,\n    compact,\n    groups: [\n      {\n        iconName: 'cross-circle-filled',\n        text: countToText(errors)\n      },\n      {\n        iconName: 'warning-filled',\n        text: countToText(warnings)\n      },\n    ],\n  };\n\n  /* Update issuesCounter items. */\n  const issueEnumeration = IssueCounter.IssueCounter.getIssueCountsEnumeration(issuesManager);\n  const issuesTitleLead = i18nString(UIStrings.openIssuesToView, {n: issues});\n  const issuesTitle = `${issuesTitleLead} ${issueEnumeration}`;\n  const issueCounterData: IssueCounter.IssueCounter.IssueCounterData = {\n    clickHandler: input.showIssuesHandler,\n    issuesManager,\n    compact,\n    accessibleName: issuesTitle,\n    displayMode: IssueCounter.IssueCounter.DisplayMode.ONLY_MOST_IMPORTANT,\n  };\n\n  render(\n      html`<div class=\"status-buttons\"\n         ><icon-button\n            .data=${iconData}\n            title=${consoleTitle}\n            class=${'small' + warnings || errors ? nothing as unknown as string : 'hidden'}\n            jslog=${VisualLogging.counter('console').track({\n        click: true\n      })}\n         ></icon-button><devtools-issue-counter\n            class=${'main-toolbar' + (issues ? '' : ' hidden')}\n            title=${issuesTitle}\n            .data=${issueCounterData}\n            jslog=${VisualLogging.counter('issue').track({\n        click: true\n      })}\n         ></devtools-issue-counter></div>`,\n      target);\n};\n\nexport class WarningErrorCounterWidget extends UI.Widget.Widget {\n  private readonly throttler: Common.Throttler.Throttler;\n  updatingForTest?: boolean;\n  private compact?: boolean;\n  static instanceForTest: WarningErrorCounterWidget|null = null;\n\n  constructor(\n      element: HTMLElement, private readonly setVisibility: (visible: boolean) => void,\n      private readonly view: View = DEFAULT_VIEW) {\n    super(element);\n    this.throttler = new Common.Throttler.Throttler(100);\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.ConsoleCleared, this.update, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageAdded, this.update, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageUpdated, this.update, this);\n\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    issuesManager.addEventListener(IssuesManager.IssuesManager.Events.ISSUES_COUNT_UPDATED, this.update, this);\n\n    this.update();\n    WarningErrorCounterWidget.instanceForTest = this;\n  }\n\n  onSetCompactLayout(event: Common.EventTarget.EventTargetEvent<boolean>): void {\n    this.setCompactLayout(event.data);\n  }\n\n  setCompactLayout(enable: boolean): void {\n    this.compact = enable;\n    void this.performUpdate();\n  }\n\n  private updatedForTest(): void {\n    // Sniffed in tests.\n  }\n\n  private update(): void {\n    this.updatingForTest = true;\n    void this.throttler.schedule(this.performUpdate.bind(this));\n  }\n\n  get titlesForTesting(): string|null {\n    const button = this.contentElement.querySelector('icon-button')?.shadowRoot?.querySelector('button');\n    return button ? button.getAttribute('aria-label') : null;\n  }\n\n  private showIssues(): void {\n    Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.STATUS_BAR_ISSUES_COUNTER);\n    void UI.ViewManager.ViewManager.instance().showView('issues-pane');\n  }\n\n  override async performUpdate(): Promise<void> {\n    const errors = SDK.ConsoleModel.ConsoleModel.allErrors();\n    const warnings = SDK.ConsoleModel.ConsoleModel.allWarnings();\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    const issues = issuesManager.numberOfIssues();\n\n    this.view(\n        {compact: this.compact, errors, warnings, issues, showIssuesHandler: this.showIssues.bind(this)}, {},\n        this.contentElement);\n\n    this.setVisibility(Boolean(errors || warnings || issues));\n    UI.InspectorView.InspectorView.instance().toolbarItemResized();\n\n    this.updatingForTest = false;\n    this.updatedForTest();\n    return;\n  }\n}\n\nlet warningErrorCounterInstance: WarningErrorCounter;\nexport class WarningErrorCounter implements UI.Toolbar.Provider {\n  private readonly toolbarItem: UI.Toolbar.ToolbarItemWithCompactLayout;\n\n  private constructor() {\n    const widgetElement =\n        document.createElement('devtools-widget') as UI.Widget.WidgetElement<WarningErrorCounterWidget>;\n    const toolbarItem = new UI.Toolbar.ToolbarItemWithCompactLayout(widgetElement);\n    toolbarItem.setVisible(false);\n    widgetElement.widgetConfig = UI.Widget.widgetConfig(e => {\n      const widget = new WarningErrorCounterWidget(e, toolbarItem.setVisible.bind(toolbarItem));\n      toolbarItem.addEventListener(\n          UI.Toolbar.ToolbarItemWithCompactLayoutEvents.COMPACT_LAYOUT_UPDATED, widget.onSetCompactLayout, widget);\n      return widget;\n    });\n    this.toolbarItem = toolbarItem;\n  }\n\n  item(): UI.Toolbar.ToolbarItem|null {\n    return this.toolbarItem;\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): WarningErrorCounter {\n    const {forceNew} = opts;\n    if (!warningErrorCounterInstance || forceNew) {\n      warningErrorCounterInstance = new WarningErrorCounter();\n    }\n\n    return warningErrorCounterInstance;\n  }\n}\n"]}