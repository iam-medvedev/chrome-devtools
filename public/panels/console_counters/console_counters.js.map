{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/console_counters/WarningErrorCounter.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nconst UIStrings = {\n  /**\n   *@description The console error count in the Warning Error Counter shown in the main toolbar (top-left in DevTools). The error count refers to the number of errors currently present in the JavaScript console.\n   */\n  sErrors: '{n, plural, =1 {# error} other {# errors}}',\n  /**\n   *@description The console warning count in the Warning Error Counter shown in the main toolbar (top-left in DevTools). The warning count refers to the number of warnings currently present in the JavaScript console.\n   */\n  sWarnings: '{n, plural, =1 {# warning} other {# warnings}}',\n  /**\n   *@description Tooltip shown for a main toolbar button that opens the Console panel\n   *@example {2 errors, 1 warning} PH1\n   */\n  openConsoleToViewS: 'Open Console to view {PH1}',\n  /**\n   *@description Title for the issues count in the Issues Error Counter shown in the main toolbar (top-left in DevTools). The issues count refers to the number of issues in the issues tab.\n   */\n  openIssuesToView: '{n, plural, =1 {Open Issues to view # issue:} other {Open Issues to view # issues:}}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/console_counters/WarningErrorCounter.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet warningErrorCounterInstance: WarningErrorCounter;\nexport class WarningErrorCounter implements UI.Toolbar.Provider {\n  private readonly toolbarItem: UI.Toolbar.ToolbarItemWithCompactLayout;\n  private consoleCounter: IconButton.IconButton.IconButton;\n  private issueCounter: IssueCounter.IssueCounter.IssueCounter;\n  private readonly throttler: Common.Throttler.Throttler;\n  updatingForTest?: boolean;\n\n  private constructor() {\n    WarningErrorCounter.instanceForTest = this;\n\n    const countersWrapper = document.createElement('div');\n    countersWrapper.classList.add('status-buttons');\n    this.toolbarItem = new UI.Toolbar.ToolbarItemWithCompactLayout(countersWrapper);\n    this.toolbarItem.setVisible(false);\n    this.toolbarItem.addEventListener(\n        UI.Toolbar.ToolbarItemWithCompactLayoutEvents.COMPACT_LAYOUT_UPDATED, this.onSetCompactLayout, this);\n\n    this.consoleCounter = new IconButton.IconButton.IconButton();\n    this.consoleCounter.setAttribute('jslog', `${VisualLogging.counter('console').track({click: true})}`);\n    countersWrapper.appendChild(this.consoleCounter);\n    this.consoleCounter.data = {\n      clickHandler: Common.Console.Console.instance().show.bind(Common.Console.Console.instance()),\n      groups: [\n        {iconName: 'cross-circle-filled', iconColor: 'var(--icon-error)', iconHeight: '14px', iconWidth: '14px'},\n        {iconName: 'warning-filled', iconColor: 'var(--icon-warning)', iconHeight: '14px', iconWidth: '14px'},\n      ],\n    };\n\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    this.issueCounter = new IssueCounter.IssueCounter.IssueCounter();\n    this.issueCounter.classList.add('main-toolbar');\n    this.issueCounter.setAttribute('jslog', `${VisualLogging.counter('issue').track({click: true})}`);\n    countersWrapper.appendChild(this.issueCounter);\n    this.issueCounter.data = {\n      clickHandler: () => {\n        Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.STATUS_BAR_ISSUES_COUNTER);\n        void UI.ViewManager.ViewManager.instance().showView('issues-pane');\n      },\n      issuesManager,\n      displayMode: IssueCounter.IssueCounter.DisplayMode.ONLY_MOST_IMPORTANT,\n    };\n\n    this.throttler = new Common.Throttler.Throttler(100);\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.ConsoleCleared, this.update, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageAdded, this.update, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageUpdated, this.update, this);\n\n    issuesManager.addEventListener(IssuesManager.IssuesManager.Events.ISSUES_COUNT_UPDATED, this.update, this);\n\n    this.update();\n  }\n\n  onSetCompactLayout(event: Common.EventTarget.EventTargetEvent<boolean>): void {\n    this.setCompactLayout(event.data);\n  }\n\n  setCompactLayout(enable: boolean): void {\n    this.consoleCounter.data = {...this.consoleCounter.data, compact: enable};\n    this.issueCounter.data = {...this.issueCounter.data, compact: enable};\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): WarningErrorCounter {\n    const {forceNew} = opts;\n    if (!warningErrorCounterInstance || forceNew) {\n      warningErrorCounterInstance = new WarningErrorCounter();\n    }\n\n    return warningErrorCounterInstance;\n  }\n\n  private updatedForTest(): void {\n    // Sniffed in tests.\n  }\n\n  private update(): void {\n    this.updatingForTest = true;\n    void this.throttler.schedule(this.updateThrottled.bind(this));\n  }\n\n  get titlesForTesting(): string|null {\n    const button = this.consoleCounter.shadowRoot?.querySelector('button');\n    return button ? button.getAttribute('aria-label') : null;\n  }\n\n  private async updateThrottled(): Promise<void> {\n    const errors = SDK.ConsoleModel.ConsoleModel.allErrors();\n    const warnings = SDK.ConsoleModel.ConsoleModel.allWarnings();\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    const issues = issuesManager.numberOfIssues();\n\n    const countToText = (c: number): string|undefined => c === 0 ? undefined : `${c}`;\n\n    /* Update consoleCounter items. */\n    const errorCountTitle = i18nString(UIStrings.sErrors, {n: errors});\n    const warningCountTitle = i18nString(UIStrings.sWarnings, {n: warnings});\n    const newConsoleTexts = [countToText(errors), countToText(warnings)];\n    let consoleSummary = '';\n    if (errors && warnings) {\n      consoleSummary = `${errorCountTitle}, ${warningCountTitle}`;\n    } else if (errors) {\n      consoleSummary = errorCountTitle;\n    } else if (warnings) {\n      consoleSummary = warningCountTitle;\n    }\n    const consoleTitle = i18nString(UIStrings.openConsoleToViewS, {PH1: consoleSummary});\n    const previousData = this.consoleCounter.data;\n\n    this.consoleCounter.data = {\n      ...previousData,\n      groups: previousData.groups.map((g, i) => ({...g, text: newConsoleTexts[i]})),\n      accessibleName: consoleTitle,\n    };\n    // TODO(chromium:1167711): Let the component handle the title and ARIA label.\n    UI.Tooltip.Tooltip.install(this.consoleCounter, consoleTitle);\n    this.consoleCounter.classList.toggle('hidden', !(errors || warnings));\n\n    /* Update issuesCounter items. */\n    const issueEnumeration = IssueCounter.IssueCounter.getIssueCountsEnumeration(issuesManager);\n    const issuesTitleLead = i18nString(UIStrings.openIssuesToView, {n: issues});\n    const issuesTitle = `${issuesTitleLead} ${issueEnumeration}`;\n    // TODO(chromium:1167711): Let the component handle the title and ARIA label.\n    UI.Tooltip.Tooltip.install(this.issueCounter, issuesTitle);\n    this.issueCounter.data = {\n      ...this.issueCounter.data,\n      accessibleName: issuesTitle,\n    };\n    this.issueCounter.classList.toggle('hidden', !issues);\n\n    this.toolbarItem.setVisible(Boolean(errors || warnings || issues));\n\n    UI.InspectorView.InspectorView.instance().toolbarItemResized();\n    this.updatingForTest = false;\n    this.updatedForTest();\n    return;\n  }\n\n  item(): UI.Toolbar.ToolbarItem|null {\n    return this.toolbarItem;\n  }\n\n  static instanceForTest: WarningErrorCounter|null = null;\n}\n"],
  "mappings": "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",
  "names": []
}
