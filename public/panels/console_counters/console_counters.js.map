{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/console_counters/WarningErrorCounter.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport type * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, nothing, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nconst UIStrings = {\n  /**\n   * @description The console error count in the Warning Error Counter shown in the main toolbar (top-left in DevTools). The error count refers to the number of errors currently present in the JavaScript console.\n   */\n  sErrors: '{n, plural, =1 {# error} other {# errors}}',\n  /**\n   * @description The console warning count in the Warning Error Counter shown in the main toolbar (top-left in DevTools). The warning count refers to the number of warnings currently present in the JavaScript console.\n   */\n  sWarnings: '{n, plural, =1 {# warning} other {# warnings}}',\n  /**\n   * @description Tooltip shown for a main toolbar button that opens the Console panel\n   * @example {2 errors, 1 warning} PH1\n   */\n  openConsoleToViewS: 'Open Console to view {PH1}',\n  /**\n   * @description Title for the issues count in the Issues Error Counter shown in the main toolbar (top-left in DevTools). The issues count refers to the number of issues in the issues tab.\n   */\n  openIssuesToView: '{n, plural, =1 {Open Issues to view # issue:} other {Open Issues to view # issues:}}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/console_counters/WarningErrorCounter.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ViewInput {\n  compact?: boolean;\n  errors: number;\n  warnings: number;\n  issues: number;\n  showIssuesHandler: () => void;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nconst DEFAULT_VIEW: View = (input, _output, target) => {\n  const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n\n  const countToText = (c: number): string|undefined => c === 0 ? undefined : `${c}`;\n  const {errors, warnings, issues, compact} = input;\n\n  /* Update consoleCounter items. */\n  const errorCountTitle = i18nString(UIStrings.sErrors, {n: errors});\n  const warningCountTitle = i18nString(UIStrings.sWarnings, {n: warnings});\n  let consoleSummary = '';\n  if (errors && warnings) {\n    consoleSummary = `${errorCountTitle}, ${warningCountTitle}`;\n  } else if (errors) {\n    consoleSummary = errorCountTitle;\n  } else if (warnings) {\n    consoleSummary = warningCountTitle;\n  }\n  const consoleTitle = i18nString(UIStrings.openConsoleToViewS, {PH1: consoleSummary});\n  const iconData: IconButton.IconButton.IconButtonData = {\n    clickHandler: Common.Console.Console.instance().show.bind(Common.Console.Console.instance()),\n    accessibleName: consoleTitle,\n    compact,\n    groups: [\n      {\n        iconName: 'cross-circle-filled',\n        iconColor: 'var(--icon-error)',\n        iconHeight: '14px',\n        iconWidth: '14px',\n        text: countToText(errors)\n      },\n      {\n        iconName: 'warning-filled',\n        iconColor: 'var(--icon-warning)',\n        iconHeight: '14px',\n        iconWidth: '14px',\n        text: countToText(warnings)\n      },\n    ],\n  };\n\n  /* Update issuesCounter items. */\n  const issueEnumeration = IssueCounter.IssueCounter.getIssueCountsEnumeration(issuesManager);\n  const issuesTitleLead = i18nString(UIStrings.openIssuesToView, {n: issues});\n  const issuesTitle = `${issuesTitleLead} ${issueEnumeration}`;\n  const issueCounterData: IssueCounter.IssueCounter.IssueCounterData = {\n    clickHandler: input.showIssuesHandler,\n    issuesManager,\n    compact,\n    accessibleName: issuesTitle,\n    displayMode: IssueCounter.IssueCounter.DisplayMode.ONLY_MOST_IMPORTANT,\n  };\n\n  render(\n      html`<div class=\"status-buttons\"\n         ><icon-button\n            .data=${iconData}\n            title=${consoleTitle}\n            class=${warnings || errors ? nothing as unknown as string : 'hidden'}\n            jslog=${VisualLogging.counter('console').track({\n        click: true\n      })}\n         ></icon-button><devtools-issue-counter\n            class=${'main-toolbar' + (issues ? '' : ' hidden')}\n            title=${issuesTitle}\n            .data=${issueCounterData}\n            jslog=${VisualLogging.counter('issue').track({\n        click: true\n      })}\n         ></devtools-issue-counter></div>`,\n      target);\n};\n\nexport class WarningErrorCounterWidget extends UI.Widget.Widget {\n  private readonly throttler: Common.Throttler.Throttler;\n  updatingForTest?: boolean;\n  private compact?: boolean;\n  static instanceForTest: WarningErrorCounterWidget|null = null;\n\n  constructor(\n      element: HTMLElement, private readonly setVisibility: (visible: boolean) => void,\n      private readonly view: View = DEFAULT_VIEW) {\n    super(element);\n    this.throttler = new Common.Throttler.Throttler(100);\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.ConsoleCleared, this.update, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageAdded, this.update, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageUpdated, this.update, this);\n\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    issuesManager.addEventListener(IssuesManager.IssuesManager.Events.ISSUES_COUNT_UPDATED, this.update, this);\n\n    this.update();\n    WarningErrorCounterWidget.instanceForTest = this;\n  }\n\n  onSetCompactLayout(event: Common.EventTarget.EventTargetEvent<boolean>): void {\n    this.setCompactLayout(event.data);\n  }\n\n  setCompactLayout(enable: boolean): void {\n    this.compact = enable;\n    void this.performUpdate();\n  }\n\n  private updatedForTest(): void {\n    // Sniffed in tests.\n  }\n\n  private update(): void {\n    this.updatingForTest = true;\n    void this.throttler.schedule(this.performUpdate.bind(this));\n  }\n\n  get titlesForTesting(): string|null {\n    const button = this.contentElement.querySelector('icon-button')?.shadowRoot?.querySelector('button');\n    return button ? button.getAttribute('aria-label') : null;\n  }\n\n  private showIssues(): void {\n    Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.STATUS_BAR_ISSUES_COUNTER);\n    void UI.ViewManager.ViewManager.instance().showView('issues-pane');\n  }\n\n  override async performUpdate(): Promise<void> {\n    const errors = SDK.ConsoleModel.ConsoleModel.allErrors();\n    const warnings = SDK.ConsoleModel.ConsoleModel.allWarnings();\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    const issues = issuesManager.numberOfIssues();\n\n    this.view(\n        {compact: this.compact, errors, warnings, issues, showIssuesHandler: this.showIssues.bind(this)}, {},\n        this.contentElement);\n\n    this.setVisibility(Boolean(errors || warnings || issues));\n    UI.InspectorView.InspectorView.instance().toolbarItemResized();\n\n    this.updatingForTest = false;\n    this.updatedForTest();\n    return;\n  }\n}\n\nlet warningErrorCounterInstance: WarningErrorCounter;\nexport class WarningErrorCounter implements UI.Toolbar.Provider {\n  private readonly toolbarItem: UI.Toolbar.ToolbarItemWithCompactLayout;\n\n  private constructor() {\n    const widgetElement =\n        document.createElement('devtools-widget') as UI.Widget.WidgetElement<WarningErrorCounterWidget>;\n    const toolbarItem = new UI.Toolbar.ToolbarItemWithCompactLayout(widgetElement);\n    toolbarItem.setVisible(false);\n    widgetElement.widgetConfig = UI.Widget.widgetConfig(e => {\n      const widget = new WarningErrorCounterWidget(e, toolbarItem.setVisible.bind(toolbarItem));\n      toolbarItem.addEventListener(\n          UI.Toolbar.ToolbarItemWithCompactLayoutEvents.COMPACT_LAYOUT_UPDATED, widget.onSetCompactLayout, widget);\n      return widget;\n    });\n    this.toolbarItem = toolbarItem;\n  }\n\n  item(): UI.Toolbar.ToolbarItem|null {\n    return this.toolbarItem;\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): WarningErrorCounter {\n    const {forceNew} = opts;\n    if (!warningErrorCounterInstance || forceNew) {\n      warningErrorCounterInstance = new WarningErrorCounter();\n    }\n\n    return warningErrorCounterInstance;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
