{
  "version": 3,
  "sources": ["linear_memory_inspector-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as LinearMemoryInspector from './linear_memory_inspector.js';\n\nconst UIStrings = {\n  /**\n   *@description Title of the Linear Memory inspector tool\n   */\n  memoryInspector: 'Memory inspector',\n  /**\n   *@description Command for showing the 'Memory inspector' tool\n   */\n  showMemoryInspector: 'Show Memory inspector',\n} as const;\nconst str_ =\n    i18n.i18n.registerUIStrings('panels/linear_memory_inspector/linear_memory_inspector-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedLinearMemoryInspectorModule: (typeof LinearMemoryInspector|undefined);\n\nasync function loadLinearMemoryInspectorModule(): Promise<typeof LinearMemoryInspector> {\n  if (!loadedLinearMemoryInspectorModule) {\n    loadedLinearMemoryInspectorModule = await import('./linear_memory_inspector.js');\n  }\n  return loadedLinearMemoryInspectorModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'linear-memory-inspector',\n  title: i18nLazyString(UIStrings.memoryInspector),\n  commandPrompt: i18nLazyString(UIStrings.showMemoryInspector),\n  order: 100,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const LinearMemoryInspector = await loadLinearMemoryInspectorModule();\n    return LinearMemoryInspector.LinearMemoryInspectorPane.LinearMemoryInspectorPane.instance();\n  },\n});\n\nUI.ContextMenu.registerProvider({\n  async loadProvider() {\n    const LinearMemoryInspector = await loadLinearMemoryInspectorModule();\n    return LinearMemoryInspector.LinearMemoryInspectorController.LinearMemoryInspectorController.instance();\n  },\n  experiment: undefined,\n  contextTypes() {\n    return [\n      ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement,\n    ];\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [SDK.RemoteObject.LinearMemoryInspectable];\n  },\n  destination: Common.Revealer.RevealerDestination.MEMORY_INSPECTOR_PANEL,\n  async loadRevealer() {\n    const LinearMemoryInspector = await loadLinearMemoryInspectorModule();\n    return LinearMemoryInspector.LinearMemoryInspectorController.LinearMemoryInspectorController.instance();\n  },\n});\n"],
  "mappings": ";AAIA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,SAAS;AACrB,YAAY,cAAc;AAC1B,YAAY,QAAQ;AAIpB,IAAM,YAAY;;;;EAIhB,iBAAiB;;;;EAIjB,qBAAqB;;AAEvB,IAAM,OACG,UAAK,kBAAkB,kEAAkE,SAAS;AAC3G,IAAM,iBAAsB,UAAK,iCAAiC,KAAK,QAAW,IAAI;AAEtF,IAAI;AAEJ,eAAe,kCAA+B;AAC5C,MAAI,CAAC,mCAAmC;AACtC,wCAAoC,MAAM,OAAO,8BAA8B;EACjF;AACA,SAAO;AACT;AAEG,eAAY,sBAAsB;EACnC,UAAQ;EACR,IAAI;EACJ,OAAO,eAAe,UAAU,eAAe;EAC/C,eAAe,eAAe,UAAU,mBAAmB;EAC3D,OAAO;EACP,aAAW;EACX,MAAM,WAAQ;AACZ,UAAM,wBAAwB,MAAM,gCAA+B;AACnE,WAAO,sBAAsB,0BAA0B,0BAA0B,SAAQ;EAC3F;CACD;AAEE,eAAY,iBAAiB;EAC9B,MAAM,eAAY;AAChB,UAAM,wBAAwB,MAAM,gCAA+B;AACnE,WAAO,sBAAsB,gCAAgC,gCAAgC,SAAQ;EACvG;EACA,YAAY;EACZ,eAAY;AACV,WAAO;MACI,iCAAwB;;EAErC;CACD;AAEM,gBAAS,iBAAiB;EAC/B,eAAY;AACV,WAAO,CAAK,iBAAa,uBAAuB;EAClD;EACA,aAAoB,gBAAS,oBAAoB;EACjD,MAAM,eAAY;AAChB,UAAM,wBAAwB,MAAM,gCAA+B;AACnE,WAAO,sBAAsB,gCAAgC,gCAAgC,SAAQ;EACvG;CACD;",
  "names": []
}
