{"version":3,"file":"EventListenersView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/event_listeners/EventListenersView.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,kBAAkB,EAAC,MAAM,qCAAqC,CAAC;AAEvE,OAAO,KAAK,cAAc,MAAM,sBAAsB,CAAC;AAEvD,kBAAkB,CAAC,gCAAgC,EAAE,GAAG,EAAE;IACxD,SAAS,yBAAyB,CAC9B,IAA0D,EAAE,QAAgB,EAAE,KAAa;QAC7F,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACvB,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,MAAM,kBAAkB,GAAG,IAAI,cAAc,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;QAC9F,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAC5C,kBAAkB,CAAC,UAAU,EAAE,CAAC;QAChC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEnC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,yBAAyB,CAAC,kBAAkB,EAAE,sBAAsB,EAAE,MAAM,CAAC,CAAC;QAC9E,yBAAyB,CAAC,kBAAkB,EAAE,iCAAiC,EAAE,OAAO,CAAC,CAAC;QAE1F,MAAM,CAAC,SAAS,CACZ,kBAAkB,CAAC,cAAc,CAAC,aAAa,CAAC,iCAAiC,CAAC,EAAE,WAAW,EAC/F,oBAAoB,CAAC,CAAC;QAE1B,kBAAkB,CAAC,MAAM,EAAE,CAAC;QAC5B,SAAS,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QACjD,MAAM,kBAAkB,GAAG,IAAI,cAAc,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;QAC9F,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAC7C,kBAAkB,CAAC,UAAU,EAAE,CAAC;QAChC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEnC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,yBAAyB,CAAC,kBAAkB,EAAE,sBAAsB,EAAE,OAAO,CAAC,CAAC;QAC/E,yBAAyB,CAAC,kBAAkB,EAAE,iCAAiC,EAAE,MAAM,CAAC,CAAC;QAEzF,MAAM,CAAC,SAAS,CACZ,kBAAkB,CAAC,cAAc,CAAC,aAAa,CAAC,qBAAqB,CAAC,EAAE,WAAW,EAAE,oBAAoB,CAAC,CAAC;QAC/G,MAAM,CAAC,SAAS,CACZ,kBAAkB,CAAC,cAAc,CAAC,aAAa,CAAC,0BAA0B,CAAC,EAAE,WAAW,EACxF,uDAAuD,CAAC,CAAC;QAE7D,kBAAkB,CAAC,MAAM,EAAE,CAAC;QAC5B,SAAS,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithLocale} from '../../testing/EnvironmentHelpers.js';\n\nimport * as EventListeners from './event_listeners.js';\n\ndescribeWithLocale('EventListenersView placeholder', () => {\n  function assertElementDisplayStyle(\n      view: EventListeners.EventListenersView.EventListenersView, selector: string, style: string) {\n    const element = view.element.querySelector(selector);\n    assert.exists(element);\n    assert.deepEqual(window.getComputedStyle(element).display, style);\n  }\n\n  it('shows one-liner if in sources', () => {\n    const eventListenersView = new EventListeners.EventListenersView.EventListenersView(() => {});\n    const container = document.createElement('div');\n    container.classList.add('sources', 'panel');\n    eventListenersView.markAsRoot();\n    eventListenersView.show(container);\n\n    document.body.appendChild(container);\n    assertElementDisplayStyle(eventListenersView, '.empty-view-scroller', 'none');\n    assertElementDisplayStyle(eventListenersView, '.placeholder .gray-info-message', 'block');\n\n    assert.deepEqual(\n        eventListenersView.contentElement.querySelector('.placeholder .gray-info-message')?.textContent,\n        'No event listeners');\n\n    eventListenersView.detach();\n    container.remove();\n  });\n\n  it('shows empty widget if in elements panel', () => {\n    const eventListenersView = new EventListeners.EventListenersView.EventListenersView(() => {});\n    const container = document.createElement('div');\n    container.classList.add('elements', 'panel');\n    eventListenersView.markAsRoot();\n    eventListenersView.show(container);\n\n    document.body.appendChild(container);\n    assertElementDisplayStyle(eventListenersView, '.empty-view-scroller', 'block');\n    assertElementDisplayStyle(eventListenersView, '.placeholder .gray-info-message', 'none');\n\n    assert.deepEqual(\n        eventListenersView.contentElement.querySelector('.empty-state-header')?.textContent, 'No event listeners');\n    assert.deepEqual(\n        eventListenersView.contentElement.querySelector('.empty-state-description')?.textContent,\n        'On this page you will find registered event listeners');\n\n    eventListenersView.detach();\n    container.remove();\n  });\n});\n"]}