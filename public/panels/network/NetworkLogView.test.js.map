{"version":3,"file":"NetworkLogView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/NetworkLogView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as HAR from '../../models/har/har.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {\n  assertElement,\n  dispatchClickEvent,\n  dispatchMouseUpEvent,\n  raf,\n} from '../../testing/DOMHelpers.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection, dispatchEvent} from '../../testing/MockConnection.js';\nimport * as Coordinator from '../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Network from './network.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ndescribeWithMockConnection('NetworkLogView', () => {\n  const tests = (targetFactory: () => SDK.Target.Target) => {\n    let target: SDK.Target.Target;\n    let networkLogView: Network.NetworkLogView.NetworkLogView;\n    let networkLog: Logs.NetworkLog.NetworkLog;\n\n    beforeEach(() => {\n      const dummyStorage = new Common.Settings.SettingsStorage({});\n\n      for (const settingName of ['network-color-code-resource-types', 'network.group-by-frame']) {\n        Common.Settings.registerSettingExtension({\n          settingName,\n          settingType: Common.Settings.SettingType.BOOLEAN,\n          defaultValue: false,\n        });\n      }\n      Common.Settings.Settings.instance({\n        forceNew: true,\n        syncedStorage: dummyStorage,\n        globalStorage: dummyStorage,\n        localStorage: dummyStorage,\n      });\n      sinon.stub(UI.ShortcutRegistry.ShortcutRegistry, 'instance').returns({\n        shortcutTitleForAction: () => {},\n        shortcutsForAction: () => [],\n      } as unknown as UI.ShortcutRegistry.ShortcutRegistry);\n      networkLog = Logs.NetworkLog.NetworkLog.instance();\n      target = targetFactory();\n    });\n\n    let nextId = 0;\n    function createNetworkRequest(\n        url: string,\n        options: {requestHeaders?: SDK.NetworkRequest.NameValue[], finished?: boolean, target?: SDK.Target.Target}):\n        SDK.NetworkRequest.NetworkRequest {\n      const effectiveTarget = options.target || target;\n      const networkManager = effectiveTarget.model(SDK.NetworkManager.NetworkManager);\n      assertNotNullOrUndefined(networkManager);\n      let request: SDK.NetworkRequest.NetworkRequest|undefined;\n      const onRequestStarted = (event: Common.EventTarget.EventTargetEvent<SDK.NetworkManager.RequestStartedEvent>) => {\n        request = event.data.request;\n      };\n      networkManager.addEventListener(SDK.NetworkManager.Events.RequestStarted, onRequestStarted);\n      dispatchEvent(\n          effectiveTarget, 'Network.requestWillBeSent',\n          {requestId: `request${++nextId}`, loaderId: 'loaderId', request: {url}} as unknown as\n              Protocol.Network.RequestWillBeSentEvent);\n      networkManager.removeEventListener(SDK.NetworkManager.Events.RequestStarted, onRequestStarted);\n      assertNotNullOrUndefined(request);\n      request.requestMethod = 'GET';\n      if (options.requestHeaders) {\n        request.setRequestHeaders(options.requestHeaders);\n      }\n      if (options.finished) {\n        request.finished = true;\n      }\n      return request;\n    }\n\n    function createEnvironment() {\n      const filterBar = new UI.FilterBar.FilterBar('network-panel', true);\n      networkLogView = createNetworkLogView(filterBar);\n      networkLogView.markAsRoot();\n      networkLogView.show(document.body);\n      const rootNode = networkLogView.columns().dataGrid().rootNode();\n\n      return {rootNode, filterBar, networkLogView};\n    }\n\n    it('generates a valid curl command when some headers don\\'t have values', async () => {\n      const request = createNetworkRequest('http://localhost' as Platform.DevToolsPath.UrlString, {\n        requestHeaders: [\n          {name: 'header-with-value', value: 'some value'},\n          {name: 'no-value-header', value: ''},\n        ],\n      });\n      const actual = await Network.NetworkLogView.NetworkLogView.generateCurlCommand(request, 'unix');\n      const expected =\n          'curl \\'http://localhost\\' \\\\\\n  -H \\'header-with-value: some value\\' \\\\\\n  -H \\'no-value-header;\\'';\n      assert.strictEqual(actual, expected);\n    });\n\n    // Note this isn't an ideal test as the internal headers are generated rather than explicitly added,\n    // are only added on HTTP/2 and HTTP/3, have a preceeding colon like `:authority` but it still tests\n    // the stripping function.\n    it('generates a valid curl command while stripping internal headers', async () => {\n      const request = createNetworkRequest('http://localhost' as Platform.DevToolsPath.UrlString, {\n        requestHeaders: [\n          {name: 'authority', value: 'www.example.com'},\n        ],\n      });\n      const actual = await Network.NetworkLogView.NetworkLogView.generateCurlCommand(request, 'unix');\n      const expected = 'curl \\'http://localhost\\'';\n      assert.strictEqual(actual, expected);\n    });\n\n    it('generates a valid curl command when header values contain double quotes', async () => {\n      const request = createNetworkRequest('http://localhost' as Platform.DevToolsPath.UrlString, {\n        requestHeaders: [{name: 'cookie', value: 'eva=\"Sg4=\"'}],\n      });\n      assert.strictEqual(\n          await Network.NetworkLogView.NetworkLogView.generateCurlCommand(request, 'unix'),\n          'curl \\'http://localhost\\' -H \\'cookie: eva=\\\"Sg4=\\\"\\'',\n      );\n      assert.strictEqual(\n          await Network.NetworkLogView.NetworkLogView.generateCurlCommand(request, 'win'),\n          'curl \"http://localhost\" -H ^\"cookie: eva=^\\\\^\"Sg4=^\\\\^\"^\"',\n      );\n    });\n\n    it('generates a valid curl command when header values contain percentages', async () => {\n      const request = createNetworkRequest('http://localhost' as Platform.DevToolsPath.UrlString, {\n        requestHeaders: [{name: 'cookie', value: 'eva=%22Sg4%3D%22'}],\n      });\n      assert.strictEqual(\n          await Network.NetworkLogView.NetworkLogView.generateCurlCommand(request, 'unix'),\n          'curl \\'http://localhost\\' -H \\'cookie: eva=%22Sg4%3D%22\\'',\n      );\n      assert.strictEqual(\n          await Network.NetworkLogView.NetworkLogView.generateCurlCommand(request, 'win'),\n          'curl \"http://localhost\" -H ^\"cookie: eva=^%^22Sg4^%^3D^%^22^\"',\n      );\n    });\n\n    function createNetworkLogView(filterBar?: UI.FilterBar.FilterBar): Network.NetworkLogView.NetworkLogView {\n      if (!filterBar) {\n        filterBar = {addFilter: () => {}, filterButton: () => ({addEventListener: () => {}}), addDivider: () => {}} as\n            unknown as UI.FilterBar.FilterBar;\n      }\n      return new Network.NetworkLogView.NetworkLogView(\n          filterBar, document.createElement('div'),\n          Common.Settings.Settings.instance().createSetting('network-log-large-rows', false));\n    }\n\n    const tests = (inScope: boolean) => () => {\n      beforeEach(() => {\n        networkLogView = createNetworkLogView();\n        SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n      });\n\n      it('adds dividers on main frame load events', async () => {\n        const addEventDividers = sinon.spy(networkLogView.columns(), 'addEventDividers');\n\n        networkLogView.setRecording(true);\n\n        const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n        assertNotNullOrUndefined(resourceTreeModel);\n        resourceTreeModel.dispatchEventToListeners(SDK.ResourceTreeModel.Events.Load, {resourceTreeModel, loadTime: 5});\n        resourceTreeModel.dispatchEventToListeners(SDK.ResourceTreeModel.Events.DOMContentLoaded, 6);\n        if (inScope) {\n          assert.isTrue(addEventDividers.calledTwice);\n          assert.isTrue(addEventDividers.getCall(0).calledWith([5], 'network-load-divider'));\n          assert.isTrue(addEventDividers.getCall(1).calledWith([6], 'network-dcl-divider'));\n        } else {\n          assert.isFalse(addEventDividers.called);\n        }\n      });\n\n      it('can export all as HAR', async () => {\n        SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n        const harWriterWrite = sinon.stub(HAR.Writer.Writer, 'write').resolves();\n        const URL_HOST = 'example.com';\n        target.setInspectedURL(`http://${URL_HOST}/foo` as Platform.DevToolsPath.UrlString);\n        const FILENAME = `${URL_HOST}.har` as Platform.DevToolsPath.RawPathString;\n        const fileManager = Workspace.FileManager.FileManager.instance();\n        const fileManagerSave =\n            sinon.stub(fileManager, 'save').withArgs(FILENAME, '', true).resolves({fileSystemPath: FILENAME});\n        const fileManagerClose = sinon.stub(fileManager, 'close');\n\n        const FINISHED_REQUEST_1 = createNetworkRequest('http://example.com/', {finished: true});\n        const FINISHED_REQUEST_2 = createNetworkRequest('http://example.com/favicon.ico', {finished: true});\n        const UNFINISHED_REQUEST = createNetworkRequest('http://example.com/background.bmp', {finished: false});\n        sinon.stub(Logs.NetworkLog.NetworkLog.instance(), 'requests').returns([\n          FINISHED_REQUEST_1,\n          FINISHED_REQUEST_2,\n          UNFINISHED_REQUEST,\n        ]);\n        await networkLogView.exportAll();\n\n        if (inScope) {\n          assert.isTrue(harWriterWrite.calledOnceWith(\n              sinon.match.any, [FINISHED_REQUEST_1, FINISHED_REQUEST_2], sinon.match.any));\n          assert.isTrue(fileManagerSave.calledOnce);\n          assert.isTrue(fileManagerClose.calledOnce);\n        } else {\n          assert.isFalse(harWriterWrite.called);\n          assert.isFalse(fileManagerSave.called);\n          assert.isFalse(fileManagerClose.called);\n        }\n      });\n\n      it('can import and filter from HAR', async () => {\n        const URL_1 = 'http://example.com/' as Platform.DevToolsPath.UrlString;\n        const URL_2 = 'http://example.com/favicon.ico' as Platform.DevToolsPath.UrlString;\n        function makeHarEntry(url: Platform.DevToolsPath.UrlString) {\n          return {\n            request: {method: 'GET', url: url, headersSize: -1, bodySize: 0},\n            response: {status: 0, content: {'size': 0, 'mimeType': 'x-unknown'}, headersSize: -1, bodySize: -1},\n            startedDateTime: null,\n            time: null,\n            timings: {blocked: null, dns: -1, ssl: -1, connect: -1, send: 0, wait: 0, receive: 0},\n          };\n        }\n        const har = {\n          log: {\n            version: '1.2',\n            creator: {name: 'WebInspector', version: '537.36'},\n            entries: [makeHarEntry(URL_1), makeHarEntry(URL_2)],\n          },\n        };\n        networkLogView.markAsRoot();\n        networkLogView.show(document.body);\n        const blob = new Blob([JSON.stringify(har)], {type: 'text/plain'});\n        const file = new File([blob], 'log.har');\n        await networkLogView.onLoadFromFile(file);\n        await coordinator.done({waitForWork: true});\n\n        const rootNode = networkLogView.columns().dataGrid().rootNode();\n        assert.deepEqual(\n            rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()),\n            [URL_1, URL_2]);\n\n        networkLogView.setTextFilterValue('favicon');\n        assert.deepEqual(\n            rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()), [URL_2]);\n\n        networkLogView.detach();\n      });\n\n      it('shows summary toolbar with content', () => {\n        target.setInspectedURL('http://example.com/' as Platform.DevToolsPath.UrlString);\n        const request = createNetworkRequest('http://example.com/', {finished: true});\n        request.endTime = 0.669414;\n        request.setIssueTime(0.435136, 0.435136);\n        request.setResourceType(Common.ResourceType.resourceTypes.Document);\n\n        networkLogView.setRecording(true);\n        const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n        assertNotNullOrUndefined(resourceTreeModel);\n        resourceTreeModel.dispatchEventToListeners(\n            SDK.ResourceTreeModel.Events.Load, {resourceTreeModel, loadTime: 0.686191});\n        resourceTreeModel.dispatchEventToListeners(SDK.ResourceTreeModel.Events.DOMContentLoaded, 0.683709);\n        networkLogView.markAsRoot();\n        networkLogView.show(document.body);\n\n        const toolbar = networkLogView.summaryToolbar();\n        const textElements = toolbar.element.shadowRoot?.querySelectorAll('.toolbar-text');\n        assertNotNullOrUndefined(textElements);\n        const textContents = [...textElements].map(item => item.textContent);\n        if (inScope) {\n          assert.deepEqual(textContents, [\n            '1 requests',\n            '0\\u00a0B transferred',\n            '0\\u00a0B resources',\n            'Finish: 234\\u00a0ms',\n            'DOMContentLoaded: 249\\u00a0ms',\n            'Load: 251\\u00a0ms',\n          ]);\n        } else {\n          assert.strictEqual(textElements.length, 0);\n        }\n        networkLogView.detach();\n      });\n    };\n    describe('in scope', tests(true));\n    describe('out of scope', tests(false));\n\n    const handlesSwitchingScope = (preserveLog: boolean) => async () => {\n      Common.Settings.Settings.instance().moduleSetting('network-log.preserve-log').set(preserveLog);\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(target);\n      const anotherTarget = createTarget();\n      const networkManager = target.model(SDK.NetworkManager.NetworkManager);\n      assertNotNullOrUndefined(networkManager);\n      const request1 = createNetworkRequest('url1', {target});\n      const request2 = createNetworkRequest('url2', {target});\n      const request3 = createNetworkRequest('url3', {target: anotherTarget});\n      networkLogView = createNetworkLogView();\n      networkLogView.markAsRoot();\n      networkLogView.show(document.body);\n      await coordinator.done();\n\n      const rootNode = networkLogView.columns().dataGrid().rootNode();\n      assert.deepEqual(\n          rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()), [request1, request2]);\n\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(anotherTarget);\n      await coordinator.done();\n      assert.deepEqual(\n          rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()),\n          preserveLog ? [request1, request2, request3] : [request3]);\n\n      networkLogView.detach();\n    };\n\n    it('replaces requests when switching scope with preserve log off', handlesSwitchingScope(false));\n    it('appends requests when switching scope with preserve log on', handlesSwitchingScope(true));\n\n    it('appends requests on prerender activation with preserve log on', async () => {\n      Common.Settings.Settings.instance().moduleSetting('network-log.preserve-log').set(true);\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(target);\n      const anotherTarget = createTarget();\n      const networkManager = target.model(SDK.NetworkManager.NetworkManager);\n      assertNotNullOrUndefined(networkManager);\n      const request1 = createNetworkRequest('url1', {target});\n      const request2 = createNetworkRequest('url2', {target});\n      const request3 = createNetworkRequest('url3', {target: anotherTarget});\n      networkLogView = createNetworkLogView();\n      networkLogView.markAsRoot();\n      networkLogView.show(document.body);\n      await coordinator.done();\n\n      const rootNode = networkLogView.columns().dataGrid().rootNode();\n      assert.deepEqual(\n          rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()), [request1, request2]);\n\n      const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      assertNotNullOrUndefined(resourceTreeModel);\n      const frame = {\n        url: 'http://example.com/',\n        unreachableUrl: () => Platform.DevToolsPath.EmptyUrlString,\n        resourceTreeModel: () => resourceTreeModel,\n      } as SDK.ResourceTreeModel.ResourceTreeFrame;\n      resourceTreeModel.dispatchEventToListeners(\n          SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n          {frame, type: SDK.ResourceTreeModel.PrimaryPageChangeType.Activation});\n      await coordinator.done();\n      assert.deepEqual(\n          rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()),\n          [request1, request2, request3]);\n\n      networkLogView.detach();\n    });\n\n    it('hide Chrome extension requests from checkbox', async () => {\n      createNetworkRequest('chrome-extension://url1', {target});\n      createNetworkRequest('url2', {target});\n      let rootNode;\n      let filterBar;\n      ({rootNode, filterBar, networkLogView} = createEnvironment());\n      const hideExtCheckbox = getCheckbox(filterBar, 'Hide \\'chrome-extension://\\' URLs');\n\n      assert.deepEqual(\n          rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()),\n          ['chrome-extension://url1' as Platform.DevToolsPath.UrlString, 'url2' as Platform.DevToolsPath.UrlString]);\n\n      clickCheckbox(hideExtCheckbox);\n      assert.deepEqual(\n          rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()),\n          ['url2' as Platform.DevToolsPath.UrlString]);\n\n      networkLogView.detach();\n    });\n\n    it('can hide Chrome extension requests from dropdown', async () => {\n      Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.NETWORK_PANEL_FILTER_BAR_REDESIGN);\n      createNetworkRequest('chrome-extension://url1', {target});\n      createNetworkRequest('url2', {target});\n      let rootNode;\n      let filterBar;\n      ({rootNode, filterBar, networkLogView} = createEnvironment());\n\n      assert.deepEqual(\n          rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()),\n          ['chrome-extension://url1' as Platform.DevToolsPath.UrlString, 'url2' as Platform.DevToolsPath.UrlString]);\n\n      const dropdown = await openMoreTypesDropdown(filterBar, networkLogView);\n      if (!dropdown) {\n        return;\n      }\n      const softMenu = getSoftMenu();\n      const hideExtensionURL = getDropdownItem(softMenu, 'Hide extension URLs');\n      assert.isFalse(hideExtensionURL.hasAttribute('checked'));\n      dispatchMouseUpEvent(hideExtensionURL);\n      await raf();\n      assert.isTrue(hideExtensionURL.hasAttribute('checked'));\n\n      assert.deepEqual(\n          rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()),\n          ['url2' as Platform.DevToolsPath.UrlString]);\n\n      dropdown.discard();\n      networkLogView.detach();\n    });\n\n    it('displays correct count for more filters', async () => {\n      Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.NETWORK_PANEL_FILTER_BAR_REDESIGN);\n      let filterBar;\n      ({filterBar, networkLogView} = createEnvironment());\n      const dropdown = await openMoreTypesDropdown(filterBar, networkLogView);\n      if (!dropdown) {\n        return;\n      }\n\n      assert.strictEqual(getMoreFiltersActiveCount(filterBar), '0');\n      assert.isTrue(getCountAdorner(filterBar)?.classList.contains('hidden'));\n\n      const softMenu = getSoftMenu();\n      await selectMoreFiltersOption(softMenu, 'Hide extension URLs');\n\n      assert.strictEqual(getMoreFiltersActiveCount(filterBar), '1');\n      assert.isFalse(getCountAdorner(filterBar)?.classList.contains('hidden'));\n\n      dropdown.discard();\n      networkLogView.detach();\n    });\n\n    it('can automatically check the `All` option in the `Request Type` when the only type checked becomes unchecked',\n       async () => {\n         Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.NETWORK_PANEL_FILTER_BAR_REDESIGN);\n\n         const dropdown = setupRequestTypesDropdown();\n         const button = dropdown.element().querySelector('.toolbar-button');\n\n         assertElement(button, HTMLElement);\n         dispatchClickEvent(button, {bubbles: true, composed: true});\n         await raf();\n\n         const optionImg = getRequestTypeDropdownOption('Image');\n         const optionImgCheckmark = optionImg?.querySelector('.checkmark') || null;\n         const optionAll = getRequestTypeDropdownOption('All');\n         const optionAllCheckmark = optionAll?.querySelector('.checkmark') || null;\n\n         assertElement(optionImg, HTMLElement);\n         assertElement(optionImgCheckmark, HTMLElement);\n         assertElement(optionAll, HTMLElement);\n         assertElement(optionAllCheckmark, HTMLElement);\n\n         assert.isTrue(optionAll.ariaLabel === 'All, checked');\n         assert.isTrue(optionImg.ariaLabel === 'Image, unchecked');\n         assert.isTrue(window.getComputedStyle(optionAllCheckmark).getPropertyValue('opacity') === '1');\n         assert.isTrue(window.getComputedStyle(optionImgCheckmark).getPropertyValue('opacity') === '0');\n\n         await selectRequestTypesOption('Image');\n\n         assert.isTrue(optionAll.ariaLabel === 'All, unchecked');\n         assert.isTrue(optionImg.ariaLabel === 'Image, checked');\n         assert.isTrue(window.getComputedStyle(optionAllCheckmark).getPropertyValue('opacity') === '0');\n         assert.isTrue(window.getComputedStyle(optionImgCheckmark).getPropertyValue('opacity') === '1');\n\n         await selectRequestTypesOption('Image');\n\n         assert.isTrue(optionAll.ariaLabel === 'All, checked');\n         assert.isTrue(optionImg.ariaLabel === 'Image, unchecked');\n         assert.isTrue(window.getComputedStyle(optionAllCheckmark).getPropertyValue('opacity') === '1');\n         assert.isTrue(window.getComputedStyle(optionImgCheckmark).getPropertyValue('opacity') === '0');\n\n         dropdown.discard();\n         await raf();\n       });\n\n    it('shows correct selected request types count', async () => {\n      Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.NETWORK_PANEL_FILTER_BAR_REDESIGN);\n      const umaCountSpy = sinon.spy(Host.userMetrics, 'resourceTypeFilterNumberOfSelectedChanged');\n      const umaTypeSpy = sinon.spy(Host.userMetrics, 'resourceTypeFilterItemSelected');\n\n      const dropdown = setupRequestTypesDropdown();\n      const button = dropdown.element().querySelector('.toolbar-button');\n      assertElement(button, HTMLElement);\n\n      let countAdorner = button.querySelector('.active-filters-count');\n      assert.isTrue(countAdorner?.classList.contains('hidden'));\n\n      dispatchClickEvent(button, {bubbles: true, composed: true});\n      await raf();\n      await selectRequestTypesOption('Image');\n\n      countAdorner = button.querySelector('.active-filters-count');\n      assert.isFalse(countAdorner?.classList.contains('hidden'));\n      assert.strictEqual(countAdorner?.querySelector('[slot=\"content\"]')?.textContent, '1');\n\n      dropdown.discard();\n      await raf();\n      assert.isTrue(umaCountSpy.calledOnceWith(1));\n      assert.isTrue(umaTypeSpy.calledOnceWith('Image'));\n    });\n\n    it('adjusts request types label dynamically', async () => {\n      Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.NETWORK_PANEL_FILTER_BAR_REDESIGN);\n\n      const dropdown = setupRequestTypesDropdown();\n      const button = dropdown.element().querySelector('.toolbar-button');\n      assertElement(button, HTMLElement);\n\n      let toolbarText = button.querySelector('.toolbar-text')?.textContent;\n      assert.strictEqual(toolbarText, 'Request types');\n\n      dispatchClickEvent(button, {bubbles: true, composed: true});\n      await raf();\n      await selectRequestTypesOption('Image');\n      await selectRequestTypesOption('JavaScript');\n\n      toolbarText = button.querySelector('.toolbar-text')?.textContent;\n      assert.strictEqual(toolbarText, 'JS, Img');\n\n      await selectRequestTypesOption('CSS');\n\n      toolbarText = button.querySelector('.toolbar-text')?.textContent;\n      assert.strictEqual(toolbarText, 'CSS, JS...');\n\n      dropdown.discard();\n      await raf();\n    });\n\n    it('lists selected types in requests types tooltip', async () => {\n      Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.NETWORK_PANEL_FILTER_BAR_REDESIGN);\n      const umaCountSpy = sinon.spy(Host.userMetrics, 'resourceTypeFilterNumberOfSelectedChanged');\n      const umaTypeSpy = sinon.spy(Host.userMetrics, 'resourceTypeFilterItemSelected');\n\n      const dropdown = setupRequestTypesDropdown();\n      const button = dropdown.element().querySelector('.toolbar-button');\n      assertElement(button, HTMLElement);\n\n      let tooltipText = button.title;\n      assert.strictEqual(tooltipText, 'Filter requests by type');\n\n      dispatchClickEvent(button, {bubbles: true, composed: true});\n      await raf();\n      await selectRequestTypesOption('Image');\n      await selectRequestTypesOption('JavaScript');\n\n      tooltipText = button.title;\n      assert.strictEqual(tooltipText, 'Show only JavaScript, Image');\n\n      dropdown.discard();\n      await raf();\n      assert.isTrue(umaCountSpy.calledOnceWith(2));\n      assert.isTrue(umaTypeSpy.calledTwice);\n      assert.isTrue(umaTypeSpy.calledWith('Image'));\n      assert.isTrue(umaTypeSpy.calledWith('JavaScript'));\n    });\n\n    it('updates tooltip to default when request type deselected', async () => {\n      Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.NETWORK_PANEL_FILTER_BAR_REDESIGN);\n\n      const dropdown = setupRequestTypesDropdown();\n      const button = dropdown.element().querySelector('.toolbar-button');\n      assertElement(button, HTMLElement);\n\n      dispatchClickEvent(button, {bubbles: true, composed: true});\n      await raf();\n      await selectRequestTypesOption('Image');\n\n      let tooltipText = button.title;\n      assert.strictEqual(tooltipText, 'Show only Image');\n\n      await selectRequestTypesOption('Image');\n\n      tooltipText = button.title;\n      assert.strictEqual(tooltipText, 'Filter requests by type');\n\n      dropdown.discard();\n      await raf();\n    });\n\n    it('can filter requests with blocked response cookies from checkbox', async () => {\n      const request1 = createNetworkRequest('url1', {target});\n      request1.blockedResponseCookies = () => [{\n        blockedReasons: [Protocol.Network.SetCookieBlockedReason.SameSiteNoneInsecure],\n        cookie: null,\n        cookieLine: 'foo=bar; SameSite=None',\n      }];\n      createNetworkRequest('url2', {target});\n      let rootNode;\n      let filterBar;\n      ({rootNode, filterBar, networkLogView} = createEnvironment());\n      const blockedCookiesCheckbox = getCheckbox(filterBar, 'Show only requests with blocked response cookies');\n      clickCheckbox(blockedCookiesCheckbox);\n      assert.deepEqual(rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()), [\n        'url1' as Platform.DevToolsPath.UrlString,\n      ]);\n\n      networkLogView.detach();\n    });\n\n    it('can filter requests with blocked response cookies from dropdown', async () => {\n      Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.NETWORK_PANEL_FILTER_BAR_REDESIGN);\n      const umaCountSpy = sinon.spy(Host.userMetrics, 'networkPanelMoreFiltersNumberOfSelectedChanged');\n      const umaItemSpy = sinon.spy(Host.userMetrics, 'networkPanelMoreFiltersItemSelected');\n\n      const request1 = createNetworkRequest('url1', {target});\n      request1.blockedResponseCookies = () => [{\n        blockedReasons: [Protocol.Network.SetCookieBlockedReason.SameSiteNoneInsecure],\n        cookie: null,\n        cookieLine: 'foo=bar; SameSite=None',\n      }];\n      createNetworkRequest('url2', {target});\n      let rootNode;\n      let filterBar;\n      ({rootNode, filterBar, networkLogView} = createEnvironment());\n\n      assert.deepEqual(\n          rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()),\n          ['url1' as Platform.DevToolsPath.UrlString, 'url2' as Platform.DevToolsPath.UrlString]);\n\n      const dropdown = await openMoreTypesDropdown(filterBar, networkLogView);\n      if (!dropdown) {\n        return;\n      }\n      const softMenu = getSoftMenu();\n      const blockedResponseCookies = getDropdownItem(softMenu, 'Blocked response cookies');\n      assert.isFalse(blockedResponseCookies.hasAttribute('checked'));\n      dispatchMouseUpEvent(blockedResponseCookies);\n      await raf();\n      assert.isTrue(blockedResponseCookies.hasAttribute('checked'));\n\n      assert.deepEqual(rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()), [\n        'url1' as Platform.DevToolsPath.UrlString,\n      ]);\n\n      dropdown.discard();\n      assert.isTrue(umaCountSpy.calledOnceWith(1));\n      assert.isTrue(umaItemSpy.calledOnceWith('Blocked response cookies'));\n      networkLogView.detach();\n    });\n\n    it('lists selected options in more filters tooltip', async () => {\n      Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.NETWORK_PANEL_FILTER_BAR_REDESIGN);\n      const umaCountSpy = sinon.spy(Host.userMetrics, 'networkPanelMoreFiltersNumberOfSelectedChanged');\n      const umaItemSpy = sinon.spy(Host.userMetrics, 'networkPanelMoreFiltersItemSelected');\n      let filterBar;\n      ({filterBar, networkLogView} = createEnvironment());\n\n      const dropdown = await openMoreTypesDropdown(filterBar, networkLogView);\n      assertNotNullOrUndefined(dropdown);\n\n      const button = dropdown.element().querySelector('.toolbar-button');\n      assertElement(button, HTMLElement);\n      assert.strictEqual(button.title, 'Show only/hide requests');\n\n      const softMenu = getSoftMenu();\n      await selectMoreFiltersOption(softMenu, 'Blocked response cookies');\n      await selectMoreFiltersOption(softMenu, 'Hide extension URLs');\n\n      assert.strictEqual(button.title, 'Hide extension URLs, Blocked response cookies');\n\n      dropdown.discard();\n      assert.isTrue(umaCountSpy.calledOnceWith(2));\n      assert.isTrue(umaItemSpy.calledTwice);\n      assert.isTrue(umaItemSpy.calledWith('Hide extension URLs'));\n      assert.isTrue(umaItemSpy.calledWith('Blocked response cookies'));\n      networkLogView.detach();\n    });\n\n    it('updates tooltip to default when more filters option deselected', async () => {\n      Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.NETWORK_PANEL_FILTER_BAR_REDESIGN);\n      let filterBar;\n      ({filterBar, networkLogView} = createEnvironment());\n\n      const dropdown = await openMoreTypesDropdown(filterBar, networkLogView);\n      assertNotNullOrUndefined(dropdown);\n\n      const button = dropdown.element().querySelector('.toolbar-button');\n      assertElement(button, HTMLElement);\n      assert.strictEqual(button.title, 'Show only/hide requests');\n\n      const softMenu = getSoftMenu();\n      await selectMoreFiltersOption(softMenu, 'Blocked response cookies');\n\n      assert.strictEqual(button.title, 'Blocked response cookies');\n\n      await selectMoreFiltersOption(softMenu, 'Blocked response cookies');\n\n      assert.strictEqual(button.title, 'Show only/hide requests');\n\n      dropdown.discard();\n      networkLogView.detach();\n    });\n\n    it('can remove requests', async () => {\n      networkLogView = createNetworkLogView();\n      const request = createNetworkRequest('url1', {target});\n      networkLogView.markAsRoot();\n      networkLogView.show(document.body);\n\n      const rootNode = networkLogView.columns().dataGrid().rootNode();\n      assert.strictEqual(rootNode.children.length, 1);\n\n      networkLog.dispatchEventToListeners(Logs.NetworkLog.Events.RequestRemoved, {request});\n      assert.strictEqual(rootNode.children.length, 0);\n\n      networkLogView.detach();\n    });\n\n    function createOverrideRequests() {\n      const urlNotOverridden = 'url-not-overridden' as Platform.DevToolsPath.UrlString;\n      const urlHeaderOverridden = 'url-header-overridden' as Platform.DevToolsPath.UrlString;\n      const urlContentOverridden = 'url-content-overridden' as Platform.DevToolsPath.UrlString;\n      const urlHeaderAndContentOverridden = 'url-header-und-content-overridden' as Platform.DevToolsPath.UrlString;\n\n      createNetworkRequest(urlNotOverridden, {target});\n      const r2 = createNetworkRequest(urlHeaderOverridden, {target});\n      const r3 = createNetworkRequest(urlContentOverridden, {target});\n      const r4 = createNetworkRequest(urlHeaderAndContentOverridden, {target});\n\n      // set up overrides\n      r2.originalResponseHeaders = [{name: 'content-type', value: 'x'}];\n      r2.responseHeaders = [{name: 'content-type', value: 'overriden'}];\n      r3.hasOverriddenContent = true;\n      r4.originalResponseHeaders = [{name: 'age', value: 'x'}];\n      r4.responseHeaders = [{name: 'age', value: 'overriden'}];\n      r4.hasOverriddenContent = true;\n\n      return {urlNotOverridden, urlHeaderOverridden, urlContentOverridden, urlHeaderAndContentOverridden};\n    }\n\n    it('can apply filter - has-overrides:yes', async () => {\n      const {urlHeaderOverridden, urlContentOverridden, urlHeaderAndContentOverridden} = createOverrideRequests();\n\n      const filterBar = new UI.FilterBar.FilterBar('network-panel', true);\n      networkLogView = createNetworkLogView(filterBar);\n      networkLogView.setTextFilterValue('has-overrides:yes');\n\n      networkLogView.markAsRoot();\n      networkLogView.show(document.body);\n      const rootNode = networkLogView.columns().dataGrid().rootNode();\n\n      assert.deepEqual(rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()), [\n        urlHeaderOverridden,\n        urlContentOverridden,\n        urlHeaderAndContentOverridden,\n      ]);\n\n      networkLogView.detach();\n    });\n\n    it('can apply filter - has-overrides:no', async () => {\n      const {urlNotOverridden} = createOverrideRequests();\n\n      const filterBar = new UI.FilterBar.FilterBar('network-panel', true);\n      networkLogView = createNetworkLogView(filterBar);\n      networkLogView.setTextFilterValue('has-overrides:no');\n\n      networkLogView.markAsRoot();\n      networkLogView.show(document.body);\n      const rootNode = networkLogView.columns().dataGrid().rootNode();\n\n      assert.deepEqual(rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()), [\n        urlNotOverridden,\n      ]);\n\n      networkLogView.detach();\n    });\n\n    it('can apply filter - has-overrides:headers', async () => {\n      const {urlHeaderOverridden, urlHeaderAndContentOverridden} = createOverrideRequests();\n\n      const filterBar = new UI.FilterBar.FilterBar('network-panel', true);\n      networkLogView = createNetworkLogView(filterBar);\n      networkLogView.setTextFilterValue('has-overrides:headers');\n\n      networkLogView.markAsRoot();\n      networkLogView.show(document.body);\n      const rootNode = networkLogView.columns().dataGrid().rootNode();\n\n      assert.deepEqual(rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()), [\n        urlHeaderOverridden,\n        urlHeaderAndContentOverridden,\n      ]);\n\n      networkLogView.detach();\n    });\n\n    it('can apply filter - has-overrides:content', async () => {\n      const {urlContentOverridden, urlHeaderAndContentOverridden} = createOverrideRequests();\n\n      const filterBar = new UI.FilterBar.FilterBar('network-panel', true);\n      networkLogView = createNetworkLogView(filterBar);\n      networkLogView.setTextFilterValue('has-overrides:content');\n\n      networkLogView.markAsRoot();\n      networkLogView.show(document.body);\n      const rootNode = networkLogView.columns().dataGrid().rootNode();\n\n      assert.deepEqual(rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()), [\n        urlContentOverridden,\n        urlHeaderAndContentOverridden,\n      ]);\n\n      networkLogView.detach();\n    });\n\n    it('can apply filter - has-overrides:tent', async () => {\n      const {urlHeaderAndContentOverridden, urlContentOverridden} = createOverrideRequests();\n\n      const filterBar = new UI.FilterBar.FilterBar('network-panel', true);\n      networkLogView = createNetworkLogView(filterBar);\n      networkLogView.setTextFilterValue('has-overrides:tent');  // partial text\n\n      networkLogView.markAsRoot();\n      networkLogView.show(document.body);\n      const rootNode = networkLogView.columns().dataGrid().rootNode();\n\n      assert.deepEqual(rootNode.children.map(n => (n as Network.NetworkDataGridNode.NetworkNode).request()?.url()), [\n        urlContentOverridden,\n        urlHeaderAndContentOverridden,\n      ]);\n\n      networkLogView.detach();\n    });\n  };\n\n  describe('without tab target', () => tests(createTarget));\n  describe('with tab target', () => tests(() => {\n                                const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n                                createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n                                return createTarget({parentTarget: tabTarget});\n                              }));\n});\n\nfunction clickCheckbox(checkbox: HTMLInputElement) {\n  checkbox.checked = true;\n  const event = new Event('change');\n  checkbox.dispatchEvent(event);\n}\n\nfunction getCheckbox(filterBar: UI.FilterBar.FilterBar, title: string) {\n  const checkbox =\n      filterBar.element.querySelector(`[title=\"${title}\"] span`)?.shadowRoot?.querySelector('input') || null;\n  assertElement(checkbox, HTMLInputElement);\n  return checkbox;\n}\n\nfunction getRequestTypeDropdownOption(requestType: string): Element|null {\n  const dropDownVbox = document.querySelector('.vbox')?.shadowRoot?.querySelectorAll('.soft-context-menu-item') || [];\n  const dropdownOptions = Array.from(dropDownVbox);\n  return dropdownOptions.find(el => el.textContent?.includes(requestType)) || null;\n}\n\nasync function selectRequestTypesOption(option: string) {\n  const item = getRequestTypeDropdownOption(option);\n  assertElement(item, HTMLElement);\n  dispatchMouseUpEvent(item, {bubbles: true, composed: true});\n  await raf();\n}\n\nasync function openMoreTypesDropdown(\n    filterBar: UI.FilterBar.FilterBar, networkLogView: Network.NetworkLogView.NetworkLogView):\n    Promise<Network.NetworkLogView.MoreFiltersDropDownUI|undefined> {\n  const button = filterBar.element.querySelector('[aria-label=\"Show only/hide requests dropdown\"]')\n                     ?.querySelector('.toolbar-button');\n  button?.dispatchEvent(new Event('click'));\n  await raf();\n  const dropdown = networkLogView.getMoreFiltersDropdown();\n  return dropdown;\n}\n\nfunction setupRequestTypesDropdown() {\n  const filterItems = Object.entries(Common.ResourceType.resourceCategories).map(([key, category]) => ({\n                                                                                   name: category.title(),\n                                                                                   label: () => category.shortTitle(),\n                                                                                   title: category.title(),\n                                                                                   jslogContext: key,\n                                                                                 }));\n\n  const setting = Common.Settings.Settings.instance().createSetting('network-resource-type-filters', {all: true});\n  const dropdown = new Network.NetworkLogView.DropDownTypesUI(filterItems, setting);\n  return dropdown;\n}\n\nfunction getCountAdorner(filterBar: UI.FilterBar.FilterBar): HTMLElement|null {\n  const button = filterBar.element.querySelector('[aria-label=\"Show only/hide requests dropdown\"]')\n                     ?.querySelector('.toolbar-button');\n  return button?.querySelector('.active-filters-count') ?? null;\n}\n\nfunction getMoreFiltersActiveCount(filterBar: UI.FilterBar.FilterBar): string {\n  const countAdorner = getCountAdorner(filterBar);\n  const count = countAdorner?.querySelector('[slot=\"content\"]')?.textContent ?? '';\n  return count;\n}\n\nfunction getSoftMenu(): HTMLElement {\n  const container = document.querySelector('div[data-devtools-glass-pane]');\n  const softMenu = container!.shadowRoot!.querySelector('.soft-context-menu');\n  assertElement(softMenu, HTMLElement);\n  return softMenu;\n}\n\nfunction getDropdownItem(softMenu: HTMLElement, label: string) {\n  const item = softMenu?.querySelector(`[aria-label^=\"${label}\"]`);\n  assertElement(item, HTMLElement);\n  return item;\n}\n\nasync function selectMoreFiltersOption(softMenu: HTMLElement, option: string) {\n  const item = getDropdownItem(softMenu, option);\n  dispatchMouseUpEvent(item);\n  await raf();\n}\n"]}