{"version":3,"file":"RequestHTMLView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/RequestHTMLView.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAGH,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,EAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAC,MAAM,qBAAqB,CAAC;AAE1D,OAAO,qBAAqB,MAAM,0BAA0B,CAAC;AAQ7D,MAAM,CAAC,MAAM,YAAY,GAAS,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;IAC3D,kDAAkD;IAClD,mBAAmB;IACnB,MAAM,CAAC,IAAI,CAAA;aACA,qBAAqB;;QAE1B,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAA;;;iFAGqD,KAAK,CAAC,OAAO;sDACxC,CAAC,CAAC,CAAC,OAAO;WACrD,EACP,MAAM,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;IACzB,kBAAkB;AACpB,CAAC,CAAC;AAEF,MAAM,OAAO,eAAgB,SAAQ,EAAE,CAAC,MAAM,CAAC,IAAI;IACxC,QAAQ,CAAS;IACjB,KAAK,CAAO;IACrB,YAAoB,OAAe,EAAE,IAAI,GAAG,YAAY;QACtD,KAAK,CAAC,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;QAE5B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,WAA8C;QAC1D,MAAM,OAAO,GAAG,WAAW,CAAC,SAAS,EAAE,CAAC;QACxC,OAAO,OAAO,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACvD,CAAC;IAEQ,QAAQ;QACf,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEQ,QAAQ;QACf,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEQ,aAAa;QACpB,IAAI,CAAC,KAAK,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAC,EAAE,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAChE,CAAC;CACF","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, nothing, render} from '../../ui/lit/lit.js';\n\nimport requestHTMLViewStyles from './requestHTMLView.css.js';\n\ninterface ViewInput {\n  dataURL: string|null;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  // Forbid to run JavaScript and set unique origin.\n  // clang-format off\n  render(html`\n    <style>${requestHTMLViewStyles}</style>\n    <div class=\"html request-view widget vbox\">\n      ${input.dataURL ? html`\n        <!-- @ts-ignore -->\n        <iframe class=\"html-preview-frame\" sandbox\n          csp=\"default-src 'none';img-src data:;style-src 'unsafe-inline'\" src=${input.dataURL}\n          tabindex=\"-1\" role=\"presentation\"></iframe>` : nothing}\n    </div>`,\n    target, {host: input});\n  // clang-format on\n};\n\nexport class RequestHTMLView extends UI.Widget.VBox {\n  readonly #dataURL: string;\n  readonly #view: View;\n  private constructor(dataURL: string, view = DEFAULT_VIEW) {\n    super({useShadowDom: true});\n\n    this.#dataURL = dataURL;\n    this.#view = view;\n  }\n\n  static create(contentData: TextUtils.ContentData.ContentData): RequestHTMLView|null {\n    const dataURL = contentData.asDataUrl();\n    return dataURL ? new RequestHTMLView(dataURL) : null;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.requestUpdate();\n  }\n\n  override willHide(): void {\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    this.#view({dataURL: this.#dataURL}, {}, this.contentElement);\n  }\n}\n"]}