{"version":3,"file":"ResourceDirectSocketChunkView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/ResourceDirectSocketChunkView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {BinaryResourceView} from './BinaryResourceView.js';\nimport {DataGridItem, ResourceChunkView} from './ResourceChunkView.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Event Source Messages View of the Network panel\n   */\n  data: 'Data',\n  /**\n   *@description Text in Messages View of the Network panel\n   */\n  length: 'Length',\n  /**\n   *@description Text that refers to the time\n   */\n  time: 'Time',\n  /**\n   *@description Text in Messages View of the Network panel\n   */\n  address: 'Address',\n  /**\n   *@description Text in Messages View of the Network panel\n   */\n  port: 'Port',\n  /**\n   *@description Data grid name for Direct Socket Chunk data grids\n   */\n  directSocketChunk: 'Direct Socket Chunk',\n  /**\n   *@description Example for placeholder text. Note: \"(direct)?socket)\" is an example code and should not be translated.\n   */\n  filterUsingRegex: 'Filter using regex (example: `(direct)?socket)`',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/ResourceDirectSocketChunkView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ResourceDirectSocketChunkView extends ResourceChunkView<SDK.NetworkRequest.DirectSocketChunk> {\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super(\n        request, 'network-direct-socket-chunk-filter', 'resource-direct-socket-chunk-split-view-state',\n        i18nString(UIStrings.directSocketChunk), i18nString(UIStrings.filterUsingRegex));\n    this.element.setAttribute('jslog', `${VisualLogging.pane('direct-socket-messages').track({resize: true})}`);\n  }\n\n  override getRequestChunks(): SDK.NetworkRequest.DirectSocketChunk[] {\n    return this.request.directSocketChunks();\n  }\n  override chunkFilter(chunk: SDK.NetworkRequest.DirectSocketChunk): boolean {\n    if (this.filterType && chunk.type !== this.filterType) {\n      return false;\n    }\n    return !this.filterRegex || this.filterRegex.test(chunk.data);\n  }\n\n  override createGridItem(chunk: SDK.NetworkRequest.DirectSocketChunk): DataGridItem {\n    return new ResourceChunkNode(\n        chunk, this.request.directSocketInfo?.type === SDK.NetworkRequest.DirectSocketType.UDP_BOUND);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.refresh();\n    this.request.addEventListener(\n        SDK.NetworkRequest.Events.DIRECTSOCKET_CHUNK_ADDED, this.onDirectSocketChunkAdded, this);\n  }\n\n  override willHide(): void {\n    this.request.removeEventListener(\n        SDK.NetworkRequest.Events.DIRECTSOCKET_CHUNK_ADDED, this.onDirectSocketChunkAdded, this);\n  }\n\n  private onDirectSocketChunkAdded(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.DirectSocketChunk>):\n      void {\n    this.chunkAdded(event.data);\n  }\n\n  override getColumns(): DataGrid.DataGrid.ColumnDescriptor[] {\n    if (this.request.directSocketInfo?.type === SDK.NetworkRequest.DirectSocketType.UDP_BOUND) {\n      return [\n        {\n          id: 'data',\n          title: i18nString(UIStrings.data),\n          sortable: false,\n          weight: 63,\n        },\n        {\n          id: 'address',\n          title: i18nString(UIStrings.address),\n          sortable: false,\n          align: DataGrid.DataGrid.Align.RIGHT,\n          weight: 15,\n        },\n        {\n          id: 'port',\n          title: i18nString(UIStrings.port),\n          sortable: false,\n          align: DataGrid.DataGrid.Align.RIGHT,\n          weight: 10,\n        },\n        {\n          id: 'length',\n          title: i18nString(UIStrings.length),\n          sortable: false,\n          align: DataGrid.DataGrid.Align.RIGHT,\n          weight: 5,\n        },\n        {\n          id: 'time',\n          title: i18nString(UIStrings.time),\n          sortable: true,\n          weight: 7,\n        },\n      ];\n    }\n    return super.getColumns();\n  }\n}\n\nclass ResourceChunkNode extends DataGridItem {\n  #binaryView: BinaryResourceView|null = null;\n  readonly chunk: SDK.NetworkRequest.DirectSocketChunk;\n\n  constructor(chunk: SDK.NetworkRequest.DirectSocketChunk, boundSocket: boolean) {\n    const time = new Date(chunk.timestamp * 1000);\n    const timeText = ('0' + time.getHours()).substr(-2) + ':' + ('0' + time.getMinutes()).substr(-2) + ':' +\n        ('0' + time.getSeconds()).substr(-2) + '.' + ('00' + time.getMilliseconds()).substr(-3);\n    const timeNode = document.createElement('div');\n    UI.UIUtils.createTextChild(timeNode, timeText);\n    UI.Tooltip.Tooltip.install(timeNode, time.toLocaleString());\n\n    let description: string;\n    const length = i18n.ByteUtilities.bytesToString(Platform.StringUtilities.base64ToSize(chunk.data));\n    const maxDisplayLen = 30;\n    if (chunk.data.length > maxDisplayLen) {\n      description = chunk.data.substring(0, maxDisplayLen) + '...';\n    } else {\n      description = chunk.data;\n    }\n\n    if (boundSocket) {\n      super({data: description, address: chunk.remoteAddress, port: chunk.remotePort, length, time: timeNode});\n    } else {\n      super({data: description, length, time: timeNode});\n    }\n\n    this.chunk = chunk;\n  }\n\n  override createCells(element: Element): void {\n    element.classList.toggle(\n        'resource-chunk-view-row-send', this.chunk.type === SDK.NetworkRequest.DirectSocketChunkType.SEND);\n    element.classList.toggle(\n        'resource-chunk-view-row-receive', this.chunk.type === SDK.NetworkRequest.DirectSocketChunkType.RECEIVE);\n    super.createCells(element);\n  }\n\n  override nodeSelfHeight(): number {\n    return 21;\n  }\n\n  override dataText(): string {\n    return this.chunk.data;\n  }\n\n  override binaryView(): BinaryResourceView|null {\n    if (!this.#binaryView) {\n      if (this.dataText().length > 0) {\n        this.#binaryView = new BinaryResourceView(\n            TextUtils.StreamingContentData.StreamingContentData.from(\n                new TextUtils.ContentData.ContentData(this.dataText(), true, 'application/octet-stream')),\n            Platform.DevToolsPath.EmptyUrlString, Common.ResourceType.resourceTypes.DirectSocket);\n      }\n    }\n    return this.#binaryView;\n  }\n\n  override getTime(): number {\n    return this.chunk.timestamp;\n  }\n}\n"]}