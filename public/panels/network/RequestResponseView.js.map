{"version":3,"file":"RequestResponseView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/RequestResponseView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Lit from '../../third_party/lit/lit.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {BinaryResourceView} from './BinaryResourceView.js';\n\nconst {html, render} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text in Request Response View of the Network panel if no preview can be shown\n   */\n  noPreview: 'Nothing to preview',\n  /**\n   * @description Text in Request Response View of the Network panel\n   */\n  thisRequestHasNoResponseData: 'This request has no response data available',\n  /**\n   * @description Text in Request Preview View of the Network panel\n   */\n  failedToLoadResponseData: 'Failed to load response data',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestResponseView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ViewInput {\n  request: SDK.NetworkRequest.NetworkRequest;\n  contentData: TextUtils.StreamingContentData.StreamingContentDataOrError;\n  mimeType: string;\n  renderAsText: boolean;\n}\n\nexport interface ViewOutput {\n  revealPosition: (position: SourceFrame.SourceFrame.RevealPosition) => Promise<void>;\n}\n\nconst widgetConfig = UI.Widget.widgetConfig;\nconst widgetRef = UI.Widget.widgetRef;\ntype View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input: ViewInput, output: ViewOutput, target: HTMLElement): void => {\n  let widget;\n  if (TextUtils.StreamingContentData.isError(input.contentData)) {\n    // clang-format off\n    widget = html`<devtools-widget\n                    .widgetConfig=${widgetConfig(element => new UI.EmptyWidget.EmptyWidget(\n                      i18nString(UIStrings.failedToLoadResponseData), (input.contentData as {error: string}).error,\n                      element))}></devtools-widget>`;\n    // clang-format on\n  } else if (input.request.statusCode === 204) {\n    // clang-format off\n    widget = html`<devtools-widget\n                     .widgetConfig=${widgetConfig(element => new UI.EmptyWidget.EmptyWidget(\n                        i18nString(UIStrings.noPreview), i18nString(UIStrings.thisRequestHasNoResponseData),\n                        element))}></devtools-widget>`;\n    // clang-format on\n  } else if (input.renderAsText) {\n    // clang-format off\n    widget = html`<devtools-widget\n                    .widgetConfig=${widgetConfig(element => new SourceFrame.ResourceSourceFrame.SearchableContainer(\n                        input.request, input.mimeType, element))}\n                    ${widgetRef(SourceFrame.ResourceSourceFrame.SearchableContainer, widget => {output.revealPosition = widget.revealPosition.bind(widget);})}></devtools-widget>`;\n    // clang-format on\n  } else {\n    // clang-format off\n    widget = html`<devtools-widget\n                    .widgetConfig=${widgetConfig(element => new BinaryResourceView(\n                      input.contentData as TextUtils.StreamingContentData.StreamingContentData, input.request.url(),\n                      input.request.resourceType(), element))}></devtools-widget>`;\n    // clang-format on\n  }\n\n  render(widget, target);\n};\n\nexport class RequestResponseView extends UI.Widget.VBox {\n  request: SDK.NetworkRequest.NetworkRequest;\n  #view: View;\n  #revealPosition?: (position: SourceFrame.SourceFrame.RevealPosition) => Promise<void>;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest, view = DEFAULT_VIEW) {\n    super();\n    this.request = request;\n    this.#view = view;\n  }\n\n  override wasShown(): void {\n    this.requestUpdate();\n  }\n\n  override async performUpdate(): Promise<void> {\n    const contentData = await this.request.requestStreamingContent();\n    let renderAsText = false;\n\n    const mimeType = this.getMimeTypeForDisplay();\n    if (!TextUtils.StreamingContentData.isError(contentData)) {\n      const isWasm = contentData.mimeType === 'application/wasm';\n      renderAsText = contentData.isTextContent || isWasm;\n\n      const isMinified =\n          isWasm || !contentData.isTextContent ? false : TextUtils.TextUtils.isMinified(contentData.content().text);\n      const mediaType = Common.ResourceType.ResourceType.mediaTypeForMetrics(\n          mimeType, this.request.resourceType().isFromSourceMap(), isMinified, false, false);\n      Host.userMetrics.networkPanelResponsePreviewOpened(mediaType);\n    }\n\n    const viewInput = {request: this.request, contentData, mimeType, renderAsText};\n    const that = this;\n    const viewOutput = {\n      set revealPosition(reveal: (position: SourceFrame.SourceFrame.RevealPosition) => Promise<void>) {\n        that.#revealPosition = reveal;\n      },\n    };\n\n    this.#view(viewInput, viewOutput, this.contentElement);\n  }\n\n  getMimeTypeForDisplay(): string {\n    // If the main document is of type JSON (or any JSON subtype), do not use the more generic canonical MIME type,\n    // which would prevent the JSON from being pretty-printed. See https://crbug.com/406900\n    if (Common.ResourceType.ResourceType.simplifyContentType(this.request.mimeType) === 'application/json') {\n      return this.request.mimeType;\n    }\n    return this.request.resourceType().canonicalMimeType() || this.request.mimeType;\n  }\n\n  async revealPosition(position: SourceFrame.SourceFrame.RevealPosition): Promise<void> {\n    this.requestUpdate();\n    await this.updateComplete;\n    await this.#revealPosition?.(position);\n  }\n}\n"]}