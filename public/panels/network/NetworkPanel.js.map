{"version":3,"file":"NetworkPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/NetworkPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008, 2009 Anthony Ricaud <rik@webkit.org>\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Extensions from '../../models/extensions/extensions.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\nimport * as Search from '../search/search.js';\n\nimport {Events, type RequestActivatedEvent} from './NetworkDataGridNode.js';\nimport {NetworkItemView} from './NetworkItemView.js';\nimport {NetworkLogView} from './NetworkLogView.js';\nimport {NetworkOverview} from './NetworkOverview.js';\nimport networkPanelStyles from './networkPanel.css.js';\nimport {NetworkSearchScope} from './NetworkSearchScope.js';\nimport {type NetworkTimeCalculator, NetworkTransferTimeCalculator} from './NetworkTimeCalculator.js';\n\nconst UIStrings = {\n  /**\n   *@description Text to close something\n   */\n  close: 'Close',\n  /**\n   *@description Title of a search bar or tool\n   */\n  search: 'Search',\n  /**\n   *@description Tooltip text that appears on the setting to preserve log when hovering over the item\n   */\n  doNotClearLogOnPageReload: 'Do not clear log on page reload / navigation',\n  /**\n   *@description Text to preserve the log after refreshing\n   */\n  preserveLog: 'Preserve log',\n  /**\n   *@description Text to disable cache while DevTools is open\n   */\n  disableCacheWhileDevtoolsIsOpen: 'Disable cache while DevTools is open',\n  /**\n   *@description Text in Network Config View of the Network panel\n   */\n  disableCache: 'Disable cache',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon settings gear in show settings pane setting in network panel of the network panel\n   */\n  networkSettings: 'Network settings',\n  /**\n   *@description Tooltip for expanding network request row setting\n   */\n  showMoreInformationInRequestRows: 'Show more information in request rows',\n  /**\n   *@description Text in Network Panel used to toggle the \"big request rows\" setting.\n   */\n  useLargeRequestRows: 'Big request rows',\n  /**\n   *@description Tooltip text for network request overview setting\n   */\n  showOverviewOfNetworkRequests: 'Show overview of network requests',\n  /**\n   *@description Text in Network Panel used to show the overview for a given network request.\n   */\n  showOverview: 'Overview',\n  /**\n   *@description Tooltip for group by frame network setting\n   */\n  groupRequestsByTopLevelRequest: 'Group requests by top level request frame',\n  /**\n   *@description Text for group by frame network setting\n   */\n  groupByFrame: 'Group by frame',\n  /**\n   *@description Tooltip for capture screenshot network setting\n   */\n  captureScreenshotsWhenLoadingA: 'Capture screenshots when loading a page',\n  /**\n   *@description Text to take screenshots\n   */\n  captureScreenshots: 'Screenshots',\n  /**\n   * @description Tooltip text that appears when hovering over the largeicon load button in the\n   * Network Panel. This action prompts the user to select a HAR file to upload to DevTools.\n   */\n  importHarFile: 'Import `HAR` file...',\n  /**\n   * @description Tooltip text that appears when hovering over the download button in the Network\n   * panel, when the setting to allow generating HAR files with sensitive data is enabled. HAR is\n   * a file format (HTTP Archive) and should not be translated. This action triggers a context\n   * menu with two options, one to download HAR sanitized and one to download HAR with sensitive\n   * data.\n   */\n  exportHar: 'Export `HAR` (either sanitized or with sensitive data)',\n  /**\n   * @description Tooltip text that appears when hovering over the download button in the Network\n   * panel, when the setting to allow generating HAR files with sensitive data is disabled. HAR is\n   * a file format (HTTP Archive) and should not be translated. This action triggers the download\n   * of a HAR file.\n   *\n   * This string is also used as the first item in the context menu for the download button in\n   * the Network panel, when the setting to allow generating HAR files with sensitive data is\n   * enabled.\n   */\n  exportHarSanitized: 'Export `HAR` (sanitized)...',\n  /**\n   * @description Context menu item in the context menu for the download button of the Network panel,\n   * which is only available when the Network setting to allow generating HAR with sensitive data\n   * is active. HAR is a file format (HTTP Archive) and should not be translated. This action\n   * triggers the download of a HAR file with sensitive data included.\n   */\n  exportHarWithSensitiveData: 'Export `HAR` (with sensitive data)...',\n  /**\n   *@description Text for throttling the network\n   */\n  throttling: 'Throttling',\n  /**\n   *@description Text in Network Panel to tell the user to reload the page to capture screenshots.\n   *@example {Ctrl + R} PH1\n   */\n  hitSToReloadAndCaptureFilmstrip: 'Hit {PH1} to reload and capture filmstrip.',\n  /**\n   * @description A context menu item that is shown for resources in other panels\n   * to open them in the Network panel.\n   */\n  openInNetworkPanel: 'Open in Network panel',\n  /**\n   * @description A context menu item that is shown for resources in other panels\n   * to open them in the Network panel, but when there's no associated network\n   * request. This context menu item is always disabled and only provided to give\n   * the developer an idea of why they cannot open the resource in the Network\n   * panel.\n   */\n  openInNetworkPanelMissingRequest: 'Open in Network panel (missing request)',\n  /**\n   *@description Text in Network Panel that is displayed whilst the recording is in progress.\n   */\n  recordingFrames: 'Recording frames...',\n  /**\n   *@description Text in Network Panel that is displayed when frames are being fetched.\n   */\n  fetchingFrames: 'Fetching frames...',\n  /**\n   * @description Text of a button in the Network panel's toolbar that open Network Conditions panel in the drawer.\n   */\n  moreNetworkConditions: 'More network conditions…',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet networkPanelInstance: NetworkPanel;\n\nexport class NetworkPanel extends UI.Panel.Panel implements\n    UI.ContextMenu\n        .Provider<SDK.NetworkRequest.NetworkRequest|SDK.Resource.Resource|Workspace.UISourceCode.UISourceCode>,\n    UI.View.ViewLocationResolver {\n  private readonly networkLogShowOverviewSetting: Common.Settings.Setting<boolean>;\n  private readonly networkLogLargeRowsSetting: Common.Settings.Setting<boolean>;\n  private readonly networkRecordFilmStripSetting: Common.Settings.Setting<boolean>;\n  private readonly toggleRecordAction: UI.ActionRegistration.Action;\n  private pendingStopTimer!: number|undefined;\n  networkItemView: NetworkItemView|null;\n  private filmStripView: PerfUI.FilmStripView.FilmStripView|null;\n  private filmStripRecorder: FilmStripRecorder|null;\n  private currentRequest: SDK.NetworkRequest.NetworkRequest|null;\n  private readonly panelToolbar: UI.Toolbar.Toolbar;\n  private readonly rightToolbar: UI.Toolbar.Toolbar;\n  private readonly filterBar: UI.FilterBar.FilterBar;\n  private showSettingsPaneSetting: Common.Settings.Setting<boolean>;\n  private readonly filmStripPlaceholderElement: HTMLElement;\n  private readonly overviewPane: PerfUI.TimelineOverviewPane.TimelineOverviewPane;\n  private readonly networkOverview: NetworkOverview;\n  private readonly overviewPlaceholderElement: HTMLElement;\n  private readonly calculator: NetworkTransferTimeCalculator;\n  private splitWidget: UI.SplitWidget.SplitWidget;\n  private readonly sidebarLocation: UI.View.TabbedViewLocation;\n  private readonly progressBarContainer: HTMLDivElement;\n  networkLogView: NetworkLogView;\n  private readonly fileSelectorElement: HTMLElement;\n  private readonly detailsWidget: UI.Widget.VBox;\n  private readonly closeButtonElement: UI.UIUtils.DevToolsCloseButton;\n  private preserveLogSetting: Common.Settings.Setting<boolean>;\n  recordLogSetting: Common.Settings.Setting<boolean>;\n  private readonly throttlingSelect: UI.Toolbar.ToolbarComboBox;\n  private readonly displayScreenshotDelay: number;\n\n  constructor(displayScreenshotDelay: number) {\n    super('network');\n    this.registerRequiredCSS(networkPanelStyles);\n\n    this.displayScreenshotDelay = displayScreenshotDelay;\n    this.networkLogShowOverviewSetting =\n        Common.Settings.Settings.instance().createSetting('network-log-show-overview', true);\n    this.networkLogLargeRowsSetting =\n        Common.Settings.Settings.instance().createSetting('network-log-large-rows', false);\n    this.networkRecordFilmStripSetting =\n        Common.Settings.Settings.instance().createSetting('network-record-film-strip-setting', false);\n    this.toggleRecordAction = UI.ActionRegistry.ActionRegistry.instance().getAction('network.toggle-recording');\n    this.networkItemView = null;\n    this.filmStripView = null;\n    this.filmStripRecorder = null;\n    this.currentRequest = null;\n\n    const panel = new UI.Widget.VBox();\n\n    const networkToolbarContainer = panel.contentElement.createChild('div', 'network-toolbar-container');\n    networkToolbarContainer.role = 'toolbar';\n    this.panelToolbar = networkToolbarContainer.createChild('devtools-toolbar');\n    this.panelToolbar.role = 'presentation';\n    this.panelToolbar.wrappable = true;\n    this.panelToolbar.setAttribute('jslog', `${VisualLogging.toolbar('network-main')}`);\n    this.rightToolbar = networkToolbarContainer.createChild('devtools-toolbar');\n    this.rightToolbar.role = 'presentation';\n\n    this.filterBar = new UI.FilterBar.FilterBar('network-panel', true);\n    this.filterBar.show(panel.contentElement);\n    this.filterBar.addEventListener(UI.FilterBar.FilterBarEvents.CHANGED, this.handleFilterChanged.bind(this));\n\n    const settingsPane = panel.contentElement.createChild('div', 'network-settings-pane');\n    settingsPane.append(\n        UI.SettingsUI.createSettingCheckbox(\n            i18nString(UIStrings.useLargeRequestRows), this.networkLogLargeRowsSetting,\n            i18nString(UIStrings.showMoreInformationInRequestRows)),\n        UI.SettingsUI.createSettingCheckbox(\n            i18nString(UIStrings.groupByFrame),\n            Common.Settings.Settings.instance().moduleSetting('network.group-by-frame'),\n            i18nString(UIStrings.groupRequestsByTopLevelRequest)),\n        UI.SettingsUI.createSettingCheckbox(\n            i18nString(UIStrings.showOverview), this.networkLogShowOverviewSetting,\n            i18nString(UIStrings.showOverviewOfNetworkRequests)),\n        UI.SettingsUI.createSettingCheckbox(\n            i18nString(UIStrings.captureScreenshots), this.networkRecordFilmStripSetting,\n            i18nString(UIStrings.captureScreenshotsWhenLoadingA)),\n\n    );\n    this.showSettingsPaneSetting =\n        Common.Settings.Settings.instance().createSetting('network-show-settings-toolbar', false);\n    settingsPane.classList.toggle('hidden', !this.showSettingsPaneSetting.get());\n    this.showSettingsPaneSetting.addChangeListener(\n        () => settingsPane.classList.toggle('hidden', !this.showSettingsPaneSetting.get()));\n\n    this.filmStripPlaceholderElement = panel.contentElement.createChild('div', 'network-film-strip-placeholder');\n\n    // Create top overview component.\n    this.overviewPane = new PerfUI.TimelineOverviewPane.TimelineOverviewPane('network');\n    this.overviewPane.addEventListener(\n        PerfUI.TimelineOverviewPane.Events.OVERVIEW_PANE_WINDOW_CHANGED, this.onWindowChanged.bind(this));\n    this.overviewPane.element.id = 'network-overview-panel';\n    this.networkOverview = new NetworkOverview();\n    this.overviewPane.setOverviewControls([this.networkOverview]);\n    this.overviewPlaceholderElement = panel.contentElement.createChild('div');\n\n    this.calculator = new NetworkTransferTimeCalculator();\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(true, false, 'network-panel-split-view-state');\n    this.splitWidget.hideMain();\n    this.splitWidget.show(panel.contentElement);\n\n    panel.setDefaultFocusedChild(this.filterBar);\n\n    const initialSidebarWidth = 225;\n    const splitWidget = new UI.SplitWidget.SplitWidget(true, false, 'network-panel-sidebar-state', initialSidebarWidth);\n    splitWidget.hideSidebar();\n    splitWidget.enableShowModeSaving();\n    splitWidget.show(this.element);\n    this.sidebarLocation = UI.ViewManager.ViewManager.instance().createTabbedLocation(async () => {\n      void UI.ViewManager.ViewManager.instance().showView('network');\n      splitWidget.showBoth();\n    }, 'network-sidebar', true);\n    const tabbedPane = this.sidebarLocation.tabbedPane();\n    tabbedPane.setMinimumSize(100, 25);\n    tabbedPane.element.classList.add('network-tabbed-pane');\n    tabbedPane.element.addEventListener('keydown', event => {\n      if (event.key !== Platform.KeyboardUtilities.ESCAPE_KEY) {\n        return;\n      }\n      splitWidget.hideSidebar();\n      event.consume();\n      void VisualLogging.logKeyDown(event.currentTarget, event, 'hide-sidebar');\n    });\n    const closeSidebar = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.close), 'cross');\n    closeSidebar.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => splitWidget.hideSidebar());\n    closeSidebar.element.setAttribute('jslog', `${VisualLogging.close().track({click: true})}`);\n    tabbedPane.rightToolbar().appendToolbarItem(closeSidebar);\n    splitWidget.setSidebarWidget(tabbedPane);\n    splitWidget.setMainWidget(panel);\n    splitWidget.setDefaultFocusedChild(panel);\n    this.setDefaultFocusedChild(splitWidget);\n\n    this.progressBarContainer = document.createElement('div');\n\n    this.networkLogView =\n        new NetworkLogView(this.filterBar, this.progressBarContainer, this.networkLogLargeRowsSetting);\n    this.splitWidget.setSidebarWidget(this.networkLogView);\n    this.fileSelectorElement =\n        (UI.UIUtils.createFileSelectorElement(this.networkLogView.onLoadFromFile.bind(this.networkLogView)) as\n         HTMLElement);\n    panel.element.appendChild(this.fileSelectorElement);\n\n    this.detailsWidget = new UI.Widget.VBox();\n    this.detailsWidget.element.classList.add('network-details-view');\n    this.splitWidget.setMainWidget(this.detailsWidget);\n\n    this.closeButtonElement = document.createElement('dt-close-button');\n    this.closeButtonElement.addEventListener('click', async () => {\n      const action = UI.ActionRegistry.ActionRegistry.instance().getAction('network.hide-request-details');\n      await action.execute();\n    }, false);\n    this.closeButtonElement.style.margin = '0 5px';\n\n    this.networkLogShowOverviewSetting.addChangeListener(this.toggleShowOverview, this);\n    this.networkLogLargeRowsSetting.addChangeListener(this.toggleLargerRequests, this);\n    this.networkRecordFilmStripSetting.addChangeListener(this.toggleRecordFilmStrip, this);\n\n    this.preserveLogSetting = Common.Settings.Settings.instance().moduleSetting('network-log.preserve-log');\n    this.recordLogSetting = Common.Settings.Settings.instance().moduleSetting('network-log.record-log');\n    this.recordLogSetting.addChangeListener(({data}) => this.toggleRecord(data));\n\n    this.throttlingSelect = this.createThrottlingConditionsSelect();\n    this.setupToolbarButtons(splitWidget);\n\n    this.toggleRecord(this.recordLogSetting.get());\n    this.toggleShowOverview();\n    this.toggleLargerRequests();\n    this.toggleRecordFilmStrip();\n    this.updateUI();\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.WillReloadPage, this.willReloadPage, this,\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.Load, this.load, this, {scoped: true});\n    this.networkLogView.addEventListener(Events.RequestSelected, this.onRequestSelected, this);\n    this.networkLogView.addEventListener(Events.RequestActivated, this.onRequestActivated, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(\n        Logs.NetworkLog.Events.RequestAdded, this.onUpdateRequest, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(\n        Logs.NetworkLog.Events.RequestUpdated, this.onUpdateRequest, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(Logs.NetworkLog.Events.Reset, this.onNetworkLogReset, this);\n  }\n\n  static instance(opts?: {\n    forceNew: boolean,\n    displayScreenshotDelay?: number,\n  }): NetworkPanel {\n    if (!networkPanelInstance || opts?.forceNew) {\n      networkPanelInstance = new NetworkPanel(opts?.displayScreenshotDelay ?? 1000);\n    }\n\n    return networkPanelInstance;\n  }\n\n  static revealAndFilter(filters: Array<{\n    filterType: NetworkForward.UIFilter.FilterType | null,\n    filterValue: string,\n  }>): Promise<void> {\n    const panel = NetworkPanel.instance();\n    let filterString = '';\n    for (const filter of filters) {\n      if (filter.filterType) {\n        filterString += `${filter.filterType}:${filter.filterValue} `;\n      } else {\n        filterString += `${filter.filterValue} `;\n      }\n    }\n    panel.networkLogView.setTextFilterValue(filterString);\n    return UI.ViewManager.ViewManager.instance().showView('network');\n  }\n\n  throttlingSelectForTest(): UI.Toolbar.ToolbarComboBox {\n    return this.throttlingSelect;\n  }\n\n  private onWindowChanged(\n      event: Common.EventTarget.EventTargetEvent<PerfUI.TimelineOverviewPane.OverviewPaneWindowChangedEvent>): void {\n    const startTime = Math.max(this.calculator.minimumBoundary(), event.data.startTime / 1000);\n    const endTime = Math.min(this.calculator.maximumBoundary(), event.data.endTime / 1000);\n    if (startTime === this.calculator.minimumBoundary() && endTime === this.calculator.maximumBoundary()) {\n      // Reset the filters for NetworkLogView when the window is reset\n      // to its boundaries. This clears the filters and allows the users\n      // to see the incoming requests after they have updated the curtains\n      // to be in the edges. (ex: by double clicking on the overview grid)\n      this.networkLogView.setWindow(0, 0);\n    } else {\n      this.networkLogView.setWindow(startTime, endTime);\n    }\n  }\n\n  private async searchToggleClick(): Promise<void> {\n    const action = UI.ActionRegistry.ActionRegistry.instance().getAction('network.search');\n    await action.execute();\n  }\n\n  private setupToolbarButtons(splitWidget: UI.SplitWidget.SplitWidget): void {\n    const searchToggle = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.search), 'search', undefined, 'search');\n    function updateSidebarToggle(): void {\n      const isSidebarShowing = splitWidget.showMode() !== UI.SplitWidget.ShowMode.ONLY_MAIN;\n      searchToggle.setToggled(isSidebarShowing);\n      if (!isSidebarShowing) {\n        (searchToggle.element as HTMLElement).focus();\n      }\n    }\n    this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.toggleRecordAction));\n    this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton('network.clear'));\n    this.panelToolbar.appendSeparator();\n\n    this.panelToolbar.appendToolbarItem(this.filterBar.filterButton());\n    updateSidebarToggle();\n    splitWidget.addEventListener(UI.SplitWidget.Events.SHOW_MODE_CHANGED, updateSidebarToggle);\n    searchToggle.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      void this.searchToggleClick();\n    });\n    this.panelToolbar.appendToolbarItem(searchToggle);\n    this.panelToolbar.appendSeparator();\n\n    this.panelToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        this.preserveLogSetting, i18nString(UIStrings.doNotClearLogOnPageReload), i18nString(UIStrings.preserveLog)));\n\n    this.panelToolbar.appendSeparator();\n    const disableCacheCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        Common.Settings.Settings.instance().moduleSetting('cache-disabled'),\n        i18nString(UIStrings.disableCacheWhileDevtoolsIsOpen), i18nString(UIStrings.disableCache));\n    this.panelToolbar.appendToolbarItem(disableCacheCheckbox);\n\n    this.panelToolbar.appendToolbarItem(this.throttlingSelect);\n\n    const networkConditionsButton = new UI.Toolbar.ToolbarButton(\n        i18nString(UIStrings.moreNetworkConditions), 'network-settings', undefined, 'network-conditions');\n    networkConditionsButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      void UI.ViewManager.ViewManager.instance().showView('network.config');\n    }, this);\n    this.panelToolbar.appendToolbarItem(networkConditionsButton);\n\n    this.rightToolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.progressBarContainer));\n    this.rightToolbar.appendSeparator();\n    this.rightToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingToggle(\n        this.showSettingsPaneSetting, 'gear', i18nString(UIStrings.networkSettings), 'gear-filled',\n        'network-settings'));\n\n    const exportHarContextMenu = (contextMenu: UI.ContextMenu.ContextMenu): void => {\n      contextMenu.defaultSection().appendItem(\n          i18nString(UIStrings.exportHarSanitized),\n          this.networkLogView.exportAll.bind(this.networkLogView, {sanitize: true}),\n          {jslogContext: 'export-har'},\n      );\n      contextMenu.defaultSection().appendItem(\n          i18nString(UIStrings.exportHarWithSensitiveData),\n          this.networkLogView.exportAll.bind(this.networkLogView, {sanitize: false}),\n          {jslogContext: 'export-har-with-sensitive-data'},\n      );\n    };\n\n    this.panelToolbar.appendSeparator();\n    const importHarButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.importHarFile), 'import', undefined, 'import-har');\n    importHarButton.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.CLICK, () => this.fileSelectorElement.click(), this);\n    this.panelToolbar.appendToolbarItem(importHarButton);\n    const exportHarButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.exportHarSanitized), 'download', undefined, 'export-har');\n    exportHarButton.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.CLICK,\n        this.networkLogView.exportAll.bind(this.networkLogView, {sanitize: true}), this);\n    this.panelToolbar.appendToolbarItem(exportHarButton);\n    const exportHarMenuButton = new UI.Toolbar.ToolbarMenuButton(\n        exportHarContextMenu, /* isIconDropdown */ true, /* useSoftMenu */ false, 'export-har-menu', 'download');\n    exportHarMenuButton.setTitle(i18nString(UIStrings.exportHar));\n    this.panelToolbar.appendToolbarItem(exportHarMenuButton);\n\n    const networkShowOptionsToGenerateHarWithSensitiveData = Common.Settings.Settings.instance().createSetting(\n        'network.show-options-to-generate-har-with-sensitive-data', false);\n    const updateShowOptionsToGenerateHarWithSensitiveData = (): void => {\n      const showOptionsToGenerateHarWithSensitiveData = networkShowOptionsToGenerateHarWithSensitiveData.get();\n      exportHarButton.setVisible(!showOptionsToGenerateHarWithSensitiveData);\n      exportHarMenuButton.setVisible(showOptionsToGenerateHarWithSensitiveData);\n    };\n    networkShowOptionsToGenerateHarWithSensitiveData.addChangeListener(updateShowOptionsToGenerateHarWithSensitiveData);\n    updateShowOptionsToGenerateHarWithSensitiveData();\n  }\n\n  private createThrottlingConditionsSelect(): UI.Toolbar.ToolbarComboBox {\n    const toolbarItem = new UI.Toolbar.ToolbarComboBox(null, i18nString(UIStrings.throttling));\n    toolbarItem.setMaxWidth(160);\n    MobileThrottling.ThrottlingManager.throttlingManager().createNetworkThrottlingSelector(toolbarItem.element);\n    return toolbarItem;\n  }\n\n  toggleRecord(toggled: boolean): void {\n    this.toggleRecordAction.setToggled(toggled);\n    if (this.recordLogSetting.get() !== toggled) {\n      this.recordLogSetting.set(toggled);\n    }\n\n    this.networkLogView.setRecording(toggled);\n    if (!toggled && this.filmStripRecorder) {\n      this.filmStripRecorder.stopRecording(this.filmStripAvailable.bind(this));\n    }\n  }\n\n  private filmStripAvailable(filmStrip: Trace.Extras.FilmStrip.Data): void {\n    if (this.filmStripView) {\n      this.filmStripView.setModel(filmStrip);\n    }\n    const timestamps = filmStrip.frames.map(frame => {\n      // The network view works in seconds.\n      return Trace.Helpers.Timing.microToSeconds(frame.screenshotEvent.ts);\n    });\n\n    this.networkLogView.addFilmStripFrames(timestamps);\n  }\n\n  private onNetworkLogReset(event: Common.EventTarget.EventTargetEvent<Logs.NetworkLog.ResetEvent>): void {\n    const {clearIfPreserved} = event.data;\n    if (!this.preserveLogSetting.get() || clearIfPreserved) {\n      this.calculator.reset();\n      this.overviewPane.reset();\n    }\n    if (this.filmStripView) {\n      this.resetFilmStripView();\n    }\n  }\n\n  private willReloadPage(): void {\n    if (this.pendingStopTimer) {\n      clearTimeout(this.pendingStopTimer);\n      delete this.pendingStopTimer;\n    }\n    if (this.isShowing() && this.filmStripRecorder) {\n      this.filmStripRecorder.startRecording();\n    }\n  }\n\n  private load(): void {\n    if (this.filmStripRecorder?.isRecording()) {\n      if (this.pendingStopTimer) {\n        window.clearTimeout(this.pendingStopTimer);\n      }\n      this.pendingStopTimer = window.setTimeout(this.stopFilmStripRecording.bind(this), this.displayScreenshotDelay);\n    }\n  }\n\n  private stopFilmStripRecording(): void {\n    if (this.filmStripRecorder) {\n      this.filmStripRecorder.stopRecording(this.filmStripAvailable.bind(this));\n    }\n    delete this.pendingStopTimer;\n  }\n\n  private toggleLargerRequests(): void {\n    this.updateUI();\n  }\n\n  private toggleShowOverview(): void {\n    const toggled = this.networkLogShowOverviewSetting.get();\n    if (toggled) {\n      this.overviewPane.show(this.overviewPlaceholderElement);\n    } else {\n      this.overviewPane.detach();\n    }\n    this.doResize();\n  }\n\n  private toggleRecordFilmStrip(): void {\n    const toggled = this.networkRecordFilmStripSetting.get();\n    if (toggled && !this.filmStripRecorder) {\n      this.filmStripView = new PerfUI.FilmStripView.FilmStripView();\n      this.filmStripView.element.classList.add('network-film-strip');\n      this.filmStripView.element.setAttribute('jslog', `${VisualLogging.section('film-strip')}`);\n      this.filmStripRecorder = new FilmStripRecorder(this.networkLogView.timeCalculator(), this.filmStripView);\n      this.filmStripView.show(this.filmStripPlaceholderElement);\n      this.filmStripView.addEventListener(PerfUI.FilmStripView.Events.FRAME_SELECTED, this.onFilmFrameSelected, this);\n      this.filmStripView.addEventListener(PerfUI.FilmStripView.Events.FRAME_ENTER, this.onFilmFrameEnter, this);\n      this.filmStripView.addEventListener(PerfUI.FilmStripView.Events.FRAME_EXIT, this.onFilmFrameExit, this);\n      this.resetFilmStripView();\n    }\n\n    if (!toggled && this.filmStripRecorder) {\n      if (this.filmStripView) {\n        this.filmStripView.detach();\n      }\n      this.filmStripView = null;\n      this.filmStripRecorder = null;\n    }\n  }\n\n  private resetFilmStripView(): void {\n    const reloadShortcut =\n        UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction('inspector-main.reload')[0];\n\n    if (this.filmStripView) {\n      this.filmStripView.reset();\n      if (reloadShortcut) {\n        this.filmStripView.setStatusText(\n            i18nString(UIStrings.hitSToReloadAndCaptureFilmstrip, {PH1: reloadShortcut.title()}));\n      }\n    }\n  }\n\n  override elementsToRestoreScrollPositionsFor(): Element[] {\n    return this.networkLogView.elementsToRestoreScrollPositionsFor();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    UI.Context.Context.instance().setFlavor(NetworkPanel, this);\n\n    // Record the network tool load time after the panel has loaded.\n    Host.userMetrics.panelLoaded('network', 'DevTools.Launch.Network');\n  }\n\n  override willHide(): void {\n    UI.Context.Context.instance().setFlavor(NetworkPanel, null);\n    super.willHide();\n  }\n\n  revealAndHighlightRequest(request: SDK.NetworkRequest.NetworkRequest): void {\n    this.hideRequestPanel();\n    if (request) {\n      this.networkLogView.revealAndHighlightRequest(request);\n    }\n  }\n\n  revealAndHighlightRequestWithId(request: NetworkForward.NetworkRequestId.NetworkRequestId): void {\n    this.hideRequestPanel();\n    if (request) {\n      this.networkLogView.revealAndHighlightRequestWithId(request);\n    }\n  }\n\n  async selectAndActivateRequest(\n      request: SDK.NetworkRequest.NetworkRequest, shownTab?: NetworkForward.UIRequestLocation.UIRequestTabs,\n      options?: NetworkForward.UIRequestLocation.FilterOptions): Promise<NetworkItemView|null> {\n    await UI.ViewManager.ViewManager.instance().showView('network');\n    this.networkLogView.selectRequest(request, options);\n    this.showRequestPanel(shownTab);\n    this.networkLogView.revealAndHighlightRequest(request);\n    return this.networkItemView;\n  }\n\n  private handleFilterChanged(): void {\n    this.hideRequestPanel();\n  }\n\n  private onRequestSelected(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest|null>): void {\n    const request = event.data;\n    this.currentRequest = request;\n    this.networkOverview.setHighlightedRequest(request);\n    this.updateNetworkItemView();\n    UI.Context.Context.instance().setFlavor(SDK.NetworkRequest.NetworkRequest, request);\n  }\n\n  private onRequestActivated(event: Common.EventTarget.EventTargetEvent<RequestActivatedEvent>): void {\n    const {showPanel, tab, takeFocus} = event.data;\n    if (showPanel) {\n      this.showRequestPanel(tab, takeFocus);\n    } else {\n      this.hideRequestPanel();\n    }\n  }\n\n  private showRequestPanel(shownTab?: NetworkForward.UIRequestLocation.UIRequestTabs, takeFocus?: boolean): void {\n    if (this.splitWidget.showMode() === UI.SplitWidget.ShowMode.BOTH && !shownTab && !takeFocus) {\n      // If panel is already shown, and we are not forcing a specific tab, return.\n      return;\n    }\n    this.clearNetworkItemView();\n    if (this.currentRequest) {\n      const networkItemView = this.createNetworkItemView(shownTab);\n      if (networkItemView && takeFocus) {\n        networkItemView.focus();\n      }\n    }\n    this.updateUI();\n  }\n\n  hideRequestPanel(): void {\n    this.clearNetworkItemView();\n    this.splitWidget.hideMain();\n    this.updateUI();\n  }\n\n  private updateNetworkItemView(): void {\n    if (this.splitWidget.showMode() === UI.SplitWidget.ShowMode.BOTH) {\n      this.clearNetworkItemView();\n      this.createNetworkItemView();\n      this.updateUI();\n    }\n  }\n\n  private clearNetworkItemView(): void {\n    if (this.networkItemView) {\n      this.networkItemView.detach();\n      this.networkItemView = null;\n    }\n  }\n  private createNetworkItemView(initialTab?: NetworkForward.UIRequestLocation.UIRequestTabs): NetworkItemView\n      |undefined {\n    if (!this.currentRequest) {\n      return;\n    }\n    this.networkItemView = new NetworkItemView(this.currentRequest, this.networkLogView.timeCalculator(), initialTab);\n    this.networkItemView.leftToolbar().appendToolbarItem(new UI.Toolbar.ToolbarItem(this.closeButtonElement));\n    this.networkItemView.show(this.detailsWidget.element);\n    this.splitWidget.showBoth();\n    return this.networkItemView;\n  }\n\n  private updateUI(): void {\n    if (this.detailsWidget) {\n      this.detailsWidget.element.classList.toggle(\n          'network-details-view-tall-header', this.networkLogLargeRowsSetting.get());\n    }\n    if (this.networkLogView) {\n      this.networkLogView.switchViewMode(!this.splitWidget.isResizable());\n    }\n  }\n\n  appendApplicableItems(\n      this: NetworkPanel, event: Event, contextMenu: UI.ContextMenu.ContextMenu,\n      target: SDK.NetworkRequest.NetworkRequest|SDK.Resource.Resource|Workspace.UISourceCode.UISourceCode|\n      SDK.TraceObject.RevealableNetworkRequest): void {\n    const appendRevealItem = (request: SDK.NetworkRequest.NetworkRequest): void => {\n      contextMenu.revealSection().appendItem(\n          i18nString(UIStrings.openInNetworkPanel),\n          () => UI.ViewManager.ViewManager.instance()\n                    .showView('network')\n                    .then(this.networkLogView.resetFilter.bind(this.networkLogView))\n                    .then(this.revealAndHighlightRequest.bind(this, request)),\n          {jslogContext: 'reveal-in-network'});\n    };\n    const appendRevealItemMissingData = (): void => {\n      contextMenu.revealSection().appendItem(i18nString(UIStrings.openInNetworkPanelMissingRequest), () => {}, {\n        disabled: true,\n        jslogContext: 'reveal-in-network',\n      });\n    };\n    const appendRevealItemAndSelect = (request: SDK.TraceObject.RevealableNetworkRequest): void => {\n      contextMenu.revealSection().appendItem(\n          i18nString(UIStrings.openInNetworkPanel),\n          () => UI.ViewManager.ViewManager.instance()\n                    .showView('network')\n                    .then(this.networkLogView.resetFilter.bind(this.networkLogView))\n                    .then(this.selectAndActivateRequest.bind(\n                        this, request.networkRequest, NetworkForward.UIRequestLocation.UIRequestTabs.HEADERS_COMPONENT,\n                        /* FilterOptions= */ undefined)),\n          {jslogContext: 'timeline.reveal-in-network'});\n    };\n\n    if ((event.target as Node).isSelfOrDescendant(this.element)) {\n      return;\n    }\n\n    if (target instanceof SDK.Resource.Resource) {\n      if (target.request) {\n        appendRevealItem(target.request);\n      } else {\n        appendRevealItemMissingData();\n      }\n      return;\n    }\n    if (target instanceof Workspace.UISourceCode.UISourceCode) {\n      const resource = SDK.ResourceTreeModel.ResourceTreeModel.resourceForURL(target.url());\n      if (resource?.request) {\n        appendRevealItem(resource.request);\n      } else {\n        appendRevealItemMissingData();\n      }\n      return;\n    }\n    if (target instanceof SDK.TraceObject.RevealableNetworkRequest) {\n      appendRevealItemAndSelect(target);\n      return;\n    }\n\n    if (this.networkItemView && this.networkItemView.isShowing() && this.networkItemView.request() === target) {\n      return;\n    }\n\n    appendRevealItem(target);\n  }\n\n  private onFilmFrameSelected(event: Common.EventTarget.EventTargetEvent<number>): void {\n    const timestamp = event.data;\n    this.overviewPane.setWindowTimes(0, timestamp);\n  }\n\n  private onFilmFrameEnter(event: Common.EventTarget.EventTargetEvent<number>): void {\n    const timestamp = event.data;\n    this.networkOverview.selectFilmStripFrame(timestamp);\n    this.networkLogView.selectFilmStripFrame(timestamp / 1000);\n  }\n\n  private onFilmFrameExit(): void {\n    this.networkOverview.clearFilmStripFrame();\n    this.networkLogView.clearFilmStripFrame();\n  }\n\n  private onUpdateRequest(event: Common.EventTarget.EventTargetEvent<{request: SDK.NetworkRequest.NetworkRequest}>):\n      void {\n    const {request} = event.data;\n    this.calculator.updateBoundaries(request);\n    // FIXME: Unify all time units across the frontend!\n    this.overviewPane.setBounds(\n        Trace.Types.Timing.Milli(this.calculator.minimumBoundary() * 1000),\n        Trace.Types.Timing.Milli(this.calculator.maximumBoundary() * 1000));\n    this.networkOverview.updateRequest(request);\n  }\n\n  resolveLocation(locationName: string): UI.View.ViewLocation|null {\n    if (locationName === 'network-sidebar') {\n      return this.sidebarLocation;\n    }\n    return null;\n  }\n}\n\nexport class RequestRevealer implements Common.Revealer.Revealer<SDK.NetworkRequest.NetworkRequest> {\n  reveal(request: SDK.NetworkRequest.NetworkRequest): Promise<void> {\n    const panel = NetworkPanel.instance();\n    return UI.ViewManager.ViewManager.instance().showView('network').then(\n        panel.revealAndHighlightRequest.bind(panel, request));\n  }\n}\n\nexport class RequestIdRevealer implements Common.Revealer.Revealer<NetworkForward.NetworkRequestId.NetworkRequestId> {\n  reveal(requestId: NetworkForward.NetworkRequestId.NetworkRequestId): Promise<void> {\n    const panel = NetworkPanel.instance();\n    return UI.ViewManager.ViewManager.instance().showView('network').then(\n        panel.revealAndHighlightRequestWithId.bind(panel, requestId));\n  }\n}\n\nexport class NetworkLogWithFilterRevealer implements\n    Common.Revealer\n        .Revealer<Extensions.ExtensionServer.RevealableNetworkRequestFilter|NetworkForward.UIFilter.UIRequestFilter> {\n  reveal(request: Extensions.ExtensionServer.RevealableNetworkRequestFilter|\n         NetworkForward.UIFilter.UIRequestFilter): Promise<void> {\n    if ('filters' in request) {\n      return NetworkPanel.revealAndFilter(request.filters);\n    }\n    return NetworkPanel.revealAndFilter(request.filter ? [{filterType: null, filterValue: request.filter}] : []);\n  }\n}\n\nexport class FilmStripRecorder implements Trace.TracingManager.TracingManagerClient {\n  private tracingManager: Trace.TracingManager.TracingManager|null;\n  private resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel|null;\n  private readonly timeCalculator: NetworkTimeCalculator;\n  private readonly filmStripView: PerfUI.FilmStripView.FilmStripView;\n  private callback: ((filmStrip: Trace.Extras.FilmStrip.Data) => void)|null;\n  // Used to fetch screenshots of the page load and show them in the panel.\n  #traceEngine: Trace.TraceModel.Model;\n  #collectedTraceEvents: Trace.Types.Events.Event[] = [];\n\n  constructor(timeCalculator: NetworkTimeCalculator, filmStripView: PerfUI.FilmStripView.FilmStripView) {\n    this.#traceEngine = Trace.TraceModel.Model.createWithSubsetOfHandlers({\n      Screenshots: Trace.Handlers.ModelHandlers.Screenshots,\n    });\n\n    this.tracingManager = null;\n    this.resourceTreeModel = null;\n    this.timeCalculator = timeCalculator;\n    this.filmStripView = filmStripView;\n    this.callback = null;\n  }\n\n  traceEventsCollected(events: Trace.Types.Events.Event[]): void {\n    this.#collectedTraceEvents.push(...events);\n  }\n\n  async tracingComplete(): Promise<void> {\n    if (!this.tracingManager) {\n      return;\n    }\n    this.tracingManager = null;\n    await this.#traceEngine.parse(this.#collectedTraceEvents);\n\n    const data = this.#traceEngine.parsedTrace(this.#traceEngine.size() - 1) as\n        Trace.Extras.FilmStrip.HandlerDataWithScreenshots;\n    if (!data) {\n      return;\n    }\n    const zeroTimeInSeconds = Trace.Types.Timing.Seconds(this.timeCalculator.minimumBoundary());\n    const filmStrip =\n        Trace.Extras.FilmStrip.fromParsedTrace(data, Trace.Helpers.Timing.secondsToMicro(zeroTimeInSeconds));\n\n    if (this.callback) {\n      this.callback(filmStrip);\n    }\n    this.callback = null;\n    // Now we have created the film strip and stored the data, we need to reset\n    // the trace processor so that it is ready to record again if the user\n    // refreshes the page.\n    this.#traceEngine.resetProcessor();\n\n    if (this.resourceTreeModel) {\n      this.resourceTreeModel.resumeReload();\n    }\n    this.resourceTreeModel = null;\n  }\n\n  tracingBufferUsage(): void {\n  }\n\n  eventsRetrievalProgress(_progress: number): void {\n  }\n\n  startRecording(): void {\n    this.#collectedTraceEvents = [];\n    this.filmStripView.reset();\n    this.filmStripView.setStatusText(i18nString(UIStrings.recordingFrames));\n    const tracingManager =\n        SDK.TargetManager.TargetManager.instance().scopeTarget()?.model(Trace.TracingManager.TracingManager);\n    if (this.tracingManager || !tracingManager) {\n      return;\n    }\n\n    this.tracingManager = tracingManager;\n    this.resourceTreeModel = this.tracingManager.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n    void this.tracingManager.start(this, '-*,disabled-by-default-devtools.screenshot', '');\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.FilmStripStartedRecording);\n  }\n\n  isRecording(): boolean {\n    return Boolean(this.tracingManager);\n  }\n\n  stopRecording(callback: (filmStrip: Trace.Extras.FilmStrip.Data) => void): void {\n    if (!this.tracingManager) {\n      return;\n    }\n\n    this.tracingManager.stop();\n    if (this.resourceTreeModel) {\n      this.resourceTreeModel.suspendReload();\n    }\n    this.callback = callback;\n    this.filmStripView.setStatusText(i18nString(UIStrings.fetchingFrames));\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const panel = context.flavor(NetworkPanel);\n    if (panel === null) {\n      return false;\n    }\n    switch (actionId) {\n      case 'network.toggle-recording': {\n        panel.toggleRecord(!panel.recordLogSetting.get());\n        return true;\n      }\n      case 'network.hide-request-details': {\n        if (!panel.networkItemView) {\n          return false;\n        }\n        panel.hideRequestPanel();\n        panel.networkLogView.resetFocus();\n        return true;\n      }\n      case 'network.search': {\n        const selection = UI.InspectorView.InspectorView.instance().element.window().getSelection();\n        if (!selection) {\n          return false;\n        }\n        let queryCandidate = '';\n        if (selection.rangeCount) {\n          queryCandidate = selection.toString().replace(/\\r?\\n.*/, '');\n        }\n        void SearchNetworkView.openSearch(queryCandidate);\n        return true;\n      }\n      case 'network.clear': {\n        Logs.NetworkLog.NetworkLog.instance().reset(true);\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport class RequestLocationRevealer implements\n    Common.Revealer.Revealer<NetworkForward.UIRequestLocation.UIRequestLocation> {\n  async reveal(location: NetworkForward.UIRequestLocation.UIRequestLocation): Promise<void> {\n    const view =\n        await NetworkPanel.instance().selectAndActivateRequest(location.request, location.tab, location.filterOptions);\n    if (!view) {\n      return;\n    }\n    if (location.searchMatch) {\n      const {lineNumber, columnNumber, matchLength} = location.searchMatch;\n      const revealPosition = {\n        from: {lineNumber, columnNumber},\n        to: {lineNumber, columnNumber: columnNumber + matchLength},\n      };\n      await view.revealResponseBody(revealPosition);\n    }\n    if (location.header) {\n      view.revealHeader(location.header.section, location.header.header?.name);\n    }\n  }\n}\n\nlet searchNetworkViewInstance: SearchNetworkView;\n\nexport class SearchNetworkView extends Search.SearchView.SearchView {\n  private constructor() {\n    super('network', new Common.Throttler.Throttler(/* timeoutMs */ 200));\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): SearchNetworkView {\n    const {forceNew} = opts;\n    if (!searchNetworkViewInstance || forceNew) {\n      searchNetworkViewInstance = new SearchNetworkView();\n    }\n\n    return searchNetworkViewInstance;\n  }\n\n  static async openSearch(query: string, searchImmediately?: boolean): Promise<Search.SearchView.SearchView> {\n    await UI.ViewManager.ViewManager.instance().showView('network.search-network-tab');\n    const searchView = SearchNetworkView.instance();\n    searchView.toggle(query, Boolean(searchImmediately));\n    return searchView;\n  }\n\n  override createScope(): Search.SearchScope.SearchScope {\n    return new NetworkSearchScope(Logs.NetworkLog.NetworkLog.instance());\n  }\n}\n"]}