{"version":3,"file":"ResourceDirectSocketChunkView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/ResourceDirectSocketChunkView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {dispatchClickEvent, renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {\n  describeWithEnvironment,\n} from '../../testing/EnvironmentHelpers.js';\nimport {\n  setUpEnvironment,\n} from '../../testing/OverridesHelpers.js';\nimport * as RenderCoordinator from '../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as Network from './network.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\nfunction createNetworkRequest(type: SDK.NetworkRequest.DirectSocketType) {\n  const networkRequest = SDK.NetworkRequest.NetworkRequest.createForSocket(\n      'requestId' as Protocol.Network.RequestId, urlString`www.example.com/some/path:3000`);\n  networkRequest.hasNetworkData = true;\n  networkRequest.setRemoteAddress('www.example.com', 3000);\n\n  switch (type) {\n    case SDK.NetworkRequest.DirectSocketType.TCP:\n      networkRequest.protocol = 'tcp';\n      break;\n    case SDK.NetworkRequest.DirectSocketType.UDP_BOUND, SDK.NetworkRequest.DirectSocketType.UDP_CONNECTED:\n      networkRequest.protocol = 'udp';\n      break;\n  }\n\n  networkRequest.statusText = 'Opening';\n  networkRequest.directSocketInfo = {\n    type,\n    status: SDK.NetworkRequest.DirectSocketStatus.OPEN,\n    createOptions: {\n      remoteAddr: 'www.example.com/some/path',\n      remotePort: 3000,\n      noDelay: false,\n      keepAliveDelay: 1001,\n      sendBufferSize: 1002,\n      receiveBufferSize: 1003,\n      dnsQueryType: Protocol.Network.DirectSocketDnsQueryType.Ipv4,\n    },\n    openInfo: {remoteAddr: 'www.sample.com', remotePort: 3005, localAddr: '127.0.0.1', localPort: 9472}\n  };\n  networkRequest.setResourceType(Common.ResourceType.resourceTypes.DirectSocket);\n  networkRequest.setIssueTime(Date.now(), Date.now());\n  return networkRequest;\n}\n\ndescribeWithEnvironment('ResourceDirectSocketChunkView', () => {\n  let chunkView: Network.ResourceDirectSocketChunkView.ResourceDirectSocketChunkView|undefined;\n\n  beforeEach(() => {\n    setUpEnvironment();\n    Common.Settings.Settings.instance().clearAll();\n  });\n\n  afterEach(() => {\n    if (chunkView) {\n      chunkView.detach();\n      chunkView = undefined;\n    }\n  });\n\n  async function renderView(request: SDK.NetworkRequest.NetworkRequest):\n      Promise<Network.ResourceDirectSocketChunkView.ResourceDirectSocketChunkView> {\n    const container = document.createElement('div');\n    renderElementIntoDOM(container);\n\n    const view = new Network.ResourceDirectSocketChunkView.ResourceDirectSocketChunkView(request);\n    view.markAsRoot();\n    view.show(container);\n\n    view.getFilterInputForTest().setValue('', false);\n\n    return view;\n  }\n\n  for (const [testName, type] of [\n           ['tcp', SDK.NetworkRequest.DirectSocketType.TCP],\n           ['udp_connected', SDK.NetworkRequest.DirectSocketType.UDP_CONNECTED],\n  ]) {\n    it(`renders ${testName} messages with correct columns`, async () => {\n      const request = createNetworkRequest(type as SDK.NetworkRequest.DirectSocketType);\n      request.addDirectSocketChunk({\n        data: 'c29tZSBkYXRh',\n        type: SDK.NetworkRequest.DirectSocketChunkType.SEND,\n        timestamp: 1700000000.123,\n      });\n      request.addDirectSocketChunk({\n        data: 'c29tZSBkYXRhIDI=',\n        type: SDK.NetworkRequest.DirectSocketChunkType.RECEIVE,\n        timestamp: 1700000001.456,\n      });\n\n      chunkView = await renderView(request);\n      await RenderCoordinator.done();\n\n      assertGridData(chunkView, [\n        ['c29tZSBkYXRh', '9\\xA0B', '22:13:20.123'],\n        ['c29tZSBkYXRhIDI=', '11\\xA0B', '22:13:21.456'],\n      ]);\n    });\n  }\n\n  it('renders UDP bound messages with correct columns', async () => {\n    const request = createNetworkRequest(SDK.NetworkRequest.DirectSocketType.UDP_BOUND);\n    request.addDirectSocketChunk({\n      data: 'c29tZSBkYXRh',\n      type: SDK.NetworkRequest.DirectSocketChunkType.SEND,\n      timestamp: 1700000000.123,\n      remoteAddress: '192.168.0.1',\n      remotePort: 12345,\n    });\n    request.addDirectSocketChunk({\n      data: 'c29tZSBkYXRhIDI=',\n      type: SDK.NetworkRequest.DirectSocketChunkType.RECEIVE,\n      timestamp: 1700000001.456,\n      remoteAddress: '134.168.0.1',\n      remotePort: 54321,\n    });\n\n    chunkView = await renderView(request);\n    await RenderCoordinator.done();\n\n    assertGridData(chunkView, [\n      ['c29tZSBkYXRh', '192.168.0.1', '12345', '9\\xA0B', '22:13:20.123'],\n      ['c29tZSBkYXRhIDI=', '134.168.0.1', '54321', '11\\xA0B', '22:13:21.456'],\n    ]);\n  });\n\n  it('shows binary view on click', async () => {\n    const request = createNetworkRequest(SDK.NetworkRequest.DirectSocketType.TCP);\n    request.addDirectSocketChunk({\n      data: 'c29tZSBkYXRh',\n      type: SDK.NetworkRequest.DirectSocketChunkType.SEND,\n      timestamp: 1700000000.123,\n    });\n\n    chunkView = await renderView(request);\n    await RenderCoordinator.done();\n\n    const dataGrid = chunkView.getDataGridForTest();\n    dataGrid.rootNode().children[0].select();\n    await RenderCoordinator.done();\n\n    const splitWidget = chunkView.getSplitWidgetForTest();\n    const sidebarWidget = splitWidget.sidebarWidget();\n    assert.instanceOf(sidebarWidget, Network.BinaryResourceView.BinaryResourceView);\n  });\n\n  it('clears messages with \"Clear All\" button', async () => {\n    const request = createNetworkRequest(SDK.NetworkRequest.DirectSocketType.TCP);\n    request.addDirectSocketChunk({\n      data: 'c29tZSBkYXRh',\n      type: SDK.NetworkRequest.DirectSocketChunkType.SEND,\n      timestamp: 1700000000.123,\n    });\n\n    chunkView = await renderView(request);\n    await RenderCoordinator.done();\n    assertGridData(chunkView, [['c29tZSBkYXRh', '9\\xA0B', '22:13:20.123']]);\n\n    const clearButton = chunkView.getClearAllButtonForTest();\n\n    dispatchClickEvent(clearButton.element);\n    await RenderCoordinator.done();\n\n    assertGridData(chunkView, []);\n  });\n\n  it('filters messages by regex', async () => {\n    const request = createNetworkRequest(SDK.NetworkRequest.DirectSocketType.TCP);\n    request.addDirectSocketChunk({\n      data: 'c29tZSBkYXRhIDE=',\n      type: SDK.NetworkRequest.DirectSocketChunkType.SEND,\n      timestamp: 1700000000.123,\n    });\n    request.addDirectSocketChunk({\n      data: 'b3RoZXIgZGF0YSAy',\n      type: SDK.NetworkRequest.DirectSocketChunkType.RECEIVE,\n      timestamp: 1700000001.456,\n    });\n    request.addDirectSocketChunk({\n      data: 'c29tZSBkYXRhIDM=',\n      type: SDK.NetworkRequest.DirectSocketChunkType.SEND,\n      timestamp: 1700000002.789,\n    });\n\n    chunkView = await renderView(request);\n\n    const filterInput = chunkView.getFilterInputForTest();\n    filterInput.setValue('c29tZ', true);\n    await RenderCoordinator.done();\n\n    assertGridData(chunkView, [\n      ['c29tZSBkYXRhIDE=', '11\\xA0B', '22:13:20.123'],\n      ['c29tZSBkYXRhIDM=', '11\\xA0B', '22:13:22.789'],\n    ]);\n\n    filterInput.setValue('b3Ro', true);\n    await RenderCoordinator.done();\n    assertGridData(chunkView, [\n      ['b3RoZXIgZGF0YSAy', '12\\xA0B', '22:13:21.456'],\n    ]);\n  });\n\n  it('filters messages by type (SEND/RECEIVE/ALL)', async () => {\n    const request = createNetworkRequest(SDK.NetworkRequest.DirectSocketType.TCP);\n    request.addDirectSocketChunk({\n      data: 'c2VuZA==',\n      type: SDK.NetworkRequest.DirectSocketChunkType.SEND,\n      timestamp: 1700000000.123,\n    });\n    request.addDirectSocketChunk({\n      data: 'cmVjZWl2ZQ==',\n      type: SDK.NetworkRequest.DirectSocketChunkType.RECEIVE,\n      timestamp: 1700000001.456,\n    });\n\n    chunkView = await renderView(request);\n    const filterCombobox = chunkView.getFilterTypeComboboxForTest();\n\n    // Filter by SEND.\n    filterCombobox.element.value = 'send';\n    filterCombobox.element.dispatchEvent(new Event('change'));\n    await RenderCoordinator.done();\n    assertGridData(chunkView, [['c2VuZA==', '4\\xA0B', '22:13:20.123']]);\n\n    // Filter by RECEIVE.\n    filterCombobox.element.value = 'receive';\n    filterCombobox.element.dispatchEvent(new Event('change'));\n    await RenderCoordinator.done();\n    assertGridData(chunkView, [['cmVjZWl2ZQ==', '7\\xA0B', '22:13:21.456']]);\n\n    // Filter by ALL.\n    filterCombobox.element.value = 'all';\n    filterCombobox.element.dispatchEvent(new Event('change'));\n    await RenderCoordinator.done();\n    assertGridData(chunkView, [\n      ['c2VuZA==', '4\\xA0B', '22:13:20.123'],\n      ['cmVjZWl2ZQ==', '7\\xA0B', '22:13:21.456'],\n    ]);\n  });\n\n  it('sorts messages by time column (ASC/DESC)', async () => {\n    const request = createNetworkRequest(SDK.NetworkRequest.DirectSocketType.TCP);\n    request.addDirectSocketChunk({\n      data: 'MQ==',\n      type: SDK.NetworkRequest.DirectSocketChunkType.SEND,\n      timestamp: 1700000001.123,\n    });\n    request.addDirectSocketChunk({\n      data: 'Mg==',\n      type: SDK.NetworkRequest.DirectSocketChunkType.RECEIVE,\n      timestamp: 1700000000.456,\n    });\n\n    chunkView = await renderView(request);\n    await RenderCoordinator.done();\n\n    // Initial sort is ASC by time.\n    assertGridData(chunkView, [\n      ['Mg==', '1\\xA0B', '22:13:20.456'],\n      ['MQ==', '1\\xA0B', '22:13:21.123'],\n    ]);\n\n    // Click time header to sort DESC.\n    const dataGrid = chunkView.getDataGridForTest();\n    const timeHeader = dataGrid.element.querySelector('th[jslog*=\"context: time\"]');\n    assert.instanceOf(timeHeader, HTMLTableCellElement);\n    dispatchClickEvent(timeHeader);\n    await RenderCoordinator.done();\n    assertGridData(chunkView, [\n      ['MQ==', '1\\xA0B', '22:13:21.123'],\n      ['Mg==', '1\\xA0B', '22:13:20.456'],\n    ]);\n\n    // Click time header to sort ASC again.\n    dispatchClickEvent(timeHeader);\n    await RenderCoordinator.done();\n    assertGridData(chunkView, [\n      ['Mg==', '1\\xA0B', '22:13:20.456'],\n      ['MQ==', '1\\xA0B', '22:13:21.123'],\n    ]);\n  });\n});\n\nfunction assertTime(actual: string, expectedMillis: string): void {\n  assert.match(actual, /\\d{2}:\\d{2}:\\d{2}\\.\\d{3}/);\n  assert.isTrue(actual.endsWith(expectedMillis));\n}\n\nfunction getInnerTextOfGrid(view: Network.ResourceDirectSocketChunkView.ResourceDirectSocketChunkView): string[][] {\n  const grid = view.getDataGridForTest();\n  return grid.rootNode().children.map(row => {\n    return Object.keys(row.data).map(key => {\n      const value = row.data[key];\n\n      if (value instanceof HTMLDivElement) {\n        return value.innerText.trim();\n      }\n      return value.toString().trim();\n    });\n  });\n}\n\nfunction assertGridData(\n    view: Network.ResourceDirectSocketChunkView.ResourceDirectSocketChunkView, rowsExpected: string[][]): void {\n  const actualGridData = getInnerTextOfGrid(view);\n  assert.lengthOf(actualGridData, rowsExpected.length, 'Number of rows should match');\n\n  for (let i = 0; i < rowsExpected.length; i++) {\n    const expectedRow = rowsExpected[i];\n    const actualRow = actualGridData[i];\n    assert.lengthOf(actualRow, expectedRow.length, `Number of columns in row ${i} should match`);\n\n    // Time is always the last column. It is checked differently,\n    // because the time is converted using local timezone.\n    for (let j = 0; j < expectedRow.length; j++) {\n      if (j === expectedRow.length - 1) {\n        assertTime(actualRow[j], expectedRow[j].substring(expectedRow[j].lastIndexOf('.') + 1));\n      } else {\n        assert.strictEqual(actualRow[j], expectedRow[j], `Row ${i}, Column ${j} data should match`);\n      }\n    }\n  }\n}\n"]}