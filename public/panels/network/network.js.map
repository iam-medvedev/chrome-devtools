{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/network/BinaryResourceView.ts", "binaryResourceView.css.js", "../../../../../../front_end/panels/network/BlockedURLsPane.ts", "blockedURLsPane.css.js", "../../../../../../front_end/panels/network/EventSourceMessagesView.ts", "eventSourceMessagesView.css.js", "../../../../../../front_end/panels/network/NetworkConfigView.ts", "networkConfigView.css.js", "../../../../../../front_end/panels/network/NetworkDataGridNode.ts", "../../../../../../front_end/panels/network/NetworkItemView.ts", "../../../../../../front_end/panels/network/RequestCookiesView.ts", "requestCookiesView.css.js", "../../../../../../front_end/panels/network/RequestInitiatorView.ts", "requestInitiatorView.css.js", "requestInitiatorViewTree.css.js", "../../../../../../front_end/panels/network/RequestPayloadView.ts", "../../ui/legacy/components/object_ui/objectPropertiesSection.css.js", "../../ui/legacy/components/object_ui/objectValue.css.js", "requestPayloadTree.css.js", "requestPayloadView.css.js", "../../../../../../front_end/panels/network/RequestPreviewView.ts", "../../../../../../front_end/panels/network/RequestHTMLView.ts", "requestHTMLView.css.js", "../../../../../../front_end/panels/network/SignedExchangeInfoView.ts", "signedExchangeInfoTree.css.js", "signedExchangeInfoView.css.js", "../../../../../../front_end/panels/network/RequestResponseView.ts", "../../../../../../front_end/panels/network/RequestTimingView.ts", "networkTimingTable.css.js", "../../../../../../front_end/panels/network/ResourceDirectSocketChunkView.ts", "../../../../../../front_end/panels/network/ResourceChunkView.ts", "resourceChunkView.css.js", "../../../../../../front_end/panels/network/ResourceWebSocketFrameView.ts", "../../../../../../front_end/panels/network/NetworkTimeCalculator.ts", "../../../../../../front_end/panels/network/NetworkLogView.ts", "../../../../../../front_end/panels/network/NetworkFrameGrouper.ts", "networkLogView.css.js", "../../../../../../front_end/panels/network/NetworkLogViewColumns.ts", "../../../../../../front_end/panels/network/NetworkManageCustomHeadersView.ts", "networkManageCustomHeadersView.css.js", "../../../../../../front_end/panels/network/NetworkWaterfallColumn.ts", "../../../../../../front_end/panels/network/NetworkOverview.ts", "networkWaterfallColumn.css.js", "../../../../../../front_end/panels/network/NetworkSearchScope.ts", "../../../../../../front_end/panels/network/NetworkPanel.ts", "networkPanel.css.js"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport binaryResourceViewStyles from './binaryResourceView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Binary Resource View of the Network panel. Shown to the user as a status\n   * message after the current text has been copied to the clipboard. Base64 is a format for encoding\n   * data.\n   */\n  copiedAsBase: 'Copied as `Base64`',\n  /**\n   * @description Text in Binary Resource View of the Network panel\n   */\n  hexViewer: '`Hex` Viewer',\n  /**\n   * @description Text in Binary Resource View of the Network panel. Shown to the user as a status\n   * message after the current text has been copied to the clipboard. Hex is short for hexadecimal,\n   * and is a format for encoding data.\n   */\n  copiedAsHex: 'Copied as `Hex`',\n  /**\n   * @description Text in Binary Resource View of the Network panel. Shown to the user as a status\n   * message after the current text has been copied to the clipboard. UTF-8 is a format for encoding data.\n   */\n  copiedAsUtf: 'Copied as `UTF-8`',\n  /**\n   * @description Screen reader label for a select box that chooses how to display binary data in the Network panel\n   */\n  binaryViewType: 'Binary view type',\n  /**\n   * @description Tooltip text that appears when hovering over the largeicon copy button in the Binary Resource View of the Network panel\n   */\n  copyToClipboard: 'Copy to clipboard',\n  /**\n   * @description A context menu command in the Binary Resource View of the Network panel, for\n   * copying to the clipboard. Base64 is a format for encoding data.\n   */\n  copyAsBase: 'Copy as `Base64`',\n  /**\n   * @description A context menu command in the Binary Resource View of the Network panel, for copying\n   * to the clipboard. Hex is short for hexadecimal, and is a format for encoding data.\n   */\n  copyAsHex: 'Copy as `Hex`',\n  /**\n   * @description A context menu command in the Binary Resource View of the Network panel, for copying\n   *to the clipboard. UTF-8 is a format for encoding data.\n   */\n  copyAsUtf: 'Copy as `UTF-8`',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/BinaryResourceView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class BinaryResourceView extends UI.Widget.VBox {\n  private readonly binaryResourceViewFactory: SourceFrame.BinaryResourceViewFactory.BinaryResourceViewFactory;\n  private readonly toolbar: UI.Toolbar.Toolbar;\n  private readonly binaryViewObjects: BinaryViewObject[];\n  private binaryViewTypeSetting: Common.Settings.Setting<string>;\n  private binaryViewTypeCombobox: UI.Toolbar.ToolbarComboBox;\n  private readonly copiedText: UI.Toolbar.ToolbarText;\n  private addFadeoutSettimeoutId: number|null;\n  private lastView: UI.Widget.Widget|null;\n\n  constructor(\n      content: TextUtils.StreamingContentData.StreamingContentData, contentUrl: Platform.DevToolsPath.UrlString,\n      resourceType: Common.ResourceType.ResourceType, element?: HTMLElement) {\n    super(element);\n    this.registerRequiredCSS(binaryResourceViewStyles);\n\n    this.binaryResourceViewFactory =\n        new SourceFrame.BinaryResourceViewFactory.BinaryResourceViewFactory(content, contentUrl, resourceType);\n\n    this.toolbar = this.element.createChild('devtools-toolbar', 'binary-view-toolbar');\n\n    this.binaryViewObjects = [\n      new BinaryViewObject(\n          'base64', i18n.i18n.lockedString('Base64'), i18nString(UIStrings.copiedAsBase),\n          this.binaryResourceViewFactory.createBase64View.bind(this.binaryResourceViewFactory),\n          this.binaryResourceViewFactory.base64.bind(this.binaryResourceViewFactory)),\n      new BinaryViewObject(\n          'hex', i18nString(UIStrings.hexViewer), i18nString(UIStrings.copiedAsHex),\n          this.binaryResourceViewFactory.createHexView.bind(this.binaryResourceViewFactory),\n          this.binaryResourceViewFactory.hex.bind(this.binaryResourceViewFactory)),\n      new BinaryViewObject(\n          'utf8', i18n.i18n.lockedString('UTF-8'), i18nString(UIStrings.copiedAsUtf),\n          this.binaryResourceViewFactory.createUtf8View.bind(this.binaryResourceViewFactory),\n          this.binaryResourceViewFactory.utf8.bind(this.binaryResourceViewFactory)),\n    ];\n    this.binaryViewTypeSetting = Common.Settings.Settings.instance().createSetting('binary-view-type', 'hex');\n    this.binaryViewTypeCombobox =\n        new UI.Toolbar.ToolbarComboBox(this.binaryViewTypeChanged.bind(this), i18nString(UIStrings.binaryViewType));\n    for (const viewObject of this.binaryViewObjects) {\n      this.binaryViewTypeCombobox.addOption(\n          this.binaryViewTypeCombobox.createOption(viewObject.label, viewObject.type));\n    }\n    this.toolbar.appendToolbarItem(this.binaryViewTypeCombobox);\n\n    const copyButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.copyToClipboard), 'copy');\n    copyButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, _event => {\n      this.copySelectedViewToClipboard();\n    }, this);\n    this.toolbar.appendToolbarItem(copyButton);\n\n    this.copiedText = new UI.Toolbar.ToolbarText();\n    this.copiedText.element.classList.add('binary-view-copied-text');\n    this.toolbar.appendChild(this.copiedText.element);\n\n    this.addFadeoutSettimeoutId = null;\n\n    this.lastView = null;\n    this.updateView();\n  }\n\n  private getCurrentViewObject(): BinaryViewObject|null {\n    const filter = (obj: BinaryViewObject): boolean => obj.type === this.binaryViewTypeSetting.get();\n    const binaryViewObject = this.binaryViewObjects.find(filter);\n    console.assert(\n        Boolean(binaryViewObject),\n        `No binary view found for binary view type found in setting 'binary-view-type': ${\n            this.binaryViewTypeSetting.get()}`);\n    return binaryViewObject || null;\n  }\n\n  private copySelectedViewToClipboard(): void {\n    const viewObject = this.getCurrentViewObject();\n    if (!viewObject) {\n      return;\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(viewObject.content());\n    this.copiedText.setText(viewObject.copiedMessage);\n    this.copiedText.element.classList.remove('fadeout');\n    function addFadeoutClass(this: BinaryResourceView): void {\n      this.copiedText.element.classList.add('fadeout');\n    }\n    if (this.addFadeoutSettimeoutId) {\n      clearTimeout(this.addFadeoutSettimeoutId);\n      this.addFadeoutSettimeoutId = null;\n    }\n    this.addFadeoutSettimeoutId = window.setTimeout(addFadeoutClass.bind(this), 2000);\n  }\n\n  private updateView(): void {\n    const newViewObject = this.getCurrentViewObject();\n    if (!newViewObject) {\n      return;\n    }\n\n    const newView = newViewObject.getView();\n    if (newView === this.lastView) {\n      return;\n    }\n\n    if (this.lastView) {\n      this.lastView.detach();\n    }\n    this.lastView = newView;\n\n    newView.show(this.element, this.toolbar);\n    this.binaryViewTypeCombobox.element.value = this.binaryViewTypeSetting.get();\n  }\n\n  private binaryViewTypeChanged(): void {\n    const selectedOption = (this.binaryViewTypeCombobox.selectedOption());\n    if (!selectedOption) {\n      return;\n    }\n    const newViewType = selectedOption.value;\n    if (this.binaryViewTypeSetting.get() === newViewType) {\n      return;\n    }\n    this.binaryViewTypeSetting.set(newViewType);\n    this.updateView();\n  }\n\n  addCopyToContextMenu(contextMenu: UI.ContextMenu.ContextMenu, submenuItemText: string): void {\n    const copyMenu = contextMenu.clipboardSection().appendSubMenuItem(submenuItemText, false, 'copy');\n    const footerSection = copyMenu.footerSection();\n\n    footerSection.appendItem(i18nString(UIStrings.copyAsBase), async () => {\n      const content = this.binaryResourceViewFactory.base64();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(content);\n    }, {jslogContext: 'copy-as-base'});\n    footerSection.appendItem(i18nString(UIStrings.copyAsHex), async () => {\n      const content = await this.binaryResourceViewFactory.hex();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(content);\n    }, {jslogContext: 'copy-as-hex'});\n    footerSection.appendItem(i18nString(UIStrings.copyAsUtf), async () => {\n      const content = await this.binaryResourceViewFactory.utf8();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(content);\n    }, {jslogContext: 'copy-as-utf'});\n  }\n}\n\nexport class BinaryViewObject {\n  type: string;\n  label: string;\n  copiedMessage: string;\n  content: () => string;\n  private createViewFn: () => UI.Widget.Widget;\n  private view: UI.Widget.Widget|null;\n\n  constructor(\n      type: string, label: string, copiedMessage: string, createViewFn: () => UI.Widget.Widget, content: () => string) {\n    this.type = type;\n    this.label = label;\n    this.copiedMessage = copiedMessage;\n    this.content = content;\n    this.createViewFn = createViewFn;\n\n    this.view = null;\n  }\n\n  getView(): UI.Widget.Widget {\n    if (!this.view) {\n      this.view = this.createViewFn();\n    }\n    return this.view;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.panel.network devtools-toolbar.binary-view-toolbar {\n  border-top: 1px solid var(--sys-color-divider);\n  border-bottom: 0;\n  padding-left: 5px;\n  flex: none;\n}\n\n.binary-view-copied-text {\n  opacity: 100%;\n}\n\n.binary-view-copied-text.fadeout {\n  opacity: 0%;\n  transition: opacity 1s;\n}\n\n/*# sourceURL=${import.meta.resolve('./binaryResourceView.css')} */`;", "// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/legacy/legacy.js';\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport blockedURLsPaneStyles from './blockedURLsPane.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text to enable blocking of network requests\n   */\n  enableNetworkRequestBlocking: 'Enable network request blocking',\n  /**\n   * @description Tooltip text that appears when hovering over the plus button in the Blocked URLs Pane of the Network panel\n   */\n  addPattern: 'Add pattern',\n  /**\n   * @description Accessible label for the button to add request blocking patterns in the network request blocking tool\n   */\n  addNetworkRequestBlockingPattern: 'Add network request blocking pattern',\n  /**\n   * @description Text that shows in the network request blocking panel if no pattern has yet been added.\n   */\n  noNetworkRequestsBlocked: 'No blocked network requests',\n  /**\n   * @description Text that shows  in the network request blocking panel if no pattern has yet been added.\n   * @example {Add pattern} PH1\n   */\n  addPatternToBlock: 'Add a pattern to block network requests by clicking on the \"{PH1}\" button.',\n  /**\n   * @description Text in Blocked URLs Pane of the Network panel\n   * @example {4} PH1\n   */\n  dBlocked: '{PH1} blocked',\n  /**\n   * @description Text in Blocked URLs Pane of the Network panel\n   */\n  textPatternToBlockMatching: 'Text pattern to block matching requests; use * for wildcard',\n  /**\n   * @description Error text for empty list widget input in Request Blocking tool\n   */\n  patternInputCannotBeEmpty: 'Pattern input cannot be empty.',\n  /**\n   * @description Error text for duplicate list widget input in Request Blocking tool\n   */\n  patternAlreadyExists: 'Pattern already exists.',\n  /**\n   * @description Message to be announced for a when list item is removed from list widget\n   */\n  itemDeleted: 'Item successfully deleted',\n  /**\n   * @description Message to be announced for a when list item is removed from list widget\n   */\n  learnMore: 'Learn more',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/BlockedURLsPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst NETWORK_REQUEST_BLOCKING_EXPLANATION_URL =\n    'https://developer.chrome.com/docs/devtools/network-request-blocking' as Platform.DevToolsPath.UrlString;\n\nexport class BlockedURLsPane extends UI.Widget.VBox implements\n    UI.ListWidget.Delegate<SDK.NetworkManager.BlockedPattern> {\n  private manager: SDK.NetworkManager.MultitargetNetworkManager;\n  private readonly toolbar: UI.Toolbar.Toolbar;\n  private readonly enabledCheckbox: UI.Toolbar.ToolbarCheckbox;\n  private readonly list: UI.ListWidget.ListWidget<SDK.NetworkManager.BlockedPattern>;\n  private editor: UI.ListWidget.Editor<SDK.NetworkManager.BlockedPattern>|null;\n  private blockedCountForUrl: Map<string, number>;\n\n  constructor() {\n    super({\n      jslog: `${VisualLogging.panel('network.blocked-urls').track({resize: true})}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(blockedURLsPaneStyles);\n\n    this.manager = SDK.NetworkManager.MultitargetNetworkManager.instance();\n    this.manager.addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.BLOCKED_PATTERNS_CHANGED, this.update, this);\n\n    this.toolbar = this.contentElement.createChild('devtools-toolbar');\n    this.enabledCheckbox = new UI.Toolbar.ToolbarCheckbox(\n        i18nString(UIStrings.enableNetworkRequestBlocking), undefined, this.toggleEnabled.bind(this),\n        'network.enable-request-blocking');\n    this.toolbar.appendToolbarItem(this.enabledCheckbox);\n    this.toolbar.appendSeparator();\n    this.toolbar.appendToolbarItem(\n        UI.Toolbar.Toolbar.createActionButton('network.add-network-request-blocking-pattern'));\n    this.toolbar.appendToolbarItem(\n        UI.Toolbar.Toolbar.createActionButton('network.remove-all-network-request-blocking-patterns'));\n    this.toolbar.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n\n    this.list = new UI.ListWidget.ListWidget(this);\n    this.list.registerRequiredCSS(blockedURLsPaneStyles);\n    this.list.element.classList.add('blocked-urls');\n\n    this.list.setEmptyPlaceholder(this.createEmptyPlaceholder());\n    this.list.show(this.contentElement);\n\n    this.editor = null;\n\n    this.blockedCountForUrl = new Map();\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.NetworkManager.NetworkManager, SDK.NetworkManager.Events.RequestFinished, this.onRequestFinished, this,\n        {scoped: true});\n\n    this.update();\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(Logs.NetworkLog.Events.Reset, this.onNetworkLogReset, this);\n  }\n\n  private createEmptyPlaceholder(): Element {\n    const placeholder = this.contentElement.createChild('div', 'empty-state');\n    placeholder.createChild('span', 'empty-state-header').textContent = i18nString(UIStrings.noNetworkRequestsBlocked);\n\n    const description = placeholder.createChild('div', 'empty-state-description');\n    description.createChild('span').textContent =\n        i18nString(UIStrings.addPatternToBlock, {PH1: i18nString(UIStrings.addPattern)});\n    const link = UI.XLink.XLink.create(\n        NETWORK_REQUEST_BLOCKING_EXPLANATION_URL, i18nString(UIStrings.learnMore), undefined, undefined, 'learn-more');\n    description.appendChild(link);\n\n    const addButton = UI.UIUtils.createTextButton(i18nString(UIStrings.addPattern), this.addPattern.bind(this), {\n      className: 'add-button',\n      jslogContext: 'network.add-network-request-blocking-pattern',\n      variant: Buttons.Button.Variant.TONAL,\n    });\n    UI.ARIAUtils.setLabel(addButton, i18nString(UIStrings.addNetworkRequestBlockingPattern));\n    placeholder.appendChild(addButton);\n    return placeholder;\n  }\n\n  addPattern(): void {\n    this.manager.setBlockingEnabled(true);\n    this.list.addNewItem(0, {url: Platform.DevToolsPath.EmptyUrlString, enabled: true});\n  }\n\n  removeAllPatterns(): void {\n    this.manager.setBlockedPatterns([]);\n  }\n\n  renderItem(pattern: SDK.NetworkManager.BlockedPattern, editable: boolean): Element {\n    const count = this.blockedRequestsCount(pattern.url);\n    const element = document.createElement('div');\n    element.classList.add('blocked-url');\n    const checkbox = element.createChild('input', 'blocked-url-checkbox');\n    checkbox.type = 'checkbox';\n    checkbox.checked = pattern.enabled;\n    checkbox.disabled = !editable;\n    checkbox.setAttribute('jslog', `${VisualLogging.toggle().track({change: true})}`);\n    element.createChild('div', 'blocked-url-label').textContent = pattern.url;\n    element.createChild('div', 'blocked-url-count').textContent = i18nString(UIStrings.dBlocked, {PH1: count});\n    if (editable) {\n      element.addEventListener('click', event => this.togglePattern(pattern, event));\n      checkbox.addEventListener('click', event => this.togglePattern(pattern, event));\n    }\n    return element;\n  }\n\n  private togglePattern(pattern: SDK.NetworkManager.BlockedPattern, event: Event): void {\n    event.consume(true);\n    const patterns = this.manager.blockedPatterns();\n    patterns.splice(patterns.indexOf(pattern), 1, {enabled: !pattern.enabled, url: pattern.url});\n    this.manager.setBlockedPatterns(patterns);\n  }\n\n  private toggleEnabled(): void {\n    this.manager.setBlockingEnabled(!this.manager.blockingEnabled());\n    this.update();\n  }\n\n  removeItemRequested(_pattern: SDK.NetworkManager.BlockedPattern, index: number): void {\n    const patterns = this.manager.blockedPatterns();\n    patterns.splice(index, 1);\n    this.manager.setBlockedPatterns(patterns);\n    UI.ARIAUtils.LiveAnnouncer.alert(UIStrings.itemDeleted);\n  }\n\n  beginEdit(pattern: SDK.NetworkManager.BlockedPattern): UI.ListWidget.Editor<SDK.NetworkManager.BlockedPattern> {\n    this.editor = this.createEditor();\n    this.editor.control('url').value = pattern.url;\n    return this.editor;\n  }\n\n  commitEdit(\n      item: SDK.NetworkManager.BlockedPattern, editor: UI.ListWidget.Editor<SDK.NetworkManager.BlockedPattern>,\n      isNew: boolean): void {\n    const url = editor.control('url').value as Platform.DevToolsPath.UrlString;\n    const patterns = this.manager.blockedPatterns();\n    if (isNew) {\n      patterns.push({enabled: true, url});\n    } else {\n      patterns.splice(patterns.indexOf(item), 1, {enabled: true, url});\n    }\n\n    this.manager.setBlockedPatterns(patterns);\n  }\n\n  private createEditor(): UI.ListWidget.Editor<SDK.NetworkManager.BlockedPattern> {\n    if (this.editor) {\n      return this.editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<SDK.NetworkManager.BlockedPattern>();\n    const content = editor.contentElement();\n    const titles = content.createChild('div', 'blocked-url-edit-row');\n    titles.createChild('div').textContent = i18nString(UIStrings.textPatternToBlockMatching);\n    const fields = content.createChild('div', 'blocked-url-edit-row');\n    const validator = (_item: SDK.NetworkManager.BlockedPattern, _index: number, input: UI.ListWidget.EditorControl): {\n      valid: boolean,\n      errorMessage: Common.UIString.LocalizedString|undefined,\n    } => {\n      let valid = true;\n      let errorMessage;\n      if (!input.value) {\n        errorMessage = i18nString(UIStrings.patternInputCannotBeEmpty);\n        valid = false;\n      } else if (this.manager.blockedPatterns().find(pattern => pattern.url === input.value)) {\n        errorMessage = i18nString(UIStrings.patternAlreadyExists);\n        valid = false;\n      }\n      return {valid, errorMessage};\n    };\n    const urlInput = editor.createInput('url', 'text', '', validator);\n    fields.createChild('div', 'blocked-url-edit-value').appendChild(urlInput);\n    return editor;\n  }\n\n  update(): void {\n    const enabled = this.manager.blockingEnabled();\n    this.list.element.classList.toggle('blocking-disabled', !enabled && Boolean(this.manager.blockedPatterns().length));\n\n    this.enabledCheckbox.setChecked(enabled);\n    this.list.clear();\n    for (const pattern of this.manager.blockedPatterns()) {\n      this.list.appendItem(pattern, enabled);\n    }\n  }\n\n  private blockedRequestsCount(url: string): number {\n    if (!url) {\n      return 0;\n    }\n\n    let result = 0;\n    for (const blockedUrl of this.blockedCountForUrl.keys()) {\n      if (this.matches(url, blockedUrl)) {\n        result += (this.blockedCountForUrl.get(blockedUrl) as number);\n      }\n    }\n    return result;\n  }\n\n  private matches(pattern: string, url: string): boolean {\n    let pos = 0;\n    const parts = pattern.split('*');\n    for (let index = 0; index < parts.length; index++) {\n      const part = parts[index];\n      if (!part.length) {\n        continue;\n      }\n      pos = url.indexOf(part, pos);\n      if (pos === -1) {\n        return false;\n      }\n      pos += part.length;\n    }\n    return true;\n  }\n\n  private onNetworkLogReset(_event: Common.EventTarget.EventTargetEvent<Logs.NetworkLog.ResetEvent>): void {\n    this.blockedCountForUrl.clear();\n    this.update();\n  }\n\n  private onRequestFinished(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest>): void {\n    const request = event.data;\n    if (request.wasBlocked()) {\n      const count = this.blockedCountForUrl.get(request.url()) || 0;\n      this.blockedCountForUrl.set(request.url(), count + 1);\n      this.update();\n    }\n  }\n  override wasShown(): void {\n    UI.Context.Context.instance().setFlavor(BlockedURLsPane, this);\n    super.wasShown();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    UI.Context.Context.instance().setFlavor(BlockedURLsPane, null);\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const blockedURLsPane = context.flavor(BlockedURLsPane);\n    if (blockedURLsPane === null) {\n      return false;\n    }\n    switch (actionId) {\n      case 'network.add-network-request-blocking-pattern': {\n        blockedURLsPane.addPattern();\n        return true;\n      }\n\n      case 'network.remove-all-network-request-blocking-patterns': {\n        blockedURLsPane.removeAllPatterns();\n        return true;\n      }\n    }\n    return false;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.list {\n  border: none !important; /* stylelint-disable-line declaration-no-important */\n  border-top: 1px solid var(--sys-color-divider) !important; /* stylelint-disable-line declaration-no-important */\n  display: flex;\n  height: 100%;\n}\n\n.blocking-disabled {\n  opacity: 80%;\n}\n\n.editor-container {\n  padding: 0 4px;\n}\n\n.blocked-urls {\n  overflow: hidden auto;\n}\n\n.no-blocked-urls > span {\n  white-space: pre;\n}\n\n.blocked-url {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex: auto;\n}\n\n.blocked-url-count {\n  flex: none;\n  padding-right: 9px;\n}\n\n.blocked-url-checkbox {\n  margin-left: 8px;\n  flex: none;\n}\n\n.blocked-url-checkbox:focus {\n  outline: auto 5px -webkit-focus-ring-color;\n}\n\n.blocked-url-label {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  flex: auto;\n  padding: 0 3px;\n}\n\n.blocked-url-edit-row {\n  flex: none;\n  display: flex;\n  flex-direction: row;\n  margin: 7px 5px 0;\n  align-items: center;\n}\n\n.blocked-url-edit-value {\n  user-select: none;\n  flex: 1 1 0;\n}\n\n.blocked-url-edit-row input {\n  width: 100%;\n  text-align: inherit;\n  height: 22px;\n}\n\n/*# sourceURL=${import.meta.resolve('./blockedURLsPane.css')} */`;", "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport eventSourceMessagesViewStyles from './eventSourceMessagesView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Event Source Messages View of the Network panel\n   */\n  id: 'Id',\n  /**\n   * @description Text that refers to some types\n   */\n  type: 'Type',\n  /**\n   * @description Text in Event Source Messages View of the Network panel\n   */\n  data: 'Data',\n  /**\n   * @description Text that refers to the time\n   */\n  time: 'Time',\n  /**\n   * @description Data grid name for Event Source data grids\n   */\n  eventSource: 'Event Source',\n  /**\n   * @description A context menu item in the Resource Web Socket Frame View of the Network panel\n   */\n  copyMessage: 'Copy message',\n  /**\n   * @description Text to clear everything\n   */\n  clearAll: 'Clear all',\n  /**\n   * @description Example for placeholder text\n   */\n  filterByRegex: 'Filter using regex (example: https?)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/EventSourceMessagesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class EventSourceMessagesView extends UI.Widget.VBox {\n  private readonly request: SDK.NetworkRequest.NetworkRequest;\n  private dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<EventSourceMessageNode>;\n  private readonly mainToolbar: UI.Toolbar.Toolbar;\n  private readonly clearAllButton: UI.Toolbar.ToolbarButton;\n  private readonly filterTextInput: UI.Toolbar.ToolbarInput;\n  private filterRegex: RegExp|null;\n\n  private messageFilterSetting: Common.Settings.Setting<string> =\n      Common.Settings.Settings.instance().createSetting('network-event-source-message-filter', '');\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super({jslog: `${VisualLogging.pane('event-stream').track({resize: true})}`});\n    this.registerRequiredCSS(eventSourceMessagesViewStyles);\n\n    this.element.classList.add('event-source-messages-view');\n    this.request = request;\n\n    this.mainToolbar = this.element.createChild('devtools-toolbar');\n\n    this.clearAllButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearAll), 'clear');\n    this.clearAllButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.clearMessages, this);\n    this.mainToolbar.appendToolbarItem(this.clearAllButton);\n\n    const placeholder = i18nString(UIStrings.filterByRegex);\n    this.filterTextInput = new UI.Toolbar.ToolbarFilter(placeholder, 0.4);\n    this.filterTextInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED, this.updateFilterSetting, this);\n    const filter = this.messageFilterSetting.get();\n    this.filterRegex = null;\n    this.setFilter(filter);\n    if (filter) {\n      this.filterTextInput.setValue(filter);\n    }\n    this.mainToolbar.appendToolbarItem(this.filterTextInput);\n\n    const columns = ([\n      {id: 'id', title: i18nString(UIStrings.id), sortable: true, weight: 8},\n      {id: 'type', title: i18nString(UIStrings.type), sortable: true, weight: 8},\n      {id: 'data', title: i18nString(UIStrings.data), sortable: false, weight: 88},\n      {id: 'time', title: i18nString(UIStrings.time), sortable: true, weight: 8},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n\n    this.dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: i18nString(UIStrings.eventSource),\n      columns,\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    });\n    this.dataGrid.setStriped(true);\n    this.dataGrid.setEnableAutoScrollToBottom(true);\n    this.dataGrid.setRowContextMenuCallback(this.onRowContextMenu.bind(this));\n    this.dataGrid.markColumnAsSortedBy('time', DataGrid.DataGrid.Order.Ascending);\n    this.sortItems();\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SORTING_CHANGED, this.sortItems, this);\n\n    this.dataGrid.setName('event-source-messages-view');\n    this.dataGrid.asWidget().show(this.element);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.refresh();\n    this.request.addEventListener(SDK.NetworkRequest.Events.EVENT_SOURCE_MESSAGE_ADDED, this.messageAdded, this);\n  }\n\n  override willHide(): void {\n    this.request.removeEventListener(SDK.NetworkRequest.Events.EVENT_SOURCE_MESSAGE_ADDED, this.messageAdded, this);\n  }\n\n  private messageAdded(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.EventSourceMessage>): void {\n    const message = event.data;\n    if (!this.messageFilter(message)) {\n      return;\n    }\n    this.dataGrid.insertChild(new EventSourceMessageNode(message));\n  }\n\n  private messageFilter(message: SDK.NetworkRequest.EventSourceMessage): boolean {\n    return !this.filterRegex || this.filterRegex.test(message.eventName) || this.filterRegex.test(message.eventId) ||\n        this.filterRegex.test(message.data);\n  }\n\n  private clearMessages(): void {\n    clearMessageOffsets.set(this.request, this.request.eventSourceMessages().length);\n    this.refresh();\n  }\n\n  private updateFilterSetting(): void {\n    const text = this.filterTextInput.value();\n    this.messageFilterSetting.set(text);\n    this.setFilter(text);\n    this.refresh();\n  }\n\n  private setFilter(text: string): void {\n    this.filterRegex = null;\n    if (text) {\n      try {\n        this.filterRegex = new RegExp(text, 'i');\n      } catch {\n        // this regex will never match any input\n        this.filterRegex = new RegExp('(?!)', 'i');\n      }\n    }\n  }\n\n  private sortItems(): void {\n    const sortColumnId = this.dataGrid.sortColumnId();\n    if (!sortColumnId) {\n      return;\n    }\n    const comparator =\n        (Comparators[sortColumnId] as\n             ((arg0: DataGrid.SortableDataGrid.SortableDataGridNode<EventSourceMessageNode>,\n               arg1: DataGrid.SortableDataGrid.SortableDataGridNode<EventSourceMessageNode>) => number) |\n         undefined);\n    if (!comparator) {\n      return;\n    }\n    this.dataGrid.sortNodes(comparator, !this.dataGrid.isSortOrderAscending());\n  }\n\n  private onRowContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu,\n      node: DataGrid.DataGrid.DataGridNode<DataGrid.ViewportDataGrid.ViewportDataGridNode<\n          DataGrid.SortableDataGrid.SortableDataGridNode<EventSourceMessageNode>>>): void {\n    contextMenu.clipboardSection().appendItem(\n        i18nString(UIStrings.copyMessage),\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText.bind(\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance, node.data.data),\n        {jslogContext: 'copy'});\n  }\n\n  refresh(): void {\n    this.dataGrid.rootNode().removeChildren();\n\n    let messages = this.request.eventSourceMessages();\n    const offset = clearMessageOffsets.get(this.request) || 0;\n    messages = messages.slice(offset);\n    messages = messages.filter(this.messageFilter.bind(this));\n    messages.forEach(message => this.dataGrid.insertChild(new EventSourceMessageNode(message)));\n  }\n}\n\nexport class EventSourceMessageNode extends DataGrid.SortableDataGrid.SortableDataGridNode<EventSourceMessageNode> {\n  readonly message: SDK.NetworkRequest.EventSourceMessage;\n\n  constructor(message: SDK.NetworkRequest.EventSourceMessage) {\n    const time = new Date(message.time * 1000);\n    const timeText = ('0' + time.getHours()).substr(-2) + ':' + ('0' + time.getMinutes()).substr(-2) + ':' +\n        ('0' + time.getSeconds()).substr(-2) + '.' + ('00' + time.getMilliseconds()).substr(-3);\n    const timeNode = document.createElement('div');\n    UI.UIUtils.createTextChild(timeNode, timeText);\n    UI.Tooltip.Tooltip.install(timeNode, time.toLocaleString());\n    super({id: message.eventId, type: message.eventName, data: message.data, time: timeNode});\n    this.message = message;\n  }\n}\n\nfunction eventSourceMessageNodeComparator(\n    fieldGetter: (arg0: SDK.NetworkRequest.EventSourceMessage) => (number | string), a: EventSourceMessageNode,\n    b: EventSourceMessageNode): number {\n  const aValue = fieldGetter(a.message);\n  const bValue = fieldGetter(b.message);\n  return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n}\n\nexport const Comparators: Record<string, (arg0: EventSourceMessageNode, arg1: EventSourceMessageNode) => number> = {\n  id: eventSourceMessageNodeComparator.bind(null, message => message.eventId),\n  type: eventSourceMessageNodeComparator.bind(null, message => message.eventName),\n  time: eventSourceMessageNodeComparator.bind(null, message => message.time),\n};\n\nconst clearMessageOffsets = new WeakMap<SDK.NetworkRequest.NetworkRequest, number>();\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2014 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.event-source-messages-view .data-grid {\n  flex: auto;\n  border: none;\n}\n\n/*# sourceURL=${import.meta.resolve('./eventSourceMessagesView.css')} */`;", "// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\nimport * as EmulationComponents from '../settings/emulation/components/components.js';\n\nimport networkConfigViewStyles from './networkConfigView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in the Network conditions panel shown in the dropdown where the user chooses the user agent.\n   */\n  custom: 'Custom…',\n  /**\n   * @description Placeholder text shown in the input box where a user is expected to add a custom user agent.\n   */\n  enterACustomUserAgent: 'Enter a custom user agent',\n  /**\n   * @description Error message when the custom user agent field is empty.\n   */\n  customUserAgentFieldIsRequired: 'Custom user agent field is required',\n  /**\n   * @description Header for the caching settings within the network conditions panel.\n   */\n  caching: 'Caching',\n  /**\n   * @description Option in the network conditions panel to disable the cache.\n   */\n  disableCache: 'Disable cache',\n  /**\n   * @description Header in Network conditions panel for the network throttling and emulation settings.\n   */\n  networkThrottling: 'Network',\n  /**\n   * @description Header in the network conditions panel for the user agent settings.\n   */\n  userAgent: 'User agent',\n  /**\n   * @description User agent setting in the network conditions panel to use the browser's default value.\n   */\n  selectAutomatically: 'Use browser default',\n  /**\n   * @description Title of a section in the Network conditions panel that includes\n   * a set of checkboxes to override the content encodings supported by the browser.\n   */\n  acceptedEncoding: 'Accepted `Content-Encoding`s',\n  /**\n   * @description Status text displayed after updating user agent client hints.\n   */\n  clientHintsStatusText: 'User agent updated.',\n  /**\n   * @description The aria alert message when the Network conditions panel is shown.\n   */\n  networkConditionsPanelShown: 'Network conditions shown.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkConfigView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet networkConfigViewInstance: NetworkConfigView;\n\nexport class NetworkConfigView extends UI.Widget.VBox {\n  constructor() {\n    super({\n      jslog: `${VisualLogging.panel('network-conditions').track({resize: true})}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(networkConfigViewStyles);\n\n    this.contentElement.classList.add('network-config');\n\n    this.createCacheSection();\n    this.contentElement.createChild('div').classList.add('panel-section-separator');\n    this.createNetworkThrottlingSection();\n    this.contentElement.createChild('div').classList.add('panel-section-separator');\n    this.createUserAgentSection();\n    this.contentElement.createChild('div').classList.add('panel-section-separator');\n    this.createAcceptedEncodingSection();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): NetworkConfigView {\n    const {forceNew} = opts;\n    if (!networkConfigViewInstance || forceNew) {\n      networkConfigViewInstance = new NetworkConfigView();\n    }\n    return networkConfigViewInstance;\n  }\n\n  static createUserAgentSelectAndInput(title: string): {\n    select: HTMLSelectElement,\n    input: HTMLInputElement,\n    error: HTMLElement,\n  } {\n    const userAgentSetting = Common.Settings.Settings.instance().createSetting('custom-user-agent', '');\n    const userAgentMetadataSetting =\n        Common.Settings.Settings.instance().createSetting<Protocol.Emulation.UserAgentMetadata|null>(\n            'custom-user-agent-metadata', null);\n    const userAgentSelectElement = document.createElement('select');\n    userAgentSelectElement.setAttribute(\n        'jslog', `${VisualLogging.dropDown().track({change: true}).context(userAgentSetting.name)}`);\n    UI.ARIAUtils.setLabel(userAgentSelectElement, title);\n\n    const customOverride = {title: i18nString(UIStrings.custom), value: 'custom'};\n    userAgentSelectElement.appendChild(UI.UIUtils.createOption(customOverride.title, customOverride.value, 'custom'));\n\n    for (const userAgentDescriptor of userAgentGroups) {\n      const groupElement = userAgentSelectElement.createChild('optgroup');\n      groupElement.label = userAgentDescriptor.title;\n      for (const userAgentVersion of userAgentDescriptor.values) {\n        const userAgentValue =\n            SDK.NetworkManager.MultitargetNetworkManager.patchUserAgentWithChromeVersion(userAgentVersion.value);\n        groupElement.appendChild(UI.UIUtils.createOption(\n            userAgentVersion.title, userAgentValue, Platform.StringUtilities.toKebabCase(userAgentVersion.title)));\n      }\n    }\n\n    userAgentSelectElement.selectedIndex = 0;\n\n    const otherUserAgentElement = UI.UIUtils.createInput('', 'text');\n    otherUserAgentElement.setAttribute(\n        'jslog', `${VisualLogging.textField().track({change: true}).context(userAgentSetting.name)}`);\n    otherUserAgentElement.value = userAgentSetting.get();\n    UI.Tooltip.Tooltip.install(otherUserAgentElement, userAgentSetting.get());\n    otherUserAgentElement.placeholder = i18nString(UIStrings.enterACustomUserAgent);\n    otherUserAgentElement.required = true;\n    UI.ARIAUtils.setLabel(otherUserAgentElement, otherUserAgentElement.placeholder);\n\n    const errorElement = document.createElement('div');\n    errorElement.classList.add('network-config-input-validation-error');\n    UI.ARIAUtils.markAsAlert(errorElement);\n    if (!otherUserAgentElement.value) {\n      errorElement.textContent = i18nString(UIStrings.customUserAgentFieldIsRequired);\n    }\n\n    settingChanged();\n    userAgentSelectElement.addEventListener('change', userAgentSelected, false);\n    otherUserAgentElement.addEventListener('input', applyOtherUserAgent, false);\n\n    function userAgentSelected(): void {\n      const value = userAgentSelectElement.options[userAgentSelectElement.selectedIndex].value;\n      if (value !== customOverride.value) {\n        userAgentSetting.set(value);\n        otherUserAgentElement.value = value;\n        UI.Tooltip.Tooltip.install(otherUserAgentElement, value);\n        const userAgentMetadata = getUserAgentMetadata(value);\n        userAgentMetadataSetting.set(userAgentMetadata);\n        SDK.NetworkManager.MultitargetNetworkManager.instance().setCustomUserAgentOverride(value, userAgentMetadata);\n      } else {\n        userAgentMetadataSetting.set(null);\n        otherUserAgentElement.select();\n      }\n      errorElement.textContent = '';\n      const userAgentChangeEvent = new CustomEvent('user-agent-change', {detail: {value}});\n      userAgentSelectElement.dispatchEvent(userAgentChangeEvent);\n    }\n\n    function settingChanged(): void {\n      const value = userAgentSetting.get();\n      const options = userAgentSelectElement.options;\n      let selectionRestored = false;\n      for (let i = 0; i < options.length; ++i) {\n        if (options[i].value === value) {\n          userAgentSelectElement.selectedIndex = i;\n          selectionRestored = true;\n          break;\n        }\n      }\n\n      if (!selectionRestored) {\n        userAgentSelectElement.selectedIndex = 0;\n      }\n    }\n\n    function applyOtherUserAgent(): void {\n      if (userAgentSetting.get() !== otherUserAgentElement.value) {\n        if (!otherUserAgentElement.value) {\n          errorElement.textContent = i18nString(UIStrings.customUserAgentFieldIsRequired);\n        } else {\n          errorElement.textContent = '';\n        }\n        userAgentSetting.set(otherUserAgentElement.value);\n        UI.Tooltip.Tooltip.install(otherUserAgentElement, otherUserAgentElement.value);\n        settingChanged();\n      }\n    }\n\n    return {select: userAgentSelectElement, input: otherUserAgentElement, error: errorElement};\n  }\n\n  private createSection(title: string, className?: string): HTMLElement {\n    const section = this.contentElement.createChild('section', 'network-config-group');\n    if (className) {\n      section.classList.add(className);\n    }\n    section.createChild('div', 'network-config-title').textContent = title;\n    return section.createChild('div', 'network-config-fields');\n  }\n\n  private createCacheSection(): void {\n    const section = this.createSection(i18nString(UIStrings.caching), 'network-config-disable-cache');\n    section.appendChild(UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.disableCache), Common.Settings.Settings.instance().moduleSetting('cache-disabled')));\n  }\n\n  private createNetworkThrottlingSection(): void {\n    const title = i18nString(UIStrings.networkThrottling);\n    const section = this.createSection(title, 'network-config-throttling');\n    MobileThrottling.NetworkThrottlingSelector.NetworkThrottlingSelect.createForGlobalConditions(section, title);\n    const saveDataSelect =\n        MobileThrottling.ThrottlingManager.throttlingManager().createSaveDataOverrideSelector('chrome-select').element;\n    section.appendChild(saveDataSelect);\n  }\n\n  private createUserAgentSection(): void {\n    const userAgentMetadataSetting =\n        Common.Settings.Settings.instance().createSetting<Protocol.Emulation.UserAgentMetadata|null>(\n            'custom-user-agent-metadata', null);\n    const customUserAgentSetting = Common.Settings.Settings.instance().createSetting('custom-user-agent', '');\n\n    const title = i18nString(UIStrings.userAgent);\n    const section = this.createSection(title, 'network-config-ua');\n    const autoCheckbox = UI.UIUtils.CheckboxLabel.create(\n        i18nString(UIStrings.selectAutomatically), true, undefined, customUserAgentSetting.name);\n    section.appendChild(autoCheckbox);\n\n    customUserAgentSetting.addChangeListener(() => {\n      if (autoCheckbox.checked) {\n        return;\n      }\n      const customUA = customUserAgentSetting.get();\n      const userAgentMetadata = getUserAgentMetadata(customUA);\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setCustomUserAgentOverride(customUA, userAgentMetadata);\n    });\n    const customUserAgentSelectBox = section.createChild('div', 'network-config-ua-custom');\n    autoCheckbox.addEventListener('change', userAgentSelectBoxChanged);\n    const customSelectAndInput = NetworkConfigView.createUserAgentSelectAndInput(title);\n    customUserAgentSelectBox.appendChild(customSelectAndInput.select);\n    customUserAgentSelectBox.appendChild(customSelectAndInput.input);\n    customUserAgentSelectBox.appendChild(customSelectAndInput.error);\n\n    const clientHints = new EmulationComponents.UserAgentClientHintsForm.UserAgentClientHintsForm();\n    const userAgentMetaDataSetting = userAgentMetadataSetting.get();\n    const initialUserAgentMetaData = getUserAgentMetadata(customSelectAndInput.select.value);\n    clientHints.value = {\n      showMobileCheckbox: true,\n      showSubmitButton: true,\n      metaData: userAgentMetaDataSetting || initialUserAgentMetaData || undefined,\n    };\n    customUserAgentSelectBox.appendChild(clientHints);\n\n    customSelectAndInput.select.addEventListener('user-agent-change', (event: Event) => {\n      const userStringValue = (event as CustomEvent).detail.value;\n      const userAgentMetadata = userStringValue ? getUserAgentMetadata(userStringValue) : null;\n      clientHints.value = {\n        metaData: userAgentMetadata || undefined,\n        showMobileCheckbox: true,\n        showSubmitButton: true,\n      };\n      userAgentUpdateButtonStatusText.textContent = '';\n    });\n\n    clientHints.addEventListener('clienthintschange', () => {\n      customSelectAndInput.select.value = 'custom';\n      userAgentUpdateButtonStatusText.textContent = '';\n    });\n\n    clientHints.addEventListener('clienthintssubmit', (event: Event) => {\n      const metaData: Protocol.Emulation.UserAgentMetadata = (event as CustomEvent).detail.value;\n      const customUA = customUserAgentSetting.get();\n      userAgentMetadataSetting.set(metaData);\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setCustomUserAgentOverride(customUA, metaData);\n      userAgentUpdateButtonStatusText.textContent = i18nString(UIStrings.clientHintsStatusText);\n    });\n\n    const userAgentUpdateButtonStatusText = section.createChild('span', 'status-text');\n    userAgentUpdateButtonStatusText.textContent = '';\n\n    userAgentSelectBoxChanged();\n\n    function userAgentSelectBoxChanged(): void {\n      const useCustomUA = !autoCheckbox.checked;\n      customUserAgentSelectBox.classList.toggle('checked', useCustomUA);\n      customSelectAndInput.select.disabled = !useCustomUA;\n      customSelectAndInput.input.disabled = !useCustomUA;\n      customSelectAndInput.error.hidden = !useCustomUA;\n      clientHints.disabled = !useCustomUA;\n      const customUA = useCustomUA ? customUserAgentSetting.get() : '';\n      const userAgentMetadata = useCustomUA ? getUserAgentMetadata(customUA) : null;\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setCustomUserAgentOverride(customUA, userAgentMetadata);\n    }\n  }\n\n  private createAcceptedEncodingSection(): void {\n    const useCustomAcceptedEncodingSetting =\n        Common.Settings.Settings.instance().createSetting('use-custom-accepted-encodings', false);\n    const customAcceptedEncodingSetting = Common.Settings.Settings.instance().createSetting(\n        'custom-accepted-encodings',\n        `${Protocol.Network.ContentEncoding.Gzip},${Protocol.Network.ContentEncoding.Br},${\n            Protocol.Network.ContentEncoding.Deflate}`);\n\n    const title = i18nString(UIStrings.acceptedEncoding);\n    const section = this.createSection(title, 'network-config-accepted-encoding');\n    const autoCheckbox = UI.UIUtils.CheckboxLabel.create(\n        i18nString(UIStrings.selectAutomatically), true, undefined, useCustomAcceptedEncodingSetting.name);\n    section.appendChild(autoCheckbox);\n\n    function onSettingChange(): void {\n      if (!useCustomAcceptedEncodingSetting.get()) {\n        SDK.NetworkManager.MultitargetNetworkManager.instance().clearCustomAcceptedEncodingsOverride();\n      } else {\n        SDK.NetworkManager.MultitargetNetworkManager.instance().setCustomAcceptedEncodingsOverride(\n            customAcceptedEncodingSetting.get() === '' ?\n                [] :\n                customAcceptedEncodingSetting.get().split(',') as Protocol.Network.ContentEncoding[]);\n      }\n    }\n\n    customAcceptedEncodingSetting.addChangeListener(onSettingChange);\n    useCustomAcceptedEncodingSetting.addChangeListener(onSettingChange);\n\n    const encodingsSection = section.createChild('div', 'network-config-accepted-encoding-custom');\n    encodingsSection.setAttribute('jslog', `${VisualLogging.section().context(customAcceptedEncodingSetting.name)}`);\n    autoCheckbox.checked = !useCustomAcceptedEncodingSetting.get();\n    autoCheckbox.addEventListener('change', acceptedEncodingsChanged);\n    const checkboxes = new Map<Protocol.Network.ContentEncoding, UI.UIUtils.CheckboxLabel>();\n    const contentEncodings: Protocol.EnumerableEnum<typeof Protocol.Network.ContentEncoding> = {\n      Deflate: Protocol.Network.ContentEncoding.Deflate,\n      Gzip: Protocol.Network.ContentEncoding.Gzip,\n      Br: Protocol.Network.ContentEncoding.Br,\n      Zstd: Protocol.Network.ContentEncoding.Zstd,\n    };\n    for (const encoding of Object.values(contentEncodings)) {\n      const checkbox = UI.UIUtils.CheckboxLabel.createWithStringLiteral(encoding, true, encoding);\n      encodingsSection.appendChild(checkbox);\n      checkboxes.set(encoding, checkbox);\n    }\n    for (const [encoding, checkbox] of checkboxes) {\n      checkbox.checked = customAcceptedEncodingSetting.get().includes(encoding);\n      checkbox.addEventListener('change', acceptedEncodingsChanged);\n    }\n\n    acceptedEncodingsChanged();\n\n    function acceptedEncodingsChanged(): void {\n      useCustomAcceptedEncodingSetting.set(!autoCheckbox.checked);\n      const encodings = [];\n      for (const [encoding, checkbox] of checkboxes) {\n        checkbox.disabled = autoCheckbox.checked;\n        if (checkbox.checked) {\n          encodings.push(encoding);\n        }\n      }\n      customAcceptedEncodingSetting.set(encodings.join(','));\n    }\n  }\n  override wasShown(): void {\n    super.wasShown();\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.networkConditionsPanelShown));\n  }\n}\n\nfunction getUserAgentMetadata(userAgent: string): Protocol.Emulation.UserAgentMetadata|null {\n  for (const userAgentDescriptor of userAgentGroups) {\n    for (const userAgentVersion of userAgentDescriptor.values) {\n      if (userAgent ===\n          SDK.NetworkManager.MultitargetNetworkManager.patchUserAgentWithChromeVersion(userAgentVersion.value)) {\n        if (!userAgentVersion.metadata) {\n          return null;\n        }\n        SDK.NetworkManager.MultitargetNetworkManager.patchUserAgentMetadataWithChromeVersion(userAgentVersion.metadata);\n        return userAgentVersion.metadata;\n      }\n    }\n  }\n  return null;\n}\n\ninterface UserAgentGroup {\n  title: string;\n  values: Array<{\n    title: string,\n    value: string,\n    metadata: Protocol.Emulation.UserAgentMetadata|null,\n  }>;\n}\n\nexport const userAgentGroups: UserAgentGroup[] = [\n  {\n    title: 'Android',\n    values: [\n      {\n        title: 'Android (4.0.2) Browser \\u2014 Galaxy Nexus',\n        value:\n            'Mozilla/5.0 (Linux; U; Android 4.0.2; en-us; Galaxy Nexus Build/ICL53F) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30',\n        metadata: {\n          brands: [\n            {brand: 'Not A;Brand', version: '99'},\n            {brand: 'Chromium', version: '%s'},\n            {brand: 'Google Chrome', version: '%s'},\n          ],\n          fullVersion: '%s',\n          platform: 'Android',\n          platformVersion: '4.0.2',\n          architecture: '',\n          model: 'Galaxy Nexus',\n          mobile: true,\n        },\n      },\n      {\n        title: 'Android (2.3) Browser \\u2014 Nexus S',\n        value:\n            'Mozilla/5.0 (Linux; U; Android 2.3.6; en-us; Nexus S Build/GRK39F) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1',\n        metadata: {\n          brands: [\n            {brand: 'Not A;Brand', version: '99'},\n            {brand: 'Chromium', version: '%s'},\n            {brand: 'Google Chrome', version: '%s'},\n          ],\n          fullVersion: '%s',\n          platform: 'Android',\n          platformVersion: '2.3.6',\n          architecture: '',\n          model: 'Nexus S',\n          mobile: true,\n        },\n      },\n    ],\n  },\n  {\n    title: 'BlackBerry',\n    values: [\n      {\n        title: 'BlackBerry \\u2014 BB10',\n        value:\n            'Mozilla/5.0 (BB10; Touch) AppleWebKit/537.1+ (KHTML, like Gecko) Version/10.0.0.1337 Mobile Safari/537.1+',\n        metadata: null,\n      },\n      {\n        title: 'BlackBerry \\u2014 PlayBook 2.1',\n        value:\n            'Mozilla/5.0 (PlayBook; U; RIM Tablet OS 2.1.0; en-US) AppleWebKit/536.2+ (KHTML, like Gecko) Version/7.2.1.0 Safari/536.2+',\n        metadata: null,\n      },\n      {\n        title: 'BlackBerry \\u2014 9900',\n        value:\n            'Mozilla/5.0 (BlackBerry; U; BlackBerry 9900; en-US) AppleWebKit/534.11+ (KHTML, like Gecko) Version/7.0.0.187 Mobile Safari/534.11+',\n        metadata: null,\n      },\n    ],\n  },\n  {\n    title: 'Chrome',\n    values: [\n      {\n        title: 'Chrome \\u2014 Android Mobile',\n        value:\n            'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Mobile Safari/537.36',\n        metadata: {\n          brands: [\n            {brand: 'Not A;Brand', version: '99'},\n            {brand: 'Chromium', version: '%s'},\n            {brand: 'Google Chrome', version: '%s'},\n          ],\n          fullVersion: '%s',\n          platform: 'Android',\n          platformVersion: '6.0',\n          architecture: '',\n          model: 'Nexus 5',\n          mobile: true,\n        },\n      },\n      {\n        title: 'Chrome \\u2014 Android Mobile (high-end)',\n        value:\n            'Mozilla/5.0 (Linux; Android 10; Pixel 4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Mobile Safari/537.36',\n        metadata: {\n          brands: [\n            {brand: 'Not A;Brand', version: '99'},\n            {brand: 'Chromium', version: '%s'},\n            {brand: 'Google Chrome', version: '%s'},\n          ],\n          fullVersion: '%s',\n          platform: 'Android',\n          platformVersion: '10',\n          architecture: '',\n          model: 'Pixel 4',\n          mobile: true,\n        },\n      },\n      {\n        title: 'Chrome \\u2014 Android Tablet',\n        value:\n            'Mozilla/5.0 (Linux; Android 4.3; Nexus 7 Build/JSS15Q) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Safari/537.36',\n        metadata: {\n          brands: [\n            {brand: 'Not A;Brand', version: '99'},\n            {brand: 'Chromium', version: '%s'},\n            {brand: 'Google Chrome', version: '%s'},\n          ],\n          fullVersion: '%s',\n          platform: 'Android',\n          platformVersion: '4.3',\n          architecture: '',\n          model: 'Nexus 7',\n          mobile: true,\n        },\n      },\n      {\n        title: 'Chrome \\u2014 iPhone',\n        value:\n            'Mozilla/5.0 (iPhone; CPU iPhone OS 13_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/%s Mobile/15E148 Safari/604.1',\n        metadata: null,\n      },\n      {\n        title: 'Chrome \\u2014 iPad',\n        value:\n            'Mozilla/5.0 (iPad; CPU OS 13_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/%s Mobile/15E148 Safari/604.1',\n        metadata: null,\n      },\n      {\n        title: 'Chrome \\u2014 Chrome OS',\n        value:\n            'Mozilla/5.0 (X11; CrOS x86_64 10066.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Safari/537.36',\n        metadata: {\n          brands: [\n            {brand: 'Not A;Brand', version: '99'},\n            {brand: 'Chromium', version: '%s'},\n            {brand: 'Google Chrome', version: '%s'},\n          ],\n          fullVersion: '%s',\n          platform: 'Chrome OS',\n          platformVersion: '10066.0.0',\n          architecture: 'x86',\n          model: '',\n          mobile: false,\n        },\n      },\n      {\n        title: 'Chrome \\u2014 Mac',\n        value:\n            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Safari/537.36',\n        metadata: {\n          brands: [\n            {brand: 'Not A;Brand', version: '99'},\n            {brand: 'Chromium', version: '%s'},\n            {brand: 'Google Chrome', version: '%s'},\n          ],\n          fullVersion: '%s',\n          platform: 'macOS',\n          platformVersion: '10_14_6',\n          architecture: 'x86',\n          model: '',\n          mobile: false,\n        },\n      },\n      {\n        title: 'Chrome \\u2014 Windows',\n        value: 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Safari/537.36',\n        metadata: {\n          brands: [\n            {brand: 'Not A;Brand', version: '99'},\n            {brand: 'Chromium', version: '%s'},\n            {brand: 'Google Chrome', version: '%s'},\n          ],\n          fullVersion: '%s',\n          platform: 'Windows',\n          platformVersion: '10.0',\n          architecture: 'x86',\n          model: '',\n          mobile: false,\n        },\n      },\n    ],\n  },\n  {\n    title: 'Firefox',\n    values: [\n      {\n        title: 'Firefox \\u2014 Android Mobile',\n        value: 'Mozilla/5.0 (Android 4.4; Mobile; rv:70.0) Gecko/70.0 Firefox/70.0',\n        metadata: null,\n      },\n      {\n        title: 'Firefox \\u2014 Android Tablet',\n        value: 'Mozilla/5.0 (Android 4.4; Tablet; rv:70.0) Gecko/70.0 Firefox/70.0',\n        metadata: null,\n      },\n      {\n        title: 'Firefox \\u2014 iPhone',\n        value:\n            'Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4',\n        metadata: null,\n      },\n      {\n        title: 'Firefox \\u2014 iPad',\n        value:\n            'Mozilla/5.0 (iPad; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4',\n        metadata: null,\n      },\n      {\n        title: 'Firefox \\u2014 Mac',\n        value: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:70.0) Gecko/20100101 Firefox/70.0',\n        metadata: null,\n      },\n      {\n        title: 'Firefox \\u2014 Windows',\n        value: 'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:70.0) Gecko/20100101 Firefox/70.0',\n        metadata: null,\n      },\n    ],\n  },\n  {\n    title: 'Googlebot',\n    values: [\n      {\n        title: 'Googlebot',\n        value: 'Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)',\n        metadata: null,\n      },\n      {\n        title: 'Googlebot Desktop',\n        value:\n            'Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; Googlebot/2.1; +http://www.google.com/bot.html) Chrome/%s Safari/537.36',\n        metadata: null,\n      },\n      {\n        title: 'Googlebot Smartphone',\n        value:\n            'Mozilla/5.0 (Linux; Android 6.0.1; Nexus 5X Build/MMB29P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Mobile Safari/537.36 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)',\n        metadata: null,\n      },\n    ],\n  },\n  {\n    title: 'Internet Explorer',\n    values: [\n      {\n        title: 'Internet Explorer 11',\n        value: 'Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko',\n        metadata: null,\n      },\n      {\n        title: 'Internet Explorer 10',\n        value: 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)',\n        metadata: null,\n      },\n      {\n        title: 'Internet Explorer 9',\n        value: 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',\n        metadata: null,\n      },\n      {\n        title: 'Internet Explorer 8',\n        value: 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)',\n        metadata: null,\n      },\n      {title: 'Internet Explorer 7', value: 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)', metadata: null},\n    ],\n  },\n  {\n    title: 'Microsoft Edge',\n    values: [\n      {\n        title: 'Microsoft Edge (Chromium) \\u2014 Windows',\n        value:\n            'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Safari/537.36 Edg/%s',\n        metadata: {\n          brands: [\n            {brand: 'Not A;Brand', version: '99'},\n            {brand: 'Chromium', version: '%s'},\n            {brand: 'Microsoft Edge', version: '%s'},\n          ],\n          fullVersion: '%s',\n          platform: 'Windows',\n          platformVersion: '10.0',\n          architecture: 'x86',\n          model: '',\n          mobile: false,\n        },\n      },\n      {\n        title: 'Microsoft Edge (Chromium) \\u2014 Mac',\n        value:\n            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Chrome/%s Safari/604.1 Edg/%s',\n        metadata: {\n          brands: [\n            {brand: 'Not A;Brand', version: '99'},\n            {brand: 'Chromium', version: '%s'},\n            {brand: 'Microsoft Edge', version: '%s'},\n          ],\n          fullVersion: '%s',\n          platform: 'macOS',\n          platformVersion: '10_14_6',\n          architecture: 'x86',\n          model: '',\n          mobile: false,\n        },\n      },\n      {\n        title: 'Microsoft Edge \\u2014 iPhone',\n        value:\n            'Mozilla/5.0 (iPhone; CPU iPhone OS 12_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.1 EdgiOS/44.5.0.10 Mobile/15E148 Safari/604.1',\n        metadata: null,\n      },\n      {\n        title: 'Microsoft Edge \\u2014 iPad',\n        value:\n            'Mozilla/5.0 (iPad; CPU OS 12_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 EdgiOS/44.5.2 Mobile/15E148 Safari/605.1.15',\n        metadata: null,\n      },\n      {\n        title: 'Microsoft Edge \\u2014 Android Mobile',\n        value:\n            'Mozilla/5.0 (Linux; Android 8.1.0; Pixel Build/OPM4.171019.021.D1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Mobile Safari/537.36 EdgA/42.0.0.2057',\n        metadata: {\n          brands: [\n            {brand: 'Not A;Brand', version: '99'},\n            {brand: 'Chromium', version: '%s'},\n            {brand: 'Microsoft Edge', version: '%s'},\n          ],\n          fullVersion: '%s',\n          platform: 'Android',\n          platformVersion: '8.1.0',\n          architecture: '',\n          model: 'Pixel',\n          mobile: true,\n        },\n      },\n      {\n        title: 'Microsoft Edge \\u2014 Android Tablet',\n        value:\n            'Mozilla/5.0 (Linux; Android 6.0.1; Nexus 7 Build/MOB30X) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Safari/537.36 EdgA/42.0.0.2057',\n        metadata: {\n          brands: [\n            {brand: 'Not A;Brand', version: '99'},\n            {brand: 'Chromium', version: '%s'},\n            {brand: 'Microsoft Edge', version: '%s'},\n          ],\n          fullVersion: '%s',\n          platform: 'Android',\n          platformVersion: '6.0.1',\n          architecture: '',\n          model: 'Nexus 7',\n          mobile: true,\n        },\n      },\n      {\n        title: 'Microsoft Edge (EdgeHTML) \\u2014 Windows',\n        value:\n            'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Safari/537.36 Edge/18.19042',\n        metadata: null,\n      },\n      {\n        title: 'Microsoft Edge (EdgeHTML) \\u2014 XBox',\n        value:\n            'Mozilla/5.0 (Windows NT 10.0; Win64; x64; Xbox; Xbox One) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Safari/537.36 Edge/18.19041',\n        metadata: null,\n      },\n    ],\n  },\n  {\n    title: 'Opera',\n    values: [\n      {\n        title: 'Opera \\u2014 Mac',\n        value:\n            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Safari/537.36 OPR/65.0.3467.48',\n        metadata: null,\n      },\n      {\n        title: 'Opera \\u2014 Windows',\n        value:\n            'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/%s Safari/537.36 OPR/65.0.3467.48',\n        metadata: null,\n      },\n      {\n        title: 'Opera (Presto) \\u2014 Mac',\n        value: 'Opera/9.80 (Macintosh; Intel Mac OS X 10.9.1) Presto/2.12.388 Version/12.16',\n        metadata: null,\n      },\n      {\n        title: 'Opera (Presto) \\u2014 Windows',\n        value: 'Opera/9.80 (Windows NT 6.1) Presto/2.12.388 Version/12.16',\n        metadata: null,\n      },\n      {\n        title: 'Opera Mobile \\u2014 Android Mobile',\n        value: 'Opera/12.02 (Android 4.1; Linux; Opera Mobi/ADR-1111101157; U; en-US) Presto/2.9.201 Version/12.02',\n        metadata: null,\n      },\n      {\n        title: 'Opera Mini \\u2014 iOS',\n        value: 'Opera/9.80 (iPhone; Opera Mini/8.0.0/34.2336; U; en) Presto/2.8.119 Version/11.10',\n        metadata: null,\n      },\n    ],\n  },\n  {\n    title: 'Safari',\n    values: [\n      {\n        title: 'Safari \\u2014 iPad iOS 13.2',\n        value:\n            'Mozilla/5.0 (iPad; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1',\n        metadata: null,\n      },\n      {\n        title: 'Safari \\u2014 iPhone iOS 13.2',\n        value:\n            'Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1',\n        metadata: null,\n      },\n      {\n        title: 'Safari \\u2014 Mac',\n        value:\n            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Safari/605.1.15',\n        metadata: null,\n      },\n    ],\n  },\n  {\n    title: 'UC Browser',\n    values: [\n      {\n        title: 'UC Browser \\u2014 Android Mobile',\n        value:\n            'Mozilla/5.0 (Linux; U; Android 8.1.0; en-US; Nexus 6P Build/OPM7.181205.001) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/%s UCBrowser/12.11.1.1197 Mobile Safari/537.36',\n        metadata: null,\n      },\n      {\n        title: 'UC Browser \\u2014 iOS',\n        value:\n            'Mozilla/5.0 (iPhone; CPU iPhone OS 12_1 like Mac OS X; zh-CN) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/16B92 UCBrowser/12.1.7.1109 Mobile AliApp(TUnionSDK/0.1.20.3)',\n        metadata: null,\n      },\n      {\n        title: 'UC Browser \\u2014 Windows Phone',\n        value:\n            'Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 920) UCBrowser/10.1.0.563 Mobile',\n        metadata: null,\n      },\n    ],\n  },\n];\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.network-config {\n  padding: 12px;\n  display: block;\n}\n\n.network-config-group {\n  display: flex;\n  padding-bottom: 10px;\n  flex-wrap: wrap;\n  flex: 0 0 auto;\n  min-height: 30px;\n}\n\n.network-config-title {\n  margin-right: 16px;\n  width: 130px;\n}\n\n.network-config-fields {\n  flex: 2 0 200px;\n}\n\n.network-config-fields span:first-of-type,\n.network-config-fields .network-config-accepted-encoding-custom {\n  padding: 3px 0;\n}\n\n.panel-section-separator {\n  height: 1px;\n  margin-bottom: 10px;\n  background: var(--sys-color-divider);\n}\n/* Disable cache */\n\n.network-config-disable-cache {\n  line-height: 28px;\n  border-top: none;\n  padding-top: 0;\n}\n\n.network-config-input-validation-error {\n  color: var(--sys-color-error);\n  margin: 5px 0;\n}\n\n.network-config-input-validation-error:empty {\n  display: none;\n}\n/* Network throttling */\n\n.network-config-throttling {\n  select {\n    width: 100%;\n    max-width: 250px;\n  }\n\n  .network-config-fields {\n    display: flex;\n    column-gap: var(--sys-size-5);\n  }\n\n  & > .network-config-title {\n    line-height: 24px;\n  }\n}\n/* User agent */\n\n.network-config-ua > .network-config-title {\n  line-height: 20px;\n}\n\n.network-config-ua input {\n  display: block;\n  width: calc(100% - 20px);\n}\n\n.network-config-ua input[type=\"text\"],\n.network-config-ua select {\n  margin-top: 8px;\n}\n\n.network-config-ua select {\n  width: calc(100% - 20px);\n  max-width: 250px;\n}\n\n.network-config-ua-custom {\n  padding-bottom: 8px;\n\n  input,\n  devtools-user-agent-client-hints-form {\n    opacity: 38%;\n    pointer-events: none;\n  }\n\n  &.checked input,\n  &.checked devtools-user-agent-client-hints-form {\n    opacity: revert;\n    pointer-events: revert;\n  }\n}\n\ndevtools-user-agent-client-hints-form {\n  display: block;\n  margin-top: 14px;\n  width: min(100%, 400px);\n}\n\n.status-text {\n  padding: 10px;\n  color: var(--sys-color-tertiary);\n}\n\n/*# sourceURL=${import.meta.resolve('./networkConfigView.css')} */`;", "// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008, 2009 Anthony Ricaud <rik@webkit.org>\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport type * as HAR from '../../models/har/har.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {render} from '../../ui/lit/lit.js';\nimport {PanelUtils} from '../utils/utils.js';\n\nimport type {NetworkTimeCalculator} from './NetworkTimeCalculator.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Network Data Grid Node of the Network panel\n   */\n  redirect: 'Redirect',\n  /**\n   * @description Content of the request method column in the network log view. Some requests require an additional request to check permissions, and this additional request is called 'Preflight Request', see https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request. In the request method column we use, for example, 'POST + Preflight' to indicate that the request method was 'POST' and the request was accompanied by a preflight request. Since the column is short, the translation for Preflight in this context should ideally also be short.\n   * @example {GET} PH1\n   */\n  sPreflight: '{PH1} + Preflight',\n  /**\n   * @description Name of a network initiator type\n   */\n  preflight: 'Preflight',\n  /**\n   * @description Title for a link element in the network log view\n   */\n  selectPreflightRequest: 'Select preflight request',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel\n   */\n  failed: '(failed)',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel\n   */\n  data: '(data)',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel. Indicates a network request has\n   * been canceled.\n   */\n  canceled: '(canceled)',\n  /**\n   * @description Reason in Network Data Grid Node of the Network panel\n   */\n  other: 'other',\n  /**\n   * @description Reason in Network Data Grid Node of the Network panel\n   */\n  csp: 'csp',\n  /**\n   * @description Reason in Network Data Grid Node of the Network panel\n   */\n  origin: 'origin',\n  /**\n   * @description Reason why a request was blocked shown in the Network panel\n   */\n  coepFrameResourceNeedsCoepHeader: 'COEP-framed resource needs COEP header',\n  /**\n   * @description Reason why a request was blocked shown in the Network panel\n   */\n  coopSandboxedIframeCannotNavigateToCoopPage: 'Sandboxed iframe\\'s popup cannot navigate to COOP page',\n  /**\n   * @description Reason why a request was blocked shown in the Network panel\n   */\n  corpNotSameOrigin: 'CORP not \"same-origin\"',\n  /**\n   * @description Reason why a request was blocked shown in the Network panel\n   */\n  corpNotSameSite: 'CORP not \"same-site\"',\n  /**\n   * @description Reason why a request was blocked shown in the Network panel\n   */\n  corpNotSameOriginAfterDefaultedToSameOriginByCoep: 'CORP not \"same-origin\" after defaulted to \"same-origin\" by COEP',\n  /**\n   * @description Noun. Shown in a table cell as the reason why a network request failed. \"integrity\" here refers to the integrity of the network request itself in a cryptographic sense: signature verification might have failed, for instance.\n   */\n  integrity: 'integrity',\n  /**\n   * @description Reason in Network Data Grid Node of the Network panel\n   */\n  devtools: 'devtools',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel\n   * @example {mixed-content} PH1\n   */\n  blockeds: '(blocked:{PH1})',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel\n   */\n  blockedTooltip: 'This request was blocked due to misconfigured response headers, click to view the headers',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel\n   */\n  corsError: 'CORS error',\n  /**\n   * @description Tooltip providing the cors error code\n   * @example {PreflightDisallowedRedirect} PH1\n   */\n  crossoriginResourceSharingErrorS: 'Cross-Origin Resource Sharing error: {PH1}',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel\n   */\n  finished: 'Finished',\n  /**\n   * @description Status text in the Network panel that indicates a network request is still loading\n   * and has not finished yet (is pending).\n   */\n  pendingq: '(pending)',\n  /**\n   * @description Status text in the Network panel that indicates a network request state is not known.\n   */\n  unknown: '(unknown)',\n  /**\n   * @description Tooltip providing details on why the request has unknown status.\n   */\n  unknownExplanation:\n      'The request status cannot be shown here because the page that issued it unloaded while the request was in flight. You can use chrome://net-export to capture a network log and see all request details.',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel. Noun, short for a 'HTTP server\n   * push'.\n   */\n  push: 'Push / ',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel\n   */\n  parser: 'Parser',\n  /**\n   * @description Label for a group of JavaScript files\n   */\n  script: 'Script',\n  /**\n   * @description Cell title in Network Data Grid Node of the Network panel\n   */\n  preload: 'Preload',\n  /**\n   * @description Cell title in Network Data Grid Node of the Network panel\n   */\n  earlyHints: 'early-hints',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel\n   */\n  signedexchange: 'signed-exchange',\n  /**\n   * @description Title for a link element in the network log view\n   */\n  selectTheRequestThatTriggered: 'Select the request that triggered this preflight',\n  /**\n   * @description Text for other types of items\n   */\n  otherC: 'Other',\n  /**\n   * @description Text of a DOM element in Network Data Grid Node of the Network panel\n   */\n  memoryCache: '(memory cache)',\n  /**\n   * @description Cell title in Network Data Grid Node of the Network panel. Indicates that the response came from memory cache.\n   * @example {50 B} PH1\n   */\n  servedFromMemoryCacheResource: 'Served from memory cache, resource size: {PH1}',\n  /**\n   * @description Text of a DOM element in Network Data Grid Node of the Network panel\n   */\n  serviceWorker: '(`ServiceWorker`)',\n  /**\n   * @description Cell title in Network Data Grid Node of the Network panel\n   * @example {4 B} PH1\n   * @example {10 B} PH2\n   */\n  servedFromNetwork: '{PH1} transferred over network, resource size: {PH2}',\n  /**\n   * @description Cell title in Network Data Grid Node of the Network panel\n   * @example {4 B} PH1\n   * @example {10 B} PH2\n   */\n  servedFromNetworkMissingServiceWorkerRoute:\n      '{PH1} transferred over network, resource size: {PH2}, no matching ServiceWorker routes',\n  /**\n   * @description Cell title in Network Data Grid Node of the Network panel\n   * @example {4 B} PH1\n   */\n  servedFromServiceWorkerResource: 'Served from `ServiceWorker`, resource size: {PH1}',\n  /**\n   * @description Cell title in Network Data Grid Node of the Network panel\n   * @example {4 B} PH1\n   */\n  servedFromSignedHttpExchange: 'Served from Signed HTTP Exchange, resource size: {PH1}',\n  /**\n   * @description Cell title in Network Data Grid Node of the Network panel. Indicates that the response came from preloaded web bundle. See https://web.dev/web-bundles/\n   * @example {4 B} PH1\n   */\n  servedFromWebBundle: 'Served from Web Bundle, resource size: {PH1}',\n  /**\n   * @description Text of a DOM element in Network Data Grid Node of the Network panel\n   */\n  prefetchCache: '(prefetch cache)',\n  /**\n   * @description Cell title in Network Data Grid Node of the Network panel\n   * @example {4 B} PH1\n   */\n  servedFromPrefetchCacheResource: 'Served from prefetch cache, resource size: {PH1}',\n  /**\n   * @description Text of a DOM element in Network Data Grid Node of the Network panel\n   */\n  diskCache: '(disk cache)',\n  /**\n   * @description Cell title in Network Data Grid Node of the Network panel\n   * @example {10 B} PH1\n   */\n  servedFromDiskCacheResourceSizeS: 'Served from disk cache, resource size: {PH1}',\n  /**\n   * @description Cell title in Network Data Grid Node of the Network panel\n   * @example {1} PH1\n   * @example {4 B} PH2\n   */\n  matchedToServiceWorkerRouter: 'Matched to `ServiceWorker router`#{PH1}, resource size: {PH2}',\n\n  /**\n   * @description Cell title in Network Data Grid Node of the Network panel\n   * @example {1} PH1\n   * @example {4 B} PH2\n   * @example {12 B} PH3\n   */\n  matchedToServiceWorkerRouterWithNetworkSource:\n      'Matched to `ServiceWorker router`#{PH1}, {PH2} transferred over network, resource size: {PH3}',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel\n   */\n  pending: 'Pending',\n  /**\n   * @description Text describing the depth of a top level node in the network datagrid\n   */\n  level: 'level 1',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel\n   */\n  webBundleError: 'Web Bundle error',\n  /**\n   * @description Alternative text for the web bundle inner request icon in Network Data Grid Node of the Network panel\n   * Indicates that the response came from preloaded web bundle. See https://web.dev/web-bundles/\n   */\n  webBundleInnerRequest: 'Served from Web Bundle',\n  /**\n   * @description Text in Network Data Grid Node of the Network panel\n   */\n  webBundle: '(Web Bundle)',\n  /**\n   * @description Tooltip text for subtitles of Time cells in Network request rows. Latency is the time difference\n   * between the time a response to a network request is received and the time the request is started.\n   */\n  timeSubtitleTooltipText: 'Latency (response received time - start time)',\n  /**\n   * @description Tooltip text giving the reason why a specific HTTP transport protocol has been used\n   */\n  alternativeJobWonWithoutRace:\n      '`Chrome` used a `HTTP/3` connection induced by an \\'`Alt-Svc`\\' header without racing against establishing a connection using a different `HTTP` version.',\n  /**\n   * @description Tooltip text giving the reason why a specific HTTP transport protocol has been used\n   */\n  alternativeJobWonRace:\n      '`Chrome` used a `HTTP/3` connection induced by an \\'`Alt-Svc`\\' header because it won a race against establishing a connection using a different `HTTP` version.',\n  /**\n   * @description Tooltip text giving the reason why a specific HTTP transport protocol has been used\n   */\n  mainJobWonRace: '`Chrome` used this protocol because it won a race against establishing a `HTTP/3` connection.',\n  /**\n   * @description Tooltip text giving the reason why a specific HTTP transport protocol has been used\n   */\n  mappingMissing:\n      '`Chrome` did not use an alternative `HTTP` version because no alternative protocol information was available when the request was issued, but an \\'`Alt-Svc`\\' header was present in the response.',\n  /**\n   * @description Tooltip text giving the reason why a specific HTTP transport protocol has been used\n   */\n  broken: '`Chrome` did not try to establish a `HTTP/3` connection because it was marked as broken.',\n  /**\n   * @description Tooltip text giving the reason why a specific HTTP transport protocol has been used\n   */\n  dnsAlpnH3JobWonWithoutRace:\n      '`Chrome` used a `HTTP/3` connection due to the `DNS record` indicating `HTTP/3` support. There was no race against establishing a connection using a different `HTTP` version.',\n  /**\n   * @description Tooltip text giving the reason why a specific HTTP transport protocol has been used\n   */\n  dnsAlpnH3JobWonRace:\n      '`Chrome` used a `HTTP/3` connection due to the `DNS record` indicating `HTTP/3` support, which won a race against establishing a connection using a different `HTTP` version.',\n  /**\n   * @description Tooltip to explain the resource's initial priority\n   * @example {High} PH1\n   * @example {Low} PH2\n   */\n  initialPriorityToolTip: '{PH1}, Initial priority: {PH2}',\n  /**\n   * @description Tooltip to explain why the request has an IPP icon\n   */\n  responseIsIpProtectedToolTip: 'This request was sent through IP Protection proxies.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkDataGridNode.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport const enum Events {\n  // RequestSelected might fire twice for the same \"activation\"\n  RequestSelected = 'RequestSelected',\n  RequestActivated = 'RequestActivated',\n}\n\nexport const enum RequestPanelBehavior {\n  ShowPanel = 'ShowPanel',\n  HidePanel = 'HidePanel',\n  Unchanged = 'Unchanged',\n}\n\nexport interface RequestActivatedEvent {\n  showPanel: RequestPanelBehavior;\n  takeFocus?: boolean;\n  tab?: NetworkForward.UIRequestLocation.UIRequestTabs;\n}\n\nexport interface EventTypes {\n  [Events.RequestSelected]: SDK.NetworkRequest.NetworkRequest;\n  [Events.RequestActivated]: RequestActivatedEvent;\n}\n\nexport interface NetworkLogViewInterface extends Common.EventTarget.EventTarget<EventTypes> {\n  onLoadFromFile(file: File): Promise<void>;\n  nodeForRequest(request: SDK.NetworkRequest.NetworkRequest): NetworkRequestNode|null;\n  headerHeight(): number;\n  setRecording(recording: boolean): void;\n  setWindow(start: number, end: number): void;\n  resetFocus(): void;\n  columnExtensionResolved(): void;\n  hoveredNode(): NetworkNode|null;\n  scheduleRefresh(): void;\n  addFilmStripFrames(times: number[]): void;\n  selectFilmStripFrame(time: number): void;\n  clearFilmStripFrame(): void;\n  timeCalculator(): NetworkTimeCalculator;\n  calculator(): NetworkTimeCalculator;\n  setCalculator(x: NetworkTimeCalculator): void;\n  flatNodesList(): NetworkNode[];\n  updateNodeBackground(): void;\n  updateNodeSelectedClass(isSelected: boolean): void;\n  stylesChanged(): void;\n  setTextFilterValue(filterString: string): void;\n  rowHeight(): number;\n  switchViewMode(gridMode: boolean): void;\n  handleContextMenuForRequest(contextMenu: UI.ContextMenu.ContextMenu, request: SDK.NetworkRequest.NetworkRequest):\n      void;\n  exportAll(options: HAR.Log.BuildOptions): Promise<void>;\n  revealAndHighlightRequest(request: SDK.NetworkRequest.NetworkRequest): void;\n  selectRequest(request: SDK.NetworkRequest.NetworkRequest): void;\n  removeAllNodeHighlights(): void;\n  modelAdded(model: SDK.NetworkManager.NetworkManager): void;\n  modelRemoved(model: SDK.NetworkManager.NetworkManager): void;\n  linkifier(): Components.Linkifier.Linkifier;\n}\n\nexport class NetworkNode extends DataGrid.SortableDataGrid.SortableDataGridNode<NetworkNode> {\n  private readonly parentViewInternal: NetworkLogViewInterface;\n  private isHovered: boolean;\n  private showingInitiatorChainInternal: boolean;\n  private requestOrFirstKnownChildRequestInternal: SDK.NetworkRequest.NetworkRequest|null;\n\n  constructor(parentView: NetworkLogViewInterface) {\n    super({});\n    this.parentViewInternal = parentView;\n    this.isHovered = false;\n    this.showingInitiatorChainInternal = false;\n    this.requestOrFirstKnownChildRequestInternal = null;\n  }\n\n  displayName(): string {\n    return '';\n  }\n\n  displayType(): string {\n    return '';\n  }\n\n  override createCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId);\n    this.renderCell(cell, columnId);\n    return cell;\n  }\n\n  renderCell(_cell: Element, _columnId: string): void {\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isWarning(): boolean {\n    return false;\n  }\n\n  backgroundColor(): string {\n    const bgColors = _backgroundColors;\n    const hasFocus = document.hasFocus();\n    const isSelected = this.dataGrid && this.dataGrid.element === document.activeElement;\n    const isWarning = this.isWarning();\n    const isError = this.isError();\n\n    if (this.selected && hasFocus && isSelected && isError) {\n      return bgColors.FocusSelectedHasError;\n    }\n    if (this.selected && hasFocus && isSelected && isWarning) {\n      return bgColors.FocusSelectedHasWarning;\n    }\n    if (this.selected && hasFocus && isSelected) {\n      return bgColors.FocusSelected;\n    }\n    if (this.selected) {\n      return bgColors.Selected;\n    }\n    if (this.hovered()) {\n      return bgColors.Hovered;\n    }\n    if (this.isOnInitiatorPath()) {\n      return bgColors.InitiatorPath;\n    }\n    if (this.isOnInitiatedPath()) {\n      return bgColors.InitiatedPath;\n    }\n    if (this.isStriped()) {\n      return bgColors.Stripe;\n    }\n    return bgColors.Default;\n  }\n\n  updateBackgroundColor(): void {\n    const element = (this.existingElement());\n    if (!element) {\n      return;\n    }\n    element.style.backgroundColor = `var(${this.backgroundColor()})`;\n    this.parentViewInternal.stylesChanged();\n  }\n\n  override setStriped(isStriped: boolean): void {\n    super.setStriped(isStriped);\n    this.updateBackgroundColor();\n  }\n\n  override select(suppressSelectedEvent?: boolean): void {\n    super.select(suppressSelectedEvent);\n    this.updateBackgroundColor();\n    this.parentViewInternal.updateNodeSelectedClass(/* isSelected */ true);\n  }\n\n  override deselect(suppressSelectedEvent?: boolean): void {\n    super.deselect(suppressSelectedEvent);\n    this.updateBackgroundColor();\n    this.parentViewInternal.updateNodeSelectedClass(/* isSelected */ false);\n  }\n\n  parentView(): NetworkLogViewInterface {\n    return this.parentViewInternal;\n  }\n\n  hovered(): boolean {\n    return this.isHovered;\n  }\n\n  showingInitiatorChain(): boolean {\n    return this.showingInitiatorChainInternal;\n  }\n\n  override nodeSelfHeight(): number {\n    return this.parentViewInternal.rowHeight();\n  }\n\n  setHovered(hovered: boolean, showInitiatorChain: boolean): void {\n    if (this.isHovered === hovered && this.showingInitiatorChainInternal === showInitiatorChain) {\n      return;\n    }\n    if (this.isHovered !== hovered) {\n      this.isHovered = hovered;\n      if (this.attached()) {\n        this.element().classList.toggle('hover', hovered);\n      }\n    }\n    if (this.showingInitiatorChainInternal !== showInitiatorChain) {\n      this.showingInitiatorChainInternal = showInitiatorChain;\n      this.showingInitiatorChainChanged();\n    }\n    this.parentViewInternal.stylesChanged();\n    this.updateBackgroundColor();\n  }\n\n  showingInitiatorChainChanged(): void {\n  }\n\n  isOnInitiatorPath(): boolean {\n    return false;\n  }\n\n  isOnInitiatedPath(): boolean {\n    return false;\n  }\n\n  request(): SDK.NetworkRequest.NetworkRequest|null {\n    return null;\n  }\n\n  isNavigationRequest(): boolean {\n    return false;\n  }\n\n  override clearFlatNodes(): void {\n    super.clearFlatNodes();\n    this.requestOrFirstKnownChildRequestInternal = null;\n  }\n\n  requestOrFirstKnownChildRequest(): SDK.NetworkRequest.NetworkRequest|null {\n    if (this.requestOrFirstKnownChildRequestInternal) {\n      return this.requestOrFirstKnownChildRequestInternal;\n    }\n    let request = this.request();\n    if (request || !this.hasChildren()) {\n      this.requestOrFirstKnownChildRequestInternal = request;\n      return this.requestOrFirstKnownChildRequestInternal;\n    }\n\n    let firstChildRequest: (SDK.NetworkRequest.NetworkRequest|null)|null = null;\n    const flatChildren = (this.flatChildren() as NetworkNode[]);\n    for (let i = 0; i < flatChildren.length; i++) {\n      request = flatChildren[i].request();\n      if (!firstChildRequest || (request && request.issueTime() < firstChildRequest.issueTime())) {\n        firstChildRequest = request;\n      }\n    }\n    this.requestOrFirstKnownChildRequestInternal = firstChildRequest;\n    return this.requestOrFirstKnownChildRequestInternal;\n  }\n}\n\nexport const _backgroundColors: Record<string, string> = {\n  Default: '--color-grid-default',\n  Stripe: '--color-grid-stripe',\n  Navigation: '--network-grid-navigation-color',\n  Hovered: '--color-grid-hovered',\n  InitiatorPath: '--network-grid-initiator-path-color',\n  InitiatedPath: '--network-grid-initiated-path-color',\n  Selected: '--color-grid-selected',\n  FocusSelected: '--color-grid-focus-selected',\n  FocusSelectedHasError: '--network-grid-focus-selected-color-has-error',\n  FocusSelectedHasWarning: '--network-grid-focus-selected-color-has-warning',\n  FromFrame: '--network-grid-from-frame-color',\n};\n\nexport class NetworkRequestNode extends NetworkNode {\n  private initiatorCell: Element|null;\n  private requestInternal: SDK.NetworkRequest.NetworkRequest;\n  private readonly isNavigationRequestInternal: boolean;\n  override selectable: boolean;\n  private isOnInitiatorPathInternal: boolean;\n  private isOnInitiatedPathInternal: boolean;\n  private linkifiedInitiatorAnchor?: HTMLElement;\n\n  constructor(parentView: NetworkLogViewInterface, request: SDK.NetworkRequest.NetworkRequest) {\n    super(parentView);\n    this.initiatorCell = null;\n    this.requestInternal = request;\n    this.isNavigationRequestInternal = false;\n    this.selectable = true;\n    this.isOnInitiatorPathInternal = false;\n    this.isOnInitiatedPathInternal = false;\n  }\n\n  static NameComparator(a: NetworkNode, b: NetworkNode): number {\n    const aName = a.displayName().toLowerCase();\n    const bName = b.displayName().toLowerCase();\n    if (aName === bName) {\n      const aRequest = a.requestOrFirstKnownChildRequest();\n      const bRequest = b.requestOrFirstKnownChildRequest();\n      if (aRequest && bRequest) {\n        return aRequest.identityCompare(bRequest);\n      }\n      return aRequest ? -1 : 1;\n    }\n    return aName < bName ? -1 : 1;\n  }\n\n  static RemoteAddressComparator(a: NetworkNode, b: NetworkNode): number {\n    // TODO(allada) Handle this properly for group nodes.\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    const aRemoteAddress = aRequest.remoteAddress();\n    const bRemoteAddress = bRequest.remoteAddress();\n    if (aRemoteAddress > bRemoteAddress) {\n      return 1;\n    }\n    if (bRemoteAddress > aRemoteAddress) {\n      return -1;\n    }\n    return aRequest.identityCompare(bRequest);\n  }\n\n  static SizeComparator(a: NetworkNode, b: NetworkNode): number {\n    // TODO(allada) Handle this properly for group nodes.\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    if (bRequest.cached() && !aRequest.cached()) {\n      return 1;\n    }\n    if (aRequest.cached() && !bRequest.cached()) {\n      return -1;\n    }\n    return (aRequest.transferSize - bRequest.transferSize) || (aRequest.resourceSize - bRequest.resourceSize) ||\n        aRequest.identityCompare(bRequest);\n  }\n\n  static TypeComparator(a: NetworkNode, b: NetworkNode): number {\n    // TODO(allada) Handle this properly for group nodes.\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    const aSimpleType = a.displayType();\n    const bSimpleType = b.displayType();\n\n    if (aSimpleType > bSimpleType) {\n      return 1;\n    }\n    if (bSimpleType > aSimpleType) {\n      return -1;\n    }\n    return aRequest.identityCompare(bRequest);\n  }\n\n  static InitiatorComparator(a: NetworkNode, b: NetworkNode): number {\n    // TODO(allada) Handle this properly for group nodes.\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    const aHasInitiatorCell = a instanceof NetworkRequestNode && a.initiatorCell;\n    const bHasInitiatorCell = b instanceof NetworkRequestNode && b.initiatorCell;\n    if (!aHasInitiatorCell || !bHasInitiatorCell) {\n      return !aHasInitiatorCell ? -1 : 1;\n    }\n    // `a` and `b` are guaranteed NetworkRequestNodes with present initiatorCell elements.\n    const networkRequestNodeA = (a);\n    const networkRequestNodeB = (b);\n\n    const aText = networkRequestNodeA.linkifiedInitiatorAnchor ?\n        networkRequestNodeA.linkifiedInitiatorAnchor.textContent || '' :\n        (networkRequestNodeA.initiatorCell as HTMLElement).title;\n    const bText = networkRequestNodeB.linkifiedInitiatorAnchor ?\n        networkRequestNodeB.linkifiedInitiatorAnchor.textContent || '' :\n        (networkRequestNodeB.initiatorCell as HTMLElement).title;\n    return aText.localeCompare(bText);\n  }\n\n  static InitiatorAddressSpaceComparator(a: NetworkNode, b: NetworkNode): number {\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    const aClientSecurityState = aRequest.clientSecurityState();\n    const bClientSecurityState = bRequest.clientSecurityState();\n    if (!aClientSecurityState || !bClientSecurityState) {\n      return !aClientSecurityState ? -1 : 1;\n    }\n    return aClientSecurityState.initiatorIPAddressSpace.localeCompare(bClientSecurityState.initiatorIPAddressSpace);\n  }\n\n  static RemoteAddressSpaceComparator(a: NetworkNode, b: NetworkNode): number {\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    return aRequest.remoteAddressSpace().localeCompare(bRequest.remoteAddressSpace());\n  }\n\n  static RequestCookiesCountComparator(a: NetworkNode, b: NetworkNode): number {\n    // TODO(allada) Handle this properly for group nodes.\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    const aScore = aRequest.includedRequestCookies().length;\n    const bScore = bRequest.includedRequestCookies().length;\n    return (aScore - bScore) || aRequest.identityCompare(bRequest);\n  }\n\n  // TODO(allada) This function deserves to be in a network-common of some sort.\n  static ResponseCookiesCountComparator(a: NetworkNode, b: NetworkNode): number {\n    // TODO(allada) Handle this properly for group nodes.\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    const aScore = aRequest.responseCookies ? aRequest.responseCookies.length : 0;\n    const bScore = bRequest.responseCookies ? bRequest.responseCookies.length : 0;\n    return (aScore - bScore) || aRequest.identityCompare(bRequest);\n  }\n\n  static PriorityComparator(a: NetworkNode, b: NetworkNode): number {\n    // TODO(allada) Handle this properly for group nodes.\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    const aPriority = aRequest.priority();\n    let aScore: number = aPriority ? PerfUI.NetworkPriorities.networkPriorityWeight(aPriority) : 0;\n    aScore = aScore || 0;\n    const bPriority = bRequest.priority();\n    let bScore: number = bPriority ? PerfUI.NetworkPriorities.networkPriorityWeight(bPriority) : 0;\n    bScore = bScore || 0;\n\n    return aScore - bScore || aRequest.identityCompare(bRequest);\n  }\n\n  static RequestPropertyComparator(propertyName: string, a: NetworkNode, b: NetworkNode): number {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const aRequest = (a.requestOrFirstKnownChildRequest() as any);\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const bRequest = (b.requestOrFirstKnownChildRequest() as any);\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    const aValue = aRequest[propertyName];\n    const bValue = bRequest[propertyName];\n    if (aValue === bValue) {\n      return aRequest.identityCompare(bRequest);\n    }\n    return aValue > bValue ? 1 : -1;\n  }\n\n  static RequestURLComparator(a: NetworkNode, b: NetworkNode): number {\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    const aURL = aRequest.url();\n    const bURL = bRequest.url();\n    if (aURL === bURL) {\n      return aRequest.identityCompare(bRequest);\n    }\n    return aURL > bURL ? 1 : -1;\n  }\n\n  static HeaderStringComparator(\n      getHeaderValue: (request: SDK.NetworkRequest.NetworkRequest, propertyName: string) => string | undefined,\n      propertyName: string, a: NetworkNode, b: NetworkNode): number {\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    // Use the provided callback to get the header value\n    const aValue = String(getHeaderValue(aRequest, propertyName) || '');\n    const bValue = String(getHeaderValue(bRequest, propertyName) || '');\n    return aValue.localeCompare(bValue) || aRequest.identityCompare(bRequest);\n  }\n\n  static readonly ResponseHeaderStringComparator = NetworkRequestNode.HeaderStringComparator.bind(\n      null,\n      (req: SDK.NetworkRequest.NetworkRequest, name: string) => req.responseHeaderValue(name),\n  );\n\n  static readonly RequestHeaderStringComparator = NetworkRequestNode.HeaderStringComparator.bind(\n      null,\n      (req: SDK.NetworkRequest.NetworkRequest, name: string) => req.requestHeaderValue(name),\n  );\n\n  static ResponseHeaderNumberComparator(propertyName: string, a: NetworkNode, b: NetworkNode): number {\n    // TODO(allada) Handle this properly for group nodes.\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    const aRawValue = aRequest.responseHeaderValue(propertyName);\n    const aValue = (aRawValue !== undefined) ? parseFloat(aRawValue) : -Infinity;\n    const bRawValue = bRequest.responseHeaderValue(propertyName);\n    const bValue = (bRawValue !== undefined) ? parseFloat(bRawValue) : -Infinity;\n    if (aValue === bValue) {\n      return aRequest.identityCompare(bRequest);\n    }\n    return aValue > bValue ? 1 : -1;\n  }\n\n  static ResponseHeaderDateComparator(propertyName: string, a: NetworkNode, b: NetworkNode): number {\n    // TODO(allada) Handle this properly for group nodes.\n    const aRequest = a.requestOrFirstKnownChildRequest();\n    const bRequest = b.requestOrFirstKnownChildRequest();\n    if (!aRequest || !bRequest) {\n      return !aRequest ? -1 : 1;\n    }\n    const aHeader = aRequest.responseHeaderValue(propertyName);\n    const bHeader = bRequest.responseHeaderValue(propertyName);\n    const aValue = aHeader ? new Date(aHeader).getTime() : -Infinity;\n    const bValue = bHeader ? new Date(bHeader).getTime() : -Infinity;\n    if (aValue === bValue) {\n      return aRequest.identityCompare(bRequest);\n    }\n    return aValue > bValue ? 1 : -1;\n  }\n\n  override showingInitiatorChainChanged(): void {\n    const showInitiatorChain = this.showingInitiatorChain();\n\n    const initiatorGraph = Logs.NetworkLog.NetworkLog.instance().initiatorGraphForRequest(this.requestInternal);\n    for (const request of initiatorGraph.initiators) {\n      if (request === this.requestInternal) {\n        continue;\n      }\n      const node = this.parentView().nodeForRequest(request);\n      if (!node) {\n        continue;\n      }\n      node.setIsOnInitiatorPath(showInitiatorChain);\n    }\n    for (const request of initiatorGraph.initiated.keys()) {\n      if (request === this.requestInternal) {\n        continue;\n      }\n      const node = this.parentView().nodeForRequest(request);\n      if (!node) {\n        continue;\n      }\n      node.setIsOnInitiatedPath(showInitiatorChain);\n    }\n  }\n\n  private setIsOnInitiatorPath(isOnInitiatorPath: boolean): void {\n    if (this.isOnInitiatorPathInternal === isOnInitiatorPath || !this.attached()) {\n      return;\n    }\n    this.isOnInitiatorPathInternal = isOnInitiatorPath;\n    this.updateBackgroundColor();\n  }\n\n  override isOnInitiatorPath(): boolean {\n    return this.isOnInitiatorPathInternal;\n  }\n\n  private setIsOnInitiatedPath(isOnInitiatedPath: boolean): void {\n    if (this.isOnInitiatedPathInternal === isOnInitiatedPath || !this.attached()) {\n      return;\n    }\n    this.isOnInitiatedPathInternal = isOnInitiatedPath;\n    this.updateBackgroundColor();\n  }\n\n  override isOnInitiatedPath(): boolean {\n    return this.isOnInitiatedPathInternal;\n  }\n\n  override displayType(): string {\n    const mimeType = this.requestInternal.mimeType || this.requestInternal.requestContentType() || '';\n    const resourceType = this.requestInternal.resourceType();\n    let simpleType = resourceType.name();\n\n    if (this.requestInternal.fromEarlyHints()) {\n      return i18nString(UIStrings.earlyHints);\n    }\n\n    if (resourceType === Common.ResourceType.resourceTypes.Other ||\n        resourceType === Common.ResourceType.resourceTypes.Image) {\n      simpleType = mimeType.replace(/^(application|image)\\//, '');\n    }\n\n    if (this.requestInternal.isRedirect()) {\n      simpleType += ' / ' + i18nString(UIStrings.redirect);\n    }\n\n    return simpleType;\n  }\n\n  override displayName(): string {\n    return this.requestInternal.name();\n  }\n\n  override request(): SDK.NetworkRequest.NetworkRequest {\n    return this.requestInternal;\n  }\n\n  override isNavigationRequest(): boolean {\n    const pageLoad = SDK.PageLoad.PageLoad.forRequest(this.requestInternal);\n    return pageLoad ? pageLoad.mainRequest === this.requestInternal : false;\n  }\n\n  override nodeSelfHeight(): number {\n    return this.parentView().rowHeight();\n  }\n\n  private isPrefetch(): boolean {\n    return this.requestInternal.resourceType() === Common.ResourceType.resourceTypes.Prefetch;\n  }\n\n  override isWarning(): boolean {\n    return this.isFailed() && this.isPrefetch();\n  }\n\n  override isError(): boolean {\n    return this.isFailed() && !this.isPrefetch();\n  }\n\n  override createCells(element: Element): void {\n    this.initiatorCell = null;\n\n    element.classList.toggle('network-warning-row', this.isWarning());\n    element.classList.toggle('network-error-row', this.isError());\n    element.classList.toggle('network-navigation-row', this.isNavigationRequestInternal);\n    super.createCells(element);\n    this.updateBackgroundColor();\n  }\n\n  private setTextAndTitle(element: HTMLElement, text: string, title?: string): void {\n    UI.UIUtils.createTextChild(element, text);\n    UI.Tooltip.Tooltip.install(element, title || text);\n  }\n\n  private setTextAndTitleAsLink(element: HTMLElement, cellText: string, titleText: string, handler: () => void): void {\n    const link = document.createElement('span');\n    link.classList.add('devtools-link');\n    link.textContent = cellText;\n    link.addEventListener('click', handler);\n    element.appendChild(link);\n    UI.Tooltip.Tooltip.install(element, titleText);\n  }\n\n  override renderCell(c: Element, columnId: string): void {\n    const cell = (c as HTMLElement);\n    switch (columnId) {\n      case 'name': {\n        this.renderPrimaryCell(cell, columnId);\n        break;\n      }\n      case 'path': {\n        this.renderPrimaryCell(cell, columnId, this.requestInternal.pathname);\n        break;\n      }\n      case 'url': {\n        this.renderPrimaryCell(cell, columnId, this.requestInternal.url());\n        break;\n      }\n      case 'method': {\n        const preflightRequest = this.requestInternal.preflightRequest();\n        if (preflightRequest) {\n          this.setTextAndTitle(\n              cell, `${this.requestInternal.requestMethod} + `,\n              i18nString(UIStrings.sPreflight, {PH1: this.requestInternal.requestMethod}));\n          cell.appendChild(Components.Linkifier.Linkifier.linkifyRevealable(\n              preflightRequest, i18nString(UIStrings.preflight), undefined,\n              i18nString(UIStrings.selectPreflightRequest), undefined, 'preflight-request'));\n        } else {\n          this.setTextAndTitle(cell, this.requestInternal.requestMethod);\n        }\n        break;\n      }\n      case 'status': {\n        this.renderStatusCell(cell);\n        break;\n      }\n      case 'protocol': {\n        this.renderProtocolCell(cell);\n        break;\n      }\n      case 'scheme': {\n        this.setTextAndTitle(cell, this.requestInternal.scheme);\n        break;\n      }\n      case 'domain': {\n        this.setTextAndTitle(cell, this.requestInternal.domain);\n        break;\n      }\n      case 'remote-address': {\n        this.setTextAndTitle(cell, this.requestInternal.remoteAddress());\n        break;\n      }\n      case 'remote-address-space': {\n        this.renderAddressSpaceCell(cell, this.requestInternal.remoteAddressSpace());\n        break;\n      }\n      case 'cookies': {\n        this.setTextAndTitle(cell, this.arrayLength(this.requestInternal.includedRequestCookies()));\n        break;\n      }\n      case 'set-cookies': {\n        this.setTextAndTitle(cell, this.arrayLength(this.requestInternal.nonBlockedResponseCookies()));\n        break;\n      }\n      case 'priority': {\n        const priority = this.requestInternal.priority();\n        const initialPriority = this.requestInternal.initialPriority();\n        if (priority && initialPriority) {\n          this.setTextAndTitle(\n              cell,\n              PerfUI.NetworkPriorities.uiLabelForNetworkPriority(priority),\n              i18nString(\n                  UIStrings.initialPriorityToolTip,\n                  {\n                    PH1: PerfUI.NetworkPriorities.uiLabelForNetworkPriority(priority),\n                    PH2: PerfUI.NetworkPriorities.uiLabelForNetworkPriority(initialPriority),\n                  },\n                  ),\n          );\n        } else {\n          this.setTextAndTitle(cell, priority ? PerfUI.NetworkPriorities.uiLabelForNetworkPriority(priority) : '');\n        }\n        this.appendSubtitle(\n            cell, initialPriority ? PerfUI.NetworkPriorities.uiLabelForNetworkPriority(initialPriority) : '');\n        break;\n      }\n      case 'connection-id': {\n        this.setTextAndTitle(cell, this.requestInternal.connectionId === '0' ? '' : this.requestInternal.connectionId);\n        break;\n      }\n      case 'type': {\n        this.setTextAndTitle(cell, this.displayType());\n        break;\n      }\n      case 'initiator': {\n        this.renderInitiatorCell(cell);\n        break;\n      }\n      case 'initiator-address-space': {\n        const clientSecurityState = this.requestInternal.clientSecurityState();\n        this.renderAddressSpaceCell(\n            cell,\n            clientSecurityState ? clientSecurityState.initiatorIPAddressSpace :\n                                  Protocol.Network.IPAddressSpace.Unknown);\n        break;\n      }\n      case 'size': {\n        this.renderSizeCell(cell);\n        break;\n      }\n      case 'time': {\n        this.renderTimeCell(cell);\n        break;\n      }\n      case 'timeline': {\n        this.setTextAndTitle(cell, '');\n        break;\n      }\n      case 'has-overrides': {\n        this.setTextAndTitle(cell, this.requestInternal.overrideTypes.join(', '));\n        break;\n      }\n      default: {\n        const columnConfig = this.dataGrid?.columns[columnId];\n        if (columnConfig) {\n          let headerName = '';\n          let headerValue = '';\n          if (columnConfig.id.startsWith('request-header-')) {\n            headerName = columnId.substring('request-header-'.length);\n            headerValue = this.requestInternal.requestHeaderValue(headerName) || '';\n          } else {\n            headerName = columnId.substring('response-header-'.length);\n            headerValue = this.requestInternal.responseHeaderValue(headerName) || '';\n          }\n          this.setTextAndTitle(cell, headerValue);\n        } else {\n          this.setTextAndTitle(cell, '');\n        }\n        break;\n      }\n    }\n  }\n\n  private arrayLength(array: unknown[]|null): string {\n    return array ? String(array.length) : '';\n  }\n\n  override select(suppressSelectedEvent?: boolean): void {\n    super.select(suppressSelectedEvent);\n    this.parentView().dispatchEventToListeners(Events.RequestSelected, this.requestInternal);\n  }\n\n  private openInNewTab(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(this.requestInternal.url());\n  }\n\n  private isFailed(): boolean {\n    return PanelUtils.isFailedNetworkRequest(this.requestInternal);\n  }\n\n  private renderPrimaryCell(cell: HTMLElement, columnId: string, text?: string): void {\n    const columnIndex = (this.dataGrid as DataGrid.DataGrid.DataGridImpl<unknown>)?.indexOfVisibleColumn(columnId) | 0;\n    const isFirstCell = (columnIndex === 0);\n    if (isFirstCell) {\n      const leftPadding = this.leftPadding ? this.leftPadding + 'px' : '';\n      cell.style.setProperty('padding-left', leftPadding);\n      cell.tabIndex = -1;\n      cell.addEventListener('dblclick', this.openInNewTab.bind(this), false);\n      cell.addEventListener('mousedown', (event: MouseEvent) => {\n        // When the request panel isn't visible yet, firing the RequestActivated event\n        // doesn't make it visible if no request is selected. So we'll select it first.\n        this.select();\n        // Only open panel on mousedown with left mouse button.\n        const showPanel = event.button ? RequestPanelBehavior.Unchanged : RequestPanelBehavior.ShowPanel;\n        this.parentView().dispatchEventToListeners(Events.RequestActivated, {showPanel});\n      });\n      cell.addEventListener('focus', () => this.parentView().resetFocus());\n\n      // render icons\n      if (this.requestInternal.isIpProtectionUsed()) {\n        const ippIcon = IconButton.Icon.create('shield', 'icon');\n        ippIcon.title = i18nString(UIStrings.responseIsIpProtectedToolTip);\n        ippIcon.style.color = 'var(--sys-color-on-surface-subtle);';\n        cell.appendChild(ippIcon);\n      }\n\n      const iconElement = PanelUtils.getIconForNetworkRequest(this.requestInternal);\n      // eslint-disable-next-line rulesdir/no-lit-render-outside-of-view\n      render(iconElement, cell);\n\n      // render Ask AI button\n      const aiButtonContainer = this.createAiButtonIfAvailable();\n      if (aiButtonContainer) {\n        cell.appendChild(aiButtonContainer);\n      }\n    }\n\n    if (columnId === 'name') {\n      const webBundleInnerRequestInfo = this.requestInternal.webBundleInnerRequestInfo();\n      if (webBundleInnerRequestInfo) {\n        const secondIconElement = IconButton.Icon.create('bundle', 'icon');\n        secondIconElement.style.color = 'var(--icon-info)';\n        secondIconElement.title = i18nString(UIStrings.webBundleInnerRequest);\n\n        const networkManager = SDK.NetworkManager.NetworkManager.forRequest(this.requestInternal);\n        if (webBundleInnerRequestInfo.bundleRequestId && networkManager) {\n          cell.appendChild(Components.Linkifier.Linkifier.linkifyRevealable(\n              new NetworkForward.NetworkRequestId.NetworkRequestId(\n                  webBundleInnerRequestInfo.bundleRequestId, networkManager),\n              secondIconElement, undefined, undefined, undefined, 'webbundle-request'));\n        } else {\n          cell.appendChild(secondIconElement);\n        }\n      }\n      const name = Platform.StringUtilities.trimMiddle(this.requestInternal.name(), 100);\n      const networkManager = SDK.NetworkManager.NetworkManager.forRequest(this.requestInternal);\n      UI.UIUtils.createTextChild(cell, networkManager ? networkManager.target().decorateLabel(name) : name);\n      this.appendSubtitle(cell, this.requestInternal.path());\n      if (!this.requestInternal.url().startsWith('data')) {\n        // Show the URL as tooltip unless it's a data URL.\n        UI.Tooltip.Tooltip.install(cell, this.requestInternal.url());\n      }\n    } else if (text) {\n      UI.UIUtils.createTextChild(cell, text);\n    }\n  }\n\n  private renderStatusCell(cell: HTMLElement): void {\n    cell.classList.toggle(\n        'network-dim-cell', !this.isFailed() && (this.requestInternal.cached() || !this.requestInternal.statusCode));\n\n    const corsErrorStatus = this.requestInternal.corsErrorStatus();\n    const webBundleErrorMessage = this.requestInternal.webBundleInfo()?.errorMessage ||\n        this.requestInternal.webBundleInnerRequestInfo()?.errorMessage;\n    if (webBundleErrorMessage) {\n      this.setTextAndTitle(cell, i18nString(UIStrings.webBundleError), webBundleErrorMessage);\n    } else if (\n        this.requestInternal.failed && !this.requestInternal.canceled && !this.requestInternal.wasBlocked() &&\n        !corsErrorStatus) {\n      const failText = i18nString(UIStrings.failed);\n      if (this.requestInternal.localizedFailDescription) {\n        UI.UIUtils.createTextChild(cell, failText);\n        this.appendSubtitle(cell, this.requestInternal.localizedFailDescription, true);\n        UI.Tooltip.Tooltip.install(cell, failText + ' ' + this.requestInternal.localizedFailDescription);\n      } else {\n        this.setTextAndTitle(cell, failText);\n      }\n    } else if (this.requestInternal.statusCode && this.requestInternal.statusCode >= 400) {\n      const statusText = this.requestInternal.getInferredStatusText();\n      UI.UIUtils.createTextChild(cell, String(this.requestInternal.statusCode));\n      this.appendSubtitle(cell, statusText);\n      UI.Tooltip.Tooltip.install(cell, this.requestInternal.statusCode + ' ' + statusText);\n    } else if (!this.requestInternal.statusCode && this.requestInternal.parsedURL.isDataURL()) {\n      this.setTextAndTitle(cell, i18nString(UIStrings.data));\n    } else if (!this.requestInternal.statusCode && this.requestInternal.canceled) {\n      this.setTextAndTitle(cell, i18nString(UIStrings.canceled));\n    } else if (this.requestInternal.wasBlocked()) {\n      let reason = i18nString(UIStrings.other);\n      let displayShowHeadersLink = false;\n      switch (this.requestInternal.blockedReason()) {\n        case Protocol.Network.BlockedReason.Other:\n          reason = i18nString(UIStrings.other);\n          break;\n        case Protocol.Network.BlockedReason.Csp:\n          reason = i18nString(UIStrings.csp);\n          break;\n        case Protocol.Network.BlockedReason.MixedContent:\n          reason = i18n.i18n.lockedString('mixed-content');\n          break;\n        case Protocol.Network.BlockedReason.Origin:\n          reason = i18nString(UIStrings.origin);\n          break;\n        case Protocol.Network.BlockedReason.Inspector:\n          reason = i18nString(UIStrings.devtools);\n          break;\n        case Protocol.Network.BlockedReason.SubresourceFilter:\n          reason = i18n.i18n.lockedString('subresource-filter');\n          break;\n        case Protocol.Network.BlockedReason.ContentType:\n          reason = i18n.i18n.lockedString('content-type');\n          break;\n        case Protocol.Network.BlockedReason.CoepFrameResourceNeedsCoepHeader:\n          displayShowHeadersLink = true;\n          reason = i18nString(UIStrings.coepFrameResourceNeedsCoepHeader);\n          break;\n        case Protocol.Network.BlockedReason.CoopSandboxedIframeCannotNavigateToCoopPage:\n          displayShowHeadersLink = true;\n          reason = i18nString(UIStrings.coopSandboxedIframeCannotNavigateToCoopPage);\n          break;\n        case Protocol.Network.BlockedReason.CorpNotSameOrigin:\n          displayShowHeadersLink = true;\n          reason = i18nString(UIStrings.corpNotSameOrigin);\n          break;\n        case Protocol.Network.BlockedReason.CorpNotSameSite:\n          displayShowHeadersLink = true;\n          reason = i18nString(UIStrings.corpNotSameSite);\n          break;\n        case Protocol.Network.BlockedReason.CorpNotSameOriginAfterDefaultedToSameOriginByCoep:\n          displayShowHeadersLink = true;\n          reason = i18nString(UIStrings.corpNotSameOriginAfterDefaultedToSameOriginByCoep);\n          break;\n        case Protocol.Network.BlockedReason.SriMessageSignatureMismatch:\n          displayShowHeadersLink = true;\n          reason = i18nString(UIStrings.integrity);\n          break;\n      }\n      if (displayShowHeadersLink) {\n        this.setTextAndTitleAsLink(\n            cell, i18nString(UIStrings.blockeds, {PH1: reason}), i18nString(UIStrings.blockedTooltip), () => {\n              this.parentView().dispatchEventToListeners(Events.RequestActivated, {\n                showPanel: RequestPanelBehavior.ShowPanel,\n                tab: NetworkForward.UIRequestLocation.UIRequestTabs.HEADERS_COMPONENT,\n              });\n            });\n      } else {\n        this.setTextAndTitle(cell, i18nString(UIStrings.blockeds, {PH1: reason}));\n      }\n    } else if (corsErrorStatus) {\n      this.setTextAndTitle(\n          cell, i18nString(UIStrings.corsError),\n          i18nString(UIStrings.crossoriginResourceSharingErrorS, {PH1: corsErrorStatus.corsError}));\n    } else if (this.requestInternal.statusCode) {\n      UI.UIUtils.createTextChild(cell, String(this.requestInternal.statusCode));\n      const statusText = this.requestInternal.getInferredStatusText();\n      this.appendSubtitle(cell, statusText);\n      UI.Tooltip.Tooltip.install(cell, this.requestInternal.statusCode + ' ' + statusText);\n    } else if (this.requestInternal.statusText) {\n      this.setTextAndTitle(cell, this.requestInternal.statusText);\n    } else if (this.requestInternal.finished) {\n      this.setTextAndTitle(cell, i18nString(UIStrings.finished));\n    } else if (this.requestInternal.preserved) {\n      this.setTextAndTitle(cell, i18nString(UIStrings.unknown), i18nString(UIStrings.unknownExplanation));\n    } else {\n      this.setTextAndTitle(cell, i18nString(UIStrings.pendingq));\n    }\n  }\n\n  private renderProtocolCell(cell: HTMLElement): void {\n    UI.UIUtils.createTextChild(cell, this.requestInternal.protocol);\n\n    switch (this.requestInternal.alternateProtocolUsage) {\n      case Protocol.Network.AlternateProtocolUsage.AlternativeJobWonWithoutRace: {\n        UI.Tooltip.Tooltip.install(cell, UIStrings.alternativeJobWonWithoutRace);\n        break;\n      }\n\n      case Protocol.Network.AlternateProtocolUsage.AlternativeJobWonRace: {\n        UI.Tooltip.Tooltip.install(cell, UIStrings.alternativeJobWonRace);\n        break;\n      }\n\n      case Protocol.Network.AlternateProtocolUsage.MainJobWonRace: {\n        UI.Tooltip.Tooltip.install(cell, UIStrings.mainJobWonRace);\n        break;\n      }\n\n      case Protocol.Network.AlternateProtocolUsage.MappingMissing: {\n        UI.Tooltip.Tooltip.install(cell, UIStrings.mappingMissing);\n        break;\n      }\n\n      case Protocol.Network.AlternateProtocolUsage.Broken: {\n        UI.Tooltip.Tooltip.install(cell, UIStrings.broken);\n        break;\n      }\n\n      case Protocol.Network.AlternateProtocolUsage.DnsAlpnH3JobWonWithoutRace: {\n        UI.Tooltip.Tooltip.install(cell, UIStrings.dnsAlpnH3JobWonWithoutRace);\n        break;\n      }\n\n      case Protocol.Network.AlternateProtocolUsage.DnsAlpnH3JobWonRace: {\n        UI.Tooltip.Tooltip.install(cell, UIStrings.dnsAlpnH3JobWonRace);\n        break;\n      }\n\n      default: {\n        UI.Tooltip.Tooltip.install(cell, this.requestInternal.protocol);\n        break;\n      }\n    }\n  }\n\n  #getLinkifierMetric(): Host.UserMetrics.Action|undefined {\n    if (this.requestInternal.resourceType().isStyleSheet()) {\n      return Host.UserMetrics.Action.StyleSheetInitiatorLinkClicked;\n    }\n    return undefined;\n  }\n\n  private renderInitiatorCell(cell: HTMLElement): void {\n    this.initiatorCell = cell;\n    const request = this.requestInternal;\n    const initiator = Logs.NetworkLog.NetworkLog.instance().initiatorInfoForRequest(request);\n\n    const timing = request.timing;\n    if (timing?.pushStart) {\n      cell.appendChild(document.createTextNode(i18nString(UIStrings.push)));\n    }\n    switch (initiator.type) {\n      case SDK.NetworkRequest.InitiatorType.PARSER: {\n        cell.appendChild(Components.Linkifier.Linkifier.linkifyURL(initiator.url, {\n          lineNumber: initiator.lineNumber,\n          columnNumber: initiator.columnNumber,\n          userMetric: this.#getLinkifierMetric(),\n        }));\n        this.appendSubtitle(cell, i18nString(UIStrings.parser));\n        break;\n      }\n\n      case SDK.NetworkRequest.InitiatorType.REDIRECT: {\n        UI.Tooltip.Tooltip.install(cell, initiator.url);\n        const redirectSource = (request.redirectSource() as SDK.NetworkRequest.NetworkRequest);\n        console.assert(redirectSource !== null);\n        if (this.parentView().nodeForRequest(redirectSource)) {\n          cell.appendChild(Components.Linkifier.Linkifier.linkifyRevealable(\n              redirectSource, Bindings.ResourceUtils.displayNameForURL(redirectSource.url()), undefined, undefined,\n              undefined, 'redirect-source-request'));\n        } else {\n          cell.appendChild(Components.Linkifier.Linkifier.linkifyURL(\n              redirectSource.url(), {jslogContext: 'redirect-source-request-url'}));\n        }\n        this.appendSubtitle(cell, i18nString(UIStrings.redirect));\n        break;\n      }\n\n      case SDK.NetworkRequest.InitiatorType.SCRIPT: {\n        const target = SDK.NetworkManager.NetworkManager.forRequest(request)?.target() || null;\n        const linkifier = this.parentView().linkifier();\n        if (initiator.stack?.callFrames.length) {\n          this.linkifiedInitiatorAnchor = linkifier.linkifyStackTraceTopFrame(target, initiator.stack);\n        } else {\n          this.linkifiedInitiatorAnchor = linkifier.linkifyScriptLocation(\n              target, initiator.scriptId, initiator.url, initiator.lineNumber,\n              {columnNumber: initiator.columnNumber, inlineFrameIndex: 0});\n        }\n        UI.Tooltip.Tooltip.install((this.linkifiedInitiatorAnchor), '');\n        cell.appendChild(this.linkifiedInitiatorAnchor);\n        this.appendSubtitle(cell, i18nString(UIStrings.script));\n        cell.classList.add('network-script-initiated');\n        break;\n      }\n\n      case SDK.NetworkRequest.InitiatorType.PRELOAD: {\n        UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.preload));\n        cell.classList.add('network-dim-cell');\n        cell.appendChild(document.createTextNode(i18nString(UIStrings.preload)));\n        break;\n      }\n\n      case SDK.NetworkRequest.InitiatorType.SIGNED_EXCHANGE: {\n        cell.appendChild(Components.Linkifier.Linkifier.linkifyURL(initiator.url));\n        this.appendSubtitle(cell, i18nString(UIStrings.signedexchange));\n        break;\n      }\n\n      case SDK.NetworkRequest.InitiatorType.PREFLIGHT: {\n        cell.appendChild(document.createTextNode(i18nString(UIStrings.preflight)));\n        if (initiator.initiatorRequest) {\n          const icon = IconButton.Icon.create('arrow-up-down-circle');\n          const link = Components.Linkifier.Linkifier.linkifyRevealable(\n              initiator.initiatorRequest, icon, undefined, i18nString(UIStrings.selectTheRequestThatTriggered),\n              'trailing-link-icon', 'initator-request');\n          UI.ARIAUtils.setLabel(link, i18nString(UIStrings.selectTheRequestThatTriggered));\n          cell.appendChild(link);\n        }\n        break;\n      }\n\n      default: {\n        UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.otherC));\n        cell.classList.add('network-dim-cell');\n        cell.appendChild(document.createTextNode(i18nString(UIStrings.otherC)));\n      }\n    }\n  }\n\n  private renderAddressSpaceCell(cell: HTMLElement, ipAddressSpace: Protocol.Network.IPAddressSpace): void {\n    if (ipAddressSpace !== Protocol.Network.IPAddressSpace.Unknown) {\n      UI.UIUtils.createTextChild(cell, ipAddressSpace);\n    }\n  }\n\n  private renderSizeCell(cell: HTMLElement): void {\n    const resourceSize = i18n.ByteUtilities.formatBytesToKb(this.requestInternal.resourceSize);\n\n    if (this.requestInternal.cachedInMemory()) {\n      UI.UIUtils.createTextChild(cell, i18nString(UIStrings.memoryCache));\n      UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.servedFromMemoryCacheResource, {PH1: resourceSize}));\n      cell.classList.add('network-dim-cell');\n    } else if (this.requestInternal.hasMatchingServiceWorkerRouter()) {\n      const ruleIdMatched = this.requestInternal.serviceWorkerRouterInfo?.ruleIdMatched as number;\n      const matchedSourceType =\n          this.requestInternal.serviceWorkerRouterInfo?.matchedSourceType as Protocol.Network.ServiceWorkerRouterSource;\n      UI.UIUtils.createTextChild(cell, i18n.i18n.lockedString('(ServiceWorker router)'));\n      let tooltipText;\n      if (matchedSourceType === Protocol.Network.ServiceWorkerRouterSource.Network) {\n        const transferSize = i18n.ByteUtilities.formatBytesToKb(this.requestInternal.transferSize);\n        tooltipText = i18nString(\n            UIStrings.matchedToServiceWorkerRouterWithNetworkSource,\n            {PH1: ruleIdMatched, PH2: transferSize, PH3: resourceSize});\n      } else {\n        tooltipText = i18nString(UIStrings.matchedToServiceWorkerRouter, {PH1: ruleIdMatched, PH2: resourceSize});\n      }\n      UI.Tooltip.Tooltip.install(cell, tooltipText);\n      cell.classList.add('network-dim-cell');\n    } else if (this.requestInternal.serviceWorkerRouterInfo) {\n      // ServiceWorker routers are registered, but the request fallbacks to network\n      // because no matching router rules found.\n      const transferSize = i18n.ByteUtilities.formatBytesToKb(this.requestInternal.transferSize);\n      UI.UIUtils.createTextChild(cell, transferSize);\n      UI.Tooltip.Tooltip.install(\n          cell,\n          i18nString(UIStrings.servedFromNetworkMissingServiceWorkerRoute, {PH1: transferSize, PH2: resourceSize}));\n    } else if (this.requestInternal.fetchedViaServiceWorker) {\n      UI.UIUtils.createTextChild(cell, i18nString(UIStrings.serviceWorker));\n      UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.servedFromServiceWorkerResource, {PH1: resourceSize}));\n      cell.classList.add('network-dim-cell');\n    } else if (this.requestInternal.redirectSourceSignedExchangeInfoHasNoErrors()) {\n      UI.UIUtils.createTextChild(cell, i18n.i18n.lockedString('(signed-exchange)'));\n      UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.servedFromSignedHttpExchange, {PH1: resourceSize}));\n      cell.classList.add('network-dim-cell');\n    } else if (this.requestInternal.webBundleInnerRequestInfo()) {\n      UI.UIUtils.createTextChild(cell, i18nString(UIStrings.webBundle));\n      UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.servedFromWebBundle, {PH1: resourceSize}));\n      cell.classList.add('network-dim-cell');\n    } else if (this.requestInternal.fromPrefetchCache()) {\n      UI.UIUtils.createTextChild(cell, i18nString(UIStrings.prefetchCache));\n      UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.servedFromPrefetchCacheResource, {PH1: resourceSize}));\n      cell.classList.add('network-dim-cell');\n    } else if (this.requestInternal.cached()) {\n      UI.UIUtils.createTextChild(cell, i18nString(UIStrings.diskCache));\n      UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.servedFromDiskCacheResourceSizeS, {PH1: resourceSize}));\n      cell.classList.add('network-dim-cell');\n    } else {\n      const transferSize = i18n.ByteUtilities.formatBytesToKb(this.requestInternal.transferSize);\n      UI.UIUtils.createTextChild(cell, transferSize);\n      UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.servedFromNetwork, {PH1: transferSize, PH2: resourceSize}));\n    }\n    this.appendSubtitle(cell, resourceSize);\n  }\n\n  private renderTimeCell(cell: HTMLElement): void {\n    if (this.requestInternal.duration > 0) {\n      this.setTextAndTitle(cell, i18n.TimeUtilities.secondsToString(this.requestInternal.duration));\n      this.appendSubtitle(\n          cell, i18n.TimeUtilities.secondsToString(this.requestInternal.latency), false,\n          i18nString(UIStrings.timeSubtitleTooltipText));\n    } else if (this.requestInternal.preserved) {\n      this.setTextAndTitle(cell, i18nString(UIStrings.unknown), i18nString(UIStrings.unknownExplanation));\n    } else {\n      cell.classList.add('network-dim-cell');\n      this.setTextAndTitle(cell, i18nString(UIStrings.pending));\n    }\n  }\n\n  private appendSubtitle(cellElement: Element, subtitleText: string, alwaysVisible = false, tooltipText = ''): void {\n    const subtitleElement = document.createElement('div');\n    subtitleElement.classList.add('network-cell-subtitle');\n    if (alwaysVisible) {\n      subtitleElement.classList.add('always-visible');\n    }\n    subtitleElement.textContent = subtitleText;\n    if (tooltipText) {\n      UI.Tooltip.Tooltip.install(subtitleElement, tooltipText);\n    }\n    cellElement.appendChild(subtitleElement);\n  }\n\n  private createAiButtonIfAvailable(): HTMLSpanElement|void {\n    if (UI.ActionRegistry.ActionRegistry.instance().hasAction('drjones.network-floating-button')) {\n      const action = UI.ActionRegistry.ActionRegistry.instance().getAction('drjones.network-floating-button');\n      const aiButtonContainer = document.createElement('span');\n      aiButtonContainer.classList.add('ai-button-container');\n      const floatingButton = Buttons.FloatingButton.create('smart-assistant', action.title(), 'ask-ai');\n      floatingButton.addEventListener('click', ev => {\n        ev.stopPropagation();\n        this.select();\n        void action.execute();\n      }, {capture: true});\n      floatingButton.addEventListener('mousedown', ev => {\n        ev.stopPropagation();\n      }, {capture: true});\n      aiButtonContainer.appendChild(floatingButton);\n      return aiButtonContainer;\n    }\n  }\n}\n\nexport class NetworkGroupNode extends NetworkNode {\n  override createCells(element: Element): void {\n    super.createCells(element);\n    const primaryColumn = (this.dataGrid as DataGrid.DataGrid.DataGridImpl<unknown>).visibleColumnsArray[0];\n    const localizedTitle = `${primaryColumn.title}`;\n    const localizedLevel = i18nString(UIStrings.level);\n    this.nodeAccessibleText =\n        `${localizedLevel} ${localizedTitle}: ${this.cellAccessibleTextMap.get(primaryColumn.id)}`;\n  }\n\n  override renderCell(c: Element, columnId: string): void {\n    const columnIndex = (this.dataGrid as DataGrid.DataGrid.DataGridImpl<unknown>).indexOfVisibleColumn(columnId);\n    if (columnIndex === 0) {\n      const cell = (c as HTMLElement);\n      const leftPadding = this.leftPadding ? this.leftPadding + 'px' : '';\n      cell.style.setProperty('padding-left', leftPadding);\n      cell.classList.add('disclosure');\n      this.setCellAccessibleName(cell.textContent || '', cell, columnId);\n    }\n  }\n\n  override select(suppressSelectedEvent?: boolean): void {\n    super.select(suppressSelectedEvent);\n    const firstChildNode = (this.traverseNextNode(false, undefined, true) as NetworkNode);\n    const request = firstChildNode?.request();\n    if (request) {\n      this.parentView().dispatchEventToListeners(Events.RequestSelected, request);\n    }\n  }\n}\n", "/*\n * Copyright (C) 2010 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport type * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as NetworkComponents from './components/components.js';\nimport {EventSourceMessagesView} from './EventSourceMessagesView.js';\nimport type {NetworkTimeCalculator} from './NetworkTimeCalculator.js';\nimport {RequestCookiesView} from './RequestCookiesView.js';\nimport {RequestInitiatorView} from './RequestInitiatorView.js';\nimport {RequestPayloadView} from './RequestPayloadView.js';\nimport {RequestPreviewView} from './RequestPreviewView.js';\nimport {RequestResponseView} from './RequestResponseView.js';\nimport {RequestTimingView} from './RequestTimingView.js';\nimport {ResourceDirectSocketChunkView} from './ResourceDirectSocketChunkView.js';\nimport {ResourceWebSocketFrameView} from './ResourceWebSocketFrameView.js';\n\nconst UIStrings = {\n  /**\n   * @description Text for network request headers\n   */\n  headers: 'Headers',\n  /**\n   * @description Text for network connection info. In case the request is not made over http.\n   */\n  connectionInfo: 'Connection Info',\n  /**\n   * @description Text in Network Item View of the Network panel\n   */\n  payload: 'Payload',\n  /**\n   * @description Text in Network Item View of the Network panel\n   */\n  messages: 'Messages',\n  /**\n   * @description Text in Network Item View of the Network panel\n   */\n  websocketMessages: 'WebSocket messages',\n  /**\n   * @description Text in Network Item View of the Network panel\n   */\n  directsocketMessages: 'DirectSocket messages',\n  /**\n   * @description Text in Network Item View of the Network panel\n   */\n  eventstream: 'EventStream',\n  /**\n   * @description Text for previewing items\n   */\n  preview: 'Preview',\n  /**\n   * @description Text in Network Item View of the Network panel\n   */\n  responsePreview: 'Response preview',\n  /**\n   * @description Icon title in Network Item View of the Network panel\n   */\n  signedexchangeError: 'SignedExchange error',\n  /**\n   * @description Title of a tab in the Network panel. A Network response refers to the act of acknowledging a\n   * network request. Should not be confused with answer.\n   */\n  response: 'Response',\n  /**\n   * @description Text in Network Item View of the Network panel\n   */\n  rawResponseData: 'Raw response data',\n  /**\n   * @description Text for the initiator of something\n   */\n  initiator: 'Initiator',\n  /**\n   * @description Tooltip for initiator view in Network panel. An initiator is a piece of code/entity\n   * in the code that initiated/started the network request, i.e. caused the network request. The 'call\n   * stack' is the location in the code where the initiation happened.\n   */\n  requestInitiatorCallStack: 'Request initiator call stack',\n  /**\n   * @description Title of a tab in Network Item View of the Network panel.\n   *The tab displays the duration breakdown of a network request.\n   */\n  timing: 'Timing',\n  /**\n   * @description Text in Network Item View of the Network panel\n   */\n  requestAndResponseTimeline: 'Request and response timeline',\n  /**\n   * @description Tooltip to explain the warning icon of the Cookies panel\n   */\n  thirdPartyPhaseout: 'Cookies blocked due to third-party cookie phaseout.',\n  /**\n   * @description Label of a tab in the network panel. Previously known as 'Trust Tokens'.\n   */\n  trustTokens: 'Private state tokens',\n  /**\n   * @description Title of the Private State Token tab in the Network panel. Previously known as 'Trust Token tab'.\n   */\n  trustTokenOperationDetails: 'Private State Token operation details',\n  /**\n   * @description Text for web cookies\n   */\n  cookies: 'Cookies',\n  /**\n   * @description Text in Network Item View of the Network panel\n   */\n  requestAndResponseCookies: 'Request and response cookies',\n  /**\n   * @description Tooltip text explaining that DevTools has overridden the response's headers\n   */\n  containsOverriddenHeaders: 'This response contains headers which are overridden by DevTools',\n  /**\n   * @description Tooltip text explaining that DevTools has overridden the response\n   */\n  responseIsOverridden: 'This response is overridden by DevTools',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkItemView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst requestToResponseView = new WeakMap<SDK.NetworkRequest.NetworkRequest, RequestResponseView>();\nconst requestToPreviewView = new WeakMap<SDK.NetworkRequest.NetworkRequest, RequestPreviewView>();\n\nexport class NetworkItemView extends UI.TabbedPane.TabbedPane {\n  #request: SDK.NetworkRequest.NetworkRequest;\n  readonly #resourceViewTabSetting: Common.Settings.Setting<NetworkForward.UIRequestLocation.UIRequestTabs>;\n  readonly #headersViewComponent: NetworkComponents.RequestHeadersView.RequestHeadersView|undefined;\n  #payloadView: RequestPayloadView|null = null;\n  readonly #responseView: RequestResponseView|undefined;\n  #cookiesView: RequestCookiesView|null = null;\n  #initialTab?: NetworkForward.UIRequestLocation.UIRequestTabs;\n  readonly #firstTab: NetworkForward.UIRequestLocation.UIRequestTabs;\n\n  constructor(\n      request: SDK.NetworkRequest.NetworkRequest, calculator: NetworkTimeCalculator,\n      initialTab?: NetworkForward.UIRequestLocation.UIRequestTabs) {\n    super();\n    this.#request = request;\n    this.element.classList.add('network-item-view');\n    this.headerElement().setAttribute('jslog', `${VisualLogging.toolbar('request-details').track({\n                                        keydown: 'ArrowUp|ArrowLeft|ArrowDown|ArrowRight|Enter|Space',\n                                      })}`);\n\n    if (request.resourceType() === Common.ResourceType.resourceTypes.DirectSocket) {\n      this.#firstTab = NetworkForward.UIRequestLocation.UIRequestTabs.DIRECT_SOCKET_CONNECTION;\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.DIRECT_SOCKET_CONNECTION, i18nString(UIStrings.connectionInfo),\n          new NetworkComponents.DirectSocketConnectionView.DirectSocketConnectionView(request),\n          i18nString(UIStrings.headers));\n    } else {\n      this.#firstTab = NetworkForward.UIRequestLocation.UIRequestTabs.HEADERS_COMPONENT;\n      this.#headersViewComponent = new NetworkComponents.RequestHeadersView.RequestHeadersView(request);\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.HEADERS_COMPONENT, i18nString(UIStrings.headers),\n          LegacyWrapper.LegacyWrapper.legacyWrapper(UI.Widget.VBox, this.#headersViewComponent),\n          i18nString(UIStrings.headers));\n    }\n\n    this.#resourceViewTabSetting =\n        Common.Settings.Settings.instance().createSetting('resource-view-tab', this.#firstTab);\n\n    if (this.#request.hasOverriddenHeaders()) {\n      const statusDot = document.createElement('div');\n      statusDot.className = 'status-dot';\n      statusDot.title = i18nString(UIStrings.containsOverriddenHeaders);\n      this.setSuffixElement(NetworkForward.UIRequestLocation.UIRequestTabs.HEADERS_COMPONENT, statusDot);\n    }\n\n    void this.maybeAppendPayloadPanel();\n\n    this.addEventListener(UI.TabbedPane.Events.TabSelected, this.tabSelected, this);\n\n    if (request.resourceType() === Common.ResourceType.resourceTypes.WebSocket) {\n      const frameView = new ResourceWebSocketFrameView(request);\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.WS_FRAMES, i18nString(UIStrings.messages), frameView,\n          i18nString(UIStrings.websocketMessages));\n    } else if (request.resourceType() === Common.ResourceType.resourceTypes.DirectSocket) {\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.DIRECT_SOCKET_CHUNKS, i18nString(UIStrings.messages),\n          new ResourceDirectSocketChunkView(request), i18nString(UIStrings.directsocketMessages));\n    } else if (request.mimeType === Platform.MimeType.MimeType.EVENTSTREAM) {\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.EVENT_SOURCE, i18nString(UIStrings.eventstream),\n          new EventSourceMessagesView(request));\n      this.#responseView = requestToResponseView.get(request) ?? new RequestResponseView(request);\n      requestToResponseView.set(request, this.#responseView);\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.RESPONSE, i18nString(UIStrings.response), this.#responseView,\n          i18nString(UIStrings.rawResponseData));\n    } else {\n      this.#responseView = requestToResponseView.get(request) ?? new RequestResponseView(request);\n      requestToResponseView.set(request, this.#responseView);\n      const previewView = requestToPreviewView.get(request) ?? new RequestPreviewView(request);\n      requestToPreviewView.set(request, previewView);\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.PREVIEW, i18nString(UIStrings.preview), previewView,\n          i18nString(UIStrings.responsePreview));\n      const signedExchangeInfo = request.signedExchangeInfo();\n      if (signedExchangeInfo?.errors?.length) {\n        const icon = new IconButton.Icon.Icon();\n        icon.name = 'cross-circle-filled';\n        icon.classList.add('small');\n        UI.Tooltip.Tooltip.install(icon, i18nString(UIStrings.signedexchangeError));\n        this.setTabIcon(NetworkForward.UIRequestLocation.UIRequestTabs.PREVIEW, icon);\n      }\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.RESPONSE, i18nString(UIStrings.response), this.#responseView,\n          i18nString(UIStrings.rawResponseData));\n\n      if (this.#request.hasOverriddenContent) {\n        const statusDot = document.createElement('div');\n        statusDot.className = 'status-dot';\n        statusDot.title = i18nString(UIStrings.responseIsOverridden);\n        this.setSuffixElement(NetworkForward.UIRequestLocation.UIRequestTabs.RESPONSE, statusDot);\n      }\n    }\n\n    this.appendTab(\n        NetworkForward.UIRequestLocation.UIRequestTabs.INITIATOR, i18nString(UIStrings.initiator),\n        new RequestInitiatorView(request), i18nString(UIStrings.requestInitiatorCallStack));\n\n    this.appendTab(\n        NetworkForward.UIRequestLocation.UIRequestTabs.TIMING, i18nString(UIStrings.timing),\n        new RequestTimingView(request, calculator), i18nString(UIStrings.requestAndResponseTimeline));\n\n    if (request.trustTokenParams()) {\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.TRUST_TOKENS, i18nString(UIStrings.trustTokens),\n          LegacyWrapper.LegacyWrapper.legacyWrapper(\n              UI.Widget.VBox, new NetworkComponents.RequestTrustTokensView.RequestTrustTokensView(request)),\n          i18nString(UIStrings.trustTokenOperationDetails));\n    }\n\n    this.#initialTab = initialTab || this.#resourceViewTabSetting.get();\n    // Selecting tabs should not be handled by the super class.\n    this.setAutoSelectFirstItemOnShow(false);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.#request.addEventListener(SDK.NetworkRequest.Events.REQUEST_HEADERS_CHANGED, this.requestHeadersChanged, this);\n    this.#request.addEventListener(\n        SDK.NetworkRequest.Events.RESPONSE_HEADERS_CHANGED, this.maybeAppendCookiesPanel, this);\n    this.#request.addEventListener(\n        SDK.NetworkRequest.Events.TRUST_TOKEN_RESULT_ADDED, this.maybeShowErrorIconInTrustTokenTabHeader, this);\n    this.maybeAppendCookiesPanel();\n    this.maybeShowErrorIconInTrustTokenTabHeader();\n\n    // Only select the initial tab the first time the view is shown after construction.\n    // When the view is re-shown (without re-constructing) users or revealers might have changed\n    // the selected tab in the mean time. Show the previously selected tab in that\n    // case instead, by simply doing nothing.\n    if (this.#initialTab) {\n      this.selectTabInternal(this.#initialTab);\n      this.#initialTab = undefined;\n    }\n  }\n\n  override willHide(): void {\n    this.#request.removeEventListener(\n        SDK.NetworkRequest.Events.REQUEST_HEADERS_CHANGED, this.requestHeadersChanged, this);\n    this.#request.removeEventListener(\n        SDK.NetworkRequest.Events.RESPONSE_HEADERS_CHANGED, this.maybeAppendCookiesPanel, this);\n    this.#request.removeEventListener(\n        SDK.NetworkRequest.Events.TRUST_TOKEN_RESULT_ADDED, this.maybeShowErrorIconInTrustTokenTabHeader, this);\n  }\n\n  private async requestHeadersChanged(): Promise<void> {\n    this.maybeAppendCookiesPanel();\n    void this.maybeAppendPayloadPanel();\n  }\n\n  private maybeAppendCookiesPanel(): void {\n    const cookiesPresent = this.#request.hasRequestCookies() || this.#request.responseCookies.length > 0;\n    console.assert(cookiesPresent || !this.#cookiesView, 'Cookies were introduced in headers and then removed!');\n    if (cookiesPresent && !this.#cookiesView) {\n      this.#cookiesView = new RequestCookiesView(this.#request);\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.COOKIES, i18nString(UIStrings.cookies), this.#cookiesView,\n          i18nString(UIStrings.requestAndResponseCookies));\n    }\n    if (this.#request.hasThirdPartyCookiePhaseoutIssue()) {\n      const icon = new IconButton.Icon.Icon();\n      icon.name = 'warning-filled';\n      icon.classList.add('small');\n      icon.title = i18nString(UIStrings.thirdPartyPhaseout);\n      this.setTrailingTabIcon(NetworkForward.UIRequestLocation.UIRequestTabs.COOKIES, icon);\n    }\n  }\n\n  private async maybeAppendPayloadPanel(): Promise<void> {\n    if (this.hasTab('payload')) {\n      return;\n    }\n    if (this.#request.queryParameters || await this.#request.requestFormData()) {\n      this.#payloadView = new RequestPayloadView(this.#request);\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.PAYLOAD, i18nString(UIStrings.payload), this.#payloadView,\n          i18nString(UIStrings.payload), /* userGesture=*/ void 0,\n          /* isCloseable=*/ void 0, /* isPreviewFeature=*/ void 0, /* index=*/ 1);\n    }\n  }\n\n  private maybeShowErrorIconInTrustTokenTabHeader(): void {\n    const trustTokenResult = this.#request.trustTokenOperationDoneEvent();\n    if (trustTokenResult &&\n        !NetworkComponents.RequestTrustTokensView.statusConsideredSuccess(trustTokenResult.status)) {\n      const icon = new IconButton.Icon.Icon();\n      icon.name = 'cross-circle-filled';\n      icon.classList.add('small');\n      this.setTabIcon(NetworkForward.UIRequestLocation.UIRequestTabs.TRUST_TOKENS, icon);\n    }\n  }\n\n  private selectTabInternal(tabId: NetworkForward.UIRequestLocation.UIRequestTabs): void {\n    if (!this.selectTab(tabId)) {\n      // maybeAppendPayloadPanel might cause payload tab to appear asynchronously, so\n      // it makes sense to retry on the next tick\n      window.setTimeout(() => {\n        if (!this.selectTab(tabId)) {\n          this.selectTab(this.#firstTab);\n        }\n      }, 0);\n    }\n  }\n\n  private tabSelected(event: Common.EventTarget.EventTargetEvent<UI.TabbedPane.EventData>): void {\n    if (!event.data.isUserGesture) {\n      return;\n    }\n    this.#resourceViewTabSetting.set(event.data.tabId as NetworkForward.UIRequestLocation.UIRequestTabs);\n  }\n\n  request(): SDK.NetworkRequest.NetworkRequest {\n    return this.#request;\n  }\n\n  async revealResponseBody(position: SourceFrame.SourceFrame.RevealPosition): Promise<void> {\n    this.selectTabInternal(NetworkForward.UIRequestLocation.UIRequestTabs.RESPONSE);\n    await this.#responseView?.revealPosition(position);\n  }\n\n  revealHeader(section: NetworkForward.UIRequestLocation.UIHeaderSection, header: string|undefined): void {\n    this.selectTabInternal(NetworkForward.UIRequestLocation.UIRequestTabs.HEADERS_COMPONENT);\n    this.#headersViewComponent?.revealHeader(section, header);\n  }\n\n  getHeadersViewComponent(): NetworkComponents.RequestHeadersView.RequestHeadersView|undefined {\n    return this.#headersViewComponent;\n  }\n}\n", "/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as CookieTable from '../../ui/legacy/components/cookie_table/cookie_table.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport requestCookiesViewStyles from './requestCookiesView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Request Cookies View of the Network panel\n   */\n  thisRequestHasNoCookies: 'This request has no cookies.',\n  /**\n   * @description Title for a table which shows all of the cookies associated with a selected network\n   * request, in the Network panel. Noun phrase.\n   */\n  requestCookies: 'Request Cookies',\n  /**\n   * @description Tooltip to explain what request cookies are\n   */\n  cookiesThatWereSentToTheServerIn: 'Cookies that were sent to the server in the \\'cookie\\' header of the request',\n  /**\n   * @description Label for showing request cookies that were not actually sent\n   */\n  showFilteredOutRequestCookies: 'show filtered out request cookies',\n  /**\n   * @description Text in Request Headers View of the Network Panel\n   */\n  noRequestCookiesWereSent: 'No request cookies were sent.',\n  /**\n   * @description Text in Request Cookies View of the Network panel\n   */\n  responseCookies: 'Response Cookies',\n  /**\n   * @description Tooltip to explain what response cookies are\n   */\n  cookiesThatWereReceivedFromThe:\n      'Cookies that were received from the server in the \\'`set-cookie`\\' header of the response',\n  /**\n   * @description Label for response cookies with invalid syntax\n   */\n  malformedResponseCookies: 'Malformed Response Cookies',\n  /**\n   * @description Tooltip to explain what malformed response cookies are. Malformed cookies are\n   * cookies that did not match the expected format and could not be interpreted, and are invalid.\n   */\n  cookiesThatWereReceivedFromTheServer:\n      'Cookies that were received from the server in the \\'`set-cookie`\\' header of the response but were malformed',\n\n  /**\n   * @description Informational text to explain that there were other cookies\n   * that were not used and not shown in the list.\n   * @example {Learn more} PH1\n   *\n   */\n  siteHasCookieInOtherPartition:\n      'This site has cookies in another partition, that were not sent with this request. {PH1}',\n  /**\n   * @description Title of a link to the developer documentation.\n   */\n  learnMore: 'Learn more',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestCookiesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class RequestCookiesView extends UI.Widget.Widget {\n  private request: SDK.NetworkRequest.NetworkRequest;\n  private readonly showFilteredOutCookiesSetting: Common.Settings.Setting<boolean>;\n  private readonly emptyWidget: UI.EmptyWidget.EmptyWidget;\n  private readonly requestCookiesTitle: HTMLElement;\n  private readonly requestCookiesEmpty: HTMLElement;\n  private readonly requestCookiesTable: CookieTable.CookiesTable.CookiesTable;\n  private readonly responseCookiesTitle: HTMLElement;\n  private readonly responseCookiesTable: CookieTable.CookiesTable.CookiesTable;\n  private readonly siteHasCookieInOtherPartition: HTMLElement;\n  private readonly malformedResponseCookiesTitle: HTMLElement;\n  private readonly malformedResponseCookiesList: HTMLElement;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super({jslog: `${VisualLogging.pane('cookies').track({resize: true})}`});\n    this.registerRequiredCSS(requestCookiesViewStyles);\n\n    this.element.classList.add('request-cookies-view');\n\n    this.request = request;\n    this.showFilteredOutCookiesSetting = Common.Settings.Settings.instance().createSetting(\n        'show-filtered-out-request-cookies', /* defaultValue */ false);\n\n    this.emptyWidget = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.thisRequestHasNoCookies), '');\n    this.emptyWidget.show(this.element);\n\n    this.requestCookiesTitle = this.element.createChild('div');\n    const titleText = this.requestCookiesTitle.createChild('span', 'request-cookies-title');\n    titleText.textContent = i18nString(UIStrings.requestCookies);\n    UI.Tooltip.Tooltip.install(titleText, i18nString(UIStrings.cookiesThatWereSentToTheServerIn));\n\n    const requestCookiesCheckbox = UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.showFilteredOutRequestCookies), this.showFilteredOutCookiesSetting);\n    requestCookiesCheckbox.addEventListener('change', () => {\n      this.refreshRequestCookiesView();\n    });\n    this.requestCookiesTitle.appendChild(requestCookiesCheckbox);\n\n    this.requestCookiesEmpty = this.element.createChild('div', 'cookies-panel-item');\n    this.requestCookiesEmpty.textContent = i18nString(UIStrings.noRequestCookiesWereSent);\n\n    this.requestCookiesTable = new CookieTable.CookiesTable.CookiesTable(/* renderInline */ true);\n    this.requestCookiesTable.contentElement.classList.add('cookie-table', 'cookies-panel-item');\n    this.requestCookiesTable.show(this.element);\n\n    this.siteHasCookieInOtherPartition =\n        this.element.createChild('div', 'cookies-panel-item site-has-cookies-in-other-partition');\n    this.siteHasCookieInOtherPartition.appendChild(\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.siteHasCookieInOtherPartition, {\n          PH1: UI.XLink.XLink.create(\n              'https://developer.chrome.com/en/docs/privacy-sandbox/chips/', i18nString(UIStrings.learnMore), undefined,\n              undefined, 'learn-more'),\n        }));\n\n    this.responseCookiesTitle = this.element.createChild('div', 'request-cookies-title');\n    this.responseCookiesTitle.textContent = i18nString(UIStrings.responseCookies);\n    this.responseCookiesTitle.title = i18nString(UIStrings.cookiesThatWereReceivedFromThe);\n\n    this.responseCookiesTable = new CookieTable.CookiesTable.CookiesTable(/* renderInline */ true);\n    this.responseCookiesTable.contentElement.classList.add('cookie-table', 'cookies-panel-item');\n    this.responseCookiesTable.show(this.element);\n\n    this.malformedResponseCookiesTitle = this.element.createChild('div', 'request-cookies-title');\n    this.malformedResponseCookiesTitle.textContent = i18nString(UIStrings.malformedResponseCookies);\n    UI.Tooltip.Tooltip.install(\n        this.malformedResponseCookiesTitle, i18nString(UIStrings.cookiesThatWereReceivedFromTheServer));\n\n    this.malformedResponseCookiesList = this.element.createChild('div');\n  }\n\n  private getRequestCookies(): {\n    requestCookies: SDK.Cookie.Cookie[],\n    requestCookieToBlockedReasons: Map<SDK.Cookie.Cookie, SDK.CookieModel.BlockedReason[]>,\n    requestCookieToExemptionReason: Map<SDK.Cookie.Cookie, SDK.CookieModel.ExemptionReason>,\n  } {\n    const requestCookieToBlockedReasons = new Map<SDK.Cookie.Cookie, SDK.CookieModel.BlockedReason[]>();\n    const requestCookieToExemptionReason = new Map<SDK.Cookie.Cookie, SDK.CookieModel.ExemptionReason>();\n    const requestCookies =\n        this.request.includedRequestCookies().map(includedRequestCookie => includedRequestCookie.cookie);\n\n    if (this.showFilteredOutCookiesSetting.get()) {\n      for (const blockedCookie of this.request.blockedRequestCookies()) {\n        requestCookieToBlockedReasons.set(blockedCookie.cookie, blockedCookie.blockedReasons.map(blockedReason => {\n          return {\n            attribute: SDK.NetworkRequest.cookieBlockedReasonToAttribute(blockedReason),\n            uiString: SDK.NetworkRequest.cookieBlockedReasonToUiString(blockedReason),\n          };\n        }));\n        requestCookies.push(blockedCookie.cookie);\n      }\n    }\n    for (const includedCookie of this.request.includedRequestCookies()) {\n      if (includedCookie.exemptionReason) {\n        requestCookieToExemptionReason.set(includedCookie.cookie, {\n          uiString: SDK.NetworkRequest.cookieExemptionReasonToUiString(includedCookie.exemptionReason),\n        });\n      }\n    }\n    return {requestCookies, requestCookieToBlockedReasons, requestCookieToExemptionReason};\n  }\n\n  private getResponseCookies(): {\n    responseCookies: SDK.Cookie.Cookie[],\n    responseCookieToBlockedReasons: Map<SDK.Cookie.Cookie, SDK.CookieModel.BlockedReason[]>,\n    responseCookieToExemptionReason: Map<SDK.Cookie.Cookie, SDK.CookieModel.ExemptionReason>,\n    malformedResponseCookies: SDK.NetworkRequest.BlockedSetCookieWithReason[],\n  } {\n    let responseCookies: SDK.Cookie.Cookie[] = [];\n    const responseCookieToBlockedReasons = new Map<SDK.Cookie.Cookie, SDK.CookieModel.BlockedReason[]>();\n    const responseCookieToExemptionReason = new Map<SDK.Cookie.Cookie, SDK.CookieModel.ExemptionReason>();\n    const malformedResponseCookies: SDK.NetworkRequest.BlockedSetCookieWithReason[] = [];\n\n    if (this.request.responseCookies.length) {\n      responseCookies = this.request.nonBlockedResponseCookies();\n      for (const blockedCookie of this.request.blockedResponseCookies()) {\n        const parsedCookies = SDK.CookieParser.CookieParser.parseSetCookie(blockedCookie.cookieLine);\n        if ((parsedCookies && !parsedCookies.length) ||\n            blockedCookie.blockedReasons.includes(Protocol.Network.SetCookieBlockedReason.SyntaxError) ||\n            blockedCookie.blockedReasons.includes(\n                Protocol.Network.SetCookieBlockedReason.NameValuePairExceedsMaxSize)) {\n          malformedResponseCookies.push(blockedCookie);\n          continue;\n        }\n\n        let cookie: SDK.Cookie.Cookie|(SDK.Cookie.Cookie | null) = blockedCookie.cookie;\n        if (!cookie && parsedCookies) {\n          cookie = parsedCookies[0];\n        }\n        if (cookie) {\n          responseCookieToBlockedReasons.set(cookie, blockedCookie.blockedReasons.map(blockedReason => {\n            return {\n              attribute: SDK.NetworkRequest.setCookieBlockedReasonToAttribute(blockedReason),\n              uiString: SDK.NetworkRequest.setCookieBlockedReasonToUiString(blockedReason),\n            };\n          }));\n          responseCookies.push(cookie);\n        }\n      }\n      for (const exemptedCookie of this.request.exemptedResponseCookies()) {\n        // `responseCookies` are generated from `Set-Cookie` header, which should include the exempted cookies, whereas\n        // exempted cookies are received via CDP as objects of type cookie. Therefore they are different objects in\n        // DevTools and need to be matched here in order for the rendering logic to be able to lookup a potential\n        // exemption reason for a cookie.\n        const matchedResponseCookie =\n            responseCookies.find(responseCookie => exemptedCookie.cookieLine === responseCookie.getCookieLine());\n        if (matchedResponseCookie) {\n          responseCookieToExemptionReason.set(matchedResponseCookie, {\n            uiString: SDK.NetworkRequest.cookieExemptionReasonToUiString(exemptedCookie.exemptionReason),\n          });\n        }\n      }\n    }\n\n    return {responseCookies, responseCookieToBlockedReasons, responseCookieToExemptionReason, malformedResponseCookies};\n  }\n\n  private refreshRequestCookiesView(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    const gotCookies = this.request.hasRequestCookies() || this.request.responseCookies.length;\n    if (gotCookies) {\n      this.emptyWidget.hideWidget();\n    } else {\n      this.emptyWidget.showWidget();\n    }\n\n    const {requestCookies, requestCookieToBlockedReasons, requestCookieToExemptionReason} = this.getRequestCookies();\n    const {responseCookies, responseCookieToBlockedReasons, responseCookieToExemptionReason, malformedResponseCookies} =\n        this.getResponseCookies();\n\n    if (requestCookies.length) {\n      this.requestCookiesTitle.classList.remove('hidden');\n      this.requestCookiesEmpty.classList.add('hidden');\n      this.requestCookiesTable.showWidget();\n      this.requestCookiesTable.setCookies(\n          requestCookies, requestCookieToBlockedReasons, requestCookieToExemptionReason);\n\n    } else if (this.request.blockedRequestCookies().length) {\n      this.requestCookiesTitle.classList.remove('hidden');\n      this.requestCookiesEmpty.classList.remove('hidden');\n      this.requestCookiesTable.hideWidget();\n\n    } else {\n      this.requestCookiesTitle.classList.add('hidden');\n      this.requestCookiesEmpty.classList.add('hidden');\n      this.requestCookiesTable.hideWidget();\n    }\n\n    if (responseCookies.length) {\n      this.responseCookiesTitle.classList.remove('hidden');\n      this.responseCookiesTable.showWidget();\n      this.responseCookiesTable.setCookies(\n          responseCookies, responseCookieToBlockedReasons, responseCookieToExemptionReason);\n    } else {\n      this.responseCookiesTitle.classList.add('hidden');\n      this.responseCookiesTable.hideWidget();\n    }\n\n    if (malformedResponseCookies.length) {\n      this.malformedResponseCookiesTitle.classList.remove('hidden');\n      this.malformedResponseCookiesList.classList.remove('hidden');\n\n      this.malformedResponseCookiesList.removeChildren();\n      for (const malformedCookie of malformedResponseCookies) {\n        const listItem = this.malformedResponseCookiesList.createChild('span', 'cookie-line source-code');\n        const icon = new IconButton.Icon.Icon();\n        icon.name = 'cross-circle-filled';\n        icon.classList.add('cookie-warning-icon', 'small');\n        listItem.appendChild(icon);\n        UI.UIUtils.createTextChild(listItem, malformedCookie.cookieLine);\n\n        if (malformedCookie.blockedReasons.includes(\n                Protocol.Network.SetCookieBlockedReason.NameValuePairExceedsMaxSize)) {\n          listItem.title = SDK.NetworkRequest.setCookieBlockedReasonToUiString(\n              Protocol.Network.SetCookieBlockedReason.NameValuePairExceedsMaxSize);\n        } else {\n          listItem.title =\n              SDK.NetworkRequest.setCookieBlockedReasonToUiString(Protocol.Network.SetCookieBlockedReason.SyntaxError);\n        }\n      }\n    } else {\n      this.malformedResponseCookiesTitle.classList.add('hidden');\n      this.malformedResponseCookiesList.classList.add('hidden');\n    }\n\n    if (this.request.siteHasCookieInOtherPartition()) {\n      this.siteHasCookieInOtherPartition.classList.remove('hidden');\n    } else {\n      this.siteHasCookieInOtherPartition.classList.add('hidden');\n    }\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.request.addEventListener(\n        SDK.NetworkRequest.Events.REQUEST_HEADERS_CHANGED, this.refreshRequestCookiesView, this);\n    this.request.addEventListener(\n        SDK.NetworkRequest.Events.RESPONSE_HEADERS_CHANGED, this.refreshRequestCookiesView, this);\n\n    this.refreshRequestCookiesView();\n  }\n\n  override willHide(): void {\n    this.request.removeEventListener(\n        SDK.NetworkRequest.Events.REQUEST_HEADERS_CHANGED, this.refreshRequestCookiesView, this);\n    this.request.removeEventListener(\n        SDK.NetworkRequest.Events.RESPONSE_HEADERS_CHANGED, this.refreshRequestCookiesView, this);\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2014 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.request-cookies-view {\n  overflow: auto;\n  padding: 12px;\n  height: 100%;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.request-cookies-view .request-cookies-title {\n  font-size: 12px;\n  font-weight: bold;\n  margin-right: 30px;\n  color: var(--sys-color-on-surface);\n}\n\n.request-cookies-view .cookie-line {\n  margin-top: 6px;\n  display: flex;\n}\n\n.request-cookies-view .cookies-panel-item {\n  margin-top: 6px;\n  margin-bottom: 16px;\n  flex: none;\n}\n/*# sourceURL=${import.meta.resolve('./requestCookiesView.css')} */`;", "// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport requestInitiatorViewStyles from './requestInitiatorView.css.js';\nimport requestInitiatorViewTreeStyles from './requestInitiatorViewTree.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Request Initiator View of the Network panel if the request has no initiator data\n   */\n  noInitiator: 'No initiator data',\n  /**\n   * @description Title of a section in Request Initiator view of the Network Panel\n   */\n  requestCallStack: 'Request call stack',\n  /**\n   * @description Title of a section in Request Initiator view of the Network Panel\n   */\n  requestInitiatorChain: 'Request initiator chain',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestInitiatorView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class RequestInitiatorView extends UI.Widget.VBox {\n  private readonly linkifier: Components.Linkifier.Linkifier;\n  private readonly request: SDK.NetworkRequest.NetworkRequest;\n  private readonly emptyWidget: UI.EmptyWidget.EmptyWidget;\n  private hasShown: boolean;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super({jslog: `${VisualLogging.pane('initiator').track({resize: true})}`});\n\n    this.element.classList.add('request-initiator-view');\n    this.linkifier = new Components.Linkifier.Linkifier();\n    this.request = request;\n    this.emptyWidget = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.noInitiator), '');\n    this.emptyWidget.show(this.element);\n    this.hasShown = false;\n  }\n\n  static createStackTracePreview(\n      request: SDK.NetworkRequest.NetworkRequest, linkifier: Components.Linkifier.Linkifier,\n      focusableLink?: boolean): Components.JSPresentationUtils.StackTracePreviewContent|null {\n    const initiator = request.initiator();\n    if (!initiator?.stack) {\n      return null;\n    }\n    const networkManager = SDK.NetworkManager.NetworkManager.forRequest(request);\n    const target = networkManager ? networkManager.target() : undefined;\n    return new Components.JSPresentationUtils.StackTracePreviewContent(\n        undefined, target, linkifier, {stackTrace: initiator.stack, tabStops: focusableLink});\n  }\n\n  private createTree(): UI.TreeOutline.TreeOutlineInShadow {\n    const treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    treeOutline.registerRequiredCSS(requestInitiatorViewTreeStyles);\n    treeOutline.contentElement.classList.add('request-initiator-view-tree');\n    treeOutline.contentElement.setAttribute('jslog', `${VisualLogging.tree('initiator-tree')}`);\n\n    return treeOutline;\n  }\n\n  private buildRequestChainTree(\n      initiatorGraph: Logs.NetworkLog.InitiatorGraph, title: string,\n      tree: UI.TreeOutline.TreeOutlineInShadow): UI.TreeOutline.TreeElement {\n    const root = new UI.TreeOutline.TreeElement(title);\n\n    tree.appendChild(root);\n\n    if (root.titleElement instanceof HTMLElement) {\n      root.titleElement.classList.add('request-initiator-view-section-title');\n    }\n\n    const initiators = initiatorGraph.initiators;\n    let parent: UI.TreeOutline.TreeElement = root;\n    for (const request of Array.from(initiators).reverse()) {\n      const treeElement = new UI.TreeOutline.TreeElement(request.url());\n      parent.appendChild(treeElement);\n      parent.expand();\n      parent = treeElement;\n    }\n\n    root.expand();\n    parent.select();\n    const titleElement = parent.titleElement;\n    if (titleElement instanceof HTMLElement) {\n      titleElement.style.fontWeight = 'bold';\n    }\n\n    const initiated = initiatorGraph.initiated;\n    this.depthFirstSearchTreeBuilder(initiated, parent, this.request);\n    return root;\n  }\n\n  private depthFirstSearchTreeBuilder(\n      initiated: Map<SDK.NetworkRequest.NetworkRequest, SDK.NetworkRequest.NetworkRequest>,\n      parentElement: UI.TreeOutline.TreeElement, parentRequest: SDK.NetworkRequest.NetworkRequest): void {\n    const visited = new Set<SDK.NetworkRequest.NetworkRequest>();\n    // this.request should be already in the tree when build initiator part\n    visited.add(this.request);\n    for (const request of initiated.keys()) {\n      if (initiated.get(request) === parentRequest) {\n        const treeElement = new UI.TreeOutline.TreeElement(request.url());\n        parentElement.appendChild(treeElement);\n        parentElement.expand();\n        // only do dfs when we haven't done one\n        if (!visited.has(request)) {\n          visited.add(request);\n          this.depthFirstSearchTreeBuilder(initiated, treeElement, request);\n        }\n      }\n    }\n  }\n\n  private buildStackTraceSection(\n      stackTracePreview: Components.JSPresentationUtils.StackTracePreviewContent, title: string,\n      tree: UI.TreeOutline.TreeOutlineInShadow): void {\n    const root = new UI.TreeOutline.TreeElement(title);\n    tree.appendChild(root);\n\n    if (root.titleElement instanceof HTMLElement) {\n      root.titleElement.classList.add('request-initiator-view-section-title');\n    }\n\n    const contentElement = new UI.TreeOutline.TreeElement(undefined, false);\n    contentElement.selectable = false;\n    stackTracePreview.markAsRoot();\n    stackTracePreview.show(contentElement.listItemElement);\n\n    root.appendChild(contentElement);\n    root.expand();\n  }\n\n  override wasShown(): void {\n    if (this.hasShown) {\n      return;\n    }\n    this.registerRequiredCSS(requestInitiatorViewStyles);\n    let initiatorDataPresent = false;\n    const containerTree = this.createTree();\n\n    const stackTracePreview = RequestInitiatorView.createStackTracePreview(this.request, this.linkifier, true);\n\n    if (stackTracePreview) {\n      initiatorDataPresent = true;\n      this.buildStackTraceSection(stackTracePreview, i18nString(UIStrings.requestCallStack), containerTree);\n    }\n\n    const initiatorGraph = Logs.NetworkLog.NetworkLog.instance().initiatorGraphForRequest(this.request);\n\n    if (initiatorGraph.initiators.size > 1 || initiatorGraph.initiated.size > 1) {\n      initiatorDataPresent = true;\n      this.buildRequestChainTree(initiatorGraph, i18nString(UIStrings.requestInitiatorChain), containerTree);\n    }\n\n    const firstChild = containerTree.firstChild();\n\n    if (firstChild) {\n      firstChild.select(true);\n    }\n\n    if (initiatorDataPresent) {\n      this.element.appendChild(containerTree.element);\n      this.emptyWidget.hideWidget();\n    }\n    this.hasShown = true;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.request-initiator-view {\n  display: flex;\n  margin: 6px;\n}\n\n/*# sourceURL=${import.meta.resolve('./requestInitiatorView.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.request-initiator-view-tree {\n  user-select: text;\n\n  & .fill {\n    right: -6px; /* Same as the margin in .request-initiator-view but negative. */\n  }\n}\n\n.request-initiator-view-section-title {\n  font-weight: bold;\n  padding: 4px;\n}\n\n.request-initiator-view-section-title:focus-visible {\n  background-color: var(--sys-color-state-focus-highlight);\n}\n\n@media (forced-colors: active) {\n  .request-initiator-view-section-title:focus-visible {\n    forced-color-adjust: none;\n    background-color: Highlight;\n    color: HighlightText;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./requestInitiatorViewTree.css')} */`;", "// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) IBM Corp. 2009  All rights reserved.\n * Copyright (C) 2010 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\n// eslint-disable-next-line rulesdir/es-modules-import\nimport objectPropertiesSectionStyles from '../../ui/legacy/components/object_ui/objectPropertiesSection.css.js';\n// eslint-disable-next-line rulesdir/es-modules-import\nimport objectValueStyles from '../../ui/legacy/components/object_ui/objectValue.css.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport requestPayloadTreeStyles from './requestPayloadTree.css.js';\nimport requestPayloadViewStyles from './requestPayloadView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description A context menu item Payload View of the Network panel to copy a parsed value.\n   */\n  copyValue: 'Copy value',\n  /**\n   * @description A context menu item Payload View of the Network panel to copy the payload.\n   */\n  copyPayload: 'Copy',\n  /**\n   * @description Text in Request Payload View of the Network panel. This is a noun-phrase meaning the\n   * payload of a network request.\n   */\n  requestPayload: 'Request Payload',\n  /**\n   * @description Text in Request Payload View of the Network panel\n   */\n  unableToDecodeValue: '(unable to decode value)',\n  /**\n   * @description Text in Request Payload View of the Network panel\n   */\n  queryStringParameters: 'Query String Parameters',\n  /**\n   * @description Text in Request Payload View of the Network panel\n   */\n  formData: 'Form Data',\n  /**\n   * @description Text to show more content\n   */\n  showMore: 'Show more',\n  /**\n   * @description Text for toggling the view of payload data (e.g. query string parameters) from source to parsed in the payload tab\n   */\n  viewParsed: 'View parsed',\n  /**\n   * @description Text to show an item is empty\n   */\n  empty: '(empty)',\n  /**\n   * @description Text for toggling the view of payload data (e.g. query string parameters) from parsed to source in the payload tab\n   */\n  viewSource: 'View source',\n  /**\n   * @description Text for toggling payload data (e.g. query string parameters) from decoded to\n   * encoded in the payload tab or in the cookies preview. URL-encoded is a different data format for\n   * the same data, which the user sees when they click this command.\n   */\n  viewUrlEncoded: 'View URL-encoded',\n  /**\n   * @description Text for toggling payload data (e.g. query string parameters) from encoded to decoded in the payload tab or in the cookies preview\n   */\n  viewDecoded: 'View decoded',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestPayloadView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class RequestPayloadView extends UI.Widget.VBox {\n  private request: SDK.NetworkRequest.NetworkRequest;\n  private decodeRequestParameters: boolean;\n  private queryStringCategory: Category;\n  private formDataCategory: Category;\n  private requestPayloadCategory: Category;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super({jslog: `${VisualLogging.pane('payload').track({resize: true})}`});\n    this.registerRequiredCSS(requestPayloadViewStyles);\n    this.element.classList.add('request-payload-view');\n\n    this.request = request;\n    this.decodeRequestParameters = true;\n\n    const contentType = request.requestContentType();\n    if (contentType) {\n      this.decodeRequestParameters = Boolean(contentType.match(/^application\\/x-www-form-urlencoded\\s*(;.*)?$/i));\n    }\n\n    const root = new UI.TreeOutline.TreeOutlineInShadow();\n    root.registerRequiredCSS(objectValueStyles, objectPropertiesSectionStyles, requestPayloadTreeStyles);\n    root.element.classList.add('request-payload-tree');\n    root.setDense(true);\n    this.element.appendChild(root.element);\n\n    this.queryStringCategory = new Category(root, 'query-string');\n    this.formDataCategory = new Category(root, 'form-data');\n    this.requestPayloadCategory = new Category(root, 'request-payload', i18nString(UIStrings.requestPayload));\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.request.addEventListener(SDK.NetworkRequest.Events.REQUEST_HEADERS_CHANGED, this.refreshFormData, this);\n\n    this.refreshQueryString();\n    void this.refreshFormData();\n    // this._root.select(/* omitFocus */ true, /* selectedByUser */ false);\n  }\n\n  override willHide(): void {\n    this.request.removeEventListener(SDK.NetworkRequest.Events.REQUEST_HEADERS_CHANGED, this.refreshFormData, this);\n  }\n\n  private addEntryContextMenuHandler(\n      treeElement: UI.TreeOutline.TreeElement, menuItem: string, jslogContext: string, getValue: () => string): void {\n    treeElement.listItemElement.addEventListener('contextmenu', event => {\n      event.consume(true);\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      const copyValueHandler = (): void => {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.NetworkPanelCopyValue);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(getValue());\n      };\n      contextMenu.clipboardSection().appendItem(menuItem, copyValueHandler, {jslogContext});\n      void contextMenu.show();\n    });\n  }\n\n  static formatParameter(value: string, className: string, decodeParameters: boolean): Element {\n    let errorDecoding = false;\n\n    if (decodeParameters) {\n      value = value.replace(/\\+/g, ' ');\n      if (value.indexOf('%') >= 0) {\n        try {\n          value = decodeURIComponent(value);\n        } catch {\n          errorDecoding = true;\n        }\n      }\n    }\n    const div = document.createElement('div');\n    if (className) {\n      div.className = className;\n    }\n    if (value === '') {\n      div.classList.add('empty-value');\n    }\n    if (errorDecoding) {\n      div.createChild('span', 'payload-decode-error').textContent = i18nString(UIStrings.unableToDecodeValue);\n    } else {\n      div.textContent = value;\n    }\n    return div;\n  }\n\n  private refreshQueryString(): void {\n    const queryString = this.request.queryString();\n    const queryParameters = this.request.queryParameters;\n    this.queryStringCategory.hidden = !queryParameters;\n    if (queryParameters) {\n      this.refreshParams(\n          i18nString(UIStrings.queryStringParameters), queryParameters, queryString, this.queryStringCategory);\n    }\n  }\n\n  private async refreshFormData(): Promise<void> {\n    const formData = await this.request.requestFormData();\n    if (!formData) {\n      this.formDataCategory.hidden = true;\n      this.requestPayloadCategory.hidden = true;\n      return;\n    }\n\n    const formParameters = await this.request.formParameters();\n    if (formParameters) {\n      this.formDataCategory.hidden = false;\n      this.requestPayloadCategory.hidden = true;\n      this.refreshParams(i18nString(UIStrings.formData), formParameters, formData, this.formDataCategory);\n    } else {\n      this.requestPayloadCategory.hidden = false;\n      this.formDataCategory.hidden = true;\n      try {\n        const json = JSON.parse(formData);\n        this.refreshRequestJSONPayload(json, formData);\n      } catch {\n        this.populateTreeElementWithSourceText(this.requestPayloadCategory, formData);\n      }\n    }\n  }\n\n  private populateTreeElementWithSourceText(treeElement: UI.TreeOutline.TreeElement, sourceText: string|null): void {\n    const MAX_LENGTH = 3000;\n    const text = (sourceText || '').trim();\n    const trim = text.length > MAX_LENGTH;\n\n    const sourceTextElement = document.createElement('span');\n    sourceTextElement.classList.add('payload-value');\n    sourceTextElement.classList.add('source-code');\n    sourceTextElement.textContent = trim ? text.substr(0, MAX_LENGTH) : text;\n\n    const sourceTreeElement = new UI.TreeOutline.TreeElement(sourceTextElement);\n\n    treeElement.removeChildren();\n    treeElement.appendChild(sourceTreeElement);\n    this.addEntryContextMenuHandler(sourceTreeElement, i18nString(UIStrings.copyPayload), 'copy-payload', () => text);\n    if (!trim) {\n      return;\n    }\n\n    const showMoreButton = new Buttons.Button.Button();\n    showMoreButton.data = {variant: Buttons.Button.Variant.OUTLINED, jslogContext: 'show-more'};\n    showMoreButton.innerText = i18nString(UIStrings.showMore);\n    showMoreButton.classList.add('request-payload-show-more-button');\n\n    function showMore(): void {\n      showMoreButton.remove();\n      sourceTextElement.textContent = text;\n      sourceTreeElement.listItemElement.removeEventListener('contextmenu', onContextMenuShowMore);\n    }\n    showMoreButton.addEventListener('click', showMore);\n\n    function onContextMenuShowMore(event: Event): void {\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      const section = contextMenu.newSection();\n      section.appendItem(i18nString(UIStrings.showMore), showMore, {jslogContext: 'show-more'});\n      void contextMenu.show();\n    }\n    sourceTreeElement.listItemElement.addEventListener('contextmenu', onContextMenuShowMore);\n    sourceTextElement.appendChild(showMoreButton);\n  }\n\n  private refreshParams(\n      title: string, params: SDK.NetworkRequest.NameValue[]|null, sourceText: string|null,\n      paramsTreeElement: UI.TreeOutline.TreeElement): void {\n    paramsTreeElement.removeChildren();\n\n    paramsTreeElement.listItemElement.removeChildren();\n    paramsTreeElement.listItemElement.createChild('div', 'selection fill');\n    UI.UIUtils.createTextChild(paramsTreeElement.listItemElement, title);\n\n    const payloadCount = document.createElement('span');\n    payloadCount.classList.add('payload-count');\n    const numberOfParams = params ? params.length : 0;\n    payloadCount.textContent = `\\xA0(${numberOfParams})`;\n    paramsTreeElement.listItemElement.appendChild(payloadCount);\n\n    const shouldViewSource = viewSourceForItems.has(paramsTreeElement);\n    if (shouldViewSource) {\n      this.appendParamsSource(title, params, sourceText, paramsTreeElement);\n    } else {\n      this.appendParamsParsed(title, params, sourceText, paramsTreeElement);\n    }\n  }\n\n  private appendParamsSource(\n      title: string, params: SDK.NetworkRequest.NameValue[]|null, sourceText: string|null,\n      paramsTreeElement: UI.TreeOutline.TreeElement): void {\n    this.populateTreeElementWithSourceText(paramsTreeElement, sourceText);\n\n    const listItemElement = paramsTreeElement.listItemElement;\n\n    const viewParsed = function(this: RequestPayloadView, event: Event): void {\n      listItemElement.removeEventListener('contextmenu', viewParsedContextMenu);\n\n      viewSourceForItems.delete(paramsTreeElement);\n      this.refreshParams(title, params, sourceText, paramsTreeElement);\n      event.consume();\n    };\n\n    const viewParsedContextMenu = (event: Event): void => {\n      if (!paramsTreeElement.expanded) {\n        return;\n      }\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      contextMenu.newSection().appendItem(\n          i18nString(UIStrings.viewParsed), viewParsed.bind(this, event), {jslogContext: 'view-parsed'});\n      void contextMenu.show();\n    };\n\n    const viewParsedButton = this.createViewSourceToggle(/* viewSource */ true, viewParsed.bind(this));\n    listItemElement.appendChild(viewParsedButton);\n\n    listItemElement.addEventListener('contextmenu', viewParsedContextMenu);\n  }\n\n  private appendParamsParsed(\n      title: string, params: SDK.NetworkRequest.NameValue[]|null, sourceText: string|null,\n      paramsTreeElement: UI.TreeOutline.TreeElement): void {\n    for (const param of params || []) {\n      const paramNameValue = document.createDocumentFragment();\n      if (param.name !== '') {\n        const name = RequestPayloadView.formatParameter(param.name, 'payload-name', this.decodeRequestParameters);\n        const value =\n            RequestPayloadView.formatParameter(param.value, 'payload-value source-code', this.decodeRequestParameters);\n        paramNameValue.appendChild(name);\n        paramNameValue.appendChild(value);\n      } else {\n        paramNameValue.appendChild(RequestPayloadView.formatParameter(\n            i18nString(UIStrings.empty), 'empty-request-payload', this.decodeRequestParameters));\n      }\n\n      const paramTreeElement = new UI.TreeOutline.TreeElement(paramNameValue);\n      this.addEntryContextMenuHandler(\n          paramTreeElement, i18nString(UIStrings.copyValue), 'copy-value', () => decodeURIComponent(param.value));\n      paramsTreeElement.appendChild(paramTreeElement);\n    }\n\n    const listItemElement = paramsTreeElement.listItemElement;\n\n    const viewSource = function(this: RequestPayloadView, event: Event): void {\n      listItemElement.removeEventListener('contextmenu', viewSourceContextMenu);\n\n      viewSourceForItems.add(paramsTreeElement);\n      this.refreshParams(title, params, sourceText, paramsTreeElement);\n      event.consume();\n    };\n\n    const toggleURLDecoding = function(this: RequestPayloadView, event: Event): void {\n      listItemElement.removeEventListener('contextmenu', viewSourceContextMenu);\n      this.toggleURLDecoding(event);\n    };\n\n    const viewSourceContextMenu = (event: Event): void => {\n      if (!paramsTreeElement.expanded) {\n        return;\n      }\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      const section = contextMenu.newSection();\n      section.appendItem(i18nString(UIStrings.viewSource), viewSource.bind(this, event), {jslogContext: 'view-source'});\n      const viewURLEncodedText =\n          this.decodeRequestParameters ? i18nString(UIStrings.viewUrlEncoded) : i18nString(UIStrings.viewDecoded);\n      section.appendItem(\n          viewURLEncodedText, toggleURLDecoding.bind(this, event), {jslogContext: 'toggle-url-decoding'});\n      void contextMenu.show();\n    };\n\n    const viewSourceButton = this.createViewSourceToggle(/* viewSource */ false, viewSource.bind(this));\n    listItemElement.appendChild(viewSourceButton);\n\n    const toggleTitle =\n        this.decodeRequestParameters ? i18nString(UIStrings.viewUrlEncoded) : i18nString(UIStrings.viewDecoded);\n    const toggleButton = UI.UIUtils.createTextButton(\n        toggleTitle, toggleURLDecoding.bind(this), {jslogContext: 'decode-encode', className: 'payload-toggle'});\n    listItemElement.appendChild(toggleButton);\n\n    listItemElement.addEventListener('contextmenu', viewSourceContextMenu);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private refreshRequestJSONPayload(parsedObject: any, sourceText: string): void {\n    const rootListItem = this.requestPayloadCategory;\n    rootListItem.removeChildren();\n\n    const rootListItemElement = rootListItem.listItemElement;\n    rootListItemElement.removeChildren();\n    rootListItemElement.createChild('div', 'selection fill');\n    UI.UIUtils.createTextChild(rootListItemElement, this.requestPayloadCategory.title.toString());\n\n    if (viewSourceForItems.has(rootListItem)) {\n      this.appendJSONPayloadSource(rootListItem, parsedObject, sourceText);\n    } else {\n      this.appendJSONPayloadParsed(rootListItem, parsedObject, sourceText);\n    }\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private appendJSONPayloadSource(rootListItem: Category, parsedObject: any, sourceText: string): void {\n    const rootListItemElement = rootListItem.listItemElement;\n    this.populateTreeElementWithSourceText(rootListItem, sourceText);\n\n    const viewParsed = function(this: RequestPayloadView, event: Event): void {\n      rootListItemElement.removeEventListener('contextmenu', viewParsedContextMenu);\n      viewSourceForItems.delete(rootListItem);\n      this.refreshRequestJSONPayload(parsedObject, sourceText);\n      event.consume();\n    };\n\n    const viewParsedButton = this.createViewSourceToggle(/* viewSource */ true, viewParsed.bind(this));\n    rootListItemElement.appendChild(viewParsedButton);\n\n    const viewParsedContextMenu = (event: Event): void => {\n      if (!rootListItem.expanded) {\n        return;\n      }\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      contextMenu.newSection().appendItem(\n          i18nString(UIStrings.viewParsed), viewParsed.bind(this, event), {jslogContext: 'view-parsed'});\n      void contextMenu.show();\n    };\n\n    rootListItemElement.addEventListener('contextmenu', viewParsedContextMenu);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private appendJSONPayloadParsed(rootListItem: Category, parsedObject: any, sourceText: string): void {\n    const object = (SDK.RemoteObject.RemoteObject.fromLocalObject(parsedObject) as SDK.RemoteObject.LocalJSONObject);\n    const section = new ObjectUI.ObjectPropertiesSection.RootElement(object);\n    section.title = (object.description);\n    section.expand();\n    // `editable` is not a valid property for `ObjectUI.ObjectPropertiesSection.RootElement`. Only for\n    // `ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection`. We do not know if this assignment is\n    // safe to delete.\n    // @ts-expect-error\n    section.editable = false;\n    rootListItem.childrenListElement.classList.add('source-code', 'object-properties-section');\n\n    rootListItem.appendChild(section);\n    const rootListItemElement = rootListItem.listItemElement;\n\n    const viewSource = function(this: RequestPayloadView, event: Event): void {\n      rootListItemElement.removeEventListener('contextmenu', viewSourceContextMenu);\n\n      viewSourceForItems.add(rootListItem);\n      this.refreshRequestJSONPayload(parsedObject, sourceText);\n      event.consume();\n    };\n\n    const viewSourceContextMenu = (event: Event): void => {\n      if (!rootListItem.expanded) {\n        return;\n      }\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      contextMenu.newSection().appendItem(\n          i18nString(UIStrings.viewSource), viewSource.bind(this, event), {jslogContext: 'view-source'});\n      void contextMenu.show();\n    };\n\n    const viewSourceButton = this.createViewSourceToggle(/* viewSource */ false, viewSource.bind(this));\n    rootListItemElement.appendChild(viewSourceButton);\n\n    rootListItemElement.addEventListener('contextmenu', viewSourceContextMenu);\n  }\n\n  private createViewSourceToggle(viewSource: boolean, handler: (arg0: Event) => void): Element {\n    const viewSourceToggleTitle = viewSource ? i18nString(UIStrings.viewParsed) : i18nString(UIStrings.viewSource);\n    return UI.UIUtils.createTextButton(\n        viewSourceToggleTitle, handler, {jslogContext: 'source-parse', className: 'payload-toggle'});\n  }\n\n  private toggleURLDecoding(event: Event): void {\n    this.decodeRequestParameters = !this.decodeRequestParameters;\n    this.refreshQueryString();\n    void this.refreshFormData();\n    event.consume();\n  }\n\n}\n\nconst viewSourceForItems = new WeakSet<Category|UI.TreeOutline.TreeElement>();\n\nexport class Category extends UI.TreeOutline.TreeElement {\n  override toggleOnClick: boolean;\n  private readonly expandedSetting: Common.Settings.Setting<boolean>;\n  override expanded: boolean;\n\n  constructor(root: UI.TreeOutline.TreeOutline, name: string, title?: string) {\n    super(title || '', true);\n    this.toggleOnClick = true;\n    this.hidden = true;\n    this.expandedSetting =\n        Common.Settings.Settings.instance().createSetting('request-info-' + name + '-category-expanded', true);\n    this.expanded = this.expandedSetting.get();\n    this.listItemElement.setAttribute('jslog', `${VisualLogging.section().context(name)}`);\n    root.appendChild(this);\n  }\n\n  createLeaf(): UI.TreeOutline.TreeElement {\n    const leaf = new UI.TreeOutline.TreeElement();\n    this.appendChild(leaf);\n    return leaf;\n  }\n\n  override onexpand(): void {\n    this.expandedSetting.set(true);\n  }\n\n  override oncollapse(): void {\n    this.expandedSetting.set(false);\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.object-properties-section-dimmed {\n  opacity: 60%;\n}\n\n.object-properties-section {\n  padding: 0;\n  color: var(--sys-color-on-surface);\n  display: flex;\n  flex-direction: column;\n  overflow-x: auto;\n}\n\n.object-properties-section li {\n  user-select: text;\n\n  &::before {\n    flex-shrink: 0;\n    margin-right: 2px;\n    margin-top: calc(-1 * var(--sys-size-3));\n  }\n}\n\n.object-properties-section li.editing-sub-part {\n  padding: 3px 12px 8px 6px;\n  margin: -1px -6px -8px;\n  text-overflow: clip;\n}\n\n.object-properties-section li.editing {\n  margin-left: 10px;\n  text-overflow: clip;\n}\n\n.tree-outline ol.title-less-mode {\n  padding-left: 0;\n}\n\n.object-properties-section .own-property {\n  font-weight: bold;\n}\n\n.object-properties-section .synthetic-property {\n  color: var(--sys-color-token-subtle);\n}\n\n.object-properties-section .private-property-hash {\n  color: var(--sys-color-on-surface);\n}\n\n.object-properties-section-root-element {\n  display: flex;\n  flex-direction: row;\n}\n\n.object-properties-section .editable-div {\n  overflow: hidden;\n}\n\n.name-and-value {\n  line-height: 16px;\n  display: flex;\n  white-space: nowrap;\n}\n\n.name-and-value .separator {\n  white-space: pre;\n  flex-shrink: 0;\n}\n\n.editing-sub-part .name-and-value {\n  overflow: visible;\n  display: inline-flex;\n}\n\n.property-prompt {\n  margin-left: 4px;\n}\n\n.tree-outline.hide-selection-when-blurred .selected:focus-visible {\n  background: none;\n}\n\n.tree-outline.hide-selection-when-blurred .selected:focus-visible ::slotted(*),\n.tree-outline.hide-selection-when-blurred .selected:focus-visible .tree-element-title,\n.tree-outline.hide-selection-when-blurred .selected:focus-visible .name-and-value,\n.tree-outline.hide-selection-when-blurred .selected:focus-visible .gray-info-message {\n  background: var(--sys-color-state-focus-highlight);\n  border-radius: 2px;\n}\n\n@media (forced-colors: active) {\n  .object-properties-section-dimmed {\n    opacity: 100%;\n  }\n\n  .tree-outline.hide-selection-when-blurred .selected:focus-visible {\n    background: Highlight;\n  }\n\n  .tree-outline li:hover .tree-element-title,\n  .tree-outline li.selected .tree-element-title {\n    color: ButtonText;\n  }\n\n  .tree-outline.hide-selection-when-blurred .selected:focus-visible .tree-element-title,\n  .tree-outline.hide-selection-when-blurred .selected:focus-visible .name-and-value {\n    background: transparent;\n    box-shadow: none;\n  }\n\n  .tree-outline.hide-selection-when-blurred .selected:focus-visible span,\n  .tree-outline.hide-selection-when-blurred .selected:focus-visible .gray-info-message {\n    color: HighlightText;\n  }\n\n  .tree-outline-disclosure:hover li.parent::before {\n    background-color: ButtonText;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./objectPropertiesSection.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.value.object-value-node:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.object-value-function-prefix,\n.object-value-boolean {\n  color: var(--sys-color-token-attribute-value);\n}\n\n.object-value-function {\n  font-style: italic;\n}\n\n.object-value-function.linkified:hover {\n  --override-linkified-hover-background: rgb(0 0 0 / 10%);\n\n  background-color: var(--override-linkified-hover-background);\n  cursor: pointer;\n}\n\n.theme-with-dark-background .object-value-function.linkified:hover,\n:host-context(.theme-with-dark-background) .object-value-function.linkified:hover {\n  --override-linkified-hover-background: rgb(230 230 230 / 10%);\n}\n\n.object-value-number {\n  color: var(--sys-color-token-attribute-value);\n}\n\n.object-value-bigint {\n  color: var(--sys-color-token-comment);\n}\n\n.object-value-string,\n.object-value-regexp,\n.object-value-symbol {\n  white-space: pre;\n  unicode-bidi: -webkit-isolate;\n  color: var(--sys-color-token-property-special);\n}\n\n.object-value-node {\n  position: relative;\n  vertical-align: baseline;\n  color: var(--sys-color-token-variable);\n  white-space: nowrap;\n}\n\n.object-value-null,\n.object-value-undefined {\n  color: var(--sys-color-state-disabled);\n}\n\n.object-value-unavailable {\n  color: var(--sys-color-token-tag);\n}\n\n.object-value-calculate-value-button:hover {\n  text-decoration: underline;\n}\n\n.object-properties-section-custom-section {\n  display: inline-flex;\n  flex-direction: column;\n}\n\n.theme-with-dark-background .object-value-number,\n:host-context(.theme-with-dark-background) .object-value-number,\n.theme-with-dark-background .object-value-boolean,\n:host-context(.theme-with-dark-background) .object-value-boolean {\n  --override-primitive-dark-mode-color: hsl(252deg 100% 75%);\n\n  color: var(--override-primitive-dark-mode-color);\n}\n\n.object-properties-section .object-description {\n  color: var(--sys-color-token-subtle);\n}\n\n.value .object-properties-preview {\n  white-space: nowrap;\n}\n\n.name {\n  color: var(--sys-color-token-tag);\n  flex-shrink: 0;\n}\n\n.object-properties-preview .name {\n  color: var(--sys-color-token-subtle);\n}\n\n@media (forced-colors: active) {\n  .object-value-calculate-value-button:hover {\n    forced-color-adjust: none;\n    color: Highlight;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./objectValue.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.tree-outline {\n  padding-left: 0;\n}\n\n.tree-outline > ol {\n  padding-bottom: 5px;\n  border-bottom: solid 1px var(--sys-color-divider);\n}\n\n.tree-outline > .parent {\n  user-select: none;\n  font-weight: bold;\n  color: var(--sys-color-on-surface);\n  margin-top: -1px;\n  display: flex;\n  align-items: center;\n  height: var(--sys-size-13);\n}\n\n.tree-outline li {\n  padding-left: 5px;\n  line-height: 20px;\n}\n\n.tree-outline li:not(.parent) {\n  margin-left: 10px;\n  display: block;\n\n  &:has(.payload-name) {\n    margin: var(--sys-size-3) 0;\n    display: grid;\n    grid-template-columns: min-content 1fr;\n    gap: var(--sys-size-6);\n  }\n}\n\n.tree-outline li:not(.parent)::before {\n  display: none;\n}\n\n.tree-outline li.expanded .payload-count {\n  display: none;\n}\n\n.tree-outline li .payload-toggle {\n  display: none;\n}\n\n.tree-outline li.expanded .payload-toggle {\n  display: inline;\n  margin-left: 30px;\n  font-weight: normal;\n}\n\n.tree-outline li.expanded .payload-toggle:focus-visible {\n  border: 2px solid var(--sys-color-state-focus-ring);\n  border-radius: 5px;\n}\n\n.tree-outline li .header-toggle:hover {\n  color: var(--sys-color-token-subtle);\n}\n\n.tree-outline .payload-name {\n  color: var(--sys-color-on-surface-subtle);\n  font: var(--sys-typescale-body5-medium);\n  white-space: pre-wrap;\n  align-self: start;\n  min-width: 150px;\n  line-height: 18px;\n}\n\n.tree-outline .payload-value {\n  display: inline;\n  white-space: pre-wrap;\n  word-break: break-all;\n  font: var(--sys-typescale-body4-regular);\n  line-height: 18px;\n}\n\n.tree-outline .empty-request-payload {\n  color: var(--sys-color-state-disabled);\n}\n\n.request-payload-show-more-button {\n  margin: 0 4px;\n}\n\n@media (forced-colors: active) {\n  :host-context(.request-payload-tree) ol.tree-outline:not(.hide-selection-when-blurred) li.selected:focus {\n    background: Highlight;\n  }\n\n  :host-context(.request-payload-tree) ol.tree-outline:not(.hide-selection-when-blurred) li::before {\n    background-color: ButtonText;\n  }\n\n  :host-context(.request-payload-tree) ol.tree-outline:not(.hide-selection-when-blurred) li.selected.parent::before {\n    background-color: HighlightText;\n  }\n\n  :host-context(.request-payload-tree) ol.tree-outline:not(.hide-selection-when-blurred) li.selected *,\n  :host-context(.request-payload-tree) ol.tree-outline:not(.hide-selection-when-blurred) li.selected.parent,\n  :host-context(.request-payload-tree) ol.tree-outline:not(.hide-selection-when-blurred) li.selected.parent span {\n    color: HighlightText;\n  }\n}\n\n.payload-decode-error {\n  color: var(--sys-color-error);\n}\n\n/*# sourceURL=${import.meta.resolve('./requestPayloadTree.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2014 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.request-payload-view {\n  user-select: text;\n  overflow: auto;\n}\n\n.request-payload-tree {\n  flex-grow: 1;\n  overflow-y: auto;\n  margin: 0;\n}\n\n/*# sourceURL=${import.meta.resolve('./requestPayloadView.css')} */`;", "/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as NetworkComponents from './components/components.js';\nimport {RequestHTMLView} from './RequestHTMLView.js';\nimport {SignedExchangeInfoView} from './SignedExchangeInfoView.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Request Preview View of the Network panel\n   */\n  failedToLoadResponseData: 'Failed to load response data',\n  /**\n   * @description Text in Request Preview View of the Network panel\n   */\n  previewNotAvailable: 'Preview not available',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestPreviewView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class RequestPreviewView extends UI.Widget.VBox {\n  request: SDK.NetworkRequest.NetworkRequest;\n  private contentViewPromise: Promise<UI.Widget.Widget>|null;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super({jslog: `${VisualLogging.pane('preview').track({resize: true})}`});\n    this.element.classList.add('request-view');\n    this.request = request;\n    this.contentViewPromise = null;\n  }\n\n  async showPreview(): Promise<UI.Widget.Widget> {\n    const view = await this.createPreview();\n    view.show(this.element);\n    await view.updateComplete;\n    if (!(view instanceof UI.View.SimpleView)) {\n      return view;\n    }\n    const toolbar = this.element.createChild('devtools-toolbar', 'network-item-preview-toolbar');\n    void view.toolbarItems().then(items => {\n      items.map(item => toolbar.appendToolbarItem(item));\n    });\n    return view;\n  }\n\n  override wasShown(): void {\n    void this.doShowPreview();\n  }\n\n  private doShowPreview(): Promise<UI.Widget.Widget> {\n    if (!this.contentViewPromise) {\n      this.contentViewPromise = this.showPreview();\n    }\n    return this.contentViewPromise;\n  }\n\n  private async htmlPreview(): Promise<UI.Widget.Widget|null> {\n    const contentData = await this.request.requestContentData();\n    if (TextUtils.ContentData.ContentData.isError(contentData)) {\n      return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.failedToLoadResponseData), contentData.error);\n    }\n\n    const allowlist = new Set<string>(['text/html', 'text/plain', 'application/xhtml+xml']);\n    if (!allowlist.has(this.request.mimeType)) {\n      return null;\n    }\n\n    // http://crbug.com/767393 - DevTools should recognize JSON regardless of the content type\n    const jsonView = await SourceFrame.JSONView.JSONView.createView(contentData.text);\n    if (jsonView) {\n      return jsonView;\n    }\n\n    return RequestHTMLView.create(contentData);\n  }\n\n  async createPreview(): Promise<UI.Widget.Widget> {\n    if (this.request.signedExchangeInfo()) {\n      return new SignedExchangeInfoView(this.request);\n    }\n\n    if (this.request.webBundleInfo()) {\n      return LegacyWrapper.LegacyWrapper.legacyWrapper(\n          UI.Widget.VBox, new NetworkComponents.WebBundleInfoView.WebBundleInfoView(this.request));\n    }\n\n    const htmlErrorPreview = await this.htmlPreview();\n    if (htmlErrorPreview) {\n      return htmlErrorPreview;\n    }\n\n    const provided = await SourceFrame.PreviewFactory.PreviewFactory.createPreview(this.request, this.request.mimeType);\n    if (provided) {\n      return provided;\n    }\n\n    return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.previewNotAvailable), '');\n  }\n}\n", "/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {html, nothing, render} from '../../ui/lit/lit.js';\n\nimport requestHTMLViewStyles from './requestHTMLView.css.js';\n\ninterface ViewInput {\n  dataURL: string|null;\n}\n\ntype View = (input: ViewInput, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  // Forbid to run JavaScript and set unique origin.\n  // clang-format off\n  render(html`\n    <style>${requestHTMLViewStyles}</style>\n    <div class=\"html request-view widget vbox\">\n      ${input.dataURL ? html`\n        <!-- @ts-ignore -->\n        <iframe class=\"html-preview-frame\" sandbox\n          csp=\"default-src 'none';img-src data:;style-src 'unsafe-inline'\" src=${input.dataURL}\n          tabindex=\"-1\" role=\"presentation\"></iframe>` : nothing}\n    </div>`,\n    target);\n  // clang-format on\n};\n\nexport class RequestHTMLView extends UI.Widget.VBox {\n  readonly #dataURL: string;\n  readonly #view: View;\n  private constructor(dataURL: string, view = DEFAULT_VIEW) {\n    super({useShadowDom: true});\n\n    this.#dataURL = dataURL;\n    this.#view = view;\n  }\n\n  static create(contentData: TextUtils.ContentData.ContentData): RequestHTMLView|null {\n    const dataURL = contentData.asDataUrl();\n    return dataURL ? new RequestHTMLView(dataURL) : null;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.requestUpdate();\n  }\n\n  override willHide(): void {\n    this.requestUpdate();\n  }\n\n  override performUpdate(): void {\n    this.#view({dataURL: this.#dataURL}, {}, this.contentElement);\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2018 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n@scope to (devtools-widget > *) {\n  .html-preview-frame {\n    box-shadow: var(--drop-shadow);\n    /* We always want a white background, even in dark mode */\n    background: var(--ref-palette-neutral100);\n    color-scheme: light;\n    flex-grow: 1;\n    margin: 20px;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./requestHTMLView.css')} */`;", "// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport signedExchangeInfoTreeStyles from './signedExchangeInfoTree.css.js';\nimport signedExchangeInfoViewStyles from './signedExchangeInfoView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text for errors\n   */\n  errors: 'Errors',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  signedHttpExchange: 'Signed HTTP exchange',\n  /**\n   * @description Text for an option to learn more about something\n   */\n  learnmore: 'Learn more',\n  /**\n   * @description Text in Request Headers View of the Network panel\n   */\n  requestUrl: 'Request URL',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  responseCode: 'Response code',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  headerIntegrityHash: 'Header integrity hash',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  responseHeaders: 'Response headers',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  signature: 'Signature',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  label: 'Label',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  certificateUrl: 'Certificate URL',\n  /**\n   * @description Text to view a security certificate\n   */\n  viewCertificate: 'View certificate',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  integrity: 'Integrity',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  certificateSha: 'Certificate SHA256',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  validityUrl: 'Validity URL',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  date: 'Date',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  expires: 'Expires',\n  /**\n   * @description Text for a security certificate\n   */\n  certificate: 'Certificate',\n  /**\n   * @description Text that refers to the subject of a security certificate\n   */\n  subject: 'Subject',\n  /**\n   * @description Text to show since when an item is valid\n   */\n  validFrom: 'Valid from',\n  /**\n   * @description Text to indicate the expiry date\n   */\n  validUntil: 'Valid until',\n  /**\n   * @description Text for the issuer of an item\n   */\n  issuer: 'Issuer',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/SignedExchangeInfoView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class SignedExchangeInfoView extends UI.Widget.VBox {\n  private readonly responseHeadersItem?: UI.TreeOutline.TreeElement;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n    this.registerRequiredCSS(signedExchangeInfoViewStyles);\n    console.assert(request.signedExchangeInfo() !== null);\n    const signedExchangeInfo = (request.signedExchangeInfo() as Protocol.Network.SignedExchangeInfo);\n\n    this.element.classList.add('signed-exchange-info-view');\n\n    const root = new UI.TreeOutline.TreeOutlineInShadow();\n    root.registerRequiredCSS(signedExchangeInfoTreeStyles);\n    root.element.classList.add('signed-exchange-info-tree');\n    root.setFocusable(false);\n    root.setDense(true);\n    root.expandTreeElementsWhenArrowing = true;\n    this.element.appendChild(root.element);\n\n    const errorFieldSetMap = new Map<number|undefined, Set<string>>();\n\n    if (signedExchangeInfo.errors?.length) {\n      const errorMessagesCategory = new Category(root, i18nString(UIStrings.errors));\n      for (const error of signedExchangeInfo.errors) {\n        const fragment = document.createDocumentFragment();\n        const icon = new IconButton.Icon.Icon();\n        icon.name = 'cross-circle-filled';\n        icon.classList.add('prompt-icon', 'small');\n        fragment.appendChild(icon);\n        fragment.createChild('div', 'error-log').textContent = error.message;\n        errorMessagesCategory.createLeaf(fragment);\n        if (error.errorField) {\n          let errorFieldSet = errorFieldSetMap.get(error.signatureIndex);\n          if (!errorFieldSet) {\n            errorFieldSet = new Set();\n            errorFieldSetMap.set(error.signatureIndex, errorFieldSet);\n          }\n          errorFieldSet.add(error.errorField);\n        }\n      }\n    }\n\n    const titleElement = document.createDocumentFragment();\n    titleElement.createChild('div', 'header-name').textContent = i18nString(UIStrings.signedHttpExchange);\n    const learnMoreNode = UI.XLink.XLink.create(\n        'https://github.com/WICG/webpackage', i18nString(UIStrings.learnmore), 'header-toggle', undefined,\n        'learn-more');\n    titleElement.appendChild(learnMoreNode);\n    const headerCategory = new Category(root, titleElement);\n    if (signedExchangeInfo.header) {\n      const header = signedExchangeInfo.header;\n      const redirectDestination = request.redirectDestination();\n      const requestURLElement = this.formatHeader(i18nString(UIStrings.requestUrl), header.requestUrl);\n      if (redirectDestination) {\n        const viewRequestLink = Components.Linkifier.Linkifier.linkifyRevealable(\n            redirectDestination, 'View request', undefined, undefined, undefined, 'redirect-destination-request');\n        viewRequestLink.classList.add('header-toggle');\n        requestURLElement.appendChild(viewRequestLink);\n      }\n      headerCategory.createLeaf(requestURLElement);\n      headerCategory.createLeaf(this.formatHeader(i18nString(UIStrings.responseCode), String(header.responseCode)));\n      headerCategory.createLeaf(this.formatHeader(i18nString(UIStrings.headerIntegrityHash), header.headerIntegrity));\n\n      this.responseHeadersItem =\n          headerCategory.createLeaf(this.formatHeader(i18nString(UIStrings.responseHeaders), ''));\n      const responseHeaders = header.responseHeaders;\n      for (const name in responseHeaders) {\n        const headerTreeElement = new UI.TreeOutline.TreeElement(this.formatHeader(name, responseHeaders[name]));\n        headerTreeElement.selectable = false;\n        this.responseHeadersItem.appendChild(headerTreeElement);\n      }\n      this.responseHeadersItem.expand();\n\n      for (let i = 0; i < header.signatures.length; ++i) {\n        const errorFieldSet = errorFieldSetMap.get(i) || new Set();\n        const signature = header.signatures[i];\n        const signatureCategory = new Category(root, i18nString(UIStrings.signature));\n        signatureCategory.createLeaf(this.formatHeader(i18nString(UIStrings.label), signature.label));\n        signatureCategory.createLeaf(this.formatHeaderForHexData(\n            i18nString(UIStrings.signature), signature.signature,\n            errorFieldSet.has(Protocol.Network.SignedExchangeErrorField.SignatureSig)));\n\n        if (signature.certUrl) {\n          const certURLElement = this.formatHeader(\n              i18nString(UIStrings.certificateUrl), signature.certUrl,\n              errorFieldSet.has(Protocol.Network.SignedExchangeErrorField.SignatureCertUrl));\n          if (signature.certificates) {\n            const viewCertLink = certURLElement.createChild('span', 'devtools-link header-toggle');\n            viewCertLink.textContent = i18nString(UIStrings.viewCertificate);\n            viewCertLink.addEventListener(\n                'click',\n                Host.InspectorFrontendHost.InspectorFrontendHostInstance.showCertificateViewer.bind(\n                    null, signature.certificates),\n                false);\n          }\n          signatureCategory.createLeaf(certURLElement);\n        }\n        signatureCategory.createLeaf(this.formatHeader(\n            i18nString(UIStrings.integrity), signature.integrity,\n            errorFieldSet.has(Protocol.Network.SignedExchangeErrorField.SignatureIntegrity)));\n        if (signature.certSha256) {\n          signatureCategory.createLeaf(this.formatHeaderForHexData(\n              i18nString(UIStrings.certificateSha), signature.certSha256,\n              errorFieldSet.has(Protocol.Network.SignedExchangeErrorField.SignatureCertSha256)));\n        }\n        signatureCategory.createLeaf(this.formatHeader(\n            i18nString(UIStrings.validityUrl), signature.validityUrl,\n            errorFieldSet.has(Protocol.Network.SignedExchangeErrorField.SignatureValidityUrl)));\n        signatureCategory.createLeaf().title = this.formatHeader(\n            i18nString(UIStrings.date), new Date(1000 * signature.date).toUTCString(),\n            errorFieldSet.has(Protocol.Network.SignedExchangeErrorField.SignatureTimestamps));\n        signatureCategory.createLeaf().title = this.formatHeader(\n            i18nString(UIStrings.expires), new Date(1000 * signature.expires).toUTCString(),\n            errorFieldSet.has(Protocol.Network.SignedExchangeErrorField.SignatureTimestamps));\n      }\n    }\n    if (signedExchangeInfo.securityDetails) {\n      const securityDetails = signedExchangeInfo.securityDetails;\n      const securityCategory = new Category(root, i18nString(UIStrings.certificate));\n      securityCategory.createLeaf(this.formatHeader(i18nString(UIStrings.subject), securityDetails.subjectName));\n      securityCategory.createLeaf(\n          this.formatHeader(i18nString(UIStrings.validFrom), new Date(1000 * securityDetails.validFrom).toUTCString()));\n      securityCategory.createLeaf(\n          this.formatHeader(i18nString(UIStrings.validUntil), new Date(1000 * securityDetails.validTo).toUTCString()));\n      securityCategory.createLeaf(this.formatHeader(i18nString(UIStrings.issuer), securityDetails.issuer));\n    }\n  }\n\n  private formatHeader(name: string, value: string, highlighted?: boolean): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    const nameElement = fragment.createChild('div', 'header-name');\n    nameElement.textContent = name + ': ';\n    fragment.createChild('span', 'header-separator');\n    const valueElement = fragment.createChild('div', 'header-value source-code');\n    valueElement.textContent = value;\n    if (highlighted) {\n      nameElement.classList.add('error-field');\n      valueElement.classList.add('error-field');\n    }\n    return fragment;\n  }\n\n  private formatHeaderForHexData(name: string, value: string, highlighted?: boolean): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    const nameElement = fragment.createChild('div', 'header-name');\n    nameElement.textContent = name + ': ';\n    fragment.createChild('span', 'header-separator');\n    const valueElement = fragment.createChild('div', 'header-value source-code hex-data');\n    valueElement.textContent = value.replace(/(.{2})/g, '$1 ');\n    if (highlighted) {\n      nameElement.classList.add('error-field');\n      valueElement.classList.add('error-field');\n    }\n    return fragment;\n  }\n}\n\nexport class Category extends UI.TreeOutline.TreeElement {\n  override toggleOnClick: boolean;\n  override expanded: boolean;\n\n  constructor(root: UI.TreeOutline.TreeOutline, title?: string|Node) {\n    super(title, true);\n    this.selectable = false;\n    this.toggleOnClick = true;\n    this.expanded = true;\n    root.appendChild(this);\n  }\n\n  createLeaf(title?: string|Node): UI.TreeOutline.TreeElement {\n    const leaf = new UI.TreeOutline.TreeElement(title);\n    leaf.selectable = false;\n    this.appendChild(leaf);\n    return leaf;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2018 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.tree-outline {\n  padding-left: 0;\n}\n\n.tree-outline > ol {\n  padding-bottom: 5px;\n  border-bottom: solid 1px var(--sys-color-divider);\n}\n\n.tree-outline > .parent {\n  user-select: none;\n  font-weight: bold;\n  color: var(--sys-color-on-surface);\n  margin-top: -1px;\n  display: flex;\n  align-items: center;\n  height: 26px;\n}\n\n.tree-outline li {\n  padding-left: 5px;\n  line-height: 20px;\n}\n\n.tree-outline li:not(.parent) {\n  display: block;\n  margin-left: 10px;\n}\n\n.tree-outline li:not(.parent)::before {\n  display: none;\n}\n\n.tree-outline .header-name {\n  color: var(--sys-color-token-subtle);\n  display: inline-block;\n  margin-right: 0.25em;\n  font-weight: bold;\n  vertical-align: top;\n  white-space: pre-wrap;\n}\n\n.tree-outline .header-separator {\n  user-select: none;\n}\n\n.tree-outline .header-value {\n  display: inline;\n  margin-right: 1em;\n  white-space: pre-wrap;\n  word-break: break-all;\n  margin-top: 1px;\n}\n\n.tree-outline .header-toggle {\n  display: inline;\n  margin-left: 30px;\n  font-weight: normal;\n  color: var(--sys-color-state-disabled);\n}\n\n.tree-outline .header-toggle:hover {\n  color: var(--sys-color-state-hover-on-subtle);\n}\n\n.tree-outline .error-log {\n  color: var(--sys-color-error);\n  display: inline-block;\n  margin-right: 0.25em;\n  margin-left: 0.25em;\n  font-weight: bold;\n  vertical-align: top;\n  white-space: pre-wrap;\n}\n\n.tree-outline .hex-data {\n  display: block;\n  word-break: normal;\n  overflow-wrap: anywhere;\n  margin-left: 20px;\n}\n\n.tree-outline .error-field {\n  color: var(--sys-color-error);\n}\n\n.prompt-icon {\n  margin-top: 2px;\n}\n\n/*# sourceURL=${import.meta.resolve('./signedExchangeInfoTree.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2018 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.signed-exchange-info-view {\n  user-select: text;\n  overflow: auto;\n}\n\n.signed-exchange-info-tree {\n  flex-grow: 1;\n  overflow-y: auto;\n  margin: 0;\n}\n\n/*# sourceURL=${import.meta.resolve('./signedExchangeInfoView.css')} */`;", "/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Lit from '../../third_party/lit/lit.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {BinaryResourceView} from './BinaryResourceView.js';\n\nconst {html, render} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text in Request Response View of the Network panel if no preview can be shown\n   */\n  noPreview: 'Nothing to preview',\n  /**\n   * @description Text in Request Response View of the Network panel\n   */\n  thisRequestHasNoResponseData: 'This request has no response data available',\n  /**\n   * @description Text in Request Preview View of the Network panel\n   */\n  failedToLoadResponseData: 'Failed to load response data',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestResponseView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface ViewInput {\n  request: SDK.NetworkRequest.NetworkRequest;\n  contentData: TextUtils.StreamingContentData.StreamingContentDataOrError;\n  mimeType: string;\n  renderAsText: boolean;\n}\n\nexport interface ViewOutput {\n  revealPosition: (position: SourceFrame.SourceFrame.RevealPosition) => Promise<void>;\n}\n\nconst widgetConfig = UI.Widget.widgetConfig;\nconst widgetRef = UI.Widget.widgetRef;\ntype View = (input: ViewInput, output: ViewOutput, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input: ViewInput, output: ViewOutput, target: HTMLElement): void => {\n  let widget;\n  if (TextUtils.StreamingContentData.isError(input.contentData)) {\n    // clang-format off\n    widget = html`<devtools-widget\n                    .widgetConfig=${widgetConfig(element => new UI.EmptyWidget.EmptyWidget(\n                      i18nString(UIStrings.failedToLoadResponseData), (input.contentData as {error: string}).error,\n                      element))}></devtools-widget>`;\n    // clang-format on\n  } else if (input.request.statusCode === 204) {\n    // clang-format off\n    widget = html`<devtools-widget\n                     .widgetConfig=${widgetConfig(element => new UI.EmptyWidget.EmptyWidget(\n                        i18nString(UIStrings.noPreview), i18nString(UIStrings.thisRequestHasNoResponseData),\n                        element))}></devtools-widget>`;\n    // clang-format on\n  } else if (input.renderAsText) {\n    // clang-format off\n    widget = html`<devtools-widget\n                    .widgetConfig=${widgetConfig(element => new SourceFrame.ResourceSourceFrame.SearchableContainer(\n                        input.request, input.mimeType, element))}\n                    ${widgetRef(SourceFrame.ResourceSourceFrame.SearchableContainer, widget => {output.revealPosition = widget.revealPosition.bind(widget);})}></devtools-widget>`;\n    // clang-format on\n  } else {\n    // clang-format off\n    widget = html`<devtools-widget\n                    .widgetConfig=${widgetConfig(element => new BinaryResourceView(\n                      input.contentData as TextUtils.StreamingContentData.StreamingContentData, input.request.url(),\n                      input.request.resourceType(), element))}></devtools-widget>`;\n    // clang-format on\n  }\n\n  render(widget, target);\n};\n\nexport class RequestResponseView extends UI.Widget.VBox {\n  request: SDK.NetworkRequest.NetworkRequest;\n  #view: View;\n  #revealPosition?: (position: SourceFrame.SourceFrame.RevealPosition) => Promise<void>;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest, view = DEFAULT_VIEW) {\n    super();\n    this.request = request;\n    this.#view = view;\n  }\n\n  override wasShown(): void {\n    this.requestUpdate();\n  }\n\n  override async performUpdate(): Promise<void> {\n    const contentData = await this.request.requestStreamingContent();\n    let renderAsText = false;\n\n    const mimeType = this.getMimeTypeForDisplay();\n    if (!TextUtils.StreamingContentData.isError(contentData)) {\n      const isWasm = contentData.mimeType === 'application/wasm';\n      renderAsText = contentData.isTextContent || isWasm;\n\n      const isMinified =\n          isWasm || !contentData.isTextContent ? false : TextUtils.TextUtils.isMinified(contentData.content().text);\n      const mediaType = Common.ResourceType.ResourceType.mediaTypeForMetrics(\n          mimeType, this.request.resourceType().isFromSourceMap(), isMinified, false, false);\n      Host.userMetrics.networkPanelResponsePreviewOpened(mediaType);\n    }\n\n    const viewInput = {request: this.request, contentData, mimeType, renderAsText};\n    const that = this;\n    const viewOutput = {\n      set revealPosition(reveal: (position: SourceFrame.SourceFrame.RevealPosition) => Promise<void>) {\n        that.#revealPosition = reveal;\n      },\n    };\n\n    this.#view(viewInput, viewOutput, this.contentElement);\n  }\n\n  getMimeTypeForDisplay(): string {\n    // If the main document is of type JSON (or any JSON subtype), do not use the more generic canonical MIME type,\n    // which would prevent the JSON from being pretty-printed. See https://crbug.com/406900\n    if (Common.ResourceType.ResourceType.simplifyContentType(this.request.mimeType) === 'application/json') {\n      return this.request.mimeType;\n    }\n    return this.request.resourceType().canonicalMimeType() || this.request.mimeType;\n  }\n\n  async revealPosition(position: SourceFrame.SourceFrame.RevealPosition): Promise<void> {\n    this.requestUpdate();\n    await this.updateComplete;\n    await this.#revealPosition?.(position);\n  }\n}\n", "/*\n * Copyright (C) 2010 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {Events, type NetworkTimeCalculator} from './NetworkTimeCalculator.js';\nimport networkingTimingTableStyles from './networkTimingTable.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text used to label the time taken to receive an HTTP/2 Push message.\n   */\n  receivingPush: 'Receiving `Push`',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  queueing: 'Queueing',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  stalled: 'Stalled',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  initialConnection: 'Initial connection',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  dnsLookup: 'DNS Lookup',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  proxyNegotiation: 'Proxy negotiation',\n  /**\n   * @description Text used to label the time taken to read an HTTP/2 Push message.\n   */\n  readingPush: 'Reading `Push`',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  contentDownload: 'Content Download',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  requestSent: 'Request sent',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  requestToServiceworker: 'Request to `ServiceWorker`',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  startup: 'Startup',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  respondwith: 'respondWith',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  ssl: 'SSL',\n  /**\n   * @description Text for sum\n   */\n  total: 'Total',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  waitingTtfb: 'Waiting for server response',\n  /**\n   * @description Text in Signed Exchange Info View of the Network panel\n   */\n  label: 'Label',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  routerEvaluation: 'Router Evaluation',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  routerCacheLookup: 'Cache Lookup',\n  /**\n   * @description Inner element text content in Network Log View Columns of the Network panel\n   */\n  waterfall: 'Waterfall',\n  /**\n   * @description Text for the duration of something\n   */\n  duration: 'Duration',\n  /**\n   * @description Text of a DOM element in Request Timing View of the Network panel\n   * @example {120.39ms} PH1\n   */\n  queuedAtS: 'Queued at {PH1}',\n  /**\n   * @description Text of a DOM element in Request Timing View of the Network panel\n   * @example {120.39ms} PH1\n   */\n  startedAtS: 'Started at {PH1}',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  serverPush: 'Server Push',\n  /**\n   * @description Text of a DOM element in Request Timing View of the Network panel\n   */\n  resourceScheduling: 'Resource Scheduling',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  connectionStart: 'Connection Start',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  requestresponse: 'Request/Response',\n  /**\n   * @description Text of a DOM element in Request Timing View of the Network panel\n   */\n  cautionRequestIsNotFinishedYet: 'CAUTION: request is not finished yet!',\n  /**\n   * @description Text in Request Timing View of the Network panel\n   */\n  explanation: 'Explanation',\n  /**\n   * @description Text of a DOM element in Request Timing View of the Network panel\n   */\n  serverTiming: 'Server Timing',\n  /**\n   * @description Text of a DOM element in Request Timing View of the Network panel\n   */\n  time: 'TIME',\n  /**\n   * @description Label for the Server Timing API\n   */\n  theServerTimingApi: 'the Server Timing API',\n  /**\n   * @description Text to inform about the ServerTiming API, which can be used to report timing information to DevTools about the substeps that the server performed to answer the requests. Timing information is, e.g., the duration of the substep.\n   * @example {https://web.dev/custom-metrics/#server-timing-api} PH1\n   */\n  duringDevelopmentYouCanUseSToAdd:\n      'During development, you can use {PH1} to add insights into the server-side timing of this request.',\n  /**\n   * @description Header for last column of network timing tab.\n   */\n  durationC: 'DURATION',\n  /**\n   * @description Description for treeitem in ServiceWorker Fetch Details\n   */\n  originalRequest: 'Original Request',\n  /**\n   * @description Description for treeitem in ServiceWorker Fetch Details\n   */\n  responseReceived: 'Response Received',\n  /**\n   * @description Text for an unspecified service worker response source\n   */\n  unknown: 'Unknown',\n  /**\n   * @description Displays how a particular response was fetched\n   * @example {Network fetch} PH1\n   */\n  sourceOfResponseS: 'Source of response: {PH1}',\n  /**\n   * @description Name of storage cache from which a response was fetched\n   * @example {v1} PH1\n   */\n  cacheStorageCacheNameS: 'Cache storage cache name: {PH1}',\n  /**\n   * @description Text for unknown cache storage name\n   */\n  cacheStorageCacheNameUnknown: 'Cache storage cache name: Unknown',\n  /**\n   * @description Time at which a response was retrieved\n   * @example {Fri Apr 10 2020 17:20:27 GMT-0700 (Pacific Daylight Time)} PH1\n   */\n  retrievalTimeS: 'Retrieval Time: {PH1}',\n  /**\n   * @description Text used to show that serviceworker fetch response source is ServiceWorker Cache Storage\n   */\n  serviceworkerCacheStorage: '`ServiceWorker` cache storage',\n  /**\n   * @description Text used to show that serviceworker fetch response source is HTTP cache\n   */\n  fromHttpCache: 'From HTTP cache',\n  /**\n   * @description Text used to show that data was retrieved via a Network fetch\n   */\n  networkFetch: 'Network fetch',\n  /**\n   * @description Text used to show that data was retrieved using ServiceWorker fallback code\n   */\n  fallbackCode: 'Fallback code',\n  /**\n   * @description Name of the specified source for SW static routing API.\n   * @example {network} PH1\n   */\n  routerMatchedSource: 'Matched source: {PH1}',\n  /**\n   * @description Name of the actually used source for SW static routing API.\n   * @example {network} PH1\n   */\n  routerActualSource: 'Actual source: {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestTimingView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class RequestTimingView extends UI.Widget.VBox {\n  private request: SDK.NetworkRequest.NetworkRequest;\n  private calculator: NetworkTimeCalculator;\n  private lastMinimumBoundary: number;\n  private tableElement?: Element;\n  constructor(request: SDK.NetworkRequest.NetworkRequest, calculator: NetworkTimeCalculator) {\n    super();\n    this.registerRequiredCSS(networkingTimingTableStyles);\n    this.element.classList.add('resource-timing-view');\n\n    this.request = request;\n    this.calculator = calculator;\n    this.lastMinimumBoundary = -1;\n  }\n\n  private static timeRangeTitle(name: RequestTimeRangeNames): string {\n    switch (name) {\n      case RequestTimeRangeNames.PUSH:\n        return i18nString(UIStrings.receivingPush);\n      case RequestTimeRangeNames.QUEUEING:\n        return i18nString(UIStrings.queueing);\n      case RequestTimeRangeNames.BLOCKING:\n        return i18nString(UIStrings.stalled);\n      case RequestTimeRangeNames.CONNECTING:\n        return i18nString(UIStrings.initialConnection);\n      case RequestTimeRangeNames.DNS:\n        return i18nString(UIStrings.dnsLookup);\n      case RequestTimeRangeNames.PROXY:\n        return i18nString(UIStrings.proxyNegotiation);\n      case RequestTimeRangeNames.RECEIVING_PUSH:\n        return i18nString(UIStrings.readingPush);\n      case RequestTimeRangeNames.RECEIVING:\n        return i18nString(UIStrings.contentDownload);\n      case RequestTimeRangeNames.SENDING:\n        return i18nString(UIStrings.requestSent);\n      case RequestTimeRangeNames.SERVICE_WORKER:\n        return i18nString(UIStrings.requestToServiceworker);\n      case RequestTimeRangeNames.SERVICE_WORKER_PREPARATION:\n        return i18nString(UIStrings.startup);\n      case RequestTimeRangeNames.SERVICE_WORKER_ROUTER_EVALUATION:\n        return i18nString(UIStrings.routerEvaluation);\n      case RequestTimeRangeNames.SERVICE_WORKER_CACHE_LOOKUP:\n        return i18nString(UIStrings.routerCacheLookup);\n      case RequestTimeRangeNames.SERVICE_WORKER_RESPOND_WITH:\n        return i18nString(UIStrings.respondwith);\n      case RequestTimeRangeNames.SSL:\n        return i18nString(UIStrings.ssl);\n      case RequestTimeRangeNames.TOTAL:\n        return i18nString(UIStrings.total);\n      case RequestTimeRangeNames.WAITING:\n        return i18nString(UIStrings.waitingTtfb);\n      default:\n        return name;\n    }\n  }\n\n  static calculateRequestTimeRanges(request: SDK.NetworkRequest.NetworkRequest, navigationStart: number):\n      RequestTimeRange[] {\n    const result: RequestTimeRange[] = [];\n    function addRange(name: RequestTimeRangeNames, start: number, end: number): void {\n      if (start < Number.MAX_VALUE && start <= end) {\n        result.push({name, start, end});\n      }\n    }\n\n    function firstPositive(numbers: number[]): number|undefined {\n      for (let i = 0; i < numbers.length; ++i) {\n        if (numbers[i] > 0) {\n          return numbers[i];\n        }\n      }\n      return undefined;\n    }\n\n    function addOffsetRange(name: RequestTimeRangeNames, start: number, end: number): void {\n      if (start >= 0 && end >= 0) {\n        addRange(name, startTime + (start / 1000), startTime + (end / 1000));\n      }\n    }\n\n    // In some situations, argument `start` may come before `startTime` (`timing.requestStart`). This is especially true\n    // in cases such as SW static routing API where fields like `workerRouterEvaluationStart` or `workerCacheLookupStart`\n    // is set before setting `timing.requestStart`. If the `start` and `end` is known to be a valid value (i.e. not default\n    // invalid value -1 or undefined), we allow adding the range.\n    function addMaybeNegativeOffsetRange(name: RequestTimeRangeNames, start: number, end: number): void {\n      addRange(name, startTime + (start / 1000), startTime + (end / 1000));\n    }\n\n    const timing = request.timing;\n    if (!timing) {\n      const start = request.issueTime() !== -1 ? request.issueTime() : request.startTime !== -1 ? request.startTime : 0;\n      const hasDifferentIssueAndStartTime =\n          request.issueTime() !== -1 && request.startTime !== -1 && request.issueTime() !== request.startTime;\n      const middle = (request.responseReceivedTime === -1) ?\n          (hasDifferentIssueAndStartTime ? request.startTime : Number.MAX_VALUE) :\n          request.responseReceivedTime;\n      const end = (request.endTime === -1) ? Number.MAX_VALUE : request.endTime;\n      addRange(RequestTimeRangeNames.TOTAL, start, end);\n      addRange(RequestTimeRangeNames.BLOCKING, start, middle);\n      const state =\n          request.responseReceivedTime === -1 ? RequestTimeRangeNames.CONNECTING : RequestTimeRangeNames.RECEIVING;\n      addRange(state, middle, end);\n      return result;\n    }\n\n    const issueTime = request.issueTime();\n    const startTime = timing.requestTime;\n    const endTime = firstPositive([request.endTime, request.responseReceivedTime]) || startTime;\n\n    addRange(RequestTimeRangeNames.TOTAL, issueTime < startTime ? issueTime : startTime, endTime);\n    if (timing.pushStart) {\n      const pushEnd = timing.pushEnd || endTime;\n      // Only show the part of push that happened after the navigation/reload.\n      // Pushes that happened on the same connection before we started main request will not be shown.\n      if (pushEnd > navigationStart) {\n        addRange(RequestTimeRangeNames.PUSH, Math.max(timing.pushStart, navigationStart), pushEnd);\n      }\n    }\n    if (issueTime < startTime) {\n      addRange(RequestTimeRangeNames.QUEUEING, issueTime, startTime);\n    }\n\n    const responseReceived = (request.responseReceivedTime - startTime) * 1000;\n    if (request.fetchedViaServiceWorker) {\n      addOffsetRange(RequestTimeRangeNames.BLOCKING, 0, timing.workerStart);\n      addOffsetRange(RequestTimeRangeNames.SERVICE_WORKER_PREPARATION, timing.workerStart, timing.workerReady);\n      addOffsetRange(\n          RequestTimeRangeNames.SERVICE_WORKER_RESPOND_WITH, timing.workerFetchStart, timing.workerRespondWithSettled);\n      addOffsetRange(RequestTimeRangeNames.SERVICE_WORKER, timing.workerReady, timing.sendEnd);\n      addOffsetRange(RequestTimeRangeNames.WAITING, timing.sendEnd, responseReceived);\n    } else if (!timing.pushStart) {\n      const blockingEnd =\n          firstPositive([timing.dnsStart, timing.connectStart, timing.sendStart, responseReceived]) || 0;\n      addOffsetRange(RequestTimeRangeNames.BLOCKING, 0, blockingEnd);\n      addOffsetRange(RequestTimeRangeNames.PROXY, timing.proxyStart, timing.proxyEnd);\n      addOffsetRange(RequestTimeRangeNames.DNS, timing.dnsStart, timing.dnsEnd);\n      addOffsetRange(RequestTimeRangeNames.CONNECTING, timing.connectStart, timing.connectEnd);\n      addOffsetRange(RequestTimeRangeNames.SSL, timing.sslStart, timing.sslEnd);\n      addOffsetRange(RequestTimeRangeNames.SENDING, timing.sendStart, timing.sendEnd);\n      addOffsetRange(\n          RequestTimeRangeNames.WAITING,\n          Math.max(timing.sendEnd, timing.connectEnd, timing.dnsEnd, timing.proxyEnd, blockingEnd), responseReceived);\n    }\n\n    const {serviceWorkerRouterInfo} = request;\n    if (serviceWorkerRouterInfo) {\n      if (timing.workerRouterEvaluationStart) {\n        // Depending on the source,the next timestamp will be different. Determine the timestamp by checking\n        // the matched and actual source.\n        let routerEvaluationEnd = timing.sendStart;\n        if (serviceWorkerRouterInfo?.matchedSourceType === Protocol.Network.ServiceWorkerRouterSource.Cache &&\n            timing.workerCacheLookupStart) {\n          routerEvaluationEnd = timing.workerCacheLookupStart;\n        } else if (\n            serviceWorkerRouterInfo?.actualSourceType === Protocol.Network.ServiceWorkerRouterSource.FetchEvent) {\n          routerEvaluationEnd = timing.workerStart;\n        }\n        addMaybeNegativeOffsetRange(\n            RequestTimeRangeNames.SERVICE_WORKER_ROUTER_EVALUATION, timing.workerRouterEvaluationStart,\n            routerEvaluationEnd);\n      }\n\n      if (timing.workerCacheLookupStart) {\n        let cacheLookupEnd = timing.sendStart;\n        if (serviceWorkerRouterInfo?.actualSourceType === Protocol.Network.ServiceWorkerRouterSource.Cache) {\n          cacheLookupEnd = timing.receiveHeadersStart;\n        }\n        addMaybeNegativeOffsetRange(\n            RequestTimeRangeNames.SERVICE_WORKER_CACHE_LOOKUP, timing.workerCacheLookupStart, cacheLookupEnd);\n      }\n    }\n\n    if (request.endTime !== -1) {\n      addRange(\n          timing.pushStart ? RequestTimeRangeNames.RECEIVING_PUSH : RequestTimeRangeNames.RECEIVING,\n          request.responseReceivedTime, endTime);\n    }\n\n    return result;\n  }\n\n  static createTimingTable(request: SDK.NetworkRequest.NetworkRequest, calculator: NetworkTimeCalculator): Element {\n    const tableElement = document.createElement('table');\n    tableElement.classList.add('network-timing-table');\n    tableElement.setAttribute('jslog', `${VisualLogging.pane('timing').track({resize: true})}`);\n    const colgroup = tableElement.createChild('colgroup');\n    colgroup.createChild('col', 'labels');\n    colgroup.createChild('col', 'bars');\n    colgroup.createChild('col', 'duration');\n\n    const timeRanges = RequestTimingView.calculateRequestTimeRanges(request, calculator.minimumBoundary());\n    const startTime = timeRanges.map(r => r.start).reduce((a, b) => Math.min(a, b));\n    const endTime = timeRanges.map(r => r.end).reduce((a, b) => Math.max(a, b));\n    const scale = 100 / (endTime - startTime);\n\n    let connectionHeader;\n    let serviceworkerHeader;\n    let dataHeader;\n    let queueingHeader;\n    let totalDuration = 0;\n\n    const startTimeHeader = tableElement.createChild('thead', 'network-timing-start');\n    const tableHeaderRow = startTimeHeader.createChild('tr');\n    const activityHeaderCell = tableHeaderRow.createChild('th');\n    activityHeaderCell.createChild('span', 'network-timing-hidden-header').textContent = i18nString(UIStrings.label);\n    activityHeaderCell.scope = 'col';\n    const waterfallHeaderCell = tableHeaderRow.createChild('th');\n    waterfallHeaderCell.createChild('span', 'network-timing-hidden-header').textContent =\n        i18nString(UIStrings.waterfall);\n    waterfallHeaderCell.scope = 'col';\n    const durationHeaderCell = tableHeaderRow.createChild('th');\n    durationHeaderCell.createChild('span', 'network-timing-hidden-header').textContent = i18nString(UIStrings.duration);\n    durationHeaderCell.scope = 'col';\n\n    const queuedCell = startTimeHeader.createChild('tr').createChild('td');\n    const startedCell = startTimeHeader.createChild('tr').createChild('td');\n    queuedCell.colSpan = startedCell.colSpan = 3;\n    UI.UIUtils.createTextChild(\n        queuedCell, i18nString(UIStrings.queuedAtS, {PH1: calculator.formatValue(request.issueTime(), 2)}));\n    UI.UIUtils.createTextChild(\n        startedCell, i18nString(UIStrings.startedAtS, {PH1: calculator.formatValue(request.startTime, 2)}));\n\n    let right;\n    for (let i = 0; i < timeRanges.length; ++i) {\n      const range = timeRanges[i];\n      const rangeName = range.name;\n      if (rangeName === RequestTimeRangeNames.TOTAL) {\n        totalDuration = range.end - range.start;\n        continue;\n      }\n      if (rangeName === RequestTimeRangeNames.PUSH) {\n        createHeader(i18nString(UIStrings.serverPush));\n      } else if (rangeName === RequestTimeRangeNames.QUEUEING) {\n        if (!queueingHeader) {\n          queueingHeader = createHeader(i18nString(UIStrings.resourceScheduling));\n        }\n      } else if (ConnectionSetupRangeNames.has(rangeName)) {\n        if (!connectionHeader) {\n          connectionHeader = createHeader(i18nString(UIStrings.connectionStart));\n        }\n      } else if (ServiceWorkerRangeNames.has(rangeName)) {\n        if (!serviceworkerHeader) {\n          serviceworkerHeader = createHeader('Service Worker');\n        }\n      } else if (!dataHeader) {\n        dataHeader = createHeader(i18nString(UIStrings.requestresponse));\n      }\n\n      const left = (scale * (range.start - startTime));\n      right = (scale * (endTime - range.end));\n      const duration = range.end - range.start;\n\n      const tr = tableElement.createChild('tr');\n      const timingBarTitleElement = tr.createChild('td');\n      UI.UIUtils.createTextChild(timingBarTitleElement, RequestTimingView.timeRangeTitle(rangeName));\n\n      const row = tr.createChild('td').createChild('div', 'network-timing-row');\n      const bar = row.createChild('span', 'network-timing-bar ' + rangeName);\n      bar.style.left = left + '%';\n      bar.style.right = right + '%';\n      bar.textContent = '\\u200B';  // Important for 0-time items to have 0 width.\n      UI.ARIAUtils.setLabel(row, i18nString(UIStrings.startedAtS, {PH1: calculator.formatValue(range.start, 2)}));\n      const label = tr.createChild('td').createChild('div', 'network-timing-bar-title');\n      label.textContent = i18n.TimeUtilities.secondsToString(duration, true);\n\n      if (range.name === 'serviceworker-respondwith') {\n        timingBarTitleElement.classList.add('network-fetch-timing-bar-clickable');\n        tableElement.createChild('tr', 'network-fetch-timing-bar-details');\n\n        timingBarTitleElement.setAttribute('tabindex', '0');\n        timingBarTitleElement.setAttribute('role', 'switch');\n        UI.ARIAUtils.setChecked(timingBarTitleElement, false);\n      }\n\n      if (range.name === 'serviceworker-routerevaluation') {\n        timingBarTitleElement.classList.add('network-fetch-timing-bar-clickable');\n        tableElement.createChild('tr', 'router-evaluation-timing-bar-details');\n\n        timingBarTitleElement.setAttribute('tabindex', '0');\n        timingBarTitleElement.setAttribute('role', 'switch');\n        UI.ARIAUtils.setChecked(timingBarTitleElement, false);\n      }\n    }\n\n    if (!request.finished && !request.preserved) {\n      const cell = tableElement.createChild('tr').createChild('td', 'caution');\n      cell.colSpan = 3;\n      UI.UIUtils.createTextChild(cell, i18nString(UIStrings.cautionRequestIsNotFinishedYet));\n    }\n\n    const footer = tableElement.createChild('tr', 'network-timing-footer');\n    const note = footer.createChild('td');\n    note.colSpan = 1;\n    const explanationLink = UI.XLink.XLink.create(\n        'https://developer.chrome.com/docs/devtools/network/reference/#timing-explanation',\n        i18nString(UIStrings.explanation), undefined, undefined, 'explanation');\n    note.appendChild(explanationLink);\n    footer.createChild('td');\n    UI.UIUtils.createTextChild(footer.createChild('td'), i18n.TimeUtilities.secondsToString(totalDuration, true));\n\n    const serverTimings = request.serverTimings;\n\n    const lastTimingRightEdge = right === undefined ? 100 : right;\n\n    const breakElement = tableElement.createChild('tr', 'network-timing-table-header').createChild('td');\n    breakElement.colSpan = 3;\n    breakElement.createChild('hr', 'break');\n\n    const serverHeader = tableElement.createChild('tr', 'network-timing-table-header');\n    UI.UIUtils.createTextChild(serverHeader.createChild('td'), i18nString(UIStrings.serverTiming));\n    serverHeader.createChild('td');\n    UI.UIUtils.createTextChild(serverHeader.createChild('td'), i18nString(UIStrings.time));\n\n    if (!serverTimings) {\n      const informationRow = tableElement.createChild('tr');\n      const information = informationRow.createChild('td');\n      information.colSpan = 3;\n\n      const link = UI.XLink.XLink.create(\n          'https://web.dev/custom-metrics/#server-timing-api', i18nString(UIStrings.theServerTimingApi), undefined,\n          undefined, 'server-timing-api');\n      information.appendChild(\n          i18n.i18n.getFormatLocalizedString(str_, UIStrings.duringDevelopmentYouCanUseSToAdd, {PH1: link}));\n\n      return tableElement;\n    }\n\n    serverTimings.filter(item => item.metric.toLowerCase() !== 'total')\n        .forEach(item => addServerTiming(item, lastTimingRightEdge));\n    serverTimings.filter(item => item.metric.toLowerCase() === 'total')\n        .forEach(item => addServerTiming(item, lastTimingRightEdge));\n\n    return tableElement;\n\n    function addServerTiming(serverTiming: SDK.ServerTiming.ServerTiming, right: number): void {\n      const colorGenerator =\n          new Common.Color.Generator({min: 0, max: 360, count: 36}, {min: 50, max: 80, count: undefined}, 80);\n      const isTotal = serverTiming.metric.toLowerCase() === 'total';\n      const tr = tableElement.createChild('tr', isTotal ? 'network-timing-footer' : 'server-timing-row');\n      const metricEl = tr.createChild('td', 'network-timing-metric');\n      const metricDesc = [serverTiming.metric, serverTiming.description].filter(Boolean).join(' — ');\n\n      // Mark entries from a bespoke format\n      if (serverTiming.metric.startsWith('(c')) {\n        tr.classList.add('synthetic');\n      }\n\n      UI.UIUtils.createTextChild(metricEl, metricDesc);\n      UI.Tooltip.Tooltip.install(metricEl, metricDesc);\n\n      const row = tr.createChild('td', 'server-timing-cell--value-bar').createChild('div', 'network-timing-row');\n\n      if (serverTiming.value === null) {\n        return;\n      }\n      const left = scale * (endTime - startTime - (serverTiming.value / 1000));\n      if (left >= 0) {  // don't chart values too big or too small\n        const bar = row.createChild('span', 'network-timing-bar server-timing');\n        bar.style.left = left + '%';\n        bar.style.right = right + '%';\n        bar.textContent = '\\u200B';  // Important for 0-time items to have 0 width.\n        if (!isTotal) {\n          bar.style.backgroundColor = colorGenerator.colorForID(serverTiming.metric);\n        }\n      }\n      const label =\n          tr.createChild('td', 'server-timing-cell--value-text').createChild('div', 'network-timing-bar-title');\n      label.textContent = i18n.TimeUtilities.millisToString(serverTiming.value, true);\n    }\n\n    function createHeader(title: string): Element {\n      const dataHeader = tableElement.createChild('tr', 'network-timing-table-header');\n      const headerCell = dataHeader.createChild('td');\n      UI.UIUtils.createTextChild(headerCell, title);\n      UI.ARIAUtils.markAsHeading(headerCell, 2);\n      UI.UIUtils.createTextChild(dataHeader.createChild('td'), '');\n      UI.UIUtils.createTextChild(dataHeader.createChild('td'), i18nString(UIStrings.durationC));\n      return dataHeader;\n    }\n  }\n\n  private constructFetchDetailsView(): void {\n    if (!this.tableElement) {\n      return;\n    }\n\n    const document = this.tableElement.ownerDocument;\n    const fetchDetailsElement = document.querySelector('.network-fetch-timing-bar-details');\n\n    if (!fetchDetailsElement) {\n      return;\n    }\n\n    fetchDetailsElement.classList.add('network-fetch-timing-bar-details-collapsed');\n\n    self.onInvokeElement(this.tableElement, this.onToggleFetchDetails.bind(this, fetchDetailsElement));\n\n    const detailsView = new UI.TreeOutline.TreeOutlineInShadow();\n    fetchDetailsElement.appendChild(detailsView.element);\n\n    const origRequest = Logs.NetworkLog.NetworkLog.instance().originalRequestForURL(this.request.url());\n    if (origRequest) {\n      const requestObject = SDK.RemoteObject.RemoteObject.fromLocalObject(origRequest);\n      const requestTreeElement = new ObjectUI.ObjectPropertiesSection.RootElement(requestObject);\n      requestTreeElement.title = i18nString(UIStrings.originalRequest);\n      detailsView.appendChild(requestTreeElement);\n    }\n\n    const response = Logs.NetworkLog.NetworkLog.instance().originalResponseForURL(this.request.url());\n    if (response) {\n      const responseObject = SDK.RemoteObject.RemoteObject.fromLocalObject(response);\n      const responseTreeElement = new ObjectUI.ObjectPropertiesSection.RootElement(responseObject);\n      responseTreeElement.title = i18nString(UIStrings.responseReceived);\n      detailsView.appendChild(responseTreeElement);\n    }\n\n    const serviceWorkerResponseSource = document.createElement('div');\n    serviceWorkerResponseSource.classList.add('network-fetch-details-treeitem');\n    let swResponseSourceString = i18nString(UIStrings.unknown);\n    const swResponseSource = this.request.serviceWorkerResponseSource();\n    if (swResponseSource) {\n      swResponseSourceString = this.getLocalizedResponseSourceForCode(swResponseSource);\n    }\n    serviceWorkerResponseSource.textContent = i18nString(UIStrings.sourceOfResponseS, {PH1: swResponseSourceString});\n\n    const responseSourceTreeElement = new UI.TreeOutline.TreeElement(serviceWorkerResponseSource);\n    detailsView.appendChild(responseSourceTreeElement);\n\n    const cacheNameElement = document.createElement('div');\n    cacheNameElement.classList.add('network-fetch-details-treeitem');\n    const responseCacheStorageName = this.request.getResponseCacheStorageCacheName();\n    if (responseCacheStorageName) {\n      cacheNameElement.textContent = i18nString(UIStrings.cacheStorageCacheNameS, {PH1: responseCacheStorageName});\n    } else {\n      cacheNameElement.textContent = i18nString(UIStrings.cacheStorageCacheNameUnknown);\n    }\n\n    const cacheNameTreeElement = new UI.TreeOutline.TreeElement(cacheNameElement);\n    detailsView.appendChild(cacheNameTreeElement);\n\n    const retrievalTime = this.request.getResponseRetrievalTime();\n    if (retrievalTime) {\n      const responseTimeElement = document.createElement('div');\n      responseTimeElement.classList.add('network-fetch-details-treeitem');\n      responseTimeElement.textContent = i18nString(UIStrings.retrievalTimeS, {PH1: retrievalTime.toString()});\n      const responseTimeTreeElement = new UI.TreeOutline.TreeElement(responseTimeElement);\n      detailsView.appendChild(responseTimeTreeElement);\n    }\n  }\n\n  private getLocalizedResponseSourceForCode(swResponseSource: Protocol.Network.ServiceWorkerResponseSource):\n      Common.UIString.LocalizedString {\n    switch (swResponseSource) {\n      case Protocol.Network.ServiceWorkerResponseSource.CacheStorage:\n        return i18nString(UIStrings.serviceworkerCacheStorage);\n      case Protocol.Network.ServiceWorkerResponseSource.HttpCache:\n        return i18nString(UIStrings.fromHttpCache);\n      case Protocol.Network.ServiceWorkerResponseSource.Network:\n        return i18nString(UIStrings.networkFetch);\n      default:\n        return i18nString(UIStrings.fallbackCode);\n    }\n  }\n\n  private onToggleFetchDetails(fetchDetailsElement: Element, event: Event): void {\n    if (!event.target) {\n      return;\n    }\n\n    const target = (event.target as Element);\n    if (target.classList.contains('network-fetch-timing-bar-clickable')) {\n      if (fetchDetailsElement.classList.contains('network-fetch-timing-bar-details-collapsed')) {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.NetworkPanelServiceWorkerRespondWith);\n      }\n      const expanded = target.getAttribute('aria-checked') === 'true';\n      target.setAttribute('aria-checked', String(!expanded));\n\n      fetchDetailsElement.classList.toggle('network-fetch-timing-bar-details-collapsed');\n      fetchDetailsElement.classList.toggle('network-fetch-timing-bar-details-expanded');\n    }\n  }\n\n  private constructRouterEvaluationView(): void {\n    if (!this.tableElement) {\n      return;\n    }\n\n    const routerEvaluationDetailsElement = this.tableElement.querySelector('.router-evaluation-timing-bar-details');\n    if (!routerEvaluationDetailsElement) {\n      return;\n    }\n\n    routerEvaluationDetailsElement.classList.add('network-fetch-timing-bar-details-collapsed');\n\n    self.onInvokeElement(\n        this.tableElement, this.onToggleRouterEvaluationDetails.bind(this, routerEvaluationDetailsElement));\n\n    const detailsView = new UI.TreeOutline.TreeOutlineInShadow();\n    routerEvaluationDetailsElement.appendChild(detailsView.element);\n\n    const {serviceWorkerRouterInfo} = this.request;\n    if (!serviceWorkerRouterInfo) {\n      return;\n    }\n\n    const document = this.tableElement.ownerDocument;\n\n    // Add matched source type element\n    const matchedSourceTypeElement = document.createElement('div');\n    matchedSourceTypeElement.classList.add('network-fetch-details-treeitem');\n    const matchedSourceType = serviceWorkerRouterInfo.matchedSourceType;\n    const matchedSourceTypeString = String(matchedSourceType) || i18nString(UIStrings.unknown);\n    matchedSourceTypeElement.textContent = i18nString(UIStrings.routerMatchedSource, {PH1: matchedSourceTypeString});\n\n    const matchedSourceTypeTreeElement = new UI.TreeOutline.TreeElement(matchedSourceTypeElement);\n    detailsView.appendChild(matchedSourceTypeTreeElement);\n\n    // Add actual source type element\n    const actualSourceTypeElement = document.createElement('div');\n    actualSourceTypeElement.classList.add('network-fetch-details-treeitem');\n    const actualSourceType = serviceWorkerRouterInfo.actualSourceType;\n    const actualSourceTypeString = String(actualSourceType) || i18nString(UIStrings.unknown);\n    actualSourceTypeElement.textContent = i18nString(UIStrings.routerActualSource, {PH1: actualSourceTypeString});\n\n    const actualSourceTypeTreeElement = new UI.TreeOutline.TreeElement(actualSourceTypeElement);\n    detailsView.appendChild(actualSourceTypeTreeElement);\n  }\n\n  private onToggleRouterEvaluationDetails(routerEvaluationDetailsElement: Element, event: Event): void {\n    if (!event.target) {\n      return;\n    }\n\n    const target = (event.target as Element);\n    if (target.classList.contains('network-fetch-timing-bar-clickable')) {\n      const expanded = target.getAttribute('aria-checked') === 'true';\n      target.setAttribute('aria-checked', String(!expanded));\n\n      routerEvaluationDetailsElement.classList.toggle('network-fetch-timing-bar-details-collapsed');\n      routerEvaluationDetailsElement.classList.toggle('network-fetch-timing-bar-details-expanded');\n    }\n  }\n\n  override wasShown(): void {\n    this.request.addEventListener(SDK.NetworkRequest.Events.TIMING_CHANGED, this.refresh, this);\n    this.request.addEventListener(SDK.NetworkRequest.Events.FINISHED_LOADING, this.refresh, this);\n    this.calculator.addEventListener(Events.BOUNDARIES_CHANGED, this.boundaryChanged, this);\n    this.refresh();\n  }\n\n  override willHide(): void {\n    this.request.removeEventListener(SDK.NetworkRequest.Events.TIMING_CHANGED, this.refresh, this);\n    this.request.removeEventListener(SDK.NetworkRequest.Events.FINISHED_LOADING, this.refresh, this);\n    this.calculator.removeEventListener(Events.BOUNDARIES_CHANGED, this.boundaryChanged, this);\n  }\n\n  private refresh(): void {\n    if (this.tableElement) {\n      this.tableElement.remove();\n    }\n\n    this.tableElement = RequestTimingView.createTimingTable(this.request, this.calculator);\n    this.tableElement.classList.add('resource-timing-table');\n    this.element.appendChild(this.tableElement);\n\n    if (this.request.fetchedViaServiceWorker) {\n      this.constructFetchDetailsView();\n    }\n\n    if (this.request.serviceWorkerRouterInfo) {\n      this.constructRouterEvaluationView();\n    }\n  }\n\n  private boundaryChanged(): void {\n    const minimumBoundary = this.calculator.minimumBoundary();\n    if (minimumBoundary !== this.lastMinimumBoundary) {\n      this.lastMinimumBoundary = minimumBoundary;\n      this.refresh();\n    }\n  }\n}\n\nexport const enum RequestTimeRangeNames {\n  PUSH = 'push',\n  QUEUEING = 'queueing',\n  BLOCKING = 'blocking',\n  CONNECTING = 'connecting',\n  DNS = 'dns',\n  PROXY = 'proxy',\n  RECEIVING = 'receiving',\n  RECEIVING_PUSH = 'receiving-push',\n  SENDING = 'sending',\n  SERVICE_WORKER = 'serviceworker',\n  SERVICE_WORKER_PREPARATION = 'serviceworker-preparation',\n  SERVICE_WORKER_RESPOND_WITH = 'serviceworker-respondwith',\n  SERVICE_WORKER_ROUTER_EVALUATION = 'serviceworker-routerevaluation',\n  SERVICE_WORKER_CACHE_LOOKUP = 'serviceworker-cachelookup',\n  SSL = 'ssl',\n  TOTAL = 'total',\n  WAITING = 'waiting',\n}\n\nexport const ServiceWorkerRangeNames = new Set<RequestTimeRangeNames>([\n  RequestTimeRangeNames.SERVICE_WORKER,\n  RequestTimeRangeNames.SERVICE_WORKER_PREPARATION,\n  RequestTimeRangeNames.SERVICE_WORKER_RESPOND_WITH,\n  RequestTimeRangeNames.SERVICE_WORKER_ROUTER_EVALUATION,\n  RequestTimeRangeNames.SERVICE_WORKER_CACHE_LOOKUP,\n]);\n\nexport const ConnectionSetupRangeNames = new Set<RequestTimeRangeNames>([\n  RequestTimeRangeNames.QUEUEING,\n  RequestTimeRangeNames.BLOCKING,\n  RequestTimeRangeNames.CONNECTING,\n  RequestTimeRangeNames.DNS,\n  RequestTimeRangeNames.PROXY,\n  RequestTimeRangeNames.SSL,\n]);\n\nexport interface RequestTimeRange {\n  name: RequestTimeRangeNames;\n  start: number;\n  end: number;\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.network-timing-table {\n  width: 380px;\n  border-spacing: 0;\n  padding-left: 10px;\n  padding-right: 10px;\n  line-height: initial;\n  table-layout: fixed;\n}\n\n.network-timing-start {\n  border-top: 5px solid transparent;\n}\n\n.network-timing-start th span.network-timing-hidden-header {\n  height: 1px;\n  width: 1px;\n  position: absolute;\n  overflow: hidden;\n}\n\n.network-timing-table-header td,\n.network-timing-footer td {\n  border-top: 10px solid transparent;\n}\n\n.network-timing-table-header td {\n  color: var(--sys-color-token-subtle);\n}\n\n.network-timing-table td {\n  padding: 4px 0;\n}\n\n.network-timing-table-header td:last-child {\n  text-align: right;\n}\n\n.network-timing-footer td:last-child {\n  font-weight: bold;\n  text-align: right;\n}\n\ntable.network-timing-table > tr:not(.network-timing-table-header, .network-timing-footer) > td:first-child {\n  padding-left: 12px;\n}\n\n.network-timing-table col.labels {\n  width: 156px;\n}\n\n.network-timing-table col.duration {\n  width: 80px;\n}\n\n.network-timing-table td.caution {\n  font-weight: bold;\n  color: var(--issue-color-yellow);\n  padding: 2px 0;\n}\n\n.network-timing-table hr.break {\n  background-color: var(--sys-color-divider);\n  border: none;\n  height: 1px;\n}\n\n.network-timing-row {\n  position: relative;\n  height: 15px;\n}\n\n.network-timing-bar {\n  position: absolute;\n  min-width: 1px;\n  top: 0;\n  bottom: 0;\n}\n\n.network-timing-bar-title {\n  color: var(--sys-color-on-surface);\n  white-space: nowrap;\n  text-align: right;\n}\n\n.network-timing-bar.queueing,\n.network-timing-bar.total {\n  border: 1px solid var(--sys-color-token-subtle);\n}\n\n.network-timing-bar.blocking,\n.-theme-preserve {\n  background-color: var(--network-overview-blocking); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n.network-timing-bar.proxy,\n.-theme-preserve {\n  background-color: var(--override-network-overview-proxy);\n}\n\n.network-timing-bar.dns,\n.-theme-preserve {\n  background-color: var(--sys-color-cyan);\n}\n\n.network-timing-bar.connecting,\n.network-timing-bar.serviceworker,\n.network-timing-bar.serviceworker-preparation,\n.network-timing-bar.serviceworker-routerevaluation,\n.network-timing-bar.serviceworker-cachelookup,\n.-theme-preserve {\n  background-color: var(--network-overview-service-worker); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n.network-timing-bar.ssl,\n.-theme-preserve {\n  background-color: var(--network-overview-ssl); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n.network-timing-bar.serviceworker-respondwith,\n.-theme-preserve {\n  background-color: var(--network-overview-service-worker-respond-with); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n.network-fetch-timing-bar-clickable::before {\n  user-select: none;\n  mask-image: var(--image-file-triangle-right);\n  float: left;\n  width: 14px;\n  height: 14px;\n  margin-right: 2px;\n  content: \"\";\n  position: relative;\n  background-color: var(--icon-default);\n  transition: transform 200ms;\n}\n\n.network-fetch-timing-bar-clickable {\n  position: relative;\n  left: -12px;\n}\n\n.network-fetch-timing-bar-clickable:focus-visible {\n  background-color: var(--sys-color-state-focus-highlight);\n}\n\n.network-fetch-timing-bar-clickable[aria-checked=\"true\"]::before {\n  transform: rotate(90deg);\n}\n\n.network-fetch-timing-bar-details-collapsed {\n  display: none;\n}\n\n.network-fetch-timing-bar-details-expanded {\n  display: block;\n}\n\n.network-fetch-timing-bar-details,\n.router-evaluation-timing-bar-details {\n  padding-left: 11px;\n  width: fit-content;\n}\n\n.network-fetch-details-treeitem {\n  width: max-content;\n}\n\n.network-timing-bar.sending,\n.-theme-preserve {\n  background-color: var(--override-network-overview-sending);\n}\n\n.network-timing-bar.waiting,\n.-theme-preserve {\n  background-color: var(--network-overview-waiting); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n.network-timing-bar.receiving,\n.network-timing-bar.receiving-push,\n.-theme-preserve {\n  background-color: var(--network-overview-receiving); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n.network-timing-bar.push,\n.-theme-preserve {\n  background-color: var(--network-overview-push); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n.server-timing-row:nth-child(even) {\n  background: var(--sys-color-surface1);\n}\n\n.network-timing-bar.server-timing,\n.-theme-preserve {\n  background-color: var(--sys-color-neutral-container);\n}\n\ntr.synthetic {\n  font-style: italic;\n}\n\n.network-timing-table td.network-timing-metric {\n  white-space: nowrap;\n  max-width: 150px;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n}\n\n.network-timing-bar.proxy,\n.network-timing-bar.dns,\n.network-timing-bar.ssl,\n.network-timing-bar.connecting,\n.network-timing-bar.blocking {\n  height: 10px;\n  margin: auto;\n}\n\n@media (forced-colors: active) {\n  .network-timing-bar.blocking,\n  .network-timing-bar.proxy,\n  .network-timing-bar.dns,\n  .network-timing-bar.connecting,\n  .network-timing-bar.serviceworker,\n  .network-timing-bar.serviceworker-preparation,\n  .network-timing-bar.ssl,\n  .network-timing-bar.sending,\n  .network-timing-bar.waiting,\n  .network-timing-bar.receiving,\n  .network-timing-bar.receiving-push,\n  .network-timing-bar.push,\n  .network-timing-bar.server-timing,\n  .-theme-preserve {\n    forced-color-adjust: none;\n  }\n\n  .network-timing-table-header td,\n  .network-timing-footer td {\n    forced-color-adjust: none;\n    color: ButtonText;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./networkTimingTable.css')} */`;", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {BinaryResourceView} from './BinaryResourceView.js';\nimport {DataGridItem, ResourceChunkView} from './ResourceChunkView.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Event Source Messages View of the Network panel\n   */\n  data: 'Data',\n  /**\n   * @description Text in Messages View of the Network panel\n   */\n  length: 'Length',\n  /**\n   * @description Text that refers to the time\n   */\n  time: 'Time',\n  /**\n   * @description Text in Messages View of the Network panel\n   */\n  address: 'Address',\n  /**\n   * @description Text in Messages View of the Network panel\n   */\n  port: 'Port',\n  /**\n   * @description Data grid name for Direct Socket Chunk data grids\n   */\n  directSocketChunk: 'Direct Socket Chunk',\n  /**\n   * @description Example for placeholder text. Note: \"(direct)?socket)\" is an example code and should not be translated.\n   */\n  filterUsingRegex: 'Filter using regex (example: `(direct)?socket)`',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/ResourceDirectSocketChunkView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ResourceDirectSocketChunkView extends ResourceChunkView<SDK.NetworkRequest.DirectSocketChunk> {\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super(\n        request, 'network-direct-socket-chunk-filter', 'resource-direct-socket-chunk-split-view-state',\n        i18nString(UIStrings.directSocketChunk), i18nString(UIStrings.filterUsingRegex));\n    this.element.setAttribute('jslog', `${VisualLogging.pane('direct-socket-messages').track({resize: true})}`);\n  }\n\n  override getRequestChunks(): SDK.NetworkRequest.DirectSocketChunk[] {\n    return this.request.directSocketChunks();\n  }\n  override chunkFilter(chunk: SDK.NetworkRequest.DirectSocketChunk): boolean {\n    if (this.filterType && chunk.type !== this.filterType) {\n      return false;\n    }\n    return !this.filterRegex || this.filterRegex.test(chunk.data);\n  }\n\n  override createGridItem(chunk: SDK.NetworkRequest.DirectSocketChunk): DataGridItem {\n    return new ResourceChunkNode(\n        chunk, this.request.directSocketInfo?.type === SDK.NetworkRequest.DirectSocketType.UDP_BOUND);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.refresh();\n    this.request.addEventListener(\n        SDK.NetworkRequest.Events.DIRECTSOCKET_CHUNK_ADDED, this.onDirectSocketChunkAdded, this);\n  }\n\n  override willHide(): void {\n    this.request.removeEventListener(\n        SDK.NetworkRequest.Events.DIRECTSOCKET_CHUNK_ADDED, this.onDirectSocketChunkAdded, this);\n  }\n\n  private onDirectSocketChunkAdded(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.DirectSocketChunk>):\n      void {\n    this.chunkAdded(event.data);\n  }\n\n  override getColumns(): DataGrid.DataGrid.ColumnDescriptor[] {\n    if (this.request.directSocketInfo?.type === SDK.NetworkRequest.DirectSocketType.UDP_BOUND) {\n      return [\n        {\n          id: 'data',\n          title: i18nString(UIStrings.data),\n          sortable: false,\n          weight: 63,\n        },\n        {\n          id: 'address',\n          title: i18nString(UIStrings.address),\n          sortable: false,\n          align: DataGrid.DataGrid.Align.RIGHT,\n          weight: 15,\n        },\n        {\n          id: 'port',\n          title: i18nString(UIStrings.port),\n          sortable: false,\n          align: DataGrid.DataGrid.Align.RIGHT,\n          weight: 10,\n        },\n        {\n          id: 'length',\n          title: i18nString(UIStrings.length),\n          sortable: false,\n          align: DataGrid.DataGrid.Align.RIGHT,\n          weight: 5,\n        },\n        {\n          id: 'time',\n          title: i18nString(UIStrings.time),\n          sortable: true,\n          weight: 7,\n        },\n      ];\n    }\n    return super.getColumns();\n  }\n}\n\nclass ResourceChunkNode extends DataGridItem {\n  #binaryView: BinaryResourceView|null = null;\n  readonly chunk: SDK.NetworkRequest.DirectSocketChunk;\n\n  constructor(chunk: SDK.NetworkRequest.DirectSocketChunk, boundSocket: boolean) {\n    const time = new Date(chunk.timestamp * 1000);\n    const timeText = ('0' + time.getHours()).substr(-2) + ':' + ('0' + time.getMinutes()).substr(-2) + ':' +\n        ('0' + time.getSeconds()).substr(-2) + '.' + ('00' + time.getMilliseconds()).substr(-3);\n    const timeNode = document.createElement('div');\n    UI.UIUtils.createTextChild(timeNode, timeText);\n    UI.Tooltip.Tooltip.install(timeNode, time.toLocaleString());\n\n    let description: string;\n    const length = i18n.ByteUtilities.bytesToString(Platform.StringUtilities.base64ToSize(chunk.data));\n    const maxDisplayLen = 30;\n    if (chunk.data.length > maxDisplayLen) {\n      description = chunk.data.substring(0, maxDisplayLen) + '…';\n    } else {\n      description = chunk.data;\n    }\n\n    if (boundSocket) {\n      super({data: description, address: chunk.remoteAddress, port: chunk.remotePort, length, time: timeNode});\n    } else {\n      super({data: description, length, time: timeNode});\n    }\n\n    this.chunk = chunk;\n  }\n\n  override createCells(element: Element): void {\n    element.classList.toggle(\n        'resource-chunk-view-row-send', this.chunk.type === SDK.NetworkRequest.DirectSocketChunkType.SEND);\n    element.classList.toggle(\n        'resource-chunk-view-row-receive', this.chunk.type === SDK.NetworkRequest.DirectSocketChunkType.RECEIVE);\n    super.createCells(element);\n  }\n\n  override nodeSelfHeight(): number {\n    return 21;\n  }\n\n  override dataText(): string {\n    return this.chunk.data;\n  }\n\n  override binaryView(): BinaryResourceView|null {\n    if (!this.#binaryView) {\n      if (this.dataText().length > 0) {\n        this.#binaryView = new BinaryResourceView(\n            TextUtils.StreamingContentData.StreamingContentData.from(\n                new TextUtils.ContentData.ContentData(this.dataText(), true, 'application/octet-stream')),\n            Platform.DevToolsPath.EmptyUrlString, Common.ResourceType.resourceTypes.DirectSocket);\n      }\n    }\n    return this.#binaryView;\n  }\n\n  override getTime(): number {\n    return this.chunk.timestamp;\n  }\n}\n", "\n// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {BinaryResourceView} from './BinaryResourceView.js';\nimport viewStyles from './resourceChunkView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Event Source Messages View of the Network panel\n   */\n  data: 'Data',\n  /**\n   * @description Text in Messages View of the Network panel\n   */\n  length: 'Length',\n  /**\n   * @description Text that refers to the time\n   */\n  time: 'Time',\n  /**\n   * @description Text to clear everything\n   */\n  clearAll: 'Clear All',\n  /**\n   * @description Text to filter result items\n   */\n  filter: 'Filter',\n  /**\n   * @description Text in Messages View of the Network panel that shows if no message is selected for viewing its content\n   */\n  noMessageSelected: 'No message selected',\n  /**\n   * @description Text in Messages View of the Network panel\n   */\n  selectMessageToBrowseItsContent: 'Select message to browse its content.',\n  /**\n   * @description Text in Messages View of the Network panel\n   */\n  copyMessageD: 'Copy message…',\n  /**\n   * @description A context menu item in the Messages View of the Network panel\n   */\n  copyMessage: 'Copy message',\n  /**\n   * @description Text to clear everything\n   */\n  clearAllL: 'Clear all',\n  /**\n   * @description Text for everything\n   */\n  all: 'All',\n  /**\n   * @description Text in Messages View of the Network panel\n   */\n  send: 'Send',\n  /**\n   * @description Text in Messages View of the Network panel\n   */\n  receive: 'Receive',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/ResourceChunkView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport abstract class ResourceChunkView<Chunk> extends UI.Widget.VBox {\n  private readonly splitWidget: UI.SplitWidget.SplitWidget;\n  private dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<unknown>;\n  private readonly timeComparator:\n      (arg0: DataGrid.SortableDataGrid.SortableDataGridNode<DataGridItem>,\n       arg1: DataGrid.SortableDataGrid.SortableDataGridNode<DataGridItem>) => number;\n  private readonly mainToolbar: UI.Toolbar.Toolbar;\n  private readonly clearAllButton: UI.Toolbar.ToolbarButton;\n  private readonly filterTypeCombobox: UI.Toolbar.ToolbarComboBox;\n  protected filterType: string|null;\n  private readonly filterTextInput: UI.Toolbar.ToolbarInput;\n  protected filterRegex: RegExp|null;\n  private readonly frameEmptyWidget: UI.EmptyWidget.EmptyWidget;\n  private currentSelectedNode?: DataGridItem|null;\n  readonly request: SDK.NetworkRequest.NetworkRequest;\n  private readonly messageFilterSetting: Common.Settings.Setting<string>;\n\n  abstract getRequestChunks(): Chunk[];\n  abstract createGridItem(chunk: Chunk): DataGridItem;\n  abstract chunkFilter(chunk: Chunk): boolean;\n\n  constructor(\n      request: SDK.NetworkRequest.NetworkRequest, messageFilterSettingKey: string, splitWidgetSettingKey: string,\n      dataGridDisplayName: Common.UIString.LocalizedString, filterUsingRegexHint: Common.UIString.LocalizedString) {\n    super();\n    this.messageFilterSetting = Common.Settings.Settings.instance().createSetting(messageFilterSettingKey, '');\n    this.registerRequiredCSS(viewStyles);\n    this.request = request;\n    this.element.classList.add('resource-chunk-view');\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(false, true, splitWidgetSettingKey);\n    this.splitWidget.show(this.element);\n\n    const columns: DataGrid.DataGrid.ColumnDescriptor[] = this.getColumns();\n\n    this.dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: dataGridDisplayName,\n      columns,\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    });\n    this.dataGrid.setRowContextMenuCallback(onRowContextMenu.bind(this));\n    this.dataGrid.setEnableAutoScrollToBottom(true);\n    this.dataGrid.setCellClass('resource-chunk-view-td');\n    this.timeComparator =\n        (resourceChunkNodeTimeComparator as\n             (arg0: DataGrid.SortableDataGrid.SortableDataGridNode<DataGridItem>,\n              arg1: DataGrid.SortableDataGrid.SortableDataGridNode<DataGridItem>) => number);\n    this.dataGrid.sortNodes(this.timeComparator, false);\n    this.dataGrid.markColumnAsSortedBy('time', DataGrid.DataGrid.Order.Ascending);\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SORTING_CHANGED, this.sortItems, this);\n\n    this.dataGrid.setName(splitWidgetSettingKey + '_datagrid');\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SELECTED_NODE, event => {\n      void this.onChunkSelected(event);\n    }, this);\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.DESELECTED_NODE, this.onChunkDeselected, this);\n\n    this.mainToolbar = document.createElement('devtools-toolbar');\n\n    this.clearAllButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearAll), 'clear');\n    this.clearAllButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.clearChunks, this);\n    this.mainToolbar.appendToolbarItem(this.clearAllButton);\n\n    this.filterTypeCombobox =\n        new UI.Toolbar.ToolbarComboBox(this.updateFilterSetting.bind(this), i18nString(UIStrings.filter));\n    for (const filterItem of FILTER_TYPES) {\n      const option = this.filterTypeCombobox.createOption(filterItem.label(), filterItem.name);\n      this.filterTypeCombobox.addOption(option);\n    }\n    this.mainToolbar.appendToolbarItem(this.filterTypeCombobox);\n    this.filterType = null;\n\n    this.filterTextInput = new UI.Toolbar.ToolbarFilter(filterUsingRegexHint, 0.4);\n    this.filterTextInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED, this.updateFilterSetting, this);\n    const filter = this.messageFilterSetting.get();\n    if (filter) {\n      this.filterTextInput.setValue(filter);\n    }\n    this.filterRegex = null;\n    this.mainToolbar.appendToolbarItem(this.filterTextInput);\n\n    const mainContainer = new UI.Widget.VBox();\n    mainContainer.element.appendChild(this.mainToolbar);\n    this.dataGrid.asWidget().show(mainContainer.element);\n    mainContainer.setMinimumSize(0, 72);\n    this.splitWidget.setMainWidget(mainContainer);\n\n    this.frameEmptyWidget = new UI.EmptyWidget.EmptyWidget(\n        i18nString(UIStrings.noMessageSelected), i18nString(UIStrings.selectMessageToBrowseItsContent));\n    this.splitWidget.setSidebarWidget(this.frameEmptyWidget);\n\n    if (filter) {\n      this.applyFilter(filter);\n    }\n\n    function onRowContextMenu(\n        this: ResourceChunkView<Chunk>, contextMenu: UI.ContextMenu.ContextMenu,\n        genericNode: DataGrid.DataGrid.DataGridNode<unknown>): void {\n      const node = (genericNode as DataGridItem);\n      const binaryView = node.binaryView();\n      if (binaryView) {\n        binaryView.addCopyToContextMenu(contextMenu, i18nString(UIStrings.copyMessageD));\n      } else {\n        contextMenu.clipboardSection().appendItem(\n            i18nString(UIStrings.copyMessage),\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText.bind(\n                Host.InspectorFrontendHost.InspectorFrontendHostInstance, node.data.data),\n            {jslogContext: 'copy'});\n      }\n      contextMenu.footerSection().appendItem(\n          i18nString(UIStrings.clearAllL), this.clearChunks.bind(this), {jslogContext: 'clear-all'});\n    }\n  }\n\n  getColumns(): DataGrid.DataGrid.ColumnDescriptor[] {\n    return [\n      {id: 'data', title: i18nString(UIStrings.data), sortable: false, weight: 88},\n      {\n        id: 'length',\n        title: i18nString(UIStrings.length),\n        sortable: false,\n        align: DataGrid.DataGrid.Align.RIGHT,\n        weight: 5,\n      },\n      {id: 'time', title: i18nString(UIStrings.time), sortable: true, weight: 7},\n    ] as DataGrid.DataGrid.ColumnDescriptor[];\n  }\n\n  chunkAdded(chunk: Chunk): void {\n    if (!this.chunkFilter(chunk)) {\n      return;\n    }\n    this.dataGrid.insertChild(this.createGridItem(chunk));\n  }\n\n  private clearChunks(): void {\n    // TODO(allada): actually remove frames from request.\n    clearChunkOffsets.set(this.request, this.getRequestChunks().length);\n    this.refresh();\n  }\n\n  private updateFilterSetting(): void {\n    const text = this.filterTextInput.value();\n    this.messageFilterSetting.set(text);\n    this.applyFilter(text);\n  }\n\n  private applyFilter(text: string): void {\n    const type = (this.filterTypeCombobox.selectedOption() as HTMLOptionElement).value;\n    if (text) {\n      try {\n        this.filterRegex = new RegExp(text, 'i');\n      } catch {\n        this.filterRegex = new RegExp(Platform.StringUtilities.escapeForRegExp(text), 'i');\n      }\n    } else {\n      this.filterRegex = null;\n    }\n    this.filterType = type === 'all' ? null : type;\n    this.refresh();\n  }\n\n  private async onChunkSelected(event: Common.EventTarget.EventTargetEvent<DataGrid.DataGrid.DataGridNode<unknown>>):\n      Promise<void> {\n    this.currentSelectedNode = (event.data as DataGridItem);\n    const content = this.currentSelectedNode.dataText();\n\n    const binaryView = this.currentSelectedNode.binaryView();\n    if (binaryView) {\n      this.splitWidget.setSidebarWidget(binaryView);\n      return;\n    }\n\n    const jsonView = await SourceFrame.JSONView.JSONView.createView(content);\n    if (jsonView) {\n      this.splitWidget.setSidebarWidget(jsonView);\n      return;\n    }\n\n    this.splitWidget.setSidebarWidget(new SourceFrame.ResourceSourceFrame.ResourceSourceFrame(\n        TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n            this.request.url(), this.request.resourceType(), content),\n        ''));\n  }\n\n  private onChunkDeselected(): void {\n    this.currentSelectedNode = null;\n    this.splitWidget.setSidebarWidget(this.frameEmptyWidget);\n  }\n\n  refresh(): void {\n    this.dataGrid.rootNode().removeChildren();\n\n    let chunks = this.getRequestChunks();\n    const offset = clearChunkOffsets.get(this.request) || 0;\n    chunks = chunks.slice(offset);\n    chunks = chunks.filter(this.chunkFilter.bind(this));\n    chunks.forEach(chunk => this.dataGrid.insertChild(this.createGridItem(chunk)));\n  }\n\n  private sortItems(): void {\n    this.dataGrid.sortNodes(this.timeComparator, !this.dataGrid.isSortOrderAscending());\n  }\n\n  getDataGridForTest(): DataGrid.SortableDataGrid.SortableDataGrid<unknown> {\n    return this.dataGrid;\n  }\n\n  getSplitWidgetForTest(): UI.SplitWidget.SplitWidget {\n    return this.splitWidget;\n  }\n\n  getFilterInputForTest(): UI.Toolbar.ToolbarInput {\n    return this.filterTextInput;\n  }\n  getClearAllButtonForTest(): UI.Toolbar.ToolbarButton {\n    return this.clearAllButton;\n  }\n  getFilterTypeComboboxForTest(): UI.Toolbar.ToolbarComboBox {\n    return this.filterTypeCombobox;\n  }\n}\n\nconst FILTER_TYPES: UI.FilterBar.Item[] = [\n  {name: 'all', label: i18nLazyString(UIStrings.all), jslogContext: 'all'},\n  {name: 'send', label: i18nLazyString(UIStrings.send), jslogContext: 'send'},\n  {name: 'receive', label: i18nLazyString(UIStrings.receive), jslogContext: 'receive'},\n];\n\nexport abstract class DataGridItem extends DataGrid.SortableDataGrid.SortableDataGridNode<unknown> {\n  abstract binaryView(): BinaryResourceView|null;\n  abstract getTime(): number;\n  abstract dataText(): string;\n}\n\nfunction resourceChunkNodeTimeComparator(a: DataGridItem, b: DataGridItem): number {\n  return a.getTime() - b.getTime();\n}\n\nconst clearChunkOffsets = new WeakMap<SDK.NetworkRequest.NetworkRequest, number>();\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (c) 2014 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.resource-chunk-view {\n  user-select: text;\n}\n\n.resource-chunk-view .data-grid {\n  flex: auto;\n  border: none;\n\n  & tr {\n    &.resource-chunk-view-row-send td:first-child::before {\n      content: \"\\\\2B06\";\n      color: var(--sys-color-tertiary);\n      padding-right: 4px;\n    }\n\n    &.resource-chunk-view-row-receive td:first-child::before {\n      content: \"\\\\2B07\";\n      color: var(--sys-color-error);\n      padding-right: 4px;\n    }\n\n    &.resource-chunk-view-row-send {\n      background-color: color-mix(in srgb, var(--sys-color-tertiary-container), transparent 50%);\n    }\n\n    &.resource-chunk-view-row-error {\n      background-color: var(--sys-color-surface-error);\n      color: var(--sys-color-on-surface-error);\n    }\n  }\n}\n\n.resource-chunk-view .data-grid .data {\n  background-image: none;\n}\n\n.resource-chunk-view devtools-toolbar {\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n/*# sourceURL=${import.meta.resolve('./resourceChunkView.css')} */`;", "// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2012 Research In Motion Limited. All rights reserved.\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {BinaryResourceView} from './BinaryResourceView.js';\nimport {DataGridItem, ResourceChunkView} from './ResourceChunkView.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Resource Web Socket Frame View of the Network panel. Displays which Opcode\n   * is relevant to a particular operation. 'mask' indicates that the Opcode used a mask, which is a\n   * way of modifying a value by overlaying another value on top of it, partially covering/changing\n   * it, hence 'masking' it.\n   * https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers\n   * @example {Localized name of the Opcode} PH1\n   * @example {0} PH2\n   */\n  sOpcodeSMask: '{PH1} (Opcode {PH2}, mask)',\n  /**\n   * @description Text in Resource Web Socket Frame View of the Network panel. Displays which Opcode\n   * is relevant to a particular operation.\n   * @example {Localized name of the Opcode} PH1\n   * @example {0} PH2\n   */\n  sOpcodeS: '{PH1} (Opcode {PH2})',\n  /**\n   * @description Op codes continuation frame of map in Resource Web Socket Frame View of the Network panel\n   */\n  continuationFrame: 'Continuation Frame',\n  /**\n   * @description Op codes text frame of map in Resource Web Socket Frame View of the Network panel\n   */\n  textMessage: 'Text Message',\n  /**\n   * @description Op codes binary frame of map in Resource Web Socket Frame View of the Network panel\n   */\n  binaryMessage: 'Binary Message',\n  /**\n   * @description Op codes continuation frame of map in Resource Web Socket Frame View of the Network panel indicating that the web socket connection has been closed.\n   */\n  connectionCloseMessage: 'Connection Close Message',\n  /**\n   * @description Op codes ping frame of map in Resource Web Socket Frame View of the Network panel\n   */\n  pingMessage: 'Ping Message',\n  /**\n   * @description Op codes pong frame of map in Resource Web Socket Frame View of the Network panel\n   */\n  pongMessage: 'Pong Message',\n  /**\n   * @description Data grid name for Web Socket Frame data grids\n   */\n  webSocketFrame: 'Web Socket Frame',\n  /**\n   * @description Text for something not available\n   */\n  na: 'N/A',\n  /**\n   * @description Example for placeholder text\n   */\n  filterUsingRegex: 'Filter using regex (example: (web)?socket)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/ResourceWebSocketFrameView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class ResourceWebSocketFrameView extends ResourceChunkView<SDK.NetworkRequest.WebSocketFrame> {\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super(\n        request, 'network-web-socket-message-filter', 'resource-web-socket-frame-split-view-state',\n        i18nString(UIStrings.webSocketFrame), i18nString(UIStrings.filterUsingRegex));\n    this.element.setAttribute('jslog', `${VisualLogging.pane('web-socket-messages').track({resize: true})}`);\n  }\n\n  override getRequestChunks(): SDK.NetworkRequest.WebSocketFrame[] {\n    return this.request.frames();\n  }\n  override createGridItem(frame: SDK.NetworkRequest.WebSocketFrame): DataGridItem {\n    return new ResourceFrameNode(frame);\n  }\n\n  override chunkFilter(frame: SDK.NetworkRequest.WebSocketFrame): boolean {\n    if (this.filterType && frame.type !== this.filterType) {\n      return false;\n    }\n    return !this.filterRegex || this.filterRegex.test(frame.text);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.refresh();\n    this.request.addEventListener(SDK.NetworkRequest.Events.WEBSOCKET_FRAME_ADDED, this.onWebSocketFrameAdded, this);\n  }\n\n  override willHide(): void {\n    this.request.removeEventListener(SDK.NetworkRequest.Events.WEBSOCKET_FRAME_ADDED, this.onWebSocketFrameAdded, this);\n  }\n\n  private onWebSocketFrameAdded(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.WebSocketFrame>): void {\n    this.chunkAdded(event.data);\n  }\n\n  static opCodeDescription(opCode: number, mask: boolean): string {\n    const localizedDescription = opCodeDescriptions[opCode] || (() => '');\n    if (mask) {\n      return i18nString(UIStrings.sOpcodeSMask, {PH1: localizedDescription(), PH2: opCode});\n    }\n    return i18nString(UIStrings.sOpcodeS, {PH1: localizedDescription(), PH2: opCode});\n  }\n}\n\nconst enum OpCodes {\n  CONTINUATION_FRAME = 0,\n  TEXT_FRAME = 1,\n  BINARY_FRAME = 2,\n  CONNECTION_CLOSE_FRAME = 8,\n  PING_FRAME = 9,\n  PONG_FRAME = 10,\n}\n\nconst opCodeDescriptions: Array<() => string> = (function(): Array<() => Common.UIString.LocalizedString> {\n  const map = [];\n  map[OpCodes.CONTINUATION_FRAME] = i18nLazyString(UIStrings.continuationFrame);\n  map[OpCodes.TEXT_FRAME] = i18nLazyString(UIStrings.textMessage);\n  map[OpCodes.BINARY_FRAME] = i18nLazyString(UIStrings.binaryMessage);\n  map[OpCodes.CONNECTION_CLOSE_FRAME] = i18nLazyString(UIStrings.connectionCloseMessage);\n  map[OpCodes.PING_FRAME] = i18nLazyString(UIStrings.pingMessage);\n  map[OpCodes.PONG_FRAME] = i18nLazyString(UIStrings.pongMessage);\n  return map;\n})();\n\nclass ResourceFrameNode extends DataGridItem {\n  readonly frame: SDK.NetworkRequest.WebSocketFrame;\n  private readonly isTextFrame: boolean;\n  private dataTextInternal: string;\n  private binaryViewInternal: BinaryResourceView|null;\n\n  constructor(frame: SDK.NetworkRequest.WebSocketFrame) {\n    let length = String(frame.text.length);\n    const time = new Date(frame.time * 1000);\n    const timeText = ('0' + time.getHours()).substr(-2) + ':' + ('0' + time.getMinutes()).substr(-2) + ':' +\n        ('0' + time.getSeconds()).substr(-2) + '.' + ('00' + time.getMilliseconds()).substr(-3);\n    const timeNode = document.createElement('div');\n    UI.UIUtils.createTextChild(timeNode, timeText);\n    UI.Tooltip.Tooltip.install(timeNode, time.toLocaleString());\n\n    let dataText: string = frame.text;\n    let description = ResourceWebSocketFrameView.opCodeDescription(frame.opCode, frame.mask);\n    const isTextFrame = frame.opCode === OpCodes.TEXT_FRAME;\n\n    if (frame.type === SDK.NetworkRequest.WebSocketFrameType.Error) {\n      description = dataText;\n      length = i18nString(UIStrings.na);\n\n    } else if (isTextFrame) {\n      description = dataText;\n\n    } else if (frame.opCode === OpCodes.BINARY_FRAME) {\n      length = i18n.ByteUtilities.bytesToString(Platform.StringUtilities.base64ToSize(frame.text));\n      description = opCodeDescriptions[frame.opCode]();\n\n    } else {\n      dataText = description;\n    }\n\n    super({data: description, length, time: timeNode});\n\n    this.frame = frame;\n    this.isTextFrame = isTextFrame;\n    this.dataTextInternal = dataText;\n\n    this.binaryViewInternal = null;\n  }\n\n  override createCells(element: Element): void {\n    element.classList.toggle(\n        'resource-chunk-view-row-error', this.frame.type === SDK.NetworkRequest.WebSocketFrameType.Error);\n    element.classList.toggle(\n        'resource-chunk-view-row-send', this.frame.type === SDK.NetworkRequest.WebSocketFrameType.Send);\n    element.classList.toggle(\n        'resource-chunk-view-row-receive', this.frame.type === SDK.NetworkRequest.WebSocketFrameType.Receive);\n    super.createCells(element);\n  }\n\n  override nodeSelfHeight(): number {\n    return 21;\n  }\n\n  override dataText(): string {\n    return this.dataTextInternal;\n  }\n\n  override binaryView(): BinaryResourceView|null {\n    if (this.isTextFrame || this.frame.type === SDK.NetworkRequest.WebSocketFrameType.Error) {\n      return null;\n    }\n\n    if (!this.binaryViewInternal) {\n      if (this.dataTextInternal.length > 0) {\n        this.binaryViewInternal = new BinaryResourceView(\n            TextUtils.StreamingContentData.StreamingContentData.from(\n                new TextUtils.ContentData.ContentData(this.dataTextInternal, true, 'applicaiton/octet-stream')),\n            Platform.DevToolsPath.EmptyUrlString, Common.ResourceType.resourceTypes.WebSocket);\n      }\n    }\n    return this.binaryViewInternal;\n  }\n\n  override getTime(): number {\n    return this.frame.time;\n  }\n}\n", "// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008, 2009 Anthony Ricaud <rik@webkit.org>\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\n\nconst UIStrings = {\n  /**\n   * @description Latency download total format in Network Time Calculator of the Network panel\n   * @example {20ms} PH1\n   * @example {20ms} PH2\n   * @example {40ms} PH3\n   */\n  sLatencySDownloadSTotal: '{PH1} latency, {PH2} download ({PH3} total)',\n  /**\n   * @description Latency format in Network Time Calculator of the Network panel\n   * @example {20ms} PH1\n   */\n  sLatency: '{PH1} latency',\n  /**\n   * @description Duration of the download in ms/s shown for a completed network request.\n   * @example {5ms} PH1\n   */\n  sDownload: '{PH1} download',\n  /**\n   * @description From service worker format in Network Time Calculator of the Network panel\n   * @example {20ms latency} PH1\n   */\n  sFromServiceworker: '{PH1} (from `ServiceWorker`)',\n  /**\n   * @description From cache format in Network Time Calculator of the Network panel\n   * @example {20ms latency} PH1\n   */\n  sFromCache: '{PH1} (from cache)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkTimeCalculator.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface Label {\n  left: string;\n  right: string;\n  tooltip?: string;\n}\n\nexport class NetworkTimeBoundary {\n  minimum: number;\n  maximum: number;\n  constructor(minimum: number, maximum: number) {\n    this.minimum = minimum;\n    this.maximum = maximum;\n  }\n\n  equals(other: NetworkTimeBoundary): boolean {\n    return (this.minimum === other.minimum) && (this.maximum === other.maximum);\n  }\n}\n\nexport class NetworkTimeCalculator extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements\n    PerfUI.TimelineGrid.Calculator {\n  #minimumBoundary = -1;\n  #maximumBoundary = -1;\n  readonly #boundaryChangedEventThrottler = new Common.Throttler.Throttler(0);\n  #window: NetworkTimeBoundary|null = null;\n  #workingArea?: number;\n\n  startAtZero: boolean;\n\n  constructor(startAtZero: boolean) {\n    super();\n    this.startAtZero = startAtZero;\n  }\n\n  setWindow(window: NetworkTimeBoundary|null): void {\n    this.#window = window;\n    this.boundaryChanged();\n  }\n\n  computePosition(time: number): number {\n    return (time - this.minimumBoundary()) / this.boundarySpan() * (this.#workingArea || 0);\n  }\n\n  formatValue(value: number, precision?: number): string {\n    return i18n.TimeUtilities.secondsToString(value, Boolean(precision));\n  }\n\n  minimumBoundary(): number {\n    return this.#window ? this.#window.minimum : this.#minimumBoundary;\n  }\n\n  zeroTime(): number {\n    return this.#minimumBoundary;\n  }\n\n  maximumBoundary(): number {\n    return this.#window ? this.#window.maximum : this.#maximumBoundary;\n  }\n\n  boundary(): NetworkTimeBoundary {\n    return new NetworkTimeBoundary(this.minimumBoundary(), this.maximumBoundary());\n  }\n\n  boundarySpan(): number {\n    return this.maximumBoundary() - this.minimumBoundary();\n  }\n\n  reset(): void {\n    this.#minimumBoundary = -1;\n    this.#maximumBoundary = -1;\n    this.boundaryChanged();\n  }\n\n  value(): number {\n    return 0;\n  }\n\n  setDisplayWidth(clientWidth: number): void {\n    this.#workingArea = clientWidth;\n  }\n\n  computeBarGraphPercentages(request: SDK.NetworkRequest.NetworkRequest): {\n    start: number,\n    middle: number,\n    end: number,\n  } {\n    let start;\n    let middle;\n    let end;\n    if (request.startTime !== -1) {\n      start = ((request.startTime - this.minimumBoundary()) / this.boundarySpan()) * 100;\n    } else {\n      start = 0;\n    }\n\n    if (request.responseReceivedTime !== -1) {\n      middle = ((request.responseReceivedTime - this.minimumBoundary()) / this.boundarySpan()) * 100;\n    } else {\n      middle = (this.startAtZero ? start : 100);\n    }\n\n    if (request.endTime !== -1) {\n      end = ((request.endTime - this.minimumBoundary()) / this.boundarySpan()) * 100;\n    } else {\n      end = (this.startAtZero ? middle : 100);\n    }\n\n    if (this.startAtZero) {\n      end -= start;\n      middle -= start;\n      start = 0;\n    }\n\n    return {start, middle, end};\n  }\n\n  boundaryChanged(): void {\n    void this.#boundaryChangedEventThrottler.schedule(async () => {\n      this.dispatchEventToListeners(Events.BOUNDARIES_CHANGED);\n    });\n  }\n\n  updateBoundariesForEventTime(eventTime: number): void {\n    if (eventTime === -1 || this.startAtZero) {\n      return;\n    }\n\n    if (this.#maximumBoundary === undefined || eventTime > this.#maximumBoundary) {\n      this.#maximumBoundary = eventTime;\n      this.boundaryChanged();\n    }\n  }\n\n  computeBarGraphLabels(request: SDK.NetworkRequest.NetworkRequest): Label {\n    let rightLabel = '';\n    if (request.responseReceivedTime !== -1 && request.endTime !== -1) {\n      rightLabel = i18n.TimeUtilities.secondsToString(request.endTime - request.responseReceivedTime);\n    }\n\n    const hasLatency = request.latency > 0;\n    const leftLabel = hasLatency ? i18n.TimeUtilities.secondsToString(request.latency) : rightLabel;\n\n    if (request.timing) {\n      return {left: leftLabel, right: rightLabel, tooltip: undefined};\n    }\n\n    let tooltip;\n    if (hasLatency && rightLabel) {\n      const total = i18n.TimeUtilities.secondsToString(request.duration);\n      tooltip = i18nString(UIStrings.sLatencySDownloadSTotal, {PH1: leftLabel, PH2: rightLabel, PH3: total});\n    } else if (hasLatency) {\n      tooltip = i18nString(UIStrings.sLatency, {PH1: leftLabel});\n    } else if (rightLabel) {\n      tooltip = i18nString(UIStrings.sDownload, {PH1: rightLabel});\n    }\n\n    if (request.fetchedViaServiceWorker) {\n      tooltip = i18nString(UIStrings.sFromServiceworker, {PH1: String(tooltip)});\n    } else if (request.cached()) {\n      tooltip = i18nString(UIStrings.sFromCache, {PH1: String(tooltip)});\n    }\n    return {left: leftLabel, right: rightLabel, tooltip};\n  }\n\n  updateBoundaries(request: SDK.NetworkRequest.NetworkRequest): void {\n    const lowerBound = this.lowerBound(request);\n    const upperBound = this.upperBound(request);\n    let changed = false;\n    if (lowerBound !== -1 || this.startAtZero) {\n      changed = this.extendBoundariesToIncludeTimestamp(this.startAtZero ? 0 : lowerBound);\n    }\n    if (upperBound !== -1) {\n      changed = this.extendBoundariesToIncludeTimestamp(upperBound) || changed;\n    }\n    if (changed) {\n      this.boundaryChanged();\n    }\n  }\n\n  extendBoundariesToIncludeTimestamp(timestamp: number): boolean {\n    const previousMinimumBoundary = this.#minimumBoundary;\n    const previousMaximumBoundary = this.#maximumBoundary;\n    const minOffset = MINIMUM_SPREAD;\n    if (this.#minimumBoundary === -1 || this.#maximumBoundary === -1) {\n      this.#minimumBoundary = timestamp;\n      this.#maximumBoundary = timestamp + minOffset;\n    } else {\n      this.#minimumBoundary = Math.min(timestamp, this.#minimumBoundary);\n      this.#maximumBoundary = Math.max(timestamp, this.#minimumBoundary + minOffset, this.#maximumBoundary);\n    }\n    return previousMinimumBoundary !== this.#minimumBoundary || previousMaximumBoundary !== this.#maximumBoundary;\n  }\n\n  lowerBound(_request: SDK.NetworkRequest.NetworkRequest): number {\n    return 0;\n  }\n\n  upperBound(_request: SDK.NetworkRequest.NetworkRequest): number {\n    return 0;\n  }\n}\n\nconst MINIMUM_SPREAD = 0.1;\n\nexport const enum Events {\n  BOUNDARIES_CHANGED = 'BoundariesChanged',\n}\n\nexport interface EventTypes {\n  [Events.BOUNDARIES_CHANGED]: void;\n}\n\nexport class NetworkTransferTimeCalculator extends NetworkTimeCalculator {\n  constructor() {\n    super(false);\n  }\n\n  override formatValue(value: number, precision?: number): string {\n    return i18n.TimeUtilities.secondsToString(value - this.zeroTime(), Boolean(precision));\n  }\n\n  override lowerBound(request: SDK.NetworkRequest.NetworkRequest): number {\n    return request.issueTime();\n  }\n\n  override upperBound(request: SDK.NetworkRequest.NetworkRequest): number {\n    return request.endTime;\n  }\n}\n\nexport class NetworkTransferDurationCalculator extends NetworkTimeCalculator {\n  constructor() {\n    super(true);\n  }\n\n  override formatValue(value: number, precision?: number): string {\n    return i18n.TimeUtilities.secondsToString(value, Boolean(precision));\n  }\n\n  override upperBound(request: SDK.NetworkRequest.NetworkRequest): number {\n    return request.duration;\n  }\n}\n", "// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008, 2009 Anthony Ricaud <rik@webkit.org>\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as HAR from '../../models/har/har.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as Sources from '../../panels/sources/sources.js';\nimport * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as RenderCoordinator from '../../ui/components/render_coordinator/render_coordinator.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {\n  Events,\n  type EventTypes,\n  NetworkGroupNode,\n  type NetworkLogViewInterface,\n  type NetworkNode,\n  NetworkRequestNode,\n  RequestPanelBehavior,\n} from './NetworkDataGridNode.js';\nimport {NetworkFrameGrouper} from './NetworkFrameGrouper.js';\nimport networkLogViewStyles from './networkLogView.css.js';\nimport {NetworkLogViewColumns} from './NetworkLogViewColumns.js';\nimport {\n  NetworkTimeBoundary,\n  type NetworkTimeCalculator,\n  NetworkTransferDurationCalculator,\n  NetworkTransferTimeCalculator,\n} from './NetworkTimeCalculator.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Network Log View of the Network panel\n   */\n  invertFilter: 'Invert',\n  /**\n   * @description Tooltip for the 'invert' checkbox in the Network panel.\n   */\n  invertsFilter: 'Inverts the search filter',\n  /**\n   * @description Text in Network Log View of the Network panel\n   */\n  hideDataUrls: 'Hide data URLs',\n  /**\n   * @description Data urlfilter ui element title in Network Log View of the Network panel\n   */\n  hidesDataAndBlobUrls: 'Hide \\'data:\\' and \\'blob:\\' URLs',\n  /**\n   * @description Label for a filter in the Network panel\n   */\n  chromeExtensions: 'Hide extension URLs',\n  /**\n   * @description Tooltip for a filter in the Network panel\n   */\n  hideChromeExtension: 'Hide \\'chrome-extension://\\' URLs',\n  /**\n   * @description Aria accessible name in Network Log View of the Network panel\n   */\n  requestTypesToInclude: 'Request types to include',\n  /**\n   * @description Label for a checkbox in the Network panel. When checked, only requests with\n   *             blocked response cookies are shown.\n   */\n  hasBlockedCookies: 'Blocked response cookies',\n  /**\n   * @description Tooltip for a checkbox in the Network panel. The response to a network request may include a\n   *             cookie (https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies). Such response cookies can\n   *             be malformed or otherwise invalid and the browser may choose to ignore or not accept invalid cookies.\n   */\n  onlyShowRequestsWithBlockedCookies: 'Show only requests with blocked response cookies',\n  /**\n   * @description Label for a filter in the Network panel\n   */\n  blockedRequests: 'Blocked requests',\n  /**\n   * @description Tooltip for a filter in the Network panel\n   */\n  onlyShowBlockedRequests: 'Show only blocked requests',\n  /**\n   * @description Label for a filter in the Network panel\n   */\n  thirdParty: '3rd-party requests',\n  /**\n   * @description Tooltip for a filter in the Network panel\n   */\n  onlyShowThirdPartyRequests: 'Show only requests with origin different from page origin',\n  /**\n   * @description Label for a filter in the Network panel\n   */\n  ippRequests: 'IP Protected requests',\n  /**\n   * @description Tooltip for a filter in the Network panel\n   */\n  onlyShowIPProtectedRequests: 'Show only requests sent to IP Protection proxies. Has no effect in regular browsing.',\n  /**\n   * @description Text that appears when user drag and drop something (for example, a file) in Network Log View of the Network panel\n   */\n  dropHarFilesHere: 'Drop HAR files here',\n  /**\n   * @description Recording text content in Network Log View of the Network panel\n   */\n  recordingNetworkActivity: 'Currently recording network activity',\n  /**\n   * @description Shown in the Network Log View of the Network panel when the user has not yet\n   *             recorded any network activity. This is an instruction to the user to reload the page in order to\n   *             show network activity in the current UI.\n   * @example {Reload page} PH1\n   * @example {Ctrl + R} PH2\n   */\n  performARequestOrHitSToRecordThe:\n      'Perform a request or reload the page by using the \"{PH1}\" button or by pressing {PH2}.',\n  /**\n   * @description Shown in the Network Log View of the Network panel when the user has not yet\n   * recorded any network activity. This is an instruction to the user to start recording in order to\n   * show network activity in the current UI.\n   * @example {Start recording} PH1\n   * @example {Ctrl + E} PH2\n   */\n  recordToDisplayNetworkActivity:\n      'Record network log to display network activity by using the \"{PH1}\" button or by pressing {PH2}.',\n  /**\n   * @description Label of a button in the Network Log View of the Network panel.\n   */\n  reloadPage: 'Reload page',\n  /**\n   * @description Label of a button in the Network Log View of the Network panel.\n   */\n  startRecording: 'Start recording',\n  /**\n   * @description Shown in the Network Log View of the Network panel when the user has not yet\n   *             recorded any network activity.\n   */\n  noNetworkActivityRecorded: 'No network activity recorded',\n  /**\n   * @description Text to announce to screen readers that network data is available.\n   */\n  networkDataAvailable: 'Network Data Available',\n  /**\n   * @description Text in Network Log View of the Network panel\n   * @example {3} PH1\n   * @example {5} PH2\n   */\n  sSRequests: '{PH1} / {PH2} requests',\n  /**\n   * @description Message in the summary toolbar at the bottom of the Network log that shows the compressed size of the\n   * resources transferred during a selected time frame over the compressed size of all resources transferred during\n   * the whole network log.\n   * @example {5 B} PH1\n   * @example {10 B} PH2\n   */\n  sSTransferred: '{PH1} / {PH2} transferred',\n  /**\n   * @description Message in a tooltip that shows the compressed size of the resources transferred during a selected\n   * time frame over the compressed size of all resources transferred during the whole network log.\n   * @example {10} PH1\n   * @example {15} PH2\n   */\n  sBSBTransferredOverNetwork: '{PH1} B / {PH2} B transferred over network',\n  /**\n   * @description Text in Network Log View of the Network panel. Appears when a particular network\n   * resource is selected by the user. Shows how large the selected resource was (PH1) out of the\n   * total size (PH2).\n   * @example {40MB} PH1\n   * @example {50MB} PH2\n   */\n  sSResources: '{PH1} / {PH2} resources',\n  /**\n   * @description Text in Network Log View of the Network panel\n   * @example {40} PH1\n   * @example {50} PH2\n   */\n  sBSBResourcesLoadedByThePage: '{PH1} B / {PH2} B resources loaded by the page',\n  /**\n   * @description Text in Network Log View of the Network panel\n   * @example {6} PH1\n   */\n  sRequests: '{PH1} requests',\n  /**\n   * @description Message in the summary toolbar at the bottom of the Network log that shows the compressed size of\n   * all resources transferred over network during a network activity log.\n   * @example {4 B} PH1\n   */\n  sTransferred: '{PH1} transferred',\n  /**\n   * @description Message in a tooltip that shows the compressed size of all resources transferred over network during\n   * a network activity log.\n   * @example {4} PH1\n   */\n  sBTransferredOverNetwork: '{PH1} B transferred over network',\n  /**\n   * @description Text in Network Log View of the Network panel\n   * @example {4} PH1\n   */\n  sResources: '{PH1} resources',\n  /**\n   * @description Text in Network Log View of the Network panel\n   * @example {10} PH1\n   */\n  sBResourcesLoadedByThePage: '{PH1} B resources loaded by the page',\n  /**\n   * @description Text in Network Log View of the Network panel\n   * @example {120ms} PH1\n   */\n  finishS: 'Finish: {PH1}',\n  /**\n   * @description Text in Network Log View of the Network panel\n   * @example {3000ms} PH1\n   */\n  domcontentloadedS: 'DOMContentLoaded: {PH1}',\n  /**\n   * @description Text in Network Log View of the Network panel\n   * @example {40ms} PH1\n   */\n  loadS: 'Load: {PH1}',\n  /**\n   * @description Text for copying\n   */\n  copy: 'Copy',\n  /**\n   * @description A context menu command in the Network panel, for copying the URL of the selected request to the clipboard.\n   */\n  copyURL: 'Copy URL',\n  /**\n   * @description Text in Network Log View of the Network panel\n   */\n  copyRequestHeaders: 'Copy request headers',\n  /**\n   * @description Text in Network Log View of the Network panel\n   */\n  copyResponseHeaders: 'Copy response headers',\n  /**\n   * @description Text in Network Log View of the Network panel\n   */\n  copyResponse: 'Copy response',\n  /**\n   * @description Text in Network Log View of the Network panel\n   */\n  copyStacktrace: 'Copy stack trace',\n  /**\n   * @description A context menu command in the Network panel, for copying to the clipboard.\n   * PowerShell refers to the format the data will be copied as.\n   */\n  copyAsPowershell: 'Copy as `PowerShell`',\n  /**\n   * @description A context menu command in the Network panel, for copying to the clipboard. 'fetch'\n   * refers to the format the data will be copied as, which is compatible with the fetch web API.\n   */\n  copyAsFetch: 'Copy as `fetch`',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   * the developer's clipboard. The command allows the developer to replay this specific network\n   * request in Node.js, a desktop application/framework. 'Node.js fetch' is a noun phrase for the\n   * type of request that will be copied.\n   */\n  copyAsNodejsFetch: 'Copy as `fetch` (`Node.js`)',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with cURL (a program, not\n   *translatable).\n   */\n  copyAsCurlCmd: 'Copy as `cURL` (`cmd`)',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with a Bash script.\n   */\n  copyAsCurlBash: 'Copy as `cURL` (`bash`)',\n  /**\n   * @description A context menu command in the Network panel, for copying the URLs of all requestes to the clipboard.\n   */\n  copyAllURLs: 'Copy all URLs',\n  /**\n   * @description A context menu command in the Network panel, for copying the URLs of all requestes\n   * (after applying the Network filter) to the clipboard.\n   */\n  copyAllListedURLs: 'Copy all listed URLs',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with a PowerShell script to\n   *represent all network requests.\n   */\n  copyAllAsPowershell: 'Copy all as `PowerShell`',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with a PowerShell script to\n   *represent all network requests (after applying the Network filter).\n   */\n  copyAllListedAsPowershell: 'Copy all listed as `PowerShell`',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with a 'fetch' command (fetch\n   *should not be translated) to represent all network requests.\n   */\n  copyAllAsFetch: 'Copy all as `fetch`',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with a 'fetch' command (fetch\n   *should not be translated) to represent all network requests (after applying the Network filter).\n   */\n  copyAllListedAsFetch: 'Copy all listed as `fetch`',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with a Node.js 'fetch' command\n   *(fetch and Node.js should not be translated) to represent all network requests.\n   */\n  copyAllAsNodejsFetch: 'Copy all as `fetch` (`Node.js`)',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with a Node.js 'fetch' command\n   *(fetch and Node.js should not be translated) to represent all network requests (after applying\n   *the Network filter).\n   */\n  copyAllListedAsNodejsFetch: 'Copy all listed as `fetch` (`Node.js`)',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with cURL (a program, not\n   *translatable) to represent all network requests.\n   */\n  copyAllAsCurlCmd: 'Copy all as `cURL` (`cmd`)',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with cURL (a program, not\n   *translatable) to represent all network requests (after applying the Network filter).\n   */\n  copyAllListedAsCurlCmd: 'Copy all listed as `cURL` (`cmd`)',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with a Bash script to represent\n   *all network requests.\n   */\n  copyAllAsCurlBash: 'Copy all as `cURL` (`bash`)',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with a Bash script to represent\n   *all network requests (after applying the Network filter).\n   */\n  copyAllListedAsCurlBash: 'Copy all listed as `cURL` (`bash`)',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with cURL (a program, not\n   *translatable).\n   */\n  copyAsCurl: 'Copy as `cURL`',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with cURL (a program, not\n   *translatable) to represent all network requests.\n   */\n  copyAllAsCurl: 'Copy all as `cURL`',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies a command to\n   *the clipboard. It will copy the command in the format compatible with cURL (a program, not\n   *translatable) to represent all network requests (after applying the Network filter).\n   */\n  copyAllListedAsCurl: 'Copy all listed as `cURL`',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies data to the\n   * clipboard. It will copy the data in the HAR (not translatable) format and scrub all potentially\n   * sensitive data from the network requests. 'all' refers to every network request that is currently\n   * shown.\n   */\n  copyAllAsHarSanitized: 'Copy all as `HAR` (sanitized)',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies data to the\n   * clipboard. It will copy the data in the HAR (not translatable) format and include potentially\n   * sensitive data from the network requests. 'all' refers to every network request that is currently\n   * shown.\n   */\n  copyAllAsHarWithSensitiveData: 'Copy all as `HAR` (with sensitive data)',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies data to the\n   * clipboard. It will copy the data in the HAR (not translatable) format and scrub all potentially\n   * sensitive data from the network requests. 'all' refers to every network request that is currently\n   * shown (after applying the Network filter).\n   */\n  copyAllListedAsHarSanitized: 'Copy all listed as `HAR` (sanitized)',\n  /**\n   * @description Text in Network Log View of the Network panel. An action that copies data to the\n   * clipboard. It will copy the data in the HAR (not translatable) format and include potentially\n   * sensitive data from the network requests. 'all' refers to every network request that is currently\n   * shown (after applying the Network filter).\n   */\n  copyAllListedAsHarWithSensitiveData: 'Copy all listed as `HAR` (with sensitive data)',\n  /**\n   * @description A context menu item in the Network Log View of the Network panel\n   */\n  clearBrowserCache: 'Clear browser cache',\n  /**\n   * @description A context menu item in the Network Log View of the Network panel\n   */\n  clearBrowserCookies: 'Clear browser cookies',\n  /**\n   * @description A context menu item in the Network Log View of the Network panel\n   */\n  blockRequestUrl: 'Block request URL',\n  /**\n   * @description A context menu item in the Network Log View of the Network panel\n   * @example {example.com} PH1\n   */\n  unblockS: 'Unblock {PH1}',\n  /**\n   * @description A context menu item in the Network Log View of the Network panel\n   */\n  blockRequestDomain: 'Block request domain',\n  /**\n   * @description Text to replay an XHR request\n   */\n  replayXhr: 'Replay XHR',\n  /**\n   * @description Text in Network Log View of the Network panel\n   */\n  areYouSureYouWantToClearBrowser: 'Are you sure you want to clear browser cache?',\n  /**\n   * @description Text in Network Log View of the Network panel\n   */\n  areYouSureYouWantToClearBrowserCookies: 'Are you sure you want to clear browser cookies?',\n  /**\n   * @description A context menu item in the Network Log View of the Network panel\n   * for creating a header override\n   */\n  overrideHeaders: 'Override headers',\n  /**\n   * @description Tooltip for the Show only/Hide requests dropdown of the filterbar\n   */\n  showOnlyHideRequests: 'Show only/hide requests',\n  /**\n   * @description Text for the Show only/Hide requests dropdown button of the filterbar\n   */\n  moreFilters: 'More filters',\n  /**\n   * @description Text of a context menu item to redirect to the AI assistance panel and to start a chat.\n   */\n  startAChat: 'Start a chat',\n  /**\n   * @description Context menu item in Network panel to explain the purpose of a request via AI.\n   */\n  explainPurpose: 'Explain purpose',\n  /**\n   * @description Context menu item in Network panel to explain why a request is slow via AI.\n   */\n  explainSlowness: 'Explain slowness',\n  /**\n   * @description Context menu item in Network panel to explain why a request is failing via AI.\n   */\n  explainFailures: 'Explain failures',\n  /**\n   * @description Context menu item in Network panel to assess security headers of a request via AI.\n   */\n  assessSecurityHeaders: 'Assess security headers',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkLogView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst enum FetchStyle {\n  BROWSER = 0,\n  NODE_JS = 1,\n}\n\nexport class NetworkLogView extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox)\n    implements SDK.TargetManager.SDKModelObserver<SDK.NetworkManager.NetworkManager>, NetworkLogViewInterface {\n  private readonly networkInvertFilterSetting: Common.Settings.Setting<boolean>;\n  private readonly networkHideDataURLSetting: Common.Settings.Setting<boolean>;\n  private readonly networkHideChromeExtensions: Common.Settings.Setting<boolean>;\n  private readonly networkShowBlockedCookiesOnlySetting: Common.Settings.Setting<boolean>;\n  private readonly networkOnlyBlockedRequestsSetting: Common.Settings.Setting<boolean>;\n  private readonly networkOnlyThirdPartySetting: Common.Settings.Setting<boolean>;\n  private readonly networkResourceTypeFiltersSetting: Common.Settings.Setting<Record<string, boolean>>;\n  private readonly networkShowOptionsToGenerateHarWithSensitiveData: Common.Settings.Setting<boolean>;\n  private readonly networkOnlyIPProtectedRequestsSetting: Common.Settings.Setting<boolean>;\n  private readonly progressBarContainer: Element;\n  private readonly networkLogLargeRowsSetting: Common.Settings.Setting<boolean>;\n  private rowHeightInternal: number;\n  private readonly timeCalculatorInternal: NetworkTransferTimeCalculator;\n  private readonly durationCalculator: NetworkTransferDurationCalculator;\n  private calculatorInternal: NetworkTransferTimeCalculator;\n  private readonly columnsInternal: NetworkLogViewColumns;\n  private staleRequests: Set<SDK.NetworkRequest.NetworkRequest>;\n  private mainRequestLoadTime: number;\n  private mainRequestDOMContentLoadedTime: number;\n  private filters: Filter[];\n  private timeFilter: Filter|null;\n  private hoveredNodeInternal: NetworkNode|null;\n  private recordingHint: UI.EmptyWidget.EmptyWidget|null;\n  private highlightedNode: NetworkRequestNode|null;\n  private readonly linkifierInternal: Components.Linkifier.Linkifier;\n  private recording: boolean;\n  private needsRefresh: boolean;\n  private readonly headerHeightInternal: number;\n  private readonly groupLookups: Map<string, GroupLookupInterface>;\n  private activeGroupLookup: GroupLookupInterface|null;\n  private readonly textFilterUI: UI.FilterBar.TextFilterUI;\n  private readonly invertFilterUI: UI.FilterBar.CheckboxFilterUI;\n  private readonly moreFiltersDropDownUI: MoreFiltersDropDownUI|undefined;\n  private readonly resourceCategoryFilterUI: UI.FilterBar.NamedBitSetFilterUI;\n  private readonly filterParser: TextUtils.TextUtils.FilterParser;\n  private readonly suggestionBuilder: UI.FilterSuggestionBuilder.FilterSuggestionBuilder;\n  private dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<NetworkNode>;\n  private readonly summaryToolbarInternal: UI.Toolbar.Toolbar;\n  private readonly filterBar: UI.FilterBar.FilterBar;\n  private readonly textFilterSetting: Common.Settings.Setting<string>;\n  private networkRequestToNode: WeakMap<SDK.NetworkRequest.NetworkRequest, NetworkRequestNode>;\n\n  constructor(\n      filterBar: UI.FilterBar.FilterBar, progressBarContainer: Element,\n      networkLogLargeRowsSetting: Common.Settings.Setting<boolean>) {\n    super();\n    this.registerRequiredCSS(networkLogViewStyles);\n    this.setMinimumSize(50, 64);\n\n    this.element.id = 'network-container';\n    this.element.classList.add('no-node-selected');\n\n    this.networkRequestToNode = new WeakMap();\n\n    this.networkInvertFilterSetting = Common.Settings.Settings.instance().createSetting('network-invert-filter', false);\n    this.networkHideDataURLSetting = Common.Settings.Settings.instance().createSetting('network-hide-data-url', false);\n    this.networkHideChromeExtensions =\n        Common.Settings.Settings.instance().createSetting('network-hide-chrome-extensions', false);\n    this.networkShowBlockedCookiesOnlySetting =\n        Common.Settings.Settings.instance().createSetting('network-show-blocked-cookies-only-setting', false);\n    this.networkOnlyBlockedRequestsSetting =\n        Common.Settings.Settings.instance().createSetting('network-only-blocked-requests', false);\n    this.networkOnlyThirdPartySetting =\n        Common.Settings.Settings.instance().createSetting('network-only-third-party-setting', false);\n    this.networkOnlyIPProtectedRequestsSetting =\n        Common.Settings.Settings.instance().createSetting('network-only-ip-protected-requests', false);\n    this.networkResourceTypeFiltersSetting =\n        Common.Settings.Settings.instance().createSetting('network-resource-type-filters', {});\n    this.networkShowOptionsToGenerateHarWithSensitiveData = Common.Settings.Settings.instance().createSetting(\n        'network.show-options-to-generate-har-with-sensitive-data', false);\n\n    this.progressBarContainer = progressBarContainer;\n    this.networkLogLargeRowsSetting = networkLogLargeRowsSetting;\n    this.networkLogLargeRowsSetting.addChangeListener(updateRowHeight.bind(this), this);\n\n    function updateRowHeight(this: NetworkLogView): void {\n      this.rowHeightInternal = Boolean(this.networkLogLargeRowsSetting.get()) ? 41 : 21;\n    }\n    this.rowHeightInternal = 0;\n    updateRowHeight.call(this);\n\n    this.timeCalculatorInternal = new NetworkTransferTimeCalculator();\n    this.durationCalculator = new NetworkTransferDurationCalculator();\n    this.calculatorInternal = this.timeCalculatorInternal;\n\n    this.columnsInternal = new NetworkLogViewColumns(\n        this, this.timeCalculatorInternal, this.durationCalculator, networkLogLargeRowsSetting);\n    this.columnsInternal.show(this.element);\n\n    this.staleRequests = new Set();\n    this.mainRequestLoadTime = -1;\n    this.mainRequestDOMContentLoadedTime = -1;\n\n    this.filters = [];\n    this.timeFilter = null;\n    this.hoveredNodeInternal = null;\n    this.recordingHint = null;\n    this.highlightedNode = null;\n\n    this.linkifierInternal = new Components.Linkifier.Linkifier();\n\n    this.recording = false;\n    this.needsRefresh = false;\n\n    this.headerHeightInternal = 0;\n\n    this.groupLookups = new Map();\n    this.groupLookups.set('Frame', new NetworkFrameGrouper(this));\n\n    this.activeGroupLookup = null;\n\n    this.textFilterUI = new UI.FilterBar.TextFilterUI();\n    this.textFilterUI.addEventListener(UI.FilterBar.FilterUIEvents.FILTER_CHANGED, this.filterChanged, this);\n    filterBar.addFilter(this.textFilterUI);\n\n    this.invertFilterUI = new UI.FilterBar.CheckboxFilterUI(\n        i18nString(UIStrings.invertFilter), true, this.networkInvertFilterSetting, 'invert-filter');\n    this.invertFilterUI.addEventListener(\n        UI.FilterBar.FilterUIEvents.FILTER_CHANGED, this.filterChanged.bind(this), this);\n    UI.Tooltip.Tooltip.install(this.invertFilterUI.element(), i18nString(UIStrings.invertsFilter));\n    filterBar.addFilter(this.invertFilterUI);\n    filterBar.addDivider();\n\n    const filterItems =\n        Object.entries(Common.ResourceType.resourceCategories).map(([key, category]) => ({\n                                                                     name: category.name,\n                                                                     label: () => category.shortTitle(),\n                                                                     title: category.title(),\n                                                                     jslogContext:\n                                                                         Platform.StringUtilities.toKebabCase(key),\n                                                                   }));\n    this.moreFiltersDropDownUI = new MoreFiltersDropDownUI();\n    this.moreFiltersDropDownUI.addEventListener(UI.FilterBar.FilterUIEvents.FILTER_CHANGED, this.filterChanged, this);\n    filterBar.addFilter(this.moreFiltersDropDownUI);\n\n    this.resourceCategoryFilterUI =\n        new UI.FilterBar.NamedBitSetFilterUI(filterItems, this.networkResourceTypeFiltersSetting);\n    UI.ARIAUtils.setLabel(this.resourceCategoryFilterUI.element(), i18nString(UIStrings.requestTypesToInclude));\n    this.resourceCategoryFilterUI.addEventListener(\n        UI.FilterBar.FilterUIEvents.FILTER_CHANGED, this.filterChanged.bind(this), this);\n    filterBar.addFilter(this.resourceCategoryFilterUI);\n\n    this.filterParser = new TextUtils.TextUtils.FilterParser(searchKeys);\n    this.suggestionBuilder =\n        new UI.FilterSuggestionBuilder.FilterSuggestionBuilder(searchKeys, NetworkLogView.sortSearchValues);\n    this.resetSuggestionBuilder();\n\n    this.dataGrid = this.columnsInternal.dataGrid();\n    this.setupDataGrid();\n    this.columnsInternal.sortByCurrentColumn();\n    filterBar.filterButton().addEventListener(\n        UI.Toolbar.ToolbarButton.Events.CLICK, this.dataGrid.scheduleUpdate.bind(this.dataGrid, true /* isFromUser */));\n\n    this.summaryToolbarInternal = this.element.createChild('devtools-toolbar', 'network-summary-bar');\n    this.summaryToolbarInternal.setAttribute('role', 'status');\n\n    new UI.DropTarget.DropTarget(\n        this.element, [UI.DropTarget.Type.File], i18nString(UIStrings.dropHarFilesHere), this.handleDrop.bind(this));\n\n    Common.Settings.Settings.instance()\n        .moduleSetting('network-color-code-resource-types')\n        .addChangeListener(this.invalidateAllItems.bind(this, false), this);\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.NetworkManager.NetworkManager, this, {scoped: true});\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(\n        Logs.NetworkLog.Events.RequestAdded, this.onRequestUpdated, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(\n        Logs.NetworkLog.Events.RequestUpdated, this.onRequestUpdated, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(\n        Logs.NetworkLog.Events.RequestRemoved, this.onRequestRemoved, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(Logs.NetworkLog.Events.Reset, this.reset, this);\n\n    this.updateGroupByFrame();\n    Common.Settings.Settings.instance()\n        .moduleSetting('network.group-by-frame')\n        .addChangeListener(() => this.updateGroupByFrame());\n\n    this.filterBar = filterBar;\n\n    this.textFilterSetting = Common.Settings.Settings.instance().createSetting('network-text-filter', '');\n    if (this.textFilterSetting.get()) {\n      this.textFilterUI.setValue(this.textFilterSetting.get());\n    }\n  }\n\n  private updateGroupByFrame(): void {\n    const value = Common.Settings.Settings.instance().moduleSetting('network.group-by-frame').get();\n    this.setGrouping(value ? 'Frame' : null);\n  }\n\n  private static sortSearchValues(key: string, values: string[]): void {\n    if (key === NetworkForward.UIFilter.FilterType.Priority) {\n      values.sort((a, b) => {\n        const aPriority = PerfUI.NetworkPriorities.uiLabelToNetworkPriority(a);\n        const bPriority = PerfUI.NetworkPriorities.uiLabelToNetworkPriority(b);\n        return PerfUI.NetworkPriorities.networkPriorityWeight(aPriority) -\n            PerfUI.NetworkPriorities.networkPriorityWeight(bPriority);\n      });\n    } else {\n      values.sort();\n    }\n  }\n\n  private static negativeFilter(filter: Filter, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return !filter(request);\n  }\n\n  private static requestPathFilter(regex: RegExp|null, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    if (!regex) {\n      return false;\n    }\n\n    return regex.test(request.path() + '/' + request.name());\n  }\n\n  private static subdomains(domain: string): string[] {\n    const result = [domain];\n    let indexOfPeriod = domain.indexOf('.');\n    while (indexOfPeriod !== -1) {\n      result.push('*' + domain.substring(indexOfPeriod));\n      indexOfPeriod = domain.indexOf('.', indexOfPeriod + 1);\n    }\n    return result;\n  }\n\n  private static createRequestDomainFilter(value: string): Filter {\n    const escapedPattern = value.split('*').map(Platform.StringUtilities.escapeForRegExp).join('.*');\n    return NetworkLogView.requestDomainFilter.bind(null, new RegExp('^' + escapedPattern + '$', 'i'));\n  }\n\n  private static requestDomainFilter(regex: RegExp, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return regex.test(request.domain);\n  }\n\n  private static runningRequestFilter(request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return !request.finished;\n  }\n\n  private static fromCacheRequestFilter(request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.cached();\n  }\n\n  private static interceptedByServiceWorkerFilter(request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.fetchedViaServiceWorker;\n  }\n\n  private static initiatedByServiceWorkerFilter(request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.initiatedByServiceWorker();\n  }\n\n  private static requestResponseHeaderFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.responseHeaderValue(value) !== undefined;\n  }\n\n  private static requestRequestHeaderFilter(headerName: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.requestHeaders().some(header => header.name.toLowerCase() === headerName.toLowerCase());\n  }\n\n  private static requestResponseHeaderSetCookieFilter(value: string, request: SDK.NetworkRequest.NetworkRequest):\n      boolean {\n    // Multiple Set-Cookie headers in the request are concatenated via space. Only\n    // filter via `includes` instead of strict equality.\n    return Boolean(request.responseHeaderValue('Set-Cookie')?.includes(value));\n  }\n\n  private static requestMethodFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.requestMethod === value;\n  }\n\n  private static requestPriorityFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.priority() === value;\n  }\n\n  private static requestMimeTypeFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.mimeType === value;\n  }\n\n  private static requestMixedContentFilter(\n      value: NetworkForward.UIFilter.MixedContentFilterValues, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    if (value === NetworkForward.UIFilter.MixedContentFilterValues.DISPLAYED) {\n      return request.mixedContentType === Protocol.Security.MixedContentType.OptionallyBlockable;\n    }\n    if (value === NetworkForward.UIFilter.MixedContentFilterValues.BLOCKED) {\n      return request.mixedContentType === Protocol.Security.MixedContentType.Blockable && request.wasBlocked();\n    }\n    if (value === NetworkForward.UIFilter.MixedContentFilterValues.BLOCK_OVERRIDDEN) {\n      return request.mixedContentType === Protocol.Security.MixedContentType.Blockable && !request.wasBlocked();\n    }\n    if (value === NetworkForward.UIFilter.MixedContentFilterValues.ALL) {\n      return request.mixedContentType !== Protocol.Security.MixedContentType.None;\n    }\n\n    return false;\n  }\n\n  private static requestSchemeFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.scheme === value;\n  }\n\n  private static requestCookieDomainFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.allCookiesIncludingBlockedOnes().some(cookie => cookie.domain() === value);\n  }\n\n  private static requestCookieNameFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.allCookiesIncludingBlockedOnes().some(cookie => cookie.name() === value);\n  }\n\n  private static requestCookiePathFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.allCookiesIncludingBlockedOnes().some(cookie => cookie.path() === value);\n  }\n\n  private static requestCookieValueFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.allCookiesIncludingBlockedOnes().some(cookie => cookie.value() === value);\n  }\n\n  private static requestSetCookieDomainFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.responseCookies.some(cookie => cookie.domain() === value);\n  }\n\n  private static requestSetCookieNameFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.responseCookies.some(cookie => cookie.name() === value);\n  }\n\n  private static requestSetCookieValueFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.responseCookies.some(cookie => cookie.value() === value);\n  }\n\n  private static requestSizeLargerThanFilter(value: number, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.transferSize >= value;\n  }\n\n  private static statusCodeFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return (String(request.statusCode)) === value;\n  }\n\n  private static hasOverridesFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    if (!value) {\n      return false;\n    }\n\n    if (value === overrideFilter.no) {\n      return request.overrideTypes.length === 0;\n    }\n\n    if (value === overrideFilter.yes) {\n      return request.overrideTypes.length > 0;\n    }\n\n    if (value === overrideFilter.content) {\n      return request.overrideTypes.includes('content');\n    }\n\n    if (value === overrideFilter.headers) {\n      return request.overrideTypes.includes('headers');\n    }\n\n    return request.overrideTypes.join(',').includes(value);\n  }\n\n  static getHTTPRequestsFilter(request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.parsedURL.isValid && (request.scheme in HTTPSchemas);\n  }\n\n  private static resourceTypeFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    return request.resourceType().name() === value;\n  }\n\n  private static requestUrlFilter(value: string, request: SDK.NetworkRequest.NetworkRequest): boolean {\n    const regex = new RegExp(Platform.StringUtilities.escapeForRegExp(value), 'i');\n    return regex.test(request.url());\n  }\n\n  private static requestTimeFilter(windowStart: number, windowEnd: number, request: SDK.NetworkRequest.NetworkRequest):\n      boolean {\n    if (request.issueTime() > windowEnd) {\n      return false;\n    }\n    if (request.endTime !== -1 && request.endTime < windowStart) {\n      return false;\n    }\n    return true;\n  }\n\n  private static copyRequestHeaders(request: SDK.NetworkRequest.NetworkRequest): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(request.requestHeadersText());\n  }\n\n  private static copyResponseHeaders(request: SDK.NetworkRequest.NetworkRequest): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(request.responseHeadersText);\n  }\n\n  private static async copyResponse(request: SDK.NetworkRequest.NetworkRequest): Promise<void> {\n    const contentData = await request.requestContentData();\n    let content: string;\n    if (TextUtils.ContentData.ContentData.isError(contentData)) {\n      content = '';\n    } else if (!contentData.isTextContent) {\n      content = contentData.asDataUrl() ?? '';\n    } else {\n      content = contentData.text;\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(content);\n  }\n\n  private handleDrop(dataTransfer: DataTransfer): void {\n    const items = dataTransfer.items;\n    if (!items.length) {\n      return;\n    }\n    const file = items[0].getAsFile();\n    if (file) {\n      void this.onLoadFromFile(file);\n    }\n  }\n\n  async onLoadFromFile(file: File): Promise<void> {\n    const outputStream = new Common.StringOutputStream.StringOutputStream();\n    const reader = new Bindings.FileUtils.ChunkedFileReader(file, /* chunkSize */ 10000000);\n    const success = await reader.read(outputStream);\n    if (!success) {\n      const error = reader.error();\n      if (error) {\n        this.harLoadFailed(error.message);\n      }\n      return;\n    }\n    let harRoot;\n    try {\n      // HARRoot and JSON.parse might throw.\n      harRoot = new HAR.HARFormat.HARRoot(JSON.parse(outputStream.data()));\n    } catch (e) {\n      this.harLoadFailed(e);\n      return;\n    }\n    Logs.NetworkLog.NetworkLog.instance().importRequests(HAR.Importer.Importer.requestsFromHARLog(harRoot.log));\n  }\n\n  private harLoadFailed(message: string): void {\n    Common.Console.Console.instance().error('Failed to load HAR file with following error: ' + message);\n  }\n\n  private setGrouping(groupKey: string|null): void {\n    if (this.activeGroupLookup) {\n      this.activeGroupLookup.reset();\n    }\n    const groupLookup = groupKey ? this.groupLookups.get(groupKey) || null : null;\n    this.activeGroupLookup = groupLookup;\n    this.invalidateAllItems();\n  }\n\n  nodeForRequest(request: SDK.NetworkRequest.NetworkRequest): NetworkRequestNode|null {\n    return this.networkRequestToNode.get(request) || null;\n  }\n\n  headerHeight(): number {\n    return this.headerHeightInternal;\n  }\n\n  setRecording(recording: boolean): void {\n    this.recording = recording;\n    this.updateSummaryBar();\n  }\n\n  columns(): NetworkLogViewColumns {\n    return this.columnsInternal;\n  }\n\n  summaryToolbar(): UI.Toolbar.Toolbar {\n    return this.summaryToolbarInternal;\n  }\n\n  modelAdded(networkManager: SDK.NetworkManager.NetworkManager): void {\n    // TODO(allada) Remove dependency on networkManager and instead use NetworkLog and PageLoad for needed data.\n    const target = networkManager.target();\n    if (target.outermostTarget() !== target) {\n      return;\n    }\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (resourceTreeModel) {\n      resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, this.loadEventFired, this);\n      resourceTreeModel.addEventListener(\n          SDK.ResourceTreeModel.Events.DOMContentLoaded, this.domContentLoadedEventFired, this);\n    }\n    for (const request of Logs.NetworkLog.NetworkLog.instance().requests()) {\n      if (this.isInScope(request)) {\n        this.refreshRequest(request);\n      }\n    }\n  }\n\n  modelRemoved(networkManager: SDK.NetworkManager.NetworkManager): void {\n    const target = networkManager.target();\n    if (target.outermostTarget() !== target) {\n      return;\n    }\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (resourceTreeModel) {\n      resourceTreeModel.removeEventListener(SDK.ResourceTreeModel.Events.Load, this.loadEventFired, this);\n      resourceTreeModel.removeEventListener(\n          SDK.ResourceTreeModel.Events.DOMContentLoaded, this.domContentLoadedEventFired, this);\n    }\n    const preserveLog = Common.Settings.Settings.instance().moduleSetting('network-log.preserve-log').get();\n    if (!preserveLog) {\n      this.reset();\n    }\n  }\n\n  linkifier(): Components.Linkifier.Linkifier {\n    return this.linkifierInternal;\n  }\n\n  setWindow(start: number, end: number): void {\n    if (!start && !end) {\n      this.timeFilter = null;\n      this.timeCalculatorInternal.setWindow(null);\n    } else {\n      this.timeFilter = NetworkLogView.requestTimeFilter.bind(null, start, end);\n      this.timeCalculatorInternal.setWindow(new NetworkTimeBoundary(start, end));\n    }\n    this.filterRequests();\n  }\n\n  resetFocus(): void {\n    this.dataGrid.element.focus();\n  }\n\n  private resetSuggestionBuilder(): void {\n    this.suggestionBuilder.clear();\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.Is, NetworkForward.UIFilter.IsFilterType.RUNNING);\n    this.suggestionBuilder.addItem(\n        NetworkForward.UIFilter.FilterType.Is, NetworkForward.UIFilter.IsFilterType.FROM_CACHE);\n    this.suggestionBuilder.addItem(\n        NetworkForward.UIFilter.FilterType.Is, NetworkForward.UIFilter.IsFilterType.SERVICE_WORKER_INTERCEPTED);\n    this.suggestionBuilder.addItem(\n        NetworkForward.UIFilter.FilterType.Is, NetworkForward.UIFilter.IsFilterType.SERVICE_WORKER_INITIATED);\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.LargerThan, '100');\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.LargerThan, '10k');\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.LargerThan, '1M');\n    this.textFilterUI.setSuggestionProvider(this.suggestionBuilder.completions.bind(this.suggestionBuilder));\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.HasOverrides, overrideFilter.yes);\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.HasOverrides, overrideFilter.no);\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.HasOverrides, overrideFilter.content);\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.HasOverrides, overrideFilter.headers);\n  }\n\n  private filterChanged(): void {\n    this.removeAllNodeHighlights();\n    this.parseFilterQuery(this.textFilterUI.value(), this.invertFilterUI.checked());\n    this.filterRequests();\n    this.textFilterSetting.set(this.textFilterUI.value());\n    this.moreFiltersDropDownUI?.updateActiveFiltersCount();\n    this.moreFiltersDropDownUI?.updateTooltip();\n    this.columnsInternal.filterChanged();\n  }\n\n  async resetFilter(): Promise<void> {\n    this.textFilterUI.clear();\n  }\n\n  private showRecordingHint(): void {\n    this.hideRecordingHint();\n\n    const actionRegistry = UI.ActionRegistry.ActionRegistry.instance();\n    const actionName = this.recording ? 'inspector-main.reload' : 'network.toggle-recording';\n    const action = actionRegistry.hasAction(actionName) ? actionRegistry.getAction(actionName) : null;\n    const shortcutTitle = UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutTitleForAction(actionName) ?? '';\n\n    const header = this.recording ? i18nString(UIStrings.recordingNetworkActivity) :\n                                    i18nString(UIStrings.noNetworkActivityRecorded);\n    const instruction =\n        this.recording ? UIStrings.performARequestOrHitSToRecordThe : UIStrings.recordToDisplayNetworkActivity;\n    const buttonText = this.recording ? i18nString(UIStrings.reloadPage) : i18nString(UIStrings.startRecording);\n    // eslint-disable-next-line rulesdir/l10n-i18nString-call-only-with-uistrings\n    const description = i18nString(instruction, {\n      PH1: buttonText,\n      PH2: shortcutTitle,\n    });\n\n    this.recordingHint = new UI.EmptyWidget.EmptyWidget(header, shortcutTitle ? description : '');\n    this.recordingHint.element.classList.add('network-status-pane');\n    this.recordingHint.link = 'https://developer.chrome.com/docs/devtools/network/' as Platform.DevToolsPath.UrlString;\n    if (shortcutTitle && action) {\n      const button = UI.UIUtils.createTextButton(buttonText, () => action.execute(), {\n        jslogContext: actionName,\n        variant: Buttons.Button.Variant.TONAL,\n      });\n      this.recordingHint.contentElement.appendChild(button);\n    }\n\n    this.recordingHint.show(this.element);\n    this.setHidden(true);\n  }\n\n  private hideRecordingHint(): void {\n    this.setHidden(false);\n    if (this.recordingHint) {\n      this.recordingHint.detach();\n      this.recordingHint = null;\n    }\n    UI.ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.networkDataAvailable));\n  }\n\n  private setHidden(value: boolean): void {\n    this.columnsInternal.setHidden(value);\n    this.dataGrid.setInert(value);\n    UI.ARIAUtils.setHidden(this.summaryToolbarInternal, value);\n  }\n\n  override elementsToRestoreScrollPositionsFor(): Element[] {\n    if (!this.dataGrid)  // Not initialized yet.\n    {\n      return [];\n    }\n    return [this.dataGrid.scrollContainer];\n  }\n\n  columnExtensionResolved(): void {\n    this.invalidateAllItems(true);\n  }\n\n  private setupDataGrid(): DataGrid.SortableDataGrid.SortableDataGrid<NetworkNode> {\n    this.dataGrid.setRowContextMenuCallback((contextMenu, node) => {\n      const request = (node as NetworkNode).request();\n      if (request) {\n        this.handleContextMenuForRequest(contextMenu, request);\n      }\n    });\n    this.dataGrid.setEnableAutoScrollToBottom(true);\n    this.dataGrid.setName('network-log');\n    this.dataGrid.setResizeMethod(DataGrid.DataGrid.ResizeMethod.LAST);\n    this.dataGrid.element.classList.add('network-log-grid');\n    this.dataGrid.element.addEventListener('mousemove', this.dataGridMouseMove.bind(this), true);\n    this.dataGrid.element.addEventListener('mouseleave', () => this.setHoveredNode(null), true);\n    this.dataGrid.element.addEventListener('keydown', event => {\n      if (event.key === 'ArrowRight' && this.dataGrid.selectedNode) {\n        const initiatorLink = this.dataGrid.selectedNode.element().querySelector('button.devtools-link');\n        if (initiatorLink) {\n          (initiatorLink as HTMLElement).focus();\n        }\n      }\n\n      if (Platform.KeyboardUtilities.isEnterOrSpaceKey(event)) {\n        this.dispatchEventToListeners(\n            Events.RequestActivated, {showPanel: RequestPanelBehavior.ShowPanel, takeFocus: true});\n        event.consume(true);\n      }\n    });\n    this.dataGrid.element.addEventListener('keyup', event => {\n      if ((event.key === 'r' || event.key === 'R') && this.dataGrid.selectedNode) {\n        const request = (this.dataGrid.selectedNode as NetworkNode).request();\n        if (!request) {\n          return;\n        }\n\n        if (SDK.NetworkManager.NetworkManager.canReplayRequest(request)) {\n          SDK.NetworkManager.NetworkManager.replayRequest(request);\n          void VisualLogging.logKeyDown(this.dataGrid.selectedNode.element(), event, 'replay-xhr');\n        }\n      }\n    });\n    this.dataGrid.element.addEventListener('focus', this.onDataGridFocus.bind(this), true);\n    this.dataGrid.element.addEventListener('blur', this.onDataGridBlur.bind(this), true);\n    return this.dataGrid;\n  }\n\n  private dataGridMouseMove(event: Event): void {\n    const mouseEvent = (event as MouseEvent);\n    const node = (this.dataGrid.dataGridNodeFromNode((mouseEvent.target as Node)));\n    const highlightInitiatorChain = mouseEvent.shiftKey;\n    this.setHoveredNode(node as NetworkNode, highlightInitiatorChain);\n  }\n\n  hoveredNode(): NetworkNode|null {\n    return this.hoveredNodeInternal;\n  }\n\n  private setHoveredNode(node: NetworkNode|null, highlightInitiatorChain?: boolean): void {\n    if (this.hoveredNodeInternal) {\n      this.hoveredNodeInternal.setHovered(false, false);\n    }\n    this.hoveredNodeInternal = node;\n    if (this.hoveredNodeInternal) {\n      this.hoveredNodeInternal.setHovered(true, Boolean(highlightInitiatorChain));\n    }\n  }\n\n  private updateSummaryBar(): void {\n    this.hideRecordingHint();\n\n    let transferSize = 0;\n    let resourceSize = 0;\n    let selectedNodeNumber = 0;\n    let selectedTransferSize = 0;\n    let selectedResourceSize = 0;\n    let baseTime = -1;\n    let maxTime = -1;\n\n    let nodeCount = 0;\n    for (const request of Logs.NetworkLog.NetworkLog.instance().requests()) {\n      const node = this.networkRequestToNode.get(request);\n      if (!node) {\n        continue;\n      }\n      nodeCount++;\n      const requestTransferSize = request.transferSize;\n      transferSize += requestTransferSize;\n      const requestResourceSize = request.resourceSize;\n      resourceSize += requestResourceSize;\n      if (!filteredNetworkRequests.has(node)) {\n        selectedNodeNumber++;\n        selectedTransferSize += requestTransferSize;\n        selectedResourceSize += requestResourceSize;\n      }\n      const networkManager = SDK.NetworkManager.NetworkManager.forRequest(request);\n      // TODO(allada) inspectedURL should be stored in PageLoad used instead of target so HAR requests can have an\n      // inspected url.\n      if (networkManager && request.url() === networkManager.target().inspectedURL() &&\n          request.resourceType() === Common.ResourceType.resourceTypes.Document &&\n          networkManager.target().parentTarget()?.type() !== SDK.Target.Type.FRAME) {\n        // If the primary main frame's document was fetched from the prefetch cache,\n        // we should use the issueTime (i.e. when the navigation request was about to start)\n        // instead of startTime, which is when the prefetch network request started\n        // (which is typically well before the navigation starts).\n        baseTime = request.fromPrefetchCache() ? request.issueTime() : request.startTime;\n      }\n      if (request.endTime > maxTime) {\n        maxTime = request.endTime;\n      }\n    }\n\n    if (!nodeCount) {\n      this.showRecordingHint();\n      return;\n    }\n\n    this.summaryToolbarInternal.removeToolbarItems();\n    const appendChunk = (chunk: string, title?: string): HTMLDivElement => {\n      const toolbarText = new UI.Toolbar.ToolbarText(chunk);\n      toolbarText.setTitle(title ? title : chunk);\n      this.summaryToolbarInternal.appendToolbarItem(toolbarText);\n      return toolbarText.element as HTMLDivElement;\n    };\n\n    if (selectedNodeNumber !== nodeCount) {\n      appendChunk(i18nString(UIStrings.sSRequests, {PH1: selectedNodeNumber, PH2: nodeCount}));\n      this.summaryToolbarInternal.appendSeparator();\n      appendChunk(\n          i18nString(UIStrings.sSTransferred, {\n            PH1: i18n.ByteUtilities.formatBytesToKb(selectedTransferSize),\n            PH2: i18n.ByteUtilities.formatBytesToKb(transferSize),\n          }),\n          i18nString(UIStrings.sBSBTransferredOverNetwork, {PH1: selectedTransferSize, PH2: transferSize}));\n      this.summaryToolbarInternal.appendSeparator();\n      appendChunk(\n          i18nString(UIStrings.sSResources, {\n            PH1: i18n.ByteUtilities.formatBytesToKb(selectedResourceSize),\n            PH2: i18n.ByteUtilities.formatBytesToKb(resourceSize),\n          }),\n          i18nString(UIStrings.sBSBResourcesLoadedByThePage, {PH1: selectedResourceSize, PH2: resourceSize}));\n    } else {\n      appendChunk(i18nString(UIStrings.sRequests, {PH1: nodeCount}));\n      this.summaryToolbarInternal.appendSeparator();\n      appendChunk(\n          i18nString(UIStrings.sTransferred, {PH1: i18n.ByteUtilities.bytesToString(transferSize)}),\n          i18nString(UIStrings.sBTransferredOverNetwork, {PH1: transferSize}));\n      this.summaryToolbarInternal.appendSeparator();\n      appendChunk(\n          i18nString(UIStrings.sResources, {PH1: i18n.ByteUtilities.bytesToString(resourceSize)}),\n          i18nString(UIStrings.sBResourcesLoadedByThePage, {PH1: resourceSize}));\n    }\n\n    if (baseTime !== -1 && maxTime !== -1) {\n      this.summaryToolbarInternal.appendSeparator();\n      appendChunk(i18nString(UIStrings.finishS, {PH1: i18n.TimeUtilities.secondsToString(maxTime - baseTime)}));\n      if (this.mainRequestDOMContentLoadedTime !== -1 && this.mainRequestDOMContentLoadedTime > baseTime) {\n        this.summaryToolbarInternal.appendSeparator();\n        const domContentLoadedText = i18nString(\n            UIStrings.domcontentloadedS,\n            {PH1: i18n.TimeUtilities.secondsToString(this.mainRequestDOMContentLoadedTime - baseTime)});\n        appendChunk(domContentLoadedText).style.color = `var(${NetworkLogView.getDCLEventColor()})`;\n      }\n      if (this.mainRequestLoadTime !== -1) {\n        this.summaryToolbarInternal.appendSeparator();\n        const loadText =\n            i18nString(UIStrings.loadS, {PH1: i18n.TimeUtilities.secondsToString(this.mainRequestLoadTime - baseTime)});\n        appendChunk(loadText).style.color = `var(${NetworkLogView.getLoadEventColor()})`;\n      }\n    }\n  }\n\n  scheduleRefresh(): void {\n    if (this.needsRefresh) {\n      return;\n    }\n\n    this.needsRefresh = true;\n\n    if (this.isShowing()) {\n      void RenderCoordinator.write('NetworkLogView.render', this.refresh.bind(this));\n    }\n  }\n\n  addFilmStripFrames(times: number[]): void {\n    this.columnsInternal.addEventDividers(times, 'network-frame-divider');\n  }\n\n  selectFilmStripFrame(time: number): void {\n    this.columnsInternal.selectFilmStripFrame(time);\n  }\n\n  clearFilmStripFrame(): void {\n    this.columnsInternal.clearFilmStripFrame();\n  }\n\n  private refreshIfNeeded(): void {\n    if (this.needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  private invalidateAllItems(deferUpdate?: boolean): void {\n    this.staleRequests = new Set(Logs.NetworkLog.NetworkLog.instance().requests().filter(this.isInScope));\n    if (deferUpdate) {\n      this.scheduleRefresh();\n    } else {\n      this.refresh();\n    }\n  }\n\n  timeCalculator(): NetworkTimeCalculator {\n    return this.timeCalculatorInternal;\n  }\n\n  calculator(): NetworkTimeCalculator {\n    return this.calculatorInternal;\n  }\n\n  setCalculator(x: NetworkTimeCalculator): void {\n    if (!x || this.calculatorInternal === x) {\n      return;\n    }\n\n    if (this.calculatorInternal !== x) {\n      this.calculatorInternal = x;\n      this.columnsInternal.setCalculator(this.calculatorInternal);\n    }\n    this.calculatorInternal.reset();\n\n    if (this.calculatorInternal.startAtZero) {\n      this.columnsInternal.hideEventDividers();\n    } else {\n      this.columnsInternal.showEventDividers();\n    }\n\n    this.invalidateAllItems();\n  }\n\n  private loadEventFired(\n      event: Common.EventTarget\n          .EventTargetEvent<{resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel, loadTime: number}>): void {\n    if (!this.recording) {\n      return;\n    }\n\n    const time = event.data.loadTime;\n    if (time) {\n      this.mainRequestLoadTime = time;\n      this.columnsInternal.addEventDividers([time], 'network-load-divider');\n    }\n  }\n\n  private domContentLoadedEventFired(event: Common.EventTarget.EventTargetEvent<number>): void {\n    if (!this.recording) {\n      return;\n    }\n    const {data} = event;\n    if (data) {\n      this.mainRequestDOMContentLoadedTime = data;\n      this.columnsInternal.addEventDividers([data], 'network-dcl-divider');\n    }\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.refreshIfNeeded();\n    this.columnsInternal.wasShown();\n  }\n\n  override willHide(): void {\n    this.columnsInternal.willHide();\n  }\n\n  flatNodesList(): NetworkNode[] {\n    const rootNode =\n        (this.dataGrid.rootNode() as\n         DataGrid.ViewportDataGrid.ViewportDataGridNode<DataGrid.SortableDataGrid.SortableDataGridNode<NetworkNode>>);\n    return rootNode.flatChildren() as NetworkNode[];\n  }\n\n  private onDataGridFocus(): void {\n    if (this.dataGrid.element.matches(':focus-visible')) {\n      this.element.classList.add('grid-focused');\n    }\n    this.updateNodeBackground();\n  }\n\n  private onDataGridBlur(): void {\n    this.element.classList.remove('grid-focused');\n    this.updateNodeBackground();\n  }\n\n  updateNodeBackground(): void {\n    if (this.dataGrid.selectedNode) {\n      (this.dataGrid.selectedNode as NetworkNode).updateBackgroundColor();\n    }\n  }\n\n  updateNodeSelectedClass(isSelected: boolean): void {\n    if (isSelected) {\n      this.element.classList.remove('no-node-selected');\n    } else {\n      this.element.classList.add('no-node-selected');\n    }\n  }\n\n  stylesChanged(): void {\n    this.columnsInternal.scheduleRefresh();\n  }\n\n  private removeNodeAndMaybeAncestors(node: NetworkRequestNode): void {\n    let parent: NetworkNode|\n        (DataGrid.DataGrid.DataGridNode<DataGrid.ViewportDataGrid.ViewportDataGridNode<\n             DataGrid.SortableDataGrid.SortableDataGridNode<NetworkNode>>>|\n         null) = node.parent;\n    if (!parent) {\n      return;\n    }\n    parent.removeChild(node);\n    while (parent && !parent.hasChildren() && parent.dataGrid && parent.dataGrid.rootNode() !== parent) {\n      const grandparent = (parent.parent as NetworkNode);\n      grandparent.removeChild(parent);\n      parent = grandparent;\n    }\n  }\n\n  private refresh(): void {\n    this.needsRefresh = false;\n\n    this.removeAllNodeHighlights();\n\n    this.timeCalculatorInternal.updateBoundariesForEventTime(this.mainRequestLoadTime);\n    this.durationCalculator.updateBoundariesForEventTime(this.mainRequestLoadTime);\n    this.timeCalculatorInternal.updateBoundariesForEventTime(this.mainRequestDOMContentLoadedTime);\n    this.durationCalculator.updateBoundariesForEventTime(this.mainRequestDOMContentLoadedTime);\n\n    const nodesToInsert = new Map<NetworkNode, NetworkNode>();\n    const nodesToRefresh: NetworkNode[] = [];\n\n    const staleNodes = new Set<NetworkRequestNode>();\n\n    // While creating nodes it may add more entries into staleRequests because redirect request nodes update the parent\n    // node so we loop until we have no more stale requests.\n    while (this.staleRequests.size) {\n      const request = this.staleRequests.values().next().value as SDK.NetworkRequest.NetworkRequest;\n      this.staleRequests.delete(request);\n      let node = this.networkRequestToNode.get(request);\n      if (!node) {\n        node = this.createNodeForRequest(request);\n      }\n      staleNodes.add(node);\n    }\n\n    for (const node of staleNodes) {\n      const request = node.request();\n      const isFilteredOut = !this.applyFilter(request);\n      if (isFilteredOut) {\n        if (node === this.hoveredNodeInternal) {\n          this.setHoveredNode(null);\n        }\n        node.selected = false;\n      } else {\n        nodesToRefresh.push(node);\n      }\n      this.timeCalculatorInternal.updateBoundaries(request);\n      this.durationCalculator.updateBoundaries(request);\n      const newParent = this.parentNodeForInsert(node);\n      const wasAlreadyFiltered = filteredNetworkRequests.has(node);\n      if (wasAlreadyFiltered === isFilteredOut && node.parent === newParent) {\n        continue;\n      }\n      if (isFilteredOut) {\n        filteredNetworkRequests.add(node);\n      } else {\n        filteredNetworkRequests.delete(node);\n      }\n      const removeFromParent = node.parent && (isFilteredOut || node.parent !== newParent);\n      if (removeFromParent) {\n        this.removeNodeAndMaybeAncestors(node);\n      }\n\n      if (!newParent || isFilteredOut) {\n        continue;\n      }\n\n      if (!newParent.dataGrid && !nodesToInsert.has(newParent)) {\n        nodesToInsert.set(newParent, (this.dataGrid.rootNode() as NetworkNode));\n        nodesToRefresh.push(newParent);\n      }\n      nodesToInsert.set(node, newParent);\n    }\n\n    for (const node of nodesToInsert.keys()) {\n      (nodesToInsert.get(node) as NetworkNode).appendChild(node);\n    }\n\n    for (const node of nodesToRefresh) {\n      node.refresh();\n    }\n\n    this.updateSummaryBar();\n\n    if (nodesToInsert.size) {\n      this.columnsInternal.sortByCurrentColumn();\n    }\n\n    this.dataGrid.updateInstantly();\n    this.didRefreshForTest();\n  }\n\n  private didRefreshForTest(): void {\n  }\n\n  private parentNodeForInsert(node: NetworkRequestNode): NetworkNode|null {\n    if (!this.activeGroupLookup) {\n      return this.dataGrid.rootNode() as NetworkNode;\n    }\n\n    const groupNode = this.activeGroupLookup.groupNodeForRequest(node.request());\n    if (!groupNode) {\n      return this.dataGrid.rootNode() as NetworkNode;\n    }\n    return groupNode;\n  }\n\n  private reset(): void {\n    this.dispatchEventToListeners(Events.RequestActivated, {showPanel: RequestPanelBehavior.HidePanel});\n\n    this.setHoveredNode(null);\n    this.columnsInternal.reset();\n\n    this.timeFilter = null;\n    this.calculatorInternal.reset();\n\n    this.timeCalculatorInternal.setWindow(null);\n    this.linkifierInternal.reset();\n\n    if (this.activeGroupLookup) {\n      this.activeGroupLookup.reset();\n    }\n    this.staleRequests.clear();\n    this.resetSuggestionBuilder();\n\n    this.mainRequestLoadTime = -1;\n    this.mainRequestDOMContentLoadedTime = -1;\n\n    this.networkRequestToNode = new WeakMap();\n\n    this.dataGrid.rootNode().removeChildren();\n    this.updateSummaryBar();\n    this.scheduleRefresh();\n  }\n\n  // TODO(crbug.com/1477668)\n  setTextFilterValue(filterString: string): void {\n    this.textFilterUI.setValue(filterString);\n    this.networkHideDataURLSetting.set(false);\n    this.networkShowBlockedCookiesOnlySetting.set(false);\n    this.networkOnlyBlockedRequestsSetting.set(false);\n    this.networkOnlyThirdPartySetting.set(false);\n    this.networkHideChromeExtensions.set(false);\n    this.networkOnlyIPProtectedRequestsSetting.set(false);\n    this.resourceCategoryFilterUI.reset();\n  }\n\n  private createNodeForRequest(request: SDK.NetworkRequest.NetworkRequest): NetworkRequestNode {\n    const node = new NetworkRequestNode(this, request);\n    this.networkRequestToNode.set(request, node);\n    filteredNetworkRequests.add(node);\n\n    for (let redirect = request.redirectSource(); redirect; redirect = redirect.redirectSource()) {\n      this.refreshRequest(redirect);\n    }\n    return node;\n  }\n\n  private isInScope(request: SDK.NetworkRequest.NetworkRequest): boolean {\n    const networkManager = SDK.NetworkManager.NetworkManager.forRequest(request);\n    return !networkManager || SDK.TargetManager.TargetManager.instance().isInScope(networkManager);\n  }\n\n  private onRequestUpdated(\n      event: Common.EventTarget.EventTargetEvent<{request: SDK.NetworkRequest.NetworkRequest, preserveLog?: boolean}>):\n      void {\n    const {request, preserveLog} = event.data;\n    if (this.isInScope(request) || preserveLog) {\n      this.refreshRequest(request);\n    }\n  }\n\n  private onRequestRemoved(event: Common.EventTarget.EventTargetEvent<{request: SDK.NetworkRequest.NetworkRequest}>):\n      void {\n    const {request} = event.data;\n    this.staleRequests.delete(request);\n    const node = this.networkRequestToNode.get(request);\n    if (node) {\n      this.removeNodeAndMaybeAncestors(node);\n    }\n  }\n\n  private refreshRequest(request: SDK.NetworkRequest.NetworkRequest): void {\n    NetworkLogView.subdomains(request.domain)\n        .forEach(\n            this.suggestionBuilder.addItem.bind(this.suggestionBuilder, NetworkForward.UIFilter.FilterType.Domain));\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.Method, request.requestMethod);\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.MimeType, request.mimeType);\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.Scheme, String(request.scheme));\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.StatusCode, String(request.statusCode));\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.ResourceType, request.resourceType().name());\n    this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.Url, request.securityOrigin());\n\n    const priority = request.priority();\n    if (priority) {\n      this.suggestionBuilder.addItem(\n          NetworkForward.UIFilter.FilterType.Priority, PerfUI.NetworkPriorities.uiLabelForNetworkPriority(priority));\n    }\n\n    if (request.mixedContentType !== Protocol.Security.MixedContentType.None) {\n      this.suggestionBuilder.addItem(\n          NetworkForward.UIFilter.FilterType.MixedContent, NetworkForward.UIFilter.MixedContentFilterValues.ALL);\n    }\n\n    if (request.mixedContentType === Protocol.Security.MixedContentType.OptionallyBlockable) {\n      this.suggestionBuilder.addItem(\n          NetworkForward.UIFilter.FilterType.MixedContent, NetworkForward.UIFilter.MixedContentFilterValues.DISPLAYED);\n    }\n\n    if (request.mixedContentType === Protocol.Security.MixedContentType.Blockable) {\n      const suggestion = request.wasBlocked() ? NetworkForward.UIFilter.MixedContentFilterValues.BLOCKED :\n                                                NetworkForward.UIFilter.MixedContentFilterValues.BLOCK_OVERRIDDEN;\n      this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.MixedContent, suggestion);\n    }\n\n    const responseHeaders = request.responseHeaders;\n    for (const responseHeader of responseHeaders) {\n      this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.HasResponseHeader, responseHeader.name);\n      if (responseHeader.name === 'Set-Cookie') {\n        this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.ResponseHeaderValueSetCookie);\n      }\n    }\n\n    for (const header of request.requestHeaders()) {\n      this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.HasRequestHeader, header.name);\n    }\n\n    for (const cookie of request.responseCookies) {\n      this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.SetCookieDomain, cookie.domain());\n      this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.SetCookieName, cookie.name());\n      this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.SetCookieValue, cookie.value());\n    }\n\n    for (const cookie of request.allCookiesIncludingBlockedOnes()) {\n      this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.CookieDomain, cookie.domain());\n      this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.CookieName, cookie.name());\n      this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.CookiePath, cookie.path());\n      this.suggestionBuilder.addItem(NetworkForward.UIFilter.FilterType.CookieValue, cookie.value());\n    }\n\n    this.staleRequests.add(request);\n    this.scheduleRefresh();\n  }\n\n  rowHeight(): number {\n    return this.rowHeightInternal;\n  }\n\n  switchViewMode(gridMode: boolean): void {\n    this.columnsInternal.switchViewMode(gridMode);\n  }\n\n  handleContextMenuForRequest(contextMenu: UI.ContextMenu.ContextMenu, request: SDK.NetworkRequest.NetworkRequest):\n      void {\n    contextMenu.appendApplicableItems(request);\n    const filtered = this.filterBar.hasActiveFilter();\n    const copyMenu = contextMenu.clipboardSection().appendSubMenuItem(i18nString(UIStrings.copy), false, 'copy');\n    if (request) {\n      const openAiAssistanceId = 'drjones.network-panel-context';\n      if (UI.ActionRegistry.ActionRegistry.instance().hasAction(openAiAssistanceId)) {\n        function appendSubmenuPromptAction(\n            submenu: UI.ContextMenu.SubMenu, action: UI.ActionRegistration.Action,\n            label: Common.UIString.LocalizedString, prompt: string, jslogContext: string): void {\n          submenu.defaultSection().appendItem(\n              label, () => action.execute({prompt}), {disabled: !action.enabled(), jslogContext});\n        }\n\n        UI.Context.Context.instance().setFlavor(SDK.NetworkRequest.NetworkRequest, request);\n        if (Root.Runtime.hostConfig.devToolsAiSubmenuPrompts?.enabled) {\n          const action = UI.ActionRegistry.ActionRegistry.instance().getAction(openAiAssistanceId);\n          const submenu = contextMenu.footerSection().appendSubMenuItem(\n              action.title(), false, openAiAssistanceId,\n              Root.Runtime.hostConfig.devToolsAiAssistanceNetworkAgent?.featureName);\n          submenu.defaultSection().appendAction(openAiAssistanceId, i18nString(UIStrings.startAChat));\n          appendSubmenuPromptAction(\n              submenu, action, i18nString(UIStrings.explainPurpose), 'What is the purpose of this request?',\n              openAiAssistanceId + '.purpose');\n          appendSubmenuPromptAction(\n              submenu, action, i18nString(UIStrings.explainSlowness), 'Why is this request taking so long?',\n              openAiAssistanceId + '.slowness');\n          appendSubmenuPromptAction(\n              submenu, action, i18nString(UIStrings.explainFailures), 'Why is the request failing?',\n              openAiAssistanceId + '.failures');\n          appendSubmenuPromptAction(\n              submenu, action, i18nString(UIStrings.assessSecurityHeaders), 'Are there any security headers present?',\n              openAiAssistanceId + '.security');\n        } else if (Root.Runtime.hostConfig.devToolsAiDebugWithAi?.enabled) {\n          contextMenu.footerSection().appendAction(\n              openAiAssistanceId, undefined, false, undefined,\n              Root.Runtime.hostConfig.devToolsAiAssistanceNetworkAgent?.featureName);\n        } else {\n          contextMenu.footerSection().appendAction(openAiAssistanceId);\n        }\n      }\n      copyMenu.defaultSection().appendItem(\n          i18nString(UIStrings.copyURL),\n          Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText.bind(\n              Host.InspectorFrontendHost.InspectorFrontendHostInstance, request.contentURL()),\n          {jslogContext: 'copy-url'});\n      copyMenu.footerSection().appendItem(\n          filtered ? i18nString(UIStrings.copyAllListedURLs) : i18nString(UIStrings.copyAllURLs),\n          this.copyAllURLs.bind(this), {jslogContext: 'copy-all-urls'});\n      if (request.requestHeadersText()) {\n        copyMenu.saveSection().appendItem(\n            i18nString(UIStrings.copyRequestHeaders), NetworkLogView.copyRequestHeaders.bind(null, request),\n            {jslogContext: 'copy-request-headers'});\n      }\n\n      if (request.responseHeadersText) {\n        copyMenu.saveSection().appendItem(\n            i18nString(UIStrings.copyResponseHeaders), NetworkLogView.copyResponseHeaders.bind(null, request),\n            {jslogContext: 'copy-response-headers'});\n      }\n\n      if (request.finished) {\n        copyMenu.saveSection().appendItem(\n            i18nString(UIStrings.copyResponse), NetworkLogView.copyResponse.bind(null, request),\n            {jslogContext: 'copy-response'});\n      }\n\n      const initiator = request.initiator();\n\n      if (initiator) {\n        const stack = initiator.stack;\n        if (stack) {\n          // We proactively compute the stacktrace text, as we can't determine whether the stacktrace\n          // has any context solely based on the top frame. Sometimes, the top frame does not have\n          // any callFrames, but its parent frames do.\n          const stackTraceText = computeStackTraceText(stack);\n          if (stackTraceText !== '') {\n            copyMenu.saveSection().appendItem(i18nString(UIStrings.copyStacktrace), () => {\n              Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(stackTraceText);\n            }, {jslogContext: 'copy-stacktrace'});\n          }\n        }\n      }\n\n      const disableIfBlob = request.isBlobRequest();\n      if (Host.Platform.isWin()) {\n        copyMenu.defaultSection().appendItem(\n            i18nString(UIStrings.copyAsCurlCmd), this.copyCurlCommand.bind(this, request, 'win'),\n            {disabled: disableIfBlob, jslogContext: 'copy-as-curl-cmd'});\n        copyMenu.defaultSection().appendItem(\n            i18nString(UIStrings.copyAsCurlBash), this.copyCurlCommand.bind(this, request, 'unix'),\n            {disabled: disableIfBlob, jslogContext: 'copy-as-curl-bash'});\n      } else {\n        copyMenu.defaultSection().appendItem(\n            i18nString(UIStrings.copyAsCurl), this.copyCurlCommand.bind(this, request, 'unix'),\n            {disabled: disableIfBlob, jslogContext: 'copy-as-curl'});\n      }\n      copyMenu.defaultSection().appendItem(\n          i18nString(UIStrings.copyAsPowershell), this.copyPowerShellCommand.bind(this, request),\n          {disabled: disableIfBlob, jslogContext: 'copy-as-powershell'});\n      copyMenu.defaultSection().appendItem(\n          i18nString(UIStrings.copyAsFetch), this.copyFetchCall.bind(this, request, FetchStyle.BROWSER),\n          {disabled: disableIfBlob, jslogContext: 'copy-as-fetch'});\n      copyMenu.defaultSection().appendItem(\n          i18nString(UIStrings.copyAsNodejsFetch), this.copyFetchCall.bind(this, request, FetchStyle.NODE_JS),\n          {disabled: disableIfBlob, jslogContext: 'copy-as-nodejs-fetch'});\n\n      if (Host.Platform.isWin()) {\n        copyMenu.footerSection().appendItem(\n            filtered ? i18nString(UIStrings.copyAllListedAsCurlCmd) : i18nString(UIStrings.copyAllAsCurlCmd),\n            this.copyAllCurlCommand.bind(this, 'win'), {jslogContext: 'copy-all-as-curl-cmd'});\n        copyMenu.footerSection().appendItem(\n            filtered ? i18nString(UIStrings.copyAllListedAsCurlBash) : i18nString(UIStrings.copyAllAsCurlBash),\n            this.copyAllCurlCommand.bind(this, 'unix'), {jslogContext: 'copy-all-as-curl-bash'});\n      } else {\n        copyMenu.footerSection().appendItem(\n            filtered ? i18nString(UIStrings.copyAllListedAsCurl) : i18nString(UIStrings.copyAllAsCurl),\n            this.copyAllCurlCommand.bind(this, 'unix'), {jslogContext: 'copy-all-as-curl'});\n      }\n      copyMenu.footerSection().appendItem(\n          filtered ? i18nString(UIStrings.copyAllListedAsPowershell) : i18nString(UIStrings.copyAllAsPowershell),\n          this.copyAllPowerShellCommand.bind(this), {jslogContext: 'copy-all-as-powershell'});\n      copyMenu.footerSection().appendItem(\n          filtered ? i18nString(UIStrings.copyAllListedAsFetch) : i18nString(UIStrings.copyAllAsFetch),\n          this.copyAllFetchCall.bind(this, FetchStyle.BROWSER), {jslogContext: 'copy-all-as-fetch'});\n      copyMenu.footerSection().appendItem(\n          filtered ? i18nString(UIStrings.copyAllListedAsNodejsFetch) : i18nString(UIStrings.copyAllAsNodejsFetch),\n          this.copyAllFetchCall.bind(this, FetchStyle.NODE_JS), {jslogContext: 'copy-all-as-nodejs-fetch'});\n    }\n    copyMenu.footerSection().appendItem(\n        filtered ? i18nString(UIStrings.copyAllListedAsHarSanitized) : i18nString(UIStrings.copyAllAsHarSanitized),\n        this.copyAllAsHAR.bind(this, {sanitize: true}), {jslogContext: 'copy-all-as-har'});\n    if (this.networkShowOptionsToGenerateHarWithSensitiveData.get()) {\n      copyMenu.footerSection().appendItem(\n          filtered ? i18nString(UIStrings.copyAllListedAsHarWithSensitiveData) :\n                     i18nString(UIStrings.copyAllAsHarWithSensitiveData),\n          this.copyAllAsHAR.bind(this, {sanitize: false}), {jslogContext: 'copy-all-as-har-with-sensitive-data'});\n    }\n\n    contextMenu.overrideSection().appendItem(\n        i18nString(UIStrings.overrideHeaders), this.#handleCreateResponseHeaderOverrideClick.bind(this, request), {\n          disabled:\n              Persistence.NetworkPersistenceManager.NetworkPersistenceManager.isForbiddenNetworkUrl(request.url()),\n          jslogContext: 'override-headers',\n        });\n\n    contextMenu.editSection().appendItem(\n        i18nString(UIStrings.clearBrowserCache), this.clearBrowserCache.bind(this),\n        {jslogContext: 'clear-browser-cache'});\n    contextMenu.editSection().appendItem(\n        i18nString(UIStrings.clearBrowserCookies), this.clearBrowserCookies.bind(this),\n        {jslogContext: 'clear-browser-cookies'});\n\n    if (request) {\n      const maxBlockedURLLength = 20;\n      const manager = SDK.NetworkManager.MultitargetNetworkManager.instance();\n      let patterns = manager.blockedPatterns();\n\n      function addBlockedURL(url: string): void {\n        patterns.push({enabled: true, url: url as Platform.DevToolsPath.UrlString});\n        manager.setBlockedPatterns(patterns);\n        manager.setBlockingEnabled(true);\n        void UI.ViewManager.ViewManager.instance().showView('network.blocked-urls');\n      }\n\n      function removeBlockedURL(url: string): void {\n        patterns = patterns.filter(pattern => pattern.url !== url);\n        manager.setBlockedPatterns(patterns);\n        void UI.ViewManager.ViewManager.instance().showView('network.blocked-urls');\n      }\n\n      const urlWithoutScheme = request.parsedURL.urlWithoutScheme();\n      if (urlWithoutScheme && !patterns.find(pattern => pattern.url === urlWithoutScheme)) {\n        contextMenu.debugSection().appendItem(\n            i18nString(UIStrings.blockRequestUrl), addBlockedURL.bind(null, urlWithoutScheme),\n            {jslogContext: 'block-request-url'});\n      } else if (urlWithoutScheme) {\n        const croppedURL = Platform.StringUtilities.trimMiddle(urlWithoutScheme, maxBlockedURLLength);\n        contextMenu.debugSection().appendItem(\n            i18nString(UIStrings.unblockS, {PH1: croppedURL}), removeBlockedURL.bind(null, urlWithoutScheme),\n            {jslogContext: 'unblock'});\n      }\n\n      const domain = request.parsedURL.domain();\n      if (domain && !patterns.find(pattern => pattern.url === domain)) {\n        contextMenu.debugSection().appendItem(\n            i18nString(UIStrings.blockRequestDomain), addBlockedURL.bind(null, domain),\n            {jslogContext: 'block-request-domain'});\n      } else if (domain) {\n        const croppedDomain = Platform.StringUtilities.trimMiddle(domain, maxBlockedURLLength);\n        contextMenu.debugSection().appendItem(\n            i18nString(UIStrings.unblockS, {PH1: croppedDomain}), removeBlockedURL.bind(null, domain),\n            {jslogContext: 'unblock'});\n      }\n\n      if (SDK.NetworkManager.NetworkManager.canReplayRequest(request)) {\n        contextMenu.debugSection().appendItem(\n            i18nString(UIStrings.replayXhr), SDK.NetworkManager.NetworkManager.replayRequest.bind(null, request),\n            {jslogContext: 'replay-xhr'});\n      }\n    }\n  }\n\n  private harRequests(): SDK.NetworkRequest.NetworkRequest[] {\n    const requests = Logs.NetworkLog.NetworkLog.instance().requests().filter(request => this.applyFilter(request));\n    return requests.filter(NetworkLogView.getHTTPRequestsFilter).filter(request => {\n      return request.finished ||\n          (request.resourceType() === Common.ResourceType.resourceTypes.WebSocket && request.responseReceivedTime);\n    });\n  }\n\n  private async copyAllAsHAR(options: HAR.Log.BuildOptions): Promise<void> {\n    const harArchive = {log: await HAR.Log.Log.build(this.harRequests(), options)};\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(JSON.stringify(harArchive, null, 2));\n  }\n\n  private copyAllURLs(): void {\n    const requests = Logs.NetworkLog.NetworkLog.instance().requests().filter(request => this.applyFilter(request));\n    const nonBlobRequests = this.filterOutBlobRequests(requests);\n    const urls = nonBlobRequests.map(request => request.url());\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(urls.join('\\n'));\n  }\n\n  private async copyCurlCommand(request: SDK.NetworkRequest.NetworkRequest, platform: 'unix'|'win'): Promise<void> {\n    const command = await NetworkLogView.generateCurlCommand(request, platform);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(command);\n  }\n\n  private async copyAllCurlCommand(platform: 'unix'|'win'): Promise<void> {\n    const requests = Logs.NetworkLog.NetworkLog.instance().requests().filter(request => this.applyFilter(request));\n    const commands = await this.generateAllCurlCommand(requests, platform);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(commands);\n  }\n\n  private async copyFetchCall(request: SDK.NetworkRequest.NetworkRequest, style: FetchStyle): Promise<void> {\n    const command = await this.generateFetchCall(request, style);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(command);\n  }\n\n  private async copyAllFetchCall(style: FetchStyle): Promise<void> {\n    const requests = Logs.NetworkLog.NetworkLog.instance().requests().filter(request => this.applyFilter(request));\n    const commands = await this.generateAllFetchCall(requests, style);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(commands);\n  }\n\n  private async copyPowerShellCommand(request: SDK.NetworkRequest.NetworkRequest): Promise<void> {\n    const command = await this.generatePowerShellCommand(request);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(command);\n  }\n\n  private async copyAllPowerShellCommand(): Promise<void> {\n    const requests = Logs.NetworkLog.NetworkLog.instance().requests().filter(request => this.applyFilter(request));\n    const commands = await this.generateAllPowerShellCommand(requests);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(commands);\n  }\n\n  async exportAll(options: HAR.Log.BuildOptions): Promise<void> {\n    const mainTarget = SDK.TargetManager.TargetManager.instance().scopeTarget();\n    if (!mainTarget) {\n      return;\n    }\n    const url = mainTarget.inspectedURL();\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(url);\n    const filename = (parsedURL ? parsedURL.host : 'network-log') as Platform.DevToolsPath.RawPathString;\n    const stream = new Bindings.FileUtils.FileOutputStream();\n\n    if (!await stream.open(Common.ParsedURL.ParsedURL.concatenate(filename, '.har'))) {\n      return;\n    }\n\n    const progressIndicator = this.progressBarContainer.createChild('devtools-progress');\n    await HAR.Writer.Writer.write(stream, this.harRequests(), options, progressIndicator);\n    progressIndicator.done();\n    void stream.close();\n  }\n\n  async #handleCreateResponseHeaderOverrideClick(request: SDK.NetworkRequest.NetworkRequest): Promise<void> {\n    const requestLocation =\n        NetworkForward.UIRequestLocation.UIRequestLocation.responseHeaderMatch(request, {name: '', value: ''});\n    const networkPersistenceManager = Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance();\n    if (networkPersistenceManager.project()) {\n      Common.Settings.Settings.instance().moduleSetting('persistence-network-overrides-enabled').set(true);\n      await networkPersistenceManager.getOrCreateHeadersUISourceCodeFromUrl(request.url());\n      await Common.Revealer.reveal(requestLocation);\n    } else {  // If folder for local overrides has not been provided yet\n      UI.InspectorView.InspectorView.instance().displaySelectOverrideFolderInfobar(async () => {\n        await Sources.SourcesNavigator.OverridesNavigatorView.instance().setupNewWorkspace();\n        await networkPersistenceManager.getOrCreateHeadersUISourceCodeFromUrl(request.url());\n        await Common.Revealer.reveal(requestLocation);\n      });\n    }\n  }\n\n  private clearBrowserCache(): void {\n    if (confirm(i18nString(UIStrings.areYouSureYouWantToClearBrowser))) {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().clearBrowserCache();\n    }\n  }\n\n  private clearBrowserCookies(): void {\n    if (confirm(i18nString(UIStrings.areYouSureYouWantToClearBrowserCookies))) {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().clearBrowserCookies();\n    }\n  }\n\n  private applyFilter(request: SDK.NetworkRequest.NetworkRequest): boolean {\n    if (this.timeFilter && !this.timeFilter(request)) {\n      return false;\n    }\n    const categoryName = request.resourceType().category().name;\n    if (!this.resourceCategoryFilterUI.accept(categoryName)) {\n      return false;\n    }\n    const [hideDataURL, blockedCookies, blockedRequests, thirdParty, hideExtensionURL, ippRequests] = [\n      this.networkHideDataURLSetting.get(),\n      this.networkShowBlockedCookiesOnlySetting.get(),\n      this.networkOnlyBlockedRequestsSetting.get(),\n      this.networkOnlyThirdPartySetting.get(),\n      this.networkHideChromeExtensions.get(),\n      // TODO(crbug.com/425645896): Remove this guard once IP Protection is fully launched.\n      Root.Runtime.hostConfig.devToolsIpProtectionInDevTools?.enabled ?\n          this.networkOnlyIPProtectedRequestsSetting.get() :\n          false,\n    ];\n\n    if (hideDataURL && (request.parsedURL.isDataURL() || request.parsedURL.isBlobURL())) {\n      return false;\n    }\n    if (blockedCookies && !request.blockedResponseCookies().length) {\n      return false;\n    }\n    if (blockedRequests && !request.wasBlocked() && !request.corsErrorStatus()) {\n      return false;\n    }\n    if (thirdParty && request.isSameSite()) {\n      return false;\n    }\n    if (hideExtensionURL && request.scheme === 'chrome-extension') {\n      return false;\n    }\n    // TODO(crbug.com/425645896): Remove this guard once IP Protection is fully launched.\n    if (Root.Runtime.hostConfig.devToolsIpProtectionInDevTools?.enabled) {\n      if (ippRequests && !request.isIpProtectionUsed()) {\n        return false;\n      }\n    }\n    for (let i = 0; i < this.filters.length; ++i) {\n      if (!this.filters[i](request)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private isValidUrl(url: string): boolean {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  private parseFilterQuery(query: string, invert: boolean): void {\n    // A query string can have multiple filters, some of them regular\n    // expressions, some not. Each one of those filters can be negated with a\n    // \"-\" prefix, including the regular expressions. The top-level `invert`\n    // checkbox therefore inverts each one of those individual filters.\n    const descriptors = this.filterParser.parse(query);\n    this.filters = descriptors.map(descriptor => {\n      const key = descriptor.key;\n      const text = descriptor.text || '';\n      const regex = descriptor.regex;\n      let filter;\n      if (key) {\n        const defaultText = Platform.StringUtilities.escapeForRegExp(key + ':' + text);\n        filter = this.createSpecialFilter((key as NetworkForward.UIFilter.FilterType), text) ||\n            NetworkLogView.requestPathFilter.bind(null, new RegExp(defaultText, 'i'));\n      } else if (descriptor.regex) {\n        filter = NetworkLogView.requestPathFilter.bind(null, (regex as RegExp));\n      } else if (this.isValidUrl(text)) {\n        filter = NetworkLogView.requestUrlFilter.bind(null, text);\n      } else {\n        filter = NetworkLogView.requestPathFilter.bind(\n            null, new RegExp(Platform.StringUtilities.escapeForRegExp(text), 'i'));\n      }\n      if ((descriptor.negative && !invert) || (!descriptor.negative && invert)) {\n        return NetworkLogView.negativeFilter.bind(null, filter);\n      }\n      return filter;\n    });\n  }\n\n  private createSpecialFilter(type: NetworkForward.UIFilter.FilterType, value: string): Filter|null {\n    switch (type) {\n      case NetworkForward.UIFilter.FilterType.Domain:\n        return NetworkLogView.createRequestDomainFilter(value);\n\n      case NetworkForward.UIFilter.FilterType.HasResponseHeader:\n        return NetworkLogView.requestResponseHeaderFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.ResponseHeaderValueSetCookie:\n        return NetworkLogView.requestResponseHeaderSetCookieFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.HasRequestHeader:\n        return NetworkLogView.requestRequestHeaderFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.Is:\n        if (value.toLowerCase() === NetworkForward.UIFilter.IsFilterType.RUNNING) {\n          return NetworkLogView.runningRequestFilter;\n        }\n        if (value.toLowerCase() === NetworkForward.UIFilter.IsFilterType.FROM_CACHE) {\n          return NetworkLogView.fromCacheRequestFilter;\n        }\n        if (value.toLowerCase() === NetworkForward.UIFilter.IsFilterType.SERVICE_WORKER_INTERCEPTED) {\n          return NetworkLogView.interceptedByServiceWorkerFilter;\n        }\n        if (value.toLowerCase() === NetworkForward.UIFilter.IsFilterType.SERVICE_WORKER_INITIATED) {\n          return NetworkLogView.initiatedByServiceWorkerFilter;\n        }\n        break;\n\n      case NetworkForward.UIFilter.FilterType.LargerThan:\n        return this.createSizeFilter(value.toLowerCase());\n\n      case NetworkForward.UIFilter.FilterType.Method:\n        return NetworkLogView.requestMethodFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.MimeType:\n        return NetworkLogView.requestMimeTypeFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.MixedContent:\n        return NetworkLogView.requestMixedContentFilter.bind(\n            null, (value as NetworkForward.UIFilter.MixedContentFilterValues));\n\n      case NetworkForward.UIFilter.FilterType.Scheme:\n        return NetworkLogView.requestSchemeFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.SetCookieDomain:\n        return NetworkLogView.requestSetCookieDomainFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.SetCookieName:\n        return NetworkLogView.requestSetCookieNameFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.SetCookieValue:\n        return NetworkLogView.requestSetCookieValueFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.CookieDomain:\n        return NetworkLogView.requestCookieDomainFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.CookieName:\n        return NetworkLogView.requestCookieNameFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.CookiePath:\n        return NetworkLogView.requestCookiePathFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.CookieValue:\n        return NetworkLogView.requestCookieValueFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.Priority:\n        return NetworkLogView.requestPriorityFilter.bind(\n            null, PerfUI.NetworkPriorities.uiLabelToNetworkPriority(value));\n\n      case NetworkForward.UIFilter.FilterType.StatusCode:\n        return NetworkLogView.statusCodeFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.HasOverrides:\n        return NetworkLogView.hasOverridesFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.ResourceType:\n        return NetworkLogView.resourceTypeFilter.bind(null, value);\n\n      case NetworkForward.UIFilter.FilterType.Url:\n        return NetworkLogView.requestUrlFilter.bind(null, value);\n    }\n    return null;\n  }\n\n  private createSizeFilter(value: string): Filter|null {\n    let multiplier = 1;\n    if (value.endsWith('k')) {\n      multiplier = 1000;\n      value = value.substring(0, value.length - 1);\n    } else if (value.endsWith('m')) {\n      multiplier = 1000 * 1000;\n      value = value.substring(0, value.length - 1);\n    }\n    const quantity = Number(value);\n    if (isNaN(quantity)) {\n      return null;\n    }\n    return NetworkLogView.requestSizeLargerThanFilter.bind(null, quantity * multiplier);\n  }\n\n  private filterRequests(): void {\n    this.removeAllNodeHighlights();\n    this.invalidateAllItems();\n  }\n\n  private reveal(request: SDK.NetworkRequest.NetworkRequest): NetworkRequestNode|null {\n    this.removeAllNodeHighlights();\n    const node = this.networkRequestToNode.get(request);\n    if (!node?.dataGrid) {\n      return null;\n    }\n    // Viewport datagrid nodes do not reveal if not in the root node\n    // list of flatChildren. For children of grouped frame nodes:\n    // reveal and expand parent to ensure child is revealable.\n    if (node.parent && node.parent instanceof NetworkGroupNode) {\n      node.parent.reveal();\n      node.parent.expand();\n    }\n    node.reveal();\n    return node;\n  }\n\n  revealAndHighlightRequest(request: SDK.NetworkRequest.NetworkRequest): void {\n    const node = this.reveal(request);\n    if (node) {\n      this.highlightNode(node);\n    }\n  }\n\n  revealAndHighlightRequestWithId(requestId: NetworkForward.NetworkRequestId.NetworkRequestId): void {\n    const request = Logs.NetworkLog.NetworkLog.instance().requestByManagerAndId(requestId.manager, requestId.requestId);\n    if (request) {\n      this.revealAndHighlightRequest(request);\n    }\n  }\n\n  selectRequest(request: SDK.NetworkRequest.NetworkRequest, options?: NetworkForward.UIRequestLocation.FilterOptions):\n      void {\n    const defaultOptions = {clearFilter: true};\n    const {clearFilter} = options || defaultOptions;\n    if (clearFilter) {\n      this.setTextFilterValue('');\n    }\n    const node = this.reveal(request);\n    if (node) {\n      node.select();\n    }\n  }\n\n  removeAllNodeHighlights(): void {\n    if (this.highlightedNode) {\n      this.highlightedNode.element().classList.remove('highlighted-row');\n      this.highlightedNode = null;\n    }\n  }\n\n  private highlightNode(node: NetworkRequestNode): void {\n    UI.UIUtils.runCSSAnimationOnce(node.element(), 'highlighted-row');\n    this.highlightedNode = node;\n  }\n\n  private filterOutBlobRequests(requests: SDK.NetworkRequest.NetworkRequest[]): SDK.NetworkRequest.NetworkRequest[] {\n    return requests.filter(request => !request.isBlobRequest());\n  }\n\n  private async generateFetchCall(request: SDK.NetworkRequest.NetworkRequest, style: FetchStyle): Promise<string> {\n    const ignoredHeaders = new Set<string>([\n      // Internal headers\n      'method',\n      'path',\n      'scheme',\n      'version',\n\n      // Unsafe headers\n      // Keep this list synchronized with src/net/http/http_util.cc\n      'accept-charset',\n      'accept-encoding',\n      'access-control-request-headers',\n      'access-control-request-method',\n      'connection',\n      'content-length',\n      'cookie',\n      'cookie2',\n      'date',\n      'dnt',\n      'expect',\n      'host',\n      'keep-alive',\n      'origin',\n      'referer',\n      'te',\n      'trailer',\n      'transfer-encoding',\n      'upgrade',\n      'via',\n      // TODO(phistuck) - remove this once crbug.com/571722 is fixed.\n      'user-agent',\n    ]);\n\n    const credentialHeaders = new Set<string>(['cookie', 'authorization']);\n\n    const url = JSON.stringify(request.url());\n\n    const requestHeaders = request.requestHeaders();\n    const headerData: Headers = requestHeaders.reduce((result, header) => {\n      const name = header.name;\n\n      if (!ignoredHeaders.has(name.toLowerCase()) && !name.includes(':')) {\n        result.append(name, header.value);\n      }\n\n      return result;\n    }, new Headers());\n\n    const headers: HeadersInit = {};\n    for (const headerArray of headerData) {\n      headers[headerArray[0]] = headerArray[1];\n    }\n\n    const credentials = request.includedRequestCookies().length ||\n            requestHeaders.some(({name}) => credentialHeaders.has(name.toLowerCase())) ?\n        'include' :\n        'omit';\n\n    const referrerHeader = requestHeaders.find(({name}) => name.toLowerCase() === 'referer');\n\n    const referrer = referrerHeader ? referrerHeader.value : void 0;\n\n    const requestBody = await request.requestFormData();\n\n    const fetchOptions: RequestInit = {\n      headers: Object.keys(headers).length ? headers : void 0,\n      referrer,\n      body: requestBody,\n      method: request.requestMethod,\n      mode: 'cors',\n    };\n\n    if (style === FetchStyle.NODE_JS) {\n      const cookieHeader = requestHeaders.find(header => header.name.toLowerCase() === 'cookie');\n      const extraHeaders: HeadersInit = {};\n      // According to https://www.npmjs.com/package/node-fetch#class-request the\n      // following properties are not implemented in Node.js.\n      delete fetchOptions.mode;\n      if (cookieHeader) {\n        extraHeaders['cookie'] = cookieHeader.value;\n      }\n      if (referrer) {\n        delete fetchOptions.referrer;\n        extraHeaders['Referer'] = referrer;\n      }\n      if (Object.keys(extraHeaders).length) {\n        fetchOptions.headers = {\n          ...headers,\n          ...extraHeaders,\n        };\n      }\n    } else {\n      fetchOptions.credentials = credentials;\n    }\n\n    const options = JSON.stringify(fetchOptions, null, 2);\n    return `fetch(${url}, ${options});`;\n  }\n\n  private async generateAllFetchCall(requests: SDK.NetworkRequest.NetworkRequest[], style: FetchStyle):\n      Promise<string> {\n    const nonBlobRequests = this.filterOutBlobRequests(requests);\n    const commands = await Promise.all(nonBlobRequests.map(request => this.generateFetchCall(request, style)));\n    return commands.join(' ;\\n');\n  }\n\n  static async generateCurlCommand(request: SDK.NetworkRequest.NetworkRequest, platform: 'unix'|'win'):\n      Promise<string> {\n    let command: string[] = [];\n    // Most of these headers are derived from the URL and are automatically added by cURL.\n    // The |Accept-Encoding| header is ignored to prevent decompression errors. crbug.com/1015321\n    const ignoredHeaders =\n        new Set<string>(['accept-encoding', 'host', 'method', 'path', 'scheme', 'version', 'authority', 'protocol']);\n\n    function escapeStringWin(str: string): string {\n      /* Always escape the \" characters so that we can use caret escaping.\n\n         Because cmd.exe parser and MS Crt arguments parsers use some of the\n         same escape characters, they can interact with each other in\n         horrible ways, the order of operations is critical.\n\n         Replace \\ with \\\\ first because it is an escape character for certain\n         conditions in both parsers.\n\n         Replace all \" with \\\" to ensure the first parser does not remove it.\n\n         Then escape all characters we are not sure about with ^ to ensure it\n         gets to MS Crt parser safely.\n\n         The % character is special because MS Crt parser will try and look for\n         ENV variables and fill them in its place. We cannot escape them with %\n         and cannot escape them with ^ (because it's cmd.exe's escape not MS Crt\n         parser); So we can get cmd.exe parser to escape the character after it,\n         if it is followed by a valid beginning character of an ENV variable.\n         This ensures we do not try and double escape another ^ if it was placed\n         by the previous replace.\n\n         Lastly we replace new lines with ^ and TWO new lines because the first\n         new line is there to enact the escape command the second is the character\n         to escape (in this case new line).\n        */\n      const encapsChars = '^\"';\n      return encapsChars +\n          str.replace(/\\\\/g, '\\\\\\\\')\n              .replace(/\"/g, '\\\\\"')\n              .replace(/[^a-zA-Z0-9\\s_\\-:=+~'\\/.',?;()*`]/g, '^$&')\n              .replace(/%(?=[a-zA-Z0-9_])/g, '%^')\n              .replace(/[^\\S \\r\\n]/g, '^$&')\n              .replace(/\\r?\\n|\\r/g, '^\\n\\n') +\n          encapsChars;\n    }\n\n    function escapeStringPosix(str: string): string {\n      function escapeCharacter(x: string): string {\n        const code = x.charCodeAt(0);\n        let hexString = code.toString(16);\n        // Zero pad to four digits to comply with ANSI-C Quoting:\n        // http://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n        while (hexString.length < 4) {\n          hexString = '0' + hexString;\n        }\n\n        return '\\\\u' + hexString;\n      }\n\n      if (/[\\0-\\x1F\\x7F-\\x9F!]|\\'/.test(str)) {\n        // Use ANSI-C quoting syntax.\n        return '$\\'' +\n            str.replace(/\\\\/g, '\\\\\\\\')\n                .replace(/\\'/g, '\\\\\\'')\n                .replace(/\\n/g, '\\\\n')\n                .replace(/\\r/g, '\\\\r')\n                .replace(/[\\0-\\x1F\\x7F-\\x9F!]/g, escapeCharacter) +\n            '\\'';\n      }\n      // Use single quote syntax.\n      return '\\'' + str + '\\'';\n    }\n\n    // cURL command expected to run on the same platform that DevTools run\n    // (it may be different from the inspected page platform).\n    const escapeString = platform === 'win' ? escapeStringWin : escapeStringPosix;\n\n    command.push(escapeString(request.url()).replace(/[[{}\\]]/g, '\\\\$&'));\n\n    let inferredMethod = 'GET';\n    const data = [];\n    const formData = await request.requestFormData();\n    if (formData) {\n      // Note that formData is not necessarily urlencoded because it might for example\n      // come from a fetch request made with an explicitly unencoded body.\n      data.push('--data-raw ' + escapeString(formData));\n      ignoredHeaders.add('content-length');\n      inferredMethod = 'POST';\n    }\n\n    if (request.requestMethod !== inferredMethod) {\n      command.push('-X ' + escapeString(request.requestMethod));\n    }\n\n    const requestHeaders = request.requestHeaders();\n    for (let i = 0; i < requestHeaders.length; i++) {\n      const header = requestHeaders[i];\n      const name = header.name.replace(/^:/, '');  // Translate SPDY v3 headers to HTTP headers.\n      if (ignoredHeaders.has(name.toLowerCase())) {\n        continue;\n      }\n      const value = header.value;\n      if (!value.trim()) {\n        // A header passed with -H with no value or only whitespace as its\n        // value tells curl to not set the header at all. To post an empty\n        // header, you have to terminate it with a semicolon.\n        command.push('-H ' + escapeString(name + ';'));\n      } else if (name.toLowerCase() === 'cookie') {\n        command.push('-b ' + escapeString(value));\n      } else {\n        command.push('-H ' + escapeString(name + ': ' + value));\n      }\n    }\n    command = command.concat(data);\n\n    if (request.securityState() === Protocol.Security.SecurityState.Insecure) {\n      command.push('--insecure');\n    }\n    return 'curl ' + command.join(command.length >= 3 ? (platform === 'win' ? ' ^\\n  ' : ' \\\\\\n  ') : ' ');\n  }\n\n  private async generateAllCurlCommand(requests: SDK.NetworkRequest.NetworkRequest[], platform: 'unix'|'win'):\n      Promise<string> {\n    const nonBlobRequests = this.filterOutBlobRequests(requests);\n    const commands =\n        await Promise.all(nonBlobRequests.map(request => NetworkLogView.generateCurlCommand(request, platform)));\n    if (platform === 'win') {\n      return commands.join(' &\\r\\n');\n    }\n    return commands.join(' ;\\n');\n  }\n\n  private async generatePowerShellCommand(request: SDK.NetworkRequest.NetworkRequest): Promise<string> {\n    const command = [];\n    const ignoredHeaders = new Set<string>([\n      'host',\n      'connection',\n      'proxy-connection',\n      'content-length',\n      'expect',\n      'range',\n      'content-type',\n      'user-agent',\n      'cookie',\n    ]);\n\n    function escapeString(str: string): string {\n      return '\"' +\n          str.replace(/[`\\$\"]/g, '`$&').replace(/[^\\x20-\\x7E]/g, char => '$([char]' + char.charCodeAt(0) + ')') + '\"';\n    }\n\n    // Generate a WebRequestSession object with the UserAgent and Cookie header values.\n    // This is used to pass the user-agent and cookie headers to Invoke-WebRequest because the Invoke-WebRequest\n    // command does not allow setting these headers through the -Headers parameter. See docs at:\n    // https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-webrequest?view=powershell-7.1#parameters\n    function generatePowerShellSession(request: SDK.NetworkRequest.NetworkRequest): string|null {\n      const requestHeaders = request.requestHeaders();\n      const props = [];\n\n      const userAgentHeader = requestHeaders.find(({name}) => name.toLowerCase() === 'user-agent');\n      if (userAgentHeader) {\n        props.push(`$session.UserAgent = ${escapeString(userAgentHeader.value)}`);\n      }\n\n      for (const includedCookie of request.includedRequestCookies()) {\n        const name = escapeString(includedCookie.cookie.name());\n        const value = escapeString(includedCookie.cookie.value());\n        const domain = escapeString(includedCookie.cookie.domain());\n        props.push(`$session.Cookies.Add((New-Object System.Net.Cookie(${name}, ${value}, \"/\", ${domain})))`);\n      }\n\n      if (props.length) {\n        return '$session = New-Object Microsoft.PowerShell.Commands.WebRequestSession\\n' + props.join('\\n') + '\\n';\n      }\n\n      return null;\n    }\n\n    command.push('-Uri ' + escapeString(request.url()));\n\n    if (request.requestMethod !== 'GET') {\n      command.push('-Method ' + escapeString(request.requestMethod));\n    }\n\n    const session = generatePowerShellSession(request);\n    if (session) {\n      command.push('-WebSession $session');\n    }\n\n    const requestHeaders = request.requestHeaders();\n    const headerNameValuePairs = [];\n    for (const header of requestHeaders) {\n      const name = header.name.replace(/^:/, '');  // Translate h2 headers to HTTP headers.\n      if (ignoredHeaders.has(name.toLowerCase())) {\n        continue;\n      }\n      headerNameValuePairs.push(escapeString(name) + '=' + escapeString(header.value));\n    }\n    if (headerNameValuePairs.length) {\n      command.push('-Headers @{\\n' + headerNameValuePairs.join('\\n  ') + '\\n}');\n    }\n\n    const contentTypeHeader = requestHeaders.find(({name}) => name.toLowerCase() === 'content-type');\n    if (contentTypeHeader) {\n      command.push('-ContentType ' + escapeString(contentTypeHeader.value));\n    }\n\n    const formData = await request.requestFormData();\n    if (formData) {\n      const body = escapeString(formData);\n      if (/[^\\x20-\\x7E]/.test(formData)) {\n        command.push('-Body ([System.Text.Encoding]::UTF8.GetBytes(' + body + '))');\n      } else {\n        command.push('-Body ' + body);\n      }\n    }\n\n    // The -UseBasicParsing parameter prevents Invoke-WebRequest from using the IE engine for parsing. Basic\n    // parsing is the default behavior in PowerShell 6.0.0+ and the parameter is included here for backwards\n    // compatibility only.\n    const prelude = session || '';\n    return prelude + 'Invoke-WebRequest -UseBasicParsing ' + command.join(command.length >= 3 ? ' `\\n' : ' ');\n  }\n\n  private async generateAllPowerShellCommand(requests: SDK.NetworkRequest.NetworkRequest[]): Promise<string> {\n    const nonBlobRequests = this.filterOutBlobRequests(requests);\n    const commands = await Promise.all(nonBlobRequests.map(request => this.generatePowerShellCommand(request)));\n    return commands.join(';\\r\\n');\n  }\n\n  static getDCLEventColor(): string {\n    return '--sys-color-blue';\n  }\n\n  static getLoadEventColor(): string {\n    return '--sys-color-error';\n  }\n}\n\nexport function computeStackTraceText(stackTrace: Protocol.Runtime.StackTrace): string {\n  let stackTraceText = '';\n  for (const frame of stackTrace.callFrames) {\n    const functionName = UI.UIUtils.beautifyFunctionName(frame.functionName);\n    stackTraceText += `${functionName} @ ${frame.url}:${frame.lineNumber + 1}\\n`;\n  }\n  if (stackTrace.parent) {\n    stackTraceText += computeStackTraceText(stackTrace.parent);\n  }\n  return stackTraceText;\n}\n\nconst filteredNetworkRequests = new WeakSet<NetworkRequestNode>();\n\nexport function isRequestFilteredOut(request: NetworkRequestNode): boolean {\n  return filteredNetworkRequests.has(request);\n}\n\nexport const HTTPSchemas = {\n  http: true,\n  https: true,\n  ws: true,\n  wss: true,\n};\n\nconst searchKeys: string[] = Object.values(NetworkForward.UIFilter.FilterType);\n\nexport interface GroupLookupInterface {\n  groupNodeForRequest(request: SDK.NetworkRequest.NetworkRequest): NetworkGroupNode|null;\n  reset(): void;\n}\n\nexport const overrideFilter = {\n  yes: 'yes',\n  no: 'no',\n  content: 'content',\n  headers: 'headers',\n};\n\nexport type Filter = (request: SDK.NetworkRequest.NetworkRequest) => boolean;\n\nexport class MoreFiltersDropDownUI extends Common.ObjectWrapper.ObjectWrapper<UI.FilterBar.FilterUIEventTypes>\n    implements UI.FilterBar.FilterUI {\n  private readonly filterElement: HTMLDivElement;\n  private readonly dropDownButton: UI.Toolbar.ToolbarMenuButton;\n  private networkHideDataURLSetting: Common.Settings.Setting<boolean>;\n  private networkHideChromeExtensionsSetting: Common.Settings.Setting<boolean>;\n  private networkShowBlockedCookiesOnlySetting: Common.Settings.Setting<boolean>;\n  private networkOnlyBlockedRequestsSetting: Common.Settings.Setting<boolean>;\n  private networkOnlyThirdPartySetting: Common.Settings.Setting<boolean>;\n  private networkOnlyIPProtectedRequestsSetting: Common.Settings.Setting<boolean>;\n  private activeFiltersCount: HTMLElement;\n  private activeFiltersCountAdorner: Adorners.Adorner.Adorner;\n\n  constructor() {\n    super();\n\n    this.networkHideDataURLSetting = Common.Settings.Settings.instance().createSetting('network-hide-data-url', false);\n    this.networkHideChromeExtensionsSetting =\n        Common.Settings.Settings.instance().createSetting('network-hide-chrome-extensions', false);\n    this.networkShowBlockedCookiesOnlySetting =\n        Common.Settings.Settings.instance().createSetting('network-show-blocked-cookies-only-setting', false);\n    this.networkOnlyBlockedRequestsSetting =\n        Common.Settings.Settings.instance().createSetting('network-only-blocked-requests', false);\n    this.networkOnlyThirdPartySetting =\n        Common.Settings.Settings.instance().createSetting('network-only-third-party-setting', false);\n    this.networkOnlyIPProtectedRequestsSetting =\n        Common.Settings.Settings.instance().createSetting('network-only-ip-protected-requests', false);\n\n    this.filterElement = document.createElement('div');\n    this.filterElement.setAttribute('aria-label', 'Show only/hide requests dropdown');\n    this.filterElement.setAttribute('jslog', `${VisualLogging.dropDown('more-filters').track({click: true})}`);\n\n    this.activeFiltersCountAdorner = new Adorners.Adorner.Adorner();\n    this.activeFiltersCount = document.createElement('span');\n    this.activeFiltersCountAdorner.data = {\n      name: 'countWrapper',\n      content: this.activeFiltersCount,\n    };\n    this.activeFiltersCountAdorner.classList.add('active-filters-count');\n    this.updateActiveFiltersCount();\n\n    this.dropDownButton = new UI.Toolbar.ToolbarMenuButton(\n        this.showMoreFiltersContextMenu.bind(this), /* isIconDropdown=*/ false, /* useSoftMenu=*/ true,\n        /* jslogContext=*/ undefined, /* iconName=*/ undefined,\n        /* keepOpen=*/ true);\n    this.dropDownButton.setTitle(i18nString(UIStrings.showOnlyHideRequests));\n    this.dropDownButton.setText(i18nString(UIStrings.moreFilters));\n    this.dropDownButton.setAdorner(this.activeFiltersCountAdorner);\n    this.filterElement.appendChild(this.dropDownButton.element);\n    this.dropDownButton.element.classList.add('dropdown-filterbar');\n    this.updateTooltip();\n  }\n\n  #onSettingChanged(): void {\n    this.dispatchEventToListeners(UI.FilterBar.FilterUIEvents.FILTER_CHANGED);\n  }\n\n  showMoreFiltersContextMenu(contextMenu: UI.ContextMenu.ContextMenu): void {\n    this.networkHideDataURLSetting.addChangeListener(this.#onSettingChanged.bind(this));\n    this.networkHideChromeExtensionsSetting.addChangeListener(this.#onSettingChanged.bind(this));\n    this.networkShowBlockedCookiesOnlySetting.addChangeListener(this.#onSettingChanged.bind(this));\n    this.networkOnlyBlockedRequestsSetting.addChangeListener(this.#onSettingChanged.bind(this));\n    this.networkOnlyThirdPartySetting.addChangeListener(this.#onSettingChanged.bind(this));\n    // TODO(crbug.com/425645896): Remove this guard once IP Protection is fully launched.\n    if (Root.Runtime.hostConfig.devToolsIpProtectionInDevTools?.enabled) {\n      this.networkOnlyIPProtectedRequestsSetting.addChangeListener(this.#onSettingChanged.bind(this));\n    }\n\n    contextMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.hideDataUrls),\n        () => this.networkHideDataURLSetting.set(!this.networkHideDataURLSetting.get()), {\n          checked: this.networkHideDataURLSetting.get(),\n          tooltip: i18nString(UIStrings.hidesDataAndBlobUrls),\n          jslogContext: 'hide-data-urls',\n        });\n    contextMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.chromeExtensions),\n        () => this.networkHideChromeExtensionsSetting.set(!this.networkHideChromeExtensionsSetting.get()), {\n          checked: this.networkHideChromeExtensionsSetting.get(),\n          tooltip: i18nString(UIStrings.hideChromeExtension),\n          jslogContext: 'hide-extension-urls',\n        });\n    contextMenu.defaultSection().appendSeparator();\n\n    contextMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.hasBlockedCookies),\n        () => this.networkShowBlockedCookiesOnlySetting.set(!this.networkShowBlockedCookiesOnlySetting.get()), {\n          checked: this.networkShowBlockedCookiesOnlySetting.get(),\n          tooltip: i18nString(UIStrings.onlyShowRequestsWithBlockedCookies),\n          jslogContext: 'only-blocked-response-cookies',\n        });\n    contextMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.blockedRequests),\n        () => this.networkOnlyBlockedRequestsSetting.set(!this.networkOnlyBlockedRequestsSetting.get()), {\n          checked: this.networkOnlyBlockedRequestsSetting.get(),\n          tooltip: i18nString(UIStrings.onlyShowBlockedRequests),\n          jslogContext: 'only-blocked-requests',\n        });\n    // Disable this filter if in regular browsing, as IP Protection is only available in incognito mode.\n    // TODO(crbug.com/425645896): Remove this guard once IP Protection is fully launched.\n    if (Root.Runtime.hostConfig.devToolsIpProtectionInDevTools?.enabled) {\n      contextMenu.defaultSection().appendCheckboxItem(\n          i18nString(UIStrings.ippRequests),\n          () => this.networkOnlyIPProtectedRequestsSetting.set(!this.networkOnlyIPProtectedRequestsSetting.get()), {\n            checked: this.networkOnlyIPProtectedRequestsSetting.get(),\n            tooltip: i18nString(UIStrings.onlyShowIPProtectedRequests),\n            jslogContext: 'only-ip-protected-requests',\n          });\n    }\n    contextMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.thirdParty),\n        () => this.networkOnlyThirdPartySetting.set(!this.networkOnlyThirdPartySetting.get()), {\n          checked: this.networkOnlyThirdPartySetting.get(),\n          tooltip: i18nString(UIStrings.onlyShowThirdPartyRequests),\n          jslogContext: 'only-3rd-party-requests',\n        });\n  }\n\n  selectedFilters(): string[] {\n    const filters = [\n      ...this.networkHideDataURLSetting.get() ? [i18nString(UIStrings.hideDataUrls)] : [],\n      ...this.networkHideChromeExtensionsSetting.get() ? [i18nString(UIStrings.chromeExtensions)] : [],\n      ...this.networkShowBlockedCookiesOnlySetting.get() ? [i18nString(UIStrings.hasBlockedCookies)] : [],\n      ...this.networkOnlyBlockedRequestsSetting.get() ? [i18nString(UIStrings.blockedRequests)] : [],\n      ...this.networkOnlyThirdPartySetting.get() ? [i18nString(UIStrings.thirdParty)] : [],\n      ...Root.Runtime.hostConfig.devToolsIpProtectionInDevTools?.enabled &&\n              this.networkOnlyIPProtectedRequestsSetting.get() ?\n          [i18nString(UIStrings.ippRequests)] :\n          [],\n    ];\n    return filters;\n  }\n\n  updateActiveFiltersCount(): void {\n    const count = this.selectedFilters().length;\n    this.activeFiltersCount.textContent = count.toString();\n    count ? this.activeFiltersCountAdorner.classList.remove('hidden') :\n            this.activeFiltersCountAdorner.classList.add('hidden');\n  }\n\n  updateTooltip(): void {\n    if (this.selectedFilters().length) {\n      this.dropDownButton.setTitle(this.selectedFilters().join(', '));\n    } else {\n      this.dropDownButton.setTitle(i18nString(UIStrings.showOnlyHideRequests));\n    }\n  }\n\n  isActive(): boolean {\n    return this.selectedFilters().length !== 0;\n  }\n\n  element(): HTMLDivElement {\n    return this.filterElement;\n  }\n}\n", "// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport type * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {NetworkGroupNode} from './NetworkDataGridNode.js';\nimport type {GroupLookupInterface, NetworkLogView} from './NetworkLogView.js';\n\nexport class NetworkFrameGrouper implements GroupLookupInterface {\n  private parentView: NetworkLogView;\n  private readonly activeGroups: Map<SDK.ResourceTreeModel.ResourceTreeFrame, FrameGroupNode>;\n\n  constructor(parentView: NetworkLogView) {\n    this.parentView = parentView;\n    this.activeGroups = new Map();\n  }\n\n  groupNodeForRequest(request: SDK.NetworkRequest.NetworkRequest): NetworkGroupNode|null {\n    const frame = SDK.ResourceTreeModel.ResourceTreeModel.frameForRequest(request);\n    if (!frame || frame.isOutermostFrame()) {\n      return null;\n    }\n    let groupNode = this.activeGroups.get(frame);\n    if (groupNode) {\n      return groupNode;\n    }\n    groupNode = new FrameGroupNode(this.parentView, frame);\n    this.activeGroups.set(frame, groupNode);\n    return groupNode;\n  }\n\n  reset(): void {\n    this.activeGroups.clear();\n  }\n}\n\nexport class FrameGroupNode extends NetworkGroupNode {\n  private readonly frame: SDK.ResourceTreeModel.ResourceTreeFrame;\n\n  constructor(parentView: NetworkLogView, frame: SDK.ResourceTreeModel.ResourceTreeFrame) {\n    super(parentView);\n    this.frame = frame;\n  }\n\n  override displayName(): string {\n    return new Common.ParsedURL.ParsedURL(this.frame.url).domain() || this.frame.name || '<iframe>';\n  }\n\n  override renderCell(cell: HTMLElement, columnId: string): void {\n    super.renderCell(cell, columnId);\n    const columnIndex = (this.dataGrid as DataGrid.DataGrid.DataGridImpl<unknown>).indexOfVisibleColumn(columnId);\n    if (columnIndex === 0) {\n      const name = this.displayName();\n      cell.appendChild(IconButton.Icon.create('frame', 'network-frame-group-icon'));\n      UI.UIUtils.createTextChild(cell, name);\n      UI.Tooltip.Tooltip.install(cell, name);\n      this.setCellAccessibleName(cell.textContent || '', cell, columnId);\n    }\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n.network-log-grid.data-grid {\n  border: none !important; /* stylelint-disable-line declaration-no-important */\n  flex: auto;\n}\n\n.network-log-grid.data-grid.no-selection:focus-visible {\n  border: none !important; /* stylelint-disable-line declaration-no-important */\n}\n\n#network-container {\n  overflow: hidden;\n}\n\n#network-container.grid-focused.no-node-selected:focus-within {\n  border: 1px solid var(--sys-color-state-focus-ring);\n}\n\n.network-summary-bar {\n  flex: 0 0 27px;\n  line-height: 27px;\n  padding-left: 5px;\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  user-select: text;\n}\n\n.panel.network devtools-toolbar.network-summary-bar {\n  border-bottom: 0;\n}\n\n.network-summary-bar dt-icon-label {\n  margin-right: 6px;\n}\n\n.network-summary-bar > * {\n  flex: none;\n}\n\n.network-log-grid.data-grid tbody {\n  background: transparent;\n}\n\n.network-log-grid.data-grid td {\n  height: 41px;\n  border-left: 1px solid var(--sys-color-divider);\n  vertical-align: middle;\n}\n\n.network-log-grid.data-grid .corner {\n  display: none;\n}\n\n.network-log-grid.data-grid.small td {\n  height: 21px;\n}\n\n.network-log-grid.data-grid th {\n  border-bottom: none;\n}\n\n.network-waterfall-header,\n.network-log-grid.data-grid thead th {\n  border-bottom: 1px solid var(--sys-color-divider);\n  border-left: 1px solid var(--sys-color-divider);\n}\n\n.network-waterfall-header,\n.network-log-grid.data-grid thead {\n  height: 31px;\n  background-color: var(--sys-color-surface1);\n}\n\n.network-waterfall-header.small,\n.network-log-grid.data-grid.small thead {\n  height: 27px;\n}\n\n.network-log-grid.data-grid select {\n  appearance: none;\n  border: none;\n  width: 100%;\n  color: inherit;\n}\n\n.network-log-grid.data-grid .waterfall-column {\n  padding: 1px 0;\n}\n\n.network-log-grid.data-grid .waterfall-column .sort-order-icon-container {\n  right: 15px;\n  pointer-events: none;\n}\n\n.network-log-grid.data-grid th.sortable:active {\n  background-image: none !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.network-cell-subtitle {\n  font-weight: normal;\n  color: var(--sys-color-token-subtle);\n}\n\n.network-badge {\n  margin-right: 4px;\n}\n\n.status-column .devtools-link {\n  color: inherit;\n}\n\n.initiator-column .text-button.devtools-link,\n.initiator-column .text-button.devtools-link:focus-visible {\n  color: inherit;\n  background-color: transparent;\n  outline-offset: 0;\n  max-height: 16px;\n}\n\n.network-error-row,\n.network-error-row .network-cell-subtitle {\n  /* stylelint-disable-next-line declaration-no-important */\n  color: var(--sys-color-error) !important;\n}\n\n.network-warning-row,\n.network-warning-row .network-cell-subtitle {\n  color: var(--sys-color-yellow);\n}\n\n.network-log-grid.data-grid tr.selected.network-error-row,\n.network-log-grid.data-grid tr.selected.network-error-row .network-cell-subtitle,\n.network-log-grid.data-grid tr.selected.network-error-row .network-dim-cell {\n  color: var(--sys-color-error);\n}\n\n.network-log-grid.data-grid tr.selected.network-warning-row,\n.network-log-grid.data-grid tr.selected.network-warning-row .network-cell-subtitle,\n.network-log-grid.data-grid tr.selected.network-warning-row .network-dim-cell {\n  color: var(--sys-color-yellow);\n}\n\n.network-log-grid.data-grid:focus-within tr.selected.network-error-row,\n.network-log-grid.data-grid:focus-within tr.selected.network-error-row .devtools-link,\n.network-log-grid.data-grid:focus-within tr.selected.network-error-row .network-cell-subtitle,\n.network-log-grid.data-grid:focus-within tr.selected.network-error-row .network-dim-cell {\n  color: var(--sys-color-error);\n}\n\n.network-log-grid.data-grid:focus-within tr.selected.network-warning-row,\n.network-log-grid.data-grid:focus-within tr.selected.network-warning-row .devtools-link,\n.network-log-grid.data-grid:focus-within tr.selected.network-warning-row .network-cell-subtitle,\n.network-log-grid.data-grid:focus-within tr.selected.network-warning-row .network-dim-cell {\n  color: var(--sys-color-yellow);\n}\n\n.network-log-grid.data-grid tr.selected,\n.network-log-grid.data-grid tr.selected .network-cell-subtitle,\n.network-log-grid.data-grid tr.selected .network-dim-cell {\n  color: inherit;\n}\n\n.network-log-grid.data-grid:focus tr.selected,\n.network-log-grid.data-grid:focus tr.selected .network-cell-subtitle,\n.network-log-grid.data-grid:focus tr.selected .network-dim-cell {\n  color: var(--sys-color-on-tonal-container);\n}\n\n.network-header-subtitle {\n  color: var(--sys-color-token-subtle);\n}\n\n.network-log-grid.data-grid.small .network-cell-subtitle,\n.network-log-grid.data-grid.small .network-header-subtitle {\n  display: none;\n}\n\n.network-log-grid.data-grid.small .network-cell-subtitle.always-visible {\n  display: inline;\n  margin-left: 4px;\n}\n\n.network-log-grid tr.highlighted-row {\n  animation: network-row-highlight-fadeout 2s 0s;\n}\n\n@keyframes network-row-highlight-fadeout {\n  from {\n    background-color: var(--sys-color-yellow-container);\n  }\n\n  to {\n    background-color: transparent;\n  }\n}\n\n/* Resource preview icons */\n/* These rules are grouped by type */\n.network-log-grid.data-grid .icon.image {\n  position: relative;\n}\n\n.network-log-grid.data-grid .icon {\n  float: left;\n  width: 32px;\n  height: 32px;\n  margin-top: 1px;\n  margin-right: 3px;\n}\n\n.network-log-grid.data-grid:focus-within .network-error-row.selected div.icon:not(.image) {\n  filter: none;\n}\n\n.network-log-grid.data-grid .network-error-row.data-grid-data-grid-node img.icon,\n.network-log-grid.data-grid .network-error-row.data-grid-data-grid-node.selected img.icon {\n  /* This is generated with https://codepen.io/sosuke/pen/Pjoqqp to target var(--color-red) */\n  filter: brightness(0) saturate(100%) invert(35%) sepia(76%) saturate(1413%) hue-rotate(338deg) brightness(92%) contrast(103%);\n}\n\n.data-grid-data-grid-node devtools-icon[name=\"arrow-up-down-circle\"],\n.network-log-grid.data-grid.small .icon {\n  width: 16px;\n  height: 16px;\n  vertical-align: sub;\n}\n\n.data-grid-data-grid-node .ai-button-container {\n  display: none;\n  float: right;\n\n  devtools-floating-button {\n    position: absolute;\n    z-index: 999;\n    margin-left: -17px;\n  }\n}\n\n.data-grid-data-grid-node:hover .ai-button-container {\n  display: inline-flex;\n}\n\n.image-network-icon-preview {\n  inset: 0;\n  margin: auto;\n  overflow: hidden;\n}\n\n.network-log-grid.data-grid .image-network-icon-preview {\n  position: absolute;\n  max-width: 18px;\n  max-height: 21px;\n  min-width: 1px;\n  min-height: 1px;\n}\n\n.network-log-grid.data-grid.small .image-network-icon-preview {\n  left: 2px;\n  right: 2px;\n  max-width: 10px;\n  max-height: 12px;\n}\n\n.network-log-grid.data-grid .trailing-link-icon {\n  padding-left: 0.5ex;\n}\n\n/* This is part of the large color block declared above, but should not be\n   extracted out. */\n.network-dim-cell {\n  color: var(--sys-color-token-subtle);\n}\n\n.network-frame-divider {\n  width: 2px;\n  background-color: var(--network-frame-divider-color); /* stylelint-disable-line plugin/use_theme_colors */\n  z-index: 10;\n  visibility: hidden;\n}\n\n#network-container.has-waterfall .data-container {\n  overflow: hidden;\n}\n\n.network-log-grid.data-grid .resources-dividers {\n  z-index: 0;\n}\n\n.network-log-grid.data-grid .resources-dividers-label-bar {\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  pointer-events: none;\n}\n\n.network-log-grid.data-grid span.separator-in-cell {\n  user-select: none;\n  min-width: 1ex;\n  display: inline-block;\n}\n\n.network-status-pane {\n  position: absolute;\n  inset: 0;\n  background-color: var(--sys-color-cdt-base-container);\n  z-index: 500;\n  overflow: auto;\n}\n\n.network-waterfall-header {\n  position: absolute;\n  border-left: 0;\n  width: 100%;\n  display: table;\n  z-index: 200;\n\n  & > div.hover-layer {\n    display: none;\n    background-color: var(--sys-color-state-hover-on-subtle);\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  &:hover > div.hover-layer {\n    display: block;\n  }\n}\n\n.network-waterfall-header div {\n  display: table-cell;\n  line-height: 14px;\n  margin: auto 0;\n  vertical-align: middle;\n  text-align: left;\n  font-weight: normal;\n  padding: 0 4px;\n}\n\n/* All network-waterfall-header rules are defined here instead of above */\n.network-waterfall-header .sort-order-icon-container {\n  position: absolute;\n  top: 1px;\n  right: 0;\n  bottom: 1px;\n  display: flex;\n  align-items: center;\n}\n\n.network-waterfall-header .sort-order-icon {\n  align-items: center;\n  margin-right: 4px;\n  margin-bottom: -2px;\n}\n\n.network-frame-group-icon {\n  display: inline-block;\n  margin: -7px 1px;\n  vertical-align: baseline;\n}\n\n.network-frame-group-badge {\n  margin-right: 4px;\n}\n\n.network-override-marker {\n  position: relative;\n  float: left;\n}\n\n.network-override-marker::before {\n  background-color: var(--sys-color-purple-bright);\n  content: var(--image-file-empty);\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  outline: 1px solid var(--icon-gap-toolbar);\n  left: 8px;\n  position: absolute;\n  top: 10px;\n  z-index: 1;\n}\n\n@media (forced-colors: active) {\n  .initiator-column .devtools-link {\n    color: linktext;\n  }\n\n  .network-log-grid.data-grid tbody tr.revealed.selected,\n  .network-log-grid.data-grid:focus-within tbody tr.revealed.selected,\n  .network-log-grid.data-grid:focus-within tr.selected .network-dim-cell,\n  .network-log-grid.data-grid tr.selected .network-dim-cell,\n  .network-log-grid.data-grid:focus-within tr.selected .initiator-column .devtools-link,\n  .network-log-grid.data-grid tr.selected .initiator-column .devtools-link,\n  .network-waterfall-header:hover * {\n    color: HighlightText;\n  }\n\n  .network-log-grid {\n    --color-grid-default: canvas;\n    --color-grid-stripe: canvas;\n    --color-grid-hovered: Highlight;\n    --color-grid-selected: ButtonText;\n    --color-grid-focus-selected: Highlight;\n  }\n\n  #network-container.no-node-selected:focus-within\n  {\n    forced-color-adjust: none;\n    border-color: Highlight;\n    background-color: canvas !important; /* stylelint-disable-line declaration-no-important */\n  }\n\n  .network-waterfall-header:hover {\n    forced-color-adjust: none;\n    background-color: Highlight !important; /* stylelint-disable-line declaration-no-important */\n\n    & > div.hover-layer {\n      display: none;\n    }\n  }\n\n  .network-waterfall-header.small,\n  .network-log-grid.data-grid.small thead .network-waterfall-header,\n  .network-log-grid.data-grid thead {\n    background-color: canvas;\n  }\n\n  .network-waterfall-header .sort-order-icon-container devtools-icon {\n    background-color: inherit;\n  }\n\n  .network-waterfall-header:hover .sort-order-icon-container devtools-icon {\n    color: HighlightText;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./networkLogView.css')} */`;", "// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {type NetworkNode, NetworkRequestNode} from './NetworkDataGridNode.js';\nimport type {NetworkLogView} from './NetworkLogView.js';\nimport {NetworkManageCustomHeadersView} from './NetworkManageCustomHeadersView.js';\nimport type {\n  NetworkTimeCalculator, NetworkTransferDurationCalculator, NetworkTransferTimeCalculator} from\n  './NetworkTimeCalculator.js';\nimport {NetworkWaterfallColumn} from './NetworkWaterfallColumn.js';\nimport {RequestInitiatorView} from './RequestInitiatorView.js';\n\nconst UIStrings = {\n  /**\n   * @description Data grid name for Network Log data grids\n   */\n  networkLog: 'Network Log',\n  /**\n   * @description Inner element text content in Network Log View Columns of the Network panel\n   */\n  waterfall: 'Waterfall',\n  /**\n   * @description A context menu item in the Network Log View Columns of the Network panel\n   */\n  responseHeaders: 'Response Headers',\n  /**\n   * @description A context menu item in the Network Log View Columns of the Network panel\n   */\n  requestHeaders: 'Request Headers',\n  /**\n   * @description Text in Network Log View Columns of the Network panel\n   */\n  manageHeaderColumns: 'Manage Header Columns…',\n  /**\n   * @description Text for the start time of an activity\n   */\n  startTime: 'Start Time',\n  /**\n   * @description Text in Network Log View Columns of the Network panel\n   */\n  responseTime: 'Response Time',\n  /**\n   * @description Text in Network Log View Columns of the Network panel\n   */\n  endTime: 'End Time',\n  /**\n   * @description Text in Network Log View Columns of the Network panel\n   */\n  totalDuration: 'Total Duration',\n  /**\n   * @description Text for the latency of a task\n   */\n  latency: 'Latency',\n  /**\n   * @description Text for the name of something\n   */\n  name: 'Name',\n  /**\n   * @description Text that refers to a file path\n   */\n  path: 'Path',\n  /**\n   * @description Text in Timeline UIUtils of the Performance panel\n   */\n  url: 'Url',\n  /**\n   * @description Text for one or a group of functions\n   */\n  method: 'Method',\n  /**\n   * @description Text for the status of something\n   */\n  status: 'Status',\n  /**\n   * @description Generic label for any text\n   */\n  text: 'Text',\n  /**\n   * @description Text for security or network protocol\n   */\n  protocol: 'Protocol',\n  /**\n   * @description Text in Network Log View Columns of the Network panel\n   */\n  scheme: 'Scheme',\n  /**\n   * @description Text for the domain of a website\n   */\n  domain: 'Domain',\n  /**\n   * @description Text in Network Log View Columns of the Network panel\n   */\n  remoteAddress: 'Remote Address',\n  /**\n   * @description Text that refers to some types\n   */\n  type: 'Type',\n  /**\n   * @description Text for the initiator of something\n   */\n  initiator: 'Initiator',\n  /**\n   * @description Column header in the Network log view of the Network panel\n   */\n  hasOverrides: 'Has overrides',\n  /**\n   * @description Column header in the Network log view of the Network panel\n   */\n  initiatorAddressSpace: 'Initiator Address Space',\n  /**\n   * @description Text for web cookies\n   */\n  cookies: 'Cookies',\n  /**\n   * @description Text in Network Log View Columns of the Network panel\n   */\n  setCookies: 'Set Cookies',\n  /**\n   * @description Text for the size of something\n   */\n  size: 'Size',\n  /**\n   * @description Text in Network Log View Columns of the Network panel\n   */\n  content: 'Content',\n  /**\n   * @description Noun that refers to a duration in milliseconds.\n   */\n  time: 'Time',\n  /**\n   * @description Text to show the priority of an item\n   */\n  priority: 'Priority',\n  /**\n   * @description Text in Network Log View Columns of the Network panel\n   */\n  connectionId: 'Connection ID',\n  /**\n   * @description Text in Network Log View Columns of the Network panel\n   */\n  remoteAddressSpace: 'Remote Address Space',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkLogViewColumns.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class NetworkLogViewColumns {\n  private networkLogView: NetworkLogView;\n  private readonly persistentSettings: Common.Settings.Setting<Record<string, {\n    visible: boolean,\n    title: string,\n  }>>;\n  private readonly networkLogLargeRowsSetting: Common.Settings.Setting<boolean>;\n  private readonly eventDividers: Map<string, number[]>;\n  private eventDividersShown: boolean;\n  private gridMode: boolean;\n  private columns: Descriptor[];\n  private waterfallRequestsAreStale: boolean;\n  private waterfallScrollerWidthIsStale: boolean;\n  private readonly popupLinkifier: Components.Linkifier.Linkifier;\n  private calculatorsMap: Map<string, NetworkTimeCalculator>;\n  private lastWheelTime: number;\n  private dataGridInternal!: DataGrid.SortableDataGrid.SortableDataGrid<NetworkNode>;\n  private splitWidget!: UI.SplitWidget.SplitWidget;\n  private waterfallColumn!: NetworkWaterfallColumn;\n  private activeScroller!: Element;\n  private dataGridScroller!: HTMLElement;\n  private waterfallScroller!: HTMLElement;\n  private waterfallScrollerContent!: HTMLDivElement;\n  private waterfallHeaderElement!: HTMLElement;\n  private waterfallColumnSortIcon!: IconButton.Icon.Icon;\n  private activeWaterfallSortId!: string;\n  private popoverHelper?: UI.PopoverHelper.PopoverHelper;\n  private hasScrollerTouchStarted?: boolean;\n  private scrollerTouchStartPos?: number;\n  constructor(\n      networkLogView: NetworkLogView, timeCalculator: NetworkTransferTimeCalculator,\n      durationCalculator: NetworkTransferDurationCalculator,\n      networkLogLargeRowsSetting: Common.Settings.Setting<boolean>) {\n    this.networkLogView = networkLogView;\n\n    this.persistentSettings = Common.Settings.Settings.instance().createSetting('network-log-columns', {});\n\n    this.networkLogLargeRowsSetting = networkLogLargeRowsSetting;\n    this.networkLogLargeRowsSetting.addChangeListener(this.updateRowsSize, this);\n\n    this.eventDividers = new Map();\n    this.eventDividersShown = false;\n\n    this.gridMode = true;\n\n    this.columns = [];\n\n    this.waterfallRequestsAreStale = false;\n    this.waterfallScrollerWidthIsStale = true;\n\n    this.popupLinkifier = new Components.Linkifier.Linkifier();\n\n    this.calculatorsMap = new Map();\n    this.calculatorsMap.set(CalculatorTypes.TIME, timeCalculator);\n    this.calculatorsMap.set(CalculatorTypes.DURATION, durationCalculator);\n\n    this.lastWheelTime = 0;\n\n    this.setupDataGrid();\n    this.setupWaterfall();\n\n    ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, () => {\n      this.scheduleRefresh();\n    });\n  }\n\n  private static convertToDataGridDescriptor(columnConfig: Descriptor): DataGrid.DataGrid.ColumnDescriptor {\n    const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n    return {\n      id: columnConfig.id,\n      title,\n      sortable: columnConfig.sortable,\n      align: columnConfig.align,\n      nonSelectable: columnConfig.nonSelectable,\n      weight: columnConfig.weight,\n      allowInSortByEvenWhenHidden: columnConfig.allowInSortByEvenWhenHidden,\n    } as DataGrid.DataGrid.ColumnDescriptor;\n  }\n\n  wasShown(): void {\n    this.updateRowsSize();\n  }\n\n  willHide(): void {\n    if (this.popoverHelper) {\n      this.popoverHelper.hidePopover();\n    }\n  }\n\n  reset(): void {\n    if (this.popoverHelper) {\n      this.popoverHelper.hidePopover();\n    }\n    this.eventDividers.clear();\n  }\n\n  private setupDataGrid(): void {\n    const defaultColumns = DEFAULT_COLUMNS;\n    const defaultColumnConfig = DEFAULT_COLUMN_CONFIG;\n    this.columns = ([] as Descriptor[]);\n    for (const currentConfigColumn of defaultColumns) {\n      const descriptor = Object.assign({}, defaultColumnConfig, currentConfigColumn);\n      const columnConfig = (descriptor as Descriptor);\n      columnConfig.id = columnConfig.id;\n      if (columnConfig.subtitle) {\n        const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n        const subtitle = columnConfig.subtitle instanceof Function ? columnConfig.subtitle() : columnConfig.subtitle;\n        columnConfig.titleDOMFragment = this.makeHeaderFragment(title, subtitle);\n      }\n      this.columns.push(columnConfig);\n    }\n    this.loadCustomColumnsAndSettings();\n\n    this.popoverHelper = new UI.PopoverHelper.PopoverHelper(\n        this.networkLogView.element, this.getPopoverRequest.bind(this), 'network.initiator-stacktrace');\n    this.popoverHelper.setTimeout(300, 300);\n    this.dataGridInternal = new DataGrid.SortableDataGrid.SortableDataGrid<NetworkNode>(({\n      displayName: (i18nString(UIStrings.networkLog) as string),\n      columns: this.columns.map(NetworkLogViewColumns.convertToDataGridDescriptor),\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    }));\n    this.dataGridScroller = (this.dataGridInternal.scrollContainer as HTMLDivElement);\n\n    this.updateColumns();\n    this.dataGridInternal.addEventListener(DataGrid.DataGrid.Events.SORTING_CHANGED, this.sortHandler, this);\n    this.dataGridInternal.setHeaderContextMenuCallback(this.innerHeaderContextMenu.bind(this));\n\n    this.activeWaterfallSortId = WaterfallSortIds.StartTime;\n    this.dataGridInternal.markColumnAsSortedBy(INITIAL_SORT_COLUMN, DataGrid.DataGrid.Order.Ascending);\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(true, true, 'network-panel-split-view-waterfall', 200);\n    const widget = this.dataGridInternal.asWidget();\n    widget.setMinimumSize(150, 0);\n    this.splitWidget.setMainWidget(widget);\n  }\n\n  private setupWaterfall(): void {\n    this.waterfallColumn = new NetworkWaterfallColumn(this.networkLogView.calculator());\n\n    this.waterfallColumn.element.addEventListener('contextmenu', handleContextMenu.bind(this));\n    this.waterfallColumn.element.addEventListener('wheel', this.onMouseWheel.bind(this, false), {passive: true});\n    this.waterfallColumn.element.addEventListener('touchstart', this.onTouchStart.bind(this));\n    this.waterfallColumn.element.addEventListener('touchmove', this.onTouchMove.bind(this));\n    this.waterfallColumn.element.addEventListener('touchend', this.onTouchEnd.bind(this));\n\n    this.dataGridScroller.addEventListener('wheel', this.onMouseWheel.bind(this, true), true);\n    this.dataGridScroller.addEventListener('touchstart', this.onTouchStart.bind(this));\n    this.dataGridScroller.addEventListener('touchmove', this.onTouchMove.bind(this));\n    this.dataGridScroller.addEventListener('touchend', this.onTouchEnd.bind(this));\n    this.waterfallScroller = this.waterfallColumn.contentElement.createChild('div', 'network-waterfall-v-scroll');\n    this.waterfallScrollerContent = this.waterfallScroller.createChild('div', 'network-waterfall-v-scroll-content');\n\n    this.dataGridInternal.addEventListener(DataGrid.DataGrid.Events.PADDING_CHANGED, () => {\n      this.waterfallScrollerWidthIsStale = true;\n      this.syncScrollers();\n    });\n    this.dataGridInternal.addEventListener(\n        DataGrid.ViewportDataGrid.Events.VIEWPORT_CALCULATED, this.redrawWaterfallColumn.bind(this));\n\n    this.createWaterfallHeader();\n    this.waterfallColumn.contentElement.classList.add('network-waterfall-view');\n\n    this.waterfallColumn.setMinimumSize(100, 0);\n    this.splitWidget.setSidebarWidget(this.waterfallColumn);\n\n    this.switchViewMode(false);\n\n    function handleContextMenu(this: NetworkLogViewColumns, event: MouseEvent): void {\n      const node = this.waterfallColumn.getNodeFromPoint(event.offsetY);\n      if (!node) {\n        return;\n      }\n      const request = node.request();\n      if (!request) {\n        return;\n      }\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      this.networkLogView.handleContextMenuForRequest(contextMenu, request);\n      void contextMenu.show();\n    }\n  }\n\n  private onMouseWheel(shouldConsume: boolean, event: WheelEvent): void {\n    if (shouldConsume) {\n      event.consume(true);\n    }\n    const hasRecentWheel = Date.now() - this.lastWheelTime < 80;\n    this.activeScroller.scrollBy({top: event.deltaY, behavior: hasRecentWheel ? 'auto' : 'smooth'});\n    this.syncScrollers();\n    this.lastWheelTime = Date.now();\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    this.hasScrollerTouchStarted = true;\n    this.scrollerTouchStartPos = event.changedTouches[0].pageY;\n  }\n\n  private onTouchMove(event: TouchEvent): void {\n    if (!this.hasScrollerTouchStarted) {\n      return;\n    }\n\n    const currentPos = event.changedTouches[0].pageY;\n    const delta = (this.scrollerTouchStartPos as number) - currentPos;\n\n    this.activeScroller.scrollBy({top: delta, behavior: 'auto'});\n    this.syncScrollers();\n\n    this.scrollerTouchStartPos = currentPos;\n  }\n\n  private onTouchEnd(): void {\n    this.hasScrollerTouchStarted = false;\n  }\n\n  private syncScrollers(): void {\n    if (!this.waterfallColumn.isShowing()) {\n      return;\n    }\n    this.waterfallScrollerContent.style.height =\n        this.dataGridScroller.scrollHeight - this.dataGridInternal.headerHeight() + 'px';\n    this.updateScrollerWidthIfNeeded();\n    this.dataGridScroller.scrollTop = this.waterfallScroller.scrollTop;\n  }\n\n  private updateScrollerWidthIfNeeded(): void {\n    if (this.waterfallScrollerWidthIsStale) {\n      this.waterfallScrollerWidthIsStale = false;\n      this.waterfallColumn.setRightPadding(\n          this.waterfallScroller.offsetWidth - this.waterfallScrollerContent.offsetWidth);\n    }\n  }\n\n  private redrawWaterfallColumn(): void {\n    if (!this.waterfallRequestsAreStale) {\n      this.updateScrollerWidthIfNeeded();\n      this.waterfallColumn.update(\n          this.activeScroller.scrollTop, this.eventDividersShown ? this.eventDividers : undefined);\n      return;\n    }\n    this.syncScrollers();\n    const nodes = this.networkLogView.flatNodesList();\n    this.waterfallColumn.update(this.activeScroller.scrollTop, this.eventDividers, nodes);\n  }\n\n  private createWaterfallHeader(): void {\n    this.waterfallHeaderElement = this.waterfallColumn.contentElement.createChild('div', 'network-waterfall-header');\n    this.waterfallHeaderElement.setAttribute('jslog', `${VisualLogging.tableHeader('waterfall').track({click: true})}`);\n    this.waterfallHeaderElement.addEventListener('click', waterfallHeaderClicked.bind(this));\n    this.waterfallHeaderElement.addEventListener('contextmenu', event => {\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      this.innerHeaderContextMenu(contextMenu);\n      void contextMenu.show();\n    });\n    this.waterfallHeaderElement.createChild('div', 'hover-layer');\n    const innerElement = this.waterfallHeaderElement.createChild('div');\n    innerElement.textContent = i18nString(UIStrings.waterfall);\n    this.waterfallColumnSortIcon = new IconButton.Icon.Icon();\n    this.waterfallColumnSortIcon.className = 'sort-order-icon';\n    this.waterfallHeaderElement.createChild('div', 'sort-order-icon-container')\n        .appendChild(this.waterfallColumnSortIcon);\n\n    function waterfallHeaderClicked(this: NetworkLogViewColumns): void {\n      const sortOrders = DataGrid.DataGrid.Order;\n      const wasSortedByWaterfall = this.dataGridInternal.sortColumnId() === 'waterfall';\n      const wasSortedAscending = this.dataGridInternal.isSortOrderAscending();\n      const sortOrder = wasSortedByWaterfall && wasSortedAscending ? sortOrders.Descending : sortOrders.Ascending;\n      this.dataGridInternal.markColumnAsSortedBy('waterfall', sortOrder);\n      this.sortHandler();\n    }\n  }\n\n  setCalculator(x: NetworkTimeCalculator): void {\n    this.waterfallColumn.setCalculator(x);\n  }\n\n  scheduleRefresh(): void {\n    this.waterfallColumn.scheduleDraw();\n  }\n  private updateRowsSize(): void {\n    const largeRows = Boolean(this.networkLogLargeRowsSetting.get());\n\n    this.dataGridInternal.element.classList.toggle('small', !largeRows);\n    this.dataGridInternal.scheduleUpdate();\n\n    this.waterfallScrollerWidthIsStale = true;\n    this.waterfallColumn.setRowHeight(largeRows ? 41 : 21);\n    this.waterfallScroller.classList.toggle('small', !largeRows);\n    this.waterfallHeaderElement.classList.toggle('small', !largeRows);\n\n    // Request an animation frame because under certain conditions\n    // (see crbug.com/1019723) this.waterfallScroller.offsetTop does\n    // not return the value it's supposed to return as of the applied\n    // css classes.\n    window.requestAnimationFrame(() => {\n      this.waterfallColumn.setHeaderHeight(this.waterfallScroller.offsetTop);\n      this.waterfallColumn.scheduleDraw();\n    });\n  }\n\n  show(element: Element): void {\n    this.splitWidget.show(element);\n  }\n\n  setHidden(value: boolean): void {\n    UI.ARIAUtils.setHidden(this.splitWidget.element, value);\n  }\n\n  dataGrid(): DataGrid.SortableDataGrid.SortableDataGrid<NetworkNode> {\n    return this.dataGridInternal;\n  }\n\n  sortByCurrentColumn(): void {\n    this.sortHandler();\n  }\n\n  filterChanged(): void {\n    // Request an animation frame because when the filter is cleared the\n    // NetworkLogView can be empty until it has been invalidated (see\n    // crbug.com/379762016).\n    window.requestAnimationFrame(() => {\n      this.dataGridInternal.scheduleUpdate();\n    });\n  }\n\n  private sortHandler(): void {\n    const columnId = this.dataGridInternal.sortColumnId();\n    this.networkLogView.removeAllNodeHighlights();\n    this.waterfallRequestsAreStale = true;\n    if (columnId === 'waterfall') {\n      if (this.dataGridInternal.sortOrder() === DataGrid.DataGrid.Order.Ascending) {\n        this.waterfallColumnSortIcon.name = 'triangle-up';\n      } else {\n        this.waterfallColumnSortIcon.name = 'triangle-down';\n      }\n      this.waterfallColumnSortIcon.hidden = false;\n\n      const sortFunction =\n          (NetworkRequestNode.RequestPropertyComparator.bind(null, this.activeWaterfallSortId) as\n               (arg0: DataGrid.SortableDataGrid.SortableDataGridNode<NetworkNode>,\n                arg1: DataGrid.SortableDataGrid.SortableDataGridNode<NetworkNode>) => number);\n      this.dataGridInternal.sortNodes(sortFunction, !this.dataGridInternal.isSortOrderAscending());\n      this.dataGridSortedForTest();\n      return;\n    }\n    this.waterfallColumnSortIcon.hidden = true;\n    this.waterfallColumnSortIcon.name = null;\n\n    const columnConfig = this.columns.find(columnConfig => columnConfig.id === columnId);\n    if (!columnConfig?.sortingFunction) {\n      return;\n    }\n    const sortingFunction =\n        (columnConfig.sortingFunction as\n             ((arg0: DataGrid.SortableDataGrid.SortableDataGridNode<NetworkNode>,\n               arg1: DataGrid.SortableDataGrid.SortableDataGridNode<NetworkNode>) => number) |\n         undefined);\n    if (!sortingFunction) {\n      return;\n    }\n    this.dataGridInternal.sortNodes(sortingFunction, !this.dataGridInternal.isSortOrderAscending());\n    this.dataGridSortedForTest();\n  }\n\n  private dataGridSortedForTest(): void {\n  }\n\n  private updateColumns(): void {\n    if (!this.dataGridInternal) {\n      return;\n    }\n    const visibleColumns = new Set<string>();\n    if (this.gridMode) {\n      for (const columnConfig of this.columns) {\n        if (columnConfig.id === 'waterfall') {\n          this.setWaterfallVisibility(columnConfig.visible);\n        } else if (columnConfig.visible) {\n          visibleColumns.add(columnConfig.id);\n        }\n      }\n    } else {\n      // Find the first visible column from the path group\n      const visibleColumn = this.columns.find(c => c.hideableGroup === 'path' && c.visible);\n      if (visibleColumn) {\n        visibleColumns.add(visibleColumn.id);\n      } else {\n        // This should not happen because inside a hideableGroup\n        // there should always be at least one column visible\n        // This is just in case.\n        visibleColumns.add('name');\n      }\n      this.setWaterfallVisibility(false);\n    }\n    this.dataGridInternal.setColumnsVisibility(visibleColumns);\n  }\n\n  switchViewMode(gridMode: boolean): void {\n    if (this.gridMode === gridMode) {\n      return;\n    }\n    this.gridMode = gridMode;\n    this.updateColumns();\n    this.updateRowsSize();\n  }\n\n  private toggleColumnVisibility(columnConfig: Descriptor): void {\n    this.loadCustomColumnsAndSettings();\n    columnConfig.visible = !columnConfig.visible;\n    this.saveColumnsSettings();\n    this.updateColumns();\n    this.updateRowsSize();\n  }\n\n  private setWaterfallVisibility(visible: boolean): void {\n    if (!this.splitWidget) {\n      return;\n    }\n    this.networkLogView.element.classList.toggle('has-waterfall', visible);\n    if (visible) {\n      this.splitWidget.showBoth();\n      this.activeScroller = this.waterfallScroller;\n      this.waterfallScroller.scrollTop = this.dataGridScroller.scrollTop;\n      this.dataGridInternal.setScrollContainer(this.waterfallScroller);\n    } else {\n      this.networkLogView.removeAllNodeHighlights();\n      this.splitWidget.hideSidebar();\n      this.activeScroller = this.dataGridScroller;\n      this.dataGridInternal.setScrollContainer(this.dataGridScroller);\n    }\n  }\n\n  private saveColumnsSettings(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const saveableSettings: Record<string, any> = {};\n    for (const columnConfig of this.columns) {\n      saveableSettings[columnConfig.id] = {\n        visible: columnConfig.visible,\n        title: columnConfig.title,\n      };\n    }\n\n    this.persistentSettings.set(saveableSettings);\n  }\n\n  private loadCustomColumnsAndSettings(): void {\n    const savedSettings = this.persistentSettings.get();\n    const columnIds = Object.keys(savedSettings);\n    for (const columnId of columnIds) {\n      const setting = savedSettings[columnId];\n      let columnConfig = this.columns.find(columnConfig => columnConfig.id === columnId);\n      if (!columnConfig && setting.title) {\n        columnConfig = this.addCustomHeader(setting.title, columnId) || undefined;\n      }\n\n      if (columnConfig) {\n        if (columnConfig.hideable && typeof setting.visible === 'boolean') {\n          columnConfig.visible = Boolean(setting.visible);\n        }\n        if (typeof setting.title === 'string') {\n          columnConfig.title = setting.title;\n        }\n      }\n    }\n  }\n\n  private makeHeaderFragment(title: string, subtitle: string): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(fragment, title);\n    const subtitleDiv = fragment.createChild('div', 'network-header-subtitle');\n    UI.UIUtils.createTextChild(subtitleDiv, subtitle);\n    return fragment;\n  }\n\n  private innerHeaderContextMenu(contextMenu: UI.ContextMenu.SubMenu): void {\n    const columnConfigs = this.columns.filter(columnConfig => columnConfig.hideable);\n    const nonRequestResponseHeaders =\n        columnConfigs.filter(columnConfig => !columnConfig.isRequestHeader && !columnConfig.isResponseHeader);\n\n    const hideableGroups = new Map<string, Descriptor[]>();\n    const nonRequestResponseHeadersWithoutGroup: Descriptor[] = [];\n\n    // Sort columns into their groups\n    for (const columnConfig of nonRequestResponseHeaders) {\n      if (!columnConfig.hideableGroup) {\n        nonRequestResponseHeadersWithoutGroup.push(columnConfig);\n      } else {\n        const name = columnConfig.hideableGroup;\n        let hideableGroup = hideableGroups.get(name);\n        if (!hideableGroup) {\n          hideableGroup = [];\n          hideableGroups.set(name, hideableGroup);\n        }\n\n        hideableGroup.push(columnConfig);\n      }\n    }\n\n    // Add all the groups first\n    for (const group of hideableGroups.values()) {\n      const visibleColumns = group.filter(columnConfig => columnConfig.visible);\n\n      for (const columnConfig of group) {\n        // Make sure that at least one item in every group is enabled\n        const disabled = visibleColumns.length === 1 && visibleColumns[0] === columnConfig;\n        const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n\n        contextMenu.headerSection().appendCheckboxItem(\n            title, this.toggleColumnVisibility.bind(this, columnConfig),\n            {checked: columnConfig.visible, disabled, jslogContext: columnConfig.id});\n      }\n\n      contextMenu.headerSection().appendSeparator();\n    }\n\n    // Add normal columns not belonging to any group\n    for (const columnConfig of nonRequestResponseHeadersWithoutGroup) {\n      const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n      contextMenu.headerSection().appendCheckboxItem(\n          title, this.toggleColumnVisibility.bind(this, columnConfig),\n          {checked: columnConfig.visible, jslogContext: columnConfig.id});\n    }\n\n    const responseSubMenu =\n        contextMenu.footerSection().appendSubMenuItem(i18nString(UIStrings.responseHeaders), false, 'response-headers');\n    const responseHeaders = columnConfigs.filter(columnConfig => columnConfig.isResponseHeader);\n    for (const columnConfig of responseHeaders) {\n      const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n      responseSubMenu.defaultSection().appendCheckboxItem(\n          title, this.toggleColumnVisibility.bind(this, columnConfig),\n          {checked: columnConfig.visible, jslogContext: columnConfig.id});\n    }\n\n    responseSubMenu.footerSection().appendItem(\n        i18nString(UIStrings.manageHeaderColumns), this.manageResponseCustomHeaderDialog.bind(this),\n        {jslogContext: 'manage-header-columns'});\n\n    const requestSubMenu =\n        contextMenu.footerSection().appendSubMenuItem(i18nString(UIStrings.requestHeaders), false, 'request-headers');\n    const requestHeaders = columnConfigs.filter(columnConfig => columnConfig.isRequestHeader);\n    for (const columnConfig of requestHeaders) {\n      const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n      requestSubMenu.defaultSection().appendCheckboxItem(\n          title, this.toggleColumnVisibility.bind(this, columnConfig),\n          {checked: columnConfig.visible, jslogContext: columnConfig.id});\n    }\n\n    requestSubMenu.footerSection().appendItem(\n        i18nString(UIStrings.manageHeaderColumns), this.manageRequestCustomHeaderDialog.bind(this),\n        {jslogContext: 'manage-header-columns'});\n\n    const waterfallSortIds = WaterfallSortIds;\n    const waterfallSubMenu =\n        contextMenu.footerSection().appendSubMenuItem(i18nString(UIStrings.waterfall), false, 'waterfall');\n    waterfallSubMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.startTime), setWaterfallMode.bind(this, waterfallSortIds.StartTime),\n        {checked: this.activeWaterfallSortId === waterfallSortIds.StartTime, jslogContext: 'start-time'});\n    waterfallSubMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.responseTime), setWaterfallMode.bind(this, waterfallSortIds.ResponseTime),\n        {checked: this.activeWaterfallSortId === waterfallSortIds.ResponseTime, jslogContext: 'response-time'});\n    waterfallSubMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.endTime), setWaterfallMode.bind(this, waterfallSortIds.EndTime),\n        {checked: this.activeWaterfallSortId === waterfallSortIds.EndTime, jslogContext: 'end-time'});\n    waterfallSubMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.totalDuration), setWaterfallMode.bind(this, waterfallSortIds.Duration),\n        {checked: this.activeWaterfallSortId === waterfallSortIds.Duration, jslogContext: 'total-duration'});\n    waterfallSubMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.latency), setWaterfallMode.bind(this, waterfallSortIds.Latency),\n        {checked: this.activeWaterfallSortId === waterfallSortIds.Latency, jslogContext: 'latency'});\n\n    function setWaterfallMode(this: NetworkLogViewColumns, sortId: WaterfallSortIds): void {\n      let calculator = this.calculatorsMap.get(CalculatorTypes.TIME);\n      const waterfallSortIds = WaterfallSortIds;\n      if (sortId === waterfallSortIds.Duration || sortId === waterfallSortIds.Latency) {\n        calculator = this.calculatorsMap.get(CalculatorTypes.DURATION);\n      }\n      this.networkLogView.setCalculator((calculator as NetworkTimeCalculator));\n\n      this.activeWaterfallSortId = sortId;\n      this.dataGridInternal.markColumnAsSortedBy('waterfall', DataGrid.DataGrid.Order.Ascending);\n      this.sortHandler();\n    }\n  }\n\n  private manageRequestCustomHeaderDialog(): void {\n    const customHeadersRequest = [];\n    for (const columnConfig of this.columns) {\n      const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n      if (columnConfig.isRequestHeader) {\n        customHeadersRequest.push({title, editable: columnConfig.isCustomHeader});\n      }\n    }\n\n    const manageCustomHeadersRequest = new NetworkManageCustomHeadersView(\n        customHeadersRequest,\n        headerTitle => Boolean(this.addCustomHeader(headerTitle, `request-header-${headerTitle}`)),\n        (oldHeaderId, headerTitle) => Boolean(\n            this.changeCustomHeader(`request-header-${oldHeaderId}`, headerTitle, `request-header-${headerTitle}`)),\n        headerTitle => Boolean(this.removeCustomHeader(`request-header-${headerTitle}`)));\n    const dialogRequest = new UI.Dialog.Dialog('manage-custom-request-headers');\n    manageCustomHeadersRequest.show(dialogRequest.contentElement);\n    dialogRequest.setSizeBehavior(UI.GlassPane.SizeBehavior.MEASURE_CONTENT);\n    dialogRequest.show(this.networkLogView.element);\n  }\n\n  private manageResponseCustomHeaderDialog(): void {\n    const customHeadersResponse = [];\n\n    for (const columnConfig of this.columns) {\n      const title = columnConfig.title instanceof Function ? columnConfig.title() : columnConfig.title;\n      if (columnConfig.isResponseHeader) {\n        customHeadersResponse.push({title, editable: columnConfig.isCustomHeader});\n      }\n    }\n\n    const manageCustomHeadersResponse = new NetworkManageCustomHeadersView(\n        customHeadersResponse,\n        headerTitle => Boolean(this.addCustomHeader(headerTitle, `response-header-${headerTitle}`)),\n        (oldHeaderId, headerTitle) => Boolean(\n            this.changeCustomHeader(`response-header-${oldHeaderId}`, headerTitle, `response-header-${headerTitle}`)),\n        headerTitle => Boolean(this.removeCustomHeader(`response-header-${headerTitle}`)));\n\n    const dialogResponse = new UI.Dialog.Dialog('manage-custom-response-headers');\n    manageCustomHeadersResponse.show(dialogResponse.contentElement);\n    dialogResponse.setSizeBehavior(UI.GlassPane.SizeBehavior.MEASURE_CONTENT);\n    dialogResponse.show(this.networkLogView.element);\n  }\n\n  private removeCustomHeader(headerId: string): boolean {\n    headerId = headerId.toLowerCase();\n    const index = this.columns.findIndex(columnConfig => columnConfig.id === headerId);\n    if (index === -1) {\n      return false;\n    }\n\n    this.columns.splice(index, 1);\n    this.dataGridInternal.removeColumn(headerId);\n    this.saveColumnsSettings();\n    this.updateColumns();\n    return true;\n  }\n\n  private addCustomHeader(headerTitle: string, headerId?: string, index?: number): Descriptor|null {\n    if (!headerId) {\n      headerId = headerTitle;\n    }\n    headerId = headerId.toLowerCase();\n\n    if (index === undefined) {\n      index = this.columns.length - 1;\n    }\n\n    const currentColumnConfig = this.columns.find(columnConfig => columnConfig.id === headerId);\n    if (currentColumnConfig) {\n      return null;\n    }\n\n    const isRequestHeader = headerId.startsWith('request-header-');\n    const sortingFunction = isRequestHeader ? NetworkRequestNode.RequestHeaderStringComparator.bind(null, headerId) :\n                                              NetworkRequestNode.ResponseHeaderStringComparator.bind(null, headerId);\n\n    const columnConfigBase = Object.assign({}, DEFAULT_COLUMN_CONFIG, {\n      id: headerId,\n      title: headerTitle,\n      isRequestHeader,\n      isResponseHeader: !isRequestHeader,\n      isCustomHeader: true,\n      visible: true,\n      sortingFunction,\n    });\n\n    // Split out the column config from the typed version, as doing it in a single assignment causes\n    // issues with Closure compiler.\n    const columnConfig = columnConfigBase as Descriptor;\n\n    this.columns.splice(index, 0, columnConfig);\n    if (this.dataGridInternal) {\n      this.dataGridInternal.addColumn(NetworkLogViewColumns.convertToDataGridDescriptor(columnConfig), index);\n    }\n    this.saveColumnsSettings();\n    this.updateColumns();\n    return columnConfig;\n  }\n\n  private changeCustomHeader(oldHeaderId: string, newHeaderTitle: string, newHeaderId?: string): boolean {\n    const headerType = oldHeaderId.startsWith('request-header-') ? 'request' : 'response';\n    if (!newHeaderId) {\n      newHeaderId = `${headerType}-header-${newHeaderTitle.toLowerCase()}`;\n    }\n    oldHeaderId = oldHeaderId.toLowerCase();\n    const oldIndex = this.columns.findIndex(columnConfig => columnConfig.id === oldHeaderId);\n    const oldColumnConfig = this.columns[oldIndex];\n    const currentColumnConfig = this.columns.find(columnConfig => columnConfig.id === newHeaderId);\n    if (!oldColumnConfig || (currentColumnConfig && oldHeaderId !== newHeaderId)) {\n      return false;\n    }\n\n    this.removeCustomHeader(oldHeaderId);\n    this.addCustomHeader(newHeaderTitle, newHeaderId, oldIndex);\n    return true;\n  }\n\n  private getPopoverRequest(event: Event): UI.PopoverHelper.PopoverRequest|null {\n    if (!this.gridMode) {\n      return null;\n    }\n    const hoveredNode = this.networkLogView.hoveredNode();\n    if (!hoveredNode || !event.target) {\n      return null;\n    }\n\n    const anchor = (event.target as HTMLElement).enclosingNodeOrSelfWithClass('network-script-initiated');\n    if (!anchor) {\n      return null;\n    }\n    const request = hoveredNode.request();\n    if (!request) {\n      return null;\n    }\n    return {\n      box: anchor.boxInWindow(),\n      show: async (popover: UI.GlassPane.GlassPane) => {\n        this.popupLinkifier.addEventListener(Components.Linkifier.Events.LIVE_LOCATION_UPDATED, () => {\n          popover.setSizeBehavior(UI.GlassPane.SizeBehavior.MEASURE_CONTENT);\n        });\n        const content = RequestInitiatorView.createStackTracePreview((request), this.popupLinkifier, false);\n        if (!content) {\n          return false;\n        }\n        content.show(popover.contentElement);\n        return true;\n      },\n      hide: this.popupLinkifier.reset.bind(this.popupLinkifier),\n    };\n  }\n\n  addEventDividers(times: number[], className: string): void {\n    // TODO(allada) Remove this and pass in the color.\n    let color = 'transparent';\n    switch (className) {\n      case 'network-dcl-divider':\n        color = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-blue');\n        break;\n      case 'network-load-divider':\n        color = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-error');\n        break;\n      default:\n        return;\n    }\n    const currentTimes = this.eventDividers.get(color) || [];\n    this.eventDividers.set(color, currentTimes.concat(times));\n    this.networkLogView.scheduleRefresh();\n  }\n\n  hideEventDividers(): void {\n    this.eventDividersShown = true;\n    this.redrawWaterfallColumn();\n  }\n\n  showEventDividers(): void {\n    this.eventDividersShown = false;\n    this.redrawWaterfallColumn();\n  }\n\n  selectFilmStripFrame(time: number): void {\n    this.eventDividers.set(FILM_STRIP_DIVIDER_COLOR, [time]);\n    this.redrawWaterfallColumn();\n  }\n\n  clearFilmStripFrame(): void {\n    this.eventDividers.delete(FILM_STRIP_DIVIDER_COLOR);\n    this.redrawWaterfallColumn();\n  }\n}\n\nconst INITIAL_SORT_COLUMN = 'waterfall';\n\nconst enum CalculatorTypes {\n  DURATION = 'Duration',\n  TIME = 'Time',\n}\n\nconst DEFAULT_COLUMN_CONFIG = {\n  subtitle: null,\n  visible: false,\n  weight: 6,\n  sortable: true,\n  hideable: true,\n  hideableGroup: null,\n  nonSelectable: false,\n  isRequestHeader: false,\n  isResponseHeader: false,\n  isCustomHeader: false,\n  allowInSortByEvenWhenHidden: false,\n};\n\nconst DEFAULT_COLUMNS = [\n  {\n    id: 'name',\n    title: i18nLazyString(UIStrings.name),\n    subtitle: i18nLazyString(UIStrings.path),\n    visible: true,\n    weight: 20,\n    hideable: true,\n    hideableGroup: 'path',\n    sortingFunction: NetworkRequestNode.NameComparator,\n  },\n  {\n    id: 'path',\n    title: i18nLazyString(UIStrings.path),\n    hideable: true,\n    hideableGroup: 'path',\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'pathname'),\n  },\n  {\n    id: 'url',\n    title: i18nLazyString(UIStrings.url),\n    hideable: true,\n    hideableGroup: 'path',\n    sortingFunction: NetworkRequestNode.RequestURLComparator,\n  },\n  {\n    id: 'method',\n    title: i18nLazyString(UIStrings.method),\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'requestMethod'),\n  },\n  {\n    id: 'status',\n    title: i18nLazyString(UIStrings.status),\n    visible: true,\n    subtitle: i18nLazyString(UIStrings.text),\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'statusCode'),\n  },\n  {\n    id: 'protocol',\n    title: i18nLazyString(UIStrings.protocol),\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'protocol'),\n  },\n  {\n    id: 'scheme',\n    title: i18nLazyString(UIStrings.scheme),\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'scheme'),\n  },\n  {\n    id: 'domain',\n    title: i18nLazyString(UIStrings.domain),\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'domain'),\n  },\n  {\n    id: 'remote-address',\n    title: i18nLazyString(UIStrings.remoteAddress),\n    weight: 10,\n    align: DataGrid.DataGrid.Align.RIGHT,\n    sortingFunction: NetworkRequestNode.RemoteAddressComparator,\n  },\n  {\n    id: 'remote-address-space',\n    title: i18nLazyString(UIStrings.remoteAddressSpace),\n    visible: false,\n    weight: 10,\n    sortingFunction: NetworkRequestNode.RemoteAddressSpaceComparator,\n  },\n  {\n    id: 'type',\n    title: i18nLazyString(UIStrings.type),\n    visible: true,\n    sortingFunction: NetworkRequestNode.TypeComparator,\n  },\n  {\n    id: 'initiator',\n    title: i18nLazyString(UIStrings.initiator),\n    visible: true,\n    weight: 10,\n    sortingFunction: NetworkRequestNode.InitiatorComparator,\n  },\n  {\n    id: 'initiator-address-space',\n    title: i18nLazyString(UIStrings.initiatorAddressSpace),\n    visible: false,\n    weight: 10,\n    sortingFunction: NetworkRequestNode.InitiatorAddressSpaceComparator,\n  },\n  {\n    id: 'cookies',\n    title: i18nLazyString(UIStrings.cookies),\n    align: DataGrid.DataGrid.Align.RIGHT,\n    sortingFunction: NetworkRequestNode.RequestCookiesCountComparator,\n  },\n  {\n    id: 'set-cookies',\n    title: i18nLazyString(UIStrings.setCookies),\n    align: DataGrid.DataGrid.Align.RIGHT,\n    sortingFunction: NetworkRequestNode.ResponseCookiesCountComparator,\n  },\n  {\n    id: 'size',\n    title: i18nLazyString(UIStrings.size),\n    visible: true,\n    subtitle: i18nLazyString(UIStrings.content),\n    align: DataGrid.DataGrid.Align.RIGHT,\n    sortingFunction: NetworkRequestNode.SizeComparator,\n  },\n  {\n    id: 'time',\n    title: i18nLazyString(UIStrings.time),\n    visible: true,\n    subtitle: i18nLazyString(UIStrings.latency),\n    align: DataGrid.DataGrid.Align.RIGHT,\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'duration'),\n  },\n  {id: 'priority', title: i18nLazyString(UIStrings.priority), sortingFunction: NetworkRequestNode.PriorityComparator},\n  {\n    id: 'connection-id',\n    title: i18nLazyString(UIStrings.connectionId),\n    sortingFunction: NetworkRequestNode.RequestPropertyComparator.bind(null, 'connectionId'),\n  },\n  {\n    id: 'response-header-cache-control',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Cache-Control'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'cache-control'),\n  },\n  {\n    id: 'response-header-connection',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Connection'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'connection'),\n  },\n  {\n    id: 'response-header-content-encoding',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Content-Encoding'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'content-encoding'),\n  },\n  {\n    id: 'response-header-content-length',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Content-Length'),\n    align: DataGrid.DataGrid.Align.RIGHT,\n    sortingFunction: NetworkRequestNode.ResponseHeaderNumberComparator.bind(null, 'content-length'),\n  },\n  {\n    id: 'response-header-etag',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('ETag'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'etag'),\n  },\n  {\n    id: 'response-header-has-overrides',\n    title: i18nLazyString(UIStrings.hasOverrides),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'has-overrides'),\n  },\n  {\n    id: 'response-header-keep-alive',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Keep-Alive'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'keep-alive'),\n  },\n  {\n    id: 'response-header-last-modified',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Last-Modified'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderDateComparator.bind(null, 'last-modified'),\n  },\n  {\n    id: 'response-header-server',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Server'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'server'),\n  },\n  {\n    id: 'response-header-vary',\n    isResponseHeader: true,\n    title: i18n.i18n.lockedLazyString('Vary'),\n    sortingFunction: NetworkRequestNode.ResponseHeaderStringComparator.bind(null, 'vary'),\n  },\n  {\n    id: 'request-header-accept',\n    isRequestHeader: true,\n    title: i18n.i18n.lockedLazyString('Accept'),\n    sortingFunction: NetworkRequestNode.RequestHeaderStringComparator.bind(null, 'accept'),\n  },\n  {\n    id: 'request-header-accept-encoding',\n    isRequestHeader: true,\n    title: i18n.i18n.lockedLazyString('Accept-Encoding'),\n    sortingFunction: NetworkRequestNode.RequestHeaderStringComparator.bind(null, 'accept-encoding'),\n  },\n  {\n    id: 'request-header-accept-language',\n    isRequestHeader: true,\n    title: i18n.i18n.lockedLazyString('Accept-Language'),\n    sortingFunction: NetworkRequestNode.RequestHeaderStringComparator.bind(null, 'accept-language'),\n  },\n  {\n    id: 'request-header-content-type',\n    isRequestHeader: true,\n    title: i18n.i18n.lockedLazyString('Content-Type'),\n    sortingFunction: NetworkRequestNode.RequestHeaderStringComparator.bind(null, 'Content-Type'),\n  },\n  {\n    id: 'request-header-origin',\n    isRequestHeader: true,\n    title: i18n.i18n.lockedLazyString('Origin'),\n    sortingFunction: NetworkRequestNode.RequestHeaderStringComparator.bind(null, 'origin'),\n  },\n  {\n    id: 'request-header-referer',\n    isRequestHeader: true,\n    title: i18n.i18n.lockedLazyString('Referer'),\n    sortingFunction: NetworkRequestNode.RequestHeaderStringComparator.bind(null, 'referer'),\n  },\n  {\n    id: 'request-header-sec-fetch-dest',\n    isRequestHeader: true,\n    title: i18n.i18n.lockedLazyString('Sec-Fetch-Dest'),\n    sortingFunction: NetworkRequestNode.RequestHeaderStringComparator.bind(null, 'sec-fetch-dest'),\n  },\n  {\n    id: 'request-header-sec-fetch-mode',\n    isRequestHeader: true,\n    title: i18n.i18n.lockedLazyString('Sec-Fetch-Mode'),\n    sortingFunction: NetworkRequestNode.RequestHeaderStringComparator.bind(null, 'sec-fetch-mode'),\n  },\n  {\n    id: 'request-header-user-agent',\n    isRequestHeader: true,\n    title: i18n.i18n.lockedLazyString('User-Agent'),\n    sortingFunction: NetworkRequestNode.RequestHeaderStringComparator.bind(null, 'user-agent'),\n  },\n  // This header is a placeholder to let datagrid know that it can be sorted by this column, but never shown.\n  {\n    id: 'waterfall',\n    title: i18nLazyString(UIStrings.waterfall),\n    allowInSortByEvenWhenHidden: true,\n  },\n];\n\nconst FILM_STRIP_DIVIDER_COLOR = '#fccc49';\n\nenum WaterfallSortIds {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  StartTime = 'startTime',\n  ResponseTime = 'responseReceivedTime',\n  EndTime = 'endTime',\n  Duration = 'duration',\n  Latency = 'latency',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\nexport interface Descriptor {\n  id: string;\n  title: string|(() => string);\n  titleDOMFragment?: DocumentFragment;\n  subtitle: string|(() => string)|null;\n  visible: boolean;\n  weight: number;\n  hideable: boolean;\n  hideableGroup: string|null;\n  nonSelectable: boolean;\n  sortable: boolean;\n  align?: string|null;\n  isResponseHeader: boolean;\n  isRequestHeader: boolean;\n  sortingFunction: (arg0: NetworkNode, arg1: NetworkNode) => number | undefined;\n  isCustomHeader: boolean;\n  allowInSortByEvenWhenHidden: boolean;\n}\n", "// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport networkManageCustomHeadersViewStyles from './networkManageCustomHeadersView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Network Manage Custom Headers View of the Network panel\n   */\n  manageHeaderColumns: 'Manage Header Columns',\n  /**\n   * @description Placeholder text content in Network Manage Custom Headers View of the Network panel\n   */\n  noCustomHeaders: 'No custom headers',\n  /**\n   * @description Text of add button in Network Manage Custom Headers View of the Network panel\n   */\n  addCustomHeader: 'Add custom header…',\n  /**\n   * @description Text in Network Manage Custom Headers View of the Network panel\n   */\n  headerName: 'Header Name',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkManageCustomHeadersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface CustomHeader {\n  header: string;\n}\n\nexport class NetworkManageCustomHeadersView extends UI.Widget.VBox implements UI.ListWidget.Delegate<CustomHeader> {\n  private readonly list: UI.ListWidget.ListWidget<CustomHeader>;\n  private readonly columnConfigs: Map<string, {\n    title: string,\n    editable: boolean,\n  }>;\n  private addHeaderColumnCallback: (arg0: string) => boolean;\n  private changeHeaderColumnCallback: (arg0: string, arg1: string) => boolean;\n  private readonly removeHeaderColumnCallback: (arg0: string) => boolean;\n  private editor?: UI.ListWidget.Editor<CustomHeader>;\n\n  constructor(\n      columnData: Array<{\n        title: string,\n        editable: boolean,\n      }>,\n      addHeaderColumnCallback: (arg0: string) => boolean,\n      changeHeaderColumnCallback: (arg0: string, arg1: string) => boolean,\n      removeHeaderColumnCallback: (arg0: string) => boolean) {\n    super({useShadowDom: true});\n    this.registerRequiredCSS(networkManageCustomHeadersViewStyles);\n\n    this.contentElement.createChild('div', 'header').textContent = i18nString(UIStrings.manageHeaderColumns);\n\n    this.list = new UI.ListWidget.ListWidget(this);\n    this.list.registerRequiredCSS(networkManageCustomHeadersViewStyles);\n    this.list.element.classList.add('custom-headers-list');\n\n    const placeholder = document.createElement('div');\n    placeholder.classList.add('custom-headers-list-list-empty');\n    placeholder.textContent = i18nString(UIStrings.noCustomHeaders);\n    this.list.setEmptyPlaceholder(placeholder);\n    this.list.show(this.contentElement);\n    this.contentElement.appendChild(\n        UI.UIUtils.createTextButton(i18nString(UIStrings.addCustomHeader), this.addButtonClicked.bind(this), {\n          className: 'add-button',\n          jslogContext: 'network.add-custom-header',\n        }));\n\n    this.columnConfigs = new Map();\n    columnData.forEach(columnData => this.columnConfigs.set(columnData.title.toLowerCase(), columnData));\n\n    this.addHeaderColumnCallback = addHeaderColumnCallback;\n    this.changeHeaderColumnCallback = changeHeaderColumnCallback;\n    this.removeHeaderColumnCallback = removeHeaderColumnCallback;\n\n    this.contentElement.tabIndex = 0;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.headersUpdated();\n  }\n\n  private headersUpdated(): void {\n    this.list.clear();\n    this.columnConfigs.forEach(headerData => this.list.appendItem({header: headerData.title}, headerData.editable));\n  }\n\n  private addButtonClicked(): void {\n    this.list.addNewItem(this.columnConfigs.size, {header: ''});\n  }\n\n  renderItem(item: CustomHeader, _editable: boolean): Element {\n    const element = document.createElement('div');\n    element.classList.add('custom-headers-list-item');\n    const header = element.createChild('div', 'custom-header-name');\n    header.textContent = item.header;\n    UI.Tooltip.Tooltip.install(header, item.header);\n    return element;\n  }\n\n  removeItemRequested(item: CustomHeader, _index: number): void {\n    this.removeHeaderColumnCallback(item.header);\n    this.columnConfigs.delete(item.header.toLowerCase());\n    this.headersUpdated();\n  }\n\n  commitEdit(item: CustomHeader, editor: UI.ListWidget.Editor<CustomHeader>, isNew: boolean): void {\n    const headerId = editor.control('header').value.trim();\n    let success;\n    if (isNew) {\n      success = this.addHeaderColumnCallback(headerId);\n    } else {\n      success = this.changeHeaderColumnCallback(item.header, headerId);\n    }\n\n    if (success && !isNew) {\n      this.columnConfigs.delete(item.header.toLowerCase());\n    }\n    if (success) {\n      this.columnConfigs.set(headerId.toLowerCase(), {title: headerId, editable: true});\n    }\n\n    this.headersUpdated();\n  }\n\n  beginEdit(item: CustomHeader): UI.ListWidget.Editor<CustomHeader> {\n    const editor = this.createEditor();\n    editor.control('header').value = item.header;\n    return editor;\n  }\n\n  private createEditor(): UI.ListWidget.Editor<CustomHeader> {\n    if (this.editor) {\n      return this.editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<CustomHeader>();\n    this.editor = editor;\n    const content = editor.contentElement();\n\n    const titles = content.createChild('div', 'custom-headers-edit-row');\n    titles.createChild('div', 'custom-headers-header').textContent = i18nString(UIStrings.headerName);\n\n    const fields = content.createChild('div', 'custom-headers-edit-row');\n    fields.createChild('div', 'custom-headers-header')\n        .appendChild(editor.createInput('header', 'text', 'x-custom-header', validateHeader.bind(this)));\n\n    return editor;\n\n    function validateHeader(\n        this: NetworkManageCustomHeadersView, item: CustomHeader, _index: number,\n        _input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      let valid = true;\n      const headerId = editor.control('header').value.trim().toLowerCase();\n      if (this.columnConfigs.has(headerId) && item.header !== headerId) {\n        valid = false;\n      }\n      return {valid, errorMessage: undefined};\n    }\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.custom-headers-list {\n  height: 272px;\n  width: var(--sys-size-29);\n  margin: 0 var(--sys-size-8);\n}\n\n.header {\n  margin: var(--sys-size-5) var(--sys-size-5) var(--sys-size-5) var(--sys-size-8);\n  padding-top: var(--sys-size-3);\n  font: var(--sys-typescale-body2-medium);\n  flex: none;\n}\n\n.custom-headers-header {\n  padding: 2px;\n}\n\n.custom-headers-list-item {\n  padding-left: 5px;\n}\n\n.editor-container {\n  padding: 5px 0 0 5px;\n}\n\n.add-button {\n  margin: var(--sys-size-6) auto var(--sys-size-8) var(--sys-size-8);\n  align-items: flex-start;\n}\n\n/*# sourceURL=${import.meta.resolve('./networkManageCustomHeadersView.css')} */`;", "// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as RenderCoordinator from '../../ui/components/render_coordinator/render_coordinator.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport type {NetworkNode} from './NetworkDataGridNode.js';\nimport {RequestTimeRangeNameToColor} from './NetworkOverview.js';\nimport type {Label, NetworkTimeCalculator} from './NetworkTimeCalculator.js';\nimport networkingTimingTableStyles from './networkTimingTable.css.js';\nimport networkWaterfallColumnStyles from './networkWaterfallColumn.css.js';\nimport {type RequestTimeRange, RequestTimeRangeNames, RequestTimingView} from './RequestTimingView.js';\n\nconst BAR_SPACING = 1;\n\nexport class NetworkWaterfallColumn extends UI.Widget.VBox {\n  private canvas: HTMLCanvasElement;\n  private canvasPosition: DOMRect;\n  private readonly leftPadding: number;\n  private readonly fontSize: number;\n  private rightPadding: number;\n  private scrollTop: number;\n  private headerHeight: number;\n  private calculator: NetworkTimeCalculator;\n  private rowHeight: number;\n  private offsetWidth: number;\n  private offsetHeight: number;\n  private startTime: number;\n  private endTime: number;\n  private readonly popoverHelper: UI.PopoverHelper.PopoverHelper;\n  private nodes: NetworkNode[];\n  private hoveredNode: NetworkNode|null;\n  private eventDividers: Map<string, number[]>;\n  private readonly styleForTimeRangeName: Map<RequestTimeRangeNames, LayerStyle>;\n  private readonly styleForWaitingResourceType: Map<Common.ResourceType.ResourceType, LayerStyle>;\n  private readonly styleForDownloadingResourceType: Map<Common.ResourceType.ResourceType, LayerStyle>;\n  private readonly wiskerStyle: LayerStyle;\n  private readonly hoverDetailsStyle: LayerStyle;\n  private readonly pathForStyle: Map<LayerStyle, Path2D>;\n  private textLayers: TextLayer[];\n\n  constructor(calculator: NetworkTimeCalculator) {\n    // TODO(allada) Make this a shadowDOM when the NetworkWaterfallColumn gets moved into NetworkLogViewColumns.\n    super();\n    this.registerRequiredCSS(networkWaterfallColumnStyles);\n\n    this.canvas = this.contentElement.createChild('canvas');\n    this.canvas.tabIndex = -1;\n    this.setDefaultFocusedElement(this.canvas);\n    this.canvasPosition = this.canvas.getBoundingClientRect();\n\n    this.leftPadding = 5;\n    this.fontSize = 10;\n\n    this.rightPadding = 0;\n    this.scrollTop = 0;\n\n    this.headerHeight = 0;\n    this.calculator = calculator;\n\n    this.rowHeight = 0;\n\n    this.offsetWidth = 0;\n    this.offsetHeight = 0;\n    this.startTime = this.calculator.minimumBoundary();\n    this.endTime = this.calculator.maximumBoundary();\n\n    this.popoverHelper =\n        new UI.PopoverHelper.PopoverHelper(this.element, this.getPopoverRequest.bind(this), 'network.timing');\n    this.popoverHelper.setTimeout(300, 300);\n\n    this.nodes = [];\n\n    this.hoveredNode = null;\n\n    this.eventDividers = new Map();\n\n    this.element.addEventListener('mousemove', this.onMouseMove.bind(this), true);\n    this.element.addEventListener('mouseleave', _event => this.setHoveredNode(null, false), true);\n    this.element.addEventListener('click', this.onClick.bind(this), true);\n\n    this.styleForTimeRangeName = NetworkWaterfallColumn.buildRequestTimeRangeStyle();\n\n    const resourceStyleTuple = NetworkWaterfallColumn.buildResourceTypeStyle();\n    this.styleForWaitingResourceType = resourceStyleTuple[0];\n    this.styleForDownloadingResourceType = resourceStyleTuple[1];\n\n    const baseLineColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-state-disabled');\n    this.wiskerStyle = {borderColor: baseLineColor, lineWidth: 1, fillStyle: undefined};\n    this.hoverDetailsStyle = {fillStyle: baseLineColor, lineWidth: 1, borderColor: baseLineColor};\n\n    this.pathForStyle = new Map();\n    this.textLayers = [];\n  }\n\n  private static buildRequestTimeRangeStyle(): Map<RequestTimeRangeNames, LayerStyle> {\n    const styleMap = new Map<RequestTimeRangeNames, LayerStyle>();\n    styleMap.set(\n        RequestTimeRangeNames.CONNECTING, {fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.CONNECTING]});\n    styleMap.set(RequestTimeRangeNames.SSL, {fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.SSL]});\n    styleMap.set(RequestTimeRangeNames.DNS, {fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.DNS]});\n    styleMap.set(RequestTimeRangeNames.PROXY, {fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.PROXY]});\n    styleMap.set(\n        RequestTimeRangeNames.BLOCKING, {fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.BLOCKING]});\n    styleMap.set(RequestTimeRangeNames.PUSH, {fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.PUSH]});\n    styleMap.set(RequestTimeRangeNames.QUEUEING, {\n      fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.QUEUEING],\n      lineWidth: 2,\n      borderColor: 'lightgrey',\n    });\n    // This ensures we always show at least 2 px for a request.\n    styleMap.set(RequestTimeRangeNames.RECEIVING, {\n      fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.RECEIVING],\n      lineWidth: 2,\n      borderColor: '#03A9F4',\n    });\n    styleMap.set(\n        RequestTimeRangeNames.WAITING, {fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.WAITING]});\n    styleMap.set(\n        RequestTimeRangeNames.RECEIVING_PUSH,\n        {fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.RECEIVING_PUSH]});\n    styleMap.set(\n        RequestTimeRangeNames.SERVICE_WORKER,\n        {fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.SERVICE_WORKER]});\n    styleMap.set(\n        RequestTimeRangeNames.SERVICE_WORKER_PREPARATION,\n        {fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.SERVICE_WORKER_PREPARATION]});\n    styleMap.set(RequestTimeRangeNames.SERVICE_WORKER_RESPOND_WITH, {\n      fillStyle: RequestTimeRangeNameToColor[RequestTimeRangeNames.SERVICE_WORKER_RESPOND_WITH],\n    });\n    return styleMap;\n  }\n\n  private static buildResourceTypeStyle(): Array<Map<Common.ResourceType.ResourceType, LayerStyle>> {\n    const baseResourceTypeColors = new Map([\n      ['document', 'hsl(215, 100%, 80%)'],\n      ['font', 'hsl(8, 100%, 80%)'],\n      ['media', 'hsl(90, 50%, 80%)'],\n      ['image', 'hsl(90, 50%, 80%)'],\n      ['script', 'hsl(31, 100%, 80%)'],\n      ['stylesheet', 'hsl(272, 64%, 80%)'],\n      ['texttrack', 'hsl(8, 100%, 80%)'],\n      ['websocket', 'hsl(0, 0%, 95%)'],\n      ['xhr', 'hsl(53, 100%, 80%)'],\n      ['fetch', 'hsl(53, 100%, 80%)'],\n      ['other', 'hsl(0, 0%, 95%)'],\n    ]);\n    const waitingStyleMap = new Map<Common.ResourceType.ResourceType, LayerStyle>();\n    const downloadingStyleMap = new Map<Common.ResourceType.ResourceType, LayerStyle>();\n\n    for (const resourceType of Object.values(Common.ResourceType.resourceTypes)) {\n      let color = baseResourceTypeColors.get(resourceType.name());\n      if (!color) {\n        color = baseResourceTypeColors.get('other');\n      }\n      const borderColor = toBorderColor((color as string));\n\n      waitingStyleMap.set(\n          // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n          // @ts-expect-error\n          resourceType, {fillStyle: toWaitingColor((color as string)), lineWidth: 1, borderColor});\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // @ts-expect-error\n      downloadingStyleMap.set(resourceType, {fillStyle: color, lineWidth: 1, borderColor});\n    }\n    return [waitingStyleMap, downloadingStyleMap];\n\n    function toBorderColor(color: string): string|null {\n      const parsedColor = Common.Color.parse(color)?.as(Common.Color.Format.HSL);\n      if (!parsedColor) {\n        return '';\n      }\n      let {s, l} = parsedColor;\n      s /= 2;\n      l -= Math.min(l, 0.2);\n      return new Common.Color.HSL(parsedColor.h, s, l, parsedColor.alpha).asString();\n    }\n\n    function toWaitingColor(color: string): string|null {\n      const parsedColor = Common.Color.parse(color)?.as(Common.Color.Format.HSL);\n      if (!parsedColor) {\n        return '';\n      }\n      let {l} = parsedColor;\n      l *= 1.1;\n      return new Common.Color.HSL(parsedColor.h, parsedColor.s, l, parsedColor.alpha).asString();\n    }\n  }\n\n  private resetPaths(): void {\n    this.pathForStyle.clear();\n    this.pathForStyle.set(this.wiskerStyle, new Path2D());\n    this.styleForTimeRangeName.forEach(style => this.pathForStyle.set(style, new Path2D()));\n    this.styleForWaitingResourceType.forEach(style => this.pathForStyle.set(style, new Path2D()));\n    this.styleForDownloadingResourceType.forEach(style => this.pathForStyle.set(style, new Path2D()));\n    this.pathForStyle.set(this.hoverDetailsStyle, new Path2D());\n  }\n\n  override willHide(): void {\n    this.popoverHelper.hidePopover();\n    super.willHide();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.update();\n  }\n\n  private onMouseMove(event: MouseEvent): void {\n    this.setHoveredNode(this.getNodeFromPoint(event.offsetY), event.shiftKey);\n  }\n\n  private onClick(event: MouseEvent): void {\n    const handled = this.setSelectedNode(this.getNodeFromPoint(event.offsetY));\n    if (handled) {\n      event.consume(true);\n    }\n  }\n\n  private getPopoverRequest(event: MouseEvent|KeyboardEvent): UI.PopoverHelper.PopoverRequest|null {\n    if (event instanceof KeyboardEvent) {\n      return null;\n    }\n    if (!this.hoveredNode) {\n      return null;\n    }\n    const request = this.hoveredNode.request();\n    if (!request) {\n      return null;\n    }\n    const useTimingBars =\n        !Common.Settings.Settings.instance().moduleSetting('network-color-code-resource-types').get() &&\n        !this.calculator.startAtZero;\n    let range;\n    let start;\n    let end;\n    if (useTimingBars) {\n      range = RequestTimingView.calculateRequestTimeRanges(request, 0)\n                  .find(data => data.name === RequestTimeRangeNames.TOTAL);\n      start = this.timeToPosition((range as RequestTimeRange).start);\n      end = this.timeToPosition((range as RequestTimeRange).end);\n    } else {\n      range = this.getSimplifiedBarRange(request, 0);\n      start = range.start;\n      end = range.end;\n    }\n\n    if (end - start < 50) {\n      const halfWidth = (end - start) / 2;\n      start = start + halfWidth - 25;\n      end = end - halfWidth + 25;\n    }\n\n    if (event.clientX < this.canvasPosition.left + start || event.clientX > this.canvasPosition.left + end) {\n      return null;\n    }\n\n    const rowIndex = this.nodes.findIndex(node => node.hovered());\n    const barHeight = this.getBarHeight((range as RequestTimeRange).name);\n    const y = this.headerHeight + (this.rowHeight * rowIndex - this.scrollTop) + ((this.rowHeight - barHeight) / 2);\n\n    if (event.clientY < this.canvasPosition.top + y || event.clientY > this.canvasPosition.top + y + barHeight) {\n      return null;\n    }\n\n    const anchorBox = this.element.boxInWindow();\n    anchorBox.x += start;\n    anchorBox.y += y;\n    anchorBox.width = end - start;\n    anchorBox.height = barHeight;\n\n    return {\n      box: anchorBox,\n      show: (popover: UI.GlassPane.GlassPane) => {\n        const content = RequestTimingView.createTimingTable((request), this.calculator);\n        popover.registerRequiredCSS(networkingTimingTableStyles);\n        popover.contentElement.appendChild(content);\n        return Promise.resolve(true);\n      },\n      hide: undefined,\n    };\n  }\n\n  private setHoveredNode(node: NetworkNode|null, highlightInitiatorChain: boolean): void {\n    if (this.hoveredNode) {\n      this.hoveredNode.setHovered(false, false);\n    }\n    this.hoveredNode = node;\n    if (this.hoveredNode) {\n      this.hoveredNode.setHovered(true, highlightInitiatorChain);\n    }\n  }\n\n  private setSelectedNode(node: NetworkNode|null): boolean {\n    if (node?.dataGrid) {\n      node.select();\n      node.dataGrid.element.focus();\n      return true;\n    }\n    return false;\n  }\n\n  setRowHeight(height: number): void {\n    this.rowHeight = height;\n  }\n\n  setHeaderHeight(height: number): void {\n    this.headerHeight = height;\n  }\n\n  setRightPadding(padding: number): void {\n    this.rightPadding = padding;\n    this.calculateCanvasSize();\n  }\n\n  setCalculator(calculator: NetworkTimeCalculator): void {\n    this.calculator = calculator;\n  }\n\n  getNodeFromPoint(y: number): NetworkNode|null {\n    if (y <= this.headerHeight) {\n      return null;\n    }\n    return this.nodes[Math.floor((this.scrollTop + y - this.headerHeight) / this.rowHeight)];\n  }\n\n  scheduleDraw(): void {\n    void RenderCoordinator.write('NetworkWaterfallColumn.render', () => this.update());\n  }\n\n  update(scrollTop?: number, eventDividers?: Map<string, number[]>, nodes?: NetworkNode[]): void {\n    if (scrollTop !== undefined && this.scrollTop !== scrollTop) {\n      this.popoverHelper.hidePopover();\n      this.scrollTop = scrollTop;\n    }\n    if (nodes) {\n      this.nodes = nodes;\n      this.calculateCanvasSize();\n    }\n    if (eventDividers !== undefined) {\n      this.eventDividers = eventDividers;\n    }\n\n    this.startTime = this.calculator.minimumBoundary();\n    this.endTime = this.calculator.maximumBoundary();\n    this.resetCanvas();\n    this.resetPaths();\n    this.textLayers = [];\n    this.draw();\n  }\n\n  private resetCanvas(): void {\n    const ratio = window.devicePixelRatio;\n    this.canvas.width = this.offsetWidth * ratio;\n    this.canvas.height = this.offsetHeight * ratio;\n    this.canvas.style.width = this.offsetWidth + 'px';\n    this.canvas.style.height = this.offsetHeight + 'px';\n  }\n\n  override onResize(): void {\n    super.onResize();\n    this.calculateCanvasSize();\n    this.scheduleDraw();\n  }\n\n  private calculateCanvasSize(): void {\n    this.offsetWidth = this.contentElement.offsetWidth - this.rightPadding;\n    this.offsetHeight = this.contentElement.offsetHeight;\n    this.calculator.setDisplayWidth(this.offsetWidth);\n    this.canvasPosition = this.canvas.getBoundingClientRect();\n  }\n\n  private timeToPosition(time: number): number {\n    const availableWidth = this.offsetWidth - this.leftPadding;\n    const timeToPixel = availableWidth / (this.endTime - this.startTime);\n    return Math.floor(this.leftPadding + (time - this.startTime) * timeToPixel);\n  }\n\n  private didDrawForTest(): void {\n  }\n\n  private draw(): void {\n    const useTimingBars =\n        !Common.Settings.Settings.instance().moduleSetting('network-color-code-resource-types').get() &&\n        !this.calculator.startAtZero;\n    const nodes = this.nodes;\n    const context = (this.canvas.getContext('2d'));\n    if (!context) {\n      return;\n    }\n    context.save();\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n    context.translate(0, this.headerHeight);\n    context.rect(0, 0, this.offsetWidth, this.offsetHeight);\n    context.clip();\n    const firstRequestIndex = Math.floor(this.scrollTop / this.rowHeight);\n    const lastRequestIndex = Math.min(nodes.length, firstRequestIndex + Math.ceil(this.offsetHeight / this.rowHeight));\n    for (let i = firstRequestIndex; i < lastRequestIndex; i++) {\n      const rowOffset = this.rowHeight * i;\n      const node = nodes[i];\n      this.decorateRow(context, node, rowOffset - this.scrollTop);\n      let drawNodes: NetworkNode[] = [];\n      if (node.hasChildren() && !node.expanded) {\n        drawNodes = (node.flatChildren() as NetworkNode[]);\n      }\n      drawNodes.push(node);\n      for (const drawNode of drawNodes) {\n        if (useTimingBars) {\n          this.buildTimingBarLayers(drawNode, rowOffset - this.scrollTop);\n        } else {\n          this.buildSimplifiedBarLayers(context, drawNode, rowOffset - this.scrollTop);\n        }\n      }\n    }\n    this.drawLayers(context, useTimingBars);\n\n    context.save();\n    context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-state-disabled');\n    for (const textData of this.textLayers) {\n      context.fillText(textData.text, textData.x, textData.y);\n    }\n    context.restore();\n\n    this.drawEventDividers(context);\n    context.restore();\n\n    const freeZoneAtLeft = 75;\n    const freeZoneAtRight = 18;\n    const dividersData = PerfUI.TimelineGrid.TimelineGrid.calculateGridOffsets(this.calculator);\n    PerfUI.TimelineGrid.TimelineGrid.drawCanvasGrid(context, dividersData);\n    PerfUI.TimelineGrid.TimelineGrid.drawCanvasHeaders(\n        context, dividersData, time => this.calculator.formatValue(time, dividersData.precision), this.fontSize,\n        this.headerHeight, freeZoneAtLeft);\n    context.save();\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n    context.clearRect(this.offsetWidth - freeZoneAtRight, 0, freeZoneAtRight, this.headerHeight);\n    context.restore();\n    this.didDrawForTest();\n  }\n\n  private drawLayers(context: CanvasRenderingContext2D, useTimingBars: boolean): void {\n    for (const entry of this.pathForStyle) {\n      const style = (entry[0]);\n      const path = (entry[1]);\n      context.save();\n      context.beginPath();\n      if (style.lineWidth) {\n        context.lineWidth = style.lineWidth;\n        if (style.borderColor) {\n          context.strokeStyle = style.borderColor;\n        }\n        context.stroke(path);\n      }\n      if (style.fillStyle) {\n        context.fillStyle =\n            useTimingBars ? ThemeSupport.ThemeSupport.instance().getComputedValue(style.fillStyle) : style.fillStyle;\n        context.fill(path);\n      }\n      context.restore();\n    }\n  }\n\n  private drawEventDividers(context: CanvasRenderingContext2D): void {\n    context.save();\n    context.lineWidth = 1;\n    for (const color of this.eventDividers.keys()) {\n      context.strokeStyle = color;\n      for (const time of this.eventDividers.get(color) || []) {\n        context.beginPath();\n        const x = this.timeToPosition(time);\n        context.moveTo(x, 0);\n        context.lineTo(x, this.offsetHeight);\n      }\n      context.stroke();\n    }\n    context.restore();\n  }\n\n  private getBarHeight(type?: RequestTimeRangeNames): number {\n    switch (type) {\n      case RequestTimeRangeNames.CONNECTING:\n      case RequestTimeRangeNames.SSL:\n      case RequestTimeRangeNames.DNS:\n      case RequestTimeRangeNames.PROXY:\n      case RequestTimeRangeNames.BLOCKING:\n      case RequestTimeRangeNames.PUSH:\n      case RequestTimeRangeNames.QUEUEING:\n        return 7;\n      default:\n        return 13;\n    }\n  }\n\n  // Used when `network-color-code-resource-types` is true\n  private getSimplifiedBarRange(request: SDK.NetworkRequest.NetworkRequest, borderOffset: number): {\n    start: number,\n    mid: number,\n    end: number,\n  } {\n    const drawWidth = this.offsetWidth - this.leftPadding;\n    const percentages = this.calculator.computeBarGraphPercentages(request);\n    return {\n      start: this.leftPadding + Math.floor((percentages.start / 100) * drawWidth) + borderOffset,\n      mid: this.leftPadding + Math.floor((percentages.middle / 100) * drawWidth) + borderOffset,\n      end: this.leftPadding + Math.floor((percentages.end / 100) * drawWidth) + borderOffset,\n    };\n  }\n\n  // Used when `network-color-code-resource-types` is true\n  private buildSimplifiedBarLayers(context: CanvasRenderingContext2D, node: NetworkNode, y: number): void {\n    const request = node.request();\n    if (!request) {\n      return;\n    }\n    const borderWidth = 1;\n    const borderOffset = borderWidth % 2 === 0 ? 0 : 0.5;\n\n    const ranges = this.getSimplifiedBarRange(request, borderOffset);\n    const height = this.getBarHeight();\n    y += Math.floor(this.rowHeight / 2 - height / 2 + borderWidth) - borderWidth / 2;\n\n    const waitingStyle = (this.styleForWaitingResourceType.get(request.resourceType()) as LayerStyle);\n    const waitingPath = (this.pathForStyle.get(waitingStyle) as Path2D);\n    waitingPath.rect(ranges.start, y, ranges.mid - ranges.start, height - borderWidth);\n\n    const barWidth = Math.max(2, ranges.end - ranges.mid);\n    const downloadingStyle = (this.styleForDownloadingResourceType.get(request.resourceType()) as LayerStyle);\n    const downloadingPath = (this.pathForStyle.get(downloadingStyle) as Path2D);\n    downloadingPath.rect(ranges.mid, y, barWidth, height - borderWidth);\n\n    let labels: Label|null = null;\n    if (node.hovered()) {\n      labels = this.calculator.computeBarGraphLabels(request);\n      const barDotLineLength = 10;\n      const leftLabelWidth = context.measureText(labels.left).width;\n      const rightLabelWidth = context.measureText(labels.right).width;\n      const hoverLinePath = (this.pathForStyle.get(this.hoverDetailsStyle) as Path2D);\n\n      if (leftLabelWidth < ranges.mid - ranges.start) {\n        const midBarX = ranges.start + (ranges.mid - ranges.start - leftLabelWidth) / 2;\n        this.textLayers.push({text: labels.left, x: midBarX, y: y + this.fontSize});\n      } else if (barDotLineLength + leftLabelWidth + this.leftPadding < ranges.start) {\n        this.textLayers.push(\n            {text: labels.left, x: ranges.start - leftLabelWidth - barDotLineLength - 1, y: y + this.fontSize});\n        hoverLinePath.moveTo(ranges.start - barDotLineLength, y + Math.floor(height / 2));\n        hoverLinePath.arc(ranges.start, y + Math.floor(height / 2), 2, 0, 2 * Math.PI);\n        hoverLinePath.moveTo(ranges.start - barDotLineLength, y + Math.floor(height / 2));\n        hoverLinePath.lineTo(ranges.start, y + Math.floor(height / 2));\n      }\n\n      const endX = ranges.mid + barWidth + borderOffset;\n      if (rightLabelWidth < endX - ranges.mid) {\n        const midBarX = ranges.mid + (endX - ranges.mid - rightLabelWidth) / 2;\n        this.textLayers.push({text: labels.right, x: midBarX, y: y + this.fontSize});\n      } else if (endX + barDotLineLength + rightLabelWidth < this.offsetWidth - this.leftPadding) {\n        this.textLayers.push({text: labels.right, x: endX + barDotLineLength + 1, y: y + this.fontSize});\n        hoverLinePath.moveTo(endX, y + Math.floor(height / 2));\n        hoverLinePath.arc(endX, y + Math.floor(height / 2), 2, 0, 2 * Math.PI);\n        hoverLinePath.moveTo(endX, y + Math.floor(height / 2));\n        hoverLinePath.lineTo(endX + barDotLineLength, y + Math.floor(height / 2));\n      }\n    }\n\n    if (!this.calculator.startAtZero) {\n      const queueingRange =\n          (RequestTimingView.calculateRequestTimeRanges(request, 0)\n               .find(data => data.name === RequestTimeRangeNames.TOTAL) as RequestTimeRange);\n      const leftLabelWidth = labels ? context.measureText(labels.left).width : 0;\n      const leftTextPlacedInBar = leftLabelWidth < ranges.mid - ranges.start;\n      const wiskerTextPadding = 13;\n      const textOffset = (labels && !leftTextPlacedInBar) ? leftLabelWidth + wiskerTextPadding : 0;\n      const queueingStart = this.timeToPosition(queueingRange.start);\n      if (ranges.start - textOffset > queueingStart) {\n        const wiskerPath = (this.pathForStyle.get(this.wiskerStyle) as Path2D);\n        wiskerPath.moveTo(queueingStart, y + Math.floor(height / 2));\n        wiskerPath.lineTo(ranges.start - textOffset, y + Math.floor(height / 2));\n\n        // TODO(allada) This needs to be floored.\n        const wiskerHeight = height / 2;\n        wiskerPath.moveTo(queueingStart + borderOffset, y + wiskerHeight / 2);\n        wiskerPath.lineTo(queueingStart + borderOffset, y + height - wiskerHeight / 2 - 1);\n      }\n    }\n  }\n\n  private buildTimingBarLayers(node: NetworkNode, y: number): void {\n    const request = node.request();\n    if (!request) {\n      return;\n    }\n    const ranges = RequestTimingView.calculateRequestTimeRanges(request, 0);\n    let index = 0;\n    for (const range of ranges) {\n      if (range.name === RequestTimeRangeNames.TOTAL || range.name === RequestTimeRangeNames.SENDING ||\n          range.end - range.start === 0) {\n        continue;\n      }\n\n      const style = (this.styleForTimeRangeName.get(range.name) as LayerStyle);\n      const path = (this.pathForStyle.get(style) as Path2D);\n      const lineWidth = style.lineWidth || 0;\n      const height = this.getBarHeight(range.name);\n      const middleBarY = y + Math.floor(this.rowHeight / 2 - height / 2) + lineWidth / 2;\n      const start = this.timeToPosition(range.start);\n      const end = this.timeToPosition(range.end);\n      path.rect(start + (index * BAR_SPACING), middleBarY, end - start, height - lineWidth);\n      index++;\n    }\n  }\n\n  private decorateRow(context: CanvasRenderingContext2D, node: NetworkNode, y: number): void {\n    const nodeBgColorId = node.backgroundColor();\n    context.save();\n    context.beginPath();\n    context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue(nodeBgColorId);\n    context.rect(0, y, this.offsetWidth, this.rowHeight);\n    context.fill();\n    context.restore();\n  }\n}\n\ninterface TextLayer {\n  x: number;\n  y: number;\n  text: string;\n}\n\ninterface LayerStyle {\n  fillStyle?: string;\n  lineWidth?: number;\n  borderColor?: string;\n}\n", "// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as RenderCoordinator from '../../ui/components/render_coordinator/render_coordinator.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport {NetworkLogView} from './NetworkLogView.js';\nimport {NetworkTimeBoundary} from './NetworkTimeCalculator.js';\nimport {RequestTimeRangeNames, RequestTimingView} from './RequestTimingView.js';\n\nexport class NetworkOverview extends PerfUI.TimelineOverviewPane.TimelineOverviewBase {\n  private selectedFilmStripTime: number;\n  private numBands: number;\n  private highlightedRequest: SDK.NetworkRequest.NetworkRequest|null;\n  private loadEvents!: number[];\n  private domContentLoadedEvents!: number[];\n  private nextBand!: number;\n  private bandMap!: Map<string, number>;\n  private requestsList!: SDK.NetworkRequest.NetworkRequest[];\n  private requestsSet!: Set<SDK.NetworkRequest.NetworkRequest>;\n  private span!: number;\n  private lastBoundary?: NetworkTimeBoundary|null;\n\n  constructor() {\n    super();\n    this.selectedFilmStripTime = -1;\n    this.element.classList.add('network-overview');\n\n    this.numBands = 1;\n    this.highlightedRequest = null;\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.Load, this.loadEventFired, this,\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.DOMContentLoaded,\n        this.domContentLoadedEventFired, this, {scoped: true});\n\n    this.reset();\n  }\n\n  setHighlightedRequest(request: SDK.NetworkRequest.NetworkRequest|null): void {\n    this.highlightedRequest = request;\n    this.scheduleUpdate();\n  }\n\n  selectFilmStripFrame(time: number): void {\n    this.selectedFilmStripTime = time;\n    this.scheduleUpdate();\n  }\n\n  clearFilmStripFrame(): void {\n    this.selectedFilmStripTime = -1;\n    this.scheduleUpdate();\n  }\n\n  private loadEventFired(\n      event: Common.EventTarget\n          .EventTargetEvent<{resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel, loadTime: number}>): void {\n    const time = event.data.loadTime;\n    if (time) {\n      this.loadEvents.push(time * 1000);\n    }\n    this.scheduleUpdate();\n  }\n\n  private domContentLoadedEventFired(event: Common.EventTarget.EventTargetEvent<number>): void {\n    const {data} = event;\n    if (data) {\n      this.domContentLoadedEvents.push(data * 1000);\n    }\n    this.scheduleUpdate();\n  }\n\n  private bandId(connectionId: string): number {\n    if (!connectionId || connectionId === '0') {\n      return -1;\n    }\n    if (this.bandMap.has(connectionId)) {\n      return this.bandMap.get(connectionId) as number;\n    }\n    const result = this.nextBand++;\n    this.bandMap.set(connectionId, result);\n    return result;\n  }\n\n  updateRequest(request: SDK.NetworkRequest.NetworkRequest): void {\n    if (!this.requestsSet.has(request)) {\n      this.requestsSet.add(request);\n      this.requestsList.push(request);\n    }\n    this.scheduleUpdate();\n  }\n\n  override wasShown(): void {\n    this.onResize();\n  }\n\n  override calculator(): PerfUI.TimelineOverviewCalculator.TimelineOverviewCalculator {\n    return super.calculator() as PerfUI.TimelineOverviewCalculator.TimelineOverviewCalculator;\n  }\n\n  override onResize(): void {\n    const width = this.element.offsetWidth;\n    const height = this.element.offsetHeight;\n    this.calculator().setDisplayWidth(width);\n    this.resetCanvas();\n    const numBands = (((height - PADDING - 1) / BAND_HEIGHT) - 1) | 0;\n    this.numBands = (numBands > 0) ? numBands : 1;\n    this.scheduleUpdate();\n  }\n\n  override reset(): void {\n    this.span = 1;\n    this.lastBoundary = null;\n    this.nextBand = 0;\n    this.bandMap = new Map();\n    this.requestsList = [];\n    this.requestsSet = new Set();\n    this.loadEvents = [];\n    this.domContentLoadedEvents = [];\n\n    // Clear screen.\n    this.resetCanvas();\n  }\n\n  scheduleUpdate(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n    void RenderCoordinator.write('NetworkOverview.render', this.update.bind(this));\n  }\n\n  override update(): void {\n    const calculator = this.calculator();\n\n    const newBoundary = new NetworkTimeBoundary(calculator.minimumBoundary(), calculator.maximumBoundary());\n    if (!this.lastBoundary || !newBoundary.equals(this.lastBoundary)) {\n      const span = calculator.boundarySpan();\n      while (this.span < span) {\n        this.span *= 1.25;\n      }\n\n      calculator.setBounds(\n          calculator.minimumBoundary(), Trace.Types.Timing.Milli(calculator.minimumBoundary() + this.span));\n\n      this.lastBoundary = new NetworkTimeBoundary(calculator.minimumBoundary(), calculator.maximumBoundary());\n    }\n\n    const context = this.context();\n    const linesByType = new Map<string, number[]>();\n    const paddingTop = PADDING;\n\n    function drawLines(type: string): void {\n      const lines = linesByType.get(type);\n      if (!lines) {\n        return;\n      }\n      const n = lines.length;\n      context.beginPath();\n      context.strokeStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-opacity-80');\n      context.lineWidth = BORDER_WIDTH;\n      context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue(RequestTimeRangeNameToColor[type]);\n      for (let i = 0; i < n;) {\n        const y = lines[i++] * BAND_HEIGHT + paddingTop;\n        const startTime = lines[i++];\n        let endTime: number = lines[i++];\n        if (endTime === Number.MAX_VALUE) {\n          endTime = calculator.maximumBoundary();\n        }\n        const startX = calculator.computePosition(Trace.Types.Timing.Milli(startTime));\n        const endX = calculator.computePosition(Trace.Types.Timing.Milli(endTime)) + 1;\n        context.fillRect(startX, y, Math.max(endX - startX, MIN_BAND_WIDTH), BAND_HEIGHT);\n        context.strokeRect(startX, y, Math.max(endX - startX, MIN_BAND_WIDTH), BAND_HEIGHT);\n      }\n    }\n\n    function addLine(type: string, y: number, start: number, end: number): void {\n      let lines = linesByType.get(type);\n      if (!lines) {\n        lines = [];\n        linesByType.set(type, lines);\n      }\n      lines.push(y, start, end);\n    }\n\n    const requests = this.requestsList;\n    const n = requests.length;\n    for (let i = 0; i < n; ++i) {\n      const request = requests[i];\n      const band = this.bandId(request.connectionId);\n      const y = (band === -1) ? 0 : (band % this.numBands + 1);\n      const timeRanges = RequestTimingView.calculateRequestTimeRanges(request, this.calculator().minimumBoundary());\n      for (let j = 0; j < timeRanges.length; ++j) {\n        const type = timeRanges[j].name;\n        if (band !== -1 || type === RequestTimeRangeNames.TOTAL) {\n          addLine(type, y, timeRanges[j].start * 1000, timeRanges[j].end * 1000);\n        }\n      }\n    }\n\n    context.clearRect(0, 0, this.width(), this.height());\n    context.save();\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n    context.lineWidth = 2;\n    drawLines(RequestTimeRangeNames.TOTAL);\n    drawLines(RequestTimeRangeNames.BLOCKING);\n    drawLines(RequestTimeRangeNames.CONNECTING);\n    drawLines(RequestTimeRangeNames.SERVICE_WORKER);\n    drawLines(RequestTimeRangeNames.SERVICE_WORKER_PREPARATION);\n    drawLines(RequestTimeRangeNames.SERVICE_WORKER_RESPOND_WITH);\n    drawLines(RequestTimeRangeNames.PUSH);\n    drawLines(RequestTimeRangeNames.PROXY);\n    drawLines(RequestTimeRangeNames.DNS);\n    drawLines(RequestTimeRangeNames.SSL);\n    drawLines(RequestTimeRangeNames.SENDING);\n    drawLines(RequestTimeRangeNames.WAITING);\n    drawLines(RequestTimeRangeNames.RECEIVING);\n\n    if (this.highlightedRequest) {\n      const size = 5;\n      const borderSize = 2;\n\n      const request = this.highlightedRequest;\n      const band = this.bandId(request.connectionId);\n      const y = ((band === -1) ? 0 : (band % this.numBands + 1)) * BAND_HEIGHT + paddingTop;\n      const timeRanges = RequestTimingView.calculateRequestTimeRanges(request, this.calculator().minimumBoundary());\n\n      context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-tonal-container');\n\n      // The network overview works in seconds, but the calcululator deals in\n      // milliseconds, hence the multiplication by 1000.\n      const start = Trace.Types.Timing.Milli(timeRanges[0].start * 1000);\n      const end = Trace.Types.Timing.Milli(timeRanges[0].end * 1000);\n      context.fillRect(\n          calculator.computePosition(start) - borderSize, y - size / 2 - borderSize,\n          calculator.computePosition(end) - calculator.computePosition(start) + 1 + 2 * borderSize, size * borderSize);\n\n      for (let j = 0; j < timeRanges.length; ++j) {\n        const type = timeRanges[j].name;\n        if (band !== -1 || type === RequestTimeRangeNames.TOTAL) {\n          context.beginPath();\n          context.strokeStyle =\n              ThemeSupport.ThemeSupport.instance().getComputedValue(RequestTimeRangeNameToColor[type]);\n          context.lineWidth = size;\n\n          const start = Trace.Types.Timing.Milli(timeRanges[j].start * 1000);\n          const end = Trace.Types.Timing.Milli(timeRanges[j].end * 1000);\n          context.moveTo(Number(calculator.computePosition(start)) - 0, y);\n          context.lineTo(Number(calculator.computePosition(end)) + 1, y);\n          context.stroke();\n        }\n      }\n    }\n\n    const height = this.element.offsetHeight;\n    context.lineWidth = 1;\n    context.beginPath();\n    context.strokeStyle = ThemeSupport.ThemeSupport.instance().getComputedValue(NetworkLogView.getDCLEventColor());\n    for (let i = this.domContentLoadedEvents.length - 1; i >= 0; --i) {\n      const position = calculator.computePosition(Trace.Types.Timing.Milli(this.domContentLoadedEvents[i]));\n      const x = Math.round(position) + 0.5;\n      context.moveTo(x, 0);\n      context.lineTo(x, height);\n    }\n    context.stroke();\n\n    context.beginPath();\n    context.strokeStyle = ThemeSupport.ThemeSupport.instance().getComputedValue(NetworkLogView.getLoadEventColor());\n    for (let i = this.loadEvents.length - 1; i >= 0; --i) {\n      const position = calculator.computePosition(Trace.Types.Timing.Milli(this.loadEvents[i]));\n      const x = Math.round(position) + 0.5;\n      context.moveTo(x, 0);\n      context.lineTo(x, height);\n    }\n    context.stroke();\n\n    if (this.selectedFilmStripTime !== -1) {\n      context.lineWidth = 2;\n      context.beginPath();\n      context.strokeStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--network-frame-divider-color');\n      const timeInMilliseconds = Trace.Types.Timing.Milli(this.selectedFilmStripTime);\n      const x = Math.round(calculator.computePosition(timeInMilliseconds));\n      context.moveTo(x, 0);\n      context.lineTo(x, height);\n      context.stroke();\n    }\n    context.restore();\n  }\n}\n\nexport const RequestTimeRangeNameToColor = {\n  [RequestTimeRangeNames.TOTAL]: '--network-overview-total',\n  [RequestTimeRangeNames.BLOCKING]: '--network-overview-blocking',\n  [RequestTimeRangeNames.CONNECTING]: '--network-overview-connecting',\n  [RequestTimeRangeNames.SERVICE_WORKER]: '--network-overview-service-worker',\n  [RequestTimeRangeNames.SERVICE_WORKER_PREPARATION]: '--network-overview-service-worker',\n  [RequestTimeRangeNames.SERVICE_WORKER_RESPOND_WITH]: '--network-overview-service-worker-respond-with',\n  [RequestTimeRangeNames.PUSH]: '--network-overview-push',\n  [RequestTimeRangeNames.PROXY]: '--override-network-overview-proxy',\n  [RequestTimeRangeNames.DNS]: '--network-overview-dns',\n  [RequestTimeRangeNames.SSL]: '--network-overview-ssl',\n  [RequestTimeRangeNames.SENDING]: '--override-network-overview-sending',\n  [RequestTimeRangeNames.WAITING]: '--network-overview-waiting',\n  [RequestTimeRangeNames.RECEIVING]: '--network-overview-receiving',\n  [RequestTimeRangeNames.QUEUEING]: '--network-overview-queueing',\n} as Record<string, string>;\n\nconst BAND_HEIGHT = 3;\nconst PADDING = 5;\n\n// Minimum rectangle width for very short requests.\nconst MIN_BAND_WIDTH = 10;\n\n// Border between bars in network overview panel for accessibility.\nconst BORDER_WIDTH = 1;\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.network-waterfall-v-scroll {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow-x: hidden;\n  margin-top: 31px;\n  z-index: 200;\n}\n\n.theme-with-dark-background .network-waterfall-v-scroll {\n  /**\n  * Waterfall scrollbars are implemented as overflowing elements on top of the\n  * scrollable content. The actual content is a viewport without scrollbars.\n  * When using a dark theme, we should inform Blink that the content is dark,\n  * so that the native scrollbars are colored accordingly.\n  */\n  /* stylelint-disable-next-line plugin/use_theme_colors */\n  background: rgb(0 0 0 / 1%);\n}\n\n.network-waterfall-v-scroll.small {\n  margin-top: 27px;\n}\n\n.network-waterfall-v-scroll-content {\n  width: 15px;\n  pointer-events: none;\n}\n\n/*# sourceURL=${import.meta.resolve('./networkWaterfallColumn.css')} */`;", "// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as Logs from '../../models/logs/logs.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport type * as Search from '../search/search.js';\n\nconst UIStrings = {\n  /**\n   * @description Text for web URLs\n   */\n  url: 'URL',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkSearchScope.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class NetworkSearchScope implements Search.SearchScope.SearchScope {\n  #networkLog: Logs.NetworkLog.NetworkLog;\n\n  constructor(networkLog: Logs.NetworkLog.NetworkLog) {\n    this.#networkLog = networkLog;\n  }\n\n  performIndexing(progress: Common.Progress.Progress): void {\n    queueMicrotask(() => {\n      progress.done();\n    });\n  }\n\n  async performSearch(\n      searchConfig: Workspace.SearchConfig.SearchConfig, progress: Common.Progress.Progress,\n      searchResultCallback: (arg0: Search.SearchScope.SearchResult) => void,\n      searchFinishedCallback: (arg0: boolean) => void): Promise<void> {\n    const promises = [];\n    const requests =\n        this.#networkLog.requests().filter(request => searchConfig.filePathMatchesFileQuery(request.url()));\n    progress.setTotalWork(requests.length);\n    for (const request of requests) {\n      const promise = this.searchRequest(searchConfig, request, progress);\n      promises.push(promise);\n    }\n    const resultsWithNull = await Promise.all(promises);\n    const results = (resultsWithNull.filter(result => result !== null));\n    if (progress.isCanceled()) {\n      searchFinishedCallback(false);\n      return;\n    }\n    for (const result of results.sort((r1, r2) => r1.label().localeCompare(r2.label()))) {\n      if (result.matchesCount() > 0) {\n        searchResultCallback(result);\n      }\n    }\n    progress.done();\n    searchFinishedCallback(true);\n  }\n\n  private async searchRequest(\n      searchConfig: Workspace.SearchConfig.SearchConfig, request: SDK.NetworkRequest.NetworkRequest,\n      progress: Common.Progress.Progress): Promise<NetworkSearchResult|null> {\n    const bodyMatches = await NetworkSearchScope.#responseBodyMatches(searchConfig, request);\n    if (progress.isCanceled()) {\n      return null;\n    }\n    const locations = [];\n    if (stringMatchesQuery(request.url())) {\n      locations.push(NetworkForward.UIRequestLocation.UIRequestLocation.urlMatch(request));\n    }\n    for (const header of request.requestHeaders()) {\n      if (headerMatchesQuery(header)) {\n        locations.push(NetworkForward.UIRequestLocation.UIRequestLocation.requestHeaderMatch(request, header));\n      }\n    }\n    for (const header of request.responseHeaders) {\n      if (headerMatchesQuery(header)) {\n        locations.push(NetworkForward.UIRequestLocation.UIRequestLocation.responseHeaderMatch(request, header));\n      }\n    }\n    for (const match of bodyMatches) {\n      locations.push(NetworkForward.UIRequestLocation.UIRequestLocation.bodyMatch(request, match));\n    }\n    progress.incrementWorked();\n    return new NetworkSearchResult(request, locations);\n\n    function headerMatchesQuery(header: SDK.NetworkRequest.NameValue): boolean {\n      return stringMatchesQuery(`${header.name}: ${header.value}`);\n    }\n\n    function stringMatchesQuery(string: string): boolean {\n      const flags = searchConfig.ignoreCase() ? 'i' : '';\n      const regExps =\n          searchConfig.queries().map(query => new RegExp(Platform.StringUtilities.escapeForRegExp(query), flags));\n      let pos = 0;\n      for (const regExp of regExps) {\n        const match = string.substr(pos).match(regExp);\n        if (match?.index === undefined) {\n          return false;\n        }\n        pos += match.index + match[0].length;\n      }\n      return true;\n    }\n  }\n\n  static async #responseBodyMatches(\n      searchConfig: Workspace.SearchConfig.SearchConfig,\n      request: SDK.NetworkRequest.NetworkRequest): Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    if (!request.contentType().isTextType()) {\n      return [];\n    }\n\n    let matches: TextUtils.ContentProvider.SearchMatch[] = [];\n    for (const query of searchConfig.queries()) {\n      const tmpMatches = await request.searchInContent(query, !searchConfig.ignoreCase(), searchConfig.isRegex());\n      if (tmpMatches.length === 0) {\n        // Mirror file search that all individual queries must produce matches.\n        return [];\n      }\n      matches =\n          Platform.ArrayUtilities.mergeOrdered(matches, tmpMatches, TextUtils.ContentProvider.SearchMatch.comparator);\n    }\n    return matches;\n  }\n\n  stopSearch(): void {\n  }\n}\n\nexport class NetworkSearchResult implements Search.SearchScope.SearchResult {\n  private readonly request: SDK.NetworkRequest.NetworkRequest;\n  private readonly locations: NetworkForward.UIRequestLocation.UIRequestLocation[];\n\n  constructor(\n      request: SDK.NetworkRequest.NetworkRequest, locations: NetworkForward.UIRequestLocation.UIRequestLocation[]) {\n    this.request = request;\n    this.locations = locations;\n  }\n\n  matchesCount(): number {\n    return this.locations.length;\n  }\n\n  label(): string {\n    return this.request.displayName;\n  }\n\n  description(): string {\n    const parsedUrl = this.request.parsedURL;\n    if (!parsedUrl) {\n      return this.request.url();\n    }\n    return parsedUrl.urlWithoutScheme();\n  }\n\n  matchLineContent(index: number): string {\n    const location = this.locations[index];\n    if (location.isUrlMatch) {\n      return this.request.url();\n    }\n    const header = location?.header?.header;\n    if (header) {\n      return header.value;\n    }\n    return (location.searchMatch as TextUtils.ContentProvider.SearchMatch).lineContent;\n  }\n\n  matchRevealable(index: number): Object {\n    return this.locations[index];\n  }\n\n  matchLabel(index: number): string {\n    const location = this.locations[index];\n    if (location.isUrlMatch) {\n      return i18nString(UIStrings.url);\n    }\n    const header = location?.header?.header;\n    if (header) {\n      return `${header.name}:`;\n    }\n\n    return ((location.searchMatch as TextUtils.ContentProvider.SearchMatch).lineNumber + 1).toString();\n  }\n\n  matchColumn(index: number): number|undefined {\n    const location = this.locations[index];\n    return location.searchMatch?.columnNumber;\n  }\n\n  matchLength(index: number): number|undefined {\n    const location = this.locations[index];\n    return location.searchMatch?.matchLength;\n  }\n}\n", "// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008, 2009 Anthony Ricaud <rik@webkit.org>\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Extensions from '../../models/extensions/extensions.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as Tracing from '../../services/tracing/tracing.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\nimport * as Search from '../search/search.js';\n\nimport {Events, type RequestActivatedEvent, RequestPanelBehavior} from './NetworkDataGridNode.js';\nimport {NetworkItemView} from './NetworkItemView.js';\nimport {NetworkLogView} from './NetworkLogView.js';\nimport {NetworkOverview} from './NetworkOverview.js';\nimport networkPanelStyles from './networkPanel.css.js';\nimport {NetworkSearchScope} from './NetworkSearchScope.js';\nimport {type NetworkTimeCalculator, NetworkTransferTimeCalculator} from './NetworkTimeCalculator.js';\n\nconst UIStrings = {\n  /**\n   * @description Text to close something\n   */\n  close: 'Close',\n  /**\n   * @description Title of a search bar or tool\n   */\n  search: 'Search',\n  /**\n   * @description Tooltip text that appears on the setting to preserve log when hovering over the item\n   */\n  doNotClearLogOnPageReload: 'Do not clear log on page reload / navigation',\n  /**\n   * @description Text to preserve the log after refreshing\n   */\n  preserveLog: 'Preserve log',\n  /**\n   * @description Text to disable cache while DevTools is open\n   */\n  disableCacheWhileDevtoolsIsOpen: 'Disable cache while DevTools is open',\n  /**\n   * @description Text in Network Config View of the Network panel\n   */\n  disableCache: 'Disable cache',\n  /**\n   * @description Tooltip text that appears when hovering over the largeicon settings gear in show settings pane setting in network panel of the network panel\n   */\n  networkSettings: 'Network settings',\n  /**\n   * @description Tooltip for expanding network request row setting\n   */\n  showMoreInformationInRequestRows: 'Show more information in request rows',\n  /**\n   * @description Text in Network Panel used to toggle the \"big request rows\" setting.\n   */\n  useLargeRequestRows: 'Big request rows',\n  /**\n   * @description Tooltip text for network request overview setting\n   */\n  showOverviewOfNetworkRequests: 'Show overview of network requests',\n  /**\n   * @description Text in Network Panel used to show the overview for a given network request.\n   */\n  showOverview: 'Overview',\n  /**\n   * @description Tooltip for group by frame network setting\n   */\n  groupRequestsByTopLevelRequest: 'Group requests by top level request frame',\n  /**\n   * @description Text for group by frame network setting\n   */\n  groupByFrame: 'Group by frame',\n  /**\n   * @description Tooltip for capture screenshot network setting\n   */\n  captureScreenshotsWhenLoadingA: 'Capture screenshots when loading a page',\n  /**\n   * @description Text to take screenshots\n   */\n  captureScreenshots: 'Screenshots',\n  /**\n   * @description Tooltip text that appears when hovering over the largeicon load button in the\n   * Network Panel. This action prompts the user to select a HAR file to upload to DevTools.\n   */\n  importHarFile: 'Import `HAR` file…',\n  /**\n   * @description Tooltip text that appears when hovering over the download button in the Network\n   * panel, when the setting to allow generating HAR files with sensitive data is enabled. HAR is\n   * a file format (HTTP Archive) and should not be translated. This action triggers a context\n   * menu with two options, one to download HAR sanitized and one to download HAR with sensitive\n   * data.\n   */\n  exportHar: 'Export `HAR` (either sanitized or with sensitive data)',\n  /**\n   * @description Tooltip text that appears when hovering over the download button in the Network\n   * panel, when the setting to allow generating HAR files with sensitive data is disabled. HAR is\n   * a file format (HTTP Archive) and should not be translated. This action triggers the download\n   * of a HAR file.\n   *\n   * This string is also used as the first item in the context menu for the download button in\n   * the Network panel, when the setting to allow generating HAR files with sensitive data is\n   * enabled.\n   */\n  exportHarSanitized: 'Export `HAR` (sanitized)…',\n  /**\n   * @description Context menu item in the context menu for the download button of the Network panel,\n   * which is only available when the Network setting to allow generating HAR with sensitive data\n   * is active. HAR is a file format (HTTP Archive) and should not be translated. This action\n   * triggers the download of a HAR file with sensitive data included.\n   */\n  exportHarWithSensitiveData: 'Export `HAR` (with sensitive data)…',\n  /**\n   * @description Text for throttling the network\n   */\n  throttling: 'Throttling',\n  /**\n   * @description Text in Network Panel to tell the user to reload the page to capture screenshots.\n   * @example {Ctrl + R} PH1\n   */\n  hitSToReloadAndCaptureFilmstrip: 'Press {PH1} to reload and capture filmstrip.',\n  /**\n   * @description A context menu item that is shown for resources in other panels\n   * to open them in the Network panel.\n   */\n  openInNetworkPanel: 'Open in Network panel',\n  /**\n   * @description A context menu item that is shown for resources in other panels\n   * to open them in the Network panel, but when there's no associated network\n   * request. This context menu item is always disabled and only provided to give\n   * the developer an idea of why they cannot open the resource in the Network\n   * panel.\n   */\n  openInNetworkPanelMissingRequest: 'Open in Network panel (missing request)',\n  /**\n   * @description Text in Network Panel that is displayed whilst the recording is in progress.\n   */\n  recordingFrames: 'Recording frames…',\n  /**\n   * @description Text in Network Panel that is displayed when frames are being fetched.\n   */\n  fetchingFrames: 'Fetching frames…',\n  /**\n   * @description Text of a button in the Network panel's toolbar that open Network Conditions panel in the drawer.\n   */\n  moreNetworkConditions: 'More network conditions…',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet networkPanelInstance: NetworkPanel;\n\nexport class NetworkPanel extends UI.Panel.Panel implements\n    UI.ContextMenu\n        .Provider<SDK.NetworkRequest.NetworkRequest|SDK.Resource.Resource|Workspace.UISourceCode.UISourceCode>,\n    UI.View.ViewLocationResolver {\n  private readonly networkLogShowOverviewSetting: Common.Settings.Setting<boolean>;\n  private readonly networkLogLargeRowsSetting: Common.Settings.Setting<boolean>;\n  private readonly networkRecordFilmStripSetting: Common.Settings.Setting<boolean>;\n  private readonly toggleRecordAction: UI.ActionRegistration.Action;\n  private pendingStopTimer!: number|undefined;\n  networkItemView: NetworkItemView|null;\n  private filmStripView: PerfUI.FilmStripView.FilmStripView|null;\n  private filmStripRecorder: FilmStripRecorder|null;\n  private currentRequest: SDK.NetworkRequest.NetworkRequest|null;\n  private readonly panelToolbar: UI.Toolbar.Toolbar;\n  private readonly rightToolbar: UI.Toolbar.Toolbar;\n  private readonly filterBar: UI.FilterBar.FilterBar;\n  private showSettingsPaneSetting: Common.Settings.Setting<boolean>;\n  private readonly filmStripPlaceholderElement: HTMLElement;\n  private readonly overviewPane: PerfUI.TimelineOverviewPane.TimelineOverviewPane;\n  private readonly networkOverview: NetworkOverview;\n  private readonly overviewPlaceholderElement: HTMLElement;\n  private readonly calculator: NetworkTransferTimeCalculator;\n  private splitWidget: UI.SplitWidget.SplitWidget;\n  private readonly sidebarLocation: UI.View.TabbedViewLocation;\n  private readonly progressBarContainer: HTMLDivElement;\n  networkLogView: NetworkLogView;\n  private readonly fileSelectorElement: HTMLElement;\n  private readonly detailsWidget: UI.Widget.VBox;\n  private readonly closeButtonElement: UI.UIUtils.DevToolsCloseButton;\n  private preserveLogSetting: Common.Settings.Setting<boolean>;\n  recordLogSetting: Common.Settings.Setting<boolean>;\n  private readonly throttlingSelect: UI.Toolbar.ToolbarItem;\n  private readonly displayScreenshotDelay: number;\n\n  constructor(displayScreenshotDelay: number) {\n    super('network');\n    this.registerRequiredCSS(networkPanelStyles);\n\n    this.displayScreenshotDelay = displayScreenshotDelay;\n    this.networkLogShowOverviewSetting =\n        Common.Settings.Settings.instance().createSetting('network-log-show-overview', true);\n    this.networkLogLargeRowsSetting =\n        Common.Settings.Settings.instance().createSetting('network-log-large-rows', false);\n    this.networkRecordFilmStripSetting =\n        Common.Settings.Settings.instance().createSetting('network-record-film-strip-setting', false);\n    this.toggleRecordAction = UI.ActionRegistry.ActionRegistry.instance().getAction('network.toggle-recording');\n    this.networkItemView = null;\n    this.filmStripView = null;\n    this.filmStripRecorder = null;\n    this.currentRequest = null;\n\n    const panel = new UI.Widget.VBox();\n\n    const networkToolbarContainer = panel.contentElement.createChild('div', 'network-toolbar-container');\n    networkToolbarContainer.role = 'toolbar';\n    this.panelToolbar = networkToolbarContainer.createChild('devtools-toolbar');\n    this.panelToolbar.role = 'presentation';\n    this.panelToolbar.wrappable = true;\n    this.panelToolbar.setAttribute('jslog', `${VisualLogging.toolbar('network-main')}`);\n    this.rightToolbar = networkToolbarContainer.createChild('devtools-toolbar');\n    this.rightToolbar.role = 'presentation';\n\n    this.filterBar = new UI.FilterBar.FilterBar('network-panel', true);\n    this.filterBar.show(panel.contentElement);\n    this.filterBar.addEventListener(UI.FilterBar.FilterBarEvents.CHANGED, this.handleFilterChanged.bind(this));\n\n    const settingsPane = panel.contentElement.createChild('div', 'network-settings-pane');\n    settingsPane.append(\n        UI.SettingsUI.createSettingCheckbox(\n            i18nString(UIStrings.useLargeRequestRows), this.networkLogLargeRowsSetting,\n            i18nString(UIStrings.showMoreInformationInRequestRows)),\n        UI.SettingsUI.createSettingCheckbox(\n            i18nString(UIStrings.groupByFrame),\n            Common.Settings.Settings.instance().moduleSetting('network.group-by-frame'),\n            i18nString(UIStrings.groupRequestsByTopLevelRequest)),\n        UI.SettingsUI.createSettingCheckbox(\n            i18nString(UIStrings.showOverview), this.networkLogShowOverviewSetting,\n            i18nString(UIStrings.showOverviewOfNetworkRequests)),\n        UI.SettingsUI.createSettingCheckbox(\n            i18nString(UIStrings.captureScreenshots), this.networkRecordFilmStripSetting,\n            i18nString(UIStrings.captureScreenshotsWhenLoadingA)),\n\n    );\n    this.showSettingsPaneSetting =\n        Common.Settings.Settings.instance().createSetting('network-show-settings-toolbar', false);\n    settingsPane.classList.toggle('hidden', !this.showSettingsPaneSetting.get());\n    this.showSettingsPaneSetting.addChangeListener(\n        () => settingsPane.classList.toggle('hidden', !this.showSettingsPaneSetting.get()));\n\n    this.filmStripPlaceholderElement = panel.contentElement.createChild('div', 'network-film-strip-placeholder');\n\n    // Create top overview component.\n    this.overviewPane = new PerfUI.TimelineOverviewPane.TimelineOverviewPane('network');\n    this.overviewPane.addEventListener(\n        PerfUI.TimelineOverviewPane.Events.OVERVIEW_PANE_WINDOW_CHANGED, this.onWindowChanged.bind(this));\n    this.overviewPane.element.id = 'network-overview-panel';\n    this.networkOverview = new NetworkOverview();\n    this.overviewPane.setOverviewControls([this.networkOverview]);\n    this.overviewPlaceholderElement = panel.contentElement.createChild('div');\n\n    this.calculator = new NetworkTransferTimeCalculator();\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(true, false, 'network-panel-split-view-state');\n    this.splitWidget.hideMain();\n    this.splitWidget.show(panel.contentElement);\n\n    panel.setDefaultFocusedChild(this.filterBar);\n\n    const initialSidebarWidth = 225;\n    const splitWidget = new UI.SplitWidget.SplitWidget(true, false, 'network-panel-sidebar-state', initialSidebarWidth);\n    splitWidget.hideSidebar();\n    splitWidget.enableShowModeSaving();\n    splitWidget.show(this.element);\n    this.sidebarLocation = UI.ViewManager.ViewManager.instance().createTabbedLocation(async () => {\n      void UI.ViewManager.ViewManager.instance().showView('network');\n      splitWidget.showBoth();\n    }, 'network-sidebar', true);\n    const tabbedPane = this.sidebarLocation.tabbedPane();\n    tabbedPane.setMinimumSize(100, 25);\n    tabbedPane.element.classList.add('network-tabbed-pane');\n    tabbedPane.element.addEventListener('keydown', event => {\n      if (event.key !== Platform.KeyboardUtilities.ESCAPE_KEY) {\n        return;\n      }\n      splitWidget.hideSidebar();\n      event.consume();\n      void VisualLogging.logKeyDown(event.currentTarget, event, 'hide-sidebar');\n    });\n    const closeSidebar = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.close), 'cross');\n    closeSidebar.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => splitWidget.hideSidebar());\n    closeSidebar.element.setAttribute('jslog', `${VisualLogging.close().track({click: true})}`);\n    tabbedPane.rightToolbar().appendToolbarItem(closeSidebar);\n    splitWidget.setSidebarWidget(tabbedPane);\n    splitWidget.setMainWidget(panel);\n    splitWidget.setDefaultFocusedChild(panel);\n    this.setDefaultFocusedChild(splitWidget);\n\n    this.progressBarContainer = document.createElement('div');\n\n    this.networkLogView =\n        new NetworkLogView(this.filterBar, this.progressBarContainer, this.networkLogLargeRowsSetting);\n    this.splitWidget.setSidebarWidget(this.networkLogView);\n    this.fileSelectorElement =\n        (UI.UIUtils.createFileSelectorElement(this.networkLogView.onLoadFromFile.bind(this.networkLogView)) as\n         HTMLElement);\n    panel.element.appendChild(this.fileSelectorElement);\n\n    this.detailsWidget = new UI.Widget.VBox();\n    this.detailsWidget.element.classList.add('network-details-view');\n    this.splitWidget.setMainWidget(this.detailsWidget);\n\n    this.closeButtonElement = document.createElement('dt-close-button');\n    this.closeButtonElement.addEventListener('click', async () => {\n      const action = UI.ActionRegistry.ActionRegistry.instance().getAction('network.hide-request-details');\n      await action.execute();\n    }, false);\n    this.closeButtonElement.style.margin = '0 5px';\n\n    this.networkLogShowOverviewSetting.addChangeListener(this.toggleShowOverview, this);\n    this.networkLogLargeRowsSetting.addChangeListener(this.toggleLargerRequests, this);\n    this.networkRecordFilmStripSetting.addChangeListener(this.toggleRecordFilmStrip, this);\n\n    this.preserveLogSetting = Common.Settings.Settings.instance().moduleSetting('network-log.preserve-log');\n    this.recordLogSetting = Common.Settings.Settings.instance().moduleSetting('network-log.record-log');\n    this.recordLogSetting.addChangeListener(({data}) => this.toggleRecord(data));\n\n    this.throttlingSelect = this.createThrottlingConditionsSelect();\n    this.setupToolbarButtons(splitWidget);\n\n    this.toggleRecord(this.recordLogSetting.get());\n    this.toggleShowOverview();\n    this.toggleLargerRequests();\n    this.toggleRecordFilmStrip();\n    this.updateUI();\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.WillReloadPage, this.willReloadPage, this,\n        {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.Load, this.load, this, {scoped: true});\n    this.networkLogView.addEventListener(Events.RequestSelected, this.onRequestSelected, this);\n    this.networkLogView.addEventListener(Events.RequestActivated, this.onRequestActivated, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(\n        Logs.NetworkLog.Events.RequestAdded, this.onUpdateRequest, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(\n        Logs.NetworkLog.Events.RequestUpdated, this.onUpdateRequest, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(Logs.NetworkLog.Events.Reset, this.onNetworkLogReset, this);\n  }\n\n  static instance(opts?: {\n    forceNew: boolean,\n    displayScreenshotDelay?: number,\n  }): NetworkPanel {\n    if (!networkPanelInstance || opts?.forceNew) {\n      networkPanelInstance = new NetworkPanel(opts?.displayScreenshotDelay ?? 1000);\n    }\n\n    return networkPanelInstance;\n  }\n\n  static revealAndFilter(filters: Array<{\n    filterType: NetworkForward.UIFilter.FilterType | null,\n    filterValue: string,\n  }>): Promise<void> {\n    const panel = NetworkPanel.instance();\n    let filterString = '';\n    for (const filter of filters) {\n      if (filter.filterType) {\n        filterString += `${filter.filterType}:${filter.filterValue} `;\n      } else {\n        filterString += `${filter.filterValue} `;\n      }\n    }\n    panel.networkLogView.setTextFilterValue(filterString);\n    return UI.ViewManager.ViewManager.instance().showView('network');\n  }\n\n  throttlingSelectForTest(): UI.Toolbar.ToolbarItem {\n    return this.throttlingSelect;\n  }\n\n  private onWindowChanged(\n      event: Common.EventTarget.EventTargetEvent<PerfUI.TimelineOverviewPane.OverviewPaneWindowChangedEvent>): void {\n    const startTime = Math.max(this.calculator.minimumBoundary(), event.data.startTime / 1000);\n    const endTime = Math.min(this.calculator.maximumBoundary(), event.data.endTime / 1000);\n    if (startTime === this.calculator.minimumBoundary() && endTime === this.calculator.maximumBoundary()) {\n      // Reset the filters for NetworkLogView when the window is reset\n      // to its boundaries. This clears the filters and allows the users\n      // to see the incoming requests after they have updated the curtains\n      // to be in the edges. (ex: by double clicking on the overview grid)\n      this.networkLogView.setWindow(0, 0);\n    } else {\n      this.networkLogView.setWindow(startTime, endTime);\n    }\n  }\n\n  private async searchToggleClick(): Promise<void> {\n    const action = UI.ActionRegistry.ActionRegistry.instance().getAction('network.search');\n    await action.execute();\n  }\n\n  private setupToolbarButtons(splitWidget: UI.SplitWidget.SplitWidget): void {\n    const searchToggle = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.search), 'search', undefined, 'search');\n    function updateSidebarToggle(): void {\n      const isSidebarShowing = splitWidget.showMode() !== UI.SplitWidget.ShowMode.ONLY_MAIN;\n      searchToggle.setToggled(isSidebarShowing);\n      if (!isSidebarShowing) {\n        (searchToggle.element as HTMLElement).focus();\n      }\n    }\n    this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.toggleRecordAction));\n    this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton('network.clear'));\n    this.panelToolbar.appendSeparator();\n\n    this.panelToolbar.appendToolbarItem(this.filterBar.filterButton());\n    updateSidebarToggle();\n    splitWidget.addEventListener(UI.SplitWidget.Events.SHOW_MODE_CHANGED, updateSidebarToggle);\n    searchToggle.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      void this.searchToggleClick();\n    });\n    this.panelToolbar.appendToolbarItem(searchToggle);\n    this.panelToolbar.appendSeparator();\n\n    this.panelToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        this.preserveLogSetting, i18nString(UIStrings.doNotClearLogOnPageReload), i18nString(UIStrings.preserveLog)));\n\n    this.panelToolbar.appendSeparator();\n    const disableCacheCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        Common.Settings.Settings.instance().moduleSetting('cache-disabled'),\n        i18nString(UIStrings.disableCacheWhileDevtoolsIsOpen), i18nString(UIStrings.disableCache));\n    this.panelToolbar.appendToolbarItem(disableCacheCheckbox);\n\n    this.panelToolbar.appendToolbarItem(this.throttlingSelect);\n\n    const networkConditionsButton = new UI.Toolbar.ToolbarButton(\n        i18nString(UIStrings.moreNetworkConditions), 'network-settings', undefined, 'network-conditions');\n    networkConditionsButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, () => {\n      void UI.ViewManager.ViewManager.instance().showView('network.config');\n    }, this);\n    this.panelToolbar.appendToolbarItem(networkConditionsButton);\n\n    this.rightToolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.progressBarContainer));\n    this.rightToolbar.appendSeparator();\n    this.rightToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingToggle(\n        this.showSettingsPaneSetting, 'gear', i18nString(UIStrings.networkSettings), 'gear-filled',\n        'network-settings'));\n\n    const exportHarContextMenu = (contextMenu: UI.ContextMenu.ContextMenu): void => {\n      contextMenu.defaultSection().appendItem(\n          i18nString(UIStrings.exportHarSanitized),\n          this.networkLogView.exportAll.bind(this.networkLogView, {sanitize: true}),\n          {jslogContext: 'export-har'},\n      );\n      contextMenu.defaultSection().appendItem(\n          i18nString(UIStrings.exportHarWithSensitiveData),\n          this.networkLogView.exportAll.bind(this.networkLogView, {sanitize: false}),\n          {jslogContext: 'export-har-with-sensitive-data'},\n      );\n    };\n\n    this.panelToolbar.appendSeparator();\n    const importHarButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.importHarFile), 'import', undefined, 'import-har');\n    importHarButton.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.CLICK, () => this.fileSelectorElement.click(), this);\n    this.panelToolbar.appendToolbarItem(importHarButton);\n    const exportHarButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.exportHarSanitized), 'download', undefined, 'export-har');\n    exportHarButton.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.CLICK,\n        this.networkLogView.exportAll.bind(this.networkLogView, {sanitize: true}), this);\n    this.panelToolbar.appendToolbarItem(exportHarButton);\n    const exportHarMenuButton = new UI.Toolbar.ToolbarMenuButton(\n        exportHarContextMenu, /* isIconDropdown */ true, /* useSoftMenu */ false, 'export-har-menu', 'download');\n    exportHarMenuButton.setTitle(i18nString(UIStrings.exportHar));\n    this.panelToolbar.appendToolbarItem(exportHarMenuButton);\n\n    const networkShowOptionsToGenerateHarWithSensitiveData = Common.Settings.Settings.instance().createSetting(\n        'network.show-options-to-generate-har-with-sensitive-data', false);\n    const updateShowOptionsToGenerateHarWithSensitiveData = (): void => {\n      const showOptionsToGenerateHarWithSensitiveData = networkShowOptionsToGenerateHarWithSensitiveData.get();\n      exportHarButton.setVisible(!showOptionsToGenerateHarWithSensitiveData);\n      exportHarMenuButton.setVisible(showOptionsToGenerateHarWithSensitiveData);\n    };\n    networkShowOptionsToGenerateHarWithSensitiveData.addChangeListener(updateShowOptionsToGenerateHarWithSensitiveData);\n    updateShowOptionsToGenerateHarWithSensitiveData();\n  }\n\n  private createThrottlingConditionsSelect(): UI.Toolbar.ToolbarItem {\n    const toolbarItem = new UI.Toolbar.ToolbarItem(document.createElement('div'));\n    toolbarItem.setMaxWidth(160);\n\n    MobileThrottling.NetworkThrottlingSelector.NetworkThrottlingSelect.createForGlobalConditions(\n        toolbarItem.element, i18nString(UIStrings.throttling));\n    return toolbarItem;\n  }\n\n  toggleRecord(toggled: boolean): void {\n    this.toggleRecordAction.setToggled(toggled);\n    if (this.recordLogSetting.get() !== toggled) {\n      this.recordLogSetting.set(toggled);\n    }\n\n    this.networkLogView.setRecording(toggled);\n    if (!toggled && this.filmStripRecorder) {\n      this.filmStripRecorder.stopRecording(this.filmStripAvailable.bind(this));\n    }\n  }\n\n  private filmStripAvailable(filmStrip: Trace.Extras.FilmStrip.Data): void {\n    if (this.filmStripView) {\n      this.filmStripView.setModel(filmStrip);\n    }\n    const timestamps = filmStrip.frames.map(frame => {\n      // The network view works in seconds.\n      return Trace.Helpers.Timing.microToSeconds(frame.screenshotEvent.ts);\n    });\n\n    this.networkLogView.addFilmStripFrames(timestamps);\n  }\n\n  private onNetworkLogReset(event: Common.EventTarget.EventTargetEvent<Logs.NetworkLog.ResetEvent>): void {\n    const {clearIfPreserved} = event.data;\n    if (!this.preserveLogSetting.get() || clearIfPreserved) {\n      this.calculator.reset();\n      this.overviewPane.reset();\n    }\n    if (this.filmStripView) {\n      this.resetFilmStripView();\n    }\n  }\n\n  private willReloadPage(): void {\n    if (this.pendingStopTimer) {\n      clearTimeout(this.pendingStopTimer);\n      delete this.pendingStopTimer;\n    }\n    if (this.isShowing() && this.filmStripRecorder) {\n      this.filmStripRecorder.startRecording();\n    }\n  }\n\n  private load(): void {\n    if (this.filmStripRecorder?.isRecording()) {\n      if (this.pendingStopTimer) {\n        window.clearTimeout(this.pendingStopTimer);\n      }\n      this.pendingStopTimer = window.setTimeout(this.stopFilmStripRecording.bind(this), this.displayScreenshotDelay);\n    }\n  }\n\n  private stopFilmStripRecording(): void {\n    if (this.filmStripRecorder) {\n      this.filmStripRecorder.stopRecording(this.filmStripAvailable.bind(this));\n    }\n    delete this.pendingStopTimer;\n  }\n\n  private toggleLargerRequests(): void {\n    this.updateUI();\n  }\n\n  private toggleShowOverview(): void {\n    const toggled = this.networkLogShowOverviewSetting.get();\n    if (toggled) {\n      this.overviewPane.show(this.overviewPlaceholderElement);\n    } else {\n      this.overviewPane.detach();\n    }\n    this.doResize();\n  }\n\n  private toggleRecordFilmStrip(): void {\n    const toggled = this.networkRecordFilmStripSetting.get();\n    if (toggled && !this.filmStripRecorder) {\n      this.filmStripView = new PerfUI.FilmStripView.FilmStripView();\n      this.filmStripView.element.classList.add('network-film-strip');\n      this.filmStripView.element.setAttribute('jslog', `${VisualLogging.section('film-strip')}`);\n      this.filmStripRecorder = new FilmStripRecorder(this.networkLogView.timeCalculator(), this.filmStripView);\n      this.filmStripView.show(this.filmStripPlaceholderElement);\n      this.filmStripView.addEventListener(PerfUI.FilmStripView.Events.FRAME_SELECTED, this.onFilmFrameSelected, this);\n      this.filmStripView.addEventListener(PerfUI.FilmStripView.Events.FRAME_ENTER, this.onFilmFrameEnter, this);\n      this.filmStripView.addEventListener(PerfUI.FilmStripView.Events.FRAME_EXIT, this.onFilmFrameExit, this);\n      this.resetFilmStripView();\n    }\n\n    if (!toggled && this.filmStripRecorder) {\n      if (this.filmStripView) {\n        this.filmStripView.detach();\n      }\n      this.filmStripView = null;\n      this.filmStripRecorder = null;\n    }\n  }\n\n  private resetFilmStripView(): void {\n    const reloadShortcut =\n        UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction('inspector-main.reload')[0];\n\n    if (this.filmStripView) {\n      this.filmStripView.reset();\n      if (reloadShortcut) {\n        this.filmStripView.setStatusText(\n            i18nString(UIStrings.hitSToReloadAndCaptureFilmstrip, {PH1: reloadShortcut.title()}));\n      }\n    }\n  }\n\n  override elementsToRestoreScrollPositionsFor(): Element[] {\n    return this.networkLogView.elementsToRestoreScrollPositionsFor();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    UI.Context.Context.instance().setFlavor(NetworkPanel, this);\n\n    // Record the network tool load time after the panel has loaded.\n    Host.userMetrics.panelLoaded('network', 'DevTools.Launch.Network');\n  }\n\n  override willHide(): void {\n    UI.Context.Context.instance().setFlavor(NetworkPanel, null);\n    super.willHide();\n  }\n\n  revealAndHighlightRequest(request: SDK.NetworkRequest.NetworkRequest): void {\n    this.hideRequestPanel();\n    if (request) {\n      this.networkLogView.revealAndHighlightRequest(request);\n    }\n  }\n\n  revealAndHighlightRequestWithId(request: NetworkForward.NetworkRequestId.NetworkRequestId): void {\n    this.hideRequestPanel();\n    if (request) {\n      this.networkLogView.revealAndHighlightRequestWithId(request);\n    }\n  }\n\n  async selectAndActivateRequest(\n      request: SDK.NetworkRequest.NetworkRequest, shownTab?: NetworkForward.UIRequestLocation.UIRequestTabs,\n      options?: NetworkForward.UIRequestLocation.FilterOptions): Promise<NetworkItemView|null> {\n    await UI.ViewManager.ViewManager.instance().showView('network');\n    this.networkLogView.selectRequest(request, options);\n    this.showRequestPanel(shownTab);\n    this.networkLogView.revealAndHighlightRequest(request);\n    return this.networkItemView;\n  }\n\n  private handleFilterChanged(): void {\n    this.hideRequestPanel();\n  }\n\n  private onRequestSelected(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest|null>): void {\n    const request = event.data;\n    this.currentRequest = request;\n    this.networkOverview.setHighlightedRequest(request);\n    this.updateNetworkItemView();\n    UI.Context.Context.instance().setFlavor(SDK.NetworkRequest.NetworkRequest, request);\n  }\n\n  private onRequestActivated(event: Common.EventTarget.EventTargetEvent<RequestActivatedEvent>): void {\n    const {showPanel, tab, takeFocus} = event.data;\n    if (showPanel === RequestPanelBehavior.ShowPanel) {\n      this.showRequestPanel(tab, takeFocus);\n    } else if (showPanel === RequestPanelBehavior.HidePanel) {\n      this.hideRequestPanel();\n    }\n  }\n\n  private showRequestPanel(shownTab?: NetworkForward.UIRequestLocation.UIRequestTabs, takeFocus?: boolean): void {\n    if (this.splitWidget.showMode() === UI.SplitWidget.ShowMode.BOTH && !shownTab && !takeFocus) {\n      // If panel is already shown, and we are not forcing a specific tab, return.\n      return;\n    }\n    this.clearNetworkItemView();\n    if (this.currentRequest) {\n      const networkItemView = this.createNetworkItemView(shownTab);\n      if (networkItemView && takeFocus) {\n        networkItemView.focus();\n      }\n    }\n    this.updateUI();\n  }\n\n  hideRequestPanel(): void {\n    this.clearNetworkItemView();\n    this.splitWidget.hideMain();\n    this.updateUI();\n  }\n\n  private updateNetworkItemView(): void {\n    if (this.splitWidget.showMode() === UI.SplitWidget.ShowMode.BOTH) {\n      this.clearNetworkItemView();\n      this.createNetworkItemView();\n      this.updateUI();\n    }\n  }\n\n  private clearNetworkItemView(): void {\n    if (this.networkItemView) {\n      this.networkItemView.detach();\n      this.networkItemView = null;\n    }\n  }\n  private createNetworkItemView(initialTab?: NetworkForward.UIRequestLocation.UIRequestTabs): NetworkItemView\n      |undefined {\n    if (!this.currentRequest) {\n      return;\n    }\n    this.networkItemView = new NetworkItemView(this.currentRequest, this.networkLogView.timeCalculator(), initialTab);\n    this.networkItemView.leftToolbar().appendToolbarItem(new UI.Toolbar.ToolbarItem(this.closeButtonElement));\n    this.networkItemView.show(this.detailsWidget.element);\n    this.splitWidget.showBoth();\n    return this.networkItemView;\n  }\n\n  private updateUI(): void {\n    if (this.detailsWidget) {\n      this.detailsWidget.element.classList.toggle(\n          'network-details-view-tall-header', this.networkLogLargeRowsSetting.get());\n    }\n    if (this.networkLogView) {\n      this.networkLogView.switchViewMode(!this.splitWidget.isResizable());\n    }\n  }\n\n  appendApplicableItems(\n      this: NetworkPanel, event: Event, contextMenu: UI.ContextMenu.ContextMenu,\n      target: SDK.NetworkRequest.NetworkRequest|SDK.Resource.Resource|Workspace.UISourceCode.UISourceCode|\n      SDK.TraceObject.RevealableNetworkRequest): void {\n    const appendRevealItem = (request: SDK.NetworkRequest.NetworkRequest): void => {\n      contextMenu.revealSection().appendItem(\n          i18nString(UIStrings.openInNetworkPanel),\n          () => UI.ViewManager.ViewManager.instance()\n                    .showView('network')\n                    .then(this.networkLogView.resetFilter.bind(this.networkLogView))\n                    .then(this.revealAndHighlightRequest.bind(this, request)),\n          {jslogContext: 'reveal-in-network'});\n    };\n    const appendRevealItemMissingData = (): void => {\n      contextMenu.revealSection().appendItem(i18nString(UIStrings.openInNetworkPanelMissingRequest), () => {}, {\n        disabled: true,\n        jslogContext: 'reveal-in-network',\n      });\n    };\n    const appendRevealItemAndSelect = (request: SDK.TraceObject.RevealableNetworkRequest): void => {\n      contextMenu.revealSection().appendItem(\n          i18nString(UIStrings.openInNetworkPanel),\n          () => UI.ViewManager.ViewManager.instance()\n                    .showView('network')\n                    .then(this.networkLogView.resetFilter.bind(this.networkLogView))\n                    .then(this.selectAndActivateRequest.bind(\n                        this, request.networkRequest, NetworkForward.UIRequestLocation.UIRequestTabs.HEADERS_COMPONENT,\n                        /* FilterOptions= */ undefined)),\n          {jslogContext: 'timeline.reveal-in-network'});\n    };\n\n    if ((event.target as Node).isSelfOrDescendant(this.element)) {\n      return;\n    }\n\n    if (target instanceof SDK.Resource.Resource) {\n      if (target.request) {\n        appendRevealItem(target.request);\n      } else {\n        appendRevealItemMissingData();\n      }\n      return;\n    }\n    if (target instanceof Workspace.UISourceCode.UISourceCode) {\n      const resource = SDK.ResourceTreeModel.ResourceTreeModel.resourceForURL(target.url());\n      if (resource?.request) {\n        appendRevealItem(resource.request);\n      } else {\n        appendRevealItemMissingData();\n      }\n      return;\n    }\n    if (target instanceof SDK.TraceObject.RevealableNetworkRequest) {\n      appendRevealItemAndSelect(target);\n      return;\n    }\n\n    if (this.networkItemView && this.networkItemView.isShowing() && this.networkItemView.request() === target) {\n      return;\n    }\n\n    appendRevealItem(target);\n  }\n\n  private onFilmFrameSelected(event: Common.EventTarget.EventTargetEvent<number>): void {\n    const timestamp = event.data;\n    this.overviewPane.setWindowTimes(Trace.Types.Timing.Milli(0), Trace.Types.Timing.Milli(timestamp));\n  }\n\n  private onFilmFrameEnter(event: Common.EventTarget.EventTargetEvent<number>): void {\n    const timestamp = event.data;\n    this.networkOverview.selectFilmStripFrame(timestamp);\n    this.networkLogView.selectFilmStripFrame(timestamp / 1000);\n  }\n\n  private onFilmFrameExit(): void {\n    this.networkOverview.clearFilmStripFrame();\n    this.networkLogView.clearFilmStripFrame();\n  }\n\n  private onUpdateRequest(event: Common.EventTarget.EventTargetEvent<{request: SDK.NetworkRequest.NetworkRequest}>):\n      void {\n    const {request} = event.data;\n    this.calculator.updateBoundaries(request);\n    // FIXME: Unify all time units across the frontend!\n    this.overviewPane.setBounds(\n        Trace.Types.Timing.Milli(this.calculator.minimumBoundary() * 1000),\n        Trace.Types.Timing.Milli(this.calculator.maximumBoundary() * 1000));\n    this.networkOverview.updateRequest(request);\n  }\n\n  resolveLocation(locationName: string): UI.View.ViewLocation|null {\n    if (locationName === 'network-sidebar') {\n      return this.sidebarLocation;\n    }\n    return null;\n  }\n}\n\nexport class RequestRevealer implements Common.Revealer.Revealer<SDK.NetworkRequest.NetworkRequest> {\n  reveal(request: SDK.NetworkRequest.NetworkRequest): Promise<void> {\n    const panel = NetworkPanel.instance();\n    return UI.ViewManager.ViewManager.instance().showView('network').then(\n        panel.revealAndHighlightRequest.bind(panel, request));\n  }\n}\n\nexport class RequestIdRevealer implements Common.Revealer.Revealer<NetworkForward.NetworkRequestId.NetworkRequestId> {\n  reveal(requestId: NetworkForward.NetworkRequestId.NetworkRequestId): Promise<void> {\n    const panel = NetworkPanel.instance();\n    return UI.ViewManager.ViewManager.instance().showView('network').then(\n        panel.revealAndHighlightRequestWithId.bind(panel, requestId));\n  }\n}\n\nexport class NetworkLogWithFilterRevealer implements\n    Common.Revealer\n        .Revealer<Extensions.ExtensionServer.RevealableNetworkRequestFilter|NetworkForward.UIFilter.UIRequestFilter> {\n  reveal(request: Extensions.ExtensionServer.RevealableNetworkRequestFilter|NetworkForward.UIFilter.UIRequestFilter):\n      Promise<void> {\n    if ('filters' in request) {\n      return NetworkPanel.revealAndFilter(request.filters);\n    }\n    return NetworkPanel.revealAndFilter(request.filter ? [{filterType: null, filterValue: request.filter}] : []);\n  }\n}\n\nexport class FilmStripRecorder implements Tracing.TracingManager.TracingManagerClient {\n  #tracingManager: Tracing.TracingManager.TracingManager|null = null;\n  #resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel|null = null;\n  readonly #timeCalculator: NetworkTimeCalculator;\n  readonly #filmStripView: PerfUI.FilmStripView.FilmStripView;\n  #callback: ((filmStrip: Trace.Extras.FilmStrip.Data) => void)|null = null;\n  // Used to fetch screenshots of the page load and show them in the panel.\n  #traceEngine: Trace.TraceModel.Model = Trace.TraceModel.Model.createWithSubsetOfHandlers({\n    Screenshots: Trace.Handlers.ModelHandlers.Screenshots,\n  });\n  #collectedTraceEvents: Trace.Types.Events.Event[] = [];\n\n  constructor(\n      timeCalculator: NetworkTimeCalculator,\n      filmStripView: PerfUI.FilmStripView.FilmStripView,\n  ) {\n    this.#timeCalculator = timeCalculator;\n    this.#filmStripView = filmStripView;\n  }\n\n  traceEventsCollected(events: Trace.Types.Events.Event[]): void {\n    this.#collectedTraceEvents.push(...events);\n  }\n\n  async tracingComplete(): Promise<void> {\n    if (!this.#tracingManager) {\n      return;\n    }\n    this.#tracingManager = null;\n    await this.#traceEngine.parse(this.#collectedTraceEvents);\n\n    const data = this.#traceEngine.parsedTrace(this.#traceEngine.size() - 1) as\n        Trace.Extras.FilmStrip.HandlerDataWithScreenshots;\n    if (!data) {\n      return;\n    }\n    const zeroTimeInSeconds = Trace.Types.Timing.Seconds(this.#timeCalculator.minimumBoundary());\n    const filmStrip =\n        Trace.Extras.FilmStrip.fromParsedTrace(data, Trace.Helpers.Timing.secondsToMicro(zeroTimeInSeconds));\n\n    if (this.#callback) {\n      this.#callback(filmStrip);\n    }\n    this.#callback = null;\n    // Now we have created the film strip and stored the data, we need to reset\n    // the trace processor so that it is ready to record again if the user\n    // refreshes the page.\n    this.#traceEngine.resetProcessor();\n\n    if (this.#resourceTreeModel) {\n      this.#resourceTreeModel.resumeReload();\n    }\n    this.#resourceTreeModel = null;\n  }\n\n  tracingBufferUsage(): void {\n  }\n\n  eventsRetrievalProgress(_progress: number): void {\n  }\n\n  startRecording(): void {\n    this.#collectedTraceEvents = [];\n    this.#filmStripView.reset();\n    this.#filmStripView.setStatusText(i18nString(UIStrings.recordingFrames));\n    const tracingManager =\n        SDK.TargetManager.TargetManager.instance().scopeTarget()?.model(Tracing.TracingManager.TracingManager);\n    if (this.#tracingManager || !tracingManager) {\n      return;\n    }\n\n    this.#tracingManager = tracingManager;\n    this.#resourceTreeModel = this.#tracingManager.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n    void this.#tracingManager.start(this, '-*,disabled-by-default-devtools.screenshot');\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.FilmStripStartedRecording);\n  }\n\n  isRecording(): boolean {\n    return Boolean(this.#tracingManager);\n  }\n\n  stopRecording(callback: (filmStrip: Trace.Extras.FilmStrip.Data) => void): void {\n    if (!this.#tracingManager) {\n      return;\n    }\n\n    this.#tracingManager.stop();\n    if (this.#resourceTreeModel) {\n      this.#resourceTreeModel.suspendReload();\n    }\n    this.#callback = callback;\n    this.#filmStripView.setStatusText(i18nString(UIStrings.fetchingFrames));\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const panel = context.flavor(NetworkPanel);\n    if (panel === null) {\n      return false;\n    }\n    switch (actionId) {\n      case 'network.toggle-recording': {\n        panel.toggleRecord(!panel.recordLogSetting.get());\n        return true;\n      }\n      case 'network.hide-request-details': {\n        if (!panel.networkItemView) {\n          return false;\n        }\n        panel.hideRequestPanel();\n        panel.networkLogView.resetFocus();\n        return true;\n      }\n      case 'network.search': {\n        const selection = UI.InspectorView.InspectorView.instance().element.window().getSelection();\n        if (!selection) {\n          return false;\n        }\n        let queryCandidate = '';\n        if (selection.rangeCount) {\n          queryCandidate = selection.toString().replace(/\\r?\\n.*/, '');\n        }\n        void SearchNetworkView.openSearch(queryCandidate);\n        return true;\n      }\n      case 'network.clear': {\n        Logs.NetworkLog.NetworkLog.instance().reset(true);\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport class RequestLocationRevealer implements\n    Common.Revealer.Revealer<NetworkForward.UIRequestLocation.UIRequestLocation> {\n  async reveal(location: NetworkForward.UIRequestLocation.UIRequestLocation): Promise<void> {\n    const view =\n        await NetworkPanel.instance().selectAndActivateRequest(location.request, location.tab, location.filterOptions);\n    if (!view) {\n      return;\n    }\n    if (location.searchMatch) {\n      const {lineNumber, columnNumber, matchLength} = location.searchMatch;\n      const revealPosition = {\n        from: {lineNumber, columnNumber},\n        to: {lineNumber, columnNumber: columnNumber + matchLength},\n      };\n      await view.revealResponseBody(revealPosition);\n    }\n    if (location.header) {\n      view.revealHeader(location.header.section, location.header.header?.name);\n    }\n  }\n}\n\nlet searchNetworkViewInstance: SearchNetworkView;\n\nexport class SearchNetworkView extends Search.SearchView.SearchView {\n  private constructor() {\n    super('network', new Common.Throttler.Throttler(/* timeoutMs */ 200));\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): SearchNetworkView {\n    const {forceNew} = opts;\n    if (!searchNetworkViewInstance || forceNew) {\n      searchNetworkViewInstance = new SearchNetworkView();\n    }\n\n    return searchNetworkViewInstance;\n  }\n\n  static async openSearch(query: string, searchImmediately?: boolean): Promise<Search.SearchView.SearchView> {\n    await UI.ViewManager.ViewManager.instance().showView('network.search-network-tab');\n    const searchView = SearchNetworkView.instance();\n    searchView.toggle(query, Boolean(searchImmediately));\n    return searchView;\n  }\n\n  override createScope(): Search.SearchScope.SearchScope {\n    return new NetworkSearchScope(Logs.NetworkLog.NetworkLog.instance());\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Anthony Ricaud <rik@webkit.org>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n:root {\n  --network-overview-total: var(--sys-color-neutral-bright);\n  --network-overview-blocking: var(--ref-palette-neutral0);\n  --network-overview-connecting: var(--ref-palette-yellow60);\n  --network-overview-service-worker: var(--sys-color-orange-bright);\n  --network-overview-service-worker-respond-with: var(--sys-color-cyan-bright);\n  --network-overview-push: var(--ref-palette-blue60);\n  --override-network-overview-proxy: var(--ref-palette-neutral60);\n  --network-overview-dns: var(--sys-color-cyan);\n  --network-overview-ssl: var(--ref-palette-purple70);\n  --override-network-overview-sending: var(--ref-palette-cyan60);\n  --network-overview-waiting: var(--ref-palette-green70);\n  --network-overview-receiving: var(--ref-palette-blue60);\n  --network-overview-queueing: var(--ref-palette-neutral100);\n  --network-grid-navigation-color: var(--ref-palette-blue90);\n  --network-grid-initiator-path-color: var(--ref-palette-green90);\n  --network-grid-initiated-path-color: var(--ref-palette-error80);\n  --network-grid-focus-selected-color-has-error: var(--sys-color-surface-error);\n  --network-grid-focus-selected-color-has-warning: var(--sys-color-surface-yellow);\n  --network-grid-from-frame-color: var(--ref-palette-cyan95);\n  --network-grid-is-product-color: var(--ref-palette-yellow95);\n  --network-frame-divider-color: var(--ref-palette-yellow60);\n}\n\n.theme-with-dark-background {\n  --network-overview-blocking: var(--ref-palette-neutral100);\n  --network-grid-initiator-path-color: var(--ref-palette-green40);\n  --network-grid-initiated-path-color: var(--ref-palette-error20);\n  --network-grid-from-frame-color: var(--ref-palette-neutral50);\n  --network-grid-is-product-color: var(--ref-palette-neutral70);\n}\n\n.network-details-view {\n  background: var(--app-color-toolbar-background);\n}\n\n.network-details-view-tall-header {\n  border-top: 4px solid var(--app-color-toolbar-background);\n}\n\n.network-item-view {\n  display: flex;\n  background: var(--sys-color-cdt-base-container);\n}\n\n.network-item-preview-toolbar {\n  border-top: 1px solid var(--sys-color-divider);\n  background-color: var(--sys-color-surface1);\n}\n\n.resource-timing-view {\n  display: block;\n  margin: 6px;\n  color: var(--sys-color-on-surface);\n  overflow: auto;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.resource-timing-table {\n  width: 100% !important; /* stylelint-disable-line declaration-no-important */\n}\n\n#network-overview-panel {\n  flex: none;\n  position: relative;\n}\n\n#network-overview-container {\n  overflow: hidden;\n  flex: auto;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n#network-overview-container canvas {\n  width: 100%;\n  height: 100%;\n}\n\n.resources-dividers-label-bar {\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n#network-overview-grid .resources-dividers-label-bar {\n  pointer-events: auto;\n}\n\n.network .network-overview {\n  flex: 0 0 60px;\n}\n\n.network-overview .resources-dividers-label-bar .resources-divider {\n  background-color: transparent;\n}\n\n.network-overview .resources-dividers {\n  z-index: 250;\n}\n\n.request-view.html iframe {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n}\n\n.network-film-strip {\n  border-bottom: solid 1px var(--sys-color-divider);\n  flex: none !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.network-film-strip-placeholder {\n  flex-shrink: 0;\n}\n\n.network-tabbed-pane {\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.network-settings-pane {\n  display: grid;\n  grid-template-columns: 50% 50%;\n  flex: none;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.network-toolbar-container {\n  display: flex;\n  align-items: flex-start;\n  flex: none;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n\n  & > :first-child {\n    flex: 1 1 auto;\n  }\n}\n\n@media (forced-colors: active) {\n  .panel.network devtools-toolbar {\n    background-color: canvas;\n  }\n}\n\ndevtools-request-headers {\n  min-width: 360px;\n}\n\n/*# sourceURL=${import.meta.resolve('./networkPanel.css')} */`;"],
  "mappings": "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A;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA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",
  "names": ["i18n", "UI", "UIStrings", "str_", "i18nString", "Common", "Host", "i18n", "SDK", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "Common", "i18n", "Platform", "SDK", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "section", "Common", "Host", "i18n", "Platform", "SDK", "Logs", "Buttons", "DataGrid", "UI", "UIStrings", "str_", "i18nString", "networkManager", "Common", "i18n", "Platform", "SDK", "NetworkForward", "IconButton", "LegacyWrapper", "UI", "VisualLogging", "NetworkComponents", "Common", "i18n", "SDK", "IconButton", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "i18n", "SDK", "Logs", "Components", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "tree", "Common", "Host", "i18n", "SDK", "Buttons", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "section", "i18n", "SourceFrame", "UI", "VisualLogging", "UI", "render", "render", "Category", "Host", "i18n", "IconButton", "Components", "UI", "UIStrings", "str_", "i18nString", "Category", "UIStrings", "str_", "i18nString", "toolbar", "DEFAULT_VIEW", "Common", "Host", "i18n", "TextUtils", "SourceFrame", "UI", "html", "render", "UIStrings", "str_", "i18nString", "DEFAULT_VIEW", "widget", "Common", "Host", "i18n", "SDK", "Logs", "ObjectUI", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "right", "dataHeader", "document", "Common", "i18n", "Platform", "SDK", "TextUtils", "DataGrid", "UI", "VisualLogging", "Common", "Host", "i18n", "Platform", "TextUtils", "DataGrid", "SourceFrame", "UI", "UIStrings", "str_", "i18nString", "UIStrings", "str_", "i18nString", "Common", "i18n", "Platform", "SDK", "TextUtils", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "i18nLazyString", "UIStrings", "str_", "i18nString", "section", "Common", "i18n", "UIStrings", "str_", "i18nString", "window", "Common", "Host", "i18n", "Platform", "SDK", "Bindings", "Logs", "TextUtils", "NetworkForward", "Buttons", "RenderCoordinator", "DataGrid", "PerfUI", "Components", "UI", "VisualLogging", "Common", "SDK", "IconButton", "UI", "Common", "i18n", "IconButton", "DataGrid", "Components", "UI", "ThemeSupport", "VisualLogging", "i18n", "UI", "UIStrings", "str_", "i18nString", "columnData", "Common", "RenderCoordinator", "PerfUI", "UI", "ThemeSupport", "SDK", "PerfUI", "n", "start", "end", "UIStrings", "str_", "i18nString", "i18nLazyString", "columnConfig", "waterfallSortIds", "WaterfallSortIds", "UIStrings", "str_", "i18nString", "request", "requestHeaders", "i18n", "Platform", "TextUtils", "NetworkForward", "UIStrings", "str_", "i18nString", "ActionDelegate", "Common", "Host", "i18n", "Platform", "SDK", "Logs", "Trace", "NetworkForward", "PerfUI", "UI", "VisualLogging", "MobileThrottling", "UIStrings", "str_", "i18nString", "panel", "ActionDelegate"]
}
