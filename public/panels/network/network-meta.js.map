{
  "version": 3,
  "sources": ["network-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Extensions from '../../models/extensions/extensions.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as NetworkForward from './forward/forward.js';\nimport type * as Network from './network.js';\n\nconst UIStrings = {\n  /**\n   * @description Command for showing the 'Network' tool\n   */\n  showNetwork: 'Show Network',\n  /**\n   * @description Title of the Network tool\n   */\n  network: 'Network',\n  /**\n   * @description Command for showing the 'Network request blocking' tool\n   */\n  showNetworkRequestBlocking: 'Show Network request blocking',\n  /**\n   * @description Title of the 'Network request blocking' tool in the bottom drawer\n   */\n  networkRequestBlocking: 'Network request blocking',\n  /**\n   * @description Command for showing the 'Network conditions' tool\n   */\n  showNetworkConditions: 'Show Network conditions',\n  /**\n   * @description Title of the 'Network conditions' tool in the bottom drawer\n   */\n  networkConditions: 'Network conditions',\n  /**\n   * @description A tag of Network Conditions tool that can be searched in the command menu\n   */\n  diskCache: 'disk cache',\n  /**\n   * @description A tag of Network Conditions tool that can be searched in the command menu\n   */\n  networkThrottling: 'network throttling',\n  /**\n   * @description Command for showing the 'Search' tool\n   */\n  showSearch: 'Show Search',\n  /**\n   * @description Title of a search bar or tool\n   */\n  search: 'Search',\n  /**\n   * @description Title of an action in the network tool to toggle recording\n   */\n  recordNetworkLog: 'Record network log',\n  /**\n   * @description Title of an action in the network tool to toggle recording\n   */\n  stopRecordingNetworkLog: 'Stop recording network log',\n  /**\n   * @description Title of an action that hides network request details\n   */\n  hideRequestDetails: 'Hide request details',\n  /**\n   * @description Title of a setting under the Network category in Settings\n   */\n  colorcodeResourceTypes: 'Color-code resource types',\n  /**\n   * @description A tag of Network color-code resource types that can be searched in the command menu\n   */\n  colorCode: 'color code',\n  /**\n   * @description A tag of Network color-code resource types that can be searched in the command menu\n   */\n  resourceType: 'resource type',\n  /**\n   * @description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  colorCodeByResourceType: 'Color code by resource type',\n  /**\n   * @description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  useDefaultColors: 'Use default colors',\n  /**\n   * @description Title of a setting under the Network category in Settings\n   */\n  groupNetworkLogByFrame: 'Group network log by frame',\n  /**\n   * @description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  netWork: 'network',\n  /**\n   * @description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  frame: 'frame',\n  /**\n   * @description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  group: 'group',\n  /**\n   * @description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  groupNetworkLogItemsByFrame: 'Group network log items by frame',\n  /**\n   * @description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  dontGroupNetworkLogItemsByFrame: 'Don\\'t group network log items by frame',\n  /**\n   * @description Title of a button for clearing the network log\n   */\n  clear: 'Clear network log',\n  /**\n   * @description Title of an action in the Network request blocking panel to add a new URL pattern to the blocklist.\n   */\n  addNetworkRequestBlockingPattern: 'Add network request blocking pattern',\n  /**\n   * @description Title of an action in the Network request blocking panel to clear all URL patterns.\n   */\n  removeAllNetworkRequestBlockingPatterns: 'Remove all network request blocking patterns',\n  /**\n   * @description Title of an action in the Network panel (and title of a setting in the Network category)\n   *              that enables options in the UI to copy or export HAR (not translatable) with sensitive data.\n   */\n  allowToGenerateHarWithSensitiveData: 'Allow to generate `HAR` with sensitive data',\n  /**\n   * @description Title of an action in the Network panel that disables options in the UI to copy or export\n   *              HAR (not translatable) with sensitive data.\n   */\n  dontAllowToGenerateHarWithSensitiveData: 'Don\\'t allow to generate `HAR` with sensitive data',\n  /**\n   * @description Tooltip shown as documentation when hovering the (?) icon next to the \"Allow to generate\n   *              HAR with sensitive data\" option in the Settings panel.\n   */\n  allowToGenerateHarWithSensitiveDataDocumentation:\n      'By default generated HAR logs are sanitized and don\\'t include `Cookie`, `Set-Cookie`, or `Authorization` HTTP headers. When this setting is enabled, options to export/copy HAR with sensitive data are provided.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/network-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedNetworkModule: (typeof Network|undefined);\n\nconst isNode = Root.Runtime.Runtime.isNode();\n\nasync function loadNetworkModule(): Promise<typeof Network> {\n  if (!loadedNetworkModule) {\n    loadedNetworkModule = await import('./network.js');\n  }\n  return loadedNetworkModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (loadedNetworkModule: typeof Network) => T[]): T[] {\n  if (loadedNetworkModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedNetworkModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'network',\n  commandPrompt: i18nLazyString(UIStrings.showNetwork),\n  title: i18nLazyString(UIStrings.network),\n  order: 40,\n  isPreviewFeature: isNode,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'network.blocked-urls',\n  commandPrompt: i18nLazyString(UIStrings.showNetworkRequestBlocking),\n  title: i18nLazyString(UIStrings.networkRequestBlocking),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 60,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return new Network.BlockedURLsPane.BlockedURLsPane();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'network.config',\n  commandPrompt: i18nLazyString(UIStrings.showNetworkConditions),\n  title: i18nLazyString(UIStrings.networkConditions),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 40,\n  tags: [\n    i18nLazyString(UIStrings.diskCache),\n    i18nLazyString(UIStrings.networkThrottling),\n    i18n.i18n.lockedLazyString('useragent'),\n    i18n.i18n.lockedLazyString('user agent'),\n    i18n.i18n.lockedLazyString('user-agent'),\n  ],\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkConfigView.NetworkConfigView.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NETWORK_SIDEBAR,\n  id: 'network.search-network-tab',\n  commandPrompt: i18nLazyString(UIStrings.showSearch),\n  title: i18nLazyString(UIStrings.search),\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.SearchNetworkView.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.recordNetworkLog),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopRecordingNetworkLog),\n    },\n  ],\n  bindings: [\n    {\n      shortcut: 'Ctrl+E',\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n    },\n    {\n      shortcut: 'Meta+E',\n      platform: UI.ActionRegistration.Platforms.MAC,\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.clear',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.clear),\n  iconClass: UI.ActionRegistration.IconClass.CLEAR,\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  bindings: [\n    {\n      shortcut: 'Ctrl+L',\n    },\n    {\n      shortcut: 'Meta+K',\n      platform: UI.ActionRegistration.Platforms.MAC,\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.hide-request-details',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.hideRequestDetails),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      shortcut: 'Esc',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.search',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.search),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+F',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.DEVTOOLS_DEFAULT,\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+F',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.DEVTOOLS_DEFAULT,\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.add-network-request-blocking-pattern',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.addNetworkRequestBlockingPattern),\n  iconClass: UI.ActionRegistration.IconClass.PLUS,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.BlockedURLsPane.BlockedURLsPane]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.BlockedURLsPane.ActionDelegate();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.remove-all-network-request-blocking-patterns',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.removeAllNetworkRequestBlockingPatterns),\n  iconClass: UI.ActionRegistration.IconClass.CLEAR,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.BlockedURLsPane.BlockedURLsPane]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.BlockedURLsPane.ActionDelegate();\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.allowToGenerateHarWithSensitiveData),\n  settingName: 'network.show-options-to-generate-har-with-sensitive-data',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18n.i18n.lockedLazyString('HAR'),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.allowToGenerateHarWithSensitiveData),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.dontAllowToGenerateHarWithSensitiveData),\n    },\n  ],\n  learnMore: {\n    url: 'https://goo.gle/devtools-export-hars' as Platform.DevToolsPath.UrlString,\n    tooltip: i18nLazyString(UIStrings.allowToGenerateHarWithSensitiveDataDocumentation),\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.colorcodeResourceTypes),\n  settingName: 'network-color-code-resource-types',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.colorCode),\n    i18nLazyString(UIStrings.resourceType),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.colorCodeByResourceType),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.useDefaultColors),\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.groupNetworkLogByFrame),\n  settingName: 'network.group-by-frame',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.netWork),\n    i18nLazyString(UIStrings.frame),\n    i18nLazyString(UIStrings.group),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.groupNetworkLogItemsByFrame),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.dontGroupNetworkLogItemsByFrame),\n    },\n  ],\n});\n\nUI.ViewManager.registerLocationResolver({\n  name: UI.ViewManager.ViewLocationValues.NETWORK_SIDEBAR,\n  category: UI.ViewManager.ViewLocationCategory.NETWORK,\n  async loadResolver() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n});\n\nUI.ContextMenu.registerProvider({\n  contextTypes() {\n    return [\n      SDK.NetworkRequest.NetworkRequest,\n      SDK.Resource.Resource,\n      Workspace.UISourceCode.UISourceCode,\n      SDK.TraceObject.RevealableNetworkRequest,\n    ];\n  },\n  async loadProvider() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n  experiment: undefined,\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.NetworkRequest.NetworkRequest,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.NETWORK_PANEL,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.RequestRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [NetworkForward.UIRequestLocation.UIRequestLocation];\n  },\n  destination: undefined,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.RequestLocationRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [NetworkForward.NetworkRequestId.NetworkRequestId];\n  },\n  destination: Common.Revealer.RevealerDestination.NETWORK_PANEL,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.RequestIdRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [NetworkForward.UIFilter.UIRequestFilter, Extensions.ExtensionServer.RevealableNetworkRequestFilter];\n  },\n  destination: Common.Revealer.RevealerDestination.NETWORK_PANEL,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.NetworkLogWithFilterRevealer();\n  },\n});\n"],
  "mappings": ";AAIA,YAAY,YAAY;AACxB,YAAY,UAAU;AAEtB,YAAY,UAAU;AACtB,YAAY,SAAS;AACrB,YAAY,gBAAgB;AAC5B,YAAY,eAAe;AAC3B,YAAY,QAAQ;AAEpB,YAAY,oBAAoB;AAGhC,IAAM,YAAY;;;;EAIhB,aAAa;;;;EAIb,SAAS;;;;EAIT,4BAA4B;;;;EAI5B,wBAAwB;;;;EAIxB,uBAAuB;;;;EAIvB,mBAAmB;;;;EAInB,WAAW;;;;EAIX,mBAAmB;;;;EAInB,YAAY;;;;EAIZ,QAAQ;;;;EAIR,kBAAkB;;;;EAIlB,yBAAyB;;;;EAIzB,oBAAoB;;;;EAIpB,wBAAwB;;;;EAIxB,WAAW;;;;EAIX,cAAc;;;;EAId,yBAAyB;;;;EAIzB,kBAAkB;;;;EAIlB,wBAAwB;;;;EAIxB,SAAS;;;;EAIT,OAAO;;;;EAIP,OAAO;;;;EAIP,6BAA6B;;;;EAI7B,iCAAiC;;;;EAIjC,OAAO;;;;EAIP,kCAAkC;;;;EAIlC,yCAAyC;;;;;EAKzC,qCAAqC;;;;;EAKrC,yCAAyC;;;;;EAKzC,kDACI;;AAEN,IAAM,OAAY,UAAK,kBAAkB,kCAAkC,SAAS;AACpF,IAAM,iBAAsB,UAAK,iCAAiC,KAAK,QAAW,IAAI;AACtF,IAAI;AAEJ,IAAM,SAAc,aAAQ,QAAQ,OAAM;AAE1C,eAAe,oBAAiB;AAC9B,MAAI,CAAC,qBAAqB;AACxB,0BAAsB,MAAM,OAAO,cAAc;EACnD;AACA,SAAO;AACT;AAEA,SAAS,0BAAuC,kBAA8D;AAC5G,MAAI,wBAAwB,QAAW;AACrC,WAAO,CAAA;EACT;AACA,SAAO,iBAAiB,mBAAmB;AAC7C;AAEG,eAAY,sBAAsB;EACnC,UAAQ;EACR,IAAI;EACJ,eAAe,eAAe,UAAU,WAAW;EACnD,OAAO,eAAe,UAAU,OAAO;EACvC,OAAO;EACP,kBAAkB;EAClB,MAAM,WAAQ;AACZ,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,QAAQ,aAAa,aAAa,SAAQ;EACnD;CACD;AAEE,eAAY,sBAAsB;EACnC,UAAQ;EACR,IAAI;EACJ,eAAe,eAAe,UAAU,0BAA0B;EAClE,OAAO,eAAe,UAAU,sBAAsB;EACtD,aAAW;EACX,OAAO;EACP,MAAM,WAAQ;AACZ,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,IAAI,QAAQ,gBAAgB,gBAAe;EACpD;CACD;AAEE,eAAY,sBAAsB;EACnC,UAAQ;EACR,IAAI;EACJ,eAAe,eAAe,UAAU,qBAAqB;EAC7D,OAAO,eAAe,UAAU,iBAAiB;EACjD,aAAW;EACX,OAAO;EACP,MAAM;IACJ,eAAe,UAAU,SAAS;IAClC,eAAe,UAAU,iBAAiB;IACrC,UAAK,iBAAiB,WAAW;IACjC,UAAK,iBAAiB,YAAY;IAClC,UAAK,iBAAiB,YAAY;;EAEzC,MAAM,WAAQ;AACZ,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,QAAQ,kBAAkB,kBAAkB,SAAQ;EAC7D;CACD;AAEE,eAAY,sBAAsB;EACnC,UAAQ;EACR,IAAI;EACJ,eAAe,eAAe,UAAU,UAAU;EAClD,OAAO,eAAe,UAAU,MAAM;EACtC,aAAW;EACX,MAAM,WAAQ;AACZ,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,QAAQ,aAAa,kBAAkB,SAAQ;EACxD;CACD;AAEE,sBAAmB,wBAAwB;EAC5C,UAAU;EACV,UAAQ;EACR,WAAS;EACT,YAAY;EACZ,kBAAgB;EAChB,oBAAoB;EACpB,eAAY;AACV,WAAO,0BAA0B,aAAW,CAAC,QAAQ,aAAa,YAAY,CAAC;EACjF;EACA,MAAM,qBAAkB;AACtB,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,IAAI,QAAQ,aAAa,eAAc;EAChD;EACA,SAAS;IACP;MACE,OAAO;MACP,OAAO,eAAe,UAAU,gBAAgB;;IAElD;MACE,OAAO;MACP,OAAO,eAAe,UAAU,uBAAuB;;;EAG3D,UAAU;IACR;MACE,UAAU;MACV,UAAQ;;IAEV;MACE,UAAU;MACV,UAAQ;;;CAGb;AAEE,sBAAmB,wBAAwB;EAC5C,UAAU;EACV,UAAQ;EACR,OAAO,eAAe,UAAU,KAAK;EACrC,WAAS;EACT,MAAM,qBAAkB;AACtB,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,IAAI,QAAQ,aAAa,eAAc;EAChD;EACA,eAAY;AACV,WAAO,0BAA0B,aAAW,CAAC,QAAQ,aAAa,YAAY,CAAC;EACjF;EACA,UAAU;IACR;MACE,UAAU;;IAEZ;MACE,UAAU;MACV,UAAQ;;;CAGb;AAEE,sBAAmB,wBAAwB;EAC5C,UAAU;EACV,UAAQ;EACR,OAAO,eAAe,UAAU,kBAAkB;EAClD,eAAY;AACV,WAAO,0BAA0B,aAAW,CAAC,QAAQ,aAAa,YAAY,CAAC;EACjF;EACA,MAAM,qBAAkB;AACtB,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,IAAI,QAAQ,aAAa,eAAc;EAChD;EACA,UAAU;IACR;MACE,UAAU;;;CAGf;AAEE,sBAAmB,wBAAwB;EAC5C,UAAU;EACV,UAAQ;EACR,OAAO,eAAe,UAAU,MAAM;EACtC,eAAY;AACV,WAAO,0BAA0B,aAAW,CAAC,QAAQ,aAAa,YAAY,CAAC;EACjF;EACA,MAAM,qBAAkB;AACtB,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,IAAI,QAAQ,aAAa,eAAc;EAChD;EACA,UAAU;IACR;MACE,UAAQ;MACR,UAAU;MACV,aAAa;;;;;IAKf;MACE,UAAQ;MACR,UAAU;MACV,aAAa;;;;;;CAMlB;AAEE,sBAAmB,wBAAwB;EAC5C,UAAU;EACV,UAAQ;EACR,OAAO,eAAe,UAAU,gCAAgC;EAChE,WAAS;EACT,eAAY;AACV,WAAO,0BAA0B,aAAW,CAAC,QAAQ,gBAAgB,eAAe,CAAC;EACvF;EACA,MAAM,qBAAkB;AACtB,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,IAAI,QAAQ,gBAAgB,eAAc;EACnD;CACD;AAEE,sBAAmB,wBAAwB;EAC5C,UAAU;EACV,UAAQ;EACR,OAAO,eAAe,UAAU,uCAAuC;EACvE,WAAS;EACT,eAAY;AACV,WAAO,0BAA0B,aAAW,CAAC,QAAQ,gBAAgB,eAAe,CAAC;EACvF;EACA,MAAM,qBAAkB;AACtB,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,IAAI,QAAQ,gBAAgB,eAAc;EACnD;CACD;AAEM,gBAAS,yBAAyB;EACvC,UAAQ;EACR,aAAW;EACX,OAAO,eAAe,UAAU,mCAAmC;EACnE,aAAa;EACb,aAAW;EACX,cAAc;EACd,MAAM;IACC,UAAK,iBAAiB,KAAK;;EAElC,SAAS;IACP;MACE,OAAO;MACP,OAAO,eAAe,UAAU,mCAAmC;;IAErE;MACE,OAAO;MACP,OAAO,eAAe,UAAU,uCAAuC;;;EAG3E,WAAW;IACT,KAAK;IACL,SAAS,eAAe,UAAU,gDAAgD;;CAErF;AAEM,gBAAS,yBAAyB;EACvC,UAAQ;EACR,aAAW;EACX,OAAO,eAAe,UAAU,sBAAsB;EACtD,aAAa;EACb,aAAW;EACX,cAAc;EACd,MAAM;IACJ,eAAe,UAAU,SAAS;IAClC,eAAe,UAAU,YAAY;;EAEvC,SAAS;IACP;MACE,OAAO;MACP,OAAO,eAAe,UAAU,uBAAuB;;IAEzD;MACE,OAAO;MACP,OAAO,eAAe,UAAU,gBAAgB;;;CAGrD;AAEM,gBAAS,yBAAyB;EACvC,UAAQ;EACR,aAAW;EACX,OAAO,eAAe,UAAU,sBAAsB;EACtD,aAAa;EACb,aAAW;EACX,cAAc;EACd,MAAM;IACJ,eAAe,UAAU,OAAO;IAChC,eAAe,UAAU,KAAK;IAC9B,eAAe,UAAU,KAAK;;EAEhC,SAAS;IACP;MACE,OAAO;MACP,OAAO,eAAe,UAAU,2BAA2B;;IAE7D;MACE,OAAO;MACP,OAAO,eAAe,UAAU,+BAA+B;;;CAGpE;AAEE,eAAY,yBAAyB;EACtC,MAAI;EACJ,UAAQ;EACR,MAAM,eAAY;AAChB,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,QAAQ,aAAa,aAAa,SAAQ;EACnD;CACD;AAEE,eAAY,iBAAiB;EAC9B,eAAY;AACV,WAAO;MACD,mBAAe;MACf,aAAS;MACH,uBAAa;MACnB,gBAAY;;EAEpB;EACA,MAAM,eAAY;AAChB,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,QAAQ,aAAa,aAAa,SAAQ;EACnD;EACA,YAAY;CACb;AAEM,gBAAS,iBAAiB;EAC/B,eAAY;AACV,WAAO;MACD,mBAAe;;EAEvB;EACA,aAAoB,gBAAS,oBAAoB;EACjD,MAAM,eAAY;AAChB,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,IAAI,QAAQ,aAAa,gBAAe;EACjD;CACD;AAEM,gBAAS,iBAAiB;EAC/B,eAAY;AACV,WAAO,CAAgB,iCAAkB,iBAAiB;EAC5D;EACA,aAAa;EACb,MAAM,eAAY;AAChB,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,IAAI,QAAQ,aAAa,wBAAuB;EACzD;CACD;AAEM,gBAAS,iBAAiB;EAC/B,eAAY;AACV,WAAO,CAAgB,gCAAiB,gBAAgB;EAC1D;EACA,aAAoB,gBAAS,oBAAoB;EACjD,MAAM,eAAY;AAChB,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,IAAI,QAAQ,aAAa,kBAAiB;EACnD;CACD;AAEM,gBAAS,iBAAiB;EAC/B,eAAY;AACV,WAAO,CAAgB,wBAAS,iBAA4B,2BAAgB,8BAA8B;EAC5G;EACA,aAAoB,gBAAS,oBAAoB;EACjD,MAAM,eAAY;AAChB,UAAM,UAAU,MAAM,kBAAiB;AACvC,WAAO,IAAI,QAAQ,aAAa,6BAA4B;EAC9D;CACD;",
  "names": []
}
