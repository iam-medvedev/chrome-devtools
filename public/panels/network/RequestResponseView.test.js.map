{"version":3,"file":"RequestResponseView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/RequestResponseView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport {raf} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Network from './network.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\ndescribeWithEnvironment('RequestResponseView', () => {\n  it('does show WASM disassembly for WASM module requests', async () => {\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId, urlString`http://devtools-frontend.test/module.wasm`, urlString``,\n        null, null, null);\n    request.setContentDataProvider(\n        () => Promise.resolve(new TextUtils.ContentData.ContentData(\n            'AGFzbQEAAAABBQFgAAF/AwIBAAcHAQNiYXIAAAoGAQQAQQILACQEbmFtZQAQD3Nob3ctd2FzbS0yLndhdAEGAQADYmFyAgMBAAA=',\n            true, 'application/wasm')));\n    request.mimeType = 'application/wasm';\n    request.finished = true;\n\n    const mockedSourceView = new UI.EmptyWidget.EmptyWidget('<disassembled WASM>', '');\n    const viewStub = sinon.stub(SourceFrame.ResourceSourceFrame.ResourceSourceFrame, 'createSearchableView')\n                         .returns(mockedSourceView);\n\n    const component = new Network.RequestResponseView.RequestResponseView(request);\n    const showPreviewSpy = sinon.spy(component, 'showPreview');\n    component.markAsRoot();\n    component.show(document.body);\n    const widget = await showPreviewSpy.returnValues[0];\n\n    assert.isTrue(viewStub.calledOnceWithExactly(request, 'application/wasm'));\n    assert.strictEqual(widget, mockedSourceView);\n\n    component.detach();\n  });\n\n  it('shows the BinaryResourceView for binary content', async () => {\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId, urlString`http://devtools-frontend.test/image.png`, urlString``,\n        null, null, null);\n    request.setContentDataProvider(\n        () => Promise.resolve(new TextUtils.ContentData.ContentData(\n            'AGFzbQEAAAABBQFgAAF/AwIBAAcHAQNiYXIAAAoGAQQAQQILACQEbmFtZQAQD3Nob3ctd2FzbS0yLndhdAEGAQADYmFyAgMBAAA=',\n            true, 'application/octet-stream')));\n    request.mimeType = 'application/octet-stream';\n    request.finished = true;\n\n    const component = new Network.RequestResponseView.RequestResponseView(request);\n    const showPreviewSpy = sinon.spy(component, 'showPreview');\n    component.markAsRoot();\n    component.show(document.body);\n    const widget = await showPreviewSpy.returnValues[0];\n\n    assert.instanceOf(widget, Network.BinaryResourceView.BinaryResourceView);\n\n    await raf();\n    component.detach();\n  });\n});\n"]}