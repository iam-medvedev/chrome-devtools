{"version":3,"file":"RequestResponseView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/RequestResponseView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport {raf, renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Network from './network.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\ndescribeWithEnvironment('RequestResponseView', () => {\n  it('does show WASM disassembly for WASM module requests', async () => {\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId, urlString`http://devtools-frontend.test/module.wasm`, urlString``,\n        null, null, null);\n    request.setContentDataProvider(\n        () => Promise.resolve(new TextUtils.ContentData.ContentData(\n            'AGFzbQEAAAABBQFgAAF/AwIBAAcHAQNiYXIAAAoGAQQAQQILACQEbmFtZQAQD3Nob3ctd2FzbS0yLndhdAEGAQADYmFyAgMBAAA=',\n            true, 'application/wasm')));\n    request.mimeType = 'application/wasm';\n    request.finished = true;\n\n    // This is required, as it otherwise tries to create and wait for a worker to fetch and disassemble wasm\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sinon.stub(SourceFrame.ResourceSourceFrame.ResourceSourceFrame.prototype as any, 'setContentDataOrError')\n        .callsFake(() => {});\n    const component = new Network.RequestResponseView.RequestResponseView(request);\n    assert.deepEqual(component.getMimeTypeForDisplay(), 'application/wasm');\n    renderElementIntoDOM(component);\n    await component.updateComplete;\n\n    const widget = component.contentElement.querySelector('devtools-widget') as\n            UI.Widget.WidgetElement<SourceFrame.ResourceSourceFrame.SearchableContainer>|\n        null;\n    assert.instanceOf(widget?.getWidget(), SourceFrame.ResourceSourceFrame.SearchableContainer);\n    component.detach();\n  });\n\n  it('shows the BinaryResourceView for binary content', async () => {\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId, urlString`http://devtools-frontend.test/image.png`, urlString``,\n        null, null, null);\n    request.setContentDataProvider(\n        () => Promise.resolve(new TextUtils.ContentData.ContentData(\n            'AGFzbQEAAAABBQFgAAF/AwIBAAcHAQNiYXIAAAoGAQQAQQILACQEbmFtZQAQD3Nob3ctd2FzbS0yLndhdAEGAQADYmFyAgMBAAA=',\n            true, 'application/octet-stream')));\n    request.mimeType = 'application/octet-stream';\n    request.finished = true;\n\n    const component = new Network.RequestResponseView.RequestResponseView(request);\n    assert.deepEqual(component.getMimeTypeForDisplay(), 'application/octet-stream');\n    renderElementIntoDOM(component);\n\n    await component.updateComplete;\n\n    const widget = component.contentElement.querySelector('devtools-widget') as\n            UI.Widget.WidgetElement<Network.BinaryResourceView.BinaryResourceView>|\n        null;\n    assert.instanceOf(widget?.getWidget(), Network.BinaryResourceView.BinaryResourceView);\n\n    await raf();\n    component.detach();\n  });\n\n  it('renders a view even if mime type is undefined', async () => {\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId, urlString`http://devtools-frontend.test/image.png`, urlString``,\n        null, null, null);\n    request.finished = true;\n\n    const component = new Network.RequestResponseView.RequestResponseView(request);\n    assert.isUndefined(component.getMimeTypeForDisplay());\n\n    renderElementIntoDOM(component);\n    await component.updateComplete;\n\n    const widget = component.contentElement.querySelector('devtools-widget') as\n            UI.Widget.WidgetElement<UI.EmptyWidget.EmptyWidget>|\n        null;\n    assert.instanceOf(widget?.getWidget(), UI.EmptyWidget.EmptyWidget);\n    assert.deepEqual(\n        widget.getWidget()?.contentElement.textContent, 'Failed to load response dataNo network manager for request');\n\n    component.detach();\n  });\n\n  it('forwards calls to reveal position to the SearchableContainer', async () => {\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId, urlString`http://devtools-frontend.test/module.wasm`, urlString``,\n        null, null, null);\n    request.setContentDataProvider(\n        () => Promise.resolve(new TextUtils.ContentData.ContentData(\n            'AGFzbQEAAAABBQFgAAF/AwIBAAcHAQNiYXIAAAoGAQQAQQILACQEbmFtZQAQD3Nob3ctd2FzbS0yLndhdAEGAQADYmFyAgMBAAA=',\n            true, 'application/wasm')));\n    request.mimeType = 'application/wasm';\n    request.finished = true;\n\n    // This is required, as it otherwise tries to create and wait for a worker to fetch and disassemble wasm\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sinon.stub(SourceFrame.ResourceSourceFrame.ResourceSourceFrame.prototype as any, 'setContentDataOrError')\n        .callsFake(() => {});\n    const component = new Network.RequestResponseView.RequestResponseView(request);\n    assert.deepEqual(component.getMimeTypeForDisplay(), 'application/wasm');\n    renderElementIntoDOM(component);\n\n    await component.updateComplete;\n\n    const widget = component.contentElement.querySelector('devtools-widget') as\n            UI.Widget.WidgetElement<SourceFrame.ResourceSourceFrame.SearchableContainer>|\n        null;\n    const searchableContainer = widget?.getWidget();\n    assert.instanceOf(searchableContainer, SourceFrame.ResourceSourceFrame.SearchableContainer);\n    const searchableSpy = sinon.spy(searchableContainer, 'revealPosition');\n    try {\n      await component.revealPosition(0);\n      sinon.assert.calledOnce(searchableSpy);\n    } catch {\n      assert.fail('Revealing a position should not throw.');\n    }\n\n    component.detach();\n  });\n});\n"]}