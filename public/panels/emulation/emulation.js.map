{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/emulation/AdvancedApp.ts", "../../../../../../front_end/panels/emulation/DeviceModeWrapper.ts", "../../../../../../front_end/panels/emulation/DeviceModeView.ts", "../../../../../../front_end/panels/emulation/DeviceModeToolbar.ts", "deviceModeView.css.js", "../../../../../../front_end/panels/emulation/MediaQueryInspector.ts", "mediaQueryInspector.css.js", "../../../../../../front_end/panels/emulation/InspectedPagePlaceholder.ts", "inspectedPagePlaceholder.css.js"],
  "sourcesContent": ["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport {DeviceModeWrapper} from './DeviceModeWrapper.js';\nimport {type Bounds, Events, InspectedPagePlaceholder} from './InspectedPagePlaceholder.js';\n\nlet appInstance: AdvancedApp;\n\nexport class AdvancedApp implements Common.App.App {\n  private rootSplitWidget!: UI.SplitWidget.SplitWidget;\n  private deviceModeView!: DeviceModeWrapper;\n  private inspectedPagePlaceholder!: InspectedPagePlaceholder;\n  private toolboxWindow?: Window|null;\n  private toolboxRootView?: UI.RootView.RootView;\n  private changingDockSide?: boolean;\n\n  constructor() {\n    UI.DockController.DockController.instance().addEventListener(\n        UI.DockController.Events.BEFORE_DOCK_SIDE_CHANGED, this.openToolboxWindow, this);\n  }\n\n  /**\n   * Note: it's used by toolbox.ts without real type checks.\n   */\n  static instance(): AdvancedApp {\n    if (!appInstance) {\n      appInstance = new AdvancedApp();\n    }\n    return appInstance;\n  }\n\n  presentUI(document: Document): void {\n    const rootView = new UI.RootView.RootView();\n\n    this.rootSplitWidget =\n        new UI.SplitWidget.SplitWidget(false, true, 'inspector-view.split-view-state', 555, 300, true);\n    this.rootSplitWidget.show(rootView.element);\n    this.rootSplitWidget.setSidebarWidget(UI.InspectorView.InspectorView.instance());\n    this.rootSplitWidget.setDefaultFocusedChild(UI.InspectorView.InspectorView.instance());\n    UI.InspectorView.InspectorView.instance().setOwnerSplit(this.rootSplitWidget);\n\n    this.inspectedPagePlaceholder = InspectedPagePlaceholder.instance();\n    this.inspectedPagePlaceholder.addEventListener(Events.UPDATE, this.onSetInspectedPageBounds.bind(this), this);\n    this.deviceModeView =\n        DeviceModeWrapper.instance({inspectedPagePlaceholder: this.inspectedPagePlaceholder, forceNew: false});\n\n    UI.DockController.DockController.instance().addEventListener(\n        UI.DockController.Events.BEFORE_DOCK_SIDE_CHANGED, this.onBeforeDockSideChange, this);\n    UI.DockController.DockController.instance().addEventListener(\n        UI.DockController.Events.DOCK_SIDE_CHANGED, this.onDockSideChange, this);\n    UI.DockController.DockController.instance().addEventListener(\n        UI.DockController.Events.AFTER_DOCK_SIDE_CHANGED, this.onAfterDockSideChange, this);\n    this.onDockSideChange();\n\n    console.timeStamp('AdvancedApp.attachToBody');\n    rootView.attachToDocument(document);\n    rootView.focus();\n    this.inspectedPagePlaceholder.update();\n  }\n\n  private openToolboxWindow(event: Common.EventTarget.EventTargetEvent<UI.DockController.ChangeEvent>): void {\n    if (event.data.to !== UI.DockController.DockState.UNDOCKED) {\n      return;\n    }\n\n    if (this.toolboxWindow) {\n      return;\n    }\n\n    const url = window.location.href.replace('devtools_app.html', 'device_mode_emulation_frame.html');\n    this.toolboxWindow = window.open(url, undefined);\n  }\n\n  deviceModeEmulationFrameLoaded(toolboxDocument: Document): void {\n    ThemeSupport.ThemeSupport.instance().addDocumentToTheme(toolboxDocument);\n    UI.UIUtils.initializeUIUtils(toolboxDocument);\n    UI.UIUtils.addPlatformClass(toolboxDocument.documentElement);\n    UI.UIUtils.installComponentRootStyles(toolboxDocument.body);\n    UI.ContextMenu.ContextMenu.installHandler(toolboxDocument);\n\n    this.toolboxRootView = new UI.RootView.RootView();\n    this.toolboxRootView.attachToDocument(toolboxDocument);\n\n    this.updateDeviceModeView();\n  }\n\n  private updateDeviceModeView(): void {\n    if (this.isDocked()) {\n      this.rootSplitWidget.setMainWidget(this.deviceModeView);\n    } else if (this.toolboxRootView) {\n      this.deviceModeView.show(this.toolboxRootView.element);\n    }\n  }\n\n  private onBeforeDockSideChange(event: Common.EventTarget.EventTargetEvent<UI.DockController.ChangeEvent>): void {\n    if (event.data.to === UI.DockController.DockState.UNDOCKED && this.toolboxRootView) {\n      // Hide inspectorView and force layout to mimic the undocked state.\n      this.rootSplitWidget.hideSidebar();\n      this.inspectedPagePlaceholder.update();\n    }\n\n    this.changingDockSide = true;\n  }\n\n  private onDockSideChange(event?: Common.EventTarget.EventTargetEvent<UI.DockController.ChangeEvent>): void {\n    this.updateDeviceModeView();\n\n    const toDockSide = event ? event.data.to : UI.DockController.DockController.instance().dockSide();\n    if (toDockSide === undefined) {\n      throw new Error('Got onDockSideChange event with unexpected undefined for dockSide()');\n    }\n    if (toDockSide === UI.DockController.DockState.UNDOCKED) {\n      this.updateForUndocked();\n    } else if (this.toolboxRootView && event && event.data.from === UI.DockController.DockState.UNDOCKED) {\n      // Don't update yet for smooth transition.\n      this.rootSplitWidget.hideSidebar();\n    } else {\n      this.updateForDocked(toDockSide);\n    }\n  }\n\n  private onAfterDockSideChange(event: Common.EventTarget.EventTargetEvent<UI.DockController.ChangeEvent>): void {\n    // We may get here on the first dock side change while loading without BeforeDockSideChange.\n    if (!this.changingDockSide) {\n      return;\n    }\n    if (event.data.from && event.data.from === UI.DockController.DockState.UNDOCKED) {\n      this.updateForDocked(event.data.to);\n    }\n    this.changingDockSide = false;\n    this.inspectedPagePlaceholder.update();\n  }\n\n  private updateForDocked(dockSide: UI.DockController.DockState): void {\n    const resizerElement = (this.rootSplitWidget.resizerElement() as HTMLElement);\n    resizerElement.style.transform = dockSide === UI.DockController.DockState.RIGHT ? 'translateX(2px)' :\n        dockSide === UI.DockController.DockState.LEFT                               ? 'translateX(-2px)' :\n                                                                                      '';\n    this.rootSplitWidget.setVertical(\n        dockSide === UI.DockController.DockState.RIGHT || dockSide === UI.DockController.DockState.LEFT);\n    this.rootSplitWidget.setSecondIsSidebar(\n        dockSide === UI.DockController.DockState.RIGHT || dockSide === UI.DockController.DockState.BOTTOM);\n    this.rootSplitWidget.toggleResizer(this.rootSplitWidget.resizerElement(), true);\n    this.rootSplitWidget.toggleResizer(\n        UI.InspectorView.InspectorView.instance().topResizerElement(), dockSide === UI.DockController.DockState.BOTTOM);\n    this.rootSplitWidget.showBoth();\n  }\n\n  private updateForUndocked(): void {\n    this.rootSplitWidget.toggleResizer(this.rootSplitWidget.resizerElement(), false);\n    this.rootSplitWidget.toggleResizer(UI.InspectorView.InspectorView.instance().topResizerElement(), false);\n    this.rootSplitWidget.hideMain();\n  }\n\n  private isDocked(): boolean {\n    return UI.DockController.DockController.instance().dockSide() !== UI.DockController.DockState.UNDOCKED;\n  }\n\n  private onSetInspectedPageBounds(event: Common.EventTarget.EventTargetEvent<Bounds>): void {\n    if (this.changingDockSide) {\n      return;\n    }\n    const window = this.inspectedPagePlaceholder.element.window();\n    if (!window.innerWidth || !window.innerHeight) {\n      return;\n    }\n    if (!this.inspectedPagePlaceholder.isShowing()) {\n      return;\n    }\n    const bounds = event.data;\n    console.timeStamp('AdvancedApp.setInspectedPageBounds');\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setInspectedPageBounds(bounds);\n  }\n}\n\n// Export required for usage in toolbox.ts\n// @ts-expect-error Exported for Tests.js\nglobalThis.Emulation = globalThis.Emulation || {};\n// @ts-expect-error Exported for Tests.js\nglobalThis.Emulation.AdvancedApp = AdvancedApp;\n\nlet advancedAppProviderInstance: AdvancedAppProvider;\n\nexport class AdvancedAppProvider implements Common.AppProvider.AppProvider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): AdvancedAppProvider {\n    const {forceNew} = opts;\n    if (!advancedAppProviderInstance || forceNew) {\n      advancedAppProviderInstance = new AdvancedAppProvider();\n    }\n\n    return advancedAppProviderInstance;\n  }\n\n  createApp(): Common.App.App {\n    return AdvancedApp.instance();\n  }\n}\n", "// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as EmulationModel from '../../models/emulation/emulation.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {DeviceModeView} from './DeviceModeView.js';\nimport type {InspectedPagePlaceholder} from './InspectedPagePlaceholder.js';\n\nlet deviceModeWrapperInstance: DeviceModeWrapper;\n\nexport class DeviceModeWrapper extends UI.Widget.VBox {\n  private readonly inspectedPagePlaceholder: InspectedPagePlaceholder;\n  private deviceModeView: DeviceModeView|null;\n  private readonly toggleDeviceModeAction: UI.ActionRegistration.Action;\n  private showDeviceModeSetting: Common.Settings.Setting<boolean>;\n\n  private constructor(inspectedPagePlaceholder: InspectedPagePlaceholder) {\n    super();\n    this.inspectedPagePlaceholder = inspectedPagePlaceholder;\n    this.deviceModeView = null;\n    this.toggleDeviceModeAction = UI.ActionRegistry.ActionRegistry.instance().getAction('emulation.toggle-device-mode');\n    const model = EmulationModel.DeviceModeModel.DeviceModeModel.instance();\n    this.showDeviceModeSetting = model.enabledSetting();\n    this.showDeviceModeSetting.setRequiresUserAction(Boolean(Root.Runtime.Runtime.queryParam('hasOtherClients')));\n    this.showDeviceModeSetting.addChangeListener(this.update.bind(this, false));\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.OverlayModel.OverlayModel, SDK.OverlayModel.Events.SCREENSHOT_REQUESTED,\n        this.screenshotRequestedFromOverlay, this);\n    this.update(true);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    inspectedPagePlaceholder: InspectedPagePlaceholder|null,\n  } = {forceNew: null, inspectedPagePlaceholder: null}): DeviceModeWrapper {\n    const {forceNew, inspectedPagePlaceholder} = opts;\n    if (!deviceModeWrapperInstance || forceNew) {\n      if (!inspectedPagePlaceholder) {\n        throw new Error(\n            `Unable to create DeviceModeWrapper: inspectedPagePlaceholder must be provided: ${new Error().stack}`);\n      }\n\n      deviceModeWrapperInstance = new DeviceModeWrapper(inspectedPagePlaceholder);\n    }\n\n    return deviceModeWrapperInstance;\n  }\n\n  toggleDeviceMode(): void {\n    this.showDeviceModeSetting.set(!this.showDeviceModeSetting.get());\n  }\n\n  isDeviceModeOn(): boolean {\n    return this.showDeviceModeSetting.get();\n  }\n\n  captureScreenshot(fullSize?: boolean, clip?: Protocol.Page.Viewport): boolean {\n    if (!this.deviceModeView) {\n      this.deviceModeView = new DeviceModeView();\n    }\n    this.deviceModeView.setNonEmulatedAvailableSize(this.inspectedPagePlaceholder.element);\n    if (fullSize) {\n      void this.deviceModeView.captureFullSizeScreenshot();\n    } else if (clip) {\n      void this.deviceModeView.captureAreaScreenshot(clip);\n    } else {\n      void this.deviceModeView.captureScreenshot();\n    }\n    return true;\n  }\n\n  private screenshotRequestedFromOverlay(event: Common.EventTarget.EventTargetEvent<Protocol.Page.Viewport>): void {\n    const clip = event.data;\n    this.captureScreenshot(false, clip);\n  }\n\n  update(force?: boolean): void {\n    this.toggleDeviceModeAction.setToggled(this.showDeviceModeSetting.get());\n\n    const shouldShow = this.showDeviceModeSetting.get();\n    if (!force && shouldShow === this.deviceModeView?.isShowing()) {\n      return;\n    }\n\n    if (shouldShow) {\n      if (!this.deviceModeView) {\n        this.deviceModeView = new DeviceModeView();\n      }\n      this.deviceModeView.show(this.element);\n      this.inspectedPagePlaceholder.clearMinimumSize();\n      this.inspectedPagePlaceholder.show(this.deviceModeView.element);\n    } else {\n      if (this.deviceModeView) {\n        this.deviceModeView.exitHingeMode();\n        this.deviceModeView.detach();\n      }\n      this.inspectedPagePlaceholder.restoreMinimumSize();\n      this.inspectedPagePlaceholder.show(this.element);\n    }\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'emulation.capture-screenshot':\n        return DeviceModeWrapper.instance().captureScreenshot();\n\n      case 'emulation.capture-node-screenshot': {\n        const node = context.flavor(SDK.DOMModel.DOMNode);\n        if (!node) {\n          return true;\n        }\n        async function captureClip(): Promise<void> {\n          if (!node) {\n            return;\n          }\n\n          const object = await node.resolveToObject();\n          if (!object) {\n            return;\n          }\n          const result = await object.callFunction(function(this: Element) {\n            const rect = this.getBoundingClientRect();\n            const docRect = this.ownerDocument.documentElement.getBoundingClientRect();\n            return JSON.stringify({\n              x: rect.left - docRect.left,\n              y: rect.top - docRect.top,\n              width: rect.width,\n              height: rect.height,\n              scale: 1,\n            });\n          });\n          if (!result.object) {\n            throw new Error('Clipping error: could not get object data.');\n          }\n          const clip = (JSON.parse((result.object.value as string)));\n          const response = await node.domModel().target().pageAgent().invoke_getLayoutMetrics();\n          const error = response.getError();\n          const zoom = !error && response.visualViewport.zoom || 1;\n          clip.x *= zoom;\n          clip.y *= zoom;\n          clip.width *= zoom;\n          clip.height *= zoom;\n          DeviceModeWrapper.instance().captureScreenshot(false, clip);\n        }\n        void captureClip();\n        return true;\n      }\n\n      case 'emulation.capture-full-height-screenshot':\n        return DeviceModeWrapper.instance().captureScreenshot(true);\n\n      case 'emulation.toggle-device-mode':\n        DeviceModeWrapper.instance().toggleDeviceMode();\n        return true;\n    }\n    return false;\n  }\n}\n", "// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as EmulationModel from '../../models/emulation/emulation.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {DeviceModeToolbar} from './DeviceModeToolbar.js';\nimport deviceModeViewStyles from './deviceModeView.css.js';\nimport {MediaQueryInspector} from './MediaQueryInspector.js';\n\nconst UIStrings = {\n  /**\n   * @description Bottom resizer element title in Device Mode View of the Device Toolbar\n   */\n  doubleclickForFullHeight: 'Double-click for full height',\n  /**\n   * @description Name of a device that the user can select to emulate. Small mobile device.\n   * Translation of this phrase should be limited to 10 characters.\n   */\n  mobileS: 'Mobile S',\n  /**\n   * @description Name of a device that the user can select to emulate. Medium mobile device.\n   * Translation of this phrase should be limited to 10 characters.\n   */\n  mobileM: 'Mobile M',\n  /**\n   * @description Name of a device that the user can select to emulate. Large mobile device.\n   * Translation of this phrase should be limited to 10 characters.\n   */\n  mobileL: 'Mobile L',\n  /**\n   * @description Name of a device that the user can select to emulate. Tablet device.\n   * Translation of this phrase should be limited to 10 characters.\n   */\n  tablet: 'Tablet',\n  /**\n   * @description Name of a device that the user can select to emulate. Laptop device.\n   * Translation of this phrase should be limited to 10 characters.\n   */\n  laptop: 'Laptop',\n  /**\n   * @description Name of a device that the user can select to emulate. Large laptop device.\n   * Translation of this phrase should be limited to 10 characters.\n   */\n  laptopL: 'Laptop L',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/emulation/DeviceModeView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class DeviceModeView extends UI.Widget.VBox {\n  wrapperInstance!: UI.Widget.VBox|null;\n  blockElementToWidth: WeakMap<HTMLElement, number>;\n  private model: EmulationModel.DeviceModeModel.DeviceModeModel;\n  private readonly mediaInspector: MediaQueryInspector;\n  private showMediaInspectorSetting: Common.Settings.Setting<boolean>;\n  private showRulersSetting: Common.Settings.Setting<boolean>;\n  private readonly topRuler: Ruler;\n  private readonly leftRuler: Ruler;\n  private presetBlocks!: HTMLElement[];\n  private responsivePresetsContainer!: HTMLElement;\n  private screenArea!: HTMLElement;\n  private pageArea!: HTMLElement;\n  private outlineImage!: HTMLElement;\n  private contentClip!: HTMLElement;\n  private contentArea!: HTMLElement;\n  private rightResizerElement!: HTMLElement;\n  private leftResizerElement!: HTMLElement;\n  private bottomResizerElement!: HTMLElement;\n  private bottomRightResizerElement!: HTMLElement;\n  private bottomLeftResizerElement!: HTMLElement;\n  private cachedResizable!: boolean|undefined;\n  private mediaInspectorContainer!: HTMLElement;\n  private screenImage!: HTMLElement;\n  private toolbar!: DeviceModeToolbar;\n  private slowPositionStart?: {\n    x: number,\n    y: number,\n  }|null;\n  private resizeStart?: UI.Geometry.Size;\n  private cachedCssScreenRect?: EmulationModel.DeviceModeModel.Rect;\n  private cachedCssVisiblePageRect?: EmulationModel.DeviceModeModel.Rect;\n  private cachedOutlineRect?: EmulationModel.DeviceModeModel.Rect;\n  private cachedMediaInspectorVisible?: boolean;\n  private cachedShowRulers?: boolean;\n  private cachedScale?: number;\n  private handleWidth?: number;\n  private handleHeight?: number;\n\n  constructor() {\n    super({useShadowDom: true});\n\n    this.blockElementToWidth = new WeakMap();\n\n    this.setMinimumSize(150, 150);\n    this.element.classList.add('device-mode-view');\n    this.registerRequiredCSS(deviceModeViewStyles);\n\n    this.model = EmulationModel.DeviceModeModel.DeviceModeModel.instance();\n    this.model.addEventListener(EmulationModel.DeviceModeModel.Events.UPDATED, this.updateUI, this);\n    this.mediaInspector = new MediaQueryInspector(\n        () => this.model.appliedDeviceSize().width, this.model.setWidth.bind(this.model),\n        new Common.Throttler.Throttler(0));\n    this.showMediaInspectorSetting = Common.Settings.Settings.instance().moduleSetting('show-media-query-inspector');\n    this.showMediaInspectorSetting.addChangeListener(this.updateUI, this);\n    this.showRulersSetting = Common.Settings.Settings.instance().moduleSetting('emulation.show-rulers');\n    this.showRulersSetting.addChangeListener(this.updateUI, this);\n\n    this.topRuler = new Ruler(true, this.model.setWidthAndScaleToFit.bind(this.model));\n    this.topRuler.element.classList.add('device-mode-ruler-top');\n    this.leftRuler = new Ruler(false, this.model.setHeightAndScaleToFit.bind(this.model));\n    this.leftRuler.element.classList.add('device-mode-ruler-left');\n    this.createUI();\n    UI.ZoomManager.ZoomManager.instance().addEventListener(UI.ZoomManager.Events.ZOOM_CHANGED, this.zoomChanged, this);\n  }\n\n  private createUI(): void {\n    this.toolbar = new DeviceModeToolbar(this.model, this.showMediaInspectorSetting, this.showRulersSetting);\n    this.contentElement.appendChild(this.toolbar.element());\n    this.contentClip = this.contentElement.createChild('div', 'device-mode-content-clip vbox');\n    this.responsivePresetsContainer = this.contentClip.createChild('div', 'device-mode-presets-container');\n    this.responsivePresetsContainer.setAttribute('jslog', `${VisualLogging.responsivePresets()}`);\n    this.populatePresetsContainer();\n    this.mediaInspectorContainer = this.contentClip.createChild('div', 'device-mode-media-container');\n    this.contentArea = this.contentClip.createChild('div', 'device-mode-content-area');\n    this.outlineImage = this.contentArea.createChild('img', 'device-mode-outline-image hidden fill');\n    this.outlineImage.addEventListener('load', this.onImageLoaded.bind(this, this.outlineImage, true), false);\n    this.outlineImage.addEventListener('error', this.onImageLoaded.bind(this, this.outlineImage, false), false);\n    this.screenArea = this.contentArea.createChild('div', 'device-mode-screen-area');\n    this.screenImage = this.screenArea.createChild('img', 'device-mode-screen-image hidden');\n    this.screenImage.addEventListener('load', this.onImageLoaded.bind(this, this.screenImage, true), false);\n    this.screenImage.addEventListener('error', this.onImageLoaded.bind(this, this.screenImage, false), false);\n    this.bottomRightResizerElement =\n        this.screenArea.createChild('div', 'device-mode-resizer device-mode-bottom-right-resizer');\n    this.bottomRightResizerElement.createChild('div', '');\n    this.createResizer(this.bottomRightResizerElement, 2, 1);\n    this.bottomLeftResizerElement =\n        this.screenArea.createChild('div', 'device-mode-resizer device-mode-bottom-left-resizer');\n    this.bottomLeftResizerElement.createChild('div', '');\n    this.createResizer(this.bottomLeftResizerElement, -2, 1);\n    this.rightResizerElement = this.screenArea.createChild('div', 'device-mode-resizer device-mode-right-resizer');\n    this.rightResizerElement.createChild('div', '');\n    this.createResizer(this.rightResizerElement, 2, 0);\n    this.leftResizerElement = this.screenArea.createChild('div', 'device-mode-resizer device-mode-left-resizer');\n    this.leftResizerElement.createChild('div', '');\n    this.createResizer(this.leftResizerElement, -2, 0);\n    this.bottomResizerElement = this.screenArea.createChild('div', 'device-mode-resizer device-mode-bottom-resizer');\n    this.bottomResizerElement.createChild('div', '');\n    this.createResizer(this.bottomResizerElement, 0, 1);\n    this.bottomResizerElement.addEventListener('dblclick', this.model.setHeight.bind(this.model, 0), false);\n    UI.Tooltip.Tooltip.install(this.bottomResizerElement, i18nString(UIStrings.doubleclickForFullHeight));\n    this.pageArea = this.screenArea.createChild('div', 'device-mode-page-area');\n    this.pageArea.createChild('slot');\n  }\n\n  private populatePresetsContainer(): void {\n    const sizes = [320, 375, 425, 768, 1024, 1440, 2560];\n    const titles = [\n      i18nString(UIStrings.mobileS),\n      i18nString(UIStrings.mobileM),\n      i18nString(UIStrings.mobileL),\n      i18nString(UIStrings.tablet),\n      i18nString(UIStrings.laptop),\n      i18nString(UIStrings.laptopL),\n      '4K',\n    ];\n    this.presetBlocks = [];\n    const inner = this.responsivePresetsContainer.createChild('div', 'device-mode-presets-container-inner');\n    for (let i = sizes.length - 1; i >= 0; --i) {\n      const outer = inner.createChild('div', 'fill device-mode-preset-bar-outer');\n      const block = outer.createChild('div', 'device-mode-preset-bar');\n      block.createChild('span').textContent = titles[i] + ' \\u2013 ' + sizes[i] + 'px';\n      block.setAttribute(\n          'jslog', `${VisualLogging.action().track({click: true}).context(`device-mode-preset-${sizes[i]}px`)}`);\n      block.addEventListener('click', applySize.bind(this, sizes[i]), false);\n      this.blockElementToWidth.set(block, sizes[i]);\n      this.presetBlocks.push(block);\n    }\n\n    function applySize(this: DeviceModeView, width: number, e: Event): void {\n      this.model.emulate(EmulationModel.DeviceModeModel.Type.Responsive, null, null);\n      this.model.setWidthAndScaleToFit(width);\n      e.consume();\n    }\n  }\n\n  private createResizer(element: HTMLElement, widthFactor: number, heightFactor: number):\n      UI.ResizerWidget.ResizerWidget {\n    const resizer = new UI.ResizerWidget.ResizerWidget();\n    element.setAttribute('jslog', `${VisualLogging.slider('device-mode-resizer').track({drag: true})}`);\n    resizer.addElement(element);\n    let cursor: 'nwse-resize'|'nesw-resize'|('ew-resize' | 'ns-resize') = widthFactor ? 'ew-resize' : 'ns-resize';\n    if (widthFactor * heightFactor > 0) {\n      cursor = 'nwse-resize';\n    }\n    if (widthFactor * heightFactor < 0) {\n      cursor = 'nesw-resize';\n    }\n    resizer.setCursor(cursor);\n    resizer.addEventListener(UI.ResizerWidget.Events.RESIZE_START, this.onResizeStart, this);\n    resizer.addEventListener(\n        UI.ResizerWidget.Events.RESIZE_UPDATE_XY, this.onResizeUpdate.bind(this, widthFactor, heightFactor));\n    resizer.addEventListener(UI.ResizerWidget.Events.RESIZE_END, this.onResizeEnd, this);\n    return resizer;\n  }\n\n  private onResizeStart(): void {\n    this.slowPositionStart = null;\n    const rect = this.model.screenRect();\n    this.resizeStart = new UI.Geometry.Size(rect.width, rect.height);\n  }\n\n  private onResizeUpdate(widthFactor: number, heightFactor: number, event: {\n    data: UI.ResizerWidget.ResizeUpdateXYEvent,\n  }): void {\n    if (event.data.shiftKey !== Boolean(this.slowPositionStart)) {\n      this.slowPositionStart = event.data.shiftKey ? {x: event.data.currentX, y: event.data.currentY} : null;\n    }\n\n    let cssOffsetX: number = event.data.currentX - event.data.startX;\n    let cssOffsetY: number = event.data.currentY - event.data.startY;\n    if (this.slowPositionStart) {\n      cssOffsetX = (event.data.currentX - this.slowPositionStart.x) / 10 + this.slowPositionStart.x - event.data.startX;\n      cssOffsetY = (event.data.currentY - this.slowPositionStart.y) / 10 + this.slowPositionStart.y - event.data.startY;\n    }\n\n    if (widthFactor && this.resizeStart) {\n      const dipOffsetX = cssOffsetX * UI.ZoomManager.ZoomManager.instance().zoomFactor();\n      let newWidth: number = this.resizeStart.width + dipOffsetX * widthFactor;\n      newWidth = Math.round(newWidth / this.model.scale());\n      if (newWidth >= EmulationModel.DeviceModeModel.MinDeviceSize &&\n          newWidth <= EmulationModel.DeviceModeModel.MaxDeviceSize) {\n        this.model.setWidth(newWidth);\n      }\n    }\n\n    if (heightFactor && this.resizeStart) {\n      const dipOffsetY = cssOffsetY * UI.ZoomManager.ZoomManager.instance().zoomFactor();\n      let newHeight: number = this.resizeStart.height + dipOffsetY * heightFactor;\n      newHeight = Math.round(newHeight / this.model.scale());\n      if (newHeight >= EmulationModel.DeviceModeModel.MinDeviceSize &&\n          newHeight <= EmulationModel.DeviceModeModel.MaxDeviceSize) {\n        this.model.setHeight(newHeight);\n      }\n    }\n  }\n\n  exitHingeMode(): void {\n    if (this.model) {\n      this.model.exitHingeMode();\n    }\n  }\n\n  private onResizeEnd(): void {\n    delete this.resizeStart;\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ResizedViewInResponsiveMode);\n  }\n\n  private updateUI(): void {\n    function applyRect(element: HTMLElement, rect: EmulationModel.DeviceModeModel.Rect): void {\n      element.style.left = rect.left + 'px';\n      element.style.top = rect.top + 'px';\n      element.style.width = rect.width + 'px';\n      element.style.height = rect.height + 'px';\n    }\n\n    if (!this.isShowing()) {\n      return;\n    }\n\n    const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n    let callDoResize = false;\n    const showRulers = this.showRulersSetting.get() && this.model.type() !== EmulationModel.DeviceModeModel.Type.None;\n    let contentAreaResized = false;\n    let updateRulers = false;\n\n    const cssScreenRect = this.model.screenRect().scale(1 / zoomFactor);\n    if (!this.cachedCssScreenRect || !cssScreenRect.isEqual(this.cachedCssScreenRect)) {\n      applyRect(this.screenArea, cssScreenRect);\n      updateRulers = true;\n      callDoResize = true;\n      this.cachedCssScreenRect = cssScreenRect;\n    }\n\n    const cssVisiblePageRect = this.model.visiblePageRect().scale(1 / zoomFactor);\n    if (!this.cachedCssVisiblePageRect || !cssVisiblePageRect.isEqual(this.cachedCssVisiblePageRect)) {\n      applyRect(this.pageArea, cssVisiblePageRect);\n      callDoResize = true;\n      this.cachedCssVisiblePageRect = cssVisiblePageRect;\n    }\n\n    const outlineRectFromModel = this.model.outlineRect();\n    if (outlineRectFromModel) {\n      const outlineRect = outlineRectFromModel.scale(1 / zoomFactor);\n      if (!this.cachedOutlineRect || !outlineRect.isEqual(this.cachedOutlineRect)) {\n        applyRect(this.outlineImage, outlineRect);\n        callDoResize = true;\n        this.cachedOutlineRect = outlineRect;\n      }\n    }\n    this.contentClip.classList.toggle('device-mode-outline-visible', Boolean(this.model.outlineImage()));\n\n    const resizable = this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive;\n    if (resizable !== this.cachedResizable) {\n      this.rightResizerElement.classList.toggle('hidden', !resizable);\n      this.leftResizerElement.classList.toggle('hidden', !resizable);\n      this.bottomResizerElement.classList.toggle('hidden', !resizable);\n      this.bottomRightResizerElement.classList.toggle('hidden', !resizable);\n      this.bottomLeftResizerElement.classList.toggle('hidden', !resizable);\n      this.cachedResizable = resizable;\n    }\n\n    const mediaInspectorVisible =\n        this.showMediaInspectorSetting.get() && this.model.type() !== EmulationModel.DeviceModeModel.Type.None;\n    if (mediaInspectorVisible !== this.cachedMediaInspectorVisible) {\n      if (mediaInspectorVisible) {\n        this.mediaInspector.show(this.mediaInspectorContainer);\n      } else {\n        this.mediaInspector.detach();\n      }\n      contentAreaResized = true;\n      callDoResize = true;\n      this.cachedMediaInspectorVisible = mediaInspectorVisible;\n    }\n\n    if (showRulers !== this.cachedShowRulers) {\n      this.contentClip.classList.toggle('device-mode-rulers-visible', showRulers);\n      if (showRulers) {\n        this.topRuler.show(this.contentArea);\n        this.leftRuler.show(this.contentArea);\n      } else {\n        this.topRuler.detach();\n        this.leftRuler.detach();\n      }\n      contentAreaResized = true;\n      callDoResize = true;\n      this.cachedShowRulers = showRulers;\n    }\n\n    if (this.model.scale() !== this.cachedScale) {\n      updateRulers = true;\n      callDoResize = true;\n      for (const block of this.presetBlocks) {\n        const blockWidth = this.blockElementToWidth.get(block);\n        if (!blockWidth) {\n          throw new Error('Could not get width for block.');\n        }\n        block.style.width = blockWidth * this.model.scale() + 'px';\n      }\n      this.cachedScale = this.model.scale();\n    }\n\n    this.toolbar.update();\n    this.loadImage(this.screenImage, this.model.screenImage());\n    this.loadImage(this.outlineImage, this.model.outlineImage());\n    this.mediaInspector.setAxisTransform(this.model.scale());\n    if (callDoResize) {\n      this.doResize();\n    }\n    if (updateRulers) {\n      this.topRuler.render(this.model.scale());\n      this.leftRuler.render(this.model.scale());\n      this.topRuler.element.positionAt(\n          this.cachedCssScreenRect ? this.cachedCssScreenRect.left : 0,\n          this.cachedCssScreenRect ? this.cachedCssScreenRect.top : 0);\n      this.leftRuler.element.positionAt(\n          this.cachedCssScreenRect ? this.cachedCssScreenRect.left : 0,\n          this.cachedCssScreenRect ? this.cachedCssScreenRect.top : 0);\n    }\n    if (contentAreaResized) {\n      this.contentAreaResized();\n    }\n  }\n\n  private loadImage(element: Element, srcset: string): void {\n    if (element.getAttribute('srcset') === srcset) {\n      return;\n    }\n    element.setAttribute('srcset', srcset);\n    if (!srcset) {\n      element.classList.toggle('hidden', true);\n    }\n  }\n\n  private onImageLoaded(element: Element, success: boolean): void {\n    element.classList.toggle('hidden', !success);\n  }\n\n  setNonEmulatedAvailableSize(element: Element): void {\n    if (this.model.type() !== EmulationModel.DeviceModeModel.Type.None) {\n      return;\n    }\n    const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n    const rect = element.getBoundingClientRect();\n    const availableSize =\n        new UI.Geometry.Size(Math.max(rect.width * zoomFactor, 1), Math.max(rect.height * zoomFactor, 1));\n    this.model.setAvailableSize(availableSize, availableSize);\n  }\n\n  private contentAreaResized(): void {\n    const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n    const rect = this.contentArea.getBoundingClientRect();\n    const availableSize =\n        new UI.Geometry.Size(Math.max(rect.width * zoomFactor, 1), Math.max(rect.height * zoomFactor, 1));\n    const preferredSize = new UI.Geometry.Size(\n        Math.max((rect.width - 2 * (this.handleWidth || 0)) * zoomFactor, 1),\n        Math.max((rect.height - (this.handleHeight || 0)) * zoomFactor, 1));\n    this.model.setAvailableSize(availableSize, preferredSize);\n  }\n\n  private measureHandles(): void {\n    const hidden = this.rightResizerElement.classList.contains('hidden');\n    this.rightResizerElement.classList.toggle('hidden', false);\n    this.bottomResizerElement.classList.toggle('hidden', false);\n    this.handleWidth = this.rightResizerElement.offsetWidth;\n    this.handleHeight = this.bottomResizerElement.offsetHeight;\n    this.rightResizerElement.classList.toggle('hidden', hidden);\n    this.bottomResizerElement.classList.toggle('hidden', hidden);\n  }\n\n  private zoomChanged(): void {\n    delete this.handleWidth;\n    delete this.handleHeight;\n    if (this.isShowing()) {\n      this.measureHandles();\n      this.contentAreaResized();\n    }\n  }\n\n  override onResize(): void {\n    if (this.isShowing()) {\n      this.contentAreaResized();\n    }\n  }\n\n  override wasShown(): void {\n    this.measureHandles();\n    this.toolbar.restore();\n  }\n\n  override willHide(): void {\n    this.model.emulate(EmulationModel.DeviceModeModel.Type.None, null, null);\n  }\n\n  async captureScreenshot(): Promise<void> {\n    const screenshot = await this.model.captureScreenshot(false);\n    if (screenshot === null) {\n      return;\n    }\n\n    const pageImage = new Image();\n    pageImage.src = 'data:image/png;base64,' + screenshot;\n    pageImage.onload = async () => {\n      const scale = pageImage.naturalWidth / this.model.screenRect().width;\n      const outlineRectFromModel = this.model.outlineRect();\n      if (!outlineRectFromModel) {\n        throw new Error('Unable to take screenshot: no outlineRect available.');\n      }\n      const outlineRect = outlineRectFromModel.scale(scale);\n      const screenRect = this.model.screenRect().scale(scale);\n      const visiblePageRect = this.model.visiblePageRect().scale(scale);\n      const contentLeft = screenRect.left + visiblePageRect.left - outlineRect.left;\n      const contentTop = screenRect.top + visiblePageRect.top - outlineRect.top;\n\n      const canvas = document.createElement('canvas');\n      canvas.width = Math.floor(outlineRect.width);\n      // Cap the height to not hit the GPU limit.\n      // https://crbug.com/1260828\n      canvas.height = Math.min((1 << 14), Math.floor(outlineRect.height));\n      const ctx = canvas.getContext('2d', {willReadFrequently: true});\n      if (!ctx) {\n        throw new Error('Could not get 2d context from canvas.');\n      }\n      ctx.imageSmoothingEnabled = false;\n\n      if (this.model.outlineImage()) {\n        await this.paintImage(ctx, this.model.outlineImage(), outlineRect.relativeTo(outlineRect));\n      }\n      if (this.model.screenImage()) {\n        await this.paintImage(ctx, this.model.screenImage(), screenRect.relativeTo(outlineRect));\n      }\n      ctx.drawImage(pageImage, Math.floor(contentLeft), Math.floor(contentTop));\n      this.saveScreenshot((canvas));\n    };\n  }\n\n  async captureFullSizeScreenshot(): Promise<void> {\n    const screenshot = await this.model.captureScreenshot(true);\n    if (screenshot === null) {\n      return;\n    }\n    return this.saveScreenshotBase64(screenshot);\n  }\n\n  async captureAreaScreenshot(clip?: Protocol.Page.Viewport): Promise<void> {\n    const screenshot = await this.model.captureScreenshot(false, clip);\n    if (screenshot === null) {\n      return;\n    }\n    return this.saveScreenshotBase64(screenshot);\n  }\n\n  private saveScreenshotBase64(screenshot: string): void {\n    const pageImage = new Image();\n    pageImage.src = 'data:image/png;base64,' + screenshot;\n    pageImage.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = pageImage.naturalWidth;\n      // Cap the height to not hit the GPU limit.\n      // https://crbug.com/1260828\n      canvas.height = Math.min((1 << 14), Math.floor(pageImage.naturalHeight));\n      const ctx = canvas.getContext('2d', {willReadFrequently: true});\n      if (!ctx) {\n        throw new Error('Could not get 2d context for base64 screenshot.');\n      }\n      ctx.imageSmoothingEnabled = false;\n      ctx.drawImage(pageImage, 0, 0);\n      this.saveScreenshot((canvas));\n    };\n  }\n\n  private paintImage(ctx: CanvasRenderingContext2D, src: string, rect: EmulationModel.DeviceModeModel.Rect):\n      Promise<void> {\n    return new Promise(resolve => {\n      const image = new Image();\n      image.crossOrigin = 'Anonymous';\n      image.srcset = src;\n      image.onerror = () => resolve();\n      image.onload = () => {\n        ctx.drawImage(image, rect.left, rect.top, rect.width, rect.height);\n        resolve();\n      };\n    });\n  }\n\n  private saveScreenshot(canvas: HTMLCanvasElement): void {\n    const url = this.model.inspectedURL();\n    let fileName = '';\n    if (url) {\n      const withoutFragment = Platform.StringUtilities.removeURLFragment(url);\n      fileName = Platform.StringUtilities.trimURL(withoutFragment);\n    }\n\n    const device = this.model.device();\n    if (device && this.model.type() === EmulationModel.DeviceModeModel.Type.Device) {\n      fileName += `(${device.title})`;\n    }\n    const link = document.createElement('a');\n    link.download = fileName + '.png';\n    canvas.toBlob(blob => {\n      if (blob === null) {\n        return;\n      }\n      link.href = URL.createObjectURL(blob);\n      link.click();\n    });\n  }\n}\n\nexport class Ruler extends UI.Widget.VBox {\n  private contentElementInternal: HTMLElement;\n  private readonly horizontal: boolean;\n  private scale: number;\n  private count: number;\n  private readonly throttler: Common.Throttler.Throttler;\n  private readonly applyCallback: (arg0: number) => void;\n  private renderedScale!: number|undefined;\n  private renderedZoomFactor!: number|undefined;\n  constructor(horizontal: boolean, applyCallback: (arg0: number) => void) {\n    super({jslog: `${VisualLogging.deviceModeRuler().track({click: true})}`});\n    this.element.classList.add('device-mode-ruler');\n    this.contentElementInternal =\n        this.element.createChild('div', 'device-mode-ruler-content').createChild('div', 'device-mode-ruler-inner');\n    this.horizontal = horizontal;\n    this.scale = 1;\n    this.count = 0;\n    this.throttler = new Common.Throttler.Throttler(0);\n    this.applyCallback = applyCallback;\n  }\n\n  render(scale: number): void {\n    this.scale = scale;\n    void this.throttler.schedule(this.update.bind(this));\n  }\n\n  override onResize(): void {\n    void this.throttler.schedule(this.update.bind(this));\n  }\n\n  update(): void {\n    const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n    const size = this.horizontal ? this.contentElementInternal.offsetWidth : this.contentElementInternal.offsetHeight;\n\n    if (this.scale !== this.renderedScale || zoomFactor !== this.renderedZoomFactor) {\n      this.contentElementInternal.removeChildren();\n      this.count = 0;\n      this.renderedScale = this.scale;\n      this.renderedZoomFactor = zoomFactor;\n    }\n\n    const dipSize = size * zoomFactor / this.scale;\n    const count = Math.ceil(dipSize / 5);\n    let step = 1;\n    if (this.scale < 0.8) {\n      step = 2;\n    }\n    if (this.scale < 0.6) {\n      step = 4;\n    }\n    if (this.scale < 0.4) {\n      step = 8;\n    }\n    if (this.scale < 0.2) {\n      step = 16;\n    }\n    if (this.scale < 0.1) {\n      step = 32;\n    }\n\n    for (let i = count; i < this.count; i++) {\n      if (!(i % step)) {\n        const lastChild = this.contentElementInternal.lastChild;\n        if (lastChild) {\n          lastChild.remove();\n        }\n      }\n    }\n\n    for (let i = this.count; i < count; i++) {\n      if (i % step) {\n        continue;\n      }\n      const marker = this.contentElementInternal.createChild('div', 'device-mode-ruler-marker');\n      if (i) {\n        if (this.horizontal) {\n          marker.style.left = (5 * i) * this.scale / zoomFactor + 'px';\n        } else {\n          marker.style.top = (5 * i) * this.scale / zoomFactor + 'px';\n        }\n        if (!(i % 20)) {\n          const text = marker.createChild('div', 'device-mode-ruler-text');\n          text.textContent = String(i * 5);\n          text.addEventListener('click', this.onMarkerClick.bind(this, i * 5), false);\n        }\n      }\n      if (!(i % 10)) {\n        marker.classList.add('device-mode-ruler-marker-large');\n      } else if (!(i % 5)) {\n        marker.classList.add('device-mode-ruler-marker-medium');\n      }\n    }\n\n    this.count = count;\n  }\n\n  private onMarkerClick(size: number): void {\n    this.applyCallback.call(null, size);\n  }\n}\n", "// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/legacy/legacy.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as EmulationModel from '../../models/emulation/emulation.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\n\nimport * as EmulationComponents from './components/components.js';\nconst UIStrings = {\n  /**\n   * @description Title of the device dimensions selection item in the Device Mode Toolbar.\n   * webpage in pixels.\n   */\n  dimensions: 'Dimensions',\n  /**\n   * @description Title of the width input textbox in the Device Mode Toolbar, for the width of the\n   * webpage in pixels.\n   */\n  width: 'Width',\n  /**\n   * @description Title of the height input textbox in the Device Mode Toolbar, for the height of the\n   * webpage in pixels. 'leave empty for full' is an instruction to the user - the webpage will be\n   * full-height if this textbox is left empty.\n   */\n  heightLeaveEmptyForFull: 'Height (leave empty for full)',\n  /**\n   * @description Tooltip text for a drop-down menu where the user can select the zoom percentage of\n   * the webpage preview.\n   */\n  zoom: 'Zoom',\n  /**\n   * @description Tooltip tip for a drop-down menu where the user can select the device pixel ratio\n   * (the ratio between the physical pixels on a screen and CSS logical pixels) of the webpage\n   * preview.\n   */\n  devicePixelRatio: 'Device pixel ratio',\n  /**\n   * @description Tooltip tip for a drop-down menu where the user can select the device type e.g.\n   * Mobile, Desktop.\n   */\n  deviceType: 'Device type',\n  /**\n   * @description Tooltip text for a 'three dots' style menu button which shows an expanded set of options.\n   */\n  moreOptions: 'More options',\n  /**\n   * @description A context menu item in the Device Mode Toolbar. This is a command to resize the\n   * webpage preview to fit the current window. The placeholder is the percentage of full-size that\n   * will be displayed after fitting.\n   * @example {30.0} PH1\n   */\n  fitToWindowF: 'Fit to window ({PH1}%)',\n  /**\n   * @description A checkbox setting that appears in the context menu for the zoom level, in the\n   * Device Mode Toolbar.\n   */\n  autoadjustZoom: 'Auto-adjust zoom',\n  /**\n   * @description A menu item in the drop-down box that allows the user to select the device pixel\n   * ratio. Labels the default value which varies between device types, represented by the\n   * placeholder, which is a number. In the Device Mode Toolbar.\n   * @example {4.3} PH1\n   */\n  defaultF: 'Default: {PH1}',\n  /**\n   * @description Command to hide the frame (like a picture frame) around the mobile device screen.\n   */\n  hideDeviceFrame: 'Hide device frame',\n  /**\n   * @description Command to show the frame (like a picture frame) around the mobile device screen.\n   */\n  showDeviceFrame: 'Show device frame',\n  /**\n   * @description Command to hide a display in the Device Mode Toolbar that shows the different media\n   * queries for the device, above the device screen.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n   */\n  hideMediaQueries: 'Hide media queries',\n  /**\n   * @description Command to show a display in the Device Mode Toolbar that shows the different media\n   * queries for the device, above the device screen.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n   */\n  showMediaQueries: 'Show media queries',\n  /**\n   * @description Command in the Device Mode Toolbar to hide a virtual ruler (for measuring),\n   * displayed above and next to the device screen.\n   */\n  hideRulers: 'Hide rulers',\n  /**\n   * @description Command in the Device Mode Toolbar to show a virtual ruler (for measuring),\n   * displayed above and next to the device screen.\n   */\n  showRulers: 'Show rulers',\n  /**\n   * @description Command in the Device Mode Toolbar to remove the drop-down menu from the toolbar\n   * that lets the user override the device pixel ratio of the emulated device.\n   */\n  removeDevicePixelRatio: 'Remove device pixel ratio',\n  /**\n   * @description Command in the Device Mode Toolbar to add the drop-down menu to the toolbar\n   * that lets the user override the device pixel ratio of the emulated device.\n   */\n  addDevicePixelRatio: 'Add device pixel ratio',\n  /**\n   * @description Command in the Device Mode Toolbar to add the drop-down menu to the toolbar\n   * that lets the user set the device type (e.g. Desktop or Mobile).\n   */\n  removeDeviceType: 'Remove device type',\n  /**\n   * @description Command in the Device Mode Toolbar to add the drop-down menu to the toolbar\n   * that lets the user add the device type (e.g. Desktop or Mobile).\n   */\n  addDeviceType: 'Add device type',\n  /**\n   * @description A context menu item in the Device Mode Toolbar that resets all settings back to\n   * their default values.\n   */\n  resetToDefaults: 'Reset to defaults',\n  /**\n   * @description A menu command in the Device Mode Toolbar that closes DevTools.\n   */\n  closeDevtools: 'Close DevTools',\n  /**\n   * @description Title of the device selected in the Device Mode Toolbar. The 'response' device is\n   * not a specific phone/tablet model but a virtual device that can change its height and width\n   * dynamically by clicking and dragging the sides. 'Response' refers to response design:\n   * https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design\n   */\n  responsive: 'Responsive',\n  /**\n   * @description A context menu item in the Device Mode Toolbar that takes the user to a new screen\n   * where they can add/edit/remove custom devices.\n   */\n  edit: 'Edit…',\n  /**\n   * @description Text describing the current orientation of the phone/device (vs. landscape).\n   */\n  portrait: 'Portrait',\n  /**\n   * @description Text describing the current orientation of the phone/device (vs. portrait).\n   */\n  landscape: 'Landscape',\n  /**\n   * @description Title of button in the Device Mode Toolbar which rotates the device 90 degrees.\n   */\n  rotate: 'Rotate',\n  /**\n   * @description Fallback/default text used for the name of a custom device when no name has been\n   * provided by the user.\n   */\n  none: 'None',\n  /**\n   * @description Tooltip of the rotate/screen orientation button.\n   */\n  screenOrientationOptions: 'Screen orientation options',\n  /**\n   * @description Tooltip for a button which turns on/off dual-screen mode, which emulates devices\n   * like tablets which have two screens.\n   */\n  toggleDualscreenMode: 'Toggle dual-screen mode',\n  /**\n   * @description Tooltip tip for a drop-down menu where the user can select the device\n   * posture e.g. Continuous, Folded.\n   */\n  devicePosture: 'Device posture',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/emulation/DeviceModeToolbar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * Even though the emulation panel uses all UI elements, the tooltips are not supported.\n * That's because the emulation elements are rendered around the page context, rather\n * than in the DevTools panel itself. Therefore, we need to fall back to using the\n * built-in tooltip by setting the title attribute on the button's element.\n */\nfunction setTitleForButton(button: UI.Toolbar.ToolbarButton|UI.Toolbar.ToolbarMenuButton, title: string): void {\n  button.setTitle(title);\n  button.element.title = title;\n}\n\nexport class DeviceModeToolbar {\n  private model: EmulationModel.DeviceModeModel.DeviceModeModel;\n  private readonly showMediaInspectorSetting: Common.Settings.Setting<boolean>;\n  private readonly showRulersSetting: Common.Settings.Setting<boolean>;\n  private readonly deviceOutlineSetting: Common.Settings.Setting<boolean>;\n  private readonly showDeviceScaleFactorSetting: Common.Settings.Setting<boolean>;\n  private readonly showUserAgentTypeSetting: Common.Settings.Setting<boolean>;\n  private autoAdjustScaleSetting: Common.Settings.Setting<boolean>;\n  private readonly lastMode: Map<EmulationModel.EmulatedDevices.EmulatedDevice, EmulationModel.EmulatedDevices.Mode>;\n  private readonly elementInternal: HTMLDivElement;\n  private readonly emulatedDevicesList: EmulationModel.EmulatedDevices.EmulatedDevicesList;\n  private readonly persistenceSetting: Common.Settings.Setting<{device: string, orientation: string, mode: string}>;\n  private spanButton!: UI.Toolbar.ToolbarButton;\n  private postureItem!: UI.Toolbar.ToolbarMenuButton;\n  private modeButton!: UI.Toolbar.ToolbarButton;\n  private widthInput: EmulationComponents.DeviceSizeInputElement.SizeInputElement;\n  private heightInput: EmulationComponents.DeviceSizeInputElement.SizeInputElement;\n  private deviceScaleItem!: UI.Toolbar.ToolbarMenuButton;\n  private deviceSelectItem!: UI.Toolbar.ToolbarMenuButton;\n  private scaleItem!: UI.Toolbar.ToolbarMenuButton;\n  private uaItem!: UI.Toolbar.ToolbarMenuButton;\n  private cachedDeviceScale!: number|null;\n  private cachedUaType!: string|null;\n  private xItem?: UI.Toolbar.ToolbarItem;\n  private throttlingConditionsItem?: UI.Toolbar.ToolbarMenuButton;\n  private cachedModelType?: EmulationModel.DeviceModeModel.Type;\n  private cachedScale?: number;\n  private cachedModelDevice?: EmulationModel.EmulatedDevices.EmulatedDevice|null;\n  private cachedModelMode?: EmulationModel.EmulatedDevices.Mode|null;\n\n  constructor(\n      model: EmulationModel.DeviceModeModel.DeviceModeModel,\n      showMediaInspectorSetting: Common.Settings.Setting<boolean>,\n      showRulersSetting: Common.Settings.Setting<boolean>) {\n    this.model = model;\n    this.showMediaInspectorSetting = showMediaInspectorSetting;\n    this.showRulersSetting = showRulersSetting;\n\n    this.deviceOutlineSetting = this.model.deviceOutlineSetting();\n    this.showDeviceScaleFactorSetting =\n        Common.Settings.Settings.instance().createSetting('emulation.show-device-scale-factor', false);\n    this.showDeviceScaleFactorSetting.addChangeListener(this.updateDeviceScaleFactorVisibility, this);\n\n    this.showUserAgentTypeSetting =\n        Common.Settings.Settings.instance().createSetting('emulation.show-user-agent-type', false);\n    this.showUserAgentTypeSetting.addChangeListener(this.updateUserAgentTypeVisibility, this);\n\n    this.autoAdjustScaleSetting =\n        Common.Settings.Settings.instance().createSetting('emulation.auto-adjust-scale', true);\n\n    this.lastMode = new Map();\n\n    this.elementInternal = document.createElement('div');\n    this.elementInternal.classList.add('device-mode-toolbar');\n    this.elementInternal.setAttribute('jslog', `${VisualLogging.toolbar('device-mode').track({resize: true})}`);\n\n    const mainToolbar = this.elementInternal.createChild('devtools-toolbar', 'main-toolbar');\n    this.appendDeviceSelectMenu(mainToolbar);\n\n    this.widthInput = new EmulationComponents.DeviceSizeInputElement.SizeInputElement(\n        i18nString(UIStrings.width), {jslogContext: 'width'});\n    this.widthInput.addEventListener('sizechanged', ({size: width}) => {\n      if (this.autoAdjustScaleSetting.get()) {\n        this.model.setWidthAndScaleToFit(width);\n      } else {\n        this.model.setWidth(width);\n      }\n    });\n    this.heightInput = new EmulationComponents.DeviceSizeInputElement.SizeInputElement(\n        i18nString(UIStrings.heightLeaveEmptyForFull), {jslogContext: 'height'});\n    this.heightInput.addEventListener('sizechanged', ({size: height}) => {\n      if (this.autoAdjustScaleSetting.get()) {\n        this.model.setHeightAndScaleToFit(height);\n      } else {\n        this.model.setHeight(height);\n      }\n    });\n    this.appendDimensionInputs(mainToolbar);\n\n    this.appendDisplaySettings(mainToolbar);\n    this.appendDevicePositionItems(mainToolbar);\n    const optionsToolbar = this.elementInternal.createChild('devtools-toolbar', 'device-mode-toolbar-options');\n    optionsToolbar.wrappable = true;\n    this.fillOptionsToolbar(optionsToolbar);\n\n    this.emulatedDevicesList = EmulationModel.EmulatedDevices.EmulatedDevicesList.instance();\n    this.emulatedDevicesList.addEventListener(\n        EmulationModel.EmulatedDevices.Events.CUSTOM_DEVICES_UPDATED, this.deviceListChanged, this);\n    this.emulatedDevicesList.addEventListener(\n        EmulationModel.EmulatedDevices.Events.STANDARD_DEVICES_UPDATED, this.deviceListChanged, this);\n\n    this.persistenceSetting = Common.Settings.Settings.instance().createSetting(\n        'emulation.device-mode-value', {device: '', orientation: '', mode: ''});\n\n    this.model.toolbarControlsEnabledSetting().addChangeListener(updateToolbarsEnabled);\n    updateToolbarsEnabled();\n\n    function updateToolbarsEnabled(): void {\n      const enabled = model.toolbarControlsEnabledSetting().get();\n      mainToolbar.setEnabled(enabled);\n      optionsToolbar.setEnabled(enabled);\n    }\n  }\n\n  private createEmptyToolbarElement(): HTMLDivElement {\n    const element = document.createElement('div');\n    element.classList.add('device-mode-empty-toolbar-element');\n    return element;\n  }\n\n  private appendDeviceSelectMenu(toolbar: UI.Toolbar.Toolbar): void {\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.createEmptyToolbarElement()));\n    this.deviceSelectItem =\n        new UI.Toolbar.ToolbarMenuButton(this.appendDeviceMenuItems.bind(this), undefined, undefined, 'device');\n    this.deviceSelectItem.turnShrinkable();\n    this.deviceSelectItem.setDarkText();\n    toolbar.appendToolbarItem(this.deviceSelectItem);\n  }\n\n  private appendDimensionInputs(toolbar: UI.Toolbar.Toolbar): void {\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.widthInput));\n\n    const xElement = document.createElement('div');\n    xElement.classList.add('device-mode-x');\n    xElement.textContent = '×';\n    this.xItem = new UI.Toolbar.ToolbarItem(xElement);\n    toolbar.appendToolbarItem(this.xItem);\n\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.heightInput));\n  }\n\n  private appendDisplaySettings(toolbar: UI.Toolbar.Toolbar): void {\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.createEmptyToolbarElement()));\n    this.scaleItem =\n        new UI.Toolbar.ToolbarMenuButton(this.appendScaleMenuItems.bind(this), undefined, undefined, 'scale');\n    setTitleForButton(this.scaleItem, i18nString(UIStrings.zoom));\n    this.scaleItem.turnShrinkable();\n    this.scaleItem.setDarkText();\n    toolbar.appendToolbarItem(this.scaleItem);\n\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.createEmptyToolbarElement()));\n\n    this.deviceScaleItem = new UI.Toolbar.ToolbarMenuButton(\n        this.appendDeviceScaleMenuItems.bind(this), undefined, undefined, 'device-pixel-ratio');\n    this.deviceScaleItem.turnShrinkable();\n    this.deviceScaleItem.setVisible(this.showDeviceScaleFactorSetting.get());\n    setTitleForButton(this.deviceScaleItem, i18nString(UIStrings.devicePixelRatio));\n    this.deviceScaleItem.setDarkText();\n    toolbar.appendToolbarItem(this.deviceScaleItem);\n\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.createEmptyToolbarElement()));\n    this.uaItem =\n        new UI.Toolbar.ToolbarMenuButton(this.appendUserAgentMenuItems.bind(this), undefined, undefined, 'device-type');\n    this.uaItem.turnShrinkable();\n    this.uaItem.setVisible(this.showUserAgentTypeSetting.get());\n    setTitleForButton(this.uaItem, i18nString(UIStrings.deviceType));\n    this.uaItem.setDarkText();\n    toolbar.appendToolbarItem(this.uaItem);\n\n    this.throttlingConditionsItem =\n        MobileThrottling.ThrottlingManager.throttlingManager().createMobileThrottlingButton();\n    this.throttlingConditionsItem.turnShrinkable();\n    toolbar.appendToolbarItem(this.throttlingConditionsItem);\n    toolbar.appendToolbarItem(MobileThrottling.ThrottlingManager.throttlingManager().createSaveDataOverrideSelector());\n  }\n\n  private appendDevicePositionItems(toolbar: UI.Toolbar.Toolbar): void {\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.createEmptyToolbarElement()));\n    this.modeButton = new UI.Toolbar.ToolbarButton('', 'screen-rotation', undefined, 'screen-rotation');\n    this.modeButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.modeMenuClicked, this);\n    toolbar.appendToolbarItem(this.modeButton);\n\n    // Show dual screen toolbar.\n    this.spanButton = new UI.Toolbar.ToolbarButton('', 'device-fold', undefined, 'device-fold');\n    this.spanButton.addEventListener(UI.Toolbar.ToolbarButton.Events.CLICK, this.spanClicked, this);\n    toolbar.appendToolbarItem(this.spanButton);\n\n    // Show posture toolbar menu for foldable devices.\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.createEmptyToolbarElement()));\n    this.postureItem = new UI.Toolbar.ToolbarMenuButton(\n        this.appendDevicePostureItems.bind(this), undefined, undefined, 'device-posture');\n    this.postureItem.turnShrinkable();\n    this.postureItem.setDarkText();\n    setTitleForButton(this.postureItem, i18nString(UIStrings.devicePosture));\n    toolbar.appendToolbarItem(this.postureItem);\n  }\n\n  private fillOptionsToolbar(toolbar: UI.Toolbar.Toolbar): void {\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.createEmptyToolbarElement()));\n    const moreOptionsButton = new UI.Toolbar.ToolbarMenuButton(\n        this.appendOptionsMenuItems.bind(this), true, undefined, 'more-options', 'dots-vertical');\n    moreOptionsButton.setTitle(i18nString(UIStrings.moreOptions));\n    toolbar.appendToolbarItem(moreOptionsButton);\n  }\n\n  private appendDevicePostureItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    for (const title of ['Continuous', 'Folded']) {\n      contextMenu.defaultSection().appendCheckboxItem(\n          title, this.spanClicked.bind(this),\n          {checked: title === this.currentDevicePosture(), jslogContext: title.toLowerCase()});\n    }\n  }\n\n  private currentDevicePosture(): string {\n    const mode = this.model.mode();\n    if (mode &&\n        (mode.orientation === EmulationModel.EmulatedDevices.VerticalSpanned ||\n         mode.orientation === EmulationModel.EmulatedDevices.HorizontalSpanned)) {\n      return 'Folded';\n    }\n    return 'Continuous';\n  }\n\n  private appendScaleMenuItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    if (this.model.type() === EmulationModel.DeviceModeModel.Type.Device) {\n      contextMenu.footerSection().appendItem(\n          i18nString(UIStrings.fitToWindowF, {PH1: this.getPrettyFitZoomPercentage()}),\n          this.onScaleMenuChanged.bind(this, this.model.fitScale()), {jslogContext: 'fit-to-window'});\n    }\n    contextMenu.footerSection().appendCheckboxItem(\n        i18nString(UIStrings.autoadjustZoom), this.onAutoAdjustScaleChanged.bind(this),\n        {checked: this.autoAdjustScaleSetting.get(), jslogContext: 'auto-adjust-zoom'});\n    const boundAppendScaleItem = appendScaleItem.bind(this);\n    boundAppendScaleItem('50%', 0.5);\n    boundAppendScaleItem('75%', 0.75);\n    boundAppendScaleItem('100%', 1);\n    boundAppendScaleItem('125%', 1.25);\n    boundAppendScaleItem('150%', 1.5);\n    boundAppendScaleItem('200%', 2);\n\n    function appendScaleItem(this: DeviceModeToolbar, title: string, value: number): void {\n      contextMenu.defaultSection().appendCheckboxItem(\n          title, this.onScaleMenuChanged.bind(this, value),\n          {checked: this.model.scaleSetting().get() === value, jslogContext: title});\n    }\n  }\n\n  private onScaleMenuChanged(value: number): void {\n    this.model.scaleSetting().set(value);\n  }\n\n  private onAutoAdjustScaleChanged(): void {\n    this.autoAdjustScaleSetting.set(!this.autoAdjustScaleSetting.get());\n  }\n\n  private appendDeviceScaleMenuItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    const deviceScaleFactorSetting = this.model.deviceScaleFactorSetting();\n    const defaultValue = this.model.uaSetting().get() === EmulationModel.DeviceModeModel.UA.MOBILE ||\n            this.model.uaSetting().get() === EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH ?\n        EmulationModel.DeviceModeModel.defaultMobileScaleFactor :\n        window.devicePixelRatio;\n    appendDeviceScaleFactorItem(\n        contextMenu.headerSection(), i18nString(UIStrings.defaultF, {PH1: defaultValue}), 0, 'dpr-default');\n    appendDeviceScaleFactorItem(contextMenu.defaultSection(), '1', 1, 'dpr-1');\n    appendDeviceScaleFactorItem(contextMenu.defaultSection(), '2', 2, 'dpr-2');\n    appendDeviceScaleFactorItem(contextMenu.defaultSection(), '3', 3, 'dpr-3');\n\n    function appendDeviceScaleFactorItem(\n        section: UI.ContextMenu.Section, title: string, value: number, jslogContext: string): void {\n      section.appendCheckboxItem(\n          title, deviceScaleFactorSetting.set.bind(deviceScaleFactorSetting, value),\n          {checked: deviceScaleFactorSetting.get() === value, jslogContext});\n    }\n  }\n\n  private appendUserAgentMenuItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    const uaSetting = this.model.uaSetting();\n    appendUAItem(EmulationModel.DeviceModeModel.UA.MOBILE, EmulationModel.DeviceModeModel.UA.MOBILE);\n    appendUAItem(EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH, EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH);\n    appendUAItem(EmulationModel.DeviceModeModel.UA.DESKTOP, EmulationModel.DeviceModeModel.UA.DESKTOP);\n    appendUAItem(EmulationModel.DeviceModeModel.UA.DESKTOP_TOUCH, EmulationModel.DeviceModeModel.UA.DESKTOP_TOUCH);\n\n    function appendUAItem(title: string, value: EmulationModel.DeviceModeModel.UA): void {\n      contextMenu.defaultSection().appendCheckboxItem(\n          title, uaSetting.set.bind(uaSetting, value),\n          {checked: uaSetting.get() === value, jslogContext: Platform.StringUtilities.toKebabCase(value)});\n    }\n  }\n\n  private appendOptionsMenuItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    const model = this.model;\n    appendToggleItem(\n        contextMenu.headerSection(), this.deviceOutlineSetting, i18nString(UIStrings.hideDeviceFrame),\n        i18nString(UIStrings.showDeviceFrame), model.type() !== EmulationModel.DeviceModeModel.Type.Device,\n        'device-frame');\n    appendToggleItem(\n        contextMenu.headerSection(), this.showMediaInspectorSetting, i18nString(UIStrings.hideMediaQueries),\n        i18nString(UIStrings.showMediaQueries), undefined, 'media-queries');\n    appendToggleItem(\n        contextMenu.headerSection(), this.showRulersSetting, i18nString(UIStrings.hideRulers),\n        i18nString(UIStrings.showRulers), undefined, 'rulers');\n    appendToggleItem(\n        contextMenu.defaultSection(), this.showDeviceScaleFactorSetting, i18nString(UIStrings.removeDevicePixelRatio),\n        i18nString(UIStrings.addDevicePixelRatio), undefined, 'device-pixel-ratio');\n    appendToggleItem(\n        contextMenu.defaultSection(), this.showUserAgentTypeSetting, i18nString(UIStrings.removeDeviceType),\n        i18nString(UIStrings.addDeviceType), undefined, 'device-type');\n    contextMenu.appendItemsAtLocation('deviceModeMenu');\n    contextMenu.footerSection().appendItem(\n        i18nString(UIStrings.resetToDefaults), this.reset.bind(this), {jslogContext: 'reset-to-defaults'});\n    contextMenu.footerSection().appendItem(\n        i18nString(UIStrings.closeDevtools),\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.closeWindow.bind(\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance),\n        {jslogContext: 'close-dev-tools'});\n\n    function appendToggleItem(\n        section: UI.ContextMenu.Section, setting: Common.Settings.Setting<unknown>, title1: string, title2: string,\n        disabled?: boolean, context?: string): void {\n      if (typeof disabled === 'undefined') {\n        disabled = model.type() === EmulationModel.DeviceModeModel.Type.None;\n      }\n\n      const isEnabled = setting.get();\n      const jslogContext = `${context}-${isEnabled ? 'disable' : 'enable'}`;\n      section.appendItem(\n          isEnabled ? title1 : title2, setting.set.bind(setting, !setting.get()), {disabled, jslogContext});\n    }\n  }\n\n  private reset(): void {\n    this.deviceOutlineSetting.set(false);\n    this.showDeviceScaleFactorSetting.set(false);\n    this.showUserAgentTypeSetting.set(false);\n    this.showMediaInspectorSetting.set(false);\n    this.showRulersSetting.set(false);\n    this.model.reset();\n  }\n\n  private emulateDevice(device: EmulationModel.EmulatedDevices.EmulatedDevice): void {\n    const scale = this.autoAdjustScaleSetting.get() ? undefined : this.model.scaleSetting().get();\n    this.model.emulate(\n        EmulationModel.DeviceModeModel.Type.Device, device, this.lastMode.get(device) || device.modes[0], scale);\n  }\n\n  private switchToResponsive(): void {\n    this.model.emulate(EmulationModel.DeviceModeModel.Type.Responsive, null, null);\n  }\n\n  private filterDevices(devices: EmulationModel.EmulatedDevices.EmulatedDevice[]):\n      EmulationModel.EmulatedDevices.EmulatedDevice[] {\n    devices = devices.filter(function(d) {\n      return d.show();\n    });\n    devices.sort(EmulationModel.EmulatedDevices.EmulatedDevice.deviceComparator);\n    return devices;\n  }\n\n  private standardDevices(): EmulationModel.EmulatedDevices.EmulatedDevice[] {\n    return this.filterDevices(this.emulatedDevicesList.standard());\n  }\n\n  private customDevices(): EmulationModel.EmulatedDevices.EmulatedDevice[] {\n    return this.filterDevices(this.emulatedDevicesList.custom());\n  }\n\n  private allDevices(): EmulationModel.EmulatedDevices.EmulatedDevice[] {\n    return this.standardDevices().concat(this.customDevices());\n  }\n\n  private appendDeviceMenuItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n    contextMenu.headerSection().appendCheckboxItem(\n        i18nString(UIStrings.responsive), this.switchToResponsive.bind(this),\n        {checked: this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive, jslogContext: 'responsive'});\n    appendGroup.call(this, this.standardDevices());\n    appendGroup.call(this, this.customDevices());\n    contextMenu.footerSection().appendItem(\n        i18nString(UIStrings.edit), this.emulatedDevicesList.revealCustomSetting.bind(this.emulatedDevicesList),\n        {jslogContext: 'edit'});\n\n    function appendGroup(this: DeviceModeToolbar, devices: EmulationModel.EmulatedDevices.EmulatedDevice[]): void {\n      if (!devices.length) {\n        return;\n      }\n      const section = contextMenu.section();\n      for (const device of devices) {\n        section.appendCheckboxItem(device.title, this.emulateDevice.bind(this, device), {\n          checked: this.model.device() === device,\n          jslogContext: Platform.StringUtilities.toKebabCase(device.title),\n        });\n      }\n    }\n  }\n\n  private deviceListChanged(): void {\n    const device = this.model.device();\n    if (!device) {\n      return;\n    }\n\n    const devices = this.allDevices();\n    if (devices.indexOf(device) === -1) {\n      if (devices.length) {\n        this.emulateDevice(devices[0]);\n      } else {\n        this.model.emulate(EmulationModel.DeviceModeModel.Type.Responsive, null, null);\n      }\n    } else {\n      this.emulateDevice(device);\n    }\n  }\n\n  private updateDeviceScaleFactorVisibility(): void {\n    if (this.deviceScaleItem) {\n      this.deviceScaleItem.setVisible(this.showDeviceScaleFactorSetting.get());\n    }\n  }\n\n  private updateUserAgentTypeVisibility(): void {\n    if (this.uaItem) {\n      this.uaItem.setVisible(this.showUserAgentTypeSetting.get());\n    }\n  }\n\n  private spanClicked(): void {\n    const device = this.model.device();\n\n    if (!device || (!device.isDualScreen && !device.isFoldableScreen)) {\n      return;\n    }\n\n    const scale = this.autoAdjustScaleSetting.get() ? undefined : this.model.scaleSetting().get();\n    const mode = this.model.mode();\n    if (!mode) {\n      return;\n    }\n\n    const newMode = device.getSpanPartner(mode);\n    if (!newMode) {\n      return;\n    }\n    this.model.emulate(this.model.type(), device, newMode, scale);\n    return;\n  }\n\n  private modeMenuClicked(event: {\n    data: Event,\n  }): void {\n    const device = this.model.device();\n    const model = this.model;\n    const autoAdjustScaleSetting = this.autoAdjustScaleSetting;\n\n    if (model.type() === EmulationModel.DeviceModeModel.Type.Responsive) {\n      const appliedSize = model.appliedDeviceSize();\n      if (autoAdjustScaleSetting.get()) {\n        model.setSizeAndScaleToFit(appliedSize.height, appliedSize.width);\n      } else {\n        model.setWidth(appliedSize.height);\n        model.setHeight(appliedSize.width);\n      }\n      return;\n    }\n\n    if (!device) {\n      return;\n    }\n\n    if ((device.isDualScreen || device.isFoldableScreen || device.modes.length === 2) &&\n        device.modes[0].orientation !== device.modes[1].orientation) {\n      const scale = autoAdjustScaleSetting.get() ? undefined : model.scaleSetting().get();\n      const mode = model.mode();\n      if (!mode) {\n        return;\n      }\n      const rotationPartner = device.getRotationPartner(mode);\n      if (!rotationPartner) {\n        return;\n      }\n\n      model.emulate(model.type(), model.device(), rotationPartner, scale);\n      return;\n    }\n\n    if (!this.modeButton) {\n      return;\n    }\n\n    const contextMenu = new UI.ContextMenu.ContextMenu(event.data, {\n      x: this.modeButton.element.getBoundingClientRect().left,\n      y: this.modeButton.element.getBoundingClientRect().top + (this.modeButton.element as HTMLElement).offsetHeight,\n    });\n    addOrientation(EmulationModel.EmulatedDevices.Vertical, i18nString(UIStrings.portrait));\n    addOrientation(EmulationModel.EmulatedDevices.Horizontal, i18nString(UIStrings.landscape));\n    void contextMenu.show();\n\n    function addOrientation(orientation: string, title: string): void {\n      if (!device) {\n        return;\n      }\n\n      const modes = device.modesForOrientation(orientation);\n      if (!modes.length) {\n        return;\n      }\n      if (modes.length === 1) {\n        addMode(modes[0], title);\n      } else {\n        for (let index = 0; index < modes.length; index++) {\n          addMode(modes[index], title + ' \\u2013 ' + modes[index].title);\n        }\n      }\n    }\n\n    function addMode(mode: EmulationModel.EmulatedDevices.Mode, title: string): void {\n      contextMenu.defaultSection().appendCheckboxItem(\n          title, applyMode.bind(null, mode), {checked: model.mode() === mode, jslogContext: 'device-mode'});\n    }\n\n    function applyMode(mode: EmulationModel.EmulatedDevices.Mode): void {\n      const scale = autoAdjustScaleSetting.get() ? undefined : model.scaleSetting().get();\n      model.emulate(model.type(), model.device(), mode, scale);\n    }\n  }\n\n  private getPrettyFitZoomPercentage(): string {\n    return `${(this.model.fitScale() * 100).toFixed(0)}`;\n  }\n\n  private getPrettyZoomPercentage(): string {\n    return `${(this.model.scale() * 100).toFixed(0)}`;\n  }\n\n  element(): Element {\n    return this.elementInternal;\n  }\n\n  update(): void {\n    if (this.model.type() !== this.cachedModelType) {\n      this.cachedModelType = this.model.type();\n      this.widthInput.disabled = this.model.type() !== EmulationModel.DeviceModeModel.Type.Responsive;\n\n      this.heightInput.disabled = this.model.type() !== EmulationModel.DeviceModeModel.Type.Responsive;\n      this.deviceScaleItem.setEnabled(this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive);\n      this.uaItem.setEnabled(this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive);\n\n      if (this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive) {\n        this.modeButton.setEnabled(true);\n        setTitleForButton(this.modeButton, i18nString(UIStrings.rotate));\n      } else {\n        this.modeButton.setEnabled(false);\n      }\n    }\n\n    const size = this.model.appliedDeviceSize();\n    this.widthInput.size = String(size.width);\n    this.heightInput.size =\n        this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive && this.model.isFullHeight() ?\n        '' :\n        String(size.height);\n    this.heightInput.placeholder = String(size.height);\n\n    if (this.model.scale() !== this.cachedScale) {\n      this.scaleItem.setText(`${this.getPrettyZoomPercentage()}%`);\n      this.cachedScale = this.model.scale();\n    }\n\n    const deviceScale = this.model.appliedDeviceScaleFactor();\n    if (deviceScale !== this.cachedDeviceScale) {\n      this.deviceScaleItem.setText(`DPR: ${deviceScale.toFixed(1)}`);\n      this.cachedDeviceScale = deviceScale;\n    }\n\n    const uaType = this.model.appliedUserAgentType();\n    if (uaType !== this.cachedUaType) {\n      this.uaItem.setText(uaType);\n      this.cachedUaType = uaType;\n    }\n\n    let deviceItemTitle: string = i18nString(UIStrings.none);\n    if (this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive) {\n      deviceItemTitle = i18nString(UIStrings.responsive);\n    }\n    const device = this.model.device();\n    if (this.model.type() === EmulationModel.DeviceModeModel.Type.Device && device) {\n      deviceItemTitle = device.title;\n    }\n    this.deviceSelectItem.setText(`${i18nString(UIStrings.dimensions)}: ${deviceItemTitle}`);\n\n    if (this.model.device() !== this.cachedModelDevice) {\n      const device = this.model.device();\n      if (device) {\n        const modeCount = device ? device.modes.length : 0;\n        this.modeButton.setEnabled(modeCount >= 2);\n        setTitleForButton(\n            this.modeButton,\n            modeCount === 2 ? i18nString(UIStrings.rotate) : i18nString(UIStrings.screenOrientationOptions));\n      }\n      this.cachedModelDevice = device;\n    }\n\n    if (device?.isDualScreen) {\n      this.spanButton.setVisible(true);\n      this.postureItem.setVisible(false);\n    } else if (device?.isFoldableScreen) {\n      this.spanButton.setVisible(false);\n      this.postureItem.setVisible(true);\n      this.postureItem.setText(this.currentDevicePosture());\n    } else {\n      this.spanButton.setVisible(false);\n      this.postureItem.setVisible(false);\n    }\n    setTitleForButton(this.spanButton, i18nString(UIStrings.toggleDualscreenMode));\n\n    if (this.model.type() === EmulationModel.DeviceModeModel.Type.Device) {\n      this.lastMode.set(\n          (this.model.device() as EmulationModel.EmulatedDevices.EmulatedDevice),\n          (this.model.mode() as EmulationModel.EmulatedDevices.Mode));\n    }\n\n    if (this.model.mode() !== this.cachedModelMode && this.model.type() !== EmulationModel.DeviceModeModel.Type.None) {\n      this.cachedModelMode = this.model.mode();\n      const value = this.persistenceSetting.get();\n      const device = this.model.device();\n      if (device) {\n        value.device = device.title;\n        const mode = this.model.mode();\n        value.orientation = mode ? mode.orientation : '';\n        value.mode = mode ? mode.title : '';\n      } else {\n        value.device = '';\n        value.orientation = '';\n        value.mode = '';\n      }\n      this.persistenceSetting.set(value);\n    }\n  }\n\n  restore(): void {\n    for (const device of this.allDevices()) {\n      if (device.title === this.persistenceSetting.get().device) {\n        for (const mode of device.modes) {\n          if (mode.orientation === this.persistenceSetting.get().orientation &&\n              mode.title === this.persistenceSetting.get().mode) {\n            this.lastMode.set(device, mode);\n            this.emulateDevice(device);\n            return;\n          }\n        }\n      }\n    }\n\n    this.model.emulate(EmulationModel.DeviceModeModel.Type.Responsive, null, null);\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: hidden;\n  align-items: stretch;\n  flex: auto;\n  background-color: var(--app-color-toolbar-background);\n}\n\n.device-mode-toolbar {\n  flex: none;\n  background-color: var(--app-color-toolbar-background);\n  border-bottom: 1px solid var(--sys-color-divider);\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n}\n\n.device-mode-x {\n  margin: 0 1px;\n  font-size: 16px;\n}\n\n.device-mode-empty-toolbar-element {\n  width: 0;\n}\n\ndevtools-toolbar {\n  overflow: hidden;\n  flex: 0 100000 auto;\n  padding: 0 5px;\n\n  &[wrappable] {\n    height: var(--toolbar-height);\n  }\n}\n\ndevtools-toolbar.main-toolbar {\n  margin: 0 auto;\n}\n\ndevtools-toolbar.device-mode-toolbar-options {\n  flex: none;\n}\n\n.device-mode-content-clip {\n  overflow: hidden;\n  flex: auto;\n}\n\n.device-mode-media-container {\n  flex: none;\n  overflow: hidden;\n  box-shadow: inset 0 -1px var(--sys-color-divider);\n}\n\n.device-mode-content-clip:not(.device-mode-outline-visible) .device-mode-media-container {\n  margin-bottom: 20px;\n}\n\n.device-mode-presets-container {\n  flex: 0 0 20px;\n  display: flex;\n}\n\n.device-mode-presets-container-inner {\n  flex: auto;\n  justify-content: center;\n  position: relative;\n  background-color: var(--sys-color-surface1);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.device-mode-presets-container:hover {\n  transition: opacity 0.1s;\n  transition-delay: 50ms;\n  opacity: 100%;\n}\n\n.device-mode-preset-bar-outer {\n  pointer-events: none;\n  display: flex;\n  justify-content: center;\n}\n\n.device-mode-preset-bar {\n  border-left: 2px solid var(--sys-color-divider);\n  border-right: 2px solid var(--sys-color-divider);\n  pointer-events: auto;\n  text-align: center;\n  flex: none;\n  color: var(--sys-color-on-surface);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n  margin-bottom: 1px;\n}\n\n.device-mode-preset-bar:hover {\n  transition: background-color 0.1s;\n  transition-delay: 50ms;\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.device-mode-preset-bar > span {\n  visibility: hidden;\n}\n\n.device-mode-preset-bar:hover > span {\n  transition: visibility 0.1s;\n  transition-delay: 50ms;\n  visibility: visible;\n}\n\n.device-mode-content-area {\n  flex: auto;\n  position: relative;\n  margin: 0;\n}\n\n.device-mode-screen-area {\n  position: absolute;\n  left: 0;\n  right: 0;\n  width: 0;\n  height: 0;\n  background-color: var(--sys-color-inverse-surface);\n}\n\n.device-mode-content-clip:not(.device-mode-outline-visible) .device-mode-screen-area {\n  --override-screen-area-box-shadow: hsl(240deg 3% 84%) 0 0 0 0.5px, hsl(0deg 0% 80% / 40%) 0 0 20px;\n\n  box-shadow: var(--override-screen-area-box-shadow);\n}\n\n.theme-with-dark-background .device-mode-content-clip:not(.device-mode-outline-visible) .device-mode-screen-area,\n:host-context(.theme-with-dark-background) .device-mode-content-clip:not(.device-mode-outline-visible) .device-mode-screen-area {\n  --override-screen-area-box-shadow: rgb(40 40 42) 0 0 0 0.5px, rgb(51 51 51 / 40%) 0 0 20px;\n}\n\n.device-mode-screen-image {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.device-mode-resizer {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  transition: background-color 0.1s ease, opacity 0.1s ease;\n}\n\n.device-mode-resizer:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n  opacity: 100%;\n}\n\n.device-mode-resizer > div {\n  pointer-events: none;\n}\n\n.device-mode-right-resizer {\n  top: 0;\n  bottom: -1px;\n  right: -20px;\n  width: 20px;\n}\n\n.device-mode-left-resizer {\n  top: 0;\n  bottom: -1px;\n  left: -20px;\n  width: 20px;\n  opacity: 0%;\n}\n\n.device-mode-bottom-resizer {\n  left: 0;\n  right: -1px;\n  bottom: -20px;\n  height: 20px;\n}\n\n.device-mode-bottom-right-resizer {\n  inset: 0 -20px -20px 0;\n  background-color: var(--sys-color-surface1);\n}\n\n.device-mode-bottom-left-resizer {\n  inset: 0 0 -20px -20px;\n  opacity: 0%;\n}\n\n.device-mode-right-resizer > div {\n  /* stylelint-disable-next-line custom-property-pattern */\n  content: var(--image-file-resizeHorizontal);\n  width: 6px;\n  height: 26px;\n}\n\n.device-mode-left-resizer > div {\n  /* stylelint-disable-next-line custom-property-pattern */\n  content: var(--image-file-resizeHorizontal);\n  width: 6px;\n  height: 26px;\n}\n\n.device-mode-bottom-resizer > div {\n  /* stylelint-disable-next-line custom-property-pattern */\n  content: var(--image-file-resizeVertical);\n  margin-bottom: -2px;\n  width: 26px;\n  height: 6px;\n}\n\n.device-mode-bottom-right-resizer > div {\n  position: absolute;\n  bottom: 3px;\n  right: 3px;\n  width: 13px;\n  height: 13px;\n  /* stylelint-disable-next-line custom-property-pattern */\n  content: var(--image-file-resizeDiagonal);\n}\n\n.device-mode-bottom-left-resizer > div {\n  position: absolute;\n  bottom: 3px;\n  left: 3px;\n  width: 13px;\n  height: 13px;\n  /* stylelint-disable-next-line custom-property-pattern */\n  content: var(--image-file-resizeDiagonal);\n  transform: rotate(90deg);\n}\n\n.device-mode-page-area {\n  position: absolute;\n  left: 0;\n  right: 0;\n  width: 0;\n  height: 0;\n  display: flex;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.device-mode-ruler {\n  position: absolute;\n  overflow: visible;\n}\n\n.device-mode-ruler-top {\n  height: 20px;\n  right: 0;\n}\n\n.device-mode-ruler-left {\n  width: 20px;\n  bottom: 0;\n}\n\n.device-mode-ruler-content {\n  pointer-events: none;\n  position: absolute;\n  left: -20px;\n  top: -20px;\n}\n\n.device-mode-ruler-top .device-mode-ruler-content {\n  border-top: 1px solid transparent;\n  right: 0;\n  bottom: 20px;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.device-mode-ruler-left .device-mode-ruler-content {\n  border-left: 1px solid transparent;\n  border-top: 1px solid transparent;\n  right: 20px;\n  bottom: 0;\n}\n\n.device-mode-content-clip.device-mode-outline-visible .device-mode-ruler-top .device-mode-ruler-content {\n  border-top: 1px solid var(--sys-color-token-subtle);\n}\n\n.device-mode-content-clip.device-mode-outline-visible .device-mode-ruler-left .device-mode-ruler-content {\n  border-left: 1px solid var(--sys-color-token-subtle);\n  border-top: 1px solid var(--sys-color-token-subtle);\n}\n\n.device-mode-ruler-inner {\n  position: absolute;\n}\n\n.device-mode-ruler-top .device-mode-ruler-inner {\n  inset: 0 0 0 20px;\n  border-bottom: 1px solid var(--sys-color-token-subtle);\n}\n\n.device-mode-ruler-left .device-mode-ruler-inner {\n  inset: 19px 0 0;\n  border-right: 1px solid var(--sys-color-token-subtle);\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.device-mode-ruler-marker {\n  position: absolute;\n}\n\n.device-mode-ruler-top .device-mode-ruler-marker {\n  width: 0;\n  height: 5px;\n  bottom: 0;\n  border-right: 1px solid var(--sys-color-token-subtle);\n  margin-right: -1px;\n}\n\n.device-mode-ruler-top .device-mode-ruler-marker.device-mode-ruler-marker-medium {\n  height: 10px;\n}\n\n.device-mode-ruler-top .device-mode-ruler-marker.device-mode-ruler-marker-large {\n  height: 15px;\n}\n\n.device-mode-ruler-left .device-mode-ruler-marker {\n  height: 0;\n  width: 5px;\n  right: 0;\n  border-bottom: 1px solid var(--sys-color-token-subtle);\n  margin-bottom: -1px;\n}\n\n.device-mode-ruler-left .device-mode-ruler-marker.device-mode-ruler-marker-medium {\n  width: 10px;\n}\n\n.device-mode-ruler-left .device-mode-ruler-marker.device-mode-ruler-marker-large {\n  width: 15px;\n}\n\n.device-mode-ruler-text {\n  color: var(--sys-color-token-subtle);\n  position: relative;\n  pointer-events: auto;\n}\n\n.device-mode-ruler-text:hover {\n  color: var(--sys-color-on-surface);\n}\n\n.device-mode-ruler-top .device-mode-ruler-text {\n  left: 2px;\n  top: -2px;\n}\n\n.device-mode-ruler-left .device-mode-ruler-text {\n  left: -4px;\n  top: -15px;\n  transform: rotate(270deg);\n}\n\n/*# sourceURL=${import.meta.resolve('./deviceModeView.css')} */`;", "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport mediaQueryInspectorStyles from './mediaQueryInspector.css.js';\n\nconst UIStrings = {\n  /**\n   * @description A context menu item/command in the Media Query Inspector of the Device Toolbar.\n   * Takes the user to the source code where this media query actually came from.\n   */\n  revealInSourceCode: 'Reveal in source code',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/emulation/MediaQueryInspector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class MediaQueryInspector extends UI.Widget.Widget implements\n    SDK.TargetManager.SDKModelObserver<SDK.CSSModel.CSSModel> {\n  private readonly mediaThrottler: Common.Throttler.Throttler;\n  private readonly getWidthCallback: () => number;\n  private readonly setWidthCallback: (arg0: number) => void;\n  private scale: number;\n  elementsToMediaQueryModel: WeakMap<Element, MediaQueryUIModel>;\n  elementsToCSSLocations: WeakMap<Element, SDK.CSSModel.CSSLocation[]>;\n  private cssModel?: SDK.CSSModel.CSSModel;\n  private cachedQueryModels?: MediaQueryUIModel[];\n\n  constructor(\n      getWidthCallback: () => number, setWidthCallback: (arg0: number) => void,\n      mediaThrottler: Common.Throttler.Throttler) {\n    super({\n      jslog: `${VisualLogging.mediaInspectorView().track({click: true})}`,\n      useShadowDom: true,\n    });\n    this.registerRequiredCSS(mediaQueryInspectorStyles);\n    this.contentElement.classList.add('media-inspector-view');\n    this.contentElement.addEventListener('click', this.onMediaQueryClicked.bind(this), false);\n    this.contentElement.addEventListener('contextmenu', this.onContextMenu.bind(this), false);\n    this.mediaThrottler = mediaThrottler;\n\n    this.getWidthCallback = getWidthCallback;\n    this.setWidthCallback = setWidthCallback;\n    this.scale = 1;\n\n    this.elementsToMediaQueryModel = new WeakMap();\n    this.elementsToCSSLocations = new WeakMap();\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.CSSModel.CSSModel, this);\n    UI.ZoomManager.ZoomManager.instance().addEventListener(\n        UI.ZoomManager.Events.ZOOM_CHANGED, this.renderMediaQueries.bind(this), this);\n  }\n\n  modelAdded(cssModel: SDK.CSSModel.CSSModel): void {\n    // FIXME: adapt this to multiple targets.\n    if (cssModel.target() !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.cssModel = cssModel;\n    this.cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetAdded, this.scheduleMediaQueriesUpdate, this);\n    this.cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetRemoved, this.scheduleMediaQueriesUpdate, this);\n    this.cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.scheduleMediaQueriesUpdate, this);\n    this.cssModel.addEventListener(SDK.CSSModel.Events.MediaQueryResultChanged, this.scheduleMediaQueriesUpdate, this);\n  }\n\n  modelRemoved(cssModel: SDK.CSSModel.CSSModel): void {\n    if (cssModel !== this.cssModel) {\n      return;\n    }\n    this.cssModel.removeEventListener(SDK.CSSModel.Events.StyleSheetAdded, this.scheduleMediaQueriesUpdate, this);\n    this.cssModel.removeEventListener(SDK.CSSModel.Events.StyleSheetRemoved, this.scheduleMediaQueriesUpdate, this);\n    this.cssModel.removeEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.scheduleMediaQueriesUpdate, this);\n    this.cssModel.removeEventListener(\n        SDK.CSSModel.Events.MediaQueryResultChanged, this.scheduleMediaQueriesUpdate, this);\n    delete this.cssModel;\n  }\n\n  setAxisTransform(scale: number): void {\n    if (Math.abs(this.scale - scale) < 1e-8) {\n      return;\n    }\n    this.scale = scale;\n    this.renderMediaQueries();\n  }\n\n  private onMediaQueryClicked(event: Event): void {\n    const mediaQueryMarker = (event.target as Node).enclosingNodeOrSelfWithClass('media-inspector-bar');\n    if (!mediaQueryMarker) {\n      return;\n    }\n\n    const model = this.elementsToMediaQueryModel.get(mediaQueryMarker);\n    if (!model) {\n      return;\n    }\n    const modelMaxWidth = model.maxWidthExpression();\n    const modelMinWidth = model.minWidthExpression();\n\n    if (model.section() === Section.MAX) {\n      this.setWidthCallback(modelMaxWidth ? modelMaxWidth.computedLength() || 0 : 0);\n      return;\n    }\n    if (model.section() === Section.MIN) {\n      this.setWidthCallback(modelMinWidth ? modelMinWidth.computedLength() || 0 : 0);\n      return;\n    }\n    const currentWidth = this.getWidthCallback();\n    if (modelMinWidth && currentWidth !== modelMinWidth.computedLength()) {\n      this.setWidthCallback(modelMinWidth.computedLength() || 0);\n    } else {\n      this.setWidthCallback(modelMaxWidth ? modelMaxWidth.computedLength() || 0 : 0);\n    }\n  }\n\n  private onContextMenu(event: Event): void {\n    if (!this.cssModel?.isEnabled()) {\n      return;\n    }\n\n    const mediaQueryMarker = (event.target as Node).enclosingNodeOrSelfWithClass('media-inspector-bar');\n    if (!mediaQueryMarker) {\n      return;\n    }\n\n    const locations = this.elementsToCSSLocations.get(mediaQueryMarker) || [];\n    const uiLocations = new Map<string, Workspace.UISourceCode.UILocation>();\n    for (let i = 0; i < locations.length; ++i) {\n      const uiLocation =\n          Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().rawLocationToUILocation(locations[i]);\n      if (!uiLocation) {\n        continue;\n      }\n      const descriptor = typeof uiLocation.columnNumber === 'number' ?\n          Platform.StringUtilities.sprintf(\n              '%s:%d:%d', uiLocation.uiSourceCode.url(), uiLocation.lineNumber + 1, uiLocation.columnNumber + 1) :\n          Platform.StringUtilities.sprintf('%s:%d', uiLocation.uiSourceCode.url(), uiLocation.lineNumber + 1);\n      uiLocations.set(descriptor, uiLocation);\n    }\n\n    const contextMenuItems = [...uiLocations.keys()].sort();\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const subMenuItem = contextMenu.defaultSection().appendSubMenuItem(\n        i18nString(UIStrings.revealInSourceCode), undefined, 'reveal-in-source-list');\n    for (let i = 0; i < contextMenuItems.length; ++i) {\n      const title = contextMenuItems[i];\n      subMenuItem.defaultSection().appendItem(\n          title, this.revealSourceLocation.bind(this, (uiLocations.get(title) as Workspace.UISourceCode.UILocation)),\n          {jslogContext: 'reveal-in-source'});\n    }\n    void contextMenu.show();\n  }\n\n  private revealSourceLocation(location: Workspace.UISourceCode.UILocation): void {\n    void Common.Revealer.reveal(location);\n  }\n\n  private scheduleMediaQueriesUpdate(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n    void this.mediaThrottler.schedule(this.refetchMediaQueries.bind(this));\n  }\n\n  private refetchMediaQueries(): Promise<void> {\n    if (!this.isShowing() || !this.cssModel) {\n      return Promise.resolve();\n    }\n\n    return this.cssModel.getMediaQueries().then(this.rebuildMediaQueries.bind(this));\n  }\n\n  private squashAdjacentEqual(models: MediaQueryUIModel[]): MediaQueryUIModel[] {\n    const filtered = [];\n    for (let i = 0; i < models.length; ++i) {\n      const last = filtered[filtered.length - 1];\n      if (!last?.equals(models[i])) {\n        filtered.push(models[i]);\n      }\n    }\n    return filtered;\n  }\n\n  private rebuildMediaQueries(cssMedias: SDK.CSSMedia.CSSMedia[]): void {\n    let queryModels: MediaQueryUIModel[] = [];\n    for (let i = 0; i < cssMedias.length; ++i) {\n      const cssMedia = cssMedias[i];\n      if (!cssMedia.mediaList) {\n        continue;\n      }\n      for (let j = 0; j < cssMedia.mediaList.length; ++j) {\n        const mediaQuery = cssMedia.mediaList[j];\n        const queryModel = MediaQueryUIModel.createFromMediaQuery(cssMedia, mediaQuery);\n        if (queryModel) {\n          queryModels.push(queryModel);\n        }\n      }\n    }\n    queryModels.sort(compareModels);\n    queryModels = this.squashAdjacentEqual(queryModels);\n\n    let allEqual: (boolean|undefined) = this.cachedQueryModels && this.cachedQueryModels.length === queryModels.length;\n    for (let i = 0; allEqual && i < queryModels.length; ++i) {\n      allEqual = allEqual && this.cachedQueryModels?.[i].equals(queryModels[i]);\n    }\n    if (allEqual) {\n      return;\n    }\n    this.cachedQueryModels = queryModels;\n    this.renderMediaQueries();\n\n    function compareModels(model1: MediaQueryUIModel, model2: MediaQueryUIModel): number {\n      return model1.compareTo(model2);\n    }\n  }\n\n  private renderMediaQueries(): void {\n    if (!this.cachedQueryModels || !this.isShowing()) {\n      return;\n    }\n\n    const markers = [];\n    let lastMarker: {\n      active: boolean,\n      model: MediaQueryUIModel,\n      locations: SDK.CSSModel.CSSLocation[],\n    }|null = null;\n    for (const model of this.cachedQueryModels) {\n      if (lastMarker?.model.dimensionsEqual(model)) {\n        lastMarker.active = lastMarker.active || model.active();\n      } else {\n        lastMarker = {\n          active: model.active(),\n          model,\n          locations: ([] as SDK.CSSModel.CSSLocation[]),\n        };\n        markers.push(lastMarker);\n      }\n      const rawLocation = model.rawLocation();\n      if (rawLocation) {\n        lastMarker.locations.push(rawLocation);\n      }\n    }\n\n    this.contentElement.removeChildren();\n\n    let container: HTMLElement|null = null;\n    for (let i = 0; i < markers.length; ++i) {\n      if (!i || markers[i].model.section() !== markers[i - 1].model.section()) {\n        container = this.contentElement.createChild('div', 'media-inspector-marker-container');\n      }\n      const marker = markers[i];\n      const bar = this.createElementFromMediaQueryModel(marker.model);\n      this.elementsToMediaQueryModel.set(bar, marker.model);\n      this.elementsToCSSLocations.set(bar, marker.locations);\n      bar.classList.toggle('media-inspector-marker-inactive', !marker.active);\n      if (!container) {\n        throw new Error('Could not find container to render media queries into.');\n      }\n      container.appendChild(bar);\n    }\n  }\n\n  private zoomFactor(): number {\n    return UI.ZoomManager.ZoomManager.instance().zoomFactor() / this.scale;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.scheduleMediaQueriesUpdate();\n  }\n\n  private createElementFromMediaQueryModel(model: MediaQueryUIModel): Element {\n    const zoomFactor = this.zoomFactor();\n    const minWidthExpression = model.minWidthExpression();\n    const maxWidthExpression = model.maxWidthExpression();\n    const minWidthValue = minWidthExpression ? (minWidthExpression.computedLength() || 0) / zoomFactor : 0;\n    const maxWidthValue = maxWidthExpression ? (maxWidthExpression.computedLength() || 0) / zoomFactor : 0;\n    const result = document.createElement('div');\n    result.classList.add('media-inspector-bar');\n\n    if (model.section() === Section.MAX) {\n      result.createChild('div', 'media-inspector-marker-spacer');\n      const markerElement = result.createChild('div', 'media-inspector-marker media-inspector-marker-max-width');\n      markerElement.style.width = maxWidthValue + 'px';\n      UI.Tooltip.Tooltip.install(markerElement, model.mediaText());\n      appendLabel(markerElement, model.maxWidthExpression(), false, false);\n      appendLabel(markerElement, model.maxWidthExpression(), true, true);\n      result.createChild('div', 'media-inspector-marker-spacer');\n    }\n\n    if (model.section() === Section.MIN_MAX) {\n      result.createChild('div', 'media-inspector-marker-spacer');\n      const leftElement = result.createChild('div', 'media-inspector-marker media-inspector-marker-min-max-width');\n      leftElement.style.width = (maxWidthValue - minWidthValue) * 0.5 + 'px';\n      UI.Tooltip.Tooltip.install(leftElement, model.mediaText());\n      appendLabel(leftElement, model.maxWidthExpression(), true, false);\n      appendLabel(leftElement, model.minWidthExpression(), false, true);\n      result.createChild('div', 'media-inspector-marker-spacer').style.flex = '0 0 ' + minWidthValue + 'px';\n      const rightElement = result.createChild('div', 'media-inspector-marker media-inspector-marker-min-max-width');\n      rightElement.style.width = (maxWidthValue - minWidthValue) * 0.5 + 'px';\n      UI.Tooltip.Tooltip.install(rightElement, model.mediaText());\n      appendLabel(rightElement, model.minWidthExpression(), true, false);\n      appendLabel(rightElement, model.maxWidthExpression(), false, true);\n      result.createChild('div', 'media-inspector-marker-spacer');\n    }\n\n    if (model.section() === Section.MIN) {\n      const leftElement = result.createChild(\n          'div', 'media-inspector-marker media-inspector-marker-min-width media-inspector-marker-min-width-left');\n      UI.Tooltip.Tooltip.install(leftElement, model.mediaText());\n      appendLabel(leftElement, model.minWidthExpression(), false, false);\n      result.createChild('div', 'media-inspector-marker-spacer').style.flex = '0 0 ' + minWidthValue + 'px';\n      const rightElement = result.createChild(\n          'div', 'media-inspector-marker media-inspector-marker-min-width media-inspector-marker-min-width-right');\n      UI.Tooltip.Tooltip.install(rightElement, model.mediaText());\n      appendLabel(rightElement, model.minWidthExpression(), true, true);\n    }\n\n    function appendLabel(\n        marker: Element, expression: SDK.CSSMedia.CSSMediaQueryExpression|null, atLeft: boolean,\n        leftAlign: boolean): void {\n      if (!expression) {\n        return;\n      }\n      marker\n          .createChild(\n              'div',\n              'media-inspector-marker-label-container ' +\n                  (atLeft ? 'media-inspector-marker-label-container-left' :\n                            'media-inspector-marker-label-container-right'))\n          .createChild(\n              'span',\n              'media-inspector-marker-label ' +\n                  (leftAlign ? 'media-inspector-label-left' : 'media-inspector-label-right'))\n          .textContent = expression.value() + expression.unit();\n    }\n\n    return result;\n  }\n}\n\nexport const enum Section {\n  MAX = 0,\n  MIN_MAX = 1,\n  MIN = 2,\n}\n\nexport class MediaQueryUIModel {\n  private cssMedia: SDK.CSSMedia.CSSMedia;\n  private readonly minWidthExpressionInternal: SDK.CSSMedia.CSSMediaQueryExpression|null;\n  private readonly maxWidthExpressionInternal: SDK.CSSMedia.CSSMediaQueryExpression|null;\n  private readonly activeInternal: boolean;\n  private readonly sectionInternal: Section;\n  private rawLocationInternal?: SDK.CSSModel.CSSLocation|null;\n  constructor(\n      cssMedia: SDK.CSSMedia.CSSMedia, minWidthExpression: SDK.CSSMedia.CSSMediaQueryExpression|null,\n      maxWidthExpression: SDK.CSSMedia.CSSMediaQueryExpression|null, active: boolean) {\n    this.cssMedia = cssMedia;\n    this.minWidthExpressionInternal = minWidthExpression;\n    this.maxWidthExpressionInternal = maxWidthExpression;\n    this.activeInternal = active;\n    if (maxWidthExpression && !minWidthExpression) {\n      this.sectionInternal = Section.MAX;\n    } else if (minWidthExpression && maxWidthExpression) {\n      this.sectionInternal = Section.MIN_MAX;\n    } else {\n      this.sectionInternal = Section.MIN;\n    }\n  }\n\n  static createFromMediaQuery(cssMedia: SDK.CSSMedia.CSSMedia, mediaQuery: SDK.CSSMedia.CSSMediaQuery):\n      MediaQueryUIModel|null {\n    let maxWidthExpression: SDK.CSSMedia.CSSMediaQueryExpression|null = null;\n    let maxWidthPixels: number = Number.MAX_VALUE;\n    let minWidthExpression: SDK.CSSMedia.CSSMediaQueryExpression|null = null;\n    let minWidthPixels: number = Number.MIN_VALUE;\n    const expressions = mediaQuery.expressions();\n    if (!expressions) {\n      return null;\n    }\n\n    for (let i = 0; i < expressions.length; ++i) {\n      const expression = expressions[i];\n      const feature = expression.feature();\n      if (feature.indexOf('width') === -1) {\n        continue;\n      }\n      const pixels = expression.computedLength();\n      if (feature.startsWith('max-') && pixels && pixels < maxWidthPixels) {\n        maxWidthExpression = expression;\n        maxWidthPixels = pixels;\n      } else if (feature.startsWith('min-') && pixels && pixels > minWidthPixels) {\n        minWidthExpression = expression;\n        minWidthPixels = pixels;\n      }\n    }\n    if (minWidthPixels > maxWidthPixels || (!maxWidthExpression && !minWidthExpression)) {\n      return null;\n    }\n\n    return new MediaQueryUIModel(cssMedia, minWidthExpression, maxWidthExpression, mediaQuery.active());\n  }\n\n  equals(other: MediaQueryUIModel): boolean {\n    return this.compareTo(other) === 0;\n  }\n\n  dimensionsEqual(other: MediaQueryUIModel): boolean {\n    const thisMinWidthExpression = this.minWidthExpression();\n    const otherMinWidthExpression = other.minWidthExpression();\n    const thisMaxWidthExpression = this.maxWidthExpression();\n    const otherMaxWidthExpression = other.maxWidthExpression();\n\n    const sectionsEqual = this.section() === other.section();\n    // If there isn't an other min width expression, they aren't equal, so the optional chaining operator is safe to use here.\n    const minWidthEqual = !thisMinWidthExpression ||\n        thisMinWidthExpression.computedLength() === otherMinWidthExpression?.computedLength();\n    const maxWidthEqual = !thisMaxWidthExpression ||\n        thisMaxWidthExpression.computedLength() === otherMaxWidthExpression?.computedLength();\n\n    return sectionsEqual && minWidthEqual && maxWidthEqual;\n  }\n\n  compareTo(other: MediaQueryUIModel): number {\n    if (this.section() !== other.section()) {\n      return this.section() - other.section();\n    }\n    if (this.dimensionsEqual(other)) {\n      const myLocation = this.rawLocation();\n      const otherLocation = other.rawLocation();\n      if (!myLocation && !otherLocation) {\n        return Platform.StringUtilities.compare(this.mediaText(), other.mediaText());\n      }\n      if (myLocation && !otherLocation) {\n        return 1;\n      }\n      if (!myLocation && otherLocation) {\n        return -1;\n      }\n      if (this.active() !== other.active()) {\n        return this.active() ? -1 : 1;\n      }\n\n      if (!myLocation || !otherLocation) {\n        // This conditional never runs, because it's dealt with above, but\n        // TypeScript can't follow that by this point both myLocation and\n        // otherLocation must exist.\n        return 0;\n      }\n\n      return Platform.StringUtilities.compare(myLocation.url, otherLocation.url) ||\n          myLocation.lineNumber - otherLocation.lineNumber || myLocation.columnNumber - otherLocation.columnNumber;\n    }\n\n    const thisMaxWidthExpression = this.maxWidthExpression();\n    const otherMaxWidthExpression = other.maxWidthExpression();\n    const thisMaxLength = thisMaxWidthExpression ? thisMaxWidthExpression.computedLength() || 0 : 0;\n    const otherMaxLength = otherMaxWidthExpression ? otherMaxWidthExpression.computedLength() || 0 : 0;\n\n    const thisMinWidthExpression = this.minWidthExpression();\n    const otherMinWidthExpression = other.minWidthExpression();\n    const thisMinLength = thisMinWidthExpression ? thisMinWidthExpression.computedLength() || 0 : 0;\n    const otherMinLength = otherMinWidthExpression ? otherMinWidthExpression.computedLength() || 0 : 0;\n\n    if (this.section() === Section.MAX) {\n      return otherMaxLength - thisMaxLength;\n    }\n    if (this.section() === Section.MIN) {\n      return thisMinLength - otherMinLength;\n    }\n    return thisMinLength - otherMinLength || otherMaxLength - thisMaxLength;\n  }\n\n  section(): Section {\n    return this.sectionInternal;\n  }\n\n  mediaText(): string {\n    return this.cssMedia.text || '';\n  }\n\n  rawLocation(): SDK.CSSModel.CSSLocation|null {\n    if (!this.rawLocationInternal) {\n      this.rawLocationInternal = this.cssMedia.rawLocation();\n    }\n    return this.rawLocationInternal;\n  }\n\n  minWidthExpression(): SDK.CSSMedia.CSSMediaQueryExpression|null {\n    return this.minWidthExpressionInternal;\n  }\n\n  maxWidthExpression(): SDK.CSSMedia.CSSMediaQueryExpression|null {\n    return this.maxWidthExpressionInternal;\n  }\n\n  active(): boolean {\n    return this.activeInternal;\n  }\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n/* Media query bars */\n\n.media-inspector-view {\n  height: 50px;\n}\n\n.media-inspector-marker-container {\n  height: 14px;\n  margin: 2px 0;\n  position: relative;\n}\n\n.media-inspector-bar {\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  pointer-events: none;\n  position: absolute;\n  inset: 0;\n}\n\n.media-inspector-marker {\n  flex: none;\n  pointer-events: auto;\n  margin: 1px 0;\n  white-space: nowrap;\n  z-index: auto;\n  position: relative;\n}\n\n.media-inspector-marker-spacer {\n  flex: auto;\n}\n\n.media-inspector-marker:hover {\n  margin: -1px 0;\n  opacity: 100%;\n}\n\n.media-inspector-marker-min-width {\n  flex: auto;\n  background-color: var(--sys-color-yellow-container);\n  border-right: 2px solid var(--sys-color-yellow-bright);\n  border-left: 2px solid var(--sys-color-yellow-bright);\n\n  &:hover {\n    background-color: color-mix(in srgb, var(--sys-color-yellow-container), var(--sys-color-yellow-bright) 30%);\n  }\n}\n\n.media-inspector-marker-min-width-right {\n  border-left: 2px solid var(--sys-color-yellow-bright);\n}\n\n.media-inspector-marker-min-width-left {\n  border-right: 2px solid var(--sys-color-yellow-bright);\n}\n\n.media-inspector-marker-min-max-width {\n  background-color: var(--sys-color-tertiary-container);\n  border-left: 2px solid var(--sys-color-tertiary);\n  border-right: 2px solid var(--sys-color-tertiary);\n}\n\n.media-inspector-marker-min-max-width:hover {\n  z-index: 1;\n}\n\n.media-inspector-marker-max-width {\n  background-color: var(--sys-color-inverse-primary);\n  border-right: 2px solid var(--sys-color-primary-bright);\n  border-left: 2px solid var(--sys-color-primary-bright);\n}\n\n/* Clear background colors when query is not active and not hovering */\n\n.media-inspector-marker-inactive .media-inspector-marker-min-width:not(:hover) {\n  background-color: var(--sys-color-surface-yellow);\n}\n\n.media-inspector-marker-inactive .media-inspector-marker-min-max-width:not(:hover) {\n  background-color: color-mix(in srgb, var(--sys-color-tertiary-container), var(--sys-color-cdt-base-container) 30%);\n}\n\n.media-inspector-marker-inactive .media-inspector-marker-max-width:not(:hover) {\n  background-color: var(--sys-color-tonal-container);\n}\n\n/* Media query labels */\n\n.media-inspector-marker-label-container {\n  position: absolute;\n  z-index: 1;\n}\n\n.media-inspector-marker:not(:hover) .media-inspector-marker-label-container {\n  display: none;\n}\n\n.media-inspector-marker-label-container-left {\n  left: -2px;\n}\n\n.media-inspector-marker-label-container-right {\n  right: -2px;\n}\n\n.media-inspector-marker-label {\n  color: var(--sys-color-on-surface);\n  position: absolute;\n  top: 1px;\n  bottom: 0;\n  font-size: 12px;\n  pointer-events: none;\n}\n\n.media-inspector-label-right {\n  right: 4px;\n}\n\n.media-inspector-label-left {\n  left: 4px;\n}\n\n/*# sourceURL=${import.meta.resolve('./mediaQueryInspector.css')} */`;", "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport inspectedPagePlaceholderStyles from './inspectedPagePlaceholder.css.js';\n\nlet inspectedPagePlaceholderInstance: InspectedPagePlaceholder;\n\nexport class InspectedPagePlaceholder extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.Widget>(\n    UI.Widget.Widget) {\n  private updateId?: number;\n  constructor() {\n    super({useShadowDom: true});\n    this.registerRequiredCSS(inspectedPagePlaceholderStyles);\n    UI.ZoomManager.ZoomManager.instance().addEventListener(UI.ZoomManager.Events.ZOOM_CHANGED, this.onResize, this);\n    this.restoreMinimumSize();\n  }\n\n  static instance(opts: {\n    forceNew: null,\n  } = {forceNew: null}): InspectedPagePlaceholder {\n    const {forceNew} = opts;\n    if (!inspectedPagePlaceholderInstance || forceNew) {\n      inspectedPagePlaceholderInstance = new InspectedPagePlaceholder();\n    }\n\n    return inspectedPagePlaceholderInstance;\n  }\n\n  override onResize(): void {\n    if (this.updateId) {\n      this.element.window().cancelAnimationFrame(this.updateId);\n    }\n    this.updateId = this.element.window().requestAnimationFrame(this.update.bind(this, false));\n  }\n\n  restoreMinimumSize(): void {\n    this.setMinimumSize(150, 150);\n  }\n\n  clearMinimumSize(): void {\n    this.setMinimumSize(1, 1);\n  }\n\n  private dipPageRect(): {\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n  } {\n    const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n    const rect = this.element.getBoundingClientRect();\n    const bodyRect = this.element.ownerDocument.body.getBoundingClientRect();\n\n    const left = Math.max(rect.left * zoomFactor, bodyRect.left * zoomFactor);\n    const top = Math.max(rect.top * zoomFactor, bodyRect.top * zoomFactor);\n    const bottom = Math.min(rect.bottom * zoomFactor, bodyRect.bottom * zoomFactor);\n    const right = Math.min(rect.right * zoomFactor, bodyRect.right * zoomFactor);\n\n    return {x: left, y: top, width: right - left, height: bottom - top};\n  }\n\n  update(force?: boolean): void {\n    delete this.updateId;\n    const rect = this.dipPageRect();\n    const bounds = {\n      x: Math.round(rect.x),\n      y: Math.round(rect.y),\n      height: Math.max(1, Math.round(rect.height)),\n      width: Math.max(1, Math.round(rect.width)),\n    };\n    if (force) {\n      // Short term fix for Lighthouse interop.\n      --bounds.height;\n      this.dispatchEventToListeners(Events.UPDATE, bounds);\n      ++bounds.height;\n    }\n    this.dispatchEventToListeners(Events.UPDATE, bounds);\n  }\n}\n\nexport const enum Events {\n  UPDATE = 'Update',\n}\n\nexport interface Bounds {\n  x: number;\n  y: number;\n  height: number;\n  width: number;\n}\n\nexport interface EventTypes {\n  [Events.UPDATE]: Bounds;\n}\n", "// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n/*# sourceURL=${import.meta.resolve('./inspectedPagePlaceholder.css')} */`;"],
  "mappings": "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",
  "names": ["Host", "UI", "SDK", "EmulationModel", "UI", "Common", "Host", "i18n", "Platform", "EmulationModel", "UI", "VisualLogging", "toolbar", "device", "Common", "i18n", "Platform", "UI", "VisualLogging", "UIStrings", "str_", "i18nString", "UIStrings", "str_", "i18nString", "Common", "UI", "document", "window"]
}
