{
  "version": 3,
  "sources": ["emulation-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Emulation from './emulation.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of an action in the emulation tool to toggle device mode\n   */\n  toggleDeviceToolbar: 'Toggle device toolbar',\n  /**\n   * @description Title of an action in the emulation tool to capture screenshot\n   */\n  captureScreenshot: 'Capture screenshot',\n  /**\n   * @description Title of an action in the emulation tool to capture full height screenshot. This\n   * action captures a screenshot of the entire website, not just the visible portion.\n   */\n  captureFullSizeScreenshot: 'Capture full size screenshot',\n  /**\n   * @description Title of an action in the emulation tool to capture a screenshot of just this node.\n   * Node refers to a HTML element/node.\n   */\n  captureNodeScreenshot: 'Capture node screenshot',\n  /**\n   * @description Command in the Device Mode Toolbar, to show media query boundaries in the UI.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n   */\n  showMediaQueries: 'Show media queries',\n  /**\n   * @description A tag of Mobile related settings that can be searched in the command menu if the\n   * user doesn't know the exact name of the tool. Device refers to e.g. phone/tablet.\n   */\n  device: 'device',\n  /**\n   * @description Command in the Device Mode Toolbar, to hide media query boundaries in the UI.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n   */\n  hideMediaQueries: 'Hide media queries',\n  /**\n   * @description Command that shows measuring rulers next to the emulated device.\n   */\n  showRulers: 'Show rulers in the Device Mode toolbar',\n  /**\n   * @description Command that hides measuring rulers next to the emulated device.\n   */\n  hideRulers: 'Hide rulers in the Device Mode toolbar',\n  /**\n   * @description Command that shows a frame (like a picture frame) around the emulated device.\n   */\n  showDeviceFrame: 'Show device frame',\n  /**\n   * @description Command that hides a frame (like a picture frame) around the emulated device.\n   */\n  hideDeviceFrame: 'Hide device frame',\n\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/emulation/emulation-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedEmulationModule: (typeof Emulation|undefined);\n\nasync function loadEmulationModule(): Promise<typeof Emulation> {\n  if (!loadedEmulationModule) {\n    loadedEmulationModule = await import('./emulation.js');\n  }\n  return loadedEmulationModule;\n}\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.MOBILE,\n  actionId: 'emulation.toggle-device-mode',\n  toggleable: true,\n  async loadActionDelegate() {\n    const Emulation = await loadEmulationModule();\n    return new Emulation.DeviceModeWrapper.ActionDelegate();\n  },\n  condition: Root.Runtime.conditions.canDock,\n  title: i18nLazyString(UIStrings.toggleDeviceToolbar),\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_PHONE,\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Shift+Ctrl+M',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Shift+Meta+M',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'emulation.capture-screenshot',\n  category: UI.ActionRegistration.ActionCategory.SCREENSHOT,\n  async loadActionDelegate() {\n    const Emulation = await loadEmulationModule();\n    return new Emulation.DeviceModeWrapper.ActionDelegate();\n  },\n  condition: Root.Runtime.conditions.canDock,\n  title: i18nLazyString(UIStrings.captureScreenshot),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'emulation.capture-full-height-screenshot',\n  category: UI.ActionRegistration.ActionCategory.SCREENSHOT,\n  async loadActionDelegate() {\n    const Emulation = await loadEmulationModule();\n    return new Emulation.DeviceModeWrapper.ActionDelegate();\n  },\n  condition: Root.Runtime.conditions.canDock,\n  title: i18nLazyString(UIStrings.captureFullSizeScreenshot),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'emulation.capture-node-screenshot',\n  category: UI.ActionRegistration.ActionCategory.SCREENSHOT,\n  async loadActionDelegate() {\n    const Emulation = await loadEmulationModule();\n    return new Emulation.DeviceModeWrapper.ActionDelegate();\n  },\n  condition: Root.Runtime.conditions.canDock,\n  title: i18nLazyString(UIStrings.captureNodeScreenshot),\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.MOBILE,\n  settingName: 'show-media-query-inspector',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.showMediaQueries),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.hideMediaQueries),\n    },\n  ],\n  tags: [i18nLazyString(UIStrings.device)],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.MOBILE,\n  settingName: 'emulation.show-rulers',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.showRulers),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.hideRulers),\n    },\n  ],\n  tags: [i18nLazyString(UIStrings.device)],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.MOBILE,\n  settingName: 'emulation.show-device-outline',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.showDeviceFrame),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.hideDeviceFrame),\n    },\n  ],\n  tags: [i18nLazyString(UIStrings.device)],\n});\n\nUI.Toolbar.registerToolbarItem({\n  actionId: 'emulation.toggle-device-mode',\n  condition: Root.Runtime.conditions.canDock,\n  location: UI.Toolbar.ToolbarItemLocation.MAIN_TOOLBAR_LEFT,\n  order: 1,\n  loadItem: undefined,\n  separator: undefined,\n});\n\nCommon.AppProvider.registerAppProvider({\n  async loadAppProvider() {\n    const Emulation = await loadEmulationModule();\n    return Emulation.AdvancedApp.AdvancedAppProvider.instance();\n  },\n  condition: Root.Runtime.conditions.canDock,\n  order: 0,\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.DEVICE_MODE_MENU_SAVE,\n  order: 12,\n  actionId: 'emulation.capture-screenshot',\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.DEVICE_MODE_MENU_SAVE,\n  order: 13,\n  actionId: 'emulation.capture-full-height-screenshot',\n});\n"],
  "mappings": "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",
  "names": []
}
