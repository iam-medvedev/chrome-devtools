{"version":3,"file":"MediaQueryInspector.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/emulation/MediaQueryInspector.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\nimport * as Emulation from './emulation.js';\n\ndescribeWithMockConnection('MediaQueryInspector', () => {\n  const tests = (targetFactory: () => SDK.Target.Target) => {\n    let target: SDK.Target.Target;\n    let throttler: Common.Throttler.Throttler;\n    let onScheduled: () => void;\n    let inspector: Emulation.MediaQueryInspector.MediaQueryInspector;\n\n    beforeEach(() => {\n      target = targetFactory();\n      throttler = new Common.Throttler.Throttler(0);\n      onScheduled = () => {};\n      sinon.stub(throttler, 'schedule').callsFake(async (work: () => (Promise<unknown>), _?: boolean) => {\n        await work();\n        onScheduled();\n        return Promise.resolve();\n      });\n    });\n\n    afterEach(() => {\n      inspector.detach();\n    });\n\n    it('redners media queries', async () => {\n      inspector = new Emulation.MediaQueryInspector.MediaQueryInspector(\n          () => 42,\n          (_: number) => {},\n          throttler,\n      );\n      inspector.markAsRoot();\n      inspector.show(document.body);\n      assert.strictEqual(inspector.contentElement.querySelectorAll('.media-inspector-marker').length, 0);\n\n      const cssModel = target.model(SDK.CSSModel.CSSModel);\n      assertNotNullOrUndefined(cssModel);\n      const CSS_MEDIA = {\n        text: 'foo',\n        source: Protocol.CSS.CSSMediaSource.MediaRule,\n        mediaList: [{expressions: [{value: 42, computedLength: 42, unit: 'UNIT', feature: 'max-width'}], active: true}],\n      } as unknown as Protocol.CSS.CSSMedia;\n      sinon.stub(cssModel, 'getMediaQueries').resolves([new SDK.CSSMedia.CSSMedia(cssModel, CSS_MEDIA)]);\n      cssModel.dispatchEventToListeners(\n          SDK.CSSModel.Events.StyleSheetAdded, {} as SDK.CSSStyleSheetHeader.CSSStyleSheetHeader);\n      await new Promise<void>(resolve => {\n        onScheduled = resolve;\n      });\n      assert.strictEqual(inspector.contentElement.querySelectorAll('.media-inspector-marker').length, 1);\n    });\n  };\n\n  describe('without tab target', () => tests(createTarget));\n  describe('with tab target', () => tests(() => {\n                                const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n                                createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n                                return createTarget({parentTarget: tabTarget});\n                              }));\n});\n"]}