{
  "version": 3,
  "sources": ["test_runner.prebundle.ts", "../../../../../../front_end/legacy_test_runner/test_runner/TestRunner.js"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// @ts-nocheck This file is not checked by TypeScript as it has a lot of legacy code.\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Tracing from '../../services/tracing/tracing.js';\n\nimport * as TestRunner from './TestRunner.js';\n\n/**\n * @param {!SDK.Target.Target} target\n */\nfunction _setupTestHelpers(target) {\n  self.TestRunner.BrowserAgent = target.browserAgent();\n  self.TestRunner.CSSAgent = target.cssAgent();\n  self.TestRunner.DeviceOrientationAgent = target.deviceOrientationAgent();\n  self.TestRunner.DOMAgent = target.domAgent();\n  self.TestRunner.DOMDebuggerAgent = target.domdebuggerAgent();\n  self.TestRunner.DebuggerAgent = target.debuggerAgent();\n  self.TestRunner.EmulationAgent = target.emulationAgent();\n  self.TestRunner.HeapProfilerAgent = target.heapProfilerAgent();\n  self.TestRunner.InputAgent = target.inputAgent();\n  self.TestRunner.InspectorAgent = target.inspectorAgent();\n  self.TestRunner.NetworkAgent = target.networkAgent();\n  self.TestRunner.OverlayAgent = target.overlayAgent();\n  self.TestRunner.PageAgent = target.pageAgent();\n  self.TestRunner.ProfilerAgent = target.profilerAgent();\n  self.TestRunner.RuntimeAgent = target.runtimeAgent();\n  self.TestRunner.TargetAgent = target.targetAgent();\n\n  self.TestRunner.networkManager = target.model(SDK.NetworkManager.NetworkManager);\n  self.TestRunner.securityOriginManager = target.model(SDK.SecurityOriginManager.SecurityOriginManager);\n  self.TestRunner.storageKeyManager = target.model(SDK.StorageKeyManager.StorageKeyManager);\n  self.TestRunner.resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n  self.TestRunner.debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n  self.TestRunner.runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n  self.TestRunner.domModel = target.model(SDK.DOMModel.DOMModel);\n  self.TestRunner.domDebuggerModel = target.model(SDK.DOMDebuggerModel.DOMDebuggerModel);\n  self.TestRunner.cssModel = target.model(SDK.CSSModel.CSSModel);\n  self.TestRunner.cpuProfilerModel = target.model(SDK.CPUProfilerModel.CPUProfilerModel);\n  self.TestRunner.overlayModel = target.model(SDK.OverlayModel.OverlayModel);\n  self.TestRunner.serviceWorkerManager = target.model(SDK.ServiceWorkerManager.ServiceWorkerManager);\n  self.TestRunner.tracingManager = target.model(Tracing.TracingManager.TracingManager);\n  self.TestRunner.mainTarget = target;\n}\n\nexport async function _executeTestScript() {\n  const testScriptURL = /** @type {string} */ (Root.Runtime.Runtime.queryParam('test'));\n  if (TestRunner.isDebugTest()) {\n    /* eslint-disable no-console */\n    TestRunner.setInnerResult(console.log);\n    TestRunner.setInnerCompleteTest(() => console.log('Test completed'));\n    /* eslint-enable no-console */\n\n    // Auto-start unit tests\n    self.test = async function() {\n      await import(testScriptURL);\n    };\n    return;\n  }\n\n  try {\n    await import(testScriptURL);\n  } catch (err) {\n    TestRunner.addResult('TEST ENDED EARLY DUE TO UNCAUGHT ERROR:');\n    TestRunner.addResult(err && err.stack || err);\n    TestRunner.addResult('=== DO NOT COMMIT THIS INTO -expected.txt ===');\n    TestRunner.completeTest();\n  }\n}\n\n/** @type {boolean} */\nlet _startedTest = false;\n\n/**\n * @implements {SDK.TargetManager.Observer}\n */\nexport class _TestObserver {\n  /**\n   * @override\n   * @param {!SDK.Target.Target} target\n   */\n  targetAdded(target) {\n    if (target.id() === 'main' && target.type() === 'frame' ||\n        target.parentTarget()?.type() === 'tab' && target.type() === 'frame' && !target.targetInfo()?.subtype?.length) {\n      _setupTestHelpers(target);\n      if (_startedTest) {\n        return;\n      }\n      _startedTest = true;\n      TestRunner\n          .loadHTML(`\n        <head>\n          <base href=\"${TestRunner.url()}\">\n        </head>\n        <body>\n        </body>\n      `).then(() => _executeTestScript());\n    }\n  }\n\n  /**\n   * @override\n   * @param {!SDK.Target.Target} target\n   */\n  targetRemoved(target) {\n  }\n}\n\nSDK.TargetManager.TargetManager.instance().observeTargets(new _TestObserver());\n\nconst globalTestRunner = self.TestRunner;\nexport {globalTestRunner as TestRunner};\n", "// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// @ts-nocheck This file is not checked by TypeScript as it has a lot of legacy code.\n\nimport * as Common from '../../core/common/common.js';  // eslint-disable-line no-unused-vars\nimport * as ProtocolClient from '../../core/protocol_client/protocol_client.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as CodeHighlighter from '../../ui/components/code_highlighter/code_highlighter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n/**\n * @file using private properties isn't a Closure violation in tests.\n */\n\n/* eslint-disable no-console */\n\n/**\n * @returns {boolean}\n */\nexport function isDebugTest() {\n  return !self.testRunner || Boolean(Root.Runtime.Runtime.queryParam('debugFrontend'));\n}\n\n/**\n * This monkey patches console functions in DevTools context so the console\n * messages are shown in the right places, instead of having all of the console\n * messages printed at the top of the test expectation file (default behavior).\n */\nexport function _printDevToolsConsole() {\n  if (isDebugTest()) {\n    return;\n  }\n  console.log = (...args) => {\n    addResult(`log: ${args}`);\n  };\n  console.error = (...args) => {\n    addResult(`error: ${args}`);\n  };\n  console.info = (...args) => {\n    addResult(`info: ${args}`);\n  };\n  console.assert = (assertionCondition, ...args) => {\n    if (!assertionCondition) {\n      addResult(`ASSERTION FAILURE: ${args.join(' ')}`);\n    }\n  };\n}\n\nself['onerror'] = (message, source, lineno, colno, error) => {\n  addResult('TEST ENDED IN ERROR: ' + error.stack);\n  completeTest();\n};\n(() => {\n  self.addEventListener('unhandledrejection', event => {\n    addResult(`PROMISE FAILURE: ${event.reason.stack ?? event.reason}`);\n    completeTest();\n  });\n})();\n_printDevToolsConsole();\n\n// TODO(crbug.com/1032477): Re-enable once test timeouts are handled in Chromium\n// setTimeout(() => {\n//   addResult('TEST TIMED OUT!');\n//   completeTest();\n// }, 6000);\n\n/** @type {!Array<string>} */\nlet _results = [];\n\nlet _innerAddResult = text => {\n  _results.push(String(text));\n};\n\nexport function setInnerResult(updatedInnerResult) {\n  _innerAddResult = updatedInnerResult;\n}\n\n/**\n * @param {*} text\n */\nexport function addResult(text) {\n  _innerAddResult(text);\n}\n\nlet completed = false;\n\nlet _innerCompleteTest = () => {\n  if (completed) {\n    return;\n  }\n  completed = true;\n  flushResults();\n  self.testRunner.notifyDone();\n};\n\nexport function setInnerCompleteTest(updatedInnerCompleteTest) {\n  _innerCompleteTest = updatedInnerCompleteTest;\n}\n\nexport function completeTest() {\n  _innerCompleteTest();\n}\n\nself.TestRunner = self.TestRunner || {};\nfunction flushResults() {\n  Array.prototype.forEach.call(document.documentElement.childNodes, x => x.remove());\n  const outputElement = document.createElement('div');\n  // Support for svg - add to document, not body, check for style.\n  if (outputElement.style) {\n    outputElement.style.whiteSpace = 'pre';\n    outputElement.style.height = '10px';\n    outputElement.style.overflow = 'hidden';\n  }\n  document.documentElement.appendChild(outputElement);\n  for (let i = 0; i < _results.length; i++) {\n    outputElement.appendChild(document.createTextNode(_results[i]));\n    outputElement.appendChild(document.createElement('br'));\n  }\n  _results = [];\n}\n\n/**\n * @param {!Array<string>} textArray\n */\nexport function addResults(textArray) {\n  if (!textArray) {\n    return;\n  }\n  for (let i = 0, size = textArray.length; i < size; ++i) {\n    addResult(textArray[i]);\n  }\n}\n\n/**\n * @param {!Array<function()>} tests\n */\nexport function runTests(tests) {\n  nextTest();\n\n  function nextTest() {\n    const test = tests.shift();\n    if (!test) {\n      completeTest();\n      return;\n    }\n    addResult('\\ntest: ' + test.name);\n    let testPromise = test();\n    if (!(testPromise instanceof Promise)) {\n      testPromise = Promise.resolve();\n    }\n    testPromise.then(nextTest);\n  }\n}\n\n/**\n * @param {!Object} receiver\n * @param {string} methodName\n * @param {!Function} override\n * @param {boolean=} opt_sticky\n */\nexport function addSniffer(receiver, methodName, override, opt_sticky) {\n  override = safeWrap(override);\n\n  const original = receiver[methodName];\n  if (typeof original !== 'function') {\n    throw new Error('Cannot find method to override: ' + methodName);\n  }\n\n  receiver[methodName] = function(var_args) {\n    let result;\n    try {\n      result = original.apply(this, arguments);\n    } finally {\n      if (!opt_sticky) {\n        receiver[methodName] = original;\n      }\n    }\n    // In case of exception the override won't be called.\n    try {\n      Array.prototype.push.call(arguments, result);\n      override.apply(this, arguments);\n    } catch (e) {\n      throw new Error('Exception in overriden method \\'' + methodName + '\\': ' + e);\n    }\n    return result;\n  };\n}\n\n/**\n * @param {!Object} receiver\n * @param {string} methodName\n * @returns {!Promise<*>}\n */\nexport function addSnifferPromise(receiver, methodName) {\n  return new Promise(function(resolve, reject) {\n    const original = receiver[methodName];\n    if (typeof original !== 'function') {\n      reject('Cannot find method to override: ' + methodName);\n      return;\n    }\n\n    receiver[methodName] = function(var_args) {\n      let result;\n      try {\n        result = original.apply(this, arguments);\n      } finally {\n        receiver[methodName] = original;\n      }\n      // In case of exception the override won't be called.\n      try {\n        Array.prototype.push.call(arguments, result);\n        resolve.apply(this, arguments);\n      } catch (e) {\n        reject('Exception in overridden method \\'' + methodName + '\\': ' + e);\n        completeTest();\n      }\n      return result;\n    };\n  });\n}\n\n/**\n * @param {Text} textNode\n * @param {number=} start\n * @param {number=} end\n * @returns {Text}\n */\nexport function selectTextInTextNode(textNode, start, end) {\n  start = start || 0;\n  end = end || textNode.textContent.length;\n\n  if (start < 0) {\n    start = end + start;\n  }\n\n  const selection = textNode.getComponentSelection();\n  selection.removeAllRanges();\n  const range = textNode.ownerDocument.createRange();\n  range.setStart(textNode, start);\n  range.setEnd(textNode, end);\n  selection.addRange(range);\n  return textNode;\n}\n\n/**\n * @param {string} panel\n * @returns {!Promise.<?UI.Panel.Panel>}\n */\nexport function showPanel(panel) {\n  return UI.ViewManager.ViewManager.instance().showView(panel);\n}\n\n/**\n * @param {string} key\n * @param {boolean=} ctrlKey\n * @param {boolean=} altKey\n * @param {boolean=} shiftKey\n * @param {boolean=} metaKey\n * @returns {!KeyboardEvent}\n */\nexport function createKeyEvent(key, ctrlKey, altKey, shiftKey, metaKey) {\n  return new KeyboardEvent('keydown', {\n    key,\n    bubbles: true,\n    cancelable: true,\n    ctrlKey: Boolean(ctrlKey),\n    altKey: Boolean(altKey),\n    shiftKey: Boolean(shiftKey),\n    metaKey: Boolean(metaKey)\n  });\n}\n\n/**\n * Wraps a test function with an exception filter. Does not work\n * correctly for async functions; use safeAsyncWrap instead.\n * @param {!Function|undefined} func\n * @param {!Function=} onexception\n * @returns {!Function}\n */\nexport function safeWrap(func, onexception) {\n  /**\n   * @this {*}\n   */\n  function result() {\n    if (!func) {\n      return;\n    }\n    const wrapThis = this;\n    try {\n      return func.apply(wrapThis, arguments);\n    } catch (e) {\n      addResult('Exception while running: ' + func + '\\n' + (e.stack || e));\n      if (onexception) {\n        safeWrap(onexception)();\n      } else {\n        completeTest();\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Wraps a test function that returns a Promise with an exception\n * filter. Does not work correctly for functions which don't return\n * a Promise; use safeWrap instead.\n * @param {function(...):Promise<*>} func\n * @returns {function(...):Promise<*>}\n */\nfunction safeAsyncWrap(func) {\n  /**\n   * @this {*}\n   */\n  async function result() {\n    if (!func) {\n      return;\n    }\n    const wrapThis = this;\n    try {\n      return await func.apply(wrapThis, arguments);\n    } catch (e) {\n      addResult('Exception while running: ' + func + '\\n' + (e.stack || e));\n      completeTest();\n    }\n  }\n  return result;\n}\n\n/**\n * @param {!Node} node\n * @returns {string}\n */\nexport function textContentWithLineBreaks(node) {\n  function padding(currentNode) {\n    let result = 0;\n    while (currentNode && currentNode !== node) {\n      if (currentNode.nodeName === 'OL' &&\n          !(currentNode.classList && currentNode.classList.contains('object-properties-section'))) {\n        ++result;\n      }\n      currentNode = currentNode.parentNode;\n    }\n    return Array(result * 4 + 1).join(' ');\n  }\n\n  let buffer = '';\n  let currentNode = node;\n  let ignoreFirst = false;\n  while (currentNode.traverseNextNode(node)) {\n    currentNode = currentNode.traverseNextNode(node);\n    if (currentNode.nodeType === Node.TEXT_NODE && currentNode.parentNode?.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n      buffer += currentNode.nodeValue;\n    } else if (currentNode.nodeName === 'LI' || currentNode.nodeName === 'TR') {\n      if (!ignoreFirst) {\n        buffer += '\\n' + padding(currentNode);\n      } else {\n        ignoreFirst = false;\n      }\n    } else if (currentNode.nodeName === 'STYLE') {\n      currentNode = currentNode.traverseNextNode(node);\n      continue;\n    } else if (currentNode.classList && currentNode.classList.contains('object-properties-section')) {\n      ignoreFirst = true;\n    }\n  }\n  return buffer;\n}\n\n/**\n * @param {!Node} node\n * @returns {string}\n */\nexport function textContentWithLineBreaksTrimmed(node) {\n  // We want to allow single empty lines (2 white space characters), but\n  // compress occurences of 3 or more whitespaces.\n  return textContentWithLineBreaks(node).replace(/\\s{3,}/g, ' ');\n}\n\n/**\n * @param {!Node} node\n * @returns {string}\n */\nexport function textContentWithoutStyles(node) {\n  let buffer = '';\n  let currentNode = node;\n  while (true) {\n    currentNode = currentNode.traverseNextNode(\n        node, currentNode.tagName === 'DEVTOOLS-CSS-LENGTH' || currentNode.tagName === 'DEVTOOLS-ICON');\n    if (!currentNode) {\n      break;\n    }\n    if (currentNode.nodeType === Node.TEXT_NODE && currentNode.parentElement?.tagName !== 'STYLE') {\n      buffer += currentNode.nodeValue;\n    } else if (currentNode.tagName === 'DEVTOOLS-TOOLTIP') {\n      // <devtools-tooltip> holds popover contents in-line in a slot, so its contents appear in textContent. This is\n      // not what the tests expect, so step over its contents entirely.\n      currentNode = currentNode.lastChild?.traverseNextNode(node) ?? currentNode.traverseNextNode(node);\n    } else if (currentNode.nodeName === 'STYLE') {\n      currentNode = currentNode.traverseNextNode(node);\n    }\n  }\n  return buffer;\n}\n\n/**\n * @param {string} code\n * @returns {!Promise<*>}\n */\nexport async function evaluateInPageRemoteObject(code) {\n  const response = await _evaluateInPage(code);\n  return TestRunner.runtimeModel.createRemoteObject(response.result);\n}\n\n/**\n * @param {string} code\n * @param {function(*, !Protocol.Runtime.ExceptionDetails=):void} callback\n */\nexport async function evaluateInPage(code, callback) {\n  const response = await _evaluateInPage(code);\n  safeWrap(callback)(response.result.value, response.exceptionDetails);\n}\n\n/** @type {number} */\nlet _evaluateInPageCounter = 0;\n\n/**\n * @param {string} code\n * @returns {!Promise<undefined|{response: (!SDK.RuntimeModel.RemoteObject|undefined),\n *   exceptionDetails: (!Protocol.Runtime.ExceptionDetails|undefined)}>}\n */\nexport async function _evaluateInPage(code) {\n  const lines = new Error().stack.split('at ');\n\n  // Handles cases where the function is safe wrapped\n  const testScriptURL = /** @type {string} */ (Root.Runtime.Runtime.queryParam('test'));\n  const functionLine = lines.reduce((acc, line) => line.includes(testScriptURL) ? line : acc, lines[lines.length - 2]);\n\n  const components = functionLine.trim().split('/');\n  const source = components[components.length - 1].slice(0, -1).split(':');\n  const fileName = source[0];\n  const sourceURL = `test://evaluations/${_evaluateInPageCounter++}/` + fileName;\n  const lineOffset = parseInt(source[1], 10);\n  code = '\\n'.repeat(lineOffset - 1) + code;\n  if (code.indexOf('sourceURL=') === -1) {\n    code += `//# sourceURL=${sourceURL}`;\n  }\n  const response = await TestRunner.RuntimeAgent.invoke_evaluate({expression: code, objectGroup: 'console'});\n  const error = response.getError();\n  if (error) {\n    addResult('Error: ' + error);\n    completeTest();\n    return;\n  }\n  return response;\n}\n\nfunction logResponseError(response) {\n  let errorMessage = 'Error: ';\n  if (response.getError()) {\n    errorMessage += response.getError();\n  } else if (response.exceptionDetails) {\n    errorMessage += response.exceptionDetails.text;\n    if (response.exceptionDetails.exception) {\n      errorMessage += ' ' + response.exceptionDetails.exception.description;\n    }\n  }\n  addResult(errorMessage);\n}\n\n/**\n * Doesn't append sourceURL to snippets evaluated in inspected page\n * to avoid churning test expectations\n * @param {string} code\n * @param {boolean=} userGesture\n * @returns {!Promise<*>}\n */\nexport async function evaluateInPageAnonymously(code, userGesture) {\n  const response =\n      await TestRunner.RuntimeAgent.invoke_evaluate({expression: code, objectGroup: 'console', userGesture});\n  if (response && !response.exceptionDetails && !response.getError()) {\n    return response.result.value;\n  }\n  logResponseError(response);\n  completeTest();\n}\n\n/**\n * @param {string} code\n * @returns {!Promise<*>}\n */\nexport function evaluateInPagePromise(code) {\n  return new Promise(success => evaluateInPage(code, success));\n}\n\n/**\n * @param {string} code\n * @returns {!Promise<*>}\n */\nexport async function evaluateInPageAsync(code) {\n  const response = await TestRunner.RuntimeAgent.invoke_evaluate(\n      {expression: code, objectGroup: 'console', includeCommandLineAPI: false, awaitPromise: true});\n\n  if (response && !response.exceptionDetails && !response.getError()) {\n    return response.result.value;\n  }\n  logResponseError(response);\n  completeTest();\n}\n\n/**\n * @param {string} name\n * @param {!Array<*>} args\n * @returns {!Promise<*>}\n */\nexport function callFunctionInPageAsync(name, args) {\n  args = args || [];\n  return evaluateInPageAsync(name + '(' + args.map(a => JSON.stringify(a)).join(',') + ')');\n}\n\n/**\n * @param {string} code\n * @param {boolean=} userGesture\n */\nexport function evaluateInPageWithTimeout(code, userGesture) {\n  // FIXME: we need a better way of waiting for chromium events to happen\n  evaluateInPageAnonymously('setTimeout(unescape(\\'' + escape(code) + '\\'), 1)', userGesture);\n}\n\n/**\n * @param {function():*} func\n * @param {function(*):void} callback\n */\nexport function evaluateFunctionInOverlay(func, callback) {\n  const expression = 'internals.evaluateInInspectorOverlay(\"(\" + ' + func + ' + \")()\")';\n  const mainContext = TestRunner.runtimeModel.executionContexts()[0];\n  mainContext\n      .evaluate(\n          {\n            expression,\n            objectGroup: '',\n            includeCommandLineAPI: false,\n            silent: false,\n            returnByValue: true,\n            generatePreview: false\n          },\n          /* userGesture */ false, /* awaitPromise*/ false)\n      .then(result => void callback(result.object.value));\n}\n\n/**\n * @param {boolean} passCondition\n * @param {string} failureText\n */\nexport function check(passCondition, failureText) {\n  if (!passCondition) {\n    addResult('FAIL: ' + failureText);\n  }\n}\n\n/**\n * @param {!Function} callback\n */\nexport function deprecatedRunAfterPendingDispatches(callback) {\n  ProtocolClient.InspectorBackend.test.deprecatedRunAfterPendingDispatches(callback);\n}\n\n/**\n * This ensures a base tag is set so all DOM references\n * are relative to the test file and not the inspected page\n * (i.e. http/tests/devtools/resources/inspected-page.html).\n * @param {string} html\n * @returns {!Promise<*>}\n */\nexport function loadHTML(html) {\n  if (!html.includes('<base')) {\n    // <!DOCTYPE...> tag needs to be first\n    const doctypeRegex = /(<!DOCTYPE.*?>)/i;\n    const baseTag = `<base href=\"${url()}\">`;\n    if (html.match(doctypeRegex)) {\n      html = html.replace(doctypeRegex, '$1' + baseTag);\n    } else {\n      html = baseTag + html;\n    }\n  }\n  html = html.replace(/'/g, '\\\\\\'').replace(/\\n/g, '\\\\n');\n  return evaluateInPageAnonymously(`document.write(\\`${html}\\`);document.close();`);\n}\n\n/**\n * @param {string} path\n * @returns {!Promise<*>}\n */\nexport function addScriptTag(path) {\n  return evaluateInPageAsync(`\n    (function(){\n      let script = document.createElement('script');\n      script.src = '${path}';\n      document.head.append(script);\n      return new Promise(f => script.onload = f);\n    })();\n  `);\n}\n\n/**\n * @param {string} path\n * @returns {!Promise<*>}\n */\nexport function addStylesheetTag(path) {\n  return evaluateInPageAsync(`\n    (function(){\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = '${path}';\n      link.onload = onload;\n      document.head.append(link);\n      let resolve;\n      const promise = new Promise(r => resolve = r);\n      function onload() {\n        // TODO(chenwilliam): It shouldn't be necessary to force\n        // style recalc here but some tests rely on it.\n        window.getComputedStyle(document.body).color;\n        resolve();\n      }\n      return promise;\n    })();\n  `);\n}\n\n/**\n * NOTE you should manually ensure the path is correct. There\n * is no error event triggered if it is incorrect, and this is\n * in line with the standard (crbug 365457).\n * @param {string} path\n * @param {!Object|undefined} options\n * @returns {!Promise<*>}\n */\nexport function addIframe(path, options = {}) {\n  options.id = options.id || '';\n  options.name = options.name || '';\n  return evaluateInPageAsync(`\n    (function(){\n      const iframe = document.createElement('iframe');\n      iframe.src = '${path}';\n      iframe.id = '${options.id}';\n      iframe.name = '${options.name}';\n      document.body.appendChild(iframe);\n      return new Promise(f => iframe.onload = f);\n    })();\n  `);\n}\n\n/**\n * The old test framework executed certain snippets in the inspected page\n * context as part of loading a test helper file.\n *\n * This is deprecated because:\n * 1) it makes the testing API less intuitive (need to read the various *TestRunner.js\n * files to know which helper functions are available in the inspected page).\n * 2) it complicates the test framework's module loading process.\n *\n * In most cases, this is used to set up inspected page functions (e.g. makeSimpleXHR)\n * which should become a *TestRunner method (e.g. NetworkTestRunner.makeSimpleXHR)\n * that calls evaluateInPageAnonymously(...).\n * @param {string} code\n */\nexport async function deprecatedInitAsync(code) {\n  await TestRunner.RuntimeAgent.invoke_evaluate({expression: code, objectGroup: 'console'});\n}\n\n/**\n * @param {string} title\n */\nexport function markStep(title) {\n  addResult('\\nRunning: ' + title);\n}\n\nexport function startDumpingProtocolMessages() {\n  ProtocolClient.InspectorBackend.test.dumpProtocol = self.testRunner.logToStderr.bind(self.testRunner);\n}\n\n/**\n * @param {string} url\n * @param {string} content\n * @param {!SDK.ResourceTreeModel.ResourceTreeFrame} frame\n */\nexport function addScriptForFrame(url, content, frame) {\n  content += '\\n//# sourceURL=' + url;\n  const executionContext = TestRunner.runtimeModel.executionContexts().find(context => context.frameId === frame.id);\n  TestRunner.RuntimeAgent.evaluate(content, 'console', false, false, executionContext.id);\n}\n\nexport const formatters = {\n\n  /**\n   * @param {*} value\n   * @returns {string}\n   */\n  formatAsTypeName(value) {\n    return '<' + typeof value + '>';\n  },\n\n  /**\n   * @param {*} value\n   * @returns {string}\n   */\n  formatAsTypeNameOrNull(value) {\n    if (value === null) {\n      return 'null';\n    }\n    return formatters.formatAsTypeName(value);\n  },\n\n  /**\n   * @param {*} value\n   * @returns {string|!Date}\n   */\n  formatAsRecentTime(value) {\n    if (typeof value !== 'object' || !(value instanceof Date)) {\n      return formatters.formatAsTypeName(value);\n    }\n    const delta = Date.now() - value;\n    return 0 <= delta && delta < 30 * 60 * 1000 ? '<plausible>' : value;\n  },\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  formatAsURL(value) {\n    if (!value) {\n      return value;\n    }\n    const lastIndex = value.lastIndexOf('devtools/');\n    if (lastIndex < 0) {\n      return value;\n    }\n    return '.../' + value.substr(lastIndex);\n  },\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  formatAsDescription(value) {\n    if (!value) {\n      return value;\n    }\n    return '\"' + value.replace(/^function [gs]et /, 'function ') + '\"';\n  },\n};\n\n/**\n * @param {!Object} object\n * @param {!TestRunner.CustomFormatters=} customFormatters\n * @param {string=} prefix\n * @param {string=} firstLinePrefix\n */\nexport function addObject(object, customFormatters, prefix, firstLinePrefix) {\n  prefix = prefix || '';\n  firstLinePrefix = firstLinePrefix || prefix;\n  addResult(firstLinePrefix + '{');\n  const propertyNames = Object.keys(object);\n  propertyNames.sort();\n  for (let i = 0; i < propertyNames.length; ++i) {\n    const prop = propertyNames[i];\n    if (!object.hasOwnProperty(prop)) {\n      continue;\n    }\n    const prefixWithName = '    ' + prefix + prop + ' : ';\n    const propValue = object[prop];\n    if (customFormatters && customFormatters[prop]) {\n      const formatterName = customFormatters[prop];\n      if (formatterName !== 'skip') {\n        const formatter = formatters[formatterName];\n        addResult(prefixWithName + formatter(propValue));\n      }\n    } else {\n      dump(propValue, customFormatters, '    ' + prefix, prefixWithName);\n    }\n  }\n  addResult(prefix + '}');\n}\n\n/**\n * @param {!Array} array\n * @param {!TestRunner.CustomFormatters=} customFormatters\n * @param {string=} prefix\n * @param {string=} firstLinePrefix\n */\nexport function addArray(array, customFormatters, prefix, firstLinePrefix) {\n  prefix = prefix || '';\n  firstLinePrefix = firstLinePrefix || prefix;\n  addResult(firstLinePrefix + '[');\n  for (let i = 0; i < array.length; ++i) {\n    dump(array[i], customFormatters, prefix + '    ');\n  }\n  addResult(prefix + ']');\n}\n\n/**\n * @param {!Node} node\n */\nexport function dumpDeepInnerHTML(node) {\n  /**\n   * @param {string} prefix\n   * @param {!Node} node\n   */\n  function innerHTML(prefix, node) {\n    const openTag = [];\n    if (node.nodeType === Node.TEXT_NODE) {\n      if (!node.parentElement || node.parentElement.nodeName !== 'STYLE') {\n        addResult(node.nodeValue);\n      }\n      return;\n    }\n    openTag.push('<' + node.nodeName);\n    const attrs = node.attributes;\n    for (let i = 0; attrs && i < attrs.length; ++i) {\n      openTag.push(attrs[i].name + '=' + attrs[i].value);\n    }\n\n    openTag.push('>');\n    addResult(prefix + openTag.join(' '));\n    for (let child = node.firstChild; child; child = child.nextSibling) {\n      innerHTML(prefix + '    ', child);\n    }\n    if (node.shadowRoot) {\n      innerHTML(prefix + '    ', node.shadowRoot);\n    }\n    addResult(prefix + '</' + node.nodeName + '>');\n  }\n  innerHTML('', node);\n}\n\n/**\n * @param {!Node} node\n * @returns {string}\n */\nexport function deepTextContent(node) {\n  if (!node) {\n    return '';\n  }\n  if (node.nodeType === Node.TEXT_NODE && node.nodeValue) {\n    return !node.parentElement || node.parentElement.nodeName !== 'STYLE' ? node.nodeValue : '';\n  }\n  let res = '';\n  const children = node.childNodes;\n  for (let i = 0; i < children.length; ++i) {\n    res += deepTextContent(children[i]);\n  }\n  if (node.shadowRoot) {\n    res += deepTextContent(node.shadowRoot);\n  }\n  return res;\n}\n\n/**\n * @param {*} value\n * @param {!TestRunner.CustomFormatters=} customFormatters\n * @param {string=} prefix\n * @param {string=} prefixWithName\n */\nexport function dump(value, customFormatters, prefix, prefixWithName) {\n  prefixWithName = prefixWithName || prefix;\n  if (prefixWithName && prefixWithName.length > 80) {\n    addResult(prefixWithName + 'was skipped due to prefix length limit');\n    return;\n  }\n  if (value === null) {\n    addResult(prefixWithName + 'null');\n  } else if (value && value.constructor && value.constructor.name === 'Array') {\n    addArray(/** @type {!Array} */ (value), customFormatters, prefix, prefixWithName);\n  } else if (typeof value === 'object') {\n    addObject(/** @type {!Object} */ (value), customFormatters, prefix, prefixWithName);\n  } else if (typeof value === 'string') {\n    addResult(prefixWithName + '\"' + value + '\"');\n  } else {\n    addResult(prefixWithName + value);\n  }\n}\n\n/**\n * @param {symbol} eventName\n * @param {!Common.ObjectWrapper.ObjectWrapper} obj\n * @param {function(?):boolean=} condition\n * @returns {!Promise}\n */\nexport function waitForEvent(eventName, obj, condition) {\n  condition = condition || function() {\n    return true;\n  };\n  return new Promise(resolve => {\n    obj.addEventListener(eventName, onEventFired);\n\n    /**\n     * @param {!Common.EventTarget.EventTargetEvent} event\n     */\n    function onEventFired(event) {\n      if (!condition(event.data)) {\n        return;\n      }\n      obj.removeEventListener(eventName, onEventFired);\n      resolve(event.data);\n    }\n  });\n}\n\n/**\n * @param {function(!SDK.Target.Target):boolean} filter\n * @returns {!Promise<!SDK.Target.Target>}\n */\nexport function waitForTarget(filter) {\n  filter = filter || (target => true);\n  for (const target of SDK.TargetManager.TargetManager.instance().targets()) {\n    if (filter(target)) {\n      return Promise.resolve(target);\n    }\n  }\n  return new Promise(fulfill => {\n    const observer = /** @type {!SDK.TargetManager.Observer} */ ({\n      targetAdded: function(target) {\n        if (filter(target)) {\n          SDK.TargetManager.TargetManager.instance().unobserveTargets(observer);\n          fulfill(target);\n        }\n      },\n      targetRemoved: function() {},\n    });\n    SDK.TargetManager.TargetManager.instance().observeTargets(observer);\n  });\n}\n\n/**\n * @param {!SDK.Target.Target} targetToRemove\n * @returns {!Promise<!SDK.Target.Target>}\n */\nexport function waitForTargetRemoved(targetToRemove) {\n  return new Promise(fulfill => {\n    const observer = /** @type {!SDK.TargetManager.Observer} */ ({\n      targetRemoved: function(target) {\n        if (target === targetToRemove) {\n          SDK.TargetManager.TargetManager.instance().unobserveTargets(observer);\n          fulfill(target);\n        }\n      },\n      targetAdded: function() {},\n    });\n    SDK.TargetManager.TargetManager.instance().observeTargets(observer);\n  });\n}\n\n/**\n * @param {!SDK.RuntimeModel.RuntimeModel} runtimeModel\n * @returns {!Promise}\n */\nexport function waitForExecutionContext(runtimeModel) {\n  if (runtimeModel.executionContexts().length) {\n    return Promise.resolve(runtimeModel.executionContexts()[0]);\n  }\n  return runtimeModel.once(SDK.RuntimeModel.Events.ExecutionContextCreated);\n}\n\n/**\n * @param {!SDK.RuntimeModel.ExecutionContext} context\n * @returns {!Promise}\n */\nexport function waitForExecutionContextDestroyed(context) {\n  const runtimeModel = context.runtimeModel;\n  if (runtimeModel.executionContexts().indexOf(context) === -1) {\n    return Promise.resolve();\n  }\n  return waitForEvent(\n      SDK.RuntimeModel.Events.ExecutionContextDestroyed, runtimeModel,\n      destroyedContext => destroyedContext === context);\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @param {string=} message\n */\nexport function assertGreaterOrEqual(a, b, message) {\n  if (a < b) {\n    addResult('FAILED: ' + (message ? message + ': ' : '') + a + ' < ' + b);\n  }\n}\n\nlet _pageLoadedCallback;\n\n/**\n * @param {string} url\n * @param {function():void} callback\n */\nexport function navigate(url, callback) {\n  _pageLoadedCallback = safeWrap(callback);\n  TestRunner.resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, _pageNavigated);\n  // Note: injected <base> means that url is relative to test\n  // and not the inspected page\n  evaluateInPageAnonymously('window.location.replace(\\'' + url + '\\')');\n}\n\n/**\n * @returns {!Promise}\n */\nexport function navigatePromise(url) {\n  return new Promise(fulfill => navigate(url, fulfill));\n}\n\nexport function _pageNavigated() {\n  TestRunner.resourceTreeModel.removeEventListener(SDK.ResourceTreeModel.Events.Load, _pageNavigated);\n  _handlePageLoaded();\n}\n\n/**\n * @param {function():void} callback\n */\nexport function hardReloadPage(callback) {\n  _innerReloadPage(true, undefined, callback);\n}\n\n/**\n * @param {function():void} callback\n */\nexport function reloadPage(callback) {\n  _innerReloadPage(false, undefined, callback);\n}\n\n/**\n * @param {(string|undefined)} injectedScript\n * @param {function():void} callback\n */\nexport function reloadPageWithInjectedScript(injectedScript, callback) {\n  _innerReloadPage(false, injectedScript, callback);\n}\n\n/**\n * @returns {!Promise}\n */\nexport function reloadPagePromise() {\n  return new Promise(fulfill => reloadPage(fulfill));\n}\n\n/**\n * @param {boolean} hardReload\n * @param {(string|undefined)} injectedScript\n * @param {function():void} callback\n */\nexport function _innerReloadPage(hardReload, injectedScript, callback) {\n  _pageLoadedCallback = safeWrap(callback);\n  TestRunner.resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, pageLoaded);\n  TestRunner.resourceTreeModel.reloadPage(hardReload, injectedScript);\n}\n\nexport function pageLoaded() {\n  TestRunner.resourceTreeModel.removeEventListener(SDK.ResourceTreeModel.Events.Load, pageLoaded);\n  addResult('Page reloaded.');\n  _handlePageLoaded();\n}\n\nexport async function _handlePageLoaded() {\n  await waitForExecutionContext(/** @type {!SDK.RuntimeModel.RuntimeModel} */ (TestRunner.runtimeModel));\n  if (_pageLoadedCallback) {\n    const callback = _pageLoadedCallback;\n    _pageLoadedCallback = undefined;\n    callback();\n  }\n}\n\n/**\n * @param {function():void} callback\n */\nexport function waitForPageLoad(callback) {\n  TestRunner.resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, onLoaded);\n\n  function onLoaded() {\n    TestRunner.resourceTreeModel.removeEventListener(SDK.ResourceTreeModel.Events.Load, onLoaded);\n    callback();\n  }\n}\n\n/**\n * @param {function():void} callback\n */\nexport function runWhenPageLoads(callback) {\n  const oldCallback = _pageLoadedCallback;\n  function chainedCallback() {\n    if (oldCallback) {\n      oldCallback();\n    }\n    callback();\n  }\n  _pageLoadedCallback = safeWrap(chainedCallback);\n}\n\n/**\n * @param {!Array<function(function():void)>} testSuite\n */\nexport function runTestSuite(testSuite) {\n  const testSuiteTests = testSuite.slice();\n\n  function runner() {\n    if (!testSuiteTests.length) {\n      completeTest();\n      return;\n    }\n    const nextTest = testSuiteTests.shift();\n    addResult('');\n    addResult(\n        'Running: ' +\n        /function\\s([^(]*)/.exec(nextTest)[1]);\n    safeWrap(nextTest)(runner);\n  }\n  runner();\n}\n\n/**\n * @param {!Array<function():Promise<*>>} testSuite\n */\nexport async function runAsyncTestSuite(testSuite) {\n  for (const nextTest of testSuite) {\n    addResult('');\n    addResult(\n        'Running: ' +\n        /function\\s([^(]*)/.exec(nextTest)[1]);\n    await safeAsyncWrap(nextTest)();\n  }\n\n  completeTest();\n}\n\n/**\n * @param {*} expected\n * @param {*} found\n * @param {string} message\n */\nexport function assertEquals(expected, found, message) {\n  if (expected === found) {\n    return;\n  }\n\n  let error;\n  if (message) {\n    error = 'Failure (' + message + '):';\n  } else {\n    error = 'Failure:';\n  }\n  throw new Error(error + ' expected <' + expected + '> found <' + found + '>');\n}\n\n/**\n * @param {*} found\n * @param {string} message\n */\nexport function assertTrue(found, message) {\n  assertEquals(true, Boolean(found), message);\n}\n\n/**\n * @param {!Object} receiver\n * @param {string} methodName\n * @param {!Function} override\n * @param {boolean=} opt_sticky\n * @returns {!Function}\n */\nexport function override(receiver, methodName, override, opt_sticky) {\n  override = safeWrap(override);\n\n  const original = receiver[methodName];\n  if (typeof original !== 'function') {\n    throw new Error('Cannot find method to override: ' + methodName);\n  }\n\n  receiver[methodName] = function(var_args) {\n    try {\n      return override.apply(this, arguments);\n    } catch (e) {\n      throw new Error('Exception in overriden method \\'' + methodName + '\\': ' + e);\n    } finally {\n      if (!opt_sticky) {\n        receiver[methodName] = original;\n      }\n    }\n  };\n\n  return original;\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function clearSpecificInfoFromStackFrames(text) {\n  let buffer = text.replace(/\\(file:\\/\\/\\/(?:[^)]+\\)|[\\w\\/:-]+)/g, '(...)');\n  buffer = buffer.replace(/\\(http:\\/\\/(?:[^)]+\\)|[\\w\\/:-]+)/g, '(...)');\n  buffer = buffer.replace(/\\(test:\\/\\/(?:[^)]+\\)|[\\w\\/:-]+)/g, '(...)');\n  buffer = buffer.replace(/\\(<anonymous>:[^)]+\\)/g, '(...)');\n  buffer = buffer.replace(/VM\\d+/g, 'VM');\n  return buffer.replace(/\\s*at[^()]+\\(native\\)/g, '');\n}\n\nexport function hideInspectorView() {\n  UI.InspectorView.InspectorView.instance().element.setAttribute('style', 'display:none !important');\n}\n\n/**\n * @returns {?SDK.ResourceTreeModel.ResourceTreeFrame}\n */\nexport function mainFrame() {\n  return TestRunner.resourceTreeModel.mainFrame;\n}\n\nexport class StringOutputStream {\n  /**\n   * @param {function(string):void} callback\n   */\n  constructor(callback) {\n    this.callback = callback;\n    this.buffer = '';\n  }\n\n  /**\n   * @param {string} fileName\n   * @returns {!Promise<boolean>}\n   */\n  async open(fileName) {\n    return true;\n  }\n\n  /**\n   * @param {string} chunk\n   */\n  async write(chunk) {\n    this.buffer += chunk;\n  }\n\n  async close() {\n    this.callback(this.buffer);\n  }\n}\n\n/**\n * @template V\n */\nexport class MockSetting {\n  /**\n   * @param {V} value\n   */\n  constructor(value) {\n    this.value = value;\n  }\n\n  /**\n   * @returns {V}\n   */\n  get() {\n    return this.value;\n  }\n\n  /**\n   * @param {V} value\n   */\n  set(value) {\n    this.value = value;\n  }\n}\n\n/**\n * @param {string} urlSuffix\n * @param {!Workspace.Workspace.projectTypes=} projectType\n * @returns {!Promise}\n */\nexport function waitForUISourceCode(urlSuffix, projectType) {\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @returns {boolean}\n   */\n  function matches(uiSourceCode) {\n    if (projectType && uiSourceCode.project().type() !== projectType) {\n      return false;\n    }\n    if (!projectType && uiSourceCode.project().type() === Workspace.Workspace.projectTypes.Service) {\n      return false;\n    }\n    if (urlSuffix && !uiSourceCode.url().endsWith(urlSuffix)) {\n      return false;\n    }\n    return true;\n  }\n\n  for (const uiSourceCode of Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodes()) {\n    if (urlSuffix && matches(uiSourceCode)) {\n      return Promise.resolve(uiSourceCode);\n    }\n  }\n\n  return waitForEvent(\n      Workspace.Workspace.Events.UISourceCodeAdded, Workspace.Workspace.WorkspaceImpl.instance(), matches);\n}\n\n/**\n * @param {!Function} callback\n */\nexport function waitForUISourceCodeRemoved(callback) {\n  Workspace.Workspace.WorkspaceImpl.instance().once(Workspace.Workspace.Events.UISourceCodeRemoved).then(callback);\n}\n\n/**\n * @param {string=} url\n * @returns {string}\n */\nexport function url(url = '') {\n  const testScriptURL = /** @type {string} */ (\n      Root.Runtime.Runtime.queryParam('inspected_test') || Root.Runtime.Runtime.queryParam('test'));\n\n  // This handles relative (e.g. \"../file\"), root (e.g. \"/resource\"),\n  // absolute (e.g. \"http://\", \"data:\") and empty (e.g. \"\") paths\n  return new URL(url, testScriptURL + '/../').href;\n}\n\n/**\n * @param {string} str\n * @param {string} mimeType\n * @returns {!Promise.<undefined>}\n */\nexport function dumpSyntaxHighlight(str, mimeType) {\n  const node = document.createElement('span');\n  node.textContent = str;\n  return CodeHighlighter.CodeHighlighter.highlightNode(node, mimeType).then(dumpSyntax);\n\n  function dumpSyntax() {\n    const node_parts = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n      if (node.childNodes[i].getAttribute) {\n        node_parts.push(node.childNodes[i].getAttribute('class'));\n      } else {\n        node_parts.push('*');\n      }\n    }\n\n    addResult(str + ': ' + node_parts.join(', '));\n  }\n}\n\n/* this code exists in Platform.StringUtilities but these layout tests\n* cannot import ES modules so we copy the required code in directly as\n* these layout tests are going to be removed in favour of e2e so it's\n* not worth adding ESM support here\n*/\n\n/**\n *\n * @param {string} inputString\n * @param {string} searchString\n * @returns {!Array.<number>}\n */\nconst findIndexesOfSubString = function(inputString, searchString) {\n  const matches = [];\n  let i = inputString.indexOf(searchString);\n  while (i !== -1) {\n    matches.push(i);\n    i = inputString.indexOf(searchString, i + searchString.length);\n  }\n  return matches;\n};\n\n/**\n *\n * @param {string} inputString\n * @returns {!Array.<number>}\n */\nexport const findLineEndingIndexes = function(inputString) {\n  const endings = findIndexesOfSubString(inputString, '\\n');\n  endings.push(inputString.length);\n  return endings;\n};\n\n/**\n * @param {string} querySelector\n */\nexport async function dumpInspectedPageElementText(querySelector) {\n  const value = await evaluateInPageAsync(`document.querySelector('${querySelector}').innerText`);\n  addResult(value);\n}\n\n/**\n * This method blocks until all currently queued live location update handlers are done.\n *\n * Creating and updating live locations causes the update handler of each live location\n * to run. These update handlers are potentially asynchronous and usually cause re-rendering or\n * UI updates. Web tests then check for these updates.\n * To give tests more control, waitForPendingLiveLocationUpdates returns a promise that resolves\n * once all currently-pending updates (at call time) are completed.\n */\nexport async function waitForPendingLiveLocationUpdates() {\n  await Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().pendingLiveLocationChangesPromise();\n  await Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().pendingLiveLocationChangesPromise();\n}\n\n/** @type {!{logToStderr: function(), navigateSecondaryWindow: function(string), notifyDone: function()}|undefined} */\nself.testRunner;\n\nTestRunner.StringOutputStream = StringOutputStream;\nTestRunner.MockSetting = MockSetting;\n\nTestRunner.formatters = formatters;\n\nTestRunner.completeTest = completeTest;\nTestRunner.addResult = addResult;\nTestRunner.addResults = addResults;\nTestRunner.runTests = runTests;\nTestRunner.addSniffer = addSniffer;\nTestRunner.addSnifferPromise = addSnifferPromise;\nTestRunner.showPanel = showPanel;\nTestRunner.createKeyEvent = createKeyEvent;\nTestRunner.safeWrap = safeWrap;\nTestRunner.textContentWithLineBreaks = textContentWithLineBreaks;\nTestRunner.textContentWithLineBreaksTrimmed = textContentWithLineBreaksTrimmed;\nTestRunner.textContentWithoutStyles = textContentWithoutStyles;\nTestRunner.evaluateInPagePromise = evaluateInPagePromise;\nTestRunner.callFunctionInPageAsync = callFunctionInPageAsync;\nTestRunner.evaluateInPageWithTimeout = evaluateInPageWithTimeout;\nTestRunner.evaluateFunctionInOverlay = evaluateFunctionInOverlay;\nTestRunner.check = check;\nTestRunner.deprecatedRunAfterPendingDispatches = deprecatedRunAfterPendingDispatches;\nTestRunner.loadHTML = loadHTML;\nTestRunner.addScriptTag = addScriptTag;\nTestRunner.addStylesheetTag = addStylesheetTag;\nTestRunner.addIframe = addIframe;\nTestRunner.markStep = markStep;\nTestRunner.startDumpingProtocolMessages = startDumpingProtocolMessages;\nTestRunner.addScriptForFrame = addScriptForFrame;\nTestRunner.addObject = addObject;\nTestRunner.addArray = addArray;\nTestRunner.dumpDeepInnerHTML = dumpDeepInnerHTML;\nTestRunner.deepTextContent = deepTextContent;\nTestRunner.dump = dump;\nTestRunner.waitForEvent = waitForEvent;\nTestRunner.waitForTarget = waitForTarget;\nTestRunner.waitForTargetRemoved = waitForTargetRemoved;\nTestRunner.waitForExecutionContext = waitForExecutionContext;\nTestRunner.waitForExecutionContextDestroyed = waitForExecutionContextDestroyed;\nTestRunner.assertGreaterOrEqual = assertGreaterOrEqual;\nTestRunner.navigate = navigate;\nTestRunner.navigatePromise = navigatePromise;\nTestRunner.hardReloadPage = hardReloadPage;\nTestRunner.reloadPage = reloadPage;\nTestRunner.reloadPageWithInjectedScript = reloadPageWithInjectedScript;\nTestRunner.reloadPagePromise = reloadPagePromise;\nTestRunner.pageLoaded = pageLoaded;\nTestRunner.waitForPageLoad = waitForPageLoad;\nTestRunner.runWhenPageLoads = runWhenPageLoads;\nTestRunner.runTestSuite = runTestSuite;\nTestRunner.assertEquals = assertEquals;\nTestRunner.assertTrue = assertTrue;\nTestRunner.override = override;\nTestRunner.clearSpecificInfoFromStackFrames = clearSpecificInfoFromStackFrames;\nTestRunner.hideInspectorView = hideInspectorView;\nTestRunner.mainFrame = mainFrame;\nTestRunner.waitForUISourceCode = waitForUISourceCode;\nTestRunner.waitForUISourceCodeRemoved = waitForUISourceCodeRemoved;\nTestRunner.url = url;\nTestRunner.dumpSyntaxHighlight = dumpSyntaxHighlight;\nTestRunner.evaluateInPageRemoteObject = evaluateInPageRemoteObject;\nTestRunner.evaluateInPage = evaluateInPage;\nTestRunner.evaluateInPageAnonymously = evaluateInPageAnonymously;\nTestRunner.evaluateInPageAsync = evaluateInPageAsync;\nTestRunner.deprecatedInitAsync = deprecatedInitAsync;\nTestRunner.runAsyncTestSuite = runAsyncTestSuite;\nTestRunner.dumpInspectedPageElementText = dumpInspectedPageElementText;\nTestRunner.waitForPendingLiveLocationUpdates = waitForPendingLiveLocationUpdates;\nTestRunner.findLineEndingIndexes = findLineEndingIndexes;\nTestRunner.selectTextInTextNode = selectTextInTextNode;\n\nTestRunner.isScrolledToBottom = UI.UIUtils.isScrolledToBottom;\n"],
  "mappings": "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",
  "names": ["Root", "SDK", "override", "currentNode", "url", "node"]
}
