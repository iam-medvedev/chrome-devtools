{"version":3,"file":"AffectedMetadataAllowedSitesView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/issues/AffectedMetadataAllowedSitesView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAGhD,OAAO,EAAC,qBAAqB,EAAC,MAAM,4BAA4B,CAAC;AAEjE,MAAM,SAAS,GAAG;IAChB;;;;;;OAMG;IACH,aAAa,EAAE,oGAAoG;CACpH,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,mDAAmD,EAAE,SAAS,CAAC,CAAC;AACzG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,OAAO,gCAAiC,SAAQ,qBAAqB;IACtD,wBAAwB,CAAC,KAAa;QACvD,OAAO,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,EAAC,CAAC,EAAE,KAAK,EAAC,CAAC,CAAC;IACzD,CAAC;IAEQ,MAAM;QACb,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC;QAC1D,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE;YAC/B,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACzC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;YAEjD,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACxC,KAAK,EAAE,CAAC;SACT;QACD,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;CACF","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\n\nimport {AffectedResourcesView} from './AffectedResourcesView.js';\n\nconst UIStrings = {\n  /**\n   *@description Label for the the number of affected `Allowed Sites` associated with a\n   *DevTools issue. In this context, `Allowed` refers to permission to access cookies\n   *via the third-party cookie deprecation global metadata, and `Site` is equivalent\n   *to eTLD+1.\n   *See https://developer.mozilla.org/en-US/docs/Glossary/eTLD.\n   */\n  nAllowedSites: '{n, plural, =1 {1 website allowed to access cookies} other {# websites allowed to access cookies}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/AffectedMetadataAllowedSitesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class AffectedMetadataAllowedSitesView extends AffectedResourcesView {\n  protected override getResourceNameWithCount(count: number): Platform.UIString.LocalizedString {\n    return i18nString(UIStrings.nAllowedSites, {n: count});\n  }\n\n  override update(): void {\n    this.clear();\n    const allowedSites = this.issue.getMetadataAllowedSites();\n    let count = 0;\n\n    for (const site of allowedSites) {\n      const row = document.createElement('tr');\n      row.classList.add('affected-resource-directive');\n\n      this.appendIssueDetailCell(row, site);\n      this.affectedResources.appendChild(row);\n      count++;\n    }\n    this.updateAffectedResourceCount(count);\n  }\n}\n"]}