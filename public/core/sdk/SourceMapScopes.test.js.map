{"version":3,"file":"SourceMapScopes.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/SourceMapScopes.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {encodeVlq, OriginalScopeBuilder} from '../../testing/SourceMapEncoder.js';\n\nimport * as SDK from './sdk.js';\n\nconst {decodeOriginalScopes} = SDK.SourceMapScopes;\n\ndescribe('decodeOriginalScopes', () => {\n  it('throws for empty input', () => {\n    assert.throws(() => decodeOriginalScopes([''], []));\n  });\n\n  it('throws for unexpected commas', () => {\n    const brokenScopes = encodeVlq(42) + ',' + encodeVlq(21);\n    assert.throws(() => decodeOriginalScopes([brokenScopes], []), /Unexpected char ','/);\n  });\n\n  it('throws for missing \"end\" item', () => {\n    const brokenScopes = new OriginalScopeBuilder().start(0, 0, 'global').build();\n    assert.throws(() => decodeOriginalScopes([brokenScopes], []), /Malformed/);\n  });\n\n  it('throws if positions of subsequent start/end items are not monotonically increasing', () => {\n    const scopes =\n        new OriginalScopeBuilder().start(0, 40, 'global').start(0, 25, 'function').end(0, 30).end(0, 50).build();\n    assert.throws(() => decodeOriginalScopes([scopes], []), /Malformed/);\n  });\n\n  it('decodes a global scope', () => {\n    const scope = new OriginalScopeBuilder().start(0, 0, 'global').end(5, 0).build();\n\n    const originalScopes = decodeOriginalScopes([scope], []);\n\n    assert.lengthOf(originalScopes, 1);\n    assert.deepEqual(originalScopes[0].start, {line: 0, column: 0});\n    assert.deepEqual(originalScopes[0].end, {line: 5, column: 0});\n    assert.strictEqual(originalScopes[0].kind, 'global');\n  });\n\n  it('ignores all but the first global scope (multiple top-level siblings)', () => {\n    const scope = new OriginalScopeBuilder().start(0, 0, 'global').end(5, 0).start(10, 0, 'global').end(20, 0).build();\n\n    const originalScopes = decodeOriginalScopes([scope], []);\n\n    assert.lengthOf(originalScopes, 1);\n    assert.deepEqual(originalScopes[0].start, {line: 0, column: 0});\n    assert.deepEqual(originalScopes[0].end, {line: 5, column: 0});\n    assert.lengthOf(originalScopes[0].children, 0);\n  });\n\n  it('decodes nested scopes', () => {\n    const scope = new OriginalScopeBuilder()\n                      .start(0, 0, 'global')\n                      .start(2, 5, 'function')\n                      .start(4, 10, 'block')\n                      .end(6, 5)\n                      .end(8, 0)\n                      .end(40, 0)\n                      .build();\n\n    const originalScopes = decodeOriginalScopes([scope], []);\n\n    assert.lengthOf(originalScopes, 1);\n    assert.lengthOf(originalScopes[0].children, 1);\n    assert.lengthOf(originalScopes[0].children[0].children, 1);\n\n    const innerMost = originalScopes[0].children[0].children[0];\n    assert.deepEqual(innerMost.start, {line: 4, column: 10});\n    assert.deepEqual(innerMost.end, {line: 6, column: 5});\n    assert.strictEqual(innerMost.kind, 'block');\n  });\n\n  it('decodes sibling scopes', () => {\n    const scope = new OriginalScopeBuilder()\n                      .start(0, 0, 'global')\n                      .start(2, 5, 'function')\n                      .end(4, 0)\n                      .start(6, 6, 'function')\n                      .end(8, 0)\n                      .end(10, 0)\n                      .build();\n\n    const originalScopes = decodeOriginalScopes([scope], []);\n\n    assert.lengthOf(originalScopes, 1);\n    assert.lengthOf(originalScopes[0].children, 2);\n    assert.strictEqual(originalScopes[0].children[0].kind, 'function');\n    assert.strictEqual(originalScopes[0].children[1].kind, 'function');\n  });\n\n  it('decodes scope names', () => {\n    const scope = new OriginalScopeBuilder()\n                      .start(0, 0, 'global')\n                      .start(2, 5, 'class', 0)\n                      .start(4, 10, 'function', 1)\n                      .end(6, 5)\n                      .end(8, 0)\n                      .end(40, 0)\n                      .build();\n\n    const originalScopes = decodeOriginalScopes([scope], ['FooClass', 'fooMethod']);\n\n    assert.lengthOf(originalScopes, 1);\n    assert.lengthOf(originalScopes[0].children, 1);\n    assert.strictEqual(originalScopes[0].children[0].name, 'FooClass');\n\n    assert.lengthOf(originalScopes[0].children[0].children, 1);\n    assert.strictEqual(originalScopes[0].children[0].children[0].name, 'fooMethod');\n  });\n\n  it('decodes variable names', () => {\n    const scope = new OriginalScopeBuilder()\n                      .start(0, 0, 'global')\n                      .start(2, 5, 'function', 0, [1])\n                      .start(4, 10, 'block', undefined, [2, 3])\n                      .end(6, 5)\n                      .end(8, 0)\n                      .end(40, 0)\n                      .build();\n\n    const originalScopes =\n        decodeOriginalScopes([scope], ['fooFunction', 'functionVarFoo', 'blockVarFoo', 'blockVarBar']);\n\n    assert.lengthOf(originalScopes, 1);\n    assert.lengthOf(originalScopes[0].children, 1);\n    assert.deepEqual(originalScopes[0].children[0].variables, ['functionVarFoo']);\n\n    assert.lengthOf(originalScopes[0].children[0].children, 1);\n    assert.deepEqual(originalScopes[0].children[0].children[0].variables, ['blockVarFoo', 'blockVarBar']);\n  });\n});\n"]}