{"version":3,"file":"SourceMapScopes.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/SourceMapScopes.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {encodeVlq, OriginalScopeBuilder} from '../../testing/SourceMapEncoder.js';\n\nimport * as SDK from './sdk.js';\n\nconst {decodeScopes} = SDK.SourceMapScopes;\n\ndescribe('decodeScopes', () => {\n  describe('original scopes', () => {\n    it('throws for empty input', () => {\n      assert.throws(() => decodeScopes([''], '', []));\n    });\n\n    it('throws for unexpected commas', () => {\n      const brokenScopes = encodeVlq(42) + ',' + encodeVlq(21);\n      assert.throws(() => decodeScopes([brokenScopes], '', []), /Unexpected char ','/);\n    });\n\n    it('throws for missing \"end\" item', () => {\n      const brokenScopes = new OriginalScopeBuilder().start(0, 0, 'global').build();\n      assert.throws(() => decodeScopes([brokenScopes], '', []), /Malformed/);\n    });\n\n    it('throws if positions of subsequent start/end items are not monotonically increasing', () => {\n      const scopes =\n          new OriginalScopeBuilder().start(0, 40, 'global').start(0, 25, 'function').end(0, 30).end(0, 50).build();\n      assert.throws(() => decodeScopes([scopes], '', []), /Malformed/);\n    });\n\n    it('decodes a global scope', () => {\n      const scope = new OriginalScopeBuilder().start(0, 0, 'global').end(5, 0).build();\n\n      const {originalScopes} = decodeScopes([scope], '', []);\n\n      assert.lengthOf(originalScopes, 1);\n      assert.deepEqual(originalScopes[0].start, {line: 0, column: 0});\n      assert.deepEqual(originalScopes[0].end, {line: 5, column: 0});\n      assert.strictEqual(originalScopes[0].kind, 'global');\n    });\n\n    it('ignores all but the first global scope (multiple top-level siblings)', () => {\n      const scope =\n          new OriginalScopeBuilder().start(0, 0, 'global').end(5, 0).start(10, 0, 'global').end(20, 0).build();\n\n      const {originalScopes} = decodeScopes([scope], '', []);\n\n      assert.lengthOf(originalScopes, 1);\n      assert.deepEqual(originalScopes[0].start, {line: 0, column: 0});\n      assert.deepEqual(originalScopes[0].end, {line: 5, column: 0});\n      assert.lengthOf(originalScopes[0].children, 0);\n    });\n\n    it('decodes nested scopes', () => {\n      const scope = new OriginalScopeBuilder()\n                        .start(0, 0, 'global')\n                        .start(2, 5, 'function')\n                        .start(4, 10, 'block')\n                        .end(6, 5)\n                        .end(8, 0)\n                        .end(40, 0)\n                        .build();\n\n      const {originalScopes} = decodeScopes([scope], '', []);\n\n      assert.lengthOf(originalScopes, 1);\n      assert.lengthOf(originalScopes[0].children, 1);\n      assert.lengthOf(originalScopes[0].children[0].children, 1);\n\n      const innerMost = originalScopes[0].children[0].children[0];\n      assert.deepEqual(innerMost.start, {line: 4, column: 10});\n      assert.deepEqual(innerMost.end, {line: 6, column: 5});\n      assert.strictEqual(innerMost.kind, 'block');\n    });\n\n    it('decodes sibling scopes', () => {\n      const scope = new OriginalScopeBuilder()\n                        .start(0, 0, 'global')\n                        .start(2, 5, 'function')\n                        .end(4, 0)\n                        .start(6, 6, 'function')\n                        .end(8, 0)\n                        .end(10, 0)\n                        .build();\n\n      const {originalScopes} = decodeScopes([scope], '', []);\n\n      assert.lengthOf(originalScopes, 1);\n      assert.lengthOf(originalScopes[0].children, 2);\n      assert.strictEqual(originalScopes[0].children[0].kind, 'function');\n      assert.strictEqual(originalScopes[0].children[1].kind, 'function');\n    });\n\n    it('decodes scope names', () => {\n      const scope = new OriginalScopeBuilder()\n                        .start(0, 0, 'global')\n                        .start(2, 5, 'class', 0)\n                        .start(4, 10, 'function', 1)\n                        .end(6, 5)\n                        .end(8, 0)\n                        .end(40, 0)\n                        .build();\n\n      const {originalScopes} = decodeScopes([scope], '', ['FooClass', 'fooMethod']);\n\n      assert.lengthOf(originalScopes, 1);\n      assert.lengthOf(originalScopes[0].children, 1);\n      assert.strictEqual(originalScopes[0].children[0].name, 'FooClass');\n\n      assert.lengthOf(originalScopes[0].children[0].children, 1);\n      assert.strictEqual(originalScopes[0].children[0].children[0].name, 'fooMethod');\n    });\n\n    it('decodes variable names', () => {\n      const scope = new OriginalScopeBuilder()\n                        .start(0, 0, 'global')\n                        .start(2, 5, 'function', 0, [1])\n                        .start(4, 10, 'block', undefined, [2, 3])\n                        .end(6, 5)\n                        .end(8, 0)\n                        .end(40, 0)\n                        .build();\n\n      const {originalScopes} =\n          decodeScopes([scope], '', ['fooFunction', 'functionVarFoo', 'blockVarFoo', 'blockVarBar']);\n\n      assert.lengthOf(originalScopes, 1);\n      assert.lengthOf(originalScopes[0].children, 1);\n      assert.deepEqual(originalScopes[0].children[0].variables, ['functionVarFoo']);\n\n      assert.lengthOf(originalScopes[0].children[0].children, 1);\n      assert.deepEqual(originalScopes[0].children[0].children[0].variables, ['blockVarFoo', 'blockVarBar']);\n    });\n  });\n});\n"]}