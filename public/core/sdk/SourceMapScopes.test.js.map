{"version":3,"file":"SourceMapScopes.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/SourceMapScopes.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {encodeVlq, GeneratedRangeBuilder, OriginalScopeBuilder} from '../../testing/SourceMapEncoder.js';\n\nimport * as SDK from './sdk.js';\n\nconst {decodeOriginalScopes, decodeGeneratedRanges} = SDK.SourceMapScopes;\n\ndescribe('decodeOriginalScopes', () => {\n  it('throws for empty input', () => {\n    assert.throws(() => decodeOriginalScopes([''], []));\n  });\n\n  it('throws for unexpected commas', () => {\n    const brokenScopes = encodeVlq(42) + ',' + encodeVlq(21);\n    assert.throws(() => decodeOriginalScopes([brokenScopes], []), /Unexpected char ','/);\n  });\n\n  it('throws for missing \"end\" item', () => {\n    const names: string[] = [];\n    const brokenScopes = new OriginalScopeBuilder(names).start(0, 0, 'global').build();\n    assert.throws(() => decodeOriginalScopes([brokenScopes], names), /Malformed/);\n  });\n\n  it('throws if positions of subsequent start/end items are not monotonically increasing', () => {\n    const names: string[] = [];\n    const scopes =\n        new OriginalScopeBuilder(names).start(0, 40, 'global').start(0, 25, 'function').end(0, 30).end(0, 50).build();\n    assert.throws(() => decodeOriginalScopes([scopes], names), /Malformed/);\n  });\n\n  it('decodes a global scope', () => {\n    const names: string[] = [];\n    const scope = new OriginalScopeBuilder(names).start(0, 0, 'global').end(5, 0).build();\n\n    const originalScopes = decodeOriginalScopes([scope], names);\n\n    assert.lengthOf(originalScopes, 1);\n    const {root, scopeForItemIndex} = originalScopes[0];\n    assert.deepEqual(root.start, {line: 0, column: 0});\n    assert.deepEqual(root.end, {line: 5, column: 0});\n    assert.strictEqual(root.kind, 'global');\n\n    assert.strictEqual(scopeForItemIndex.get(0), root);\n  });\n\n  it('ignores all but the first global scope (multiple top-level siblings)', () => {\n    const names: string[] = [];\n    const scope =\n        new OriginalScopeBuilder(names).start(0, 0, 'global').end(5, 0).start(10, 0, 'global').end(20, 0).build();\n\n    const originalScopes = decodeOriginalScopes([scope], names);\n\n    assert.lengthOf(originalScopes, 1);\n    const {root, scopeForItemIndex} = originalScopes[0];\n    assert.deepEqual(root.start, {line: 0, column: 0});\n    assert.deepEqual(root.end, {line: 5, column: 0});\n    assert.lengthOf(root.children, 0);\n\n    assert.isUndefined(scopeForItemIndex.get(2));\n  });\n\n  it('decodes nested scopes', () => {\n    const names: string[] = [];\n    const scope = new OriginalScopeBuilder(names)\n                      .start(0, 0, 'global')\n                      .start(2, 5, 'function')\n                      .start(4, 10, 'block')\n                      .end(6, 5)\n                      .end(8, 0)\n                      .end(40, 0)\n                      .build();\n\n    const originalScopes = decodeOriginalScopes([scope], names);\n\n    assert.lengthOf(originalScopes, 1);\n    const {root, scopeForItemIndex} = originalScopes[0];\n    assert.lengthOf(root.children, 1);\n    assert.lengthOf(root.children[0].children, 1);\n    assert.strictEqual(scopeForItemIndex.get(1), root.children[0]);\n\n    const innerMost = root.children[0].children[0];\n    assert.deepEqual(innerMost.start, {line: 4, column: 10});\n    assert.deepEqual(innerMost.end, {line: 6, column: 5});\n    assert.strictEqual(innerMost.kind, 'block');\n    assert.strictEqual(scopeForItemIndex.get(2), innerMost);\n  });\n\n  it('decodes sibling scopes', () => {\n    const names: string[] = [];\n    const scope = new OriginalScopeBuilder(names)\n                      .start(0, 0, 'global')\n                      .start(2, 5, 'function')\n                      .end(4, 0)\n                      .start(6, 6, 'function')\n                      .end(8, 0)\n                      .end(10, 0)\n                      .build();\n\n    const originalScopes = decodeOriginalScopes([scope], names);\n\n    assert.lengthOf(originalScopes, 1);\n    const {root, scopeForItemIndex} = originalScopes[0];\n    assert.lengthOf(root.children, 2);\n    assert.strictEqual(root.children[0].kind, 'function');\n    assert.strictEqual(root.children[1].kind, 'function');\n\n    assert.strictEqual(scopeForItemIndex.get(1), root.children[0]);\n    assert.strictEqual(scopeForItemIndex.get(3), root.children[1]);\n  });\n\n  it('decodes scope names', () => {\n    const names: string[] = [];\n    const scope = new OriginalScopeBuilder(names)\n                      .start(0, 0, 'global')\n                      .start(2, 5, 'class', 'FooClass')\n                      .start(4, 10, 'function', 'fooMethod')\n                      .end(6, 5)\n                      .end(8, 0)\n                      .end(40, 0)\n                      .build();\n\n    const originalScopes = decodeOriginalScopes([scope], names);\n\n    assert.lengthOf(originalScopes, 1);\n    const {root} = originalScopes[0];\n    assert.lengthOf(root.children, 1);\n    assert.strictEqual(root.children[0].name, 'FooClass');\n\n    assert.lengthOf(root.children[0].children, 1);\n    assert.strictEqual(root.children[0].children[0].name, 'fooMethod');\n  });\n\n  it('decodes variable names', () => {\n    const names: string[] = [];\n    const scope = new OriginalScopeBuilder(names)\n                      .start(0, 0, 'global')\n                      .start(2, 5, 'function', 'fooFunction', ['functionVarFoo'])\n                      .start(4, 10, 'block', undefined, ['blockVarFoo', 'blockVarBar'])\n                      .end(6, 5)\n                      .end(8, 0)\n                      .end(40, 0)\n                      .build();\n\n    const originalScopes = decodeOriginalScopes([scope], names);\n\n    assert.lengthOf(originalScopes, 1);\n    const {root} = originalScopes[0];\n    assert.lengthOf(root.children, 1);\n    assert.deepEqual(root.children[0].variables, ['functionVarFoo']);\n\n    assert.lengthOf(root.children[0].children, 1);\n    assert.deepEqual(root.children[0].children[0].variables, ['blockVarFoo', 'blockVarBar']);\n  });\n});\n\ndescribe('decodeGeneratedRanges', () => {\n  it('returns an empty array for empty input', () => {\n    assert.lengthOf(decodeGeneratedRanges('', [], []), 0);\n  });\n\n  it('throws for missing \"end\" item', () => {\n    const brokenRanges = new GeneratedRangeBuilder([]).start(0, 0).build();\n    assert.throws(() => decodeGeneratedRanges(brokenRanges, [], []), /Malformed/);\n  });\n\n  it('decodes a single range', () => {\n    const range = new GeneratedRangeBuilder([]).start(0, 0).end(5, 0).build();\n\n    const [generatedRange] = decodeGeneratedRanges(range, [], []);\n\n    assert.deepEqual(generatedRange.start, {line: 0, column: 0});\n    assert.deepEqual(generatedRange.end, {line: 5, column: 0});\n  });\n\n  it('decodes multiple top-level ranges', () => {\n    const range = new GeneratedRangeBuilder([]).start(0, 0).end(0, 10).start(0, 11).end(0, 20).build();\n\n    const [generatedRange1, generatedRange2] = decodeGeneratedRanges(range, [], []);\n\n    assert.deepEqual(generatedRange1.start, {line: 0, column: 0});\n    assert.deepEqual(generatedRange1.end, {line: 0, column: 10});\n\n    assert.deepEqual(generatedRange2.start, {line: 0, column: 11});\n    assert.deepEqual(generatedRange2.end, {line: 0, column: 20});\n  });\n\n  it('decodes a nested range on a single line', () => {\n    const range = new GeneratedRangeBuilder([]).start(0, 0).start(0, 5).end(0, 10).end(0, 15).build();\n\n    const [generatedRange] = decodeGeneratedRanges(range, [], []);\n\n    assert.deepEqual(generatedRange.start, {line: 0, column: 0});\n    assert.deepEqual(generatedRange.end, {line: 0, column: 15});\n\n    assert.lengthOf(generatedRange.children, 1);\n    assert.deepEqual(generatedRange.children[0].start, {line: 0, column: 5});\n    assert.deepEqual(generatedRange.children[0].end, {line: 0, column: 10});\n  });\n\n  it('decodes sibling ranges on a single line', () => {\n    const range =\n        new GeneratedRangeBuilder([]).start(0, 0).start(0, 5).end(0, 10).start(0, 15).end(0, 20).end(0, 25).build();\n\n    const [generatedRange] = decodeGeneratedRanges(range, [], []);\n\n    assert.deepEqual(generatedRange.start, {line: 0, column: 0});\n    assert.deepEqual(generatedRange.end, {line: 0, column: 25});\n\n    assert.lengthOf(generatedRange.children, 2);\n    assert.deepEqual(generatedRange.children[0].start, {line: 0, column: 5});\n    assert.deepEqual(generatedRange.children[0].end, {line: 0, column: 10});\n    assert.deepEqual(generatedRange.children[1].start, {line: 0, column: 15});\n    assert.deepEqual(generatedRange.children[1].end, {line: 0, column: 20});\n  });\n\n  it('decodes nested and sibling ranges over multiple lines', () => {\n    const range = new GeneratedRangeBuilder([])\n                      .start(0, 0)\n                      .start(5, 0)\n                      .start(10, 8)\n                      .end(15, 4)\n                      .end(20, 0)\n                      .start(25, 4)\n                      .end(30, 0)\n                      .end(35, 0)\n                      .build();\n\n    const [generatedRange] = decodeGeneratedRanges(range, [], []);\n\n    assert.deepEqual(generatedRange.start, {line: 0, column: 0});\n    assert.deepEqual(generatedRange.end, {line: 35, column: 0});\n\n    assert.lengthOf(generatedRange.children, 2);\n    assert.deepEqual(generatedRange.children[0].start, {line: 5, column: 0});\n    assert.deepEqual(generatedRange.children[0].end, {line: 20, column: 0});\n\n    assert.lengthOf(generatedRange.children[0].children, 1);\n    assert.deepEqual(generatedRange.children[0].children[0].start, {line: 10, column: 8});\n    assert.deepEqual(generatedRange.children[0].children[0].end, {line: 15, column: 4});\n\n    assert.deepEqual(generatedRange.children[1].start, {line: 25, column: 4});\n    assert.deepEqual(generatedRange.children[1].end, {line: 30, column: 0});\n  });\n\n  it('throws if the definition references has an invalid source index', () => {\n    const names: string[] = [];\n    const originEncodedScpoes = new OriginalScopeBuilder(names).start(2, 0, 'function').end(5, 0).build();\n    const originalScopes = decodeOriginalScopes([originEncodedScpoes], names);\n    const range =\n        new GeneratedRangeBuilder([]).start(0, 0, {definition: {sourceIdx: 1, scopeIdx: 0}}).end(0, 20).build();\n\n    assert.throws(() => decodeGeneratedRanges(range, originalScopes, []), /Invalid source index/);\n  });\n\n  it('throws if the definition references has an invalid scope index', () => {\n    const names: string[] = [];\n    const originEncodedScpoes = new OriginalScopeBuilder(names).start(2, 0, 'function').end(5, 0).build();\n    const originalScopes = decodeOriginalScopes([originEncodedScpoes], names);\n    const range =\n        new GeneratedRangeBuilder([]).start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 4}}).end(0, 20).build();\n\n    assert.throws(() => decodeGeneratedRanges(range, originalScopes, []), /Invalid original scope index/);\n  });\n\n  it('decodes original scope (definition) references', () => {\n    const names: string[] = [];\n    const originEncodedScpoes =\n        new OriginalScopeBuilder(names).start(0, 0, 'global').start(5, 0, 'function').end(10, 0).end(20, 0).build();\n    const originalScopes = decodeOriginalScopes([originEncodedScpoes], names);\n    const range = new GeneratedRangeBuilder([])\n                      .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                      .start(0, 5, {definition: {sourceIdx: 0, scopeIdx: 1}})\n                      .end(0, 10)\n                      .end(0, 20)\n                      .build();\n\n    const [generatedRange] = decodeGeneratedRanges(range, originalScopes, []);\n\n    assert.strictEqual(generatedRange.originalScope, originalScopes[0].root, 'range does not reference global scope');\n    assert.strictEqual(\n        generatedRange.children[0].originalScope, originalScopes[0].root.children[0],\n        'range does not reference function scope');\n  });\n\n  it('decodes original scope (definition) references across multiple original sources', () => {\n    const names: string[] = [];\n    const originEncodedScopes1 =\n        new OriginalScopeBuilder(names).start(0, 0, 'global').start(5, 0, 'function').end(10, 0).end(20, 0).build();\n    const originEncodedScopes2 =\n        new OriginalScopeBuilder(names).start(0, 0, 'global').start(5, 0, 'function').end(10, 0).end(20, 0).build();\n    const originalScopes = decodeOriginalScopes([originEncodedScopes1, originEncodedScopes2], names);\n    const range = new GeneratedRangeBuilder([])\n                      .start(0, 0)\n                      .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 1}})\n                      .end(0, 5)\n                      .start(0, 10, {definition: {sourceIdx: 1, scopeIdx: 1}})\n                      .end(0, 15)\n                      .end(0, 16)\n                      .build();\n\n    const [generatedRange] = decodeGeneratedRanges(range, originalScopes, []);\n\n    assert.strictEqual(generatedRange.children[0].originalScope, originalScopes[0].root.children[0]);\n    assert.strictEqual(generatedRange.children[1].originalScope, originalScopes[1].root.children[0]);\n  });\n\n  it('throws if an inlined range\\'s callsite references an invalid source index', () => {\n    const names: string[] = [];\n    const originEncodedScpoes = new OriginalScopeBuilder(names).start(2, 0, 'function').end(5, 0).build();\n    const originalScopes = decodeOriginalScopes([originEncodedScpoes], names);\n    const range =\n        new GeneratedRangeBuilder([]).start(0, 0, {callsite: {sourceIdx: 1, line: 0, column: 0}}).end(0, 20).build();\n\n    assert.throws(() => decodeGeneratedRanges(range, originalScopes, []), /Invalid source index/);\n  });\n\n  it('decodes multiple callsite references in the same source file and the same line', () => {\n    const names: string[] = [];\n    const originEncodedScpoes =\n        new OriginalScopeBuilder(names).start(0, 0, 'global').start(1, 0, 'function').end(4, 0).end(10, 0).build();\n    const originalScopes = decodeOriginalScopes([originEncodedScpoes], names);\n    const range =\n        new GeneratedRangeBuilder([])\n            .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n            .start(0, 5, {definition: {sourceIdx: 0, scopeIdx: 1}, callsite: {sourceIdx: 0, line: 6, column: 0}})\n            .end(0, 7)\n            .start(0, 8, {definition: {sourceIdx: 0, scopeIdx: 1}, callsite: {sourceIdx: 0, line: 8, column: 5}})\n            .end(0, 12)\n            .start(0, 13, {definition: {sourceIdx: 0, scopeIdx: 1}, callsite: {sourceIdx: 0, line: 8, column: 15}})\n            .end(0, 18)\n            .end(0, 20)\n            .build();\n\n    const [generatedRange] = decodeGeneratedRanges(range, originalScopes, []);\n\n    assert.lengthOf(generatedRange.children, 3);\n    assert.deepEqual(generatedRange.children[0].callsite, {sourceIndex: 0, line: 6, column: 0});\n    assert.deepEqual(generatedRange.children[1].callsite, {sourceIndex: 0, line: 8, column: 5});\n    assert.deepEqual(generatedRange.children[2].callsite, {sourceIndex: 0, line: 8, column: 15});\n  });\n\n  it('decodes multiple callsite refrences over multiple source files', () => {\n    // A single function in the first file, is called in the first and second file. The bundler inlines both call-sites.\n    const names: string[] = [];\n    const originalEncodedScopes1 =\n        new OriginalScopeBuilder(names).start(0, 0, 'global').start(1, 0, 'function').end(4, 0).end(10, 0).build();\n    const originalEncodedScopes2 = new OriginalScopeBuilder(names).start(0, 0, 'global').end(10, 0).build();\n    const originalScopes = decodeOriginalScopes([originalEncodedScopes1, originalEncodedScopes2], names);\n    const range =\n        new GeneratedRangeBuilder([])\n            .start(\n                0, 0)  // Pseudo root range so we can have multiple global ranges. This will be fixed soon in the spec.\n            .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n            .start(5, 0, {definition: {sourceIdx: 0, scopeIdx: 1}, callsite: {sourceIdx: 0, line: 7, column: 5}})\n            .end(8, 0)\n            .end(20, 0)\n            .start(21, 0, {definition: {sourceIdx: 1, scopeIdx: 0}})\n            .start(22, 0, {definition: {sourceIdx: 0, scopeIdx: 1}, callsite: {sourceIdx: 1, line: 3, column: 7}})\n            .end(25, 0)\n            .end(40, 0)\n            .end(40, 0)\n            .build();\n\n    const [generatedRange] = decodeGeneratedRanges(range, originalScopes, []);\n\n    assert.lengthOf(generatedRange.children, 2);\n    assert.lengthOf(generatedRange.children[0].children, 1);\n    assert.deepEqual(generatedRange.children[0].children[0].callsite, {sourceIndex: 0, line: 7, column: 5});\n\n    assert.lengthOf(generatedRange.children[1].children, 1);\n    assert.deepEqual(generatedRange.children[1].children[0].callsite, {sourceIndex: 1, line: 3, column: 7});\n  });\n\n  it('decodes bindings that are available/unavailable for the full range', () => {\n    const names: string[] = [];\n    const originalEncodedScopes =\n        new OriginalScopeBuilder(names).start(0, 0, 'global', undefined, ['foo', 'bar', 'baz']).end(10, 0).build();\n    const originalScopes = decodeOriginalScopes([originalEncodedScopes], names);\n    const range = new GeneratedRangeBuilder(names)\n                      .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}, bindings: ['x', undefined, 'y']})\n                      .end(0, 100)\n                      .build();\n\n    const [generatedRange] = decodeGeneratedRanges(range, originalScopes, names);\n\n    assert.lengthOf(generatedRange.values, 3);\n    assert.deepEqual(generatedRange.values, ['x', undefined, 'y']);\n  });\n\n  it('decodes bindings that are available with different expressions throughout a range', () => {\n    const names: string[] = [];\n    const originalEncodedScopes =\n        new OriginalScopeBuilder(names).start(0, 0, 'global', undefined, ['foo']).end(10, 0).build();\n    const originalScopes = decodeOriginalScopes([originalEncodedScopes], names);\n    const range = new GeneratedRangeBuilder(names)\n                      .start(0, 0, {\n                        definition: {sourceIdx: 0, scopeIdx: 0},\n                        bindings: [[\n                          {line: 0, column: 0, name: 'x'},\n                          {line: 0, column: 30, name: undefined},\n                          {line: 0, column: 60, name: 'y'},\n                        ]],\n                      })\n                      .end(0, 100)\n                      .build();\n\n    const [generatedRange] = decodeGeneratedRanges(range, originalScopes, names);\n\n    assert.lengthOf(generatedRange.values, 1);\n    assert.deepEqual(generatedRange.values[0], [\n      {from: {line: 0, column: 0}, to: {line: 0, column: 30}, value: 'x'},\n      {from: {line: 0, column: 30}, to: {line: 0, column: 60}, value: undefined},\n      {from: {line: 0, column: 60}, to: {line: 0, column: 100}, value: 'y'},\n    ]);\n  });\n\n  it('decodes the \"isScope\" flag', () => {\n    const range = new GeneratedRangeBuilder([])\n                      .start(0, 0)\n                      .start(5, 0, {isScope: true})\n                      .end(10, 0)\n                      .start(20, 4, {isScope: false})\n                      .end(30, 0)\n                      .end(40, 0)\n                      .build();\n\n    const [generatedRange] = decodeGeneratedRanges(range, [], []);\n    assert.lengthOf(generatedRange.children, 2);\n    assert.isTrue(generatedRange.children[0].isScope);\n    assert.isFalse(generatedRange.children[1].isScope);\n  });\n});\n"]}