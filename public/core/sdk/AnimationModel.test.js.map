{"version":3,"file":"AnimationModel.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/AnimationModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {\n  clearAllMockConnectionResponseHandlers,\n  describeWithMockConnection,\n  setMockConnectionResponseHandler,\n} from '../../testing/MockConnection.js';\n\nimport * as SDK from './sdk.js';\n\nfunction createAnimationPayload(payload: Partial<Protocol.Animation.Animation>): Protocol.Animation.Animation {\n  return {\n    id: '1',\n    name: 'animation-name',\n    pausedState: false,\n    playbackRate: 1,\n    startTime: 0,\n    currentTime: 0,\n    type: Protocol.Animation.AnimationType.CSSAnimation,\n    playState: 'running',\n    ...payload,\n    source: {\n      backendNodeId: 1 as Protocol.DOM.BackendNodeId,\n      delay: 0,\n      endDelay: 0,\n      iterationStart: 0,\n      iterations: 1,\n      duration: 100,\n      direction: 'forward',\n      fill: 'forwards',\n      easing: 'linear',\n      ...(payload.source ? payload.source : null),\n    },\n  };\n}\n\ndescribeWithMockConnection('AnimationModel', () => {\n  afterEach(() => {\n    clearAllMockConnectionResponseHandlers();\n  });\n\n  it('can be instantiated', () => {\n    assert.doesNotThrow(() => {\n      const target = createTarget();\n      new SDK.AnimationModel.AnimationModel(target);\n    });\n  });\n\n  describe('getAnimationGroupForAnimation', () => {\n    const NODE_ID = 1 as Protocol.DOM.NodeId;\n    beforeEach(() => {\n      const stubDOMNode = sinon.createStubInstance(SDK.DOMModel.DOMNode);\n      stubDOMNode.id = NODE_ID;\n      sinon.stub(SDK.AnimationModel.AnimationEffect.prototype, 'node').resolves(stubDOMNode);\n    });\n\n    it('should resolve the containing animation group if the animation with given name and node id exists in the group',\n       async () => {\n         const target = createTarget();\n         const model = new SDK.AnimationModel.AnimationModel(target);\n         const animationGroupStartedPromiseWithResolvers = Promise.withResolvers<void>();\n         model.addEventListener(SDK.AnimationModel.Events.AnimationGroupStarted, () => {\n           animationGroupStartedPromiseWithResolvers.resolve();\n         });\n         void model.animationStarted(createAnimationPayload({name: 'animation-name'}));\n         await animationGroupStartedPromiseWithResolvers.promise;\n\n         const receivedAnimationGroup = await model.getAnimationGroupForAnimation('animation-name', NODE_ID);\n         assert.isNotNull(receivedAnimationGroup);\n       });\n\n    it('should resolve null if there is no animations with matching name', async () => {\n      const target = createTarget();\n      const model = new SDK.AnimationModel.AnimationModel(target);\n      const animationGroupStartedPromiseWithResolvers = Promise.withResolvers<void>();\n      model.addEventListener(SDK.AnimationModel.Events.AnimationGroupStarted, () => {\n        animationGroupStartedPromiseWithResolvers.resolve();\n      });\n      void model.animationStarted(createAnimationPayload({name: 'animation-name'}));\n      await animationGroupStartedPromiseWithResolvers.promise;\n\n      const receivedAnimationGroup = await model.getAnimationGroupForAnimation('not-a-matching-name', NODE_ID);\n      assert.isNull(receivedAnimationGroup);\n    });\n\n    it('should resolve null if there is an animation with the same name but for a different node id', async () => {\n      const target = createTarget();\n      const model = new SDK.AnimationModel.AnimationModel(target);\n      const animationGroupStartedPromiseWithResolvers = Promise.withResolvers<void>();\n      model.addEventListener(SDK.AnimationModel.Events.AnimationGroupStarted, () => {\n        animationGroupStartedPromiseWithResolvers.resolve();\n      });\n      void model.animationStarted(createAnimationPayload({name: 'animation-name'}));\n      await animationGroupStartedPromiseWithResolvers.promise;\n\n      const receivedAnimationGroup =\n          await model.getAnimationGroupForAnimation('animation-name', 9999 as Protocol.DOM.NodeId);\n      assert.isNull(receivedAnimationGroup);\n    });\n  });\n\n  describe('AnimationImpl', () => {\n    it('setPayload should update values returned from the relevant value functions for time based animations',\n       async () => {\n         const target = createTarget();\n         const model = new SDK.AnimationModel.AnimationModel(target);\n         const animationImpl = await SDK.AnimationModel.AnimationImpl.parsePayload(model, {\n           id: '1',\n           name: 'animation-name',\n           pausedState: false,\n           playbackRate: 1,\n           startTime: 0,\n           currentTime: 0,\n           type: Protocol.Animation.AnimationType.CSSAnimation,\n           playState: 'running',\n           source: {\n             delay: 0,\n             endDelay: 0,\n             iterationStart: 0,\n             iterations: 1,\n             duration: 100,\n             direction: 'forward',\n             fill: 'forwards',\n             easing: 'linear',\n           },\n         });\n         assert.strictEqual(animationImpl.name(), 'animation-name');\n         assert.isFalse(animationImpl.paused());\n         assert.strictEqual(animationImpl.playState(), 'running');\n         assert.strictEqual(animationImpl.playbackRate(), 1);\n         assert.strictEqual(animationImpl.startTime(), 0);\n         assert.strictEqual(animationImpl.currentTime(), 0);\n         assert.strictEqual(animationImpl.iterationDuration(), 100);\n         assert.strictEqual(animationImpl.delayOrStartTime(), 0);\n         assert.strictEqual(animationImpl.type(), Protocol.Animation.AnimationType.CSSAnimation);\n\n         await animationImpl.setPayload({\n           id: '1',\n           name: 'updated-name',\n           pausedState: true,\n           playbackRate: 2,\n           startTime: 100,\n           currentTime: 120,\n           type: Protocol.Animation.AnimationType.CSSTransition,\n           playState: 'paused',\n           source: {\n             delay: 10,\n             endDelay: 10,\n             iterationStart: 20,\n             iterations: 2,\n             duration: 120,\n             direction: 'reverse',\n             fill: 'backward',\n             easing: 'ease',\n           },\n         });\n\n         assert.strictEqual(animationImpl.name(), 'updated-name');\n         assert.isTrue(animationImpl.paused());\n         assert.strictEqual(animationImpl.playState(), 'paused');\n         assert.strictEqual(animationImpl.playbackRate(), 2);\n         assert.strictEqual(animationImpl.startTime(), 100);\n         assert.strictEqual(animationImpl.currentTime(), 120);\n         assert.strictEqual(animationImpl.iterationDuration(), 120);\n         assert.strictEqual(animationImpl.delayOrStartTime(), 10);\n         assert.strictEqual(animationImpl.type(), Protocol.Animation.AnimationType.CSSTransition);\n       });\n\n    it('setPayload should update values returned from the relevant value functions for scroll based animations',\n       async () => {\n         setMockConnectionResponseHandler('Runtime.evaluate', () => {\n           return {\n             result: {\n               type: 'number',\n               value: 1,\n             },\n           };\n         });\n         const target = createTarget();\n         const model = new SDK.AnimationModel.AnimationModel(target);\n         const animationImpl = await SDK.AnimationModel.AnimationImpl.parsePayload(model, {\n           id: '1',\n           name: 'animation-name',\n           pausedState: false,\n           playbackRate: 1,\n           startTime: 0,\n           currentTime: 0,\n           type: Protocol.Animation.AnimationType.CSSAnimation,\n           playState: 'running',\n           source: {\n             delay: 0,\n             endDelay: 0,\n             iterationStart: 0,\n             iterations: 1,\n             duration: 100,\n             direction: 'forward',\n             fill: 'forwards',\n             easing: 'linear',\n           },\n           viewOrScrollTimeline: {\n             axis: Protocol.DOM.ScrollOrientation.Vertical,\n             startOffset: 100,\n             endOffset: 200,\n             sourceNodeId: 1 as Protocol.DOM.BackendNodeId,\n           },\n         });\n         assert.strictEqual(animationImpl.name(), 'animation-name');\n         assert.isFalse(animationImpl.paused());\n         assert.strictEqual(animationImpl.playState(), 'running');\n         assert.strictEqual(animationImpl.playbackRate(), 1);\n         assert.strictEqual(animationImpl.startTime(), 100);  // in pixels\n         assert.strictEqual(animationImpl.currentTime(), 0);\n         assert.strictEqual(animationImpl.iterationDuration(), 100);  // in pixels\n         assert.strictEqual(animationImpl.delayOrStartTime(), 100);   // in pixels\n\n         await animationImpl.setPayload({\n           id: '1',\n           name: 'updated-name',\n           pausedState: true,\n           playbackRate: 2,\n           startTime: 0,\n           currentTime: 120,\n           type: Protocol.Animation.AnimationType.CSSAnimation,\n           playState: 'paused',\n           source: {\n             delay: 10,\n             endDelay: 10,\n             iterationStart: 20,\n             iterations: 2,\n             duration: 20,\n             direction: 'reverse',\n             fill: 'backward',\n             easing: 'ease',\n           },\n           viewOrScrollTimeline: {\n             axis: Protocol.DOM.ScrollOrientation.Horizontal,\n             startOffset: 0,\n             endOffset: 100,\n             sourceNodeId: 1 as Protocol.DOM.BackendNodeId,\n           },\n         });\n\n         assert.strictEqual(animationImpl.name(), 'updated-name');\n         assert.isTrue(animationImpl.paused());\n         assert.strictEqual(animationImpl.playState(), 'paused');\n         assert.strictEqual(animationImpl.playbackRate(), 2);\n         assert.strictEqual(animationImpl.startTime(), 0);           // in pixels\n         assert.strictEqual(animationImpl.currentTime(), 120);       // in pixels\n         assert.strictEqual(animationImpl.iterationDuration(), 20);  // in pixels\n         assert.strictEqual(animationImpl.delayOrStartTime(), 0);    // in pixels\n       });\n  });\n\n  describe('ScreenshotCapture', () => {\n    let mockAnimationModel: SDK.AnimationModel.AnimationModel;\n    let mockScreenCaptureModel: SDK.ScreenCaptureModel.ScreenCaptureModel;\n    let startScreencastStub:\n        sinon.SinonStub<Parameters<typeof SDK.ScreenCaptureModel.ScreenCaptureModel.prototype.startScreencast>>;\n\n    beforeEach(() => {\n      startScreencastStub = sinon.stub();\n      mockAnimationModel = sinon.createStubInstance(SDK.AnimationModel.AnimationModel);\n      mockScreenCaptureModel = sinon.createStubInstance(SDK.ScreenCaptureModel.ScreenCaptureModel, {\n        startScreencast: startScreencastStub,\n      });\n    });\n\n    it('should call `screenCaptureModel.startScreencast` on `captureScreenshots` call', async () => {\n      const screenshotCapture = new SDK.AnimationModel.ScreenshotCapture(mockAnimationModel, mockScreenCaptureModel);\n\n      await screenshotCapture.captureScreenshots(100, []);\n      await screenshotCapture.captureScreenshots(100, []);\n\n      sinon.assert.calledOnce(startScreencastStub);\n    });\n  });\n});\n"]}