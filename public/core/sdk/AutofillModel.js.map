{"version":3,"file":"AutofillModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/AutofillModel.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAI7B,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AAExC,OAAO,EAAC,QAAQ,EAAC,MAAM,eAAe,CAAC;AAGvC,MAAM,OAAO,aAAc,SAAQ,QAAoB;IAC5C,KAAK,CAA+B;IAC7C,QAAQ,CAAW;IAEnB,YAAY,MAAc;QACxB,KAAK,CAAC,MAAM,CAAC,CAAC;QAEd,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;QACpC,MAAM,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,EAAE;YAC7D,OAAO;SACR;QACD,KAAK,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,EAAE;YAC9D,OAAO;SACR;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,KAAK,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;IACnC,CAAC;IAED,iBAAiB,CAAC,sBAAgE;QAChF,IAAI,CAAC,wBAAwB,qDAA2B,EAAC,aAAa,EAAE,IAAI,EAAE,KAAK,EAAE,sBAAsB,EAAC,CAAC,CAAC;IAChH,CAAC;CACF;AAED,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAC,YAAY,wBAAgB,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Host from '../host/host.js';\n\nimport {SDKModel} from './SDKModel.js';\nimport {Capability, type Target} from './Target.js';\n\nexport class AutofillModel extends SDKModel<EventTypes> implements ProtocolProxyApi.AutofillDispatcher {\n  readonly agent: ProtocolProxyApi.AutofillApi;\n  #enabled?: boolean;\n\n  constructor(target: Target) {\n    super(target);\n\n    this.agent = target.autofillAgent();\n    target.registerAutofillDispatcher(this);\n    this.enable();\n  }\n\n  enable(): void {\n    if (this.#enabled || Host.InspectorFrontendHost.isUnderTest()) {\n      return;\n    }\n    void this.agent.invoke_enable();\n    this.#enabled = true;\n  }\n\n  disable(): void {\n    if (!this.#enabled || Host.InspectorFrontendHost.isUnderTest()) {\n      return;\n    }\n    this.#enabled = false;\n    void this.agent.invoke_disable();\n  }\n\n  addressFormFilled(addressFormFilledEvent: Protocol.Autofill.AddressFormFilledEvent): void {\n    this.dispatchEventToListeners(Events.AddressFormFilled, {autofillModel: this, event: addressFormFilledEvent});\n  }\n}\n\nSDKModel.register(AutofillModel, {capabilities: Capability.DOM, autostart: true});\n\nexport const enum Events {\n  AddressFormFilled = 'AddressFormFilled',\n}\n\nexport interface AddressFormFilledEvent {\n  autofillModel: AutofillModel;\n  event: Protocol.Autofill.AddressFormFilledEvent;\n}\n\nexport type EventTypes = {\n  [Events.AddressFormFilled]: AddressFormFilledEvent,\n};\n"]}