{"version":3,"file":"AutofillModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/AutofillModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Host from '../host/host.js';\n\nimport {SDKModel} from './SDKModel.js';\nimport {Capability, type Target} from './Target.js';\n\nexport class AutofillModel extends SDKModel<EventTypes> implements ProtocolProxyApi.AutofillDispatcher {\n  readonly agent: ProtocolProxyApi.AutofillApi;\n  #enabled?: boolean;\n\n  constructor(target: Target) {\n    super(target);\n\n    this.agent = target.autofillAgent();\n    target.registerAutofillDispatcher(this);\n    this.enable();\n  }\n\n  enable(): void {\n    if (this.#enabled || Host.InspectorFrontendHost.isUnderTest()) {\n      return;\n    }\n    void this.agent.invoke_enable();\n    void this.agent.invoke_setAddresses({\n      addresses: [\n        {\n          fields: [\n            {name: 'ADDRESS_HOME_COUNTRY', value: 'US'},\n            {name: 'NAME_FULL', value: 'Jon Stewart Doe'},\n            {name: 'NAME_FIRST', value: 'Jon'},\n            {name: 'NAME_MIDDLE', value: 'Stewart'},\n            {name: 'NAME_LAST', value: 'Doe'},\n            {name: 'COMPANY_NAME', value: 'Fake Company'},\n            {name: 'ADDRESS_HOME_LINE1', value: '1600 Fake Street'},\n            {name: 'ADDRESS_HOME_LINE2', value: 'Apartment 1'},\n            {name: 'ADDRESS_HOME_ZIP', value: '94043'},\n            {name: 'ADDRESS_HOME_CITY', value: 'Mountain View'},\n            {name: 'ADDRESS_HOME_STATE', value: 'CA'},\n            {name: 'EMAIL_ADDRESS', value: 'test@example.us'},\n            {name: 'PHONE_HOME_WHOLE_NUMBER', value: '+16019521325'},\n          ],\n        },\n        {\n          fields: [\n            {name: 'ADDRESS_HOME_COUNTRY', value: 'BR'},\n            {name: 'NAME_FULL', value: 'João Souza Silva'},\n            {name: 'NAME_FIRST', value: 'João'},\n            {name: 'NAME_LAST', value: 'Souza Silva'},\n            {name: 'NAME_LAST_FIRST', value: 'Souza'},\n            {name: 'NAME_LAST_SECOND', value: 'Silva'},\n            {name: 'COMPANY_NAME', value: 'Empresa Falsa'},\n            {name: 'ADDRESS_HOME_STREET_ADDRESS', value: 'Rua Inexistente, 2000\\nAndar 2, Apartamento 1'},\n            {name: 'ADDRESS_HOME_STREET_LOCATION', value: 'Rua Inexistente, 2000'},\n            {name: 'ADDRESS_HOME_STREET_NAME', value: 'Rua Inexistente'},\n            {name: 'ADDRESS_HOME_HOUSE_NUMBER', value: '2000'},\n            {name: 'ADDRESS_HOME_SUBPREMISE', value: 'Andar 2, Apartamento 1'},\n            {name: 'ADDRESS_HOME_APT_NUM', value: '1'},\n            {name: 'ADDRESS_HOME_FLOOR', value: '2'},\n            {name: 'ADDRESS_HOME_APT', value: 'Apartamento 1'},\n            {name: 'ADDRESS_HOME_APT_TYPE', value: 'Apartamento'},\n            {name: 'ADDRESS_HOME_APT_NUM', value: '1'},\n            {name: 'ADDRESS_HOME_DEPENDENT_LOCALITY', value: 'Santa Efigênia'},\n            {name: 'ADDRESS_HOME_LANDMARK', value: 'Próximo à estação Santa Efigênia'},\n            {name: 'ADDRESS_HOME_OVERFLOW', value: 'Andar 2, Apartamento 1'},\n            {name: 'ADDRESS_HOME_ZIP', value: '30260-080'},\n            {name: 'ADDRESS_HOME_CITY', value: 'Belo Horizonte'},\n            {name: 'ADDRESS_HOME_STATE', value: 'MG'},\n            {name: 'EMAIL_ADDRESS', value: 'teste@exemplo.us'},\n            {name: 'PHONE_HOME_WHOLE_NUMBER', value: '+553121286800'},\n          ],\n        },\n        {\n          fields: [\n            {name: 'ADDRESS_HOME_COUNTRY', value: 'MX'},\n            {name: 'NAME_FULL', value: 'Juan Francisco García Flores'},\n            {name: 'NAME_FIRST', value: 'Juan Francisco'},\n            {name: 'NAME_LAST', value: 'García Flores'},\n            {name: 'NAME_LAST_FIRST', value: 'García'},\n            {name: 'NAME_LAST_SECOND', value: 'Flores'},\n            {name: 'COMPANY_NAME', value: 'Empresa Falsa'},\n            {\n              name: 'ADDRESS_HOME_STREET_ADDRESS',\n              value:\n                  'C. Falsa 445\\nPiso 2, Apartamento 1\\nEntre calle Volcán y calle Montes Blancos, cerca de la estación de metro',\n            },\n            {name: 'ADDRESS_HOME_STREET_LOCATION', value: 'C. Falsa 445'},\n            {name: 'ADDRESS_HOME_STREET_NAME', value: 'C. Falsa'},\n            {name: 'ADDRESS_HOME_HOUSE_NUMBER', value: '445'},\n            {name: 'ADDRESS_HOME_SUBPREMISE', value: 'Piso 2, Apartamento 1'},\n            {name: 'ADDRESS_HOME_FLOOR', value: '2'},\n            {name: 'ADDRESS_HOME_APT', value: 'Apartamento 1'},\n            {name: 'ADDRESS_HOME_APT_TYPE', value: 'Apartamento'},\n            {name: 'ADDRESS_HOME_APT_NUM', value: '1'},\n            {name: 'ADDRESS_HOME_DEPENDENT_LOCALITY', value: 'Lomas de Chapultepec'},\n            {\n              name: 'ADDRESS_HOME_OVERFLOW',\n              value: 'Entre calle Volcán y calle Montes Celestes, cerca de la estación de metro',\n            },\n            {\n              name: 'ADDRESS_HOME_BETWEEN_STREETS_OR_LANDMARK',\n              value: 'Entre calle Volcán y calle Montes Blancos, cerca de la estación de metro',\n            },\n            {name: 'ADDRESS_HOME_LANDMARK', value: 'Cerca de la estación de metro'},\n            {name: 'ADDRESS_HOME_BETWEEN_STREETS', value: 'Entre calle Volcán y calle Montes Blancos'},\n            {name: 'ADDRESS_HOME_BETWEEN_STREETS_1', value: 'calle Volcán'},\n            {name: 'ADDRESS_HOME_BETWEEN_STREETS_2', value: 'calle Montes Blancos'},\n            {name: 'ADDRESS_HOME_ADMIN_LEVEL2', value: 'Miguel Hidalgo'},\n            {name: 'ADDRESS_HOME_ZIP', value: '11001'},\n            {name: 'ADDRESS_HOME_CITY', value: 'Ciudad de México'},\n            {name: 'ADDRESS_HOME_STATE', value: 'Distrito Federal'},\n            {name: 'EMAIL_ADDRESS', value: 'ejemplo@ejemplo.mx'},\n            {name: 'PHONE_HOME_WHOLE_NUMBER', value: '+525553428400'},\n          ],\n        },\n        {\n          fields: [\n            {name: 'ADDRESS_HOME_COUNTRY', value: 'DE'},\n            {name: 'NAME_FULL', value: 'Gottfried Wilhelm Leibniz'},\n            {name: 'NAME_FIRST', value: 'Gottfried'},\n            {name: 'NAME_MIDDLE', value: 'Wilhelm'},\n            {name: 'NAME_LAST', value: 'Leibniz'},\n            {name: 'COMPANY_NAME', value: 'Erfundenes Unternehmen'},\n            {name: 'ADDRESS_HOME_LINE1', value: 'Erfundene Straße 33'},\n            {name: 'ADDRESS_HOME_LINE2', value: 'Wohnung 1'},\n            {name: 'ADDRESS_HOME_ZIP', value: '80732'},\n            {name: 'ADDRESS_HOME_CITY', value: 'München'},\n            {name: 'EMAIL_ADDRESS', value: 'test@beispiel.de'},\n            {name: 'PHONE_HOME_WHOLE_NUMBER', value: '+4930303986300'},\n          ],\n        },\n      ],\n    });\n    this.#enabled = true;\n  }\n\n  disable(): void {\n    if (!this.#enabled || Host.InspectorFrontendHost.isUnderTest()) {\n      return;\n    }\n    this.#enabled = false;\n    void this.agent.invoke_disable();\n  }\n\n  addressFormFilled(addressFormFilledEvent: Protocol.Autofill.AddressFormFilledEvent): void {\n    this.dispatchEventToListeners(Events.AddressFormFilled, {autofillModel: this, event: addressFormFilledEvent});\n  }\n}\n\nSDKModel.register(AutofillModel, {capabilities: Capability.DOM, autostart: true});\n\nexport const enum Events {\n  AddressFormFilled = 'AddressFormFilled',\n}\n\nexport interface AddressFormFilledEvent {\n  autofillModel: AutofillModel;\n  event: Protocol.Autofill.AddressFormFilledEvent;\n}\n\nexport type EventTypes = {\n  [Events.AddressFormFilled]: AddressFormFilledEvent,\n};\n"]}