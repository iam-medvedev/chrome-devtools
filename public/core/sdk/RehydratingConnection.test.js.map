{"version":3,"file":"RehydratingConnection.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/RehydratingConnection.test.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAI7B,OAAO,KAAK,WAAW,MAAM,4BAA4B,CAAC;AAI1D,MAAM,WAAW,GAAsB;IACrC,QAAQ,EAAE,OAAgC;IAC1C,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,OAAO;IAChB,GAAG,EAAE,aAAa;IAClB,GAAG,EAAE,KAAK;CACX,CAAC;AAEF,MAAM,qBAAqB,GAAgC;IACzD,EAAE,EAAE,CAAwC;IAC5C,MAAM,EAAE,aAAa;IACrB,SAAS,EAAE,mBAAmB;IAC9B,OAAO,EAAE;QACP,OAAO,EAAE,OAAgC;QACzC,SAAS,EAAE,IAAI;QACf,IAAI,EAAE,MAAM;KACb;IACD,OAAO,EAAE,OAAO;CACjB,CAAC;AAEF,MAAM,qBAAqB,GAAgC;IACzD,EAAE,EAAE,CAAwC;IAC5C,MAAM,EAAE,aAAa;IACrB,SAAS,EAAE,mBAAmB;IAC9B,OAAO,EAAE;QACP,OAAO,EAAE,OAAgC;QACzC,SAAS,EAAE,IAAI;QACf,IAAI,EAAE,MAAM;KACb;IACD,OAAO,EAAE,OAAO;CACjB,CAAC;AAEF,MAAM,WAAW,GAAsB;IACrC,QAAQ,EAAE,GAAgC;IAC1C,OAAO,EAAE,OAAO;IAChB,kBAAkB,EAAE,CAAwC;IAC5D,SAAS,EAAE,CAAC;IACZ,WAAW,EAAE,CAAC;IACd,OAAO,EAAE,CAAC;IACV,SAAS,EAAE,EAAE;IACb,IAAI,EAAE,EAAE;IACR,QAAQ,EAAE,KAAK;IACf,GAAG,EAAE,aAAa;IAClB,YAAY,EAAE,KAAK;IACnB,YAAY,EAAE,SAAS;IACvB,MAAM,EAAE,EAAE;IACV,UAAU,EAAE,eAAe;IAC3B,OAAO,EAAE;QACP,OAAO,EAAE,OAAgC;QACzC,SAAS,EAAE,IAAI;QACf,IAAI,EAAE,MAAM;KACb;CACF,CAAC;AAEF,MAAM,WAAW,GAAsB;IACrC,QAAQ,EAAE,GAAgC;IAC1C,OAAO,EAAE,OAAO;IAChB,kBAAkB,EAAE,CAAwC;IAC5D,SAAS,EAAE,CAAC;IACZ,WAAW,EAAE,CAAC;IACd,OAAO,EAAE,CAAC;IACV,SAAS,EAAE,EAAE;IACb,IAAI,EAAE,EAAE;IACR,QAAQ,EAAE,KAAK;IACf,GAAG,EAAE,aAAa;IAClB,YAAY,EAAE,KAAK;IACnB,YAAY,EAAE,SAAS;IACvB,MAAM,EAAE,EAAE;IACV,UAAU,EAAE,eAAe;IAC3B,OAAO,EAAE;QACP,OAAO,EAAE,OAAgC;QACzC,SAAS,EAAE,IAAI;QACf,IAAI,EAAE,MAAM;KACb;CACF,CAAC;AAEF,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,MAAM,SAAS,GAAG,CAAC,CAAC;IACpB,MAAM,SAAS,GAAG,CAAC,CAAC;IACpB,MAAM,MAAM,GAAG,WAAW,CAAC;IAC3B,IAAI,yBAAoD,CAAC;IACzD,IAAI,sBAAsD,CAAC;IAC3D,MAAM,2BAA2B,GAAG,CAAC,qBAAqB,EAAE,qBAAqB,CAAC,CAAC;IACnF,MAAM,iBAAiB,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IAErD,MAAM,yBAAyB;QAC7B,YAAY,GAAoB,EAAE,CAAC;QAEnC,cAAc,CAAC,GAAkB;YAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC;QAED,iBAAiB;YACf,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACzB,CAAC;KACF;IAED,MAAM,yBAA0B,SAAQ,WAAW,CAAC,kBAAkB;QAC3D,qBAAqB,CAAC,OAAsB;YACnD,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC;QAC3C,CAAC;KACF;IAED,UAAU,CAAC,GAAG,EAAE;QACd,yBAAyB,GAAG,IAAI,yBAAyB,EAAE,CAAC;QAC5D,sBAAsB,GAAG,IAAI,yBAAyB,CAClD,SAAS,EAAE,MAAM,EAAE,2BAA2B,EAAE,iBAAiB,EAAE,yBAAyB,CAAC,CAAC;IACpG,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK;QAC/C,MAAM,qBAAqB,GAAG,yBAAyB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACxE,MAAM,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;QACxC,MAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,MAAM,EAAE,yBAAyB,CAAC,CAAC;QAC5E,MAAM,CAAC,WAAW,CACb,qBAAqB,CAAC,MAAgD,CAAC,SAAS,CAAC,QAAQ,EAAE,EAC5F,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC1B,MAAM,CAAC,WAAW,CACb,qBAAqB,CAAC,MAAgD,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,EACtG,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oEAAoE,EAAE,KAAK;QAC5E,yBAAyB,CAAC,iBAAiB,EAAE,CAAC;QAC9C,sBAAsB,CAAC,mCAAmC,CAAC;YACzD,EAAE,EAAE,SAAS;YACb,MAAM,EAAE,iBAAiB;YACzB,SAAS;SACV,CAAC,CAAC;QACH,MAAM,CAAC,QAAQ,CAAC,yBAAyB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAC3D,MAAM,oBAAoB,GAAG,yBAAyB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChF,MAAM,aAAa,GAAG,yBAAyB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtE,KAAK,MAAM,mBAAmB,IAAI,oBAAoB,EAAE,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,MAAM,EAAE,uBAAuB,CAAC,CAAC;YACxE,MAAM,CAAC,WAAW,CAAE,mBAAmB,CAAC,MAA4B,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QAChG,CAAC;QACD,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QACnD,MAAM,CAAC,SAAS,CAAE,aAAa,CAAC,CAAC,CAAC,CAAC,MAA2C,CAAC,UAAU,CAAC,CAAC;IAC7F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE,KAAK;QACvE,yBAAyB,CAAC,iBAAiB,EAAE,CAAC;QAC9C,sBAAsB,CAAC,mCAAmC,CAAC;YACzD,EAAE,EAAE,SAAS;YACb,MAAM,EAAE,gBAAgB;YACxB,SAAS;SACV,CAAC,CAAC;QACH,MAAM,CAAC,QAAQ,CAAC,yBAAyB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAC3D,MAAM,+BAA+B,GAAG,yBAAyB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3F,MAAM,aAAa,GAAG,yBAAyB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtE,KAAK,MAAM,8BAA8B,IAAI,+BAA+B,EAAE,CAAC;YAC7E,MAAM,CAAC,WAAW,CAAC,8BAA8B,CAAC,MAAM,EAAE,iCAAiC,CAAC,CAAC;YAC7F,MAAM,CAAC,WAAW,CACb,8BAA8B,CAAC,MAAwD;iBACnF,OAAO,CAAC,OAAO,CAAC,OAAO,EAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC;QACvB,CAAC;QACD,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK;QACnE,yBAAyB,CAAC,iBAAiB,EAAE,CAAC;QAC9C,sBAAsB,CAAC,mCAAmC,CAAC;YACzD,EAAE,EAAE,SAAS;YACb,MAAM,EAAE,0BAA0B;YAClC,SAAS;YACT,MAAM,EAAE;gBACN,QAAQ,EAAE,WAAW,CAAC,QAAQ;aAC/B;SACF,CAAC,CAAC;QACH,MAAM,CAAC,QAAQ,CAAC,yBAAyB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAC3D,MAAM,uBAAuB,GAAG,yBAAyB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC1E,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,uBAAuB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QAC1D,MAAM,CAAC,WAAW,CACb,uBAAuB,CAAC,MAAoD,CAAC,YAAY,EAC1F,WAAW,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport * as Rehydrating from './RehydratingConnection.js';\nimport type {\n  RehydratingExecutionContext, RehydratingScript, RehydratingTarget, ServerMessage} from './RehydratingObject.js';\n\nconst mockTarget1: RehydratingTarget = {\n  targetId: 'ABCDE' as Protocol.Page.FrameId,\n  type: 'page',\n  isolate: '12345',\n  url: 'example.com',\n  pid: 12345,\n};\n\nconst mockExecutionContext1: RehydratingExecutionContext = {\n  id: 1 as Protocol.Runtime.ExecutionContextId,\n  origin: 'example.com',\n  v8Context: 'example context 1',\n  auxData: {\n    frameId: 'ABCDE' as Protocol.Page.FrameId,\n    isDefault: true,\n    type: 'type',\n  },\n  isolate: '12345',\n};\n\nconst mockExecutionContext2: RehydratingExecutionContext = {\n  id: 2 as Protocol.Runtime.ExecutionContextId,\n  origin: 'example.com',\n  v8Context: 'example context 2',\n  auxData: {\n    frameId: 'ABCDE' as Protocol.Page.FrameId,\n    isDefault: true,\n    type: 'type',\n  },\n  isolate: '12345',\n};\n\nconst mockScript1: RehydratingScript = {\n  scriptId: '1' as Protocol.Runtime.ScriptId,\n  isolate: '12345',\n  executionContextId: 1 as Protocol.Runtime.ExecutionContextId,\n  startLine: 0,\n  startColumn: 0,\n  endLine: 1,\n  endColumn: 10,\n  hash: '',\n  isModule: false,\n  url: 'example.com',\n  hasSourceURL: false,\n  sourceMapURL: undefined,\n  length: 10,\n  sourceText: 'source text 1',\n  auxData: {\n    frameId: 'ABCDE' as Protocol.Page.FrameId,\n    isDefault: true,\n    type: 'type',\n  },\n};\n\nconst mockScript2: RehydratingScript = {\n  scriptId: '2' as Protocol.Runtime.ScriptId,\n  isolate: '12345',\n  executionContextId: 2 as Protocol.Runtime.ExecutionContextId,\n  startLine: 0,\n  startColumn: 0,\n  endLine: 1,\n  endColumn: 10,\n  hash: '',\n  isModule: false,\n  url: 'example.com',\n  hasSourceURL: false,\n  sourceMapURL: undefined,\n  length: 10,\n  sourceText: 'source text 2',\n  auxData: {\n    frameId: 'ABCDE' as Protocol.Page.FrameId,\n    isDefault: true,\n    type: 'type',\n  },\n};\n\ndescribe('RehydratingSession', () => {\n  const sessionId = 1;\n  const messageId = 1;\n  const target = mockTarget1;\n  let mockRehydratingConnection: MockRehydratingConnection;\n  let mockRehydratingSession: Rehydrating.RehydratingSession;\n  const executionContextsForTarget1 = [mockExecutionContext1, mockExecutionContext2];\n  const scriptsForTarget1 = [mockScript1, mockScript2];\n\n  class MockRehydratingConnection implements Rehydrating.RehydratingConnectionInterface {\n    messageQueue: ServerMessage[] = [];\n\n    postToFrontend(arg: ServerMessage): void {\n      this.messageQueue.push(arg);\n    }\n\n    clearMessageQueue(): void {\n      this.messageQueue = [];\n    }\n  }\n\n  class RehydratingSessionForTest extends Rehydrating.RehydratingSession {\n    override sendMessageToFrontend(payload: ServerMessage): void {\n      this.connection?.postToFrontend(payload);\n    }\n  }\n\n  beforeEach(() => {\n    mockRehydratingConnection = new MockRehydratingConnection();\n    mockRehydratingSession = new RehydratingSessionForTest(\n        sessionId, target, executionContextsForTarget1, scriptsForTarget1, mockRehydratingConnection);\n  });\n\n  it('send attach to target on construction', async function() {\n    const attachToTargetMessage = mockRehydratingConnection.messageQueue[0];\n    assert.isNotNull(attachToTargetMessage);\n    assert.strictEqual(attachToTargetMessage.method, 'Target.attachedToTarget');\n    assert.strictEqual(\n        (attachToTargetMessage.params as Protocol.Target.AttachedToTargetEvent).sessionId.toString(),\n        sessionId.toString());\n    assert.strictEqual(\n        (attachToTargetMessage.params as Protocol.Target.AttachedToTargetEvent).targetInfo.targetId.toString(),\n        target.targetId.toString());\n  });\n\n  it('sends script parsed and debugger id while handling debugger enable', async function() {\n    mockRehydratingConnection.clearMessageQueue();\n    mockRehydratingSession.handleFrontendMessageAsFakeCDPAgent({\n      id: messageId,\n      method: 'Debugger.enable',\n      sessionId,\n    });\n    assert.lengthOf(mockRehydratingConnection.messageQueue, 3);\n    const scriptParsedMessages = mockRehydratingConnection.messageQueue.slice(0, 2);\n    const resultMessage = mockRehydratingConnection.messageQueue.slice(2);\n    for (const scriptParsedMessage of scriptParsedMessages) {\n      assert.strictEqual(scriptParsedMessage.method, 'Debugger.scriptParsed');\n      assert.strictEqual((scriptParsedMessage.params as RehydratingScript).isolate, target.isolate);\n    }\n    assert.isNotNull(resultMessage[0]);\n    assert.strictEqual(resultMessage[0].id, messageId);\n    assert.isNotNull((resultMessage[0].result as Protocol.Debugger.EnableResponse).debuggerId);\n  });\n\n  it('sends execution context created while handling runtime enable', async function() {\n    mockRehydratingConnection.clearMessageQueue();\n    mockRehydratingSession.handleFrontendMessageAsFakeCDPAgent({\n      id: messageId,\n      method: 'Runtime.enable',\n      sessionId,\n    });\n    assert.lengthOf(mockRehydratingConnection.messageQueue, 3);\n    const executionContextCreatedMessages = mockRehydratingConnection.messageQueue.slice(0, 2);\n    const resultMessage = mockRehydratingConnection.messageQueue.slice(2);\n    for (const executionContextCreatedMessage of executionContextCreatedMessages) {\n      assert.strictEqual(executionContextCreatedMessage.method, 'Runtime.executionContextCreated');\n      assert.strictEqual(\n          (executionContextCreatedMessage.params as Protocol.Runtime.ExecutionContextCreatedEvent)\n              .context.auxData.frameId,\n          target.targetId);\n    }\n    assert.isNotNull(resultMessage[0]);\n    assert.strictEqual(resultMessage[0].id, messageId);\n  });\n\n  it('sends script source text while handling get script source', async function() {\n    mockRehydratingConnection.clearMessageQueue();\n    mockRehydratingSession.handleFrontendMessageAsFakeCDPAgent({\n      id: messageId,\n      method: 'Debugger.getScriptSource',\n      sessionId,\n      params: {\n        scriptId: mockScript1.scriptId,\n      },\n    });\n    assert.lengthOf(mockRehydratingConnection.messageQueue, 1);\n    const scriptSourceTextMessage = mockRehydratingConnection.messageQueue[0];\n    assert.isNotNull(scriptSourceTextMessage);\n    assert.strictEqual(scriptSourceTextMessage.id, messageId);\n    assert.strictEqual(\n        (scriptSourceTextMessage.result as Protocol.Debugger.GetScriptSourceResponse).scriptSource,\n        mockScript1.sourceText);\n  });\n});\n"]}