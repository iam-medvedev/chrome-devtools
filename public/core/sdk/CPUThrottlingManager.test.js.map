{"version":3,"file":"CPUThrottlingManager.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CPUThrottlingManager.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,YAAY,EAAC,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAC,0BAA0B,EAAE,gCAAgC,EAAC,MAAM,iCAAiC,CAAC;AAE7G,OAAO,KAAK,GAAG,MAAM,UAAU,CAAC;AAEhC,0BAA0B,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACtD,IAAI,MAAyB,CAAC;IAE9B,UAAU,CAAC,GAAG,EAAE;QACd,4EAA4E;QAC5E,MAAM,GAAG,YAAY,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,gCAAgC,CAAC,kBAAkB,EAAE,CAAC,EAAC,UAAU,EAAC,EAAE,EAAE;YACpE,MAAM,CAAC,WAAW,CAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;YAChE,OAAO,CAAC,EAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,EAAC,KAAK,EAAE,EAAE,EAAC,EAAC,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,GAAG,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;QACzE,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,sBAAsB,EAAE,CAAC;QAC3D,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;QACvD,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,uCAAuC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAExG,MAAM,OAAO,GAAG,GAAG,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;QACzE,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;QAElC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAClC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAC,mBAAmB,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,uCAAuC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAExG,MAAM,OAAO,GAAG,GAAG,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;QACzE,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAE/B,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection, setMockConnectionResponseHandler} from '../../testing/MockConnection.js';\n\nimport * as SDK from './sdk.js';\n\ndescribeWithMockConnection('CPUThrottlingManager', () => {\n  let target: SDK.Target.Target;\n\n  beforeEach(() => {\n    // We need one target since CPUThrottlingManager gets it from TargetManager.\n    target = createTarget();\n  });\n\n  it('can get the current hardwareConcurrency.', async () => {\n    setMockConnectionResponseHandler('Runtime.evaluate', ({expression}) => {\n      assert.strictEqual(expression, 'navigator.hardwareConcurrency');\n      return ({getError: () => undefined, result: {value: 42}});\n    });\n\n    const manager = SDK.CPUThrottlingManager.CPUThrottlingManager.instance();\n    const concurrency = await manager.getHardwareConcurrency();\n    assert.strictEqual(concurrency, 42);\n  });\n\n  it('can set the current hardwareConcurrency', async () => {\n    const cdpStub = sinon.stub(target.emulationAgent(), 'invoke_setHardwareConcurrencyOverride').resolves();\n\n    const manager = SDK.CPUThrottlingManager.CPUThrottlingManager.instance();\n    manager.setHardwareConcurrency(5);\n\n    assert.isTrue(cdpStub.calledOnce);\n    assert.isTrue(cdpStub.calledWithExactly({hardwareConcurrency: 5}));\n  });\n\n  it('does not set concurrency to 0 or negative numbers', async () => {\n    const cdpStub = sinon.stub(target.emulationAgent(), 'invoke_setHardwareConcurrencyOverride').resolves();\n\n    const manager = SDK.CPUThrottlingManager.CPUThrottlingManager.instance();\n    manager.setHardwareConcurrency(0);\n    assert.isFalse(cdpStub.called);\n\n    manager.setHardwareConcurrency(-1);\n    assert.isFalse(cdpStub.called);\n  });\n});\n"]}