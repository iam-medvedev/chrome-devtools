{"version":3,"file":"EmulationModel.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/EmulationModel.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,YAAY,EAAC,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAE3E,OAAO,KAAK,GAAG,MAAM,UAAU,CAAC;AAEhC,0BAA0B,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAChD,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC5D,MAAM,YAAY,GAAG,YAAY,EAAE,CAAC;QACpC,MAAM,MAAM,GAAG,YAAY,CAAC,EAAC,YAAY,EAAC,CAAC,CAAC;QAC5C,MAAM,cAAc,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QACvE,MAAM,cAAc,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC;QAC/C,MAAM,2BAA2B,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,iCAAiC,CAAC,CAAC;QAClG,MAAM,6BAA6B,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;QACtG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;QACpD,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,6BAA6B,CAAC,CAAC;QAEtD,MAAM,cAAe,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAE/C,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC;QACrD,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;QACvD,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,UAAU,CAAC,EAAC,OAAO,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;IAC5F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uGAAuG,EACvG,KAAK,IAAI,EAAE;QACT,MAAM,YAAY,GAAG,YAAY,EAAE,CAAC;QACpC,MAAM,MAAM,GAAG,YAAY,CAAC,EAAC,YAAY,EAAC,CAAC,CAAC;QAC5C,MAAM,cAAc,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QACvE,MAAM,cAAc,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC;QAC/C,MAAM,2BAA2B,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,iCAAiC,CAAC,CAAC;QAClG,MAAM,6BAA6B,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;QACtG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;QACpD,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,6BAA6B,CAAC,CAAC;QAEtD,cAAe,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QAChD,MAAM,cAAe,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAE/C,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;QACpD,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,6BAA6B,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\nimport * as SDK from './sdk.js';\n\ndescribeWithMockConnection('EmulationModel', () => {\n  it('should `emulateTouch` enable touch emulation', async () => {\n    const parentTarget = createTarget();\n    const target = createTarget({parentTarget});\n    const emulationModel = target.model(SDK.EmulationModel.EmulationModel);\n    const emulationAgent = target.emulationAgent();\n    const spySetTouchEmulationEnabled = sinon.stub(emulationAgent, 'invoke_setTouchEmulationEnabled');\n    const spySetEmitTouchEventsForMouse = sinon.stub(emulationAgent, 'invoke_setEmitTouchEventsForMouse');\n    sinon.assert.notCalled(spySetTouchEmulationEnabled);\n    sinon.assert.notCalled(spySetEmitTouchEventsForMouse);\n\n    await emulationModel!.emulateTouch(true, true);\n\n    sinon.assert.calledOnce(spySetTouchEmulationEnabled);\n    sinon.assert.calledOnce(spySetEmitTouchEventsForMouse);\n    assert.isTrue(spySetTouchEmulationEnabled.calledWith({enabled: true, maxTouchPoints: 1}));\n  });\n\n  it('should `emulateTouch` not enable touch emulation when `setTouchEmulationAllowed` is called with false',\n     async () => {\n       const parentTarget = createTarget();\n       const target = createTarget({parentTarget});\n       const emulationModel = target.model(SDK.EmulationModel.EmulationModel);\n       const emulationAgent = target.emulationAgent();\n       const spySetTouchEmulationEnabled = sinon.stub(emulationAgent, 'invoke_setTouchEmulationEnabled');\n       const spySetEmitTouchEventsForMouse = sinon.stub(emulationAgent, 'invoke_setEmitTouchEventsForMouse');\n       sinon.assert.notCalled(spySetTouchEmulationEnabled);\n       sinon.assert.notCalled(spySetEmitTouchEventsForMouse);\n\n       emulationModel!.setTouchEmulationAllowed(false);\n       await emulationModel!.emulateTouch(true, true);\n\n       sinon.assert.notCalled(spySetTouchEmulationEnabled);\n       sinon.assert.notCalled(spySetEmitTouchEventsForMouse);\n     });\n});\n"]}