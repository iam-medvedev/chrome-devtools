{"version":3,"file":"CSSContainerQuery.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CSSContainerQuery.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,UAAU,CAAC;AAEhC,MAAM,EAAC,4BAA4B,EAAE,6BAA6B,EAAE,YAAY,EAAE,SAAS,EAAC,GAAG,GAAG,CAAC,iBAAiB,CAAC;AAErH,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;QAC7C,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;YAC5D,MAAM,CAAC,WAAW,CAAC,6BAA6B,CAAC,EAAE,CAAC,0BAAiB,CAAC;YACtE,MAAM,CAAC,WAAW,CAAC,6BAA6B,CAAC,QAAQ,CAAC,0BAAiB,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE;YACpE,MAAM,CAAC,WAAW,CAAC,6BAA6B,CAAC,aAAa,CAAC,uCAAmB,CAAC;YACnF,MAAM,CAAC,WAAW,CAAC,6BAA6B,CAAC,0BAA0B,CAAC,uCAAmB,CAAC;QAClG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;YAC/D,MAAM,CAAC,WAAW,CAAC,6BAA6B,CAAC,MAAM,CAAC,8BAAiB,CAAC;YAC1E,MAAM,CAAC,WAAW,CAAC,6BAA6B,CAAC,mBAAmB,CAAC,8BAAiB,CAAC;QACzF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;QAC5C,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;YAC5D,MAAM,CAAC,WAAW,CAAC,4BAA4B,0BAAiB,eAAe,CAAC,6BAAoB,CAAC;YACrG,MAAM,CAAC,WAAW,CAAC,4BAA4B,0BAAiB,aAAa,CAAC,6BAAoB,CAAC;YACnG,MAAM,CAAC,WAAW,CAAC,4BAA4B,0BAAiB,aAAa,CAAC,6BAAoB,CAAC;QACrG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE;YACpE,MAAM,CAAC,WAAW,CAAC,4BAA4B,uCAAmB,eAAe,CAAC,6CAA0B,CAAC;YAC7G,MAAM,CAAC,WAAW,CAAC,4BAA4B,qCAAkB,aAAa,CAAC,6CAA0B,CAAC;YAC1G,MAAM,CAAC,WAAW,CAAC,4BAA4B,qCAAkB,aAAa,CAAC,6CAA0B,CAAC;QAC5G,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0DAA0D,EAAE,GAAG,EAAE;YAClE,MAAM,CAAC,WAAW,CAAC,4BAA4B,qCAAkB,eAAe,CAAC,yCAAwB,CAAC;YAC1G,MAAM,CAAC,WAAW,CAAC,4BAA4B,uCAAmB,aAAa,CAAC,yCAAwB,CAAC;YACzG,MAAM,CAAC,WAAW,CAAC,4BAA4B,uCAAmB,aAAa,CAAC,yCAAwB,CAAC;QAC3G,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;YAChE,MAAM,CAAC,WAAW,CAAC,4BAA4B,8BAAiB,eAAe,CAAC,iCAAoB,CAAC;YACrG,MAAM,CAAC,WAAW,CAAC,4BAA4B,8BAAiB,aAAa,CAAC,iCAAoB,CAAC;YACnG,MAAM,CAAC,WAAW,CAAC,4BAA4B,8BAAiB,aAAa,CAAC,iCAAoB,CAAC;QACrG,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from './sdk.js';\n\nconst {getPhysicalAxisFromQueryAxis, getQueryAxisFromContainerType, PhysicalAxis, QueryAxis} = SDK.CSSContainerQuery;\n\ndescribe('CSSContainerQuery', () => {\n  describe('getQueryAxisFromContainerType', () => {\n    it('gets the query axis of no container-type correctly', () => {\n      assert.strictEqual(getQueryAxisFromContainerType(''), QueryAxis.NONE);\n      assert.strictEqual(getQueryAxisFromContainerType('normal'), QueryAxis.NONE);\n    });\n\n    it('gets the query axis of an inline container query correctly', () => {\n      assert.strictEqual(getQueryAxisFromContainerType('inline-size'), QueryAxis.INLINE);\n      assert.strictEqual(getQueryAxisFromContainerType('scroll-state inline-size'), QueryAxis.INLINE);\n    });\n\n    it('gets the query axis of size container query correctly', () => {\n      assert.strictEqual(getQueryAxisFromContainerType('size'), QueryAxis.BOTH);\n      assert.strictEqual(getQueryAxisFromContainerType('scroll-state size'), QueryAxis.BOTH);\n    });\n  });\n\n  describe('getPhysicalAxisFromQueryAxis', () => {\n    it('gets the physical axis of no containment correctly', () => {\n      assert.strictEqual(getPhysicalAxisFromQueryAxis(QueryAxis.NONE, 'horizontal-tb'), PhysicalAxis.NONE);\n      assert.strictEqual(getPhysicalAxisFromQueryAxis(QueryAxis.NONE, 'vertical-lr'), PhysicalAxis.NONE);\n      assert.strictEqual(getPhysicalAxisFromQueryAxis(QueryAxis.NONE, 'vertical-rl'), PhysicalAxis.NONE);\n    });\n\n    it('gets the physical axis of horizontal containment correctly', () => {\n      assert.strictEqual(getPhysicalAxisFromQueryAxis(QueryAxis.INLINE, 'horizontal-tb'), PhysicalAxis.HORIZONTAL);\n      assert.strictEqual(getPhysicalAxisFromQueryAxis(QueryAxis.BLOCK, 'vertical-lr'), PhysicalAxis.HORIZONTAL);\n      assert.strictEqual(getPhysicalAxisFromQueryAxis(QueryAxis.BLOCK, 'vertical-rl'), PhysicalAxis.HORIZONTAL);\n    });\n\n    it('gets the physical axis of vertical containment correctly', () => {\n      assert.strictEqual(getPhysicalAxisFromQueryAxis(QueryAxis.BLOCK, 'horizontal-tb'), PhysicalAxis.VERTICAL);\n      assert.strictEqual(getPhysicalAxisFromQueryAxis(QueryAxis.INLINE, 'vertical-lr'), PhysicalAxis.VERTICAL);\n      assert.strictEqual(getPhysicalAxisFromQueryAxis(QueryAxis.INLINE, 'vertical-rl'), PhysicalAxis.VERTICAL);\n    });\n\n    it('gets the physical axis both-axes containment correctly', () => {\n      assert.strictEqual(getPhysicalAxisFromQueryAxis(QueryAxis.BOTH, 'horizontal-tb'), PhysicalAxis.BOTH);\n      assert.strictEqual(getPhysicalAxisFromQueryAxis(QueryAxis.BOTH, 'vertical-lr'), PhysicalAxis.BOTH);\n      assert.strictEqual(getPhysicalAxisFromQueryAxis(QueryAxis.BOTH, 'vertical-rl'), PhysicalAxis.BOTH);\n    });\n  });\n});\n"]}