{"version":3,"file":"EnhancedTracesParser.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/EnhancedTracesParser.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport {UserVisibleError} from '../platform/platform.js';\n\nimport type {\n  HydratingDataPerTarget, RehydratingExecutionContext, RehydratingScript, RehydratingTarget} from\n  './RehydratingObject.js';\n\ninterface RehydratingTraceBase {\n  cat: string;\n  pid: number;\n}\n\ninterface TraceEventTargetRundown extends RehydratingTraceBase {\n  cat: 'disabled-by-default-devtools.target-rundown';\n  args: {\n    data: {\n      frame: Protocol.Page.FrameId,\n      frameType: string,\n      url: string,\n      isolate: string,\n      v8context: string,\n      origin: string,\n      scriptId: Protocol.Runtime.ScriptId,\n      isDefault?: boolean,\n      contextType?: string,\n    },\n  };\n}\n\ninterface TraceEventScriptRundown extends RehydratingTraceBase {\n  cat: 'disabled-by-default-devtools.v8-source-rundown';\n  args: {\n    data: {\n      isolate: string,\n      executionContextId: Protocol.Runtime.ExecutionContextId,\n      scriptId: Protocol.Runtime.ScriptId,\n      startLine: number,\n      startColumn: number,\n      endLine: number,\n      endColumn: number,\n      url: string,\n      hash: string,\n      isModule: boolean,\n      hasSourceUrl: boolean,\n      sourceMapUrl?: string,\n    },\n  };\n}\n\ninterface TraceEventScriptRundownSource extends RehydratingTraceBase {\n  cat: 'disabled-by-default-devtools.v8-source-rundown-sources';\n  args: {\n    data: {\n      isolate: string,\n      scriptId: Protocol.Runtime.ScriptId,\n      length?: number,\n      sourceText?: string,\n    },\n  };\n}\n\nexport class EnhancedTracesParser {\n  #scriptRundownEvents: TraceEventScriptRundown[] = [];\n  #scriptToV8Context: Map<string, string> = new Map<string, string>();\n  #scriptToScriptSource: Map<string, string> = new Map<string, string>();\n  #largeScriptToScriptSource: Map<string, string[]> = new Map<string, string[]>();\n  #scriptToSourceLength: Map<string, number> = new Map<string, number>();\n  #targets: RehydratingTarget[] = [];\n  #executionContexts: RehydratingExecutionContext[] = [];\n  #scripts: RehydratingScript[] = [];\n  static readonly enhancedTraceVersion: number = 1;\n\n  constructor(traceEvents: unknown[]) {\n    // Initialize with the trace events provided.\n    try {\n      this.parseEnhancedTrace(traceEvents);\n    } catch (e) {\n      throw new UserVisibleError.UserVisibleError(e);\n    }\n  }\n\n  parseEnhancedTrace(traceEvents: unknown[]): void {\n    for (const event of traceEvents) {\n      if (this.isTargetRundownEvent(event)) {\n        // Set up script to v8 context mapping\n        const data = event.args?.data;\n        this.#scriptToV8Context.set(this.getScriptIsolateId(data.isolate, data.scriptId), data.v8context);\n        // Add target\n        if (!this.#targets.find(target => target.targetId === data.frame)) {\n          this.#targets.push({\n            targetId: data.frame,\n            type: data.frameType,\n            isolate: data.isolate,\n            pid: event.pid,\n            url: data.url,\n          });\n        }\n        // Add execution context, need to put back execution context id with info from other traces\n        if (!this.#executionContexts.find(executionContext => executionContext.v8Context === data.v8context)) {\n          this.#executionContexts.push({\n            id: -1 as Protocol.Runtime.ExecutionContextId,\n            origin: data.origin,\n            v8Context: data.v8context,\n            auxData: {\n              frameId: data.frame,\n              isDefault: data.isDefault,\n              type: data.contextType,\n            },\n            isolate: data.isolate,\n          });\n        }\n      } else if (this.isScriptRundownEvent(event)) {\n        this.#scriptRundownEvents.push(event);\n        const data = event.args.data;\n        // Add script\n        if (!this.#scripts.find(script => script.scriptId === data.scriptId && script.isolate === data.isolate)) {\n          this.#scripts.push({\n            scriptId: data.scriptId,\n            isolate: data.isolate,\n            executionContextId: data.executionContextId,\n            startLine: data.startLine,\n            startColumn: data.startColumn,\n            endLine: data.endLine,\n            endColumn: data.endColumn,\n            hash: data.hash,\n            isModule: data.isModule,\n            url: data.url,\n            hasSourceUrl: data.hasSourceUrl,\n            sourceMapUrl: data.sourceMapUrl,\n          });\n        }\n      } else if (this.isScriptRundownSourceEvent(event)) {\n        // Set up script to source text and length mapping\n        const data = event.args.data;\n        const scriptIsolateId = this.getScriptIsolateId(data.isolate, data.scriptId);\n        if ('splitIndex' in data && 'splitCount' in data) {\n          if (!this.#largeScriptToScriptSource.has(scriptIsolateId)) {\n            this.#largeScriptToScriptSource.set(scriptIsolateId, new Array(data.splitCount).fill('') as string[]);\n          }\n          const splittedSource = this.#largeScriptToScriptSource.get(scriptIsolateId);\n          if (splittedSource && data.sourceText) {\n            splittedSource[data.splitIndex as number] = data.sourceText;\n          }\n        } else {\n          if (data.sourceText) {\n            this.#scriptToScriptSource.set(scriptIsolateId, data.sourceText);\n          }\n          if (data.length) {\n            this.#scriptToSourceLength.set(scriptIsolateId, data.length);\n          }\n        }\n      }\n    }\n  }\n\n  data(): HydratingDataPerTarget {\n    // Put back execution context id\n    const v8ContextToExecutionContextId: Map<string, Protocol.Runtime.ExecutionContextId> =\n        new Map<string, Protocol.Runtime.ExecutionContextId>();\n    this.#scriptRundownEvents.forEach(scriptRundownEvent => {\n      const data = scriptRundownEvent.args.data;\n      const v8Context = this.#scriptToV8Context.get(this.getScriptIsolateId(data.isolate, data.scriptId));\n      if (v8Context) {\n        v8ContextToExecutionContextId.set(v8Context, data.executionContextId);\n      }\n    });\n    this.#executionContexts.forEach(executionContext => {\n      if (executionContext.v8Context) {\n        const id = v8ContextToExecutionContextId.get(executionContext.v8Context);\n        if (id) {\n          executionContext.id = id;\n        }\n      }\n    });\n\n    // Put back script source text and length\n    this.#scripts.forEach(script => {\n      const scriptIsolateId = this.getScriptIsolateId(script.isolate, script.scriptId);\n      if (this.#scriptToScriptSource.has(scriptIsolateId)) {\n        script.sourceText = this.#scriptToScriptSource.get(scriptIsolateId);\n        script.length = this.#scriptToSourceLength.get(scriptIsolateId);\n      } else if (this.#largeScriptToScriptSource.has(scriptIsolateId)) {\n        const splittedSources = this.#largeScriptToScriptSource.get(scriptIsolateId);\n        if (splittedSources) {\n          script.sourceText = splittedSources.join('');\n          script.length = script.sourceText.length;\n        }\n      }\n      // put in the aux data\n      script.auxData =\n          this.#executionContexts\n              .find(context => context.id === script.executionContextId && context.isolate === script.isolate)\n              ?.auxData;\n    });\n    const data = new Map<RehydratingTarget, [RehydratingExecutionContext[], RehydratingScript[]]>();\n    for (const target of this.#targets) {\n      data.set(target, this.groupContextsAndScriptsUnderTarget(target, this.#executionContexts, this.#scripts));\n    }\n    return data;\n  }\n\n  private getScriptIsolateId(isolate: string, scriptId: Protocol.Runtime.ScriptId): string {\n    return scriptId + '@' + isolate;\n  }\n\n  private isTraceEvent(event: unknown): event is RehydratingTraceBase {\n    return 'cat' in (event as RehydratingTraceBase) && 'pid' in (event as RehydratingTraceBase);\n  }\n\n  private isTargetRundownEvent(event: unknown): event is TraceEventTargetRundown {\n    return this.isTraceEvent(event) && event.cat === 'disabled-by-default-devtools.target-rundown';\n  }\n\n  private isScriptRundownEvent(event: unknown): event is TraceEventScriptRundown {\n    return this.isTraceEvent(event) && event.cat === 'disabled-by-default-devtools.v8-source-rundown';\n  }\n\n  private isScriptRundownSourceEvent(event: unknown): event is TraceEventScriptRundownSource {\n    return this.isTraceEvent(event) && event.cat === 'disabled-by-default-devtools.v8-source-rundown-sources';\n  }\n\n  private groupContextsAndScriptsUnderTarget(\n      target: RehydratingTarget, executionContexts: RehydratingExecutionContext[],\n      scripts: RehydratingScript[]): [RehydratingExecutionContext[], RehydratingScript[]] {\n    const filteredExecutionContexts: RehydratingExecutionContext[] = [];\n    const filteredScripts: RehydratingScript[] = [];\n    for (const executionContext of executionContexts) {\n      if (executionContext.auxData?.frameId === target.targetId) {\n        filteredExecutionContexts.push(executionContext);\n      }\n    }\n    for (const script of scripts) {\n      if (script.auxData === null) {\n        console.error(script + ' missing aux data');\n      }\n      if (script.auxData?.frameId === target.targetId) {\n        filteredScripts.push(script);\n      }\n    }\n    return [filteredExecutionContexts, filteredScripts];\n  }\n}\n"]}