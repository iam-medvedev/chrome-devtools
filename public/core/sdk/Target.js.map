{"version":3,"file":"Target.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/Target.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\nimport * as Platform from '../platform/platform.js';\nimport * as ProtocolClient from '../protocol_client/protocol_client.js';\n\nimport {SDKModel} from './SDKModel.js';\nimport type {TargetManager} from './TargetManager.js';\n\nexport class Target extends ProtocolClient.InspectorBackend.TargetBase {\n  readonly #targetManagerInternal: TargetManager;\n  #nameInternal: string;\n  #inspectedURLInternal: Platform.DevToolsPath.UrlString;\n  #inspectedURLName: string;\n  readonly #capabilitiesMask: number;\n  #typeInternal: Type;\n  readonly #parentTargetInternal: Target|null;\n  #idInternal: Protocol.Target.TargetID|'main';\n  #modelByConstructor: Map<new(arg1: Target) => SDKModel, SDKModel>;\n  #isSuspended: boolean;\n  /**\n   * Generally when a target crashes we don't need to know, with one exception.\n   * If a target crashes during the recording of a performance trace, after the\n   * trace when we try to resume() it, it will fail because it has crashed. This\n   * causes the performance panel to freeze (see crbug.com/333989070). So we\n   * mark the target as crashed so we can exit without trying to resume it. In\n   * `ChildTargetManager` we will mark a target as \"un-crashed\" when we get the\n   * `targetInfoChanged` event. This helps ensure we can deal with cases where\n   * the page crashes, but a reload fixes it and the targets get restored (see\n   * crbug.com/387258086).\n   */\n  #hasCrashed = false;\n  #targetInfoInternal: Protocol.Target.TargetInfo|undefined;\n  #creatingModels?: boolean;\n\n  constructor(\n      targetManager: TargetManager, id: Protocol.Target.TargetID|'main', name: string, type: Type,\n      parentTarget: Target|null, sessionId: string, suspended: boolean,\n      connection: ProtocolClient.InspectorBackend.Connection|null, targetInfo?: Protocol.Target.TargetInfo) {\n    const needsNodeJSPatching = type === Type.NODE;\n    super(needsNodeJSPatching, parentTarget, sessionId, connection);\n    this.#targetManagerInternal = targetManager;\n    this.#nameInternal = name;\n    this.#inspectedURLInternal = Platform.DevToolsPath.EmptyUrlString;\n    this.#inspectedURLName = '';\n    this.#capabilitiesMask = 0;\n    switch (type) {\n      case Type.FRAME:\n        this.#capabilitiesMask = Capability.BROWSER | Capability.STORAGE | Capability.DOM | Capability.JS |\n            Capability.LOG | Capability.NETWORK | Capability.TARGET | Capability.TRACING | Capability.EMULATION |\n            Capability.INPUT | Capability.INSPECTOR | Capability.AUDITS | Capability.WEB_AUTHN | Capability.IO |\n            Capability.MEDIA | Capability.EVENT_BREAKPOINTS;\n        if (parentTarget?.type() !== Type.FRAME) {\n          // This matches backend exposing certain capabilities only for the main frame.\n          this.#capabilitiesMask |=\n              Capability.DEVICE_EMULATION | Capability.SCREEN_CAPTURE | Capability.SECURITY | Capability.SERVICE_WORKER;\n          if (Common.ParsedURL.schemeIs(targetInfo?.url as Platform.DevToolsPath.UrlString, 'chrome-extension:')) {\n            this.#capabilitiesMask &= ~Capability.SECURITY;\n          }\n\n          // TODO(dgozman): we report service workers for the whole frame tree on the main frame,\n          // while we should be able to only cover the subtree corresponding to the target.\n        }\n        break;\n      case Type.ServiceWorker:\n        this.#capabilitiesMask = Capability.JS | Capability.LOG | Capability.NETWORK | Capability.TARGET |\n            Capability.INSPECTOR | Capability.IO | Capability.EVENT_BREAKPOINTS;\n        if (parentTarget?.type() !== Type.FRAME) {\n          this.#capabilitiesMask |= Capability.BROWSER;\n        }\n        break;\n      case Type.SHARED_WORKER:\n        this.#capabilitiesMask = Capability.JS | Capability.LOG | Capability.NETWORK | Capability.TARGET |\n            Capability.IO | Capability.MEDIA | Capability.INSPECTOR | Capability.EVENT_BREAKPOINTS;\n        break;\n      case Type.SHARED_STORAGE_WORKLET:\n        this.#capabilitiesMask = Capability.JS | Capability.LOG | Capability.INSPECTOR | Capability.EVENT_BREAKPOINTS;\n        break;\n      case Type.Worker:\n        this.#capabilitiesMask = Capability.JS | Capability.LOG | Capability.NETWORK | Capability.TARGET |\n            Capability.IO | Capability.MEDIA | Capability.EMULATION | Capability.EVENT_BREAKPOINTS;\n        break;\n      case Type.WORKLET:\n        this.#capabilitiesMask = Capability.JS | Capability.LOG | Capability.EVENT_BREAKPOINTS | Capability.NETWORK;\n        break;\n      case Type.NODE:\n        this.#capabilitiesMask = Capability.JS | Capability.NETWORK;\n        break;\n      case Type.AUCTION_WORKLET:\n        this.#capabilitiesMask = Capability.JS | Capability.EVENT_BREAKPOINTS;\n        break;\n      case Type.BROWSER:\n        this.#capabilitiesMask = Capability.TARGET | Capability.IO;\n        break;\n      case Type.TAB:\n        this.#capabilitiesMask = Capability.TARGET | Capability.TRACING;\n        break;\n    }\n    this.#typeInternal = type;\n    this.#parentTargetInternal = parentTarget;\n    this.#idInternal = id;\n    /* } */\n    this.#modelByConstructor = new Map();\n    this.#isSuspended = suspended;\n    this.#targetInfoInternal = targetInfo;\n  }\n\n  createModels(required: Set<new(arg1: Target) => SDKModel>): void {\n    this.#creatingModels = true;\n    const registeredModels = Array.from(SDKModel.registeredModels.entries());\n    // Create early models.\n    for (const [modelClass, info] of registeredModels) {\n      if (info.early) {\n        this.model(modelClass);\n      }\n    }\n    // Create autostart and required models.\n    for (const [modelClass, info] of registeredModels) {\n      if (info.autostart || required.has(modelClass)) {\n        this.model(modelClass);\n      }\n    }\n    this.#creatingModels = false;\n  }\n\n  id(): Protocol.Target.TargetID|'main' {\n    return this.#idInternal;\n  }\n\n  name(): string {\n    return this.#nameInternal || this.#inspectedURLName;\n  }\n\n  setName(name: string): void {\n    if (this.#nameInternal === name) {\n      return;\n    }\n    this.#nameInternal = name;\n    this.#targetManagerInternal.onNameChange(this);\n  }\n\n  type(): Type {\n    return this.#typeInternal;\n  }\n\n  override markAsNodeJSForTest(): void {\n    super.markAsNodeJSForTest();\n    this.#typeInternal = Type.NODE;\n  }\n\n  targetManager(): TargetManager {\n    return this.#targetManagerInternal;\n  }\n\n  hasAllCapabilities(capabilitiesMask: number): boolean {\n    // TODO(dgozman): get rid of this method, once we never observe targets with\n    // capability mask.\n    return (this.#capabilitiesMask & capabilitiesMask) === capabilitiesMask;\n  }\n\n  decorateLabel(label: string): string {\n    return (this.#typeInternal === Type.Worker || this.#typeInternal === Type.ServiceWorker) ? '\\u2699 ' + label :\n                                                                                               label;\n  }\n\n  parentTarget(): Target|null {\n    return this.#parentTargetInternal;\n  }\n\n  outermostTarget(): Target|null {\n    let lastTarget: Target|null = null;\n    let currentTarget: Target|null = this;\n    do {\n      if (currentTarget.type() !== Type.TAB && currentTarget.type() !== Type.BROWSER) {\n        lastTarget = currentTarget;\n      }\n      currentTarget = currentTarget.parentTarget();\n    } while (currentTarget);\n\n    return lastTarget;\n  }\n\n  override dispose(reason: string): void {\n    super.dispose(reason);\n    this.#targetManagerInternal.removeTarget(this);\n    for (const model of this.#modelByConstructor.values()) {\n      model.dispose();\n    }\n  }\n\n  model<T extends SDKModel>(modelClass: new(arg1: Target) => T): T|null {\n    if (!this.#modelByConstructor.get(modelClass)) {\n      const info = SDKModel.registeredModels.get(modelClass);\n      if (info === undefined) {\n        throw new Error('Model class is not registered');\n      }\n      if ((this.#capabilitiesMask & info.capabilities) === info.capabilities) {\n        const model = new modelClass(this);\n        this.#modelByConstructor.set(modelClass, model);\n        if (!this.#creatingModels) {\n          this.#targetManagerInternal.modelAdded(this, modelClass, model, this.#targetManagerInternal.isInScope(this));\n        }\n      }\n    }\n    return (this.#modelByConstructor.get(modelClass) as T) || null;\n  }\n\n  models(): Map<new(arg1: Target) => SDKModel, SDKModel> {\n    return this.#modelByConstructor;\n  }\n\n  inspectedURL(): Platform.DevToolsPath.UrlString {\n    return this.#inspectedURLInternal;\n  }\n\n  setInspectedURL(inspectedURL: Platform.DevToolsPath.UrlString): void {\n    this.#inspectedURLInternal = inspectedURL;\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(inspectedURL);\n    this.#inspectedURLName = parsedURL ? parsedURL.lastPathComponentWithFragment() : '#' + this.#idInternal;\n    this.#targetManagerInternal.onInspectedURLChange(this);\n    if (!this.#nameInternal) {\n      this.#targetManagerInternal.onNameChange(this);\n    }\n  }\n\n  hasCrashed(): boolean {\n    return this.#hasCrashed;\n  }\n\n  setHasCrashed(isCrashed: boolean): void {\n    const wasCrashed = this.#hasCrashed;\n\n    this.#hasCrashed = isCrashed;\n    // If the target has now been restored, check to see if it needs resuming.\n    // This ensures that if a target crashes whilst suspended, it is resumed\n    // when it is recovered.\n    // If the target is not suspended, resume() is a no-op, so it's safe to call.\n    if (wasCrashed && !isCrashed) {\n      void this.resume();\n    }\n  }\n\n  async suspend(reason?: string): Promise<void> {\n    if (this.#isSuspended) {\n      return;\n    }\n    this.#isSuspended = true;\n\n    // If the target has crashed, we will not attempt to suspend all the\n    // models, but we still mark it as suspended so we correctly track the\n    // state.\n    if (this.#hasCrashed) {\n      return;\n    }\n\n    await Promise.all(Array.from(this.models().values(), m => m.preSuspendModel(reason)));\n    await Promise.all(Array.from(this.models().values(), m => m.suspendModel(reason)));\n  }\n\n  async resume(): Promise<void> {\n    if (!this.#isSuspended) {\n      return;\n    }\n    this.#isSuspended = false;\n\n    if (this.#hasCrashed) {\n      return;\n    }\n\n    await Promise.all(Array.from(this.models().values(), m => m.resumeModel()));\n    await Promise.all(Array.from(this.models().values(), m => m.postResumeModel()));\n  }\n\n  suspended(): boolean {\n    return this.#isSuspended;\n  }\n\n  updateTargetInfo(targetInfo: Protocol.Target.TargetInfo): void {\n    this.#targetInfoInternal = targetInfo;\n  }\n\n  targetInfo(): Protocol.Target.TargetInfo|undefined {\n    return this.#targetInfoInternal;\n  }\n}\n\nexport enum Type {\n  FRAME = 'frame',\n  // eslint-disable-next-line @typescript-eslint/naming-convention -- Used by web_tests.\n  ServiceWorker = 'service-worker',\n  // eslint-disable-next-line @typescript-eslint/naming-convention -- Used by web_tests.\n  Worker = 'worker',\n  SHARED_WORKER = 'shared-worker',\n  SHARED_STORAGE_WORKLET = 'shared-storage-worklet',\n  NODE = 'node',\n  BROWSER = 'browser',\n  AUCTION_WORKLET = 'auction-worklet',\n  WORKLET = 'worklet',\n  TAB = 'tab',\n}\n\nexport const enum Capability {\n  BROWSER = 1 << 0,\n  DOM = 1 << 1,\n  JS = 1 << 2,\n  LOG = 1 << 3,\n  NETWORK = 1 << 4,\n  TARGET = 1 << 5,\n  SCREEN_CAPTURE = 1 << 6,\n  TRACING = 1 << 7,\n  EMULATION = 1 << 8,\n  SECURITY = 1 << 9,\n  INPUT = 1 << 10,\n  INSPECTOR = 1 << 11,\n  DEVICE_EMULATION = 1 << 12,\n  STORAGE = 1 << 13,\n  SERVICE_WORKER = 1 << 14,\n  AUDITS = 1 << 15,\n  WEB_AUTHN = 1 << 16,\n  IO = 1 << 17,\n  MEDIA = 1 << 18,\n  EVENT_BREAKPOINTS = 1 << 19,\n  NONE = 0,\n}\n"]}