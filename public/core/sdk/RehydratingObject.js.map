{"version":3,"file":"RehydratingObject.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/RehydratingObject.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {SourceMapV3} from './SourceMap.js';\n\nexport interface RehydratingScript {\n  scriptId: Protocol.Runtime.ScriptId;\n  isolate: string;\n  url: string;\n  executionContextId: Protocol.Runtime.ExecutionContextId;\n  startLine: number;\n  startColumn: number;\n  endLine: number;\n  endColumn: number;\n  hash: string;\n  isModule?: boolean;\n  hasSourceURL?: boolean;\n  sourceMapURL?: string;\n  sourceURL?: string;\n  length?: number;\n  sourceText?: string;\n  auxData?: RehydratingExecutionContextAuxData;\n}\n\nexport interface RehydratingExecutionContextAuxData {\n  frameId?: Protocol.Page.FrameId;\n  isDefault?: boolean;\n  type?: string;\n}\n\nexport interface RehydratingExecutionContext {\n  id: Protocol.Runtime.ExecutionContextId;\n  origin: string;\n  v8Context?: string;\n  name?: string;\n  auxData?: RehydratingExecutionContextAuxData;\n  isolate?: string;\n}\n\nexport interface RehydratingTarget {\n  targetId: Protocol.Page.FrameId;\n  type: string;\n  url: string;\n  pid?: number;\n  isolate?: string;\n}\n\nexport type HydratingDataPerTarget = Map<RehydratingTarget, [RehydratingExecutionContext[], RehydratingScript[]]>;\n\nexport interface ProtocolMessage {\n  id: number;\n  method: string;\n  sessionId?: number;\n  params?: object;\n}\n\nexport interface ProtocolEvent {\n  method: string;\n  params: object;\n}\n\nexport interface ProtocolResponse {\n  id: number;\n}\n\nexport type ServerMessage = (ProtocolEvent|ProtocolMessage|ProtocolResponse)&{\n  [others: string]: unknown,\n};\n\nexport interface Session {\n  target: RehydratingTarget;\n  executionContexts: RehydratingExecutionContext[];\n  scripts: RehydratingScript[];\n}\n\n// TODO: we need to resolve the inability to use Trace model types inside SDK. For\n// now, duplicate a minimal type here.\nexport interface TraceFile {\n  traceEvents: readonly object[];\n  metadata: {sourceMaps?: Array<{sourceMapUrl: string, sourceMap: SourceMapV3}>};\n}\n"]}