{"version":3,"file":"Target.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/Target.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  createTarget,\n} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n} from '../../testing/MockConnection.js';\nimport * as Platform from '../platform/platform.js';\n\nimport * as SDK from './sdk.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\ndescribeWithMockConnection('Target', () => {\n  let tabTarget: SDK.Target.Target;\n  let mainFrameTargetUnderTab: SDK.Target.Target;\n  let subframeTarget: SDK.Target.Target;\n\n  beforeEach(() => {\n    tabTarget = createTarget({type: SDK.Target.Type.TAB});\n    mainFrameTargetUnderTab = createTarget({type: SDK.Target.Type.FRAME, parentTarget: tabTarget});\n    subframeTarget = createTarget({type: SDK.Target.Type.FRAME, parentTarget: mainFrameTargetUnderTab});\n  });\n\n  it('has capabilities based on the type', () => {\n    assert.isTrue(tabTarget.hasAllCapabilities(SDK.Target.Capability.TARGET | SDK.Target.Capability.TRACING));\n    assert.isFalse(tabTarget.hasAllCapabilities(SDK.Target.Capability.DOM));\n\n    assert.isTrue(mainFrameTargetUnderTab.hasAllCapabilities(\n        SDK.Target.Capability.TARGET | SDK.Target.Capability.DOM | SDK.Target.Capability.DEVICE_EMULATION));\n\n    assert.isTrue(subframeTarget.hasAllCapabilities(SDK.Target.Capability.TARGET | SDK.Target.Capability.DOM));\n    assert.isFalse(subframeTarget.hasAllCapabilities(SDK.Target.Capability.DEVICE_EMULATION));\n  });\n\n  it('notifies about inspected URL change', () => {\n    const inspectedURLChanged = sinon.spy(SDK.TargetManager.TargetManager.instance(), 'onInspectedURLChange');\n\n    subframeTarget.setInspectedURL(urlString`https://example.com/`);\n    assert.isTrue(inspectedURLChanged.calledOnce);\n\n    mainFrameTargetUnderTab.setInspectedURL(urlString`https://example.com/`);\n    assert.isTrue(inspectedURLChanged.calledTwice);\n  });\n\n  it('determines outermost target', () => {\n    assert.isNull(tabTarget.outermostTarget());\n    assert.strictEqual(mainFrameTargetUnderTab.outermostTarget(), mainFrameTargetUnderTab);\n    assert.strictEqual(subframeTarget.outermostTarget(), mainFrameTargetUnderTab);\n    assert.strictEqual(\n        createTarget({type: SDK.Target.Type.Worker, parentTarget: subframeTarget}).outermostTarget(),\n        mainFrameTargetUnderTab);\n    const nodeTarget = createTarget({type: SDK.Target.Type.NODE});\n    assert.strictEqual(nodeTarget.outermostTarget(), nodeTarget);\n    const browserTarget = createTarget({type: SDK.Target.Type.BROWSER});\n    assert.isNull(browserTarget.outermostTarget());\n    const serviceWorkerTarget = createTarget({type: SDK.Target.Type.ServiceWorker, parentTarget: browserTarget});\n    assert.strictEqual(serviceWorkerTarget.outermostTarget(), serviceWorkerTarget);\n  });\n\n  it('tries to resume itself if it was crashed and is then recovered', () => {\n    const target = createTarget();\n    target.setHasCrashed(true);\n    const spy = sinon.spy(target, 'resume');\n    target.setHasCrashed(false);\n    assert.isTrue(spy.calledOnce);\n  });\n\n  it('does not resume itself if it was not already crashed', async () => {\n    const target = createTarget();\n    target.setHasCrashed(true);\n    const spy = sinon.spy(target, 'resume');\n    // Call this twice, but ensure we only call the spy once.\n    target.setHasCrashed(false);\n    target.setHasCrashed(false);\n    assert.strictEqual(spy.callCount, 1);\n  });\n\n  it('marks a crashed target as suspended', async () => {\n    const target = createTarget();\n    target.setHasCrashed(true);\n    await target.suspend();\n    assert.isTrue(target.suspended());\n  });\n\n  it('marks a crashed, suspended target as resumed', async () => {\n    const target = createTarget();\n    target.setHasCrashed(true);\n    await target.suspend();\n    assert.isTrue(target.suspended());\n    await target.resume();\n    assert.isFalse(target.suspended());\n  });\n});\n"]}