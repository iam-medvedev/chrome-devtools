{"version":3,"file":"SourceMapScopesInfo.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/SourceMapScopesInfo.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {GeneratedRangeBuilder, OriginalScopeBuilder} from '../../testing/SourceMapEncoder.js';\nimport type * as Platform from '../platform/platform.js';\n\nimport * as SDK from './sdk.js';\n\nconst {SourceMapScopesInfo} = SDK.SourceMapScopesInfo;\n\ndescribe('SourceMapScopesInfo', () => {\n  describe('findInlinedFunctions', () => {\n    it('returns the single original function name if nothing was inlined', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, 'global')\n                                  .start(5, 0, 'function', 'foo')\n                                  .end(10, 0)\n                                  .end(20, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 1}, isFunctionScope: true})\n                                  .end(0, 5)\n                                  .end(0, 5)\n                                  .build();\n\n      const info = SourceMapScopesInfo.parseFromMap(\n          sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      assert.deepEqual(info.findInlinedFunctions(0, 3), [{name: 'foo', callsite: undefined}]);\n    });\n\n    it('returns the names of the surrounding function plus all the inlined function names', () => {\n      // 'foo' calls 'bar', 'bar' calls 'baz'. 'bar' and 'baz' are inlined into 'foo'.\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, 'global')\n                                  .start(10, 0, 'function', 'foo')\n                                  .end(20, 0)\n                                  .start(30, 0, 'function', 'bar')\n                                  .end(40, 0)\n                                  .start(50, 0, 'function', 'baz')\n                                  .end(60, 0)\n                                  .end(70, 0)\n                                  .build()];\n\n      const generatedRanges =\n          new GeneratedRangeBuilder(names)\n              .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n              .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 1}, isFunctionScope: true})\n              .start(0, 5, {definition: {sourceIdx: 0, scopeIdx: 3}, callsite: {sourceIdx: 0, line: 15, column: 0}})\n              .start(0, 5, {definition: {sourceIdx: 0, scopeIdx: 5}, callsite: {sourceIdx: 0, line: 35, column: 0}})\n              .end(0, 10)\n              .end(0, 10)\n              .end(0, 10)\n              .end(0, 10)\n              .build();\n\n      const info = SourceMapScopesInfo.parseFromMap(\n          sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      assert.deepEqual(info.findInlinedFunctions(0, 4), [{name: 'foo', callsite: undefined}]);\n      assert.deepEqual(info.findInlinedFunctions(0, 7), [\n        {name: 'baz', callsite: {sourceIndex: 0, line: 35, column: 0}},\n        {name: 'bar', callsite: {sourceIndex: 0, line: 15, column: 0}},\n        {name: 'foo', callsite: undefined},\n      ]);\n    });\n  });\n\n  describe('hasVariablesAndBindings', () => {\n    it('returns false for scope info without variables or bindings', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, 'global')\n                                  .start(10, 0, 'function', 'foo')\n                                  .end(20, 0)\n                                  .end(30, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 10, {definition: {sourceIdx: 0, scopeIdx: 1}, isFunctionScope: true})\n                                  .end(0, 20)\n                                  .end(0, 30)\n                                  .build();\n\n      const info = SourceMapScopesInfo.parseFromMap(\n          sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      assert.isFalse(info.hasVariablesAndBindings());\n    });\n\n    it('returns false for scope info with variables but no bindings', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, 'global')\n                                  .start(10, 0, 'function', 'foo', ['variable1', 'variable2'])\n                                  .end(20, 0)\n                                  .end(30, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 10, {definition: {sourceIdx: 0, scopeIdx: 1}, isFunctionScope: true})\n                                  .end(0, 20)\n                                  .end(0, 30)\n                                  .build();\n\n      const info = SourceMapScopesInfo.parseFromMap(\n          sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      assert.isFalse(info.hasVariablesAndBindings());\n    });\n\n    it('returns true for scope info with variables and bindings', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, 'global')\n                                  .start(10, 0, 'function', 'foo', ['variable1', 'variable2'])\n                                  .end(20, 0)\n                                  .end(30, 0)\n                                  .build()];\n\n      const generatedRanges =\n          new GeneratedRangeBuilder(names)\n              .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n              .start(0, 10, {definition: {sourceIdx: 0, scopeIdx: 1}, isFunctionScope: true, bindings: ['a', 'b']})\n              .end(0, 20)\n              .end(0, 30)\n              .build();\n\n      const info = SourceMapScopesInfo.parseFromMap(\n          sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      assert.isTrue(info.hasVariablesAndBindings());\n    });\n  });\n\n  describeWithMockConnection('resolveMappedScopeChain', () => {\n    function setUpCallFrameAndSourceMap(options: {\n      generatedPausedPosition: {line: number, column: number},\n      mappedPausedPosition?: {sourceIndex: number, line: number, column: number},\n      returnValue?: SDK.RemoteObject.RemoteObject,\n    }) {\n      const callFrame = sinon.createStubInstance(SDK.DebuggerModel.CallFrame);\n      const target = createTarget();\n      callFrame.debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel)!;\n\n      const {generatedPausedPosition, mappedPausedPosition, returnValue} = options;\n\n      callFrame.location.returns(new SDK.DebuggerModel.Location(\n          callFrame.debuggerModel, '0' as Protocol.Runtime.ScriptId, generatedPausedPosition.line,\n          generatedPausedPosition.column));\n      callFrame.returnValue.returns(returnValue ?? null);\n\n      const sourceMap = sinon.createStubInstance(SDK.SourceMap.SourceMap);\n      if (mappedPausedPosition) {\n        sourceMap.findEntry.returns({\n          lineNumber: generatedPausedPosition.line,\n          columnNumber: generatedPausedPosition.column,\n          sourceIndex: mappedPausedPosition.sourceIndex,\n          sourceLineNumber: mappedPausedPosition.line,\n          sourceColumnNumber: mappedPausedPosition.column,\n          sourceURL: '' as Platform.DevToolsPath.UrlString,\n          name: undefined,\n        });\n      } else {\n        sourceMap.findEntry.returns(null);\n      }\n\n      return {sourceMap, callFrame};\n    }\n\n    it('returns null when the inner-most generated range doesn\\'t have an original scope', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names).start(0, 0, 'global').end(20, 0).build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 10)  // Small range that doesn't map to anything.\n                                  .end(0, 20)\n                                  .end(0, 100)\n                                  .build();\n\n      const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({generatedPausedPosition: {line: 0, column: 15}});\n      const info = SourceMapScopesInfo.parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n      const scopeChain = info.resolveMappedScopeChain(callFrame);\n\n      assert.isNull(scopeChain);\n    });\n\n    it('returns the original global scope when paused in the global scope', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names).start(0, 0, 'global').end(20, 0).build()];\n\n      const generatedRanges =\n          new GeneratedRangeBuilder(names).start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}}).end(0, 100).build();\n\n      const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({\n        generatedPausedPosition: {line: 0, column: 50},\n        mappedPausedPosition: {sourceIndex: 0, line: 10, column: 0},\n      });\n      const info = SourceMapScopesInfo.parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n      const scopeChain = info.resolveMappedScopeChain(callFrame);\n\n      assert.isNotNull(scopeChain);\n      assert.lengthOf(scopeChain, 1);\n      assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Global);\n    });\n\n    it('returns the inner-most function scope as type \"Local\" and surrounding function scopes as type \"Closure\"',\n       () => {\n         const names: string[] = [];\n         const originalScopes = [new OriginalScopeBuilder(names)\n                                     .start(0, 0, 'function', 'outer')\n                                     .start(5, 0, 'function', 'inner')\n                                     .end(15, 0)\n                                     .end(20, 0)\n                                     .build()];\n\n         const generatedRanges = new GeneratedRangeBuilder(names)\n                                     .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                     .start(0, 25, {definition: {sourceIdx: 0, scopeIdx: 1}})\n                                     .end(0, 75)\n                                     .end(0, 100)\n                                     .build();\n\n         const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({\n           generatedPausedPosition: {line: 0, column: 50},\n           mappedPausedPosition: {sourceIndex: 0, line: 10, column: 0},\n         });\n         const info = SourceMapScopesInfo.parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n         const scopeChain = info.resolveMappedScopeChain(callFrame);\n\n         assert.isNotNull(scopeChain);\n         assert.lengthOf(scopeChain, 2);\n         assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Local);\n         assert.strictEqual(scopeChain[0].name(), 'inner');\n         assert.strictEqual(scopeChain[1].type(), Protocol.Debugger.ScopeType.Closure);\n         assert.strictEqual(scopeChain[1].name(), 'outer');\n       });\n\n    it('drops inner block scopes if a return value is present to account for V8 oddity', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, 'function', 'someFn')\n                                  .start(5, 0, 'block')\n                                  .end(15, 0)\n                                  .end(20, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 25, {definition: {sourceIdx: 0, scopeIdx: 1}})\n                                  .end(0, 75)\n                                  .end(0, 100)\n                                  .build();\n\n      const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({\n        generatedPausedPosition: {line: 0, column: 50},\n        mappedPausedPosition: {sourceIndex: 0, line: 10, column: 0},\n        returnValue: new SDK.RemoteObject.LocalJSONObject(42),\n      });\n      const info = SourceMapScopesInfo.parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n      const scopeChain = info.resolveMappedScopeChain(callFrame);\n\n      assert.isNotNull(scopeChain);\n      assert.lengthOf(scopeChain, 1);\n      assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Local);\n    });\n\n    it('prefers inner ranges when the range chain has multiple ranges for the same original scope', async () => {\n      // This frequently happens when transpiling async/await or generators.\n      //\n      // orig. scope                        gen. ranges\n      //\n      // | global                            | global\n      // |                                   |\n      // |  | someFn                         |  | someFn\n      // |  |                                |  |\n      // |  x (mapped paused position)       |  |  | someFn\n      // |  |                                |  |  |\n      // |                                   |  |  x (V8 paused position)\n      // |                                   |  |  |\n      // |                                   |  |\n      // |                                   |\n      //\n      // Expectation: Report global scope and function scope for 'someFn'. Use bindings from inner 'someFn' range.\n      //\n      // TODO(crbug.com/40277685): Combine the ranges as some variables might be available in one range, but\n      //         not the other. This requires us to be able to evaluate binding expressions in arbitrary\n      //         CDP scopes to work well.\n\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, 'global')\n                                  .start(10, 0, 'function', 'someFn', ['fooVariable', 'barVariable'])\n                                  .end(20, 0)\n                                  .end(30, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 20, {definition: {sourceIdx: 0, scopeIdx: 1}, bindings: [undefined, 'b']})\n                                  .start(0, 40, {definition: {sourceIdx: 0, scopeIdx: 1}, bindings: ['f', undefined]})\n                                  .end(0, 60)\n                                  .end(0, 80)\n                                  .end(0, 100)\n                                  .build();\n\n      const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({\n        generatedPausedPosition: {line: 0, column: 50},\n        mappedPausedPosition: {sourceIndex: 0, line: 15, column: 0},\n      });\n      const info = SourceMapScopesInfo.parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n      const scopeChain = info.resolveMappedScopeChain(callFrame);\n\n      assert.isNotNull(scopeChain);\n      assert.lengthOf(scopeChain, 2);\n      assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Local);\n      assert.strictEqual(scopeChain[0].name(), 'someFn');\n      assert.strictEqual(scopeChain[1].type(), Protocol.Debugger.ScopeType.Global);\n\n      // Attempt to get `someFn`s  variables and check that we only call callFrame.evaluate once.\n      callFrame.evaluate.callsFake(({expression}) => {\n        assert.strictEqual(expression, 'f');\n        return Promise.resolve({object: new SDK.RemoteObject.LocalJSONObject(42)});\n      });\n      const {properties} = await scopeChain[0].object().getAllProperties(\n          /* accessorPropertiesOnly */ false, /* generatePreview */ true, /* nonIndexedPropertiesOnly */ false);\n      assert.isNotNull(properties);\n      assert.lengthOf(properties, 2);\n      assert.strictEqual(properties[0].name, 'fooVariable');\n      assert.strictEqual(properties[0].value?.value, 42);\n\n      assert.strictEqual(properties[1].name, 'barVariable');\n      assert.isUndefined(properties[1].value);\n      assert.isUndefined(properties[1].getter);\n\n      assert.isTrue(callFrame.evaluate.calledOnce);\n    });\n\n    it('works when generated ranges from outer scopes overlay ranges from inner scopes', async () => {\n      // This happens when expressions (but not full functions) are inlined.\n      //\n      // orig. scope                        gen. ranges\n      //\n      // | global                            | global\n      // |                                   |\n      // x (mapped paused position)          |  | someFn\n      // |                                   |  |\n      // |  | someFn                         |  |  | global\n      // |  |                                |  |  |\n      // |  |                                |  |  x (V8 paused position)\n      // |                                   |  |  |\n      // |                                   |  |\n      // |                                   |\n      //\n      // Expectation: Report global scope and use bindings from the inner generated range for 'global'.\n\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, 'global', undefined, ['fooConstant', 'barVariable'])\n                                  .start(10, 0, 'function', 'someFn')\n                                  .end(20, 0)\n                                  .end(30, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}, bindings: ['42', '\"n\"']})\n                                  .start(0, 20, {definition: {sourceIdx: 0, scopeIdx: 1}})\n                                  .start(0, 40, {definition: {sourceIdx: 0, scopeIdx: 0}, bindings: ['42', undefined]})\n                                  .end(0, 60)\n                                  .end(0, 80)\n                                  .end(0, 100)\n                                  .build();\n\n      const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({\n        generatedPausedPosition: {line: 0, column: 50},\n        mappedPausedPosition: {sourceIndex: 0, line: 5, column: 0},\n      });\n      const info = SourceMapScopesInfo.parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n      const scopeChain = info.resolveMappedScopeChain(callFrame);\n\n      assert.isNotNull(scopeChain);\n      assert.lengthOf(scopeChain, 1);\n      assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Global);\n\n      // Attempt to get the global scope's variables and check that we only call callFrame.evaluate once.\n      callFrame.evaluate.callsFake(({expression}) => {\n        assert.strictEqual(expression, '42');\n        return Promise.resolve({object: new SDK.RemoteObject.LocalJSONObject(42)});\n      });\n      const {properties} = await scopeChain[0].object().getAllProperties(\n          /* accessorPropertiesOnly */ false, /* generatePreview */ true, /* nonIndexedPropertiesOnly */ false);\n      assert.isNotNull(properties);\n      assert.lengthOf(properties, 2);\n      assert.strictEqual(properties[0].name, 'fooConstant');\n      assert.strictEqual(properties[0].value?.value, 42);\n\n      assert.strictEqual(properties[1].name, 'barVariable');\n      assert.isUndefined(properties[1].value);\n      assert.isUndefined(properties[1].getter);\n    });\n\n    it('returns the correct scopes for inlined functions', async () => {\n      //\n      //     orig. code                       gen. code\n      //              10        20                     10        20\n      //     012345678901234567890            012345678901234567890\n      //\n      //  0: function inner(x) {              print(42);debugger;\n      //  1:   print(x);\n      //  2:   debugger;\n      //  3: }\n      //  4:\n      //  5: function outer(y) {\n      //  6:   if (y) {\n      //  7:     inner(y);\n      //  8:   }\n      //  9: }\n      // 10:\n      // 11:  outer(42);\n      //\n      // Expectation: The scopes for the virtual call frame of outer are accurate.\n      //              In particular we also add a block scope that must be there.\n\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, 'global', undefined, ['inner', 'outer'])\n                                  .start(0, 14, 'function', 'inner', ['x'])\n                                  .end(3, 1)\n                                  .start(5, 14, 'function', 'outer', ['y'])\n                                  .start(6, 9, 'block')\n                                  .end(8, 3)\n                                  .end(9, 1)\n                                  .end(12, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 0, {\n                                    definition: {sourceIdx: 0, scopeIdx: 3},\n                                    callsite: {sourceIdx: 0, line: 11, column: 0},\n                                    bindings: ['42'],\n                                  })\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 4}})\n                                  .start(0, 0, {\n                                    definition: {sourceIdx: 0, scopeIdx: 1},\n                                    callsite: {sourceIdx: 0, line: 7, column: 4},\n                                    bindings: ['42'],\n                                  })\n                                  .end(0, 19)\n                                  .end(0, 19)\n                                  .end(0, 19)\n                                  .end(0, 19)\n                                  .build();\n\n      const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({\n        generatedPausedPosition: {line: 0, column: 10},\n        mappedPausedPosition: {sourceIndex: 0, line: 3, column: 2},\n      });\n      const info = SourceMapScopesInfo.parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n      {\n        const scopeChain = info.resolveMappedScopeChain(callFrame);\n        assert.isNotNull(scopeChain);\n        assert.lengthOf(scopeChain, 2);\n        assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Local);\n        assert.strictEqual(scopeChain[0].name(), 'inner');\n      }\n\n      // @ts-expect-error stubbing readonly property.\n      callFrame['inlineFrameIndex'] = 1;\n\n      {\n        const scopeChain = info.resolveMappedScopeChain(callFrame);\n        assert.isNotNull(scopeChain);\n        assert.lengthOf(scopeChain, 3);\n        assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Block);\n        assert.strictEqual(scopeChain[1].type(), Protocol.Debugger.ScopeType.Local);\n        assert.strictEqual(scopeChain[1].name(), 'outer');\n      }\n\n      // @ts-expect-error stubbing readonly property.\n      callFrame['inlineFrameIndex'] = 2;\n\n      {\n        const scopeChain = info.resolveMappedScopeChain(callFrame);\n        assert.isNotNull(scopeChain);\n        assert.lengthOf(scopeChain, 1);\n        assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Global);\n      }\n    });\n  });\n});\n"]}