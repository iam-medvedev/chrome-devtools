{"version":3,"file":"SourceMapScopesInfo.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/SourceMapScopesInfo.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {GeneratedRangeBuilder, OriginalScopeBuilder} from '../../testing/SourceMapEncoder.js';\nimport * as Platform from '../platform/platform.js';\n\nimport * as SDK from './sdk.js';\n\nconst {urlString} = Platform.DevToolsPath;\nconst {SourceMapScopesInfo} = SDK.SourceMapScopesInfo;\n\ndescribe('SourceMapScopesInfo', () => {\n  function parseFromMap(\n      sourceMap: SDK.SourceMap.SourceMap,\n      sourceMapJson: Pick<SDK.SourceMap.SourceMapV3Object, 'names'|'originalScopes'|'generatedRanges'>):\n      SDK.SourceMapScopesInfo.SourceMapScopesInfo {\n    const {originalScopes, generatedRanges} = SDK.SourceMapScopes.decodeScopes(sourceMapJson);\n    return new SourceMapScopesInfo(sourceMap, originalScopes, generatedRanges);\n  }\n\n  describe('findInlinedFunctions', () => {\n    it('returns the single original function name if nothing was inlined', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, {kind: 'global'})\n                                  .start(5, 0, {kind: 'function', name: 'foo'})\n                                  .end(10, 0)\n                                  .end(20, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 1}, isStackFrame: true})\n                                  .end(0, 5)\n                                  .end(0, 5)\n                                  .build();\n\n      const info =\n          parseFromMap(sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      assert.deepEqual(info.findInlinedFunctions(0, 3), {originalFunctionName: 'foo', inlinedFunctions: []});\n    });\n\n    it('returns the names of the surrounding function plus all the inlined function names', () => {\n      // 'foo' calls 'bar', 'bar' calls 'baz'. 'bar' and 'baz' are inlined into 'foo'.\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, {kind: 'global'})\n                                  .start(10, 0, {kind: 'function', name: 'foo'})\n                                  .end(20, 0)\n                                  .start(30, 0, {kind: 'function', name: 'bar'})\n                                  .end(40, 0)\n                                  .start(50, 0, {kind: 'function', name: 'baz'})\n                                  .end(60, 0)\n                                  .end(70, 0)\n                                  .build()];\n\n      const generatedRanges =\n          new GeneratedRangeBuilder(names)\n              .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n              .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 1}, isStackFrame: true})\n              .start(0, 5, {definition: {sourceIdx: 0, scopeIdx: 3}, callsite: {sourceIdx: 0, line: 15, column: 0}})\n              .start(0, 5, {definition: {sourceIdx: 0, scopeIdx: 5}, callsite: {sourceIdx: 0, line: 35, column: 0}})\n              .end(0, 10)\n              .end(0, 10)\n              .end(0, 10)\n              .end(0, 10)\n              .build();\n\n      const info =\n          parseFromMap(sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      assert.deepEqual(info.findInlinedFunctions(0, 4), {originalFunctionName: 'foo', inlinedFunctions: []});\n      assert.deepEqual(info.findInlinedFunctions(0, 7), {\n        originalFunctionName: 'foo',\n        inlinedFunctions: [\n          {name: 'baz', callsite: {sourceIndex: 0, line: 35, column: 0}},\n          {name: 'bar', callsite: {sourceIndex: 0, line: 15, column: 0}},\n        ],\n      });\n    });\n  });\n\n  describeWithMockConnection('expandCallFrame', () => {\n    function setUpCallFrame(generatedPausedPosition: {line: number, column: number}, name: string) {\n      const target = createTarget();\n      const callFrame = new SDK.DebuggerModel.CallFrame(\n          target.model(SDK.DebuggerModel.DebuggerModel)!, sinon.createStubInstance(SDK.Script.Script), {\n            callFrameId: '0' as Protocol.Debugger.CallFrameId,\n            location: {\n              lineNumber: generatedPausedPosition.line,\n              columnNumber: generatedPausedPosition.column,\n              scriptId: '0' as Protocol.Runtime.ScriptId,\n            },\n            functionName: name,\n            scopeChain: [],\n            this: {type: Protocol.Runtime.RemoteObjectType.Undefined},\n            url: '',\n          },\n          undefined, name);\n\n      return callFrame;\n    }\n\n    it('does nothing for frames that don\\'t contain inlined code', () => {\n      //\n      //    orig. code                         gen. code\n      //             10        20                       10        20        30\n      //    012345678901234567890              0123456789012345678901234567890\n      //\n      // 0: function inner() {                 function n(){print('hello')}\n      // 1:   print('hello');                  function m(){if(true){n()}}\n      // 2: }                                  m();\n      // 3:\n      // 4: function outer() {\n      // 5:   if (true) {\n      // 6:     inner();\n      // 7:   }\n      // 8: }\n      // 9:\n      // 10: outer();\n\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, {kind: 'global'})\n                                  .start(0, 14, {kind: 'function', name: 'inner'})\n                                  .end(2, 1)\n                                  .start(4, 14, {kind: 'function', name: 'outer'})\n                                  .start(5, 12, {kind: 'block'})\n                                  .end(7, 3)\n                                  .end(8, 1)\n                                  .end(11, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 10, {definition: {sourceIdx: 0, scopeIdx: 1}, isStackFrame: true})\n                                  .end(0, 28)\n                                  .start(1, 10, {definition: {sourceIdx: 0, scopeIdx: 3}, isStackFrame: true})\n                                  .start(1, 21, {definition: {sourceIdx: 0, scopeIdx: 4}})\n                                  .end(1, 26)\n                                  .end(1, 27)\n                                  .end(3, 0)\n                                  .build();\n\n      const info =\n          parseFromMap(sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      {\n        const callFrame = setUpCallFrame({line: 0, column: 13}, 'n');  // Pause on 'print'.\n        const expandedFrames = info.expandCallFrame(callFrame);\n\n        assert.lengthOf(expandedFrames, 1);\n        assert.strictEqual(expandedFrames[0].functionName, 'inner');\n        assert.strictEqual(expandedFrames[0].inlineFrameIndex, 0);\n      }\n\n      {\n        const callFrame = setUpCallFrame({line: 1, column: 22}, 'm');  // Pause on 'n()'.\n        const expandedFrames = info.expandCallFrame(callFrame);\n\n        assert.lengthOf(expandedFrames, 1);\n        assert.strictEqual(expandedFrames[0].functionName, 'outer');\n        assert.strictEqual(expandedFrames[0].inlineFrameIndex, 0);\n      }\n\n      {\n        const callFrame = setUpCallFrame({line: 2, column: 0}, '');  // Pause on 'm()'.\n        const expandedFrames = info.expandCallFrame(callFrame);\n\n        assert.lengthOf(expandedFrames, 1);\n        assert.strictEqual(expandedFrames[0].functionName, '');\n        assert.strictEqual(expandedFrames[0].inlineFrameIndex, 0);\n      }\n    });\n\n    it('returns two frames for a function inlined into another', () => {\n      //\n      //    orig. code                         gen. code\n      //             10        20                       10        20        30        40\n      //    012345678901234567890              01234567890123456789012345678901234567890\n      //\n      // 0: function inner() {                 function m(){if(true){print('hello')}}\n      // 1:   print('hello');                  m();\n      // 2: }\n      // 3:\n      // 4: function outer() {\n      // 5:   if (true) {\n      // 6:     inner();\n      // 7:   }\n      // 8: }\n      // 9:\n      // 10: outer();\n\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, {kind: 'global'})\n                                  .start(0, 14, {kind: 'function', name: 'inner'})\n                                  .end(2, 1)\n                                  .start(4, 14, {kind: 'function', name: 'outer'})\n                                  .start(5, 12, {kind: 'block'})\n                                  .end(7, 3)\n                                  .end(8, 1)\n                                  .end(11, 0)\n                                  .build()];\n\n      const generatedRanges =\n          new GeneratedRangeBuilder(names)\n              .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n              .start(0, 10, {definition: {sourceIdx: 0, scopeIdx: 3}, isStackFrame: true})\n              .start(0, 21, {definition: {sourceIdx: 0, scopeIdx: 4}})\n              .start(0, 22, {definition: {sourceIdx: 0, scopeIdx: 1}, callsite: {sourceIdx: 0, line: 6, column: 4}})\n              .end(0, 36)\n              .end(0, 37)\n              .end(0, 38)\n              .end(2, 0)\n              .build();\n\n      const info =\n          parseFromMap(sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      {\n        const callFrame = setUpCallFrame({line: 0, column: 22}, 'm');  // Pause on 'print'.\n        const expandedFrames = info.expandCallFrame(callFrame);\n\n        assert.lengthOf(expandedFrames, 2);\n        assert.strictEqual(expandedFrames[0].functionName, 'inner');\n        assert.strictEqual(expandedFrames[0].inlineFrameIndex, 0);\n        assert.strictEqual(expandedFrames[1].functionName, 'outer');\n        assert.strictEqual(expandedFrames[1].inlineFrameIndex, 1);\n      }\n\n      {\n        const callFrame = setUpCallFrame({line: 0, column: 13}, 'm');  // Pause on 'if'.\n        const expandedFrames = info.expandCallFrame(callFrame);\n\n        assert.lengthOf(expandedFrames, 1);\n        assert.strictEqual(expandedFrames[0].functionName, 'outer');\n        assert.strictEqual(expandedFrames[0].inlineFrameIndex, 0);\n      }\n\n      {\n        const callFrame = setUpCallFrame({line: 1, column: 0}, 'm');  // Pause on 'm'.\n        const expandedFrames = info.expandCallFrame(callFrame);\n\n        assert.lengthOf(expandedFrames, 1);\n        assert.strictEqual(expandedFrames[0].functionName, '');\n        assert.strictEqual(expandedFrames[0].inlineFrameIndex, 0);\n      }\n    });\n\n    it('returns three frames for two functions inlined into the global scope', () => {\n      //\n      //    orig. code                         gen. code\n      //             10        20                       10        20\n      //    012345678901234567890              012345678901234567890\n      //\n      // 0: function inner() {                 print('hello')\n      // 1:   print('hello');\n      // 2: }\n      // 3:\n      // 4: function outer() {\n      // 5:   if (true) {\n      // 6:     inner();\n      // 7:   }\n      // 8: }\n      // 9:\n      // 10: outer();\n\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, {kind: 'global'})\n                                  .start(0, 14, {kind: 'function', name: 'inner'})\n                                  .end(2, 1)\n                                  .start(4, 14, {kind: 'function', name: 'outer'})\n                                  .start(5, 12, {kind: 'block'})\n                                  .end(7, 3)\n                                  .end(8, 1)\n                                  .end(11, 0)\n                                  .build()];\n\n      const generatedRanges =\n          new GeneratedRangeBuilder(names)\n              .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n              .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 3}, callsite: {sourceIdx: 0, line: 10, column: 0}})\n              .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 4}})\n              .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 1}, callsite: {sourceIdx: 0, line: 6, column: 4}})\n              .end(0, 14)\n              .end(0, 14)\n              .end(0, 14)\n              .end(1, 0)\n              .build();\n\n      const info =\n          parseFromMap(sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      {\n        const callFrame = setUpCallFrame({line: 0, column: 0}, '');  // Pause on 'print'.\n        const expandedFrames = info.expandCallFrame(callFrame);\n\n        assert.lengthOf(expandedFrames, 3);\n        assert.strictEqual(expandedFrames[0].functionName, 'inner');\n        assert.strictEqual(expandedFrames[0].inlineFrameIndex, 0);\n        assert.strictEqual(expandedFrames[1].functionName, 'outer');\n        assert.strictEqual(expandedFrames[1].inlineFrameIndex, 1);\n        assert.strictEqual(expandedFrames[2].functionName, '');\n        assert.strictEqual(expandedFrames[2].inlineFrameIndex, 2);\n      }\n    });\n  });\n\n  describe('hasVariablesAndBindings', () => {\n    it('returns false for scope info without variables or bindings', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, {kind: 'global'})\n                                  .start(10, 0, {kind: 'function', name: 'foo'})\n                                  .end(20, 0)\n                                  .end(30, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 10, {definition: {sourceIdx: 0, scopeIdx: 1}, isStackFrame: true})\n                                  .end(0, 20)\n                                  .end(0, 30)\n                                  .build();\n\n      const info =\n          parseFromMap(sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      assert.isFalse(info.hasVariablesAndBindings());\n    });\n\n    it('returns false for scope info with variables but no bindings', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, {kind: 'global'})\n                                  .start(10, 0, {kind: 'function', name: 'foo', variables: ['variable1', 'variable2']})\n                                  .end(20, 0)\n                                  .end(30, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 10, {definition: {sourceIdx: 0, scopeIdx: 1}, isStackFrame: true})\n                                  .end(0, 20)\n                                  .end(0, 30)\n                                  .build();\n\n      const info =\n          parseFromMap(sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      assert.isFalse(info.hasVariablesAndBindings());\n    });\n\n    it('returns true for scope info with variables and bindings', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, {kind: 'global'})\n                                  .start(10, 0, {kind: 'function', name: 'foo', variables: ['variable1', 'variable2']})\n                                  .end(20, 0)\n                                  .end(30, 0)\n                                  .build()];\n\n      const generatedRanges =\n          new GeneratedRangeBuilder(names)\n              .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n              .start(0, 10, {definition: {sourceIdx: 0, scopeIdx: 1}, isStackFrame: true, bindings: ['a', 'b']})\n              .end(0, 20)\n              .end(0, 30)\n              .build();\n\n      const info =\n          parseFromMap(sinon.createStubInstance(SDK.SourceMap.SourceMap), {names, originalScopes, generatedRanges});\n\n      assert.isTrue(info.hasVariablesAndBindings());\n    });\n  });\n\n  describeWithMockConnection('resolveMappedScopeChain', () => {\n    function setUpCallFrameAndSourceMap(options: {\n      generatedPausedPosition: {line: number, column: number},\n      mappedPausedPosition?: {sourceIndex: number, line: number, column: number},\n      returnValue?: SDK.RemoteObject.RemoteObject,\n    }) {\n      const callFrame = sinon.createStubInstance(SDK.DebuggerModel.CallFrame);\n      const target = createTarget();\n      callFrame.debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel)!;\n\n      const {generatedPausedPosition, mappedPausedPosition, returnValue} = options;\n\n      callFrame.location.returns(new SDK.DebuggerModel.Location(\n          callFrame.debuggerModel, '0' as Protocol.Runtime.ScriptId, generatedPausedPosition.line,\n          generatedPausedPosition.column));\n      callFrame.returnValue.returns(returnValue ?? null);\n\n      const sourceMap = sinon.createStubInstance(SDK.SourceMap.SourceMap);\n      if (mappedPausedPosition) {\n        sourceMap.findEntry.returns({\n          lineNumber: generatedPausedPosition.line,\n          columnNumber: generatedPausedPosition.column,\n          sourceIndex: mappedPausedPosition.sourceIndex,\n          sourceLineNumber: mappedPausedPosition.line,\n          sourceColumnNumber: mappedPausedPosition.column,\n          sourceURL: urlString``,\n          name: undefined,\n        });\n      } else {\n        sourceMap.findEntry.returns(null);\n      }\n\n      return {sourceMap, callFrame};\n    }\n\n    it('returns null when the inner-most generated range doesn\\'t have an original scope', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names).start(0, 0, {kind: 'global'}).end(20, 0).build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 10)  // Small range that doesn't map to anything.\n                                  .end(0, 20)\n                                  .end(0, 100)\n                                  .build();\n\n      const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({generatedPausedPosition: {line: 0, column: 15}});\n      const info = parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n      const scopeChain = info.resolveMappedScopeChain(callFrame);\n\n      assert.isNull(scopeChain);\n    });\n\n    it('returns the original global scope when paused in the global scope', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names).start(0, 0, {kind: 'global'}).end(20, 0).build()];\n\n      const generatedRanges =\n          new GeneratedRangeBuilder(names).start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}}).end(0, 100).build();\n\n      const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({\n        generatedPausedPosition: {line: 0, column: 50},\n        mappedPausedPosition: {sourceIndex: 0, line: 10, column: 0},\n      });\n      const info = parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n      const scopeChain = info.resolveMappedScopeChain(callFrame);\n\n      assert.isNotNull(scopeChain);\n      assert.lengthOf(scopeChain, 1);\n      assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Global);\n    });\n\n    it('returns the inner-most function scope as type \"Local\" and surrounding function scopes as type \"Closure\"',\n       () => {\n         const names: string[] = [];\n         const originalScopes = [new OriginalScopeBuilder(names)\n                                     .start(0, 0, {kind: 'function', name: 'outer'})\n                                     .start(5, 0, {kind: 'function', name: 'inner'})\n                                     .end(15, 0)\n                                     .end(20, 0)\n                                     .build()];\n\n         const generatedRanges = new GeneratedRangeBuilder(names)\n                                     .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                     .start(0, 25, {definition: {sourceIdx: 0, scopeIdx: 1}})\n                                     .end(0, 75)\n                                     .end(0, 100)\n                                     .build();\n\n         const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({\n           generatedPausedPosition: {line: 0, column: 50},\n           mappedPausedPosition: {sourceIndex: 0, line: 10, column: 0},\n         });\n         const info = parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n         const scopeChain = info.resolveMappedScopeChain(callFrame);\n\n         assert.isNotNull(scopeChain);\n         assert.lengthOf(scopeChain, 2);\n         assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Local);\n         assert.strictEqual(scopeChain[0].name(), 'inner');\n         assert.strictEqual(scopeChain[1].type(), Protocol.Debugger.ScopeType.Closure);\n         assert.strictEqual(scopeChain[1].name(), 'outer');\n       });\n\n    it('drops inner block scopes if a return value is present to account for V8 oddity', () => {\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, {kind: 'function', name: 'someFn'})\n                                  .start(5, 0, {kind: 'block'})\n                                  .end(15, 0)\n                                  .end(20, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 25, {definition: {sourceIdx: 0, scopeIdx: 1}})\n                                  .end(0, 75)\n                                  .end(0, 100)\n                                  .build();\n\n      const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({\n        generatedPausedPosition: {line: 0, column: 50},\n        mappedPausedPosition: {sourceIndex: 0, line: 10, column: 0},\n        returnValue: new SDK.RemoteObject.LocalJSONObject(42),\n      });\n      const info = parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n      const scopeChain = info.resolveMappedScopeChain(callFrame);\n\n      assert.isNotNull(scopeChain);\n      assert.lengthOf(scopeChain, 1);\n      assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Local);\n    });\n\n    it('prefers inner ranges when the range chain has multiple ranges for the same original scope', async () => {\n      // This frequently happens when transpiling async/await or generators.\n      //\n      // orig. scope                        gen. ranges\n      //\n      // | global                            | global\n      // |                                   |\n      // |  | someFn                         |  | someFn\n      // |  |                                |  |\n      // |  x (mapped paused position)       |  |  | someFn\n      // |  |                                |  |  |\n      // |                                   |  |  x (V8 paused position)\n      // |                                   |  |  |\n      // |                                   |  |\n      // |                                   |\n      //\n      // Expectation: Report global scope and function scope for 'someFn'. Use bindings from inner 'someFn' range.\n      //\n      // TODO(crbug.com/40277685): Combine the ranges as some variables might be available in one range, but\n      //         not the other. This requires us to be able to evaluate binding expressions in arbitrary\n      //         CDP scopes to work well.\n\n      const names: string[] = [];\n      const originalScopes =\n          [new OriginalScopeBuilder(names)\n               .start(0, 0, {kind: 'global'})\n               .start(10, 0, {kind: 'function', name: 'someFn', variables: ['fooVariable', 'barVariable']})\n               .end(20, 0)\n               .end(30, 0)\n               .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 20, {definition: {sourceIdx: 0, scopeIdx: 1}, bindings: [undefined, 'b']})\n                                  .start(0, 40, {definition: {sourceIdx: 0, scopeIdx: 1}, bindings: ['f', undefined]})\n                                  .end(0, 60)\n                                  .end(0, 80)\n                                  .end(0, 100)\n                                  .build();\n\n      const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({\n        generatedPausedPosition: {line: 0, column: 50},\n        mappedPausedPosition: {sourceIndex: 0, line: 15, column: 0},\n      });\n      const info = parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n      const scopeChain = info.resolveMappedScopeChain(callFrame);\n\n      assert.isNotNull(scopeChain);\n      assert.lengthOf(scopeChain, 2);\n      assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Local);\n      assert.strictEqual(scopeChain[0].name(), 'someFn');\n      assert.strictEqual(scopeChain[1].type(), Protocol.Debugger.ScopeType.Global);\n\n      // Attempt to get `someFn`s  variables and check that we only call callFrame.evaluate once.\n      callFrame.evaluate.callsFake(({expression}) => {\n        assert.strictEqual(expression, 'f');\n        return Promise.resolve({object: new SDK.RemoteObject.LocalJSONObject(42)});\n      });\n      const {properties} = await scopeChain[0].object().getAllProperties(\n          /* accessorPropertiesOnly */ false, /* generatePreview */ true, /* nonIndexedPropertiesOnly */ false);\n      assert.isNotNull(properties);\n      assert.lengthOf(properties, 2);\n      assert.strictEqual(properties[0].name, 'fooVariable');\n      assert.strictEqual(properties[0].value?.value, 42);\n\n      assert.strictEqual(properties[1].name, 'barVariable');\n      assert.isUndefined(properties[1].value);\n      assert.isUndefined(properties[1].getter);\n\n      assert.isTrue(callFrame.evaluate.calledOnce);\n    });\n\n    it('works when generated ranges from outer scopes overlay ranges from inner scopes', async () => {\n      // This happens when expressions (but not full functions) are inlined.\n      //\n      // orig. scope                        gen. ranges\n      //\n      // | global                            | global\n      // |                                   |\n      // x (mapped paused position)          |  | someFn\n      // |                                   |  |\n      // |  | someFn                         |  |  | global\n      // |  |                                |  |  |\n      // |  |                                |  |  x (V8 paused position)\n      // |                                   |  |  |\n      // |                                   |  |\n      // |                                   |\n      //\n      // Expectation: Report global scope and use bindings from the inner generated range for 'global'.\n\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, {kind: 'global', variables: ['fooConstant', 'barVariable']})\n                                  .start(10, 0, {kind: 'function', name: 'someFn'})\n                                  .end(20, 0)\n                                  .end(30, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}, bindings: ['42', '\"n\"']})\n                                  .start(0, 20, {definition: {sourceIdx: 0, scopeIdx: 1}})\n                                  .start(0, 40, {definition: {sourceIdx: 0, scopeIdx: 0}, bindings: ['42', undefined]})\n                                  .end(0, 60)\n                                  .end(0, 80)\n                                  .end(0, 100)\n                                  .build();\n\n      const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({\n        generatedPausedPosition: {line: 0, column: 50},\n        mappedPausedPosition: {sourceIndex: 0, line: 5, column: 0},\n      });\n      const info = parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n      const scopeChain = info.resolveMappedScopeChain(callFrame);\n\n      assert.isNotNull(scopeChain);\n      assert.lengthOf(scopeChain, 1);\n      assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Global);\n\n      // Attempt to get the global scope's variables and check that we only call callFrame.evaluate once.\n      callFrame.evaluate.callsFake(({expression}) => {\n        assert.strictEqual(expression, '42');\n        return Promise.resolve({object: new SDK.RemoteObject.LocalJSONObject(42)});\n      });\n      const {properties} = await scopeChain[0].object().getAllProperties(\n          /* accessorPropertiesOnly */ false, /* generatePreview */ true, /* nonIndexedPropertiesOnly */ false);\n      assert.isNotNull(properties);\n      assert.lengthOf(properties, 2);\n      assert.strictEqual(properties[0].name, 'fooConstant');\n      assert.strictEqual(properties[0].value?.value, 42);\n\n      assert.strictEqual(properties[1].name, 'barVariable');\n      assert.isUndefined(properties[1].value);\n      assert.isUndefined(properties[1].getter);\n    });\n\n    it('returns the correct scopes for inlined functions', async () => {\n      //\n      //     orig. code                       gen. code\n      //              10        20                     10        20\n      //     012345678901234567890            012345678901234567890\n      //\n      //  0: function inner(x) {              print(42);debugger;\n      //  1:   print(x);\n      //  2:   debugger;\n      //  3: }\n      //  4:\n      //  5: function outer(y) {\n      //  6:   if (y) {\n      //  7:     inner(y);\n      //  8:   }\n      //  9: }\n      // 10:\n      // 11:  outer(42);\n      //\n      // Expectation: The scopes for the virtual call frame of outer are accurate.\n      //              In particular we also add a block scope that must be there.\n\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, {kind: 'global', variables: ['inner', 'outer']})\n                                  .start(0, 14, {kind: 'function', name: 'inner', variables: ['x']})\n                                  .end(3, 1)\n                                  .start(5, 14, {kind: 'function', name: 'outer', variables: ['y']})\n                                  .start(6, 9, {kind: 'block'})\n                                  .end(8, 3)\n                                  .end(9, 1)\n                                  .end(12, 0)\n                                  .build()];\n\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 0, {\n                                    definition: {sourceIdx: 0, scopeIdx: 3},\n                                    callsite: {sourceIdx: 0, line: 11, column: 0},\n                                    bindings: ['42'],\n                                  })\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 4}})\n                                  .start(0, 0, {\n                                    definition: {sourceIdx: 0, scopeIdx: 1},\n                                    callsite: {sourceIdx: 0, line: 7, column: 4},\n                                    bindings: ['42'],\n                                  })\n                                  .end(0, 19)\n                                  .end(0, 19)\n                                  .end(0, 19)\n                                  .end(0, 19)\n                                  .build();\n\n      const {sourceMap, callFrame} = setUpCallFrameAndSourceMap({\n        generatedPausedPosition: {line: 0, column: 10},\n        mappedPausedPosition: {sourceIndex: 0, line: 3, column: 2},\n      });\n      const info = parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n\n      {\n        const scopeChain = info.resolveMappedScopeChain(callFrame);\n        assert.isNotNull(scopeChain);\n        assert.lengthOf(scopeChain, 2);\n        assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Local);\n        assert.strictEqual(scopeChain[0].name(), 'inner');\n      }\n\n      // @ts-expect-error stubbing readonly property.\n      callFrame['inlineFrameIndex'] = 1;\n\n      {\n        const scopeChain = info.resolveMappedScopeChain(callFrame);\n        assert.isNotNull(scopeChain);\n        assert.lengthOf(scopeChain, 3);\n        assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Block);\n        assert.strictEqual(scopeChain[1].type(), Protocol.Debugger.ScopeType.Local);\n        assert.strictEqual(scopeChain[1].name(), 'outer');\n      }\n\n      // @ts-expect-error stubbing readonly property.\n      callFrame['inlineFrameIndex'] = 2;\n\n      {\n        const scopeChain = info.resolveMappedScopeChain(callFrame);\n        assert.isNotNull(scopeChain);\n        assert.lengthOf(scopeChain, 1);\n        assert.strictEqual(scopeChain[0].type(), Protocol.Debugger.ScopeType.Global);\n      }\n    });\n  });\n\n  describe('findOriginalFunctionName', () => {\n    const [scopeInfoWithRanges, scopeInfoWithMappings] = (function() {\n      // Separate sandbox, otherwise global beforeEach/afterAll will reset our source map.\n      const sandbox = sinon.createSandbox();\n      const sourceMap = sandbox.createStubInstance(SDK.SourceMap.SourceMap);\n      sourceMap.findEntry.callsFake((line, column) => {\n        assert.strictEqual(line, 0);\n        switch (column) {\n          case 10:\n            return new SDK.SourceMap.SourceMapEntry(\n                line, column, /* sourceIndex */ 0, /* sourceUrl */ undefined, /* sourceLine */ 5, /* sourceColumn */ 0);\n          case 30:\n            return new SDK.SourceMap.SourceMapEntry(\n                line, column, /* sourceIndex */ 0, /* sourceUrl */ undefined, /* sourceLine */ 15,\n                /* sourceColumn */ 2);\n          case 50:\n            return new SDK.SourceMap.SourceMapEntry(\n                line, column, /* sourceIndex */ 0, /* sourceUrl */ undefined, /* sourceLine */ 25,\n                /* sourceColumn */ 4);\n          case 110:\n            return new SDK.SourceMap.SourceMapEntry(\n                line, column, /* sourceIndex */ 0, /* sourceUrl */ undefined, /* sourceLine */ 55,\n                /* sourceColumn */ 2);\n          case 150:\n            return null;\n        }\n        return null;\n      });\n      const names: string[] = [];\n      const originalScopes = [new OriginalScopeBuilder(names)\n                                  .start(0, 0, {kind: 'global'})\n                                  .start(10, 10, {kind: 'function', name: 'myAuthoredFunction', isStackFrame: true})\n                                  .start(20, 15, {kind: 'block'})\n                                  .end(30, 3)\n                                  .end(40, 1)\n                                  .start(50, 10, {kind: 'function', isStackFrame: true})\n                                  .end(60, 1)\n                                  .end(70, 0)\n                                  .build()];\n      const scopeInfoWithMappings = parseFromMap(sourceMap, {names, originalScopes, generatedRanges: ''});\n      const generatedRanges = new GeneratedRangeBuilder(names)\n                                  .start(0, 0, {definition: {sourceIdx: 0, scopeIdx: 0}})\n                                  .start(0, 20, {definition: {sourceIdx: 0, scopeIdx: 1}})\n                                  .start(0, 40, {definition: {sourceIdx: 0, scopeIdx: 2}})\n                                  .end(0, 60)\n                                  .end(0, 80)\n                                  .start(0, 100, {definition: {sourceIdx: 0, scopeIdx: 5}})\n                                  .end(0, 120)\n                                  .start(0, 140)\n                                  .end(0, 160)\n                                  .end(0, 180)\n                                  .build();\n      const scopeInfoWithRanges = parseFromMap(sourceMap, {names, originalScopes, generatedRanges});\n      return [scopeInfoWithRanges, scopeInfoWithMappings];\n    })();\n\n    [{name: 'with GeneratedRanges', scopeInfo: scopeInfoWithRanges},\n     {name: 'with mappings', scopeInfo: scopeInfoWithMappings},\n    ].forEach(({name, scopeInfo}) => {\n      describe(name, () => {\n        it('provides the original name for a position inside a function', () => {\n          assert.strictEqual(scopeInfo.findOriginalFunctionName({line: 0, column: 30}), 'myAuthoredFunction');\n        });\n\n        it('provides the original name for a position inside a block scope of a function', () => {\n          assert.strictEqual(scopeInfo.findOriginalFunctionName({line: 0, column: 50}), 'myAuthoredFunction');\n        });\n\n        it('returns null for a position inside the global scope', () => {\n          assert.isNull(scopeInfo.findOriginalFunctionName({line: 0, column: 10}));\n        });\n\n        it('returns null for a position inside a range with no corresponding original scope', () => {\n          assert.isNull(scopeInfo.findOriginalFunctionName({line: 0, column: 150}));\n        });\n\n        it('returns the empty string for an unnamed function (not null)', () => {\n          assert.strictEqual(scopeInfo.findOriginalFunctionName({line: 0, column: 110}), '');\n        });\n      });\n    });\n  });\n});\n"]}