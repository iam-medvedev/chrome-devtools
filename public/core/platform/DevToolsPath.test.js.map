{"version":3,"file":"DevToolsPath.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/platform/DevToolsPath.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from './platform.js';\n\ndescribe('Platform', () => {\n  describe('DevToolsPath', () => {\n    function fnExpectingUrlString(urlString: Platform.DevToolsPath.UrlString): void {\n      void urlString;\n    }\n\n    function fnExpectingRawPathString(rawPathString: Platform.DevToolsPath.RawPathString): void {\n      void rawPathString;\n    }\n\n    function fnExpectingEncodedPathString(encPathString: Platform.DevToolsPath.EncodedPathString): void {\n      void encPathString;\n    }\n\n    describe('UrlString', () => {\n      it('is correctly type checked', () => {\n        // eslint-disable-next-line rulesdir/prefer-url-string\n        const urlString = 'urlStr' as Platform.DevToolsPath.UrlString;\n        fnExpectingUrlString(urlString);\n        // @ts-expect-error Passing a UrlString when RawPathString is expected\n        fnExpectingRawPathString(urlString);\n        // @ts-expect-error Passing a UrlString when EncodedPathString is expected\n        fnExpectingEncodedPathString(urlString);\n        // @ts-expect-error Passing a plain string when UrlString is expected\n        fnExpectingUrlString('foo');\n      });\n    });\n\n    describe('RawPathString', () => {\n      it('is correctly type checked', () => {\n        const rawPathString = 'rawPathStr' as Platform.DevToolsPath.RawPathString;\n        fnExpectingRawPathString(rawPathString);\n        // @ts-expect-error Passing a RawPathString when UrlString is expected\n        fnExpectingUrlString(rawPathString);\n        // @ts-expect-error Passing a RawPathString when EncodedPathString is expected\n        fnExpectingEncodedPathString(rawPathString);\n        // @ts-expect-error Passing a plain string when RawPathString is expected\n        fnExpectingRawPathString('foo');\n      });\n    });\n\n    describe('EncodedPathString', () => {\n      it('is correctly type checked', () => {\n        const encPathString = 'encPathStr' as Platform.DevToolsPath.EncodedPathString;\n        fnExpectingEncodedPathString(encPathString);\n        // @ts-expect-error Passing a EncodedPathString when UrlString is expected\n        fnExpectingUrlString(encPathString);\n        // @ts-expect-error Passing a EncodedPathString when RawPathString is expected\n        fnExpectingRawPathString(encPathString);\n        // @ts-expect-error Passing a plain string when EncodedPathString is expected\n        fnExpectingEncodedPathString('foo');\n      });\n    });\n\n    describe('urlString', () => {\n      const {urlString} = Platform.DevToolsPath;\n\n      it('acts like an identity function on URL strings', () => {\n        assert.strictEqual('https://www.example.com', urlString`https://www.example.com`);\n        assert.strictEqual('http://host/My%20File.txt', urlString`http://host/My%20File.txt`);\n      });\n\n      it('correctly composes URL strings', () => {\n        const host = 'foo.com';\n        const file = 'file.js';\n        assert.strictEqual('http://foo.com/file.js', urlString`http://${host}/${file}`);\n      });\n\n      it('is correctly type checked', () => {\n        fnExpectingUrlString(urlString`http://localhost`);\n        // @ts-expect-error Passing a UrlString when RawPathString is expected\n        fnExpectingRawPathString(urlString`http://localhost`);\n        // @ts-expect-error Passing a UrlString when EncodedPathString is expected\n        fnExpectingEncodedPathString(urlString`http://localhost`);\n      });\n    });\n  });\n});\n"]}