{"version":3,"file":"NumberFormatter.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/i18n/NumberFormatter.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithLocale} from '../../testing/EnvironmentHelpers.js';\n\nimport * as i18n from './i18n.js';\n\ndescribeWithLocale('NumberFormatter', () => {\n  const identity = (locale: string) => locale;\n  after(() => {\n    // Reset the singleton after the test suite for other tests.\n    const data: i18n.DevToolsLocale.DevToolsLocaleData = {\n      settingLanguage: 'en-US',\n      navigatorLanguage: '',\n      lookupClosestDevToolsLocale: identity,\n    };\n    i18n.DevToolsLocale.DevToolsLocale.instance({create: true, data});\n  });\n\n  const {defineFormatter} = i18n.NumberFormatter;\n\n  it('ensures a space is present for locales that do not add one by default', () => {\n    // German does not add a space between the number and the unit.\n    i18n.DevToolsLocale.DevToolsLocale.instance({\n      create: true,\n      data: {\n        navigatorLanguage: 'de',\n        settingLanguage: 'de',\n        lookupClosestDevToolsLocale: l => l,\n      },\n    });\n    const formatter = defineFormatter({\n      style: 'unit',\n      unit: 'byte',\n      unitDisplay: 'narrow',\n    });\n    assert.strictEqual(formatter.format(50), '50\\xA0B');\n  });\n\n  it('replaces an existing space with a non-breaking space', () => {\n    // English adds a space.\n    i18n.DevToolsLocale.DevToolsLocale.instance({\n      create: true,\n      data: {\n        navigatorLanguage: 'en-US',\n        settingLanguage: 'en-US',\n        lookupClosestDevToolsLocale: l => l,\n      },\n    });\n    const formatter = defineFormatter({\n      style: 'unit',\n      unit: 'byte',\n      unitDisplay: 'narrow',\n    });\n    assert.strictEqual(formatter.format(50), '50\\xA0B');\n  });\n\n  it('ensures a space is present for milliseconds', () => {\n    const formatter = defineFormatter({\n      style: 'unit',\n      unit: 'millisecond',\n      unitDisplay: 'narrow',\n    });\n    assert.strictEqual(formatter.format(50), '50\\xA0ms');\n  });\n\n  it('uses a custom separator if provided', () => {\n    let formatter = defineFormatter({style: 'unit', unit: 'byte', unitDisplay: 'narrow'});\n    assert.strictEqual(formatter.format(50, ' '), '50 B');\n\n    formatter = defineFormatter({\n      style: 'unit',\n      unit: 'millisecond',\n      unitDisplay: 'narrow',\n    });\n\n    assert.strictEqual(formatter.format(500, ' '), '500 ms');\n    assert.strictEqual(formatter.format(500, '    '), '500    ms');\n  });\n\n  it('does nothing when there is no unit', () => {\n    i18n.DevToolsLocale.DevToolsLocale.instance({\n      create: true,\n      data: {navigatorLanguage: 'en-US', settingLanguage: 'en-US', lookupClosestDevToolsLocale: l => l}\n    });\n    const formatter = defineFormatter({\n      style: 'decimal',\n    });\n    assert.strictEqual(formatter.format(5000), '5,000');\n  });\n});\n"]}