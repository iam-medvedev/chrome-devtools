{"version":3,"file":"GdpClient.js","sourceRoot":"","sources":["../../../../../../front_end/core/host/GdpClient.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../root/root.js';\n\nimport {InspectorFrontendHostInstance} from './InspectorFrontendHost.js';\nimport type {DispatchHttpRequestRequest, DispatchHttpRequestResult} from './InspectorFrontendHostAPI.js';\n\nexport enum SubscriptionStatus {\n  ENABLED = 'SUBSCRIPTION_STATE_ENABLED',\n  PENDING = 'SUBSCRIPTION_STATE_PENDING',\n  CANCELED = 'SUBSCRIPTION_STATE_CANCELED',\n  REFUNDED = 'SUBSCRIPTION_STATE_REFUNDED',\n  AWAITING_FIX = 'SUBSCRIPTION_STATE_AWAITING_FIX',\n  ON_HOLD = 'SUBSCRIPTION_STATE_ACCOUNT_ON_HOLD',\n}\n\nexport enum SubscriptionTier {\n  PREMIUM_ANNUAL = 'SUBSCRIPTION_TIER_PREMIUM_ANNUAL',\n  PREMIUM_MONTHLY = 'SUBSCRIPTION_TIER_PREMIUM_MONTHLY',\n  PRO_ANNUAL = 'SUBSCRIPTION_TIER_PRO_ANNUAL',\n  PRO_MONTHLY = 'SUBSCRIPTION_TIER_PRO_MONTHLY',\n}\n\nenum EligibilityStatus {\n  ELIGIBLE = 'ELIGIBLE',\n  NOT_ELIGIBLE = 'NOT_ELIGIBLE',\n}\n\nexport enum EmailPreference {\n  ENABLED = 'ENABLED',\n  DISABLED = 'DISABLED',\n}\n\ninterface CheckElibigilityResponse {\n  createProfile: EligibilityStatus;\n}\n\nexport interface Profile {\n  // Resource name of the profile.\n  // Format: profiles/{obfuscated_profile_id}\n  name: string;\n  activeSubscription?: {\n    subscriptionStatus: SubscriptionStatus,\n    // To ensure forward compatibility, we accept any string, allowing the server to\n    // introduce new subscription tiers without breaking older clients.\n    subscriptionTier: SubscriptionTier|string,\n  };\n}\n\nasync function makeHttpRequest<R extends object>(request: DispatchHttpRequestRequest): Promise<R|null> {\n  if (!Root.Runtime.hostConfig.devToolsGdpProfiles?.enabled) {\n    return null;\n  }\n\n  const response = await new Promise<DispatchHttpRequestResult>(resolve => {\n    InspectorFrontendHostInstance.dispatchHttpRequest(request, resolve);\n  });\n\n  debugLog({request, response});\n  if ('response' in response && response.statusCode === 200) {\n    return JSON.parse(response.response) as R;\n  }\n\n  return null;\n}\n\nconst SERVICE_NAME = 'gdpService';\nlet gdpClientInstance: GdpClient|null = null;\nexport class GdpClient {\n  #cachedProfilePromise?: Promise<Profile|null>;\n  #cachedEligibilityPromise?: Promise<CheckElibigilityResponse|null>;\n\n  private constructor() {\n  }\n\n  static instance({forceNew}: {\n    forceNew: boolean,\n  } = {forceNew: false}): GdpClient {\n    if (!gdpClientInstance || forceNew) {\n      gdpClientInstance = new GdpClient();\n    }\n    return gdpClientInstance;\n  }\n\n  async initialize(): Promise<void> {\n    void this.getProfile();\n    void this.checkEligibility();\n  }\n\n  async getProfile(): Promise<Profile|null> {\n    if (this.#cachedProfilePromise) {\n      return await this.#cachedProfilePromise;\n    }\n\n    this.#cachedProfilePromise = makeHttpRequest({\n      service: SERVICE_NAME,\n      path: '/v1beta1/profile:get',\n      method: 'GET',\n    });\n    return await this.#cachedProfilePromise;\n  }\n\n  async checkEligibility(): Promise<CheckElibigilityResponse|null> {\n    if (this.#cachedEligibilityPromise) {\n      return await this.#cachedEligibilityPromise;\n    }\n\n    this.#cachedEligibilityPromise =\n        makeHttpRequest({service: SERVICE_NAME, path: '/v1beta1/eligibility:check', method: 'GET'});\n\n    return await this.#cachedEligibilityPromise;\n  }\n\n  async isEligibleToCreateProfile(): Promise<boolean> {\n    return (await this.checkEligibility())?.createProfile === EligibilityStatus.ELIGIBLE;\n  }\n\n  createProfile({user, emailPreference}: {user: string, emailPreference: EmailPreference}): Promise<Profile|null> {\n    return makeHttpRequest({\n      service: SERVICE_NAME,\n      path: '/v1beta1/profiles',\n      method: 'POST',\n      body: JSON.stringify({\n        user,\n        newsletter_email: emailPreference,\n      })\n    });\n  }\n}\n\nfunction isDebugMode(): boolean {\n  return Boolean(localStorage.getItem('debugGdpIntegrationEnabled'));\n}\n\nfunction debugLog(...log: unknown[]): void {\n  if (!isDebugMode()) {\n    return;\n  }\n\n  // eslint-disable-next-line no-console\n  console.log('debugLog', ...log);\n}\n\nfunction setDebugGdpIntegrationEnabled(enabled: boolean): void {\n  if (enabled) {\n    localStorage.setItem('debugGdpIntegrationEnabled', 'true');\n  } else {\n    localStorage.removeItem('debugGdpIntegrationEnabled');\n  }\n}\n\n// @ts-expect-error\nglobalThis.setDebugGdpIntegrationEnabled = setDebugGdpIntegrationEnabled;\n"]}