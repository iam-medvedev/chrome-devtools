{"version":3,"file":"GdpClient.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/host/GdpClient.test.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,gBAAgB,EAAC,MAAM,qCAAqC,CAAC;AAErE,OAAO,KAAK,IAAI,MAAM,WAAW,CAAC;AAElC,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,IAAI,uBACgH,CAAC;IACrH,UAAU,CAAC,GAAG,EAAE;QACd,gBAAgB,CAAC;YACf,mBAAmB,EAAE;gBACnB,OAAO,EAAE,IAAI;aACd;SACF,CAAC,CAAC;QAEH,uBAAuB;YACnB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,EAAE,qBAAqB,CAAC;iBACtF,SAAS,CAAC,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE;gBACzB,EAAE,CAAC;oBACD,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,IAAI,EAAE,aAAa,EAAC,CAAC;oBAC/C,UAAU,EAAE,GAAG;iBAChB,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACX,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;QACnD,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC;QACvD,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC;QAEvD,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,gBAAgB,EAAE,CAAC;QAC7D,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,gBAAgB,EAAE,CAAC;QAE7D,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAChD,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;YACzC,gBAAgB,CAAC;gBACf,mBAAmB,EAAE;oBACnB,OAAO,EAAE,KAAK;iBACf;aACF,CAAC,CAAC;YAEH,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC,UAAU,EAAE,CAAC;YAEvF,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACvB,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {updateHostConfig} from '../../testing/EnvironmentHelpers.js';\n\nimport * as Host from './host.js';\n\ndescribe('GdpClient', () => {\n  let dispatchHttpRequestStub:\n      sinon.SinonStub<Parameters<typeof Host.InspectorFrontendHost.InspectorFrontendHostInstance.dispatchHttpRequest>>;\n  beforeEach(() => {\n    updateHostConfig({\n      devToolsGdpProfiles: {\n        enabled: true,\n      }\n    });\n\n    dispatchHttpRequestStub =\n        sinon.stub(Host.InspectorFrontendHost.InspectorFrontendHostInstance, 'dispatchHttpRequest')\n            .callsFake((request, cb) => {\n              cb({\n                response: JSON.stringify({name: 'profiles/id'}),\n                statusCode: 200,\n              });\n            });\n    Host.GdpClient.GdpClient.instance({forceNew: true});\n  });\n\n  it('should cache requests to getProfile', async () => {\n    await Host.GdpClient.GdpClient.instance().getProfile();\n    await Host.GdpClient.GdpClient.instance().getProfile();\n\n    sinon.assert.calledOnce(dispatchHttpRequestStub);\n  });\n\n  it('should cache requests to checkEligibility', async () => {\n    await Host.GdpClient.GdpClient.instance().checkEligibility();\n    await Host.GdpClient.GdpClient.instance().checkEligibility();\n\n    sinon.assert.calledOnce(dispatchHttpRequestStub);\n  });\n\n  describe('when the integration is disabled', () => {\n    it('should not make a request', async () => {\n      updateHostConfig({\n        devToolsGdpProfiles: {\n          enabled: false,\n        },\n      });\n\n      const profile = await Host.GdpClient.GdpClient.instance({forceNew: true}).getProfile();\n\n      assert.isNull(profile);\n      sinon.assert.notCalled(dispatchHttpRequestStub);\n    });\n  });\n});\n"]}