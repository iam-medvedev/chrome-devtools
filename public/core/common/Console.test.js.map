{"version":3,"file":"Console.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/Console.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from './common.js';\n\nconst Console = Common.Console.Console;\n\ndescribe('Console', () => {\n  describe('addMessage', () => {\n    it('adds messages', () => {\n      const console = Console.instance({forceNew: true});\n      console.addMessage('Foo', Common.Console.MessageLevel.Info, true);\n      const messages = console.messages();\n      assert.lengthOf(messages, 1);\n      assert.strictEqual(messages[0].text, 'Foo');\n      assert.strictEqual(messages[0].level, Common.Console.MessageLevel.Info);\n      assert.strictEqual(messages[0].show, true);\n    });\n\n    it('stores messages', () => {\n      const console = Console.instance({forceNew: true});\n      console.addMessage('Foo', Common.Console.MessageLevel.Info, true);\n      console.addMessage('Baz', Common.Console.MessageLevel.Warning, true);\n      console.addMessage('Bar', Common.Console.MessageLevel.Error, true);\n      console.addMessage('Donkey', Common.Console.MessageLevel.Info, true);\n      const messages = console.messages();\n      assert.strictEqual(messages.length, 4);\n    });\n\n    it('dispatches events to listeners', done => {\n      const console = Console.instance({forceNew: true});\n      const callback = ({data}: Common.EventTarget.EventTargetEvent<Common.Console.Message>) => {\n        console.removeEventListener(Common.Console.Events.MessageAdded, callback);\n        assert.strictEqual(data.text, 'Foo');\n        done();\n      };\n\n      console.addEventListener(Common.Console.Events.MessageAdded, callback);\n      console.addMessage('Foo', Common.Console.MessageLevel.Info, true);\n    });\n  });\n\n  describe('log', () => {\n    it('adds messages with level Info', () => {\n      const console = Console.instance({forceNew: true});\n      console.log('Lorem Ipsum');\n      const messages = console.messages();\n      assert.lengthOf(messages, 1);\n      assert.strictEqual(messages[0].show, false);  // Infos don't popup the Console panel by default\n      assert.strictEqual(messages[0].level, Common.Console.MessageLevel.Info);\n    });\n  });\n\n  describe('warn', () => {\n    it('adds messages with level Warning', () => {\n      const console = Console.instance({forceNew: true});\n      console.warn('Lorem Ipsum');\n      const messages = console.messages();\n      assert.lengthOf(messages, 1);\n      assert.strictEqual(messages[0].show, false);  // Warnings don't popup the Console panel by default\n      assert.strictEqual(messages[0].level, Common.Console.MessageLevel.Warning);\n    });\n  });\n\n  describe('error', () => {\n    it('adds messages with level Error', () => {\n      const console = Console.instance({forceNew: true});\n      console.error('Lorem Ipsum');\n      const messages = console.messages();\n      assert.lengthOf(messages, 1);\n      assert.strictEqual(messages[0].show, true);  // Errors popup the Console panel by default\n      assert.strictEqual(messages[0].level, Common.Console.MessageLevel.Error);\n    });\n\n    it('can control whether to pop up the Console panel', () => {\n      const console = Console.instance({forceNew: true});\n      console.error('Bar', false);\n      console.error('Baz', true);\n      const messages = console.messages();\n      assert.lengthOf(messages, 2);\n      assert.strictEqual(messages[0].show, false);\n      assert.strictEqual(messages[1].show, true);\n    });\n  });\n});\n"]}