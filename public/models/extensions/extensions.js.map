{
  "version": 3,
  "sources": ["../../../../../../front_end/models/extensions/ExtensionAPI.ts", "../../../../../../front_end/models/extensions/ExtensionEndpoint.ts", "../../../../../../front_end/models/extensions/ExtensionPanel.ts", "../../../../../../front_end/models/extensions/ExtensionView.ts", "../../../../../../front_end/models/extensions/ExtensionServer.ts", "../../../../../../front_end/models/extensions/HostUrlPattern.ts", "../../../../../../front_end/models/extensions/LanguageExtensionEndpoint.ts", "../../../../../../front_end/models/extensions/RecorderExtensionEndpoint.ts", "../../../../../../front_end/models/extensions/RecorderPluginManager.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as PublicAPI from '../../../extension-api/ExtensionAPI'; // eslint-disable-line rulesdir/es-modules-import\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as HAR from '../har/har.js';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport namespace PrivateAPI {\n  export namespace Panels {\n    export const enum SearchAction {\n      CancelSearch = 'cancelSearch',\n      PerformSearch = 'performSearch',\n      NextSearchResult = 'nextSearchResult',\n      PreviousSearchResult = 'previousSearchResult',\n    }\n  }\n\n  export const enum Events {\n    ButtonClicked = 'button-clicked-',\n    PanelObjectSelected = 'panel-objectSelected-',\n    InspectedURLChanged = 'inspected-url-changed',\n    NetworkRequestFinished = 'network-request-finished',\n    OpenResource = 'open-resource',\n    PanelSearch = 'panel-search-',\n    ProfilingStarted = 'profiling-started-',\n    ProfilingStopped = 'profiling-stopped-',\n    ResourceAdded = 'resource-added',\n    ResourceContentCommitted = 'resource-content-committed',\n    ViewShown = 'view-shown-',\n    ViewHidden = 'view-hidden,',\n    ThemeChange = 'host-theme-change',\n  }\n\n  export const enum Commands {\n    AddRequestHeaders = 'addRequestHeaders',\n    CreatePanel = 'createPanel',\n    CreateSidebarPane = 'createSidebarPane',\n    CreateToolbarButton = 'createToolbarButton',\n    EvaluateOnInspectedPage = 'evaluateOnInspectedPage',\n    ForwardKeyboardEvent = '_forwardKeyboardEvent',\n    GetHAR = 'getHAR',\n    GetPageResources = 'getPageResources',\n    GetRequestContent = 'getRequestContent',\n    GetResourceContent = 'getResourceContent',\n    OpenResource = 'openResource',\n    Reload = 'Reload',\n    Subscribe = 'subscribe',\n    SetOpenResourceHandler = 'setOpenResourceHandler',\n    SetThemeChangeHandler = 'setThemeChangeHandler',\n    SetResourceContent = 'setResourceContent',\n    SetSidebarContent = 'setSidebarContent',\n    SetSidebarHeight = 'setSidebarHeight',\n    SetSidebarPage = 'setSidebarPage',\n    ShowPanel = 'showPanel',\n    Unsubscribe = 'unsubscribe',\n    UpdateButton = 'updateButton',\n    AttachSourceMapToResource = 'attachSourceMapToResource',\n    RegisterLanguageExtensionPlugin = 'registerLanguageExtensionPlugin',\n    GetWasmLinearMemory = 'getWasmLinearMemory',\n    GetWasmLocal = 'getWasmLocal',\n    GetWasmGlobal = 'getWasmGlobal',\n    GetWasmOp = 'getWasmOp',\n    RegisterRecorderExtensionPlugin = 'registerRecorderExtensionPlugin',\n    CreateRecorderView = 'createRecorderView',\n    ShowRecorderView = 'showRecorderView',\n    ShowNetworkPanel = 'showNetworkPanel',\n    ReportResourceLoad = 'reportResourceLoad',\n    SetFunctionRangesForScript = 'setFunctionRangesForScript',\n  }\n\n  export const enum LanguageExtensionPluginCommands {\n    AddRawModule = 'addRawModule',\n    RemoveRawModule = 'removeRawModule',\n    SourceLocationToRawLocation = 'sourceLocationToRawLocation',\n    RawLocationToSourceLocation = 'rawLocationToSourceLocation',\n    GetScopeInfo = 'getScopeInfo',\n    ListVariablesInScope = 'listVariablesInScope',\n    GetTypeInfo = 'getTypeInfo',\n    GetFormatter = 'getFormatter',\n    GetInspectableAddress = 'getInspectableAddress',\n    GetFunctionInfo = 'getFunctionInfo',\n    GetInlinedFunctionRanges = 'getInlinedFunctionRanges',\n    GetInlinedCalleesRanges = 'getInlinedCalleesRanges',\n    GetMappedLines = 'getMappedLines',\n    FormatValue = 'formatValue',\n    GetProperties = 'getProperties',\n    ReleaseObject = 'releaseObject',\n  }\n\n  export const enum LanguageExtensionPluginEvents {\n    UnregisteredLanguageExtensionPlugin = 'unregisteredLanguageExtensionPlugin',\n  }\n\n  export const enum RecorderExtensionPluginCommands {\n    Stringify = 'stringify',\n    StringifyStep = 'stringifyStep',\n    Replay = 'replay',\n  }\n\n  export const enum RecorderExtensionPluginEvents {\n    UnregisteredRecorderExtensionPlugin = 'unregisteredRecorderExtensionPlugin',\n  }\n\n  export interface EvaluateOptions {\n    frameURL?: string;\n    useContentScriptContext?: boolean;\n    scriptExecutionContext?: string;\n  }\n\n  interface RegisterLanguageExtensionPluginRequest {\n    command: Commands.RegisterLanguageExtensionPlugin;\n    pluginName: string;\n    port: MessagePort;\n    supportedScriptTypes: PublicAPI.Chrome.DevTools.SupportedScriptTypes;\n  }\n  export type RecordingExtensionPluginCapability = 'export'|'replay';\n  interface RegisterRecorderExtensionPluginRequest {\n    command: Commands.RegisterRecorderExtensionPlugin;\n    pluginName: string;\n    capabilities: RecordingExtensionPluginCapability[];\n    port: MessagePort;\n    mediaType?: string;\n  }\n  interface CreateRecorderViewRequest {\n    command: Commands.CreateRecorderView;\n    id: string;\n    title: string;\n    pagePath: string;\n  }\n  interface ShowRecorderViewRequest {\n    command: Commands.ShowRecorderView;\n    id: string;\n  }\n  interface SubscribeRequest {\n    command: Commands.Subscribe;\n    type: string;\n  }\n  interface UnsubscribeRequest {\n    command: Commands.Unsubscribe;\n    type: string;\n  }\n  interface AddRequestHeadersRequest {\n    command: Commands.AddRequestHeaders;\n    extensionId: string;\n    headers: Record<string, string>;\n  }\n  interface CreatePanelRequest {\n    command: Commands.CreatePanel;\n    id: string;\n    title: string;\n    page: string;\n  }\n  interface ShowPanelRequest {\n    command: Commands.ShowPanel;\n    id: string;\n  }\n  interface CreateToolbarButtonRequest {\n    command: Commands.CreateToolbarButton;\n    id: string;\n    icon: string;\n    panel: string;\n    tooltip?: string;\n    disabled?: boolean;\n  }\n  interface UpdateButtonRequest {\n    command: Commands.UpdateButton;\n    id: string;\n    icon?: string;\n    tooltip?: string;\n    disabled?: boolean;\n  }\n  interface CreateSidebarPaneRequest {\n    command: Commands.CreateSidebarPane;\n    id: string;\n    panel: string;\n    title: string;\n  }\n  interface SetSidebarHeightRequest {\n    command: Commands.SetSidebarHeight;\n    id: string;\n    height: string;\n  }\n  interface SetSidebarContentRequest {\n    command: Commands.SetSidebarContent;\n    id: string;\n    expression: string;\n    evaluateOnPage?: boolean;\n    rootTitle?: string;\n    evaluateOptions?: EvaluateOptions;\n  }\n  interface SetSidebarPageRequest {\n    command: Commands.SetSidebarPage;\n    id: string;\n    page: string;\n  }\n  interface OpenResourceRequest {\n    command: Commands.OpenResource;\n    url: Platform.DevToolsPath.UrlString;\n    lineNumber: number;\n    columnNumber: number;\n  }\n  interface SetOpenResourceHandlerRequest {\n    command: Commands.SetOpenResourceHandler;\n    handlerPresent: boolean;\n    urlScheme?: string;\n  }\n  interface SetThemeChangeHandlerRequest {\n    command: Commands.SetThemeChangeHandler;\n    handlerPresent: boolean;\n  }\n  interface ReloadRequest {\n    command: Commands.Reload;\n    options: null|{\n      userAgent?: string,\n      injectedScript?: string,\n      ignoreCache?: boolean,\n    };\n  }\n  interface EvaluateOnInspectedPageRequest {\n    command: Commands.EvaluateOnInspectedPage;\n    expression: string;\n    evaluateOptions?: EvaluateOptions;\n  }\n  interface GetRequestContentRequest {\n    command: Commands.GetRequestContent;\n    id: number;\n  }\n  interface GetResourceContentRequest {\n    command: Commands.GetResourceContent;\n    url: string;\n  }\n  interface AttachSourceMapToResourceRequest {\n    command: Commands.AttachSourceMapToResource;\n    contentUrl: string;\n    sourceMapURL: string;\n  }\n  interface SetResourceContentRequest {\n    command: Commands.SetResourceContent;\n    url: string;\n    content: string;\n    commit: boolean;\n  }\n  interface SetFunctionRangesForScriptRequest {\n    command: Commands.SetFunctionRangesForScript;\n    scriptUrl: string;\n    ranges: PublicAPI.Chrome.DevTools.NamedFunctionRange[];\n  }\n  interface ForwardKeyboardEventRequest {\n    command: Commands.ForwardKeyboardEvent;\n    entries: Array<KeyboardEventInit&{eventType: string}>;\n  }\n  interface GetHARRequest {\n    command: Commands.GetHAR;\n  }\n  interface GetPageResourcesRequest {\n    command: Commands.GetPageResources;\n  }\n  interface GetWasmLinearMemoryRequest {\n    command: Commands.GetWasmLinearMemory;\n    offset: number;\n    length: number;\n    stopId: unknown;\n  }\n  interface GetWasmLocalRequest {\n    command: Commands.GetWasmLocal;\n    local: number;\n    stopId: unknown;\n  }\n  interface GetWasmGlobalRequest {\n    command: Commands.GetWasmGlobal;\n    global: number;\n    stopId: unknown;\n  }\n  interface GetWasmOpRequest {\n    command: Commands.GetWasmOp;\n    op: number;\n    stopId: unknown;\n  }\n  interface ShowNetworkPanelRequest {\n    command: Commands.ShowNetworkPanel;\n    filter: string|undefined;\n  }\n  interface ReportResourceLoadRequest {\n    command: Commands.ReportResourceLoad;\n    extensionId: string;\n    resourceUrl: string;\n    status: {success: boolean, errorMessage?: string, size?: number};\n  }\n\n  export type ServerRequests = ShowRecorderViewRequest|CreateRecorderViewRequest|RegisterRecorderExtensionPluginRequest|\n      RegisterLanguageExtensionPluginRequest|SubscribeRequest|UnsubscribeRequest|AddRequestHeadersRequest|\n      CreatePanelRequest|ShowPanelRequest|CreateToolbarButtonRequest|UpdateButtonRequest|CreateSidebarPaneRequest|\n      SetSidebarHeightRequest|SetSidebarContentRequest|SetSidebarPageRequest|OpenResourceRequest|\n      SetOpenResourceHandlerRequest|SetThemeChangeHandlerRequest|ReloadRequest|EvaluateOnInspectedPageRequest|\n      GetRequestContentRequest|GetResourceContentRequest|SetResourceContentRequest|SetFunctionRangesForScriptRequest|\n      AttachSourceMapToResourceRequest|ForwardKeyboardEventRequest|GetHARRequest|GetPageResourcesRequest|\n      GetWasmLinearMemoryRequest|GetWasmLocalRequest|GetWasmGlobalRequest|GetWasmOpRequest|ShowNetworkPanelRequest|\n      ReportResourceLoadRequest;\n  export type ExtensionServerRequestMessage = PrivateAPI.ServerRequests&{requestId?: number};\n\n  interface AddRawModuleRequest {\n    method: LanguageExtensionPluginCommands.AddRawModule;\n    parameters: {rawModuleId: string, symbolsURL: string|undefined, rawModule: PublicAPI.Chrome.DevTools.RawModule};\n  }\n  interface SourceLocationToRawLocationRequest {\n    method: LanguageExtensionPluginCommands.SourceLocationToRawLocation;\n    parameters: {sourceLocation: PublicAPI.Chrome.DevTools.SourceLocation};\n  }\n  interface RawLocationToSourceLocationRequest {\n    method: LanguageExtensionPluginCommands.RawLocationToSourceLocation;\n    parameters: {rawLocation: PublicAPI.Chrome.DevTools.RawLocation};\n  }\n  interface GetScopeInfoRequest {\n    method: LanguageExtensionPluginCommands.GetScopeInfo;\n    parameters: {type: string};\n  }\n  interface ListVariablesInScopeRequest {\n    method: LanguageExtensionPluginCommands.ListVariablesInScope;\n    parameters: {rawLocation: PublicAPI.Chrome.DevTools.RawLocation};\n  }\n  interface RemoveRawModuleRequest {\n    method: LanguageExtensionPluginCommands.RemoveRawModule;\n    parameters: {rawModuleId: string};\n  }\n  interface GetFunctionInfoRequest {\n    method: LanguageExtensionPluginCommands.GetFunctionInfo;\n    parameters: {rawLocation: PublicAPI.Chrome.DevTools.RawLocation};\n  }\n  interface GetInlinedFunctionRangesRequest {\n    method: LanguageExtensionPluginCommands.GetInlinedFunctionRanges;\n    parameters: {rawLocation: PublicAPI.Chrome.DevTools.RawLocation};\n  }\n  interface GetInlinedCalleesRangesRequest {\n    method: LanguageExtensionPluginCommands.GetInlinedCalleesRanges;\n    parameters: {rawLocation: PublicAPI.Chrome.DevTools.RawLocation};\n  }\n  interface GetMappedLinesRequest {\n    method: LanguageExtensionPluginCommands.GetMappedLines;\n    parameters: {rawModuleId: string, sourceFileURL: string};\n  }\n  interface FormatValueRequest {\n    method: LanguageExtensionPluginCommands.FormatValue;\n    parameters: {expression: string, context: PublicAPI.Chrome.DevTools.RawLocation, stopId: number};\n  }\n  interface GetPropertiesRequest {\n    method: LanguageExtensionPluginCommands.GetProperties;\n    parameters: {objectId: PublicAPI.Chrome.DevTools.RemoteObjectId};\n  }\n  interface ReleaseObjectRequest {\n    method: LanguageExtensionPluginCommands.ReleaseObject;\n    parameters: {objectId: PublicAPI.Chrome.DevTools.RemoteObjectId};\n  }\n\n  export type LanguageExtensionRequests =\n      AddRawModuleRequest|SourceLocationToRawLocationRequest|RawLocationToSourceLocationRequest|GetScopeInfoRequest|\n      ListVariablesInScopeRequest|RemoveRawModuleRequest|GetFunctionInfoRequest|GetInlinedFunctionRangesRequest|\n      GetInlinedCalleesRangesRequest|GetMappedLinesRequest|FormatValueRequest|GetPropertiesRequest|ReleaseObjectRequest;\n\n  interface StringifyRequest {\n    method: RecorderExtensionPluginCommands.Stringify;\n    parameters: {recording: Record<string, unknown>};\n  }\n\n  interface StringifyStepRequest {\n    method: RecorderExtensionPluginCommands.StringifyStep;\n    parameters: {step: Record<string, unknown>};\n  }\n\n  interface ReplayRequest {\n    method: RecorderExtensionPluginCommands.Replay;\n    parameters: {recording: Record<string, unknown>};\n  }\n\n  export type RecorderExtensionRequests = StringifyRequest|StringifyStepRequest|ReplayRequest;\n}\n\ndeclare global {\n  interface Window {\n    injectedExtensionAPI:\n        (extensionInfo: ExtensionDescriptor, inspectedTabId: string, themeName: string, keysToForward: number[],\n         testHook:\n             (extensionServer: APIImpl.ExtensionServerClient, extensionAPI: APIImpl.InspectorExtensionAPI) => unknown,\n         injectedScriptId: number, targetWindow?: Window) => void;\n    buildExtensionAPIInjectedScript(\n        extensionInfo: ExtensionDescriptor, inspectedTabId: string, themeName: string, keysToForward: number[],\n        testHook: undefined|((extensionServer: unknown, extensionAPI: unknown) => unknown)): string;\n    chrome: PublicAPI.Chrome.DevTools.Chrome;\n    webInspector?: APIImpl.InspectorExtensionAPI;\n  }\n}\n\nexport interface ExtensionDescriptor {\n  startPage: string;\n  name: string;\n  exposeExperimentalAPIs: boolean;\n  exposeWebInspectorNamespace?: boolean;\n  allowFileAccess?: boolean;\n}\n\nnamespace APIImpl {\n  export interface InspectorExtensionAPI {\n    languageServices: PublicAPI.Chrome.DevTools.LanguageExtensions;\n    recorder: PublicAPI.Chrome.DevTools.RecorderExtensions;\n    performance: PublicAPI.Chrome.DevTools.Performance;\n    network: PublicAPI.Chrome.DevTools.Network;\n    panels: PublicAPI.Chrome.DevTools.Panels;\n    inspectedWindow: PublicAPI.Chrome.DevTools.InspectedWindow;\n  }\n\n  export interface ExtensionServerClient {\n    _callbacks: Record<string, (response: unknown) => unknown>;\n    _handlers: Record<string, (request: {arguments: unknown[]}) => unknown>;\n    _lastRequestId: number;\n    _lastObjectId: number;\n    _port: MessagePort;\n\n    _onCallback(request: unknown): void;\n    _onMessage(event: MessageEvent<{command: string, requestId: number, arguments: unknown[]}>): void;\n    _registerCallback(callback: (response: unknown) => unknown): number;\n    registerHandler(command: string, handler: (request: {arguments: unknown[]}) => unknown): void;\n    unregisterHandler(command: string): void;\n    hasHandler(command: string): boolean;\n    sendRequest<ResponseT>(\n        request: PrivateAPI.ServerRequests, callback?: ((response: ResponseT) => unknown), transfers?: unknown[]): void;\n    nextObjectId(): string;\n  }\n\n  export type Callable = (...args: any[]) => void;\n\n  export interface EventSink<ListenerT extends Callable> extends PublicAPI.Chrome.DevTools.EventSink<ListenerT> {\n    _type: string;\n    _listeners: ListenerT[];\n    _customDispatch: undefined|((this: EventSink<ListenerT>, request: {arguments: unknown[]}) => unknown);\n\n    _fire(..._vararg: Parameters<ListenerT>): void;\n    _dispatch(request: {arguments: unknown[]}): void;\n  }\n\n  export interface Network extends PublicAPI.Chrome.DevTools.Network {\n    addRequestHeaders(headers: Record<string, string>): void;\n  }\n\n  export interface Request extends PublicAPI.Chrome.DevTools.Request, HAR.Log.EntryDTO {\n    _id: number;\n  }\n\n  export interface Panels extends PublicAPI.Chrome.DevTools.Panels {\n    get SearchAction(): Record<string, string>;\n    setOpenResourceHandler(\n        callback?: (resource: PublicAPI.Chrome.DevTools.Resource, lineNumber: number, columnNumber: number) => unknown):\n        void;\n    setThemeChangeHandler(callback?: (themeName: string) => unknown): void;\n  }\n\n  export interface ExtensionView extends PublicAPI.Chrome.DevTools.ExtensionView {\n    _id: string|null;\n  }\n\n  export interface ExtensionSidebarPane extends ExtensionView, PublicAPI.Chrome.DevTools.ExtensionSidebarPane {\n    setExpression(\n        expression: string, rootTitle?: string, evaluteOptions?: PrivateAPI.EvaluateOptions,\n        callback?: () => unknown): void;\n  }\n\n  export interface PanelWithSidebar extends ExtensionView, PublicAPI.Chrome.DevTools.PanelWithSidebar {\n    _hostPanelName: string;\n  }\n\n  export interface LanguageExtensions extends PublicAPI.Chrome.DevTools.LanguageExtensions {\n    _plugins: Map<PublicAPI.Chrome.DevTools.LanguageExtensionPlugin, MessagePort>;\n  }\n\n  export interface RecorderExtensions extends PublicAPI.Chrome.DevTools.RecorderExtensions {\n    _plugins: Map<PublicAPI.Chrome.DevTools.RecorderExtensionPlugin, MessagePort>;\n  }\n\n  export interface ExtensionPanel extends ExtensionView, PublicAPI.Chrome.DevTools.ExtensionPanel {\n    show(): void;\n  }\n\n  export interface RecorderView extends ExtensionView, PublicAPI.Chrome.DevTools.RecorderView {}\n\n  export interface Button extends PublicAPI.Chrome.DevTools.Button {\n    _id: string;\n  }\n\n  export interface ResourceData {\n    url: string;\n    type: string;\n    buildId?: string;\n  }\n  export interface Resource extends PublicAPI.Chrome.DevTools.Resource {\n    _type: string;\n    _url: string;\n    _buildId?: string;\n\n    get type(): string;\n  }\n}\n\nself.injectedExtensionAPI = function(\n    extensionInfo: ExtensionDescriptor, inspectedTabId: string, themeName: string, keysToForward: number[],\n    testHook: (extensionServer: APIImpl.ExtensionServerClient, extensionAPI: APIImpl.InspectorExtensionAPI) => unknown,\n    injectedScriptId: number, targetWindowForTest?: Window): void {\n  const keysToForwardSet = new Set<number>(keysToForward);\n  const chrome = window.chrome || {};\n\n  const devtools_descriptor = Object.getOwnPropertyDescriptor(chrome, 'devtools');\n  if (devtools_descriptor) {\n    return;\n  }\n  let userAction = false;\n  let userRecorderAction = false;\n\n  // Here and below, all constructors are private to API implementation.\n  // For a public type Foo, if internal fields are present, these are on\n  // a private FooImpl type, an instance of FooImpl is used in a closure\n  // by Foo consutrctor to re-bind publicly exported members to an instance\n  // of Foo.\n\n  function EventSinkImpl<ListenerT extends APIImpl.Callable>(\n      this: APIImpl.EventSink<ListenerT>, type: string,\n      customDispatch?: (this: APIImpl.EventSink<ListenerT>, request: {arguments: unknown[]}) => unknown): void {\n    this._type = type;\n    this._listeners = [];\n    this._customDispatch = customDispatch;\n  }\n\n  EventSinkImpl.prototype = {\n    addListener: function<ListenerT extends APIImpl.Callable>(this: APIImpl.EventSink<ListenerT>, callback: ListenerT):\n        void {\n          if (typeof callback !== 'function') {\n            throw new Error('addListener: callback is not a function');\n          }\n          if (this._listeners.length === 0) {\n            extensionServer.sendRequest({command: PrivateAPI.Commands.Subscribe, type: this._type});\n          }\n          this._listeners.push(callback);\n          extensionServer.registerHandler('notify-' + this._type, this._dispatch.bind(this));\n        },\n\n    removeListener: function<ListenerT extends APIImpl.Callable>(\n        this: APIImpl.EventSink<ListenerT>, callback: ListenerT): void {\n      const listeners = this._listeners;\n\n      for (let i = 0; i < listeners.length; ++i) {\n        if (listeners[i] === callback) {\n          listeners.splice(i, 1);\n          break;\n        }\n      }\n      if (this._listeners.length === 0) {\n        extensionServer.sendRequest({command: PrivateAPI.Commands.Unsubscribe, type: this._type});\n      }\n    },\n\n    _fire: function<ListenerT extends APIImpl.Callable>(\n        this: APIImpl.EventSink<ListenerT>, ..._vararg: Parameters<ListenerT>): void {\n      const listeners = this._listeners.slice();\n      for (let i = 0; i < listeners.length; ++i) {\n        listeners[i].apply(null, Array.from(arguments));\n      }\n    },\n\n    _dispatch: function<ListenerT extends APIImpl.Callable>(\n        this: APIImpl.EventSink<ListenerT>, request: {arguments: unknown[]}): void {\n      if (this._customDispatch) {\n        this._customDispatch.call(this, request);\n      } else {\n        this._fire.apply(this, request.arguments as Parameters<ListenerT>);\n      }\n    },\n  };\n\n  function Constructor<NewT extends APIImpl.Callable>(ctor: NewT): new (...args: Parameters<NewT>) =>\n      ThisParameterType<NewT> {\n    return ctor as unknown as new (...args: Parameters<NewT>) => ThisParameterType<NewT>;\n  }\n\n  function InspectorExtensionAPI(this: APIImpl.InspectorExtensionAPI): void {\n    this.inspectedWindow = new (Constructor(InspectedWindow))();\n    this.panels = new (Constructor(Panels))();\n    this.network = new (Constructor(Network))();\n    this.languageServices = new (Constructor(LanguageServicesAPI))();\n    this.recorder = new (Constructor(RecorderServicesAPI))();\n    this.performance = new (Constructor(Performance))();\n    defineDeprecatedProperty(this, 'webInspector', 'resources', 'network');\n  }\n\n  function Network(this: APIImpl.Network): void {\n    function dispatchRequestEvent(\n        this: APIImpl.EventSink<(request: PublicAPI.Chrome.DevTools.Request) => unknown>,\n        message: {arguments: unknown[]}): void {\n      const request = message.arguments[1] as APIImpl.Request & {__proto__: APIImpl.Request};\n\n      request.__proto__ = new (Constructor(Request))(message.arguments[0] as number);\n      this._fire(request);\n    }\n\n    this.onRequestFinished =\n        new (Constructor(EventSink))(PrivateAPI.Events.NetworkRequestFinished, dispatchRequestEvent);\n    defineDeprecatedProperty(this, 'network', 'onFinished', 'onRequestFinished');\n\n    this.onNavigated = new (Constructor(EventSink))(PrivateAPI.Events.InspectedURLChanged);\n  }\n\n  (Network.prototype as Pick<APIImpl.Network, 'getHAR'|'addRequestHeaders'>) = {\n    getHAR: function(this: PublicAPI.Chrome.DevTools.Network, callback?: (harLog: Object) => unknown): void {\n      function callbackWrapper(response: unknown): void {\n        const result =\n            response as ({entries: Array<HAR.Log.EntryDTO&{__proto__?: APIImpl.Request, _requestId?: number}>});\n        const entries = (result?.entries) || [];\n        for (let i = 0; i < entries.length; ++i) {\n          entries[i].__proto__ = new (Constructor(Request))(entries[i]._requestId as number);\n          delete entries[i]._requestId;\n        }\n        callback?.(result as Object);\n      }\n      extensionServer.sendRequest({command: PrivateAPI.Commands.GetHAR}, callback && callbackWrapper);\n    },\n\n    addRequestHeaders: function(headers: Record<string, string>): void {\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.AddRequestHeaders, headers, extensionId: window.location.hostname});\n    },\n  };\n\n  function RequestImpl(this: APIImpl.Request, id: number): void {\n    this._id = id;\n  }\n\n  (RequestImpl.prototype as Pick<APIImpl.Request, 'getContent'>) = {\n    getContent: function(this: APIImpl.Request, callback?: (content: string, encoding: string) => unknown): void {\n      function callbackWrapper(response: unknown): void {\n        const {content, encoding} = response as {content: string, encoding: string};\n        callback?.(content, encoding);\n      }\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.GetRequestContent, id: this._id}, callback && callbackWrapper);\n    },\n  };\n\n  function Panels(this: APIImpl.Panels): void {\n    const panels: Record<string, ElementsPanel|SourcesPanel|PublicAPI.Chrome.DevTools.NetworkPanel> = {\n      elements: new ElementsPanel(),\n      sources: new SourcesPanel(),\n      network: new (Constructor(NetworkPanel))(),\n    };\n\n    function panelGetter(name: string): ElementsPanel|SourcesPanel|PublicAPI.Chrome.DevTools.NetworkPanel {\n      return panels[name];\n    }\n    for (const panel in panels) {\n      Object.defineProperty(this, panel, {get: panelGetter.bind(null, panel), enumerable: true});\n    }\n  }\n\n  (Panels.prototype as\n   Pick<APIImpl.Panels, 'create'|'setOpenResourceHandler'|'openResource'|'SearchAction'|'setThemeChangeHandler'>) = {\n    create: function(\n        title: string, _icon: string, page: string,\n        callback: (panel: PublicAPI.Chrome.DevTools.ExtensionPanel) => unknown): void {\n      const id = 'extension-panel-' + extensionServer.nextObjectId();\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.CreatePanel, id, title, page},\n          callback && (() => callback.call(this, new (Constructor(ExtensionPanel))(id))));\n    },\n\n    setOpenResourceHandler: function(\n        callback: (resource: PublicAPI.Chrome.DevTools.Resource, lineNumber: number, columnNumber: number) => unknown,\n        urlScheme?: string): void {\n      const hadHandler = extensionServer.hasHandler(PrivateAPI.Events.OpenResource);\n\n      function callbackWrapper(message: unknown): void {\n        // Allow the panel to show itself when handling the event.\n        userAction = true;\n        try {\n          const {resource, lineNumber, columnNumber} =\n              message as {resource: APIImpl.ResourceData, lineNumber: number, columnNumber: number};\n          callback.call(null, new (Constructor(Resource))(resource), lineNumber, columnNumber);\n        } finally {\n          userAction = false;\n        }\n      }\n\n      if (!callback) {\n        extensionServer.unregisterHandler(PrivateAPI.Events.OpenResource);\n      } else {\n        extensionServer.registerHandler(PrivateAPI.Events.OpenResource, callbackWrapper);\n      }\n\n      // Only send command if we either removed an existing handler or added handler and had none before.\n      if (hadHandler === !callback) {\n        extensionServer.sendRequest(\n            {command: PrivateAPI.Commands.SetOpenResourceHandler, handlerPresent: Boolean(callback), urlScheme});\n      }\n    },\n\n    setThemeChangeHandler: function(callback: (themeName: string) => unknown): void {\n      const hadHandler = extensionServer.hasHandler(PrivateAPI.Events.ThemeChange);\n\n      function callbackWrapper(message: unknown): void {\n        const {themeName} = message as {themeName: string};\n        chrome.devtools.panels.themeName = themeName;\n        callback.call(null, themeName);\n      }\n\n      if (!callback) {\n        extensionServer.unregisterHandler(PrivateAPI.Events.ThemeChange);\n      } else {\n        extensionServer.registerHandler(PrivateAPI.Events.ThemeChange, callbackWrapper);\n      }\n\n      // Only send command if we either removed an existing handler or added handler and had none before.\n      if (hadHandler === !callback) {\n        extensionServer.sendRequest(\n            {command: PrivateAPI.Commands.SetThemeChangeHandler, handlerPresent: Boolean(callback)});\n      }\n    },\n\n    openResource: function(\n        url: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber?: number,\n        _callback?: (response: unknown) => unknown): void {\n      const callbackArg = extractCallbackArgument(arguments);\n      // Handle older API:\n      const columnNumberArg = typeof columnNumber === 'number' ? columnNumber : 0;\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.OpenResource, url, lineNumber, columnNumber: columnNumberArg}, callbackArg);\n    },\n\n    get SearchAction(): Record<string, string> {\n      return {\n        CancelSearch: PrivateAPI.Panels.SearchAction.CancelSearch,\n        PerformSearch: PrivateAPI.Panels.SearchAction.PerformSearch,\n        NextSearchResult: PrivateAPI.Panels.SearchAction.NextSearchResult,\n        PreviousSearchResult: PrivateAPI.Panels.SearchAction.PreviousSearchResult,\n      };\n    },\n  };\n\n  function ExtensionViewImpl(this: APIImpl.ExtensionView, id: string|null): void {\n    this._id = id;\n\n    function dispatchShowEvent(\n        this: APIImpl.EventSink<(window?: Window) => unknown>, message: {arguments: unknown[]}): void {\n      const frameIndex = message.arguments[0];\n      if (typeof frameIndex === 'number') {\n        this._fire(window.parent.frames[frameIndex]);\n      } else {\n        this._fire();\n      }\n    }\n\n    if (id) {\n      this.onShown = new (Constructor(EventSink))(PrivateAPI.Events.ViewShown + id, dispatchShowEvent);\n\n      this.onHidden = new (Constructor(EventSink))(PrivateAPI.Events.ViewHidden + id);\n    }\n  }\n\n  function PanelWithSidebarImpl(this: APIImpl.PanelWithSidebar, hostPanelName: string): void {\n    ExtensionViewImpl.call(this, null);\n    this._hostPanelName = hostPanelName;\n\n    this.onSelectionChanged = new (Constructor(EventSink))(PrivateAPI.Events.PanelObjectSelected + hostPanelName);\n  }\n\n  (PanelWithSidebarImpl.prototype as Pick<APIImpl.PanelWithSidebar, 'createSidebarPane'>&\n   {__proto__: APIImpl.ExtensionView}) = {\n    createSidebarPane: function(\n        this: APIImpl.PanelWithSidebar, title: string,\n        callback?: (pane: PublicAPI.Chrome.DevTools.ExtensionSidebarPane) => unknown): void {\n      const id = 'extension-sidebar-' + extensionServer.nextObjectId();\n      function callbackWrapper(): void {\n        callback?.(new (Constructor(ExtensionSidebarPane))(id));\n      }\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.CreateSidebarPane, panel: this._hostPanelName, id, title},\n          callback && callbackWrapper);\n    },\n\n    __proto__: ExtensionViewImpl.prototype,\n  };\n\n  function RecorderServicesAPIImpl(this: APIImpl.RecorderExtensions): void {\n    this._plugins = new Map();\n  }\n\n  async function registerRecorderExtensionPluginImpl(\n      this: APIImpl.RecorderExtensions, plugin: PublicAPI.Chrome.DevTools.RecorderExtensionPlugin, pluginName: string,\n      mediaType?: string): Promise<void> {\n    if (this._plugins.has(plugin)) {\n      throw new Error(`Tried to register plugin '${pluginName}' twice`);\n    }\n    const channel = new MessageChannel();\n    const port = channel.port1;\n    this._plugins.set(plugin, port);\n    port.onmessage = ({data}: MessageEvent<{requestId: number}&PrivateAPI.RecorderExtensionRequests>): void => {\n      const {requestId} = data;\n      dispatchMethodCall(data)\n          .then(result => port.postMessage({requestId, result}))\n          .catch(error => port.postMessage({requestId, error: {message: error.message}}));\n    };\n\n    async function dispatchMethodCall(request: PrivateAPI.RecorderExtensionRequests): Promise<unknown> {\n      switch (request.method) {\n        case PrivateAPI.RecorderExtensionPluginCommands.Stringify:\n          return await (plugin as PublicAPI.Chrome.DevTools.RecorderExtensionExportPlugin)\n              .stringify(request.parameters.recording);\n        case PrivateAPI.RecorderExtensionPluginCommands.StringifyStep:\n          return await (plugin as PublicAPI.Chrome.DevTools.RecorderExtensionExportPlugin)\n              .stringifyStep(request.parameters.step);\n        case PrivateAPI.RecorderExtensionPluginCommands.Replay:\n          try {\n            userAction = true;\n            userRecorderAction = true;\n            return (plugin as PublicAPI.Chrome.DevTools.RecorderExtensionReplayPlugin)\n                .replay(request.parameters.recording);\n          } finally {\n            userAction = false;\n            userRecorderAction = false;\n          }\n        default:\n          // @ts-expect-error\n          throw new Error(`'${request.method}' is not recognized`);\n      }\n    }\n\n    const capabilities: PrivateAPI.RecordingExtensionPluginCapability[] = [];\n\n    if ('stringify' in plugin && 'stringifyStep' in plugin) {\n      capabilities.push('export');\n    }\n\n    if ('replay' in plugin) {\n      capabilities.push('replay');\n    }\n\n    await new Promise<void>(resolve => {\n      extensionServer.sendRequest(\n          {\n            command: PrivateAPI.Commands.RegisterRecorderExtensionPlugin,\n            pluginName,\n            mediaType,\n            capabilities,\n            port: channel.port2,\n          },\n          () => resolve(), [channel.port2]);\n    });\n  }\n\n  (RecorderServicesAPIImpl.prototype as Pick<\n       APIImpl.RecorderExtensions,\n       'registerRecorderExtensionPlugin'|'unregisterRecorderExtensionPlugin'|'createView'>) = {\n    registerRecorderExtensionPlugin: registerRecorderExtensionPluginImpl,\n    unregisterRecorderExtensionPlugin: async function(\n        this: APIImpl.RecorderExtensions, plugin: PublicAPI.Chrome.DevTools.RecorderExtensionPlugin): Promise<void> {\n      const port = this._plugins.get(plugin);\n      if (!port) {\n        throw new Error('Tried to unregister a plugin that was not previously registered');\n      }\n      this._plugins.delete(plugin);\n      port.postMessage({event: PrivateAPI.RecorderExtensionPluginEvents.UnregisteredRecorderExtensionPlugin});\n      port.close();\n    },\n    createView: async function(this: APIImpl.RecorderExtensions, title: string, pagePath: string):\n        Promise<PublicAPI.Chrome.DevTools.RecorderView> {\n          const id = 'recorder-extension-view-' + extensionServer.nextObjectId();\n          await new Promise(resolve => {\n            extensionServer.sendRequest(\n                {command: PrivateAPI.Commands.CreateRecorderView, id, title, pagePath}, resolve);\n          });\n          return new (Constructor(RecorderView))(id);\n        },\n  };\n\n  function LanguageServicesAPIImpl(this: APIImpl.LanguageExtensions): void {\n    this._plugins = new Map();\n  }\n\n  (LanguageServicesAPIImpl.prototype as PublicAPI.Chrome.DevTools.LanguageExtensions) = {\n    registerLanguageExtensionPlugin: async function(\n        this: APIImpl.LanguageExtensions, plugin: PublicAPI.Chrome.DevTools.LanguageExtensionPlugin, pluginName: string,\n        supportedScriptTypes: PublicAPI.Chrome.DevTools.SupportedScriptTypes): Promise<void> {\n      if (this._plugins.has(plugin)) {\n        throw new Error(`Tried to register plugin '${pluginName}' twice`);\n      }\n      const channel = new MessageChannel();\n      const port = channel.port1;\n      this._plugins.set(plugin, port);\n      port.onmessage = ({data}: MessageEvent<{requestId: number}&PrivateAPI.LanguageExtensionRequests>): void => {\n        const {requestId} = data;\n        console.time(`${requestId}: ${data.method}`);\n        dispatchMethodCall(data)\n            .then(result => port.postMessage({requestId, result}))\n            .catch(error => port.postMessage({requestId, error: {message: error.message}}))\n            .finally(() => console.timeEnd(`${requestId}: ${data.method}`));\n      };\n\n      function dispatchMethodCall(request: PrivateAPI.LanguageExtensionRequests): Promise<unknown> {\n        switch (request.method) {\n          case PrivateAPI.LanguageExtensionPluginCommands.AddRawModule:\n            return plugin.addRawModule(\n                request.parameters.rawModuleId, request.parameters.symbolsURL, request.parameters.rawModule);\n          case PrivateAPI.LanguageExtensionPluginCommands.RemoveRawModule:\n            return plugin.removeRawModule(request.parameters.rawModuleId);\n          case PrivateAPI.LanguageExtensionPluginCommands.SourceLocationToRawLocation:\n            return plugin.sourceLocationToRawLocation(request.parameters.sourceLocation);\n          case PrivateAPI.LanguageExtensionPluginCommands.RawLocationToSourceLocation:\n            return plugin.rawLocationToSourceLocation(request.parameters.rawLocation);\n          case PrivateAPI.LanguageExtensionPluginCommands.GetScopeInfo:\n            return plugin.getScopeInfo(request.parameters.type);\n          case PrivateAPI.LanguageExtensionPluginCommands.ListVariablesInScope:\n            return plugin.listVariablesInScope(request.parameters.rawLocation);\n          case PrivateAPI.LanguageExtensionPluginCommands.GetFunctionInfo:\n            return plugin.getFunctionInfo(request.parameters.rawLocation);\n          case PrivateAPI.LanguageExtensionPluginCommands.GetInlinedFunctionRanges:\n            return plugin.getInlinedFunctionRanges(request.parameters.rawLocation);\n          case PrivateAPI.LanguageExtensionPluginCommands.GetInlinedCalleesRanges:\n            return plugin.getInlinedCalleesRanges(request.parameters.rawLocation);\n          case PrivateAPI.LanguageExtensionPluginCommands.GetMappedLines:\n            if ('getMappedLines' in plugin) {\n              return plugin.getMappedLines(request.parameters.rawModuleId, request.parameters.sourceFileURL);\n            }\n            return Promise.resolve(undefined);\n          case PrivateAPI.LanguageExtensionPluginCommands.FormatValue:\n            if ('evaluate' in plugin && plugin.evaluate) {\n              return plugin.evaluate(\n                  request.parameters.expression, request.parameters.context, request.parameters.stopId);\n            }\n            return Promise.resolve(undefined);\n          case PrivateAPI.LanguageExtensionPluginCommands.GetProperties:\n            if ('getProperties' in plugin && plugin.getProperties) {\n              return plugin.getProperties(request.parameters.objectId);\n            }\n            if (!('evaluate' in plugin &&\n                  plugin.evaluate)) {  // If evalute is defined but the remote objects methods aren't, that's a bug\n              return Promise.resolve(undefined);\n            }\n            break;\n          case PrivateAPI.LanguageExtensionPluginCommands.ReleaseObject:\n            if ('releaseObject' in plugin && plugin.releaseObject) {\n              return plugin.releaseObject(request.parameters.objectId);\n            }\n            break;\n        }\n        throw new Error(`Unknown language plugin method ${request.method}`);\n      }\n\n      await new Promise<void>(resolve => {\n        extensionServer.sendRequest(\n            {\n              command: PrivateAPI.Commands.RegisterLanguageExtensionPlugin,\n              pluginName,\n              port: channel.port2,\n              supportedScriptTypes,\n            },\n            () => resolve(), [channel.port2]);\n      });\n    },\n\n    unregisterLanguageExtensionPlugin: async function(\n        this: APIImpl.LanguageExtensions, plugin: PublicAPI.Chrome.DevTools.LanguageExtensionPlugin): Promise<void> {\n      const port = this._plugins.get(plugin);\n      if (!port) {\n        throw new Error('Tried to unregister a plugin that was not previously registered');\n      }\n      this._plugins.delete(plugin);\n      port.postMessage({event: PrivateAPI.LanguageExtensionPluginEvents.UnregisteredLanguageExtensionPlugin});\n      port.close();\n    },\n\n    getWasmLinearMemory: async function(\n        this: APIImpl.LanguageExtensions, offset: number, length: number, stopId: number): Promise<ArrayBuffer> {\n      const result = await new Promise(\n          resolve => extensionServer.sendRequest(\n              {command: PrivateAPI.Commands.GetWasmLinearMemory, offset, length, stopId}, resolve));\n      if (Array.isArray(result)) {\n        return new Uint8Array(result).buffer;\n      }\n      return new ArrayBuffer(0);\n    },\n    getWasmLocal: async function(\n        this: APIImpl.LanguageExtensions, local: number, stopId: number): Promise<PublicAPI.Chrome.DevTools.WasmValue> {\n      return await new Promise(\n          resolve => extensionServer.sendRequest({command: PrivateAPI.Commands.GetWasmLocal, local, stopId}, resolve));\n    },\n    getWasmGlobal: async function(this: APIImpl.LanguageExtensions, global: number, stopId: number):\n        Promise<PublicAPI.Chrome.DevTools.WasmValue> {\n          return await new Promise(\n              resolve =>\n                  extensionServer.sendRequest({command: PrivateAPI.Commands.GetWasmGlobal, global, stopId}, resolve));\n        },\n    getWasmOp: async function(this: APIImpl.LanguageExtensions, op: number, stopId: number):\n        Promise<PublicAPI.Chrome.DevTools.WasmValue> {\n          return await new Promise(\n              resolve => extensionServer.sendRequest({command: PrivateAPI.Commands.GetWasmOp, op, stopId}, resolve));\n        },\n\n    reportResourceLoad: function(resourceUrl: string, status: {success: boolean, errorMessage?: string, size?: number}):\n        Promise<void> {\n          return new Promise(\n              resolve => extensionServer.sendRequest(\n                  {\n                    command: PrivateAPI.Commands.ReportResourceLoad,\n                    extensionId: window.location.origin,\n                    resourceUrl,\n                    status,\n                  },\n                  resolve));\n        },\n\n  };\n\n  function NetworkPanelImpl(this: PublicAPI.Chrome.DevTools.NetworkPanel): void {\n  }\n\n  (NetworkPanelImpl.prototype as Pick<PublicAPI.Chrome.DevTools.NetworkPanel, 'show'>) = {\n    show: function(options?: {filter: string}): Promise<void> {\n      return new Promise<void>(\n          resolve => extensionServer.sendRequest(\n              {command: PrivateAPI.Commands.ShowNetworkPanel, filter: options?.filter}, () => resolve()));\n    },\n  };\n\n  function PerformanceImpl(this: PublicAPI.Chrome.DevTools.Performance): void {\n    function dispatchProfilingStartedEvent(this: APIImpl.EventSink<() => unknown>): void {\n      this._fire();\n    }\n\n    function dispatchProfilingStoppedEvent(this: APIImpl.EventSink<() => unknown>): void {\n      this._fire();\n    }\n\n    this.onProfilingStarted =\n        new (Constructor(EventSink))(PrivateAPI.Events.ProfilingStarted, dispatchProfilingStartedEvent);\n    this.onProfilingStopped =\n        new (Constructor(EventSink))(PrivateAPI.Events.ProfilingStopped, dispatchProfilingStoppedEvent);\n  }\n\n  function declareInterfaceClass<ImplT extends APIImpl.Callable>(implConstructor: ImplT): (\n      this: ThisParameterType<ImplT>, ...args: Parameters<ImplT>) => void {\n    return function(this: ThisParameterType<ImplT>, ...args: Parameters<ImplT>): void {\n      const impl = {__proto__: implConstructor.prototype};\n      implConstructor.apply(impl, args);\n      populateInterfaceClass(this as Record<string, unknown>, impl);\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function defineDeprecatedProperty(object: any, className: string, oldName: string, newName: string): void {\n    let warningGiven = false;\n    function getter(): unknown {\n      if (!warningGiven) {\n        console.warn(className + '.' + oldName + ' is deprecated. Use ' + className + '.' + newName + ' instead');\n        warningGiven = true;\n      }\n      return object[newName];\n    }\n    object.__defineGetter__(oldName, getter);\n  }\n\n  function extractCallbackArgument(args: IArguments): ((...args: unknown[]) => unknown)|undefined {\n    const lastArgument = args[args.length - 1];\n    return typeof lastArgument === 'function' ? lastArgument as (...args: unknown[]) => unknown : undefined;\n  }\n\n  const LanguageServicesAPI = declareInterfaceClass(LanguageServicesAPIImpl);\n  const RecorderServicesAPI = declareInterfaceClass(RecorderServicesAPIImpl);\n  const Performance = declareInterfaceClass(PerformanceImpl);\n  const Button = declareInterfaceClass(ButtonImpl);\n  const EventSink = declareInterfaceClass(EventSinkImpl);\n  const ExtensionPanel = declareInterfaceClass(ExtensionPanelImpl);\n  const RecorderView = declareInterfaceClass(RecorderViewImpl);\n  const ExtensionSidebarPane = declareInterfaceClass(ExtensionSidebarPaneImpl);\n  const PanelWithSidebarClass = declareInterfaceClass(PanelWithSidebarImpl);\n  const Request = declareInterfaceClass(RequestImpl);\n  const Resource = declareInterfaceClass(ResourceImpl);\n  const NetworkPanel = declareInterfaceClass(NetworkPanelImpl);\n\n  class ElementsPanel extends (Constructor(PanelWithSidebarClass)) {\n    constructor() {\n      super('elements');\n    }\n  }\n\n  class SourcesPanel extends (Constructor(PanelWithSidebarClass)) {\n    constructor() {\n      super('sources');\n    }\n  }\n\n  function ExtensionPanelImpl(this: APIImpl.ExtensionPanel, id: string): void {\n    ExtensionViewImpl.call(this, id);\n\n    this.onSearch = new (Constructor(EventSink))(PrivateAPI.Events.PanelSearch + id);\n  }\n\n  (ExtensionPanelImpl.prototype as Pick<APIImpl.ExtensionPanel, 'createStatusBarButton'|'show'>&\n   {__proto__: APIImpl.ExtensionView}) = {\n    createStatusBarButton: function(\n                               this: APIImpl.ExtensionPanel, iconPath: string, tooltipText: string, disabled: boolean):\n                               PublicAPI.Chrome.DevTools.Button {\n                                 const id = 'button-' + extensionServer.nextObjectId();\n                                 extensionServer.sendRequest({\n                                   command: PrivateAPI.Commands.CreateToolbarButton,\n                                   panel: this._id as string,\n                                   id,\n                                   icon: iconPath,\n                                   tooltip: tooltipText,\n                                   disabled: Boolean(disabled),\n                                 });\n\n                                 return new (Constructor(Button))(id);\n                               },\n\n    show: function(this: APIImpl.ExtensionPanel): void {\n      if (!userAction) {\n        return;\n      }\n\n      extensionServer.sendRequest({command: PrivateAPI.Commands.ShowPanel, id: this._id as string});\n    },\n\n    __proto__: ExtensionViewImpl.prototype,\n  };\n\n  function RecorderViewImpl(this: APIImpl.RecorderView, id: string): void {\n    ExtensionViewImpl.call(this, id);\n  }\n\n  (RecorderViewImpl.prototype as Pick<APIImpl.RecorderView, 'show'>& {__proto__: APIImpl.ExtensionView}) = {\n    show: function(this: APIImpl.RecorderView): void {\n      if (!userAction || !userRecorderAction) {\n        return;\n      }\n\n      extensionServer.sendRequest({command: PrivateAPI.Commands.ShowRecorderView, id: this._id as string});\n    },\n\n    __proto__: ExtensionViewImpl.prototype,\n  };\n\n  function ExtensionSidebarPaneImpl(this: APIImpl.ExtensionSidebarPane, id: string): void {\n    ExtensionViewImpl.call(this, id);\n  }\n\n  (ExtensionSidebarPaneImpl.prototype as\n       Pick<APIImpl.ExtensionSidebarPane, 'setHeight'|'setExpression'|'setObject'|'setPage'>&\n   {__proto__: APIImpl.ExtensionView}) = {\n    setHeight: function(this: APIImpl.ExtensionSidebarPane, height: string): void {\n      extensionServer.sendRequest({command: PrivateAPI.Commands.SetSidebarHeight, id: this._id as string, height});\n    },\n\n    setExpression: function(\n        this: APIImpl.ExtensionSidebarPane, expression: string, rootTitle: string,\n        evaluateOptions?: PrivateAPI.EvaluateOptions, _callback?: () => unknown): void {\n      extensionServer.sendRequest(\n          {\n            command: PrivateAPI.Commands.SetSidebarContent,\n            id: this._id as string,\n            expression,\n            rootTitle,\n            evaluateOnPage: true,\n            evaluateOptions: (typeof evaluateOptions === 'object' ? evaluateOptions : {}),\n          },\n          extractCallbackArgument(arguments));\n    },\n\n    setObject: function(\n        this: APIImpl.ExtensionSidebarPane, jsonObject: string, rootTitle?: string, callback?: () => unknown): void {\n      extensionServer.sendRequest(\n          {\n            command: PrivateAPI.Commands.SetSidebarContent,\n            id: this._id as string,\n            expression: jsonObject,\n            rootTitle,\n          },\n          callback);\n    },\n\n    setPage: function(this: APIImpl.ExtensionSidebarPane, page: string): void {\n      extensionServer.sendRequest({command: PrivateAPI.Commands.SetSidebarPage, id: this._id as string, page});\n    },\n\n    __proto__: ExtensionViewImpl.prototype,\n  };\n\n  function ButtonImpl(this: APIImpl.Button, id: string): void {\n    this._id = id;\n\n    this.onClicked = new (Constructor(EventSink))(PrivateAPI.Events.ButtonClicked + id);\n  }\n\n  (ButtonImpl.prototype as Pick<APIImpl.Button, 'update'>) = {\n    update: function(this: APIImpl.Button, iconPath?: string, tooltipText?: string, disabled?: boolean): void {\n      extensionServer.sendRequest({\n        command: PrivateAPI.Commands.UpdateButton,\n        id: this._id,\n        icon: iconPath,\n        tooltip: tooltipText,\n        disabled: Boolean(disabled),\n      });\n    },\n  };\n\n  function InspectedWindow(this: PublicAPI.Chrome.DevTools.InspectedWindow): void {\n    function dispatchResourceEvent(\n        this: APIImpl.EventSink<(resource: APIImpl.Resource) => unknown>, message: {arguments: unknown[]}): void {\n      const resourceData = message.arguments[0] as APIImpl.ResourceData;\n      this._fire(new (Constructor(Resource))(resourceData));\n    }\n\n    function dispatchResourceContentEvent(\n        this: APIImpl.EventSink<(resource: APIImpl.Resource, content: string) => unknown>,\n        message: {arguments: unknown[]}): void {\n      const resourceData = message.arguments[0] as APIImpl.ResourceData;\n      this._fire(new (Constructor(Resource))(resourceData), message.arguments[1] as string);\n    }\n\n    this.onResourceAdded = new (Constructor(EventSink))(PrivateAPI.Events.ResourceAdded, dispatchResourceEvent);\n    this.onResourceContentCommitted =\n        new (Constructor(EventSink))(PrivateAPI.Events.ResourceContentCommitted, dispatchResourceContentEvent);\n  }\n\n  (InspectedWindow.prototype as Pick<PublicAPI.Chrome.DevTools.InspectedWindow, 'reload'|'eval'|'getResources'>) = {\n    reload: function(optionsOrUserAgent: {\n      ignoreCache?: boolean,\n      injectedScript?: string,\n      userAgent?: string,\n    }): void {\n      let options: {\n        ignoreCache?: boolean,\n        injectedScript?: string,\n        userAgent?: string,\n      }|null = null;\n      if (typeof optionsOrUserAgent === 'object') {\n        options = optionsOrUserAgent;\n      } else if (typeof optionsOrUserAgent === 'string') {\n        options = {userAgent: optionsOrUserAgent};\n        console.warn(\n            'Passing userAgent as string parameter to inspectedWindow.reload() is deprecated. ' +\n            'Use inspectedWindow.reload({ userAgent: value}) instead.');\n      }\n      extensionServer.sendRequest({command: PrivateAPI.Commands.Reload, options});\n    },\n\n    eval: function(\n              expression: string,\n              evaluateOptions: {scriptExecutionContext?: string, frameURL?: string, useContentScriptContext?: boolean}):\n              Object |\n        null {\n          const callback = extractCallbackArgument(arguments);\n          function callbackWrapper(result: unknown): void {\n            const {isError, isException, value} = result as {\n              value: unknown,\n              isError?: boolean,\n              isException?: boolean,\n            };\n            if (isError || isException) {\n              callback?.(undefined, result);\n            } else {\n              callback?.(value);\n            }\n          }\n          extensionServer.sendRequest(\n              {\n                command: PrivateAPI.Commands.EvaluateOnInspectedPage,\n                expression,\n                evaluateOptions: (typeof evaluateOptions === 'object' ? evaluateOptions : undefined),\n              },\n              callback && callbackWrapper);\n          return null;\n        },\n\n    getResources: function(callback?: (resources: PublicAPI.Chrome.DevTools.Resource[]) => unknown): void {\n      function wrapResource(resourceData: APIImpl.ResourceData): APIImpl.Resource {\n        return new (Constructor(Resource))(resourceData);\n      }\n      function callbackWrapper(resources: unknown): void {\n        callback?.((resources as APIImpl.ResourceData[]).map(wrapResource));\n      }\n      extensionServer.sendRequest({command: PrivateAPI.Commands.GetPageResources}, callback && callbackWrapper);\n    },\n  };\n\n  function ResourceImpl(this: APIImpl.Resource, resourceData: APIImpl.ResourceData): void {\n    this._url = resourceData.url;\n    this._type = resourceData.type;\n    this._buildId = resourceData.buildId;\n  }\n\n  (ResourceImpl.prototype as Pick<\n       APIImpl.Resource,\n       'url'|'type'|'buildId'|'getContent'|'setContent'|'setFunctionRangesForScript'|'attachSourceMapURL'>) = {\n    get url(): string {\n      return (this as APIImpl.Resource)._url;\n    },\n\n    get type(): string {\n      return (this as APIImpl.Resource)._type;\n    },\n\n    get buildId(): (string | undefined) {\n      return (this as APIImpl.Resource)._buildId;\n    },\n\n    getContent: function(this: APIImpl.Resource, callback?: (content: string, encoding: string) => unknown): void {\n      function callbackWrapper(response: unknown): void {\n        const {content, encoding} = response as {content: string, encoding: string};\n        callback?.(content, encoding);\n      }\n\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.GetResourceContent, url: this._url}, callback && callbackWrapper);\n    },\n\n    setContent: function(\n        this: APIImpl.Resource, content: string, commit: boolean, callback: (error?: Object) => unknown): void {\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.SetResourceContent, url: this._url, content, commit},\n          callback as (response: unknown) => unknown);\n    },\n\n    setFunctionRangesForScript: function(\n        this: APIImpl.Resource, ranges: PublicAPI.Chrome.DevTools.NamedFunctionRange[]): Promise<void> {\n      return new Promise(\n          (resolve, reject) => extensionServer.sendRequest(\n              {\n                command: PrivateAPI.Commands.SetFunctionRangesForScript,\n                scriptUrl: this._url,\n                ranges,\n              },\n              (response: unknown) => {\n                const result = response as {\n                  code: string,\n                  description: string,\n                  details: unknown[],\n                  isError?: boolean,\n                };\n                if (result.isError) {\n                  reject(result);\n                } else {\n                  resolve();\n                }\n              }));\n    },\n\n    attachSourceMapURL: function(this: APIImpl.Resource, sourceMapURL: string): Promise<void> {\n      return new Promise(\n          (resolve, reject) => extensionServer.sendRequest(\n              {command: PrivateAPI.Commands.AttachSourceMapToResource, contentUrl: this._url, sourceMapURL},\n              (response: unknown) => {\n                const result = response as {\n                  code: string,\n                  description: string,\n                  details: unknown[],\n                  isError?: boolean,\n                };\n                if (result.isError) {\n                  reject(new Error(result.description));\n                } else {\n                  resolve();\n                }\n              }));\n    },\n  };\n\n  function getTabId(): string {\n    return inspectedTabId;\n  }\n\n  let keyboardEventRequestQueue: KeyboardEventInit&Array<{eventType: string}> = [];\n  let forwardTimer: number|null = null;\n  function forwardKeyboardEvent(event: KeyboardEvent): void {\n    // Check if the event should be forwarded.\n    // This is a workaround for crbug.com/923338.\n    const focused = document.activeElement;\n    if (focused) {\n      const isInput =\n          focused.nodeName === 'INPUT' || focused.nodeName === 'TEXTAREA' || (focused as HTMLElement).isContentEditable;\n      if (isInput && !(event.ctrlKey || event.altKey || event.metaKey)) {\n        return;\n      }\n    }\n\n    let modifiers = 0;\n    if (event.shiftKey) {\n      modifiers |= 1;\n    }\n    if (event.ctrlKey) {\n      modifiers |= 2;\n    }\n    if (event.altKey) {\n      modifiers |= 4;\n    }\n    if (event.metaKey) {\n      modifiers |= 8;\n    }\n    const num = (event.keyCode & 255) | (modifiers << 8);\n    // We only care about global hotkeys, not about random text\n    if (!keysToForwardSet.has(num)) {\n      return;\n    }\n    event.preventDefault();\n    const requestPayload = {\n      eventType: event.type,\n      ctrlKey: event.ctrlKey,\n      altKey: event.altKey,\n      metaKey: event.metaKey,\n      shiftKey: event.shiftKey,\n      // @ts-expect-error keyIdentifier is a deprecated non-standard property that typescript doesn't know about.\n      keyIdentifier: event.keyIdentifier,\n      key: event.key,\n      code: event.code,\n      location: event.location,\n      keyCode: event.keyCode,\n    };\n    keyboardEventRequestQueue.push(requestPayload);\n    if (!forwardTimer) {\n      forwardTimer = window.setTimeout(forwardEventQueue, 0);\n    }\n  }\n\n  function forwardEventQueue(): void {\n    forwardTimer = null;\n    extensionServer.sendRequest(\n        {command: PrivateAPI.Commands.ForwardKeyboardEvent, entries: keyboardEventRequestQueue});\n    keyboardEventRequestQueue = [];\n  }\n\n  document.addEventListener('keydown', forwardKeyboardEvent, false);\n\n  function ExtensionServerClient(this: APIImpl.ExtensionServerClient, targetWindow: Window): void {\n    this._callbacks = {};\n    this._handlers = {};\n    this._lastRequestId = 0;\n    this._lastObjectId = 0;\n\n    this.registerHandler('callback', this._onCallback.bind(this));\n\n    const channel = new MessageChannel();\n    this._port = channel.port1;\n    this._port.addEventListener('message', this._onMessage.bind(this), false);\n    this._port.start();\n\n    targetWindow.postMessage('registerExtension', '*', [channel.port2]);\n  }\n\n  (ExtensionServerClient.prototype as Pick<\n       APIImpl.ExtensionServerClient,\n       'sendRequest'|'hasHandler'|'registerHandler'|'unregisterHandler'|'nextObjectId'|'_registerCallback'|\n       '_onCallback'|'_onMessage'>) = {\n    sendRequest: function<ResponseT>(\n        this: APIImpl.ExtensionServerClient, message: PrivateAPI.ServerRequests,\n        callback?: (response: ResponseT) => unknown, transfers?: Transferable[]): void {\n      if (typeof callback === 'function') {\n        (message as PrivateAPI.ExtensionServerRequestMessage).requestId =\n            this._registerCallback(callback as (response: unknown) => unknown);\n      }\n      // @ts-expect-error\n      this._port.postMessage(message, transfers);\n    },\n\n    hasHandler: function(this: APIImpl.ExtensionServerClient, command: string): boolean {\n      return Boolean(this._handlers[command]);\n    },\n\n    registerHandler: function(\n        this: APIImpl.ExtensionServerClient, command: string, handler: (request: {arguments: unknown[]}) => unknown):\n        void {\n          this._handlers[command] = handler;\n        },\n\n    unregisterHandler: function(this: APIImpl.ExtensionServerClient, command: string): void {\n      delete this._handlers[command];\n    },\n\n    nextObjectId: function(this: APIImpl.ExtensionServerClient): string {\n      return injectedScriptId.toString() + '_' + ++this._lastObjectId;\n    },\n\n    _registerCallback: function(this: APIImpl.ExtensionServerClient, callback: (response: unknown) => unknown): number {\n      const id = ++this._lastRequestId;\n      this._callbacks[id] = callback;\n      return id;\n    },\n\n    _onCallback: function(this: APIImpl.ExtensionServerClient, request: {requestId: number, result: unknown}): void {\n      if (request.requestId in this._callbacks) {\n        const callback = this._callbacks[request.requestId];\n        delete this._callbacks[request.requestId];\n        callback(request.result);\n      }\n    },\n\n    _onMessage: function(\n        this: APIImpl.ExtensionServerClient,\n        event: MessageEvent<{command: string, requestId: number, arguments: unknown[]}>): void {\n      const request = event.data;\n      const handler = this._handlers[request.command];\n      if (handler) {\n        handler.call(this, request);\n      }\n    },\n  };\n\n  function populateInterfaceClass(interfaze: Record<string, unknown>, implementation: Record<string, unknown>): void {\n    for (const member in implementation) {\n      if (member.charAt(0) === '_') {\n        continue;\n      }\n      let descriptor: (PropertyDescriptor|undefined)|null = null;\n      // Traverse prototype chain until we find the owner.\n      for (let owner = implementation; owner && !descriptor; owner = owner.__proto__ as Record<string, unknown>) {\n        descriptor = Object.getOwnPropertyDescriptor(owner, member);\n      }\n      if (!descriptor) {\n        continue;\n      }\n      if (typeof descriptor.value === 'function') {\n        interfaze[member] = descriptor.value.bind(implementation);\n      } else if (typeof descriptor.get === 'function') {\n        // @ts-expect-error\n        interfaze.__defineGetter__(member, descriptor.get.bind(implementation));\n      } else {\n        Object.defineProperty(interfaze, member, descriptor);\n      }\n    }\n  }\n\n  const extensionServer = new (Constructor(ExtensionServerClient))(targetWindowForTest || window.parent);\n\n  const coreAPI = new (Constructor(InspectorExtensionAPI))();\n\n  Object.defineProperty(chrome, 'devtools', {value: {}, enumerable: true});\n\n  // Only expose tabId on chrome.devtools.inspectedWindow, not webInspector.inspectedWindow.\n  // @ts-expect-error\n  chrome.devtools.inspectedWindow = {};\n  Object.defineProperty(chrome.devtools.inspectedWindow, 'tabId', {get: getTabId});\n  // @ts-expect-error\n  chrome.devtools.inspectedWindow.__proto__ = coreAPI.inspectedWindow;\n  chrome.devtools.network = coreAPI.network;\n  chrome.devtools.panels = coreAPI.panels;\n  chrome.devtools.panels.themeName = themeName;\n  chrome.devtools.languageServices = coreAPI.languageServices;\n  chrome.devtools.recorder = coreAPI.recorder;\n  chrome.devtools.performance = coreAPI.performance;\n\n  // default to expose experimental APIs for now.\n  if (extensionInfo.exposeExperimentalAPIs !== false) {\n    chrome.experimental = chrome.experimental || {};\n    chrome.experimental.devtools = chrome.experimental.devtools || {};\n\n    const properties = Object.getOwnPropertyNames(coreAPI);\n    for (let i = 0; i < properties.length; ++i) {\n      const descriptor = Object.getOwnPropertyDescriptor(coreAPI, properties[i]);\n      if (descriptor) {\n        Object.defineProperty(chrome.experimental.devtools, properties[i], descriptor);\n      }\n    }\n    chrome.experimental.devtools.inspectedWindow = chrome.devtools.inspectedWindow;\n  }\n\n  if (extensionInfo.exposeWebInspectorNamespace) {\n    window.webInspector = coreAPI;\n  }\n  testHook(extensionServer, coreAPI);\n};\n\nself.buildExtensionAPIInjectedScript = function(\n    extensionInfo: {\n      startPage: string,\n      name: string,\n      exposeExperimentalAPIs: boolean,\n    },\n    inspectedTabId: string, themeName: string, keysToForward: number[],\n    testHook:\n        ((extensionServer: APIImpl.ExtensionServerClient, extensionAPI: APIImpl.InspectorExtensionAPI) => unknown)|\n    undefined): string {\n  const argumentsJSON =\n      [extensionInfo, inspectedTabId || null, themeName, keysToForward].map(_ => JSON.stringify(_)).join(',');\n  if (!testHook) {\n    testHook = (): void => {};\n  }\n  return '(function(injectedScriptId){ ' +\n      '(' + self.injectedExtensionAPI.toString() + ')(' + argumentsJSON + ',' + testHook + ', injectedScriptId);' +\n      '})';\n};\n", "// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\ninterface Response {\n  requestId: number;\n  result: unknown;\n  error: Error|null;\n}\n\ninterface Event {\n  event: string;\n}\n\ntype Message = MessageEvent<Response|Event>;\n\nexport class ExtensionEndpoint {\n  private readonly port: MessagePort;\n  private nextRequestId = 0;\n  private pendingRequests: Map<number, {\n    resolve: (arg: unknown) => void,\n    reject: (error: Error) => void,\n  }>;\n\n  constructor(port: MessagePort) {\n    this.port = port;\n    this.port.onmessage = this.onResponse.bind(this);\n    this.pendingRequests = new Map();\n  }\n\n  sendRequest<ReturnType>(method: string, parameters: unknown): Promise<ReturnType> {\n    return new Promise((resolve, reject) => {\n      const requestId = this.nextRequestId++;\n      this.pendingRequests.set(requestId, {resolve: resolve as (arg: unknown) => void, reject});\n      this.port.postMessage({requestId, method, parameters});\n    });\n  }\n\n  protected disconnect(): void {\n    for (const {reject} of this.pendingRequests.values()) {\n      reject(new Error('Extension endpoint disconnected'));\n    }\n    this.pendingRequests.clear();\n    this.port.close();\n  }\n\n  private onResponse({data}: Message): void {\n    if ('event' in data) {\n      this.handleEvent(data);\n      return;\n    }\n    const {requestId, result, error} = data;\n    const pendingRequest = this.pendingRequests.get(requestId);\n    if (!pendingRequest) {\n      console.error(`No pending request ${requestId}`);\n      return;\n    }\n    this.pendingRequests.delete(requestId);\n    if (error) {\n      pendingRequest.reject(new Error(error.message));\n    } else {\n      pendingRequest.resolve(result);\n    }\n  }\n\n  protected handleEvent(_event: Event): void {\n    throw new Error('handleEvent is not implemented');\n  }\n}\n", "/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport '../../ui/legacy/legacy.js';\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as _ProtocolClient from '../../core/protocol_client/protocol_client.js';  // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as ExtensionAPI from './ExtensionAPI.js';\nimport type {ExtensionServer} from './ExtensionServer.js';\nimport {ExtensionNotifierView, ExtensionView} from './ExtensionView.js';\n\nexport class ExtensionPanel extends UI.Panel.Panel implements UI.SearchableView.Searchable {\n  private readonly server: ExtensionServer;\n  private readonly id: string;\n  private readonly panelToolbar: UI.Toolbar.Toolbar;\n  private readonly searchableViewInternal: UI.SearchableView.SearchableView;\n\n  constructor(server: ExtensionServer, panelName: string, id: string, pageURL: string) {\n    super(panelName);\n    this.server = server;\n    this.id = id;\n    this.setHideOnDetach();\n    this.panelToolbar = this.element.createChild('devtools-toolbar', 'hidden');\n\n    this.searchableViewInternal = new UI.SearchableView.SearchableView(this, null);\n    this.searchableViewInternal.show(this.element);\n\n    const extensionView = new ExtensionView(server, this.id, pageURL, 'extension');\n    extensionView.show(this.searchableViewInternal.element);\n  }\n\n  addToolbarItem(item: UI.Toolbar.ToolbarItem): void {\n    this.panelToolbar.classList.remove('hidden');\n    this.panelToolbar.appendToolbarItem(item);\n  }\n\n  onSearchCanceled(): void {\n    this.server.notifySearchAction(this.id, ExtensionAPI.PrivateAPI.Panels.SearchAction.CancelSearch);\n    this.searchableViewInternal.updateSearchMatchesCount(0);\n  }\n\n  override searchableView(): UI.SearchableView.SearchableView {\n    return this.searchableViewInternal;\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, _shouldJump: boolean, _jumpBackwards?: boolean): void {\n    const query = searchConfig.query;\n    this.server.notifySearchAction(this.id, ExtensionAPI.PrivateAPI.Panels.SearchAction.PerformSearch, query);\n  }\n\n  jumpToNextSearchResult(): void {\n    this.server.notifySearchAction(this.id, ExtensionAPI.PrivateAPI.Panels.SearchAction.NextSearchResult);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    this.server.notifySearchAction(this.id, ExtensionAPI.PrivateAPI.Panels.SearchAction.PreviousSearchResult);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return false;\n  }\n\n  supportsRegexSearch(): boolean {\n    return false;\n  }\n}\n\nexport class ExtensionButton {\n  private readonly id: string;\n  private readonly toolbarButtonInternal: UI.Toolbar.ToolbarButton;\n  constructor(server: ExtensionServer, id: string, iconURL: string, tooltip?: string, disabled?: boolean) {\n    this.id = id;\n\n    this.toolbarButtonInternal = new UI.Toolbar.ToolbarButton('', '');\n    this.toolbarButtonInternal.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.CLICK, server.notifyButtonClicked.bind(server, this.id));\n    this.update(iconURL, tooltip, disabled);\n  }\n\n  update(iconURL?: string, tooltip?: string, disabled?: boolean): void {\n    if (typeof iconURL === 'string') {\n      this.toolbarButtonInternal.setBackgroundImage(iconURL);\n    }\n    if (typeof tooltip === 'string') {\n      this.toolbarButtonInternal.setTitle(tooltip);\n    }\n    if (typeof disabled === 'boolean') {\n      this.toolbarButtonInternal.setEnabled(!disabled);\n    }\n  }\n\n  toolbarButton(): UI.Toolbar.ToolbarButton {\n    return this.toolbarButtonInternal;\n  }\n}\n\nexport class ExtensionSidebarPane extends UI.View.SimpleView {\n  private readonly panelNameInternal: string;\n  private server: ExtensionServer;\n  private idInternal: string;\n  private extensionView?: ExtensionView;\n  private objectPropertiesView?: ExtensionNotifierView;\n  constructor(server: ExtensionServer, panelName: string, title: Platform.UIString.LocalizedString, id: string) {\n    super(title);\n    this.element.classList.add('fill');\n    this.panelNameInternal = panelName;\n    this.server = server;\n    this.idInternal = id;\n  }\n\n  id(): string {\n    return this.idInternal;\n  }\n\n  panelName(): string {\n    return this.panelNameInternal;\n  }\n\n  setObject(object: Object, title: string|undefined, callback: (arg0?: (string|null)|undefined) => void): void {\n    this.createObjectPropertiesView();\n    this.setObjectInternal(SDK.RemoteObject.RemoteObject.fromLocalObject(object), title, callback);\n  }\n\n  setExpression(\n      expression: string, title: string|undefined, evaluateOptions: Object|undefined, securityOrigin: string,\n      callback: (arg0?: (string|null)|undefined) => void): void {\n    this.createObjectPropertiesView();\n    this.server.evaluate(\n        expression, true, false, evaluateOptions, securityOrigin, this.onEvaluate.bind(this, title, callback));\n  }\n\n  setPage(url: Platform.DevToolsPath.UrlString): void {\n    if (this.objectPropertiesView) {\n      this.objectPropertiesView.detach();\n      delete this.objectPropertiesView;\n    }\n    if (this.extensionView) {\n      this.extensionView.detach(true);\n    }\n\n    this.extensionView = new ExtensionView(this.server, this.idInternal, url, 'extension fill');\n    this.extensionView.show(this.element);\n\n    if (!this.element.style.height) {\n      this.setHeight('150px');\n    }\n  }\n\n  setHeight(height: string): void {\n    this.element.style.height = height;\n  }\n\n  private onEvaluate(\n      title: string|undefined, callback: (arg0?: (string|null)|undefined) => void, error: string|null,\n      result: SDK.RemoteObject.RemoteObject|null, _wasThrown?: boolean): void {\n    if (error) {\n      callback(error.toString());\n    } else if (!result) {\n      callback();\n    } else {\n      this.setObjectInternal(result, title, callback);\n    }\n  }\n\n  private createObjectPropertiesView(): void {\n    if (this.objectPropertiesView) {\n      return;\n    }\n    if (this.extensionView) {\n      this.extensionView.detach(true);\n      delete this.extensionView;\n    }\n    this.objectPropertiesView = new ExtensionNotifierView(this.server, this.idInternal);\n    this.objectPropertiesView.show(this.element);\n  }\n\n  private setObjectInternal(\n      object: SDK.RemoteObject.RemoteObject, title: string|undefined,\n      callback: (arg0?: (string|null)|undefined) => void): void {\n    const objectPropertiesView = this.objectPropertiesView;\n    // This may only happen if setPage() was called while we were evaluating the expression.\n    if (!objectPropertiesView) {\n      callback('operation cancelled');\n      return;\n    }\n    objectPropertiesView.element.removeChildren();\n    void UI.UIUtils.Renderer.render(object, {title, editable: false}).then(result => {\n      if (!result) {\n        callback();\n        return;\n      }\n      const firstChild = result.tree?.firstChild();\n      if (firstChild) {\n        firstChild.expand();\n      }\n      objectPropertiesView.element.appendChild(result.node);\n      callback();\n    });\n  }\n}\n", "/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\n\nimport type {ExtensionServer} from './ExtensionServer.js';\n\nconst {render, html, Directives: {ref}} = Lit;\n\ninterface ViewInput {\n  src: string;\n  className: string;\n  onLoad: () => void;\n}\n\ninterface ViewOutput {\n  iframe?: HTMLIFrameElement;\n}\n\nconst DEFAULT_VIEW = (input: ViewInput, output: ViewOutput, target: HTMLElement): void => {\n  // clang-format off\n  render(html`<iframe\n    ${ref(element => {output.iframe = element as HTMLIFrameElement; })}\n    src=${input.src}\n    class=${input.className}\n    @load=${input.onLoad}></iframe>`, target, {host: input});\n  // clang-format on\n};\n\nexport class ExtensionView extends UI.Widget.Widget {\n  #server: ExtensionServer;\n  #id: string;\n  #src: string;\n  #className: string;\n\n  #iframe?: HTMLIFrameElement;\n  #frameIndex?: number;\n\n  #view: typeof DEFAULT_VIEW;\n  constructor(server: ExtensionServer, id: string, src: string, className: string, view = DEFAULT_VIEW) {\n    super();\n    this.#view = view;\n    this.#server = server;\n    this.#src = src;\n    this.#className = className;\n    this.#id = id;\n    this.setHideOnDetach();  // Override\n    void this.performUpdate();\n  }\n\n  override performUpdate(): Promise<void>|void {\n    const output: ViewOutput = {};\n    this.#view(\n        {\n          src: this.#src,\n          className: this.#className,\n          onLoad: this.onLoad.bind(this),\n        },\n        output, this.element);\n    if (output.iframe) {\n      this.#iframe = output.iframe;\n    }\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    if (typeof this.#frameIndex === 'number') {\n      this.#server.notifyViewShown(this.#id, this.#frameIndex);\n    }\n  }\n\n  override willHide(): void {\n    if (typeof this.#frameIndex === 'number') {\n      this.#server.notifyViewHidden(this.#id);\n    }\n  }\n\n  private onLoad(): void {\n    if (!this.#iframe) {\n      return;\n    }\n    const frames = window.frames;\n    this.#frameIndex = Array.prototype.indexOf.call(frames, this.#iframe.contentWindow);\n    if (this.isShowing()) {\n      this.#server.notifyViewShown(this.#id, this.#frameIndex);\n    }\n  }\n}\n\nexport class ExtensionNotifierView extends UI.Widget.VBox {\n  private readonly server: ExtensionServer;\n  private readonly id: string;\n  constructor(server: ExtensionServer, id: string) {\n    super();\n\n    this.server = server;\n    this.id = id;\n  }\n\n  override wasShown(): void {\n    this.server.notifyViewShown(this.id);\n  }\n\n  override willHide(): void {\n    this.server.notifyViewHidden(this.id);\n  }\n}\n", "/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport type {Chrome} from '../../../extension-api/ExtensionAPI.js';\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as _ProtocolClient from '../../core/protocol_client/protocol_client.js';  // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport * as Bindings from '../bindings/bindings.js';\nimport * as HAR from '../har/har.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {PrivateAPI} from './ExtensionAPI.js';\nimport {ExtensionButton, ExtensionPanel, ExtensionSidebarPane} from './ExtensionPanel.js';\nimport {HostUrlPattern} from './HostUrlPattern.js';\nimport {LanguageExtensionEndpoint} from './LanguageExtensionEndpoint.js';\nimport {RecorderExtensionEndpoint} from './RecorderExtensionEndpoint.js';\nimport {RecorderPluginManager} from './RecorderPluginManager.js';\n\nconst extensionOrigins = new WeakMap<MessagePort, Platform.DevToolsPath.UrlString>();\nconst kPermittedSchemes = ['http:', 'https:', 'file:', 'data:', 'chrome-extension:', 'about:'];\n\ndeclare global {\n  interface Window {\n    DevToolsAPI?: {getInspectedTabId?(): string|undefined, getOriginsForbiddenForExtensions?(): string[]};\n  }\n}\n\nlet extensionServerInstance: ExtensionServer|null;\n\nexport class HostsPolicy {\n  static create(policy?: Host.InspectorFrontendHostAPI.ExtensionHostsPolicy): HostsPolicy|null {\n    const runtimeAllowedHosts = [];\n    const runtimeBlockedHosts = [];\n    if (policy) {\n      for (const pattern of policy.runtimeAllowedHosts) {\n        const parsedPattern = HostUrlPattern.parse(pattern);\n        if (!parsedPattern) {\n          return null;\n        }\n        runtimeAllowedHosts.push(parsedPattern);\n      }\n      for (const pattern of policy.runtimeBlockedHosts) {\n        const parsedPattern = HostUrlPattern.parse(pattern);\n        if (!parsedPattern) {\n          return null;\n        }\n        runtimeBlockedHosts.push(parsedPattern);\n      }\n    }\n    return new HostsPolicy(runtimeAllowedHosts, runtimeBlockedHosts);\n  }\n  private constructor(readonly runtimeAllowedHosts: HostUrlPattern[], readonly runtimeBlockedHosts: HostUrlPattern[]) {\n  }\n\n  isAllowedOnURL(inspectedURL?: Platform.DevToolsPath.UrlString): boolean {\n    if (!inspectedURL) {\n      // If there aren't any blocked hosts retain the old behavior and don't worry about the inspectedURL\n      return this.runtimeBlockedHosts.length === 0;\n    }\n    if (this.runtimeBlockedHosts.some(pattern => pattern.matchesUrl(inspectedURL)) &&\n        !this.runtimeAllowedHosts.some(pattern => pattern.matchesUrl(inspectedURL))) {\n      return false;\n    }\n    return true;\n  }\n}\n\nclass RegisteredExtension {\n  openResourceScheme: null|string = null;\n  constructor(readonly name: string, readonly hostsPolicy: HostsPolicy, readonly allowFileAccess: boolean) {\n  }\n\n  isAllowedOnTarget(inspectedURL?: Platform.DevToolsPath.UrlString): boolean {\n    if (!inspectedURL) {\n      inspectedURL = SDK.TargetManager.TargetManager.instance().primaryPageTarget()?.inspectedURL();\n    }\n\n    if (!inspectedURL) {\n      return false;\n    }\n\n    if (this.openResourceScheme && inspectedURL.startsWith(this.openResourceScheme)) {\n      return true;\n    }\n\n    if (!ExtensionServer.canInspectURL(inspectedURL)) {\n      return false;\n    }\n\n    if (!this.hostsPolicy.isAllowedOnURL(inspectedURL)) {\n      return false;\n    }\n\n    if (!this.allowFileAccess) {\n      let parsedURL;\n      try {\n        parsedURL = new URL(inspectedURL);\n      } catch {\n        return false;\n      }\n      return parsedURL.protocol !== 'file:';\n    }\n\n    return true;\n  }\n}\n\nexport class RevealableNetworkRequestFilter {\n  constructor(readonly filter: string|undefined) {\n  }\n}\n\nexport class ExtensionServer extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private readonly clientObjects: Map<string, unknown>;\n  private readonly handlers:\n      Map<string, (message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort) => unknown>;\n  private readonly subscribers: Map<string, Set<MessagePort>>;\n  private readonly subscriptionStartHandlers: Map<string, () => unknown>;\n  private readonly subscriptionStopHandlers: Map<string, () => unknown>;\n  private readonly extraHeaders: Map<string, Map<string, unknown>>;\n  private requests: Map<number, TextUtils.ContentProvider.ContentProvider>;\n  private readonly requestIds: Map<TextUtils.ContentProvider.ContentProvider, number>;\n  private lastRequestId: number;\n  private registeredExtensions: Map<string, RegisteredExtension>;\n  private status: ExtensionStatus;\n  private readonly sidebarPanesInternal: ExtensionSidebarPane[];\n  private extensionsEnabled: boolean;\n  private inspectedTabId?: string;\n  private readonly extensionAPITestHook?: (server: unknown, api: unknown) => unknown;\n  private themeChangeHandlers = new Map<string, MessagePort>();\n  readonly #pendingExtensions: Host.InspectorFrontendHostAPI.ExtensionDescriptor[] = [];\n\n  private constructor() {\n    super();\n    this.clientObjects = new Map();\n    this.handlers = new Map();\n    this.subscribers = new Map();\n    this.subscriptionStartHandlers = new Map();\n    this.subscriptionStopHandlers = new Map();\n    this.extraHeaders = new Map();\n    this.requests = new Map();\n    this.requestIds = new Map();\n    this.lastRequestId = 0;\n    this.registeredExtensions = new Map();\n    this.status = new ExtensionStatus();\n    this.sidebarPanesInternal = [];\n    // TODO(caseq): properly unload extensions when we disable them.\n    this.extensionsEnabled = true;\n\n    this.registerHandler(PrivateAPI.Commands.AddRequestHeaders, this.onAddRequestHeaders.bind(this));\n    this.registerHandler(PrivateAPI.Commands.CreatePanel, this.onCreatePanel.bind(this));\n    this.registerHandler(PrivateAPI.Commands.CreateSidebarPane, this.onCreateSidebarPane.bind(this));\n    this.registerHandler(PrivateAPI.Commands.CreateToolbarButton, this.onCreateToolbarButton.bind(this));\n    this.registerHandler(PrivateAPI.Commands.EvaluateOnInspectedPage, this.onEvaluateOnInspectedPage.bind(this));\n    this.registerHandler(PrivateAPI.Commands.ForwardKeyboardEvent, this.onForwardKeyboardEvent.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetHAR, this.onGetHAR.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetPageResources, this.onGetPageResources.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetRequestContent, this.onGetRequestContent.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetResourceContent, this.onGetResourceContent.bind(this));\n    this.registerHandler(PrivateAPI.Commands.Reload, this.onReload.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetOpenResourceHandler, this.onSetOpenResourceHandler.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetThemeChangeHandler, this.onSetThemeChangeHandler.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetResourceContent, this.onSetResourceContent.bind(this));\n    this.registerHandler(PrivateAPI.Commands.AttachSourceMapToResource, this.onAttachSourceMapToResource.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetSidebarHeight, this.onSetSidebarHeight.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetSidebarContent, this.onSetSidebarContent.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetSidebarPage, this.onSetSidebarPage.bind(this));\n    this.registerHandler(PrivateAPI.Commands.ShowPanel, this.onShowPanel.bind(this));\n    this.registerHandler(PrivateAPI.Commands.Subscribe, this.onSubscribe.bind(this));\n    this.registerHandler(PrivateAPI.Commands.OpenResource, this.onOpenResource.bind(this));\n    this.registerHandler(PrivateAPI.Commands.Unsubscribe, this.onUnsubscribe.bind(this));\n    this.registerHandler(PrivateAPI.Commands.UpdateButton, this.onUpdateButton.bind(this));\n    this.registerHandler(\n        PrivateAPI.Commands.RegisterLanguageExtensionPlugin, this.registerLanguageExtensionEndpoint.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetWasmLinearMemory, this.onGetWasmLinearMemory.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetWasmGlobal, this.onGetWasmGlobal.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetWasmLocal, this.onGetWasmLocal.bind(this));\n    this.registerHandler(PrivateAPI.Commands.GetWasmOp, this.onGetWasmOp.bind(this));\n    this.registerHandler(\n        PrivateAPI.Commands.RegisterRecorderExtensionPlugin, this.registerRecorderExtensionEndpoint.bind(this));\n    this.registerHandler(PrivateAPI.Commands.ReportResourceLoad, this.onReportResourceLoad.bind(this));\n    this.registerHandler(PrivateAPI.Commands.SetFunctionRangesForScript, this.onSetFunctionRangesForScript.bind(this));\n    this.registerHandler(PrivateAPI.Commands.CreateRecorderView, this.onCreateRecorderView.bind(this));\n    this.registerHandler(PrivateAPI.Commands.ShowRecorderView, this.onShowRecorderView.bind(this));\n    this.registerHandler(PrivateAPI.Commands.ShowNetworkPanel, this.onShowNetworkPanel.bind(this));\n    window.addEventListener('message', this.onWindowMessage, false);  // Only for main window.\n\n    const existingTabId = window.DevToolsAPI?.getInspectedTabId?.();\n\n    if (existingTabId) {\n      this.setInspectedTabId({data: existingTabId});\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.SetInspectedTabId, this.setInspectedTabId, this);\n\n    this.initExtensions();\n\n    ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, this.#onThemeChange);\n  }\n\n  get isEnabledForTest(): boolean {\n    return this.extensionsEnabled;\n  }\n\n  dispose(): void {\n    ThemeSupport.ThemeSupport.instance().removeEventListener(\n        ThemeSupport.ThemeChangeEvent.eventName, this.#onThemeChange);\n\n    // Set up by this.initExtensions in the constructor.\n    SDK.TargetManager.TargetManager.instance().removeEventListener(\n        SDK.TargetManager.Events.INSPECTED_URL_CHANGED, this.inspectedURLChanged, this);\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(\n        Host.InspectorFrontendHostAPI.Events.SetInspectedTabId, this.setInspectedTabId, this);\n\n    window.removeEventListener('message', this.onWindowMessage, false);\n  }\n\n  #onThemeChange = (): void => {\n    const themeName = ThemeSupport.ThemeSupport.instance().themeName();\n    for (const port of this.themeChangeHandlers.values()) {\n      port.postMessage({command: PrivateAPI.Events.ThemeChange, themeName});\n    }\n  };\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ExtensionServer {\n    const {forceNew} = opts;\n    if (!extensionServerInstance || forceNew) {\n      extensionServerInstance?.dispose();\n      extensionServerInstance = new ExtensionServer();\n    }\n\n    return extensionServerInstance;\n  }\n\n  initializeExtensions(): void {\n    // Defer initialization until DevTools is fully loaded.\n    if (this.inspectedTabId !== null) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.setAddExtensionCallback(this.addExtension.bind(this));\n    }\n  }\n\n  hasExtensions(): boolean {\n    return Boolean(this.registeredExtensions.size);\n  }\n\n  notifySearchAction(panelId: string, action: string, searchString?: string): void {\n    this.postNotification(PrivateAPI.Events.PanelSearch + panelId, [action, searchString]);\n  }\n\n  notifyViewShown(identifier: string, frameIndex?: number): void {\n    this.postNotification(PrivateAPI.Events.ViewShown + identifier, [frameIndex]);\n  }\n\n  notifyViewHidden(identifier: string): void {\n    this.postNotification(PrivateAPI.Events.ViewHidden + identifier, []);\n  }\n\n  notifyButtonClicked(identifier: string): void {\n    this.postNotification(PrivateAPI.Events.ButtonClicked + identifier, []);\n  }\n\n  profilingStarted(): void {\n    this.postNotification(PrivateAPI.Events.ProfilingStarted, []);\n  }\n\n  profilingStopped(): void {\n    this.postNotification(PrivateAPI.Events.ProfilingStopped, []);\n  }\n\n  private registerLanguageExtensionEndpoint(\n      message: PrivateAPI.ExtensionServerRequestMessage, _shared_port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.RegisterLanguageExtensionPlugin) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.RegisterLanguageExtensionPlugin}`);\n    }\n    const {pluginManager} = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n    const {pluginName, port, supportedScriptTypes: {language, symbol_types}} = message;\n    const symbol_types_array =\n        (Array.isArray(symbol_types) && symbol_types.every(e => typeof e === 'string') ? symbol_types : []);\n    const extensionOrigin = this.getExtensionOrigin(_shared_port);\n    const registration = this.registeredExtensions.get(extensionOrigin);\n    if (!registration) {\n      throw new Error('Received a message from an unregistered extension');\n    }\n    const endpoint = new LanguageExtensionEndpoint(\n        registration.allowFileAccess, extensionOrigin, pluginName, {language, symbol_types: symbol_types_array}, port);\n    pluginManager.addPlugin(endpoint);\n    return this.status.OK();\n  }\n\n  private async loadWasmValue<T>(\n      expectValue: boolean, convert: (result: Protocol.Runtime.RemoteObject) => Record | T, expression: string,\n      stopId: unknown): Promise<Record|T> {\n    const {pluginManager} = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n    const callFrame = pluginManager.callFrameForStopId(stopId as Bindings.DebuggerLanguagePlugins.StopId);\n    if (!callFrame) {\n      return this.status.E_BADARG('stopId', 'Unknown stop id');\n    }\n    const result = await callFrame.debuggerModel.agent.invoke_evaluateOnCallFrame({\n      callFrameId: callFrame.id,\n      expression,\n      silent: true,\n      returnByValue: !expectValue,\n      generatePreview: expectValue,\n      throwOnSideEffect: true,\n    });\n\n    if (!result.exceptionDetails && !result.getError()) {\n      return convert(result.result);\n    }\n\n    return this.status.E_FAILED('Failed');\n  }\n\n  private async onGetWasmLinearMemory(message: PrivateAPI.ExtensionServerRequestMessage): Promise<Record|number[]> {\n    if (message.command !== PrivateAPI.Commands.GetWasmLinearMemory) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetWasmLinearMemory}`);\n    }\n    return await this.loadWasmValue<number[]>(\n        false, result => result.value,\n        `[].slice.call(new Uint8Array(memories[0].buffer, ${Number(message.offset)}, ${Number(message.length)}))`,\n        message.stopId);\n  }\n\n  private convertWasmValue(valueClass: 'local'|'global'|'operand', index: number):\n      (obj: Protocol.Runtime.RemoteObject) => Chrome.DevTools.WasmValue | undefined | Record {\n    return obj => {\n      if (obj.type === 'undefined') {\n        return;\n      }\n      if (obj.type !== 'object' || obj.subtype !== 'wasmvalue') {\n        return this.status.E_FAILED('Bad object type');\n      }\n      const type = obj?.description;\n      const value: string = obj.preview?.properties?.find(o => o.name === 'value')?.value ?? '';\n      switch (type) {\n        case 'i32':\n        case 'f32':\n        case 'f64':\n          return {type, value: Number(value)};\n        case 'i64':\n          return {type, value: BigInt(value.replace(/n$/, ''))};\n        case 'v128':\n          return {type, value};\n        default:\n          return {type: 'reftype', valueClass, index};\n      }\n    };\n  }\n\n  private async onGetWasmGlobal(message: PrivateAPI.ExtensionServerRequestMessage):\n      Promise<Record|Chrome.DevTools.WasmValue> {\n    if (message.command !== PrivateAPI.Commands.GetWasmGlobal) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetWasmGlobal}`);\n    }\n    const global = Number(message.global);\n    const result = await this.loadWasmValue<Chrome.DevTools.WasmValue|undefined>(\n        true, this.convertWasmValue('global', global), `globals[${global}]`, message.stopId);\n    return result ?? this.status.E_BADARG('global', `No global with index ${global}`);\n  }\n\n  private async onGetWasmLocal(message: PrivateAPI.ExtensionServerRequestMessage):\n      Promise<Record|Chrome.DevTools.WasmValue> {\n    if (message.command !== PrivateAPI.Commands.GetWasmLocal) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetWasmLocal}`);\n    }\n    const local = Number(message.local);\n    const result = await this.loadWasmValue<Chrome.DevTools.WasmValue|undefined>(\n        true, this.convertWasmValue('local', local), `locals[${local}]`, message.stopId);\n    return result ?? this.status.E_BADARG('local', `No local with index ${local}`);\n  }\n\n  private async onGetWasmOp(message: PrivateAPI.ExtensionServerRequestMessage):\n      Promise<Record|Chrome.DevTools.WasmValue> {\n    if (message.command !== PrivateAPI.Commands.GetWasmOp) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetWasmOp}`);\n    }\n    const op = Number(message.op);\n    const result = await this.loadWasmValue<Chrome.DevTools.WasmValue|undefined>(\n        true, this.convertWasmValue('operand', op), `stack[${op}]`, message.stopId);\n    return result ?? this.status.E_BADARG('op', `No operand with index ${op}`);\n  }\n\n  private registerRecorderExtensionEndpoint(\n      message: PrivateAPI.ExtensionServerRequestMessage, _shared_port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.RegisterRecorderExtensionPlugin) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.RegisterRecorderExtensionPlugin}`);\n    }\n    const {pluginName, mediaType, port, capabilities} = message;\n    RecorderPluginManager.instance().addPlugin(\n        new RecorderExtensionEndpoint(pluginName, port, capabilities, mediaType));\n    return this.status.OK();\n  }\n\n  private onReportResourceLoad(message: PrivateAPI.ExtensionServerRequestMessage): Record {\n    if (message.command !== PrivateAPI.Commands.ReportResourceLoad) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.ReportResourceLoad}`);\n    }\n    const {resourceUrl, extensionId, status} = message;\n    const url = resourceUrl as Platform.DevToolsPath.UrlString;\n    const initiator: SDK.PageResourceLoader.ExtensionInitiator =\n        {target: null, frameId: null, initiatorUrl: extensionId as Platform.DevToolsPath.UrlString, extensionId};\n\n    const pageResource: SDK.PageResourceLoader.PageResource = {\n      url,\n      initiator,\n      errorMessage: status.errorMessage,\n      success: status.success ?? null,\n      size: status.size ?? null,\n      duration: null,\n    };\n    SDK.PageResourceLoader.PageResourceLoader.instance().resourceLoadedThroughExtension(pageResource);\n    return this.status.OK();\n  }\n\n  private onSetFunctionRangesForScript(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.SetFunctionRangesForScript) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetFunctionRangesForScript}`);\n    }\n    const {scriptUrl, ranges} = message;\n    if (!scriptUrl || !ranges?.length) {\n      return this.status.E_BADARG('command', 'expected valid scriptUrl and non-empty NamedFunctionRanges');\n    }\n    if (!this.extensionAllowedOnURL(scriptUrl as Platform.DevToolsPath.UrlString, port)) {\n      return this.status.E_FAILED('Permission denied');\n    }\n    const uiSourceCode =\n        Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(scriptUrl as Platform.DevToolsPath.UrlString);\n    if (!uiSourceCode) {\n      return this.status.E_NOTFOUND(scriptUrl);\n    }\n    if (!uiSourceCode.contentType().isScript() || !uiSourceCode.contentType().isFromSourceMap()) {\n      return this.status.E_BADARG('command', `expected a source map script resource for url: ${scriptUrl}`);\n    }\n    try {\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().setFunctionRanges(uiSourceCode, ranges);\n    } catch (e) {\n      return this.status.E_FAILED(e);\n    }\n    return this.status.OK();\n  }\n\n  private onShowRecorderView(message: PrivateAPI.ExtensionServerRequestMessage): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.ShowRecorderView) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.ShowRecorderView}`);\n    }\n    RecorderPluginManager.instance().showView(message.id);\n    return undefined;\n  }\n\n  private onShowNetworkPanel(message: PrivateAPI.ExtensionServerRequestMessage): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.ShowNetworkPanel) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.ShowNetworkPanel}`);\n    }\n    void Common.Revealer.reveal(new RevealableNetworkRequestFilter(message.filter));\n    return this.status.OK();\n  }\n\n  private onCreateRecorderView(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.CreateRecorderView) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.CreateRecorderView}`);\n    }\n    const id = message.id;\n    // The ids are generated on the client API side and must be unique, so the check below\n    // shouldn't be hit unless someone is bypassing the API.\n    if (this.clientObjects.has(id)) {\n      return this.status.E_EXISTS(id);\n    }\n\n    const pagePath = ExtensionServer.expandResourcePath(this.getExtensionOrigin(port), message.pagePath);\n    if (pagePath === undefined) {\n      return this.status.E_BADARG('pagePath', 'Resources paths cannot point to non-extension resources');\n    }\n    const onShown = (): void => this.notifyViewShown(id);\n    const onHidden = (): void => this.notifyViewHidden(id);\n    RecorderPluginManager.instance().registerView({\n      id,\n      pagePath,\n      title: message.title,\n      onShown,\n      onHidden,\n    });\n    return this.status.OK();\n  }\n\n  private inspectedURLChanged(event: Common.EventTarget.EventTargetEvent<SDK.Target.Target>): void {\n    if (!ExtensionServer.canInspectURL(event.data.inspectedURL())) {\n      this.disableExtensions();\n      return;\n    }\n    if (event.data !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    this.requests = new Map();\n    this.enableExtensions();\n    const url = event.data.inspectedURL();\n    this.postNotification(PrivateAPI.Events.InspectedURLChanged, [url]);\n    const extensions = this.#pendingExtensions.splice(0);\n    extensions.forEach(e => this.addExtension(e));\n  }\n\n  hasSubscribers(type: string): boolean {\n    return this.subscribers.has(type);\n  }\n\n  private postNotification(type: string, args: unknown[], filter?: (extension: RegisteredExtension) => boolean): void {\n    if (!this.extensionsEnabled) {\n      return;\n    }\n    const subscribers = this.subscribers.get(type);\n    if (!subscribers) {\n      return;\n    }\n    const message = {command: 'notify-' + type, arguments: args};\n    for (const subscriber of subscribers) {\n      if (!this.extensionEnabled(subscriber)) {\n        continue;\n      }\n      if (filter) {\n        const origin = extensionOrigins.get(subscriber);\n        const extension = origin && this.registeredExtensions.get(origin);\n        if (!extension || !filter(extension)) {\n          continue;\n        }\n      }\n      subscriber.postMessage(message);\n    }\n  }\n\n  private onSubscribe(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.Subscribe) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.Subscribe}`);\n    }\n    const subscribers = this.subscribers.get(message.type);\n    if (subscribers) {\n      subscribers.add(port);\n    } else {\n      this.subscribers.set(message.type, new Set([port]));\n      const handler = this.subscriptionStartHandlers.get(message.type);\n      if (handler) {\n        handler();\n      }\n    }\n    return undefined;\n  }\n\n  private onUnsubscribe(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.Unsubscribe) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.Unsubscribe}`);\n    }\n    const subscribers = this.subscribers.get(message.type);\n    if (!subscribers) {\n      return;\n    }\n    subscribers.delete(port);\n    if (!subscribers.size) {\n      this.subscribers.delete(message.type);\n      const handler = this.subscriptionStopHandlers.get(message.type);\n      if (handler) {\n        handler();\n      }\n    }\n    return undefined;\n  }\n\n  private onAddRequestHeaders(message: PrivateAPI.ExtensionServerRequestMessage): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.AddRequestHeaders) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.AddRequestHeaders}`);\n    }\n    const id = message.extensionId;\n    if (typeof id !== 'string') {\n      return this.status.E_BADARGTYPE('extensionId', typeof id, 'string');\n    }\n    let extensionHeaders = this.extraHeaders.get(id);\n    if (!extensionHeaders) {\n      extensionHeaders = new Map();\n      this.extraHeaders.set(id, extensionHeaders);\n    }\n    for (const name in message.headers) {\n      extensionHeaders.set(name, message.headers[name]);\n    }\n    const allHeaders = ({} as Protocol.Network.Headers);\n    for (const headers of this.extraHeaders.values()) {\n      for (const [name, value] of headers) {\n        if (name !== '__proto__' && typeof value === 'string') {\n          allHeaders[name] = value;\n        }\n      }\n    }\n\n    SDK.NetworkManager.MultitargetNetworkManager.instance().setExtraHTTPHeaders(allHeaders);\n    return undefined;\n  }\n\n  private getExtensionOrigin(port: MessagePort): Platform.DevToolsPath.UrlString {\n    const origin = extensionOrigins.get(port);\n    if (!origin) {\n      throw new Error('Received a message from an unregistered extension');\n    }\n    return origin;\n  }\n\n  private onCreatePanel(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.CreatePanel) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.CreatePanel}`);\n    }\n    const id = message.id;\n    // The ids are generated on the client API side and must be unique, so the check below\n    // shouldn't be hit unless someone is bypassing the API.\n    if (this.clientObjects.has(id) || UI.InspectorView.InspectorView.instance().hasPanel(id)) {\n      return this.status.E_EXISTS(id);\n    }\n\n    const page = ExtensionServer.expandResourcePath(this.getExtensionOrigin(port), message.page);\n    if (page === undefined) {\n      return this.status.E_BADARG('page', 'Resources paths cannot point to non-extension resources');\n    }\n    let persistentId = this.getExtensionOrigin(port) + message.title;\n    persistentId = persistentId.replace(/\\s|:\\d+/g, '');\n    const panelView = new ExtensionServerPanelView(\n        persistentId, i18n.i18n.lockedString(message.title), new ExtensionPanel(this, persistentId, id, page));\n    this.clientObjects.set(id, panelView);\n    UI.InspectorView.InspectorView.instance().addPanel(panelView);\n    return this.status.OK();\n  }\n\n  private onShowPanel(message: PrivateAPI.ExtensionServerRequestMessage): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.ShowPanel) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.ShowPanel}`);\n    }\n\n    let panelViewId = message.id;\n    const panelView = this.clientObjects.get(message.id);\n    if (panelView && panelView instanceof ExtensionServerPanelView) {\n      panelViewId = panelView.viewId();\n    }\n    void UI.InspectorView.InspectorView.instance().showPanel(panelViewId);\n    return undefined;\n  }\n\n  private onCreateToolbarButton(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.CreateToolbarButton) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.CreateToolbarButton}`);\n    }\n    const panelView = this.clientObjects.get(message.panel);\n    if (!panelView || !(panelView instanceof ExtensionServerPanelView)) {\n      return this.status.E_NOTFOUND(message.panel);\n    }\n    const resourcePath = ExtensionServer.expandResourcePath(this.getExtensionOrigin(port), message.icon);\n    if (resourcePath === undefined) {\n      return this.status.E_BADARG('icon', 'Resources paths cannot point to non-extension resources');\n    }\n    const button = new ExtensionButton(this, message.id, resourcePath, message.tooltip, message.disabled);\n    this.clientObjects.set(message.id, button);\n\n    void panelView.widget().then(appendButton);\n\n    function appendButton(panel: UI.Widget.Widget): void {\n      (panel as ExtensionPanel).addToolbarItem(button.toolbarButton());\n    }\n\n    return this.status.OK();\n  }\n\n  private onUpdateButton(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.UpdateButton) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.UpdateButton}`);\n    }\n    const button = this.clientObjects.get(message.id);\n    if (!button || !(button instanceof ExtensionButton)) {\n      return this.status.E_NOTFOUND(message.id);\n    }\n    const resourcePath =\n        message.icon && ExtensionServer.expandResourcePath(this.getExtensionOrigin(port), message.icon);\n    if (message.icon && resourcePath === undefined) {\n      return this.status.E_BADARG('icon', 'Resources paths cannot point to non-extension resources');\n    }\n    button.update(resourcePath, message.tooltip, message.disabled);\n    return this.status.OK();\n  }\n\n  private onCreateSidebarPane(message: PrivateAPI.ExtensionServerRequestMessage): Record {\n    if (message.command !== PrivateAPI.Commands.CreateSidebarPane) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.CreateSidebarPane}`);\n    }\n    const id = message.id;\n    const sidebar = new ExtensionSidebarPane(this, message.panel, i18n.i18n.lockedString(message.title), id);\n    this.sidebarPanesInternal.push(sidebar);\n    this.clientObjects.set(id, sidebar);\n    this.dispatchEventToListeners(Events.SidebarPaneAdded, sidebar);\n\n    return this.status.OK();\n  }\n\n  sidebarPanes(): ExtensionSidebarPane[] {\n    return this.sidebarPanesInternal;\n  }\n\n  private onSetSidebarHeight(message: PrivateAPI.ExtensionServerRequestMessage): Record {\n    if (message.command !== PrivateAPI.Commands.SetSidebarHeight) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetSidebarHeight}`);\n    }\n    const sidebar = this.clientObjects.get(message.id);\n    if (!sidebar || !(sidebar instanceof ExtensionSidebarPane)) {\n      return this.status.E_NOTFOUND(message.id);\n    }\n    sidebar.setHeight(message.height);\n    return this.status.OK();\n  }\n\n  private onSetSidebarContent(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.SetSidebarContent) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetSidebarContent}`);\n    }\n    const {requestId, id, rootTitle, expression, evaluateOptions, evaluateOnPage} = message;\n    const sidebar = this.clientObjects.get(id);\n    if (!sidebar || !(sidebar instanceof ExtensionSidebarPane)) {\n      return this.status.E_NOTFOUND(message.id);\n    }\n\n    function callback(this: ExtensionServer, error: unknown): void {\n      const result = error ? this.status.E_FAILED(error) : this.status.OK();\n      this.dispatchCallback(requestId, port, result);\n    }\n    if (evaluateOnPage) {\n      sidebar.setExpression(expression, rootTitle, evaluateOptions, this.getExtensionOrigin(port), callback.bind(this));\n      return undefined;\n    }\n    sidebar.setObject(message.expression, message.rootTitle, callback.bind(this));\n    return undefined;\n  }\n\n  private onSetSidebarPage(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.SetSidebarPage) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetSidebarPage}`);\n    }\n    const sidebar = this.clientObjects.get(message.id);\n    if (!sidebar || !(sidebar instanceof ExtensionSidebarPane)) {\n      return this.status.E_NOTFOUND(message.id);\n    }\n    const resourcePath = ExtensionServer.expandResourcePath(this.getExtensionOrigin(port), message.page);\n    if (resourcePath === undefined) {\n      return this.status.E_BADARG('page', 'Resources paths cannot point to non-extension resources');\n    }\n    sidebar.setPage(resourcePath);\n    return undefined;\n  }\n\n  private onOpenResource(message: PrivateAPI.ExtensionServerRequestMessage): Record {\n    if (message.command !== PrivateAPI.Commands.OpenResource) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.OpenResource}`);\n    }\n    const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(message.url);\n    if (uiSourceCode) {\n      void Common.Revealer.reveal(uiSourceCode.uiLocation(message.lineNumber, message.columnNumber));\n      return this.status.OK();\n    }\n\n    const resource = Bindings.ResourceUtils.resourceForURL(message.url);\n    if (resource) {\n      void Common.Revealer.reveal(resource);\n      return this.status.OK();\n    }\n\n    const request = Logs.NetworkLog.NetworkLog.instance().requestForURL(message.url);\n    if (request) {\n      void Common.Revealer.reveal(request);\n      return this.status.OK();\n    }\n\n    return this.status.E_NOTFOUND(message.url);\n  }\n\n  private onSetOpenResourceHandler(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record\n      |undefined {\n    if (message.command !== PrivateAPI.Commands.SetOpenResourceHandler) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetOpenResourceHandler}`);\n    }\n    const extension = this.registeredExtensions.get(this.getExtensionOrigin(port));\n    if (!extension) {\n      throw new Error('Received a message from an unregistered extension');\n    }\n    if (message.urlScheme) {\n      extension.openResourceScheme = message.urlScheme;\n    }\n    const extensionOrigin = this.getExtensionOrigin(port);\n    const {name} = extension;\n    const registration = {\n      title: name,\n      origin: extensionOrigin,\n      scheme: message.urlScheme,\n      handler: this.handleOpenURL.bind(this, port),\n      filter: (url: Platform.DevToolsPath.UrlString, schemes: Set<string>) =>\n          Components.Linkifier.Linkifier.shouldHandleOpenResource(extension.openResourceScheme, url, schemes),\n    };\n    if (message.handlerPresent) {\n      Components.Linkifier.Linkifier.registerLinkHandler(registration);\n    } else {\n      Components.Linkifier.Linkifier.unregisterLinkHandler(registration);\n    }\n    return undefined;\n  }\n\n  private onSetThemeChangeHandler(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record\n      |undefined {\n    if (message.command !== PrivateAPI.Commands.SetThemeChangeHandler) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetThemeChangeHandler}`);\n    }\n    const extensionOrigin = this.getExtensionOrigin(port);\n    const extension = this.registeredExtensions.get(extensionOrigin);\n    if (!extension) {\n      throw new Error('Received a message from an unregistered extension');\n    }\n\n    if (message.handlerPresent) {\n      this.themeChangeHandlers.set(extensionOrigin, port);\n    } else {\n      this.themeChangeHandlers.delete(extensionOrigin);\n    }\n    return undefined;\n  }\n\n  private handleOpenURL(\n      port: MessagePort, contentProviderOrUrl: TextUtils.ContentProvider.ContentProvider|string, lineNumber?: number,\n      columnNumber?: number): void {\n    let url: Platform.DevToolsPath.UrlString;\n    let resource: {url: string, type: string};\n    if (typeof contentProviderOrUrl !== 'string') {\n      url = contentProviderOrUrl.contentURL();\n      resource = this.makeResource(contentProviderOrUrl);\n    } else {\n      url = contentProviderOrUrl as Platform.DevToolsPath.UrlString;\n      resource = {url, type: Common.ResourceType.resourceTypes.Other.name()};\n    }\n\n    if (this.extensionAllowedOnURL(url, port)) {\n      port.postMessage({\n        command: 'open-resource',\n        resource,\n        lineNumber: lineNumber ? lineNumber + 1 : undefined,\n        columnNumber: columnNumber ? columnNumber + 1 : undefined,\n      });\n    }\n  }\n\n  private extensionAllowedOnURL(url: Platform.DevToolsPath.UrlString, port: MessagePort): boolean {\n    const origin = extensionOrigins.get(port);\n    const extension = origin && this.registeredExtensions.get(origin);\n    return Boolean(extension?.isAllowedOnTarget(url));\n  }\n\n  private extensionAllowedOnTarget(target: SDK.Target.Target, port: MessagePort): boolean {\n    return this.extensionAllowedOnURL(target.inspectedURL(), port);\n  }\n\n  private onReload(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record {\n    if (message.command !== PrivateAPI.Commands.Reload) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.Reload}`);\n    }\n    const options = (message.options || {});\n\n    SDK.NetworkManager.MultitargetNetworkManager.instance().setUserAgentOverride(\n        typeof options.userAgent === 'string' ? options.userAgent : '', null);\n    let injectedScript;\n    if (options.injectedScript) {\n      injectedScript = '(function(){' + options.injectedScript + '})()';\n    }\n    const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    if (!target) {\n      return this.status.OK();\n    }\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!this.extensionAllowedOnTarget(target, port)) {\n      return this.status.E_FAILED('Permission denied');\n    }\n    resourceTreeModel?.reloadPage(Boolean(options.ignoreCache), injectedScript);\n    return this.status.OK();\n  }\n\n  private onEvaluateOnInspectedPage(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record\n      |undefined {\n    if (message.command !== PrivateAPI.Commands.EvaluateOnInspectedPage) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.EvaluateOnInspectedPage}`);\n    }\n\n    const {requestId, expression, evaluateOptions} = message;\n    function callback(\n        this: ExtensionServer, error: string|null, object: SDK.RemoteObject.RemoteObject|null,\n        wasThrown: boolean): void {\n      let result;\n      if (error || !object) {\n        result = this.status.E_PROTOCOLERROR(error?.toString());\n      } else if (wasThrown) {\n        result = {isException: true, value: object.description};\n      } else {\n        result = {value: object.value};\n      }\n\n      this.dispatchCallback(requestId, port, result);\n    }\n    return this.evaluate(expression, true, true, evaluateOptions, this.getExtensionOrigin(port), callback.bind(this));\n  }\n\n  private async onGetHAR(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort):\n      Promise<Record|HAR.Log.LogDTO> {\n    if (message.command !== PrivateAPI.Commands.GetHAR) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetHAR}`);\n    }\n    const requests =\n        Logs.NetworkLog.NetworkLog.instance().requests().filter(r => this.extensionAllowedOnURL(r.url(), port));\n    const harLog = await HAR.Log.Log.build(requests, {sanitize: false});\n    for (let i = 0; i < harLog.entries.length; ++i) {\n      // @ts-expect-error\n      harLog.entries[i]._requestId = this.requestId(requests[i]);\n    }\n    return harLog;\n  }\n\n  private makeResource(contentProvider: TextUtils.ContentProvider.ContentProvider):\n      {url: string, type: string, buildId?: string} {\n    let buildId: string|undefined = undefined;\n    if (contentProvider instanceof Workspace.UISourceCode.UISourceCode) {\n      // We use the first buildId we find searching in all Script objects that correspond to this UISourceCode.\n      buildId = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance()\n                    .scriptsForUISourceCode(contentProvider)\n                    .find(script => Boolean(script.buildId))\n                    ?.buildId ??\n          undefined;\n    }\n    return {url: contentProvider.contentURL(), type: contentProvider.contentType().name(), buildId};\n  }\n\n  private onGetPageResources(_message: unknown, port: MessagePort): Array<{url: string, type: string}> {\n    const resources = new Map<unknown, {\n      url: string,\n      type: string,\n    }>();\n    function pushResourceData(\n        this: ExtensionServer, contentProvider: TextUtils.ContentProvider.ContentProvider): boolean {\n      if (!resources.has(contentProvider.contentURL()) &&\n          this.extensionAllowedOnURL(contentProvider.contentURL(), port)) {\n        resources.set(contentProvider.contentURL(), this.makeResource(contentProvider));\n      }\n      return false;\n    }\n    let uiSourceCodes = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodesForProjectType(\n        Workspace.Workspace.projectTypes.Network);\n    uiSourceCodes = uiSourceCodes.concat(Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodesForProjectType(\n        Workspace.Workspace.projectTypes.ContentScripts));\n    uiSourceCodes.forEach(pushResourceData.bind(this));\n    for (const resourceTreeModel of SDK.TargetManager.TargetManager.instance().models(\n             SDK.ResourceTreeModel.ResourceTreeModel)) {\n      if (this.extensionAllowedOnTarget(resourceTreeModel.target(), port)) {\n        resourceTreeModel.forAllResources(pushResourceData.bind(this));\n      }\n    }\n\n    return [...resources.values()];\n  }\n\n  private async getResourceContent(\n      contentProvider: TextUtils.ContentProvider.ContentProvider, message: PrivateAPI.ExtensionServerRequestMessage,\n      port: MessagePort): Promise<void> {\n    if (!this.extensionAllowedOnURL(contentProvider.contentURL(), port)) {\n      this.dispatchCallback(message.requestId, port, this.status.E_FAILED('Permission denied'));\n      return undefined;\n    }\n    const contentData = await contentProvider.requestContentData();\n    if (TextUtils.ContentData.ContentData.isError(contentData)) {\n      this.dispatchCallback(message.requestId, port, {encoding: '', content: null});\n      return;\n    }\n    const encoding = !contentData.isTextContent ? 'base64' : '';\n    const content = contentData.isTextContent ? contentData.text : contentData.base64;\n    this.dispatchCallback(message.requestId, port, {encoding, content});\n  }\n\n  private onGetRequestContent(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.GetRequestContent) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetRequestContent}`);\n    }\n    const request = this.requestById(message.id);\n    if (!request) {\n      return this.status.E_NOTFOUND(message.id);\n    }\n    void this.getResourceContent(request, message, port);\n    return undefined;\n  }\n\n  private onGetResourceContent(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.GetResourceContent) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetResourceContent}`);\n    }\n    const url = message.url as Platform.DevToolsPath.UrlString;\n    const contentProvider = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url) ||\n        Bindings.ResourceUtils.resourceForURL(url);\n    if (!contentProvider) {\n      return this.status.E_NOTFOUND(url);\n    }\n    void this.getResourceContent(contentProvider, message, port);\n    return undefined;\n  }\n\n  private onAttachSourceMapToResource(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record\n      |undefined {\n    if (message.command !== PrivateAPI.Commands.AttachSourceMapToResource) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.GetResourceContent}`);\n    }\n\n    if (!message.sourceMapURL) {\n      return this.status.E_FAILED('Expected a source map URL but got null');\n    }\n\n    const url = message.contentUrl as Platform.DevToolsPath.UrlString;\n    if (!this.extensionAllowedOnURL(url, port)) {\n      return this.status.E_FAILED('Permission denied');\n    }\n    const contentProvider = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url);\n    if (!contentProvider) {\n      return this.status.E_NOTFOUND(url);\n    }\n\n    const debuggerBindingsInstance = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n    const scriptFiles = debuggerBindingsInstance.scriptsForUISourceCode(contentProvider);\n    if (scriptFiles.length > 0) {\n      for (const script of scriptFiles) {\n        const resourceFile = debuggerBindingsInstance.scriptFile(contentProvider, script.debuggerModel);\n        resourceFile?.addSourceMapURL(message.sourceMapURL as Platform.DevToolsPath.UrlString);\n      }\n    }\n\n    return this.status.OK();\n  }\n\n  private onSetResourceContent(message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.SetResourceContent) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.SetResourceContent}`);\n    }\n\n    const {url, requestId, content, commit} = message;\n    function callbackWrapper(this: ExtensionServer, error: string|null): void {\n      const response = error ? this.status.E_FAILED(error) : this.status.OK();\n      this.dispatchCallback(requestId, port, response);\n    }\n    if (!this.extensionAllowedOnURL(url as Platform.DevToolsPath.UrlString, port)) {\n      return this.status.E_FAILED('Permission denied');\n    }\n\n    const uiSourceCode =\n        Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url as Platform.DevToolsPath.UrlString);\n    if (!uiSourceCode?.contentType().isDocumentOrScriptOrStyleSheet()) {\n      const resource = SDK.ResourceTreeModel.ResourceTreeModel.resourceForURL(url as Platform.DevToolsPath.UrlString);\n      if (!resource) {\n        return this.status.E_NOTFOUND(url);\n      }\n      return this.status.E_NOTSUPPORTED('Resource is not editable');\n    }\n    uiSourceCode.setWorkingCopy(content);\n    if (commit) {\n      uiSourceCode.commitWorkingCopy();\n    }\n    callbackWrapper.call(this, null);\n    return undefined;\n  }\n\n  private requestId(request: TextUtils.ContentProvider.ContentProvider): number {\n    const requestId = this.requestIds.get(request);\n    if (requestId === undefined) {\n      const newId = ++this.lastRequestId;\n      this.requestIds.set(request, newId);\n      this.requests.set(newId, request);\n      return newId;\n    }\n    return requestId;\n  }\n\n  private requestById(id: number): TextUtils.ContentProvider.ContentProvider|undefined {\n    return this.requests.get(id);\n  }\n\n  private onForwardKeyboardEvent(message: PrivateAPI.ExtensionServerRequestMessage): Record|undefined {\n    if (message.command !== PrivateAPI.Commands.ForwardKeyboardEvent) {\n      return this.status.E_BADARG('command', `expected ${PrivateAPI.Commands.ForwardKeyboardEvent}`);\n    }\n    message.entries.forEach(handleEventEntry);\n\n    function handleEventEntry(entry: KeyboardEventInit&{eventType: string}): void {\n      // Fool around closure compiler -- it has its own notion of both KeyboardEvent constructor\n      // and initKeyboardEvent methods and overriding these in externs.js does not have effect.\n      const event = new window.KeyboardEvent(entry.eventType, {\n        key: entry.key,\n        code: entry.code,\n        keyCode: entry.keyCode,\n        location: entry.location,\n        ctrlKey: entry.ctrlKey,\n        altKey: entry.altKey,\n        shiftKey: entry.shiftKey,\n        metaKey: entry.metaKey,\n      });\n\n      // @ts-expect-error\n      event.__keyCode = keyCodeForEntry(entry);\n      document.dispatchEvent(event);\n    }\n\n    function keyCodeForEntry(entry: KeyboardEventInit): unknown {\n      let keyCode = entry.keyCode;\n      if (!keyCode) {\n        // This is required only for synthetic events (e.g. dispatched in tests).\n        if (entry.key === Platform.KeyboardUtilities.ESCAPE_KEY) {\n          keyCode = 27;\n        }\n      }\n      return keyCode || 0;\n    }\n    return undefined;\n  }\n\n  private dispatchCallback(requestId: unknown, port: MessagePort, result: unknown): void {\n    if (requestId) {\n      port.postMessage({command: 'callback', requestId, result});\n    }\n  }\n\n  private initExtensions(): void {\n    this.registerAutosubscriptionHandler(\n        PrivateAPI.Events.ResourceAdded, Workspace.Workspace.WorkspaceImpl.instance(),\n        Workspace.Workspace.Events.UISourceCodeAdded, this.notifyResourceAdded);\n    this.registerAutosubscriptionTargetManagerHandler(\n        PrivateAPI.Events.NetworkRequestFinished, SDK.NetworkManager.NetworkManager,\n        SDK.NetworkManager.Events.RequestFinished, this.notifyRequestFinished);\n\n    function onElementsSubscriptionStarted(this: ExtensionServer): void {\n      UI.Context.Context.instance().addFlavorChangeListener(\n          SDK.DOMModel.DOMNode, this.notifyElementsSelectionChanged, this);\n    }\n\n    function onElementsSubscriptionStopped(this: ExtensionServer): void {\n      UI.Context.Context.instance().removeFlavorChangeListener(\n          SDK.DOMModel.DOMNode, this.notifyElementsSelectionChanged, this);\n    }\n\n    this.registerSubscriptionHandler(\n        PrivateAPI.Events.PanelObjectSelected + 'elements', onElementsSubscriptionStarted.bind(this),\n        onElementsSubscriptionStopped.bind(this));\n    this.registerResourceContentCommittedHandler(this.notifyUISourceCodeContentCommitted);\n\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.INSPECTED_URL_CHANGED, this.inspectedURLChanged, this);\n  }\n\n  private notifyResourceAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    this.postNotification(\n        PrivateAPI.Events.ResourceAdded, [this.makeResource(uiSourceCode)],\n        extension => extension.isAllowedOnTarget(uiSourceCode.url()));\n  }\n\n  private notifyUISourceCodeContentCommitted(\n      event: Common.EventTarget.EventTargetEvent<Workspace.Workspace.WorkingCopyCommittedEvent>): void {\n    const {uiSourceCode, content} = event.data;\n    this.postNotification(\n        PrivateAPI.Events.ResourceContentCommitted, [this.makeResource(uiSourceCode), content],\n        extension => extension.isAllowedOnTarget(uiSourceCode.url()));\n  }\n\n  private async notifyRequestFinished(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest>):\n      Promise<void> {\n    const request = event.data;\n    const entry = await HAR.Log.Entry.build(request, {sanitize: false});\n    this.postNotification(\n        PrivateAPI.Events.NetworkRequestFinished, [this.requestId(request), entry],\n        extension => extension.isAllowedOnTarget(entry.request.url));\n  }\n\n  private notifyElementsSelectionChanged(): void {\n    this.postNotification(PrivateAPI.Events.PanelObjectSelected + 'elements', []);\n  }\n\n  sourceSelectionChanged(url: Platform.DevToolsPath.UrlString, range: TextUtils.TextRange.TextRange): void {\n    this.postNotification(\n        PrivateAPI.Events.PanelObjectSelected + 'sources', [{\n          startLine: range.startLine,\n          startColumn: range.startColumn,\n          endLine: range.endLine,\n          endColumn: range.endColumn,\n          url,\n        }],\n        extension => extension.isAllowedOnTarget(url));\n  }\n\n  private setInspectedTabId(event: Common.EventTarget.EventTargetEvent<string>): void {\n    const oldId = this.inspectedTabId;\n    this.inspectedTabId = event.data;\n    if (oldId === null) {\n      // Run deferred init\n      this.initializeExtensions();\n    }\n  }\n\n  addExtensionFrame({startPage, name}: Host.InspectorFrontendHostAPI.ExtensionDescriptor): void {\n    const iframe = document.createElement('iframe');\n    iframe.src = startPage;\n    iframe.dataset.devtoolsExtension = name;\n    iframe.style.display = 'none';\n    document.body.appendChild(iframe);  // Only for main window.\n  }\n\n  addExtension(extensionInfo: Host.InspectorFrontendHostAPI.ExtensionDescriptor): boolean|undefined {\n    const startPage = extensionInfo.startPage;\n\n    const inspectedURL = SDK.TargetManager.TargetManager.instance().primaryPageTarget()?.inspectedURL() ?? '';\n    if (inspectedURL === '') {\n      this.#pendingExtensions.push(extensionInfo);\n      return;\n    }\n    if (!ExtensionServer.canInspectURL(inspectedURL)) {\n      this.disableExtensions();\n    }\n    if (!this.extensionsEnabled) {\n      this.#pendingExtensions.push(extensionInfo);\n      return;\n    }\n    const hostsPolicy = HostsPolicy.create(extensionInfo.hostsPolicy);\n    if (!hostsPolicy) {\n      return;\n    }\n    try {\n      const startPageURL = new URL((startPage));\n      const extensionOrigin = startPageURL.origin;\n      const name = extensionInfo.name || `Extension ${extensionOrigin}`;\n      const extensionRegistration = new RegisteredExtension(name, hostsPolicy, Boolean(extensionInfo.allowFileAccess));\n      if (!extensionRegistration.isAllowedOnTarget(inspectedURL)) {\n        this.#pendingExtensions.push(extensionInfo);\n        return;\n      }\n      if (!this.registeredExtensions.get(extensionOrigin)) {\n        // See ExtensionAPI.js for details.\n        const injectedAPI = self.buildExtensionAPIInjectedScript(\n            extensionInfo, this.inspectedTabId as string, ThemeSupport.ThemeSupport.instance().themeName(),\n            UI.ShortcutRegistry.ShortcutRegistry.instance().globalShortcutKeys(),\n            ExtensionServer.instance().extensionAPITestHook);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.setInjectedScriptForOrigin(\n            extensionOrigin, injectedAPI);\n        this.registeredExtensions.set(extensionOrigin, extensionRegistration);\n      }\n      this.addExtensionFrame(extensionInfo);\n    } catch (e) {\n      console.error('Failed to initialize extension ' + startPage + ':' + e);\n      return false;\n    }\n    return true;\n  }\n\n  private registerExtension(origin: Platform.DevToolsPath.UrlString, port: MessagePort): void {\n    if (!this.registeredExtensions.has(origin)) {\n      if (origin !== window.location.origin) {  // Just ignore inspector frames.\n        console.error('Ignoring unauthorized client request from ' + origin);\n      }\n      return;\n    }\n    extensionOrigins.set(port, origin);\n    port.addEventListener('message', this.onmessage.bind(this), false);\n    port.start();\n  }\n\n  private onWindowMessage = (event: MessageEvent): void => {\n    if (event.data === 'registerExtension') {\n      this.registerExtension(event.origin as Platform.DevToolsPath.UrlString, event.ports[0]);\n    }\n  };\n\n  private extensionEnabled(port: MessagePort): boolean {\n    if (!this.extensionsEnabled) {\n      return false;\n    }\n    const origin = extensionOrigins.get(port);\n    if (!origin) {\n      return false;\n    }\n    const extension = this.registeredExtensions.get(origin);\n    if (!extension) {\n      return false;\n    }\n    return extension.isAllowedOnTarget();\n  }\n\n  private async onmessage(event: MessageEvent): Promise<void> {\n    const message = event.data;\n    let result;\n\n    const port = event.currentTarget as MessagePort;\n    const handler = this.handlers.get(message.command);\n\n    if (!handler) {\n      result = this.status.E_NOTSUPPORTED(message.command);\n    } else if (!this.extensionEnabled(port)) {\n      result = this.status.E_FAILED('Permission denied');\n    } else {\n      result = await handler(message, event.target as MessagePort);\n    }\n\n    if (result && message.requestId) {\n      this.dispatchCallback(message.requestId, event.target as MessagePort, result);\n    }\n  }\n\n  private registerHandler(\n      command: string,\n      callback: (message: PrivateAPI.ExtensionServerRequestMessage, port: MessagePort) => unknown): void {\n    console.assert(Boolean(command));\n    this.handlers.set(command, callback);\n  }\n\n  private registerSubscriptionHandler(\n      eventTopic: string, onSubscribeFirst: () => unknown, onUnsubscribeLast: () => unknown): void {\n    this.subscriptionStartHandlers.set(eventTopic, onSubscribeFirst);\n    this.subscriptionStopHandlers.set(eventTopic, onUnsubscribeLast);\n  }\n\n  private registerAutosubscriptionHandler<Events, T extends keyof Events>(\n      eventTopic: string, eventTarget: Common.EventTarget.EventTarget<Events>, frontendEventType: T,\n      handler: Common.EventTarget.EventListener<Events, T>): void {\n    this.registerSubscriptionHandler(\n        eventTopic, () => eventTarget.addEventListener(frontendEventType, handler, this),\n        () => eventTarget.removeEventListener(frontendEventType, handler, this));\n  }\n\n  private registerAutosubscriptionTargetManagerHandler<Events, T extends keyof Events>(\n      eventTopic: string, modelClass: new(arg1: SDK.Target.Target) => SDK.SDKModel.SDKModel<Events>,\n      frontendEventType: T, handler: Common.EventTarget.EventListener<Events, T>): void {\n    this.registerSubscriptionHandler(\n        eventTopic,\n        () => SDK.TargetManager.TargetManager.instance().addModelListener(modelClass, frontendEventType, handler, this),\n        () => SDK.TargetManager.TargetManager.instance().removeModelListener(\n            modelClass, frontendEventType, handler, this));\n  }\n\n  private registerResourceContentCommittedHandler(\n      handler: (arg0: Common.EventTarget.EventTargetEvent<Workspace.Workspace.WorkingCopyCommittedEvent>) => unknown):\n      void {\n    function addFirstEventListener(this: ExtensionServer): void {\n      Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n          Workspace.Workspace.Events.WorkingCopyCommittedByUser, handler, this);\n      Workspace.Workspace.WorkspaceImpl.instance().setHasResourceContentTrackingExtensions(true);\n    }\n\n    function removeLastEventListener(this: ExtensionServer): void {\n      Workspace.Workspace.WorkspaceImpl.instance().setHasResourceContentTrackingExtensions(false);\n      Workspace.Workspace.WorkspaceImpl.instance().removeEventListener(\n          Workspace.Workspace.Events.WorkingCopyCommittedByUser, handler, this);\n    }\n\n    this.registerSubscriptionHandler(\n        PrivateAPI.Events.ResourceContentCommitted, addFirstEventListener.bind(this),\n        removeLastEventListener.bind(this));\n  }\n\n  static expandResourcePath(extensionOrigin: Platform.DevToolsPath.UrlString, resourcePath: string):\n      Platform.DevToolsPath.UrlString|undefined {\n    const strippedOrigin = new URL(extensionOrigin).origin;\n    const resourceURL = new URL(Common.ParsedURL.normalizePath(resourcePath), strippedOrigin);\n    if (resourceURL.origin !== strippedOrigin) {\n      return undefined;\n    }\n    return resourceURL.href as Platform.DevToolsPath.UrlString;\n  }\n\n  evaluate(\n      expression: string, exposeCommandLineAPI: boolean, returnByValue: boolean,\n      options: PrivateAPI.EvaluateOptions|undefined, securityOrigin: string,\n      callback: (arg0: string|null, arg1: SDK.RemoteObject.RemoteObject|null, arg2: boolean) => unknown): Record\n      |undefined {\n    let context;\n\n    function resolveURLToFrame(url: Platform.DevToolsPath.UrlString): SDK.ResourceTreeModel.ResourceTreeFrame|null {\n      let found = null;\n      function hasMatchingURL(frame: SDK.ResourceTreeModel.ResourceTreeFrame): SDK.ResourceTreeModel.ResourceTreeFrame|\n          null {\n        found = (frame.url === url) ? frame : null;\n        return found;\n      }\n      SDK.ResourceTreeModel.ResourceTreeModel.frames().some(hasMatchingURL);\n      return found;\n    }\n\n    options = options || {};\n    let frame;\n    if (options.frameURL) {\n      frame = resolveURLToFrame(options.frameURL as Platform.DevToolsPath.UrlString);\n    } else {\n      const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n      const resourceTreeModel = target?.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      frame = resourceTreeModel?.mainFrame;\n    }\n    if (!frame) {\n      if (options.frameURL) {\n        console.warn('evaluate: there is no frame with URL ' + options.frameURL);\n      } else {\n        console.warn('evaluate: the main frame is not yet available');\n      }\n      return this.status.E_NOTFOUND(options.frameURL || '<top>');\n    }\n    // We shouldn't get here if the outermost frame can't be inspected by an extension, but\n    // let's double check for subframes.\n    const extension = this.registeredExtensions.get(securityOrigin);\n    if (!extension?.isAllowedOnTarget(frame.url)) {\n      return this.status.E_FAILED('Permission denied');\n    }\n\n    let contextSecurityOrigin;\n    if (options.useContentScriptContext) {\n      contextSecurityOrigin = securityOrigin;\n    } else if (options.scriptExecutionContext) {\n      contextSecurityOrigin = options.scriptExecutionContext;\n    }\n\n    const runtimeModel = frame.resourceTreeModel().target().model(SDK.RuntimeModel.RuntimeModel);\n    const executionContexts = runtimeModel ? runtimeModel.executionContexts() : [];\n    if (contextSecurityOrigin) {\n      for (let i = 0; i < executionContexts.length; ++i) {\n        const executionContext = executionContexts[i];\n        if (executionContext.frameId === frame.id && executionContext.origin === contextSecurityOrigin &&\n            !executionContext.isDefault) {\n          context = executionContext;\n        }\n      }\n      if (!context) {\n        console.warn('The JavaScript context ' + contextSecurityOrigin + ' was not found in the frame ' + frame.url);\n        return this.status.E_NOTFOUND(contextSecurityOrigin);\n      }\n    } else {\n      for (let i = 0; i < executionContexts.length; ++i) {\n        const executionContext = executionContexts[i];\n        if (executionContext.frameId === frame.id && executionContext.isDefault) {\n          context = executionContext;\n        }\n      }\n      if (!context) {\n        return this.status.E_FAILED(frame.url + ' has no execution context');\n      }\n    }\n    if (!extension?.isAllowedOnTarget(context.origin)) {\n      return this.status.E_FAILED('Permission denied');\n    }\n\n    void context\n        .evaluate(\n            {\n              expression,\n              objectGroup: 'extension',\n              includeCommandLineAPI: exposeCommandLineAPI,\n              silent: true,\n              returnByValue,\n              generatePreview: false,\n            },\n            /* userGesture */ false, /* awaitPromise */ false)\n        .then(onEvaluate);\n\n    function onEvaluate(result: SDK.RuntimeModel.EvaluationResult): void {\n      if ('error' in result) {\n        callback(result.error, null, false);\n        return;\n      }\n      callback(null, result.object || null, Boolean(result.exceptionDetails));\n    }\n    return undefined;\n  }\n\n  static canInspectURL(url: Platform.DevToolsPath.UrlString): boolean {\n    let parsedURL;\n    // This is only to work around invalid URLs we're occasionally getting from some tests.\n    // TODO(caseq): make sure tests supply valid URLs or we specifically handle invalid ones.\n    try {\n      parsedURL = new URL(url);\n    } catch {\n      return false;\n    }\n\n    if (!kPermittedSchemes.includes(parsedURL.protocol)) {\n      return false;\n    }\n\n    if ((window.DevToolsAPI?.getOriginsForbiddenForExtensions?.() || []).includes(parsedURL.origin)) {\n      return false;\n    }\n\n    if (this.#isUrlFromChromeWebStore(parsedURL)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Tests whether a given URL is from the Chrome web store to prevent the extension server from\n   * being injected. This is treated as separate from the `getOriginsForbiddenForExtensions` API because\n   * DevTools might not be being run from a native origin and we still want to lock down this specific\n   * origin from DevTools extensions.\n   *\n   * @param parsedURL The URL to check\n   * @returns `true` if the URL corresponds to the Chrome web store; otherwise `false`\n   */\n  static #isUrlFromChromeWebStore(parsedURL: URL): boolean {\n    if (parsedURL.protocol.startsWith('http') && parsedURL.hostname.match(/^chrome\\.google\\.com\\.?$/) &&\n        parsedURL.pathname.startsWith('/webstore')) {\n      return true;\n    }\n    if (parsedURL.protocol.startsWith('http') && parsedURL.hostname.match(/^chromewebstore\\.google\\.com\\.?$/)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private disableExtensions(): void {\n    this.extensionsEnabled = false;\n  }\n\n  private enableExtensions(): void {\n    this.extensionsEnabled = true;\n  }\n}\n\nexport const enum Events {\n  SidebarPaneAdded = 'SidebarPaneAdded',\n}\n\nexport interface EventTypes {\n  [Events.SidebarPaneAdded]: ExtensionSidebarPane;\n}\n\nclass ExtensionServerPanelView extends UI.View.SimpleView {\n  private readonly name: string;\n  private readonly panel: UI.Panel.Panel;\n\n  constructor(name: string, title: Platform.UIString.LocalizedString, panel: UI.Panel.Panel) {\n    super(title);\n    this.name = name;\n    this.panel = panel;\n  }\n\n  override viewId(): string {\n    return this.name;\n  }\n\n  override widget(): Promise<UI.Widget.Widget> {\n    return Promise.resolve(this.panel) as Promise<UI.Widget.Widget>;\n  }\n}\n\nexport class ExtensionStatus {\n  OK: (...args: unknown[]) => Record;\n  E_EXISTS: (...args: unknown[]) => Record;\n  E_BADARG: (...args: unknown[]) => Record;\n  E_BADARGTYPE: (...args: unknown[]) => Record;\n  E_NOTFOUND: (...args: unknown[]) => Record;\n  E_NOTSUPPORTED: (...args: unknown[]) => Record;\n  E_PROTOCOLERROR: (...args: unknown[]) => Record;\n  E_FAILED: (...args: unknown[]) => Record;\n\n  constructor() {\n    function makeStatus(code: string, description: string, ...details: unknown[]): Record {\n      const status: Record = {code, description, details};\n      if (code !== 'OK') {\n        status.isError = true;\n        console.error('Extension server error: ' + Platform.StringUtilities.sprintf(description, ...details));\n      }\n      return status;\n    }\n\n    this.OK = makeStatus.bind(null, 'OK', 'OK');\n    this.E_EXISTS = makeStatus.bind(null, 'E_EXISTS', 'Object already exists: %s');\n    this.E_BADARG = makeStatus.bind(null, 'E_BADARG', 'Invalid argument %s: %s');\n    this.E_BADARGTYPE = makeStatus.bind(null, 'E_BADARGTYPE', 'Invalid type for argument %s: got %s, expected %s');\n    this.E_NOTFOUND = makeStatus.bind(null, 'E_NOTFOUND', 'Object not found: %s');\n    this.E_NOTSUPPORTED = makeStatus.bind(null, 'E_NOTSUPPORTED', 'Object does not support requested operation: %s');\n    this.E_PROTOCOLERROR = makeStatus.bind(null, 'E_PROTOCOLERROR', 'Inspector protocol error: %s');\n    this.E_FAILED = makeStatus.bind(null, 'E_FAILED', 'Operation failed: %s');\n  }\n}\nexport interface Record {\n  code: string;\n  description: string;\n  details: unknown[];\n  isError?: boolean;\n}\n", "// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\n\nfunction parseScheme(pattern: string): {hostPattern: string, scheme: string}|undefined {\n  const SCHEME_SEPARATOR = '://';\n  const schemeEnd = pattern.indexOf(SCHEME_SEPARATOR);\n  if (schemeEnd < 0) {\n    return undefined;\n  }\n  const scheme = pattern.substr(0, schemeEnd).toLowerCase();\n\n  // Keep in sync with //extensions/common/url_pattern.cc in chromium\n  const validSchemes = [\n    '*', 'http', 'https', 'ftp', 'chrome', 'chrome-extension',\n    // Chromium additionally defines the following schemes, but these aren't relevant for host url patterns:\n    /* 'file', 'filesystem', 'ws', 'wss', 'data', 'uuid-in-package'*/\n  ];\n\n  if (!validSchemes.includes(scheme)) {\n    return undefined;\n  }\n\n  return {scheme, hostPattern: pattern.substr(schemeEnd + SCHEME_SEPARATOR.length)};\n}\n\nfunction defaultPort(scheme: string): string|undefined {\n  switch (scheme) {\n    case 'http':\n      return '80';\n    case 'https':\n      return '443';\n    case 'ftp':\n      return '25';\n  }\n  return undefined;\n}\n\nfunction parseHostAndPort(pattern: string, scheme: string): {host: string, port: string}|undefined {\n  const pathnameStart = pattern.indexOf('/');\n  if (pathnameStart >= 0) {\n    const path = pattern.substr(pathnameStart);\n    if (path !== '/*' && path !== '/') {\n      // Host patterns don't allow for paths to be specified\n      return undefined;\n    }\n    // Strip off path part\n    pattern = pattern.substr(0, pathnameStart);\n  }\n\n  const PORT_WILDCARD = ':*';\n  if (pattern.endsWith(PORT_WILDCARD)) {\n    // Strip off wildcard port to not upset url parsing\n    pattern = pattern.substr(0, pattern.length - PORT_WILDCARD.length);\n  }\n\n  if (pattern.endsWith(':')) {\n    return undefined;\n  }\n\n  const SUBDOMAIN_WILDCARD = '*.';\n  let asUrl: URL;\n  try {\n    asUrl = new URL(\n        pattern.startsWith(SUBDOMAIN_WILDCARD) ? `http://${pattern.substr(SUBDOMAIN_WILDCARD.length)}` :\n                                                 `http://${pattern}`);\n  } catch {\n    return undefined;\n  }\n  if (asUrl.pathname !== '/') {\n    return undefined;\n  }\n\n  if (asUrl.hostname.endsWith('.')) {\n    asUrl.hostname = asUrl.hostname.substr(0, asUrl.hostname.length - 1);\n  }\n\n  // The URL constructor is happy to accept '*', but it gets replaced with %2A\n  if (asUrl.hostname !== '%2A' && asUrl.hostname.includes('%2A')) {\n    return undefined;\n  }\n\n  // The URL constructor strips off the default port for the scheme, even if it was given explicitely\n  const httpPort = defaultPort('http');\n  if (!httpPort) {\n    return undefined;\n  }\n  const port = pattern.endsWith(`:${httpPort}`) ? httpPort : (asUrl.port === '' ? '*' : asUrl.port);\n  const schemesWithPort = ['http', 'https', 'ftp'];\n  if (port !== '*' && !schemesWithPort.includes(scheme)) {\n    return undefined;\n  }\n\n  const host = asUrl.hostname !== '%2A' ? (pattern.startsWith('*.') ? `*.${asUrl.hostname}` : asUrl.hostname) : '*';\n  return {\n    host,\n    port,\n  };\n}\n\n// HostUrlPatterns define permissions in for extensions in the form of `*://*.example.com:*/`. Since these aren't valid\n// URLs Common.ParsedURL can't handle them and we need a separate implementation.\nexport class HostUrlPattern {\n  static parse(pattern: string): HostUrlPattern|undefined {\n    if (pattern === '<all_urls>') {\n      return new HostUrlPattern({matchesAll: true});\n    }\n    const parsedScheme = parseScheme(pattern);\n    if (!parsedScheme) {\n      return undefined;\n    }\n    const {scheme, hostPattern} = parsedScheme;\n\n    const parsedHost = parseHostAndPort(hostPattern, scheme);\n    if (!parsedHost) {\n      return undefined;\n    }\n    const {host, port} = parsedHost;\n\n    return new HostUrlPattern({scheme, host, port, matchesAll: false});\n  }\n\n  private constructor(readonly pattern: {matchesAll: true}|\n                      {readonly scheme: string, readonly host: string, readonly port: string, matchesAll: false}) {\n  }\n\n  get scheme(): string {\n    return this.pattern.matchesAll ? '*' : this.pattern.scheme;\n  }\n  get host(): string {\n    return this.pattern.matchesAll ? '*' : this.pattern.host;\n  }\n  get port(): string {\n    return this.pattern.matchesAll ? '*' : this.pattern.port;\n  }\n\n  matchesAllUrls(): boolean {\n    return this.pattern.matchesAll;\n  }\n\n  matchesUrl(url: Platform.DevToolsPath.UrlString): boolean {\n    let parsedUrl;\n    try {\n      parsedUrl = new URL(url);\n    } catch {\n      return false;\n    }\n    // Try to parse the input url before checking for <all_urls> because <all_urls> doesn't match invalid urls\n    if (this.matchesAllUrls()) {\n      return true;\n    }\n    const scheme = parsedUrl.protocol.substr(0, parsedUrl.protocol.length - 1);\n    const port = parsedUrl.port || defaultPort(scheme);\n    return this.matchesScheme(scheme) && this.matchesHost(parsedUrl.hostname) && (!port || this.matchesPort(port));\n  }\n\n  matchesScheme(scheme: string): boolean {\n    if (this.pattern.matchesAll) {\n      return true;\n    }\n    if (this.pattern.scheme === '*') {\n      return scheme === 'http' || scheme === 'https';\n    }\n    return this.pattern.scheme === scheme;\n  }\n\n  matchesHost(host: string): boolean {\n    if (this.pattern.matchesAll) {\n      return true;\n    }\n    if (this.pattern.host === '*') {\n      return true;\n    }\n    let normalizedHost = new URL(`http://${host}`).hostname;\n    if (normalizedHost.endsWith('.')) {\n      normalizedHost = normalizedHost.substr(0, normalizedHost.length - 1);\n    }\n    if (this.pattern.host.startsWith('*.')) {\n      return normalizedHost === this.pattern.host.substr(2) || normalizedHost.endsWith(this.pattern.host.substr(1));\n    }\n    return this.pattern.host === normalizedHost;\n  }\n\n  matchesPort(port: string): boolean {\n    if (this.pattern.matchesAll) {\n      return true;\n    }\n    return this.pattern.port === '*' || this.pattern.port === port;\n  }\n}\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {Chrome} from '../../../extension-api/ExtensionAPI.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../bindings/bindings.js';\n\nimport {PrivateAPI} from './ExtensionAPI.js';\nimport {ExtensionEndpoint} from './ExtensionEndpoint.js';\n\nclass LanguageExtensionEndpointImpl extends ExtensionEndpoint {\n  private plugin: LanguageExtensionEndpoint;\n  constructor(plugin: LanguageExtensionEndpoint, port: MessagePort) {\n    super(port);\n    this.plugin = plugin;\n  }\n  protected override handleEvent({event}: {event: string}): void {\n    switch (event) {\n      case PrivateAPI.LanguageExtensionPluginEvents.UnregisteredLanguageExtensionPlugin: {\n        this.disconnect();\n        const {pluginManager} = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n        pluginManager.removePlugin(this.plugin);\n        break;\n      }\n    }\n  }\n}\n\nexport class LanguageExtensionEndpoint implements Bindings.DebuggerLanguagePlugins.DebuggerLanguagePlugin {\n  private readonly supportedScriptTypes: {\n    language: string,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    symbol_types: string[],\n  };\n  private readonly endpoint: LanguageExtensionEndpointImpl;\n  private readonly extensionOrigin: string;\n  readonly allowFileAccess: boolean;\n  readonly name: string;\n\n  constructor(\n      allowFileAccess: boolean, extensionOrigin: string, name: string, supportedScriptTypes: {\n        language: string,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        symbol_types: string[],\n      },\n      port: MessagePort) {\n    this.name = name;\n    this.extensionOrigin = extensionOrigin;\n    this.supportedScriptTypes = supportedScriptTypes;\n    this.endpoint = new LanguageExtensionEndpointImpl(this, port);\n    this.allowFileAccess = allowFileAccess;\n  }\n\n  canAccessURL(url: string): boolean {\n    try {\n      return !url || this.allowFileAccess || new URL(url).protocol !== 'file:';\n    } catch {\n      // If the URL isn't valid, it also isn't a valid file url and it's safe to tell the extensions about it.\n      return true;\n    }\n  }\n\n  handleScript(script: SDK.Script.Script): boolean {\n    try {\n      if (!this.canAccessURL(script.contentURL()) || (script.hasSourceURL && !this.canAccessURL(script.sourceURL)) ||\n          (script.debugSymbols?.externalURL && !this.canAccessURL(script.debugSymbols.externalURL))) {\n        return false;\n      }\n    } catch {\n      return false;\n    }\n    const language = script.scriptLanguage();\n    return language !== null && script.debugSymbols !== null && language === this.supportedScriptTypes.language &&\n        this.supportedScriptTypes.symbol_types.includes(script.debugSymbols.type);\n  }\n\n  createPageResourceLoadInitiator(): SDK.PageResourceLoader.PageResourceLoadInitiator {\n    return {\n      target: null,\n      frameId: null,\n      extensionId: this.extensionOrigin,\n      initiatorUrl: this.extensionOrigin as Platform.DevToolsPath.UrlString,\n    };\n  }\n\n  /** Notify the plugin about a new script\n   */\n  addRawModule(rawModuleId: string, symbolsURL: string, rawModule: Chrome.DevTools.RawModule): Promise<string[]> {\n    if (!this.canAccessURL(symbolsURL) || !this.canAccessURL(rawModule.url)) {\n      return Promise.resolve([]);\n    }\n    return this.endpoint.sendRequest(\n        PrivateAPI.LanguageExtensionPluginCommands.AddRawModule, {rawModuleId, symbolsURL, rawModule});\n  }\n\n  /**\n   * Notifies the plugin that a script is removed.\n   */\n  removeRawModule(rawModuleId: string): Promise<void> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.RemoveRawModule, {rawModuleId});\n  }\n\n  /** Find locations in raw modules from a location in a source file\n   */\n  sourceLocationToRawLocation(sourceLocation: Chrome.DevTools.SourceLocation):\n      Promise<Chrome.DevTools.RawLocationRange[]> {\n    return this.endpoint.sendRequest(\n        PrivateAPI.LanguageExtensionPluginCommands.SourceLocationToRawLocation, {sourceLocation});\n  }\n\n  /** Find locations in source files from a location in a raw module\n   */\n  rawLocationToSourceLocation(rawLocation: Chrome.DevTools.RawLocation): Promise<Chrome.DevTools.SourceLocation[]> {\n    return this.endpoint.sendRequest(\n        PrivateAPI.LanguageExtensionPluginCommands.RawLocationToSourceLocation, {rawLocation});\n  }\n\n  getScopeInfo(type: string): Promise<Chrome.DevTools.ScopeInfo> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.GetScopeInfo, {type});\n  }\n\n  /** List all variables in lexical scope at a given location in a raw module\n   */\n  listVariablesInScope(rawLocation: Chrome.DevTools.RawLocation): Promise<Chrome.DevTools.Variable[]> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.ListVariablesInScope, {rawLocation});\n  }\n\n  /** List all function names (including inlined frames) at location\n   */\n  getFunctionInfo(rawLocation: Chrome.DevTools.RawLocation): Promise<{\n    frames: Chrome.DevTools.FunctionInfo[],\n  }> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.GetFunctionInfo, {rawLocation});\n  }\n\n  /** Find locations in raw modules corresponding to the inline function\n   *  that rawLocation is in.\n   */\n  getInlinedFunctionRanges(rawLocation: Chrome.DevTools.RawLocation): Promise<Chrome.DevTools.RawLocationRange[]> {\n    return this.endpoint.sendRequest(\n        PrivateAPI.LanguageExtensionPluginCommands.GetInlinedFunctionRanges, {rawLocation});\n  }\n\n  /** Find locations in raw modules corresponding to inline functions\n   *  called by the function or inline frame that rawLocation is in.\n   */\n  getInlinedCalleesRanges(rawLocation: Chrome.DevTools.RawLocation): Promise<Chrome.DevTools.RawLocationRange[]> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.GetInlinedCalleesRanges, {rawLocation});\n  }\n\n  async getMappedLines(rawModuleId: string, sourceFileURL: string): Promise<number[]|undefined> {\n    return await this.endpoint.sendRequest(\n        PrivateAPI.LanguageExtensionPluginCommands.GetMappedLines, {rawModuleId, sourceFileURL});\n  }\n\n  async evaluate(expression: string, context: Chrome.DevTools.RawLocation, stopId: number):\n      Promise<Chrome.DevTools.RemoteObject> {\n    return await this.endpoint.sendRequest(\n        PrivateAPI.LanguageExtensionPluginCommands.FormatValue, {expression, context, stopId});\n  }\n\n  getProperties(objectId: Chrome.DevTools.RemoteObjectId): Promise<Chrome.DevTools.PropertyDescriptor[]> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.GetProperties, {objectId});\n  }\n\n  releaseObject(objectId: Chrome.DevTools.RemoteObjectId): Promise<void> {\n    return this.endpoint.sendRequest(PrivateAPI.LanguageExtensionPluginCommands.ReleaseObject, {objectId});\n  }\n}\n", "// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {PrivateAPI} from './ExtensionAPI.js';\nimport {ExtensionEndpoint} from './ExtensionEndpoint.js';\nimport {RecorderPluginManager} from './RecorderPluginManager.js';\n\nexport class RecorderExtensionEndpoint extends ExtensionEndpoint {\n  private readonly name: string;\n  private readonly mediaType?: string;\n  private readonly capabilities: PrivateAPI.RecordingExtensionPluginCapability[];\n\n  constructor(\n      name: string, port: MessagePort, capabilities: PrivateAPI.RecordingExtensionPluginCapability[],\n      mediaType?: string) {\n    super(port);\n    this.name = name;\n    this.mediaType = mediaType;\n    this.capabilities = capabilities;\n  }\n\n  getName(): string {\n    return this.name;\n  }\n\n  getCapabilities(): PrivateAPI.RecordingExtensionPluginCapability[] {\n    return this.capabilities;\n  }\n\n  getMediaType(): string|undefined {\n    return this.mediaType;\n  }\n\n  protected override handleEvent({event}: {event: string}): void {\n    switch (event) {\n      case PrivateAPI.RecorderExtensionPluginEvents.UnregisteredRecorderExtensionPlugin: {\n        this.disconnect();\n        RecorderPluginManager.instance().removePlugin(this);\n        break;\n      }\n      default:\n        throw new Error(`Unrecognized Recorder extension endpoint event: ${event}`);\n    }\n  }\n\n  /**\n   * In practice, `recording` is a UserFlow[1], but we avoid defining this type on the\n   * API in order to prevent dependencies between Chrome and puppeteer. Extensions\n   * are responsible for working out potential compatibility issues.\n   *\n   * [1]: https://github.com/puppeteer/replay/blob/main/src/Schema.ts#L245\n   */\n  stringify(recording: Object): Promise<string> {\n    return this.sendRequest(PrivateAPI.RecorderExtensionPluginCommands.Stringify, {recording});\n  }\n\n  /**\n   * In practice, `step` is a Step[1], but we avoid defining this type on the\n   * API in order to prevent dependencies between Chrome and puppeteer. Extensions\n   * are responsible for working out compatibility issues.\n   *\n   * [1]: https://github.com/puppeteer/replay/blob/main/src/Schema.ts#L243\n   */\n  stringifyStep(step: Object): Promise<string> {\n    return this.sendRequest(PrivateAPI.RecorderExtensionPluginCommands.StringifyStep, {step});\n  }\n\n  /**\n   * In practice, `recording` is a UserFlow[1], but we avoid defining this type on the\n   * API in order to prevent dependencies between Chrome and puppeteer. Extensions\n   * are responsible for working out potential compatibility issues.\n   *\n   * [1]: https://github.com/puppeteer/replay/blob/main/src/Schema.ts#L245\n   */\n  replay(recording: Object): Promise<void> {\n    return this.sendRequest(PrivateAPI.RecorderExtensionPluginCommands.Replay, {recording});\n  }\n}\n", "// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\n\nimport type {RecorderExtensionEndpoint} from './RecorderExtensionEndpoint.js';\n\nlet instance: RecorderPluginManager|null = null;\n\nexport interface ViewDescriptor {\n  id: string;\n  title: string;\n  pagePath: string;\n  onShown: () => void;\n  onHidden: () => void;\n}\n\nexport class RecorderPluginManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  #plugins = new Set<RecorderExtensionEndpoint>();\n  #views = new Map<string, ViewDescriptor>();\n\n  static instance(): RecorderPluginManager {\n    if (!instance) {\n      instance = new RecorderPluginManager();\n    }\n    return instance;\n  }\n\n  addPlugin(plugin: RecorderExtensionEndpoint): void {\n    this.#plugins.add(plugin);\n    this.dispatchEventToListeners(Events.PLUGIN_ADDED, plugin);\n  }\n\n  removePlugin(plugin: RecorderExtensionEndpoint): void {\n    this.#plugins.delete(plugin);\n    this.dispatchEventToListeners(Events.PLUGIN_REMOVED, plugin);\n  }\n\n  plugins(): RecorderExtensionEndpoint[] {\n    return Array.from(this.#plugins.values());\n  }\n\n  registerView(descriptor: ViewDescriptor): void {\n    this.#views.set(descriptor.id, descriptor);\n    this.dispatchEventToListeners(Events.VIEW_REGISTERED, descriptor);\n  }\n\n  views(): ViewDescriptor[] {\n    return Array.from(this.#views.values());\n  }\n\n  getViewDescriptor(id: string): ViewDescriptor|undefined {\n    return this.#views.get(id);\n  }\n\n  showView(id: string): void {\n    const descriptor = this.#views.get(id);\n    if (!descriptor) {\n      throw new Error(`View with id ${id} is not found.`);\n    }\n    this.dispatchEventToListeners(Events.SHOW_VIEW_REQUESTED, descriptor);\n  }\n}\n\nexport const enum Events {\n  PLUGIN_ADDED = 'pluginAdded',\n  PLUGIN_REMOVED = 'pluginRemoved',\n  VIEW_REGISTERED = 'viewRegistered',\n  SHOW_VIEW_REQUESTED = 'showViewRequested',\n}\n\nexport interface EventTypes {\n  [Events.PLUGIN_ADDED]: RecorderExtensionEndpoint;\n  [Events.PLUGIN_REMOVED]: RecorderExtensionEndpoint;\n  [Events.VIEW_REGISTERED]: ViewDescriptor;\n  [Events.SHOW_VIEW_REQUESTED]: ViewDescriptor;\n}\n"],
  "mappings": "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",
  "names": ["ExtensionPanel", "themeName", "ExtensionSidebarPane", "UI", "Common", "SDK", "UI", "Bindings", "frame"]
}
