{"version":3,"file":"LanguageExtensionEndpoint.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/extensions/LanguageExtensionEndpoint.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport * as Extensions from './extensions.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\nfor (const allowFileAccess of [true, false]) {\n  describe(`LanguageExtensionEndpoint ${allowFileAccess ? 'with' : 'without'} file access`, () => {\n    let endpoint: Extensions.LanguageExtensionEndpoint.LanguageExtensionEndpoint;\n    beforeEach(() => {\n      const channel = new MessageChannel();\n      endpoint = new Extensions.LanguageExtensionEndpoint.LanguageExtensionEndpoint(\n          allowFileAccess, '', '', {language: 'lang', symbol_types: [Protocol.Debugger.DebugSymbolsType.SourceMap]},\n          channel.port1);\n    });\n\n    it('canAccessURL respects allowFileAccess correctly', () => {\n      assert.isTrue(endpoint.canAccessURL('http://example.com'));\n      assert.strictEqual(endpoint.canAccessURL('file:///file'), allowFileAccess);\n    });\n\n    it('handleScript respects allowFileAccess correctly', () => {\n      const script = sinon.createStubInstance(SDK.Script.Script);\n      script.debugSymbols = {type: Protocol.Debugger.DebugSymbolsType.SourceMap};\n      script.scriptLanguage.returns('lang');\n\n      script.contentURL.returns(urlString`file:///file`);\n      assert.strictEqual(endpoint.handleScript(script), allowFileAccess);\n      script.contentURL.returns(urlString`http://example.com`);\n      assert.isTrue(endpoint.handleScript(script));\n\n      script.hasSourceURL = true;\n      script.sourceURL = urlString`file:///file`;\n      assert.strictEqual(endpoint.handleScript(script), allowFileAccess);\n      script.sourceURL = urlString`http://example.com`;\n      assert.isTrue(endpoint.handleScript(script));\n\n      script.debugSymbols.externalURL = 'file:///file';\n      assert.strictEqual(endpoint.handleScript(script), allowFileAccess);\n      script.debugSymbols.externalURL = 'http://example.com';\n      assert.isTrue(endpoint.handleScript(script));\n    });\n\n    it('addRawModule respects allowFileAccess correctly', async () => {\n      const endpointProxyStub = sinon.stub(Extensions.ExtensionEndpoint.ExtensionEndpoint.prototype, 'sendRequest');\n      endpointProxyStub.resolves([]);\n      await endpoint.addRawModule('', 'file:///file', {url: 'http://example.com'});\n      assert.strictEqual(endpointProxyStub.calledOnce, allowFileAccess);\n      await endpoint.addRawModule('', 'http://example.com', {url: 'file:///file'});\n      assert.strictEqual(endpointProxyStub.calledTwice, allowFileAccess);\n      await endpoint.addRawModule('', 'http://example.com', {url: 'http://example.com'});\n      assert.lengthOf(endpointProxyStub.getCalls(), allowFileAccess ? 3 : 1);\n      await endpoint.addRawModule('', '', {url: 'http://example.com'});\n      assert.lengthOf(endpointProxyStub.getCalls(), allowFileAccess ? 4 : 2);\n      await endpoint.addRawModule('', 'wasm.debug.wasm', {url: 'http://example.com'});\n      assert.lengthOf(endpointProxyStub.getCalls(), allowFileAccess ? 5 : 3);\n    });\n  });\n}\n"]}