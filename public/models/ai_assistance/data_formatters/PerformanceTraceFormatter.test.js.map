{"version":3,"file":"PerformanceTraceFormatter.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/ai_assistance/data_formatters/PerformanceTraceFormatter.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {SnapshotTester} from '../../../testing/SnapshotTester.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport {AgentFocus, AICallTree, PerformanceTraceFormatter} from '../ai_assistance.js';\n\nasync function createFormatter(context: Mocha.Context|Mocha.Suite|null, name: string):\n    Promise<{formatter: PerformanceTraceFormatter, parsedTrace: Trace.TraceModel.ParsedTrace}> {\n  const parsedTrace = await TraceLoader.traceEngine(context, name);\n  assert.isOk(parsedTrace.insights);\n  const focus = AgentFocus.fromParsedTrace(parsedTrace);\n  const formatter = new PerformanceTraceFormatter(focus);\n  return {formatter, parsedTrace};\n}\n\ndescribeWithEnvironment('PerformanceTraceFormatter', () => {\n  let snapshotTester: SnapshotTester;\n  before(async () => {\n    snapshotTester = new SnapshotTester(import.meta);\n    await snapshotTester.load();\n  });\n\n  after(async () => {\n    await snapshotTester.finish();\n  });\n\n  describe('formatTraceSummary', () => {\n    it('web-dev.json.gz', async function() {\n      const {formatter} = await createFormatter(this, 'web-dev.json.gz');\n      const output = formatter.formatTraceSummary();\n      snapshotTester.assert(this, output);\n    });\n\n    it('yahoo-news.json.gz', async function() {\n      const {formatter} = await createFormatter(this, 'yahoo-news.json.gz');\n      const output = formatter.formatTraceSummary();\n      snapshotTester.assert(this, output);\n    });\n\n    it('deals with CrUX manager errors', async function() {\n      const {formatter} = await createFormatter(this, 'image-delivery.json.gz');\n      sinon.stub(CrUXManager.CrUXManager, 'instance').callsFake(() => {\n        throw new Error('something went wrong with CrUX Manager');\n      });\n      const output = formatter.formatTraceSummary();\n      snapshotTester.assert(this, output);\n    });\n\n    // This one has field data.\n    it('image-delivery.json.gz', async function() {\n      const {formatter} = await createFormatter(this, 'image-delivery.json.gz');\n      const output = formatter.formatTraceSummary();\n      snapshotTester.assert(this, output);\n    });\n\n    it('includes INP insight when there is no navigation', async function() {\n      const {formatter} = await createFormatter(this, 'slow-interaction-button-click.json.gz');\n      const output = formatter.formatTraceSummary();\n      assert.include(output, 'INP: 139 ms');\n      assert.include(output, 'insight name: INPBreakdown');\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  it('formatCriticalRequests', async function() {\n    const {formatter} = await createFormatter(this, 'render-blocking-requests.json.gz');\n    const output = formatter.formatCriticalRequests();\n    snapshotTester.assert(this, output);\n  });\n\n  it('formatLongestTasks', async function() {\n    const {formatter} = await createFormatter(this, 'long-task-from-worker-thread.json.gz');\n    const output = formatter.formatLongestTasks();\n    snapshotTester.assert(this, output);\n  });\n\n  it('formatMainThreadBottomUpSummary', async function() {\n    const {formatter} = await createFormatter(this, 'yahoo-news.json.gz');\n    const output = formatter.formatMainThreadBottomUpSummary();\n    snapshotTester.assert(this, output);\n  });\n\n  it('formatThirdPartySummary', async function() {\n    const {formatter} = await createFormatter(this, 'yahoo-news.json.gz');\n    const output = formatter.formatThirdPartySummary();\n    snapshotTester.assert(this, output);\n  });\n\n  it('formatMainThreadTrackSummary', async function() {\n    const {formatter, parsedTrace} = await createFormatter(this, 'yahoo-news.json.gz');\n    const min = parsedTrace.data.Meta.traceBounds.min;\n    const max =\n        parsedTrace.data.Meta.traceBounds.min + parsedTrace.data.Meta.traceBounds.range / 2 as Trace.Types.Timing.Micro;\n    const bounds = Trace.Helpers.Timing.traceWindowFromMicroSeconds(min, max);\n    const output = formatter.formatMainThreadTrackSummary(bounds);\n    snapshotTester.assert(this, output);\n  });\n\n  it('formatNetworkTrackSummary', async function() {\n    const {formatter, parsedTrace} = await createFormatter(this, 'yahoo-news.json.gz');\n    // Just check the first 300 ms.\n    const min = parsedTrace.data.Meta.traceBounds.min;\n    const max = (parsedTrace.data.Meta.traceBounds.min +\n                 Trace.Helpers.Timing.milliToMicro(Trace.Types.Timing.Milli(300))) as Trace.Types.Timing.Micro;\n    const bounds = Trace.Helpers.Timing.traceWindowFromMicroSeconds(min, max);\n    const output = formatter.formatNetworkTrackSummary(bounds);\n    snapshotTester.assert(this, output);\n  });\n\n  it('formatCallTree', async function() {\n    const {formatter, parsedTrace} = await createFormatter(this, 'long-task-from-worker-thread.json.gz');\n    const event = new Trace.EventsSerializer.EventsSerializer().eventForKey('r-62', parsedTrace);\n    const tree = AICallTree.fromEvent(event, parsedTrace);\n    assert.exists(tree);\n    const output = formatter.formatCallTree(tree);\n    snapshotTester.assert(this, output);\n  });\n\n  describe('formatNetworkRequests', () => {\n    it('formats network requests that have redirects', async function() {\n      const {formatter, parsedTrace} = await createFormatter(this, 'bad-document-request-latency.json.gz');\n      const requestUrl = 'http://localhost:3000/redirect3';\n      const request = parsedTrace.data.NetworkRequests.byTime.find(r => r.args.data.url === requestUrl);\n      assert.isOk(request);\n      const output = formatter.formatNetworkRequests([request], {verbose: true});\n      snapshotTester.assert(this, output);\n    });\n\n    it('formats network requests in verbose mode', async function() {\n      const {formatter, parsedTrace} = await createFormatter(this, 'lcp-images.json.gz');\n      const requestUrl = 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@1,800';\n      const request = parsedTrace.data.NetworkRequests.byTime.find(r => r.args.data.url === requestUrl);\n      assert.isOk(request);\n      const output = formatter.formatNetworkRequests([request], {verbose: true});\n      snapshotTester.assert(this, output);\n    });\n\n    it('defaults to verbose mode when 1 request and verbose option is not defined', async function() {\n      const {formatter, parsedTrace} = await createFormatter(this, 'lcp-images.json.gz');\n      const requestUrl = 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@1,800';\n      const request = parsedTrace.data.NetworkRequests.byTime.find(r => r.args.data.url === requestUrl);\n      assert.isOk(request);\n      const output = formatter.formatNetworkRequests([request]);\n      snapshotTester.assert(this, output);\n    });\n\n    it('formats in compressed mode if a request is duplicated in the array', async function() {\n      const {formatter, parsedTrace} = await createFormatter(this, 'bad-document-request-latency.json.gz');\n      const requests = parsedTrace.data.NetworkRequests.byTime;\n      // Duplicate request so that the compressed format is used\n      const output = formatter.formatNetworkRequests([requests[0], requests[0]]);\n      snapshotTester.assert(this, output);\n    });\n\n    it('correctly formats an initiator chain for network-requests-initiators trace', async function() {\n      const {formatter, parsedTrace} = await createFormatter(this, 'network-requests-initiators.json.gz');\n      const request = parsedTrace.data.NetworkRequests.byTime;\n      assert.isOk(request);\n      const output = formatter.formatNetworkRequests(request);\n      snapshotTester.assert(this, output);\n    });\n  });\n});\n"]}