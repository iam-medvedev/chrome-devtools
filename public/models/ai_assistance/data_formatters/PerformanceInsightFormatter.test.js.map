{"version":3,"file":"PerformanceInsightFormatter.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/ai_assistance/data_formatters/PerformanceInsightFormatter.test.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,uBAAuB,EAAC,MAAM,wCAAwC,CAAC;AAC/E,OAAO,EAAC,eAAe,EAAE,iBAAiB,EAAC,MAAM,oCAAoC,CAAC;AACtF,OAAO,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAClE,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAC5D,OAAO,EAAC,2BAA2B,EAAE,mBAAmB,EAAC,MAAM,qBAAqB,CAAC;AAErF,uBAAuB,CAAC,6BAA6B,EAAE,GAAG,EAAE;IAC1D,IAAI,cAA8B,CAAC;IACnC,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,cAAc,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACjD,MAAM,cAAc,CAAC,IAAI,EAAE,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,KAAK,IAAI,EAAE;QACf,MAAM,cAAc,CAAC,MAAM,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,gCAAgC,EAAE,KAAK;YACxC,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACvF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,cAAc,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAClF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAChC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mFAAmF,EAAE,KAAK;YAC3F,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;YAChF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,cAAc,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAElF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK;QAC3D,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;QACvE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;QAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,cAAc,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAElF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;QACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACxC,EAAE,CAAC,wDAAwD,EAAE,KAAK;YAChE,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,sCAAsC,CAAC,CAAC;YAChG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,gBAAgB,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACpF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK;YACxC,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,kCAAkC,CAAC,CAAC;YAC5F,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,gBAAgB,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACpF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACrC,EAAE,CAAC,gCAAgC,EAAE,KAAK;YACxC,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACvF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,cAAc,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAElF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YAEzC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAChC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACxC,EAAE,CAAC,gCAAgC,EAAE,KAAK;YACxC,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,sCAAsC,CAAC,CAAC;YAChG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,iBAAiB,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAErF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YAEzC,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,EAAE,eAAe,CAAC;YAC9C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAErB,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE;QACnB,EAAE,CAAC,gCAAgC,EAAE,KAAK;YACxC,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,mCAAmC,CAAC,CAAC;YAC7F,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,aAAa,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACjF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,gCAAgC,EAAE,KAAK;YACxC,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,gCAAgC,CAAC,CAAC;YAC1F,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,OAAO,GAAG,iBAAiB,CAAC,cAAc,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;YACxE,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;QAC1B,EAAE,CAAC,uEAAuE,EAAE,KAAK;YAC/E,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACvF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,YAAY,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAChF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oEAAoE,EAAE,KAAK;YAC5E,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;YAC3E,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,YAAY,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAChF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,EAAE,CAAC,8CAA8C,EAAE,KAAK;YACtD,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,sCAAsC,CAAC,CAAC;YAChG,MAAM,UAAU,GAAG,iCAAiC,CAAC;YACrD,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC;YAClG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,MAAM,MAAM,GAAG,mBAAmB,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,EAAE,WAAW,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YAC5F,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK;YAClD,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;YAC9E,MAAM,UAAU,GAAG,kEAAkE,CAAC;YACtF,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC;YAClG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,MAAM,MAAM,GAAG,mBAAmB,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,EAAE,WAAW,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YAC5F,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2EAA2E,EAAE,KAAK;YACnF,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;YAC9E,MAAM,UAAU,GAAG,kEAAkE,CAAC;YACtF,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC;YAClG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,MAAM,MAAM,GAAG,mBAAmB,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC;YAC3E,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oEAAoE,EAAE,KAAK;YAC5E,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,sCAAsC,CAAC,CAAC;YAChG,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YACzD,0DAA0D;YAC1D,MAAM,MAAM,GAAG,mBAAmB,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YAC5F,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4EAA4E,EAAE,KAAK;YACpF,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,qCAAqC,CAAC,CAAC;YAC/F,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YACxD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,MAAM,MAAM,GAAG,mBAAmB,CAAC,eAAe,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YACzE,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,EAAE,CAAC,gDAAgD,EAAE,KAAK;YACxD,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;YACrF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,SAAS,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC7E,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK;YAC3D,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;YAC5E,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,SAAS,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC7E,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACrC,EAAE,CAAC,gCAAgC,EAAE,KAAK;YACxC,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;YAC3E,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,sBAAsB,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC1F,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK;YACnE,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACvF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,sBAAsB,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC1F,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACjC,EAAE,CAAC,8EAA8E,EAAE,KAAK;YACtF,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACvF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,kBAAkB,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACtF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uEAAuE,EAAE,KAAK;YAC/E,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;YAC9E,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,kBAAkB,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACtF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;QAC3B,EAAE,CAAC,gDAAgD,EAAE,KAAK;YACxD,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;YACrF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,aAAa,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACjF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0EAA0E,EAAE,KAAK;YAClF,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;YAChF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,aAAa,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACjF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,qEAAqE,EAAE,KAAK;YAC7E,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACvF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,eAAe,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACnF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4EAA4E,EAAE,KAAK;YACpF,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,wBAAwB,CAAC,CAAC;YAClF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,eAAe,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACnF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,EAAE,CAAC,gDAAgD,EAAE,KAAK;YACxD,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;YACrF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,cAAc,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAClF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6FAA6F,EAAE,KAAK;YACrG,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,uBAAuB,CAAC,CAAC;YACjF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,cAAc,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAClF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACrC,EAAE,CAAC,gDAAgD,EAAE,KAAK;YACxD,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACvF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,uBAAuB,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC3F,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6FAA6F,EAAE,KAAK;YACrG,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACvF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,uBAAuB,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC3F,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,EAAE,CAAC,gDAAgD,EAAE,KAAK;YACxD,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;YACrF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,iBAAiB,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACrF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6DAA6D,EAAE,KAAK;YACrE,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,wBAAwB,CAAC,CAAC;YAClF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,iBAAiB,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACrF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,EAAE,CAAC,gDAAgD,EAAE,KAAK;YACxD,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;YACrF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,cAAc,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAClF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK;YAChD,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACvF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,cAAc,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAClF,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;QACrB,EAAE,CAAC,gDAAgD,EAAE,KAAK;YACxD,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;YACrF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,OAAO,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC3E,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK;YAC/D,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;YAC9E,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,OAAO,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC3E,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QACxB,EAAE,CAAC,gDAAgD,EAAE,KAAK;YACxD,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,wBAAwB,CAAC,CAAC;YAClF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,UAAU,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC9E,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oEAAoE,EAAE,KAAK;YAC5E,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;YACrF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,iBAAiB,CAAC,UAAU,EAAE,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC9E,MAAM,SAAS,GAAG,IAAI,2BAA2B,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACxE,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC;YACzC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {getFirstOrError, getInsightOrError} from '../../../testing/InsightHelpers.js';\nimport {SnapshotTester} from '../../../testing/SnapshotTester.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport {PerformanceInsightFormatter, TraceEventFormatter} from '../ai_assistance.js';\n\ndescribeWithEnvironment('PerformanceInsightFormatter', () => {\n  let snapshotTester: SnapshotTester;\n  before(async () => {\n    snapshotTester = new SnapshotTester(import.meta);\n    await snapshotTester.load();\n  });\n\n  after(async () => {\n    await snapshotTester.finish();\n  });\n\n  describe('LCP breakdown', () => {\n    it('serializes the correct details', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('LCPBreakdown', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      assert.isOk(insight.lcpRequest);\n      snapshotTester.assert(this, output);\n    });\n\n    it('formats correctly when the LCP is text based and has no load delay or time phases', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'lcp-web-font.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('LCPBreakdown', parsedTrace.insights, firstNav);\n\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  it('formats correctly when the LCP image has nodeName', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'dpr.json.gz');\n    assert.isOk(parsedTrace.insights);\n    const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n    const insight = getInsightOrError('LCPBreakdown', parsedTrace.insights, firstNav);\n\n    const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n    const output = formatter.formatInsight();\n    snapshotTester.assert(this, output);\n  });\n\n  describe('Render blocking requests', () => {\n    it('tells the LLM if there are no render blocking requests', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'bad-document-request-latency.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('RenderBlocking', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'render-blocking-requests.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('RenderBlocking', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('LCP Request discovery', () => {\n    it('serializes the correct details', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'lcp-discovery-delay.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('LCPDiscovery', parsedTrace.insights, firstNav);\n\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n\n      assert.isOk(insight.lcpRequest);\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('Document request latency', () => {\n    it('serializes the correct details', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'bad-document-request-latency.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('DocumentLatency', parsedTrace.insights, firstNav);\n\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n\n      const request = insight.data?.documentRequest;\n      assert.isOk(request);\n\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('CLS', () => {\n    it('serializes the correct details', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'layout-shifts-root-causes.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('CLSCulprits', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('INP breakdown', () => {\n    it('serializes the correct details', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'one-second-interaction.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const insight = getInsightOrError('INPBreakdown', parsedTrace.insights);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('ModernHTTP', () => {\n    it('serializes the correct details when no requests are using legacy http', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('ModernHTTP', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details when requests are using legacy http', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'http1.1.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('ModernHTTP', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('Formatting TraceEvents', () => {\n    it('formats network requests that have redirects', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'bad-document-request-latency.json.gz');\n      const requestUrl = 'http://localhost:3000/redirect3';\n      const request = parsedTrace.data.NetworkRequests.byTime.find(r => r.args.data.url === requestUrl);\n      assert.isOk(request);\n      const output = TraceEventFormatter.networkRequests([request], parsedTrace, {verbose: true});\n      snapshotTester.assert(this, output);\n    });\n\n    it('formats network requests in verbose mode', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'lcp-images.json.gz');\n      const requestUrl = 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@1,800';\n      const request = parsedTrace.data.NetworkRequests.byTime.find(r => r.args.data.url === requestUrl);\n      assert.isOk(request);\n      const output = TraceEventFormatter.networkRequests([request], parsedTrace, {verbose: true});\n      snapshotTester.assert(this, output);\n    });\n\n    it('defaults to verbose mode when 1 request and verbose option is not defined', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'lcp-images.json.gz');\n      const requestUrl = 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@1,800';\n      const request = parsedTrace.data.NetworkRequests.byTime.find(r => r.args.data.url === requestUrl);\n      assert.isOk(request);\n      const output = TraceEventFormatter.networkRequests([request], parsedTrace);\n      snapshotTester.assert(this, output);\n    });\n\n    it('formats in compressed mode if a request is duplicated in the array', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'bad-document-request-latency.json.gz');\n      const requests = parsedTrace.data.NetworkRequests.byTime;\n      // Duplicate request so that the compressed format is used\n      const output = TraceEventFormatter.networkRequests([requests[0], requests[0]], parsedTrace);\n      snapshotTester.assert(this, output);\n    });\n\n    it('correctly formats an initiator chain for network-requests-initiators trace', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'network-requests-initiators.json.gz');\n      const request = parsedTrace.data.NetworkRequests.byTime;\n      assert.isOk(request);\n      const output = TraceEventFormatter.networkRequests(request, parsedTrace);\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('DomSize', () => {\n    it('serializes correctly when there are no results', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'simple-js-program.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('DOMSize', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details showing DOM issues', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'dom-size.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('DOMSize', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('Duplicated javascript', () => {\n    it('serializes the correct details', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'dupe-js.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('DuplicatedJavaScript', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes no details if there is no duplicate javascript', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('DuplicatedJavaScript', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('Legacy JavaScript', () => {\n    it('serializes the correct details when there is no legacy javascript in modules', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('LegacyJavaScript', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details when modules contain legacy javascript', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'yahoo-news.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('LegacyJavaScript', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('FontDisplay', () => {\n    it('serializes correctly when there are no results', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'simple-js-program.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('FontDisplay', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details when problems are found with font display', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'font-display.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('FontDisplay', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('ImageDelivery', () => {\n    it('serializes the correct details when there are no optimizable images', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('ImageDelivery', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details when there are images that can be optimized', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'image-delivery.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('ImageDelivery', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('ForcedReflow', () => {\n    it('serializes correctly when there are no results', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'simple-js-program.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('ForcedReflow', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details when there are problems found in the network dependency tree', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'forced-reflow.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('ForcedReflow', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('NetworkDependencyTree', () => {\n    it('serializes correctly when there are no results', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('NetworkDependencyTree', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details when there are problems found in the network dependency tree', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'lcp-multiple-frames.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('NetworkDependencyTree', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('SlowCssSelector', () => {\n    it('serializes correctly when there are no results', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'simple-js-program.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('SlowCSSSelector', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details when CSS selectors are found', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'selector-stats.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('SlowCSSSelector', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('ThirdParties', () => {\n    it('serializes correctly when there are no results', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'simple-js-program.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('ThirdParties', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes 3rd party scripts correctly', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('ThirdParties', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('Cache', () => {\n    it('serializes correctly when there are no results', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'simple-js-program.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('Cache', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details showing cache problems', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'lcp-images.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('Cache', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('Viewport', () => {\n    it('serializes correctly when there are no results', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'image-delivery.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('Viewport', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details showing viewport problems on mobile', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'simple-js-program.json.gz');\n      assert.isOk(parsedTrace.insights);\n      const firstNav = getFirstOrError(parsedTrace.data.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('Viewport', parsedTrace.insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n});\n"]}