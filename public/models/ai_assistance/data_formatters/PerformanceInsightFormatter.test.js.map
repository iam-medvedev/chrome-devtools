{"version":3,"file":"PerformanceInsightFormatter.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/ai_assistance/data_formatters/PerformanceInsightFormatter.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {getFirstOrError, getInsightOrError} from '../../../testing/InsightHelpers.js';\nimport {SnapshotTester} from '../../../testing/SnapshotTester.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport {PerformanceInsightFormatter, TraceEventFormatter} from '../ai_assistance.js';\n\ndescribeWithEnvironment('PerformanceInsightFormatter', () => {\n  let snapshotTester: SnapshotTester;\n  before(async () => {\n    snapshotTester = new SnapshotTester(import.meta);\n    await snapshotTester.load();\n  });\n\n  after(async () => {\n    await snapshotTester.finish();\n  });\n\n  describe('LCP breakdown', () => {\n    it('serializes the correct details', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('LCPBreakdown', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      assert.isOk(insight.lcpRequest);\n      snapshotTester.assert(this, output);\n    });\n\n    it('formats correctly when the LCP is text based and has no load delay or time phases', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'lcp-web-font.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('LCPBreakdown', insights, firstNav);\n\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  it('formats correctly when the LCP image has nodeName', async function() {\n    const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'dpr.json.gz');\n    assert.isOk(insights);\n    const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n    const insight = getInsightOrError('LCPBreakdown', insights, firstNav);\n\n    const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n    const output = formatter.formatInsight();\n    snapshotTester.assert(this, output);\n  });\n\n  describe('Render blocking requests', () => {\n    it('tells the LLM if there are no render blocking requests', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'bad-document-request-latency.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('RenderBlocking', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'render-blocking-requests.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('RenderBlocking', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('LCP Request discovery', () => {\n    it('serializes the correct details', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'lcp-discovery-delay.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('LCPDiscovery', insights, firstNav);\n\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n\n      assert.isOk(insight.lcpRequest);\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('Document request latency', () => {\n    it('serializes the correct details', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'bad-document-request-latency.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('DocumentLatency', insights, firstNav);\n\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n\n      const request = insight.data?.documentRequest;\n      assert.isOk(request);\n\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('CLS', () => {\n    it('serializes the correct details', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'layout-shifts-root-causes.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('CLSCulprits', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('INP breakdown', () => {\n    it('serializes the correct details', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'one-second-interaction.json.gz');\n      assert.isOk(insights);\n      const insight = getInsightOrError('INPBreakdown', insights);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('ModernHTTP', () => {\n    it('serializes the correct details when no requests are using legacy http', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('ModernHTTP', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details when requests are using legacy http', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'http1.1.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('ModernHTTP', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('Formatting TraceEvents', () => {\n    it('formats network requests that have redirects', async function() {\n      const {parsedTrace} = await TraceLoader.traceEngine(this, 'bad-document-request-latency.json.gz');\n      const requestUrl = 'http://localhost:3000/redirect3';\n      const request = parsedTrace.NetworkRequests.byTime.find(r => r.args.data.url === requestUrl);\n      assert.isOk(request);\n      const output = TraceEventFormatter.networkRequests([request], parsedTrace, {verbose: true});\n      assert.include(output, `Redirects:\n#### Redirect 1: http://localhost:3000/\n- Start time: 3.04 ms\n- Duration: 512.02 ms\n#### Redirect 2: http://localhost:3000/redirect1\n- Start time: 515.06 ms\n- Duration: 505.67 ms\n#### Redirect 3: http://localhost:3000/redirect2\n- Start time: 1,020.73 ms\n- Duration: 507.09 ms\n`);\n    });\n\n    it('formats network requests in verbose mode', async function() {\n      const {parsedTrace} = await TraceLoader.traceEngine(this, 'lcp-images.json.gz');\n      const requestUrl = 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@1,800';\n      const request = parsedTrace.NetworkRequests.byTime.find(r => r.args.data.url === requestUrl);\n      assert.isOk(request);\n      const output = TraceEventFormatter.networkRequests([request], parsedTrace, {verbose: true});\n      snapshotTester.assert(this, output);\n    });\n\n    it('defaults to verbose mode when 1 request and verbose option is not defined', async function() {\n      const {parsedTrace} = await TraceLoader.traceEngine(this, 'lcp-images.json.gz');\n      const requestUrl = 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@1,800';\n      const request = parsedTrace.NetworkRequests.byTime.find(r => r.args.data.url === requestUrl);\n      assert.isOk(request);\n      const output = TraceEventFormatter.networkRequests([request], parsedTrace);\n      snapshotTester.assert(this, output);\n    });\n\n    it('getNetworkRequestsNewFormat correctly formats network requests for bad request latency trace', async function() {\n      const {parsedTrace} = await TraceLoader.traceEngine(this, 'bad-document-request-latency.json.gz');\n      const requests = parsedTrace.NetworkRequests.byTime;\n      // Duplicate request so that the compressed format is used\n      const output = TraceEventFormatter.networkRequests([requests[0], requests[0]], parsedTrace);\n      const urlMapIndex = output.indexOf('allUrls = ');\n      assert.isAbove(urlMapIndex, -1, 'Could not find url map in output');\n      const dataWithUrlMap = output.substring(urlMapIndex);\n      const [urlMapString, requestData] = dataWithUrlMap.split('\\n\\n');\n\n      assert.strictEqual(\n          urlMapString,\n          'allUrls = [0: http://localhost:3000/redirect3, 1: http://localhost:3000/, 2: http://localhost:3000/redirect1, 3: http://localhost:3000/redirect2]');\n\n      const parts = requestData.split(';');\n      // Join the last field because it is a list of headers that might contain a semicolon\n      const fields = [...parts.slice(0, 18), parts.slice(18).join(';')];\n\n      assert.strictEqual(fields[0], '0', 'urlIndex');\n      assert.strictEqual(fields[1], '3.04 ms', 'queuedTime');\n      assert.strictEqual(fields[2], '1,529.47 ms', 'requestSentTime');\n      assert.strictEqual(fields[3], '3,532.63 ms', 'downloadCompleteTime');\n      assert.strictEqual(fields[4], '3,537.75 ms', 'processingCompleteTime');\n      assert.strictEqual(fields[5], '3,534.71 ms', 'totalDuration');\n      assert.strictEqual(fields[6], '0.13 ms', 'downloadDuration');\n      assert.strictEqual(fields[7], '5.12 ms', 'mainThreadProcessingDuration');\n      assert.strictEqual(fields[8], '200', 'statusCode');\n      assert.strictEqual(fields[9], 'text/html', 'mimeType');\n      assert.strictEqual(fields[10], 'VeryHigh', 'priority');\n      assert.strictEqual(fields[11], 'VeryHigh', 'initialPriority');\n      assert.strictEqual(fields[12], 'VeryHigh', 'finalPriority');\n      assert.strictEqual(fields[13], 'f', 'renderBlocking');\n      assert.strictEqual(fields[14], 'http/1.1', 'protocol');\n      assert.strictEqual(fields[15], 'f', 'fromServiceWorker');\n      assert.strictEqual(fields[16], '', 'initiators');\n      assert.strictEqual(\n          fields[17], '[[1|3.04 ms|512.02 ms],[2|515.06 ms|505.67 ms],[3|1,020.73 ms|507.09 ms]]', 'redirects');\n      assert.strictEqual(\n          fields[18],\n          '[Transfer-Encoding: chunked|Keep-Alive: <redacted>|Date: Tue, 11 Mar 2025 10:19:12 GMT|Content-Type: text/html|Connection: keep-alive]\\n0;3.04 ms;1,529.47 ms;3,532.63 ms;3,537.75 ms;3,534.71 ms;0.13 ms;5.12 ms;200;text/html;VeryHigh;VeryHigh;VeryHigh;f;http/1.1;f;;[[1|3.04 ms|512.02 ms],[2|515.06 ms|505.67 ms],[3|1,020.73 ms|507.09 ms]];[Transfer-Encoding: chunked|Keep-Alive: <redacted>|Date: Tue, 11 Mar 2025 10:19:12 GMT|Content-Type: text/html|Connection: keep-alive]',\n          'responseHeaders');\n    });\n\n    it('getNetworkRequestsNewFormat correctly formats network requests for lcp-images trace', async function() {\n      const {parsedTrace} = await TraceLoader.traceEngine(this, 'lcp-images.json.gz');\n      const request = parsedTrace.NetworkRequests.byTime;\n      assert.isOk(request);\n      const output = TraceEventFormatter.networkRequests(request, parsedTrace);\n      const urlMapIndex = output.indexOf('allUrls = ');\n      assert.isAbove(urlMapIndex, -1, 'Could not find url map in output');\n      const dataWithUrlMap = output.substring(urlMapIndex);\n      const [urlMapString, requestData] = dataWithUrlMap.split('\\n\\n');\n      assert.strictEqual(\n          urlMapString,\n          'allUrls = [0: https://chromedevtools.github.io/performance-stories/lcp-large-image/index.html, 1: https://fonts.googleapis.com/css2?family=Poppins:ital,wght@1,800, 2: https://chromedevtools.github.io/performance-stories/lcp-large-image/app.css, 3: https://via.placeholder.com/50.jpg, 4: https://via.placeholder.com/2000.jpg]');\n\n      const allRequests = requestData.split('\\n');\n      const parts = allRequests[1].split(';');\n      // Join the last field because it is a list of headers that might contain a semicolon\n      const fields = [...parts.slice(0, 18), parts.slice(18).join(';')];\n\n      assert.strictEqual(fields[0], '1', 'urlIndex');\n      assert.strictEqual(fields[1], '37.62 ms', 'queuedTime');\n      assert.strictEqual(fields[2], '41.71 ms', 'requestSentTime');\n      assert.strictEqual(fields[3], '48.04 ms', 'downloadCompleteTime');\n      assert.strictEqual(fields[4], '51.55 ms', 'processingCompleteTime');\n      assert.strictEqual(fields[5], '13.93 ms', 'totalDuration');\n      assert.strictEqual(fields[6], '4.79 ms', 'downloadDuration');\n      assert.strictEqual(fields[7], '3.51 ms', 'mainThreadProcessingDuration');\n      assert.strictEqual(fields[8], '200', 'statusCode');\n      assert.strictEqual(fields[9], 'text/css', 'mimeType');\n      assert.strictEqual(fields[10], 'VeryHigh', 'priority');\n      assert.strictEqual(fields[11], 'VeryHigh', 'initialPriority');\n      assert.strictEqual(fields[12], 'VeryHigh', 'finalPriority');\n      assert.strictEqual(fields[13], 't', 'renderBlocking');\n      assert.strictEqual(fields[14], 'unknown', 'protocol');\n      assert.strictEqual(fields[15], 'f', 'fromServiceWorker');\n      assert.strictEqual(fields[16], '0', 'initiators');\n      assert.strictEqual(fields[17], '[]', 'redirects');\n      assert.strictEqual(\n          fields[18],\n          '[date: Thu, 07 Mar 2024 21:17:02 GMT|content-encoding: gzip|x-content-type-options: nosniff|last-modified: Thu, 07 Mar 2024 21:17:02 GMT|server: ESF|cross-origin-opener-policy: <redacted>|x-frame-options: SAMEORIGIN|content-type: text/css; charset=utf-8|access-control-allow-origin: *|cache-control: private, max-age=86400, stale-while-revalidate=604800|cross-origin-resource-policy: <redacted>|timing-allow-origin: *|link: <https://fonts.gstatic.com>; rel=preconnect; crossorigin|x-xss-protection: 0|expires: Thu, 07 Mar 2024 21:17:02 GMT]',\n          'headers');\n    });\n\n    it('getNetworkRequestsNewFormat correctly formats an initiator chain for network-requests-initiators trace',\n       async function() {\n         const {parsedTrace} = await TraceLoader.traceEngine(this, 'network-requests-initiators.json.gz');\n         const request = parsedTrace.NetworkRequests.byTime;\n         assert.isOk(request);\n         const output = TraceEventFormatter.networkRequests(request, parsedTrace);\n         const urlMapIndex = output.indexOf('allUrls = ');\n         assert.isAbove(urlMapIndex, -1, 'Could not find url map in output');\n         const dataWithUrlMap = output.substring(urlMapIndex);\n         const [urlMapString, requestData] = dataWithUrlMap.split('\\n\\n');\n         assert.strictEqual(\n             urlMapString,\n             'allUrls = [0: https://www.youtube.com/, 1: https://i.ytimg.com/generate_204, 2: https://www.youtube.com/s/desktop/28bb7000/jsbin/desktop_polymer.vflset/desktop_polymer.js, 3: https://www.youtube.com/s/desktop/28bb7000/jsbin/web-animations-next-lite.min.vflset/web-animations-next-lite.min.js, 4: https://www.youtube.com/s/desktop/28bb7000/jsbin/custom-elements-es5-adapter.vflset/custom-elements-es5-adapter.js, 5: https://www.youtube.com/s/desktop/28bb7000/jsbin/webcomponents-sd.vflset/webcomponents-sd.js, 6: https://www.youtube.com/s/desktop/28bb7000/jsbin/intersection-observer.min.vflset/intersection-observer.min.js, 7: https://www.youtube.com/s/desktop/28bb7000/jsbin/scheduler.vflset/scheduler.js, 8: https://www.youtube.com/s/desktop/28bb7000/jsbin/www-i18n-constants-en_US.vflset/www-i18n-constants.js, 9: https://www.youtube.com/s/desktop/28bb7000/jsbin/www-tampering.vflset/www-tampering.js, 10: https://www.youtube.com/s/desktop/28bb7000/jsbin/spf.vflset/spf.js, 11: https://www.youtube.com/s/desktop/28bb7000/jsbin/network.vflset/network.js, 12: https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&family=YouTube+Sans:wght@300..900&display=swap, 13: https://www.youtube.com/s/desktop/28bb7000/cssbin/www-main-desktop-home-page-skeleton.css, 14: https://www.youtube.com/s/desktop/28bb7000/cssbin/www-onepick.css, 15: https://www.youtube.com/s/_/ytmainappweb/_/ss/k=ytmainappweb.kevlar_base.YzCM3q0siy4.L.B1.O/am=ADA7AQ/d=0/br=1/rs=AGKMywG7cU8b38Gfv3WYn4_os7hoqR-TIw, 16: https://googleads.g.doubleclick.net/pagead/id?slf_rd=1, 17: https://googleads.g.doubleclick.net/pagead/id, 18: https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu4mxK.woff2, 19: https://www.youtube.com/s/search/audio/failure.mp3, 20: https://www.youtube.com/s/search/audio/no_input.mp3, 21: https://www.youtube.com/s/search/audio/open.mp3, 22: https://www.youtube.com/s/search/audio/success.mp3, 23: https://www.youtube.com/s/desktop/28bb7000/cssbin/www-main-desktop-watch-page-skeleton.css, 24: https://www.youtube.com/youtubei/v1/att/get?prettyPrint=false, 25: https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmWUlfBBc4.woff2, 26: https://fonts.gstatic.com/s/youtubesans/v30/Qw38ZQNGEDjaO2m6tqIqX5E-AVS5_rSejo46_PCTRspJ0OosolrBEJL3HO_T7fE.woff2, 27: https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fBBc4.woff2, 28: https://www.youtube.com/youtubei/v1/feedback?prettyPrint=false, 29: https://www.google.com/js/th/EirmVnnNlSgqRyHN1YLvHhRw11SWUqUPb76JYHphonQ.js, 30: https://www.youtube.com/manifest.webmanifest, 31: https://www.youtube.com/s/desktop/28bb7000/img/favicon.ico, 32: https://www.gstatic.com/youtube/img/branding/favicon/favicon_144x144.png, 33: https://www.youtube.com/s/player/5b22937f/player_ias.vflset/en_US/base.js, 34: https://www.youtube.com/s/player/5b22937f/www-player.css]');\n\n         const allRequests = requestData.split('\\n');\n         const parts = allRequests[24].split(';');\n         // Join the last field because it is a list of headers that might contain a semicolon\n         const fields = [...parts.slice(0, 18), parts.slice(18).join(';')];\n\n         assert.strictEqual(fields[16], '0,12', 'initiators');\n       });\n  });\n\n  describe('Duplicated javascript', () => {\n    it('serializes the correct details', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'dupe-js.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('DuplicatedJavaScript', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes no details if there is no duplicate javascript', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('DuplicatedJavaScript', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('Legacy JavaScript', () => {\n    it('serializes the correct details when there is no legacy javascript in modules', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('LegacyJavaScript', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details when modules contain legacy javascript', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'yahoo-news.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('LegacyJavaScript', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('ImageDelivery', () => {\n    it('serializes the correct details when there are no optimizable images', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('ImageDelivery', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details when there are images that can be optimized', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'image-delivery.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('ImageDelivery', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n\n  describe('NetworkDependencyTree', () => {\n    it('serializes correctly when there are no results', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('NetworkDependencyTree', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n\n    it('serializes the correct details when there are problems found in the network dependency tree', async function() {\n      const {parsedTrace, insights} = await TraceLoader.traceEngine(this, 'lcp-multiple-frames.json.gz');\n      assert.isOk(insights);\n      const firstNav = getFirstOrError(parsedTrace.Meta.navigationsByNavigationId.values());\n      const insight = getInsightOrError('NetworkDependencyTree', insights, firstNav);\n      const formatter = new PerformanceInsightFormatter(parsedTrace, insight);\n      const output = formatter.formatInsight();\n      snapshotTester.assert(this, output);\n    });\n  });\n});\n"]}