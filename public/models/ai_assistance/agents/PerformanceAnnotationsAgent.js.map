{"version":3,"file":"PerformanceAnnotationsAgent.js","sourceRoot":"","sources":["../../../../../../../front_end/models/ai_assistance/agents/PerformanceAnnotationsAgent.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Root from '../../../core/root/root.js';\nimport type * as TimelineUtils from '../../../panels/timeline/utils/utils.js';\n\nimport {AiAgent, type ContextResponse, type ConversationContext, type RequestOptions, ResponseType} from './AiAgent.js';\nimport {callTreePreamble, PerformanceTraceContext} from './PerformanceAgent.js';\n\nconst UIStringsNotTranslated = {\n  analyzingCallTree: 'Analyzing call tree',\n  /**\n   *@description Shown when the agent is investigating network activity\n   */\n} as const;\nconst lockedString = i18n.i18n.lockedString;\n\nexport class PerformanceAnnotationsAgent extends AiAgent<TimelineUtils.AIContext.AgentFocus> {\n  override preamble = callTreePreamble;\n\n  get clientFeature(): Host.AidaClient.ClientFeature {\n    return Host.AidaClient.ClientFeature.CHROME_PERFORMANCE_ANNOTATIONS_AGENT;\n  }\n\n  get userTier(): string|undefined {\n    return Root.Runtime.hostConfig.devToolsAiAssistancePerformanceAgent?.userTier;\n  }\n\n  get options(): RequestOptions {\n    const temperature = Root.Runtime.hostConfig.devToolsAiAssistancePerformanceAgent?.temperature;\n    const modelId = Root.Runtime.hostConfig.devToolsAiAssistancePerformanceAgent?.modelId;\n\n    return {\n      temperature,\n      modelId,\n    };\n  }\n\n  async *\n      handleContextDetails(context: ConversationContext<TimelineUtils.AIContext.AgentFocus>|null):\n          AsyncGenerator<ContextResponse, void, void> {\n    if (!context) {\n      return;\n    }\n\n    const focus = context.getItem();\n    if (focus.data.type !== 'call-tree') {\n      throw new Error('unexpected context');\n    }\n\n    const callTree = focus.data.callTree;\n\n    yield {\n      type: ResponseType.CONTEXT,\n      title: lockedString(UIStringsNotTranslated.analyzingCallTree),\n      details: [\n        {\n          title: 'Selected call tree',\n          text: callTree.serialize(),\n        },\n      ],\n    };\n  }\n\n  override async enhanceQuery(query: string, context: ConversationContext<TimelineUtils.AIContext.AgentFocus>|null):\n      Promise<string> {\n    if (!context) {\n      return query;\n    }\n\n    const focus = context.getItem();\n    if (focus.data.type !== 'call-tree') {\n      throw new Error('unexpected context');\n    }\n\n    const callTree = focus.data.callTree;\n    const contextString = callTree.serialize();\n    return `${contextString}\\n\\n# User request\\n\\n${query}`;\n  }\n\n  /**\n   * Used in the Performance panel to automatically generate a label for a selected entry.\n   */\n  async generateAIEntryLabel(callTree: TimelineUtils.AICallTree.AICallTree): Promise<string> {\n    const context = PerformanceTraceContext.fromCallTree(callTree);\n    const response = await Array.fromAsync(this.run(AI_LABEL_GENERATION_PROMPT, {selected: context}));\n    const lastResponse = response.at(-1);\n    if (lastResponse && lastResponse.type === ResponseType.ANSWER && lastResponse.complete === true) {\n      return lastResponse.text.trim();\n    }\n    throw new Error('Failed to generate AI entry label');\n  }\n}\n\nconst AI_LABEL_GENERATION_PROMPT = `## Instruction:\nGenerate a concise label (max 60 chars, single line) describing the *user-visible effect* of the selected call tree's activity, based solely on the provided call tree data.\n\n## Strict Constraints:\n- Output must be a single line of text.\n- Maximum 60 characters.\n- No full stops.\n- Focus on user impact, not internal operations.\n- Do not include the name of the selected event.\n- Do not make assumptions about when the activity happened.\n- Base the description only on the information present within the call tree data.\n- Prioritize brevity.\n- Only include third-party script names if their identification is highly confident.\n- Very important: Only output the 60 character label text, your response will be used in full to show to the user as an annotation in the timeline.\n`;\n"]}