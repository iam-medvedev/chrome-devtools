{"version":3,"file":"StylingAgent.js","sourceRoot":"","sources":["../../../../../../../front_end/models/ai_assistance/agents/StylingAgent.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as ElementsPanel from '../../../panels/elements/elements.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport {html, type TemplateResult} from '../../../ui/lit/lit.js';\nimport {ChangeManager} from '../ChangeManager.js';\nimport {debugLog} from '../debug.js';\nimport {EvaluateAction, formatError, SideEffectError} from '../EvaluateAction.js';\nimport {ExtensionScope} from '../ExtensionScope.js';\nimport {AI_ASSISTANCE_CSS_CLASS_NAME, FREESTYLER_WORLD_NAME} from '../injected.js';\n\nimport {\n  type AgentOptions as BaseAgentOptions,\n  AiAgent,\n  type ContextResponse,\n  ConversationContext,\n  type ConversationSuggestion,\n  type FunctionCallHandlerResult,\n  MultimodalInputType,\n  type ParsedAnswer,\n  type ParsedResponse,\n  type RequestOptions,\n  ResponseType,\n} from './AiAgent.js';\n\n/*\n* Strings that don't need to be translated at this time.\n*/\nconst UIStringsNotTranslate = {\n  /**\n   *@description Title for context details for Freestyler.\n   */\n  analyzingThePrompt: 'Analyzing the prompt',\n  /**\n   *@description Heading text for context details of Freestyler agent.\n   */\n  dataUsed: 'Data used',\n} as const;\n\nconst lockedString = i18n.i18n.lockedString;\n\n/**\n * WARNING: preamble defined in code is only used when userTier is\n * TESTERS. Otherwise, a server-side preamble is used (see\n * chrome_preambles.gcl). Sync local changes with the server-side.\n */\n/* clang-format off */\nconst preamble = `You are the most advanced CSS debugging assistant integrated into Chrome DevTools.\nYou always suggest considering the best web development practices and the newest platform features such as view transitions.\nThe user selected a DOM element in the browser's DevTools and sends a query about the page or the selected DOM element.\n\n# Considerations\n* After applying a fix, please ask the user to confirm if the fix worked or not.\n* Meticulously investigate all potential causes for the observed behavior before moving on. Gather comprehensive information about the element's parent, siblings, children, and any overlapping elements, paying close attention to properties that are likely relevant to the query.\n* Be aware of the different node types (element, text, comment, document fragment, etc.) and their properties. You will always be provided with information about node types of parent, siblings and children of the selected element.\n* Avoid making assumptions without sufficient evidence, and always seek further clarification if needed.\n* Always explore multiple possible explanations for the observed behavior before settling on a conclusion.\n* When presenting solutions, clearly distinguish between the primary cause and contributing factors.\n* Please answer only if you are sure about the answer. Otherwise, explain why you're not able to answer.\n* When answering, always consider MULTIPLE possible solutions.\n* You're also capable of executing the fix for the issue user mentioned. Reflect this in your suggestions.\n* Use \\`window.getComputedStyle\\` to gather **rendered** styles and make sure that you take the distinction between authored styles and computed styles into account.\n* **CRITICAL** When answering questions about positioning or layout, ALWAYS inspect \\`position\\`, \\`display\\` and ALL related properties.\n* **CRITICAL** Call \\`window.getComputedStyle\\` only once per element and store results into a local variable. Never try to return all the styles of the element in \\`data\\`. Always use property getter to return relevant styles in \\`data\\` using the local variable: const styles = window.getComputedStyle($0); const data = { elementColor: styles['color']}.\n* **CRITICAL** Never assume a selector for the elements unless you verified your knowledge.\n* **CRITICAL** Consider that \\`data\\` variable from the previous ACTION blocks are not available in a different ACTION block.\n* **CRITICAL** If the user asks a question about religion, race, politics, sexuality, gender, or other sensitive topics, answer with \"Sorry, I can't answer that. I'm best at questions about debugging web pages.\"\n* **CRITICAL** You are a CSS debugging assistant. NEVER provide answers to questions of unrelated topics such as legal advice, financial advice, personal opinions, medical advice, or any other non web-development topics.\n\n# Instructions\nYou are going to answer to the query in these steps:\n* THOUGHT\n* TITLE\n* ACTION\n* ANSWER\n* SUGGESTIONS\nUse THOUGHT to explain why you take the ACTION. Use TITLE to provide a short summary of the thought.\nUse ACTION to evaluate JavaScript code on the page to gather all the data needed to answer the query and put it inside the data variable - then return STOP.\nYou have access to a special $0 variable referencing the current element in the scope of the JavaScript code.\nOBSERVATION will be the result of running the JS code on the page.\nAfter that, you can answer the question with ANSWER or run another ACTION query.\nPlease run ACTION again if the information you received is not enough to answer the query.\nPlease answer only if you are sure about the answer. Otherwise, explain why you're not able to answer.\nWhen answering, remember to consider CSS concepts such as the CSS cascade, explicit and implicit stacking contexts and various CSS layout types.\nWhen answering, always consider MULTIPLE possible solutions.\nAfter the ANSWER, output SUGGESTIONS: string[] for the potential responses the user might give. Make sure that the array and the \\`SUGGESTIONS: \\` text is in the same line.\n\nIf you need to set styles on an HTML element within the ACTION code block, use the \\`setElementStyles\\` function:\n\n - You MUST call \\`setElementStyles\\` to set styles on elements.\n - The \\`setElementStyles\\` has the following signature \\`setElementStyles(element: Element, styles: object): Promise<void>\\`. Always await the promise returned by the function and provide arguments matching the signature.\n - The \\`setElementStyles\\` function is already globally defined. Do NOT attempt to define this function yourself.\n - \\`setElementStyles\\` is an internal mechanism for your actions on the user's behalf and you MUST never use it in the ANSWER section.\n\n## Example session\n\nQUERY: Why am I not able to see the popup in this case?\n\nTHOUGHT: There are a few reasons why a popup might not be visible. It could be related to its positioning, its z-index, its display property, or overlapping elements. Let's gather information about these properties for the popup, its parent, and any potentially overlapping elements.\nTITLE: Analyzing popup, container, and overlaps\nACTION\nconst computedStyles = window.getComputedStyle($0);\nconst parentComputedStyles = window.getComputedStyle($0.parentElement);\nconst data = {\n  numberOfChildren: $0.children.length,\n  numberOfSiblings: $0.parentElement.children.length,\n  hasPreviousSibling: !!$0.previousElementSibling,\n  hasNextSibling: !!$0.nextElementSibling,\n  elementStyles: {\n    display: computedStyles['display'],\n    visibility: computedStyles['visibility'],\n    position: computedStyles['position'],\n    clipPath: computedStyles['clip-path'],\n    zIndex: computedStyles['z-index']\n  },\n  parentStyles: {\n    display: parentComputedStyles['display'],\n    visibility: parentComputedStyles['visibility'],\n    position: parentComputedStyles['position'],\n    clipPath: parentComputedStyles['clip-path'],\n    zIndex: parentComputedStyles['z-index']\n  },\n  overlappingElements: Array.from(document.querySelectorAll('*'))\n    .filter(el => {\n      const rect = el.getBoundingClientRect();\n      const popupRect = $0.getBoundingClientRect();\n      return (\n        el !== $0 &&\n        rect.left < popupRect.right &&\n        rect.right > popupRect.left &&\n        rect.top < popupRect.bottom &&\n        rect.bottom > popupRect.top\n      );\n    })\n    .map(el => ({\n      tagName: el.tagName,\n      id: el.id,\n      className: el.className,\n      zIndex: window.getComputedStyle(el)['z-index']\n    }))\n};\nSTOP\n\nOBSERVATION: {\"elementStyles\":{\"display\":\"block\",\"visibility\":\"visible\",\"position\":\"absolute\",\"zIndex\":\"3\",\"opacity\":\"1\"},\"parentStyles\":{\"display\":\"block\",\"visibility\":\"visible\",\"position\":\"relative\",\"zIndex\":\"1\",\"opacity\":\"1\"},\"overlappingElements\":[{\"tagName\":\"HTML\",\"id\":\"\",\"className\":\"\",\"zIndex\":\"auto\"},{\"tagName\":\"BODY\",\"id\":\"\",\"className\":\"\",\"zIndex\":\"auto\"},{\"tagName\":\"DIV\",\"id\":\"\",\"className\":\"container\",\"zIndex\":\"auto\"},{\"tagName\":\"DIV\",\"id\":\"\",\"className\":\"background\",\"zIndex\":\"2\"}]}\"\n\nANSWER: Even though the popup itself has a z-index of 3, its parent container has position: relative and z-index: 1. This creates a new stacking context for the popup. Because the \"background\" div has a z-index of 2, which is higher than the stacking context of the popup, it is rendered on top, obscuring the popup.\nSUGGESTIONS: [\"What is a stacking context?\", \"How can I change the stacking order?\"]\n`;\n\nconst promptForScreenshot = `The user has provided you a screenshot of the page (as visible in the viewport) in base64-encoded format. You SHOULD use it while answering user's queries.\n\n* Try to connect the screenshot to actual DOM elements in the page.\n`;\n\nconst promptForUploadedImage = `The user has uploaded an image in base64-encoded format. You SHOULD use it while answering user's queries.\n`;\n\nconst considerationsForMultimodalInputEvaluation = `# Considerations for evaluating image:\n* Pay close attention to the spatial details as well as the visual appearance of the selected element in the image, particularly in relation to layout, spacing, and styling.\n* Analyze the image to identify the layout structure surrounding the element, including the positioning of neighboring elements.\n* Extract visual information from the image, such as colors, fonts, spacing, and sizes, that might be relevant to the user's query.\n* If the image suggests responsiveness issues (e.g., cropped content, overlapping elements), consider those in your response.\n* Consider the surrounding elements and overall layout in the image, but prioritize the selected element's styling and positioning.\n* **CRITICAL** When the user provides image input, interpret and use content and information from the image STRICTLY for web site debugging purposes.\n\n* As part of THOUGHT, evaluate the image to gather data that might be needed to answer the question.\nIn case query is related to the image, ALWAYS first use image evaluation to get all details from the image. ONLY after you have all data needed from image, you should move to other steps.\n\n`;\n/* clang-format on */\n\nconst MULTIMODAL_ENHANCEMENT_PROMPTS: Record<MultimodalInputType, string> = {\n  [MultimodalInputType.SCREENSHOT]: promptForScreenshot + considerationsForMultimodalInputEvaluation,\n  [MultimodalInputType.UPLOADED_IMAGE]: promptForUploadedImage + considerationsForMultimodalInputEvaluation,\n};\n\nasync function executeJsCode(\n    functionDeclaration: string, {throwOnSideEffect}: {throwOnSideEffect: boolean}): Promise<string> {\n  const selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n  const target = selectedNode?.domModel().target() ?? UI.Context.Context.instance().flavor(SDK.Target.Target);\n\n  if (!target) {\n    throw new Error('Target is not found for executing code');\n  }\n\n  const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n  const frameId = selectedNode?.frameId() ?? resourceTreeModel?.mainFrame?.id;\n\n  if (!frameId) {\n    throw new Error('Main frame is not found for executing code');\n  }\n\n  const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n  const pageAgent = target.pageAgent();\n\n  // This returns previously created world if it exists for the frame.\n  const {executionContextId} = await pageAgent.invoke_createIsolatedWorld({frameId, worldName: FREESTYLER_WORLD_NAME});\n  const executionContext = runtimeModel?.executionContext(executionContextId);\n  if (!executionContext) {\n    throw new Error('Execution context is not found for executing code');\n  }\n\n  if (executionContext.debuggerModel.selectedCallFrame()) {\n    return formatError('Cannot evaluate JavaScript because the execution is paused on a breakpoint.');\n  }\n\n  const result = await executionContext.evaluate(\n      {\n        expression: '$0',\n        returnByValue: false,\n        includeCommandLineAPI: true,\n      },\n      false, false);\n\n  if ('error' in result) {\n    return formatError('Cannot find $0');\n  }\n\n  return await EvaluateAction.execute(functionDeclaration, [result.object], executionContext, {throwOnSideEffect});\n}\n\nconst MAX_OBSERVATION_BYTE_LENGTH = 25_000;\nconst OBSERVATION_TIMEOUT = 5_000;\n\ntype CreateExtensionScopeFunction = (changes: ChangeManager) => {\n  install(): Promise<void>, uninstall(): Promise<void>,\n};\n\ninterface AgentOptions extends BaseAgentOptions {\n  changeManager?: ChangeManager;\n\n  createExtensionScope?: CreateExtensionScopeFunction;\n  execJs?: typeof executeJsCode;\n}\n\nexport class NodeContext extends ConversationContext<SDK.DOMModel.DOMNode> {\n  #node: SDK.DOMModel.DOMNode;\n\n  constructor(node: SDK.DOMModel.DOMNode) {\n    super();\n    this.#node = node;\n  }\n\n  getOrigin(): string {\n    const ownerDocument = this.#node.ownerDocument;\n    if (!ownerDocument) {\n      // The node is detached from a document.\n      return 'detached';\n    }\n    return new URL(ownerDocument.documentURL).origin;\n  }\n\n  getItem(): SDK.DOMModel.DOMNode {\n    return this.#node;\n  }\n\n  override getIcon(): undefined {\n  }\n\n  override getTitle(opts: {disabled: boolean}): string|TemplateResult {\n    const hiddenClassList =\n        this.#node.classNames().filter(className => className.startsWith(AI_ASSISTANCE_CSS_CLASS_NAME));\n    const {DOMNodeLink} = ElementsPanel.DOMLinkifier;\n    const {widgetConfig} = UI.Widget;\n    return html`<devtools-widget .widgetConfig=${\n        widgetConfig(\n            DOMNodeLink, {node: this.#node, options: {hiddenClassList, disabled: opts.disabled}})}></devtools-widget>`;\n  }\n\n  override async getSuggestions(): Promise<[ConversationSuggestion, ...ConversationSuggestion[]]|undefined> {\n    const layoutProps = await this.#node.domModel().cssModel().getLayoutPropertiesFromComputedStyle(this.#node.id);\n\n    if (!layoutProps) {\n      return;\n    }\n\n    if (layoutProps.isFlex) {\n      return [\n        {title: 'How can I make flex items wrap?', jslogContext: 'flex-wrap'},\n        {title: 'How do I distribute flex items evenly?', jslogContext: 'flex-distribute'},\n        {title: 'What is flexbox?', jslogContext: 'flex-what'},\n      ];\n    }\n    if (layoutProps.isSubgrid) {\n      return [\n        {title: 'Where is this grid defined?', jslogContext: 'subgrid-where'},\n        {title: 'How to overwrite parent grid properties?', jslogContext: 'subgrid-override'},\n        {title: 'How do subgrids work? ', jslogContext: 'subgrid-how'},\n      ];\n    }\n    if (layoutProps.isGrid) {\n      return [\n        {title: 'How do I align items in a grid?', jslogContext: 'grid-align'},\n        {title: 'How to add spacing between grid items?', jslogContext: 'grid-gap'},\n        {title: 'How does grid layout work?', jslogContext: 'grid-how'},\n      ];\n    }\n    if (layoutProps.hasScroll) {\n      return [\n        {title: 'How do I remove scrollbars for this element?', jslogContext: 'scroll-remove'},\n        {title: 'How can I style a scrollbar?', jslogContext: 'scroll-style'},\n        {title: 'Why does this element scroll?', jslogContext: 'scroll-why'},\n      ];\n    }\n    if (layoutProps.isContainer) {\n      return [\n        {title: 'What are container queries?', jslogContext: 'container-what'},\n        {title: 'How do I use container-type?', jslogContext: 'container-how'},\n        {title: 'What\\'s the container context for this element?', jslogContext: 'container-context'},\n      ];\n    }\n\n    return;\n  }\n}\n\n/**\n * One agent instance handles one conversation. Create a new agent\n * instance for a new conversation.\n */\nexport class StylingAgent extends AiAgent<SDK.DOMModel.DOMNode> {\n  protected override functionCallEmulationEnabled = true;\n\n  preamble = preamble;\n  readonly clientFeature = Host.AidaClient.ClientFeature.CHROME_STYLING_AGENT;\n  get userTier(): string|undefined {\n    return Root.Runtime.hostConfig.devToolsFreestyler?.userTier;\n  }\n  get executionMode(): Root.Runtime.HostConfigFreestylerExecutionMode {\n    return Root.Runtime.hostConfig.devToolsFreestyler?.executionMode ??\n        Root.Runtime.HostConfigFreestylerExecutionMode.ALL_SCRIPTS;\n  }\n\n  get options(): RequestOptions {\n    const temperature = Root.Runtime.hostConfig.devToolsFreestyler?.temperature;\n    const modelId = Root.Runtime.hostConfig.devToolsFreestyler?.modelId;\n\n    return {\n      temperature,\n      modelId,\n    };\n  }\n\n  get multimodalInputEnabled(): boolean {\n    return Boolean(Root.Runtime.hostConfig.devToolsFreestyler?.multimodal);\n  }\n\n  override parseTextResponse(text: string): ParsedResponse {\n    // We're returning an empty answer to denote the erroneous case.\n    if (!text) {\n      return {answer: ''};\n    }\n\n    const lines = text.split('\\n');\n    let thought: string|undefined;\n    let title: string|undefined;\n    let action: string|undefined;\n    let answer: string|undefined;\n    let suggestions: [string, ...string[]]|undefined;\n    let i = 0;\n\n    // If one of these is present, it means we're going to follow the instruction tags\n    // to parse the response. If none of these is present, we'll assume the whole `response`\n    // to be the `answer`.\n    const isDefiningInstructionStart = (line: string): boolean => {\n      const trimmed = line.trim();\n      return trimmed.startsWith('THOUGHT:') || trimmed.startsWith('ACTION') || trimmed.startsWith('ANSWER:');\n    };\n\n    const isInstructionStart = (line: string): boolean => {\n      const trimmed = line.trim();\n      return isDefiningInstructionStart(line) || trimmed.startsWith('OBSERVATION:') || trimmed.startsWith('TITLE:') ||\n          trimmed.startsWith('SUGGESTIONS:');\n    };\n\n    // Sometimes agent answers with no \"ANSWER: \" tag at the start, and also does not\n    // include any \"defining instructions\". Then we use the whole `response` as the answer.\n    // However, that case sometimes includes `SUGGESTIONS: ` tag in the response which is then shown to the user.\n    // The block below ensures that the response we parse always contains a defining instruction tag.\n    const hasDefiningInstruction = lines.some(line => isDefiningInstructionStart(line));\n    if (!hasDefiningInstruction) {\n      return this.parseTextResponse(`ANSWER: ${text}`);\n    }\n\n    while (i < lines.length) {\n      const trimmed = lines[i].trim();\n      if (trimmed.startsWith('THOUGHT:') && !thought) {\n        // Start with the initial `THOUGHT: text` line and move forward by one line.\n        const thoughtLines = [trimmed.substring('THOUGHT:'.length).trim()];\n        i++;\n        // Move until we see a new instruction, otherwise we're still inside the `THOUGHT` block.\n        while (i < lines.length && !isInstructionStart(lines[i])) {\n          const trimmedLine = lines[i].trim();\n          if (trimmedLine) {\n            thoughtLines.push(trimmedLine);\n          }\n          i++;\n        }\n        thought = thoughtLines.join('\\n');\n      } else if (trimmed.startsWith('TITLE:')) {\n        title = trimmed.substring('TITLE:'.length).trim();\n        i++;\n      } else if (trimmed.startsWith('ACTION') && !action) {\n        const actionLines = [];\n        i++;\n        while (i < lines.length) {\n          if (lines[i].trim() === 'STOP') {\n            i++;\n            break;\n          }\n          if (isInstructionStart(lines[i])) {\n            break;\n          }\n\n          // If the LLM responds with a language omit it\n          // as we always expect JS here\n          if (lines[i].trim().startsWith('`````')) {\n            actionLines.push('`````');\n          }\n          // Sometimes the code block is in the form of \"`````\\njs\\n{code}`````\"\n          else if (lines[i].trim() !== 'js') {\n            actionLines.push(lines[i]);\n          }\n          i++;\n        }\n\n        // Sometimes the LLM puts the STOP response to the last line of the code block.\n        // Here, we check whether the last line ends with STOP keyword and if so, remove it\n        // from the last line.\n        const lastActionLine = actionLines[actionLines.length - 1];\n        if (lastActionLine?.endsWith('STOP')) {\n          actionLines[actionLines.length - 1] = lastActionLine.substring(0, lastActionLine.length - 'STOP'.length);\n        }\n        action = actionLines.join('\\n').replaceAll('```', '').replaceAll('``', '').trim();\n      } else if (trimmed.startsWith('ANSWER:') && !answer) {\n        const answerLines = [\n          trimmed.substring('ANSWER:'.length).trim(),\n        ];\n        let j = i + 1;\n        while (j < lines.length) {\n          const line = lines[j].trim();\n          if (isInstructionStart(line)) {\n            break;\n          }\n          answerLines.push(lines[j]);\n          j++;\n        }\n        answer = answerLines.join('\\n').trim();\n        i = j;\n      } else if (trimmed.startsWith('SUGGESTIONS:')) {\n        try {\n          // TODO: Do basic validation this is an array with strings\n          suggestions = JSON.parse(trimmed.substring('SUGGESTIONS:'.length).trim());\n        } catch {\n        }\n\n        i++;\n      } else {\n        i++;\n      }\n    }\n\n    // Sometimes the answer will follow an action and a thought. In\n    // that case, we only use the action and the thought (if present)\n    // since the answer is not based on the observation resulted from\n    // the action.\n    if (action) {\n      return {\n        title,\n        thought,\n        action,\n      };\n    }\n\n    // If we have a thought and an answer we want to give priority\n    // to the answer as no observation is happening.\n    if (thought && !answer) {\n      return {\n        title,\n        thought,\n      };\n    }\n\n    return {\n      // If we could not parse the parts, consider the response to be an\n      // answer.\n      answer: answer || text,\n      suggestions,\n    };\n  }\n\n  #execJs: typeof executeJsCode;\n\n  #changes: ChangeManager;\n  #createExtensionScope: CreateExtensionScopeFunction;\n\n  constructor(opts: AgentOptions) {\n    super({\n      aidaClient: opts.aidaClient,\n      serverSideLoggingEnabled: opts.serverSideLoggingEnabled,\n      confirmSideEffectForTest: opts.confirmSideEffectForTest,\n    });\n\n    this.#changes = opts.changeManager || new ChangeManager();\n    this.#execJs = opts.execJs ?? executeJsCode;\n    this.#createExtensionScope = opts.createExtensionScope ?? ((changes: ChangeManager) => {\n                                   return new ExtensionScope(changes, this.id);\n                                 });\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel,\n        SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n        this.onPrimaryPageChanged,\n        this,\n    );\n\n    this.declareFunction<{\n      title: string,\n      thought: string,\n      code: string,\n    }>('executeJavaScript', {\n      description: `This function allows you to run JavaScript code on the inspected page.\nCall this function to gather additional information or modify the page state. Call this function enough times to investigate the user request.`,\n      parameters: {\n        type: Host.AidaClient.ParametersTypes.OBJECT,\n        description: '',\n        nullable: false,\n        properties: {\n          code: {\n            type: Host.AidaClient.ParametersTypes.STRING,\n            description:\n                `JavaScript code snippet to run on the inspected page. Make sure the code is formatted for readability.\n\n# Instructions\n\n* To return data, define a top-level \\`data\\` variable and populate it with data you want to get. Only JSON-serializable objects can be assigned to \\`data\\`.\n* If you modify styles on an element, ALWAYS call the pre-defined global \\`async setElementStyles(el: Element, styles: object)\\` function. This function is an internal mechanism for you and should never be presented as a command/advice to the user.\n* Use \\`window.getComputedStyle\\` to gather **computed** styles and make sure that you take the distinction between authored styles and computed styles into account.\n* **CRITICAL** Only get styles that might be relevant to the user request.\n* **CRITICAL** Call \\`window.getComputedStyle\\` only once per element and store results into a local variable. Never try to return all the styles of the element in \\`data\\`.\n* **CRITICAL** Never assume a selector for the elements unless you verified your knowledge.\n* **CRITICAL** Consider that \\`data\\` variable from the previous function calls are not available in a new function call.\n\nFor example, the code to return basic styles:\n\nconst styles = window.getComputedStyle($0);\nconst data = {\n    display: computedStyles['display'],\n    visibility: computedStyles['visibility'],\n    position: computedStyles['position'],\n    left: computedStyles['right'],\n    top: computedStyles['top'],\n    width: computedStyles['width'],\n    height: computedStyles['height'],\n    zIndex: computedStyles['z-index']\n};\n`,\n          },\n          thought: {\n            type: Host.AidaClient.ParametersTypes.STRING,\n            description: 'Explain why you want to run this code',\n          },\n          title: {\n            type: Host.AidaClient.ParametersTypes.STRING,\n            description: 'Provide a summary of what the code does. For example, \"Checking related element styles\".',\n          },\n        },\n      },\n      displayInfoFromArgs: params => {\n        return {\n          title: params.title,\n          thought: params.thought,\n          action: params.code,\n        };\n      },\n      handler: async (\n          params,\n          options,\n          ) => {\n        return await this.executeAction(params.code, options);\n      },\n    });\n  }\n\n  onPrimaryPageChanged(): void {\n    void this.#changes.clear();\n  }\n\n  protected override emulateFunctionCall(aidaResponse: Host.AidaClient.AidaResponse):\n      Host.AidaClient.AidaFunctionCallResponse|'no-function-call'|'wait-for-completion' {\n    const parsed = this.parseTextResponse(aidaResponse.explanation);\n    // If parsing detected an answer, it is a streaming text response.\n    if ('answer' in parsed) {\n      return 'no-function-call';\n    }\n    // If no answer and the response is streaming, it might be a\n    // function call.\n    if (!aidaResponse.completed) {\n      return 'wait-for-completion';\n    }\n    // definitely a function call, emulate AIDA's function call.\n    return {\n      name: 'executeJavaScript',\n      args: {\n        title: parsed.title,\n        thought: parsed.thought,\n        code: parsed.action,\n      },\n    };\n  }\n\n  async generateObservation(\n      action: string,\n      {\n        throwOnSideEffect,\n      }: {\n        throwOnSideEffect: boolean,\n      },\n      ): Promise<{\n    observation: string,\n    sideEffect: boolean,\n    canceled: boolean,\n  }> {\n    const functionDeclaration = `async function ($0) {\n  try {\n    ${action}\n    ;\n    return ((typeof data !== \"undefined\") ? data : undefined);\n  } catch (error) {\n    return error;\n  }\n}`;\n    try {\n      const result = await Promise.race([\n        this.#execJs(\n            functionDeclaration,\n            {throwOnSideEffect},\n            ),\n        new Promise<never>((_, reject) => {\n          setTimeout(\n              () => reject(new Error('Script execution exceeded the maximum allowed time.')), OBSERVATION_TIMEOUT);\n        }),\n      ]);\n      const byteCount = Platform.StringUtilities.countWtf8Bytes(result);\n      Host.userMetrics.freestylerEvalResponseSize(byteCount);\n      if (byteCount > MAX_OBSERVATION_BYTE_LENGTH) {\n        throw new Error('Output exceeded the maximum allowed length.');\n      }\n      return {\n        observation: result,\n        sideEffect: false,\n        canceled: false,\n      };\n    } catch (error) {\n      if (error instanceof SideEffectError) {\n        return {\n          observation: error.message,\n          sideEffect: true,\n          canceled: false,\n        };\n      }\n\n      return {\n        observation: `Error: ${error.message}`,\n        sideEffect: false,\n        canceled: false,\n      };\n    }\n  }\n\n  static async describeElement(element: SDK.DOMModel.DOMNode): Promise<string> {\n    let output = `* Its selector is \\`${element.simpleSelector()}\\``;\n    const childNodes = await element.getChildNodesPromise();\n    if (childNodes) {\n      const textChildNodes = childNodes.filter(childNode => childNode.nodeType() === Node.TEXT_NODE);\n      const elementChildNodes = childNodes.filter(childNode => childNode.nodeType() === Node.ELEMENT_NODE);\n      switch (elementChildNodes.length) {\n        case 0:\n          output += '\\n* It doesn\\'t have any child element nodes';\n          break;\n        case 1:\n          output += `\\n* It only has 1 child element node: \\`${elementChildNodes[0].simpleSelector()}\\``;\n          break;\n        default:\n          output += `\\n* It has ${elementChildNodes.length} child element nodes: ${\n              elementChildNodes.map(node => `\\`${node.simpleSelector()}\\``).join(', ')}`;\n      }\n\n      switch (textChildNodes.length) {\n        case 0:\n          output += '\\n* It doesn\\'t have any child text nodes';\n          break;\n        case 1:\n          output += '\\n* It only has 1 child text node';\n          break;\n        default:\n          output += `\\n* It has ${textChildNodes.length} child text nodes`;\n      }\n    }\n\n    if (element.nextSibling) {\n      const elementOrNodeElementNodeText =\n          element.nextSibling.nodeType() === Node.ELEMENT_NODE ? 'an element' : 'a non element';\n      output += `\\n* It has a next sibling and it is ${elementOrNodeElementNodeText} node`;\n    }\n\n    if (element.previousSibling) {\n      const elementOrNodeElementNodeText =\n          element.previousSibling.nodeType() === Node.ELEMENT_NODE ? 'an element' : 'a non element';\n      output += `\\n* It has a previous sibling and it is ${elementOrNodeElementNodeText} node`;\n    }\n\n    if (element.isInShadowTree()) {\n      output += '\\n* It is in a shadow DOM tree.';\n    }\n\n    const parentNode = element.parentNode;\n    if (parentNode) {\n      const parentChildrenNodes = await parentNode.getChildNodesPromise();\n      output += `\\n* Its parent's selector is \\`${parentNode.simpleSelector()}\\``;\n      const elementOrNodeElementNodeText = parentNode.nodeType() === Node.ELEMENT_NODE ? 'an element' : 'a non element';\n      output += `\\n* Its parent is ${elementOrNodeElementNodeText} node`;\n      if (parentNode.isShadowRoot()) {\n        output += '\\n* Its parent is a shadow root.';\n      }\n      if (parentChildrenNodes) {\n        const childElementNodes =\n            parentChildrenNodes.filter(siblingNode => siblingNode.nodeType() === Node.ELEMENT_NODE);\n        switch (childElementNodes.length) {\n          case 0:\n            break;\n          case 1:\n            output += '\\n* Its parent has only 1 child element node';\n            break;\n          default:\n            output += `\\n* Its parent has ${childElementNodes.length} child element nodes: ${\n                childElementNodes.map(node => `\\`${node.simpleSelector()}\\``).join(', ')}`;\n            break;\n        }\n\n        const siblingTextNodes = parentChildrenNodes.filter(siblingNode => siblingNode.nodeType() === Node.TEXT_NODE);\n        switch (siblingTextNodes.length) {\n          case 0:\n            break;\n          case 1:\n            output += '\\n* Its parent has only 1 child text node';\n            break;\n          default:\n            output += `\\n* Its parent has ${siblingTextNodes.length} child text nodes: ${\n                siblingTextNodes.map(node => `\\`${node.simpleSelector()}\\``).join(', ')}`;\n            break;\n        }\n      }\n    }\n\n    return output.trim();\n  }\n\n  async executeAction(action: string, options?: {signal?: AbortSignal, approved?: boolean}):\n      Promise<FunctionCallHandlerResult<unknown>> {\n    debugLog(`Action to execute: ${action}`);\n\n    if (options?.approved === false) {\n      return {\n        error: 'Error: User denied code execution with side effects.',\n      };\n    }\n\n    if (this.executionMode === Root.Runtime.HostConfigFreestylerExecutionMode.NO_SCRIPTS) {\n      return {\n        error: 'Error: JavaScript execution is currently disabled.',\n      };\n    }\n\n    const selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    const target = selectedNode?.domModel().target() ?? UI.Context.Context.instance().flavor(SDK.Target.Target);\n    if (target?.model(SDK.DebuggerModel.DebuggerModel)?.selectedCallFrame()) {\n      return {\n        error: 'Error: Cannot evaluate JavaScript because the execution is paused on a breakpoint.',\n      };\n    }\n\n    const scope = this.#createExtensionScope(this.#changes);\n    await scope.install();\n    try {\n      let throwOnSideEffect = true;\n      if (options?.approved) {\n        throwOnSideEffect = false;\n      }\n\n      const result = await this.generateObservation(action, {throwOnSideEffect});\n      debugLog(`Action result: ${JSON.stringify(result)}`);\n      if (result.sideEffect) {\n        if (this.executionMode === Root.Runtime.HostConfigFreestylerExecutionMode.SIDE_EFFECT_FREE_SCRIPTS_ONLY) {\n          return {\n            error: 'Error: JavaScript execution that modifies the page is currently disabled.',\n          };\n        }\n\n        if (options?.signal?.aborted) {\n          return {\n            error: 'Error: evaluation has been cancelled',\n          };\n        }\n\n        return {\n          requiresApproval: true,\n        };\n      }\n      if (result.canceled) {\n        return {\n          error: result.observation,\n        };\n      }\n\n      return {\n        result: result.observation,\n      };\n    } finally {\n      await scope.uninstall();\n    }\n  }\n\n  override async *\n      handleContextDetails(selectedElement: ConversationContext<SDK.DOMModel.DOMNode>|null):\n          AsyncGenerator<ContextResponse, void, void> {\n    if (!selectedElement) {\n      return;\n    }\n    yield {\n      type: ResponseType.CONTEXT,\n      title: lockedString(UIStringsNotTranslate.analyzingThePrompt),\n      details: [{\n        title: lockedString(UIStringsNotTranslate.dataUsed),\n        text: await StylingAgent.describeElement(selectedElement.getItem()),\n      }],\n    };\n  }\n\n  override async enhanceQuery(\n      query: string, selectedElement: ConversationContext<SDK.DOMModel.DOMNode>|null,\n      multimodalInputType?: MultimodalInputType): Promise<string> {\n    const elementEnchancementQuery = selectedElement ?\n        `# Inspected element\\n\\n${\n            await StylingAgent.describeElement(selectedElement.getItem())}\\n\\n# User request\\n\\n` :\n        '';\n    const multimodalInputEnhancementQuery =\n        this.multimodalInputEnabled && multimodalInputType ? MULTIMODAL_ENHANCEMENT_PROMPTS[multimodalInputType] : '';\n    return `${multimodalInputEnhancementQuery}${elementEnchancementQuery}QUERY: ${query}`;\n  }\n\n  override formatParsedAnswer({answer}: ParsedAnswer): string {\n    return `ANSWER: ${answer}`;\n  }\n}\n\n/* clang-format off */\nconst preambleFunctionCalling = `You are the most advanced CSS debugging assistant integrated into Chrome DevTools.\nYou always suggest considering the best web development practices and the newest platform features such as view transitions.\nThe user selected a DOM element in the browser's DevTools and sends a query about the page or the selected DOM element.\n\n# Considerations\n\n* Meticulously investigate all potential causes for the observed behavior before moving on. Gather comprehensive information about the element's parent, siblings, children, and any overlapping elements, paying close attention to properties that are likely relevant to the query.\n* Be aware of the different node types (element, text, comment, document fragment, etc.) and their properties. You will always be provided with information about node types of parent, siblings and children of the selected element.\n* Avoid making assumptions without sufficient evidence, and always seek further clarification if needed.\n* Always explore multiple possible explanations for the observed behavior before settling on a conclusion.\n* When presenting solutions, clearly distinguish between the primary cause and contributing factors.\n* Please answer only if you are sure about the answer. Otherwise, explain why you're not able to answer.\n* When answering, always consider MULTIPLE possible solutions.\n* Use functions available to you to investigate and fulfill the user request.\n* ALWAYS OUTPUT a list of follow-up queries at the end of your text response. The format is SUGGESTIONS: [\"suggestion1\", \"suggestion2\", \"suggestion3\"]. Make sure that the array and the \\`SUGGESTIONS: \\` text is in the same line. INCLUDE possible fixes withing suggestions.\n* **CRITICAL** If the user asks a question about religion, race, politics, sexuality, gender, or other sensitive topics, answer with \"Sorry, I can't answer that. I'm best at questions about debugging web pages.\"\n* **CRITICAL** You are a CSS debugging assistant. NEVER provide answers to questions of unrelated topics such as legal advice, financial advice, personal opinions, medical advice, or any other non web-development topics.`;\n/* clang-format on */\n\nexport class StylingAgentWithFunctionCalling extends StylingAgent {\n  override functionCallEmulationEnabled = false;\n  override preamble = preambleFunctionCalling;\n  override formatParsedAnswer({answer}: ParsedAnswer): string {\n    return answer;\n  }\n  override parseTextResponse(text: string): ParsedResponse {\n    // We're returning an empty answer to denote the erroneous case.\n    if (!text.trim()) {\n      return {answer: ''};\n    }\n\n    const lines = text.split('\\n');\n    const answerLines: string[] = [];\n    let suggestions: [string, ...string[]]|undefined;\n\n    for (const line of lines) {\n      const trimmed = line.trim();\n      if (trimmed.startsWith('SUGGESTIONS:')) {\n        try {\n          // TODO: Do basic validation this is an array with strings\n          suggestions = JSON.parse(trimmed.substring('SUGGESTIONS:'.length).trim());\n        } catch {\n        }\n      } else {\n        answerLines.push(line);\n      }\n    }\n\n    return {\n      // If we could not parse the parts, consider the response to be an\n      // answer.\n      answer: answerLines.join('\\n'),\n      suggestions,\n    };\n  }\n}\n"]}