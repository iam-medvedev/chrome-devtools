{"version":3,"file":"AiAgent.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/ai_assistance/agents/AiAgent.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport {mockAidaClient} from '../../../testing/AiAssistanceHelpers.js';\nimport {\n  describeWithEnvironment,\n} from '../../../testing/EnvironmentHelpers.js';\nimport {html, type TemplateResult} from '../../../ui/lit/lit.js';\nimport * as AiAssistance from '../ai_assistance.js';\n\nconst {AiAgent, ResponseType, ConversationContext, ErrorType} = AiAssistance;\n\nfunction mockConversationContext(): AiAssistance.ConversationContext<unknown> {\n  return new (class extends ConversationContext<unknown>{\n    override getOrigin(): string {\n      return 'origin';\n    }\n\n    override getItem(): unknown {\n      return null;\n    }\n\n    override getIcon(): TemplateResult {\n      return html`<span></span>`;\n    }\n\n    override getTitle(): string {\n      return 'title';\n    }\n  })();\n}\n\nclass AiAgentMock extends AiAgent<unknown> {\n  override preamble = 'preamble';\n\n  // eslint-disable-next-line require-yield\n  override async * handleContextDetails(): AsyncGenerator<AiAssistance.ContextResponse, void, void> {\n    return;\n  }\n\n  clientFeature: Host.AidaClient.ClientFeature = 0;\n  userTier: undefined|string;\n\n  options: AiAssistance.RequestOptions = {\n    temperature: 1,\n    modelId: 'test model',\n  };\n}\n\ndescribeWithEnvironment('AiAgent', () => {\n  describe('buildRequest', () => {\n    beforeEach(() => {\n      sinon.stub(crypto, 'randomUUID').returns('sessionId' as `${string}-${string}-${string}-${string}-${string}`);\n    });\n\n    it('builds a request with a temperature', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient(),\n      });\n      assert.strictEqual(\n          agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER).options?.temperature,\n          1,\n      );\n    });\n\n    it('builds a request with a temperature -1', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient(),\n      });\n      agent.options.temperature = -1;\n      assert.isUndefined(agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER).options?.temperature);\n    });\n\n    it('builds a request with a model id', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient(),\n      });\n      assert.strictEqual(\n          agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER).options?.model_id,\n          'test model',\n      );\n    });\n\n    it('builds a request without a model id it is configured as an empty string', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient(),\n      });\n      agent.options.modelId = '';\n      assert.isUndefined(agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER).options?.model_id);\n    });\n\n    it('builds a request with logging', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient(),\n        serverSideLoggingEnabled: true,\n      });\n      assert.isFalse(\n          agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER).metadata?.disable_user_content_logging);\n    });\n\n    it('builds a request without logging', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient(),\n        serverSideLoggingEnabled: false,\n      });\n      assert.isTrue(agent\n                        .buildRequest(\n                            {\n                              text: 'test input',\n                            },\n                            Host.AidaClient.Role.USER)\n                        .metadata?.disable_user_content_logging);\n    });\n\n    it('builds a request with input', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient(),\n        serverSideLoggingEnabled: false,\n      });\n      const request = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n      assert.deepEqual(request.current_message?.parts[0], {text: 'test input'});\n      assert.isUndefined(request.historical_contexts);\n    });\n\n    it('builds a request with a sessionId', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient(),\n      });\n      const request = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n      assert.strictEqual(request.metadata?.string_session_id, 'sessionId');\n    });\n\n    it('builds a request with preamble features in version', async () => {\n      const features = ['test'];\n      class MockWithFeatures extends AiAgentMock {\n        override preambleFeatures(): string[] {\n          return features;\n        }\n      }\n      const agent = new MockWithFeatures({\n        aidaClient: mockAidaClient(),\n      });\n      {\n        const request = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n        assert.include(request.metadata.client_version, '+test');\n      }\n      features.push('2test');\n      {\n        const request = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n        assert.include(request.metadata.client_version, '+test+2test');\n      }\n    });\n\n    it('builds a request with preamble if user tier is TESTERS', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient(),\n      });\n      agent.userTier = 'TESTERS';\n      const request = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n      assert.deepEqual(request.current_message?.parts[0], {text: 'test input'});\n      assert.strictEqual(request.preamble, 'preamble');\n      assert.isUndefined(request.historical_contexts);\n    });\n\n    it('builds a request without preamble if user tier is not TESTERS', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient(),\n      });\n      agent.userTier = 'PUBLIC';\n      const request = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n      assert.deepEqual(request.current_message?.parts[0], {text: 'test input'});\n      assert.isUndefined(request.preamble);\n      assert.isUndefined(request.historical_contexts);\n    });\n\n    it('builds a request without preamble', async () => {\n      class AiAgentMockWithoutPreamble extends AiAgent<unknown> {\n        override preamble = undefined;\n        // eslint-disable-next-line require-yield\n        override async * handleContextDetails(): AsyncGenerator<AiAssistance.ContextResponse, void, void> {\n          return;\n        }\n        clientFeature: Host.AidaClient.ClientFeature = 0;\n        userTier: undefined;\n        options: AiAssistance.RequestOptions = {\n          temperature: 1,\n          modelId: 'test model',\n        };\n      }\n\n      const agent = new AiAgentMockWithoutPreamble({\n        aidaClient: mockAidaClient(),\n      });\n      const request = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n      assert.deepEqual(request.current_message?.parts[0], {text: 'test input'});\n      assert.isUndefined(request.preamble);\n      assert.isUndefined(request.historical_contexts);\n    });\n\n    it('builds a request with a fact', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient([[{\n          explanation: 'answer',\n        }]]),\n        serverSideLoggingEnabled: true,\n      });\n      const fact: Host.AidaClient.RequestFact = {text: 'This is a fact', metadata: {source: 'devtools'}};\n      agent.addFact(fact);\n      await Array.fromAsync(agent.run('question', {selected: null}));\n      const request = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n      assert.deepEqual(request.facts, [fact]);\n    });\n\n    it('can manage multiple facts and remove them', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient([[{\n          explanation: 'answer',\n        }]]),\n        serverSideLoggingEnabled: true,\n      });\n      const f1: Host.AidaClient.RequestFact = {text: 'f1', metadata: {source: 'devtools'}};\n      const f2 = {text: 'f2', metadata: {source: 'devtools'}};\n      agent.addFact(f1);\n      agent.addFact(f2);\n\n      await Array.fromAsync(agent.run('question', {selected: null}));\n      const request1 = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n      assert.deepEqual(request1.facts, [f1, f2]);\n\n      agent.removeFact(f1);\n      await Array.fromAsync(agent.run('question', {selected: null}));\n      const request2 = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n      assert.deepEqual(request2.facts, [f2]);\n\n      agent.clearFacts();\n      await Array.fromAsync(agent.run('question', {selected: null}));\n      const request3 = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n      assert.isUndefined(request3.facts);\n    });\n\n    it('builds a request with chat history', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient([[{\n          explanation: 'answer',\n        }]]),\n        serverSideLoggingEnabled: true,\n      });\n      await Array.fromAsync(agent.run('question', {selected: null}));\n\n      const request = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n      assert.deepEqual(request.current_message?.parts[0], {text: 'test input'});\n      assert.deepEqual(request.historical_contexts, [\n        {\n          parts: [{text: 'question'}],\n          role: 1,\n        },\n        {\n          role: 2,\n          parts: [{text: 'answer'}],\n        },\n      ]);\n    });\n\n    it('builds a request with aborted query in history', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient([[{\n          explanation: 'answer',\n        }]]),\n        serverSideLoggingEnabled: true,\n      });\n\n      const controller = new AbortController();\n      controller.abort();\n      await Array.fromAsync(agent.run('question', {selected: null, signal: controller.signal}));\n\n      const request = agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER);\n      assert.deepEqual(request.current_message?.parts[0], {text: 'test input'});\n      assert.isUndefined(request.historical_contexts);\n    });\n  });\n\n  describe('run', () => {\n    describe('partial yielding for answers', () => {\n      it('should yield partial answer with final answer at the end', async () => {\n        const agent = new AiAgentMock({\n          aidaClient: mockAidaClient([[\n            {\n              explanation: 'Partial ans',\n            },\n            {\n              explanation: 'Partial answer is now completed',\n            }\n          ]]),\n        });\n\n        const responses = await Array.fromAsync(agent.run('query', {selected: mockConversationContext()}));\n\n        assert.deepEqual(responses, [\n          {\n            type: ResponseType.USER_QUERY,\n            query: 'query',\n            imageInput: undefined,\n            imageId: undefined,\n          },\n          {\n            type: ResponseType.QUERYING,\n          },\n          {\n            type: ResponseType.ANSWER,\n            complete: false,\n            text: 'Partial ans',\n          },\n          {\n            type: ResponseType.ANSWER,\n            text: 'Partial answer is now completed',\n            complete: true,\n            rpcId: undefined,\n            suggestions: undefined,\n          },\n        ]);\n      });\n\n      it('should not add partial answers to history', async () => {\n        const agent = new AiAgentMock({\n          aidaClient: mockAidaClient([[\n            {\n              explanation: 'Partial ans',\n            },\n            {\n              explanation: 'Partial answer is now completed',\n            }\n          ]]),\n        });\n\n        await Array.fromAsync(agent.run('query', {selected: mockConversationContext()}));\n\n        assert.deepEqual(agent.buildRequest({text: ''}, Host.AidaClient.Role.USER).historical_contexts, [\n          {\n            role: Host.AidaClient.Role.USER,\n            parts: [{text: 'query'}],\n          },\n          {\n            role: Host.AidaClient.Role.MODEL,\n            parts: [{text: 'Partial answer is now completed'}],\n          },\n        ]);\n      });\n    });\n\n    it('should yield unknown error when aida doConversation does not return anything', async () => {\n      const agent = new AiAgentMock({\n        aidaClient: mockAidaClient([]),\n      });\n\n      const responses = await Array.fromAsync(agent.run('query', {selected: mockConversationContext()}));\n\n      assert.deepEqual(responses, [\n        {\n          type: ResponseType.USER_QUERY,\n          query: 'query',\n          imageInput: undefined,\n          imageId: undefined,\n        },\n        {\n          type: ResponseType.QUERYING,\n        },\n        {\n          type: ResponseType.ERROR,\n          error: ErrorType.UNKNOWN,\n        },\n      ]);\n    });\n  });\n\n  describe('ConversationContext', () => {\n    function getTestContext(origin: string) {\n      class TestContext extends ConversationContext<undefined> {\n        override getIcon(): TemplateResult {\n          throw new Error('Method not implemented.');\n        }\n        override getTitle(): string {\n          throw new Error('Method not implemented.');\n        }\n        override getOrigin(): string {\n          return origin;\n        }\n        override getItem(): undefined {\n          return undefined;\n        }\n      }\n      return new TestContext();\n    }\n    it('checks context origins', () => {\n      const tests = [\n        {\n          contextOrigin: 'https://google.test',\n          agentOrigin: 'https://google.test',\n          isAllowed: true,\n        },\n        {\n          contextOrigin: 'https://google.test',\n          agentOrigin: 'about:blank',\n          isAllowed: false,\n        },\n        {\n          contextOrigin: 'https://google.test',\n          agentOrigin: 'https://www.google.test',\n          isAllowed: false,\n        },\n        {\n          contextOrigin: 'https://a.test',\n          agentOrigin: 'https://b.test',\n          isAllowed: false,\n        },\n        {\n          contextOrigin: 'https://a.test',\n          agentOrigin: 'file:///tmp',\n          isAllowed: false,\n        },\n        {\n          contextOrigin: 'https://a.test',\n          agentOrigin: 'http://a.test',\n          isAllowed: false,\n        },\n      ];\n      for (const test of tests) {\n        assert.strictEqual(getTestContext(test.contextOrigin).isOriginAllowed(test.agentOrigin), test.isAllowed);\n      }\n    });\n  });\n\n  describe('functions', () => {\n    class AgentWithFunction extends AiAgent<unknown> {\n      override preamble = 'preamble';\n      called = 0;\n\n      constructor(opts: AiAssistance.AgentOptions) {\n        super(opts);\n        this.declareFunction('testFn', {\n          description: 'test fn description',\n          parameters: {type: Host.AidaClient.ParametersTypes.OBJECT, properties: {}, description: 'arg description'},\n          handler: this.#test.bind(this),\n        });\n      }\n\n      async #test(...args: any[]) {\n        this.called++;\n        return {\n          result: args[0],\n        };\n      }\n\n      // eslint-disable-next-line require-yield\n      override async * handleContextDetails(): AsyncGenerator<AiAssistance.ContextResponse, void, void> {\n        return;\n      }\n\n      clientFeature: Host.AidaClient.ClientFeature = 0;\n      userTier: undefined;\n      options: AiAssistance.RequestOptions = {\n        temperature: 1,\n        modelId: 'test model',\n      };\n    }\n\n    it('should build a request with functions', () => {\n      const agent = new AgentWithFunction({\n        aidaClient: mockAidaClient(),\n      });\n      agent.options.temperature = -1;\n      assert.deepEqual(\n          agent.buildRequest({text: 'test input'}, Host.AidaClient.Role.USER).function_declarations,\n          [{\n            description: 'test fn description',\n            name: 'testFn',\n            parameters: {\n              description: 'arg description',\n              properties: {},\n              type: 6,\n            },\n          }],\n      );\n    });\n  });\n});\n"]}