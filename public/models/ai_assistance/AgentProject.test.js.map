{"version":3,"file":"AgentProject.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/ai_assistance/AgentProject.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {createTestFilesystem} from '../../testing/AiAssistanceHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport * as AiAssistanceModel from '../ai_assistance/ai_assistance.js';\n\ndescribeWithEnvironment('AgentProject', () => {\n  async function mockProject(\n      files?: Array<{\n        path: string,\n        content: string,\n      }>,\n      options?: {\n        maxFilesChanged: number,\n        maxLinesChanged: number,\n      }) {\n    const {project, uiSourceCode} = createTestFilesystem('file:///path/to/project', files);\n    return {project: new AiAssistanceModel.AgentProject(project, options), uiSourceCode};\n  }\n\n  it('can list files', async () => {\n    const {project} = await mockProject();\n\n    assert.deepEqual(project.getFiles(), ['index.html']);\n  });\n\n  it('ignores node_modules', async () => {\n    const {project} = await mockProject([\n      {\n        path: 'node_modules/test.js',\n        content: 'content',\n      },\n      {\n        path: 'test/another/node_modules/test2.js',\n        content: 'content',\n      }\n    ]);\n\n    assert.deepEqual(project.getFiles(), ['index.html']);\n  });\n\n  it('can search files', async () => {\n    const {project} = await mockProject();\n\n    assert.deepEqual(await project.searchFiles('content'), [{\n                       columnNumber: 0,\n                       filepath: 'index.html',\n                       lineNumber: 0,\n                       matchLength: 7,\n                     }]);\n  });\n\n  it('can read files', async () => {\n    const {project} = await mockProject();\n\n    assert.deepEqual(project.readFile('index.html'), 'content');\n  });\n\n  it('can report processed files', async () => {\n    const {project} = await mockProject();\n    assert.deepEqual(project.getProcessedFiles(), []);\n    project.readFile('index.html');\n    assert.deepEqual(project.getProcessedFiles(), ['index.html']);\n  });\n\n  describe('write file', () => {\n    describe('full', () => {\n      it('can write files files', async () => {\n        const {project} = await mockProject();\n        project.writeFile('index.html', 'updated');\n        assert.deepEqual(project.readFile('index.html'), 'updated');\n      });\n    });\n\n    describe('unified', () => {\n      it('can write files', async () => {\n        const {project} = await mockProject();\n        const unifiedDiff = `\\`\\`\\`\\`\\`\ndiff\n--- a/index.html\n+++ b/index.html\n@@ -817,5 +817,5 @@\n-content\n+updated\n\\`\\`\\`\\`\\``;\n\n        project.writeFile('index.html', unifiedDiff, AiAssistanceModel.ReplaceStrategy.UNIFIED_DIFF);\n        assert.deepEqual(project.readFile('index.html'), 'updated');\n      });\n\n      it('can write files with multiple changes', async () => {\n        const {project} = await mockProject(\n            [\n              {\n                path: 'index.css',\n                content: `Line:1\nLine:2\nLine:3\nLine:4\nLine:5`,\n              },\n            ],\n        );\n        const unifiedDiff = `\\`\\`\\`\\`\\`\ndiff\n--- a/index.css\n+++ b/index.css\n@@ -817,1 +817,1 @@\n-Line:1\n+LineUpdated:1\n@@ -856,7 +857,7 @@\n-Line:4\n+LineUpdated:4\n\\`\\`\\`\\`\\``;\n\n        project.writeFile('index.css', unifiedDiff, AiAssistanceModel.ReplaceStrategy.UNIFIED_DIFF);\n        assert.deepEqual(project.readFile('index.css'), `LineUpdated:1\nLine:2\nLine:3\nLineUpdated:4\nLine:5`);\n      });\n\n      it('can write files with only addition', async () => {\n        const {project} = await mockProject(\n            [\n              {\n                path: 'index.css',\n                content: '',\n              },\n            ],\n        );\n        const unifiedDiff = `\\`\\`\\`\\`\\`\ndiff\n--- a/index.css\n+++ b/index.css\n@@ -817,1 +817,1 @@\n+Line:1\n+Line:4\n\\`\\`\\`\\`\\``;\n\n        project.writeFile('index.css', unifiedDiff, AiAssistanceModel.ReplaceStrategy.UNIFIED_DIFF);\n        assert.deepEqual(project.readFile('index.css'), `Line:1\nLine:4`);\n      });\n\n      it('can write files with multiple additions', async () => {\n        const {project} = await mockProject(\n            [\n              {\n                path: 'index.css',\n                content: `Line:1\nLine:2\nLine:3\nLine:4\nLine:5`,\n              },\n            ],\n        );\n        const unifiedDiff = `\\`\\`\\`\\`\\`\ndiff\n--- a/index.css\n+++ b/index.css\n@@ -817,1 +817,1 @@\n-Line:1\n+LineUpdated:1\n+LineUpdated:1.5\n\\`\\`\\`\\`\\``;\n\n        project.writeFile('index.css', unifiedDiff, AiAssistanceModel.ReplaceStrategy.UNIFIED_DIFF);\n        assert.deepEqual(project.readFile('index.css'), `LineUpdated:1\nLineUpdated:1.5\nLine:2\nLine:3\nLine:4\nLine:5`);\n      });\n\n      it('can write files with only deletion', async () => {\n        const {project} = await mockProject(\n            [\n              {\n                path: 'index.css',\n                content: `Line:1\nLine:2\nLine:3\nLine:4\nLine:5`,\n              },\n            ],\n        );\n        const unifiedDiff = `\\`\\`\\`\\`\\`\ndiff\n--- a/index.css\n+++ b/index.css\n@@ -817,1 +817,1 @@\n Line:1\n-Line:2\n Line:3\n\\`\\`\\`\\`\\``;\n\n        project.writeFile('index.css', unifiedDiff, AiAssistanceModel.ReplaceStrategy.UNIFIED_DIFF);\n        assert.deepEqual(project.readFile('index.css'), `Line:1\nLine:3\nLine:4\nLine:5`);\n      });\n\n      it('can write files with only deletion no search lines', async () => {\n        const {project} = await mockProject(\n            [\n              {\n                path: 'index.css',\n                content: 'Line:1',\n              },\n            ],\n        );\n        const unifiedDiff = `\\`\\`\\`\\`\\`\ndiff\n--- a/index.css\n+++ b/index.css\n@@ -817,1 +817,1 @@\n-Line:1\n\\`\\`\\`\\`\\``;\n\n        project.writeFile('index.css', unifiedDiff, AiAssistanceModel.ReplaceStrategy.UNIFIED_DIFF);\n        assert.deepEqual(project.readFile('index.css'), '');\n      });\n\n      it('can write files with first line next to @@', async () => {\n        const {project} = await mockProject(\n            [\n              {\n                path: 'index.css',\n                content: `Line:1\nLine:2\nLine:3\nLine:4\nLine:5`,\n              },\n            ],\n        );\n        const unifiedDiff = `\\`\\`\\`\\`\\`\ndiff\n--- a/index.css\n+++ b/index.css\n@@ -817,1 +817,1 @@-Line:1\n-Line:2\n Line:3\n\\`\\`\\`\\`\\``;\n\n        project.writeFile('index.css', unifiedDiff, AiAssistanceModel.ReplaceStrategy.UNIFIED_DIFF);\n        assert.deepEqual(project.readFile('index.css'), `Line:3\nLine:4\nLine:5`);\n      });\n    });\n  });\n\n  describe('limits', () => {\n    it('cannot write more files than allowed', async () => {\n      const {project} = await mockProject(\n          [{\n            path: 'example2.js',\n            content: 'content',\n          }],\n          {\n            maxFilesChanged: 1,\n            maxLinesChanged: 10,\n          });\n\n      project.writeFile('index.html', 'updated');\n      expect(() => {\n        project.writeFile('example2.js', 'updated2');\n      }).throws('Too many files changed');\n      assert.deepEqual(project.readFile('index.html'), 'updated');\n      assert.deepEqual(project.readFile('example2.js'), 'content');\n    });\n\n    it('cannot write same file multiple times', async () => {\n      const {project} = await mockProject(undefined, {\n        maxFilesChanged: 1,\n        maxLinesChanged: 10,\n      });\n\n      project.writeFile('index.html', 'updated');\n      project.writeFile('index.html', 'updated2');\n      assert.deepEqual(project.readFile('index.html'), 'updated2');\n    });\n\n    it('cannot write more lines than allowed', async () => {\n      const {project} = await mockProject(\n          [{\n            path: 'example2.js',\n            content: 'content',\n          }],\n          {\n            maxFilesChanged: 1,\n            maxLinesChanged: 1,\n          });\n\n      expect(() => {\n        project.writeFile('example2.js', 'updated2\\nupdated3');\n      }).throws('Too many lines changed');\n      assert.deepEqual(project.readFile('example2.js'), 'content');\n    });\n  });\n});\n"]}