{"version":3,"file":"ConversationHandler.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/ai_assistance/ConversationHandler.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as AiAssistanceModel from '../../models/ai_assistance/ai_assistance.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as AiAssistancePanel from '../../panels/ai_assistance/ai_assistance.js';\nimport * as Timeline from '../../panels/timeline/timeline.js';\nimport {\n  createAiAssistancePanel,\n  createNetworkRequest,\n  mockAidaClient,\n  openHistoryContextMenu\n} from '../../testing/AiAssistanceHelpers.js';\nimport {createTarget, registerNoopActions, updateHostConfig} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {createNetworkPanelForMockConnection} from '../../testing/NetworkHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\nimport * as Snackbars from '../../ui/components/snackbars/snackbars.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\ndescribeWithMockConnection('ConversationHandler', () => {\n  describe('handleExternalRequest', () => {\n    const explanation = 'I need more information';\n    let performSearchStub: sinon.SinonStub;\n\n    beforeEach(async () => {\n      AiAssistanceModel.ConversationHandler.removeInstance();  // maybe move out\n      registerNoopActions([\n        'elements.toggle-element-search', 'timeline.record-reload', 'timeline.toggle-recording',\n        'timeline.show-history', 'components.collect-garbage'\n      ]);\n      Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n\n        },\n        devToolsAiAssistanceNetworkAgent: {\n          enabled: true,\n        }\n      });\n\n      const target = createTarget();\n      performSearchStub = sinon.stub(target.domAgent(), 'invoke_performSearch')\n                              .resolves({searchId: 'uniqueId', resultCount: 0, getError: () => undefined});\n    });\n\n    describe('can be blocked', () => {\n      it('by a setting', async () => {\n        Common.Settings.moduleSetting('ai-assistance-enabled').set(false);\n        const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n          aidaClient: mockAidaClient([[{explanation}]]),\n          aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n        });\n        const generator = await conversationHandler.handleExternalRequest({\n          prompt: 'Please help me debug this problem',\n          conversationType: AiAssistanceModel.ConversationType.STYLING,\n        });\n        const response = await generator.next();\n        assert.strictEqual(response.value.type, 'error');\n        assert.strictEqual(\n            response.value.message,\n            'For AI features to be available, you need to enable AI assistance in DevTools settings.');\n      });\n\n      it('by feature availability', async () => {\n        const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n          aidaClient: mockAidaClient([[{explanation}]]),\n          aidaAvailability: Host.AidaClient.AidaAccessPreconditions.SYNC_IS_PAUSED,\n        });\n        const generator = await conversationHandler.handleExternalRequest({\n          prompt: 'Please help me debug this problem',\n          conversationType: AiAssistanceModel.ConversationType.STYLING,\n        });\n        const response = await generator.next();\n        assert.strictEqual(response.value.type, 'error');\n        assert.strictEqual(\n            response.value.message,\n            'This feature is only available when you sign into Chrome with your Google account.');\n      });\n\n      it('by user age', async () => {\n        updateHostConfig({\n          aidaAvailability: {\n            blockedByAge: true,\n          },\n          devToolsFreestyler: {\n            enabled: true,\n          },\n        });\n        const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n          aidaClient: mockAidaClient([[{explanation}]]),\n          aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n        });\n        const generator = await conversationHandler.handleExternalRequest({\n          prompt: 'Please help me debug this problem',\n          conversationType: AiAssistanceModel.ConversationType.STYLING\n        });\n        const response = await generator.next();\n        assert.strictEqual(response.value.type, 'error');\n        assert.strictEqual(\n            response.value.message, 'This feature is only available to users who are 18 years of age or older.');\n      });\n    });\n\n    it('returns an explanation for styling assistance requests', async () => {\n      const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n        aidaClient: mockAidaClient([[{explanation}]]),\n        aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n      });\n      const snackbarShowStub = sinon.stub(Snackbars.Snackbar.Snackbar, 'show');\n      const generator = await conversationHandler.handleExternalRequest(\n          {prompt: 'Please help me debug this problem', conversationType: AiAssistanceModel.ConversationType.STYLING});\n      const response = await generator.next();\n      assert.strictEqual(response.value.message, explanation);\n      sinon.assert.calledOnceWithExactly(snackbarShowStub, {message: 'DevTools received an external request'});\n    });\n\n    it('handles styling assistance requests which contain a selector', async () => {\n      const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n        aidaClient: mockAidaClient([[{explanation}]]),\n        aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n      });\n      const generator = await conversationHandler.handleExternalRequest({\n        prompt: 'Please help me debug this problem',\n        conversationType: AiAssistanceModel.ConversationType.STYLING,\n        selector: 'h1'\n      });\n      const response = await generator.next();\n      assert.strictEqual(response.value.message, explanation);\n      sinon.assert.calledOnce(performSearchStub);\n      assert.strictEqual(performSearchStub.getCall(0).args[0].query, 'h1');\n    });\n\n    it('returns an error if no answer could be generated', async () => {\n      const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n        aidaClient: mockAidaClient([\n          [{\n            functionCalls: [{\n              name: 'executeJavaScript',\n              args: {code: '$0.style.backgroundColor = \\'red\\';'},\n            }],\n            explanation: '',\n          }],\n        ]),\n        aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n      });\n      const generator = await conversationHandler.handleExternalRequest(\n          {prompt: 'Please help me debug this problem', conversationType: AiAssistanceModel.ConversationType.STYLING});\n      const response = await generator.next();\n      assert.strictEqual(response.value.type, 'error');\n      assert.strictEqual(response.value.message, 'Something went wrong. No answer was generated.');\n    });\n\n    it('persists external conversations to history', async () => {\n      const aidaClient = mockAidaClient([[{explanation}]]);\n      const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n        aidaClient,\n        aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n      });\n      const {view} = await createAiAssistancePanel({aidaClient});\n      const generator = await conversationHandler.handleExternalRequest(\n          {prompt: 'Please help me debug this problem', conversationType: AiAssistanceModel.ConversationType.STYLING});\n      await generator.next();\n      const {contextMenu, id} = openHistoryContextMenu(view.input, '[External] Please help me debug this problem');\n      assert.isDefined(id);\n      contextMenu.invokeHandler(id);\n      assert.isTrue((await view.nextInput).isReadOnly);\n      assert.deepEqual(view.input.messages, [\n        {\n          entity: AiAssistancePanel.ChatMessageEntity.USER,\n          imageInput: undefined,\n          text: 'Please help me debug this problem',\n        },\n        {\n          answer: explanation,\n          entity: AiAssistancePanel.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps: [],\n        },\n      ]);\n    });\n\n    it('can switch contexts', async () => {\n      const steps = [\n        {\n          contextDetails: [\n            {\n              text: 'Request URL: https://a.test\\n\\nRequest headers:\\ncontent-type: bar1',\n              title: 'Request',\n            },\n            {\n              text: 'Response Status: 200 \\n\\nResponse headers:\\ncontent-type: bar2\\nx-forwarded-for: bar3',\n              title: 'Response',\n            },\n            {\n              text:\n                  'Queued at (timestamp): 0 s\\nStarted at (timestamp): 0 s\\nConnection start (stalled) (duration): -\\nDuration (duration): -',\n              title: 'Timing',\n            },\n            {\n              text: '- URL: https://a.test',\n              title: 'Request initiator chain',\n            },\n          ],\n          isLoading: false,\n          sideEffect: undefined,\n          title: 'Analyzing network data',\n        },\n      ] as AiAssistancePanel.Step[];\n\n      await createNetworkPanelForMockConnection();\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n        },\n      });\n      const networkRequest = createNetworkRequest({\n        url: urlString`https://a.test`,\n      });\n      UI.Context.Context.instance().setFlavor(SDK.NetworkRequest.NetworkRequest, networkRequest);\n      Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n      const aidaClient = mockAidaClient([[{explanation: 'test'}], [{explanation: 'test2'}], [{explanation: 'test3'}]]);\n      const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n        aidaClient,\n        aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n      });\n      const {panel, view} = await createAiAssistancePanel({aidaClient});\n\n      panel.handleAction('drjones.network-floating-button');\n      (await view.nextInput).onTextSubmit('User question to DrJones?');\n      assert.deepEqual((await view.nextInput).messages, [\n        {\n          entity: AiAssistancePanel.ChatMessageEntity.USER,\n          text: 'User question to DrJones?',\n          imageInput: undefined,\n        },\n        {\n          answer: 'test',\n          entity: AiAssistancePanel.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps,\n        },\n      ]);\n\n      const generator = await conversationHandler.handleExternalRequest(\n          {prompt: 'Please help me debug this problem', conversationType: AiAssistanceModel.ConversationType.STYLING});\n      const response = await generator.next();\n      assert.strictEqual(response.value.message, 'test2');\n\n      view.input.onTextSubmit('Follow-up question to DrJones?');\n      assert.deepEqual((await view.nextInput).messages, [\n        {\n          entity: AiAssistancePanel.ChatMessageEntity.USER,\n          text: 'User question to DrJones?',\n          imageInput: undefined,\n        },\n        {\n          answer: 'test',\n          entity: AiAssistancePanel.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps,\n        },\n        {\n          entity: AiAssistancePanel.ChatMessageEntity.USER,\n          text: 'Follow-up question to DrJones?',\n          imageInput: undefined,\n        },\n        {\n          answer: 'test3',\n          entity: AiAssistancePanel.ChatMessageEntity.MODEL,\n          rpcId: undefined,\n          suggestions: undefined,\n          steps,\n        },\n      ]);\n    });\n\n    it('returns an explanation for network assistance requests', async () => {\n      await createNetworkPanelForMockConnection();\n      Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n      const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n        aidaClient: mockAidaClient([[{explanation}]]),\n        aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n      });\n      const snackbarShowStub = sinon.stub(Snackbars.Snackbar.Snackbar, 'show');\n\n      const request = createNetworkRequest();\n      const networkManager = sinon.createStubInstance(SDK.NetworkManager.NetworkManager, {\n        requestForURL: request,\n      });\n      sinon.stub(SDK.TargetManager.TargetManager.instance(), 'models').returns([networkManager]);\n\n      const generator = await conversationHandler.handleExternalRequest({\n        prompt: 'Please help me debug this problem',\n        conversationType: AiAssistanceModel.ConversationType.NETWORK,\n        requestUrl: 'https://localhost:8080/'\n      });\n      let response = await generator.next();\n      assert.strictEqual(response.value.message, 'Analyzing network data');\n      response = await generator.next();\n      assert.strictEqual(response.value.message, explanation);\n      sinon.assert.calledOnceWithExactly(snackbarShowStub, {message: 'DevTools received an external request'});\n    });\n\n    it('handles performance requests', async function() {\n      const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n        aidaClient: mockAidaClient([[{explanation}]]),\n        aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n      });\n\n      // Create a timeline panel that has a trace imported with insights.\n      const events = await TraceLoader.rawEvents(this, 'web-dev-with-commit.json.gz');\n      const traceModel = Trace.TraceModel.Model.createWithAllHandlers();\n      await traceModel.parse(events);\n      Timeline.TimelinePanel.TimelinePanel.instance({forceNew: true, isNode: false, traceModel});\n\n      const generator = await conversationHandler.handleExternalRequest({\n        prompt: 'Please help me debug this problem',\n        conversationType: AiAssistanceModel.ConversationType.PERFORMANCE,\n        data: Timeline.TimelinePanel.TimelinePanel.instance().getOrCreateExternalAIConversationData(),\n      });\n      let response = await generator.next();\n      assert.strictEqual(response.value.message, 'Analyzing trace');\n      response = await generator.next();\n      assert.strictEqual(response.value.message, explanation);\n    });\n  });\n});\n"]}