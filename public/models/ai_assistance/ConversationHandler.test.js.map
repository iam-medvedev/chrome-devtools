{"version":3,"file":"ConversationHandler.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/ai_assistance/ConversationHandler.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as AiAssistanceModel from '../../models/ai_assistance/ai_assistance.js';\nimport {\n  createNetworkRequest,\n  mockAidaClient,\n} from '../../testing/AiAssistanceHelpers.js';\nimport {registerNoopActions, updateHostConfig} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {createNetworkPanelForMockConnection} from '../../testing/NetworkHelpers.js';\nimport * as Snackbars from '../../ui/components/snackbars/snackbars.js';\n\ndescribeWithMockConnection('ConversationHandler', () => {\n  describe('handleExternalRequest', () => {\n    const explanation = 'I need more information';\n\n    beforeEach(async () => {\n      AiAssistanceModel.ConversationHandler.removeInstance();  // maybe move out\n      registerNoopActions([\n        'elements.toggle-element-search', 'timeline.record-reload', 'timeline.toggle-recording',\n        'timeline.show-history', 'components.collect-garbage'\n      ]);\n      Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n\n        },\n        devToolsAiAssistanceNetworkAgent: {\n          enabled: true,\n        }\n      });\n    });\n\n    describe('can be blocked', () => {\n      it('by a setting', async () => {\n        Common.Settings.moduleSetting('ai-assistance-enabled').set(false);\n        const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n          aidaClient: mockAidaClient([[{explanation}]]),\n          aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n        });\n        const generator = await conversationHandler.handleExternalRequest({\n          prompt: 'Please help me debug this problem',\n          conversationType: AiAssistanceModel.ConversationType.STYLING,\n        });\n        const response = await generator.next();\n        assert.strictEqual(response.value.type, 'error');\n        assert.strictEqual(\n            response.value.message,\n            'For AI features to be available, you need to enable AI assistance in DevTools settings.');\n      });\n\n      it('by feature availability', async () => {\n        const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n          aidaClient: mockAidaClient([[{explanation}]]),\n          aidaAvailability: Host.AidaClient.AidaAccessPreconditions.SYNC_IS_PAUSED,\n        });\n        const generator = await conversationHandler.handleExternalRequest({\n          prompt: 'Please help me debug this problem',\n          conversationType: AiAssistanceModel.ConversationType.STYLING,\n        });\n        const response = await generator.next();\n        assert.strictEqual(response.value.type, 'error');\n        assert.strictEqual(\n            response.value.message,\n            'This feature is only available when you sign into Chrome with your Google account.');\n      });\n\n      it('by user age', async () => {\n        updateHostConfig({\n          aidaAvailability: {\n            blockedByAge: true,\n          },\n          devToolsFreestyler: {\n            enabled: true,\n          },\n        });\n        const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n          aidaClient: mockAidaClient([[{explanation}]]),\n          aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n        });\n        const generator = await conversationHandler.handleExternalRequest({\n          prompt: 'Please help me debug this problem',\n          conversationType: AiAssistanceModel.ConversationType.STYLING\n        });\n        const response = await generator.next();\n        assert.strictEqual(response.value.type, 'error');\n        assert.strictEqual(\n            response.value.message, 'This feature is only available to users who are 18 years of age or older.');\n      });\n    });\n\n    it('returns an explanation for network assistance requests', async () => {\n      await createNetworkPanelForMockConnection();\n      Common.Settings.moduleSetting('ai-assistance-enabled').set(true);\n      const conversationHandler = AiAssistanceModel.ConversationHandler.instance({\n        aidaClient: mockAidaClient([[{explanation}]]),\n        aidaAvailability: Host.AidaClient.AidaAccessPreconditions.AVAILABLE,\n      });\n      const snackbarShowStub = sinon.stub(Snackbars.Snackbar.Snackbar, 'show');\n\n      const request = createNetworkRequest();\n      const networkManager = sinon.createStubInstance(SDK.NetworkManager.NetworkManager, {\n        requestForURL: request,\n      });\n      sinon.stub(SDK.TargetManager.TargetManager.instance(), 'models').returns([networkManager]);\n\n      const generator = await conversationHandler.handleExternalRequest({\n        prompt: 'Please help me debug this problem',\n        conversationType: AiAssistanceModel.ConversationType.NETWORK,\n        requestUrl: 'https://localhost:8080/'\n      });\n      let response = await generator.next();\n      assert.strictEqual(response.value.message, 'Analyzing network data');\n      response = await generator.next();\n      assert.strictEqual(response.value.message, explanation);\n      sinon.assert.calledOnceWithExactly(snackbarShowStub, {message: 'DevTools received an external request'});\n    });\n  });\n});\n"]}