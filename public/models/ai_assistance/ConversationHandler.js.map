{"version":3,"file":"ConversationHandler.js","sourceRoot":"","sources":["../../../../../../front_end/models/ai_assistance/ConversationHandler.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Snackbars from '../../ui/components/snackbars/snackbars.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {\n  type AiAgent,\n  type ExternalRequestResponse,\n  ExternalRequestResponseType,\n  type ResponseData,\n  ResponseType\n} from './agents/AiAgent.js';\nimport {FileAgent} from './agents/FileAgent.js';\nimport {NetworkAgent, RequestContext} from './agents/NetworkAgent.js';\nimport {PerformanceAgent} from './agents/PerformanceAgent.js';\nimport {StylingAgent, StylingAgentWithFunctionCalling} from './agents/StylingAgent.js';\nimport {\n  Conversation,\n  ConversationType,\n} from './AiHistoryStorage.js';\nimport {getDisabledReasons} from './AiUtils.js';\nimport type {ChangeManager} from './ChangeManager.js';\n\nexport interface ExternalStylingRequestParameters {\n  conversationType: ConversationType.STYLING;\n  prompt: string;\n  selector?: string;\n}\n\nexport interface ExternalNetworkRequestParameters {\n  conversationType: ConversationType.NETWORK;\n  prompt: string;\n  requestUrl: string;\n}\n\nexport interface ExternalPerformanceInsightsRequestParameters {\n  conversationType: ConversationType.PERFORMANCE_INSIGHT;\n  prompt: string;\n  insightTitle: string;\n}\n\nconst UIStrings = {\n  /**\n   * @description Notification shown to the user whenever DevTools receives an external request.\n   */\n  externalRequestReceived: '`DevTools` received an external request',\n} as const;\n\n/*\n* Strings that don't need to be translated at this time.\n*/\nconst UIStringsNotTranslate = {\n  /**\n   * @description Error message shown when AI assistance is not enabled in DevTools settings.\n   */\n  enableInSettings: 'For AI features to be available, you need to enable AI assistance in DevTools settings.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('models/ai_assistance/ConversationHandler.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst lockedString = i18n.i18n.lockedString;\n\nfunction isAiAssistanceStylingWithFunctionCallingEnabled(): boolean {\n  return Boolean(Root.Runtime.hostConfig.devToolsFreestyler?.functionCalling);\n}\n\nfunction isAiAssistanceServerSideLoggingEnabled(): boolean {\n  return !Root.Runtime.hostConfig.aidaAvailability?.disallowLogging;\n}\n\nasync function inspectNetworkRequestByUrl(selector: string): Promise<SDK.NetworkRequest.NetworkRequest|null> {\n  const networkManagers =\n      SDK.TargetManager.TargetManager.instance().models(SDK.NetworkManager.NetworkManager, {scoped: true});\n\n  const results = networkManagers\n                      .map(networkManager => {\n                        let request = networkManager.requestForURL(Platform.DevToolsPath.urlString`${selector}`);\n                        if (!request && selector.at(-1) === '/') {\n                          request =\n                              networkManager.requestForURL(Platform.DevToolsPath.urlString`${selector.slice(0, -1)}`);\n                        } else if (!request && selector.at(-1) !== '/') {\n                          request = networkManager.requestForURL(Platform.DevToolsPath.urlString`${selector}/`);\n                        }\n                        return request;\n                      })\n                      .filter(req => !!req);\n  const request = results.at(0);\n\n  return request ?? null;\n}\n\nlet conversationHandlerInstance: ConversationHandler|undefined;\n\nexport class ConversationHandler {\n  #aiAssistanceEnabledSetting: Common.Settings.Setting<boolean>|undefined;\n  #aidaClient: Host.AidaClient.AidaClient;\n  #aidaAvailability?: Host.AidaClient.AidaAccessPreconditions;\n\n  private constructor(\n      aidaClient: Host.AidaClient.AidaClient, aidaAvailability?: Host.AidaClient.AidaAccessPreconditions) {\n    this.#aidaClient = aidaClient;\n    if (aidaAvailability) {\n      this.#aidaAvailability = aidaAvailability;\n    }\n    this.#aiAssistanceEnabledSetting = this.#getAiAssistanceEnabledSetting();\n  }\n\n  static instance(opts?: {\n    aidaClient?: Host.AidaClient.AidaClient,\n    aidaAvailability?: Host.AidaClient.AidaAccessPreconditions,\n    forceNew?: boolean,\n  }): ConversationHandler {\n    if (opts?.forceNew || conversationHandlerInstance === undefined) {\n      const aidaClient = opts?.aidaClient ?? new Host.AidaClient.AidaClient();\n      conversationHandlerInstance = new ConversationHandler(aidaClient, opts?.aidaAvailability ?? undefined);\n    }\n    return conversationHandlerInstance;\n  }\n\n  static removeInstance(): void {\n    conversationHandlerInstance = undefined;\n  }\n\n  #getAiAssistanceEnabledSetting(): Common.Settings.Setting<boolean>|undefined {\n    try {\n      return Common.Settings.moduleSetting('ai-assistance-enabled') as Common.Settings.Setting<boolean>;\n    } catch {\n      return;\n    }\n  }\n\n  async #getDisabledReasons(): Promise<Platform.UIString.LocalizedString[]> {\n    if (this.#aidaAvailability === undefined) {\n      this.#aidaAvailability = await Host.AidaClient.AidaClient.checkAccessPreconditions();\n    }\n    return getDisabledReasons(this.#aidaAvailability);\n  }\n\n  /**\n   * Handles an external request using the given prompt and uses the\n   * conversation type to use the correct agent.\n   */\n  async handleExternalRequest(\n      parameters: ExternalStylingRequestParameters|ExternalNetworkRequestParameters|\n      ExternalPerformanceInsightsRequestParameters,\n      ): Promise<AsyncGenerator<ExternalRequestResponse, ExternalRequestResponse>> {\n    // eslint-disable-next-line require-yield\n    async function*\n        generateErrorResponse(message: string): AsyncGenerator<ExternalRequestResponse, ExternalRequestResponse> {\n      return {\n        type: ExternalRequestResponseType.ERROR,\n        message,\n      };\n    }\n\n    try {\n      Snackbars.Snackbar.Snackbar.show({message: i18nString(UIStrings.externalRequestReceived)});\n      const disabledReasons = await this.#getDisabledReasons();\n      const aiAssistanceSetting = this.#aiAssistanceEnabledSetting?.getIfNotDisabled();\n      if (!aiAssistanceSetting) {\n        disabledReasons.push(lockedString(UIStringsNotTranslate.enableInSettings));\n      }\n      if (disabledReasons.length > 0) {\n        return generateErrorResponse(disabledReasons.join(' '));\n      }\n\n      void VisualLogging.logFunctionCall(`start-conversation-${parameters.conversationType}`, 'external');\n      switch (parameters.conversationType) {\n        case ConversationType.STYLING: {\n          return generateErrorResponse('Not implemented here');\n        }\n        case ConversationType.PERFORMANCE_INSIGHT:\n          return generateErrorResponse('Not implemented here');\n        case ConversationType.NETWORK:\n          if (!parameters.requestUrl) {\n            return generateErrorResponse('The url is required for debugging a network request.');\n          }\n          return this.#handleExternalNetworkConversation(parameters.prompt, parameters.requestUrl);\n      }\n    } catch (error) {\n      return generateErrorResponse(error.message);\n    }\n  }\n\n  async *\n      handleConversationWithHistory(\n          items: AsyncIterable<ResponseData, void, void>, conversation: Conversation|undefined):\n          AsyncGenerator<ResponseData, void, void> {\n    for await (const data of items) {\n      // We don't want to save partial responses to the conversation history.\n      if (data.type !== ResponseType.ANSWER || data.complete) {\n        void conversation?.addHistoryItem(data);\n      }\n      yield data;\n    }\n  }\n\n  async *\n      #handleExternalNetworkConversation(prompt: string, requestUrl: string):\n          AsyncGenerator<ExternalRequestResponse, ExternalRequestResponse> {\n    const options = {\n      aidaClient: this.#aidaClient,\n      serverSideLoggingEnabled: isAiAssistanceServerSideLoggingEnabled(),\n    };\n    const networkAgent = new NetworkAgent(options);\n    const externalConversation = new Conversation(\n        ConversationType.NETWORK,\n        [],\n        networkAgent.id,\n        /* isReadOnly */ true,\n        /* isExternal */ true,\n    );\n\n    const request = await inspectNetworkRequestByUrl(requestUrl);\n    if (!request) {\n      return {\n        type: ExternalRequestResponseType.ERROR,\n        message: `Can't find request with the given selector ${requestUrl}`,\n      };\n    }\n    const generator = networkAgent.run(\n        prompt,\n        {\n          selected: new RequestContext(request),\n        },\n    );\n    const generatorWithHistory = this.handleConversationWithHistory(generator, externalConversation);\n    const devToolsLogs: object[] = [];\n    for await (const data of generatorWithHistory) {\n      // We don't want to save partial responses to the conversation history.\n      if (data.type !== ResponseType.ANSWER || data.complete) {\n        void externalConversation.addHistoryItem(data);\n        devToolsLogs.push(data);\n      }\n      if (data.type === ResponseType.CONTEXT || data.type === ResponseType.TITLE) {\n        yield {\n          type: ExternalRequestResponseType.NOTIFICATION,\n          message: data.title,\n        };\n      }\n      if (data.type === ResponseType.SIDE_EFFECT) {\n        data.confirm(true);\n      }\n      if (data.type === ResponseType.ANSWER && data.complete) {\n        return {\n          type: ExternalRequestResponseType.ANSWER,\n          message: data.text,\n          devToolsLogs,\n        };\n      }\n    }\n    return {\n      type: ExternalRequestResponseType.ERROR,\n      message: 'Something went wrong. No answer was generated.',\n    };\n  }\n\n  createAgent(conversationType: ConversationType, changeManager?: ChangeManager): AiAgent<unknown> {\n    const options = {\n      aidaClient: this.#aidaClient,\n      serverSideLoggingEnabled: isAiAssistanceServerSideLoggingEnabled(),\n    };\n    let agent: AiAgent<unknown>;\n    switch (conversationType) {\n      case ConversationType.STYLING: {\n        agent = new StylingAgent({\n          ...options,\n          changeManager,\n        });\n        if (isAiAssistanceStylingWithFunctionCallingEnabled()) {\n          agent = new StylingAgentWithFunctionCalling({\n            ...options,\n            changeManager,\n          });\n        }\n\n        break;\n      }\n      case ConversationType.NETWORK: {\n        agent = new NetworkAgent(options);\n        break;\n      }\n      case ConversationType.FILE: {\n        agent = new FileAgent(options);\n        break;\n      }\n      case ConversationType.PERFORMANCE_INSIGHT:\n      case ConversationType.PERFORMANCE: {\n        agent = new PerformanceAgent(options, conversationType);\n        break;\n      }\n    }\n    return agent;\n  }\n}\n"]}