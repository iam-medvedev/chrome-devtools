{
  "version": 3,
  "sources": ["../../../../../../front_end/models/har/HARFormat.ts", "../../../../../../front_end/models/har/Importer.ts", "../../../../../../front_end/models/har/Log.ts", "../../../../../../front_end/models/har/Writer.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nclass HARBase {\n  readonly custom: Map<string, any>;\n  constructor(data: any) {\n    if (!data || typeof data !== 'object') {\n      throw new Error('First parameter is expected to be an object');\n    }\n    this.custom = new Map();\n  }\n\n  static safeDate(data: any): Date {\n    const date = new Date(data);\n    if (!Number.isNaN(date.getTime())) {\n      return date;\n    }\n    throw new Error('Invalid date format');\n  }\n\n  static safeNumber(data: any): number {\n    const result = Number(data);\n    if (!Number.isNaN(result)) {\n      return result;\n    }\n    throw new Error('Casting to number results in NaN');\n  }\n\n  static optionalNumber(data: any): number|undefined {\n    return data !== undefined ? HARBase.safeNumber(data) : undefined;\n  }\n\n  static optionalString(data: any): string|undefined {\n    return data !== undefined ? String(data) : undefined;\n  }\n\n  customAsString(name: string): string|undefined {\n    const value = this.custom.get(name);\n    if (!value) {\n      return undefined;\n    }\n    return String(value);\n  }\n\n  customAsNumber(name: string): number|undefined {\n    const value = this.custom.get(name);\n    if (!value) {\n      return undefined;\n    }\n    const numberValue = Number(value);\n    if (Number.isNaN(numberValue)) {\n      return undefined;\n    }\n    return numberValue;\n  }\n\n  customAsArray(name: string): any[]|undefined {\n    const value = this.custom.get(name);\n    if (!value) {\n      return undefined;\n    }\n    return Array.isArray(value) ? value : undefined;\n  }\n\n  customInitiator(): HARInitiator|undefined {\n    return this.custom.get('initiator');\n  }\n}\n\nexport class HARRoot extends HARBase {\n  log: HARLog;\n  constructor(data: any) {\n    super(data);\n    this.log = new HARLog(data['log']);\n  }\n}\n\nexport class HARLog extends HARBase {\n  version: string;\n  creator: HARCreator;\n  browser: HARCreator|undefined;\n  pages: HARPage[];\n  entries: HAREntry[];\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.version = String(data['version']);\n    this.creator = new HARCreator(data['creator']);\n    this.browser = data['browser'] ? new HARCreator(data['browser']) : undefined;\n    this.pages = Array.isArray(data['pages']) ? data['pages'].map(page => new HARPage(page)) : [];\n    if (!Array.isArray(data['entries'])) {\n      throw new Error('log.entries is expected to be an array');\n    }\n    this.entries = data['entries'].map(entry => new HAREntry(entry));\n    this.comment = HARBase.optionalString(data['comment']);\n  }\n}\n\nclass HARCreator extends HARBase {\n  name: string;\n  version: string;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.name = String(data['name']);\n    this.version = String(data['version']);\n    this.comment = HARBase.optionalString(data['comment']);\n  }\n}\n\nexport class HARPage extends HARBase {\n  startedDateTime: Date;\n  id: string;\n  title: string;\n  pageTimings: HARPageTimings;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.startedDateTime = HARBase.safeDate(data['startedDateTime']);\n    this.id = String(data['id']);\n    this.title = String(data['title']);\n    this.pageTimings = new HARPageTimings(data['pageTimings']);\n    this.comment = HARBase.optionalString(data['comment']);\n  }\n}\n\nclass HARPageTimings extends HARBase {\n  onContentLoad: number|undefined;\n  onLoad: number|undefined;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.onContentLoad = HARBase.optionalNumber(data['onContentLoad']);\n    this.onLoad = HARBase.optionalNumber(data['onLoad']);\n    this.comment = HARBase.optionalString(data['comment']);\n  }\n}\n\nexport class HAREntry extends HARBase {\n  pageref: string|undefined;\n  startedDateTime: Date;\n  time: number;\n  request: HARRequest;\n  response: HARResponse;\n  timings: HARTimings;\n  serverIPAddress: string|undefined;\n  connection: string|undefined;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.pageref = HARBase.optionalString(data['pageref']);\n    this.startedDateTime = HARBase.safeDate(data['startedDateTime']);\n    this.time = HARBase.safeNumber(data['time']);\n    this.request = new HARRequest(data['request']);\n    this.response = new HARResponse(data['response']);\n    this.timings = new HARTimings(data['timings']);\n    this.serverIPAddress = HARBase.optionalString(data['serverIPAddress']);\n    this.connection = HARBase.optionalString(data['connection']);\n    this.comment = HARBase.optionalString(data['comment']);\n\n    // Chrome specific.\n    this.custom.set('connectionId', HARBase.optionalString(data['_connectionId']));\n    this.custom.set('fromCache', HARBase.optionalString(data['_fromCache']));\n    this.custom.set('initiator', this.importInitiator(data['_initiator']));\n    this.custom.set('priority', HARBase.optionalString(data['_priority']));\n    this.custom.set('resourceType', HARBase.optionalString(data['_resourceType']));\n    this.custom.set('webSocketMessages', this.importWebSocketMessages(data['_webSocketMessages']));\n  }\n\n  private importInitiator(initiator: any): HARInitiator|undefined {\n    if (typeof initiator !== 'object') {\n      return;\n    }\n\n    return new HARInitiator(initiator);\n  }\n\n  private importWebSocketMessages(inputMessages: any): HARWebSocketMessage[]|undefined {\n    if (!Array.isArray(inputMessages)) {\n      return;\n    }\n\n    const outputMessages = [];\n    for (const message of inputMessages) {\n      if (typeof message !== 'object') {\n        return;\n      }\n      outputMessages.push(new HARWebSocketMessage(message));\n    }\n    return outputMessages;\n  }\n}\n\nclass HARRequest extends HARBase {\n  method: string;\n  url: Platform.DevToolsPath.UrlString;\n  httpVersion: string;\n  cookies: HARCookie[];\n  headers: HARHeader[];\n  queryString: HARQueryString[];\n  postData: HARPostData|undefined;\n  headersSize: number;\n  bodySize: number;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.method = String(data['method']);\n    this.url = String(data['url']) as Platform.DevToolsPath.UrlString;\n    this.httpVersion = String(data['httpVersion']);\n    this.cookies = Array.isArray(data['cookies']) ? data['cookies'].map(cookie => new HARCookie(cookie)) : [];\n    this.headers = Array.isArray(data['headers']) ? data['headers'].map(header => new HARHeader(header)) : [];\n    this.queryString = Array.isArray(data['queryString']) ? data['queryString'].map(qs => new HARQueryString(qs)) : [];\n    this.postData = data['postData'] ? new HARPostData(data['postData']) : undefined;\n    this.headersSize = HARBase.safeNumber(data['headersSize']);\n    this.bodySize = HARBase.safeNumber(data['bodySize']);\n    this.comment = HARBase.optionalString(data['comment']);\n  }\n}\n\nclass HARResponse extends HARBase {\n  status: number;\n  statusText: string;\n  httpVersion: string;\n  cookies: HARCookie[];\n  headers: HARHeader[];\n  content: HARContent;\n  redirectURL: string;\n  headersSize: number;\n  bodySize: number;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.status = HARBase.safeNumber(data['status']);\n    this.statusText = String(data['statusText']);\n    this.httpVersion = String(data['httpVersion']);\n    this.cookies = Array.isArray(data['cookies']) ? data['cookies'].map(cookie => new HARCookie(cookie)) : [];\n    this.headers = Array.isArray(data['headers']) ? data['headers'].map(header => new HARHeader(header)) : [];\n    this.content = new HARContent(data['content']);\n    this.redirectURL = String(data['redirectURL']);\n    this.headersSize = HARBase.safeNumber(data['headersSize']);\n    this.bodySize = HARBase.safeNumber(data['bodySize']);\n    this.comment = HARBase.optionalString(data['comment']);\n\n    // Chrome specific.\n    this.custom.set('transferSize', HARBase.optionalNumber(data['_transferSize']));\n    this.custom.set('error', HARBase.optionalString(data['_error']));\n    this.custom.set('fetchedViaServiceWorker', Boolean(data['_fetchedViaServiceWorker']));\n    this.custom.set('responseCacheStorageCacheName', HARBase.optionalString(data['_responseCacheStorageCacheName']));\n    this.custom.set('serviceWorkerResponseSource', HARBase.optionalString(data['_serviceWorkerResponseSource']));\n    this.custom.set(\n        'serviceWorkerRouterRuleIdMatched', HARBase.optionalNumber(data['_serviceWorkerRouterRuleIdMatched']));\n    this.custom.set(\n        'serviceWorkerRouterMatchedSourceType', HARBase.optionalString(data['_serviceWorkerRouterMatchedSourceType']));\n    this.custom.set(\n        'serviceWorkerRouterActualSourceType', HARBase.optionalString(data['_serviceWorkerRouterActualSourceType']));\n  }\n}\n\nexport class HARCookie extends HARBase {\n  name: string;\n  value: string;\n  path: string|undefined;\n  domain: string|undefined;\n  expires: Date|undefined;\n  httpOnly: boolean|undefined;\n  secure: boolean|undefined;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.name = String(data['name']);\n    this.value = String(data['value']);\n    this.path = HARBase.optionalString(data['path']);\n    this.domain = HARBase.optionalString(data['domain']);\n    this.expires = data['expires'] ? HARBase.safeDate(data['expires']) : undefined;\n    this.httpOnly = data['httpOnly'] !== undefined ? Boolean(data['httpOnly']) : undefined;\n    this.secure = data['secure'] !== undefined ? Boolean(data['secure']) : undefined;\n    this.comment = HARBase.optionalString(data['comment']);\n  }\n}\n\nclass HARHeader extends HARBase {\n  name: string;\n  value: string;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.name = String(data['name']);\n    this.value = String(data['value']);\n    this.comment = HARBase.optionalString(data['comment']);\n  }\n}\n\nclass HARQueryString extends HARBase {\n  name: string;\n  value: string;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.name = String(data['name']);\n    this.value = String(data['value']);\n    this.comment = HARBase.optionalString(data['comment']);\n  }\n}\n\nclass HARPostData extends HARBase {\n  mimeType: string;\n  params: HARParam[];\n  text: string;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.mimeType = String(data['mimeType']);\n    this.params = Array.isArray(data['params']) ? data['params'].map(param => new HARParam(param)) : [];\n    this.text = String(data['text']);\n    this.comment = HARBase.optionalString(data['comment']);\n  }\n}\n\nexport class HARParam extends HARBase {\n  name: string;\n  value: string|undefined;\n  fileName: string|undefined;\n  contentType: string|undefined;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.name = String(data['name']);\n    this.value = HARBase.optionalString(data['value']);\n    this.fileName = HARBase.optionalString(data['fileName']);\n    this.contentType = HARBase.optionalString(data['contentType']);\n    this.comment = HARBase.optionalString(data['comment']);\n  }\n}\n\nclass HARContent extends HARBase {\n  size: number;\n  compression: number|undefined;\n  mimeType: string;\n  text: string|undefined;\n  encoding: string|undefined;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.size = HARBase.safeNumber(data['size']);\n    this.compression = HARBase.optionalNumber(data['compression']);\n    this.mimeType = String(data['mimeType']);\n    this.text = HARBase.optionalString(data['text']);\n    this.encoding = HARBase.optionalString(data['encoding']);\n    this.comment = HARBase.optionalString(data['comment']);\n  }\n}\n\nexport class HARTimings extends HARBase {\n  blocked: number|undefined;\n  dns: number|undefined;\n  connect: number|undefined;\n  send: number;\n  wait: number;\n  receive: number;\n  ssl: number|undefined;\n  comment: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.blocked = HARBase.optionalNumber(data['blocked']);\n    this.dns = HARBase.optionalNumber(data['dns']);\n    this.connect = HARBase.optionalNumber(data['connect']);\n    this.send = HARBase.safeNumber(data['send']);\n    this.wait = HARBase.safeNumber(data['wait']);\n    this.receive = HARBase.safeNumber(data['receive']);\n    this.ssl = HARBase.optionalNumber(data['ssl']);\n    this.comment = HARBase.optionalString(data['comment']);\n\n    // Chrome specific.\n    this.custom.set('blocked_queueing', HARBase.optionalNumber(data['_blocked_queueing']));\n    this.custom.set('blocked_proxy', HARBase.optionalNumber(data['_blocked_proxy']));\n\n    // Service Worker timing info (Chrome specific).\n    this.custom.set('workerStart', HARBase.optionalNumber(data['_workerStart']));\n    this.custom.set('workerReady', HARBase.optionalNumber(data['_workerReady']));\n    this.custom.set('workerFetchStart', HARBase.optionalNumber(data['_workerFetchStart']));\n    this.custom.set('workerRespondWithSettled', HARBase.optionalNumber(data['_workerRespondWithSettled']));\n    this.custom.set('workerRouterEvaluationStart', HARBase.optionalNumber(data['_workerRouterEvaluationStart']));\n    this.custom.set('workerCacheLookupStart', HARBase.optionalNumber(data['_workerCacheLookupStart']));\n  }\n}\n\nexport class HARInitiator extends HARBase {\n  type: Protocol.Network.InitiatorType;\n  url?: string;\n  lineNumber?: number;\n  requestId?: Protocol.Network.RequestId;\n  stack?: HARStack;\n  /**\n   * Based on Protocol.Network.Initiator defined in browser_protocol.pdl\n   */\n  constructor(data: any) {\n    super(data);\n    this.type = (HARBase.optionalString(data['type']) ?? SDK.NetworkRequest.InitiatorType.OTHER) as\n        Protocol.Network.InitiatorType;\n    this.url = HARBase.optionalString(data['url']);\n    this.lineNumber = HARBase.optionalNumber(data['lineNumber']);\n    this.requestId = HARBase.optionalString(data['requestId']) as Protocol.Network.RequestId;\n    if (data['stack']) {\n      this.stack = new HARStack(data['stack']);\n    }\n  }\n}\n\nexport class HARStack extends HARBase {\n  description?: string;\n  callFrames: HARCallFrame[];\n  parent?: HARStack;\n  parentId?: {\n    id: string,\n    debuggerId?: Protocol.Runtime.UniqueDebuggerId,\n  };\n  /**\n   * Based on Protocol.Runtime.StackTrace defined in browser_protocol.pdl\n   */\n  constructor(data: any) {\n    super(data);\n\n    this.callFrames = Array.isArray(data.callFrames) ?\n        data.callFrames.map((item: any) => item ? new HARCallFrame(item) : null).filter(Boolean) :\n        [];\n\n    if (data['parent']) {\n      this.parent = new HARStack(data['parent']);\n    }\n\n    this.description = HARBase.optionalString(data['description']);\n\n    const parentId = data['parentId'];\n    if (parentId) {\n      this.parentId = {\n        id: HARBase.optionalString(parentId['id']) ?? '',\n        debuggerId: HARBase.optionalString(parentId['debuggerId']) as Protocol.Runtime.UniqueDebuggerId | undefined,\n      };\n    }\n  }\n}\n\nexport class HARCallFrame extends HARBase {\n  functionName: string;\n  scriptId: Protocol.Runtime.ScriptId;\n  url = '';\n  lineNumber = -1;\n  columnNumber = -1;\n  /**\n   * Based on Protocol.Runtime.CallFrame defined in browser_protocol.pdl\n   */\n  constructor(data: any) {\n    super(data);\n\n    this.functionName = HARBase.optionalString(data['functionName']) ?? '';\n    this.scriptId = (HARBase.optionalString(data['scriptId']) ?? '') as Protocol.Runtime.ScriptId;\n    this.url = HARBase.optionalString(data['url']) ?? '';\n    this.lineNumber = HARBase.optionalNumber(data['lineNumber']) ?? -1;\n    this.columnNumber = HARBase.optionalNumber(data['columnNumber']) ?? -1;\n  }\n}\n\nclass HARWebSocketMessage extends HARBase {\n  time: number|undefined;\n  opcode: number|undefined;\n  data: string|undefined;\n  type: string|undefined;\n  constructor(data: any) {\n    super(data);\n    this.time = HARBase.optionalNumber(data['time']);\n    this.opcode = HARBase.optionalNumber(data['opcode']);\n    this.data = HARBase.optionalString(data['data']);\n    this.type = HARBase.optionalString(data['type']);\n  }\n}\n", "// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\n\nimport type {HARCookie, HAREntry, HARLog, HARPage, HARTimings} from './HARFormat.js';\n\nexport class Importer {\n  static requestsFromHARLog(log: HARLog): SDK.NetworkRequest.NetworkRequest[] {\n    const pages = new Map<string, HARPage>();\n    for (const page of log.pages) {\n      pages.set(page.id, page);\n    }\n\n    log.entries.sort((a, b) => a.startedDateTime.valueOf() - b.startedDateTime.valueOf());\n\n    const pageLoads = new Map<string, SDK.PageLoad.PageLoad>();\n    const requests: SDK.NetworkRequest.NetworkRequest[] = [];\n    for (const entry of log.entries) {\n      const pageref = entry.pageref;\n      let pageLoad: SDK.PageLoad.PageLoad|(SDK.PageLoad.PageLoad | undefined) =\n          pageref ? pageLoads.get(pageref) : undefined;\n      const documentURL = pageLoad ? pageLoad.mainRequest.url() : entry.request.url;\n\n      let initiator: Protocol.Network.Initiator|null = null;\n      const initiatorEntry = entry.customInitiator();\n      if (initiatorEntry) {\n        initiator = {\n          type: (initiatorEntry.type),\n          url: initiatorEntry.url,\n          lineNumber: initiatorEntry.lineNumber,\n          requestId: initiatorEntry.requestId,\n          stack: initiatorEntry.stack,\n        };\n      }\n      const request = SDK.NetworkRequest.NetworkRequest.createWithoutBackendRequest(\n          'har-' + requests.length, entry.request.url, documentURL, initiator);\n      const page = pageref ? pages.get(pageref) : undefined;\n      if (!pageLoad && pageref && page) {\n        pageLoad = Importer.buildPageLoad(page, request);\n        pageLoads.set(pageref, pageLoad);\n      }\n      Importer.fillRequestFromHAREntry(request, entry, pageLoad);\n      if (pageLoad) {\n        pageLoad.bindRequest(request);\n      }\n      requests.push(request);\n    }\n    return requests;\n  }\n\n  static buildPageLoad(page: HARPage, mainRequest: SDK.NetworkRequest.NetworkRequest): SDK.PageLoad.PageLoad {\n    const pageLoad = new SDK.PageLoad.PageLoad(mainRequest);\n    pageLoad.startTime = page.startedDateTime.valueOf();\n    pageLoad.contentLoadTime = Number(page.pageTimings.onContentLoad) * 1000;\n    pageLoad.loadTime = Number(page.pageTimings.onLoad) * 1000;\n    return pageLoad;\n  }\n\n  static fillCookieFromHARCookie(type: SDK.Cookie.Type, harCookie: HARCookie): SDK.Cookie.Cookie {\n    const cookie = new SDK.Cookie.Cookie(harCookie.name, harCookie.value, type);\n    if (harCookie.path) {\n      cookie.addAttribute(SDK.Cookie.Attribute.PATH, harCookie.path);\n    }\n    if (harCookie.domain) {\n      cookie.addAttribute(SDK.Cookie.Attribute.DOMAIN, harCookie.domain);\n    }\n    if (harCookie.expires) {\n      cookie.addAttribute(SDK.Cookie.Attribute.EXPIRES, harCookie.expires.getTime());\n    }\n    if (harCookie.httpOnly) {\n      cookie.addAttribute(SDK.Cookie.Attribute.HTTP_ONLY);\n    }\n    if (harCookie.secure) {\n      cookie.addAttribute(SDK.Cookie.Attribute.SECURE);\n    }\n    return cookie;\n  }\n\n  static fillRequestFromHAREntry(\n      request: SDK.NetworkRequest.NetworkRequest, entry: HAREntry, pageLoad: SDK.PageLoad.PageLoad|undefined): void {\n    // Request data.\n    if (entry.request.postData) {\n      request.setRequestFormData(true, entry.request.postData.text);\n    } else {\n      request.setRequestFormData(false, null);\n    }\n    request.connectionId = entry.customAsString('connectionId') || '';\n    request.requestMethod = entry.request.method;\n    request.setRequestHeaders(entry.request.headers);\n\n    // Response data.\n    if (entry.response.content.mimeType && entry.response.content.mimeType !== 'x-unknown') {\n      request.mimeType = (entry.response.content.mimeType as Platform.MimeType.MimeType);\n    }\n    request.responseHeaders = entry.response.headers;\n    request.statusCode = entry.response.status;\n    request.statusText = entry.response.statusText;\n    let protocol = entry.response.httpVersion.toLowerCase();\n    if (protocol === 'http/2.0') {\n      protocol = 'h2';\n    }\n    request.protocol = protocol.replace(/^http\\/2\\.0?\\+quic/, 'http/2+quic');\n\n    // Timing data.\n    const issueTime = entry.startedDateTime.getTime() / 1000;\n    request.setIssueTime(issueTime, issueTime);\n\n    // Content data.\n    const contentSize = entry.response.content.size > 0 ? entry.response.content.size : 0;\n    const headersSize = entry.response.headersSize > 0 ? entry.response.headersSize : 0;\n    const bodySize = entry.response.bodySize > 0 ? entry.response.bodySize : 0;\n    request.resourceSize = contentSize || (headersSize + bodySize);\n    let transferSize = entry.response.customAsNumber('transferSize');\n    if (transferSize === undefined) {\n      transferSize = entry.response.headersSize + entry.response.bodySize;\n    }\n    request.setTransferSize(transferSize >= 0 ? transferSize : 0);\n\n    const fromCache = entry.customAsString('fromCache');\n    if (fromCache === 'memory') {\n      request.setFromMemoryCache();\n    } else if (fromCache === 'disk') {\n      request.setFromDiskCache();\n    }\n\n    const contentText = entry.response.content.text;\n    const isBase64 = entry.response.content.encoding === 'base64';\n    const {mimeType, charset} = Platform.MimeType.parseContentType(entry.response.content.mimeType);\n\n    request.setContentDataProvider(\n        async () =>\n            new TextUtils.ContentData.ContentData(contentText ?? '', isBase64, mimeType ?? '', charset ?? undefined));\n\n    // Timing data.\n    Importer.setupTiming(request, issueTime, entry.time, entry.timings);\n\n    // Meta data.\n    request.setRemoteAddress(entry.serverIPAddress || '', Number(entry.connection) || 80);\n    request.setResourceType(Importer.getResourceType(request, entry, pageLoad));\n\n    // Request cookies.\n    const includedRequestCookies = entry.request.cookies.map(\n        cookie => ({\n          cookie: this.fillCookieFromHARCookie(SDK.Cookie.Type.REQUEST, cookie),\n          exemptionReason: undefined,\n        }),\n    );\n    request.setIncludedRequestCookies(includedRequestCookies);\n\n    // Response cookies.\n    const responseCookies =\n        entry.response.cookies.map(this.fillCookieFromHARCookie.bind(this, SDK.Cookie.Type.RESPONSE));\n    request.responseCookies = responseCookies;\n\n    const priority = entry.customAsString('priority');\n    // @ts-expect-error This accesses the globalThis['Protocol'] where the enum is an actual JS object and not just a TS const enum.\n    if (priority && Protocol.Network.ResourcePriority.hasOwnProperty(priority)) {\n      request.setPriority((priority as Protocol.Network.ResourcePriority));\n    }\n\n    const messages = entry.customAsArray('webSocketMessages');\n    if (messages) {\n      for (const message of messages) {\n        if (message.time === undefined) {\n          continue;\n        }\n        if (!Object.values(SDK.NetworkRequest.WebSocketFrameType).includes(message.type)) {\n          continue;\n        }\n        if (message.opcode === undefined) {\n          continue;\n        }\n        if (message.data === undefined) {\n          continue;\n        }\n\n        const mask = message.type === SDK.NetworkRequest.WebSocketFrameType.Send;\n        request.addFrame({time: message.time, text: message.data, opCode: message.opcode, mask, type: message.type});\n      }\n    }\n\n    // Restore Service Worker related response.\n    request.fetchedViaServiceWorker = Boolean(entry.response.custom.get('fetchedViaServiceWorker'));\n    const serviceWorkerResponseSource = entry.response.customAsString('serviceWorkerResponseSource');\n    if (serviceWorkerResponseSource) {\n      // Should consist with the `Protocol.Network.ServiceWorkerResponseSource` enum class.\n      const sources = new Set<Protocol.Network.ServiceWorkerResponseSource>([\n        Protocol.Network.ServiceWorkerResponseSource.CacheStorage,\n        Protocol.Network.ServiceWorkerResponseSource.FallbackCode,\n        Protocol.Network.ServiceWorkerResponseSource.HttpCache,\n        Protocol.Network.ServiceWorkerResponseSource.Network,\n      ]);\n      if (sources.has(serviceWorkerResponseSource as Protocol.Network.ServiceWorkerResponseSource)) {\n        request.setServiceWorkerResponseSource(\n            serviceWorkerResponseSource as Protocol.Network.ServiceWorkerResponseSource);\n      }\n    }\n    const responseCacheStorageCacheName = entry.response.customAsString('responseCacheStorageCacheName');\n    if (responseCacheStorageCacheName) {\n      request.setResponseCacheStorageCacheName(responseCacheStorageCacheName);\n    }\n\n    const ruleIdMatched = entry.response.customAsNumber('serviceWorkerRouterRuleIdMatched');\n    // The router rule ID is 1-indexed. We add router related optional fields\n    // only when there is a matched router rule.\n    if (ruleIdMatched !== undefined) {\n      const routerInfo: Protocol.Network.ServiceWorkerRouterInfo = {\n        ruleIdMatched,\n        matchedSourceType: entry.response.customAsString('serviceWorkerRouterMatchedSourceType') as\n            Protocol.Network.ServiceWorkerRouterSource,\n        actualSourceType: entry.response.customAsString('serviceWorkerRouterActualSourceType') as\n            Protocol.Network.ServiceWorkerRouterSource,\n      };\n      request.serviceWorkerRouterInfo = routerInfo;\n    }\n\n    request.finished = true;\n  }\n\n  static getResourceType(\n      request: SDK.NetworkRequest.NetworkRequest, entry: HAREntry,\n      pageLoad: SDK.PageLoad.PageLoad|undefined): Common.ResourceType.ResourceType {\n    const customResourceTypeName = entry.customAsString('resourceType');\n    if (customResourceTypeName) {\n      const customResourceType = Common.ResourceType.ResourceType.fromName(customResourceTypeName);\n      if (customResourceType) {\n        return customResourceType;\n      }\n    }\n\n    if (pageLoad && pageLoad.mainRequest === request) {\n      return Common.ResourceType.resourceTypes.Document;\n    }\n\n    const resourceTypeFromMime = Common.ResourceType.ResourceType.fromMimeType(entry.response.content.mimeType);\n    if (resourceTypeFromMime !== Common.ResourceType.resourceTypes.Other) {\n      return resourceTypeFromMime;\n    }\n\n    const resourceTypeFromUrl = Common.ResourceType.ResourceType.fromURL(entry.request.url);\n    if (resourceTypeFromUrl) {\n      return resourceTypeFromUrl;\n    }\n\n    return Common.ResourceType.resourceTypes.Other;\n  }\n\n  static setupTiming(\n      request: SDK.NetworkRequest.NetworkRequest, issueTime: number, entryTotalDuration: number,\n      timings: HARTimings): void {\n    function accumulateTime(timing: number|undefined): number {\n      if (timing === undefined || timing < 0) {\n        return -1;\n      }\n      lastEntry += timing;\n      return lastEntry;\n    }\n    let lastEntry = timings.blocked && (timings.blocked >= 0) ? timings.blocked : 0;\n\n    const proxy = timings.customAsNumber('blocked_proxy') || -1;\n    const queueing = timings.customAsNumber('blocked_queueing') || -1;\n\n    // `blocked_queueing` should be excluded from `lastEntry`\n    // (`timings.blocked`) here because it should be taken into account\n    // by `timing.requestTime`, and other subsequent timings are\n    // calculated based on the accumulated `lastEntry`.\n    if (lastEntry > 0 && queueing > 0) {\n      lastEntry -= queueing;\n    }\n\n    // SSL is part of connect for both HAR and Chrome's format so subtract it here.\n    const ssl = timings.ssl && (timings.ssl >= 0) ? timings.ssl : 0;\n    if (timings.connect && (timings.connect > 0)) {\n      timings.connect -= ssl;\n    }\n    const timing = {\n      proxyStart: proxy > 0 ? lastEntry - proxy : -1,\n      proxyEnd: proxy > 0 ? lastEntry : -1,\n      requestTime: issueTime + (queueing > 0 ? queueing : 0) / 1000,\n      dnsStart: timings.dns && (timings.dns >= 0) ? lastEntry : -1,\n      dnsEnd: accumulateTime(timings.dns),\n\n      // Add ssl to end time without modifying lastEntry (see comment above).\n      connectStart: timings.connect && (timings.connect >= 0) ? lastEntry : -1,\n      connectEnd: accumulateTime(timings.connect) + ssl,\n\n      // Now update lastEntry to add ssl timing back in (see comment above).\n      sslStart: timings.ssl && (timings.ssl >= 0) ? lastEntry : -1,\n      sslEnd: accumulateTime(timings.ssl),\n\n      workerStart: timings.customAsNumber('workerStart') || -1,\n      workerReady: timings.customAsNumber('workerReady') || -1,\n      workerFetchStart: timings.customAsNumber('workerFetchStart') || -1,\n      workerRespondWithSettled: timings.customAsNumber('workerRespondWithSettled') || -1,\n      workerRouterEvaluationStart: timings.customAsNumber('workerRouterEvaluationStart'),\n      workerCacheLookupStart: timings.customAsNumber('workerCacheLookupStart'),\n\n      sendStart: timings.send >= 0 ? lastEntry : -1,\n      sendEnd: accumulateTime(timings.send),\n      pushStart: 0,\n      pushEnd: 0,\n      receiveHeadersStart: timings.wait && (timings.wait >= 0) ? lastEntry : -1,\n      receiveHeadersEnd: accumulateTime(timings.wait),\n    };\n    accumulateTime(timings.receive);\n\n    request.timing = timing;\n    request.endTime = issueTime + Math.max(entryTotalDuration, lastEntry) / 1000;\n  }\n}\n", "/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// See http://www.softwareishard.com/blog/har-12-spec/\n// for HAR specification.\n\n// FIXME: Some fields are not yet supported due to back-end limitations.\n// See https://bugs.webkit.org/show_bug.cgi?id=58127 for details.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport interface BuildOptions {\n  sanitize: boolean;\n}\n\nexport class Log {\n  static pseudoWallTime(request: SDK.NetworkRequest.NetworkRequest, monotonicTime: number): Date {\n    return new Date(request.pseudoWallTime(monotonicTime) * 1000);\n  }\n\n  static async build(requests: SDK.NetworkRequest.NetworkRequest[], options: BuildOptions): Promise<LogDTO> {\n    const log = new Log();\n    const entryPromises = [];\n    for (const request of requests) {\n      entryPromises.push(Entry.build(request, options));\n    }\n    const entries = await Promise.all(entryPromises);\n    return {version: '1.2', creator: log.creator(), pages: log.buildPages(requests), entries};\n  }\n\n  private creator(): Creator {\n    const webKitVersion = /AppleWebKit\\/([^ ]+)/.exec(window.navigator.userAgent);\n\n    return {name: 'WebInspector', version: webKitVersion ? webKitVersion[1] : 'n/a'};\n  }\n\n  private buildPages(requests: SDK.NetworkRequest.NetworkRequest[]): Page[] {\n    const seenIdentifiers = new Set<number>();\n    const pages = [];\n    for (let i = 0; i < requests.length; ++i) {\n      const request = requests[i];\n      const page = SDK.PageLoad.PageLoad.forRequest(request);\n      if (!page || seenIdentifiers.has(page.id)) {\n        continue;\n      }\n      seenIdentifiers.add(page.id);\n      pages.push(this.convertPage(page, request));\n    }\n    return pages;\n  }\n\n  private convertPage(page: SDK.PageLoad.PageLoad, request: SDK.NetworkRequest.NetworkRequest): Page {\n    return {\n      startedDateTime: Log.pseudoWallTime(request, page.startTime).toJSON(),\n      id: 'page_' + page.id,\n      title: page.url,\n      pageTimings: {\n        onContentLoad: this.pageEventTime(page, page.contentLoadTime),\n        onLoad: this.pageEventTime(page, page.loadTime),\n      },\n    };\n  }\n\n  private pageEventTime(page: SDK.PageLoad.PageLoad, time: number): number {\n    const startTime = page.startTime;\n    if (time === -1 || startTime === -1) {\n      return -1;\n    }\n    return Entry.toMilliseconds(time - startTime);\n  }\n}\n\nexport class Entry {\n  private request: SDK.NetworkRequest.NetworkRequest;\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    this.request = request;\n  }\n\n  static toMilliseconds(time: number): number {\n    return time === -1 ? -1 : time * 1000;\n  }\n\n  static async build(request: SDK.NetworkRequest.NetworkRequest, options: BuildOptions): Promise<EntryDTO> {\n    const harEntry = new Entry(request);\n    let ipAddress = harEntry.request.remoteAddress();\n    const portPositionInString = ipAddress.lastIndexOf(':');\n    const connection = portPositionInString !== -1 ? ipAddress.substring(portPositionInString + 1) : undefined;\n    if (portPositionInString !== -1) {\n      ipAddress = ipAddress.substr(0, portPositionInString);\n    }\n    const timings = harEntry.buildTimings();\n    let time = 0;\n    // \"ssl\" is included in the connect field, so do not double count it.\n    for (const t of [timings.blocked, timings.dns, timings.connect, timings.send, timings.wait, timings.receive]) {\n      time += Math.max(t, 0);\n    }\n\n    const initiator = harEntry.request.initiator();\n    let exportedInitiator: Protocol.Network.Initiator|null = null;\n    if (initiator) {\n      exportedInitiator = {\n        type: initiator.type,\n      };\n      if (initiator.url !== undefined) {\n        exportedInitiator.url = initiator.url;\n      }\n      if (initiator.requestId !== undefined) {\n        exportedInitiator.requestId = initiator.requestId;\n      }\n      if (initiator.lineNumber !== undefined) {\n        exportedInitiator.lineNumber = initiator.lineNumber;\n      }\n      if (initiator.stack) {\n        exportedInitiator.stack = initiator.stack;\n      }\n    }\n\n    const entry: EntryDTO = {\n      _connectionId: undefined,\n      _fromCache: undefined,\n      _initiator: exportedInitiator,\n      _priority: harEntry.request.priority(),\n      _resourceType: harEntry.request.resourceType().name(),\n      _webSocketMessages: undefined,\n      cache: {},\n      connection,\n      pageref: undefined,\n      request: await harEntry.buildRequest(),\n      response: harEntry.buildResponse(),\n      // IPv6 address should not have square brackets per (https://tools.ietf.org/html/rfc2373#section-2.2).\n      serverIPAddress: ipAddress.replace(/\\[\\]/g, ''),\n      startedDateTime: Log.pseudoWallTime(harEntry.request, harEntry.request.issueTime()).toJSON(),\n      time,\n      timings,\n    };\n\n    // Sanitize HAR to remove sensitive data.\n\n    if (options.sanitize) {\n      entry.response.cookies = [];\n      entry.response.headers =\n          entry.response.headers.filter(({name}) => !['set-cookie'].includes(name.toLocaleLowerCase()));\n      entry.request.cookies = [];\n      entry.request.headers =\n          entry.request.headers.filter(({name}) => !['authorization', 'cookie'].includes(name.toLocaleLowerCase()));\n    }\n\n    // Chrome specific.\n\n    if (harEntry.request.cached()) {\n      entry._fromCache = harEntry.request.cachedInMemory() ? 'memory' : 'disk';\n    } else {\n      delete entry._fromCache;\n    }\n\n    if (harEntry.request.connectionId !== '0') {\n      entry._connectionId = harEntry.request.connectionId;\n    } else {\n      delete entry._connectionId;\n    }\n\n    const page = SDK.PageLoad.PageLoad.forRequest(harEntry.request);\n    if (page) {\n      entry.pageref = 'page_' + page.id;\n    } else {\n      delete entry.pageref;\n    }\n\n    if (harEntry.request.resourceType() === Common.ResourceType.resourceTypes.WebSocket) {\n      const messages = [];\n      for (const message of harEntry.request.frames()) {\n        messages.push({type: message.type, time: message.time, opcode: message.opCode, data: message.text});\n      }\n      entry._webSocketMessages = messages;\n    } else {\n      delete entry._webSocketMessages;\n    }\n\n    return entry;\n  }\n\n  private async buildRequest(): Promise<Request> {\n    const headersText = this.request.requestHeadersText();\n    const res: Request = {\n      method: this.request.requestMethod,\n      url: this.buildRequestURL(this.request.url()),\n      httpVersion: this.request.requestHttpVersion(),\n      headers: this.request.requestHeaders(),\n      queryString: this.buildParameters(this.request.queryParameters || []),\n      cookies: this.buildCookies(\n          this.request.includedRequestCookies().map(includedRequestCookie => includedRequestCookie.cookie)),\n      headersSize: headersText ? headersText.length : -1,\n      bodySize: await this.requestBodySize(),\n      postData: undefined,\n    };\n    const postData = await this.buildPostData();\n    if (postData) {\n      res.postData = postData;\n    } else {\n      delete res.postData;\n    }\n\n    return res;\n  }\n\n  private buildResponse(): Response {\n    const headersText = this.request.responseHeadersText;\n\n    return {\n      status: this.request.statusCode,\n      statusText: this.request.statusText,\n      httpVersion: this.request.responseHttpVersion(),\n      headers: this.request.responseHeaders,\n      cookies: this.buildCookies(this.request.responseCookies),\n      content: this.buildContent(),\n      redirectURL: this.request.responseHeaderValue('Location') || '',\n      headersSize: headersText ? headersText.length : -1,\n      bodySize: this.responseBodySize,\n      _transferSize: this.request.transferSize,\n      _error: this.request.localizedFailDescription,\n      _fetchedViaServiceWorker: this.request.fetchedViaServiceWorker,\n      _responseCacheStorageCacheName: this.request.getResponseCacheStorageCacheName(),\n      _serviceWorkerResponseSource: this.request.serviceWorkerResponseSource(),\n      _serviceWorkerRouterRuleIdMatched: this.request.serviceWorkerRouterInfo?.ruleIdMatched ?? undefined,\n      _serviceWorkerRouterMatchedSourceType: this.request.serviceWorkerRouterInfo?.matchedSourceType ?? undefined,\n      _serviceWorkerRouterActualSourceType: this.request.serviceWorkerRouterInfo?.actualSourceType ?? undefined,\n    };\n  }\n\n  private buildContent(): Content {\n    const content = ({\n      size: this.request.resourceSize,\n      mimeType: this.request.mimeType || 'x-unknown',\n      compression: undefined,\n    } as Content);\n    const compression = this.responseCompression;\n    if (typeof compression === 'number') {\n      content.compression = compression;\n    } else {\n      delete content.compression;\n    }\n    return content;\n  }\n\n  private buildTimings(): Timing {\n    // Order of events: request_start = 0, [proxy], [dns], [connect [ssl]], [send], duration\n    const timing = this.request.timing;\n    const issueTime = this.request.issueTime();\n    const startTime = this.request.startTime;\n\n    const result: Timing = {\n      blocked: -1,\n      dns: -1,\n      ssl: -1,\n      connect: -1,\n      send: 0,\n      wait: 0,\n      receive: 0,\n      _blocked_queueing: -1,\n      _blocked_proxy: undefined,\n    };\n\n    const queuedTime = (issueTime < startTime) ? startTime - issueTime : -1;\n    result.blocked = Entry.toMilliseconds(queuedTime);\n    result._blocked_queueing = Entry.toMilliseconds(queuedTime);\n\n    let highestTime = 0;\n    if (timing) {\n      // \"blocked\" here represents both queued + blocked/stalled + proxy (ie: anything before request was started).\n      // We pick the better of when the network request start was reported and pref timing.\n      const blockedStart = leastNonNegative([timing.dnsStart, timing.connectStart, timing.sendStart]);\n      if (blockedStart !== Infinity) {\n        result.blocked += blockedStart;\n      }\n\n      // Proxy is part of blocked but sometimes (like quic) blocked is -1 but has proxy timings.\n      if (timing.proxyEnd !== -1) {\n        result._blocked_proxy = timing.proxyEnd - timing.proxyStart;\n      }\n      if (result._blocked_proxy && result._blocked_proxy > result.blocked) {\n        result.blocked = result._blocked_proxy;\n      }\n\n      const dnsStart = timing.dnsEnd >= 0 ? blockedStart : 0;\n      const dnsEnd = timing.dnsEnd >= 0 ? timing.dnsEnd : -1;\n      result.dns = dnsEnd - dnsStart;\n\n      // SSL timing is included in connection timing.\n      const sslStart = timing.sslEnd > 0 ? timing.sslStart : 0;\n      const sslEnd = timing.sslEnd > 0 ? timing.sslEnd : -1;\n      result.ssl = sslEnd - sslStart;\n\n      const connectStart = timing.connectEnd >= 0 ? leastNonNegative([dnsEnd, blockedStart]) : 0;\n      const connectEnd = timing.connectEnd >= 0 ? timing.connectEnd : -1;\n      result.connect = connectEnd - connectStart;\n\n      // Send should not be -1 for legacy reasons even if it is served from cache.\n      const sendStart = timing.sendEnd >= 0 ? Math.max(connectEnd, dnsEnd, blockedStart) : 0;\n      const sendEnd = timing.sendEnd >= 0 ? timing.sendEnd : 0;\n      result.send = sendEnd - sendStart;\n      // Quic sometimes says that sendStart is before connectionEnd (see: crbug.com/740792)\n      if (result.send < 0) {\n        result.send = 0;\n      }\n      highestTime = Math.max(sendEnd, connectEnd, sslEnd, dnsEnd, blockedStart, 0);\n\n      // Custom fields for service worker timings.\n      result._workerStart = timing.workerStart;\n      result._workerReady = timing.workerReady;\n      result._workerFetchStart = timing.workerFetchStart;\n      result._workerRespondWithSettled = timing.workerRespondWithSettled;\n      result._workerRouterEvaluationStart = timing.workerRouterEvaluationStart;\n      result._workerCacheLookupStart = timing.workerCacheLookupStart;\n    } else if (this.request.responseReceivedTime === -1) {\n      // Means that we don't have any more details after blocked, so attribute all to blocked.\n      result.blocked = Entry.toMilliseconds(this.request.endTime - issueTime);\n      return result;\n    }\n\n    const requestTime = timing ? timing.requestTime : startTime;\n    const waitStart = highestTime;\n    const waitEnd = Entry.toMilliseconds(this.request.responseReceivedTime - requestTime);\n    result.wait = waitEnd - waitStart;\n\n    const receiveStart = waitEnd;\n    const receiveEnd = Entry.toMilliseconds(this.request.endTime - requestTime);\n    result.receive = Math.max(receiveEnd - receiveStart, 0);\n\n    return result;\n\n    function leastNonNegative(values: number[]): number {\n      return values.reduce((best, value) => (value >= 0 && value < best) ? value : best, Infinity);\n    }\n  }\n\n  private async buildPostData(): Promise<PostData|null> {\n    const postData = await this.request.requestFormData();\n    if (!postData) {\n      return null;\n    }\n    const res: PostData = {mimeType: this.request.requestContentType() || '', text: postData, params: undefined};\n    const formParameters = await this.request.formParameters();\n    if (formParameters) {\n      res.params = this.buildParameters(formParameters);\n    } else {\n      delete res.params;\n    }\n    return res;\n  }\n\n  private buildParameters(parameters: Parameter[]): Parameter[] {\n    return parameters.slice();\n  }\n\n  private buildRequestURL(url: Platform.DevToolsPath.UrlString): Platform.DevToolsPath.UrlString {\n    return Common.ParsedURL.ParsedURL.split(url, '#', 2)[0];\n  }\n\n  private buildCookies(cookies: SDK.Cookie.Cookie[]): CookieDTO[] {\n    return cookies.map(this.buildCookie.bind(this));\n  }\n\n  private buildCookie(cookie: SDK.Cookie.Cookie): CookieDTO {\n    const c: CookieDTO = {\n      name: cookie.name(),\n      value: cookie.value(),\n      path: cookie.path(),\n      domain: cookie.domain(),\n      expires: cookie.expiresDate(Log.pseudoWallTime(this.request, this.request.startTime)),\n      httpOnly: cookie.httpOnly(),\n      secure: cookie.secure(),\n      sameSite: undefined,\n      partitionKey: undefined,\n    };\n    if (cookie.sameSite()) {\n      c.sameSite = cookie.sameSite();\n    } else {\n      delete c.sameSite;\n    }\n    if (cookie.partitionKey()) {\n      c.partitionKey = cookie.partitionKey();\n    } else {\n      delete c.partitionKey;\n    }\n    return c;\n  }\n\n  private async requestBodySize(): Promise<number> {\n    const postData = await this.request.requestFormData();\n    if (!postData) {\n      return 0;\n    }\n\n    // As per the har spec, returns the length in bytes of the posted data.\n    // TODO(jarhar): This will be wrong if the underlying encoding is not UTF-8. SDK.NetworkRequest.NetworkRequest.requestFormData is\n    //   assumed to be UTF-8 because the backend decodes post data to a UTF-8 string regardless of the provided\n    //   content-type/charset in InspectorNetworkAgent::FormDataToString\n    return new TextEncoder().encode(postData).length;\n  }\n\n  get responseBodySize(): number {\n    if (this.request.cached() || this.request.statusCode === 304) {\n      return 0;\n    }\n    if (!this.request.responseHeadersText) {\n      return -1;\n    }\n    return this.request.transferSize - this.request.responseHeadersText.length;\n  }\n\n  get responseCompression(): number|undefined {\n    if (this.request.cached() || this.request.statusCode === 304 || this.request.statusCode === 206) {\n      return;\n    }\n    if (!this.request.responseHeadersText) {\n      return;\n    }\n    return this.request.resourceSize - this.responseBodySize;\n  }\n}\n\nexport interface Timing {\n  blocked: number;\n  dns: number;\n  ssl: number;\n  connect: number;\n  send: number;\n  wait: number;\n  receive: number;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  _blocked_queueing: number;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  _blocked_proxy?: number;\n\n  // Custom fields for service workers.\n  _workerStart?: number;\n  _workerReady?: number;\n  _workerFetchStart?: number;\n  _workerRespondWithSettled?: number;\n  _workerRouterEvaluationStart?: number;\n  _workerCacheLookupStart?: number;\n}\n\nexport interface Parameter {\n  name: string;\n  value: string;\n}\n\nexport interface Content {\n  size: number;\n  mimeType: string;\n  compression?: number;\n  text?: string;\n  encoding?: string;\n}\n\nexport interface Request {\n  method: string;\n  url: Platform.DevToolsPath.UrlString;\n  httpVersion: string;\n  headers: Array<{name: string, value: string, comment?: string}>;\n  queryString: Parameter[];\n  cookies: CookieDTO[];\n  headersSize: number;\n  bodySize: number;\n  postData?: PostData;\n}\n\nexport interface Response {\n  status: number;\n  statusText: string;\n  httpVersion: string;\n  headers: Array<{name: string, value: string, comment?: string}>;\n  cookies: CookieDTO[];\n  content: Content;\n  redirectURL: string;\n  headersSize: number;\n  bodySize: number;\n  _transferSize: number;\n  _error: string|null;\n  _fetchedViaServiceWorker: boolean;\n  _responseCacheStorageCacheName: string|undefined;\n  _serviceWorkerResponseSource: Protocol.Network.ServiceWorkerResponseSource|undefined;\n  _serviceWorkerRouterRuleIdMatched: number|undefined;\n  _serviceWorkerRouterMatchedSourceType: string|undefined;\n  _serviceWorkerRouterActualSourceType: string|undefined;\n}\n\nexport interface EntryDTO {\n  _connectionId?: string;\n  _fromCache?: string;\n  _initiator: Protocol.Network.Initiator|null;\n  _priority: Protocol.Network.ResourcePriority|null;\n  _resourceType: string;\n  _webSocketMessages?: Object[];\n  cache: Object;\n  connection?: string;\n  pageref?: string;\n  request: Request;\n  response: Response;\n  serverIPAddress: string;\n  startedDateTime: string|Object;\n  time: number;\n  timings: Timing;\n}\n\nexport interface PostData {\n  mimeType: string;\n  params?: Parameter[];\n  text: string;\n}\n\nexport interface CookieDTO {\n  name: string;\n  value: string;\n  path: string;\n  domain: string;\n  expires: Date|null;\n  httpOnly: boolean;\n  secure: boolean;\n  sameSite?: Protocol.Network.CookieSameSite;\n  partitionKey?: Protocol.Network.CookiePartitionKey;\n}\n\nexport interface Page {\n  startedDateTime: string|Object;\n  id: string;\n  title: string;\n  pageTimings: {\n    onContentLoad: number,\n    onLoad: number,\n  };\n}\n\nexport interface Creator {\n  version: string;\n  name: string;\n}\n\nexport interface LogDTO {\n  version: string;\n  creator: Creator;\n  pages: Page[];\n  entries: EntryDTO[];\n}\n", "// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008, 2009 Anthony Ricaud <rik@webkit.org>\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\n\nimport {type BuildOptions, type EntryDTO, Log} from './Log.js';\n\nconst UIStrings = {\n  /**\n   *@description Title of progress in harwriter of the network panel\n   */\n  collectingContent: 'Collecting content…',\n  /**\n   *@description Text to indicate DevTools is writing to a file\n   */\n  writingFile: 'Writing file…',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('models/har/Writer.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class Writer {\n  static async write(\n      stream: Common.StringOutputStream.OutputStream, requests: SDK.NetworkRequest.NetworkRequest[],\n      options: BuildOptions, progress: Common.Progress.Progress): Promise<void> {\n    const compositeProgress = new Common.Progress.CompositeProgress(progress);\n\n    const content = await Writer.harStringForRequests(requests, options, compositeProgress);\n    if (progress.isCanceled()) {\n      return;\n    }\n    await Writer.writeToStream(stream, compositeProgress, content);\n  }\n\n  static async harStringForRequests(\n      requests: SDK.NetworkRequest.NetworkRequest[], options: BuildOptions,\n      compositeProgress: Common.Progress.CompositeProgress): Promise<string> {\n    const progress = compositeProgress.createSubProgress();\n    progress.setTitle(i18nString(UIStrings.collectingContent));\n    progress.setTotalWork(requests.length);\n\n    // Sort by issueTime because this is recorded as startedDateTime in HAR logs.\n    requests.sort((reqA, reqB) => reqA.issueTime() - reqB.issueTime());\n    const harLog = await Log.build(requests, options);\n    const promises = [];\n    for (let i = 0; i < requests.length; i++) {\n      const promise = requests[i].requestContentData();\n      promises.push(promise.then(contentLoaded.bind(null, harLog.entries[i])));\n    }\n\n    await Promise.all(promises);\n    progress.done();\n\n    if (progress.isCanceled()) {\n      return '';\n    }\n    return JSON.stringify({log: harLog}, null, jsonIndent);\n\n    function isValidCharacter(codePoint: number): boolean {\n      // Excludes non-characters (U+FDD0..U+FDEF, and all codepoints ending in\n      // 0xFFFE or 0xFFFF) from the set of valid code points.\n      return codePoint < 0xD800 || (codePoint >= 0xE000 && codePoint < 0xFDD0) ||\n          (codePoint > 0xFDEF && codePoint <= 0x10FFFF && (codePoint & 0xFFFE) !== 0xFFFE);\n    }\n\n    function needsEncoding(content: string): boolean {\n      for (let i = 0; i < content.length; i++) {\n        if (!isValidCharacter(content.charCodeAt(i))) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    function contentLoaded(entry: EntryDTO, contentDataOrError: TextUtils.ContentData.ContentDataOrError): void {\n      progress.incrementWorked();\n      const contentData = TextUtils.ContentData.ContentData.asDeferredContent(contentDataOrError);\n      let encoded: true|boolean = contentData.isEncoded;\n      if (contentData.content !== null) {\n        let content: string = contentData.content;\n        if (content && !encoded && needsEncoding(content)) {\n          content = Platform.StringUtilities.toBase64(content);\n          encoded = true;\n        }\n        entry.response.content.text = content;\n      }\n      if (encoded) {\n        entry.response.content.encoding = 'base64';\n      }\n    }\n  }\n\n  static async writeToStream(\n      stream: Common.StringOutputStream.OutputStream, compositeProgress: Common.Progress.CompositeProgress,\n      fileContent: string): Promise<void> {\n    const progress = compositeProgress.createSubProgress();\n    progress.setTitle(i18nString(UIStrings.writingFile));\n    progress.setTotalWork(fileContent.length);\n    for (let i = 0; i < fileContent.length && !progress.isCanceled(); i += chunkSize) {\n      const chunk = fileContent.substr(i, chunkSize);\n      await stream.write(chunk);\n      progress.incrementWorked(chunk.length);\n    }\n    progress.done();\n  }\n}\n\nexport const jsonIndent = 2;\nexport const chunkSize = 100000;\n"],
  "mappings": "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",
  "names": ["SDK", "timing", "Common", "SDK", "Common", "Platform", "TextUtils"]
}
