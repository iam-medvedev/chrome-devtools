{"version":3,"file":"Log.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/har/Log.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as HAR from '../har/har.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\ndescribe('HAR', () => {\n  describe('Log', () => {\n    describe('Entry', () => {\n      describe('build', () => {\n        const requestId = 'r0' as Protocol.Network.RequestId;\n        const {build} = HAR.Log.Entry;\n        const url = urlString`p0.com`;\n\n        it('exports request cookies and authorization headers by default', async () => {\n          const request = SDK.NetworkRequest.NetworkRequest.create(\n              requestId, url, Platform.DevToolsPath.EmptyUrlString, null, null, null);\n          request.addExtraRequestInfo({\n            blockedRequestCookies: [],\n            requestHeaders: [\n              {name: 'Authorization', value: 'Basic YWxhZGRpbjpvcGVuc2VzYW1l'},\n              {name: 'Cookie', value: 'Foo=Bar'},\n            ],\n            includedRequestCookies: [{\n              cookie: new SDK.Cookie.Cookie('Foo', 'Bar', SDK.Cookie.Type.REQUEST),\n              exemptionReason: undefined,\n            }],\n            connectTiming: {requestTime: 1},\n          });\n\n          const entry = await build(request, {sanitize: false});\n\n          assert.deepEqual(entry.request.headers, [\n            {name: 'Authorization', value: 'Basic YWxhZGRpbjpvcGVuc2VzYW1l'},\n            {name: 'Cookie', value: 'Foo=Bar'},\n          ]);\n          assert.lengthOf(entry.request.cookies, 1);\n          assert.strictEqual(entry.request.cookies[0].name, 'Foo');\n          assert.strictEqual(entry.request.cookies[0].value, 'Bar');\n        });\n\n        it('removes request cookies and authorization headers when requested', async () => {\n          const request = SDK.NetworkRequest.NetworkRequest.create(\n              requestId, url, Platform.DevToolsPath.EmptyUrlString, null, null, null);\n          request.addExtraRequestInfo({\n            blockedRequestCookies: [],\n            requestHeaders: [\n              {name: 'Authorization', value: 'Basic YWxhZGRpbjpvcGVuc2VzYW1l'},\n              {name: 'Cookie', value: 'Foo=Bar'},\n              {name: 'Origin', value: 'null'},\n            ],\n            includedRequestCookies: [{\n              cookie: new SDK.Cookie.Cookie('Foo', 'Bar', SDK.Cookie.Type.REQUEST),\n              exemptionReason: undefined,\n            }],\n            connectTiming: {requestTime: 1},\n          });\n\n          const entry = await build(request, {sanitize: true});\n\n          assert.deepEqual(entry.request.headers, [{name: 'Origin', value: 'null'}]);\n          assert.deepEqual(entry.request.cookies, []);\n        });\n\n        it('exports response cookies by default', async () => {\n          const request = SDK.NetworkRequest.NetworkRequest.create(\n              requestId, url, Platform.DevToolsPath.EmptyUrlString, null, null, null);\n          request.responseHeaders = [{name: 'Set-Cookie', value: 'Foo=Bar'}];\n\n          const entry = await build(request, {sanitize: false});\n\n          assert.deepEqual(entry.response.headers, [\n            {name: 'Set-Cookie', value: 'Foo=Bar'},\n          ]);\n          assert.lengthOf(entry.response.cookies, 1);\n          assert.strictEqual(entry.response.cookies[0].name, 'Foo');\n          assert.strictEqual(entry.response.cookies[0].value, 'Bar');\n        });\n\n        it('removes response cookies when requested', async () => {\n          const request = SDK.NetworkRequest.NetworkRequest.create(\n              requestId, url, Platform.DevToolsPath.EmptyUrlString, null, null, null);\n          request.responseHeaders = [\n            {name: 'Content-Type', value: 'text/html'},\n            {name: 'Set-Cookie', value: 'Foo=Bar'},\n          ];\n\n          const entry = await build(request, {sanitize: true});\n\n          assert.deepEqual(entry.response.headers, [{name: 'Content-Type', value: 'text/html'}]);\n          assert.deepEqual(entry.response.cookies, []);\n        });\n\n        it('returns blocked time when no response is received in milliseconds', async () => {\n          const request = SDK.NetworkRequest.NetworkRequest.create(\n              requestId, url, Platform.DevToolsPath.EmptyUrlString, null, null, null);\n          const issueTime = new Date(2020, 1, 3).getTime() / 1000;\n          request.setIssueTime(issueTime, issueTime);\n          request.endTime = issueTime + 5;\n\n          const entry = await build(request, {sanitize: false});\n\n          assert.strictEqual(entry.timings.blocked, 5000, 'HARLog entry\\'s blocked time is incorrect');\n        });\n\n        it('exports initiator request ID', async () => {\n          const request = SDK.NetworkRequest.NetworkRequest.create(\n              requestId, url, Platform.DevToolsPath.EmptyUrlString, null, null,\n              {requestId, type: Protocol.Network.InitiatorType.Script});\n\n          const entry = await build(request, {sanitize: false});\n\n          assert.strictEqual(entry._initiator?.requestId, requestId);\n        });\n\n        it('exports remote address', async () => {\n          const request = SDK.NetworkRequest.NetworkRequest.create(\n              requestId, url, Platform.DevToolsPath.EmptyUrlString, null, null,\n              {requestId, type: Protocol.Network.InitiatorType.Script});\n          request.setRemoteAddress('127.0.0.1', 6789);\n\n          const entry = await build(request, {sanitize: false});\n\n          assert.strictEqual(entry.serverIPAddress, '127.0.0.1');\n          assert.strictEqual(entry.connection, '6789');\n        });\n\n        it('exports Chrome-specific connection ID', async () => {\n          const request = SDK.NetworkRequest.NetworkRequest.create(\n              requestId, url, Platform.DevToolsPath.EmptyUrlString, null, null,\n              {requestId, type: Protocol.Network.InitiatorType.Script});\n          request.connectionId = 'foobar';\n\n          const entry = await build(request, {sanitize: false});\n\n          assert.strictEqual(entry._connectionId, 'foobar');\n        });\n\n        it('exports Service Worker info', async () => {\n          const request = SDK.NetworkRequest.NetworkRequest.create(\n              requestId, url, Platform.DevToolsPath.EmptyUrlString, null, null,\n              {requestId, type: Protocol.Network.InitiatorType.Script});\n\n          const cacheName = 'v1';\n          request.fetchedViaServiceWorker = true;\n          request.setResponseCacheStorageCacheName(cacheName);\n          request.setServiceWorkerResponseSource(Protocol.Network.ServiceWorkerResponseSource.CacheStorage);\n\n          const timingInfo: Protocol.Network.ResourceTiming = {\n            requestTime: 500,\n            proxyStart: 0,\n            proxyEnd: 0,\n            dnsStart: 0,\n            dnsEnd: 0,\n            connectStart: 0,\n            connectEnd: 0,\n            sslStart: 0,\n            sslEnd: 0,\n            workerStart: 500,\n            workerReady: 1000,\n            workerFetchStart: 1050,\n            workerRespondWithSettled: 3000,\n            sendStart: 0,\n            sendEnd: 0,\n            pushStart: 0,\n            pushEnd: 0,\n            receiveHeadersStart: 0,\n            receiveHeadersEnd: 0,\n          };\n          request.timing = timingInfo;\n\n          const entry = await build(request, {sanitize: false});\n\n          assert.isTrue(entry.response._fetchedViaServiceWorker);\n          assert.strictEqual(entry.response._responseCacheStorageCacheName, cacheName);\n          assert.strictEqual(\n              entry.response._serviceWorkerResponseSource, Protocol.Network.ServiceWorkerResponseSource.CacheStorage);\n\n          assert.strictEqual(entry.timings._workerStart, timingInfo.workerStart);\n          assert.strictEqual(entry.timings._workerReady, timingInfo.workerReady);\n          assert.strictEqual(entry.timings._workerFetchStart, timingInfo.workerFetchStart);\n          assert.strictEqual(entry.timings._workerRespondWithSettled, timingInfo.workerRespondWithSettled);\n        });\n      });\n    });\n  });\n});\n"]}