{"version":3,"file":"ElementAccessibilityIssue.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/ElementAccessibilityIssue.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {describeWithLocale, expectConsoleLogs} from '../../testing/EnvironmentHelpers.js';\nimport {MockIssuesModel} from '../../testing/MockIssuesModel.js';\nimport * as IssuesManager from '../issues_manager/issues_manager.js';\n\ndescribeWithLocale('ElementAccessibilityIssue', () => {\n  const mockModel = new MockIssuesModel([]) as unknown as SDK.IssuesModel.IssuesModel;\n\n  function createProtocolIssueWithoutDetails(): Protocol.Audits.InspectorIssue {\n    return {\n      code: Protocol.Audits.InspectorIssueCode.ElementAccessibilityIssue,\n      details: {},\n    };\n  }\n\n  function createProtocolIssueWithDetails(\n      elementAccessibilityIssueDetails: Protocol.Audits.ElementAccessibilityIssueDetails):\n      Protocol.Audits.InspectorIssue {\n    return {\n      code: Protocol.Audits.InspectorIssueCode.ElementAccessibilityIssue,\n      details: {elementAccessibilityIssueDetails},\n    };\n  }\n\n  expectConsoleLogs({\n    warn: ['Select Element Accessibility issue without details received.'],\n  });\n\n  it('can be created for various reasons', () => {\n    const reasons = [\n      Protocol.Audits.ElementAccessibilityIssueReason.DisallowedSelectChild,\n      Protocol.Audits.ElementAccessibilityIssueReason.DisallowedOptGroupChild,\n      Protocol.Audits.ElementAccessibilityIssueReason.NonPhrasingContentOptionChild,\n      Protocol.Audits.ElementAccessibilityIssueReason.InteractiveContentOptionChild,\n      Protocol.Audits.ElementAccessibilityIssueReason.InteractiveContentLegendChild,\n      Protocol.Audits.ElementAccessibilityIssueReason.InteractiveContentSummaryDescendant,\n    ];\n    for (const reason of reasons) {\n      const issueDetails = {\n        nodeId: 1 as Protocol.DOM.BackendNodeId,\n        elementAccessibilityIssueReason: reason,\n        hasDisallowedAttributes: false,\n      };\n      const issue = createProtocolIssueWithDetails(issueDetails);\n      const selectIssues =\n          IssuesManager.ElementAccessibilityIssue.ElementAccessibilityIssue.fromInspectorIssue(mockModel, issue);\n      assert.lengthOf(selectIssues, 1);\n      const selectIssue = selectIssues[0];\n\n      assert.strictEqual(selectIssue.getCategory(), IssuesManager.Issue.IssueCategory.OTHER);\n      assert.deepEqual(selectIssue.details(), issueDetails);\n      assert.strictEqual(selectIssue.getKind(), IssuesManager.Issue.IssueKind.PAGE_ERROR);\n      assert.isNotNull(selectIssue.getDescription());\n    }\n  });\n\n  it('adds a disallowed select child issue without details', () => {\n    const inspectorIssueWithoutGenericDetails = createProtocolIssueWithoutDetails();\n    const selectIssues = IssuesManager.ElementAccessibilityIssue.ElementAccessibilityIssue.fromInspectorIssue(\n        mockModel, inspectorIssueWithoutGenericDetails);\n\n    assert.isEmpty(selectIssues);\n  });\n\n  it('adds an interactive content attributes select child issue with valid details', () => {\n    const issueDetails = {\n      nodeId: 1 as Protocol.DOM.BackendNodeId,\n      elementAccessibilityIssueReason: Protocol.Audits.ElementAccessibilityIssueReason.InteractiveContentOptionChild,\n      hasDisallowedAttributes: true,\n    };\n    const issue = createProtocolIssueWithDetails(issueDetails);\n    const selectIssues =\n        IssuesManager.ElementAccessibilityIssue.ElementAccessibilityIssue.fromInspectorIssue(mockModel, issue);\n    assert.lengthOf(selectIssues, 1);\n    const selectIssue = selectIssues[0];\n\n    assert.strictEqual(selectIssue.getCategory(), IssuesManager.Issue.IssueCategory.OTHER);\n    assert.deepEqual(selectIssue.details(), issueDetails);\n    assert.strictEqual(selectIssue.getKind(), IssuesManager.Issue.IssueKind.PAGE_ERROR);\n    assert.isNotNull(selectIssue.getDescription());\n  });\n});\n"]}