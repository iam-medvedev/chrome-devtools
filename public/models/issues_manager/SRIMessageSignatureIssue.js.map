{"version":3,"file":"SRIMessageSignatureIssue.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/SRIMessageSignatureIssue.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport {\n  type LazyMarkdownIssueDescription,\n  type MarkdownIssueDescription,\n  resolveLazyDescription,\n} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n   *@description Title for HTTP Message Signatures specification url\n   */\n  httpMessageSignatures: 'HTTP Message Signatures (RFC9421)',\n  /**\n   *@description Title for Signature-based Integrity specification url\n   */\n  signatureBasedIntegrity: 'Signature-based Integrity',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/SRIMessageSignatureIssue.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nconst specLinks = [\n  {\n    link: 'https://www.rfc-editor.org/rfc/rfc9421.html',\n    linkTitle: i18nLazyString(UIStrings.httpMessageSignatures),\n  },\n  {\n    link: 'https://wicg.github.io/signature-based-sri/',\n    linkTitle: i18nLazyString(UIStrings.signatureBasedIntegrity),\n  }\n];\n\nexport const enum IssueCode {\n  MISSING_SIGNATURE_HEADER = 'SRIMessageSignatureIssue::MissingSignatureHeader',\n  MISSING_SIGNATURE_INPUT_HEADER = 'SRIMessageSignatureIssue::MissingSignatureInputHeader',\n  INVALID_SIGNATURE_HEADER = 'SRIMessageSignatureIssue::InvalidSignatureHeader',\n  INVALID_SIGNATURE_INPUT_HEADER = 'SRIMessageSignatureIssue::InvalidSignatureInputHeader',\n  SIGNATURE_HEADER_VALUE_IS_NOT_BYTE_SEQUENCE = 'SRIMessageSignatureIssue::SignatureHeaderValueIsNotByteSequence',\n  SIGNATURE_HEADER_VALUE_IS_PARAMETERIZED = 'SRIMessageSignatureIssue::SignatureHeaderValueIsParameterized',\n  SIGNATURE_HEADER_VALUE_IS_INCORRECT_LENGTH = 'SRIMessageSignatureIssue::SignatureHeaderValueIsIncorrectLength',\n  SIGNATURE_INPUT_HEADER_MISSING_LABEL = 'SRIMessageSignatureIssue::SignatureInputHeaderMissingLabel',\n  SIGNATURE_INPUT_HEADER_VALUE_NOT_INNER_LIST = 'SRIMessageSignatureIssue::SignatureInputHeaderValueNotInnerList',\n  SIGNATURE_INPUT_HEADER_VALUE_MISSING_COMPONENTS =\n      'SRIMessageSignatureIssue::SignatureInputHeaderValueMissingComponents',\n  SIGNATURE_INPUT_HEADER_INVALID_COMPONENT_TYPE = 'SRIMessageSignatureIssue::SignatureInputHeaderInvalidComponentType',\n  SIGNATURE_INPUT_HEADER_INVALID_COMPONENT_NAME = 'SRIMessageSignatureIssue::SignatureInputHeaderInvalidComponentName',\n  SIGNATURE_INPUT_HEADER_INVALID_HEADER_COMPONENT_PARAMETER =\n      'SRIMessageSignatureIssue::SignatureInputHeaderInvalidHeaderComponentParameter',\n  SIGNATURE_INPUT_HEADER_INVALID_DERIVED_COMPONENT_PARAMETER =\n      'SRIMessageSignatureIssue::SignatureInputHeaderInvalidDerivedComponentParameter',\n  SIGNATURE_INPUT_HEADER_KEY_ID_LENGTH = 'SRIMessageSignatureIssue::SignatureInputHeaderKeyIdLength',\n  SIGNATURE_INPUT_HEADER_INVALID_PARAMETER = 'SRIMessageSignatureIssue::SignatureInputHeaderInvalidParameter',\n  SIGNATURE_INPUT_HEADER_MISSING_REQUIRED_PARAMETERS =\n      'SRIMessageSignatureIssue::SignatureInputHeaderMissingRequiredParameters',\n  VALIDATION_FAILED_SIGNATURE_EXPIRED = 'SRIMessageSignatureIssue::ValidationFailedSignatureExpired',\n  VALIDATION_FAILED_INVALID_LENGTH = 'SRIMessageSignatureIssue::ValidationFailedInvalidLength',\n  VALIDATION_FAILED_SIGNATURE_MISMATCH = 'SRIMessageSignatureIssue::ValidationFailedSignatureMismatch',\n}\n\nfunction getIssueCode(details: Protocol.Audits.SRIMessageSignatureIssueDetails): IssueCode {\n  switch (details.error) {\n    case Protocol.Audits.SRIMessageSignatureError.MissingSignatureHeader:\n      return IssueCode.MISSING_SIGNATURE_HEADER;\n    case Protocol.Audits.SRIMessageSignatureError.MissingSignatureInputHeader:\n      return IssueCode.MISSING_SIGNATURE_INPUT_HEADER;\n    case Protocol.Audits.SRIMessageSignatureError.InvalidSignatureHeader:\n      return IssueCode.INVALID_SIGNATURE_HEADER;\n    case Protocol.Audits.SRIMessageSignatureError.InvalidSignatureInputHeader:\n      return IssueCode.INVALID_SIGNATURE_INPUT_HEADER;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureHeaderValueIsNotByteSequence:\n      return IssueCode.SIGNATURE_HEADER_VALUE_IS_NOT_BYTE_SEQUENCE;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureHeaderValueIsParameterized:\n      return IssueCode.SIGNATURE_HEADER_VALUE_IS_PARAMETERIZED;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureHeaderValueIsIncorrectLength:\n      return IssueCode.SIGNATURE_HEADER_VALUE_IS_INCORRECT_LENGTH;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderMissingLabel:\n      return IssueCode.SIGNATURE_INPUT_HEADER_MISSING_LABEL;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderValueNotInnerList:\n      return IssueCode.SIGNATURE_INPUT_HEADER_VALUE_NOT_INNER_LIST;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderValueMissingComponents:\n      return IssueCode.SIGNATURE_INPUT_HEADER_VALUE_MISSING_COMPONENTS;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderInvalidComponentType:\n      return IssueCode.SIGNATURE_INPUT_HEADER_INVALID_COMPONENT_TYPE;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderInvalidComponentName:\n      return IssueCode.SIGNATURE_INPUT_HEADER_INVALID_COMPONENT_NAME;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderInvalidHeaderComponentParameter:\n      return IssueCode.SIGNATURE_INPUT_HEADER_INVALID_HEADER_COMPONENT_PARAMETER;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderInvalidDerivedComponentParameter:\n      return IssueCode.SIGNATURE_INPUT_HEADER_INVALID_DERIVED_COMPONENT_PARAMETER;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderKeyIdLength:\n      return IssueCode.SIGNATURE_INPUT_HEADER_KEY_ID_LENGTH;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderInvalidParameter:\n      return IssueCode.SIGNATURE_INPUT_HEADER_INVALID_PARAMETER;\n    case Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderMissingRequiredParameters:\n      return IssueCode.SIGNATURE_INPUT_HEADER_MISSING_REQUIRED_PARAMETERS;\n    case Protocol.Audits.SRIMessageSignatureError.ValidationFailedSignatureExpired:\n      return IssueCode.VALIDATION_FAILED_SIGNATURE_EXPIRED;\n    case Protocol.Audits.SRIMessageSignatureError.ValidationFailedInvalidLength:\n      return IssueCode.VALIDATION_FAILED_INVALID_LENGTH;\n    case Protocol.Audits.SRIMessageSignatureError.ValidationFailedSignatureMismatch:\n      return IssueCode.VALIDATION_FAILED_SIGNATURE_MISMATCH;\n  }\n}\n\nexport class SRIMessageSignatureIssue extends Issue {\n  readonly #issueDetails: Protocol.Audits.SRIMessageSignatureIssueDetails;\n\n  constructor(issueDetails: Protocol.Audits.SRIMessageSignatureIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    super(\n        {\n          code: getIssueCode(issueDetails),\n          umaCode: [\n            Protocol.Audits.InspectorIssueCode.SRIMessageSignatureIssue,\n            issueDetails.error,\n          ].join('::'),\n        },\n        issuesModel);\n    this.#issueDetails = issueDetails;\n  }\n\n  override requests(): Iterable<Protocol.Audits.AffectedRequest> {\n    if (this.#issueDetails.request) {\n      return [this.#issueDetails.request];\n    }\n    return [];\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.OTHER;\n  }\n\n  details(): Protocol.Audits.SRIMessageSignatureIssueDetails {\n    return this.#issueDetails;\n  }\n\n  getDescription(): MarkdownIssueDescription|null {\n    const description = issueDescriptions.get(this.#issueDetails.error);\n    if (!description) {\n      return null;\n    }\n    return resolveLazyDescription(description);\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.#issueDetails);\n  }\n\n  getKind(): IssueKind {\n    return IssueKind.PAGE_ERROR;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      SRIMessageSignatureIssue[] {\n    const details = inspectorIssue.details.sriMessageSignatureIssueDetails;\n    if (!details) {\n      console.warn('SRI Message Signature issue without details received.');\n      return [];\n    }\n    return [new SRIMessageSignatureIssue(details, issuesModel)];\n  }\n}\n\nconst issueDescriptions = new Map<Protocol.Audits.SRIMessageSignatureError, LazyMarkdownIssueDescription>([\n  [\n    Protocol.Audits.SRIMessageSignatureError.MissingSignatureHeader,\n    {\n      file: 'sriMissingSignatureHeader.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.MissingSignatureInputHeader,\n    {\n      file: 'sriMissingSignatureInputHeader.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.InvalidSignatureHeader,\n    {\n      file: 'sriInvalidSignatureHeader.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.InvalidSignatureInputHeader,\n    {\n      file: 'sriInvalidSignatureInputHeader.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureHeaderValueIsNotByteSequence,\n    {\n      file: 'sriSignatureHeaderValueIsNotByteSequence.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureHeaderValueIsParameterized,\n    {\n      file: 'sriSignatureHeaderValueIsParameterized.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureHeaderValueIsIncorrectLength,\n    {\n      file: 'sriSignatureHeaderValueIsIncorrectLength.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderMissingLabel,\n    {\n      file: 'sriSignatureInputHeaderMissingLabel.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderValueNotInnerList,\n    {\n      file: 'sriSignatureInputHeaderValueNotInnerList.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderValueMissingComponents,\n    {\n      file: 'sriSignatureInputHeaderValueMissingComponents.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderInvalidComponentType,\n    {\n      file: 'sriSignatureInputHeaderInvalidComponentType.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderInvalidComponentName,\n    {\n      file: 'sriSignatureInputHeaderInvalidComponentName.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderInvalidHeaderComponentParameter,\n    {\n      file: 'sriSignatureInputHeaderInvalidHeaderComponentParameter.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderInvalidDerivedComponentParameter,\n    {\n      file: 'sriSignatureInputHeaderInvalidDerivedComponentParameter.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderKeyIdLength,\n    {\n      file: 'sriSignatureInputHeaderKeyIdLength.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderInvalidParameter,\n    {\n      file: 'sriSignatureInputHeaderInvalidParameter.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.SignatureInputHeaderMissingRequiredParameters,\n    {\n      file: 'sriSignatureInputHeaderMissingRequiredParameters.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.ValidationFailedSignatureExpired,\n    {\n      file: 'sriValidationFailedSignatureExpired.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.ValidationFailedInvalidLength,\n    {\n      file: 'sriValidationFailedInvalidLength.md',\n      links: specLinks,\n    },\n  ],\n  [\n    Protocol.Audits.SRIMessageSignatureError.ValidationFailedSignatureMismatch,\n    {\n      file: 'sriValidationFailedSignatureMismatch.md',\n      links: specLinks,\n    },\n  ],\n]);\n"]}