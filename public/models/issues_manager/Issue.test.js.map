{"version":3,"file":"Issue.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/Issue.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,OAAO,KAAK,YAAY,MAAM,qCAAqC,CAAC;AAEpE,OAAO,EAAC,SAAS,EAAC,MAAM,4BAA4B,CAAC;AAErD,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;IACrB,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAC/B,MAAM,IAAI,GAAG,0BAA0B,CAAC;QACxC,MAAM,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;QACpC,MAAM,oBAAoB,GAAG,YAAY,CAAC,WAAW,CAAC,oBAAoB,CAAC;QAC3E,MAAM,qBAAqB,GAAG,CAAC,iBAAyB,EAAE,EAAE;YAC1D,OAAO,EAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,iBAAiB,EAA4C,CAAC;QACjG,CAAC,CAAC;QAEF,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;YAC9D,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,gCAAgC,CAAC,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sEAAsE,EAAE,GAAG,EAAE;YAC9E,MAAM,iBAAiB,GAAG,qBAAqB,CAAC,aAAa,CAAC,CAAC;YAC/D,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC,CAAC;YACnE,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,yBAAyB,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;YACjD,MAAM,iBAAiB,GAAG,qBAAqB,CAAC,aAAa,CAAC,CAAC;YAC/D,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,2BAA2B,CAAC,CAAC,CAAC;YACpF,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,gCAAgC,CAAC,CAAC,CAAC;YAEzF,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,gCAAgC,CAAC,CAAC,CAAC;YACzF,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,2CAA2C,CAAC,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;YAClD,MAAM,iBAAiB,GAAG,qBAAqB,CAAC,aAAa,CAAC,CAAC;YAC/D,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,mCAAmC,CAAC,CAAC,CAAC;YAC7F,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,+CAA+C,CAAC,CAAC,CAAC;QAC3G,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as IssueManager from '../issues_manager/issues_manager.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport {StubIssue} from '../../testing/StubIssue.js';\n\ndescribe('Issue', () => {\n  it('should store the code', () => {\n    const code = 'anExampleIssueCodeString';\n    const issue = new StubIssue(code, [], []);\n    assert.strictEqual(issue.code(), code);\n  });\n});\n\ndescribe('CookieIssue', () => {\n  describe('isCausedByThirdParty', () => {\n    const isCausedByThirdParty = IssueManager.CookieIssue.isCausedByThirdParty;\n    const mockResourceTreeFrame = (domainAndRegistry: string) => {\n      return {domainAndRegistry: () => domainAndRegistry} as SDK.ResourceTreeModel.ResourceTreeFrame;\n    };\n\n    it('returns true when the top frame is not yet available', () => {\n      assert.isTrue(isCausedByThirdParty(null, 'https://example.com/index.html'));\n    });\n\n    it('returns false when no cookieUrl is available or cookieUrl is invalid', () => {\n      const resourceTreeFrame = mockResourceTreeFrame('example.com');\n      assert.isFalse(isCausedByThirdParty(resourceTreeFrame, undefined));\n      assert.isFalse(isCausedByThirdParty(resourceTreeFrame, '~~really an invalid URL'));\n    });\n\n    it('returns true for third-party cookieUrls', () => {\n      const resourceTreeFrame = mockResourceTreeFrame('example.com');\n      assert.isTrue(isCausedByThirdParty(resourceTreeFrame, 'http://foo.com/index.html'));\n      assert.isTrue(isCausedByThirdParty(resourceTreeFrame, 'http://example.com.bar/foo.php'));\n\n      assert.isTrue(isCausedByThirdParty(resourceTreeFrame, 'http://eexample.com/index.html'));\n      assert.isTrue(isCausedByThirdParty(resourceTreeFrame, 'http://sub.domain.eexample.com/index.html'));\n    });\n\n    it('returns false for first-party cookieUrls', () => {\n      const resourceTreeFrame = mockResourceTreeFrame('example.com');\n      assert.isFalse(isCausedByThirdParty(resourceTreeFrame, 'http://www.example.com/index.html'));\n      assert.isFalse(isCausedByThirdParty(resourceTreeFrame, 'http://sub.domain.example.com/should-work.php'));\n    });\n  });\n});\n"]}