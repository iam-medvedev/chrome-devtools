{"version":3,"file":"PartitioningBlobURLIssue.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/PartitioningBlobURLIssue.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAIhD,OAAO,EAAC,KAAK,EAA2B,MAAM,YAAY,CAAC;AAG3D,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,mBAAmB,EAAE,sBAAsB;IAC3C;;OAEG;IACH,iBAAiB,EAAE,qBAAqB;CAChC,CAAC;AAEX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,mDAAmD,EAAE,SAAS,CAAC,CAAC;AACzG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,OAAO,wBAAyB,SAAQ,KAAK;IACxC,aAAa,CAAkD;IAExE,YAAY,YAA6D,EAAE,WAAwC;QACjH,KAAK,+FAA8D,WAAW,CAAC,CAAC;QAChF,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAED,WAAW;QACT,yCAA2B;IAC7B,CAAC;IAED,cAAc;QACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,uBAAuB;uHACkB,CAAC,CAAC;YAC3E,+BAA+B,CAAC,CAAC;YACjC,iCAAiC,CAAC;QACtC,OAAO;YACL,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE;gBACL;oBACE,IAAI,EAAE,4EAA4E;oBAClF,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC,mBAAmB,CAAC;iBACrD;gBACD;oBACE,IAAI,EAAE,mDAAmD;oBACzD,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC;iBACnD;aACF;SACF,CAAC;IACJ,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,OAAO;QACL,wDAAiC;IACnC,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,kBAAkB,CAAC,WAAwC,EAAE,cAA8C;QAEhH,MAAM,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,+BAA+B,CAAC;QACvE,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,CAAC,IAAI,CAAC,sDAAsD,CAAC,CAAC;YACrE,OAAO,EAAE,CAAC;QACZ,CAAC;QACD,OAAO,CAAC,IAAI,wBAAwB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;IAC9D,CAAC;CACF","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {MarkdownIssueDescription} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n   *@description Title for Partitioning BlobURL explainer url link.\n   */\n  partitioningBlobURL: 'Partitioning BlobURL',\n  /**\n   *@description Title for Chrome Status Entry url link.\n   */\n  chromeStatusEntry: 'Chrome Status Entry'\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/PartitioningBlobURLIssue.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class PartitioningBlobURLIssue extends Issue {\n  readonly #issueDetails: Protocol.Audits.PartitioningBlobURLIssueDetails;\n\n  constructor(issueDetails: Protocol.Audits.PartitioningBlobURLIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    super(Protocol.Audits.InspectorIssueCode.PartitioningBlobURLIssue, issuesModel);\n    this.#issueDetails = issueDetails;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.OTHER;\n  }\n\n  getDescription(): MarkdownIssueDescription {\n    const fileName = this.#issueDetails.partitioningBlobURLInfo ===\n            Protocol.Audits.PartitioningBlobURLInfo.BlockedCrossPartitionFetching ?\n        'fetchingPartitionedBlobURL.md' :\n        'navigatingPartitionedBlobURL.md';\n    return {\n      file: fileName,\n      links: [\n        {\n          link: 'https://developers.google.com/privacy-sandbox/cookies/storage-partitioning',\n          linkTitle: i18nString(UIStrings.partitioningBlobURL),\n        },\n        {\n          link: 'https://chromestatus.com/feature/5130361898795008',\n          linkTitle: i18nString(UIStrings.chromeStatusEntry),\n        },\n      ],\n    };\n  }\n\n  details(): Protocol.Audits.PartitioningBlobURLIssueDetails {\n    return this.#issueDetails;\n  }\n\n  getKind(): IssueKind {\n    return IssueKind.BREAKING_CHANGE;\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.#issueDetails);\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      PartitioningBlobURLIssue[] {\n    const details = inspectorIssue.details.partitioningBlobURLIssueDetails;\n    if (!details) {\n      console.warn('Partitioning BlobURL issue without details received.');\n      return [];\n    }\n    return [new PartitioningBlobURLIssue(details, issuesModel)];\n  }\n}\n"]}