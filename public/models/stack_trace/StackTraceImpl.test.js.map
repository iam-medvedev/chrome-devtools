{"version":3,"file":"StackTraceImpl.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/stack_trace/StackTraceImpl.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {protocolCallFrame, stringifyFragment} from '../../testing/StackTraceHelpers.js';\n\nimport * as StackTraceImpl from './stack_trace_impl.js';\n\ndescribe('FragmentImpl', () => {\n  const {FragmentImpl, FrameImpl} = StackTraceImpl.StackTraceImpl;\n\n  describe('getOrCreate', () => {\n    it('returns the same fragment for the same node', () => {\n      const trie = new StackTraceImpl.Trie.Trie();\n      const node = trie.insert([protocolCallFrame('foo.js:1:foo:1:10')]);\n\n      assert.strictEqual(FragmentImpl.getOrCreate(node), FragmentImpl.getOrCreate(node));\n    });\n\n    it('returns different fragments for different nodes', () => {\n      const trie = new StackTraceImpl.Trie.Trie();\n      const node1 = trie.insert([protocolCallFrame('foo.js:1:foo:1:10')]);\n      const node2 = trie.insert([protocolCallFrame('bar.js:2:bar:2:20')]);\n\n      assert.notStrictEqual(FragmentImpl.getOrCreate(node1), FragmentImpl.getOrCreate(node2));\n    });\n  });\n\n  describe('frames', () => {\n    function identity(rawFrame: StackTraceImpl.Trie.RawFrame): StackTraceImpl.StackTraceImpl.FrameImpl {\n      return new FrameImpl(rawFrame.url, undefined, rawFrame.functionName, rawFrame.lineNumber, rawFrame.columnNumber);\n    }\n\n    it('returns the call stack', () => {\n      const trie = new StackTraceImpl.Trie.Trie();\n      const node = trie.insert(['foo.js:1:foo:1:10', 'bar.js:2:bar:2:20'].map(protocolCallFrame));\n      for (const n of node.getCallStack()) {\n        n.frames = [identity(n.rawFrame)];\n      }\n      const fragment = FragmentImpl.getOrCreate(node);\n\n      assert.strictEqual(stringifyFragment(fragment), [\n        'at foo (foo.js:1:10)',\n        'at bar (bar.js:2:20)',\n      ].join('\\n'));\n    });\n\n    it('handles inlined frames correctly', () => {\n      const trie = new StackTraceImpl.Trie.Trie();\n      const node = trie.insert(['foo.js:1:foo:1:10', 'bar.js:2:bar:2:20'].map(protocolCallFrame));\n      for (const n of node.getCallStack()) {\n        n.frames = [identity(n.rawFrame)];\n      }\n      node.frames.unshift(new FrameImpl('inlined.ts', undefined, 'inlinedFn', 3, 30));\n      const fragment = FragmentImpl.getOrCreate(node);\n\n      assert.strictEqual(stringifyFragment(fragment), [\n        'at inlinedFn (inlined.ts:3:30)',\n        'at foo (foo.js:1:10)',\n        'at bar (bar.js:2:20)',\n      ].join('\\n'));\n    });\n\n    it('handles outlined frames correctly', () => {\n      const trie = new StackTraceImpl.Trie.Trie();\n      const node =\n          trie.insert(['bundle.js:1:foo:1:10', 'bundle.js:1:bar:2:20', 'bundle.js:1:baz:3:30'].map(protocolCallFrame));\n      node.frames = [new FrameImpl('foo.ts', undefined, 'foo', 1, 0)];\n      const fragment = FragmentImpl.getOrCreate(node);\n\n      assert.strictEqual(stringifyFragment(fragment), 'at foo (foo.ts:1:0)');\n    });\n  });\n});\n"]}