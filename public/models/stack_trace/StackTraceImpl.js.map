{"version":3,"file":"StackTraceImpl.js","sourceRoot":"","sources":["../../../../../../front_end/models/stack_trace/StackTraceImpl.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AAMtD,MAAM,OAAO,cAAe,SAAQ,MAAM,CAAC,aAAa,CAAC,aAA+C;IAE7F,YAAY,CAAe;IAC3B,cAAc,CAA+B;IAEtD,YAAY,YAA0B,EAAE,cAAmC;QACzE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QAErC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7F,CAAC;CACF;AAED,MAAM,OAAO,YAAY;IACd,IAAI,CAAY;IAChB,WAAW,GAAG,IAAI,GAAG,EAAkB,CAAC;IAEjD;;;;OAIG;IACH,MAAM,CAAC,WAAW,CAAC,IAAe;QAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,YAAoB,IAAe;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,IAAI,MAAM;QACR,MAAM,MAAM,GAAgB,EAAE,CAAC;QAE/B,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAED,MAAM,OAAO,iBAAiB;IACP;IAA8B;IAAnD,YAAqB,WAAmB,EAAW,QAAsB;QAApD,gBAAW,GAAX,WAAW,CAAQ;QAAW,aAAQ,GAAR,QAAQ,CAAc;IACzE,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC9B,CAAC;CACF;AAED,MAAM,OAAO,SAAS;IACX,GAAG,CAAU;IACb,YAAY,CAAuC;IACnD,IAAI,CAAU;IACd,IAAI,CAAS;IACb,MAAM,CAAS;IAExB,YACI,GAAqB,EAAE,YAA2D,EAAE,IAAsB,EAC1G,IAAY,EAAE,MAAc;QAC9B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;CACF","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Workspace from '../workspace/workspace.js';\n\nimport type * as StackTrace from './stack_trace.js';\nimport type {FrameNode} from './Trie.js';\n\nexport class StackTraceImpl extends Common.ObjectWrapper.ObjectWrapper<StackTrace.StackTrace.EventTypes> implements\n    StackTrace.StackTrace.StackTrace {\n  readonly syncFragment: FragmentImpl;\n  readonly asyncFragments: readonly AsyncFragmentImpl[];\n\n  constructor(syncFragment: FragmentImpl, asyncFragments: AsyncFragmentImpl[]) {\n    super();\n    this.syncFragment = syncFragment;\n    this.asyncFragments = asyncFragments;\n\n    syncFragment.stackTraces.add(this);\n    this.asyncFragments.forEach(asyncFragment => asyncFragment.fragment.stackTraces.add(this));\n  }\n}\n\nexport class FragmentImpl implements StackTrace.StackTrace.Fragment {\n  readonly node: FrameNode;\n  readonly stackTraces = new Set<StackTraceImpl>();\n\n  /**\n   * Fragments are deduplicated based on the node.\n   *\n   * In turn, each fragment can be part of multiple stack traces.\n   */\n  static getOrCreate(node: FrameNode): FragmentImpl {\n    if (!node.fragment) {\n      node.fragment = new FragmentImpl(node);\n    }\n    return node.fragment;\n  }\n\n  private constructor(node: FrameNode) {\n    this.node = node;\n  }\n\n  get frames(): FrameImpl[] {\n    const frames: FrameImpl[] = [];\n\n    for (const node of this.node.getCallStack()) {\n      frames.push(...node.frames);\n    }\n\n    return frames;\n  }\n}\n\nexport class AsyncFragmentImpl implements StackTrace.StackTrace.AsyncFragment {\n  constructor(readonly description: string, readonly fragment: FragmentImpl) {\n  }\n\n  get frames(): StackTrace.StackTrace.Frame[] {\n    return this.fragment.frames;\n  }\n}\n\nexport class FrameImpl implements StackTrace.StackTrace.Frame {\n  readonly url?: string;\n  readonly uiSourceCode?: Workspace.UISourceCode.UISourceCode;\n  readonly name?: string;\n  readonly line: number;\n  readonly column: number;\n\n  constructor(\n      url: string|undefined, uiSourceCode: Workspace.UISourceCode.UISourceCode|undefined, name: string|undefined,\n      line: number, column: number) {\n    this.url = url;\n    this.uiSourceCode = uiSourceCode;\n    this.name = name;\n    this.line = line;\n    this.column = column;\n  }\n}\n"]}