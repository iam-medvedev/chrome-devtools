{"version":3,"file":"StackTraceModel.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/stack_trace/StackTraceModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection, setMockConnectionResponseHandler} from '../../testing/MockConnection.js';\nimport {protocolCallFrame, stringifyStackTrace} from '../../testing/StackTraceHelpers.js';\n\nimport * as StackTrace from './stack_trace.js';\nimport * as StackTraceImpl from './stack_trace_impl.js';\n\ndescribeWithMockConnection('StackTraceModel', () => {\n  const identityTranslateFn: StackTraceImpl.StackTraceModel.TranslateRawFrames = (frames, _target) =>\n      Promise.resolve(frames.map(f => [{\n                                   url: f.url,\n                                   name: f.functionName,\n                                   line: f.lineNumber,\n                                   column: f.columnNumber,\n                                 }]));\n\n  function setup() {\n    const target = createTarget();\n    return {\n      model: target.model(StackTraceImpl.StackTraceModel.StackTraceModel)!,\n      translateSpy: sinon.spy(identityTranslateFn),\n    };\n  }\n\n  describe('createFromProtocolRuntime', () => {\n    it('correctly handles a stack trace with only a sync fragment', async () => {\n      const {model} = setup();\n\n      const stackTrace = await model.createFromProtocolRuntime(\n          {\n            callFrames: [\n              'foo.js:1:foo:1:10',\n              'bar.js:2:bar:2:20',\n              'baz.js:3:baz:3:30',\n            ].map(protocolCallFrame)\n          },\n          identityTranslateFn);\n\n      assert.strictEqual(stringifyStackTrace(stackTrace), [\n        'at foo (foo.js:1:10)',\n        'at bar (bar.js:2:20)',\n        'at baz (baz.js:3:30)',\n      ].join('\\n'));\n    });\n\n    it('correctly handles async fragments from the same target', async () => {\n      const {model} = setup();\n\n      const stackTrace = await model.createFromProtocolRuntime(\n          {\n            callFrames: [\n              'foo.js:1:foo:1:10',\n              'foo.js:1:bar:2:20',\n            ].map(protocolCallFrame),\n            parent: {\n              description: 'setTimeout',\n              callFrames: [\n                'bar.js:2:barFnX:1:10',\n                'bar.js:2:barFnY:2:20',\n              ].map(protocolCallFrame),\n              parent: {\n                description: 'await',\n                callFrames: [\n                  'baz.js:3:bazFnY:1:10',\n                  'baz.js:3:bazFnY:2:20',\n                ].map(protocolCallFrame),\n              }\n            }\n          },\n          identityTranslateFn);\n\n      assert.strictEqual(stringifyStackTrace(stackTrace), [\n        'at foo (foo.js:1:10)',\n        'at bar (foo.js:2:20)',\n        '--- setTimeout -------------------------',\n        'at barFnX (bar.js:1:10)',\n        'at barFnY (bar.js:2:20)',\n        '--- await ------------------------------',\n        'at bazFnY (baz.js:1:10)',\n        'at bazFnY (baz.js:2:20)',\n      ].join('\\n'));\n    });\n\n    it('correctly handles a async fragments from different targets', async () => {\n      {\n        let index = 0;\n        setMockConnectionResponseHandler('Debugger.enable', () => ({debuggerId: `target${index++}`}));\n        sinon.stub(SDK.DebuggerModel.DebuggerModel, 'resyncDebuggerIdForModels');\n      }\n      const {model} = setup();\n      const [model1, model2] = [\n        createTarget().model(SDK.DebuggerModel.DebuggerModel)!, createTarget().model(SDK.DebuggerModel.DebuggerModel)!\n      ];\n\n      await Promise.all([\n        model1.once(SDK.DebuggerModel.Events.DebuggerIsReadyToPause),\n        model2.once(SDK.DebuggerModel.Events.DebuggerIsReadyToPause)\n      ]);\n\n      sinon.stub(model1, 'fetchAsyncStackTrace').returns(Promise.resolve({\n        description: 'setTimeout',\n        callFrames: [\n          'bar.js:2:barFnX:1:10',\n          'bar.js:2:barFnY:2:20',\n        ].map(protocolCallFrame),\n        parentId: {id: 'async-fragment-2', debuggerId: model2.debuggerId() as Protocol.Runtime.UniqueDebuggerId},\n      }));\n      sinon.stub(model2, 'fetchAsyncStackTrace').returns(Promise.resolve({\n        description: 'await',\n        callFrames: [\n          'baz.js:3:bazFnY:1:10',\n          'baz.js:3:bazFnY:2:20',\n        ].map(protocolCallFrame),\n      }));\n\n      const stackTrace = await model.createFromProtocolRuntime(\n          {\n            callFrames: [\n              'foo.js:1:foo:1:10',\n              'foo.js:1:bar:2:20',\n            ].map(protocolCallFrame),\n            parentId: {id: 'async-fragment-1', debuggerId: model1.debuggerId() as Protocol.Runtime.UniqueDebuggerId},\n          },\n          identityTranslateFn);\n\n      assert.strictEqual(stringifyStackTrace(stackTrace), [\n        'at foo (foo.js:1:10)',\n        'at bar (foo.js:2:20)',\n        '--- setTimeout -------------------------',\n        'at barFnX (bar.js:1:10)',\n        'at barFnY (bar.js:2:20)',\n        '--- await ------------------------------',\n        'at bazFnY (baz.js:1:10)',\n        'at bazFnY (baz.js:2:20)',\n      ].join('\\n'));\n    });\n\n    it('calls the translate function with the correct raw frames', async () => {\n      const {model, translateSpy} = setup();\n      const callFrames = [\n        'foo.js:1:foo:1:10',\n        'bar.js:2:bar:2:20',\n        'baz.js:3:baz:3:30',\n      ].map(protocolCallFrame);\n\n      await model.createFromProtocolRuntime({callFrames}, translateSpy);\n\n      sinon.assert.calledOnceWithMatch(translateSpy, callFrames, model.target());\n    });\n\n    it('throws if the translation function returns the wrong number of frames', async () => {\n      const {model} = setup();\n\n      try {\n        await model.createFromProtocolRuntime(\n            {\n              callFrames: [protocolCallFrame('foo.js:1:foo:1:10')],\n            },\n            () => Promise.resolve([]));\n        assert.fail('Expected translateFragment to throw');\n      } catch {\n      }\n    });\n\n    it('forwards missing debug info', async () => {\n      const {model} = setup();\n      const translateFn: StackTraceImpl.StackTraceModel.TranslateRawFrames = (frames, _target) =>\n          Promise.resolve(frames.map(f => [{\n                                       url: f.url,\n                                       name: f.functionName,\n                                       line: f.lineNumber,\n                                       column: f.columnNumber,\n                                       missingDebugInfo: {type: StackTrace.StackTrace.MissingDebugInfoType.NO_INFO},\n                                     }]));\n\n      const stackTrace =\n          await model.createFromProtocolRuntime({callFrames: [protocolCallFrame('foo.js:1:foo:1:10')]}, translateFn);\n\n      assert.strictEqual(\n          stackTrace.syncFragment.frames[0].missingDebugInfo?.type, StackTrace.StackTrace.MissingDebugInfoType.NO_INFO);\n    });\n  });\n\n  describe('scriptInfoChanged', () => {\n    const createUpdatedSpy = (stackTrace: StackTrace.StackTrace.StackTrace) => {\n      const updatedSpy = sinon.spy();\n      stackTrace.addEventListener(StackTrace.StackTrace.Events.UPDATED, updatedSpy);\n      return updatedSpy;\n    };\n\n    it('re-translates and notifies a single stack trace', async () => {\n      const {model, translateSpy} = setup();\n      const callFrames = [\n        'foo.js:id1:foo:1:10',\n        'bar.js:id2:bar:2:20',\n      ].map(protocolCallFrame);\n      const stackTrace = await model.createFromProtocolRuntime({callFrames}, identityTranslateFn);\n      const updatedSpy = createUpdatedSpy(stackTrace);\n      const script = {scriptId: 'id1', sourceURL: 'foo.js'} as SDK.Script.Script;\n\n      await model.scriptInfoChanged(script, translateSpy);\n\n      sinon.assert.calledOnce(updatedSpy);\n      sinon.assert.calledOnceWithMatch(translateSpy, callFrames, model.target());\n    });\n\n    it('only re-translates affected fragments and notifies affected stack traces', async () => {\n      const {model, translateSpy} = setup();\n      const callFrames1 = [\n        'foo.js:id1:foo:1:10',\n        'bar.js:id2:bar:2:20',\n      ].map(protocolCallFrame);\n      const callFrames2 = [\n        'foo.js:id1:foo:1:10',\n        'baz.js:id3:bar:3:30',\n      ].map(protocolCallFrame);\n      const stackTrace1 = await model.createFromProtocolRuntime({callFrames: callFrames1}, identityTranslateFn);\n      const stackTrace2 = await model.createFromProtocolRuntime({callFrames: callFrames2}, identityTranslateFn);\n      const [updatedSpy1, updatedSpy2] = [createUpdatedSpy(stackTrace1), createUpdatedSpy(stackTrace2)];\n      const script = {scriptId: 'id2', sourceURL: 'bar.js'} as SDK.Script.Script;\n\n      await model.scriptInfoChanged(script, translateSpy);\n\n      sinon.assert.calledOnceWithMatch(translateSpy, callFrames1, model.target());\n      sinon.assert.calledOnce(updatedSpy1);\n      sinon.assert.notCalled(updatedSpy2);\n    });\n\n    it('notifies a stack trace once, even when multiple fragments are affected', async () => {\n      const {model, translateSpy} = setup();\n      const stackTrace = await model.createFromProtocolRuntime(\n          {\n            callFrames: [\n              'foo.js:id1:foo:1:10',\n              'bar.js:id2:bar:2:20',\n            ].map(protocolCallFrame),\n            parent: {\n              description: 'setTimeout',\n              callFrames: [\n                'foo.js:id1:someFn:3:30',\n                'baz.js:id3:bar:4:40',\n              ].map(protocolCallFrame),\n            }\n          },\n          identityTranslateFn);\n      const updatedSpy = createUpdatedSpy(stackTrace);\n      const script = {scriptId: 'id1', sourceURL: 'foo.js'} as SDK.Script.Script;\n\n      await model.scriptInfoChanged(script, translateSpy);\n\n      sinon.assert.calledTwice(translateSpy);\n      sinon.assert.calledOnce(updatedSpy);\n    });\n\n    it('matches fragments based on URL if scriptId is missing', async () => {\n      const {model, translateSpy} = setup();\n      const callFrames = [protocolCallFrame('foo.js::foo:1:10')];\n      const stackTrace = await model.createFromProtocolRuntime({callFrames}, identityTranslateFn);\n      const updatedSpy = createUpdatedSpy(stackTrace);\n      const script = {scriptId: 'scriptId1', sourceURL: 'foo.js'} as SDK.Script.Script;\n\n      await model.scriptInfoChanged(script, translateSpy);\n\n      sinon.assert.calledOnceWithMatch(translateSpy, callFrames);\n      sinon.assert.calledOnce(updatedSpy);\n    });\n\n    it('does nothing if no fragments are affected', async () => {\n      const {model, translateSpy} = setup();\n      const callFrames = [protocolCallFrame('foo.js:1:foo:1:10')];\n      const stackTrace = await model.createFromProtocolRuntime({callFrames}, identityTranslateFn);\n      const updatedSpy = createUpdatedSpy(stackTrace);\n      const script = {scriptId: 'otherScriptId', sourceURL: 'bar.js'} as SDK.Script.Script;\n\n      await model.scriptInfoChanged(script, translateSpy);\n\n      sinon.assert.notCalled(translateSpy);\n      sinon.assert.notCalled(updatedSpy);\n    });\n\n    it('does not re-translate fragments that are a complete sub-set of another fragment (but notifies stack traces)',\n       async () => {\n         const {model, translateSpy} = setup();\n         const fullCallFrames = [\n           'foo.js:id1:foo:1:10',\n           'bar.js:id2:bar:2:20',\n           'baz.js:id3:bar:3:30',\n         ].map(protocolCallFrame);\n         const subSetFrames = [\n           'bar.js:id2:bar:2:20',\n           'baz.js:id3:bar:3:30',\n         ].map(protocolCallFrame);\n         const fullStackTrace =\n             await model.createFromProtocolRuntime({callFrames: fullCallFrames}, identityTranslateFn);\n         const subSetStackTrace =\n             await model.createFromProtocolRuntime({callFrames: subSetFrames}, identityTranslateFn);\n         const [updatedSpyFull, updatedSpySubSet] =\n             [createUpdatedSpy(fullStackTrace), createUpdatedSpy(subSetStackTrace)];\n         const script = {scriptId: 'id2', sourceURL: 'bar.js'} as SDK.Script.Script;\n\n         await model.scriptInfoChanged(script, translateSpy);\n\n         sinon.assert.calledOnceWithMatch(translateSpy, fullCallFrames, model.target());\n         sinon.assert.calledOnce(updatedSpyFull);\n         sinon.assert.calledOnce(updatedSpySubSet);\n       });\n\n    it('forwards missing debug info', async () => {\n      const {model} = setup();\n      const translateFn: StackTraceImpl.StackTraceModel.TranslateRawFrames = (frames, _target) =>\n          Promise.resolve(frames.map(f => [{\n                                       url: f.url,\n                                       name: f.functionName,\n                                       line: f.lineNumber,\n                                       column: f.columnNumber,\n                                       missingDebugInfo: {type: StackTrace.StackTrace.MissingDebugInfoType.NO_INFO},\n                                     }]));\n      const stackTrace = await model.createFromProtocolRuntime(\n          {callFrames: [protocolCallFrame('foo.js:1:foo:1:10')]}, identityTranslateFn);\n      assert.isUndefined(stackTrace.syncFragment.frames[0].missingDebugInfo);\n      const script = {scriptId: '1', sourceURL: 'bar.js'} as SDK.Script.Script;\n\n      await model.scriptInfoChanged(script, translateFn);\n\n      const frame = stackTrace.syncFragment.frames[0];\n      assert.strictEqual(frame.missingDebugInfo?.type, StackTrace.StackTrace.MissingDebugInfoType.NO_INFO);\n    });\n  });\n});\n"]}