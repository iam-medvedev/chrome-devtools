{
  "version": 3,
  "sources": ["../../../../../../front_end/models/stack_trace/StackTrace.ts"],
  "sourcesContent": ["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as Workspace from '../workspace/workspace.js';\n\nexport interface StackTrace extends Common.EventTarget.EventTarget<EventTypes> {\n  readonly syncFragment: Fragment;\n  readonly asyncFragments: readonly AsyncFragment[];\n}\n\nexport interface Fragment {\n  readonly frames: readonly Frame[];\n}\n\nexport interface AsyncFragment extends Fragment {\n  readonly description: string;\n}\n\nexport interface Frame {\n  readonly url?: string;\n  readonly uiSourceCode?: Workspace.UISourceCode.UISourceCode;\n  readonly name?: string;\n  readonly line: number;\n  readonly column: number;\n\n  readonly missingDebugInfo?: MissingDebugInfo;\n}\n\nexport const enum MissingDebugInfoType {\n  /** No debug information at all for the call frame */\n  NO_INFO = 'NO_INFO',\n\n  /** Some debug information available, but it references files with debug information we were not able to retrieve */\n  PARTIAL_INFO = 'PARTIAL_INFO',\n}\n\nexport type MissingDebugInfo = {\n  type: MissingDebugInfoType.NO_INFO,\n}|{\n  type: MissingDebugInfoType.PARTIAL_INFO,\n  missingDebugFiles: SDK.DebuggerModel.MissingDebugFiles[],\n};\n\nexport const enum Events {\n  UPDATED = 'UPDATED',\n}\n\nexport interface EventTypes {\n  [Events.UPDATED]: void;\n}\n"],
  "mappings": ";AAAA;",
  "names": []
}
