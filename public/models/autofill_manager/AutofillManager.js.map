{"version":3,"file":"AutofillManager.js","sourceRoot":"","sources":["../../../../../../front_end/models/autofill_manager/AutofillManager.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,IAAI,uBAAwC,CAAC;AAE7C,MAAM,OAAO,eAAgB,SAAQ,MAAM,CAAC,aAAa,CAAC,aAAyB;IACjF,uBAAuB,GAAkD,IAAI,CAAC;IAC9E,oBAAoB,CAAmC;IAEvD;QACE,KAAK,EAAE,CAAC;QACR,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,GAAG,CAAC,aAAa,CAAC,aAAa,EAAE,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,EAC1G,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;QACpB,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC;IACrH,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,OAAiC,EAAC,QAAQ,EAAE,IAAI,EAAC;QAC/D,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,uBAAuB,IAAI,QAAQ,EAAE;YACxC,uBAAuB,GAAG,IAAI,eAAe,EAAE,CAAC;SACjD;QACD,OAAO,uBAAuB,CAAC;IACjC,CAAC;IAED,KAAK,CAAC,kBAAkB,CACpB,EAAC,IAAI,EAC0F;QACjG,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,EAAE;YACnC,MAAM,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;SACvE;QACD,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,wBAAwB;QACtB,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACtC,CAAC;CACF;AAED,wDAAwD;AACxD,+CAA+C;AAC/C,MAAM,CAAN,IAAY,MAEX;AAFD,WAAY,MAAM;IAChB,iDAAuC,CAAA;AACzC,CAAC,EAFW,MAAM,KAAN,MAAM,QAEjB","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nlet autofillManagerInstance: AutofillManager;\n\nexport class AutofillManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  #addressFormFilledEvent: SDK.AutofillModel.AddressFormFilledEvent|null = null;\n  #autoOpenViewSetting: Common.Settings.Setting<boolean>;\n\n  private constructor() {\n    super();\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.AutofillModel.AutofillModel, SDK.AutofillModel.Events.AddressFormFilled, this.#addressFormFilled, this,\n        {scoped: true});\n    this.#autoOpenViewSetting = Common.Settings.Settings.instance().createSetting('autoOpenAutofillViewOnEvent', true);\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): AutofillManager {\n    const {forceNew} = opts;\n    if (!autofillManagerInstance || forceNew) {\n      autofillManagerInstance = new AutofillManager();\n    }\n    return autofillManagerInstance;\n  }\n\n  async #addressFormFilled(\n      {data}: Common.EventTarget\n          .EventTargetEvent<SDK.AutofillModel.EventTypes[SDK.AutofillModel.Events.AddressFormFilled]>): Promise<void> {\n    this.#addressFormFilledEvent = data;\n    if (this.#autoOpenViewSetting.get()) {\n      await UI.ViewManager.ViewManager.instance().showView('autofill-view');\n    }\n    this.dispatchEventToListeners(Events.AddressFormFilled, data);\n  }\n\n  getLastFilledAddressForm(): SDK.AutofillModel.AddressFormFilledEvent|null {\n    return this.#addressFormFilledEvent;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  AddressFormFilled = 'AddressFormFilled',\n}\n\nexport interface AddressFormFilledEvent {\n  autofillModel: SDK.AutofillModel.AutofillModel;\n  event: Protocol.Autofill.AddressFormFilledEvent;\n}\n\nexport type EventTypes = {\n  [Events.AddressFormFilled]: AddressFormFilledEvent,\n};\n"]}