{"version":3,"file":"web-vitals-injected.js","sourceRoot":"","sources":["../../../../../../../front_end/models/live-metrics/web-vitals-injected/web-vitals-injected.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as WebVitals from '../../../third_party/web-vitals/web-vitals.js';\nimport type * as Trace from '../../trace/trace.js';\n\nimport * as OnEachInteraction from './OnEachInteraction.js';\nimport * as OnEachLayoutShift from './OnEachLayoutShift.js';\nimport * as Spec from './spec/spec.js';\n\nconst {onLCP, onCLS, onINP} = WebVitals.Attribution;\nconst {onEachInteraction} = OnEachInteraction;\nconst {onEachLayoutShift} = OnEachLayoutShift;\n\ndeclare const window: Window&{\n  getNodeForIndex: (index: number) => Node | undefined,\n  [Spec.INTERNAL_KILL_SWITCH]: () => void,\n  [Spec.EVENT_BINDING_NAME]: (payload: string) => void,\n};\n\ntype ListenerArgs = Parameters<typeof globalThis['addEventListener']>;\n\nconst windowListeners: ListenerArgs[] = [];\nconst documentListeners: ListenerArgs[] = [];\nconst observers: PerformanceObserver[] = [];\n\nconst originalWindowAddListener = Window.prototype.addEventListener;\nWindow.prototype.addEventListener = function(...args: ListenerArgs) {\n  windowListeners.push(args);\n  return originalWindowAddListener.call(this, ...args);\n};\n\nconst originalDocumentAddListener = Document.prototype.addEventListener;\nDocument.prototype.addEventListener = function(...args: ListenerArgs) {\n  documentListeners.push(args);\n  return originalDocumentAddListener.call(this, ...args);\n};\n\nclass InternalPerformanceObserver extends PerformanceObserver {\n  constructor(...args: ConstructorParameters<typeof PerformanceObserver>) {\n    super(...args);\n    observers.push(this);\n  }\n}\nglobalThis.PerformanceObserver = InternalPerformanceObserver;\n\nlet killed = false;\n\n/**\n * This is a hack solution to remove any listeners that were added by web-vitals.js\n * or additional services in this bundle. Once this function is called, the execution\n * context should be considered dead and a new one will need to be created for live metrics\n * to be served again.\n */\nwindow[Spec.INTERNAL_KILL_SWITCH] = () => {\n  if (killed) {\n    return;\n  }\n\n  for (const observer of observers) {\n    observer.disconnect();\n  }\n\n  for (const args of windowListeners) {\n    window.removeEventListener(...args);\n  }\n\n  for (const args of documentListeners) {\n    document.removeEventListener(...args);\n  }\n\n  killed = true;\n};\n\nfunction sendEventToDevTools(event: Spec.WebVitalsEvent): void {\n  const payload = JSON.stringify(event);\n  window[Spec.EVENT_BINDING_NAME](payload);\n}\n\nconst nodeList: Array<WeakRef<Node>> = [];\n\nfunction establishNodeIndex(node: Node): number {\n  const index = nodeList.length;\n  nodeList.push(new WeakRef(node));\n  return index;\n}\n\n/**\n * The data sent over the event binding needs to be JSON serializable, so we\n * can't send DOM nodes directly. Instead we create an ID for each node (see\n * `establishNodeIndex`) that we can later use to retrieve a remote object\n * for that node.\n *\n * This function is used by `Runtime.evaluate` calls to get a remote object\n * for the specified index.\n */\nwindow.getNodeForIndex = (index: number): Node|undefined => {\n  return nodeList[index].deref();\n};\n\nfunction limitScripts(loafs: Spec.PerformanceLongAnimationFrameTimingJSON[]):\n    Spec.PerformanceLongAnimationFrameTimingJSON[] {\n  return loafs.map(loaf => {\n    const longestScripts: Spec.PerformanceScriptTimingJSON[] = [];\n    for (const script of loaf.scripts) {\n      if (longestScripts.length < Spec.SCRIPTS_PER_LOAF_LIMIT) {\n        longestScripts.push(script);\n        continue;\n      }\n\n      const shorterIndex = longestScripts.findIndex(s => s.duration < script.duration);\n      if (shorterIndex === -1) {\n        continue;\n      }\n\n      longestScripts[shorterIndex] = script;\n    }\n    longestScripts.sort((a, b) => a.startTime - b.startTime);\n    loaf.scripts = longestScripts;\n    return loaf;\n  });\n}\n\nfunction isPrerendered(): boolean {\n  if (document.prerendering) {\n    return true;\n  }\n\n  const firstNavStart = self.performance.getEntriesByType?.('navigation')[0]?.activationStart;\n  return firstNavStart !== undefined && firstNavStart > 0;\n}\n\nlet startedHidden: boolean|null = null;\n\nfunction initialize(): void {\n  sendEventToDevTools({name: 'reset'});\n\n  new PerformanceObserver(list => {\n    for (const entry of list.getEntries()) {\n      if (startedHidden === null && !isPrerendered()) {\n        startedHidden = entry.name === 'hidden';\n      }\n    }\n  }).observe({type: 'visibility-state', buffered: true});\n\n  // We want to treat bfcache navigations like a standard navigations, so emit\n  // a reset event when bfcache is restored.\n  //\n  // Metric functions will also re-emit their values using this listener's callback.\n  // To ensure this event is fired before those values are emitted, register this\n  // callback before any others.\n  WebVitals.onBFCacheRestore(() => {\n    startedHidden = false;\n    sendEventToDevTools({name: 'reset'});\n  });\n\n  onLCP(metric => {\n    const event: Spec.LcpChangeEvent = {\n      name: 'LCP',\n      value: metric.value as Trace.Types.Timing.Milli,\n      startedHidden: Boolean(startedHidden),\n      phases: {\n        timeToFirstByte: metric.attribution.timeToFirstByte as Trace.Types.Timing.Milli,\n        resourceLoadDelay: metric.attribution.resourceLoadDelay as Trace.Types.Timing.Milli,\n        resourceLoadTime: metric.attribution.resourceLoadDuration as Trace.Types.Timing.Milli,\n        elementRenderDelay: metric.attribution.elementRenderDelay as Trace.Types.Timing.Milli,\n      },\n    };\n\n    const element = metric.attribution.lcpEntry?.element;\n    if (element) {\n      event.nodeIndex = establishNodeIndex(element);\n    }\n    sendEventToDevTools(event);\n  }, {reportAllChanges: true});\n\n  onCLS(metric => {\n    const event: Spec.ClsChangeEvent = {\n      name: 'CLS',\n      value: metric.value,\n      clusterShiftIds: metric.entries.map(Spec.getUniqueLayoutShiftId),\n    };\n    sendEventToDevTools(event);\n  }, {reportAllChanges: true});\n\n  onINP(metric => {\n    // TODO(b/376777343): Remove this line when `interactionTargetElement` is removed from web-vitals.js\n    // The `metric` emitted in this callback is stored within web-vitals.js closures.\n    // This can lead to `interactionTargetElement` persisting in memory after it has been removed.\n    // We don't use `interactionTargetElement` here, and `onEachInteraction` will interaction\n    // elements separately so it is safe to remove here and prevent memory leaks.\n    metric.attribution.interactionTargetElement = undefined;\n\n    const event: Spec.InpChangeEvent = {\n      name: 'INP',\n      value: metric.value as Trace.Types.Timing.Milli,\n      phases: {\n        inputDelay: metric.attribution.inputDelay as Trace.Types.Timing.Milli,\n        processingDuration: metric.attribution.processingDuration as Trace.Types.Timing.Milli,\n        presentationDelay: metric.attribution.presentationDelay as Trace.Types.Timing.Milli,\n      },\n      startTime: metric.entries[0].startTime,\n      entryGroupId: metric.entries[0].interactionId as Spec.InteractionEntryGroupId,\n      interactionType: metric.attribution.interactionType,\n    };\n    sendEventToDevTools(event);\n  }, {reportAllChanges: true, durationThreshold: 0});\n\n  onEachInteraction(interaction => {\n    // Multiple `InteractionEntry` events can be emitted for the same `uniqueInteractionId`\n    // However, it is easier to combine these entries in the DevTools client rather than in\n    // this injected code.\n    const event: Spec.InteractionEntryEvent = {\n      name: 'InteractionEntry',\n      duration: interaction.value as Trace.Types.Timing.Milli,\n      phases: {\n        inputDelay: interaction.attribution.inputDelay as Trace.Types.Timing.Milli,\n        processingDuration: interaction.attribution.processingDuration as Trace.Types.Timing.Milli,\n        presentationDelay: interaction.attribution.presentationDelay as Trace.Types.Timing.Milli,\n      },\n      startTime: interaction.entries[0].startTime,\n      entryGroupId: interaction.entries[0].interactionId as Spec.InteractionEntryGroupId,\n      nextPaintTime: interaction.attribution.nextPaintTime,\n      interactionType: interaction.attribution.interactionType,\n      eventName: interaction.entries[0].name,\n      // To limit the amount of events, just get the last 5 LoAFs\n      longAnimationFrameEntries: limitScripts(\n          interaction.attribution.longAnimationFrameEntries.slice(-Spec.LOAF_LIMIT).map(loaf => loaf.toJSON())),\n    };\n    const node = interaction.attribution.interactionTargetElement;\n    if (node) {\n      event.nodeIndex = establishNodeIndex(node);\n    }\n    sendEventToDevTools(event);\n  });\n\n  onEachLayoutShift(layoutShift => {\n    const event: Spec.LayoutShiftEvent = {\n      name: 'LayoutShift',\n      score: layoutShift.value,\n      uniqueLayoutShiftId: Spec.getUniqueLayoutShiftId(layoutShift.entry),\n      affectedNodeIndices: layoutShift.attribution.affectedNodes.map(establishNodeIndex),\n    };\n\n    sendEventToDevTools(event);\n  });\n}\ninitialize();\n"]}