{"version":3,"file":"OnEachLayoutShift.js","sourceRoot":"","sources":["../../../../../../../front_end/models/live-metrics/web-vitals-injected/OnEachLayoutShift.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAU7B,MAAM,UAAU,iBAAiB,CAAC,QAA2D;IAC3F,MAAM,aAAa,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,EAAE;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,EAAwB,EAAE,CAAC,gBAAgB,IAAI,KAAK,CAAC,CAAC;QAErG,KAAK,MAAM,KAAK,IAAI,OAAO,EAAE,CAAC;YAC5B,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;gBACzB,SAAS;YACX,CAAC;YAED,MAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,YAAY,IAAI,CAAC,CAAC;YAEpG,QAAQ,CAAC;gBACP,WAAW,EAAE;oBACX,aAAa;iBACd;gBACD,KAAK;gBACL,KAAK,EAAE,KAAK,CAAC,KAAK;aACnB,CAAC,CAAC;QACL,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,aAAa,CAAC,OAAO,CAAC;QACpB,IAAI,EAAE,cAAc;QACpB,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;AACL,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport interface LayoutShiftWithAttribution {\n  attribution: {\n    affectedNodes: Node[],\n  };\n  entry: LayoutShift;\n  value: number;\n}\n\nexport function onEachLayoutShift(callback: (layoutShift: LayoutShiftWithAttribution) => void): void {\n  const eventObserver = new PerformanceObserver(list => {\n    const entries = list.getEntries().filter((entry): entry is LayoutShift => 'hadRecentInput' in entry);\n\n    for (const entry of entries) {\n      if (entry.hadRecentInput) {\n        continue;\n      }\n\n      const affectedNodes = entry.sources.map(source => source.node).filter(node => node instanceof Node);\n\n      callback({\n        attribution: {\n          affectedNodes,\n        },\n        entry,\n        value: entry.value,\n      });\n    }\n  });\n\n  eventObserver.observe({\n    type: 'layout-shift',\n    buffered: true,\n  });\n}\n"]}