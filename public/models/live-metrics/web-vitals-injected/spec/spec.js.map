{"version":3,"file":"spec.js","sourceRoot":"","sources":["../../../../../../../../front_end/models/live-metrics/web-vitals-injected/spec/spec.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAK7B,MAAM,CAAC,MAAM,kBAAkB,GAAG,sCAAsC,CAAC;AACzE,MAAM,CAAC,MAAM,oBAAoB,GAAG,uCAAuC,CAAC;AAE5E,MAAM,CAAC,MAAM,sBAAsB,GAAG,EAAE,CAAC;AACzC,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,CAAC;AAK5B,MAAM,UAAU,sBAAsB,CAAC,KAAkB;IACvD,OAAO,gBAAgB,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,SAAS,EAAE,CAAC;AAC1D,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {INPAttribution} from '../../../../third_party/web-vitals/web-vitals.js';\nimport type * as Trace from '../../../trace/trace.js';\n\nexport const EVENT_BINDING_NAME = '__chromium_devtools_metrics_reporter';\nexport const INTERNAL_KILL_SWITCH = '__chromium_devtools_kill_live_metrics';\n\nexport const SCRIPTS_PER_LOAF_LIMIT = 10;\nexport const LOAF_LIMIT = 5;\n\nexport type InteractionEntryGroupId = number&{_tag: 'InteractionEntryGroupId'};\nexport type UniqueLayoutShiftId = `layout-shift-${number}-${number}`;\n\nexport function getUniqueLayoutShiftId(entry: LayoutShift): UniqueLayoutShiftId {\n  return `layout-shift-${entry.value}-${entry.startTime}`;\n}\n\nexport interface LcpPhases {\n  timeToFirstByte: Trace.Types.Timing.Milli;\n  resourceLoadDelay: Trace.Types.Timing.Milli;\n  resourceLoadTime: Trace.Types.Timing.Milli;\n  elementRenderDelay: Trace.Types.Timing.Milli;\n}\n\nexport interface InpPhases {\n  inputDelay: Trace.Types.Timing.Milli;\n  processingDuration: Trace.Types.Timing.Milli;\n  presentationDelay: Trace.Types.Timing.Milli;\n}\n\nexport interface LcpChangeEvent {\n  name: 'LCP';\n  value: Trace.Types.Timing.Milli;\n  phases: LcpPhases;\n  startedHidden: boolean;\n  nodeIndex?: number;\n}\n\nexport interface ClsChangeEvent {\n  name: 'CLS';\n  value: number;\n  clusterShiftIds: UniqueLayoutShiftId[];\n}\n\nexport interface InpChangeEvent {\n  name: 'INP';\n  value: Trace.Types.Timing.Milli;\n  interactionType: INPAttribution['interactionType'];\n  phases: InpPhases;\n  startTime: number;\n  entryGroupId: InteractionEntryGroupId;\n}\n\n// These object keys will be user visible\n// TODO: Translate these keys before they are logged to console\n/* eslint-disable  @typescript-eslint/naming-convention */\nexport interface LoAFScript {\n  Duration: number;\n  'Invoker Type': string|null;\n  Invoker: string|null;\n  Function: string|null;\n  Source: string|null;\n  'Char position': number|null;\n}\n/* eslint-enable  @typescript-eslint/naming-convention */\n\nexport interface PerformanceScriptTimingJSON {\n  startTime: number;\n  duration: number;\n  invoker?: string;\n  invokerType?: string;\n  sourceFunctionName?: string;\n  sourceURL?: string;\n  sourceCharPosition?: number;\n}\n\nexport interface PerformanceLongAnimationFrameTimingJSON {\n  renderStart: DOMHighResTimeStamp;\n  duration: DOMHighResTimeStamp;\n  scripts: PerformanceScriptTimingJSON[];\n}\n\n/**\n * This event is not 1:1 with the interactions that the user sees in the interactions log.\n * It is 1:1 with a `PerformanceEventTiming` entry.\n */\nexport interface InteractionEntryEvent {\n  name: 'InteractionEntry';\n  interactionType: INPAttribution['interactionType'];\n  eventName: string;\n  entryGroupId: InteractionEntryGroupId;\n  startTime: number;\n  nextPaintTime: number;\n  duration: Trace.Types.Timing.Milli;\n  phases: InpPhases;\n  nodeIndex?: number;\n  longAnimationFrameEntries: PerformanceLongAnimationFrameTimingJSON[];\n}\n\nexport interface LayoutShiftEvent {\n  name: 'LayoutShift';\n  score: number;\n  uniqueLayoutShiftId: UniqueLayoutShiftId;\n  affectedNodeIndices: number[];\n}\n\nexport interface ResetEvent {\n  name: 'reset';\n}\n\nexport type WebVitalsEvent =\n    LcpChangeEvent|ClsChangeEvent|InpChangeEvent|InteractionEntryEvent|LayoutShiftEvent|ResetEvent;\n"]}