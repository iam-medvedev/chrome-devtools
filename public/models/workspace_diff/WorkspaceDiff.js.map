{"version":3,"file":"WorkspaceDiff.js","sourceRoot":"","sources":["../../../../../../front_end/models/workspace_diff/WorkspaceDiff.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Diff from '../../third_party/diff/diff.js';\nimport * as FormatterModule from '../formatter/formatter.js';\nimport * as Persistence from '../persistence/persistence.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\ninterface DiffResponse {\n  diff: Diff.Diff.DiffArray;\n  formattedCurrentMapping?: FormatterModule.ScriptFormatter.FormatterSourceMapping;\n}\n\nexport class WorkspaceDiffImpl extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  readonly #persistence = Persistence.Persistence.PersistenceImpl.instance();\n  readonly #diffs = new WeakMap<Workspace.UISourceCode.UISourceCode, UISourceCodeDiff>();\n  /** used in web tests */\n  private readonly loadingUISourceCodes =\n      new Map<Workspace.UISourceCode.UISourceCode, Promise<[string | null, string|null]>>();\n  readonly #modified = new Set<Workspace.UISourceCode.UISourceCode>();\n\n  constructor(workspace: Workspace.Workspace.WorkspaceImpl) {\n    super();\n    workspace.addEventListener(Workspace.Workspace.Events.WorkingCopyChanged, this.#uiSourceCodeChanged, this);\n    workspace.addEventListener(Workspace.Workspace.Events.WorkingCopyCommitted, this.#uiSourceCodeChanged, this);\n    workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeAdded, this.#uiSourceCodeAdded, this);\n    workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeRemoved, this.#uiSourceCodeRemoved, this);\n    workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved, this.#projectRemoved, this);\n    workspace.uiSourceCodes().forEach(this.#updateModifiedState.bind(this));\n  }\n\n  requestDiff(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<DiffResponse|null> {\n    return this.#uiSourceCodeDiff(uiSourceCode).requestDiff();\n  }\n\n  subscribeToDiffChange(uiSourceCode: Workspace.UISourceCode.UISourceCode, callback: () => void, thisObj?: Object):\n      void {\n    this.#uiSourceCodeDiff(uiSourceCode).addEventListener(UISourceCodeDiffEvents.DIFF_CHANGED, callback, thisObj);\n  }\n\n  unsubscribeFromDiffChange(uiSourceCode: Workspace.UISourceCode.UISourceCode, callback: () => void, thisObj?: Object):\n      void {\n    this.#uiSourceCodeDiff(uiSourceCode).removeEventListener(UISourceCodeDiffEvents.DIFF_CHANGED, callback, thisObj);\n  }\n\n  modifiedUISourceCodes(): Workspace.UISourceCode.UISourceCode[] {\n    return Array.from(this.#modified);\n  }\n\n  #uiSourceCodeDiff(uiSourceCode: Workspace.UISourceCode.UISourceCode): UISourceCodeDiff {\n    let diff = this.#diffs.get(uiSourceCode);\n    if (!diff) {\n      diff = new UISourceCodeDiff(uiSourceCode);\n      this.#diffs.set(uiSourceCode, diff);\n    }\n    return diff;\n  }\n\n  #uiSourceCodeChanged(event: Common.EventTarget.EventTargetEvent<{uiSourceCode: Workspace.UISourceCode.UISourceCode}>):\n      void {\n    const uiSourceCode = event.data.uiSourceCode;\n    void this.#updateModifiedState(uiSourceCode);\n  }\n\n  #uiSourceCodeAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    void this.#updateModifiedState(uiSourceCode);\n  }\n\n  #uiSourceCodeRemoved(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    this.#removeUISourceCode(uiSourceCode);\n  }\n\n  #projectRemoved(event: Common.EventTarget.EventTargetEvent<Workspace.Workspace.Project>): void {\n    const project = event.data;\n    for (const uiSourceCode of project.uiSourceCodes()) {\n      this.#removeUISourceCode(uiSourceCode);\n    }\n  }\n\n  #removeUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    this.loadingUISourceCodes.delete(uiSourceCode);\n    const uiSourceCodeDiff = this.#diffs.get(uiSourceCode);\n    if (uiSourceCodeDiff) {\n      uiSourceCodeDiff.dispose = true;\n    }\n    this.#markAsUnmodified(uiSourceCode);\n  }\n\n  #markAsUnmodified(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    this.uiSourceCodeProcessedForTest();\n    if (this.#modified.delete(uiSourceCode)) {\n      this.dispatchEventToListeners(Events.MODIFIED_STATUS_CHANGED, {uiSourceCode, isModified: false});\n    }\n  }\n\n  #markAsModified(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    this.uiSourceCodeProcessedForTest();\n    if (this.#modified.has(uiSourceCode)) {\n      return;\n    }\n    this.#modified.add(uiSourceCode);\n    this.dispatchEventToListeners(Events.MODIFIED_STATUS_CHANGED, {uiSourceCode, isModified: true});\n  }\n\n  private uiSourceCodeProcessedForTest(): void {\n  }\n\n  #shouldTrack(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    switch (uiSourceCode.project().type()) {\n      case Workspace.Workspace.projectTypes.Network:\n        // We track differences for all Network resources.\n        return this.#persistence.binding(uiSourceCode) === null;\n\n      case Workspace.Workspace.projectTypes.FileSystem:\n        // We track differences for FileSystem resources without bindings.\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  async #updateModifiedState(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    this.loadingUISourceCodes.delete(uiSourceCode);\n\n    if (!this.#shouldTrack(uiSourceCode)) {\n      this.#markAsUnmodified(uiSourceCode);\n      return;\n    }\n    if (uiSourceCode.isDirty()) {\n      this.#markAsModified(uiSourceCode);\n      return;\n    }\n    if (!uiSourceCode.hasCommits()) {\n      this.#markAsUnmodified(uiSourceCode);\n      return;\n    }\n\n    const contentsPromise = Promise.all([\n      this.requestOriginalContentForUISourceCode(uiSourceCode),\n      uiSourceCode.requestContentData().then(\n          contentDataOrError => TextUtils.ContentData.ContentData.textOr(contentDataOrError, null))\n    ]);\n\n    this.loadingUISourceCodes.set(uiSourceCode, contentsPromise);\n    const contents = await contentsPromise;\n    if (this.loadingUISourceCodes.get(uiSourceCode) !== contentsPromise) {\n      return;\n    }\n    this.loadingUISourceCodes.delete(uiSourceCode);\n\n    if (contents[0] !== null && contents[1] !== null && contents[0] !== contents[1]) {\n      this.#markAsModified(uiSourceCode);\n    } else {\n      this.#markAsUnmodified(uiSourceCode);\n    }\n  }\n\n  requestOriginalContentForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<string|null> {\n    return this.#uiSourceCodeDiff(uiSourceCode).originalContent();\n  }\n\n  revertToOriginal(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    function callback(content: string|null): void {\n      if (typeof content !== 'string') {\n        return;\n      }\n\n      uiSourceCode.addRevision(content);\n    }\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.RevisionApplied);\n    return this.requestOriginalContentForUISourceCode(uiSourceCode).then(callback);\n  }\n}\n\nexport const enum Events {\n  MODIFIED_STATUS_CHANGED = 'ModifiedStatusChanged',\n}\n\nexport interface ModifiedStatusChangedEvent {\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  isModified: boolean;\n}\n\nexport interface EventTypes {\n  [Events.MODIFIED_STATUS_CHANGED]: ModifiedStatusChangedEvent;\n}\n\nexport class UISourceCodeDiff extends Common.ObjectWrapper.ObjectWrapper<UISourceCodeDiffEventTypes> {\n  #uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  #requestDiffPromise: Promise<DiffResponse|null>|null = null;\n  #pendingChanges: number|null = null;\n  dispose = false;\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super();\n    this.#uiSourceCode = uiSourceCode;\n    uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this.#uiSourceCodeChanged, this);\n    uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this.#uiSourceCodeChanged, this);\n  }\n\n  #uiSourceCodeChanged(): void {\n    if (this.#pendingChanges) {\n      clearTimeout(this.#pendingChanges);\n      this.#pendingChanges = null;\n    }\n    this.#requestDiffPromise = null;\n\n    const content = this.#uiSourceCode.content();\n    const delay = (!content || content.length < 65536) ? 0 : 200;\n    this.#pendingChanges = window.setTimeout(emitDiffChanged.bind(this), delay);\n\n    function emitDiffChanged(this: UISourceCodeDiff): void {\n      if (this.dispose) {\n        return;\n      }\n      this.dispatchEventToListeners(UISourceCodeDiffEvents.DIFF_CHANGED);\n      this.#pendingChanges = null;\n    }\n  }\n\n  requestDiff(): Promise<DiffResponse|null> {\n    if (!this.#requestDiffPromise) {\n      this.#requestDiffPromise = this.#requestDiff();\n    }\n    return this.#requestDiffPromise;\n  }\n\n  async originalContent(): Promise<string|null> {\n    const originalNetworkContent =\n        Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().originalContentForUISourceCode(\n            this.#uiSourceCode);\n    if (originalNetworkContent) {\n      return await originalNetworkContent;\n    }\n\n    const content = await this.#uiSourceCode.project().requestFileContent(this.#uiSourceCode);\n    if (TextUtils.ContentData.ContentData.isError(content)) {\n      return content.error;\n    }\n    return content.asDeferedContent().content;\n  }\n\n  async #requestDiff(): Promise<DiffResponse|null> {\n    if (this.dispose) {\n      return null;\n    }\n\n    let baseline = await this.originalContent();\n    if (baseline === null) {\n      return null;\n    }\n    if (baseline.length > 1024 * 1024) {\n      return null;\n    }\n    // ------------ ASYNC ------------\n    if (this.dispose) {\n      return null;\n    }\n\n    let current = this.#uiSourceCode.workingCopy();\n    if (!current && !this.#uiSourceCode.contentLoaded()) {\n      const contentDataOrError = await this.#uiSourceCode.requestContentData();\n      if (TextUtils.ContentData.ContentData.isError(contentDataOrError)) {\n        return null;\n      }\n      current = contentDataOrError.text;\n    }\n\n    if (current.length > 1024 * 1024) {\n      return null;\n    }\n\n    if (this.dispose) {\n      return null;\n    }\n\n    baseline = (await FormatterModule.ScriptFormatter.format(\n                    this.#uiSourceCode.contentType(), this.#uiSourceCode.mimeType(), baseline))\n                   .formattedContent;\n    const formatCurrentResult = await FormatterModule.ScriptFormatter.format(\n        this.#uiSourceCode.contentType(), this.#uiSourceCode.mimeType(), current);\n    current = formatCurrentResult.formattedContent;\n    const formattedCurrentMapping = formatCurrentResult.formattedMapping;\n    const reNewline = /\\r\\n?|\\n/;\n    const diff = Diff.Diff.DiffWrapper.lineDiff(baseline.split(reNewline), current.split(reNewline));\n    return {\n      diff,\n      formattedCurrentMapping,\n    };\n  }\n}\n\nexport const enum UISourceCodeDiffEvents {\n  DIFF_CHANGED = 'DiffChanged',\n}\n\nexport interface UISourceCodeDiffEventTypes {\n  [UISourceCodeDiffEvents.DIFF_CHANGED]: void;\n}\n\nlet workspaceDiffImplInstance: WorkspaceDiffImpl|null = null;\n\nexport function workspaceDiff({forceNew}: {forceNew?: boolean} = {}): WorkspaceDiffImpl {\n  if (!workspaceDiffImplInstance || forceNew) {\n    workspaceDiffImplInstance = new WorkspaceDiffImpl(Workspace.Workspace.WorkspaceImpl.instance());\n  }\n  return workspaceDiffImplInstance;\n}\n"]}