{"version":3,"file":"WorkspaceDiff.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/workspace_diff/WorkspaceDiff.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,QAAQ,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,EAAC,uBAAuB,EAAC,MAAM,qCAAqC,CAAC;AAC5E,OAAO,EAAC,iCAAiC,EAAE,4BAA4B,EAAC,MAAM,sCAAsC,CAAC;AACrH,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AACpD,OAAO,KAAK,WAAW,MAAM,+BAA+B,CAAC;AAC7D,OAAO,KAAK,WAAW,MAAM,+BAA+B,CAAC;AAC7D,OAAO,KAAK,SAAS,MAAM,2BAA2B,CAAC;AACvD,OAAO,KAAK,aAAa,MAAM,qCAAqC,CAAC;AAErE,MAAM,EAAC,SAAS,EAAC,GAAG,QAAQ,CAAC,YAAY,CAAC;AAE1C,uBAAuB,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAC/C,SAAS,KAAK;QACZ,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAC/E,MAAM,wBAAwB,GAAG,QAAQ,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,QAAQ,CAAC;YACnG,QAAQ,EAAE,IAAI;YACd,aAAa,EAAE,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE;YACzD,eAAe,EACX,IAAI,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC;SACxG,CAAC,CAAC;QACH,MAAM,iBAAiB,GAAG,WAAW,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,CAAC;YACjF,QAAQ,EAAE,IAAI;YACd,aAAa,EAAE,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE;YACzD,SAAS;YACT,wBAAwB;SACzB,CAAC,CAAC;QACH,MAAM,WAAW,GACb,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,iBAAiB,EAAC,CAAC,CAAC;QACrG,WAAW,CAAC,yBAAyB,CAAC,yBAAyB,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC;QAEtG,OAAO,EAAC,SAAS,EAAE,WAAW,EAAC,CAAC;IAClC,CAAC;IAED,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,EAAC,SAAS,EAAC,GAAG,KAAK,EAAE,CAAC;QAC5B,MAAM,GAAG,GAAG,SAAS,CAAA,0BAA0B,CAAC;QAChD,MAAM,EAAC,YAAY,EAAE,OAAO,EAAC,GACzB,4BAA4B,CAAC,EAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,4BAA4B,EAAE,QAAQ,EAAE,iBAAiB,EAAC,CAAC,CAAC;QACjH,YAAY,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,2CAA2C,CAAC,CAAC;QAErF,MAAM,gBAAgB,GAAG,IAAI,aAAa,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QACxF,MAAM,EAAC,IAAI,EAAE,uBAAuB,EAAC,GAAG,CAAC,MAAM,gBAAgB,CAAC,WAAW,EAAE,CAAE,CAAC;QAChF,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE;YACrB,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,gBAAgB,CAAC,EAAC;YAC7B,EAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,oBAAoB,CAAC,EAAC;YAClC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,qBAAqB,EAAE,qBAAqB,CAAC,EAAC;YACzD,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAC;SACrB,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,uBAAwB,CAAC,mBAAmB,CAAC,CAAC,EAAE,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,uBAAwB,CAAC,mBAAmB,CAAC,CAAC,EAAE,4BAA4B,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/G,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,MAAM,EAAC,WAAW,EAAC,GAAG,KAAK,EAAE,CAAC;QAE9B,MAAM,OAAO,GAAG,iCAAiC,CAAC;YAChD,GAAG,EAAE,SAAS,CAAA,oBAAoB;YAClC,OAAO,EAAE,4BAA4B;YACrC,QAAQ,EAAE,iBAAiB;SAC5B,CAAC,CAAC;QACH,MAAM,IAAI,GAAG,4BAA4B,CACrC;YACE,GAAG,EAAE,SAAS,CAAA,0BAA0B;YACxC,OAAO,EAAE,4BAA4B;YACrC,QAAQ,EAAE,iBAAiB;SAC5B,CACJ,CAAC;QACF,iBAAiB;QACjB,MAAM,WAAW,CAAC,iBAAiB,CAC/B,IAAI,WAAW,CAAC,WAAW,CAAC,kBAAkB,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QAC7F,MAAM,YAAY,GAAG,aAAa,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QACjE,OAAO,CAAC,YAAY,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,2CAA2C,CAAC,CAAC;QAE7F,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,qBAAqB,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {createContentProviderUISourceCode, createFileSystemUISourceCode} from '../../testing/UISourceCodeHelpers.js';\nimport * as Bindings from '../bindings/bindings.js';\nimport * as Breakpoints from '../breakpoints/breakpoints.js';\nimport * as Persistence from '../persistence/persistence.js';\nimport * as Workspace from '../workspace/workspace.js';\nimport * as WorkspaceDiff from '../workspace_diff/workspace_diff.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\ndescribeWithEnvironment('UISourceCodeDiff', () => {\n  function setup() {\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n    const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n      forceNew: true,\n      targetManager: SDK.TargetManager.TargetManager.instance(),\n      resourceMapping:\n          new Bindings.ResourceMapping.ResourceMapping(SDK.TargetManager.TargetManager.instance(), workspace),\n    });\n    const breakpointManager = Breakpoints.BreakpointManager.BreakpointManager.instance({\n      forceNew: true,\n      targetManager: SDK.TargetManager.TargetManager.instance(),\n      workspace,\n      debuggerWorkspaceBinding,\n    });\n    const persistence =\n        Persistence.Persistence.PersistenceImpl.instance({forceNew: true, workspace, breakpointManager});\n    Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance({forceNew: true, workspace});\n\n    return {workspace, persistence};\n  }\n\n  it('returns formatted mapping with a diff', async () => {\n    const {workspace} = setup();\n    const URL = urlString`file:///tmp/example.html`;\n    const {uiSourceCode, project} =\n        createFileSystemUISourceCode({url: URL, content: 'const data={original:true}', mimeType: 'text/javascript'});\n    uiSourceCode.setWorkingCopyGetter(() => 'const data={modified:true,original:false}');\n\n    const uiSourceCodeDiff = new WorkspaceDiff.WorkspaceDiff.UISourceCodeDiff(uiSourceCode);\n    const {diff, formattedCurrentMapping} = (await uiSourceCodeDiff.requestDiff())!;\n    assert.deepEqual(diff, [\n      {0: 0, 1: ['const data = {']},\n      {0: -1, 1: ['    original: true']},\n      {0: 1, 1: ['    modified: true,', '    original: false']},\n      {0: 0, 1: ['}', '']},\n    ]);\n    assert.deepEqual(formattedCurrentMapping!.originalToFormatted(0, 'const data={'.length), [1, 4]);\n    assert.deepEqual(formattedCurrentMapping!.originalToFormatted(0, 'const data={modified:true,'.length), [2, 4]);\n    workspace.removeProject(project);\n  });\n\n  it('returns only the file uiSourceCode as modified', async () => {\n    const {persistence} = setup();\n\n    const network = createContentProviderUISourceCode({\n      url: urlString`http://example.com`,\n      content: 'const data={original:true}',\n      mimeType: 'text/javascript',\n    });\n    const file = createFileSystemUISourceCode(\n        {\n          url: urlString`file:///tmp/example.html`,\n          content: 'const data={original:true}',\n          mimeType: 'text/javascript',\n        },\n    );\n    // Mock a binding\n    await persistence.addBindingForTest(\n        new Persistence.Persistence.PersistenceBinding(network.uiSourceCode, file.uiSourceCode));\n    const uiSourceDiff = WorkspaceDiff.WorkspaceDiff.workspaceDiff();\n    network.uiSourceCode.setWorkingCopyGetter(() => 'const data={modified:true,original:false}');\n\n    assert.deepEqual(uiSourceDiff.modifiedUISourceCodes(), [file.uiSourceCode]);\n  });\n});\n"]}