{
  "version": 3,
  "sources": ["persistence-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Persistence from './persistence.js';\n\nconst UIStrings = {\n  /**\n   * @description Text of a DOM element in Workspace Settings Tab of the Workspace settings in Settings\n   */\n  workspace: 'Workspace',\n  /**\n   * @description Command for showing the Workspace tool in Settings\n   */\n  showWorkspace: 'Show Workspace settings',\n  /**\n   * @description Title of a setting under the Persistence category in Settings\n   */\n  enableLocalOverrides: 'Enable Local Overrides',\n  /**\n   * @description A tag of Enable Local Overrides setting that can be searched in the command menu\n   */\n  interception: 'interception',\n  /**\n   * @description A tag of Enable Local Overrides setting that can be searched in the command menu\n   */\n  override: 'override',\n  /**\n   * @description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  network: 'network',\n  /**\n   * @description A tag of Enable Local Overrides setting that can be searched in the command menu\n   */\n  rewrite: 'rewrite',\n  /**\n   * @description A tag of Enable Local Overrides setting that can be searched in the command menu.\n   *Noun for network request.\n   */\n  request: 'request',\n  /**\n   * @description Title of a setting under the Persistence category that can be invoked through the Command Menu\n   */\n  enableOverrideNetworkRequests: 'Enable override network requests',\n  /**\n   * @description Title of a setting under the Persistence category that can be invoked through the Command Menu\n   */\n  disableOverrideNetworkRequests: 'Disable override network requests',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('models/persistence/persistence-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedPersistenceModule: (typeof Persistence|undefined);\n\nasync function loadPersistenceModule(): Promise<typeof Persistence> {\n  if (!loadedPersistenceModule) {\n    loadedPersistenceModule = await import('./persistence.js');\n  }\n  return loadedPersistenceModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'workspace',\n  title: i18nLazyString(UIStrings.workspace),\n  commandPrompt: i18nLazyString(UIStrings.showWorkspace),\n  order: 1,\n  async loadView() {\n    const Persistence = await loadPersistenceModule();\n    return new Persistence.WorkspaceSettingsTab.WorkspaceSettingsTab();\n  },\n  iconName: 'folder',\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERSISTENCE,\n  title: i18nLazyString(UIStrings.enableLocalOverrides),\n  settingName: 'persistence-network-overrides-enabled',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.interception),\n    i18nLazyString(UIStrings.override),\n    i18nLazyString(UIStrings.network),\n    i18nLazyString(UIStrings.rewrite),\n    i18nLazyString(UIStrings.request),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.enableOverrideNetworkRequests),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.disableOverrideNetworkRequests),\n    },\n  ],\n});\n\nUI.ContextMenu.registerProvider({\n  contextTypes() {\n    return [\n      Workspace.UISourceCode.UISourceCode,\n      SDK.Resource.Resource,\n      SDK.NetworkRequest.NetworkRequest,\n    ];\n  },\n  async loadProvider() {\n    const Persistence = await loadPersistenceModule();\n    return new Persistence.PersistenceActions.ContextMenuProvider();\n  },\n  experiment: undefined,\n});\n"],
  "mappings": ";AAIA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,SAAS;AACrB,YAAY,eAAe;AAC3B,YAAY,QAAQ;AAIpB,IAAM,YAAY;;;;EAIhB,WAAW;;;;EAIX,eAAe;;;;EAIf,sBAAsB;;;;EAItB,cAAc;;;;EAId,UAAU;;;;EAIV,SAAS;;;;EAIT,SAAS;;;;;EAKT,SAAS;;;;EAIT,+BAA+B;;;;EAI/B,gCAAgC;;AAElC,IAAM,OAAY,UAAK,kBAAkB,0CAA0C,SAAS;AAC5F,IAAM,iBAAsB,UAAK,iCAAiC,KAAK,QAAW,IAAI;AAEtF,IAAI;AAEJ,eAAe,wBAAqB;AAClC,MAAI,CAAC,yBAAyB;AAC5B,8BAA0B,MAAM,OAAO,kBAAkB;EAC3D;AACA,SAAO;AACT;AAEG,eAAY,sBAAsB;EACnC,UAAQ;EACR,IAAI;EACJ,OAAO,eAAe,UAAU,SAAS;EACzC,eAAe,eAAe,UAAU,aAAa;EACrD,OAAO;EACP,MAAM,WAAQ;AACZ,UAAM,cAAc,MAAM,sBAAqB;AAC/C,WAAO,IAAI,YAAY,qBAAqB,qBAAoB;EAClE;EACA,UAAU;CACX;AAEM,gBAAS,yBAAyB;EACvC,UAAQ;EACR,OAAO,eAAe,UAAU,oBAAoB;EACpD,aAAa;EACb,aAAW;EACX,cAAc;EACd,MAAM;IACJ,eAAe,UAAU,YAAY;IACrC,eAAe,UAAU,QAAQ;IACjC,eAAe,UAAU,OAAO;IAChC,eAAe,UAAU,OAAO;IAChC,eAAe,UAAU,OAAO;;EAElC,SAAS;IACP;MACE,OAAO;MACP,OAAO,eAAe,UAAU,6BAA6B;;IAE/D;MACE,OAAO;MACP,OAAO,eAAe,UAAU,8BAA8B;;;CAGnE;AAEE,eAAY,iBAAiB;EAC9B,eAAY;AACV,WAAO;MACK,uBAAa;MACnB,aAAS;MACT,mBAAe;;EAEvB;EACA,MAAM,eAAY;AAChB,UAAM,cAAc,MAAM,sBAAqB;AAC/C,WAAO,IAAI,YAAY,mBAAmB,oBAAmB;EAC/D;EACA,YAAY;CACb;",
  "names": []
}
