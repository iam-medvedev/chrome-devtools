{"version":3,"file":"FileSystemWorkspaceBinding.js","sourceRoot":"","sources":["../../../../../../front_end/models/persistence/FileSystemWorkspaceBinding.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport type {IsolatedFileSystem} from './IsolatedFileSystem.js';\nimport {Events, type IsolatedFileSystemManager} from './IsolatedFileSystemManager.js';\nimport type {PlatformFileSystem, PlatformFileSystemType} from './PlatformFileSystem.js';\n\nexport class FileSystemWorkspaceBinding {\n  readonly isolatedFileSystemManager: IsolatedFileSystemManager;\n  readonly #workspace: Workspace.Workspace.WorkspaceImpl;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly #boundFileSystems = new Map<string, FileSystem>();\n  constructor(isolatedFileSystemManager: IsolatedFileSystemManager, workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.isolatedFileSystemManager = isolatedFileSystemManager;\n    this.#workspace = workspace;\n    this.#eventListeners = [\n      this.isolatedFileSystemManager.addEventListener(Events.FileSystemAdded, this.onFileSystemAdded, this),\n      this.isolatedFileSystemManager.addEventListener(Events.FileSystemRemoved, this.onFileSystemRemoved, this),\n      this.isolatedFileSystemManager.addEventListener(Events.FileSystemFilesChanged, this.fileSystemFilesChanged, this),\n    ];\n    void this.isolatedFileSystemManager.waitForFileSystems().then(this.onFileSystemsLoaded.bind(this));\n  }\n\n  static projectId(fileSystemPath: Platform.DevToolsPath.UrlString): Platform.DevToolsPath.UrlString {\n    return fileSystemPath;\n  }\n\n  static relativePath(uiSourceCode: Workspace.UISourceCode.UISourceCode): Platform.DevToolsPath.EncodedPathString[] {\n    const baseURL = (uiSourceCode.project() as FileSystem).fileSystemBaseURL;\n    return Common.ParsedURL.ParsedURL.split(\n        Common.ParsedURL.ParsedURL.sliceUrlToEncodedPathString(uiSourceCode.url(), baseURL.length), '/');\n  }\n\n  static tooltipForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    const fileSystem = (uiSourceCode.project() as FileSystem).fileSystem();\n    return fileSystem.tooltipForURL(uiSourceCode.url());\n  }\n\n  static fileSystemType(project: Workspace.Workspace.Project): PlatformFileSystemType {\n    if (project instanceof FileSystem) {\n      return project.fileSystem().type();\n    }\n    throw new TypeError('project is not a FileSystem');\n  }\n\n  static fileSystemSupportsAutomapping(project: Workspace.Workspace.Project): boolean {\n    const fileSystem = (project as FileSystem).fileSystem();\n    return fileSystem.supportsAutomapping();\n  }\n\n  static completeURL(project: Workspace.Workspace.Project, relativePath: string): Platform.DevToolsPath.UrlString {\n    const fsProject = project as FileSystem;\n    return Common.ParsedURL.ParsedURL.concatenate(fsProject.fileSystemBaseURL, relativePath);\n  }\n\n  static fileSystemPath(projectId: Platform.DevToolsPath.UrlString): Platform.DevToolsPath.UrlString {\n    return projectId;\n  }\n\n  private onFileSystemsLoaded(fileSystems: IsolatedFileSystem[]): void {\n    for (const fileSystem of fileSystems) {\n      this.addFileSystem(fileSystem);\n    }\n  }\n\n  private onFileSystemAdded(event: Common.EventTarget.EventTargetEvent<PlatformFileSystem>): void {\n    const fileSystem = event.data;\n    this.addFileSystem(fileSystem);\n  }\n\n  private addFileSystem(fileSystem: PlatformFileSystem): void {\n    const boundFileSystem = new FileSystem(this, fileSystem, this.#workspace);\n    this.#boundFileSystems.set(fileSystem.path(), boundFileSystem);\n  }\n\n  private onFileSystemRemoved(event: Common.EventTarget.EventTargetEvent<PlatformFileSystem>): void {\n    const fileSystem = event.data;\n    const boundFileSystem = this.#boundFileSystems.get(fileSystem.path());\n    if (boundFileSystem) {\n      boundFileSystem.dispose();\n    }\n    this.#boundFileSystems.delete(fileSystem.path());\n  }\n\n  private fileSystemFilesChanged(event: Common.EventTarget.EventTargetEvent<FilesChangedData>): void {\n    const paths = event.data;\n    for (const fileSystemPath of paths.changed.keysArray()) {\n      const fileSystem = this.#boundFileSystems.get(fileSystemPath);\n      if (!fileSystem) {\n        continue;\n      }\n      paths.changed.get(fileSystemPath).forEach(path => fileSystem.fileChanged(path));\n    }\n\n    for (const fileSystemPath of paths.added.keysArray()) {\n      const fileSystem = this.#boundFileSystems.get(fileSystemPath);\n      if (!fileSystem) {\n        continue;\n      }\n      paths.added.get(fileSystemPath).forEach(path => fileSystem.fileChanged(path));\n    }\n\n    for (const fileSystemPath of paths.removed.keysArray()) {\n      const fileSystem = this.#boundFileSystems.get(fileSystemPath);\n      if (!fileSystem) {\n        continue;\n      }\n      paths.removed.get(fileSystemPath).forEach(path => fileSystem.removeUISourceCode(path));\n    }\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    for (const fileSystem of this.#boundFileSystems.values()) {\n      fileSystem.dispose();\n      this.#boundFileSystems.delete(fileSystem.fileSystem().path());\n    }\n  }\n}\n\nexport class FileSystem extends Workspace.Workspace.ProjectStore {\n  #fileSystem: PlatformFileSystem;\n  readonly fileSystemBaseURL: Platform.DevToolsPath.UrlString;\n  readonly #fileSystemParentURL: Platform.DevToolsPath.UrlString;\n  readonly #fileSystemWorkspaceBinding: FileSystemWorkspaceBinding;\n  readonly #fileSystemPath: Platform.DevToolsPath.UrlString;\n  readonly #creatingFilesGuard = new Set<string>();\n\n  constructor(\n      fileSystemWorkspaceBinding: FileSystemWorkspaceBinding, isolatedFileSystem: PlatformFileSystem,\n      workspace: Workspace.Workspace.WorkspaceImpl) {\n    const fileSystemPath = isolatedFileSystem.path();\n    const id = FileSystemWorkspaceBinding.projectId(fileSystemPath);\n    console.assert(!workspace.project(id));\n    const displayName = fileSystemPath.substr(fileSystemPath.lastIndexOf('/') + 1);\n\n    super(workspace, id, Workspace.Workspace.projectTypes.FileSystem, displayName);\n\n    this.#fileSystem = isolatedFileSystem;\n    this.fileSystemBaseURL = Common.ParsedURL.ParsedURL.concatenate(this.#fileSystem.path(), '/');\n    this.#fileSystemParentURL =\n        Common.ParsedURL.ParsedURL.substr(this.fileSystemBaseURL, 0, fileSystemPath.lastIndexOf('/') + 1);\n    this.#fileSystemWorkspaceBinding = fileSystemWorkspaceBinding;\n    this.#fileSystemPath = fileSystemPath;\n\n    workspace.addProject(this);\n    this.populate();\n  }\n\n  fileSystemPath(): Platform.DevToolsPath.UrlString {\n    return this.#fileSystemPath;\n  }\n\n  fileSystem(): PlatformFileSystem {\n    return this.#fileSystem;\n  }\n\n  mimeType(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    return this.#fileSystem.mimeFromPath(uiSourceCode.url());\n  }\n\n  initialGitFolders(): Platform.DevToolsPath.UrlString[] {\n    return this.#fileSystem.initialGitFolders().map(\n        folder => Common.ParsedURL.ParsedURL.concatenate(this.#fileSystemPath, '/', folder));\n  }\n\n  private filePathForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Platform.DevToolsPath.EncodedPathString {\n    return Common.ParsedURL.ParsedURL.sliceUrlToEncodedPathString(uiSourceCode.url(), this.#fileSystemPath.length);\n  }\n\n  isServiceProject(): boolean {\n    return false;\n  }\n\n  requestMetadata(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<Workspace.UISourceCode.UISourceCodeMetadata|null> {\n    const metadata = sourceCodeToMetadataMap.get(uiSourceCode);\n    if (metadata) {\n      return metadata;\n    }\n    const relativePath = this.filePathForUISourceCode(uiSourceCode);\n    const promise = this.#fileSystem.getMetadata(relativePath).then(onMetadata);\n    sourceCodeToMetadataMap.set(uiSourceCode, promise);\n    return promise;\n\n    function onMetadata(metadata: {modificationTime: Date, size: number}|null):\n        Workspace.UISourceCode.UISourceCodeMetadata|null {\n      if (!metadata) {\n        return null;\n      }\n      return new Workspace.UISourceCode.UISourceCodeMetadata(metadata.modificationTime, metadata.size);\n    }\n  }\n\n  requestFileBlob(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<Blob|null> {\n    return this.#fileSystem.requestFileBlob(this.filePathForUISourceCode(uiSourceCode));\n  }\n\n  requestFileContent(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<TextUtils.ContentData.ContentDataOrError> {\n    const filePath = this.filePathForUISourceCode(uiSourceCode);\n    return this.#fileSystem.requestFileContent(filePath);\n  }\n\n  canSetFileContent(): boolean {\n    return true;\n  }\n\n  async setFileContent(uiSourceCode: Workspace.UISourceCode.UISourceCode, newContent: string, isBase64: boolean):\n      Promise<void> {\n    const filePath = this.filePathForUISourceCode(uiSourceCode);\n    this.#fileSystem.setFileContent(filePath, newContent, isBase64);\n  }\n\n  fullDisplayName(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    const baseURL = (uiSourceCode.project() as FileSystem).#fileSystemParentURL;\n    return uiSourceCode.url().substring(baseURL.length);\n  }\n\n  canRename(): boolean {\n    return true;\n  }\n\n  override rename(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, newName: Platform.DevToolsPath.RawPathString,\n      callback:\n          (arg0: boolean, arg1?: string|undefined, arg2?: Platform.DevToolsPath.UrlString|undefined,\n           arg3?: Common.ResourceType.ResourceType|undefined) => void): void {\n    if (newName === uiSourceCode.name()) {\n      callback(true, uiSourceCode.name(), uiSourceCode.url(), uiSourceCode.contentType());\n      return;\n    }\n\n    let filePath = this.filePathForUISourceCode(uiSourceCode);\n    this.#fileSystem.renameFile(filePath, newName, innerCallback.bind(this));\n\n    function innerCallback(this: FileSystem, success: boolean, newName?: string): void {\n      if (!success || !newName) {\n        callback(false, newName);\n        return;\n      }\n      console.assert(Boolean(newName));\n      const slash = filePath.lastIndexOf('/');\n      const parentPath = Common.ParsedURL.ParsedURL.substr(filePath, 0, slash);\n      filePath = Common.ParsedURL.ParsedURL.encodedFromParentPathAndName(parentPath, newName);\n      filePath = Common.ParsedURL.ParsedURL.substr(filePath, 1);\n      const newURL = Common.ParsedURL.ParsedURL.concatenate(this.fileSystemBaseURL, filePath);\n      const newContentType = this.#fileSystem.contentType(newName);\n      this.renameUISourceCode(uiSourceCode, newName);\n      callback(true, newName, newURL, newContentType);\n    }\n  }\n\n  async searchInFileContent(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, query: string, caseSensitive: boolean,\n      isRegex: boolean): Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    const filePath = this.filePathForUISourceCode(uiSourceCode);\n    const content = await this.#fileSystem.requestFileContent(filePath);\n    return TextUtils.TextUtils.performSearchInContentData(content, query, caseSensitive, isRegex);\n  }\n\n  async findFilesMatchingSearchRequest(\n      searchConfig: Workspace.SearchConfig.SearchConfig, filesMatchingFileQuery: Workspace.UISourceCode.UISourceCode[],\n      progress: Common.Progress.Progress):\n      Promise<Map<Workspace.UISourceCode.UISourceCode, TextUtils.ContentProvider.SearchMatch[]|null>> {\n    let workingFileSet: string[] = filesMatchingFileQuery.map(uiSoureCode => uiSoureCode.url());\n    const queriesToRun = searchConfig.queries().slice();\n    if (!queriesToRun.length) {\n      queriesToRun.push('');\n    }\n    progress.setTotalWork(queriesToRun.length);\n\n    for (const query of queriesToRun) {\n      const files = await this.#fileSystem.searchInPath(searchConfig.isRegex() ? '' : query, progress);\n      files.sort(Platform.StringUtilities.naturalOrderComparator);\n      workingFileSet = Platform.ArrayUtilities.intersectOrdered(\n          workingFileSet, files, Platform.StringUtilities.naturalOrderComparator);\n      progress.incrementWorked(1);\n    }\n\n    const result = new Map();\n    for (const file of workingFileSet) {\n      const uiSourceCode = this.uiSourceCodeForURL(file as Platform.DevToolsPath.UrlString);\n      if (uiSourceCode) {\n        result.set(uiSourceCode, null);\n      }\n    }\n\n    progress.done();\n    return result;\n  }\n\n  override indexContent(progress: Common.Progress.Progress): void {\n    this.#fileSystem.indexContent(progress);\n  }\n\n  populate(): void {\n    const filePaths = this.#fileSystem.initialFilePaths();\n    if (filePaths.length === 0) {\n      return;\n    }\n\n    const chunkSize = 1000;\n    const startTime = performance.now();\n    reportFileChunk.call(this, 0);\n\n    function reportFileChunk(this: FileSystem, from: number): void {\n      const to = Math.min(from + chunkSize, filePaths.length);\n      for (let i = from; i < to; ++i) {\n        this.addFile(filePaths[i]);\n      }\n      if (to < filePaths.length) {\n        window.setTimeout(reportFileChunk.bind(this, to), 100);\n      } else if (this.type() === 'filesystem') {\n        Host.userMetrics.workspacesPopulated(performance.now() - startTime);\n      }\n    }\n  }\n\n  override excludeFolder(url: Platform.DevToolsPath.UrlString): void {\n    let relativeFolder = Common.ParsedURL.ParsedURL.sliceUrlToEncodedPathString(url, this.fileSystemBaseURL.length);\n    if (!relativeFolder.startsWith('/')) {\n      relativeFolder = Common.ParsedURL.ParsedURL.prepend('/', relativeFolder);\n    }\n    if (!relativeFolder.endsWith('/')) {\n      relativeFolder = Common.ParsedURL.ParsedURL.concatenate(relativeFolder, '/');\n    }\n    this.#fileSystem.addExcludedFolder(relativeFolder);\n\n    for (const uiSourceCode of this.uiSourceCodes()) {\n      if (uiSourceCode.url().startsWith(url)) {\n        this.removeUISourceCode(uiSourceCode.url());\n      }\n    }\n  }\n\n  canExcludeFolder(path: Platform.DevToolsPath.EncodedPathString): boolean {\n    return this.#fileSystem.canExcludeFolder(path);\n  }\n\n  canCreateFile(): boolean {\n    return true;\n  }\n\n  async createFile(\n      path: Platform.DevToolsPath.EncodedPathString, name: Platform.DevToolsPath.RawPathString|null, content: string,\n      isBase64?: boolean): Promise<Workspace.UISourceCode.UISourceCode|null> {\n    const guardFileName = this.#fileSystemPath + path + (!path.endsWith('/') ? '/' : '') + name;\n    this.#creatingFilesGuard.add(guardFileName);\n    const filePath = await this.#fileSystem.createFile(path, name);\n    if (!filePath) {\n      return null;\n    }\n    const uiSourceCode = this.addFile(filePath, content, isBase64);\n    this.#creatingFilesGuard.delete(guardFileName);\n    return uiSourceCode;\n  }\n\n  override deleteFile(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const relativePath = this.filePathForUISourceCode(uiSourceCode);\n    void this.#fileSystem.deleteFile(relativePath).then(success => {\n      if (success) {\n        this.removeUISourceCode(uiSourceCode.url());\n      }\n    });\n  }\n\n  override deleteDirectoryRecursively(path: Platform.DevToolsPath.EncodedPathString): Promise<boolean> {\n    return this.#fileSystem.deleteDirectoryRecursively(path);\n  }\n\n  override remove(): void {\n    this.#fileSystemWorkspaceBinding.isolatedFileSystemManager.removeFileSystem(this.#fileSystem);\n  }\n\n  private addFile(filePath: Platform.DevToolsPath.EncodedPathString, content?: string, isBase64?: boolean):\n      Workspace.UISourceCode.UISourceCode {\n    const contentType = this.#fileSystem.contentType(filePath);\n    const uiSourceCode =\n        this.createUISourceCode(Common.ParsedURL.ParsedURL.concatenate(this.fileSystemBaseURL, filePath), contentType);\n    if (content !== undefined) {\n      uiSourceCode.setContent(content, Boolean(isBase64));\n    }\n    this.addUISourceCode(uiSourceCode);\n    return uiSourceCode;\n  }\n\n  fileChanged(path: Platform.DevToolsPath.UrlString): void {\n    // Ignore files that are being created but do not have content yet.\n    if (this.#creatingFilesGuard.has(path)) {\n      return;\n    }\n    const uiSourceCode = this.uiSourceCodeForURL(path);\n    if (!uiSourceCode) {\n      const contentType = this.#fileSystem.contentType(path);\n      this.addUISourceCode(this.createUISourceCode(path, contentType));\n      return;\n    }\n    sourceCodeToMetadataMap.delete(uiSourceCode);\n    void uiSourceCode.checkContentUpdated();\n  }\n\n  tooltipForURL(url: Platform.DevToolsPath.UrlString): string {\n    return this.#fileSystem.tooltipForURL(url);\n  }\n\n  dispose(): void {\n    this.removeProject();\n  }\n}\n\nconst sourceCodeToMetadataMap =\n    new WeakMap<Workspace.UISourceCode.UISourceCode, Promise<Workspace.UISourceCode.UISourceCodeMetadata|null>>();\nexport interface FilesChangedData {\n  changed: Platform.MapUtilities.Multimap<Platform.DevToolsPath.UrlString, Platform.DevToolsPath.UrlString>;\n  added: Platform.MapUtilities.Multimap<Platform.DevToolsPath.UrlString, Platform.DevToolsPath.UrlString>;\n  removed: Platform.MapUtilities.Multimap<Platform.DevToolsPath.UrlString, Platform.DevToolsPath.UrlString>;\n}\n"]}