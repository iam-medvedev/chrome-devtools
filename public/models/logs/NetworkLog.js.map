{"version":3,"file":"NetworkLog.js","sourceRoot":"","sources":["../../../../../../front_end/models/logs/NetworkLog.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nconst UIStrings = {\n  /**\n   * @description When DevTools doesn't know the URL that initiated a network request, we\n   * show this phrase instead. 'unknown' would also work in this context.\n   */\n  anonymous: '<anonymous>',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('models/logs/NetworkLog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet networkLogInstance: NetworkLog|undefined;\n\nexport class NetworkLog extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements\n    SDK.TargetManager.SDKModelObserver<SDK.NetworkManager.NetworkManager> {\n  #requests: SDK.NetworkRequest.NetworkRequest[] = [];\n  #sentNetworkRequests: Protocol.Network.Request[] = [];\n  #receivedNetworkResponses: Protocol.Network.Response[] = [];\n  #requestsSet = new Set<SDK.NetworkRequest.NetworkRequest>();\n  readonly #requestsMap = new Map<string, SDK.NetworkRequest.NetworkRequest[]>();\n  readonly #pageLoadForManager = new Map<SDK.NetworkManager.NetworkManager, SDK.PageLoad.PageLoad>();\n  readonly #unresolvedPreflightRequests = new Map<string, SDK.NetworkRequest.NetworkRequest>();\n  readonly #modelListeners = new WeakMap<SDK.NetworkManager.NetworkManager, Common.EventTarget.EventDescriptor[]>();\n  readonly #initiatorData = new WeakMap<SDK.NetworkRequest.NetworkRequest, InitiatorData>();\n  #isRecording = true;\n\n  constructor() {\n    super();\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.NetworkManager.NetworkManager, this);\n    const recordLogSetting: Common.Settings.Setting<boolean> =\n        Common.Settings.Settings.instance().moduleSetting('network-log.record-log');\n    recordLogSetting.addChangeListener(() => {\n      const preserveLogSetting = Common.Settings.Settings.instance().moduleSetting('network-log.preserve-log');\n      if (!preserveLogSetting.get() && recordLogSetting.get()) {\n        this.reset(true);\n      }\n      this.setIsRecording((recordLogSetting.get()));\n    }, this);\n  }\n\n  static instance(): NetworkLog {\n    if (!networkLogInstance) {\n      networkLogInstance = new NetworkLog();\n    }\n    return networkLogInstance;\n  }\n\n  static removeInstance(): void {\n    networkLogInstance = undefined;\n  }\n\n  modelAdded(networkManager: SDK.NetworkManager.NetworkManager): void {\n    const eventListeners = [];\n    eventListeners.push(\n        networkManager.addEventListener(SDK.NetworkManager.Events.RequestStarted, this.onRequestStarted, this));\n    eventListeners.push(\n        networkManager.addEventListener(SDK.NetworkManager.Events.RequestUpdated, this.onRequestUpdated, this));\n    eventListeners.push(\n        networkManager.addEventListener(SDK.NetworkManager.Events.RequestRedirected, this.onRequestRedirect, this));\n    eventListeners.push(\n        networkManager.addEventListener(SDK.NetworkManager.Events.RequestFinished, this.onRequestUpdated, this));\n    eventListeners.push(networkManager.addEventListener(\n        SDK.NetworkManager.Events.MessageGenerated, this.networkMessageGenerated.bind(this, networkManager)));\n    eventListeners.push(\n        networkManager.addEventListener(SDK.NetworkManager.Events.ResponseReceived, this.onResponseReceived, this));\n\n    const resourceTreeModel = networkManager.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (resourceTreeModel) {\n      eventListeners.push(\n          resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.WillReloadPage, this.willReloadPage, this));\n      eventListeners.push(resourceTreeModel.addEventListener(\n          SDK.ResourceTreeModel.Events.PrimaryPageChanged, this.onPrimaryPageChanged, this));\n      eventListeners.push(resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, this.onLoad, this));\n      eventListeners.push(resourceTreeModel.addEventListener(\n          SDK.ResourceTreeModel.Events.DOMContentLoaded, this.onDOMContentLoaded.bind(this, resourceTreeModel)));\n    }\n\n    this.#modelListeners.set(networkManager, eventListeners);\n  }\n\n  modelRemoved(networkManager: SDK.NetworkManager.NetworkManager): void {\n    this.removeNetworkManagerListeners(networkManager);\n  }\n\n  private removeNetworkManagerListeners(networkManager: SDK.NetworkManager.NetworkManager): void {\n    Common.EventTarget.removeEventListeners(this.#modelListeners.get(networkManager) || []);\n  }\n\n  setIsRecording(enabled: boolean): void {\n    if (this.#isRecording === enabled) {\n      return;\n    }\n    this.#isRecording = enabled;\n    if (enabled) {\n      SDK.TargetManager.TargetManager.instance().observeModels(SDK.NetworkManager.NetworkManager, this);\n    } else {\n      SDK.TargetManager.TargetManager.instance().unobserveModels(SDK.NetworkManager.NetworkManager, this);\n      SDK.TargetManager.TargetManager.instance()\n          .models(SDK.NetworkManager.NetworkManager)\n          .forEach(this.removeNetworkManagerListeners.bind(this));\n    }\n  }\n\n  requestForURL(url: Platform.DevToolsPath.UrlString): SDK.NetworkRequest.NetworkRequest|null {\n    return this.#requests.find(request => request.url() === url) || null;\n  }\n\n  originalRequestForURL(url: Platform.DevToolsPath.UrlString): Protocol.Network.Request|null {\n    return this.#sentNetworkRequests.find(request => request.url === url) || null;\n  }\n\n  originalResponseForURL(url: Platform.DevToolsPath.UrlString): Protocol.Network.Response|null {\n    return this.#receivedNetworkResponses.find(response => response.url === url) || null;\n  }\n\n  requests(): SDK.NetworkRequest.NetworkRequest[] {\n    return this.#requests;\n  }\n\n  requestByManagerAndId(networkManager: SDK.NetworkManager.NetworkManager, requestId: string):\n      SDK.NetworkRequest.NetworkRequest|null {\n    // We iterate backwards because the last item will likely be the one needed for console network request lookups.\n    for (let i = this.#requests.length - 1; i >= 0; i--) {\n      const request = this.#requests[i];\n      if (requestId === request.requestId() &&\n          networkManager === SDK.NetworkManager.NetworkManager.forRequest(request)) {\n        return request;\n      }\n    }\n    return null;\n  }\n\n  private requestByManagerAndURL(\n      networkManager: SDK.NetworkManager.NetworkManager,\n      url: Platform.DevToolsPath.UrlString): SDK.NetworkRequest.NetworkRequest|null {\n    for (const request of this.#requests) {\n      if (url === request.url() && networkManager === SDK.NetworkManager.NetworkManager.forRequest(request)) {\n        return request;\n      }\n    }\n    return null;\n  }\n\n  private initializeInitiatorSymbolIfNeeded(request: SDK.NetworkRequest.NetworkRequest): InitiatorData {\n    let initiatorInfo = this.#initiatorData.get(request);\n    if (initiatorInfo) {\n      return initiatorInfo;\n    }\n    initiatorInfo = {\n      info: null,\n      chain: null,\n      request: undefined,\n    };\n    this.#initiatorData.set(request, initiatorInfo);\n    return initiatorInfo;\n  }\n\n  static initiatorInfoForRequest(request: SDK.NetworkRequest.NetworkRequest, existingInitiatorData?: InitiatorData):\n      InitiatorInfo {\n    const initiatorInfo: InitiatorData = existingInitiatorData || {\n      info: null,\n      chain: null,\n      request: undefined,\n    };\n\n    let type = SDK.NetworkRequest.InitiatorType.OTHER;\n    let url = Platform.DevToolsPath.EmptyUrlString;\n    let lineNumber: number|undefined = undefined;\n    let columnNumber: number|undefined = undefined;\n    let scriptId: Protocol.Runtime.ScriptId|null = null;\n    let initiatorStack: Protocol.Runtime.StackTrace|null = null;\n    let initiatorRequest: SDK.NetworkRequest.NetworkRequest|null = null;\n    const initiator = request.initiator();\n\n    const redirectSource = request.redirectSource();\n    if (redirectSource) {\n      type = SDK.NetworkRequest.InitiatorType.REDIRECT;\n      url = redirectSource.url();\n    } else if (initiator) {\n      if (initiator.type === Protocol.Network.InitiatorType.Parser) {\n        type = SDK.NetworkRequest.InitiatorType.PARSER;\n        url = initiator.url ? initiator.url as Platform.DevToolsPath.UrlString : url;\n        lineNumber = initiator.lineNumber;\n        columnNumber = initiator.columnNumber;\n      } else if (initiator.type === Protocol.Network.InitiatorType.Script) {\n        for (let stack: (Protocol.Runtime.StackTrace|undefined) = initiator.stack; stack;) {\n          const topFrame = stack.callFrames.length ? stack.callFrames[0] : null;\n          if (!topFrame) {\n            stack = stack.parent;\n            continue;\n          }\n          type = SDK.NetworkRequest.InitiatorType.SCRIPT;\n          url = (topFrame.url || i18nString(UIStrings.anonymous) as string) as Platform.DevToolsPath.UrlString;\n          lineNumber = topFrame.lineNumber;\n          columnNumber = topFrame.columnNumber;\n          scriptId = topFrame.scriptId;\n          break;\n        }\n        if (!initiator.stack && initiator.url) {\n          type = SDK.NetworkRequest.InitiatorType.SCRIPT;\n          url = initiator.url as Platform.DevToolsPath.UrlString;\n          lineNumber = initiator.lineNumber;\n        }\n        if (initiator.stack?.callFrames?.length) {\n          initiatorStack = initiator.stack;\n        }\n      } else if (initiator.type === Protocol.Network.InitiatorType.Preload) {\n        type = SDK.NetworkRequest.InitiatorType.PRELOAD;\n      } else if (initiator.type === Protocol.Network.InitiatorType.Preflight) {\n        type = SDK.NetworkRequest.InitiatorType.PREFLIGHT;\n        initiatorRequest = request.preflightInitiatorRequest();\n      } else if (initiator.type === Protocol.Network.InitiatorType.SignedExchange) {\n        type = SDK.NetworkRequest.InitiatorType.SIGNED_EXCHANGE;\n        url = initiator.url as Platform.DevToolsPath.UrlString || Platform.DevToolsPath.EmptyUrlString;\n      }\n    }\n    initiatorInfo.info = {type, url, lineNumber, columnNumber, scriptId, stack: initiatorStack, initiatorRequest};\n    return initiatorInfo.info;\n  }\n\n  initiatorInfoForRequest(request: SDK.NetworkRequest.NetworkRequest): InitiatorInfo {\n    const initiatorInfo = this.initializeInitiatorSymbolIfNeeded(request);\n    if (initiatorInfo.info) {\n      return initiatorInfo.info;\n    }\n\n    return NetworkLog.initiatorInfoForRequest(request, initiatorInfo);\n  }\n\n  initiatorGraphForRequest(request: SDK.NetworkRequest.NetworkRequest): InitiatorGraph {\n    const initiated = new Map<SDK.NetworkRequest.NetworkRequest, SDK.NetworkRequest.NetworkRequest>();\n    const networkManager = SDK.NetworkManager.NetworkManager.forRequest(request);\n    for (const otherRequest of this.#requests) {\n      const otherRequestManager = SDK.NetworkManager.NetworkManager.forRequest(otherRequest);\n      if (networkManager === otherRequestManager && this.initiatorChain(otherRequest).has(request)) {\n        // save parent request of otherRequst in order to build the initiator chain table later\n        const initiatorRequest = this.initiatorRequest(otherRequest);\n        if (initiatorRequest) {\n          initiated.set(otherRequest, initiatorRequest);\n        }\n      }\n    }\n    return {initiators: this.initiatorChain(request), initiated};\n  }\n\n  private initiatorChain(request: SDK.NetworkRequest.NetworkRequest): Set<SDK.NetworkRequest.NetworkRequest> {\n    const initiatorDataForRequest = this.initializeInitiatorSymbolIfNeeded(request);\n    let initiatorChainCache = initiatorDataForRequest.chain;\n    if (initiatorChainCache) {\n      return initiatorChainCache;\n    }\n\n    initiatorChainCache = new Set();\n\n    let checkRequest: SDK.NetworkRequest.NetworkRequest|null = request;\n    while (checkRequest) {\n      const initiatorData = this.initializeInitiatorSymbolIfNeeded(checkRequest);\n      if (initiatorData.chain) {\n        initiatorChainCache = initiatorChainCache.union(initiatorData.chain);\n        break;\n      }\n      if (initiatorChainCache.has(checkRequest)) {\n        break;\n      }\n      initiatorChainCache.add(checkRequest);\n      checkRequest = this.initiatorRequest(checkRequest);\n    }\n    initiatorDataForRequest.chain = initiatorChainCache;\n    return initiatorChainCache;\n  }\n\n  private initiatorRequest(request: SDK.NetworkRequest.NetworkRequest): SDK.NetworkRequest.NetworkRequest|null {\n    const initiatorData = this.initializeInitiatorSymbolIfNeeded(request);\n    if (initiatorData.request !== undefined) {\n      return initiatorData.request;\n    }\n    const url = this.initiatorInfoForRequest(request).url;\n    const networkManager = SDK.NetworkManager.NetworkManager.forRequest(request);\n    initiatorData.request = networkManager ? this.requestByManagerAndURL(networkManager, url) : null;\n    return initiatorData.request;\n  }\n\n  private willReloadPage(): void {\n    if (!Common.Settings.Settings.instance().moduleSetting('network-log.preserve-log').get()) {\n      this.reset(true);\n    }\n  }\n\n  private onPrimaryPageChanged(\n      event: Common.EventTarget.EventTargetEvent<\n          {frame: SDK.ResourceTreeModel.ResourceTreeFrame, type: SDK.ResourceTreeModel.PrimaryPageChangeType}>): void {\n    const mainFrame = event.data.frame;\n    const manager = mainFrame.resourceTreeModel().target().model(SDK.NetworkManager.NetworkManager);\n    if (!manager || mainFrame.resourceTreeModel().target().parentTarget()?.type() === SDK.Target.Type.FRAME) {\n      return;\n    }\n\n    // If a page resulted in an error, the browser will navigate to an internal error page\n    // hosted at 'chrome-error://...'. In this case, skip the frame navigated event to preserve\n    // the network log.\n    if (mainFrame.url !== mainFrame.unreachableUrl() && Common.ParsedURL.schemeIs(mainFrame.url, 'chrome-error:')) {\n      return;\n    }\n\n    const preserveLog = Common.Settings.Settings.instance().moduleSetting('network-log.preserve-log').get();\n\n    const oldRequests = this.#requests;\n    const oldManagerRequests =\n        this.#requests.filter(request => SDK.NetworkManager.NetworkManager.forRequest(request) === manager);\n    const oldRequestsSet = this.#requestsSet;\n    this.#requests = [];\n    this.#sentNetworkRequests = [];\n    this.#receivedNetworkResponses = [];\n    this.#requestsSet = new Set();\n    this.#requestsMap.clear();\n    this.#unresolvedPreflightRequests.clear();\n    this.dispatchEventToListeners(Events.Reset, {clearIfPreserved: !preserveLog});\n\n    // Preserve requests from the new session.\n    let currentPageLoad: SDK.PageLoad.PageLoad|null = null;\n    const requestsToAdd = [];\n    for (const request of oldManagerRequests) {\n      if (event.data.type !== SDK.ResourceTreeModel.PrimaryPageChangeType.ACTIVATION &&\n          request.loaderId !== mainFrame.loaderId) {\n        continue;\n      }\n      if (!currentPageLoad) {\n        currentPageLoad = new SDK.PageLoad.PageLoad(request);\n        let redirectSource = request.redirectSource();\n        while (redirectSource) {\n          requestsToAdd.push(redirectSource);\n          redirectSource = redirectSource.redirectSource();\n        }\n      }\n      requestsToAdd.push(request);\n    }\n\n    // Preserve service worker requests from the new session.\n    const serviceWorkerRequestsToAdd = [];\n    for (const swRequest of oldRequests) {\n      if (!swRequest.initiatedByServiceWorker()) {\n        continue;\n      }\n\n      // If there is a matching request that came before this one, keep it.\n      const keepRequest = requestsToAdd.some(\n          request => request.url() === swRequest.url() && request.issueTime() <= swRequest.issueTime());\n      if (keepRequest) {\n        serviceWorkerRequestsToAdd.push(swRequest);\n      }\n    }\n    requestsToAdd.push(...serviceWorkerRequestsToAdd);\n\n    for (const request of requestsToAdd) {\n      currentPageLoad?.bindRequest(request);\n      oldRequestsSet.delete(request);\n      this.addRequest(request);\n    }\n\n    if (preserveLog) {\n      for (const request of oldRequestsSet) {\n        this.addRequest(request, true);\n        request.preserved = true;\n      }\n    }\n\n    if (currentPageLoad) {\n      this.#pageLoadForManager.set(manager, currentPageLoad);\n    }\n  }\n\n  private addRequest(request: SDK.NetworkRequest.NetworkRequest, preserveLog?: boolean): void {\n    this.#requests.push(request);\n    this.#requestsSet.add(request);\n    const requestList = this.#requestsMap.get(request.requestId());\n    if (!requestList) {\n      this.#requestsMap.set(request.requestId(), [request]);\n    } else {\n      requestList.push(request);\n    }\n    this.tryResolvePreflightRequests(request);\n    this.dispatchEventToListeners(Events.RequestAdded, {request, preserveLog});\n  }\n\n  private removeRequest(request: SDK.NetworkRequest.NetworkRequest): void {\n    const index = this.#requests.indexOf(request);\n    if (index > -1) {\n      this.#requests.splice(index, 1);\n    }\n    this.#requestsSet.delete(request);\n    this.#requestsMap.delete(request.requestId());\n    this.dispatchEventToListeners(Events.RequestRemoved, {request});\n  }\n\n  private tryResolvePreflightRequests(request: SDK.NetworkRequest.NetworkRequest): void {\n    if (request.isPreflightRequest()) {\n      const initiator = request.initiator();\n      if (initiator?.requestId) {\n        const [initiatorRequest] = this.requestsForId(initiator.requestId);\n        if (initiatorRequest) {\n          request.setPreflightInitiatorRequest(initiatorRequest);\n          initiatorRequest.setPreflightRequest(request);\n        } else {\n          this.#unresolvedPreflightRequests.set(initiator.requestId, request);\n        }\n      }\n    } else {\n      const preflightRequest = this.#unresolvedPreflightRequests.get(request.requestId());\n      if (preflightRequest) {\n        this.#unresolvedPreflightRequests.delete(request.requestId());\n        request.setPreflightRequest(preflightRequest);\n        preflightRequest.setPreflightInitiatorRequest(request);\n        // Force recomputation of initiator info, if it already exists.\n        const data = this.#initiatorData.get(preflightRequest);\n        if (data) {\n          data.info = null;\n        }\n        this.dispatchEventToListeners(Events.RequestUpdated, {request: preflightRequest});\n      }\n    }\n  }\n\n  importRequests(requests: SDK.NetworkRequest.NetworkRequest[]): void {\n    this.reset(true);\n    this.#requests = [];\n    this.#sentNetworkRequests = [];\n    this.#receivedNetworkResponses = [];\n    this.#requestsSet.clear();\n    this.#requestsMap.clear();\n    this.#unresolvedPreflightRequests.clear();\n    for (const request of requests) {\n      this.addRequest(request);\n    }\n  }\n\n  private onRequestStarted(event: Common.EventTarget.EventTargetEvent<SDK.NetworkManager.RequestStartedEvent>): void {\n    const {request, originalRequest} = event.data;\n    if (originalRequest) {\n      this.#sentNetworkRequests.push(originalRequest);\n    }\n    this.#requestsSet.add(request);\n    const manager = SDK.NetworkManager.NetworkManager.forRequest(request);\n    const pageLoad = manager ? this.#pageLoadForManager.get(manager) : null;\n    if (pageLoad) {\n      pageLoad.bindRequest(request);\n    }\n    this.addRequest(request);\n  }\n\n  private onResponseReceived(event: Common.EventTarget.EventTargetEvent<SDK.NetworkManager.ResponseReceivedEvent>):\n      void {\n    const response = event.data.response;\n    this.#receivedNetworkResponses.push(response);\n  }\n\n  private onRequestUpdated(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest>): void {\n    const request = event.data;\n    if (!this.#requestsSet.has(request)) {\n      return;\n    }\n\n    // This is only triggered in an edge case in which Chrome reports 2 preflight requests. The\n    // first preflight gets aborted and should not be shown in DevTools.\n    // (see https://crbug.com/1290390 for details)\n    if (request.isPreflightRequest() &&\n        request.corsErrorStatus()?.corsError === Protocol.Network.CorsError.UnexpectedPrivateNetworkAccess) {\n      this.removeRequest(request);\n      return;\n    }\n\n    this.dispatchEventToListeners(Events.RequestUpdated, {request});\n  }\n\n  private onRequestRedirect(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest>): void {\n    this.#initiatorData.delete(event.data);\n  }\n\n  private onDOMContentLoaded(\n      resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel,\n      event: Common.EventTarget.EventTargetEvent<number>): void {\n    const networkManager = resourceTreeModel.target().model(SDK.NetworkManager.NetworkManager);\n    const pageLoad = networkManager ? this.#pageLoadForManager.get(networkManager) : null;\n    if (pageLoad) {\n      pageLoad.contentLoadTime = event.data;\n    }\n  }\n\n  private onLoad(\n      event: Common.EventTarget\n          .EventTargetEvent<{resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel, loadTime: number}>): void {\n    const networkManager = event.data.resourceTreeModel.target().model(SDK.NetworkManager.NetworkManager);\n    const pageLoad = networkManager ? this.#pageLoadForManager.get(networkManager) : null;\n    if (pageLoad) {\n      pageLoad.loadTime = event.data.loadTime;\n    }\n  }\n\n  reset(clearIfPreserved: boolean): void {\n    this.#requests = [];\n    this.#sentNetworkRequests = [];\n    this.#receivedNetworkResponses = [];\n    this.#requestsSet.clear();\n    this.#requestsMap.clear();\n    this.#unresolvedPreflightRequests.clear();\n    const managers = new Set<SDK.NetworkManager.NetworkManager>(\n        SDK.TargetManager.TargetManager.instance().models(SDK.NetworkManager.NetworkManager));\n    for (const manager of this.#pageLoadForManager.keys()) {\n      if (!managers.has(manager)) {\n        this.#pageLoadForManager.delete(manager);\n      }\n    }\n\n    this.dispatchEventToListeners(Events.Reset, {clearIfPreserved});\n  }\n\n  private networkMessageGenerated(\n      networkManager: SDK.NetworkManager.NetworkManager,\n      event: Common.EventTarget.EventTargetEvent<SDK.NetworkManager.MessageGeneratedEvent>): void {\n    const {message, warning, requestId} = event.data;\n    const consoleMessage = new SDK.ConsoleModel.ConsoleMessage(\n        networkManager.target().model(SDK.RuntimeModel.RuntimeModel), Protocol.Log.LogEntrySource.Network,\n        warning ? Protocol.Log.LogEntryLevel.Warning : Protocol.Log.LogEntryLevel.Info, message);\n    this.associateConsoleMessageWithRequest(consoleMessage, requestId);\n    networkManager.target().model(SDK.ConsoleModel.ConsoleModel)?.addMessage(consoleMessage);\n  }\n\n  associateConsoleMessageWithRequest(consoleMessage: SDK.ConsoleModel.ConsoleMessage, requestId: string): void {\n    const target = consoleMessage.target();\n    const networkManager = target ? target.model(SDK.NetworkManager.NetworkManager) : null;\n    if (!networkManager) {\n      return;\n    }\n    const request = this.requestByManagerAndId(networkManager, requestId);\n    if (!request) {\n      return;\n    }\n    consoleMessageToRequest.set(consoleMessage, request);\n    const initiator = request.initiator();\n    if (initiator) {\n      consoleMessage.stackTrace = initiator.stack || undefined;\n      if (initiator.url) {\n        consoleMessage.url = initiator.url as Platform.DevToolsPath.UrlString;\n        consoleMessage.line = initiator.lineNumber || 0;\n      }\n    }\n  }\n\n  static requestForConsoleMessage(consoleMessage: SDK.ConsoleModel.ConsoleMessage): SDK.NetworkRequest.NetworkRequest\n      |null {\n    return consoleMessageToRequest.get(consoleMessage) || null;\n  }\n\n  requestsForId(requestId: string): SDK.NetworkRequest.NetworkRequest[] {\n    return this.#requestsMap.get(requestId) || [];\n  }\n}\n\nconst consoleMessageToRequest = new WeakMap<SDK.ConsoleModel.ConsoleMessage, SDK.NetworkRequest.NetworkRequest>();\n\nexport enum Events {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  Reset = 'Reset',\n  RequestAdded = 'RequestAdded',\n  RequestUpdated = 'RequestUpdated',\n  RequestRemoved = 'RequestRemoved',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport interface ResetEvent {\n  clearIfPreserved: boolean;\n}\n\nexport interface EventTypes {\n  [Events.Reset]: ResetEvent;\n  [Events.RequestAdded]: {request: SDK.NetworkRequest.NetworkRequest, preserveLog?: boolean};\n  [Events.RequestUpdated]: {request: SDK.NetworkRequest.NetworkRequest};\n  [Events.RequestRemoved]: {request: SDK.NetworkRequest.NetworkRequest};\n}\n\nexport interface InitiatorData {\n  info: InitiatorInfo|null;\n  chain: Set<SDK.NetworkRequest.NetworkRequest>|null;\n  request?: SDK.NetworkRequest.NetworkRequest|null;\n}\n\nexport interface InitiatorGraph {\n  initiators: Set<SDK.NetworkRequest.NetworkRequest>;\n  initiated: Map<SDK.NetworkRequest.NetworkRequest, SDK.NetworkRequest.NetworkRequest>;\n}\n\nexport interface InitiatorInfo {\n  type: SDK.NetworkRequest.InitiatorType;\n  // generally this is a url but can also contain \"<anonymous>\"\n  url: Platform.DevToolsPath.UrlString;\n  lineNumber: number|undefined;\n  columnNumber: number|undefined;\n  scriptId: Protocol.Runtime.ScriptId|null;\n  stack: Protocol.Runtime.StackTrace|null;\n  initiatorRequest: SDK.NetworkRequest.NetworkRequest|null;\n}\n"]}