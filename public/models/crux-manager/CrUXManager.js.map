{"version":3,"file":"CrUXManager.js","sourceRoot":"","sources":["../../../../../../front_end/models/crux-manager/CrUXManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as EmulationModel from '../../models/emulation/emulation.js';\n\nconst UIStrings = {\n  /**\n   * @description Warning message indicating that the user will see real user data for a URL which is different from the URL they are currently looking at.\n   */\n  fieldOverrideWarning: 'Field data is configured for a different URL than the current page.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('models/crux-manager/CrUXManager.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// This key is expected to be visible in the frontend.\n// b/349721878\nconst CRUX_API_KEY = 'AIzaSyCCSOx25vrb5z0tbedCB3_JRzzbVW6Uwgw';\nconst DEFAULT_ENDPOINT = `https://chromeuxreport.googleapis.com/v1/records:queryRecord?key=${CRUX_API_KEY}`;\n\nexport type StandardMetricNames = 'cumulative_layout_shift'|'first_contentful_paint'|'first_input_delay'|\n    'interaction_to_next_paint'|'largest_contentful_paint'|'experimental_time_to_first_byte'|'round_trip_time'|\n    'largest_contentful_paint_image_time_to_first_byte'|'largest_contentful_paint_image_resource_load_delay'|\n    'largest_contentful_paint_image_resource_load_duration'|'largest_contentful_paint_image_element_render_delay';\nexport type MetricNames = StandardMetricNames|'form_factors';\nexport type FormFactor = 'DESKTOP'|'PHONE'|'TABLET';\nexport type DeviceScope = FormFactor|'ALL';\nexport type DeviceOption = DeviceScope|'AUTO';\nexport type PageScope = 'url'|'origin';\nexport interface Scope {\n  pageScope: PageScope;\n  deviceScope: DeviceScope;\n}\nexport type ConnectionType = 'offline'|'slow-2G'|'2G'|'3G'|'4G';\n\nexport interface CrUXRequest {\n  effectiveConnectionType?: ConnectionType;\n  formFactor?: FormFactor;\n  metrics?: MetricNames[];\n  origin?: string;\n  url?: string;\n}\n\nexport interface MetricResponse {\n  histogram?: Array<{start: number, end?: number, density?: number}>;\n  percentiles?: {p75: number|string};\n}\n\nexport interface FormFactorsResponse {\n  fractions?: {\n    desktop: number,\n    phone: number,\n    tablet: number,\n  };\n}\n\ninterface CollectionDate {\n  year: number;\n  month: number;\n  day: number;\n}\n\ninterface CrUXRecord {\n  key: Omit<CrUXRequest, 'metrics'>;\n  metrics: {[K in StandardMetricNames]?: MetricResponse;}&{\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    form_factors?: FormFactorsResponse,\n  };\n  collectionPeriod: {\n    firstDate: CollectionDate,\n    lastDate: CollectionDate,\n  };\n}\n\nexport interface CrUXResponse {\n  record: CrUXRecord;\n  urlNormalizationDetails?: {\n    originalUrl: string,\n    normalizedUrl: string,\n  };\n}\n\nexport type PageResult = {\n  [K in`${PageScope}-${DeviceScope}`]: CrUXResponse|null;\n}&{\n  warnings: string[],\n};\n\nexport interface OriginMapping {\n  developmentOrigin: string;\n  productionOrigin: string;\n}\n\nexport interface ConfigSetting {\n  enabled: boolean;\n  override?: string;\n  overrideEnabled?: boolean;\n  originMappings?: OriginMapping[];\n}\n\nlet cruxManagerInstance: CrUXManager;\n\n// TODO: Potentially support `TABLET`. Tablet field data will always be `null` until then.\nexport const DEVICE_SCOPE_LIST: DeviceScope[] = ['ALL', 'DESKTOP', 'PHONE'];\n\nconst pageScopeList: PageScope[] = ['origin', 'url'];\nconst metrics: MetricNames[] = [\n  'first_contentful_paint',\n  'largest_contentful_paint',\n  'cumulative_layout_shift',\n  'interaction_to_next_paint',\n  'round_trip_time',\n  'form_factors',\n  'largest_contentful_paint_image_time_to_first_byte',\n  'largest_contentful_paint_image_resource_load_delay',\n  'largest_contentful_paint_image_resource_load_duration',\n  'largest_contentful_paint_image_element_render_delay',\n];\n\nexport class CrUXManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  #originCache = new Map<string, CrUXResponse|null>();\n  #urlCache = new Map<string, CrUXResponse|null>();\n  #mainDocumentUrl?: string;\n  #configSetting: Common.Settings.Setting<ConfigSetting>;\n  #endpoint = DEFAULT_ENDPOINT;\n  #pageResult?: PageResult;\n  fieldDeviceOption: DeviceOption = 'AUTO';\n  fieldPageScope: PageScope = 'url';\n\n  private constructor() {\n    super();\n\n    /**\n     * In an incognito or guest window - which is called an \"OffTheRecord\"\n     * profile in Chromium -, we do not want to persist the user consent and\n     * should ask for it every time. This is why we see what window type the\n     * user is in before choosing where to look/create this setting. If the\n     * user is in OTR, we store it in the session, which uses sessionStorage\n     * and is short-lived. If the user is not in OTR, we use global, which is\n     * the default behaviour and persists the value to the Chrome profile.\n     * This behaviour has been approved by Chrome Privacy as part of the launch\n     * review.\n     */\n    const useSessionStorage = Root.Runtime.hostConfig.isOffTheRecord === true;\n    const storageTypeForConsent =\n        useSessionStorage ? Common.Settings.SettingStorageType.SESSION : Common.Settings.SettingStorageType.GLOBAL;\n\n    this.#configSetting = Common.Settings.Settings.instance().createSetting<ConfigSetting>(\n        'field-data', {enabled: false, override: '', originMappings: [], overrideEnabled: false},\n        storageTypeForConsent);\n\n    this.#configSetting.addChangeListener(() => {\n      void this.refresh();\n    });\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.FrameNavigated, this.#onFrameNavigated,\n        this);\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): CrUXManager {\n    const {forceNew} = opts;\n    if (!cruxManagerInstance || forceNew) {\n      cruxManagerInstance = new CrUXManager();\n    }\n\n    return cruxManagerInstance;\n  }\n\n  /** The most recent page result from the CrUX service. */\n  get pageResult(): PageResult|undefined {\n    return this.#pageResult;\n  }\n\n  getConfigSetting(): Common.Settings.Setting<ConfigSetting> {\n    return this.#configSetting;\n  }\n\n  isEnabled(): boolean {\n    return this.#configSetting.get().enabled;\n  }\n\n  async getFieldDataForPage(pageUrl: string): Promise<PageResult> {\n    const pageResult: PageResult = {\n      'origin-ALL': null,\n      'origin-DESKTOP': null,\n      'origin-PHONE': null,\n      'origin-TABLET': null,\n      'url-ALL': null,\n      'url-DESKTOP': null,\n      'url-PHONE': null,\n      'url-TABLET': null,\n      warnings: [],\n    };\n\n    try {\n      const normalizedUrl = this.#normalizeUrl(pageUrl);\n      const promises: Array<Promise<void>> = [];\n\n      for (const pageScope of pageScopeList) {\n        for (const deviceScope of DEVICE_SCOPE_LIST) {\n          const promise = this.#getScopedData(normalizedUrl, pageScope, deviceScope).then(response => {\n            pageResult[`${pageScope}-${deviceScope}`] = response;\n          });\n          promises.push(promise);\n        }\n      }\n\n      await Promise.all(promises);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      return pageResult;\n    }\n  }\n\n  #getMappedUrl(unmappedUrl: string): string {\n    try {\n      const unmapped = new URL(unmappedUrl);\n      const mappings = this.#configSetting.get().originMappings || [];\n      const mapping = mappings.find(m => m.developmentOrigin === unmapped.origin);\n      if (!mapping) {\n        return unmappedUrl;\n      }\n\n      const mapped = new URL(mapping.productionOrigin);\n      mapped.pathname = unmapped.pathname;\n\n      return mapped.href;\n    } catch {\n      return unmappedUrl;\n    }\n  }\n\n  async getFieldDataForCurrentPageForTesting(): Promise<PageResult> {\n    return await this.#getFieldDataForCurrentPage();\n  }\n\n  /**\n   * In general, this function should use the main document URL\n   * (i.e. the URL after all redirects but before SPA navigations)\n   *\n   * However, we can't detect the main document URL of the current page if it's\n   * navigation occurred before DevTools was first opened. This function will fall\n   * back to the currently inspected URL (i.e. what is displayed in the omnibox) if\n   * the main document URL cannot be found.\n   */\n  async #getFieldDataForCurrentPage(): Promise<PageResult> {\n    const currentUrl = this.#mainDocumentUrl || await this.#getInspectedURL();\n    const urlForCrux = this.#configSetting.get().overrideEnabled ? this.#configSetting.get().override || '' :\n                                                                   this.#getMappedUrl(currentUrl);\n\n    const result = await this.getFieldDataForPage(urlForCrux);\n    if (currentUrl !== urlForCrux) {\n      result.warnings.push(i18nString(UIStrings.fieldOverrideWarning));\n    }\n    return result;\n  }\n\n  async #getInspectedURL(): Promise<string> {\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    let inspectedURL = targetManager.inspectedURL();\n    if (!inspectedURL) {\n      inspectedURL = await new Promise(resolve => {\n        function handler(event: {data: SDK.Target.Target}): void {\n          const newInspectedURL = event.data.inspectedURL();\n          if (newInspectedURL) {\n            resolve(newInspectedURL);\n            targetManager.removeEventListener(SDK.TargetManager.Events.INSPECTED_URL_CHANGED, handler);\n          }\n        }\n        targetManager.addEventListener(SDK.TargetManager.Events.INSPECTED_URL_CHANGED, handler);\n      });\n    }\n    return inspectedURL;\n  }\n\n  async #onFrameNavigated(event: {data: SDK.ResourceTreeModel.ResourceTreeFrame}): Promise<void> {\n    if (!event.data.isPrimaryFrame()) {\n      return;\n    }\n\n    this.#mainDocumentUrl = event.data.url;\n\n    await this.refresh();\n  }\n\n  async refresh(): Promise<void> {\n    // This does 2 things:\n    // - Tells listeners to clear old data so it isn't shown during a URL transition\n    // - Tells listeners to clear old data when field data is disabled.\n    this.#pageResult = undefined;\n    this.dispatchEventToListeners(Events.FIELD_DATA_CHANGED, undefined);\n\n    if (!this.#configSetting.get().enabled) {\n      return;\n    }\n\n    this.#pageResult = await this.#getFieldDataForCurrentPage();\n    this.dispatchEventToListeners(Events.FIELD_DATA_CHANGED, this.#pageResult);\n  }\n\n  #normalizeUrl(inputUrl: string): URL {\n    const normalizedUrl = new URL(inputUrl);\n    normalizedUrl.hash = '';\n    normalizedUrl.search = '';\n    return normalizedUrl;\n  }\n\n  async #getScopedData(normalizedUrl: URL, pageScope: PageScope, deviceScope: DeviceScope): Promise<CrUXResponse|null> {\n    const {origin, href: url, hostname} = normalizedUrl;\n\n    if (hostname === 'localhost' || hostname === '127.0.0.1' || !origin.startsWith('http')) {\n      return null;\n    }\n\n    const cache = pageScope === 'origin' ? this.#originCache : this.#urlCache;\n    const cacheKey = pageScope === 'origin' ? `${origin}-${deviceScope}` : `${url}-${deviceScope}`;\n    const cachedResponse = cache.get(cacheKey);\n    if (cachedResponse !== undefined) {\n      return cachedResponse;\n    }\n\n    // We shouldn't cache the result in the case of an error\n    // The error could be a transient issue with the network/CrUX server/etc.\n    try {\n      const formFactor = deviceScope === 'ALL' ? undefined : deviceScope;\n      const result = pageScope === 'origin' ? await this.#makeRequest({origin, metrics, formFactor}) :\n                                              await this.#makeRequest({url, metrics, formFactor});\n      cache.set(cacheKey, result);\n      return result;\n    } catch (err) {\n      console.error(err);\n      return null;\n    }\n  }\n\n  async #makeRequest(request: CrUXRequest): Promise<CrUXResponse|null> {\n    const body = JSON.stringify(request);\n    const response = await fetch(this.#endpoint, {\n      method: 'POST',\n      body,\n    });\n\n    if (!response.ok && response.status !== 404) {\n      throw new Error(`Failed to fetch data from CrUX server (Status code: ${response.status})`);\n    }\n\n    const responseData = await response.json();\n    if (response.status === 404) {\n      // This is how CrUX tells us that there is not data available for the provided url/origin\n      // Since it's a valid response, just return null instead of throwing an error.\n      if (responseData?.error?.status === 'NOT_FOUND') {\n        return null;\n      }\n\n      throw new Error(`Failed to fetch data from CrUX server (Status code: ${response.status})`);\n    }\n\n    if (!('record' in responseData)) {\n      throw new Error(`Failed to find data in CrUX response: ${JSON.stringify(responseData)}`);\n    }\n\n    return responseData;\n  }\n\n  #getAutoDeviceScope(): DeviceScope {\n    const emulationModel = EmulationModel.DeviceModeModel.DeviceModeModel.tryInstance();\n    if (emulationModel === null) {\n      return 'ALL';\n    }\n\n    if (emulationModel.isMobile()) {\n      if (this.#pageResult?.[`${this.fieldPageScope}-PHONE`]) {\n        return 'PHONE';\n      }\n\n      return 'ALL';\n    }\n\n    if (this.#pageResult?.[`${this.fieldPageScope}-DESKTOP`]) {\n      return 'DESKTOP';\n    }\n\n    return 'ALL';\n  }\n\n  resolveDeviceOptionToScope(option: DeviceOption): DeviceScope {\n    return option === 'AUTO' ? this.#getAutoDeviceScope() : option;\n  }\n\n  getSelectedDeviceScope(): DeviceScope {\n    return this.resolveDeviceOptionToScope(this.fieldDeviceOption);\n  }\n\n  getSelectedScope(): Scope {\n    return {pageScope: this.fieldPageScope, deviceScope: this.getSelectedDeviceScope()};\n  }\n\n  getSelectedFieldResponse(): CrUXResponse|null|undefined {\n    const pageScope = this.fieldPageScope;\n    const deviceScope = this.getSelectedDeviceScope();\n    return this.getFieldResponse(pageScope, deviceScope);\n  }\n\n  getSelectedFieldMetricData(fieldMetric: StandardMetricNames): MetricResponse|undefined {\n    return this.getSelectedFieldResponse()?.record.metrics[fieldMetric];\n  }\n\n  getFieldResponse(pageScope: PageScope, deviceScope: DeviceScope): CrUXResponse|null|undefined {\n    return this.#pageResult?.[`${pageScope}-${deviceScope}`];\n  }\n\n  setEndpointForTesting(endpoint: string): void {\n    this.#endpoint = endpoint;\n  }\n}\n\nexport const enum Events {\n  FIELD_DATA_CHANGED = 'field-data-changed',\n}\n\ninterface EventTypes {\n  [Events.FIELD_DATA_CHANGED]: PageResult|undefined;\n}\n"]}