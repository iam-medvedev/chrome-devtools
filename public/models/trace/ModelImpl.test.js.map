{"version":3,"file":"ModelImpl.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/trace/ModelImpl.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {getFirstOrError, getInsightOrError} from '../../testing/InsightHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\nimport * as Trace from '../trace/trace.js';\n\ndescribeWithEnvironment('TraceModel', function() {\n  it('dispatches an end event when the trace is done', async function() {\n    const model = Trace.TraceModel.Model.createWithAllHandlers();\n    const events: string[] = [];\n\n    model.addEventListener(Trace.TraceModel.ModelUpdateEvent.eventName, (evt: Event) => {\n      const updateEvent = evt as Trace.TraceModel.ModelUpdateEvent;\n      events.push(updateEvent.data.type);\n    });\n\n    await TraceLoader.rawEvents(this, 'basic.json.gz').then(events => model.parse(events));\n    assert.isOk(events.includes('PROGRESS_UPDATE'));\n    assert.isOk(events.includes('COMPLETE'));\n  });\n\n  it('supports parsing a generic trace that has no browser specific details', async function() {\n    const model = Trace.TraceModel.Model.createWithAllHandlers();\n    const file1 = await TraceLoader.rawEvents(this, 'generic-about-tracing.json.gz');\n    await model.parse(file1);\n    assert.strictEqual(model.size(), 1);\n  });\n\n  it('supports being given a set of handlers to run and will run just those and the Meta handler', async function() {\n    const model = new Trace.TraceModel.Model({\n      Animations: Trace.Handlers.ModelHandlers.Animations,\n    } as Trace.Handlers.Types.Handlers);\n    const file1 = await TraceLoader.rawEvents(this, 'animation.json.gz');\n    await model.parse(file1);\n    assert.deepEqual(Object.keys(model.parsedTrace(0)?.data || {}), ['Meta', 'Animations']);\n  });\n\n  it('supports parsing multiple traces', async function() {\n    const model = Trace.TraceModel.Model.createWithAllHandlers();\n    const file1 = await TraceLoader.rawEvents(this, 'basic.json.gz');\n    const file2 = await TraceLoader.rawEvents(this, 'slow-interaction-keydown.json.gz');\n\n    await model.parse(file1);\n    assert.strictEqual(model.lastTraceIndex(), 0);\n    model.resetProcessor();\n    await model.parse(file2);\n    assert.strictEqual(model.lastTraceIndex(), 1);\n    model.resetProcessor();\n\n    assert.strictEqual(model.size(), 2);\n    assert.isNotNull(model.parsedTrace(0));\n    assert.isNotNull(model.parsedTrace(1));\n  });\n\n  it('supports deleting traces', async function() {\n    const model = Trace.TraceModel.Model.createWithAllHandlers();\n    const file1 = await TraceLoader.rawEvents(this, 'basic.json.gz');\n    const file2 = await TraceLoader.rawEvents(this, 'slow-interaction-keydown.json.gz');\n\n    await model.parse(file1);\n    model.resetProcessor();\n    await model.parse(file2);\n    model.resetProcessor();\n\n    // Test only one trace is deleted.\n    assert.strictEqual(model.size(), 2);\n    model.deleteTraceByIndex(0);\n    assert.strictEqual(model.size(), 1);\n    assert.isNotNull(model.parsedTrace(0));\n\n    model.deleteTraceByIndex(0);\n    assert.strictEqual(model.size(), 0);\n    assert.isNull(model.parsedTrace(0));\n  });\n\n  it('names traces using their origin and defaults to \"Trace n\" when no origin is found', async function() {\n    const model = Trace.TraceModel.Model.createWithAllHandlers();\n    const traceFiles = [\n      await TraceLoader.rawEvents(this, 'threejs-gpu.json.gz'),\n      await TraceLoader.rawEvents(this, 'web-dev.json.gz'),\n      // Process the previous trace again to test the trace sequencing\n      await TraceLoader.rawEvents(this, 'web-dev.json.gz'),\n      await TraceLoader.rawEvents(this, 'multiple-navigations.json.gz'),\n      await TraceLoader.rawEvents(this, 'missing-url.json.gz'),\n    ];\n    for (const traceFile of traceFiles) {\n      await model.parse(traceFile);\n      model.resetProcessor();\n    }\n    const expectedResults = [\n      'threejs.org (1)',\n      'web.dev (1)',\n      'web.dev (2)',\n      'google.com (1)',\n      'Trace 5',\n    ];\n    assert.deepEqual(model.getRecordingsAvailable(), expectedResults);\n  });\n\n  it('supports overriding modifications in metadata', async function() {\n    const model = Trace.TraceModel.Model.createWithAllHandlers();\n    const file1 = await TraceLoader.rawEvents(this, 'basic.json.gz');\n    await model.parse(file1);\n\n    // Make sure there are no modifications before any are added\n    assert.isUndefined(model.parsedTrace(0)?.metadata.modifications);\n\n    const initialBreadcrumb = {\n      window: {\n        max: 0 as Trace.Types.Timing.Micro,\n        min: 10 as Trace.Types.Timing.Micro,\n        range: 10 as Trace.Types.Timing.Micro,\n      },\n      child: null,\n    };\n\n    const entriesModifications = {\n      hiddenEntries: ['r-1', 'r-2', 'r-3'],\n      expandableEntries: ['r-4'],\n    } as Trace.Types.File.Modifications['entriesModifications'];\n\n    const annotations = {\n      entryLabels: [\n        {\n          entry: 'r-4',\n          label: 'entry label',\n        },\n      ],\n      labelledTimeRanges: [\n        {\n          bounds: {\n            min: Trace.Types.Timing.Micro(0),\n            max: Trace.Types.Timing.Micro(10),\n            range: Trace.Types.Timing.Micro(10),\n          },\n          label: 'range label',\n        },\n      ],\n      linksBetweenEntries: [{\n        entryFrom: 'r-10',\n        entryTo: 'r-11',\n      }],\n    } as Trace.Types.File.Modifications['annotations'];\n\n    const modifications = {\n      entriesModifications,\n      initialBreadcrumb,\n      annotations,\n    };\n\n    model.overrideModifications(0, modifications);\n    // Make sure metadata contains overwritten modifications\n    assert.strictEqual(model.parsedTrace(0)?.metadata.modifications, modifications);\n  });\n\n  it('supports a custom time formatter for insights', async function() {\n    const model = Trace.TraceModel.Model.createWithAllHandlers();\n    const file1 = await TraceLoader.rawEvents(this, 'many-redirects.json.gz');\n    await model.parse(file1, {\n      insightTimeFormatters: {\n        milli() {\n          return 'FAKE-MILLI-TIME-FORMATTER';\n        },\n      }\n    });\n    const result = model.parsedTrace();\n    assert.isOk(result);\n    assert.isOk(result.insights);\n    const insight = getInsightOrError(\n        'DocumentLatency', result.insights, getFirstOrError(result.data.Meta.navigationsByNavigationId.values()));\n    assert.include(insight.data?.checklist.noRedirects.label ?? '', 'FAKE-MILLI-TIME-FORMATTER');\n  });\n});\n"]}