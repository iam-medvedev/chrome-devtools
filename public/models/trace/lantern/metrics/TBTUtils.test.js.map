{"version":3,"file":"TBTUtils.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/models/trace/lantern/metrics/TBTUtils.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// TODO(crbug.com/348449529): refactor to proper devtools module\n// eslint-disable-next-line rulesdir/es_modules_import\nimport {calculateSumOfBlockingTime} from './TBTUtils.js';\n\ndescribe('TotalBlockingTime utils', () => {\n  it('reports 0 when no task is longer than 50ms', () => {\n    const events = [\n      {start: 1000, end: 1050, duration: 50},\n      {start: 2000, end: 2010, duration: 10},\n    ];\n\n    const fcpTimeMs = 500;\n    const interactiveTimeMs = 4000;\n\n    expect(\n        calculateSumOfBlockingTime(events, fcpTimeMs, interactiveTimeMs),\n        )\n        .to.equal(0);\n  });\n\n  it('only looks at tasks within FCP and TTI', () => {\n    const events = [\n      {start: 1000, end: 1060, duration: 60},\n      {start: 2000, end: 2100, duration: 100},\n      {start: 2300, end: 2450, duration: 150},\n      {start: 2600, end: 2800, duration: 200},\n    ];\n\n    const fcpTimeMs = 1500;\n    const interactiveTimeMs = 2500;\n\n    expect(\n        calculateSumOfBlockingTime(events, fcpTimeMs, interactiveTimeMs),\n        )\n        .to.equal(150);\n  });\n\n  it('clips before finding blocking regions', () => {\n    const fcpTimeMs = 150;\n    const interactiveTimeMs = 300;\n\n    const events = [\n      // The clipping is done first, so the task becomes [150, 200] after clipping and contributes\n      // 0ms of blocking time. This is in contrast to first calculating the blocking region ([100,\n      // 200]) and then clipping at FCP (150ms), which yields 50ms blocking time.\n      {start: 50, end: 200, duration: 150},\n      // Similarly, the task is first clipped above to be [240, 300], and then contributes 10ms\n      // blocking time.\n      {start: 240, end: 460, duration: 120},\n    ];\n\n    expect(\n        calculateSumOfBlockingTime(events, fcpTimeMs, interactiveTimeMs),\n        )\n        .to.equal(10);  // 0ms + 10ms.\n  });\n\n  // TTI can happen in the middle of a task, for example, if TTI is at FMP which occurs as part\n  // of a larger task, or in the lantern case where we use estimate TTI using a different graph\n  // from the one used to estimate TBT.\n  it('clips properly if TTI falls in the middle of a task', () => {\n    const fcpTimeMs = 1000;\n    const interactiveTimeMs = 2000;\n\n    expect(\n        calculateSumOfBlockingTime(\n            [{start: 1951, end: 2100, duration: 149}],\n            fcpTimeMs,\n            interactiveTimeMs,\n            ),\n        )\n        .to.equal(0);  // Duration after clipping is 49, which is < 50.\n    expect(\n        calculateSumOfBlockingTime(\n            [{start: 1950, end: 2100, duration: 150}],\n            fcpTimeMs,\n            interactiveTimeMs,\n            ),\n        )\n        .to.equal(0);  // Duration after clipping is 50, so time after 50ms is 0ms.\n    expect(\n        calculateSumOfBlockingTime(\n            [{start: 1949, end: 2100, duration: 151}],\n            fcpTimeMs,\n            interactiveTimeMs,\n            ),\n        )\n        .to.equal(1);  // Duration after clipping is 51, so time after 50ms is 1ms.\n  });\n\n  it('clips properly if FCP falls in the middle of a task', () => {\n    const fcpTimeMs = 1000;\n    const interactiveTimeMs = 2000;\n\n    expect(\n        calculateSumOfBlockingTime(\n            [{start: 900, end: 1049, duration: 149}],\n            fcpTimeMs,\n            interactiveTimeMs,\n            ),\n        )\n        .to.equal(0);  // Duration after clipping is 49, which is < 50.\n    expect(\n        calculateSumOfBlockingTime(\n            [{start: 900, end: 1050, duration: 150}],\n            fcpTimeMs,\n            interactiveTimeMs,\n            ),\n        )\n        .to.equal(0);  // Duration after clipping is 50, so time after 50ms is 0ms.\n    expect(\n        calculateSumOfBlockingTime(\n            [{start: 900, end: 1051, duration: 151}],\n            fcpTimeMs,\n            interactiveTimeMs,\n            ),\n        )\n        .to.equal(1);  // Duration after clipping is 51, so time after 50ms is 1ms.\n  });\n\n  // This can happen in the lantern metric case, where we use the optimistic\n  // TTI and pessimistic FCP.\n  it('returns 0 if interactiveTime is earlier than FCP', () => {\n    const fcpTimeMs = 2050;\n    const interactiveTimeMs = 1050;\n\n    const events = [{start: 500, end: 3000, duration: 2500}];\n\n    expect(\n        calculateSumOfBlockingTime(events, fcpTimeMs, interactiveTimeMs),\n        )\n        .to.equal(0);\n  });\n});\n"]}