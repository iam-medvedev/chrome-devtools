{"version":3,"file":"ThirdParties.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/ThirdParties.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {getFirstOrError, getInsightOrError, processTrace} from '../../../testing/InsightHelpers.js';\n\ndescribeWithEnvironment('ThirdParties', function() {\n  it('categorizes third party web requests (simple)', async () => {\n    const {data, insights} = await processTrace(this, 'load-simple.json.gz');\n    assert.strictEqual(insights.size, 2);\n    const insight =\n        getInsightOrError('ThirdParties', insights, getFirstOrError(data.Meta.navigationsByNavigationId.values()));\n\n    const entityNames = insight.summaries.map(s => s.entity.name);\n\n    assert.deepEqual([...new Set(entityNames)], [\n      'localhost',\n      'Google Fonts',\n    ]);\n    const summaryResult = insight.summaries.map(s => [s.entity.name, s.transferSize, s.mainThreadTime.toFixed(2)]);\n    assert.deepEqual(summaryResult, [\n      ['localhost', 1503, '24.95'],\n      ['Google Fonts', 25325, '0.00'],\n    ]);\n  });\n\n  it('categorizes third party web requests (complex)', async () => {\n    const {data, insights} = await processTrace(this, 'lantern/paul/trace.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight =\n        getInsightOrError('ThirdParties', insights, getFirstOrError(data.Meta.navigationsByNavigationId.values()));\n\n    const entityNames = insight.summaries.map(s => s.entity.name);\n    assert.deepEqual([...new Set(entityNames)], [\n      'paulirish.com',\n      'Google Fonts',\n      'Google Tag Manager',\n      'Google Analytics',\n      'Disqus',\n      'Firebase',\n    ]);\n\n    const summaryResult = insight.summaries.map(s => [s.entity.name, s.transferSize, s.mainThreadTime.toFixed(2)]);\n    assert.deepEqual(summaryResult, [\n      ['paulirish.com', 157130, '85.54'],\n      ['Google Fonts', 80003, '0.00'],\n      ['Google Tag Manager', 95375, '19.95'],\n      ['Google Analytics', 20865, '5.86'],\n      ['Disqus', 1551, '0.34'],\n      ['Firebase', 2847, '0.00'],\n    ]);\n  });\n});\n"]}