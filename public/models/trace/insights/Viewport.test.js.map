{"version":3,"file":"Viewport.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/Viewport.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,UAAU,MAAM,aAAa,CAAC;AAE1C,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,WAA2C,EAAE,SAAiB;IAC/F,MAAM,EAAC,SAAS,EAAE,QAAQ,EAAC,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IACpF,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;IACjC,CAAC;IAED,OAAO,EAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAC,CAAC;AACrC,CAAC;AAED,SAAS,UAAU,CAAC,QAAoD,EAAE,YAAoB;IAC5F,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC/C,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;IACzC,CAAC;IACD,MAAM,OAAO,GAAG,WAAW,CAAC,QAAQ,CAAC;IACrC,IAAI,OAAO,YAAY,KAAK,EAAE,CAAC;QAC7B,MAAM,OAAO,CAAC;IAChB,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,QAAQ,CAAC,UAAU,EAAE;IACnB,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,EAAC,IAAI,EAAE,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;QACxE,MAAM,OAAO,GAAG,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC;QAE9F,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;QACnD,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;QAE9D,MAAM,OAAO,GAAG;YACd,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;YAC9B,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK;SACtE,CAAC;QAEF,MAAM,MAAM,GACR,IAAI,CAAC,gBAAgB,CAAC,gCAAgC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,OAAO,CAAC,CAAC;QACjH,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC1B,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;YAC3B,KAAK,CAAC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACzC,CAAC;QAED,MAAM,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC3F,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as TraceModel from '../trace.js';\n\nexport async function processTrace(testContext: Mocha.Suite|Mocha.Context|null, traceFile: string) {\n  const {traceData, insights} = await TraceLoader.traceEngine(testContext, traceFile);\n  if (!insights) {\n    throw new Error('No insights');\n  }\n\n  return {data: traceData, insights};\n}\n\nfunction getInsight(insights: TraceModel.Insights.Types.TraceInsightData, navigationId: string) {\n  const navInsights = insights.get(navigationId);\n  if (!navInsights) {\n    throw new Error('missing navInsights');\n  }\n  const insight = navInsights.Viewport;\n  if (insight instanceof Error) {\n    throw insight;\n  }\n  return insight;\n}\n\ndescribe('Viewport', function() {\n  it('detects mobile optimized viewport', async () => {\n    const {data, insights} = await processTrace(this, 'lcp-images.json.gz');\n    const insight = getInsight(insights, data.Meta.navigationsByNavigationId.keys().next().value);\n\n    assert.strictEqual(insight.mobileOptimized, true);\n  });\n\n  it('detects mobile unoptimized viewport', async () => {\n    const {data} = await processTrace(this, 'lcp-images.json.gz');\n\n    const context = {\n      frameId: data.Meta.mainFrameId,\n      navigationId: data.Meta.navigationsByNavigationId.keys().next().value,\n    };\n\n    const events =\n        data.UserInteractions.beginCommitCompositorFrameEvents.filter(event => event.args.frame === context.frameId);\n    assert.isNotEmpty(events);\n    for (const event of events) {\n      event.args.is_mobile_optimized = false;\n    }\n\n    const insight = TraceModel.Insights.InsightRunners.Viewport.generateInsight(data, context);\n    assert.strictEqual(insight.mobileOptimized, false);\n  });\n});\n"]}