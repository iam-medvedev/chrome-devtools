{"version":3,"file":"DOMSize.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/DOMSize.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {getFirstOrError, getInsightOrError, processTrace} from '../../../testing/InsightHelpers.js';\n\ndescribeWithEnvironment('DOMSize', function() {\n  // Processing traces in this file can take a while due to a performance bottleneck\n  // b/38254550\n  this.timeout(30_000);\n\n  it('finds layout reflows and style recalcs affected by DOM size', async () => {\n    const {data, insights} = await processTrace(this, 'dom-size.json.gz');\n\n    // 1 large DOM update was triggered before the first navigation\n    {\n      const insight = getInsightOrError('DOMSize', insights);\n      assert.lengthOf(insight.largeLayoutUpdates, 1);\n      assert.lengthOf(insight.largeStyleRecalcs, 1);\n    }\n\n    // 1 large DOM update was triggered after the first navigation\n    {\n      const insight =\n          getInsightOrError('DOMSize', insights, getFirstOrError(data.Meta.navigationsByNavigationId.values()));\n      assert.lengthOf(insight.largeLayoutUpdates, 1);\n      assert.lengthOf(insight.largeStyleRecalcs, 1);\n    }\n  });\n\n  it('finds largest DOM stats event', async () => {\n    const {data, insights} = await processTrace(this, 'multi-frame-dom-stats.json.gz');\n\n    const insight =\n        getInsightOrError('DOMSize', insights, getFirstOrError(data.Meta.navigationsByNavigationId.values()));\n    const domStats = insight.maxDOMStats!.args.data;\n    assert.strictEqual(domStats.totalElements, 7);\n    assert.strictEqual(domStats.maxDepth!.depth, 3);\n    assert.strictEqual(domStats.maxDepth!.nodeName, 'DIV id=\\'child\\'');\n    assert.strictEqual(domStats.maxChildren!.numChildren, 4);\n    assert.strictEqual(domStats.maxChildren!.nodeName, 'BODY');\n  });\n\n  it('separates dom stats in a cross-origin navigation', async () => {\n    const {data, insights} = await processTrace(this, 'dom-size-overlap.json.gz');\n\n    const navigations =\n        [...data.Meta.navigationsByNavigationId.values()].filter(n => n.args.data?.isOutermostMainFrame);\n    {\n      const insight = getInsightOrError('DOMSize', insights, navigations[0]);\n      const domStats = insight.maxDOMStats!.args.data;\n      assert.strictEqual(domStats.totalElements, 6811);\n    }\n    {\n      const insight = getInsightOrError('DOMSize', insights, navigations[1]);\n      const domStats = insight.maxDOMStats!.args.data;\n      // If we don't filter by process id, the DOM stats events from the previous navigation\n      // would leak into this one and this # would be much higher\n      assert.strictEqual(domStats.totalElements, 7);\n    }\n  });\n});\n"]}