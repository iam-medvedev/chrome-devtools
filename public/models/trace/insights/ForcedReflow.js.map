{"version":3,"file":"ForcedReflow.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/ForcedReflow.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AAGnD,OAAO,KAAK,OAAO,MAAM,uBAAuB,CAAC;AACjD,OAAO,KAAK,KAAK,MAAM,mBAAmB,CAAC;AAE3C,OAAO,EAGL,eAAe,GAIhB,MAAM,YAAY,CAAC;AAEpB,MAAM,UAAU,IAAI;IAClB,OAAO,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;AAClC,CAAC;AAED,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB;;OAEG;IACH,KAAK,EAAE,eAAe;IACtB;;OAEG;IACH,WAAW,EACP,8VAA8V;IAClW;;OAEG;IACH,iBAAiB,EAAE,aAAa;IAChC;;OAEG;IACH,4BAA4B,EAAE,mBAAmB;IACjD;;OAEG;IACH,eAAe,EAAE,mBAAmB;CACrC,CAAC;AAEF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,uCAAuC,EAAE,SAAS,CAAC,CAAC;AAC7F,MAAM,CAAC,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAO7E,SAAS,qBAAqB,CAC1B,IAAwC,EACxC,cAA2E;IAE7E,MAAM,sBAAsB,GAAG,IAAI,GAAG,EAAsC,CAAC;IAC7E,MAAM,eAAe,GAAG,IAAI,GAAG,EAA6B,CAAC;IAC7D,MAAM,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACrD,IAAI,CAAC,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC3D,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IACzB,CAAC;IAED,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;QAC7B,mDAAmD;QACnD,MAAM,SAAS,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAExC,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,OAAO;QACT,CAAC;QACD,2BAA2B;QAC3B,MAAM,YAAY,GAA0D,EAAE,CAAC;QAC/E,IAAI,WAAW,GAAG,SAAS,CAAC;QAC5B,IAAI,YAAY,CAAC;QACjB,MAAM,UAAU,GAAiC,EAAE,CAAC;QAEpD,wEAAwE;QACxE,OAAO,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACvC,MAAM,SAAS,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,YAAY,EAAE,CAAC;gBAClB,YAAY,GAAG,SAAS,CAAC;YAC3B,CAAC;YACD,MAAM,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC;YAClC,IAAI,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC;gBAC1C,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YACvC,CAAC;YACD,WAAW,GAAG,SAAS,CAAC;QAC1B,CAAC;QAED,kFAAkF;QAClF,OAAO,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACxD,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC;YACnC,IAAI,SAAS,EAAE,CAAC;gBACd,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC;QAED,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;QAC5B,IAAI,oBAAoB,CAAC;QACzB,IAAI,yBAAuD,CAAC;QAC5D,OAAO,IAAI,EAAE,CAAC;YACZ,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YAC7B,IAAI,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC;gBAC1C,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBAC5B,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;gBACzC,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,4CAA4C;gBAC5C,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI;oBAC7D,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;oBACxD,oBAAoB,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC3C,yBAAyB,GAAG,SAAS,CAAC;oBACtC,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;wBAC9B,YAAY,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;oBAC1C,CAAC;gBACH,CAAC;qBAAM,CAAC;oBACN,+DAA+D;oBAC/D,wEAAwE;oBACxE,MAAM,YAAY,GAAG,YAAY,EAAE,KAAK,CAAC;oBACzC,IAAI,YAAY,IAAI,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,CAAC;wBAC7D,oBAAoB,GAAG,YAAY,CAAC,SAAS,CAAC;wBAC9C,yBAAyB,GAAG,YAAY,EAAE,KAAK,CAAC;oBAClD,CAAC;gBACH,CAAC;gBACD,MAAM;YACR,CAAC;YACD,YAAY,GAAG,IAAI,CAAC;YACpB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;QAED,IAAI,CAAC,oBAAoB,IAAI,CAAC,yBAAyB,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACrF,OAAO;QACT,CAAC;QACD,MAAM,cAAc,GAChB,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,GAAG,CAAC;QAE3G,MAAM,IAAI,GAAG,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI;YAClD,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC;YAC7B,SAAS,EAAE,CAAC;YACZ,aAAa,EAAE,EAAE;SAClB,CAAC;QACF,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,eAAe,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAE1C,MAAM,gBAAgB,GAClB,oBAAoB,CAAC,QAAQ,GAAG,GAAG,GAAG,oBAAoB,CAAC,UAAU,GAAG,GAAG,GAAG,oBAAoB,CAAC,YAAY,CAAC;QACpH,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE,CAAC;YAClD,sBAAsB,CAAC,GAAG,CAAC,gBAAgB,EAAE;gBAC3C,oBAAoB;gBACpB,eAAe,EAAE,CAAC;gBAClB,YAAY,EAAE,IAAI,GAAG,EAAU;gBAC/B,0BAA0B,EAAE,EAAE;aAC/B,CAAC,CAAC;QACL,CAAC;QACD,MAAM,cAAc,GAAG,sBAAsB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QACpE,IAAI,cAAc,EAAE,CAAC;YACnB,cAAc,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YAC/C,cAAc,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAChD,cAAc,CAAC,0BAA0B,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,IAAI,sBAAsB,GAAG,EAAE,CAAC;IAChC,IAAI,OAAO,GAAG,CAAC,CAAC;IAChB,sBAAsB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;QAC5C,IAAI,KAAK,CAAC,eAAe,GAAG,OAAO,EAAE,CAAC;YACpC,OAAO,GAAG,KAAK,CAAC,eAAe,CAAC;YAChC,sBAAsB,GAAG,GAAG,CAAC;QAC/B,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,MAAM,sBAAsB,GAAwB,EAAE,CAAC;IACvD,MAAM,wBAAwB,GAAG,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACpF,MAAM,OAAO,GAAG,sBAAsB,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE,YAAY,CAAC;IACjF,IAAI,OAAO,EAAE,CAAC;QACZ,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACtB,MAAM,aAAa,GAAG,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACjD,IAAI,aAAa,IAAI,aAAa,CAAC,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAClG,sBAAsB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC7C,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,wBAAwB,EAAE,sBAAsB,CAAC,CAAC;AAC5D,CAAC;AAED,SAAS,QAAQ,CAAC,YAA2D;IAC3E,OAAO;QACL,OAAO,EAAE,SAAS;QAClB,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;QAClC,WAAW,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC;QAC9C,QAAQ,EAAE,eAAe,CAAC,GAAG;QAC7B,UAAU,EAAE,YAAY,CAAC,wBAAwB,KAAK,SAAS,IAAI,YAAY,CAAC,sBAAsB,CAAC,MAAM,KAAK,CAAC;QACnH,GAAG,YAAY;KAChB,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,eAA0C;IACxE,MAAM,YAAY,GAAG,eAAe,CAAC,QAAQ,CAAC;IAC9C,MAAM,cAAc,GAAG,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC;IAE5D,IAAI,CAAC,YAAY,EAAE,CAAC;QAClB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,CAAC,cAAc,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;IACtC,CAAC;IAED,MAAM,CAAC,wBAAwB,EAAE,sBAAsB,CAAC,GACpD,qBAAqB,CAAC,YAAY,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;IAEnE,OAAO,QAAQ,CAAC;QACd,aAAa,EAAE,wBAAwB,EAAE,0BAA0B;QACnE,wBAAwB;QACxB,sBAAsB;KACvB,CAAC,CAAC;AACL,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport type {Warning} from '../handlers/WarningsHandler.js';\nimport * as Helpers from '../helpers/helpers.js';\nimport * as Types from '../types/types.js';\n\nimport {\n  type BottomUpCallStack,\n  type ForcedReflowAggregatedData,\n  InsightCategory,\n  type InsightModel,\n  type PartialInsightModel,\n  type RequiredData,\n} from './types.js';\n\nexport function deps(): ['Warnings', 'Renderer'] {\n  return ['Warnings', 'Renderer'];\n}\n\nexport const UIStrings = {\n  /**\n   *@description Title of an insight that provides details about Forced reflow.\n   */\n  title: 'Forced reflow',\n  /**\n   * @description Text to describe the forced reflow.\n   */\n  description:\n      'Many APIs, typically reading layout geometry, force the rendering engine to pause script execution in order to calculate the style and layout. Learn more about [forced reflow](https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing#avoid-forced-synchronous-layouts) and its mitigations.',\n  /**\n   *@description Title of a list to provide related stack trace data\n   */\n  relatedStackTrace: 'Stack trace',\n  /**\n   *@description Text to describe the top time-consuming function call\n   */\n  topTimeConsumingFunctionCall: 'Top function call',\n  /**\n   * @description Text to describe the total reflow time\n   */\n  totalReflowTime: 'Total reflow time',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('models/trace/insights/ForcedReflow.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type ForcedReflowInsightModel = InsightModel<typeof UIStrings, {\n  topLevelFunctionCallData: ForcedReflowAggregatedData | undefined,\n  aggregatedBottomUpData: BottomUpCallStack[],\n}>;\n\nfunction aggregateForcedReflow(\n    data: Map<Warning, Types.Events.Event[]>,\n    entryToNodeMap: Map<Types.Events.Event, Helpers.TreeHelpers.TraceEntryNode>):\n    [ForcedReflowAggregatedData|undefined, BottomUpCallStack[]] {\n  const dataByTopLevelFunction = new Map<string, ForcedReflowAggregatedData>();\n  const bottomUpDataMap = new Map<string, BottomUpCallStack>();\n  const forcedReflowEvents = data.get('FORCED_REFLOW');\n  if (!forcedReflowEvents || forcedReflowEvents.length === 0) {\n    return [undefined, []];\n  }\n\n  forcedReflowEvents.forEach(e => {\n    // Gather the stack traces by searching in the tree\n    const traceNode = entryToNodeMap.get(e);\n\n    if (!traceNode) {\n      return;\n    }\n    // Compute call stack fully\n    const bottomUpData: (Types.Events.CallFrame|Protocol.Runtime.CallFrame)[] = [];\n    let currentNode = traceNode;\n    let previousNode;\n    const childStack: Protocol.Runtime.CallFrame[] = [];\n\n    // Some profileCalls maybe constructed as its children in hierarchy tree\n    while (currentNode.children.length > 0) {\n      const childNode = currentNode.children[0];\n      if (!previousNode) {\n        previousNode = childNode;\n      }\n      const eventData = childNode.entry;\n      if (Types.Events.isProfileCall(eventData)) {\n        childStack.push(eventData.callFrame);\n      }\n      currentNode = childNode;\n    }\n\n    // In order to avoid too much information, we only contain 2 levels bottomUp data,\n    while (childStack.length > 0 && bottomUpData.length < 2) {\n      const traceData = childStack.pop();\n      if (traceData) {\n        bottomUpData.push(traceData);\n      }\n    }\n\n    let node = traceNode.parent;\n    let topLevelFunctionCall;\n    let topLevelFunctionCallEvent: Types.Events.Event|undefined;\n    while (node) {\n      const eventData = node.entry;\n      if (Types.Events.isProfileCall(eventData)) {\n        if (bottomUpData.length < 2) {\n          bottomUpData.push(eventData.callFrame);\n        }\n      } else {\n        // We have finished searching bottom up data\n        if (Types.Events.isFunctionCall(eventData) && eventData.args.data &&\n            Types.Events.objectIsCallFrame(eventData.args.data)) {\n          topLevelFunctionCall = eventData.args.data;\n          topLevelFunctionCallEvent = eventData;\n          if (bottomUpData.length === 0) {\n            bottomUpData.push(topLevelFunctionCall);\n          }\n        } else {\n          // Sometimes the top level task can be other JSInvocation event\n          // then we use the top level profile call as topLevelFunctionCall's data\n          const previousData = previousNode?.entry;\n          if (previousData && Types.Events.isProfileCall(previousData)) {\n            topLevelFunctionCall = previousData.callFrame;\n            topLevelFunctionCallEvent = previousNode?.entry;\n          }\n        }\n        break;\n      }\n      previousNode = node;\n      node = node.parent;\n    }\n\n    if (!topLevelFunctionCall || !topLevelFunctionCallEvent || bottomUpData.length === 0) {\n      return;\n    }\n    const bottomUpDataId =\n        bottomUpData[0].scriptId + ':' + bottomUpData[0].lineNumber + ':' + bottomUpData[0].columnNumber + ':';\n\n    const data = bottomUpDataMap.get(bottomUpDataId) ?? {\n      bottomUpData: bottomUpData[0],\n      totalTime: 0,\n      relatedEvents: [],\n    };\n    data.totalTime += (e.dur ?? 0);\n    data.relatedEvents.push(e);\n    bottomUpDataMap.set(bottomUpDataId, data);\n\n    const aggregatedDataId =\n        topLevelFunctionCall.scriptId + ':' + topLevelFunctionCall.lineNumber + ':' + topLevelFunctionCall.columnNumber;\n    if (!dataByTopLevelFunction.has(aggregatedDataId)) {\n      dataByTopLevelFunction.set(aggregatedDataId, {\n        topLevelFunctionCall,\n        totalReflowTime: 0,\n        bottomUpData: new Set<string>(),\n        topLevelFunctionCallEvents: [],\n      });\n    }\n    const aggregatedData = dataByTopLevelFunction.get(aggregatedDataId);\n    if (aggregatedData) {\n      aggregatedData.totalReflowTime += (e.dur ?? 0);\n      aggregatedData.bottomUpData.add(bottomUpDataId);\n      aggregatedData.topLevelFunctionCallEvents.push(topLevelFunctionCallEvent);\n    }\n  });\n\n  let topTimeConsumingDataId = '';\n  let maxTime = 0;\n  dataByTopLevelFunction.forEach((value, key) => {\n    if (value.totalReflowTime > maxTime) {\n      maxTime = value.totalReflowTime;\n      topTimeConsumingDataId = key;\n    }\n  });\n\n  const aggregatedBottomUpData: BottomUpCallStack[] = [];\n  const topLevelFunctionCallData = dataByTopLevelFunction.get(topTimeConsumingDataId);\n  const dataSet = dataByTopLevelFunction.get(topTimeConsumingDataId)?.bottomUpData;\n  if (dataSet) {\n    dataSet.forEach(value => {\n      const callStackData = bottomUpDataMap.get(value);\n      if (callStackData && callStackData.totalTime > Helpers.Timing.milliToMicro(Types.Timing.Milli(1))) {\n        aggregatedBottomUpData.push(callStackData);\n      }\n    });\n  }\n\n  return [topLevelFunctionCallData, aggregatedBottomUpData];\n}\n\nfunction finalize(partialModel: PartialInsightModel<ForcedReflowInsightModel>): ForcedReflowInsightModel {\n  return {\n    strings: UIStrings,\n    title: i18nString(UIStrings.title),\n    description: i18nString(UIStrings.description),\n    category: InsightCategory.ALL,\n    shouldShow: partialModel.topLevelFunctionCallData !== undefined && partialModel.aggregatedBottomUpData.length !== 0,\n    ...partialModel,\n  };\n}\n\nexport function generateInsight(traceParsedData: RequiredData<typeof deps>): ForcedReflowInsightModel {\n  const warningsData = traceParsedData.Warnings;\n  const entryToNodeMap = traceParsedData.Renderer.entryToNode;\n\n  if (!warningsData) {\n    throw new Error('no warnings data');\n  }\n\n  if (!entryToNodeMap) {\n    throw new Error('no renderer data');\n  }\n\n  const [topLevelFunctionCallData, aggregatedBottomUpData] =\n      aggregateForcedReflow(warningsData.perWarning, entryToNodeMap);\n\n  return finalize({\n    relatedEvents: topLevelFunctionCallData?.topLevelFunctionCallEvents,\n    topLevelFunctionCallData,\n    aggregatedBottomUpData,\n  });\n}\n"]}