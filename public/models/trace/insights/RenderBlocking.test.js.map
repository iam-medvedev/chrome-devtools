{"version":3,"file":"RenderBlocking.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/RenderBlocking.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {getInsightOrError} from '../../../testing/InsightHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Trace from '../../trace/trace.js';\n\nexport async function processTrace(testContext: Mocha.Suite|Mocha.Context|null, traceFile: string) {\n  const {parsedTrace, insights} = await TraceLoader.traceEngine(testContext, traceFile);\n  if (!insights) {\n    throw new Error('No insights');\n  }\n\n  return {data: parsedTrace, insights};\n}\n\ndescribeWithEnvironment('RenderBlocking', function() {\n  it('finds render blocking requests', async () => {\n    const {data, insights} = await processTrace(this, 'load-simple.json.gz');\n    assert.deepStrictEqual(\n        [...insights.keys()], [Trace.Types.Events.NO_NAVIGATION, '0BCFC23BC7D7BEDC9F93E912DCCEC1DA']);\n    const insight =\n        getInsightOrError('RenderBlocking', insights, data.Meta.navigationsByNavigationId.values().next().value);\n\n    assert.strictEqual(insight.renderBlockingRequests.length, 2);\n    assert.deepEqual(insight.renderBlockingRequests.map(r => r.args.data.url), [\n      'https://fonts.googleapis.com/css2?family=Orelega+One&display=swap',\n      'http://localhost:8080/styles.css',\n    ]);\n  });\n\n  it('returns a warning if navigation does not have a first paint event', async () => {\n    const {data, insights} = await processTrace(this, 'user-timings.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight =\n        getInsightOrError('RenderBlocking', insights, data.Meta.navigationsByNavigationId.values().next().value);\n\n    assert.strictEqual(insight.renderBlockingRequests.length, 0);\n    assert.strictEqual(insight.warnings?.length, 1);\n    assert.strictEqual(insight.warnings?.[0], 'NO_FP');\n  });\n\n  it('considers only the navigation specified by the context', async () => {\n    const {data, insights} = await processTrace(this, 'multiple-navigations-render-blocking.json.gz');\n    assert.deepStrictEqual(\n        [...insights.keys()],\n        [Trace.Types.Events.NO_NAVIGATION, '8671F33ECE0C8DBAEFBC2F9A2D1D6107', '1AE2016BBCC48AA090FDAE2CBBA01900']);\n    const navigations = Array.from(data.Meta.navigationsByNavigationId.values());\n    const insight = getInsightOrError('RenderBlocking', insights, navigations[0]);\n\n    assert(insight.renderBlockingRequests.length > 0, 'no render blocking requests found');\n\n    assert(\n        insight.renderBlockingRequests.every(r => r.args.data.syntheticData.sendStartTime > navigations[0].ts),\n        'a result is not contained by the nav bounds');\n    assert(\n        insight.renderBlockingRequests.every(r => r.args.data.syntheticData.finishTime < navigations[1].ts),\n        'a result is not contained by the nav bounds');\n  });\n\n  it('considers navigations separately', async () => {\n    const {data, insights} = await processTrace(this, 'multiple-navigations-render-blocking.json.gz');\n    assert.strictEqual(insights.size, 3);\n    const navigations = Array.from(data.Meta.navigationsByNavigationId.values());\n    const insightOne = getInsightOrError('RenderBlocking', insights);\n    const insightTwo = getInsightOrError('RenderBlocking', insights, navigations[0]);\n    const insightThree = getInsightOrError('RenderBlocking', insights, navigations[1]);\n    assert.deepStrictEqual(insightOne.renderBlockingRequests.map(r => r.args.data.requestId), []);\n    assert.deepStrictEqual(insightTwo.renderBlockingRequests.map(r => r.args.data.requestId), ['99116.2']);\n    assert.deepStrictEqual(insightThree.renderBlockingRequests.map(r => r.args.data.requestId), ['99116.5']);\n  });\n\n  it('considers only the frame specified by the context', async () => {\n    const {data, insights} = await processTrace(this, 'render-blocking-in-iframe.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const navigations = Array.from(data.Meta.navigationsByNavigationId.values());\n    const insight = getInsightOrError('RenderBlocking', insights, navigations[0]);\n\n    assert(insight.renderBlockingRequests.length > 0, 'no render blocking requests found');\n\n    assert(\n        insight.renderBlockingRequests.every(r => r.args.data.frame === data.Meta.mainFrameId),\n        'a result is not from the main frame');\n  });\n\n  it('ignores blocking request after first paint', async () => {\n    const {data, insights} = await processTrace(this, 'parser-blocking-after-paint.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight =\n        getInsightOrError('RenderBlocking', insights, data.Meta.navigationsByNavigationId.values().next().value);\n\n    assert.strictEqual(insight.renderBlockingRequests.length, 0);\n  });\n\n  it('correctly handles body parser blocking requests', async () => {\n    const {data, insights} = await processTrace(this, 'render-blocking-body.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight =\n        getInsightOrError('RenderBlocking', insights, data.Meta.navigationsByNavigationId.values().next().value);\n\n    assert.deepStrictEqual(insight.renderBlockingRequests.map(r => r.args.data.url), [\n      'http://localhost:8080/render-blocking/style.css',\n      'http://localhost:8080/render-blocking/script.js?beforeImage',\n    ]);\n  });\n\n  // TODO(crbug.com/372674229): when swapping to 'provided' instead of 'simulated', all these test traces give\n  // uninteresting results. must get new traces.\n\n  it('estimates savings with Lantern (image LCP)', async () => {\n    const {data, insights} = await processTrace(this, 'lantern/render-blocking/trace.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight =\n        getInsightOrError('RenderBlocking', insights, data.Meta.navigationsByNavigationId.values().next().value);\n\n    assert.deepStrictEqual(insight.metricSavings, {\n      FCP: 0,\n      LCP: 0,\n    } as Trace.Insights.Types.MetricSavings);\n\n    assert.exists(insight.requestIdToWastedMs);\n    const urlToWastedMs = [...insight.requestIdToWastedMs].map(([requestId, wastedMs]) => {\n      const url = insight.renderBlockingRequests.find(r => r.args.data.requestId === requestId)?.args.data.url;\n      return [url, wastedMs];\n    });\n    assert.deepStrictEqual(urlToWastedMs, []);\n  });\n\n  it('estimates savings with Lantern (text LCP)', async () => {\n    const {data, insights} = await processTrace(this, 'lantern/typescript-angular/trace.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight =\n        getInsightOrError('RenderBlocking', insights, data.Meta.navigationsByNavigationId.values().next().value);\n\n    assert.deepStrictEqual(insight.metricSavings, {\n      FCP: 0,\n      LCP: 0,\n    } as Trace.Insights.Types.MetricSavings);\n    assert.exists(insight.requestIdToWastedMs);\n    const urlToWastedMs = [...insight.requestIdToWastedMs].map(([requestId, wastedMs]) => {\n      const url = insight.renderBlockingRequests.find(r => r.args.data.requestId === requestId)?.args.data.url;\n      return [url, wastedMs];\n    });\n    assert.deepStrictEqual(urlToWastedMs, []);\n  });\n});\n"]}