{"version":3,"file":"RenderBlocking.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/RenderBlocking.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport type * as TraceModel from '../trace.js';\n\nexport async function processTrace(testContext: Mocha.Suite|Mocha.Context|null, traceFile: string) {\n  const {traceData, insights} = await TraceLoader.traceEngine(testContext, traceFile);\n  if (!insights) {\n    throw new Error('No insights');\n  }\n\n  return {data: traceData, insights};\n}\n\nfunction getInsight(insights: TraceModel.Insights.Types.TraceInsightData, navigationId: string) {\n  const navInsights = insights.get(navigationId);\n  if (!navInsights) {\n    throw new Error('missing navInsights');\n  }\n  const insight = navInsights.RenderBlocking;\n  if (insight instanceof Error) {\n    throw insight;\n  }\n  return insight;\n}\n\ndescribe('RenderBlockingRequests', function() {\n  it('finds render blocking requests', async () => {\n    const {data, insights} = await processTrace(this, 'load-simple.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight = getInsight(insights, data.Meta.navigationsByNavigationId.keys().next().value);\n\n    assert.strictEqual(insight.renderBlockingRequests.length, 2);\n    assert.deepEqual(insight.renderBlockingRequests.map(r => r.args.data.url), [\n      'https://fonts.googleapis.com/css2?family=Orelega+One&display=swap',\n      'http://localhost:8080/styles.css',\n    ]);\n  });\n\n  it('returns a warning if navigation does not have a first paint event', async () => {\n    const {data, insights} = await processTrace(this, 'user-timings.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight = getInsight(insights, data.Meta.navigationsByNavigationId.keys().next().value);\n\n    assert.strictEqual(insight.renderBlockingRequests.length, 0);\n    assert.strictEqual(insight.warnings?.length, 1);\n    assert.strictEqual(insight.warnings?.[0], 'NO_FP');\n  });\n\n  it('considers only the navigation specified by the context', async () => {\n    const {data, insights} = await processTrace(this, 'multiple-navigations-render-blocking.json.gz');\n    assert.strictEqual(insights.size, 2);\n    const navigations = Array.from(data.Meta.navigationsByNavigationId.values());\n    const insight = getInsight(insights, navigations[0].args.data?.navigationId || '');\n\n    assert(insight.renderBlockingRequests.length > 0, 'no render blocking requests found');\n\n    assert(\n        insight.renderBlockingRequests.every(r => r.args.data.syntheticData.sendStartTime > navigations[0].ts),\n        'a result is not contained by the nav bounds');\n    assert(\n        insight.renderBlockingRequests.every(r => r.args.data.syntheticData.finishTime < navigations[1].ts),\n        'a result is not contained by the nav bounds');\n  });\n\n  it('considers only the frame specified by the context', async () => {\n    const {data, insights} = await processTrace(this, 'render-blocking-in-iframe.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const navigations = Array.from(data.Meta.navigationsByNavigationId.values());\n    const insight = getInsight(insights, navigations[0].args.data?.navigationId || '');\n\n    assert(insight.renderBlockingRequests.length > 0, 'no render blocking requests found');\n\n    assert(\n        insight.renderBlockingRequests.every(r => r.args.data.frame === data.Meta.mainFrameId),\n        'a result is not from the main frame');\n  });\n\n  it('ignores blocking request after first paint', async () => {\n    const {data, insights} = await processTrace(this, 'parser-blocking-after-paint.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight = getInsight(insights, data.Meta.navigationsByNavigationId.keys().next().value);\n\n    assert.strictEqual(insight.renderBlockingRequests.length, 0);\n  });\n\n  it('correctly handles body parser blocking requests', async () => {\n    const {data, insights} = await processTrace(this, 'render-blocking-body.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight = getInsight(insights, data.Meta.navigationsByNavigationId.keys().next().value);\n\n    assert.deepStrictEqual(insight.renderBlockingRequests.map(r => r.args.data.url), [\n      'http://localhost:8080/render-blocking/style.css',\n      'http://localhost:8080/render-blocking/script.js?beforeImage',\n    ]);\n  });\n\n  it('estimates savings with Lantern (image LCP)', async () => {\n    const {data, insights} = await processTrace(this, 'lantern/render-blocking/trace.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight = getInsight(insights, data.Meta.navigationsByNavigationId.keys().next().value);\n\n    assert.deepStrictEqual(insight.metricSavings, {\n      FCP: 2250,\n      LCP: 0,\n    });\n\n    assert.exists(insight.requestIdToWastedMs);\n    const urlToWastedMs = [...insight.requestIdToWastedMs].map(([requestId, wastedMs]) => {\n      const url = insight.renderBlockingRequests.find(r => r.args.data.requestId === requestId)?.args.data.url;\n      return [url, wastedMs];\n    });\n    assert.deepStrictEqual(urlToWastedMs, [\n      ['http://localhost:50049/style.css', 2254],\n      ['http://localhost:50049/script.js', 304],\n    ]);\n  });\n\n  it('estimates savings with Lantern (text LCP)', async () => {\n    const {data, insights} = await processTrace(this, 'lantern/typescript-angular/trace.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight = getInsight(insights, data.Meta.navigationsByNavigationId.keys().next().value);\n\n    assert.deepStrictEqual(insight.metricSavings, {\n      FCP: 13,\n      LCP: 13,\n    });\n    assert.exists(insight.requestIdToWastedMs);\n    const urlToWastedMs = [...insight.requestIdToWastedMs].map(([requestId, wastedMs]) => {\n      const url = insight.renderBlockingRequests.find(r => r.args.data.requestId === requestId)?.args.data.url;\n      return [url, wastedMs];\n    });\n    assert.deepStrictEqual(urlToWastedMs, [\n      ['http://[::]:8000/typescript-angular/node_modules/todomvc-common/base.css', 153],\n      ['http://[::]:8000/typescript-angular/node_modules/todomvc-app-css/index.css', 303],\n      ['http://[::]:8000/typescript-angular/node_modules/todomvc-common/base.js', 303],\n      ['http://[::]:8000/typescript-angular/node_modules/angular/angular.js', 303],\n      ['http://[::]:8000/typescript-angular/js/Application.js', 303],\n    ]);\n  });\n});\n"]}