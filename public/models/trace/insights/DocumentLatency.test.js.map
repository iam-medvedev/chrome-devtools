{"version":3,"file":"DocumentLatency.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/DocumentLatency.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {\n  createContextForNavigation,\n  getFirstOrError,\n  getInsightOrError,\n  processTrace,\n} from '../../../testing/InsightHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Trace from '../trace.js';\nimport * as Types from '../types/types.js';\n\ndescribeWithEnvironment('DocumentLatency', function() {\n  it('reports savings for main document with redirects', async () => {\n    const {data, insights} = await processTrace(this, 'lantern/redirect/trace.json.gz');\n    const insight =\n        getInsightOrError('DocumentLatency', insights, getFirstOrError(data.Meta.navigationsByNavigationId.values()));\n    assert.strictEqual(insight.data?.redirectDuration, 1779);\n    assert.deepEqual(insight.metricSavings, {FCP: 1779, LCP: 1779} as Trace.Insights.Types.MetricSavings);\n  });\n\n  it('reports no savings for server with fast server response time', async () => {\n    const {data, insights} = await processTrace(this, 'lantern/paul/trace.json.gz');\n    const insight =\n        getInsightOrError('DocumentLatency', insights, getFirstOrError(data.Meta.navigationsByNavigationId.values()));\n    assert.strictEqual(insight.data?.serverResponseTime, 43);\n    assert(insight.data?.checklist.serverResponseIsFast.value === true);\n    assert.deepEqual(insight.metricSavings, {FCP: 0, LCP: 0} as Trace.Insights.Types.MetricSavings);\n  });\n\n  it('reports savings for server with slow server response time', async function() {\n    const traceEvents = [...await TraceLoader.rawEvents(this, 'lantern/paul/trace.json.gz')];\n    const processor = Trace.Processor.TraceProcessor.createWithAllHandlers();\n\n    const mainRequestEventIndex = traceEvents.findIndex(e => e.name === 'ResourceReceiveResponse');\n    const mainRequestEvent = structuredClone(traceEvents[mainRequestEventIndex]);\n    assert(Types.Events.isResourceReceiveResponse(mainRequestEvent));\n    assert.strictEqual(mainRequestEvent.args.data.requestId, '1000C0FDC0A75327167272FC7438E999');\n    if (!mainRequestEvent.args.data.timing) {\n      throw new Error('missing timing field');\n    }\n    mainRequestEvent.args.data.timing.receiveHeadersEnd =\n        Types.Timing.Milli(mainRequestEvent.args.data.timing.receiveHeadersEnd + 1000);\n    traceEvents[mainRequestEventIndex] = mainRequestEvent;\n\n    await processor.parse(traceEvents, {isCPUProfile: false, isFreshRecording: true});\n    const data = processor.parsedTrace;\n    if (!data) {\n      throw new Error('missing parsedTrace');\n    }\n\n    const navigation = getFirstOrError(data.Meta.navigationsByNavigationId.values());\n    const context = createContextForNavigation(data, navigation, data.Meta.mainFrameId);\n    const insight = Trace.Insights.Models.DocumentLatency.generateInsight(data, context);\n    assert.strictEqual(insight.data?.serverResponseTime, 1043);\n    assert(insight.data?.checklist.serverResponseIsFast.value === false);\n    assert.deepEqual(insight.metricSavings, {FCP: 943, LCP: 943} as Trace.Insights.Types.MetricSavings);\n  });\n\n  it('reports no compression savings for compressed text', async () => {\n    const {data, insights} = await processTrace(this, 'lantern/paul/trace.json.gz');\n    const insight =\n        getInsightOrError('DocumentLatency', insights, getFirstOrError(data.Meta.navigationsByNavigationId.values()));\n    assert.strictEqual(insight.data?.uncompressedResponseBytes, 0);\n    assert.deepEqual(insight.metricSavings, {FCP: 0, LCP: 0} as Trace.Insights.Types.MetricSavings);\n  });\n\n  it('reports compression savings for uncompressed text', async function() {\n    const traceEvents = [...await TraceLoader.rawEvents(this, 'lantern/paul/trace.json.gz')];\n    const processor = Trace.Processor.TraceProcessor.createWithAllHandlers();\n\n    const mainRequestEventIndex = traceEvents.findIndex(e => e.name === 'ResourceReceiveResponse');\n    const mainRequestEvent = structuredClone(traceEvents[mainRequestEventIndex]);\n    assert(Types.Events.isResourceReceiveResponse(mainRequestEvent));\n    assert.strictEqual(mainRequestEvent.args.data.requestId, '1000C0FDC0A75327167272FC7438E999');\n    // Delete content-encoding header.\n    mainRequestEvent.args.data.headers = mainRequestEvent.args.data.headers?.filter(h => h.name !== 'content-encoding');\n    traceEvents[mainRequestEventIndex] = mainRequestEvent;\n\n    await processor.parse(traceEvents, {isCPUProfile: false, isFreshRecording: true});\n    const data = processor.parsedTrace;\n    if (!data) {\n      throw new Error('missing parsedTrace');\n    }\n\n    const navigation = getFirstOrError(data.Meta.navigationsByNavigationId.values());\n    const context = createContextForNavigation(data, navigation, data.Meta.mainFrameId);\n    const insight = Trace.Insights.Models.DocumentLatency.generateInsight(data, context);\n    assert.strictEqual(insight.data?.uncompressedResponseBytes, 39799);\n    assert.deepEqual(insight.metricSavings, {FCP: 0, LCP: 0} as Trace.Insights.Types.MetricSavings);\n  });\n\n  it('reports savings for main document with many issues, many redirects', async () => {\n    const {data, insights} = await processTrace(this, 'many-redirects.json.gz');\n    const insight =\n        getInsightOrError('DocumentLatency', insights, getFirstOrError(data.Meta.navigationsByNavigationId.values()));\n    assert.strictEqual(insight.data?.redirectDuration, 6059);\n    assert.strictEqual(insight.data?.uncompressedResponseBytes, 111506);\n    assert.strictEqual(insight.data?.serverResponseTime, 2008);\n    assert(insight.data?.checklist.serverResponseIsFast.value === false);\n    assert.deepEqual(insight.metricSavings, {FCP: 7967, LCP: 7967} as Trace.Insights.Types.MetricSavings);\n  });\n});\n"]}