{"version":3,"file":"InteractionToNextPaint.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/InteractionToNextPaint.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,uBAAuB,EAAC,MAAM,wCAAwC,CAAC;AAC/E,OAAO,EAAC,0BAA0B,EAAE,QAAQ,EAAE,YAAY,EAAC,MAAM,oCAAoC,CAAC;AACtG,OAAO,KAAK,KAAK,MAAM,aAAa,CAAC;AAErC,uBAAuB,CAAC,wBAAwB,EAAE;IAChD,MAAM,IAAI,GAAG,CAAC,SAAiB,EAAE,OAAgB,EAAE,cAAuB,EAAE,EAAE;QAC5E,IAAI,cAAc,KAAK,SAAS,EAAE,CAAC;YACjC,cAAc,GAAG,OAAO,CAAC;QAC3B,CAAC;QAED,EAAE,CAAC,WAAW,SAAS,EAAE,EAAE,KAAK,IAAI,EAAE;YACpC,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACnD,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;YAC1E,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,0BAA0B,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACjG,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;gBAC7B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;aAC/B,CAAC;YACF,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,sBAAsB,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAC5F,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,uBAAuB,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,8BAA8B,EAAE,GAAG,EAAE,cAAc,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAAC,oBAAoB,EAAE,SAAS,CAAC,CAAC;IACtC,IAAI,CAAC,kCAAkC,EAAE,MAAM,CAAC,CAAC;IACjD,IAAI,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;IAC3C,IAAI,CAAC,uCAAuC,EAAE,MAAM,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {createContextForNavigation, getFirst, processTrace} from '../../../testing/InsightHelpers.js';\nimport * as Trace from '../trace.js';\n\ndescribeWithEnvironment('InteractionToNextPaint', function() {\n  const test = (traceFile: string, longest?: number, highPercentile?: number) => {\n    if (highPercentile === undefined) {\n      highPercentile = longest;\n    }\n\n    it(`process ${traceFile}`, async () => {\n      const {data} = await processTrace(this, traceFile);\n      const navigation = getFirst(data.Meta.navigationsByNavigationId.values());\n      const context = navigation ? createContextForNavigation(data, navigation, data.Meta.mainFrameId) : {\n        bounds: data.Meta.traceBounds,\n        frameId: data.Meta.mainFrameId,\n      };\n      const insight = Trace.Insights.Models.InteractionToNextPaint.generateInsight(data, context);\n      assert.strictEqual(insight.longestInteractionEvent?.dur, longest);\n      assert.strictEqual(insight.highPercentileInteractionEvent?.dur, highPercentile);\n    });\n  };\n\n  test('lcp-images.json.gz', undefined);\n  test('slow-interaction-keydown.json.gz', 163609);\n  test('nested-interactions.json.gz', 23370);\n  test('slow-interaction-button-click.json.gz', 139238);\n});\n"]}