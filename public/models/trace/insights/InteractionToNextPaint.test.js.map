{"version":3,"file":"InteractionToNextPaint.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/InteractionToNextPaint.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,UAAU,MAAM,aAAa,CAAC;AAE1C,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,WAA2C,EAAE,SAAiB;IAC/F,MAAM,EAAC,SAAS,EAAE,QAAQ,EAAC,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IACpF,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;IACjC,CAAC;IAED,OAAO,EAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAC,CAAC;AACrC,CAAC;AAED,QAAQ,CAAC,wBAAwB,EAAE;IACjC,MAAM,IAAI,GAAG,CAAC,SAAiB,EAAE,OAAgB,EAAE,cAAuB,EAAE,EAAE;QAC5E,IAAI,cAAc,KAAK,SAAS,EAAE,CAAC;YACjC,cAAc,GAAG,OAAO,CAAC;QAC3B,CAAC;QAED,EAAE,CAAC,WAAW,SAAS,EAAE,EAAE,KAAK,IAAI,EAAE;YACpC,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEnD,mGAAmG;YACnG,yFAAyF;YACzF,sGAAsG;YACtG,+BAA+B;YAC/B,MAAM,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,sBAAsB,CAAC,eAAe,CAAC,IAAI,EAAE;gBAC9F,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;gBAC9B,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK;aACtE,CAAC,CAAC;YACH,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,uBAAuB,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,8BAA8B,EAAE,GAAG,EAAE,cAAc,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAAC,oBAAoB,EAAE,SAAS,CAAC,CAAC;IACtC,IAAI,CAAC,kCAAkC,EAAE,MAAM,CAAC,CAAC;IACjD,IAAI,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;IAC3C,IAAI,CAAC,uCAAuC,EAAE,MAAM,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as TraceModel from '../trace.js';\n\nexport async function processTrace(testContext: Mocha.Suite|Mocha.Context|null, traceFile: string) {\n  const {traceData, insights} = await TraceLoader.traceEngine(testContext, traceFile);\n  if (!insights) {\n    throw new Error('No insights');\n  }\n\n  return {data: traceData, insights};\n}\n\ndescribe('InteractionToNextPaint', function() {\n  const test = (traceFile: string, longest?: number, highPercentile?: number) => {\n    if (highPercentile === undefined) {\n      highPercentile = longest;\n    }\n\n    it(`process ${traceFile}`, async () => {\n      const {data} = await processTrace(this, traceFile);\n\n      // TODO(crbug.com/313905799): The traces don't all have navigations, and currently #computeInsights\n      // doesn't account for analyzing stuff outside a navigation bound. So instead of this ...\n      //      const insight = getInsight(insights, data.Meta.navigationsByNavigationId.keys().next().value);\n      // we manually run the insight.\n      const insight = TraceModel.Insights.InsightRunners.InteractionToNextPaint.generateInsight(data, {\n        frameId: data.Meta.mainFrameId,\n        navigationId: data.Meta.navigationsByNavigationId.keys().next().value,\n      });\n      assert.strictEqual(insight.longestInteractionEvent?.dur, longest);\n      assert.strictEqual(insight.highPercentileInteractionEvent?.dur, highPercentile);\n    });\n  };\n\n  test('lcp-images.json.gz', undefined);\n  test('slow-interaction-keydown.json.gz', 163609);\n  test('nested-interactions.json.gz', 23370);\n  test('slow-interaction-button-click.json.gz', 139238);\n});\n"]}