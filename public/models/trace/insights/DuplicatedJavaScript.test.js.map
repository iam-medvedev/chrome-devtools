{"version":3,"file":"DuplicatedJavaScript.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/DuplicatedJavaScript.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,uBAAuB,EAAC,MAAM,wCAAwC,CAAC;AAC/E,OAAO,EAAC,eAAe,EAAE,iBAAiB,EAAE,YAAY,EAAC,MAAM,oCAAoC,CAAC;AAGpG,uBAAuB,CAAC,sBAAsB,EAAE;IAC9C,EAAE,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;QACrB,MAAM,EAAC,IAAI,EAAE,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;QACrE,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACrC,MAAM,OAAO,GAAG,iBAAiB,CAC7B,sBAAsB,EAAE,QAAQ,EAAE,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAErG,MAAM,WAAW,GAAG,OAAO,CAAC,+BAA+B,CAAC;QAC5D,MAAM,OAAO,GAAG,MAAM,CAAC,WAAW,CAC9B,CAAC,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,uBAAuB,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE;YACnG,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,cAAc,EAAC,CAAC,CAAC,CAAC,CAAC;QAChG,CAAC,CAAC,CAAC,CAAC;QACR,MAAM,IAAI,GAAG,iDAAiD,CAAC;QAC/D,MAAM,IAAI,GAAG,iDAAiD,CAAC;QAC/D,MAAM,IAAI,GAAG,iDAAiD,CAAC;QAC/D,MAAM,IAAI,GAAG,iDAAiD,CAAC;QAE/D,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE;YACxB,2BAA2B,EAAE;gBAC3B,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAC;gBACjC,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAC;gBACjC,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAC;gBACjC,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAC;aAClC;YACD,gCAAgC,EAAE;gBAChC,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAC;gBAChC,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAC;gBAChC,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAC;gBAChC,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAC;aACjC;YACD,0BAA0B,EAAE;gBAC1B,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAC;gBAChC,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAC;gBAChC,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAC;gBAChC,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAC;aACjC;SACF,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,EAAE,EAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAuC,CAAC,CAAC;IACtG,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {getFirstOrError, getInsightOrError, processTrace} from '../../../testing/InsightHelpers.js';\nimport type * as Trace from '../trace.js';\n\ndescribeWithEnvironment('DuplicatedJavaScript', function() {\n  it('works', async () => {\n    const {data, insights} = await processTrace(this, 'dupe-js.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight = getInsightOrError(\n        'DuplicatedJavaScript', insights, getFirstOrError(data.Meta.navigationsByNavigationId.values()));\n\n    const duplication = insight.duplicationGroupedByNodeModules;\n    const results = Object.fromEntries(\n        [...duplication.entries()].filter(v => v[1].estimatedDuplicateBytes > 1000 * 30).map(([key, data]) => {\n          return [key, data.duplicates.map(v => ({url: v.script.url, transferSize: v.attributedSize}))];\n        }));\n    const url1 = 'https://dupe-modules-lh-2.surge.sh/bundle.js?v1';\n    const url2 = 'https://dupe-modules-lh-2.surge.sh/bundle.js?v2';\n    const url3 = 'https://dupe-modules-lh-2.surge.sh/bundle.js?v3';\n    const url4 = 'https://dupe-modules-lh-2.surge.sh/bundle.js?v4';\n\n    assert.deepEqual(results, {\n      'node_modules/filestack-js': [\n        {url: url1, transferSize: 115260},\n        {url: url3, transferSize: 115260},\n        {url: url4, transferSize: 115260},\n        {url: url2, transferSize: 115259},\n      ],\n      'node_modules/@headlessui/react': [\n        {url: url1, transferSize: 15341},\n        {url: url2, transferSize: 15341},\n        {url: url3, transferSize: 15341},\n        {url: url4, transferSize: 15341},\n      ],\n      'node_modules/react-query': [\n        {url: url1, transferSize: 10992},\n        {url: url2, transferSize: 10992},\n        {url: url3, transferSize: 10992},\n        {url: url4, transferSize: 10992},\n      ],\n    });\n\n    assert.deepEqual(insight.metricSavings, {FCP: 100, LCP: 100} as Trace.Insights.Types.MetricSavings);\n  });\n});\n"]}