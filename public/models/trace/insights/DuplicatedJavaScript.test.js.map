{"version":3,"file":"DuplicatedJavaScript.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/DuplicatedJavaScript.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {getFirstOrError, getInsightOrError, processTrace} from '../../../testing/InsightHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Trace from '../trace.js';\n\ndescribeWithEnvironment('DuplicatedJavaScript', function() {\n  it('works (external source maps)', async () => {\n    const {data, insights} = await processTrace(this, 'dupe-js.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight = getInsightOrError(\n        'DuplicatedJavaScript', insights, getFirstOrError(data.Meta.navigationsByNavigationId.values()));\n\n    const duplication = insight.duplicationGroupedByNodeModules;\n    const results = Object.fromEntries(\n        [...duplication.entries()].filter(v => v[1].estimatedDuplicateBytes > 1000 * 30).map(([key, data]) => {\n          return [key, data.duplicates.map(v => ({url: v.script.url, transferSize: v.attributedSize}))];\n        }));\n    const url1 = 'https://dupe-modules-lh-2.surge.sh/bundle.js?v1';\n    const url2 = 'https://dupe-modules-lh-2.surge.sh/bundle.js?v2';\n    const url3 = 'https://dupe-modules-lh-2.surge.sh/bundle.js?v3';\n    const url4 = 'https://dupe-modules-lh-2.surge.sh/bundle.js?v4';\n\n    assert.deepEqual(results, {\n      'node_modules/filestack-js': [\n        {url: url1, transferSize: 115260},\n        {url: url3, transferSize: 115260},\n        {url: url4, transferSize: 115260},\n        {url: url2, transferSize: 115259},\n      ],\n      'node_modules/@headlessui/react': [\n        {url: url1, transferSize: 15341},\n        {url: url2, transferSize: 15341},\n        {url: url3, transferSize: 15341},\n        {url: url4, transferSize: 15341},\n      ],\n      'node_modules/react-query': [\n        {url: url1, transferSize: 10992},\n        {url: url2, transferSize: 10992},\n        {url: url3, transferSize: 10992},\n        {url: url4, transferSize: 10992},\n      ],\n    });\n\n    assert.deepEqual(insight.metricSavings, {FCP: 100, LCP: 100} as Trace.Insights.Types.MetricSavings);\n  });\n\n  function assertInlineMapsTestCase(\n      insight: Trace.Insights.Models.DuplicatedJavaScript.DuplicatedJavaScriptInsightModel): void {\n    const duplication = insight.duplicationGroupedByNodeModules;\n    const results = Object.fromEntries(\n        [...duplication.entries()].filter(v => v[1].estimatedDuplicateBytes > 1000 * 25).map(([key, data]) => {\n          return [key, data.duplicates.map(v => ({url: v.script.url, transferSize: v.attributedSize}))];\n        }));\n    const url1 = 'https://dupe-modules-lh-inline-data.surge.sh/bundle-smaller.js?v1';\n    const url2 = 'https://dupe-modules-lh-inline-data.surge.sh/bundle-smaller.js?v2';\n    const url3 = 'https://dupe-modules-lh-inline-data.surge.sh/bundle-smaller.js?v3';\n    const url4 = 'https://dupe-modules-lh-inline-data.surge.sh/bundle-smaller.js?v4';\n\n    assert.deepEqual(results, {\n      'node_modules/filestack-js': [\n        {url: url1, transferSize: 104143},\n        {url: url2, transferSize: 104143},\n        {url: url3, transferSize: 104143},\n        {url: url4, transferSize: 104143},\n      ],\n      'node_modules/@headlessui/react': [\n        {url: url1, transferSize: 13863},\n        {url: url2, transferSize: 13863},\n        {url: url3, transferSize: 13863},\n        {url: url4, transferSize: 13863},\n      ],\n      'node_modules/react-query': [\n        {url: url1, transferSize: 9933},\n        {url: url2, transferSize: 9933},\n        {url: url3, transferSize: 9933},\n        {url: url4, transferSize: 9933},\n      ],\n    });\n\n    assert.deepEqual(insight.metricSavings, {FCP: 50, LCP: 50} as Trace.Insights.Types.MetricSavings);\n  }\n\n  it('works (inline source maps in trace events)', async function() {\n    const {data, insights} = await processTrace(this, 'dupe-js-inline-maps.json.gz');\n    assert.strictEqual(insights.size, 1);\n    const insight = getInsightOrError(\n        'DuplicatedJavaScript', insights, getFirstOrError(data.Meta.navigationsByNavigationId.values()));\n\n    assertInlineMapsTestCase(insight);\n  });\n\n  it('works (inline source maps in metadata)', async function() {\n    // Load this trace in a way that mutating it is safe.\n    const fileContents = await TraceLoader.loadTraceFileFromURL(\n        new URL('../../../panels/timeline/fixtures/traces/dupe-js-inline-maps.json.gz', import.meta.url));\n\n    // Remove the source map data urls from the trace, and move to metadata.\n    // This reflects how Chromium will elide data source map urls.\n    // The original trace here was recorded at a time where sourceMapUrl could be a\n    // large data url.\n    for (const event of fileContents.traceEvents) {\n      if (Trace.Types.Events.isV8SourceRundownEvent(event)) {\n        const {sourceMapUrl, url} = event.args.data;\n        if (sourceMapUrl?.startsWith('data:') && url) {\n          const sourceMap = await (await fetch(sourceMapUrl)).json();\n          fileContents.metadata.sourceMaps?.push({url, sourceMap});\n          event.args.data.sourceMapUrl = undefined;\n          event.args.data.sourceMapUrlElided = true;\n        }\n      }\n    }\n\n    const {parsedTrace} = await TraceLoader.executeTraceEngineOnFileContents(fileContents);\n    const {data, insights} = parsedTrace;\n    if (!insights) {\n      throw new Error('invalid insights');\n    }\n\n    assert.strictEqual(insights.size, 1);\n    const insight = getInsightOrError(\n        'DuplicatedJavaScript', insights, getFirstOrError(data.Meta.navigationsByNavigationId.values()));\n    assertInlineMapsTestCase(insight);\n  });\n});\n"]}