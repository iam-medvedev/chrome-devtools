{"version":3,"file":"NetworkDependencyTree.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/NetworkDependencyTree.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,uBAAuB,EAAC,MAAM,wCAAwC,CAAC;AAC/E,OAAO,EAAC,eAAe,EAAE,iBAAiB,EAAE,YAAY,EAAC,MAAM,oCAAoC,CAAC;AACpG,OAAO,KAAK,KAAK,MAAM,aAAa,CAAC;AAErC,uBAAuB,CAAC,uBAAuB,EAAE;IAC/C,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,EAAC,IAAI,EAAE,QAAQ,EAAC,GAAG,MAAM,YAAY,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;QACjF,MAAM,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;QAC/E,MAAM,OAAO,GAAG,iBAAiB,CAAC,uBAAuB,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAE/E,+CAA+C;QAC/C,kDAAkD;QAClD,IAAI;QACJ,8CAA8C;QAC9C,8CAA8C;QAC9C,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAEtC,MAAM,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,8CAA8C,CAAC,CAAC;QAC/F,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5F,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAElC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QACvD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,2CAA2C,CAAC,CAAC;QAC9F,MAAM,CAAC,WAAW,CACd,MAAM,CAAC,sBAAsB,EAC7B,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACxF,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,0CAA0C,CAAC,CAAC;QAC7F,MAAM,CAAC,WAAW,CACd,MAAM,CAAC,sBAAsB,EAC7B,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACxF,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAEpC,kDAAkD;QAClD,MAAM,CAAC,WAAW,CACd,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3G,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {getFirstOrError, getInsightOrError, processTrace} from '../../../testing/InsightHelpers.js';\nimport * as Trace from '../trace.js';\n\ndescribeWithEnvironment('NetworkDependencyTree', function() {\n  it('calculates network dependency tree', async () => {\n    const {data, insights} = await processTrace(this, 'lcp-multiple-frames.json.gz');\n    const firstNav = getFirstOrError(data.Meta.navigationsByNavigationId.values());\n    const insight = getInsightOrError('NetworkDependencyTree', insights, firstNav);\n\n    // The network dependency tree in this trace is\n    // | .../index.html (ts:566777570990, dur:5005590)\n    // |\n    // | | .../app.css (ts:566782573909, dur:7205)\n    // | | .../app.js (ts:566782574106, dur:11790)\n    assert.lengthOf(insight.rootNodes, 1);\n\n    const root = insight.rootNodes[0];\n    assert.strictEqual(root.request.args.data.url, 'http://localhost:8787/lcp-iframes/index.html');\n    assert.strictEqual(root.timeFromInitialRequest, Trace.Types.Timing.Micro(root.request.dur));\n    assert.lengthOf(root.children, 2);\n\n    const [child0, child1] = insight.rootNodes[0].children;\n    assert.strictEqual(child0.request.args.data.url, 'http://localhost:8787/lcp-iframes/app.css');\n    assert.strictEqual(\n        child0.timeFromInitialRequest,\n        Trace.Types.Timing.Micro(child0.request.ts + child0.request.dur - root.request.ts));\n    assert.lengthOf(child0.children, 0);\n    assert.strictEqual(child1.request.args.data.url, 'http://localhost:8787/lcp-iframes/app.js');\n    assert.strictEqual(\n        child1.timeFromInitialRequest,\n        Trace.Types.Timing.Micro(child1.request.ts + child1.request.dur - root.request.ts));\n    assert.lengthOf(child1.children, 0);\n\n    // The chain |index.html -> app.js| is the longest\n    assert.strictEqual(\n        insight.maxTime, Trace.Types.Timing.Micro(child1.request.ts + child1.request.dur - root.request.ts));\n  });\n});\n"]}