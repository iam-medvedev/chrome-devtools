{"version":3,"file":"Name.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/trace/Name.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as CPUProfile from '../../models/cpu_profile/cpu_profile.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {allThreadEntriesInTrace, getMainThread} from '../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\n\nimport * as Trace from './trace.js';\n\ndescribeWithEnvironment('Name', () => {\n  it('uses the URL for the name of a network request', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const request = parsedTrace.data.NetworkRequests.byTime.at(0);\n    assert.isOk(request);\n    const name = Trace.Name.forEntry(request);\n    assert.strictEqual(name, 'web.dev/ (web.dev)');\n  });\n\n  it('uses \"Frame\" for timeline frames', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const frame = parsedTrace.data.Frames.frames.at(0);\n    assert.isOk(frame);\n    const name = Trace.Name.forEntry(frame);\n    assert.strictEqual(name, 'Frame');\n  });\n\n  it('adds the event type for EventDispatch events', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'one-second-interaction.json.gz');\n    const clickEvent = allThreadEntriesInTrace(parsedTrace).find(event => {\n      return Trace.Types.Events.isDispatch(event) && event.args.data.type === 'click';\n    });\n    assert.isOk(clickEvent);\n    const name = Trace.Name.forEntry(clickEvent);\n    assert.strictEqual(name, 'Event: click');\n  });\n\n  it('correctly titles layout shifts', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'cls-single-frame.json.gz');\n    const shifts = parsedTrace.data.LayoutShifts.clusters.flatMap(c => c.events);\n    const title = Trace.Name.forEntry(shifts[0]);\n    assert.strictEqual(title, 'Layout shift');\n  });\n\n  it('correctly titles animation events', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'animation.json.gz');\n    const animation = parsedTrace.data.Animations.animations.at(0);\n    assert.isOk(animation);\n    const title = Trace.Name.forEntry(animation);\n    assert.strictEqual(title, 'Animation');\n  });\n\n  it('uses the names defined in the entry styles', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n    const entry = allThreadEntriesInTrace(parsedTrace).find(e => e.name === Trace.Types.Events.Name.RUN_TASK);\n    assert.isOk(entry);\n\n    const name = Trace.Name.forEntry(entry, parsedTrace);\n    assert.strictEqual(name, 'Task');\n  });\n\n  it('returns the name and URL for a WebSocketCreate event', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'network-websocket-messages.json.gz');\n\n    let createEvent: Trace.Types.Events.WebSocketCreate|null = null;\n    for (const websocket of parsedTrace.data.NetworkRequests.webSocket) {\n      for (const event of websocket.events) {\n        if (Trace.Types.Events.isWebSocketCreate(event)) {\n          createEvent = event;\n          break;\n        }\n      }\n    }\n    assert.isOk(createEvent);\n    const name = Trace.Name.forEntry(createEvent, parsedTrace);\n    assert.strictEqual(name, 'WebSocket opened: wss://echo.websocket.org/');\n  });\n\n  it('returns a custom name for WebSocket destroy events', async function() {\n    const fakeDestroyEvent = {\n      name: Trace.Types.Events.Name.WEB_SOCKET_DESTROY,\n    } as unknown as Trace.Types.Events.WebSocketDestroy;\n\n    const name = Trace.Name.forEntry(fakeDestroyEvent);\n    assert.strictEqual(name, 'WebSocket closed');\n  });\n\n  it('returns a custom name for pointer interactions', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'slow-interaction-button-click.json.gz');\n    const firstInteraction = parsedTrace.data.UserInteractions.interactionEvents.at(0);\n    assert.isOk(firstInteraction);\n    const name = Trace.Name.forEntry(firstInteraction);\n    assert.strictEqual(name, 'Pointer');\n  });\n\n  it('returns a custom name for keyboard interactions', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'slow-interaction-keydown.json.gz');\n    const keydownInteraction = parsedTrace.data.UserInteractions.interactionEvents.find(e => e.type === 'keydown');\n    assert.isOk(keydownInteraction);\n    const name = Trace.Name.forEntry(keydownInteraction);\n    assert.strictEqual(name, 'Keyboard');\n  });\n\n  it('returns \"other\" for unknown interaction event types', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'slow-interaction-button-click.json.gz');\n    // Copy the event so we do not modify the actual trace data, and fake its\n    // interaction type to be unexpected.\n    const firstInteraction = {...parsedTrace.data.UserInteractions.interactionEvents[0]};\n    firstInteraction.type = 'unknown';\n\n    const name = Trace.Name.forEntry(firstInteraction);\n    assert.strictEqual(name, 'Other');\n  });\n\n  describe('profile calls', () => {\n    it('uses the profile name for a ProfileCall if it has been set', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'react-hello-world.json.gz');\n      const {entry, profileNode} = getProfileEventAndNodeForReactTrace(parsedTrace);\n      // Store and then reset this: we are doing this to test the fallback to\n      // the entry callFrame.functionName property. After the assertion we\n      // reset this to avoid impacting other tests.\n      const originalProfileNodeName = profileNode.functionName;\n      profileNode.setFunctionName('testing-profile-name');\n      const name = Trace.Name.forEntry(entry, parsedTrace);\n      assert.strictEqual(name, 'testing-profile-name');\n      profileNode.setFunctionName(originalProfileNodeName);\n    });\n\n    it('falls back to the call frame name if a specific name has not been set', async function() {\n      const parsedTrace = await TraceLoader.traceEngine(this, 'react-hello-world.json.gz');\n      const {entry, profileNode} = getProfileEventAndNodeForReactTrace(parsedTrace);\n      // Store and then reset this: we are doing this to test the fallback to\n      // the entry callFrame.functionName property. After the assertion we\n      // reset this to avoid impacting other tests.\n      const originalProfileNodeName = profileNode.functionName;\n      profileNode.setFunctionName('');\n      const name = Trace.Name.forEntry(entry, parsedTrace);\n      assert.strictEqual(name, 'performConcurrentWorkOnRoot');\n      profileNode.setFunctionName(originalProfileNodeName);\n    });\n\n    // Finds a particular event from the react-hello-world trace which is used for our test example.\n    function getProfileEventAndNodeForReactTrace(parsedTrace: Trace.TraceModel.ParsedTrace): {\n      entry: Trace.Types.Events.SyntheticProfileCall,\n      profileNode: CPUProfile.ProfileTreeModel.ProfileNode,\n    } {\n      const mainThread = getMainThread(parsedTrace.data.Renderer);\n      let foundNode: CPUProfile.ProfileTreeModel.ProfileNode|null = null;\n      let foundEntry: Trace.Types.Events.SyntheticProfileCall|null = null;\n\n      for (const entry of mainThread.entries) {\n        if (Trace.Types.Events.isProfileCall(entry) && entry.callFrame.functionName === 'performConcurrentWorkOnRoot') {\n          const profile = parsedTrace.data.Samples.profilesInProcess.get(entry.pid)?.get(entry.tid);\n          const node = profile?.parsedProfile.nodeById(entry.nodeId);\n          if (node) {\n            foundNode = node;\n          }\n          foundEntry = entry;\n          break;\n        }\n      }\n      if (!foundNode) {\n        throw new Error('Could not find CPU Profile node.');\n      }\n      if (!foundEntry) {\n        throw new Error('Could not find expected entry.');\n      }\n\n      return {\n        entry: foundEntry,\n        profileNode: foundNode,\n      };\n    }\n  });\n});\n"]}