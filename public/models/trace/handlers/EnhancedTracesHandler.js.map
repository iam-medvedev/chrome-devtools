{"version":3,"file":"EnhancedTracesHandler.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/EnhancedTracesHandler.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,KAAK,MAAM,mBAAmB,CAAC;AAI3C,MAAM,CAAC,MAAM,qBAAqB,GAAW,CAAC,CAAC;AAgD/C,IAAI,YAAY,qCAA6B,CAAC;AAE9C,MAAM,mBAAmB,GAAgD,EAAE,CAAC;AAC5E,MAAM,iBAAiB,GAAwB,IAAI,GAAG,EAAkB,CAAC;AACzE,MAAM,oBAAoB,GAAwB,IAAI,GAAG,EAAkB,CAAC;AAC5E,MAAM,yBAAyB,GAA0B,IAAI,GAAG,EAAoB,CAAC;AACrF,MAAM,oBAAoB,GAAwB,IAAI,GAAG,EAAkB,CAAC;AAC5E,MAAM,OAAO,GAAa,EAAE,CAAC;AAC7B,MAAM,iBAAiB,GAAuB,EAAE,CAAC;AACjD,MAAM,OAAO,GAAa,EAAE,CAAC;AAE7B,SAAS,kBAAkB,CAAC,OAAe,EAAE,QAAgB;IAC3D,OAAO,QAAQ,GAAG,GAAG,GAAG,OAAO,CAAC;AAClC,CAAC;AAED,MAAM,UAAU,UAAU;IACxB,IAAI,YAAY,uCAA+B,EAAE,CAAC;QAChD,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;IAC3D,CAAC;IAED,YAAY,mCAA2B,CAAC;AAC1C,CAAC;AAED,MAAM,UAAU,KAAK;IACnB,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC;IAC/B,iBAAiB,CAAC,KAAK,EAAE,CAAC;IAC1B,oBAAoB,CAAC,KAAK,EAAE,CAAC;IAC7B,yBAAyB,CAAC,KAAK,EAAE,CAAC;IAClC,oBAAoB,CAAC,KAAK,EAAE,CAAC;IAC7B,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IACnB,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7B,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IACnB,YAAY,qCAA6B,CAAC;AAC5C,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,KAAuC;IACjE,IAAI,YAAY,qCAA6B,EAAE,CAAC;QAC9C,MAAM,IAAI,KAAK,CAAC,iEAAiE,CAAC,CAAC;IACrF,CAAC;IACD,IAAI,KAAK,CAAC,WAAW,CAAC,yBAAyB,CAAC,KAAK,CAAC,EAAE,CAAC;QACvD,sCAAsC;QACtC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;QAC9B,iBAAiB,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACvF,aAAa;QACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YAC5D,OAAO,CAAC,IAAI,CAAC;gBACX,QAAQ,EAAE,IAAI,CAAC,KAAK;gBACpB,IAAI,EAAE,IAAI,CAAC,SAAS;gBACpB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,GAAG,EAAE,KAAK,CAAC,GAAG;gBACd,GAAG,EAAE,IAAI,CAAC,GAAG;aACd,CAAC,CAAC;QACL,CAAC;QACD,2FAA2F;QAC3F,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,gBAAgB,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;YAC/F,iBAAiB,CAAC,IAAI,CAAC;gBACrB,EAAE,EAAE,CAAC,CAAC;gBACN,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,OAAO,EAAE;oBACP,OAAO,EAAE,IAAI,CAAC,KAAK;oBACnB,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,IAAI,EAAE,IAAI,CAAC,WAAW;iBACvB;gBACD,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;SAAM,IAAI,KAAK,CAAC,WAAW,CAAC,yBAAyB,CAAC,KAAK,CAAC,EAAE,CAAC;QAC9D,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;QAC7B,aAAa;QACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YAClG,OAAO,CAAC,IAAI,CAAC;gBACX,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;gBAC3C,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;aAChC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;SAAM,IAAI,KAAK,CAAC,WAAW,CAAC,+BAA+B,CAAC,KAAK,CAAC,EAAE,CAAC;QACpE,kDAAkD;QAClD,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;QAC7B,MAAM,eAAe,GAAG,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxE,IAAI,YAAY,IAAI,IAAI,IAAI,YAAY,IAAI,IAAI,EAAE,CAAC;YACjD,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC;gBACpD,yBAAyB,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAa,CAAC,CAAC;YAClG,CAAC;YACD,MAAM,cAAc,GAAG,yBAAyB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YACtE,IAAI,cAAc,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;gBACtC,cAAc,CAAC,IAAI,CAAC,UAAoB,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;YAC9D,CAAC;QACH,CAAC;aAAM,CAAC;YACN,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,oBAAoB,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7D,CAAC;YACD,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;gBAChB,oBAAoB,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACzD,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,QAAQ;IAC5B,IAAI,YAAY,qCAA6B,EAAE,CAAC;QAC9C,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;IACtF,CAAC;IACD,gCAAgC;IAChC,MAAM,6BAA6B,GAAwB,IAAI,GAAG,EAAkB,CAAC;IACrF,mBAAmB,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE;QAC/C,MAAM,IAAI,GAAG,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1C,MAAM,SAAS,GAAG,iBAAiB,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzF,IAAI,SAAS,EAAE,CAAC;YACd,6BAA6B,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACxE,CAAC;IACH,CAAC,CAAC,CAAC;IACH,iBAAiB,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;QAC3C,IAAI,gBAAgB,CAAC,SAAS,EAAE,CAAC;YAC/B,MAAM,EAAE,GAAG,6BAA6B,CAAC,GAAG,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YACzE,IAAI,EAAE,EAAE,CAAC;gBACP,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;YAC3B,CAAC;QACH,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,yCAAyC;IACzC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACvB,MAAM,eAAe,GAAG,kBAAkB,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC5E,IAAI,oBAAoB,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC;YAC9C,MAAM,CAAC,UAAU,GAAG,oBAAoB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC9D,MAAM,CAAC,MAAM,GAAG,oBAAoB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC5D,CAAC;aAAM,IAAI,yBAAyB,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC;YAC1D,MAAM,eAAe,GAAG,yBAAyB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YACvE,IAAI,eAAe,EAAE,CAAC;gBACpB,MAAM,CAAC,UAAU,GAAG,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC7C,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;YAC3C,CAAC;QACH,CAAC;QACD,sBAAsB;QACtB,MAAM,CAAC,OAAO;YACV,iBAAiB;iBACZ,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,MAAM,CAAC,kBAAkB,IAAI,OAAO,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO,CAAC;gBAChG,EAAE,OAAO,CAAC;IACpB,CAAC,CAAC,CAAC;IACH,YAAY,iCAAyB,CAAC;AACxC,CAAC;AAED,MAAM,UAAU,IAAI;IAClB,IAAI,YAAY,mCAA2B,EAAE,CAAC;QAC5C,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;IAC9D,CAAC;IAED,OAAO;QACL,OAAO,EAAE,OAAO;QAChB,iBAAiB,EAAE,iBAAiB;QACpC,OAAO,EAAE,OAAO;KACjB,CAAC;AACJ,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Types from '../types/types.js';\n\nimport {HandlerState} from './types.js';\n\nexport const EnhancedTracesVersion: number = 1;\n\nexport interface Script {\n  scriptId: number;\n  isolate: string;\n  url: string;\n  executionContextId: number;\n  startLine: number;\n  startColumn: number;\n  endLine: number;\n  endColumn: number;\n  hash: string;\n  isModule?: boolean;\n  hasSourceUrl?: boolean;\n  sourceMapUrl?: string;\n  length?: number;\n  sourceText?: string;\n  auxData?: ExecutionContextAuxData;\n}\n\nexport interface ExecutionContextAuxData {\n  frameId?: string;\n  isDefault?: boolean;\n  type?: string;\n}\n\nexport interface ExecutionContext {\n  id: number;\n  origin: string;\n  v8Context?: string;\n  auxData?: ExecutionContextAuxData;\n  isolate?: string;\n}\n\nexport interface Target {\n  targetId: string;\n  type: string;\n  url: string;\n  pid?: number;\n  isolate?: string;\n}\n\nexport interface EnhancedTracesData {\n  targets: Target[];\n  executionContexts: ExecutionContext[];\n  scripts: Script[];\n}\n\nlet handlerState = HandlerState.UNINITIALIZED;\n\nconst scriptRundownEvents: Types.TraceEvents.TraceEventScriptRundown[] = [];\nconst scriptToV8Context: Map<string, string> = new Map<string, string>();\nconst scriptToScriptSource: Map<string, string> = new Map<string, string>();\nconst largeScriptToScriptSource: Map<string, string[]> = new Map<string, string[]>();\nconst scriptToSourceLength: Map<string, number> = new Map<string, number>();\nconst targets: Target[] = [];\nconst executionContexts: ExecutionContext[] = [];\nconst scripts: Script[] = [];\n\nfunction getScriptIsolateId(isolate: string, scriptId: number): string {\n  return scriptId + '@' + isolate;\n}\n\nexport function initialize(): void {\n  if (handlerState !== HandlerState.UNINITIALIZED) {\n    throw new Error('Enhanced Traces Handler was not reset');\n  }\n\n  handlerState = HandlerState.INITIALIZED;\n}\n\nexport function reset(): void {\n  scriptRundownEvents.length = 0;\n  scriptToV8Context.clear();\n  scriptToScriptSource.clear();\n  largeScriptToScriptSource.clear();\n  scriptToSourceLength.clear();\n  targets.length = 0;\n  executionContexts.length = 0;\n  scripts.length = 0;\n  handlerState = HandlerState.UNINITIALIZED;\n}\n\nexport function handleEvent(event: Types.TraceEvents.TraceEventData): void {\n  if (handlerState !== HandlerState.INITIALIZED) {\n    throw new Error('Enhanced Traces Handler is not initialized while handling event');\n  }\n  if (Types.TraceEvents.isTraceEventTargetRundown(event)) {\n    // Set up script to v8 context mapping\n    const data = event.args?.data;\n    scriptToV8Context.set(getScriptIsolateId(data.isolate, data.scriptId), data.v8context);\n    // Add target\n    if (!targets.find(target => target.targetId === data.frame)) {\n      targets.push({\n        targetId: data.frame,\n        type: data.frameType,\n        isolate: data.isolate,\n        pid: event.pid,\n        url: data.url,\n      });\n    }\n    // Add execution context, need to put back execution context id with info from other traces\n    if (!executionContexts.find(executionContext => executionContext.v8Context === data.v8context)) {\n      executionContexts.push({\n        id: -1,\n        origin: data.origin,\n        v8Context: data.v8context,\n        auxData: {\n          frameId: data.frame,\n          isDefault: data.isDefault,\n          type: data.contextType,\n        },\n        isolate: data.isolate,\n      });\n    }\n  } else if (Types.TraceEvents.isTraceEventScriptRundown(event)) {\n    scriptRundownEvents.push(event);\n    const data = event.args.data;\n    // Add script\n    if (!scripts.find(script => script.scriptId === data.scriptId && script.isolate === data.isolate)) {\n      scripts.push({\n        scriptId: data.scriptId,\n        isolate: data.isolate,\n        executionContextId: data.executionContextId,\n        startLine: data.startLine,\n        startColumn: data.startColumn,\n        endLine: data.endLine,\n        endColumn: data.endColumn,\n        hash: data.hash,\n        isModule: data.isModule,\n        url: data.url,\n        hasSourceUrl: data.hasSourceUrl,\n        sourceMapUrl: data.sourceMapUrl,\n      });\n    }\n  } else if (Types.TraceEvents.isTraceEventScriptRundownSource(event)) {\n    // Set up script to source text and length mapping\n    const data = event.args.data;\n    const scriptIsolateId = getScriptIsolateId(data.isolate, data.scriptId);\n    if ('splitIndex' in data && 'splitCount' in data) {\n      if (!largeScriptToScriptSource.has(scriptIsolateId)) {\n        largeScriptToScriptSource.set(scriptIsolateId, new Array(data.splitCount).fill('') as string[]);\n      }\n      const splittedSource = largeScriptToScriptSource.get(scriptIsolateId);\n      if (splittedSource && data.sourceText) {\n        splittedSource[data.splitIndex as number] = data.sourceText;\n      }\n    } else {\n      if (data.sourceText) {\n        scriptToScriptSource.set(scriptIsolateId, data.sourceText);\n      }\n      if (data.length) {\n        scriptToSourceLength.set(scriptIsolateId, data.length);\n      }\n    }\n  }\n}\n\nexport async function finalize(): Promise<void> {\n  if (handlerState !== HandlerState.INITIALIZED) {\n    throw new Error('Enhanced Traces Handler is not initialized while being finalized');\n  }\n  // Put back execution context id\n  const v8ContextToExecutionContextId: Map<string, number> = new Map<string, number>();\n  scriptRundownEvents.forEach(scriptRundownEvent => {\n    const data = scriptRundownEvent.args.data;\n    const v8Context = scriptToV8Context.get(getScriptIsolateId(data.isolate, data.scriptId));\n    if (v8Context) {\n      v8ContextToExecutionContextId.set(v8Context, data.executionContextId);\n    }\n  });\n  executionContexts.forEach(executionContext => {\n    if (executionContext.v8Context) {\n      const id = v8ContextToExecutionContextId.get(executionContext.v8Context);\n      if (id) {\n        executionContext.id = id;\n      }\n    }\n  });\n\n  // Put back script source text and length\n  scripts.forEach(script => {\n    const scriptIsolateId = getScriptIsolateId(script.isolate, script.scriptId);\n    if (scriptToScriptSource.has(scriptIsolateId)) {\n      script.sourceText = scriptToScriptSource.get(scriptIsolateId);\n      script.length = scriptToSourceLength.get(scriptIsolateId);\n    } else if (largeScriptToScriptSource.has(scriptIsolateId)) {\n      const splittedSources = largeScriptToScriptSource.get(scriptIsolateId);\n      if (splittedSources) {\n        script.sourceText = splittedSources.join('');\n        script.length = script.sourceText.length;\n      }\n    }\n    // put in the aux data\n    script.auxData =\n        executionContexts\n            .find(context => context.id === script.executionContextId && context.isolate === script.isolate)\n            ?.auxData;\n  });\n  handlerState = HandlerState.FINALIZED;\n}\n\nexport function data(): EnhancedTracesData {\n  if (handlerState !== HandlerState.FINALIZED) {\n    throw new Error('Enhanced Traces Handler is not finalized');\n  }\n\n  return {\n    targets: targets,\n    executionContexts: executionContexts,\n    scripts: scripts,\n  };\n}\n"]}