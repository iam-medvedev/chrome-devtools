{"version":3,"file":"ScriptsHandler.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/ScriptsHandler.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as Types from '../types/types.js';\n\nimport {data as metaHandlerData, type MetaHandlerData} from './MetaHandler.js';\nimport {data as networkRequestsHandlerData} from './NetworkRequestsHandler.js';\nimport type {HandlerName} from './types.js';\n\nexport interface ScriptsData {\n  /** Note: this is only populated when the \"Enhanced Traces\" feature is enabled. */\n  scripts: Script[];\n}\n\nexport interface Script {\n  isolate: string;\n  scriptId: Protocol.Runtime.ScriptId;\n  frame: string;\n  ts: Types.Timing.Micro;\n  inline: boolean;\n  url?: string;\n  sourceUrl?: string;\n  content?: string;\n  /** Note: this is the literal text given as the sourceMappingURL value. It has not been resolved relative to the script url.\n   * Since M138, data urls are never set here.\n   */\n  sourceMapUrl?: string;\n  /** If true, the source map url was a data URL, so it got removed from the trace event. */\n  sourceMapUrlElided?: boolean;\n  sourceMap?: SDK.SourceMap.SourceMap;\n  request?: Types.Events.SyntheticNetworkRequest;\n  /** Lazily generated - use getScriptGeneratedSizes to access. */\n  sizes?: GeneratedFileSizes;\n}\n\ntype GeneratedFileSizes = {\n  errorMessage: string,\n}|{files: Record<string, number>, unmappedBytes: number, totalBytes: number};\n\nconst scriptById = new Map<string, Script>();\n\nexport function deps(): HandlerName[] {\n  return ['Meta', 'NetworkRequests'];\n}\n\nexport function reset(): void {\n  scriptById.clear();\n}\n\nexport function handleEvent(event: Types.Events.Event): void {\n  const getOrMakeScript = (isolate: string, scriptIdAsNumber: number): Script => {\n    const scriptId = String(scriptIdAsNumber) as Protocol.Runtime.ScriptId;\n    const key = `${isolate}.${scriptId}`;\n    return Platform.MapUtilities.getWithDefault(\n        scriptById, key, () => ({isolate, scriptId, frame: '', ts: 0} as Script));\n  };\n\n  if (Types.Events.isTargetRundownEvent(event) && event.args.data) {\n    const {isolate, scriptId, frame} = event.args.data;\n    const script = getOrMakeScript(isolate, scriptId);\n    script.frame = frame;\n    script.ts = event.ts;\n\n    return;\n  }\n\n  if (Types.Events.isV8SourceRundownEvent(event)) {\n    const {isolate, scriptId, url, sourceUrl, sourceMapUrl, sourceMapUrlElided} = event.args.data;\n    const script = getOrMakeScript(isolate, scriptId);\n    script.url = url;\n    if (sourceUrl) {\n      script.sourceUrl = sourceUrl;\n    }\n\n    // Older traces may have data source map urls. Those can be very large, so a change\n    // was made to elide them from the trace.\n    // If elided, a fresh trace will fetch the source map from the Script model\n    // (see TimelinePanel getExistingSourceMap). If not fresh, the source map is resolved\n    // instead in this handler via `findCachedRawSourceMap`.\n    if (sourceMapUrlElided) {\n      script.sourceMapUrlElided = true;\n    } else if (sourceMapUrl) {\n      script.sourceMapUrl = sourceMapUrl;\n    }\n    return;\n  }\n\n  if (Types.Events.isV8SourceRundownSourcesScriptCatchupEvent(event)) {\n    const {isolate, scriptId, sourceText} = event.args.data;\n    const script = getOrMakeScript(isolate, scriptId);\n    script.content = sourceText;\n    return;\n  }\n\n  if (Types.Events.isV8SourceRundownSourcesLargeScriptCatchupEvent(event)) {\n    const {isolate, scriptId, sourceText} = event.args.data;\n    const script = getOrMakeScript(isolate, scriptId);\n    script.content = (script.content ?? '') + sourceText;\n    return;\n  }\n}\n\nfunction findFrame(meta: MetaHandlerData, frameId: string): Types.Events.TraceFrame|null {\n  for (const frames of meta.frameByProcessId?.values()) {\n    const frame = frames.get(frameId);\n    if (frame) {\n      return frame;\n    }\n  }\n\n  return null;\n}\n\nfunction findNetworkRequest(networkRequests: Types.Events.SyntheticNetworkRequest[], script: Script):\n    Types.Events.SyntheticNetworkRequest|null {\n  if (!script.url) {\n    return null;\n  }\n\n  return networkRequests.find(request => request.args.data.url === script.url) ?? null;\n}\n\nfunction computeMappingEndColumns(map: SDK.SourceMap.SourceMap): Map<SDK.SourceMap.SourceMapEntry, number> {\n  const result = new Map<SDK.SourceMap.SourceMapEntry, number>();\n\n  const mappings = map.mappings();\n  for (let i = 0; i < mappings.length - 1; i++) {\n    const mapping = mappings[i];\n    const nextMapping = mappings[i + 1];\n    if (mapping.lineNumber === nextMapping.lineNumber) {\n      result.set(mapping, nextMapping.columnNumber);\n    }\n  }\n\n  // Now, all but the last mapping on each line will have a value in this map.\n  return result;\n}\n\n/**\n * Using a script's contents and source map, attribute every generated byte to an authored source file.\n */\nfunction computeGeneratedFileSizes(script: Script): GeneratedFileSizes {\n  if (!script.sourceMap) {\n    throw new Error('expected source map');\n  }\n\n  const map = script.sourceMap;\n  const content = script.content ?? '';\n  const contentLength = content.length;\n  const lines = content.split('\\n');\n  const files: Record<string, number> = {};\n  const totalBytes = contentLength;\n  let unmappedBytes = totalBytes;\n\n  const mappingEndCols = computeMappingEndColumns(script.sourceMap);\n\n  for (const mapping of map.mappings()) {\n    const source = mapping.sourceURL;\n    const lineNum = mapping.lineNumber;\n    const colNum = mapping.columnNumber;\n    const lastColNum = mappingEndCols.get(mapping);\n\n    // Webpack sometimes emits null mappings.\n    // https://github.com/mozilla/source-map/pull/303\n    if (!source) {\n      continue;\n    }\n\n    // Lines and columns are zero-based indices. Visually, lines are shown as a 1-based index.\n\n    const line = lines[lineNum];\n    if (line === null || line === undefined) {\n      const errorMessage = `${map.url()} mapping for line out of bounds: ${lineNum + 1}`;\n      return {errorMessage};\n    }\n\n    if (colNum > line.length) {\n      const errorMessage = `${map.url()} mapping for column out of bounds: ${lineNum + 1}:${colNum}`;\n      return {errorMessage};\n    }\n\n    let mappingLength = 0;\n    if (lastColNum !== undefined) {\n      if (lastColNum > line.length) {\n        const errorMessage = `${map.url()} mapping for last column out of bounds: ${lineNum + 1}:${lastColNum}`;\n        return {errorMessage};\n      }\n      mappingLength = lastColNum - colNum;\n    } else {\n      // Add +1 to account for the newline.\n      mappingLength = line.length - colNum + 1;\n    }\n    files[source] = (files[source] || 0) + mappingLength;\n    unmappedBytes -= mappingLength;\n  }\n\n  return {\n    files,\n    unmappedBytes,\n    totalBytes,\n  };\n}\n\nexport function getScriptGeneratedSizes(script: Script): GeneratedFileSizes|null {\n  if (script.sourceMap && !script.sizes) {\n    script.sizes = computeGeneratedFileSizes(script);\n  }\n\n  return script.sizes ?? null;\n}\n\nfunction findCachedRawSourceMap(script: Script, options: Types.Configuration.ParseOptions): SDK.SourceMap.SourceMapV3|\n    undefined {\n  if (options.isFreshRecording || !options.metadata?.sourceMaps) {\n    // Exit if this is not a loaded trace w/ source maps in the metadata.\n    return;\n  }\n\n  // For elided data url source maps, search the metadata source maps by script url.\n  if (script.sourceMapUrlElided) {\n    if (!script.url) {\n      return;\n    }\n\n    const cachedSourceMap = options.metadata.sourceMaps.find(m => m.url === script.url);\n    if (cachedSourceMap) {\n      return cachedSourceMap.sourceMap;\n    }\n\n    return;\n  }\n\n  if (!script.sourceMapUrl) {\n    return;\n  }\n\n  // Otherwise, search by source map url.\n  // Note: early enhanced traces may have this field set for data urls. Ignore those,\n  // as they were never stored in metadata sourcemap.\n  const isDataUrl = script.sourceMapUrl.startsWith('data:');\n  if (!isDataUrl) {\n    const cachedSourceMap = options.metadata.sourceMaps.find(m => m.sourceMapUrl === script.sourceMapUrl);\n    if (cachedSourceMap) {\n      return cachedSourceMap.sourceMap;\n    }\n  }\n\n  return;\n}\n\nexport async function finalize(options: Types.Configuration.ParseOptions): Promise<void> {\n  const meta = metaHandlerData();\n  const networkRequests = [...networkRequestsHandlerData().byId.values()];\n\n  const documentUrls = new Set<string>();\n  for (const frames of meta.frameByProcessId.values()) {\n    for (const frame of frames.values()) {\n      documentUrls.add(frame.url);\n    }\n  }\n\n  for (const script of scriptById.values()) {\n    script.request = findNetworkRequest(networkRequests, script) ?? undefined;\n    script.inline = !!script.url && documentUrls.has(script.url);\n  }\n\n  if (!options.resolveSourceMap) {\n    return;\n  }\n\n  const promises = [];\n  for (const script of scriptById.values()) {\n    // No frame or url means the script came from somewhere we don't care about.\n    // Note: scripts from inline <SCRIPT> elements use the url of the HTML document,\n    // so aren't ignored.\n    if (!script.frame || !script.url || (!script.sourceMapUrl && !script.sourceMapUrlElided)) {\n      continue;\n    }\n\n    const frameUrl = findFrame(meta, script.frame)?.url as Platform.DevToolsPath.UrlString | undefined;\n    if (!frameUrl) {\n      continue;\n    }\n\n    // If there is a `sourceURL` magic comment, resolve the compiledUrl against the frame url.\n    // example: `// #sourceURL=foo.js` for target frame https://www.example.com/home -> https://www.example.com/home/foo.js\n    let sourceUrl = script.url;\n    if (script.sourceUrl) {\n      sourceUrl = Common.ParsedURL.ParsedURL.completeURL(frameUrl, script.sourceUrl) ?? script.sourceUrl;\n    }\n\n    let sourceMapUrl;\n    if (script.sourceMapUrl) {\n      // Resolve the source map url. The value given by v8 may be relative, so resolve it here.\n      // This process should match the one in `SourceMapManager.attachSourceMap`.\n      sourceMapUrl =\n          Common.ParsedURL.ParsedURL.completeURL(sourceUrl as Platform.DevToolsPath.UrlString, script.sourceMapUrl);\n      if (!sourceMapUrl) {\n        continue;\n      }\n\n      script.sourceMapUrl = sourceMapUrl;\n    }\n\n    const params: Types.Configuration.ResolveSourceMapParams = {\n      scriptId: script.scriptId,\n      scriptUrl: script.url as Platform.DevToolsPath.UrlString,\n      sourceUrl: sourceUrl as Platform.DevToolsPath.UrlString,\n      sourceMapUrl: sourceMapUrl ?? '' as Platform.DevToolsPath.UrlString,\n      frame: script.frame as Protocol.Page.FrameId,\n      cachedRawSourceMap: findCachedRawSourceMap(script, options),\n    };\n    const promise = options.resolveSourceMap(params).then(sourceMap => {\n      if (sourceMap) {\n        script.sourceMap = sourceMap;\n      }\n    });\n    promises.push(promise.catch(e => {\n      console.error('Uncaught error when resolving source map', params, e);\n    }));\n  }\n  await Promise.all(promises);\n}\n\nexport function data(): ScriptsData {\n  return {\n    scripts: [...scriptById.values()],\n  };\n}\n"]}