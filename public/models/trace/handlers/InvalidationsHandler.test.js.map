{"version":3,"file":"InvalidationsHandler.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/InvalidationsHandler.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../../generated/protocol.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Trace from '../trace.js';\n\nfunction invalidationDataForTestAssertion(invalidation: Trace.Types.Events.InvalidationTrackingEvent): {\n  nodeId: Protocol.DOM.BackendNodeId,\n  nodeName?: string,\n  reason?: string,\n  stackTrace?: Trace.Types.Events.CallFrame[],\n} {\n  return {\n    nodeId: invalidation.args.data.nodeId,\n    nodeName: invalidation.args.data.nodeName,\n    reason: invalidation.args.data.reason,\n    stackTrace: invalidation.args.data.stackTrace,\n  };\n}\n\ndescribe('InvalidationsHandler', () => {\n  beforeEach(() => {\n    Trace.Handlers.ModelHandlers.Invalidations.reset();\n  });\n\n  it('finds the right invalidators for a layout where attributes have been changed', async function() {\n    const events = await TraceLoader.rawEvents(this, 'style-invalidation-change-attribute.json.gz');\n\n    for (const event of events) {\n      Trace.Handlers.ModelHandlers.Invalidations.handleEvent(event);\n    }\n    await Trace.Handlers.ModelHandlers.Invalidations.finalize();\n    const data = Trace.Handlers.ModelHandlers.Invalidations.data();\n    // Find the Layout event that we want to test - we are testing\n    // the layout that happens after button click that happened in\n    // the trace.\n    const updateLayoutTreeEvent = events.find(event => {\n      return Trace.Types.Events.isUpdateLayoutTree(event) &&\n          event.args.beginData?.stackTrace?.[0].functionName === 'testFuncs.changeAttributeAndDisplay';\n    });\n    if (!updateLayoutTreeEvent) {\n      throw new Error('Could not find UpdateLayoutTree event.');\n    }\n\n    const invalidations =\n        data.invalidationsForEvent.get(updateLayoutTreeEvent)?.map(invalidationDataForTestAssertion) ?? [];\n\n    assert.deepEqual(invalidations, [\n      {\n        nodeId: 107 as Protocol.DOM.BackendNodeId,\n        nodeName: 'BUTTON id=\\'changeAttributeAndDisplay\\'',\n        reason: 'PseudoClass',\n        stackTrace: undefined,\n      },\n      {\n        nodeId: 110 as Protocol.DOM.BackendNodeId,\n        nodeName: 'DIV id=\\'testElementFour\\'',\n        reason: undefined,\n        stackTrace: [\n          {\n            columnNumber: 46,\n            functionName: 'testFuncs.changeAttributeAndDisplay',\n            lineNumber: 45,\n            scriptId: '86',\n            url: 'https://chromedevtools.github.io/performance-stories/style-invalidations/app.js',\n          },\n        ],\n      },\n      {\n        nodeId: 110 as Protocol.DOM.BackendNodeId,\n        nodeName: 'DIV id=\\'testElementFour\\'',\n        reason: 'StyleInvalidator',\n        stackTrace: [\n          {\n            columnNumber: 46,\n            functionName: 'testFuncs.changeAttributeAndDisplay',\n            lineNumber: 45,\n            scriptId: '86',\n            url: 'https://chromedevtools.github.io/performance-stories/style-invalidations/app.js',\n          },\n        ],\n      },\n      {\n        nodeId: 110 as Protocol.DOM.BackendNodeId,\n        nodeName: 'DIV id=\\'testElementFour\\'',\n        reason: 'Attribute',\n        stackTrace: [\n          {\n            columnNumber: 46,\n            functionName: 'testFuncs.changeAttributeAndDisplay',\n            lineNumber: 45,\n            scriptId: '86',\n            url: 'https://chromedevtools.github.io/performance-stories/style-invalidations/app.js',\n          },\n        ],\n      },\n      {\n        nodeId: 111 as Protocol.DOM.BackendNodeId,\n        nodeName: 'DIV id=\\'testElementFive\\'',\n        reason: undefined,\n        stackTrace: [\n          {\n            columnNumber: 46,\n            functionName: 'testFuncs.changeAttributeAndDisplay',\n            lineNumber: 46,\n            scriptId: '86',\n            url: 'https://chromedevtools.github.io/performance-stories/style-invalidations/app.js',\n          },\n        ],\n      },\n      {\n        nodeId: 111 as Protocol.DOM.BackendNodeId,\n        nodeName: 'DIV id=\\'testElementFive\\'',\n        reason: 'StyleInvalidator',\n        stackTrace: [\n          {\n            columnNumber: 46,\n            functionName: 'testFuncs.changeAttributeAndDisplay',\n            lineNumber: 46,\n            scriptId: '86',\n            url: 'https://chromedevtools.github.io/performance-stories/style-invalidations/app.js',\n          },\n        ],\n      },\n      {\n        nodeId: 111 as Protocol.DOM.BackendNodeId,\n        nodeName: 'DIV id=\\'testElementFive\\'',\n        reason: 'Attribute',\n        stackTrace: [\n          {\n            columnNumber: 46,\n            functionName: 'testFuncs.changeAttributeAndDisplay',\n            lineNumber: 46,\n            scriptId: '86',\n            url: 'https://chromedevtools.github.io/performance-stories/style-invalidations/app.js',\n          },\n        ],\n      },\n      {\n        nodeId: 110 as Protocol.DOM.BackendNodeId,\n        nodeName: 'DIV id=\\'testElementFour\\'',\n        reason: 'Element has pending invalidation list',\n        stackTrace: undefined,\n      },\n      {\n        nodeId: 111 as Protocol.DOM.BackendNodeId,\n        nodeName: 'DIV id=\\'testElementFive\\'',\n        reason: 'Element has pending invalidation list',\n        stackTrace: undefined,\n      },\n    ]);\n  });\n\n  it('limits the number of kept invalidations per event', async function() {\n    const events = await TraceLoader.rawEvents(this, 'over-20-invalidations-per-event.json.gz');\n\n    Trace.Handlers.ModelHandlers.Invalidations.handleUserConfig(\n        {\n          ...Trace.Types.Configuration.defaults(),\n          maxInvalidationEventsPerEvent: 5,\n        },\n    );\n    for (const event of events) {\n      Trace.Handlers.ModelHandlers.Invalidations.handleEvent(event);\n    }\n    await Trace.Handlers.ModelHandlers.Invalidations.finalize();\n    const data = Trace.Handlers.ModelHandlers.Invalidations.data();\n\n    // Find the UpdateLayoutEvent that had 26 invalidations\n    const layoutEvent = Array.from(data.invalidationCountForEvent.entries())\n                            .filter(entry => {\n                              const [, count] = entry;\n                              return count === 26;\n                            })\n                            .map(entry => entry[0])\n                            .at(0);\n    assert.isOk(layoutEvent);\n    const invalidations = data.invalidationsForEvent.get(layoutEvent);\n    assert.isOk(invalidations);\n    // We know there are 26 invalidation events, but the handler only kept the last 5 as per the config we passed in.\n    assert.lengthOf(invalidations, 5);\n  });\n});\n"]}