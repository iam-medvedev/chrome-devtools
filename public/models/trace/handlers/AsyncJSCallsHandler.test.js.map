{"version":3,"file":"AsyncJSCallsHandler.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/AsyncJSCallsHandler.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  makeCompleteEvent,\n  makeFlowEvents,\n  makeProfileCall,\n} from '../../../testing/TraceHelpers.js';\nimport * as Trace from '../trace.js';\nconst cat = 'mewtwo';\nconst pid = 1;\nconst tid = 1;\nasync function buildAsyncJSCallsHandlerData(events: Trace.Types.Events.Event[]):\n    Promise<ReturnType<typeof Trace.Handlers.ModelHandlers.AsyncJSCalls.data>> {\n  Trace.Handlers.ModelHandlers.Renderer.reset();\n  Trace.Handlers.ModelHandlers.Flows.reset();\n  Trace.Handlers.ModelHandlers.Flows.reset();\n  for (const event of events) {\n    Trace.Handlers.ModelHandlers.Renderer.handleEvent(event);\n    Trace.Handlers.ModelHandlers.Flows.handleEvent(event);\n  }\n  await Trace.Handlers.ModelHandlers.Renderer.finalize();\n  await Trace.Handlers.ModelHandlers.Flows.finalize();\n  await Trace.Handlers.ModelHandlers.AsyncJSCalls.finalize();\n  return Trace.Handlers.ModelHandlers.AsyncJSCalls.data();\n}\ndescribe('AsyncJSCallsHandler', function() {\n  describe('Resolving JS task schedulers to task run entrypoints', function() {\n    it('associates a JS task scheduler profile call with the corresponding task run entry point', async function() {\n      const jsTaskScheduler = makeProfileCall('setTimeout', 0, 50, pid, tid);\n      const asyncTaskScheduled =\n          makeCompleteEvent(Trace.Types.Events.Name.DEBUGGER_ASYNC_TASK_SCHEDULED, 0, 0, cat, pid, tid);\n\n      const asyncTaskRun = makeCompleteEvent(Trace.Types.Events.Name.DEBUGGER_ASYNC_TASK_RUN, 60, 100, cat, tid, pid);\n      const jsTaskRunEntryPoint = makeCompleteEvent(Trace.Types.Events.Name.FUNCTION_CALL, 70, 20, cat, tid, pid);\n\n      const flowEvents = makeFlowEvents([asyncTaskScheduled, asyncTaskRun]);\n      const rendererEvents = [jsTaskScheduler, asyncTaskScheduled, asyncTaskRun, jsTaskRunEntryPoint];\n      const allEvents = [...rendererEvents, ...flowEvents];\n\n      const asyncCallStacksData = await buildAsyncJSCallsHandlerData(allEvents);\n      const testRunEntryPoints = asyncCallStacksData.schedulerToRunEntryPoints.get(jsTaskScheduler);\n      assert.strictEqual(testRunEntryPoints?.length, 1);\n      assert.strictEqual(testRunEntryPoints?.[0], jsTaskRunEntryPoint);\n    });\n\n    it('uses the nearest profile call ancestor of a debuggerTaskScheduled as JS task scheduler', async function() {\n      // Three profile call ancestors to the debuggerTaskScheduled event.\n      // Test the one closest to the debuggerTaskScheduled in the tree\n      // is picked.\n      const foo = makeProfileCall('foo', 0, 50, pid, tid);\n      const bar = makeProfileCall('bar', 0, 40, pid, tid);\n      const jsTaskScheduler = makeProfileCall('setTimeout', 0, 30, pid, tid);\n      const asyncTaskScheduled =\n          makeCompleteEvent(Trace.Types.Events.Name.DEBUGGER_ASYNC_TASK_SCHEDULED, 0, 0, cat, pid, tid);\n\n      const asyncTaskRun = makeCompleteEvent(Trace.Types.Events.Name.DEBUGGER_ASYNC_TASK_RUN, 60, 100, cat, tid, pid);\n      const jsTaskRunEntryPoint = makeCompleteEvent(Trace.Types.Events.Name.FUNCTION_CALL, 70, 20, cat, tid, pid);\n\n      const flowEvents = makeFlowEvents([asyncTaskScheduled, asyncTaskRun]);\n      const rendererEvents = [foo, bar, jsTaskScheduler, asyncTaskScheduled, asyncTaskRun, jsTaskRunEntryPoint];\n      const allEvents = [...rendererEvents, ...flowEvents];\n\n      const asyncCallStacksData = await buildAsyncJSCallsHandlerData(allEvents);\n      const testRunEntryPoints = asyncCallStacksData.schedulerToRunEntryPoints.get(jsTaskScheduler);\n      assert.strictEqual(testRunEntryPoints?.length, 1);\n      assert.strictEqual(testRunEntryPoints?.[0], jsTaskRunEntryPoint);\n    });\n\n    it('uses the nearest JS entry point descendant of a debuggerTaskRun as async task run', async function() {\n      const jsTaskScheduler = makeProfileCall('setTimeout', 0, 30, pid, tid);\n      const asyncTaskScheduled =\n          makeCompleteEvent(Trace.Types.Events.Name.DEBUGGER_ASYNC_TASK_SCHEDULED, 0, 0, cat, pid, tid);\n\n      const asyncTaskRun = makeCompleteEvent(Trace.Types.Events.Name.DEBUGGER_ASYNC_TASK_RUN, 60, 100, cat, tid, pid);\n\n      // Two JS entry points belonging to the same subtree are\n      // descendants to the debuggerTaskRun event. Test the one closest\n      // to the debuggerTaskRun in the global tree is picked.\n      const jsTaskRunEntryPoint = makeCompleteEvent(Trace.Types.Events.Name.FUNCTION_CALL, 70, 20, cat, tid, pid);\n      const secondFakeEntryPoint = makeCompleteEvent(Trace.Types.Events.Name.FUNCTION_CALL, 71, 10, cat, tid, pid);\n\n      const flowEvents = makeFlowEvents([asyncTaskScheduled, asyncTaskRun]);\n      const rendererEvents =\n          [jsTaskScheduler, asyncTaskScheduled, asyncTaskRun, jsTaskRunEntryPoint, secondFakeEntryPoint];\n      const allEvents = [...rendererEvents, ...flowEvents];\n\n      const asyncCallStacksData = await buildAsyncJSCallsHandlerData(allEvents);\n      const testRunEntryPoints = asyncCallStacksData.schedulerToRunEntryPoints.get(jsTaskScheduler);\n      assert.strictEqual(testRunEntryPoints?.length, 1);\n      assert.strictEqual(testRunEntryPoints?.[0], jsTaskRunEntryPoint);\n    });\n    it('returns multiple JS entry point descendants of a debuggerTaskRun when they are not in the same subtree',\n       async function() {\n         const jsTaskScheduler = makeProfileCall('setTimeout', 0, 30, pid, tid);\n         const asyncTaskScheduled =\n             makeCompleteEvent(Trace.Types.Events.Name.DEBUGGER_ASYNC_TASK_SCHEDULED, 0, 0, cat, pid, tid);\n\n         const asyncTaskRun =\n             makeCompleteEvent(Trace.Types.Events.Name.DEBUGGER_ASYNC_TASK_RUN, 60, 100, cat, tid, pid);\n\n         // Two JS entry points belonging to different subtrees are\n         // descendants to the debuggerTaskRun event. Test both are\n         // used.\n         const firstJSTaskRunEntryPoint =\n             makeCompleteEvent(Trace.Types.Events.Name.FUNCTION_CALL, 70, 20, cat, tid, pid);\n         const secondJSTaskRunEntryPoint =\n             makeCompleteEvent(Trace.Types.Events.Name.FUNCTION_CALL, 90, 10, cat, tid, pid);\n\n         const flowEvents = makeFlowEvents([asyncTaskScheduled, asyncTaskRun]);\n         const rendererEvents =\n             [jsTaskScheduler, asyncTaskScheduled, asyncTaskRun, firstJSTaskRunEntryPoint, secondJSTaskRunEntryPoint];\n         const allEvents = [...rendererEvents, ...flowEvents];\n\n         const asyncCallStacksData = await buildAsyncJSCallsHandlerData(allEvents);\n         const testRunEntryPoints = asyncCallStacksData.schedulerToRunEntryPoints.get(jsTaskScheduler);\n         assert.strictEqual(testRunEntryPoints?.length, 2);\n         assert.strictEqual(testRunEntryPoints?.[0], firstJSTaskRunEntryPoint);\n         assert.strictEqual(testRunEntryPoints?.[1], secondJSTaskRunEntryPoint);\n       });\n  });\n  describe('Resolving async JS tasks to schedulers', function() {\n    it('associates an async JS task to its scheduler', async function() {\n      const jsTaskScheduler = makeProfileCall('setTimeout', 0, 50, pid, tid);\n      const asyncTaskScheduled =\n          makeCompleteEvent(Trace.Types.Events.Name.DEBUGGER_ASYNC_TASK_SCHEDULED, 0, 0, cat, pid, tid) as\n          Trace.Types.Events.DebuggerAsyncTaskScheduled;\n      asyncTaskScheduled.args.taskName = 'A task name';\n      const asyncTaskRun = makeCompleteEvent(Trace.Types.Events.Name.DEBUGGER_ASYNC_TASK_RUN, 60, 100, cat, tid, pid);\n      const jsTaskRunEntryPoint = makeCompleteEvent(Trace.Types.Events.Name.FUNCTION_CALL, 70, 20, cat, tid, pid);\n      const asyncJSTask1 = makeProfileCall('scheduledFunction', 71, 10, pid, tid);\n      const asyncJSTask2 = makeProfileCall('scheduledFunction', 81, 5, pid, tid);\n\n      const flowEvents = makeFlowEvents([asyncTaskScheduled, asyncTaskRun]);\n      const rendererEvents =\n          [jsTaskScheduler, asyncTaskScheduled, asyncTaskRun, jsTaskRunEntryPoint, asyncJSTask1, asyncJSTask2];\n      const allEvents = [...rendererEvents, ...flowEvents];\n\n      const asyncCallStacksData = await buildAsyncJSCallsHandlerData(allEvents);\n      let testScheduler = asyncCallStacksData.asyncCallToScheduler.get(asyncJSTask1);\n      assert.strictEqual(testScheduler?.scheduler, jsTaskScheduler);\n      assert.strictEqual(testScheduler?.taskName, asyncTaskScheduled.args.taskName);\n\n      testScheduler = asyncCallStacksData.asyncCallToScheduler.get(asyncJSTask2);\n      assert.strictEqual(testScheduler?.scheduler, jsTaskScheduler);\n      assert.strictEqual(testScheduler?.taskName, asyncTaskScheduled.args.taskName);\n    });\n    it('only associates the root async JS task in a subtree with the async task scheduler', async function() {\n      const jsTaskScheduler = makeProfileCall('setTimeout', 0, 50, pid, tid);\n      const asyncTaskScheduled =\n          makeCompleteEvent(Trace.Types.Events.Name.DEBUGGER_ASYNC_TASK_SCHEDULED, 0, 0, cat, pid, tid);\n\n      const asyncTaskRun = makeCompleteEvent(Trace.Types.Events.Name.DEBUGGER_ASYNC_TASK_RUN, 60, 100, cat, tid, pid);\n      const jsTaskRunEntryPoint = makeCompleteEvent(Trace.Types.Events.Name.FUNCTION_CALL, 70, 20, cat, tid, pid);\n      const asyncJSTask1 = makeProfileCall('scheduledFunction', 71, 10, pid, tid);\n      // Because of its timings, this profile call will be nested inside the one above.\n      const asyncJSTask2 = makeProfileCall('nestedFunction', 72, 5, pid, tid);\n\n      const flowEvents = makeFlowEvents([asyncTaskScheduled, asyncTaskRun]);\n      const rendererEvents =\n          [jsTaskScheduler, asyncTaskScheduled, asyncTaskRun, jsTaskRunEntryPoint, asyncJSTask1, asyncJSTask2];\n      const allEvents = [...rendererEvents, ...flowEvents];\n\n      const asyncCallStacksData = await buildAsyncJSCallsHandlerData(allEvents);\n      let testScheduler = asyncCallStacksData.asyncCallToScheduler.get(asyncJSTask1)?.scheduler;\n      assert.strictEqual(testScheduler, jsTaskScheduler);\n\n      testScheduler = asyncCallStacksData.asyncCallToScheduler.get(asyncJSTask2)?.scheduler;\n      assert.isUndefined(testScheduler);\n    });\n  });\n});\n"]}