{"version":3,"file":"DOMStatsHandler.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/DOMStatsHandler.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,uBAAuB,EAAC,MAAM,wCAAwC,CAAC;AAC/E,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,KAAK,MAAM,aAAa,CAAC;AAErC,uBAAuB,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC9C,UAAU,CAAC,GAAG,EAAE;QACd,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QAC9C,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK;QAC7C,MAAM,EAAC,WAAW,EAAC,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,+BAA+B,CAAC,CAAC;QAE3F,MAAM,EAAC,WAAW,EAAC,GAAG,WAAW,CAAC,IAAI,CAAC;QACvC,MAAM,EAAC,iBAAiB,EAAC,GAAG,WAAW,CAAC,QAAQ,CAAC;QAEjD,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC9C,MAAM,cAAc,GAAG,iBAAiB,CAAC,GAAG,CAAC,WAAW,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,MAAM,aAAa,GAAG,cAAe,CAAC,IAAI,CAAC,IAAI,CAAC;QAChD,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QACnD,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,QAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACrD,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,QAAS,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QACzE,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,WAAY,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,WAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Trace from '../trace.js';\n\ndescribeWithEnvironment('DOMStatsHandler', () => {\n  beforeEach(() => {\n    Trace.Handlers.ModelHandlers.DOMStats.reset();\n    Trace.Handlers.ModelHandlers.Meta.reset();\n  });\n\n  it('should get DOM stats for each frame', async function() {\n    const {parsedTrace} = await TraceLoader.traceEngine(this, 'multi-frame-dom-stats.json.gz');\n\n    const {mainFrameId} = parsedTrace.Meta;\n    const {domStatsByFrameId} = parsedTrace.DOMStats;\n\n    assert.strictEqual(domStatsByFrameId.size, 2);\n    const mainFrameStats = domStatsByFrameId.get(mainFrameId)!.at(-1);\n    const mainFrameData = mainFrameStats!.args.data;\n    assert.strictEqual(mainFrameData.totalElements, 7);\n    assert.strictEqual(mainFrameData.maxDepth!.depth, 3);\n    assert.strictEqual(mainFrameData.maxDepth!.nodeName, 'DIV id=\\'child\\'');\n    assert.strictEqual(mainFrameData.maxChildren!.numChildren, 4);\n    assert.strictEqual(mainFrameData.maxChildren!.nodeName, 'BODY');\n  });\n});\n"]}