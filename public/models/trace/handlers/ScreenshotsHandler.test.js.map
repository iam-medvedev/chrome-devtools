{"version":3,"file":"ScreenshotsHandler.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/ScreenshotsHandler.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,KAAK,MAAM,aAAa,CAAC;AAErC,QAAQ,CAAC,oBAAoB,EAAE;IAC7B,UAAU,CAAC,KAAK;QACd,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAC1C,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IACnD,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,2CAA2C,EAAE,GAAG,EAAE;QACzD,KAAK,UAAU,UAAU,CAAC,MAA2C;YACnE,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;YAE/E,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;gBAC3B,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACrD,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC9D,CAAC;YAED,MAAM,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnD,MAAM,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC5D,CAAC;QAED,EAAE,CAAC,6EAA6E,EAAE,KAAK;YACrF,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YAChF,MAAM,UAAU,CAAC,MAAM,CAAC,CAAC;YACzB,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC7D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAC7C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAChC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;QAEH,qCAAqC;QACrC,EAAE,CAAC,+EAA+E,EAAE,KAAK;YACvF,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,uCAAuC,CAAC,CAAC;YAC1F,MAAM,UAAU,CAAC,MAAM,CAAC,CAAC;YACzB,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC7D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAC/C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACvC,SAAS,gBAAgB,CACrB,oBAAoE,EACpE,wBAA+D;YACjE,OAAO,oBAAoB,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;gBAC9C,MAAM,SAAS,GAAG,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAwC,CAAC;gBACxF,MAAM,YAAY,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;gBACzD,OAAO,YAAY,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC;QACD,8DAA8D;QAC9D,EAAE,CAAC,IAAI,CAAC,wEAAwE,EAAE,KAAK;YACrF,qEAAqE;YACrE,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;YAC9E,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;gBAC3B,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACrD,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC9D,CAAC;YACD,MAAM,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnD,MAAM,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAE1D,MAAM,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,0BAA0B,CAAC;YACxG,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAClC,MAAM,wBAAwB,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;YACtF,MAAM,CAAC,WAAW,CAAC,oBAAoB,CAAC,MAAM,EAAE,wBAAwB,CAAC,MAAM,CAAC,CAAC;YAEjF,KAAK,MAAM,MAAM,IAAI,wBAAwB,EAAE,CAAC;gBAC9C,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAE,6DAA6D;YACzG,CAAC;YAED,MAAM,aAAa,GAAG,gBAAgB,CAAC,oBAAoB,EAAE,wBAAwB,CAAC,CAAC;YACvF,qFAAqF;YACrF,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE;gBAC9B,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAG,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,KAAK;gBAC9F,CAAC,KAAK,EAAG,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAG,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM;aACjG,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK;YAC3C,iGAAiG;YACjG,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;YACpE,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;gBAC3B,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACrD,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC9D,CAAC;YACD,MAAM,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnD,MAAM,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAE1D,MAAM,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,0BAA0B,CAAC;YACxG,MAAM,wBAAwB,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;YACtF,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAClC,MAAM,CAAC,WAAW,CAAC,oBAAoB,CAAC,MAAM,EAAE,wBAAwB,CAAC,MAAM,CAAC,CAAC;YAEjF,KAAK,MAAM,MAAM,IAAI,wBAAwB,EAAE,CAAC;gBAC9C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAE,mEAAmE;YAC5G,CAAC;YAED,MAAM,aAAa,GAAG,gBAAgB,CAAC,oBAAoB,EAAE,wBAAwB,CAAC,CAAC;YACvF,sBAAsB;YACtB,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE;gBAC9B,CAAC;gBACD,CAAC;gBACD,CAAC;gBACD,CAAC;gBACD,CAAC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Trace from '../trace.js';\n\ndescribe('ScreenshotsHandler', function() {\n  beforeEach(async function() {\n    Trace.Handlers.ModelHandlers.Meta.reset();\n    Trace.Handlers.ModelHandlers.Screenshots.reset();\n  });\n  describe('supporting old and new screenshot formats', () => {\n    async function runHandler(events: readonly Trace.Types.Events.Event[]) {\n      Trace.Helpers.SyntheticEvents.SyntheticEventsManager.createAndActivate(events);\n\n      for (const event of events) {\n        Trace.Handlers.ModelHandlers.Meta.handleEvent(event);\n        Trace.Handlers.ModelHandlers.Screenshots.handleEvent(event);\n      }\n\n      await Trace.Handlers.ModelHandlers.Meta.finalize();\n      await Trace.Handlers.ModelHandlers.Screenshots.finalize();\n    }\n\n    it('finds the screenshots in traces using the OBJECT_SNAPSHOT screenshot format', async function() {\n      const events = await TraceLoader.rawEvents(this, 'web-dev-with-commit.json.gz');\n      await runHandler(events);\n      const data = Trace.Handlers.ModelHandlers.Screenshots.data();\n      assert.isOk(data.legacySyntheticScreenshots);\n      assert.isNull(data.screenshots);\n      assert.lengthOf(data.legacySyntheticScreenshots, 18);\n    });\n\n    // TODO: leave explainer comment here\n    it('finds the screenshots in traces using the new instant event screenshot format', async function() {\n      const events = await TraceLoader.rawEvents(this, 'web-dev-screenshot-source-ids.json.gz');\n      await runHandler(events);\n      const data = Trace.Handlers.ModelHandlers.Screenshots.data();\n      assert.isOk(data.screenshots);\n      assert.isNull(data.legacySyntheticScreenshots);\n      assert.lengthOf(data.screenshots, 20);\n    });\n  });\n\n  describe('presentation timestamps', () => {\n    function getMsDifferences(\n        syntheticScreenshots: Trace.Types.Events.LegacySyntheticScreenshot[],\n        originalScreenshotEvents: Trace.Types.Events.LegacyScreenshot[]): number[] {\n      return syntheticScreenshots.map((synEvent, i) => {\n        const origEvent = originalScreenshotEvents.at(i) as Trace.Types.Events.LegacyScreenshot;\n        const msDifference = (synEvent.ts - origEvent.ts) / 1000;\n        return msDifference;\n      });\n    }\n    // Skip while we resolve the getPresentationTimestamp mystery.\n    it.skip('[crbug.com/41363012] are corrected if frame sequence number is present', async function() {\n      // This trace was collected after https://crrev.com/c/4957973 landed.\n      const events = await TraceLoader.rawEvents(this, 'about-blank-first.json.gz');\n      for (const event of events) {\n        Trace.Handlers.ModelHandlers.Meta.handleEvent(event);\n        Trace.Handlers.ModelHandlers.Screenshots.handleEvent(event);\n      }\n      await Trace.Handlers.ModelHandlers.Meta.finalize();\n      await Trace.Handlers.ModelHandlers.Screenshots.finalize();\n\n      const syntheticScreenshots = Trace.Handlers.ModelHandlers.Screenshots.data().legacySyntheticScreenshots;\n      assert.isOk(syntheticScreenshots);\n      const originalScreenshotEvents = events.filter(Trace.Types.Events.isLegacyScreenshot);\n      assert.strictEqual(syntheticScreenshots.length, originalScreenshotEvents.length);\n\n      for (const oEvent of originalScreenshotEvents) {\n        assert.notStrictEqual(oEvent.id, '0x1');  // The id (frame sequence) shouldn't be the old default of 1.\n      }\n\n      const msDifferences = getMsDifferences(syntheticScreenshots, originalScreenshotEvents);\n      // These values indicate all the screenshots true timings are a tad more to the left.\n      assert.deepEqual(msDifferences, [\n        -13.079, -16.381, -12.503, -5.405,  -14.108, -14.661, -11.944, -14.322, -3.532, -15.821, 0.254,\n        -32.22,  -15.156, -13.219, -14.464, -16.135, -16.501, -33.165, -15.71,  -32.39, -32.445, -30.512,\n      ]);\n    });\n\n    it('remain the same with older traces', async function() {\n      // Any trace captured before  121.0.6156.3 doesn't have the extra data to correct the timestamps.\n      const events = await TraceLoader.rawEvents(this, 'web-dev.json.gz');\n      for (const event of events) {\n        Trace.Handlers.ModelHandlers.Meta.handleEvent(event);\n        Trace.Handlers.ModelHandlers.Screenshots.handleEvent(event);\n      }\n      await Trace.Handlers.ModelHandlers.Meta.finalize();\n      await Trace.Handlers.ModelHandlers.Screenshots.finalize();\n\n      const syntheticScreenshots = Trace.Handlers.ModelHandlers.Screenshots.data().legacySyntheticScreenshots;\n      const originalScreenshotEvents = events.filter(Trace.Types.Events.isLegacyScreenshot);\n      assert.isOk(syntheticScreenshots);\n      assert.strictEqual(syntheticScreenshots.length, originalScreenshotEvents.length);\n\n      for (const oEvent of originalScreenshotEvents) {\n        assert.strictEqual(oEvent.id, '0x1');  // The ids here aren't the new frame sequence, but the hardcoded 1.\n      }\n\n      const msDifferences = getMsDifferences(syntheticScreenshots, originalScreenshotEvents);\n      // No adjustment made.\n      assert.deepEqual(msDifferences, [\n        0,\n        0,\n        0,\n        0,\n        0,\n      ]);\n    });\n  });\n});\n"]}