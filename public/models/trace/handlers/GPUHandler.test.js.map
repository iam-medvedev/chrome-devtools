{"version":3,"file":"GPUHandler.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/GPUHandler.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,KAAK,MAAM,aAAa,CAAC;AAErC,QAAQ,CAAC,YAAY,EAAE;IACrB,UAAU,CAAC,GAAG,EAAE;QACd,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK;QACzD,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;QAExE,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;YAC3B,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACrD,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACtD,CAAC;QACD,MAAM,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnD,MAAM,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAElD,MAAM,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC;QAC7E,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Trace from '../trace.js';\n\ndescribe('GPUHandler', function() {\n  beforeEach(() => {\n    Trace.Handlers.ModelHandlers.Meta.reset();\n  });\n\n  it('finds all the GPU Tasks for the main GPU Thread', async function() {\n    const events = await TraceLoader.rawEvents(this, 'threejs-gpu.json.gz');\n\n    for (const event of events) {\n      Trace.Handlers.ModelHandlers.Meta.handleEvent(event);\n      Trace.Handlers.ModelHandlers.GPU.handleEvent(event);\n    }\n    await Trace.Handlers.ModelHandlers.Meta.finalize();\n    await Trace.Handlers.ModelHandlers.GPU.finalize();\n\n    const gpuEvents = Trace.Handlers.ModelHandlers.GPU.data().mainGPUThreadTasks;\n    assert.lengthOf(gpuEvents, 201);\n  });\n});\n"]}