{"version":3,"file":"ServerTimingsHandler.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/ServerTimingsHandler.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,uBAAuB,EAAC,MAAM,wCAAwC,CAAC;AAC/E,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,KAAK,MAAM,aAAa,CAAC;AAErC,uBAAuB,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACnD,EAAE,CAAC,2DAA2D,EAAE,KAAK;QACnE,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,wBAAwB,CAAC,CAAC;QAClF,MAAM,MAAM,GAAG,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC;QACnE,MAAM,UAAU,GACZ,MAAM,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAC,EAAE,EAAE,CAAC,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE;YAC3B;gBACE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC;gBACjD,IAAI,EAAE,eAAe;gBACrB,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC;gBAC9C,IAAI,EAAE,iCAAiC;gBACvC,MAAM,EAAE,oCAAoC;aAC7C;YACD;gBACE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC;gBAChD,IAAI,EAAE,kBAAkB;gBACxB,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC;gBAC9C,IAAI,EAAE,oCAAoC;gBAC1C,MAAM,EAAE,oCAAoC;aAC7C;YACD;gBACE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC;gBACjD,IAAI,EAAE,eAAe;gBACrB,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC;gBAC9C,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,oCAAoC;aAC7C;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Trace from '../trace.js';\n\ndescribeWithEnvironment('ServerTimingsHandler', () => {\n  it('extracts server timings from network request trace events', async function() {\n    const parsedTrace = await TraceLoader.traceEngine(this, 'server-timings.json.gz');\n    const events = parsedTrace.parsedTrace.ServerTimings.serverTimings;\n    const timingData =\n        events.map(({name, dur, ts, args}) => ({name, dur, ts, desc: args.data.desc, origin: args.data.origin}));\n    assert.deepEqual(timingData, [\n      {\n        dur: Trace.Types.Timing.Micro(1004293.2819999987),\n        name: 'Topleveltask1',\n        ts: Trace.Types.Timing.Micro(80542636965.7475),\n        desc: 'Description of top level task 1',\n        origin: 'https://node-server-tan.vercel.app',\n      },\n      {\n        dur: Trace.Types.Timing.Micro(904293.2819999987),\n        name: 'Secondleveltask1',\n        ts: Trace.Types.Timing.Micro(80542686965.7475),\n        desc: 'Description of second level task 1',\n        origin: 'https://node-server-tan.vercel.app',\n      },\n      {\n        dur: Trace.Types.Timing.Micro(1000092.5859999988),\n        name: 'Topleveltask2',\n        ts: Trace.Types.Timing.Micro(80543641261.0185),\n        desc: undefined,\n        origin: 'https://node-server-tan.vercel.app',\n      },\n    ]);\n  });\n});\n"]}