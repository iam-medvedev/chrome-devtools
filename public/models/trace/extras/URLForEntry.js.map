{"version":3,"file":"URLForEntry.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/extras/URLForEntry.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAI7B,OAAO,KAAK,KAAK,MAAM,mBAAmB,CAAC;AAE3C;;;;;;;;GAQG;AAEH,MAAM,UAAU,cAAc,CAC1B,WAAuC,EAAE,KAAyB;IACpE,IAAI,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;QACtC,OAAO,KAAK,CAAC,SAAS,CAAC,GAAsC,CAAC;IAChE,CAAC;IAED,IAAI,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC1E,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAsC,CAAC;IAC9E,CAAC;IAED,IAAI,KAAK,CAAC,MAAM,CAAC,yBAAyB,CAAC,KAAK,CAAC,EAAE,CAAC;QAClD,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAsC,CAAC;IAChE,CAAC;IAED,qEAAqE;IACrE,IAAI,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;QACtC,MAAM,UAAU,GAAG,WAAW,CAAC,aAAa,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC3E,OAAO,UAAU,CAAC,CAAC,CAAC,cAAc,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACrE,CAAC;IAED,0EAA0E;IAC1E,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC;QACvE,MAAM,UAAU,GAAG,WAAW,CAAC,aAAa,CAAC,4BAA4B,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvG,OAAO,UAAU,CAAC,CAAC,CAAC,cAAc,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACrE,CAAC;IAED,4DAA4D;IAC5D,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;QACpC,OAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAsC,CAAC;IACrE,CAAC;IAED,6EAA6E;IAC7E,IAAI,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;QAC1B,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAsC,CAAC;IAChE,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../../core/platform/platform.js';\nimport type * as Handlers from '../handlers/handlers.js';\nimport * as Types from '../types/types.js';\n\n/**\n * INSTEAD, you probably want `SourceMapsResolver.resolvedURLForEntry()`!\n * If an URL will be displayed in the UI, it's likely you should NOT use `getNonResolved`.\n *\n * Use `getNonResolved` method whenever resolving an URL's source mapping is not an\n * option. For example when processing non-ui data.\n *\n * TODO: migrate existing uses of this over to resolvedURLForEntry.\n */\n\nexport function getNonResolved(\n    parsedTrace: Handlers.Types.ParsedTrace, entry: Types.Events.Event): Platform.DevToolsPath.UrlString|null {\n  if (Types.Events.isProfileCall(entry)) {\n    return entry.callFrame.url as Platform.DevToolsPath.UrlString;\n  }\n\n  if (entry.args?.data?.stackTrace && entry.args.data.stackTrace.length > 0) {\n    return entry.args.data.stackTrace[0].url as Platform.DevToolsPath.UrlString;\n  }\n\n  if (Types.Events.isSyntheticNetworkRequest(entry)) {\n    return entry.args.data.url as Platform.DevToolsPath.UrlString;\n  }\n\n  // DecodeImage events use the URL from the relevant PaintImage event.\n  if (Types.Events.isDecodeImage(entry)) {\n    const paintEvent = parsedTrace.ImagePainting.paintImageForEvent.get(entry);\n    return paintEvent ? getNonResolved(parsedTrace, paintEvent) : null;\n  }\n\n  // DrawLazyPixelRef events use the URL from the relevant PaintImage event.\n  if (Types.Events.isDrawLazyPixelRef(entry) && entry.args?.LazyPixelRef) {\n    const paintEvent = parsedTrace.ImagePainting.paintImageByDrawLazyPixelRef.get(entry.args.LazyPixelRef);\n    return paintEvent ? getNonResolved(parsedTrace, paintEvent) : null;\n  }\n\n  // ParseHTML events store the URL under beginData, not data.\n  if (Types.Events.isParseHTML(entry)) {\n    return entry.args.beginData.url as Platform.DevToolsPath.UrlString;\n  }\n\n  // For all other events, try to see if the URL is provided, else return null.\n  if (entry.args?.data?.url) {\n    return entry.args.data.url as Platform.DevToolsPath.UrlString;\n  }\n\n  return null;\n}\n"]}