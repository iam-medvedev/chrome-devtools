{"version":3,"file":"ThirdParties.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/extras/ThirdParties.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,uBAAuB,EAAC,MAAM,wCAAwC,CAAC;AAC/E,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,KAAK,MAAM,aAAa,CAAC;AAErC,uBAAuB,CAAC,cAAc,EAAE;IACtC,QAAQ,CAAC,UAAU,EAAE;QACnB,EAAE,CAAC,6BAA6B,EAAE,KAAK;YACrC,MAAM,gBAAgB,GAAG,IAAI,GAAG,CAAiB;gBAC/C,CAAC,wBAAwB,EAAE,WAAW,CAAC;gBACvC,CAAC,mEAAmE,EAAE,gBAAgB,CAAC;gBACvF,CAAC,6CAA6C,EAAE,YAAY,CAAC;gBAC7D,CAAC,mCAAmC,EAAE,WAAW,CAAC;gBAClD,CAAC,6EAA6E,EAAE,aAAa,CAAC;gBAC9F,CAAC,0DAA0D,EAAE,iBAAiB,CAAC;aAChF,CAAC,CAAC;YAEH,KAAK,MAAM,CAAC,GAAG,EAAE,cAAc,CAAC,IAAI,gBAAgB,CAAC,OAAO,EAAE,EAAE,CAAC;gBAC/D,MAAM,SAAS,GACX,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,GAAG,EAA4C,EAAE,GAAG,CAAC,EAAE,IAAI;oBACtG,EAAE,CAAC;gBACP,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;YAC9C,CAAC;QACH,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,4CAA4C,EAAE,KAAK;YACpD,MAAM,GAAG,GAAG,0DAA0D,CAAC;YACvE,MAAM,SAAS,GACX,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,GAAG,EAA4C,EAAE,GAAG,CAAC,CAAC;YACrG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAEzB,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;YACpD,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;YACzD,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,0DAA0D,CAAC,CAAC;QACnG,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,gCAAgC,EAAE,KAAK;YACxC,MAAM,EAAC,WAAW,EAAC,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;YACjF,MAAM,IAAI,GAAG,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC;YAEhD,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;YACjE,MAAM,kBAAkB,GAAG,CAAC,GAAG,GAAG,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE;gBAClF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,SAAS,CAAC,kBAAkB,EAAE;gBACnC,CAAC,wBAAwB,EAAE,WAAW,CAAC;gBACvC,CAAC,mEAAmE,EAAE,cAAc,CAAC;gBACrF,CAAC,kCAAkC,EAAE,WAAW,CAAC;gBACjD,CAAC,mCAAmC,EAAE,WAAW,CAAC;gBAClD,CAAC,iCAAiC,EAAE,WAAW,CAAC;gBAChD,CAAC,6EAA6E,EAAE,cAAc,CAAC;aAChG,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,eAAe,EAAE;QACxB,EAAE,CAAC,mBAAmB,EAAE,KAAK;YAC3B,MAAM,EAAC,WAAW,EAAC,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;YACjF,MAAM,IAAI,GAAG,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC;YAEhD,MAAM,EAAC,eAAe,EAAC,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,qCAAqC,CACrF,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAErD,MAAM,kBAAkB,GAAG,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE;gBAC9E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,SAAS,CAAC,kBAAkB,EAAE;gBACnC,CAAC,wBAAwB,EAAE,WAAW,CAAC;gBACvC,CAAC,mEAAmE,EAAE,cAAc,CAAC;gBACrF,CAAC,kCAAkC,EAAE,WAAW,CAAC;gBACjD,CAAC,mCAAmC,EAAE,WAAW,CAAC;gBAClD,CAAC,iCAAiC,EAAE,WAAW,CAAC;gBAChD,CAAC,6EAA6E,EAAE,cAAc,CAAC;aAChG,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,sBAAsB,EAAE,KAAK;YAC9B,MAAM,EAAC,WAAW,EAAC,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;YACjF,MAAM,IAAI,GAAG,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC;YAEhD,6EAA6E;YAC7E,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAC3D,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAC3D,MAAM,MAAM,GAAG,EAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,EAAC,CAAC;YAE7E,MAAM,EAAC,eAAe,EAAC,GACnB,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,qCAAqC,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YAC/F,MAAM,kBAAkB,GAAG,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE;gBAC9E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,qDAAqD;YACrD,MAAM,CAAC,SAAS,CAAC,kBAAkB,EAAE;gBACnC,CAAC,wBAAwB,EAAE,WAAW,CAAC;gBACvC,CAAC,kCAAkC,EAAE,WAAW,CAAC;gBACjD,CAAC,mCAAmC,EAAE,WAAW,CAAC;gBAClD,CAAC,iCAAiC,EAAE,WAAW,CAAC;aACjD,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iCAAiC,EAAE,KAAK;YACzC,MAAM,EAAC,WAAW,EAAC,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;YACjF,MAAM,IAAI,GAAG,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC;YAEhD,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAC3D,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAC3D,MAAM,MAAM,GAAG,EAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,EAAC,CAAC;YAE7E,MAAM,EAAC,eAAe,EAAC,GACnB,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,qCAAqC,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YAC/F,MAAM,kBAAkB,GAAG,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE;gBAC9E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Trace from '../trace.js';\n\ndescribeWithEnvironment('ThirdParties', function() {\n  describe('Entities', function() {\n    it('correctly makes up entities', async function() {\n      const expectedEntities = new Map<string, string>([\n        ['http://localhost:8080/', 'localhost'],\n        ['https://fonts.googleapis.com/css2?family=Orelega+One&display=swap', 'googleapis.com'],\n        ['https://emp.bbci.co.uk/emp/bump-4/bump-4.js', 'bbci.co.uk'],\n        ['http://localhost:8080/blocking.js', 'localhost'],\n        ['https://fonts.gstatic.com/s/orelegaone/v1/3qTpojOggD2XtAdFb-QXZFt93kY.woff2', 'gstatic.com'],\n        ['chrome-extension://chromeextension/something/exciting.js', 'chromeextension'],\n      ]);\n\n      for (const [url, expectedEntity] of expectedEntities.entries()) {\n        const gotEntity =\n            Trace.Extras.ThirdParties.makeUpEntity(new Map<string, Trace.Extras.ThirdParties.Entity>(), url)?.name ??\n            '';\n        assert.deepEqual(gotEntity, expectedEntity);\n      }\n    });\n    it('coreectly makes up chrome extension entity', async function() {\n      const url = 'chrome-extension://chromeextension/something/exciting.js';\n      const gotEntity =\n          Trace.Extras.ThirdParties.makeUpEntity(new Map<string, Trace.Extras.ThirdParties.Entity>(), url);\n      assert.exists(gotEntity);\n\n      assert.deepEqual(gotEntity.name, 'chromeextension');\n      assert.deepEqual(gotEntity.category, 'Chrome Extension');\n      assert.deepEqual(gotEntity.homepage, 'https://chromewebstore.google.com/detail/chromeextension');\n    });\n    it('gets correct entitiesByRequest', async function() {\n      const {parsedTrace} = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n      const reqs = parsedTrace.NetworkRequests.byTime;\n\n      const got = Trace.Extras.ThirdParties.getEntitiesByRequest(reqs);\n      const gotEntityByRequest = [...got.entityByRequest.entries()].map(([req, entity]) => {\n        return [req.args.data.url, entity.name];\n      });\n\n      assert.deepEqual(gotEntityByRequest, [\n        ['http://localhost:8080/', 'localhost'],\n        ['https://fonts.googleapis.com/css2?family=Orelega+One&display=swap', 'Google Fonts'],\n        ['http://localhost:8080/styles.css', 'localhost'],\n        ['http://localhost:8080/blocking.js', 'localhost'],\n        ['http://localhost:8080/module.js', 'localhost'],\n        ['https://fonts.gstatic.com/s/orelegaone/v1/3qTpojOggD2XtAdFb-QXZFt93kY.woff2', 'Google Fonts'],\n      ]);\n    });\n  });\n  describe('byTraceBounds', function() {\n    it('full trace bounds', async function() {\n      const {parsedTrace} = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n      const reqs = parsedTrace.NetworkRequests.byTime;\n\n      const {entityByRequest} = Trace.Extras.ThirdParties.getSummariesAndEntitiesForTraceBounds(\n          parsedTrace, parsedTrace.Meta.traceBounds, reqs);\n\n      const gotEntityByRequest = [...entityByRequest.entries()].map(([req, entity]) => {\n        return [req.args.data.url, entity.name];\n      });\n\n      assert.deepEqual(gotEntityByRequest, [\n        ['http://localhost:8080/', 'localhost'],\n        ['https://fonts.googleapis.com/css2?family=Orelega+One&display=swap', 'Google Fonts'],\n        ['http://localhost:8080/styles.css', 'localhost'],\n        ['http://localhost:8080/blocking.js', 'localhost'],\n        ['http://localhost:8080/module.js', 'localhost'],\n        ['https://fonts.gstatic.com/s/orelegaone/v1/3qTpojOggD2XtAdFb-QXZFt93kY.woff2', 'Google Fonts'],\n      ]);\n    });\n    it('partial trace bounds', async function() {\n      const {parsedTrace} = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n      const reqs = parsedTrace.NetworkRequests.byTime;\n\n      // Font requests of load-simple.json.gz begin & end before/after this bounds.\n      const min = Trace.Types.Timing.MicroSeconds(1634222300000);\n      const max = Trace.Types.Timing.MicroSeconds(1634222320000);\n      const middle = {min, max, range: Trace.Types.Timing.MicroSeconds(max - min)};\n\n      const {entityByRequest} =\n          Trace.Extras.ThirdParties.getSummariesAndEntitiesForTraceBounds(parsedTrace, middle, reqs);\n      const gotEntityByRequest = [...entityByRequest.entries()].map(([req, entity]) => {\n        return [req.args.data.url, entity.name];\n      });\n\n      // Only these localhost requests overlap traceBounds.\n      assert.deepEqual(gotEntityByRequest, [\n        ['http://localhost:8080/', 'localhost'],\n        ['http://localhost:8080/styles.css', 'localhost'],\n        ['http://localhost:8080/blocking.js', 'localhost'],\n        ['http://localhost:8080/module.js', 'localhost'],\n      ]);\n    });\n    it('no requests within trace bounds', async function() {\n      const {parsedTrace} = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n      const reqs = parsedTrace.NetworkRequests.byTime;\n\n      const min = Trace.Types.Timing.MicroSeconds(1634230000000);\n      const max = Trace.Types.Timing.MicroSeconds(1634231000000);\n      const middle = {min, max, range: Trace.Types.Timing.MicroSeconds(max - min)};\n\n      const {entityByRequest} =\n          Trace.Extras.ThirdParties.getSummariesAndEntitiesForTraceBounds(parsedTrace, middle, reqs);\n      const gotEntityByRequest = [...entityByRequest.entries()].map(([req, entity]) => {\n        return [req.args.data.url, entity.name];\n      });\n      assert.deepEqual(gotEntityByRequest, []);\n    });\n  });\n});\n"]}