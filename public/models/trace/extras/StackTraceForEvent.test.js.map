{"version":3,"file":"StackTraceForEvent.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/extras/StackTraceForEvent.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../../generated/protocol.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {\n  allThreadEntriesInTrace,\n  getBaseTraceHandlerData,\n  makeCompleteEvent,\n  makeInstantEvent,\n  makeMockRendererHandlerData,\n  makeProfileCall\n} from '../../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Trace from '../trace.js';\n\nfunction shapeStackTraceAsArray(stackTrace: Protocol.Runtime.StackTrace):\n    Array<{callFrames: Protocol.Runtime.CallFrame[], description?: string}> {\n  const stackTraceAsArray: Array<{callFrames: Protocol.Runtime.CallFrame[], description?: string}> = [];\n  let currentStackTrace: Protocol.Runtime.StackTrace|undefined = stackTrace;\n  while (currentStackTrace) {\n    // @ts-expect-error `codeType` is not included in the protocol types but\n    // occasionally present\n    currentStackTrace.callFrames.forEach(callFrame => delete callFrame.codeType);\n    stackTraceAsArray.push({callFrames: currentStackTrace.callFrames, description: currentStackTrace.description});\n    currentStackTrace = currentStackTrace.parent;\n  }\n  return stackTraceAsArray;\n}\n\nfunction parsedTraceFromEvents(events: Trace.Types.Events.Event[]): Trace.TraceModel.ParsedTrace {\n  return getBaseTraceHandlerData({Renderer: makeMockRendererHandlerData(events)});\n}\ndescribeWithEnvironment('StackTraceForTraceEvent', function() {\n  let parsedTrace: Trace.TraceModel.ParsedTrace;\n  let data: Trace.Handlers.Types.HandlerData;\n  beforeEach(async function() {\n    parsedTrace = await TraceLoader.traceEngine(this, 'async-js-calls.json.gz');\n    data = parsedTrace.data;\n    Trace.Extras.StackTraceForEvent.clearCacheForTrace(data);\n  });\n  afterEach(async () => {\n    Trace.Extras.StackTraceForEvent.clearCacheForTrace(data);\n  });\n\n  it('correctly builds the stack trace of a profile call when it only has a synchronous stack trace.',\n     async function() {\n       const jsCall =\n           allThreadEntriesInTrace(parsedTrace)\n               .find(e => Trace.Types.Events.isProfileCall(e) && e.callFrame.functionName === 'startExample');\n       assert.exists(jsCall);\n       const stackTrace = Trace.Extras.StackTraceForEvent.get(jsCall, data);\n       assert.exists(stackTrace);\n       const stackTraceArray = shapeStackTraceAsArray(stackTrace);\n       assert.lengthOf(stackTraceArray, 1);\n       const callFrames = stackTraceArray[0].callFrames;\n       assert.deepEqual(callFrames, [\n         {\n           columnNumber: 21,\n           functionName: 'startExample',\n           lineNumber: 25,\n           scriptId: '53' as Protocol.Runtime.ScriptId,\n           url: '',\n         },\n         {columnNumber: 0, functionName: '', lineNumber: 0, scriptId: '53' as Protocol.Runtime.ScriptId, url: ''},\n       ]);\n     });\n\n  it('correctly builds the stack trace of a profile call when it only has an asynchronous stack trace.',\n     async function() {\n       const jsCall = allThreadEntriesInTrace(parsedTrace)\n                          .find(e => Trace.Types.Events.isProfileCall(e) && e.callFrame.functionName === 'baz');\n       assert.exists(jsCall);\n       const stackTrace = Trace.Extras.StackTraceForEvent.get(jsCall, data);\n       assert.exists(stackTrace);\n       const stackTraceArray = shapeStackTraceAsArray(stackTrace);\n       assert.lengthOf(stackTraceArray, 4);\n\n       assert.deepEqual(stackTraceArray, [\n         {\n           callFrames: [{\n             columnNumber: 12,\n             functionName: 'baz',\n             lineNumber: 13,\n             scriptId: '53' as Protocol.Runtime.ScriptId,\n             url: '',\n           }],\n           description: undefined,\n         },\n         {\n           callFrames: [{\n             columnNumber: 12,\n             functionName: 'bar',\n             lineNumber: 6,\n             scriptId: '53' as Protocol.Runtime.ScriptId,\n             url: '',\n           }],\n           description: 'requestIdleCallback',\n         },\n         {\n           callFrames: [{\n             columnNumber: 12,\n             functionName: 'foo',\n             lineNumber: 0,\n             scriptId: '53' as Protocol.Runtime.ScriptId,\n             url: '',\n           }],\n           description: 'setTimeout',\n         },\n         {\n           callFrames: [\n             {\n               columnNumber: 21,\n               functionName: 'startExample',\n               lineNumber: 25,\n               scriptId: '53' as Protocol.Runtime.ScriptId,\n               url: '',\n             },\n             {columnNumber: 0, functionName: '', lineNumber: 0, scriptId: '53', url: ''},\n           ],\n           description: 'requestAnimationFrame',\n         },\n       ]);\n     });\n  it('uses cached data correctly.', async function() {\n    const fooCall = allThreadEntriesInTrace(parsedTrace)\n                        .find(e => Trace.Types.Events.isProfileCall(e) && e.callFrame.functionName === 'foo');\n    assert.exists(fooCall);\n    const result = data.AsyncJSCalls.asyncCallToScheduler.get(fooCall as Trace.Types.Events.SyntheticProfileCall);\n    assert.exists(result);\n    const {scheduler: parentOfFoo} = result;\n\n    // Compute stack trace of foo's parent\n    const stackTraceOfParent = Trace.Extras.StackTraceForEvent.get(parentOfFoo, data);\n    assert.exists(stackTraceOfParent);\n    const stackTraceArray = shapeStackTraceAsArray(stackTraceOfParent);\n    assert.lengthOf(stackTraceArray, 1);\n\n    // Modify the cache, to check it's used when possible\n    const bottomFrame = stackTraceOfParent.callFrames.at(-1);\n    assert.exists(bottomFrame);\n    const originalName = bottomFrame.functionName;\n    bottomFrame.functionName = 'Overriden name';\n\n    // Compute stack trace of foo, ensure the cache calculated with\n    // its parent is used.\n    const stackTraceOfFoo = Trace.Extras.StackTraceForEvent.get(fooCall, data);\n    assert.exists(stackTraceOfFoo);\n    const stackTraceArray2 = shapeStackTraceAsArray(stackTraceOfFoo);\n    assert.deepEqual(stackTraceArray2, [\n      {\n        callFrames: [\n          {columnNumber: 12, functionName: 'foo', lineNumber: 0, scriptId: '53' as Protocol.Runtime.ScriptId, url: ''},\n        ],\n        description: undefined,\n      },\n      {\n        callFrames: [\n          {\n            columnNumber: 21,\n            functionName: 'startExample',\n            lineNumber: 25,\n            scriptId: '53' as Protocol.Runtime.ScriptId,\n            url: '',\n          },\n          {\n            columnNumber: 0,\n            functionName: bottomFrame.functionName,\n            lineNumber: 0,\n            scriptId: '53' as Protocol.Runtime.ScriptId,\n            url: '',\n          },\n        ],\n        description: 'requestAnimationFrame',\n      },\n    ]);\n    bottomFrame.functionName = originalName;\n  });\n  it('uses the stack trace of the profile call that contains the raw trace event of the extension entry call',\n     async function() {\n       const jsCall = allThreadEntriesInTrace(parsedTrace)\n                          .find(e => Trace.Types.Events.isProfileCall(e) && e.callFrame.functionName === 'baz') as\n               Trace.Types.Events.SyntheticProfileCall |\n           undefined;\n       assert.exists(jsCall);\n       const stackTraceForExtensionProfileCall = Trace.Extras.StackTraceForEvent.get(jsCall, data);\n       const measureTraceId = [...data.UserTimings.measureTraceByTraceId.keys()].at(0);\n       if (!measureTraceId) {\n         throw new Error('Performance measure trace was not found');\n       }\n\n       assert.exists(stackTraceForExtensionProfileCall);\n\n       // Create an extension entry right next to our profile call (based\n       // on its callTime property).\n       // Test the profile call's stack strace is returned as the\n       // extension entry's stack trace.\n       const mockExtensionEntry = {\n         cat: 'devtools.extension',\n         ts: jsCall.ts,\n         pid: jsCall.pid,\n         tid: jsCall.tid,\n         rawSourceEvent: {\n           cat: 'blink.user_timing',\n           args: {stackTrace: [{functionName: jsCall.callFrame.functionName}], traceId: measureTraceId},\n           ph: Trace.Types.Events.Phase.ASYNC_NESTABLE_START,\n         },\n       } as Trace.Types.Extensions.SyntheticExtensionEntry;\n       const stackTraceForExtensionEntry = Trace.Extras.StackTraceForEvent.get(mockExtensionEntry, data);\n       assert.exists(stackTraceForExtensionEntry);\n       assert.deepEqual(\n           shapeStackTraceAsArray(stackTraceForExtensionEntry),\n           shapeStackTraceAsArray(stackTraceForExtensionProfileCall));\n     });\n  it('extracts the correct stack trace for a console timestamp extension entry', () => {\n    const pid = 0;\n    const tid = 0;\n    const profileCall = makeProfileCall('myFunction', 0, 200, pid, tid);\n    // Override the default -1 values to ensure the callframe is not\n    // discarded as a native frame (which we ignore).\n    profileCall.callFrame.columnNumber = 0;\n    profileCall.callFrame.lineNumber = 0;\n    const extensionEntryStart = 0;\n    const extensionEntryEnd = 100;\n    const entryName = 'Entry';\n    const timestamp = makeInstantEvent(Trace.Types.Events.Name.TIME_STAMP, extensionEntryEnd, '', pid, tid);\n    const extensionData = {\n      color: 'tertiary-dark',\n      frame: 'frame',\n      message: entryName,\n      name: entryName,\n      sampleTraceId: 0,\n      start: extensionEntryStart,\n      track: 'track',\n    };\n    timestamp.args = {data: extensionData};\n    const parsedTrace = parsedTraceFromEvents([profileCall, timestamp]);\n\n    const mockExtensionEntry = {\n      ts: timestamp.ts,\n      name: 'Entry',\n      cat: 'devtools.extension',\n      args: extensionData,\n      rawSourceEvent: timestamp,\n      dur: Trace.Types.Timing.Micro(extensionEntryEnd - extensionEntryStart),\n      ph: Trace.Types.Events.Phase.COMPLETE,\n      pid,\n      tid,\n    } as unknown as Trace.Types.Extensions.SyntheticExtensionTrackEntry;\n    const stackTraceForExtensionEntry = Trace.Extras.StackTraceForEvent.get(mockExtensionEntry, parsedTrace.data);\n    assert.exists(stackTraceForExtensionEntry);\n    assert.deepEqual(shapeStackTraceAsArray(stackTraceForExtensionEntry), [\n      {callFrames: [profileCall.callFrame], description: undefined},\n    ]);\n  });\n\n  it('returns the right stack for a trace event that contains a stack trace in its payload', () => {\n    const pid = 0;\n    const tid = 0;\n    const payloadLineNumber = 10;\n    const payloadColumnNumber = 3;\n    const profileCall1 = makeProfileCall('foo', 0, 200, pid, tid);\n    const profileCall2 = makeProfileCall('bar', 0, 200, pid, tid);\n    // Override the default -1 values to ensure the callframe is not\n    // discarded as a native frame (which we ignore).\n    profileCall1.callFrame.columnNumber = 0;\n    profileCall1.callFrame.lineNumber = 0;\n    profileCall2.callFrame.columnNumber = 0;\n    profileCall2.callFrame.lineNumber = 0;\n    const traceEvent = makeCompleteEvent(Trace.Types.Events.Name.RECALC_STYLE, 100, 10, '', pid, tid) as\n        Trace.Types.Events.RecalcStyle;\n    const payloadCallStack = [\n      {columnNumber: payloadColumnNumber, functionName: 'bar', lineNumber: payloadLineNumber, scriptId: '115', url: ''},\n      {columnNumber: payloadColumnNumber, functionName: 'foo', lineNumber: payloadLineNumber, scriptId: '115', url: ''},\n    ];\n    traceEvent.args = {elementCount: 1, beginData: {frame: '', stackTrace: payloadCallStack}};\n    const parsedTrace = parsedTraceFromEvents([profileCall1, profileCall2, traceEvent]);\n\n    const stackTraceForExtensionEntry = Trace.Extras.StackTraceForEvent.get(traceEvent, parsedTrace.data);\n    assert.exists(stackTraceForExtensionEntry);\n    assert.deepEqual(shapeStackTraceAsArray(stackTraceForExtensionEntry) as unknown[], [\n      {\n        callFrames: [\n          {...payloadCallStack[0], lineNumber: payloadLineNumber - 1, columnNumber: payloadColumnNumber - 1},\n          {...payloadCallStack[1], lineNumber: payloadLineNumber - 1, columnNumber: payloadColumnNumber - 1},\n        ],\n        description: undefined\n      },\n    ]);\n  });\n  it('obtains the stack trace for a trace event triggered by an async JS call', async function() {\n    const {data} = await TraceLoader.traceEngine(this, 'react-console-timestamp.json.gz');\n    const containerExtensionEntry =\n        data.ExtensionTraceData.extensionTrackData[0].entriesByTrack['Primary'].find(e => e.name === 'Container');\n    assert.exists(containerExtensionEntry);\n    const stackTraceForExtensionEntry = Trace.Extras.StackTraceForEvent.get(containerExtensionEntry, data);\n    assert.exists(stackTraceForExtensionEntry);\n    const prettyStack =\n        shapeStackTraceAsArray(stackTraceForExtensionEntry)\n            .map(stack => ({...stack, callFrames: stack.callFrames.map(frame => ({...frame, url: ''}))}));\n    assert.deepEqual(prettyStack as unknown[], [\n      {callFrames: [], description: undefined}, {\n        callFrames: [{columnNumber: 8, functionName: 'App', lineNumber: 45, scriptId: '31', url: ''}],\n        description: '<Container>'\n      },\n      {\n        callFrames: [\n          {columnNumber: 14, functionName: 'renderApp', lineNumber: 98, scriptId: '25', url: ''},\n          {columnNumber: 16, functionName: '<anonymous>', lineNumber: 165, scriptId: '26', url: ''}\n        ],\n        description: '<App>'\n      },\n      {\n        callFrames: [\n          {columnNumber: 27, functionName: 'ResponseInstance', lineNumber: 26161, scriptId: '11', url: ''},\n          {columnNumber: 36, functionName: 'createResponseFromOptions', lineNumber: 26879, scriptId: '11', url: ''},\n          {columnNumber: 37, functionName: 'exports.createFromFetch', lineNumber: 27107, scriptId: '11', url: ''},\n          {columnNumber: 25, functionName: 'hydrateApp', lineNumber: 31283, scriptId: '11', url: ''},\n          {columnNumber: 7, functionName: './src/index.js', lineNumber: 31213, scriptId: '11', url: ''},\n          {columnNumber: 39, functionName: 'options.factory', lineNumber: 31995, scriptId: '11', url: ''},\n          {columnNumber: 38, functionName: '__webpack_require__', lineNumber: 31365, scriptId: '11', url: ''},\n          {columnNumber: 10, functionName: '', lineNumber: 0, scriptId: '11', url: ''},\n          {columnNumber: 0, functionName: '', lineNumber: 0, scriptId: '11', url: ''}\n        ],\n        description: '\"use server\"'\n      }\n    ]);\n  });\n});\n"]}