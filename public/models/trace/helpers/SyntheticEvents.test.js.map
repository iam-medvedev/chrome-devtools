{"version":3,"file":"SyntheticEvents.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/helpers/SyntheticEvents.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Trace from '../trace.js';\n\ndescribe('SyntheticEvents', function() {\n  beforeEach(() => {\n    Trace.Helpers.SyntheticEvents.SyntheticEventsManager.reset();\n  });\n\n  afterEach(() => {\n    Trace.Helpers.SyntheticEvents.SyntheticEventsManager.reset();\n  });\n\n  describe('Initialization', function() {\n    it('does not throw when invoking getActiveManager after executing the trace engine', async function() {\n      const events = await TraceLoader.fixtureContents(this, 'basic.json.gz');\n      await TraceLoader.executeTraceEngineOnFileContents(events);\n      assert.doesNotThrow(Trace.Helpers.SyntheticEvents.SyntheticEventsManager.getActiveManager);\n    });\n\n    it('activates the latest trace manager but can then activate an alternative manager', async function() {\n      // Exact traces do not matter, as long as they are different\n      const events1 = await TraceLoader.rawEvents(this, 'basic.json.gz');\n      const events2 = await TraceLoader.rawEvents(this, 'basic-stack.json.gz');\n\n      const manager1 = Trace.Helpers.SyntheticEvents.SyntheticEventsManager.createAndActivate(events1);\n      const manager2 = Trace.Helpers.SyntheticEvents.SyntheticEventsManager.createAndActivate(events2);\n\n      // Manager2 is active as it was the last one to be initialized\n      assert.strictEqual(Trace.Helpers.SyntheticEvents.SyntheticEventsManager.getActiveManager(), manager2);\n      Trace.Helpers.SyntheticEvents.SyntheticEventsManager.activate(manager1);\n      assert.strictEqual(Trace.Helpers.SyntheticEvents.SyntheticEventsManager.getActiveManager(), manager1);\n    });\n  });\n\n  describe('SyntheticBased registration', () => {\n    it('stores synthetic based events at the same index as their corresponding raw event in the source array',\n       async function() {\n         const contents = await TraceLoader.fixtureContents(this, 'web-dev.json.gz');\n         const rawEvents = 'traceEvents' in contents ? contents.traceEvents as Trace.Types.Events.Event[] : contents;\n         const {parsedTrace} = await TraceLoader.executeTraceEngineOnFileContents(rawEvents);\n         const allSyntheticEvents = [\n           ...parsedTrace.Animations.animations,\n           ...parsedTrace.NetworkRequests.byTime,\n           ...parsedTrace.Screenshots.legacySyntheticScreenshots ?? [],\n         ];\n         const syntheticEventsManager = Trace.Helpers.SyntheticEvents.SyntheticEventsManager.getActiveManager();\n         for (const syntheticEvent of allSyntheticEvents) {\n           const rawEventIndex = rawEvents.indexOf(syntheticEvent.rawSourceEvent);\n           // Test synthetic events are stored in the correct position.\n           assert.strictEqual(syntheticEventsManager.syntheticEventForRawEventIndex(rawEventIndex), syntheticEvent);\n         }\n         const allSyntheticEventsInManagerCount = syntheticEventsManager.getSyntheticTraces().reduce(\n             (count, event) => event !== undefined ? (count + 1) : 0, 0);\n         // Test synthetic events are stored only once.\n         assert.strictEqual(allSyntheticEventsInManagerCount, allSyntheticEvents.length);\n       });\n  });\n});\n"]}