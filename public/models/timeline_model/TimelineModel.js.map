{"version":3,"file":"TimelineModel.js","sourceRoot":"","sources":["../../../../../../front_end/models/timeline_model/TimelineModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as TraceEngine from '../trace/trace.js';\n\nexport class TimelineModelImpl {\n  private sessionId!: string|null;\n  private lastPaintForLayer!: {\n    [x: string]: TraceEngine.Legacy.Event,\n  };\n  private currentScriptEvent!: TraceEngine.Legacy.Event|null;\n  private eventStack!: TraceEngine.Legacy.Event[];\n  private browserFrameTracking!: boolean;\n\n  constructor() {\n    this.reset();\n    this.resetProcessingState();\n  }\n\n  setEvents(tracingModel: TraceEngine.Legacy.TracingModel): void {\n    this.reset();\n    this.resetProcessingState();\n\n    this.processSyncBrowserEvents(tracingModel);\n    if (this.browserFrameTracking) {\n      this.processThreadsForBrowserFrames(tracingModel);\n    } else {\n      // The next line is for loading legacy traces recorded before M67.\n      // TODO(alph): Drop the support at some point.\n      const metadataEvents = this.processMetadataEvents(tracingModel);\n      if (metadataEvents) {\n        this.processMetadataAndThreads(metadataEvents);\n      } else {\n        this.processGenericTrace(tracingModel);\n      }\n    }\n    this.resetProcessingState();\n  }\n\n  private processGenericTrace(tracingModel: TraceEngine.Legacy.TracingModel): void {\n    for (const process of tracingModel.sortedProcesses()) {\n      for (const thread of process.sortedThreads()) {\n        this.processThreadEvents(thread);\n      }\n    }\n  }\n\n  private processMetadataAndThreads(metadataEvents: MetadataEvents): void {\n    let startTime = 0;\n    for (let i = 0, length = metadataEvents.page.length; i < length; i++) {\n      const metaEvent = metadataEvents.page[i];\n      const process = metaEvent.thread.process();\n      const endTime = i + 1 < length ? metadataEvents.page[i + 1].startTime : Infinity;\n      if (startTime === endTime) {\n        continue;\n      }\n      for (const thread of process.sortedThreads()) {\n        this.processThreadEvents(thread);\n      }\n      startTime = endTime;\n    }\n  }\n\n  private processThreadsForBrowserFrames(tracingModel: TraceEngine.Legacy.TracingModel): void {\n    const processDataByPid = new Map<number, {\n      from: number,\n      to: number,\n      main: boolean,\n      url: Platform.DevToolsPath.UrlString,\n    }[]>();\n    for (const process of tracingModel.sortedProcesses()) {\n      const processData = processDataByPid.get(process.id());\n      if (!processData) {\n        continue;\n      }\n      // Sort ascending by range starts, followed by range ends\n      processData.sort((a, b) => a.from - b.from || a.to - b.to);\n\n      for (const thread of process.sortedThreads()) {\n        if (thread.name() === TimelineModelImpl.RendererMainThreadName) {\n          this.processThreadEvents(thread);\n        } else if (\n            thread.name() === TimelineModelImpl.WorkerThreadName ||\n            thread.name() === TimelineModelImpl.WorkerThreadNameLegacy) {\n          continue;\n        } else {\n          this.processThreadEvents(thread);\n        }\n      }\n    }\n  }\n\n  private processMetadataEvents(tracingModel: TraceEngine.Legacy.TracingModel): MetadataEvents|null {\n    const metadataEvents = tracingModel.devToolsMetadataEvents();\n\n    const pageDevToolsMetadataEvents = [];\n    const workersDevToolsMetadataEvents = [];\n    for (const event of metadataEvents) {\n      if (event.name === TimelineModelImpl.DevToolsMetadataEvent.TracingStartedInPage) {\n        pageDevToolsMetadataEvents.push(event);\n      } else if (event.name === TimelineModelImpl.DevToolsMetadataEvent.TracingSessionIdForWorker) {\n        workersDevToolsMetadataEvents.push(event);\n      }\n    }\n    if (!pageDevToolsMetadataEvents.length) {\n      return null;\n    }\n\n    const sessionId =\n        pageDevToolsMetadataEvents[0].args['sessionId'] || pageDevToolsMetadataEvents[0].args['data']['sessionId'];\n    this.sessionId = sessionId;\n\n    const mismatchingIds = new Set<unknown>();\n    function checkSessionId(event: TraceEngine.Legacy.Event): boolean {\n      let args = event.args;\n      // FIXME: put sessionId into args[\"data\"] for TracingStartedInPage event.\n      if (args['data']) {\n        args = args['data'];\n      }\n      const id = args['sessionId'];\n      if (id === sessionId) {\n        return true;\n      }\n      mismatchingIds.add(id);\n      return false;\n    }\n    const result = {\n      page: pageDevToolsMetadataEvents.filter(checkSessionId).sort(TraceEngine.Legacy.Event.compareStartTime),\n      workers: workersDevToolsMetadataEvents.sort(TraceEngine.Legacy.Event.compareStartTime),\n    };\n    if (mismatchingIds.size) {\n      Common.Console.Console.instance().error(\n          'Timeline recording was started in more than one page simultaneously. Session id mismatch: ' +\n          this.sessionId + ' and ' + [...mismatchingIds] + '.');\n    }\n    return result;\n  }\n\n  private processSyncBrowserEvents(tracingModel: TraceEngine.Legacy.TracingModel): void {\n    const browserMain = TraceEngine.Legacy.TracingModel.browserMainThread(tracingModel);\n    if (browserMain) {\n      browserMain.events().forEach(this.processBrowserEvent, this);\n    }\n  }\n\n  private resetProcessingState(): void {\n    this.lastPaintForLayer = {};\n    this.currentScriptEvent = null;\n    this.eventStack = [];\n    this.browserFrameTracking = false;\n  }\n\n  private processThreadEvents(thread: TraceEngine.Legacy.Thread): void {\n    const events = thread.events();\n    this.eventStack = [];\n    const eventStack = this.eventStack;\n\n    for (let i = 0; i < events.length; i++) {\n      const event = events[i];\n\n      let last: TraceEngine.Legacy.Event = eventStack[eventStack.length - 1];\n      while (last && last.endTime !== undefined && last.endTime <= event.startTime) {\n        eventStack.pop();\n        last = eventStack[eventStack.length - 1];\n      }\n      if (!this.processEvent(event)) {\n        continue;\n      }\n      if (!TraceEngine.Types.TraceEvents.isAsyncPhase(event.phase) && event.duration) {\n        if (eventStack.length) {\n          const parent = eventStack[eventStack.length - 1];\n          if (parent) {\n            parent.selfTime -= event.duration;\n            if (parent.selfTime < 0) {\n              parent.selfTime = 0;\n            }\n          }\n        }\n        event.selfTime = event.duration;\n        eventStack.push(event);\n      }\n    }\n  }\n\n  private processEvent(event: TraceEngine.Legacy.Event): boolean {\n    if (this.currentScriptEvent) {\n      if (this.currentScriptEvent.endTime !== undefined && event.startTime > this.currentScriptEvent.endTime) {\n        this.currentScriptEvent = null;\n      }\n    }\n\n    const eventData = event.args['data'] || event.args['beginData'] || {};\n    switch (event.name) {\n      case RecordType.Layout: {\n        const frameId = event.args?.beginData?.frame;\n        if (!frameId) {\n          break;\n        }\n        break;\n      }\n\n      case RecordType.RunMicrotasks: {\n        // Microtasks technically are not necessarily scripts, but for purpose of\n        // forced sync style recalc or layout detection they are.\n        if (!this.currentScriptEvent) {\n          this.currentScriptEvent = event;\n        }\n        break;\n      }\n\n      case RecordType.Paint: {\n        // Only keep layer paint events, skip paints for subframes that get painted to the same layer as parent.\n        if (!eventData['layerId']) {\n          break;\n        }\n        const layerId = eventData['layerId'];\n        this.lastPaintForLayer[layerId] = event;\n        break;\n      }\n    }\n    return true;\n  }\n\n  private processBrowserEvent(event: TraceEngine.Legacy.Event): void {\n    if (event.name === RecordType.ResourceWillSendRequest) {\n      const requestId = event.args?.data?.requestId;\n      if (typeof requestId === 'string') {\n      }\n      return;\n    }\n\n    if (event.hasCategory(TraceEngine.Legacy.DevToolsMetadataEventCategory) && event.args['data']) {\n      const data = event.args['data'];\n      if (event.name === TimelineModelImpl.DevToolsMetadataEvent.TracingStartedInBrowser) {\n        if (!data['persistentIds']) {\n          return;\n        }\n        this.browserFrameTracking = true;\n        return;\n      }\n    }\n  }\n\n  private reset(): void {\n    this.sessionId = null;\n  }\n}\n\nexport enum RecordType {\n  Task = 'RunTask',\n  Program = 'Program',\n  EventDispatch = 'EventDispatch',\n\n  GPUTask = 'GPUTask',\n\n  Animation = 'Animation',\n  RequestMainThreadFrame = 'RequestMainThreadFrame',\n  BeginFrame = 'BeginFrame',\n  NeedsBeginFrameChanged = 'NeedsBeginFrameChanged',\n  BeginMainThreadFrame = 'BeginMainThreadFrame',\n  ActivateLayerTree = 'ActivateLayerTree',\n  DrawFrame = 'DrawFrame',\n  DroppedFrame = 'DroppedFrame',\n  HitTest = 'HitTest',\n  ScheduleStyleRecalculation = 'ScheduleStyleRecalculation',\n  UpdateLayoutTree = 'UpdateLayoutTree',\n  InvalidateLayout = 'InvalidateLayout',\n  Layerize = 'Layerize',\n  Layout = 'Layout',\n  LayoutShift = 'LayoutShift',\n  UpdateLayer = 'UpdateLayer',\n  UpdateLayerTree = 'UpdateLayerTree',\n  PaintSetup = 'PaintSetup',\n  Paint = 'Paint',\n  PaintImage = 'PaintImage',\n  PrePaint = 'PrePaint',\n  Rasterize = 'Rasterize',\n  RasterTask = 'RasterTask',\n  ScrollLayer = 'ScrollLayer',\n  Commit = 'Commit',\n  CompositeLayers = 'CompositeLayers',\n  ComputeIntersections = 'IntersectionObserverController::computeIntersections',\n  InteractiveTime = 'InteractiveTime',\n\n  ParseHTML = 'ParseHTML',\n  ParseAuthorStyleSheet = 'ParseAuthorStyleSheet',\n\n  TimerInstall = 'TimerInstall',\n  TimerRemove = 'TimerRemove',\n  TimerFire = 'TimerFire',\n\n  XHRReadyStateChange = 'XHRReadyStateChange',\n  XHRLoad = 'XHRLoad',\n  CompileScript = 'v8.compile',\n  CompileCode = 'V8.CompileCode',\n  OptimizeCode = 'V8.OptimizeCode',\n  EvaluateScript = 'EvaluateScript',\n  CacheScript = 'v8.produceCache',\n  CompileModule = 'v8.compileModule',\n  EvaluateModule = 'v8.evaluateModule',\n  CacheModule = 'v8.produceModuleCache',\n  WasmStreamFromResponseCallback = 'v8.wasm.streamFromResponseCallback',\n  WasmCompiledModule = 'v8.wasm.compiledModule',\n  WasmCachedModule = 'v8.wasm.cachedModule',\n  WasmModuleCacheHit = 'v8.wasm.moduleCacheHit',\n  WasmModuleCacheInvalid = 'v8.wasm.moduleCacheInvalid',\n\n  FrameStartedLoading = 'FrameStartedLoading',\n  CommitLoad = 'CommitLoad',\n  MarkLoad = 'MarkLoad',\n  MarkDOMContent = 'MarkDOMContent',\n  MarkFirstPaint = 'firstPaint',\n  MarkFCP = 'firstContentfulPaint',\n  MarkLCPCandidate = 'largestContentfulPaint::Candidate',\n  MarkLCPInvalidate = 'largestContentfulPaint::Invalidate',\n  NavigationStart = 'navigationStart',\n\n  TimeStamp = 'TimeStamp',\n  ConsoleTime = 'ConsoleTime',\n  UserTiming = 'UserTiming',\n  EventTiming = 'EventTiming',\n\n  ResourceWillSendRequest = 'ResourceWillSendRequest',\n  ResourceSendRequest = 'ResourceSendRequest',\n  ResourceReceiveResponse = 'ResourceReceiveResponse',\n  ResourceReceivedData = 'ResourceReceivedData',\n  ResourceFinish = 'ResourceFinish',\n  ResourceMarkAsCached = 'ResourceMarkAsCached',\n\n  RunMicrotasks = 'RunMicrotasks',\n  FunctionCall = 'FunctionCall',\n  GCEvent = 'GCEvent',\n  MajorGC = 'MajorGC',\n  MinorGC = 'MinorGC',\n\n  // The following types are used for CPUProfile.\n  // JSRoot is used for the root node.\n  // JSIdleFrame and JSIdleSample are used for idle nodes.\n  // JSSystemFrame and JSSystemSample are used for other system nodes.\n  // JSFrame and JSSample are used for other nodes, and will be categorized as |scripting|.\n  JSFrame = 'JSFrame',\n  JSSample = 'JSSample',\n  JSIdleFrame = 'JSIdleFrame',\n  JSIdleSample = 'JSIdleSample',\n  JSSystemFrame = 'JSSystemFrame',\n  JSSystemSample = 'JSSystemSample',\n  JSRoot = 'JSRoot',\n\n  // V8Sample events are coming from tracing and contain raw stacks with function addresses.\n  // After being processed with help of JitCodeAdded and JitCodeMoved events they\n  // get translated into function infos and stored as stacks in JSSample events.\n  V8Sample = 'V8Sample',\n  JitCodeAdded = 'JitCodeAdded',\n  JitCodeMoved = 'JitCodeMoved',\n  StreamingCompileScript = 'v8.parseOnBackground',\n  StreamingCompileScriptWaiting = 'v8.parseOnBackgroundWaiting',\n  StreamingCompileScriptParsing = 'v8.parseOnBackgroundParsing',\n  BackgroundDeserialize = 'v8.deserializeOnBackground',\n  FinalizeDeserialization = 'V8.FinalizeDeserialization',\n  V8Execute = 'V8.Execute',\n\n  UpdateCounters = 'UpdateCounters',\n\n  RequestAnimationFrame = 'RequestAnimationFrame',\n  CancelAnimationFrame = 'CancelAnimationFrame',\n  FireAnimationFrame = 'FireAnimationFrame',\n\n  RequestIdleCallback = 'RequestIdleCallback',\n  CancelIdleCallback = 'CancelIdleCallback',\n  FireIdleCallback = 'FireIdleCallback',\n\n  WebSocketCreate = 'WebSocketCreate',\n  WebSocketSendHandshakeRequest = 'WebSocketSendHandshakeRequest',\n  WebSocketReceiveHandshakeResponse = 'WebSocketReceiveHandshakeResponse',\n  WebSocketDestroy = 'WebSocketDestroy',\n\n  EmbedderCallback = 'EmbedderCallback',\n\n  SetLayerTreeId = 'SetLayerTreeId',\n  TracingStartedInPage = 'TracingStartedInPage',\n  TracingSessionIdForWorker = 'TracingSessionIdForWorker',\n  StartProfiling = 'CpuProfiler::StartProfiling',\n\n  DecodeImage = 'Decode Image',\n  DrawLazyPixelRef = 'Draw LazyPixelRef',\n  DecodeLazyPixelRef = 'Decode LazyPixelRef',\n\n  LazyPixelRef = 'LazyPixelRef',\n  LayerTreeHostImplSnapshot = 'cc::LayerTreeHostImpl',\n  PictureSnapshot = 'cc::Picture',\n  DisplayItemListSnapshot = 'cc::DisplayItemList',\n  InputLatencyMouseMove = 'InputLatency::MouseMove',\n  InputLatencyMouseWheel = 'InputLatency::MouseWheel',\n  ImplSideFling = 'InputHandlerProxy::HandleGestureFling::started',\n  GCCollectGarbage = 'BlinkGC.AtomicPhase',\n\n  CryptoDoEncrypt = 'DoEncrypt',\n  CryptoDoEncryptReply = 'DoEncryptReply',\n  CryptoDoDecrypt = 'DoDecrypt',\n  CryptoDoDecryptReply = 'DoDecryptReply',\n  CryptoDoDigest = 'DoDigest',\n  CryptoDoDigestReply = 'DoDigestReply',\n  CryptoDoSign = 'DoSign',\n  CryptoDoSignReply = 'DoSignReply',\n  CryptoDoVerify = 'DoVerify',\n  CryptoDoVerifyReply = 'DoVerifyReply',\n\n  // CpuProfile is a virtual event created on frontend to support\n  // serialization of CPU Profiles within tracing timeline data.\n  CpuProfile = 'CpuProfile',\n  Profile = 'Profile',\n\n  AsyncTask = 'AsyncTask',\n\n  SelectorStats = 'SelectorStats',\n}\n\nexport namespace TimelineModelImpl {\n  export const Category = {\n    Console: 'blink.console',\n    UserTiming: 'blink.user_timing',\n    Loading: 'loading',\n  };\n\n  export const WorkerThreadName = 'DedicatedWorker thread';\n  export const WorkerThreadNameLegacy = 'DedicatedWorker Thread';\n  export const RendererMainThreadName = 'CrRendererMain';\n\n  export const DevToolsMetadataEvent = {\n    TracingStartedInBrowser: 'TracingStartedInBrowser',\n    TracingStartedInPage: 'TracingStartedInPage',\n    TracingSessionIdForWorker: 'TracingSessionIdForWorker',\n    FrameCommittedInBrowser: 'FrameCommittedInBrowser',\n    ProcessReadyInBrowser: 'ProcessReadyInBrowser',\n    FrameDeletedInBrowser: 'FrameDeletedInBrowser',\n  };\n}\n\nexport interface MetadataEvents {\n  page: TraceEngine.Legacy.Event[];\n  workers: TraceEngine.Legacy.Event[];\n}\n"]}