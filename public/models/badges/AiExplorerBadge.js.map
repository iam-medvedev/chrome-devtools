{"version":3,"file":"AiExplorerBadge.js","sourceRoot":"","sources":["../../../../../../front_end/models/badges/AiExplorerBadge.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AAEtD,OAAO,EAAC,KAAK,EAAE,WAAW,EAAC,MAAM,YAAY,CAAC;AAE9C,MAAM,qBAAqB,GAAG,IAAI,GAAG,CAAC,oCAAoC,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;AACxG,MAAM,kCAAkC,GAAG,2BAA2B,CAAC;AACvE,MAAM,2BAA2B,GAAG,CAAC,CAAC;AAEtC,MAAM,OAAO,eAAgB,SAAQ,KAAK;IACtB,IAAI,GAClB,wGAAwG,CAAC;IAC3F,KAAK,GAAG,aAAa,CAAC;IACtB,YAAY,GAAG,aAAa,CAAC;IAC7B,QAAQ,GAAG,qBAAqB,CAAC;IACnD,2BAA2B,GAAoC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAC5G,kCAAkC,EAAE,CAAC,2DAA4C,CAAC;IAEpE,iBAAiB,GAAG;QACpC,WAAW,CAAC,uBAAuB;KAC3B,CAAC;IAEX,YAAY,CAAC,OAAoB;QAC/B,MAAM,YAAY,GAAG,IAAI,CAAC,2BAA2B,CAAC,GAAG,EAAE,CAAC;QAC5D,IAAI,YAAY,IAAI,2BAA2B,EAAE,CAAC;YAChD,OAAO;QACT,CAAC;QAED,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QACvD,IAAI,IAAI,CAAC,2BAA2B,CAAC,GAAG,EAAE,KAAK,2BAA2B,EAAE,CAAC;YAC3E,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;CACF","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\n\nimport {Badge, BadgeAction} from './Badge.js';\n\nconst AI_EXPLORER_BADGE_URI = new URL('../../Images/ai-explorer-badge.svg', import.meta.url).toString();\nconst AI_CONVERSATION_COUNT_SETTING_NAME = 'gdp.ai-conversation-count';\nconst AI_CONVERSATION_COUNT_LIMIT = 5;\n\nexport class AiExplorerBadge extends Badge {\n  override readonly name =\n      'profiles/me/awards/developers.google.com%2Fprofile%2Fbadges%2Factivity%2Fchrome-devtools%2Fai-explorer';\n  override readonly title = 'AI Explorer';\n  override readonly jslogContext = 'ai-explorer';\n  override readonly imageUri = AI_EXPLORER_BADGE_URI;\n  #aiConversationCountSetting: Common.Settings.Setting<number> = Common.Settings.Settings.instance().createSetting(\n      AI_CONVERSATION_COUNT_SETTING_NAME, 0, Common.Settings.SettingStorageType.SYNCED);\n\n  override readonly interestedActions = [\n    BadgeAction.STARTED_AI_CONVERSATION,\n  ] as const;\n\n  handleAction(_action: BadgeAction): void {\n    const currentCount = this.#aiConversationCountSetting.get();\n    if (currentCount >= AI_CONVERSATION_COUNT_LIMIT) {\n      return;\n    }\n\n    this.#aiConversationCountSetting.set(currentCount + 1);\n    if (this.#aiConversationCountSetting.get() === AI_CONVERSATION_COUNT_LIMIT) {\n      this.trigger();\n    }\n  }\n}\n"]}