{
  "version": 3,
  "sources": ["../../../../../../front_end/models/ai_code_completion/AiCodeCompletion.ts"],
  "sourcesContent": ["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Root from '../../core/root/root.js';\nimport * as TextEditor from '../../ui/components/text_editor/text_editor.js';\nimport type {AgentOptions, RequestOptions} from '../ai_assistance/ai_assistance.js';\n\nexport class AiCodeCompletion {\n  #aidaRequestThrottler: Common.Throttler.Throttler;\n  #editor: TextEditor.TextEditor.TextEditor;\n\n  readonly #sessionId: string = crypto.randomUUID();\n  readonly #aidaClient: Host.AidaClient.AidaClient;\n  readonly #serverSideLoggingEnabled: boolean;\n\n  constructor(opts: AgentOptions, editor: TextEditor.TextEditor.TextEditor, throttler: Common.Throttler.Throttler) {\n    this.#aidaClient = opts.aidaClient;\n    this.#serverSideLoggingEnabled = opts.serverSideLoggingEnabled ?? false;\n    this.#editor = editor;\n    this.#aidaRequestThrottler = throttler;\n  }\n\n  #buildRequest(\n      prefix: string, suffix: string,\n      inferenceLanguage: Host.AidaClient.AidaInferenceLanguage = Host.AidaClient.AidaInferenceLanguage.JAVASCRIPT):\n      Host.AidaClient.CompletionRequest {\n    const userTier = Host.AidaClient.convertToUserTierEnum(this.#userTier);\n    function validTemperature(temperature: number|undefined): number|undefined {\n      return typeof temperature === 'number' && temperature >= 0 ? temperature : undefined;\n    }\n    return {\n      client: Host.AidaClient.CLIENT_NAME,\n      prefix,\n      suffix,\n      options: {\n        inference_language: inferenceLanguage,\n        temperature: validTemperature(this.#options.temperature),\n        model_id: this.#options.modelId || undefined,\n      },\n      metadata: {\n        disable_user_content_logging: !(this.#serverSideLoggingEnabled ?? false),\n        string_session_id: this.#sessionId,\n        user_tier: userTier,\n        client_version: Root.Runtime.getChromeVersion(),\n      },\n    };\n  }\n\n  async #requestAidaSuggestion(request: Host.AidaClient.CompletionRequest): Promise<void> {\n    const response = await this.#aidaClient.completeCode(request);\n    if (response && response.generatedSamples.length > 0 && response.generatedSamples[0].generationString) {\n      this.#editor.dispatch({\n        effects: TextEditor.Config.setAiAutoCompleteSuggestion.of(response.generatedSamples[0].generationString),\n      });\n    }\n  }\n\n  get #userTier(): string|undefined {\n    return Root.Runtime.hostConfig.devToolsAiCodeCompletion?.userTier;\n  }\n\n  get #options(): RequestOptions {\n    const temperature = Root.Runtime.hostConfig.devToolsAiCodeCompletion?.temperature;\n    const modelId = Root.Runtime.hostConfig.devToolsAiCodeCompletion?.modelId;\n\n    return {\n      temperature,\n      modelId,\n    };\n  }\n\n  onTextChanged(prefix: string, suffix: string): void {\n    void this.#aidaRequestThrottler.schedule(() => this.#requestAidaSuggestion(this.#buildRequest(prefix, suffix)));\n  }\n}\n"],
  "mappings": ";;;;;;;AAAA;;;;AAKA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,gBAAgB;AAGtB,IAAO,mBAAP,MAAuB;EAC3B;EACA;EAES,aAAqB,OAAO,WAAU;EACtC;EACA;EAET,YAAY,MAAoB,QAA0C,WAAqC;AAC7G,SAAK,cAAc,KAAK;AACxB,SAAK,4BAA4B,KAAK,4BAA4B;AAClE,SAAK,UAAU;AACf,SAAK,wBAAwB;EAC/B;EAEA,cACI,QAAgB,QAChB,oBAAA,cAA2G;AAE7G,UAAM,WAAgB,gBAAW,sBAAsB,KAAK,SAAS;AACrE,aAAS,iBAAiB,aAA6B;AACrD,aAAO,OAAO,gBAAgB,YAAY,eAAe,IAAI,cAAc;IAC7E;AACA,WAAO;MACL,QAAa,gBAAW;MACxB;MACA;MACA,SAAS;QACP,oBAAoB;QACpB,aAAa,iBAAiB,KAAK,SAAS,WAAW;QACvD,UAAU,KAAK,SAAS,WAAW;;MAErC,UAAU;QACR,8BAA8B,EAAE,KAAK,6BAA6B;QAClE,mBAAmB,KAAK;QACxB,WAAW;QACX,gBAAqB,aAAQ,iBAAgB;;;EAGnD;EAEA,MAAM,uBAAuB,SAA0C;AACrE,UAAM,WAAW,MAAM,KAAK,YAAY,aAAa,OAAO;AAC5D,QAAI,YAAY,SAAS,iBAAiB,SAAS,KAAK,SAAS,iBAAiB,CAAC,EAAE,kBAAkB;AACrG,WAAK,QAAQ,SAAS;QACpB,SAAoB,kBAAO,4BAA4B,GAAG,SAAS,iBAAiB,CAAC,EAAE,gBAAgB;OACxG;IACH;EACF;EAEA,IAAI,YAAS;AACX,WAAY,aAAQ,WAAW,0BAA0B;EAC3D;EAEA,IAAI,WAAQ;AACV,UAAM,cAAmB,aAAQ,WAAW,0BAA0B;AACtE,UAAM,UAAe,aAAQ,WAAW,0BAA0B;AAElE,WAAO;MACL;MACA;;EAEJ;EAEA,cAAc,QAAgB,QAAc;AAC1C,SAAK,KAAK,sBAAsB,SAAS,MAAM,KAAK,uBAAuB,KAAK,cAAc,QAAQ,MAAM,CAAC,CAAC;EAChH;;",
  "names": []
}
