{"version":3,"file":"AiCodeCompletion.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/ai_code_completion/AiCodeCompletion.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport {\n  describeWithEnvironment,\n  updateHostConfig,\n} from '../../testing/EnvironmentHelpers.js';\nimport * as TextEditor from '../../ui/components/text_editor/text_editor.js';\n\nimport * as AiCodeCompletion from './AiCodeCompletion.js';\n\ndescribeWithEnvironment('AiCodeCompletion', () => {\n  let throttler: Common.Throttler.Throttler;\n  beforeEach(() => {\n    updateHostConfig({\n      devToolsAiCodeCompletion: {\n        enabled: true,\n        temperature: 0.5,\n        modelId: 'test-model',\n        userTier: 'BETA',\n      },\n    });\n    throttler = new Common.Throttler.Throttler(0);\n  });\n\n  afterEach(() => {\n    sinon.restore();\n  });\n\n  it('builds a request and calls the AIDA client on text changed', async () => {\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve(null),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        sinon.createStubInstance(TextEditor.TextEditor.TextEditor),\n        throttler,\n    );\n\n    aiCodeCompletion.onTextChanged('prefix', 'suffix');\n\n    await throttler.processCompleted;\n    sinon.assert.calledOnce(mockAidaClient.completeCode);\n    const request = mockAidaClient.completeCode.firstCall.args[0];\n    assert.strictEqual(request.client, 'CHROME_DEVTOOLS');\n    assert.strictEqual(request.prefix, 'prefix');\n    assert.strictEqual(request.suffix, 'suffix');\n    assert.deepEqual(request.options, {\n      temperature: 0.5,\n      model_id: 'test-model',\n      inference_language: Host.AidaClient.AidaInferenceLanguage.JAVASCRIPT,\n      stop_sequences: ['\\n'],\n    });\n  });\n\n  it('dispatches a suggestion to the editor when AIDA returns one', async () => {\n    const editor = sinon.createStubInstance(TextEditor.TextEditor.TextEditor);\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve({\n        generatedSamples: [{\n          generationString: 'suggestion',\n          sampleId: 1,\n          score: 1,\n        }],\n        metadata: {},\n      }),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        editor,\n        throttler,\n    );\n\n    aiCodeCompletion.onTextChanged('prefix', '\\n');\n\n    await throttler.processCompleted;\n    sinon.assert.calledOnce(mockAidaClient.completeCode);\n    sinon.assert.calledOnce(editor.dispatch);\n    assert.deepEqual(\n        editor.dispatch.firstCall.args[0], {effects: TextEditor.Config.setAiAutoCompleteSuggestion.of('suggestion')});\n  });\n\n  it('throttles requests to AIDA', async () => {\n    const throttlerScheduleSpy = sinon.spy(throttler, 'schedule');\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve(null),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        sinon.createStubInstance(TextEditor.TextEditor.TextEditor),\n        throttler,\n    );\n\n    aiCodeCompletion.onTextChanged('p', '');\n    sinon.assert.calledOnce(throttlerScheduleSpy);\n    aiCodeCompletion.onTextChanged('pr', '');\n    sinon.assert.calledTwice(throttlerScheduleSpy);\n    aiCodeCompletion.onTextChanged('pre', '');\n    sinon.assert.calledThrice(throttlerScheduleSpy);\n\n    await throttler.processCompleted;\n    sinon.assert.calledOnce(mockAidaClient.completeCode);\n    assert.strictEqual(mockAidaClient.completeCode.firstCall.args[0].prefix, 'pre');\n  });\n});\n"]}