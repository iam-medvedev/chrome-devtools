{"version":3,"file":"AiCodeCompletion.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/ai_code_completion/AiCodeCompletion.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport {\n  describeWithEnvironment,\n  updateHostConfig,\n} from '../../testing/EnvironmentHelpers.js';\nimport * as TextEditor from '../../ui/components/text_editor/text_editor.js';\n\nimport * as AiCodeCompletion from './AiCodeCompletion.js';\n\ndescribeWithEnvironment('AiCodeCompletion', () => {\n  let clock: sinon.SinonFakeTimers;\n\n  beforeEach(() => {\n    clock = sinon.useFakeTimers();\n    updateHostConfig({\n      devToolsAiCodeCompletion: {\n        enabled: true,\n        temperature: 0.5,\n        modelId: 'test-model',\n        userTier: 'BETA',\n      },\n    });\n  });\n\n  afterEach(() => {\n    clock.restore();\n  });\n\n  it('builds a request and calls the AIDA client on text changed', async () => {\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve(null),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        sinon.createStubInstance(TextEditor.TextEditor.TextEditor),\n        AiCodeCompletion.Panel.CONSOLE,\n        ['\\n'],\n    );\n\n    aiCodeCompletion.onTextChanged('prefix', 'suffix', 6);\n\n    await clock.tickAsync(AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + 1);\n    sinon.assert.calledOnce(mockAidaClient.completeCode);\n    const request = mockAidaClient.completeCode.firstCall.args[0];\n    assert.strictEqual(request.client, 'CHROME_DEVTOOLS');\n    assert.strictEqual(request.prefix, '\\nprefix');\n    assert.strictEqual(request.suffix, 'suffix');\n    assert.deepEqual(request.options, {\n      temperature: 0.5,\n      model_id: 'test-model',\n      inference_language: Host.AidaClient.AidaInferenceLanguage.JAVASCRIPT,\n      stop_sequences: ['\\n'],\n    });\n  });\n\n  it('dispatches a suggestion to the editor when AIDA returns one', async () => {\n    const editor = sinon.createStubInstance(TextEditor.TextEditor.TextEditor);\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve({\n        generatedSamples: [{\n          generationString: 'suggestion',\n          sampleId: 1,\n          score: 1,\n        }],\n        metadata: {},\n      }),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        editor,\n        AiCodeCompletion.Panel.CONSOLE,\n    );\n\n    aiCodeCompletion.onTextChanged('prefix', '\\n', 1);\n\n    await clock.tickAsync(AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + 1);\n    sinon.assert.calledOnce(mockAidaClient.completeCode);\n    await clock.tickAsync(AiCodeCompletion.DELAY_BEFORE_SHOWING_RESPONSE_MS + 1);\n    sinon.assert.calledOnce(editor.dispatch);\n    assert.deepEqual(editor.dispatch.firstCall.args[0], {\n      effects: TextEditor.Config.setAiAutoCompleteSuggestion.of(\n          {text: 'suggestion', from: 1, sampleId: 1, rpcGlobalId: undefined})\n    });\n  });\n\n  it('trims a suggestion with suffix overlap and dispatches it to the editor', async () => {\n    const editor = sinon.createStubInstance(TextEditor.TextEditor.TextEditor);\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve({\n        generatedSamples: [{\n          generationString: '\"Hello World\");',\n          sampleId: 1,\n          score: 1,\n        }],\n        metadata: {},\n      }),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        editor,\n        AiCodeCompletion.Panel.CONSOLE,\n    );\n\n    aiCodeCompletion.onTextChanged('console.log(', ');\\n', 1);\n\n    await clock.tickAsync(AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + 1);\n    sinon.assert.calledOnce(mockAidaClient.completeCode);\n    await clock.tickAsync(AiCodeCompletion.DELAY_BEFORE_SHOWING_RESPONSE_MS + 1);\n    sinon.assert.calledOnce(editor.dispatch);\n    assert.deepEqual(editor.dispatch.firstCall.args[0], {\n      effects: TextEditor.Config.setAiAutoCompleteSuggestion.of(\n          {text: '\"Hello World\"', from: 1, sampleId: 1, rpcGlobalId: undefined})\n    });\n  });\n\n  it('debounces requests to AIDA', async () => {\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve(null),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        sinon.createStubInstance(TextEditor.TextEditor.TextEditor),\n        AiCodeCompletion.Panel.CONSOLE,\n    );\n\n    aiCodeCompletion.onTextChanged('p', '', 1);\n    aiCodeCompletion.onTextChanged('pr', '', 2);\n    aiCodeCompletion.onTextChanged('pre', '', 3);\n\n    await clock.tickAsync(AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + 1);\n    sinon.assert.calledOnce(mockAidaClient.completeCode);\n    assert.strictEqual(mockAidaClient.completeCode.firstCall.args[0].prefix, '\\npre');\n  });\n\n  it('does not dispatch suggestion or citation if recitation action is BLOCK', async () => {\n    const editor = sinon.createStubInstance(TextEditor.TextEditor.TextEditor);\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve({\n        generatedSamples: [{\n          generationString: 'suggestion',\n          sampleId: 1,\n          score: 1,\n          attributionMetadata: {\n            attributionAction: Host.AidaClient.RecitationAction.BLOCK,\n            citations: [{uri: 'https://www.example.com'}],\n          }\n        }],\n        metadata: {},\n      }),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        editor,\n        AiCodeCompletion.Panel.CONSOLE,\n    );\n    const dispatchSpy = sinon.spy(aiCodeCompletion, 'dispatchEventToListeners');\n\n    aiCodeCompletion.onTextChanged('prefix', '\\n', 1);\n\n    await clock.tickAsync(AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + 1);\n    sinon.assert.calledOnce(mockAidaClient.completeCode);\n    await clock.tickAsync(AiCodeCompletion.DELAY_BEFORE_SHOWING_RESPONSE_MS + 1);\n    sinon.assert.notCalled(editor.dispatch);\n    sinon.assert.calledWith(dispatchSpy, sinon.match(AiCodeCompletion.Events.RESPONSE_RECEIVED), sinon.match({}));\n  });\n\n  it('dispatches response received event with citations', async () => {\n    const editor = sinon.createStubInstance(TextEditor.TextEditor.TextEditor);\n    const citations = [{uri: 'https://example.com'}];\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve({\n        generatedSamples: [{\n          generationString: 'suggestion',\n          sampleId: 1,\n          score: 1,\n          attributionMetadata: {\n            attributionAction: Host.AidaClient.RecitationAction.CITE,\n            citations,\n          },\n        }],\n        metadata: {},\n      }),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        editor,\n        AiCodeCompletion.Panel.CONSOLE,\n    );\n    const dispatchSpy = sinon.spy(aiCodeCompletion, 'dispatchEventToListeners');\n\n    aiCodeCompletion.onTextChanged('prefix', '\\n', 1);\n\n    await clock.tickAsync(AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + 1);\n    await clock.tickAsync(AiCodeCompletion.DELAY_BEFORE_SHOWING_RESPONSE_MS + 1);\n\n    sinon.assert.calledWith(\n        dispatchSpy, sinon.match(AiCodeCompletion.Events.RESPONSE_RECEIVED), sinon.match({citations}));\n  });\n\n  it('caches suggestions from AIDA', async () => {\n    const editor = sinon.createStubInstance(TextEditor.TextEditor.TextEditor);\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve({\n        generatedSamples: [{\n          generationString: 'suggestion',\n          sampleId: 1,\n          score: 1,\n        }],\n        metadata: {},\n      }),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        editor,\n        AiCodeCompletion.Panel.CONSOLE,\n    );\n\n    aiCodeCompletion.onTextChanged('prefix', 'suffix', 1);\n    await clock.tickAsync(\n        AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + AiCodeCompletion.DELAY_BEFORE_SHOWING_RESPONSE_MS + 1);\n\n    aiCodeCompletion.onTextChanged('prefix', 'suffix', 1);\n    await clock.tickAsync(\n        AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + AiCodeCompletion.DELAY_BEFORE_SHOWING_RESPONSE_MS + 1);\n\n    sinon.assert.calledOnce(mockAidaClient.completeCode);\n    sinon.assert.calledTwice(editor.dispatch);\n    assert.deepEqual(editor.dispatch.firstCall.args[0], {\n      effects: TextEditor.Config.setAiAutoCompleteSuggestion.of(\n          {text: 'suggestion', from: 1, sampleId: 1, rpcGlobalId: undefined})\n    });\n\n    assert.deepEqual(editor.dispatch.secondCall.args[0], editor.dispatch.firstCall.args[0]);\n  });\n\n  it('caches suggestions from AIDA and returns only valid generated samples from cache', async () => {\n    const editor = sinon.createStubInstance(TextEditor.TextEditor.TextEditor);\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve({\n        generatedSamples: [\n          {\n            generationString: 'suggestion',\n            sampleId: 1,\n            score: 1,\n          },\n          {\n            generationString: 'recommendation',\n            sampleId: 2,\n            score: 0.5,\n          }\n        ],\n        metadata: {},\n      }),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        editor,\n        AiCodeCompletion.Panel.CONSOLE,\n    );\n\n    aiCodeCompletion.onTextChanged('prefix ', 'suffix', 1);\n    await clock.tickAsync(\n        AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + AiCodeCompletion.DELAY_BEFORE_SHOWING_RESPONSE_MS + 1);\n\n    aiCodeCompletion.onTextChanged('prefix re', 'suffix', 1);\n    await clock.tickAsync(\n        AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + AiCodeCompletion.DELAY_BEFORE_SHOWING_RESPONSE_MS + 1);\n\n    sinon.assert.calledOnce(mockAidaClient.completeCode);\n    sinon.assert.calledTwice(editor.dispatch);\n    assert.deepEqual(editor.dispatch.firstCall.args[0], {\n      effects: TextEditor.Config.setAiAutoCompleteSuggestion.of(\n          {text: 'suggestion', from: 1, sampleId: 1, rpcGlobalId: undefined})\n    });\n    assert.deepEqual(editor.dispatch.secondCall.args[0], {\n      effects: TextEditor.Config.setAiAutoCompleteSuggestion.of(\n          {text: 'commendation', from: 1, sampleId: 2, rpcGlobalId: undefined})\n    });\n  });\n\n  it('does not use cache for different requests', async () => {\n    const editor = sinon.createStubInstance(TextEditor.TextEditor.TextEditor);\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve({\n        generatedSamples: [{\n          generationString: 'suggestion',\n          sampleId: 1,\n          score: 1,\n        }],\n        metadata: {},\n      }),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        editor,\n        AiCodeCompletion.Panel.CONSOLE,\n    );\n\n    aiCodeCompletion.onTextChanged('prefix', 'suffix', 1);\n    await clock.tickAsync(AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + 1);\n\n    aiCodeCompletion.onTextChanged('prefix re', 'suffix', 1);\n    await clock.tickAsync(AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + 1);\n\n    sinon.assert.calledTwice(mockAidaClient.completeCode);\n  });\n\n  it('does not use cache for different suffix', async () => {\n    const editor = sinon.createStubInstance(TextEditor.TextEditor.TextEditor);\n    const mockAidaClient = sinon.createStubInstance(Host.AidaClient.AidaClient, {\n      completeCode: Promise.resolve({\n        generatedSamples: [{\n          generationString: 'suggestion',\n          sampleId: 1,\n          score: 1,\n        }],\n        metadata: {},\n      }),\n    });\n    const aiCodeCompletion = new AiCodeCompletion.AiCodeCompletion(\n        {aidaClient: mockAidaClient},\n        editor,\n        AiCodeCompletion.Panel.CONSOLE,\n    );\n\n    aiCodeCompletion.onTextChanged('prefix', 'suffix', 1);\n    await clock.tickAsync(AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + 1);\n\n    aiCodeCompletion.onTextChanged('prefix', 'suffixes', 1);\n    await clock.tickAsync(AiCodeCompletion.AIDA_REQUEST_DEBOUNCE_TIMEOUT_MS + 1);\n\n    sinon.assert.calledTwice(mockAidaClient.completeCode);\n  });\n});\n"]}