{"version":3,"file":"DebuggerWorkspaceBinding.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/DebuggerWorkspaceBinding.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {MockProtocolBackend} from '../../testing/MockScopeChain.js';\nimport {loadBasicSourceMapExample} from '../../testing/SourceMapHelpers.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport * as Bindings from './bindings.js';\n\nconst {urlString} = Platform.DevToolsPath;\n\ndescribeWithMockConnection('DebuggerWorkspaceBinding', () => {\n  let target: SDK.Target.Target;\n  let backend: MockProtocolBackend;\n  let debuggerWorkspaceBinding: Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding;\n\n  beforeEach(() => {\n    target = createTarget({id: 'main' as Protocol.Target.TargetID, name: 'main', type: SDK.Target.Type.FRAME});\n    const targetManager = target.targetManager();\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n    debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance(\n        {forceNew: false, resourceMapping, targetManager});\n    Bindings.IgnoreListManager.IgnoreListManager.instance({forceNew: false, debuggerWorkspaceBinding});\n  });\n\n  it('can wait for a uiSourceCode if it is not yet available', async () => {\n    backend = new MockProtocolBackend();\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(target);\n    const scriptUrl = urlString`http://script-host/script.js`;\n    const scriptInfo = {url: scriptUrl, content: 'console.log(1);', startLine: 0, startColumn: 0, hasSourceURL: false};\n\n    // Create a second target.\n    const workerTarget = createTarget({\n      id: 'worker' as Protocol.Target.TargetID,\n      name: 'worker',\n      type: SDK.Target.Type.ServiceWorker,\n      parentTarget: target,\n    });\n\n    // Before any script is registered, there shouldn't be any uiSourceCodes.\n    assert.isNull(Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(scriptUrl));\n\n    // Create promise to await the uiSourceCode given the url and its target.\n    const uiSourceCodePromise = debuggerWorkspaceBinding.waitForUISourceCodeAdded(scriptUrl, target);\n\n    // Register the script, which will kick off creating the uiSourceCode.\n    await backend.addScript(target, scriptInfo, null);\n    await backend.addScript(workerTarget, scriptInfo, null);\n\n    // Await the promise to retrieve the uiSourceCode.\n    const uiSourceCode = await uiSourceCodePromise;\n\n    // Check if the uiSourceCode is the expected one (from the main target, and having the correct sourceURL).\n    assert.strictEqual(uiSourceCode.url(), scriptUrl);\n    assert.deepEqual(Bindings.NetworkProject.NetworkProject.targetForUISourceCode(uiSourceCode), target);\n  });\n\n  it('augments sourcemap with scopes via DebuggerWorkspaceBindings.setFunctionRanges', async () => {\n    const validFunctionRanges = [{start: {line: 0, column: 0}, end: {line: 10, column: 1}, name: 'foo'}];\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    assert.exists(debuggerModel);\n\n    const script = (await loadBasicSourceMapExample(target)).script;\n    const sourceMap = await debuggerModel.sourceMapManager().sourceMapForClientPromise(script);\n\n    assert.exists(sourceMap);\n    const url: string = sourceMap.url();\n    assert.strictEqual(url, 'file://gen.js.map/');\n\n    const uiSourceCodeForSourceMap =\n        Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(sourceMap.sourceURLs()[0]);\n    assert.exists(uiSourceCodeForSourceMap);\n\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().setFunctionRanges(\n        uiSourceCodeForSourceMap, validFunctionRanges);\n\n    assert.isTrue(sourceMap.hasScopeInfo());\n    assert.strictEqual(sourceMap.findOriginalFunctionName({line: 0, column: 110}), 'foo');\n  });\n});\n"]}