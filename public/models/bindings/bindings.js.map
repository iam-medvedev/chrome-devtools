{
  "version": 3,
  "sources": ["../../../../../../front_end/models/bindings/CompilerScriptMapping.ts", "../../../../../../front_end/models/bindings/ContentProviderBasedProject.ts", "../../../../../../front_end/models/bindings/NetworkProject.ts", "../../../../../../front_end/models/bindings/CSSWorkspaceBinding.ts", "../../../../../../front_end/models/bindings/LiveLocation.ts", "../../../../../../front_end/models/bindings/SASSSourceMapping.ts", "../../../../../../front_end/models/bindings/StylesSourceMapping.ts", "../../../../../../front_end/models/bindings/ResourceUtils.ts", "../../../../../../front_end/models/bindings/DebuggerLanguagePlugins.ts", "../../../../../../front_end/models/bindings/DebuggerWorkspaceBinding.ts", "../../../../../../front_end/models/bindings/DefaultScriptMapping.ts", "../../../../../../front_end/models/bindings/ResourceScriptMapping.ts", "../../../../../../front_end/models/bindings/FileUtils.ts", "../../../../../../front_end/models/bindings/PresentationConsoleMessageHelper.ts", "../../../../../../front_end/models/bindings/ResourceMapping.ts", "../../../../../../front_end/models/bindings/TempFile.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport type {DebuggerSourceMapping, DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\nimport {NetworkProject} from './NetworkProject.js';\n\n/**\n * The `CompilerScriptMapping` maps script entities from source maps to scripts and vice versa.\n * It is part of the {@link DebuggerWorkspaceBinding} and operates on top of the\n * {@link SDK.SourceMapManager.SourceMapManager}.\n *\n * The `CompilerScriptMapping` maintains a list of {@link ContentProviderBasedProject}s, in which it\n * creates the `UISourceCode`s for the source-mapped entities. The mapping is implemented in various\n * layers:\n *\n * - `#sourceMapToProject` holds a mapping of all the attached `SourceMap`s to their respective\n *   `ContentBasedProviderBasedProject`s. When resolving raw to UI locations this is the first\n *   place to check.\n * - `#uiSourceCodeToSourceMaps` maps every `UISourceCode` created herein to the `SourceMap` that\n *   it originated from. This is the authoritative source of information: The `#projects` might\n *   contain `UISourceCode` objects that were created from this `CompilerScriptMapping`, but which\n *   have become stale, and `#uiSourceCodeToSourceMaps` represents these as having no source maps.\n *\n * @see {@link SDK.SourceMap.SourceMap}\n * @see {@link SDK.SourceMapManager.SourceMapManager}\n */\nexport class CompilerScriptMapping implements DebuggerSourceMapping {\n  readonly #sourceMapManager: SDK.SourceMapManager.SourceMapManager<SDK.Script.Script>;\n  readonly #debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  readonly #stubUISourceCodes = new Map<SDK.Script.Script, Workspace.UISourceCode.UISourceCode>();\n  readonly #stubProject: ContentProviderBasedProject;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly #projects = new Map<string, ContentProviderBasedProject>();\n  readonly #sourceMapToProject = new Map<SDK.SourceMap.SourceMap, ContentProviderBasedProject>();\n  readonly #uiSourceCodeToSourceMaps =\n      new Platform.MapUtilities.Multimap<Workspace.UISourceCode.UISourceCode, SDK.SourceMap.SourceMap>();\n\n  constructor(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, workspace: Workspace.Workspace.WorkspaceImpl,\n      debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.#sourceMapManager = debuggerModel.sourceMapManager();\n    this.#debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    this.#stubProject = new ContentProviderBasedProject(\n        workspace, 'jsSourceMaps:stub:' + debuggerModel.target().id(), Workspace.Workspace.projectTypes.Service, '',\n        true /* isServiceProject */);\n    this.#eventListeners = [\n      this.#sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapWillAttach, this.sourceMapWillAttach, this),\n      this.#sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapFailedToAttach, this.sourceMapFailedToAttach, this),\n      this.#sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapAttached, this.sourceMapAttached, this),\n      this.#sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapDetached, this.sourceMapDetached, this),\n    ];\n  }\n\n  setFunctionRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      ranges: SDK.SourceMapFunctionRanges.NamedFunctionRange[]): void {\n    for (const sourceMap of this.#uiSourceCodeToSourceMaps.get(uiSourceCode)) {\n      sourceMap.augmentWithScopes(uiSourceCode.url(), ranges);\n    }\n  }\n\n  private addStubUISourceCode(script: SDK.Script.Script): void {\n    const stubUISourceCode = this.#stubProject.addContentProvider(\n        Common.ParsedURL.ParsedURL.concatenate(script.sourceURL, ':sourcemap'),\n        TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n            script.sourceURL, Common.ResourceType.resourceTypes.Script,\n            '\\n\\n\\n\\n\\n// Please wait a bit.\\n// Compiled script is not shown while source map is being loaded!'),\n        'text/javascript');\n    this.#stubUISourceCodes.set(script, stubUISourceCode);\n  }\n\n  private removeStubUISourceCode(script: SDK.Script.Script): void {\n    const uiSourceCode = this.#stubUISourceCodes.get(script);\n    this.#stubUISourceCodes.delete(script);\n    if (uiSourceCode) {\n      this.#stubProject.removeUISourceCode(uiSourceCode.url());\n    }\n  }\n\n  getLocationRangesForSameSourceLocation(rawLocation: SDK.DebuggerModel.Location): SDK.DebuggerModel.LocationRange[] {\n    const debuggerModel = rawLocation.debuggerModel;\n    const script = rawLocation.script();\n    if (!script) {\n      return [];\n    }\n    const sourceMap = this.#sourceMapManager.sourceMapForClient(script);\n    if (!sourceMap) {\n      return [];\n    }\n\n    // Find the source location for the raw location.\n    const {lineNumber, columnNumber} = script.rawLocationToRelativeLocation(rawLocation);\n    const entry = sourceMap.findEntry(lineNumber, columnNumber);\n    if (!entry || !entry.sourceURL) {\n      return [];\n    }\n\n    const project = this.#sourceMapToProject.get(sourceMap);\n    if (!project) {\n      return [];\n    }\n\n    const uiSourceCode = project.uiSourceCodeForURL(entry.sourceURL);\n    if (!uiSourceCode) {\n      return [];\n    }\n\n    // Check that the reverse is also true and we have a binding for this |uiSourceCode|\n    // that is referred to from the |sourceMap| of the |script|.\n    if (!this.#uiSourceCodeToSourceMaps.hasValue(uiSourceCode, sourceMap)) {\n      return [];\n    }\n\n    // Map the source location back to raw location ranges.\n    const ranges = sourceMap.findReverseRanges(entry.sourceURL, entry.sourceLineNumber, entry.sourceColumnNumber);\n    return ranges.map(({startLine, startColumn, endLine, endColumn}) => {\n      const start = script.relativeLocationToRawLocation({lineNumber: startLine, columnNumber: startColumn});\n      const end = script.relativeLocationToRawLocation({lineNumber: endLine, columnNumber: endColumn});\n      return {\n        start: debuggerModel.createRawLocation(script, start.lineNumber, start.columnNumber),\n        end: debuggerModel.createRawLocation(script, end.lineNumber, end.columnNumber),\n      };\n    });\n  }\n\n  uiSourceCodeForURL(url: Platform.DevToolsPath.UrlString, isContentScript: boolean):\n      Workspace.UISourceCode.UISourceCode|null {\n    const projectType =\n        isContentScript ? Workspace.Workspace.projectTypes.ContentScripts : Workspace.Workspace.projectTypes.Network;\n    for (const project of this.#projects.values()) {\n      if (project.type() !== projectType) {\n        continue;\n      }\n      const uiSourceCode = project.uiSourceCodeForURL(url);\n      if (uiSourceCode) {\n        return uiSourceCode;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Resolves the source-mapped entity mapped from the given `rawLocation` if any. If the `rawLocation`\n   * does not point into a script with a source map, `null` is returned from here, while if the source\n   * map for the script is currently being loaded, a stub `UISourceCode` is returned meanwhile. Otherwise,\n   * if the script has a source map entry for the position identified by the `rawLocation`, this method\n   * will compute the location in the source-mapped file by a reverse lookup on the source map.\n   *\n   * If `rawLocation` points to a script with a source map managed by this `CompilerScriptMapping`, which\n   * is stale (because it was overridden by a more recent mapping), `null` will be returned.\n   *\n   * @param rawLocation script location.\n   * @returns the {@link Workspace.UISourceCode.UILocation} for the `rawLocation` if any.\n   */\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null {\n    const script = rawLocation.script();\n    if (!script) {\n      return null;\n    }\n\n    const {lineNumber, columnNumber} = script.rawLocationToRelativeLocation(rawLocation);\n    const stubUISourceCode = this.#stubUISourceCodes.get(script);\n    if (stubUISourceCode) {\n      return new Workspace.UISourceCode.UILocation(stubUISourceCode, lineNumber, columnNumber);\n    }\n\n    const sourceMap = this.#sourceMapManager.sourceMapForClient(script);\n    if (!sourceMap) {\n      return null;\n    }\n\n    const project = this.#sourceMapToProject.get(sourceMap);\n    if (!project) {\n      return null;\n    }\n\n    const entry = sourceMap.findEntry(lineNumber, columnNumber, rawLocation.inlineFrameIndex);\n    if (!entry || !entry.sourceURL) {\n      return null;\n    }\n\n    const uiSourceCode = project.uiSourceCodeForURL(entry.sourceURL);\n    if (!uiSourceCode) {\n      return null;\n    }\n\n    // Check that the reverse is also true and we have a binding for this `uiSourceCode`\n    // that is referred to from the `sourceMap` of the `script`.\n    if (!this.#uiSourceCodeToSourceMaps.hasValue(uiSourceCode, sourceMap)) {\n      return null;\n    }\n\n    return uiSourceCode.uiLocation(entry.sourceLineNumber, entry.sourceColumnNumber);\n  }\n\n  /**\n   * Resolves a location within a source mapped entity managed by the `CompilerScriptMapping`\n   * to its script locations. If the `uiSourceCode` does not belong to this mapping or if its\n   * mapping is stale, an empty list will be returned.\n   *\n   * A single UI location can map to multiple different {@link SDK.DebuggerModel.RawLocation}s,\n   * and these raw locations don't even need to belong to the same script (e.g. multiple bundles\n   * can reference the same shared source file in case of code splitting, and locations within\n   * this shared source file will then resolve to locations in all the bundles).\n   *\n   * @param uiSourceCode the source mapped entity.\n   * @param lineNumber the line number in terms of the {@link uiSourceCode}.\n   * @param columnNumber the column number in terms of the {@link uiSourceCode}.\n   * @returns a list of raw locations that correspond to the UI location.\n   */\n  uiLocationToRawLocations(uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number, columnNumber: number):\n      SDK.DebuggerModel.Location[] {\n    const locations = [];\n    for (const sourceMap of this.#uiSourceCodeToSourceMaps.get(uiSourceCode)) {\n      const entry = sourceMap.sourceLineMapping(uiSourceCode.url(), lineNumber, columnNumber);\n      if (!entry) {\n        continue;\n      }\n      const script = this.#sourceMapManager.clientForSourceMap(sourceMap);\n      if (!script) {\n        continue;\n      }\n      const location = script.relativeLocationToRawLocation(entry);\n      locations.push(script.debuggerModel.createRawLocation(script, location.lineNumber, location.columnNumber));\n    }\n    return locations;\n  }\n\n  uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textRange: TextUtils.TextRange.TextRange): SDK.DebuggerModel.LocationRange[]|null {\n    if (!this.#uiSourceCodeToSourceMaps.has(uiSourceCode)) {\n      return null;\n    }\n    const ranges = [];\n    for (const sourceMap of this.#uiSourceCodeToSourceMaps.get(uiSourceCode)) {\n      const script = this.#sourceMapManager.clientForSourceMap(sourceMap);\n      if (!script) {\n        continue;\n      }\n\n      for (const scriptTextRange of sourceMap.reverseMapTextRanges(uiSourceCode.url(), textRange)) {\n        const startLocation = script.relativeLocationToRawLocation(scriptTextRange.start);\n        const endLocation = script.relativeLocationToRawLocation(scriptTextRange.end);\n        const start =\n            script.debuggerModel.createRawLocation(script, startLocation.lineNumber, startLocation.columnNumber);\n        const end = script.debuggerModel.createRawLocation(script, endLocation.lineNumber, endLocation.columnNumber);\n        ranges.push({start, end});\n      }\n    }\n    return ranges;\n  }\n\n  /**\n   * Computes the set of line numbers which are source-mapped to a script within the\n   * given {@link uiSourceCode}.\n   *\n   * @param uiSourceCode the source mapped entity.\n   * @returns a set of source-mapped line numbers or `null` if the {@link uiSourceCode}\n   *         is not provided by this {@link CompilerScriptMapping} instance.\n   */\n  getMappedLines(uiSourceCode: Workspace.UISourceCode.UISourceCode): Set<number>|null {\n    if (!this.#uiSourceCodeToSourceMaps.has(uiSourceCode)) {\n      return null;\n    }\n    const mappedLines = new Set<number>();\n    for (const sourceMap of this.#uiSourceCodeToSourceMaps.get(uiSourceCode)) {\n      for (const entry of sourceMap.mappings()) {\n        if (entry.sourceURL !== uiSourceCode.url()) {\n          continue;\n        }\n        mappedLines.add(entry.sourceLineNumber);\n      }\n    }\n    return mappedLines;\n  }\n\n  /**\n   * Invoked by the {@link SDK.SourceMapManager.SourceMapManager} whenever it starts loading the\n   * source map for a given {@link SDK.Script.Script}. The `CompilerScriptMapping` will set up a\n   * {@link Workspace.UISourceCode.UISourceCode} stub for the time that the source map is being\n   * loaded to avoid showing the generated code when the DevTools front-end is stopped early (for\n   * example on a breakpoint).\n   *\n   * @param event holds the {@link SDK.Script.Script} whose source map is being loaded.\n   */\n  private sourceMapWillAttach(event: Common.EventTarget.EventTargetEvent<{client: SDK.Script.Script}>): void {\n    const {client: script} = event.data;\n    // Create stub UISourceCode for the time source mapping is being loaded.\n    this.addStubUISourceCode(script);\n    void this.#debuggerWorkspaceBinding.updateLocations(script);\n    if (Workspace.IgnoreListManager.IgnoreListManager.instance().isUserIgnoreListedURL(\n            script.sourceURL, {isContentScript: script.isContentScript()})) {\n      this.#sourceMapManager.cancelAttachSourceMap(script);\n    }\n  }\n\n  /**\n   * Invoked by the {@link SDK.SourceMapManager.SourceMapManager} after an attempt to load the\n   * source map for a given {@link SDK.Script.Script} failed. The `CompilerScriptMapping` will\n   * remove the {@link Workspace.UISourceCode.UISourceCode} stub, and from this time on won't\n   * report any mappings for the `client` script.\n   *\n   * @param event holds the {@link SDK.Script.Script} whose source map failed to load.\n   */\n  private sourceMapFailedToAttach(event: Common.EventTarget.EventTargetEvent<{client: SDK.Script.Script}>): void {\n    const {client: script} = event.data;\n    this.removeStubUISourceCode(script);\n    void this.#debuggerWorkspaceBinding.updateLocations(script);\n  }\n\n  /**\n   * Invoked by the {@link SDK.SourceMapManager.SourceMapManager} after an attempt to load the\n   * source map for a given {@link SDK.Script.Script} succeeded. The `CompilerScriptMapping` will\n   * now create {@link Workspace.UISourceCode.UISourceCode}s for all the sources mentioned in the\n   * `sourceMap`.\n   *\n   * In case of a conflict this method creates a new {@link Workspace.UISourceCode.UISourceCode}\n   * and copies over all the mappings from the other source maps that were registered for the\n   * same URL and which are compatible (agree on the content and ignore-list hint for the given\n   * URL). If they are considered incompatible, the original `UISourceCode` will simply be\n   * removed and a new mapping will be established.\n   *\n   * @param event holds the {@link SDK.Script.Script} and its {@link SDK.SourceMap.SourceMap}.\n   */\n  private sourceMapAttached(event: Common.EventTarget.EventTargetEvent<{\n    client: SDK.Script.Script,\n    sourceMap: SDK.SourceMap.SourceMap,\n  }>): void {\n    const {client: script, sourceMap} = event.data;\n    const scripts = new Set<SDK.Script.Script>([script]);\n    this.removeStubUISourceCode(script);\n\n    const target = script.target();\n    const projectId = `jsSourceMaps:${script.isContentScript() ? 'extensions' : ''}:${target.id()}`;\n    let project = this.#projects.get(projectId);\n    if (!project) {\n      const projectType = script.isContentScript() ? Workspace.Workspace.projectTypes.ContentScripts :\n                                                     Workspace.Workspace.projectTypes.Network;\n      project = new ContentProviderBasedProject(\n          this.#stubProject.workspace(), projectId, projectType, /* displayName */ '', /* isServiceProject */ false);\n      NetworkProject.setTargetForProject(project, target);\n      this.#projects.set(projectId, project);\n    }\n    this.#sourceMapToProject.set(sourceMap, project);\n\n    for (const url of sourceMap.sourceURLs()) {\n      const contentType = Common.ResourceType.resourceTypes.SourceMapScript;\n      const uiSourceCode = project.createUISourceCode(url, contentType);\n      if (sourceMap.hasIgnoreListHint(url)) {\n        uiSourceCode.markKnownThirdParty();\n      }\n      const content = sourceMap.embeddedContentByURL(url);\n      const contentProvider = content !== null ?\n          TextUtils.StaticContentProvider.StaticContentProvider.fromString(url, contentType, content) :\n          new SDK.CompilerSourceMappingContentProvider.CompilerSourceMappingContentProvider(\n              url, contentType, script.createPageResourceLoadInitiator());\n      let metadata: Workspace.UISourceCode.UISourceCodeMetadata|null = null;\n      if (content !== null) {\n        const encoder = new TextEncoder();\n        metadata = new Workspace.UISourceCode.UISourceCodeMetadata(null, encoder.encode(content).length);\n      }\n      const mimeType = Common.ResourceType.ResourceType.mimeFromURL(url) ?? contentType.canonicalMimeType();\n\n      this.#uiSourceCodeToSourceMaps.set(uiSourceCode, sourceMap);\n      NetworkProject.setInitialFrameAttribution(uiSourceCode, script.frameId);\n\n      // Check if there was already an `UISourceCode` for the given `url`, and if so, discard\n      // the previous one. While it would be possible to keep the previous one and just add\n      // the new mapping (from the `sourceMap`) to it as long as there's no conflict, this\n      // doesn't really work with the way the `BreakpointManager` and other parts of the front-end\n      // work, which only listen for additions/removals of `UISourceCode`s, since there's no\n      // notion of a 'UISourceCodeChanged` event (yet).\n      //\n      // Therefore, unless we discard any previous `UISourceCode` for the `url` and publish the\n      // new `uiSourceCode`, the `BreakpointManager` will not restore / set breakpoints in newly\n      // added scripts in case of code-splitting, since it won't find out about these new mappings.\n      // By removing and (re)adding a `UISourceCode` for the `url` we effectively force restoration\n      // of breakpoints.\n      const otherUISourceCode = project.uiSourceCodeForURL(url);\n      if (otherUISourceCode !== null) {\n        // Copy the existing source mappings from the `otherUISourceCode` over as long as\n        // they are compatible with the `sourceMap` wrt. `url`. While doing so, also clean\n        // up the `otherUISourceCode` (in particular its frame attributions).\n        for (const otherSourceMap of this.#uiSourceCodeToSourceMaps.get(otherUISourceCode)) {\n          this.#uiSourceCodeToSourceMaps.delete(otherUISourceCode, otherSourceMap);\n          const otherScript = this.#sourceMapManager.clientForSourceMap(otherSourceMap);\n          if (!otherScript) {\n            continue;\n          }\n          NetworkProject.removeFrameAttribution(otherUISourceCode, otherScript.frameId);\n          if (sourceMap.compatibleForURL(url, otherSourceMap)) {\n            this.#uiSourceCodeToSourceMaps.set(uiSourceCode, otherSourceMap);\n            NetworkProject.addFrameAttribution(uiSourceCode, otherScript.frameId);\n          }\n          scripts.add(otherScript);\n        }\n        project.removeUISourceCode(url);\n      }\n\n      project.addUISourceCodeWithProvider(uiSourceCode, contentProvider, metadata, mimeType);\n    }\n    void Promise.all([...scripts].map(script => this.#debuggerWorkspaceBinding.updateLocations(script)))\n        .then(() => this.sourceMapAttachedForTest(sourceMap));\n  }\n\n  /**\n   * Invoked by the {@link SDK.SourceMapManager.SourceMapManager} when the source map for a given\n   * {@link SDK.Script.Script} is removed, which could be either because the target is execution\n   * context was destroyed, or the user manually asked to replace the source map for a given\n   * script.\n   *\n   * @param event holds the {@link SDK.Script.Script} and {@link SDK.SourceMap.SourceMap} that\n   *              should be detached.\n   */\n  private sourceMapDetached(event: Common.EventTarget.EventTargetEvent<{\n    client: SDK.Script.Script,\n    sourceMap: SDK.SourceMap.SourceMap,\n  }>): void {\n    const {client: script, sourceMap} = event.data;\n    const project = this.#sourceMapToProject.get(sourceMap);\n    if (!project) {\n      return;\n    }\n\n    // Remove all the files in the `project` that (still) belong to the `sourceMap`.\n    // In case of conflicts or overrides (for example due to HMR), not all the files\n    // that were originally provided by the `sourceMap` might still belong to it.\n    for (const uiSourceCode of project.uiSourceCodes()) {\n      if (this.#uiSourceCodeToSourceMaps.delete(uiSourceCode, sourceMap)) {\n        NetworkProject.removeFrameAttribution(uiSourceCode, script.frameId);\n        if (!this.#uiSourceCodeToSourceMaps.has(uiSourceCode)) {\n          project.removeUISourceCode(uiSourceCode.url());\n        }\n      }\n    }\n\n    this.#sourceMapToProject.delete(sourceMap);\n    void this.#debuggerWorkspaceBinding.updateLocations(script);\n  }\n\n  scriptsForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script[] {\n    const scripts = [];\n    for (const sourceMap of this.#uiSourceCodeToSourceMaps.get(uiSourceCode)) {\n      const script = this.#sourceMapManager.clientForSourceMap(sourceMap);\n      if (script) {\n        scripts.push(script);\n      }\n    }\n    return scripts;\n  }\n\n  private sourceMapAttachedForTest(_sourceMap: SDK.SourceMap.SourceMap): void {\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    for (const project of this.#projects.values()) {\n      project.dispose();\n    }\n    this.#stubProject.dispose();\n  }\n}\n", "/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nconst UIStrings = {\n  /**\n   * @description Error message that is displayed in the Sources panel when can't be loaded.\n   */\n  unknownErrorLoadingFile: 'Unknown error loading file',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('models/bindings/ContentProviderBasedProject.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface UISourceCodeData {\n  mimeType: string;\n  metadata: Workspace.UISourceCode.UISourceCodeMetadata|null;\n  contentProvider: TextUtils.ContentProvider.ContentProvider;\n}\n\nexport class ContentProviderBasedProject extends Workspace.Workspace.ProjectStore {\n  readonly #isServiceProject: boolean;\n  readonly #uiSourceCodeToData = new WeakMap<Workspace.UISourceCode.UISourceCode, UISourceCodeData>();\n  constructor(\n      workspace: Workspace.Workspace.WorkspaceImpl, id: string, type: Workspace.Workspace.projectTypes,\n      displayName: string, isServiceProject: boolean) {\n    super(workspace, id, type, displayName);\n    this.#isServiceProject = isServiceProject;\n    workspace.addProject(this);\n  }\n\n  async requestFileContent(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<TextUtils.ContentData.ContentDataOrError> {\n    const {contentProvider} = this.#uiSourceCodeToData.get(uiSourceCode) as UISourceCodeData;\n    try {\n      return await contentProvider.requestContentData();\n    } catch (err) {\n      // TODO(rob.paveza): CRBug 1013683 - Consider propagating exceptions full-stack\n      return {\n        error: err ? String(err) : i18nString(UIStrings.unknownErrorLoadingFile),\n      };\n    }\n  }\n\n  isServiceProject(): boolean {\n    return this.#isServiceProject;\n  }\n\n  async requestMetadata(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<Workspace.UISourceCode.UISourceCodeMetadata|null> {\n    const {metadata} = this.#uiSourceCodeToData.get(uiSourceCode) as UISourceCodeData;\n    return metadata;\n  }\n\n  canSetFileContent(): boolean {\n    return false;\n  }\n\n  async setFileContent(_uiSourceCode: Workspace.UISourceCode.UISourceCode, _newContent: string, _isBase64: boolean):\n      Promise<void> {\n  }\n\n  fullDisplayName(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    let parentPath = uiSourceCode.parentURL().replace(/^(?:https?|file)\\:\\/\\//, '');\n    try {\n      parentPath = decodeURI(parentPath);\n    } catch {\n    }\n    return parentPath + '/' + uiSourceCode.displayName(true);\n  }\n\n  mimeType(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    const {mimeType} = (this.#uiSourceCodeToData.get(uiSourceCode) as UISourceCodeData);\n    return mimeType;\n  }\n\n  canRename(): boolean {\n    return false;\n  }\n\n  override rename(\n      _uiSourceCode: Workspace.UISourceCode.UISourceCode, _newName: Platform.DevToolsPath.RawPathString,\n      callback:\n          (arg0: boolean, arg1?: string|undefined, arg2?: Platform.DevToolsPath.UrlString|undefined,\n           arg3?: Common.ResourceType.ResourceType|undefined) => void): void {\n    callback(false);\n  }\n\n  override excludeFolder(_path: Platform.DevToolsPath.UrlString): void {\n  }\n\n  canExcludeFolder(_path: Platform.DevToolsPath.EncodedPathString): boolean {\n    return false;\n  }\n\n  async createFile(\n      _path: Platform.DevToolsPath.EncodedPathString, _name: string|null, _content: string,\n      _isBase64?: boolean): Promise<Workspace.UISourceCode.UISourceCode|null> {\n    return null;\n  }\n\n  canCreateFile(): boolean {\n    return false;\n  }\n\n  override deleteFile(_uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n  }\n\n  override remove(): void {\n  }\n\n  searchInFileContent(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, query: string, caseSensitive: boolean,\n      isRegex: boolean): Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    const {contentProvider} = this.#uiSourceCodeToData.get(uiSourceCode) as UISourceCodeData;\n    return contentProvider.searchInContent(query, caseSensitive, isRegex);\n  }\n\n  async findFilesMatchingSearchRequest(\n      searchConfig: Workspace.SearchConfig.SearchConfig, filesMatchingFileQuery: Workspace.UISourceCode.UISourceCode[],\n      progress: Common.Progress.Progress):\n      Promise<Map<Workspace.UISourceCode.UISourceCode, TextUtils.ContentProvider.SearchMatch[]|null>> {\n    const result = new Map();\n    progress.setTotalWork(filesMatchingFileQuery.length);\n    await Promise.all(filesMatchingFileQuery.map(searchInContent.bind(this)));\n    progress.done();\n    return result;\n\n    async function searchInContent(\n        this: ContentProviderBasedProject, uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n      let allMatchesFound = true;\n      let matches: TextUtils.ContentProvider.SearchMatch[] = [];\n      for (const query of searchConfig.queries().slice()) {\n        const searchMatches =\n            await this.searchInFileContent(uiSourceCode, query, !searchConfig.ignoreCase(), searchConfig.isRegex());\n        if (!searchMatches.length) {\n          allMatchesFound = false;\n          break;\n        }\n        matches = Platform.ArrayUtilities.mergeOrdered(\n            matches, searchMatches, TextUtils.ContentProvider.SearchMatch.comparator);\n      }\n      if (allMatchesFound) {\n        result.set(uiSourceCode, matches);\n      }\n      progress.incrementWorked(1);\n    }\n  }\n\n  override indexContent(progress: Common.Progress.Progress): void {\n    queueMicrotask(progress.done.bind(progress));\n  }\n\n  addUISourceCodeWithProvider(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      contentProvider: TextUtils.ContentProvider.ContentProvider,\n      metadata: Workspace.UISourceCode.UISourceCodeMetadata|null,\n      mimeType: string,\n      ): void {\n    this.#uiSourceCodeToData.set(uiSourceCode, {mimeType, metadata, contentProvider});\n    this.addUISourceCode(uiSourceCode);\n  }\n\n  addContentProvider(\n      url: Platform.DevToolsPath.UrlString, contentProvider: TextUtils.ContentProvider.ContentProvider,\n      mimeType: string): Workspace.UISourceCode.UISourceCode {\n    const uiSourceCode = this.createUISourceCode(url, contentProvider.contentType());\n    this.addUISourceCodeWithProvider(uiSourceCode, contentProvider, null, mimeType);\n    return uiSourceCode;\n  }\n\n  reset(): void {\n    this.removeProject();\n    this.workspace().addProject(this);\n  }\n\n  dispose(): void {\n    this.removeProject();\n  }\n}\n", "/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as Workspace from '../workspace/workspace.js';\n\nconst uiSourceCodeToAttributionMap = new WeakMap<Workspace.UISourceCode.UISourceCode, Map<Protocol.Page.FrameId, {\n                                                   frame: SDK.ResourceTreeModel.ResourceTreeFrame,\n                                                   count: number,\n                                                 }>>();\nconst projectToTargetMap = new WeakMap<Workspace.Workspace.Project, SDK.Target.Target>();\n\nlet networkProjectManagerInstance: NetworkProjectManager;\n\nexport class NetworkProjectManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private constructor() {\n    super();\n  }\n\n  static instance({forceNew}: {\n    forceNew: boolean,\n  } = {forceNew: false}): NetworkProjectManager {\n    if (!networkProjectManagerInstance || forceNew) {\n      networkProjectManagerInstance = new NetworkProjectManager();\n    }\n\n    return networkProjectManagerInstance;\n  }\n}\n\nexport const enum Events {\n  FRAME_ATTRIBUTION_ADDED = 'FrameAttributionAdded',\n  FRAME_ATTRIBUTION_REMOVED = 'FrameAttributionRemoved',\n}\n\nexport interface FrameAttributionEvent {\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  frame: SDK.ResourceTreeModel.ResourceTreeFrame;\n}\n\nexport interface EventTypes {\n  [Events.FRAME_ATTRIBUTION_ADDED]: FrameAttributionEvent;\n  [Events.FRAME_ATTRIBUTION_REMOVED]: FrameAttributionEvent;\n}\n\nexport class NetworkProject {\n  static resolveFrame(uiSourceCode: Workspace.UISourceCode.UISourceCode, frameId: Protocol.Page.FrameId):\n      SDK.ResourceTreeModel.ResourceTreeFrame|null {\n    const target = NetworkProject.targetForUISourceCode(uiSourceCode);\n    const resourceTreeModel = target?.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    return resourceTreeModel ? resourceTreeModel.frameForId(frameId) : null;\n  }\n\n  static setInitialFrameAttribution(uiSourceCode: Workspace.UISourceCode.UISourceCode, frameId: Protocol.Page.FrameId):\n      void {\n    if (!frameId) {\n      return;\n    }\n    const frame = NetworkProject.resolveFrame(uiSourceCode, frameId);\n    if (!frame) {\n      return;\n    }\n    const attribution = new Map<Protocol.Page.FrameId, {\n      frame: SDK.ResourceTreeModel.ResourceTreeFrame,\n      count: number,\n    }>();\n    attribution.set(frameId, {frame, count: 1});\n    uiSourceCodeToAttributionMap.set(uiSourceCode, attribution);\n  }\n\n  static cloneInitialFrameAttribution(\n      fromUISourceCode: Workspace.UISourceCode.UISourceCode,\n      toUISourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const fromAttribution = uiSourceCodeToAttributionMap.get(fromUISourceCode);\n    if (!fromAttribution) {\n      return;\n    }\n    const toAttribution = new Map<Protocol.Page.FrameId, {\n      frame: SDK.ResourceTreeModel.ResourceTreeFrame,\n      count: number,\n    }>();\n    for (const frameId of fromAttribution.keys()) {\n      const value = fromAttribution.get(frameId);\n      if (typeof value !== 'undefined') {\n        toAttribution.set(frameId, {frame: value.frame, count: value.count});\n      }\n    }\n    uiSourceCodeToAttributionMap.set(toUISourceCode, toAttribution);\n  }\n\n  static addFrameAttribution(uiSourceCode: Workspace.UISourceCode.UISourceCode, frameId: Protocol.Page.FrameId): void {\n    const frame = NetworkProject.resolveFrame(uiSourceCode, frameId);\n    if (!frame) {\n      return;\n    }\n    const frameAttribution = uiSourceCodeToAttributionMap.get(uiSourceCode);\n    if (!frameAttribution) {\n      return;\n    }\n    const attributionInfo = frameAttribution.get(frameId) || {frame, count: 0};\n    attributionInfo.count += 1;\n    frameAttribution.set(frameId, attributionInfo);\n    if (attributionInfo.count !== 1) {\n      return;\n    }\n\n    const data = {uiSourceCode, frame};\n    NetworkProjectManager.instance().dispatchEventToListeners(Events.FRAME_ATTRIBUTION_ADDED, data);\n  }\n\n  static removeFrameAttribution(uiSourceCode: Workspace.UISourceCode.UISourceCode, frameId: Protocol.Page.FrameId):\n      void {\n    const frameAttribution = uiSourceCodeToAttributionMap.get(uiSourceCode);\n    if (!frameAttribution) {\n      return;\n    }\n    const attributionInfo = frameAttribution.get(frameId);\n    console.assert(Boolean(attributionInfo), 'Failed to remove frame attribution for url: ' + uiSourceCode.url());\n    if (!attributionInfo) {\n      return;\n    }\n    attributionInfo.count -= 1;\n    if (attributionInfo.count > 0) {\n      return;\n    }\n    frameAttribution.delete(frameId);\n    const data = {uiSourceCode, frame: attributionInfo.frame};\n    NetworkProjectManager.instance().dispatchEventToListeners(Events.FRAME_ATTRIBUTION_REMOVED, data);\n  }\n\n  static targetForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Target.Target|null {\n    return projectToTargetMap.get(uiSourceCode.project()) || null;\n  }\n\n  static setTargetForProject(project: Workspace.Workspace.Project, target: SDK.Target.Target): void {\n    projectToTargetMap.set(project, target);\n  }\n\n  static getTargetForProject(project: Workspace.Workspace.Project): SDK.Target.Target|null {\n    return projectToTargetMap.get(project) || null;\n  }\n\n  static framesForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      SDK.ResourceTreeModel.ResourceTreeFrame[] {\n    const target = NetworkProject.targetForUISourceCode(uiSourceCode);\n    const resourceTreeModel = target?.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    const attribution = uiSourceCodeToAttributionMap.get(uiSourceCode);\n    if (!resourceTreeModel || !attribution) {\n      return [];\n    }\n    const frames = Array.from(attribution.keys()).map(frameId => resourceTreeModel.frameForId(frameId));\n    return frames.filter(frame => !!frame);\n  }\n}\n", "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Workspace from '../workspace/workspace.js';\n\nimport {\n  type LiveLocation as LiveLocationInterface,\n  type LiveLocationPool,\n  LiveLocationWithPool,\n} from './LiveLocation.js';\nimport type {ResourceMapping} from './ResourceMapping.js';\nimport {SASSSourceMapping} from './SASSSourceMapping.js';\nimport {StylesSourceMapping} from './StylesSourceMapping.js';\n\nlet cssWorkspaceBindingInstance: CSSWorkspaceBinding|undefined;\n\nexport class CSSWorkspaceBinding implements SDK.TargetManager.SDKModelObserver<SDK.CSSModel.CSSModel> {\n  readonly #resourceMapping: ResourceMapping;\n  readonly #modelToInfo: Map<SDK.CSSModel.CSSModel, ModelInfo>;\n  readonly #liveLocationPromises: Set<Promise<unknown>>;\n\n  private constructor(resourceMapping: ResourceMapping, targetManager: SDK.TargetManager.TargetManager) {\n    this.#resourceMapping = resourceMapping;\n    this.#modelToInfo = new Map();\n    targetManager.observeModels(SDK.CSSModel.CSSModel, this);\n\n    this.#liveLocationPromises = new Set();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    resourceMapping: ResourceMapping|null,\n    targetManager: SDK.TargetManager.TargetManager|null,\n  } = {forceNew: null, resourceMapping: null, targetManager: null}): CSSWorkspaceBinding {\n    const {forceNew, resourceMapping, targetManager} = opts;\n    if (!cssWorkspaceBindingInstance || forceNew) {\n      if (!resourceMapping || !targetManager) {\n        throw new Error(`Unable to create CSSWorkspaceBinding: resourceMapping and targetManager must be provided: ${\n            new Error().stack}`);\n      }\n\n      cssWorkspaceBindingInstance = new CSSWorkspaceBinding(resourceMapping, targetManager);\n    }\n\n    return cssWorkspaceBindingInstance;\n  }\n\n  static removeInstance(): void {\n    cssWorkspaceBindingInstance = undefined;\n  }\n\n  get modelToInfo(): Map<SDK.CSSModel.CSSModel, ModelInfo> {\n    return this.#modelToInfo;\n  }\n\n  private getCSSModelInfo(cssModel: SDK.CSSModel.CSSModel): ModelInfo {\n    return this.#modelToInfo.get(cssModel) as ModelInfo;\n  }\n\n  modelAdded(cssModel: SDK.CSSModel.CSSModel): void {\n    this.#modelToInfo.set(cssModel, new ModelInfo(cssModel, this.#resourceMapping));\n  }\n\n  modelRemoved(cssModel: SDK.CSSModel.CSSModel): void {\n    this.getCSSModelInfo(cssModel).dispose();\n    this.#modelToInfo.delete(cssModel);\n  }\n\n  /**\n   * The promise returned by this function is resolved once all *currently*\n   * pending LiveLocations are processed.\n   */\n  async pendingLiveLocationChangesPromise(): Promise<void> {\n    await Promise.all(this.#liveLocationPromises);\n  }\n\n  private recordLiveLocationChange(promise: Promise<unknown>): void {\n    void promise.then(() => {\n      this.#liveLocationPromises.delete(promise);\n    });\n    this.#liveLocationPromises.add(promise);\n  }\n\n  async updateLocations(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): Promise<void> {\n    const updatePromise = this.getCSSModelInfo(header.cssModel()).updateLocations(header);\n    this.recordLiveLocationChange(updatePromise);\n    await updatePromise;\n  }\n\n  createLiveLocation(\n      rawLocation: SDK.CSSModel.CSSLocation, updateDelegate: (arg0: LiveLocationInterface) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<LiveLocation> {\n    const locationPromise =\n        this.getCSSModelInfo(rawLocation.cssModel()).createLiveLocation(rawLocation, updateDelegate, locationPool);\n    this.recordLiveLocationChange(locationPromise);\n    return locationPromise;\n  }\n\n  propertyRawLocation(cssProperty: SDK.CSSProperty.CSSProperty, forName: boolean): SDK.CSSModel.CSSLocation|null {\n    const style = cssProperty.ownerStyle;\n    if (!style || style.type !== SDK.CSSStyleDeclaration.Type.Regular || !style.styleSheetId) {\n      return null;\n    }\n    const header = style.cssModel().styleSheetHeaderForId(style.styleSheetId);\n    if (!header) {\n      return null;\n    }\n\n    const range = forName ? cssProperty.nameRange() : cssProperty.valueRange();\n    if (!range) {\n      return null;\n    }\n\n    const lineNumber = range.startLine;\n    const columnNumber = range.startColumn;\n    return new SDK.CSSModel.CSSLocation(\n        header, header.lineNumberInSource(lineNumber), header.columnNumberInSource(lineNumber, columnNumber));\n  }\n\n  propertyUILocation(cssProperty: SDK.CSSProperty.CSSProperty, forName: boolean): Workspace.UISourceCode.UILocation\n      |null {\n    const rawLocation = this.propertyRawLocation(cssProperty, forName);\n    if (!rawLocation) {\n      return null;\n    }\n    return this.rawLocationToUILocation(rawLocation);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    return this.getCSSModelInfo(rawLocation.cssModel()).rawLocationToUILocation(rawLocation);\n  }\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    const rawLocations = [];\n    for (const modelInfo of this.#modelToInfo.values()) {\n      rawLocations.push(...modelInfo.uiLocationToRawLocations(uiLocation));\n    }\n    return rawLocations;\n  }\n}\n\nexport interface SourceMapping {\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null;\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[];\n}\n\nexport class ModelInfo {\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly #resourceMapping: ResourceMapping;\n  #stylesSourceMapping: StylesSourceMapping;\n  #sassSourceMapping: SASSSourceMapping;\n  readonly #locations: Platform.MapUtilities.Multimap<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, LiveLocation>;\n  readonly #unboundLocations: Platform.MapUtilities.Multimap<Platform.DevToolsPath.UrlString, LiveLocation>;\n  constructor(cssModel: SDK.CSSModel.CSSModel, resourceMapping: ResourceMapping) {\n    this.#eventListeners = [\n      cssModel.addEventListener(\n          SDK.CSSModel.Events.StyleSheetAdded,\n          event => {\n            void this.styleSheetAdded(event);\n          },\n          this),\n      cssModel.addEventListener(\n          SDK.CSSModel.Events.StyleSheetRemoved,\n          event => {\n            void this.styleSheetRemoved(event);\n          },\n          this),\n    ];\n\n    this.#resourceMapping = resourceMapping;\n    this.#stylesSourceMapping = new StylesSourceMapping(cssModel, resourceMapping.workspace);\n    const sourceMapManager = cssModel.sourceMapManager();\n    this.#sassSourceMapping = new SASSSourceMapping(cssModel.target(), sourceMapManager, resourceMapping.workspace);\n\n    this.#locations = new Platform.MapUtilities.Multimap();\n    this.#unboundLocations = new Platform.MapUtilities.Multimap();\n  }\n\n  get locations(): Platform.MapUtilities.Multimap<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, LiveLocation> {\n    return this.#locations;\n  }\n\n  async createLiveLocation(\n      rawLocation: SDK.CSSModel.CSSLocation, updateDelegate: (arg0: LiveLocationInterface) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<LiveLocation> {\n    const location = new LiveLocation(rawLocation, this, updateDelegate, locationPool);\n    const header = rawLocation.header();\n    if (header) {\n      location.setHeader(header);\n      this.#locations.set(header, location);\n      await location.update();\n    } else {\n      this.#unboundLocations.set(rawLocation.url, location);\n    }\n    return location;\n  }\n\n  disposeLocation(location: LiveLocation): void {\n    const header = location.header();\n    if (header) {\n      this.#locations.delete(header, location);\n    } else {\n      this.#unboundLocations.delete(location.url, location);\n    }\n  }\n\n  updateLocations(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): Promise<void[]> {\n    const promises = [];\n    for (const location of this.#locations.get(header)) {\n      promises.push(location.update());\n    }\n    return Promise.all(promises);\n  }\n\n  private async styleSheetAdded(\n      event: Common.EventTarget.EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>): Promise<void> {\n    const header = event.data;\n    if (!header.sourceURL) {\n      return;\n    }\n\n    const promises = [];\n    for (const location of this.#unboundLocations.get(header.sourceURL)) {\n      location.setHeader(header);\n      this.#locations.set(header, location);\n      promises.push(location.update());\n    }\n    await Promise.all(promises);\n    this.#unboundLocations.deleteAll(header.sourceURL);\n  }\n\n  private async styleSheetRemoved(\n      event: Common.EventTarget.EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>): Promise<void> {\n    const header = event.data;\n    const promises = [];\n    for (const location of this.#locations.get(header)) {\n      location.setHeader(header);\n      this.#unboundLocations.set(location.url, location);\n      promises.push(location.update());\n    }\n    await Promise.all(promises);\n    this.#locations.deleteAll(header);\n  }\n\n  addSourceMap(sourceUrl: Platform.DevToolsPath.UrlString, sourceMapUrl: Platform.DevToolsPath.UrlString): void {\n    this.#stylesSourceMapping.addSourceMap(sourceUrl, sourceMapUrl);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    let uiLocation: (Workspace.UISourceCode.UILocation|null)|null = null;\n    uiLocation = uiLocation || this.#sassSourceMapping.rawLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.#stylesSourceMapping.rawLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.#resourceMapping.cssLocationToUILocation(rawLocation);\n    return uiLocation;\n  }\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    let rawLocations = this.#sassSourceMapping.uiLocationToRawLocations(uiLocation);\n    if (rawLocations.length) {\n      return rawLocations;\n    }\n    rawLocations = this.#stylesSourceMapping.uiLocationToRawLocations(uiLocation);\n    if (rawLocations.length) {\n      return rawLocations;\n    }\n    return this.#resourceMapping.uiLocationToCSSLocations(uiLocation);\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.#stylesSourceMapping.dispose();\n    this.#sassSourceMapping.dispose();\n  }\n}\n\nexport class LiveLocation extends LiveLocationWithPool {\n  readonly url: Platform.DevToolsPath.UrlString;\n  readonly #lineNumber: number;\n  readonly #columnNumber: number;\n  readonly #info: ModelInfo;\n  headerInternal: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|null;\n  constructor(\n      rawLocation: SDK.CSSModel.CSSLocation, info: ModelInfo,\n      updateDelegate: (arg0: LiveLocationInterface) => Promise<void>, locationPool: LiveLocationPool) {\n    super(updateDelegate, locationPool);\n    this.url = rawLocation.url;\n    this.#lineNumber = rawLocation.lineNumber;\n    this.#columnNumber = rawLocation.columnNumber;\n    this.#info = info;\n    this.headerInternal = null;\n  }\n\n  header(): SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|null {\n    return this.headerInternal;\n  }\n\n  setHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|null): void {\n    this.headerInternal = header;\n  }\n\n  override async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    if (!this.headerInternal) {\n      return null;\n    }\n    const rawLocation = new SDK.CSSModel.CSSLocation(this.headerInternal, this.#lineNumber, this.#columnNumber);\n    return CSSWorkspaceBinding.instance().rawLocationToUILocation(rawLocation);\n  }\n\n  override dispose(): void {\n    super.dispose();\n    this.#info.disposeLocation(this);\n  }\n}\n", "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Workspace from '../workspace/workspace.js';\n\nexport interface LiveLocation {\n  update(): Promise<void>;\n  uiLocation(): Promise<Workspace.UISourceCode.UILocation|null>;\n  dispose(): void;\n  isDisposed(): boolean;\n}\n\nexport class LiveLocationWithPool implements LiveLocation {\n  #updateDelegate: ((arg0: LiveLocation) => Promise<void>)|null;\n  readonly #locationPool: LiveLocationPool;\n  #updatePromise: Promise<void>|null;\n\n  constructor(updateDelegate: (arg0: LiveLocation) => Promise<void>, locationPool: LiveLocationPool) {\n    this.#updateDelegate = updateDelegate;\n    this.#locationPool = locationPool;\n    this.#locationPool.add(this);\n\n    this.#updatePromise = null;\n  }\n\n  async update(): Promise<void> {\n    if (!this.#updateDelegate) {\n      return;\n    }\n    // The following is a basic scheduling algorithm, guaranteeing that\n    // {#updateDelegate} is always run atomically. That is, we always\n    // wait for an update to finish before we trigger the next run.\n    if (this.#updatePromise) {\n      await this.#updatePromise.then(() => this.update());\n    } else {\n      this.#updatePromise = this.#updateDelegate(this);\n      await this.#updatePromise;\n      this.#updatePromise = null;\n    }\n  }\n\n  async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    throw new Error('Not implemented');\n  }\n\n  dispose(): void {\n    this.#locationPool.delete(this);\n    this.#updateDelegate = null;\n  }\n\n  isDisposed(): boolean {\n    return !this.#locationPool.has(this);\n  }\n}\n\nexport class LiveLocationPool {\n  readonly #locations: Set<LiveLocation>;\n\n  constructor() {\n    this.#locations = new Set();\n  }\n\n  add(location: LiveLocation): void {\n    this.#locations.add(location);\n  }\n\n  delete(location: LiveLocation): void {\n    this.#locations.delete(location);\n  }\n\n  has(location: LiveLocation): boolean {\n    return this.#locations.has(location);\n  }\n\n  disposeAll(): void {\n    for (const location of this.#locations) {\n      location.dispose();\n    }\n  }\n}\n", "/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport {CSSWorkspaceBinding, type SourceMapping} from './CSSWorkspaceBinding.js';\nimport {NetworkProject} from './NetworkProject.js';\n\nexport class SASSSourceMapping implements SourceMapping {\n  readonly #sourceMapManager: SDK.SourceMapManager.SourceMapManager<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>;\n  readonly #project: ContentProviderBasedProject;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly #bindings: Map<string, Binding>;\n\n  constructor(\n      target: SDK.Target.Target,\n      sourceMapManager: SDK.SourceMapManager.SourceMapManager<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>,\n      workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.#sourceMapManager = sourceMapManager;\n    this.#project = new ContentProviderBasedProject(\n        workspace, 'cssSourceMaps:' + target.id(), Workspace.Workspace.projectTypes.Network, '',\n        false /* isServiceProject */);\n    NetworkProject.setTargetForProject(this.#project, target);\n\n    this.#bindings = new Map();\n\n    this.#eventListeners = [\n      this.#sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapAttached, this.sourceMapAttached, this),\n      this.#sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapDetached, this.sourceMapDetached, this),\n    ];\n  }\n\n  private sourceMapAttachedForTest(_sourceMap: SDK.SourceMap.SourceMap|null): void {\n  }\n\n  private async sourceMapAttached(\n      event: Common.EventTarget\n          .EventTargetEvent<{client: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, sourceMap: SDK.SourceMap.SourceMap}>):\n      Promise<void> {\n    const header = event.data.client;\n    const sourceMap = event.data.sourceMap;\n    const project = this.#project;\n    const bindings = this.#bindings;\n    for (const sourceURL of sourceMap.sourceURLs()) {\n      let binding = bindings.get(sourceURL);\n      if (!binding) {\n        binding = new Binding(project, sourceURL, header.createPageResourceLoadInitiator());\n        bindings.set(sourceURL, binding);\n      }\n      binding.addSourceMap(sourceMap, header.frameId);\n    }\n    await CSSWorkspaceBinding.instance().updateLocations(header);\n    this.sourceMapAttachedForTest(sourceMap);\n  }\n\n  private async sourceMapDetached(\n      event: Common.EventTarget\n          .EventTargetEvent<{client: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, sourceMap: SDK.SourceMap.SourceMap}>):\n      Promise<void> {\n    const header = event.data.client;\n    const sourceMap = event.data.sourceMap;\n    const bindings = this.#bindings;\n    for (const sourceURL of sourceMap.sourceURLs()) {\n      const binding = bindings.get(sourceURL);\n      if (binding) {\n        binding.removeSourceMap(sourceMap, header.frameId);\n        if (!binding.getUiSourceCode()) {\n          bindings.delete(sourceURL);\n        }\n      }\n    }\n    await CSSWorkspaceBinding.instance().updateLocations(header);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    const header = rawLocation.header();\n    if (!header) {\n      return null;\n    }\n    const sourceMap = this.#sourceMapManager.sourceMapForClient(header);\n    if (!sourceMap) {\n      return null;\n    }\n    let {lineNumber, columnNumber} = rawLocation;\n    // If the source map maps the origin (line:0, column:0) but the CSS header is inline (in a HTML doc),\n    // then adjust the line and column numbers.\n    if (sourceMap.mapsOrigin() && header.isInline) {\n      lineNumber -= header.startLine;\n      if (lineNumber === 0) {\n        columnNumber -= header.startColumn;\n      }\n    }\n    const entry = sourceMap.findEntry(lineNumber, columnNumber);\n    if (!entry || !entry.sourceURL) {\n      return null;\n    }\n    const uiSourceCode = this.#project.uiSourceCodeForURL(entry.sourceURL);\n    if (!uiSourceCode) {\n      return null;\n    }\n    return uiSourceCode.uiLocation(entry.sourceLineNumber, entry.sourceColumnNumber);\n  }\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    // TODO(crbug.com/1153123): Revisit the `#columnNumber || 0` and also preserve `undefined` for source maps?\n    const {uiSourceCode, lineNumber, columnNumber = 0} = uiLocation;\n    const binding = uiSourceCodeToBinding.get(uiSourceCode);\n    if (!binding) {\n      return [];\n    }\n    const locations: SDK.CSSModel.CSSLocation[] = [];\n    for (const sourceMap of binding.getReferringSourceMaps()) {\n      const entries = sourceMap.findReverseEntries(uiSourceCode.url(), lineNumber, columnNumber);\n      const header = this.#sourceMapManager.clientForSourceMap(sourceMap);\n      if (header) {\n        locations.push(\n            ...entries.map(entry => new SDK.CSSModel.CSSLocation(header, entry.lineNumber, entry.columnNumber)));\n      }\n    }\n    return locations;\n  }\n\n  static uiSourceOrigin(uiSourceCode: Workspace.UISourceCode.UISourceCode): Platform.DevToolsPath.UrlString[] {\n    const binding = uiSourceCodeToBinding.get(uiSourceCode);\n    if (binding) {\n      return binding.getReferringSourceMaps().map(sourceMap => sourceMap.compiledURL());\n    }\n    return [];\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.#project.dispose();\n  }\n}\n\nconst uiSourceCodeToBinding = new WeakMap<Workspace.UISourceCode.UISourceCode, Binding>();\n\nclass Binding {\n  readonly #project: ContentProviderBasedProject;\n  readonly #url: Platform.DevToolsPath.UrlString;\n  readonly #initiator: SDK.PageResourceLoader.PageResourceLoadInitiator;\n  referringSourceMaps: SDK.SourceMap.SourceMap[];\n  uiSourceCode: Workspace.UISourceCode.UISourceCode|null;\n\n  constructor(\n      project: ContentProviderBasedProject, url: Platform.DevToolsPath.UrlString,\n      initiator: SDK.PageResourceLoader.PageResourceLoadInitiator) {\n    this.#project = project;\n    this.#url = url;\n    this.#initiator = initiator;\n\n    this.referringSourceMaps = [];\n    this.uiSourceCode = null;\n  }\n\n  private recreateUISourceCodeIfNeeded(frameId: Protocol.Page.FrameId): void {\n    const sourceMap = this.referringSourceMaps[this.referringSourceMaps.length - 1];\n\n    const contentType = Common.ResourceType.resourceTypes.SourceMapStyleSheet;\n    const embeddedContent = sourceMap.embeddedContentByURL(this.#url);\n    const contentProvider = embeddedContent !== null ?\n        TextUtils.StaticContentProvider.StaticContentProvider.fromString(this.#url, contentType, embeddedContent) :\n        new SDK.CompilerSourceMappingContentProvider.CompilerSourceMappingContentProvider(\n            this.#url, contentType, this.#initiator);\n    const newUISourceCode = this.#project.createUISourceCode(this.#url, contentType);\n    uiSourceCodeToBinding.set(newUISourceCode, this);\n    const mimeType = Common.ResourceType.ResourceType.mimeFromURL(this.#url) || contentType.canonicalMimeType();\n    const metadata = typeof embeddedContent === 'string' ?\n        new Workspace.UISourceCode.UISourceCodeMetadata(null, embeddedContent.length) :\n        null;\n\n    if (this.uiSourceCode) {\n      NetworkProject.cloneInitialFrameAttribution(this.uiSourceCode, newUISourceCode);\n      this.#project.removeUISourceCode(this.uiSourceCode.url());\n    } else {\n      NetworkProject.setInitialFrameAttribution(newUISourceCode, frameId);\n    }\n    this.uiSourceCode = newUISourceCode;\n    this.#project.addUISourceCodeWithProvider(this.uiSourceCode, contentProvider, metadata, mimeType);\n  }\n\n  addSourceMap(sourceMap: SDK.SourceMap.SourceMap, frameId: Protocol.Page.FrameId): void {\n    if (this.uiSourceCode) {\n      NetworkProject.addFrameAttribution(this.uiSourceCode, frameId);\n    }\n    this.referringSourceMaps.push(sourceMap);\n    this.recreateUISourceCodeIfNeeded(frameId);\n  }\n\n  removeSourceMap(sourceMap: SDK.SourceMap.SourceMap, frameId: Protocol.Page.FrameId): void {\n    const uiSourceCode = (this.uiSourceCode as Workspace.UISourceCode.UISourceCode);\n    NetworkProject.removeFrameAttribution(uiSourceCode, frameId);\n    const lastIndex = this.referringSourceMaps.lastIndexOf(sourceMap);\n    if (lastIndex !== -1) {\n      this.referringSourceMaps.splice(lastIndex, 1);\n    }\n    if (!this.referringSourceMaps.length) {\n      this.#project.removeUISourceCode(uiSourceCode.url());\n      this.uiSourceCode = null;\n    } else {\n      this.recreateUISourceCodeIfNeeded(frameId);\n    }\n  }\n\n  getReferringSourceMaps(): SDK.SourceMap.SourceMap[] {\n    return this.referringSourceMaps;\n  }\n\n  getUiSourceCode(): Workspace.UISourceCode.UISourceCode|null {\n    return this.uiSourceCode;\n  }\n}\n", "/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport type {SourceMapping} from './CSSWorkspaceBinding.js';\nimport {NetworkProject} from './NetworkProject.js';\nimport {metadataForURL} from './ResourceUtils.js';\n\nconst uiSourceCodeToStyleMap = new WeakMap<Workspace.UISourceCode.UISourceCode, StyleFile>();\n\nexport class StylesSourceMapping implements SourceMapping {\n  #cssModel: SDK.CSSModel.CSSModel;\n  #project: ContentProviderBasedProject;\n  readonly #styleFiles = new Map<string, StyleFile>();\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n\n  constructor(cssModel: SDK.CSSModel.CSSModel, workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.#cssModel = cssModel;\n    const target = this.#cssModel.target();\n    this.#project = new ContentProviderBasedProject(\n        workspace, 'css:' + target.id(), Workspace.Workspace.projectTypes.Network, '', false /* isServiceProject */);\n    NetworkProject.setTargetForProject(this.#project, target);\n\n    this.#eventListeners = [\n      this.#cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetAdded, this.styleSheetAdded, this),\n      this.#cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetRemoved, this.styleSheetRemoved, this),\n      this.#cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.styleSheetChanged, this),\n    ];\n  }\n\n  addSourceMap(sourceUrl: Platform.DevToolsPath.UrlString, sourceMapUrl: Platform.DevToolsPath.UrlString): void {\n    this.#styleFiles.get(sourceUrl)?.addSourceMap(sourceUrl, sourceMapUrl);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    const header = rawLocation.header();\n    if (!header || !this.acceptsHeader(header)) {\n      return null;\n    }\n    const styleFile = this.#styleFiles.get(header.resourceURL());\n    if (!styleFile) {\n      return null;\n    }\n    let lineNumber = rawLocation.lineNumber;\n    let columnNumber: undefined|number = rawLocation.columnNumber;\n    if (header.isInline && header.hasSourceURL) {\n      lineNumber -= header.lineNumberInSource(0);\n      const headerColumnNumber = header.columnNumberInSource(lineNumber, 0);\n      if (typeof headerColumnNumber === 'undefined') {\n        columnNumber = headerColumnNumber;\n      } else {\n        columnNumber -= headerColumnNumber;\n      }\n    }\n    return styleFile.getUiSourceCode().uiLocation(lineNumber, columnNumber);\n  }\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    const styleFile = uiSourceCodeToStyleMap.get(uiLocation.uiSourceCode);\n    if (!styleFile) {\n      return [];\n    }\n    const rawLocations = [];\n    for (const header of styleFile.getHeaders()) {\n      let lineNumber = uiLocation.lineNumber;\n      let columnNumber = uiLocation.columnNumber;\n      if (header.isInline && header.hasSourceURL) {\n        // TODO(crbug.com/1153123): Revisit the `#columnNumber || 0` and also preserve `undefined` for source maps?\n        columnNumber = header.columnNumberInSource(lineNumber, uiLocation.columnNumber || 0);\n        lineNumber = header.lineNumberInSource(lineNumber);\n      }\n      rawLocations.push(new SDK.CSSModel.CSSLocation(header, lineNumber, columnNumber));\n    }\n    return rawLocations;\n  }\n\n  private acceptsHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): boolean {\n    if (header.isConstructedByNew()) {\n      return false;\n    }\n    if (header.isInline && !header.hasSourceURL && header.origin !== 'inspector') {\n      return false;\n    }\n    if (!header.resourceURL()) {\n      return false;\n    }\n    return true;\n  }\n\n  private styleSheetAdded(event: Common.EventTarget.EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>):\n      void {\n    const header = event.data;\n    if (!this.acceptsHeader(header)) {\n      return;\n    }\n\n    const url = header.resourceURL();\n    let styleFile = this.#styleFiles.get(url);\n    if (!styleFile) {\n      styleFile = new StyleFile(this.#cssModel, this.#project, header);\n      this.#styleFiles.set(url, styleFile);\n    } else {\n      styleFile.addHeader(header);\n    }\n  }\n\n  private styleSheetRemoved(event: Common.EventTarget.EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>):\n      void {\n    const header = event.data;\n    if (!this.acceptsHeader(header)) {\n      return;\n    }\n    const url = header.resourceURL();\n    const styleFile = this.#styleFiles.get(url);\n    if (styleFile) {\n      if (styleFile.getHeaders().size === 1) {\n        styleFile.dispose();\n        this.#styleFiles.delete(url);\n      } else {\n        styleFile.removeHeader(header);\n      }\n    }\n  }\n\n  private styleSheetChanged(event: Common.EventTarget.EventTargetEvent<SDK.CSSModel.StyleSheetChangedEvent>): void {\n    const header = this.#cssModel.styleSheetHeaderForId(event.data.styleSheetId);\n    if (!header || !this.acceptsHeader(header)) {\n      return;\n    }\n    const styleFile = this.#styleFiles.get(header.resourceURL());\n    if (styleFile) {\n      styleFile.styleSheetChanged(header);\n    }\n  }\n\n  dispose(): void {\n    for (const styleFile of this.#styleFiles.values()) {\n      styleFile.dispose();\n    }\n    this.#styleFiles.clear();\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.#project.removeProject();\n  }\n}\n\nexport class StyleFile implements TextUtils.ContentProvider.ContentProvider {\n  readonly #cssModel: SDK.CSSModel.CSSModel;\n  readonly #project: ContentProviderBasedProject;\n  headers: Set<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>;\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly #throttler = new Common.Throttler.Throttler(200);\n  #terminated = false;\n  #isAddingRevision?: boolean;\n  #isUpdatingHeaders?: boolean;\n\n  constructor(\n      cssModel: SDK.CSSModel.CSSModel, project: ContentProviderBasedProject,\n      header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader) {\n    this.#cssModel = cssModel;\n    this.#project = project;\n    this.headers = new Set([header]);\n\n    const target = cssModel.target();\n\n    const url = header.resourceURL();\n    const metadata = metadataForURL(target, header.frameId, url);\n\n    this.uiSourceCode = this.#project.createUISourceCode(url, header.contentType());\n    uiSourceCodeToStyleMap.set(this.uiSourceCode, this);\n    NetworkProject.setInitialFrameAttribution(this.uiSourceCode, header.frameId);\n    this.#project.addUISourceCodeWithProvider(this.uiSourceCode, this, metadata, 'text/css');\n\n    this.#eventListeners = [\n      this.uiSourceCode.addEventListener(\n          Workspace.UISourceCode.Events.WorkingCopyChanged, this.workingCopyChanged, this),\n      this.uiSourceCode.addEventListener(\n          Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this),\n    ];\n  }\n\n  addHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): void {\n    this.headers.add(header);\n    NetworkProject.addFrameAttribution(this.uiSourceCode, header.frameId);\n  }\n\n  removeHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): void {\n    this.headers.delete(header);\n    NetworkProject.removeFrameAttribution(this.uiSourceCode, header.frameId);\n  }\n\n  styleSheetChanged(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): void {\n    console.assert(this.headers.has(header));\n    if (this.#isUpdatingHeaders || !this.headers.has(header)) {\n      return;\n    }\n    const mirrorContentBound = this.mirrorContent.bind(this, header, true /* majorChange */);\n    void this.#throttler.schedule(mirrorContentBound, Common.Throttler.Scheduling.DEFAULT);\n  }\n\n  private workingCopyCommitted(): void {\n    if (this.#isAddingRevision) {\n      return;\n    }\n    const mirrorContentBound = this.mirrorContent.bind(this, this.uiSourceCode, true /* majorChange */);\n    void this.#throttler.schedule(mirrorContentBound, Common.Throttler.Scheduling.AS_SOON_AS_POSSIBLE);\n  }\n\n  private workingCopyChanged(): void {\n    if (this.#isAddingRevision) {\n      return;\n    }\n    const mirrorContentBound = this.mirrorContent.bind(this, this.uiSourceCode, false /* majorChange */);\n    void this.#throttler.schedule(mirrorContentBound, Common.Throttler.Scheduling.DEFAULT);\n  }\n\n  private async mirrorContent(fromProvider: TextUtils.ContentProvider.ContentProvider, majorChange: boolean):\n      Promise<void> {\n    if (this.#terminated) {\n      this.styleFileSyncedForTest();\n      return;\n    }\n\n    let newContent: string|null = null;\n    if (fromProvider === this.uiSourceCode) {\n      newContent = this.uiSourceCode.workingCopy();\n    } else {\n      newContent = TextUtils.ContentData.ContentData.textOr(await fromProvider.requestContentData(), null);\n    }\n\n    if (newContent === null || this.#terminated) {\n      this.styleFileSyncedForTest();\n      return;\n    }\n\n    if (fromProvider !== this.uiSourceCode) {\n      this.#isAddingRevision = true;\n      this.uiSourceCode.setWorkingCopy(newContent);\n      this.#isAddingRevision = false;\n    }\n\n    this.#isUpdatingHeaders = true;\n    const promises = [];\n    for (const header of this.headers) {\n      if (header === fromProvider) {\n        continue;\n      }\n      promises.push(this.#cssModel.setStyleSheetText(header.id, newContent, majorChange));\n    }\n    // ------ ASYNC ------\n    await Promise.all(promises);\n    this.#isUpdatingHeaders = false;\n    this.styleFileSyncedForTest();\n  }\n\n  private styleFileSyncedForTest(): void {\n  }\n\n  dispose(): void {\n    if (this.#terminated) {\n      return;\n    }\n    this.#terminated = true;\n    this.#project.removeUISourceCode(this.uiSourceCode.url());\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    console.assert(this.headers.size > 0);\n    return this.#firstHeader().originalContentProvider().contentURL();\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    console.assert(this.headers.size > 0);\n    return this.#firstHeader().originalContentProvider().contentType();\n  }\n\n  requestContentData(): Promise<TextUtils.ContentData.ContentDataOrError> {\n    console.assert(this.headers.size > 0);\n    return this.#firstHeader().originalContentProvider().requestContentData();\n  }\n\n  searchInContent(query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    console.assert(this.headers.size > 0);\n    return this.#firstHeader().originalContentProvider().searchInContent(query, caseSensitive, isRegex);\n  }\n\n  #firstHeader(): SDK.CSSStyleSheetHeader.CSSStyleSheetHeader {\n    console.assert(this.headers.size > 0);\n    return this.headers.values().next().value as SDK.CSSStyleSheetHeader.CSSStyleSheetHeader;\n  }\n\n  getHeaders(): Set<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader> {\n    return this.headers;\n  }\n\n  getUiSourceCode(): Workspace.UISourceCode.UISourceCode {\n    return this.uiSourceCode;\n  }\n\n  addSourceMap(sourceUrl: Platform.DevToolsPath.UrlString, sourceMapUrl: Platform.DevToolsPath.UrlString): void {\n    const sourceMapManager = this.#cssModel.sourceMapManager();\n    this.headers.forEach(header => {\n      sourceMapManager.detachSourceMap(header);\n      sourceMapManager.attachSourceMap(header, sourceUrl, sourceMapUrl);\n    });\n  }\n}\n", "// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2007 Matt Lilek (pewtermoose@gmail.com).\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nexport function resourceForURL(url: Platform.DevToolsPath.UrlString): SDK.Resource.Resource|null {\n  return SDK.ResourceTreeModel.ResourceTreeModel.resourceForURL(url);\n}\n\nexport function displayNameForURL(url: Platform.DevToolsPath.UrlString): string {\n  if (!url) {\n    return '';\n  }\n\n  const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url);\n  if (uiSourceCode) {\n    return uiSourceCode.displayName();\n  }\n\n  const resource = resourceForURL(url);\n  if (resource) {\n    return resource.displayName;\n  }\n\n  const inspectedURL = SDK.TargetManager.TargetManager.instance().inspectedURL();\n  if (!inspectedURL) {\n    return Platform.StringUtilities.trimURL(url, '');\n  }\n\n  const parsedURL = Common.ParsedURL.ParsedURL.fromString(inspectedURL);\n  if (!parsedURL) {\n    return url;\n  }\n\n  const lastPathComponent = parsedURL.lastPathComponent;\n  const index = inspectedURL.indexOf(lastPathComponent);\n  if (index !== -1 && index + lastPathComponent.length === inspectedURL.length) {\n    const baseURL = inspectedURL.substring(0, index);\n    if (url.startsWith(baseURL) && url.length > index) {\n      return url.substring(index);\n    }\n  }\n\n  const displayName = Platform.StringUtilities.trimURL(url, parsedURL.host);\n  return displayName === '/' ? parsedURL.host + '/' : displayName;\n}\n\nexport function metadataForURL(\n    target: SDK.Target.Target, frameId: Protocol.Page.FrameId,\n    url: Platform.DevToolsPath.UrlString): Workspace.UISourceCode.UISourceCodeMetadata|null {\n  const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n  if (!resourceTreeModel) {\n    return null;\n  }\n  const frame = resourceTreeModel.frameForId(frameId);\n  if (!frame) {\n    return null;\n  }\n  return resourceMetadata(frame.resourceForURL(url));\n}\n\nexport function resourceMetadata(resource: SDK.Resource.Resource|null): Workspace.UISourceCode.UISourceCodeMetadata|\n    null {\n  if (!resource || (typeof resource.contentSize() !== 'number' && !resource.lastModified())) {\n    return null;\n  }\n  return new Workspace.UISourceCode.UISourceCodeMetadata(resource.lastModified(), resource.contentSize());\n}\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {Chrome} from '../../../extension-api/ExtensionAPI.js';\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport type {DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\nimport {NetworkProject} from './NetworkProject.js';\n\nconst UIStrings = {\n  /**\n   * @description Error message that is displayed in the Console when language #plugins report errors\n   * @example {File not found} PH1\n   */\n  errorInDebuggerLanguagePlugin: 'Error in debugger language plugin: {PH1}',\n  /**\n   * @description Status message that is shown in the Console when debugging information is being\n   *loaded. The 2nd and 3rd placeholders are URLs.\n   * @example {C/C++ DevTools Support (DWARF)} PH1\n   * @example {http://web.dev/file.wasm} PH2\n   * @example {http://web.dev/file.wasm.debug.wasm} PH3\n   */\n  loadingDebugSymbolsForVia: '[{PH1}] Loading debug symbols for {PH2} (via {PH3})…',\n  /**\n   * @description Status message that is shown in the Console when debugging information is being loaded\n   * @example {C/C++ DevTools Support (DWARF)} PH1\n   * @example {http://web.dev/file.wasm} PH2\n   */\n  loadingDebugSymbolsFor: '[{PH1}] Loading debug symbols for {PH2}…',\n  /**\n   * @description Warning message that is displayed in the Console when debugging information was loaded, but no source files were found\n   * @example {C/C++ DevTools Support (DWARF)} PH1\n   * @example {http://web.dev/file.wasm} PH2\n   */\n  loadedDebugSymbolsForButDidnt: '[{PH1}] Loaded debug symbols for {PH2}, but didn\\'t find any source files',\n  /**\n   * @description Status message that is shown in the Console when debugging information is successfully loaded\n   * @example {C/C++ DevTools Support (DWARF)} PH1\n   * @example {http://web.dev/file.wasm} PH2\n   * @example {42} PH3\n   */\n  loadedDebugSymbolsForFound: '[{PH1}] Loaded debug symbols for {PH2}, found {PH3} source file(s)',\n  /**\n   * @description Error message that is displayed in the Console when debugging information cannot be loaded\n   * @example {C/C++ DevTools Support (DWARF)} PH1\n   * @example {http://web.dev/file.wasm} PH2\n   * @example {File not found} PH3\n   */\n  failedToLoadDebugSymbolsFor: '[{PH1}] Failed to load debug symbols for {PH2} ({PH3})',\n  /**\n   * @description Error message that is displayed in UI debugging information cannot be found for a call frame\n   * @example {main} PH1\n   */\n  failedToLoadDebugSymbolsForFunction: 'No debug information for function \"{PH1}\"',\n  /**\n   * @description Error message that is displayed in UI when a file needed for debugging information for a call frame is missing\n   * @example {mainp.debug.wasm.dwp} PH1\n   */\n  debugSymbolsIncomplete: 'The debug information for function {PH1} is incomplete',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('models/bindings/DebuggerLanguagePlugins.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * Generates the raw module ID for a script, which is used\n * to uniquely identify the debugging data for a script on\n * the responsible language #plugin.\n *\n * @param script the unique raw module ID for the script.\n */\nfunction rawModuleIdForScript(script: SDK.Script.Script): string {\n  return `${script.sourceURL}@${script.hash}`;\n}\n\nfunction getRawLocation(callFrame: SDK.DebuggerModel.CallFrame): Chrome.DevTools.RawLocation {\n  const {script} = callFrame;\n  return {\n    rawModuleId: rawModuleIdForScript(script),\n    codeOffset: callFrame.location().columnNumber - (script.codeOffset() || 0),\n    inlineFrameIndex: callFrame.inlineFrameIndex,\n  };\n}\n\nclass FormattingError extends Error {\n  exception: SDK.RemoteObject.RemoteObject;\n  exceptionDetails: Protocol.Runtime.ExceptionDetails;\n  constructor(exception: SDK.RemoteObject.RemoteObject, exceptionDetails: Protocol.Runtime.ExceptionDetails) {\n    const {description} = exceptionDetails.exception || {};\n    super(description || exceptionDetails.text);\n    this.exception = exception;\n    this.exceptionDetails = exceptionDetails;\n  }\n\n  static makeLocal(callFrame: SDK.DebuggerModel.CallFrame, message: string): FormattingError {\n    const exception: Protocol.Runtime.RemoteObject = {\n      type: Protocol.Runtime.RemoteObjectType.Object,\n      subtype: Protocol.Runtime.RemoteObjectSubtype.Error,\n      description: message,\n    };\n    const exceptionDetails: Protocol.Runtime\n        .ExceptionDetails = {text: 'Uncaught', exceptionId: -1, columnNumber: 0, lineNumber: 0, exception};\n    const errorObject = callFrame.debuggerModel.runtimeModel().createRemoteObject(exception);\n    return new FormattingError(errorObject, exceptionDetails);\n  }\n}\n\nclass NamespaceObject extends SDK.RemoteObject.LocalJSONObject {\n  override get description(): string {\n    return this.type;\n  }\n\n  override get type(): string {\n    return 'namespace';\n  }\n}\n\nasync function getRemoteObject(callFrame: SDK.DebuggerModel.CallFrame, object: Chrome.DevTools.ForeignObject):\n    Promise<Protocol.Runtime.RemoteObject> {\n  if (!/^(local|global|operand)$/.test(object.valueClass)) {\n    return {type: Protocol.Runtime.RemoteObjectType.Undefined};\n  }\n  const index = Number(object.index);\n  const expression = `${object.valueClass}s[${index}]`;\n  const response = await callFrame.debuggerModel.agent.invoke_evaluateOnCallFrame({\n    callFrameId: callFrame.id,\n    expression,\n    silent: true,\n    generatePreview: true,\n    throwOnSideEffect: true,\n  });\n  if (response.getError() || response.exceptionDetails) {\n    return {type: Protocol.Runtime.RemoteObjectType.Undefined};\n  }\n  return response.result;\n}\n\nasync function wrapRemoteObject(\n    callFrame: SDK.DebuggerModel.CallFrame, object: Chrome.DevTools.RemoteObject|Chrome.DevTools.ForeignObject,\n    plugin: DebuggerLanguagePlugin): Promise<SDK.RemoteObject.RemoteObject> {\n  if (object.type === 'reftype') {\n    const obj = await getRemoteObject(callFrame, object);\n    return callFrame.debuggerModel.runtimeModel().createRemoteObject(obj);\n  }\n  return new ExtensionRemoteObject(callFrame, object, plugin);\n}\n\nclass SourceScopeRemoteObject extends SDK.RemoteObject.RemoteObjectImpl {\n  variables: Chrome.DevTools.Variable[];\n  #callFrame: SDK.DebuggerModel.CallFrame;\n  #plugin: DebuggerLanguagePlugin;\n  stopId: StopId;\n\n  constructor(callFrame: SDK.DebuggerModel.CallFrame, stopId: StopId, plugin: DebuggerLanguagePlugin) {\n    super(callFrame.debuggerModel.runtimeModel(), undefined, 'object', undefined, null);\n    this.variables = [];\n    this.#callFrame = callFrame;\n    this.#plugin = plugin;\n    this.stopId = stopId;\n  }\n\n  override async doGetProperties(_ownProperties: boolean, accessorPropertiesOnly: boolean, _generatePreview: boolean):\n      Promise<SDK.RemoteObject.GetPropertiesResult> {\n    if (accessorPropertiesOnly) {\n      return {properties: [], internalProperties: []} as SDK.RemoteObject.GetPropertiesResult;\n    }\n\n    const properties = [];\n    const namespaces: Record<string, SDK.RemoteObject.RemoteObject> = {};\n\n    function makeProperty(name: string, obj: SDK.RemoteObject.RemoteObject): SDK.RemoteObject.RemoteObjectProperty {\n      return new SDK.RemoteObject.RemoteObjectProperty(\n          name, obj,\n          /* enumerable=*/ false, /* writable=*/ false, /* isOwn=*/ true, /* wasThrown=*/ false);\n    }\n\n    for (const variable of this.variables) {\n      let sourceVar: SDK.RemoteObject.RemoteObject|undefined;\n      try {\n        const evalResult = await this.#plugin.evaluate(variable.name, getRawLocation(this.#callFrame), this.stopId);\n        sourceVar = evalResult ? await wrapRemoteObject(this.#callFrame, evalResult, this.#plugin) :\n                                 new SDK.RemoteObject.LocalJSONObject(undefined);\n      } catch (e) {\n        console.warn(e);\n        sourceVar = new SDK.RemoteObject.LocalJSONObject(undefined);\n      }\n      if (variable.nestedName && variable.nestedName.length > 1) {\n        let parent: Record<string, SDK.RemoteObject.RemoteObject> = namespaces;\n        for (let index = 0; index < variable.nestedName.length - 1; index++) {\n          const nestedName = variable.nestedName[index];\n          let child: NamespaceObject|SDK.RemoteObject.RemoteObject = parent[nestedName];\n          if (!child) {\n            child = new NamespaceObject({});\n            parent[nestedName] = child;\n          }\n          parent = child.value;\n        }\n        const name = variable.nestedName[variable.nestedName.length - 1];\n        parent[name] = sourceVar;\n      } else {\n        properties.push(makeProperty(variable.name, sourceVar));\n      }\n    }\n\n    for (const namespace in namespaces) {\n      properties.push(makeProperty(namespace, (namespaces[namespace])));\n    }\n\n    return {properties, internalProperties: []};\n  }\n}\n\nexport class SourceScope implements SDK.DebuggerModel.ScopeChainEntry {\n  readonly #callFrameInternal: SDK.DebuggerModel.CallFrame;\n  readonly #typeInternal: string;\n  readonly #typeNameInternal: string;\n  readonly #iconInternal: string|undefined;\n  readonly #objectInternal: SourceScopeRemoteObject;\n  constructor(\n      callFrame: SDK.DebuggerModel.CallFrame, stopId: StopId, type: string, typeName: string, icon: string|undefined,\n      plugin: DebuggerLanguagePlugin) {\n    if (icon && new URL(icon).protocol !== 'data:') {\n      throw new Error('The icon must be a data:-URL');\n    }\n    this.#callFrameInternal = callFrame;\n    this.#typeInternal = type;\n    this.#typeNameInternal = typeName;\n    this.#iconInternal = icon;\n    this.#objectInternal = new SourceScopeRemoteObject(callFrame, stopId, plugin);\n  }\n\n  async getVariableValue(name: string): Promise<SDK.RemoteObject.RemoteObject|null> {\n    for (let v = 0; v < this.#objectInternal.variables.length; ++v) {\n      if (this.#objectInternal.variables[v].name !== name) {\n        continue;\n      }\n      const properties = await this.#objectInternal.getAllProperties(false, false);\n      if (!properties.properties) {\n        continue;\n      }\n      const {value} = properties.properties[v];\n      if (value) {\n        return value;\n      }\n    }\n    return null;\n  }\n\n  callFrame(): SDK.DebuggerModel.CallFrame {\n    return this.#callFrameInternal;\n  }\n\n  type(): string {\n    return this.#typeInternal;\n  }\n\n  typeName(): string {\n    return this.#typeNameInternal;\n  }\n\n  name(): string|undefined {\n    return undefined;\n  }\n\n  range(): null {\n    return null;\n  }\n\n  object(): SourceScopeRemoteObject {\n    return this.#objectInternal;\n  }\n\n  description(): string {\n    return '';\n  }\n\n  icon(): string|undefined {\n    return this.#iconInternal;\n  }\n\n  extraProperties(): SDK.RemoteObject.RemoteObjectProperty[] {\n    return [];\n  }\n}\n\nexport class ExtensionRemoteObject extends SDK.RemoteObject.RemoteObject {\n  private readonly extensionObject: Chrome.DevTools.RemoteObject;\n  private readonly plugin: DebuggerLanguagePlugin;\n  readonly callFrame: SDK.DebuggerModel.CallFrame;\n  constructor(\n      callFrame: SDK.DebuggerModel.CallFrame, extensionObject: Chrome.DevTools.RemoteObject,\n      plugin: DebuggerLanguagePlugin) {\n    super();\n    this.extensionObject = extensionObject;\n    this.plugin = plugin;\n    this.callFrame = callFrame;\n  }\n\n  get linearMemoryAddress(): number|undefined {\n    return this.extensionObject.linearMemoryAddress;\n  }\n\n  get linearMemorySize(): number|undefined {\n    return this.extensionObject.linearMemorySize;\n  }\n\n  override get objectId(): Protocol.Runtime.RemoteObjectId|undefined {\n    return this.extensionObject.objectId as Protocol.Runtime.RemoteObjectId;\n  }\n\n  override get type(): string {\n    if (this.extensionObject.type === 'array' || this.extensionObject.type === 'null') {\n      return 'object';\n    }\n    return this.extensionObject.type;\n  }\n\n  override get subtype(): string|undefined {\n    if (this.extensionObject.type === 'array' || this.extensionObject.type === 'null') {\n      return this.extensionObject.type;\n    }\n    return undefined;\n  }\n\n  override get value(): unknown {\n    return this.extensionObject.value;\n  }\n\n  override unserializableValue(): string|undefined {\n    return undefined;\n  }\n\n  override get description(): string|undefined {\n    return this.extensionObject.description;\n  }\n\n  override set description(_description: string|undefined) {\n  }\n\n  override get hasChildren(): boolean {\n    return this.extensionObject.hasChildren;\n  }\n\n  override get preview(): Protocol.Runtime.ObjectPreview|undefined {\n    return undefined;\n  }\n\n  override get className(): string|null {\n    return this.extensionObject.className ?? null;\n  }\n\n  override arrayLength(): number {\n    return 0;\n  }\n\n  override arrayBufferByteLength(): number {\n    return 0;\n  }\n\n  override getOwnProperties(_generatePreview: boolean, _nonIndexedPropertiesOnly?: boolean):\n      Promise<SDK.RemoteObject.GetPropertiesResult> {\n    return this.getAllProperties(false, _generatePreview, _nonIndexedPropertiesOnly);\n  }\n\n  override async getAllProperties(\n      _accessorPropertiesOnly: boolean, _generatePreview: boolean,\n      _nonIndexedPropertiesOnly?: boolean): Promise<SDK.RemoteObject.GetPropertiesResult> {\n    const {objectId} = this.extensionObject;\n    if (objectId) {\n      assertNotNullOrUndefined(this.plugin.getProperties);\n      const extensionObjectProperties = await this.plugin.getProperties(objectId);\n      const properties = await Promise.all(extensionObjectProperties.map(\n          async p => new SDK.RemoteObject.RemoteObjectProperty(\n              p.name, await wrapRemoteObject(this.callFrame, p.value, this.plugin))));\n      return {properties, internalProperties: null};\n    }\n\n    return {properties: null, internalProperties: null};\n  }\n\n  override release(): void {\n    const {objectId} = this.extensionObject;\n    if (objectId) {\n      assertNotNullOrUndefined(this.plugin.releaseObject);\n      void this.plugin.releaseObject(objectId);\n    }\n  }\n\n  override debuggerModel(): SDK.DebuggerModel.DebuggerModel {\n    return this.callFrame.debuggerModel;\n  }\n\n  override runtimeModel(): SDK.RuntimeModel.RuntimeModel {\n    return this.callFrame.debuggerModel.runtimeModel();\n  }\n\n  override isLinearMemoryInspectable(): boolean {\n    return this.extensionObject.linearMemoryAddress !== undefined;\n  }\n}\n\nexport type StopId = bigint;\nexport class DebuggerLanguagePluginManager implements\n    SDK.TargetManager.SDKModelObserver<SDK.DebuggerModel.DebuggerModel> {\n  readonly #workspace: Workspace.Workspace.WorkspaceImpl;\n  readonly #debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  #plugins: DebuggerLanguagePlugin[];\n  readonly #debuggerModelToData: Map<SDK.DebuggerModel.DebuggerModel, ModelData>;\n  readonly #rawModuleHandles: Map<string, {\n    rawModuleId: string,\n    plugin: DebuggerLanguagePlugin,\n    scripts: SDK.Script.Script[],\n    addRawModulePromise:\n        Promise<Platform.DevToolsPath.UrlString[]|{missingSymbolFiles: SDK.DebuggerModel.MissingDebugFiles[]}>,\n  }>;\n  private readonly callFrameByStopId = new Map<StopId, SDK.DebuggerModel.CallFrame>();\n  private readonly stopIdByCallFrame = new Map<SDK.DebuggerModel.CallFrame, StopId>();\n  private nextStopId: StopId = 0n;\n\n  constructor(\n      targetManager: SDK.TargetManager.TargetManager, workspace: Workspace.Workspace.WorkspaceImpl,\n      debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.#workspace = workspace;\n    this.#debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    this.#plugins = [];\n\n    this.#debuggerModelToData = new Map();\n    targetManager.observeModels(SDK.DebuggerModel.DebuggerModel, this);\n\n    this.#rawModuleHandles = new Map();\n  }\n\n  private async evaluateOnCallFrame(\n      callFrame: SDK.DebuggerModel.CallFrame, options: SDK.RuntimeModel.EvaluationOptions): Promise<{\n    object: SDK.RemoteObject.RemoteObject,\n    exceptionDetails: Protocol.Runtime.ExceptionDetails|undefined,\n  }|{\n    error: string,\n  }|null> {\n    const {script} = callFrame;\n    const {expression, returnByValue, throwOnSideEffect} = options;\n    const {plugin} = await this.rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n    const location = getRawLocation(callFrame);\n    const sourceLocations = await plugin.rawLocationToSourceLocation(location);\n    if (sourceLocations.length === 0) {\n      return null;\n    }\n\n    if (returnByValue) {\n      return {error: 'Cannot return by value'};\n    }\n    if (throwOnSideEffect) {\n      return {error: 'Cannot guarantee side-effect freedom'};\n    }\n\n    try {\n      const object = await plugin.evaluate(expression, location, this.stopIdForCallFrame(callFrame));\n      if (object) {\n        return {object: await wrapRemoteObject(callFrame, object, plugin), exceptionDetails: undefined};\n      }\n      return {object: new SDK.RemoteObject.LocalJSONObject(undefined), exceptionDetails: undefined};\n    } catch (error) {\n      if (error instanceof FormattingError) {\n        const {exception: object, exceptionDetails} = error;\n        return {object, exceptionDetails};\n      }\n      const {exception: object, exceptionDetails} = FormattingError.makeLocal(callFrame, error.message);\n      return {object, exceptionDetails};\n    }\n  }\n\n  stopIdForCallFrame(callFrame: SDK.DebuggerModel.CallFrame): StopId {\n    let stopId = this.stopIdByCallFrame.get(callFrame);\n    if (stopId !== undefined) {\n      return stopId;\n    }\n\n    stopId = this.nextStopId++;\n    this.stopIdByCallFrame.set(callFrame, stopId);\n    this.callFrameByStopId.set(stopId, callFrame);\n    return stopId;\n  }\n\n  callFrameForStopId(stopId: StopId): SDK.DebuggerModel.CallFrame|undefined {\n    return this.callFrameByStopId.get(stopId);\n  }\n\n  private expandCallFrames(callFrames: SDK.DebuggerModel.CallFrame[]): Promise<SDK.DebuggerModel.CallFrame[]> {\n    return Promise\n        .all(callFrames.map(async callFrame => {\n          const functionInfo = await this.getFunctionInfo(callFrame.script, callFrame.location());\n          if (functionInfo) {\n            if ('frames' in functionInfo && functionInfo.frames.length) {\n              return functionInfo.frames.map(({name}, index) => callFrame.createVirtualCallFrame(index, name));\n            }\n            if ('missingSymbolFiles' in functionInfo && functionInfo.missingSymbolFiles.length) {\n              const resources = functionInfo.missingSymbolFiles;\n              const details = i18nString(UIStrings.debugSymbolsIncomplete, {PH1: callFrame.functionName});\n              callFrame.missingDebugInfoDetails = {details, resources};\n            } else {\n              callFrame.missingDebugInfoDetails = {\n                details: i18nString(UIStrings.failedToLoadDebugSymbolsForFunction, {PH1: callFrame.functionName}),\n                resources: [],\n              };\n            }\n          }\n          return callFrame;\n        }))\n        .then(callFrames => callFrames.flat());\n  }\n\n  modelAdded(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    this.#debuggerModelToData.set(debuggerModel, new ModelData(debuggerModel, this.#workspace));\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this.globalObjectCleared, this);\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, this.parsedScriptSource, this);\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.DebuggerResumed, this.debuggerResumed, this);\n    debuggerModel.setEvaluateOnCallFrameCallback(this.evaluateOnCallFrame.bind(this));\n    debuggerModel.setExpandCallFramesCallback(this.expandCallFrames.bind(this));\n  }\n\n  modelRemoved(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    debuggerModel.removeEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this.globalObjectCleared, this);\n    debuggerModel.removeEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, this.parsedScriptSource, this);\n    debuggerModel.removeEventListener(SDK.DebuggerModel.Events.DebuggerResumed, this.debuggerResumed, this);\n    debuggerModel.setEvaluateOnCallFrameCallback(null);\n    debuggerModel.setExpandCallFramesCallback(null);\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      modelData.dispose();\n      this.#debuggerModelToData.delete(debuggerModel);\n    }\n    this.#rawModuleHandles.forEach((rawModuleHandle, rawModuleId) => {\n      const scripts = rawModuleHandle.scripts.filter(script => script.debuggerModel !== debuggerModel);\n      if (scripts.length === 0) {\n        rawModuleHandle.plugin.removeRawModule(rawModuleId).catch(error => {\n          Common.Console.Console.instance().error(\n              i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}), /* show=*/ false);\n        });\n        this.#rawModuleHandles.delete(rawModuleId);\n      } else {\n        rawModuleHandle.scripts = scripts;\n      }\n    });\n  }\n\n  private globalObjectCleared(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    const debuggerModel = event.data;\n    this.modelRemoved(debuggerModel);\n    this.modelAdded(debuggerModel);\n  }\n\n  addPlugin(plugin: DebuggerLanguagePlugin): void {\n    this.#plugins.push(plugin);\n    for (const debuggerModel of this.#debuggerModelToData.keys()) {\n      for (const script of debuggerModel.scripts()) {\n        if (this.hasPluginForScript(script)) {\n          continue;\n        }\n        this.parsedScriptSource({data: script});\n      }\n    }\n  }\n\n  removePlugin(plugin: DebuggerLanguagePlugin): void {\n    this.#plugins = this.#plugins.filter(p => p !== plugin);\n    const scripts = new Set<SDK.Script.Script>();\n    this.#rawModuleHandles.forEach((rawModuleHandle, rawModuleId) => {\n      if (rawModuleHandle.plugin !== plugin) {\n        return;\n      }\n      rawModuleHandle.scripts.forEach(script => scripts.add(script));\n      this.#rawModuleHandles.delete(rawModuleId);\n    });\n    for (const script of scripts) {\n      const modelData = (this.#debuggerModelToData.get(script.debuggerModel) as ModelData);\n      modelData.removeScript(script);\n\n      // Let's see if we have another #plugin that's happy to\n      // take this orphaned script now. This is important to\n      // get right, since the same #plugin might race during\n      // unregister/register and we might already have the\n      // new instance of the #plugin added before we remove\n      // the previous instance.\n      this.parsedScriptSource({data: script});\n    }\n  }\n\n  hasPluginForScript(script: SDK.Script.Script): boolean {\n    const rawModuleId = rawModuleIdForScript(script);\n    const rawModuleHandle = this.#rawModuleHandles.get(rawModuleId);\n    return rawModuleHandle?.scripts.includes(script) ?? false;\n  }\n\n  /**\n   * Returns the responsible language #plugin and the raw module ID for a script.\n   *\n   * This ensures that the `addRawModule` call finishes first such that the\n   * caller can immediately issue calls to the returned #plugin without the\n   * risk of racing with the `addRawModule` call. The returned #plugin will be\n   * set to undefined to indicate that there's no #plugin for the script.\n   */\n  private async rawModuleIdAndPluginForScript(script: SDK.Script.Script): Promise<{\n    rawModuleId: string,\n    plugin: DebuggerLanguagePlugin|null,\n  }> {\n    const rawModuleId = rawModuleIdForScript(script);\n    const rawModuleHandle = this.#rawModuleHandles.get(rawModuleId);\n    if (rawModuleHandle) {\n      await rawModuleHandle.addRawModulePromise;\n      if (rawModuleHandle === this.#rawModuleHandles.get(rawModuleId)) {\n        return {rawModuleId, plugin: rawModuleHandle.plugin};\n      }\n    }\n    return {rawModuleId, plugin: null};\n  }\n\n  uiSourceCodeForURL(debuggerModel: SDK.DebuggerModel.DebuggerModel, url: Platform.DevToolsPath.UrlString):\n      Workspace.UISourceCode.UISourceCode|null {\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      return modelData.getProject().uiSourceCodeForURL(url);\n    }\n    return null;\n  }\n\n  async rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location):\n      Promise<Workspace.UISourceCode.UILocation|null> {\n    const script = rawLocation.script();\n    if (!script) {\n      return null;\n    }\n    const {rawModuleId, plugin} = await this.rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n\n    const pluginLocation = {\n      rawModuleId,\n      // RawLocation.#columnNumber is the byte offset in the full raw wasm module. Plugins expect the offset in the code\n      // section, so subtract the offset of the code section in the module here.\n      codeOffset: rawLocation.columnNumber - (script.codeOffset() || 0),\n      inlineFrameIndex: rawLocation.inlineFrameIndex,\n    };\n\n    try {\n      const sourceLocations = await plugin.rawLocationToSourceLocation(pluginLocation);\n      for (const sourceLocation of sourceLocations) {\n        const uiSourceCode = this.uiSourceCodeForURL(\n            script.debuggerModel, sourceLocation.sourceFileURL as Platform.DevToolsPath.UrlString);\n        if (!uiSourceCode) {\n          continue;\n        }\n        // Absence of column information is indicated by the value `-1` in talking to language #plugins.\n        return uiSourceCode.uiLocation(\n            sourceLocation.lineNumber, sourceLocation.columnNumber >= 0 ? sourceLocation.columnNumber : undefined);\n      }\n    } catch (error) {\n      Common.Console.Console.instance().error(\n          i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}), /* show=*/ false);\n    }\n    return null;\n  }\n\n  uiLocationToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber: number|undefined = -1): Promise<Array<{\n    start: SDK.DebuggerModel.Location,\n    end: SDK.DebuggerModel.Location,\n  }>|null> {\n    const locationPromises: Array<Promise<Array<{\n      start: SDK.DebuggerModel.Location,\n      end: SDK.DebuggerModel.Location,\n    }>>> = [];\n    this.scriptsForUISourceCode(uiSourceCode).forEach(script => {\n      const rawModuleId = rawModuleIdForScript(script);\n      const rawModuleHandle = this.#rawModuleHandles.get(rawModuleId);\n      if (!rawModuleHandle) {\n        return;\n      }\n      const {plugin} = rawModuleHandle;\n      locationPromises.push(getLocations(rawModuleId, plugin, script));\n    });\n    if (locationPromises.length === 0) {\n      return Promise.resolve(null);\n    }\n\n    return Promise.all(locationPromises).then(locations => locations.flat()).catch(error => {\n      Common.Console.Console.instance().error(\n          i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}), /* show=*/ false);\n      return null;\n    });\n\n    async function getLocations(\n        rawModuleId: string, plugin: DebuggerLanguagePlugin, script: SDK.Script.Script): Promise<Array<{\n      start: SDK.DebuggerModel.Location,\n      end: SDK.DebuggerModel.Location,\n    }>> {\n      const pluginLocation = {rawModuleId, sourceFileURL: uiSourceCode.url(), lineNumber, columnNumber};\n\n      const rawLocations = await plugin.sourceLocationToRawLocation(pluginLocation);\n      if (!rawLocations) {\n        return [];\n      }\n      return rawLocations.map(\n          m => ({\n            start: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.startOffset) + (script.codeOffset() || 0)),\n            end: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.endOffset) + (script.codeOffset() || 0)),\n          }));\n    }\n  }\n\n  async uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber?: number): Promise<SDK.DebuggerModel.Location[]|null> {\n    const locationRanges = await this.uiLocationToRawLocationRanges(uiSourceCode, lineNumber, columnNumber);\n    if (!locationRanges) {\n      return null;\n    }\n    return locationRanges.map(({start}) => start);\n  }\n\n  async uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textRange: TextUtils.TextRange.TextRange): Promise<SDK.DebuggerModel.LocationRange[]|null> {\n    const locationRangesPromises = [];\n    for (let line = textRange.startLine; line <= textRange.endLine; ++line) {\n      locationRangesPromises.push(this.uiLocationToRawLocationRanges(uiSourceCode, line));\n    }\n    const ranges = [];\n    for (const locationRanges of await Promise.all(locationRangesPromises)) {\n      if (locationRanges === null) {\n        return null;\n      }\n      for (const range of locationRanges) {\n        const [startLocation, endLocation] = await Promise.all([\n          this.rawLocationToUILocation(range.start),\n          this.rawLocationToUILocation(range.end),\n        ]);\n        if (startLocation === null || endLocation === null) {\n          continue;\n        }\n        // Report all ranges that somehow intersect with the `textRange`. It's the\n        // responsibility of the caller to filter / clamp these ranges appropriately.\n        const overlap = textRange.intersection(new TextUtils.TextRange.TextRange(\n            startLocation.lineNumber, startLocation.columnNumber ?? 0, endLocation.lineNumber,\n            endLocation.columnNumber ?? Infinity));\n        if (!overlap.isEmpty()) {\n          ranges.push(range);\n        }\n      }\n    }\n    return ranges;\n  }\n\n  scriptsForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script[] {\n    for (const modelData of this.#debuggerModelToData.values()) {\n      const scripts = modelData.uiSourceCodeToScripts.get(uiSourceCode);\n      if (scripts) {\n        return scripts;\n      }\n    }\n    return [];\n  }\n\n  setDebugInfoURL(script: SDK.Script.Script, externalURL: Platform.DevToolsPath.UrlString): void {\n    if (this.hasPluginForScript(script)) {\n      return;\n    }\n    script.debugSymbols = {type: Protocol.Debugger.DebugSymbolsType.ExternalDWARF, externalURL};\n    this.parsedScriptSource({data: script});\n    void script.debuggerModel.setDebugInfoURL(script, externalURL);\n  }\n\n  private parsedScriptSource(event: Common.EventTarget.EventTargetEvent<SDK.Script.Script>): void {\n    const script = event.data;\n    if (!script.sourceURL) {\n      return;\n    }\n\n    for (const plugin of this.#plugins) {\n      if (!plugin.handleScript(script)) {\n        continue;\n      }\n      const rawModuleId = rawModuleIdForScript(script);\n      let rawModuleHandle = this.#rawModuleHandles.get(rawModuleId);\n      if (!rawModuleHandle) {\n        const sourceFileURLsPromise = (async () => {\n          const console = Common.Console.Console.instance();\n          const url = script.sourceURL;\n          const symbolsUrl = (script.debugSymbols?.externalURL) || '';\n          if (symbolsUrl) {\n            console.log(i18nString(UIStrings.loadingDebugSymbolsForVia, {PH1: plugin.name, PH2: url, PH3: symbolsUrl}));\n          } else {\n            console.log(i18nString(UIStrings.loadingDebugSymbolsFor, {PH1: plugin.name, PH2: url}));\n          }\n          try {\n            const code =\n                (!symbolsUrl && Common.ParsedURL.schemeIs(url, 'wasm:')) ? await script.getWasmBytecode() : undefined;\n            const addModuleResult = await plugin.addRawModule(rawModuleId, symbolsUrl, {url, code});\n            // Check that the handle isn't stale by now. This works because the code that assigns to\n            // `rawModuleHandle` below will run before this code because of the `await` in the preceding\n            // line. This is primarily to avoid logging the message below, which would give the developer\n            // the misleading information that we're done, while in reality it was a stale call that finished.\n            if (rawModuleHandle !== this.#rawModuleHandles.get(rawModuleId)) {\n              return [];\n            }\n            if ('missingSymbolFiles' in addModuleResult) {\n              const initiator = plugin.createPageResourceLoadInitiator();\n              const missingSymbolFiles = addModuleResult.missingSymbolFiles.map(resource => {\n                const resourceUrl = resource as Platform.DevToolsPath.UrlString;\n                return {resourceUrl, initiator};\n              });\n              return {missingSymbolFiles};\n            }\n            const sourceFileURLs = addModuleResult as Platform.DevToolsPath.UrlString[];\n            if (sourceFileURLs.length === 0) {\n              console.warn(i18nString(UIStrings.loadedDebugSymbolsForButDidnt, {PH1: plugin.name, PH2: url}));\n            } else {\n              console.log(i18nString(\n                  UIStrings.loadedDebugSymbolsForFound, {PH1: plugin.name, PH2: url, PH3: sourceFileURLs.length}));\n            }\n            return sourceFileURLs;\n          } catch (error) {\n            console.error(\n                i18nString(UIStrings.failedToLoadDebugSymbolsFor, {PH1: plugin.name, PH2: url, PH3: error.message}),\n                /* show=*/ false);\n            this.#rawModuleHandles.delete(rawModuleId);\n            return [];\n          }\n        })();\n        rawModuleHandle = {rawModuleId, plugin, scripts: [script], addRawModulePromise: sourceFileURLsPromise};\n        this.#rawModuleHandles.set(rawModuleId, rawModuleHandle);\n      } else {\n        rawModuleHandle.scripts.push(script);\n      }\n\n      // Wait for the addRawModule call to finish and\n      // update the #project. It's important to check\n      // for the DebuggerModel again, which may disappear\n      // in the meantime...\n      void rawModuleHandle.addRawModulePromise.then(sourceFileURLs => {\n        if (!('missingSymbolFiles' in sourceFileURLs)) {\n          // The script might have disappeared meanwhile...\n          if (script.debuggerModel.scriptForId(script.scriptId) === script) {\n            const modelData = this.#debuggerModelToData.get(script.debuggerModel);\n            if (modelData) {  // The DebuggerModel could have disappeared meanwhile...\n              modelData.addSourceFiles(script, sourceFileURLs);\n              void this.#debuggerWorkspaceBinding.updateLocations(script);\n            }\n          }\n        }\n      });\n      return;\n    }\n  }\n\n  private debuggerResumed(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    const resumedFrames =\n        Array.from(this.callFrameByStopId.values()).filter(callFrame => callFrame.debuggerModel === event.data);\n    for (const callFrame of resumedFrames) {\n      const stopId = this.stopIdByCallFrame.get(callFrame);\n      assertNotNullOrUndefined(stopId);\n      this.stopIdByCallFrame.delete(callFrame);\n      this.callFrameByStopId.delete(stopId);\n    }\n  }\n\n  getSourcesForScript(script: SDK.Script.Script):\n      Promise<Platform.DevToolsPath.UrlString[]|{missingSymbolFiles: SDK.DebuggerModel.MissingDebugFiles[]}|undefined> {\n    const rawModuleId = rawModuleIdForScript(script);\n    const rawModuleHandle = this.#rawModuleHandles.get(rawModuleId);\n    if (rawModuleHandle) {\n      return rawModuleHandle.addRawModulePromise;\n    }\n    return Promise.resolve(undefined);\n  }\n\n  async resolveScopeChain(callFrame: SDK.DebuggerModel.CallFrame): Promise<SourceScope[]|null> {\n    const script = callFrame.script;\n    const {rawModuleId, plugin} = await this.rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n\n    const location = {\n      rawModuleId,\n      codeOffset: callFrame.location().columnNumber - (script.codeOffset() || 0),\n      inlineFrameIndex: callFrame.inlineFrameIndex,\n    };\n\n    const stopId = this.stopIdForCallFrame(callFrame);\n\n    try {\n      const sourceMapping = await plugin.rawLocationToSourceLocation(location);\n      if (sourceMapping.length === 0) {\n        return null;\n      }\n      const scopes = new Map<string, SourceScope>();\n      const variables = await plugin.listVariablesInScope(location);\n      for (const variable of variables || []) {\n        let scope = scopes.get(variable.scope);\n        if (!scope) {\n          const {type, typeName, icon} = await plugin.getScopeInfo(variable.scope);\n          scope = new SourceScope(callFrame, stopId, type, typeName, icon, plugin);\n          scopes.set(variable.scope, scope);\n        }\n        scope.object().variables.push(variable);\n      }\n      return Array.from(scopes.values());\n    } catch (error) {\n      Common.Console.Console.instance().error(\n          i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}), /* show=*/ false);\n      return null;\n    }\n  }\n\n  async getFunctionInfo(script: SDK.Script.Script, location: SDK.DebuggerModel.Location):\n      Promise<{frames: Chrome.DevTools.FunctionInfo[], missingSymbolFiles: SDK.DebuggerModel.MissingDebugFiles[]}|\n              {frames: Chrome.DevTools.FunctionInfo[]}|{missingSymbolFiles: SDK.DebuggerModel.MissingDebugFiles[]}|\n              null> {\n    const {rawModuleId, plugin} = await this.rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n\n    const rawLocation: Chrome.DevTools.RawLocation = {\n      rawModuleId,\n      codeOffset: location.columnNumber - (script.codeOffset() || 0),\n      inlineFrameIndex: 0,\n    };\n\n    try {\n      const functionInfo = await plugin.getFunctionInfo(rawLocation);\n      if ('missingSymbolFiles' in functionInfo) {\n        const initiator = plugin.createPageResourceLoadInitiator();\n        const missingSymbolFiles = functionInfo.missingSymbolFiles.map(resource => {\n          const resourceUrl = resource as Platform.DevToolsPath.UrlString;\n          return {resourceUrl, initiator};\n        });\n        return {missingSymbolFiles, ...('frames' in functionInfo && {frames: functionInfo.frames})};\n      }\n      return functionInfo;\n    } catch (error) {\n      Common.Console.Console.instance().warn(i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return {frames: []};\n    }\n  }\n\n  async getInlinedFunctionRanges(rawLocation: SDK.DebuggerModel.Location): Promise<Array<{\n    start: SDK.DebuggerModel.Location,\n    end: SDK.DebuggerModel.Location,\n  }>> {\n    const script = rawLocation.script();\n    if (!script) {\n      return [];\n    }\n    const {rawModuleId, plugin} = await this.rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return [];\n    }\n\n    const pluginLocation = {\n      rawModuleId,\n      // RawLocation.#columnNumber is the byte offset in the full raw wasm module. Plugins expect the offset in the code\n      // section, so subtract the offset of the code section in the module here.\n      codeOffset: rawLocation.columnNumber - (script.codeOffset() || 0),\n    };\n\n    try {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // @ts-expect-error\n      const locations = await plugin.getInlinedFunctionRanges(pluginLocation);\n      return locations.map(\n          m => ({\n            start: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.startOffset) + (script.codeOffset() || 0)),\n            end: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.endOffset) + (script.codeOffset() || 0)),\n          }));\n    } catch (error) {\n      Common.Console.Console.instance().warn(i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return [];\n    }\n  }\n\n  async getInlinedCalleesRanges(rawLocation: SDK.DebuggerModel.Location): Promise<Array<{\n    start: SDK.DebuggerModel.Location,\n    end: SDK.DebuggerModel.Location,\n  }>> {\n    const script = rawLocation.script();\n    if (!script) {\n      return [];\n    }\n    const {rawModuleId, plugin} = await this.rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return [];\n    }\n\n    const pluginLocation = {\n      rawModuleId,\n      // RawLocation.#columnNumber is the byte offset in the full raw wasm module. Plugins expect the offset in the code\n      // section, so subtract the offset of the code section in the module here.\n      codeOffset: rawLocation.columnNumber - (script.codeOffset() || 0),\n    };\n\n    try {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // @ts-expect-error\n      const locations = await plugin.getInlinedCalleesRanges(pluginLocation);\n      return locations.map(\n          m => ({\n            start: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.startOffset) + (script.codeOffset() || 0)),\n            end: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.endOffset) + (script.codeOffset() || 0)),\n          }));\n    } catch (error) {\n      Common.Console.Console.instance().warn(i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return [];\n    }\n  }\n\n  async getMappedLines(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<Set<number>|null> {\n    const rawModuleIds =\n        await Promise.all(this.scriptsForUISourceCode(uiSourceCode).map(s => this.rawModuleIdAndPluginForScript(s)));\n\n    let mappedLines: Set<number>|null = null;\n    for (const {rawModuleId, plugin} of rawModuleIds) {\n      if (!plugin) {\n        continue;\n      }\n      const lines = await plugin.getMappedLines(rawModuleId, uiSourceCode.url());\n\n      if (lines === undefined) {\n        continue;\n      }\n      if (mappedLines === null) {\n        mappedLines = new Set(lines);\n      } else {\n        lines.forEach(l => (mappedLines as Set<number>).add(l));\n      }\n    }\n    return mappedLines;\n  }\n}\n\nclass ModelData {\n  project: ContentProviderBasedProject;\n  readonly uiSourceCodeToScripts: Map<Workspace.UISourceCode.UISourceCode, SDK.Script.Script[]>;\n  constructor(debuggerModel: SDK.DebuggerModel.DebuggerModel, workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.project = new ContentProviderBasedProject(\n        workspace, 'language_plugins::' + debuggerModel.target().id(), Workspace.Workspace.projectTypes.Network, '',\n        false /* isServiceProject */);\n    NetworkProject.setTargetForProject(this.project, debuggerModel.target());\n\n    this.uiSourceCodeToScripts = new Map();\n  }\n\n  addSourceFiles(script: SDK.Script.Script, urls: Platform.DevToolsPath.UrlString[]): void {\n    const initiator = script.createPageResourceLoadInitiator();\n    for (const url of urls) {\n      let uiSourceCode = this.project.uiSourceCodeForURL(url);\n      if (!uiSourceCode) {\n        uiSourceCode = this.project.createUISourceCode(url, Common.ResourceType.resourceTypes.SourceMapScript);\n        NetworkProject.setInitialFrameAttribution(uiSourceCode, script.frameId);\n\n        // Bind the uiSourceCode to the script first before we add the\n        // uiSourceCode to the #project and thereby notify the rest of\n        // the system about the new source file.\n        // https://crbug.com/1150295 is an example where the breakpoint\n        // resolution logic kicks in right after adding the uiSourceCode\n        // and at that point we already need to have the mapping in place\n        // otherwise we will not get the breakpoint right.\n        this.uiSourceCodeToScripts.set(uiSourceCode, [script]);\n\n        const contentProvider = new SDK.CompilerSourceMappingContentProvider.CompilerSourceMappingContentProvider(\n            url, Common.ResourceType.resourceTypes.SourceMapScript, initiator);\n        const mimeType = Common.ResourceType.ResourceType.mimeFromURL(url) || 'text/javascript';\n        this.project.addUISourceCodeWithProvider(uiSourceCode, contentProvider, null, mimeType);\n      } else {\n        // The same uiSourceCode can be provided by different scripts,\n        // but we don't expect that to happen frequently.\n        const scripts = (this.uiSourceCodeToScripts.get(uiSourceCode) as SDK.Script.Script[]);\n        if (!scripts.includes(script)) {\n          scripts.push(script);\n        }\n      }\n    }\n  }\n\n  removeScript(script: SDK.Script.Script): void {\n    this.uiSourceCodeToScripts.forEach((scripts, uiSourceCode) => {\n      scripts = scripts.filter(s => s !== script);\n      if (scripts.length === 0) {\n        this.uiSourceCodeToScripts.delete(uiSourceCode);\n        this.project.removeUISourceCode(uiSourceCode.url());\n      } else {\n        this.uiSourceCodeToScripts.set(uiSourceCode, scripts);\n      }\n    });\n  }\n\n  dispose(): void {\n    this.project.dispose();\n  }\n\n  getProject(): ContentProviderBasedProject {\n    return this.project;\n  }\n}\n\nexport interface DebuggerLanguagePlugin extends Chrome.DevTools.LanguageExtensionPlugin {\n  name: string;\n  handleScript(script: SDK.Script.Script): boolean;\n  createPageResourceLoadInitiator(): SDK.PageResourceLoader.PageResourceLoadInitiator;\n}\n", "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport type * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {CompilerScriptMapping} from './CompilerScriptMapping.js';\nimport {DebuggerLanguagePluginManager} from './DebuggerLanguagePlugins.js';\nimport {DefaultScriptMapping} from './DefaultScriptMapping.js';\nimport {type LiveLocation, type LiveLocationPool, LiveLocationWithPool} from './LiveLocation.js';\nimport {NetworkProject} from './NetworkProject.js';\nimport type {ResourceMapping} from './ResourceMapping.js';\nimport {type ResourceScriptFile, ResourceScriptMapping} from './ResourceScriptMapping.js';\n\nlet debuggerWorkspaceBindingInstance: DebuggerWorkspaceBinding|undefined;\n\nexport class DebuggerWorkspaceBinding implements SDK.TargetManager.SDKModelObserver<SDK.DebuggerModel.DebuggerModel> {\n  readonly resourceMapping: ResourceMapping;\n  readonly #debuggerModelToData: Map<SDK.DebuggerModel.DebuggerModel, ModelData>;\n  readonly #liveLocationPromises: Set<Promise<void|Location|StackTraceTopFrameLocation|null>>;\n  readonly pluginManager: DebuggerLanguagePluginManager;\n\n  private constructor(\n      resourceMapping: ResourceMapping, targetManager: SDK.TargetManager.TargetManager,\n      ignoreListManager: Workspace.IgnoreListManager.IgnoreListManager) {\n    this.resourceMapping = resourceMapping;\n\n    this.#debuggerModelToData = new Map();\n    targetManager.addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.GlobalObjectCleared, this.globalObjectCleared, this);\n    targetManager.addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerResumed, this.debuggerResumed, this);\n    targetManager.observeModels(SDK.DebuggerModel.DebuggerModel, this);\n    ignoreListManager.addEventListener(\n        Workspace.IgnoreListManager.Events.IGNORED_SCRIPT_RANGES_UPDATED, event => this.updateLocations(event.data));\n\n    this.#liveLocationPromises = new Set();\n\n    this.pluginManager = new DebuggerLanguagePluginManager(targetManager, resourceMapping.workspace, this);\n  }\n\n  setFunctionRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      ranges: SDK.SourceMapFunctionRanges.NamedFunctionRange[]): void {\n    for (const modelData of this.#debuggerModelToData.values()) {\n      modelData.compilerMapping.setFunctionRanges(uiSourceCode, ranges);\n    }\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    resourceMapping: ResourceMapping|null,\n    targetManager: SDK.TargetManager.TargetManager|null,\n    ignoreListManager: Workspace.IgnoreListManager.IgnoreListManager|null,\n  } = {forceNew: null, resourceMapping: null, targetManager: null, ignoreListManager: null}): DebuggerWorkspaceBinding {\n    const {forceNew, resourceMapping, targetManager, ignoreListManager} = opts;\n    if (!debuggerWorkspaceBindingInstance || forceNew) {\n      if (!resourceMapping || !targetManager || !ignoreListManager) {\n        throw new Error(\n            `Unable to create DebuggerWorkspaceBinding: resourceMapping, targetManager and IgnoreLIstManager must be provided: ${\n                new Error().stack}`);\n      }\n\n      debuggerWorkspaceBindingInstance =\n          new DebuggerWorkspaceBinding(resourceMapping, targetManager, ignoreListManager);\n    }\n\n    return debuggerWorkspaceBindingInstance;\n  }\n\n  static removeInstance(): void {\n    debuggerWorkspaceBindingInstance = undefined;\n  }\n\n  private async computeAutoStepRanges(mode: SDK.DebuggerModel.StepMode, callFrame: SDK.DebuggerModel.CallFrame):\n      Promise<SDK.DebuggerModel.LocationRange[]> {\n    function contained(location: SDK.DebuggerModel.Location, range: SDK.DebuggerModel.LocationRange): boolean {\n      const {start, end} = range;\n      if (start.scriptId !== location.scriptId) {\n        return false;\n      }\n      if (location.lineNumber < start.lineNumber || location.lineNumber > end.lineNumber) {\n        return false;\n      }\n      if (location.lineNumber === start.lineNumber && location.columnNumber < start.columnNumber) {\n        return false;\n      }\n      if (location.lineNumber === end.lineNumber && location.columnNumber >= end.columnNumber) {\n        return false;\n      }\n      return true;\n    }\n\n    const rawLocation = callFrame.location();\n    if (!rawLocation) {\n      return [];\n    }\n    const pluginManager = this.pluginManager;\n    let ranges: SDK.DebuggerModel.LocationRange[] = [];\n    if (mode === SDK.DebuggerModel.StepMode.STEP_OUT) {\n      // Step out of inline function.\n      return await pluginManager.getInlinedFunctionRanges(rawLocation);\n    }\n    const uiLocation = await pluginManager.rawLocationToUILocation(rawLocation);\n    if (uiLocation) {\n      ranges = await pluginManager.uiLocationToRawLocationRanges(\n                   uiLocation.uiSourceCode, uiLocation.lineNumber, uiLocation.columnNumber) ||\n          [];\n      // TODO(bmeurer): Remove the {rawLocation} from the {ranges}?\n      ranges = ranges.filter(range => contained(rawLocation, range));\n      if (mode === SDK.DebuggerModel.StepMode.STEP_OVER) {\n        // Step over an inlined function.\n        ranges = ranges.concat(await pluginManager.getInlinedCalleesRanges(rawLocation));\n      }\n      return ranges;\n    }\n\n    const compilerMapping = this.#debuggerModelToData.get(rawLocation.debuggerModel)?.compilerMapping;\n    if (!compilerMapping) {\n      return [];\n    }\n    ranges = compilerMapping.getLocationRangesForSameSourceLocation(rawLocation);\n    ranges = ranges.filter(range => contained(rawLocation, range));\n    return ranges;\n  }\n\n  modelAdded(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    debuggerModel.setBeforePausedCallback(this.shouldPause.bind(this));\n    this.#debuggerModelToData.set(debuggerModel, new ModelData(debuggerModel, this));\n    debuggerModel.setComputeAutoStepRangesCallback(this.computeAutoStepRanges.bind(this));\n  }\n\n  modelRemoved(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    debuggerModel.setComputeAutoStepRangesCallback(null);\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      modelData.dispose();\n      this.#debuggerModelToData.delete(debuggerModel);\n    }\n  }\n\n  /**\n   * The promise returned by this function is resolved once all *currently*\n   * pending LiveLocations are processed.\n   */\n  async pendingLiveLocationChangesPromise(): Promise<void|Location|StackTraceTopFrameLocation|null> {\n    await Promise.all(this.#liveLocationPromises);\n  }\n\n  private recordLiveLocationChange(promise: Promise<void|Location|StackTraceTopFrameLocation|null>): void {\n    void promise.then(() => {\n      this.#liveLocationPromises.delete(promise);\n    });\n    this.#liveLocationPromises.add(promise);\n  }\n\n  async updateLocations(script: SDK.Script.Script): Promise<void> {\n    const modelData = this.#debuggerModelToData.get(script.debuggerModel);\n    if (modelData) {\n      const updatePromise = modelData.updateLocations(script);\n      this.recordLiveLocationChange(updatePromise);\n      await updatePromise;\n    }\n  }\n\n  async createLiveLocation(\n      rawLocation: SDK.DebuggerModel.Location, updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<Location|null> {\n    const modelData = this.#debuggerModelToData.get(rawLocation.debuggerModel);\n    if (!modelData) {\n      return null;\n    }\n    const liveLocationPromise = modelData.createLiveLocation(rawLocation, updateDelegate, locationPool);\n    this.recordLiveLocationChange(liveLocationPromise);\n    return await liveLocationPromise;\n  }\n\n  async createStackTraceTopFrameLiveLocation(\n      rawLocations: SDK.DebuggerModel.Location[], updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<LiveLocation> {\n    console.assert(rawLocations.length > 0);\n    const locationPromise =\n        StackTraceTopFrameLocation.createStackTraceTopFrameLocation(rawLocations, this, updateDelegate, locationPool);\n    this.recordLiveLocationChange(locationPromise);\n    return await locationPromise;\n  }\n\n  async createCallFrameLiveLocation(\n      location: SDK.DebuggerModel.Location, updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<Location|null> {\n    const script = location.script();\n    if (!script) {\n      return null;\n    }\n    const debuggerModel = location.debuggerModel;\n    const liveLocationPromise = this.createLiveLocation(location, updateDelegate, locationPool);\n    this.recordLiveLocationChange(liveLocationPromise);\n    const liveLocation = await liveLocationPromise;\n    if (!liveLocation) {\n      return null;\n    }\n    this.registerCallFrameLiveLocation(debuggerModel, liveLocation);\n    return liveLocation;\n  }\n\n  async rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location):\n      Promise<Workspace.UISourceCode.UILocation|null> {\n    const uiLocation = await this.pluginManager.rawLocationToUILocation(rawLocation);\n    if (uiLocation) {\n      return uiLocation;\n    }\n    const modelData = this.#debuggerModelToData.get(rawLocation.debuggerModel);\n    return modelData ? modelData.rawLocationToUILocation(rawLocation) : null;\n  }\n\n  uiSourceCodeForSourceMapSourceURL(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, url: Platform.DevToolsPath.UrlString,\n      isContentScript: boolean): Workspace.UISourceCode.UISourceCode|null {\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (!modelData) {\n      return null;\n    }\n    return modelData.compilerMapping.uiSourceCodeForURL(url, isContentScript);\n  }\n\n  async uiSourceCodeForSourceMapSourceURLPromise(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, url: Platform.DevToolsPath.UrlString,\n      isContentScript: boolean): Promise<Workspace.UISourceCode.UISourceCode> {\n    const uiSourceCode = this.uiSourceCodeForSourceMapSourceURL(debuggerModel, url, isContentScript);\n    return await (uiSourceCode || this.waitForUISourceCodeAdded(url, debuggerModel.target()));\n  }\n\n  async uiSourceCodeForDebuggerLanguagePluginSourceURLPromise(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel,\n      url: Platform.DevToolsPath.UrlString): Promise<Workspace.UISourceCode.UISourceCode|null> {\n    const uiSourceCode = this.pluginManager.uiSourceCodeForURL(debuggerModel, url);\n    return await (uiSourceCode || this.waitForUISourceCodeAdded(url, debuggerModel.target()));\n  }\n\n  uiSourceCodeForScript(script: SDK.Script.Script): Workspace.UISourceCode.UISourceCode|null {\n    const modelData = this.#debuggerModelToData.get(script.debuggerModel);\n    if (!modelData) {\n      return null;\n    }\n    return modelData.uiSourceCodeForScript(script);\n  }\n\n  waitForUISourceCodeAdded(url: Platform.DevToolsPath.UrlString, target: SDK.Target.Target):\n      Promise<Workspace.UISourceCode.UISourceCode> {\n    return new Promise(resolve => {\n      const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n      const descriptor = workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeAdded, event => {\n        const uiSourceCode = event.data;\n        if (uiSourceCode.url() === url && NetworkProject.targetForUISourceCode(uiSourceCode) === target) {\n          workspace.removeEventListener(Workspace.Workspace.Events.UISourceCodeAdded, descriptor.listener);\n          resolve(uiSourceCode);\n        }\n      });\n    });\n  }\n\n  async uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber?: number): Promise<SDK.DebuggerModel.Location[]> {\n    const locations = await this.pluginManager.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n    if (locations) {\n      return locations;\n    }\n    for (const modelData of this.#debuggerModelToData.values()) {\n      const locations = modelData.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n      if (locations.length) {\n        return locations;\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Computes all the raw location ranges that intersect with the {@link textRange} in the given\n   * {@link uiSourceCode}. The reverse mappings of the returned ranges must not be fully contained\n   * with the {@link textRange} and it's the responsibility of the caller to appropriately filter or\n   * clamp if desired.\n   *\n   * It's important to note that for a contiguous range in the {@link uiSourceCode} there can be a\n   * variety of non-contiguous raw location ranges that intersect with the {@link textRange}. A\n   * simple example is that of an HTML document with multiple inline `<script>`s in the same line,\n   * so just asking for the raw locations in this single line will return a set of location ranges\n   * in different scripts.\n   *\n   * This method returns an empty array if this {@link uiSourceCode} is not provided by any of the\n   * mappings for this instance.\n   *\n   * @param uiSourceCode the {@link UISourceCode} to which the {@link textRange} belongs.\n   * @param textRange the text range in terms of the UI.\n   * @returns the list of raw location ranges that intersect with the text range or `[]` if\n   *          the {@link uiSourceCode} does not belong to this instance.\n   */\n  async uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textRange: TextUtils.TextRange.TextRange): Promise<SDK.DebuggerModel.LocationRange[]> {\n    const ranges = await this.pluginManager.uiLocationRangeToRawLocationRanges(uiSourceCode, textRange);\n    if (ranges) {\n      return ranges;\n    }\n    for (const modelData of this.#debuggerModelToData.values()) {\n      const ranges = modelData.uiLocationRangeToRawLocationRanges(uiSourceCode, textRange);\n      if (ranges) {\n        return ranges;\n      }\n    }\n    return [];\n  }\n\n  async normalizeUILocation(uiLocation: Workspace.UISourceCode.UILocation): Promise<Workspace.UISourceCode.UILocation> {\n    const rawLocations =\n        await this.uiLocationToRawLocations(uiLocation.uiSourceCode, uiLocation.lineNumber, uiLocation.columnNumber);\n    for (const location of rawLocations) {\n      const uiLocationCandidate = await this.rawLocationToUILocation(location);\n      if (uiLocationCandidate) {\n        return uiLocationCandidate;\n      }\n    }\n    return uiLocation;\n  }\n\n  /**\n   * Computes the set of lines in the {@link uiSourceCode} that map to scripts by either looking at\n   * the debug info (if any) or checking for inline scripts within documents. If this set cannot be\n   * computed or all the lines in the {@link uiSourceCode} correspond to lines in a script, `null`\n   * is returned here.\n   *\n   * @param uiSourceCode the source entity.\n   * @returns a set of known mapped lines for {@link uiSourceCode} or `null` if it's impossible to\n   *          determine the set or the {@link uiSourceCode} does not map to or include any scripts.\n   */\n  async getMappedLines(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<Set<number>|null> {\n    for (const modelData of this.#debuggerModelToData.values()) {\n      const mappedLines = modelData.getMappedLines(uiSourceCode);\n      if (mappedLines !== null) {\n        return mappedLines;\n      }\n    }\n    return await this.pluginManager.getMappedLines(uiSourceCode);\n  }\n\n  scriptFile(uiSourceCode: Workspace.UISourceCode.UISourceCode, debuggerModel: SDK.DebuggerModel.DebuggerModel):\n      ResourceScriptFile|null {\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    return modelData ? modelData.getResourceScriptMapping().scriptFile(uiSourceCode) : null;\n  }\n\n  scriptsForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script[] {\n    const scripts = new Set<SDK.Script.Script>();\n    this.pluginManager.scriptsForUISourceCode(uiSourceCode).forEach(script => scripts.add(script));\n    for (const modelData of this.#debuggerModelToData.values()) {\n      const resourceScriptFile = modelData.getResourceScriptMapping().scriptFile(uiSourceCode);\n      if (resourceScriptFile?.script) {\n        scripts.add(resourceScriptFile.script);\n      }\n      modelData.compilerMapping.scriptsForUISourceCode(uiSourceCode).forEach(script => scripts.add(script));\n    }\n    return [...scripts];\n  }\n\n  supportsConditionalBreakpoints(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    const scripts = this.pluginManager.scriptsForUISourceCode(uiSourceCode);\n    return scripts.every(script => script.isJavaScript());\n  }\n\n  private globalObjectCleared(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    this.reset(event.data);\n  }\n\n  private reset(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (!modelData) {\n      return;\n    }\n    for (const location of modelData.callFrameLocations.values()) {\n      this.removeLiveLocation(location);\n    }\n    modelData.callFrameLocations.clear();\n  }\n\n  resetForTest(target: SDK.Target.Target): void {\n    const debuggerModel = (target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel);\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      modelData.getResourceScriptMapping().resetForTest();\n    }\n  }\n\n  private registerCallFrameLiveLocation(debuggerModel: SDK.DebuggerModel.DebuggerModel, location: Location): void {\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      const locations = modelData.callFrameLocations;\n      locations.add(location);\n    }\n  }\n\n  removeLiveLocation(location: Location): void {\n    const modelData = this.#debuggerModelToData.get(location.rawLocation.debuggerModel);\n    if (modelData) {\n      modelData.disposeLocation(location);\n    }\n  }\n\n  private debuggerResumed(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    this.reset(event.data);\n  }\n\n  private async shouldPause(\n      debuggerPausedDetails: SDK.DebuggerModel.DebuggerPausedDetails,\n      autoSteppingContext: SDK.DebuggerModel.Location|null): Promise<boolean> {\n    // This function returns false if the debugger should continue stepping\n    const {callFrames: [frame]} = debuggerPausedDetails;\n    if (!frame) {\n      return false;\n    }\n    const functionLocation = frame.functionLocation();\n    if (!autoSteppingContext || debuggerPausedDetails.reason !== Protocol.Debugger.PausedEventReason.Step ||\n        !functionLocation || !frame.script.isWasm() || !Common.Settings.moduleSetting('wasm-auto-stepping').get() ||\n        !this.pluginManager.hasPluginForScript(frame.script)) {\n      return true;\n    }\n    const uiLocation = await this.pluginManager.rawLocationToUILocation(frame.location());\n    if (uiLocation) {\n      return true;\n    }\n\n    return autoSteppingContext.script() !== functionLocation.script() ||\n        autoSteppingContext.columnNumber !== functionLocation.columnNumber ||\n        autoSteppingContext.lineNumber !== functionLocation.lineNumber;\n  }\n}\n\nclass ModelData {\n  readonly #debuggerModel: SDK.DebuggerModel.DebuggerModel;\n  readonly #debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  callFrameLocations: Set<Location>;\n  #defaultMapping: DefaultScriptMapping;\n  readonly #resourceMapping: ResourceMapping;\n  #resourceScriptMapping: ResourceScriptMapping;\n  readonly compilerMapping: CompilerScriptMapping;\n  readonly #locations: Platform.MapUtilities.Multimap<string, Location>;\n\n  constructor(debuggerModel: SDK.DebuggerModel.DebuggerModel, debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.#debuggerModel = debuggerModel;\n    this.#debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    this.callFrameLocations = new Set();\n\n    const {workspace} = debuggerWorkspaceBinding.resourceMapping;\n    this.#defaultMapping = new DefaultScriptMapping(debuggerModel, workspace, debuggerWorkspaceBinding);\n    this.#resourceMapping = debuggerWorkspaceBinding.resourceMapping;\n    this.#resourceScriptMapping = new ResourceScriptMapping(debuggerModel, workspace, debuggerWorkspaceBinding);\n    this.compilerMapping = new CompilerScriptMapping(debuggerModel, workspace, debuggerWorkspaceBinding);\n\n    this.#locations = new Platform.MapUtilities.Multimap();\n  }\n\n  async createLiveLocation(\n      rawLocation: SDK.DebuggerModel.Location, updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<Location> {\n    console.assert(rawLocation.scriptId !== '');\n    const scriptId = rawLocation.scriptId;\n    const location = new Location(scriptId, rawLocation, this.#debuggerWorkspaceBinding, updateDelegate, locationPool);\n    this.#locations.set(scriptId, location);\n    await location.update();\n    return location;\n  }\n\n  disposeLocation(location: Location): void {\n    this.#locations.delete(location.scriptId, location);\n  }\n\n  async updateLocations(script: SDK.Script.Script): Promise<void> {\n    const promises = [];\n    for (const location of this.#locations.get(script.scriptId)) {\n      promises.push(location.update());\n    }\n    await Promise.all(promises);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null {\n    let uiLocation = this.compilerMapping.rawLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.#resourceScriptMapping.rawLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.#resourceMapping.jsLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.#defaultMapping.rawLocationToUILocation(rawLocation);\n    return uiLocation;\n  }\n\n  uiSourceCodeForScript(script: SDK.Script.Script): Workspace.UISourceCode.UISourceCode|null {\n    let uiSourceCode: Workspace.UISourceCode.UISourceCode|null = null;\n    uiSourceCode = uiSourceCode || this.#resourceScriptMapping.uiSourceCodeForScript(script);\n    uiSourceCode = uiSourceCode || this.#resourceMapping.uiSourceCodeForScript(script);\n    uiSourceCode = uiSourceCode || this.#defaultMapping.uiSourceCodeForScript(script);\n    return uiSourceCode;\n  }\n\n  uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber: number|undefined = 0): SDK.DebuggerModel.Location[] {\n    // TODO(crbug.com/1153123): Revisit the `#columnNumber = 0` and also preserve `undefined` for source maps?\n    let locations = this.compilerMapping.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n    locations = locations.length ?\n        locations :\n        this.#resourceScriptMapping.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n    locations = locations.length ?\n        locations :\n        this.#resourceMapping.uiLocationToJSLocations(uiSourceCode, lineNumber, columnNumber);\n    locations = locations.length ?\n        locations :\n        this.#defaultMapping.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n    return locations;\n  }\n\n  uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textRange: TextUtils.TextRange.TextRange): SDK.DebuggerModel.LocationRange[]|null {\n    let ranges = this.compilerMapping.uiLocationRangeToRawLocationRanges(uiSourceCode, textRange);\n    ranges ??= this.#resourceScriptMapping.uiLocationRangeToRawLocationRanges(uiSourceCode, textRange);\n    ranges ??= this.#resourceMapping.uiLocationRangeToJSLocationRanges(uiSourceCode, textRange);\n    ranges ??= this.#defaultMapping.uiLocationRangeToRawLocationRanges(uiSourceCode, textRange);\n    return ranges;\n  }\n\n  getMappedLines(uiSourceCode: Workspace.UISourceCode.UISourceCode): Set<number>|null {\n    const mappedLines = this.compilerMapping.getMappedLines(uiSourceCode);\n    // TODO(crbug.com/1411431): The scripts from the ResourceMapping appear over time,\n    // and there's currently no way to inform the UI to update.\n    // mappedLines = mappedLines ?? this.#resourceMapping.getMappedLines(uiSourceCode);\n    return mappedLines;\n  }\n\n  dispose(): void {\n    this.#debuggerModel.setBeforePausedCallback(null);\n    this.compilerMapping.dispose();\n    this.#resourceScriptMapping.dispose();\n    this.#defaultMapping.dispose();\n  }\n\n  getResourceScriptMapping(): ResourceScriptMapping {\n    return this.#resourceScriptMapping;\n  }\n}\n\nexport class Location extends LiveLocationWithPool {\n  readonly scriptId: string;\n  readonly rawLocation: SDK.DebuggerModel.Location;\n  readonly #binding: DebuggerWorkspaceBinding;\n\n  constructor(\n      scriptId: string, rawLocation: SDK.DebuggerModel.Location, binding: DebuggerWorkspaceBinding,\n      updateDelegate: (arg0: LiveLocation) => Promise<void>, locationPool: LiveLocationPool) {\n    super(updateDelegate, locationPool);\n    this.scriptId = scriptId;\n    this.rawLocation = rawLocation;\n    this.#binding = binding;\n  }\n\n  override async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    const debuggerModelLocation = this.rawLocation;\n    return await this.#binding.rawLocationToUILocation(debuggerModelLocation);\n  }\n\n  override dispose(): void {\n    super.dispose();\n    this.#binding.removeLiveLocation(this);\n  }\n}\n\nclass StackTraceTopFrameLocation extends LiveLocationWithPool {\n  #updateScheduled: boolean;\n  #current: LiveLocation|null;\n  #locations: LiveLocation[]|null;\n  constructor(updateDelegate: (arg0: LiveLocation) => Promise<void>, locationPool: LiveLocationPool) {\n    super(updateDelegate, locationPool);\n    this.#updateScheduled = true;\n    this.#current = null;\n    this.#locations = null;\n  }\n\n  static async createStackTraceTopFrameLocation(\n      rawLocations: SDK.DebuggerModel.Location[], binding: DebuggerWorkspaceBinding,\n      updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<StackTraceTopFrameLocation> {\n    const location = new StackTraceTopFrameLocation(updateDelegate, locationPool);\n    const locationsPromises = rawLocations.map(\n        rawLocation => binding.createLiveLocation(rawLocation, location.scheduleUpdate.bind(location), locationPool));\n    location.#locations = ((await Promise.all(locationsPromises)).filter(l => !!l));\n    await location.updateLocation();\n    return location;\n  }\n\n  override async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    return this.#current ? await this.#current.uiLocation() : null;\n  }\n\n  override dispose(): void {\n    super.dispose();\n    if (this.#locations) {\n      for (const location of this.#locations) {\n        location.dispose();\n      }\n    }\n    this.#locations = null;\n    this.#current = null;\n  }\n\n  private async scheduleUpdate(): Promise<void> {\n    if (this.#updateScheduled) {\n      return;\n    }\n    this.#updateScheduled = true;\n    queueMicrotask(() => {\n      void this.updateLocation();\n    });\n  }\n\n  private async updateLocation(): Promise<void> {\n    this.#updateScheduled = false;\n    if (!this.#locations || this.#locations.length === 0) {\n      return;\n    }\n\n    this.#current = this.#locations[0];\n    for (const location of this.#locations) {\n      const uiLocation = await location.uiLocation();\n      if (!uiLocation?.isIgnoreListed()) {\n        this.#current = location;\n        break;\n      }\n    }\n    void this.update();\n  }\n}\n\nexport interface DebuggerSourceMapping {\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null;\n\n  uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber?: number): SDK.DebuggerModel.Location[];\n\n  uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textRange: TextUtils.TextRange.TextRange): SDK.DebuggerModel.LocationRange[]|null;\n}\n", "/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport type {DebuggerSourceMapping, DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\n\nexport class DefaultScriptMapping implements DebuggerSourceMapping {\n  readonly #debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  readonly #project: ContentProviderBasedProject;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly #uiSourceCodeToScript: Map<Workspace.UISourceCode.UISourceCode, SDK.Script.Script>;\n  readonly #scriptToUISourceCode: Map<SDK.Script.Script, Workspace.UISourceCode.UISourceCode>;\n\n  constructor(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, workspace: Workspace.Workspace.WorkspaceImpl,\n      debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    defaultScriptMappings.add(this);\n    this.#debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n    this.#project = new ContentProviderBasedProject(\n        workspace, 'debugger:' + debuggerModel.target().id(), Workspace.Workspace.projectTypes.Debugger, '',\n        true /* isServiceProject */);\n    this.#eventListeners = [\n      debuggerModel.addEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this.globalObjectCleared, this),\n      debuggerModel.addEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, this.parsedScriptSource, this),\n      debuggerModel.addEventListener(\n          SDK.DebuggerModel.Events.DiscardedAnonymousScriptSource, this.discardedScriptSource, this),\n    ];\n    this.#uiSourceCodeToScript = new Map();\n    this.#scriptToUISourceCode = new Map();\n  }\n\n  static createV8ScriptURL(script: SDK.Script.Script): Platform.DevToolsPath.UrlString {\n    const name = Common.ParsedURL.ParsedURL.extractName(script.sourceURL);\n    const url = 'debugger:///VM' + script.scriptId + (name ? ' ' + name : '') as Platform.DevToolsPath.UrlString;\n    return url;\n  }\n\n  static scriptForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script|null {\n    for (const defaultScriptMapping of defaultScriptMappings) {\n      const script = defaultScriptMapping.#uiSourceCodeToScript.get(uiSourceCode);\n      if (script !== undefined) {\n        return script;\n      }\n    }\n    return null;\n  }\n\n  uiSourceCodeForScript(script: SDK.Script.Script): Workspace.UISourceCode.UISourceCode|null {\n    return this.#scriptToUISourceCode.get(script) ?? null;\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null {\n    const script = rawLocation.script();\n    if (!script) {\n      return null;\n    }\n    const uiSourceCode = this.#scriptToUISourceCode.get(script);\n    if (!uiSourceCode) {\n      return null;\n    }\n    const {lineNumber, columnNumber} = script.rawLocationToRelativeLocation(rawLocation);\n    return uiSourceCode.uiLocation(lineNumber, columnNumber);\n  }\n\n  uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber?: number): SDK.DebuggerModel.Location[] {\n    const script = this.#uiSourceCodeToScript.get(uiSourceCode);\n    if (!script) {\n      return [];\n    }\n    ({lineNumber, columnNumber} = script.relativeLocationToRawLocation({lineNumber, columnNumber}));\n    return [script.debuggerModel.createRawLocation(script, lineNumber, columnNumber ?? 0)];\n  }\n\n  uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      {startLine, startColumn, endLine, endColumn}: TextUtils.TextRange.TextRange):\n      SDK.DebuggerModel.LocationRange[]|null {\n    const script = this.#uiSourceCodeToScript.get(uiSourceCode);\n    if (!script) {\n      return [];\n    }\n    ({lineNumber: startLine, columnNumber: startColumn} =\n         script.relativeLocationToRawLocation({lineNumber: startLine, columnNumber: startColumn}));\n    ({lineNumber: endLine, columnNumber: endColumn} =\n         script.relativeLocationToRawLocation({lineNumber: endLine, columnNumber: endColumn}));\n    const start = script.debuggerModel.createRawLocation(script, startLine, startColumn);\n    const end = script.debuggerModel.createRawLocation(script, endLine, endColumn);\n    return [{start, end}];\n  }\n\n  private parsedScriptSource(event: Common.EventTarget.EventTargetEvent<SDK.Script.Script>): void {\n    const script = event.data;\n    const url = DefaultScriptMapping.createV8ScriptURL(script);\n\n    const uiSourceCode = this.#project.createUISourceCode(url, Common.ResourceType.resourceTypes.Script);\n    if (script.isBreakpointCondition) {\n      uiSourceCode.markAsUnconditionallyIgnoreListed();\n    }\n    this.#uiSourceCodeToScript.set(uiSourceCode, script);\n    this.#scriptToUISourceCode.set(script, uiSourceCode);\n    this.#project.addUISourceCodeWithProvider(uiSourceCode, script, null, 'text/javascript');\n    void this.#debuggerWorkspaceBinding.updateLocations(script);\n  }\n\n  private discardedScriptSource(event: Common.EventTarget.EventTargetEvent<SDK.Script.Script>): void {\n    const script = event.data;\n    const uiSourceCode = this.#scriptToUISourceCode.get(script);\n    if (uiSourceCode === undefined) {\n      return;\n    }\n    this.#scriptToUISourceCode.delete(script);\n    this.#uiSourceCodeToScript.delete(uiSourceCode);\n    this.#project.removeUISourceCode(uiSourceCode.url());\n  }\n\n  private globalObjectCleared(): void {\n    this.#scriptToUISourceCode.clear();\n    this.#uiSourceCodeToScript.clear();\n    this.#project.reset();\n  }\n\n  dispose(): void {\n    defaultScriptMappings.delete(this);\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.globalObjectCleared();\n    this.#project.dispose();\n  }\n}\n\n// TODO(bmeurer): Remove the static methods from DefaultScriptMapping\n// and get rid of this global table.\nconst defaultScriptMappings = new Set<DefaultScriptMapping>();\n", "/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport {type DebuggerSourceMapping, DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\nimport {NetworkProject} from './NetworkProject.js';\nimport {metadataForURL} from './ResourceUtils.js';\n\nconst UIStrings = {\n  /**\n   * @description Error text displayed in the console when editing a live script fails. LiveEdit is\n   *the name of the feature for editing code that is already running.\n   * @example {warning} PH1\n   */\n  liveEditFailed: '`LiveEdit` failed: {PH1}',\n  /**\n   * @description Error text displayed in the console when compiling a live-edited script fails. LiveEdit is\n   *the name of the feature for editing code that is already running.\n   * @example {connection lost} PH1\n   */\n  liveEditCompileFailed: '`LiveEdit` compile failed: {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('models/bindings/ResourceScriptMapping.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ResourceScriptMapping implements DebuggerSourceMapping {\n  readonly debuggerModel: SDK.DebuggerModel.DebuggerModel;\n  #workspace: Workspace.Workspace.WorkspaceImpl;\n  readonly debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  readonly #uiSourceCodeToScriptFile: Map<Workspace.UISourceCode.UISourceCode, ResourceScriptFile>;\n  readonly #projects: Map<string, ContentProviderBasedProject>;\n  readonly #scriptToUISourceCode: Map<SDK.Script.Script, Workspace.UISourceCode.UISourceCode>;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n\n  constructor(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, workspace: Workspace.Workspace.WorkspaceImpl,\n      debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.debuggerModel = debuggerModel;\n    this.#workspace = workspace;\n    this.debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n    this.#uiSourceCodeToScriptFile = new Map();\n\n    this.#projects = new Map();\n\n    this.#scriptToUISourceCode = new Map();\n    const runtimeModel = debuggerModel.runtimeModel();\n    this.#eventListeners = [\n      this.debuggerModel.addEventListener(\n          SDK.DebuggerModel.Events.ParsedScriptSource, event => this.addScript(event.data), this),\n      this.debuggerModel.addEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this.globalObjectCleared, this),\n      runtimeModel.addEventListener(\n          SDK.RuntimeModel.Events.ExecutionContextDestroyed, this.executionContextDestroyed, this),\n      runtimeModel.target().targetManager().addEventListener(\n          SDK.TargetManager.Events.INSPECTED_URL_CHANGED, this.inspectedURLChanged, this),\n    ];\n  }\n\n  private project(script: SDK.Script.Script): ContentProviderBasedProject {\n    const prefix = script.isContentScript() ? 'js:extensions:' : 'js::';\n    const projectId = prefix + this.debuggerModel.target().id() + ':' + script.frameId;\n    let project = this.#projects.get(projectId);\n    if (!project) {\n      const projectType = script.isContentScript() ? Workspace.Workspace.projectTypes.ContentScripts :\n                                                     Workspace.Workspace.projectTypes.Network;\n      project = new ContentProviderBasedProject(\n          this.#workspace, projectId, projectType, '' /* displayName */, false /* isServiceProject */);\n      NetworkProject.setTargetForProject(project, this.debuggerModel.target());\n      this.#projects.set(projectId, project);\n    }\n    return project;\n  }\n\n  uiSourceCodeForScript(script: SDK.Script.Script): Workspace.UISourceCode.UISourceCode|null {\n    return this.#scriptToUISourceCode.get(script) ?? null;\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null {\n    const script = rawLocation.script();\n    if (!script) {\n      return null;\n    }\n    const uiSourceCode = this.#scriptToUISourceCode.get(script);\n    if (!uiSourceCode) {\n      return null;\n    }\n    const scriptFile = this.#uiSourceCodeToScriptFile.get(uiSourceCode);\n    if (!scriptFile) {\n      return null;\n    }\n    if ((scriptFile.hasDivergedFromVM() && !scriptFile.isMergingToVM()) || scriptFile.isDivergingFromVM()) {\n      return null;\n    }\n    if (scriptFile.script !== script) {\n      return null;\n    }\n    const {lineNumber, columnNumber = 0} = rawLocation;\n    return uiSourceCode.uiLocation(lineNumber, columnNumber);\n  }\n\n  uiLocationToRawLocations(uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number, columnNumber: number):\n      SDK.DebuggerModel.Location[] {\n    const scriptFile = this.#uiSourceCodeToScriptFile.get(uiSourceCode);\n    if (!scriptFile) {\n      return [];\n    }\n\n    const {script} = scriptFile;\n    if (!script) {\n      return [];\n    }\n\n    return [this.debuggerModel.createRawLocation(script, lineNumber, columnNumber)];\n  }\n\n  uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      {startLine, startColumn, endLine, endColumn}: TextUtils.TextRange.TextRange):\n      SDK.DebuggerModel.LocationRange[]|null {\n    const scriptFile = this.#uiSourceCodeToScriptFile.get(uiSourceCode);\n    if (!scriptFile) {\n      return null;\n    }\n\n    const {script} = scriptFile;\n    if (!script) {\n      return null;\n    }\n\n    const start = this.debuggerModel.createRawLocation(script, startLine, startColumn);\n    const end = this.debuggerModel.createRawLocation(script, endLine, endColumn);\n    return [{start, end}];\n  }\n\n  private inspectedURLChanged(event: Common.EventTarget.EventTargetEvent<SDK.Target.Target>): void {\n    for (let target: SDK.Target.Target|null = this.debuggerModel.target(); target !== event.data;\n         target = target.parentTarget()) {\n      if (target === null) {\n        return;\n      }\n    }\n\n    // Just remove and readd all scripts to ensure their URLs are reflected correctly.\n    for (const script of Array.from(this.#scriptToUISourceCode.keys())) {\n      this.removeScripts([script]);\n      this.addScript(script);\n    }\n  }\n\n  private addScript(script: SDK.Script.Script): void {\n    // Ignore live edit scripts here.\n    if (script.isLiveEdit() || script.isBreakpointCondition) {\n      return;\n    }\n\n    let url = script.sourceURL;\n    if (!url) {\n      return;\n    }\n\n    if (script.hasSourceURL) {\n      // Try to resolve `//# sourceURL=` annotations relative to\n      // the base URL, according to the sourcemap specification.\n      url = SDK.SourceMapManager.SourceMapManager.resolveRelativeSourceURL(script.debuggerModel.target(), url);\n    } else {\n      // Ignore inline <script>s without `//# sourceURL` annotation here.\n      if (script.isInlineScript()) {\n        return;\n      }\n\n      // Filter out embedder injected content scripts.\n      if (script.isContentScript()) {\n        const parsedURL = new Common.ParsedURL.ParsedURL(url);\n        if (!parsedURL.isValid) {\n          return;\n        }\n      }\n    }\n\n    // Remove previous UISourceCode, if any\n    const project = this.project(script);\n    const oldUISourceCode = project.uiSourceCodeForURL(url);\n    if (oldUISourceCode) {\n      const oldScriptFile = this.#uiSourceCodeToScriptFile.get(oldUISourceCode);\n      if (oldScriptFile?.script) {\n        this.removeScripts([oldScriptFile.script]);\n      }\n    }\n\n    // Create UISourceCode.\n    const originalContentProvider = script.originalContentProvider();\n    const uiSourceCode = project.createUISourceCode(url, originalContentProvider.contentType());\n    NetworkProject.setInitialFrameAttribution(uiSourceCode, script.frameId);\n    const metadata = metadataForURL(this.debuggerModel.target(), script.frameId, url);\n\n    // Bind UISourceCode to scripts.\n    const scriptFile = new ResourceScriptFile(this, uiSourceCode, script);\n    this.#uiSourceCodeToScriptFile.set(uiSourceCode, scriptFile);\n    this.#scriptToUISourceCode.set(script, uiSourceCode);\n\n    const mimeType = script.isWasm() ? 'application/wasm' : 'text/javascript';\n    project.addUISourceCodeWithProvider(uiSourceCode, originalContentProvider, metadata, mimeType);\n    void this.debuggerWorkspaceBinding.updateLocations(script);\n  }\n\n  scriptFile(uiSourceCode: Workspace.UISourceCode.UISourceCode): ResourceScriptFile|null {\n    return this.#uiSourceCodeToScriptFile.get(uiSourceCode) || null;\n  }\n\n  private removeScripts(scripts: SDK.Script.Script[]): void {\n    const uiSourceCodesByProject =\n        new Platform.MapUtilities.Multimap<ContentProviderBasedProject, Workspace.UISourceCode.UISourceCode>();\n    for (const script of scripts) {\n      const uiSourceCode = this.#scriptToUISourceCode.get(script);\n      if (!uiSourceCode) {\n        continue;\n      }\n      const scriptFile = this.#uiSourceCodeToScriptFile.get(uiSourceCode);\n      if (scriptFile) {\n        scriptFile.dispose();\n      }\n\n      this.#uiSourceCodeToScriptFile.delete(uiSourceCode);\n      this.#scriptToUISourceCode.delete(script);\n\n      uiSourceCodesByProject.set(uiSourceCode.project() as ContentProviderBasedProject, uiSourceCode);\n      void this.debuggerWorkspaceBinding.updateLocations(script);\n    }\n    for (const project of uiSourceCodesByProject.keysArray()) {\n      const uiSourceCodes = uiSourceCodesByProject.get(project);\n      // Check if all the ui source codes in the project are in |uiSourceCodes|.\n      let allInProjectRemoved = true;\n      for (const projectSourceCode of project.uiSourceCodes()) {\n        if (!uiSourceCodes.has(projectSourceCode)) {\n          allInProjectRemoved = false;\n          break;\n        }\n      }\n      // Drop the whole project if no source codes are left in it.\n      if (allInProjectRemoved) {\n        this.#projects.delete(project.id());\n        project.removeProject();\n      } else {\n        // Otherwise, announce the removal of each UI source code individually.\n        uiSourceCodes.forEach(c => project.removeUISourceCode(c.url()));\n      }\n    }\n  }\n\n  private executionContextDestroyed(event: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext>):\n      void {\n    const executionContext = event.data;\n    this.removeScripts(this.debuggerModel.scriptsForExecutionContext(executionContext));\n  }\n\n  private globalObjectCleared(): void {\n    const scripts = Array.from(this.#scriptToUISourceCode.keys());\n    this.removeScripts(scripts);\n  }\n\n  resetForTest(): void {\n    this.globalObjectCleared();\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.globalObjectCleared();\n  }\n}\n\nexport class ResourceScriptFile extends Common.ObjectWrapper.ObjectWrapper<ResourceScriptFile.EventTypes> {\n  readonly #resourceScriptMapping: ResourceScriptMapping;\n  readonly uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  readonly script: SDK.Script.Script|null;\n  #scriptSource?: string|null;\n  #isDivergingFromVMInternal?: boolean;\n  #hasDivergedFromVMInternal?: boolean;\n  #isMergingToVMInternal?: boolean;\n  #updateMutex = new Common.Mutex.Mutex();\n  constructor(\n      resourceScriptMapping: ResourceScriptMapping, uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      script: SDK.Script.Script) {\n    super();\n    this.#resourceScriptMapping = resourceScriptMapping;\n    this.uiSourceCode = uiSourceCode;\n    this.script = this.uiSourceCode.contentType().isScript() ? script : null;\n\n    this.uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this.workingCopyChanged, this);\n    this.uiSourceCode.addEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this);\n  }\n\n  private isDiverged(): boolean {\n    if (this.uiSourceCode.isDirty()) {\n      return true;\n    }\n    if (!this.script) {\n      return false;\n    }\n    if (typeof this.#scriptSource === 'undefined' || this.#scriptSource === null) {\n      return false;\n    }\n    const workingCopy = this.uiSourceCode.workingCopy();\n    if (!workingCopy) {\n      return false;\n    }\n\n    // Match ignoring sourceURL.\n    if (!workingCopy.startsWith(this.#scriptSource.trimEnd())) {\n      return true;\n    }\n    const suffix = this.uiSourceCode.workingCopy().substr(this.#scriptSource.length);\n    return Boolean(suffix.length) && !suffix.match(SDK.Script.sourceURLRegex);\n  }\n\n  private workingCopyChanged(): void {\n    void this.update();\n  }\n\n  private workingCopyCommitted(): void {\n    if (this.uiSourceCode.project().canSetFileContent()) {\n      return;\n    }\n    if (!this.script) {\n      return;\n    }\n\n    const source = this.uiSourceCode.workingCopy();\n    void this.script.editSource(source).then(({status, exceptionDetails}) => {\n      void this.scriptSourceWasSet(source, status, exceptionDetails);\n    });\n  }\n\n  async scriptSourceWasSet(\n      source: string, status: Protocol.Debugger.SetScriptSourceResponseStatus,\n      exceptionDetails?: Protocol.Runtime.ExceptionDetails): Promise<void> {\n    if (status === Protocol.Debugger.SetScriptSourceResponseStatus.Ok) {\n      this.#scriptSource = source;\n    }\n    await this.update();\n\n    if (status === Protocol.Debugger.SetScriptSourceResponseStatus.Ok) {\n      return;\n    }\n\n    if (!exceptionDetails) {\n      // TODO(crbug.com/1334484): Instead of to the console, report these errors in an \"info bar\" at the bottom\n      //                          of the text editor, similar to e.g. source mapping errors.\n      Common.Console.Console.instance().addMessage(\n          i18nString(UIStrings.liveEditFailed, {PH1: getErrorText(status)}), Common.Console.MessageLevel.WARNING);\n      return;\n    }\n    const messageText = i18nString(UIStrings.liveEditCompileFailed, {PH1: exceptionDetails.text});\n    this.uiSourceCode.addLineMessage(\n        Workspace.UISourceCode.Message.Level.ERROR, messageText, exceptionDetails.lineNumber,\n        exceptionDetails.columnNumber);\n\n    function getErrorText(status: Protocol.Debugger.SetScriptSourceResponseStatus): string {\n      switch (status) {\n        case Protocol.Debugger.SetScriptSourceResponseStatus.BlockedByActiveFunction:\n          return 'Functions that are on the stack (currently being executed) can not be edited';\n        case Protocol.Debugger.SetScriptSourceResponseStatus.BlockedByActiveGenerator:\n          return 'Async functions/generators that are active can not be edited';\n        case Protocol.Debugger.SetScriptSourceResponseStatus.BlockedByTopLevelEsModuleChange:\n          return 'The top-level of ES modules can not be edited';\n        case Protocol.Debugger.SetScriptSourceResponseStatus.CompileError:\n        case Protocol.Debugger.SetScriptSourceResponseStatus.Ok:\n          throw new Error('Compile errors and Ok status must not be reported on the console');\n      }\n    }\n  }\n\n  private async update(): Promise<void> {\n    // Do not interleave \"divergeFromVM\" with \"mergeToVM\" calls.\n    const release = await this.#updateMutex.acquire();\n    const diverged = this.isDiverged();\n    if (diverged && !this.#hasDivergedFromVMInternal) {\n      await this.divergeFromVM();\n    } else if (!diverged && this.#hasDivergedFromVMInternal) {\n      await this.mergeToVM();\n    }\n    release();\n  }\n\n  private async divergeFromVM(): Promise<void> {\n    if (this.script) {\n      this.#isDivergingFromVMInternal = true;\n      await this.#resourceScriptMapping.debuggerWorkspaceBinding.updateLocations(this.script);\n      this.#isDivergingFromVMInternal = undefined;\n      this.#hasDivergedFromVMInternal = true;\n      this.dispatchEventToListeners(ResourceScriptFile.Events.DID_DIVERGE_FROM_VM);\n    }\n  }\n\n  private async mergeToVM(): Promise<void> {\n    if (this.script) {\n      this.#hasDivergedFromVMInternal = undefined;\n      this.#isMergingToVMInternal = true;\n      await this.#resourceScriptMapping.debuggerWorkspaceBinding.updateLocations(this.script);\n      this.#isMergingToVMInternal = undefined;\n      this.dispatchEventToListeners(ResourceScriptFile.Events.DID_MERGE_TO_VM);\n    }\n  }\n\n  hasDivergedFromVM(): boolean {\n    return Boolean(this.#hasDivergedFromVMInternal);\n  }\n\n  isDivergingFromVM(): boolean {\n    return Boolean(this.#isDivergingFromVMInternal);\n  }\n\n  isMergingToVM(): boolean {\n    return Boolean(this.#isMergingToVMInternal);\n  }\n\n  checkMapping(): void {\n    if (!this.script || typeof this.#scriptSource !== 'undefined') {\n      this.mappingCheckedForTest();\n      return;\n    }\n    void this.script.requestContentData().then(content => {\n      this.#scriptSource = TextUtils.ContentData.ContentData.textOr(content, null);\n      void this.update().then(() => this.mappingCheckedForTest());\n    });\n  }\n\n  private mappingCheckedForTest(): void {\n  }\n\n  dispose(): void {\n    this.uiSourceCode.removeEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyChanged, this.workingCopyChanged, this);\n    this.uiSourceCode.removeEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this);\n  }\n\n  addSourceMapURL(sourceMapURL: Platform.DevToolsPath.UrlString): void {\n    if (!this.script) {\n      return;\n    }\n    this.script.debuggerModel.setSourceMapURL(this.script, sourceMapURL);\n  }\n\n  addDebugInfoURL(debugInfoURL: Platform.DevToolsPath.UrlString): void {\n    if (!this.script) {\n      return;\n    }\n    const {pluginManager} = DebuggerWorkspaceBinding.instance();\n    pluginManager.setDebugInfoURL(this.script, debugInfoURL);\n  }\n\n  hasSourceMapURL(): boolean {\n    return Boolean(this.script?.sourceMapURL);\n  }\n\n  async missingSymbolFiles(): Promise<SDK.DebuggerModel.MissingDebugFiles[]|null> {\n    if (!this.script) {\n      return null;\n    }\n    const {pluginManager} = this.#resourceScriptMapping.debuggerWorkspaceBinding;\n    const sources = await pluginManager.getSourcesForScript(this.script);\n    return sources && 'missingSymbolFiles' in sources ? sources.missingSymbolFiles : null;\n  }\n}\n\nexport namespace ResourceScriptFile {\n  export const enum Events {\n    DID_MERGE_TO_VM = 'DidMergeToVM',\n    DID_DIVERGE_FROM_VM = 'DidDivergeFromVM',\n  }\n\n  export interface EventTypes {\n    [Events.DID_MERGE_TO_VM]: void;\n    [Events.DID_DIVERGE_FROM_VM]: void;\n  }\n}\n", "/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nexport interface ChunkedReader {\n  fileSize(): number;\n\n  loadedSize(): number;\n\n  fileName(): string;\n\n  cancel(): void;\n\n  error(): DOMError|null;\n}\n\nexport class ChunkedFileReader implements ChunkedReader {\n  #file: File|null;\n  readonly #fileSizeInternal: number;\n  #loadedSizeInternal: number;\n  #streamReader: ReadableStreamDefaultReader<Uint8Array<ArrayBuffer>>|null;\n  readonly #chunkSize: number;\n  readonly #chunkTransferredCallback: ((arg0: ChunkedReader) => void)|undefined;\n  readonly #decoder: TextDecoder;\n  #isCanceled: boolean;\n  #errorInternal: DOMException|null;\n  #transferFinished!: (arg0: boolean) => void;\n  #output?: Common.StringOutputStream.OutputStream;\n  #reader?: FileReader|null;\n\n  constructor(file: File, chunkSize?: number, chunkTransferredCallback?: ((arg0: ChunkedReader) => void)) {\n    this.#file = file;\n    this.#fileSizeInternal = file.size;\n    this.#loadedSizeInternal = 0;\n    this.#chunkSize = (chunkSize) ? chunkSize : Number.MAX_VALUE;\n    this.#chunkTransferredCallback = chunkTransferredCallback;\n    this.#decoder = new TextDecoder();\n    this.#isCanceled = false;\n    this.#errorInternal = null;\n    this.#streamReader = null;\n  }\n\n  async read(output: Common.StringOutputStream.OutputStream): Promise<boolean> {\n    if (this.#chunkTransferredCallback) {\n      this.#chunkTransferredCallback(this);\n    }\n\n    if (this.#file?.type.endsWith('gzip')) {\n      const fileStream = this.#file.stream();\n      const stream = Common.Gzip.decompressStream(fileStream);\n      this.#streamReader = stream.getReader();\n    } else {\n      this.#reader = new FileReader();\n      this.#reader.onload = this.onChunkLoaded.bind(this);\n      this.#reader.onerror = this.onError.bind(this);\n    }\n\n    this.#output = output;\n    void this.loadChunk();\n\n    return await new Promise(resolve => {\n      this.#transferFinished = resolve;\n    });\n  }\n\n  cancel(): void {\n    this.#isCanceled = true;\n  }\n\n  loadedSize(): number {\n    return this.#loadedSizeInternal;\n  }\n\n  fileSize(): number {\n    return this.#fileSizeInternal;\n  }\n\n  fileName(): string {\n    if (!this.#file) {\n      return '';\n    }\n    return this.#file.name;\n  }\n\n  error(): DOMException|null {\n    return this.#errorInternal;\n  }\n\n  private onChunkLoaded(event: Event): void {\n    if (this.#isCanceled) {\n      return;\n    }\n\n    const eventTarget = (event.target as FileReader);\n    if (eventTarget.readyState !== FileReader.DONE) {\n      return;\n    }\n\n    if (!this.#reader) {\n      return;\n    }\n\n    const buffer = (this.#reader.result as ArrayBuffer);\n    this.#loadedSizeInternal += buffer.byteLength;\n    const endOfFile = this.#loadedSizeInternal === this.#fileSizeInternal;\n    void this.decodeChunkBuffer(buffer, endOfFile);\n  }\n\n  private async decodeChunkBuffer(buffer: ArrayBuffer, endOfFile: boolean): Promise<void> {\n    if (!this.#output) {\n      return;\n    }\n    const decodedString = this.#decoder.decode(buffer, {stream: !endOfFile});\n    await this.#output.write(decodedString, endOfFile);\n    if (this.#isCanceled) {\n      return;\n    }\n    if (this.#chunkTransferredCallback) {\n      this.#chunkTransferredCallback(this);\n    }\n\n    if (endOfFile) {\n      void this.finishRead();\n      return;\n    }\n    void this.loadChunk();\n  }\n\n  private async finishRead(): Promise<void> {\n    if (!this.#output) {\n      return;\n    }\n    this.#file = null;\n    this.#reader = null;\n    await this.#output.close();\n    this.#transferFinished(!this.#errorInternal);\n  }\n\n  private async loadChunk(): Promise<void> {\n    if (!this.#output || !this.#file) {\n      return;\n    }\n    if (this.#streamReader) {\n      const {value, done} = await this.#streamReader.read();\n      if (done || !value) {\n        // Write empty string to inform of file end\n        await this.#output.write('', true);\n        return await this.finishRead();\n      }\n      void this.decodeChunkBuffer(value.buffer, false);\n    }\n    if (this.#reader) {\n      const chunkStart = this.#loadedSizeInternal;\n      const chunkEnd = Math.min(this.#fileSizeInternal, chunkStart + this.#chunkSize);\n      const nextPart = this.#file.slice(chunkStart, chunkEnd);\n      this.#reader.readAsArrayBuffer(nextPart);\n    }\n  }\n\n  private onError(event: Event): void {\n    const eventTarget = (event.target as FileReader);\n    this.#errorInternal = eventTarget.error;\n    this.#transferFinished(false);\n  }\n}\n\nexport class FileOutputStream implements Common.StringOutputStream.OutputStream {\n  #writeCallbacks: Array<() => void>;\n  #fileName!: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString;\n  #closed?: boolean;\n  constructor() {\n    this.#writeCallbacks = [];\n  }\n\n  async open(fileName: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString): Promise<boolean> {\n    this.#closed = false;\n    this.#writeCallbacks = [];\n    this.#fileName = fileName;\n    const saveResponse = await Workspace.FileManager.FileManager.instance().save(\n        this.#fileName, TextUtils.ContentData.EMPTY_TEXT_CONTENT_DATA, /* forceSaveAs=*/ true);\n    if (saveResponse) {\n      Workspace.FileManager.FileManager.instance().addEventListener(\n          Workspace.FileManager.Events.APPENDED_TO_URL, this.onAppendDone, this);\n    }\n    return Boolean(saveResponse);\n  }\n\n  write(data: string): Promise<void> {\n    return new Promise(resolve => {\n      this.#writeCallbacks.push(resolve);\n      Workspace.FileManager.FileManager.instance().append(this.#fileName, data);\n    });\n  }\n\n  async close(): Promise<void> {\n    this.#closed = true;\n    if (this.#writeCallbacks.length) {\n      return;\n    }\n    Workspace.FileManager.FileManager.instance().removeEventListener(\n        Workspace.FileManager.Events.APPENDED_TO_URL, this.onAppendDone, this);\n    Workspace.FileManager.FileManager.instance().close(this.#fileName);\n  }\n\n  private onAppendDone(event: Common.EventTarget.EventTargetEvent<string>): void {\n    if (event.data !== this.#fileName) {\n      return;\n    }\n    const writeCallback = this.#writeCallbacks.shift();\n    if (writeCallback) {\n      writeCallback();\n    }\n    if (this.#writeCallbacks.length) {\n      return;\n    }\n    if (!this.#closed) {\n      return;\n    }\n    Workspace.FileManager.FileManager.instance().removeEventListener(\n        Workspace.FileManager.Events.APPENDED_TO_URL, this.onAppendDone, this);\n    Workspace.FileManager.FileManager.instance().close(this.#fileName);\n  }\n}\n", "/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {CSSWorkspaceBinding} from './CSSWorkspaceBinding.js';\nimport {DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\nimport {type LiveLocation, LiveLocationPool, LiveLocationWithPool} from './LiveLocation.js';\n\nexport interface MessageSource {\n  url?: Platform.DevToolsPath.UrlString;\n  line: number;\n  column: number;\n  scriptId?: Protocol.Runtime.ScriptId;\n  stackTrace?: Protocol.Runtime.StackTrace;\n}\n\nexport class PresentationSourceFrameMessageManager implements\n    SDK.TargetManager.SDKModelObserver<SDK.DebuggerModel.DebuggerModel>,\n    SDK.TargetManager.SDKModelObserver<SDK.CSSModel.CSSModel> {\n  #targetToMessageHelperMap = new WeakMap<SDK.Target.Target, PresentationSourceFrameMessageHelper>();\n  constructor() {\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.DebuggerModel.DebuggerModel, this);\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.CSSModel.CSSModel, this);\n  }\n\n  modelAdded(model: SDK.DebuggerModel.DebuggerModel|SDK.CSSModel.CSSModel): void {\n    const target = model.target();\n    const helper = this.#targetToMessageHelperMap.get(target) ?? new PresentationSourceFrameMessageHelper();\n    if (model instanceof SDK.DebuggerModel.DebuggerModel) {\n      helper.setDebuggerModel(model);\n    } else {\n      helper.setCSSModel(model);\n    }\n    this.#targetToMessageHelperMap.set(target, helper);\n  }\n\n  modelRemoved(model: SDK.DebuggerModel.DebuggerModel|SDK.CSSModel.CSSModel): void {\n    const target = model.target();\n    const helper = this.#targetToMessageHelperMap.get(target);\n    helper?.clear();\n  }\n\n  addMessage(message: Workspace.UISourceCode.Message, source: MessageSource, target: SDK.Target.Target): void {\n    const helper = this.#targetToMessageHelperMap.get(target);\n    void helper?.addMessage(message, source);\n  }\n\n  clear(): void {\n    for (const target of SDK.TargetManager.TargetManager.instance().targets()) {\n      const helper = this.#targetToMessageHelperMap.get(target);\n      helper?.clear();\n    }\n  }\n}\n\nexport class PresentationConsoleMessageManager {\n  #sourceFrameMessageManager = new PresentationSourceFrameMessageManager();\n\n  constructor() {\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageAdded,\n        event => this.consoleMessageAdded(event.data));\n    SDK.ConsoleModel.ConsoleModel.allMessagesUnordered().forEach(this.consoleMessageAdded, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.ConsoleCleared,\n        () => this.#sourceFrameMessageManager.clear());\n  }\n\n  private consoleMessageAdded(consoleMessage: SDK.ConsoleModel.ConsoleMessage): void {\n    const runtimeModel = consoleMessage.runtimeModel();\n    if (!consoleMessage.isErrorOrWarning() || !consoleMessage.runtimeModel() ||\n        consoleMessage.source === Protocol.Log.LogEntrySource.Violation || !runtimeModel) {\n      return;\n    }\n    const level = consoleMessage.level === Protocol.Log.LogEntryLevel.Error ?\n        Workspace.UISourceCode.Message.Level.ERROR :\n        Workspace.UISourceCode.Message.Level.WARNING;\n    this.#sourceFrameMessageManager.addMessage(\n        new Workspace.UISourceCode.Message(level, consoleMessage.messageText), consoleMessage, runtimeModel.target());\n  }\n}\n\nexport class PresentationSourceFrameMessageHelper {\n  #debuggerModel?: SDK.DebuggerModel.DebuggerModel;\n  #cssModel?: SDK.CSSModel.CSSModel;\n  #presentationMessages = new Map<Platform.DevToolsPath.UrlString, Array<{\n                                    source: MessageSource,\n                                    presentation: PresentationSourceFrameMessage,\n                                  }>>();\n  readonly #locationPool: LiveLocationPool;\n\n  constructor() {\n    this.#locationPool = new LiveLocationPool();\n\n    Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n        Workspace.Workspace.Events.UISourceCodeAdded, this.#uiSourceCodeAdded.bind(this));\n  }\n\n  setDebuggerModel(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    if (this.#debuggerModel) {\n      throw new Error('Cannot set DebuggerModel twice');\n    }\n    this.#debuggerModel = debuggerModel;\n    // TODO(dgozman): queueMicrotask because we race with DebuggerWorkspaceBinding on ParsedScriptSource event delivery.\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, event => {\n      queueMicrotask(() => {\n        this.#parsedScriptSource(event);\n      });\n    });\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this.#debuggerReset, this);\n  }\n\n  setCSSModel(cssModel: SDK.CSSModel.CSSModel): void {\n    if (this.#cssModel) {\n      throw new Error('Cannot set CSSModel twice');\n    }\n    this.#cssModel = cssModel;\n    cssModel.addEventListener(\n        SDK.CSSModel.Events.StyleSheetAdded, event => queueMicrotask(() => this.#styleSheetAdded(event)));\n  }\n\n  async addMessage(message: Workspace.UISourceCode.Message, source: MessageSource): Promise<void> {\n    const presentation = new PresentationSourceFrameMessage(message, this.#locationPool);\n    const location = this.#rawLocation(source) ?? this.#cssLocation(source) ?? this.#uiLocation(source);\n    if (location) {\n      await presentation.updateLocationSource(location);\n    }\n    if (source.url) {\n      let messages = this.#presentationMessages.get(source.url);\n      if (!messages) {\n        messages = [];\n        this.#presentationMessages.set(source.url, messages);\n      }\n      messages.push({source, presentation});\n    }\n  }\n\n  #uiLocation(source: MessageSource): Workspace.UISourceCode.UILocation|null {\n    if (!source.url) {\n      return null;\n    }\n\n    const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(source.url);\n    if (!uiSourceCode) {\n      return null;\n    }\n    return new Workspace.UISourceCode.UILocation(uiSourceCode, source.line, source.column);\n  }\n\n  #cssLocation(source: MessageSource): SDK.CSSModel.CSSLocation|null {\n    if (!this.#cssModel || !source.url) {\n      return null;\n    }\n    const locations = this.#cssModel.createRawLocationsByURL(source.url, source.line, source.column);\n    return locations[0] ?? null;\n  }\n\n  #rawLocation(source: MessageSource): SDK.DebuggerModel.Location|null {\n    if (!this.#debuggerModel) {\n      return null;\n    }\n    if (source.scriptId) {\n      return this.#debuggerModel.createRawLocationByScriptId(source.scriptId, source.line, source.column);\n    }\n    const callFrame = source.stackTrace?.callFrames ? source.stackTrace.callFrames[0] : null;\n    if (callFrame) {\n      return this.#debuggerModel.createRawLocationByScriptId(\n          callFrame.scriptId, callFrame.lineNumber, callFrame.columnNumber);\n    }\n    if (source.url) {\n      return this.#debuggerModel.createRawLocationByURL(source.url, source.line, source.column);\n    }\n    return null;\n  }\n\n  #parsedScriptSource(event: Common.EventTarget.EventTargetEvent<SDK.Script.Script>): void {\n    const script = event.data;\n    const messages = this.#presentationMessages.get(script.sourceURL);\n\n    const promises: Array<Promise<void>> = [];\n    for (const {presentation, source} of messages ?? []) {\n      const rawLocation = this.#rawLocation(source);\n      if (rawLocation && script.scriptId === rawLocation.scriptId) {\n        promises.push(presentation.updateLocationSource(rawLocation));\n      }\n    }\n\n    void Promise.all(promises).then(this.parsedScriptSourceForTest.bind(this));\n  }\n\n  parsedScriptSourceForTest(): void {\n  }\n\n  #uiSourceCodeAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    const messages = this.#presentationMessages.get(uiSourceCode.url());\n\n    const promises: Array<Promise<void>> = [];\n    for (const {presentation, source} of messages ?? []) {\n      promises.push(presentation.updateLocationSource(\n          new Workspace.UISourceCode.UILocation(uiSourceCode, source.line, source.column)));\n    }\n    void Promise.all(promises).then(this.uiSourceCodeAddedForTest.bind(this));\n  }\n\n  uiSourceCodeAddedForTest(): void {\n  }\n\n  #styleSheetAdded(event: Common.EventTarget\n                       .EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, SDK.CSSModel.EventTypes>): void {\n    const header = event.data;\n    const messages = this.#presentationMessages.get(header.sourceURL);\n\n    const promises: Array<Promise<void>> = [];\n    for (const {source, presentation} of messages ?? []) {\n      if (header.containsLocation(source.line, source.column)) {\n        promises.push(\n            presentation.updateLocationSource(new SDK.CSSModel.CSSLocation(header, source.line, source.column)));\n      }\n    }\n    void Promise.all(promises).then(this.styleSheetAddedForTest.bind(this));\n  }\n\n  styleSheetAddedForTest(): void {\n  }\n\n  clear(): void {\n    this.#debuggerReset();\n  }\n\n  #debuggerReset(): void {\n    const presentations = Array.from(this.#presentationMessages.values()).flat();\n    for (const {presentation} of presentations) {\n      presentation.dispose();\n    }\n    this.#presentationMessages.clear();\n    this.#locationPool.disposeAll();\n  }\n}\n\nclass FrozenLiveLocation extends LiveLocationWithPool {\n  #uiLocation: Workspace.UISourceCode.UILocation;\n  constructor(\n      uiLocation: Workspace.UISourceCode.UILocation, updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool) {\n    super(updateDelegate, locationPool);\n    this.#uiLocation = uiLocation;\n  }\n\n  override async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    return this.#uiLocation;\n  }\n}\n\nexport class PresentationSourceFrameMessage {\n  #uiSourceCode?: Workspace.UISourceCode.UISourceCode;\n  #liveLocation?: LiveLocation;\n  readonly #locationPool: LiveLocationPool;\n  readonly #message: Workspace.UISourceCode.Message;\n\n  constructor(message: Workspace.UISourceCode.Message, locationPool: LiveLocationPool) {\n    this.#message = message;\n    this.#locationPool = locationPool;\n  }\n\n  async updateLocationSource(source: SDK.DebuggerModel.Location|Workspace.UISourceCode.UILocation|\n                             SDK.CSSModel.CSSLocation): Promise<void> {\n    if (source instanceof SDK.DebuggerModel.Location) {\n      await DebuggerWorkspaceBinding.instance().createLiveLocation(\n          source, this.#updateLocation.bind(this), this.#locationPool);\n    } else if (source instanceof SDK.CSSModel.CSSLocation) {\n      await CSSWorkspaceBinding.instance().createLiveLocation(\n          source, this.#updateLocation.bind(this), this.#locationPool);\n    } else if (source instanceof Workspace.UISourceCode.UILocation) {\n      if (!this.#liveLocation) {  // Don't \"downgrade\" the location if a debugger or css mapping was already successful\n        this.#liveLocation = new FrozenLiveLocation(source, this.#updateLocation.bind(this), this.#locationPool);\n        await this.#liveLocation.update();\n      }\n    }\n  }\n\n  async #updateLocation(liveLocation: LiveLocation): Promise<void> {\n    if (this.#uiSourceCode) {\n      this.#uiSourceCode.removeMessage(this.#message);\n    }\n    if (liveLocation !== this.#liveLocation) {\n      this.#uiSourceCode?.removeMessage(this.#message);\n      this.#liveLocation?.dispose();\n      this.#liveLocation = liveLocation;\n    }\n    const uiLocation = await liveLocation.uiLocation();\n    if (!uiLocation) {\n      return;\n    }\n    this.#message.range =\n        TextUtils.TextRange.TextRange.createFromLocation(uiLocation.lineNumber, uiLocation.columnNumber || 0);\n    this.#uiSourceCode = uiLocation.uiSourceCode;\n    this.#uiSourceCode.addMessage(this.#message);\n  }\n\n  dispose(): void {\n    this.#uiSourceCode?.removeMessage(this.#message);\n    this.#liveLocation?.dispose();\n  }\n}\n", "// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport {CSSWorkspaceBinding} from './CSSWorkspaceBinding.js';\nimport {DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\nimport {NetworkProject} from './NetworkProject.js';\nimport {resourceMetadata} from './ResourceUtils.js';\n\nconst styleSheetRangeMap = new WeakMap<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, TextUtils.TextRange.TextRange>();\nconst scriptRangeMap = new WeakMap<SDK.Script.Script, TextUtils.TextRange.TextRange>();\nconst boundUISourceCodes = new WeakSet<Workspace.UISourceCode.UISourceCode>();\n\nfunction computeScriptRange(script: SDK.Script.Script): TextUtils.TextRange.TextRange {\n  return new TextUtils.TextRange.TextRange(script.lineOffset, script.columnOffset, script.endLine, script.endColumn);\n}\n\nfunction computeStyleSheetRange(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): TextUtils.TextRange.TextRange {\n  return new TextUtils.TextRange.TextRange(header.startLine, header.startColumn, header.endLine, header.endColumn);\n}\n\nexport class ResourceMapping implements SDK.TargetManager.SDKModelObserver<SDK.ResourceTreeModel.ResourceTreeModel> {\n  readonly workspace: Workspace.Workspace.WorkspaceImpl;\n  readonly #modelToInfo = new Map<SDK.ResourceTreeModel.ResourceTreeModel, ModelInfo>();\n\n  constructor(targetManager: SDK.TargetManager.TargetManager, workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.workspace = workspace;\n    targetManager.observeModels(SDK.ResourceTreeModel.ResourceTreeModel, this);\n  }\n\n  modelAdded(resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel): void {\n    const info = new ModelInfo(this.workspace, resourceTreeModel);\n    this.#modelToInfo.set(resourceTreeModel, info);\n  }\n\n  modelRemoved(resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel): void {\n    const info = this.#modelToInfo.get(resourceTreeModel);\n    if (info) {\n      info.dispose();\n      this.#modelToInfo.delete(resourceTreeModel);\n    }\n  }\n\n  private infoForTarget(target: SDK.Target.Target): ModelInfo|null {\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    return resourceTreeModel ? this.#modelToInfo.get(resourceTreeModel) || null : null;\n  }\n\n  uiSourceCodeForScript(script: SDK.Script.Script): Workspace.UISourceCode.UISourceCode|null {\n    const info = this.infoForTarget(script.debuggerModel.target());\n    if (!info) {\n      return null;\n    }\n\n    const project = info.getProject();\n    const uiSourceCode = project.uiSourceCodeForURL(script.sourceURL);\n    return uiSourceCode;\n  }\n\n  cssLocationToUILocation(cssLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    const header = cssLocation.header();\n    if (!header) {\n      return null;\n    }\n    const info = this.infoForTarget(cssLocation.cssModel().target());\n    if (!info) {\n      return null;\n    }\n    const uiSourceCode = info.getProject().uiSourceCodeForURL(cssLocation.url);\n    if (!uiSourceCode) {\n      return null;\n    }\n    const offset = styleSheetRangeMap.get(header) ?? computeStyleSheetRange(header);\n    const lineNumber = cssLocation.lineNumber + offset.startLine - header.startLine;\n    let columnNumber = cssLocation.columnNumber;\n    if (cssLocation.lineNumber === header.startLine) {\n      columnNumber += offset.startColumn - header.startColumn;\n    }\n    return uiSourceCode.uiLocation(lineNumber, columnNumber);\n  }\n\n  jsLocationToUILocation(jsLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null {\n    const script = jsLocation.script();\n    if (!script) {\n      return null;\n    }\n    const info = this.infoForTarget(jsLocation.debuggerModel.target());\n    if (!info) {\n      return null;\n    }\n    const embedderName = script.embedderName();\n    if (!embedderName) {\n      return null;\n    }\n    const uiSourceCode = info.getProject().uiSourceCodeForURL(embedderName);\n    if (!uiSourceCode) {\n      return null;\n    }\n    const {startLine, startColumn} = scriptRangeMap.get(script) ?? computeScriptRange(script);\n    let {lineNumber, columnNumber} = jsLocation;\n    if (lineNumber === script.lineOffset) {\n      columnNumber += startColumn - script.columnOffset;\n    }\n    lineNumber += startLine - script.lineOffset;\n    if (script.hasSourceURL) {\n      if (lineNumber === 0) {\n        columnNumber += script.columnOffset;\n      }\n      lineNumber += script.lineOffset;\n    }\n    return uiSourceCode.uiLocation(lineNumber, columnNumber);\n  }\n\n  uiLocationToJSLocations(uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number, columnNumber: number):\n      SDK.DebuggerModel.Location[] {\n    if (!boundUISourceCodes.has(uiSourceCode)) {\n      return [];\n    }\n    const target = NetworkProject.targetForUISourceCode(uiSourceCode);\n    if (!target) {\n      return [];\n    }\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    if (!debuggerModel) {\n      return [];\n    }\n    const locations = [];\n    for (const script of debuggerModel.scripts()) {\n      if (script.embedderName() !== uiSourceCode.url()) {\n        continue;\n      }\n      const range = scriptRangeMap.get(script) ?? computeScriptRange(script);\n      if (!range.containsLocation(lineNumber, columnNumber)) {\n        continue;\n      }\n      let scriptLineNumber = lineNumber;\n      let scriptColumnNumber = columnNumber;\n      if (script.hasSourceURL) {\n        scriptLineNumber -= range.startLine;\n        if (scriptLineNumber === 0) {\n          scriptColumnNumber -= range.startColumn;\n        }\n      }\n      locations.push(debuggerModel.createRawLocation(script, scriptLineNumber, scriptColumnNumber));\n    }\n    return locations;\n  }\n\n  uiLocationRangeToJSLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textRange: TextUtils.TextRange.TextRange): SDK.DebuggerModel.LocationRange[]|null {\n    if (!boundUISourceCodes.has(uiSourceCode)) {\n      return null;\n    }\n    const target = NetworkProject.targetForUISourceCode(uiSourceCode);\n    if (!target) {\n      return null;\n    }\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    if (!debuggerModel) {\n      return null;\n    }\n    const ranges = [];\n    for (const script of debuggerModel.scripts()) {\n      if (script.embedderName() !== uiSourceCode.url()) {\n        continue;\n      }\n      const scriptTextRange = scriptRangeMap.get(script) ?? computeScriptRange(script);\n      const range = scriptTextRange.intersection(textRange);\n      if (range.isEmpty()) {\n        continue;\n      }\n      let {startLine, startColumn, endLine, endColumn} = range;\n      if (script.hasSourceURL) {\n        startLine -= range.startLine;\n        if (startLine === 0) {\n          startColumn -= range.startColumn;\n        }\n        endLine -= range.startLine;\n        if (endLine === 0) {\n          endColumn -= range.startColumn;\n        }\n      }\n      const start = debuggerModel.createRawLocation(script, startLine, startColumn);\n      const end = debuggerModel.createRawLocation(script, endLine, endColumn);\n      ranges.push({start, end});\n    }\n    return ranges;\n  }\n\n  getMappedLines(uiSourceCode: Workspace.UISourceCode.UISourceCode): Set<number>|null {\n    if (!boundUISourceCodes.has(uiSourceCode)) {\n      return null;\n    }\n    const target = NetworkProject.targetForUISourceCode(uiSourceCode);\n    if (!target) {\n      return null;\n    }\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    if (!debuggerModel) {\n      return null;\n    }\n    const mappedLines = new Set<number>();\n    for (const script of debuggerModel.scripts()) {\n      if (script.embedderName() !== uiSourceCode.url()) {\n        continue;\n      }\n      const {startLine, endLine} = scriptRangeMap.get(script) ?? computeScriptRange(script);\n      for (let line = startLine; line <= endLine; ++line) {\n        mappedLines.add(line);\n      }\n    }\n    return mappedLines;\n  }\n\n  uiLocationToCSSLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    if (!boundUISourceCodes.has(uiLocation.uiSourceCode)) {\n      return [];\n    }\n    const target = NetworkProject.targetForUISourceCode(uiLocation.uiSourceCode);\n    if (!target) {\n      return [];\n    }\n    const cssModel = target.model(SDK.CSSModel.CSSModel);\n    if (!cssModel) {\n      return [];\n    }\n    return cssModel.createRawLocationsByURL(\n        uiLocation.uiSourceCode.url(), uiLocation.lineNumber, uiLocation.columnNumber);\n  }\n\n  resetForTest(target: SDK.Target.Target): void {\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    const info = resourceTreeModel ? this.#modelToInfo.get(resourceTreeModel) : null;\n    if (info) {\n      info.resetForTest();\n    }\n  }\n}\n\nclass ModelInfo {\n  project: ContentProviderBasedProject;\n  readonly #bindings = new Map<string, Binding>();\n  readonly #cssModel: SDK.CSSModel.CSSModel;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  constructor(\n      workspace: Workspace.Workspace.WorkspaceImpl, resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel) {\n    const target = resourceTreeModel.target();\n    this.project = new ContentProviderBasedProject(\n        workspace, 'resources:' + target.id(), Workspace.Workspace.projectTypes.Network, '',\n        false /* isServiceProject */);\n    NetworkProject.setTargetForProject(this.project, target);\n\n    const cssModel = target.model(SDK.CSSModel.CSSModel);\n    console.assert(Boolean(cssModel));\n    this.#cssModel = (cssModel as SDK.CSSModel.CSSModel);\n    for (const frame of resourceTreeModel.frames()) {\n      for (const resource of frame.getResourcesMap().values()) {\n        this.addResource(resource);\n      }\n    }\n    this.#eventListeners = [\n      resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.ResourceAdded, this.resourceAdded, this),\n      resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameWillNavigate, this.frameWillNavigate, this),\n      resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameDetached, this.frameDetached, this),\n      this.#cssModel.addEventListener(\n          SDK.CSSModel.Events.StyleSheetChanged,\n          event => {\n            void this.styleSheetChanged(event);\n          },\n          this),\n    ];\n  }\n\n  private async styleSheetChanged(event: Common.EventTarget.EventTargetEvent<SDK.CSSModel.StyleSheetChangedEvent>):\n      Promise<void> {\n    const header = this.#cssModel.styleSheetHeaderForId(event.data.styleSheetId);\n    if (!header || !header.isInline || (header.isInline && header.isMutable)) {\n      return;\n    }\n    const binding = this.#bindings.get(header.resourceURL());\n    if (!binding) {\n      return;\n    }\n    await binding.styleSheetChanged(header, event.data.edit || null);\n  }\n\n  private acceptsResource(resource: SDK.Resource.Resource): boolean {\n    const resourceType = resource.resourceType();\n    // Only load selected resource types from resources.\n    if (resourceType !== Common.ResourceType.resourceTypes.Image &&\n        resourceType !== Common.ResourceType.resourceTypes.Font &&\n        resourceType !== Common.ResourceType.resourceTypes.Document &&\n        resourceType !== Common.ResourceType.resourceTypes.Manifest &&\n        resourceType !== Common.ResourceType.resourceTypes.Fetch &&\n        resourceType !== Common.ResourceType.resourceTypes.XHR) {\n      return false;\n    }\n\n    // Ignore non-images and non-fonts.\n    if (resourceType === Common.ResourceType.resourceTypes.Image && resource.mimeType &&\n        !resource.mimeType.startsWith('image')) {\n      return false;\n    }\n    if (resourceType === Common.ResourceType.resourceTypes.Font && resource.mimeType &&\n        !resource.mimeType.includes('font')) {\n      return false;\n    }\n    if ((resourceType === Common.ResourceType.resourceTypes.Image ||\n         resourceType === Common.ResourceType.resourceTypes.Font) &&\n        Common.ParsedURL.schemeIs(resource.contentURL(), 'data:')) {\n      return false;\n    }\n    return true;\n  }\n\n  private resourceAdded(event: Common.EventTarget.EventTargetEvent<SDK.Resource.Resource>): void {\n    this.addResource(event.data);\n  }\n\n  private addResource(resource: SDK.Resource.Resource): void {\n    if (!this.acceptsResource(resource)) {\n      return;\n    }\n\n    let binding = this.#bindings.get(resource.url);\n    if (!binding) {\n      binding = new Binding(this.project, resource);\n      this.#bindings.set(resource.url, binding);\n    } else {\n      binding.addResource(resource);\n    }\n  }\n\n  private removeFrameResources(frame: SDK.ResourceTreeModel.ResourceTreeFrame): void {\n    for (const resource of frame.resources()) {\n      if (!this.acceptsResource(resource)) {\n        continue;\n      }\n      const binding = this.#bindings.get(resource.url);\n      if (!binding) {\n        continue;\n      }\n      if (binding.resources.size === 1) {\n        binding.dispose();\n        this.#bindings.delete(resource.url);\n      } else {\n        binding.removeResource(resource);\n      }\n    }\n  }\n\n  private frameWillNavigate(event: Common.EventTarget.EventTargetEvent<SDK.ResourceTreeModel.ResourceTreeFrame>): void {\n    this.removeFrameResources(event.data);\n  }\n\n  private frameDetached(\n      event: Common.EventTarget.EventTargetEvent<{frame: SDK.ResourceTreeModel.ResourceTreeFrame, isSwap: boolean}>):\n      void {\n    this.removeFrameResources(event.data.frame);\n  }\n\n  resetForTest(): void {\n    for (const binding of this.#bindings.values()) {\n      binding.dispose();\n    }\n    this.#bindings.clear();\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    for (const binding of this.#bindings.values()) {\n      binding.dispose();\n    }\n    this.#bindings.clear();\n    this.project.removeProject();\n  }\n\n  getProject(): ContentProviderBasedProject {\n    return this.project;\n  }\n}\n\nclass Binding implements TextUtils.ContentProvider.ContentProvider {\n  readonly resources: Set<SDK.Resource.Resource>;\n  readonly #project: ContentProviderBasedProject;\n  readonly #uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  #edits: Array<{\n    stylesheet: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader,\n    edit: SDK.CSSModel.Edit|null,\n  }> = [];\n  constructor(project: ContentProviderBasedProject, resource: SDK.Resource.Resource) {\n    this.resources = new Set([resource]);\n    this.#project = project;\n    this.#uiSourceCode = this.#project.createUISourceCode(resource.url, resource.contentType());\n    boundUISourceCodes.add(this.#uiSourceCode);\n    if (resource.frameId) {\n      NetworkProject.setInitialFrameAttribution(this.#uiSourceCode, resource.frameId);\n    }\n    this.#project.addUISourceCodeWithProvider(this.#uiSourceCode, this, resourceMetadata(resource), resource.mimeType);\n\n    void Promise.all([\n      ...this.inlineScripts().map(script => DebuggerWorkspaceBinding.instance().updateLocations(script)),\n      ...this.inlineStyles().map(style => CSSWorkspaceBinding.instance().updateLocations(style)),\n    ]);\n  }\n\n  private inlineStyles(): SDK.CSSStyleSheetHeader.CSSStyleSheetHeader[] {\n    const target = NetworkProject.targetForUISourceCode(this.#uiSourceCode);\n    const stylesheets: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader[] = [];\n    if (!target) {\n      return stylesheets;\n    }\n    const cssModel = target.model(SDK.CSSModel.CSSModel);\n    if (cssModel) {\n      for (const headerId of cssModel.getStyleSheetIdsForURL(this.#uiSourceCode.url())) {\n        const header = cssModel.styleSheetHeaderForId(headerId);\n        if (header) {\n          stylesheets.push(header);\n        }\n      }\n    }\n    return stylesheets;\n  }\n\n  private inlineScripts(): SDK.Script.Script[] {\n    const target = NetworkProject.targetForUISourceCode(this.#uiSourceCode);\n    if (!target) {\n      return [];\n    }\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    if (!debuggerModel) {\n      return [];\n    }\n    return debuggerModel.scripts().filter(script => script.embedderName() === this.#uiSourceCode.url());\n  }\n\n  async styleSheetChanged(stylesheet: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, edit: SDK.CSSModel.Edit|null):\n      Promise<void> {\n    this.#edits.push({stylesheet, edit});\n    if (this.#edits.length > 1) {\n      return;\n    }  // There is already a styleSheetChanged loop running\n\n    const content = await this.#uiSourceCode.requestContentData();\n    if (!TextUtils.ContentData.ContentData.isError(content)) {\n      await this.innerStyleSheetChanged(content.text);\n    }\n    this.#edits = [];\n  }\n\n  private async innerStyleSheetChanged(content: string): Promise<void> {\n    const scripts = this.inlineScripts();\n    const styles = this.inlineStyles();\n    let text: TextUtils.Text.Text = new TextUtils.Text.Text(content);\n    for (const data of this.#edits) {\n      const edit = data.edit;\n      if (!edit) {\n        continue;\n      }\n      const stylesheet = data.stylesheet;\n      const startLocation = styleSheetRangeMap.get(stylesheet) ?? computeStyleSheetRange(stylesheet);\n\n      const oldRange = edit.oldRange.relativeFrom(startLocation.startLine, startLocation.startColumn);\n      const newRange = edit.newRange.relativeFrom(startLocation.startLine, startLocation.startColumn);\n      text = new TextUtils.Text.Text(text.replaceRange(oldRange, edit.newText));\n      const updatePromises = [];\n      for (const script of scripts) {\n        const range = scriptRangeMap.get(script) ?? computeScriptRange(script);\n        if (!range.follows(oldRange)) {\n          continue;\n        }\n        scriptRangeMap.set(script, range.rebaseAfterTextEdit(oldRange, newRange));\n        updatePromises.push(DebuggerWorkspaceBinding.instance().updateLocations(script));\n      }\n      for (const style of styles) {\n        const range = styleSheetRangeMap.get(style) ?? computeStyleSheetRange(style);\n        if (!range.follows(oldRange)) {\n          continue;\n        }\n        styleSheetRangeMap.set(style, range.rebaseAfterTextEdit(oldRange, newRange));\n        updatePromises.push(CSSWorkspaceBinding.instance().updateLocations(style));\n      }\n      await Promise.all(updatePromises);\n    }\n    this.#uiSourceCode.addRevision(text.value());\n  }\n\n  addResource(resource: SDK.Resource.Resource): void {\n    this.resources.add(resource);\n    if (resource.frameId) {\n      NetworkProject.addFrameAttribution(this.#uiSourceCode, resource.frameId);\n    }\n  }\n\n  removeResource(resource: SDK.Resource.Resource): void {\n    this.resources.delete(resource);\n    if (resource.frameId) {\n      NetworkProject.removeFrameAttribution(this.#uiSourceCode, resource.frameId);\n    }\n  }\n\n  dispose(): void {\n    this.#project.removeUISourceCode(this.#uiSourceCode.url());\n    void Promise.all([\n      ...this.inlineScripts().map(script => DebuggerWorkspaceBinding.instance().updateLocations(script)),\n      ...this.inlineStyles().map(style => CSSWorkspaceBinding.instance().updateLocations(style)),\n    ]);\n  }\n\n  private firstResource(): SDK.Resource.Resource {\n    console.assert(this.resources.size > 0);\n    return this.resources.values().next().value as SDK.Resource.Resource;\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    return this.firstResource().contentURL();\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    return this.firstResource().contentType();\n  }\n\n  requestContentData(): Promise<TextUtils.ContentData.ContentDataOrError> {\n    return this.firstResource().requestContentData();\n  }\n\n  searchInContent(query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    return this.firstResource().searchInContent(query, caseSensitive, isRegex);\n  }\n}\n", "/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\n\nimport {ChunkedFileReader, type ChunkedReader} from './FileUtils.js';\n\nexport class TempFile {\n  #lastBlob: Blob|null;\n  constructor() {\n    this.#lastBlob = null;\n  }\n\n  write(pieces: Array<string|Blob>): void {\n    if (this.#lastBlob) {\n      pieces.unshift(this.#lastBlob);\n    }\n    this.#lastBlob = new Blob(pieces, {type: 'text/plain'});\n  }\n\n  read(): Promise<string|null> {\n    return this.readRange();\n  }\n\n  size(): number {\n    return this.#lastBlob ? this.#lastBlob.size : 0;\n  }\n\n  async readRange(startOffset?: number, endOffset?: number): Promise<string|null> {\n    if (!this.#lastBlob) {\n      Common.Console.Console.instance().error('Attempt to read a temp file that was never written');\n      return '';\n    }\n    const blob = typeof startOffset === 'number' || typeof endOffset === 'number' ?\n        this.#lastBlob.slice((startOffset as number), (endOffset as number)) :\n        this.#lastBlob;\n\n    const reader = new FileReader();\n    try {\n      await new Promise((resolve, reject) => {\n        reader.onloadend = resolve;\n        reader.onerror = reject;\n        reader.readAsText(blob);\n      });\n    } catch (error) {\n      Common.Console.Console.instance().error('Failed to read from temp file: ' + error.message);\n    }\n\n    return reader.result as string | null;\n  }\n\n  async copyToOutputStream(\n      outputStream: Common.StringOutputStream.OutputStream,\n      progress?: ((arg0: ChunkedReader) => void)): Promise<DOMError|null> {\n    if (!this.#lastBlob) {\n      void outputStream.close();\n      return null;\n    }\n    const reader = new ChunkedFileReader((this.#lastBlob as File), 10 * 1000 * 1000, progress);\n    return await reader.read(outputStream).then(success => success ? null : reader.error());\n  }\n\n  remove(): void {\n    this.#lastBlob = null;\n  }\n}\n"],
  "mappings": "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",
  "names": ["Common", "Platform", "SDK", "TextUtils", "Workspace", "script", "Common", "Platform", "SDK", "Common", "SDK", "TextUtils", "Workspace", "Common", "SDK", "TextUtils", "Workspace", "Common", "Platform", "SDK", "Workspace", "Common", "i18n", "SDK", "TextUtils", "Workspace", "UIStrings", "str_", "i18nString", "object", "exceptionDetails", "callFrames", "console", "Common", "Platform", "SDK", "Workspace", "Common", "SDK", "Workspace", "Common", "i18n", "Platform", "SDK", "TextUtils", "Workspace", "UIStrings", "str_", "i18nString", "status", "ModelData", "locations", "ranges", "Common", "TextUtils", "Workspace", "SDK", "TextUtils", "Workspace", "Common", "SDK", "TextUtils", "Workspace", "ModelInfo", "Binding", "Common"]
}
