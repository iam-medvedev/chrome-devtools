{
  "version": 3,
  "sources": ["../../../../../../front_end/services/puppeteer/PuppeteerConnection.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as puppeteer from '../../third_party/puppeteer/puppeteer.js';\n\nclass Transport implements puppeteer.ConnectionTransport {\n  #connection: SDK.Connections.ParallelConnectionInterface;\n\n  constructor(connection: SDK.Connections.ParallelConnectionInterface) {\n    this.#connection = connection;\n  }\n\n  send(data: string): void {\n    this.#connection.sendRawMessage(data);\n  }\n\n  close(): void {\n    void this.#connection.disconnect();\n  }\n\n  set onmessage(cb: (message: string) => void) {\n    this.#connection.setOnMessage((message: unknown) => {\n      const data = (message) as {id: number, method: string, params: unknown, sessionId?: string};\n      if (!data.sessionId) {\n        return;\n      }\n\n      return cb(JSON.stringify({\n        ...data,\n        // Puppeteer is expecting to use the default session, but we give it a non-default session in #connection.\n        // Replace that sessionId with undefined so Puppeteer treats it as default.\n        sessionId: data.sessionId === this.#connection.getSessionId() ? undefined : data.sessionId,\n      }));\n    });\n  }\n\n  set onclose(cb: () => void) {\n    const prev = this.#connection.getOnDisconnect();\n    this.#connection.setOnDisconnect(reason => {\n      if (prev) {\n        prev(reason);\n      }\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\n\nclass PuppeteerConnection extends puppeteer.Connection {\n  override async onMessage(message: string): Promise<void> {\n    const msgObj = JSON.parse(message) as {id: number, method: string, params: unknown, sessionId?: string};\n    if (msgObj.sessionId && !this._sessions.has(msgObj.sessionId)) {\n      return;\n    }\n    void super.onMessage(message);\n  }\n}\n\nexport class PuppeteerConnectionHelper {\n  static async connectPuppeteerToConnectionViaTab(options: {\n    connection: SDK.Connections.ParallelConnectionInterface,\n    rootTargetId: string,\n    isPageTargetCallback: (targetInfo: Protocol.Target.TargetInfo) => boolean,\n  }): Promise<{\n    page: puppeteer.Page | null,\n    browser: puppeteer.Browser,\n    puppeteerConnection: puppeteer.Connection,\n  }> {\n    const {connection, rootTargetId, isPageTargetCallback} = options;\n    // Pass an empty message handler because it will be overwritten by puppeteer anyways.\n    const transport = new Transport(connection);\n\n    // url is an empty string in this case parallel to:\n    // https://github.com/puppeteer/puppeteer/blob/f63a123ecef86693e6457b07437a96f108f3e3c5/src/common/BrowserConnector.ts#L72\n    const puppeteerConnection = new PuppeteerConnection('', transport);\n\n    const browserPromise = puppeteer.Browser._create(\n        puppeteerConnection,\n        [] /* contextIds */,\n        false /* ignoreHTTPSErrors */,\n        undefined /* defaultViewport */,\n        undefined /* DownloadBehavior */,\n        undefined /* process */,\n        undefined /* closeCallback */,\n        undefined /* targetFilterCallback */,\n        target => isPageTargetCallback((target as puppeteer.Target)._getTargetInfo()),\n        false /* waitForInitiallyDiscoveredTargets */,\n    );\n\n    const [, browser] = await Promise.all([\n      puppeteerConnection._createSession({targetId: rootTargetId}, /* emulateAutoAttach= */ true),\n      browserPromise,\n    ]);\n\n    await browser.waitForTarget(t => t.type() === 'page');\n\n    const pages = await browser.pages();\n\n    return {page: pages[0] as puppeteer.Page, browser, puppeteerConnection};\n  }\n}\n"],
  "mappings": ";;;;;;;AAAA;;;;AAMA,YAAY,eAAe;AAE3B,IAAM,YAAN,MAAe;EACb;EAEA,YAAY,YAAuD;AACjE,SAAK,cAAc;EACrB;EAEA,KAAK,MAAY;AACf,SAAK,YAAY,eAAe,IAAI;EACtC;EAEA,QAAK;AACH,SAAK,KAAK,YAAY,WAAU;EAClC;EAEA,IAAI,UAAU,IAA6B;AACzC,SAAK,YAAY,aAAa,CAAC,YAAoB;AACjD,YAAM,OAAQ;AACd,UAAI,CAAC,KAAK,WAAW;AACnB;MACF;AAEA,aAAO,GAAG,KAAK,UAAU;QACvB,GAAG;;;QAGH,WAAW,KAAK,cAAc,KAAK,YAAY,aAAY,IAAK,SAAY,KAAK;OAClF,CAAC;IACJ,CAAC;EACH;EAEA,IAAI,QAAQ,IAAc;AACxB,UAAM,OAAO,KAAK,YAAY,gBAAe;AAC7C,SAAK,YAAY,gBAAgB,YAAS;AACxC,UAAI,MAAM;AACR,aAAK,MAAM;MACb;AACA,UAAI,IAAI;AACN,WAAE;MACJ;IACF,CAAC;EACH;;AAGF,IAAM,sBAAN,cAA4C,qBAAU;EAC3C,MAAM,UAAU,SAAe;AACtC,UAAM,SAAS,KAAK,MAAM,OAAO;AACjC,QAAI,OAAO,aAAa,CAAC,KAAK,UAAU,IAAI,OAAO,SAAS,GAAG;AAC7D;IACF;AACA,SAAK,MAAM,UAAU,OAAO;EAC9B;;AAGI,IAAO,4BAAP,MAAgC;EACpC,aAAa,mCAAmC,SAI/C;AAKC,UAAM,EAAC,YAAY,cAAc,qBAAoB,IAAI;AAEzD,UAAM,YAAY,IAAI,UAAU,UAAU;AAI1C,UAAM,sBAAsB,IAAI,oBAAoB,IAAI,SAAS;AAEjE,UAAM,iBAA2B,kBAAQ;MACrC;MACA,CAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,YAAU,qBAAsB,OAA4B,eAAc,CAAE;MAC5E;;IAA6C;AAGjD,UAAM,CAAC,EAAE,OAAO,IAAI,MAAM,QAAQ,IAAI;MACpC,oBAAoB;QAAe,EAAC,UAAU,aAAY;;QAA4B;MAAI;MAC1F;KACD;AAED,UAAM,QAAQ,cAAc,OAAK,EAAE,KAAI,MAAO,MAAM;AAEpD,UAAM,QAAQ,MAAM,QAAQ,MAAK;AAEjC,WAAO,EAAC,MAAM,MAAM,CAAC,GAAqB,SAAS,oBAAmB;EACxE;;",
  "names": []
}
