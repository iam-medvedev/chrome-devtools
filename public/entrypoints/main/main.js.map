{
  "version": 3,
  "sources": ["../../../../../../front_end/entrypoints/main/ExecutionContextSelector.ts", "../../../../../../front_end/entrypoints/main/GlobalAiButton.ts", "globalAiButton.css.js", "../../../../../../front_end/entrypoints/main/MainImpl.ts", "../../../../../../front_end/entrypoints/main/SimpleApp.ts"],
  "sourcesContent": ["// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as UI from '../../ui/legacy/legacy.js';\n\nexport class ExecutionContextSelector implements SDK.TargetManager.SDKModelObserver<SDK.RuntimeModel.RuntimeModel> {\n  #targetManager: SDK.TargetManager.TargetManager;\n  #context: UI.Context.Context;\n  #lastSelectedContextId?: string;\n  #ignoreContextChanged?: boolean;\n\n  constructor(targetManager: SDK.TargetManager.TargetManager, context: UI.Context.Context) {\n    context.addFlavorChangeListener(SDK.RuntimeModel.ExecutionContext, this.#executionContextChanged, this);\n    context.addFlavorChangeListener(SDK.Target.Target, this.#targetChanged, this);\n\n    targetManager.addModelListener(\n        SDK.RuntimeModel.RuntimeModel, SDK.RuntimeModel.Events.ExecutionContextCreated, this.#onExecutionContextCreated,\n        this);\n    targetManager.addModelListener(\n        SDK.RuntimeModel.RuntimeModel, SDK.RuntimeModel.Events.ExecutionContextDestroyed,\n        this.#onExecutionContextDestroyed, this);\n    targetManager.addModelListener(\n        SDK.RuntimeModel.RuntimeModel, SDK.RuntimeModel.Events.ExecutionContextOrderChanged,\n        this.#onExecutionContextOrderChanged, this);\n    this.#targetManager = targetManager;\n    this.#context = context;\n    targetManager.observeModels(SDK.RuntimeModel.RuntimeModel, this);\n  }\n\n  modelAdded(runtimeModel: SDK.RuntimeModel.RuntimeModel): void {\n    // Defer selecting default target since we need all clients to get their\n    // targetAdded notifications first.\n    queueMicrotask(deferred.bind(this));\n\n    function deferred(this: ExecutionContextSelector): void {\n      // We always want the second context for the service worker targets.\n      if (!this.#context.flavor(SDK.Target.Target)) {\n        this.#context.setFlavor(SDK.Target.Target, runtimeModel.target());\n      }\n    }\n  }\n\n  modelRemoved(runtimeModel: SDK.RuntimeModel.RuntimeModel): void {\n    const currentExecutionContext = this.#context.flavor(SDK.RuntimeModel.ExecutionContext);\n    if (currentExecutionContext && currentExecutionContext.runtimeModel === runtimeModel) {\n      this.#currentExecutionContextGone();\n    }\n\n    const models = this.#targetManager.models(SDK.RuntimeModel.RuntimeModel);\n    if (this.#context.flavor(SDK.Target.Target) === runtimeModel.target() && models.length) {\n      this.#context.setFlavor(SDK.Target.Target, models[0].target());\n    }\n  }\n\n  #executionContextChanged({\n    data: newContext,\n  }: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext|null>): void {\n    if (newContext) {\n      this.#context.setFlavor(SDK.Target.Target, newContext.target());\n      if (!this.#ignoreContextChanged) {\n        this.#lastSelectedContextId = this.#contextPersistentId(newContext);\n      }\n    }\n  }\n\n  #contextPersistentId(executionContext: SDK.RuntimeModel.ExecutionContext): string {\n    return executionContext.isDefault ? executionContext.target().name() + ':' + executionContext.frameId : '';\n  }\n\n  #targetChanged({data: newTarget}: Common.EventTarget.EventTargetEvent<SDK.Target.Target|null>): void {\n    const currentContext = this.#context.flavor(SDK.RuntimeModel.ExecutionContext);\n\n    if (!newTarget || (currentContext && currentContext.target() === newTarget)) {\n      return;\n    }\n\n    const runtimeModel = newTarget.model(SDK.RuntimeModel.RuntimeModel);\n    const executionContexts = runtimeModel ? runtimeModel.executionContexts() : [];\n    if (!executionContexts.length) {\n      return;\n    }\n\n    let newContext: SDK.RuntimeModel.ExecutionContext|null = null;\n    for (let i = 0; i < executionContexts.length && !newContext; ++i) {\n      if (this.#shouldSwitchToContext(executionContexts[i])) {\n        newContext = executionContexts[i];\n      }\n    }\n    for (let i = 0; i < executionContexts.length && !newContext; ++i) {\n      if (this.#isDefaultContext(executionContexts[i])) {\n        newContext = executionContexts[i];\n      }\n    }\n    this.#ignoreContextChanged = true;\n    this.#context.setFlavor(SDK.RuntimeModel.ExecutionContext, newContext || executionContexts[0]);\n    this.#ignoreContextChanged = false;\n  }\n\n  #shouldSwitchToContext(executionContext: SDK.RuntimeModel.ExecutionContext): boolean {\n    if (executionContext.target().targetInfo()?.subtype) {\n      return false;\n    }\n    if (this.#lastSelectedContextId && this.#lastSelectedContextId === this.#contextPersistentId(executionContext)) {\n      return true;\n    }\n    return !this.#lastSelectedContextId && this.#isDefaultContext(executionContext);\n  }\n\n  #isDefaultContext(executionContext: SDK.RuntimeModel.ExecutionContext): boolean {\n    if (!executionContext.isDefault || !executionContext.frameId) {\n      return false;\n    }\n    if (executionContext.target().parentTarget()?.type() === SDK.Target.Type.FRAME) {\n      return false;\n    }\n    const resourceTreeModel = executionContext.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n    const frame = resourceTreeModel?.frameForId(executionContext.frameId);\n    return Boolean(frame?.isOutermostFrame());\n  }\n\n  #onExecutionContextCreated(event: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext>): void {\n    if (this.#lastSelectedContextId === undefined) {\n      // We switch to the first context created (if applicable) but ignore sub-sequent\n      // worker context creations.\n      this.#switchContextIfNecessary(event.data);\n      return;\n    }\n\n    switch (event.data.target().type()) {\n      case SDK.Target.Type.AUCTION_WORKLET:\n      case SDK.Target.Type.SHARED_STORAGE_WORKLET:\n      case SDK.Target.Type.SHARED_WORKER:\n      case SDK.Target.Type.ServiceWorker:\n      case SDK.Target.Type.WORKLET:\n      case SDK.Target.Type.Worker:\n        return;\n\n      case SDK.Target.Type.BROWSER:\n      case SDK.Target.Type.FRAME:\n      case SDK.Target.Type.NODE:\n      case SDK.Target.Type.TAB:\n        this.#switchContextIfNecessary(event.data);\n        break;\n    }\n  }\n\n  #onExecutionContextDestroyed(event: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext>): void {\n    const executionContext = event.data;\n    if (this.#context.flavor(SDK.RuntimeModel.ExecutionContext) === executionContext) {\n      this.#currentExecutionContextGone();\n    }\n  }\n\n  #onExecutionContextOrderChanged(event: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.RuntimeModel>): void {\n    const runtimeModel = event.data;\n    const executionContexts = runtimeModel.executionContexts();\n    for (let i = 0; i < executionContexts.length; i++) {\n      if (this.#switchContextIfNecessary(executionContexts[i])) {\n        break;\n      }\n    }\n  }\n\n  #switchContextIfNecessary(executionContext: SDK.RuntimeModel.ExecutionContext): boolean {\n    if (!this.#context.flavor(SDK.RuntimeModel.ExecutionContext) || this.#shouldSwitchToContext(executionContext)) {\n      this.#ignoreContextChanged = true;\n      this.#context.setFlavor(SDK.RuntimeModel.ExecutionContext, executionContext);\n      this.#ignoreContextChanged = false;\n      return true;\n    }\n    return false;\n  }\n\n  #currentExecutionContextGone(): void {\n    const runtimeModels = this.#targetManager.models(SDK.RuntimeModel.RuntimeModel);\n    let newContext: SDK.RuntimeModel.ExecutionContext|null = null;\n    for (let i = 0; i < runtimeModels.length && !newContext; ++i) {\n      const executionContexts = runtimeModels[i].executionContexts();\n      for (const executionContext of executionContexts) {\n        if (this.#isDefaultContext(executionContext)) {\n          newContext = executionContext;\n          break;\n        }\n      }\n    }\n    if (!newContext) {\n      for (let i = 0; i < runtimeModels.length && !newContext; ++i) {\n        const executionContexts = runtimeModels[i].executionContexts();\n        if (executionContexts.length) {\n          newContext = executionContexts[0];\n          break;\n        }\n      }\n    }\n    this.#ignoreContextChanged = true;\n    this.#context.setFlavor(SDK.RuntimeModel.ExecutionContext, newContext);\n    this.#ignoreContextChanged = false;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Lit from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport globalAiButtonStyles from './globalAiButton.css.js';\n\nconst {render, html, Directives: {classMap}} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Button's string in promotion state.\n   */\n  aiAssistance: 'AI assistance',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/main/GlobalAiButton.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst DELAY_BEFORE_PROMOTION_COLLAPSE_IN_MS = 5000;\nconst PROMOTION_END_DATE = new Date('2026-09-30');\n\nfunction getClickCountSetting(): Common.Settings.Setting<number> {\n  return Common.Settings.Settings.instance().createSetting<number>(\n      'global-ai-button-click-count', 0, Common.Settings.SettingStorageType.SYNCED);\n}\n\nfunction incrementClickCountSetting(): void {\n  const setting = getClickCountSetting();\n  setting.set(setting.get() + 1);\n}\n\nexport enum GlobalAiButtonState {\n  PROMOTION = 'promotion',\n  DEFAULT = 'default',\n}\n\ninterface ViewInput {\n  state: GlobalAiButtonState;\n  onClick: () => void;\n}\n\nexport const DEFAULT_VIEW = (input: ViewInput, output: undefined, target: HTMLElement): void => {\n  const inPromotionState = input.state === GlobalAiButtonState.PROMOTION;\n  const classes = classMap({\n    'global-ai-button': true,\n    expanded: inPromotionState,\n  });\n  // clang-format off\n  render(html`\n    <style>${globalAiButtonStyles}</style>\n    <div class=\"global-ai-button-container\">\n      <button class=${classes} @click=${input.onClick} jslog=${VisualLogging.action().track({click: true}).context('global-ai-button')}>\n        <devtools-icon name=\"smart-assistant\"></devtools-icon>\n        <span class=\"button-text\">${` ${i18nString(UIStrings.aiAssistance)}`}</span>\n      </button>\n    </div>\n  `, target);\n  // clang-format on\n};\n\nexport type View = typeof DEFAULT_VIEW;\nexport class GlobalAiButton extends UI.Widget.Widget {\n  #view: View;\n  #buttonState: GlobalAiButtonState = GlobalAiButtonState.DEFAULT;\n  #mouseOnMainToolbar = false;\n  #returnToDefaultStateTimeout?: number;\n\n  constructor(element?: HTMLElement, view?: View) {\n    super(element);\n    this.#view = view ?? DEFAULT_VIEW;\n    this.requestUpdate();\n\n    if (this.#shouldTriggerPromotion()) {\n      this.#triggerPromotion();\n    }\n  }\n\n  override willHide(): void {\n    this.#removeHoverEventListeners();\n\n    if (this.#returnToDefaultStateTimeout) {\n      window.clearTimeout(this.#returnToDefaultStateTimeout);\n    }\n  }\n\n  #handleMainToolbarMouseEnter = (): void => {\n    this.#mouseOnMainToolbar = true;\n  };\n\n  #handleMainToolbarMouseLeave = (): void => {\n    this.#mouseOnMainToolbar = false;\n  };\n\n  #addHoverEventListeners(): void {\n    UI.InspectorView.InspectorView.instance().tabbedPane.headerElement().addEventListener(\n        'mouseenter', this.#handleMainToolbarMouseEnter);\n    UI.InspectorView.InspectorView.instance().tabbedPane.headerElement().addEventListener(\n        'mouseleave', this.#handleMainToolbarMouseLeave);\n  }\n\n  #removeHoverEventListeners(): void {\n    UI.InspectorView.InspectorView.instance().tabbedPane.headerElement().removeEventListener(\n        'mouseenter', this.#handleMainToolbarMouseEnter);\n    UI.InspectorView.InspectorView.instance().tabbedPane.headerElement().removeEventListener(\n        'mouseleave', this.#handleMainToolbarMouseLeave);\n  }\n\n  // We only want to enable promotion when:\n  // * The flag is enabled,\n  // * The current date is before the promotion end date,\n  // * The click count on this button is less than 2.\n  #shouldTriggerPromotion(): boolean {\n    const isFlagEnabled = Boolean(Root.Runtime.hostConfig.devToolsGlobalAiButton?.promotionEnabled);\n    const isBeforeEndDate = (new Date()) < PROMOTION_END_DATE;\n    return isFlagEnabled && isBeforeEndDate && getClickCountSetting().get() < 2;\n  }\n\n  #triggerPromotion(): void {\n    // Set up hover listeners for making sure that we don't return to default state from promotion state\n    // when the user's cursor is on the main toolbar.\n    this.#buttonState = GlobalAiButtonState.PROMOTION;\n    this.requestUpdate();\n    this.#addHoverEventListeners();\n    this.#scheduleReturnToDefaultState();\n  }\n\n  #scheduleReturnToDefaultState(): void {\n    if (this.#returnToDefaultStateTimeout) {\n      window.clearTimeout(this.#returnToDefaultStateTimeout);\n    }\n\n    this.#returnToDefaultStateTimeout = window.setTimeout(() => {\n      // If the mouse is currently on the main toolbar,\n      // we don't want to trigger the animation from promotion & to the default\n      // state to not cause a layout shift when the user is not expecting it\n      // (e.g. while they were going to click on a button on the toolbar).\n      if (this.#mouseOnMainToolbar) {\n        this.#scheduleReturnToDefaultState();\n        return;\n      }\n\n      this.#buttonState = GlobalAiButtonState.DEFAULT;\n      this.requestUpdate();\n      // Remove hover listeners once the button is in its default state.\n      this.#removeHoverEventListeners();\n    }, DELAY_BEFORE_PROMOTION_COLLAPSE_IN_MS);\n  }\n\n  #onClick(): void {\n    UI.ViewManager.ViewManager.instance().showViewInLocation('freestyler', 'drawer-view');\n    incrementClickCountSetting();\n\n    const hasExplicitUserPreference =\n        UI.InspectorView.InspectorView.instance().isUserExplicitlyUpdatedDrawerOrientation();\n    const isVerticalDrawerFeatureEnabled =\n        Boolean(Root.Runtime.hostConfig.devToolsFlexibleLayout?.verticalDrawerEnabled);\n    if (isVerticalDrawerFeatureEnabled && !hasExplicitUserPreference) {\n      // This mimics what we're doing while showing the drawer via `ESC`.\n      // There is a bug where opening the sidebar directly for the first time,\n      // and triggering a drawer rotation without calling `showDrawer({focus: true})` makes the drawer disappear.\n      UI.InspectorView.InspectorView.instance().showDrawer({\n        focus: true,\n        hasTargetDrawer: false,\n      });\n      UI.InspectorView.InspectorView.instance().toggleDrawerOrientation(\n          {force: UI.InspectorView.DrawerOrientation.VERTICAL});\n    }\n  }\n\n  override performUpdate(): Promise<void>|void {\n    this.#view(\n        {\n          state: this.#buttonState,\n          onClick: this.#onClick.bind(this),\n        },\n        undefined, this.contentElement);\n  }\n}\n\nlet globalAiButtonToolbarProviderInstance: GlobalAiButtonToolbarProvider;\nexport class GlobalAiButtonToolbarProvider implements UI.Toolbar.Provider {\n  #toolbarItem: UI.Toolbar.ToolbarItemWithCompactLayout;\n  #widgetElement: UI.Widget.WidgetElement<GlobalAiButton>;\n\n  private constructor() {\n    this.#widgetElement = document.createElement('devtools-widget') as UI.Widget.WidgetElement<GlobalAiButton>;\n    this.#widgetElement.widgetConfig = UI.Widget.widgetConfig(GlobalAiButton);\n\n    this.#toolbarItem = new UI.Toolbar.ToolbarItemWithCompactLayout(this.#widgetElement);\n    this.#toolbarItem.setVisible(false);\n  }\n\n  item(): UI.Toolbar.ToolbarItem|null {\n    return this.#toolbarItem;\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): GlobalAiButtonToolbarProvider {\n    const {forceNew} = opts;\n    if (!globalAiButtonToolbarProviderInstance || forceNew) {\n      globalAiButtonToolbarProviderInstance = new GlobalAiButtonToolbarProvider();\n    }\n\n    return globalAiButtonToolbarProviderInstance;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n@scope to (devtools-widget > *) {\n  .global-ai-button-container {\n    margin-left: var(--sys-size-3);\n    margin-right: var(--sys-size-2);\n  }\n\n  .global-ai-button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: var(--sys-size-9);\n    height: var(--sys-size-9);\n    border-radius: var(--sys-shape-corner-full);\n    background-image: var(--app-gradient-google-ai);\n    font: var(--sys-typescale-body4-medium);\n    color: var(--ref-palette-neutral100);\n    transition: width 1s, padding 1s;\n    margin-left: auto;\n    overflow: hidden;\n    position: relative;\n    border: 0;\n\n    &:focus-visible {\n      outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n    }\n\n    &:hover::after,\n    &:active::after {\n      content: \"\";\n      height: 100%;\n      width: 100%;\n      border-radius: inherit;\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n\n    &:hover::after {\n      background-color: var(--sys-color-state-hover-on-prominent);\n    }\n\n    &:active::after {\n      background-color: var(--sys-color-state-ripple-primary);\n    }\n\n    devtools-icon {\n      width: var(--sys-size-7);\n      height: var(--sys-size-7);\n      color: var(--ref-palette-neutral100);\n    }\n\n    .button-text {\n      opacity: 0%;\n      transition: opacity 1s;\n    }\n  }\n\n  .global-ai-button.expanded {\n    width: auto;\n    padding: 0 var(--sys-size-6) 0 var(--sys-size-5);\n\n    .button-text {\n      opacity: 100%;\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('././globalAiButton.css')} */`;", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n/* eslint-disable rulesdir/no-lit-render-outside-of-view */\n\n/*\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2007 Matt Lilek (pewtermoose@gmail.com).\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as ProtocolClient from '../../core/protocol_client/protocol_client.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as AiAssistanceModel from '../../models/ai_assistance/ai_assistance.js';\nimport * as AutofillManager from '../../models/autofill_manager/autofill_manager.js';\nimport * as Badges from '../../models/badges/badges.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Breakpoints from '../../models/breakpoints/breakpoints.js';\nimport * as CrUXManager from '../../models/crux-manager/crux-manager.js';\nimport * as Extensions from '../../models/extensions/extensions.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as LiveMetrics from '../../models/live-metrics/live-metrics.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as ProjectSettings from '../../models/project_settings/project_settings.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport type * as PanelCommon from '../../panels/common/common.js';\nimport * as Snippets from '../../panels/snippets/snippets.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as Snackbar from '../../ui/components/snackbars/snackbars.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport {html, render} from '../../ui/lit/lit.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {ExecutionContextSelector} from './ExecutionContextSelector.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of item in main\n   */\n  customizeAndControlDevtools: 'Customize and control DevTools',\n  /**\n   * @description Title element text content in Main\n   */\n  dockSide: 'Dock side',\n  /**\n   * @description Title element title in Main\n   * @example {Ctrl+Shift+D} PH1\n   */\n  placementOfDevtoolsRelativeToThe: 'Placement of DevTools relative to the page. ({PH1} to restore last position)',\n  /**\n   * @description Text to undock the DevTools\n   */\n  undockIntoSeparateWindow: 'Undock into separate window',\n  /**\n   * @description Text to dock the DevTools to the bottom of the browser tab\n   */\n  dockToBottom: 'Dock to bottom',\n  /**\n   * @description Text to dock the DevTools to the right of the browser tab\n   */\n  dockToRight: 'Dock to right',\n  /**\n   * @description Text to dock the DevTools to the left of the browser tab\n   */\n  dockToLeft: 'Dock to left',\n  /**\n   * @description Text in Main\n   */\n  focusDebuggee: 'Focus page',\n  /**\n   * @description Text in Main\n   */\n  hideConsoleDrawer: 'Hide console drawer',\n  /**\n   * @description Text in Main\n   */\n  showConsoleDrawer: 'Show console drawer',\n  /**\n   * @description A context menu item in the Main\n   */\n  moreTools: 'More tools',\n  /**\n   * @description Text for the viewing the help options\n   */\n  help: 'Help',\n  /**\n   * @description Text describing how to navigate the dock side menu\n   */\n  dockSideNavigation: 'Use left and right arrow keys to navigate the options',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/main/MainImpl.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet loadedPanelCommonModule: typeof PanelCommon|undefined;\nexport class MainImpl {\n  #readyForTestPromise = Promise.withResolvers<void>();\n  #veStartPromise!: Promise<void>;\n\n  constructor() {\n    MainImpl.instanceForTest = this;\n    void this.#loaded();\n  }\n\n  static time(label: string): void {\n    if (Host.InspectorFrontendHost.isUnderTest()) {\n      return;\n    }\n    console.time(label);\n  }\n\n  static timeEnd(label: string): void {\n    if (Host.InspectorFrontendHost.isUnderTest()) {\n      return;\n    }\n    console.timeEnd(label);\n  }\n\n  async #loaded(): Promise<void> {\n    console.timeStamp('Main._loaded');\n    Root.Runtime.Runtime.setPlatform(Host.Platform.platform());\n    const [config, prefs] = await Promise.all([\n      new Promise<Root.Runtime.HostConfig>(resolve => {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.getHostConfig(resolve);\n      }),\n      new Promise<Record<string, string>>(\n          resolve => Host.InspectorFrontendHost.InspectorFrontendHostInstance.getPreferences(resolve)),\n    ]);\n\n    console.timeStamp('Main._gotPreferences');\n    this.#initializeGlobalsForLayoutTests();\n    Object.assign(Root.Runtime.hostConfig, config);\n    this.createSettings(prefs);\n    await this.requestAndRegisterLocaleData();\n\n    Host.userMetrics.syncSetting(Common.Settings.Settings.instance().moduleSetting<boolean>('sync-preferences').get());\n    const veLogging = config.devToolsVeLogging;\n\n    // Used by e2e_non_hosted to put VE Logs into \"test mode\".\n    const veLogsTestMode = Common.Settings.Settings.instance().createSetting('veLogsTestMode', false).get();\n\n    if (veLogging?.enabled) {\n      // Note: as of https://crrev.com/c/6734500 landing, veLogging.testing is hard-coded to false.\n      // But the e2e tests (test/conductor/frontend_tab.ts) use this to enable this flag for e2e tests.\n      // TODO(crbug.com/432411398): remove the host config for VE logs + find a better way to set this up in e2e tests.\n      if (veLogging?.testing || veLogsTestMode) {\n        VisualLogging.setVeDebugLoggingEnabled(true, VisualLogging.DebugLoggingFormat.TEST);\n        const options = {\n          processingThrottler: new Common.Throttler.Throttler(0),\n          keyboardLogThrottler: new Common.Throttler.Throttler(10),\n          hoverLogThrottler: new Common.Throttler.Throttler(50),\n          dragLogThrottler: new Common.Throttler.Throttler(50),\n          clickLogThrottler: new Common.Throttler.Throttler(10),\n          resizeLogThrottler: new Common.Throttler.Throttler(10),\n        };\n        this.#veStartPromise = VisualLogging.startLogging(options);\n      } else {\n        this.#veStartPromise = VisualLogging.startLogging();\n      }\n    }\n\n    void this.#createAppUI();\n  }\n\n  #initializeGlobalsForLayoutTests(): void {\n    // @ts-expect-error e2e test global\n    self.Extensions ||= {};\n    // @ts-expect-error e2e test global\n    self.Host ||= {};\n    // @ts-expect-error e2e test global\n    self.Host.userMetrics ||= Host.userMetrics;\n    // @ts-expect-error e2e test global\n    self.Host.UserMetrics ||= Host.UserMetrics;\n    // @ts-expect-error e2e test global\n    self.ProtocolClient ||= {};\n    // @ts-expect-error e2e test global\n    self.ProtocolClient.test ||= ProtocolClient.InspectorBackend.test;\n  }\n\n  async requestAndRegisterLocaleData(): Promise<void> {\n    const settingLanguage = Common.Settings.Settings.instance().moduleSetting<string>('language').get();\n    const devToolsLocale = i18n.DevToolsLocale.DevToolsLocale.instance({\n      create: true,\n      data: {\n        navigatorLanguage: navigator.language,\n        settingLanguage,\n        lookupClosestDevToolsLocale: i18n.i18n.lookupClosestSupportedDevToolsLocale,\n      },\n    });\n    // Record the intended locale, regardless whether we are able to fetch it or not.\n    Host.userMetrics.language(devToolsLocale.locale);\n\n    if (devToolsLocale.locale !== 'en-US') {\n      // Always load en-US locale data as a fallback. This is important, newly added\n      // strings won't have a translation. If fetching en-US.json fails, something\n      // is seriously wrong and the exception should bubble up.\n      await i18n.i18n.fetchAndRegisterLocaleData('en-US');\n    }\n\n    try {\n      await i18n.i18n.fetchAndRegisterLocaleData(devToolsLocale.locale);\n    } catch (error) {\n      console.warn(\n          `Unable to fetch & register locale data for '${devToolsLocale.locale}', falling back to 'en-US'. Cause: `,\n          error);\n      // Loading the actual locale data failed, tell DevTools to use 'en-US'.\n      devToolsLocale.forceFallbackLocale();\n    }\n  }\n\n  createSettings(prefs: Record<string, string>): void {\n    this.#initializeExperiments();\n    let storagePrefix = '';\n    if (Host.Platform.isCustomDevtoolsFrontend()) {\n      storagePrefix = '__custom__';\n    } else if (\n        !Root.Runtime.Runtime.queryParam('can_dock') && Boolean(Root.Runtime.Runtime.queryParam('debugFrontend')) &&\n        !Host.InspectorFrontendHost.isUnderTest()) {\n      storagePrefix = '__bundled__';\n    }\n\n    let localStorage;\n    if (!Host.InspectorFrontendHost.isUnderTest() && window.localStorage) {\n      const localbackingStore: Common.Settings.SettingsBackingStore = {\n        ...Common.Settings.NOOP_STORAGE,\n        clear: () => window.localStorage.clear(),\n      };\n      localStorage = new Common.Settings.SettingsStorage(window.localStorage, localbackingStore, storagePrefix);\n    } else {\n      localStorage = new Common.Settings.SettingsStorage({}, Common.Settings.NOOP_STORAGE, storagePrefix);\n    }\n\n    const hostUnsyncedStorage: Common.Settings.SettingsBackingStore = {\n      register: (name: string) =>\n          Host.InspectorFrontendHost.InspectorFrontendHostInstance.registerPreference(name, {synced: false}),\n      set: Host.InspectorFrontendHost.InspectorFrontendHostInstance.setPreference,\n      get: (name: string) => {\n        return new Promise(resolve => {\n          Host.InspectorFrontendHost.InspectorFrontendHostInstance.getPreference(name, resolve);\n        });\n      },\n      remove: Host.InspectorFrontendHost.InspectorFrontendHostInstance.removePreference,\n      clear: Host.InspectorFrontendHost.InspectorFrontendHostInstance.clearPreferences,\n    };\n    const hostSyncedStorage: Common.Settings.SettingsBackingStore = {\n      ...hostUnsyncedStorage,\n      register: (name: string) =>\n          Host.InspectorFrontendHost.InspectorFrontendHostInstance.registerPreference(name, {synced: true}),\n    };\n    // `prefs` is retrieved via `getPreferences` host binding and contains both synced and unsynced settings.\n    // As such, we use `prefs` to initialize both the synced and the global storage. This is fine as an individual\n    // setting can't change storage buckets during a single DevTools session.\n    const syncedStorage = new Common.Settings.SettingsStorage(prefs, hostSyncedStorage, storagePrefix);\n    const globalStorage = new Common.Settings.SettingsStorage(prefs, hostUnsyncedStorage, storagePrefix);\n    Common.Settings.Settings.instance(\n        {forceNew: true, syncedStorage, globalStorage, localStorage, logSettingAccess: VisualLogging.logSettingAccess});\n\n    if (!Host.InspectorFrontendHost.isUnderTest()) {\n      new Common.Settings.VersionController().updateVersion();\n    }\n  }\n\n  #initializeExperiments(): void {\n    Root.Runtime.experiments.register('capture-node-creation-stacks', 'Capture node creation stacks');\n    Root.Runtime.experiments.register('live-heap-profile', 'Live heap profile', true);\n    Root.Runtime.experiments.register(\n        'protocol-monitor', 'Protocol Monitor', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-92/#protocol-monitor');\n    Root.Runtime.experiments.register('sampling-heap-profiler-timeline', 'Sampling heap profiler timeline', true);\n    Root.Runtime.experiments.register(\n        'show-option-tp-expose-internals-in-heap-snapshot', 'Show option to expose internals in heap snapshots');\n\n    // Timeline\n    Root.Runtime.experiments.register(\n        'timeline-invalidation-tracking', 'Performance panel: invalidation tracking', true);\n    Root.Runtime.experiments.register('timeline-show-all-events', 'Performance panel: show all events', true);\n    Root.Runtime.experiments.register(\n        'timeline-v8-runtime-call-stats', 'Performance panel: V8 runtime call stats', true);\n    Root.Runtime.experiments.register(\n        'timeline-enhanced-traces', 'Performance panel: Enable collecting enhanced traces', true);\n    Root.Runtime.experiments.register(\n        'timeline-compiled-sources', 'Performance panel: Enable collecting source text for compiled script', true);\n    Root.Runtime.experiments.register(\n        Root.Runtime.ExperimentName.TIMELINE_DEBUG_MODE,\n        'Performance panel: Enable debug mode (trace event details, etc)', true);\n\n    // Debugging\n    Root.Runtime.experiments.register('instrumentation-breakpoints', 'Enable instrumentation breakpoints', true);\n    Root.Runtime.experiments.register('use-source-map-scopes', 'Use scope information from source maps', true);\n\n    // Advanced Perceptual Contrast Algorithm.\n    Root.Runtime.experiments.register(\n        'apca',\n        'Enable new Advanced Perceptual Contrast Algorithm (APCA) replacing previous contrast ratio and AA/AAA guidelines',\n        undefined, 'https://developer.chrome.com/blog/new-in-devtools-89/#apca');\n\n    // Full Accessibility Tree\n    Root.Runtime.experiments.register(\n        'full-accessibility-tree', 'Enable full accessibility tree view in the Elements panel', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-90/#accessibility-tree',\n        'https://g.co/devtools/a11y-tree-feedback');\n\n    // Font Editor\n    Root.Runtime.experiments.register(\n        'font-editor', 'Enable new font editor within the Styles tab', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-89/#font');\n\n    // Contrast issues reported via the Issues panel.\n    Root.Runtime.experiments.register(\n        'contrast-issues', 'Enable automatic contrast issue reporting via the Issues panel', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-90/#low-contrast');\n\n    // New cookie features.\n    Root.Runtime.experiments.register('experimental-cookie-features', 'Enable experimental cookie features');\n\n    // Change grouping of sources panel to use Authored/Deployed trees\n    Root.Runtime.experiments.register(\n        Root.Runtime.ExperimentName.AUTHORED_DEPLOYED_GROUPING, 'Group sources into authored and deployed trees',\n        undefined, 'https://goo.gle/authored-deployed', 'https://goo.gle/authored-deployed-feedback');\n\n    // Hide third party code (as determined by ignore lists or source maps)\n    Root.Runtime.experiments.register(\n        Root.Runtime.ExperimentName.JUST_MY_CODE, 'Hide ignore-listed code in Sources tree view');\n\n    Root.Runtime.experiments.register(\n        Root.Runtime.ExperimentName.TIMELINE_SHOW_POST_MESSAGE_EVENTS,\n        'Performance panel: show postMessage dispatch and handling flows',\n    );\n\n    Root.Runtime.experiments.enableExperimentsByDefault([\n      Root.Runtime.ExperimentName.FULL_ACCESSIBILITY_TREE,\n      ...(Root.Runtime.Runtime.queryParam('isChromeForTesting') ? ['protocol-monitor'] : []),\n    ]);\n\n    Root.Runtime.experiments.cleanUpStaleExperiments();\n    const enabledExperiments = Root.Runtime.Runtime.queryParam('enabledExperiments');\n    if (enabledExperiments) {\n      Root.Runtime.experiments.setServerEnabledExperiments(enabledExperiments.split(';'));\n    }\n    Root.Runtime.experiments.enableExperimentsTransiently([]);\n\n    if (Host.InspectorFrontendHost.isUnderTest()) {\n      const testParam = Root.Runtime.Runtime.queryParam('test');\n      if (testParam?.includes('live-line-level-heap-profile.js')) {\n        Root.Runtime.experiments.enableForTest('live-heap-profile');\n      }\n    }\n\n    for (const experiment of Root.Runtime.experiments.allConfigurableExperiments()) {\n      if (experiment.isEnabled()) {\n        Host.userMetrics.experimentEnabledAtLaunch(experiment.name);\n      } else {\n        Host.userMetrics.experimentDisabledAtLaunch(experiment.name);\n      }\n    }\n  }\n  async #createAppUI(): Promise<void> {\n    MainImpl.time('Main._createAppUI');\n\n    // Request filesystems early, we won't create connections until callback is fired. Things will happen in parallel.\n    const isolatedFileSystemManager = Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance();\n    isolatedFileSystemManager.addEventListener(\n        Persistence.IsolatedFileSystemManager.Events.FileSystemError,\n        event => Snackbar.Snackbar.Snackbar.show({message: event.data}));\n\n    const defaultThemeSetting = 'systemPreferred';\n    const themeSetting = Common.Settings.Settings.instance().createSetting('ui-theme', defaultThemeSetting);\n    UI.UIUtils.initializeUIUtils(document);\n\n    // Initialize theme support and apply it.\n    if (!ThemeSupport.ThemeSupport.hasInstance()) {\n      ThemeSupport.ThemeSupport.instance({forceNew: true, setting: themeSetting});\n    }\n\n    UI.UIUtils.addPlatformClass(document.documentElement);\n    UI.UIUtils.installComponentRootStyles(document.body);\n\n    this.#addMainEventListeners(document);\n\n    const canDock = Boolean(Root.Runtime.Runtime.queryParam('can_dock'));\n    UI.ZoomManager.ZoomManager.instance(\n        {forceNew: true, win: window, frontendHost: Host.InspectorFrontendHost.InspectorFrontendHostInstance});\n    UI.ContextMenu.ContextMenu.initialize();\n    UI.ContextMenu.ContextMenu.installHandler(document);\n\n    // These instances need to be created early so they don't miss any events about requests/issues/etc.\n    Logs.NetworkLog.NetworkLog.instance();\n    SDK.FrameManager.FrameManager.instance();\n    Logs.LogManager.LogManager.instance();\n    IssuesManager.IssuesManager.IssuesManager.instance({\n      forceNew: true,\n      ensureFirst: true,\n      showThirdPartyIssuesSetting: IssuesManager.Issue.getShowThirdPartyIssuesSetting(),\n      hideIssueSetting: IssuesManager.IssuesManager.getHideIssueByCodeSetting(),\n    });\n    IssuesManager.ContrastCheckTrigger.ContrastCheckTrigger.instance();\n\n    UI.DockController.DockController.instance({forceNew: true, canDock});\n    SDK.NetworkManager.MultitargetNetworkManager.instance({forceNew: true});\n    SDK.DOMDebuggerModel.DOMDebuggerManager.instance({forceNew: true});\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    targetManager.addEventListener(\n        SDK.TargetManager.Events.SUSPEND_STATE_CHANGED, this.#onSuspendStateChanged.bind(this));\n\n    Workspace.FileManager.FileManager.instance({forceNew: true});\n    Workspace.Workspace.WorkspaceImpl.instance();\n\n    Bindings.NetworkProject.NetworkProjectManager.instance();\n    const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(\n        targetManager,\n        Workspace.Workspace.WorkspaceImpl.instance(),\n    );\n    new Bindings.PresentationConsoleMessageHelper.PresentationConsoleMessageManager();\n    Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance({\n      forceNew: true,\n      resourceMapping,\n      targetManager,\n    });\n    Workspace.IgnoreListManager.IgnoreListManager.instance({\n      forceNew: true,\n    });\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n      forceNew: true,\n      resourceMapping,\n      targetManager,\n      ignoreListManager: Workspace.IgnoreListManager.IgnoreListManager.instance(),\n    });\n    targetManager.setScopeTarget(targetManager.primaryPageTarget());\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.Target.Target, ({data}) => {\n      const outermostTarget = data?.outermostTarget();\n      targetManager.setScopeTarget(outermostTarget);\n    });\n    Breakpoints.BreakpointManager.BreakpointManager.instance({\n      forceNew: true,\n      workspace: Workspace.Workspace.WorkspaceImpl.instance(),\n      targetManager,\n      debuggerWorkspaceBinding: Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance(),\n    });\n    // @ts-expect-error e2e test global\n    self.Extensions.extensionServer = Extensions.ExtensionServer.ExtensionServer.instance({forceNew: true});\n\n    new Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding(\n        isolatedFileSystemManager, Workspace.Workspace.WorkspaceImpl.instance());\n    isolatedFileSystemManager.addPlatformFileSystem(\n        'snippet://' as Platform.DevToolsPath.UrlString, new Snippets.ScriptSnippetFileSystem.SnippetFileSystem());\n\n    Persistence.Persistence.PersistenceImpl.instance({\n      forceNew: true,\n      workspace: Workspace.Workspace.WorkspaceImpl.instance(),\n      breakpointManager: Breakpoints.BreakpointManager.BreakpointManager.instance(),\n    });\n    Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance(\n        {forceNew: true, workspace: Workspace.Workspace.WorkspaceImpl.instance()});\n\n    new ExecutionContextSelector(targetManager, UI.Context.Context.instance());\n\n    const projectSettingsModel = ProjectSettings.ProjectSettingsModel.ProjectSettingsModel.instance({\n      forceNew: true,\n      hostConfig: Root.Runtime.hostConfig,\n      pageResourceLoader: SDK.PageResourceLoader.PageResourceLoader.instance(),\n      targetManager,\n    });\n\n    const automaticFileSystemManager = Persistence.AutomaticFileSystemManager.AutomaticFileSystemManager.instance({\n      forceNew: true,\n      inspectorFrontendHost: Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n      projectSettingsModel,\n    });\n    Persistence.AutomaticFileSystemWorkspaceBinding.AutomaticFileSystemWorkspaceBinding.instance({\n      forceNew: true,\n      automaticFileSystemManager,\n      isolatedFileSystemManager,\n      workspace: Workspace.Workspace.WorkspaceImpl.instance(),\n    });\n\n    AutofillManager.AutofillManager.AutofillManager.instance();\n\n    LiveMetrics.LiveMetrics.instance();\n    CrUXManager.CrUXManager.instance();\n\n    new PauseListener();\n\n    const actionRegistryInstance = UI.ActionRegistry.ActionRegistry.instance({forceNew: true});\n    // Required for legacy a11y layout tests\n    UI.ShortcutRegistry.ShortcutRegistry.instance({forceNew: true, actionRegistry: actionRegistryInstance});\n    this.#registerMessageSinkListener();\n\n    // Initialize `GDPClient` and `UserBadges` for Google Developer Program integration\n    if (Host.GdpClient.isGdpProfilesAvailable()) {\n      void Host.GdpClient.GdpClient.instance().getProfile().then(getProfileResponse => {\n        if (!getProfileResponse) {\n          return;\n        }\n\n        const {profile, isEligible} = getProfileResponse;\n        const hasProfile = Boolean(profile);\n        const contextString = hasProfile ? 'has-profile' :\n            isEligible                   ? 'no-profile-and-eligible' :\n                                           'no-profile-and-not-eligible';\n        void VisualLogging.logFunctionCall('gdp-client-initialize', contextString);\n      });\n      void Badges.UserBadges.instance().initialize();\n      Badges.UserBadges.instance().addEventListener(Badges.Events.BADGE_TRIGGERED, async ev => {\n        loadedPanelCommonModule ??= await import('../../panels/common/common.js') as typeof PanelCommon;\n        const badgeNotification = new loadedPanelCommonModule.BadgeNotification();\n        void badgeNotification.present(ev.data);\n      });\n    }\n\n    MainImpl.timeEnd('Main._createAppUI');\n\n    const appProvider = Common.AppProvider.getRegisteredAppProviders()[0];\n    if (!appProvider) {\n      throw new Error('Unable to boot DevTools, as the appprovider is missing');\n    }\n    await this.#showAppUI(await appProvider.loadAppProvider());\n  }\n\n  async #showAppUI(appProvider: Object): Promise<void> {\n    MainImpl.time('Main._showAppUI');\n    const app = (appProvider as Common.AppProvider.AppProvider).createApp();\n    // It is important to kick controller lifetime after apps are instantiated.\n    UI.DockController.DockController.instance().initialize();\n    ThemeSupport.ThemeSupport.instance().fetchColorsAndApplyHostTheme();\n    app.presentUI(document);\n\n    if (UI.ActionRegistry.ActionRegistry.instance().hasAction('elements.toggle-element-search')) {\n      const toggleSearchNodeAction =\n          UI.ActionRegistry.ActionRegistry.instance().getAction('elements.toggle-element-search');\n      // TODO: we should not access actions from other modules.\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n          Host.InspectorFrontendHostAPI.Events.EnterInspectElementMode, () => {\n            void toggleSearchNodeAction.execute();\n          }, this);\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.RevealSourceLine, this.#revealSourceLine, this);\n\n    await UI.InspectorView.InspectorView.instance().createToolbars();\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.loadCompleted();\n\n    const value = Root.Runtime.Runtime.queryParam('loadTimelineFromURL');\n    if (value !== null) {\n      // Only import Timeline if needed. If this was a static import, every load of devtools\n      // would request and evaluate the Timeline panel dep tree, slowing down the UI's load.\n      const Timeline = await import('../../panels/timeline/timeline.js');\n      Timeline.TimelinePanel.LoadTimelineHandler.instance().handleQueryParam(value);\n    }\n\n    // Initialize elements for the live announcer functionality for a11y.\n    UI.ARIAUtils.LiveAnnouncer.initializeAnnouncerElements();\n    UI.DockController.DockController.instance().announceDockLocation();\n\n    // Allow UI cycles to repaint prior to creating connection.\n    window.setTimeout(this.#initializeTarget.bind(this), 0);\n    MainImpl.timeEnd('Main._showAppUI');\n  }\n\n  async #initializeTarget(): Promise<void> {\n    MainImpl.time('Main._initializeTarget');\n\n    // We rely on having the early initialization runnables registered in Common when an app loads its\n    // modules, so that we don't have to exhaustively check the app DevTools is running as to\n    // start the applicable runnables.\n    for (const runnableInstanceFunction of Common.Runnable.earlyInitializationRunnables()) {\n      await runnableInstanceFunction().run();\n    }\n    await this.#veStartPromise;\n    // Used for browser tests.\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.readyForTest();\n    this.#readyForTestPromise.resolve();\n    // Asynchronously run the extensions.\n    window.setTimeout(this.#lateInitialization.bind(this), 100);\n    await this.#maybeInstallVeInspectionBinding();\n\n    MainImpl.timeEnd('Main._initializeTarget');\n  }\n\n  async #maybeInstallVeInspectionBinding(): Promise<void> {\n    const primaryPageTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    const url = primaryPageTarget?.targetInfo()?.url;\n    const origin = url ? Common.ParsedURL.ParsedURL.extractOrigin(url as Platform.DevToolsPath.UrlString) : undefined;\n\n    const binding = '__devtools_ve_inspection_binding__';\n    if (primaryPageTarget && await VisualLogging.isUnderInspection(origin)) {\n      const runtimeModel = primaryPageTarget.model(SDK.RuntimeModel.RuntimeModel);\n      await runtimeModel?.addBinding({name: binding});\n      runtimeModel?.addEventListener(SDK.RuntimeModel.Events.BindingCalled, event => {\n        if (event.data.name === binding) {\n          if (event.data.payload === 'true' || event.data.payload === 'false') {\n            VisualLogging.setVeDebuggingEnabled(event.data.payload === 'true', (query: string) => {\n              VisualLogging.setVeDebuggingEnabled(false);\n              void runtimeModel?.defaultExecutionContext()?.evaluate(\n                  {\n                    expression: `window.inspect(${JSON.stringify(query)})`,\n                    includeCommandLineAPI: false,\n                    silent: true,\n                    returnByValue: false,\n                    generatePreview: false,\n                  },\n                  /* userGesture */ false,\n                  /* awaitPromise */ false);\n            });\n          } else {\n            VisualLogging.setHighlightedVe(event.data.payload === 'null' ? null : event.data.payload);\n          }\n        }\n      });\n    }\n  }\n\n  async #lateInitialization(): Promise<void> {\n    MainImpl.time('Main._lateInitialization');\n    Extensions.ExtensionServer.ExtensionServer.instance().initializeExtensions();\n    const promises: Array<Promise<void>> =\n        Common.Runnable.lateInitializationRunnables().map(async lateInitializationLoader => {\n          const runnable = await lateInitializationLoader();\n          return await runnable.run();\n        });\n    if (Root.Runtime.experiments.isEnabled('live-heap-profile')) {\n      const PerfUI = await import('../../ui/legacy/components/perf_ui/perf_ui.js');\n      const setting = 'memory-live-heap-profile';\n      if (Common.Settings.Settings.instance().moduleSetting(setting).get()) {\n        promises.push(PerfUI.LiveHeapProfile.LiveHeapProfile.instance().run());\n      } else {\n        const changeListener = async(event: Common.EventTarget.EventTargetEvent<unknown>): Promise<void> => {\n          if (!event.data) {\n            return;\n          }\n          Common.Settings.Settings.instance().moduleSetting(setting).removeChangeListener(changeListener);\n          void PerfUI.LiveHeapProfile.LiveHeapProfile.instance().run();\n        };\n        Common.Settings.Settings.instance().moduleSetting(setting).addChangeListener(changeListener);\n      }\n    }\n\n    MainImpl.timeEnd('Main._lateInitialization');\n  }\n\n  readyForTest(): Promise<void> {\n    return this.#readyForTestPromise.promise;\n  }\n\n  #registerMessageSinkListener(): void {\n    Common.Console.Console.instance().addEventListener(Common.Console.Events.MESSAGE_ADDED, messageAdded);\n\n    function messageAdded({data: message}: Common.EventTarget.EventTargetEvent<Common.Console.Message>): void {\n      if (message.show) {\n        Common.Console.Console.instance().show();\n      }\n    }\n  }\n\n  #revealSourceLine(event: Common.EventTarget.EventTargetEvent<Host.InspectorFrontendHostAPI.RevealSourceLineEvent>):\n      void {\n    const {url, lineNumber, columnNumber} = event.data;\n    const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url);\n    if (uiSourceCode) {\n      void Common.Revealer.reveal(uiSourceCode.uiLocation(lineNumber, columnNumber));\n      return;\n    }\n\n    function listener(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n      const uiSourceCode = event.data;\n      if (uiSourceCode.url() === url) {\n        void Common.Revealer.reveal(uiSourceCode.uiLocation(lineNumber, columnNumber));\n        Workspace.Workspace.WorkspaceImpl.instance().removeEventListener(\n            Workspace.Workspace.Events.UISourceCodeAdded, listener);\n      }\n    }\n\n    Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n        Workspace.Workspace.Events.UISourceCodeAdded, listener);\n  }\n\n  #postDocumentKeyDown(event: Event): void {\n    if (!event.handled) {\n      UI.ShortcutRegistry.ShortcutRegistry.instance().handleShortcut((event as KeyboardEvent));\n    }\n  }\n\n  #redispatchClipboardEvent(event: Event): void {\n    const eventCopy = new CustomEvent('clipboard-' + event.type, {bubbles: true});\n    // @ts-expect-error Used in ElementsTreeOutline\n    eventCopy['original'] = event;\n    const document = event.target && (event.target as HTMLElement).ownerDocument;\n    const target = document ? Platform.DOMUtilities.deepActiveElement(document) : null;\n    if (target) {\n      target.dispatchEvent(eventCopy);\n    }\n    if (eventCopy.handled) {\n      event.preventDefault();\n    }\n  }\n\n  #contextMenuEventFired(event: Event): void {\n    if (event.handled || (event.target as HTMLElement).classList.contains('popup-glasspane')) {\n      event.preventDefault();\n    }\n  }\n\n  #addMainEventListeners(document: Document): void {\n    document.addEventListener('keydown', this.#postDocumentKeyDown.bind(this), false);\n    document.addEventListener('beforecopy', this.#redispatchClipboardEvent.bind(this), true);\n    document.addEventListener('copy', this.#redispatchClipboardEvent.bind(this), false);\n    document.addEventListener('cut', this.#redispatchClipboardEvent.bind(this), false);\n    document.addEventListener('paste', this.#redispatchClipboardEvent.bind(this), false);\n    document.addEventListener('contextmenu', this.#contextMenuEventFired.bind(this), true);\n  }\n\n  #onSuspendStateChanged(): void {\n    const suspended = SDK.TargetManager.TargetManager.instance().allTargetsSuspended();\n    UI.InspectorView.InspectorView.instance().onSuspendStateChanged(suspended);\n  }\n\n  static instanceForTest: MainImpl|null = null;\n}\n\n// @ts-expect-error Exported for Tests.js\nglobalThis.Main = globalThis.Main || {};\n// @ts-expect-error Exported for Tests.js\nglobalThis.Main.Main = MainImpl;\n\nexport class ZoomActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    if (Host.InspectorFrontendHost.InspectorFrontendHostInstance.isHostedMode()) {\n      return false;\n    }\n\n    switch (actionId) {\n      case 'main.zoom-in':\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.zoomIn();\n        return true;\n      case 'main.zoom-out':\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.zoomOut();\n        return true;\n      case 'main.zoom-reset':\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.resetZoom();\n        return true;\n    }\n    return false;\n  }\n}\n\nexport class SearchActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    let searchableView = UI.SearchableView.SearchableView.fromElement(\n        Platform.DOMUtilities.deepActiveElement(document),\n    );\n    if (!searchableView) {\n      const currentPanel = (UI.InspectorView.InspectorView.instance().currentPanelDeprecated() as UI.Panel.Panel);\n      if (currentPanel?.searchableView) {\n        searchableView = currentPanel.searchableView();\n      }\n      if (!searchableView) {\n        return false;\n      }\n    }\n    switch (actionId) {\n      case 'main.search-in-panel.find':\n        return searchableView.handleFindShortcut();\n      case 'main.search-in-panel.cancel':\n        return searchableView.handleCancelSearchShortcut();\n      case 'main.search-in-panel.find-next':\n        return searchableView.handleFindNextShortcut();\n      case 'main.search-in-panel.find-previous':\n        return searchableView.handleFindPreviousShortcut();\n    }\n    return false;\n  }\n}\nlet mainMenuItemInstance: MainMenuItem;\n\nexport class MainMenuItem implements UI.Toolbar.Provider {\n  readonly #item: UI.Toolbar.ToolbarMenuButton;\n  constructor() {\n    this.#item = new UI.Toolbar.ToolbarMenuButton(\n        this.#handleContextMenu.bind(this), /* isIconDropdown */ true, /* useSoftMenu */ true, 'main-menu',\n        'dots-vertical');\n    this.#item.element.classList.add('main-menu');\n    this.#item.setTitle(i18nString(UIStrings.customizeAndControlDevtools));\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): MainMenuItem {\n    const {forceNew} = opts;\n    if (!mainMenuItemInstance || forceNew) {\n      mainMenuItemInstance = new MainMenuItem();\n    }\n\n    return mainMenuItemInstance;\n  }\n\n  item(): UI.Toolbar.ToolbarItem|null {\n    return this.#item;\n  }\n\n  #handleContextMenu(contextMenu: UI.ContextMenu.ContextMenu): void {\n    const dockController = UI.DockController.DockController.instance();\n    if (dockController.canDock()) {\n      const dockItemElement = document.createElement('div');\n      dockItemElement.classList.add('flex-auto', 'flex-centered', 'location-menu');\n      dockItemElement.setAttribute(\n          'jslog', `${VisualLogging.item('dock-side').track({keydown: 'ArrowDown|ArrowLeft|ArrowRight'})}`);\n      dockItemElement.tabIndex = -1;\n      UI.ARIAUtils.setLabel(dockItemElement, UIStrings.dockSide + UIStrings.dockSideNavigation);\n      const [toggleDockSideShortcut] =\n          UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction('main.toggle-dock');\n\n      // clang-format off\n      render(html`\n        <span class=\"dockside-title\"\n              title=${i18nString(UIStrings.placementOfDevtoolsRelativeToThe, {PH1: toggleDockSideShortcut.title()})}>\n          ${i18nString(UIStrings.dockSide)}\n        </span>\n        <devtools-toolbar @mousedown=${(event: Event) => event.consume()}>\n          <devtools-button class=\"toolbar-button\"\n                           jslog=${VisualLogging.toggle().track({click: true}).context('current-dock-state-undock')}\n                           title=${i18nString(UIStrings.undockIntoSeparateWindow)}\n                           aria-label=${i18nString(UIStrings.undockIntoSeparateWindow)}\n                           .iconName=${'dock-window'}\n                           .toggled=${dockController.dockSide() === UI.DockController.DockState.UNDOCKED}\n                           .toggledIconName=${'dock-window'}\n                           .toggleType=${Buttons.Button.ToggleType.PRIMARY}\n                           .variant=${Buttons.Button.Variant.ICON_TOGGLE}\n                           @click=${setDockSide.bind(null, UI.DockController.DockState.UNDOCKED)}></devtools-button>\n          <devtools-button class=\"toolbar-button\"\n                           jslog=${VisualLogging.toggle().track({click: true}).context('current-dock-state-left')}\n                           title=${i18nString(UIStrings.dockToLeft)}\n                           aria-label=${i18nString(UIStrings.dockToLeft)}\n                           .iconName=${'dock-left'}\n                           .toggled=${dockController.dockSide() === UI.DockController.DockState.LEFT}\n                           .toggledIconName=${'dock-left'}\n                           .toggleType=${Buttons.Button.ToggleType.PRIMARY}\n                           .variant=${Buttons.Button.Variant.ICON_TOGGLE}\n                           @click=${setDockSide.bind(null, UI.DockController.DockState.LEFT)}></devtools-button>\n          <devtools-button class=\"toolbar-button\"\n                           jslog=${VisualLogging.toggle().track({click: true}).context('current-dock-state-bottom')}\n                           title=${i18nString(UIStrings.dockToBottom)}\n                           aria-label=${i18nString(UIStrings.dockToBottom)}\n                           .iconName=${'dock-bottom'}\n                           .toggled=${dockController.dockSide() === UI.DockController.DockState.BOTTOM}\n                           .toggledIconName=${'dock-bottom'}\n                           .toggleType=${Buttons.Button.ToggleType.PRIMARY}\n                           .variant=${Buttons.Button.Variant.ICON_TOGGLE}\n                           @click=${setDockSide.bind(null, UI.DockController.DockState.BOTTOM)}></devtools-button>\n          <devtools-button class=\"toolbar-button\"\n                           jslog=${VisualLogging.toggle().track({click: true}).context('current-dock-state-right')}\n                           title=${i18nString(UIStrings.dockToRight)}\n                           aria-label=${i18nString(UIStrings.dockToRight)}\n                           .iconName=${'dock-right'}\n                           .toggled=${dockController.dockSide() === UI.DockController.DockState.RIGHT}\n                           .toggledIconName=${'dock-right'}\n                           .toggleType=${Buttons.Button.ToggleType.PRIMARY}\n                           .variant=${Buttons.Button.Variant.ICON_TOGGLE}\n                           @click=${setDockSide.bind(null, UI.DockController.DockState.RIGHT)}></devtools-button>\n        </devtools-toolbar>\n      `, dockItemElement, {host: this});\n      // clang-format on\n\n      dockItemElement.addEventListener('keydown', event => {\n        let dir = 0;\n        if (event.key === 'ArrowLeft') {\n          dir = -1;\n        } else if (event.key === 'ArrowRight') {\n          dir = 1;\n        } else if (event.key === 'ArrowDown') {\n          const contextMenuElement = dockItemElement.closest('.soft-context-menu');\n          contextMenuElement?.dispatchEvent(new KeyboardEvent('keydown', {key: 'ArrowDown'}));\n          return;\n        } else {\n          return;\n        }\n\n        const buttons = Array.from(dockItemElement.querySelectorAll('devtools-button'));\n        let index = buttons.findIndex(button => button.hasFocus());\n        index = Platform.NumberUtilities.clamp(index + dir, 0, buttons.length - 1);\n        buttons[index].focus();\n        event.consume(true);\n      });\n      contextMenu.headerSection().appendCustomItem(dockItemElement, 'dock-side');\n    }\n\n    const button = this.#item.element;\n\n    function setDockSide(side: UI.DockController.DockState): void {\n      void dockController.once(UI.DockController.Events.AFTER_DOCK_SIDE_CHANGED).then(() => button.focus());\n      dockController.setDockSide(side);\n      contextMenu.discard();\n    }\n\n    contextMenu.defaultSection().appendAction('freestyler.main-menu', undefined, /* optional */ true);\n\n    if (dockController.dockSide() === UI.DockController.DockState.UNDOCKED) {\n      const mainTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n      if (mainTarget && mainTarget.type() === SDK.Target.Type.FRAME) {\n        contextMenu.defaultSection().appendAction('inspector-main.focus-debuggee', i18nString(UIStrings.focusDebuggee));\n      }\n    }\n\n    contextMenu.defaultSection().appendAction(\n        'main.toggle-drawer',\n        UI.InspectorView.InspectorView.instance().drawerVisible() ? i18nString(UIStrings.hideConsoleDrawer) :\n                                                                    i18nString(UIStrings.showConsoleDrawer));\n    contextMenu.appendItemsAtLocation('mainMenu');\n    const moreTools =\n        contextMenu.defaultSection().appendSubMenuItem(i18nString(UIStrings.moreTools), false, 'more-tools');\n    const viewExtensions = UI.ViewManager.getRegisteredViewExtensions();\n    viewExtensions.sort((extension1, extension2) => {\n      const title1 = extension1.title();\n      const title2 = extension2.title();\n      return title1.localeCompare(title2);\n    });\n\n    for (const viewExtension of viewExtensions) {\n      const location = viewExtension.location();\n      const persistence = viewExtension.persistence();\n      const title = viewExtension.title();\n      const id = viewExtension.viewId();\n      const promotionId = viewExtension.featurePromotionId();\n\n      if (id === 'issues-pane') {\n        moreTools.defaultSection().appendItem(title, () => {\n          Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.HAMBURGER_MENU);\n          void UI.ViewManager.ViewManager.instance().showView('issues-pane', /* userGesture */ true);\n        }, {jslogContext: id});\n        continue;\n      }\n\n      if (persistence !== 'closeable') {\n        continue;\n      }\n      if (location !== 'drawer-view' && location !== 'panel') {\n        continue;\n      }\n\n      let additionalElement = undefined;\n      if (promotionId) {\n        additionalElement = UI.UIUtils.maybeCreateNewBadge(promotionId);\n      }\n\n      moreTools.defaultSection().appendItem(title, () => {\n        void UI.ViewManager.ViewManager.instance().showView(id, true, false);\n      }, {additionalElement, isPreviewFeature: viewExtension.isPreviewFeature(), jslogContext: id});\n    }\n\n    const helpSubMenu = contextMenu.footerSection().appendSubMenuItem(i18nString(UIStrings.help), false, 'help');\n    helpSubMenu.appendItemsAtLocation('mainMenuHelp');\n  }\n}\n\nlet settingsButtonProviderInstance: SettingsButtonProvider;\n\nexport class SettingsButtonProvider implements UI.Toolbar.Provider {\n  readonly #settingsButton: UI.Toolbar.ToolbarButton;\n  private constructor() {\n    this.#settingsButton = UI.Toolbar.Toolbar.createActionButton('settings.show');\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): SettingsButtonProvider {\n    const {forceNew} = opts;\n    if (!settingsButtonProviderInstance || forceNew) {\n      settingsButtonProviderInstance = new SettingsButtonProvider();\n    }\n\n    return settingsButtonProviderInstance;\n  }\n\n  item(): UI.Toolbar.ToolbarItem|null {\n    return this.#settingsButton;\n  }\n}\n\nexport class PauseListener {\n  constructor() {\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerPaused, this.#debuggerPaused, this);\n  }\n\n  #debuggerPaused(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerPaused, this.#debuggerPaused, this);\n    const debuggerModel = event.data;\n    const debuggerPausedDetails = debuggerModel.debuggerPausedDetails();\n    UI.Context.Context.instance().setFlavor(SDK.Target.Target, debuggerModel.target());\n    void Common.Revealer.reveal(debuggerPausedDetails);\n  }\n}\n\n/** Unused but mentioned at https://chromedevtools.github.io/devtools-protocol/#:~:text=use%20Main.MainImpl.-,sendOverProtocol,-()%20in%20the **/\nexport function sendOverProtocol(\n    method: ProtocolClient.InspectorBackend.QualifiedName, params: Object|null): Promise<unknown[]|null> {\n  return new Promise((resolve, reject) => {\n    const sendRawMessage = ProtocolClient.InspectorBackend.test.sendRawMessage;\n    if (!sendRawMessage) {\n      return reject('Unable to send message to test client');\n    }\n    sendRawMessage(method, params, (err, ...results) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve(results);\n    });\n  });\n}\n\nexport class ReloadActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'main.debug-reload':\n        Components.Reload.reload();\n\n        return true;\n    }\n    return false;\n  }\n}\n\ntype ExternalRequestInput = {\n  kind: 'LIVE_STYLE_DEBUGGER',\n  args: {prompt: string, selector: string},\n}|{\n  kind: 'PERFORMANCE_RELOAD_GATHER_INSIGHTS',\n}|{\n  kind: 'PERFORMANCE_ANALYZE',\n  args: {prompt: string},\n}|{\n  kind: 'NETWORK_DEBUGGER',\n  args: {requestUrl: string, prompt: string},\n};\n\n/**\n * For backwards-compatibility we iterate over the generator and drop the\n * intermediate results. The final response is transformed to its legacy type.\n * Instead of sending responses of type error, errors are throws.\n **/\nexport async function handleExternalRequest(input: ExternalRequestInput):\n    Promise<{response: string, devToolsLogs: object[]}> {\n  const generator = await handleExternalRequestGenerator(input);\n  let result: IteratorResult<AiAssistanceModel.ExternalRequestResponse, AiAssistanceModel.ExternalRequestResponse>;\n  do {\n    result = await generator.next();\n  } while (!result.done);\n  const response = result.value;\n  if (response.type === AiAssistanceModel.ExternalRequestResponseType.ERROR) {\n    throw new Error(response.message);\n  }\n  if (response.type === AiAssistanceModel.ExternalRequestResponseType.ANSWER) {\n    return {\n      response: response.message,\n      devToolsLogs: response.devToolsLogs,\n    };\n  }\n  throw new Error('Received no response of type answer or type error');\n}\n\n// @ts-expect-error\nglobalThis.handleExternalRequest = handleExternalRequest;\n\nexport async function handleExternalRequestGenerator(input: ExternalRequestInput):\n    Promise<AsyncGenerator<AiAssistanceModel.ExternalRequestResponse, AiAssistanceModel.ExternalRequestResponse>> {\n  switch (input.kind) {\n    case 'PERFORMANCE_RELOAD_GATHER_INSIGHTS': {\n      const TimelinePanel = await import('../../panels/timeline/timeline.js');\n      return TimelinePanel.TimelinePanel.TimelinePanel.handleExternalRecordRequest();\n    }\n    case 'PERFORMANCE_ANALYZE': {\n      const TimelinePanel = await import('../../panels/timeline/timeline.js');\n      return await TimelinePanel.TimelinePanel.TimelinePanel.handleExternalAnalyzeRequest(input.args.prompt);\n    }\n    case 'NETWORK_DEBUGGER': {\n      const AiAssistanceModel = await import('../../models/ai_assistance/ai_assistance.js');\n      const conversationHandler = await AiAssistanceModel.ConversationHandler.instance();\n      return await conversationHandler.handleExternalRequest({\n        conversationType: AiAssistanceModel.ConversationType.NETWORK,\n        prompt: input.args.prompt,\n        requestUrl: input.args.requestUrl,\n      });\n    }\n    case 'LIVE_STYLE_DEBUGGER': {\n      const AiAssistanceModel = await import('../../models/ai_assistance/ai_assistance.js');\n      const conversationHandler = AiAssistanceModel.ConversationHandler.instance();\n      return await conversationHandler.handleExternalRequest({\n        conversationType: AiAssistanceModel.ConversationType.STYLING,\n        prompt: input.args.prompt,\n        selector: input.args.selector,\n      });\n    }\n  }\n  // eslint-disable-next-line require-yield\n  return (async function*\n          (): AsyncGenerator<AiAssistanceModel.ExternalRequestResponse, AiAssistanceModel.ExternalRequestResponse> {\n            return {\n              type: AiAssistanceModel.ExternalRequestResponseType.ERROR,\n              // @ts-expect-error\n              message: `Debugging with an agent of type '${input.kind}' is not implemented yet.`,\n            };\n          })();\n}\n\n// @ts-expect-error\nglobalThis.handleExternalRequestGenerator = handleExternalRequestGenerator;\n", "// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nexport class SimpleApp implements Common.App.App {\n  presentUI(document: Document): void {\n    const rootView = new UI.RootView.RootView();\n    UI.InspectorView.InspectorView.instance().show(rootView.element);\n    rootView.attachToDocument(document);\n    rootView.focus();\n  }\n}\n\nlet simpleAppProviderInstance: SimpleAppProvider;\n\nexport class SimpleAppProvider implements Common.AppProvider.AppProvider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): SimpleAppProvider {\n    const {forceNew} = opts;\n    if (!simpleAppProviderInstance || forceNew) {\n      simpleAppProviderInstance = new SimpleAppProvider();\n    }\n\n    return simpleAppProviderInstance;\n  }\n\n  createApp(): Common.App.App {\n    return new SimpleApp();\n  }\n}\n"],
  "mappings": ";;;;;;;AAAA;;;;AAKA,YAAY,SAAS;AAGf,IAAO,2BAAP,MAA+B;EACnC;EACA;EACA;EACA;EAEA,YAAY,eAAgD,SAA2B;AACrF,YAAQ,wBAA4B,iBAAa,kBAAkB,KAAK,0BAA0B,IAAI;AACtG,YAAQ,wBAA4B,WAAO,QAAQ,KAAK,gBAAgB,IAAI;AAE5E,kBAAc,iBACN,iBAAa,cAAkB,iBAAa,OAAO,yBAAyB,KAAK,4BACrF,IAAI;AACR,kBAAc,iBACN,iBAAa,cAAkB,iBAAa,OAAO,2BACvD,KAAK,8BAA8B,IAAI;AAC3C,kBAAc,iBACN,iBAAa,cAAkB,iBAAa,OAAO,8BACvD,KAAK,iCAAiC,IAAI;AAC9C,SAAK,iBAAiB;AACtB,SAAK,WAAW;AAChB,kBAAc,cAAkB,iBAAa,cAAc,IAAI;EACjE;EAEA,WAAW,cAA2C;AAGpD,mBAAe,SAAS,KAAK,IAAI,CAAC;AAElC,aAAS,WAAQ;AAEf,UAAI,CAAC,KAAK,SAAS,OAAW,WAAO,MAAM,GAAG;AAC5C,aAAK,SAAS,UAAc,WAAO,QAAQ,aAAa,OAAM,CAAE;MAClE;IACF;EACF;EAEA,aAAa,cAA2C;AACtD,UAAM,0BAA0B,KAAK,SAAS,OAAW,iBAAa,gBAAgB;AACtF,QAAI,2BAA2B,wBAAwB,iBAAiB,cAAc;AACpF,WAAK,6BAA4B;IACnC;AAEA,UAAM,SAAS,KAAK,eAAe,OAAW,iBAAa,YAAY;AACvE,QAAI,KAAK,SAAS,OAAW,WAAO,MAAM,MAAM,aAAa,OAAM,KAAM,OAAO,QAAQ;AACtF,WAAK,SAAS,UAAc,WAAO,QAAQ,OAAO,CAAC,EAAE,OAAM,CAAE;IAC/D;EACF;EAEA,yBAAyB,EACvB,MAAM,WAAU,GAC4D;AAC5E,QAAI,YAAY;AACd,WAAK,SAAS,UAAc,WAAO,QAAQ,WAAW,OAAM,CAAE;AAC9D,UAAI,CAAC,KAAK,uBAAuB;AAC/B,aAAK,yBAAyB,KAAK,qBAAqB,UAAU;MACpE;IACF;EACF;EAEA,qBAAqB,kBAAmD;AACtE,WAAO,iBAAiB,YAAY,iBAAiB,OAAM,EAAG,KAAI,IAAK,MAAM,iBAAiB,UAAU;EAC1G;EAEA,eAAe,EAAC,MAAM,UAAS,GAA8D;AAC3F,UAAM,iBAAiB,KAAK,SAAS,OAAW,iBAAa,gBAAgB;AAE7E,QAAI,CAAC,aAAc,kBAAkB,eAAe,OAAM,MAAO,WAAY;AAC3E;IACF;AAEA,UAAM,eAAe,UAAU,MAAU,iBAAa,YAAY;AAClE,UAAM,oBAAoB,eAAe,aAAa,kBAAiB,IAAK,CAAA;AAC5E,QAAI,CAAC,kBAAkB,QAAQ;AAC7B;IACF;AAEA,QAAI,aAAqD;AACzD,aAAS,IAAI,GAAG,IAAI,kBAAkB,UAAU,CAAC,YAAY,EAAE,GAAG;AAChE,UAAI,KAAK,uBAAuB,kBAAkB,CAAC,CAAC,GAAG;AACrD,qBAAa,kBAAkB,CAAC;MAClC;IACF;AACA,aAAS,IAAI,GAAG,IAAI,kBAAkB,UAAU,CAAC,YAAY,EAAE,GAAG;AAChE,UAAI,KAAK,kBAAkB,kBAAkB,CAAC,CAAC,GAAG;AAChD,qBAAa,kBAAkB,CAAC;MAClC;IACF;AACA,SAAK,wBAAwB;AAC7B,SAAK,SAAS,UAAc,iBAAa,kBAAkB,cAAc,kBAAkB,CAAC,CAAC;AAC7F,SAAK,wBAAwB;EAC/B;EAEA,uBAAuB,kBAAmD;AACxE,QAAI,iBAAiB,OAAM,EAAG,WAAU,GAAI,SAAS;AACnD,aAAO;IACT;AACA,QAAI,KAAK,0BAA0B,KAAK,2BAA2B,KAAK,qBAAqB,gBAAgB,GAAG;AAC9G,aAAO;IACT;AACA,WAAO,CAAC,KAAK,0BAA0B,KAAK,kBAAkB,gBAAgB;EAChF;EAEA,kBAAkB,kBAAmD;AACnE,QAAI,CAAC,iBAAiB,aAAa,CAAC,iBAAiB,SAAS;AAC5D,aAAO;IACT;AACA,QAAI,iBAAiB,OAAM,EAAG,aAAY,GAAI,KAAI,MAAW,WAAO,KAAK,OAAO;AAC9E,aAAO;IACT;AACA,UAAM,oBAAoB,iBAAiB,OAAM,EAAG,MAAU,sBAAkB,iBAAiB;AACjG,UAAM,QAAQ,mBAAmB,WAAW,iBAAiB,OAAO;AACpE,WAAO,QAAQ,OAAO,iBAAgB,CAAE;EAC1C;EAEA,2BAA2B,OAA6E;AACtG,QAAI,KAAK,2BAA2B,QAAW;AAG7C,WAAK,0BAA0B,MAAM,IAAI;AACzC;IACF;AAEA,YAAQ,MAAM,KAAK,OAAM,EAAG,KAAI,GAAI;MAClC,KAAS,WAAO,KAAK;MACrB,KAAS,WAAO,KAAK;MACrB,KAAS,WAAO,KAAK;MACrB,KAAS,WAAO,KAAK;MACrB,KAAS,WAAO,KAAK;MACrB,KAAS,WAAO,KAAK;AACnB;MAEF,KAAS,WAAO,KAAK;MACrB,KAAS,WAAO,KAAK;MACrB,KAAS,WAAO,KAAK;MACrB,KAAS,WAAO,KAAK;AACnB,aAAK,0BAA0B,MAAM,IAAI;AACzC;IACJ;EACF;EAEA,6BAA6B,OAA6E;AACxG,UAAM,mBAAmB,MAAM;AAC/B,QAAI,KAAK,SAAS,OAAW,iBAAa,gBAAgB,MAAM,kBAAkB;AAChF,WAAK,6BAA4B;IACnC;EACF;EAEA,gCAAgC,OAAyE;AACvG,UAAM,eAAe,MAAM;AAC3B,UAAM,oBAAoB,aAAa,kBAAiB;AACxD,aAAS,IAAI,GAAG,IAAI,kBAAkB,QAAQ,KAAK;AACjD,UAAI,KAAK,0BAA0B,kBAAkB,CAAC,CAAC,GAAG;AACxD;MACF;IACF;EACF;EAEA,0BAA0B,kBAAmD;AAC3E,QAAI,CAAC,KAAK,SAAS,OAAW,iBAAa,gBAAgB,KAAK,KAAK,uBAAuB,gBAAgB,GAAG;AAC7G,WAAK,wBAAwB;AAC7B,WAAK,SAAS,UAAc,iBAAa,kBAAkB,gBAAgB;AAC3E,WAAK,wBAAwB;AAC7B,aAAO;IACT;AACA,WAAO;EACT;EAEA,+BAA4B;AAC1B,UAAM,gBAAgB,KAAK,eAAe,OAAW,iBAAa,YAAY;AAC9E,QAAI,aAAqD;AACzD,aAAS,IAAI,GAAG,IAAI,cAAc,UAAU,CAAC,YAAY,EAAE,GAAG;AAC5D,YAAM,oBAAoB,cAAc,CAAC,EAAE,kBAAiB;AAC5D,iBAAW,oBAAoB,mBAAmB;AAChD,YAAI,KAAK,kBAAkB,gBAAgB,GAAG;AAC5C,uBAAa;AACb;QACF;MACF;IACF;AACA,QAAI,CAAC,YAAY;AACf,eAAS,IAAI,GAAG,IAAI,cAAc,UAAU,CAAC,YAAY,EAAE,GAAG;AAC5D,cAAM,oBAAoB,cAAc,CAAC,EAAE,kBAAiB;AAC5D,YAAI,kBAAkB,QAAQ;AAC5B,uBAAa,kBAAkB,CAAC;AAChC;QACF;MACF;IACF;AACA,SAAK,wBAAwB;AAC7B,SAAK,SAAS,UAAc,iBAAa,kBAAkB,UAAU;AACrE,SAAK,wBAAwB;EAC/B;;;;ACxMF;;;;;;;AAIA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,mBAAmB;;;ACJ/B,IAAO,6BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAyEC,YAAY,QAAQ,wBAAwB,CAAC;;;ADjE7D,IAAM,EAAC,QAAQ,MAAM,YAAY,EAAC,SAAQ,EAAC,IAAI;AAE/C,IAAM,YAAY;;;;EAIhB,cAAc;;AAEhB,IAAM,OAAY,UAAK,kBAAkB,sCAAsC,SAAS;AACxF,IAAM,aAAkB,UAAK,mBAAmB,KAAK,QAAW,IAAI;AAEpE,IAAM,wCAAwC;AAC9C,IAAM,qBAAqB,oBAAI,KAAK,YAAY;AAEhD,SAAS,uBAAoB;AAC3B,SAAc,gBAAS,SAAS,SAAQ,EAAG;IACvC;IAAgC;IAAC;;EAAA;AACvC;AAEA,SAAS,6BAA0B;AACjC,QAAM,UAAU,qBAAoB;AACpC,UAAQ,IAAI,QAAQ,IAAG,IAAK,CAAC;AAC/B;AAEA,IAAY;CAAZ,SAAYA,sBAAmB;AAC7B,EAAAA,qBAAA,WAAA,IAAA;AACA,EAAAA,qBAAA,SAAA,IAAA;AACF,GAHY,wBAAA,sBAAmB,CAAA,EAAA;AAUxB,IAAM,eAAe,CAAC,OAAkB,QAAmB,WAA6B;AAC7F,QAAM,mBAAmB,MAAM,UAAU,oBAAoB;AAC7D,QAAM,UAAU,SAAS;IACvB,oBAAoB;IACpB,UAAU;GACX;AAED,SAAO;aACI,0BAAoB;;sBAEX,OAAO,WAAW,MAAM,OAAO,UAAwB,qBAAM,EAAG,MAAM,EAAC,OAAO,KAAI,CAAC,EAAE,QAAQ,kBAAkB,CAAC;;oCAElG,IAAI,WAAW,UAAU,YAAY,CAAC,EAAE;;;KAGvE,MAAM;AAEX;AAGM,IAAO,iBAAP,cAAiC,UAAO,OAAM;EAClD;EACA,eAAoC,oBAAoB;EACxD,sBAAsB;EACtB;EAEA,YAAY,SAAuB,MAAW;AAC5C,UAAM,OAAO;AACb,SAAK,QAAQ,QAAQ;AACrB,SAAK,cAAa;AAElB,QAAI,KAAK,wBAAuB,GAAI;AAClC,WAAK,kBAAiB;IACxB;EACF;EAES,WAAQ;AACf,SAAK,2BAA0B;AAE/B,QAAI,KAAK,8BAA8B;AACrC,aAAO,aAAa,KAAK,4BAA4B;IACvD;EACF;EAEA,+BAA+B,MAAW;AACxC,SAAK,sBAAsB;EAC7B;EAEA,+BAA+B,MAAW;AACxC,SAAK,sBAAsB;EAC7B;EAEA,0BAAuB;AACrB,IAAG,iBAAc,cAAc,SAAQ,EAAG,WAAW,cAAa,EAAG,iBACjE,cAAc,KAAK,4BAA4B;AACnD,IAAG,iBAAc,cAAc,SAAQ,EAAG,WAAW,cAAa,EAAG,iBACjE,cAAc,KAAK,4BAA4B;EACrD;EAEA,6BAA0B;AACxB,IAAG,iBAAc,cAAc,SAAQ,EAAG,WAAW,cAAa,EAAG,oBACjE,cAAc,KAAK,4BAA4B;AACnD,IAAG,iBAAc,cAAc,SAAQ,EAAG,WAAW,cAAa,EAAG,oBACjE,cAAc,KAAK,4BAA4B;EACrD;;;;;EAMA,0BAAuB;AACrB,UAAM,gBAAgB,QAAa,aAAQ,WAAW,wBAAwB,gBAAgB;AAC9F,UAAM,kBAAmB,oBAAI,KAAI,IAAM;AACvC,WAAO,iBAAiB,mBAAmB,qBAAoB,EAAG,IAAG,IAAK;EAC5E;EAEA,oBAAiB;AAGf,SAAK,eAAe,oBAAoB;AACxC,SAAK,cAAa;AAClB,SAAK,wBAAuB;AAC5B,SAAK,8BAA6B;EACpC;EAEA,gCAA6B;AAC3B,QAAI,KAAK,8BAA8B;AACrC,aAAO,aAAa,KAAK,4BAA4B;IACvD;AAEA,SAAK,+BAA+B,OAAO,WAAW,MAAK;AAKzD,UAAI,KAAK,qBAAqB;AAC5B,aAAK,8BAA6B;AAClC;MACF;AAEA,WAAK,eAAe,oBAAoB;AACxC,WAAK,cAAa;AAElB,WAAK,2BAA0B;IACjC,GAAG,qCAAqC;EAC1C;EAEA,WAAQ;AACN,IAAG,eAAY,YAAY,SAAQ,EAAG,mBAAmB,cAAc,aAAa;AACpF,+BAA0B;AAE1B,UAAM,4BACC,iBAAc,cAAc,SAAQ,EAAG,yCAAwC;AACtF,UAAM,iCACF,QAAa,aAAQ,WAAW,wBAAwB,qBAAqB;AACjF,QAAI,kCAAkC,CAAC,2BAA2B;AAIhE,MAAG,iBAAc,cAAc,SAAQ,EAAG,WAAW;QACnD,OAAO;QACP,iBAAiB;OAClB;AACD,MAAG,iBAAc,cAAc,SAAQ,EAAG,wBACtC,EAAC,OAAU,iBAAc,kBAAkB,SAAQ,CAAC;IAC1D;EACF;EAES,gBAAa;AACpB,SAAK,MACD;MACE,OAAO,KAAK;MACZ,SAAS,KAAK,SAAS,KAAK,IAAI;OAElC,QAAW,KAAK,cAAc;EACpC;;AAGF,IAAI;AACE,IAAO,gCAAP,MAAO,+BAA6B;EACxC;EACA;EAEA,cAAA;AACE,SAAK,iBAAiB,SAAS,cAAc,iBAAiB;AAC9D,SAAK,eAAe,eAAkB,UAAO,aAAa,cAAc;AAExE,SAAK,eAAe,IAAO,WAAQ,6BAA6B,KAAK,cAAc;AACnF,SAAK,aAAa,WAAW,KAAK;EACpC;EAEA,OAAI;AACF,WAAO,KAAK;EACd;EAEA,OAAO,SAAS,OAAiC,EAAC,UAAU,KAAI,GAAC;AAC/D,UAAM,EAAC,SAAQ,IAAI;AACnB,QAAI,CAAC,yCAAyC,UAAU;AACtD,8CAAwC,IAAI,+BAA6B;IAC3E;AAEA,WAAO;EACT;;;;AEjNF;;;;;;;;;;;;;AAoCA,YAAYC,aAAY;AACxB,YAAY,UAAU;AACtB,YAAYC,WAAU;AACtB,YAAYC,eAAc;AAC1B,YAAY,oBAAoB;AAChC,YAAYC,WAAU;AACtB,YAAYC,UAAS;AAErB,YAAY,qBAAqB;AACjC,YAAY,YAAY;AACxB,YAAY,cAAc;AAC1B,YAAY,iBAAiB;AAC7B,YAAY,iBAAiB;AAC7B,YAAY,gBAAgB;AAC5B,YAAY,mBAAmB;AAC/B,YAAY,iBAAiB;AAC7B,YAAY,UAAU;AACtB,YAAY,iBAAiB;AAC7B,YAAY,qBAAqB;AACjC,YAAY,eAAe;AAE3B,YAAY,cAAc;AAC1B,YAAY,aAAa;AACzB,YAAY,cAAc;AAC1B,YAAY,gBAAgB;AAC5B,YAAYC,SAAQ;AACpB,YAAY,kBAAkB;AAC9B,SAAQ,QAAAC,OAAM,UAAAC,eAAa;AAC3B,YAAYC,oBAAmB;;AAI/B,IAAMC,aAAY;;;;EAIhB,6BAA6B;;;;EAI7B,UAAU;;;;;EAKV,kCAAkC;;;;EAIlC,0BAA0B;;;;EAI1B,cAAc;;;;EAId,aAAa;;;;EAIb,YAAY;;;;EAIZ,eAAe;;;;EAIf,mBAAmB;;;;EAInB,mBAAmB;;;;EAInB,WAAW;;;;EAIX,MAAM;;;;EAIN,oBAAoB;;AAEtB,IAAMC,QAAY,WAAK,kBAAkB,gCAAgCD,UAAS;AAClF,IAAME,cAAkB,WAAK,mBAAmB,KAAK,QAAWD,KAAI;AAEpE,IAAI;AACE,IAAO,WAAP,MAAe;EACnB,uBAAuB,QAAQ,cAAa;EAC5C;EAEA,cAAA;AACE,OAAS,kBAAkB;AAC3B,SAAK,KAAK,QAAO;EACnB;EAEA,OAAO,KAAK,OAAa;AACvB,QAAS,2BAAsB,YAAW,GAAI;AAC5C;IACF;AACA,YAAQ,KAAK,KAAK;EACpB;EAEA,OAAO,QAAQ,OAAa;AAC1B,QAAS,2BAAsB,YAAW,GAAI;AAC5C;IACF;AACA,YAAQ,QAAQ,KAAK;EACvB;EAEA,MAAM,UAAO;AACX,YAAQ,UAAU,cAAc;AAChC,IAAK,cAAQ,QAAQ,YAAiB,cAAS,SAAQ,CAAE;AACzD,UAAM,CAAC,QAAQ,KAAK,IAAI,MAAM,QAAQ,IAAI;MACxC,IAAI,QAAiC,aAAU;AAC7C,QAAK,2BAAsB,8BAA8B,cAAc,OAAO;MAChF,CAAC;MACD,IAAI,QACA,aAAgB,2BAAsB,8BAA8B,eAAe,OAAO,CAAC;KAChG;AAED,YAAQ,UAAU,sBAAsB;AACxC,SAAK,iCAAgC;AACrC,WAAO,OAAY,cAAQ,YAAY,MAAM;AAC7C,SAAK,eAAe,KAAK;AACzB,UAAM,KAAK,6BAA4B;AAEvC,IAAK,iBAAY,YAAmB,iBAAS,SAAS,SAAQ,EAAG,cAAuB,kBAAkB,EAAE,IAAG,CAAE;AACjH,UAAM,YAAY,OAAO;AAGzB,UAAM,iBAAwB,iBAAS,SAAS,SAAQ,EAAG,cAAc,kBAAkB,KAAK,EAAE,IAAG;AAErG,QAAI,WAAW,SAAS;AAItB,UAAI,WAAW,WAAW,gBAAgB;AACxC,QAAc;UAAyB;UAAI;;QAAA;AAC3C,cAAM,UAAU;UACd,qBAAqB,IAAW,kBAAU,UAAU,CAAC;UACrD,sBAAsB,IAAW,kBAAU,UAAU,EAAE;UACvD,mBAAmB,IAAW,kBAAU,UAAU,EAAE;UACpD,kBAAkB,IAAW,kBAAU,UAAU,EAAE;UACnD,mBAAmB,IAAW,kBAAU,UAAU,EAAE;UACpD,oBAAoB,IAAW,kBAAU,UAAU,EAAE;;AAEvD,aAAK,kBAAgC,4BAAa,OAAO;MAC3D,OAAO;AACL,aAAK,kBAAgC,4BAAY;MACnD;IACF;AAEA,SAAK,KAAK,aAAY;EACxB;EAEA,mCAAgC;AAE9B,SAAK,eAAe,CAAA;AAEpB,SAAK,SAAS,CAAA;AAEd,SAAK,KAAK,gBAAqB;AAE/B,SAAK,KAAK,gBAAqB;AAE/B,SAAK,mBAAmB,CAAA;AAExB,SAAK,eAAe,SAAwB,gCAAiB;EAC/D;EAEA,MAAM,+BAA4B;AAChC,UAAM,kBAAyB,iBAAS,SAAS,SAAQ,EAAG,cAAsB,UAAU,EAAE,IAAG;AACjG,UAAM,iBAAsB,qBAAe,eAAe,SAAS;MACjE,QAAQ;MACR,MAAM;QACJ,mBAAmB,UAAU;QAC7B;QACA,6BAAkC,WAAK;;KAE1C;AAED,IAAK,iBAAY,SAAS,eAAe,MAAM;AAE/C,QAAI,eAAe,WAAW,SAAS;AAIrC,YAAW,WAAK,2BAA2B,OAAO;IACpD;AAEA,QAAI;AACF,YAAW,WAAK,2BAA2B,eAAe,MAAM;IAClE,SAAS,OAAO;AACd,cAAQ,KACJ,+CAA+C,eAAe,MAAM,uCACpE,KAAK;AAET,qBAAe,oBAAmB;IACpC;EACF;EAEA,eAAe,OAA6B;AAC1C,SAAK,uBAAsB;AAC3B,QAAI,gBAAgB;AACpB,QAAS,cAAS,yBAAwB,GAAI;AAC5C,sBAAgB;IAClB,WACI,CAAM,cAAQ,QAAQ,WAAW,UAAU,KAAK,QAAa,cAAQ,QAAQ,WAAW,eAAe,CAAC,KACxG,CAAM,2BAAsB,YAAW,GAAI;AAC7C,sBAAgB;IAClB;AAEA,QAAI;AACJ,QAAI,CAAM,2BAAsB,YAAW,KAAM,OAAO,cAAc;AACpE,YAAM,oBAA0D;QAC9D,GAAU,iBAAS;QACnB,OAAO,MAAM,OAAO,aAAa,MAAK;;AAExC,qBAAe,IAAW,iBAAS,gBAAgB,OAAO,cAAc,mBAAmB,aAAa;IAC1G,OAAO;AACL,qBAAe,IAAW,iBAAS,gBAAgB,CAAA,GAAW,iBAAS,cAAc,aAAa;IACpG;AAEA,UAAM,sBAA4D;MAChE,UAAU,CAAC,SACF,2BAAsB,8BAA8B,mBAAmB,MAAM,EAAC,QAAQ,MAAK,CAAC;MACrG,KAAU,2BAAsB,8BAA8B;MAC9D,KAAK,CAAC,SAAgB;AACpB,eAAO,IAAI,QAAQ,aAAU;AAC3B,UAAK,2BAAsB,8BAA8B,cAAc,MAAM,OAAO;QACtF,CAAC;MACH;MACA,QAAa,2BAAsB,8BAA8B;MACjE,OAAY,2BAAsB,8BAA8B;;AAElE,UAAM,oBAA0D;MAC9D,GAAG;MACH,UAAU,CAAC,SACF,2BAAsB,8BAA8B,mBAAmB,MAAM,EAAC,QAAQ,KAAI,CAAC;;AAKtG,UAAM,gBAAgB,IAAW,iBAAS,gBAAgB,OAAO,mBAAmB,aAAa;AACjG,UAAM,gBAAgB,IAAW,iBAAS,gBAAgB,OAAO,qBAAqB,aAAa;AACnG,IAAO,iBAAS,SAAS,SACrB,EAAC,UAAU,MAAM,eAAe,eAAe,cAAc,kBAAgC,gCAAgB,CAAC;AAElH,QAAI,CAAM,2BAAsB,YAAW,GAAI;AAC7C,UAAW,iBAAS,kBAAiB,EAAG,cAAa;IACvD;EACF;EAEA,yBAAsB;AACpB,IAAK,cAAQ,YAAY,SAAS,gCAAgC,8BAA8B;AAChG,IAAK,cAAQ,YAAY,SAAS,qBAAqB,qBAAqB,IAAI;AAChF,IAAK,cAAQ,YAAY,SACrB,oBAAoB,oBAAoB,QACxC,wEAAwE;AAC5E,IAAK,cAAQ,YAAY,SAAS,mCAAmC,mCAAmC,IAAI;AAC5G,IAAK,cAAQ,YAAY,SACrB,oDAAoD,mDAAmD;AAG3G,IAAK,cAAQ,YAAY,SACrB,kCAAkC,4CAA4C,IAAI;AACtF,IAAK,cAAQ,YAAY,SAAS,4BAA4B,sCAAsC,IAAI;AACxG,IAAK,cAAQ,YAAY,SACrB,kCAAkC,4CAA4C,IAAI;AACtF,IAAK,cAAQ,YAAY,SACrB,4BAA4B,wDAAwD,IAAI;AAC5F,IAAK,cAAQ,YAAY,SACrB,6BAA6B,wEAAwE,IAAI;AAC7G,IAAK,cAAQ,YAAY,SAAQ,uBAE7B,mEAAmE,IAAI;AAG3E,IAAK,cAAQ,YAAY,SAAS,+BAA+B,sCAAsC,IAAI;AAC3G,IAAK,cAAQ,YAAY,SAAS,yBAAyB,0CAA0C,IAAI;AAGzG,IAAK,cAAQ,YAAY,SACrB,QACA,oHACA,QAAW,4DAA4D;AAG3E,IAAK,cAAQ,YAAY,SACrB,2BAA2B,6DAA6D,QACxF,4EACA,0CAA0C;AAG9C,IAAK,cAAQ,YAAY,SACrB,eAAe,gDAAgD,QAC/D,4DAA4D;AAGhE,IAAK,cAAQ,YAAY,SACrB,mBAAmB,kEAAkE,QACrF,oEAAoE;AAGxE,IAAK,cAAQ,YAAY,SAAS,gCAAgC,qCAAqC;AAGvG,IAAK,cAAQ,YAAY,SAAQ,8BAC2B,kDACxD,QAAW,qCAAqC,4CAA4C;AAGhG,IAAK,cAAQ,YAAY,SAAQ,gBACa,8CAA8C;AAE5F,IAAK,cAAQ,YAAY,SAAQ,oCAE7B,iEAAiE;AAGrE,IAAK,cAAQ,YAAY,2BAA2B;;MAElD,GAAS,cAAQ,QAAQ,WAAW,oBAAoB,IAAI,CAAC,kBAAkB,IAAI,CAAA;KACpF;AAED,IAAK,cAAQ,YAAY,wBAAuB;AAChD,UAAM,qBAA0B,cAAQ,QAAQ,WAAW,oBAAoB;AAC/E,QAAI,oBAAoB;AACtB,MAAK,cAAQ,YAAY,4BAA4B,mBAAmB,MAAM,GAAG,CAAC;IACpF;AACA,IAAK,cAAQ,YAAY,6BAA6B,CAAA,CAAE;AAExD,QAAS,2BAAsB,YAAW,GAAI;AAC5C,YAAM,YAAiB,cAAQ,QAAQ,WAAW,MAAM;AACxD,UAAI,WAAW,SAAS,iCAAiC,GAAG;AAC1D,QAAK,cAAQ,YAAY,cAAc,mBAAmB;MAC5D;IACF;AAEA,eAAW,cAAmB,cAAQ,YAAY,2BAA0B,GAAI;AAC9E,UAAI,WAAW,UAAS,GAAI;AAC1B,QAAK,iBAAY,0BAA0B,WAAW,IAAI;MAC5D,OAAO;AACL,QAAK,iBAAY,2BAA2B,WAAW,IAAI;MAC7D;IACF;EACF;EACA,MAAM,eAAY;AAChB,OAAS,KAAK,mBAAmB;AAGjC,UAAM,4BAAwC,sCAA0B,0BAA0B,SAAQ;AAC1G,8BAA0B,iBACV,sCAA0B,OAAO,iBAC7C,WAAkB,kBAAS,SAAS,KAAK,EAAC,SAAS,MAAM,KAAI,CAAC,CAAC;AAEnE,UAAM,sBAAsB;AAC5B,UAAM,eAAsB,iBAAS,SAAS,SAAQ,EAAG,cAAc,YAAY,mBAAmB;AACtG,IAAG,YAAQ,kBAAkB,QAAQ;AAGrC,QAAI,CAAc,0BAAa,YAAW,GAAI;AAC5C,MAAa,0BAAa,SAAS,EAAC,UAAU,MAAM,SAAS,aAAY,CAAC;IAC5E;AAEA,IAAG,YAAQ,iBAAiB,SAAS,eAAe;AACpD,IAAG,YAAQ,2BAA2B,SAAS,IAAI;AAEnD,SAAK,uBAAuB,QAAQ;AAEpC,UAAM,UAAU,QAAa,cAAQ,QAAQ,WAAW,UAAU,CAAC;AACnE,IAAG,gBAAY,YAAY,SACvB,EAAC,UAAU,MAAM,KAAK,QAAQ,cAAmB,2BAAsB,8BAA6B,CAAC;AACzG,IAAG,gBAAY,YAAY,WAAU;AACrC,IAAG,gBAAY,YAAY,eAAe,QAAQ;AAGlD,IAAK,gBAAW,WAAW,SAAQ;AACnC,IAAI,kBAAa,aAAa,SAAQ;AACtC,IAAK,gBAAW,WAAW,SAAQ;AACnC,IAAc,4BAAc,cAAc,SAAS;MACjD,UAAU;MACV,aAAa;MACb,6BAA2C,oBAAM,+BAA8B;MAC/E,kBAAgC,4BAAc,0BAAyB;KACxE;AACD,IAAc,mCAAqB,qBAAqB,SAAQ;AAEhE,IAAG,mBAAe,eAAe,SAAS,EAAC,UAAU,MAAM,QAAO,CAAC;AACnE,IAAI,oBAAe,0BAA0B,SAAS,EAAC,UAAU,KAAI,CAAC;AACtE,IAAI,sBAAiB,mBAAmB,SAAS,EAAC,UAAU,KAAI,CAAC;AACjE,UAAM,gBAAoB,mBAAc,cAAc,SAAQ;AAC9D,kBAAc,iBAAgB,uBACsB,KAAK,uBAAuB,KAAK,IAAI,CAAC;AAE1F,IAAU,sBAAY,YAAY,SAAS,EAAC,UAAU,KAAI,CAAC;AAC3D,IAAU,oBAAU,cAAc,SAAQ;AAE1C,IAAS,wBAAe,sBAAsB,SAAQ;AACtD,UAAM,kBAAkB,IAAa,yBAAgB,gBACjD,eACU,oBAAU,cAAc,SAAQ,CAAE;AAEhD,QAAa,0CAAiC,kCAAiC;AAC/E,IAAS,6BAAoB,oBAAoB,SAAS;MACxD,UAAU;MACV;MACA;KACD;AACD,IAAU,4BAAkB,kBAAkB,SAAS;MACrD,UAAU;KACX;AACD,IAAS,kCAAyB,yBAAyB,SAAS;MAClE,UAAU;MACV;MACA;MACA,mBAA6B,4BAAkB,kBAAkB,SAAQ;KAC1E;AACD,kBAAc,eAAe,cAAc,kBAAiB,CAAE;AAC9D,IAAG,YAAQ,QAAQ,SAAQ,EAAG,wBAA4B,YAAO,QAAQ,CAAC,EAAC,KAAI,MAAK;AAClF,YAAM,kBAAkB,MAAM,gBAAe;AAC7C,oBAAc,eAAe,eAAe;IAC9C,CAAC;AACD,IAAY,8BAAkB,kBAAkB,SAAS;MACvD,UAAU;MACV,WAAqB,oBAAU,cAAc,SAAQ;MACrD;MACA,0BAAmC,kCAAyB,yBAAyB,SAAQ;KAC9F;AAED,SAAK,WAAW,kBAA6B,2BAAgB,gBAAgB,SAAS,EAAC,UAAU,KAAI,CAAC;AAEtG,QAAgB,uCAA2B,2BACvC,2BAAqC,oBAAU,cAAc,SAAQ,CAAE;AAC3E,8BAA0B,sBACtB,cAAiD,IAAa,iCAAwB,kBAAiB,CAAE;AAE7G,IAAY,wBAAY,gBAAgB,SAAS;MAC/C,UAAU;MACV,WAAqB,oBAAU,cAAc,SAAQ;MACrD,mBAA+B,8BAAkB,kBAAkB,SAAQ;KAC5E;AACD,IAAY,sCAA0B,0BAA0B,SAC5D,EAAC,UAAU,MAAM,WAAqB,oBAAU,cAAc,SAAQ,EAAE,CAAC;AAE7E,QAAI,yBAAyB,eAAkB,YAAQ,QAAQ,SAAQ,CAAE;AAEzE,UAAM,uBAAuC,qCAAqB,qBAAqB,SAAS;MAC9F,UAAU;MACV,YAAiB,cAAQ;MACzB,oBAAwB,wBAAmB,mBAAmB,SAAQ;MACtE;KACD;AAED,UAAM,6BAAyC,uCAA2B,2BAA2B,SAAS;MAC5G,UAAU;MACV,uBAA4B,2BAAsB;MAClD;KACD;AACD,IAAY,gDAAoC,oCAAoC,SAAS;MAC3F,UAAU;MACV;MACA;MACA,WAAqB,oBAAU,cAAc,SAAQ;KACtD;AAED,IAAgB,gCAAgB,gBAAgB,SAAQ;AAExD,IAAY,wBAAY,SAAQ;AAChC,IAAY,wBAAY,SAAQ;AAEhC,QAAI,cAAa;AAEjB,UAAM,yBAA4B,mBAAe,eAAe,SAAS,EAAC,UAAU,KAAI,CAAC;AAEzF,IAAG,qBAAiB,iBAAiB,SAAS,EAAC,UAAU,MAAM,gBAAgB,uBAAsB,CAAC;AACtG,SAAK,6BAA4B;AAGjC,QAAS,eAAU,uBAAsB,GAAI;AAC3C,WAAU,eAAU,UAAU,SAAQ,EAAG,WAAU,EAAG,KAAK,wBAAqB;AAC9E,YAAI,CAAC,oBAAoB;AACvB;QACF;AAEA,cAAM,EAAC,SAAS,WAAU,IAAI;AAC9B,cAAM,aAAa,QAAQ,OAAO;AAClC,cAAM,gBAAgB,aAAa,gBAC/B,aAA+B,4BACA;AACnC,aAAmB,+BAAgB,yBAAyB,aAAa;MAC3E,CAAC;AACD,WAAY,kBAAW,SAAQ,EAAG,WAAU;AAC5C,MAAO,kBAAW,SAAQ,EAAG,iBAAgB,kBAAgC,OAAM,OAAK;AACtF,oCAA4B,MAAM,OAAO,iCAA+B;AACxE,cAAM,oBAAoB,IAAI,wBAAwB,kBAAiB;AACvE,aAAK,kBAAkB,QAAQ,GAAG,IAAI;MACxC,CAAC;IACH;AAEA,OAAS,QAAQ,mBAAmB;AAEpC,UAAM,cAAqB,oBAAY,0BAAyB,EAAG,CAAC;AACpE,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,wDAAwD;IAC1E;AACA,UAAM,KAAK,WAAW,MAAM,YAAY,gBAAe,CAAE;EAC3D;EAEA,MAAM,WAAW,aAAmB;AAClC,OAAS,KAAK,iBAAiB;AAC/B,UAAM,MAAO,YAA+C,UAAS;AAErE,IAAG,mBAAe,eAAe,SAAQ,EAAG,WAAU;AACtD,IAAa,0BAAa,SAAQ,EAAG,6BAA4B;AACjE,QAAI,UAAU,QAAQ;AAEtB,QAAO,mBAAe,eAAe,SAAQ,EAAG,UAAU,gCAAgC,GAAG;AAC3F,YAAM,yBACC,mBAAe,eAAe,SAAQ,EAAG,UAAU,gCAAgC;AAE1F,MAAK,2BAAsB,8BAA8B,OAAO,iBACvD,8BAAyB,OAAO,yBAAyB,MAAK;AACjE,aAAK,uBAAuB,QAAO;MACrC,GAAG,IAAI;IACb;AACA,IAAK,2BAAsB,8BAA8B,OAAO,iBACvD,8BAAyB,OAAO,kBAAkB,KAAK,mBAAmB,IAAI;AAEvF,UAAS,kBAAc,cAAc,SAAQ,EAAG,eAAc;AAC9D,IAAK,2BAAsB,8BAA8B,cAAa;AAEtE,UAAM,QAAa,cAAQ,QAAQ,WAAW,qBAAqB;AACnE,QAAI,UAAU,MAAM;AAGlB,YAAM,WAAW,MAAM,OAAO,qCAAmC;AACjE,eAAS,cAAc,oBAAoB,SAAQ,EAAG,iBAAiB,KAAK;IAC9E;AAGA,IAAG,cAAU,cAAc,4BAA2B;AACtD,IAAG,mBAAe,eAAe,SAAQ,EAAG,qBAAoB;AAGhE,WAAO,WAAW,KAAK,kBAAkB,KAAK,IAAI,GAAG,CAAC;AACtD,OAAS,QAAQ,iBAAiB;EACpC;EAEA,MAAM,oBAAiB;AACrB,OAAS,KAAK,wBAAwB;AAKtC,eAAW,4BAAmC,iBAAS,6BAA4B,GAAI;AACrF,YAAM,yBAAwB,EAAG,IAAG;IACtC;AACA,UAAM,KAAK;AAEX,IAAK,2BAAsB,8BAA8B,aAAY;AACrE,SAAK,qBAAqB,QAAO;AAEjC,WAAO,WAAW,KAAK,oBAAoB,KAAK,IAAI,GAAG,GAAG;AAC1D,UAAM,KAAK,iCAAgC;AAE3C,OAAS,QAAQ,wBAAwB;EAC3C;EAEA,MAAM,mCAAgC;AACpC,UAAM,oBAAwB,mBAAc,cAAc,SAAQ,EAAG,kBAAiB;AACtF,UAAM,MAAM,mBAAmB,WAAU,GAAI;AAC7C,UAAM,SAAS,MAAa,kBAAU,UAAU,cAAc,GAAsC,IAAI;AAExG,UAAM,UAAU;AAChB,QAAI,qBAAqB,MAAoB,iCAAkB,MAAM,GAAG;AACtE,YAAM,eAAe,kBAAkB,MAAU,kBAAa,YAAY;AAC1E,YAAM,cAAc,WAAW,EAAC,MAAM,QAAO,CAAC;AAC9C,oBAAc,iBAAqB,kBAAa,OAAO,eAAe,WAAQ;AAC5E,YAAI,MAAM,KAAK,SAAS,SAAS;AAC/B,cAAI,MAAM,KAAK,YAAY,UAAU,MAAM,KAAK,YAAY,SAAS;AACnE,YAAc,qCAAsB,MAAM,KAAK,YAAY,QAAQ,CAAC,UAAiB;AACnF,cAAc,qCAAsB,KAAK;AACzC,mBAAK,cAAc,wBAAuB,GAAI;gBAC1C;kBACE,YAAY,kBAAkB,KAAK,UAAU,KAAK,CAAC;kBACnD,uBAAuB;kBACvB,QAAQ;kBACR,eAAe;kBACf,iBAAiB;;;gBAED;;gBACC;cAAK;YAC9B,CAAC;UACH,OAAO;AACL,YAAc,gCAAiB,MAAM,KAAK,YAAY,SAAS,OAAO,MAAM,KAAK,OAAO;UAC1F;QACF;MACF,CAAC;IACH;EACF;EAEA,MAAM,sBAAmB;AACvB,OAAS,KAAK,0BAA0B;AACxC,IAAW,2BAAgB,gBAAgB,SAAQ,EAAG,qBAAoB;AAC1E,UAAM,WACK,iBAAS,4BAA2B,EAAG,IAAI,OAAM,6BAA2B;AACjF,YAAM,WAAW,MAAM,yBAAwB;AAC/C,aAAO,MAAM,SAAS,IAAG;IAC3B,CAAC;AACL,QAAS,cAAQ,YAAY,UAAU,mBAAmB,GAAG;AAC3D,YAAM,SAAS,MAAM,OAAO,iDAA+C;AAC3E,YAAM,UAAU;AAChB,UAAW,iBAAS,SAAS,SAAQ,EAAG,cAAc,OAAO,EAAE,IAAG,GAAI;AACpE,iBAAS,KAAK,OAAO,gBAAgB,gBAAgB,SAAQ,EAAG,IAAG,CAAE;MACvE,OAAO;AACL,cAAM,iBAAiB,OAAM,UAAsE;AACjG,cAAI,CAAC,MAAM,MAAM;AACf;UACF;AACA,UAAO,iBAAS,SAAS,SAAQ,EAAG,cAAc,OAAO,EAAE,qBAAqB,cAAc;AAC9F,eAAK,OAAO,gBAAgB,gBAAgB,SAAQ,EAAG,IAAG;QAC5D;AACA,QAAO,iBAAS,SAAS,SAAQ,EAAG,cAAc,OAAO,EAAE,kBAAkB,cAAc;MAC7F;IACF;AAEA,OAAS,QAAQ,0BAA0B;EAC7C;EAEA,eAAY;AACV,WAAO,KAAK,qBAAqB;EACnC;EAEA,+BAA4B;AAC1B,IAAO,gBAAQ,QAAQ,SAAQ,EAAG,iBAAgB,gBAAsC,YAAY;AAEpG,aAAS,aAAa,EAAC,MAAM,QAAO,GAA8D;AAChG,UAAI,QAAQ,MAAM;AAChB,QAAO,gBAAQ,QAAQ,SAAQ,EAAG,KAAI;MACxC;IACF;EACF;EAEA,kBAAkB,OAA+F;AAE/G,UAAM,EAAC,KAAK,YAAY,aAAY,IAAI,MAAM;AAC9C,UAAM,eAAyB,oBAAU,cAAc,SAAQ,EAAG,mBAAmB,GAAG;AACxF,QAAI,cAAc;AAChB,WAAY,iBAAS,OAAO,aAAa,WAAW,YAAY,YAAY,CAAC;AAC7E;IACF;AAEA,aAAS,SAASE,QAA+E;AAC/F,YAAMC,gBAAeD,OAAM;AAC3B,UAAIC,cAAa,IAAG,MAAO,KAAK;AAC9B,aAAY,iBAAS,OAAOA,cAAa,WAAW,YAAY,YAAY,CAAC;AAC7E,QAAU,oBAAU,cAAc,SAAQ,EAAG,oBAC/B,oBAAU,OAAO,mBAAmB,QAAQ;MAC5D;IACF;AAEA,IAAU,oBAAU,cAAc,SAAQ,EAAG,iBAC/B,oBAAU,OAAO,mBAAmB,QAAQ;EAC5D;EAEA,qBAAqB,OAAY;AAC/B,QAAI,CAAC,MAAM,SAAS;AAClB,MAAG,qBAAiB,iBAAiB,SAAQ,EAAG,eAAgB,KAAuB;IACzF;EACF;EAEA,0BAA0B,OAAY;AACpC,UAAM,YAAY,IAAI,YAAY,eAAe,MAAM,MAAM,EAAC,SAAS,KAAI,CAAC;AAE5E,cAAU,UAAU,IAAI;AACxB,UAAMC,YAAW,MAAM,UAAW,MAAM,OAAuB;AAC/D,UAAM,SAASA,YAAoB,uBAAa,kBAAkBA,SAAQ,IAAI;AAC9E,QAAI,QAAQ;AACV,aAAO,cAAc,SAAS;IAChC;AACA,QAAI,UAAU,SAAS;AACrB,YAAM,eAAc;IACtB;EACF;EAEA,uBAAuB,OAAY;AACjC,QAAI,MAAM,WAAY,MAAM,OAAuB,UAAU,SAAS,iBAAiB,GAAG;AACxF,YAAM,eAAc;IACtB;EACF;EAEA,uBAAuBA,WAAkB;AACvC,IAAAA,UAAS,iBAAiB,WAAW,KAAK,qBAAqB,KAAK,IAAI,GAAG,KAAK;AAChF,IAAAA,UAAS,iBAAiB,cAAc,KAAK,0BAA0B,KAAK,IAAI,GAAG,IAAI;AACvF,IAAAA,UAAS,iBAAiB,QAAQ,KAAK,0BAA0B,KAAK,IAAI,GAAG,KAAK;AAClF,IAAAA,UAAS,iBAAiB,OAAO,KAAK,0BAA0B,KAAK,IAAI,GAAG,KAAK;AACjF,IAAAA,UAAS,iBAAiB,SAAS,KAAK,0BAA0B,KAAK,IAAI,GAAG,KAAK;AACnF,IAAAA,UAAS,iBAAiB,eAAe,KAAK,uBAAuB,KAAK,IAAI,GAAG,IAAI;EACvF;EAEA,yBAAsB;AACpB,UAAM,YAAgB,mBAAc,cAAc,SAAQ,EAAG,oBAAmB;AAChF,IAAG,kBAAc,cAAc,SAAQ,EAAG,sBAAsB,SAAS;EAC3E;EAEA,OAAO,kBAAiC;;;AAI1C,WAAW,OAAO,WAAW,QAAQ,CAAA;AAErC,WAAW,KAAK,OAAO;AAEjB,IAAO,qBAAP,MAAyB;EAC7B,aAAa,UAA8B,UAAgB;AACzD,QAAS,2BAAsB,8BAA8B,aAAY,GAAI;AAC3E,aAAO;IACT;AAEA,YAAQ,UAAU;MAChB,KAAK;AACH,QAAK,2BAAsB,8BAA8B,OAAM;AAC/D,eAAO;MACT,KAAK;AACH,QAAK,2BAAsB,8BAA8B,QAAO;AAChE,eAAO;MACT,KAAK;AACH,QAAK,2BAAsB,8BAA8B,UAAS;AAClE,eAAO;IACX;AACA,WAAO;EACT;;AAGI,IAAO,uBAAP,MAA2B;EAC/B,aAAa,UAA8B,UAAgB;AACzD,QAAI,iBAAoB,mBAAe,eAAe,YACzC,uBAAa,kBAAkB,QAAQ,CAAC;AAErD,QAAI,CAAC,gBAAgB;AACnB,YAAM,eAAmB,kBAAc,cAAc,SAAQ,EAAG,uBAAsB;AACtF,UAAI,cAAc,gBAAgB;AAChC,yBAAiB,aAAa,eAAc;MAC9C;AACA,UAAI,CAAC,gBAAgB;AACnB,eAAO;MACT;IACF;AACA,YAAQ,UAAU;MAChB,KAAK;AACH,eAAO,eAAe,mBAAkB;MAC1C,KAAK;AACH,eAAO,eAAe,2BAA0B;MAClD,KAAK;AACH,eAAO,eAAe,uBAAsB;MAC9C,KAAK;AACH,eAAO,eAAe,2BAA0B;IACpD;AACA,WAAO;EACT;;AAEF,IAAI;AAEE,IAAO,eAAP,MAAO,cAAY;EACd;EACT,cAAA;AACE,SAAK,QAAQ,IAAO,YAAQ;MACxB,KAAK,mBAAmB,KAAK,IAAI;;MAAwB;;MAAwB;MAAM;MACvF;IAAe;AACnB,SAAK,MAAM,QAAQ,UAAU,IAAI,WAAW;AAC5C,SAAK,MAAM,SAASH,YAAWF,WAAU,2BAA2B,CAAC;EACvE;EAEA,OAAO,SAAS,OAEZ,EAAC,UAAU,KAAI,GAAC;AAClB,UAAM,EAAC,SAAQ,IAAI;AACnB,QAAI,CAAC,wBAAwB,UAAU;AACrC,6BAAuB,IAAI,cAAY;IACzC;AAEA,WAAO;EACT;EAEA,OAAI;AACF,WAAO,KAAK;EACd;EAEA,mBAAmB,aAAuC;AACxD,UAAM,iBAAoB,mBAAe,eAAe,SAAQ;AAChE,QAAI,eAAe,QAAO,GAAI;AAC5B,YAAM,kBAAkB,SAAS,cAAc,KAAK;AACpD,sBAAgB,UAAU,IAAI,aAAa,iBAAiB,eAAe;AAC3E,sBAAgB,aACZ,SAAS,GAAiB,oBAAK,WAAW,EAAE,MAAM,EAAC,SAAS,iCAAgC,CAAC,CAAC,EAAE;AACpG,sBAAgB,WAAW;AAC3B,MAAG,cAAU,SAAS,iBAAiBA,WAAU,WAAWA,WAAU,kBAAkB;AACxF,YAAM,CAAC,sBAAsB,IACtB,qBAAiB,iBAAiB,SAAQ,EAAG,mBAAmB,kBAAkB;AAGzF,MAAAM,QAAOC;;sBAESL,YAAWF,WAAU,kCAAkC,EAAC,KAAK,uBAAuB,MAAK,EAAE,CAAC,CAAC;YACvGE,YAAWF,WAAU,QAAQ,CAAC;;uCAEH,CAAC,UAAiB,MAAM,QAAO,CAAE;;mCAEvB,sBAAM,EAAG,MAAM,EAAC,OAAO,KAAI,CAAC,EAAE,QAAQ,2BAA2B,CAAC;mCAChFE,YAAWF,WAAU,wBAAwB,CAAC;wCACzCE,YAAWF,WAAU,wBAAwB,CAAC;uCAC/C,aAAa;sCACd,eAAe,SAAQ,MAAE,UAAyC;8CAC1D,aAAa;yCAClB,gBAAiC;sCACpC,aAAkC;oCACpC,YAAY;QAAK;QAAI;;MAAA,CAAuC;;mCAE/C,sBAAM,EAAG,MAAM,EAAC,OAAO,KAAI,CAAC,EAAE,QAAQ,yBAAyB,CAAC;mCAC9EE,YAAWF,WAAU,UAAU,CAAC;wCAC3BE,YAAWF,WAAU,UAAU,CAAC;uCACjC,WAAW;sCACZ,eAAe,SAAQ,MAAE,MAAqC;8CACtD,WAAW;yCAChB,gBAAiC;sCACpC,aAAkC;oCACpC,YAAY;QAAK;QAAI;;MAAA,CAAmC;;mCAE3C,sBAAM,EAAG,MAAM,EAAC,OAAO,KAAI,CAAC,EAAE,QAAQ,2BAA2B,CAAC;mCAChFE,YAAWF,WAAU,YAAY,CAAC;wCAC7BE,YAAWF,WAAU,YAAY,CAAC;uCACnC,aAAa;sCACd,eAAe,SAAQ,MAAE,QAAuC;8CACxD,aAAa;yCAClB,gBAAiC;sCACpC,aAAkC;oCACpC,YAAY;QAAK;QAAI;;MAAA,CAAqC;;mCAE7C,sBAAM,EAAG,MAAM,EAAC,OAAO,KAAI,CAAC,EAAE,QAAQ,0BAA0B,CAAC;mCAC/EE,YAAWF,WAAU,WAAW,CAAC;wCAC5BE,YAAWF,WAAU,WAAW,CAAC;uCAClC,YAAY;sCACb,eAAe,SAAQ,MAAE,OAAsC;8CACvD,YAAY;yCACjB,gBAAiC;sCACpC,aAAkC;oCACpC,YAAY;QAAK;QAAI;;MAAA,CAAoC;;SAEpF,iBAAiB,EAAC,MAAM,KAAI,CAAC;AAGhC,sBAAgB,iBAAiB,WAAW,WAAQ;AAClD,YAAI,MAAM;AACV,YAAI,MAAM,QAAQ,aAAa;AAC7B,gBAAM;QACR,WAAW,MAAM,QAAQ,cAAc;AACrC,gBAAM;QACR,WAAW,MAAM,QAAQ,aAAa;AACpC,gBAAM,qBAAqB,gBAAgB,QAAQ,oBAAoB;AACvE,8BAAoB,cAAc,IAAI,cAAc,WAAW,EAAC,KAAK,YAAW,CAAC,CAAC;AAClF;QACF,OAAO;AACL;QACF;AAEA,cAAM,UAAU,MAAM,KAAK,gBAAgB,iBAAiB,iBAAiB,CAAC;AAC9E,YAAI,QAAQ,QAAQ,UAAU,CAAAQ,YAAUA,QAAO,SAAQ,CAAE;AACzD,gBAAiB,0BAAgB,MAAM,QAAQ,KAAK,GAAG,QAAQ,SAAS,CAAC;AACzE,gBAAQ,KAAK,EAAE,MAAK;AACpB,cAAM,QAAQ,IAAI;MACpB,CAAC;AACD,kBAAY,cAAa,EAAG,iBAAiB,iBAAiB,WAAW;IAC3E;AAEA,UAAM,SAAS,KAAK,MAAM;AAE1B,aAAS,YAAY,MAAiC;AACpD,WAAK,eAAe;QAAI;;MAAA,EAAmD,KAAK,MAAM,OAAO,MAAK,CAAE;AACpG,qBAAe,YAAY,IAAI;AAC/B,kBAAY,QAAO;IACrB;AAEA,gBAAY,eAAc,EAAG;MAAa;MAAwB;;MAA0B;IAAI;AAEhG,QAAI,eAAe,SAAQ,MAAE,YAA2C;AACtE,YAAM,aAAiB,mBAAc,cAAc,SAAQ,EAAG,kBAAiB;AAC/E,UAAI,cAAc,WAAW,KAAI,MAAW,YAAO,KAAK,OAAO;AAC7D,oBAAY,eAAc,EAAG,aAAa,iCAAiCN,YAAWF,WAAU,aAAa,CAAC;MAChH;IACF;AAEA,gBAAY,eAAc,EAAG,aACzB,sBACG,kBAAc,cAAc,SAAQ,EAAG,cAAa,IAAKE,YAAWF,WAAU,iBAAiB,IACtCE,YAAWF,WAAU,iBAAiB,CAAC;AACvG,gBAAY,sBAAsB,UAAU;AAC5C,UAAM,YACF,YAAY,eAAc,EAAG,kBAAkBE,YAAWF,WAAU,SAAS,GAAG,OAAO,YAAY;AACvG,UAAM,iBAAoB,gBAAY,4BAA2B;AACjE,mBAAe,KAAK,CAAC,YAAY,eAAc;AAC7C,YAAM,SAAS,WAAW,MAAK;AAC/B,YAAM,SAAS,WAAW,MAAK;AAC/B,aAAO,OAAO,cAAc,MAAM;IACpC,CAAC;AAED,eAAW,iBAAiB,gBAAgB;AAC1C,YAAM,WAAW,cAAc,SAAQ;AACvC,YAAM,cAAc,cAAc,YAAW;AAC7C,YAAM,QAAQ,cAAc,MAAK;AACjC,YAAM,KAAK,cAAc,OAAM;AAC/B,YAAM,cAAc,cAAc,mBAAkB;AAEpD,UAAI,OAAO,eAAe;AACxB,kBAAU,eAAc,EAAG,WAAW,OAAO,MAAK;AAChD,UAAK,iBAAY;YAAqB;;UAAA;AACtC,eAAQ,gBAAY,YAAY,SAAQ,EAAG;YAAS;;YAAiC;UAAI;QAC3F,GAAG,EAAC,cAAc,GAAE,CAAC;AACrB;MACF;AAEA,UAAI,gBAAgB,aAAa;AAC/B;MACF;AACA,UAAI,aAAa,iBAAiB,aAAa,SAAS;AACtD;MACF;AAEA,UAAI,oBAAoB;AACxB,UAAI,aAAa;AACf,4BAAuB,YAAQ,oBAAoB,WAAW;MAChE;AAEA,gBAAU,eAAc,EAAG,WAAW,OAAO,MAAK;AAChD,aAAQ,gBAAY,YAAY,SAAQ,EAAG,SAAS,IAAI,MAAM,KAAK;MACrE,GAAG,EAAC,mBAAmB,kBAAkB,cAAc,iBAAgB,GAAI,cAAc,GAAE,CAAC;IAC9F;AAEA,UAAM,cAAc,YAAY,cAAa,EAAG,kBAAkBE,YAAWF,WAAU,IAAI,GAAG,OAAO,MAAM;AAC3G,gBAAY,sBAAsB,cAAc;EAClD;;AAGF,IAAI;AAEE,IAAO,yBAAP,MAAO,wBAAsB;EACxB;EACT,cAAA;AACE,SAAK,kBAAqB,YAAQ,QAAQ,mBAAmB,eAAe;EAC9E;EAEA,OAAO,SAAS,OAEZ,EAAC,UAAU,KAAI,GAAC;AAClB,UAAM,EAAC,SAAQ,IAAI;AACnB,QAAI,CAAC,kCAAkC,UAAU;AAC/C,uCAAiC,IAAI,wBAAsB;IAC7D;AAEA,WAAO;EACT;EAEA,OAAI;AACF,WAAO,KAAK;EACd;;AAGI,IAAO,gBAAP,MAAoB;EACxB,cAAA;AACE,IAAI,mBAAc,cAAc,SAAQ,EAAG,iBACnC,mBAAc,eAAmB,mBAAc,OAAO,gBAAgB,KAAK,iBAAiB,IAAI;EAC1G;EAEA,gBAAgB,OAA2E;AACzF,IAAI,mBAAc,cAAc,SAAQ,EAAG,oBACnC,mBAAc,eAAmB,mBAAc,OAAO,gBAAgB,KAAK,iBAAiB,IAAI;AACxG,UAAM,gBAAgB,MAAM;AAC5B,UAAM,wBAAwB,cAAc,sBAAqB;AACjE,IAAG,YAAQ,QAAQ,SAAQ,EAAG,UAAc,YAAO,QAAQ,cAAc,OAAM,CAAE;AACjF,SAAY,iBAAS,OAAO,qBAAqB;EACnD;;AAII,SAAU,iBACZ,QAAuD,QAAmB;AAC5E,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAU;AACrC,UAAM,iBAAgC,gCAAiB,KAAK;AAC5D,QAAI,CAAC,gBAAgB;AACnB,aAAO,OAAO,uCAAuC;IACvD;AACA,mBAAe,QAAQ,QAAQ,CAAC,QAAQ,YAAW;AACjD,UAAI,KAAK;AACP,eAAO,OAAO,GAAG;MACnB;AACA,aAAO,QAAQ,OAAO;IACxB,CAAC;EACH,CAAC;AACH;AAEM,IAAO,uBAAP,MAA2B;EAC/B,aAAa,UAA8B,UAAgB;AACzD,YAAQ,UAAU;MAChB,KAAK;AACH,QAAW,kBAAO,OAAM;AAExB,eAAO;IACX;AACA,WAAO;EACT;;AAqBF,eAAsB,sBAAsB,OAA2B;AAErE,QAAM,YAAY,MAAM,+BAA+B,KAAK;AAC5D,MAAI;AACJ,KAAG;AACD,aAAS,MAAM,UAAU,KAAI;EAC/B,SAAS,CAAC,OAAO;AACjB,QAAM,WAAW,OAAO;AACxB,MAAI,SAAS,SAAI,SAA0D;AACzE,UAAM,IAAI,MAAM,SAAS,OAAO;EAClC;AACA,MAAI,SAAS,SAAI,UAA2D;AAC1E,WAAO;MACL,UAAU,SAAS;MACnB,cAAc,SAAS;;EAE3B;AACA,QAAM,IAAI,MAAM,mDAAmD;AACrE;AAGA,WAAW,wBAAwB;AAEnC,eAAsB,+BAA+B,OAA2B;AAE9E,UAAQ,MAAM,MAAM;IAClB,KAAK,sCAAsC;AACzC,YAAM,gBAAgB,MAAM,OAAO,qCAAmC;AACtE,aAAO,cAAc,cAAc,cAAc,4BAA2B;IAC9E;IACA,KAAK,uBAAuB;AAC1B,YAAM,gBAAgB,MAAM,OAAO,qCAAmC;AACtE,aAAO,MAAM,cAAc,cAAc,cAAc,6BAA6B,MAAM,KAAK,MAAM;IACvG;IACA,KAAK,oBAAoB;AACvB,YAAM,oBAAoB,MAAM,OAAO,+CAA6C;AACpF,YAAM,sBAAsB,MAAM,kBAAkB,oBAAoB,SAAQ;AAChF,aAAO,MAAM,oBAAoB,sBAAsB;QACrD,kBAAgB;QAChB,QAAQ,MAAM,KAAK;QACnB,YAAY,MAAM,KAAK;OACxB;IACH;IACA,KAAK,uBAAuB;AAC1B,YAAM,oBAAoB,MAAM,OAAO,+CAA6C;AACpF,YAAM,sBAAsB,kBAAkB,oBAAoB,SAAQ;AAC1E,aAAO,MAAM,oBAAoB,sBAAsB;QACrD,kBAAgB;QAChB,QAAQ,MAAM,KAAK;QACnB,UAAU,MAAM,KAAK;OACtB;IACH;EACF;AAEA,SAAQ,mBAAe;AAEb,WAAO;MACL,MAAI;;MAEJ,SAAS,oCAAoC,MAAM,IAAI;;EAE3D,EAAE;AACZ;AAGA,WAAW,iCAAiC;;;AChnC5C;;;;;AAKA,YAAYS,SAAQ;AAEd,IAAO,YAAP,MAAgB;EACpB,UAAUC,WAAkB;AAC1B,UAAM,WAAW,IAAO,aAAS,SAAQ;AACzC,IAAG,kBAAc,cAAc,SAAQ,EAAG,KAAK,SAAS,OAAO;AAC/D,aAAS,iBAAiBA,SAAQ;AAClC,aAAS,MAAK;EAChB;;AAGF,IAAI;AAEE,IAAO,oBAAP,MAAO,mBAAiB;EAC5B,OAAO,SAAS,OAEZ,EAAC,UAAU,KAAI,GAAC;AAClB,UAAM,EAAC,SAAQ,IAAI;AACnB,QAAI,CAAC,6BAA6B,UAAU;AAC1C,kCAA4B,IAAI,mBAAiB;IACnD;AAEA,WAAO;EACT;EAEA,YAAS;AACP,WAAO,IAAI,UAAS;EACtB;;",
  "names": ["GlobalAiButtonState", "Common", "i18n", "Platform", "Root", "SDK", "UI", "html", "render", "VisualLogging", "UIStrings", "str_", "i18nString", "event", "uiSourceCode", "document", "render", "html", "button", "UI", "document"]
}
