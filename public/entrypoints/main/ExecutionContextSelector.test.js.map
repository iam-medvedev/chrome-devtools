{"version":3,"file":"ExecutionContextSelector.test.js","sourceRoot":"","sources":["../../../../../../front_end/entrypoints/main/ExecutionContextSelector.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Main from './main.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport {\n  createTarget,\n} from '../../testing/EnvironmentHelpers.js';\n\nimport {\n  describeWithMockConnection,\n  dispatchEvent,\n} from '../../testing/MockConnection.js';\n\ndescribeWithMockConnection('ExecutionContextSelector', () => {\n  it('switches to the default context once available', () => {\n    new Main.ExecutionContextSelector.ExecutionContextSelector(\n        SDK.TargetManager.TargetManager.instance(), UI.Context.Context.instance());\n\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    const mainFrameUnderTabTarget = createTarget({type: SDK.Target.Type.Frame, parentTarget: tabTarget});\n    const mainFrameWithoutTabTarget = createTarget({type: SDK.Target.Type.Frame});\n    const subframeTarget = createTarget({type: SDK.Target.Type.Frame, parentTarget: mainFrameWithoutTabTarget});\n    const prerenderTarget = createTarget({type: SDK.Target.Type.Frame, parentTarget: tabTarget, subtype: 'prerender'});\n\n    const contextSetFlavor = sinon.spy(UI.Context.Context.instance(), 'setFlavor');\n\n    const sentExecutionContextCreated = (target: SDK.Target.Target) => {\n      dispatchEvent(target, 'Page.frameNavigated', {\n        frame: {\n          id: 'testFrame',\n          loaderId: 'test',\n          url: 'http://example.com',\n          securityOrigin: 'http://example.com',\n          mimeType: 'text/html',\n        },\n      });\n\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      runtimeModel!.dispatchEventToListeners(\n          SDK.RuntimeModel.Events.ExecutionContextCreated,\n          {isDefault: true, frameId: 'testFrame' as Protocol.Page.FrameId, target: () => target} as\n              SDK.RuntimeModel.ExecutionContext);\n    };\n\n    sentExecutionContextCreated(subframeTarget);\n    assert.isTrue(contextSetFlavor.called);\n\n    contextSetFlavor.resetHistory();\n    sentExecutionContextCreated(subframeTarget);\n    assert.isTrue(contextSetFlavor.notCalled);\n\n    sentExecutionContextCreated(mainFrameUnderTabTarget);\n    assert.isTrue(contextSetFlavor.called);\n\n    contextSetFlavor.resetHistory();\n    sentExecutionContextCreated(mainFrameWithoutTabTarget);\n    assert.isTrue(contextSetFlavor.called);\n\n    contextSetFlavor.resetHistory();\n    sentExecutionContextCreated(prerenderTarget);\n    assert.isFalse(contextSetFlavor.called);\n  });\n});\n"]}