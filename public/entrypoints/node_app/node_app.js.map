{
  "version": 3,
  "sources": ["node_app.prebundle.ts", "../../panels/mobile_throttling/mobile_throttling-meta.prebundle.ts", "../../panels/js_timeline/js_timeline-meta.prebundle.ts", "../../panels/network/network-meta.prebundle.ts", "../../../../../../front_end/entrypoints/node_app/NodeConnectionsPanel.ts", "nodeConnectionsPanel.css.js", "../../../../../../front_end/entrypoints/node_app/NodeMain.ts"],
  "sourcesContent": ["// Copyright 2018 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../shell/shell.js';\nimport '../../panels/mobile_throttling/mobile_throttling-meta.js';\nimport '../../panels/js_timeline/js_timeline-meta.js';\nimport '../../panels/network/network-meta.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport type * as Sources from '../../panels/sources/sources.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Main from '../main/main.js';\n\nimport {NodeConnectionsPanel} from './NodeConnectionsPanel.js';  // eslint-disable-line rulesdir/es-modules-import\nimport {NodeMainImpl} from './NodeMain.js';                      // eslint-disable-line rulesdir/es-modules-import\n\nconst UIStrings = {\n  /**\n   * @description Text that refers to the network connection\n   */\n  connection: 'Connection',\n  /**\n   * @description A tag of Node.js Connection Panel that can be searched in the command menu\n   */\n  node: 'node',\n  /**\n   * @description Command for showing the Connection tool\n   */\n  showConnection: 'Show Connection',\n  /**\n   * @description Title of the 'Node' tool in the Network Navigator View, which is part of the Sources tool\n   */\n  networkTitle: 'Node',\n  /**\n   * @description Command for showing the 'Node' tool in the Network Navigator View, which is part of the Sources tool\n   */\n  showNode: 'Show Node',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/node_app/node_app.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedSourcesModule: (typeof Sources|undefined);\n\nasync function loadSourcesModule(): Promise<typeof Sources> {\n  if (!loadedSourcesModule) {\n    loadedSourcesModule = await import('../../panels/sources/sources.js');\n  }\n  return loadedSourcesModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'node-connection',\n  title: i18nLazyString(UIStrings.connection),\n  commandPrompt: i18nLazyString(UIStrings.showConnection),\n  order: 0,\n  async loadView() {\n    return new NodeConnectionsPanel();\n  },\n  tags: [i18nLazyString(UIStrings.node)],\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,\n  id: 'navigator-network',\n  title: i18nLazyString(UIStrings.networkTitle),\n  commandPrompt: i18nLazyString(UIStrings.showNode),\n  order: 2,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.SourcesNavigator.NetworkNavigatorView.instance();\n  },\n});\n\n// @ts-expect-error Exposed for legacy layout tests\nself.runtime = Root.Runtime.Runtime.instance({forceNew: true});\nCommon.Runnable.registerEarlyInitializationRunnable(NodeMainImpl.instance);\nnew Main.MainImpl.MainImpl();\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as MobileThrottling from './mobile_throttling.js';\n\nconst UIStrings = {\n  /**\n   * @description Text for throttling the network\n   */\n  throttling: 'Throttling',\n  /**\n   * @description Command for showing the Mobile Throttling tool.\n   */\n  showThrottling: 'Show Throttling',\n  /**\n   * @description Title of an action in the network conditions tool to network offline\n   */\n  goOffline: 'Go offline',\n  /**\n   * @description A tag of Mobile related settings that can be searched in the command menu\n   */\n  device: 'device',\n  /**\n   * @description A tag of Network related actions that can be searched in the command menu\n   */\n  throttlingTag: 'throttling',\n  /**\n   * @description Title of an action in the network conditions tool to simulate an environment with a\n   * slow 3G connection, i.e. for a low end mobile device.\n   */\n  enableSlowGThrottling: 'Enable slow `3G` throttling',\n  /**\n   * @description Title of an action in the network conditions tool to simulate an environment with a\n   * medium-speed 3G connection, i.e. for a mid-tier mobile device.\n   */\n  enableFastGThrottling: 'Enable fast `3G` throttling',\n  /**\n   * @description Title of an action in the network conditions tool to network online\n   */\n  goOnline: 'Go online',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/mobile_throttling-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedMobileThrottlingModule: (typeof MobileThrottling|undefined);\n\nasync function loadMobileThrottlingModule(): Promise<typeof MobileThrottling> {\n  if (!loadedMobileThrottlingModule) {\n    loadedMobileThrottlingModule = await import('./mobile_throttling.js');\n  }\n  return loadedMobileThrottlingModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'throttling-conditions',\n  title: i18nLazyString(UIStrings.throttling),\n  commandPrompt: i18nLazyString(UIStrings.showThrottling),\n  order: 35,\n  async loadView() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingSettingsTab.ThrottlingSettingsTab();\n  },\n  settings: [\n    'custom-network-conditions',\n    'calibrated-cpu-throttling',\n  ],\n  iconName: 'performance',\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network-conditions.network-offline',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.goOffline),\n  async loadActionDelegate() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingManager.ActionDelegate();\n  },\n  tags: [\n    i18nLazyString(UIStrings.device),\n    i18nLazyString(UIStrings.throttlingTag),\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network-conditions.network-low-end-mobile',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.enableSlowGThrottling),\n  async loadActionDelegate() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingManager.ActionDelegate();\n  },\n  tags: [\n    i18nLazyString(UIStrings.device),\n    i18nLazyString(UIStrings.throttlingTag),\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network-conditions.network-mid-tier-mobile',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.enableFastGThrottling),\n  async loadActionDelegate() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingManager.ActionDelegate();\n  },\n  tags: [\n    i18nLazyString(UIStrings.device),\n    i18nLazyString(UIStrings.throttlingTag),\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network-conditions.network-online',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.goOnline),\n  async loadActionDelegate() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingManager.ActionDelegate();\n  },\n  tags: [\n    i18nLazyString(UIStrings.device),\n    i18nLazyString(UIStrings.throttlingTag),\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  settingName: 'custom-network-conditions',\n  settingType: Common.Settings.SettingType.ARRAY,\n  defaultValue: [],\n});\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Timeline from '../timeline/timeline.js';\n\nconst UIStrings = {\n  /**\n   * @description Text for the performance of something\n   */\n  performance: 'Performance',\n  /**\n   * @description Command for showing the 'Performance' tool\n   */\n  showPerformance: 'Show Performance',\n  /**\n   * @description Title of an action in the timeline tool to show history\n   */\n  showRecentTimelineSessions: 'Show recent timeline sessions',\n  /**\n   * @description Text to record a series of actions for analysis\n   */\n  record: 'Record',\n  /**\n   * @description Text of an item that stops the running task\n   */\n  stop: 'Stop',\n  /**\n   * @description Title of an action in the timeline tool to record a reload of the current page\n   */\n  recordAndReload: 'Record and reload',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/js_timeline/js_timeline-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedTimelineModule: (typeof Timeline|undefined);\n\nasync function loadTimelineModule(): Promise<typeof Timeline> {\n  if (!loadedTimelineModule) {\n    loadedTimelineModule = await import('../timeline/timeline.js');\n  }\n  return loadedTimelineModule;\n}\n\nfunction maybeRetrieveTimelineContextTypes<T = unknown>(getClassCallBack: (timelineModule: typeof Timeline) => T[]):\n    T[] {\n  if (loadedTimelineModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedTimelineModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'timeline',\n  title: i18nLazyString(UIStrings.performance),\n  commandPrompt: i18nLazyString(UIStrings.showPerformance),\n  order: 66,\n  hasToolbar: false,\n  isPreviewFeature: true,\n  async loadView() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.TimelinePanel.instance({forceNew: null, isNode: true});\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.show-history',\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.showRecentTimelineSessions),\n  contextTypes() {\n    return maybeRetrieveTimelineContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+H',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+Y',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveTimelineContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.record),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stop),\n    },\n  ],\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.record-reload',\n  iconClass: UI.ActionRegistration.IconClass.REFRESH,\n  contextTypes() {\n    return maybeRetrieveTimelineContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.recordAndReload),\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+Shift+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+Shift+E',\n    },\n  ],\n});\n\n// IMPORTANT: if you are updating this, you should also update the setting in\n// timeline-meta.\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERFORMANCE,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  settingName: 'annotations-hidden',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: true,\n});\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Extensions from '../../models/extensions/extensions.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as NetworkForward from './forward/forward.js';\nimport type * as Network from './network.js';\n\nconst UIStrings = {\n  /**\n   * @description Command for showing the 'Network' tool\n   */\n  showNetwork: 'Show Network',\n  /**\n   * @description Title of the Network tool\n   */\n  network: 'Network',\n  /**\n   * @description Command for showing the 'Network request blocking' tool\n   */\n  showNetworkRequestBlocking: 'Show Network request blocking',\n  /**\n   * @description Title of the 'Network request blocking' tool in the bottom drawer\n   */\n  networkRequestBlocking: 'Network request blocking',\n  /**\n   * @description Command for showing the 'Network conditions' tool\n   */\n  showNetworkConditions: 'Show Network conditions',\n  /**\n   * @description Title of the 'Network conditions' tool in the bottom drawer\n   */\n  networkConditions: 'Network conditions',\n  /**\n   * @description A tag of Network Conditions tool that can be searched in the command menu\n   */\n  diskCache: 'disk cache',\n  /**\n   * @description A tag of Network Conditions tool that can be searched in the command menu\n   */\n  networkThrottling: 'network throttling',\n  /**\n   * @description Command for showing the 'Search' tool\n   */\n  showSearch: 'Show Search',\n  /**\n   * @description Title of a search bar or tool\n   */\n  search: 'Search',\n  /**\n   * @description Title of an action in the network tool to toggle recording\n   */\n  recordNetworkLog: 'Record network log',\n  /**\n   * @description Title of an action in the network tool to toggle recording\n   */\n  stopRecordingNetworkLog: 'Stop recording network log',\n  /**\n   * @description Title of an action that hides network request details\n   */\n  hideRequestDetails: 'Hide request details',\n  /**\n   * @description Title of a setting under the Network category in Settings\n   */\n  colorcodeResourceTypes: 'Color-code resource types',\n  /**\n   * @description A tag of Network color-code resource types that can be searched in the command menu\n   */\n  colorCode: 'color code',\n  /**\n   * @description A tag of Network color-code resource types that can be searched in the command menu\n   */\n  resourceType: 'resource type',\n  /**\n   * @description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  colorCodeByResourceType: 'Color code by resource type',\n  /**\n   * @description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  useDefaultColors: 'Use default colors',\n  /**\n   * @description Title of a setting under the Network category in Settings\n   */\n  groupNetworkLogByFrame: 'Group network log by frame',\n  /**\n   * @description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  netWork: 'network',\n  /**\n   * @description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  frame: 'frame',\n  /**\n   * @description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  group: 'group',\n  /**\n   * @description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  groupNetworkLogItemsByFrame: 'Group network log items by frame',\n  /**\n   * @description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  dontGroupNetworkLogItemsByFrame: 'Don\\'t group network log items by frame',\n  /**\n   * @description Title of a button for clearing the network log\n   */\n  clear: 'Clear network log',\n  /**\n   * @description Title of an action in the Network request blocking panel to add a new URL pattern to the blocklist.\n   */\n  addNetworkRequestBlockingPattern: 'Add network request blocking pattern',\n  /**\n   * @description Title of an action in the Network request blocking panel to clear all URL patterns.\n   */\n  removeAllNetworkRequestBlockingPatterns: 'Remove all network request blocking patterns',\n  /**\n   * @description Title of an action in the Network panel (and title of a setting in the Network category)\n   *              that enables options in the UI to copy or export HAR (not translatable) with sensitive data.\n   */\n  allowToGenerateHarWithSensitiveData: 'Allow to generate `HAR` with sensitive data',\n  /**\n   * @description Title of an action in the Network panel that disables options in the UI to copy or export\n   *              HAR (not translatable) with sensitive data.\n   */\n  dontAllowToGenerateHarWithSensitiveData: 'Don\\'t allow to generate `HAR` with sensitive data',\n  /**\n   * @description Tooltip shown as documentation when hovering the (?) icon next to the \"Allow to generate\n   *              HAR with sensitive data\" option in the Settings panel.\n   */\n  allowToGenerateHarWithSensitiveDataDocumentation:\n      'By default generated HAR logs are sanitized and don\\'t include `Cookie`, `Set-Cookie`, or `Authorization` HTTP headers. When this setting is enabled, options to export/copy HAR with sensitive data are provided.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/network-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedNetworkModule: (typeof Network|undefined);\n\nconst isNode = Root.Runtime.Runtime.isNode();\n\nasync function loadNetworkModule(): Promise<typeof Network> {\n  if (!loadedNetworkModule) {\n    loadedNetworkModule = await import('./network.js');\n  }\n  return loadedNetworkModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (loadedNetworkModule: typeof Network) => T[]): T[] {\n  if (loadedNetworkModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedNetworkModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'network',\n  commandPrompt: i18nLazyString(UIStrings.showNetwork),\n  title: i18nLazyString(UIStrings.network),\n  order: 40,\n  isPreviewFeature: isNode,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'network.blocked-urls',\n  commandPrompt: i18nLazyString(UIStrings.showNetworkRequestBlocking),\n  title: i18nLazyString(UIStrings.networkRequestBlocking),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 60,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return new Network.BlockedURLsPane.BlockedURLsPane();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'network.config',\n  commandPrompt: i18nLazyString(UIStrings.showNetworkConditions),\n  title: i18nLazyString(UIStrings.networkConditions),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 40,\n  tags: [\n    i18nLazyString(UIStrings.diskCache),\n    i18nLazyString(UIStrings.networkThrottling),\n    i18n.i18n.lockedLazyString('useragent'),\n    i18n.i18n.lockedLazyString('user agent'),\n    i18n.i18n.lockedLazyString('user-agent'),\n  ],\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkConfigView.NetworkConfigView.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NETWORK_SIDEBAR,\n  id: 'network.search-network-tab',\n  commandPrompt: i18nLazyString(UIStrings.showSearch),\n  title: i18nLazyString(UIStrings.search),\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.SearchNetworkView.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.recordNetworkLog),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopRecordingNetworkLog),\n    },\n  ],\n  bindings: [\n    {\n      shortcut: 'Ctrl+E',\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n    },\n    {\n      shortcut: 'Meta+E',\n      platform: UI.ActionRegistration.Platforms.MAC,\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.clear',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.clear),\n  iconClass: UI.ActionRegistration.IconClass.CLEAR,\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  bindings: [\n    {\n      shortcut: 'Ctrl+L',\n    },\n    {\n      shortcut: 'Meta+K',\n      platform: UI.ActionRegistration.Platforms.MAC,\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.hide-request-details',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.hideRequestDetails),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      shortcut: 'Esc',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.search',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.search),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+F',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.DEVTOOLS_DEFAULT,\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+F',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.DEVTOOLS_DEFAULT,\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.add-network-request-blocking-pattern',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.addNetworkRequestBlockingPattern),\n  iconClass: UI.ActionRegistration.IconClass.PLUS,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.BlockedURLsPane.BlockedURLsPane]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.BlockedURLsPane.ActionDelegate();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.remove-all-network-request-blocking-patterns',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.removeAllNetworkRequestBlockingPatterns),\n  iconClass: UI.ActionRegistration.IconClass.CLEAR,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.BlockedURLsPane.BlockedURLsPane]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.BlockedURLsPane.ActionDelegate();\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.allowToGenerateHarWithSensitiveData),\n  settingName: 'network.show-options-to-generate-har-with-sensitive-data',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18n.i18n.lockedLazyString('HAR'),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.allowToGenerateHarWithSensitiveData),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.dontAllowToGenerateHarWithSensitiveData),\n    },\n  ],\n  learnMore: {\n    url: 'https://goo.gle/devtools-export-hars' as Platform.DevToolsPath.UrlString,\n    tooltip: i18nLazyString(UIStrings.allowToGenerateHarWithSensitiveDataDocumentation),\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.colorcodeResourceTypes),\n  settingName: 'network-color-code-resource-types',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.colorCode),\n    i18nLazyString(UIStrings.resourceType),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.colorCodeByResourceType),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.useDefaultColors),\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.groupNetworkLogByFrame),\n  settingName: 'network.group-by-frame',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.netWork),\n    i18nLazyString(UIStrings.frame),\n    i18nLazyString(UIStrings.group),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.groupNetworkLogItemsByFrame),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.dontGroupNetworkLogItemsByFrame),\n    },\n  ],\n});\n\nUI.ViewManager.registerLocationResolver({\n  name: UI.ViewManager.ViewLocationValues.NETWORK_SIDEBAR,\n  category: UI.ViewManager.ViewLocationCategory.NETWORK,\n  async loadResolver() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n});\n\nUI.ContextMenu.registerProvider({\n  contextTypes() {\n    return [\n      SDK.NetworkRequest.NetworkRequest,\n      SDK.Resource.Resource,\n      Workspace.UISourceCode.UISourceCode,\n      SDK.TraceObject.RevealableNetworkRequest,\n    ];\n  },\n  async loadProvider() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n  experiment: undefined,\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.NetworkRequest.NetworkRequest,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.NETWORK_PANEL,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.RequestRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [NetworkForward.UIRequestLocation.UIRequestLocation];\n  },\n  destination: undefined,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.RequestLocationRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [NetworkForward.NetworkRequestId.NetworkRequestId];\n  },\n  destination: Common.Revealer.RevealerDestination.NETWORK_PANEL,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.RequestIdRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [NetworkForward.UIFilter.UIRequestFilter, Extensions.ExtensionServer.RevealableNetworkRequestFilter];\n  },\n  destination: Common.Revealer.RevealerDestination.NETWORK_PANEL,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.NetworkLogWithFilterRevealer();\n  },\n});\n", "// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable rulesdir/no-imperative-dom-api */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport nodeConnectionsPanelStyles from './nodeConnectionsPanel.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Node Connections Panel of the Sources panel when debugging a Node.js app\n   */\n  nodejsDebuggingGuide: 'Node.js debugging guide',\n  /**\n   * @description Text in Node Connections Panel of the Sources panel when debugging a Node.js app\n   * @example {Node.js debugging guide} PH1\n   */\n  specifyNetworkEndpointAnd:\n      'Specify network endpoint and DevTools will connect to it automatically. Read {PH1} to learn more.',\n  /**\n   * @description Placeholder text content in Node Connections Panel of the Sources panel when debugging a Node.js app\n   */\n  noConnectionsSpecified: 'No connections specified',\n  /**\n   * @description Text of add network target button in Node Connections Panel of the Sources panel when debugging a Node.js app\n   */\n  addConnection: 'Add connection',\n  /**\n   * @description Text in Node Connections Panel of the Sources panel when debugging a Node.js app\n   */\n  networkAddressEgLocalhost: 'Network address (e.g. localhost:9229)',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/node_app/NodeConnectionsPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst nodejsIconUrl = new URL('../../Images/node-stack-icon.svg', import.meta.url).toString();\n\nexport class NodeConnectionsPanel extends UI.Panel.Panel {\n  #config!: Adb.Config;\n  readonly #networkDiscoveryView: NodeConnectionsView;\n  constructor() {\n    super('node-connection');\n\n    this.contentElement.classList.add('node-panel');\n\n    const container = this.contentElement.createChild('div', 'node-panel-center');\n\n    const image = container.createChild('img', 'node-panel-logo');\n    image.src = nodejsIconUrl;\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.DevicesDiscoveryConfigChanged, this.#devicesDiscoveryConfigChanged, this);\n\n    this.contentElement.tabIndex = 0;\n    this.setDefaultFocusedElement(this.contentElement);\n\n    // Trigger notification once.\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(false);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(true);\n\n    this.#networkDiscoveryView = new NodeConnectionsView(config => {\n      this.#config.networkDiscoveryConfig = config;\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesDiscoveryConfig(this.#config);\n    });\n    this.#networkDiscoveryView.show(container);\n  }\n\n  #devicesDiscoveryConfigChanged({data: config}: Common.EventTarget.EventTargetEvent<Adb.Config>): void {\n    this.#config = config;\n    this.#networkDiscoveryView.discoveryConfigChanged(this.#config.networkDiscoveryConfig);\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.registerRequiredCSS(nodeConnectionsPanelStyles);\n  }\n}\n\nexport class NodeConnectionsView extends UI.Widget.VBox implements UI.ListWidget.Delegate<Adb.PortForwardingRule> {\n  readonly #callback: (arg0: Adb.NetworkDiscoveryConfig) => void;\n  readonly #list: UI.ListWidget.ListWidget<Adb.PortForwardingRule>;\n  #editor: UI.ListWidget.Editor<Adb.PortForwardingRule>|null;\n  #networkDiscoveryConfig: Array<{\n    address: string,\n  }>;\n  constructor(callback: (arg0: Adb.NetworkDiscoveryConfig) => void) {\n    super();\n    this.#callback = callback;\n    this.element.classList.add('network-discovery-view');\n\n    const networkDiscoveryFooter = this.element.createChild('div', 'network-discovery-footer');\n    const documentationLink = UI.XLink.XLink.create(\n        'https://nodejs.org/en/docs/inspector/', i18nString(UIStrings.nodejsDebuggingGuide), undefined, undefined,\n        'node-js-debugging');\n    networkDiscoveryFooter.appendChild(\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.specifyNetworkEndpointAnd, {PH1: documentationLink}));\n\n    this.#list = new UI.ListWidget.ListWidget(this);\n    this.#list.registerRequiredCSS(nodeConnectionsPanelStyles);\n    this.#list.element.classList.add('network-discovery-list');\n    const placeholder = document.createElement('div');\n    placeholder.classList.add('network-discovery-list-empty');\n    placeholder.textContent = i18nString(UIStrings.noConnectionsSpecified);\n    this.#list.setEmptyPlaceholder(placeholder);\n    this.#list.show(this.element);\n    this.#editor = null;\n\n    const addButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.addConnection), this.#addNetworkTargetButtonClicked.bind(this),\n        {className: 'add-network-target-button', variant: Buttons.Button.Variant.PRIMARY});\n    this.element.appendChild(addButton);\n\n    this.#networkDiscoveryConfig = [];\n\n    this.element.classList.add('node-frontend');\n  }\n\n  #update(): void {\n    const config = this.#networkDiscoveryConfig.map(item => item.address);\n    this.#callback.call(null, config);\n  }\n\n  #addNetworkTargetButtonClicked(): void {\n    this.#list.addNewItem(this.#networkDiscoveryConfig.length, {address: '', port: ''});\n  }\n\n  discoveryConfigChanged(networkDiscoveryConfig: Adb.NetworkDiscoveryConfig): void {\n    this.#networkDiscoveryConfig = [];\n    this.#list.clear();\n    for (const address of networkDiscoveryConfig) {\n      const item = {address, port: ''};\n      this.#networkDiscoveryConfig.push(item);\n      this.#list.appendItem(item, true);\n    }\n  }\n\n  renderItem(rule: Adb.PortForwardingRule, _editable: boolean): Element {\n    const element = document.createElement('div');\n    element.classList.add('network-discovery-list-item');\n    element.createChild('div', 'network-discovery-value network-discovery-address').textContent = rule.address;\n    return element;\n  }\n\n  removeItemRequested(_rule: Adb.PortForwardingRule, index: number): void {\n    this.#networkDiscoveryConfig.splice(index, 1);\n    this.#list.removeItem(index);\n    this.#update();\n  }\n\n  commitEdit(rule: Adb.PortForwardingRule, editor: UI.ListWidget.Editor<Adb.PortForwardingRule>, isNew: boolean): void {\n    rule.address = editor.control('address').value.trim();\n    if (isNew) {\n      this.#networkDiscoveryConfig.push(rule);\n    }\n    this.#update();\n  }\n\n  beginEdit(rule: Adb.PortForwardingRule): UI.ListWidget.Editor<Adb.PortForwardingRule> {\n    const editor = this.#createEditor();\n    editor.control('address').value = rule.address;\n    return editor;\n  }\n\n  #createEditor(): UI.ListWidget.Editor<Adb.PortForwardingRule> {\n    if (this.#editor) {\n      return this.#editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<Adb.PortForwardingRule>();\n    this.#editor = editor;\n    const content = editor.contentElement();\n    const fields = content.createChild('div', 'network-discovery-edit-row');\n    const input =\n        editor.createInput('address', 'text', i18nString(UIStrings.networkAddressEgLocalhost), addressValidator);\n    fields.createChild('div', 'network-discovery-value network-discovery-address').appendChild(input);\n    return editor;\n\n    function addressValidator(_rule: Adb.PortForwardingRule, _index: number, input: UI.ListWidget.EditorControl):\n        UI.ListWidget.ValidatorResult {\n      const match = input.value.trim().match(/^([a-zA-Z0-9\\.\\-_]+):(\\d+)$/);\n      if (!match) {\n        return {\n          valid: false,\n          errorMessage: undefined,\n        };\n      }\n      const port = parseInt(match[2], 10);\n      return {\n        valid: port <= 65535,\n        errorMessage: undefined,\n      };\n    }\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2015 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.add-network-target-button {\n  margin: 10px 25px;\n  align-self: center;\n}\n\n.network-discovery-list {\n  flex: none;\n  max-width: 600px;\n  max-height: 202px;\n  margin: 20px 0 5px;\n}\n\n.network-discovery-list-empty {\n  flex: auto;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.network-discovery-list-item {\n  padding: 3px 5px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  flex: auto 1 1;\n}\n\n.network-discovery-value {\n  flex: 3 1 0;\n}\n\n.list-item .network-discovery-value {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  user-select: none;\n  color: var(--sys-color-on-surface);\n  overflow: hidden;\n}\n\n.network-discovery-edit-row {\n  flex: none;\n  display: flex;\n  flex-direction: row;\n  margin: 6px 5px;\n  align-items: center;\n}\n\n.network-discovery-edit-row input {\n  width: 100%;\n  text-align: inherit;\n}\n\n.network-discovery-footer {\n  margin: 0;\n  overflow: hidden;\n  max-width: 500px;\n  padding: 3px;\n}\n\n.network-discovery-footer > * {\n  white-space: pre-wrap;\n}\n\n.node-panel {\n  align-items: center;\n  justify-content: flex-start;\n  overflow-y: auto;\n}\n\n.network-discovery-view {\n  min-width: 400px;\n  text-align: left;\n}\n\n:host-context(.node-frontend) .network-discovery-list-empty {\n  height: 40px;\n}\n\n:host-context(.node-frontend) .network-discovery-list-item {\n  padding: 3px 15px;\n  height: 40px;\n}\n\n.node-panel-center {\n  max-width: 600px;\n  padding-top: 50px;\n  text-align: center;\n}\n\n.node-panel-logo {\n  width: 400px;\n  margin-bottom: 50px;\n}\n\n:host-context(.node-frontend) .network-discovery-edit-row input {\n  height: 30px;\n  padding-left: 5px;\n}\n\n:host-context(.node-frontend) .network-discovery-edit-row {\n  margin: 6px 9px;\n}\n\n/*# sourceURL=${import.meta.resolve('./nodeConnectionsPanel.css')} */`;", "// Copyright 2018 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as ProtocolClient from '../../core/protocol_client/protocol_client.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\n\nconst UIStrings = {\n  /**\n   * @description Text that refers to the main target\n   */\n  main: 'Main',\n  /**\n   * @description Text in Node Main of the Sources panel when debugging a Node.js app\n   * @example {example.com} PH1\n   */\n  nodejsS: 'Node.js: {PH1}',\n  /**\n   * @description Text in DevTools window title when debugging a Node.js app\n   * @example {example.com} PH1\n   */\n  NodejsTitleS: 'DevTools - Node.js: {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/node_app/NodeMain.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet nodeMainImplInstance: NodeMainImpl;\n\nexport class NodeMainImpl implements Common.Runnable.Runnable {\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): NodeMainImpl {\n    const {forceNew} = opts;\n    if (!nodeMainImplInstance || forceNew) {\n      nodeMainImplInstance = new NodeMainImpl();\n    }\n    return nodeMainImplInstance;\n  }\n  async run(): Promise<void> {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ConnectToNodeJSFromFrontend);\n    void SDK.Connections.initMainConnection(async () => {\n      const target = SDK.TargetManager.TargetManager.instance().createTarget(\n          // TODO: Use SDK.Target.Type.NODE rather thatn BROWSER once DevTools is loaded appropriately in that case.\n          'main', i18nString(UIStrings.main), SDK.Target.Type.BROWSER, null);\n      target.setInspectedURL('Node.js' as Platform.DevToolsPath.UrlString);\n    }, Components.TargetDetachedDialog.TargetDetachedDialog.connectionLost);\n  }\n}\n\nexport class NodeChildTargetManager extends SDK.SDKModel.SDKModel<void> implements ProtocolProxyApi.TargetDispatcher {\n  readonly #targetManager: SDK.TargetManager.TargetManager;\n  readonly #parentTarget: SDK.Target.Target;\n  readonly #targetAgent: ProtocolProxyApi.TargetApi;\n  readonly #childTargets = new Map<Protocol.Target.SessionID, SDK.Target.Target>();\n  readonly #childConnections = new Map<string, NodeConnection>();\n  constructor(parentTarget: SDK.Target.Target) {\n    super(parentTarget);\n    this.#targetManager = parentTarget.targetManager();\n    this.#parentTarget = parentTarget;\n    this.#targetAgent = parentTarget.targetAgent();\n\n    parentTarget.registerTargetDispatcher(this);\n    void this.#targetAgent.invoke_setDiscoverTargets({discover: true});\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.DevicesDiscoveryConfigChanged, this.#devicesDiscoveryConfigChanged, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(false);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(true);\n  }\n\n  #devicesDiscoveryConfigChanged({data: config}: Common.EventTarget.EventTargetEvent<Adb.Config>): void {\n    const locations = [];\n    for (const address of config.networkDiscoveryConfig) {\n      const parts = address.split(':');\n      const port = parseInt(parts[1], 10);\n      if (parts[0] && port) {\n        locations.push({host: parts[0], port});\n      }\n    }\n    void this.#targetAgent.invoke_setRemoteLocations({locations});\n  }\n\n  override dispose(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(\n        Host.InspectorFrontendHostAPI.Events.DevicesDiscoveryConfigChanged, this.#devicesDiscoveryConfigChanged, this);\n\n    for (const sessionId of this.#childTargets.keys()) {\n      this.detachedFromTarget({sessionId});\n    }\n  }\n\n  targetCreated({targetInfo}: Protocol.Target.TargetCreatedEvent): void {\n    if (targetInfo.type === 'node' && !targetInfo.attached) {\n      void this.#targetAgent.invoke_attachToTarget({targetId: targetInfo.targetId, flatten: false});\n    } else if (targetInfo.type === 'node_worker') {\n      void this.#targetAgent.invoke_setAutoAttach({autoAttach: true, waitForDebuggerOnStart: false});\n    }\n  }\n\n  targetInfoChanged(_event: Protocol.Target.TargetInfoChangedEvent): void {\n  }\n\n  targetDestroyed(_event: Protocol.Target.TargetDestroyedEvent): void {\n  }\n\n  attachedToTarget({sessionId, targetInfo}: Protocol.Target.AttachedToTargetEvent): void {\n    let target: SDK.Target.Target;\n    if (targetInfo.type === 'node_worker') {\n      target = this.#targetManager.createTarget(\n          targetInfo.targetId, targetInfo.title, SDK.Target.Type.NODE_WORKER, this.#parentTarget, sessionId, true,\n          undefined, targetInfo);\n    } else {\n      const name = i18nString(UIStrings.nodejsS, {PH1: targetInfo.url});\n      document.title = i18nString(UIStrings.NodejsTitleS, {PH1: targetInfo.url});\n      const connection = new NodeConnection(this.#targetAgent, sessionId);\n      this.#childConnections.set(sessionId, connection);\n      target = this.#targetManager.createTarget(\n          targetInfo.targetId, name, SDK.Target.Type.NODE, this.#parentTarget, undefined, undefined, connection);\n    }\n    this.#childTargets.set(sessionId, target);\n    void target.runtimeAgent().invoke_runIfWaitingForDebugger();\n  }\n\n  detachedFromTarget({sessionId}: Protocol.Target.DetachedFromTargetEvent): void {\n    const childTarget = this.#childTargets.get(sessionId);\n    if (childTarget) {\n      childTarget.dispose('target terminated');\n    }\n    this.#childTargets.delete(sessionId);\n    this.#childConnections.delete(sessionId);\n  }\n\n  receivedMessageFromTarget({sessionId, message}: Protocol.Target.ReceivedMessageFromTargetEvent): void {\n    const connection = this.#childConnections.get(sessionId);\n    const onMessage = connection ? connection.onMessage : null;\n    if (onMessage) {\n      onMessage.call(null, message);\n    }\n  }\n\n  targetCrashed(_event: Protocol.Target.TargetCrashedEvent): void {\n  }\n}\n\nexport class NodeConnection implements ProtocolClient.InspectorBackend.Connection {\n  readonly #targetAgent: ProtocolProxyApi.TargetApi;\n  readonly #sessionId: Protocol.Target.SessionID;\n  onMessage: ((arg0: Object|string) => void)|null;\n  #onDisconnect: ((arg0: string) => void)|null;\n  constructor(targetAgent: ProtocolProxyApi.TargetApi, sessionId: Protocol.Target.SessionID) {\n    this.#targetAgent = targetAgent;\n    this.#sessionId = sessionId;\n    this.onMessage = null;\n    this.#onDisconnect = null;\n  }\n\n  setOnMessage(onMessage: (arg0: Object|string) => void): void {\n    this.onMessage = onMessage;\n  }\n\n  setOnDisconnect(onDisconnect: (arg0: string) => void): void {\n    this.#onDisconnect = onDisconnect;\n  }\n\n  sendRawMessage(message: string): void {\n    void this.#targetAgent.invoke_sendMessageToTarget({message, sessionId: this.#sessionId});\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.#onDisconnect) {\n      this.#onDisconnect.call(null, 'force disconnect');\n    }\n    this.#onDisconnect = null;\n    this.onMessage = null;\n    await this.#targetAgent.invoke_detachFromTarget({sessionId: this.#sessionId});\n  }\n}\n\nSDK.SDKModel.SDKModel.register(NodeChildTargetManager, {capabilities: SDK.Target.Capability.TARGET, autostart: true});\n"],
  "mappings": "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",
  "names": ["Common", "i18n", "UI", "UIStrings", "str_", "i18nLazyString", "Common", "i18n", "UI", "UIStrings", "str_", "i18nLazyString", "Common", "i18n", "Root", "UI", "i18n", "UI", "UIStrings", "str_", "input", "Host", "i18n", "SDK", "UIStrings", "str_", "i18nString", "UIStrings", "str_", "i18nLazyString"]
}
