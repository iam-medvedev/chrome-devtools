{
  "version": 3,
  "sources": ["worker_app.prebundle.ts", "../../panels/browser_debugger/browser_debugger-meta.prebundle.ts", "../../panels/developer_resources/developer_resources-meta.prebundle.ts", "../../panels/issues/issues-meta.prebundle.ts", "../../panels/layer_viewer/layer_viewer-meta.prebundle.ts", "../../panels/mobile_throttling/mobile_throttling-meta.prebundle.ts", "../../panels/network/network-meta.prebundle.ts", "../../panels/application/application-meta.prebundle.ts", "../../panels/timeline/timeline-meta.prebundle.ts", "../../../../../../front_end/entrypoints/worker_app/WorkerMain.ts"],
  "sourcesContent": ["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../shell/shell.js';\nimport '../../panels/browser_debugger/browser_debugger-meta.js';\nimport '../../panels/developer_resources/developer_resources-meta.js';\nimport '../../panels/issues/issues-meta.js';\nimport '../../panels/layer_viewer/layer_viewer-meta.js';\nimport '../../panels/mobile_throttling/mobile_throttling-meta.js';\nimport '../../panels/network/network-meta.js';\nimport '../../panels/application/application-meta.js';\nimport '../../panels/timeline/timeline-meta.js';\nimport './WorkerMain.js';\n\nimport * as Root from '../../core/root/root.js';\nimport * as Main from '../main/main.js';\n\n// @ts-expect-error Exposed for legacy layout tests\nself.runtime = Root.Runtime.Runtime.instance({forceNew: true});\nnew Main.MainImpl.MainImpl();\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Sources from '../../panels/sources/sources.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as BrowserDebugger from './browser_debugger.js';\n\nconst UIStrings = {\n  /**\n   *@description Command for showing the 'Event Listener Breakpoints' tool\n   */\n  showEventListenerBreakpoints: 'Show Event Listener Breakpoints',\n  /**\n   *@description Title of the 'Event Listener Breakpoints' tool in the bottom sidebar of the Sources tool\n   */\n  eventListenerBreakpoints: 'Event Listener Breakpoints',\n  /**\n   *@description Title for showing the 'CSP Violation Breakpoints' tool in the Sources panel\n   */\n  showCspViolationBreakpoints: 'Show CSP Violation Breakpoints',\n  /**\n   *@description Title of the 'CSP Violation Breakpoints' tool in the bottom sidebar of the Sources tool\n   */\n  cspViolationBreakpoints: 'CSP Violation Breakpoints',\n  /**\n   *@description Command for showing the 'XHR/fetch Breakpoints' in the sources panel\n   */\n  showXhrfetchBreakpoints: 'Show XHR/fetch Breakpoints',\n  /**\n   *@description Title of the 'XHR/fetch Breakpoints' tool in the bottom sidebar of the Sources tool\n   */\n  xhrfetchBreakpoints: 'XHR/fetch Breakpoints',\n  /**\n   *@description Command for showing the 'DOM Breakpoints' tool in the Elements panel\n   */\n  showDomBreakpoints: 'Show DOM Breakpoints',\n  /**\n   *@description Title of the 'DOM Breakpoints' tool in the bottom sidebar of the Sources tool\n   */\n  domBreakpoints: 'DOM Breakpoints',\n  /**\n   *@description Command for showing the 'Global Listeners' tool in the sources panel\n   */\n  showGlobalListeners: 'Show Global Listeners',\n  /**\n   *@description Title of the 'Global Listeners' tool in the bottom sidebar of the Sources tool\n   */\n  globalListeners: 'Global Listeners',\n  /**\n   *@description Text that refers to one or a group of webpages\n   */\n  page: 'Page',\n  /**\n   *@description Command for showing the 'Page' tab in the Sources panel\n   */\n  showPage: 'Show Page',\n  /**\n   *@description Title as part of a tool to override existing configurations\n   */\n  overrides: 'Overrides',\n  /**\n   *@description Command for showing the 'Overrides' tool in the Sources panel\n   */\n  showOverrides: 'Show Overrides',\n  /**\n   *@description Title for a type of source files\n   */\n  contentScripts: 'Content scripts',\n  /**\n   *@description Command for showing the 'Content scripts' tool in the sources panel\n   */\n  showContentScripts: 'Show Content scripts',\n  /**\n   *@description Label for a button in the sources panel that refreshes the list of global event listeners.\n   */\n  refreshGlobalListeners: 'Refresh global listeners',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/browser_debugger/browser_debugger-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedBrowserDebuggerModule: (typeof BrowserDebugger|undefined);\n\nasync function loadBrowserDebuggerModule(): Promise<typeof BrowserDebugger> {\n  if (!loadedBrowserDebuggerModule) {\n    loadedBrowserDebuggerModule = await import('./browser_debugger.js');\n  }\n  return loadedBrowserDebuggerModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(\n    getClassCallBack: (loadedBrowserDebuggerModule: typeof BrowserDebugger) => T[]): T[] {\n  if (loadedBrowserDebuggerModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedBrowserDebuggerModule);\n}\n\nlet loadedSourcesModule: (typeof Sources|undefined);\n\n//  The sources module is imported here because the view with id `navigator-network`\n//  is implemented by `NetworkNavigatorView` in sources. It cannot be registered\n//  in the sources module as it belongs to the shell app and thus all apps\n//  that extend from shell will have such view registered. This would cause a\n//  collision with node_app as a separate view with the same id is registered in it.\nasync function loadSourcesModule(): Promise<typeof Sources> {\n  if (!loadedSourcesModule) {\n    loadedSourcesModule = await import('../sources/sources.js');\n  }\n  return loadedSourcesModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  async loadView() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return BrowserDebugger.EventListenerBreakpointsSidebarPane.EventListenerBreakpointsSidebarPane.instance();\n  },\n  id: 'sources.event-listener-breakpoints',\n  location: UI.ViewManager.ViewLocationValues.SOURCES_SIDEBAR_BOTTOM,\n  commandPrompt: i18nLazyString(UIStrings.showEventListenerBreakpoints),\n  title: i18nLazyString(UIStrings.eventListenerBreakpoints),\n  order: 9,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n});\n\nUI.ViewManager.registerViewExtension({\n  async loadView() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return new BrowserDebugger.CSPViolationBreakpointsSidebarPane.CSPViolationBreakpointsSidebarPane();\n  },\n  id: 'sources.csp-violation-breakpoints',\n  location: UI.ViewManager.ViewLocationValues.SOURCES_SIDEBAR_BOTTOM,\n  commandPrompt: i18nLazyString(UIStrings.showCspViolationBreakpoints),\n  title: i18nLazyString(UIStrings.cspViolationBreakpoints),\n  order: 10,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n});\n\nUI.ViewManager.registerViewExtension({\n  async loadView() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return BrowserDebugger.XHRBreakpointsSidebarPane.XHRBreakpointsSidebarPane.instance();\n  },\n  id: 'sources.xhr-breakpoints',\n  location: UI.ViewManager.ViewLocationValues.SOURCES_SIDEBAR_BOTTOM,\n  commandPrompt: i18nLazyString(UIStrings.showXhrfetchBreakpoints),\n  title: i18nLazyString(UIStrings.xhrfetchBreakpoints),\n  order: 5,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  hasToolbar: true,\n});\n\nUI.ViewManager.registerViewExtension({\n  async loadView() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return BrowserDebugger.DOMBreakpointsSidebarPane.DOMBreakpointsSidebarPane.instance();\n  },\n  id: 'sources.dom-breakpoints',\n  location: UI.ViewManager.ViewLocationValues.SOURCES_SIDEBAR_BOTTOM,\n  commandPrompt: i18nLazyString(UIStrings.showDomBreakpoints),\n  title: i18nLazyString(UIStrings.domBreakpoints),\n  order: 7,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n});\n\nUI.ViewManager.registerViewExtension({\n  async loadView() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return new BrowserDebugger.ObjectEventListenersSidebarPane.ObjectEventListenersSidebarPane();\n  },\n  id: 'sources.global-listeners',\n  location: UI.ViewManager.ViewLocationValues.SOURCES_SIDEBAR_BOTTOM,\n  commandPrompt: i18nLazyString(UIStrings.showGlobalListeners),\n  title: i18nLazyString(UIStrings.globalListeners),\n  order: 8,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  hasToolbar: true,\n});\n\nUI.ViewManager.registerViewExtension({\n  async loadView() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return BrowserDebugger.DOMBreakpointsSidebarPane.DOMBreakpointsSidebarPane.instance();\n  },\n  id: 'elements.dom-breakpoints',\n  location: UI.ViewManager.ViewLocationValues.ELEMENTS_SIDEBAR,\n  commandPrompt: i18nLazyString(UIStrings.showDomBreakpoints),\n  title: i18nLazyString(UIStrings.domBreakpoints),\n  order: 6,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,\n  id: 'navigator-network',\n  title: i18nLazyString(UIStrings.page),\n  commandPrompt: i18nLazyString(UIStrings.showPage),\n  order: 2,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.SourcesNavigator.NetworkNavigatorView.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,\n  id: 'navigator-overrides',\n  title: i18nLazyString(UIStrings.overrides),\n  commandPrompt: i18nLazyString(UIStrings.showOverrides),\n  order: 4,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.SourcesNavigator.OverridesNavigatorView.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,\n  id: 'navigator-content-scripts',\n  title: i18nLazyString(UIStrings.contentScripts),\n  commandPrompt: i18nLazyString(UIStrings.showContentScripts),\n  order: 5,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  condition: () => Root.Runtime.getPathName() !== '/bundled/worker_app.html',\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return new Sources.SourcesNavigator.ContentScriptsNavigatorView();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.DEBUGGER,\n  actionId: 'browser-debugger.refresh-global-event-listeners',\n  async loadActionDelegate() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return new BrowserDebugger.ObjectEventListenersSidebarPane.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.refreshGlobalListeners),\n  iconClass: UI.ActionRegistration.IconClass.REFRESH,\n  contextTypes() {\n    return maybeRetrieveContextTypes(\n        BrowserDebugger =>\n            [BrowserDebugger.ObjectEventListenersSidebarPane.ObjectEventListenersSidebarPane,\n    ]);\n  },\n});\n\nUI.ContextMenu.registerProvider({\n  contextTypes() {\n    return [\n      SDK.DOMModel.DOMNode,\n    ];\n  },\n  async loadProvider() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return new BrowserDebugger.DOMBreakpointsSidebarPane.ContextMenuProvider();\n  },\n  experiment: undefined,\n});\n\nUI.Context.registerListener({\n  contextTypes() {\n    return [SDK.DebuggerModel.DebuggerPausedDetails];\n  },\n  async loadListener() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return BrowserDebugger.XHRBreakpointsSidebarPane.XHRBreakpointsSidebarPane.instance();\n  },\n});\n\nUI.Context.registerListener({\n  contextTypes() {\n    return [SDK.DebuggerModel.DebuggerPausedDetails];\n  },\n  async loadListener() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return BrowserDebugger.DOMBreakpointsSidebarPane.DOMBreakpointsSidebarPane.instance();\n  },\n});\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as DeveloperResources from './developer_resources.js';\n\nconst UIStrings = {\n  /**\n   * @description Title for developer resources panel\n   */\n  developerResources: 'Developer resources',\n  /**\n   * @description Command for showing the developer resources panel\n   */\n  showDeveloperResources: 'Show Developer resources',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/developer_resources/developer_resources-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedDeveloperResourcesModule: (typeof DeveloperResources|undefined);\n\nasync function loadDeveloperResourcesModule(): Promise<typeof DeveloperResources> {\n  if (!loadedDeveloperResourcesModule) {\n    loadedDeveloperResourcesModule = await import('./developer_resources.js');\n  }\n  return loadedDeveloperResourcesModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'developer-resources',\n  title: i18nLazyString(UIStrings.developerResources),\n  commandPrompt: i18nLazyString(UIStrings.showDeveloperResources),\n  order: 100,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const DeveloperResources = await loadDeveloperResourcesModule();\n    return new DeveloperResources.DeveloperResourcesView.DeveloperResourcesView();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [SDK.PageResourceLoader.ResourceKey];\n  },\n  destination: Common.Revealer.RevealerDestination.DEVELOPER_RESOURCES_PANEL,\n  async loadRevealer() {\n    const DeveloperResources = await loadDeveloperResourcesModule();\n    return new DeveloperResources.DeveloperResourcesView.DeveloperResourcesRevealer();\n  },\n});\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Issues from './issues.js';\n\nconst UIStrings = {\n  /**\n   *@description Label for the issues pane\n   */\n  issues: 'Issues',\n  /**\n   *@description Command for showing the 'Issues' tool\n   */\n  showIssues: 'Show Issues',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/issues-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedIssuesModule: (typeof Issues|undefined);\n\nasync function loadIssuesModule(): Promise<typeof Issues> {\n  if (!loadedIssuesModule) {\n    loadedIssuesModule = await import('./issues.js');\n  }\n  return loadedIssuesModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'issues-pane',\n  title: i18nLazyString(UIStrings.issues),\n  commandPrompt: i18nLazyString(UIStrings.showIssues),\n  order: 100,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const Issues = await loadIssuesModule();\n    return new Issues.IssuesPane.IssuesPane();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      IssuesManager.Issue.Issue,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.ISSUES_VIEW,\n  async loadRevealer() {\n    const Issues = await loadIssuesModule();\n    return new Issues.IssueRevealer.IssueRevealer();\n  },\n});\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in the Shortcuts page to explain a keyboard shortcut (reset view in Layers Panel)\n   */\n  resetView: 'Reset view',\n  /**\n   *@description Text in the Shortcuts page to explain a keyboard shortcut (switch to pan in Layers Panel)\n   */\n  switchToPanMode: 'Switch to pan mode',\n  /**\n   *@description Text in the Shortcuts page to explain a keyboard shortcut (switch to rotate mode in Layers Panel)\n   */\n  switchToRotateMode: 'Switch to rotate mode',\n  /**\n   *@description Text in the Shortcuts page to explain a keyboard shortcut (zoom in)\n   */\n  zoomIn: 'Zoom in',\n  /**\n   *@description Text in the Shortcuts page to explain a keyboard shortcut (zoom out)\n   */\n  zoomOut: 'Zoom out',\n  /**\n   *@description Description of a shortcut that pans or rotates the layer viewer up\n   */\n  panOrRotateUp: 'Pan or rotate up',\n  /**\n   *@description Description of a shortcut that pans or rotates the layer viewer down\n   */\n  panOrRotateDown: 'Pan or rotate down',\n  /**\n   *@description Description of a shortcut that pans or rotates the layer viewer left\n   */\n  panOrRotateLeft: 'Pan or rotate left',\n  /**\n   *@description Description of a shortcut that pans or rotates the layer viewer right\n   */\n  panOrRotateRight: 'Pan or rotate right',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/layer_viewer-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'layers.reset-view',\n  category: UI.ActionRegistration.ActionCategory.LAYERS,\n  title: i18nLazyString(UIStrings.resetView),\n  bindings: [\n    {\n      shortcut: '0',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'layers.pan-mode',\n  category: UI.ActionRegistration.ActionCategory.LAYERS,\n  title: i18nLazyString(UIStrings.switchToPanMode),\n  bindings: [\n    {\n      shortcut: 'x',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'layers.rotate-mode',\n  category: UI.ActionRegistration.ActionCategory.LAYERS,\n  title: i18nLazyString(UIStrings.switchToRotateMode),\n  bindings: [\n    {\n      shortcut: 'v',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'layers.zoom-in',\n  category: UI.ActionRegistration.ActionCategory.LAYERS,\n  title: i18nLazyString(UIStrings.zoomIn),\n  bindings: [\n    {\n      shortcut: 'Shift+Plus',\n    },\n    {\n      shortcut: 'NumpadPlus',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'layers.zoom-out',\n  category: UI.ActionRegistration.ActionCategory.LAYERS,\n  title: i18nLazyString(UIStrings.zoomOut),\n  bindings: [\n    {\n      shortcut: 'Shift+Minus',\n    },\n    {\n      shortcut: 'NumpadMinus',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'layers.up',\n  category: UI.ActionRegistration.ActionCategory.LAYERS,\n  title: i18nLazyString(UIStrings.panOrRotateUp),\n  bindings: [\n    {\n      shortcut: 'Up',\n    },\n    {\n      shortcut: 'w',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'layers.down',\n  category: UI.ActionRegistration.ActionCategory.LAYERS,\n  title: i18nLazyString(UIStrings.panOrRotateDown),\n  bindings: [\n    {\n      shortcut: 'Down',\n    },\n    {\n      shortcut: 's',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'layers.left',\n  category: UI.ActionRegistration.ActionCategory.LAYERS,\n  title: i18nLazyString(UIStrings.panOrRotateLeft),\n  bindings: [\n    {\n      shortcut: 'Left',\n    },\n    {\n      shortcut: 'a',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'layers.right',\n  category: UI.ActionRegistration.ActionCategory.LAYERS,\n  title: i18nLazyString(UIStrings.panOrRotateRight),\n  bindings: [\n    {\n      shortcut: 'Right',\n    },\n    {\n      shortcut: 'd',\n    },\n  ],\n});\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as MobileThrottling from './mobile_throttling.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for throttling the network\n   */\n  throttling: 'Throttling',\n  /**\n   *@description Command for showing the Mobile Throttling tool.\n   */\n  showThrottling: 'Show Throttling',\n  /**\n   *@description Title of an action in the network conditions tool to network offline\n   */\n  goOffline: 'Go offline',\n  /**\n   *@description A tag of Mobile related settings that can be searched in the command menu\n   */\n  device: 'device',\n  /**\n   *@description A tag of Network related actions that can be searched in the command menu\n   */\n  throttlingTag: 'throttling',\n  /**\n   * @description Title of an action in the network conditions tool to simulate an environment with a\n   * slow 3G connection, i.e. for a low end mobile device.\n   */\n  enableSlowGThrottling: 'Enable slow `3G` throttling',\n  /**\n   * @description Title of an action in the network conditions tool to simulate an environment with a\n   * medium-speed 3G connection, i.e. for a mid-tier mobile device.\n   */\n  enableFastGThrottling: 'Enable fast `3G` throttling',\n  /**\n   *@description Title of an action in the network conditions tool to network online\n   */\n  goOnline: 'Go online',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/mobile_throttling-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedMobileThrottlingModule: (typeof MobileThrottling|undefined);\n\nasync function loadMobileThrottlingModule(): Promise<typeof MobileThrottling> {\n  if (!loadedMobileThrottlingModule) {\n    loadedMobileThrottlingModule = await import('./mobile_throttling.js');\n  }\n  return loadedMobileThrottlingModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'throttling-conditions',\n  title: i18nLazyString(UIStrings.throttling),\n  commandPrompt: i18nLazyString(UIStrings.showThrottling),\n  order: 35,\n  async loadView() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingSettingsTab.ThrottlingSettingsTab();\n  },\n  settings: [\n    'custom-network-conditions',\n    'calibrated-cpu-throttling',\n  ],\n  iconName: 'performance',\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network-conditions.network-offline',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.goOffline),\n  async loadActionDelegate() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingManager.ActionDelegate();\n  },\n  tags: [\n    i18nLazyString(UIStrings.device),\n    i18nLazyString(UIStrings.throttlingTag),\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network-conditions.network-low-end-mobile',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.enableSlowGThrottling),\n  async loadActionDelegate() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingManager.ActionDelegate();\n  },\n  tags: [\n    i18nLazyString(UIStrings.device),\n    i18nLazyString(UIStrings.throttlingTag),\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network-conditions.network-mid-tier-mobile',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.enableFastGThrottling),\n  async loadActionDelegate() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingManager.ActionDelegate();\n  },\n  tags: [\n    i18nLazyString(UIStrings.device),\n    i18nLazyString(UIStrings.throttlingTag),\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network-conditions.network-online',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.goOnline),\n  async loadActionDelegate() {\n    const MobileThrottling = await loadMobileThrottlingModule();\n    return new MobileThrottling.ThrottlingManager.ActionDelegate();\n  },\n  tags: [\n    i18nLazyString(UIStrings.device),\n    i18nLazyString(UIStrings.throttlingTag),\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  settingName: 'custom-network-conditions',\n  settingType: Common.Settings.SettingType.ARRAY,\n  defaultValue: [],\n});\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Extensions from '../../models/extensions/extensions.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as NetworkForward from './forward/forward.js';\nimport type * as Network from './network.js';\n\nconst UIStrings = {\n  /**\n   *@description Command for showing the 'Network' tool\n   */\n  showNetwork: 'Show Network',\n  /**\n   *@description Title of the Network tool\n   */\n  network: 'Network',\n  /**\n   *@description Command for showing the 'Network request blocking' tool\n   */\n  showNetworkRequestBlocking: 'Show Network request blocking',\n  /**\n   *@description Title of the 'Network request blocking' tool in the bottom drawer\n   */\n  networkRequestBlocking: 'Network request blocking',\n  /**\n   *@description Command for showing the 'Network conditions' tool\n   */\n  showNetworkConditions: 'Show Network conditions',\n  /**\n   *@description Title of the 'Network conditions' tool in the bottom drawer\n   */\n  networkConditions: 'Network conditions',\n  /**\n   *@description A tag of Network Conditions tool that can be searched in the command menu\n   */\n  diskCache: 'disk cache',\n  /**\n   *@description A tag of Network Conditions tool that can be searched in the command menu\n   */\n  networkThrottling: 'network throttling',\n  /**\n   *@description Command for showing the 'Search' tool\n   */\n  showSearch: 'Show Search',\n  /**\n   *@description Title of a search bar or tool\n   */\n  search: 'Search',\n  /**\n   *@description Title of an action in the network tool to toggle recording\n   */\n  recordNetworkLog: 'Record network log',\n  /**\n   *@description Title of an action in the network tool to toggle recording\n   */\n  stopRecordingNetworkLog: 'Stop recording network log',\n  /**\n   *@description Title of an action that hides network request details\n   */\n  hideRequestDetails: 'Hide request details',\n  /**\n   *@description Title of a setting under the Network category in Settings\n   */\n  colorcodeResourceTypes: 'Color-code resource types',\n  /**\n   *@description A tag of Network color-code resource types that can be searched in the command menu\n   */\n  colorCode: 'color code',\n  /**\n   *@description A tag of Network color-code resource types that can be searched in the command menu\n   */\n  resourceType: 'resource type',\n  /**\n   *@description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  colorCodeByResourceType: 'Color code by resource type',\n  /**\n   *@description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  useDefaultColors: 'Use default colors',\n  /**\n   *@description Title of a setting under the Network category in Settings\n   */\n  groupNetworkLogByFrame: 'Group network log by frame',\n  /**\n   *@description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  netWork: 'network',\n  /**\n   *@description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  frame: 'frame',\n  /**\n   *@description A tag of Group Network by frame setting that can be searched in the command menu\n   */\n  group: 'group',\n  /**\n   *@description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  groupNetworkLogItemsByFrame: 'Group network log items by frame',\n  /**\n   *@description Title of a setting under the Network category that can be invoked through the Command Menu\n   */\n  dontGroupNetworkLogItemsByFrame: 'Don\\'t group network log items by frame',\n  /**\n   *@description Title of a button for clearing the network log\n   */\n  clear: 'Clear network log',\n  /**\n   *@description Title of an action in the Network request blocking panel to add a new URL pattern to the blocklist.\n   */\n  addNetworkRequestBlockingPattern: 'Add network request blocking pattern',\n  /**\n   *@description Title of an action in the Network request blocking panel to clear all URL patterns.\n   */\n  removeAllNetworkRequestBlockingPatterns: 'Remove all network request blocking patterns',\n  /**\n   * @description Title of an action in the Network panel (and title of a setting in the Network category)\n   *              that enables options in the UI to copy or export HAR (not translatable) with sensitive data.\n   */\n  allowToGenerateHarWithSensitiveData: 'Allow to generate `HAR` with sensitive data',\n  /**\n   * @description Title of an action in the Network panel that disables options in the UI to copy or export\n   *              HAR (not translatable) with sensitive data.\n   */\n  dontAllowToGenerateHarWithSensitiveData: 'Don\\'t allow to generate `HAR` with sensitive data',\n  /**\n   * @description Tooltip shown as documentation when hovering the (?) icon next to the \"Allow to generate\n   *              HAR with sensitive data\" option in the Settings panel.\n   */\n  allowToGenerateHarWithSensitiveDataDocumentation:\n      'By default generated HAR logs are sanitized and don\\'t include `Cookie`, `Set-Cookie`, or `Authorization` HTTP headers. When this setting is enabled, options to export/copy HAR with sensitive data are provided.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/network/network-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedNetworkModule: (typeof Network|undefined);\n\nconst isNode = Root.Runtime.Runtime.isNode();\n\nasync function loadNetworkModule(): Promise<typeof Network> {\n  if (!loadedNetworkModule) {\n    loadedNetworkModule = await import('./network.js');\n  }\n  return loadedNetworkModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (loadedNetworkModule: typeof Network) => T[]): T[] {\n  if (loadedNetworkModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedNetworkModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'network',\n  commandPrompt: i18nLazyString(UIStrings.showNetwork),\n  title: i18nLazyString(UIStrings.network),\n  order: 40,\n  isPreviewFeature: isNode,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'network.blocked-urls',\n  commandPrompt: i18nLazyString(UIStrings.showNetworkRequestBlocking),\n  title: i18nLazyString(UIStrings.networkRequestBlocking),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 60,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return new Network.BlockedURLsPane.BlockedURLsPane();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'network.config',\n  commandPrompt: i18nLazyString(UIStrings.showNetworkConditions),\n  title: i18nLazyString(UIStrings.networkConditions),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 40,\n  tags: [\n    i18nLazyString(UIStrings.diskCache),\n    i18nLazyString(UIStrings.networkThrottling),\n    i18n.i18n.lockedLazyString('useragent'),\n    i18n.i18n.lockedLazyString('user agent'),\n    i18n.i18n.lockedLazyString('user-agent'),\n  ],\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkConfigView.NetworkConfigView.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NETWORK_SIDEBAR,\n  id: 'network.search-network-tab',\n  commandPrompt: i18nLazyString(UIStrings.showSearch),\n  title: i18nLazyString(UIStrings.search),\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.SearchNetworkView.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.recordNetworkLog),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopRecordingNetworkLog),\n    },\n  ],\n  bindings: [\n    {\n      shortcut: 'Ctrl+E',\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n    },\n    {\n      shortcut: 'Meta+E',\n      platform: UI.ActionRegistration.Platforms.MAC,\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.clear',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.clear),\n  iconClass: UI.ActionRegistration.IconClass.CLEAR,\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  bindings: [\n    {\n      shortcut: 'Ctrl+L',\n    },\n    {\n      shortcut: 'Meta+K',\n      platform: UI.ActionRegistration.Platforms.MAC,\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.hide-request-details',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.hideRequestDetails),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      shortcut: 'Esc',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.search',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.search),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.NetworkPanel.NetworkPanel]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+F',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.DEVTOOLS_DEFAULT,\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+F',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.DEVTOOLS_DEFAULT,\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.add-network-request-blocking-pattern',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.addNetworkRequestBlockingPattern),\n  iconClass: UI.ActionRegistration.IconClass.PLUS,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.BlockedURLsPane.BlockedURLsPane]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.BlockedURLsPane.ActionDelegate();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'network.remove-all-network-request-blocking-patterns',\n  category: UI.ActionRegistration.ActionCategory.NETWORK,\n  title: i18nLazyString(UIStrings.removeAllNetworkRequestBlockingPatterns),\n  iconClass: UI.ActionRegistration.IconClass.CLEAR,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Network => [Network.BlockedURLsPane.BlockedURLsPane]);\n  },\n  async loadActionDelegate() {\n    const Network = await loadNetworkModule();\n    return new Network.BlockedURLsPane.ActionDelegate();\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.allowToGenerateHarWithSensitiveData),\n  settingName: 'network.show-options-to-generate-har-with-sensitive-data',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18n.i18n.lockedLazyString('HAR'),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.allowToGenerateHarWithSensitiveData),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.dontAllowToGenerateHarWithSensitiveData),\n    },\n  ],\n  learnMore: {\n    url: 'https://goo.gle/devtools-export-hars' as Platform.DevToolsPath.UrlString,\n    tooltip: i18nLazyString(UIStrings.allowToGenerateHarWithSensitiveDataDocumentation),\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.colorcodeResourceTypes),\n  settingName: 'network-color-code-resource-types',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.colorCode),\n    i18nLazyString(UIStrings.resourceType),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.colorCodeByResourceType),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.useDefaultColors),\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.groupNetworkLogByFrame),\n  settingName: 'network.group-by-frame',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.netWork),\n    i18nLazyString(UIStrings.frame),\n    i18nLazyString(UIStrings.group),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.groupNetworkLogItemsByFrame),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.dontGroupNetworkLogItemsByFrame),\n    },\n  ],\n});\n\nUI.ViewManager.registerLocationResolver({\n  name: UI.ViewManager.ViewLocationValues.NETWORK_SIDEBAR,\n  category: UI.ViewManager.ViewLocationCategory.NETWORK,\n  async loadResolver() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n});\n\nUI.ContextMenu.registerProvider({\n  contextTypes() {\n    return [\n      SDK.NetworkRequest.NetworkRequest,\n      SDK.Resource.Resource,\n      Workspace.UISourceCode.UISourceCode,\n      SDK.TraceObject.RevealableNetworkRequest,\n    ];\n  },\n  async loadProvider() {\n    const Network = await loadNetworkModule();\n    return Network.NetworkPanel.NetworkPanel.instance();\n  },\n  experiment: undefined,\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.NetworkRequest.NetworkRequest,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.NETWORK_PANEL,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.RequestRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [NetworkForward.UIRequestLocation.UIRequestLocation];\n  },\n  destination: undefined,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.RequestLocationRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [NetworkForward.NetworkRequestId.NetworkRequestId];\n  },\n  destination: Common.Revealer.RevealerDestination.NETWORK_PANEL,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.RequestIdRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [NetworkForward.UIFilter.UIRequestFilter, Extensions.ExtensionServer.RevealableNetworkRequestFilter];\n  },\n  destination: Common.Revealer.RevealerDestination.NETWORK_PANEL,\n  async loadRevealer() {\n    const Network = await loadNetworkModule();\n    return new Network.NetworkPanel.NetworkLogWithFilterRevealer();\n  },\n});\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Resources from './application.js';\nimport * as PreloadingHelper from './preloading/helper/helper.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Application Panel Sidebar of the Application panel\n   */\n  application: 'Application',\n  /**\n   *@description Command for showing the 'Application' tool\n   */\n  showApplication: 'Show Application',\n  /**\n   *@description A tag of Application Panel that can be searched in the command menu\n   */\n  pwa: 'pwa',\n  /**\n   *@description Text of button in Clear Storage View of the Application panel\n   */\n  clearSiteData: 'Clear site data',\n  /**\n   *@description Title of an action that clears all site data including 3rd party cookies\n   */\n  clearSiteDataIncludingThirdparty: 'Clear site data (including third-party cookies)',\n  /**\n   *@description Title of an action under the Background Services category that can be invoked through the Command Menu\n   */\n  startRecordingEvents: 'Start recording events',\n  /**\n   *@description Title of an action under the Background Services category that can be invoked through the Command Menu\n   */\n  stopRecordingEvents: 'Stop recording events',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/application/application-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedResourcesModule: (typeof Resources|undefined);\n\nasync function loadResourcesModule(): Promise<typeof Resources> {\n  if (!loadedResourcesModule) {\n    loadedResourcesModule = await import('./application.js');\n  }\n  return loadedResourcesModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (elementsModule: typeof Resources) => T[]): T[] {\n  if (loadedResourcesModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedResourcesModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'resources',\n  title: i18nLazyString(UIStrings.application),\n  commandPrompt: i18nLazyString(UIStrings.showApplication),\n  order: 70,\n  async loadView() {\n    const Resources = await loadResourcesModule();\n    return Resources.ResourcesPanel.ResourcesPanel.instance();\n  },\n  tags: [i18nLazyString(UIStrings.pwa)],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.RESOURCES,\n  actionId: 'resources.clear',\n  title: i18nLazyString(UIStrings.clearSiteData),\n  async loadActionDelegate() {\n    const Resources = await loadResourcesModule();\n    return new Resources.StorageView.ActionDelegate();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.RESOURCES,\n  actionId: 'resources.clear-incl-third-party-cookies',\n  title: i18nLazyString(UIStrings.clearSiteDataIncludingThirdparty),\n  async loadActionDelegate() {\n    const Resources = await loadResourcesModule();\n    return new Resources.StorageView.ActionDelegate();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'background-service.toggle-recording',\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Resources => [Resources.BackgroundServiceView.BackgroundServiceView]);\n  },\n  async loadActionDelegate() {\n    const Resources = await loadResourcesModule();\n    return new Resources.BackgroundServiceView.ActionDelegate();\n  },\n  category: UI.ActionRegistration.ActionCategory.BACKGROUND_SERVICES,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.startRecordingEvents),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopRecordingEvents),\n    },\n  ],\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.Resource.Resource,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return new Resources.ResourcesPanel.ResourceRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.ResourceTreeModel.ResourceTreeFrame,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return new Resources.ResourcesPanel.FrameDetailsRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [PreloadingHelper.PreloadingForward.RuleSetView];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return new Resources.ResourcesPanel.RuleSetViewRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [PreloadingHelper.PreloadingForward.AttemptViewWithFilter];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return new Resources.ResourcesPanel.AttemptViewWithFilterRevealer();\n  },\n});\n", "// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Timeline from './timeline.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for the performance of something\n   */\n  performance: 'Performance',\n  /**\n   *@description Command for showing the 'Performance' tool\n   */\n  showPerformance: 'Show Performance',\n  /**\n   *@description Text to record a series of actions for analysis\n   */\n  record: 'Record',\n  /**\n   *@description Text of an item that stops the running task\n   */\n  stop: 'Stop',\n  /**\n   *@description Title of an action in the timeline tool to record reload\n   */\n  recordAndReload: 'Record and reload',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon download button\n   */\n  saveProfile: 'Save profile…',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon load button\n   */\n  loadProfile: 'Load profile…',\n  /**\n   *@description Prev button title in Film Strip View of the Performance panel\n   */\n  previousFrame: 'Previous frame',\n  /**\n   *@description Next button title in Film Strip View of the Performance panel\n   */\n  nextFrame: 'Next frame',\n  /**\n   *@description Title of an action in the timeline tool to show history\n   */\n  showRecentTimelineSessions: 'Show recent timeline sessions',\n  /**\n   *@description Title of an action that opens the previous recording in the performance panel\n   */\n  previousRecording: 'Previous recording',\n  /**\n   *@description Title of an action that opens the next recording in the performance panel\n   */\n  nextRecording: 'Next recording',\n  /**\n   *@description Title of a setting under the Performance category in Settings\n   */\n  hideChromeFrameInLayersView: 'Hide `chrome` frame in Layers view',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/timeline-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedTimelineModule: (typeof Timeline|undefined);\n\nasync function loadTimelineModule(): Promise<typeof Timeline> {\n  if (!loadedTimelineModule) {\n    loadedTimelineModule = await import('./timeline.js');\n  }\n  return loadedTimelineModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (timelineModule: typeof Timeline) => T[]): T[] {\n  if (loadedTimelineModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedTimelineModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'timeline',\n  title: i18nLazyString(UIStrings.performance),\n  commandPrompt: i18nLazyString(UIStrings.showPerformance),\n  order: 50,\n  async loadView() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.TimelinePanel.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.record),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stop),\n    },\n  ],\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.record-reload',\n  iconClass: UI.ActionRegistration.IconClass.REFRESH,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.recordAndReload),\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+Shift+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+Shift+E',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  actionId: 'timeline.save-to-file',\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.saveProfile),\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+S',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+S',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  actionId: 'timeline.load-from-file',\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.loadProfile),\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+O',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+O',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.jump-to-previous-frame',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.previousFrame),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      shortcut: '[',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.jump-to-next-frame',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.nextFrame),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      shortcut: ']',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.show-history',\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.showRecentTimelineSessions),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+H',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+Y',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.previous-recording',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.previousRecording),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Alt+Left',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+Left',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.next-recording',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.nextRecording),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Alt+Right',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+Right',\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERFORMANCE,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.hideChromeFrameInLayersView),\n  settingName: 'frame-viewer-hide-chrome-window',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n});\n\n// IMPORTANT: if you are updating this, you should also update the setting in\n// js_timeline-meta.\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERFORMANCE,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  settingName: 'annotations-hidden',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n});\n\nCommon.Linkifier.registerLinkifier({\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.CLSLinkifier.CLSRect]);\n  },\n  async loadLinkifier() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.CLSLinkifier.Linkifier.instance();\n  },\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.TIMELINE_MENU_OPEN,\n  actionId: 'timeline.load-from-file',\n  order: 10,\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.TIMELINE_MENU_OPEN,\n  actionId: 'timeline.save-to-file',\n  order: 15,\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [SDK.TraceObject.TraceObject];\n  },\n  destination: Common.Revealer.RevealerDestination.TIMELINE_PANEL,\n  async loadRevealer() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.TraceRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [SDK.TraceObject.RevealableEvent];\n  },\n  destination: Common.Revealer.RevealerDestination.TIMELINE_PANEL,\n  async loadRevealer() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.EventRevealer();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.Utils.InsightAIContext.ActiveInsight]);\n  },\n  destination: Common.Revealer.RevealerDestination.TIMELINE_PANEL,\n  async loadRevealer() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.InsightRevealer();\n  },\n});\n", "// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as MobileThrottling from '../../panels/mobile_throttling/mobile_throttling.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\n\nconst UIStrings = {\n  /**\n   *@description Text that refers to the main target.\n   */\n  main: 'Main',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/worker_app/WorkerMain.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet workerMainImplInstance: WorkerMainImpl;\n\nexport class WorkerMainImpl implements Common.Runnable.Runnable {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): WorkerMainImpl {\n    const {forceNew} = opts;\n    if (!workerMainImplInstance || forceNew) {\n      workerMainImplInstance = new WorkerMainImpl();\n    }\n\n    return workerMainImplInstance;\n  }\n\n  async run(): Promise<void> {\n    void SDK.Connections.initMainConnection(async () => {\n      if (await SDK.TargetManager.TargetManager.instance().maybeAttachInitialTarget()) {\n        return;\n      }\n      SDK.TargetManager.TargetManager.instance().createTarget(\n          'main', i18nString(UIStrings.main), SDK.Target.Type.ServiceWorker, null);\n    }, Components.TargetDetachedDialog.TargetDetachedDialog.connectionLost);\n    new MobileThrottling.NetworkPanelIndicator.NetworkPanelIndicator();\n  }\n}\n\nCommon.Runnable.registerEarlyInitializationRunnable(WorkerMainImpl.instance);\n\nSDK.ChildTargetManager.ChildTargetManager.install(async ({target, waitingForDebugger}) => {\n  // Only pause the new worker if debugging SW - we are going through the pause on start checkbox.\n  if (target.parentTarget() || target.type() !== SDK.Target.Type.ServiceWorker || !waitingForDebugger) {\n    return;\n  }\n  const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n  if (!debuggerModel) {\n    return;\n  }\n  if (!debuggerModel.isReadyToPause()) {\n    await debuggerModel.once(SDK.DebuggerModel.Events.DebuggerIsReadyToPause);\n  }\n  debuggerModel.pause();\n});\n"],
  "mappings": "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",
  "names": ["i18n", "SDK", "UI", "UIStrings", "str_", "i18nLazyString", "Common", "i18n", "UI", "UIStrings", "str_", "i18nLazyString", "i18n", "UI", "UIStrings", "str_", "i18nLazyString", "Common", "i18n", "UI", "UIStrings", "str_", "i18nLazyString", "MobileThrottling", "Common", "i18n", "Root", "SDK", "UI", "UIStrings", "str_", "i18nLazyString", "maybeRetrieveContextTypes", "Common", "i18n", "SDK", "UI", "UIStrings", "str_", "i18nLazyString", "maybeRetrieveContextTypes", "Common", "i18n", "SDK", "UI", "UIStrings", "str_", "i18nLazyString", "maybeRetrieveContextTypes", "Common", "i18n", "SDK", "UIStrings", "str_", "Root"]
}
