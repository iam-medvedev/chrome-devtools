{
  "version": 3,
  "sources": ["inspector_main-meta.prebundle.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as InspectorMain from './inspector_main.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of the Rendering tool. The rendering tool is a collection of settings that\n   * lets the user debug the rendering (i.e. how the website is drawn onto the screen) of the\n   * website.\n   * https://developer.chrome.com/docs/devtools/evaluate-performance/reference#rendering\n   */\n  rendering: 'Rendering',\n  /**\n   * @description Command for showing the 'Rendering' tool\n   */\n  showRendering: 'Show Rendering',\n  /**\n   * @description Command Menu search query that points to the Rendering tool. This refers to the\n   * process of drawing pixels onto the screen (called painting).\n   */\n  paint: 'paint',\n  /**\n   * @description Command Menu search query that points to the Rendering tool. Layout is a phase of\n   * rendering a website where the browser calculates where different elements in the website will go\n   * on the screen.\n   */\n  layout: 'layout',\n  /**\n   * @description Command Menu search query that points to the Rendering tool. 'fps' is an acronym\n   * for 'Frames per second'. It is in lowercase here because the search box the user will type this\n   * into is case-insensitive. If there is an equivalent acronym/shortening in the target language\n   * then a translation would be appropriate, otherwise it can be left in English.\n   */\n  fps: 'fps',\n  /**\n   * @description Command Menu search query that points to the Rendering tool.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/@media#media_types. This is something the user\n   * might type in to search for the setting to change the CSS media type.\n   */\n  cssMediaType: 'CSS media type',\n  /**\n   * @description Command Menu search query that points to the Rendering tool.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/@media#media_features This is something the\n   * user might type in to search for the setting to change the value of various CSS media features.\n   */\n  cssMediaFeature: 'CSS media feature',\n  /**\n   * @description Command Menu search query that points to the Rendering tool. Possible search term\n   * when the user wants to find settings related to visual impairment e.g. blurry vision, blindness.\n   */\n  visionDeficiency: 'vision deficiency',\n  /**\n   * @description Command Menu search query that points to the Rendering tool. Possible search term\n   * when the user wants to find settings related to color vision deficiency/color blindness.\n   */\n  colorVisionDeficiency: 'color vision deficiency',\n  /**\n   * @description Title of an action that reloads the inspected page.\n   */\n  reloadPage: 'Reload page',\n  /**\n   * @description Title of an action that 'hard' reloads the inspected page. A hard reload also\n   * clears the browser's cache, forcing it to reload the most recent version of the page.\n   */\n  hardReloadPage: 'Hard reload page',\n  /**\n   * @description Title of a setting under the Network category in Settings. All ads on the site will\n   * be blocked (the setting is forced on).\n   */\n  forceAdBlocking: 'Force ad blocking on this site',\n  /**\n   * @description A command available in the command menu to block all ads on the current site.\n   */\n  blockAds: 'Block ads on this site',\n  /**\n   * @description A command available in the command menu to disable ad blocking on the current site.\n   */\n  showAds: 'Show ads on this site, if allowed',\n  /**\n   * @description A command available in the command menu to automatically open DevTools when\n   * webpages create new popup windows.\n   */\n  autoOpenDevTools: 'Auto-open DevTools for popups',\n  /**\n   * @description A command available in the command menu to stop automatically opening DevTools when\n   * webpages create new popup windows.\n   */\n  doNotAutoOpen: 'Do not auto-open DevTools for popups',\n  /**\n   * @description Title of a setting under the Appearance category in Settings. When the webpage is\n   * paused by devtools, an overlay is shown on top of the page to indicate that it is paused. The\n   * overlay is a pause/unpause button and some text, which appears on top of the paused page. This\n   * setting turns off this overlay.\n   */\n  disablePaused: 'Disable paused state overlay',\n  /**\n   * @description Title of an action that toggle\n   * \"forces CSS prefers-color-scheme\" color\n   */\n  toggleCssPrefersColorSchemeMedia: 'Toggle CSS media feature prefers-color-scheme',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/inspector_main/inspector_main-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedInspectorMainModule: (typeof InspectorMain|undefined);\n\nasync function loadInspectorMainModule(): Promise<typeof InspectorMain> {\n  if (!loadedInspectorMainModule) {\n    loadedInspectorMainModule = await import('./inspector_main.js');\n  }\n  return loadedInspectorMainModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'rendering',\n  title: i18nLazyString(UIStrings.rendering),\n  commandPrompt: i18nLazyString(UIStrings.showRendering),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 50,\n  async loadView() {\n    const InspectorMain = await loadInspectorMainModule();\n    return new InspectorMain.RenderingOptions.RenderingOptionsView();\n  },\n  tags: [\n    i18nLazyString(UIStrings.paint),\n    i18nLazyString(UIStrings.layout),\n    i18nLazyString(UIStrings.fps),\n    i18nLazyString(UIStrings.cssMediaType),\n    i18nLazyString(UIStrings.cssMediaFeature),\n    i18nLazyString(UIStrings.visionDeficiency),\n    i18nLazyString(UIStrings.colorVisionDeficiency),\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.NAVIGATION,\n  actionId: 'inspector-main.reload',\n  async loadActionDelegate() {\n    const InspectorMain = await loadInspectorMainModule();\n    return new InspectorMain.InspectorMain.ReloadActionDelegate();\n  },\n  iconClass: UI.ActionRegistration.IconClass.REFRESH,\n  title: i18nLazyString(UIStrings.reloadPage),\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+R',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'F5',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Meta+R',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.NAVIGATION,\n  actionId: 'inspector-main.hard-reload',\n  async loadActionDelegate() {\n    const InspectorMain = await loadInspectorMainModule();\n    return new InspectorMain.InspectorMain.ReloadActionDelegate();\n  },\n  title: i18nLazyString(UIStrings.hardReloadPage),\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Shift+Ctrl+R',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Shift+F5',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+F5',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.WINDOWS_LINUX,\n      shortcut: 'Ctrl+Shift+F5',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.MAC,\n      shortcut: 'Shift+Meta+R',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'rendering.toggle-prefers-color-scheme',\n  category: UI.ActionRegistration.ActionCategory.RENDERING,\n  title: i18nLazyString(UIStrings.toggleCssPrefersColorSchemeMedia),\n  async loadActionDelegate() {\n    const InspectorMain = await loadInspectorMainModule();\n    return new InspectorMain.RenderingOptions.ReloadActionDelegate();\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  title: i18nLazyString(UIStrings.forceAdBlocking),\n  settingName: 'network.ad-blocking-enabled',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  storageType: Common.Settings.SettingStorageType.SESSION,\n  defaultValue: false,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.blockAds),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.showAds),\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.GLOBAL,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.autoOpenDevTools),\n  settingName: 'auto-attach-to-created-pages',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  order: 2,\n  defaultValue: false,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.autoOpenDevTools),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.doNotAutoOpen),\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.APPEARANCE,\n  storageType: Common.Settings.SettingStorageType.SYNCED,\n  title: i18nLazyString(UIStrings.disablePaused),\n  settingName: 'disable-paused-state-overlay',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n});\n\nUI.Toolbar.registerToolbarItem({\n  async loadItem() {\n    const InspectorMain = await loadInspectorMainModule();\n    return InspectorMain.InspectorMain.NodeIndicator.instance();\n  },\n  order: 2,\n  location: UI.Toolbar.ToolbarItemLocation.MAIN_TOOLBAR_LEFT,\n});\n\nUI.Toolbar.registerToolbarItem({\n  async loadItem() {\n    const InspectorMain = await loadInspectorMainModule();\n    return InspectorMain.OutermostTargetSelector.OutermostTargetSelector.instance();\n  },\n  order: 98,\n  location: UI.Toolbar.ToolbarItemLocation.MAIN_TOOLBAR_RIGHT,\n});\n"],
  "mappings": "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",
  "names": []
}
